
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tar_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403f28 <.init>:
  403f28:	stp	x29, x30, [sp, #-16]!
  403f2c:	mov	x29, sp
  403f30:	bl	404f2c <wcrtomb@plt+0x30c>
  403f34:	ldp	x29, x30, [sp], #16
  403f38:	ret

Disassembly of section .plt:

0000000000403f40 <mbrtowc@plt-0x20>:
  403f40:	stp	x16, x30, [sp, #-16]!
  403f44:	adrp	x16, 47e000 <_obstack_memory_used@@Base+0x3be10>
  403f48:	ldr	x17, [x16, #4088]
  403f4c:	add	x16, x16, #0xff8
  403f50:	br	x17
  403f54:	nop
  403f58:	nop
  403f5c:	nop

0000000000403f60 <mbrtowc@plt>:
  403f60:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  403f64:	ldr	x17, [x16]
  403f68:	add	x16, x16, #0x0
  403f6c:	br	x17

0000000000403f70 <memcpy@plt>:
  403f70:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  403f74:	ldr	x17, [x16, #8]
  403f78:	add	x16, x16, #0x8
  403f7c:	br	x17

0000000000403f80 <memmove@plt>:
  403f80:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  403f84:	ldr	x17, [x16, #16]
  403f88:	add	x16, x16, #0x10
  403f8c:	br	x17

0000000000403f90 <_exit@plt>:
  403f90:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  403f94:	ldr	x17, [x16, #24]
  403f98:	add	x16, x16, #0x18
  403f9c:	br	x17

0000000000403fa0 <getcwd@plt>:
  403fa0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  403fa4:	ldr	x17, [x16, #32]
  403fa8:	add	x16, x16, #0x20
  403fac:	br	x17

0000000000403fb0 <setuid@plt>:
  403fb0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  403fb4:	ldr	x17, [x16, #40]
  403fb8:	add	x16, x16, #0x28
  403fbc:	br	x17

0000000000403fc0 <strtok@plt>:
  403fc0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  403fc4:	ldr	x17, [x16, #48]
  403fc8:	add	x16, x16, #0x30
  403fcc:	br	x17

0000000000403fd0 <fwrite_unlocked@plt>:
  403fd0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  403fd4:	ldr	x17, [x16, #56]
  403fd8:	add	x16, x16, #0x38
  403fdc:	br	x17

0000000000403fe0 <strtoul@plt>:
  403fe0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  403fe4:	ldr	x17, [x16, #64]
  403fe8:	add	x16, x16, #0x40
  403fec:	br	x17

0000000000403ff0 <strlen@plt>:
  403ff0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  403ff4:	ldr	x17, [x16, #72]
  403ff8:	add	x16, x16, #0x48
  403ffc:	br	x17

0000000000404000 <fputs@plt>:
  404000:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404004:	ldr	x17, [x16, #80]
  404008:	add	x16, x16, #0x50
  40400c:	br	x17

0000000000404010 <__sprintf_chk@plt>:
  404010:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404014:	ldr	x17, [x16, #88]
  404018:	add	x16, x16, #0x58
  40401c:	br	x17

0000000000404020 <exit@plt>:
  404020:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404024:	ldr	x17, [x16, #96]
  404028:	add	x16, x16, #0x60
  40402c:	br	x17

0000000000404030 <raise@plt>:
  404030:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404034:	ldr	x17, [x16, #104]
  404038:	add	x16, x16, #0x68
  40403c:	br	x17

0000000000404040 <dup@plt>:
  404040:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404044:	ldr	x17, [x16, #112]
  404048:	add	x16, x16, #0x70
  40404c:	br	x17

0000000000404050 <error@plt>:
  404050:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404054:	ldr	x17, [x16, #120]
  404058:	add	x16, x16, #0x78
  40405c:	br	x17

0000000000404060 <fchdir@plt>:
  404060:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404064:	ldr	x17, [x16, #128]
  404068:	add	x16, x16, #0x80
  40406c:	br	x17

0000000000404070 <rpmatch@plt>:
  404070:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404074:	ldr	x17, [x16, #136]
  404078:	add	x16, x16, #0x88
  40407c:	br	x17

0000000000404080 <execl@plt>:
  404080:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404084:	ldr	x17, [x16, #144]
  404088:	add	x16, x16, #0x90
  40408c:	br	x17

0000000000404090 <flockfile@plt>:
  404090:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404094:	ldr	x17, [x16, #152]
  404098:	add	x16, x16, #0x98
  40409c:	br	x17

00000000004040a0 <wctype@plt>:
  4040a0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4040a4:	ldr	x17, [x16, #160]
  4040a8:	add	x16, x16, #0xa0
  4040ac:	br	x17

00000000004040b0 <sigprocmask@plt>:
  4040b0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4040b4:	ldr	x17, [x16, #168]
  4040b8:	add	x16, x16, #0xa8
  4040bc:	br	x17

00000000004040c0 <strnlen@plt>:
  4040c0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4040c4:	ldr	x17, [x16, #176]
  4040c8:	add	x16, x16, #0xb0
  4040cc:	br	x17

00000000004040d0 <geteuid@plt>:
  4040d0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4040d4:	ldr	x17, [x16, #184]
  4040d8:	add	x16, x16, #0xb8
  4040dc:	br	x17

00000000004040e0 <linkat@plt>:
  4040e0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4040e4:	ldr	x17, [x16, #192]
  4040e8:	add	x16, x16, #0xc0
  4040ec:	br	x17

00000000004040f0 <localtime_r@plt>:
  4040f0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4040f4:	ldr	x17, [x16, #200]
  4040f8:	add	x16, x16, #0xc8
  4040fc:	br	x17

0000000000404100 <setenv@plt>:
  404100:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404104:	ldr	x17, [x16, #208]
  404108:	add	x16, x16, #0xd0
  40410c:	br	x17

0000000000404110 <getgrnam@plt>:
  404110:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404114:	ldr	x17, [x16, #216]
  404118:	add	x16, x16, #0xd8
  40411c:	br	x17

0000000000404120 <getuid@plt>:
  404120:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404124:	ldr	x17, [x16, #224]
  404128:	add	x16, x16, #0xe0
  40412c:	br	x17

0000000000404130 <pipe@plt>:
  404130:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404134:	ldr	x17, [x16, #232]
  404138:	add	x16, x16, #0xe8
  40413c:	br	x17

0000000000404140 <opendir@plt>:
  404140:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404144:	ldr	x17, [x16, #240]
  404148:	add	x16, x16, #0xf0
  40414c:	br	x17

0000000000404150 <strftime@plt>:
  404150:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404154:	ldr	x17, [x16, #248]
  404158:	add	x16, x16, #0xf8
  40415c:	br	x17

0000000000404160 <unlinkat@plt>:
  404160:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404164:	ldr	x17, [x16, #256]
  404168:	add	x16, x16, #0x100
  40416c:	br	x17

0000000000404170 <fputc@plt>:
  404170:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404174:	ldr	x17, [x16, #264]
  404178:	add	x16, x16, #0x108
  40417c:	br	x17

0000000000404180 <iswcntrl@plt>:
  404180:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404184:	ldr	x17, [x16, #272]
  404188:	add	x16, x16, #0x110
  40418c:	br	x17

0000000000404190 <clock_gettime@plt>:
  404190:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404194:	ldr	x17, [x16, #280]
  404198:	add	x16, x16, #0x118
  40419c:	br	x17

00000000004041a0 <qsort@plt>:
  4041a0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4041a4:	ldr	x17, [x16, #288]
  4041a8:	add	x16, x16, #0x120
  4041ac:	br	x17

00000000004041b0 <pathconf@plt>:
  4041b0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4041b4:	ldr	x17, [x16, #296]
  4041b8:	add	x16, x16, #0x128
  4041bc:	br	x17

00000000004041c0 <fork@plt>:
  4041c0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4041c4:	ldr	x17, [x16, #304]
  4041c8:	add	x16, x16, #0x130
  4041cc:	br	x17

00000000004041d0 <lseek@plt>:
  4041d0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4041d4:	ldr	x17, [x16, #312]
  4041d8:	add	x16, x16, #0x138
  4041dc:	br	x17

00000000004041e0 <__fpending@plt>:
  4041e0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4041e4:	ldr	x17, [x16, #320]
  4041e8:	add	x16, x16, #0x140
  4041ec:	br	x17

00000000004041f0 <__ctype_tolower_loc@plt>:
  4041f0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4041f4:	ldr	x17, [x16, #328]
  4041f8:	add	x16, x16, #0x148
  4041fc:	br	x17

0000000000404200 <snprintf@plt>:
  404200:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404204:	ldr	x17, [x16, #336]
  404208:	add	x16, x16, #0x150
  40420c:	br	x17

0000000000404210 <localeconv@plt>:
  404210:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404214:	ldr	x17, [x16, #344]
  404218:	add	x16, x16, #0x158
  40421c:	br	x17

0000000000404220 <stpcpy@plt>:
  404220:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404224:	ldr	x17, [x16, #352]
  404228:	add	x16, x16, #0x160
  40422c:	br	x17

0000000000404230 <fileno@plt>:
  404230:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404234:	ldr	x17, [x16, #360]
  404238:	add	x16, x16, #0x168
  40423c:	br	x17

0000000000404240 <localtime@plt>:
  404240:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404244:	ldr	x17, [x16, #368]
  404248:	add	x16, x16, #0x170
  40424c:	br	x17

0000000000404250 <__memcpy_chk@plt>:
  404250:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404254:	ldr	x17, [x16, #376]
  404258:	add	x16, x16, #0x178
  40425c:	br	x17

0000000000404260 <mkdirat@plt>:
  404260:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404264:	ldr	x17, [x16, #384]
  404268:	add	x16, x16, #0x180
  40426c:	br	x17

0000000000404270 <signal@plt>:
  404270:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404274:	ldr	x17, [x16, #392]
  404278:	add	x16, x16, #0x188
  40427c:	br	x17

0000000000404280 <acl_delete_def_file@plt>:
  404280:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404284:	ldr	x17, [x16, #400]
  404288:	add	x16, x16, #0x190
  40428c:	br	x17

0000000000404290 <__snprintf_chk@plt>:
  404290:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404294:	ldr	x17, [x16, #408]
  404298:	add	x16, x16, #0x198
  40429c:	br	x17

00000000004042a0 <fclose@plt>:
  4042a0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4042a4:	ldr	x17, [x16, #416]
  4042a8:	add	x16, x16, #0x1a0
  4042ac:	br	x17

00000000004042b0 <fsync@plt>:
  4042b0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4042b4:	ldr	x17, [x16, #424]
  4042b8:	add	x16, x16, #0x1a8
  4042bc:	br	x17

00000000004042c0 <getpid@plt>:
  4042c0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4042c4:	ldr	x17, [x16, #432]
  4042c8:	add	x16, x16, #0x1b0
  4042cc:	br	x17

00000000004042d0 <nl_langinfo@plt>:
  4042d0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4042d4:	ldr	x17, [x16, #440]
  4042d8:	add	x16, x16, #0x1b8
  4042dc:	br	x17

00000000004042e0 <fopen@plt>:
  4042e0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4042e4:	ldr	x17, [x16, #448]
  4042e8:	add	x16, x16, #0x1c0
  4042ec:	br	x17

00000000004042f0 <__vsnprintf_chk@plt>:
  4042f0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4042f4:	ldr	x17, [x16, #456]
  4042f8:	add	x16, x16, #0x1c8
  4042fc:	br	x17

0000000000404300 <iswctype@plt>:
  404300:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404304:	ldr	x17, [x16, #464]
  404308:	add	x16, x16, #0x1d0
  40430c:	br	x17

0000000000404310 <malloc@plt>:
  404310:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404314:	ldr	x17, [x16, #472]
  404318:	add	x16, x16, #0x1d8
  40431c:	br	x17

0000000000404320 <wcwidth@plt>:
  404320:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404324:	ldr	x17, [x16, #480]
  404328:	add	x16, x16, #0x1e0
  40432c:	br	x17

0000000000404330 <funlockfile@plt>:
  404330:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404334:	ldr	x17, [x16, #488]
  404338:	add	x16, x16, #0x1e8
  40433c:	br	x17

0000000000404340 <open@plt>:
  404340:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404344:	ldr	x17, [x16, #496]
  404348:	add	x16, x16, #0x1f0
  40434c:	br	x17

0000000000404350 <__vasprintf_chk@plt>:
  404350:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404354:	ldr	x17, [x16, #504]
  404358:	add	x16, x16, #0x1f8
  40435c:	br	x17

0000000000404360 <tzset@plt>:
  404360:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404364:	ldr	x17, [x16, #512]
  404368:	add	x16, x16, #0x200
  40436c:	br	x17

0000000000404370 <__strcpy_chk@plt>:
  404370:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404374:	ldr	x17, [x16, #520]
  404378:	add	x16, x16, #0x208
  40437c:	br	x17

0000000000404380 <__isoc99_fscanf@plt>:
  404380:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404384:	ldr	x17, [x16, #528]
  404388:	add	x16, x16, #0x210
  40438c:	br	x17

0000000000404390 <__strtol_internal@plt>:
  404390:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404394:	ldr	x17, [x16, #536]
  404398:	add	x16, x16, #0x218
  40439c:	br	x17

00000000004043a0 <sigemptyset@plt>:
  4043a0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4043a4:	ldr	x17, [x16, #544]
  4043a8:	add	x16, x16, #0x220
  4043ac:	br	x17

00000000004043b0 <futimens@plt>:
  4043b0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4043b4:	ldr	x17, [x16, #552]
  4043b8:	add	x16, x16, #0x228
  4043bc:	br	x17

00000000004043c0 <strncmp@plt>:
  4043c0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4043c4:	ldr	x17, [x16, #560]
  4043c8:	add	x16, x16, #0x230
  4043cc:	br	x17

00000000004043d0 <bindtextdomain@plt>:
  4043d0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4043d4:	ldr	x17, [x16, #568]
  4043d8:	add	x16, x16, #0x238
  4043dc:	br	x17

00000000004043e0 <__libc_start_main@plt>:
  4043e0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4043e4:	ldr	x17, [x16, #576]
  4043e8:	add	x16, x16, #0x240
  4043ec:	br	x17

00000000004043f0 <setxattr@plt>:
  4043f0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4043f4:	ldr	x17, [x16, #584]
  4043f8:	add	x16, x16, #0x248
  4043fc:	br	x17

0000000000404400 <__printf_chk@plt>:
  404400:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404404:	ldr	x17, [x16, #592]
  404408:	add	x16, x16, #0x250
  40440c:	br	x17

0000000000404410 <memset@plt>:
  404410:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404414:	ldr	x17, [x16, #600]
  404418:	add	x16, x16, #0x258
  40441c:	br	x17

0000000000404420 <fdopen@plt>:
  404420:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404424:	ldr	x17, [x16, #608]
  404428:	add	x16, x16, #0x260
  40442c:	br	x17

0000000000404430 <gettimeofday@plt>:
  404430:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404434:	ldr	x17, [x16, #616]
  404438:	add	x16, x16, #0x268
  40443c:	br	x17

0000000000404440 <getpwnam@plt>:
  404440:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404444:	ldr	x17, [x16, #624]
  404448:	add	x16, x16, #0x270
  40444c:	br	x17

0000000000404450 <gmtime_r@plt>:
  404450:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404454:	ldr	x17, [x16, #632]
  404458:	add	x16, x16, #0x278
  40445c:	br	x17

0000000000404460 <sleep@plt>:
  404460:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404464:	ldr	x17, [x16, #640]
  404468:	add	x16, x16, #0x280
  40446c:	br	x17

0000000000404470 <fchmod@plt>:
  404470:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404474:	ldr	x17, [x16, #648]
  404478:	add	x16, x16, #0x288
  40447c:	br	x17

0000000000404480 <__xmknodat@plt>:
  404480:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404484:	ldr	x17, [x16, #656]
  404488:	add	x16, x16, #0x290
  40448c:	br	x17

0000000000404490 <strerror_r@plt>:
  404490:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404494:	ldr	x17, [x16, #664]
  404498:	add	x16, x16, #0x298
  40449c:	br	x17

00000000004044a0 <__vfprintf_chk@plt>:
  4044a0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4044a4:	ldr	x17, [x16, #672]
  4044a8:	add	x16, x16, #0x2a0
  4044ac:	br	x17

00000000004044b0 <__strtoul_internal@plt>:
  4044b0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4044b4:	ldr	x17, [x16, #680]
  4044b8:	add	x16, x16, #0x2a8
  4044bc:	br	x17

00000000004044c0 <calloc@plt>:
  4044c0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4044c4:	ldr	x17, [x16, #688]
  4044c8:	add	x16, x16, #0x2b0
  4044cc:	br	x17

00000000004044d0 <lsetxattr@plt>:
  4044d0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4044d4:	ldr	x17, [x16, #696]
  4044d8:	add	x16, x16, #0x2b8
  4044dc:	br	x17

00000000004044e0 <listxattr@plt>:
  4044e0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4044e4:	ldr	x17, [x16, #704]
  4044e8:	add	x16, x16, #0x2c0
  4044ec:	br	x17

00000000004044f0 <execv@plt>:
  4044f0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4044f4:	ldr	x17, [x16, #712]
  4044f8:	add	x16, x16, #0x2c8
  4044fc:	br	x17

0000000000404500 <strcasecmp@plt>:
  404500:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404504:	ldr	x17, [x16, #720]
  404508:	add	x16, x16, #0x2d0
  40450c:	br	x17

0000000000404510 <gmtime@plt>:
  404510:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404514:	ldr	x17, [x16, #728]
  404518:	add	x16, x16, #0x2d8
  40451c:	br	x17

0000000000404520 <readdir@plt>:
  404520:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404524:	ldr	x17, [x16, #736]
  404528:	add	x16, x16, #0x2e0
  40452c:	br	x17

0000000000404530 <realloc@plt>:
  404530:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404534:	ldr	x17, [x16, #744]
  404538:	add	x16, x16, #0x2e8
  40453c:	br	x17

0000000000404540 <__ctype_toupper_loc@plt>:
  404540:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404544:	ldr	x17, [x16, #752]
  404548:	add	x16, x16, #0x2f0
  40454c:	br	x17

0000000000404550 <acl_set_file@plt>:
  404550:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404554:	ldr	x17, [x16, #760]
  404558:	add	x16, x16, #0x2f8
  40455c:	br	x17

0000000000404560 <getpagesize@plt>:
  404560:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404564:	ldr	x17, [x16, #768]
  404568:	add	x16, x16, #0x300
  40456c:	br	x17

0000000000404570 <lgetxattr@plt>:
  404570:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404574:	ldr	x17, [x16, #776]
  404578:	add	x16, x16, #0x308
  40457c:	br	x17

0000000000404580 <strdup@plt>:
  404580:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404584:	ldr	x17, [x16, #784]
  404588:	add	x16, x16, #0x310
  40458c:	br	x17

0000000000404590 <closedir@plt>:
  404590:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404594:	ldr	x17, [x16, #792]
  404598:	add	x16, x16, #0x318
  40459c:	br	x17

00000000004045a0 <strerror@plt>:
  4045a0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4045a4:	ldr	x17, [x16, #800]
  4045a8:	add	x16, x16, #0x320
  4045ac:	br	x17

00000000004045b0 <__openat_2@plt>:
  4045b0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4045b4:	ldr	x17, [x16, #808]
  4045b8:	add	x16, x16, #0x328
  4045bc:	br	x17

00000000004045c0 <close@plt>:
  4045c0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4045c4:	ldr	x17, [x16, #816]
  4045c8:	add	x16, x16, #0x330
  4045cc:	br	x17

00000000004045d0 <strrchr@plt>:
  4045d0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4045d4:	ldr	x17, [x16, #824]
  4045d8:	add	x16, x16, #0x338
  4045dc:	br	x17

00000000004045e0 <acl_to_text@plt>:
  4045e0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4045e4:	ldr	x17, [x16, #832]
  4045e8:	add	x16, x16, #0x340
  4045ec:	br	x17

00000000004045f0 <__gmon_start__@plt>:
  4045f0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4045f4:	ldr	x17, [x16, #840]
  4045f8:	add	x16, x16, #0x348
  4045fc:	br	x17

0000000000404600 <mktime@plt>:
  404600:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404604:	ldr	x17, [x16, #848]
  404608:	add	x16, x16, #0x350
  40460c:	br	x17

0000000000404610 <fdopendir@plt>:
  404610:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404614:	ldr	x17, [x16, #856]
  404618:	add	x16, x16, #0x358
  40461c:	br	x17

0000000000404620 <write@plt>:
  404620:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404624:	ldr	x17, [x16, #864]
  404628:	add	x16, x16, #0x360
  40462c:	br	x17

0000000000404630 <btowc@plt>:
  404630:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404634:	ldr	x17, [x16, #872]
  404638:	add	x16, x16, #0x368
  40463c:	br	x17

0000000000404640 <mkdtemp@plt>:
  404640:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404644:	ldr	x17, [x16, #880]
  404648:	add	x16, x16, #0x370
  40464c:	br	x17

0000000000404650 <abort@plt>:
  404650:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404654:	ldr	x17, [x16, #888]
  404658:	add	x16, x16, #0x378
  40465c:	br	x17

0000000000404660 <setgid@plt>:
  404660:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404664:	ldr	x17, [x16, #896]
  404668:	add	x16, x16, #0x380
  40466c:	br	x17

0000000000404670 <mbsinit@plt>:
  404670:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404674:	ldr	x17, [x16, #904]
  404678:	add	x16, x16, #0x388
  40467c:	br	x17

0000000000404680 <__overflow@plt>:
  404680:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404684:	ldr	x17, [x16, #912]
  404688:	add	x16, x16, #0x390
  40468c:	br	x17

0000000000404690 <access@plt>:
  404690:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404694:	ldr	x17, [x16, #920]
  404698:	add	x16, x16, #0x398
  40469c:	br	x17

00000000004046a0 <fpathconf@plt>:
  4046a0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4046a4:	ldr	x17, [x16, #928]
  4046a8:	add	x16, x16, #0x3a0
  4046ac:	br	x17

00000000004046b0 <puts@plt>:
  4046b0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4046b4:	ldr	x17, [x16, #936]
  4046b8:	add	x16, x16, #0x3a8
  4046bc:	br	x17

00000000004046c0 <getxattr@plt>:
  4046c0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4046c4:	ldr	x17, [x16, #944]
  4046c8:	add	x16, x16, #0x3b0
  4046cc:	br	x17

00000000004046d0 <memcmp@plt>:
  4046d0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4046d4:	ldr	x17, [x16, #952]
  4046d8:	add	x16, x16, #0x3b8
  4046dc:	br	x17

00000000004046e0 <textdomain@plt>:
  4046e0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4046e4:	ldr	x17, [x16, #960]
  4046e8:	add	x16, x16, #0x3c0
  4046ec:	br	x17

00000000004046f0 <execvp@plt>:
  4046f0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4046f4:	ldr	x17, [x16, #968]
  4046f8:	add	x16, x16, #0x3c8
  4046fc:	br	x17

0000000000404700 <__fprintf_chk@plt>:
  404700:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404704:	ldr	x17, [x16, #976]
  404708:	add	x16, x16, #0x3d0
  40470c:	br	x17

0000000000404710 <strcmp@plt>:
  404710:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404714:	ldr	x17, [x16, #984]
  404718:	add	x16, x16, #0x3d8
  40471c:	br	x17

0000000000404720 <getpwuid@plt>:
  404720:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404724:	ldr	x17, [x16, #992]
  404728:	add	x16, x16, #0x3e0
  40472c:	br	x17

0000000000404730 <iconv@plt>:
  404730:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404734:	ldr	x17, [x16, #1000]
  404738:	add	x16, x16, #0x3e8
  40473c:	br	x17

0000000000404740 <__ctype_b_loc@plt>:
  404740:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404744:	ldr	x17, [x16, #1008]
  404748:	add	x16, x16, #0x3f0
  40474c:	br	x17

0000000000404750 <rewinddir@plt>:
  404750:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404754:	ldr	x17, [x16, #1016]
  404758:	add	x16, x16, #0x3f8
  40475c:	br	x17

0000000000404760 <acl_get_file@plt>:
  404760:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404764:	ldr	x17, [x16, #1024]
  404768:	add	x16, x16, #0x400
  40476c:	br	x17

0000000000404770 <strtol@plt>:
  404770:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404774:	ldr	x17, [x16, #1032]
  404778:	add	x16, x16, #0x408
  40477c:	br	x17

0000000000404780 <fseeko@plt>:
  404780:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404784:	ldr	x17, [x16, #1040]
  404788:	add	x16, x16, #0x410
  40478c:	br	x17

0000000000404790 <sigwait@plt>:
  404790:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404794:	ldr	x17, [x16, #1048]
  404798:	add	x16, x16, #0x418
  40479c:	br	x17

00000000004047a0 <chdir@plt>:
  4047a0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4047a4:	ldr	x17, [x16, #1056]
  4047a8:	add	x16, x16, #0x420
  4047ac:	br	x17

00000000004047b0 <free@plt>:
  4047b0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4047b4:	ldr	x17, [x16, #1064]
  4047b8:	add	x16, x16, #0x428
  4047bc:	br	x17

00000000004047c0 <__strcat_chk@plt>:
  4047c0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4047c4:	ldr	x17, [x16, #1072]
  4047c8:	add	x16, x16, #0x430
  4047cc:	br	x17

00000000004047d0 <renameat2@plt>:
  4047d0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4047d4:	ldr	x17, [x16, #1080]
  4047d8:	add	x16, x16, #0x438
  4047dc:	br	x17

00000000004047e0 <__ctype_get_mb_cur_max@plt>:
  4047e0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4047e4:	ldr	x17, [x16, #1088]
  4047e8:	add	x16, x16, #0x440
  4047ec:	br	x17

00000000004047f0 <getgid@plt>:
  4047f0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4047f4:	ldr	x17, [x16, #1096]
  4047f8:	add	x16, x16, #0x448
  4047fc:	br	x17

0000000000404800 <renameat@plt>:
  404800:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404804:	ldr	x17, [x16, #1104]
  404808:	add	x16, x16, #0x450
  40480c:	br	x17

0000000000404810 <mempcpy@plt>:
  404810:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404814:	ldr	x17, [x16, #1112]
  404818:	add	x16, x16, #0x458
  40481c:	br	x17

0000000000404820 <fgetxattr@plt>:
  404820:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404824:	ldr	x17, [x16, #1120]
  404828:	add	x16, x16, #0x460
  40482c:	br	x17

0000000000404830 <fchownat@plt>:
  404830:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404834:	ldr	x17, [x16, #1128]
  404838:	add	x16, x16, #0x468
  40483c:	br	x17

0000000000404840 <__stpcpy_chk@plt>:
  404840:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404844:	ldr	x17, [x16, #1136]
  404848:	add	x16, x16, #0x470
  40484c:	br	x17

0000000000404850 <strndup@plt>:
  404850:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404854:	ldr	x17, [x16, #1144]
  404858:	add	x16, x16, #0x478
  40485c:	br	x17

0000000000404860 <strspn@plt>:
  404860:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404864:	ldr	x17, [x16, #1152]
  404868:	add	x16, x16, #0x480
  40486c:	br	x17

0000000000404870 <strchr@plt>:
  404870:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404874:	ldr	x17, [x16, #1160]
  404878:	add	x16, x16, #0x488
  40487c:	br	x17

0000000000404880 <globfree@plt>:
  404880:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404884:	ldr	x17, [x16, #1168]
  404888:	add	x16, x16, #0x490
  40488c:	br	x17

0000000000404890 <memrchr@plt>:
  404890:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404894:	ldr	x17, [x16, #1176]
  404898:	add	x16, x16, #0x498
  40489c:	br	x17

00000000004048a0 <utimensat@plt>:
  4048a0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4048a4:	ldr	x17, [x16, #1184]
  4048a8:	add	x16, x16, #0x4a0
  4048ac:	br	x17

00000000004048b0 <fwrite@plt>:
  4048b0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4048b4:	ldr	x17, [x16, #1192]
  4048b8:	add	x16, x16, #0x4a8
  4048bc:	br	x17

00000000004048c0 <fnmatch@plt>:
  4048c0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4048c4:	ldr	x17, [x16, #1200]
  4048c8:	add	x16, x16, #0x4b0
  4048cc:	br	x17

00000000004048d0 <fflush_unlocked@plt>:
  4048d0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4048d4:	ldr	x17, [x16, #1208]
  4048d8:	add	x16, x16, #0x4b8
  4048dc:	br	x17

00000000004048e0 <fcntl@plt>:
  4048e0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4048e4:	ldr	x17, [x16, #1216]
  4048e8:	add	x16, x16, #0x4c0
  4048ec:	br	x17

00000000004048f0 <dcngettext@plt>:
  4048f0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4048f4:	ldr	x17, [x16, #1224]
  4048f8:	add	x16, x16, #0x4c8
  4048fc:	br	x17

0000000000404900 <ftello@plt>:
  404900:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404904:	ldr	x17, [x16, #1232]
  404908:	add	x16, x16, #0x4d0
  40490c:	br	x17

0000000000404910 <strcpy@plt>:
  404910:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404914:	ldr	x17, [x16, #1240]
  404918:	add	x16, x16, #0x4d8
  40491c:	br	x17

0000000000404920 <dirfd@plt>:
  404920:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404924:	ldr	x17, [x16, #1248]
  404928:	add	x16, x16, #0x4e0
  40492c:	br	x17

0000000000404930 <unsetenv@plt>:
  404930:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404934:	ldr	x17, [x16, #1256]
  404938:	add	x16, x16, #0x4e8
  40493c:	br	x17

0000000000404940 <iconv_open@plt>:
  404940:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404944:	ldr	x17, [x16, #1264]
  404948:	add	x16, x16, #0x4f0
  40494c:	br	x17

0000000000404950 <read@plt>:
  404950:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404954:	ldr	x17, [x16, #1272]
  404958:	add	x16, x16, #0x4f8
  40495c:	br	x17

0000000000404960 <memchr@plt>:
  404960:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404964:	ldr	x17, [x16, #1280]
  404968:	add	x16, x16, #0x500
  40496c:	br	x17

0000000000404970 <isatty@plt>:
  404970:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404974:	ldr	x17, [x16, #1288]
  404978:	add	x16, x16, #0x508
  40497c:	br	x17

0000000000404980 <flistxattr@plt>:
  404980:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404984:	ldr	x17, [x16, #1296]
  404988:	add	x16, x16, #0x510
  40498c:	br	x17

0000000000404990 <iswalnum@plt>:
  404990:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404994:	ldr	x17, [x16, #1304]
  404998:	add	x16, x16, #0x518
  40499c:	br	x17

00000000004049a0 <__fxstat@plt>:
  4049a0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4049a4:	ldr	x17, [x16, #1312]
  4049a8:	add	x16, x16, #0x520
  4049ac:	br	x17

00000000004049b0 <strchrnul@plt>:
  4049b0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4049b4:	ldr	x17, [x16, #1320]
  4049b8:	add	x16, x16, #0x528
  4049bc:	br	x17

00000000004049c0 <dcgettext@plt>:
  4049c0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4049c4:	ldr	x17, [x16, #1328]
  4049c8:	add	x16, x16, #0x530
  4049cc:	br	x17

00000000004049d0 <mkfifoat@plt>:
  4049d0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4049d4:	ldr	x17, [x16, #1336]
  4049d8:	add	x16, x16, #0x538
  4049dc:	br	x17

00000000004049e0 <fputs_unlocked@plt>:
  4049e0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4049e4:	ldr	x17, [x16, #1344]
  4049e8:	add	x16, x16, #0x540
  4049ec:	br	x17

00000000004049f0 <acl_from_text@plt>:
  4049f0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  4049f4:	ldr	x17, [x16, #1352]
  4049f8:	add	x16, x16, #0x548
  4049fc:	br	x17

0000000000404a00 <glob@plt>:
  404a00:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404a04:	ldr	x17, [x16, #1360]
  404a08:	add	x16, x16, #0x550
  404a0c:	br	x17

0000000000404a10 <ftruncate@plt>:
  404a10:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404a14:	ldr	x17, [x16, #1368]
  404a18:	add	x16, x16, #0x558
  404a1c:	br	x17

0000000000404a20 <llistxattr@plt>:
  404a20:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404a24:	ldr	x17, [x16, #1376]
  404a28:	add	x16, x16, #0x560
  404a2c:	br	x17

0000000000404a30 <dup2@plt>:
  404a30:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404a34:	ldr	x17, [x16, #1384]
  404a38:	add	x16, x16, #0x568
  404a3c:	br	x17

0000000000404a40 <symlinkat@plt>:
  404a40:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404a44:	ldr	x17, [x16, #1392]
  404a48:	add	x16, x16, #0x570
  404a4c:	br	x17

0000000000404a50 <sigaddset@plt>:
  404a50:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404a54:	ldr	x17, [x16, #1400]
  404a58:	add	x16, x16, #0x578
  404a5c:	br	x17

0000000000404a60 <towupper@plt>:
  404a60:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404a64:	ldr	x17, [x16, #1408]
  404a68:	add	x16, x16, #0x580
  404a6c:	br	x17

0000000000404a70 <iswprint@plt>:
  404a70:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404a74:	ldr	x17, [x16, #1416]
  404a78:	add	x16, x16, #0x588
  404a7c:	br	x17

0000000000404a80 <umask@plt>:
  404a80:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404a84:	ldr	x17, [x16, #1424]
  404a88:	add	x16, x16, #0x590
  404a8c:	br	x17

0000000000404a90 <strcspn@plt>:
  404a90:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404a94:	ldr	x17, [x16, #1432]
  404a98:	add	x16, x16, #0x598
  404a9c:	br	x17

0000000000404aa0 <faccessat@plt>:
  404aa0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404aa4:	ldr	x17, [x16, #1440]
  404aa8:	add	x16, x16, #0x5a0
  404aac:	br	x17

0000000000404ab0 <openat@plt>:
  404ab0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404ab4:	ldr	x17, [x16, #1448]
  404ab8:	add	x16, x16, #0x5a8
  404abc:	br	x17

0000000000404ac0 <__assert_fail@plt>:
  404ac0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404ac4:	ldr	x17, [x16, #1456]
  404ac8:	add	x16, x16, #0x5b0
  404acc:	br	x17

0000000000404ad0 <__errno_location@plt>:
  404ad0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404ad4:	ldr	x17, [x16, #1464]
  404ad8:	add	x16, x16, #0x5b8
  404adc:	br	x17

0000000000404ae0 <execlp@plt>:
  404ae0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404ae4:	ldr	x17, [x16, #1472]
  404ae8:	add	x16, x16, #0x5c0
  404aec:	br	x17

0000000000404af0 <getenv@plt>:
  404af0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404af4:	ldr	x17, [x16, #1480]
  404af8:	add	x16, x16, #0x5c8
  404afc:	br	x17

0000000000404b00 <putchar@plt>:
  404b00:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404b04:	ldr	x17, [x16, #1488]
  404b08:	add	x16, x16, #0x5d0
  404b0c:	br	x17

0000000000404b10 <__xstat@plt>:
  404b10:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404b14:	ldr	x17, [x16, #1496]
  404b18:	add	x16, x16, #0x5d8
  404b1c:	br	x17

0000000000404b20 <getgrgid@plt>:
  404b20:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404b24:	ldr	x17, [x16, #1504]
  404b28:	add	x16, x16, #0x5e0
  404b2c:	br	x17

0000000000404b30 <fchmodat@plt>:
  404b30:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404b34:	ldr	x17, [x16, #1512]
  404b38:	add	x16, x16, #0x5e8
  404b3c:	br	x17

0000000000404b40 <__getdelim@plt>:
  404b40:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404b44:	ldr	x17, [x16, #1520]
  404b48:	add	x16, x16, #0x5f0
  404b4c:	br	x17

0000000000404b50 <timegm@plt>:
  404b50:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404b54:	ldr	x17, [x16, #1528]
  404b58:	add	x16, x16, #0x5f8
  404b5c:	br	x17

0000000000404b60 <waitpid@plt>:
  404b60:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404b64:	ldr	x17, [x16, #1536]
  404b68:	add	x16, x16, #0x600
  404b6c:	br	x17

0000000000404b70 <fchown@plt>:
  404b70:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404b74:	ldr	x17, [x16, #1544]
  404b78:	add	x16, x16, #0x608
  404b7c:	br	x17

0000000000404b80 <towlower@plt>:
  404b80:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #1552]
  404b88:	add	x16, x16, #0x610
  404b8c:	br	x17

0000000000404b90 <__uflow@plt>:
  404b90:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #1560]
  404b98:	add	x16, x16, #0x618
  404b9c:	br	x17

0000000000404ba0 <__open_2@plt>:
  404ba0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #1568]
  404ba8:	add	x16, x16, #0x620
  404bac:	br	x17

0000000000404bb0 <creat@plt>:
  404bb0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #1576]
  404bb8:	add	x16, x16, #0x628
  404bbc:	br	x17

0000000000404bc0 <gethostbyname@plt>:
  404bc0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #1584]
  404bc8:	add	x16, x16, #0x630
  404bcc:	br	x17

0000000000404bd0 <ioctl@plt>:
  404bd0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #1592]
  404bd8:	add	x16, x16, #0x638
  404bdc:	br	x17

0000000000404be0 <setlocale@plt>:
  404be0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #1600]
  404be8:	add	x16, x16, #0x640
  404bec:	br	x17

0000000000404bf0 <acl_free@plt>:
  404bf0:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #1608]
  404bf8:	add	x16, x16, #0x648
  404bfc:	br	x17

0000000000404c00 <__fxstatat@plt>:
  404c00:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #1616]
  404c08:	add	x16, x16, #0x650
  404c0c:	br	x17

0000000000404c10 <readlinkat@plt>:
  404c10:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #1624]
  404c18:	add	x16, x16, #0x658
  404c1c:	br	x17

0000000000404c20 <wcrtomb@plt>:
  404c20:	adrp	x16, 47f000 <mbrtowc@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #1632]
  404c28:	add	x16, x16, #0x660
  404c2c:	br	x17

Disassembly of section .text:

0000000000404c30 <argp_failure@@Base-0x2d718>:
  404c30:	stp	x29, x30, [sp, #-80]!
  404c34:	mov	x29, sp
  404c38:	stp	x19, x20, [sp, #16]
  404c3c:	mov	x20, x1
  404c40:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404c44:	stp	x21, x22, [sp, #32]
  404c48:	mov	w22, w0
  404c4c:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x14e10>
  404c50:	stp	x23, x24, [sp, #48]
  404c54:	add	x21, x21, #0x6c8
  404c58:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  404c5c:	str	x25, [sp, #64]
  404c60:	bl	4056f0 <wcrtomb@plt+0xad0>
  404c64:	ldr	x0, [x20]
  404c68:	adrp	x25, 483000 <argp_program_version_hook@@Base+0x290>
  404c6c:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  404c70:	bl	43e738 <argp_parse@@Base+0xa850>
  404c74:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  404c78:	mov	w0, #0x6                   	// #6
  404c7c:	add	x1, x1, #0x948
  404c80:	bl	404be0 <setlocale@plt>
  404c84:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  404c88:	add	x1, x1, #0x4b0
  404c8c:	mov	x0, x21
  404c90:	bl	4043d0 <bindtextdomain@plt>
  404c94:	mov	x0, x21
  404c98:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404c9c:	bl	4046e0 <textdomain@plt>
  404ca0:	str	wzr, [x19, #3400]
  404ca4:	adrp	x2, 409000 <wcrtomb@plt+0x43e0>
  404ca8:	add	x2, x2, #0x480
  404cac:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404cb0:	mov	w4, #0x2                   	// #2
  404cb4:	mov	w1, #0x7                   	// #7
  404cb8:	mov	x0, #0x0                   	// #0
  404cbc:	str	w4, [x3, #968]
  404cc0:	add	x21, x21, #0xbb8
  404cc4:	str	x2, [x25, #952]
  404cc8:	bl	43fc08 <argp_parse@@Base+0xbd20>
  404ccc:	bl	42b530 <wcrtomb@plt+0x26910>
  404cd0:	mov	x1, #0xa                   	// #10
  404cd4:	mov	x0, #0x50                  	// #80
  404cd8:	str	x1, [x21, #104]
  404cdc:	bl	440f48 <argp_parse@@Base+0xd060>
  404ce0:	str	x0, [x23, #632]
  404ce4:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  404ce8:	mov	x1, #0x0                   	// #0
  404cec:	mov	w0, #0x11                  	// #17
  404cf0:	str	xzr, [x2, #792]
  404cf4:	bl	404270 <signal@plt>
  404cf8:	mov	w0, w22
  404cfc:	mov	x1, x20
  404d00:	bl	424ed0 <wcrtomb@plt+0x202b0>
  404d04:	bl	41dc38 <wcrtomb@plt+0x19018>
  404d08:	ldr	x0, [x24, #608]
  404d0c:	cbz	x0, 404d14 <wcrtomb@plt+0xf4>
  404d10:	bl	406a28 <wcrtomb@plt+0x1e08>
  404d14:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  404d18:	ldr	w0, [x0, #804]
  404d1c:	cmp	w0, #0x5
  404d20:	b.eq	404e90 <wcrtomb@plt+0x270>  // b.none
  404d24:	b.ls	404e00 <wcrtomb@plt+0x1e0>  // b.plast
  404d28:	cmp	w0, #0x7
  404d2c:	b.eq	404e78 <wcrtomb@plt+0x258>  // b.none
  404d30:	b.ls	404de0 <wcrtomb@plt+0x1c0>  // b.plast
  404d34:	cmp	w0, #0x8
  404d38:	b.eq	404e24 <wcrtomb@plt+0x204>  // b.none
  404d3c:	cmp	w0, #0x9
  404d40:	b.ne	404d48 <wcrtomb@plt+0x128>  // b.any
  404d44:	bl	41a250 <wcrtomb@plt+0x15630>
  404d48:	bl	4097c8 <wcrtomb@plt+0x4ba8>
  404d4c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  404d50:	ldrb	w0, [x0, #641]
  404d54:	cbnz	w0, 404e34 <wcrtomb@plt+0x214>
  404d58:	ldr	w0, [x21, #112]
  404d5c:	cbnz	w0, 404e2c <wcrtomb@plt+0x20c>
  404d60:	ldr	x0, [x24, #608]
  404d64:	cbz	x0, 404d6c <wcrtomb@plt+0x14c>
  404d68:	bl	406b30 <wcrtomb@plt+0x1f10>
  404d6c:	ldr	x0, [x23, #632]
  404d70:	bl	4047b0 <free@plt>
  404d74:	bl	429080 <wcrtomb@plt+0x24460>
  404d78:	bl	41dc80 <wcrtomb@plt+0x19060>
  404d7c:	ldr	w0, [x19, #3400]
  404d80:	cmp	w0, #0x2
  404d84:	b.eq	404e48 <wcrtomb@plt+0x228>  // b.none
  404d88:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404d8c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404d90:	ldr	x1, [x1, #3872]
  404d94:	ldr	x0, [x0, #1104]
  404d98:	cmp	x1, x0
  404d9c:	b.eq	404e70 <wcrtomb@plt+0x250>  // b.none
  404da0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404da4:	ldr	x0, [x0, #1096]
  404da8:	ldr	w1, [x0]
  404dac:	tbz	w1, #5, 404e3c <wcrtomb@plt+0x21c>
  404db0:	ldr	w0, [x19, #3400]
  404db4:	cmp	w0, #0x1
  404db8:	b.gt	404dc4 <wcrtomb@plt+0x1a4>
  404dbc:	mov	w0, #0x2                   	// #2
  404dc0:	str	w0, [x19, #3400]
  404dc4:	ldr	w0, [x19, #3400]
  404dc8:	ldp	x19, x20, [sp, #16]
  404dcc:	ldp	x21, x22, [sp, #32]
  404dd0:	ldp	x23, x24, [sp, #48]
  404dd4:	ldr	x25, [sp, #64]
  404dd8:	ldp	x29, x30, [sp], #80
  404ddc:	ret
  404de0:	cmp	w0, #0x6
  404de4:	b.ne	404d48 <wcrtomb@plt+0x128>  // b.any
  404de8:	bl	411128 <wcrtomb@plt+0xc508>
  404dec:	adrp	x0, 411000 <wcrtomb@plt+0xc3e0>
  404df0:	add	x0, x0, #0x258
  404df4:	bl	419bc8 <wcrtomb@plt+0x14fa8>
  404df8:	bl	40fe60 <wcrtomb@plt+0xb240>
  404dfc:	b	404d48 <wcrtomb@plt+0x128>
  404e00:	cmp	w0, #0x3
  404e04:	b.eq	404e88 <wcrtomb@plt+0x268>  // b.none
  404e08:	cmp	w0, #0x4
  404e0c:	b.ne	404e18 <wcrtomb@plt+0x1f8>  // b.any
  404e10:	bl	40e070 <wcrtomb@plt+0x9450>
  404e14:	b	404d48 <wcrtomb@plt+0x128>
  404e18:	cbz	w0, 404ea4 <wcrtomb@plt+0x284>
  404e1c:	cmp	w0, #0x3
  404e20:	b.eq	404d48 <wcrtomb@plt+0x128>  // b.none
  404e24:	bl	427608 <wcrtomb@plt+0x229e8>
  404e28:	b	404d48 <wcrtomb@plt+0x128>
  404e2c:	bl	40c690 <wcrtomb@plt+0x7a70>
  404e30:	b	404d60 <wcrtomb@plt+0x140>
  404e34:	bl	405b00 <wcrtomb@plt+0xee0>
  404e38:	b	404d58 <wcrtomb@plt+0x138>
  404e3c:	bl	4042a0 <fclose@plt>
  404e40:	cbnz	w0, 404db0 <wcrtomb@plt+0x190>
  404e44:	b	404dc4 <wcrtomb@plt+0x1a4>
  404e48:	mov	w2, #0x5                   	// #5
  404e4c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  404e50:	mov	x0, #0x0                   	// #0
  404e54:	add	x1, x1, #0x518
  404e58:	bl	4049c0 <dcgettext@plt>
  404e5c:	mov	x2, x0
  404e60:	mov	w1, #0x0                   	// #0
  404e64:	mov	w0, #0x0                   	// #0
  404e68:	bl	404050 <error@plt>
  404e6c:	b	404d88 <wcrtomb@plt+0x168>
  404e70:	bl	435340 <argp_parse@@Base+0x1458>
  404e74:	b	404dc4 <wcrtomb@plt+0x1a4>
  404e78:	adrp	x0, 41a000 <wcrtomb@plt+0x153e0>
  404e7c:	add	x0, x0, #0x198
  404e80:	bl	419bc8 <wcrtomb@plt+0x14fa8>
  404e84:	b	404d48 <wcrtomb@plt+0x128>
  404e88:	bl	40da18 <wcrtomb@plt+0x8df8>
  404e8c:	b	404d48 <wcrtomb@plt+0x128>
  404e90:	bl	4098f8 <wcrtomb@plt+0x4cd8>
  404e94:	adrp	x0, 409000 <wcrtomb@plt+0x43e0>
  404e98:	add	x0, x0, #0xd48
  404e9c:	bl	419bc8 <wcrtomb@plt+0x14fa8>
  404ea0:	b	404d48 <wcrtomb@plt+0x128>
  404ea4:	ldr	x0, [x25, #952]
  404ea8:	cbz	x0, 404eb0 <wcrtomb@plt+0x290>
  404eac:	blr	x0
  404eb0:	mov	w2, #0x5                   	// #5
  404eb4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  404eb8:	mov	x0, #0x0                   	// #0
  404ebc:	add	x1, x1, #0x4c8
  404ec0:	bl	4049c0 <dcgettext@plt>
  404ec4:	mov	x2, x0
  404ec8:	mov	w1, #0x0                   	// #0
  404ecc:	mov	w0, #0x0                   	// #0
  404ed0:	bl	404050 <error@plt>
  404ed4:	mov	w0, #0x2                   	// #2
  404ed8:	bl	423220 <wcrtomb@plt+0x1e600>
  404edc:	mov	x29, #0x0                   	// #0
  404ee0:	mov	x30, #0x0                   	// #0
  404ee4:	mov	x5, x0
  404ee8:	ldr	x1, [sp]
  404eec:	add	x2, sp, #0x8
  404ef0:	mov	x6, sp
  404ef4:	movz	x0, #0x0, lsl #48
  404ef8:	movk	x0, #0x0, lsl #32
  404efc:	movk	x0, #0x40, lsl #16
  404f00:	movk	x0, #0x4c30
  404f04:	movz	x3, #0x0, lsl #48
  404f08:	movk	x3, #0x0, lsl #32
  404f0c:	movk	x3, #0x45, lsl #16
  404f10:	movk	x3, #0x3b90
  404f14:	movz	x4, #0x0, lsl #48
  404f18:	movk	x4, #0x0, lsl #32
  404f1c:	movk	x4, #0x45, lsl #16
  404f20:	movk	x4, #0x3c10
  404f24:	bl	4043e0 <__libc_start_main@plt>
  404f28:	bl	404650 <abort@plt>
  404f2c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x3be10>
  404f30:	ldr	x0, [x0, #4064]
  404f34:	cbz	x0, 404f3c <wcrtomb@plt+0x31c>
  404f38:	b	4045f0 <__gmon_start__@plt>
  404f3c:	ret
  404f40:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404f44:	add	x0, x0, #0x440
  404f48:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404f4c:	add	x1, x1, #0x440
  404f50:	cmp	x1, x0
  404f54:	b.eq	404f6c <wcrtomb@plt+0x34c>  // b.none
  404f58:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  404f5c:	ldr	x1, [x1, #3128]
  404f60:	cbz	x1, 404f6c <wcrtomb@plt+0x34c>
  404f64:	mov	x16, x1
  404f68:	br	x16
  404f6c:	ret
  404f70:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404f74:	add	x0, x0, #0x440
  404f78:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404f7c:	add	x1, x1, #0x440
  404f80:	sub	x1, x1, x0
  404f84:	lsr	x2, x1, #63
  404f88:	add	x1, x2, x1, asr #3
  404f8c:	cmp	xzr, x1, asr #1
  404f90:	asr	x1, x1, #1
  404f94:	b.eq	404fac <wcrtomb@plt+0x38c>  // b.none
  404f98:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x10e10>
  404f9c:	ldr	x2, [x2, #3136]
  404fa0:	cbz	x2, 404fac <wcrtomb@plt+0x38c>
  404fa4:	mov	x16, x2
  404fa8:	br	x16
  404fac:	ret
  404fb0:	stp	x29, x30, [sp, #-32]!
  404fb4:	mov	x29, sp
  404fb8:	str	x19, [sp, #16]
  404fbc:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404fc0:	ldrb	w0, [x19, #1136]
  404fc4:	cbnz	w0, 404fd4 <wcrtomb@plt+0x3b4>
  404fc8:	bl	404f40 <wcrtomb@plt+0x320>
  404fcc:	mov	w0, #0x1                   	// #1
  404fd0:	strb	w0, [x19, #1136]
  404fd4:	ldr	x19, [sp, #16]
  404fd8:	ldp	x29, x30, [sp], #32
  404fdc:	ret
  404fe0:	b	404f70 <wcrtomb@plt+0x350>
  404fe4:	nop
  404fe8:	stp	x29, x30, [sp, #-48]!
  404fec:	mov	x29, sp
  404ff0:	stp	x21, x22, [sp, #32]
  404ff4:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  404ff8:	stp	x19, x20, [sp, #16]
  404ffc:	ldr	x19, [x22, #1144]
  405000:	cmp	x19, #0x0
  405004:	ccmp	x19, x0, #0x4, ne  // ne = any
  405008:	b.eq	405034 <wcrtomb@plt+0x414>  // b.none
  40500c:	mov	x21, x0
  405010:	mov	x20, x19
  405014:	ldr	x19, [x19]
  405018:	ldr	x0, [x20, #16]
  40501c:	bl	4047b0 <free@plt>
  405020:	mov	x0, x20
  405024:	bl	4047b0 <free@plt>
  405028:	cmp	x19, #0x0
  40502c:	ccmp	x21, x19, #0x4, ne  // ne = any
  405030:	b.ne	405010 <wcrtomb@plt+0x3f0>  // b.any
  405034:	str	x19, [x22, #1144]
  405038:	add	x22, x22, #0x478
  40503c:	cbz	x19, 405050 <wcrtomb@plt+0x430>
  405040:	ldp	x19, x20, [sp, #16]
  405044:	ldp	x21, x22, [sp, #32]
  405048:	ldp	x29, x30, [sp], #48
  40504c:	ret
  405050:	str	xzr, [x22, #8]
  405054:	ldp	x19, x20, [sp, #16]
  405058:	ldp	x21, x22, [sp, #32]
  40505c:	ldp	x29, x30, [sp], #48
  405060:	ret
  405064:	nop
  405068:	sub	sp, sp, #0x550
  40506c:	stp	x29, x30, [sp]
  405070:	mov	x29, sp
  405074:	stp	x19, x20, [sp, #16]
  405078:	mov	x19, x0
  40507c:	str	x21, [sp, #32]
  405080:	mov	w21, #0x0                   	// #0
  405084:	str	d8, [sp, #40]
  405088:	fmov	d8, d0
  40508c:	cbz	x1, 405098 <wcrtomb@plt+0x478>
  405090:	ldrb	w0, [x1]
  405094:	cbnz	w0, 405118 <wcrtomb@plt+0x4f8>
  405098:	fcvtzu	x0, d8
  40509c:	add	x1, sp, #0x30
  4050a0:	mov	x4, #0x1                   	// #1
  4050a4:	mov	w2, #0x1b0                 	// #432
  4050a8:	mov	x3, x4
  4050ac:	bl	438e60 <argp_parse@@Base+0x4f78>
  4050b0:	mov	x20, x0
  4050b4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4050b8:	ldr	d0, [x1, #1160]
  4050bc:	fcmpe	d0, #0.0
  4050c0:	b.le	4050d8 <wcrtomb@plt+0x4b8>
  4050c4:	fdiv	d0, d8, d0
  4050c8:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  4050cc:	fmov	d1, x0
  4050d0:	fcmpe	d0, d1
  4050d4:	b.mi	405144 <wcrtomb@plt+0x524>  // b.first
  4050d8:	adrp	x4, 453000 <_obstack_memory_used@@Base+0x10e10>
  4050dc:	add	x4, x4, #0xc48
  4050e0:	fmov	d0, d8
  4050e4:	mov	x3, x20
  4050e8:	mov	x0, x19
  4050ec:	mov	w1, #0x1                   	// #1
  4050f0:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x10e10>
  4050f4:	add	x2, x2, #0xc58
  4050f8:	bl	404700 <__fprintf_chk@plt>
  4050fc:	add	w0, w21, w0
  405100:	ldp	x29, x30, [sp]
  405104:	ldp	x19, x20, [sp, #16]
  405108:	ldr	x21, [sp, #32]
  40510c:	ldr	d8, [sp, #40]
  405110:	add	sp, sp, #0x550
  405114:	ret
  405118:	mov	w2, #0x5                   	// #5
  40511c:	mov	x0, #0x0                   	// #0
  405120:	bl	4049c0 <dcgettext@plt>
  405124:	mov	x3, x0
  405128:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x10e10>
  40512c:	mov	x0, x19
  405130:	add	x2, x2, #0xc50
  405134:	mov	w1, #0x1                   	// #1
  405138:	bl	404700 <__fprintf_chk@plt>
  40513c:	mov	w21, w0
  405140:	b	405098 <wcrtomb@plt+0x478>
  405144:	fcvtzu	x0, d0
  405148:	mov	x4, #0x1                   	// #1
  40514c:	add	x1, sp, #0x2c0
  405150:	mov	x3, x4
  405154:	mov	w2, #0x1b0                 	// #432
  405158:	bl	438e60 <argp_parse@@Base+0x4f78>
  40515c:	mov	x4, x0
  405160:	b	4050e0 <wcrtomb@plt+0x4c0>
  405164:	nop
  405168:	stp	x29, x30, [sp, #-32]!
  40516c:	mov	x29, sp
  405170:	stp	x19, x20, [sp, #16]
  405174:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405178:	add	x19, x19, #0x478
  40517c:	ldrsw	x0, [x19, #24]
  405180:	lsl	x0, x0, #3
  405184:	add	x20, x19, x0
  405188:	ldr	x1, [x20, #32]
  40518c:	cbz	x1, 4051c0 <wcrtomb@plt+0x5a0>
  405190:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405194:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405198:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40519c:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4051a0:	ldrsw	x0, [x0, #692]
  4051a4:	str	x1, [x4, #3928]
  4051a8:	str	x1, [x3, #3952]
  4051ac:	add	x1, x1, x0, lsl #9
  4051b0:	str	x1, [x2, #3888]
  4051b4:	ldp	x19, x20, [sp, #16]
  4051b8:	ldp	x29, x30, [sp], #32
  4051bc:	ret
  4051c0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4051c4:	add	x2, x19, #0x30
  4051c8:	add	x0, x2, x0
  4051cc:	ldr	x1, [x1, #864]
  4051d0:	bl	41bf00 <wcrtomb@plt+0x172e0>
  4051d4:	str	x0, [x20, #32]
  4051d8:	ldrsw	x1, [x19, #24]
  4051dc:	add	x19, x19, x1, lsl #3
  4051e0:	ldr	x1, [x19, #32]
  4051e4:	b	405190 <wcrtomb@plt+0x570>
  4051e8:	stp	x29, x30, [sp, #-160]!
  4051ec:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4051f0:	mov	x29, sp
  4051f4:	ldr	w0, [x0, #804]
  4051f8:	str	x19, [sp, #16]
  4051fc:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  405200:	cmp	w0, #0x4
  405204:	b.ne	40520c <wcrtomb@plt+0x5ec>  // b.any
  405208:	strb	wzr, [x19, #872]
  40520c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405210:	ldr	w0, [x0, #16]
  405214:	cmn	w0, #0x1
  405218:	b.eq	405234 <wcrtomb@plt+0x614>  // b.none
  40521c:	cmp	w0, #0x0
  405220:	cset	w0, ne  // ne = any
  405224:	strb	w0, [x19, #872]
  405228:	ldr	x19, [sp, #16]
  40522c:	ldp	x29, x30, [sp], #160
  405230:	ret
  405234:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405238:	ldrb	w0, [x0, #20]
  40523c:	cbnz	w0, 40524c <wcrtomb@plt+0x62c>
  405240:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405244:	ldr	x0, [x0, #848]
  405248:	cbz	x0, 405260 <wcrtomb@plt+0x640>
  40524c:	mov	w0, #0x0                   	// #0
  405250:	strb	w0, [x19, #872]
  405254:	ldr	x19, [sp, #16]
  405258:	ldp	x29, x30, [sp], #160
  40525c:	ret
  405260:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  405264:	add	x2, sp, #0x20
  405268:	ldr	w1, [x1, #920]
  40526c:	bl	4049a0 <__fxstat@plt>
  405270:	cbnz	w0, 40524c <wcrtomb@plt+0x62c>
  405274:	ldr	w0, [sp, #48]
  405278:	and	w0, w0, #0xf000
  40527c:	cmp	w0, #0x8, lsl #12
  405280:	cset	w0, eq  // eq = none
  405284:	strb	w0, [x19, #872]
  405288:	b	405254 <wcrtomb@plt+0x634>
  40528c:	nop
  405290:	stp	x29, x30, [sp, #-64]!
  405294:	mov	w0, #0x1                   	// #1
  405298:	mov	x29, sp
  40529c:	stp	x19, x20, [sp, #16]
  4052a0:	bl	409578 <wcrtomb@plt+0x4958>
  4052a4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4052a8:	ldr	d0, [x0, #576]
  4052ac:	fcmp	d0, #0.0
  4052b0:	b.eq	4052c4 <wcrtomb@plt+0x6a4>  // b.none
  4052b4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4052b8:	ldr	d1, [x0, #1208]
  4052bc:	fcmpe	d0, d1
  4052c0:	b.ls	405334 <wcrtomb@plt+0x714>  // b.plast
  4052c4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4052c8:	ldrb	w0, [x0, #480]
  4052cc:	cbz	w0, 405354 <wcrtomb@plt+0x734>
  4052d0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4052d4:	ldr	x20, [x0, #864]
  4052d8:	cbz	x20, 405324 <wcrtomb@plt+0x704>
  4052dc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4052e0:	ldrb	w0, [x0, #20]
  4052e4:	cbz	w0, 405324 <wcrtomb@plt+0x704>
  4052e8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4052ec:	add	x1, x0, #0x478
  4052f0:	ldr	w1, [x1, #72]
  4052f4:	cbnz	w1, 405324 <wcrtomb@plt+0x704>
  4052f8:	ldr	x19, [x0, #1144]
  4052fc:	stp	x21, x22, [sp, #32]
  405300:	cbz	x19, 405320 <wcrtomb@plt+0x700>
  405304:	ldr	x21, [x19]
  405308:	cbz	x21, 405364 <wcrtomb@plt+0x744>
  40530c:	ldr	x0, [x21, #8]
  405310:	cmp	x20, x0, lsl #9
  405314:	b.cc	405364 <wcrtomb@plt+0x744>  // b.lo, b.ul, b.last
  405318:	mov	x19, x21
  40531c:	b	405300 <wcrtomb@plt+0x6e0>
  405320:	ldp	x21, x22, [sp, #32]
  405324:	mov	x0, x20
  405328:	ldp	x19, x20, [sp, #16]
  40532c:	ldp	x29, x30, [sp], #64
  405330:	ret
  405334:	bl	404ad0 <__errno_location@plt>
  405338:	mov	x20, #0x0                   	// #0
  40533c:	mov	w1, #0x1c                  	// #28
  405340:	str	w1, [x0]
  405344:	mov	x0, x20
  405348:	ldp	x19, x20, [sp, #16]
  40534c:	ldp	x29, x30, [sp], #64
  405350:	ret
  405354:	bl	4218f0 <wcrtomb@plt+0x1ccd0>
  405358:	mov	x20, x0
  40535c:	cbz	x20, 405324 <wcrtomb@plt+0x704>
  405360:	b	4052dc <wcrtomb@plt+0x6bc>
  405364:	ldr	x22, [x19, #8]
  405368:	ldr	x0, [x19, #32]
  40536c:	str	x23, [sp, #48]
  405370:	ldr	x23, [x19, #40]
  405374:	sub	x1, x20, x22, lsl #9
  405378:	cmp	x0, x1
  40537c:	csel	x2, x0, x1, ls  // ls = plast
  405380:	sub	x0, x0, x2
  405384:	add	x23, x23, x1, lsr #9
  405388:	stp	x0, x23, [x19, #32]
  40538c:	cbz	x0, 4053bc <wcrtomb@plt+0x79c>
  405390:	mov	x0, x19
  405394:	bl	404fe8 <wcrtomb@plt+0x3c8>
  405398:	ldr	x0, [x19, #8]
  40539c:	str	xzr, [x19, #40]
  4053a0:	sub	x0, x0, x22
  4053a4:	str	x0, [x19, #8]
  4053a8:	ldr	x19, [x19]
  4053ac:	cbnz	x19, 405398 <wcrtomb@plt+0x778>
  4053b0:	ldp	x21, x22, [sp, #32]
  4053b4:	ldr	x23, [sp, #48]
  4053b8:	b	405324 <wcrtomb@plt+0x704>
  4053bc:	mov	x0, x21
  4053c0:	add	x22, x22, x23
  4053c4:	mov	x19, x21
  4053c8:	bl	404fe8 <wcrtomb@plt+0x3c8>
  4053cc:	cbz	x21, 4053b0 <wcrtomb@plt+0x790>
  4053d0:	b	405398 <wcrtomb@plt+0x778>
  4053d4:	nop
  4053d8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  4053dc:	ldr	w0, [x1, #1656]
  4053e0:	add	w0, w0, #0x1
  4053e4:	str	w0, [x1, #1656]
  4053e8:	tbnz	w0, #31, 405400 <wcrtomb@plt+0x7e0>
  4053ec:	add	x2, x1, #0x678
  4053f0:	ldr	w0, [x2, #4]
  4053f4:	add	w0, w0, #0x1
  4053f8:	str	w0, [x2, #4]
  4053fc:	ret
  405400:	stp	x29, x30, [sp, #-16]!
  405404:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405408:	mov	x29, sp
  40540c:	ldr	x0, [x0, #952]
  405410:	cbz	x0, 405418 <wcrtomb@plt+0x7f8>
  405414:	blr	x0
  405418:	mov	w2, #0x5                   	// #5
  40541c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  405420:	mov	x0, #0x0                   	// #0
  405424:	add	x1, x1, #0xc68
  405428:	bl	4049c0 <dcgettext@plt>
  40542c:	mov	x2, x0
  405430:	mov	w1, #0x0                   	// #0
  405434:	mov	w0, #0x0                   	// #0
  405438:	bl	404050 <error@plt>
  40543c:	bl	40e770 <wcrtomb@plt+0x9b50>
  405440:	stp	x29, x30, [sp, #-464]!
  405444:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  405448:	mov	x29, sp
  40544c:	stp	x19, x20, [sp, #16]
  405450:	mov	x20, x0
  405454:	ldr	w0, [x2, #760]
  405458:	cmp	w0, #0x4
  40545c:	b.eq	40546c <wcrtomb@plt+0x84c>  // b.none
  405460:	ldp	x19, x20, [sp, #16]
  405464:	ldp	x29, x30, [sp], #464
  405468:	ret
  40546c:	mov	x2, #0x1a8                 	// #424
  405470:	mov	x19, x1
  405474:	add	x0, sp, #0x28
  405478:	mov	w1, #0x0                   	// #0
  40547c:	bl	404410 <memset@plt>
  405480:	ldr	x0, [x20]
  405484:	mov	w1, #0x81a4                	// #33188
  405488:	stp	x0, x0, [sp, #40]
  40548c:	str	w1, [sp, #144]
  405490:	bl	404120 <getuid@plt>
  405494:	str	w0, [sp, #152]
  405498:	bl	4047f0 <getgid@plt>
  40549c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  4054a0:	mov	w3, w0
  4054a4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  4054a8:	add	x0, sp, #0x28
  4054ac:	ldrsw	x2, [x2, #1660]
  4054b0:	add	x1, x1, #0xc80
  4054b4:	str	w3, [sp, #156]
  4054b8:	bl	4136a0 <wcrtomb@plt+0xea80>
  4054bc:	mov	x1, x0
  4054c0:	ldr	x2, [x19]
  4054c4:	add	x0, sp, #0x28
  4054c8:	stp	x1, x1, [sp, #40]
  4054cc:	str	x2, [sp, #176]
  4054d0:	str	x2, [sp, #304]
  4054d4:	bl	40b888 <wcrtomb@plt+0x6c68>
  4054d8:	mov	x2, x0
  4054dc:	cbz	x0, 405504 <wcrtomb@plt+0x8e4>
  4054e0:	add	x1, sp, #0x28
  4054e4:	mov	w0, #0x0                   	// #0
  4054e8:	bl	40b5b8 <wcrtomb@plt+0x6998>
  4054ec:	bl	40b5e0 <wcrtomb@plt+0x69c0>
  4054f0:	ldr	x0, [sp, #40]
  4054f4:	bl	4047b0 <free@plt>
  4054f8:	ldp	x19, x20, [sp, #16]
  4054fc:	ldp	x29, x30, [sp], #464
  405500:	ret
  405504:	bl	404650 <abort@plt>
  405508:	stp	x29, x30, [sp, #-48]!
  40550c:	mov	x29, sp
  405510:	stp	x19, x20, [sp, #16]
  405514:	mov	x20, x2
  405518:	stp	x21, x22, [sp, #32]
  40551c:	mov	x21, x1
  405520:	mov	x22, x0
  405524:	mov	x0, #0x30                  	// #48
  405528:	bl	440f48 <argp_parse@@Base+0xd060>
  40552c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405530:	add	x1, x2, #0x478
  405534:	mov	x19, x0
  405538:	ldr	x0, [x1, #8]
  40553c:	cbz	x0, 405584 <wcrtomb@plt+0x964>
  405540:	str	x19, [x0]
  405544:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405548:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40554c:	str	x19, [x1, #8]
  405550:	mov	x0, x22
  405554:	ldr	x1, [x2, #3928]
  405558:	ldr	x3, [x3, #3952]
  40555c:	sub	x3, x3, x1
  405560:	asr	x3, x3, #9
  405564:	stp	xzr, x3, [x19]
  405568:	bl	441170 <argp_parse@@Base+0xd288>
  40556c:	stp	x0, x21, [x19, #16]
  405570:	stp	x20, xzr, [x19, #32]
  405574:	ldp	x19, x20, [sp, #16]
  405578:	ldp	x21, x22, [sp, #32]
  40557c:	ldp	x29, x30, [sp], #48
  405580:	ret
  405584:	str	x19, [x2, #1144]
  405588:	b	405544 <wcrtomb@plt+0x924>
  40558c:	nop
  405590:	stp	x29, x30, [sp, #-32]!
  405594:	mov	x29, sp
  405598:	stp	x19, x20, [sp, #16]
  40559c:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4055a0:	add	x19, x19, #0x478
  4055a4:	add	x19, x19, #0x50
  4055a8:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4055ac:	mov	x0, x19
  4055b0:	bl	425f70 <wcrtomb@plt+0x21350>
  4055b4:	mov	x1, x19
  4055b8:	add	x0, x20, #0xfb0
  4055bc:	mov	w2, #0x0                   	// #0
  4055c0:	bl	418628 <wcrtomb@plt+0x13a08>
  4055c4:	cmp	w0, #0x1
  4055c8:	b.eq	40561c <wcrtomb@plt+0x9fc>  // b.none
  4055cc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4055d0:	ldr	x0, [x0, #952]
  4055d4:	cbz	x0, 4055dc <wcrtomb@plt+0x9bc>
  4055d8:	blr	x0
  4055dc:	mov	w2, #0x5                   	// #5
  4055e0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  4055e4:	mov	x0, #0x0                   	// #0
  4055e8:	add	x1, x1, #0xca0
  4055ec:	bl	4049c0 <dcgettext@plt>
  4055f0:	mov	x2, x0
  4055f4:	mov	w1, #0x0                   	// #0
  4055f8:	mov	w0, #0x0                   	// #0
  4055fc:	bl	404050 <error@plt>
  405600:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405604:	mov	w2, #0x2                   	// #2
  405608:	mov	w0, #0x0                   	// #0
  40560c:	str	w2, [x1, #3400]
  405610:	ldp	x19, x20, [sp, #16]
  405614:	ldp	x29, x30, [sp], #32
  405618:	ret
  40561c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405620:	ldr	x0, [x20, #4016]
  405624:	ldr	x1, [x2, #3952]
  405628:	cmp	x0, x1
  40562c:	b.cc	405644 <wcrtomb@plt+0xa24>  // b.lo, b.ul, b.last
  405630:	sub	x0, x0, x1
  405634:	and	x0, x0, #0xfffffffffffffe00
  405638:	add	x0, x0, #0x200
  40563c:	add	x1, x1, x0
  405640:	str	x1, [x2, #3952]
  405644:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405648:	mov	w0, #0x1                   	// #1
  40564c:	ldr	x2, [x2, #3888]
  405650:	cmp	x1, x2
  405654:	b.ls	405610 <wcrtomb@plt+0x9f0>  // b.plast
  405658:	bl	404650 <abort@plt>
  40565c:	nop
  405660:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  405664:	ldrb	w3, [x3, #20]
  405668:	cbnz	w3, 405670 <wcrtomb@plt+0xa50>
  40566c:	ret
  405670:	b	405508 <wcrtomb@plt+0x8e8>
  405674:	nop
  405678:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40567c:	add	x0, x0, #0x478
  405680:	add	x0, x0, #0x1a8
  405684:	b	414320 <wcrtomb@plt+0xf700>
  405688:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40568c:	mov	x1, x0
  405690:	ldrb	w0, [x2, #20]
  405694:	cbnz	w0, 40569c <wcrtomb@plt+0xa7c>
  405698:	ret
  40569c:	ldr	x0, [x1]
  4056a0:	ldr	x2, [x1, #136]
  4056a4:	mov	x1, x2
  4056a8:	b	405508 <wcrtomb@plt+0x8e8>
  4056ac:	nop
  4056b0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4056b4:	ldrb	w0, [x0, #20]
  4056b8:	cbnz	w0, 4056c0 <wcrtomb@plt+0xaa0>
  4056bc:	ret
  4056c0:	mov	x0, #0x0                   	// #0
  4056c4:	b	404fe8 <wcrtomb@plt+0x3c8>
  4056c8:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4056cc:	ldr	x1, [x1, #1144]
  4056d0:	cbz	x1, 4056d8 <wcrtomb@plt+0xab8>
  4056d4:	str	x0, [x1, #32]
  4056d8:	ret
  4056dc:	nop
  4056e0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4056e4:	str	wzr, [x0, #1648]
  4056e8:	ret
  4056ec:	nop
  4056f0:	stp	x29, x30, [sp, #-32]!
  4056f4:	mov	x29, sp
  4056f8:	str	x19, [sp, #16]
  4056fc:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  405700:	add	x19, x19, #0x290
  405704:	mov	x0, x19
  405708:	bl	437e58 <argp_parse@@Base+0x3f70>
  40570c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  405710:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405714:	add	x1, x1, #0x370
  405718:	add	x0, x0, #0x328
  40571c:	ldp	x2, x3, [x19]
  405720:	stp	x2, x3, [x1]
  405724:	stp	x2, x3, [x0]
  405728:	ldr	x19, [sp, #16]
  40572c:	ldp	x29, x30, [sp], #32
  405730:	ret
  405734:	nop
  405738:	stp	x29, x30, [sp, #-48]!
  40573c:	mov	x29, sp
  405740:	add	x0, sp, #0x20
  405744:	str	x19, [sp, #16]
  405748:	bl	437e58 <argp_parse@@Base+0x3f70>
  40574c:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405750:	mov	x2, #0xcd6500000000        	// #225833675390976
  405754:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  405758:	movk	x2, #0x41cd, lsl #48
  40575c:	add	x0, x3, #0x328
  405760:	fmov	d1, x2
  405764:	add	x19, x19, #0x478
  405768:	ldp	x2, x1, [sp, #32]
  40576c:	ldr	x4, [x0, #8]
  405770:	ldr	x3, [x3, #808]
  405774:	sub	x1, x1, x4
  405778:	ldr	d2, [x19, #16]
  40577c:	scvtf	d0, x1
  405780:	sub	x1, x2, x3
  405784:	fdiv	d0, d0, d1
  405788:	scvtf	d1, x1
  40578c:	fadd	d0, d0, d1
  405790:	fadd	d0, d0, d2
  405794:	str	d0, [x19, #16]
  405798:	bl	437e58 <argp_parse@@Base+0x3f70>
  40579c:	ldr	d0, [x19, #16]
  4057a0:	ldr	x19, [sp, #16]
  4057a4:	ldp	x29, x30, [sp], #48
  4057a8:	ret
  4057ac:	nop
  4057b0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4057b4:	mov	x5, x0
  4057b8:	ldr	x0, [x1, #848]
  4057bc:	cbz	x0, 4057c4 <wcrtomb@plt+0xba4>
  4057c0:	ret
  4057c4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4057c8:	ldr	w4, [x1, #1652]
  4057cc:	cbz	w4, 4057c0 <wcrtomb@plt+0xba0>
  4057d0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  4057d4:	add	x6, x2, #0x678
  4057d8:	str	wzr, [x5]
  4057dc:	add	x3, x6, #0x8
  4057e0:	mov	w1, #0x0                   	// #0
  4057e4:	ldr	w2, [x6, #8]
  4057e8:	cbnz	w2, 4057f8 <wcrtomb@plt+0xbd8>
  4057ec:	b	40581c <wcrtomb@plt+0xbfc>
  4057f0:	ldr	w2, [x3, #24]!
  4057f4:	cbz	w2, 40581c <wcrtomb@plt+0xbfc>
  4057f8:	cmp	w4, w2
  4057fc:	mov	w2, w1
  405800:	add	w1, w1, #0x1
  405804:	b.ne	4057f0 <wcrtomb@plt+0xbd0>  // b.any
  405808:	mov	w0, #0x18                  	// #24
  40580c:	smaddl	x2, w2, w0, x6
  405810:	ldr	x0, [x2, #16]
  405814:	str	w1, [x5]
  405818:	ret
  40581c:	str	w1, [x5]
  405820:	ret
  405824:	nop
  405828:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40582c:	mov	x5, x0
  405830:	ldr	x0, [x1, #848]
  405834:	cbnz	x0, 4058a4 <wcrtomb@plt+0xc84>
  405838:	ldr	w1, [x5]
  40583c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  405840:	add	x7, x2, #0x678
  405844:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405848:	add	x8, x7, #0x8
  40584c:	sbfiz	x6, x1, #1, #32
  405850:	ldr	w4, [x2, #1652]
  405854:	add	x6, x6, w1, sxtw
  405858:	lsl	x6, x6, #3
  40585c:	ldr	w2, [x8, x6]
  405860:	cbz	w2, 40589c <wcrtomb@plt+0xc7c>
  405864:	mov	w3, #0x18                  	// #24
  405868:	smaddl	x3, w1, w3, x8
  40586c:	b	405878 <wcrtomb@plt+0xc58>
  405870:	ldr	w2, [x3, #24]!
  405874:	cbz	w2, 40589c <wcrtomb@plt+0xc7c>
  405878:	cmp	w4, w2
  40587c:	mov	w2, w1
  405880:	add	w1, w1, #0x1
  405884:	b.ne	405870 <wcrtomb@plt+0xc50>  // b.any
  405888:	mov	w0, #0x18                  	// #24
  40588c:	smaddl	x2, w2, w0, x7
  405890:	ldr	x0, [x2, #16]
  405894:	str	w1, [x5]
  405898:	ret
  40589c:	str	w1, [x5]
  4058a0:	ret
  4058a4:	mov	x0, #0x0                   	// #0
  4058a8:	ret
  4058ac:	nop
  4058b0:	stp	x29, x30, [sp, #-112]!
  4058b4:	adrp	x4, 483000 <argp_program_version_hook@@Base+0x290>
  4058b8:	mov	x29, sp
  4058bc:	ldr	w4, [x4, #804]
  4058c0:	stp	x19, x20, [sp, #16]
  4058c4:	mov	x19, x0
  4058c8:	cmp	w4, #0x4
  4058cc:	stp	x21, x22, [sp, #32]
  4058d0:	mov	x22, x1
  4058d4:	mov	w21, w3
  4058d8:	b.eq	4059a0 <wcrtomb@plt+0xd80>  // b.none
  4058dc:	b.ls	405988 <wcrtomb@plt+0xd68>  // b.plast
  4058e0:	cmp	w4, #0x7
  4058e4:	b.hi	405954 <wcrtomb@plt+0xd34>  // b.pmore
  4058e8:	ldr	x1, [x1]
  4058ec:	mov	w2, #0x5                   	// #5
  4058f0:	mov	x0, #0x0                   	// #0
  4058f4:	bl	4049c0 <dcgettext@plt>
  4058f8:	mov	x1, x0
  4058fc:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405900:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  405904:	mov	x0, x19
  405908:	ldr	x2, [x2, #3880]
  40590c:	ldr	x3, [x3, #864]
  405910:	mul	x2, x2, x3
  405914:	ucvtf	d0, x2
  405918:	bl	405068 <wcrtomb@plt+0x448>
  40591c:	mov	w20, w0
  405920:	cbz	w21, 405940 <wcrtomb@plt+0xd20>
  405924:	ldp	x0, x1, [x19, #40]
  405928:	cmp	x0, x1
  40592c:	b.cs	405acc <wcrtomb@plt+0xeac>  // b.hs, b.nlast
  405930:	add	x1, x0, #0x1
  405934:	add	w20, w20, #0x1
  405938:	str	x1, [x19, #40]
  40593c:	strb	w21, [x0]
  405940:	mov	w0, w20
  405944:	ldp	x19, x20, [sp, #16]
  405948:	ldp	x21, x22, [sp, #32]
  40594c:	ldp	x29, x30, [sp], #112
  405950:	ret
  405954:	cmp	w4, #0x8
  405958:	b.ne	405994 <wcrtomb@plt+0xd74>  // b.any
  40595c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405960:	add	x2, x2, #0x478
  405964:	ldr	x1, [x22, #8]
  405968:	mov	x0, x19
  40596c:	ldr	d0, [x2, #64]
  405970:	ldr	d1, [x2, #512]
  405974:	fadd	d0, d1, d0
  405978:	bl	405068 <wcrtomb@plt+0x448>
  40597c:	mov	w20, w0
  405980:	cbz	w21, 405940 <wcrtomb@plt+0xd20>
  405984:	b	405924 <wcrtomb@plt+0xd04>
  405988:	sub	w4, w4, #0x1
  40598c:	cmp	w4, #0x2
  405990:	b.ls	40595c <wcrtomb@plt+0xd3c>  // b.plast
  405994:	stp	x23, x24, [sp, #48]
  405998:	stp	x25, x26, [sp, #64]
  40599c:	bl	404650 <abort@plt>
  4059a0:	stp	x23, x24, [sp, #48]
  4059a4:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4059a8:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  4059ac:	stp	x25, x26, [sp, #64]
  4059b0:	mov	w25, w2
  4059b4:	ldr	x3, [x23, #864]
  4059b8:	ldr	x2, [x24, #3880]
  4059bc:	ldr	x1, [x1]
  4059c0:	mul	x2, x2, x3
  4059c4:	ucvtf	d0, x2
  4059c8:	bl	405068 <wcrtomb@plt+0x448>
  4059cc:	mov	w20, w0
  4059d0:	ldp	x0, x1, [x19, #40]
  4059d4:	cmp	x0, x1
  4059d8:	b.cs	405ae0 <wcrtomb@plt+0xec0>  // b.hs, b.nlast
  4059dc:	add	x1, x0, #0x1
  4059e0:	str	x1, [x19, #40]
  4059e4:	strb	w25, [x0]
  4059e8:	adrp	x26, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4059ec:	add	x26, x26, #0x478
  4059f0:	ldr	x1, [x22, #8]
  4059f4:	mov	x0, x19
  4059f8:	ldr	d0, [x26, #64]
  4059fc:	add	w20, w20, #0x1
  405a00:	ldr	d1, [x26, #512]
  405a04:	fadd	d0, d1, d0
  405a08:	bl	405068 <wcrtomb@plt+0x448>
  405a0c:	add	w20, w20, w0
  405a10:	ldp	x1, x0, [x19, #40]
  405a14:	cmp	x1, x0
  405a18:	b.cs	405af0 <wcrtomb@plt+0xed0>  // b.hs, b.nlast
  405a1c:	add	x0, x1, #0x1
  405a20:	str	x0, [x19, #40]
  405a24:	strb	w25, [x1]
  405a28:	ldr	x1, [x22, #16]
  405a2c:	add	w20, w20, #0x1
  405a30:	cbz	x1, 405a3c <wcrtomb@plt+0xe1c>
  405a34:	ldrb	w0, [x1]
  405a38:	cbnz	w0, 405aa0 <wcrtomb@plt+0xe80>
  405a3c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405a40:	ldr	d1, [x26, #64]
  405a44:	ldr	x0, [x24, #3880]
  405a48:	add	x1, sp, #0x58
  405a4c:	ldr	x3, [x2, #3976]
  405a50:	ldr	x2, [x23, #864]
  405a54:	sub	x0, x0, x3
  405a58:	ldr	d0, [x26, #512]
  405a5c:	mul	x0, x0, x2
  405a60:	fadd	d1, d0, d1
  405a64:	ucvtf	d0, x0
  405a68:	fsub	d0, d0, d1
  405a6c:	fcvtzu	x0, d0
  405a70:	bl	4398d8 <argp_parse@@Base+0x59f0>
  405a74:	mov	x3, x0
  405a78:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  405a7c:	mov	x0, x19
  405a80:	add	x2, x2, #0xb68
  405a84:	mov	w1, #0x1                   	// #1
  405a88:	bl	404700 <__fprintf_chk@plt>
  405a8c:	add	w20, w20, w0
  405a90:	ldp	x23, x24, [sp, #48]
  405a94:	ldp	x25, x26, [sp, #64]
  405a98:	cbz	w21, 405940 <wcrtomb@plt+0xd20>
  405a9c:	b	405924 <wcrtomb@plt+0xd04>
  405aa0:	mov	w2, #0x5                   	// #5
  405aa4:	mov	x0, #0x0                   	// #0
  405aa8:	bl	4049c0 <dcgettext@plt>
  405aac:	mov	x3, x0
  405ab0:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x10e10>
  405ab4:	mov	x0, x19
  405ab8:	add	x2, x2, #0xc50
  405abc:	mov	w1, #0x1                   	// #1
  405ac0:	bl	404700 <__fprintf_chk@plt>
  405ac4:	add	w20, w20, w0
  405ac8:	b	405a3c <wcrtomb@plt+0xe1c>
  405acc:	and	w1, w21, #0xff
  405ad0:	mov	x0, x19
  405ad4:	add	w20, w20, #0x1
  405ad8:	bl	404680 <__overflow@plt>
  405adc:	b	405940 <wcrtomb@plt+0xd20>
  405ae0:	and	w1, w25, #0xff
  405ae4:	mov	x0, x19
  405ae8:	bl	404680 <__overflow@plt>
  405aec:	b	4059e8 <wcrtomb@plt+0xdc8>
  405af0:	and	w1, w25, #0xff
  405af4:	mov	x0, x19
  405af8:	bl	404680 <__overflow@plt>
  405afc:	b	405a28 <wcrtomb@plt+0xe08>
  405b00:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405b04:	mov	w3, #0xa                   	// #10
  405b08:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  405b0c:	mov	w2, w3
  405b10:	ldr	x0, [x0, #1096]
  405b14:	add	x1, x1, #0x470
  405b18:	b	4058b0 <wcrtomb@plt+0xc90>
  405b1c:	nop
  405b20:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405b24:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405b28:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405b2c:	ldr	x1, [x1, #3952]
  405b30:	ldr	x0, [x0, #3928]
  405b34:	ldr	x2, [x2, #1664]
  405b38:	sub	x0, x1, x0
  405b3c:	add	x0, x2, x0, asr #9
  405b40:	ret
  405b44:	nop
  405b48:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405b4c:	add	x0, x0, #0x478
  405b50:	ldrb	w1, [x0, #528]
  405b54:	cbz	w1, 405b8c <wcrtomb@plt+0xf6c>
  405b58:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405b5c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  405b60:	adrp	x6, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405b64:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405b68:	ldr	x2, [x2, #3928]
  405b6c:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405b70:	ldrsw	x1, [x1, #692]
  405b74:	mov	w5, #0x1                   	// #1
  405b78:	str	x2, [x6, #3952]
  405b7c:	str	w5, [x4, #3904]
  405b80:	add	x1, x2, x1, lsl #9
  405b84:	str	x1, [x3, #3888]
  405b88:	strb	wzr, [x0, #528]
  405b8c:	ret
  405b90:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405b94:	ldr	x1, [x2, #3952]
  405b98:	cmp	x0, x1
  405b9c:	b.cc	405bb4 <wcrtomb@plt+0xf94>  // b.lo, b.ul, b.last
  405ba0:	sub	x0, x0, x1
  405ba4:	and	x0, x0, #0xfffffffffffffe00
  405ba8:	add	x0, x0, #0x200
  405bac:	add	x1, x1, x0
  405bb0:	str	x1, [x2, #3952]
  405bb4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405bb8:	ldr	x0, [x0, #3888]
  405bbc:	cmp	x0, x1
  405bc0:	b.cc	405bc8 <wcrtomb@plt+0xfa8>  // b.lo, b.ul, b.last
  405bc4:	ret
  405bc8:	stp	x29, x30, [sp, #-16]!
  405bcc:	mov	x29, sp
  405bd0:	bl	404650 <abort@plt>
  405bd4:	nop
  405bd8:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405bdc:	ldr	x1, [x1, #3888]
  405be0:	sub	x0, x1, x0
  405be4:	ret
  405be8:	stp	x29, x30, [sp, #-16]!
  405bec:	mov	x29, sp
  405bf0:	bl	4045c0 <close@plt>
  405bf4:	cbnz	w0, 405c00 <wcrtomb@plt+0xfe0>
  405bf8:	ldp	x29, x30, [sp], #16
  405bfc:	ret
  405c00:	mov	w2, #0x5                   	// #5
  405c04:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  405c08:	mov	x0, #0x0                   	// #0
  405c0c:	add	x1, x1, #0xcc8
  405c10:	bl	4049c0 <dcgettext@plt>
  405c14:	ldp	x29, x30, [sp], #16
  405c18:	b	429ce8 <wcrtomb@plt+0x250c8>
  405c1c:	nop
  405c20:	stp	x29, x30, [sp, #-16]!
  405c24:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405c28:	mov	x29, sp
  405c2c:	ldr	x0, [x0, #680]
  405c30:	ldr	x0, [x0]
  405c34:	bl	429e20 <wcrtomb@plt+0x25200>
  405c38:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405c3c:	add	x0, x0, #0x478
  405c40:	ldr	x1, [x0, #520]
  405c44:	cbz	x1, 405c64 <wcrtomb@plt+0x1044>
  405c48:	ldr	w1, [x0, #504]
  405c4c:	add	w2, w1, #0x1
  405c50:	str	w2, [x0, #504]
  405c54:	cmp	w1, #0xa
  405c58:	b.gt	405c9c <wcrtomb@plt+0x107c>
  405c5c:	ldp	x29, x30, [sp], #16
  405c60:	ret
  405c64:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405c68:	ldr	x0, [x0, #952]
  405c6c:	cbz	x0, 405c74 <wcrtomb@plt+0x1054>
  405c70:	blr	x0
  405c74:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  405c78:	add	x1, x1, #0xcd0
  405c7c:	mov	w2, #0x5                   	// #5
  405c80:	mov	x0, #0x0                   	// #0
  405c84:	bl	4049c0 <dcgettext@plt>
  405c88:	mov	x2, x0
  405c8c:	mov	w1, #0x0                   	// #0
  405c90:	mov	w0, #0x0                   	// #0
  405c94:	bl	404050 <error@plt>
  405c98:	bl	40e770 <wcrtomb@plt+0x9b50>
  405c9c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405ca0:	ldr	x0, [x0, #952]
  405ca4:	cbz	x0, 405cac <wcrtomb@plt+0x108c>
  405ca8:	blr	x0
  405cac:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  405cb0:	mov	w2, #0x5                   	// #5
  405cb4:	add	x1, x1, #0xcf8
  405cb8:	b	405c80 <wcrtomb@plt+0x1060>
  405cbc:	nop
  405cc0:	stp	x29, x30, [sp, #-224]!
  405cc4:	mov	x29, sp
  405cc8:	stp	x25, x26, [sp, #64]
  405ccc:	adrp	x26, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405cd0:	str	x27, [sp, #80]
  405cd4:	adrp	x27, 483000 <argp_program_version_hook@@Base+0x290>
  405cd8:	stp	x19, x20, [sp, #16]
  405cdc:	mov	x19, x0
  405ce0:	ldr	x20, [x27, #864]
  405ce4:	stp	x21, x22, [sp, #32]
  405ce8:	ldr	x21, [x26, #3928]
  405cec:	stp	x23, x24, [sp, #48]
  405cf0:	subs	x20, x20, x0
  405cf4:	add	x21, x21, x0
  405cf8:	mov	x24, #0x0                   	// #0
  405cfc:	b.eq	405d28 <wcrtomb@plt+0x1108>  // b.none
  405d00:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405d04:	and	x24, x20, #0x1ff
  405d08:	ldr	w0, [x0, #408]
  405d0c:	tbz	w0, #22, 405d28 <wcrtomb@plt+0x1108>
  405d10:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405d14:	ldr	x0, [x0, #1664]
  405d18:	orr	x0, x24, x0
  405d1c:	cbnz	x0, 405d28 <wcrtomb@plt+0x1108>
  405d20:	cbnz	x19, 405e08 <wcrtomb@plt+0x11e8>
  405d24:	nop
  405d28:	adrp	x25, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405d2c:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  405d30:	add	x25, x25, #0x478
  405d34:	add	x22, x22, #0x398
  405d38:	mov	w23, #0x3fffffff            	// #1073741823
  405d3c:	cbnz	x24, 405dbc <wcrtomb@plt+0x119c>
  405d40:	cmp	x20, #0x0
  405d44:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  405d48:	b.eq	405dc0 <wcrtomb@plt+0x11a0>  // b.none
  405d4c:	ldrb	w0, [x25, #529]
  405d50:	cbz	w0, 405dc0 <wcrtomb@plt+0x11a0>
  405d54:	mov	w24, #0xc0000000            	// #-1073741824
  405d58:	b	405d7c <wcrtomb@plt+0x115c>
  405d5c:	add	w0, w0, w24
  405d60:	mov	x2, x20
  405d64:	mov	x1, x21
  405d68:	bl	42afe8 <wcrtomb@plt+0x263c8>
  405d6c:	mov	x19, x0
  405d70:	cmn	x19, #0x1
  405d74:	b.ne	405da0 <wcrtomb@plt+0x1180>  // b.any
  405d78:	bl	405c20 <wcrtomb@plt+0x1000>
  405d7c:	ldr	w0, [x22]
  405d80:	cmp	w0, w23
  405d84:	b.gt	405d5c <wcrtomb@plt+0x113c>
  405d88:	mov	x2, x20
  405d8c:	mov	x1, x21
  405d90:	bl	440470 <argp_parse@@Base+0xc588>
  405d94:	mov	x19, x0
  405d98:	cmn	x19, #0x1
  405d9c:	b.eq	405d78 <wcrtomb@plt+0x1158>  // b.none
  405da0:	cbz	x19, 405dc0 <wcrtomb@plt+0x11a0>
  405da4:	ldrb	w0, [x25, #529]
  405da8:	cbz	w0, 405e7c <wcrtomb@plt+0x125c>
  405dac:	sub	x20, x20, x19
  405db0:	add	x21, x21, x19
  405db4:	and	x24, x20, #0x1ff
  405db8:	cbz	x24, 405d40 <wcrtomb@plt+0x1120>
  405dbc:	cbnz	x19, 405d54 <wcrtomb@plt+0x1134>
  405dc0:	ldr	x0, [x27, #864]
  405dc4:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405dc8:	ldr	x1, [x26, #3928]
  405dcc:	sub	x20, x0, x20
  405dd0:	ldr	x0, [x2, #3880]
  405dd4:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405dd8:	and	x20, x20, #0xfffffffffffffe00
  405ddc:	add	x20, x1, x20
  405de0:	add	x0, x0, #0x1
  405de4:	str	x20, [x3, #3888]
  405de8:	str	x0, [x2, #3880]
  405dec:	ldp	x19, x20, [sp, #16]
  405df0:	ldp	x21, x22, [sp, #32]
  405df4:	ldp	x23, x24, [sp, #48]
  405df8:	ldp	x25, x26, [sp, #64]
  405dfc:	ldr	x27, [sp, #80]
  405e00:	ldp	x29, x30, [sp], #224
  405e04:	ret
  405e08:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  405e0c:	add	x2, sp, #0x60
  405e10:	ldr	w1, [x1, #920]
  405e14:	bl	4049a0 <__fxstat@plt>
  405e18:	cbnz	w0, 405ecc <wcrtomb@plt+0x12ac>
  405e1c:	ldr	w0, [sp, #112]
  405e20:	mov	w1, #0xb000                	// #45056
  405e24:	and	w0, w0, w1
  405e28:	cmp	w0, #0x2, lsl #12
  405e2c:	b.ne	405d28 <wcrtomb@plt+0x1108>  // b.any
  405e30:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405e34:	lsr	x22, x19, #9
  405e38:	ldr	x0, [x0, #952]
  405e3c:	cbz	x0, 405e44 <wcrtomb@plt+0x1224>
  405e40:	blr	x0
  405e44:	mov	w4, #0x5                   	// #5
  405e48:	mov	x3, x22
  405e4c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x10e10>
  405e50:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  405e54:	add	x2, x2, #0xd18
  405e58:	add	x1, x1, #0xd38
  405e5c:	mov	x0, #0x0                   	// #0
  405e60:	bl	4048f0 <dcngettext@plt>
  405e64:	mov	x3, x22
  405e68:	mov	x2, x0
  405e6c:	mov	w1, #0x0                   	// #0
  405e70:	mov	w0, #0x0                   	// #0
  405e74:	bl	404050 <error@plt>
  405e78:	b	405d28 <wcrtomb@plt+0x1108>
  405e7c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  405e80:	ldr	x0, [x27, #864]
  405e84:	ldr	x1, [x1, #952]
  405e88:	sub	x20, x0, x20
  405e8c:	cbz	x1, 405e94 <wcrtomb@plt+0x1274>
  405e90:	blr	x1
  405e94:	mov	x3, x20
  405e98:	mov	w4, #0x5                   	// #5
  405e9c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x10e10>
  405ea0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  405ea4:	add	x2, x2, #0xd50
  405ea8:	add	x1, x1, #0xd78
  405eac:	mov	x0, #0x0                   	// #0
  405eb0:	bl	4048f0 <dcngettext@plt>
  405eb4:	mov	x3, x20
  405eb8:	mov	x2, x0
  405ebc:	mov	w1, #0x0                   	// #0
  405ec0:	mov	w0, #0x0                   	// #0
  405ec4:	bl	404050 <error@plt>
  405ec8:	bl	40e770 <wcrtomb@plt+0x9b50>
  405ecc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405ed0:	ldr	x0, [x0, #680]
  405ed4:	ldr	x0, [x0]
  405ed8:	bl	41bdb8 <wcrtomb@plt+0x17198>
  405edc:	b	405d28 <wcrtomb@plt+0x1108>
  405ee0:	stp	x29, x30, [sp, #-80]!
  405ee4:	mov	x29, sp
  405ee8:	stp	x19, x20, [sp, #16]
  405eec:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405ef0:	ldr	w3, [x19, #3904]
  405ef4:	cbnz	w3, 405f58 <wcrtomb@plt+0x1338>
  405ef8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  405efc:	ldrb	w1, [x0, #936]
  405f00:	cbnz	w1, 405fd8 <wcrtomb@plt+0x13b8>
  405f04:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405f08:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405f0c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405f10:	add	x1, x1, #0x478
  405f14:	ldr	x3, [x0, #3928]
  405f18:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  405f1c:	ldr	x0, [x4, #3888]
  405f20:	adrp	x6, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405f24:	ldr	x5, [x1, #520]
  405f28:	sub	x0, x0, x3
  405f2c:	ldrsw	x2, [x2, #692]
  405f30:	str	x3, [x6, #3952]
  405f34:	add	x0, x5, x0, asr #9
  405f38:	str	x0, [x1, #520]
  405f3c:	add	x0, x3, x2, lsl #9
  405f40:	str	x0, [x4, #3888]
  405f44:	ldr	x0, [x1, #536]
  405f48:	blr	x0
  405f4c:	ldp	x19, x20, [sp, #16]
  405f50:	ldp	x29, x30, [sp], #80
  405f54:	ret
  405f58:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405f5c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405f60:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  405f64:	ldr	x0, [x0, #3928]
  405f68:	ldr	x2, [x20, #3888]
  405f6c:	ldrsw	x4, [x1, #692]
  405f70:	sub	x2, x2, x0
  405f74:	asr	x2, x2, #9
  405f78:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405f7c:	add	x1, x1, #0x478
  405f80:	add	x4, x0, x4, lsl #9
  405f84:	str	x4, [x20, #3888]
  405f88:	adrp	x5, 482000 <_obstack_memory_used@@Base+0x3fe10>
  405f8c:	cmp	w3, #0x1
  405f90:	ldr	x4, [x1, #520]
  405f94:	ldr	x6, [x5, #3952]
  405f98:	add	x2, x4, x2
  405f9c:	str	x0, [x5, #3952]
  405fa0:	str	x2, [x1, #520]
  405fa4:	b.ne	405fc0 <wcrtomb@plt+0x13a0>  // b.any
  405fa8:	ldr	x1, [x1, #544]
  405fac:	sub	x0, x6, x0
  405fb0:	blr	x1
  405fb4:	ldp	x19, x20, [sp, #16]
  405fb8:	ldp	x29, x30, [sp], #80
  405fbc:	ret
  405fc0:	cmp	w3, #0x2
  405fc4:	b.eq	406214 <wcrtomb@plt+0x15f4>  // b.none
  405fc8:	cbz	w3, 405f44 <wcrtomb@plt+0x1324>
  405fcc:	ldp	x19, x20, [sp, #16]
  405fd0:	ldp	x29, x30, [sp], #80
  405fd4:	ret
  405fd8:	stp	x21, x22, [sp, #32]
  405fdc:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  405fe0:	mov	w1, #0x1                   	// #1
  405fe4:	strb	wzr, [x0, #936]
  405fe8:	mov	w3, #0x4                   	// #4
  405fec:	ldr	w0, [x22, #920]
  405ff0:	mov	w2, #0x3fffffff            	// #1073741823
  405ff4:	str	w1, [x19, #3904]
  405ff8:	add	x20, sp, #0x48
  405ffc:	str	x23, [sp, #48]
  406000:	cmp	w0, w2
  406004:	strh	w3, [sp, #72]
  406008:	str	w1, [sp, #76]
  40600c:	b.le	40610c <wcrtomb@plt+0x14ec>
  406010:	mov	w3, #0xc0000000            	// #-1073741824
  406014:	mov	w1, #0x6d01                	// #27905
  406018:	mov	x2, x20
  40601c:	add	w0, w0, w3
  406020:	movk	w1, #0x4008, lsl #16
  406024:	bl	42b320 <wcrtomb@plt+0x26700>
  406028:	mvn	w0, w0
  40602c:	lsr	w0, w0, #31
  406030:	cbnz	w0, 406128 <wcrtomb@plt+0x1508>
  406034:	bl	404ad0 <__errno_location@plt>
  406038:	ldr	w0, [x0]
  40603c:	ldr	w3, [x22, #920]
  406040:	cmp	w0, #0x5
  406044:	b.eq	40618c <wcrtomb@plt+0x156c>  // b.none
  406048:	mov	w0, #0x3fffffff            	// #1073741823
  40604c:	cmp	w3, w0
  406050:	b.gt	406160 <wcrtomb@plt+0x1540>
  406054:	mov	w0, w3
  406058:	mov	w2, #0x1                   	// #1
  40605c:	mov	x1, #0x0                   	// #0
  406060:	bl	4041d0 <lseek@plt>
  406064:	mov	x21, x0
  406068:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40606c:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406070:	ldr	w0, [x22, #920]
  406074:	mov	w2, #0x3fffffff            	// #1073741823
  406078:	ldr	x1, [x20, #3888]
  40607c:	ldr	x3, [x23, #3928]
  406080:	sub	x1, x1, x3
  406084:	subs	x21, x21, x1
  406088:	csel	x21, x21, xzr, pl  // pl = nfrst
  40608c:	cmp	w0, w2
  406090:	b.le	40617c <wcrtomb@plt+0x155c>
  406094:	mov	w1, #0xc0000000            	// #-1073741824
  406098:	mov	w2, #0x0                   	// #0
  40609c:	add	w0, w0, w1
  4060a0:	mov	x1, x21
  4060a4:	bl	42b1c0 <wcrtomb@plt+0x265a0>
  4060a8:	cmp	x21, x0
  4060ac:	b.eq	406104 <wcrtomb@plt+0x14e4>  // b.none
  4060b0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4060b4:	ldr	x0, [x0, #952]
  4060b8:	cbz	x0, 4060c0 <wcrtomb@plt+0x14a0>
  4060bc:	blr	x0
  4060c0:	mov	w2, #0x5                   	// #5
  4060c4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  4060c8:	mov	x0, #0x0                   	// #0
  4060cc:	add	x1, x1, #0xda0
  4060d0:	bl	4049c0 <dcgettext@plt>
  4060d4:	mov	x2, x0
  4060d8:	mov	w1, #0x0                   	// #0
  4060dc:	mov	w0, #0x0                   	// #0
  4060e0:	bl	404050 <error@plt>
  4060e4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4060e8:	ldr	x0, [x23, #3928]
  4060ec:	ldr	x2, [x1, #944]
  4060f0:	cmp	x0, x2
  4060f4:	b.eq	406134 <wcrtomb@plt+0x1514>  // b.none
  4060f8:	sub	x2, x2, x0
  4060fc:	mov	w1, #0x0                   	// #0
  406100:	bl	404410 <memset@plt>
  406104:	ldr	x0, [x23, #3928]
  406108:	b	406134 <wcrtomb@plt+0x1514>
  40610c:	mov	x1, #0x6d01                	// #27905
  406110:	mov	x2, x20
  406114:	movk	x1, #0x4008, lsl #16
  406118:	bl	404bd0 <ioctl@plt>
  40611c:	mvn	w0, w0
  406120:	lsr	w0, w0, #31
  406124:	b	406030 <wcrtomb@plt+0x1410>
  406128:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40612c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406130:	ldr	x0, [x23, #3928]
  406134:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  406138:	ldr	x3, [x20, #3888]
  40613c:	ldrsw	x4, [x21, #692]
  406140:	sub	x1, x3, x0
  406144:	asr	x2, x1, #9
  406148:	cmp	x4, x1, asr #9
  40614c:	b.gt	4061c4 <wcrtomb@plt+0x15a4>
  406150:	ldr	w3, [x19, #3904]
  406154:	ldp	x21, x22, [sp, #32]
  406158:	ldr	x23, [sp, #48]
  40615c:	b	405f78 <wcrtomb@plt+0x1358>
  406160:	mov	w0, #0xc0000000            	// #-1073741824
  406164:	mov	w2, #0x1                   	// #1
  406168:	add	w0, w3, w0
  40616c:	mov	x1, #0x0                   	// #0
  406170:	bl	42b1c0 <wcrtomb@plt+0x265a0>
  406174:	mov	x21, x0
  406178:	b	406068 <wcrtomb@plt+0x1448>
  40617c:	mov	x1, x21
  406180:	mov	w2, #0x0                   	// #0
  406184:	bl	4041d0 <lseek@plt>
  406188:	b	4060a8 <wcrtomb@plt+0x1488>
  40618c:	mov	w0, #0x3fffffff            	// #1073741823
  406190:	cmp	w3, w0
  406194:	b.le	4061f4 <wcrtomb@plt+0x15d4>
  406198:	mov	w1, #0x6d01                	// #27905
  40619c:	mov	x2, x20
  4061a0:	movk	w1, #0x4008, lsl #16
  4061a4:	mov	w0, #0xc0000000            	// #-1073741824
  4061a8:	add	w0, w3, w0
  4061ac:	bl	42b320 <wcrtomb@plt+0x26700>
  4061b0:	mvn	w0, w0
  4061b4:	lsr	w0, w0, #31
  4061b8:	cbnz	w0, 406128 <wcrtomb@plt+0x1508>
  4061bc:	ldr	w3, [x22, #920]
  4061c0:	b	406048 <wcrtomb@plt+0x1428>
  4061c4:	sub	x2, x4, x2
  4061c8:	mov	w1, #0x0                   	// #0
  4061cc:	mov	x0, x3
  4061d0:	lsl	x2, x2, #9
  4061d4:	bl	404410 <memset@plt>
  4061d8:	ldr	x1, [x23, #3928]
  4061dc:	ldrsw	x0, [x21, #692]
  4061e0:	ldp	x21, x22, [sp, #32]
  4061e4:	add	x0, x1, x0, lsl #9
  4061e8:	str	x0, [x20, #3888]
  4061ec:	ldr	x23, [sp, #48]
  4061f0:	b	405f4c <wcrtomb@plt+0x132c>
  4061f4:	mov	x1, #0x6d01                	// #27905
  4061f8:	mov	x2, x20
  4061fc:	mov	w0, w3
  406200:	movk	x1, #0x4008, lsl #16
  406204:	bl	404bd0 <ioctl@plt>
  406208:	mvn	w0, w0
  40620c:	lsr	w0, w0, #31
  406210:	b	4061b8 <wcrtomb@plt+0x1598>
  406214:	stp	x21, x22, [sp, #32]
  406218:	str	x23, [sp, #48]
  40621c:	bl	404650 <abort@plt>
  406220:	stp	x29, x30, [sp, #-48]!
  406224:	mov	x29, sp
  406228:	stp	x19, x20, [sp, #16]
  40622c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406230:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406234:	ldr	x0, [x20, #3952]
  406238:	ldr	x1, [x19, #3888]
  40623c:	cmp	x0, x1
  406240:	b.eq	406250 <wcrtomb@plt+0x1630>  // b.none
  406244:	ldp	x19, x20, [sp, #16]
  406248:	ldp	x29, x30, [sp], #48
  40624c:	ret
  406250:	str	x21, [sp, #32]
  406254:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406258:	add	x21, x21, #0x478
  40625c:	mov	x0, #0x0                   	// #0
  406260:	ldrb	w1, [x21, #528]
  406264:	cbnz	w1, 40627c <wcrtomb@plt+0x165c>
  406268:	bl	405ee0 <wcrtomb@plt+0x12c0>
  40626c:	ldr	x0, [x20, #3952]
  406270:	ldr	x1, [x19, #3888]
  406274:	cmp	x0, x1
  406278:	b.eq	40628c <wcrtomb@plt+0x166c>  // b.none
  40627c:	ldp	x19, x20, [sp, #16]
  406280:	ldr	x21, [sp, #32]
  406284:	ldp	x29, x30, [sp], #48
  406288:	ret
  40628c:	mov	w1, #0x1                   	// #1
  406290:	mov	x0, #0x0                   	// #0
  406294:	strb	w1, [x21, #528]
  406298:	ldr	x21, [sp, #32]
  40629c:	b	406244 <wcrtomb@plt+0x1624>
  4062a0:	stp	x29, x30, [sp, #-32]!
  4062a4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4062a8:	mov	x29, sp
  4062ac:	stp	x19, x20, [sp, #16]
  4062b0:	mov	x20, x0
  4062b4:	ldr	w0, [x1, #760]
  4062b8:	cmp	w0, #0x4
  4062bc:	b.eq	406378 <wcrtomb@plt+0x1758>  // b.none
  4062c0:	bl	406220 <wcrtomb@plt+0x1600>
  4062c4:	mov	x19, x0
  4062c8:	mov	x2, #0x200                 	// #512
  4062cc:	mov	w1, #0x0                   	// #0
  4062d0:	bl	404410 <memset@plt>
  4062d4:	mov	x2, #0x64                  	// #100
  4062d8:	mov	x1, x20
  4062dc:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  4062e0:	add	x20, x20, #0x28
  4062e4:	mov	x0, x19
  4062e8:	bl	404370 <__strcpy_chk@plt>
  4062ec:	mov	x1, x19
  4062f0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4062f4:	add	x0, x0, #0x30
  4062f8:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  4062fc:	ldr	x0, [x20, #8]
  406300:	bl	4355f8 <argp_parse@@Base+0x1710>
  406304:	mov	w3, w0
  406308:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40630c:	mov	w1, #0x56                  	// #86
  406310:	strb	w1, [x19, #156]
  406314:	mov	x2, #0xc                   	// #12
  406318:	ldr	x0, [x0, #656]
  40631c:	add	x1, x19, #0x88
  406320:	strb	w3, [x20, #16]
  406324:	bl	40b3e0 <wcrtomb@plt+0x67c0>
  406328:	mov	x1, x19
  40632c:	mov	x2, #0xffffffffffffffff    	// #-1
  406330:	mov	x0, x20
  406334:	bl	40b648 <wcrtomb@plt+0x6a28>
  406338:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40633c:	ldr	x1, [x2, #3952]
  406340:	cmp	x19, x1
  406344:	b.cc	40635c <wcrtomb@plt+0x173c>  // b.lo, b.ul, b.last
  406348:	sub	x0, x19, x1
  40634c:	and	x0, x0, #0xfffffffffffffe00
  406350:	add	x0, x0, #0x200
  406354:	add	x1, x1, x0
  406358:	str	x1, [x2, #3952]
  40635c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406360:	ldr	x0, [x0, #3888]
  406364:	cmp	x0, x1
  406368:	b.cc	40639c <wcrtomb@plt+0x177c>  // b.lo, b.ul, b.last
  40636c:	ldp	x19, x20, [sp, #16]
  406370:	ldp	x29, x30, [sp], #32
  406374:	ret
  406378:	mov	x2, x20
  40637c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406380:	ldp	x19, x20, [sp, #16]
  406384:	add	x1, x1, #0x478
  406388:	ldp	x29, x30, [sp], #32
  40638c:	add	x1, x1, #0x50
  406390:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x10e10>
  406394:	add	x0, x0, #0xde0
  406398:	b	413f80 <wcrtomb@plt+0xf360>
  40639c:	bl	404650 <abort@plt>
  4063a0:	stp	x29, x30, [sp, #-80]!
  4063a4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  4063a8:	mov	x29, sp
  4063ac:	ldrsw	x0, [x0, #1660]
  4063b0:	add	x1, sp, #0x38
  4063b4:	str	x21, [sp, #32]
  4063b8:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  4063bc:	stp	x19, x20, [sp, #16]
  4063c0:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4063c4:	mov	x20, x0
  4063c8:	ldr	x0, [x21, #592]
  4063cc:	bl	403ff0 <strlen@plt>
  4063d0:	mov	x19, x0
  4063d4:	mov	x0, x20
  4063d8:	bl	403ff0 <strlen@plt>
  4063dc:	add	x0, x19, x0
  4063e0:	add	x0, x0, #0x9
  4063e4:	bl	440f48 <argp_parse@@Base+0xd060>
  4063e8:	ldr	x4, [x21, #592]
  4063ec:	mov	x6, x20
  4063f0:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x10e10>
  4063f4:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x10e10>
  4063f8:	add	x5, x5, #0xdf8
  4063fc:	add	x3, x3, #0xe00
  406400:	mov	x2, #0xffffffffffffffff    	// #-1
  406404:	mov	w1, #0x1                   	// #1
  406408:	mov	x19, x0
  40640c:	bl	404010 <__sprintf_chk@plt>
  406410:	mov	x0, x19
  406414:	bl	4062a0 <wcrtomb@plt+0x1680>
  406418:	mov	x0, x19
  40641c:	ldp	x19, x20, [sp, #16]
  406420:	ldr	x21, [sp, #32]
  406424:	ldp	x29, x30, [sp], #80
  406428:	b	4047b0 <free@plt>
  40642c:	nop
  406430:	stp	x29, x30, [sp, #-80]!
  406434:	cmp	x0, #0x0
  406438:	mov	x29, sp
  40643c:	stp	x21, x22, [sp, #32]
  406440:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406444:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406448:	ldr	x1, [x22, #3928]
  40644c:	stp	x19, x20, [sp, #16]
  406450:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406454:	add	x20, x20, #0x478
  406458:	mov	x19, x0
  40645c:	add	x0, sp, #0x4f
  406460:	str	x23, [sp, #48]
  406464:	csel	x19, x0, x19, eq  // eq = none
  406468:	mov	w0, #0x1                   	// #1
  40646c:	ldrb	w23, [x20, #529]
  406470:	str	x1, [x21, #3888]
  406474:	strb	w0, [x20, #529]
  406478:	bl	406220 <wcrtomb@plt+0x1600>
  40647c:	ldr	x21, [x21, #3888]
  406480:	cmp	x0, #0x0
  406484:	strb	w23, [x20, #529]
  406488:	cset	w0, eq  // eq = none
  40648c:	ldr	x20, [x22, #3928]
  406490:	strb	w0, [x19]
  406494:	cmp	x20, x21
  406498:	b.eq	4064cc <wcrtomb@plt+0x18ac>  // b.none
  40649c:	add	x19, x20, #0x101
  4064a0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  4064a4:	mov	x0, x19
  4064a8:	add	x1, x1, #0xe18
  4064ac:	bl	404710 <strcmp@plt>
  4064b0:	cbz	w0, 406520 <wcrtomb@plt+0x1900>
  4064b4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  4064b8:	mov	x0, x19
  4064bc:	add	x1, x1, #0xe20
  4064c0:	bl	404710 <strcmp@plt>
  4064c4:	cbz	w0, 406520 <wcrtomb@plt+0x1900>
  4064c8:	mov	x21, x20
  4064cc:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x11e10>
  4064d0:	add	x20, x20, #0x470
  4064d4:	add	x19, x20, #0x48
  4064d8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  4064dc:	add	x20, x20, #0x108
  4064e0:	add	x1, x1, #0xe10
  4064e4:	mov	x2, #0x2                   	// #2
  4064e8:	b	4064f0 <wcrtomb@plt+0x18d0>
  4064ec:	ldp	x2, x1, [x19, #8]
  4064f0:	mov	x0, x21
  4064f4:	bl	4046d0 <memcmp@plt>
  4064f8:	cbz	w0, 40653c <wcrtomb@plt+0x191c>
  4064fc:	add	x19, x19, #0x18
  406500:	cmp	x19, x20
  406504:	b.ne	4064ec <wcrtomb@plt+0x18cc>  // b.any
  406508:	mov	w0, #0x0                   	// #0
  40650c:	ldp	x19, x20, [sp, #16]
  406510:	ldp	x21, x22, [sp, #32]
  406514:	ldr	x23, [sp, #48]
  406518:	ldp	x29, x30, [sp], #80
  40651c:	ret
  406520:	mov	x0, x20
  406524:	mov	w1, #0x1                   	// #1
  406528:	bl	418570 <wcrtomb@plt+0x13950>
  40652c:	cmp	w0, #0x1
  406530:	b.eq	40650c <wcrtomb@plt+0x18ec>  // b.none
  406534:	ldr	x21, [x22, #3928]
  406538:	b	4064cc <wcrtomb@plt+0x18ac>
  40653c:	ldr	w0, [x19]
  406540:	ldp	x19, x20, [sp, #16]
  406544:	ldp	x21, x22, [sp, #32]
  406548:	ldr	x23, [sp, #48]
  40654c:	ldp	x29, x30, [sp], #80
  406550:	ret
  406554:	nop
  406558:	stp	x29, x30, [sp, #-64]!
  40655c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406560:	mov	x29, sp
  406564:	stp	x21, x22, [sp, #32]
  406568:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40656c:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  406570:	ldr	x3, [x1, #3928]
  406574:	ldr	x2, [x21, #3952]
  406578:	ldrsw	x1, [x22, #692]
  40657c:	sub	x2, x2, x3
  406580:	sub	x1, x1, x2, asr #9
  406584:	cmp	x0, x1, lsl #9
  406588:	b.le	406660 <wcrtomb@plt+0x1a40>
  40658c:	stp	x23, x24, [sp, #48]
  406590:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  406594:	lsl	x1, x1, #9
  406598:	stp	x19, x20, [sp, #16]
  40659c:	asr	x19, x2, #9
  4065a0:	sub	x0, x0, x1
  4065a4:	ldr	x2, [x23, #864]
  4065a8:	cmp	x0, x2
  4065ac:	b.cc	406648 <wcrtomb@plt+0x1a28>  // b.lo, b.ul, b.last
  4065b0:	udiv	x1, x0, x2
  4065b4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4065b8:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4065bc:	add	x20, x20, #0x478
  4065c0:	ldr	w0, [x0, #920]
  4065c4:	mov	w3, #0x3fffffff            	// #1073741823
  4065c8:	mul	x1, x1, x2
  4065cc:	cmp	w0, w3
  4065d0:	ldr	x24, [x20, #520]
  4065d4:	b.le	406670 <wcrtomb@plt+0x1a50>
  4065d8:	mov	w3, #0xc0000000            	// #-1073741824
  4065dc:	mov	w2, #0x1                   	// #1
  4065e0:	add	w0, w0, w3
  4065e4:	bl	42b1c0 <wcrtomb@plt+0x265a0>
  4065e8:	tbnz	x0, #63, 40667c <wcrtomb@plt+0x1a5c>
  4065ec:	ldr	x2, [x23, #864]
  4065f0:	udiv	x1, x0, x2
  4065f4:	msub	x1, x1, x2, x0
  4065f8:	cbnz	x1, 406690 <wcrtomb@plt+0x1a70>
  4065fc:	ldrsw	x1, [x22, #692]
  406600:	asr	x2, x0, #9
  406604:	add	x0, x19, x24
  406608:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40660c:	sub	x0, x2, x0
  406610:	sub	x2, x2, x1
  406614:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406618:	str	x2, [x20, #520]
  40661c:	ldr	x2, [x3, #3880]
  406620:	sdiv	x1, x0, x1
  406624:	ldr	x4, [x4, #3888]
  406628:	str	x4, [x21, #3952]
  40662c:	ldp	x19, x20, [sp, #16]
  406630:	add	x1, x1, x2
  406634:	str	x1, [x3, #3880]
  406638:	ldp	x21, x22, [sp, #32]
  40663c:	ldp	x23, x24, [sp, #48]
  406640:	ldp	x29, x30, [sp], #64
  406644:	ret
  406648:	mov	x0, #0x0                   	// #0
  40664c:	ldp	x19, x20, [sp, #16]
  406650:	ldp	x21, x22, [sp, #32]
  406654:	ldp	x23, x24, [sp, #48]
  406658:	ldp	x29, x30, [sp], #64
  40665c:	ret
  406660:	mov	x0, #0x0                   	// #0
  406664:	ldp	x21, x22, [sp, #32]
  406668:	ldp	x29, x30, [sp], #64
  40666c:	ret
  406670:	mov	w2, #0x1                   	// #1
  406674:	bl	4041d0 <lseek@plt>
  406678:	tbz	x0, #63, 4065ec <wcrtomb@plt+0x19cc>
  40667c:	ldp	x19, x20, [sp, #16]
  406680:	ldp	x21, x22, [sp, #32]
  406684:	ldp	x23, x24, [sp, #48]
  406688:	ldp	x29, x30, [sp], #64
  40668c:	ret
  406690:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406694:	ldr	x0, [x0, #952]
  406698:	cbz	x0, 4066a0 <wcrtomb@plt+0x1a80>
  40669c:	blr	x0
  4066a0:	mov	w2, #0x5                   	// #5
  4066a4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  4066a8:	mov	x0, #0x0                   	// #0
  4066ac:	add	x1, x1, #0xe28
  4066b0:	bl	4049c0 <dcgettext@plt>
  4066b4:	mov	x2, x0
  4066b8:	mov	w1, #0x0                   	// #0
  4066bc:	mov	w0, #0x0                   	// #0
  4066c0:	bl	404050 <error@plt>
  4066c4:	bl	40e770 <wcrtomb@plt+0x9b50>
  4066c8:	stp	x29, x30, [sp, #-32]!
  4066cc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4066d0:	mov	x29, sp
  4066d4:	ldrb	w0, [x0, #936]
  4066d8:	stp	x19, x20, [sp, #16]
  4066dc:	cbnz	w0, 40676c <wcrtomb@plt+0x1b4c>
  4066e0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4066e4:	ldr	w0, [x0, #3904]
  4066e8:	cmp	w0, #0x1
  4066ec:	b.eq	40676c <wcrtomb@plt+0x1b4c>  // b.none
  4066f0:	bl	405738 <wcrtomb@plt+0xb18>
  4066f4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4066f8:	ldrb	w0, [x0, #786]
  4066fc:	cbnz	w0, 4067a4 <wcrtomb@plt+0x1b84>
  406700:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406704:	mov	w1, #0x3fffffff            	// #1073741823
  406708:	ldr	w0, [x0, #920]
  40670c:	cmp	w0, w1
  406710:	b.le	4067bc <wcrtomb@plt+0x1b9c>
  406714:	mov	w1, #0xc0000000            	// #-1073741824
  406718:	add	w0, w0, w1
  40671c:	bl	42af90 <wcrtomb@plt+0x26370>
  406720:	cmp	w0, #0x0
  406724:	cset	w0, ne  // ne = any
  406728:	cbnz	w0, 4067cc <wcrtomb@plt+0x1bac>
  40672c:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406730:	add	x19, x19, #0x478
  406734:	ldrb	w1, [x19, #528]
  406738:	ldr	w0, [x19, #552]
  40673c:	bl	421680 <wcrtomb@plt+0x1ca60>
  406740:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406744:	add	x0, x0, #0x28
  406748:	bl	425ff8 <wcrtomb@plt+0x213d8>
  40674c:	ldr	x0, [x19, #48]
  406750:	bl	4047b0 <free@plt>
  406754:	ldr	x0, [x19, #56]
  406758:	bl	4047b0 <free@plt>
  40675c:	ldp	x19, x20, [sp, #16]
  406760:	mov	x0, #0x0                   	// #0
  406764:	ldp	x29, x30, [sp], #32
  406768:	b	404fe8 <wcrtomb@plt+0x3c8>
  40676c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406770:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406774:	add	x20, x20, #0xf70
  406778:	add	x19, x19, #0xf58
  40677c:	nop
  406780:	bl	405ee0 <wcrtomb@plt+0x12c0>
  406784:	ldr	x0, [x19]
  406788:	ldr	x1, [x20]
  40678c:	cmp	x1, x0
  406790:	b.hi	406780 <wcrtomb@plt+0x1b60>  // b.pmore
  406794:	bl	405738 <wcrtomb@plt+0xb18>
  406798:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40679c:	ldrb	w0, [x0, #786]
  4067a0:	cbz	w0, 406700 <wcrtomb@plt+0x1ae0>
  4067a4:	bl	40a4d0 <wcrtomb@plt+0x58b0>
  4067a8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4067ac:	mov	w1, #0x3fffffff            	// #1073741823
  4067b0:	ldr	w0, [x0, #920]
  4067b4:	cmp	w0, w1
  4067b8:	b.gt	406714 <wcrtomb@plt+0x1af4>
  4067bc:	bl	4045c0 <close@plt>
  4067c0:	cmp	w0, #0x0
  4067c4:	cset	w0, ne  // ne = any
  4067c8:	cbz	w0, 40672c <wcrtomb@plt+0x1b0c>
  4067cc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4067d0:	ldr	x0, [x0, #680]
  4067d4:	ldr	x0, [x0]
  4067d8:	bl	429ce8 <wcrtomb@plt+0x250c8>
  4067dc:	b	40672c <wcrtomb@plt+0x1b0c>
  4067e0:	stp	x29, x30, [sp, #-16]!
  4067e4:	mov	x29, sp
  4067e8:	bl	42a2f8 <wcrtomb@plt+0x256d8>
  4067ec:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4067f0:	mov	w1, #0x3fffffff            	// #1073741823
  4067f4:	ldr	w0, [x0, #920]
  4067f8:	cmp	w0, w1
  4067fc:	b.le	40682c <wcrtomb@plt+0x1c0c>
  406800:	mov	w1, #0xc0000000            	// #-1073741824
  406804:	add	w0, w0, w1
  406808:	bl	42af90 <wcrtomb@plt+0x26370>
  40680c:	cmp	w0, #0x0
  406810:	cset	w0, ne  // ne = any
  406814:	cbnz	w0, 40683c <wcrtomb@plt+0x1c1c>
  406818:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40681c:	mov	w1, #0x0                   	// #0
  406820:	ldr	w0, [x0, #1696]
  406824:	bl	421680 <wcrtomb@plt+0x1ca60>
  406828:	bl	40e770 <wcrtomb@plt+0x9b50>
  40682c:	bl	4045c0 <close@plt>
  406830:	cmp	w0, #0x0
  406834:	cset	w0, ne  // ne = any
  406838:	cbz	w0, 406818 <wcrtomb@plt+0x1bf8>
  40683c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406840:	ldr	x0, [x0, #680]
  406844:	ldr	x0, [x0]
  406848:	bl	429ce8 <wcrtomb@plt+0x250c8>
  40684c:	b	406818 <wcrtomb@plt+0x1bf8>
  406850:	stp	x29, x30, [sp, #-48]!
  406854:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  406858:	mov	x29, sp
  40685c:	stp	x19, x20, [sp, #16]
  406860:	mov	x19, x0
  406864:	ldrb	w0, [x1, #641]
  406868:	str	x21, [sp, #32]
  40686c:	cbnz	w0, 40688c <wcrtomb@plt+0x1c6c>
  406870:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406874:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  406878:	mov	x1, x19
  40687c:	ldr	x0, [x0, #680]
  406880:	ldr	x2, [x2, #864]
  406884:	ldr	x0, [x0]
  406888:	bl	4067e0 <wcrtomb@plt+0x1bc0>
  40688c:	bl	404ad0 <__errno_location@plt>
  406890:	mov	x20, x0
  406894:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406898:	mov	w3, #0xa                   	// #10
  40689c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4068a0:	add	x1, x1, #0x470
  4068a4:	ldr	x0, [x2, #1096]
  4068a8:	mov	w2, w3
  4068ac:	ldr	w21, [x20]
  4068b0:	bl	4058b0 <wcrtomb@plt+0xc90>
  4068b4:	str	w21, [x20]
  4068b8:	b	406870 <wcrtomb@plt+0x1c50>
  4068bc:	nop
  4068c0:	stp	x29, x30, [sp, #-16]!
  4068c4:	mov	x29, sp
  4068c8:	bl	405290 <wcrtomb@plt+0x670>
  4068cc:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4068d0:	ldr	x1, [x1, #864]
  4068d4:	cmp	x1, x0
  4068d8:	b.ne	40690c <wcrtomb@plt+0x1cec>  // b.any
  4068dc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4068e0:	add	x0, x0, #0x478
  4068e4:	scvtf	d0, x1
  4068e8:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4068ec:	ldr	d1, [x0, #64]
  4068f0:	ldr	x1, [x2, #3896]
  4068f4:	fadd	d0, d0, d1
  4068f8:	add	x1, x1, #0x1
  4068fc:	str	x1, [x2, #3896]
  406900:	str	d0, [x0, #64]
  406904:	ldp	x29, x30, [sp], #16
  406908:	ret
  40690c:	bl	406850 <wcrtomb@plt+0x1c30>
  406910:	stp	x29, x30, [sp, #-64]!
  406914:	mov	w0, #0x0                   	// #0
  406918:	mov	x29, sp
  40691c:	stp	x19, x20, [sp, #16]
  406920:	stp	x21, x22, [sp, #32]
  406924:	str	x23, [sp, #48]
  406928:	bl	409578 <wcrtomb@plt+0x4958>
  40692c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406930:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406934:	add	x0, x0, #0x478
  406938:	ldrb	w1, [x1, #3936]
  40693c:	str	wzr, [x0, #504]
  406940:	cbz	w1, 40694c <wcrtomb@plt+0x1d2c>
  406944:	ldr	x0, [x0, #520]
  406948:	cbnz	x0, 4069d0 <wcrtomb@plt+0x1db0>
  40694c:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  406950:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  406954:	ldr	w3, [x20, #920]
  406958:	ldr	x2, [x1, #864]
  40695c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406960:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  406964:	add	x20, x20, #0x398
  406968:	add	x21, x21, #0xf58
  40696c:	add	x19, x19, #0x360
  406970:	mov	w22, #0x3fffffff            	// #1073741823
  406974:	mov	w23, #0xc0000000            	// #-1073741824
  406978:	cmp	w3, w22
  40697c:	ldr	x1, [x21]
  406980:	b.le	4069b4 <wcrtomb@plt+0x1d94>
  406984:	add	w0, w3, w23
  406988:	bl	42afe8 <wcrtomb@plt+0x263c8>
  40698c:	ldr	x1, [x19]
  406990:	cmp	x1, x0
  406994:	b.eq	406a00 <wcrtomb@plt+0x1de0>  // b.none
  406998:	cmn	x0, #0x1
  40699c:	b.eq	4069c0 <wcrtomb@plt+0x1da0>  // b.none
  4069a0:	ldp	x19, x20, [sp, #16]
  4069a4:	ldp	x21, x22, [sp, #32]
  4069a8:	ldr	x23, [sp, #48]
  4069ac:	ldp	x29, x30, [sp], #64
  4069b0:	b	405cc0 <wcrtomb@plt+0x10a0>
  4069b4:	mov	w0, w3
  4069b8:	bl	440470 <argp_parse@@Base+0xc588>
  4069bc:	b	40698c <wcrtomb@plt+0x1d6c>
  4069c0:	bl	405c20 <wcrtomb@plt+0x1000>
  4069c4:	ldr	w3, [x20]
  4069c8:	ldr	x2, [x19]
  4069cc:	b	406978 <wcrtomb@plt+0x1d58>
  4069d0:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  4069d4:	mov	w0, #0x1                   	// #1
  4069d8:	str	w0, [x20, #920]
  4069dc:	bl	4218f0 <wcrtomb@plt+0x1ccd0>
  4069e0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4069e4:	str	wzr, [x20, #920]
  4069e8:	mov	x2, x0
  4069ec:	mov	w3, #0x0                   	// #0
  4069f0:	ldr	x1, [x1, #864]
  4069f4:	cmp	x1, x0
  4069f8:	b.eq	40695c <wcrtomb@plt+0x1d3c>  // b.none
  4069fc:	bl	406850 <wcrtomb@plt+0x1c30>
  406a00:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406a04:	ldp	x19, x20, [sp, #16]
  406a08:	ldr	x0, [x1, #3880]
  406a0c:	ldp	x21, x22, [sp, #32]
  406a10:	add	x0, x0, #0x1
  406a14:	str	x0, [x1, #3880]
  406a18:	ldr	x23, [sp, #48]
  406a1c:	ldp	x29, x30, [sp], #64
  406a20:	ret
  406a24:	nop
  406a28:	stp	x29, x30, [sp, #-48]!
  406a2c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  406a30:	add	x1, x1, #0xf28
  406a34:	mov	x29, sp
  406a38:	stp	x19, x20, [sp, #16]
  406a3c:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  406a40:	ldr	x0, [x20, #608]
  406a44:	bl	4042e0 <fopen@plt>
  406a48:	cbz	x0, 406a9c <wcrtomb@plt+0x1e7c>
  406a4c:	mov	x19, x0
  406a50:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  406a54:	add	x1, x1, #0x9c8
  406a58:	str	x21, [sp, #32]
  406a5c:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  406a60:	add	x2, x21, #0x678
  406a64:	bl	404380 <__isoc99_fscanf@plt>
  406a68:	cmp	w0, #0x1
  406a6c:	b.ne	406ae8 <wcrtomb@plt+0x1ec8>  // b.any
  406a70:	ldr	w0, [x21, #1656]
  406a74:	tbnz	w0, #31, 406ae8 <wcrtomb@plt+0x1ec8>
  406a78:	ldr	w0, [x19]
  406a7c:	tbnz	w0, #5, 406ad0 <wcrtomb@plt+0x1eb0>
  406a80:	mov	x0, x19
  406a84:	bl	4042a0 <fclose@plt>
  406a88:	cbnz	w0, 406abc <wcrtomb@plt+0x1e9c>
  406a8c:	ldr	x21, [sp, #32]
  406a90:	ldp	x19, x20, [sp, #16]
  406a94:	ldp	x29, x30, [sp], #48
  406a98:	ret
  406a9c:	bl	404ad0 <__errno_location@plt>
  406aa0:	ldr	w0, [x0]
  406aa4:	cmp	w0, #0x2
  406aa8:	b.eq	406a90 <wcrtomb@plt+0x1e70>  // b.none
  406aac:	ldr	x0, [x20, #608]
  406ab0:	ldp	x19, x20, [sp, #16]
  406ab4:	ldp	x29, x30, [sp], #48
  406ab8:	b	429de8 <wcrtomb@plt+0x251c8>
  406abc:	ldr	x0, [x20, #608]
  406ac0:	ldp	x19, x20, [sp, #16]
  406ac4:	ldr	x21, [sp, #32]
  406ac8:	ldp	x29, x30, [sp], #48
  406acc:	b	429ce8 <wcrtomb@plt+0x250c8>
  406ad0:	ldr	x0, [x20, #608]
  406ad4:	bl	429e20 <wcrtomb@plt+0x25200>
  406ad8:	mov	x0, x19
  406adc:	bl	4042a0 <fclose@plt>
  406ae0:	cbz	w0, 406a8c <wcrtomb@plt+0x1e6c>
  406ae4:	b	406abc <wcrtomb@plt+0x1e9c>
  406ae8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406aec:	ldr	x0, [x0, #952]
  406af0:	cbz	x0, 406af8 <wcrtomb@plt+0x1ed8>
  406af4:	blr	x0
  406af8:	mov	w2, #0x5                   	// #5
  406afc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  406b00:	mov	x0, #0x0                   	// #0
  406b04:	add	x1, x1, #0xe58
  406b08:	bl	4049c0 <dcgettext@plt>
  406b0c:	mov	x19, x0
  406b10:	ldr	x0, [x20, #608]
  406b14:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  406b18:	mov	x3, x0
  406b1c:	mov	x2, x19
  406b20:	mov	w1, #0x0                   	// #0
  406b24:	mov	w0, #0x0                   	// #0
  406b28:	bl	404050 <error@plt>
  406b2c:	bl	40e770 <wcrtomb@plt+0x9b50>
  406b30:	stp	x29, x30, [sp, #-32]!
  406b34:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  406b38:	add	x1, x1, #0xe80
  406b3c:	mov	x29, sp
  406b40:	stp	x19, x20, [sp, #16]
  406b44:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  406b48:	ldr	x0, [x20, #608]
  406b4c:	bl	4042e0 <fopen@plt>
  406b50:	cbz	x0, 406bb8 <wcrtomb@plt+0x1f98>
  406b54:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  406b58:	mov	x19, x0
  406b5c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x10e10>
  406b60:	mov	w1, #0x1                   	// #1
  406b64:	ldr	w3, [x3, #1656]
  406b68:	add	x2, x2, #0xe88
  406b6c:	bl	404700 <__fprintf_chk@plt>
  406b70:	ldr	w0, [x19]
  406b74:	tbnz	w0, #5, 406ba0 <wcrtomb@plt+0x1f80>
  406b78:	mov	x0, x19
  406b7c:	bl	4042a0 <fclose@plt>
  406b80:	cbnz	w0, 406b90 <wcrtomb@plt+0x1f70>
  406b84:	ldp	x19, x20, [sp, #16]
  406b88:	ldp	x29, x30, [sp], #32
  406b8c:	ret
  406b90:	ldr	x0, [x20, #608]
  406b94:	ldp	x19, x20, [sp, #16]
  406b98:	ldp	x29, x30, [sp], #32
  406b9c:	b	429ce8 <wcrtomb@plt+0x250c8>
  406ba0:	ldr	x0, [x20, #608]
  406ba4:	bl	42a2e8 <wcrtomb@plt+0x256c8>
  406ba8:	mov	x0, x19
  406bac:	bl	4042a0 <fclose@plt>
  406bb0:	cbz	w0, 406b84 <wcrtomb@plt+0x1f64>
  406bb4:	b	406b90 <wcrtomb@plt+0x1f70>
  406bb8:	ldr	x0, [x20, #608]
  406bbc:	ldp	x19, x20, [sp, #16]
  406bc0:	ldp	x29, x30, [sp], #32
  406bc4:	b	429de8 <wcrtomb@plt+0x251c8>
  406bc8:	stp	x29, x30, [sp, #-160]!
  406bcc:	mov	x29, sp
  406bd0:	stp	x19, x20, [sp, #16]
  406bd4:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406bd8:	add	x19, x19, #0x478
  406bdc:	str	w0, [sp, #124]
  406be0:	ldr	x0, [x19, #560]
  406be4:	cbz	x0, 406e3c <wcrtomb@plt+0x221c>
  406be8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406bec:	ldrb	w0, [x0, #3968]
  406bf0:	cbnz	w0, 406e2c <wcrtomb@plt+0x220c>
  406bf4:	stp	x23, x24, [sp, #48]
  406bf8:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  406bfc:	ldrb	w0, [x24, #786]
  406c00:	stp	x21, x22, [sp, #32]
  406c04:	stp	x25, x26, [sp, #64]
  406c08:	cbnz	w0, 406d14 <wcrtomb@plt+0x20f4>
  406c0c:	mov	x1, #0x0                   	// #0
  406c10:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406c14:	add	x0, x0, #0xf48
  406c18:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  406c1c:	mov	x1, #0x0                   	// #0
  406c20:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406c24:	add	x0, x0, #0xf50
  406c28:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  406c2c:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406c30:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406c34:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  406c38:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406c3c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406c40:	mov	w1, #0x3fffffff            	// #1073741823
  406c44:	ldr	x4, [x4, #3928]
  406c48:	str	x4, [x0, #3952]
  406c4c:	str	xzr, [x3, #3960]
  406c50:	ldr	w0, [x23, #920]
  406c54:	str	xzr, [x2, #3944]
  406c58:	cmp	w0, w1
  406c5c:	b.gt	406ce4 <wcrtomb@plt+0x20c4>
  406c60:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  406c64:	bl	4045c0 <close@plt>
  406c68:	cmp	w0, #0x0
  406c6c:	ldr	x20, [x22, #680]
  406c70:	cset	w0, ne  // ne = any
  406c74:	cbnz	w0, 406d04 <wcrtomb@plt+0x20e4>
  406c78:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  406c7c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406c80:	add	x20, x20, #0x8
  406c84:	str	x20, [x22, #680]
  406c88:	ldr	x1, [x1, #632]
  406c8c:	ldr	x0, [x0, #792]
  406c90:	add	x0, x1, x0, lsl #3
  406c94:	cmp	x20, x0
  406c98:	b.eq	406ea0 <wcrtomb@plt+0x2280>  // b.none
  406c9c:	ldr	w0, [x19, #568]
  406ca0:	cbnz	w0, 406d58 <wcrtomb@plt+0x2138>
  406ca4:	ldr	x25, [x20]
  406ca8:	ldrb	w0, [x25]
  406cac:	cmp	w0, #0x2d
  406cb0:	b.ne	406da0 <wcrtomb@plt+0x2180>  // b.any
  406cb4:	ldrb	w0, [x25, #1]
  406cb8:	cbnz	w0, 406da0 <wcrtomb@plt+0x2180>
  406cbc:	str	wzr, [x23, #920]
  406cc0:	mov	w1, #0x1                   	// #1
  406cc4:	strb	w1, [x19, #529]
  406cc8:	mov	w0, #0x1                   	// #1
  406ccc:	ldp	x19, x20, [sp, #16]
  406cd0:	ldp	x21, x22, [sp, #32]
  406cd4:	ldp	x23, x24, [sp, #48]
  406cd8:	ldp	x25, x26, [sp, #64]
  406cdc:	ldp	x29, x30, [sp], #160
  406ce0:	ret
  406ce4:	mov	w1, #0xc0000000            	// #-1073741824
  406ce8:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  406cec:	add	w0, w0, w1
  406cf0:	bl	42af90 <wcrtomb@plt+0x26370>
  406cf4:	cmp	w0, #0x0
  406cf8:	ldr	x20, [x22, #680]
  406cfc:	cset	w0, ne  // ne = any
  406d00:	cbz	w0, 406c78 <wcrtomb@plt+0x2058>
  406d04:	ldr	x0, [x20]
  406d08:	bl	429ce8 <wcrtomb@plt+0x250c8>
  406d0c:	ldr	x20, [x22, #680]
  406d10:	b	406c78 <wcrtomb@plt+0x2058>
  406d14:	bl	40a4d0 <wcrtomb@plt+0x58b0>
  406d18:	b	406c0c <wcrtomb@plt+0x1fec>
  406d1c:	ldr	x0, [x22, #680]
  406d20:	ldr	x0, [x0]
  406d24:	bl	429e10 <wcrtomb@plt+0x251f0>
  406d28:	ldr	w1, [sp, #124]
  406d2c:	ldrb	w0, [x24, #786]
  406d30:	cmp	w1, #0x1
  406d34:	eor	w0, w0, #0x1
  406d38:	cset	w1, eq  // eq = none
  406d3c:	tst	w1, w0
  406d40:	b.eq	406d58 <wcrtomb@plt+0x2138>  // b.none
  406d44:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406d48:	ldrb	w0, [x0, #701]
  406d4c:	cbz	w0, 406d58 <wcrtomb@plt+0x2138>
  406d50:	bl	41b860 <wcrtomb@plt+0x16c40>
  406d54:	nop
  406d58:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  406d5c:	ldr	x0, [x20, #712]
  406d60:	cbz	x0, 406eb0 <wcrtomb@plt+0x2290>
  406d64:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406d68:	ldr	x0, [x0, #608]
  406d6c:	cbz	x0, 406d74 <wcrtomb@plt+0x2154>
  406d70:	bl	406b30 <wcrtomb@plt+0x1f10>
  406d74:	adrp	x25, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  406d78:	ldr	x0, [x22, #680]
  406d7c:	ldr	w1, [x25, #1656]
  406d80:	add	w1, w1, #0x1
  406d84:	bl	422400 <wcrtomb@plt+0x1d7e0>
  406d88:	cbnz	w0, 407308 <wcrtomb@plt+0x26e8>
  406d8c:	ldr	x20, [x22, #680]
  406d90:	ldr	x25, [x20]
  406d94:	ldrb	w0, [x25]
  406d98:	cmp	w0, #0x2d
  406d9c:	b.eq	406cb4 <wcrtomb@plt+0x2094>  // b.none
  406da0:	ldrb	w0, [x24, #786]
  406da4:	cbz	w0, 406e64 <wcrtomb@plt+0x2244>
  406da8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406dac:	ldrb	w0, [x0, #960]
  406db0:	cbnz	w0, 406e88 <wcrtomb@plt+0x2268>
  406db4:	mov	x0, x25
  406db8:	mov	w1, #0x3a                  	// #58
  406dbc:	bl	404870 <strchr@plt>
  406dc0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  406dc4:	str	x0, [x1, #968]
  406dc8:	ldr	x25, [x20]
  406dcc:	cbz	x0, 406e88 <wcrtomb@plt+0x2268>
  406dd0:	cmp	x0, x25
  406dd4:	b.ls	406e88 <wcrtomb@plt+0x2268>  // b.plast
  406dd8:	sub	x2, x0, x25
  406ddc:	mov	w1, #0x2f                  	// #47
  406de0:	mov	x0, x25
  406de4:	bl	404960 <memchr@plt>
  406de8:	cbnz	x0, 406e88 <wcrtomb@plt+0x2268>
  406dec:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  406df0:	mov	w1, #0x42                  	// #66
  406df4:	mov	x0, x25
  406df8:	mov	w2, #0x40000000            	// #1073741824
  406dfc:	ldr	x3, [x3, #752]
  406e00:	bl	42a918 <wcrtomb@plt+0x25cf8>
  406e04:	mov	w1, w0
  406e08:	str	w1, [x23, #920]
  406e0c:	mov	w0, #0x1                   	// #1
  406e10:	tbnz	w1, #31, 406d1c <wcrtomb@plt+0x20fc>
  406e14:	ldp	x19, x20, [sp, #16]
  406e18:	ldp	x21, x22, [sp, #32]
  406e1c:	ldp	x23, x24, [sp, #48]
  406e20:	ldp	x25, x26, [sp, #64]
  406e24:	ldp	x29, x30, [sp], #160
  406e28:	ret
  406e2c:	mov	w0, #0x0                   	// #0
  406e30:	ldp	x19, x20, [sp, #16]
  406e34:	ldp	x29, x30, [sp], #160
  406e38:	ret
  406e3c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406e40:	ldr	x0, [x0, #712]
  406e44:	cbnz	x0, 406be8 <wcrtomb@plt+0x1fc8>
  406e48:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406e4c:	ldr	w0, [x0, #920]
  406e50:	cbz	w0, 407278 <wcrtomb@plt+0x2658>
  406e54:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406e58:	ldr	x0, [x0, #1112]
  406e5c:	str	x0, [x19, #560]
  406e60:	b	406be8 <wcrtomb@plt+0x1fc8>
  406e64:	ldr	w0, [sp, #124]
  406e68:	cmp	w0, #0x1
  406e6c:	b.eq	407214 <wcrtomb@plt+0x25f4>  // b.none
  406e70:	cmp	w0, #0x2
  406e74:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406e78:	ldrb	w0, [x0, #960]
  406e7c:	b.ne	4071b8 <wcrtomb@plt+0x2598>  // b.any
  406e80:	cbz	w0, 406db4 <wcrtomb@plt+0x2194>
  406e84:	nop
  406e88:	mov	w1, #0x42                  	// #66
  406e8c:	mov	x0, x25
  406e90:	mov	w2, #0x1b6                 	// #438
  406e94:	bl	404340 <open@plt>
  406e98:	mov	w1, w0
  406e9c:	b	406e08 <wcrtomb@plt+0x21e8>
  406ea0:	mov	w0, #0x1                   	// #1
  406ea4:	str	x1, [x22, #680]
  406ea8:	str	w0, [x19, #568]
  406eac:	b	406d58 <wcrtomb@plt+0x2138>
  406eb0:	stp	x27, x28, [sp, #80]
  406eb4:	adrp	x25, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  406eb8:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  406ebc:	ldr	x28, [x19, #560]
  406ec0:	adrp	x27, 453000 <_obstack_memory_used@@Base+0x10e10>
  406ec4:	adrp	x26, 483000 <argp_program_version_hook@@Base+0x290>
  406ec8:	add	x25, x25, #0x678
  406ecc:	add	x20, x20, #0x448
  406ed0:	add	x27, x27, #0xeb8
  406ed4:	add	x26, x26, #0x2a8
  406ed8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  406edc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  406ee0:	add	x1, x1, #0xf30
  406ee4:	add	x0, x0, #0x2d0
  406ee8:	stp	x0, x1, [sp, #128]
  406eec:	stp	xzr, xzr, [sp, #144]
  406ef0:	ldr	x0, [x20]
  406ef4:	ldp	x1, x2, [x0, #40]
  406ef8:	cmp	x1, x2
  406efc:	b.cs	406ff8 <wcrtomb@plt+0x23d8>  // b.hs, b.nlast
  406f00:	add	x2, x1, #0x1
  406f04:	str	x2, [x0, #40]
  406f08:	mov	w0, #0x7                   	// #7
  406f0c:	strb	w0, [x1]
  406f10:	mov	x1, x27
  406f14:	mov	w2, #0x5                   	// #5
  406f18:	mov	x0, #0x0                   	// #0
  406f1c:	ldr	x21, [x20]
  406f20:	bl	4049c0 <dcgettext@plt>
  406f24:	ldr	x1, [x26]
  406f28:	mov	x2, x0
  406f2c:	ldr	w3, [x25]
  406f30:	str	x2, [sp, #112]
  406f34:	ldr	x0, [x1]
  406f38:	add	w3, w3, #0x1
  406f3c:	str	w3, [sp, #104]
  406f40:	bl	440248 <argp_parse@@Base+0xc360>
  406f44:	mov	x4, x0
  406f48:	ldr	w3, [sp, #104]
  406f4c:	mov	w1, #0x1                   	// #1
  406f50:	ldr	x2, [sp, #112]
  406f54:	mov	x0, x21
  406f58:	bl	404700 <__fprintf_chk@plt>
  406f5c:	ldr	x0, [x20]
  406f60:	bl	4048d0 <fflush_unlocked@plt>
  406f64:	mov	x3, x28
  406f68:	add	x1, sp, #0x98
  406f6c:	add	x0, sp, #0x90
  406f70:	mov	w2, #0xa                   	// #10
  406f74:	bl	404b40 <__getdelim@plt>
  406f78:	cmp	x0, #0x0
  406f7c:	b.le	4072e8 <wcrtomb@plt+0x26c8>
  406f80:	ldr	x0, [sp, #144]
  406f84:	ldrb	w1, [x0]
  406f88:	and	w2, w1, #0xffffffdf
  406f8c:	cmp	w2, #0x59
  406f90:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  406f94:	b.eq	4071a8 <wcrtomb@plt+0x2588>  // b.none
  406f98:	cmp	w1, #0x3f
  406f9c:	b.eq	40710c <wcrtomb@plt+0x24ec>  // b.none
  406fa0:	b.hi	407004 <wcrtomb@plt+0x23e4>  // b.pmore
  406fa4:	cmp	w1, #0x21
  406fa8:	b.ne	406fb8 <wcrtomb@plt+0x2398>  // b.any
  406fac:	ldr	x0, [sp, #128]
  406fb0:	ldrb	w0, [x0]
  406fb4:	cbz	w0, 40715c <wcrtomb@plt+0x253c>
  406fb8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  406fbc:	add	x1, x1, #0x48
  406fc0:	ldr	x3, [x20]
  406fc4:	mov	w2, #0x5                   	// #5
  406fc8:	str	x3, [sp, #104]
  406fcc:	mov	x0, #0x0                   	// #0
  406fd0:	bl	4049c0 <dcgettext@plt>
  406fd4:	ldr	x3, [sp, #104]
  406fd8:	mov	x2, x0
  406fdc:	mov	w1, #0x1                   	// #1
  406fe0:	mov	x0, x3
  406fe4:	bl	404700 <__fprintf_chk@plt>
  406fe8:	ldr	x0, [x20]
  406fec:	ldp	x1, x2, [x0, #40]
  406ff0:	cmp	x1, x2
  406ff4:	b.cc	406f00 <wcrtomb@plt+0x22e0>  // b.lo, b.ul, b.last
  406ff8:	mov	w1, #0x7                   	// #7
  406ffc:	bl	404680 <__overflow@plt>
  407000:	b	406f10 <wcrtomb@plt+0x22f0>
  407004:	cmp	w1, #0x6e
  407008:	b.ne	407088 <wcrtomb@plt+0x2468>  // b.any
  40700c:	ldrb	w1, [x0, #1]
  407010:	add	x0, x0, #0x1
  407014:	cmp	w1, #0x20
  407018:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  40701c:	b.ne	407030 <wcrtomb@plt+0x2410>  // b.any
  407020:	ldrb	w1, [x0, #1]!
  407024:	cmp	w1, #0x20
  407028:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  40702c:	b.eq	407020 <wcrtomb@plt+0x2400>  // b.none
  407030:	cmp	w1, #0x0
  407034:	mov	x2, x0
  407038:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  40703c:	b.eq	407050 <wcrtomb@plt+0x2430>  // b.none
  407040:	ldrb	w1, [x2, #1]!
  407044:	cmp	w1, #0x0
  407048:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  40704c:	b.ne	407040 <wcrtomb@plt+0x2420>  // b.any
  407050:	strb	wzr, [x2]
  407054:	ldrb	w1, [x0]
  407058:	cbnz	w1, 407198 <wcrtomb@plt+0x2578>
  40705c:	ldr	x3, [x20]
  407060:	mov	w2, #0x5                   	// #5
  407064:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  407068:	mov	x0, #0x0                   	// #0
  40706c:	add	x1, x1, #0x20
  407070:	str	x3, [sp, #104]
  407074:	bl	4049c0 <dcgettext@plt>
  407078:	ldr	x3, [sp, #104]
  40707c:	mov	x1, x3
  407080:	bl	404000 <fputs@plt>
  407084:	b	406ef0 <wcrtomb@plt+0x22d0>
  407088:	cmp	w1, #0x71
  40708c:	b.ne	406fb8 <wcrtomb@plt+0x2398>  // b.any
  407090:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  407094:	ldr	x0, [x19, #952]
  407098:	cbz	x0, 4070a0 <wcrtomb@plt+0x2480>
  40709c:	blr	x0
  4070a0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4070a4:	add	x1, x1, #0x0
  4070a8:	mov	w2, #0x5                   	// #5
  4070ac:	mov	x0, #0x0                   	// #0
  4070b0:	bl	4049c0 <dcgettext@plt>
  4070b4:	mov	w1, #0x0                   	// #0
  4070b8:	mov	x2, x0
  4070bc:	mov	w0, #0x0                   	// #0
  4070c0:	bl	404050 <error@plt>
  4070c4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4070c8:	ldr	w0, [x0, #804]
  4070cc:	sub	w0, w0, #0x5
  4070d0:	cmp	w0, #0x2
  4070d4:	b.ls	407108 <wcrtomb@plt+0x24e8>  // b.plast
  4070d8:	ldr	x0, [x19, #952]
  4070dc:	cbz	x0, 4070e4 <wcrtomb@plt+0x24c4>
  4070e0:	blr	x0
  4070e4:	mov	w2, #0x5                   	// #5
  4070e8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  4070ec:	mov	x0, #0x0                   	// #0
  4070f0:	add	x1, x1, #0xf10
  4070f4:	bl	4049c0 <dcgettext@plt>
  4070f8:	mov	x2, x0
  4070fc:	mov	w1, #0x0                   	// #0
  407100:	mov	w0, #0x0                   	// #0
  407104:	bl	404050 <error@plt>
  407108:	bl	40e770 <wcrtomb@plt+0x9b50>
  40710c:	ldr	x3, [x20]
  407110:	mov	w2, #0x5                   	// #5
  407114:	ldr	x1, [sp, #136]
  407118:	mov	x0, #0x0                   	// #0
  40711c:	str	x3, [sp, #104]
  407120:	bl	4049c0 <dcgettext@plt>
  407124:	mov	x2, x0
  407128:	ldr	x3, [sp, #104]
  40712c:	mov	w1, #0x1                   	// #1
  407130:	mov	x0, x3
  407134:	bl	404700 <__fprintf_chk@plt>
  407138:	ldr	x0, [sp, #128]
  40713c:	ldrb	w0, [x0]
  407140:	cbz	w0, 407164 <wcrtomb@plt+0x2544>
  407144:	ldr	x3, [x20]
  407148:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  40714c:	mov	w2, #0x5                   	// #5
  407150:	add	x1, x1, #0xfe0
  407154:	str	x3, [sp, #104]
  407158:	b	406fcc <wcrtomb@plt+0x23ac>
  40715c:	bl	4217a0 <wcrtomb@plt+0x1cb80>
  407160:	b	406ef0 <wcrtomb@plt+0x22d0>
  407164:	ldr	x3, [x20]
  407168:	mov	w2, #0x5                   	// #5
  40716c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  407170:	mov	x0, #0x0                   	// #0
  407174:	add	x1, x1, #0xfb8
  407178:	str	x3, [sp, #104]
  40717c:	bl	4049c0 <dcgettext@plt>
  407180:	mov	x2, x0
  407184:	ldr	x3, [sp, #104]
  407188:	mov	w1, #0x1                   	// #1
  40718c:	mov	x0, x3
  407190:	bl	404700 <__fprintf_chk@plt>
  407194:	b	407144 <wcrtomb@plt+0x2524>
  407198:	ldr	x20, [x22, #680]
  40719c:	bl	441170 <argp_parse@@Base+0xd288>
  4071a0:	str	x0, [x20]
  4071a4:	ldr	x0, [sp, #144]
  4071a8:	bl	4047b0 <free@plt>
  4071ac:	ldr	x20, [x22, #680]
  4071b0:	ldp	x27, x28, [sp, #80]
  4071b4:	b	406ca4 <wcrtomb@plt+0x2084>
  4071b8:	cbnz	w0, 4071f4 <wcrtomb@plt+0x25d4>
  4071bc:	mov	x0, x25
  4071c0:	mov	w1, #0x3a                  	// #58
  4071c4:	bl	404870 <strchr@plt>
  4071c8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4071cc:	str	x0, [x1, #968]
  4071d0:	ldr	x25, [x20]
  4071d4:	cbz	x0, 4071f4 <wcrtomb@plt+0x25d4>
  4071d8:	cmp	x0, x25
  4071dc:	b.ls	4071f4 <wcrtomb@plt+0x25d4>  // b.plast
  4071e0:	sub	x2, x0, x25
  4071e4:	mov	w1, #0x2f                  	// #47
  4071e8:	mov	x0, x25
  4071ec:	bl	404960 <memchr@plt>
  4071f0:	cbz	x0, 4072ac <wcrtomb@plt+0x268c>
  4071f4:	mov	x0, x25
  4071f8:	mov	w2, #0x1b6                 	// #438
  4071fc:	mov	w1, #0x0                   	// #0
  407200:	bl	404340 <open@plt>
  407204:	str	w0, [x23, #920]
  407208:	bl	4051e8 <wcrtomb@plt+0x5c8>
  40720c:	ldr	w1, [x23, #920]
  407210:	b	406e0c <wcrtomb@plt+0x21ec>
  407214:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  407218:	ldrb	w0, [x0, #701]
  40721c:	cbnz	w0, 407294 <wcrtomb@plt+0x2674>
  407220:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  407224:	ldrb	w0, [x0, #960]
  407228:	cbnz	w0, 407264 <wcrtomb@plt+0x2644>
  40722c:	mov	x0, x25
  407230:	mov	w1, #0x3a                  	// #58
  407234:	bl	404870 <strchr@plt>
  407238:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40723c:	str	x0, [x1, #968]
  407240:	ldr	x25, [x20]
  407244:	cbz	x0, 407264 <wcrtomb@plt+0x2644>
  407248:	cmp	x0, x25
  40724c:	b.ls	407264 <wcrtomb@plt+0x2644>  // b.plast
  407250:	sub	x2, x0, x25
  407254:	mov	w1, #0x2f                  	// #47
  407258:	mov	x0, x25
  40725c:	bl	404960 <memchr@plt>
  407260:	cbz	x0, 4072c8 <wcrtomb@plt+0x26a8>
  407264:	mov	w1, #0x1b6                 	// #438
  407268:	mov	x0, x25
  40726c:	bl	404bb0 <creat@plt>
  407270:	mov	w1, w0
  407274:	b	406e08 <wcrtomb@plt+0x21e8>
  407278:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  40727c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x10e10>
  407280:	add	x1, x1, #0xf28
  407284:	add	x0, x0, #0xe90
  407288:	bl	4042e0 <fopen@plt>
  40728c:	str	x0, [x19, #560]
  407290:	b	406be8 <wcrtomb@plt+0x1fc8>
  407294:	ldrb	w1, [sp, #124]
  407298:	mov	x0, x25
  40729c:	bl	41b630 <wcrtomb@plt+0x16a10>
  4072a0:	ldr	x20, [x22, #680]
  4072a4:	ldr	x25, [x20]
  4072a8:	b	407220 <wcrtomb@plt+0x2600>
  4072ac:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  4072b0:	mov	x0, x25
  4072b4:	mov	w2, #0x40000000            	// #1073741824
  4072b8:	mov	w1, #0x0                   	// #0
  4072bc:	ldr	x3, [x3, #752]
  4072c0:	bl	42a918 <wcrtomb@plt+0x25cf8>
  4072c4:	b	407204 <wcrtomb@plt+0x25e4>
  4072c8:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  4072cc:	mov	w1, #0x41                  	// #65
  4072d0:	mov	x0, x25
  4072d4:	mov	w2, #0x40000000            	// #1073741824
  4072d8:	ldr	x3, [x3, #752]
  4072dc:	bl	42a918 <wcrtomb@plt+0x25cf8>
  4072e0:	mov	w1, w0
  4072e4:	b	406e08 <wcrtomb@plt+0x21e8>
  4072e8:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  4072ec:	ldr	x0, [x19, #952]
  4072f0:	cbz	x0, 4072f8 <wcrtomb@plt+0x26d8>
  4072f4:	blr	x0
  4072f8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  4072fc:	mov	w2, #0x5                   	// #5
  407300:	add	x1, x1, #0xee8
  407304:	b	4070ac <wcrtomb@plt+0x248c>
  407308:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40730c:	stp	x27, x28, [sp, #80]
  407310:	ldr	x0, [x0, #952]
  407314:	cbz	x0, 40731c <wcrtomb@plt+0x26fc>
  407318:	blr	x0
  40731c:	mov	w2, #0x5                   	// #5
  407320:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  407324:	mov	x0, #0x0                   	// #0
  407328:	add	x1, x1, #0xea0
  40732c:	bl	4049c0 <dcgettext@plt>
  407330:	mov	x19, x0
  407334:	ldr	x0, [x20, #712]
  407338:	bl	440248 <argp_parse@@Base+0xc360>
  40733c:	mov	x3, x0
  407340:	mov	x2, x19
  407344:	mov	w1, #0x0                   	// #0
  407348:	mov	w0, #0x0                   	// #0
  40734c:	bl	404050 <error@plt>
  407350:	bl	40e770 <wcrtomb@plt+0x9b50>
  407354:	nop
  407358:	stp	x29, x30, [sp, #-112]!
  40735c:	adrp	x1, 406000 <wcrtomb@plt+0x13e0>
  407360:	add	x1, x1, #0x8c0
  407364:	mov	x29, sp
  407368:	stp	x19, x20, [sp, #16]
  40736c:	mov	x19, x0
  407370:	stp	x21, x22, [sp, #32]
  407374:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407378:	add	x20, x22, #0x478
  40737c:	str	x1, [x20, #544]
  407380:	bl	405290 <wcrtomb@plt+0x670>
  407384:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  407388:	mov	x21, x0
  40738c:	ldr	x1, [x1, #864]
  407390:	cmp	x0, x1
  407394:	b.eq	4073a4 <wcrtomb@plt+0x2784>  // b.none
  407398:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40739c:	ldrb	w2, [x2, #20]
  4073a0:	cbz	w2, 4077f0 <wcrtomb@plt+0x2bd0>
  4073a4:	cbnz	x21, 407450 <wcrtomb@plt+0x2830>
  4073a8:	scvtf	d0, x21
  4073ac:	ldr	d1, [x20, #64]
  4073b0:	cmp	x21, x1
  4073b4:	fadd	d0, d0, d1
  4073b8:	str	d0, [x20, #64]
  4073bc:	b.eq	407434 <wcrtomb@plt+0x2814>  // b.none
  4073c0:	ldr	x22, [x22, #1144]
  4073c4:	stp	x23, x24, [sp, #48]
  4073c8:	stp	x25, x26, [sp, #64]
  4073cc:	str	x27, [sp, #80]
  4073d0:	cbz	x22, 4073f4 <wcrtomb@plt+0x27d4>
  4073d4:	nop
  4073d8:	ldr	x1, [x22]
  4073dc:	cbz	x1, 4073f4 <wcrtomb@plt+0x27d4>
  4073e0:	ldr	x0, [x1, #8]
  4073e4:	cmp	x21, x0, lsl #9
  4073e8:	b.cc	4073f4 <wcrtomb@plt+0x27d4>  // b.lo, b.ul, b.last
  4073ec:	mov	x22, x1
  4073f0:	cbnz	x22, 4073d8 <wcrtomb@plt+0x27b8>
  4073f4:	tst	x21, #0x1ff
  4073f8:	b.ne	407808 <wcrtomb@plt+0x2be8>  // b.any
  4073fc:	tbz	x21, #63, 407418 <wcrtomb@plt+0x27f8>
  407400:	bl	404ad0 <__errno_location@plt>
  407404:	ldr	w0, [x0]
  407408:	sub	w1, w0, #0x5
  40740c:	cmp	w1, #0x1
  407410:	ccmp	w0, #0x1c, #0x4, hi  // hi = pmore
  407414:	b.ne	407800 <wcrtomb@plt+0x2be0>  // b.any
  407418:	mov	w0, #0x1                   	// #1
  40741c:	bl	406bc8 <wcrtomb@plt+0x1fa8>
  407420:	tst	w0, #0xff
  407424:	b.ne	407464 <wcrtomb@plt+0x2844>  // b.any
  407428:	ldp	x23, x24, [sp, #48]
  40742c:	ldp	x25, x26, [sp, #64]
  407430:	ldr	x27, [sp, #80]
  407434:	adrp	x0, 407000 <wcrtomb@plt+0x23e0>
  407438:	add	x0, x0, #0x358
  40743c:	str	x0, [x20, #544]
  407440:	ldp	x19, x20, [sp, #16]
  407444:	ldp	x21, x22, [sp, #32]
  407448:	ldp	x29, x30, [sp], #112
  40744c:	ret
  407450:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407454:	ldr	x0, [x2, #3896]
  407458:	add	x0, x0, #0x1
  40745c:	str	x0, [x2, #3896]
  407460:	b	4073a8 <wcrtomb@plt+0x2788>
  407464:	add	x0, x20, #0x50
  407468:	bl	425ff8 <wcrtomb@plt+0x213d8>
  40746c:	adrp	x25, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407470:	sub	x19, x19, x21
  407474:	bl	4053d8 <wcrtomb@plt+0x7b8>
  407478:	ldr	d1, [x20, #64]
  40747c:	ldr	d0, [x20, #512]
  407480:	ldr	w1, [x20, #24]
  407484:	ldr	x0, [x25, #3928]
  407488:	fadd	d0, d0, d1
  40748c:	cmp	w1, #0x0
  407490:	str	xzr, [x20, #64]
  407494:	cset	w1, eq  // eq = none
  407498:	add	x21, x0, x21
  40749c:	str	w1, [x20, #24]
  4074a0:	str	d0, [x20, #512]
  4074a4:	bl	405168 <wcrtomb@plt+0x548>
  4074a8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4074ac:	mov	w1, #0x1                   	// #1
  4074b0:	str	w1, [x20, #72]
  4074b4:	ldr	x0, [x0, #592]
  4074b8:	cbz	x0, 4074c0 <wcrtomb@plt+0x28a0>
  4074bc:	bl	4063a0 <wcrtomb@plt+0x1780>
  4074c0:	cbz	x22, 4077b4 <wcrtomb@plt+0x2b94>
  4074c4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4074c8:	ldr	w0, [x0, #760]
  4074cc:	cmp	w0, #0x4
  4074d0:	b.eq	4075e4 <wcrtomb@plt+0x29c4>  // b.none
  4074d4:	bl	406220 <wcrtomb@plt+0x1600>
  4074d8:	mov	x24, x0
  4074dc:	ldr	x0, [x22, #16]
  4074e0:	bl	403ff0 <strlen@plt>
  4074e4:	mov	x23, x0
  4074e8:	cmp	x0, #0x64
  4074ec:	b.ls	407538 <wcrtomb@plt+0x2918>  // b.plast
  4074f0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4074f4:	ldr	x0, [x0, #952]
  4074f8:	cbz	x0, 407500 <wcrtomb@plt+0x28e0>
  4074fc:	blr	x0
  407500:	mov	w2, #0x5                   	// #5
  407504:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  407508:	mov	x0, #0x0                   	// #0
  40750c:	add	x1, x1, #0xd8
  407510:	bl	4049c0 <dcgettext@plt>
  407514:	mov	x26, x0
  407518:	ldr	x0, [x22, #16]
  40751c:	mov	x23, #0x64                  	// #100
  407520:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  407524:	mov	x3, x0
  407528:	mov	x2, x26
  40752c:	mov	w1, #0x0                   	// #0
  407530:	mov	w0, #0x0                   	// #0
  407534:	bl	404050 <error@plt>
  407538:	mov	x2, #0x200                 	// #512
  40753c:	mov	w1, #0x0                   	// #0
  407540:	mov	x0, x24
  407544:	bl	404410 <memset@plt>
  407548:	ldr	x1, [x22, #16]
  40754c:	mov	x2, x23
  407550:	mov	x0, x24
  407554:	adrp	x26, 483000 <argp_program_version_hook@@Base+0x290>
  407558:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40755c:	bl	403f70 <memcpy@plt>
  407560:	ldr	x0, [x22, #32]
  407564:	mov	w1, #0x4d                  	// #77
  407568:	strb	w1, [x24, #156]
  40756c:	mov	x2, #0xc                   	// #12
  407570:	add	x1, x24, #0x7c
  407574:	bl	40b3b8 <wcrtomb@plt+0x6798>
  407578:	ldp	x3, x0, [x22, #24]
  40757c:	add	x1, x24, #0x171
  407580:	mov	x2, #0xc                   	// #12
  407584:	sub	x0, x3, x0
  407588:	bl	40b3b8 <wcrtomb@plt+0x6798>
  40758c:	mov	x1, x24
  407590:	ldr	w27, [x26, #588]
  407594:	mov	x2, #0xffffffffffffffff    	// #-1
  407598:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40759c:	str	wzr, [x26, #588]
  4075a0:	add	x0, x0, #0x28
  4075a4:	bl	40b648 <wcrtomb@plt+0x6a28>
  4075a8:	str	w27, [x26, #588]
  4075ac:	ldr	x0, [x23, #3952]
  4075b0:	cmp	x24, x0
  4075b4:	b.cc	4075cc <wcrtomb@plt+0x29ac>  // b.lo, b.ul, b.last
  4075b8:	sub	x24, x24, x0
  4075bc:	and	x24, x24, #0xfffffffffffffe00
  4075c0:	add	x24, x24, #0x200
  4075c4:	add	x0, x0, x24
  4075c8:	str	x0, [x23, #3952]
  4075cc:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4075d0:	add	x27, x22, #0x20
  4075d4:	ldr	x1, [x24, #3888]
  4075d8:	cmp	x0, x1
  4075dc:	b.ls	40763c <wcrtomb@plt+0x2a1c>  // b.plast
  4075e0:	bl	404650 <abort@plt>
  4075e4:	ldp	x2, x3, [x22, #16]
  4075e8:	add	x23, x20, #0x50
  4075ec:	ldr	x4, [x22, #32]
  4075f0:	mov	x1, x23
  4075f4:	add	x27, x22, #0x20
  4075f8:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  4075fc:	add	x0, x0, #0x98
  407600:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407604:	sub	x3, x3, x4
  407608:	str	x3, [sp, #104]
  40760c:	bl	413f80 <wcrtomb@plt+0xf360>
  407610:	mov	x1, x23
  407614:	mov	x2, x27
  407618:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40761c:	add	x0, x0, #0xb0
  407620:	bl	413f80 <wcrtomb@plt+0xf360>
  407624:	mov	x1, x23
  407628:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40762c:	add	x2, sp, #0x68
  407630:	add	x0, x0, #0xc0
  407634:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407638:	bl	413f80 <wcrtomb@plt+0xf360>
  40763c:	bl	406220 <wcrtomb@plt+0x1600>
  407640:	add	x26, x20, #0x50
  407644:	mov	x2, x0
  407648:	mov	x1, x26
  40764c:	mov	w0, #0x1                   	// #1
  407650:	bl	40b5b8 <wcrtomb@plt+0x6998>
  407654:	mov	x0, x26
  407658:	bl	425ff8 <wcrtomb@plt+0x213d8>
  40765c:	mov	x1, x27
  407660:	add	x0, x22, #0x10
  407664:	bl	405440 <wcrtomb@plt+0x820>
  407668:	bl	406220 <wcrtomb@plt+0x1600>
  40766c:	mov	x27, x0
  407670:	ldr	x25, [x25, #3928]
  407674:	mov	x0, x22
  407678:	sub	x25, x27, x25
  40767c:	asr	x25, x25, #9
  407680:	bl	404fe8 <wcrtomb@plt+0x3c8>
  407684:	nop
  407688:	ldr	x1, [x22, #8]
  40768c:	str	xzr, [x22, #40]
  407690:	add	x1, x1, x25
  407694:	str	x1, [x22, #8]
  407698:	ldr	x22, [x22]
  40769c:	cbnz	x22, 407688 <wcrtomb@plt+0x2a68>
  4076a0:	ldr	x25, [x24, #3888]
  4076a4:	str	wzr, [x20, #72]
  4076a8:	sub	x25, x25, x27
  4076ac:	cmp	x19, x25
  4076b0:	b.ls	407730 <wcrtomb@plt+0x2b10>  // b.plast
  4076b4:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4076b8:	adrp	x26, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4076bc:	add	x22, x22, #0xf70
  4076c0:	add	x26, x26, #0xf30
  4076c4:	nop
  4076c8:	mov	x1, x21
  4076cc:	mov	x2, x25
  4076d0:	mov	x0, x27
  4076d4:	bl	403f70 <memcpy@plt>
  4076d8:	sub	x1, x25, #0x1
  4076dc:	sub	x19, x19, x25
  4076e0:	ldr	x2, [x22]
  4076e4:	and	x1, x1, #0xfffffffffffffe00
  4076e8:	add	x0, x27, x1
  4076ec:	add	x21, x21, x25
  4076f0:	cmp	x2, x0
  4076f4:	b.hi	40770c <wcrtomb@plt+0x2aec>  // b.pmore
  4076f8:	sub	x0, x0, x2
  4076fc:	and	x0, x0, #0xfffffffffffffe00
  407700:	add	x0, x0, #0x200
  407704:	add	x2, x2, x0
  407708:	str	x2, [x22]
  40770c:	ldr	x0, [x26]
  407710:	cmp	x0, x2
  407714:	b.cc	4075e0 <wcrtomb@plt+0x29c0>  // b.lo, b.ul, b.last
  407718:	bl	406220 <wcrtomb@plt+0x1600>
  40771c:	mov	x27, x0
  407720:	ldr	x25, [x26]
  407724:	sub	x25, x25, x0
  407728:	cmp	x19, x25
  40772c:	b.hi	4076c8 <wcrtomb@plt+0x2aa8>  // b.pmore
  407730:	mov	x2, x19
  407734:	mov	x1, x21
  407738:	mov	x0, x27
  40773c:	bl	403f70 <memcpy@plt>
  407740:	sub	x2, x25, x19
  407744:	add	x0, x27, x19
  407748:	mov	w1, #0x0                   	// #0
  40774c:	bl	404410 <memset@plt>
  407750:	ldr	x1, [x23, #3952]
  407754:	sub	x19, x19, #0x1
  407758:	and	x19, x19, #0xfffffffffffffe00
  40775c:	add	x0, x27, x19
  407760:	cmp	x1, x0
  407764:	b.hi	40777c <wcrtomb@plt+0x2b5c>  // b.pmore
  407768:	sub	x0, x0, x1
  40776c:	and	x0, x0, #0xfffffffffffffe00
  407770:	add	x0, x0, #0x200
  407774:	add	x1, x1, x0
  407778:	str	x1, [x23, #3952]
  40777c:	ldr	x0, [x24, #3888]
  407780:	cmp	x0, x1
  407784:	b.cc	4075e0 <wcrtomb@plt+0x29c0>  // b.lo, b.ul, b.last
  407788:	bl	406220 <wcrtomb@plt+0x1600>
  40778c:	adrp	x0, 407000 <wcrtomb@plt+0x23e0>
  407790:	add	x0, x0, #0x358
  407794:	str	x0, [x20, #544]
  407798:	ldp	x19, x20, [sp, #16]
  40779c:	ldp	x21, x22, [sp, #32]
  4077a0:	ldp	x23, x24, [sp, #48]
  4077a4:	ldp	x25, x26, [sp, #64]
  4077a8:	ldr	x27, [sp, #80]
  4077ac:	ldp	x29, x30, [sp], #112
  4077b0:	ret
  4077b4:	bl	406220 <wcrtomb@plt+0x1600>
  4077b8:	add	x22, x20, #0x50
  4077bc:	mov	x2, x0
  4077c0:	mov	x1, x22
  4077c4:	mov	w0, #0x1                   	// #1
  4077c8:	bl	40b5b8 <wcrtomb@plt+0x6998>
  4077cc:	mov	x0, x22
  4077d0:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4077d4:	bl	425ff8 <wcrtomb@plt+0x213d8>
  4077d8:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4077dc:	bl	406220 <wcrtomb@plt+0x1600>
  4077e0:	mov	x27, x0
  4077e4:	mov	x0, #0x0                   	// #0
  4077e8:	bl	404fe8 <wcrtomb@plt+0x3c8>
  4077ec:	b	4076a0 <wcrtomb@plt+0x2a80>
  4077f0:	stp	x23, x24, [sp, #48]
  4077f4:	stp	x25, x26, [sp, #64]
  4077f8:	str	x27, [sp, #80]
  4077fc:	bl	406850 <wcrtomb@plt+0x1c30>
  407800:	mov	x0, x21
  407804:	bl	406850 <wcrtomb@plt+0x1c30>
  407808:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40780c:	ldr	x0, [x0, #952]
  407810:	cbz	x0, 407818 <wcrtomb@plt+0x2bf8>
  407814:	blr	x0
  407818:	mov	w2, #0x5                   	// #5
  40781c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  407820:	mov	x0, #0x0                   	// #0
  407824:	add	x1, x1, #0x70
  407828:	bl	4049c0 <dcgettext@plt>
  40782c:	mov	x2, x0
  407830:	mov	w1, #0x0                   	// #0
  407834:	mov	w0, #0x0                   	// #0
  407838:	bl	404050 <error@plt>
  40783c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407840:	mov	w2, #0x2                   	// #2
  407844:	mov	x0, x21
  407848:	str	w2, [x1, #3400]
  40784c:	bl	406850 <wcrtomb@plt+0x1c30>
  407850:	stp	x29, x30, [sp, #-208]!
  407854:	adrp	x1, 406000 <wcrtomb@plt+0x13e0>
  407858:	add	x1, x1, #0x910
  40785c:	mov	x29, sp
  407860:	stp	x19, x20, [sp, #16]
  407864:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407868:	add	x19, x19, #0x478
  40786c:	mov	w0, #0x0                   	// #0
  407870:	stp	x21, x22, [sp, #32]
  407874:	str	x1, [x19, #536]
  407878:	bl	409578 <wcrtomb@plt+0x4958>
  40787c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407880:	str	wzr, [x19, #504]
  407884:	ldrb	w0, [x0, #3936]
  407888:	cbz	w0, 407894 <wcrtomb@plt+0x2c74>
  40788c:	ldr	x0, [x19, #520]
  407890:	cbnz	x0, 407b84 <wcrtomb@plt+0x2f64>
  407894:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  407898:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40789c:	stp	x23, x24, [sp, #48]
  4078a0:	ldr	w0, [x22, #920]
  4078a4:	ldr	x2, [x1, #864]
  4078a8:	stp	x25, x26, [sp, #64]
  4078ac:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4078b0:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  4078b4:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  4078b8:	add	x22, x22, #0x398
  4078bc:	add	x21, x21, #0xf58
  4078c0:	add	x20, x20, #0x360
  4078c4:	add	x23, x23, #0x14
  4078c8:	mov	w24, #0x3fffffff            	// #1073741823
  4078cc:	mov	w25, #0xc0000000            	// #-1073741824
  4078d0:	cmp	w0, w24
  4078d4:	ldr	x1, [x21]
  4078d8:	b.le	407924 <wcrtomb@plt+0x2d04>
  4078dc:	add	w0, w0, w25
  4078e0:	bl	42afe8 <wcrtomb@plt+0x263c8>
  4078e4:	ldr	x1, [x20]
  4078e8:	cmp	x1, x0
  4078ec:	b.eq	407cb0 <wcrtomb@plt+0x3090>  // b.none
  4078f0:	cbz	x0, 40792c <wcrtomb@plt+0x2d0c>
  4078f4:	cmn	x0, #0x1
  4078f8:	b.eq	407b64 <wcrtomb@plt+0x2f44>  // b.none
  4078fc:	bl	405cc0 <wcrtomb@plt+0x10a0>
  407900:	adrp	x0, 407000 <wcrtomb@plt+0x23e0>
  407904:	add	x0, x0, #0x850
  407908:	str	x0, [x19, #536]
  40790c:	ldp	x19, x20, [sp, #16]
  407910:	ldp	x21, x22, [sp, #32]
  407914:	ldp	x23, x24, [sp, #48]
  407918:	ldp	x25, x26, [sp, #64]
  40791c:	ldp	x29, x30, [sp], #208
  407920:	ret
  407924:	bl	440470 <argp_parse@@Base+0xc588>
  407928:	b	4078e4 <wcrtomb@plt+0x2cc4>
  40792c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  407930:	ldrb	w1, [x1, #20]
  407934:	cbz	w1, 4078fc <wcrtomb@plt+0x2cdc>
  407938:	adrp	x25, 483000 <argp_program_version_hook@@Base+0x290>
  40793c:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  407940:	add	x25, x25, #0x324
  407944:	add	x22, x22, #0x398
  407948:	adrp	x26, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40794c:	mov	w24, #0xc0000000            	// #-1073741824
  407950:	stp	x27, x28, [sp, #80]
  407954:	adrp	x27, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407958:	ldr	w0, [x25]
  40795c:	cmp	w0, #0x2
  407960:	b.hi	407bc4 <wcrtomb@plt+0x2fa4>  // b.pmore
  407964:	cmp	w0, #0x0
  407968:	mov	w1, #0x2                   	// #2
  40796c:	csel	w0, w0, w1, eq  // eq = none
  407970:	bl	406bc8 <wcrtomb@plt+0x1fa8>
  407974:	tst	w0, #0xff
  407978:	b.eq	407d98 <wcrtomb@plt+0x3178>  // b.none
  40797c:	mov	w23, #0x3fffffff            	// #1073741823
  407980:	b	407998 <wcrtomb@plt+0x2d78>
  407984:	add	w0, w0, w24
  407988:	bl	42afe8 <wcrtomb@plt+0x263c8>
  40798c:	cmn	x0, #0x1
  407990:	b.ne	4079b8 <wcrtomb@plt+0x2d98>  // b.any
  407994:	bl	405c20 <wcrtomb@plt+0x1000>
  407998:	ldr	w0, [x22]
  40799c:	ldr	x2, [x20]
  4079a0:	cmp	w0, w23
  4079a4:	ldr	x1, [x21]
  4079a8:	b.gt	407984 <wcrtomb@plt+0x2d64>
  4079ac:	bl	440470 <argp_parse@@Base+0xc588>
  4079b0:	cmn	x0, #0x1
  4079b4:	b.eq	407994 <wcrtomb@plt+0x2d74>  // b.none
  4079b8:	ldr	x1, [x20]
  4079bc:	cmp	x0, x1
  4079c0:	b.eq	4079c8 <wcrtomb@plt+0x2da8>  // b.none
  4079c4:	bl	405cc0 <wcrtomb@plt+0x10a0>
  4079c8:	bl	406220 <wcrtomb@plt+0x1600>
  4079cc:	str	x0, [sp, #128]
  4079d0:	cbz	x0, 407c78 <wcrtomb@plt+0x3058>
  4079d4:	ldrb	w0, [x0, #156]
  4079d8:	cmp	w0, #0x56
  4079dc:	b.eq	407d24 <wcrtomb@plt+0x3104>  // b.none
  4079e0:	cmp	w0, #0x67
  4079e4:	b.eq	407c24 <wcrtomb@plt+0x3004>  // b.none
  4079e8:	cmp	w0, #0x4d
  4079ec:	b.eq	407cc4 <wcrtomb@plt+0x30a4>  // b.none
  4079f0:	ldr	x23, [x19]
  4079f4:	cbz	x23, 407d90 <wcrtomb@plt+0x3170>
  4079f8:	adrp	x28, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4079fc:	ldr	x2, [x28, #3920]
  407a00:	cbz	x2, 407bd4 <wcrtomb@plt+0x2fb4>
  407a04:	ldr	x1, [x23, #16]
  407a08:	mov	x0, x2
  407a0c:	stp	x1, x2, [sp, #104]
  407a10:	bl	404710 <strcmp@plt>
  407a14:	cbz	w0, 407ab0 <wcrtomb@plt+0x2e90>
  407a18:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  407a1c:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  407a20:	ldr	w0, [x0, #760]
  407a24:	ldr	x3, [x3, #952]
  407a28:	and	w0, w0, #0xfffffffb
  407a2c:	cmp	w0, #0x2
  407a30:	b.ne	407db0 <wcrtomb@plt+0x3190>  // b.any
  407a34:	ldr	x1, [sp, #104]
  407a38:	str	x3, [sp, #120]
  407a3c:	mov	x0, x1
  407a40:	bl	403ff0 <strlen@plt>
  407a44:	cmp	x0, #0x63
  407a48:	ldr	x3, [sp, #120]
  407a4c:	b.ls	407db0 <wcrtomb@plt+0x3190>  // b.plast
  407a50:	ldp	x1, x2, [sp, #104]
  407a54:	mov	x0, x2
  407a58:	mov	x2, #0x64                  	// #100
  407a5c:	bl	4043c0 <strncmp@plt>
  407a60:	ldr	x3, [sp, #120]
  407a64:	cbnz	w0, 407db0 <wcrtomb@plt+0x3190>
  407a68:	cbz	x3, 407a74 <wcrtomb@plt+0x2e54>
  407a6c:	blr	x3
  407a70:	ldr	x23, [x19]
  407a74:	mov	w2, #0x5                   	// #5
  407a78:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  407a7c:	mov	x0, #0x0                   	// #0
  407a80:	add	x1, x1, #0x150
  407a84:	bl	4049c0 <dcgettext@plt>
  407a88:	mov	x2, x0
  407a8c:	ldr	x0, [x23, #16]
  407a90:	mov	x23, x2
  407a94:	bl	440248 <argp_parse@@Base+0xc360>
  407a98:	mov	x3, x0
  407a9c:	mov	x2, x23
  407aa0:	mov	w1, #0x0                   	// #0
  407aa4:	mov	w0, #0x0                   	// #0
  407aa8:	bl	404050 <error@plt>
  407aac:	ldr	x23, [x19]
  407ab0:	adrp	x6, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407ab4:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407ab8:	ldr	x1, [x6, #3960]
  407abc:	ldr	x0, [x3, #3944]
  407ac0:	ldr	x2, [x23, #24]
  407ac4:	adds	x0, x0, x1
  407ac8:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
  407acc:	b.eq	407dc0 <wcrtomb@plt+0x31a0>  // b.none
  407ad0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  407ad4:	ldr	x0, [x0, #952]
  407ad8:	cbz	x0, 407ae0 <wcrtomb@plt+0x2ec0>
  407adc:	blr	x0
  407ae0:	mov	w2, #0x5                   	// #5
  407ae4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  407ae8:	mov	x0, #0x0                   	// #0
  407aec:	add	x1, x1, #0x198
  407af0:	bl	4049c0 <dcgettext@plt>
  407af4:	mov	x23, x0
  407af8:	ldr	x0, [x28, #3920]
  407afc:	bl	440248 <argp_parse@@Base+0xc360>
  407b00:	mov	x28, x0
  407b04:	ldr	x2, [x19]
  407b08:	add	x1, sp, #0x88
  407b0c:	ldr	x0, [x2, #24]
  407b10:	bl	4398d8 <argp_parse@@Base+0x59f0>
  407b14:	mov	x4, x0
  407b18:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407b1c:	add	x1, sp, #0xa0
  407b20:	str	x4, [sp, #112]
  407b24:	ldr	x0, [x3, #3944]
  407b28:	bl	4398d8 <argp_parse@@Base+0x59f0>
  407b2c:	mov	x5, x0
  407b30:	adrp	x6, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407b34:	add	x1, sp, #0xb8
  407b38:	str	x5, [sp, #104]
  407b3c:	ldr	x0, [x6, #3960]
  407b40:	bl	4398d8 <argp_parse@@Base+0x59f0>
  407b44:	mov	x6, x0
  407b48:	ldp	x5, x4, [sp, #104]
  407b4c:	mov	x3, x28
  407b50:	mov	x2, x23
  407b54:	mov	w1, #0x0                   	// #0
  407b58:	mov	w0, #0x0                   	// #0
  407b5c:	bl	404050 <error@plt>
  407b60:	b	407958 <wcrtomb@plt+0x2d38>
  407b64:	bl	404ad0 <__errno_location@plt>
  407b68:	ldr	w0, [x0]
  407b6c:	cmp	w0, #0x1c
  407b70:	b.eq	407bb8 <wcrtomb@plt+0x2f98>  // b.none
  407b74:	bl	405c20 <wcrtomb@plt+0x1000>
  407b78:	ldr	w0, [x22]
  407b7c:	ldr	x2, [x20]
  407b80:	b	4078d0 <wcrtomb@plt+0x2cb0>
  407b84:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  407b88:	mov	w0, #0x1                   	// #1
  407b8c:	str	w0, [x22, #920]
  407b90:	bl	4218f0 <wcrtomb@plt+0x1ccd0>
  407b94:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  407b98:	str	wzr, [x22, #920]
  407b9c:	stp	x23, x24, [sp, #48]
  407ba0:	ldr	x2, [x1, #864]
  407ba4:	stp	x25, x26, [sp, #64]
  407ba8:	cmp	x0, x2
  407bac:	b.ne	407e98 <wcrtomb@plt+0x3278>  // b.any
  407bb0:	mov	w0, #0x0                   	// #0
  407bb4:	b	4078ac <wcrtomb@plt+0x2c8c>
  407bb8:	ldrb	w0, [x23]
  407bbc:	cbz	w0, 407b74 <wcrtomb@plt+0x2f54>
  407bc0:	b	407938 <wcrtomb@plt+0x2d18>
  407bc4:	cmp	w0, #0x8
  407bc8:	cset	w0, eq  // eq = none
  407bcc:	lsl	w0, w0, #1
  407bd0:	b	407970 <wcrtomb@plt+0x2d50>
  407bd4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  407bd8:	ldr	x0, [x0, #952]
  407bdc:	cbz	x0, 407be8 <wcrtomb@plt+0x2fc8>
  407be0:	blr	x0
  407be4:	ldr	x23, [x19]
  407be8:	mov	w2, #0x5                   	// #5
  407bec:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  407bf0:	mov	x0, #0x0                   	// #0
  407bf4:	add	x1, x1, #0x128
  407bf8:	bl	4049c0 <dcgettext@plt>
  407bfc:	mov	x2, x0
  407c00:	ldr	x0, [x23, #16]
  407c04:	mov	x23, x2
  407c08:	bl	440248 <argp_parse@@Base+0xc360>
  407c0c:	mov	x3, x0
  407c10:	mov	x2, x23
  407c14:	mov	w1, #0x0                   	// #0
  407c18:	mov	w0, #0x0                   	// #0
  407c1c:	bl	404050 <error@plt>
  407c20:	b	407958 <wcrtomb@plt+0x2d38>
  407c24:	add	x23, x19, #0x50
  407c28:	mov	x0, x23
  407c2c:	bl	425f70 <wcrtomb@plt+0x21350>
  407c30:	mov	x1, x23
  407c34:	add	x0, sp, #0x80
  407c38:	mov	w2, #0x2                   	// #2
  407c3c:	bl	418628 <wcrtomb@plt+0x13a08>
  407c40:	cmp	w0, #0x2
  407c44:	b.ne	407c78 <wcrtomb@plt+0x3058>  // b.any
  407c48:	mov	x0, x23
  407c4c:	bl	413e28 <wcrtomb@plt+0xf208>
  407c50:	mov	x0, x23
  407c54:	bl	425ff8 <wcrtomb@plt+0x213d8>
  407c58:	mov	x1, x23
  407c5c:	add	x0, sp, #0x80
  407c60:	mov	w2, #0x0                   	// #0
  407c64:	bl	418628 <wcrtomb@plt+0x13a08>
  407c68:	cmp	w0, #0x1
  407c6c:	b.eq	407e64 <wcrtomb@plt+0x3244>  // b.none
  407c70:	cmp	w0, #0x5
  407c74:	b.eq	4079f0 <wcrtomb@plt+0x2dd0>  // b.none
  407c78:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  407c7c:	ldr	x0, [x0, #952]
  407c80:	cbz	x0, 407c88 <wcrtomb@plt+0x3068>
  407c84:	blr	x0
  407c88:	mov	w2, #0x5                   	// #5
  407c8c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  407c90:	mov	x0, #0x0                   	// #0
  407c94:	add	x1, x1, #0xca0
  407c98:	bl	4049c0 <dcgettext@plt>
  407c9c:	mov	x2, x0
  407ca0:	mov	w1, #0x0                   	// #0
  407ca4:	mov	w0, #0x0                   	// #0
  407ca8:	bl	404050 <error@plt>
  407cac:	b	407958 <wcrtomb@plt+0x2d38>
  407cb0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407cb4:	ldr	x0, [x1, #3880]
  407cb8:	add	x0, x0, #0x1
  407cbc:	str	x0, [x1, #3880]
  407cc0:	b	407900 <wcrtomb@plt+0x2ce0>
  407cc4:	bl	405590 <wcrtomb@plt+0x970>
  407cc8:	tst	w0, #0xff
  407ccc:	b.eq	407958 <wcrtomb@plt+0x2d38>  // b.none
  407cd0:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407cd4:	add	x0, x19, #0x50
  407cd8:	bl	425ff8 <wcrtomb@plt+0x213d8>
  407cdc:	ldr	x1, [x23, #4016]
  407ce0:	mov	x2, #0x64                  	// #100
  407ce4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407ce8:	add	x0, x0, #0xf50
  407cec:	bl	41ab38 <wcrtomb@plt+0x15f18>
  407cf0:	ldr	x0, [x23, #4016]
  407cf4:	mov	x1, #0xc                   	// #12
  407cf8:	add	x0, x0, #0x7c
  407cfc:	bl	418f90 <wcrtomb@plt+0x14370>
  407d00:	ldr	x2, [x23, #4016]
  407d04:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407d08:	str	x0, [x1, #3944]
  407d0c:	mov	x1, #0xc                   	// #12
  407d10:	add	x0, x2, #0x171
  407d14:	bl	418f90 <wcrtomb@plt+0x14370>
  407d18:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407d1c:	str	x0, [x1, #3960]
  407d20:	b	4079f0 <wcrtomb@plt+0x2dd0>
  407d24:	bl	405590 <wcrtomb@plt+0x970>
  407d28:	tst	w0, #0xff
  407d2c:	b.eq	407958 <wcrtomb@plt+0x2d38>  // b.none
  407d30:	add	x0, x19, #0x50
  407d34:	bl	425ff8 <wcrtomb@plt+0x213d8>
  407d38:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407d3c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407d40:	mov	x2, #0x64                  	// #100
  407d44:	add	x0, x0, #0xf48
  407d48:	ldr	x1, [x1, #4016]
  407d4c:	bl	41ab38 <wcrtomb@plt+0x15f18>
  407d50:	ldr	x1, [x26, #3952]
  407d54:	ldr	x0, [sp, #128]
  407d58:	cmp	x1, x0
  407d5c:	b.hi	407d74 <wcrtomb@plt+0x3154>  // b.pmore
  407d60:	sub	x0, x0, x1
  407d64:	and	x0, x0, #0xfffffffffffffe00
  407d68:	add	x0, x0, #0x200
  407d6c:	add	x1, x1, x0
  407d70:	str	x1, [x26, #3952]
  407d74:	ldr	x0, [x27, #3888]
  407d78:	cmp	x0, x1
  407d7c:	b.cc	407e94 <wcrtomb@plt+0x3274>  // b.lo, b.ul, b.last
  407d80:	bl	406220 <wcrtomb@plt+0x1600>
  407d84:	str	x0, [sp, #128]
  407d88:	ldrb	w0, [x0, #156]
  407d8c:	b	4079e8 <wcrtomb@plt+0x2dc8>
  407d90:	bl	4053d8 <wcrtomb@plt+0x7b8>
  407d94:	nop
  407d98:	ldr	x1, [x26, #3952]
  407d9c:	ldr	x0, [x27, #3888]
  407da0:	cmp	x1, x0
  407da4:	b.eq	407e58 <wcrtomb@plt+0x3238>  // b.none
  407da8:	ldp	x27, x28, [sp, #80]
  407dac:	b	407900 <wcrtomb@plt+0x2ce0>
  407db0:	cbz	x3, 407be8 <wcrtomb@plt+0x2fc8>
  407db4:	blr	x3
  407db8:	ldr	x23, [x19]
  407dbc:	b	407be8 <wcrtomb@plt+0x2fc8>
  407dc0:	ldr	x0, [x23, #32]
  407dc4:	sub	x2, x2, x0
  407dc8:	cmp	x2, x1
  407dcc:	b.eq	407d90 <wcrtomb@plt+0x3170>  // b.none
  407dd0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  407dd4:	ldr	x0, [x0, #952]
  407dd8:	cbz	x0, 407de4 <wcrtomb@plt+0x31c4>
  407ddc:	blr	x0
  407de0:	ldr	x23, [x19]
  407de4:	mov	w2, #0x5                   	// #5
  407de8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  407dec:	mov	x0, #0x0                   	// #0
  407df0:	add	x1, x1, #0x1c0
  407df4:	bl	4049c0 <dcgettext@plt>
  407df8:	mov	x2, x0
  407dfc:	add	x1, sp, #0x88
  407e00:	ldr	x0, [x23, #24]
  407e04:	mov	x23, x2
  407e08:	bl	4398d8 <argp_parse@@Base+0x59f0>
  407e0c:	mov	x28, x0
  407e10:	ldr	x2, [x19]
  407e14:	add	x1, sp, #0xa0
  407e18:	ldr	x0, [x2, #32]
  407e1c:	bl	4398d8 <argp_parse@@Base+0x59f0>
  407e20:	mov	x4, x0
  407e24:	adrp	x6, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407e28:	add	x1, sp, #0xb8
  407e2c:	str	x4, [sp, #104]
  407e30:	ldr	x0, [x6, #3960]
  407e34:	bl	4398d8 <argp_parse@@Base+0x59f0>
  407e38:	mov	x5, x0
  407e3c:	ldr	x4, [sp, #104]
  407e40:	mov	x3, x28
  407e44:	mov	x2, x23
  407e48:	mov	w1, #0x0                   	// #0
  407e4c:	mov	w0, #0x0                   	// #0
  407e50:	bl	404050 <error@plt>
  407e54:	b	407958 <wcrtomb@plt+0x2d38>
  407e58:	bl	405ee0 <wcrtomb@plt+0x12c0>
  407e5c:	ldp	x27, x28, [sp, #80]
  407e60:	b	407900 <wcrtomb@plt+0x2ce0>
  407e64:	ldr	x1, [x26, #3952]
  407e68:	ldr	x0, [sp, #128]
  407e6c:	cmp	x0, x1
  407e70:	b.cc	407e88 <wcrtomb@plt+0x3268>  // b.lo, b.ul, b.last
  407e74:	sub	x0, x0, x1
  407e78:	and	x0, x0, #0xfffffffffffffe00
  407e7c:	add	x0, x0, #0x200
  407e80:	add	x1, x1, x0
  407e84:	str	x1, [x26, #3952]
  407e88:	ldr	x0, [x27, #3888]
  407e8c:	cmp	x0, x1
  407e90:	b.cs	4079f0 <wcrtomb@plt+0x2dd0>  // b.hs, b.nlast
  407e94:	bl	404650 <abort@plt>
  407e98:	stp	x27, x28, [sp, #80]
  407e9c:	bl	406850 <wcrtomb@plt+0x1c30>
  407ea0:	stp	x29, x30, [sp, #-48]!
  407ea4:	mov	x29, sp
  407ea8:	stp	x19, x20, [sp, #16]
  407eac:	mov	x20, x0
  407eb0:	str	x21, [sp, #32]
  407eb4:	bl	403ff0 <strlen@plt>
  407eb8:	cbz	x0, 407f38 <wcrtomb@plt+0x3318>
  407ebc:	sub	x19, x0, #0x1
  407ec0:	add	x19, x20, x19
  407ec4:	cmp	x20, x19
  407ec8:	b.cs	407f38 <wcrtomb@plt+0x3318>  // b.hs, b.nlast
  407ecc:	bl	404740 <__ctype_b_loc@plt>
  407ed0:	ldr	x0, [x0]
  407ed4:	b	407ee4 <wcrtomb@plt+0x32c4>
  407ed8:	sub	x19, x19, #0x1
  407edc:	cmp	x20, x19
  407ee0:	b.eq	407f38 <wcrtomb@plt+0x3318>  // b.none
  407ee4:	ldrb	w2, [x19]
  407ee8:	ldrh	w2, [x0, x2, lsl #1]
  407eec:	tbnz	w2, #11, 407ed8 <wcrtomb@plt+0x32b8>
  407ef0:	cmp	x20, x19
  407ef4:	b.cs	407f38 <wcrtomb@plt+0x3318>  // b.hs, b.nlast
  407ef8:	sub	x0, x19, #0x7
  407efc:	mov	x21, #0x0                   	// #0
  407f00:	cmp	x0, x20
  407f04:	b.ls	407f24 <wcrtomb@plt+0x3304>  // b.plast
  407f08:	mov	x1, #0x5620                	// #22048
  407f0c:	ldur	x2, [x19, #-7]
  407f10:	movk	x1, #0x6c6f, lsl #16
  407f14:	movk	x1, #0x6d75, lsl #32
  407f18:	movk	x1, #0x2065, lsl #48
  407f1c:	cmp	x2, x1
  407f20:	b.eq	407f50 <wcrtomb@plt+0x3330>  // b.none
  407f24:	mov	x0, x21
  407f28:	ldp	x19, x20, [sp, #16]
  407f2c:	ldr	x21, [sp, #32]
  407f30:	ldp	x29, x30, [sp], #48
  407f34:	ret
  407f38:	mov	x21, #0x0                   	// #0
  407f3c:	mov	x0, x21
  407f40:	ldp	x19, x20, [sp, #16]
  407f44:	ldr	x21, [sp, #32]
  407f48:	ldp	x29, x30, [sp], #48
  407f4c:	ret
  407f50:	sub	x19, x0, x20
  407f54:	add	x0, x19, #0x1
  407f58:	bl	440f48 <argp_parse@@Base+0xd060>
  407f5c:	mov	x21, x0
  407f60:	mov	x1, x20
  407f64:	mov	x2, x19
  407f68:	bl	403f70 <memcpy@plt>
  407f6c:	mov	x0, x21
  407f70:	strb	wzr, [x21, x19]
  407f74:	ldp	x19, x20, [sp, #16]
  407f78:	ldr	x21, [sp, #32]
  407f7c:	ldp	x29, x30, [sp], #48
  407f80:	ret
  407f84:	nop
  407f88:	stp	x29, x30, [sp, #-480]!
  407f8c:	mov	x29, sp
  407f90:	stp	x19, x20, [sp, #16]
  407f94:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  407f98:	ldr	x19, [x20, #3912]
  407f9c:	stp	x21, x22, [sp, #32]
  407fa0:	cbz	x19, 408064 <wcrtomb@plt+0x3444>
  407fa4:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  407fa8:	mov	x1, x19
  407fac:	mov	w2, #0x0                   	// #0
  407fb0:	ldr	x0, [x21, #592]
  407fb4:	bl	4048c0 <fnmatch@plt>
  407fb8:	cbz	w0, 408054 <wcrtomb@plt+0x3434>
  407fbc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  407fc0:	ldrb	w0, [x0, #20]
  407fc4:	cbnz	w0, 408028 <wcrtomb@plt+0x3408>
  407fc8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  407fcc:	ldr	x0, [x0, #952]
  407fd0:	cbz	x0, 407fd8 <wcrtomb@plt+0x33b8>
  407fd4:	blr	x0
  407fd8:	mov	w2, #0x5                   	// #5
  407fdc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  407fe0:	mov	x0, #0x0                   	// #0
  407fe4:	add	x1, x1, #0x210
  407fe8:	bl	4049c0 <dcgettext@plt>
  407fec:	mov	x19, x0
  407ff0:	ldr	x1, [x20, #3912]
  407ff4:	mov	w0, #0x0                   	// #0
  407ff8:	bl	440230 <argp_parse@@Base+0xc348>
  407ffc:	mov	x20, x0
  408000:	ldr	x1, [x21, #592]
  408004:	mov	w0, #0x1                   	// #1
  408008:	bl	440230 <argp_parse@@Base+0xc348>
  40800c:	mov	x4, x0
  408010:	mov	x3, x20
  408014:	mov	x2, x19
  408018:	mov	w1, #0x0                   	// #0
  40801c:	mov	w0, #0x0                   	// #0
  408020:	bl	404050 <error@plt>
  408024:	bl	40e770 <wcrtomb@plt+0x9b50>
  408028:	mov	x0, x19
  40802c:	bl	407ea0 <wcrtomb@plt+0x3280>
  408030:	mov	x19, x0
  408034:	cbz	x0, 407fc8 <wcrtomb@plt+0x33a8>
  408038:	ldr	x1, [x21, #592]
  40803c:	mov	w2, #0x0                   	// #0
  408040:	bl	4048c0 <fnmatch@plt>
  408044:	mov	w22, w0
  408048:	mov	x0, x19
  40804c:	bl	4047b0 <free@plt>
  408050:	cbnz	w22, 407fc8 <wcrtomb@plt+0x33a8>
  408054:	ldp	x19, x20, [sp, #16]
  408058:	ldp	x21, x22, [sp, #32]
  40805c:	ldp	x29, x30, [sp], #480
  408060:	ret
  408064:	bl	406220 <wcrtomb@plt+0x1600>
  408068:	mov	x19, x0
  40806c:	cbz	x0, 40808c <wcrtomb@plt+0x346c>
  408070:	ldrb	w0, [x0, #156]
  408074:	cmp	w0, #0x56
  408078:	b.eq	4080d8 <wcrtomb@plt+0x34b8>  // b.none
  40807c:	cmp	w0, #0x67
  408080:	b.eq	4080f0 <wcrtomb@plt+0x34d0>  // b.none
  408084:	ldr	x19, [x20, #3912]
  408088:	cbnz	x19, 407fa4 <wcrtomb@plt+0x3384>
  40808c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408090:	ldr	x0, [x0, #952]
  408094:	cbz	x0, 40809c <wcrtomb@plt+0x347c>
  408098:	blr	x0
  40809c:	mov	w2, #0x5                   	// #5
  4080a0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4080a4:	mov	x0, #0x0                   	// #0
  4080a8:	add	x1, x1, #0x1f0
  4080ac:	bl	4049c0 <dcgettext@plt>
  4080b0:	mov	x19, x0
  4080b4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4080b8:	ldr	x0, [x1, #592]
  4080bc:	bl	440248 <argp_parse@@Base+0xc360>
  4080c0:	mov	x3, x0
  4080c4:	mov	x2, x19
  4080c8:	mov	w1, #0x0                   	// #0
  4080cc:	mov	w0, #0x0                   	// #0
  4080d0:	bl	404050 <error@plt>
  4080d4:	bl	40e770 <wcrtomb@plt+0x9b50>
  4080d8:	add	x21, x20, #0xf48
  4080dc:	mov	x1, x19
  4080e0:	mov	x0, x21
  4080e4:	mov	x2, #0x64                  	// #100
  4080e8:	bl	41ab38 <wcrtomb@plt+0x15f18>
  4080ec:	b	408084 <wcrtomb@plt+0x3464>
  4080f0:	add	x0, sp, #0x38
  4080f4:	bl	425f70 <wcrtomb@plt+0x21350>
  4080f8:	add	x0, x19, #0x7c
  4080fc:	mov	x1, #0xc                   	// #12
  408100:	bl	418f70 <wcrtomb@plt+0x14350>
  408104:	mov	x2, x0
  408108:	mov	x1, x19
  40810c:	add	x0, sp, #0x190
  408110:	bl	414048 <wcrtomb@plt+0xf428>
  408114:	add	x0, sp, #0x38
  408118:	bl	413e28 <wcrtomb@plt+0xf208>
  40811c:	add	x0, sp, #0x38
  408120:	bl	425ff8 <wcrtomb@plt+0x213d8>
  408124:	b	408084 <wcrtomb@plt+0x3464>
  408128:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40812c:	ldr	x0, [x0, #1680]
  408130:	mov	x16, x0
  408134:	br	x16
  408138:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40813c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408140:	ldr	x0, [x0, #864]
  408144:	ldr	x1, [x1, #1688]
  408148:	mov	x16, x1
  40814c:	br	x16
  408150:	stp	x29, x30, [sp, #-112]!
  408154:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  408158:	adrp	x2, 407000 <wcrtomb@plt+0x23e0>
  40815c:	mov	x29, sp
  408160:	stp	x23, x24, [sp, #48]
  408164:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408168:	add	x24, x24, #0x478
  40816c:	ldr	x3, [x1, #864]
  408170:	add	x2, x2, #0x850
  408174:	adrp	x1, 407000 <wcrtomb@plt+0x23e0>
  408178:	add	x1, x1, #0x358
  40817c:	stp	x19, x20, [sp, #16]
  408180:	str	x2, [x24, #536]
  408184:	str	x1, [x24, #544]
  408188:	cbz	x3, 40891c <wcrtomb@plt+0x3cfc>
  40818c:	mov	w19, w0
  408190:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408194:	ldr	x0, [x0, #792]
  408198:	cbz	x0, 408948 <wcrtomb@plt+0x3d28>
  40819c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4081a0:	add	x0, x0, #0x28
  4081a4:	stp	x25, x26, [sp, #64]
  4081a8:	adrp	x25, 483000 <argp_program_version_hook@@Base+0x290>
  4081ac:	bl	425ff8 <wcrtomb@plt+0x213d8>
  4081b0:	str	wzr, [x24, #24]
  4081b4:	bl	405168 <wcrtomb@plt+0x548>
  4081b8:	ldr	x0, [x25, #632]
  4081bc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4081c0:	cmp	w19, #0x2
  4081c4:	csel	w20, w19, wzr, ne  // ne = any
  4081c8:	str	w20, [x1, #3904]
  4081cc:	ldr	x0, [x0]
  4081d0:	ldrb	w1, [x0]
  4081d4:	cmp	w1, #0x2d
  4081d8:	b.eq	4082a8 <wcrtomb@plt+0x3688>  // b.none
  4081dc:	stp	x21, x22, [sp, #32]
  4081e0:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  4081e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4081e8:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4081ec:	ldr	x23, [x22, #848]
  4081f0:	str	xzr, [x21, #3880]
  4081f4:	ldrb	w0, [x0, #785]
  4081f8:	strb	w0, [x24, #529]
  4081fc:	cbz	x23, 4083a4 <wcrtomb@plt+0x3784>
  408200:	cmp	w19, #0x1
  408204:	b.eq	408358 <wcrtomb@plt+0x3738>  // b.none
  408208:	cmp	w19, #0x2
  40820c:	b.eq	408a4c <wcrtomb@plt+0x3e2c>  // b.none
  408210:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  408214:	cbz	w19, 408334 <wcrtomb@plt+0x3714>
  408218:	ldr	w0, [x20, #920]
  40821c:	tbnz	w0, #31, 4084dc <wcrtomb@plt+0x38bc>
  408220:	mov	w1, #0x3fffffff            	// #1073741823
  408224:	cmp	w0, w1
  408228:	b.le	408304 <wcrtomb@plt+0x36e4>
  40822c:	bl	4215c8 <wcrtomb@plt+0x1c9a8>
  408230:	bl	421570 <wcrtomb@plt+0x1c950>
  408234:	cbz	w19, 40831c <wcrtomb@plt+0x36fc>
  408238:	sub	w0, w19, #0x1
  40823c:	cmp	w0, #0x1
  408240:	b.hi	408270 <wcrtomb@plt+0x3650>  // b.pmore
  408244:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408248:	cmp	w19, #0x1
  40824c:	str	xzr, [x0, #3896]
  408250:	b.ne	408320 <wcrtomb@plt+0x3700>  // b.any
  408254:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408258:	ldr	x0, [x0, #592]
  40825c:	cbz	x0, 408270 <wcrtomb@plt+0x3650>
  408260:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  408264:	ldrb	w1, [x1, #20]
  408268:	cbz	w1, 4084fc <wcrtomb@plt+0x38dc>
  40826c:	bl	4063a0 <wcrtomb@plt+0x1780>
  408270:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  408274:	add	x19, x19, #0x370
  408278:	mov	x0, x19
  40827c:	bl	437e58 <argp_parse@@Base+0x3f70>
  408280:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408284:	add	x0, x0, #0x328
  408288:	ldp	x2, x3, [x19]
  40828c:	stp	x2, x3, [x0]
  408290:	ldp	x19, x20, [sp, #16]
  408294:	ldp	x21, x22, [sp, #32]
  408298:	ldp	x23, x24, [sp, #48]
  40829c:	ldp	x25, x26, [sp, #64]
  4082a0:	ldp	x29, x30, [sp], #112
  4082a4:	ret
  4082a8:	ldrb	w0, [x0, #1]
  4082ac:	cbnz	w0, 4081dc <wcrtomb@plt+0x35bc>
  4082b0:	cmp	w20, #0x0
  4082b4:	cset	w0, ne  // ne = any
  4082b8:	bl	404970 <isatty@plt>
  4082bc:	cbz	w0, 4081dc <wcrtomb@plt+0x35bc>
  4082c0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4082c4:	stp	x21, x22, [sp, #32]
  4082c8:	ldr	x0, [x0, #952]
  4082cc:	str	x27, [sp, #80]
  4082d0:	cbz	x0, 4082d8 <wcrtomb@plt+0x36b8>
  4082d4:	blr	x0
  4082d8:	cbnz	w20, 408974 <wcrtomb@plt+0x3d54>
  4082dc:	mov	w2, #0x5                   	// #5
  4082e0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4082e4:	mov	x0, #0x0                   	// #0
  4082e8:	add	x1, x1, #0x268
  4082ec:	bl	4049c0 <dcgettext@plt>
  4082f0:	mov	x2, x0
  4082f4:	mov	w1, #0x0                   	// #0
  4082f8:	mov	w0, #0x0                   	// #0
  4082fc:	bl	404050 <error@plt>
  408300:	bl	40e770 <wcrtomb@plt+0x9b50>
  408304:	bl	4214f8 <wcrtomb@plt+0x1c8d8>
  408308:	tst	w0, #0xff
  40830c:	b.eq	4084dc <wcrtomb@plt+0x38bc>  // b.none
  408310:	bl	4215c8 <wcrtomb@plt+0x1c9a8>
  408314:	bl	421570 <wcrtomb@plt+0x1c950>
  408318:	cbnz	w19, 408238 <wcrtomb@plt+0x3618>
  40831c:	bl	406220 <wcrtomb@plt+0x1600>
  408320:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408324:	ldr	x0, [x0, #592]
  408328:	cbz	x0, 408270 <wcrtomb@plt+0x3650>
  40832c:	bl	407f88 <wcrtomb@plt+0x3368>
  408330:	b	408270 <wcrtomb@plt+0x3650>
  408334:	bl	421c98 <wcrtomb@plt+0x1d078>
  408338:	str	w0, [x24, #552]
  40833c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408340:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408344:	mov	w3, #0x1                   	// #1
  408348:	strb	w3, [x24, #529]
  40834c:	ldr	x2, [x2, #3928]
  408350:	str	x2, [x1, #3888]
  408354:	b	408218 <wcrtomb@plt+0x35f8>
  408358:	bl	421928 <wcrtomb@plt+0x1cd08>
  40835c:	str	w0, [x24, #552]
  408360:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  408364:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  408368:	ldr	x0, [x1, #904]
  40836c:	cbnz	x0, 408218 <wcrtomb@plt+0x35f8>
  408370:	ldr	x0, [x25, #632]
  408374:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  408378:	ldr	x0, [x0]
  40837c:	ldrb	w1, [x0]
  408380:	cmp	w1, #0x2d
  408384:	b.ne	408218 <wcrtomb@plt+0x35f8>  // b.any
  408388:	ldrb	w0, [x0, #1]
  40838c:	cbnz	w0, 408218 <wcrtomb@plt+0x35f8>
  408390:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408394:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408398:	ldr	x1, [x1, #1096]
  40839c:	str	x1, [x0, #3872]
  4083a0:	b	408218 <wcrtomb@plt+0x35f8>
  4083a4:	str	x27, [sp, #80]
  4083a8:	ldr	x27, [x25, #632]
  4083ac:	ldr	x26, [x27]
  4083b0:	ldrb	w0, [x26]
  4083b4:	cmp	w0, #0x2d
  4083b8:	b.ne	4083f8 <wcrtomb@plt+0x37d8>  // b.any
  4083bc:	ldrb	w0, [x26, #1]
  4083c0:	cbnz	w0, 4083f8 <wcrtomb@plt+0x37d8>
  4083c4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4083c8:	mov	w0, #0x1                   	// #1
  4083cc:	strb	w0, [x24, #529]
  4083d0:	ldrb	w1, [x1, #786]
  4083d4:	cbnz	w1, 408984 <wcrtomb@plt+0x3d64>
  4083d8:	cmp	w19, #0x1
  4083dc:	b.eq	4086f4 <wcrtomb@plt+0x3ad4>  // b.none
  4083e0:	cmp	w19, #0x2
  4083e4:	b.eq	4086b8 <wcrtomb@plt+0x3a98>  // b.none
  4083e8:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  4083ec:	cbz	w19, 408504 <wcrtomb@plt+0x38e4>
  4083f0:	ldr	x27, [sp, #80]
  4083f4:	b	408218 <wcrtomb@plt+0x35f8>
  4083f8:	cmp	w19, #0x1
  4083fc:	b.eq	408614 <wcrtomb@plt+0x39f4>  // b.none
  408400:	cmp	w19, #0x2
  408404:	b.eq	408578 <wcrtomb@plt+0x3958>  // b.none
  408408:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  40840c:	cbnz	w19, 4083f0 <wcrtomb@plt+0x37d0>
  408410:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408414:	ldrb	w0, [x0, #960]
  408418:	cbnz	w0, 408454 <wcrtomb@plt+0x3834>
  40841c:	mov	x0, x26
  408420:	mov	w1, #0x3a                  	// #58
  408424:	bl	404870 <strchr@plt>
  408428:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40842c:	str	x0, [x1, #968]
  408430:	ldr	x26, [x27]
  408434:	cbz	x0, 408454 <wcrtomb@plt+0x3834>
  408438:	cmp	x0, x26
  40843c:	b.ls	408454 <wcrtomb@plt+0x3834>  // b.plast
  408440:	sub	x2, x0, x26
  408444:	mov	w1, #0x2f                  	// #47
  408448:	mov	x0, x26
  40844c:	bl	404960 <memchr@plt>
  408450:	cbz	x0, 408830 <wcrtomb@plt+0x3c10>
  408454:	mov	w1, #0x0                   	// #0
  408458:	mov	x0, x26
  40845c:	mov	w2, #0x1b6                 	// #438
  408460:	bl	404340 <open@plt>
  408464:	mov	w1, w0
  408468:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  40846c:	cmn	w1, #0x1
  408470:	str	w1, [x20, #920]
  408474:	b.eq	4084d8 <wcrtomb@plt+0x38b8>  // b.none
  408478:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40847c:	ldrb	w0, [x0, #20]
  408480:	cbnz	w0, 4084bc <wcrtomb@plt+0x389c>
  408484:	ldr	x0, [x22, #848]
  408488:	cbz	x0, 4087cc <wcrtomb@plt+0x3bac>
  40848c:	mov	w0, #0x3fffffff            	// #1073741823
  408490:	cmp	w1, w0
  408494:	b.le	4087c0 <wcrtomb@plt+0x3ba0>
  408498:	mov	w0, #0xc0000000            	// #-1073741824
  40849c:	add	w0, w1, w0
  4084a0:	bl	42af90 <wcrtomb@plt+0x26370>
  4084a4:	strb	wzr, [x24, #528]
  4084a8:	bl	421c98 <wcrtomb@plt+0x1d078>
  4084ac:	ldr	w1, [x20, #920]
  4084b0:	mov	w2, #0x1                   	// #1
  4084b4:	strb	w2, [x24, #529]
  4084b8:	str	w0, [x24, #552]
  4084bc:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4084c0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4084c4:	str	xzr, [x21, #3880]
  4084c8:	ldr	x2, [x2, #3928]
  4084cc:	str	x2, [x0, #3888]
  4084d0:	str	w1, [x20, #920]
  4084d4:	tbz	w1, #31, 40856c <wcrtomb@plt+0x394c>
  4084d8:	ldr	x27, [sp, #80]
  4084dc:	bl	404ad0 <__errno_location@plt>
  4084e0:	mov	x19, x0
  4084e4:	ldr	w21, [x0]
  4084e8:	str	x27, [sp, #80]
  4084ec:	ldr	x0, [x25, #632]
  4084f0:	ldr	x0, [x0]
  4084f4:	str	w21, [x19]
  4084f8:	bl	429df8 <wcrtomb@plt+0x251d8>
  4084fc:	bl	4062a0 <wcrtomb@plt+0x1680>
  408500:	b	408270 <wcrtomb@plt+0x3650>
  408504:	add	x0, sp, #0x6f
  408508:	str	wzr, [x20, #920]
  40850c:	bl	406430 <wcrtomb@plt+0x1810>
  408510:	mov	w21, w0
  408514:	cmp	w0, #0x1
  408518:	b.hi	4089a4 <wcrtomb@plt+0x3d84>  // b.pmore
  40851c:	ldrb	w0, [sp, #111]
  408520:	cbz	w0, 4083f0 <wcrtomb@plt+0x37d0>
  408524:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408528:	ldr	x0, [x0, #952]
  40852c:	cbz	x0, 408534 <wcrtomb@plt+0x3914>
  408530:	blr	x0
  408534:	mov	w2, #0x5                   	// #5
  408538:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  40853c:	mov	x0, #0x0                   	// #0
  408540:	add	x1, x1, #0xca0
  408544:	bl	4049c0 <dcgettext@plt>
  408548:	mov	x2, x0
  40854c:	mov	w1, #0x0                   	// #0
  408550:	mov	w0, #0x0                   	// #0
  408554:	bl	404050 <error@plt>
  408558:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40855c:	mov	w1, #0x2                   	// #2
  408560:	ldr	x27, [sp, #80]
  408564:	str	w1, [x0, #3400]
  408568:	b	408218 <wcrtomb@plt+0x35f8>
  40856c:	bl	4051e8 <wcrtomb@plt+0x5c8>
  408570:	ldr	x27, [sp, #80]
  408574:	b	408218 <wcrtomb@plt+0x35f8>
  408578:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40857c:	ldrb	w0, [x0, #960]
  408580:	cbnz	w0, 4085bc <wcrtomb@plt+0x399c>
  408584:	mov	x0, x26
  408588:	mov	w1, #0x3a                  	// #58
  40858c:	bl	404870 <strchr@plt>
  408590:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  408594:	str	x0, [x1, #968]
  408598:	ldr	x26, [x27]
  40859c:	cbz	x0, 4085bc <wcrtomb@plt+0x399c>
  4085a0:	cmp	x0, x26
  4085a4:	b.ls	4085bc <wcrtomb@plt+0x399c>  // b.plast
  4085a8:	sub	x2, x0, x26
  4085ac:	mov	w1, #0x2f                  	// #47
  4085b0:	mov	x0, x26
  4085b4:	bl	404960 <memchr@plt>
  4085b8:	cbz	x0, 408850 <wcrtomb@plt+0x3c30>
  4085bc:	mov	w1, #0x42                  	// #66
  4085c0:	mov	x0, x26
  4085c4:	mov	w2, #0x1b6                 	// #438
  4085c8:	bl	404340 <open@plt>
  4085cc:	mov	w1, w0
  4085d0:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  4085d4:	mov	x0, #0x0                   	// #0
  4085d8:	str	w1, [x20, #920]
  4085dc:	bl	406430 <wcrtomb@plt+0x1810>
  4085e0:	cmp	w0, #0x1
  4085e4:	b.ls	4083f0 <wcrtomb@plt+0x37d0>  // b.plast
  4085e8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4085ec:	ldr	x0, [x0, #952]
  4085f0:	cbz	x0, 4085f8 <wcrtomb@plt+0x39d8>
  4085f4:	blr	x0
  4085f8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4085fc:	add	x1, x1, #0x348
  408600:	mov	w2, #0x5                   	// #5
  408604:	mov	x0, #0x0                   	// #0
  408608:	bl	4049c0 <dcgettext@plt>
  40860c:	mov	x2, x0
  408610:	b	4082f4 <wcrtomb@plt+0x36d4>
  408614:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408618:	mov	w20, #0x0                   	// #0
  40861c:	ldrb	w0, [x0, #701]
  408620:	cbnz	w0, 408780 <wcrtomb@plt+0x3b60>
  408624:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408628:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40862c:	ldrb	w0, [x0, #786]
  408630:	ldrb	w1, [x1, #960]
  408634:	cbz	w0, 40871c <wcrtomb@plt+0x3afc>
  408638:	cbnz	w1, 408674 <wcrtomb@plt+0x3a54>
  40863c:	mov	x0, x26
  408640:	mov	w1, #0x3a                  	// #58
  408644:	bl	404870 <strchr@plt>
  408648:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40864c:	str	x0, [x1, #968]
  408650:	ldr	x26, [x27]
  408654:	cbz	x0, 408674 <wcrtomb@plt+0x3a54>
  408658:	cmp	x0, x26
  40865c:	b.ls	408674 <wcrtomb@plt+0x3a54>  // b.plast
  408660:	sub	x2, x0, x26
  408664:	mov	w1, #0x2f                  	// #47
  408668:	mov	x0, x26
  40866c:	bl	404960 <memchr@plt>
  408670:	cbz	x0, 4088e4 <wcrtomb@plt+0x3cc4>
  408674:	mov	x0, x26
  408678:	mov	w2, #0x1b6                 	// #438
  40867c:	mov	w1, #0x42                  	// #66
  408680:	bl	404340 <open@plt>
  408684:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  408688:	str	w0, [x1, #920]
  40868c:	tbnz	w0, #31, 408a34 <wcrtomb@plt+0x3e14>
  408690:	mov	w1, #0x3fffffff            	// #1073741823
  408694:	cmp	w0, w1
  408698:	b.gt	408768 <wcrtomb@plt+0x3b48>
  40869c:	bl	4214f8 <wcrtomb@plt+0x1c8d8>
  4086a0:	tst	w0, #0xff
  4086a4:	b.eq	408a34 <wcrtomb@plt+0x3e14>  // b.none
  4086a8:	bl	4215c8 <wcrtomb@plt+0x1c9a8>
  4086ac:	bl	421570 <wcrtomb@plt+0x1c950>
  4086b0:	ldr	x27, [sp, #80]
  4086b4:	b	408238 <wcrtomb@plt+0x3618>
  4086b8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4086bc:	adrp	x5, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4086c0:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4086c4:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  4086c8:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4086cc:	ldr	x1, [x1, #904]
  4086d0:	str	wzr, [x3, #920]
  4086d4:	ldr	x5, [x5, #3928]
  4086d8:	str	x5, [x4, #3888]
  4086dc:	strb	w0, [x2, #3936]
  4086e0:	cbz	x1, 40879c <wcrtomb@plt+0x3b7c>
  4086e4:	bl	4214f8 <wcrtomb@plt+0x1c8d8>
  4086e8:	tst	w0, #0xff
  4086ec:	b.ne	4086a8 <wcrtomb@plt+0x3a88>  // b.any
  4086f0:	b	4084d8 <wcrtomb@plt+0x38b8>
  4086f4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4086f8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4086fc:	ldr	x0, [x0, #904]
  408700:	str	w19, [x1, #920]
  408704:	cbnz	x0, 4086e4 <wcrtomb@plt+0x3ac4>
  408708:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40870c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408710:	ldr	x1, [x1, #1096]
  408714:	str	x1, [x0, #3872]
  408718:	b	4086e4 <wcrtomb@plt+0x3ac4>
  40871c:	cbnz	w1, 408758 <wcrtomb@plt+0x3b38>
  408720:	mov	x0, x26
  408724:	mov	w1, #0x3a                  	// #58
  408728:	bl	404870 <strchr@plt>
  40872c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  408730:	str	x0, [x1, #968]
  408734:	ldr	x26, [x27]
  408738:	cbz	x0, 408758 <wcrtomb@plt+0x3b38>
  40873c:	cmp	x0, x26
  408740:	b.ls	408758 <wcrtomb@plt+0x3b38>  // b.plast
  408744:	sub	x2, x0, x26
  408748:	mov	w1, #0x2f                  	// #47
  40874c:	mov	x0, x26
  408750:	bl	404960 <memchr@plt>
  408754:	cbz	x0, 408900 <wcrtomb@plt+0x3ce0>
  408758:	mov	x0, x26
  40875c:	mov	w1, #0x1b6                 	// #438
  408760:	bl	404bb0 <creat@plt>
  408764:	b	408684 <wcrtomb@plt+0x3a64>
  408768:	bl	4215c8 <wcrtomb@plt+0x1c9a8>
  40876c:	bl	421570 <wcrtomb@plt+0x1c950>
  408770:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408774:	ldr	x27, [sp, #80]
  408778:	str	xzr, [x0, #3896]
  40877c:	b	408254 <wcrtomb@plt+0x3634>
  408780:	mov	x0, x26
  408784:	mov	w1, w19
  408788:	bl	41b630 <wcrtomb@plt+0x16a10>
  40878c:	mov	w20, w19
  408790:	ldr	x27, [x25, #632]
  408794:	ldr	x26, [x27]
  408798:	b	408624 <wcrtomb@plt+0x3a04>
  40879c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4087a0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4087a4:	ldr	x1, [x1, #1096]
  4087a8:	str	x1, [x0, #3872]
  4087ac:	bl	4214f8 <wcrtomb@plt+0x1c8d8>
  4087b0:	tst	w0, #0xff
  4087b4:	b.eq	408a04 <wcrtomb@plt+0x3de4>  // b.none
  4087b8:	ldr	x27, [sp, #80]
  4087bc:	b	40822c <wcrtomb@plt+0x360c>
  4087c0:	mov	w0, w1
  4087c4:	bl	4045c0 <close@plt>
  4087c8:	b	4084a4 <wcrtomb@plt+0x3884>
  4087cc:	add	x0, sp, #0x6f
  4087d0:	bl	406430 <wcrtomb@plt+0x1810>
  4087d4:	cbz	w0, 40887c <wcrtomb@plt+0x3c5c>
  4087d8:	cmp	w0, #0x1
  4087dc:	b.ne	408870 <wcrtomb@plt+0x3c50>  // b.any
  4087e0:	ldrb	w0, [sp, #111]
  4087e4:	cbz	w0, 408828 <wcrtomb@plt+0x3c08>
  4087e8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4087ec:	ldr	x0, [x0, #952]
  4087f0:	cbz	x0, 4087f8 <wcrtomb@plt+0x3bd8>
  4087f4:	blr	x0
  4087f8:	mov	w2, #0x5                   	// #5
  4087fc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  408800:	mov	x0, #0x0                   	// #0
  408804:	add	x1, x1, #0xca0
  408808:	bl	4049c0 <dcgettext@plt>
  40880c:	mov	x2, x0
  408810:	mov	w1, #0x0                   	// #0
  408814:	mov	w0, #0x0                   	// #0
  408818:	bl	404050 <error@plt>
  40881c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408820:	mov	w1, #0x2                   	// #2
  408824:	str	w1, [x0, #3400]
  408828:	ldr	w1, [x20, #920]
  40882c:	b	4084d0 <wcrtomb@plt+0x38b0>
  408830:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  408834:	mov	w1, #0x0                   	// #0
  408838:	mov	x0, x26
  40883c:	mov	w2, #0x40000000            	// #1073741824
  408840:	ldr	x3, [x3, #752]
  408844:	bl	42a918 <wcrtomb@plt+0x25cf8>
  408848:	mov	w1, w0
  40884c:	b	408468 <wcrtomb@plt+0x3848>
  408850:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  408854:	mov	w1, #0x42                  	// #66
  408858:	mov	x0, x26
  40885c:	mov	w2, #0x40000000            	// #1073741824
  408860:	ldr	x3, [x3, #752]
  408864:	bl	42a918 <wcrtomb@plt+0x25cf8>
  408868:	mov	w1, w0
  40886c:	b	4085d0 <wcrtomb@plt+0x39b0>
  408870:	ldr	w1, [x20, #920]
  408874:	str	w0, [x24, #508]
  408878:	b	40848c <wcrtomb@plt+0x386c>
  40887c:	ldrb	w0, [sp, #111]
  408880:	cbz	w0, 4088c4 <wcrtomb@plt+0x3ca4>
  408884:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408888:	ldr	x0, [x0, #952]
  40888c:	cbz	x0, 408894 <wcrtomb@plt+0x3c74>
  408890:	blr	x0
  408894:	mov	w2, #0x5                   	// #5
  408898:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  40889c:	mov	x0, #0x0                   	// #0
  4088a0:	add	x1, x1, #0xca0
  4088a4:	bl	4049c0 <dcgettext@plt>
  4088a8:	mov	x2, x0
  4088ac:	mov	w1, #0x0                   	// #0
  4088b0:	mov	w0, #0x0                   	// #0
  4088b4:	bl	404050 <error@plt>
  4088b8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4088bc:	mov	w1, #0x2                   	// #2
  4088c0:	str	w1, [x0, #3400]
  4088c4:	ldr	x0, [x25, #632]
  4088c8:	mov	x1, #0x0                   	// #0
  4088cc:	ldr	x0, [x0]
  4088d0:	bl	420f98 <wcrtomb@plt+0x1c378>
  4088d4:	ldr	x0, [x22, #848]
  4088d8:	cbz	x0, 408828 <wcrtomb@plt+0x3c08>
  4088dc:	ldr	w1, [x20, #920]
  4088e0:	b	40848c <wcrtomb@plt+0x386c>
  4088e4:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  4088e8:	mov	x0, x26
  4088ec:	mov	w2, #0x40000000            	// #1073741824
  4088f0:	mov	w1, #0x42                  	// #66
  4088f4:	ldr	x3, [x3, #752]
  4088f8:	bl	42a918 <wcrtomb@plt+0x25cf8>
  4088fc:	b	408684 <wcrtomb@plt+0x3a64>
  408900:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  408904:	mov	x0, x26
  408908:	mov	w2, #0x40000000            	// #1073741824
  40890c:	mov	w1, #0x41                  	// #65
  408910:	ldr	x3, [x3, #752]
  408914:	bl	42a918 <wcrtomb@plt+0x25cf8>
  408918:	b	408684 <wcrtomb@plt+0x3a64>
  40891c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408920:	stp	x21, x22, [sp, #32]
  408924:	ldr	x0, [x0, #952]
  408928:	stp	x25, x26, [sp, #64]
  40892c:	str	x27, [sp, #80]
  408930:	cbz	x0, 408938 <wcrtomb@plt+0x3d18>
  408934:	blr	x0
  408938:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40893c:	mov	w2, #0x5                   	// #5
  408940:	add	x1, x1, #0x230
  408944:	b	408604 <wcrtomb@plt+0x39e4>
  408948:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40894c:	stp	x21, x22, [sp, #32]
  408950:	ldr	x0, [x0, #952]
  408954:	stp	x25, x26, [sp, #64]
  408958:	str	x27, [sp, #80]
  40895c:	cbz	x0, 408964 <wcrtomb@plt+0x3d44>
  408960:	blr	x0
  408964:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  408968:	mov	w2, #0x5                   	// #5
  40896c:	add	x1, x1, #0x250
  408970:	b	408604 <wcrtomb@plt+0x39e4>
  408974:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  408978:	mov	w2, #0x5                   	// #5
  40897c:	add	x1, x1, #0x2b0
  408980:	b	408604 <wcrtomb@plt+0x39e4>
  408984:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408988:	ldr	x0, [x0, #952]
  40898c:	cbz	x0, 408994 <wcrtomb@plt+0x3d74>
  408990:	blr	x0
  408994:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  408998:	mov	w2, #0x5                   	// #5
  40899c:	add	x1, x1, #0x2f8
  4089a0:	b	408604 <wcrtomb@plt+0x39e4>
  4089a4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4089a8:	ldr	x0, [x0, #952]
  4089ac:	cbz	x0, 4089b4 <wcrtomb@plt+0x3d94>
  4089b0:	blr	x0
  4089b4:	mov	w2, #0x5                   	// #5
  4089b8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4089bc:	mov	x0, #0x0                   	// #0
  4089c0:	add	x1, x1, #0x320
  4089c4:	bl	4049c0 <dcgettext@plt>
  4089c8:	mov	x2, x0
  4089cc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  4089d0:	add	x1, x1, #0x678
  4089d4:	add	x0, x1, #0x8
  4089d8:	mov	x4, #0x18                  	// #24
  4089dc:	mov	x1, #0x0                   	// #0
  4089e0:	b	4089f0 <wcrtomb@plt+0x3dd0>
  4089e4:	add	x1, x1, #0x1
  4089e8:	cmp	w21, w5
  4089ec:	b.eq	408a14 <wcrtomb@plt+0x3df4>  // b.none
  4089f0:	mul	x5, x1, x4
  4089f4:	mov	w3, w1
  4089f8:	ldr	w5, [x5, x0]
  4089fc:	cbnz	w5, 4089e4 <wcrtomb@plt+0x3dc4>
  408a00:	b	408a20 <wcrtomb@plt+0x3e00>
  408a04:	bl	404ad0 <__errno_location@plt>
  408a08:	ldr	w21, [x0]
  408a0c:	mov	x19, x0
  408a10:	b	4084ec <wcrtomb@plt+0x38cc>
  408a14:	smull	x3, w3, w4
  408a18:	add	x0, x0, x3
  408a1c:	ldr	x23, [x0, #16]
  408a20:	mov	x3, x23
  408a24:	mov	w1, #0x0                   	// #0
  408a28:	mov	w0, #0x0                   	// #0
  408a2c:	bl	404050 <error@plt>
  408a30:	bl	40e770 <wcrtomb@plt+0x9b50>
  408a34:	bl	404ad0 <__errno_location@plt>
  408a38:	ldr	w21, [x0]
  408a3c:	mov	x19, x0
  408a40:	cbz	w20, 4084ec <wcrtomb@plt+0x38cc>
  408a44:	bl	41b860 <wcrtomb@plt+0x16c40>
  408a48:	b	4084ec <wcrtomb@plt+0x38cc>
  408a4c:	str	x27, [sp, #80]
  408a50:	bl	404650 <abort@plt>
  408a54:	nop
  408a58:	stp	x29, x30, [sp, #-32]!
  408a5c:	mov	x29, sp
  408a60:	stp	x19, x20, [sp, #16]
  408a64:	bl	441170 <argp_parse@@Base+0xd288>
  408a68:	ldrb	w20, [x0]
  408a6c:	mov	w1, #0x27                  	// #39
  408a70:	mov	x19, x0
  408a74:	cmp	w20, #0x22
  408a78:	ccmp	w20, w1, #0x4, ne  // ne = any
  408a7c:	b.ne	408a94 <wcrtomb@plt+0x3e74>  // b.any
  408a80:	bl	403ff0 <strlen@plt>
  408a84:	add	x1, x19, x0
  408a88:	ldurb	w1, [x1, #-1]
  408a8c:	cmp	w1, w20
  408a90:	b.eq	408aac <wcrtomb@plt+0x3e8c>  // b.none
  408a94:	mov	x0, x19
  408a98:	bl	41aba0 <wcrtomb@plt+0x15f80>
  408a9c:	mov	x0, x19
  408aa0:	ldp	x19, x20, [sp, #16]
  408aa4:	ldp	x29, x30, [sp], #32
  408aa8:	ret
  408aac:	sub	x20, x0, #0x2
  408ab0:	add	x1, x19, #0x1
  408ab4:	mov	x2, x20
  408ab8:	mov	x0, x19
  408abc:	bl	403f80 <memmove@plt>
  408ac0:	mov	x0, x19
  408ac4:	strb	wzr, [x19, x20]
  408ac8:	bl	41aba0 <wcrtomb@plt+0x15f80>
  408acc:	mov	x0, x19
  408ad0:	ldp	x19, x20, [sp, #16]
  408ad4:	ldp	x29, x30, [sp], #32
  408ad8:	ret
  408adc:	nop
  408ae0:	stp	x29, x30, [sp, #-32]!
  408ae4:	mov	x29, sp
  408ae8:	str	x19, [sp, #16]
  408aec:	mov	w19, w0
  408af0:	mov	x0, #0x18                  	// #24
  408af4:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  408af8:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408afc:	ldr	x2, [x1, #1720]
  408b00:	cbz	x2, 408b1c <wcrtomb@plt+0x3efc>
  408b04:	str	x0, [x2]
  408b08:	str	w19, [x0, #8]
  408b0c:	str	x0, [x1, #1720]
  408b10:	ldr	x19, [sp, #16]
  408b14:	ldp	x29, x30, [sp], #32
  408b18:	ret
  408b1c:	add	x3, x1, #0x6b8
  408b20:	str	w19, [x0, #8]
  408b24:	str	x0, [x1, #1720]
  408b28:	ldr	x19, [sp, #16]
  408b2c:	str	x0, [x3, #8]
  408b30:	ldp	x29, x30, [sp], #32
  408b34:	ret
  408b38:	stp	x29, x30, [sp, #-32]!
  408b3c:	mov	x29, sp
  408b40:	bl	404230 <fileno@plt>
  408b44:	add	x2, sp, #0x18
  408b48:	mov	x1, #0x5413                	// #21523
  408b4c:	bl	404bd0 <ioctl@plt>
  408b50:	cbnz	w0, 408b5c <wcrtomb@plt+0x3f3c>
  408b54:	ldrh	w0, [sp, #26]
  408b58:	cbnz	w0, 408b88 <wcrtomb@plt+0x3f68>
  408b5c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  408b60:	add	x0, x0, #0x578
  408b64:	bl	404af0 <getenv@plt>
  408b68:	cbz	x0, 408b94 <wcrtomb@plt+0x3f74>
  408b6c:	mov	w2, #0xa                   	// #10
  408b70:	mov	x1, #0x0                   	// #0
  408b74:	bl	404770 <strtol@plt>
  408b78:	cmp	x0, #0x0
  408b7c:	b.le	408b94 <wcrtomb@plt+0x3f74>
  408b80:	ldp	x29, x30, [sp], #32
  408b84:	ret
  408b88:	and	x0, x0, #0xffff
  408b8c:	ldp	x29, x30, [sp], #32
  408b90:	ret
  408b94:	mov	x0, #0x50                  	// #80
  408b98:	ldp	x29, x30, [sp], #32
  408b9c:	ret
  408ba0:	stp	x29, x30, [sp, #-400]!
  408ba4:	mov	x29, sp
  408ba8:	stp	x19, x20, [sp, #16]
  408bac:	mov	x19, x2
  408bb0:	mov	w2, #0x5                   	// #5
  408bb4:	stp	x21, x22, [sp, #32]
  408bb8:	mov	w21, w4
  408bbc:	mov	x20, x21
  408bc0:	stp	x23, x24, [sp, #48]
  408bc4:	stp	x25, x26, [sp, #64]
  408bc8:	mov	x26, x0
  408bcc:	ands	w25, w3, #0xff
  408bd0:	stp	x27, x28, [sp, #80]
  408bd4:	mov	x27, x1
  408bd8:	b.eq	408dbc <wcrtomb@plt+0x419c>  // b.none
  408bdc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  408be0:	mov	x0, #0x0                   	// #0
  408be4:	add	x1, x1, #0x580
  408be8:	bl	4049c0 <dcgettext@plt>
  408bec:	add	x1, sp, #0x78
  408bf0:	mov	x22, x0
  408bf4:	mov	x0, x21
  408bf8:	bl	4398d8 <argp_parse@@Base+0x59f0>
  408bfc:	mov	x23, x0
  408c00:	cbz	x19, 408e50 <wcrtomb@plt+0x4230>
  408c04:	ldrb	w1, [x19]
  408c08:	cbz	w1, 408c64 <wcrtomb@plt+0x4044>
  408c0c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408c10:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x18e10>
  408c14:	add	x21, x21, #0x6b8
  408c18:	add	x24, x24, #0x120
  408c1c:	cmp	w1, #0x25
  408c20:	add	x28, x19, #0x1
  408c24:	b.eq	408c8c <wcrtomb@plt+0x406c>  // b.none
  408c28:	ldp	x2, x3, [x26, #40]
  408c2c:	cmp	x2, x3
  408c30:	b.cs	408e44 <wcrtomb@plt+0x4224>  // b.hs, b.nlast
  408c34:	add	x3, x2, #0x1
  408c38:	str	x3, [x26, #40]
  408c3c:	strb	w1, [x2]
  408c40:	ldrb	w2, [x19]
  408c44:	cmp	w2, #0xd
  408c48:	b.eq	408da0 <wcrtomb@plt+0x4180>  // b.none
  408c4c:	mov	x2, x28
  408c50:	add	x27, x27, #0x1
  408c54:	mov	x28, x19
  408c58:	mov	x19, x2
  408c5c:	ldrb	w1, [x28, #1]
  408c60:	cbnz	w1, 408c1c <wcrtomb@plt+0x3ffc>
  408c64:	mov	x0, x26
  408c68:	bl	4048d0 <fflush_unlocked@plt>
  408c6c:	mov	w0, w27
  408c70:	ldp	x19, x20, [sp, #16]
  408c74:	ldp	x21, x22, [sp, #32]
  408c78:	ldp	x23, x24, [sp, #48]
  408c7c:	ldp	x25, x26, [sp, #64]
  408c80:	ldp	x27, x28, [sp, #80]
  408c84:	ldp	x29, x30, [sp], #400
  408c88:	ret
  408c8c:	ldrb	w2, [x19, #1]
  408c90:	cmp	w2, #0x7b
  408c94:	b.eq	408e6c <wcrtomb@plt+0x424c>  // b.none
  408c98:	cmp	w2, #0x64
  408c9c:	b.eq	408f34 <wcrtomb@plt+0x4314>  // b.none
  408ca0:	b.ls	408cd4 <wcrtomb@plt+0x40b4>  // b.plast
  408ca4:	cmp	w2, #0x74
  408ca8:	b.eq	408e00 <wcrtomb@plt+0x41e0>  // b.none
  408cac:	cmp	w2, #0x75
  408cb0:	b.ne	408d0c <wcrtomb@plt+0x40ec>  // b.any
  408cb4:	mov	x1, x26
  408cb8:	mov	x0, x23
  408cbc:	bl	4049e0 <fputs_unlocked@plt>
  408cc0:	add	x19, x28, #0x1
  408cc4:	mov	x0, x23
  408cc8:	bl	403ff0 <strlen@plt>
  408ccc:	add	x27, x27, x0
  408cd0:	b	408c5c <wcrtomb@plt+0x403c>
  408cd4:	cmp	w2, #0x54
  408cd8:	b.eq	409034 <wcrtomb@plt+0x4414>  // b.none
  408cdc:	cmp	w2, #0x63
  408ce0:	b.ne	408d34 <wcrtomb@plt+0x4114>  // b.any
  408ce4:	mov	x1, x27
  408ce8:	mov	w4, w20
  408cec:	mov	w3, w25
  408cf0:	mov	x0, x26
  408cf4:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  408cf8:	add	x19, x28, #0x1
  408cfc:	add	x2, x2, #0x5c0
  408d00:	bl	408ba0 <wcrtomb@plt+0x3f80>
  408d04:	add	x27, x27, w0, sxtw
  408d08:	b	408c5c <wcrtomb@plt+0x403c>
  408d0c:	cmp	w2, #0x73
  408d10:	b.ne	408ef0 <wcrtomb@plt+0x42d0>  // b.any
  408d14:	mov	x1, x26
  408d18:	mov	x0, x22
  408d1c:	bl	4049e0 <fputs_unlocked@plt>
  408d20:	add	x19, x28, #0x1
  408d24:	mov	x0, x22
  408d28:	bl	403ff0 <strlen@plt>
  408d2c:	add	x27, x27, x0
  408d30:	b	408c5c <wcrtomb@plt+0x403c>
  408d34:	cmp	w2, #0x2a
  408d38:	b.ne	408ef0 <wcrtomb@plt+0x42d0>  // b.any
  408d3c:	mov	x0, x26
  408d40:	bl	408b38 <wcrtomb@plt+0x3f18>
  408d44:	mov	x5, x0
  408d48:	cmp	x27, x5
  408d4c:	add	x19, x28, #0x1
  408d50:	b.cs	408c5c <wcrtomb@plt+0x403c>  // b.hs, b.nlast
  408d54:	mov	w6, #0x20                  	// #32
  408d58:	b	408d70 <wcrtomb@plt+0x4150>
  408d5c:	str	x4, [x26, #40]
  408d60:	strb	w6, [x2]
  408d64:	add	x27, x27, #0x1
  408d68:	cmp	x27, x5
  408d6c:	b.eq	408c5c <wcrtomb@plt+0x403c>  // b.none
  408d70:	ldp	x2, x3, [x26, #40]
  408d74:	add	x4, x2, #0x1
  408d78:	cmp	x2, x3
  408d7c:	b.cc	408d5c <wcrtomb@plt+0x413c>  // b.lo, b.ul, b.last
  408d80:	mov	x0, x26
  408d84:	mov	w1, #0x20                  	// #32
  408d88:	str	x5, [sp, #96]
  408d8c:	str	w6, [sp, #104]
  408d90:	bl	404680 <__overflow@plt>
  408d94:	ldr	w6, [sp, #104]
  408d98:	ldr	x5, [sp, #96]
  408d9c:	b	408d64 <wcrtomb@plt+0x4144>
  408da0:	mov	x1, x28
  408da4:	mov	w0, #0x1                   	// #1
  408da8:	mov	x28, x19
  408dac:	mov	x27, #0x0                   	// #0
  408db0:	mov	x19, x1
  408db4:	str	w0, [x21, #32]
  408db8:	b	408c5c <wcrtomb@plt+0x403c>
  408dbc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  408dc0:	mov	x0, #0x0                   	// #0
  408dc4:	add	x1, x1, #0x588
  408dc8:	bl	4049c0 <dcgettext@plt>
  408dcc:	add	x1, sp, #0x78
  408dd0:	mov	x22, x0
  408dd4:	mov	x0, x21
  408dd8:	bl	4398d8 <argp_parse@@Base+0x59f0>
  408ddc:	mov	x23, x0
  408de0:	cbnz	x19, 408c04 <wcrtomb@plt+0x3fe4>
  408de4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  408de8:	mov	w2, #0x5                   	// #5
  408dec:	add	x1, x1, #0x5a8
  408df0:	mov	x0, #0x0                   	// #0
  408df4:	bl	4049c0 <dcgettext@plt>
  408df8:	mov	x19, x0
  408dfc:	b	408c04 <wcrtomb@plt+0x3fe4>
  408e00:	mov	x19, x24
  408e04:	mov	x1, #0x0                   	// #0
  408e08:	add	x0, sp, #0xa8
  408e0c:	bl	404430 <gettimeofday@plt>
  408e10:	add	x0, sp, #0xa8
  408e14:	bl	404240 <localtime@plt>
  408e18:	ldr	x4, [sp, #176]
  408e1c:	mov	w5, #0x3e8                 	// #1000
  408e20:	mov	x2, x0
  408e24:	mov	x1, x19
  408e28:	mov	x0, x26
  408e2c:	mov	x3, #0x0                   	// #0
  408e30:	mul	w4, w5, w4
  408e34:	add	x19, x28, #0x1
  408e38:	bl	437da0 <argp_parse@@Base+0x3eb8>
  408e3c:	add	x27, x27, x0
  408e40:	b	408c5c <wcrtomb@plt+0x403c>
  408e44:	mov	x0, x26
  408e48:	bl	404680 <__overflow@plt>
  408e4c:	b	408c40 <wcrtomb@plt+0x4020>
  408e50:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  408e54:	mov	w2, #0x5                   	// #5
  408e58:	add	x1, x1, #0x590
  408e5c:	mov	x0, #0x0                   	// #0
  408e60:	bl	4049c0 <dcgettext@plt>
  408e64:	mov	x19, x0
  408e68:	b	408c04 <wcrtomb@plt+0x3fe4>
  408e6c:	add	x2, x19, #0x2
  408e70:	mov	w1, #0x7d                  	// #125
  408e74:	mov	x0, x2
  408e78:	str	x2, [sp, #96]
  408e7c:	bl	404870 <strchr@plt>
  408e80:	mov	x3, x0
  408e84:	cbz	x0, 408ef0 <wcrtomb@plt+0x42d0>
  408e88:	sub	x19, x0, x28
  408e8c:	ldp	x0, x1, [x21, #16]
  408e90:	ldr	x2, [sp, #96]
  408e94:	cmp	x19, x1
  408e98:	b.hi	40905c <wcrtomb@plt+0x443c>  // b.pmore
  408e9c:	sub	x19, x19, #0x1
  408ea0:	mov	x1, x2
  408ea4:	mov	x2, x19
  408ea8:	str	x3, [sp, #96]
  408eac:	bl	403f70 <memcpy@plt>
  408eb0:	ldr	x0, [x21, #16]
  408eb4:	ldr	x3, [sp, #96]
  408eb8:	strb	wzr, [x0, x19]
  408ebc:	add	x28, x3, #0x1
  408ec0:	ldr	x19, [x21, #16]
  408ec4:	cbz	x19, 408ef0 <wcrtomb@plt+0x42d0>
  408ec8:	ldrb	w0, [x3, #1]
  408ecc:	cmp	w0, #0x64
  408ed0:	b.eq	408f34 <wcrtomb@plt+0x4314>  // b.none
  408ed4:	b.ls	408f58 <wcrtomb@plt+0x4338>  // b.plast
  408ed8:	cmp	w0, #0x74
  408edc:	b.eq	408e04 <wcrtomb@plt+0x41e4>  // b.none
  408ee0:	cmp	w0, #0x75
  408ee4:	b.eq	408cb4 <wcrtomb@plt+0x4094>  // b.none
  408ee8:	cmp	w0, #0x73
  408eec:	b.eq	408d14 <wcrtomb@plt+0x40f4>  // b.none
  408ef0:	ldp	x0, x1, [x26, #40]
  408ef4:	cmp	x0, x1
  408ef8:	b.cs	4090d4 <wcrtomb@plt+0x44b4>  // b.hs, b.nlast
  408efc:	add	x1, x0, #0x1
  408f00:	str	x1, [x26, #40]
  408f04:	mov	w1, #0x25                  	// #37
  408f08:	strb	w1, [x0]
  408f0c:	ldp	x0, x2, [x26, #40]
  408f10:	ldrb	w1, [x28]
  408f14:	cmp	x0, x2
  408f18:	b.cs	4090c4 <wcrtomb@plt+0x44a4>  // b.hs, b.nlast
  408f1c:	add	x2, x0, #0x1
  408f20:	add	x27, x27, #0x2
  408f24:	str	x2, [x26, #40]
  408f28:	strb	w1, [x0]
  408f2c:	add	x19, x28, #0x1
  408f30:	b	408c5c <wcrtomb@plt+0x403c>
  408f34:	bl	405738 <wcrtomb@plt+0xb18>
  408f38:	add	x19, x28, #0x1
  408f3c:	mov	x0, x26
  408f40:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  408f44:	mov	w1, #0x1                   	// #1
  408f48:	add	x2, x2, #0x5f0
  408f4c:	bl	404700 <__fprintf_chk@plt>
  408f50:	add	x27, x27, w0, sxtw
  408f54:	b	408c5c <wcrtomb@plt+0x403c>
  408f58:	cmp	w0, #0x54
  408f5c:	b.eq	408f88 <wcrtomb@plt+0x4368>  // b.none
  408f60:	cmp	w0, #0x63
  408f64:	b.eq	408ce4 <wcrtomb@plt+0x40c4>  // b.none
  408f68:	cmp	w0, #0x2a
  408f6c:	b.ne	408ef0 <wcrtomb@plt+0x42d0>  // b.any
  408f70:	mov	x0, x19
  408f74:	mov	w2, #0xa                   	// #10
  408f78:	mov	x1, #0x0                   	// #0
  408f7c:	bl	404770 <strtol@plt>
  408f80:	mov	x5, x0
  408f84:	b	408d48 <wcrtomb@plt+0x4128>
  408f88:	bl	405738 <wcrtomb@plt+0xb18>
  408f8c:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x11e10>
  408f90:	add	x3, x3, #0x5f8
  408f94:	add	x1, sp, #0xa8
  408f98:	mov	x0, x19
  408f9c:	mov	w2, #0x4644                	// #17988
  408fa0:	str	x3, [sp, #224]
  408fa4:	bl	42f1f0 <wcrtomb@plt+0x2a5d0>
  408fa8:	cbz	w0, 409078 <wcrtomb@plt+0x4458>
  408fac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  408fb0:	ldr	x0, [x0, #952]
  408fb4:	cbz	x0, 408fbc <wcrtomb@plt+0x439c>
  408fb8:	blr	x0
  408fbc:	mov	w2, #0x5                   	// #5
  408fc0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  408fc4:	mov	x0, #0x0                   	// #0
  408fc8:	add	x1, x1, #0x600
  408fcc:	bl	4049c0 <dcgettext@plt>
  408fd0:	mov	x2, x0
  408fd4:	add	x0, sp, #0xa8
  408fd8:	str	x2, [sp, #96]
  408fdc:	bl	42c1d8 <wcrtomb@plt+0x275b8>
  408fe0:	mov	x4, x0
  408fe4:	ldr	x2, [sp, #96]
  408fe8:	mov	w1, #0x0                   	// #0
  408fec:	mov	w0, #0x0                   	// #0
  408ff0:	mov	x3, x19
  408ff4:	bl	404050 <error@plt>
  408ff8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  408ffc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  409000:	add	x1, x1, #0x7a0
  409004:	mov	w2, #0x2                   	// #2
  409008:	str	w2, [x0, #3400]
  40900c:	mov	w3, #0x0                   	// #0
  409010:	mov	w2, #0x2c                  	// #44
  409014:	mov	x0, x26
  409018:	bl	4058b0 <wcrtomb@plt+0xc90>
  40901c:	mov	w1, w0
  409020:	add	x19, x28, #0x1
  409024:	add	x0, sp, #0xa8
  409028:	add	x27, x27, w1, sxtw
  40902c:	bl	42c108 <wcrtomb@plt+0x274e8>
  409030:	b	408c5c <wcrtomb@plt+0x403c>
  409034:	bl	405738 <wcrtomb@plt+0xb18>
  409038:	add	x19, x28, #0x1
  40903c:	mov	x0, x26
  409040:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  409044:	mov	w3, #0x0                   	// #0
  409048:	add	x1, x1, #0x7a0
  40904c:	mov	w2, #0x2c                  	// #44
  409050:	bl	4058b0 <wcrtomb@plt+0xc90>
  409054:	add	x27, x27, w0, sxtw
  409058:	b	408c5c <wcrtomb@plt+0x403c>
  40905c:	mov	x1, x19
  409060:	str	x19, [x21, #24]
  409064:	str	x3, [sp, #104]
  409068:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  40906c:	str	x0, [x21, #16]
  409070:	ldp	x2, x3, [sp, #96]
  409074:	b	408e9c <wcrtomb@plt+0x427c>
  409078:	ldr	x3, [sp, #168]
  40907c:	add	x1, sp, #0x90
  409080:	cbz	x3, 4090ac <wcrtomb@plt+0x448c>
  409084:	ldr	x4, [sp, #176]
  409088:	add	x1, sp, #0x90
  40908c:	mov	x0, #0x0                   	// #0
  409090:	ldr	x2, [x4, x0, lsl #3]
  409094:	str	x2, [x1, x0, lsl #3]
  409098:	add	x0, x0, #0x1
  40909c:	cmp	x0, x3
  4090a0:	b.ne	409090 <wcrtomb@plt+0x4470>  // b.any
  4090a4:	cmp	w0, #0x3
  4090a8:	b.eq	40900c <wcrtomb@plt+0x43ec>  // b.none
  4090ac:	sxtw	x0, w0
  4090b0:	str	xzr, [x1, x0, lsl #3]
  4090b4:	add	x0, x0, #0x1
  4090b8:	cmp	w0, #0x2
  4090bc:	b.le	4090b0 <wcrtomb@plt+0x4490>
  4090c0:	b	40900c <wcrtomb@plt+0x43ec>
  4090c4:	mov	x0, x26
  4090c8:	add	x27, x27, #0x2
  4090cc:	bl	404680 <__overflow@plt>
  4090d0:	b	408f2c <wcrtomb@plt+0x430c>
  4090d4:	mov	x0, x26
  4090d8:	mov	w1, #0x25                  	// #37
  4090dc:	bl	404680 <__overflow@plt>
  4090e0:	b	408f0c <wcrtomb@plt+0x42ec>
  4090e4:	nop
  4090e8:	stp	x29, x30, [sp, #-64]!
  4090ec:	mov	x29, sp
  4090f0:	stp	x19, x20, [sp, #16]
  4090f4:	mov	x19, x0
  4090f8:	stp	x21, x22, [sp, #32]
  4090fc:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  409100:	add	x20, x21, #0x6b8
  409104:	ldr	w0, [x20, #36]
  409108:	cbz	w0, 409240 <wcrtomb@plt+0x4620>
  40910c:	ldrb	w0, [x19]
  409110:	cmp	w0, #0x2e
  409114:	b.ne	409138 <wcrtomb@plt+0x4518>  // b.any
  409118:	ldrb	w0, [x19, #1]
  40911c:	cbnz	w0, 409138 <wcrtomb@plt+0x4518>
  409120:	mov	w0, #0x0                   	// #0
  409124:	bl	408ae0 <wcrtomb@plt+0x3ec0>
  409128:	ldp	x19, x20, [sp, #16]
  40912c:	ldp	x21, x22, [sp, #32]
  409130:	ldp	x29, x30, [sp], #64
  409134:	ret
  409138:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40913c:	mov	x0, x19
  409140:	add	x1, x1, #0x620
  409144:	bl	404710 <strcmp@plt>
  409148:	cbz	w0, 409120 <wcrtomb@plt+0x4500>
  40914c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409150:	mov	x0, x19
  409154:	add	x1, x1, #0x628
  409158:	bl	404710 <strcmp@plt>
  40915c:	cbz	w0, 409260 <wcrtomb@plt+0x4640>
  409160:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409164:	mov	x0, x19
  409168:	add	x1, x1, #0x630
  40916c:	bl	404710 <strcmp@plt>
  409170:	cbz	w0, 409254 <wcrtomb@plt+0x4634>
  409174:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409178:	mov	x0, x19
  40917c:	add	x1, x1, #0x638
  409180:	mov	x2, #0x5                   	// #5
  409184:	bl	4043c0 <strncmp@plt>
  409188:	cbz	w0, 4092ac <wcrtomb@plt+0x468c>
  40918c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409190:	mov	x0, x19
  409194:	add	x1, x1, #0x640
  409198:	mov	x2, #0x5                   	// #5
  40919c:	bl	4043c0 <strncmp@plt>
  4091a0:	cbz	w0, 4092e0 <wcrtomb@plt+0x46c0>
  4091a4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4091a8:	mov	x0, x19
  4091ac:	add	x1, x1, #0x648
  4091b0:	mov	x2, #0x7                   	// #7
  4091b4:	bl	4043c0 <strncmp@plt>
  4091b8:	cbz	w0, 409278 <wcrtomb@plt+0x4658>
  4091bc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4091c0:	mov	x0, x19
  4091c4:	add	x1, x1, #0x650
  4091c8:	mov	x2, #0x6                   	// #6
  4091cc:	bl	4043c0 <strncmp@plt>
  4091d0:	cbz	w0, 409314 <wcrtomb@plt+0x46f4>
  4091d4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4091d8:	mov	x0, x19
  4091dc:	add	x1, x1, #0x670
  4091e0:	bl	404710 <strcmp@plt>
  4091e4:	cbz	w0, 409364 <wcrtomb@plt+0x4744>
  4091e8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4091ec:	mov	x0, x19
  4091f0:	add	x1, x1, #0x678
  4091f4:	mov	x2, #0x5                   	// #5
  4091f8:	bl	4043c0 <strncmp@plt>
  4091fc:	cbnz	w0, 409390 <wcrtomb@plt+0x4770>
  409200:	mov	x0, #0x18                  	// #24
  409204:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  409208:	ldr	x1, [x21, #1720]
  40920c:	mov	x22, x0
  409210:	cbz	x1, 409380 <wcrtomb@plt+0x4760>
  409214:	str	x0, [x1]
  409218:	mov	w1, #0x7                   	// #7
  40921c:	str	w1, [x22, #8]
  409220:	add	x0, x19, #0x5
  409224:	str	x22, [x21, #1720]
  409228:	bl	423148 <wcrtomb@plt+0x1e528>
  40922c:	mov	w1, w0
  409230:	str	w1, [x22, #16]
  409234:	add	x0, x20, #0x28
  409238:	bl	404a50 <sigaddset@plt>
  40923c:	b	409128 <wcrtomb@plt+0x4508>
  409240:	add	x0, x20, #0x28
  409244:	bl	4043a0 <sigemptyset@plt>
  409248:	mov	w0, #0x1                   	// #1
  40924c:	str	w0, [x20, #36]
  409250:	b	40910c <wcrtomb@plt+0x44ec>
  409254:	mov	w0, #0x2                   	// #2
  409258:	bl	408ae0 <wcrtomb@plt+0x3ec0>
  40925c:	b	409128 <wcrtomb@plt+0x4508>
  409260:	mov	w0, #0x1                   	// #1
  409264:	bl	408ae0 <wcrtomb@plt+0x3ec0>
  409268:	ldp	x19, x20, [sp, #16]
  40926c:	ldp	x21, x22, [sp, #32]
  409270:	ldp	x29, x30, [sp], #64
  409274:	ret
  409278:	mov	x0, #0x18                  	// #24
  40927c:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  409280:	ldr	x1, [x21, #1720]
  409284:	mov	x22, x0
  409288:	cbz	x1, 409378 <wcrtomb@plt+0x4758>
  40928c:	str	x0, [x1]
  409290:	str	x22, [x21, #1720]
  409294:	mov	w1, #0x3                   	// #3
  409298:	str	w1, [x22, #8]
  40929c:	add	x0, x19, #0x7
  4092a0:	bl	408a58 <wcrtomb@plt+0x3e38>
  4092a4:	str	x0, [x22, #16]
  4092a8:	b	409128 <wcrtomb@plt+0x4508>
  4092ac:	mov	x0, #0x18                  	// #24
  4092b0:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  4092b4:	ldr	x1, [x21, #1720]
  4092b8:	mov	x22, x0
  4092bc:	cbz	x1, 40935c <wcrtomb@plt+0x473c>
  4092c0:	str	x0, [x1]
  4092c4:	str	x22, [x21, #1720]
  4092c8:	mov	w1, #0x2                   	// #2
  4092cc:	str	w1, [x22, #8]
  4092d0:	add	x0, x19, #0x5
  4092d4:	bl	408a58 <wcrtomb@plt+0x3e38>
  4092d8:	str	x0, [x22, #16]
  4092dc:	b	409128 <wcrtomb@plt+0x4508>
  4092e0:	mov	x0, #0x18                  	// #24
  4092e4:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  4092e8:	ldr	x1, [x21, #1720]
  4092ec:	mov	x22, x0
  4092f0:	cbz	x1, 409370 <wcrtomb@plt+0x4750>
  4092f4:	str	x0, [x1]
  4092f8:	str	x22, [x21, #1720]
  4092fc:	mov	w1, #0x5                   	// #5
  409300:	str	w1, [x22, #8]
  409304:	add	x0, x19, #0x5
  409308:	bl	408a58 <wcrtomb@plt+0x3e38>
  40930c:	str	x0, [x22, #16]
  409310:	b	409128 <wcrtomb@plt+0x4508>
  409314:	add	x1, sp, #0x38
  409318:	add	x0, x19, #0x6
  40931c:	mov	w2, #0xa                   	// #10
  409320:	bl	403fe0 <strtoul@plt>
  409324:	ldr	x1, [sp, #56]
  409328:	mov	x22, x0
  40932c:	ldrb	w0, [x1]
  409330:	cbnz	w0, 4093cc <wcrtomb@plt+0x47ac>
  409334:	mov	x0, #0x18                  	// #24
  409338:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  40933c:	ldr	x1, [x21, #1720]
  409340:	cbz	x1, 409388 <wcrtomb@plt+0x4768>
  409344:	str	x0, [x1]
  409348:	mov	w1, #0x4                   	// #4
  40934c:	str	x0, [x21, #1720]
  409350:	str	w1, [x0, #8]
  409354:	str	x22, [x0, #16]
  409358:	b	409128 <wcrtomb@plt+0x4508>
  40935c:	str	x0, [x20, #8]
  409360:	b	4092c4 <wcrtomb@plt+0x46a4>
  409364:	mov	w0, #0x6                   	// #6
  409368:	bl	408ae0 <wcrtomb@plt+0x3ec0>
  40936c:	b	409128 <wcrtomb@plt+0x4508>
  409370:	str	x0, [x20, #8]
  409374:	b	4092f8 <wcrtomb@plt+0x46d8>
  409378:	str	x0, [x20, #8]
  40937c:	b	409290 <wcrtomb@plt+0x4670>
  409380:	str	x0, [x20, #8]
  409384:	b	409218 <wcrtomb@plt+0x45f8>
  409388:	str	x0, [x20, #8]
  40938c:	b	409348 <wcrtomb@plt+0x4728>
  409390:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  409394:	ldr	x0, [x0, #952]
  409398:	cbz	x0, 4093a0 <wcrtomb@plt+0x4780>
  40939c:	blr	x0
  4093a0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4093a4:	add	x1, x1, #0x680
  4093a8:	mov	w2, #0x5                   	// #5
  4093ac:	mov	x0, #0x0                   	// #0
  4093b0:	bl	4049c0 <dcgettext@plt>
  4093b4:	mov	x3, x19
  4093b8:	mov	x2, x0
  4093bc:	mov	w1, #0x0                   	// #0
  4093c0:	mov	w0, #0x0                   	// #0
  4093c4:	bl	404050 <error@plt>
  4093c8:	bl	40e770 <wcrtomb@plt+0x9b50>
  4093cc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4093d0:	ldr	x0, [x0, #952]
  4093d4:	cbz	x0, 4093dc <wcrtomb@plt+0x47bc>
  4093d8:	blr	x0
  4093dc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4093e0:	mov	w2, #0x5                   	// #5
  4093e4:	add	x1, x1, #0x658
  4093e8:	b	4093ac <wcrtomb@plt+0x478c>
  4093ec:	nop
  4093f0:	stp	x29, x30, [sp, #-32]!
  4093f4:	mov	x29, sp
  4093f8:	str	x19, [sp, #16]
  4093fc:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  409400:	add	x19, x19, #0x6b8
  409404:	ldr	w0, [x19, #36]
  409408:	cbnz	w0, 409440 <wcrtomb@plt+0x4820>
  40940c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  409410:	ldr	w0, [x0, #800]
  409414:	cbz	w0, 409420 <wcrtomb@plt+0x4800>
  409418:	ldr	x0, [x19, #8]
  40941c:	cbz	x0, 40942c <wcrtomb@plt+0x480c>
  409420:	ldr	x19, [sp, #16]
  409424:	ldp	x29, x30, [sp], #32
  409428:	ret
  40942c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  409430:	add	x0, x0, #0x630
  409434:	bl	4090e8 <wcrtomb@plt+0x44c8>
  409438:	ldr	w0, [x19, #36]
  40943c:	nop
  409440:	cmp	w0, #0x1
  409444:	b.ne	409420 <wcrtomb@plt+0x4800>  // b.any
  409448:	add	x1, x19, #0x28
  40944c:	mov	x2, #0x0                   	// #0
  409450:	mov	w0, #0x0                   	// #0
  409454:	bl	4040b0 <sigprocmask@plt>
  409458:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40945c:	ldr	w1, [x0, #800]
  409460:	cbnz	w1, 40946c <wcrtomb@plt+0x484c>
  409464:	mov	w1, #0xa                   	// #10
  409468:	str	w1, [x0, #800]
  40946c:	mov	w0, #0x2                   	// #2
  409470:	str	w0, [x19, #36]
  409474:	ldr	x19, [sp, #16]
  409478:	ldp	x29, x30, [sp], #32
  40947c:	ret
  409480:	stp	x29, x30, [sp, #-64]!
  409484:	mov	x29, sp
  409488:	stp	x21, x22, [sp, #32]
  40948c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  409490:	add	x21, x21, #0x6b8
  409494:	stp	x19, x20, [sp, #16]
  409498:	ldr	x19, [x21, #8]
  40949c:	cbz	x19, 40953c <wcrtomb@plt+0x491c>
  4094a0:	stp	x23, x24, [sp, #48]
  4094a4:	mov	w24, #0x20                  	// #32
  4094a8:	mov	w23, #0xd                   	// #13
  4094ac:	b	4094b8 <wcrtomb@plt+0x4898>
  4094b0:	ldr	x19, [x19]
  4094b4:	cbz	x19, 409538 <wcrtomb@plt+0x4918>
  4094b8:	ldr	w0, [x19, #8]
  4094bc:	cmp	w0, #0x3
  4094c0:	b.ne	4094b0 <wcrtomb@plt+0x4890>  // b.any
  4094c4:	ldr	x20, [x21, #168]
  4094c8:	cbz	x20, 4094b0 <wcrtomb@plt+0x4890>
  4094cc:	ldr	w0, [x21, #32]
  4094d0:	cbz	w0, 4094b0 <wcrtomb@plt+0x4890>
  4094d4:	mov	x0, x20
  4094d8:	bl	408b38 <wcrtomb@plt+0x3f18>
  4094dc:	sub	x22, x0, #0x1
  4094e0:	cbz	x0, 40950c <wcrtomb@plt+0x48ec>
  4094e4:	nop
  4094e8:	ldp	x0, x1, [x20, #40]
  4094ec:	add	x2, x0, #0x1
  4094f0:	cmp	x0, x1
  4094f4:	b.cs	40954c <wcrtomb@plt+0x492c>  // b.hs, b.nlast
  4094f8:	str	x2, [x20, #40]
  4094fc:	strb	w24, [x0]
  409500:	sub	x22, x22, #0x1
  409504:	cmn	x22, #0x1
  409508:	b.ne	4094e8 <wcrtomb@plt+0x48c8>  // b.any
  40950c:	ldp	x0, x1, [x20, #40]
  409510:	cmp	x0, x1
  409514:	b.cs	409560 <wcrtomb@plt+0x4940>  // b.hs, b.nlast
  409518:	add	x1, x0, #0x1
  40951c:	str	x1, [x20, #40]
  409520:	strb	w23, [x0]
  409524:	mov	x0, x20
  409528:	bl	4048d0 <fflush_unlocked@plt>
  40952c:	ldr	x19, [x19]
  409530:	cbnz	x19, 4094b8 <wcrtomb@plt+0x4898>
  409534:	nop
  409538:	ldp	x23, x24, [sp, #48]
  40953c:	ldp	x19, x20, [sp, #16]
  409540:	ldp	x21, x22, [sp, #32]
  409544:	ldp	x29, x30, [sp], #64
  409548:	ret
  40954c:	mov	x0, x20
  409550:	mov	w1, #0x20                  	// #32
  409554:	bl	404680 <__overflow@plt>
  409558:	ldr	x20, [x21, #168]
  40955c:	b	409500 <wcrtomb@plt+0x48e0>
  409560:	mov	x0, x20
  409564:	mov	w1, #0xd                   	// #13
  409568:	bl	404680 <__overflow@plt>
  40956c:	ldr	x20, [x21, #168]
  409570:	b	409524 <wcrtomb@plt+0x4904>
  409574:	nop
  409578:	stp	x29, x30, [sp, #-80]!
  40957c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  409580:	mov	x29, sp
  409584:	stp	x21, x22, [sp, #32]
  409588:	and	w21, w0, #0xff
  40958c:	ldr	w0, [x1, #800]
  409590:	cbz	w0, 4095bc <wcrtomb@plt+0x499c>
  409594:	stp	x19, x20, [sp, #16]
  409598:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40959c:	add	x20, x20, #0x6b8
  4095a0:	ldr	w1, [x20, #176]
  4095a4:	add	w1, w1, #0x1
  4095a8:	str	w1, [x20, #176]
  4095ac:	udiv	w2, w1, w0
  4095b0:	msub	w0, w2, w0, w1
  4095b4:	cbz	w0, 4095c8 <wcrtomb@plt+0x49a8>
  4095b8:	ldp	x19, x20, [sp, #16]
  4095bc:	ldp	x21, x22, [sp, #32]
  4095c0:	ldp	x29, x30, [sp], #80
  4095c4:	ret
  4095c8:	ldr	x19, [x20, #8]
  4095cc:	cbz	x19, 4095b8 <wcrtomb@plt+0x4998>
  4095d0:	adrp	x22, 453000 <_obstack_memory_used@@Base+0x10e10>
  4095d4:	add	x22, x22, #0xc50
  4095d8:	stp	x23, x24, [sp, #48]
  4095dc:	adrp	x23, 453000 <_obstack_memory_used@@Base+0x10e10>
  4095e0:	add	x23, x23, #0xe80
  4095e4:	b	409610 <wcrtomb@plt+0x49f0>
  4095e8:	ldr	x0, [x20, #168]
  4095ec:	cbz	x0, 409768 <wcrtomb@plt+0x4b48>
  4095f0:	ldr	w4, [x20, #176]
  4095f4:	mov	w3, w21
  4095f8:	ldr	x2, [x19, #16]
  4095fc:	mov	x1, #0x0                   	// #0
  409600:	bl	408ba0 <wcrtomb@plt+0x3f80>
  409604:	nop
  409608:	ldr	x19, [x19]
  40960c:	cbz	x19, 409670 <wcrtomb@plt+0x4a50>
  409610:	ldr	w0, [x19, #8]
  409614:	cmp	w0, #0x4
  409618:	b.eq	40972c <wcrtomb@plt+0x4b0c>  // b.none
  40961c:	b.hi	409684 <wcrtomb@plt+0x4a64>  // b.pmore
  409620:	cmp	w0, #0x2
  409624:	b.eq	4096d4 <wcrtomb@plt+0x4ab4>  // b.none
  409628:	cmp	w0, #0x3
  40962c:	b.eq	4095e8 <wcrtomb@plt+0x49c8>  // b.none
  409630:	cbz	w0, 409738 <wcrtomb@plt+0x4b18>
  409634:	cmp	w0, #0x1
  409638:	b.ne	409608 <wcrtomb@plt+0x49e8>  // b.any
  40963c:	ldr	x0, [x20, #168]
  409640:	cbz	x0, 409784 <wcrtomb@plt+0x4b64>
  409644:	ldp	x1, x2, [x0, #40]
  409648:	cmp	x1, x2
  40964c:	b.cs	4097b8 <wcrtomb@plt+0x4b98>  // b.hs, b.nlast
  409650:	add	x2, x1, #0x1
  409654:	str	x2, [x0, #40]
  409658:	mov	w0, #0x7                   	// #7
  40965c:	strb	w0, [x1]
  409660:	ldr	x0, [x20, #168]
  409664:	bl	4048d0 <fflush_unlocked@plt>
  409668:	ldr	x19, [x19]
  40966c:	cbnz	x19, 409610 <wcrtomb@plt+0x49f0>
  409670:	ldp	x19, x20, [sp, #16]
  409674:	ldp	x21, x22, [sp, #32]
  409678:	ldp	x23, x24, [sp, #48]
  40967c:	ldp	x29, x30, [sp], #80
  409680:	ret
  409684:	cmp	w0, #0x6
  409688:	b.eq	4096c8 <wcrtomb@plt+0x4aa8>  // b.none
  40968c:	cmp	w0, #0x7
  409690:	b.ne	4096a4 <wcrtomb@plt+0x4a84>  // b.any
  409694:	add	x1, sp, #0x4c
  409698:	add	x0, x20, #0x28
  40969c:	bl	404790 <sigwait@plt>
  4096a0:	b	409608 <wcrtomb@plt+0x49e8>
  4096a4:	cmp	w0, #0x5
  4096a8:	b.ne	409608 <wcrtomb@plt+0x49e8>  // b.any
  4096ac:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4096b0:	ldr	w2, [x20, #176]
  4096b4:	ldr	x0, [x19, #16]
  4096b8:	ldr	x1, [x1, #680]
  4096bc:	ldr	x1, [x1]
  4096c0:	bl	422690 <wcrtomb@plt+0x1da70>
  4096c4:	b	409608 <wcrtomb@plt+0x49e8>
  4096c8:	bl	405738 <wcrtomb@plt+0xb18>
  4096cc:	bl	405b00 <wcrtomb@plt+0xee0>
  4096d0:	b	409608 <wcrtomb@plt+0x49e8>
  4096d4:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4096d8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4096dc:	mov	x2, x22
  4096e0:	mov	w1, #0x1                   	// #1
  4096e4:	ldr	x3, [x0, #3488]
  4096e8:	ldr	x0, [x24, #1096]
  4096ec:	bl	404700 <__fprintf_chk@plt>
  4096f0:	sxtw	x1, w0
  4096f4:	ldr	w4, [x20, #176]
  4096f8:	mov	w3, w21
  4096fc:	ldr	x0, [x24, #1096]
  409700:	ldr	x2, [x19, #16]
  409704:	bl	408ba0 <wcrtomb@plt+0x3f80>
  409708:	ldr	x0, [x24, #1096]
  40970c:	ldp	x1, x2, [x0, #40]
  409710:	cmp	x1, x2
  409714:	b.cs	4097ac <wcrtomb@plt+0x4b8c>  // b.hs, b.nlast
  409718:	add	x2, x1, #0x1
  40971c:	str	x2, [x0, #40]
  409720:	mov	w0, #0xa                   	// #10
  409724:	strb	w0, [x1]
  409728:	b	409608 <wcrtomb@plt+0x49e8>
  40972c:	ldr	w0, [x19, #16]
  409730:	bl	404460 <sleep@plt>
  409734:	b	409608 <wcrtomb@plt+0x49e8>
  409738:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40973c:	ldr	x0, [x24, #3872]
  409740:	ldp	x1, x2, [x0, #40]
  409744:	cmp	x1, x2
  409748:	b.cs	4097a0 <wcrtomb@plt+0x4b80>  // b.hs, b.nlast
  40974c:	add	x2, x1, #0x1
  409750:	str	x2, [x0, #40]
  409754:	mov	w0, #0x2e                  	// #46
  409758:	strb	w0, [x1]
  40975c:	ldr	x0, [x24, #3872]
  409760:	bl	4048d0 <fflush_unlocked@plt>
  409764:	b	409608 <wcrtomb@plt+0x49e8>
  409768:	mov	x1, x23
  40976c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x10e10>
  409770:	add	x0, x0, #0xe90
  409774:	bl	4042e0 <fopen@plt>
  409778:	str	x0, [x20, #168]
  40977c:	cbz	x0, 409608 <wcrtomb@plt+0x49e8>
  409780:	b	4095f0 <wcrtomb@plt+0x49d0>
  409784:	mov	x1, x23
  409788:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x10e10>
  40978c:	add	x0, x0, #0xe90
  409790:	bl	4042e0 <fopen@plt>
  409794:	str	x0, [x20, #168]
  409798:	cbz	x0, 409608 <wcrtomb@plt+0x49e8>
  40979c:	b	409644 <wcrtomb@plt+0x4a24>
  4097a0:	mov	w1, #0x2e                  	// #46
  4097a4:	bl	404680 <__overflow@plt>
  4097a8:	b	40975c <wcrtomb@plt+0x4b3c>
  4097ac:	mov	w1, #0xa                   	// #10
  4097b0:	bl	404680 <__overflow@plt>
  4097b4:	b	409608 <wcrtomb@plt+0x49e8>
  4097b8:	mov	w1, #0x7                   	// #7
  4097bc:	bl	404680 <__overflow@plt>
  4097c0:	b	409660 <wcrtomb@plt+0x4a40>
  4097c4:	nop
  4097c8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4097cc:	ldr	w0, [x0, #800]
  4097d0:	cbnz	w0, 4097d8 <wcrtomb@plt+0x4bb8>
  4097d4:	ret
  4097d8:	stp	x29, x30, [sp, #-16]!
  4097dc:	mov	x29, sp
  4097e0:	bl	409480 <wcrtomb@plt+0x4860>
  4097e4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4097e8:	ldr	x0, [x0, #1888]
  4097ec:	cbz	x0, 4097f8 <wcrtomb@plt+0x4bd8>
  4097f0:	ldp	x29, x30, [sp], #16
  4097f4:	b	4042a0 <fclose@plt>
  4097f8:	ldp	x29, x30, [sp], #16
  4097fc:	ret
  409800:	mov	w0, #0x1                   	// #1
  409804:	ret
  409808:	stp	x29, x30, [sp, #-64]!
  40980c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  409810:	add	x1, x1, #0x28
  409814:	mov	x29, sp
  409818:	stp	x19, x20, [sp, #16]
  40981c:	ldr	x20, [x1, #136]
  409820:	stp	x21, x22, [sp, #32]
  409824:	mov	x22, x0
  409828:	mov	x0, x1
  40982c:	bl	405688 <wcrtomb@plt+0xa68>
  409830:	cbz	x20, 4098e4 <wcrtomb@plt+0x4cc4>
  409834:	str	x23, [sp, #48]
  409838:	adrp	x23, 409000 <wcrtomb@plt+0x43e0>
  40983c:	add	x23, x23, #0x800
  409840:	b	409880 <wcrtomb@plt+0x4c60>
  409844:	bl	405bd8 <wcrtomb@plt+0xfb8>
  409848:	cmp	x0, x20
  40984c:	csel	x19, x0, x20, ls  // ls = plast
  409850:	mov	x1, x21
  409854:	mov	x0, x19
  409858:	sub	x20, x20, x19
  40985c:	blr	x22
  409860:	cmp	w0, #0x0
  409864:	sub	x19, x19, #0x1
  409868:	csel	x22, x23, x22, eq  // eq = none
  40986c:	add	x0, x21, x19
  409870:	bl	405b90 <wcrtomb@plt+0xf70>
  409874:	mov	x0, x20
  409878:	bl	4056c8 <wcrtomb@plt+0xaa8>
  40987c:	cbz	x20, 4098e0 <wcrtomb@plt+0x4cc0>
  409880:	bl	406220 <wcrtomb@plt+0x1600>
  409884:	mov	x21, x0
  409888:	cbnz	x0, 409844 <wcrtomb@plt+0x4c24>
  40988c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  409890:	ldr	x0, [x0, #952]
  409894:	cbz	x0, 40989c <wcrtomb@plt+0x4c7c>
  409898:	blr	x0
  40989c:	mov	w2, #0x5                   	// #5
  4098a0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4098a4:	mov	x0, #0x0                   	// #0
  4098a8:	add	x1, x1, #0x6a8
  4098ac:	bl	4049c0 <dcgettext@plt>
  4098b0:	mov	x2, x0
  4098b4:	mov	w1, #0x0                   	// #0
  4098b8:	mov	w0, #0x0                   	// #0
  4098bc:	bl	404050 <error@plt>
  4098c0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4098c4:	mov	w1, #0x2                   	// #2
  4098c8:	ldp	x19, x20, [sp, #16]
  4098cc:	str	w1, [x0, #3400]
  4098d0:	ldp	x21, x22, [sp, #32]
  4098d4:	ldr	x23, [sp, #48]
  4098d8:	ldp	x29, x30, [sp], #64
  4098dc:	ret
  4098e0:	ldr	x23, [sp, #48]
  4098e4:	ldp	x19, x20, [sp, #16]
  4098e8:	ldp	x21, x22, [sp, #32]
  4098ec:	ldp	x29, x30, [sp], #64
  4098f0:	b	4056b0 <wcrtomb@plt+0xa90>
  4098f4:	nop
  4098f8:	stp	x29, x30, [sp, #-32]!
  4098fc:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  409900:	mov	x29, sp
  409904:	ldr	x1, [x1, #864]
  409908:	add	x0, sp, #0x18
  40990c:	bl	41bf00 <wcrtomb@plt+0x172e0>
  409910:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  409914:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  409918:	ldr	x1, [x1, #776]
  40991c:	str	x0, [x2, #1904]
  409920:	cbz	x1, 409928 <wcrtomb@plt+0x4d08>
  409924:	bl	416758 <wcrtomb@plt+0x11b38>
  409928:	ldp	x29, x30, [sp], #32
  40992c:	ret
  409930:	stp	x29, x30, [sp, #-320]!
  409934:	mov	x29, sp
  409938:	str	q0, [sp, #144]
  40993c:	str	q1, [sp, #160]
  409940:	str	q2, [sp, #176]
  409944:	str	q3, [sp, #192]
  409948:	str	q4, [sp, #208]
  40994c:	str	q5, [sp, #224]
  409950:	str	q6, [sp, #240]
  409954:	str	q7, [sp, #256]
  409958:	stp	x2, x3, [sp, #272]
  40995c:	stp	x4, x5, [sp, #288]
  409960:	stp	x6, x7, [sp, #304]
  409964:	cbz	x1, 409a04 <wcrtomb@plt+0x4de4>
  409968:	mov	x8, x0
  40996c:	stp	x19, x20, [sp, #16]
  409970:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  409974:	mov	x19, x1
  409978:	mov	w0, #0x1                   	// #1
  40997c:	ldr	x1, [x8, #8]
  409980:	str	x21, [sp, #32]
  409984:	ldr	x21, [x20, #3872]
  409988:	bl	41aac0 <wcrtomb@plt+0x15ea0>
  40998c:	mov	x3, x0
  409990:	mov	w1, #0x1                   	// #1
  409994:	mov	x0, x21
  409998:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x10e10>
  40999c:	add	x2, x2, #0xc50
  4099a0:	bl	404700 <__fprintf_chk@plt>
  4099a4:	add	x1, sp, #0x110
  4099a8:	add	x2, sp, #0x140
  4099ac:	add	x3, sp, #0x140
  4099b0:	mov	w5, #0xffffffd0            	// #-48
  4099b4:	mov	w4, #0xffffff80            	// #-128
  4099b8:	stp	x2, x3, [sp, #80]
  4099bc:	mov	x2, x19
  4099c0:	str	x1, [sp, #96]
  4099c4:	add	x3, sp, #0x30
  4099c8:	stp	w5, w4, [sp, #104]
  4099cc:	mov	w1, #0x1                   	// #1
  4099d0:	ldp	x6, x7, [sp, #80]
  4099d4:	stp	x6, x7, [sp, #48]
  4099d8:	ldp	x4, x5, [sp, #96]
  4099dc:	stp	x4, x5, [sp, #64]
  4099e0:	ldr	x0, [x20, #3872]
  4099e4:	stp	x6, x7, [sp, #112]
  4099e8:	stp	x4, x5, [sp, #128]
  4099ec:	bl	4044a0 <__vfprintf_chk@plt>
  4099f0:	ldr	x1, [x20, #3872]
  4099f4:	mov	w0, #0xa                   	// #10
  4099f8:	bl	404170 <fputc@plt>
  4099fc:	ldp	x19, x20, [sp, #16]
  409a00:	ldr	x21, [sp, #32]
  409a04:	mov	w0, #0x1                   	// #1
  409a08:	bl	4260d0 <wcrtomb@plt+0x214b0>
  409a0c:	ldp	x29, x30, [sp], #320
  409a10:	ret
  409a14:	nop
  409a18:	stp	x29, x30, [sp, #-48]!
  409a1c:	mov	x2, x0
  409a20:	mov	x29, sp
  409a24:	stp	x21, x22, [sp, #32]
  409a28:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  409a2c:	add	x3, x22, #0x770
  409a30:	mov	x21, x1
  409a34:	stp	x19, x20, [sp, #16]
  409a38:	mov	x19, x0
  409a3c:	ldr	x1, [x22, #1904]
  409a40:	ldr	w0, [x3, #8]
  409a44:	bl	41b9c0 <wcrtomb@plt+0x16da0>
  409a48:	cmp	x19, x0
  409a4c:	b.eq	409aa8 <wcrtomb@plt+0x4e88>  // b.none
  409a50:	mov	x20, x0
  409a54:	cmn	x0, #0x1
  409a58:	b.eq	409afc <wcrtomb@plt+0x4edc>  // b.none
  409a5c:	mov	w4, #0x5                   	// #5
  409a60:	mov	x3, x19
  409a64:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  409a68:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409a6c:	add	x2, x2, #0x6c8
  409a70:	add	x1, x1, #0x6f0
  409a74:	mov	x0, #0x0                   	// #0
  409a78:	bl	4048f0 <dcngettext@plt>
  409a7c:	mov	x3, x19
  409a80:	mov	x1, x0
  409a84:	mov	x2, x20
  409a88:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  409a8c:	add	x0, x0, #0x28
  409a90:	bl	409930 <wcrtomb@plt+0x4d10>
  409a94:	mov	w0, #0x0                   	// #0
  409a98:	ldp	x19, x20, [sp, #16]
  409a9c:	ldp	x21, x22, [sp, #32]
  409aa0:	ldp	x29, x30, [sp], #48
  409aa4:	ret
  409aa8:	ldr	x1, [x22, #1904]
  409aac:	mov	x2, x19
  409ab0:	mov	x0, x21
  409ab4:	bl	4046d0 <memcmp@plt>
  409ab8:	mov	w1, w0
  409abc:	mov	w0, #0x1                   	// #1
  409ac0:	cbz	w1, 409a98 <wcrtomb@plt+0x4e78>
  409ac4:	mov	w2, #0x5                   	// #5
  409ac8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409acc:	mov	x0, #0x0                   	// #0
  409ad0:	add	x1, x1, #0x710
  409ad4:	bl	4049c0 <dcgettext@plt>
  409ad8:	mov	x1, x0
  409adc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  409ae0:	add	x0, x0, #0x28
  409ae4:	bl	409930 <wcrtomb@plt+0x4d10>
  409ae8:	mov	w0, #0x0                   	// #0
  409aec:	ldp	x19, x20, [sp, #16]
  409af0:	ldp	x21, x22, [sp, #32]
  409af4:	ldp	x29, x30, [sp], #48
  409af8:	ret
  409afc:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  409b00:	add	x19, x19, #0x28
  409b04:	ldr	x0, [x19, #8]
  409b08:	bl	429e20 <wcrtomb@plt+0x25200>
  409b0c:	mov	x0, x19
  409b10:	mov	x1, #0x0                   	// #0
  409b14:	bl	409930 <wcrtomb@plt+0x4d10>
  409b18:	mov	w0, #0x0                   	// #0
  409b1c:	ldp	x19, x20, [sp, #16]
  409b20:	ldp	x21, x22, [sp, #32]
  409b24:	ldp	x29, x30, [sp], #48
  409b28:	ret
  409b2c:	nop
  409b30:	stp	x29, x30, [sp, #-32]!
  409b34:	mov	x29, sp
  409b38:	str	x19, [sp, #16]
  409b3c:	mov	x19, x0
  409b40:	bl	41b9a0 <wcrtomb@plt+0x16d80>
  409b44:	cbnz	w0, 409b58 <wcrtomb@plt+0x4f38>
  409b48:	mov	w0, #0x1                   	// #1
  409b4c:	ldr	x19, [sp, #16]
  409b50:	ldp	x29, x30, [sp], #32
  409b54:	ret
  409b58:	bl	404ad0 <__errno_location@plt>
  409b5c:	ldr	w0, [x0]
  409b60:	cmp	w0, #0x2
  409b64:	mov	x0, x19
  409b68:	b.eq	409b90 <wcrtomb@plt+0x4f70>  // b.none
  409b6c:	bl	42a278 <wcrtomb@plt+0x25658>
  409b70:	mov	x1, #0x0                   	// #0
  409b74:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  409b78:	add	x0, x0, #0x28
  409b7c:	bl	409930 <wcrtomb@plt+0x4d10>
  409b80:	mov	w0, #0x0                   	// #0
  409b84:	ldr	x19, [sp, #16]
  409b88:	ldp	x29, x30, [sp], #32
  409b8c:	ret
  409b90:	bl	42a288 <wcrtomb@plt+0x25668>
  409b94:	b	409b70 <wcrtomb@plt+0x4f50>
  409b98:	sub	sp, sp, #0x440
  409b9c:	stp	x29, x30, [sp]
  409ba0:	mov	x29, sp
  409ba4:	stp	x19, x20, [sp, #16]
  409ba8:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  409bac:	add	x19, x19, #0x28
  409bb0:	stp	x21, x22, [sp, #32]
  409bb4:	add	x22, sp, #0x40
  409bb8:	mov	x21, x22
  409bbc:	ldr	x0, [x19, #24]
  409bc0:	str	x23, [sp, #48]
  409bc4:	bl	403ff0 <strlen@plt>
  409bc8:	mov	x20, x0
  409bcc:	cmp	x0, #0x3ff
  409bd0:	add	x23, x0, #0x1
  409bd4:	b.hi	409c84 <wcrtomb@plt+0x5064>  // b.pmore
  409bd8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  409bdc:	mov	x3, x23
  409be0:	ldr	x1, [x19, #8]
  409be4:	mov	x2, x21
  409be8:	ldr	w0, [x0, #2184]
  409bec:	bl	404c10 <readlinkat@plt>
  409bf0:	tbnz	x0, #63, 409c58 <wcrtomb@plt+0x5038>
  409bf4:	cmp	x20, x0
  409bf8:	b.ne	409c10 <wcrtomb@plt+0x4ff0>  // b.any
  409bfc:	ldr	x0, [x19, #24]
  409c00:	mov	x2, x20
  409c04:	mov	x1, x21
  409c08:	bl	4046d0 <memcmp@plt>
  409c0c:	cbz	w0, 409c30 <wcrtomb@plt+0x5010>
  409c10:	mov	w2, #0x5                   	// #5
  409c14:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409c18:	mov	x0, #0x0                   	// #0
  409c1c:	add	x1, x1, #0x720
  409c20:	bl	4049c0 <dcgettext@plt>
  409c24:	mov	x1, x0
  409c28:	mov	x0, x19
  409c2c:	bl	409930 <wcrtomb@plt+0x4d10>
  409c30:	cmp	x21, x22
  409c34:	b.eq	409c40 <wcrtomb@plt+0x5020>  // b.none
  409c38:	mov	x0, x21
  409c3c:	bl	4047b0 <free@plt>
  409c40:	ldp	x29, x30, [sp]
  409c44:	ldp	x19, x20, [sp, #16]
  409c48:	ldp	x21, x22, [sp, #32]
  409c4c:	ldr	x23, [sp, #48]
  409c50:	add	sp, sp, #0x440
  409c54:	ret
  409c58:	bl	404ad0 <__errno_location@plt>
  409c5c:	ldr	w1, [x0]
  409c60:	ldr	x2, [x19, #8]
  409c64:	cmp	w1, #0x2
  409c68:	mov	x0, x2
  409c6c:	b.eq	409c98 <wcrtomb@plt+0x5078>  // b.none
  409c70:	bl	42a038 <wcrtomb@plt+0x25418>
  409c74:	mov	x0, x19
  409c78:	mov	x1, #0x0                   	// #0
  409c7c:	bl	409930 <wcrtomb@plt+0x4d10>
  409c80:	b	409c30 <wcrtomb@plt+0x5010>
  409c84:	mov	x0, x23
  409c88:	add	x22, sp, #0x40
  409c8c:	bl	440f48 <argp_parse@@Base+0xd060>
  409c90:	mov	x21, x0
  409c94:	b	409bd8 <wcrtomb@plt+0x4fb8>
  409c98:	bl	42a048 <wcrtomb@plt+0x25428>
  409c9c:	b	409c74 <wcrtomb@plt+0x5054>
  409ca0:	stp	x29, x30, [sp, #-160]!
  409ca4:	mov	x29, sp
  409ca8:	str	x19, [sp, #16]
  409cac:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  409cb0:	add	x19, x19, #0x28
  409cb4:	add	x1, sp, #0x20
  409cb8:	ldr	x0, [x19, #8]
  409cbc:	bl	409b30 <wcrtomb@plt+0x4f10>
  409cc0:	cbz	w0, 409ce4 <wcrtomb@plt+0x50c4>
  409cc4:	ldr	w0, [sp, #48]
  409cc8:	and	w1, w0, #0xf000
  409ccc:	cmp	w1, #0x4, lsl #12
  409cd0:	b.ne	409cf0 <wcrtomb@plt+0x50d0>  // b.any
  409cd4:	ldr	w1, [x19, #104]
  409cd8:	eor	w0, w0, w1
  409cdc:	tst	x0, #0xfff
  409ce0:	b.ne	409d1c <wcrtomb@plt+0x50fc>  // b.any
  409ce4:	ldr	x19, [sp, #16]
  409ce8:	ldp	x29, x30, [sp], #160
  409cec:	ret
  409cf0:	mov	w2, #0x5                   	// #5
  409cf4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409cf8:	mov	x0, #0x0                   	// #0
  409cfc:	add	x1, x1, #0x730
  409d00:	bl	4049c0 <dcgettext@plt>
  409d04:	mov	x1, x0
  409d08:	mov	x0, x19
  409d0c:	bl	409930 <wcrtomb@plt+0x4d10>
  409d10:	ldr	x19, [sp, #16]
  409d14:	ldp	x29, x30, [sp], #160
  409d18:	ret
  409d1c:	mov	w2, #0x5                   	// #5
  409d20:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409d24:	mov	x0, #0x0                   	// #0
  409d28:	add	x1, x1, #0x748
  409d2c:	bl	4049c0 <dcgettext@plt>
  409d30:	mov	x1, x0
  409d34:	mov	x0, x19
  409d38:	bl	409930 <wcrtomb@plt+0x4d10>
  409d3c:	ldr	x19, [sp, #16]
  409d40:	ldp	x29, x30, [sp], #160
  409d44:	ret
  409d48:	stp	x29, x30, [sp, #-336]!
  409d4c:	mov	x29, sp
  409d50:	stp	x21, x22, [sp, #32]
  409d54:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  409d58:	ldr	x0, [x21, #4016]
  409d5c:	stp	x19, x20, [sp, #16]
  409d60:	bl	405b90 <wcrtomb@plt+0xf70>
  409d64:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  409d68:	ldr	w0, [x0, #588]
  409d6c:	cbz	w0, 409d90 <wcrtomb@plt+0x5170>
  409d70:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  409d74:	ldrb	w0, [x0, #3968]
  409d78:	cbnz	w0, 40a164 <wcrtomb@plt+0x5544>
  409d7c:	ldr	x1, [x21, #4016]
  409d80:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  409d84:	mov	x2, #0xffffffffffffffff    	// #-1
  409d88:	add	x0, x20, #0x28
  409d8c:	bl	419930 <wcrtomb@plt+0x14d10>
  409d90:	ldr	x0, [x21, #4016]
  409d94:	ldrb	w0, [x0, #156]
  409d98:	cmp	w0, #0x36
  409d9c:	b.eq	409db8 <wcrtomb@plt+0x5198>  // b.none
  409da0:	b.hi	409eb4 <wcrtomb@plt+0x5294>  // b.pmore
  409da4:	cmp	w0, #0x32
  409da8:	b.eq	40a1ec <wcrtomb@plt+0x55cc>  // b.none
  409dac:	b.ls	409e38 <wcrtomb@plt+0x5218>  // b.plast
  409db0:	cmp	w0, #0x35
  409db4:	b.eq	40a074 <wcrtomb@plt+0x5454>  // b.none
  409db8:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  409dbc:	add	x19, x20, #0x28
  409dc0:	add	x1, sp, #0xd0
  409dc4:	ldr	x0, [x19, #8]
  409dc8:	bl	409b30 <wcrtomb@plt+0x4f10>
  409dcc:	cbz	w0, 409e28 <wcrtomb@plt+0x5208>
  409dd0:	ldr	x1, [x21, #4016]
  409dd4:	ldr	w0, [sp, #224]
  409dd8:	ldrb	w1, [x1, #156]
  409ddc:	and	w2, w0, #0xf000
  409de0:	cmp	w1, #0x33
  409de4:	b.eq	40a2e8 <wcrtomb@plt+0x56c8>  // b.none
  409de8:	cmp	w1, #0x34
  409dec:	b.eq	40a278 <wcrtomb@plt+0x5658>  // b.none
  409df0:	cmp	w2, #0x1, lsl #12
  409df4:	b.ne	40a358 <wcrtomb@plt+0x5738>  // b.any
  409df8:	ldr	w1, [x19, #104]
  409dfc:	eor	w0, w0, w1
  409e00:	tst	x0, #0xfff
  409e04:	b.eq	409e28 <wcrtomb@plt+0x5208>  // b.none
  409e08:	mov	w2, #0x5                   	// #5
  409e0c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409e10:	mov	x0, #0x0                   	// #0
  409e14:	add	x1, x1, #0x748
  409e18:	bl	4049c0 <dcgettext@plt>
  409e1c:	mov	x1, x0
  409e20:	mov	x0, x19
  409e24:	bl	409930 <wcrtomb@plt+0x4d10>
  409e28:	ldp	x19, x20, [sp, #16]
  409e2c:	ldp	x21, x22, [sp, #32]
  409e30:	ldp	x29, x30, [sp], #336
  409e34:	ret
  409e38:	cmp	w0, #0x31
  409e3c:	b.ne	409ee0 <wcrtomb@plt+0x52c0>  // b.any
  409e40:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  409e44:	add	x19, x19, #0x28
  409e48:	add	x1, sp, #0x50
  409e4c:	ldr	x0, [x19, #8]
  409e50:	bl	409b30 <wcrtomb@plt+0x4f10>
  409e54:	cbz	w0, 409e28 <wcrtomb@plt+0x5208>
  409e58:	ldr	x0, [x19, #24]
  409e5c:	add	x1, sp, #0xd0
  409e60:	bl	409b30 <wcrtomb@plt+0x4f10>
  409e64:	cbz	w0, 409e28 <wcrtomb@plt+0x5208>
  409e68:	add	x1, sp, #0xd0
  409e6c:	add	x0, sp, #0x50
  409e70:	bl	421878 <wcrtomb@plt+0x1cc58>
  409e74:	tst	w0, #0xff
  409e78:	b.ne	409e28 <wcrtomb@plt+0x5208>  // b.any
  409e7c:	mov	w2, #0x5                   	// #5
  409e80:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409e84:	mov	x0, #0x0                   	// #0
  409e88:	add	x1, x1, #0x7e0
  409e8c:	bl	4049c0 <dcgettext@plt>
  409e90:	mov	x20, x0
  409e94:	ldr	x1, [x19, #24]
  409e98:	mov	w0, #0x0                   	// #0
  409e9c:	bl	41aac0 <wcrtomb@plt+0x15ea0>
  409ea0:	mov	x2, x0
  409ea4:	mov	x1, x20
  409ea8:	mov	x0, x19
  409eac:	bl	409930 <wcrtomb@plt+0x4d10>
  409eb0:	b	409e28 <wcrtomb@plt+0x5208>
  409eb4:	cmp	w0, #0x4d
  409eb8:	b.eq	40a194 <wcrtomb@plt+0x5574>  // b.none
  409ebc:	b.ls	40a064 <wcrtomb@plt+0x5444>  // b.plast
  409ec0:	cmp	w0, #0x53
  409ec4:	b.eq	40a04c <wcrtomb@plt+0x542c>  // b.none
  409ec8:	cmp	w0, #0x56
  409ecc:	b.ne	409ee8 <wcrtomb@plt+0x52c8>  // b.any
  409ed0:	ldp	x19, x20, [sp, #16]
  409ed4:	ldp	x21, x22, [sp, #32]
  409ed8:	ldp	x29, x30, [sp], #336
  409edc:	ret
  409ee0:	cmp	w0, #0x32
  409ee4:	b.ne	40a040 <wcrtomb@plt+0x5420>  // b.any
  409ee8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  409eec:	ldr	x0, [x0, #952]
  409ef0:	cbz	x0, 409ef8 <wcrtomb@plt+0x52d8>
  409ef4:	blr	x0
  409ef8:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  409efc:	add	x19, x20, #0x28
  409f00:	mov	w2, #0x5                   	// #5
  409f04:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  409f08:	mov	x0, #0x0                   	// #0
  409f0c:	add	x1, x1, #0x760
  409f10:	bl	4049c0 <dcgettext@plt>
  409f14:	mov	x20, x0
  409f18:	ldr	x0, [x19, #8]
  409f1c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  409f20:	mov	x3, x0
  409f24:	ldr	x4, [x21, #4016]
  409f28:	mov	w1, #0x0                   	// #0
  409f2c:	mov	w0, #0x0                   	// #0
  409f30:	mov	x2, x20
  409f34:	ldrb	w4, [x4, #156]
  409f38:	bl	404050 <error@plt>
  409f3c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  409f40:	mov	w1, #0x2                   	// #2
  409f44:	str	w1, [x0, #3400]
  409f48:	ldrb	w0, [x19, #16]
  409f4c:	cbnz	w0, 40a05c <wcrtomb@plt+0x543c>
  409f50:	ldr	x20, [x19, #8]
  409f54:	add	x1, sp, #0xd0
  409f58:	mov	x0, x20
  409f5c:	bl	409b30 <wcrtomb@plt+0x4f10>
  409f60:	cbz	w0, 40a2d0 <wcrtomb@plt+0x56b0>
  409f64:	ldr	w0, [sp, #224]
  409f68:	and	w1, w0, #0xf000
  409f6c:	cmp	w1, #0x8, lsl #12
  409f70:	b.ne	40a1c4 <wcrtomb@plt+0x55a4>  // b.any
  409f74:	ldr	w1, [x19, #104]
  409f78:	eor	w0, w0, w1
  409f7c:	tst	x0, #0xfff
  409f80:	b.ne	40a3e8 <wcrtomb@plt+0x57c8>  // b.any
  409f84:	add	x0, sp, #0xd0
  409f88:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  409f8c:	add	x1, x22, #0x80
  409f90:	bl	421848 <wcrtomb@plt+0x1cc28>
  409f94:	tst	w0, #0xff
  409f98:	b.eq	40a3c4 <wcrtomb@plt+0x57a4>  // b.none
  409f9c:	add	x1, x22, #0x80
  409fa0:	add	x0, sp, #0xd0
  409fa4:	bl	421860 <wcrtomb@plt+0x1cc40>
  409fa8:	tst	w0, #0xff
  409fac:	b.eq	40a3a0 <wcrtomb@plt+0x5780>  // b.none
  409fb0:	ldp	x2, x3, [x19, #232]
  409fb4:	ldp	x0, x1, [sp, #296]
  409fb8:	bl	426090 <wcrtomb@plt+0x21470>
  409fbc:	cbnz	w0, 40a37c <wcrtomb@plt+0x575c>
  409fc0:	ldr	x0, [x21, #4016]
  409fc4:	ldrb	w0, [x0, #156]
  409fc8:	cmp	w0, #0x53
  409fcc:	b.eq	409fe0 <wcrtomb@plt+0x53c0>  // b.none
  409fd0:	ldr	x0, [x19, #136]
  409fd4:	ldr	x1, [sp, #256]
  409fd8:	cmp	x1, x0
  409fdc:	b.ne	40a2d8 <wcrtomb@plt+0x56b8>  // b.any
  409fe0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  409fe4:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  409fe8:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  409fec:	add	x21, x21, #0x770
  409ff0:	ldr	w2, [x0, #652]
  409ff4:	mov	x1, x20
  409ff8:	ldr	w0, [x22, #2184]
  409ffc:	bl	4045b0 <__openat_2@plt>
  40a000:	str	w0, [x21, #8]
  40a004:	tbnz	w0, #31, 40a434 <wcrtomb@plt+0x5814>
  40a008:	ldrb	w1, [x19, #272]
  40a00c:	cbz	w1, 40a40c <wcrtomb@plt+0x57ec>
  40a010:	mov	x1, x19
  40a014:	bl	420db0 <wcrtomb@plt+0x1c190>
  40a018:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40a01c:	ldr	w0, [x21, #8]
  40a020:	ldr	w1, [x1, #500]
  40a024:	cmp	w1, #0x1
  40a028:	b.eq	40a450 <wcrtomb@plt+0x5830>  // b.none
  40a02c:	bl	4045c0 <close@plt>
  40a030:	cbz	w0, 409e28 <wcrtomb@plt+0x5208>
  40a034:	mov	x0, x20
  40a038:	bl	429ce8 <wcrtomb@plt+0x250c8>
  40a03c:	b	409e28 <wcrtomb@plt+0x5208>
  40a040:	cbz	w0, 40a04c <wcrtomb@plt+0x542c>
  40a044:	cmp	w0, #0x30
  40a048:	b.ne	409ee8 <wcrtomb@plt+0x52c8>  // b.any
  40a04c:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  40a050:	add	x19, x19, #0x28
  40a054:	ldrb	w0, [x19, #16]
  40a058:	cbz	w0, 409f50 <wcrtomb@plt+0x5330>
  40a05c:	bl	409ca0 <wcrtomb@plt+0x5080>
  40a060:	b	409e28 <wcrtomb@plt+0x5208>
  40a064:	cmp	w0, #0x37
  40a068:	b.eq	40a04c <wcrtomb@plt+0x542c>  // b.none
  40a06c:	cmp	w0, #0x44
  40a070:	b.ne	409ee8 <wcrtomb@plt+0x52c8>  // b.any
  40a074:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  40a078:	add	x19, x20, #0x28
  40a07c:	mov	x0, x19
  40a080:	bl	417340 <wcrtomb@plt+0x12720>
  40a084:	tst	w0, #0xff
  40a088:	b.eq	40a05c <wcrtomb@plt+0x543c>  // b.none
  40a08c:	ldr	w0, [x19, #408]
  40a090:	cbnz	w0, 40a30c <wcrtomb@plt+0x56ec>
  40a094:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40a098:	ldr	x1, [x20, #40]
  40a09c:	ldr	w2, [x0, #652]
  40a0a0:	ldr	x0, [x19, #392]
  40a0a4:	bl	40c748 <wcrtomb@plt+0x7b28>
  40a0a8:	mov	w21, w0
  40a0ac:	tbnz	w0, #31, 40a484 <wcrtomb@plt+0x5864>
  40a0b0:	mov	w1, w0
  40a0b4:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40a0b8:	mov	w0, #0x0                   	// #0
  40a0bc:	add	x2, x2, #0x80
  40a0c0:	bl	4049a0 <__fxstat@plt>
  40a0c4:	cbnz	w0, 40a4a0 <wcrtomb@plt+0x5880>
  40a0c8:	stp	x23, x24, [sp, #48]
  40a0cc:	str	w21, [x19, #408]
  40a0d0:	mov	x0, x19
  40a0d4:	bl	415da0 <wcrtomb@plt+0x11180>
  40a0d8:	bl	416320 <wcrtomb@plt+0x11700>
  40a0dc:	mov	x24, x0
  40a0e0:	cbz	x0, 40a41c <wcrtomb@plt+0x57fc>
  40a0e4:	str	x25, [sp, #64]
  40a0e8:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a0ec:	ldr	x25, [x19, #384]
  40a0f0:	mov	x22, #0x4000                	// #16384
  40a0f4:	mov	x21, #0x400                 	// #1024
  40a0f8:	add	x20, x20, #0x810
  40a0fc:	mov	x23, #0x1                   	// #1
  40a100:	movk	x22, #0x11, lsl #16
  40a104:	movk	x21, #0x20, lsl #16
  40a108:	ldrb	w0, [x25]
  40a10c:	sub	w1, w0, #0x44
  40a110:	and	w4, w1, #0xff
  40a114:	lsl	x1, x23, x1
  40a118:	and	x3, x1, x22
  40a11c:	and	x2, x1, x21
  40a120:	and	w1, w1, #0x1
  40a124:	cbz	w0, 40a2f4 <wcrtomb@plt+0x56d4>
  40a128:	cmp	w4, #0x15
  40a12c:	b.hi	40a124 <wcrtomb@plt+0x5504>  // b.pmore
  40a130:	cbnz	x3, 40a2f4 <wcrtomb@plt+0x56d4>
  40a134:	cbnz	x2, 40a314 <wcrtomb@plt+0x56f4>
  40a138:	cbz	w1, 40a124 <wcrtomb@plt+0x5504>
  40a13c:	mov	x1, x24
  40a140:	mov	x0, x25
  40a144:	bl	404710 <strcmp@plt>
  40a148:	cbnz	w0, 40a334 <wcrtomb@plt+0x5714>
  40a14c:	mov	x0, x25
  40a150:	bl	403ff0 <strlen@plt>
  40a154:	add	x0, x0, #0x1
  40a158:	add	x25, x25, x0
  40a15c:	add	x24, x24, x0
  40a160:	b	40a108 <wcrtomb@plt+0x54e8>
  40a164:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40a168:	mov	w2, #0x5                   	// #5
  40a16c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a170:	add	x1, x1, #0x758
  40a174:	ldr	x19, [x0, #3872]
  40a178:	mov	x0, #0x0                   	// #0
  40a17c:	bl	4049c0 <dcgettext@plt>
  40a180:	mov	x2, x0
  40a184:	mov	w1, #0x1                   	// #1
  40a188:	mov	x0, x19
  40a18c:	bl	404700 <__fprintf_chk@plt>
  40a190:	b	409d7c <wcrtomb@plt+0x515c>
  40a194:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  40a198:	add	x19, x20, #0x28
  40a19c:	ldrb	w0, [x19, #16]
  40a1a0:	cbnz	w0, 40a05c <wcrtomb@plt+0x543c>
  40a1a4:	ldr	x0, [x19, #8]
  40a1a8:	add	x1, sp, #0xd0
  40a1ac:	bl	409b30 <wcrtomb@plt+0x4f10>
  40a1b0:	cbz	w0, 409e28 <wcrtomb@plt+0x5208>
  40a1b4:	ldr	w0, [sp, #224]
  40a1b8:	and	w0, w0, #0xf000
  40a1bc:	cmp	w0, #0x8, lsl #12
  40a1c0:	b.eq	40a1f4 <wcrtomb@plt+0x55d4>  // b.none
  40a1c4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a1c8:	add	x1, x1, #0x730
  40a1cc:	mov	w2, #0x5                   	// #5
  40a1d0:	mov	x0, #0x0                   	// #0
  40a1d4:	bl	4049c0 <dcgettext@plt>
  40a1d8:	mov	x1, x0
  40a1dc:	mov	x0, x19
  40a1e0:	bl	409930 <wcrtomb@plt+0x4d10>
  40a1e4:	bl	41a238 <wcrtomb@plt+0x15618>
  40a1e8:	b	409e28 <wcrtomb@plt+0x5208>
  40a1ec:	bl	409b98 <wcrtomb@plt+0x4f78>
  40a1f0:	b	409e28 <wcrtomb@plt+0x5208>
  40a1f4:	ldr	x0, [x21, #4016]
  40a1f8:	mov	x1, #0xc                   	// #12
  40a1fc:	add	x0, x0, #0x171
  40a200:	bl	418f70 <wcrtomb@plt+0x14350>
  40a204:	mov	x20, x0
  40a208:	tbnz	x0, #63, 40a2d8 <wcrtomb@plt+0x56b8>
  40a20c:	ldr	x0, [x19, #136]
  40a210:	adds	x0, x0, x20
  40a214:	b.vs	40a2d8 <wcrtomb@plt+0x56b8>
  40a218:	ldr	x1, [sp, #256]
  40a21c:	cmp	x1, x0
  40a220:	b.ne	40a2d8 <wcrtomb@plt+0x56b8>  // b.any
  40a224:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40a228:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40a22c:	ldr	x1, [x19, #8]
  40a230:	ldr	w2, [x2, #652]
  40a234:	ldr	w0, [x0, #2184]
  40a238:	bl	4045b0 <__openat_2@plt>
  40a23c:	mov	w21, w0
  40a240:	tbnz	w0, #31, 40a2b8 <wcrtomb@plt+0x5698>
  40a244:	mov	x1, x20
  40a248:	mov	w2, #0x0                   	// #0
  40a24c:	bl	4041d0 <lseek@plt>
  40a250:	tbnz	x0, #63, 40a4b4 <wcrtomb@plt+0x5894>
  40a254:	adrp	x0, 409000 <wcrtomb@plt+0x43e0>
  40a258:	add	x0, x0, #0xa18
  40a25c:	bl	409808 <wcrtomb@plt+0x4be8>
  40a260:	mov	w0, w21
  40a264:	bl	4045c0 <close@plt>
  40a268:	cbz	w0, 409e28 <wcrtomb@plt+0x5208>
  40a26c:	ldr	x0, [x19, #8]
  40a270:	bl	429ce8 <wcrtomb@plt+0x250c8>
  40a274:	b	409e28 <wcrtomb@plt+0x5208>
  40a278:	cmp	w2, #0x6, lsl #12
  40a27c:	cset	w1, ne  // ne = any
  40a280:	cbnz	w1, 40a358 <wcrtomb@plt+0x5738>
  40a284:	ldr	x2, [x19, #120]
  40a288:	ldr	x1, [sp, #240]
  40a28c:	cmp	x2, x1
  40a290:	b.eq	409df8 <wcrtomb@plt+0x51d8>  // b.none
  40a294:	mov	w2, #0x5                   	// #5
  40a298:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a29c:	mov	x0, #0x0                   	// #0
  40a2a0:	add	x1, x1, #0x7f8
  40a2a4:	bl	4049c0 <dcgettext@plt>
  40a2a8:	mov	x1, x0
  40a2ac:	mov	x0, x19
  40a2b0:	bl	409930 <wcrtomb@plt+0x4d10>
  40a2b4:	b	409e28 <wcrtomb@plt+0x5208>
  40a2b8:	ldr	x0, [x19, #8]
  40a2bc:	bl	429de8 <wcrtomb@plt+0x251c8>
  40a2c0:	mov	x0, x19
  40a2c4:	mov	x1, #0x0                   	// #0
  40a2c8:	bl	409930 <wcrtomb@plt+0x4d10>
  40a2cc:	nop
  40a2d0:	bl	41a238 <wcrtomb@plt+0x15618>
  40a2d4:	b	409e28 <wcrtomb@plt+0x5208>
  40a2d8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a2dc:	mov	w2, #0x5                   	// #5
  40a2e0:	add	x1, x1, #0x7d0
  40a2e4:	b	40a1d0 <wcrtomb@plt+0x55b0>
  40a2e8:	cmp	w2, #0x2, lsl #12
  40a2ec:	cset	w1, ne  // ne = any
  40a2f0:	b	40a280 <wcrtomb@plt+0x5660>
  40a2f4:	ldrb	w0, [x24]
  40a2f8:	cbnz	w0, 40a334 <wcrtomb@plt+0x5714>
  40a2fc:	ldp	x23, x24, [sp, #48]
  40a300:	ldr	x25, [sp, #64]
  40a304:	bl	409ca0 <wcrtomb@plt+0x5080>
  40a308:	b	409e28 <wcrtomb@plt+0x5208>
  40a30c:	stp	x23, x24, [sp, #48]
  40a310:	b	40a0d0 <wcrtomb@plt+0x54b0>
  40a314:	ldrb	w1, [x24]
  40a318:	mov	x0, x20
  40a31c:	bl	404870 <strchr@plt>
  40a320:	cbz	x0, 40a334 <wcrtomb@plt+0x5714>
  40a324:	add	x1, x24, #0x1
  40a328:	add	x0, x25, #0x1
  40a32c:	bl	404710 <strcmp@plt>
  40a330:	cbz	w0, 40a14c <wcrtomb@plt+0x552c>
  40a334:	mov	w2, #0x5                   	// #5
  40a338:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a33c:	mov	x0, #0x0                   	// #0
  40a340:	add	x1, x1, #0x710
  40a344:	bl	4049c0 <dcgettext@plt>
  40a348:	mov	x1, x0
  40a34c:	mov	x0, x19
  40a350:	bl	409930 <wcrtomb@plt+0x4d10>
  40a354:	b	40a2fc <wcrtomb@plt+0x56dc>
  40a358:	mov	w2, #0x5                   	// #5
  40a35c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a360:	mov	x0, #0x0                   	// #0
  40a364:	add	x1, x1, #0x730
  40a368:	bl	4049c0 <dcgettext@plt>
  40a36c:	mov	x1, x0
  40a370:	mov	x0, x19
  40a374:	bl	409930 <wcrtomb@plt+0x4d10>
  40a378:	b	409e28 <wcrtomb@plt+0x5208>
  40a37c:	mov	w2, #0x5                   	// #5
  40a380:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a384:	mov	x0, #0x0                   	// #0
  40a388:	add	x1, x1, #0x7b8
  40a38c:	bl	4049c0 <dcgettext@plt>
  40a390:	mov	x1, x0
  40a394:	mov	x0, x19
  40a398:	bl	409930 <wcrtomb@plt+0x4d10>
  40a39c:	b	409fc0 <wcrtomb@plt+0x53a0>
  40a3a0:	mov	w2, #0x5                   	// #5
  40a3a4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a3a8:	mov	x0, #0x0                   	// #0
  40a3ac:	add	x1, x1, #0x7a8
  40a3b0:	bl	4049c0 <dcgettext@plt>
  40a3b4:	mov	x1, x0
  40a3b8:	mov	x0, x19
  40a3bc:	bl	409930 <wcrtomb@plt+0x4d10>
  40a3c0:	b	409fb0 <wcrtomb@plt+0x5390>
  40a3c4:	mov	w2, #0x5                   	// #5
  40a3c8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a3cc:	mov	x0, #0x0                   	// #0
  40a3d0:	add	x1, x1, #0x798
  40a3d4:	bl	4049c0 <dcgettext@plt>
  40a3d8:	mov	x1, x0
  40a3dc:	mov	x0, x19
  40a3e0:	bl	409930 <wcrtomb@plt+0x4d10>
  40a3e4:	b	409f9c <wcrtomb@plt+0x537c>
  40a3e8:	mov	w2, #0x5                   	// #5
  40a3ec:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a3f0:	mov	x0, #0x0                   	// #0
  40a3f4:	add	x1, x1, #0x748
  40a3f8:	bl	4049c0 <dcgettext@plt>
  40a3fc:	mov	x1, x0
  40a400:	mov	x0, x19
  40a404:	bl	409930 <wcrtomb@plt+0x4d10>
  40a408:	b	409f84 <wcrtomb@plt+0x5364>
  40a40c:	adrp	x0, 409000 <wcrtomb@plt+0x43e0>
  40a410:	add	x0, x0, #0xa18
  40a414:	bl	409808 <wcrtomb@plt+0x4be8>
  40a418:	b	40a018 <wcrtomb@plt+0x53f8>
  40a41c:	adrp	x0, 409000 <wcrtomb@plt+0x43e0>
  40a420:	add	x0, x0, #0x800
  40a424:	bl	409808 <wcrtomb@plt+0x4be8>
  40a428:	ldp	x23, x24, [sp, #48]
  40a42c:	bl	409ca0 <wcrtomb@plt+0x5080>
  40a430:	b	409e28 <wcrtomb@plt+0x5208>
  40a434:	mov	x0, x20
  40a438:	bl	429de8 <wcrtomb@plt+0x251c8>
  40a43c:	bl	41a238 <wcrtomb@plt+0x15618>
  40a440:	mov	x0, x19
  40a444:	mov	x1, #0x0                   	// #0
  40a448:	bl	409930 <wcrtomb@plt+0x4d10>
  40a44c:	b	409e28 <wcrtomb@plt+0x5208>
  40a450:	ldr	x1, [sp, #256]
  40a454:	cbz	x1, 40a02c <wcrtomb@plt+0x540c>
  40a458:	ldp	x3, x4, [sp, #280]
  40a45c:	mov	x2, x20
  40a460:	ldr	w1, [x22, #2184]
  40a464:	bl	41baf0 <wcrtomb@plt+0x16ed0>
  40a468:	cbnz	w0, 40a474 <wcrtomb@plt+0x5854>
  40a46c:	ldr	w0, [x21, #8]
  40a470:	b	40a02c <wcrtomb@plt+0x540c>
  40a474:	mov	x0, x20
  40a478:	bl	42a2c8 <wcrtomb@plt+0x256a8>
  40a47c:	ldr	w0, [x21, #8]
  40a480:	b	40a02c <wcrtomb@plt+0x540c>
  40a484:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40a488:	add	x2, x2, #0xcf0
  40a48c:	ldr	x0, [x20, #40]
  40a490:	mov	w1, #0x0                   	// #0
  40a494:	bl	41bde0 <wcrtomb@plt+0x171c0>
  40a498:	bl	409ca0 <wcrtomb@plt+0x5080>
  40a49c:	b	409e28 <wcrtomb@plt+0x5208>
  40a4a0:	mov	w0, w21
  40a4a4:	bl	4045c0 <close@plt>
  40a4a8:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40a4ac:	add	x2, x2, #0xdb8
  40a4b0:	b	40a48c <wcrtomb@plt+0x586c>
  40a4b4:	ldr	x0, [x19, #8]
  40a4b8:	mov	x1, x20
  40a4bc:	bl	42a098 <wcrtomb@plt+0x25478>
  40a4c0:	mov	x0, x19
  40a4c4:	mov	x1, #0x0                   	// #0
  40a4c8:	bl	409930 <wcrtomb@plt+0x4d10>
  40a4cc:	b	40a260 <wcrtomb@plt+0x5640>
  40a4d0:	stp	x29, x30, [sp, #-128]!
  40a4d4:	mov	x29, sp
  40a4d8:	stp	x19, x20, [sp, #16]
  40a4dc:	stp	x25, x26, [sp, #64]
  40a4e0:	bl	42a3d8 <wcrtomb@plt+0x257b8>
  40a4e4:	tst	w0, #0xff
  40a4e8:	b.ne	40a784 <wcrtomb@plt+0x5b64>  // b.any
  40a4ec:	bl	427120 <wcrtomb@plt+0x22500>
  40a4f0:	tst	w0, #0xff
  40a4f4:	b.ne	40a80c <wcrtomb@plt+0x5bec>  // b.any
  40a4f8:	bl	415cd8 <wcrtomb@plt+0x110b8>
  40a4fc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40a500:	ldr	x0, [x0, #1904]
  40a504:	cbz	x0, 40a804 <wcrtomb@plt+0x5be4>
  40a508:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  40a50c:	add	x26, sp, #0x68
  40a510:	ldr	w0, [x19, #920]
  40a514:	bl	4042b0 <fsync@plt>
  40a518:	ldr	w0, [x19, #920]
  40a51c:	mov	x1, #0x24b                 	// #587
  40a520:	bl	404bd0 <ioctl@plt>
  40a524:	mov	w1, #0x2                   	// #2
  40a528:	ldr	w0, [x19, #920]
  40a52c:	mov	w2, #0x1                   	// #1
  40a530:	strh	w1, [sp, #104]
  40a534:	str	w2, [sp, #108]
  40a538:	mov	w1, #0x3fffffff            	// #1073741823
  40a53c:	cmp	w0, w1
  40a540:	b.le	40a770 <wcrtomb@plt+0x5b50>
  40a544:	mov	w3, #0xc0000000            	// #-1073741824
  40a548:	mov	w1, #0x6d01                	// #27905
  40a54c:	mov	x2, x26
  40a550:	add	w0, w0, w3
  40a554:	movk	w1, #0x4008, lsl #16
  40a558:	bl	42b320 <wcrtomb@plt+0x26700>
  40a55c:	tbz	w0, #31, 40a5a0 <wcrtomb@plt+0x5980>
  40a560:	bl	404ad0 <__errno_location@plt>
  40a564:	ldr	w0, [x0]
  40a568:	ldr	w3, [x19, #920]
  40a56c:	cmp	w0, #0x5
  40a570:	b.eq	40a864 <wcrtomb@plt+0x5c44>  // b.none
  40a574:	mov	w0, #0x3fffffff            	// #1073741823
  40a578:	cmp	w3, w0
  40a57c:	b.le	40a844 <wcrtomb@plt+0x5c24>
  40a580:	mov	w0, #0xc0000000            	// #-1073741824
  40a584:	mov	w2, #0x0                   	// #0
  40a588:	add	w0, w3, w0
  40a58c:	mov	x1, #0x0                   	// #0
  40a590:	bl	42b1c0 <wcrtomb@plt+0x265a0>
  40a594:	cmp	x0, #0x0
  40a598:	cset	w0, ne  // ne = any
  40a59c:	cbnz	w0, 40a8b8 <wcrtomb@plt+0x5c98>
  40a5a0:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40a5a4:	add	x20, x20, #0xfb0
  40a5a8:	stp	x21, x22, [sp, #32]
  40a5ac:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  40a5b0:	adrp	x22, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a5b4:	add	x21, x21, #0x28
  40a5b8:	add	x22, x22, #0x8e8
  40a5bc:	stp	x23, x24, [sp, #48]
  40a5c0:	adrp	x23, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a5c4:	add	x23, x23, #0x8b8
  40a5c8:	mov	w0, #0x1                   	// #1
  40a5cc:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40a5d0:	adrp	x25, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40a5d4:	stp	x27, x28, [sp, #80]
  40a5d8:	adrp	x27, 483000 <argp_program_version_hook@@Base+0x290>
  40a5dc:	str	wzr, [x24, #3904]
  40a5e0:	strb	w0, [x25, #3968]
  40a5e4:	bl	408128 <wcrtomb@plt+0x3508>
  40a5e8:	mov	x1, x21
  40a5ec:	mov	x0, x20
  40a5f0:	mov	w2, #0x0                   	// #0
  40a5f4:	bl	418628 <wcrtomb@plt+0x13a08>
  40a5f8:	mov	w19, w0
  40a5fc:	cmp	w0, #0x5
  40a600:	b.eq	40a654 <wcrtomb@plt+0x5a34>  // b.none
  40a604:	cmp	w19, #0x4
  40a608:	b.eq	40a6cc <wcrtomb@plt+0x5aac>  // b.none
  40a60c:	cmp	w19, #0x3
  40a610:	ldr	x0, [x20]
  40a614:	b.eq	40a6f4 <wcrtomb@plt+0x5ad4>  // b.none
  40a618:	mov	x1, x21
  40a61c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40a620:	add	x2, x2, #0xf98
  40a624:	mov	w3, #0x1                   	// #1
  40a628:	bl	418ae8 <wcrtomb@plt+0x13ec8>
  40a62c:	bl	409d48 <wcrtomb@plt+0x5128>
  40a630:	mov	x0, x21
  40a634:	bl	425ff8 <wcrtomb@plt+0x213d8>
  40a638:	mov	x1, x21
  40a63c:	mov	x0, x20
  40a640:	mov	w2, #0x0                   	// #0
  40a644:	bl	418628 <wcrtomb@plt+0x13a08>
  40a648:	mov	w19, w0
  40a64c:	cmp	w0, #0x5
  40a650:	b.ne	40a604 <wcrtomb@plt+0x59e4>  // b.any
  40a654:	mov	w28, #0x0                   	// #0
  40a658:	ldr	x0, [x20]
  40a65c:	add	w28, w28, #0x1
  40a660:	bl	405b90 <wcrtomb@plt+0xf70>
  40a664:	mov	x1, x21
  40a668:	mov	x0, x20
  40a66c:	mov	w2, #0x0                   	// #0
  40a670:	bl	418628 <wcrtomb@plt+0x13a08>
  40a674:	mov	w19, w0
  40a678:	cmp	w0, #0x5
  40a67c:	b.eq	40a658 <wcrtomb@plt+0x5a38>  // b.none
  40a680:	ldr	x0, [x27, #952]
  40a684:	cbz	x0, 40a68c <wcrtomb@plt+0x5a6c>
  40a688:	blr	x0
  40a68c:	mov	w4, #0x5                   	// #5
  40a690:	sxtw	x3, w28
  40a694:	mov	x2, x23
  40a698:	mov	x1, x22
  40a69c:	mov	x0, #0x0                   	// #0
  40a6a0:	bl	4048f0 <dcngettext@plt>
  40a6a4:	mov	w1, #0x0                   	// #0
  40a6a8:	mov	x2, x0
  40a6ac:	mov	w3, w28
  40a6b0:	mov	w0, #0x0                   	// #0
  40a6b4:	bl	404050 <error@plt>
  40a6b8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40a6bc:	mov	w1, #0x2                   	// #2
  40a6c0:	cmp	w19, #0x4
  40a6c4:	str	w1, [x0, #3400]
  40a6c8:	b.ne	40a60c <wcrtomb@plt+0x59ec>  // b.any
  40a6cc:	strb	wzr, [x25, #3968]
  40a6d0:	mov	w0, #0x1                   	// #1
  40a6d4:	str	w0, [x24, #3904]
  40a6d8:	ldp	x19, x20, [sp, #16]
  40a6dc:	ldp	x21, x22, [sp, #32]
  40a6e0:	ldp	x23, x24, [sp, #48]
  40a6e4:	ldp	x25, x26, [sp, #64]
  40a6e8:	ldp	x27, x28, [sp, #80]
  40a6ec:	ldp	x29, x30, [sp], #128
  40a6f0:	ret
  40a6f4:	bl	405b90 <wcrtomb@plt+0xf70>
  40a6f8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40a6fc:	ldrb	w0, [x0, #21]
  40a700:	cbnz	w0, 40a5e8 <wcrtomb@plt+0x59c8>
  40a704:	mov	x1, x21
  40a708:	mov	x0, x20
  40a70c:	mov	w2, #0x0                   	// #0
  40a710:	bl	418628 <wcrtomb@plt+0x13a08>
  40a714:	cmp	w0, #0x3
  40a718:	b.eq	40a6cc <wcrtomb@plt+0x5aac>  // b.none
  40a71c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40a720:	ldr	w0, [x0, #408]
  40a724:	tbz	w0, #0, 40a5e8 <wcrtomb@plt+0x59c8>
  40a728:	ldr	x0, [x27, #952]
  40a72c:	cbz	x0, 40a734 <wcrtomb@plt+0x5b14>
  40a730:	blr	x0
  40a734:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a738:	add	x1, x1, #0x918
  40a73c:	mov	w2, #0x5                   	// #5
  40a740:	mov	x0, #0x0                   	// #0
  40a744:	bl	4049c0 <dcgettext@plt>
  40a748:	mov	x19, x0
  40a74c:	bl	405b20 <wcrtomb@plt+0xf00>
  40a750:	mov	x1, x26
  40a754:	bl	4398d8 <argp_parse@@Base+0x59f0>
  40a758:	mov	x2, x19
  40a75c:	mov	x3, x0
  40a760:	mov	w1, #0x0                   	// #0
  40a764:	mov	w0, #0x0                   	// #0
  40a768:	bl	404050 <error@plt>
  40a76c:	b	40a5e8 <wcrtomb@plt+0x59c8>
  40a770:	mov	x1, #0x6d01                	// #27905
  40a774:	mov	x2, x26
  40a778:	movk	x1, #0x4008, lsl #16
  40a77c:	bl	404bd0 <ioctl@plt>
  40a780:	b	40a55c <wcrtomb@plt+0x593c>
  40a784:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  40a788:	ldr	x0, [x19, #952]
  40a78c:	cbz	x0, 40a794 <wcrtomb@plt+0x5b74>
  40a790:	blr	x0
  40a794:	mov	w2, #0x5                   	// #5
  40a798:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a79c:	mov	x0, #0x0                   	// #0
  40a7a0:	add	x1, x1, #0x818
  40a7a4:	bl	4049c0 <dcgettext@plt>
  40a7a8:	mov	x2, x0
  40a7ac:	mov	w1, #0x0                   	// #0
  40a7b0:	mov	w0, #0x0                   	// #0
  40a7b4:	bl	404050 <error@plt>
  40a7b8:	bl	427120 <wcrtomb@plt+0x22500>
  40a7bc:	tst	w0, #0xff
  40a7c0:	b.ne	40a810 <wcrtomb@plt+0x5bf0>  // b.any
  40a7c4:	ldr	x0, [x19, #952]
  40a7c8:	cbz	x0, 40a7d0 <wcrtomb@plt+0x5bb0>
  40a7cc:	blr	x0
  40a7d0:	mov	w2, #0x5                   	// #5
  40a7d4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a7d8:	mov	x0, #0x0                   	// #0
  40a7dc:	add	x1, x1, #0x888
  40a7e0:	bl	4049c0 <dcgettext@plt>
  40a7e4:	mov	x2, x0
  40a7e8:	mov	w1, #0x0                   	// #0
  40a7ec:	mov	w0, #0x0                   	// #0
  40a7f0:	bl	404050 <error@plt>
  40a7f4:	bl	415cd8 <wcrtomb@plt+0x110b8>
  40a7f8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40a7fc:	ldr	x0, [x0, #1904]
  40a800:	cbnz	x0, 40a508 <wcrtomb@plt+0x58e8>
  40a804:	bl	4098f8 <wcrtomb@plt+0x4cd8>
  40a808:	b	40a508 <wcrtomb@plt+0x58e8>
  40a80c:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  40a810:	ldr	x0, [x19, #952]
  40a814:	cbz	x0, 40a81c <wcrtomb@plt+0x5bfc>
  40a818:	blr	x0
  40a81c:	mov	w2, #0x5                   	// #5
  40a820:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40a824:	mov	x0, #0x0                   	// #0
  40a828:	add	x1, x1, #0x858
  40a82c:	bl	4049c0 <dcgettext@plt>
  40a830:	mov	x2, x0
  40a834:	mov	w1, #0x0                   	// #0
  40a838:	mov	w0, #0x0                   	// #0
  40a83c:	bl	404050 <error@plt>
  40a840:	b	40a7c4 <wcrtomb@plt+0x5ba4>
  40a844:	mov	w0, w3
  40a848:	mov	w2, #0x0                   	// #0
  40a84c:	mov	x1, #0x0                   	// #0
  40a850:	bl	4041d0 <lseek@plt>
  40a854:	cmp	x0, #0x0
  40a858:	cset	w0, ne  // ne = any
  40a85c:	cbz	w0, 40a5a0 <wcrtomb@plt+0x5980>
  40a860:	b	40a8b8 <wcrtomb@plt+0x5c98>
  40a864:	mov	w0, #0x3fffffff            	// #1073741823
  40a868:	cmp	w3, w0
  40a86c:	b.le	40a8a0 <wcrtomb@plt+0x5c80>
  40a870:	mov	w1, #0x6d01                	// #27905
  40a874:	mov	w0, #0xc0000000            	// #-1073741824
  40a878:	mov	x2, x26
  40a87c:	add	w0, w3, w0
  40a880:	movk	w1, #0x4008, lsl #16
  40a884:	bl	42b320 <wcrtomb@plt+0x26700>
  40a888:	tbz	w0, #31, 40a5a0 <wcrtomb@plt+0x5980>
  40a88c:	ldr	w3, [x19, #920]
  40a890:	mov	w0, #0x3fffffff            	// #1073741823
  40a894:	cmp	w3, w0
  40a898:	b.le	40a844 <wcrtomb@plt+0x5c24>
  40a89c:	b	40a580 <wcrtomb@plt+0x5960>
  40a8a0:	mov	x1, #0x6d01                	// #27905
  40a8a4:	mov	w0, w3
  40a8a8:	mov	x2, x26
  40a8ac:	movk	x1, #0x4008, lsl #16
  40a8b0:	bl	404bd0 <ioctl@plt>
  40a8b4:	b	40a888 <wcrtomb@plt+0x5c68>
  40a8b8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40a8bc:	ldr	x0, [x0, #632]
  40a8c0:	ldr	x0, [x0]
  40a8c4:	bl	42a130 <wcrtomb@plt+0x25510>
  40a8c8:	ldp	x19, x20, [sp, #16]
  40a8cc:	ldp	x25, x26, [sp, #64]
  40a8d0:	ldp	x29, x30, [sp], #128
  40a8d4:	ret
  40a8d8:	ldp	x2, x0, [x0]
  40a8dc:	eor	x2, x2, x0
  40a8e0:	udiv	x0, x2, x1
  40a8e4:	msub	x0, x0, x1, x2
  40a8e8:	ret
  40a8ec:	nop
  40a8f0:	ldp	x2, x3, [x0]
  40a8f4:	ldp	x4, x1, [x1]
  40a8f8:	eor	x0, x2, x4
  40a8fc:	eor	x1, x3, x1
  40a900:	orr	x0, x0, x1
  40a904:	cmp	x0, #0x0
  40a908:	cset	w0, eq  // eq = none
  40a90c:	ret
  40a910:	stp	x29, x30, [sp, #-224]!
  40a914:	mov	x29, sp
  40a918:	stp	x27, x28, [sp, #80]
  40a91c:	adrp	x27, 483000 <argp_program_version_hook@@Base+0x290>
  40a920:	ldr	w7, [x27, #760]
  40a924:	stp	x19, x20, [sp, #16]
  40a928:	mov	x19, x1
  40a92c:	and	w7, w7, #0xfffffffb
  40a930:	stp	x21, x22, [sp, #32]
  40a934:	mov	w21, w0
  40a938:	mov	x22, x4
  40a93c:	stp	x23, x24, [sp, #48]
  40a940:	mov	x24, x3
  40a944:	stp	x25, x26, [sp, #64]
  40a948:	mov	x26, x5
  40a94c:	mov	x25, x6
  40a950:	str	x2, [sp, #96]
  40a954:	cbnz	w0, 40aad0 <wcrtomb@plt+0x5eb0>
  40a958:	add	x0, x5, x5, lsl #1
  40a95c:	sub	x0, x0, #0x3
  40a960:	cmp	x0, #0x3f
  40a964:	b.hi	40abec <wcrtomb@plt+0x5fcc>  // b.pmore
  40a968:	add	w23, w5, w5, lsl #1
  40a96c:	mov	x28, #0x1                   	// #1
  40a970:	sub	w23, w23, #0x3
  40a974:	lsl	x23, x28, x23
  40a978:	sub	x23, x23, #0x1
  40a97c:	cmp	x23, x1
  40a980:	b.cs	40abec <wcrtomb@plt+0x5fcc>  // b.hs, b.nlast
  40a984:	cmp	w7, #0x2
  40a988:	b.ne	40ac74 <wcrtomb@plt+0x6054>  // b.any
  40a98c:	sub	x20, x5, #0x1
  40a990:	lsl	x0, x20, #3
  40a994:	cmp	x0, #0x3f
  40a998:	b.hi	40ac30 <wcrtomb@plt+0x6010>  // b.pmore
  40a99c:	lsl	w0, w20, #3
  40a9a0:	lsl	x28, x28, x0
  40a9a4:	sub	x23, x28, #0x1
  40a9a8:	cmp	x1, x23
  40a9ac:	b.ls	40ac30 <wcrtomb@plt+0x6010>  // b.plast
  40a9b0:	add	x1, sp, #0x80
  40a9b4:	mov	x0, x23
  40a9b8:	bl	4398d8 <argp_parse@@Base+0x59f0>
  40a9bc:	mov	x20, x0
  40a9c0:	cmn	x23, #0x1
  40a9c4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  40a9c8:	csel	x28, x28, x0, ne  // ne = any
  40a9cc:	mov	x0, x28
  40a9d0:	add	x1, sp, #0xb1
  40a9d4:	bl	4398d8 <argp_parse@@Base+0x59f0>
  40a9d8:	sub	x28, x0, #0x1
  40a9dc:	mov	w1, #0x2d                  	// #45
  40a9e0:	sturb	w1, [x0, #-1]
  40a9e4:	cbnz	w21, 40ab60 <wcrtomb@plt+0x5f40>
  40a9e8:	mov	x0, x19
  40a9ec:	add	x1, sp, #0x98
  40a9f0:	bl	4398d8 <argp_parse@@Base+0x59f0>
  40a9f4:	mov	x19, x0
  40a9f8:	cbz	x24, 40ab7c <wcrtomb@plt+0x5f5c>
  40a9fc:	add	x0, sp, #0x7c
  40aa00:	blr	x24
  40aa04:	ldr	w1, [x27, #760]
  40aa08:	and	x23, x0, x23
  40aa0c:	ldr	w2, [sp, #124]
  40aa10:	cmp	w1, #0x6
  40aa14:	add	x1, sp, #0xc9
  40aa18:	cset	w0, eq  // eq = none
  40aa1c:	ands	w0, w0, w2
  40aa20:	str	w0, [sp, #124]
  40aa24:	cneg	x23, x23, ne  // ne = any
  40aa28:	mov	x0, x23
  40aa2c:	bl	4398d8 <argp_parse@@Base+0x59f0>
  40aa30:	mov	x21, x0
  40aa34:	ldr	w1, [sp, #124]
  40aa38:	cbz	w1, 40aa48 <wcrtomb@plt+0x5e28>
  40aa3c:	mov	w0, #0x2d                  	// #45
  40aa40:	sub	x21, x21, #0x1
  40aa44:	strb	w0, [x21]
  40aa48:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40aa4c:	ldr	x0, [x0, #952]
  40aa50:	cbz	x0, 40aa58 <wcrtomb@plt+0x5e38>
  40aa54:	blr	x0
  40aa58:	mov	w2, #0x5                   	// #5
  40aa5c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40aa60:	mov	x0, #0x0                   	// #0
  40aa64:	add	x1, x1, #0x958
  40aa68:	bl	4049c0 <dcgettext@plt>
  40aa6c:	mov	x2, x0
  40aa70:	mov	x7, x21
  40aa74:	mov	x6, x20
  40aa78:	mov	x5, x28
  40aa7c:	mov	x4, x25
  40aa80:	mov	x3, x19
  40aa84:	mov	w1, #0x0                   	// #0
  40aa88:	mov	w0, #0x0                   	// #0
  40aa8c:	bl	404050 <error@plt>
  40aa90:	ldr	w0, [sp, #124]
  40aa94:	mov	x6, x25
  40aa98:	ldr	x2, [sp, #96]
  40aa9c:	mov	x5, x26
  40aaa0:	mov	x4, x22
  40aaa4:	mov	x1, x23
  40aaa8:	mov	x3, #0x0                   	// #0
  40aaac:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40aab0:	and	w0, w0, #0xff
  40aab4:	ldp	x19, x20, [sp, #16]
  40aab8:	ldp	x21, x22, [sp, #32]
  40aabc:	ldp	x23, x24, [sp, #48]
  40aac0:	ldp	x25, x26, [sp, #64]
  40aac4:	ldp	x27, x28, [sp, #80]
  40aac8:	ldp	x29, x30, [sp], #224
  40aacc:	ret
  40aad0:	cmp	w7, #0x2
  40aad4:	b.ne	40ab30 <wcrtomb@plt+0x5f10>  // b.any
  40aad8:	sub	x20, x26, #0x1
  40aadc:	lsl	x0, x20, #3
  40aae0:	cmp	x0, #0x3f
  40aae4:	b.hi	40ac58 <wcrtomb@plt+0x6038>  // b.pmore
  40aae8:	lsl	w28, w20, #3
  40aaec:	mov	x1, #0x1                   	// #1
  40aaf0:	mvn	x0, x19
  40aaf4:	lsl	x28, x1, x28
  40aaf8:	sub	x23, x28, #0x1
  40aafc:	cmp	x23, x0
  40ab00:	b.cs	40ac58 <wcrtomb@plt+0x6038>  // b.hs, b.nlast
  40ab04:	ldr	x2, [sp, #96]
  40ab08:	add	x0, x26, x26, lsl #1
  40ab0c:	sub	x0, x0, #0x3
  40ab10:	lsl	x3, x2, #3
  40ab14:	cmp	x0, x2, lsl #3
  40ab18:	b.cs	40ac94 <wcrtomb@plt+0x6074>  // b.hs, b.nlast
  40ab1c:	add	x1, sp, #0x80
  40ab20:	mov	x0, x23
  40ab24:	bl	4398d8 <argp_parse@@Base+0x59f0>
  40ab28:	mov	x20, x0
  40ab2c:	b	40a9cc <wcrtomb@plt+0x5dac>
  40ab30:	add	x0, x26, x26, lsl #1
  40ab34:	sub	x0, x0, #0x3
  40ab38:	cmp	x0, #0x3f
  40ab3c:	b.ls	40ac60 <wcrtomb@plt+0x6040>  // b.plast
  40ab40:	add	x1, sp, #0x80
  40ab44:	mov	x0, #0xffffffffffffffff    	// #-1
  40ab48:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x19e10>
  40ab4c:	bl	4398d8 <argp_parse@@Base+0x59f0>
  40ab50:	add	x28, x28, #0x6e0
  40ab54:	mov	x20, x0
  40ab58:	mov	x24, #0x0                   	// #0
  40ab5c:	mov	x23, #0xffffffffffffffff    	// #-1
  40ab60:	neg	x0, x19
  40ab64:	add	x1, sp, #0x99
  40ab68:	bl	4398d8 <argp_parse@@Base+0x59f0>
  40ab6c:	sub	x19, x0, #0x1
  40ab70:	mov	w1, #0x2d                  	// #45
  40ab74:	sturb	w1, [x0, #-1]
  40ab78:	cbnz	x24, 40a9fc <wcrtomb@plt+0x5ddc>
  40ab7c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40ab80:	ldr	x0, [x0, #952]
  40ab84:	cbz	x0, 40ab8c <wcrtomb@plt+0x5f6c>
  40ab88:	blr	x0
  40ab8c:	mov	w2, #0x5                   	// #5
  40ab90:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40ab94:	mov	x0, #0x0                   	// #0
  40ab98:	add	x1, x1, #0x990
  40ab9c:	bl	4049c0 <dcgettext@plt>
  40aba0:	mov	x2, x0
  40aba4:	mov	x6, x20
  40aba8:	mov	x5, x28
  40abac:	mov	x4, x25
  40abb0:	mov	x3, x19
  40abb4:	mov	w1, #0x0                   	// #0
  40abb8:	mov	w0, #0x0                   	// #0
  40abbc:	bl	404050 <error@plt>
  40abc0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40abc4:	mov	w2, #0x2                   	// #2
  40abc8:	mov	w0, #0x0                   	// #0
  40abcc:	str	w2, [x1, #3400]
  40abd0:	ldp	x19, x20, [sp, #16]
  40abd4:	ldp	x21, x22, [sp, #32]
  40abd8:	ldp	x23, x24, [sp, #48]
  40abdc:	ldp	x25, x26, [sp, #64]
  40abe0:	ldp	x27, x28, [sp, #80]
  40abe4:	ldp	x29, x30, [sp], #224
  40abe8:	ret
  40abec:	sub	x0, x26, #0x1
  40abf0:	strb	wzr, [x22, x0]
  40abf4:	nop
  40abf8:	sub	x0, x0, #0x1
  40abfc:	and	w1, w19, #0x7
  40ac00:	add	w1, w1, #0x30
  40ac04:	lsr	x19, x19, #3
  40ac08:	strb	w1, [x22, x0]
  40ac0c:	cbnz	x0, 40abf8 <wcrtomb@plt+0x5fd8>
  40ac10:	mov	w0, #0x1                   	// #1
  40ac14:	ldp	x19, x20, [sp, #16]
  40ac18:	ldp	x21, x22, [sp, #32]
  40ac1c:	ldp	x23, x24, [sp, #48]
  40ac20:	ldp	x25, x26, [sp, #64]
  40ac24:	ldp	x27, x28, [sp, #80]
  40ac28:	ldp	x29, x30, [sp], #224
  40ac2c:	ret
  40ac30:	mov	w0, #0x80                  	// #128
  40ac34:	neg	w21, w21
  40ac38:	strb	w0, [x22], #1
  40ac3c:	lsl	x21, x21, #56
  40ac40:	sub	x20, x20, #0x1
  40ac44:	strb	w19, [x22, x20]
  40ac48:	orr	x19, x21, x19, lsr #8
  40ac4c:	cbnz	x20, 40ac40 <wcrtomb@plt+0x6020>
  40ac50:	mov	w0, #0x1                   	// #1
  40ac54:	b	40ac14 <wcrtomb@plt+0x5ff4>
  40ac58:	mov	w0, #0xff                  	// #255
  40ac5c:	b	40ac34 <wcrtomb@plt+0x6014>
  40ac60:	add	w0, w26, w26, lsl #1
  40ac64:	mov	x23, #0x1                   	// #1
  40ac68:	sub	w0, w0, #0x3
  40ac6c:	lsl	x23, x23, x0
  40ac70:	sub	x23, x23, #0x1
  40ac74:	add	x1, sp, #0x80
  40ac78:	mov	x0, x23
  40ac7c:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x19e10>
  40ac80:	bl	4398d8 <argp_parse@@Base+0x59f0>
  40ac84:	add	x28, x28, #0x6e0
  40ac88:	mov	x20, x0
  40ac8c:	mov	x24, #0x0                   	// #0
  40ac90:	b	40a9e4 <wcrtomb@plt+0x5dc4>
  40ac94:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40ac98:	ldr	w2, [x0, #1920]
  40ac9c:	cbnz	w2, 40ace8 <wcrtomb@plt+0x60c8>
  40aca0:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40aca4:	str	w1, [x0, #1920]
  40aca8:	ldr	x0, [x2, #952]
  40acac:	cbz	x0, 40acbc <wcrtomb@plt+0x609c>
  40acb0:	str	x3, [sp, #104]
  40acb4:	blr	x0
  40acb8:	ldr	x3, [sp, #104]
  40acbc:	mov	w2, #0x5                   	// #5
  40acc0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40acc4:	mov	x0, #0x0                   	// #0
  40acc8:	add	x1, x1, #0x930
  40accc:	str	x3, [sp, #104]
  40acd0:	bl	4049c0 <dcgettext@plt>
  40acd4:	mov	x2, x0
  40acd8:	mov	w1, #0x0                   	// #0
  40acdc:	mov	w0, #0x0                   	// #0
  40ace0:	bl	404050 <error@plt>
  40ace4:	ldr	x3, [sp, #104]
  40ace8:	cmp	x3, #0x40
  40acec:	ldr	w0, [sp, #96]
  40acf0:	strb	wzr, [x22, x20]
  40acf4:	lsl	w26, w0, #3
  40acf8:	mov	x0, #0xffffffffffffffff    	// #-1
  40acfc:	lsl	x0, x0, x26
  40ad00:	bic	x0, x19, x0
  40ad04:	csel	x19, x0, x19, ne  // ne = any
  40ad08:	sub	x20, x20, #0x1
  40ad0c:	and	w0, w19, #0x7
  40ad10:	add	w0, w0, #0x30
  40ad14:	lsr	x19, x19, #3
  40ad18:	strb	w0, [x22, x20]
  40ad1c:	cbnz	x20, 40ad08 <wcrtomb@plt+0x60e8>
  40ad20:	mov	w0, #0x1                   	// #1
  40ad24:	b	40ac14 <wcrtomb@plt+0x5ff4>
  40ad28:	stp	x29, x30, [sp, #-32]!
  40ad2c:	mov	x29, sp
  40ad30:	stp	x19, x20, [sp, #16]
  40ad34:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40ad38:	add	x19, x19, #0x780
  40ad3c:	mov	x20, x0
  40ad40:	ldr	w1, [x19, #4]
  40ad44:	mov	w0, w1
  40ad48:	cbz	w1, 40ad5c <wcrtomb@plt+0x613c>
  40ad4c:	str	wzr, [x20]
  40ad50:	ldp	x19, x20, [sp, #16]
  40ad54:	ldp	x29, x30, [sp], #32
  40ad58:	ret
  40ad5c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40ad60:	add	x1, x19, #0x4
  40ad64:	add	x0, x0, #0x9b0
  40ad68:	bl	41da60 <wcrtomb@plt+0x18e40>
  40ad6c:	cbnz	w0, 40ad8c <wcrtomb@plt+0x616c>
  40ad70:	mov	w1, #0xfffffffe            	// #-2
  40ad74:	str	w1, [x19, #4]
  40ad78:	str	wzr, [x20]
  40ad7c:	mov	x0, #0xfffffffe            	// #4294967294
  40ad80:	ldp	x19, x20, [sp, #16]
  40ad84:	ldp	x29, x30, [sp], #32
  40ad88:	ret
  40ad8c:	ldr	w0, [x19, #4]
  40ad90:	str	wzr, [x20]
  40ad94:	ldp	x19, x20, [sp, #16]
  40ad98:	ldp	x29, x30, [sp], #32
  40ad9c:	ret
  40ada0:	stp	x29, x30, [sp, #-32]!
  40ada4:	mov	x29, sp
  40ada8:	stp	x19, x20, [sp, #16]
  40adac:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40adb0:	add	x19, x19, #0x780
  40adb4:	mov	x20, x0
  40adb8:	ldr	w1, [x19, #8]
  40adbc:	mov	w0, w1
  40adc0:	cbz	w1, 40add4 <wcrtomb@plt+0x61b4>
  40adc4:	str	wzr, [x20]
  40adc8:	ldp	x19, x20, [sp, #16]
  40adcc:	ldp	x29, x30, [sp], #32
  40add0:	ret
  40add4:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40add8:	add	x1, x19, #0x8
  40addc:	add	x0, x0, #0x9b0
  40ade0:	bl	41db28 <wcrtomb@plt+0x18f08>
  40ade4:	cbnz	w0, 40ae04 <wcrtomb@plt+0x61e4>
  40ade8:	mov	w1, #0xfffffffe            	// #-2
  40adec:	str	w1, [x19, #8]
  40adf0:	str	wzr, [x20]
  40adf4:	mov	x0, #0xfffffffe            	// #4294967294
  40adf8:	ldp	x19, x20, [sp, #16]
  40adfc:	ldp	x29, x30, [sp], #32
  40ae00:	ret
  40ae04:	ldr	w0, [x19, #8]
  40ae08:	str	wzr, [x20]
  40ae0c:	ldp	x19, x20, [sp, #16]
  40ae10:	ldp	x29, x30, [sp], #32
  40ae14:	ret
  40ae18:	stp	x29, x30, [sp, #-32]!
  40ae1c:	mov	x29, sp
  40ae20:	stp	x19, x20, [sp, #16]
  40ae24:	mov	x20, x0
  40ae28:	bl	404ad0 <__errno_location@plt>
  40ae2c:	ldr	w0, [x0]
  40ae30:	cmp	w0, #0x18
  40ae34:	cset	w19, eq  // eq = none
  40ae38:	cmp	x20, #0x0
  40ae3c:	csel	w19, w19, wzr, ne  // ne = any
  40ae40:	cbnz	w19, 40ae54 <wcrtomb@plt+0x6234>
  40ae44:	mov	w0, w19
  40ae48:	ldp	x19, x20, [sp, #16]
  40ae4c:	ldp	x29, x30, [sp], #32
  40ae50:	ret
  40ae54:	ldr	x0, [x20, #392]
  40ae58:	cbz	x0, 40aea8 <wcrtomb@plt+0x6288>
  40ae5c:	ldr	x0, [x0, #392]
  40ae60:	cbz	x0, 40aea8 <wcrtomb@plt+0x6288>
  40ae64:	ldr	w2, [x0, #408]
  40ae68:	ldr	x1, [x0, #392]
  40ae6c:	cmp	w2, #0x0
  40ae70:	b.le	40ae98 <wcrtomb@plt+0x6278>
  40ae74:	nop
  40ae78:	cbz	x1, 40aebc <wcrtomb@plt+0x629c>
  40ae7c:	ldr	w2, [x1, #408]
  40ae80:	cmp	w2, #0x0
  40ae84:	b.le	40aebc <wcrtomb@plt+0x629c>
  40ae88:	mov	x0, x1
  40ae8c:	cmp	w2, #0x0
  40ae90:	ldr	x1, [x0, #392]
  40ae94:	b.gt	40ae78 <wcrtomb@plt+0x6258>
  40ae98:	cbz	x1, 40aea8 <wcrtomb@plt+0x6288>
  40ae9c:	ldr	w2, [x1, #408]
  40aea0:	mov	x0, x1
  40aea4:	b	40ae8c <wcrtomb@plt+0x626c>
  40aea8:	mov	w19, #0x0                   	// #0
  40aeac:	mov	w0, w19
  40aeb0:	ldp	x19, x20, [sp, #16]
  40aeb4:	ldp	x29, x30, [sp], #32
  40aeb8:	ret
  40aebc:	bl	425f80 <wcrtomb@plt+0x21360>
  40aec0:	b	40ae44 <wcrtomb@plt+0x6224>
  40aec4:	nop
  40aec8:	stp	x29, x30, [sp, #-48]!
  40aecc:	mov	x29, sp
  40aed0:	stp	x19, x20, [sp, #16]
  40aed4:	ldr	x20, [x0]
  40aed8:	stp	x21, x22, [sp, #32]
  40aedc:	mov	x21, x0
  40aee0:	mov	x0, x20
  40aee4:	bl	403ff0 <strlen@plt>
  40aee8:	mov	x19, x0
  40aeec:	b	40af00 <wcrtomb@plt+0x62e0>
  40aef0:	ldrb	w2, [x20, x1]
  40aef4:	cmp	w2, #0x2f
  40aef8:	b.ne	40af50 <wcrtomb@plt+0x6330>  // b.any
  40aefc:	mov	x19, x1
  40af00:	sub	x1, x19, #0x1
  40af04:	cbnz	x19, 40aef0 <wcrtomb@plt+0x62d0>
  40af08:	mov	x1, x20
  40af0c:	mov	x22, #0x1                   	// #1
  40af10:	ldrb	w0, [x1]
  40af14:	cmp	w0, #0x2f
  40af18:	b.eq	40af30 <wcrtomb@plt+0x6310>  // b.none
  40af1c:	add	x1, x19, #0x2
  40af20:	mov	x0, x20
  40af24:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  40af28:	add	x1, x0, x19
  40af2c:	str	x0, [x21]
  40af30:	mov	w0, #0x2f                  	// #47
  40af34:	strb	w0, [x1]
  40af38:	ldr	x0, [x21]
  40af3c:	strb	wzr, [x0, x22]
  40af40:	ldp	x19, x20, [sp, #16]
  40af44:	ldp	x21, x22, [sp, #32]
  40af48:	ldp	x29, x30, [sp], #48
  40af4c:	ret
  40af50:	add	x1, x20, x19
  40af54:	add	x22, x19, #0x1
  40af58:	b	40af10 <wcrtomb@plt+0x62f0>
  40af5c:	nop
  40af60:	stp	x29, x30, [sp, #-32]!
  40af64:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40af68:	mov	x29, sp
  40af6c:	stp	x19, x20, [sp, #16]
  40af70:	mov	x19, x0
  40af74:	ldr	w0, [x1, #408]
  40af78:	tbz	w0, #5, 40afc0 <wcrtomb@plt+0x63a0>
  40af7c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40af80:	ldr	x0, [x0, #952]
  40af84:	cbz	x0, 40af8c <wcrtomb@plt+0x636c>
  40af88:	blr	x0
  40af8c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40af90:	add	x1, x1, #0x9b8
  40af94:	mov	w2, #0x5                   	// #5
  40af98:	mov	x0, #0x0                   	// #0
  40af9c:	bl	4049c0 <dcgettext@plt>
  40afa0:	mov	x20, x0
  40afa4:	mov	x0, x19
  40afa8:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40afac:	mov	x2, x20
  40afb0:	mov	x3, x0
  40afb4:	mov	w1, #0x0                   	// #0
  40afb8:	mov	w0, #0x0                   	// #0
  40afbc:	bl	404050 <error@plt>
  40afc0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40afc4:	ldrb	w0, [x0, #897]
  40afc8:	cbz	w0, 40afd8 <wcrtomb@plt+0x63b8>
  40afcc:	ldp	x19, x20, [sp, #16]
  40afd0:	ldp	x29, x30, [sp], #32
  40afd4:	ret
  40afd8:	ldp	x19, x20, [sp, #16]
  40afdc:	mov	w0, #0x2                   	// #2
  40afe0:	ldp	x29, x30, [sp], #32
  40afe4:	b	4260d0 <wcrtomb@plt+0x214b0>
  40afe8:	stp	x29, x30, [sp, #-32]!
  40afec:	mov	x29, sp
  40aff0:	stp	x19, x20, [sp, #16]
  40aff4:	mov	x20, x0
  40aff8:	bl	406220 <wcrtomb@plt+0x1600>
  40affc:	mov	w1, #0x0                   	// #0
  40b000:	mov	x19, x0
  40b004:	mov	x2, #0x200                 	// #512
  40b008:	bl	404410 <memset@plt>
  40b00c:	ldr	x0, [x20]
  40b010:	mov	x1, #0x0                   	// #0
  40b014:	nop
  40b018:	ldrb	w2, [x0, x1]
  40b01c:	strb	w2, [x19, x1]
  40b020:	add	x1, x1, #0x1
  40b024:	cmp	x1, #0x64
  40b028:	cbz	w2, 40b030 <wcrtomb@plt+0x6410>
  40b02c:	b.ne	40b018 <wcrtomb@plt+0x63f8>  // b.any
  40b030:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40b034:	ldr	w0, [x0, #760]
  40b038:	cmp	w0, #0x2
  40b03c:	b.ne	40b044 <wcrtomb@plt+0x6424>  // b.any
  40b040:	strb	wzr, [x19, #99]
  40b044:	mov	x0, x19
  40b048:	ldp	x19, x20, [sp, #16]
  40b04c:	ldp	x29, x30, [sp], #32
  40b050:	ret
  40b054:	nop
  40b058:	stp	x29, x30, [sp, #-64]!
  40b05c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40b060:	mov	w1, #0x1                   	// #1
  40b064:	mov	x29, sp
  40b068:	ldrb	w2, [x2, #896]
  40b06c:	stp	x19, x20, [sp, #16]
  40b070:	mov	x20, x0
  40b074:	ldr	x0, [x0]
  40b078:	str	x21, [sp, #32]
  40b07c:	str	xzr, [sp, #56]
  40b080:	bl	42a438 <wcrtomb@plt+0x25818>
  40b084:	mov	x1, x0
  40b088:	add	x0, sp, #0x38
  40b08c:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  40b090:	mov	w1, #0x2                   	// #2
  40b094:	add	x0, sp, #0x38
  40b098:	bl	427110 <wcrtomb@plt+0x224f0>
  40b09c:	ldr	x0, [sp, #56]
  40b0a0:	bl	403ff0 <strlen@plt>
  40b0a4:	add	x0, x0, #0x15
  40b0a8:	bl	440f48 <argp_parse@@Base+0xd060>
  40b0ac:	mov	x19, x0
  40b0b0:	ldp	x4, x3, [x20, #88]
  40b0b4:	add	x0, x0, #0x14
  40b0b8:	ldr	x21, [sp, #56]
  40b0bc:	stp	x4, x3, [x19]
  40b0c0:	ldr	w2, [x20, #108]
  40b0c4:	mov	x1, x21
  40b0c8:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40b0cc:	add	x20, x20, #0x780
  40b0d0:	str	w2, [x19, #16]
  40b0d4:	bl	404910 <strcpy@plt>
  40b0d8:	mov	x0, x21
  40b0dc:	bl	4047b0 <free@plt>
  40b0e0:	ldr	x0, [x20, #16]
  40b0e4:	cbz	x0, 40b118 <wcrtomb@plt+0x64f8>
  40b0e8:	mov	x1, x19
  40b0ec:	bl	438cb8 <argp_parse@@Base+0x4dd0>
  40b0f0:	cbz	x0, 40b13c <wcrtomb@plt+0x651c>
  40b0f4:	cmp	x19, x0
  40b0f8:	b.ne	40b140 <wcrtomb@plt+0x6520>  // b.any
  40b0fc:	ldr	w0, [x19, #16]
  40b100:	ldr	x21, [sp, #32]
  40b104:	sub	w0, w0, #0x1
  40b108:	str	w0, [x19, #16]
  40b10c:	ldp	x19, x20, [sp, #16]
  40b110:	ldp	x29, x30, [sp], #64
  40b114:	ret
  40b118:	adrp	x3, 40a000 <wcrtomb@plt+0x53e0>
  40b11c:	adrp	x2, 40a000 <wcrtomb@plt+0x53e0>
  40b120:	add	x3, x3, #0x8f0
  40b124:	add	x2, x2, #0x8d8
  40b128:	mov	x4, #0x0                   	// #0
  40b12c:	mov	x1, #0x0                   	// #0
  40b130:	bl	438760 <argp_parse@@Base+0x4878>
  40b134:	str	x0, [x20, #16]
  40b138:	cbnz	x0, 40b0e8 <wcrtomb@plt+0x64c8>
  40b13c:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  40b140:	bl	404650 <abort@plt>
  40b144:	nop
  40b148:	sub	sp, sp, #0x230
  40b14c:	stp	x29, x30, [sp]
  40b150:	mov	x29, sp
  40b154:	stp	x21, x22, [sp, #32]
  40b158:	add	x21, x1, #0x158
  40b15c:	and	w22, w0, #0xff
  40b160:	mov	x0, x21
  40b164:	stp	x19, x20, [sp, #16]
  40b168:	mov	x19, x2
  40b16c:	mov	x20, x1
  40b170:	bl	414120 <wcrtomb@plt+0xf500>
  40b174:	mov	x1, x19
  40b178:	add	x0, sp, #0x30
  40b17c:	mov	x2, #0x200                 	// #512
  40b180:	bl	403f70 <memcpy@plt>
  40b184:	cbz	w22, 40b1dc <wcrtomb@plt+0x65bc>
  40b188:	bl	413a78 <wcrtomb@plt+0xee58>
  40b18c:	mov	x19, x0
  40b190:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40b194:	mov	w0, #0x67                  	// #103
  40b198:	ldr	x2, [x1, #656]
  40b19c:	mov	x3, x21
  40b1a0:	mov	x1, x19
  40b1a4:	bl	414210 <wcrtomb@plt+0xf5f0>
  40b1a8:	mov	x0, x19
  40b1ac:	bl	4047b0 <free@plt>
  40b1b0:	bl	406220 <wcrtomb@plt+0x1600>
  40b1b4:	mov	x19, x0
  40b1b8:	add	x1, sp, #0x30
  40b1bc:	mov	x2, #0x200                 	// #512
  40b1c0:	bl	403f70 <memcpy@plt>
  40b1c4:	mov	x0, x19
  40b1c8:	ldp	x29, x30, [sp]
  40b1cc:	ldp	x19, x20, [sp, #16]
  40b1d0:	ldp	x21, x22, [sp, #32]
  40b1d4:	add	sp, sp, #0x230
  40b1d8:	ret
  40b1dc:	mov	x0, x20
  40b1e0:	bl	413a18 <wcrtomb@plt+0xedf8>
  40b1e4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40b1e8:	mov	x19, x0
  40b1ec:	ldr	w0, [x1]
  40b1f0:	cbz	w0, 40b204 <wcrtomb@plt+0x65e4>
  40b1f4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40b1f8:	mov	w0, #0x78                  	// #120
  40b1fc:	ldr	x2, [x1, #736]
  40b200:	b	40b19c <wcrtomb@plt+0x657c>
  40b204:	mov	w0, #0x78                  	// #120
  40b208:	ldr	x2, [x20, #176]
  40b20c:	b	40b19c <wcrtomb@plt+0x657c>
  40b210:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40b214:	mov	x4, x1
  40b218:	mov	w3, w0
  40b21c:	and	x0, x0, #0xfff
  40b220:	ldr	w2, [x2, #760]
  40b224:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b228:	mov	x5, #0x8                   	// #8
  40b22c:	add	x6, x6, #0x9e0
  40b230:	sub	w1, w2, #0x3
  40b234:	cmp	w1, #0x1
  40b238:	ccmp	w2, #0x6, #0x4, hi  // hi = pmore
  40b23c:	mov	x2, #0x4                   	// #4
  40b240:	csel	x1, x0, x3, eq  // eq = none
  40b244:	mov	x3, #0x0                   	// #0
  40b248:	mov	w0, #0x0                   	// #0
  40b24c:	b	40a910 <wcrtomb@plt+0x5cf0>
  40b250:	stp	x29, x30, [sp, #-64]!
  40b254:	mov	x29, sp
  40b258:	stp	x19, x20, [sp, #16]
  40b25c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40b260:	add	x20, x20, #0x780
  40b264:	stp	x21, x22, [sp, #32]
  40b268:	mov	x22, x2
  40b26c:	mov	x21, x0
  40b270:	mov	x0, #0x28                  	// #40
  40b274:	str	x23, [sp, #48]
  40b278:	mov	w23, w1
  40b27c:	bl	440f48 <argp_parse@@Base+0xd060>
  40b280:	ldr	x1, [x20, #24]
  40b284:	mov	x19, x0
  40b288:	mov	x0, x21
  40b28c:	str	x21, [x19]
  40b290:	str	w23, [x19, #16]
  40b294:	stp	x22, x1, [x19, #24]
  40b298:	bl	403ff0 <strlen@plt>
  40b29c:	str	x0, [x19, #8]
  40b2a0:	str	x19, [x20, #24]
  40b2a4:	ldp	x19, x20, [sp, #16]
  40b2a8:	ldp	x21, x22, [sp, #32]
  40b2ac:	ldr	x23, [sp, #48]
  40b2b0:	ldp	x29, x30, [sp], #64
  40b2b4:	ret
  40b2b8:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  40b2bc:	ldr	w3, [x3, #588]
  40b2c0:	cbnz	w3, 40b2c8 <wcrtomb@plt+0x66a8>
  40b2c4:	ret
  40b2c8:	stp	x29, x30, [sp, #-48]!
  40b2cc:	mov	x29, sp
  40b2d0:	stp	x21, x22, [sp, #32]
  40b2d4:	mov	x21, x0
  40b2d8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40b2dc:	ldr	w0, [x0, #408]
  40b2e0:	tbz	w0, #2, 40b358 <wcrtomb@plt+0x6738>
  40b2e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40b2e8:	stp	x19, x20, [sp, #16]
  40b2ec:	mov	x20, x1
  40b2f0:	ldr	x0, [x0, #952]
  40b2f4:	mov	x19, x2
  40b2f8:	cbz	x0, 40b300 <wcrtomb@plt+0x66e0>
  40b2fc:	blr	x0
  40b300:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b304:	add	x1, x1, #0x9e8
  40b308:	mov	w2, #0x5                   	// #5
  40b30c:	mov	x0, #0x0                   	// #0
  40b310:	bl	4049c0 <dcgettext@plt>
  40b314:	mov	x22, x0
  40b318:	mov	x0, x21
  40b31c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40b320:	mov	x1, x20
  40b324:	mov	x21, x0
  40b328:	mov	w0, #0x1                   	// #1
  40b32c:	bl	43ff08 <argp_parse@@Base+0xc020>
  40b330:	mov	x5, x19
  40b334:	mov	x3, x21
  40b338:	mov	x2, x22
  40b33c:	mov	x4, x0
  40b340:	ldp	x19, x20, [sp, #16]
  40b344:	mov	w1, #0x0                   	// #0
  40b348:	ldp	x21, x22, [sp, #32]
  40b34c:	mov	w0, #0x0                   	// #0
  40b350:	ldp	x29, x30, [sp], #48
  40b354:	b	404050 <error@plt>
  40b358:	ldp	x21, x22, [sp, #32]
  40b35c:	ldp	x29, x30, [sp], #48
  40b360:	ret
  40b364:	nop
  40b368:	stp	x29, x30, [sp, #-64]!
  40b36c:	mov	x2, #0x2b                  	// #43
  40b370:	mov	x29, sp
  40b374:	add	x1, sp, #0x10
  40b378:	bl	404950 <read@plt>
  40b37c:	cmp	x0, #0x2b
  40b380:	b.eq	40b390 <wcrtomb@plt+0x6770>  // b.none
  40b384:	mov	w0, #0x0                   	// #0
  40b388:	ldp	x29, x30, [sp], #64
  40b38c:	ret
  40b390:	mov	x2, x0
  40b394:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b398:	add	x0, sp, #0x10
  40b39c:	add	x1, x1, #0xa18
  40b3a0:	bl	4046d0 <memcmp@plt>
  40b3a4:	cmp	w0, #0x0
  40b3a8:	cset	w0, eq  // eq = none
  40b3ac:	ldp	x29, x30, [sp], #64
  40b3b0:	ret
  40b3b4:	nop
  40b3b8:	mov	x4, x1
  40b3bc:	mov	x5, x2
  40b3c0:	mov	x1, x0
  40b3c4:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b3c8:	lsr	x0, x0, #63
  40b3cc:	add	x6, x6, #0xa48
  40b3d0:	mov	x3, #0x0                   	// #0
  40b3d4:	mov	x2, #0x8                   	// #8
  40b3d8:	b	40a910 <wcrtomb@plt+0x5cf0>
  40b3dc:	nop
  40b3e0:	mov	x4, x1
  40b3e4:	mov	x5, x2
  40b3e8:	mov	x1, x0
  40b3ec:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b3f0:	lsr	x0, x0, #63
  40b3f4:	add	x6, x6, #0xa50
  40b3f8:	mov	x3, #0x0                   	// #0
  40b3fc:	mov	x2, #0x8                   	// #8
  40b400:	b	40a910 <wcrtomb@plt+0x5cf0>
  40b404:	nop
  40b408:	stp	x29, x30, [sp, #-32]!
  40b40c:	mov	x29, sp
  40b410:	str	x19, [sp, #16]
  40b414:	bl	406220 <wcrtomb@plt+0x1600>
  40b418:	mov	x2, #0x200                 	// #512
  40b41c:	mov	w1, #0x0                   	// #0
  40b420:	mov	x19, x0
  40b424:	bl	404410 <memset@plt>
  40b428:	mov	x0, x19
  40b42c:	bl	405b90 <wcrtomb@plt+0xf70>
  40b430:	bl	406220 <wcrtomb@plt+0x1600>
  40b434:	mov	x19, x0
  40b438:	bl	405bd8 <wcrtomb@plt+0xfb8>
  40b43c:	mov	x2, x0
  40b440:	mov	w1, #0x0                   	// #0
  40b444:	mov	x0, x19
  40b448:	bl	404410 <memset@plt>
  40b44c:	mov	x0, x19
  40b450:	ldr	x19, [sp, #16]
  40b454:	ldp	x29, x30, [sp], #32
  40b458:	b	405b90 <wcrtomb@plt+0xf70>
  40b45c:	nop
  40b460:	stp	x29, x30, [sp, #-48]!
  40b464:	mov	x29, sp
  40b468:	stp	x19, x20, [sp, #16]
  40b46c:	mov	x20, x0
  40b470:	stp	x21, x22, [sp, #32]
  40b474:	mov	x22, x1
  40b478:	mov	x21, x2
  40b47c:	bl	406220 <wcrtomb@plt+0x1600>
  40b480:	mov	x19, x0
  40b484:	mov	x2, #0x200                 	// #512
  40b488:	mov	w1, #0x0                   	// #0
  40b48c:	bl	404410 <memset@plt>
  40b490:	mov	x3, #0x0                   	// #0
  40b494:	nop
  40b498:	ldrb	w4, [x20, x3]
  40b49c:	strb	w4, [x19, x3]
  40b4a0:	add	x3, x3, #0x1
  40b4a4:	cmp	x3, #0x64
  40b4a8:	cbz	w4, 40b4b0 <wcrtomb@plt+0x6890>
  40b4ac:	b.ne	40b498 <wcrtomb@plt+0x6878>  // b.any
  40b4b0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40b4b4:	ldr	w0, [x0, #760]
  40b4b8:	cmp	w0, #0x2
  40b4bc:	b.ne	40b4c4 <wcrtomb@plt+0x68a4>  // b.any
  40b4c0:	strb	wzr, [x19, #99]
  40b4c4:	mov	x1, x22
  40b4c8:	add	x4, x19, #0x7c
  40b4cc:	lsr	x0, x22, #63
  40b4d0:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b4d4:	mov	x5, #0xc                   	// #12
  40b4d8:	add	x6, x6, #0xa48
  40b4dc:	mov	x3, #0x0                   	// #0
  40b4e0:	mov	x2, #0x8                   	// #8
  40b4e4:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40b4e8:	mov	x1, #0x0                   	// #0
  40b4ec:	tbnz	x21, #63, 40b4fc <wcrtomb@plt+0x68dc>
  40b4f0:	mov	x1, #0x1ffffffff           	// #8589934591
  40b4f4:	cmp	x21, x1
  40b4f8:	csel	x1, x21, x1, ls  // ls = plast
  40b4fc:	add	x4, x19, #0x88
  40b500:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b504:	add	x6, x6, #0xa50
  40b508:	mov	x5, #0xc                   	// #12
  40b50c:	mov	x3, #0x0                   	// #0
  40b510:	mov	x2, #0x8                   	// #8
  40b514:	mov	w0, #0x0                   	// #0
  40b518:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40b51c:	add	x1, x19, #0x64
  40b520:	mov	w0, #0x81a4                	// #33188
  40b524:	bl	40b210 <wcrtomb@plt+0x65f0>
  40b528:	add	x4, x19, #0x6c
  40b52c:	mov	x5, #0x8                   	// #8
  40b530:	mov	x2, #0x4                   	// #4
  40b534:	mov	x1, #0x0                   	// #0
  40b538:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b53c:	adrp	x3, 40a000 <wcrtomb@plt+0x53e0>
  40b540:	add	x6, x6, #0xa58
  40b544:	add	x3, x3, #0xd28
  40b548:	mov	w0, #0x0                   	// #0
  40b54c:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40b550:	add	x4, x19, #0x74
  40b554:	mov	x5, #0x8                   	// #8
  40b558:	mov	x2, #0x4                   	// #4
  40b55c:	mov	x1, #0x0                   	// #0
  40b560:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b564:	adrp	x3, 40a000 <wcrtomb@plt+0x53e0>
  40b568:	add	x6, x6, #0xa60
  40b56c:	add	x3, x3, #0xda0
  40b570:	mov	w0, #0x0                   	// #0
  40b574:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40b578:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  40b57c:	add	x1, x1, #0xe18
  40b580:	add	x2, x19, #0x101
  40b584:	add	x3, x19, #0x107
  40b588:	mov	w4, #0x3030                	// #12336
  40b58c:	mov	x0, x19
  40b590:	ldr	w5, [x1]
  40b594:	ldrh	w1, [x1, #4]
  40b598:	str	w5, [x2]
  40b59c:	strh	w1, [x2, #4]
  40b5a0:	strh	w4, [x3]
  40b5a4:	ldp	x19, x20, [sp, #16]
  40b5a8:	ldp	x21, x22, [sp, #32]
  40b5ac:	ldp	x29, x30, [sp], #48
  40b5b0:	ret
  40b5b4:	nop
  40b5b8:	ldr	x4, [x1, #360]
  40b5bc:	and	w5, w0, #0xff
  40b5c0:	mov	x0, x2
  40b5c4:	cbz	x4, 40b5cc <wcrtomb@plt+0x69ac>
  40b5c8:	ret
  40b5cc:	ldr	x3, [x1, #344]
  40b5d0:	cbz	x3, 40b5c8 <wcrtomb@plt+0x69a8>
  40b5d4:	mov	w0, w5
  40b5d8:	b	40b148 <wcrtomb@plt+0x6528>
  40b5dc:	nop
  40b5e0:	stp	x29, x30, [sp, #-32]!
  40b5e4:	add	x4, x0, #0x94
  40b5e8:	mov	x2, x0
  40b5ec:	mov	x29, sp
  40b5f0:	add	x5, x0, #0x200
  40b5f4:	str	x19, [sp, #16]
  40b5f8:	mov	x19, x0
  40b5fc:	mov	x3, #0x2020202020202020    	// #2314885530818453536
  40b600:	mov	w1, #0x0                   	// #0
  40b604:	stur	x3, [x0, #148]
  40b608:	ldrb	w3, [x2], #1
  40b60c:	add	w1, w1, w3
  40b610:	cmp	x5, x2
  40b614:	b.ne	40b608 <wcrtomb@plt+0x69e8>  // b.any
  40b618:	sxtw	x1, w1
  40b61c:	mov	x5, #0x7                   	// #7
  40b620:	mov	x3, #0x0                   	// #0
  40b624:	mov	x2, #0x8                   	// #8
  40b628:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b62c:	mov	w0, #0x0                   	// #0
  40b630:	add	x6, x6, #0xa68
  40b634:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40b638:	mov	x0, x19
  40b63c:	ldr	x19, [sp, #16]
  40b640:	ldp	x29, x30, [sp], #32
  40b644:	b	405b90 <wcrtomb@plt+0xf70>
  40b648:	stp	x29, x30, [sp, #-32]!
  40b64c:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  40b650:	mov	x29, sp
  40b654:	ldr	w3, [x3, #588]
  40b658:	stp	x19, x20, [sp, #16]
  40b65c:	mov	x20, x0
  40b660:	mov	x19, x1
  40b664:	cbz	w3, 40b688 <wcrtomb@plt+0x6a68>
  40b668:	ldrb	w4, [x1, #156]
  40b66c:	mov	w5, #0x67                  	// #103
  40b670:	cmp	w4, #0x78
  40b674:	sub	w3, w4, #0x4b
  40b678:	ccmp	w4, w5, #0x4, ne  // ne = any
  40b67c:	and	w3, w3, #0xff
  40b680:	ccmp	w3, #0x1, #0x0, ne  // ne = any
  40b684:	b.hi	40b6cc <wcrtomb@plt+0x6aac>  // b.pmore
  40b688:	ldr	x0, [x20, #360]
  40b68c:	cbz	x0, 40b6a0 <wcrtomb@plt+0x6a80>
  40b690:	mov	x0, x19
  40b694:	ldp	x19, x20, [sp, #16]
  40b698:	ldp	x29, x30, [sp], #32
  40b69c:	b	40b5e0 <wcrtomb@plt+0x69c0>
  40b6a0:	ldr	x0, [x20, #344]
  40b6a4:	cbz	x0, 40b690 <wcrtomb@plt+0x6a70>
  40b6a8:	mov	x2, x19
  40b6ac:	mov	x1, x20
  40b6b0:	mov	w0, #0x0                   	// #0
  40b6b4:	bl	40b148 <wcrtomb@plt+0x6528>
  40b6b8:	mov	x19, x0
  40b6bc:	mov	x0, x19
  40b6c0:	ldp	x19, x20, [sp, #16]
  40b6c4:	ldp	x29, x30, [sp], #32
  40b6c8:	b	40b5e0 <wcrtomb@plt+0x69c0>
  40b6cc:	adrp	x4, 483000 <argp_program_version_hook@@Base+0x290>
  40b6d0:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40b6d4:	ldr	w4, [x4, #760]
  40b6d8:	str	w4, [x3, #3992]
  40b6dc:	bl	419930 <wcrtomb@plt+0x14d10>
  40b6e0:	b	40b688 <wcrtomb@plt+0x6a68>
  40b6e4:	nop
  40b6e8:	stp	x29, x30, [sp, #-80]!
  40b6ec:	mov	x29, sp
  40b6f0:	stp	x19, x20, [sp, #16]
  40b6f4:	and	w20, w2, #0xff
  40b6f8:	stp	x21, x22, [sp, #32]
  40b6fc:	mov	x22, x1
  40b700:	stp	x23, x24, [sp, #48]
  40b704:	mov	x24, x0
  40b708:	mov	x0, x1
  40b70c:	bl	403ff0 <strlen@plt>
  40b710:	mov	x23, x0
  40b714:	add	x21, x23, #0x1
  40b718:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b71c:	mov	x1, x21
  40b720:	add	x0, x0, #0xa78
  40b724:	mov	x2, #0x0                   	// #0
  40b728:	bl	40b460 <wcrtomb@plt+0x6840>
  40b72c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40b730:	mov	x19, x0
  40b734:	ldrb	w0, [x1, #616]
  40b738:	cbnz	w0, 40b7a0 <wcrtomb@plt+0x6b80>
  40b73c:	str	x25, [sp, #64]
  40b740:	adrp	x25, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40b744:	add	x25, x25, #0x780
  40b748:	ldr	x3, [x25, #32]
  40b74c:	cbz	x3, 40b868 <wcrtomb@plt+0x6c48>
  40b750:	add	x4, x19, #0x109
  40b754:	mov	x1, #0x0                   	// #0
  40b758:	ldrb	w2, [x3, x1]
  40b75c:	strb	w2, [x4, x1]
  40b760:	add	x1, x1, #0x1
  40b764:	cmp	x1, #0x20
  40b768:	cbz	w2, 40b770 <wcrtomb@plt+0x6b50>
  40b76c:	b.ne	40b758 <wcrtomb@plt+0x6b38>  // b.any
  40b770:	ldr	x4, [x25, #40]
  40b774:	add	x3, x19, #0x129
  40b778:	mov	x1, #0x0                   	// #0
  40b77c:	strb	wzr, [x19, #296]
  40b780:	ldrb	w2, [x4, x1]
  40b784:	strb	w2, [x3, x1]
  40b788:	add	x1, x1, #0x1
  40b78c:	cmp	x1, #0x20
  40b790:	cbz	w2, 40b798 <wcrtomb@plt+0x6b78>
  40b794:	b.ne	40b780 <wcrtomb@plt+0x6b60>  // b.any
  40b798:	strb	wzr, [x19, #328]
  40b79c:	ldr	x25, [sp, #64]
  40b7a0:	add	x3, x19, #0x101
  40b7a4:	mov	x4, #0x7375                	// #29557
  40b7a8:	mov	x1, x19
  40b7ac:	movk	x4, #0x6174, lsl #16
  40b7b0:	mov	x0, x24
  40b7b4:	movk	x4, #0x2072, lsl #32
  40b7b8:	mov	x2, #0xffffffffffffffff    	// #-1
  40b7bc:	movk	x4, #0x20, lsl #48
  40b7c0:	str	x4, [x3]
  40b7c4:	strb	w20, [x19, #156]
  40b7c8:	bl	40b648 <wcrtomb@plt+0x6a28>
  40b7cc:	bl	406220 <wcrtomb@plt+0x1600>
  40b7d0:	mov	x20, x0
  40b7d4:	bl	405bd8 <wcrtomb@plt+0xfb8>
  40b7d8:	mov	x19, x0
  40b7dc:	cmp	x21, x0
  40b7e0:	b.ls	40b82c <wcrtomb@plt+0x6c0c>  // b.plast
  40b7e4:	nop
  40b7e8:	mov	x2, x19
  40b7ec:	mov	x1, x22
  40b7f0:	mov	x0, x20
  40b7f4:	bl	403f70 <memcpy@plt>
  40b7f8:	sub	x0, x19, #0x1
  40b7fc:	sub	x21, x21, x19
  40b800:	and	x0, x0, #0xfffffffffffffe00
  40b804:	add	x22, x22, x19
  40b808:	add	x0, x20, x0
  40b80c:	bl	405b90 <wcrtomb@plt+0xf70>
  40b810:	bl	406220 <wcrtomb@plt+0x1600>
  40b814:	mov	x20, x0
  40b818:	bl	405bd8 <wcrtomb@plt+0xfb8>
  40b81c:	mov	x19, x0
  40b820:	cmp	x21, x0
  40b824:	b.hi	40b7e8 <wcrtomb@plt+0x6bc8>  // b.pmore
  40b828:	sub	x23, x21, #0x1
  40b82c:	mov	x1, x22
  40b830:	mov	x2, x21
  40b834:	mov	x0, x20
  40b838:	bl	403f70 <memcpy@plt>
  40b83c:	sub	x2, x19, x21
  40b840:	add	x0, x20, x21
  40b844:	mov	w1, #0x0                   	// #0
  40b848:	bl	404410 <memset@plt>
  40b84c:	and	x0, x23, #0xfffffffffffffe00
  40b850:	add	x0, x20, x0
  40b854:	ldp	x19, x20, [sp, #16]
  40b858:	ldp	x21, x22, [sp, #32]
  40b85c:	ldp	x23, x24, [sp, #48]
  40b860:	ldp	x29, x30, [sp], #80
  40b864:	b	405b90 <wcrtomb@plt+0xf70>
  40b868:	add	x1, x25, #0x20
  40b86c:	bl	41d8f0 <wcrtomb@plt+0x18cd0>
  40b870:	add	x1, x25, #0x28
  40b874:	mov	w0, #0x0                   	// #0
  40b878:	bl	41d9a8 <wcrtomb@plt+0x18d88>
  40b87c:	ldr	x3, [x25, #32]
  40b880:	b	40b750 <wcrtomb@plt+0x6b30>
  40b884:	nop
  40b888:	stp	x29, x30, [sp, #-96]!
  40b88c:	mov	x29, sp
  40b890:	stp	x21, x22, [sp, #32]
  40b894:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  40b898:	stp	x19, x20, [sp, #16]
  40b89c:	mov	x19, x0
  40b8a0:	ldr	w20, [x21, #760]
  40b8a4:	stp	x23, x24, [sp, #48]
  40b8a8:	cmp	w20, #0x4
  40b8ac:	stp	xzr, xzr, [sp, #64]
  40b8b0:	ldr	x24, [x0, #8]
  40b8b4:	b.eq	40be44 <wcrtomb@plt+0x7224>  // b.none
  40b8b8:	mov	x0, x24
  40b8bc:	bl	403ff0 <strlen@plt>
  40b8c0:	cmp	w20, #0x2
  40b8c4:	b.eq	40be2c <wcrtomb@plt+0x720c>  // b.none
  40b8c8:	cmp	x0, #0x64
  40b8cc:	b.ls	40b8f8 <wcrtomb@plt+0x6cd8>  // b.plast
  40b8d0:	cmp	w20, #0x3
  40b8d4:	b.eq	40bd14 <wcrtomb@plt+0x70f4>  // b.none
  40b8d8:	b.ls	40bd9c <wcrtomb@plt+0x717c>  // b.plast
  40b8dc:	cmp	w20, #0x4
  40b8e0:	b.ne	40bd0c <wcrtomb@plt+0x70ec>  // b.any
  40b8e4:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b8e8:	mov	x1, x19
  40b8ec:	add	x0, x0, #0xa88
  40b8f0:	mov	x2, #0x0                   	// #0
  40b8f4:	bl	413f80 <wcrtomb@plt+0xf360>
  40b8f8:	add	x0, x19, #0x8
  40b8fc:	bl	40afe8 <wcrtomb@plt+0x63c8>
  40b900:	mov	x20, x0
  40b904:	cbz	x20, 40bcd0 <wcrtomb@plt+0x70b0>
  40b908:	ldr	w0, [x19, #112]
  40b90c:	add	x2, sp, #0x40
  40b910:	add	x1, x19, #0x70
  40b914:	bl	41a878 <wcrtomb@plt+0x15c58>
  40b918:	ldr	w0, [x19, #116]
  40b91c:	add	x2, sp, #0x48
  40b920:	add	x1, x19, #0x74
  40b924:	bl	41a938 <wcrtomb@plt+0x15d18>
  40b928:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40b92c:	ldr	x3, [x0, #544]
  40b930:	cbz	x3, 40bcec <wcrtomb@plt+0x70cc>
  40b934:	ldr	w22, [x19, #104]
  40b938:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40b93c:	mov	x4, #0x0                   	// #0
  40b940:	ldr	w2, [x1, #24]
  40b944:	and	w0, w22, #0xf000
  40b948:	cmp	w0, #0x4, lsl #12
  40b94c:	mov	w0, w22
  40b950:	cset	w1, eq  // eq = none
  40b954:	and	w22, w22, #0xfffff000
  40b958:	bl	43a418 <argp_parse@@Base+0x6530>
  40b95c:	orr	w0, w22, w0
  40b960:	ldr	w2, [x21, #760]
  40b964:	add	x1, x20, #0x64
  40b968:	str	w0, [x19, #104]
  40b96c:	and	w2, w2, #0xfffffffd
  40b970:	cmp	w2, #0x1
  40b974:	b.ne	40bd04 <wcrtomb@plt+0x70e4>  // b.any
  40b978:	and	w0, w0, #0xfff
  40b97c:	bl	40b210 <wcrtomb@plt+0x65f0>
  40b980:	ldr	w2, [x21, #760]
  40b984:	mov	w0, #0x1fffff              	// #2097151
  40b988:	ldr	w1, [x19, #112]
  40b98c:	cmp	w2, #0x4
  40b990:	ccmp	w1, w0, #0x0, eq  // eq = none
  40b994:	b.hi	40c010 <wcrtomb@plt+0x73f0>  // b.pmore
  40b998:	mov	w1, w1
  40b99c:	add	x4, x20, #0x6c
  40b9a0:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b9a4:	adrp	x3, 40a000 <wcrtomb@plt+0x53e0>
  40b9a8:	add	x6, x6, #0xa58
  40b9ac:	add	x3, x3, #0xd28
  40b9b0:	mov	x5, #0x8                   	// #8
  40b9b4:	mov	x2, #0x4                   	// #4
  40b9b8:	mov	w0, #0x0                   	// #0
  40b9bc:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40b9c0:	tst	w0, #0xff
  40b9c4:	b.eq	40bcd0 <wcrtomb@plt+0x70b0>  // b.none
  40b9c8:	ldr	w2, [x21, #760]
  40b9cc:	mov	w0, #0x1fffff              	// #2097151
  40b9d0:	ldr	w1, [x19, #116]
  40b9d4:	cmp	w2, #0x4
  40b9d8:	ccmp	w1, w0, #0x0, eq  // eq = none
  40b9dc:	b.hi	40c02c <wcrtomb@plt+0x740c>  // b.pmore
  40b9e0:	mov	w1, w1
  40b9e4:	add	x4, x20, #0x74
  40b9e8:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40b9ec:	adrp	x3, 40a000 <wcrtomb@plt+0x53e0>
  40b9f0:	add	x6, x6, #0xa60
  40b9f4:	add	x3, x3, #0xda0
  40b9f8:	mov	x5, #0x8                   	// #8
  40b9fc:	mov	x2, #0x4                   	// #4
  40ba00:	mov	w0, #0x0                   	// #0
  40ba04:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40ba08:	tst	w0, #0xff
  40ba0c:	b.eq	40bcd0 <wcrtomb@plt+0x70b0>  // b.none
  40ba10:	ldr	w0, [x21, #760]
  40ba14:	ldr	x1, [x19, #136]
  40ba18:	cmp	w0, #0x4
  40ba1c:	b.eq	40bf24 <wcrtomb@plt+0x7304>  // b.none
  40ba20:	lsr	x22, x1, #63
  40ba24:	mov	w0, w22
  40ba28:	add	x4, x20, #0x7c
  40ba2c:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40ba30:	mov	x5, #0xc                   	// #12
  40ba34:	add	x6, x6, #0xa48
  40ba38:	mov	x3, #0x0                   	// #0
  40ba3c:	mov	x2, #0x8                   	// #8
  40ba40:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40ba44:	tst	w0, #0xff
  40ba48:	b.eq	40bcd0 <wcrtomb@plt+0x70b0>  // b.none
  40ba4c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40ba50:	ldr	w0, [x0]
  40ba54:	cmp	w0, #0x1
  40ba58:	b.eq	40bfe0 <wcrtomb@plt+0x73c0>  // b.none
  40ba5c:	cmp	w0, #0x2
  40ba60:	b.eq	40bf9c <wcrtomb@plt+0x737c>  // b.none
  40ba64:	cbz	w0, 40bfc8 <wcrtomb@plt+0x73a8>
  40ba68:	ldr	w0, [x21, #760]
  40ba6c:	ldr	x1, [sp, #80]
  40ba70:	cmp	w0, #0x4
  40ba74:	b.eq	40bf50 <wcrtomb@plt+0x7330>  // b.none
  40ba78:	lsr	x0, x1, #63
  40ba7c:	adrp	x22, 454000 <_obstack_memory_used@@Base+0x11e10>
  40ba80:	add	x22, x22, #0xa50
  40ba84:	mov	x6, x22
  40ba88:	add	x4, x20, #0x88
  40ba8c:	mov	x5, #0xc                   	// #12
  40ba90:	mov	x3, #0x0                   	// #0
  40ba94:	mov	x2, #0x8                   	// #8
  40ba98:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40ba9c:	tst	w0, #0xff
  40baa0:	b.eq	40bcd0 <wcrtomb@plt+0x70b0>  // b.none
  40baa4:	ldr	w1, [x19, #104]
  40baa8:	mov	w2, #0xb000                	// #45056
  40baac:	ldr	w0, [x21, #760]
  40bab0:	and	w1, w1, w2
  40bab4:	cmp	w1, #0x2, lsl #12
  40bab8:	b.eq	40be60 <wcrtomb@plt+0x7240>  // b.none
  40babc:	and	w1, w0, #0xfffffffb
  40bac0:	cmp	w1, #0x2
  40bac4:	b.ne	40bca0 <wcrtomb@plt+0x7080>  // b.any
  40bac8:	cmp	w0, #0x4
  40bacc:	b.eq	40c048 <wcrtomb@plt+0x7428>  // b.none
  40bad0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40bad4:	ldrb	w1, [x1, #4073]
  40bad8:	cbz	w1, 40bae8 <wcrtomb@plt+0x6ec8>
  40badc:	and	w1, w0, #0xfffffffb
  40bae0:	cmp	w1, #0x2
  40bae4:	b.eq	40c190 <wcrtomb@plt+0x7570>  // b.none
  40bae8:	cmp	w0, #0x1
  40baec:	b.eq	40bff4 <wcrtomb@plt+0x73d4>  // b.none
  40baf0:	mov	w1, #0x30                  	// #48
  40baf4:	strb	w1, [x20, #156]
  40baf8:	cmp	w0, #0x4
  40bafc:	b.hi	40bf00 <wcrtomb@plt+0x72e0>  // b.pmore
  40bb00:	cmp	w0, #0x2
  40bb04:	b.ls	40bf04 <wcrtomb@plt+0x72e4>  // b.plast
  40bb08:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  40bb0c:	add	x1, x1, #0xe18
  40bb10:	add	x3, x20, #0x101
  40bb14:	add	x2, x20, #0x107
  40bb18:	mov	w4, #0x3030                	// #12336
  40bb1c:	ldr	w5, [x1]
  40bb20:	ldrh	w1, [x1, #4]
  40bb24:	str	w5, [x3]
  40bb28:	strh	w1, [x3, #4]
  40bb2c:	strh	w4, [x2]
  40bb30:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40bb34:	ldrb	w1, [x1, #616]
  40bb38:	cbnz	w1, 40bbd0 <wcrtomb@plt+0x6fb0>
  40bb3c:	ldr	x0, [sp, #64]
  40bb40:	cbz	x0, 40c250 <wcrtomb@plt+0x7630>
  40bb44:	bl	441170 <argp_parse@@Base+0xd288>
  40bb48:	str	x0, [x19, #32]
  40bb4c:	ldr	x0, [sp, #72]
  40bb50:	cbz	x0, 40c260 <wcrtomb@plt+0x7640>
  40bb54:	bl	441170 <argp_parse@@Base+0xd288>
  40bb58:	str	x0, [x19, #40]
  40bb5c:	ldr	w0, [x21, #760]
  40bb60:	ldr	x22, [x19, #32]
  40bb64:	cmp	w0, #0x4
  40bb68:	b.eq	40c214 <wcrtomb@plt+0x75f4>  // b.none
  40bb6c:	add	x2, x20, #0x109
  40bb70:	mov	x0, #0x0                   	// #0
  40bb74:	nop
  40bb78:	ldrb	w1, [x22, x0]
  40bb7c:	strb	w1, [x2, x0]
  40bb80:	cbz	w1, 40bb90 <wcrtomb@plt+0x6f70>
  40bb84:	add	x0, x0, #0x1
  40bb88:	cmp	x0, #0x20
  40bb8c:	b.ne	40bb78 <wcrtomb@plt+0x6f58>  // b.any
  40bb90:	ldr	w0, [x21, #760]
  40bb94:	strb	wzr, [x20, #296]
  40bb98:	cmp	w0, #0x4
  40bb9c:	b.eq	40c1d8 <wcrtomb@plt+0x75b8>  // b.none
  40bba0:	ldr	x3, [x19, #40]
  40bba4:	add	x2, x20, #0x129
  40bba8:	mov	x0, #0x0                   	// #0
  40bbac:	nop
  40bbb0:	ldrb	w1, [x3, x0]
  40bbb4:	strb	w1, [x2, x0]
  40bbb8:	cbz	w1, 40bbc8 <wcrtomb@plt+0x6fa8>
  40bbbc:	add	x0, x0, #0x1
  40bbc0:	cmp	x0, #0x20
  40bbc4:	b.ne	40bbb0 <wcrtomb@plt+0x6f90>  // b.any
  40bbc8:	ldr	w0, [x21, #760]
  40bbcc:	strb	wzr, [x20, #328]
  40bbd0:	cmp	w0, #0x4
  40bbd4:	b.ne	40bcd4 <wcrtomb@plt+0x70b4>  // b.any
  40bbd8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40bbdc:	ldr	w0, [x0, #840]
  40bbe0:	cmp	w0, #0x0
  40bbe4:	b.le	40bc20 <wcrtomb@plt+0x7000>
  40bbe8:	ldr	x0, [x19, #56]
  40bbec:	cbz	x0, 40bc04 <wcrtomb@plt+0x6fe4>
  40bbf0:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40bbf4:	mov	x1, x19
  40bbf8:	add	x0, x0, #0xb60
  40bbfc:	mov	x2, #0x0                   	// #0
  40bc00:	bl	413f80 <wcrtomb@plt+0xf360>
  40bc04:	ldr	x0, [x19, #72]
  40bc08:	cbz	x0, 40bc20 <wcrtomb@plt+0x7000>
  40bc0c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40bc10:	mov	x1, x19
  40bc14:	add	x0, x0, #0xb78
  40bc18:	mov	x2, #0x0                   	// #0
  40bc1c:	bl	413f80 <wcrtomb@plt+0xf360>
  40bc20:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40bc24:	ldr	w0, [x0, #928]
  40bc28:	cmp	w0, #0x0
  40bc2c:	b.le	40bc4c <wcrtomb@plt+0x702c>
  40bc30:	ldr	x0, [x19, #48]
  40bc34:	cbz	x0, 40bc4c <wcrtomb@plt+0x702c>
  40bc38:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40bc3c:	mov	x1, x19
  40bc40:	add	x0, x0, #0xb90
  40bc44:	mov	x2, #0x0                   	// #0
  40bc48:	bl	413f80 <wcrtomb@plt+0xf360>
  40bc4c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40bc50:	ldr	w0, [x0, #600]
  40bc54:	cmp	w0, #0x0
  40bc58:	b.le	40bcd4 <wcrtomb@plt+0x70b4>
  40bc5c:	ldp	x1, x21, [x19, #328]
  40bc60:	str	xzr, [sp, #80]
  40bc64:	mov	x0, #0x0                   	// #0
  40bc68:	cbz	x1, 40bcd4 <wcrtomb@plt+0x70b4>
  40bc6c:	nop
  40bc70:	add	x0, x0, x0, lsl #1
  40bc74:	mov	x1, x19
  40bc78:	add	x2, sp, #0x50
  40bc7c:	ldr	x0, [x21, x0, lsl #3]
  40bc80:	bl	413f80 <wcrtomb@plt+0xf360>
  40bc84:	ldr	x0, [sp, #80]
  40bc88:	ldr	x1, [x19, #328]
  40bc8c:	add	x0, x0, #0x1
  40bc90:	str	x0, [sp, #80]
  40bc94:	cmp	x0, x1
  40bc98:	b.cc	40bc70 <wcrtomb@plt+0x7050>  // b.lo, b.ul, b.last
  40bc9c:	b	40bcd4 <wcrtomb@plt+0x70b4>
  40bca0:	add	x4, x20, #0x149
  40bca4:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40bca8:	mov	x5, #0x8                   	// #8
  40bcac:	add	x6, x6, #0xb20
  40bcb0:	mov	x3, #0x0                   	// #0
  40bcb4:	mov	x2, #0x4                   	// #4
  40bcb8:	mov	x1, #0x0                   	// #0
  40bcbc:	mov	w0, #0x0                   	// #0
  40bcc0:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40bcc4:	tst	w0, #0xff
  40bcc8:	b.ne	40c0dc <wcrtomb@plt+0x74bc>  // b.any
  40bccc:	nop
  40bcd0:	mov	x20, #0x0                   	// #0
  40bcd4:	mov	x0, x20
  40bcd8:	ldp	x19, x20, [sp, #16]
  40bcdc:	ldp	x21, x22, [sp, #32]
  40bce0:	ldp	x23, x24, [sp, #48]
  40bce4:	ldp	x29, x30, [sp], #96
  40bce8:	ret
  40bcec:	ldr	w2, [x21, #760]
  40bcf0:	add	x1, x20, #0x64
  40bcf4:	ldr	w0, [x19, #104]
  40bcf8:	and	w2, w2, #0xfffffffd
  40bcfc:	cmp	w2, #0x1
  40bd00:	b.eq	40b978 <wcrtomb@plt+0x6d58>  // b.none
  40bd04:	bl	40b210 <wcrtomb@plt+0x65f0>
  40bd08:	b	40b980 <wcrtomb@plt+0x6d60>
  40bd0c:	cmp	w20, #0x5
  40bd10:	b.ne	40be04 <wcrtomb@plt+0x71e4>  // b.any
  40bd14:	cmp	x0, #0x100
  40bd18:	b.hi	40c134 <wcrtomb@plt+0x7514>  // b.pmore
  40bd1c:	cmp	x0, #0x9c
  40bd20:	b.hi	40c0d0 <wcrtomb@plt+0x74b0>  // b.pmore
  40bd24:	sub	x23, x0, #0x1
  40bd28:	ldrb	w1, [x24, x23]
  40bd2c:	cmp	w1, #0x2f
  40bd30:	b.eq	40c2b0 <wcrtomb@plt+0x7690>  // b.none
  40bd34:	nop
  40bd38:	subs	x23, x23, #0x1
  40bd3c:	b.eq	40c078 <wcrtomb@plt+0x7458>  // b.none
  40bd40:	ldrb	w1, [x24, x23]
  40bd44:	cmp	w1, #0x2f
  40bd48:	b.ne	40bd38 <wcrtomb@plt+0x7118>  // b.any
  40bd4c:	sub	x0, x0, #0x1
  40bd50:	sub	x22, x0, x23
  40bd54:	sub	x0, x22, #0x1
  40bd58:	cmp	x0, #0x63
  40bd5c:	b.hi	40c078 <wcrtomb@plt+0x7458>  // b.pmore
  40bd60:	bl	406220 <wcrtomb@plt+0x1600>
  40bd64:	mov	x20, x0
  40bd68:	mov	x2, #0x200                 	// #512
  40bd6c:	mov	w1, #0x0                   	// #0
  40bd70:	bl	404410 <memset@plt>
  40bd74:	mov	x2, x23
  40bd78:	mov	x1, x24
  40bd7c:	add	x0, x20, #0x159
  40bd80:	bl	403f70 <memcpy@plt>
  40bd84:	add	x1, x23, #0x1
  40bd88:	mov	x2, x22
  40bd8c:	add	x1, x24, x1
  40bd90:	mov	x0, x20
  40bd94:	bl	403f70 <memcpy@plt>
  40bd98:	b	40b904 <wcrtomb@plt+0x6ce4>
  40bd9c:	cmp	w20, #0x1
  40bda0:	b.ne	40c2b8 <wcrtomb@plt+0x7698>  // b.any
  40bda4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40bda8:	ldr	x0, [x0, #952]
  40bdac:	cbz	x0, 40bdb4 <wcrtomb@plt+0x7194>
  40bdb0:	blr	x0
  40bdb4:	mov	w2, #0x5                   	// #5
  40bdb8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40bdbc:	mov	x0, #0x0                   	// #0
  40bdc0:	add	x1, x1, #0xa90
  40bdc4:	bl	4049c0 <dcgettext@plt>
  40bdc8:	mov	x2, x0
  40bdcc:	ldr	x0, [x19, #8]
  40bdd0:	mov	x19, x2
  40bdd4:	mov	x20, #0x0                   	// #0
  40bdd8:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40bddc:	mov	x3, x0
  40bde0:	mov	w1, #0x0                   	// #0
  40bde4:	mov	w0, #0x0                   	// #0
  40bde8:	mov	x2, x19
  40bdec:	mov	w4, #0x63                  	// #99
  40bdf0:	bl	404050 <error@plt>
  40bdf4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40bdf8:	mov	w1, #0x2                   	// #2
  40bdfc:	str	w1, [x0, #3400]
  40be00:	b	40bcd4 <wcrtomb@plt+0x70b4>
  40be04:	cmp	w20, #0x6
  40be08:	b.ne	40c2b8 <wcrtomb@plt+0x7698>  // b.any
  40be0c:	mov	x1, x24
  40be10:	mov	w2, #0x4c                  	// #76
  40be14:	mov	x0, x19
  40be18:	bl	40b6e8 <wcrtomb@plt+0x6ac8>
  40be1c:	add	x0, x19, #0x8
  40be20:	bl	40afe8 <wcrtomb@plt+0x63c8>
  40be24:	mov	x20, x0
  40be28:	b	40b904 <wcrtomb@plt+0x6ce4>
  40be2c:	cmp	x0, #0x63
  40be30:	b.hi	40be0c <wcrtomb@plt+0x71ec>  // b.pmore
  40be34:	add	x0, x19, #0x8
  40be38:	bl	40afe8 <wcrtomb@plt+0x63c8>
  40be3c:	mov	x20, x0
  40be40:	b	40b904 <wcrtomb@plt+0x6ce4>
  40be44:	mov	x0, x24
  40be48:	bl	427c38 <wcrtomb@plt+0x23018>
  40be4c:	tst	w0, #0xff
  40be50:	b.eq	40c110 <wcrtomb@plt+0x74f0>  // b.none
  40be54:	ldr	w20, [x21, #760]
  40be58:	ldr	x24, [x19, #8]
  40be5c:	b	40b8b8 <wcrtomb@plt+0x6c98>
  40be60:	ldr	x2, [x19, #120]
  40be64:	cmp	w0, #0x4
  40be68:	mov	w0, #0x1fffff              	// #2097151
  40be6c:	lsr	x1, x2, #32
  40be70:	ubfx	w3, w2, #8, #12
  40be74:	and	w1, w1, #0xfffff000
  40be78:	lsr	x23, x2, #12
  40be7c:	orr	w1, w1, w3
  40be80:	ccmp	w1, w0, #0x0, eq  // eq = none
  40be84:	bfxil	w23, w2, #0, #8
  40be88:	b.hi	40c270 <wcrtomb@plt+0x7650>  // b.pmore
  40be8c:	lsr	w0, w1, #31
  40be90:	sxtw	x1, w1
  40be94:	add	x4, x20, #0x149
  40be98:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40be9c:	mov	x5, #0x8                   	// #8
  40bea0:	add	x6, x6, #0xb20
  40bea4:	mov	x3, #0x0                   	// #0
  40bea8:	mov	x2, #0x4                   	// #4
  40beac:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40beb0:	tst	w0, #0xff
  40beb4:	b.eq	40bcd0 <wcrtomb@plt+0x70b0>  // b.none
  40beb8:	ldr	w1, [x21, #760]
  40bebc:	mov	w0, #0x1fffff              	// #2097151
  40bec0:	cmp	w1, #0x4
  40bec4:	ccmp	w23, w0, #0x0, eq  // eq = none
  40bec8:	b.hi	40c290 <wcrtomb@plt+0x7670>  // b.pmore
  40becc:	lsr	w0, w23, #31
  40bed0:	sxtw	x1, w23
  40bed4:	add	x4, x20, #0x151
  40bed8:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40bedc:	mov	x5, #0x8                   	// #8
  40bee0:	add	x6, x6, #0xb38
  40bee4:	mov	x3, #0x0                   	// #0
  40bee8:	mov	x2, #0x4                   	// #4
  40beec:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40bef0:	tst	w0, #0xff
  40bef4:	b.eq	40bcd0 <wcrtomb@plt+0x70b0>  // b.none
  40bef8:	ldr	w0, [x21, #760]
  40befc:	b	40bac8 <wcrtomb@plt+0x6ea8>
  40bf00:	cmp	w0, #0x6
  40bf04:	b.ne	40c2b8 <wcrtomb@plt+0x7698>  // b.any
  40bf08:	add	x1, x20, #0x101
  40bf0c:	mov	x2, #0x7375                	// #29557
  40bf10:	movk	x2, #0x6174, lsl #16
  40bf14:	movk	x2, #0x2072, lsl #32
  40bf18:	movk	x2, #0x20, lsl #48
  40bf1c:	str	x2, [x1]
  40bf20:	b	40bb30 <wcrtomb@plt+0x6f10>
  40bf24:	mov	x0, #0x1ffffffff           	// #8589934591
  40bf28:	mov	w22, #0x0                   	// #0
  40bf2c:	cmp	x1, x0
  40bf30:	b.ls	40ba24 <wcrtomb@plt+0x6e04>  // b.plast
  40bf34:	mov	x1, x19
  40bf38:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40bf3c:	mov	x2, #0x0                   	// #0
  40bf40:	add	x0, x0, #0xb08
  40bf44:	bl	413f80 <wcrtomb@plt+0xf360>
  40bf48:	mov	x1, #0x0                   	// #0
  40bf4c:	b	40ba24 <wcrtomb@plt+0x6e04>
  40bf50:	mov	x0, #0x1ffffffff           	// #8589934591
  40bf54:	cmp	x1, x0
  40bf58:	b.hi	40bf68 <wcrtomb@plt+0x7348>  // b.pmore
  40bf5c:	ldr	x2, [sp, #88]
  40bf60:	mov	w0, #0x0                   	// #0
  40bf64:	cbz	x2, 40ba7c <wcrtomb@plt+0x6e5c>
  40bf68:	add	x2, sp, #0x50
  40bf6c:	mov	x1, x19
  40bf70:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  40bf74:	add	x0, x0, #0xcc8
  40bf78:	bl	413f80 <wcrtomb@plt+0xf360>
  40bf7c:	ldr	x1, [sp, #80]
  40bf80:	mov	x2, #0x1ffffffff           	// #8589934591
  40bf84:	mov	w0, #0x0                   	// #0
  40bf88:	cmp	x1, x2
  40bf8c:	b.ls	40ba7c <wcrtomb@plt+0x6e5c>  // b.plast
  40bf90:	mov	x1, #0x0                   	// #0
  40bf94:	str	xzr, [sp, #80]
  40bf98:	b	40ba7c <wcrtomb@plt+0x6e5c>
  40bf9c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40bfa0:	add	x1, x0, #0x2e0
  40bfa4:	ldr	x3, [x0, #736]
  40bfa8:	ldp	x2, x0, [x19, #232]
  40bfac:	ldr	x4, [x1, #8]
  40bfb0:	cmp	x3, x2
  40bfb4:	b.gt	40bfc8 <wcrtomb@plt+0x73a8>
  40bfb8:	b.lt	40bfd4 <wcrtomb@plt+0x73b4>  // b.tstop
  40bfbc:	sub	w0, w0, w4
  40bfc0:	cmp	w0, #0x0
  40bfc4:	b.gt	40bfd4 <wcrtomb@plt+0x73b4>
  40bfc8:	ldp	x0, x1, [x19, #232]
  40bfcc:	stp	x0, x1, [sp, #80]
  40bfd0:	b	40ba68 <wcrtomb@plt+0x6e48>
  40bfd4:	ldp	x0, x1, [x1]
  40bfd8:	stp	x0, x1, [sp, #80]
  40bfdc:	b	40ba68 <wcrtomb@plt+0x6e48>
  40bfe0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40bfe4:	add	x0, x0, #0x2e0
  40bfe8:	ldp	x0, x1, [x0]
  40bfec:	stp	x0, x1, [sp, #80]
  40bff0:	b	40ba68 <wcrtomb@plt+0x6e48>
  40bff4:	strb	wzr, [x20, #156]
  40bff8:	mov	x0, x20
  40bffc:	ldp	x19, x20, [sp, #16]
  40c000:	ldp	x21, x22, [sp, #32]
  40c004:	ldp	x23, x24, [sp, #48]
  40c008:	ldp	x29, x30, [sp], #96
  40c00c:	ret
  40c010:	mov	x1, x19
  40c014:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c018:	mov	x2, #0x0                   	// #0
  40c01c:	add	x0, x0, #0xaf8
  40c020:	bl	413f80 <wcrtomb@plt+0xf360>
  40c024:	mov	x1, #0x0                   	// #0
  40c028:	b	40b99c <wcrtomb@plt+0x6d7c>
  40c02c:	mov	x1, x19
  40c030:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c034:	mov	x2, #0x0                   	// #0
  40c038:	add	x0, x0, #0xb00
  40c03c:	bl	413f80 <wcrtomb@plt+0xf360>
  40c040:	mov	x1, #0x0                   	// #0
  40c044:	b	40b9e4 <wcrtomb@plt+0x6dc4>
  40c048:	mov	x1, x19
  40c04c:	mov	x2, #0x0                   	// #0
  40c050:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c054:	add	x0, x0, #0xb40
  40c058:	bl	413f80 <wcrtomb@plt+0xf360>
  40c05c:	mov	x1, x19
  40c060:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c064:	mov	x2, #0x0                   	// #0
  40c068:	add	x0, x0, #0xb48
  40c06c:	bl	413f80 <wcrtomb@plt+0xf360>
  40c070:	ldr	w0, [x21, #760]
  40c074:	b	40bae8 <wcrtomb@plt+0x6ec8>
  40c078:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40c07c:	ldr	x0, [x0, #952]
  40c080:	cbz	x0, 40c088 <wcrtomb@plt+0x7468>
  40c084:	blr	x0
  40c088:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c08c:	add	x1, x1, #0xac0
  40c090:	mov	w2, #0x5                   	// #5
  40c094:	mov	x0, #0x0                   	// #0
  40c098:	bl	4049c0 <dcgettext@plt>
  40c09c:	mov	x19, x0
  40c0a0:	mov	x0, x24
  40c0a4:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40c0a8:	mov	w1, #0x0                   	// #0
  40c0ac:	mov	x3, x0
  40c0b0:	mov	x2, x19
  40c0b4:	mov	w0, #0x0                   	// #0
  40c0b8:	bl	404050 <error@plt>
  40c0bc:	mov	x20, #0x0                   	// #0
  40c0c0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40c0c4:	mov	w1, #0x2                   	// #2
  40c0c8:	str	w1, [x0, #3400]
  40c0cc:	b	40bcd4 <wcrtomb@plt+0x70b4>
  40c0d0:	ldrb	w1, [x24, #155]
  40c0d4:	mov	x23, #0x9b                  	// #155
  40c0d8:	b	40bd44 <wcrtomb@plt+0x7124>
  40c0dc:	add	x4, x20, #0x151
  40c0e0:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c0e4:	mov	x5, #0x8                   	// #8
  40c0e8:	add	x6, x6, #0xb38
  40c0ec:	mov	x3, #0x0                   	// #0
  40c0f0:	mov	x2, #0x4                   	// #4
  40c0f4:	mov	x1, #0x0                   	// #0
  40c0f8:	mov	w0, #0x0                   	// #0
  40c0fc:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40c100:	tst	w0, #0xff
  40c104:	b.eq	40bcd0 <wcrtomb@plt+0x70b0>  // b.none
  40c108:	ldr	w0, [x21, #760]
  40c10c:	b	40bac8 <wcrtomb@plt+0x6ea8>
  40c110:	mov	x1, x19
  40c114:	mov	x2, #0x0                   	// #0
  40c118:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c11c:	add	x0, x0, #0xa88
  40c120:	bl	413f80 <wcrtomb@plt+0xf360>
  40c124:	add	x0, x19, #0x8
  40c128:	bl	40afe8 <wcrtomb@plt+0x63c8>
  40c12c:	mov	x20, x0
  40c130:	b	40b904 <wcrtomb@plt+0x6ce4>
  40c134:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40c138:	ldr	x0, [x0, #952]
  40c13c:	cbz	x0, 40c144 <wcrtomb@plt+0x7524>
  40c140:	blr	x0
  40c144:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c148:	add	x1, x1, #0xa90
  40c14c:	mov	w2, #0x5                   	// #5
  40c150:	mov	x0, #0x0                   	// #0
  40c154:	bl	4049c0 <dcgettext@plt>
  40c158:	mov	x19, x0
  40c15c:	mov	x0, x24
  40c160:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40c164:	mov	w1, #0x0                   	// #0
  40c168:	mov	x3, x0
  40c16c:	mov	x2, x19
  40c170:	mov	w0, #0x0                   	// #0
  40c174:	mov	w4, #0x100                 	// #256
  40c178:	bl	404050 <error@plt>
  40c17c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40c180:	mov	w1, #0x2                   	// #2
  40c184:	mov	x20, #0x0                   	// #0
  40c188:	str	w1, [x0, #3400]
  40c18c:	b	40bcd4 <wcrtomb@plt+0x70b4>
  40c190:	ldr	x1, [x19, #216]
  40c194:	mov	x6, x22
  40c198:	add	x4, x20, #0x159
  40c19c:	mov	x5, #0xc                   	// #12
  40c1a0:	mov	x3, #0x0                   	// #0
  40c1a4:	mov	x2, #0x8                   	// #8
  40c1a8:	lsr	x0, x1, #63
  40c1ac:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40c1b0:	ldr	x1, [x19, #248]
  40c1b4:	mov	x6, x22
  40c1b8:	add	x4, x20, #0x165
  40c1bc:	mov	x5, #0xc                   	// #12
  40c1c0:	mov	x3, #0x0                   	// #0
  40c1c4:	mov	x2, #0x8                   	// #8
  40c1c8:	lsr	x0, x1, #63
  40c1cc:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40c1d0:	ldr	w0, [x21, #760]
  40c1d4:	b	40bae8 <wcrtomb@plt+0x6ec8>
  40c1d8:	ldr	x22, [x19, #40]
  40c1dc:	mov	x0, x22
  40c1e0:	bl	403ff0 <strlen@plt>
  40c1e4:	cmp	x0, #0x20
  40c1e8:	b.hi	40c1fc <wcrtomb@plt+0x75dc>  // b.pmore
  40c1ec:	mov	x0, x22
  40c1f0:	bl	427c38 <wcrtomb@plt+0x23018>
  40c1f4:	tst	w0, #0xff
  40c1f8:	b.ne	40bba0 <wcrtomb@plt+0x6f80>  // b.any
  40c1fc:	mov	x1, x19
  40c200:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c204:	mov	x2, #0x0                   	// #0
  40c208:	add	x0, x0, #0xb58
  40c20c:	bl	413f80 <wcrtomb@plt+0xf360>
  40c210:	b	40bba0 <wcrtomb@plt+0x6f80>
  40c214:	mov	x0, x22
  40c218:	bl	403ff0 <strlen@plt>
  40c21c:	cmp	x0, #0x20
  40c220:	b.hi	40c234 <wcrtomb@plt+0x7614>  // b.pmore
  40c224:	mov	x0, x22
  40c228:	bl	427c38 <wcrtomb@plt+0x23018>
  40c22c:	tst	w0, #0xff
  40c230:	b.ne	40c248 <wcrtomb@plt+0x7628>  // b.any
  40c234:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c238:	mov	x1, x19
  40c23c:	add	x0, x0, #0xb50
  40c240:	mov	x2, #0x0                   	// #0
  40c244:	bl	413f80 <wcrtomb@plt+0xf360>
  40c248:	ldr	x22, [x19, #32]
  40c24c:	b	40bb6c <wcrtomb@plt+0x6f4c>
  40c250:	ldr	w0, [x19, #112]
  40c254:	add	x1, x19, #0x20
  40c258:	bl	41d8f0 <wcrtomb@plt+0x18cd0>
  40c25c:	b	40bb4c <wcrtomb@plt+0x6f2c>
  40c260:	ldr	w0, [x19, #116]
  40c264:	add	x1, x19, #0x28
  40c268:	bl	41d9a8 <wcrtomb@plt+0x18d88>
  40c26c:	b	40bb5c <wcrtomb@plt+0x6f3c>
  40c270:	mov	x1, x19
  40c274:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c278:	mov	x2, #0x0                   	// #0
  40c27c:	add	x0, x0, #0xb10
  40c280:	bl	413f80 <wcrtomb@plt+0xf360>
  40c284:	mov	x1, #0x0                   	// #0
  40c288:	mov	w0, #0x0                   	// #0
  40c28c:	b	40be94 <wcrtomb@plt+0x7274>
  40c290:	mov	x1, x19
  40c294:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c298:	mov	x2, #0x0                   	// #0
  40c29c:	add	x0, x0, #0xb28
  40c2a0:	bl	413f80 <wcrtomb@plt+0xf360>
  40c2a4:	mov	x1, #0x0                   	// #0
  40c2a8:	mov	w0, #0x0                   	// #0
  40c2ac:	b	40bed4 <wcrtomb@plt+0x72b4>
  40c2b0:	sub	x23, x0, #0x2
  40c2b4:	b	40bd40 <wcrtomb@plt+0x7120>
  40c2b8:	bl	404650 <abort@plt>
  40c2bc:	nop
  40c2c0:	stp	x29, x30, [sp, #-32]!
  40c2c4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40c2c8:	mov	x29, sp
  40c2cc:	ldr	w2, [x1, #760]
  40c2d0:	str	x19, [sp, #16]
  40c2d4:	cmp	w2, #0x6
  40c2d8:	b.hi	40c394 <wcrtomb@plt+0x7774>  // b.pmore
  40c2dc:	mov	x1, #0x1                   	// #1
  40c2e0:	mov	x3, #0x2a                  	// #42
  40c2e4:	lsl	x1, x1, x2
  40c2e8:	mov	x19, x0
  40c2ec:	tst	x1, x3
  40c2f0:	b.eq	40c354 <wcrtomb@plt+0x7734>  // b.none
  40c2f4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40c2f8:	ldr	x0, [x0, #952]
  40c2fc:	cbz	x0, 40c304 <wcrtomb@plt+0x76e4>
  40c300:	blr	x0
  40c304:	mov	w2, #0x5                   	// #5
  40c308:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c30c:	mov	x0, #0x0                   	// #0
  40c310:	add	x1, x1, #0xbb8
  40c314:	bl	4049c0 <dcgettext@plt>
  40c318:	mov	x2, x0
  40c31c:	ldr	x0, [x19, #24]
  40c320:	mov	x19, x2
  40c324:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40c328:	mov	x3, x0
  40c32c:	mov	x2, x19
  40c330:	mov	w1, #0x0                   	// #0
  40c334:	mov	w0, #0x0                   	// #0
  40c338:	bl	404050 <error@plt>
  40c33c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40c340:	mov	w1, #0x2                   	// #2
  40c344:	ldr	x19, [sp, #16]
  40c348:	str	w1, [x0, #3400]
  40c34c:	ldp	x29, x30, [sp], #32
  40c350:	ret
  40c354:	mov	x2, #0x44                  	// #68
  40c358:	tst	x1, x2
  40c35c:	b.eq	40c374 <wcrtomb@plt+0x7754>  // b.none
  40c360:	ldr	x19, [sp, #16]
  40c364:	mov	w2, #0x4b                  	// #75
  40c368:	ldp	x29, x30, [sp], #32
  40c36c:	ldr	x1, [x0, #24]
  40c370:	b	40b6e8 <wcrtomb@plt+0x6ac8>
  40c374:	tbz	w1, #4, 40c394 <wcrtomb@plt+0x7774>
  40c378:	ldr	x19, [sp, #16]
  40c37c:	mov	x1, x0
  40c380:	ldp	x29, x30, [sp], #32
  40c384:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c388:	mov	x2, #0x0                   	// #0
  40c38c:	add	x0, x0, #0xba8
  40c390:	b	413f80 <wcrtomb@plt+0xf360>
  40c394:	bl	404650 <abort@plt>
  40c398:	cmp	x0, #0x0
  40c39c:	b.le	40c3fc <wcrtomb@plt+0x77dc>
  40c3a0:	stp	x29, x30, [sp, #-48]!
  40c3a4:	mov	x29, sp
  40c3a8:	str	x21, [sp, #32]
  40c3ac:	sub	x21, x0, #0x1
  40c3b0:	and	x21, x21, #0xfffffffffffffe00
  40c3b4:	stp	x19, x20, [sp, #16]
  40c3b8:	sub	x20, x0, #0x200
  40c3bc:	sub	x21, x20, x21
  40c3c0:	b	40c3c8 <wcrtomb@plt+0x77a8>
  40c3c4:	sub	x20, x20, #0x200
  40c3c8:	bl	406220 <wcrtomb@plt+0x1600>
  40c3cc:	mov	x19, x0
  40c3d0:	mov	x2, #0x200                 	// #512
  40c3d4:	mov	w1, #0x0                   	// #0
  40c3d8:	bl	404410 <memset@plt>
  40c3dc:	mov	x0, x19
  40c3e0:	bl	405b90 <wcrtomb@plt+0xf70>
  40c3e4:	cmp	x20, x21
  40c3e8:	b.ne	40c3c4 <wcrtomb@plt+0x77a4>  // b.any
  40c3ec:	ldp	x19, x20, [sp, #16]
  40c3f0:	ldr	x21, [sp, #32]
  40c3f4:	ldp	x29, x30, [sp], #48
  40c3f8:	ret
  40c3fc:	ret
  40c400:	stp	x29, x30, [sp, #-112]!
  40c404:	mov	x29, sp
  40c408:	stp	x19, x20, [sp, #16]
  40c40c:	stp	x23, x24, [sp, #48]
  40c410:	mov	x24, x1
  40c414:	mov	w23, w0
  40c418:	ldr	x19, [x1, #136]
  40c41c:	bl	405b20 <wcrtomb@plt+0xf00>
  40c420:	mov	x20, x0
  40c424:	mov	x0, x24
  40c428:	bl	40b888 <wcrtomb@plt+0x6c68>
  40c42c:	cbz	x0, 40c624 <wcrtomb@plt+0x7a04>
  40c430:	mov	x1, x0
  40c434:	mov	x2, x20
  40c438:	mov	x0, x24
  40c43c:	stp	x21, x22, [sp, #32]
  40c440:	stp	x25, x26, [sp, #64]
  40c444:	bl	40b648 <wcrtomb@plt+0x6a28>
  40c448:	mov	x26, #0x200                 	// #512
  40c44c:	ldr	x0, [x24, #8]
  40c450:	ldr	x2, [x24, #136]
  40c454:	mov	x1, x2
  40c458:	bl	405660 <wcrtomb@plt+0xa40>
  40c45c:	nop
  40c460:	cmp	x19, #0x0
  40c464:	b.le	40c4a4 <wcrtomb@plt+0x7884>
  40c468:	bl	406220 <wcrtomb@plt+0x1600>
  40c46c:	mov	x25, x19
  40c470:	mov	x21, x0
  40c474:	bl	405bd8 <wcrtomb@plt+0xfb8>
  40c478:	mov	x20, x0
  40c47c:	cmp	x19, x0
  40c480:	b.cs	40c4c0 <wcrtomb@plt+0x78a0>  // b.hs, b.nlast
  40c484:	ands	x2, x19, #0x1ff
  40c488:	b.ne	40c5cc <wcrtomb@plt+0x79ac>  // b.any
  40c48c:	cmp	w23, #0x0
  40c490:	b.gt	40c4e0 <wcrtomb@plt+0x78c0>
  40c494:	sub	x19, x19, #0x1
  40c498:	and	x19, x19, #0xfffffffffffffe00
  40c49c:	add	x0, x21, x19
  40c4a0:	bl	405b90 <wcrtomb@plt+0xf70>
  40c4a4:	mov	w0, #0x0                   	// #0
  40c4a8:	ldp	x19, x20, [sp, #16]
  40c4ac:	ldp	x21, x22, [sp, #32]
  40c4b0:	ldp	x23, x24, [sp, #48]
  40c4b4:	ldp	x25, x26, [sp, #64]
  40c4b8:	ldp	x29, x30, [sp], #112
  40c4bc:	ret
  40c4c0:	cmp	w23, #0x0
  40c4c4:	b.gt	40c4e4 <wcrtomb@plt+0x78c4>
  40c4c8:	sub	x0, x0, #0x1
  40c4cc:	sub	x19, x19, x20
  40c4d0:	and	x0, x0, #0xfffffffffffffe00
  40c4d4:	add	x0, x21, x0
  40c4d8:	bl	405b90 <wcrtomb@plt+0xf70>
  40c4dc:	b	40c460 <wcrtomb@plt+0x7840>
  40c4e0:	mov	x20, x19
  40c4e4:	mov	x2, x20
  40c4e8:	mov	x1, x21
  40c4ec:	mov	w0, w23
  40c4f0:	bl	41b9c0 <wcrtomb@plt+0x16da0>
  40c4f4:	mov	x22, x0
  40c4f8:	cmn	x0, #0x1
  40c4fc:	b.eq	40c5e0 <wcrtomb@plt+0x79c0>  // b.none
  40c500:	sub	x0, x20, #0x1
  40c504:	sub	x19, x19, x22
  40c508:	and	x0, x0, #0xfffffffffffffe00
  40c50c:	add	x0, x21, x0
  40c510:	bl	405b90 <wcrtomb@plt+0xf70>
  40c514:	cmp	x22, x20
  40c518:	b.eq	40c460 <wcrtomb@plt+0x7840>  // b.none
  40c51c:	add	x0, x21, x22
  40c520:	sub	x2, x20, x22
  40c524:	mov	w1, #0x0                   	// #0
  40c528:	bl	404410 <memset@plt>
  40c52c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40c530:	ldr	w0, [x0, #408]
  40c534:	tbz	w0, #7, 40c59c <wcrtomb@plt+0x797c>
  40c538:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40c53c:	ldr	x0, [x0, #952]
  40c540:	cbz	x0, 40c548 <wcrtomb@plt+0x7928>
  40c544:	blr	x0
  40c548:	mov	x3, x19
  40c54c:	mov	w4, #0x5                   	// #5
  40c550:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c554:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c558:	add	x2, x2, #0xbe0
  40c55c:	add	x1, x1, #0xc10
  40c560:	mov	x0, #0x0                   	// #0
  40c564:	bl	4048f0 <dcngettext@plt>
  40c568:	mov	x21, x0
  40c56c:	ldr	x0, [x24]
  40c570:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40c574:	mov	x22, x0
  40c578:	add	x1, sp, #0x58
  40c57c:	mov	x0, x19
  40c580:	bl	4398d8 <argp_parse@@Base+0x59f0>
  40c584:	mov	x4, x0
  40c588:	mov	x3, x22
  40c58c:	mov	x2, x21
  40c590:	mov	w1, #0x0                   	// #0
  40c594:	mov	w0, #0x0                   	// #0
  40c598:	bl	404050 <error@plt>
  40c59c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40c5a0:	ldrb	w0, [x0, #897]
  40c5a4:	cbz	w0, 40c618 <wcrtomb@plt+0x79f8>
  40c5a8:	sub	x0, x25, x20
  40c5ac:	bl	40c398 <wcrtomb@plt+0x7778>
  40c5b0:	mov	w0, #0x1                   	// #1
  40c5b4:	ldp	x19, x20, [sp, #16]
  40c5b8:	ldp	x21, x22, [sp, #32]
  40c5bc:	ldp	x23, x24, [sp, #48]
  40c5c0:	ldp	x25, x26, [sp, #64]
  40c5c4:	ldp	x29, x30, [sp], #112
  40c5c8:	ret
  40c5cc:	sub	x2, x26, x2
  40c5d0:	add	x0, x21, x19
  40c5d4:	mov	w1, #0x0                   	// #0
  40c5d8:	bl	404410 <memset@plt>
  40c5dc:	b	40c48c <wcrtomb@plt+0x786c>
  40c5e0:	ldr	x1, [x24, #136]
  40c5e4:	mov	x2, x20
  40c5e8:	ldr	x0, [x24]
  40c5ec:	sub	x1, x1, x19
  40c5f0:	bl	41bd18 <wcrtomb@plt+0x170f8>
  40c5f4:	mov	x0, x19
  40c5f8:	bl	40c398 <wcrtomb@plt+0x7778>
  40c5fc:	mov	w0, #0x1                   	// #1
  40c600:	ldp	x19, x20, [sp, #16]
  40c604:	ldp	x21, x22, [sp, #32]
  40c608:	ldp	x23, x24, [sp, #48]
  40c60c:	ldp	x25, x26, [sp, #64]
  40c610:	ldp	x29, x30, [sp], #112
  40c614:	ret
  40c618:	mov	w0, #0x1                   	// #1
  40c61c:	bl	4260d0 <wcrtomb@plt+0x214b0>
  40c620:	b	40c5a8 <wcrtomb@plt+0x7988>
  40c624:	mov	w0, #0x2                   	// #2
  40c628:	ldp	x19, x20, [sp, #16]
  40c62c:	ldp	x23, x24, [sp, #48]
  40c630:	ldp	x29, x30, [sp], #112
  40c634:	ret
  40c638:	stp	x29, x30, [sp, #-32]!
  40c63c:	mov	x29, sp
  40c640:	str	x19, [sp, #16]
  40c644:	mov	x19, x0
  40c648:	b	40c65c <wcrtomb@plt+0x7a3c>
  40c64c:	mov	x0, x19
  40c650:	bl	40ae18 <wcrtomb@plt+0x61f8>
  40c654:	tst	w0, #0xff
  40c658:	b.eq	40c680 <wcrtomb@plt+0x7a60>  // b.none
  40c65c:	ldr	w0, [x19, #408]
  40c660:	bl	404610 <fdopendir@plt>
  40c664:	str	x0, [x19, #400]
  40c668:	cbz	x0, 40c64c <wcrtomb@plt+0x7a2c>
  40c66c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40c670:	ldr	x19, [sp, #16]
  40c674:	ldp	x29, x30, [sp], #32
  40c678:	ldr	w1, [x1, #464]
  40c67c:	b	440638 <argp_parse@@Base+0xc750>
  40c680:	mov	x0, #0x0                   	// #0
  40c684:	ldr	x19, [sp, #16]
  40c688:	ldp	x29, x30, [sp], #32
  40c68c:	ret
  40c690:	stp	x29, x30, [sp, #-64]!
  40c694:	mov	x29, sp
  40c698:	stp	x21, x22, [sp, #32]
  40c69c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40c6a0:	add	x21, x21, #0x780
  40c6a4:	ldr	x0, [x21, #16]
  40c6a8:	cbz	x0, 40c730 <wcrtomb@plt+0x7b10>
  40c6ac:	stp	x19, x20, [sp, #16]
  40c6b0:	bl	438548 <argp_parse@@Base+0x4660>
  40c6b4:	mov	x19, x0
  40c6b8:	cbz	x0, 40c73c <wcrtomb@plt+0x7b1c>
  40c6bc:	adrp	x22, 454000 <_obstack_memory_used@@Base+0x11e10>
  40c6c0:	add	x22, x22, #0xc40
  40c6c4:	str	x23, [sp, #48]
  40c6c8:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  40c6cc:	nop
  40c6d0:	ldr	w0, [x19, #16]
  40c6d4:	cbz	w0, 40c714 <wcrtomb@plt+0x7af4>
  40c6d8:	ldr	x0, [x23, #952]
  40c6dc:	cbz	x0, 40c6e4 <wcrtomb@plt+0x7ac4>
  40c6e0:	blr	x0
  40c6e4:	mov	x1, x22
  40c6e8:	mov	w2, #0x5                   	// #5
  40c6ec:	mov	x0, #0x0                   	// #0
  40c6f0:	bl	4049c0 <dcgettext@plt>
  40c6f4:	mov	x20, x0
  40c6f8:	add	x0, x19, #0x14
  40c6fc:	bl	440248 <argp_parse@@Base+0xc360>
  40c700:	mov	x3, x0
  40c704:	mov	x2, x20
  40c708:	mov	w1, #0x0                   	// #0
  40c70c:	mov	w0, #0x0                   	// #0
  40c710:	bl	404050 <error@plt>
  40c714:	ldr	x0, [x21, #16]
  40c718:	mov	x1, x19
  40c71c:	bl	438590 <argp_parse@@Base+0x46a8>
  40c720:	mov	x19, x0
  40c724:	cbnz	x0, 40c6d0 <wcrtomb@plt+0x7ab0>
  40c728:	ldp	x19, x20, [sp, #16]
  40c72c:	ldr	x23, [sp, #48]
  40c730:	ldp	x21, x22, [sp, #32]
  40c734:	ldp	x29, x30, [sp], #64
  40c738:	ret
  40c73c:	ldp	x19, x20, [sp, #16]
  40c740:	b	40c730 <wcrtomb@plt+0x7b10>
  40c744:	nop
  40c748:	stp	x29, x30, [sp, #-64]!
  40c74c:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40c750:	add	x3, x3, #0x780
  40c754:	mov	x29, sp
  40c758:	stp	x19, x20, [sp, #16]
  40c75c:	mov	x19, x0
  40c760:	ldrb	w0, [x3, #48]
  40c764:	stp	x21, x22, [sp, #32]
  40c768:	mov	x22, x1
  40c76c:	str	x23, [sp, #48]
  40c770:	mov	w23, w2
  40c774:	cbz	w0, 40c7cc <wcrtomb@plt+0x7bac>
  40c778:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40c77c:	add	x21, x21, #0x888
  40c780:	cmp	x19, #0x0
  40c784:	add	x0, x19, #0x198
  40c788:	csel	x0, x0, x21, ne  // ne = any
  40c78c:	mov	w2, w23
  40c790:	mov	x1, x22
  40c794:	ldr	w0, [x0]
  40c798:	bl	4045b0 <__openat_2@plt>
  40c79c:	mov	w20, w0
  40c7a0:	mov	x0, x19
  40c7a4:	tbz	w20, #31, 40c7b4 <wcrtomb@plt+0x7b94>
  40c7a8:	bl	40ae18 <wcrtomb@plt+0x61f8>
  40c7ac:	tst	w0, #0xff
  40c7b0:	b.ne	40c780 <wcrtomb@plt+0x7b60>  // b.any
  40c7b4:	mov	w0, w20
  40c7b8:	ldp	x19, x20, [sp, #16]
  40c7bc:	ldp	x21, x22, [sp, #32]
  40c7c0:	ldr	x23, [sp, #48]
  40c7c4:	ldp	x29, x30, [sp], #64
  40c7c8:	ret
  40c7cc:	mov	w1, #0x1                   	// #1
  40c7d0:	mov	w0, #0x2                   	// #2
  40c7d4:	strb	w1, [x3, #48]
  40c7d8:	bl	4045a0 <strerror@plt>
  40c7dc:	mov	w2, #0x5                   	// #5
  40c7e0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  40c7e4:	mov	x0, #0x0                   	// #0
  40c7e8:	add	x1, x1, #0x948
  40c7ec:	bl	4049c0 <dcgettext@plt>
  40c7f0:	b	40c778 <wcrtomb@plt+0x7b58>
  40c7f4:	nop
  40c7f8:	stp	x29, x30, [sp, #-64]!
  40c7fc:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40c800:	mov	x29, sp
  40c804:	stp	x19, x20, [sp, #16]
  40c808:	ldr	x19, [x2, #1944]
  40c80c:	cbz	x19, 40c89c <wcrtomb@plt+0x7c7c>
  40c810:	stp	x21, x22, [sp, #32]
  40c814:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  40c818:	mov	x21, x0
  40c81c:	add	x22, x22, #0x28c
  40c820:	str	x23, [sp, #48]
  40c824:	mov	x23, x1
  40c828:	b	40c83c <wcrtomb@plt+0x7c1c>
  40c82c:	mov	w0, w20
  40c830:	bl	4045c0 <close@plt>
  40c834:	ldr	x19, [x19, #32]
  40c838:	cbz	x19, 40c894 <wcrtomb@plt+0x7c74>
  40c83c:	ldr	w2, [x22]
  40c840:	mov	x0, x21
  40c844:	ldr	x1, [x19]
  40c848:	bl	40c748 <wcrtomb@plt+0x7b28>
  40c84c:	mov	w20, w0
  40c850:	tbnz	w0, #31, 40c834 <wcrtomb@plt+0x7c14>
  40c854:	ldr	x2, [x19, #24]
  40c858:	cbz	x2, 40c868 <wcrtomb@plt+0x7c48>
  40c85c:	blr	x2
  40c860:	tst	w0, #0xff
  40c864:	b.eq	40c82c <wcrtomb@plt+0x7c0c>  // b.none
  40c868:	mov	w0, w20
  40c86c:	bl	4045c0 <close@plt>
  40c870:	cbz	x23, 40c87c <wcrtomb@plt+0x7c5c>
  40c874:	ldr	x0, [x19]
  40c878:	str	x0, [x23]
  40c87c:	ldr	w0, [x19, #16]
  40c880:	ldp	x19, x20, [sp, #16]
  40c884:	ldp	x21, x22, [sp, #32]
  40c888:	ldr	x23, [sp, #48]
  40c88c:	ldp	x29, x30, [sp], #64
  40c890:	ret
  40c894:	ldp	x21, x22, [sp, #32]
  40c898:	ldr	x23, [sp, #48]
  40c89c:	mov	w0, #0x0                   	// #0
  40c8a0:	ldp	x19, x20, [sp, #16]
  40c8a4:	ldp	x29, x30, [sp], #64
  40c8a8:	ret
  40c8ac:	nop
  40c8b0:	stp	x29, x30, [sp, #-176]!
  40c8b4:	mov	x29, sp
  40c8b8:	stp	x19, x20, [sp, #16]
  40c8bc:	ldr	x19, [x0, #392]
  40c8c0:	cbz	x19, 40c90c <wcrtomb@plt+0x7cec>
  40c8c4:	ldr	w1, [x19, #408]
  40c8c8:	cbnz	w1, 40c90c <wcrtomb@plt+0x7cec>
  40c8cc:	ldr	w0, [x0, #408]
  40c8d0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x16e10>
  40c8d4:	str	x21, [sp, #32]
  40c8d8:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  40c8dc:	add	x1, x1, #0xe20
  40c8e0:	ldr	w2, [x21, #644]
  40c8e4:	bl	4045b0 <__openat_2@plt>
  40c8e8:	mov	w20, w0
  40c8ec:	tbz	w0, #31, 40c964 <wcrtomb@plt+0x7d44>
  40c8f0:	bl	404ad0 <__errno_location@plt>
  40c8f4:	ldr	w20, [x0]
  40c8f8:	cmp	w20, #0x0
  40c8fc:	neg	w20, w20
  40c900:	b.gt	40c918 <wcrtomb@plt+0x7cf8>
  40c904:	ldr	x21, [sp, #32]
  40c908:	str	w20, [x19, #408]
  40c90c:	ldp	x19, x20, [sp, #16]
  40c910:	ldp	x29, x30, [sp], #176
  40c914:	ret
  40c918:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40c91c:	ldr	w2, [x21, #644]
  40c920:	ldr	x1, [x19]
  40c924:	ldr	w0, [x0, #2184]
  40c928:	bl	4045b0 <__openat_2@plt>
  40c92c:	mov	w21, w0
  40c930:	tbnz	w0, #31, 40c904 <wcrtomb@plt+0x7ce4>
  40c934:	add	x2, sp, #0x30
  40c938:	mov	w1, w20
  40c93c:	mov	w0, #0x0                   	// #0
  40c940:	bl	4049a0 <__fxstat@plt>
  40c944:	cbnz	w0, 40c958 <wcrtomb@plt+0x7d38>
  40c948:	ldr	x0, [sp, #56]
  40c94c:	ldr	x1, [x19, #96]
  40c950:	cmp	x1, x0
  40c954:	b.eq	40c9b4 <wcrtomb@plt+0x7d94>  // b.none
  40c958:	mov	w0, w21
  40c95c:	bl	4045c0 <close@plt>
  40c960:	b	40c904 <wcrtomb@plt+0x7ce4>
  40c964:	mov	w1, w0
  40c968:	add	x2, sp, #0x30
  40c96c:	mov	w0, #0x0                   	// #0
  40c970:	bl	4049a0 <__fxstat@plt>
  40c974:	cbnz	w0, 40c988 <wcrtomb@plt+0x7d68>
  40c978:	ldr	x0, [sp, #56]
  40c97c:	ldr	x1, [x19, #96]
  40c980:	cmp	x1, x0
  40c984:	b.eq	40c9a0 <wcrtomb@plt+0x7d80>  // b.none
  40c988:	mov	w0, w20
  40c98c:	mov	w20, #0x2                   	// #2
  40c990:	bl	4045c0 <close@plt>
  40c994:	ldr	x21, [sp, #32]
  40c998:	str	w20, [x19, #408]
  40c99c:	b	40c90c <wcrtomb@plt+0x7cec>
  40c9a0:	ldr	x0, [sp, #48]
  40c9a4:	ldr	x1, [x19, #88]
  40c9a8:	cmp	x1, x0
  40c9ac:	b.ne	40c988 <wcrtomb@plt+0x7d68>  // b.any
  40c9b0:	b	40c904 <wcrtomb@plt+0x7ce4>
  40c9b4:	ldr	x0, [sp, #48]
  40c9b8:	ldr	x1, [x19, #88]
  40c9bc:	cmp	x1, x0
  40c9c0:	b.ne	40c958 <wcrtomb@plt+0x7d38>  // b.any
  40c9c4:	mov	w20, w21
  40c9c8:	b	40c904 <wcrtomb@plt+0x7ce4>
  40c9cc:	nop
  40c9d0:	sub	sp, sp, #0x2d0
  40c9d4:	stp	x29, x30, [sp]
  40c9d8:	mov	x29, sp
  40c9dc:	stp	x19, x20, [sp, #16]
  40c9e0:	mov	x19, x0
  40c9e4:	mov	x20, x2
  40c9e8:	add	x0, sp, #0x128
  40c9ec:	stp	x21, x22, [sp, #32]
  40c9f0:	mov	x21, x1
  40c9f4:	stp	x23, x24, [sp, #48]
  40c9f8:	stp	x25, x26, [sp, #64]
  40c9fc:	bl	425f70 <wcrtomb@plt+0x21350>
  40ca00:	cmp	x19, #0x0
  40ca04:	str	x19, [sp, #688]
  40ca08:	cset	w23, eq  // eq = none
  40ca0c:	cbz	x19, 40cad0 <wcrtomb@plt+0x7eb0>
  40ca10:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40ca14:	ldr	w22, [x19, #408]
  40ca18:	ldrb	w0, [x0, #536]
  40ca1c:	cbz	w0, 40ca34 <wcrtomb@plt+0x7e14>
  40ca20:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40ca24:	mov	x1, x20
  40ca28:	add	x0, x0, #0xd58
  40ca2c:	bl	422f70 <wcrtomb@plt+0x1e350>
  40ca30:	cbz	w0, 40ca98 <wcrtomb@plt+0x7e78>
  40ca34:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  40ca38:	mov	x1, x20
  40ca3c:	add	x0, sp, #0x128
  40ca40:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  40ca44:	ldrb	w2, [x24, #896]
  40ca48:	add	x25, sp, #0x130
  40ca4c:	mov	w1, #0x0                   	// #0
  40ca50:	mov	x0, x20
  40ca54:	bl	42a438 <wcrtomb@plt+0x25818>
  40ca58:	mov	x1, x0
  40ca5c:	mov	x0, x25
  40ca60:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  40ca64:	mov	x0, x25
  40ca68:	mov	w1, #0x1                   	// #1
  40ca6c:	bl	427110 <wcrtomb@plt+0x224f0>
  40ca70:	tbz	w22, #31, 40cb24 <wcrtomb@plt+0x7f04>
  40ca74:	bl	404ad0 <__errno_location@plt>
  40ca78:	neg	w22, w22
  40ca7c:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40ca80:	add	x2, x2, #0xcf0
  40ca84:	str	w22, [x0]
  40ca88:	mov	w1, w23
  40ca8c:	mov	x0, x20
  40ca90:	bl	41bde0 <wcrtomb@plt+0x171c0>
  40ca94:	cbz	x19, 40caac <wcrtomb@plt+0x7e8c>
  40ca98:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40ca9c:	ldr	x0, [x0, #776]
  40caa0:	cbz	x0, 40caac <wcrtomb@plt+0x7e8c>
  40caa4:	mov	x0, x19
  40caa8:	bl	415d40 <wcrtomb@plt+0x11120>
  40caac:	add	x0, sp, #0x128
  40cab0:	bl	425ff8 <wcrtomb@plt+0x213d8>
  40cab4:	ldp	x29, x30, [sp]
  40cab8:	ldp	x19, x20, [sp, #16]
  40cabc:	ldp	x21, x22, [sp, #32]
  40cac0:	ldp	x23, x24, [sp, #48]
  40cac4:	ldp	x25, x26, [sp, #64]
  40cac8:	add	sp, sp, #0x2d0
  40cacc:	ret
  40cad0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40cad4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40cad8:	ldrb	w25, [x1, #536]
  40cadc:	ldr	w22, [x0, #2184]
  40cae0:	cbz	w25, 40cde0 <wcrtomb@plt+0x81c0>
  40cae4:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  40cae8:	mov	x1, x20
  40caec:	add	x0, x0, #0xd58
  40caf0:	bl	422f70 <wcrtomb@plt+0x1e350>
  40caf4:	cbz	w0, 40caac <wcrtomb@plt+0x7e8c>
  40caf8:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  40cafc:	mov	x1, x20
  40cb00:	add	x0, sp, #0x128
  40cb04:	stp	x27, x28, [sp, #80]
  40cb08:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  40cb0c:	ldrb	w2, [x24, #896]
  40cb10:	mov	x0, x20
  40cb14:	add	x26, sp, #0x130
  40cb18:	mov	w1, #0x0                   	// #0
  40cb1c:	mov	w25, #0x0                   	// #0
  40cb20:	b	40ce04 <wcrtomb@plt+0x81e4>
  40cb24:	mov	w25, #0x1                   	// #1
  40cb28:	stp	x27, x28, [sp, #80]
  40cb2c:	adrp	x26, 483000 <argp_program_version_hook@@Base+0x290>
  40cb30:	add	x3, sp, #0x180
  40cb34:	mov	x2, x21
  40cb38:	ldr	w4, [x26, #504]
  40cb3c:	mov	w1, w22
  40cb40:	mov	w0, #0x0                   	// #0
  40cb44:	bl	404c00 <__fxstatat@plt>
  40cb48:	mov	w28, w0
  40cb4c:	cbnz	w0, 40ce24 <wcrtomb@plt+0x8204>
  40cb50:	ldr	w1, [sp, #400]
  40cb54:	and	w0, w1, #0xf000
  40cb58:	cmp	w0, #0x4, lsl #12
  40cb5c:	b.eq	40cb7c <wcrtomb@plt+0x7f5c>  // b.none
  40cb60:	cmp	w0, #0x8, lsl #12
  40cb64:	b.ne	40cbb0 <wcrtomb@plt+0x7f90>  // b.any
  40cb68:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40cb6c:	ldrb	w0, [x0, #480]
  40cb70:	cbnz	w0, 40d0c8 <wcrtomb@plt+0x84a8>
  40cb74:	ldr	x0, [sp, #432]
  40cb78:	cbz	x0, 40cfb4 <wcrtomb@plt+0x8394>
  40cb7c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40cb80:	mov	x1, x21
  40cb84:	mov	x0, x19
  40cb88:	ldr	w2, [x2, #652]
  40cb8c:	bl	40c748 <wcrtomb@plt+0x7b28>
  40cb90:	mov	w28, w0
  40cb94:	tbnz	w0, #31, 40d0b8 <wcrtomb@plt+0x8498>
  40cb98:	mov	w1, w0
  40cb9c:	add	x2, sp, #0x180
  40cba0:	mov	w0, #0x0                   	// #0
  40cba4:	str	w28, [sp, #704]
  40cba8:	bl	4049a0 <__fxstat@plt>
  40cbac:	cbnz	w0, 40ce24 <wcrtomb@plt+0x8204>
  40cbb0:	ldr	x0, [sp, #432]
  40cbb4:	str	x0, [sp, #112]
  40cbb8:	str	x0, [sp, #560]
  40cbbc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40cbc0:	ldp	x1, x2, [sp, #472]
  40cbc4:	str	x1, [sp, #528]
  40cbc8:	ldrb	w3, [x0, #4073]
  40cbcc:	ldr	x0, [sp, #456]
  40cbd0:	str	x0, [sp, #512]
  40cbd4:	ldr	x0, [sp, #464]
  40cbd8:	str	x0, [sp, #520]
  40cbdc:	ldr	x27, [sp, #488]
  40cbe0:	str	x2, [sp, #536]
  40cbe4:	ldr	x0, [sp, #496]
  40cbe8:	str	x0, [sp, #104]
  40cbec:	str	x27, [sp, #544]
  40cbf0:	str	x0, [sp, #552]
  40cbf4:	eor	w0, w3, #0x1
  40cbf8:	orr	w0, w23, w0
  40cbfc:	cbz	w0, 40cc38 <wcrtomb@plt+0x8018>
  40cc00:	ldr	w0, [sp, #400]
  40cc04:	and	w0, w0, #0xf000
  40cc08:	cmp	w0, #0x4, lsl #12
  40cc0c:	b.eq	40cc38 <wcrtomb@plt+0x8018>  // b.none
  40cc10:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40cc14:	add	x4, x0, #0xff0
  40cc18:	ldr	x0, [x0, #4080]
  40cc1c:	ldr	x4, [x4, #8]
  40cc20:	cmp	x1, x0
  40cc24:	b.lt	40cfc8 <wcrtomb@plt+0x83a8>  // b.tstop
  40cc28:	b.gt	40cc38 <wcrtomb@plt+0x8018>
  40cc2c:	cmp	w2, w4
  40cc30:	b.mi	40cfc8 <wcrtomb@plt+0x83a8>  // b.first
  40cc34:	nop
  40cc38:	add	x0, sp, #0x128
  40cc3c:	bl	421528 <wcrtomb@plt+0x1c908>
  40cc40:	ands	w6, w0, #0xff
  40cc44:	b.ne	40ce34 <wcrtomb@plt+0x8214>  // b.any
  40cc48:	ldr	w0, [sp, #400]
  40cc4c:	and	w0, w0, #0xf000
  40cc50:	str	w0, [sp, #124]
  40cc54:	cmp	w0, #0x4, lsl #12
  40cc58:	b.ne	40ce94 <wcrtomb@plt+0x8274>  // b.any
  40cc5c:	mov	w4, #0x0                   	// #0
  40cc60:	add	x2, sp, #0x128
  40cc64:	mov	x1, x21
  40cc68:	mov	w0, w22
  40cc6c:	mov	w3, #0x0                   	// #0
  40cc70:	str	w6, [sp, #128]
  40cc74:	bl	428d70 <wcrtomb@plt+0x24150>
  40cc78:	mov	w3, w28
  40cc7c:	add	x2, sp, #0x128
  40cc80:	mov	x1, x21
  40cc84:	mov	w0, w22
  40cc88:	bl	4293e0 <wcrtomb@plt+0x247c0>
  40cc8c:	mov	w3, w28
  40cc90:	add	x2, sp, #0x128
  40cc94:	mov	x1, x21
  40cc98:	mov	w0, w22
  40cc9c:	bl	4290d0 <wcrtomb@plt+0x244b0>
  40cca0:	add	x0, sp, #0x128
  40cca4:	bl	40aec8 <wcrtomb@plt+0x62a8>
  40cca8:	add	x0, sp, #0x130
  40ccac:	bl	40aec8 <wcrtomb@plt+0x62a8>
  40ccb0:	add	x1, sp, #0xa0
  40ccb4:	add	x0, sp, #0x128
  40ccb8:	bl	40c7f8 <wcrtomb@plt+0x7bd8>
  40ccbc:	cmp	w0, #0x3
  40ccc0:	ldr	w6, [sp, #128]
  40ccc4:	b.eq	40d084 <wcrtomb@plt+0x8464>  // b.none
  40ccc8:	add	x0, sp, #0x128
  40cccc:	str	w6, [sp, #128]
  40ccd0:	bl	40c638 <wcrtomb@plt+0x7a18>
  40ccd4:	str	x0, [sp, #136]
  40ccd8:	ldr	w6, [sp, #128]
  40ccdc:	cbz	x0, 40d82c <wcrtomb@plt+0x8c0c>
  40cce0:	ldr	x0, [sp, #688]
  40cce4:	str	x0, [sp, #128]
  40cce8:	bl	405b20 <wcrtomb@plt+0xf00>
  40ccec:	mov	x22, x0
  40ccf0:	add	x0, sp, #0x128
  40ccf4:	str	xzr, [sp, #432]
  40ccf8:	bl	40b888 <wcrtomb@plt+0x6c68>
  40ccfc:	mov	x24, x0
  40cd00:	cbz	x0, 40cd78 <wcrtomb@plt+0x8158>
  40cd04:	add	x0, sp, #0x128
  40cd08:	bl	40ec10 <wcrtomb@plt+0x9ff0>
  40cd0c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40cd10:	ldrb	w0, [x0, #4073]
  40cd14:	cbnz	w0, 40d690 <wcrtomb@plt+0x8a70>
  40cd18:	mov	w0, #0x35                  	// #53
  40cd1c:	strb	w0, [x24, #156]
  40cd20:	mov	x2, x22
  40cd24:	mov	x1, x24
  40cd28:	add	x0, sp, #0x128
  40cd2c:	bl	40b648 <wcrtomb@plt+0x6a28>
  40cd30:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40cd34:	ldr	w0, [x0, #620]
  40cd38:	cbz	w0, 40cd78 <wcrtomb@plt+0x8158>
  40cd3c:	ldr	x1, [sp, #128]
  40cd40:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40cd44:	cmp	x1, #0x0
  40cd48:	ldrb	w0, [x0, #29]
  40cd4c:	cset	w1, ne  // ne = any
  40cd50:	tst	w1, w0
  40cd54:	b.ne	40d850 <wcrtomb@plt+0x8c30>  // b.any
  40cd58:	add	x1, sp, #0xa8
  40cd5c:	add	x0, sp, #0x128
  40cd60:	bl	40c7f8 <wcrtomb@plt+0x7bd8>
  40cd64:	cmp	w0, #0x1
  40cd68:	b.eq	40d960 <wcrtomb@plt+0x8d40>  // b.none
  40cd6c:	cmp	w0, #0x2
  40cd70:	b.eq	40d9e0 <wcrtomb@plt+0x8dc0>  // b.none
  40cd74:	cbz	w0, 40d8c4 <wcrtomb@plt+0x8ca4>
  40cd78:	mov	w6, #0x1                   	// #1
  40cd7c:	add	x0, sp, #0x128
  40cd80:	str	w6, [sp, #128]
  40cd84:	bl	40c8b0 <wcrtomb@plt+0x7c90>
  40cd88:	ldr	x0, [sp, #136]
  40cd8c:	bl	4047b0 <free@plt>
  40cd90:	ldr	w6, [sp, #128]
  40cd94:	ldr	w28, [sp, #704]
  40cd98:	cbz	x19, 40d684 <wcrtomb@plt+0x8a64>
  40cd9c:	ldr	w22, [x19, #408]
  40cda0:	cbz	w6, 40cdd0 <wcrtomb@plt+0x81b0>
  40cda4:	tbz	w28, #31, 40d1d0 <wcrtomb@plt+0x85b0>
  40cda8:	bl	404ad0 <__errno_location@plt>
  40cdac:	mov	x3, x0
  40cdb0:	neg	w5, w28
  40cdb4:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40cdb8:	mov	w1, w23
  40cdbc:	mov	x0, x20
  40cdc0:	str	w5, [x3]
  40cdc4:	add	x2, x2, #0xdb8
  40cdc8:	bl	41bde0 <wcrtomb@plt+0x171c0>
  40cdcc:	nop
  40cdd0:	add	x0, sp, #0x128
  40cdd4:	bl	425f80 <wcrtomb@plt+0x21360>
  40cdd8:	ldp	x27, x28, [sp, #80]
  40cddc:	b	40ca94 <wcrtomb@plt+0x7e74>
  40cde0:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  40cde4:	mov	x1, x20
  40cde8:	add	x0, sp, #0x128
  40cdec:	stp	x27, x28, [sp, #80]
  40cdf0:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  40cdf4:	ldrb	w2, [x24, #896]
  40cdf8:	mov	x0, x20
  40cdfc:	add	x26, sp, #0x130
  40ce00:	mov	w1, #0x0                   	// #0
  40ce04:	bl	42a438 <wcrtomb@plt+0x25818>
  40ce08:	mov	x1, x0
  40ce0c:	mov	x0, x26
  40ce10:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  40ce14:	mov	x0, x26
  40ce18:	mov	w1, #0x1                   	// #1
  40ce1c:	bl	427110 <wcrtomb@plt+0x224f0>
  40ce20:	b	40cb2c <wcrtomb@plt+0x7f0c>
  40ce24:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40ce28:	add	x2, x2, #0xdb8
  40ce2c:	ldp	x27, x28, [sp, #80]
  40ce30:	b	40ca88 <wcrtomb@plt+0x7e68>
  40ce34:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40ce38:	ldr	w0, [x0, #408]
  40ce3c:	tbz	w0, #10, 40ce8c <wcrtomb@plt+0x826c>
  40ce40:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40ce44:	ldr	x0, [x0, #952]
  40ce48:	cbz	x0, 40ce50 <wcrtomb@plt+0x8230>
  40ce4c:	blr	x0
  40ce50:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40ce54:	add	x1, x1, #0xc80
  40ce58:	mov	w2, #0x5                   	// #5
  40ce5c:	mov	x0, #0x0                   	// #0
  40ce60:	bl	4049c0 <dcgettext@plt>
  40ce64:	mov	x21, x0
  40ce68:	mov	x0, x20
  40ce6c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40ce70:	mov	x2, x21
  40ce74:	mov	x3, x0
  40ce78:	mov	w1, #0x0                   	// #0
  40ce7c:	mov	w0, #0x0                   	// #0
  40ce80:	bl	404050 <error@plt>
  40ce84:	ldp	x27, x28, [sp, #80]
  40ce88:	b	40ca94 <wcrtomb@plt+0x7e74>
  40ce8c:	ldp	x27, x28, [sp, #80]
  40ce90:	b	40ca94 <wcrtomb@plt+0x7e74>
  40ce94:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40ce98:	add	x1, x0, #0x780
  40ce9c:	str	x1, [sp, #128]
  40cea0:	ldr	x0, [x1, #16]
  40cea4:	cbz	x0, 40d028 <wcrtomb@plt+0x8408>
  40cea8:	ldr	w1, [x1, #52]
  40ceac:	ldr	w2, [sp, #404]
  40ceb0:	cmp	w2, w1
  40ceb4:	b.hi	40cec4 <wcrtomb@plt+0x82a4>  // b.pmore
  40ceb8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40cebc:	ldrb	w1, [x1, #688]
  40cec0:	cbz	w1, 40d028 <wcrtomb@plt+0x8408>
  40cec4:	ldp	x3, x2, [sp, #384]
  40cec8:	add	x1, sp, #0xa8
  40cecc:	stp	x3, x2, [sp, #168]
  40ced0:	bl	4384c8 <argp_parse@@Base+0x45e0>
  40ced4:	mov	x3, x0
  40ced8:	cbz	x0, 40d224 <wcrtomb@plt+0x8604>
  40cedc:	ldrb	w2, [x24, #896]
  40cee0:	mov	w1, #0x1                   	// #1
  40cee4:	add	x0, x0, #0x14
  40cee8:	str	x3, [sp, #136]
  40ceec:	bl	42a438 <wcrtomb@plt+0x25818>
  40cef0:	mov	x24, x0
  40cef4:	ldr	x3, [sp, #136]
  40cef8:	ldr	w1, [x3, #16]
  40cefc:	cbz	w1, 40cf08 <wcrtomb@plt+0x82e8>
  40cf00:	sub	w1, w1, #0x1
  40cf04:	str	w1, [x3, #16]
  40cf08:	bl	405b20 <wcrtomb@plt+0xf00>
  40cf0c:	str	x0, [sp, #144]
  40cf10:	mov	x1, x24
  40cf14:	add	x0, sp, #0x140
  40cf18:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  40cf1c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40cf20:	mov	x0, x24
  40cf24:	ldr	w1, [x1, #760]
  40cf28:	cmp	w1, #0x2
  40cf2c:	cset	x1, ne  // ne = any
  40cf30:	add	x1, x1, #0x63
  40cf34:	str	x1, [sp, #136]
  40cf38:	str	x1, [sp, #152]
  40cf3c:	bl	403ff0 <strlen@plt>
  40cf40:	ldr	x1, [sp, #136]
  40cf44:	cmp	x0, x1
  40cf48:	b.hi	40d4ec <wcrtomb@plt+0x88cc>  // b.pmore
  40cf4c:	add	x0, sp, #0x128
  40cf50:	str	xzr, [sp, #432]
  40cf54:	bl	40b888 <wcrtomb@plt+0x6c68>
  40cf58:	mov	x1, x0
  40cf5c:	cbz	x0, 40d224 <wcrtomb@plt+0x8604>
  40cf60:	add	x5, x0, #0x9d
  40cf64:	mov	x2, #0x0                   	// #0
  40cf68:	ldrb	w3, [x24, x2]
  40cf6c:	strb	w3, [x5, x2]
  40cf70:	cbz	w3, 40cf80 <wcrtomb@plt+0x8360>
  40cf74:	add	x2, x2, #0x1
  40cf78:	cmp	x2, #0x64
  40cf7c:	b.ne	40cf68 <wcrtomb@plt+0x8348>  // b.any
  40cf80:	ldr	x2, [sp, #144]
  40cf84:	mov	w0, #0x31                  	// #49
  40cf88:	strb	w0, [x1, #156]
  40cf8c:	add	x0, sp, #0x128
  40cf90:	bl	40b648 <wcrtomb@plt+0x6a28>
  40cf94:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40cf98:	ldrb	w0, [x0, #688]
  40cf9c:	cbz	w0, 40ce8c <wcrtomb@plt+0x826c>
  40cfa0:	ldr	x0, [sp, #296]
  40cfa4:	mov	w1, #0x0                   	// #0
  40cfa8:	bl	427408 <wcrtomb@plt+0x227e8>
  40cfac:	ldp	x27, x28, [sp, #80]
  40cfb0:	b	40ca94 <wcrtomb@plt+0x7e74>
  40cfb4:	mov	w0, #0x124                 	// #292
  40cfb8:	and	w1, w1, w0
  40cfbc:	cmp	w1, w0
  40cfc0:	b.eq	40cbb0 <wcrtomb@plt+0x7f90>  // b.none
  40cfc4:	b	40cb7c <wcrtomb@plt+0x7f5c>
  40cfc8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40cfcc:	ldr	w1, [x1, #916]
  40cfd0:	cmp	w1, #0x0
  40cfd4:	ccmp	x27, x0, #0x1, ne  // ne = any
  40cfd8:	b.lt	40cff0 <wcrtomb@plt+0x83d0>  // b.tstop
  40cfdc:	cmp	x27, x0
  40cfe0:	b.gt	40cc38 <wcrtomb@plt+0x8018>
  40cfe4:	ldr	w0, [sp, #104]
  40cfe8:	cmp	w0, w4
  40cfec:	b.pl	40cc38 <wcrtomb@plt+0x8018>  // b.nfrst
  40cff0:	cbnz	w3, 40ce8c <wcrtomb@plt+0x826c>
  40cff4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40cff8:	ldr	w0, [x0, #588]
  40cffc:	cbz	w0, 40ce8c <wcrtomb@plt+0x826c>
  40d000:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40d004:	ldr	w0, [x0, #408]
  40d008:	tbz	w0, #8, 40ce8c <wcrtomb@plt+0x826c>
  40d00c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d010:	ldr	x0, [x0, #952]
  40d014:	cbz	x0, 40d01c <wcrtomb@plt+0x83fc>
  40d018:	blr	x0
  40d01c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d020:	add	x1, x1, #0xc58
  40d024:	b	40ce58 <wcrtomb@plt+0x8238>
  40d028:	ldr	w0, [sp, #124]
  40d02c:	cmp	w0, #0x8, lsl #12
  40d030:	b.eq	40d114 <wcrtomb@plt+0x84f4>  // b.none
  40d034:	cmp	w0, #0xa, lsl #12
  40d038:	b.eq	40d240 <wcrtomb@plt+0x8620>  // b.none
  40d03c:	cmp	w0, #0x2, lsl #12
  40d040:	b.eq	40d340 <wcrtomb@plt+0x8720>  // b.none
  40d044:	cmp	w0, #0x6, lsl #12
  40d048:	b.eq	40d458 <wcrtomb@plt+0x8838>  // b.none
  40d04c:	cmp	w0, #0x1, lsl #12
  40d050:	b.eq	40d48c <wcrtomb@plt+0x886c>  // b.none
  40d054:	cmp	w0, #0xc, lsl #12
  40d058:	b.ne	40d230 <wcrtomb@plt+0x8610>  // b.any
  40d05c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40d060:	ldr	w0, [x0, #408]
  40d064:	tbz	w0, #5, 40ce8c <wcrtomb@plt+0x826c>
  40d068:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d06c:	ldr	x0, [x0, #952]
  40d070:	cbz	x0, 40d078 <wcrtomb@plt+0x8458>
  40d074:	blr	x0
  40d078:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d07c:	add	x1, x1, #0xd40
  40d080:	b	40ce58 <wcrtomb@plt+0x8238>
  40d084:	ldr	x21, [sp, #160]
  40d088:	mov	w2, #0x5                   	// #5
  40d08c:	ldr	x20, [sp, #296]
  40d090:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d094:	mov	x0, #0x0                   	// #0
  40d098:	add	x1, x1, #0xca8
  40d09c:	bl	4049c0 <dcgettext@plt>
  40d0a0:	mov	x2, x0
  40d0a4:	mov	x1, x21
  40d0a8:	mov	x0, x20
  40d0ac:	bl	40b2b8 <wcrtomb@plt+0x6698>
  40d0b0:	ldp	x27, x28, [sp, #80]
  40d0b4:	b	40ca94 <wcrtomb@plt+0x7e74>
  40d0b8:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40d0bc:	add	x2, x2, #0xcf0
  40d0c0:	ldp	x27, x28, [sp, #80]
  40d0c4:	b	40ca88 <wcrtomb@plt+0x7e68>
  40d0c8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d0cc:	ldrb	w0, [x0, #641]
  40d0d0:	cbz	w0, 40cbb0 <wcrtomb@plt+0x7f90>
  40d0d4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d0d8:	ldrb	w0, [x0, #856]
  40d0dc:	cbz	w0, 40cbb0 <wcrtomb@plt+0x7f90>
  40d0e0:	ldr	x0, [sp, #432]
  40d0e4:	ldr	x3, [sp, #448]
  40d0e8:	cmp	x0, #0x0
  40d0ec:	add	x2, x0, #0x1ff
  40d0f0:	csel	x1, x2, x0, lt  // lt = tstop
  40d0f4:	tst	x0, #0x1ff
  40d0f8:	asr	x0, x1, #9
  40d0fc:	b.eq	40d108 <wcrtomb@plt+0x84e8>  // b.none
  40d100:	cmp	x2, #0x3fe
  40d104:	cinc	x0, x0, hi  // hi = pmore
  40d108:	cmp	x0, x3
  40d10c:	b.gt	40cb7c <wcrtomb@plt+0x7f5c>
  40d110:	b	40cbb0 <wcrtomb@plt+0x7f90>
  40d114:	mov	w4, #0x1                   	// #1
  40d118:	add	x2, sp, #0x128
  40d11c:	mov	x1, x21
  40d120:	mov	w0, w22
  40d124:	mov	w3, #0x0                   	// #0
  40d128:	bl	428d70 <wcrtomb@plt+0x24150>
  40d12c:	mov	w3, w28
  40d130:	add	x2, sp, #0x128
  40d134:	mov	x1, x21
  40d138:	mov	w0, w22
  40d13c:	bl	4293e0 <wcrtomb@plt+0x247c0>
  40d140:	mov	w3, w28
  40d144:	add	x2, sp, #0x128
  40d148:	mov	x1, x21
  40d14c:	mov	w0, w22
  40d150:	bl	4290d0 <wcrtomb@plt+0x244b0>
  40d154:	cbz	w28, 40d194 <wcrtomb@plt+0x8574>
  40d158:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d15c:	ldrb	w0, [x0, #856]
  40d160:	cbz	w0, 40d194 <wcrtomb@plt+0x8574>
  40d164:	ldr	x0, [sp, #432]
  40d168:	ldr	x3, [sp, #448]
  40d16c:	cmp	x0, #0x0
  40d170:	add	x2, x0, #0x1ff
  40d174:	csel	x1, x2, x0, lt  // lt = tstop
  40d178:	tst	x0, #0x1ff
  40d17c:	asr	x0, x1, #9
  40d180:	b.eq	40d18c <wcrtomb@plt+0x856c>  // b.none
  40d184:	cmp	x2, #0x3fe
  40d188:	cinc	x0, x0, hi  // hi = pmore
  40d18c:	cmp	x3, x0
  40d190:	b.lt	40d660 <wcrtomb@plt+0x8a40>  // b.tstop
  40d194:	add	x1, sp, #0x128
  40d198:	mov	w0, w28
  40d19c:	bl	40c400 <wcrtomb@plt+0x77e0>
  40d1a0:	mov	w24, w0
  40d1a4:	cmp	w0, #0x1
  40d1a8:	b.hi	40d218 <wcrtomb@plt+0x85f8>  // b.pmore
  40d1ac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d1b0:	ldrb	w0, [x0, #28]
  40d1b4:	cbnz	w0, 40d1cc <wcrtomb@plt+0x85ac>
  40d1b8:	ldr	x0, [sp, #128]
  40d1bc:	ldr	w1, [sp, #404]
  40d1c0:	ldr	w0, [x0, #52]
  40d1c4:	cmp	w1, w0
  40d1c8:	b.hi	40d208 <wcrtomb@plt+0x85e8>  // b.pmore
  40d1cc:	cbnz	w24, 40cdd0 <wcrtomb@plt+0x81b0>
  40d1d0:	cbnz	w28, 40d4f8 <wcrtomb@plt+0x88d8>
  40d1d4:	cmp	w22, #0x0
  40d1d8:	ccmp	w25, #0x0, #0x4, lt  // lt = tstop
  40d1dc:	b.eq	40d7ac <wcrtomb@plt+0x8b8c>  // b.none
  40d1e0:	bl	404ad0 <__errno_location@plt>
  40d1e4:	mov	x3, x0
  40d1e8:	neg	w22, w22
  40d1ec:	mov	w1, w23
  40d1f0:	mov	x0, x20
  40d1f4:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40d1f8:	str	w22, [x3]
  40d1fc:	add	x2, x2, #0xdb8
  40d200:	bl	41bde0 <wcrtomb@plt+0x171c0>
  40d204:	b	40cdd0 <wcrtomb@plt+0x81b0>
  40d208:	add	x0, sp, #0x128
  40d20c:	bl	40b058 <wcrtomb@plt+0x6438>
  40d210:	cbz	w24, 40d1d0 <wcrtomb@plt+0x85b0>
  40d214:	b	40cdd0 <wcrtomb@plt+0x81b0>
  40d218:	cmp	w0, #0x3
  40d21c:	b.ne	40cdd0 <wcrtomb@plt+0x81b0>  // b.any
  40d220:	bl	404650 <abort@plt>
  40d224:	ldr	w0, [sp, #400]
  40d228:	and	w0, w0, #0xf000
  40d22c:	b	40d02c <wcrtomb@plt+0x840c>
  40d230:	mov	x0, x20
  40d234:	bl	40af60 <wcrtomb@plt+0x6340>
  40d238:	ldp	x27, x28, [sp, #80]
  40d23c:	b	40ca94 <wcrtomb@plt+0x7e74>
  40d240:	ldr	x2, [sp, #432]
  40d244:	mov	x1, x21
  40d248:	mov	w0, w22
  40d24c:	bl	4300a0 <wcrtomb@plt+0x2b480>
  40d250:	str	x0, [sp, #320]
  40d254:	cbz	x0, 40d4c0 <wcrtomb@plt+0x88a0>
  40d258:	mov	w1, #0x4                   	// #4
  40d25c:	add	x0, sp, #0x140
  40d260:	bl	427110 <wcrtomb@plt+0x224f0>
  40d264:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40d268:	ldr	x0, [sp, #320]
  40d26c:	ldr	w1, [x1, #760]
  40d270:	cmp	w1, #0x2
  40d274:	cset	x23, ne  // ne = any
  40d278:	add	x23, x23, #0x63
  40d27c:	bl	403ff0 <strlen@plt>
  40d280:	cmp	x0, x23
  40d284:	b.hi	40d808 <wcrtomb@plt+0x8be8>  // b.pmore
  40d288:	mov	x1, x21
  40d28c:	add	x2, sp, #0x128
  40d290:	mov	w0, w22
  40d294:	mov	w3, #0x0                   	// #0
  40d298:	bl	4293e0 <wcrtomb@plt+0x247c0>
  40d29c:	mov	x1, x21
  40d2a0:	add	x2, sp, #0x128
  40d2a4:	mov	w0, w22
  40d2a8:	mov	w3, #0x0                   	// #0
  40d2ac:	bl	4290d0 <wcrtomb@plt+0x244b0>
  40d2b0:	bl	405b20 <wcrtomb@plt+0xf00>
  40d2b4:	mov	x21, x0
  40d2b8:	add	x0, sp, #0x128
  40d2bc:	str	xzr, [sp, #432]
  40d2c0:	bl	40b888 <wcrtomb@plt+0x6c68>
  40d2c4:	mov	x1, x0
  40d2c8:	cbz	x0, 40ce8c <wcrtomb@plt+0x826c>
  40d2cc:	ldr	x6, [sp, #320]
  40d2d0:	add	x5, x0, #0x9d
  40d2d4:	mov	x3, #0x0                   	// #0
  40d2d8:	ldrb	w4, [x6, x3]
  40d2dc:	strb	w4, [x5, x3]
  40d2e0:	cbz	w4, 40d2f0 <wcrtomb@plt+0x86d0>
  40d2e4:	add	x3, x3, #0x1
  40d2e8:	cmp	x3, #0x64
  40d2ec:	b.ne	40d2d8 <wcrtomb@plt+0x86b8>  // b.any
  40d2f0:	mov	w0, #0x32                  	// #50
  40d2f4:	strb	w0, [x1, #156]
  40d2f8:	mov	x2, x21
  40d2fc:	add	x0, sp, #0x128
  40d300:	bl	40b648 <wcrtomb@plt+0x6a28>
  40d304:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d308:	ldrb	w0, [x0, #688]
  40d30c:	cbnz	w0, 40d840 <wcrtomb@plt+0x8c20>
  40d310:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d314:	ldrb	w0, [x0, #28]
  40d318:	cbnz	w0, 40ce8c <wcrtomb@plt+0x826c>
  40d31c:	ldr	x0, [sp, #128]
  40d320:	ldr	w1, [sp, #404]
  40d324:	ldr	w0, [x0, #52]
  40d328:	cmp	w1, w0
  40d32c:	b.ls	40ce8c <wcrtomb@plt+0x826c>  // b.plast
  40d330:	add	x0, sp, #0x128
  40d334:	bl	40b058 <wcrtomb@plt+0x6438>
  40d338:	ldp	x27, x28, [sp, #80]
  40d33c:	b	40ca94 <wcrtomb@plt+0x7e74>
  40d340:	mov	w4, #0x1                   	// #1
  40d344:	mov	w23, #0x33                  	// #51
  40d348:	add	x2, sp, #0x128
  40d34c:	mov	x1, x21
  40d350:	mov	w0, w22
  40d354:	mov	w3, #0x0                   	// #0
  40d358:	bl	428d70 <wcrtomb@plt+0x24150>
  40d35c:	add	x2, sp, #0x128
  40d360:	mov	x1, x21
  40d364:	mov	w0, w22
  40d368:	mov	w3, #0x0                   	// #0
  40d36c:	bl	4293e0 <wcrtomb@plt+0x247c0>
  40d370:	mov	w0, w22
  40d374:	mov	x1, x21
  40d378:	add	x2, sp, #0x128
  40d37c:	mov	w3, #0x0                   	// #0
  40d380:	bl	4290d0 <wcrtomb@plt+0x244b0>
  40d384:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d388:	ldr	w0, [x0, #760]
  40d38c:	cmp	w0, #0x1
  40d390:	b.eq	40d230 <wcrtomb@plt+0x8610>  // b.none
  40d394:	bl	405b20 <wcrtomb@plt+0xf00>
  40d398:	mov	x22, x0
  40d39c:	add	x0, sp, #0x128
  40d3a0:	str	xzr, [sp, #432]
  40d3a4:	bl	40b888 <wcrtomb@plt+0x6c68>
  40d3a8:	mov	x21, x0
  40d3ac:	cbz	x0, 40ce8c <wcrtomb@plt+0x826c>
  40d3b0:	strb	w23, [x0, #156]
  40d3b4:	cmp	w23, #0x36
  40d3b8:	b.eq	40d428 <wcrtomb@plt+0x8808>  // b.none
  40d3bc:	ldr	x1, [sp, #416]
  40d3c0:	add	x4, x0, #0x149
  40d3c4:	mov	x5, #0x8                   	// #8
  40d3c8:	mov	x3, #0x0                   	// #0
  40d3cc:	mov	x2, #0x4                   	// #4
  40d3d0:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d3d4:	lsr	x0, x1, #32
  40d3d8:	ubfx	w1, w1, #8, #12
  40d3dc:	and	w0, w0, #0xfffff000
  40d3e0:	add	x6, x6, #0xb20
  40d3e4:	orr	w1, w0, w1
  40d3e8:	lsr	w0, w0, #31
  40d3ec:	sxtw	x1, w1
  40d3f0:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40d3f4:	ldr	x1, [sp, #416]
  40d3f8:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d3fc:	add	x4, x21, #0x151
  40d400:	add	x6, x6, #0xb38
  40d404:	mov	x5, #0x8                   	// #8
  40d408:	mov	x3, #0x0                   	// #0
  40d40c:	lsr	x0, x1, #12
  40d410:	mov	x2, #0x4                   	// #4
  40d414:	mov	w7, w0
  40d418:	lsr	w0, w0, #31
  40d41c:	bfxil	w7, w1, #0, #8
  40d420:	sxtw	x1, w7
  40d424:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40d428:	add	x0, sp, #0x128
  40d42c:	mov	x2, x22
  40d430:	mov	x1, x21
  40d434:	bl	40b648 <wcrtomb@plt+0x6a28>
  40d438:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d43c:	ldrb	w0, [x0, #688]
  40d440:	cbz	w0, 40ce8c <wcrtomb@plt+0x826c>
  40d444:	mov	x0, x20
  40d448:	mov	w1, #0x0                   	// #0
  40d44c:	bl	427408 <wcrtomb@plt+0x227e8>
  40d450:	ldp	x27, x28, [sp, #80]
  40d454:	b	40ca94 <wcrtomb@plt+0x7e74>
  40d458:	mov	w4, #0x1                   	// #1
  40d45c:	add	x2, sp, #0x128
  40d460:	mov	x1, x21
  40d464:	mov	w0, w22
  40d468:	mov	w3, #0x0                   	// #0
  40d46c:	bl	428d70 <wcrtomb@plt+0x24150>
  40d470:	add	x2, sp, #0x128
  40d474:	mov	x1, x21
  40d478:	mov	w0, w22
  40d47c:	mov	w3, #0x0                   	// #0
  40d480:	mov	w23, #0x34                  	// #52
  40d484:	bl	4293e0 <wcrtomb@plt+0x247c0>
  40d488:	b	40d370 <wcrtomb@plt+0x8750>
  40d48c:	mov	w4, #0x1                   	// #1
  40d490:	add	x2, sp, #0x128
  40d494:	mov	x1, x21
  40d498:	mov	w0, w22
  40d49c:	mov	w3, #0x0                   	// #0
  40d4a0:	bl	428d70 <wcrtomb@plt+0x24150>
  40d4a4:	add	x2, sp, #0x128
  40d4a8:	mov	x1, x21
  40d4ac:	mov	w0, w22
  40d4b0:	mov	w3, #0x0                   	// #0
  40d4b4:	mov	w23, #0x36                  	// #54
  40d4b8:	bl	4293e0 <wcrtomb@plt+0x247c0>
  40d4bc:	b	40d370 <wcrtomb@plt+0x8750>
  40d4c0:	bl	404ad0 <__errno_location@plt>
  40d4c4:	ldr	w0, [x0]
  40d4c8:	cmp	w0, #0xc
  40d4cc:	b.eq	40da10 <wcrtomb@plt+0x8df0>  // b.none
  40d4d0:	mov	w1, w23
  40d4d4:	mov	x0, x20
  40d4d8:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40d4dc:	add	x2, x2, #0xd40
  40d4e0:	bl	41bde0 <wcrtomb@plt+0x171c0>
  40d4e4:	ldp	x27, x28, [sp, #80]
  40d4e8:	b	40ca94 <wcrtomb@plt+0x7e74>
  40d4ec:	add	x0, sp, #0x128
  40d4f0:	bl	40c2c0 <wcrtomb@plt+0x76a0>
  40d4f4:	b	40cf4c <wcrtomb@plt+0x832c>
  40d4f8:	add	x2, sp, #0xa8
  40d4fc:	mov	w1, w28
  40d500:	mov	w0, #0x0                   	// #0
  40d504:	bl	4049a0 <__fxstat@plt>
  40d508:	cmp	w0, #0x0
  40d50c:	cset	w0, eq  // eq = none
  40d510:	cbnz	w0, 40d52c <wcrtomb@plt+0x890c>
  40d514:	mov	w1, w23
  40d518:	mov	x0, x20
  40d51c:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40d520:	add	x2, x2, #0xdb8
  40d524:	bl	41bde0 <wcrtomb@plt+0x171c0>
  40d528:	b	40cdd0 <wcrtomb@plt+0x81b0>
  40d52c:	ldr	w1, [sp, #124]
  40d530:	ldr	x0, [sp, #272]
  40d534:	cmp	w1, #0x4, lsl #12
  40d538:	cset	w23, eq  // eq = none
  40d53c:	mov	w2, w23
  40d540:	cmp	x27, x0
  40d544:	ldr	x0, [sp, #280]
  40d548:	b.ne	40d558 <wcrtomb@plt+0x8938>  // b.any
  40d54c:	ldr	w1, [sp, #104]
  40d550:	cmp	w0, w1
  40d554:	b.eq	40d604 <wcrtomb@plt+0x89e4>  // b.none
  40d558:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40d55c:	ldr	w0, [sp, #124]
  40d560:	ldrb	w1, [x1, #688]
  40d564:	cmp	w0, #0x4, lsl #12
  40d568:	cset	w0, ne  // ne = any
  40d56c:	eor	w1, w1, #0x1
  40d570:	orr	w0, w0, w1
  40d574:	tst	w0, #0xff
  40d578:	b.eq	40d604 <wcrtomb@plt+0x89e4>  // b.none
  40d57c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40d580:	ldr	w0, [x0, #408]
  40d584:	tbz	w0, #4, 40d5cc <wcrtomb@plt+0x89ac>
  40d588:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d58c:	ldr	x0, [x0, #952]
  40d590:	cbz	x0, 40d598 <wcrtomb@plt+0x8978>
  40d594:	blr	x0
  40d598:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d59c:	add	x1, x1, #0xd20
  40d5a0:	mov	w2, #0x5                   	// #5
  40d5a4:	mov	x0, #0x0                   	// #0
  40d5a8:	bl	4049c0 <dcgettext@plt>
  40d5ac:	mov	x21, x0
  40d5b0:	mov	x0, x20
  40d5b4:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40d5b8:	mov	x2, x21
  40d5bc:	mov	x3, x0
  40d5c0:	mov	w1, #0x0                   	// #0
  40d5c4:	mov	w0, #0x0                   	// #0
  40d5c8:	bl	404050 <error@plt>
  40d5cc:	mov	w0, #0x1                   	// #1
  40d5d0:	bl	4260d0 <wcrtomb@plt+0x214b0>
  40d5d4:	add	x0, sp, #0x128
  40d5d8:	bl	425f80 <wcrtomb@plt+0x21360>
  40d5dc:	tst	w0, #0xff
  40d5e0:	b.eq	40ce8c <wcrtomb@plt+0x826c>  // b.none
  40d5e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d5e8:	ldrb	w0, [x0, #688]
  40d5ec:	cbz	w0, 40ce8c <wcrtomb@plt+0x826c>
  40d5f0:	mov	w1, w23
  40d5f4:	mov	x0, x20
  40d5f8:	bl	427408 <wcrtomb@plt+0x227e8>
  40d5fc:	ldp	x27, x28, [sp, #80]
  40d600:	b	40ca94 <wcrtomb@plt+0x7e74>
  40d604:	ldr	x1, [sp, #112]
  40d608:	ldr	x0, [sp, #216]
  40d60c:	cmp	x1, x0
  40d610:	b.lt	40d57c <wcrtomb@plt+0x895c>  // b.tstop
  40d614:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d618:	cmp	w28, #0x0
  40d61c:	ldr	w0, [x0, #500]
  40d620:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  40d624:	b.ne	40d5d4 <wcrtomb@plt+0x89b4>  // b.any
  40d628:	ldr	x0, [sp, #112]
  40d62c:	cmp	x0, #0x0
  40d630:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  40d634:	b.eq	40d5d4 <wcrtomb@plt+0x89b4>  // b.none
  40d638:	add	x0, sp, #0x200
  40d63c:	mov	x2, x21
  40d640:	mov	w1, w22
  40d644:	ldp	x3, x4, [x0]
  40d648:	mov	w0, w28
  40d64c:	bl	41baf0 <wcrtomb@plt+0x16ed0>
  40d650:	cbz	w0, 40d5d4 <wcrtomb@plt+0x89b4>
  40d654:	mov	x0, x20
  40d658:	bl	42a2c8 <wcrtomb@plt+0x256a8>
  40d65c:	b	40d5d4 <wcrtomb@plt+0x89b4>
  40d660:	add	x1, sp, #0x128
  40d664:	mov	w0, w28
  40d668:	bl	420858 <wcrtomb@plt+0x1bc38>
  40d66c:	mov	w24, w0
  40d670:	cmp	w0, #0x3
  40d674:	b.eq	40d194 <wcrtomb@plt+0x8574>  // b.none
  40d678:	cmp	w0, #0x1
  40d67c:	b.ls	40d1ac <wcrtomb@plt+0x858c>  // b.plast
  40d680:	b	40cdd0 <wcrtomb@plt+0x81b0>
  40d684:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40d688:	ldr	w22, [x0, #2184]
  40d68c:	b	40cda0 <wcrtomb@plt+0x8180>
  40d690:	adrp	x28, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40d694:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40d698:	ldr	x0, [x28, #4056]
  40d69c:	ldr	w2, [x2, #760]
  40d6a0:	cmp	w2, #0x4
  40d6a4:	ldr	x0, [x0, #56]
  40d6a8:	b.eq	40d7d0 <wcrtomb@plt+0x8bb0>  // b.none
  40d6ac:	mov	w2, #0x44                  	// #68
  40d6b0:	strb	w2, [x24, #156]
  40d6b4:	cbz	x0, 40cd30 <wcrtomb@plt+0x8110>
  40d6b8:	bl	405b20 <wcrtomb@plt+0xf00>
  40d6bc:	mov	x7, x0
  40d6c0:	ldr	x1, [x28, #4056]
  40d6c4:	str	x7, [sp, #128]
  40d6c8:	ldr	x0, [x1, #56]
  40d6cc:	bl	416340 <wcrtomb@plt+0x11720>
  40d6d0:	mov	x28, x0
  40d6d4:	bl	415c78 <wcrtomb@plt+0x11058>
  40d6d8:	mov	x22, x0
  40d6dc:	add	x4, x24, #0x7c
  40d6e0:	mov	x1, x0
  40d6e4:	mov	x5, #0xc                   	// #12
  40d6e8:	mov	x3, #0x0                   	// #0
  40d6ec:	mov	x2, #0x8                   	// #8
  40d6f0:	lsr	x0, x0, #63
  40d6f4:	adrp	x6, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d6f8:	add	x6, x6, #0xa48
  40d6fc:	bl	40a910 <wcrtomb@plt+0x5cf0>
  40d700:	ldr	x7, [sp, #128]
  40d704:	mov	x1, x24
  40d708:	add	x0, sp, #0x128
  40d70c:	mov	x2, x7
  40d710:	bl	40b648 <wcrtomb@plt+0x6a28>
  40d714:	ldr	x0, [sp, #304]
  40d718:	mov	x2, x22
  40d71c:	mov	x1, x22
  40d720:	bl	405660 <wcrtomb@plt+0xa40>
  40d724:	cmp	x22, #0x0
  40d728:	b.le	40cd78 <wcrtomb@plt+0x8158>
  40d72c:	nop
  40d730:	bl	406220 <wcrtomb@plt+0x1600>
  40d734:	mov	x24, x0
  40d738:	bl	405bd8 <wcrtomb@plt+0xfb8>
  40d73c:	mov	x2, x0
  40d740:	cmp	x0, x22
  40d744:	b.ls	40d774 <wcrtomb@plt+0x8b54>  // b.plast
  40d748:	ands	x0, x22, #0x1ff
  40d74c:	b.ne	40d814 <wcrtomb@plt+0x8bf4>  // b.any
  40d750:	mov	x1, x28
  40d754:	mov	x2, x22
  40d758:	mov	x0, x24
  40d75c:	bl	403f70 <memcpy@plt>
  40d760:	sub	x0, x22, #0x1
  40d764:	and	x0, x0, #0xfffffffffffffe00
  40d768:	add	x0, x24, x0
  40d76c:	bl	405b90 <wcrtomb@plt+0xf70>
  40d770:	b	40cd78 <wcrtomb@plt+0x8158>
  40d774:	mov	x1, x28
  40d778:	mov	x0, x24
  40d77c:	str	x2, [sp, #128]
  40d780:	bl	403f70 <memcpy@plt>
  40d784:	ldr	x2, [sp, #128]
  40d788:	sub	x0, x2, #0x1
  40d78c:	sub	x22, x22, x2
  40d790:	and	x0, x0, #0xfffffffffffffe00
  40d794:	add	x28, x28, x2
  40d798:	add	x0, x24, x0
  40d79c:	bl	405b90 <wcrtomb@plt+0xf70>
  40d7a0:	cmp	x22, #0x0
  40d7a4:	b.gt	40d730 <wcrtomb@plt+0x8b10>
  40d7a8:	b	40cd78 <wcrtomb@plt+0x8158>
  40d7ac:	ldr	w4, [x26, #504]
  40d7b0:	add	x3, sp, #0xa8
  40d7b4:	mov	x2, x21
  40d7b8:	mov	w1, w22
  40d7bc:	mov	w0, #0x0                   	// #0
  40d7c0:	bl	404c00 <__fxstatat@plt>
  40d7c4:	cmp	w0, #0x0
  40d7c8:	cset	w0, eq  // eq = none
  40d7cc:	b	40d510 <wcrtomb@plt+0x88f0>
  40d7d0:	mov	w1, #0x35                  	// #53
  40d7d4:	strb	w1, [x24, #156]
  40d7d8:	cbz	x0, 40cd30 <wcrtomb@plt+0x8110>
  40d7dc:	bl	416340 <wcrtomb@plt+0x11720>
  40d7e0:	mov	x2, x0
  40d7e4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d7e8:	add	x0, x1, #0xcc0
  40d7ec:	add	x1, sp, #0x128
  40d7f0:	bl	413f80 <wcrtomb@plt+0xf360>
  40d7f4:	mov	x2, x22
  40d7f8:	mov	x1, x24
  40d7fc:	add	x0, sp, #0x128
  40d800:	bl	40b648 <wcrtomb@plt+0x6a28>
  40d804:	b	40cd78 <wcrtomb@plt+0x8158>
  40d808:	add	x0, sp, #0x128
  40d80c:	bl	40c2c0 <wcrtomb@plt+0x76a0>
  40d810:	b	40d288 <wcrtomb@plt+0x8668>
  40d814:	mov	x2, #0x200                 	// #512
  40d818:	mov	w1, #0x0                   	// #0
  40d81c:	sub	x2, x2, x0
  40d820:	add	x0, x24, x22
  40d824:	bl	404410 <memset@plt>
  40d828:	b	40d750 <wcrtomb@plt+0x8b30>
  40d82c:	ldr	x0, [sp, #296]
  40d830:	str	w6, [sp, #128]
  40d834:	bl	41bd68 <wcrtomb@plt+0x17148>
  40d838:	ldr	w6, [sp, #128]
  40d83c:	b	40cd94 <wcrtomb@plt+0x8174>
  40d840:	mov	x0, x20
  40d844:	mov	w1, #0x0                   	// #0
  40d848:	bl	427408 <wcrtomb@plt+0x227e8>
  40d84c:	b	40d310 <wcrtomb@plt+0x86f0>
  40d850:	ldr	x1, [sp, #688]
  40d854:	ldr	x0, [sp, #384]
  40d858:	ldr	x1, [x1, #88]
  40d85c:	cmp	x1, x0
  40d860:	b.eq	40cd58 <wcrtomb@plt+0x8138>  // b.none
  40d864:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d868:	ldr	w0, [x0, #588]
  40d86c:	cbz	w0, 40cd78 <wcrtomb@plt+0x8158>
  40d870:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40d874:	ldr	w0, [x0, #408]
  40d878:	tbz	w0, #18, 40cd78 <wcrtomb@plt+0x8158>
  40d87c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40d880:	ldr	x0, [x0, #952]
  40d884:	cbz	x0, 40d88c <wcrtomb@plt+0x8c6c>
  40d888:	blr	x0
  40d88c:	mov	w2, #0x5                   	// #5
  40d890:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d894:	mov	x0, #0x0                   	// #0
  40d898:	add	x1, x1, #0xcd0
  40d89c:	bl	4049c0 <dcgettext@plt>
  40d8a0:	mov	x22, x0
  40d8a4:	ldr	x0, [sp, #296]
  40d8a8:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40d8ac:	mov	x3, x0
  40d8b0:	mov	x2, x22
  40d8b4:	mov	w1, #0x0                   	// #0
  40d8b8:	mov	w0, #0x0                   	// #0
  40d8bc:	bl	404050 <error@plt>
  40d8c0:	b	40cd78 <wcrtomb@plt+0x8158>
  40d8c4:	ldr	x0, [sp, #296]
  40d8c8:	ldr	x28, [sp, #136]
  40d8cc:	bl	441170 <argp_parse@@Base+0xd288>
  40d8d0:	mov	x22, x0
  40d8d4:	bl	403ff0 <strlen@plt>
  40d8d8:	str	x0, [sp, #128]
  40d8dc:	str	x0, [sp, #144]
  40d8e0:	b	40d910 <wcrtomb@plt+0x8cf0>
  40d8e4:	ldr	x0, [sp, #128]
  40d8e8:	mov	x1, x28
  40d8ec:	add	x0, x22, x0
  40d8f0:	bl	404910 <strcpy@plt>
  40d8f4:	add	x1, sp, #0x128
  40d8f8:	mov	x0, x22
  40d8fc:	bl	40ee78 <wcrtomb@plt+0xa258>
  40d900:	tst	w0, #0xff
  40d904:	b.eq	40d94c <wcrtomb@plt+0x8d2c>  // b.none
  40d908:	add	x3, x24, #0x1
  40d90c:	add	x28, x28, x3
  40d910:	mov	x0, x28
  40d914:	bl	403ff0 <strlen@plt>
  40d918:	mov	x24, x0
  40d91c:	cbz	x0, 40d9d4 <wcrtomb@plt+0x8db4>
  40d920:	ldr	x0, [sp, #128]
  40d924:	add	x2, x0, x24
  40d928:	ldr	x0, [sp, #144]
  40d92c:	cmp	x2, x0
  40d930:	b.ls	40d8e4 <wcrtomb@plt+0x8cc4>  // b.plast
  40d934:	mov	x0, x22
  40d938:	add	x1, x2, #0x1
  40d93c:	str	x2, [sp, #144]
  40d940:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  40d944:	mov	x22, x0
  40d948:	b	40d8e4 <wcrtomb@plt+0x8cc4>
  40d94c:	mov	x2, x22
  40d950:	mov	x1, x28
  40d954:	add	x0, sp, #0x128
  40d958:	bl	40c9d0 <wcrtomb@plt+0x7db0>
  40d95c:	b	40d908 <wcrtomb@plt+0x8ce8>
  40d960:	ldr	x24, [sp, #168]
  40d964:	mov	w2, #0x5                   	// #5
  40d968:	ldr	x22, [sp, #296]
  40d96c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d970:	mov	x0, #0x0                   	// #0
  40d974:	add	x1, x1, #0xd08
  40d978:	bl	4049c0 <dcgettext@plt>
  40d97c:	mov	x2, x0
  40d980:	mov	x1, x24
  40d984:	mov	x0, x22
  40d988:	bl	40b2b8 <wcrtomb@plt+0x6698>
  40d98c:	ldr	x0, [sp, #296]
  40d990:	bl	403ff0 <strlen@plt>
  40d994:	mov	x22, x0
  40d998:	ldr	x0, [sp, #168]
  40d99c:	bl	403ff0 <strlen@plt>
  40d9a0:	add	x0, x22, x0
  40d9a4:	add	x0, x0, #0x1
  40d9a8:	bl	440f48 <argp_parse@@Base+0xd060>
  40d9ac:	ldr	x1, [sp, #296]
  40d9b0:	mov	x22, x0
  40d9b4:	bl	404220 <stpcpy@plt>
  40d9b8:	ldr	x24, [sp, #168]
  40d9bc:	mov	x1, x24
  40d9c0:	bl	404910 <strcpy@plt>
  40d9c4:	mov	x2, x22
  40d9c8:	mov	x1, x24
  40d9cc:	add	x0, sp, #0x128
  40d9d0:	bl	40c9d0 <wcrtomb@plt+0x7db0>
  40d9d4:	mov	x0, x22
  40d9d8:	bl	4047b0 <free@plt>
  40d9dc:	b	40cd78 <wcrtomb@plt+0x8158>
  40d9e0:	ldr	x24, [sp, #168]
  40d9e4:	mov	w2, #0x5                   	// #5
  40d9e8:	ldr	x22, [sp, #296]
  40d9ec:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40d9f0:	mov	x0, #0x0                   	// #0
  40d9f4:	add	x1, x1, #0xd08
  40d9f8:	bl	4049c0 <dcgettext@plt>
  40d9fc:	mov	x2, x0
  40da00:	mov	x1, x24
  40da04:	mov	x0, x22
  40da08:	bl	40b2b8 <wcrtomb@plt+0x6698>
  40da0c:	b	40cd78 <wcrtomb@plt+0x8158>
  40da10:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  40da14:	nop
  40da18:	sub	sp, sp, #0x210
  40da1c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40da20:	mov	w2, #0x0                   	// #0
  40da24:	stp	x29, x30, [sp]
  40da28:	mov	x29, sp
  40da2c:	ldr	x0, [x0, #4048]
  40da30:	stp	x19, x20, [sp, #16]
  40da34:	cmp	x0, #0x1
  40da38:	b.hi	40da48 <wcrtomb@plt+0x8e28>  // b.pmore
  40da3c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40da40:	ldrb	w2, [x0, #520]
  40da44:	eor	w2, w2, #0x1
  40da48:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40da4c:	mov	w0, #0x1                   	// #1
  40da50:	str	w2, [x1, #1972]
  40da54:	bl	408150 <wcrtomb@plt+0x3530>
  40da58:	bl	405678 <wcrtomb@plt+0xa58>
  40da5c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40da60:	ldrb	w0, [x0, #4073]
  40da64:	cbz	w0, 40da78 <wcrtomb@plt+0x8e58>
  40da68:	b	40dacc <wcrtomb@plt+0x8eac>
  40da6c:	bl	40ee78 <wcrtomb@plt+0xa258>
  40da70:	tst	w0, #0xff
  40da74:	b.eq	40dab8 <wcrtomb@plt+0x8e98>  // b.none
  40da78:	mov	w0, #0x1                   	// #1
  40da7c:	bl	41dc90 <wcrtomb@plt+0x19070>
  40da80:	mov	x1, #0x0                   	// #0
  40da84:	mov	x19, x0
  40da88:	cbnz	x0, 40da6c <wcrtomb@plt+0x8e4c>
  40da8c:	bl	40b408 <wcrtomb@plt+0x67e8>
  40da90:	bl	4066c8 <wcrtomb@plt+0x1aa8>
  40da94:	bl	4273c0 <wcrtomb@plt+0x227a0>
  40da98:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40da9c:	ldr	x0, [x0, #776]
  40daa0:	cbz	x0, 40daa8 <wcrtomb@plt+0x8e88>
  40daa4:	bl	4171c8 <wcrtomb@plt+0x125a8>
  40daa8:	ldp	x29, x30, [sp]
  40daac:	ldp	x19, x20, [sp, #16]
  40dab0:	add	sp, sp, #0x210
  40dab4:	ret
  40dab8:	mov	x2, x19
  40dabc:	mov	x1, x19
  40dac0:	mov	x0, #0x0                   	// #0
  40dac4:	bl	40c9d0 <wcrtomb@plt+0x7db0>
  40dac8:	b	40da78 <wcrtomb@plt+0x8e58>
  40dacc:	mov	x0, #0x3e8                 	// #1000
  40dad0:	stp	x21, x22, [sp, #32]
  40dad4:	stp	x23, x24, [sp, #48]
  40dad8:	stp	x25, x26, [sp, #64]
  40dadc:	bl	440f48 <argp_parse@@Base+0xd060>
  40dae0:	mov	x21, x0
  40dae4:	bl	41e680 <wcrtomb@plt+0x19a60>
  40dae8:	b	40dafc <wcrtomb@plt+0x8edc>
  40daec:	ldr	x0, [x19, #16]
  40daf0:	bl	40ee78 <wcrtomb@plt+0xa258>
  40daf4:	tst	w0, #0xff
  40daf8:	b.eq	40db5c <wcrtomb@plt+0x8f3c>  // b.none
  40dafc:	bl	41eaf8 <wcrtomb@plt+0x19ed8>
  40db00:	mov	x19, x0
  40db04:	mov	x1, #0x0                   	// #0
  40db08:	cbnz	x0, 40daec <wcrtomb@plt+0x8ecc>
  40db0c:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  40db10:	add	x26, sp, #0xc0
  40db14:	add	x24, x24, #0x284
  40db18:	mov	x23, #0x3e8                 	// #1000
  40db1c:	bl	41eb78 <wcrtomb@plt+0x19f58>
  40db20:	b	40db38 <wcrtomb@plt+0x8f18>
  40db24:	ldr	x0, [x19, #16]
  40db28:	mov	x1, #0x0                   	// #0
  40db2c:	bl	40ee78 <wcrtomb@plt+0xa258>
  40db30:	tst	w0, #0xff
  40db34:	b.eq	40db70 <wcrtomb@plt+0x8f50>  // b.none
  40db38:	bl	41eaf8 <wcrtomb@plt+0x19ed8>
  40db3c:	mov	x19, x0
  40db40:	cbnz	x0, 40db24 <wcrtomb@plt+0x8f04>
  40db44:	mov	x0, x21
  40db48:	bl	4047b0 <free@plt>
  40db4c:	ldp	x21, x22, [sp, #32]
  40db50:	ldp	x23, x24, [sp, #48]
  40db54:	ldp	x25, x26, [sp, #64]
  40db58:	b	40da8c <wcrtomb@plt+0x8e6c>
  40db5c:	ldr	x2, [x19, #16]
  40db60:	mov	x0, #0x0                   	// #0
  40db64:	mov	x1, x2
  40db68:	bl	40c9d0 <wcrtomb@plt+0x7db0>
  40db6c:	b	40dafc <wcrtomb@plt+0x8edc>
  40db70:	ldr	x20, [x19, #16]
  40db74:	stp	x27, x28, [sp, #80]
  40db78:	mov	x0, x20
  40db7c:	bl	403ff0 <strlen@plt>
  40db80:	mov	x22, x0
  40db84:	cmp	x23, x0
  40db88:	b.ls	40dc70 <wcrtomb@plt+0x9050>  // b.plast
  40db8c:	mov	x1, x20
  40db90:	mov	x2, x22
  40db94:	mov	x0, x21
  40db98:	bl	403f70 <memcpy@plt>
  40db9c:	add	x0, x21, x22
  40dba0:	ldurb	w0, [x0, #-1]
  40dba4:	cmp	w0, #0x2f
  40dba8:	b.eq	40dbb8 <wcrtomb@plt+0x8f98>  // b.none
  40dbac:	mov	w0, #0x2f                  	// #47
  40dbb0:	strb	w0, [x21, x22]
  40dbb4:	add	x22, x22, #0x1
  40dbb8:	add	x0, sp, #0x68
  40dbbc:	bl	425f70 <wcrtomb@plt+0x21350>
  40dbc0:	ldr	x0, [x19, #56]
  40dbc4:	bl	416320 <wcrtomb@plt+0x11700>
  40dbc8:	mov	x27, x0
  40dbcc:	cbnz	x0, 40dbe0 <wcrtomb@plt+0x8fc0>
  40dbd0:	add	x0, sp, #0x68
  40dbd4:	bl	425ff8 <wcrtomb@plt+0x213d8>
  40dbd8:	ldp	x27, x28, [sp, #80]
  40dbdc:	b	40db38 <wcrtomb@plt+0x8f18>
  40dbe0:	ldrb	w20, [x0]
  40dbe4:	cbz	w20, 40dbd0 <wcrtomb@plt+0x8fb0>
  40dbe8:	adrp	x25, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40dbec:	add	x25, x25, #0x888
  40dbf0:	b	40dc04 <wcrtomb@plt+0x8fe4>
  40dbf4:	add	x20, x20, #0x1
  40dbf8:	add	x27, x27, x20
  40dbfc:	ldrb	w20, [x27]
  40dc00:	cbz	w20, 40dbd0 <wcrtomb@plt+0x8fb0>
  40dc04:	mov	x0, x27
  40dc08:	bl	403ff0 <strlen@plt>
  40dc0c:	cmp	w20, #0x59
  40dc10:	mov	x20, x0
  40dc14:	b.ne	40dbf4 <wcrtomb@plt+0x8fd4>  // b.any
  40dc18:	ldr	x0, [sp, #104]
  40dc1c:	cbz	x0, 40dc94 <wcrtomb@plt+0x9074>
  40dc20:	add	x0, x22, x20
  40dc24:	cmp	x0, x23
  40dc28:	b.hi	40dc50 <wcrtomb@plt+0x9030>  // b.pmore
  40dc2c:	add	x28, x27, #0x1
  40dc30:	add	x0, x21, x22
  40dc34:	mov	x1, x28
  40dc38:	bl	404910 <strcpy@plt>
  40dc3c:	mov	x2, x21
  40dc40:	mov	x1, x28
  40dc44:	add	x0, sp, #0x68
  40dc48:	bl	40c9d0 <wcrtomb@plt+0x7db0>
  40dc4c:	b	40dbf4 <wcrtomb@plt+0x8fd4>
  40dc50:	lsl	x23, x23, #1
  40dc54:	cmp	x0, x23
  40dc58:	b.hi	40dc50 <wcrtomb@plt+0x9030>  // b.pmore
  40dc5c:	mov	x0, x21
  40dc60:	mov	x1, x23
  40dc64:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  40dc68:	mov	x21, x0
  40dc6c:	b	40dc2c <wcrtomb@plt+0x900c>
  40dc70:	lsl	x23, x23, #1
  40dc74:	cmp	x22, x23
  40dc78:	b.cs	40dc70 <wcrtomb@plt+0x9050>  // b.hs, b.nlast
  40dc7c:	mov	x0, x21
  40dc80:	mov	x1, x23
  40dc84:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  40dc88:	mov	x21, x0
  40dc8c:	ldr	x20, [x19, #16]
  40dc90:	b	40db8c <wcrtomb@plt+0x8f6c>
  40dc94:	ldr	w2, [x24]
  40dc98:	ldr	w0, [x25]
  40dc9c:	ldr	x1, [x19, #16]
  40dca0:	bl	4045b0 <__openat_2@plt>
  40dca4:	mov	w1, w0
  40dca8:	tbnz	w0, #31, 40dcd0 <wcrtomb@plt+0x90b0>
  40dcac:	mov	x2, x26
  40dcb0:	mov	w0, #0x0                   	// #0
  40dcb4:	str	w1, [sp, #512]
  40dcb8:	bl	4049a0 <__fxstat@plt>
  40dcbc:	cbnz	w0, 40dcf0 <wcrtomb@plt+0x90d0>
  40dcc0:	ldr	x0, [x19, #16]
  40dcc4:	bl	441170 <argp_parse@@Base+0xd288>
  40dcc8:	str	x0, [sp, #104]
  40dccc:	b	40dc20 <wcrtomb@plt+0x9000>
  40dcd0:	ldr	x1, [x19, #64]
  40dcd4:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40dcd8:	ldr	x0, [x19, #16]
  40dcdc:	cmp	x1, #0x0
  40dce0:	add	x2, x2, #0xcf0
  40dce4:	cset	w1, eq  // eq = none
  40dce8:	bl	41bde0 <wcrtomb@plt+0x171c0>
  40dcec:	b	40dbd0 <wcrtomb@plt+0x8fb0>
  40dcf0:	ldr	x1, [x19, #64]
  40dcf4:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40dcf8:	ldr	x0, [x19, #16]
  40dcfc:	cmp	x1, #0x0
  40dd00:	add	x2, x2, #0xdb8
  40dd04:	cset	w1, eq  // eq = none
  40dd08:	bl	41bde0 <wcrtomb@plt+0x171c0>
  40dd0c:	b	40dbd0 <wcrtomb@plt+0x8fb0>
  40dd10:	stp	x29, x30, [sp, #-80]!
  40dd14:	mov	x29, sp
  40dd18:	stp	x19, x20, [sp, #16]
  40dd1c:	mov	x19, x0
  40dd20:	tbnz	x0, #63, 40de40 <wcrtomb@plt+0x9220>
  40dd24:	cmp	x0, w0, sxtw
  40dd28:	mov	w0, #0x3                   	// #3
  40dd2c:	cset	w1, eq  // eq = none
  40dd30:	strh	w0, [sp, #72]
  40dd34:	str	w19, [sp, #76]
  40dd38:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  40dd3c:	ldr	w0, [x20, #920]
  40dd40:	cbz	w1, 40dd98 <wcrtomb@plt+0x9178>
  40dd44:	str	x21, [sp, #32]
  40dd48:	mov	w1, #0x3fffffff            	// #1073741823
  40dd4c:	add	x21, sp, #0x48
  40dd50:	cmp	w0, w1
  40dd54:	b.le	40de14 <wcrtomb@plt+0x91f4>
  40dd58:	mov	w3, #0xc0000000            	// #-1073741824
  40dd5c:	mov	w1, #0x6d01                	// #27905
  40dd60:	mov	x2, x21
  40dd64:	add	w0, w0, w3
  40dd68:	movk	w1, #0x4008, lsl #16
  40dd6c:	bl	42b320 <wcrtomb@plt+0x26700>
  40dd70:	mvn	w0, w0
  40dd74:	lsr	w0, w0, #31
  40dd78:	cbnz	w0, 40de30 <wcrtomb@plt+0x9210>
  40dd7c:	bl	404ad0 <__errno_location@plt>
  40dd80:	mov	x1, x0
  40dd84:	ldr	w0, [x20, #920]
  40dd88:	ldr	w1, [x1]
  40dd8c:	cmp	w1, #0x5
  40dd90:	b.eq	40de9c <wcrtomb@plt+0x927c>  // b.none
  40dd94:	ldr	x21, [sp, #32]
  40dd98:	mov	w1, #0x3fffffff            	// #1073741823
  40dd9c:	cmp	w0, w1
  40dda0:	b.gt	40ddfc <wcrtomb@plt+0x91dc>
  40dda4:	mov	w2, #0x1                   	// #1
  40dda8:	mov	x1, #0x0                   	// #0
  40ddac:	bl	4041d0 <lseek@plt>
  40ddb0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40ddb4:	ldr	x3, [x1, #864]
  40ddb8:	mul	x2, x19, x3
  40ddbc:	add	x1, x2, x0
  40ddc0:	sdiv	x19, x2, x19
  40ddc4:	cmp	x19, x3
  40ddc8:	b.ne	40dde0 <wcrtomb@plt+0x91c0>  // b.any
  40ddcc:	cmp	x0, x1
  40ddd0:	lsr	x2, x2, #63
  40ddd4:	cset	w0, gt
  40ddd8:	cmp	w0, w2
  40dddc:	b.eq	40de60 <wcrtomb@plt+0x9240>  // b.none
  40dde0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40dde4:	ldr	x0, [x0, #632]
  40dde8:	ldr	x0, [x0]
  40ddec:	bl	42a098 <wcrtomb@plt+0x25478>
  40ddf0:	ldp	x19, x20, [sp, #16]
  40ddf4:	ldp	x29, x30, [sp], #80
  40ddf8:	ret
  40ddfc:	mov	w1, #0xc0000000            	// #-1073741824
  40de00:	mov	w2, #0x1                   	// #1
  40de04:	add	w0, w0, w1
  40de08:	mov	x1, #0x0                   	// #0
  40de0c:	bl	42b1c0 <wcrtomb@plt+0x265a0>
  40de10:	b	40ddb0 <wcrtomb@plt+0x9190>
  40de14:	mov	x1, #0x6d01                	// #27905
  40de18:	mov	x2, x21
  40de1c:	movk	x1, #0x4008, lsl #16
  40de20:	bl	404bd0 <ioctl@plt>
  40de24:	mvn	w0, w0
  40de28:	lsr	w0, w0, #31
  40de2c:	cbz	w0, 40dd7c <wcrtomb@plt+0x915c>
  40de30:	ldp	x19, x20, [sp, #16]
  40de34:	ldr	x21, [sp, #32]
  40de38:	ldp	x29, x30, [sp], #80
  40de3c:	ret
  40de40:	neg	w0, w0
  40de44:	mov	w1, #0x4                   	// #4
  40de48:	strh	w1, [sp, #72]
  40de4c:	sxtw	x1, w0
  40de50:	str	w0, [sp, #76]
  40de54:	cmn	x1, x19
  40de58:	cset	w1, eq  // eq = none
  40de5c:	b	40dd38 <wcrtomb@plt+0x9118>
  40de60:	ldr	w0, [x20, #920]
  40de64:	cmp	x1, #0x0
  40de68:	csel	x1, x1, xzr, ge  // ge = tcont
  40de6c:	mov	w2, #0x3fffffff            	// #1073741823
  40de70:	cmp	w0, w2
  40de74:	b.le	40ded8 <wcrtomb@plt+0x92b8>
  40de78:	mov	w3, #0xc0000000            	// #-1073741824
  40de7c:	mov	w2, #0x0                   	// #0
  40de80:	add	w0, w0, w3
  40de84:	str	x1, [sp, #56]
  40de88:	bl	42b1c0 <wcrtomb@plt+0x265a0>
  40de8c:	ldr	x1, [sp, #56]
  40de90:	cmp	x1, x0
  40de94:	b.ne	40dde0 <wcrtomb@plt+0x91c0>  // b.any
  40de98:	b	40ddf0 <wcrtomb@plt+0x91d0>
  40de9c:	mov	w1, #0x3fffffff            	// #1073741823
  40dea0:	cmp	w0, w1
  40dea4:	b.le	40deec <wcrtomb@plt+0x92cc>
  40dea8:	mov	w3, #0xc0000000            	// #-1073741824
  40deac:	mov	w1, #0x6d01                	// #27905
  40deb0:	mov	x2, x21
  40deb4:	add	w0, w0, w3
  40deb8:	movk	w1, #0x4008, lsl #16
  40debc:	bl	42b320 <wcrtomb@plt+0x26700>
  40dec0:	mvn	w0, w0
  40dec4:	lsr	w0, w0, #31
  40dec8:	cbnz	w0, 40de30 <wcrtomb@plt+0x9210>
  40decc:	ldr	w0, [x20, #920]
  40ded0:	ldr	x21, [sp, #32]
  40ded4:	b	40dd98 <wcrtomb@plt+0x9178>
  40ded8:	mov	w2, #0x0                   	// #0
  40dedc:	str	x1, [sp, #56]
  40dee0:	bl	4041d0 <lseek@plt>
  40dee4:	ldr	x1, [sp, #56]
  40dee8:	b	40de90 <wcrtomb@plt+0x9270>
  40deec:	mov	x1, #0x6d01                	// #27905
  40def0:	mov	x2, x21
  40def4:	movk	x1, #0x4008, lsl #16
  40def8:	bl	404bd0 <ioctl@plt>
  40defc:	mvn	w0, w0
  40df00:	lsr	w0, w0, #31
  40df04:	b	40dec8 <wcrtomb@plt+0x92a8>
  40df08:	stp	x29, x30, [sp, #-64]!
  40df0c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40df10:	mov	x29, sp
  40df14:	stp	x21, x22, [sp, #32]
  40df18:	add	x21, x1, #0x7b8
  40df1c:	stp	x19, x20, [sp, #16]
  40df20:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40df24:	mov	w19, w0
  40df28:	ldrb	w0, [x21, #8]
  40df2c:	ldr	x1, [x1, #1976]
  40df30:	ldr	x22, [x20, #3928]
  40df34:	str	x1, [x20, #3928]
  40df38:	cbnz	w0, 40dfb4 <wcrtomb@plt+0x9394>
  40df3c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40df40:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40df44:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40df48:	ldr	x1, [x1, #3896]
  40df4c:	ldr	x2, [x2, #3976]
  40df50:	ldr	x0, [x0, #3880]
  40df54:	add	x1, x1, x2
  40df58:	subs	x0, x1, x0
  40df5c:	b.eq	40df64 <wcrtomb@plt+0x9344>  // b.none
  40df60:	bl	40dd10 <wcrtomb@plt+0x90f0>
  40df64:	bl	408138 <wcrtomb@plt+0x3518>
  40df68:	str	x22, [x20, #3928]
  40df6c:	cbz	w19, 40dfa0 <wcrtomb@plt+0x9380>
  40df70:	ldrb	w0, [x21, #8]
  40df74:	cbnz	w0, 40dfa0 <wcrtomb@plt+0x9380>
  40df78:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40df7c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40df80:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40df84:	ldr	x0, [x0, #3896]
  40df88:	ldr	x2, [x2, #3976]
  40df8c:	ldr	x1, [x1, #3880]
  40df90:	add	x0, x0, x2
  40df94:	subs	x0, x1, x0
  40df98:	b.eq	40dfa0 <wcrtomb@plt+0x9380>  // b.none
  40df9c:	bl	40dd10 <wcrtomb@plt+0x90f0>
  40dfa0:	str	wzr, [x21, #12]
  40dfa4:	ldp	x19, x20, [sp, #16]
  40dfa8:	ldp	x21, x22, [sp, #32]
  40dfac:	ldp	x29, x30, [sp], #64
  40dfb0:	ret
  40dfb4:	mov	w0, #0x1                   	// #1
  40dfb8:	str	x23, [sp, #48]
  40dfbc:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  40dfc0:	str	w0, [x23, #920]
  40dfc4:	bl	408138 <wcrtomb@plt+0x3518>
  40dfc8:	str	wzr, [x23, #920]
  40dfcc:	ldr	x23, [sp, #48]
  40dfd0:	b	40df68 <wcrtomb@plt+0x9348>
  40dfd4:	nop
  40dfd8:	cbz	x1, 40e06c <wcrtomb@plt+0x944c>
  40dfdc:	stp	x29, x30, [sp, #-64]!
  40dfe0:	mov	x29, sp
  40dfe4:	stp	x19, x20, [sp, #16]
  40dfe8:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40dfec:	mov	x19, x0
  40dff0:	add	x20, x20, #0x7b8
  40dff4:	stp	x21, x22, [sp, #32]
  40dff8:	add	x22, x0, x1, lsl #9
  40dffc:	str	x23, [sp, #48]
  40e000:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  40e004:	add	x23, x23, #0x2b4
  40e008:	b	40e014 <wcrtomb@plt+0x93f4>
  40e00c:	cmp	x22, x19
  40e010:	b.eq	40e058 <wcrtomb@plt+0x9438>  // b.none
  40e014:	ldr	w3, [x20, #12]
  40e018:	mov	x1, x19
  40e01c:	ldr	x0, [x20]
  40e020:	add	w21, w3, #0x1
  40e024:	sbfiz	x3, x3, #9, #32
  40e028:	mov	x2, #0x200                 	// #512
  40e02c:	add	x0, x0, x3
  40e030:	str	w21, [x20, #12]
  40e034:	add	x19, x19, #0x200
  40e038:	bl	403f70 <memcpy@plt>
  40e03c:	ldr	w0, [x23]
  40e040:	cmp	w21, w0
  40e044:	b.ne	40e00c <wcrtomb@plt+0x93ec>  // b.any
  40e048:	mov	w0, #0x1                   	// #1
  40e04c:	bl	40df08 <wcrtomb@plt+0x92e8>
  40e050:	cmp	x22, x19
  40e054:	b.ne	40e014 <wcrtomb@plt+0x93f4>  // b.any
  40e058:	ldp	x19, x20, [sp, #16]
  40e05c:	ldp	x21, x22, [sp, #32]
  40e060:	ldr	x23, [sp, #48]
  40e064:	ldp	x29, x30, [sp], #64
  40e068:	ret
  40e06c:	ret
  40e070:	stp	x29, x30, [sp, #-128]!
  40e074:	mov	x29, sp
  40e078:	stp	x19, x20, [sp, #16]
  40e07c:	stp	x21, x22, [sp, #32]
  40e080:	stp	x23, x24, [sp, #48]
  40e084:	stp	x25, x26, [sp, #64]
  40e088:	bl	41dd58 <wcrtomb@plt+0x19138>
  40e08c:	mov	w0, #0x2                   	// #2
  40e090:	bl	408150 <wcrtomb@plt+0x3530>
  40e094:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40e098:	ldr	x0, [x0, #632]
  40e09c:	ldr	x1, [x0]
  40e0a0:	ldrb	w0, [x1]
  40e0a4:	subs	w0, w0, #0x2d
  40e0a8:	b.ne	40e0b0 <wcrtomb@plt+0x9490>  // b.any
  40e0ac:	ldrb	w0, [x1, #1]
  40e0b0:	cmp	w0, #0x0
  40e0b4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e0b8:	add	x19, x1, #0x7b8
  40e0bc:	cset	w0, eq  // eq = none
  40e0c0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e0c4:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  40e0c8:	add	x23, x1, #0xfb0
  40e0cc:	add	x21, x21, #0x28
  40e0d0:	mov	x1, x21
  40e0d4:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  40e0d8:	adrp	x25, 454000 <_obstack_memory_used@@Base+0x11e10>
  40e0dc:	mov	w2, #0x1                   	// #1
  40e0e0:	add	x24, x24, #0x15
  40e0e4:	add	x25, x25, #0xd60
  40e0e8:	mov	w22, #0x0                   	// #0
  40e0ec:	strb	w0, [x19, #8]
  40e0f0:	mov	x0, x23
  40e0f4:	bl	418628 <wcrtomb@plt+0x13a08>
  40e0f8:	mov	w20, w0
  40e0fc:	cmp	w0, #0x3
  40e100:	b.eq	40e210 <wcrtomb@plt+0x95f0>  // b.none
  40e104:	b.hi	40e150 <wcrtomb@plt+0x9530>  // b.pmore
  40e108:	cmp	w0, #0x2
  40e10c:	b.eq	40e228 <wcrtomb@plt+0x9608>  // b.none
  40e110:	cbz	w0, 40e52c <wcrtomb@plt+0x990c>
  40e114:	ldr	x0, [x21, #8]
  40e118:	bl	41ea80 <wcrtomb@plt+0x19e60>
  40e11c:	cbz	x0, 40e610 <wcrtomb@plt+0x99f0>
  40e120:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40e124:	ldr	x1, [x0, #48]
  40e128:	ldr	x2, [x2, #704]
  40e12c:	add	x1, x1, #0x1
  40e130:	str	x1, [x0, #48]
  40e134:	cbnz	x2, 40e604 <wcrtomb@plt+0x99e4>
  40e138:	cmp	x1, #0x0
  40e13c:	cset	w0, eq  // eq = none
  40e140:	cbnz	w0, 40e610 <wcrtomb@plt+0x99f0>
  40e144:	mov	w20, #0x1                   	// #1
  40e148:	stp	x27, x28, [sp, #80]
  40e14c:	b	40e22c <wcrtomb@plt+0x960c>
  40e150:	cmp	w0, #0x4
  40e154:	b.eq	40e620 <wcrtomb@plt+0x9a00>  // b.none
  40e158:	cmp	w0, #0x5
  40e15c:	b.ne	40e1f0 <wcrtomb@plt+0x95d0>  // b.any
  40e160:	ldr	x0, [x23]
  40e164:	bl	405b90 <wcrtomb@plt+0xf70>
  40e168:	cmp	w22, #0x3
  40e16c:	b.hi	40e524 <wcrtomb@plt+0x9904>  // b.pmore
  40e170:	cbnz	w22, 40e1b0 <wcrtomb@plt+0x9590>
  40e174:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40e178:	add	x22, x0, #0x3b8
  40e17c:	ldr	x0, [x0, #952]
  40e180:	cbz	x0, 40e188 <wcrtomb@plt+0x9568>
  40e184:	blr	x0
  40e188:	mov	w2, #0x5                   	// #5
  40e18c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  40e190:	mov	x0, #0x0                   	// #0
  40e194:	add	x1, x1, #0xca0
  40e198:	bl	4049c0 <dcgettext@plt>
  40e19c:	mov	x2, x0
  40e1a0:	mov	w1, #0x0                   	// #0
  40e1a4:	mov	w0, #0x0                   	// #0
  40e1a8:	bl	404050 <error@plt>
  40e1ac:	b	40e1b8 <wcrtomb@plt+0x9598>
  40e1b0:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  40e1b4:	add	x22, x22, #0x3b8
  40e1b8:	ldr	x0, [x22]
  40e1bc:	cbz	x0, 40e1c4 <wcrtomb@plt+0x95a4>
  40e1c0:	blr	x0
  40e1c4:	mov	x1, x25
  40e1c8:	mov	w2, #0x5                   	// #5
  40e1cc:	mov	x0, #0x0                   	// #0
  40e1d0:	bl	4049c0 <dcgettext@plt>
  40e1d4:	mov	w1, #0x0                   	// #0
  40e1d8:	mov	x2, x0
  40e1dc:	mov	w0, #0x0                   	// #0
  40e1e0:	bl	404050 <error@plt>
  40e1e4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e1e8:	mov	w1, #0x2                   	// #2
  40e1ec:	str	w1, [x0, #3400]
  40e1f0:	mov	w22, w20
  40e1f4:	mov	x1, x21
  40e1f8:	mov	x0, x23
  40e1fc:	mov	w2, #0x1                   	// #1
  40e200:	bl	418628 <wcrtomb@plt+0x13a08>
  40e204:	mov	w20, w0
  40e208:	cmp	w0, #0x3
  40e20c:	b.ne	40e104 <wcrtomb@plt+0x94e4>  // b.any
  40e210:	ldrb	w0, [x24]
  40e214:	cbz	w0, 40e620 <wcrtomb@plt+0x9a00>
  40e218:	ldr	x0, [x23]
  40e21c:	mov	w22, w20
  40e220:	bl	405b90 <wcrtomb@plt+0xf70>
  40e224:	b	40e1f4 <wcrtomb@plt+0x95d4>
  40e228:	stp	x27, x28, [sp, #80]
  40e22c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e230:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40e234:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e238:	ldr	x1, [x1, #3880]
  40e23c:	ldr	x0, [x0, #864]
  40e240:	sub	x1, x1, #0x1
  40e244:	str	x1, [x2, #3976]
  40e248:	bl	440f48 <argp_parse@@Base+0xd060>
  40e24c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e250:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e254:	ldr	x5, [x1, #3952]
  40e258:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e25c:	strb	wzr, [x2, #3936]
  40e260:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e264:	ldr	x1, [x1, #3928]
  40e268:	str	x0, [x2, #1976]
  40e26c:	sub	x2, x5, x1
  40e270:	asr	x3, x2, #9
  40e274:	str	w3, [x19, #12]
  40e278:	cbnz	w3, 40e674 <wcrtomb@plt+0x9a54>
  40e27c:	cmp	w20, #0x1
  40e280:	b.eq	40e72c <wcrtomb@plt+0x9b0c>  // b.none
  40e284:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e288:	str	x0, [sp, #104]
  40e28c:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  40e290:	add	x20, x20, #0x2b4
  40e294:	ldr	x0, [x0, #3888]
  40e298:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  40e29c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e2a0:	add	x2, x2, #0xd78
  40e2a4:	add	x1, x1, #0xd48
  40e2a8:	stp	x2, x1, [sp, #112]
  40e2ac:	cmp	x5, x0
  40e2b0:	b.eq	40e51c <wcrtomb@plt+0x98fc>  // b.none
  40e2b4:	mov	x1, x21
  40e2b8:	mov	w2, #0x0                   	// #0
  40e2bc:	mov	x0, x23
  40e2c0:	bl	418628 <wcrtomb@plt+0x13a08>
  40e2c4:	mov	w22, w0
  40e2c8:	mov	x0, x21
  40e2cc:	bl	413e28 <wcrtomb@plt+0xf208>
  40e2d0:	cmp	w22, #0x3
  40e2d4:	b.eq	40e4ac <wcrtomb@plt+0x988c>  // b.none
  40e2d8:	sub	w0, w22, #0x3
  40e2dc:	cmp	w0, #0x1
  40e2e0:	b.ls	40e688 <wcrtomb@plt+0x9a68>  // b.plast
  40e2e4:	cmp	w22, #0x5
  40e2e8:	b.eq	40e4c0 <wcrtomb@plt+0x98a0>  // b.none
  40e2ec:	ldr	x0, [x21, #8]
  40e2f0:	bl	41ea80 <wcrtomb@plt+0x19e60>
  40e2f4:	cbz	x0, 40e31c <wcrtomb@plt+0x96fc>
  40e2f8:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40e2fc:	ldr	x1, [x0, #48]
  40e300:	ldr	x2, [x2, #704]
  40e304:	add	x1, x1, #0x1
  40e308:	str	x1, [x0, #48]
  40e30c:	cbnz	x2, 40e568 <wcrtomb@plt+0x9948>
  40e310:	cmp	x1, #0x0
  40e314:	cset	w0, ne  // ne = any
  40e318:	cbnz	w0, 40e574 <wcrtomb@plt+0x9954>
  40e31c:	ldr	x27, [x21, #352]
  40e320:	cbz	x27, 40e534 <wcrtomb@plt+0x9914>
  40e324:	ldr	x28, [x21, #360]
  40e328:	lsr	x1, x27, #9
  40e32c:	and	x25, x27, #0x1ff
  40e330:	mov	x0, x28
  40e334:	bl	40dfd8 <wcrtomb@plt+0x93b8>
  40e338:	ldr	w22, [x19, #12]
  40e33c:	and	x1, x27, #0xfffffffffffffe00
  40e340:	ldr	x27, [x19]
  40e344:	add	x1, x28, x1
  40e348:	sbfiz	x4, x22, #9, #32
  40e34c:	mov	x2, x25
  40e350:	add	x4, x27, x4
  40e354:	add	w22, w22, #0x1
  40e358:	mov	x0, x4
  40e35c:	bl	403f70 <memcpy@plt>
  40e360:	add	x0, x0, x25
  40e364:	mov	x1, #0x200                 	// #512
  40e368:	sub	x2, x1, x25
  40e36c:	mov	w1, #0x0                   	// #0
  40e370:	bl	404410 <memset@plt>
  40e374:	ldr	w0, [x20]
  40e378:	str	w22, [x19, #12]
  40e37c:	cmp	w22, w0
  40e380:	b.eq	40e718 <wcrtomb@plt+0x9af8>  // b.none
  40e384:	ldr	x25, [x23]
  40e388:	sbfiz	x0, x22, #9, #32
  40e38c:	add	x0, x27, x0
  40e390:	mov	x2, #0x200                 	// #512
  40e394:	mov	x1, x25
  40e398:	bl	403f70 <memcpy@plt>
  40e39c:	ldr	x2, [x21, #136]
  40e3a0:	mov	x0, x25
  40e3a4:	add	w22, w22, #0x1
  40e3a8:	str	w22, [x19, #12]
  40e3ac:	add	x7, x2, #0x3fe
  40e3b0:	adds	x2, x2, #0x1ff
  40e3b4:	csel	x2, x7, x2, mi  // mi = first
  40e3b8:	asr	x27, x2, #9
  40e3bc:	bl	405b90 <wcrtomb@plt+0xf70>
  40e3c0:	ldr	w1, [x19, #12]
  40e3c4:	ldr	w0, [x20]
  40e3c8:	cmp	w1, w0
  40e3cc:	b.eq	40e668 <wcrtomb@plt+0x9a48>  // b.none
  40e3d0:	ldr	x1, [sp, #104]
  40e3d4:	ldr	x0, [x1, #3888]
  40e3d8:	add	x1, x1, #0xf30
  40e3dc:	str	x1, [sp, #96]
  40e3e0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e3e4:	add	x28, x1, #0xf70
  40e3e8:	ldr	x5, [x1, #3952]
  40e3ec:	sub	x6, x0, x5
  40e3f0:	sbfx	x1, x6, #9, #32
  40e3f4:	asr	x6, x6, #9
  40e3f8:	cmp	x1, x27
  40e3fc:	csel	w25, w6, w27, le
  40e400:	cbnz	x27, 40e414 <wcrtomb@plt+0x97f4>
  40e404:	b	40e2ac <wcrtomb@plt+0x968c>
  40e408:	ldr	x0, [sp, #96]
  40e40c:	ldr	x0, [x0]
  40e410:	cbz	x27, 40e2ac <wcrtomb@plt+0x968c>
  40e414:	cmp	x5, x0
  40e418:	b.eq	40e48c <wcrtomb@plt+0x986c>  // b.none
  40e41c:	ldr	w3, [x20]
  40e420:	ldr	w22, [x19, #12]
  40e424:	sub	w3, w3, w22
  40e428:	cmp	w3, w25
  40e42c:	csel	w26, w3, w25, le
  40e430:	cbz	w26, 40e768 <wcrtomb@plt+0x9b48>
  40e434:	ldr	x5, [x19]
  40e438:	lsl	w2, w26, #9
  40e43c:	ldr	x1, [x28]
  40e440:	sxtw	x24, w2
  40e444:	sbfiz	x0, x22, #9, #32
  40e448:	mov	x2, x24
  40e44c:	add	x0, x5, x0
  40e450:	sub	x27, x27, w26, sxtw
  40e454:	bl	403f70 <memcpy@plt>
  40e458:	sub	w25, w25, w26
  40e45c:	ldr	x5, [x28]
  40e460:	add	w4, w22, w26
  40e464:	ldr	w0, [x20]
  40e468:	add	x5, x5, x24
  40e46c:	str	x5, [x28]
  40e470:	str	w4, [x19, #12]
  40e474:	cmp	w4, w0
  40e478:	b.ne	40e408 <wcrtomb@plt+0x97e8>  // b.any
  40e47c:	mov	w0, #0x1                   	// #1
  40e480:	bl	40df08 <wcrtomb@plt+0x92e8>
  40e484:	ldr	x5, [x28]
  40e488:	b	40e408 <wcrtomb@plt+0x97e8>
  40e48c:	bl	408128 <wcrtomb@plt+0x3508>
  40e490:	ldr	w3, [x20]
  40e494:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e498:	ldr	x0, [x0, #3928]
  40e49c:	cmp	x27, w3, sxtw
  40e4a0:	csel	w25, w3, w27, ge  // ge = tcont
  40e4a4:	str	x0, [x28]
  40e4a8:	b	40e420 <wcrtomb@plt+0x9800>
  40e4ac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40e4b0:	ldrb	w0, [x0, #21]
  40e4b4:	cbz	w0, 40e2d8 <wcrtomb@plt+0x96b8>
  40e4b8:	ldr	x0, [x23]
  40e4bc:	b	40e500 <wcrtomb@plt+0x98e0>
  40e4c0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40e4c4:	ldr	x0, [x0, #952]
  40e4c8:	cbz	x0, 40e4d0 <wcrtomb@plt+0x98b0>
  40e4cc:	blr	x0
  40e4d0:	ldr	x1, [sp, #112]
  40e4d4:	mov	w2, #0x5                   	// #5
  40e4d8:	mov	x0, #0x0                   	// #0
  40e4dc:	bl	4049c0 <dcgettext@plt>
  40e4e0:	mov	x2, x0
  40e4e4:	mov	w1, #0x0                   	// #0
  40e4e8:	mov	w0, #0x0                   	// #0
  40e4ec:	bl	404050 <error@plt>
  40e4f0:	ldr	x2, [sp, #120]
  40e4f4:	mov	w1, #0x2                   	// #2
  40e4f8:	ldr	x0, [x23]
  40e4fc:	str	w1, [x2]
  40e500:	bl	405b90 <wcrtomb@plt+0xf70>
  40e504:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e508:	ldr	x5, [x0, #3952]
  40e50c:	ldr	x0, [sp, #104]
  40e510:	ldr	x0, [x0, #3888]
  40e514:	cmp	x5, x0
  40e518:	b.ne	40e2b4 <wcrtomb@plt+0x9694>  // b.any
  40e51c:	bl	405ee0 <wcrtomb@plt+0x12c0>
  40e520:	b	40e2b4 <wcrtomb@plt+0x9694>
  40e524:	cmp	w22, #0x4
  40e528:	b.ne	40e1f0 <wcrtomb@plt+0x95d0>  // b.any
  40e52c:	stp	x27, x28, [sp, #80]
  40e530:	bl	404650 <abort@plt>
  40e534:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e538:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e53c:	ldr	x1, [x1, #4008]
  40e540:	ldr	x0, [x0, #4000]
  40e544:	bl	40dfd8 <wcrtomb@plt+0x93b8>
  40e548:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e54c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e550:	ldr	x1, [x1, #4024]
  40e554:	ldr	x0, [x0, #4032]
  40e558:	bl	40dfd8 <wcrtomb@plt+0x93b8>
  40e55c:	ldr	w22, [x19, #12]
  40e560:	ldr	x27, [x19]
  40e564:	b	40e384 <wcrtomb@plt+0x9764>
  40e568:	cmp	x1, x2
  40e56c:	cset	w0, eq  // eq = none
  40e570:	cbz	w0, 40e31c <wcrtomb@plt+0x96fc>
  40e574:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e578:	ldr	x0, [x0, #4016]
  40e57c:	bl	405b90 <wcrtomb@plt+0xf70>
  40e580:	ldr	x0, [sp, #104]
  40e584:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e588:	ldr	x3, [x21, #136]
  40e58c:	ldr	x2, [x1, #3952]
  40e590:	add	x4, x3, #0x3fe
  40e594:	ldr	x0, [x0, #3888]
  40e598:	adds	x3, x3, #0x1ff
  40e59c:	csel	x3, x4, x3, mi  // mi = first
  40e5a0:	sub	x1, x0, x2
  40e5a4:	asr	x5, x3, #9
  40e5a8:	asr	x1, x1, #9
  40e5ac:	cmp	x1, x3, asr #9
  40e5b0:	b.gt	40e5f4 <wcrtomb@plt+0x99d4>
  40e5b4:	adrp	x8, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e5b8:	add	x28, x8, #0xf70
  40e5bc:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e5c0:	add	x0, x22, #0xf30
  40e5c4:	str	x0, [sp, #96]
  40e5c8:	sub	x5, x5, x1
  40e5cc:	stp	x5, x5, [sp, #112]
  40e5d0:	bl	405ee0 <wcrtomb@plt+0x12c0>
  40e5d4:	ldr	x0, [sp, #96]
  40e5d8:	ldr	x2, [x28]
  40e5dc:	ldr	x0, [x0]
  40e5e0:	ldr	x5, [sp, #112]
  40e5e4:	sub	x1, x0, x2
  40e5e8:	cmp	x5, x1, asr #9
  40e5ec:	asr	x1, x1, #9
  40e5f0:	b.ge	40e5c8 <wcrtomb@plt+0x99a8>  // b.tcont
  40e5f4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e5f8:	add	x5, x2, x5, lsl #9
  40e5fc:	str	x5, [x1, #3952]
  40e600:	b	40e298 <wcrtomb@plt+0x9678>
  40e604:	cmp	x1, x2
  40e608:	cset	w0, ne  // ne = any
  40e60c:	cbz	w0, 40e144 <wcrtomb@plt+0x9524>
  40e610:	mov	w20, #0x1                   	// #1
  40e614:	bl	41a238 <wcrtomb@plt+0x15618>
  40e618:	mov	w22, w20
  40e61c:	b	40e1f4 <wcrtomb@plt+0x95d4>
  40e620:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e624:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40e628:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e62c:	ldr	x1, [x1, #3880]
  40e630:	ldr	x0, [x0, #864]
  40e634:	sub	x1, x1, #0x1
  40e638:	str	x1, [x2, #3976]
  40e63c:	bl	440f48 <argp_parse@@Base+0xd060>
  40e640:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e644:	str	x0, [x1, #1976]
  40e648:	bl	4047b0 <free@plt>
  40e64c:	bl	4066c8 <wcrtomb@plt+0x1aa8>
  40e650:	ldp	x19, x20, [sp, #16]
  40e654:	ldp	x21, x22, [sp, #32]
  40e658:	ldp	x23, x24, [sp, #48]
  40e65c:	ldp	x25, x26, [sp, #64]
  40e660:	ldp	x29, x30, [sp], #128
  40e664:	b	41e400 <wcrtomb@plt+0x197e0>
  40e668:	mov	w0, #0x1                   	// #1
  40e66c:	bl	40df08 <wcrtomb@plt+0x92e8>
  40e670:	b	40e3d0 <wcrtomb@plt+0x97b0>
  40e674:	sxtw	x2, w2
  40e678:	str	x5, [sp, #96]
  40e67c:	bl	403f70 <memcpy@plt>
  40e680:	ldr	x5, [sp, #96]
  40e684:	b	40e27c <wcrtomb@plt+0x965c>
  40e688:	mov	w21, #0x0                   	// #0
  40e68c:	nop
  40e690:	ldr	w3, [x19, #12]
  40e694:	mov	w1, #0x0                   	// #0
  40e698:	ldr	w2, [x20]
  40e69c:	ldr	x0, [x19]
  40e6a0:	sub	w2, w2, w3
  40e6a4:	sbfiz	x3, x3, #9, #32
  40e6a8:	add	w21, w21, w2
  40e6ac:	lsl	w2, w2, #9
  40e6b0:	add	x0, x0, x3
  40e6b4:	sxtw	x2, w2
  40e6b8:	bl	404410 <memset@plt>
  40e6bc:	cmp	w21, #0x1
  40e6c0:	cset	w0, le
  40e6c4:	bl	40df08 <wcrtomb@plt+0x92e8>
  40e6c8:	cmp	w21, #0x1
  40e6cc:	b.le	40e690 <wcrtomb@plt+0x9a70>
  40e6d0:	ldrb	w0, [x19, #8]
  40e6d4:	cbnz	w0, 40e6ec <wcrtomb@plt+0x9acc>
  40e6d8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40e6dc:	mov	w1, #0x3fffffff            	// #1073741823
  40e6e0:	ldr	w0, [x0, #920]
  40e6e4:	cmp	w0, w1
  40e6e8:	b.le	40e740 <wcrtomb@plt+0x9b20>
  40e6ec:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e6f0:	ldp	x27, x28, [sp, #80]
  40e6f4:	ldr	x0, [x0, #1976]
  40e6f8:	bl	4047b0 <free@plt>
  40e6fc:	bl	4066c8 <wcrtomb@plt+0x1aa8>
  40e700:	ldp	x19, x20, [sp, #16]
  40e704:	ldp	x21, x22, [sp, #32]
  40e708:	ldp	x23, x24, [sp, #48]
  40e70c:	ldp	x25, x26, [sp, #64]
  40e710:	ldp	x29, x30, [sp], #128
  40e714:	b	41e400 <wcrtomb@plt+0x197e0>
  40e718:	mov	w0, #0x1                   	// #1
  40e71c:	bl	40df08 <wcrtomb@plt+0x92e8>
  40e720:	ldr	w22, [x19, #12]
  40e724:	ldr	x27, [x19]
  40e728:	b	40e384 <wcrtomb@plt+0x9764>
  40e72c:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  40e730:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e734:	add	x20, x20, #0x2b4
  40e738:	str	x0, [sp, #104]
  40e73c:	b	40e574 <wcrtomb@plt+0x9954>
  40e740:	bl	4218a8 <wcrtomb@plt+0x1cc88>
  40e744:	cbnz	w0, 40e754 <wcrtomb@plt+0x9b34>
  40e748:	ldr	x0, [x19]
  40e74c:	ldp	x27, x28, [sp, #80]
  40e750:	b	40e648 <wcrtomb@plt+0x9a28>
  40e754:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40e758:	ldr	x0, [x0, #632]
  40e75c:	ldr	x0, [x0]
  40e760:	bl	42a2a8 <wcrtomb@plt+0x25688>
  40e764:	b	40e748 <wcrtomb@plt+0x9b28>
  40e768:	bl	404650 <abort@plt>
  40e76c:	nop
  40e770:	stp	x29, x30, [sp, #-16]!
  40e774:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e778:	mov	x29, sp
  40e77c:	ldr	x0, [x0, #3984]
  40e780:	cbz	x0, 40e788 <wcrtomb@plt+0x9b68>
  40e784:	blr	x0
  40e788:	mov	w2, #0x5                   	// #5
  40e78c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40e790:	mov	x0, #0x0                   	// #0
  40e794:	add	x1, x1, #0xda0
  40e798:	bl	4049c0 <dcgettext@plt>
  40e79c:	mov	x2, x0
  40e7a0:	mov	w1, #0x0                   	// #0
  40e7a4:	mov	w0, #0x2                   	// #2
  40e7a8:	bl	404050 <error@plt>
  40e7ac:	bl	404650 <abort@plt>
  40e7b0:	stp	x29, x30, [sp, #-16]!
  40e7b4:	mov	w2, #0x5                   	// #5
  40e7b8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40e7bc:	mov	x29, sp
  40e7c0:	add	x1, x1, #0xdc8
  40e7c4:	mov	x0, #0x0                   	// #0
  40e7c8:	bl	4049c0 <dcgettext@plt>
  40e7cc:	mov	x3, x0
  40e7d0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  40e7d4:	add	x2, x2, #0xb68
  40e7d8:	mov	w1, #0x0                   	// #0
  40e7dc:	mov	w0, #0x0                   	// #0
  40e7e0:	bl	404050 <error@plt>
  40e7e4:	bl	40e770 <wcrtomb@plt+0x9b50>
  40e7e8:	cmp	x0, #0x0
  40e7ec:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40e7f0:	add	x1, x1, #0x7c8
  40e7f4:	mov	w2, #0x8000000             	// #134217728
  40e7f8:	csel	x0, x1, x0, eq  // eq = none
  40e7fc:	str	w2, [x0]
  40e800:	ret
  40e804:	nop
  40e808:	stp	x29, x30, [sp, #-48]!
  40e80c:	mov	x29, sp
  40e810:	stp	x19, x20, [sp, #16]
  40e814:	mov	x19, x1
  40e818:	mov	w20, w2
  40e81c:	str	x21, [sp, #32]
  40e820:	mov	x21, x0
  40e824:	bl	404740 <__ctype_b_loc@plt>
  40e828:	ldr	x4, [x0]
  40e82c:	b	40e834 <wcrtomb@plt+0x9c14>
  40e830:	add	x19, x19, #0x1
  40e834:	ldrb	w1, [x19]
  40e838:	ubfiz	x3, x1, #1, #8
  40e83c:	ldrh	w3, [x4, x3]
  40e840:	tbnz	w3, #13, 40e830 <wcrtomb@plt+0x9c10>
  40e844:	cmp	w1, #0x23
  40e848:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40e84c:	b.eq	40e8e4 <wcrtomb@plt+0x9cc4>  // b.none
  40e850:	cmp	w1, #0x21
  40e854:	b.eq	40e8c0 <wcrtomb@plt+0x9ca0>  // b.none
  40e858:	ldrb	w0, [x19]
  40e85c:	cmp	w0, #0x52
  40e860:	b.eq	40e880 <wcrtomb@plt+0x9c60>  // b.none
  40e864:	mov	w2, w20
  40e868:	mov	x1, x19
  40e86c:	mov	x0, x21
  40e870:	ldp	x19, x20, [sp, #16]
  40e874:	ldr	x21, [sp, #32]
  40e878:	ldp	x29, x30, [sp], #48
  40e87c:	b	435e28 <argp_parse@@Base+0x1f40>
  40e880:	ldrb	w0, [x19, #1]
  40e884:	cmp	w0, #0x45
  40e888:	b.ne	40e864 <wcrtomb@plt+0x9c44>  // b.any
  40e88c:	ldrb	w0, [x19, #2]
  40e890:	cmp	w0, #0x3a
  40e894:	b.ne	40e864 <wcrtomb@plt+0x9c44>  // b.any
  40e898:	and	w20, w20, #0xefffffff
  40e89c:	add	x19, x19, #0x3
  40e8a0:	orr	w20, w20, #0x8000000
  40e8a4:	mov	x1, x19
  40e8a8:	mov	w2, w20
  40e8ac:	mov	x0, x21
  40e8b0:	ldp	x19, x20, [sp, #16]
  40e8b4:	ldr	x21, [sp, #32]
  40e8b8:	ldp	x29, x30, [sp], #48
  40e8bc:	b	435e28 <argp_parse@@Base+0x1f40>
  40e8c0:	ldrb	w0, [x19, #1]
  40e8c4:	cmp	w0, #0x21
  40e8c8:	b.eq	40e8f4 <wcrtomb@plt+0x9cd4>  // b.none
  40e8cc:	ldrb	w0, [x19, #1]
  40e8d0:	add	x19, x19, #0x1
  40e8d4:	orr	w20, w20, #0x20000000
  40e8d8:	cmp	w0, #0x52
  40e8dc:	b.ne	40e864 <wcrtomb@plt+0x9c44>  // b.any
  40e8e0:	b	40e880 <wcrtomb@plt+0x9c60>
  40e8e4:	ldp	x19, x20, [sp, #16]
  40e8e8:	ldr	x21, [sp, #32]
  40e8ec:	ldp	x29, x30, [sp], #48
  40e8f0:	ret
  40e8f4:	add	x19, x19, #0x2
  40e8f8:	b	40e858 <wcrtomb@plt+0x9c38>
  40e8fc:	nop
  40e900:	stp	x29, x30, [sp, #-48]!
  40e904:	mov	x29, sp
  40e908:	stp	x19, x20, [sp, #16]
  40e90c:	mov	x20, x0
  40e910:	mov	x19, x1
  40e914:	str	x21, [sp, #32]
  40e918:	mov	w21, w2
  40e91c:	bl	404740 <__ctype_b_loc@plt>
  40e920:	ldr	x4, [x0]
  40e924:	b	40e92c <wcrtomb@plt+0x9d0c>
  40e928:	add	x19, x19, #0x1
  40e92c:	ldrb	w1, [x19]
  40e930:	ubfiz	x3, x1, #1, #8
  40e934:	ldrh	w3, [x4, x3]
  40e938:	tbnz	w3, #13, 40e928 <wcrtomb@plt+0x9d08>
  40e93c:	cmp	w1, #0x23
  40e940:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40e944:	b.eq	40e994 <wcrtomb@plt+0x9d74>  // b.none
  40e948:	cmp	w1, #0x5c
  40e94c:	b.eq	40e96c <wcrtomb@plt+0x9d4c>  // b.none
  40e950:	mov	w2, w21
  40e954:	mov	x1, x19
  40e958:	mov	x0, x20
  40e95c:	ldp	x19, x20, [sp, #16]
  40e960:	ldr	x21, [sp, #32]
  40e964:	ldp	x29, x30, [sp], #48
  40e968:	b	435e28 <argp_parse@@Base+0x1f40>
  40e96c:	ldrb	w0, [x19, #1]
  40e970:	mov	w2, w21
  40e974:	ldr	x21, [sp, #32]
  40e978:	cmp	w0, #0x23
  40e97c:	cinc	x19, x19, eq  // eq = none
  40e980:	mov	x0, x20
  40e984:	mov	x1, x19
  40e988:	ldp	x19, x20, [sp, #16]
  40e98c:	ldp	x29, x30, [sp], #48
  40e990:	b	435e28 <argp_parse@@Base+0x1f40>
  40e994:	ldp	x19, x20, [sp, #16]
  40e998:	ldr	x21, [sp, #32]
  40e99c:	ldp	x29, x30, [sp], #48
  40e9a0:	ret
  40e9a4:	nop
  40e9a8:	stp	x29, x30, [sp, #-64]!
  40e9ac:	mov	x29, sp
  40e9b0:	stp	x19, x20, [sp, #16]
  40e9b4:	mov	x19, x1
  40e9b8:	stp	x21, x22, [sp, #32]
  40e9bc:	mov	x22, x0
  40e9c0:	mov	w21, w2
  40e9c4:	stp	x23, x24, [sp, #48]
  40e9c8:	mov	x23, x3
  40e9cc:	bl	404740 <__ctype_b_loc@plt>
  40e9d0:	ldr	x20, [x0]
  40e9d4:	b	40e9dc <wcrtomb@plt+0x9dbc>
  40e9d8:	add	x19, x19, #0x1
  40e9dc:	ldrb	w1, [x19]
  40e9e0:	ubfiz	x4, x1, #1, #8
  40e9e4:	ldrh	w4, [x20, x4]
  40e9e8:	tbnz	w4, #13, 40e9d8 <wcrtomb@plt+0x9db8>
  40e9ec:	cmp	w1, #0x23
  40e9f0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40e9f4:	b.eq	40eaa0 <wcrtomb@plt+0x9e80>  // b.none
  40e9f8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40e9fc:	mov	x0, x19
  40ea00:	add	x1, x1, #0xde0
  40ea04:	mov	x2, #0x7                   	// #7
  40ea08:	bl	4043c0 <strncmp@plt>
  40ea0c:	cbz	w0, 40ea60 <wcrtomb@plt+0x9e40>
  40ea10:	mov	x0, x19
  40ea14:	bl	403ff0 <strlen@plt>
  40ea18:	sub	x20, x0, #0x1
  40ea1c:	ldrb	w1, [x19, x20]
  40ea20:	cmp	w1, #0x2f
  40ea24:	b.eq	40eaec <wcrtomb@plt+0x9ecc>  // b.none
  40ea28:	ldr	w2, [x23]
  40ea2c:	and	w0, w21, #0xefffffff
  40ea30:	mov	w1, #0x8000000             	// #134217728
  40ea34:	and	w21, w21, #0xf7ffffff
  40ea38:	cmp	w2, w1
  40ea3c:	mov	x1, x19
  40ea40:	csel	w21, w21, w0, ne  // ne = any
  40ea44:	mov	x0, x22
  40ea48:	orr	w2, w2, w21
  40ea4c:	ldp	x19, x20, [sp, #16]
  40ea50:	ldp	x21, x22, [sp, #32]
  40ea54:	ldp	x23, x24, [sp, #48]
  40ea58:	ldp	x29, x30, [sp], #64
  40ea5c:	b	435e28 <argp_parse@@Base+0x1f40>
  40ea60:	ldrb	w0, [x19, #7]
  40ea64:	add	x19, x19, #0x7
  40ea68:	ldrh	w0, [x20, x0, lsl #1]
  40ea6c:	tbnz	w0, #13, 40eab4 <wcrtomb@plt+0x9e94>
  40ea70:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40ea74:	mov	x0, x19
  40ea78:	add	x1, x1, #0xde8
  40ea7c:	bl	404710 <strcmp@plt>
  40ea80:	cbz	w0, 40ead0 <wcrtomb@plt+0x9eb0>
  40ea84:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40ea88:	mov	x0, x19
  40ea8c:	add	x1, x1, #0xdf0
  40ea90:	bl	404710 <strcmp@plt>
  40ea94:	cbnz	w0, 40eaa0 <wcrtomb@plt+0x9e80>
  40ea98:	mov	w0, #0x10000000            	// #268435456
  40ea9c:	str	w0, [x23]
  40eaa0:	ldp	x19, x20, [sp, #16]
  40eaa4:	ldp	x21, x22, [sp, #32]
  40eaa8:	ldp	x23, x24, [sp, #48]
  40eaac:	ldp	x29, x30, [sp], #64
  40eab0:	ret
  40eab4:	ldrb	w0, [x19, #1]!
  40eab8:	ldrh	w0, [x20, x0, lsl #1]
  40eabc:	tbz	w0, #13, 40ea70 <wcrtomb@plt+0x9e50>
  40eac0:	ldrb	w0, [x19, #1]!
  40eac4:	ldrh	w0, [x20, x0, lsl #1]
  40eac8:	tbnz	w0, #13, 40eab4 <wcrtomb@plt+0x9e94>
  40eacc:	b	40ea70 <wcrtomb@plt+0x9e50>
  40ead0:	mov	w0, #0x8000000             	// #134217728
  40ead4:	str	w0, [x23]
  40ead8:	ldp	x19, x20, [sp, #16]
  40eadc:	ldp	x21, x22, [sp, #32]
  40eae0:	ldp	x23, x24, [sp, #48]
  40eae4:	ldp	x29, x30, [sp], #64
  40eae8:	ret
  40eaec:	bl	440f48 <argp_parse@@Base+0xd060>
  40eaf0:	mov	x24, x0
  40eaf4:	mov	x2, x20
  40eaf8:	mov	x1, x19
  40eafc:	bl	403f70 <memcpy@plt>
  40eb00:	mov	x19, x24
  40eb04:	mov	x0, x22
  40eb08:	mov	x1, x24
  40eb0c:	strb	wzr, [x24, x20]
  40eb10:	bl	435998 <argp_parse@@Base+0x1ab0>
  40eb14:	mov	w0, #0x8                   	// #8
  40eb18:	movk	w0, #0x400, lsl #16
  40eb1c:	orr	w21, w21, w0
  40eb20:	b	40ea28 <wcrtomb@plt+0x9e08>
  40eb24:	nop
  40eb28:	stp	x29, x30, [sp, #-288]!
  40eb2c:	mov	x29, sp
  40eb30:	stp	x19, x20, [sp, #16]
  40eb34:	mov	x20, x0
  40eb38:	mov	x0, x1
  40eb3c:	add	x1, sp, #0x38
  40eb40:	str	x21, [sp, #32]
  40eb44:	mov	w21, w2
  40eb48:	mov	w2, #0x844                 	// #2116
  40eb4c:	bl	42f1f0 <wcrtomb@plt+0x2a5d0>
  40eb50:	cbnz	w0, 40eb8c <wcrtomb@plt+0x9f6c>
  40eb54:	ldr	x0, [sp, #56]
  40eb58:	mov	x19, #0x0                   	// #0
  40eb5c:	cbz	x0, 40eb84 <wcrtomb@plt+0x9f64>
  40eb60:	ldr	x1, [sp, #64]
  40eb64:	mov	w2, w21
  40eb68:	mov	x0, x20
  40eb6c:	ldr	x1, [x1, x19, lsl #3]
  40eb70:	add	x19, x19, #0x1
  40eb74:	bl	435e28 <argp_parse@@Base+0x1f40>
  40eb78:	ldr	x1, [sp, #56]
  40eb7c:	cmp	x1, x19
  40eb80:	b.hi	40eb60 <wcrtomb@plt+0x9f40>  // b.pmore
  40eb84:	add	x0, sp, #0x38
  40eb88:	bl	42c108 <wcrtomb@plt+0x274e8>
  40eb8c:	ldp	x19, x20, [sp, #16]
  40eb90:	ldr	x21, [sp, #32]
  40eb94:	ldp	x29, x30, [sp], #288
  40eb98:	ret
  40eb9c:	nop
  40eba0:	stp	x29, x30, [sp, #-32]!
  40eba4:	mov	x29, sp
  40eba8:	stp	x19, x20, [sp, #16]
  40ebac:	mov	w20, w1
  40ebb0:	mov	x19, x0
  40ebb4:	bl	403ff0 <strlen@plt>
  40ebb8:	add	x0, x0, #0x10
  40ebbc:	bl	440f48 <argp_parse@@Base+0xd060>
  40ebc0:	mov	x1, x19
  40ebc4:	mov	x19, x0
  40ebc8:	add	x0, x0, #0xc
  40ebcc:	str	xzr, [x19]
  40ebd0:	str	w20, [x19, #8]
  40ebd4:	bl	404910 <strcpy@plt>
  40ebd8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40ebdc:	add	x0, x0, #0x7c8
  40ebe0:	ldr	x1, [x0, #8]
  40ebe4:	cbz	x1, 40ebfc <wcrtomb@plt+0x9fdc>
  40ebe8:	str	x19, [x1]
  40ebec:	str	x19, [x0, #8]
  40ebf0:	ldp	x19, x20, [sp, #16]
  40ebf4:	ldp	x29, x30, [sp], #32
  40ebf8:	ret
  40ebfc:	str	x19, [x0, #8]
  40ec00:	str	x19, [x0, #16]
  40ec04:	ldp	x19, x20, [sp, #16]
  40ec08:	ldp	x29, x30, [sp], #32
  40ec0c:	ret
  40ec10:	stp	x29, x30, [sp, #-96]!
  40ec14:	mov	x29, sp
  40ec18:	stp	x27, x28, [sp, #80]
  40ec1c:	ldr	x28, [x0, #416]
  40ec20:	cbz	x28, 40ec30 <wcrtomb@plt+0xa010>
  40ec24:	ldp	x27, x28, [sp, #80]
  40ec28:	ldp	x29, x30, [sp], #96
  40ec2c:	ret
  40ec30:	stp	x21, x22, [sp, #32]
  40ec34:	mov	x22, x0
  40ec38:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40ec3c:	stp	x19, x20, [sp, #16]
  40ec40:	ldr	x19, [x0, #2008]
  40ec44:	cbz	x19, 40ed20 <wcrtomb@plt+0xa100>
  40ec48:	adrp	x27, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40ec4c:	add	x27, x27, #0x7b8
  40ec50:	stp	x23, x24, [sp, #48]
  40ec54:	stp	x25, x26, [sp, #64]
  40ec58:	adrp	x26, 457000 <_obstack_memory_used@@Base+0x14e10>
  40ec5c:	mov	x25, #0x0                   	// #0
  40ec60:	add	x26, x26, #0xf28
  40ec64:	b	40ec70 <wcrtomb@plt+0xa050>
  40ec68:	ldr	x19, [x19]
  40ec6c:	cbz	x19, 40ed18 <wcrtomb@plt+0xa0f8>
  40ec70:	ldr	w0, [x22, #408]
  40ec74:	add	x20, x19, #0xc
  40ec78:	mov	x1, x20
  40ec7c:	mov	w3, #0x0                   	// #0
  40ec80:	mov	w2, #0x0                   	// #0
  40ec84:	bl	404aa0 <faccessat@plt>
  40ec88:	cbnz	w0, 40ec68 <wcrtomb@plt+0xa048>
  40ec8c:	mov	x1, x20
  40ec90:	mov	x0, x22
  40ec94:	mov	w2, #0x0                   	// #0
  40ec98:	bl	40c748 <wcrtomb@plt+0x7b28>
  40ec9c:	mov	w21, w0
  40eca0:	cmn	w0, #0x1
  40eca4:	b.eq	40edd0 <wcrtomb@plt+0xa1b0>  // b.none
  40eca8:	mov	x1, x26
  40ecac:	bl	404420 <fdopen@plt>
  40ecb0:	mov	x23, x0
  40ecb4:	cbnz	x0, 40ed38 <wcrtomb@plt+0xa118>
  40ecb8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40ecbc:	ldr	x0, [x0, #952]
  40ecc0:	cbz	x0, 40ecc8 <wcrtomb@plt+0xa0a8>
  40ecc4:	blr	x0
  40ecc8:	bl	404ad0 <__errno_location@plt>
  40eccc:	mov	x3, x0
  40ecd0:	mov	w2, #0x5                   	// #5
  40ecd4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40ecd8:	mov	x0, #0x0                   	// #0
  40ecdc:	add	x1, x1, #0xdf8
  40ece0:	ldr	w23, [x3]
  40ece4:	bl	4049c0 <dcgettext@plt>
  40ece8:	mov	x3, x20
  40ecec:	mov	x2, x0
  40ecf0:	mov	w1, w23
  40ecf4:	mov	w0, #0x0                   	// #0
  40ecf8:	bl	404050 <error@plt>
  40ecfc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40ed00:	mov	w2, #0x2                   	// #2
  40ed04:	mov	w0, w21
  40ed08:	str	w2, [x1, #3400]
  40ed0c:	bl	4045c0 <close@plt>
  40ed10:	ldr	x19, [x19]
  40ed14:	cbnz	x19, 40ec70 <wcrtomb@plt+0xa050>
  40ed18:	ldp	x23, x24, [sp, #48]
  40ed1c:	ldp	x25, x26, [sp, #64]
  40ed20:	ldp	x19, x20, [sp, #16]
  40ed24:	str	x28, [x22, #416]
  40ed28:	ldp	x21, x22, [sp, #32]
  40ed2c:	ldp	x27, x28, [sp, #80]
  40ed30:	ldp	x29, x30, [sp], #96
  40ed34:	ret
  40ed38:	bl	435ac0 <argp_parse@@Base+0x1bd8>
  40ed3c:	mov	x24, x0
  40ed40:	ldr	x0, [x27]
  40ed44:	mov	x21, x27
  40ed48:	cbnz	x0, 40ed58 <wcrtomb@plt+0xa138>
  40ed4c:	b	40ed64 <wcrtomb@plt+0xa144>
  40ed50:	ldr	x0, [x21, #40]!
  40ed54:	cbz	x0, 40ed64 <wcrtomb@plt+0xa144>
  40ed58:	mov	x1, x20
  40ed5c:	bl	404710 <strcmp@plt>
  40ed60:	cbnz	w0, 40ed50 <wcrtomb@plt+0xa130>
  40ed64:	ldp	x1, x5, [x21, #24]
  40ed68:	cbz	x1, 40ed7c <wcrtomb@plt+0xa15c>
  40ed6c:	mov	x0, x5
  40ed70:	blr	x1
  40ed74:	mov	x5, x0
  40ed78:	str	x0, [x21, #32]
  40ed7c:	ldr	x0, [x21, #16]
  40ed80:	mov	x2, x23
  40ed84:	mov	x1, x24
  40ed88:	mov	w4, #0xa                   	// #10
  40ed8c:	mov	w3, #0x50000000            	// #1342177280
  40ed90:	bl	436170 <argp_parse@@Base+0x2288>
  40ed94:	cbnz	w0, 40ede8 <wcrtomb@plt+0xa1c8>
  40ed98:	mov	x0, x23
  40ed9c:	bl	4042a0 <fclose@plt>
  40eda0:	mov	x0, #0x20                  	// #32
  40eda4:	bl	440f48 <argp_parse@@Base+0xd060>
  40eda8:	ldr	w1, [x19, #8]
  40edac:	str	x24, [x0, #24]
  40edb0:	cbz	w1, 40edb8 <wcrtomb@plt+0xa198>
  40edb4:	ldr	w1, [x21, #8]
  40edb8:	stp	xzr, x25, [x0]
  40edbc:	str	w1, [x0, #16]
  40edc0:	cbz	x25, 40eddc <wcrtomb@plt+0xa1bc>
  40edc4:	str	x0, [x25]
  40edc8:	mov	x25, x0
  40edcc:	b	40ec68 <wcrtomb@plt+0xa048>
  40edd0:	mov	x0, x20
  40edd4:	bl	429de8 <wcrtomb@plt+0x251c8>
  40edd8:	b	40ec68 <wcrtomb@plt+0xa048>
  40eddc:	mov	x25, x0
  40ede0:	mov	x28, x0
  40ede4:	b	40ec68 <wcrtomb@plt+0xa048>
  40ede8:	bl	404ad0 <__errno_location@plt>
  40edec:	ldr	w19, [x0]
  40edf0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  40edf4:	ldr	x1, [x1, #952]
  40edf8:	cbz	x1, 40ee00 <wcrtomb@plt+0xa1e0>
  40edfc:	blr	x1
  40ee00:	mov	x0, x20
  40ee04:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40ee08:	mov	w1, w19
  40ee0c:	mov	x3, x0
  40ee10:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  40ee14:	add	x2, x2, #0xb68
  40ee18:	mov	w0, #0x0                   	// #0
  40ee1c:	bl	404050 <error@plt>
  40ee20:	bl	40e770 <wcrtomb@plt+0x9b50>
  40ee24:	nop
  40ee28:	stp	x29, x30, [sp, #-48]!
  40ee2c:	mov	x29, sp
  40ee30:	stp	x19, x20, [sp, #16]
  40ee34:	ldr	x19, [x0, #416]
  40ee38:	str	x21, [sp, #32]
  40ee3c:	mov	x21, x0
  40ee40:	cbz	x19, 40ee64 <wcrtomb@plt+0xa244>
  40ee44:	nop
  40ee48:	mov	x20, x19
  40ee4c:	ldr	x19, [x19]
  40ee50:	ldr	x0, [x20, #24]
  40ee54:	bl	435ac8 <argp_parse@@Base+0x1be0>
  40ee58:	mov	x0, x20
  40ee5c:	bl	4047b0 <free@plt>
  40ee60:	cbnz	x19, 40ee48 <wcrtomb@plt+0xa228>
  40ee64:	ldp	x19, x20, [sp, #16]
  40ee68:	str	xzr, [x21, #416]
  40ee6c:	ldr	x21, [sp, #32]
  40ee70:	ldp	x29, x30, [sp], #48
  40ee74:	ret
  40ee78:	stp	x29, x30, [sp, #-80]!
  40ee7c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40ee80:	mov	x29, sp
  40ee84:	stp	x23, x24, [sp, #48]
  40ee88:	mov	x23, x0
  40ee8c:	mov	x24, x1
  40ee90:	ldr	x0, [x2, #8]
  40ee94:	mov	x1, x23
  40ee98:	str	x25, [sp, #64]
  40ee9c:	bl	435c90 <argp_parse@@Base+0x1da8>
  40eea0:	ands	w25, w0, #0xff
  40eea4:	b.ne	40ef5c <wcrtomb@plt+0xa33c>  // b.any
  40eea8:	cbz	x24, 40ef5c <wcrtomb@plt+0xa33c>
  40eeac:	stp	x19, x20, [sp, #16]
  40eeb0:	mov	x20, #0x0                   	// #0
  40eeb4:	stp	x21, x22, [sp, #32]
  40eeb8:	mov	w22, #0x0                   	// #0
  40eebc:	mov	x21, #0x0                   	// #0
  40eec0:	ldr	x19, [x24, #416]
  40eec4:	cbnz	x19, 40eee8 <wcrtomb@plt+0xa2c8>
  40eec8:	b	40efa0 <wcrtomb@plt+0xa380>
  40eecc:	ldr	x0, [x19, #24]
  40eed0:	mov	x1, x21
  40eed4:	bl	435c90 <argp_parse@@Base+0x1da8>
  40eed8:	tst	w0, #0xff
  40eedc:	b.ne	40ef48 <wcrtomb@plt+0xa328>  // b.any
  40eee0:	ldr	x19, [x19]
  40eee4:	cbz	x19, 40efa0 <wcrtomb@plt+0xa380>
  40eee8:	ldr	w2, [x19, #16]
  40eeec:	tst	w22, w2
  40eef0:	b.ne	40eee0 <wcrtomb@plt+0xa2c0>  // b.any
  40eef4:	ldr	x0, [x19, #24]
  40eef8:	mov	x1, x23
  40eefc:	bl	435c90 <argp_parse@@Base+0x1da8>
  40ef00:	tst	w0, #0xff
  40ef04:	b.ne	40ef48 <wcrtomb@plt+0xa328>  // b.any
  40ef08:	cbz	x20, 40ef70 <wcrtomb@plt+0xa350>
  40ef0c:	ldr	x0, [x19, #24]
  40ef10:	mov	x1, x20
  40ef14:	bl	435c90 <argp_parse@@Base+0x1da8>
  40ef18:	tst	w0, #0xff
  40ef1c:	b.ne	40ef48 <wcrtomb@plt+0xa328>  // b.any
  40ef20:	cbnz	x21, 40eecc <wcrtomb@plt+0xa2ac>
  40ef24:	mov	x0, x23
  40ef28:	bl	435440 <argp_parse@@Base+0x1558>
  40ef2c:	mov	x21, x0
  40ef30:	ldr	x0, [x19, #24]
  40ef34:	mov	x1, x21
  40ef38:	bl	435c90 <argp_parse@@Base+0x1da8>
  40ef3c:	tst	w0, #0xff
  40ef40:	b.eq	40eee0 <wcrtomb@plt+0xa2c0>  // b.none
  40ef44:	nop
  40ef48:	mov	w25, #0x1                   	// #1
  40ef4c:	mov	x0, x21
  40ef50:	bl	4047b0 <free@plt>
  40ef54:	ldp	x19, x20, [sp, #16]
  40ef58:	ldp	x21, x22, [sp, #32]
  40ef5c:	mov	w0, w25
  40ef60:	ldp	x23, x24, [sp, #48]
  40ef64:	ldr	x25, [sp, #64]
  40ef68:	ldp	x29, x30, [sp], #80
  40ef6c:	ret
  40ef70:	ldrb	w0, [x23]
  40ef74:	mov	x20, x23
  40ef78:	cmp	w0, #0x2e
  40ef7c:	b.eq	40ef90 <wcrtomb@plt+0xa370>  // b.none
  40ef80:	b	40ef0c <wcrtomb@plt+0xa2ec>
  40ef84:	ldrb	w2, [x20, #2]!
  40ef88:	cmp	w2, #0x2e
  40ef8c:	b.ne	40ef0c <wcrtomb@plt+0xa2ec>  // b.any
  40ef90:	ldrb	w2, [x20, #1]
  40ef94:	cmp	w2, #0x2f
  40ef98:	b.eq	40ef84 <wcrtomb@plt+0xa364>  // b.none
  40ef9c:	b	40ef0c <wcrtomb@plt+0xa2ec>
  40efa0:	ldr	x24, [x24, #392]
  40efa4:	mov	w22, #0x2                   	// #2
  40efa8:	cbnz	x24, 40eec0 <wcrtomb@plt+0xa2a0>
  40efac:	b	40ef4c <wcrtomb@plt+0xa32c>
  40efb0:	stp	x29, x30, [sp, #-32]!
  40efb4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40efb8:	mov	x29, sp
  40efbc:	str	x19, [sp, #16]
  40efc0:	add	x19, x0, #0x7b8
  40efc4:	ldr	x0, [x0, #1976]
  40efc8:	cbz	x0, 40efe0 <wcrtomb@plt+0xa3c0>
  40efcc:	nop
  40efd0:	mov	w1, #0x0                   	// #0
  40efd4:	bl	40eba0 <wcrtomb@plt+0x9f80>
  40efd8:	ldr	x0, [x19, #40]!
  40efdc:	cbnz	x0, 40efd0 <wcrtomb@plt+0xa3b0>
  40efe0:	ldr	x19, [sp, #16]
  40efe4:	ldp	x29, x30, [sp], #32
  40efe8:	ret
  40efec:	nop
  40eff0:	mov	w0, #0x1                   	// #1
  40eff4:	ret
  40eff8:	stp	x29, x30, [sp, #-32]!
  40effc:	mov	x29, sp
  40f000:	str	x19, [sp, #16]
  40f004:	mov	x19, x0
  40f008:	ldr	x0, [x0, #160]
  40f00c:	bl	4047b0 <free@plt>
  40f010:	ldp	x1, x0, [x19, #136]
  40f014:	bl	413b98 <wcrtomb@plt+0xef78>
  40f018:	ldr	x0, [x19, #96]
  40f01c:	bl	4047b0 <free@plt>
  40f020:	ldr	x0, [x19, #104]
  40f024:	bl	4047b0 <free@plt>
  40f028:	ldr	x0, [x19, #120]
  40f02c:	bl	4047b0 <free@plt>
  40f030:	mov	x0, x19
  40f034:	ldr	x19, [sp, #16]
  40f038:	ldp	x29, x30, [sp], #32
  40f03c:	b	4047b0 <free@plt>
  40f040:	stp	x29, x30, [sp, #-16]!
  40f044:	mov	x29, sp
  40f048:	bl	41a238 <wcrtomb@plt+0x15618>
  40f04c:	mov	w0, #0x0                   	// #0
  40f050:	ldp	x29, x30, [sp], #16
  40f054:	ret
  40f058:	stp	x29, x30, [sp, #-112]!
  40f05c:	mov	x29, sp
  40f060:	stp	x19, x20, [sp, #16]
  40f064:	mov	x19, x1
  40f068:	mov	x20, x2
  40f06c:	stp	x21, x22, [sp, #32]
  40f070:	mov	x21, x0
  40f074:	tbnz	x1, #63, 40f0ac <wcrtomb@plt+0xa48c>
  40f078:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40f07c:	add	x1, x0, #0x370
  40f080:	ldr	x0, [x0, #880]
  40f084:	ldr	x1, [x1, #8]
  40f088:	cmp	x19, x0
  40f08c:	b.gt	40f118 <wcrtomb@plt+0xa4f8>
  40f090:	b.lt	40f09c <wcrtomb@plt+0xa47c>  // b.tstop
  40f094:	cmp	w1, w2
  40f098:	b.mi	40f118 <wcrtomb@plt+0xa4f8>  // b.first
  40f09c:	ldp	x19, x20, [sp, #16]
  40f0a0:	ldp	x21, x22, [sp, #32]
  40f0a4:	ldp	x29, x30, [sp], #112
  40f0a8:	ret
  40f0ac:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40f0b0:	ldr	w0, [x0, #408]
  40f0b4:	tbz	w0, #15, 40f09c <wcrtomb@plt+0xa47c>
  40f0b8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40f0bc:	ldr	x0, [x0, #952]
  40f0c0:	cbz	x0, 40f0c8 <wcrtomb@plt+0xa4a8>
  40f0c4:	blr	x0
  40f0c8:	mov	w2, #0x5                   	// #5
  40f0cc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40f0d0:	mov	x0, #0x0                   	// #0
  40f0d4:	add	x1, x1, #0xe50
  40f0d8:	bl	4049c0 <dcgettext@plt>
  40f0dc:	mov	x22, x0
  40f0e0:	mov	x1, x20
  40f0e4:	mov	x0, x19
  40f0e8:	mov	w2, #0x1                   	// #1
  40f0ec:	bl	418fb0 <wcrtomb@plt+0x14390>
  40f0f0:	mov	x3, x21
  40f0f4:	mov	x4, x0
  40f0f8:	mov	x2, x22
  40f0fc:	mov	w1, #0x0                   	// #0
  40f100:	mov	w0, #0x0                   	// #0
  40f104:	bl	404050 <error@plt>
  40f108:	ldp	x19, x20, [sp, #16]
  40f10c:	ldp	x21, x22, [sp, #32]
  40f110:	ldp	x29, x30, [sp], #112
  40f114:	ret
  40f118:	add	x0, sp, #0x40
  40f11c:	bl	437e58 <argp_parse@@Base+0x3f70>
  40f120:	ldp	x0, x1, [sp, #64]
  40f124:	cmp	x19, x0
  40f128:	b.gt	40f138 <wcrtomb@plt+0xa518>
  40f12c:	b.lt	40f09c <wcrtomb@plt+0xa47c>  // b.tstop
  40f130:	cmp	w1, w20
  40f134:	b.pl	40f09c <wcrtomb@plt+0xa47c>  // b.nfrst
  40f138:	stp	x23, x24, [sp, #48]
  40f13c:	sub	x22, x19, x0
  40f140:	subs	x23, x20, x1
  40f144:	b.pl	40f158 <wcrtomb@plt+0xa538>  // b.nfrst
  40f148:	mov	x0, #0xca00                	// #51712
  40f14c:	sub	x22, x22, #0x1
  40f150:	movk	x0, #0x3b9a, lsl #16
  40f154:	add	x23, x23, x0
  40f158:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40f15c:	ldr	w0, [x0, #408]
  40f160:	tbz	w0, #15, 40f1d4 <wcrtomb@plt+0xa5b4>
  40f164:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40f168:	ldr	x0, [x0, #952]
  40f16c:	cbz	x0, 40f174 <wcrtomb@plt+0xa554>
  40f170:	blr	x0
  40f174:	mov	w2, #0x5                   	// #5
  40f178:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40f17c:	mov	x0, #0x0                   	// #0
  40f180:	add	x1, x1, #0xe78
  40f184:	bl	4049c0 <dcgettext@plt>
  40f188:	mov	x24, x0
  40f18c:	mov	x1, x20
  40f190:	mov	x0, x19
  40f194:	mov	w2, #0x1                   	// #1
  40f198:	bl	418fb0 <wcrtomb@plt+0x14390>
  40f19c:	mov	x1, x23
  40f1a0:	mov	x19, x0
  40f1a4:	add	x2, sp, #0x50
  40f1a8:	mov	x0, x22
  40f1ac:	bl	41b298 <wcrtomb@plt+0x16678>
  40f1b0:	mov	x5, x0
  40f1b4:	mov	x2, x24
  40f1b8:	mov	x4, x19
  40f1bc:	mov	x3, x21
  40f1c0:	mov	w1, #0x0                   	// #0
  40f1c4:	mov	w0, #0x0                   	// #0
  40f1c8:	bl	404050 <error@plt>
  40f1cc:	ldp	x23, x24, [sp, #48]
  40f1d0:	b	40f09c <wcrtomb@plt+0xa47c>
  40f1d4:	ldp	x23, x24, [sp, #48]
  40f1d8:	b	40f09c <wcrtomb@plt+0xa47c>
  40f1dc:	nop
  40f1e0:	stp	x29, x30, [sp, #-160]!
  40f1e4:	mov	x29, sp
  40f1e8:	stp	x19, x20, [sp, #16]
  40f1ec:	mov	x19, x0
  40f1f0:	mov	w20, #0x1                   	// #1
  40f1f4:	b	40f218 <wcrtomb@plt+0xa5f8>
  40f1f8:	ldr	x0, [sp, #32]
  40f1fc:	str	x0, [x19, #8]
  40f200:	ldr	x0, [sp, #40]
  40f204:	str	x0, [x19, #16]
  40f208:	ldr	x19, [x19]
  40f20c:	cbz	x19, 40f23c <wcrtomb@plt+0xa61c>
  40f210:	ldrb	w0, [x19, #88]
  40f214:	cbnz	w0, 40f23c <wcrtomb@plt+0xa61c>
  40f218:	ldr	x0, [x19, #160]
  40f21c:	strb	w20, [x19, #88]
  40f220:	add	x1, sp, #0x20
  40f224:	bl	41b9a0 <wcrtomb@plt+0x16d80>
  40f228:	cbz	w0, 40f1f8 <wcrtomb@plt+0xa5d8>
  40f22c:	ldr	x0, [x19, #160]
  40f230:	bl	42a278 <wcrtomb@plt+0x25658>
  40f234:	ldr	x19, [x19]
  40f238:	cbnz	x19, 40f210 <wcrtomb@plt+0xa5f0>
  40f23c:	ldp	x19, x20, [sp, #16]
  40f240:	ldp	x29, x30, [sp], #160
  40f244:	ret
  40f248:	stp	x29, x30, [sp, #-96]!
  40f24c:	mov	x29, sp
  40f250:	stp	x19, x20, [sp, #16]
  40f254:	mov	x20, x0
  40f258:	stp	x21, x22, [sp, #32]
  40f25c:	mov	w22, w3
  40f260:	mov	w21, w5
  40f264:	stp	x23, x24, [sp, #48]
  40f268:	mov	w23, w2
  40f26c:	stp	x25, x26, [sp, #64]
  40f270:	mov	w25, w4
  40f274:	adrp	x26, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40f278:	str	x27, [sp, #80]
  40f27c:	mov	x27, x1
  40f280:	bl	403ff0 <strlen@plt>
  40f284:	mov	x24, x0
  40f288:	mov	x0, #0xa8                  	// #168
  40f28c:	bl	440f48 <argp_parse@@Base+0xd060>
  40f290:	mov	x19, x0
  40f294:	ldr	x0, [x26, #2016]
  40f298:	str	x0, [x19]
  40f29c:	str	w25, [x19, #24]
  40f2a0:	cbz	x27, 40f3a4 <wcrtomb@plt+0xa784>
  40f2a4:	ldp	x1, x2, [x27, #88]
  40f2a8:	stp	x1, x2, [x19, #8]
  40f2ac:	mov	x0, x20
  40f2b0:	ldp	x4, x5, [x27, #216]
  40f2b4:	stp	x4, x5, [x19, #40]
  40f2b8:	ldp	x2, x3, [x27, #232]
  40f2bc:	stp	x2, x3, [x19, #56]
  40f2c0:	ldr	x1, [x27, #112]
  40f2c4:	stur	x1, [x19, #28]
  40f2c8:	str	x24, [x19, #152]
  40f2cc:	bl	441170 <argp_parse@@Base+0xd288>
  40f2d0:	mov	x2, x0
  40f2d4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40f2d8:	mov	x0, x19
  40f2dc:	stp	w23, w22, [x19, #72]
  40f2e0:	ldr	w3, [x1, #4040]
  40f2e4:	ldr	x1, [x27, #48]
  40f2e8:	strb	wzr, [x19, #80]
  40f2ec:	str	w21, [x19, #84]
  40f2f0:	strb	wzr, [x19, #88]
  40f2f4:	str	w3, [x19, #92]
  40f2f8:	str	x2, [x19, #160]
  40f2fc:	str	xzr, [x0, #96]!
  40f300:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  40f304:	ldr	x0, [x27, #56]
  40f308:	cbz	x0, 40f390 <wcrtomb@plt+0xa770>
  40f30c:	ldr	x1, [x27, #64]
  40f310:	add	x1, x1, #0x1
  40f314:	bl	441140 <argp_parse@@Base+0xd258>
  40f318:	str	x0, [x19, #104]
  40f31c:	ldr	x0, [x27, #64]
  40f320:	str	x0, [x19, #112]
  40f324:	ldr	x0, [x27, #72]
  40f328:	cbz	x0, 40f39c <wcrtomb@plt+0xa77c>
  40f32c:	ldr	x1, [x27, #80]
  40f330:	add	x1, x1, #0x1
  40f334:	bl	441140 <argp_parse@@Base+0xd258>
  40f338:	str	x0, [x19, #120]
  40f33c:	ldr	x0, [x27, #80]
  40f340:	str	x0, [x19, #128]
  40f344:	add	x2, x19, #0x88
  40f348:	mov	x0, x27
  40f34c:	add	x1, x19, #0x90
  40f350:	bl	413da8 <wcrtomb@plt+0xf188>
  40f354:	ldr	x0, [x19, #160]
  40f358:	mov	x1, x20
  40f35c:	bl	404910 <strcpy@plt>
  40f360:	str	x19, [x26, #2016]
  40f364:	mov	x0, x20
  40f368:	bl	41b538 <wcrtomb@plt+0x16918>
  40f36c:	tst	w0, #0xff
  40f370:	b.ne	40f400 <wcrtomb@plt+0xa7e0>  // b.any
  40f374:	ldp	x19, x20, [sp, #16]
  40f378:	ldp	x21, x22, [sp, #32]
  40f37c:	ldp	x23, x24, [sp, #48]
  40f380:	ldp	x25, x26, [sp, #64]
  40f384:	ldr	x27, [sp, #80]
  40f388:	ldp	x29, x30, [sp], #96
  40f38c:	ret
  40f390:	ldr	x0, [x27, #72]
  40f394:	stp	xzr, xzr, [x19, #104]
  40f398:	cbnz	x0, 40f32c <wcrtomb@plt+0xa70c>
  40f39c:	stp	xzr, xzr, [x19, #120]
  40f3a0:	b	40f344 <wcrtomb@plt+0xa724>
  40f3a4:	mov	x0, x20
  40f3a8:	str	x24, [x19, #152]
  40f3ac:	bl	441170 <argp_parse@@Base+0xd288>
  40f3b0:	stp	w23, w22, [x19, #72]
  40f3b4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40f3b8:	mov	w2, #0x1                   	// #1
  40f3bc:	strb	w2, [x19, #80]
  40f3c0:	ldr	w1, [x1, #4040]
  40f3c4:	str	w1, [x19, #92]
  40f3c8:	mov	x1, x20
  40f3cc:	str	w21, [x19, #84]
  40f3d0:	strb	wzr, [x19, #88]
  40f3d4:	stp	xzr, xzr, [x19, #96]
  40f3d8:	stp	xzr, xzr, [x19, #112]
  40f3dc:	stp	xzr, xzr, [x19, #128]
  40f3e0:	str	xzr, [x19, #144]
  40f3e4:	str	x0, [x19, #160]
  40f3e8:	bl	404910 <strcpy@plt>
  40f3ec:	mov	x0, x20
  40f3f0:	str	x19, [x26, #2016]
  40f3f4:	bl	41b538 <wcrtomb@plt+0x16918>
  40f3f8:	tst	w0, #0xff
  40f3fc:	b.eq	40f374 <wcrtomb@plt+0xa754>  // b.none
  40f400:	mov	x0, x19
  40f404:	ldp	x19, x20, [sp, #16]
  40f408:	ldp	x21, x22, [sp, #32]
  40f40c:	ldp	x23, x24, [sp, #48]
  40f410:	ldp	x25, x26, [sp, #64]
  40f414:	ldr	x27, [sp, #80]
  40f418:	ldp	x29, x30, [sp], #96
  40f41c:	b	40f1e0 <wcrtomb@plt+0xa5c0>
  40f420:	stp	x29, x30, [sp, #-208]!
  40f424:	mov	x29, sp
  40f428:	stp	x19, x20, [sp, #16]
  40f42c:	mov	x19, x0
  40f430:	stp	x21, x22, [sp, #32]
  40f434:	mov	x21, x0
  40f438:	ldrb	w0, [x0]
  40f43c:	cbz	w0, 40f508 <wcrtomb@plt+0xa8e8>
  40f440:	stp	x23, x24, [sp, #48]
  40f444:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40f448:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40f44c:	add	x23, x23, #0x7e0
  40f450:	add	x24, x24, #0x888
  40f454:	stp	x25, x26, [sp, #64]
  40f458:	mov	x25, x1
  40f45c:	nop
  40f460:	ldrb	w2, [x19, #1]!
  40f464:	cbz	w2, 40f500 <wcrtomb@plt+0xa8e0>
  40f468:	cmp	w2, #0x2f
  40f46c:	ccmp	x21, x19, #0x4, eq  // eq = none
  40f470:	b.eq	40f460 <wcrtomb@plt+0xa840>  // b.none
  40f474:	ldurb	w0, [x19, #-1]
  40f478:	cmp	w0, #0x2f
  40f47c:	b.eq	40f460 <wcrtomb@plt+0xa840>  // b.none
  40f480:	cmp	w0, #0x2e
  40f484:	b.eq	40f520 <wcrtomb@plt+0xa900>  // b.none
  40f488:	ldr	w20, [x23, #8]
  40f48c:	mov	x1, x21
  40f490:	strb	wzr, [x19]
  40f494:	ldrb	w2, [x23, #12]
  40f498:	mvn	w20, w20
  40f49c:	ldr	w0, [x24]
  40f4a0:	and	w20, w20, #0x1ff
  40f4a4:	cmp	w2, #0x0
  40f4a8:	orr	w22, w20, #0xc0
  40f4ac:	csel	w22, w22, w20, eq  // eq = none
  40f4b0:	mov	w2, w22
  40f4b4:	bl	404260 <mkdirat@plt>
  40f4b8:	cbz	w0, 40f55c <wcrtomb@plt+0xa93c>
  40f4bc:	bl	404ad0 <__errno_location@plt>
  40f4c0:	ldr	w26, [x0]
  40f4c4:	mov	x20, x0
  40f4c8:	cmp	w26, #0x11
  40f4cc:	b.eq	40f4f0 <wcrtomb@plt+0xa8d0>  // b.none
  40f4d0:	ldr	w1, [x24]
  40f4d4:	add	x3, sp, #0x50
  40f4d8:	mov	x2, x21
  40f4dc:	mov	w4, #0x0                   	// #0
  40f4e0:	mov	w0, #0x0                   	// #0
  40f4e4:	bl	404c00 <__fxstatat@plt>
  40f4e8:	mov	w22, w0
  40f4ec:	cbnz	w0, 40f5a0 <wcrtomb@plt+0xa980>
  40f4f0:	mov	w0, #0x2f                  	// #47
  40f4f4:	strb	w0, [x19]
  40f4f8:	ldrb	w2, [x19, #1]!
  40f4fc:	cbnz	w2, 40f468 <wcrtomb@plt+0xa848>
  40f500:	ldp	x23, x24, [sp, #48]
  40f504:	ldp	x25, x26, [sp, #64]
  40f508:	mov	w22, #0x0                   	// #0
  40f50c:	mov	w0, w22
  40f510:	ldp	x19, x20, [sp, #16]
  40f514:	ldp	x21, x22, [sp, #32]
  40f518:	ldp	x29, x30, [sp], #208
  40f51c:	ret
  40f520:	add	x0, x21, #0x1
  40f524:	cmp	x19, x0
  40f528:	b.eq	40f460 <wcrtomb@plt+0xa840>  // b.none
  40f52c:	ldurb	w0, [x19, #-2]
  40f530:	cmp	w0, #0x2f
  40f534:	b.eq	40f460 <wcrtomb@plt+0xa840>  // b.none
  40f538:	cmp	w0, #0x2e
  40f53c:	b.ne	40f488 <wcrtomb@plt+0xa868>  // b.any
  40f540:	add	x0, x21, #0x2
  40f544:	cmp	x19, x0
  40f548:	b.eq	40f460 <wcrtomb@plt+0xa840>  // b.none
  40f54c:	ldurb	w0, [x19, #-3]
  40f550:	cmp	w0, #0x2f
  40f554:	b.ne	40f488 <wcrtomb@plt+0xa868>  // b.any
  40f558:	b	40f460 <wcrtomb@plt+0xa840>
  40f55c:	ldr	w2, [x23, #16]
  40f560:	mov	w4, w20
  40f564:	mov	w5, #0x100                 	// #256
  40f568:	mov	w3, #0x1ff                 	// #511
  40f56c:	mov	x0, x21
  40f570:	bic	w2, w22, w2
  40f574:	mov	x1, #0x0                   	// #0
  40f578:	bl	40f248 <wcrtomb@plt+0xa628>
  40f57c:	mov	x0, x21
  40f580:	mov	w2, w20
  40f584:	sub	w1, w19, w21
  40f588:	bl	419998 <wcrtomb@plt+0x14d78>
  40f58c:	mov	w0, #0x1                   	// #1
  40f590:	strb	w0, [x25]
  40f594:	mov	w0, #0x2f                  	// #47
  40f598:	strb	w0, [x19]
  40f59c:	b	40f460 <wcrtomb@plt+0xa840>
  40f5a0:	str	w26, [x20]
  40f5a4:	mov	x0, x21
  40f5a8:	bl	429db8 <wcrtomb@plt+0x25198>
  40f5ac:	mov	w0, #0x2f                  	// #47
  40f5b0:	strb	w0, [x19]
  40f5b4:	mov	w0, w22
  40f5b8:	ldp	x19, x20, [sp, #16]
  40f5bc:	ldp	x21, x22, [sp, #32]
  40f5c0:	ldp	x23, x24, [sp, #48]
  40f5c4:	ldp	x25, x26, [sp, #64]
  40f5c8:	ldp	x29, x30, [sp], #208
  40f5cc:	ret
  40f5d0:	stp	x29, x30, [sp, #-48]!
  40f5d4:	mov	x29, sp
  40f5d8:	stp	x19, x20, [sp, #16]
  40f5dc:	mov	x20, x1
  40f5e0:	mov	w19, w2
  40f5e4:	stp	x21, x22, [sp, #32]
  40f5e8:	mov	w21, w3
  40f5ec:	tbnz	w0, #31, 40f618 <wcrtomb@plt+0xa9f8>
  40f5f0:	mov	w1, w2
  40f5f4:	bl	404470 <fchmod@plt>
  40f5f8:	mov	w22, w0
  40f5fc:	cbz	w0, 40f63c <wcrtomb@plt+0xaa1c>
  40f600:	bl	404ad0 <__errno_location@plt>
  40f604:	ldr	w0, [x0]
  40f608:	mov	w1, #0x5f                  	// #95
  40f60c:	cmp	w0, #0x26
  40f610:	ccmp	w0, w1, #0x4, ne  // ne = any
  40f614:	b.ne	40f63c <wcrtomb@plt+0xaa1c>  // b.any
  40f618:	mov	w3, w21
  40f61c:	mov	w2, w19
  40f620:	mov	x1, x20
  40f624:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40f628:	ldp	x19, x20, [sp, #16]
  40f62c:	ldp	x21, x22, [sp, #32]
  40f630:	ldp	x29, x30, [sp], #48
  40f634:	ldr	w0, [x0, #2184]
  40f638:	b	404b30 <fchmodat@plt>
  40f63c:	mov	w0, w22
  40f640:	ldp	x19, x20, [sp, #16]
  40f644:	ldp	x21, x22, [sp, #32]
  40f648:	ldp	x29, x30, [sp], #48
  40f64c:	ret
  40f650:	stp	x29, x30, [sp, #-224]!
  40f654:	adrp	x8, 483000 <argp_program_version_hook@@Base+0x290>
  40f658:	mov	x29, sp
  40f65c:	stp	x21, x22, [sp, #32]
  40f660:	mov	w21, w4
  40f664:	ldrb	w4, [x8, #496]
  40f668:	stp	x19, x20, [sp, #16]
  40f66c:	and	w22, w6, #0xff
  40f670:	mov	x20, x0
  40f674:	stp	x23, x24, [sp, #48]
  40f678:	mov	x19, x1
  40f67c:	mov	w24, w2
  40f680:	stp	x25, x26, [sp, #64]
  40f684:	and	w23, w5, #0xff
  40f688:	mov	w26, w3
  40f68c:	stp	x27, x28, [sp, #80]
  40f690:	mov	w25, w7
  40f694:	mvn	w28, w21
  40f698:	cbnz	w4, 40f84c <wcrtomb@plt+0xac2c>
  40f69c:	cbz	w22, 40f734 <wcrtomb@plt+0xab14>
  40f6a0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40f6a4:	ldr	w1, [x19, #104]
  40f6a8:	mov	w27, #0x1ff                 	// #511
  40f6ac:	ldr	w22, [x0, #2032]
  40f6b0:	bic	w22, w1, w22
  40f6b4:	eor	w0, w26, w22
  40f6b8:	orr	w0, w0, w28
  40f6bc:	tst	w0, w27
  40f6c0:	b.eq	40f6e4 <wcrtomb@plt+0xaac4>  // b.none
  40f6c4:	orr	w21, w27, w21
  40f6c8:	mvn	w21, w21
  40f6cc:	tst	x21, #0xfff
  40f6d0:	b.ne	40f8a0 <wcrtomb@plt+0xac80>  // b.any
  40f6d4:	and	w26, w26, #0xfff
  40f6d8:	eor	w22, w26, w22
  40f6dc:	ands	w22, w22, w27
  40f6e0:	b.ne	40f8cc <wcrtomb@plt+0xacac>  // b.any
  40f6e4:	mov	w3, #0x1                   	// #1
  40f6e8:	mov	w2, w23
  40f6ec:	mov	x1, x20
  40f6f0:	mov	x0, x19
  40f6f4:	bl	4294d0 <wcrtomb@plt+0x248b0>
  40f6f8:	mov	w2, w23
  40f6fc:	mov	x1, x20
  40f700:	mov	x0, x19
  40f704:	bl	428f20 <wcrtomb@plt+0x24300>
  40f708:	mov	w2, w23
  40f70c:	mov	x1, x20
  40f710:	mov	x0, x19
  40f714:	bl	429458 <wcrtomb@plt+0x24838>
  40f718:	ldp	x19, x20, [sp, #16]
  40f71c:	ldp	x21, x22, [sp, #32]
  40f720:	ldp	x23, x24, [sp, #48]
  40f724:	ldp	x25, x26, [sp, #64]
  40f728:	ldp	x27, x28, [sp, #80]
  40f72c:	ldp	x29, x30, [sp], #224
  40f730:	ret
  40f734:	adrp	x27, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40f738:	ldrb	w0, [x27, #4073]
  40f73c:	cbnz	w0, 40f894 <wcrtomb@plt+0xac74>
  40f740:	mov	x0, #0x3ffffffe            	// #1073741822
  40f744:	str	x0, [sp, #104]
  40f748:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40f74c:	mov	w4, w25
  40f750:	ldp	x8, x9, [x19, #232]
  40f754:	add	x3, sp, #0x60
  40f758:	ldr	w1, [x0, #2184]
  40f75c:	mov	x2, x20
  40f760:	mov	w0, w24
  40f764:	stp	x8, x9, [sp, #112]
  40f768:	bl	436418 <argp_parse@@Base+0x2530>
  40f76c:	cbnz	w0, 40f94c <wcrtomb@plt+0xad2c>
  40f770:	ldrb	w0, [x27, #4073]
  40f774:	cbnz	w0, 40f9d8 <wcrtomb@plt+0xadb8>
  40f778:	ldp	x2, x3, [sp, #112]
  40f77c:	mov	x0, x20
  40f780:	mov	x1, x2
  40f784:	mov	x2, x3
  40f788:	bl	40f058 <wcrtomb@plt+0xa438>
  40f78c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40f790:	ldr	w0, [x0, #924]
  40f794:	cmp	w0, #0x0
  40f798:	b.le	40f864 <wcrtomb@plt+0xac44>
  40f79c:	ldp	w22, w27, [x19, #112]
  40f7a0:	tbnz	w24, #31, 40f7d0 <wcrtomb@plt+0xabb0>
  40f7a4:	mov	w2, w27
  40f7a8:	mov	w1, w22
  40f7ac:	mov	w0, w24
  40f7b0:	bl	404b70 <fchown@plt>
  40f7b4:	cbz	w0, 40f978 <wcrtomb@plt+0xad58>
  40f7b8:	bl	404ad0 <__errno_location@plt>
  40f7bc:	ldr	w0, [x0]
  40f7c0:	mov	w1, #0x5f                  	// #95
  40f7c4:	cmp	w0, #0x26
  40f7c8:	ccmp	w0, w1, #0x4, ne  // ne = any
  40f7cc:	b.ne	40f7f0 <wcrtomb@plt+0xabd0>  // b.any
  40f7d0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40f7d4:	mov	w4, w25
  40f7d8:	mov	w3, w27
  40f7dc:	mov	w2, w22
  40f7e0:	ldr	w0, [x0, #2184]
  40f7e4:	mov	x1, x20
  40f7e8:	bl	404830 <fchownat@plt>
  40f7ec:	cbz	w0, 40f978 <wcrtomb@plt+0xad58>
  40f7f0:	cmp	w23, #0x32
  40f7f4:	b.ne	40f810 <wcrtomb@plt+0xabf0>  // b.any
  40f7f8:	bl	404ad0 <__errno_location@plt>
  40f7fc:	ldr	w0, [x0]
  40f800:	mov	w1, #0x5f                  	// #95
  40f804:	cmp	w0, #0x26
  40f808:	ccmp	w0, w1, #0x4, ne  // ne = any
  40f80c:	b.eq	40f820 <wcrtomb@plt+0xac00>  // b.none
  40f810:	mov	w2, w27
  40f814:	mov	w1, w22
  40f818:	mov	x0, x20
  40f81c:	bl	429c50 <wcrtomb@plt+0x25030>
  40f820:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40f824:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40f828:	ldr	w1, [x19, #104]
  40f82c:	mov	w22, #0xfff                 	// #4095
  40f830:	ldr	w2, [x2, #556]
  40f834:	mov	w27, #0x1ff                 	// #511
  40f838:	ldr	w0, [x0, #2032]
  40f83c:	cmp	w2, #0x0
  40f840:	csel	w27, w22, w27, gt
  40f844:	bic	w22, w1, w0
  40f848:	b	40f6b4 <wcrtomb@plt+0xaa94>
  40f84c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40f850:	ldr	w0, [x0, #924]
  40f854:	cmp	w0, #0x0
  40f858:	b.le	40f864 <wcrtomb@plt+0xac44>
  40f85c:	cbnz	w22, 40f6a0 <wcrtomb@plt+0xaa80>
  40f860:	b	40f79c <wcrtomb@plt+0xab7c>
  40f864:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  40f868:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40f86c:	ldr	w1, [x19, #104]
  40f870:	mov	w27, #0xfff                 	// #4095
  40f874:	ldr	w3, [x2, #556]
  40f878:	mov	w2, #0x1ff                 	// #511
  40f87c:	ldr	w0, [x0, #2032]
  40f880:	cmp	w3, #0x0
  40f884:	ccmp	w22, #0x0, #0x0, gt
  40f888:	bic	w22, w1, w0
  40f88c:	csel	w27, w27, w2, eq  // eq = none
  40f890:	b	40f6b4 <wcrtomb@plt+0xaa94>
  40f894:	ldp	x0, x1, [x1, #216]
  40f898:	stp	x0, x1, [sp, #96]
  40f89c:	b	40f748 <wcrtomb@plt+0xab28>
  40f8a0:	tbnz	w24, #31, 40f998 <wcrtomb@plt+0xad78>
  40f8a4:	add	x2, sp, #0x60
  40f8a8:	mov	w1, w24
  40f8ac:	mov	w0, #0x0                   	// #0
  40f8b0:	bl	4049a0 <__fxstat@plt>
  40f8b4:	cbnz	w0, 40f9f0 <wcrtomb@plt+0xadd0>
  40f8b8:	ldr	w26, [sp, #112]
  40f8bc:	and	w26, w26, #0xfff
  40f8c0:	eor	w22, w26, w22
  40f8c4:	ands	w22, w22, w27
  40f8c8:	b.eq	40f6e4 <wcrtomb@plt+0xaac4>  // b.none
  40f8cc:	eor	w22, w26, w22
  40f8d0:	mov	w3, w25
  40f8d4:	mov	w2, w22
  40f8d8:	mov	x1, x20
  40f8dc:	mov	w0, w24
  40f8e0:	bl	40f5d0 <wcrtomb@plt+0xa9b0>
  40f8e4:	cbz	w0, 40f6e4 <wcrtomb@plt+0xaac4>
  40f8e8:	bl	404ad0 <__errno_location@plt>
  40f8ec:	mov	x21, x0
  40f8f0:	ldr	w0, [x0]
  40f8f4:	cmp	w0, #0x1
  40f8f8:	b.eq	40f938 <wcrtomb@plt+0xad18>  // b.none
  40f8fc:	cmp	w23, #0x32
  40f900:	ccmp	w25, #0x0, #0x4, ne  // ne = any
  40f904:	b.eq	40f9b8 <wcrtomb@plt+0xad98>  // b.none
  40f908:	cmp	w0, #0x26
  40f90c:	mov	w1, #0x5f                  	// #95
  40f910:	ccmp	w0, w1, #0x4, ne  // ne = any
  40f914:	b.ne	40f934 <wcrtomb@plt+0xad14>  // b.any
  40f918:	mov	w0, w24
  40f91c:	mov	w2, w22
  40f920:	mov	x1, x20
  40f924:	mov	w3, #0x0                   	// #0
  40f928:	bl	40f5d0 <wcrtomb@plt+0xa9b0>
  40f92c:	cbz	w0, 40f6e4 <wcrtomb@plt+0xaac4>
  40f930:	ldr	w0, [x21]
  40f934:	cbz	w0, 40f6e4 <wcrtomb@plt+0xaac4>
  40f938:	str	w0, [x21]
  40f93c:	mov	w1, w22
  40f940:	mov	x0, x20
  40f944:	bl	429bb8 <wcrtomb@plt+0x24f98>
  40f948:	b	40f6e4 <wcrtomb@plt+0xaac4>
  40f94c:	cmp	w23, #0x32
  40f950:	b.ne	40f96c <wcrtomb@plt+0xad4c>  // b.any
  40f954:	bl	404ad0 <__errno_location@plt>
  40f958:	ldr	w0, [x0]
  40f95c:	mov	w1, #0x26                  	// #38
  40f960:	cmp	w0, #0x5f
  40f964:	ccmp	w0, w1, #0x4, ne  // ne = any
  40f968:	b.eq	40f78c <wcrtomb@plt+0xab6c>  // b.none
  40f96c:	mov	x0, x20
  40f970:	bl	42a2c8 <wcrtomb@plt+0x256a8>
  40f974:	b	40f78c <wcrtomb@plt+0xab6c>
  40f978:	orr	w0, w26, w28
  40f97c:	mov	w1, #0x49                  	// #73
  40f980:	tst	w0, w1
  40f984:	b.eq	40f820 <wcrtomb@plt+0xac00>  // b.none
  40f988:	and	w0, w26, #0xc00
  40f98c:	bic	w21, w21, w0
  40f990:	mvn	w28, w21
  40f994:	b	40f820 <wcrtomb@plt+0xac00>
  40f998:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40f99c:	mov	w4, w25
  40f9a0:	add	x3, sp, #0x60
  40f9a4:	mov	x2, x20
  40f9a8:	ldr	w1, [x0, #2184]
  40f9ac:	mov	w0, #0x0                   	// #0
  40f9b0:	bl	404c00 <__fxstatat@plt>
  40f9b4:	b	40f8b4 <wcrtomb@plt+0xac94>
  40f9b8:	cbz	w0, 40f6e4 <wcrtomb@plt+0xaac4>
  40f9bc:	cmp	w23, #0x32
  40f9c0:	b.ne	40f938 <wcrtomb@plt+0xad18>  // b.any
  40f9c4:	cmp	w0, #0x26
  40f9c8:	mov	w1, #0x5f                  	// #95
  40f9cc:	ccmp	w0, w1, #0x4, ne  // ne = any
  40f9d0:	b.eq	40f6e4 <wcrtomb@plt+0xaac4>  // b.none
  40f9d4:	b	40f938 <wcrtomb@plt+0xad18>
  40f9d8:	ldp	x2, x3, [sp, #96]
  40f9dc:	mov	x0, x20
  40f9e0:	mov	x1, x2
  40f9e4:	mov	x2, x3
  40f9e8:	bl	40f058 <wcrtomb@plt+0xa438>
  40f9ec:	b	40f778 <wcrtomb@plt+0xab58>
  40f9f0:	mov	x0, x20
  40f9f4:	bl	42a278 <wcrtomb@plt+0x25658>
  40f9f8:	b	40f6e4 <wcrtomb@plt+0xaac4>
  40f9fc:	nop
  40fa00:	sub	sp, sp, #0x290
  40fa04:	stp	x29, x30, [sp]
  40fa08:	mov	x29, sp
  40fa0c:	stp	x21, x22, [sp, #32]
  40fa10:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40fa14:	mov	x22, x0
  40fa18:	stp	x19, x20, [sp, #16]
  40fa1c:	stp	x23, x24, [sp, #48]
  40fa20:	and	w24, w1, #0xff
  40fa24:	bl	403ff0 <strlen@plt>
  40fa28:	ldr	x19, [x21, #2016]
  40fa2c:	cbz	x19, 40fbd0 <wcrtomb@plt+0xafb0>
  40fa30:	mov	x23, x0
  40fa34:	mov	w20, #0x0                   	// #0
  40fa38:	stp	x25, x26, [sp, #64]
  40fa3c:	adrp	x25, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40fa40:	add	x25, x25, #0x888
  40fa44:	str	x27, [sp, #80]
  40fa48:	b	40fae4 <wcrtomb@plt+0xaec4>
  40fa4c:	ldp	w10, w9, [x19, #24]
  40fa50:	mov	w4, w27
  40fa54:	ldr	w8, [x19, #32]
  40fa58:	mov	w3, w26
  40fa5c:	ldrb	w6, [x19, #80]
  40fa60:	add	x1, sp, #0xe8
  40fa64:	ldr	w7, [x19, #84]
  40fa68:	mov	w5, #0x35                  	// #53
  40fa6c:	ldp	x12, x13, [x19, #40]
  40fa70:	str	w10, [sp, #336]
  40fa74:	ldp	x10, x11, [x19, #56]
  40fa78:	str	w9, [sp, #344]
  40fa7c:	ldr	x9, [x19, #96]
  40fa80:	str	x9, [sp, #280]
  40fa84:	ldr	x9, [x19, #104]
  40fa88:	str	x9, [sp, #288]
  40fa8c:	ldr	x9, [x19, #112]
  40fa90:	str	x9, [sp, #296]
  40fa94:	ldr	x9, [x19, #120]
  40fa98:	str	x9, [sp, #304]
  40fa9c:	ldr	x9, [x19, #128]
  40faa0:	str	x9, [sp, #312]
  40faa4:	str	w8, [sp, #348]
  40faa8:	mov	w2, #0xffffffff            	// #-1
  40faac:	ldr	x9, [x19, #136]
  40fab0:	ldr	x8, [x19, #144]
  40fab4:	ldr	x0, [x19, #160]
  40fab8:	stp	x12, x13, [sp, #448]
  40fabc:	stp	x10, x11, [sp, #464]
  40fac0:	str	x9, [sp, #560]
  40fac4:	str	x8, [sp, #568]
  40fac8:	bl	40f650 <wcrtomb@plt+0xaa30>
  40facc:	ldr	x1, [x19]
  40fad0:	mov	x0, x19
  40fad4:	str	x1, [x21, #2016]
  40fad8:	bl	40eff8 <wcrtomb@plt+0xa3d8>
  40fadc:	ldr	x19, [x21, #2016]
  40fae0:	cbz	x19, 40fbc8 <wcrtomb@plt+0xafa8>
  40fae4:	ldrb	w1, [x19, #88]
  40fae8:	ldp	w26, w27, [x19, #72]
  40faec:	orr	w20, w1, w20
  40faf0:	cmp	w1, w24
  40faf4:	b.hi	40fbc8 <wcrtomb@plt+0xafa8>  // b.pmore
  40faf8:	ldr	x2, [x19, #152]
  40fafc:	cmp	x2, x23
  40fb00:	b.cs	40fb28 <wcrtomb@plt+0xaf08>  // b.hs, b.nlast
  40fb04:	ldrb	w0, [x22, x2]
  40fb08:	cbz	w0, 40fb28 <wcrtomb@plt+0xaf08>
  40fb0c:	cmp	w0, #0x2f
  40fb10:	b.eq	40fbe8 <wcrtomb@plt+0xafc8>  // b.none
  40fb14:	add	x0, x22, x2
  40fb18:	ldurb	w0, [x0, #-1]
  40fb1c:	cmp	w0, #0x2f
  40fb20:	b.eq	40fbe8 <wcrtomb@plt+0xafc8>  // b.none
  40fb24:	nop
  40fb28:	ldr	w0, [x19, #92]
  40fb2c:	bl	41bb88 <wcrtomb@plt+0x16f68>
  40fb30:	cbz	w20, 40fa4c <wcrtomb@plt+0xae2c>
  40fb34:	ldr	w4, [x19, #84]
  40fb38:	add	x3, sp, #0x68
  40fb3c:	ldr	w1, [x25]
  40fb40:	mov	w0, #0x0                   	// #0
  40fb44:	ldr	x2, [x19, #160]
  40fb48:	bl	404c00 <__fxstatat@plt>
  40fb4c:	cbnz	w0, 40fbfc <wcrtomb@plt+0xafdc>
  40fb50:	ldr	x0, [x19, #8]
  40fb54:	ldr	x1, [sp, #104]
  40fb58:	cmp	x1, x0
  40fb5c:	b.eq	40fc08 <wcrtomb@plt+0xafe8>  // b.none
  40fb60:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40fb64:	ldr	x0, [x0, #952]
  40fb68:	cbz	x0, 40fb70 <wcrtomb@plt+0xaf50>
  40fb6c:	blr	x0
  40fb70:	mov	w2, #0x5                   	// #5
  40fb74:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  40fb78:	mov	x0, #0x0                   	// #0
  40fb7c:	add	x1, x1, #0xea0
  40fb80:	bl	4049c0 <dcgettext@plt>
  40fb84:	mov	x26, x0
  40fb88:	ldr	x0, [x19, #160]
  40fb8c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  40fb90:	mov	x3, x0
  40fb94:	mov	x2, x26
  40fb98:	mov	w1, #0x0                   	// #0
  40fb9c:	mov	w0, #0x0                   	// #0
  40fba0:	bl	404050 <error@plt>
  40fba4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40fba8:	mov	w1, #0x2                   	// #2
  40fbac:	str	w1, [x0, #3400]
  40fbb0:	mov	x0, x19
  40fbb4:	ldr	x1, [x19]
  40fbb8:	str	x1, [x21, #2016]
  40fbbc:	bl	40eff8 <wcrtomb@plt+0xa3d8>
  40fbc0:	ldr	x19, [x21, #2016]
  40fbc4:	cbnz	x19, 40fae4 <wcrtomb@plt+0xaec4>
  40fbc8:	ldp	x25, x26, [sp, #64]
  40fbcc:	ldr	x27, [sp, #80]
  40fbd0:	ldp	x29, x30, [sp]
  40fbd4:	ldp	x19, x20, [sp, #16]
  40fbd8:	ldp	x21, x22, [sp, #32]
  40fbdc:	ldp	x23, x24, [sp, #48]
  40fbe0:	add	sp, sp, #0x290
  40fbe4:	ret
  40fbe8:	ldr	x1, [x19, #160]
  40fbec:	mov	x0, x22
  40fbf0:	bl	4046d0 <memcmp@plt>
  40fbf4:	cbnz	w0, 40fb28 <wcrtomb@plt+0xaf08>
  40fbf8:	b	40fbc8 <wcrtomb@plt+0xafa8>
  40fbfc:	ldr	x0, [x19, #160]
  40fc00:	bl	42a278 <wcrtomb@plt+0x25658>
  40fc04:	b	40facc <wcrtomb@plt+0xaeac>
  40fc08:	ldr	x0, [x19, #16]
  40fc0c:	ldr	x1, [sp, #112]
  40fc10:	cmp	x1, x0
  40fc14:	b.ne	40fb60 <wcrtomb@plt+0xaf40>  // b.any
  40fc18:	ldr	w26, [sp, #120]
  40fc1c:	mov	w27, #0xffffffff            	// #-1
  40fc20:	b	40fa4c <wcrtomb@plt+0xae2c>
  40fc24:	nop
  40fc28:	sub	sp, sp, #0x280
  40fc2c:	stp	x29, x30, [sp]
  40fc30:	mov	x29, sp
  40fc34:	stp	x23, x24, [sp, #48]
  40fc38:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  40fc3c:	add	x23, x23, #0x7e0
  40fc40:	stp	x21, x22, [sp, #32]
  40fc44:	ldr	x21, [x23, #24]
  40fc48:	cbz	x21, 40fd88 <wcrtomb@plt+0xb168>
  40fc4c:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  40fc50:	add	x22, x22, #0x888
  40fc54:	stp	x19, x20, [sp, #16]
  40fc58:	str	x25, [sp, #64]
  40fc5c:	nop
  40fc60:	ldr	w0, [x21, #88]
  40fc64:	add	x25, x21, #0xa0
  40fc68:	mov	x24, #0x0                   	// #0
  40fc6c:	bl	41bb88 <wcrtomb@plt+0x16f68>
  40fc70:	ldr	x19, [x21, #96]
  40fc74:	cbnz	x19, 40fc84 <wcrtomb@plt+0xb064>
  40fc78:	b	40fd58 <wcrtomb@plt+0xb138>
  40fc7c:	ldr	x19, [x19]
  40fc80:	cbz	x19, 40fd40 <wcrtomb@plt+0xb120>
  40fc84:	ldr	w1, [x22]
  40fc88:	add	x20, x19, #0x8
  40fc8c:	mov	x2, x20
  40fc90:	add	x3, sp, #0x58
  40fc94:	mov	w4, #0x100                 	// #256
  40fc98:	mov	w0, #0x0                   	// #0
  40fc9c:	bl	404c00 <__fxstatat@plt>
  40fca0:	cbnz	w0, 40fc7c <wcrtomb@plt+0xb05c>
  40fca4:	ldr	x0, [x21, #8]
  40fca8:	ldr	x1, [sp, #88]
  40fcac:	cmp	x1, x0
  40fcb0:	b.ne	40fc7c <wcrtomb@plt+0xb05c>  // b.any
  40fcb4:	ldr	x0, [x21, #16]
  40fcb8:	ldr	x1, [sp, #96]
  40fcbc:	cmp	x1, x0
  40fcc0:	b.ne	40fc7c <wcrtomb@plt+0xb05c>  // b.any
  40fcc4:	ldr	x0, [x21, #24]
  40fcc8:	cmn	x0, #0x1
  40fccc:	b.ne	40fc7c <wcrtomb@plt+0xb05c>  // b.any
  40fcd0:	ldr	x0, [x21, #32]
  40fcd4:	cmn	w0, #0x1
  40fcd8:	b.ne	40fc7c <wcrtomb@plt+0xb05c>  // b.any
  40fcdc:	ldr	w0, [x22]
  40fce0:	mov	x1, x20
  40fce4:	mov	w2, #0x0                   	// #0
  40fce8:	bl	404160 <unlinkat@plt>
  40fcec:	cbnz	w0, 40fda0 <wcrtomb@plt+0xb180>
  40fcf0:	ldr	w2, [x22]
  40fcf4:	cbz	x24, 40fd14 <wcrtomb@plt+0xb0f4>
  40fcf8:	mov	x3, x20
  40fcfc:	mov	w0, w2
  40fd00:	mov	x1, x24
  40fd04:	mov	w4, #0x0                   	// #0
  40fd08:	bl	4040e0 <linkat@plt>
  40fd0c:	cbz	w0, 40fc7c <wcrtomb@plt+0xb05c>
  40fd10:	ldr	w2, [x22]
  40fd14:	ldrb	w0, [x21, #40]
  40fd18:	cbz	w0, 40fdac <wcrtomb@plt+0xb18c>
  40fd1c:	mov	w1, w2
  40fd20:	mov	x0, x25
  40fd24:	mov	x2, x20
  40fd28:	bl	404a40 <symlinkat@plt>
  40fd2c:	cbz	w0, 40fdd4 <wcrtomb@plt+0xb1b4>
  40fd30:	mov	x1, x20
  40fd34:	mov	x0, x25
  40fd38:	bl	42a1c8 <wcrtomb@plt+0x255a8>
  40fd3c:	b	40fc7c <wcrtomb@plt+0xb05c>
  40fd40:	ldr	x19, [x21, #96]
  40fd44:	cbz	x19, 40fd58 <wcrtomb@plt+0xb138>
  40fd48:	mov	x0, x19
  40fd4c:	ldr	x19, [x19]
  40fd50:	bl	4047b0 <free@plt>
  40fd54:	cbnz	x19, 40fd48 <wcrtomb@plt+0xb128>
  40fd58:	ldp	x1, x0, [x21, #144]
  40fd5c:	bl	413b98 <wcrtomb@plt+0xef78>
  40fd60:	ldr	x0, [x21, #104]
  40fd64:	bl	4047b0 <free@plt>
  40fd68:	ldr	x19, [x21]
  40fd6c:	mov	x0, x21
  40fd70:	bl	4047b0 <free@plt>
  40fd74:	cbz	x19, 40fd80 <wcrtomb@plt+0xb160>
  40fd78:	mov	x21, x19
  40fd7c:	b	40fc60 <wcrtomb@plt+0xb040>
  40fd80:	ldp	x19, x20, [sp, #16]
  40fd84:	ldr	x25, [sp, #64]
  40fd88:	str	xzr, [x23, #24]
  40fd8c:	ldp	x29, x30, [sp]
  40fd90:	ldp	x21, x22, [sp, #32]
  40fd94:	ldp	x23, x24, [sp, #48]
  40fd98:	add	sp, sp, #0x280
  40fd9c:	ret
  40fda0:	mov	x0, x20
  40fda4:	bl	42a2b8 <wcrtomb@plt+0x25698>
  40fda8:	b	40fc7c <wcrtomb@plt+0xb05c>
  40fdac:	mov	x3, x20
  40fdb0:	mov	w0, w2
  40fdb4:	mov	x1, x25
  40fdb8:	mov	w4, #0x0                   	// #0
  40fdbc:	bl	4040e0 <linkat@plt>
  40fdc0:	cbz	w0, 40fc7c <wcrtomb@plt+0xb05c>
  40fdc4:	mov	x1, x20
  40fdc8:	mov	x0, x25
  40fdcc:	bl	429d20 <wcrtomb@plt+0x25100>
  40fdd0:	b	40fc7c <wcrtomb@plt+0xb05c>
  40fdd4:	ldr	w8, [x21, #52]
  40fdd8:	mov	x24, x20
  40fddc:	ldp	w2, w1, [x21, #44]
  40fde0:	mov	x0, x20
  40fde4:	ldp	x12, x13, [x21, #56]
  40fde8:	mov	w7, #0x100                 	// #256
  40fdec:	ldp	x10, x11, [x21, #72]
  40fdf0:	mov	w6, #0x0                   	// #0
  40fdf4:	ldr	x3, [x21, #104]
  40fdf8:	str	w8, [sp, #332]
  40fdfc:	ldr	x8, [x21, #112]
  40fe00:	str	x8, [sp, #272]
  40fe04:	ldr	x8, [x21, #120]
  40fe08:	str	x8, [sp, #280]
  40fe0c:	ldr	x8, [x21, #128]
  40fe10:	str	x8, [sp, #288]
  40fe14:	ldr	x8, [x21, #136]
  40fe18:	str	x8, [sp, #296]
  40fe1c:	ldr	x9, [x21, #144]
  40fe20:	mov	w5, #0x32                  	// #50
  40fe24:	ldr	x8, [x21, #152]
  40fe28:	mov	w4, #0x0                   	// #0
  40fe2c:	str	x3, [sp, #264]
  40fe30:	mov	w3, #0x0                   	// #0
  40fe34:	str	w2, [sp, #320]
  40fe38:	mov	w2, #0xffffffff            	// #-1
  40fe3c:	str	w1, [sp, #328]
  40fe40:	add	x1, sp, #0xd8
  40fe44:	stp	x12, x13, [sp, #432]
  40fe48:	stp	x10, x11, [sp, #448]
  40fe4c:	str	x9, [sp, #544]
  40fe50:	str	x8, [sp, #552]
  40fe54:	bl	40f650 <wcrtomb@plt+0xaa30>
  40fe58:	b	40fc7c <wcrtomb@plt+0xb05c>
  40fe5c:	nop
  40fe60:	stp	x29, x30, [sp, #-32]!
  40fe64:	mov	w1, #0x0                   	// #0
  40fe68:	mov	x29, sp
  40fe6c:	str	x19, [sp, #16]
  40fe70:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  40fe74:	add	x19, x19, #0x948
  40fe78:	mov	x0, x19
  40fe7c:	bl	40fa00 <wcrtomb@plt+0xade0>
  40fe80:	bl	40fc28 <wcrtomb@plt+0xb008>
  40fe84:	mov	x0, x19
  40fe88:	mov	w1, #0x1                   	// #1
  40fe8c:	ldr	x19, [sp, #16]
  40fe90:	ldp	x29, x30, [sp], #32
  40fe94:	b	40fa00 <wcrtomb@plt+0xade0>
  40fe98:	stp	x29, x30, [sp, #-160]!
  40fe9c:	mov	x3, x1
  40fea0:	mov	x29, sp
  40fea4:	cbz	x1, 40fee8 <wcrtomb@plt+0xb2c8>
  40fea8:	ldr	w1, [x3, #16]
  40feac:	mov	w0, #0x0                   	// #0
  40feb0:	and	w1, w1, #0xf000
  40feb4:	cmp	w1, #0x4, lsl #12
  40feb8:	b.ne	40fec4 <wcrtomb@plt+0xb2a4>  // b.any
  40febc:	ldp	x29, x30, [sp], #160
  40fec0:	ret
  40fec4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  40fec8:	add	x0, x0, #0x28
  40fecc:	ldp	x2, x3, [x3, #88]
  40fed0:	ldp	x0, x1, [x0, #232]
  40fed4:	bl	426090 <wcrtomb@plt+0x21470>
  40fed8:	cmp	w0, #0x0
  40fedc:	cset	w0, le
  40fee0:	ldp	x29, x30, [sp], #160
  40fee4:	ret
  40fee8:	add	x1, sp, #0x20
  40feec:	str	x19, [sp, #16]
  40fef0:	mov	x19, x0
  40fef4:	bl	41b9a0 <wcrtomb@plt+0x16d80>
  40fef8:	cbz	w0, 40ff1c <wcrtomb@plt+0xb2fc>
  40fefc:	bl	404ad0 <__errno_location@plt>
  40ff00:	mov	x1, x0
  40ff04:	mov	w0, #0x0                   	// #0
  40ff08:	ldr	w1, [x1]
  40ff0c:	cmp	w1, #0x2
  40ff10:	b.ne	40ff28 <wcrtomb@plt+0xb308>  // b.any
  40ff14:	ldr	x19, [sp, #16]
  40ff18:	b	40febc <wcrtomb@plt+0xb29c>
  40ff1c:	add	x3, sp, #0x20
  40ff20:	ldr	x19, [sp, #16]
  40ff24:	b	40fea8 <wcrtomb@plt+0xb288>
  40ff28:	mov	x0, x19
  40ff2c:	bl	42a288 <wcrtomb@plt+0x25668>
  40ff30:	mov	w0, #0x1                   	// #1
  40ff34:	ldr	x19, [sp, #16]
  40ff38:	b	40febc <wcrtomb@plt+0xb29c>
  40ff3c:	nop
  40ff40:	stp	x29, x30, [sp, #-192]!
  40ff44:	mov	x29, sp
  40ff48:	str	x23, [sp, #48]
  40ff4c:	and	w23, w1, #0xff
  40ff50:	ldrb	w1, [x2]
  40ff54:	cbnz	w1, 40fff4 <wcrtomb@plt+0xb3d4>
  40ff58:	stp	x19, x20, [sp, #16]
  40ff5c:	mov	x19, x2
  40ff60:	stp	x21, x22, [sp, #32]
  40ff64:	mov	x22, x0
  40ff68:	bl	404ad0 <__errno_location@plt>
  40ff6c:	ldr	w20, [x0]
  40ff70:	mov	x21, x0
  40ff74:	cmp	w20, #0x11
  40ff78:	b.eq	410004 <wcrtomb@plt+0xb3e4>  // b.none
  40ff7c:	b.le	40ffc4 <wcrtomb@plt+0xb3a4>
  40ff80:	cmp	w20, #0x28
  40ff84:	b.eq	40ff94 <wcrtomb@plt+0xb374>  // b.none
  40ff88:	and	w0, w20, #0xffffffbf
  40ff8c:	cmp	w0, #0x1f
  40ff90:	b.ne	40ffa8 <wcrtomb@plt+0xb388>  // b.any
  40ff94:	cbz	w23, 40ffa8 <wcrtomb@plt+0xb388>
  40ff98:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  40ff9c:	ldr	w0, [x23, #696]
  40ffa0:	cmp	w0, #0x2
  40ffa4:	b.eq	410078 <wcrtomb@plt+0xb458>  // b.none
  40ffa8:	str	w20, [x21]
  40ffac:	mov	w0, #0x0                   	// #0
  40ffb0:	ldp	x19, x20, [sp, #16]
  40ffb4:	ldp	x21, x22, [sp, #32]
  40ffb8:	ldr	x23, [sp, #48]
  40ffbc:	ldp	x29, x30, [sp], #192
  40ffc0:	ret
  40ffc4:	cmp	w20, #0x2
  40ffc8:	b.ne	40ffa8 <wcrtomb@plt+0xb388>  // b.any
  40ffcc:	mov	x0, x22
  40ffd0:	mov	x1, x19
  40ffd4:	bl	40f420 <wcrtomb@plt+0xa800>
  40ffd8:	cbnz	w0, 40ffa8 <wcrtomb@plt+0xb388>
  40ffdc:	ldrb	w0, [x19]
  40ffe0:	cbz	w0, 40ffa8 <wcrtomb@plt+0xb388>
  40ffe4:	mov	w0, #0x1                   	// #1
  40ffe8:	ldp	x19, x20, [sp, #16]
  40ffec:	ldp	x21, x22, [sp, #32]
  40fff0:	b	40ffb8 <wcrtomb@plt+0xb398>
  40fff4:	mov	w0, #0x0                   	// #0
  40fff8:	ldr	x23, [sp, #48]
  40fffc:	ldp	x29, x30, [sp], #192
  410000:	ret
  410004:	mov	x1, #0x0                   	// #0
  410008:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  41000c:	ldr	w0, [x23, #696]
  410010:	cmp	w0, #0x5
  410014:	b.eq	4100ac <wcrtomb@plt+0xb48c>  // b.none
  410018:	b.hi	410044 <wcrtomb@plt+0xb424>  // b.pmore
  41001c:	cmp	w0, #0x2
  410020:	b.ls	410060 <wcrtomb@plt+0xb440>  // b.plast
  410024:	cmp	w0, #0x4
  410028:	mov	w0, #0x0                   	// #0
  41002c:	b.ne	40ffcc <wcrtomb@plt+0xb3ac>  // b.any
  410030:	ldp	x19, x20, [sp, #16]
  410034:	ldp	x21, x22, [sp, #32]
  410038:	ldr	x23, [sp, #48]
  41003c:	ldp	x29, x30, [sp], #192
  410040:	ret
  410044:	cmp	w0, #0x6
  410048:	b.ne	40ffcc <wcrtomb@plt+0xb3ac>  // b.any
  41004c:	mov	x0, x22
  410050:	bl	40fe98 <wcrtomb@plt+0xb278>
  410054:	tst	w0, #0xff
  410058:	b.ne	40ffcc <wcrtomb@plt+0xb3ac>  // b.any
  41005c:	nop
  410060:	mov	x0, x22
  410064:	mov	w1, #0x0                   	// #0
  410068:	bl	41c400 <wcrtomb@plt+0x177e0>
  41006c:	cmp	w0, #0x0
  410070:	b.le	40ffcc <wcrtomb@plt+0xb3ac>
  410074:	b	40ffe4 <wcrtomb@plt+0xb3c4>
  410078:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41007c:	ldrb	w0, [x0, #520]
  410080:	cbnz	w0, 40ffa8 <wcrtomb@plt+0xb388>
  410084:	mov	x0, x22
  410088:	mov	w1, #0x2f                  	// #47
  41008c:	bl	404870 <strchr@plt>
  410090:	cbz	x0, 410060 <wcrtomb@plt+0xb440>
  410094:	add	x1, sp, #0x40
  410098:	mov	x0, x22
  41009c:	bl	41b9a0 <wcrtomb@plt+0x16d80>
  4100a0:	add	x1, sp, #0x40
  4100a4:	cbz	w0, 41000c <wcrtomb@plt+0xb3ec>
  4100a8:	b	40ffa8 <wcrtomb@plt+0xb388>
  4100ac:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4100b0:	mov	w0, #0x2                   	// #2
  4100b4:	ldr	w1, [x1, #408]
  4100b8:	tbz	w1, #20, 410030 <wcrtomb@plt+0xb410>
  4100bc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4100c0:	ldr	x0, [x0, #952]
  4100c4:	cbz	x0, 4100cc <wcrtomb@plt+0xb4ac>
  4100c8:	blr	x0
  4100cc:	mov	w2, #0x5                   	// #5
  4100d0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4100d4:	mov	x0, #0x0                   	// #0
  4100d8:	add	x1, x1, #0xee0
  4100dc:	bl	4049c0 <dcgettext@plt>
  4100e0:	mov	x2, x0
  4100e4:	mov	x3, x22
  4100e8:	mov	w0, #0x0                   	// #0
  4100ec:	mov	w1, #0x0                   	// #0
  4100f0:	bl	404050 <error@plt>
  4100f4:	mov	w0, #0x2                   	// #2
  4100f8:	ldp	x19, x20, [sp, #16]
  4100fc:	ldp	x21, x22, [sp, #32]
  410100:	b	40ffb8 <wcrtomb@plt+0xb398>
  410104:	nop
  410108:	stp	x29, x30, [sp, #-80]!
  41010c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  410110:	mov	x29, sp
  410114:	stp	x23, x24, [sp, #48]
  410118:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  41011c:	add	x23, x23, #0x28
  410120:	stp	x19, x20, [sp, #16]
  410124:	mov	x20, x0
  410128:	ldr	w0, [x2, #924]
  41012c:	ldr	w2, [x23, #104]
  410130:	mov	w24, w1
  410134:	cmp	w0, #0x0
  410138:	stp	x21, x22, [sp, #32]
  41013c:	and	w0, w2, #0xffffffc0
  410140:	csel	w2, w0, w2, gt
  410144:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  410148:	and	w21, w2, #0x1ff
  41014c:	add	x22, x22, #0x888
  410150:	strb	wzr, [sp, #79]
  410154:	ldr	w0, [x22]
  410158:	mov	w2, w21
  41015c:	mov	x1, x20
  410160:	bl	4049d0 <mkfifoat@plt>
  410164:	mov	w19, w0
  410168:	add	x2, sp, #0x4f
  41016c:	mov	x0, x20
  410170:	mov	w1, #0x0                   	// #0
  410174:	cbz	w19, 4101c8 <wcrtomb@plt+0xb5a8>
  410178:	bl	40ff40 <wcrtomb@plt+0xb320>
  41017c:	cbz	w0, 4101a4 <wcrtomb@plt+0xb584>
  410180:	cmp	w0, #0x2
  410184:	b.ne	410154 <wcrtomb@plt+0xb534>  // b.any
  410188:	mov	w19, #0x0                   	// #0
  41018c:	mov	w0, w19
  410190:	ldp	x19, x20, [sp, #16]
  410194:	ldp	x21, x22, [sp, #32]
  410198:	ldp	x23, x24, [sp, #48]
  41019c:	ldp	x29, x30, [sp], #80
  4101a0:	ret
  4101a4:	mov	x0, x20
  4101a8:	mov	w19, #0xffffffff            	// #-1
  4101ac:	bl	429dc8 <wcrtomb@plt+0x251a8>
  4101b0:	mov	w0, w19
  4101b4:	ldp	x19, x20, [sp, #16]
  4101b8:	ldp	x21, x22, [sp, #32]
  4101bc:	ldp	x23, x24, [sp, #48]
  4101c0:	ldp	x29, x30, [sp], #80
  4101c4:	ret
  4101c8:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4101cc:	mov	w5, w24
  4101d0:	mov	x1, x23
  4101d4:	mov	w7, #0x100                 	// #256
  4101d8:	ldr	w3, [x2, #2032]
  4101dc:	mov	w6, #0x0                   	// #0
  4101e0:	mov	w4, #0x1ff                 	// #511
  4101e4:	mov	w2, #0xffffffff            	// #-1
  4101e8:	bic	w3, w21, w3
  4101ec:	bl	40f650 <wcrtomb@plt+0xaa30>
  4101f0:	b	41018c <wcrtomb@plt+0xb56c>
  4101f4:	nop
  4101f8:	stp	x29, x30, [sp, #-80]!
  4101fc:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  410200:	mov	x29, sp
  410204:	stp	x21, x22, [sp, #32]
  410208:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  41020c:	add	x22, x22, #0x28
  410210:	ldr	w2, [x2, #924]
  410214:	mov	w21, #0x61ff                	// #25087
  410218:	stp	x19, x20, [sp, #16]
  41021c:	mov	x20, x0
  410220:	ldr	w0, [x22, #104]
  410224:	cmp	w2, #0x0
  410228:	stp	x23, x24, [sp, #48]
  41022c:	mov	w24, w1
  410230:	and	w1, w0, #0xffffffc0
  410234:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  410238:	csel	w0, w1, w0, gt
  41023c:	add	x23, x23, #0x888
  410240:	and	w21, w0, w21
  410244:	strb	wzr, [sp, #71]
  410248:	ldr	w1, [x23]
  41024c:	mov	x2, x20
  410250:	ldr	x5, [x22, #120]
  410254:	add	x4, sp, #0x48
  410258:	mov	w3, w21
  41025c:	mov	w0, #0x0                   	// #0
  410260:	str	x5, [sp, #72]
  410264:	bl	404480 <__xmknodat@plt>
  410268:	mov	w19, w0
  41026c:	add	x2, sp, #0x47
  410270:	mov	x0, x20
  410274:	mov	w1, #0x0                   	// #0
  410278:	cbz	w19, 4102cc <wcrtomb@plt+0xb6ac>
  41027c:	bl	40ff40 <wcrtomb@plt+0xb320>
  410280:	cbz	w0, 4102a8 <wcrtomb@plt+0xb688>
  410284:	cmp	w0, #0x2
  410288:	b.ne	410248 <wcrtomb@plt+0xb628>  // b.any
  41028c:	mov	w19, #0x0                   	// #0
  410290:	mov	w0, w19
  410294:	ldp	x19, x20, [sp, #16]
  410298:	ldp	x21, x22, [sp, #32]
  41029c:	ldp	x23, x24, [sp, #48]
  4102a0:	ldp	x29, x30, [sp], #80
  4102a4:	ret
  4102a8:	mov	x0, x20
  4102ac:	mov	w19, #0xffffffff            	// #-1
  4102b0:	bl	429dd8 <wcrtomb@plt+0x251b8>
  4102b4:	mov	w0, w19
  4102b8:	ldp	x19, x20, [sp, #16]
  4102bc:	ldp	x21, x22, [sp, #32]
  4102c0:	ldp	x23, x24, [sp, #48]
  4102c4:	ldp	x29, x30, [sp], #80
  4102c8:	ret
  4102cc:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4102d0:	mov	w5, w24
  4102d4:	mov	x1, x22
  4102d8:	mov	w7, #0x100                 	// #256
  4102dc:	ldr	w3, [x2, #2032]
  4102e0:	mov	w6, #0x0                   	// #0
  4102e4:	mov	w4, #0x1ff                 	// #511
  4102e8:	mov	w2, #0xffffffff            	// #-1
  4102ec:	bic	w3, w21, w3
  4102f0:	bl	40f650 <wcrtomb@plt+0xaa30>
  4102f4:	b	410290 <wcrtomb@plt+0xb670>
  4102f8:	stp	x29, x30, [sp, #-192]!
  4102fc:	mov	x29, sp
  410300:	stp	x19, x20, [sp, #16]
  410304:	mov	x19, x0
  410308:	stp	x21, x22, [sp, #32]
  41030c:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  410310:	mov	x22, x2
  410314:	add	x21, x21, #0x888
  410318:	stp	x23, x24, [sp, #48]
  41031c:	and	w23, w1, #0xff
  410320:	ldr	w0, [x21]
  410324:	mov	x1, x19
  410328:	mov	w2, #0xc1                  	// #193
  41032c:	mov	w3, #0x0                   	// #0
  410330:	bl	404ab0 <openat@plt>
  410334:	mov	w20, w0
  410338:	mov	x2, x22
  41033c:	mov	x0, x19
  410340:	mov	w1, #0x0                   	// #0
  410344:	tbz	w20, #31, 410398 <wcrtomb@plt+0xb778>
  410348:	bl	40ff40 <wcrtomb@plt+0xb320>
  41034c:	cbz	w0, 410374 <wcrtomb@plt+0xb754>
  410350:	cmp	w0, #0x2
  410354:	b.ne	410320 <wcrtomb@plt+0xb700>  // b.any
  410358:	mov	w21, #0x0                   	// #0
  41035c:	mov	w0, w21
  410360:	ldp	x19, x20, [sp, #16]
  410364:	ldp	x21, x22, [sp, #32]
  410368:	ldp	x23, x24, [sp, #48]
  41036c:	ldp	x29, x30, [sp], #192
  410370:	ret
  410374:	mov	x0, x19
  410378:	mov	w21, #0xffffffff            	// #-1
  41037c:	bl	429de8 <wcrtomb@plt+0x251c8>
  410380:	mov	w0, w21
  410384:	ldp	x19, x20, [sp, #16]
  410388:	ldp	x21, x22, [sp, #32]
  41038c:	ldp	x23, x24, [sp, #48]
  410390:	ldp	x29, x30, [sp], #192
  410394:	ret
  410398:	add	x2, sp, #0x40
  41039c:	mov	w1, w20
  4103a0:	mov	w0, #0x0                   	// #0
  4103a4:	bl	4049a0 <__fxstat@plt>
  4103a8:	cbnz	w0, 4104fc <wcrtomb@plt+0xb8dc>
  4103ac:	mov	w0, w20
  4103b0:	bl	4045c0 <close@plt>
  4103b4:	mov	w21, w0
  4103b8:	cbnz	w0, 4104ec <wcrtomb@plt+0xb8cc>
  4103bc:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  4103c0:	add	x22, x22, #0x28
  4103c4:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4103c8:	ldr	x0, [x22, #24]
  4103cc:	bl	403ff0 <strlen@plt>
  4103d0:	add	x0, x0, #0xa1
  4103d4:	bl	440f48 <argp_parse@@Base+0xd060>
  4103d8:	mov	x20, x0
  4103dc:	add	x1, x24, #0x7e0
  4103e0:	mov	x0, #0xffffffffffffffff    	// #-1
  4103e4:	ldp	x3, x2, [sp, #64]
  4103e8:	stp	x3, x2, [x20, #8]
  4103ec:	ldr	x3, [x1, #24]
  4103f0:	str	x3, [x20]
  4103f4:	stp	x0, x0, [x20, #24]
  4103f8:	str	x20, [x1, #24]
  4103fc:	strb	w23, [x20, #40]
  410400:	cbnz	w23, 4104c8 <wcrtomb@plt+0xb8a8>
  410404:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  410408:	mov	x0, x19
  41040c:	ldr	w1, [x1, #4040]
  410410:	str	w1, [x20, #88]
  410414:	bl	403ff0 <strlen@plt>
  410418:	add	x0, x0, #0x9
  41041c:	bl	440f48 <argp_parse@@Base+0xd060>
  410420:	str	x0, [x20, #96]
  410424:	str	xzr, [x0], #8
  410428:	mov	x1, x19
  41042c:	bl	404910 <strcpy@plt>
  410430:	mov	x0, x20
  410434:	ldr	x1, [x22, #48]
  410438:	str	xzr, [x0, #104]!
  41043c:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  410440:	stp	xzr, xzr, [x20, #112]
  410444:	add	x2, x20, #0x90
  410448:	stp	xzr, xzr, [x20, #128]
  41044c:	add	x1, x20, #0x98
  410450:	mov	x0, x22
  410454:	bl	413da8 <wcrtomb@plt+0xf188>
  410458:	ldr	x1, [x22, #24]
  41045c:	add	x0, x20, #0xa0
  410460:	bl	404910 <strcpy@plt>
  410464:	ldr	x20, [x24, #2016]
  410468:	cbnz	x20, 410478 <wcrtomb@plt+0xb858>
  41046c:	b	41035c <wcrtomb@plt+0xb73c>
  410470:	ldr	x20, [x20]
  410474:	cbz	x20, 41035c <wcrtomb@plt+0xb73c>
  410478:	ldrb	w1, [x20, #88]
  41047c:	mov	x0, x19
  410480:	cbnz	w1, 410470 <wcrtomb@plt+0xb850>
  410484:	ldp	x22, x1, [x20, #152]
  410488:	mov	x2, x22
  41048c:	bl	4043c0 <strncmp@plt>
  410490:	cbnz	w0, 410470 <wcrtomb@plt+0xb850>
  410494:	ldrb	w0, [x19, x22]
  410498:	cmp	w0, #0x2f
  41049c:	b.ne	410470 <wcrtomb@plt+0xb850>  // b.any
  4104a0:	add	x22, x22, #0x1
  4104a4:	mov	x0, x19
  4104a8:	add	x22, x19, x22
  4104ac:	bl	435560 <argp_parse@@Base+0x1678>
  4104b0:	cmp	x0, x22
  4104b4:	b.ne	410470 <wcrtomb@plt+0xb850>  // b.any
  4104b8:	mov	x0, x20
  4104bc:	mov	w21, #0x0                   	// #0
  4104c0:	bl	40f1e0 <wcrtomb@plt+0xa5c0>
  4104c4:	b	41035c <wcrtomb@plt+0xb73c>
  4104c8:	ldr	w1, [x22, #104]
  4104cc:	ldr	x0, [x22, #112]
  4104d0:	str	w1, [x20, #44]
  4104d4:	str	x0, [x20, #48]
  4104d8:	ldp	x2, x3, [x22, #216]
  4104dc:	stp	x2, x3, [x20, #56]
  4104e0:	ldp	x0, x1, [x22, #232]
  4104e4:	stp	x0, x1, [x20, #72]
  4104e8:	b	410404 <wcrtomb@plt+0xb7e4>
  4104ec:	mov	x0, x19
  4104f0:	mov	w21, #0xffffffff            	// #-1
  4104f4:	bl	429ce8 <wcrtomb@plt+0x250c8>
  4104f8:	b	41035c <wcrtomb@plt+0xb73c>
  4104fc:	mov	x0, x19
  410500:	bl	42a278 <wcrtomb@plt+0x25658>
  410504:	mov	w0, w20
  410508:	mov	w21, #0xffffffff            	// #-1
  41050c:	bl	4045c0 <close@plt>
  410510:	b	41035c <wcrtomb@plt+0xb73c>
  410514:	nop
  410518:	stp	x29, x30, [sp, #-336]!
  41051c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  410520:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  410524:	mov	x29, sp
  410528:	ldrb	w1, [x1, #896]
  41052c:	stp	x19, x20, [sp, #16]
  410530:	mov	x19, x0
  410534:	stp	x21, x22, [sp, #32]
  410538:	strb	wzr, [sp, #79]
  41053c:	ldr	x22, [x2, #64]
  410540:	cbz	w1, 410710 <wcrtomb@plt+0xbaf0>
  410544:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  410548:	add	x21, x21, #0x888
  41054c:	str	x23, [sp, #48]
  410550:	bl	404ad0 <__errno_location@plt>
  410554:	mov	x23, x0
  410558:	b	410578 <wcrtomb@plt+0xb958>
  41055c:	str	w20, [x23]
  410560:	add	x2, sp, #0x4f
  410564:	mov	x0, x19
  410568:	mov	w1, #0x0                   	// #0
  41056c:	bl	40ff40 <wcrtomb@plt+0xb320>
  410570:	cmp	w0, #0x1
  410574:	b.ne	4106c8 <wcrtomb@plt+0xbaa8>  // b.any
  410578:	ldr	w2, [x21]
  41057c:	mov	x1, x22
  410580:	mov	x3, x19
  410584:	mov	w4, #0x0                   	// #0
  410588:	mov	w0, w2
  41058c:	bl	4040e0 <linkat@plt>
  410590:	ldr	w20, [x23]
  410594:	mov	x1, x19
  410598:	cbz	w0, 410620 <wcrtomb@plt+0xba00>
  41059c:	cmp	w20, #0x11
  4105a0:	b.ne	4105b0 <wcrtomb@plt+0xb990>  // b.any
  4105a4:	mov	x0, x22
  4105a8:	bl	404710 <strcmp@plt>
  4105ac:	cbz	w0, 410608 <wcrtomb@plt+0xb9e8>
  4105b0:	ldr	w1, [x21]
  4105b4:	add	x3, sp, #0x50
  4105b8:	mov	x2, x22
  4105bc:	mov	w4, #0x100                 	// #256
  4105c0:	mov	w0, #0x0                   	// #0
  4105c4:	bl	404c00 <__fxstatat@plt>
  4105c8:	cbnz	w0, 41055c <wcrtomb@plt+0xb93c>
  4105cc:	ldr	w1, [x21]
  4105d0:	add	x3, sp, #0xd0
  4105d4:	mov	x2, x19
  4105d8:	mov	w4, #0x100                 	// #256
  4105dc:	bl	404c00 <__fxstatat@plt>
  4105e0:	cbnz	w0, 41055c <wcrtomb@plt+0xb93c>
  4105e4:	ldr	x1, [sp, #80]
  4105e8:	ldr	x0, [sp, #208]
  4105ec:	cmp	x1, x0
  4105f0:	b.ne	41055c <wcrtomb@plt+0xb93c>  // b.any
  4105f4:	ldr	x1, [sp, #88]
  4105f8:	ldr	x0, [sp, #216]
  4105fc:	cmp	x1, x0
  410600:	b.ne	41055c <wcrtomb@plt+0xb93c>  // b.any
  410604:	nop
  410608:	ldr	x23, [sp, #48]
  41060c:	mov	w0, #0x0                   	// #0
  410610:	ldp	x19, x20, [sp, #16]
  410614:	ldp	x21, x22, [sp, #32]
  410618:	ldp	x29, x30, [sp], #336
  41061c:	ret
  410620:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  410624:	ldr	x20, [x1, #2040]
  410628:	cbz	x20, 410608 <wcrtomb@plt+0xb9e8>
  41062c:	ldr	w1, [x21]
  410630:	mov	x2, x22
  410634:	add	x3, sp, #0x50
  410638:	mov	w4, #0x100                 	// #256
  41063c:	bl	404c00 <__fxstatat@plt>
  410640:	cbnz	w0, 410608 <wcrtomb@plt+0xb9e8>
  410644:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  410648:	ldp	x2, x3, [sp, #80]
  41064c:	ldr	w1, [x0, #4040]
  410650:	b	41065c <wcrtomb@plt+0xba3c>
  410654:	ldr	x20, [x20]
  410658:	cbz	x20, 410608 <wcrtomb@plt+0xb9e8>
  41065c:	ldr	w0, [x20, #88]
  410660:	cmp	w0, w1
  410664:	b.ne	410654 <wcrtomb@plt+0xba34>  // b.any
  410668:	ldr	x0, [x20, #8]
  41066c:	cmp	x0, x2
  410670:	b.ne	410654 <wcrtomb@plt+0xba34>  // b.any
  410674:	ldr	x0, [x20, #16]
  410678:	cmp	x0, x3
  41067c:	b.ne	410654 <wcrtomb@plt+0xba34>  // b.any
  410680:	ldr	x0, [x20, #24]
  410684:	cmn	x0, #0x1
  410688:	b.ne	410654 <wcrtomb@plt+0xba34>  // b.any
  41068c:	ldr	x0, [x20, #32]
  410690:	cmn	w0, #0x1
  410694:	b.ne	410654 <wcrtomb@plt+0xba34>  // b.any
  410698:	mov	x0, x19
  41069c:	bl	403ff0 <strlen@plt>
  4106a0:	add	x0, x0, #0x9
  4106a4:	bl	440f48 <argp_parse@@Base+0xd060>
  4106a8:	mov	x1, x19
  4106ac:	mov	x19, x0
  4106b0:	add	x0, x0, #0x8
  4106b4:	bl	404910 <strcpy@plt>
  4106b8:	ldr	x0, [x20, #96]
  4106bc:	str	x0, [x19]
  4106c0:	str	x19, [x20, #96]
  4106c4:	b	410608 <wcrtomb@plt+0xb9e8>
  4106c8:	cmp	w0, #0x2
  4106cc:	mov	w0, #0x0                   	// #0
  4106d0:	b.eq	410734 <wcrtomb@plt+0xbb14>  // b.none
  4106d4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4106d8:	ldrb	w1, [x1, #4073]
  4106dc:	cbz	w1, 4106ec <wcrtomb@plt+0xbacc>
  4106e0:	ldr	w1, [x23]
  4106e4:	cmp	w1, #0x11
  4106e8:	b.eq	410734 <wcrtomb@plt+0xbb14>  // b.none
  4106ec:	mov	x1, x19
  4106f0:	mov	x0, x22
  4106f4:	bl	429d20 <wcrtomb@plt+0x25100>
  4106f8:	mov	w0, #0x1                   	// #1
  4106fc:	ldp	x19, x20, [sp, #16]
  410700:	ldp	x21, x22, [sp, #32]
  410704:	ldr	x23, [sp, #48]
  410708:	ldp	x29, x30, [sp], #336
  41070c:	ret
  410710:	mov	x0, x22
  410714:	bl	41ec98 <wcrtomb@plt+0x1a078>
  410718:	tst	w0, #0xff
  41071c:	b.eq	410544 <wcrtomb@plt+0xb924>  // b.none
  410720:	mov	x0, x19
  410724:	add	x2, sp, #0x4f
  410728:	mov	w1, #0x0                   	// #0
  41072c:	bl	4102f8 <wcrtomb@plt+0xb6d8>
  410730:	b	410610 <wcrtomb@plt+0xb9f0>
  410734:	ldp	x19, x20, [sp, #16]
  410738:	ldp	x21, x22, [sp, #32]
  41073c:	ldr	x23, [sp, #48]
  410740:	ldp	x29, x30, [sp], #336
  410744:	ret
  410748:	stp	x29, x30, [sp, #-64]!
  41074c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  410750:	mov	x29, sp
  410754:	ldrb	w1, [x1, #896]
  410758:	stp	x21, x22, [sp, #32]
  41075c:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  410760:	add	x21, x21, #0x28
  410764:	stp	x19, x20, [sp, #16]
  410768:	mov	x20, x0
  41076c:	strb	wzr, [sp, #63]
  410770:	ldr	x0, [x21, #24]
  410774:	cbnz	w1, 410794 <wcrtomb@plt+0xbb74>
  410778:	ldrb	w1, [x0]
  41077c:	cmp	w1, #0x2f
  410780:	b.eq	410814 <wcrtomb@plt+0xbbf4>  // b.none
  410784:	bl	41ec98 <wcrtomb@plt+0x1a078>
  410788:	tst	w0, #0xff
  41078c:	b.ne	410814 <wcrtomb@plt+0xbbf4>  // b.any
  410790:	ldr	x0, [x21, #24]
  410794:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  410798:	add	x22, x22, #0x888
  41079c:	mov	x2, x20
  4107a0:	ldr	w1, [x22]
  4107a4:	bl	404a40 <symlinkat@plt>
  4107a8:	mov	w19, w0
  4107ac:	add	x2, sp, #0x3f
  4107b0:	mov	x0, x20
  4107b4:	mov	w1, #0x0                   	// #0
  4107b8:	cbz	w19, 4107f0 <wcrtomb@plt+0xbbd0>
  4107bc:	bl	40ff40 <wcrtomb@plt+0xb320>
  4107c0:	cbz	w0, 410854 <wcrtomb@plt+0xbc34>
  4107c4:	cmp	w0, #0x2
  4107c8:	b.eq	41083c <wcrtomb@plt+0xbc1c>  // b.none
  4107cc:	ldr	w1, [x22]
  4107d0:	mov	x2, x20
  4107d4:	ldr	x0, [x21, #24]
  4107d8:	bl	404a40 <symlinkat@plt>
  4107dc:	mov	w19, w0
  4107e0:	add	x2, sp, #0x3f
  4107e4:	mov	x0, x20
  4107e8:	mov	w1, #0x0                   	// #0
  4107ec:	cbnz	w19, 4107bc <wcrtomb@plt+0xbb9c>
  4107f0:	mov	x1, x21
  4107f4:	mov	w7, #0x100                 	// #256
  4107f8:	mov	w6, #0x0                   	// #0
  4107fc:	mov	w5, #0x32                  	// #50
  410800:	mov	w4, #0x0                   	// #0
  410804:	mov	w3, #0x0                   	// #0
  410808:	mov	w2, #0xffffffff            	// #-1
  41080c:	bl	40f650 <wcrtomb@plt+0xaa30>
  410810:	b	410828 <wcrtomb@plt+0xbc08>
  410814:	mov	x0, x20
  410818:	add	x2, sp, #0x3f
  41081c:	mov	w1, #0x1                   	// #1
  410820:	bl	4102f8 <wcrtomb@plt+0xb6d8>
  410824:	mov	w19, w0
  410828:	mov	w0, w19
  41082c:	ldp	x19, x20, [sp, #16]
  410830:	ldp	x21, x22, [sp, #32]
  410834:	ldp	x29, x30, [sp], #64
  410838:	ret
  41083c:	mov	w19, #0x0                   	// #0
  410840:	mov	w0, w19
  410844:	ldp	x19, x20, [sp, #16]
  410848:	ldp	x21, x22, [sp, #32]
  41084c:	ldp	x29, x30, [sp], #64
  410850:	ret
  410854:	ldr	x0, [x21, #24]
  410858:	mov	x1, x20
  41085c:	mov	w19, #0xffffffff            	// #-1
  410860:	bl	42a1c8 <wcrtomb@plt+0x255a8>
  410864:	mov	w0, w19
  410868:	ldp	x19, x20, [sp, #16]
  41086c:	ldp	x21, x22, [sp, #32]
  410870:	ldp	x29, x30, [sp], #64
  410874:	ret
  410878:	stp	x29, x30, [sp, #-384]!
  41087c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  410880:	mov	x29, sp
  410884:	ldrb	w2, [x2, #29]
  410888:	stp	x19, x20, [sp, #16]
  41088c:	mov	x19, x0
  410890:	mov	w20, w1
  410894:	stp	x21, x22, [sp, #32]
  410898:	stp	x23, x24, [sp, #48]
  41089c:	stp	x25, x26, [sp, #64]
  4108a0:	stp	x27, x28, [sp, #80]
  4108a4:	strb	wzr, [sp, #127]
  4108a8:	cbz	w2, 4108b8 <wcrtomb@plt+0xbc98>
  4108ac:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  4108b0:	ldr	x0, [x21, #768]
  4108b4:	cbz	x0, 410aa0 <wcrtomb@plt+0xbe80>
  4108b8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4108bc:	ldrb	w0, [x0, #4073]
  4108c0:	cbnz	w0, 410a80 <wcrtomb@plt+0xbe60>
  4108c4:	cmp	w20, #0x44
  4108c8:	b.eq	410ad4 <wcrtomb@plt+0xbeb4>  // b.none
  4108cc:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4108d0:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  4108d4:	add	x22, x22, #0x28
  4108d8:	mov	w0, #0x1c0                 	// #448
  4108dc:	ldr	w1, [x1, #924]
  4108e0:	ldr	w20, [x22, #104]
  4108e4:	cmp	w1, #0x0
  4108e8:	b.gt	410900 <wcrtomb@plt+0xbce0>
  4108ec:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4108f0:	mov	w1, #0x1ff                 	// #511
  4108f4:	ldr	w2, [x2, #556]
  4108f8:	cmp	w2, #0x0
  4108fc:	csel	w0, w0, w1, gt
  410900:	adrp	x28, 482000 <_obstack_memory_used@@Base+0x3fe10>
  410904:	add	x26, x28, #0x7e0
  410908:	and	w20, w20, w0
  41090c:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  410910:	orr	w0, w20, #0xc0
  410914:	add	x23, x23, #0x888
  410918:	ldrb	w1, [x26, #12]
  41091c:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  410920:	mov	w27, #0x0                   	// #0
  410924:	add	x2, x24, #0x238
  410928:	cmp	w1, #0x0
  41092c:	mov	w25, #0x0                   	// #0
  410930:	csel	w20, w0, w20, eq  // eq = none
  410934:	str	x2, [sp, #104]
  410938:	ldr	w0, [x23]
  41093c:	mov	w2, w20
  410940:	mov	x1, x19
  410944:	bl	404260 <mkdirat@plt>
  410948:	mov	w21, w0
  41094c:	cbz	w0, 410b20 <wcrtomb@plt+0xbf00>
  410950:	bl	404ad0 <__errno_location@plt>
  410954:	mov	x24, x0
  410958:	ldr	w0, [x0]
  41095c:	cmp	w0, #0x11
  410960:	b.ne	4109a4 <wcrtomb@plt+0xbd84>  // b.any
  410964:	ldrb	w1, [sp, #127]
  410968:	ldr	x0, [sp, #104]
  41096c:	ldrb	w0, [x0]
  410970:	cbz	w1, 410a0c <wcrtomb@plt+0xbdec>
  410974:	cbnz	w0, 410a10 <wcrtomb@plt+0xbdf0>
  410978:	add	x1, sp, #0x80
  41097c:	mov	x0, x19
  410980:	bl	41b9a0 <wcrtomb@plt+0x16d80>
  410984:	cbnz	w0, 41099c <wcrtomb@plt+0xbd7c>
  410988:	ldr	w25, [sp, #144]
  41098c:	and	w0, w25, #0xf000
  410990:	cmp	w0, #0x4, lsl #12
  410994:	b.eq	410b34 <wcrtomb@plt+0xbf14>  // b.none
  410998:	mov	w27, #0xffffffff            	// #-1
  41099c:	mov	w0, #0x11                  	// #17
  4109a0:	str	w0, [x24]
  4109a4:	add	x2, sp, #0x7f
  4109a8:	mov	x0, x19
  4109ac:	mov	w1, #0x0                   	// #0
  4109b0:	bl	40ff40 <wcrtomb@plt+0xb320>
  4109b4:	cbz	w0, 410a48 <wcrtomb@plt+0xbe28>
  4109b8:	cmp	w0, #0x1
  4109bc:	b.eq	410938 <wcrtomb@plt+0xbd18>  // b.none
  4109c0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4109c4:	ldr	w0, [x0, #696]
  4109c8:	tst	w0, #0xfffffffd
  4109cc:	b.ne	4109ec <wcrtomb@plt+0xbdcc>  // b.any
  4109d0:	mov	w5, #0x0                   	// #0
  4109d4:	ldr	w4, [x22, #104]
  4109d8:	mov	w3, w27
  4109dc:	mov	w2, w25
  4109e0:	mov	x0, x19
  4109e4:	mov	x1, x22
  4109e8:	bl	40f248 <wcrtomb@plt+0xa628>
  4109ec:	mov	w0, w21
  4109f0:	ldp	x19, x20, [sp, #16]
  4109f4:	ldp	x21, x22, [sp, #32]
  4109f8:	ldp	x23, x24, [sp, #48]
  4109fc:	ldp	x25, x26, [sp, #64]
  410a00:	ldp	x27, x28, [sp, #80]
  410a04:	ldp	x29, x30, [sp], #384
  410a08:	ret
  410a0c:	cbz	w0, 410a8c <wcrtomb@plt+0xbe6c>
  410a10:	ldr	w1, [x23]
  410a14:	add	x3, sp, #0x100
  410a18:	mov	x2, x19
  410a1c:	mov	w4, #0x100                 	// #256
  410a20:	mov	w0, #0x0                   	// #0
  410a24:	bl	404c00 <__fxstatat@plt>
  410a28:	cbnz	w0, 410a3c <wcrtomb@plt+0xbe1c>
  410a2c:	ldr	w1, [sp, #272]
  410a30:	and	w1, w1, #0xf000
  410a34:	cmp	w1, #0xa, lsl #12
  410a38:	b.eq	410ae8 <wcrtomb@plt+0xbec8>  // b.none
  410a3c:	mov	w0, #0x11                  	// #17
  410a40:	str	w0, [x24]
  410a44:	b	410978 <wcrtomb@plt+0xbd58>
  410a48:	ldr	w0, [x24]
  410a4c:	cmp	w0, #0x11
  410a50:	b.eq	4109c0 <wcrtomb@plt+0xbda0>  // b.none
  410a54:	mov	x0, x19
  410a58:	mov	w21, #0x1                   	// #1
  410a5c:	bl	429db8 <wcrtomb@plt+0x25198>
  410a60:	mov	w0, w21
  410a64:	ldp	x19, x20, [sp, #16]
  410a68:	ldp	x21, x22, [sp, #32]
  410a6c:	ldp	x23, x24, [sp, #48]
  410a70:	ldp	x25, x26, [sp, #64]
  410a74:	ldp	x27, x28, [sp, #80]
  410a78:	ldp	x29, x30, [sp], #384
  410a7c:	ret
  410a80:	mov	x0, x19
  410a84:	bl	417388 <wcrtomb@plt+0x12768>
  410a88:	b	4108cc <wcrtomb@plt+0xbcac>
  410a8c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  410a90:	ldr	w0, [x0, #696]
  410a94:	tst	w0, #0xfffffffd
  410a98:	b.eq	410978 <wcrtomb@plt+0xbd58>  // b.none
  410a9c:	b	4109a4 <wcrtomb@plt+0xbd84>
  410aa0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  410aa4:	adrp	x22, 458000 <_obstack_memory_used@@Base+0x15e10>
  410aa8:	add	x22, x22, #0x668
  410aac:	add	x3, sp, #0x100
  410ab0:	ldr	w1, [x0, #2184]
  410ab4:	mov	x2, x22
  410ab8:	mov	w4, #0x0                   	// #0
  410abc:	mov	w0, #0x0                   	// #0
  410ac0:	bl	404c00 <__fxstatat@plt>
  410ac4:	cbnz	w0, 410adc <wcrtomb@plt+0xbebc>
  410ac8:	ldr	x0, [sp, #256]
  410acc:	str	x0, [x21, #768]
  410ad0:	b	4108b8 <wcrtomb@plt+0xbc98>
  410ad4:	bl	41a238 <wcrtomb@plt+0x15618>
  410ad8:	b	4108cc <wcrtomb@plt+0xbcac>
  410adc:	mov	x0, x22
  410ae0:	bl	41bdb8 <wcrtomb@plt+0x17198>
  410ae4:	b	4108b8 <wcrtomb@plt+0xbc98>
  410ae8:	ldr	w1, [x23]
  410aec:	add	x3, sp, #0x100
  410af0:	mov	x2, x19
  410af4:	mov	w4, #0x0                   	// #0
  410af8:	bl	404c00 <__fxstatat@plt>
  410afc:	cbnz	w0, 410a3c <wcrtomb@plt+0xbe1c>
  410b00:	ldr	w0, [sp, #272]
  410b04:	and	w0, w0, #0xf000
  410b08:	cmp	w0, #0x4, lsl #12
  410b0c:	b.ne	410a3c <wcrtomb@plt+0xbe1c>  // b.any
  410b10:	mov	w0, #0x11                  	// #17
  410b14:	mov	w21, #0x0                   	// #0
  410b18:	str	w0, [x24]
  410b1c:	b	4109ec <wcrtomb@plt+0xbdcc>
  410b20:	ldr	w25, [x26, #16]
  410b24:	mov	w5, #0x100                 	// #256
  410b28:	mov	w27, #0x1ff                 	// #511
  410b2c:	bic	w25, w20, w25
  410b30:	b	4109d4 <wcrtomb@plt+0xbdb4>
  410b34:	ldrb	w0, [sp, #127]
  410b38:	mov	w27, #0xffffffff            	// #-1
  410b3c:	cbz	w0, 4109c0 <wcrtomb@plt+0xbda0>
  410b40:	ldr	x20, [x28, #2016]
  410b44:	cbnz	x20, 410b54 <wcrtomb@plt+0xbf34>
  410b48:	b	410be8 <wcrtomb@plt+0xbfc8>
  410b4c:	ldr	x20, [x20]
  410b50:	cbz	x20, 410be8 <wcrtomb@plt+0xbfc8>
  410b54:	ldr	w4, [x20, #84]
  410b58:	add	x3, sp, #0x100
  410b5c:	ldr	w1, [x23]
  410b60:	mov	w0, #0x0                   	// #0
  410b64:	ldr	x2, [x20, #160]
  410b68:	bl	404c00 <__fxstatat@plt>
  410b6c:	cbnz	w0, 410bd8 <wcrtomb@plt+0xbfb8>
  410b70:	ldr	x0, [sp, #128]
  410b74:	ldr	x1, [sp, #256]
  410b78:	cmp	x1, x0
  410b7c:	b.ne	410b4c <wcrtomb@plt+0xbf2c>  // b.any
  410b80:	ldr	x0, [sp, #136]
  410b84:	ldr	x1, [sp, #264]
  410b88:	cmp	x1, x0
  410b8c:	b.ne	410b4c <wcrtomb@plt+0xbf2c>  // b.any
  410b90:	ldr	x2, [x22, #88]
  410b94:	mov	w0, #0xffffffff            	// #-1
  410b98:	ldp	w7, w6, [x22, #112]
  410b9c:	mov	w21, #0x0                   	// #0
  410ba0:	ldr	w1, [sp, #272]
  410ba4:	ldp	x4, x5, [x22, #216]
  410ba8:	str	x2, [x20, #8]
  410bac:	ldr	x2, [x22, #96]
  410bb0:	str	x2, [x20, #16]
  410bb4:	ldr	w2, [x22, #104]
  410bb8:	str	w2, [x20, #24]
  410bbc:	ldp	x2, x3, [x22, #232]
  410bc0:	stp	w7, w6, [x20, #28]
  410bc4:	stp	x4, x5, [x20, #40]
  410bc8:	stp	x2, x3, [x20, #56]
  410bcc:	stp	w1, w0, [x20, #72]
  410bd0:	strb	wzr, [x20, #80]
  410bd4:	b	4109ec <wcrtomb@plt+0xbdcc>
  410bd8:	ldr	x0, [x20, #160]
  410bdc:	mov	w21, #0x0                   	// #0
  410be0:	bl	42a278 <wcrtomb@plt+0x25658>
  410be4:	b	4109ec <wcrtomb@plt+0xbdcc>
  410be8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  410bec:	ldr	x0, [x0, #952]
  410bf0:	cbz	x0, 410bf8 <wcrtomb@plt+0xbfd8>
  410bf4:	blr	x0
  410bf8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  410bfc:	add	x1, x1, #0xf00
  410c00:	mov	w2, #0x5                   	// #5
  410c04:	mov	x0, #0x0                   	// #0
  410c08:	bl	4049c0 <dcgettext@plt>
  410c0c:	mov	x20, x0
  410c10:	mov	x0, x19
  410c14:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  410c18:	mov	w1, #0x0                   	// #0
  410c1c:	mov	x3, x0
  410c20:	mov	x2, x20
  410c24:	mov	w0, #0x0                   	// #0
  410c28:	bl	404050 <error@plt>
  410c2c:	mov	w21, #0x0                   	// #0
  410c30:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  410c34:	mov	w1, #0x2                   	// #2
  410c38:	str	w1, [x0, #3400]
  410c3c:	b	4109ec <wcrtomb@plt+0xbdcc>
  410c40:	stp	x29, x30, [sp, #-256]!
  410c44:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  410c48:	mov	x29, sp
  410c4c:	stp	x19, x20, [sp, #16]
  410c50:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  410c54:	add	x20, x20, #0x28
  410c58:	stp	x25, x26, [sp, #64]
  410c5c:	adrp	x25, 483000 <argp_program_version_hook@@Base+0x290>
  410c60:	ldr	w4, [x2, #924]
  410c64:	ldrb	w3, [x25, #569]
  410c68:	ldr	w2, [x20, #104]
  410c6c:	cmp	w4, #0x0
  410c70:	stp	x21, x22, [sp, #32]
  410c74:	mov	x21, x0
  410c78:	and	w22, w2, #0x1c0
  410c7c:	stp	x23, x24, [sp, #48]
  410c80:	mov	w23, w1
  410c84:	and	w1, w2, #0x1ff
  410c88:	stp	x27, x28, [sp, #80]
  410c8c:	csel	w22, w22, w1, gt
  410c90:	strb	wzr, [sp, #126]
  410c94:	cbnz	w3, 410e1c <wcrtomb@plt+0xc1fc>
  410c98:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  410c9c:	ldr	x1, [x1, #560]
  410ca0:	cbz	x1, 410da0 <wcrtomb@plt+0xc180>
  410ca4:	mov	x2, x20
  410ca8:	mov	w1, #0x66                  	// #102
  410cac:	mov	w27, #0x0                   	// #0
  410cb0:	bl	421fa8 <wcrtomb@plt+0x1d388>
  410cb4:	mov	w24, #0x0                   	// #0
  410cb8:	mov	w19, w0
  410cbc:	tbnz	w0, #31, 4110a8 <wcrtomb@plt+0xc488>
  410cc0:	mov	x0, x20
  410cc4:	bl	405688 <wcrtomb@plt+0xa68>
  410cc8:	ldrb	w0, [x20, #272]
  410ccc:	cbnz	w0, 410e38 <wcrtomb@plt+0xc218>
  410cd0:	ldr	x0, [x20, #136]
  410cd4:	str	x0, [sp, #128]
  410cd8:	b	410d40 <wcrtomb@plt+0xc120>
  410cdc:	bl	4056c8 <wcrtomb@plt+0xaa8>
  410ce0:	bl	406220 <wcrtomb@plt+0x1600>
  410ce4:	mov	x26, x0
  410ce8:	cbz	x0, 410fd0 <wcrtomb@plt+0xc3b0>
  410cec:	bl	405bd8 <wcrtomb@plt+0xfb8>
  410cf0:	ldr	x22, [sp, #128]
  410cf4:	cmp	x22, x0
  410cf8:	csel	x22, x22, x0, ls  // ls = plast
  410cfc:	bl	404ad0 <__errno_location@plt>
  410d00:	mov	x3, x0
  410d04:	mov	x2, x22
  410d08:	mov	x1, x26
  410d0c:	mov	w0, w19
  410d10:	str	wzr, [x3]
  410d14:	bl	41ba58 <wcrtomb@plt+0x16e38>
  410d18:	mov	x28, x0
  410d1c:	ldr	x1, [sp, #128]
  410d20:	sub	x2, x22, #0x1
  410d24:	add	x0, x26, x2
  410d28:	sub	x1, x1, x22
  410d2c:	str	x1, [sp, #128]
  410d30:	bl	405b90 <wcrtomb@plt+0xf70>
  410d34:	cmp	x22, x28
  410d38:	b.ne	411018 <wcrtomb@plt+0xc3f8>  // b.any
  410d3c:	ldr	x0, [sp, #128]
  410d40:	cmp	x0, #0x0
  410d44:	b.gt	410cdc <wcrtomb@plt+0xc0bc>
  410d48:	bl	419a98 <wcrtomb@plt+0x14e78>
  410d4c:	bl	4056b0 <wcrtomb@plt+0xa90>
  410d50:	ldrb	w0, [x25, #569]
  410d54:	cbnz	w0, 410e5c <wcrtomb@plt+0xc23c>
  410d58:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  410d5c:	ldr	x0, [x22, #560]
  410d60:	cbz	x0, 41102c <wcrtomb@plt+0xc40c>
  410d64:	mov	w0, w19
  410d68:	bl	4045c0 <close@plt>
  410d6c:	mov	w19, w0
  410d70:	tbnz	w0, #31, 411070 <wcrtomb@plt+0xc450>
  410d74:	ldr	x0, [x22, #560]
  410d78:	cbz	x0, 410d80 <wcrtomb@plt+0xc160>
  410d7c:	bl	422278 <wcrtomb@plt+0x1d658>
  410d80:	mov	w0, w19
  410d84:	ldp	x19, x20, [sp, #16]
  410d88:	ldp	x21, x22, [sp, #32]
  410d8c:	ldp	x23, x24, [sp, #48]
  410d90:	ldp	x25, x26, [sp, #64]
  410d94:	ldp	x27, x28, [sp, #80]
  410d98:	ldp	x29, x30, [sp], #256
  410d9c:	ret
  410da0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  410da4:	strb	wzr, [sp, #127]
  410da8:	ldr	w0, [x0, #600]
  410dac:	cmp	w0, #0x0
  410db0:	b.le	410e80 <wcrtomb@plt+0xc260>
  410db4:	ldr	x0, [x20, #328]
  410db8:	cbz	x0, 410e80 <wcrtomb@plt+0xc260>
  410dbc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  410dc0:	adrp	x26, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  410dc4:	add	x26, x26, #0x888
  410dc8:	ldr	w19, [x0, #2032]
  410dcc:	bic	w2, w2, w19
  410dd0:	and	w19, w2, #0x1ff
  410dd4:	ldr	w1, [x26]
  410dd8:	mov	w3, w19
  410ddc:	mov	x2, x21
  410de0:	add	x4, sp, #0x80
  410de4:	mov	w0, #0x0                   	// #0
  410de8:	str	xzr, [sp, #128]
  410dec:	bl	404480 <__xmknodat@plt>
  410df0:	mov	w3, w0
  410df4:	add	x2, sp, #0x7f
  410df8:	mov	x0, x21
  410dfc:	mov	w1, #0x0                   	// #0
  410e00:	cbz	w3, 4110e0 <wcrtomb@plt+0xc4c0>
  410e04:	bl	40ff40 <wcrtomb@plt+0xb320>
  410e08:	cbz	w0, 4110cc <wcrtomb@plt+0xc4ac>
  410e0c:	cmp	w0, #0x2
  410e10:	b.ne	410dd4 <wcrtomb@plt+0xc1b4>  // b.any
  410e14:	mov	w28, #0x0                   	// #0
  410e18:	b	410e8c <wcrtomb@plt+0xc26c>
  410e1c:	mov	x0, x20
  410e20:	bl	405688 <wcrtomb@plt+0xa68>
  410e24:	ldrb	w0, [x20, #272]
  410e28:	mov	w27, #0x0                   	// #0
  410e2c:	mov	w24, #0x0                   	// #0
  410e30:	mov	w19, #0x1                   	// #1
  410e34:	cbz	w0, 410cd0 <wcrtomb@plt+0xc0b0>
  410e38:	add	x2, sp, #0x80
  410e3c:	mov	x1, x20
  410e40:	mov	w0, w19
  410e44:	bl	420b80 <wcrtomb@plt+0x1bf60>
  410e48:	ldr	x0, [sp, #128]
  410e4c:	bl	419a98 <wcrtomb@plt+0x14e78>
  410e50:	bl	4056b0 <wcrtomb@plt+0xa90>
  410e54:	ldrb	w0, [x25, #569]
  410e58:	cbz	w0, 410d58 <wcrtomb@plt+0xc138>
  410e5c:	mov	w19, #0x0                   	// #0
  410e60:	mov	w0, w19
  410e64:	ldp	x19, x20, [sp, #16]
  410e68:	ldp	x21, x22, [sp, #32]
  410e6c:	ldp	x23, x24, [sp, #48]
  410e70:	ldp	x25, x26, [sp, #64]
  410e74:	ldp	x27, x28, [sp, #80]
  410e78:	ldp	x29, x30, [sp], #256
  410e7c:	ret
  410e80:	adrp	x26, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  410e84:	add	x26, x26, #0x888
  410e88:	mov	w28, #0x0                   	// #0
  410e8c:	adrp	x27, 483000 <argp_program_version_hook@@Base+0x290>
  410e90:	add	x27, x27, #0x2b8
  410e94:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  410e98:	add	x0, x0, #0x208
  410e9c:	str	x0, [sp, #104]
  410ea0:	ldr	w24, [x27]
  410ea4:	mov	w19, #0x9c1                 	// #2497
  410ea8:	movk	w19, #0x8, lsl #16
  410eac:	cmp	w24, #0x2
  410eb0:	b.ne	410ed4 <wcrtomb@plt+0xc2b4>  // b.any
  410eb4:	ldr	x0, [sp, #104]
  410eb8:	mov	w1, #0x8b41                	// #35649
  410ebc:	movk	w1, #0x8, lsl #16
  410ec0:	ldrb	w0, [x0]
  410ec4:	cmp	w0, #0x0
  410ec8:	mov	w0, #0xb41                 	// #2881
  410ecc:	movk	w0, #0x8, lsl #16
  410ed0:	csel	w19, w0, w1, ne  // ne = any
  410ed4:	cmp	w28, #0x0
  410ed8:	and	w0, w19, #0xffffff7f
  410edc:	csel	w19, w0, w19, ne  // ne = any
  410ee0:	cmp	w23, #0x37
  410ee4:	b.eq	410f74 <wcrtomb@plt+0xc354>  // b.none
  410ee8:	ldr	w0, [x26]
  410eec:	mov	w2, w19
  410ef0:	mov	w3, w22
  410ef4:	mov	x1, x21
  410ef8:	bl	404ab0 <openat@plt>
  410efc:	mov	w19, w0
  410f00:	tbnz	w0, #31, 410f38 <wcrtomb@plt+0xc318>
  410f04:	cmp	w24, #0x2
  410f08:	b.eq	41107c <wcrtomb@plt+0xc45c>  // b.none
  410f0c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  410f10:	mov	w27, #0x1ff                 	// #511
  410f14:	ldr	w24, [x0, #2032]
  410f18:	bic	w24, w22, w24
  410f1c:	b	410cc0 <wcrtomb@plt+0xc0a0>
  410f20:	bl	404ad0 <__errno_location@plt>
  410f24:	mov	x24, x0
  410f28:	mov	w0, w19
  410f2c:	ldr	w19, [x24]
  410f30:	bl	4045c0 <close@plt>
  410f34:	str	w19, [x24]
  410f38:	add	x2, sp, #0x7e
  410f3c:	mov	x0, x21
  410f40:	mov	w1, #0x1                   	// #1
  410f44:	bl	40ff40 <wcrtomb@plt+0xb320>
  410f48:	cmp	w0, #0x1
  410f4c:	b.eq	410ea0 <wcrtomb@plt+0xc280>  // b.none
  410f50:	str	w0, [sp, #104]
  410f54:	bl	41a238 <wcrtomb@plt+0x15618>
  410f58:	ldr	w0, [sp, #104]
  410f5c:	cmp	w0, #0x2
  410f60:	b.eq	410e5c <wcrtomb@plt+0xc23c>  // b.none
  410f64:	mov	x0, x21
  410f68:	mov	w19, #0x1                   	// #1
  410f6c:	bl	429de8 <wcrtomb@plt+0x251c8>
  410f70:	b	410d80 <wcrtomb@plt+0xc160>
  410f74:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  410f78:	add	x0, x0, #0x7e0
  410f7c:	ldr	w1, [x0, #32]
  410f80:	cbnz	w1, 410ee8 <wcrtomb@plt+0xc2c8>
  410f84:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  410f88:	mov	w2, #0x1                   	// #1
  410f8c:	str	w2, [x0, #32]
  410f90:	ldr	w0, [x1, #408]
  410f94:	tbz	w0, #3, 410ee8 <wcrtomb@plt+0xc2c8>
  410f98:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  410f9c:	ldr	x0, [x0, #952]
  410fa0:	cbz	x0, 410fa8 <wcrtomb@plt+0xc388>
  410fa4:	blr	x0
  410fa8:	mov	w2, #0x5                   	// #5
  410fac:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  410fb0:	mov	x0, #0x0                   	// #0
  410fb4:	add	x1, x1, #0xf38
  410fb8:	bl	4049c0 <dcgettext@plt>
  410fbc:	mov	x2, x0
  410fc0:	mov	w1, #0x0                   	// #0
  410fc4:	mov	w0, #0x0                   	// #0
  410fc8:	bl	404050 <error@plt>
  410fcc:	b	410ee8 <wcrtomb@plt+0xc2c8>
  410fd0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  410fd4:	ldr	x0, [x0, #952]
  410fd8:	cbz	x0, 410fe0 <wcrtomb@plt+0xc3c0>
  410fdc:	blr	x0
  410fe0:	mov	w2, #0x5                   	// #5
  410fe4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  410fe8:	mov	x0, #0x0                   	// #0
  410fec:	add	x1, x1, #0x6a8
  410ff0:	bl	4049c0 <dcgettext@plt>
  410ff4:	mov	x2, x0
  410ff8:	mov	w1, #0x0                   	// #0
  410ffc:	mov	w0, #0x0                   	// #0
  411000:	bl	404050 <error@plt>
  411004:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411008:	mov	w2, #0x2                   	// #2
  41100c:	ldr	x0, [sp, #128]
  411010:	str	w2, [x1, #3400]
  411014:	b	410d48 <wcrtomb@plt+0xc128>
  411018:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41101c:	ldr	x0, [x0, #560]
  411020:	cbz	x0, 4110b4 <wcrtomb@plt+0xc494>
  411024:	ldr	x0, [sp, #128]
  411028:	b	410d48 <wcrtomb@plt+0xc128>
  41102c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  411030:	mov	w2, w19
  411034:	mov	w5, w23
  411038:	mov	w4, w27
  41103c:	ldr	w0, [x0, #696]
  411040:	mov	w3, w24
  411044:	mov	x1, x20
  411048:	mov	w6, #0x0                   	// #0
  41104c:	cmp	w0, #0x2
  411050:	mov	x0, x21
  411054:	cset	w7, ne  // ne = any
  411058:	lsl	w7, w7, #8
  41105c:	bl	40f650 <wcrtomb@plt+0xaa30>
  411060:	mov	w0, w19
  411064:	bl	4045c0 <close@plt>
  411068:	mov	w19, w0
  41106c:	tbz	w0, #31, 410d74 <wcrtomb@plt+0xc154>
  411070:	mov	x0, x21
  411074:	bl	429ce8 <wcrtomb@plt+0x250c8>
  411078:	b	410d74 <wcrtomb@plt+0xc154>
  41107c:	mov	w1, w0
  411080:	add	x2, sp, #0x80
  411084:	mov	w0, #0x0                   	// #0
  411088:	bl	4049a0 <__fxstat@plt>
  41108c:	cbnz	w0, 410f20 <wcrtomb@plt+0xc300>
  411090:	ldr	w24, [sp, #144]
  411094:	and	w0, w24, #0xf000
  411098:	cmp	w0, #0x8, lsl #12
  41109c:	b.ne	4110f8 <wcrtomb@plt+0xc4d8>  // b.any
  4110a0:	mov	w27, #0xffffffff            	// #-1
  4110a4:	b	410cc0 <wcrtomb@plt+0xc0a0>
  4110a8:	mov	w19, #0x0                   	// #0
  4110ac:	bl	41a238 <wcrtomb@plt+0x15618>
  4110b0:	b	410d80 <wcrtomb@plt+0xc160>
  4110b4:	mov	x0, x21
  4110b8:	mov	x2, x22
  4110bc:	mov	x1, x28
  4110c0:	bl	42a2f8 <wcrtomb@plt+0x256d8>
  4110c4:	ldr	x0, [sp, #128]
  4110c8:	b	410d48 <wcrtomb@plt+0xc128>
  4110cc:	bl	41a238 <wcrtomb@plt+0x15618>
  4110d0:	mov	w19, #0x1                   	// #1
  4110d4:	mov	x0, x21
  4110d8:	bl	429de8 <wcrtomb@plt+0x251c8>
  4110dc:	b	410d80 <wcrtomb@plt+0xc160>
  4110e0:	mov	w2, w23
  4110e4:	mov	x1, x21
  4110e8:	mov	x0, x20
  4110ec:	mov	w28, #0x1                   	// #1
  4110f0:	bl	4294d0 <wcrtomb@plt+0x248b0>
  4110f4:	b	410e8c <wcrtomb@plt+0xc26c>
  4110f8:	mov	w0, w19
  4110fc:	bl	4045c0 <close@plt>
  411100:	bl	404ad0 <__errno_location@plt>
  411104:	mov	w1, #0x11                  	// #17
  411108:	str	w1, [x0]
  41110c:	b	410f38 <wcrtomb@plt+0xc318>
  411110:	stp	x29, x30, [sp, #-16]!
  411114:	mov	x29, sp
  411118:	bl	41a238 <wcrtomb@plt+0x15618>
  41111c:	mov	w0, #0x0                   	// #0
  411120:	ldp	x29, x30, [sp], #16
  411124:	ret
  411128:	stp	x29, x30, [sp, #-32]!
  41112c:	mov	x29, sp
  411130:	stp	x19, x20, [sp, #16]
  411134:	bl	4040d0 <geteuid@plt>
  411138:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  41113c:	adrp	x4, 483000 <argp_program_version_hook@@Base+0x290>
  411140:	cmp	w0, #0x0
  411144:	ldr	w3, [x20, #556]
  411148:	cset	w1, eq  // eq = none
  41114c:	ldr	w2, [x4, #924]
  411150:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411154:	add	w3, w3, w1
  411158:	add	x19, x19, #0x7e0
  41115c:	add	w2, w2, w1
  411160:	mov	w0, #0x0                   	// #0
  411164:	str	w3, [x20, #556]
  411168:	str	w2, [x4, #924]
  41116c:	strb	w1, [x19, #12]
  411170:	bl	404a80 <umask@plt>
  411174:	ldr	w1, [x20, #556]
  411178:	str	w0, [x19, #8]
  41117c:	cmp	w1, #0x0
  411180:	b.le	411194 <wcrtomb@plt+0xc574>
  411184:	str	wzr, [x19, #16]
  411188:	ldp	x19, x20, [sp, #16]
  41118c:	ldp	x29, x30, [sp], #32
  411190:	ret
  411194:	mov	w20, w0
  411198:	bl	404a80 <umask@plt>
  41119c:	str	w20, [x19, #16]
  4111a0:	ldp	x19, x20, [sp, #16]
  4111a4:	ldp	x29, x30, [sp], #32
  4111a8:	ret
  4111ac:	nop
  4111b0:	stp	x29, x30, [sp, #-64]!
  4111b4:	mov	x29, sp
  4111b8:	stp	x23, x24, [sp, #48]
  4111bc:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4111c0:	stp	x19, x20, [sp, #16]
  4111c4:	ldr	x19, [x24, #2016]
  4111c8:	cbz	x19, 411224 <wcrtomb@plt+0xc604>
  4111cc:	mov	x23, x0
  4111d0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4111d4:	stp	x21, x22, [sp, #32]
  4111d8:	mov	x21, #0x0                   	// #0
  4111dc:	ldr	w22, [x0, #4040]
  4111e0:	b	4111f0 <wcrtomb@plt+0xc5d0>
  4111e4:	mov	x21, x19
  4111e8:	mov	x19, x20
  4111ec:	cbz	x20, 411234 <wcrtomb@plt+0xc614>
  4111f0:	ldr	w2, [x19, #92]
  4111f4:	ldr	x20, [x19]
  4111f8:	cmp	w2, w22
  4111fc:	b.ne	4111e4 <wcrtomb@plt+0xc5c4>  // b.any
  411200:	ldr	x0, [x19, #160]
  411204:	mov	x1, x23
  411208:	bl	404710 <strcmp@plt>
  41120c:	cbnz	w0, 4111e4 <wcrtomb@plt+0xc5c4>
  411210:	mov	x0, x19
  411214:	bl	40eff8 <wcrtomb@plt+0xa3d8>
  411218:	cbz	x21, 411248 <wcrtomb@plt+0xc628>
  41121c:	str	x20, [x21]
  411220:	ldp	x21, x22, [sp, #32]
  411224:	ldp	x19, x20, [sp, #16]
  411228:	ldp	x23, x24, [sp, #48]
  41122c:	ldp	x29, x30, [sp], #64
  411230:	ret
  411234:	ldp	x19, x20, [sp, #16]
  411238:	ldp	x21, x22, [sp, #32]
  41123c:	ldp	x23, x24, [sp, #48]
  411240:	ldp	x29, x30, [sp], #64
  411244:	ret
  411248:	str	x20, [x24, #2016]
  41124c:	ldp	x21, x22, [sp, #32]
  411250:	b	411224 <wcrtomb@plt+0xc604>
  411254:	nop
  411258:	stp	x29, x30, [sp, #-80]!
  41125c:	adrp	x1, 40f000 <wcrtomb@plt+0xa3e0>
  411260:	add	x1, x1, #0xe60
  411264:	mov	x29, sp
  411268:	stp	x19, x20, [sp, #16]
  41126c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411270:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411274:	ldr	x0, [x20, #4016]
  411278:	str	x1, [x2, #3984]
  41127c:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  411280:	bl	405b90 <wcrtomb@plt+0xf70>
  411284:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  411288:	ldrb	w0, [x0, #896]
  41128c:	cbz	w0, 4113c4 <wcrtomb@plt+0xc7a4>
  411290:	add	x19, x19, #0x28
  411294:	ldr	x1, [x19, #8]
  411298:	ldrb	w0, [x1]
  41129c:	cbz	w0, 4113b8 <wcrtomb@plt+0xc798>
  4112a0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4112a4:	ldrb	w0, [x0, #536]
  4112a8:	cbnz	w0, 41149c <wcrtomb@plt+0xc87c>
  4112ac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4112b0:	stp	x21, x22, [sp, #32]
  4112b4:	ldr	w0, [x0, #588]
  4112b8:	stp	x23, x24, [sp, #48]
  4112bc:	cbnz	w0, 4114c0 <wcrtomb@plt+0xc8a0>
  4112c0:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  4112c4:	ldrb	w0, [x24, #912]
  4112c8:	cbz	w0, 4114dc <wcrtomb@plt+0xc8bc>
  4112cc:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  4112d0:	ldrb	w0, [x21, #701]
  4112d4:	cbz	w0, 4112ec <wcrtomb@plt+0xc6cc>
  4112d8:	ldr	x0, [x19, #8]
  4112dc:	mov	w1, #0x0                   	// #0
  4112e0:	bl	41b630 <wcrtomb@plt+0x16a10>
  4112e4:	tst	w0, #0xff
  4112e8:	b.eq	411350 <wcrtomb@plt+0xc730>  // b.none
  4112ec:	mov	x0, x19
  4112f0:	bl	420af0 <wcrtomb@plt+0x1bed0>
  4112f4:	tst	w0, #0xff
  4112f8:	b.ne	411434 <wcrtomb@plt+0xc814>  // b.any
  4112fc:	ldr	x1, [x20, #4016]
  411300:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  411304:	ldr	x22, [x19, #8]
  411308:	ldrb	w0, [x0, #569]
  41130c:	ldrb	w20, [x1, #156]
  411310:	str	x25, [sp, #64]
  411314:	mov	w23, w20
  411318:	cbz	w0, 4116a8 <wcrtomb@plt+0xca88>
  41131c:	cmp	w20, #0x35
  411320:	b.eq	411524 <wcrtomb@plt+0xc904>  // b.none
  411324:	b.hi	4114fc <wcrtomb@plt+0xc8dc>  // b.pmore
  411328:	cmp	w20, #0x32
  41132c:	b.eq	411530 <wcrtomb@plt+0xc910>  // b.none
  411330:	b.ls	411538 <wcrtomb@plt+0xc918>  // b.plast
  411334:	cmp	w20, #0x33
  411338:	b.eq	4116f0 <wcrtomb@plt+0xcad0>  // b.none
  41133c:	ldr	w0, [x19, #104]
  411340:	ldr	x25, [sp, #64]
  411344:	orr	w0, w0, #0x6000
  411348:	str	w0, [x19, #104]
  41134c:	b	4113b0 <wcrtomb@plt+0xc790>
  411350:	bl	404ad0 <__errno_location@plt>
  411354:	ldr	w20, [x0]
  411358:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41135c:	ldr	x1, [x1, #952]
  411360:	cbz	x1, 411368 <wcrtomb@plt+0xc748>
  411364:	blr	x1
  411368:	mov	w2, #0x5                   	// #5
  41136c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  411370:	mov	x0, #0x0                   	// #0
  411374:	add	x1, x1, #0xf90
  411378:	bl	4049c0 <dcgettext@plt>
  41137c:	mov	x2, x0
  411380:	ldr	x0, [x19, #8]
  411384:	mov	x19, x2
  411388:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41138c:	mov	x3, x0
  411390:	mov	w1, w20
  411394:	mov	w0, #0x0                   	// #0
  411398:	mov	x2, x19
  41139c:	bl	404050 <error@plt>
  4113a0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4113a4:	mov	w1, #0x2                   	// #2
  4113a8:	str	w1, [x0, #3400]
  4113ac:	nop
  4113b0:	ldp	x21, x22, [sp, #32]
  4113b4:	ldp	x23, x24, [sp, #48]
  4113b8:	ldp	x19, x20, [sp, #16]
  4113bc:	ldp	x29, x30, [sp], #80
  4113c0:	b	41a238 <wcrtomb@plt+0x15618>
  4113c4:	ldr	x0, [x19, #40]
  4113c8:	bl	41ec98 <wcrtomb@plt+0x1a078>
  4113cc:	tst	w0, #0xff
  4113d0:	b.eq	411290 <wcrtomb@plt+0xc670>  // b.none
  4113d4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4113d8:	ldr	x0, [x0, #952]
  4113dc:	cbz	x0, 4113e4 <wcrtomb@plt+0xc7c4>
  4113e0:	blr	x0
  4113e4:	mov	w2, #0x5                   	// #5
  4113e8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4113ec:	mov	x0, #0x0                   	// #0
  4113f0:	add	x1, x1, #0xf68
  4113f4:	bl	4049c0 <dcgettext@plt>
  4113f8:	mov	x2, x0
  4113fc:	ldr	x0, [x19, #40]
  411400:	mov	x19, x2
  411404:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  411408:	mov	x3, x0
  41140c:	mov	x2, x19
  411410:	mov	w1, #0x0                   	// #0
  411414:	mov	w0, #0x0                   	// #0
  411418:	bl	404050 <error@plt>
  41141c:	ldp	x19, x20, [sp, #16]
  411420:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411424:	ldp	x29, x30, [sp], #80
  411428:	mov	w1, #0x2                   	// #2
  41142c:	str	w1, [x0, #3400]
  411430:	b	41a238 <wcrtomb@plt+0x15618>
  411434:	ldr	x22, [x19, #8]
  411438:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  41143c:	add	x20, x20, #0xc40
  411440:	mov	w23, #0x53                  	// #83
  411444:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  411448:	ldr	w0, [x0, #696]
  41144c:	cmp	w0, #0x3
  411450:	b.eq	411668 <wcrtomb@plt+0xca48>  // b.none
  411454:	cmp	w0, #0x6
  411458:	b.ne	411470 <wcrtomb@plt+0xc850>  // b.any
  41145c:	mov	x0, x22
  411460:	mov	x1, #0x0                   	// #0
  411464:	bl	40fe98 <wcrtomb@plt+0xb278>
  411468:	tst	w0, #0xff
  41146c:	b.ne	411818 <wcrtomb@plt+0xcbf8>  // b.any
  411470:	ldr	x0, [x19, #8]
  411474:	mov	w1, w23
  411478:	blr	x20
  41147c:	cbz	w0, 411488 <wcrtomb@plt+0xc868>
  411480:	ldrb	w0, [x21, #701]
  411484:	cbnz	w0, 41186c <wcrtomb@plt+0xcc4c>
  411488:	ldp	x19, x20, [sp, #16]
  41148c:	ldp	x21, x22, [sp, #32]
  411490:	ldp	x23, x24, [sp, #48]
  411494:	ldp	x29, x30, [sp], #80
  411498:	ret
  41149c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  4114a0:	add	x0, x0, #0xf88
  4114a4:	bl	422f70 <wcrtomb@plt+0x1e350>
  4114a8:	cbz	w0, 4113b8 <wcrtomb@plt+0xc798>
  4114ac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4114b0:	stp	x21, x22, [sp, #32]
  4114b4:	ldr	w0, [x0, #588]
  4114b8:	stp	x23, x24, [sp, #48]
  4114bc:	cbz	w0, 4112c0 <wcrtomb@plt+0xc6a0>
  4114c0:	ldr	x1, [x20, #4016]
  4114c4:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  4114c8:	mov	x0, x19
  4114cc:	mov	x2, #0xffffffffffffffff    	// #-1
  4114d0:	bl	419930 <wcrtomb@plt+0x14d10>
  4114d4:	ldrb	w0, [x24, #912]
  4114d8:	cbnz	w0, 4112cc <wcrtomb@plt+0xc6ac>
  4114dc:	ldr	x0, [x19, #8]
  4114e0:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4114e4:	mov	w1, #0x0                   	// #0
  4114e8:	ldr	w21, [x2, #4040]
  4114ec:	bl	40fa00 <wcrtomb@plt+0xade0>
  4114f0:	mov	w0, w21
  4114f4:	bl	41bb88 <wcrtomb@plt+0x16f68>
  4114f8:	b	4112cc <wcrtomb@plt+0xc6ac>
  4114fc:	cmp	w20, #0x4c
  411500:	b.hi	4115b4 <wcrtomb@plt+0xc994>  // b.pmore
  411504:	cmp	w20, #0x4a
  411508:	b.hi	411788 <wcrtomb@plt+0xcb68>  // b.pmore
  41150c:	cmp	w20, #0x36
  411510:	b.eq	411530 <wcrtomb@plt+0xc910>  // b.none
  411514:	cmp	w20, #0x37
  411518:	b.eq	4118b4 <wcrtomb@plt+0xcc94>  // b.none
  41151c:	cmp	w20, #0x44
  411520:	b.ne	411548 <wcrtomb@plt+0xc928>  // b.any
  411524:	ldrb	w0, [x19, #376]
  411528:	cbnz	w0, 411698 <wcrtomb@plt+0xca78>
  41152c:	nop
  411530:	ldr	x25, [sp, #64]
  411534:	b	4113b0 <wcrtomb@plt+0xc790>
  411538:	cmp	w20, #0x31
  41153c:	b.eq	411530 <wcrtomb@plt+0xc910>  // b.none
  411540:	cmp	w20, #0x32
  411544:	b.ne	411628 <wcrtomb@plt+0xca08>  // b.any
  411548:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41154c:	mov	w25, #0x0                   	// #0
  411550:	ldr	w0, [x0, #408]
  411554:	tbz	w0, #16, 411530 <wcrtomb@plt+0xc910>
  411558:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41155c:	ldr	x0, [x0, #952]
  411560:	cbz	x0, 411568 <wcrtomb@plt+0xc948>
  411564:	blr	x0
  411568:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  41156c:	add	x1, x1, #0x18
  411570:	mov	w2, #0x5                   	// #5
  411574:	mov	x0, #0x0                   	// #0
  411578:	bl	4049c0 <dcgettext@plt>
  41157c:	mov	x24, x0
  411580:	mov	x0, x22
  411584:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  411588:	mov	w4, w20
  41158c:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  411590:	add	x20, x20, #0xc40
  411594:	mov	x3, x0
  411598:	mov	x2, x24
  41159c:	mov	w1, #0x0                   	// #0
  4115a0:	mov	w0, #0x0                   	// #0
  4115a4:	bl	404050 <error@plt>
  4115a8:	cbz	w25, 411530 <wcrtomb@plt+0xc910>
  4115ac:	ldr	x25, [sp, #64]
  4115b0:	b	411444 <wcrtomb@plt+0xc824>
  4115b4:	cmp	w20, #0x56
  4115b8:	b.eq	411530 <wcrtomb@plt+0xc910>  // b.none
  4115bc:	b.hi	411548 <wcrtomb@plt+0xc928>  // b.pmore
  4115c0:	cmp	w20, #0x4d
  4115c4:	mov	w25, #0x0                   	// #0
  4115c8:	b.ne	411650 <wcrtomb@plt+0xca30>  // b.any
  4115cc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4115d0:	ldr	x0, [x0, #952]
  4115d4:	cbz	x0, 4115dc <wcrtomb@plt+0xc9bc>
  4115d8:	blr	x0
  4115dc:	mov	w2, #0x5                   	// #5
  4115e0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4115e4:	mov	x0, #0x0                   	// #0
  4115e8:	add	x1, x1, #0xfb8
  4115ec:	bl	4049c0 <dcgettext@plt>
  4115f0:	mov	x20, x0
  4115f4:	ldr	x0, [x19, #8]
  4115f8:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4115fc:	mov	x3, x0
  411600:	mov	x2, x20
  411604:	mov	w1, #0x0                   	// #0
  411608:	mov	w0, #0x0                   	// #0
  41160c:	bl	404050 <error@plt>
  411610:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411614:	mov	w1, #0x2                   	// #2
  411618:	adrp	x20, 411000 <wcrtomb@plt+0xc3e0>
  41161c:	add	x20, x20, #0x110
  411620:	str	w1, [x0, #3400]
  411624:	b	4115a8 <wcrtomb@plt+0xc988>
  411628:	cbz	w20, 411898 <wcrtomb@plt+0xcc78>
  41162c:	cmp	w20, #0x30
  411630:	b.ne	411548 <wcrtomb@plt+0xc928>  // b.any
  411634:	ldrb	w0, [x19, #16]
  411638:	cbnz	w0, 411530 <wcrtomb@plt+0xc910>
  41163c:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  411640:	mov	w23, #0x30                  	// #48
  411644:	add	x20, x20, #0xc40
  411648:	ldr	x25, [sp, #64]
  41164c:	b	411444 <wcrtomb@plt+0xc824>
  411650:	cmp	w20, #0x53
  411654:	b.ne	411548 <wcrtomb@plt+0xc928>  // b.any
  411658:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  41165c:	add	x20, x20, #0xc40
  411660:	ldr	x25, [sp, #64]
  411664:	b	411444 <wcrtomb@plt+0xc824>
  411668:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41166c:	mov	x0, x22
  411670:	ldrb	w1, [x1, #4074]
  411674:	bl	41c400 <wcrtomb@plt+0x177e0>
  411678:	cbnz	w0, 411470 <wcrtomb@plt+0xc850>
  41167c:	bl	404ad0 <__errno_location@plt>
  411680:	ldr	w0, [x0]
  411684:	tst	w0, #0xfffffffd
  411688:	b.eq	411470 <wcrtomb@plt+0xc850>  // b.none
  41168c:	mov	x0, x22
  411690:	bl	42a2b8 <wcrtomb@plt+0x25698>
  411694:	b	4113b0 <wcrtomb@plt+0xc790>
  411698:	mov	w0, #0x1                   	// #1
  41169c:	strb	w0, [x24, #912]
  4116a0:	ldr	x25, [sp, #64]
  4116a4:	b	4113b0 <wcrtomb@plt+0xc790>
  4116a8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4116ac:	ldr	x0, [x0, #560]
  4116b0:	cmp	x0, #0x0
  4116b4:	cset	w25, eq  // eq = none
  4116b8:	cmp	w20, #0x35
  4116bc:	b.eq	41176c <wcrtomb@plt+0xcb4c>  // b.none
  4116c0:	b.hi	411718 <wcrtomb@plt+0xcaf8>  // b.pmore
  4116c4:	cmp	w20, #0x32
  4116c8:	b.eq	41188c <wcrtomb@plt+0xcc6c>  // b.none
  4116cc:	b.ls	411704 <wcrtomb@plt+0xcae4>  // b.plast
  4116d0:	cmp	w20, #0x33
  4116d4:	b.eq	4118c4 <wcrtomb@plt+0xcca4>  // b.none
  4116d8:	ldr	w0, [x19, #104]
  4116dc:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  4116e0:	add	x20, x20, #0x1f8
  4116e4:	orr	w0, w0, #0x6000
  4116e8:	str	w0, [x19, #104]
  4116ec:	b	4115a8 <wcrtomb@plt+0xc988>
  4116f0:	ldr	w0, [x19, #104]
  4116f4:	ldr	x25, [sp, #64]
  4116f8:	orr	w0, w0, #0x2000
  4116fc:	str	w0, [x19, #104]
  411700:	b	4113b0 <wcrtomb@plt+0xc790>
  411704:	cmp	w20, #0x31
  411708:	b.ne	41173c <wcrtomb@plt+0xcb1c>  // b.any
  41170c:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  411710:	add	x20, x20, #0x518
  411714:	b	4115a8 <wcrtomb@plt+0xc988>
  411718:	cmp	w20, #0x4c
  41171c:	b.hi	4117f8 <wcrtomb@plt+0xcbd8>  // b.pmore
  411720:	cmp	w20, #0x4a
  411724:	b.hi	41178c <wcrtomb@plt+0xcb6c>  // b.pmore
  411728:	cmp	w20, #0x36
  41172c:	b.ne	41175c <wcrtomb@plt+0xcb3c>  // b.any
  411730:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  411734:	add	x20, x20, #0x108
  411738:	b	4115a8 <wcrtomb@plt+0xc988>
  41173c:	cmp	w20, #0x32
  411740:	b.ne	4117d8 <wcrtomb@plt+0xcbb8>  // b.any
  411744:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411748:	ldr	w0, [x0, #408]
  41174c:	tbnz	w0, #16, 411558 <wcrtomb@plt+0xc938>
  411750:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  411754:	add	x20, x20, #0xc40
  411758:	b	4115a8 <wcrtomb@plt+0xc988>
  41175c:	cmp	w20, #0x37
  411760:	b.eq	4117e4 <wcrtomb@plt+0xcbc4>  // b.none
  411764:	cmp	w20, #0x44
  411768:	b.ne	411744 <wcrtomb@plt+0xcb24>  // b.any
  41176c:	ldrb	w0, [x19, #376]
  411770:	cbz	w0, 4117ec <wcrtomb@plt+0xcbcc>
  411774:	mov	w0, #0x1                   	// #1
  411778:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  41177c:	strb	w0, [x24, #912]
  411780:	add	x20, x20, #0x878
  411784:	b	4115a8 <wcrtomb@plt+0xc988>
  411788:	mov	w25, #0x0                   	// #0
  41178c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  411790:	ldr	x0, [x0, #952]
  411794:	cbz	x0, 41179c <wcrtomb@plt+0xcb7c>
  411798:	blr	x0
  41179c:	mov	w2, #0x5                   	// #5
  4117a0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4117a4:	mov	x0, #0x0                   	// #0
  4117a8:	add	x1, x1, #0xff8
  4117ac:	bl	4049c0 <dcgettext@plt>
  4117b0:	mov	x2, x0
  4117b4:	mov	w1, #0x0                   	// #0
  4117b8:	mov	w0, #0x0                   	// #0
  4117bc:	bl	404050 <error@plt>
  4117c0:	adrp	x20, 40e000 <wcrtomb@plt+0x93e0>
  4117c4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4117c8:	mov	w1, #0x2                   	// #2
  4117cc:	add	x20, x20, #0xff0
  4117d0:	str	w1, [x0, #3400]
  4117d4:	b	4115a8 <wcrtomb@plt+0xc988>
  4117d8:	cbz	w20, 4117e4 <wcrtomb@plt+0xcbc4>
  4117dc:	cmp	w20, #0x30
  4117e0:	b.ne	411744 <wcrtomb@plt+0xcb24>  // b.any
  4117e4:	ldrb	w0, [x19, #16]
  4117e8:	cbz	w0, 411658 <wcrtomb@plt+0xca38>
  4117ec:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  4117f0:	add	x20, x20, #0x878
  4117f4:	b	4115a8 <wcrtomb@plt+0xc988>
  4117f8:	cmp	w20, #0x56
  4117fc:	b.eq	411880 <wcrtomb@plt+0xcc60>  // b.none
  411800:	b.hi	411744 <wcrtomb@plt+0xcb24>  // b.pmore
  411804:	cmp	w20, #0x4d
  411808:	b.eq	4115cc <wcrtomb@plt+0xc9ac>  // b.none
  41180c:	cmp	w20, #0x53
  411810:	b.ne	411744 <wcrtomb@plt+0xcb24>  // b.any
  411814:	b	411658 <wcrtomb@plt+0xca38>
  411818:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41181c:	ldr	w0, [x0, #408]
  411820:	tbz	w0, #11, 4113b0 <wcrtomb@plt+0xc790>
  411824:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  411828:	ldr	x0, [x0, #952]
  41182c:	cbz	x0, 411834 <wcrtomb@plt+0xcc14>
  411830:	blr	x0
  411834:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  411838:	add	x1, x1, #0x50
  41183c:	mov	w2, #0x5                   	// #5
  411840:	mov	x0, #0x0                   	// #0
  411844:	bl	4049c0 <dcgettext@plt>
  411848:	mov	x19, x0
  41184c:	mov	x0, x22
  411850:	bl	440248 <argp_parse@@Base+0xc360>
  411854:	mov	x2, x19
  411858:	mov	x3, x0
  41185c:	mov	w1, #0x0                   	// #0
  411860:	mov	w0, #0x0                   	// #0
  411864:	bl	404050 <error@plt>
  411868:	b	4113b0 <wcrtomb@plt+0xc790>
  41186c:	ldp	x19, x20, [sp, #16]
  411870:	ldp	x21, x22, [sp, #32]
  411874:	ldp	x23, x24, [sp, #48]
  411878:	ldp	x29, x30, [sp], #80
  41187c:	b	41b860 <wcrtomb@plt+0x16c40>
  411880:	adrp	x20, 40f000 <wcrtomb@plt+0xa3e0>
  411884:	add	x20, x20, #0x40
  411888:	b	4115a8 <wcrtomb@plt+0xc988>
  41188c:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  411890:	add	x20, x20, #0x748
  411894:	b	4115a8 <wcrtomb@plt+0xc988>
  411898:	ldrb	w0, [x19, #16]
  41189c:	cbnz	w0, 411530 <wcrtomb@plt+0xc910>
  4118a0:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  4118a4:	mov	w23, #0x0                   	// #0
  4118a8:	add	x20, x20, #0xc40
  4118ac:	ldr	x25, [sp, #64]
  4118b0:	b	411444 <wcrtomb@plt+0xc824>
  4118b4:	ldrb	w0, [x19, #16]
  4118b8:	cbz	w0, 411658 <wcrtomb@plt+0xca38>
  4118bc:	ldr	x25, [sp, #64]
  4118c0:	b	4113b0 <wcrtomb@plt+0xc790>
  4118c4:	ldr	w0, [x19, #104]
  4118c8:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  4118cc:	add	x20, x20, #0x1f8
  4118d0:	orr	w0, w0, #0x2000
  4118d4:	str	w0, [x19, #104]
  4118d8:	b	4115a8 <wcrtomb@plt+0xc988>
  4118dc:	nop
  4118e0:	stp	x29, x30, [sp, #-80]!
  4118e4:	mov	x3, x1
  4118e8:	mov	x29, sp
  4118ec:	stp	x21, x22, [sp, #32]
  4118f0:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  4118f4:	mov	x21, x1
  4118f8:	ldr	w2, [x22, #2184]
  4118fc:	mov	x1, x0
  411900:	stp	x19, x20, [sp, #16]
  411904:	mov	x20, x0
  411908:	mov	w0, w2
  41190c:	bl	404800 <renameat@plt>
  411910:	cbz	w0, 4119e4 <wcrtomb@plt+0xcdc4>
  411914:	str	x23, [sp, #48]
  411918:	bl	404ad0 <__errno_location@plt>
  41191c:	ldr	w23, [x0]
  411920:	mov	x19, x0
  411924:	cmp	w23, #0x2
  411928:	b.eq	4119ac <wcrtomb@plt+0xcd8c>  // b.none
  41192c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  411930:	ldr	x0, [x0, #952]
  411934:	cbz	x0, 41193c <wcrtomb@plt+0xcd1c>
  411938:	blr	x0
  41193c:	mov	w2, #0x5                   	// #5
  411940:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  411944:	mov	x0, #0x0                   	// #0
  411948:	add	x1, x1, #0x70
  41194c:	bl	4049c0 <dcgettext@plt>
  411950:	mov	x19, x0
  411954:	mov	x1, x20
  411958:	mov	w0, #0x0                   	// #0
  41195c:	bl	440230 <argp_parse@@Base+0xc348>
  411960:	mov	x20, x0
  411964:	mov	x1, x21
  411968:	mov	w0, #0x1                   	// #1
  41196c:	bl	440230 <argp_parse@@Base+0xc348>
  411970:	mov	x4, x0
  411974:	mov	w1, w23
  411978:	mov	x2, x19
  41197c:	mov	w0, #0x0                   	// #0
  411980:	mov	x3, x20
  411984:	bl	404050 <error@plt>
  411988:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41198c:	mov	w2, #0x2                   	// #2
  411990:	ldr	x23, [sp, #48]
  411994:	mov	w0, #0x0                   	// #0
  411998:	str	w2, [x1, #3400]
  41199c:	ldp	x19, x20, [sp, #16]
  4119a0:	ldp	x21, x22, [sp, #32]
  4119a4:	ldp	x29, x30, [sp], #80
  4119a8:	ret
  4119ac:	add	x1, sp, #0x4f
  4119b0:	mov	x0, x21
  4119b4:	bl	40f420 <wcrtomb@plt+0xa800>
  4119b8:	cbnz	w0, 41192c <wcrtomb@plt+0xcd0c>
  4119bc:	ldr	w2, [x22, #2184]
  4119c0:	mov	x1, x20
  4119c4:	mov	x3, x21
  4119c8:	mov	w0, w2
  4119cc:	bl	404800 <renameat@plt>
  4119d0:	mov	w1, w0
  4119d4:	mov	w0, #0x1                   	// #1
  4119d8:	cbz	w1, 411a70 <wcrtomb@plt+0xce50>
  4119dc:	ldr	w23, [x19]
  4119e0:	b	41192c <wcrtomb@plt+0xcd0c>
  4119e4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4119e8:	ldr	x19, [x0, #2016]
  4119ec:	cbz	x19, 411a78 <wcrtomb@plt+0xce58>
  4119f0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4119f4:	str	x23, [sp, #48]
  4119f8:	ldr	w23, [x0, #4040]
  4119fc:	b	411a08 <wcrtomb@plt+0xcde8>
  411a00:	ldr	x19, [x19]
  411a04:	cbz	x19, 411a58 <wcrtomb@plt+0xce38>
  411a08:	ldr	w0, [x19, #92]
  411a0c:	cmp	w0, w23
  411a10:	b.ne	411a00 <wcrtomb@plt+0xcde0>  // b.any
  411a14:	ldr	x22, [x19, #160]
  411a18:	mov	x1, x20
  411a1c:	mov	x0, x22
  411a20:	bl	404710 <strcmp@plt>
  411a24:	cbnz	w0, 411a00 <wcrtomb@plt+0xcde0>
  411a28:	mov	x0, x22
  411a2c:	bl	4047b0 <free@plt>
  411a30:	mov	x0, x21
  411a34:	bl	441170 <argp_parse@@Base+0xd288>
  411a38:	str	x0, [x19, #160]
  411a3c:	mov	x0, x21
  411a40:	bl	403ff0 <strlen@plt>
  411a44:	mov	x1, x0
  411a48:	mov	w0, #0x1                   	// #1
  411a4c:	ldr	x23, [sp, #48]
  411a50:	str	x1, [x19, #152]
  411a54:	b	41199c <wcrtomb@plt+0xcd7c>
  411a58:	mov	w0, #0x1                   	// #1
  411a5c:	ldp	x19, x20, [sp, #16]
  411a60:	ldp	x21, x22, [sp, #32]
  411a64:	ldr	x23, [sp, #48]
  411a68:	ldp	x29, x30, [sp], #80
  411a6c:	ret
  411a70:	ldr	x23, [sp, #48]
  411a74:	b	41199c <wcrtomb@plt+0xcd7c>
  411a78:	mov	w0, #0x1                   	// #1
  411a7c:	b	41199c <wcrtomb@plt+0xcd7c>
  411a80:	ret
  411a84:	nop
  411a88:	ret
  411a8c:	nop
  411a90:	stp	x29, x30, [sp, #-32]!
  411a94:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411a98:	mov	x29, sp
  411a9c:	stp	x19, x20, [sp, #16]
  411aa0:	ldr	x19, [x1, #2056]
  411aa4:	cbz	x19, 411ad8 <wcrtomb@plt+0xceb8>
  411aa8:	mov	x20, x0
  411aac:	b	411ab8 <wcrtomb@plt+0xce98>
  411ab0:	ldr	x19, [x19]
  411ab4:	cbz	x19, 411ad8 <wcrtomb@plt+0xceb8>
  411ab8:	ldr	x0, [x19, #8]
  411abc:	mov	x1, x20
  411ac0:	bl	404710 <strcmp@plt>
  411ac4:	cbnz	w0, 411ab0 <wcrtomb@plt+0xce90>
  411ac8:	mov	w0, #0x1                   	// #1
  411acc:	ldp	x19, x20, [sp, #16]
  411ad0:	ldp	x29, x30, [sp], #32
  411ad4:	ret
  411ad8:	mov	w0, #0x0                   	// #0
  411adc:	ldp	x19, x20, [sp, #16]
  411ae0:	ldp	x29, x30, [sp], #32
  411ae4:	ret
  411ae8:	stp	x29, x30, [sp, #-64]!
  411aec:	mov	x29, sp
  411af0:	stp	x19, x20, [sp, #16]
  411af4:	mov	x19, x2
  411af8:	mov	x20, x0
  411afc:	mov	x0, x2
  411b00:	mov	w2, #0x0                   	// #0
  411b04:	str	x21, [sp, #32]
  411b08:	mov	x21, x1
  411b0c:	add	x1, sp, #0x38
  411b10:	bl	41b348 <wcrtomb@plt+0x16728>
  411b14:	tbnz	x1, #63, 411b24 <wcrtomb@plt+0xcf04>
  411b18:	ldr	x1, [sp, #56]
  411b1c:	ldrb	w1, [x1]
  411b20:	cbz	w1, 411b74 <wcrtomb@plt+0xcf54>
  411b24:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  411b28:	ldr	x0, [x0, #952]
  411b2c:	cbz	x0, 411b34 <wcrtomb@plt+0xcf14>
  411b30:	blr	x0
  411b34:	mov	w2, #0x5                   	// #5
  411b38:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  411b3c:	mov	x0, #0x0                   	// #0
  411b40:	add	x1, x1, #0x88
  411b44:	bl	4049c0 <dcgettext@plt>
  411b48:	mov	x2, x0
  411b4c:	mov	w1, #0x0                   	// #0
  411b50:	mov	w0, #0x0                   	// #0
  411b54:	bl	404050 <error@plt>
  411b58:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411b5c:	mov	w1, #0x2                   	// #2
  411b60:	ldp	x19, x20, [sp, #16]
  411b64:	str	w1, [x0, #3400]
  411b68:	ldr	x21, [sp, #32]
  411b6c:	ldp	x29, x30, [sp], #64
  411b70:	ret
  411b74:	str	x0, [x21]
  411b78:	mov	x1, x19
  411b7c:	mov	x0, x20
  411b80:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  411b84:	ldp	x19, x20, [sp, #16]
  411b88:	ldr	x21, [sp, #32]
  411b8c:	ldp	x29, x30, [sp], #64
  411b90:	ret
  411b94:	nop
  411b98:	stp	x29, x30, [sp, #-48]!
  411b9c:	mov	x29, sp
  411ba0:	stp	x19, x20, [sp, #16]
  411ba4:	mov	x19, x2
  411ba8:	stp	x21, x22, [sp, #32]
  411bac:	mov	x22, x1
  411bb0:	mov	x21, x0
  411bb4:	mov	x0, #0x18                  	// #24
  411bb8:	bl	440f48 <argp_parse@@Base+0xd060>
  411bbc:	mov	x20, x0
  411bc0:	mov	x0, x22
  411bc4:	bl	441170 <argp_parse@@Base+0xd288>
  411bc8:	str	x0, [x20, #8]
  411bcc:	cbz	x19, 411bdc <wcrtomb@plt+0xcfbc>
  411bd0:	mov	x0, x19
  411bd4:	bl	441170 <argp_parse@@Base+0xd288>
  411bd8:	mov	x19, x0
  411bdc:	ldr	x0, [x21]
  411be0:	str	x0, [x20]
  411be4:	str	x20, [x21]
  411be8:	str	x19, [x20, #16]
  411bec:	ldp	x19, x20, [sp, #16]
  411bf0:	ldp	x21, x22, [sp, #32]
  411bf4:	ldp	x29, x30, [sp], #48
  411bf8:	ret
  411bfc:	nop
  411c00:	stp	x29, x30, [sp, #-48]!
  411c04:	mov	x29, sp
  411c08:	str	x21, [sp, #32]
  411c0c:	mov	x21, x0
  411c10:	mov	x0, x3
  411c14:	stp	x19, x20, [sp, #16]
  411c18:	mov	x19, x3
  411c1c:	mov	x20, x2
  411c20:	bl	440f48 <argp_parse@@Base+0xd060>
  411c24:	mov	x2, x19
  411c28:	mov	x1, x20
  411c2c:	ldp	x19, x20, [sp, #16]
  411c30:	str	x0, [x21, #384]
  411c34:	ldr	x21, [sp, #32]
  411c38:	ldp	x29, x30, [sp], #48
  411c3c:	b	403f70 <memcpy@plt>
  411c40:	stp	x29, x30, [sp, #-32]!
  411c44:	mov	x29, sp
  411c48:	stp	x19, x20, [sp, #16]
  411c4c:	mov	x19, x0
  411c50:	mov	x20, x1
  411c54:	ldr	x0, [x0]
  411c58:	cbz	x0, 411c64 <wcrtomb@plt+0xd044>
  411c5c:	bl	4047b0 <free@plt>
  411c60:	str	xzr, [x19]
  411c64:	mov	x2, x19
  411c68:	mov	x1, x20
  411c6c:	mov	w0, #0x0                   	// #0
  411c70:	bl	427b00 <wcrtomb@plt+0x22ee0>
  411c74:	tst	w0, #0xff
  411c78:	b.eq	411c88 <wcrtomb@plt+0xd068>  // b.none
  411c7c:	ldp	x19, x20, [sp, #16]
  411c80:	ldp	x29, x30, [sp], #32
  411c84:	ret
  411c88:	mov	x1, x20
  411c8c:	mov	x0, x19
  411c90:	ldp	x19, x20, [sp, #16]
  411c94:	ldp	x29, x30, [sp], #32
  411c98:	b	41aaf8 <wcrtomb@plt+0x15ed8>
  411c9c:	nop
  411ca0:	mov	x1, x2
  411ca4:	add	x0, x0, #0x30
  411ca8:	b	411c40 <wcrtomb@plt+0xd020>
  411cac:	nop
  411cb0:	mov	x1, x2
  411cb4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411cb8:	add	x0, x0, #0xf50
  411cbc:	b	411c40 <wcrtomb@plt+0xd020>
  411cc0:	mov	x1, x2
  411cc4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411cc8:	add	x0, x0, #0xf48
  411ccc:	b	411c40 <wcrtomb@plt+0xd020>
  411cd0:	mov	x1, x2
  411cd4:	add	x0, x0, #0x20
  411cd8:	b	411c40 <wcrtomb@plt+0xd020>
  411cdc:	nop
  411ce0:	mov	x1, x2
  411ce4:	add	x0, x0, #0x18
  411ce8:	b	411c40 <wcrtomb@plt+0xd020>
  411cec:	nop
  411cf0:	mov	x1, x2
  411cf4:	add	x0, x0, #0x28
  411cf8:	b	411c40 <wcrtomb@plt+0xd020>
  411cfc:	nop
  411d00:	stp	x29, x30, [sp, #-64]!
  411d04:	mov	x29, sp
  411d08:	stp	x19, x20, [sp, #16]
  411d0c:	mov	x20, x0
  411d10:	ldr	x19, [x1]
  411d14:	stp	x21, x22, [sp, #32]
  411d18:	mov	x21, x4
  411d1c:	add	x19, x19, #0x1
  411d20:	stp	x23, x24, [sp, #48]
  411d24:	mov	x23, x3
  411d28:	ldr	x0, [x0]
  411d2c:	str	x19, [x1]
  411d30:	add	x19, x19, x19, lsl #1
  411d34:	mov	x24, x2
  411d38:	lsl	x19, x19, #3
  411d3c:	mov	x1, x19
  411d40:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  411d44:	mov	x22, x0
  411d48:	str	x22, [x20]
  411d4c:	sub	x19, x19, #0x18
  411d50:	mov	x0, x24
  411d54:	bl	441170 <argp_parse@@Base+0xd288>
  411d58:	ldr	x2, [x20]
  411d5c:	str	x0, [x22, x19]
  411d60:	add	x1, x21, #0x1
  411d64:	mov	x0, x23
  411d68:	add	x22, x2, x19
  411d6c:	bl	441140 <argp_parse@@Base+0xd258>
  411d70:	ldr	x1, [x20]
  411d74:	ldp	x23, x24, [sp, #48]
  411d78:	add	x1, x1, x19
  411d7c:	ldp	x19, x20, [sp, #16]
  411d80:	str	x0, [x22, #8]
  411d84:	str	x21, [x1, #16]
  411d88:	ldp	x21, x22, [sp, #32]
  411d8c:	ldp	x29, x30, [sp], #64
  411d90:	ret
  411d94:	nop
  411d98:	stp	x29, x30, [sp, #-32]!
  411d9c:	add	x1, x3, #0x1
  411da0:	mov	x29, sp
  411da4:	stp	x19, x20, [sp, #16]
  411da8:	mov	x19, x0
  411dac:	mov	x20, x3
  411db0:	mov	x0, x2
  411db4:	bl	441140 <argp_parse@@Base+0xd258>
  411db8:	stp	x0, x20, [x19, #72]
  411dbc:	ldp	x19, x20, [sp, #16]
  411dc0:	ldp	x29, x30, [sp], #32
  411dc4:	ret
  411dc8:	stp	x29, x30, [sp, #-32]!
  411dcc:	add	x1, x3, #0x1
  411dd0:	mov	x29, sp
  411dd4:	stp	x19, x20, [sp, #16]
  411dd8:	mov	x19, x0
  411ddc:	mov	x20, x3
  411de0:	mov	x0, x2
  411de4:	bl	441140 <argp_parse@@Base+0xd258>
  411de8:	stp	x0, x20, [x19, #56]
  411dec:	ldp	x19, x20, [sp, #16]
  411df0:	ldp	x29, x30, [sp], #32
  411df4:	ret
  411df8:	stp	x29, x30, [sp, #-48]!
  411dfc:	mov	x29, sp
  411e00:	stp	x19, x20, [sp, #16]
  411e04:	adrp	x20, 455000 <_obstack_memory_used@@Base+0x12e10>
  411e08:	adrp	x19, 454000 <_obstack_memory_used@@Base+0x11e10>
  411e0c:	add	x20, x20, #0x520
  411e10:	add	x19, x19, #0xb40
  411e14:	str	x21, [sp, #32]
  411e18:	mov	x21, x0
  411e1c:	b	411e40 <wcrtomb@plt+0xd220>
  411e20:	bl	403ff0 <strlen@plt>
  411e24:	mov	x2, x0
  411e28:	mov	x1, x21
  411e2c:	mov	x0, x19
  411e30:	bl	4043c0 <strncmp@plt>
  411e34:	cbz	w0, 411e58 <wcrtomb@plt+0xd238>
  411e38:	ldr	x19, [x20, #32]!
  411e3c:	cbz	x19, 411e6c <wcrtomb@plt+0xd24c>
  411e40:	ldrb	w2, [x20, #28]
  411e44:	mov	x0, x19
  411e48:	mov	x1, x21
  411e4c:	cbnz	w2, 411e20 <wcrtomb@plt+0xd200>
  411e50:	bl	404710 <strcmp@plt>
  411e54:	cbnz	w0, 411e38 <wcrtomb@plt+0xd218>
  411e58:	mov	x0, x20
  411e5c:	ldp	x19, x20, [sp, #16]
  411e60:	ldr	x21, [sp, #32]
  411e64:	ldp	x29, x30, [sp], #48
  411e68:	ret
  411e6c:	mov	x20, #0x0                   	// #0
  411e70:	mov	x0, x20
  411e74:	ldp	x19, x20, [sp, #16]
  411e78:	ldr	x21, [sp, #32]
  411e7c:	ldp	x29, x30, [sp], #48
  411e80:	ret
  411e84:	nop
  411e88:	cbz	x0, 411ef4 <wcrtomb@plt+0xd2d4>
  411e8c:	stp	x29, x30, [sp, #-48]!
  411e90:	mov	x29, sp
  411e94:	stp	x19, x20, [sp, #16]
  411e98:	mov	x20, x0
  411e9c:	stp	x21, x22, [sp, #32]
  411ea0:	mov	x22, x1
  411ea4:	nop
  411ea8:	ldr	x0, [x20, #8]
  411eac:	bl	411df8 <wcrtomb@plt+0xd1d8>
  411eb0:	mov	x19, x0
  411eb4:	cbz	x0, 411edc <wcrtomb@plt+0xd2bc>
  411eb8:	ldr	x21, [x20, #16]
  411ebc:	mov	x0, x21
  411ec0:	bl	403ff0 <strlen@plt>
  411ec4:	ldr	x1, [x19]
  411ec8:	mov	x3, x0
  411ecc:	ldr	x4, [x19, #16]
  411ed0:	mov	x2, x21
  411ed4:	mov	x0, x22
  411ed8:	blr	x4
  411edc:	ldr	x20, [x20]
  411ee0:	cbnz	x20, 411ea8 <wcrtomb@plt+0xd288>
  411ee4:	ldp	x19, x20, [sp, #16]
  411ee8:	ldp	x21, x22, [sp, #32]
  411eec:	ldp	x29, x30, [sp], #48
  411ef0:	ret
  411ef4:	ret
  411ef8:	stp	x29, x30, [sp, #-48]!
  411efc:	mov	x29, sp
  411f00:	stp	x19, x20, [sp, #16]
  411f04:	mov	x20, x0
  411f08:	mov	x19, x1
  411f0c:	mov	x0, x1
  411f10:	stp	x21, x22, [sp, #32]
  411f14:	mov	x21, x2
  411f18:	mov	x22, x3
  411f1c:	bl	411df8 <wcrtomb@plt+0xd1d8>
  411f20:	cbz	x0, 411f54 <wcrtomb@plt+0xd334>
  411f24:	ldr	w1, [x0, #24]
  411f28:	tbz	w1, #1, 411f54 <wcrtomb@plt+0xd334>
  411f2c:	mov	x3, x22
  411f30:	mov	x2, x21
  411f34:	mov	x1, x19
  411f38:	ldr	x4, [x0, #16]
  411f3c:	mov	x0, x20
  411f40:	ldp	x19, x20, [sp, #16]
  411f44:	mov	x16, x4
  411f48:	ldp	x21, x22, [sp, #32]
  411f4c:	ldp	x29, x30, [sp], #48
  411f50:	br	x16
  411f54:	mov	x2, x21
  411f58:	mov	x1, x19
  411f5c:	mov	x0, x20
  411f60:	ldp	x19, x20, [sp, #16]
  411f64:	ldp	x21, x22, [sp, #32]
  411f68:	ldp	x29, x30, [sp], #48
  411f6c:	b	411b98 <wcrtomb@plt+0xcf78>
  411f70:	stp	x29, x30, [sp, #-96]!
  411f74:	mov	x29, sp
  411f78:	stp	x19, x20, [sp, #16]
  411f7c:	mov	x19, x0
  411f80:	mov	x20, x1
  411f84:	mov	x0, x2
  411f88:	add	x1, sp, #0x30
  411f8c:	stp	x21, x22, [sp, #32]
  411f90:	mov	x22, x3
  411f94:	bl	4397d8 <argp_parse@@Base+0x58f0>
  411f98:	add	x1, sp, #0x48
  411f9c:	mov	x21, x0
  411fa0:	mov	x0, x22
  411fa4:	bl	4398d8 <argp_parse@@Base+0x59f0>
  411fa8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  411fac:	mov	x22, x0
  411fb0:	ldr	x0, [x1, #952]
  411fb4:	cbz	x0, 411fbc <wcrtomb@plt+0xd39c>
  411fb8:	blr	x0
  411fbc:	mov	w2, #0x5                   	// #5
  411fc0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  411fc4:	mov	x0, #0x0                   	// #0
  411fc8:	add	x1, x1, #0xb0
  411fcc:	bl	4049c0 <dcgettext@plt>
  411fd0:	mov	x2, x0
  411fd4:	mov	x6, x22
  411fd8:	mov	x5, x21
  411fdc:	mov	x4, x20
  411fe0:	mov	x3, x19
  411fe4:	mov	w1, #0x0                   	// #0
  411fe8:	mov	w0, #0x0                   	// #0
  411fec:	bl	404050 <error@plt>
  411ff0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  411ff4:	mov	w1, #0x2                   	// #2
  411ff8:	ldp	x19, x20, [sp, #16]
  411ffc:	str	w1, [x0, #3400]
  412000:	ldp	x21, x22, [sp, #32]
  412004:	ldp	x29, x30, [sp], #96
  412008:	ret
  41200c:	nop
  412010:	stp	x29, x30, [sp, #-80]!
  412014:	mov	x29, sp
  412018:	stp	x19, x20, [sp, #16]
  41201c:	mov	x20, x2
  412020:	stp	x21, x22, [sp, #32]
  412024:	mov	x22, x1
  412028:	stp	x23, x24, [sp, #48]
  41202c:	mov	x23, x0
  412030:	str	xzr, [x0, #288]
  412034:	ldrb	w0, [x2]
  412038:	sub	w0, w0, #0x30
  41203c:	cmp	w0, #0x9
  412040:	b.hi	412158 <wcrtomb@plt+0xd538>  // b.pmore
  412044:	bl	404ad0 <__errno_location@plt>
  412048:	mov	w19, #0x1                   	// #1
  41204c:	mov	x24, x0
  412050:	b	412094 <wcrtomb@plt+0xd474>
  412054:	mov	x21, x0
  412058:	ldr	w0, [x24]
  41205c:	cmp	w0, #0x22
  412060:	b.eq	4121b4 <wcrtomb@plt+0xd594>  // b.none
  412064:	ldr	x3, [sp, #72]
  412068:	eor	w0, w19, #0x1
  41206c:	add	x20, x3, #0x1
  412070:	ldrb	w5, [x3]
  412074:	cmp	w5, #0x2c
  412078:	cbz	w5, 4120fc <wcrtomb@plt+0xd4dc>
  41207c:	b.ne	4121dc <wcrtomb@plt+0xd5bc>  // b.any
  412080:	ldrb	w3, [x3, #1]
  412084:	mov	w19, w0
  412088:	sub	w3, w3, #0x30
  41208c:	cmp	w3, #0x9
  412090:	b.hi	412158 <wcrtomb@plt+0xd538>  // b.pmore
  412094:	str	wzr, [x24]
  412098:	add	x1, sp, #0x48
  41209c:	mov	x0, x20
  4120a0:	mov	w3, #0x0                   	// #0
  4120a4:	mov	w2, #0xa                   	// #10
  4120a8:	bl	404390 <__strtol_internal@plt>
  4120ac:	cbnz	w19, 412054 <wcrtomb@plt+0xd434>
  4120b0:	ldr	w1, [x24]
  4120b4:	cmp	w1, #0x22
  4120b8:	b.eq	4121b4 <wcrtomb@plt+0xd594>  // b.none
  4120bc:	ldp	x1, x3, [x23, #288]
  4120c0:	add	x4, x1, #0x1
  4120c4:	lsl	x2, x1, #4
  4120c8:	cmp	x1, x3
  4120cc:	b.cs	41223c <wcrtomb@plt+0xd61c>  // b.hs, b.nlast
  4120d0:	ldr	x1, [x23, #304]
  4120d4:	str	x4, [x23, #288]
  4120d8:	add	x3, x1, x2
  4120dc:	str	x21, [x1, x2]
  4120e0:	str	x0, [x3, #8]
  4120e4:	eor	w0, w19, #0x1
  4120e8:	ldr	x3, [sp, #72]
  4120ec:	add	x20, x3, #0x1
  4120f0:	ldrb	w5, [x3]
  4120f4:	cmp	w5, #0x2c
  4120f8:	cbnz	w5, 41207c <wcrtomb@plt+0xd45c>
  4120fc:	cbz	w19, 4121a0 <wcrtomb@plt+0xd580>
  412100:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  412104:	ldr	x0, [x0, #952]
  412108:	cbz	x0, 412110 <wcrtomb@plt+0xd4f0>
  41210c:	blr	x0
  412110:	mov	w2, #0x5                   	// #5
  412114:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  412118:	mov	x0, #0x0                   	// #0
  41211c:	add	x1, x1, #0x178
  412120:	bl	4049c0 <dcgettext@plt>
  412124:	mov	x2, x0
  412128:	mov	x3, x22
  41212c:	mov	w1, #0x0                   	// #0
  412130:	mov	w0, #0x0                   	// #0
  412134:	bl	404050 <error@plt>
  412138:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41213c:	mov	w1, #0x2                   	// #2
  412140:	ldp	x19, x20, [sp, #16]
  412144:	str	w1, [x0, #3400]
  412148:	ldp	x21, x22, [sp, #32]
  41214c:	ldp	x23, x24, [sp, #48]
  412150:	ldp	x29, x30, [sp], #80
  412154:	ret
  412158:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41215c:	ldr	x0, [x0, #952]
  412160:	cbz	x0, 412168 <wcrtomb@plt+0xd548>
  412164:	blr	x0
  412168:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  41216c:	add	x1, x1, #0xe0
  412170:	mov	w2, #0x5                   	// #5
  412174:	mov	x0, #0x0                   	// #0
  412178:	bl	4049c0 <dcgettext@plt>
  41217c:	mov	w1, #0x0                   	// #0
  412180:	mov	x2, x0
  412184:	mov	x4, x20
  412188:	mov	w0, #0x0                   	// #0
  41218c:	mov	x3, x22
  412190:	bl	404050 <error@plt>
  412194:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  412198:	mov	w1, #0x2                   	// #2
  41219c:	str	w1, [x0, #3400]
  4121a0:	ldp	x19, x20, [sp, #16]
  4121a4:	ldp	x21, x22, [sp, #32]
  4121a8:	ldp	x23, x24, [sp, #48]
  4121ac:	ldp	x29, x30, [sp], #80
  4121b0:	ret
  4121b4:	mov	x1, x20
  4121b8:	mov	x0, x22
  4121bc:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  4121c0:	mov	x2, #0x0                   	// #0
  4121c4:	bl	411f70 <wcrtomb@plt+0xd350>
  4121c8:	ldp	x19, x20, [sp, #16]
  4121cc:	ldp	x21, x22, [sp, #32]
  4121d0:	ldp	x23, x24, [sp, #48]
  4121d4:	ldp	x29, x30, [sp], #80
  4121d8:	ret
  4121dc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4121e0:	ldr	x0, [x0, #952]
  4121e4:	cbz	x0, 4121ec <wcrtomb@plt+0xd5cc>
  4121e8:	blr	x0
  4121ec:	mov	w2, #0x5                   	// #5
  4121f0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4121f4:	mov	x0, #0x0                   	// #0
  4121f8:	add	x1, x1, #0x138
  4121fc:	bl	4049c0 <dcgettext@plt>
  412200:	mov	x2, x0
  412204:	ldr	x4, [sp, #72]
  412208:	mov	x3, x22
  41220c:	mov	w1, #0x0                   	// #0
  412210:	mov	w0, #0x0                   	// #0
  412214:	ldrb	w4, [x4]
  412218:	bl	404050 <error@plt>
  41221c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  412220:	mov	w1, #0x2                   	// #2
  412224:	ldp	x19, x20, [sp, #16]
  412228:	str	w1, [x0, #3400]
  41222c:	ldp	x21, x22, [sp, #32]
  412230:	ldp	x23, x24, [sp, #48]
  412234:	ldp	x29, x30, [sp], #80
  412238:	ret
  41223c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  412240:	ldr	x0, [x0, #952]
  412244:	cbz	x0, 41224c <wcrtomb@plt+0xd62c>
  412248:	blr	x0
  41224c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  412250:	mov	w2, #0x5                   	// #5
  412254:	add	x1, x1, #0x110
  412258:	b	412174 <wcrtomb@plt+0xd554>
  41225c:	nop
  412260:	ldrb	w1, [x0, #321]
  412264:	cbz	w1, 41226c <wcrtomb@plt+0xd64c>
  412268:	ret
  41226c:	stp	x29, x30, [sp, #-32]!
  412270:	mov	x1, x2
  412274:	mov	x29, sp
  412278:	stp	x19, x20, [sp, #16]
  41227c:	mov	x19, x0
  412280:	mov	x20, x2
  412284:	bl	411c40 <wcrtomb@plt+0xd020>
  412288:	mov	x1, x20
  41228c:	add	x0, x19, #0x8
  412290:	bl	411c40 <wcrtomb@plt+0xd020>
  412294:	ldr	x0, [x19, #8]
  412298:	bl	4355f8 <argp_parse@@Base+0x1710>
  41229c:	strb	w0, [x19, #16]
  4122a0:	ldp	x19, x20, [sp, #16]
  4122a4:	ldp	x29, x30, [sp], #32
  4122a8:	ret
  4122ac:	nop
  4122b0:	stp	x29, x30, [sp, #-112]!
  4122b4:	mov	x29, sp
  4122b8:	stp	x21, x22, [sp, #32]
  4122bc:	mov	x22, x2
  4122c0:	ldr	x21, [x2]
  4122c4:	stp	x19, x20, [sp, #16]
  4122c8:	mov	x20, x1
  4122cc:	stp	x23, x24, [sp, #48]
  4122d0:	mov	x19, x21
  4122d4:	mov	x23, x3
  4122d8:	stp	x25, x26, [sp, #64]
  4122dc:	mov	x24, x4
  4122e0:	mov	x25, x0
  4122e4:	ldrb	w5, [x21]
  4122e8:	cmp	w5, #0x20
  4122ec:	ccmp	w5, #0x9, #0x4, ne  // ne = any
  4122f0:	b.ne	412308 <wcrtomb@plt+0xd6e8>  // b.any
  4122f4:	nop
  4122f8:	ldrb	w5, [x19, #1]!
  4122fc:	cmp	w5, #0x20
  412300:	ccmp	w5, #0x9, #0x4, ne  // ne = any
  412304:	b.eq	4122f8 <wcrtomb@plt+0xd6d8>  // b.none
  412308:	sub	w0, w5, #0x30
  41230c:	cmp	w0, #0x9
  412310:	b.ls	41237c <wcrtomb@plt+0xd75c>  // b.plast
  412314:	mov	w19, #0x0                   	// #0
  412318:	cbz	w5, 412360 <wcrtomb@plt+0xd740>
  41231c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  412320:	ldr	x0, [x0, #952]
  412324:	cbz	x0, 41232c <wcrtomb@plt+0xd70c>
  412328:	blr	x0
  41232c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  412330:	add	x1, x1, #0x1b8
  412334:	mov	w2, #0x5                   	// #5
  412338:	mov	x0, #0x0                   	// #0
  41233c:	bl	4049c0 <dcgettext@plt>
  412340:	mov	w1, #0x0                   	// #0
  412344:	mov	x2, x0
  412348:	mov	w0, #0x0                   	// #0
  41234c:	bl	404050 <error@plt>
  412350:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  412354:	mov	w1, #0x2                   	// #2
  412358:	mov	w19, #0x0                   	// #0
  41235c:	str	w1, [x0, #3400]
  412360:	mov	w0, w19
  412364:	ldp	x19, x20, [sp, #16]
  412368:	ldp	x21, x22, [sp, #32]
  41236c:	ldp	x23, x24, [sp, #48]
  412370:	ldp	x25, x26, [sp, #64]
  412374:	ldp	x29, x30, [sp], #112
  412378:	ret
  41237c:	add	x1, sp, #0x68
  412380:	mov	x0, x19
  412384:	mov	w3, #0x0                   	// #0
  412388:	mov	w2, #0xa                   	// #10
  41238c:	bl	4044b0 <__strtoul_internal@plt>
  412390:	add	x1, x20, x25
  412394:	sub	x1, x1, x21
  412398:	cmp	x1, x0
  41239c:	b.cc	4123e0 <wcrtomb@plt+0xd7c0>  // b.lo, b.ul, b.last
  4123a0:	ldr	x1, [sp, #104]
  4123a4:	add	x21, x21, x0
  4123a8:	ldrb	w0, [x1]
  4123ac:	cmp	w0, #0x20
  4123b0:	cset	w25, eq  // eq = none
  4123b4:	cmp	w0, #0x9
  4123b8:	csinc	w25, w25, wzr, ne  // ne = any
  4123bc:	cbnz	w25, 412450 <wcrtomb@plt+0xd830>
  4123c0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4123c4:	ldr	x0, [x0, #952]
  4123c8:	cbz	x0, 4123d0 <wcrtomb@plt+0xd7b0>
  4123cc:	blr	x0
  4123d0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4123d4:	mov	w2, #0x5                   	// #5
  4123d8:	add	x1, x1, #0x218
  4123dc:	b	412338 <wcrtomb@plt+0xd718>
  4123e0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4123e4:	ldr	x20, [sp, #104]
  4123e8:	ldr	x0, [x0, #952]
  4123ec:	sub	x20, x20, x19
  4123f0:	cbz	x0, 4123f8 <wcrtomb@plt+0xd7d8>
  4123f4:	blr	x0
  4123f8:	mov	w2, #0x5                   	// #5
  4123fc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  412400:	mov	x0, #0x0                   	// #0
  412404:	add	x1, x1, #0x1e8
  412408:	bl	4049c0 <dcgettext@plt>
  41240c:	mov	x2, x0
  412410:	mov	x4, x19
  412414:	mov	w3, w20
  412418:	mov	w1, #0x0                   	// #0
  41241c:	mov	w0, #0x0                   	// #0
  412420:	bl	404050 <error@plt>
  412424:	mov	w19, #0x0                   	// #0
  412428:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41242c:	mov	w1, #0x2                   	// #2
  412430:	ldp	x21, x22, [sp, #32]
  412434:	str	w1, [x0, #3400]
  412438:	mov	w0, w19
  41243c:	ldp	x19, x20, [sp, #16]
  412440:	ldp	x23, x24, [sp, #48]
  412444:	ldp	x25, x26, [sp, #64]
  412448:	ldp	x29, x30, [sp], #112
  41244c:	ret
  412450:	mov	x26, x1
  412454:	str	x27, [sp, #80]
  412458:	ldrb	w0, [x26, #1]!
  41245c:	cmp	w0, #0x20
  412460:	cset	w19, eq  // eq = none
  412464:	cmp	w0, #0x9
  412468:	csinc	w19, w19, wzr, ne  // ne = any
  41246c:	cbnz	w19, 412458 <wcrtomb@plt+0xd838>
  412470:	cmp	x1, x26
  412474:	b.eq	41257c <wcrtomb@plt+0xd95c>  // b.none
  412478:	mov	w1, #0x3d                  	// #61
  41247c:	mov	x0, x26
  412480:	bl	404870 <strchr@plt>
  412484:	mov	x20, x0
  412488:	cmp	x0, #0x0
  41248c:	cset	w0, eq  // eq = none
  412490:	cmp	x21, x20
  412494:	cset	w1, ls  // ls = plast
  412498:	orr	w0, w0, w1
  41249c:	cbnz	w0, 4124f8 <wcrtomb@plt+0xd8d8>
  4124a0:	ldurb	w27, [x21, #-1]
  4124a4:	cmp	w27, #0xa
  4124a8:	b.eq	412540 <wcrtomb@plt+0xd920>  // b.none
  4124ac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4124b0:	ldr	x0, [x0, #952]
  4124b4:	cbz	x0, 4124bc <wcrtomb@plt+0xd89c>
  4124b8:	blr	x0
  4124bc:	mov	w2, #0x5                   	// #5
  4124c0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4124c4:	mov	x0, #0x0                   	// #0
  4124c8:	add	x1, x1, #0x280
  4124cc:	bl	4049c0 <dcgettext@plt>
  4124d0:	mov	x2, x0
  4124d4:	mov	w1, #0x0                   	// #0
  4124d8:	mov	w0, #0x0                   	// #0
  4124dc:	bl	404050 <error@plt>
  4124e0:	mov	w19, #0x0                   	// #0
  4124e4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4124e8:	mov	w1, #0x2                   	// #2
  4124ec:	ldr	x27, [sp, #80]
  4124f0:	str	w1, [x0, #3400]
  4124f4:	b	412360 <wcrtomb@plt+0xd740>
  4124f8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4124fc:	ldr	x0, [x0, #952]
  412500:	cbz	x0, 412508 <wcrtomb@plt+0xd8e8>
  412504:	blr	x0
  412508:	mov	w2, #0x5                   	// #5
  41250c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  412510:	mov	x0, #0x0                   	// #0
  412514:	add	x1, x1, #0x250
  412518:	bl	4049c0 <dcgettext@plt>
  41251c:	mov	x2, x0
  412520:	mov	w1, #0x0                   	// #0
  412524:	mov	w0, #0x0                   	// #0
  412528:	bl	404050 <error@plt>
  41252c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  412530:	mov	w1, #0x2                   	// #2
  412534:	ldr	x27, [sp, #80]
  412538:	str	w1, [x0, #3400]
  41253c:	b	412360 <wcrtomb@plt+0xd740>
  412540:	sturb	wzr, [x21, #-1]
  412544:	sub	x3, x21, x20
  412548:	strb	wzr, [x20]
  41254c:	mov	x0, x24
  412550:	mov	x1, x26
  412554:	sub	x3, x3, #0x2
  412558:	add	x2, x20, #0x1
  41255c:	blr	x23
  412560:	mov	w0, #0x3d                  	// #61
  412564:	strb	w0, [x20]
  412568:	sturb	w27, [x21, #-1]
  41256c:	mov	w19, w25
  412570:	ldr	x27, [sp, #80]
  412574:	str	x21, [x22]
  412578:	b	412360 <wcrtomb@plt+0xd740>
  41257c:	ldr	x27, [sp, #80]
  412580:	b	4123c0 <wcrtomb@plt+0xd7a0>
  412584:	nop
  412588:	stp	x29, x30, [sp, #-32]!
  41258c:	mov	x29, sp
  412590:	str	x19, [sp, #16]
  412594:	mov	x19, x0
  412598:	mov	x0, #0x58                  	// #88
  41259c:	bl	440f48 <argp_parse@@Base+0xd060>
  4125a0:	adrp	x4, 404000 <fputs@plt>
  4125a4:	adrp	x3, 440000 <argp_parse@@Base+0xc118>
  4125a8:	str	x0, [x19]
  4125ac:	add	x4, x4, #0x7b0
  4125b0:	ldr	x19, [sp, #16]
  4125b4:	add	x3, x3, #0xf48
  4125b8:	ldp	x29, x30, [sp], #32
  4125bc:	mov	x2, #0x0                   	// #0
  4125c0:	mov	x1, #0x0                   	// #0
  4125c4:	b	441fe0 <_obstack_begin@@Base>
  4125c8:	stp	x29, x30, [sp, #-48]!
  4125cc:	mov	x29, sp
  4125d0:	stp	x21, x22, [sp, #32]
  4125d4:	mov	x21, x1
  4125d8:	mov	x22, x2
  4125dc:	ldp	x2, x1, [x0, #24]
  4125e0:	stp	x19, x20, [sp, #16]
  4125e4:	mov	x20, x0
  4125e8:	mov	x19, x3
  4125ec:	sub	x1, x1, x2
  4125f0:	cmp	x1, x3
  4125f4:	b.cc	412630 <wcrtomb@plt+0xda10>  // b.lo, b.ul, b.last
  4125f8:	mov	x1, x22
  4125fc:	mov	x0, x2
  412600:	mov	x2, x19
  412604:	bl	403f70 <memcpy@plt>
  412608:	ldr	x0, [x20, #24]
  41260c:	ldr	x3, [x21]
  412610:	add	x0, x0, x19
  412614:	str	x0, [x20, #24]
  412618:	add	x19, x3, x19
  41261c:	str	x19, [x21]
  412620:	ldp	x19, x20, [sp, #16]
  412624:	ldp	x21, x22, [sp, #32]
  412628:	ldp	x29, x30, [sp], #48
  41262c:	ret
  412630:	mov	x1, x3
  412634:	bl	442010 <_obstack_newchunk@@Base>
  412638:	ldr	x2, [x20, #24]
  41263c:	b	4125f8 <wcrtomb@plt+0xd9d8>
  412640:	stp	x29, x30, [sp, #-128]!
  412644:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  412648:	mov	x29, sp
  41264c:	stp	x27, x28, [sp, #80]
  412650:	add	x27, x4, #0x808
  412654:	stp	x21, x22, [sp, #32]
  412658:	mov	x22, x0
  41265c:	ldr	x21, [x27, #8]
  412660:	stp	x19, x20, [sp, #16]
  412664:	stp	x23, x24, [sp, #48]
  412668:	mov	x24, x2
  41266c:	mov	x23, x3
  412670:	stp	x25, x26, [sp, #64]
  412674:	mov	x25, x1
  412678:	cbz	x21, 412830 <wcrtomb@plt+0xdc10>
  41267c:	strb	wzr, [x21]
  412680:	ldrb	w20, [x25]
  412684:	cbz	w20, 412850 <wcrtomb@plt+0xdc30>
  412688:	add	x28, x27, #0x10
  41268c:	mov	x19, #0x0                   	// #0
  412690:	b	4126b8 <wcrtomb@plt+0xda98>
  412694:	cmp	w20, #0x25
  412698:	add	x0, x21, x19
  41269c:	b.eq	4126e8 <wcrtomb@plt+0xdac8>  // b.none
  4126a0:	cmp	w20, #0x3d
  4126a4:	b.eq	41281c <wcrtomb@plt+0xdbfc>  // b.none
  4126a8:	strb	w20, [x0]
  4126ac:	ldrb	w20, [x25, #1]!
  4126b0:	add	x19, x19, #0x1
  4126b4:	cbz	w20, 412704 <wcrtomb@plt+0xdae4>
  4126b8:	ldr	x0, [x27, #16]
  4126bc:	add	x26, x19, #0x2
  4126c0:	cmp	x26, x0
  4126c4:	b.cc	412694 <wcrtomb@plt+0xda74>  // b.lo, b.ul, b.last
  4126c8:	mov	x0, x21
  4126cc:	mov	x1, x28
  4126d0:	bl	441090 <argp_parse@@Base+0xd1a8>
  4126d4:	str	x0, [x27, #8]
  4126d8:	mov	x21, x0
  4126dc:	cmp	w20, #0x25
  4126e0:	add	x0, x21, x19
  4126e4:	b.ne	4126a0 <wcrtomb@plt+0xda80>  // b.any
  4126e8:	mov	w0, #0x3225                	// #12837
  4126ec:	movk	w0, #0x35, lsl #16
  4126f0:	str	w0, [x21, x19]
  4126f4:	mov	x19, x26
  4126f8:	ldrb	w20, [x25, #1]!
  4126fc:	add	x19, x19, #0x1
  412700:	cbnz	w20, 4126b8 <wcrtomb@plt+0xda98>
  412704:	add	x19, x21, x19
  412708:	strb	wzr, [x19]
  41270c:	add	x20, x23, #0x3
  412710:	mov	x0, x21
  412714:	add	x25, sp, #0x7c
  412718:	bl	403ff0 <strlen@plt>
  41271c:	mov	x26, x0
  412720:	add	x20, x20, x0
  412724:	mov	x19, #0x0                   	// #0
  412728:	add	x1, sp, #0x68
  41272c:	add	x0, x19, x20
  412730:	bl	4398d8 <argp_parse@@Base+0x59f0>
  412734:	mov	x1, x19
  412738:	sub	x19, x25, x0
  41273c:	cmp	x1, x19
  412740:	b.ne	412728 <wcrtomb@plt+0xdb08>  // b.any
  412744:	mov	x20, x22
  412748:	mov	x2, x0
  41274c:	mov	x3, x19
  412750:	ldr	x0, [x20], #8
  412754:	mov	x1, x20
  412758:	bl	4125c8 <wcrtomb@plt+0xd9a8>
  41275c:	ldr	x19, [x22]
  412760:	ldp	x0, x1, [x19, #24]
  412764:	cmp	x1, x0
  412768:	b.eq	412858 <wcrtomb@plt+0xdc38>  // b.none
  41276c:	add	x1, x0, #0x1
  412770:	str	x1, [x19, #24]
  412774:	mov	w1, #0x20                  	// #32
  412778:	strb	w1, [x0]
  41277c:	mov	x3, x26
  412780:	mov	x1, x20
  412784:	ldp	x0, x4, [x22]
  412788:	mov	x2, x21
  41278c:	add	x4, x4, #0x1
  412790:	str	x4, [x22, #8]
  412794:	bl	4125c8 <wcrtomb@plt+0xd9a8>
  412798:	ldr	x19, [x22]
  41279c:	ldp	x0, x1, [x19, #24]
  4127a0:	cmp	x1, x0
  4127a4:	b.eq	41286c <wcrtomb@plt+0xdc4c>  // b.none
  4127a8:	add	x1, x0, #0x1
  4127ac:	str	x1, [x19, #24]
  4127b0:	mov	w1, #0x3d                  	// #61
  4127b4:	strb	w1, [x0]
  4127b8:	mov	x3, x23
  4127bc:	mov	x1, x20
  4127c0:	ldp	x0, x4, [x22]
  4127c4:	mov	x2, x24
  4127c8:	add	x4, x4, #0x1
  4127cc:	str	x4, [x22, #8]
  4127d0:	bl	4125c8 <wcrtomb@plt+0xd9a8>
  4127d4:	ldr	x19, [x22]
  4127d8:	ldp	x0, x1, [x19, #24]
  4127dc:	cmp	x1, x0
  4127e0:	b.eq	412880 <wcrtomb@plt+0xdc60>  // b.none
  4127e4:	add	x1, x0, #0x1
  4127e8:	str	x1, [x19, #24]
  4127ec:	mov	w1, #0xa                   	// #10
  4127f0:	strb	w1, [x0]
  4127f4:	ldr	x0, [x22, #8]
  4127f8:	ldp	x19, x20, [sp, #16]
  4127fc:	add	x0, x0, #0x1
  412800:	ldp	x23, x24, [sp, #48]
  412804:	ldp	x25, x26, [sp, #64]
  412808:	ldp	x27, x28, [sp, #80]
  41280c:	str	x0, [x22, #8]
  412810:	ldp	x21, x22, [sp, #32]
  412814:	ldp	x29, x30, [sp], #128
  412818:	ret
  41281c:	mov	w1, #0x3325                	// #13093
  412820:	mov	x19, x26
  412824:	movk	w1, #0x44, lsl #16
  412828:	str	w1, [x0]
  41282c:	b	4126ac <wcrtomb@plt+0xda8c>
  412830:	mov	x0, #0x100                 	// #256
  412834:	str	x0, [x27, #16]
  412838:	bl	440f48 <argp_parse@@Base+0xd060>
  41283c:	ldrb	w20, [x25]
  412840:	str	x0, [x27, #8]
  412844:	mov	x21, x0
  412848:	cbnz	w20, 412688 <wcrtomb@plt+0xda68>
  41284c:	nop
  412850:	mov	x19, x21
  412854:	b	412708 <wcrtomb@plt+0xdae8>
  412858:	mov	x0, x19
  41285c:	mov	x1, #0x1                   	// #1
  412860:	bl	442010 <_obstack_newchunk@@Base>
  412864:	ldr	x0, [x19, #24]
  412868:	b	41276c <wcrtomb@plt+0xdb4c>
  41286c:	mov	x0, x19
  412870:	mov	x1, #0x1                   	// #1
  412874:	bl	442010 <_obstack_newchunk@@Base>
  412878:	ldr	x0, [x19, #24]
  41287c:	b	4127a8 <wcrtomb@plt+0xdb88>
  412880:	mov	x0, x19
  412884:	mov	x1, #0x1                   	// #1
  412888:	bl	442010 <_obstack_newchunk@@Base>
  41288c:	ldr	x0, [x19, #24]
  412890:	b	4127e4 <wcrtomb@plt+0xdbc4>
  412894:	nop
  412898:	stp	x29, x30, [sp, #-64]!
  41289c:	mov	x29, sp
  4128a0:	stp	x19, x20, [sp, #16]
  4128a4:	mov	x19, x0
  4128a8:	mov	x20, x2
  4128ac:	add	x2, sp, #0x38
  4128b0:	str	x21, [sp, #32]
  4128b4:	mov	x21, x1
  4128b8:	mov	x1, x0
  4128bc:	mov	w0, #0x1                   	// #1
  4128c0:	bl	427b00 <wcrtomb@plt+0x22ee0>
  4128c4:	tst	w0, #0xff
  4128c8:	b.eq	412904 <wcrtomb@plt+0xdce4>  // b.none
  4128cc:	ldr	x19, [sp, #56]
  4128d0:	mov	x0, x19
  4128d4:	bl	403ff0 <strlen@plt>
  4128d8:	mov	x3, x0
  4128dc:	mov	x2, x19
  4128e0:	mov	x1, x21
  4128e4:	mov	x0, x20
  4128e8:	bl	412640 <wcrtomb@plt+0xda20>
  4128ec:	ldr	x0, [sp, #56]
  4128f0:	bl	4047b0 <free@plt>
  4128f4:	ldp	x19, x20, [sp, #16]
  4128f8:	ldr	x21, [sp, #32]
  4128fc:	ldp	x29, x30, [sp], #64
  412900:	ret
  412904:	mov	x0, x19
  412908:	bl	441170 <argp_parse@@Base+0xd288>
  41290c:	mov	x19, x0
  412910:	str	x0, [sp, #56]
  412914:	b	4128d0 <wcrtomb@plt+0xdcb0>
  412918:	ldr	x0, [x0, #48]
  41291c:	b	412898 <wcrtomb@plt+0xdc78>
  412920:	mov	x0, x3
  412924:	b	412898 <wcrtomb@plt+0xdc78>
  412928:	ldr	x0, [x0, #32]
  41292c:	b	412898 <wcrtomb@plt+0xdc78>
  412930:	ldr	x0, [x0, #8]
  412934:	b	412898 <wcrtomb@plt+0xdc78>
  412938:	ldr	x0, [x0, #24]
  41293c:	b	412898 <wcrtomb@plt+0xdc78>
  412940:	ldr	x0, [x0, #40]
  412944:	b	412898 <wcrtomb@plt+0xdc78>
  412948:	mov	x4, x0
  41294c:	mov	x0, x2
  412950:	ldr	x3, [x3]
  412954:	ldr	x2, [x4, #336]
  412958:	add	x3, x3, x3, lsl #1
  41295c:	add	x3, x2, x3, lsl #3
  412960:	ldp	x2, x3, [x3, #8]
  412964:	b	412640 <wcrtomb@plt+0xda20>
  412968:	mov	x3, x0
  41296c:	mov	x0, x2
  412970:	ldp	x2, x3, [x3, #72]
  412974:	b	412640 <wcrtomb@plt+0xda20>
  412978:	mov	x3, x0
  41297c:	mov	x0, x2
  412980:	ldp	x2, x3, [x3, #56]
  412984:	b	412640 <wcrtomb@plt+0xda20>
  412988:	stp	x29, x30, [sp, #-48]!
  41298c:	mov	x0, x3
  412990:	mov	x29, sp
  412994:	stp	x19, x20, [sp, #16]
  412998:	mov	x19, x3
  41299c:	mov	x20, x2
  4129a0:	str	x21, [sp, #32]
  4129a4:	mov	x21, x1
  4129a8:	bl	415c78 <wcrtomb@plt+0x11058>
  4129ac:	mov	x3, x0
  4129b0:	mov	x2, x19
  4129b4:	mov	x1, x21
  4129b8:	mov	x0, x20
  4129bc:	ldp	x19, x20, [sp, #16]
  4129c0:	ldr	x21, [sp, #32]
  4129c4:	ldp	x29, x30, [sp], #48
  4129c8:	b	412640 <wcrtomb@plt+0xda20>
  4129cc:	nop
  4129d0:	stp	x29, x30, [sp, #-80]!
  4129d4:	mov	x29, sp
  4129d8:	stp	x19, x20, [sp, #16]
  4129dc:	mov	x20, x2
  4129e0:	add	x2, sp, #0x30
  4129e4:	mov	x19, x3
  4129e8:	str	x21, [sp, #32]
  4129ec:	bl	41b298 <wcrtomb@plt+0x16678>
  4129f0:	mov	x21, x0
  4129f4:	bl	403ff0 <strlen@plt>
  4129f8:	mov	x3, x0
  4129fc:	mov	x2, x21
  412a00:	mov	x1, x20
  412a04:	mov	x0, x19
  412a08:	bl	412640 <wcrtomb@plt+0xda20>
  412a0c:	ldp	x19, x20, [sp, #16]
  412a10:	ldr	x21, [sp, #32]
  412a14:	ldp	x29, x30, [sp], #80
  412a18:	ret
  412a1c:	nop
  412a20:	cmp	x3, #0x0
  412a24:	add	x0, x0, #0xe8
  412a28:	csel	x0, x0, x3, eq  // eq = none
  412a2c:	mov	x3, x2
  412a30:	mov	x2, x1
  412a34:	ldp	x0, x1, [x0]
  412a38:	b	4129d0 <wcrtomb@plt+0xddb0>
  412a3c:	nop
  412a40:	mov	x3, x2
  412a44:	mov	x2, x1
  412a48:	ldp	x0, x1, [x0, #248]
  412a4c:	b	4129d0 <wcrtomb@plt+0xddb0>
  412a50:	mov	x3, x2
  412a54:	mov	x2, x1
  412a58:	ldp	x0, x1, [x0, #216]
  412a5c:	b	4129d0 <wcrtomb@plt+0xddb0>
  412a60:	stp	x29, x30, [sp, #-64]!
  412a64:	mov	x29, sp
  412a68:	stp	x19, x20, [sp, #16]
  412a6c:	mov	x19, x1
  412a70:	mov	x20, x0
  412a74:	mov	x0, x1
  412a78:	add	x1, sp, #0x38
  412a7c:	str	x21, [sp, #32]
  412a80:	mov	x21, x2
  412a84:	mov	w2, #0x1                   	// #1
  412a88:	bl	41b348 <wcrtomb@plt+0x16728>
  412a8c:	tbnz	x1, #63, 412aac <wcrtomb@plt+0xde8c>
  412a90:	mov	w2, #0x1                   	// #1
  412a94:	stp	x0, x1, [x20]
  412a98:	mov	w0, w2
  412a9c:	ldp	x19, x20, [sp, #16]
  412aa0:	ldr	x21, [sp, #32]
  412aa4:	ldp	x29, x30, [sp], #64
  412aa8:	ret
  412aac:	ldr	x0, [sp, #56]
  412ab0:	cmp	x19, x0
  412ab4:	b.cs	412ac0 <wcrtomb@plt+0xdea0>  // b.hs, b.nlast
  412ab8:	ldrb	w0, [x0]
  412abc:	cbz	w0, 412b20 <wcrtomb@plt+0xdf00>
  412ac0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  412ac4:	ldr	x0, [x0, #952]
  412ac8:	cbz	x0, 412ad0 <wcrtomb@plt+0xdeb0>
  412acc:	blr	x0
  412ad0:	mov	w2, #0x5                   	// #5
  412ad4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  412ad8:	mov	x0, #0x0                   	// #0
  412adc:	add	x1, x1, #0xe0
  412ae0:	bl	4049c0 <dcgettext@plt>
  412ae4:	mov	x2, x0
  412ae8:	mov	x4, x19
  412aec:	mov	x3, x21
  412af0:	mov	w1, #0x0                   	// #0
  412af4:	mov	w0, #0x0                   	// #0
  412af8:	bl	404050 <error@plt>
  412afc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  412b00:	mov	w1, #0x2                   	// #2
  412b04:	mov	w2, #0x0                   	// #0
  412b08:	str	w1, [x0, #3400]
  412b0c:	mov	w0, w2
  412b10:	ldp	x19, x20, [sp, #16]
  412b14:	ldr	x21, [sp, #32]
  412b18:	ldp	x29, x30, [sp], #64
  412b1c:	ret
  412b20:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  412b24:	mov	x1, x19
  412b28:	mov	x0, x21
  412b2c:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  412b30:	bl	411f70 <wcrtomb@plt+0xd350>
  412b34:	mov	w2, #0x0                   	// #0
  412b38:	b	412a98 <wcrtomb@plt+0xde78>
  412b3c:	nop
  412b40:	stp	x29, x30, [sp, #-48]!
  412b44:	mov	x3, x1
  412b48:	mov	x1, x2
  412b4c:	mov	x29, sp
  412b50:	mov	x2, x3
  412b54:	str	x19, [sp, #16]
  412b58:	mov	x19, x0
  412b5c:	add	x0, sp, #0x20
  412b60:	bl	412a60 <wcrtomb@plt+0xde40>
  412b64:	tst	w0, #0xff
  412b68:	b.eq	412b74 <wcrtomb@plt+0xdf54>  // b.none
  412b6c:	ldp	x0, x1, [sp, #32]
  412b70:	stp	x0, x1, [x19, #232]
  412b74:	ldr	x19, [sp, #16]
  412b78:	ldp	x29, x30, [sp], #48
  412b7c:	ret
  412b80:	stp	x29, x30, [sp, #-48]!
  412b84:	mov	x3, x1
  412b88:	mov	x1, x2
  412b8c:	mov	x29, sp
  412b90:	mov	x2, x3
  412b94:	str	x19, [sp, #16]
  412b98:	mov	x19, x0
  412b9c:	add	x0, sp, #0x20
  412ba0:	bl	412a60 <wcrtomb@plt+0xde40>
  412ba4:	tst	w0, #0xff
  412ba8:	b.eq	412bb4 <wcrtomb@plt+0xdf94>  // b.none
  412bac:	ldp	x0, x1, [sp, #32]
  412bb0:	stp	x0, x1, [x19, #248]
  412bb4:	ldr	x19, [sp, #16]
  412bb8:	ldp	x29, x30, [sp], #48
  412bbc:	ret
  412bc0:	stp	x29, x30, [sp, #-48]!
  412bc4:	mov	x3, x1
  412bc8:	mov	x1, x2
  412bcc:	mov	x29, sp
  412bd0:	mov	x2, x3
  412bd4:	str	x19, [sp, #16]
  412bd8:	mov	x19, x0
  412bdc:	add	x0, sp, #0x20
  412be0:	bl	412a60 <wcrtomb@plt+0xde40>
  412be4:	tst	w0, #0xff
  412be8:	b.eq	412bf4 <wcrtomb@plt+0xdfd4>  // b.none
  412bec:	ldp	x0, x1, [sp, #32]
  412bf0:	stp	x0, x1, [x19, #216]
  412bf4:	ldr	x19, [sp, #16]
  412bf8:	ldp	x29, x30, [sp], #48
  412bfc:	ret
  412c00:	stp	x29, x30, [sp, #-80]!
  412c04:	mov	x29, sp
  412c08:	stp	x19, x20, [sp, #16]
  412c0c:	mov	x19, x1
  412c10:	add	x1, sp, #0x48
  412c14:	str	x23, [sp, #48]
  412c18:	mov	x23, x3
  412c1c:	mov	x3, x2
  412c20:	mov	x20, x2
  412c24:	mov	x2, #0x0                   	// #0
  412c28:	stp	x21, x22, [sp, #32]
  412c2c:	mov	x22, x0
  412c30:	mov	x0, x19
  412c34:	bl	41b1a8 <wcrtomb@plt+0x16588>
  412c38:	mov	x21, x0
  412c3c:	bl	404ad0 <__errno_location@plt>
  412c40:	ldr	w1, [x0]
  412c44:	cmp	w1, #0x16
  412c48:	b.eq	412c7c <wcrtomb@plt+0xe05c>  // b.none
  412c4c:	ldr	x0, [sp, #72]
  412c50:	ldrb	w0, [x0]
  412c54:	cbnz	w0, 412c7c <wcrtomb@plt+0xe05c>
  412c58:	cmp	w1, #0x22
  412c5c:	b.eq	412cdc <wcrtomb@plt+0xe0bc>  // b.none
  412c60:	mov	w0, #0x1                   	// #1
  412c64:	str	x21, [x22]
  412c68:	ldp	x19, x20, [sp, #16]
  412c6c:	ldp	x21, x22, [sp, #32]
  412c70:	ldr	x23, [sp, #48]
  412c74:	ldp	x29, x30, [sp], #80
  412c78:	ret
  412c7c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  412c80:	ldr	x0, [x0, #952]
  412c84:	cbz	x0, 412c8c <wcrtomb@plt+0xe06c>
  412c88:	blr	x0
  412c8c:	mov	w2, #0x5                   	// #5
  412c90:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  412c94:	mov	x0, #0x0                   	// #0
  412c98:	add	x1, x1, #0xe0
  412c9c:	bl	4049c0 <dcgettext@plt>
  412ca0:	mov	x2, x0
  412ca4:	mov	x4, x19
  412ca8:	mov	x3, x23
  412cac:	mov	w1, #0x0                   	// #0
  412cb0:	mov	w0, #0x0                   	// #0
  412cb4:	bl	404050 <error@plt>
  412cb8:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  412cbc:	mov	w2, #0x2                   	// #2
  412cc0:	mov	w0, #0x0                   	// #0
  412cc4:	str	w2, [x1, #3400]
  412cc8:	ldp	x19, x20, [sp, #16]
  412ccc:	ldp	x21, x22, [sp, #32]
  412cd0:	ldr	x23, [sp, #48]
  412cd4:	ldp	x29, x30, [sp], #80
  412cd8:	ret
  412cdc:	mov	x0, x23
  412ce0:	mov	x3, x20
  412ce4:	mov	x1, x19
  412ce8:	mov	x2, #0x0                   	// #0
  412cec:	bl	411f70 <wcrtomb@plt+0xd350>
  412cf0:	mov	w0, #0x0                   	// #0
  412cf4:	b	412c68 <wcrtomb@plt+0xe048>
  412cf8:	stp	x29, x30, [sp, #-48]!
  412cfc:	mov	x3, x1
  412d00:	mov	x1, x2
  412d04:	mov	x29, sp
  412d08:	mov	x2, #0xffffffffffffffff    	// #-1
  412d0c:	str	x19, [sp, #16]
  412d10:	mov	x19, x0
  412d14:	add	x0, sp, #0x28
  412d18:	bl	412c00 <wcrtomb@plt+0xdfe0>
  412d1c:	tst	w0, #0xff
  412d20:	b.eq	412d3c <wcrtomb@plt+0xe11c>  // b.none
  412d24:	ldr	x0, [sp, #40]
  412d28:	str	x0, [x19, #296]
  412d2c:	mov	x1, #0x10                  	// #16
  412d30:	bl	441108 <argp_parse@@Base+0xd220>
  412d34:	str	xzr, [x19, #288]
  412d38:	str	x0, [x19, #304]
  412d3c:	ldr	x19, [sp, #16]
  412d40:	ldp	x29, x30, [sp], #48
  412d44:	ret
  412d48:	stp	x29, x30, [sp, #-48]!
  412d4c:	mov	x3, x1
  412d50:	mov	x1, x2
  412d54:	mov	x29, sp
  412d58:	mov	x2, #0xffffffff            	// #4294967295
  412d5c:	str	x19, [sp, #16]
  412d60:	mov	x19, x0
  412d64:	add	x0, sp, #0x28
  412d68:	bl	412c00 <wcrtomb@plt+0xdfe0>
  412d6c:	tst	w0, #0xff
  412d70:	b.eq	412d7c <wcrtomb@plt+0xe15c>  // b.none
  412d74:	ldr	x0, [sp, #40]
  412d78:	str	w0, [x19, #116]
  412d7c:	ldr	x19, [sp, #16]
  412d80:	ldp	x29, x30, [sp], #48
  412d84:	ret
  412d88:	stp	x29, x30, [sp, #-48]!
  412d8c:	mov	x3, x1
  412d90:	mov	x1, x2
  412d94:	mov	x29, sp
  412d98:	mov	x2, #0xffffffff            	// #4294967295
  412d9c:	str	x19, [sp, #16]
  412da0:	mov	x19, x0
  412da4:	add	x0, sp, #0x28
  412da8:	bl	412c00 <wcrtomb@plt+0xdfe0>
  412dac:	tst	w0, #0xff
  412db0:	b.eq	412dbc <wcrtomb@plt+0xe19c>  // b.none
  412db4:	ldr	x0, [sp, #40]
  412db8:	str	w0, [x19, #112]
  412dbc:	ldr	x19, [sp, #16]
  412dc0:	ldp	x29, x30, [sp], #48
  412dc4:	ret
  412dc8:	stp	x29, x30, [sp, #-48]!
  412dcc:	mov	x3, x1
  412dd0:	mov	x1, x2
  412dd4:	mov	x29, sp
  412dd8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412ddc:	str	x19, [sp, #16]
  412de0:	mov	x19, x0
  412de4:	add	x0, sp, #0x28
  412de8:	bl	412c00 <wcrtomb@plt+0xdfe0>
  412dec:	tst	w0, #0xff
  412df0:	b.eq	412dfc <wcrtomb@plt+0xe1dc>  // b.none
  412df4:	ldr	x0, [sp, #40]
  412df8:	str	x0, [x19, #136]
  412dfc:	ldr	x19, [sp, #16]
  412e00:	ldp	x29, x30, [sp], #48
  412e04:	ret
  412e08:	stp	x29, x30, [sp, #-48]!
  412e0c:	mov	x3, x1
  412e10:	mov	x1, x2
  412e14:	mov	x29, sp
  412e18:	mov	x2, #0xffffffff            	// #4294967295
  412e1c:	str	x19, [sp, #16]
  412e20:	mov	x19, x0
  412e24:	add	x0, sp, #0x28
  412e28:	bl	412c00 <wcrtomb@plt+0xdfe0>
  412e2c:	tst	w0, #0xff
  412e30:	b.eq	412e3c <wcrtomb@plt+0xe21c>  // b.none
  412e34:	ldr	x0, [sp, #40]
  412e38:	str	w0, [x19, #276]
  412e3c:	ldr	x19, [sp, #16]
  412e40:	ldp	x29, x30, [sp], #48
  412e44:	ret
  412e48:	stp	x29, x30, [sp, #-48]!
  412e4c:	mov	x3, x1
  412e50:	mov	x1, x2
  412e54:	mov	x29, sp
  412e58:	mov	x2, #0xffffffff            	// #4294967295
  412e5c:	str	x19, [sp, #16]
  412e60:	mov	x19, x0
  412e64:	add	x0, sp, #0x28
  412e68:	bl	412c00 <wcrtomb@plt+0xdfe0>
  412e6c:	tst	w0, #0xff
  412e70:	b.eq	412e7c <wcrtomb@plt+0xe25c>  // b.none
  412e74:	ldr	x0, [sp, #40]
  412e78:	str	w0, [x19, #280]
  412e7c:	ldr	x19, [sp, #16]
  412e80:	ldp	x29, x30, [sp], #48
  412e84:	ret
  412e88:	stp	x29, x30, [sp, #-48]!
  412e8c:	mov	x3, x1
  412e90:	mov	x1, x2
  412e94:	mov	x29, sp
  412e98:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412e9c:	str	x19, [sp, #16]
  412ea0:	mov	x19, x0
  412ea4:	add	x0, sp, #0x28
  412ea8:	bl	412c00 <wcrtomb@plt+0xdfe0>
  412eac:	tst	w0, #0xff
  412eb0:	b.eq	412ec4 <wcrtomb@plt+0xe2a4>  // b.none
  412eb4:	ldr	x1, [sp, #40]
  412eb8:	mov	w0, #0x1                   	// #1
  412ebc:	str	x1, [x19, #312]
  412ec0:	strb	w0, [x19, #320]
  412ec4:	ldr	x19, [sp, #16]
  412ec8:	ldp	x29, x30, [sp], #48
  412ecc:	ret
  412ed0:	stp	x29, x30, [sp, #-48]!
  412ed4:	mov	x3, x1
  412ed8:	mov	x1, x2
  412edc:	mov	x29, sp
  412ee0:	stp	x19, x20, [sp, #16]
  412ee4:	mov	x20, x2
  412ee8:	mov	x19, x0
  412eec:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412ef0:	add	x0, sp, #0x28
  412ef4:	bl	412c00 <wcrtomb@plt+0xdfe0>
  412ef8:	tst	w0, #0xff
  412efc:	b.eq	412f5c <wcrtomb@plt+0xe33c>  // b.none
  412f00:	ldp	x0, x1, [x19, #288]
  412f04:	ldr	x2, [sp, #40]
  412f08:	cmp	x0, x1
  412f0c:	b.cc	412f68 <wcrtomb@plt+0xe348>  // b.lo, b.ul, b.last
  412f10:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  412f14:	ldr	x0, [x0, #952]
  412f18:	cbz	x0, 412f20 <wcrtomb@plt+0xe300>
  412f1c:	blr	x0
  412f20:	mov	w2, #0x5                   	// #5
  412f24:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  412f28:	mov	x0, #0x0                   	// #0
  412f2c:	add	x1, x1, #0x110
  412f30:	bl	4049c0 <dcgettext@plt>
  412f34:	mov	x2, x0
  412f38:	mov	w1, #0x0                   	// #0
  412f3c:	mov	w0, #0x0                   	// #0
  412f40:	mov	x4, x20
  412f44:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x12e10>
  412f48:	add	x3, x3, #0x2b0
  412f4c:	bl	404050 <error@plt>
  412f50:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  412f54:	mov	w1, #0x2                   	// #2
  412f58:	str	w1, [x0, #3400]
  412f5c:	ldp	x19, x20, [sp, #16]
  412f60:	ldp	x29, x30, [sp], #48
  412f64:	ret
  412f68:	ldr	x1, [x19, #304]
  412f6c:	lsl	x0, x0, #4
  412f70:	ldp	x19, x20, [sp, #16]
  412f74:	str	x2, [x1, x0]
  412f78:	ldp	x29, x30, [sp], #48
  412f7c:	ret
  412f80:	stp	x29, x30, [sp, #-64]!
  412f84:	mov	x3, x1
  412f88:	mov	x29, sp
  412f8c:	stp	x19, x20, [sp, #16]
  412f90:	mov	x20, x1
  412f94:	mov	x19, x0
  412f98:	mov	x1, x2
  412f9c:	add	x0, sp, #0x38
  412fa0:	str	x21, [sp, #32]
  412fa4:	mov	x21, x2
  412fa8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412fac:	bl	412c00 <wcrtomb@plt+0xdfe0>
  412fb0:	tst	w0, #0xff
  412fb4:	b.eq	413010 <wcrtomb@plt+0xe3f0>  // b.none
  412fb8:	ldp	x0, x1, [x19, #288]
  412fbc:	ldr	x2, [sp, #56]
  412fc0:	cmp	x0, x1
  412fc4:	b.cc	413020 <wcrtomb@plt+0xe400>  // b.lo, b.ul, b.last
  412fc8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  412fcc:	ldr	x0, [x0, #952]
  412fd0:	cbz	x0, 412fd8 <wcrtomb@plt+0xe3b8>
  412fd4:	blr	x0
  412fd8:	mov	w2, #0x5                   	// #5
  412fdc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  412fe0:	mov	x0, #0x0                   	// #0
  412fe4:	add	x1, x1, #0x110
  412fe8:	bl	4049c0 <dcgettext@plt>
  412fec:	mov	x2, x0
  412ff0:	mov	w1, #0x0                   	// #0
  412ff4:	mov	w0, #0x0                   	// #0
  412ff8:	mov	x4, x21
  412ffc:	mov	x3, x20
  413000:	bl	404050 <error@plt>
  413004:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  413008:	mov	w1, #0x2                   	// #2
  41300c:	str	w1, [x0, #3400]
  413010:	ldp	x19, x20, [sp, #16]
  413014:	ldr	x21, [sp, #32]
  413018:	ldp	x29, x30, [sp], #64
  41301c:	ret
  413020:	ldr	x1, [x19, #304]
  413024:	add	x3, x0, #0x1
  413028:	str	x3, [x19, #288]
  41302c:	ldp	x19, x20, [sp, #16]
  413030:	add	x0, x1, x0, lsl #4
  413034:	ldr	x21, [sp, #32]
  413038:	str	x2, [x0, #8]
  41303c:	ldp	x29, x30, [sp], #64
  413040:	ret
  413044:	nop
  413048:	stp	x29, x30, [sp, #-32]!
  41304c:	mov	x3, x1
  413050:	mov	x1, x2
  413054:	mov	x29, sp
  413058:	add	x0, sp, #0x18
  41305c:	mov	x2, #0xffffffffffffffff    	// #-1
  413060:	bl	412c00 <wcrtomb@plt+0xdfe0>
  413064:	tst	w0, #0xff
  413068:	b.eq	413078 <wcrtomb@plt+0xe458>  // b.none
  41306c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  413070:	ldr	x1, [sp, #24]
  413074:	str	x1, [x0, #3944]
  413078:	ldp	x29, x30, [sp], #32
  41307c:	ret
  413080:	stp	x29, x30, [sp, #-32]!
  413084:	mov	x3, x1
  413088:	mov	x1, x2
  41308c:	mov	x29, sp
  413090:	add	x0, sp, #0x18
  413094:	mov	x2, #0xffffffffffffffff    	// #-1
  413098:	bl	412c00 <wcrtomb@plt+0xdfe0>
  41309c:	tst	w0, #0xff
  4130a0:	b.eq	4130b0 <wcrtomb@plt+0xe490>  // b.none
  4130a4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4130a8:	ldr	x1, [sp, #24]
  4130ac:	str	x1, [x0, #3960]
  4130b0:	ldp	x29, x30, [sp], #32
  4130b4:	ret
  4130b8:	stp	x29, x30, [sp, #-80]!
  4130bc:	mov	x29, sp
  4130c0:	stp	x19, x20, [sp, #16]
  4130c4:	mov	x19, x3
  4130c8:	add	x3, sp, #0x38
  4130cc:	mov	x20, x1
  4130d0:	mov	x1, #0x0                   	// #0
  4130d4:	str	x21, [sp, #32]
  4130d8:	bl	41b190 <wcrtomb@plt+0x16570>
  4130dc:	mov	x21, x0
  4130e0:	bl	403ff0 <strlen@plt>
  4130e4:	mov	x2, x21
  4130e8:	mov	x3, x0
  4130ec:	mov	x1, x20
  4130f0:	mov	x0, x19
  4130f4:	bl	412640 <wcrtomb@plt+0xda20>
  4130f8:	ldp	x19, x20, [sp, #16]
  4130fc:	ldr	x21, [sp, #32]
  413100:	ldp	x29, x30, [sp], #80
  413104:	ret
  413108:	ldr	w0, [x0, #116]
  41310c:	mov	x3, x2
  413110:	mov	x2, #0xffffffff            	// #4294967295
  413114:	b	4130b8 <wcrtomb@plt+0xe498>
  413118:	ldr	w0, [x0, #112]
  41311c:	mov	x3, x2
  413120:	mov	x2, #0xffffffff            	// #4294967295
  413124:	b	4130b8 <wcrtomb@plt+0xe498>
  413128:	ldr	x0, [x0, #136]
  41312c:	mov	x3, x2
  413130:	mov	x2, #0xffffffffffffffff    	// #-1
  413134:	b	4130b8 <wcrtomb@plt+0xe498>
  413138:	b	413128 <wcrtomb@plt+0xe508>
  41313c:	nop
  413140:	ldr	w0, [x0, #276]
  413144:	mov	x3, x2
  413148:	mov	x2, #0xffffffffffffffff    	// #-1
  41314c:	b	4130b8 <wcrtomb@plt+0xe498>
  413150:	ldr	w0, [x0, #280]
  413154:	mov	x3, x2
  413158:	mov	x2, #0xffffffffffffffff    	// #-1
  41315c:	b	4130b8 <wcrtomb@plt+0xe498>
  413160:	ldr	x0, [x0, #288]
  413164:	mov	x3, x2
  413168:	mov	x2, #0xffffffffffffffff    	// #-1
  41316c:	b	4130b8 <wcrtomb@plt+0xe498>
  413170:	mov	x4, x3
  413174:	mov	x3, x2
  413178:	ldr	x0, [x0, #304]
  41317c:	mov	x2, #0xffffffffffffffff    	// #-1
  413180:	ldr	x4, [x4]
  413184:	lsl	x4, x4, #4
  413188:	ldr	x0, [x0, x4]
  41318c:	b	4130b8 <wcrtomb@plt+0xe498>
  413190:	mov	x4, x3
  413194:	mov	x3, x2
  413198:	ldr	x0, [x0, #304]
  41319c:	mov	x2, #0xffffffffffffffff    	// #-1
  4131a0:	ldr	x4, [x4]
  4131a4:	add	x4, x0, x4, lsl #4
  4131a8:	ldr	x0, [x4, #8]
  4131ac:	b	4130b8 <wcrtomb@plt+0xe498>
  4131b0:	mov	x0, x3
  4131b4:	mov	x3, x2
  4131b8:	mov	x2, #0xffffffffffffffff    	// #-1
  4131bc:	ldr	x0, [x0]
  4131c0:	b	4130b8 <wcrtomb@plt+0xe498>
  4131c4:	nop
  4131c8:	b	4131b0 <wcrtomb@plt+0xe590>
  4131cc:	nop
  4131d0:	stp	x29, x30, [sp, #-32]!
  4131d4:	mov	w3, #0x1                   	// #1
  4131d8:	mov	x1, x2
  4131dc:	mov	x29, sp
  4131e0:	stp	x19, x20, [sp, #16]
  4131e4:	mov	x19, x0
  4131e8:	mov	x20, x2
  4131ec:	strb	w3, [x0, #321]
  4131f0:	bl	411c40 <wcrtomb@plt+0xd020>
  4131f4:	mov	x1, x20
  4131f8:	add	x0, x19, #0x8
  4131fc:	bl	411c40 <wcrtomb@plt+0xd020>
  413200:	ldr	x0, [x19, #8]
  413204:	bl	4355f8 <argp_parse@@Base+0x1710>
  413208:	strb	w0, [x19, #16]
  41320c:	ldp	x19, x20, [sp, #16]
  413210:	ldp	x29, x30, [sp], #32
  413214:	ret
  413218:	stp	x29, x30, [sp, #-32]!
  41321c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  413220:	mov	x29, sp
  413224:	stp	x19, x20, [sp, #16]
  413228:	ldr	x19, [x1, #2080]
  41322c:	cbz	x19, 413264 <wcrtomb@plt+0xe644>
  413230:	mov	x20, x0
  413234:	b	413240 <wcrtomb@plt+0xe620>
  413238:	ldr	x19, [x19]
  41323c:	cbz	x19, 413264 <wcrtomb@plt+0xe644>
  413240:	ldr	x0, [x19, #8]
  413244:	mov	x1, x20
  413248:	mov	w2, #0x0                   	// #0
  41324c:	bl	4048c0 <fnmatch@plt>
  413250:	cbnz	w0, 413238 <wcrtomb@plt+0xe618>
  413254:	mov	w0, #0x1                   	// #1
  413258:	ldp	x19, x20, [sp, #16]
  41325c:	ldp	x29, x30, [sp], #32
  413260:	ret
  413264:	mov	w0, #0x0                   	// #0
  413268:	ldp	x19, x20, [sp, #16]
  41326c:	ldp	x29, x30, [sp], #32
  413270:	ret
  413274:	nop
  413278:	stp	x29, x30, [sp, #-48]!
  41327c:	mov	x29, sp
  413280:	stp	x19, x20, [sp, #16]
  413284:	mov	x19, x1
  413288:	mov	x20, x2
  41328c:	stp	x21, x22, [sp, #32]
  413290:	mov	x22, x0
  413294:	mov	x21, x3
  413298:	mov	x0, x1
  41329c:	bl	413218 <wcrtomb@plt+0xe5f8>
  4132a0:	tst	w0, #0xff
  4132a4:	b.eq	4132b8 <wcrtomb@plt+0xe698>  // b.none
  4132a8:	ldp	x19, x20, [sp, #16]
  4132ac:	ldp	x21, x22, [sp, #32]
  4132b0:	ldp	x29, x30, [sp], #48
  4132b4:	ret
  4132b8:	mov	x0, x19
  4132bc:	bl	411a90 <wcrtomb@plt+0xce70>
  4132c0:	tst	w0, #0xff
  4132c4:	b.ne	4132a8 <wcrtomb@plt+0xe688>  // b.any
  4132c8:	mov	x0, x19
  4132cc:	bl	411df8 <wcrtomb@plt+0xd1d8>
  4132d0:	cbz	x0, 4132fc <wcrtomb@plt+0xe6dc>
  4132d4:	mov	x3, x21
  4132d8:	mov	x2, x20
  4132dc:	mov	x1, x19
  4132e0:	ldr	x4, [x0, #16]
  4132e4:	mov	x0, x22
  4132e8:	ldp	x19, x20, [sp, #16]
  4132ec:	mov	x16, x4
  4132f0:	ldp	x21, x22, [sp, #32]
  4132f4:	ldp	x29, x30, [sp], #48
  4132f8:	br	x16
  4132fc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  413300:	ldr	w0, [x0, #408]
  413304:	tbz	w0, #17, 4132a8 <wcrtomb@plt+0xe688>
  413308:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41330c:	ldr	x0, [x0, #952]
  413310:	cbz	x0, 413318 <wcrtomb@plt+0xe6f8>
  413314:	blr	x0
  413318:	mov	w2, #0x5                   	// #5
  41331c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413320:	mov	x0, #0x0                   	// #0
  413324:	add	x1, x1, #0x2c8
  413328:	bl	4049c0 <dcgettext@plt>
  41332c:	mov	x2, x0
  413330:	mov	x3, x19
  413334:	mov	w1, #0x0                   	// #0
  413338:	ldp	x19, x20, [sp, #16]
  41333c:	mov	w0, #0x0                   	// #0
  413340:	ldp	x21, x22, [sp, #32]
  413344:	ldp	x29, x30, [sp], #48
  413348:	b	404050 <error@plt>
  41334c:	nop
  413350:	stp	x29, x30, [sp, #-80]!
  413354:	mov	x29, sp
  413358:	stp	x23, x24, [sp, #48]
  41335c:	adrp	x23, 454000 <_obstack_memory_used@@Base+0x11e10>
  413360:	add	x23, x23, #0x5f8
  413364:	mov	x1, x23
  413368:	bl	403fc0 <strtok@plt>
  41336c:	cbz	x0, 4134c0 <wcrtomb@plt+0xe8a0>
  413370:	stp	x21, x22, [sp, #32]
  413374:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  413378:	add	x22, x22, #0x808
  41337c:	adrp	x24, 455000 <_obstack_memory_used@@Base+0x12e10>
  413380:	add	x24, x24, #0x348
  413384:	stp	x19, x20, [sp, #16]
  413388:	mov	x19, x0
  41338c:	stp	x25, x26, [sp, #64]
  413390:	add	x25, x22, #0x50
  413394:	nop
  413398:	mov	x0, x19
  41339c:	mov	w1, #0x3d                  	// #61
  4133a0:	bl	404870 <strchr@plt>
  4133a4:	mov	x20, x0
  4133a8:	cbz	x0, 413640 <wcrtomb@plt+0xea20>
  4133ac:	cmp	x0, x19
  4133b0:	b.eq	413604 <wcrtomb@plt+0xe9e4>  // b.none
  4133b4:	ldurb	w0, [x0, #-1]
  4133b8:	mov	x21, x20
  4133bc:	mov	w26, #0x1                   	// #1
  4133c0:	cmp	w0, #0x3a
  4133c4:	b.ne	4133d0 <wcrtomb@plt+0xe7b0>  // b.any
  4133c8:	sub	x21, x20, #0x1
  4133cc:	mov	w26, #0x0                   	// #0
  4133d0:	cmp	x19, x21
  4133d4:	b.cs	4133fc <wcrtomb@plt+0xe7dc>  // b.hs, b.nlast
  4133d8:	bl	404740 <__ctype_b_loc@plt>
  4133dc:	ldr	x1, [x0]
  4133e0:	b	4133f0 <wcrtomb@plt+0xe7d0>
  4133e4:	sub	x21, x21, #0x1
  4133e8:	cmp	x19, x21
  4133ec:	b.eq	4134cc <wcrtomb@plt+0xe8ac>  // b.none
  4133f0:	ldrb	w0, [x21]
  4133f4:	ldrh	w0, [x1, x0, lsl #1]
  4133f8:	tbnz	w0, #13, 4133e4 <wcrtomb@plt+0xe7c4>
  4133fc:	strb	wzr, [x21]
  413400:	add	x21, x20, #0x1
  413404:	ldrb	w20, [x20, #1]
  413408:	cbz	w20, 41342c <wcrtomb@plt+0xe80c>
  41340c:	bl	404740 <__ctype_b_loc@plt>
  413410:	ldr	x1, [x0]
  413414:	b	413420 <wcrtomb@plt+0xe800>
  413418:	ldrb	w20, [x21, #1]!
  41341c:	cbz	w20, 41342c <wcrtomb@plt+0xe80c>
  413420:	ubfiz	x20, x20, #1, #8
  413424:	ldrh	w0, [x1, x20]
  413428:	tbnz	w0, #13, 413418 <wcrtomb@plt+0xe7f8>
  41342c:	mov	x1, x24
  413430:	mov	x0, x19
  413434:	bl	404710 <strcmp@plt>
  413438:	cbz	w0, 4134d4 <wcrtomb@plt+0xe8b4>
  41343c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413440:	mov	x0, x19
  413444:	add	x1, x1, #0x370
  413448:	bl	404710 <strcmp@plt>
  41344c:	cbz	w0, 413570 <wcrtomb@plt+0xe950>
  413450:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413454:	mov	x0, x19
  413458:	add	x1, x1, #0x380
  41345c:	bl	404710 <strcmp@plt>
  413460:	cbz	w0, 413580 <wcrtomb@plt+0xe960>
  413464:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413468:	mov	x0, x19
  41346c:	add	x1, x1, #0x390
  413470:	bl	404710 <strcmp@plt>
  413474:	cbz	w0, 4135dc <wcrtomb@plt+0xe9bc>
  413478:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  41347c:	mov	x0, x19
  413480:	add	x1, x1, #0x3a0
  413484:	bl	404710 <strcmp@plt>
  413488:	cbnz	w0, 413590 <wcrtomb@plt+0xe970>
  41348c:	mov	x2, x21
  413490:	add	x1, x22, #0x40
  413494:	add	x0, x22, #0x48
  413498:	bl	411ae8 <wcrtomb@plt+0xcec8>
  41349c:	nop
  4134a0:	mov	x1, x23
  4134a4:	mov	x0, #0x0                   	// #0
  4134a8:	bl	403fc0 <strtok@plt>
  4134ac:	mov	x19, x0
  4134b0:	cbnz	x0, 413398 <wcrtomb@plt+0xe778>
  4134b4:	ldp	x19, x20, [sp, #16]
  4134b8:	ldp	x21, x22, [sp, #32]
  4134bc:	ldp	x25, x26, [sp, #64]
  4134c0:	ldp	x23, x24, [sp, #48]
  4134c4:	ldp	x29, x30, [sp], #80
  4134c8:	ret
  4134cc:	mov	x21, x19
  4134d0:	b	4133fc <wcrtomb@plt+0xe7dc>
  4134d4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4134d8:	adrp	x19, 455000 <_obstack_memory_used@@Base+0x12e10>
  4134dc:	add	x1, x1, #0xb40
  4134e0:	add	x19, x19, #0x520
  4134e4:	b	4134f0 <wcrtomb@plt+0xe8d0>
  4134e8:	ldr	x1, [x19, #32]!
  4134ec:	cbz	x1, 41355c <wcrtomb@plt+0xe93c>
  4134f0:	ldrb	w0, [x19, #28]
  4134f4:	cbnz	w0, 4134e8 <wcrtomb@plt+0xe8c8>
  4134f8:	ldr	w0, [x19, #24]
  4134fc:	tbz	w0, #0, 4134e8 <wcrtomb@plt+0xe8c8>
  413500:	mov	x0, x21
  413504:	mov	w2, #0x0                   	// #0
  413508:	bl	4048c0 <fnmatch@plt>
  41350c:	cbnz	w0, 4134e8 <wcrtomb@plt+0xe8c8>
  413510:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  413514:	ldr	x0, [x0, #952]
  413518:	cbz	x0, 413520 <wcrtomb@plt+0xe900>
  41351c:	blr	x0
  413520:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413524:	add	x1, x1, #0x350
  413528:	mov	w2, #0x5                   	// #5
  41352c:	mov	x0, #0x0                   	// #0
  413530:	bl	4049c0 <dcgettext@plt>
  413534:	mov	x19, x0
  413538:	mov	x0, x21
  41353c:	bl	440248 <argp_parse@@Base+0xc360>
  413540:	mov	x2, x19
  413544:	mov	x3, x0
  413548:	mov	w1, #0x0                   	// #0
  41354c:	mov	w0, #0x0                   	// #0
  413550:	bl	404050 <error@plt>
  413554:	mov	w0, #0x2                   	// #2
  413558:	bl	423220 <wcrtomb@plt+0x1e600>
  41355c:	mov	x1, x21
  413560:	add	x0, x22, #0x18
  413564:	mov	x2, #0x0                   	// #0
  413568:	bl	411b98 <wcrtomb@plt+0xcf78>
  41356c:	b	4134a0 <wcrtomb@plt+0xe880>
  413570:	mov	x1, x21
  413574:	add	x0, x22, #0x20
  413578:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  41357c:	b	4134a0 <wcrtomb@plt+0xe880>
  413580:	mov	x1, x21
  413584:	add	x0, x22, #0x28
  413588:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  41358c:	b	4134a0 <wcrtomb@plt+0xe880>
  413590:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  413594:	adrp	x20, 455000 <_obstack_memory_used@@Base+0x12e10>
  413598:	add	x0, x0, #0xb40
  41359c:	add	x20, x20, #0x520
  4135a0:	ldrb	w1, [x20, #28]
  4135a4:	cbnz	w1, 4135bc <wcrtomb@plt+0xe99c>
  4135a8:	ldr	w1, [x20, #24]
  4135ac:	tbz	w1, #0, 4135bc <wcrtomb@plt+0xe99c>
  4135b0:	mov	x1, x19
  4135b4:	bl	404710 <strcmp@plt>
  4135b8:	cbz	w0, 413670 <wcrtomb@plt+0xea50>
  4135bc:	ldr	x0, [x20, #32]!
  4135c0:	cbnz	x0, 4135a0 <wcrtomb@plt+0xe980>
  4135c4:	cbz	w26, 4135f0 <wcrtomb@plt+0xe9d0>
  4135c8:	mov	x2, x21
  4135cc:	mov	x1, x19
  4135d0:	mov	x0, x25
  4135d4:	bl	411b98 <wcrtomb@plt+0xcf78>
  4135d8:	b	4134a0 <wcrtomb@plt+0xe880>
  4135dc:	mov	x2, x21
  4135e0:	add	x1, x22, #0x30
  4135e4:	add	x0, x22, #0x38
  4135e8:	bl	411ae8 <wcrtomb@plt+0xcec8>
  4135ec:	b	4134a0 <wcrtomb@plt+0xe880>
  4135f0:	mov	x2, x21
  4135f4:	mov	x1, x19
  4135f8:	mov	x0, x22
  4135fc:	bl	411b98 <wcrtomb@plt+0xcf78>
  413600:	b	4134a0 <wcrtomb@plt+0xe880>
  413604:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  413608:	ldr	x0, [x0, #952]
  41360c:	cbz	x0, 413614 <wcrtomb@plt+0xe9f4>
  413610:	blr	x0
  413614:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413618:	add	x1, x1, #0x328
  41361c:	mov	w2, #0x5                   	// #5
  413620:	mov	x0, #0x0                   	// #0
  413624:	bl	4049c0 <dcgettext@plt>
  413628:	mov	x20, x0
  41362c:	mov	x0, x19
  413630:	bl	440248 <argp_parse@@Base+0xc360>
  413634:	mov	x2, x20
  413638:	mov	x3, x0
  41363c:	b	413548 <wcrtomb@plt+0xe928>
  413640:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  413644:	ldr	x0, [x0, #952]
  413648:	cbz	x0, 413650 <wcrtomb@plt+0xea30>
  41364c:	blr	x0
  413650:	mov	w2, #0x5                   	// #5
  413654:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413658:	mov	x0, #0x0                   	// #0
  41365c:	add	x1, x1, #0x2f8
  413660:	bl	4049c0 <dcgettext@plt>
  413664:	mov	x2, x0
  413668:	mov	x3, x19
  41366c:	b	413548 <wcrtomb@plt+0xe928>
  413670:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  413674:	ldr	x0, [x0, #952]
  413678:	cbz	x0, 413680 <wcrtomb@plt+0xea60>
  41367c:	blr	x0
  413680:	mov	w2, #0x5                   	// #5
  413684:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413688:	mov	x0, #0x0                   	// #0
  41368c:	add	x1, x1, #0x3b8
  413690:	bl	4049c0 <dcgettext@plt>
  413694:	mov	x2, x0
  413698:	mov	x3, x19
  41369c:	b	413548 <wcrtomb@plt+0xe928>
  4136a0:	stp	x29, x30, [sp, #-176]!
  4136a4:	mov	x29, sp
  4136a8:	stp	x19, x20, [sp, #16]
  4136ac:	stp	x21, x22, [sp, #32]
  4136b0:	stp	x23, x24, [sp, #48]
  4136b4:	stp	x25, x26, [sp, #64]
  4136b8:	stp	x27, x28, [sp, #80]
  4136bc:	mov	x28, x1
  4136c0:	ldrb	w3, [x1]
  4136c4:	str	x2, [sp, #104]
  4136c8:	cbz	w3, 4139d0 <wcrtomb@plt+0xedb0>
  4136cc:	mov	x26, x0
  4136d0:	mov	x25, x1
  4136d4:	add	x0, sp, #0xac
  4136d8:	mov	x22, #0x0                   	// #0
  4136dc:	mov	x21, #0x0                   	// #0
  4136e0:	mov	x24, #0x0                   	// #0
  4136e4:	mov	x23, #0x0                   	// #0
  4136e8:	mov	x20, #0x0                   	// #0
  4136ec:	mov	x27, #0x0                   	// #0
  4136f0:	str	x0, [sp, #112]
  4136f4:	add	x0, sp, #0x94
  4136f8:	str	x0, [sp, #120]
  4136fc:	nop
  413700:	mov	x1, x25
  413704:	cmp	w3, #0x25
  413708:	ldrb	w3, [x1, #1]!
  41370c:	b.eq	41381c <wcrtomb@plt+0xebfc>  // b.none
  413710:	add	x27, x27, #0x1
  413714:	mov	x25, x1
  413718:	cbnz	w3, 413700 <wcrtomb@plt+0xeae0>
  41371c:	add	x0, x27, #0x1
  413720:	bl	440f48 <argp_parse@@Base+0xd060>
  413724:	ldrb	w1, [x28]
  413728:	mov	x25, x0
  41372c:	cbz	w1, 4139f8 <wcrtomb@plt+0xedd8>
  413730:	mov	x19, x0
  413734:	nop
  413738:	ldrb	w2, [x28, #1]
  41373c:	cmp	w1, #0x25
  413740:	b.eq	4137ac <wcrtomb@plt+0xeb8c>  // b.none
  413744:	mov	x0, x19
  413748:	add	x28, x28, #0x1
  41374c:	strb	w1, [x0], #1
  413750:	mov	w1, w2
  413754:	mov	x19, x0
  413758:	cbnz	w1, 413738 <wcrtomb@plt+0xeb18>
  41375c:	mov	x0, x20
  413760:	bl	4047b0 <free@plt>
  413764:	cmp	x25, x19
  413768:	b.cc	41377c <wcrtomb@plt+0xeb5c>  // b.lo, b.ul, b.last
  41376c:	b	413788 <wcrtomb@plt+0xeb68>
  413770:	sub	x19, x19, #0x1
  413774:	cmp	x25, x19
  413778:	b.eq	4138b8 <wcrtomb@plt+0xec98>  // b.none
  41377c:	ldurb	w1, [x19, #-1]
  413780:	cmp	w1, #0x2f
  413784:	b.eq	413770 <wcrtomb@plt+0xeb50>  // b.none
  413788:	strb	wzr, [x19]
  41378c:	mov	x0, x25
  413790:	ldp	x19, x20, [sp, #16]
  413794:	ldp	x21, x22, [sp, #32]
  413798:	ldp	x23, x24, [sp, #48]
  41379c:	ldp	x25, x26, [sp, #64]
  4137a0:	ldp	x27, x28, [sp, #80]
  4137a4:	ldp	x29, x30, [sp], #176
  4137a8:	ret
  4137ac:	cmp	w2, #0x66
  4137b0:	b.eq	413904 <wcrtomb@plt+0xece4>  // b.none
  4137b4:	b.hi	4137ec <wcrtomb@plt+0xebcc>  // b.pmore
  4137b8:	cmp	w2, #0x25
  4137bc:	b.eq	4138c0 <wcrtomb@plt+0xeca0>  // b.none
  4137c0:	cmp	w2, #0x64
  4137c4:	b.ne	4138f4 <wcrtomb@plt+0xecd4>  // b.any
  4137c8:	cbz	x23, 4137dc <wcrtomb@plt+0xebbc>
  4137cc:	mov	x0, x19
  4137d0:	mov	x1, x23
  4137d4:	bl	404220 <stpcpy@plt>
  4137d8:	mov	x19, x0
  4137dc:	ldrb	w1, [x28, #2]
  4137e0:	add	x28, x28, #0x2
  4137e4:	cbnz	w1, 413738 <wcrtomb@plt+0xeb18>
  4137e8:	b	41375c <wcrtomb@plt+0xeb3c>
  4137ec:	cmp	w2, #0x6e
  4137f0:	b.eq	4138d4 <wcrtomb@plt+0xecb4>  // b.none
  4137f4:	cmp	w2, #0x70
  4137f8:	b.ne	4139a0 <wcrtomb@plt+0xed80>  // b.any
  4137fc:	mov	x0, x19
  413800:	mov	x1, x21
  413804:	bl	404220 <stpcpy@plt>
  413808:	add	x28, x28, #0x2
  41380c:	ldrb	w1, [x28]
  413810:	mov	x19, x0
  413814:	cbnz	w1, 413738 <wcrtomb@plt+0xeb18>
  413818:	b	41375c <wcrtomb@plt+0xeb3c>
  41381c:	cbz	w3, 413710 <wcrtomb@plt+0xeaf0>
  413820:	cmp	w3, #0x66
  413824:	add	x19, x25, #0x2
  413828:	b.eq	413964 <wcrtomb@plt+0xed44>  // b.none
  41382c:	b.hi	413878 <wcrtomb@plt+0xec58>  // b.pmore
  413830:	cmp	w3, #0x25
  413834:	b.eq	41398c <wcrtomb@plt+0xed6c>  // b.none
  413838:	cmp	w3, #0x64
  41383c:	b.ne	413950 <wcrtomb@plt+0xed30>  // b.any
  413840:	cbz	x26, 4139c0 <wcrtomb@plt+0xeda0>
  413844:	cbz	x20, 413a08 <wcrtomb@plt+0xede8>
  413848:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41384c:	mov	w1, #0x0                   	// #0
  413850:	ldrb	w2, [x0, #896]
  413854:	mov	x0, x20
  413858:	bl	42a438 <wcrtomb@plt+0x25818>
  41385c:	mov	x23, x0
  413860:	bl	403ff0 <strlen@plt>
  413864:	add	x27, x27, x0
  413868:	ldrb	w3, [x25, #2]
  41386c:	mov	x25, x19
  413870:	cbnz	w3, 413700 <wcrtomb@plt+0xeae0>
  413874:	b	41371c <wcrtomb@plt+0xeafc>
  413878:	cmp	w3, #0x6e
  41387c:	b.eq	413924 <wcrtomb@plt+0xed04>  // b.none
  413880:	cmp	w3, #0x70
  413884:	b.ne	413950 <wcrtomb@plt+0xed30>  // b.any
  413888:	bl	4042c0 <getpid@plt>
  41388c:	sxtw	x0, w0
  413890:	add	x1, sp, #0x80
  413894:	bl	4398d8 <argp_parse@@Base+0x59f0>
  413898:	ldrb	w3, [x25, #2]
  41389c:	mov	x21, x0
  4138a0:	ldr	x0, [sp, #120]
  4138a4:	mov	x25, x19
  4138a8:	sub	x0, x0, x21
  4138ac:	add	x27, x27, x0
  4138b0:	cbnz	w3, 413700 <wcrtomb@plt+0xeae0>
  4138b4:	b	41371c <wcrtomb@plt+0xeafc>
  4138b8:	mov	x19, x25
  4138bc:	b	413788 <wcrtomb@plt+0xeb68>
  4138c0:	strb	w1, [x19], #1
  4138c4:	add	x28, x28, #0x2
  4138c8:	ldrb	w1, [x28]
  4138cc:	cbnz	w1, 413738 <wcrtomb@plt+0xeb18>
  4138d0:	b	41375c <wcrtomb@plt+0xeb3c>
  4138d4:	mov	x0, x19
  4138d8:	mov	x1, x22
  4138dc:	bl	404220 <stpcpy@plt>
  4138e0:	add	x28, x28, #0x2
  4138e4:	ldrb	w1, [x28]
  4138e8:	mov	x19, x0
  4138ec:	cbnz	w1, 413738 <wcrtomb@plt+0xeb18>
  4138f0:	b	41375c <wcrtomb@plt+0xeb3c>
  4138f4:	strb	w1, [x19]
  4138f8:	cbnz	w2, 4139a8 <wcrtomb@plt+0xed88>
  4138fc:	add	x19, x19, #0x1
  413900:	b	41375c <wcrtomb@plt+0xeb3c>
  413904:	cbz	x24, 4137dc <wcrtomb@plt+0xebbc>
  413908:	mov	x0, x19
  41390c:	mov	x1, x24
  413910:	bl	404220 <stpcpy@plt>
  413914:	add	x28, x28, #0x2
  413918:	ldrb	w1, [x28]
  41391c:	mov	x19, x0
  413920:	b	4137e4 <wcrtomb@plt+0xebc4>
  413924:	ldr	x0, [sp, #104]
  413928:	add	x1, sp, #0x98
  41392c:	bl	4398d8 <argp_parse@@Base+0x59f0>
  413930:	mov	x22, x0
  413934:	ldrb	w3, [x25, #2]
  413938:	mov	x25, x19
  41393c:	ldr	x0, [sp, #112]
  413940:	sub	x0, x0, x22
  413944:	add	x27, x27, x0
  413948:	cbnz	w3, 413700 <wcrtomb@plt+0xeae0>
  41394c:	b	41371c <wcrtomb@plt+0xeafc>
  413950:	ldrb	w3, [x25, #2]
  413954:	add	x27, x27, #0x2
  413958:	mov	x25, x19
  41395c:	cbnz	w3, 413700 <wcrtomb@plt+0xeae0>
  413960:	b	41371c <wcrtomb@plt+0xeafc>
  413964:	cbz	x26, 4139c0 <wcrtomb@plt+0xeda0>
  413968:	ldr	x0, [x26]
  41396c:	bl	435560 <argp_parse@@Base+0x1678>
  413970:	mov	x24, x0
  413974:	bl	403ff0 <strlen@plt>
  413978:	add	x27, x27, x0
  41397c:	ldrb	w3, [x25, #2]
  413980:	mov	x25, x19
  413984:	cbnz	w3, 413700 <wcrtomb@plt+0xeae0>
  413988:	b	41371c <wcrtomb@plt+0xeafc>
  41398c:	ldrb	w3, [x25, #2]
  413990:	add	x27, x27, #0x1
  413994:	mov	x25, x19
  413998:	cbnz	w3, 413700 <wcrtomb@plt+0xeae0>
  41399c:	b	41371c <wcrtomb@plt+0xeafc>
  4139a0:	strb	w1, [x19]
  4139a4:	nop
  4139a8:	ldrb	w1, [x28, #2]
  4139ac:	add	x19, x19, #0x2
  4139b0:	sturb	w2, [x19, #-1]
  4139b4:	add	x28, x28, #0x2
  4139b8:	cbnz	w1, 413738 <wcrtomb@plt+0xeb18>
  4139bc:	b	41375c <wcrtomb@plt+0xeb3c>
  4139c0:	ldrb	w3, [x25, #2]
  4139c4:	mov	x25, x19
  4139c8:	cbnz	w3, 413700 <wcrtomb@plt+0xeae0>
  4139cc:	b	41371c <wcrtomb@plt+0xeafc>
  4139d0:	mov	x0, #0x1                   	// #1
  4139d4:	bl	440f48 <argp_parse@@Base+0xd060>
  4139d8:	ldrb	w1, [x28]
  4139dc:	mov	x25, x0
  4139e0:	mov	x22, #0x0                   	// #0
  4139e4:	mov	x21, #0x0                   	// #0
  4139e8:	mov	x24, #0x0                   	// #0
  4139ec:	mov	x23, #0x0                   	// #0
  4139f0:	mov	x20, #0x0                   	// #0
  4139f4:	cbnz	w1, 413730 <wcrtomb@plt+0xeb10>
  4139f8:	mov	x0, x20
  4139fc:	mov	x19, x25
  413a00:	bl	4047b0 <free@plt>
  413a04:	b	413788 <wcrtomb@plt+0xeb68>
  413a08:	ldr	x0, [x26]
  413a0c:	bl	435420 <argp_parse@@Base+0x1538>
  413a10:	mov	x20, x0
  413a14:	b	413848 <wcrtomb@plt+0xec28>
  413a18:	stp	x29, x30, [sp, #-32]!
  413a1c:	mov	x29, sp
  413a20:	stp	x19, x20, [sp, #16]
  413a24:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  413a28:	add	x19, x19, #0x808
  413a2c:	mov	x20, x0
  413a30:	ldr	x1, [x19, #32]
  413a34:	cbz	x1, 413a4c <wcrtomb@plt+0xee2c>
  413a38:	mov	x0, x20
  413a3c:	mov	x2, #0x0                   	// #0
  413a40:	ldp	x19, x20, [sp, #16]
  413a44:	ldp	x29, x30, [sp], #32
  413a48:	b	4136a0 <wcrtomb@plt+0xea80>
  413a4c:	add	x0, x19, #0x20
  413a50:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413a54:	add	x1, x1, #0x3d8
  413a58:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  413a5c:	mov	x0, x20
  413a60:	mov	x2, #0x0                   	// #0
  413a64:	ldr	x1, [x19, #32]
  413a68:	ldp	x19, x20, [sp, #16]
  413a6c:	ldp	x29, x30, [sp], #32
  413a70:	b	4136a0 <wcrtomb@plt+0xea80>
  413a74:	nop
  413a78:	stp	x29, x30, [sp, #-32]!
  413a7c:	mov	x29, sp
  413a80:	stp	x19, x20, [sp, #16]
  413a84:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  413a88:	add	x19, x19, #0x808
  413a8c:	ldr	x20, [x19, #40]
  413a90:	cbz	x20, 413ab0 <wcrtomb@plt+0xee90>
  413a94:	mov	x1, x20
  413a98:	mov	x0, #0x0                   	// #0
  413a9c:	ldr	x2, [x19, #88]
  413aa0:	ldp	x19, x20, [sp, #16]
  413aa4:	add	x2, x2, #0x1
  413aa8:	ldp	x29, x30, [sp], #32
  413aac:	b	4136a0 <wcrtomb@plt+0xea80>
  413ab0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  413ab4:	add	x0, x0, #0x3f8
  413ab8:	bl	404af0 <getenv@plt>
  413abc:	mov	x20, x0
  413ac0:	cbz	x0, 413b14 <wcrtomb@plt+0xeef4>
  413ac4:	bl	403ff0 <strlen@plt>
  413ac8:	add	x0, x0, #0x12
  413acc:	bl	440f48 <argp_parse@@Base+0xd060>
  413ad0:	str	x0, [x19, #40]
  413ad4:	mov	x1, x20
  413ad8:	mov	x20, x0
  413adc:	bl	404220 <stpcpy@plt>
  413ae0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413ae4:	add	x1, x1, #0x400
  413ae8:	ldp	x2, x3, [x1]
  413aec:	stp	x2, x3, [x0]
  413af0:	ldrh	w1, [x1, #16]
  413af4:	strh	w1, [x0, #16]
  413af8:	mov	x1, x20
  413afc:	ldr	x2, [x19, #88]
  413b00:	mov	x0, #0x0                   	// #0
  413b04:	ldp	x19, x20, [sp, #16]
  413b08:	add	x2, x2, #0x1
  413b0c:	ldp	x29, x30, [sp], #32
  413b10:	b	4136a0 <wcrtomb@plt+0xea80>
  413b14:	adrp	x20, 455000 <_obstack_memory_used@@Base+0x12e10>
  413b18:	mov	x0, #0x16                  	// #22
  413b1c:	add	x20, x20, #0x3f0
  413b20:	b	413acc <wcrtomb@plt+0xeeac>
  413b24:	nop
  413b28:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  413b2c:	ldr	x0, [x0, #2136]
  413b30:	cbnz	x0, 413b38 <wcrtomb@plt+0xef18>
  413b34:	ret
  413b38:	stp	x29, x30, [sp, #-16]!
  413b3c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  413b40:	mov	x29, sp
  413b44:	ldr	x0, [x0, #952]
  413b48:	cbz	x0, 413b50 <wcrtomb@plt+0xef30>
  413b4c:	blr	x0
  413b50:	mov	w2, #0x5                   	// #5
  413b54:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  413b58:	mov	x0, #0x0                   	// #0
  413b5c:	add	x1, x1, #0x418
  413b60:	bl	4049c0 <dcgettext@plt>
  413b64:	mov	x2, x0
  413b68:	mov	w1, #0x0                   	// #0
  413b6c:	mov	w0, #0x0                   	// #0
  413b70:	bl	404050 <error@plt>
  413b74:	mov	w0, #0x2                   	// #2
  413b78:	bl	423220 <wcrtomb@plt+0x1e600>
  413b7c:	nop
  413b80:	stp	xzr, xzr, [x0, #48]
  413b84:	stp	xzr, xzr, [x0, #64]
  413b88:	str	xzr, [x0, #80]
  413b8c:	stp	xzr, xzr, [x0, #328]
  413b90:	ret
  413b94:	nop
  413b98:	stp	x29, x30, [sp, #-48]!
  413b9c:	mov	x29, sp
  413ba0:	str	x21, [sp, #32]
  413ba4:	mov	x21, x0
  413ba8:	cbz	x1, 413be0 <wcrtomb@plt+0xefc0>
  413bac:	add	x1, x1, x1, lsl #1
  413bb0:	stp	x19, x20, [sp, #16]
  413bb4:	mov	x19, x0
  413bb8:	add	x20, x0, x1, lsl #3
  413bbc:	nop
  413bc0:	ldr	x0, [x19]
  413bc4:	add	x19, x19, #0x18
  413bc8:	bl	4047b0 <free@plt>
  413bcc:	ldur	x0, [x19, #-16]
  413bd0:	bl	4047b0 <free@plt>
  413bd4:	cmp	x19, x20
  413bd8:	b.ne	413bc0 <wcrtomb@plt+0xefa0>  // b.any
  413bdc:	ldp	x19, x20, [sp, #16]
  413be0:	mov	x0, x21
  413be4:	ldr	x21, [sp, #32]
  413be8:	ldp	x29, x30, [sp], #48
  413bec:	b	4047b0 <free@plt>
  413bf0:	stp	x29, x30, [sp, #-64]!
  413bf4:	mov	x29, sp
  413bf8:	stp	x19, x20, [sp, #16]
  413bfc:	mov	x20, x0
  413c00:	mov	x0, x1
  413c04:	stp	x21, x22, [sp, #32]
  413c08:	mov	x22, x2
  413c0c:	mov	x21, x1
  413c10:	str	x23, [sp, #48]
  413c14:	mov	x23, x3
  413c18:	bl	403ff0 <strlen@plt>
  413c1c:	add	x0, x0, #0xe
  413c20:	bl	440f48 <argp_parse@@Base+0xd060>
  413c24:	mov	x19, x0
  413c28:	adrp	x5, 455000 <_obstack_memory_used@@Base+0x12e10>
  413c2c:	add	x5, x5, #0x448
  413c30:	mov	x1, x21
  413c34:	add	x0, x0, #0xd
  413c38:	ldr	x2, [x5]
  413c3c:	str	x2, [x19]
  413c40:	ldur	x2, [x5, #5]
  413c44:	stur	x2, [x19, #5]
  413c48:	bl	404910 <strcpy@plt>
  413c4c:	mov	x4, x23
  413c50:	mov	x3, x22
  413c54:	mov	x2, x19
  413c58:	add	x1, x20, #0x148
  413c5c:	add	x0, x20, #0x150
  413c60:	bl	411d00 <wcrtomb@plt+0xd0e0>
  413c64:	mov	x0, x19
  413c68:	ldp	x19, x20, [sp, #16]
  413c6c:	ldp	x21, x22, [sp, #32]
  413c70:	ldr	x23, [sp, #48]
  413c74:	ldp	x29, x30, [sp], #64
  413c78:	b	4047b0 <free@plt>
  413c7c:	nop
  413c80:	stp	x29, x30, [sp, #-48]!
  413c84:	mov	x29, sp
  413c88:	stp	x19, x20, [sp, #16]
  413c8c:	mov	x19, x3
  413c90:	mov	x20, x1
  413c94:	stp	x21, x22, [sp, #32]
  413c98:	mov	x22, x2
  413c9c:	mov	x21, x0
  413ca0:	mov	x0, x1
  413ca4:	bl	403ff0 <strlen@plt>
  413ca8:	add	x3, x0, #0x10
  413cac:	mov	x1, x20
  413cb0:	and	x3, x3, #0xfffffffffffffff0
  413cb4:	add	x2, x0, #0x1
  413cb8:	sub	sp, sp, x3
  413cbc:	mov	x20, sp
  413cc0:	mov	x0, x20
  413cc4:	bl	403f70 <memcpy@plt>
  413cc8:	add	x0, x19, #0x10
  413ccc:	mov	x1, x22
  413cd0:	and	x0, x0, #0xfffffffffffffff0
  413cd4:	add	x2, x19, #0x1
  413cd8:	sub	sp, sp, x0
  413cdc:	mov	x4, sp
  413ce0:	mov	x0, x4
  413ce4:	bl	403f70 <memcpy@plt>
  413ce8:	mov	x4, x0
  413cec:	mov	x1, x20
  413cf0:	add	x2, x20, #0x1
  413cf4:	mov	w5, #0x25                  	// #37
  413cf8:	mov	w6, #0x3d                  	// #61
  413cfc:	ldrb	w3, [x1]
  413d00:	cmp	w3, #0x25
  413d04:	b.eq	413d24 <wcrtomb@plt+0xf104>  // b.none
  413d08:	sturb	w3, [x2, #-1]
  413d0c:	cbz	w3, 413d50 <wcrtomb@plt+0xf130>
  413d10:	add	x1, x1, #0x1
  413d14:	add	x2, x2, #0x1
  413d18:	ldrb	w3, [x1]
  413d1c:	cmp	w3, #0x25
  413d20:	b.ne	413d08 <wcrtomb@plt+0xf0e8>  // b.any
  413d24:	ldrb	w0, [x1, #1]
  413d28:	cmp	w0, #0x33
  413d2c:	b.eq	413d78 <wcrtomb@plt+0xf158>  // b.none
  413d30:	cmp	w0, #0x32
  413d34:	b.ne	413d44 <wcrtomb@plt+0xf124>  // b.any
  413d38:	ldrb	w0, [x1, #2]
  413d3c:	cmp	w0, #0x35
  413d40:	b.eq	413d94 <wcrtomb@plt+0xf174>  // b.none
  413d44:	add	x1, x1, #0x1
  413d48:	sturb	w5, [x2, #-1]
  413d4c:	b	413d14 <wcrtomb@plt+0xf0f4>
  413d50:	mov	x3, x19
  413d54:	add	x1, x20, #0xd
  413d58:	mov	x0, x21
  413d5c:	mov	x2, x4
  413d60:	bl	413bf0 <wcrtomb@plt+0xefd0>
  413d64:	mov	sp, x29
  413d68:	ldp	x19, x20, [sp, #16]
  413d6c:	ldp	x21, x22, [sp, #32]
  413d70:	ldp	x29, x30, [sp], #48
  413d74:	ret
  413d78:	ldrb	w0, [x1, #2]
  413d7c:	cmp	w0, #0x44
  413d80:	b.ne	413d44 <wcrtomb@plt+0xf124>  // b.any
  413d84:	add	x1, x1, #0x3
  413d88:	add	x2, x2, #0x1
  413d8c:	sturb	w6, [x2, #-2]
  413d90:	b	413d18 <wcrtomb@plt+0xf0f8>
  413d94:	add	x1, x1, #0x3
  413d98:	add	x2, x2, #0x1
  413d9c:	sturb	w3, [x2, #-2]
  413da0:	b	413d18 <wcrtomb@plt+0xf0f8>
  413da4:	nop
  413da8:	stp	x29, x30, [sp, #-64]!
  413dac:	mov	x29, sp
  413db0:	stp	x21, x22, [sp, #32]
  413db4:	mov	x21, x0
  413db8:	str	xzr, [x1]
  413dbc:	str	xzr, [x2]
  413dc0:	ldr	x0, [x0, #328]
  413dc4:	cbz	x0, 413e18 <wcrtomb@plt+0xf1f8>
  413dc8:	mov	x22, x1
  413dcc:	str	x23, [sp, #48]
  413dd0:	mov	x23, x2
  413dd4:	stp	x19, x20, [sp, #16]
  413dd8:	mov	x19, #0x0                   	// #0
  413ddc:	mov	x20, #0x0                   	// #0
  413de0:	ldr	x3, [x21, #336]
  413de4:	mov	x0, x22
  413de8:	mov	x1, x23
  413dec:	add	x20, x20, #0x1
  413df0:	add	x4, x3, x19
  413df4:	ldr	x2, [x3, x19]
  413df8:	add	x19, x19, #0x18
  413dfc:	ldp	x3, x4, [x4, #8]
  413e00:	bl	411d00 <wcrtomb@plt+0xd0e0>
  413e04:	ldr	x0, [x21, #328]
  413e08:	cmp	x0, x20
  413e0c:	b.hi	413de0 <wcrtomb@plt+0xf1c0>  // b.pmore
  413e10:	ldp	x19, x20, [sp, #16]
  413e14:	ldr	x23, [sp, #48]
  413e18:	ldp	x21, x22, [sp, #32]
  413e1c:	ldp	x29, x30, [sp], #64
  413e20:	ret
  413e24:	nop
  413e28:	stp	x29, x30, [sp, #-64]!
  413e2c:	mov	x1, x0
  413e30:	mov	x29, sp
  413e34:	stp	x19, x20, [sp, #16]
  413e38:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  413e3c:	mov	x19, x0
  413e40:	str	x21, [sp, #32]
  413e44:	add	x21, x20, #0x808
  413e48:	ldr	x0, [x21, #80]
  413e4c:	bl	411e88 <wcrtomb@plt+0xd268>
  413e50:	ldr	x0, [x21, #96]
  413e54:	mov	x1, x19
  413e58:	bl	411e88 <wcrtomb@plt+0xd268>
  413e5c:	ldr	x0, [x19, #352]
  413e60:	cbz	x0, 413e90 <wcrtomb@plt+0xf270>
  413e64:	ldr	x1, [x19, #360]
  413e68:	adrp	x21, 413000 <wcrtomb@plt+0xe3e0>
  413e6c:	add	x21, x21, #0x278
  413e70:	add	x2, x1, #0x200
  413e74:	str	x2, [sp, #56]
  413e78:	mov	x4, x19
  413e7c:	mov	x3, x21
  413e80:	add	x2, sp, #0x38
  413e84:	bl	4122b0 <wcrtomb@plt+0xd690>
  413e88:	tst	w0, #0xff
  413e8c:	b.ne	413ec4 <wcrtomb@plt+0xf2a4>  // b.any
  413e90:	ldr	x0, [x20, #2056]
  413e94:	mov	x1, x19
  413e98:	bl	411e88 <wcrtomb@plt+0xd268>
  413e9c:	ldrb	w0, [x19, #320]
  413ea0:	ldr	x1, [x19, #136]
  413ea4:	str	x1, [x19, #264]
  413ea8:	cbz	w0, 413eb4 <wcrtomb@plt+0xf294>
  413eac:	ldr	x0, [x19, #312]
  413eb0:	str	x0, [x19, #136]
  413eb4:	ldp	x19, x20, [sp, #16]
  413eb8:	ldr	x21, [sp, #32]
  413ebc:	ldp	x29, x30, [sp], #64
  413ec0:	ret
  413ec4:	ldp	x0, x1, [x19, #352]
  413ec8:	b	413e78 <wcrtomb@plt+0xf258>
  413ecc:	nop
  413ed0:	stp	x29, x30, [sp, #-64]!
  413ed4:	mov	x29, sp
  413ed8:	stp	x19, x20, [sp, #16]
  413edc:	mov	x19, x0
  413ee0:	ldr	x0, [x0, #8]
  413ee4:	cbnz	x0, 413ef4 <wcrtomb@plt+0xf2d4>
  413ee8:	ldp	x19, x20, [sp, #16]
  413eec:	ldp	x29, x30, [sp], #64
  413ef0:	ret
  413ef4:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  413ef8:	stp	x21, x22, [sp, #32]
  413efc:	add	x22, x20, #0x808
  413f00:	ldr	x1, [x19, #16]
  413f04:	ldr	x20, [x22, #96]
  413f08:	add	x2, x1, #0x200
  413f0c:	str	x2, [sp, #56]
  413f10:	cbz	x20, 413f40 <wcrtomb@plt+0xf320>
  413f14:	nop
  413f18:	mov	x21, x20
  413f1c:	ldr	x20, [x20]
  413f20:	ldr	x0, [x21, #8]
  413f24:	bl	4047b0 <free@plt>
  413f28:	ldr	x0, [x21, #16]
  413f2c:	bl	4047b0 <free@plt>
  413f30:	mov	x0, x21
  413f34:	bl	4047b0 <free@plt>
  413f38:	cbnz	x20, 413f18 <wcrtomb@plt+0xf2f8>
  413f3c:	ldp	x0, x1, [x19, #8]
  413f40:	adrp	x21, 411000 <wcrtomb@plt+0xc3e0>
  413f44:	add	x21, x21, #0xef8
  413f48:	str	xzr, [x22, #96]!
  413f4c:	mov	x4, x22
  413f50:	mov	x3, x21
  413f54:	add	x2, sp, #0x38
  413f58:	bl	4122b0 <wcrtomb@plt+0xd690>
  413f5c:	tst	w0, #0xff
  413f60:	b.ne	413f74 <wcrtomb@plt+0xf354>  // b.any
  413f64:	ldp	x19, x20, [sp, #16]
  413f68:	ldp	x21, x22, [sp, #32]
  413f6c:	ldp	x29, x30, [sp], #64
  413f70:	ret
  413f74:	ldp	x0, x1, [x19, #8]
  413f78:	b	413f4c <wcrtomb@plt+0xf32c>
  413f7c:	nop
  413f80:	stp	x29, x30, [sp, #-64]!
  413f84:	mov	x29, sp
  413f88:	stp	x19, x20, [sp, #16]
  413f8c:	mov	x19, x1
  413f90:	ldr	x1, [x1, #360]
  413f94:	cbz	x1, 413fa4 <wcrtomb@plt+0xf384>
  413f98:	ldp	x19, x20, [sp, #16]
  413f9c:	ldp	x29, x30, [sp], #64
  413fa0:	ret
  413fa4:	mov	x20, x0
  413fa8:	stp	x21, x22, [sp, #32]
  413fac:	mov	x21, x2
  413fb0:	bl	411df8 <wcrtomb@plt+0xd1d8>
  413fb4:	mov	x22, x0
  413fb8:	cbz	x0, 414020 <wcrtomb@plt+0xf400>
  413fbc:	ldr	x0, [x0, #8]
  413fc0:	cbz	x0, 414020 <wcrtomb@plt+0xf400>
  413fc4:	mov	x0, x20
  413fc8:	bl	413218 <wcrtomb@plt+0xe5f8>
  413fcc:	tst	w0, #0xff
  413fd0:	b.ne	414020 <wcrtomb@plt+0xf400>  // b.any
  413fd4:	ldr	x0, [x19, #344]
  413fd8:	str	x23, [sp, #48]
  413fdc:	add	x23, x19, #0x158
  413fe0:	cbz	x0, 41403c <wcrtomb@plt+0xf41c>
  413fe4:	mov	x0, x20
  413fe8:	bl	411a90 <wcrtomb@plt+0xce70>
  413fec:	tst	w0, #0xff
  413ff0:	b.ne	414030 <wcrtomb@plt+0xf410>  // b.any
  413ff4:	mov	x3, x21
  413ff8:	mov	x2, x23
  413ffc:	mov	x1, x20
  414000:	mov	x0, x19
  414004:	ldr	x4, [x22, #8]
  414008:	ldp	x19, x20, [sp, #16]
  41400c:	mov	x16, x4
  414010:	ldp	x21, x22, [sp, #32]
  414014:	ldr	x23, [sp, #48]
  414018:	ldp	x29, x30, [sp], #64
  41401c:	br	x16
  414020:	ldp	x19, x20, [sp, #16]
  414024:	ldp	x21, x22, [sp, #32]
  414028:	ldp	x29, x30, [sp], #64
  41402c:	ret
  414030:	ldp	x21, x22, [sp, #32]
  414034:	ldr	x23, [sp, #48]
  414038:	b	413f98 <wcrtomb@plt+0xf378>
  41403c:	mov	x0, x23
  414040:	bl	412588 <wcrtomb@plt+0xd968>
  414044:	b	413fe4 <wcrtomb@plt+0xf3c4>
  414048:	stp	x29, x30, [sp, #-64]!
  41404c:	cmp	x2, #0x0
  414050:	mov	x29, sp
  414054:	stp	x23, x24, [sp, #48]
  414058:	mov	x23, x0
  41405c:	csel	x0, x2, xzr, ge  // ge = tcont
  414060:	stp	x19, x20, [sp, #16]
  414064:	add	x20, x0, #0x200
  414068:	mov	x19, x1
  41406c:	stp	x21, x22, [sp, #32]
  414070:	add	x0, x0, #0x201
  414074:	mov	x21, #0x0                   	// #0
  414078:	str	x20, [x23, #8]
  41407c:	mov	x24, #0x200                 	// #512
  414080:	bl	440f48 <argp_parse@@Base+0xd060>
  414084:	strb	wzr, [x0, x20]
  414088:	str	x0, [x23, #16]
  41408c:	nop
  414090:	cmp	x20, #0x200
  414094:	csel	x22, x20, x24, ls  // ls = plast
  414098:	cbz	x19, 4140e4 <wcrtomb@plt+0xf4c4>
  41409c:	ldr	x0, [x23, #16]
  4140a0:	mov	x1, x19
  4140a4:	mov	x2, x22
  4140a8:	sub	x20, x20, x22
  4140ac:	add	x0, x0, x21
  4140b0:	bl	403f70 <memcpy@plt>
  4140b4:	mov	x0, x19
  4140b8:	add	x21, x21, x22
  4140bc:	bl	405b90 <wcrtomb@plt+0xf70>
  4140c0:	bl	406220 <wcrtomb@plt+0x1600>
  4140c4:	mov	x19, x0
  4140c8:	cmp	x20, #0x0
  4140cc:	b.gt	414090 <wcrtomb@plt+0xf470>
  4140d0:	ldp	x19, x20, [sp, #16]
  4140d4:	ldp	x21, x22, [sp, #32]
  4140d8:	ldp	x23, x24, [sp, #48]
  4140dc:	ldp	x29, x30, [sp], #64
  4140e0:	ret
  4140e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4140e8:	ldr	x0, [x0, #952]
  4140ec:	cbz	x0, 4140f4 <wcrtomb@plt+0xf4d4>
  4140f0:	blr	x0
  4140f4:	mov	w2, #0x5                   	// #5
  4140f8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4140fc:	mov	x0, #0x0                   	// #0
  414100:	add	x1, x1, #0x6a8
  414104:	bl	4049c0 <dcgettext@plt>
  414108:	mov	x2, x0
  41410c:	mov	w1, #0x0                   	// #0
  414110:	mov	w0, #0x0                   	// #0
  414114:	bl	404050 <error@plt>
  414118:	bl	40e770 <wcrtomb@plt+0x9b50>
  41411c:	nop
  414120:	stp	x29, x30, [sp, #-32]!
  414124:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414128:	mov	x29, sp
  41412c:	stp	x19, x20, [sp, #16]
  414130:	mov	x20, x0
  414134:	ldr	x19, [x1, #2056]
  414138:	cbz	x19, 414154 <wcrtomb@plt+0xf534>
  41413c:	nop
  414140:	ldp	x1, x0, [x19, #8]
  414144:	mov	x2, x20
  414148:	bl	412898 <wcrtomb@plt+0xdc78>
  41414c:	ldr	x19, [x19]
  414150:	cbnz	x19, 414140 <wcrtomb@plt+0xf520>
  414154:	ldr	x0, [x20]
  414158:	ldp	x4, x3, [x0, #16]
  41415c:	cmp	x3, x4
  414160:	b.eq	4141a8 <wcrtomb@plt+0xf588>  // b.none
  414164:	ldr	x1, [x0, #48]
  414168:	ldr	x2, [x0, #8]
  41416c:	add	x3, x3, x1
  414170:	ldr	x5, [x0, #32]
  414174:	bic	x1, x3, x1
  414178:	str	x1, [x0, #24]
  41417c:	sub	x3, x1, x2
  414180:	sub	x2, x5, x2
  414184:	cmp	x3, x2
  414188:	b.ls	414194 <wcrtomb@plt+0xf574>  // b.plast
  41418c:	mov	x1, x5
  414190:	str	x5, [x0, #24]
  414194:	str	x1, [x0, #16]
  414198:	str	x4, [x20, #16]
  41419c:	ldp	x19, x20, [sp, #16]
  4141a0:	ldp	x29, x30, [sp], #32
  4141a4:	ret
  4141a8:	ldrb	w1, [x0, #80]
  4141ac:	orr	w1, w1, #0x2
  4141b0:	strb	w1, [x0, #80]
  4141b4:	b	414164 <wcrtomb@plt+0xf544>
  4141b8:	stp	x29, x30, [sp, #-32]!
  4141bc:	mov	x29, sp
  4141c0:	str	x19, [sp, #16]
  4141c4:	mov	x19, x0
  4141c8:	ldr	x0, [x0]
  4141cc:	cbz	x0, 4141f4 <wcrtomb@plt+0xf5d4>
  4141d0:	mov	x1, #0x0                   	// #0
  4141d4:	bl	442160 <_obstack_free@@Base>
  4141d8:	ldr	x0, [x19]
  4141dc:	bl	4047b0 <free@plt>
  4141e0:	str	xzr, [x19]
  4141e4:	stp	xzr, xzr, [x19, #8]
  4141e8:	ldr	x19, [sp, #16]
  4141ec:	ldp	x29, x30, [sp], #32
  4141f0:	ret
  4141f4:	ldr	x0, [x19, #16]
  4141f8:	bl	4047b0 <free@plt>
  4141fc:	stp	xzr, xzr, [x19, #8]
  414200:	ldr	x19, [sp, #16]
  414204:	ldp	x29, x30, [sp], #32
  414208:	ret
  41420c:	nop
  414210:	stp	x29, x30, [sp, #-64]!
  414214:	mov	x29, sp
  414218:	stp	x19, x20, [sp, #16]
  41421c:	stp	x21, x22, [sp, #32]
  414220:	stp	x23, x24, [sp, #48]
  414224:	and	w24, w0, #0xff
  414228:	mov	x23, x3
  41422c:	cmp	w24, #0x67
  414230:	mov	x0, x1
  414234:	ldr	x21, [x3, #8]
  414238:	b.eq	414304 <wcrtomb@plt+0xf6e4>  // b.none
  41423c:	cmp	w24, #0x78
  414240:	b.ne	414258 <wcrtomb@plt+0xf638>  // b.any
  414244:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414248:	add	x1, x1, #0x808
  41424c:	ldr	x3, [x1, #56]
  414250:	cbz	x3, 414258 <wcrtomb@plt+0xf638>
  414254:	ldr	x2, [x1, #48]
  414258:	mov	x1, x21
  41425c:	bl	40b460 <wcrtomb@plt+0x6840>
  414260:	strb	w24, [x0, #156]
  414264:	mov	x19, x21
  414268:	and	x21, x21, #0x1ff
  41426c:	bl	40b5e0 <wcrtomb@plt+0x69c0>
  414270:	ldr	x22, [x23, #16]
  414274:	add	x22, x22, x19
  414278:	bl	406220 <wcrtomb@plt+0x1600>
  41427c:	mov	x20, x0
  414280:	cmp	x19, x21
  414284:	sub	x1, x22, x19
  414288:	mov	x2, #0x200                 	// #512
  41428c:	b.ne	4142ec <wcrtomb@plt+0xf6cc>  // b.any
  414290:	mov	x2, x19
  414294:	bl	403f70 <memcpy@plt>
  414298:	mov	x2, #0x200                 	// #512
  41429c:	sub	x2, x2, x19
  4142a0:	mov	w1, #0x0                   	// #0
  4142a4:	add	x0, x20, x19
  4142a8:	bl	404410 <memset@plt>
  4142ac:	mov	x0, x20
  4142b0:	bl	405b90 <wcrtomb@plt+0xf70>
  4142b4:	mov	x0, x23
  4142b8:	bl	4141b8 <wcrtomb@plt+0xf598>
  4142bc:	cmp	w24, #0x67
  4142c0:	b.ne	4142d8 <wcrtomb@plt+0xf6b8>  // b.any
  4142c4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4142c8:	add	x0, x0, #0x808
  4142cc:	ldr	x1, [x0, #88]
  4142d0:	add	x1, x1, #0x1
  4142d4:	str	x1, [x0, #88]
  4142d8:	ldp	x19, x20, [sp, #16]
  4142dc:	ldp	x21, x22, [sp, #32]
  4142e0:	ldp	x23, x24, [sp, #48]
  4142e4:	ldp	x29, x30, [sp], #64
  4142e8:	ret
  4142ec:	bl	403f70 <memcpy@plt>
  4142f0:	sub	x19, x19, #0x200
  4142f4:	mov	x0, x20
  4142f8:	bl	405b90 <wcrtomb@plt+0xf70>
  4142fc:	cbnz	x19, 414278 <wcrtomb@plt+0xf658>
  414300:	b	4142b4 <wcrtomb@plt+0xf694>
  414304:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414308:	add	x1, x1, #0x808
  41430c:	ldr	x3, [x1, #72]
  414310:	cbz	x3, 414258 <wcrtomb@plt+0xf638>
  414314:	ldr	x2, [x1, #64]
  414318:	b	414258 <wcrtomb@plt+0xf638>
  41431c:	nop
  414320:	stp	x29, x30, [sp, #-48]!
  414324:	mov	x29, sp
  414328:	ldr	x1, [x0]
  41432c:	str	x21, [sp, #32]
  414330:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414334:	add	x21, x21, #0x808
  414338:	stp	x19, x20, [sp, #16]
  41433c:	mov	x20, x0
  414340:	ldr	x19, [x21, #80]
  414344:	cbz	x19, 414368 <wcrtomb@plt+0xf748>
  414348:	cbz	x1, 4143b8 <wcrtomb@plt+0xf798>
  41434c:	nop
  414350:	ldp	x1, x0, [x19, #8]
  414354:	mov	x2, x20
  414358:	bl	412898 <wcrtomb@plt+0xdc78>
  41435c:	ldr	x19, [x19]
  414360:	cbnz	x19, 414350 <wcrtomb@plt+0xf730>
  414364:	ldr	x1, [x20]
  414368:	cbz	x1, 4143a8 <wcrtomb@plt+0xf788>
  41436c:	mov	x0, x20
  414370:	bl	414120 <wcrtomb@plt+0xf500>
  414374:	bl	413a78 <wcrtomb@plt+0xee58>
  414378:	mov	x19, x0
  41437c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  414380:	mov	x3, x20
  414384:	mov	x1, x0
  414388:	mov	w0, #0x67                  	// #103
  41438c:	ldr	x2, [x2, #656]
  414390:	bl	414210 <wcrtomb@plt+0xf5f0>
  414394:	mov	x0, x19
  414398:	ldp	x19, x20, [sp, #16]
  41439c:	ldr	x21, [sp, #32]
  4143a0:	ldp	x29, x30, [sp], #48
  4143a4:	b	4047b0 <free@plt>
  4143a8:	ldp	x19, x20, [sp, #16]
  4143ac:	ldr	x21, [sp, #32]
  4143b0:	ldp	x29, x30, [sp], #48
  4143b4:	ret
  4143b8:	bl	412588 <wcrtomb@plt+0xd968>
  4143bc:	ldr	x19, [x21, #80]
  4143c0:	cbnz	x19, 414350 <wcrtomb@plt+0xf730>
  4143c4:	ldr	x1, [x20]
  4143c8:	b	414368 <wcrtomb@plt+0xf748>
  4143cc:	nop
  4143d0:	str	xzr, [x0, #24]
  4143d4:	ret
  4143d8:	stp	x29, x30, [sp, #-48]!
  4143dc:	mov	x29, sp
  4143e0:	stp	x19, x20, [sp, #16]
  4143e4:	mov	x20, x1
  4143e8:	ldr	x1, [x0, #16]
  4143ec:	cbz	x1, 4143fc <wcrtomb@plt+0xf7dc>
  4143f0:	ldp	x19, x20, [sp, #16]
  4143f4:	ldp	x29, x30, [sp], #48
  4143f8:	ret
  4143fc:	str	x21, [sp, #32]
  414400:	mov	x19, x0
  414404:	ldr	x21, [x0]
  414408:	cbz	x21, 41444c <wcrtomb@plt+0xf82c>
  41440c:	mov	x0, x20
  414410:	bl	403ff0 <strlen@plt>
  414414:	ldr	x1, [x19, #24]
  414418:	mov	x2, x0
  41441c:	mov	x0, x20
  414420:	add	x1, x1, x2
  414424:	str	x1, [x19, #24]
  414428:	bl	403ff0 <strlen@plt>
  41442c:	mov	x3, x0
  414430:	mov	x2, x20
  414434:	add	x1, x19, #0x8
  414438:	mov	x0, x21
  41443c:	ldp	x19, x20, [sp, #16]
  414440:	ldr	x21, [sp, #32]
  414444:	ldp	x29, x30, [sp], #48
  414448:	b	4125c8 <wcrtomb@plt+0xd9a8>
  41444c:	bl	412588 <wcrtomb@plt+0xd968>
  414450:	ldr	x21, [x19]
  414454:	b	41440c <wcrtomb@plt+0xf7ec>
  414458:	stp	x29, x30, [sp, #-96]!
  41445c:	mov	x29, sp
  414460:	stp	x21, x22, [sp, #32]
  414464:	mov	x22, x1
  414468:	ldr	x1, [x0, #16]
  41446c:	cbz	x1, 414480 <wcrtomb@plt+0xf860>
  414470:	mov	w0, #0x0                   	// #0
  414474:	ldp	x21, x22, [sp, #32]
  414478:	ldp	x29, x30, [sp], #96
  41447c:	ret
  414480:	ldr	x1, [x0]
  414484:	stp	x19, x20, [sp, #16]
  414488:	mov	x21, x0
  41448c:	stp	x23, x24, [sp, #48]
  414490:	cbz	x1, 4145b0 <wcrtomb@plt+0xf990>
  414494:	mov	x0, x22
  414498:	bl	403ff0 <strlen@plt>
  41449c:	ldr	x23, [x21, #24]
  4144a0:	add	x24, sp, #0x5c
  4144a4:	mov	x19, #0x0                   	// #0
  4144a8:	add	x23, x23, #0x3
  4144ac:	add	x23, x23, x0
  4144b0:	add	x0, x19, x23
  4144b4:	add	x1, sp, #0x48
  4144b8:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4144bc:	mov	x20, x0
  4144c0:	mov	x2, x19
  4144c4:	sub	x19, x24, x0
  4144c8:	cmp	x2, x19
  4144cc:	b.ne	4144b0 <wcrtomb@plt+0xf890>  // b.any
  4144d0:	mov	x0, x22
  4144d4:	bl	403ff0 <strlen@plt>
  4144d8:	ldr	x23, [x21]
  4144dc:	add	x19, x0, x19
  4144e0:	add	x19, x19, #0x2
  4144e4:	mov	x24, x23
  4144e8:	ldp	x1, x2, [x23, #24]
  4144ec:	sub	x0, x2, x1
  4144f0:	cmp	x19, x0
  4144f4:	b.hi	414594 <wcrtomb@plt+0xf974>  // b.pmore
  4144f8:	add	x1, x1, x19
  4144fc:	ldr	x0, [x21, #8]
  414500:	str	x1, [x23, #24]
  414504:	ldr	x1, [x24, #24]
  414508:	add	x0, x0, x19
  41450c:	str	x0, [x21, #8]
  414510:	cmp	x1, x2
  414514:	b.eq	4145b8 <wcrtomb@plt+0xf998>  // b.none
  414518:	add	x0, x1, #0x1
  41451c:	str	x0, [x24, #24]
  414520:	mov	w0, #0xa                   	// #10
  414524:	strb	w0, [x1]
  414528:	ldp	x3, x1, [x21]
  41452c:	ldr	x2, [x21, #24]
  414530:	mvn	x0, x2
  414534:	ldr	x3, [x3, #24]
  414538:	sub	x19, x0, x19
  41453c:	add	x1, x1, #0x1
  414540:	str	x1, [x21, #8]
  414544:	add	x19, x3, x19
  414548:	add	x0, x3, x0
  41454c:	mov	x1, x19
  414550:	bl	403f80 <memmove@plt>
  414554:	mov	x1, x20
  414558:	mov	x0, x19
  41455c:	bl	404220 <stpcpy@plt>
  414560:	mov	w2, #0x20                  	// #32
  414564:	strb	w2, [x0], #1
  414568:	mov	x1, x22
  41456c:	bl	404220 <stpcpy@plt>
  414570:	mov	x1, x0
  414574:	mov	w2, #0x3d                  	// #61
  414578:	mov	w0, #0x1                   	// #1
  41457c:	strb	w2, [x1]
  414580:	ldp	x19, x20, [sp, #16]
  414584:	ldp	x21, x22, [sp, #32]
  414588:	ldp	x23, x24, [sp, #48]
  41458c:	ldp	x29, x30, [sp], #96
  414590:	ret
  414594:	mov	x1, x19
  414598:	mov	x0, x23
  41459c:	bl	442010 <_obstack_newchunk@@Base>
  4145a0:	ldr	x24, [x21]
  4145a4:	ldr	x1, [x23, #24]
  4145a8:	ldr	x2, [x24, #32]
  4145ac:	b	4144f8 <wcrtomb@plt+0xf8d8>
  4145b0:	bl	412588 <wcrtomb@plt+0xd968>
  4145b4:	b	414494 <wcrtomb@plt+0xf874>
  4145b8:	mov	x1, #0x1                   	// #1
  4145bc:	mov	x0, x24
  4145c0:	bl	442010 <_obstack_newchunk@@Base>
  4145c4:	ldr	x1, [x24, #24]
  4145c8:	b	414518 <wcrtomb@plt+0xf8f8>
  4145cc:	nop
  4145d0:	ldp	x2, x0, [x0, #24]
  4145d4:	add	x2, x2, x0
  4145d8:	udiv	x0, x2, x1
  4145dc:	msub	x0, x0, x1, x2
  4145e0:	ret
  4145e4:	nop
  4145e8:	ldr	x3, [x0, #24]
  4145ec:	ldr	x2, [x1, #24]
  4145f0:	cmp	x3, x2
  4145f4:	b.eq	414600 <wcrtomb@plt+0xf9e0>  // b.none
  4145f8:	mov	w0, #0x0                   	// #0
  4145fc:	ret
  414600:	ldr	x2, [x0, #32]
  414604:	ldr	x0, [x1, #32]
  414608:	cmp	x2, x0
  41460c:	cset	w0, eq  // eq = none
  414610:	ret
  414614:	nop
  414618:	stp	x29, x30, [sp, #-48]!
  41461c:	mov	x29, sp
  414620:	stp	x19, x20, [sp, #16]
  414624:	mov	x19, x0
  414628:	ldr	w1, [x0, #8]
  41462c:	ldr	x0, [x0]
  414630:	ldr	x20, [x19, #16]
  414634:	str	x21, [sp, #32]
  414638:	cbz	w1, 414674 <wcrtomb@plt+0xfa54>
  41463c:	ldr	x0, [x0]
  414640:	add	x21, x0, x20
  414644:	ldrb	w0, [x0, x20]
  414648:	cbz	w0, 4146ac <wcrtomb@plt+0xfa8c>
  41464c:	add	x20, x20, #0x1
  414650:	mov	x0, x21
  414654:	bl	403ff0 <strlen@plt>
  414658:	add	x20, x20, x0
  41465c:	str	x20, [x19, #16]
  414660:	mov	x0, x21
  414664:	ldp	x19, x20, [sp, #16]
  414668:	ldr	x21, [sp, #32]
  41466c:	ldp	x29, x30, [sp], #48
  414670:	ret
  414674:	ldr	x1, [x0, #16]
  414678:	mov	x21, #0x0                   	// #0
  41467c:	cmp	x1, x20
  414680:	b.ls	414660 <wcrtomb@plt+0xfa40>  // b.plast
  414684:	ldr	x1, [x0, #24]
  414688:	add	x0, x20, #0x1
  41468c:	ldr	x21, [x1, x20, lsl #3]
  414690:	str	x0, [x19, #16]
  414694:	ldp	x19, x20, [sp, #16]
  414698:	sub	x21, x21, #0x1
  41469c:	mov	x0, x21
  4146a0:	ldr	x21, [sp, #32]
  4146a4:	ldp	x29, x30, [sp], #48
  4146a8:	ret
  4146ac:	mov	x21, #0x0                   	// #0
  4146b0:	b	414660 <wcrtomb@plt+0xfa40>
  4146b4:	nop
  4146b8:	stp	x29, x30, [sp, #-32]!
  4146bc:	mov	x29, sp
  4146c0:	str	x19, [sp, #16]
  4146c4:	mov	x19, x0
  4146c8:	ldr	x0, [x0, #80]
  4146cc:	bl	4047b0 <free@plt>
  4146d0:	ldr	x0, [x19, #88]
  4146d4:	bl	4047b0 <free@plt>
  4146d8:	mov	x0, x19
  4146dc:	ldr	x19, [sp, #16]
  4146e0:	ldp	x29, x30, [sp], #32
  4146e4:	b	4047b0 <free@plt>
  4146e8:	stp	x29, x30, [sp, #-64]!
  4146ec:	mov	x29, sp
  4146f0:	stp	x19, x20, [sp, #16]
  4146f4:	mov	x20, x1
  4146f8:	stp	x21, x22, [sp, #32]
  4146fc:	str	x23, [sp, #48]
  414700:	mov	x23, x0
  414704:	bl	403ff0 <strlen@plt>
  414708:	mov	x22, x0
  41470c:	mov	x0, x20
  414710:	bl	403ff0 <strlen@plt>
  414714:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414718:	ldr	x19, [x1, #2160]
  41471c:	cbz	x19, 414748 <wcrtomb@plt+0xfb28>
  414720:	mov	x21, x0
  414724:	nop
  414728:	add	x0, x19, #0x58
  41472c:	mov	x4, x21
  414730:	mov	x3, x20
  414734:	mov	x2, x22
  414738:	mov	x1, x23
  41473c:	bl	41b0b0 <wcrtomb@plt+0x16490>
  414740:	ldr	x19, [x19]
  414744:	cbnz	x19, 414728 <wcrtomb@plt+0xfb08>
  414748:	ldp	x19, x20, [sp, #16]
  41474c:	ldp	x21, x22, [sp, #32]
  414750:	ldr	x23, [sp, #48]
  414754:	ldp	x29, x30, [sp], #64
  414758:	ret
  41475c:	nop
  414760:	stp	x29, x30, [sp, #-48]!
  414764:	mov	x29, sp
  414768:	stp	x19, x20, [sp, #16]
  41476c:	stp	x21, x22, [sp, #32]
  414770:	mov	x22, x1
  414774:	mov	x21, x0
  414778:	bl	403ff0 <strlen@plt>
  41477c:	mov	x20, x0
  414780:	mov	x0, #0x60                  	// #96
  414784:	bl	440f48 <argp_parse@@Base+0xd060>
  414788:	str	xzr, [x0]
  41478c:	mov	x19, x0
  414790:	stp	xzr, xzr, [x0, #40]
  414794:	cmp	x20, #0x1
  414798:	str	wzr, [x0, #60]
  41479c:	str	xzr, [x0, #64]
  4147a0:	b.ls	4147b4 <wcrtomb@plt+0xfb94>  // b.plast
  4147a4:	sub	x1, x20, #0x1
  4147a8:	ldrb	w0, [x21, x1]
  4147ac:	cmp	w0, #0x2f
  4147b0:	b.eq	4147ec <wcrtomb@plt+0xfbcc>  // b.none
  4147b4:	add	x0, x20, #0x1
  4147b8:	bl	440f48 <argp_parse@@Base+0xd060>
  4147bc:	str	x0, [x19, #88]
  4147c0:	mov	x1, x21
  4147c4:	mov	x21, x0
  4147c8:	mov	x2, x20
  4147cc:	bl	403f70 <memcpy@plt>
  4147d0:	mov	x0, x19
  4147d4:	stp	xzr, x22, [x19, #72]
  4147d8:	strb	wzr, [x21, x20]
  4147dc:	ldp	x19, x20, [sp, #16]
  4147e0:	ldp	x21, x22, [sp, #32]
  4147e4:	ldp	x29, x30, [sp], #48
  4147e8:	ret
  4147ec:	mov	x0, x20
  4147f0:	mov	x20, x1
  4147f4:	b	4147b8 <wcrtomb@plt+0xfb98>
  4147f8:	stp	x29, x30, [sp, #-48]!
  4147fc:	mov	x29, sp
  414800:	stp	x19, x20, [sp, #16]
  414804:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414808:	add	x20, x20, #0x870
  41480c:	ldr	x19, [x20, #8]
  414810:	cbz	x19, 414858 <wcrtomb@plt+0xfc38>
  414814:	str	x21, [sp, #32]
  414818:	mov	x21, x0
  41481c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414820:	mov	x1, x21
  414824:	ldr	w0, [x0, #4040]
  414828:	bl	41afc0 <wcrtomb@plt+0x163a0>
  41482c:	mov	x1, x0
  414830:	mov	x0, x21
  414834:	bl	414760 <wcrtomb@plt+0xfb40>
  414838:	mov	x1, x0
  41483c:	ldr	x0, [x20, #8]
  414840:	mov	x20, x1
  414844:	bl	4384c8 <argp_parse@@Base+0x45e0>
  414848:	mov	x19, x0
  41484c:	mov	x0, x20
  414850:	bl	4146b8 <wcrtomb@plt+0xfa98>
  414854:	ldr	x21, [sp, #32]
  414858:	mov	x0, x19
  41485c:	ldp	x19, x20, [sp, #16]
  414860:	ldp	x29, x30, [sp], #48
  414864:	ret
  414868:	stp	x29, x30, [sp, #-64]!
  41486c:	mov	x29, sp
  414870:	stp	x21, x22, [sp, #32]
  414874:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414878:	add	x21, x21, #0x870
  41487c:	stp	x19, x20, [sp, #16]
  414880:	ldr	x19, [x21, #16]
  414884:	cbz	x19, 4148c8 <wcrtomb@plt+0xfca8>
  414888:	mov	x22, x1
  41488c:	mov	x1, #0x0                   	// #0
  414890:	str	x23, [sp, #48]
  414894:	mov	x23, x0
  414898:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  41489c:	add	x0, x0, #0x948
  4148a0:	bl	414760 <wcrtomb@plt+0xfb40>
  4148a4:	mov	x20, x0
  4148a8:	mov	x1, x0
  4148ac:	ldr	x0, [x21, #16]
  4148b0:	stp	x23, x22, [x20, #24]
  4148b4:	bl	4384c8 <argp_parse@@Base+0x45e0>
  4148b8:	mov	x19, x0
  4148bc:	mov	x0, x20
  4148c0:	bl	4146b8 <wcrtomb@plt+0xfa98>
  4148c4:	ldr	x23, [sp, #48]
  4148c8:	mov	x0, x19
  4148cc:	ldp	x19, x20, [sp, #16]
  4148d0:	ldp	x21, x22, [sp, #32]
  4148d4:	ldp	x29, x30, [sp], #64
  4148d8:	ret
  4148dc:	nop
  4148e0:	ldr	x0, [x0]
  4148e4:	ldr	x1, [x1]
  4148e8:	b	404710 <strcmp@plt>
  4148ec:	nop
  4148f0:	stp	x29, x30, [sp, #-80]!
  4148f4:	mov	x29, sp
  4148f8:	stp	x21, x22, [sp, #32]
  4148fc:	str	x1, [sp, #72]
  414900:	cbz	x0, 4149a0 <wcrtomb@plt+0xfd80>
  414904:	ldr	x21, [x0, #16]
  414908:	str	x23, [sp, #48]
  41490c:	ldr	x23, [x0, #24]
  414910:	stp	x19, x20, [sp, #16]
  414914:	mov	x20, #0x0                   	// #0
  414918:	add	x19, x21, x20
  41491c:	add	x0, sp, #0x48
  414920:	cmp	x21, x20
  414924:	b.ls	414958 <wcrtomb@plt+0xfd38>  // b.plast
  414928:	lsr	x19, x19, #1
  41492c:	add	x22, x23, x19, lsl #3
  414930:	mov	x1, x22
  414934:	bl	4148e0 <wcrtomb@plt+0xfcc0>
  414938:	cmp	w0, #0x0
  41493c:	b.lt	414974 <wcrtomb@plt+0xfd54>  // b.tstop
  414940:	b.eq	41497c <wcrtomb@plt+0xfd5c>  // b.none
  414944:	add	x20, x19, #0x1
  414948:	add	x0, sp, #0x48
  41494c:	add	x19, x21, x20
  414950:	cmp	x21, x20
  414954:	b.hi	414928 <wcrtomb@plt+0xfd08>  // b.pmore
  414958:	ldp	x19, x20, [sp, #16]
  41495c:	mov	x22, #0x0                   	// #0
  414960:	ldr	x23, [sp, #48]
  414964:	mov	x0, x22
  414968:	ldp	x21, x22, [sp, #32]
  41496c:	ldp	x29, x30, [sp], #80
  414970:	ret
  414974:	mov	x21, x19
  414978:	b	414918 <wcrtomb@plt+0xfcf8>
  41497c:	cbz	x22, 4149a8 <wcrtomb@plt+0xfd88>
  414980:	ldr	x22, [x22]
  414984:	ldp	x19, x20, [sp, #16]
  414988:	sub	x22, x22, #0x1
  41498c:	mov	x0, x22
  414990:	ldp	x21, x22, [sp, #32]
  414994:	ldr	x23, [sp, #48]
  414998:	ldp	x29, x30, [sp], #80
  41499c:	ret
  4149a0:	mov	x22, #0x0                   	// #0
  4149a4:	b	414964 <wcrtomb@plt+0xfd44>
  4149a8:	ldp	x19, x20, [sp, #16]
  4149ac:	ldr	x23, [sp, #48]
  4149b0:	b	414964 <wcrtomb@plt+0xfd44>
  4149b4:	nop
  4149b8:	stp	x29, x30, [sp, #-16]!
  4149bc:	mov	x29, sp
  4149c0:	ldr	x0, [x0, #80]
  4149c4:	ldr	x1, [x1, #80]
  4149c8:	bl	404710 <strcmp@plt>
  4149cc:	cmp	w0, #0x0
  4149d0:	cset	w0, eq  // eq = none
  4149d4:	ldp	x29, x30, [sp], #16
  4149d8:	ret
  4149dc:	nop
  4149e0:	stp	x29, x30, [sp, #-80]!
  4149e4:	mov	x29, sp
  4149e8:	stp	x19, x20, [sp, #16]
  4149ec:	mov	x20, x1
  4149f0:	stp	x21, x22, [sp, #32]
  4149f4:	stp	x23, x24, [sp, #48]
  4149f8:	stp	x25, x26, [sp, #64]
  4149fc:	mov	x26, x0
  414a00:	ldrb	w21, [x0]
  414a04:	cbz	w21, 414af8 <wcrtomb@plt+0xfed8>
  414a08:	mov	x19, x0
  414a0c:	mov	x22, #0x1                   	// #1
  414a10:	mov	x23, #0x0                   	// #0
  414a14:	mov	x24, #0x0                   	// #0
  414a18:	mov	x0, x19
  414a1c:	bl	403ff0 <strlen@plt>
  414a20:	add	x0, x0, #0x1
  414a24:	add	x23, x23, #0x1
  414a28:	mov	w1, w21
  414a2c:	add	x19, x19, x0
  414a30:	add	x22, x22, x0
  414a34:	cbz	x20, 414a44 <wcrtomb@plt+0xfe24>
  414a38:	mov	x0, x20
  414a3c:	bl	404870 <strchr@plt>
  414a40:	cbz	x0, 414a48 <wcrtomb@plt+0xfe28>
  414a44:	add	x24, x24, #0x1
  414a48:	ldrb	w21, [x19]
  414a4c:	cbnz	w21, 414a18 <wcrtomb@plt+0xfdf8>
  414a50:	add	x19, x24, #0x1
  414a54:	add	x0, x22, #0x20
  414a58:	bl	440f48 <argp_parse@@Base+0xd060>
  414a5c:	mov	x25, x0
  414a60:	mov	x2, x22
  414a64:	mov	x1, x26
  414a68:	add	x0, x0, #0x20
  414a6c:	str	x0, [x25]
  414a70:	bl	403f70 <memcpy@plt>
  414a74:	mov	x0, x19
  414a78:	mov	x1, #0x8                   	// #8
  414a7c:	stp	x23, x24, [x25, #8]
  414a80:	bl	441108 <argp_parse@@Base+0xd220>
  414a84:	mov	x22, x0
  414a88:	ldr	x19, [x25]
  414a8c:	str	x0, [x25, #24]
  414a90:	ldrb	w1, [x19]
  414a94:	cbz	w1, 414ad8 <wcrtomb@plt+0xfeb8>
  414a98:	mov	x21, #0x0                   	// #0
  414a9c:	nop
  414aa0:	cbz	x20, 414ab0 <wcrtomb@plt+0xfe90>
  414aa4:	mov	x0, x20
  414aa8:	bl	404870 <strchr@plt>
  414aac:	cbz	x0, 414abc <wcrtomb@plt+0xfe9c>
  414ab0:	add	x0, x19, #0x1
  414ab4:	str	x0, [x22, x21, lsl #3]
  414ab8:	add	x21, x21, #0x1
  414abc:	mov	x0, x19
  414ac0:	bl	403ff0 <strlen@plt>
  414ac4:	add	x0, x0, #0x1
  414ac8:	add	x19, x19, x0
  414acc:	ldrb	w1, [x19]
  414ad0:	cbnz	w1, 414aa0 <wcrtomb@plt+0xfe80>
  414ad4:	add	x22, x22, x21, lsl #3
  414ad8:	mov	x0, x25
  414adc:	ldp	x19, x20, [sp, #16]
  414ae0:	ldp	x23, x24, [sp, #48]
  414ae4:	ldp	x25, x26, [sp, #64]
  414ae8:	str	xzr, [x22]
  414aec:	ldp	x21, x22, [sp, #32]
  414af0:	ldp	x29, x30, [sp], #80
  414af4:	ret
  414af8:	mov	x19, #0x1                   	// #1
  414afc:	mov	x0, #0x21                  	// #33
  414b00:	mov	x22, x19
  414b04:	mov	x23, #0x0                   	// #0
  414b08:	mov	x24, #0x0                   	// #0
  414b0c:	b	414a58 <wcrtomb@plt+0xfe38>
  414b10:	stp	x29, x30, [sp, #-96]!
  414b14:	adrp	x8, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414b18:	mov	x29, sp
  414b1c:	stp	x19, x20, [sp, #16]
  414b20:	mov	x19, x0
  414b24:	ldr	w0, [x8, #4040]
  414b28:	mov	x20, x7
  414b2c:	stp	x21, x22, [sp, #32]
  414b30:	mov	x22, x3
  414b34:	mov	x21, x4
  414b38:	stp	x23, x24, [sp, #48]
  414b3c:	mov	x23, x2
  414b40:	mov	x24, x1
  414b44:	mov	x1, x19
  414b48:	stp	x25, x26, [sp, #64]
  414b4c:	and	w26, w5, #0xff
  414b50:	and	w25, w6, #0xff
  414b54:	str	x27, [sp, #80]
  414b58:	bl	41afc0 <wcrtomb@plt+0x163a0>
  414b5c:	mov	x1, x0
  414b60:	mov	x0, x19
  414b64:	bl	414760 <wcrtomb@plt+0xfb40>
  414b68:	mov	x19, x0
  414b6c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414b70:	add	x27, x1, #0x870
  414b74:	ldr	x0, [x27, #24]
  414b78:	cbz	x0, 414c48 <wcrtomb@plt+0x10028>
  414b7c:	str	x19, [x0]
  414b80:	mov	w0, #0x1                   	// #1
  414b84:	stp	x24, x23, [x19, #8]
  414b88:	stp	x22, x21, [x19, #24]
  414b8c:	str	x19, [x27, #24]
  414b90:	str	w0, [x19, #56]
  414b94:	cbz	w26, 414ba4 <wcrtomb@plt+0xff84>
  414b98:	ldr	w0, [x19, #60]
  414b9c:	orr	w0, w0, #0x2
  414ba0:	str	w0, [x19, #60]
  414ba4:	cbz	w25, 414bb4 <wcrtomb@plt+0xff94>
  414ba8:	ldr	w0, [x19, #60]
  414bac:	orr	w0, w0, #0x4
  414bb0:	str	w0, [x19, #60]
  414bb4:	cbz	x20, 414c14 <wcrtomb@plt+0xfff4>
  414bb8:	mov	x0, x20
  414bbc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  414bc0:	add	x1, x1, #0x900
  414bc4:	bl	4149e0 <wcrtomb@plt+0xfdc0>
  414bc8:	str	x0, [x19, #40]
  414bcc:	ldr	x0, [x27, #8]
  414bd0:	cbz	x0, 414c20 <wcrtomb@plt+0x10000>
  414bd4:	mov	x1, x19
  414bd8:	bl	438cb8 <argp_parse@@Base+0x4dd0>
  414bdc:	cbz	x0, 414c44 <wcrtomb@plt+0x10024>
  414be0:	ldr	x0, [x27, #16]
  414be4:	cbz	x0, 414c50 <wcrtomb@plt+0x10030>
  414be8:	mov	x1, x19
  414bec:	bl	438cb8 <argp_parse@@Base+0x4dd0>
  414bf0:	cbz	x0, 414c44 <wcrtomb@plt+0x10024>
  414bf4:	mov	x0, x19
  414bf8:	ldp	x19, x20, [sp, #16]
  414bfc:	ldp	x21, x22, [sp, #32]
  414c00:	ldp	x23, x24, [sp, #48]
  414c04:	ldp	x25, x26, [sp, #64]
  414c08:	ldr	x27, [sp, #80]
  414c0c:	ldp	x29, x30, [sp], #96
  414c10:	ret
  414c14:	ldr	x0, [x27, #8]
  414c18:	str	xzr, [x19, #40]
  414c1c:	cbnz	x0, 414bd4 <wcrtomb@plt+0xffb4>
  414c20:	adrp	x3, 414000 <wcrtomb@plt+0xf3e0>
  414c24:	adrp	x2, 415000 <wcrtomb@plt+0x103e0>
  414c28:	add	x3, x3, #0x9b8
  414c2c:	add	x2, x2, #0x1f8
  414c30:	mov	x4, #0x0                   	// #0
  414c34:	mov	x1, #0x0                   	// #0
  414c38:	bl	438760 <argp_parse@@Base+0x4878>
  414c3c:	str	x0, [x27, #8]
  414c40:	cbnz	x0, 414bd4 <wcrtomb@plt+0xffb4>
  414c44:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  414c48:	str	x19, [x1, #2160]
  414c4c:	b	414b80 <wcrtomb@plt+0xff60>
  414c50:	adrp	x3, 414000 <wcrtomb@plt+0xf3e0>
  414c54:	adrp	x2, 414000 <wcrtomb@plt+0xf3e0>
  414c58:	add	x3, x3, #0x5e8
  414c5c:	add	x2, x2, #0x5d0
  414c60:	mov	x4, #0x0                   	// #0
  414c64:	mov	x1, #0x0                   	// #0
  414c68:	bl	438760 <argp_parse@@Base+0x4878>
  414c6c:	str	x0, [x27, #16]
  414c70:	cbnz	x0, 414be8 <wcrtomb@plt+0xffc8>
  414c74:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  414c78:	stp	x29, x30, [sp, #-112]!
  414c7c:	mov	x29, sp
  414c80:	stp	x19, x20, [sp, #16]
  414c84:	mov	x20, x1
  414c88:	stp	x21, x22, [sp, #32]
  414c8c:	mov	x22, x3
  414c90:	mov	x21, x0
  414c94:	stp	x23, x24, [sp, #48]
  414c98:	mov	w23, w2
  414c9c:	add	x24, x1, #0x58
  414ca0:	stp	x25, x26, [sp, #64]
  414ca4:	ldr	x25, [x1, #88]
  414ca8:	bl	4147f8 <wcrtomb@plt+0xfbd8>
  414cac:	cbz	x0, 414fa0 <wcrtomb@plt+0x10380>
  414cb0:	mov	x19, x0
  414cb4:	ldr	w0, [x0, #60]
  414cb8:	tbz	w0, #0, 414ccc <wcrtomb@plt+0x100ac>
  414cbc:	tbz	w23, #5, 414dec <wcrtomb@plt+0x101cc>
  414cc0:	mov	x1, x21
  414cc4:	add	x0, x19, #0x58
  414cc8:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  414ccc:	ldr	x0, [x19, #88]
  414cd0:	mov	x1, x21
  414cd4:	bl	404710 <strcmp@plt>
  414cd8:	cbnz	w0, 414dec <wcrtomb@plt+0x101cc>
  414cdc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414ce0:	ldr	x1, [x24, #8]
  414ce4:	ldrb	w0, [x0, #4072]
  414ce8:	cbz	w0, 414d10 <wcrtomb@plt+0x100f0>
  414cec:	ldr	w0, [x19, #60]
  414cf0:	tst	x0, #0x2
  414cf4:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  414cf8:	b.lt	414d10 <wcrtomb@plt+0x100f0>  // b.tstop
  414cfc:	ldr	x2, [x19, #24]
  414d00:	ldr	x0, [x20, #88]
  414d04:	cmp	x2, x0
  414d08:	b.ne	414d20 <wcrtomb@plt+0x10100>  // b.any
  414d0c:	nop
  414d10:	ldr	x0, [x19, #32]
  414d14:	cmp	x0, x1
  414d18:	b.eq	414e10 <wcrtomb@plt+0x101f0>  // b.none
  414d1c:	ldr	x0, [x20, #88]
  414d20:	bl	414868 <wcrtomb@plt+0xfc48>
  414d24:	mov	x26, x0
  414d28:	cbz	x0, 415080 <wcrtomb@plt+0x10460>
  414d2c:	ldr	x24, [x0, #88]
  414d30:	mov	x1, x21
  414d34:	mov	x0, x24
  414d38:	bl	404710 <strcmp@plt>
  414d3c:	cbz	w0, 414dcc <wcrtomb@plt+0x101ac>
  414d40:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414d44:	ldr	w0, [x0, #408]
  414d48:	tbz	w0, #13, 414db0 <wcrtomb@plt+0x10190>
  414d4c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  414d50:	str	x27, [sp, #80]
  414d54:	ldr	x0, [x0, #952]
  414d58:	cbz	x0, 414d60 <wcrtomb@plt+0x10140>
  414d5c:	blr	x0
  414d60:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  414d64:	add	x1, x1, #0x908
  414d68:	mov	w2, #0x5                   	// #5
  414d6c:	mov	x0, #0x0                   	// #0
  414d70:	bl	4049c0 <dcgettext@plt>
  414d74:	mov	x24, x0
  414d78:	mov	x0, x21
  414d7c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  414d80:	ldr	x1, [x26, #88]
  414d84:	mov	x27, x0
  414d88:	mov	w0, #0x1                   	// #1
  414d8c:	bl	440230 <argp_parse@@Base+0xc348>
  414d90:	mov	x4, x0
  414d94:	mov	x3, x27
  414d98:	mov	x2, x24
  414d9c:	mov	w1, #0x0                   	// #0
  414da0:	mov	w0, #0x0                   	// #0
  414da4:	bl	404050 <error@plt>
  414da8:	ldr	x27, [sp, #80]
  414dac:	ldr	x24, [x26, #88]
  414db0:	str	x26, [x19, #64]
  414db4:	ldr	w2, [x19, #60]
  414db8:	mov	x0, x24
  414dbc:	mov	x1, x21
  414dc0:	orr	w2, w2, #0x10
  414dc4:	str	w2, [x19, #60]
  414dc8:	bl	4146e8 <wcrtomb@plt+0xfac8>
  414dcc:	mov	w0, #0x1                   	// #1
  414dd0:	mov	w1, #0x0                   	// #0
  414dd4:	str	w0, [x19, #56]
  414dd8:	ldr	w4, [x19, #60]
  414ddc:	cmp	x25, #0x0
  414de0:	orr	w0, w4, #0x2
  414de4:	csel	w4, w0, w4, lt  // lt = tstop
  414de8:	b	414e20 <wcrtomb@plt+0x10200>
  414dec:	mov	w0, #0x4e                  	// #78
  414df0:	strb	w0, [x22]
  414df4:	mov	x0, x19
  414df8:	ldp	x19, x20, [sp, #16]
  414dfc:	ldp	x21, x22, [sp, #32]
  414e00:	ldp	x23, x24, [sp, #48]
  414e04:	ldp	x25, x26, [sp, #64]
  414e08:	ldp	x29, x30, [sp], #112
  414e0c:	ret
  414e10:	ldr	w4, [x19, #60]
  414e14:	mov	w0, #0x1                   	// #1
  414e18:	mov	w1, #0x0                   	// #0
  414e1c:	str	w0, [x19, #56]
  414e20:	orr	w4, w4, #0x4
  414e24:	str	w4, [x19, #60]
  414e28:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  414e2c:	ldrb	w0, [x0, #29]
  414e30:	cbz	w0, 414f2c <wcrtomb@plt+0x1030c>
  414e34:	ldr	x0, [x20, #392]
  414e38:	cbz	x0, 414f2c <wcrtomb@plt+0x1030c>
  414e3c:	ldr	x0, [x0, #88]
  414e40:	ldr	x2, [x20, #88]
  414e44:	cmp	x2, x0
  414e48:	b.eq	414f2c <wcrtomb@plt+0x1030c>  // b.none
  414e4c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414e50:	ldr	w0, [x0, #408]
  414e54:	tbz	w0, #18, 414e9c <wcrtomb@plt+0x1027c>
  414e58:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  414e5c:	ldr	x0, [x0, #952]
  414e60:	cbz	x0, 414e68 <wcrtomb@plt+0x10248>
  414e64:	blr	x0
  414e68:	mov	w2, #0x5                   	// #5
  414e6c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  414e70:	mov	x0, #0x0                   	// #0
  414e74:	add	x1, x1, #0x948
  414e78:	bl	4049c0 <dcgettext@plt>
  414e7c:	mov	x23, x0
  414e80:	ldr	x0, [x19, #88]
  414e84:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  414e88:	mov	x3, x0
  414e8c:	mov	x2, x23
  414e90:	mov	w1, #0x0                   	// #0
  414e94:	mov	w0, #0x0                   	// #0
  414e98:	bl	404050 <error@plt>
  414e9c:	ldr	x23, [x19, #40]
  414ea0:	str	wzr, [x19, #56]
  414ea4:	cbz	x23, 41509c <wcrtomb@plt+0x1047c>
  414ea8:	ldr	x0, [x23, #24]
  414eac:	bl	4047b0 <free@plt>
  414eb0:	mov	x0, x23
  414eb4:	bl	4047b0 <free@plt>
  414eb8:	ldr	w0, [x19, #56]
  414ebc:	str	xzr, [x19, #40]
  414ec0:	ldr	w2, [x19, #60]
  414ec4:	orr	w2, w2, #0x1
  414ec8:	str	w2, [x19, #60]
  414ecc:	cbz	w0, 414df4 <wcrtomb@plt+0x101d4>
  414ed0:	mov	x0, x20
  414ed4:	add	x1, sp, #0x68
  414ed8:	bl	40c7f8 <wcrtomb@plt+0x7bd8>
  414edc:	cmp	w0, #0x2
  414ee0:	b.eq	4151b8 <wcrtomb@plt+0x10598>  // b.none
  414ee4:	cmp	w0, #0x3
  414ee8:	b.eq	415180 <wcrtomb@plt+0x10560>  // b.none
  414eec:	cmp	w0, #0x1
  414ef0:	b.ne	414df4 <wcrtomb@plt+0x101d4>  // b.any
  414ef4:	ldr	x20, [sp, #104]
  414ef8:	mov	w2, #0x5                   	// #5
  414efc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  414f00:	mov	x0, #0x0                   	// #0
  414f04:	add	x1, x1, #0xd08
  414f08:	bl	4049c0 <dcgettext@plt>
  414f0c:	mov	x1, x20
  414f10:	mov	x2, x0
  414f14:	mov	x0, x21
  414f18:	bl	40b2b8 <wcrtomb@plt+0x6698>
  414f1c:	ldr	x0, [sp, #104]
  414f20:	str	wzr, [x19, #56]
  414f24:	str	x0, [x19, #72]
  414f28:	b	414df4 <wcrtomb@plt+0x101d4>
  414f2c:	tbz	w23, #4, 414f44 <wcrtomb@plt+0x10324>
  414f30:	and	w2, w23, #0x3
  414f34:	str	w2, [x19, #56]
  414f38:	cbnz	w2, 414f44 <wcrtomb@plt+0x10324>
  414f3c:	mov	w0, #0x4e                  	// #78
  414f40:	strb	w0, [x22]
  414f44:	cbz	w1, 414f98 <wcrtomb@plt+0x10378>
  414f48:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414f4c:	ldr	w0, [x0, #408]
  414f50:	tbz	w0, #13, 414f98 <wcrtomb@plt+0x10378>
  414f54:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  414f58:	ldr	x0, [x0, #952]
  414f5c:	cbz	x0, 414f64 <wcrtomb@plt+0x10344>
  414f60:	blr	x0
  414f64:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  414f68:	add	x1, x1, #0x980
  414f6c:	mov	w2, #0x5                   	// #5
  414f70:	mov	x0, #0x0                   	// #0
  414f74:	bl	4049c0 <dcgettext@plt>
  414f78:	mov	x23, x0
  414f7c:	mov	x0, x21
  414f80:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  414f84:	mov	x2, x23
  414f88:	mov	x3, x0
  414f8c:	mov	w1, #0x0                   	// #0
  414f90:	mov	w0, #0x0                   	// #0
  414f94:	bl	404050 <error@plt>
  414f98:	ldr	w0, [x19, #56]
  414f9c:	b	414ec0 <wcrtomb@plt+0x102a0>
  414fa0:	ldr	x1, [x24, #8]
  414fa4:	ldr	x0, [x20, #88]
  414fa8:	bl	414868 <wcrtomb@plt+0xfc48>
  414fac:	ldp	x1, x2, [x20, #176]
  414fb0:	lsr	x5, x25, #63
  414fb4:	ldr	x4, [x24, #8]
  414fb8:	mov	x7, #0x0                   	// #0
  414fbc:	ldr	x3, [x20, #88]
  414fc0:	mov	x24, x0
  414fc4:	mov	w6, #0x1                   	// #1
  414fc8:	mov	x0, x21
  414fcc:	bl	414b10 <wcrtomb@plt+0xfef0>
  414fd0:	mov	x19, x0
  414fd4:	cbz	x24, 4150ac <wcrtomb@plt+0x1048c>
  414fd8:	ldr	x25, [x24, #88]
  414fdc:	mov	x1, x21
  414fe0:	mov	x0, x25
  414fe4:	bl	404710 <strcmp@plt>
  414fe8:	cbz	w0, 415070 <wcrtomb@plt+0x10450>
  414fec:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  414ff0:	ldr	w0, [x0, #408]
  414ff4:	tbz	w0, #13, 415054 <wcrtomb@plt+0x10434>
  414ff8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  414ffc:	ldr	x0, [x0, #952]
  415000:	cbz	x0, 415008 <wcrtomb@plt+0x103e8>
  415004:	blr	x0
  415008:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  41500c:	add	x1, x1, #0x908
  415010:	mov	w2, #0x5                   	// #5
  415014:	mov	x0, #0x0                   	// #0
  415018:	bl	4049c0 <dcgettext@plt>
  41501c:	mov	x25, x0
  415020:	mov	x0, x21
  415024:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  415028:	ldr	x1, [x24, #88]
  41502c:	mov	x26, x0
  415030:	mov	w0, #0x1                   	// #1
  415034:	bl	440230 <argp_parse@@Base+0xc348>
  415038:	mov	x4, x0
  41503c:	mov	x2, x25
  415040:	mov	x3, x26
  415044:	mov	w1, #0x0                   	// #0
  415048:	mov	w0, #0x0                   	// #0
  41504c:	bl	404050 <error@plt>
  415050:	ldr	x25, [x24, #88]
  415054:	str	x24, [x19, #64]
  415058:	ldr	w2, [x19, #60]
  41505c:	mov	x0, x25
  415060:	mov	x1, x21
  415064:	orr	w2, w2, #0x10
  415068:	str	w2, [x19, #60]
  41506c:	bl	4146e8 <wcrtomb@plt+0xfac8>
  415070:	mov	w0, #0x1                   	// #1
  415074:	mov	w1, #0x0                   	// #0
  415078:	str	w0, [x19, #56]
  41507c:	b	414e28 <wcrtomb@plt+0x10208>
  415080:	ldr	x2, [x24, #8]
  415084:	mov	w0, #0x2                   	// #2
  415088:	ldr	x3, [x20, #88]
  41508c:	mov	w1, #0x1                   	// #1
  415090:	stp	x3, x2, [x19, #24]
  415094:	str	w0, [x19, #56]
  415098:	b	414dd8 <wcrtomb@plt+0x101b8>
  41509c:	ldr	w0, [x19, #60]
  4150a0:	orr	w0, w0, #0x1
  4150a4:	str	w0, [x19, #60]
  4150a8:	b	414df4 <wcrtomb@plt+0x101d4>
  4150ac:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4150b0:	ldr	w0, [x0, #60]
  4150b4:	ldr	w1, [x1, #408]
  4150b8:	orr	w0, w0, #0x8
  4150bc:	str	w0, [x19, #60]
  4150c0:	tbz	w1, #12, 415108 <wcrtomb@plt+0x104e8>
  4150c4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4150c8:	ldr	x0, [x0, #952]
  4150cc:	cbz	x0, 4150d4 <wcrtomb@plt+0x104b4>
  4150d0:	blr	x0
  4150d4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4150d8:	add	x1, x1, #0x930
  4150dc:	mov	w2, #0x5                   	// #5
  4150e0:	mov	x0, #0x0                   	// #0
  4150e4:	bl	4049c0 <dcgettext@plt>
  4150e8:	mov	x24, x0
  4150ec:	mov	x0, x21
  4150f0:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4150f4:	mov	x2, x24
  4150f8:	mov	x3, x0
  4150fc:	mov	w1, #0x0                   	// #0
  415100:	mov	w0, #0x0                   	// #0
  415104:	bl	404050 <error@plt>
  415108:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41510c:	mov	w0, #0x2                   	// #2
  415110:	ldr	x1, [x1, #776]
  415114:	cbz	x1, 415124 <wcrtomb@plt+0x10504>
  415118:	mov	w1, #0x0                   	// #0
  41511c:	str	w0, [x19, #56]
  415120:	b	414e28 <wcrtomb@plt+0x10208>
  415124:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  415128:	add	x3, x1, #0xff0
  41512c:	ldr	x2, [x20, #176]
  415130:	ldr	x1, [x1, #4080]
  415134:	ldr	x3, [x3, #8]
  415138:	cmp	x2, x1
  41513c:	ldr	x2, [x20, #184]
  415140:	b.lt	415118 <wcrtomb@plt+0x104f8>  // b.tstop
  415144:	b.gt	415150 <wcrtomb@plt+0x10530>
  415148:	cmp	w2, w3
  41514c:	b.mi	415118 <wcrtomb@plt+0x104f8>  // b.first
  415150:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  415154:	mov	w0, #0x1                   	// #1
  415158:	ldr	w2, [x2, #916]
  41515c:	cbz	w2, 415118 <wcrtomb@plt+0x104f8>
  415160:	ldp	x4, x2, [x20, #192]
  415164:	cmp	x1, x4
  415168:	b.gt	4151ec <wcrtomb@plt+0x105cc>
  41516c:	b.lt	415118 <wcrtomb@plt+0x104f8>  // b.tstop
  415170:	sub	w0, w2, w3
  415174:	lsr	w0, w0, #31
  415178:	add	w0, w0, #0x1
  41517c:	b	415118 <wcrtomb@plt+0x104f8>
  415180:	ldr	x20, [sp, #104]
  415184:	mov	w2, #0x5                   	// #5
  415188:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  41518c:	mov	x0, #0x0                   	// #0
  415190:	add	x1, x1, #0xca8
  415194:	bl	4049c0 <dcgettext@plt>
  415198:	mov	x1, x20
  41519c:	mov	x2, x0
  4151a0:	mov	x0, x21
  4151a4:	bl	40b2b8 <wcrtomb@plt+0x6698>
  4151a8:	mov	w0, #0x4e                  	// #78
  4151ac:	strb	w0, [x22]
  4151b0:	str	wzr, [x19, #56]
  4151b4:	b	414df4 <wcrtomb@plt+0x101d4>
  4151b8:	ldr	x20, [sp, #104]
  4151bc:	mov	w2, #0x5                   	// #5
  4151c0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  4151c4:	mov	x0, #0x0                   	// #0
  4151c8:	add	x1, x1, #0xd08
  4151cc:	bl	4049c0 <dcgettext@plt>
  4151d0:	mov	x1, x20
  4151d4:	mov	x2, x0
  4151d8:	mov	x0, x21
  4151dc:	bl	40b2b8 <wcrtomb@plt+0x6698>
  4151e0:	ldr	x0, [sp, #104]
  4151e4:	str	x0, [x19, #72]
  4151e8:	b	414df4 <wcrtomb@plt+0x101d4>
  4151ec:	mov	w0, #0x2                   	// #2
  4151f0:	b	415118 <wcrtomb@plt+0x104f8>
  4151f4:	nop
  4151f8:	ldr	x0, [x0, #80]
  4151fc:	b	438708 <argp_parse@@Base+0x4820>
  415200:	stp	x29, x30, [sp, #-48]!
  415204:	mov	x29, sp
  415208:	stp	x19, x20, [sp, #16]
  41520c:	mov	x19, x0
  415210:	mov	x20, x2
  415214:	stp	x21, x22, [sp, #32]
  415218:	mov	x21, x1
  41521c:	ldrb	w0, [x1]
  415220:	cbnz	w0, 4152dc <wcrtomb@plt+0x106bc>
  415224:	ldp	x0, x1, [x19, #24]
  415228:	cmp	x1, x0
  41522c:	b.eq	415300 <wcrtomb@plt+0x106e0>  // b.none
  415230:	add	x1, x0, #0x1
  415234:	str	x1, [x19, #24]
  415238:	mov	w1, #0x52                  	// #82
  41523c:	strb	w1, [x0]
  415240:	mov	x0, x21
  415244:	bl	403ff0 <strlen@plt>
  415248:	add	x22, x0, #0x1
  41524c:	ldp	x0, x1, [x19, #24]
  415250:	sub	x1, x1, x0
  415254:	cmp	x22, x1
  415258:	b.hi	415364 <wcrtomb@plt+0x10744>  // b.pmore
  41525c:	mov	x1, x21
  415260:	mov	x2, x22
  415264:	bl	403f70 <memcpy@plt>
  415268:	ldr	x3, [x19, #24]
  41526c:	add	x3, x3, x22
  415270:	str	x3, [x19, #24]
  415274:	ldrb	w0, [x20]
  415278:	cbnz	w0, 415328 <wcrtomb@plt+0x10708>
  41527c:	ldr	x0, [x19, #32]
  415280:	cmp	x0, x3
  415284:	b.eq	415350 <wcrtomb@plt+0x10730>  // b.none
  415288:	add	x0, x3, #0x1
  41528c:	str	x0, [x19, #24]
  415290:	mov	w0, #0x54                  	// #84
  415294:	strb	w0, [x3]
  415298:	mov	x0, x20
  41529c:	bl	403ff0 <strlen@plt>
  4152a0:	add	x21, x0, #0x1
  4152a4:	ldp	x0, x1, [x19, #24]
  4152a8:	sub	x1, x1, x0
  4152ac:	cmp	x21, x1
  4152b0:	b.hi	415314 <wcrtomb@plt+0x106f4>  // b.pmore
  4152b4:	mov	x1, x20
  4152b8:	mov	x2, x21
  4152bc:	bl	403f70 <memcpy@plt>
  4152c0:	ldr	x0, [x19, #24]
  4152c4:	add	x0, x0, x21
  4152c8:	ldp	x21, x22, [sp, #32]
  4152cc:	str	x0, [x19, #24]
  4152d0:	ldp	x19, x20, [sp, #16]
  4152d4:	ldp	x29, x30, [sp], #48
  4152d8:	ret
  4152dc:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4152e0:	mov	x0, x1
  4152e4:	mov	w1, #0x0                   	// #0
  4152e8:	ldrb	w2, [x2, #896]
  4152ec:	bl	42a438 <wcrtomb@plt+0x25818>
  4152f0:	mov	x21, x0
  4152f4:	ldp	x0, x1, [x19, #24]
  4152f8:	cmp	x1, x0
  4152fc:	b.ne	415230 <wcrtomb@plt+0x10610>  // b.any
  415300:	mov	x0, x19
  415304:	mov	x1, #0x1                   	// #1
  415308:	bl	442010 <_obstack_newchunk@@Base>
  41530c:	ldr	x0, [x19, #24]
  415310:	b	415230 <wcrtomb@plt+0x10610>
  415314:	mov	x0, x19
  415318:	mov	x1, x21
  41531c:	bl	442010 <_obstack_newchunk@@Base>
  415320:	ldr	x0, [x19, #24]
  415324:	b	4152b4 <wcrtomb@plt+0x10694>
  415328:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  41532c:	mov	x0, x20
  415330:	mov	w1, #0x0                   	// #0
  415334:	ldrb	w2, [x2, #896]
  415338:	bl	42a438 <wcrtomb@plt+0x25818>
  41533c:	mov	x20, x0
  415340:	ldr	x3, [x19, #24]
  415344:	ldr	x0, [x19, #32]
  415348:	cmp	x0, x3
  41534c:	b.ne	415288 <wcrtomb@plt+0x10668>  // b.any
  415350:	mov	x0, x19
  415354:	mov	x1, #0x1                   	// #1
  415358:	bl	442010 <_obstack_newchunk@@Base>
  41535c:	ldr	x3, [x19, #24]
  415360:	b	415288 <wcrtomb@plt+0x10668>
  415364:	mov	x0, x19
  415368:	mov	x1, x22
  41536c:	bl	442010 <_obstack_newchunk@@Base>
  415370:	ldr	x0, [x19, #24]
  415374:	b	41525c <wcrtomb@plt+0x1063c>
  415378:	stp	x29, x30, [sp, #-64]!
  41537c:	mov	x29, sp
  415380:	stp	x19, x20, [sp, #16]
  415384:	mov	x19, x1
  415388:	mov	x20, x0
  41538c:	ldr	x1, [x0, #8]
  415390:	str	x23, [sp, #48]
  415394:	mov	x23, x2
  415398:	stp	x21, x22, [sp, #32]
  41539c:	ldr	x2, [x0, #16]
  4153a0:	cmp	x1, x2
  4153a4:	b.cs	4154a0 <wcrtomb@plt+0x10880>  // b.hs, b.nlast
  4153a8:	add	x0, x1, #0x1
  4153ac:	str	x0, [x20, #8]
  4153b0:	ldrb	w21, [x1]
  4153b4:	add	w0, w21, #0x1
  4153b8:	mov	x22, #0x0                   	// #0
  4153bc:	cmp	w0, #0x1
  4153c0:	b.hi	4153fc <wcrtomb@plt+0x107dc>  // b.pmore
  4153c4:	b	415458 <wcrtomb@plt+0x10838>
  4153c8:	add	x0, x3, #0x1
  4153cc:	str	x0, [x19, #24]
  4153d0:	strb	w21, [x3]
  4153d4:	ldp	x1, x0, [x20, #8]
  4153d8:	add	x2, x1, #0x1
  4153dc:	cmp	x1, x0
  4153e0:	b.cs	415438 <wcrtomb@plt+0x10818>  // b.hs, b.nlast
  4153e4:	str	x2, [x20, #8]
  4153e8:	add	x22, x22, #0x1
  4153ec:	ldrb	w21, [x1]
  4153f0:	add	w0, w21, #0x1
  4153f4:	cmp	w0, #0x1
  4153f8:	b.ls	415458 <wcrtomb@plt+0x10838>  // b.plast
  4153fc:	ldp	x3, x0, [x19, #24]
  415400:	cmp	x0, x3
  415404:	b.ne	4153c8 <wcrtomb@plt+0x107a8>  // b.any
  415408:	mov	x0, x19
  41540c:	mov	x1, #0x1                   	// #1
  415410:	bl	442010 <_obstack_newchunk@@Base>
  415414:	ldr	x3, [x19, #24]
  415418:	add	x0, x3, #0x1
  41541c:	str	x0, [x19, #24]
  415420:	strb	w21, [x3]
  415424:	ldp	x1, x0, [x20, #8]
  415428:	add	x2, x1, #0x1
  41542c:	cmp	x1, x0
  415430:	b.cc	4153e4 <wcrtomb@plt+0x107c4>  // b.lo, b.ul, b.last
  415434:	nop
  415438:	mov	x0, x20
  41543c:	bl	404b90 <__uflow@plt>
  415440:	mov	w21, w0
  415444:	add	x22, x22, #0x1
  415448:	add	w0, w21, #0x1
  41544c:	cmp	w0, #0x1
  415450:	b.hi	4153fc <wcrtomb@plt+0x107dc>  // b.pmore
  415454:	nop
  415458:	ldp	x1, x0, [x19, #24]
  41545c:	cmp	x0, x1
  415460:	b.eq	41548c <wcrtomb@plt+0x1086c>  // b.none
  415464:	add	x0, x1, #0x1
  415468:	str	x0, [x19, #24]
  41546c:	strb	wzr, [x1]
  415470:	mov	w0, w21
  415474:	ldp	x19, x20, [sp, #16]
  415478:	str	x22, [x23]
  41547c:	ldp	x21, x22, [sp, #32]
  415480:	ldr	x23, [sp, #48]
  415484:	ldp	x29, x30, [sp], #64
  415488:	ret
  41548c:	mov	x1, #0x1                   	// #1
  415490:	mov	x0, x19
  415494:	bl	442010 <_obstack_newchunk@@Base>
  415498:	ldr	x1, [x19, #24]
  41549c:	b	415464 <wcrtomb@plt+0x10844>
  4154a0:	bl	404b90 <__uflow@plt>
  4154a4:	mov	w21, w0
  4154a8:	b	4153b4 <wcrtomb@plt+0x10794>
  4154ac:	nop
  4154b0:	sub	sp, sp, #0xd0
  4154b4:	stp	x29, x30, [sp, #16]
  4154b8:	add	x29, sp, #0x10
  4154bc:	stp	x21, x22, [sp, #48]
  4154c0:	mov	x22, x1
  4154c4:	stp	x23, x24, [sp, #64]
  4154c8:	mov	x24, x2
  4154cc:	mov	x23, x3
  4154d0:	ldp	x1, x2, [x0, #8]
  4154d4:	stp	x19, x20, [sp, #32]
  4154d8:	mov	x20, x0
  4154dc:	stp	x25, x26, [sp, #80]
  4154e0:	mov	x25, x4
  4154e4:	str	x27, [sp, #96]
  4154e8:	cmp	x1, x2
  4154ec:	b.cs	41571c <wcrtomb@plt+0x10afc>  // b.hs, b.nlast
  4154f0:	add	x0, x1, #0x1
  4154f4:	str	x0, [x20, #8]
  4154f8:	ldrb	w21, [x1]
  4154fc:	cmp	w21, #0x2d
  415500:	mov	x19, #0x0                   	// #0
  415504:	cset	w26, eq  // eq = none
  415508:	cmp	w19, #0x0
  41550c:	add	x27, sp, #0x70
  415510:	csel	w1, w26, wzr, eq  // eq = none
  415514:	cbnz	w1, 415558 <wcrtomb@plt+0x10938>
  415518:	sub	w2, w21, #0x30
  41551c:	cmp	w2, #0x9
  415520:	b.hi	4155ec <wcrtomb@plt+0x109cc>  // b.pmore
  415524:	strb	w21, [x27, x19]
  415528:	cmp	x19, #0x14
  41552c:	b.eq	41557c <wcrtomb@plt+0x1095c>  // b.none
  415530:	ldp	x5, x0, [x20, #8]
  415534:	cmp	x5, x0
  415538:	b.cs	415568 <wcrtomb@plt+0x10948>  // b.hs, b.nlast
  41553c:	add	x0, x5, #0x1
  415540:	str	x0, [x20, #8]
  415544:	add	x19, x19, #0x1
  415548:	ldrb	w21, [x5]
  41554c:	cmp	w19, #0x0
  415550:	csel	w1, w26, wzr, eq  // eq = none
  415554:	cbz	w1, 415518 <wcrtomb@plt+0x108f8>
  415558:	ldp	x5, x0, [x20, #8]
  41555c:	strb	w21, [sp, #112]
  415560:	cmp	x5, x0
  415564:	b.cc	41553c <wcrtomb@plt+0x1091c>  // b.lo, b.ul, b.last
  415568:	mov	x0, x20
  41556c:	add	x19, x19, #0x1
  415570:	bl	404b90 <__uflow@plt>
  415574:	mov	w21, w0
  415578:	b	41554c <wcrtomb@plt+0x1092c>
  41557c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  415580:	ldr	x0, [x0, #952]
  415584:	cbz	x0, 41558c <wcrtomb@plt+0x1096c>
  415588:	blr	x0
  41558c:	mov	w2, #0x5                   	// #5
  415590:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  415594:	mov	x0, #0x0                   	// #0
  415598:	add	x1, x1, #0x9a0
  41559c:	bl	4049c0 <dcgettext@plt>
  4155a0:	mov	x19, x0
  4155a4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4155a8:	ldr	x0, [x1, #776]
  4155ac:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4155b0:	mov	x21, x0
  4155b4:	mov	x0, x20
  4155b8:	bl	404900 <ftello@plt>
  4155bc:	add	x1, sp, #0x88
  4155c0:	bl	439858 <argp_parse@@Base+0x5970>
  4155c4:	mov	x7, x27
  4155c8:	mov	x4, x0
  4155cc:	mov	x3, x21
  4155d0:	mov	x2, x19
  4155d4:	mov	x5, x22
  4155d8:	mov	w6, #0x15                  	// #21
  4155dc:	mov	w1, #0x0                   	// #0
  4155e0:	mov	w0, #0x0                   	// #0
  4155e4:	bl	404050 <error@plt>
  4155e8:	bl	40e770 <wcrtomb@plt+0x9b50>
  4155ec:	strb	wzr, [x27, w19, sxtw]
  4155f0:	cmp	w21, #0x0
  4155f4:	b.lt	4156bc <wcrtomb@plt+0x10a9c>  // b.tstop
  4155f8:	b.ne	4157c0 <wcrtomb@plt+0x10ba0>  // b.any
  4155fc:	mov	x3, x23
  415600:	mov	x2, x24
  415604:	mov	x1, #0x0                   	// #0
  415608:	mov	x0, x27
  41560c:	bl	41b1a8 <wcrtomb@plt+0x16588>
  415610:	str	x0, [x25]
  415614:	bl	404ad0 <__errno_location@plt>
  415618:	ldr	w19, [x0]
  41561c:	mov	w1, #0x1                   	// #1
  415620:	cbnz	w19, 415648 <wcrtomb@plt+0x10a28>
  415624:	mov	w0, w1
  415628:	ldp	x29, x30, [sp, #16]
  41562c:	ldp	x19, x20, [sp, #32]
  415630:	ldp	x21, x22, [sp, #48]
  415634:	ldp	x23, x24, [sp, #64]
  415638:	ldp	x25, x26, [sp, #80]
  41563c:	ldr	x27, [sp, #96]
  415640:	add	sp, sp, #0xd0
  415644:	ret
  415648:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41564c:	cmp	w19, #0x22
  415650:	ldr	x0, [x0, #952]
  415654:	b.eq	415728 <wcrtomb@plt+0x10b08>  // b.none
  415658:	cbz	x0, 415660 <wcrtomb@plt+0x10a40>
  41565c:	blr	x0
  415660:	mov	w2, #0x5                   	// #5
  415664:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  415668:	mov	x0, #0x0                   	// #0
  41566c:	add	x1, x1, #0xa58
  415670:	bl	4049c0 <dcgettext@plt>
  415674:	mov	x21, x0
  415678:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41567c:	ldr	x0, [x1, #776]
  415680:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  415684:	mov	x23, x0
  415688:	mov	x0, x20
  41568c:	bl	404900 <ftello@plt>
  415690:	add	x1, sp, #0x88
  415694:	bl	439858 <argp_parse@@Base+0x5970>
  415698:	mov	x6, x27
  41569c:	mov	x4, x0
  4156a0:	mov	x5, x22
  4156a4:	mov	x3, x23
  4156a8:	mov	x2, x21
  4156ac:	mov	w1, w19
  4156b0:	mov	w0, #0x0                   	// #0
  4156b4:	bl	404050 <error@plt>
  4156b8:	bl	40e770 <wcrtomb@plt+0x9b50>
  4156bc:	ldr	w2, [x20]
  4156c0:	tbnz	w2, #5, 4157b4 <wcrtomb@plt+0x10b94>
  4156c4:	cbz	w19, 415624 <wcrtomb@plt+0x10a04>
  4156c8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4156cc:	ldr	x0, [x0, #952]
  4156d0:	cbz	x0, 4156d8 <wcrtomb@plt+0x10ab8>
  4156d4:	blr	x0
  4156d8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4156dc:	ldr	x0, [x0, #776]
  4156e0:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4156e4:	mov	x19, x0
  4156e8:	mov	w2, #0x5                   	// #5
  4156ec:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4156f0:	mov	x0, #0x0                   	// #0
  4156f4:	add	x1, x1, #0x9c8
  4156f8:	bl	4049c0 <dcgettext@plt>
  4156fc:	mov	x4, x0
  415700:	mov	x3, x19
  415704:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  415708:	add	x2, x2, #0x9e8
  41570c:	mov	w1, #0x0                   	// #0
  415710:	mov	w0, #0x0                   	// #0
  415714:	bl	404050 <error@plt>
  415718:	bl	40e770 <wcrtomb@plt+0x9b50>
  41571c:	bl	404b90 <__uflow@plt>
  415720:	mov	w21, w0
  415724:	b	4154fc <wcrtomb@plt+0x108dc>
  415728:	cbz	x0, 415730 <wcrtomb@plt+0x10b10>
  41572c:	blr	x0
  415730:	mov	w2, #0x5                   	// #5
  415734:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  415738:	mov	x0, #0x0                   	// #0
  41573c:	add	x1, x1, #0xa28
  415740:	bl	4049c0 <dcgettext@plt>
  415744:	mov	x19, x0
  415748:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41574c:	ldr	x0, [x1, #776]
  415750:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  415754:	mov	x21, x0
  415758:	mov	x0, x20
  41575c:	bl	404900 <ftello@plt>
  415760:	add	x1, sp, #0x88
  415764:	bl	439858 <argp_parse@@Base+0x5970>
  415768:	add	x1, sp, #0xa0
  41576c:	mov	x20, x0
  415770:	mov	x0, x24
  415774:	bl	4397d8 <argp_parse@@Base+0x58f0>
  415778:	add	x1, sp, #0xb8
  41577c:	mov	x24, x0
  415780:	mov	x0, x23
  415784:	bl	4398d8 <argp_parse@@Base+0x59f0>
  415788:	mov	x5, x24
  41578c:	mov	x6, x0
  415790:	mov	x4, x20
  415794:	mov	x3, x21
  415798:	mov	x2, x19
  41579c:	mov	x7, x22
  4157a0:	mov	w1, #0x22                  	// #34
  4157a4:	mov	w0, #0x0                   	// #0
  4157a8:	str	x27, [sp]
  4157ac:	bl	404050 <error@plt>
  4157b0:	bl	40e770 <wcrtomb@plt+0x9b50>
  4157b4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4157b8:	ldr	x0, [x0, #776]
  4157bc:	bl	429f88 <wcrtomb@plt+0x25368>
  4157c0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4157c4:	ldr	x0, [x0, #952]
  4157c8:	cbz	x0, 4157d0 <wcrtomb@plt+0x10bb0>
  4157cc:	blr	x0
  4157d0:	mov	w2, #0x5                   	// #5
  4157d4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4157d8:	mov	x0, #0x0                   	// #0
  4157dc:	add	x1, x1, #0x9f0
  4157e0:	bl	4049c0 <dcgettext@plt>
  4157e4:	mov	x19, x0
  4157e8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4157ec:	ldr	x0, [x1, #776]
  4157f0:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4157f4:	mov	x23, x0
  4157f8:	mov	x0, x20
  4157fc:	bl	404900 <ftello@plt>
  415800:	add	x1, sp, #0x88
  415804:	bl	439858 <argp_parse@@Base+0x5970>
  415808:	mov	w7, w21
  41580c:	mov	x4, x0
  415810:	mov	x6, x27
  415814:	mov	x5, x22
  415818:	mov	x3, x23
  41581c:	mov	x2, x19
  415820:	mov	w1, #0x0                   	// #0
  415824:	mov	w0, #0x0                   	// #0
  415828:	bl	404050 <error@plt>
  41582c:	bl	40e770 <wcrtomb@plt+0x9b50>
  415830:	stp	x29, x30, [sp, #-80]!
  415834:	mov	x29, sp
  415838:	stp	x19, x20, [sp, #16]
  41583c:	mov	x19, x1
  415840:	ldr	w1, [x0, #60]
  415844:	tbz	w1, #2, 415a10 <wcrtomb@plt+0x10df0>
  415848:	str	x21, [sp, #32]
  41584c:	mov	x20, x0
  415850:	tbnz	w1, #1, 415a28 <wcrtomb@plt+0x10e08>
  415854:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x19e10>
  415858:	add	x21, x21, #0x6e0
  41585c:	mov	w1, #0x30                  	// #48
  415860:	ldp	x0, x2, [x19, #40]
  415864:	cmp	x2, x0
  415868:	b.ls	415a38 <wcrtomb@plt+0x10e18>  // b.plast
  41586c:	add	x2, x0, #0x1
  415870:	str	x2, [x19, #40]
  415874:	strb	w1, [x0]
  415878:	ldp	x0, x2, [x19, #40]
  41587c:	ldrb	w1, [x21, #1]
  415880:	cmp	x0, x2
  415884:	b.cs	415a68 <wcrtomb@plt+0x10e48>  // b.hs, b.nlast
  415888:	add	x2, x0, #0x1
  41588c:	str	x2, [x19, #40]
  415890:	strb	w1, [x0]
  415894:	ldr	x0, [x20, #8]
  415898:	add	x3, sp, #0x38
  41589c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  4158a0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  4158a4:	bl	41b190 <wcrtomb@plt+0x16570>
  4158a8:	mov	x21, x0
  4158ac:	bl	403ff0 <strlen@plt>
  4158b0:	mov	x1, x0
  4158b4:	mov	x3, x19
  4158b8:	mov	x2, #0x1                   	// #1
  4158bc:	mov	x0, x21
  4158c0:	add	x1, x1, #0x1
  4158c4:	bl	403fd0 <fwrite_unlocked@plt>
  4158c8:	ldr	x0, [x20, #16]
  4158cc:	add	x1, sp, #0x38
  4158d0:	bl	4397d8 <argp_parse@@Base+0x58f0>
  4158d4:	mov	x21, x0
  4158d8:	bl	403ff0 <strlen@plt>
  4158dc:	mov	x1, x0
  4158e0:	mov	x3, x19
  4158e4:	mov	x0, x21
  4158e8:	add	x1, x1, #0x1
  4158ec:	mov	x2, #0x1                   	// #1
  4158f0:	bl	403fd0 <fwrite_unlocked@plt>
  4158f4:	ldr	x0, [x20, #24]
  4158f8:	add	x3, sp, #0x38
  4158fc:	mov	x2, #0xffffffffffffffff    	// #-1
  415900:	mov	x1, #0x0                   	// #0
  415904:	bl	41b190 <wcrtomb@plt+0x16570>
  415908:	mov	x21, x0
  41590c:	bl	403ff0 <strlen@plt>
  415910:	mov	x1, x0
  415914:	mov	x3, x19
  415918:	mov	x0, x21
  41591c:	add	x1, x1, #0x1
  415920:	mov	x2, #0x1                   	// #1
  415924:	bl	403fd0 <fwrite_unlocked@plt>
  415928:	ldr	x0, [x20, #32]
  41592c:	add	x3, sp, #0x38
  415930:	mov	x2, #0xffffffffffffffff    	// #-1
  415934:	mov	x1, #0x0                   	// #0
  415938:	bl	41b190 <wcrtomb@plt+0x16570>
  41593c:	mov	x21, x0
  415940:	bl	403ff0 <strlen@plt>
  415944:	mov	x1, x0
  415948:	mov	x3, x19
  41594c:	add	x1, x1, #0x1
  415950:	mov	x2, #0x1                   	// #1
  415954:	mov	x0, x21
  415958:	bl	403fd0 <fwrite_unlocked@plt>
  41595c:	ldr	x21, [x20, #88]
  415960:	mov	x0, x21
  415964:	bl	403ff0 <strlen@plt>
  415968:	mov	x3, x19
  41596c:	add	x1, x0, #0x1
  415970:	mov	x2, #0x1                   	// #1
  415974:	mov	x0, x21
  415978:	bl	403fd0 <fwrite_unlocked@plt>
  41597c:	ldr	x20, [x20, #40]
  415980:	cbz	x20, 4159dc <wcrtomb@plt+0x10dbc>
  415984:	mov	x0, #0x18                  	// #24
  415988:	bl	440f48 <argp_parse@@Base+0xd060>
  41598c:	str	x20, [x0]
  415990:	mov	x21, x0
  415994:	str	wzr, [x0, #8]
  415998:	str	xzr, [x0, #16]
  41599c:	bl	414618 <wcrtomb@plt+0xf9f8>
  4159a0:	mov	x20, x0
  4159a4:	cbz	x0, 4159d4 <wcrtomb@plt+0x10db4>
  4159a8:	mov	x0, x20
  4159ac:	bl	403ff0 <strlen@plt>
  4159b0:	mov	x3, x19
  4159b4:	add	x1, x0, #0x1
  4159b8:	mov	x2, #0x1                   	// #1
  4159bc:	mov	x0, x20
  4159c0:	bl	403fd0 <fwrite_unlocked@plt>
  4159c4:	mov	x0, x21
  4159c8:	bl	414618 <wcrtomb@plt+0xf9f8>
  4159cc:	mov	x20, x0
  4159d0:	cbnz	x0, 4159a8 <wcrtomb@plt+0x10d88>
  4159d4:	mov	x0, x21
  4159d8:	bl	4047b0 <free@plt>
  4159dc:	ldp	x0, x1, [x19, #40]
  4159e0:	cmp	x1, x0
  4159e4:	b.ls	415a4c <wcrtomb@plt+0x10e2c>  // b.plast
  4159e8:	add	x1, x0, #0x1
  4159ec:	str	x1, [x19, #40]
  4159f0:	strb	wzr, [x0]
  4159f4:	ldp	x0, x1, [x19, #40]
  4159f8:	cmp	x0, x1
  4159fc:	b.cs	415a74 <wcrtomb@plt+0x10e54>  // b.hs, b.nlast
  415a00:	add	x1, x0, #0x1
  415a04:	str	x1, [x19, #40]
  415a08:	strb	wzr, [x0]
  415a0c:	ldr	x21, [sp, #32]
  415a10:	ldr	w0, [x19]
  415a14:	ldp	x19, x20, [sp, #16]
  415a18:	eor	x0, x0, #0x20
  415a1c:	ldp	x29, x30, [sp], #80
  415a20:	ubfx	x0, x0, #5, #1
  415a24:	ret
  415a28:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  415a2c:	mov	w1, #0x31                  	// #49
  415a30:	add	x21, x21, #0x358
  415a34:	b	415860 <wcrtomb@plt+0x10c40>
  415a38:	mov	x0, x19
  415a3c:	bl	404680 <__overflow@plt>
  415a40:	cmn	w0, #0x1
  415a44:	b.eq	415894 <wcrtomb@plt+0x10c74>  // b.none
  415a48:	b	415878 <wcrtomb@plt+0x10c58>
  415a4c:	mov	x0, x19
  415a50:	mov	w1, #0x0                   	// #0
  415a54:	bl	404680 <__overflow@plt>
  415a58:	cmn	w0, #0x1
  415a5c:	b.ne	4159f4 <wcrtomb@plt+0x10dd4>  // b.any
  415a60:	ldr	x21, [sp, #32]
  415a64:	b	415a10 <wcrtomb@plt+0x10df0>
  415a68:	mov	x0, x19
  415a6c:	bl	404680 <__overflow@plt>
  415a70:	b	415894 <wcrtomb@plt+0x10c74>
  415a74:	mov	x0, x19
  415a78:	mov	w1, #0x0                   	// #0
  415a7c:	bl	404680 <__overflow@plt>
  415a80:	ldr	x21, [sp, #32]
  415a84:	b	415a10 <wcrtomb@plt+0x10df0>
  415a88:	stp	x29, x30, [sp, #-96]!
  415a8c:	mov	x29, sp
  415a90:	stp	x19, x20, [sp, #16]
  415a94:	ldr	x20, [x0, #136]
  415a98:	stp	x21, x22, [sp, #32]
  415a9c:	mov	x22, x0
  415aa0:	mov	x0, x20
  415aa4:	stp	x25, x26, [sp, #64]
  415aa8:	bl	440f48 <argp_parse@@Base+0xd060>
  415aac:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  415ab0:	mov	x25, x0
  415ab4:	ldr	x0, [x1, #4016]
  415ab8:	bl	405b90 <wcrtomb@plt+0xf70>
  415abc:	mov	x0, x22
  415ac0:	bl	405688 <wcrtomb@plt+0xa68>
  415ac4:	cbz	x20, 415b7c <wcrtomb@plt+0x10f5c>
  415ac8:	mov	x21, x25
  415acc:	adrp	x26, 483000 <argp_program_version_hook@@Base+0x290>
  415ad0:	stp	x23, x24, [sp, #48]
  415ad4:	adrp	x24, 454000 <_obstack_memory_used@@Base+0x11e10>
  415ad8:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  415adc:	add	x24, x24, #0x6a8
  415ae0:	add	x23, x23, #0xd48
  415ae4:	str	x27, [sp, #80]
  415ae8:	b	415b28 <wcrtomb@plt+0x10f08>
  415aec:	mov	x0, x27
  415af0:	bl	405bd8 <wcrtomb@plt+0xfb8>
  415af4:	mov	x19, x0
  415af8:	mov	x1, x27
  415afc:	cmp	x19, x20
  415b00:	mov	x0, x21
  415b04:	csel	x19, x19, x20, ls  // ls = plast
  415b08:	mov	x2, x19
  415b0c:	add	x21, x21, x19
  415b10:	bl	403f70 <memcpy@plt>
  415b14:	sub	x0, x19, #0x1
  415b18:	add	x0, x27, x0
  415b1c:	bl	405b90 <wcrtomb@plt+0xf70>
  415b20:	subs	x20, x20, x19
  415b24:	b.eq	415b74 <wcrtomb@plt+0x10f54>  // b.none
  415b28:	mov	x0, x20
  415b2c:	bl	4056c8 <wcrtomb@plt+0xaa8>
  415b30:	bl	406220 <wcrtomb@plt+0x1600>
  415b34:	mov	x27, x0
  415b38:	cbnz	x0, 415aec <wcrtomb@plt+0x10ecc>
  415b3c:	ldr	x0, [x26, #952]
  415b40:	cbz	x0, 415b48 <wcrtomb@plt+0x10f28>
  415b44:	blr	x0
  415b48:	mov	x1, x24
  415b4c:	mov	w2, #0x5                   	// #5
  415b50:	mov	x0, #0x0                   	// #0
  415b54:	bl	4049c0 <dcgettext@plt>
  415b58:	mov	w1, #0x0                   	// #0
  415b5c:	mov	x2, x0
  415b60:	mov	w0, #0x1                   	// #1
  415b64:	bl	404050 <error@plt>
  415b68:	mov	w0, #0x2                   	// #2
  415b6c:	str	w0, [x23]
  415b70:	b	415aec <wcrtomb@plt+0x10ecc>
  415b74:	ldp	x23, x24, [sp, #48]
  415b78:	ldr	x27, [sp, #80]
  415b7c:	bl	4056b0 <wcrtomb@plt+0xa90>
  415b80:	mov	w0, #0x1                   	// #1
  415b84:	strb	w0, [x22, #377]
  415b88:	ldp	x19, x20, [sp, #16]
  415b8c:	str	x25, [x22, #384]
  415b90:	ldp	x21, x22, [sp, #32]
  415b94:	ldp	x25, x26, [sp, #64]
  415b98:	ldp	x29, x30, [sp], #96
  415b9c:	ret
  415ba0:	stp	x29, x30, [sp, #-64]!
  415ba4:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  415ba8:	mov	x29, sp
  415bac:	add	x4, sp, #0x30
  415bb0:	stp	x19, x20, [sp, #16]
  415bb4:	mov	x20, x1
  415bb8:	mov	x19, x2
  415bbc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  415bc0:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  415bc4:	add	x1, x1, #0xa70
  415bc8:	str	x21, [sp, #32]
  415bcc:	mov	x21, x0
  415bd0:	bl	4154b0 <wcrtomb@plt+0x10890>
  415bd4:	tst	w0, #0xff
  415bd8:	b.eq	415c24 <wcrtomb@plt+0x11004>  // b.none
  415bdc:	mov	x3, #0xc9ff                	// #51711
  415be0:	mov	x0, x21
  415be4:	add	x4, sp, #0x38
  415be8:	movk	x3, #0x3b9a, lsl #16
  415bec:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  415bf0:	mov	x2, #0x0                   	// #0
  415bf4:	add	x1, x1, #0xa78
  415bf8:	bl	4154b0 <wcrtomb@plt+0x10890>
  415bfc:	tst	w0, #0xff
  415c00:	b.eq	415c24 <wcrtomb@plt+0x11004>  // b.none
  415c04:	ldr	x0, [sp, #48]
  415c08:	ldr	x21, [sp, #32]
  415c0c:	str	x0, [x20]
  415c10:	ldr	x0, [sp, #56]
  415c14:	str	x0, [x19]
  415c18:	ldp	x19, x20, [sp, #16]
  415c1c:	ldp	x29, x30, [sp], #64
  415c20:	ret
  415c24:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  415c28:	ldr	x0, [x0, #952]
  415c2c:	cbz	x0, 415c34 <wcrtomb@plt+0x11014>
  415c30:	blr	x0
  415c34:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  415c38:	ldr	x0, [x0, #776]
  415c3c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  415c40:	mov	x19, x0
  415c44:	mov	w2, #0x5                   	// #5
  415c48:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  415c4c:	mov	x0, #0x0                   	// #0
  415c50:	add	x1, x1, #0x9c8
  415c54:	bl	4049c0 <dcgettext@plt>
  415c58:	mov	x4, x0
  415c5c:	mov	x3, x19
  415c60:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  415c64:	add	x2, x2, #0x9e8
  415c68:	mov	w1, #0x0                   	// #0
  415c6c:	mov	w0, #0x0                   	// #0
  415c70:	bl	404050 <error@plt>
  415c74:	bl	40e770 <wcrtomb@plt+0x9b50>
  415c78:	stp	x29, x30, [sp, #-32]!
  415c7c:	mov	x29, sp
  415c80:	stp	x19, x20, [sp, #16]
  415c84:	mov	x19, x0
  415c88:	ldrb	w0, [x0]
  415c8c:	cbz	w0, 415cc4 <wcrtomb@plt+0x110a4>
  415c90:	mov	x20, #0x0                   	// #0
  415c94:	nop
  415c98:	mov	x0, x19
  415c9c:	bl	403ff0 <strlen@plt>
  415ca0:	add	x0, x0, #0x1
  415ca4:	add	x19, x19, x0
  415ca8:	add	x20, x20, x0
  415cac:	ldrb	w0, [x19]
  415cb0:	cbnz	w0, 415c98 <wcrtomb@plt+0x11078>
  415cb4:	add	x0, x20, #0x1
  415cb8:	ldp	x19, x20, [sp, #16]
  415cbc:	ldp	x29, x30, [sp], #32
  415cc0:	ret
  415cc4:	mov	x0, #0x1                   	// #1
  415cc8:	ldp	x19, x20, [sp, #16]
  415ccc:	ldp	x29, x30, [sp], #32
  415cd0:	ret
  415cd4:	nop
  415cd8:	stp	x29, x30, [sp, #-48]!
  415cdc:	mov	x29, sp
  415ce0:	stp	x19, x20, [sp, #16]
  415ce4:	str	x21, [sp, #32]
  415ce8:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  415cec:	add	x20, x21, #0x870
  415cf0:	ldr	x0, [x20, #8]
  415cf4:	cbz	x0, 415cfc <wcrtomb@plt+0x110dc>
  415cf8:	bl	438850 <argp_parse@@Base+0x4968>
  415cfc:	ldr	x0, [x20, #16]
  415d00:	cbz	x0, 415d08 <wcrtomb@plt+0x110e8>
  415d04:	bl	438850 <argp_parse@@Base+0x4968>
  415d08:	ldr	x19, [x21, #2160]
  415d0c:	cbz	x19, 415d20 <wcrtomb@plt+0x11100>
  415d10:	mov	x0, x19
  415d14:	ldr	x19, [x19]
  415d18:	bl	4146b8 <wcrtomb@plt+0xfa98>
  415d1c:	cbnz	x19, 415d10 <wcrtomb@plt+0x110f0>
  415d20:	str	xzr, [x21, #2160]
  415d24:	str	xzr, [x20, #24]
  415d28:	ldp	x19, x20, [sp, #16]
  415d2c:	ldr	x21, [sp, #32]
  415d30:	ldp	x29, x30, [sp], #48
  415d34:	ret
  415d38:	add	x0, x0, #0x58
  415d3c:	b	41b0b0 <wcrtomb@plt+0x16490>
  415d40:	stp	x29, x30, [sp, #-160]!
  415d44:	mov	x29, sp
  415d48:	stp	x19, x20, [sp, #16]
  415d4c:	mov	x20, x0
  415d50:	ldr	x0, [x0]
  415d54:	bl	4147f8 <wcrtomb@plt+0xfbd8>
  415d58:	cbz	x0, 415d7c <wcrtomb@plt+0x1115c>
  415d5c:	ldr	w1, [x20, #408]
  415d60:	mov	x19, x0
  415d64:	add	x2, sp, #0x20
  415d68:	mov	w0, #0x0                   	// #0
  415d6c:	bl	4049a0 <__fxstat@plt>
  415d70:	cbnz	w0, 415d88 <wcrtomb@plt+0x11168>
  415d74:	ldp	x1, x0, [sp, #120]
  415d78:	stp	x1, x0, [x19, #8]
  415d7c:	ldp	x19, x20, [sp, #16]
  415d80:	ldp	x29, x30, [sp], #160
  415d84:	ret
  415d88:	ldr	x0, [x19, #88]
  415d8c:	bl	41bdb8 <wcrtomb@plt+0x17198>
  415d90:	ldp	x19, x20, [sp, #16]
  415d94:	ldp	x29, x30, [sp], #160
  415d98:	ret
  415d9c:	nop
  415da0:	sub	sp, sp, #0x230
  415da4:	stp	x29, x30, [sp]
  415da8:	mov	x29, sp
  415dac:	stp	x19, x20, [sp, #16]
  415db0:	mov	x19, x0
  415db4:	stp	x21, x22, [sp, #32]
  415db8:	stp	x23, x24, [sp, #48]
  415dbc:	ldr	x23, [x0]
  415dc0:	bl	40c638 <wcrtomb@plt+0x7a18>
  415dc4:	mov	x22, x0
  415dc8:	ldr	x0, [x19, #88]
  415dcc:	str	x0, [sp, #104]
  415dd0:	ldr	x20, [x19, #392]
  415dd4:	cbz	x22, 416134 <wcrtomb@plt+0x11514>
  415dd8:	mov	x0, x19
  415ddc:	bl	40ec10 <wcrtomb@plt+0x9ff0>
  415de0:	mov	x0, x23
  415de4:	bl	441170 <argp_parse@@Base+0xd288>
  415de8:	mov	x21, x0
  415dec:	bl	41ae30 <wcrtomb@plt+0x16210>
  415df0:	cbz	x20, 4160fc <wcrtomb@plt+0x114dc>
  415df4:	add	x3, sp, #0x87
  415df8:	mov	x1, x19
  415dfc:	mov	w2, #0x0                   	// #0
  415e00:	mov	x0, x21
  415e04:	bl	414c78 <wcrtomb@plt+0x10058>
  415e08:	mov	x20, x0
  415e0c:	mov	x0, x21
  415e10:	bl	4047b0 <free@plt>
  415e14:	mov	x0, x23
  415e18:	bl	41bf58 <wcrtomb@plt+0x17338>
  415e1c:	mov	x23, x0
  415e20:	ldr	w0, [x20, #56]
  415e24:	cbnz	w0, 415eac <wcrtomb@plt+0x1128c>
  415e28:	ldr	x0, [x20, #72]
  415e2c:	cbz	x0, 415e80 <wcrtomb@plt+0x11260>
  415e30:	bl	403ff0 <strlen@plt>
  415e34:	mov	x19, x0
  415e38:	add	x0, x0, #0x3
  415e3c:	bl	440f48 <argp_parse@@Base+0xd060>
  415e40:	mov	w1, #0x59                  	// #89
  415e44:	mov	x21, x0
  415e48:	strb	w1, [x0], #1
  415e4c:	add	x2, x19, #0x1
  415e50:	add	x19, x21, x19
  415e54:	ldr	x1, [x20, #72]
  415e58:	bl	403f70 <memcpy@plt>
  415e5c:	strb	wzr, [x19, #2]
  415e60:	mov	x0, x21
  415e64:	mov	x1, #0x0                   	// #0
  415e68:	ldr	x2, [x20, #40]
  415e6c:	str	x2, [x20, #48]
  415e70:	bl	4149e0 <wcrtomb@plt+0xfdc0>
  415e74:	str	x0, [x20, #40]
  415e78:	mov	x0, x21
  415e7c:	bl	4047b0 <free@plt>
  415e80:	mov	x0, x23
  415e84:	bl	41bfd8 <wcrtomb@plt+0x173b8>
  415e88:	mov	x0, x22
  415e8c:	bl	4047b0 <free@plt>
  415e90:	mov	x0, x20
  415e94:	ldp	x29, x30, [sp]
  415e98:	ldp	x19, x20, [sp, #16]
  415e9c:	ldp	x21, x22, [sp, #32]
  415ea0:	ldp	x23, x24, [sp, #48]
  415ea4:	add	sp, sp, #0x230
  415ea8:	ret
  415eac:	stp	x25, x26, [sp, #64]
  415eb0:	cmp	w0, #0x2
  415eb4:	mov	x24, #0x0                   	// #0
  415eb8:	stp	x27, x28, [sp, #80]
  415ebc:	b.eq	415ed4 <wcrtomb@plt+0x112b4>  // b.none
  415ec0:	ldr	w0, [x20, #60]
  415ec4:	tbz	w0, #4, 416188 <wcrtomb@plt+0x11568>
  415ec8:	ldr	x0, [x20, #64]
  415ecc:	ldr	x24, [x0, #48]
  415ed0:	cbz	x24, 4161d4 <wcrtomb@plt+0x115b4>
  415ed4:	ldrb	w0, [x22]
  415ed8:	cbz	w0, 4162ac <wcrtomb@plt+0x1168c>
  415edc:	mov	x25, x22
  415ee0:	mov	x21, #0x0                   	// #0
  415ee4:	mov	x27, #0x0                   	// #0
  415ee8:	mov	x0, x25
  415eec:	bl	403ff0 <strlen@plt>
  415ef0:	add	x1, x0, #0x1
  415ef4:	add	x0, x0, #0x2
  415ef8:	add	x25, x25, x1
  415efc:	add	x27, x27, x0
  415f00:	add	x21, x21, #0x1
  415f04:	ldrb	w0, [x25]
  415f08:	cbnz	w0, 415ee8 <wcrtomb@plt+0x112c8>
  415f0c:	mov	x1, #0x8                   	// #8
  415f10:	mov	x0, x21
  415f14:	bl	441108 <argp_parse@@Base+0xd220>
  415f18:	add	x27, x27, #0x1
  415f1c:	ldrb	w1, [x22]
  415f20:	mov	x25, x0
  415f24:	cbz	w1, 415f4c <wcrtomb@plt+0x1132c>
  415f28:	mov	x28, x25
  415f2c:	mov	x26, x22
  415f30:	str	x26, [x28], #8
  415f34:	mov	x0, x26
  415f38:	bl	403ff0 <strlen@plt>
  415f3c:	add	x0, x0, #0x1
  415f40:	add	x26, x26, x0
  415f44:	ldrb	w0, [x26]
  415f48:	cbnz	w0, 415f30 <wcrtomb@plt+0x11310>
  415f4c:	mov	x1, x21
  415f50:	adrp	x3, 414000 <wcrtomb@plt+0xf3e0>
  415f54:	add	x3, x3, #0x8e0
  415f58:	mov	x2, #0x8                   	// #8
  415f5c:	mov	x0, x25
  415f60:	bl	4041a0 <qsort@plt>
  415f64:	mov	x0, x27
  415f68:	bl	440f48 <argp_parse@@Base+0xd060>
  415f6c:	str	x0, [sp, #112]
  415f70:	mov	x28, x0
  415f74:	cbz	x21, 415fd8 <wcrtomb@plt+0x113b8>
  415f78:	ldr	x28, [sp, #112]
  415f7c:	add	x21, x25, x21, lsl #3
  415f80:	mov	x26, x25
  415f84:	nop
  415f88:	ldr	x27, [x26]
  415f8c:	mov	x0, x24
  415f90:	mov	x1, x27
  415f94:	bl	4148f0 <wcrtomb@plt+0xfcd0>
  415f98:	ldr	x5, [x20, #72]
  415f9c:	add	x4, x28, #0x1
  415fa0:	cmp	x5, #0x0
  415fa4:	cbz	x0, 4160e8 <wcrtomb@plt+0x114c8>
  415fa8:	mov	w0, #0x49                  	// #73
  415fac:	mov	w1, #0x20                  	// #32
  415fb0:	csel	w0, w0, w1, ne  // ne = any
  415fb4:	strb	w0, [x28]
  415fb8:	mov	x28, x4
  415fbc:	nop
  415fc0:	ldrb	w0, [x27], #1
  415fc4:	strb	w0, [x28], #1
  415fc8:	cbnz	w0, 415fc0 <wcrtomb@plt+0x113a0>
  415fcc:	add	x26, x26, #0x8
  415fd0:	cmp	x21, x26
  415fd4:	b.ne	415f88 <wcrtomb@plt+0x11368>  // b.any
  415fd8:	strb	wzr, [x28]
  415fdc:	mov	x1, #0x0                   	// #0
  415fe0:	ldr	x21, [sp, #112]
  415fe4:	ldr	x2, [x20, #40]
  415fe8:	str	x2, [x20, #48]
  415fec:	mov	x0, x21
  415ff0:	bl	4149e0 <wcrtomb@plt+0xfdc0>
  415ff4:	str	x0, [x20, #40]
  415ff8:	mov	x0, x21
  415ffc:	bl	4047b0 <free@plt>
  416000:	mov	x0, x25
  416004:	bl	4047b0 <free@plt>
  416008:	mov	x0, #0x18                  	// #24
  41600c:	ldr	x21, [x20, #40]
  416010:	bl	440f48 <argp_parse@@Base+0xd060>
  416014:	mov	w1, #0x1                   	// #1
  416018:	str	x21, [x0]
  41601c:	str	w1, [x0, #8]
  416020:	mov	x25, x0
  416024:	str	xzr, [x0, #16]
  416028:	bl	414618 <wcrtomb@plt+0xf9f8>
  41602c:	mov	x27, x0
  416030:	cbz	x0, 416094 <wcrtomb@plt+0x11474>
  416034:	add	x0, sp, #0xe0
  416038:	adrp	x28, 483000 <argp_program_version_hook@@Base+0x290>
  41603c:	mov	w26, #0x4e                  	// #78
  416040:	str	x0, [sp, #112]
  416044:	add	x0, x28, #0x1f8
  416048:	str	x0, [sp, #120]
  41604c:	nop
  416050:	add	x24, x27, #0x1
  416054:	mov	x0, x23
  416058:	mov	x1, x24
  41605c:	bl	41c000 <wcrtomb@plt+0x173e0>
  416060:	ldrb	w1, [x27]
  416064:	mov	x21, x0
  416068:	cmp	w1, #0x49
  41606c:	b.eq	416080 <wcrtomb@plt+0x11460>  // b.none
  416070:	mov	x1, x19
  416074:	bl	40ee78 <wcrtomb@plt+0xa258>
  416078:	tst	w0, #0xff
  41607c:	b.eq	4160a8 <wcrtomb@plt+0x11488>  // b.none
  416080:	strb	w26, [x27]
  416084:	mov	x0, x25
  416088:	bl	414618 <wcrtomb@plt+0xf9f8>
  41608c:	mov	x27, x0
  416090:	cbnz	x0, 416050 <wcrtomb@plt+0x11430>
  416094:	mov	x0, x25
  416098:	bl	4047b0 <free@plt>
  41609c:	ldp	x25, x26, [sp, #64]
  4160a0:	ldp	x27, x28, [sp, #80]
  4160a4:	b	415e80 <wcrtomb@plt+0x11260>
  4160a8:	ldr	w28, [x19, #408]
  4160ac:	add	x0, sp, #0x88
  4160b0:	bl	425f70 <wcrtomb@plt+0x21350>
  4160b4:	tbz	w28, #31, 41610c <wcrtomb@plt+0x114ec>
  4160b8:	bl	404ad0 <__errno_location@plt>
  4160bc:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  4160c0:	add	x2, x2, #0xcf0
  4160c4:	neg	w1, w28
  4160c8:	str	w1, [x0]
  4160cc:	mov	x0, x21
  4160d0:	mov	w1, #0x0                   	// #0
  4160d4:	bl	41bde0 <wcrtomb@plt+0x171c0>
  4160d8:	strb	w26, [x27]
  4160dc:	add	x0, sp, #0x88
  4160e0:	bl	425ff8 <wcrtomb@plt+0x213d8>
  4160e4:	b	416084 <wcrtomb@plt+0x11464>
  4160e8:	mov	w0, #0x49                  	// #73
  4160ec:	mov	w1, #0x59                  	// #89
  4160f0:	csel	w0, w0, w1, ne  // ne = any
  4160f4:	strb	w0, [x28]
  4160f8:	b	415fb8 <wcrtomb@plt+0x11398>
  4160fc:	add	x3, sp, #0x87
  416100:	mov	x1, x19
  416104:	mov	w2, #0x20                  	// #32
  416108:	b	415e00 <wcrtomb@plt+0x111e0>
  41610c:	ldp	x3, x0, [sp, #112]
  416110:	mov	w1, w28
  416114:	mov	x2, x24
  416118:	ldr	w4, [x0]
  41611c:	mov	w0, #0x0                   	// #0
  416120:	bl	404c00 <__fxstatat@plt>
  416124:	cbz	w0, 416190 <wcrtomb@plt+0x11570>
  416128:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  41612c:	add	x2, x2, #0xdb8
  416130:	b	4160cc <wcrtomb@plt+0x114ac>
  416134:	mov	x0, x23
  416138:	bl	42a068 <wcrtomb@plt+0x25448>
  41613c:	mov	x0, x19
  416140:	bl	40ec10 <wcrtomb@plt+0x9ff0>
  416144:	mov	x0, x23
  416148:	bl	441170 <argp_parse@@Base+0xd288>
  41614c:	mov	x21, x0
  416150:	bl	41ae30 <wcrtomb@plt+0x16210>
  416154:	cbz	x20, 4161c4 <wcrtomb@plt+0x115a4>
  416158:	mov	x1, x19
  41615c:	add	x3, sp, #0x87
  416160:	mov	w2, #0x0                   	// #0
  416164:	mov	x0, x21
  416168:	bl	414c78 <wcrtomb@plt+0x10058>
  41616c:	mov	x20, x0
  416170:	mov	x0, x21
  416174:	bl	4047b0 <free@plt>
  416178:	mov	x0, x23
  41617c:	bl	41bf58 <wcrtomb@plt+0x17338>
  416180:	mov	x23, x0
  416184:	b	415e80 <wcrtomb@plt+0x11260>
  416188:	ldr	x24, [x20, #40]
  41618c:	b	415ed4 <wcrtomb@plt+0x112b4>
  416190:	ldr	w0, [sp, #240]
  416194:	and	w0, w0, #0xf000
  416198:	cmp	w0, #0x4, lsl #12
  41619c:	b.eq	4161dc <wcrtomb@plt+0x115bc>  // b.none
  4161a0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4161a4:	ldrb	w0, [x0, #29]
  4161a8:	cbz	w0, 41626c <wcrtomb@plt+0x1164c>
  4161ac:	ldr	x1, [sp, #104]
  4161b0:	ldr	x0, [sp, #224]
  4161b4:	cmp	x0, x1
  4161b8:	b.eq	41626c <wcrtomb@plt+0x1164c>  // b.none
  4161bc:	strb	w26, [x27]
  4161c0:	b	4160dc <wcrtomb@plt+0x114bc>
  4161c4:	mov	x1, x19
  4161c8:	add	x3, sp, #0x87
  4161cc:	mov	w2, #0x20                  	// #32
  4161d0:	b	416164 <wcrtomb@plt+0x11544>
  4161d4:	ldr	x24, [x0, #40]
  4161d8:	b	415ed4 <wcrtomb@plt+0x112b4>
  4161dc:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4161e0:	mov	x1, x24
  4161e4:	mov	x0, x19
  4161e8:	ldr	w2, [x2, #652]
  4161ec:	bl	40c748 <wcrtomb@plt+0x7b28>
  4161f0:	mov	w1, w0
  4161f4:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  4161f8:	add	x2, x2, #0xcf0
  4161fc:	tbnz	w0, #31, 4160cc <wcrtomb@plt+0x114ac>
  416200:	ldr	x2, [sp, #112]
  416204:	mov	w0, #0x0                   	// #0
  416208:	str	w1, [sp, #544]
  41620c:	bl	4049a0 <__fxstat@plt>
  416210:	cbnz	w0, 416128 <wcrtomb@plt+0x11508>
  416214:	ldr	w0, [sp, #240]
  416218:	and	w0, w0, #0xf000
  41621c:	cmp	w0, #0x4, lsl #12
  416220:	b.ne	4161a0 <wcrtomb@plt+0x11580>  // b.any
  416224:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416228:	mov	w2, #0x10                  	// #16
  41622c:	ldr	w0, [x0, #620]
  416230:	cbz	w0, 416244 <wcrtomb@plt+0x11624>
  416234:	ldr	w0, [x20, #56]
  416238:	mov	w2, #0x12                  	// #18
  41623c:	cmp	w0, #0x2
  416240:	csel	w2, wzr, w2, ne  // ne = any
  416244:	mov	x3, x27
  416248:	add	x1, sp, #0x88
  41624c:	mov	w0, #0x44                  	// #68
  416250:	strb	w0, [x27]
  416254:	mov	x0, x21
  416258:	str	x19, [sp, #528]
  41625c:	bl	414c78 <wcrtomb@plt+0x10058>
  416260:	add	x0, sp, #0x88
  416264:	bl	40c8b0 <wcrtomb@plt+0x7c90>
  416268:	b	4160dc <wcrtomb@plt+0x114bc>
  41626c:	ldrb	w0, [x27]
  416270:	cmp	w0, #0x59
  416274:	b.eq	4160dc <wcrtomb@plt+0x114bc>  // b.none
  416278:	ldp	x2, x3, [sp, #312]
  41627c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  416280:	add	x1, x0, #0xff0
  416284:	ldr	x0, [x0, #4080]
  416288:	ldr	x1, [x1, #8]
  41628c:	cmp	x2, x0
  416290:	b.lt	4162f4 <wcrtomb@plt+0x116d4>  // b.tstop
  416294:	b.gt	4162a0 <wcrtomb@plt+0x11680>
  416298:	cmp	w3, w1
  41629c:	b.mi	4162f4 <wcrtomb@plt+0x116d4>  // b.first
  4162a0:	mov	w0, #0x59                  	// #89
  4162a4:	strb	w0, [x27]
  4162a8:	b	4160dc <wcrtomb@plt+0x114bc>
  4162ac:	mov	x1, #0x8                   	// #8
  4162b0:	mov	x0, #0x0                   	// #0
  4162b4:	bl	441108 <argp_parse@@Base+0xd220>
  4162b8:	mov	x21, #0x0                   	// #0
  4162bc:	ldrb	w1, [x22]
  4162c0:	mov	x25, x0
  4162c4:	mov	x27, #0x1                   	// #1
  4162c8:	cbnz	w1, 415f28 <wcrtomb@plt+0x11308>
  4162cc:	adrp	x3, 414000 <wcrtomb@plt+0xf3e0>
  4162d0:	add	x3, x3, #0x8e0
  4162d4:	mov	x2, #0x8                   	// #8
  4162d8:	mov	x1, #0x0                   	// #0
  4162dc:	bl	4041a0 <qsort@plt>
  4162e0:	mov	x0, x27
  4162e4:	bl	440f48 <argp_parse@@Base+0xd060>
  4162e8:	mov	x28, x0
  4162ec:	str	x0, [sp, #112]
  4162f0:	b	415fd8 <wcrtomb@plt+0x113b8>
  4162f4:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4162f8:	ldr	w2, [x2, #916]
  4162fc:	cbz	w2, 4161bc <wcrtomb@plt+0x1159c>
  416300:	ldp	x3, x2, [sp, #328]
  416304:	cmp	x0, x3
  416308:	b.gt	4161bc <wcrtomb@plt+0x1159c>
  41630c:	b.lt	4162a0 <wcrtomb@plt+0x11680>  // b.tstop
  416310:	cmp	w2, w1
  416314:	b.pl	4162a0 <wcrtomb@plt+0x11680>  // b.nfrst
  416318:	strb	w26, [x27]
  41631c:	b	4160dc <wcrtomb@plt+0x114bc>
  416320:	cbz	x0, 416334 <wcrtomb@plt+0x11714>
  416324:	ldr	x0, [x0, #40]
  416328:	cbz	x0, 416330 <wcrtomb@plt+0x11710>
  41632c:	ldr	x0, [x0]
  416330:	ret
  416334:	mov	x0, #0x0                   	// #0
  416338:	ret
  41633c:	nop
  416340:	cbz	x0, 416364 <wcrtomb@plt+0x11744>
  416344:	ldr	x0, [x0, #40]
  416348:	cbz	x0, 416364 <wcrtomb@plt+0x11744>
  41634c:	ldr	x0, [x0]
  416350:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  416354:	add	x1, x1, #0xea8
  416358:	cmp	x0, #0x0
  41635c:	csel	x0, x1, x0, eq  // eq = none
  416360:	ret
  416364:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  416368:	add	x0, x0, #0xea8
  41636c:	ret
  416370:	stp	x29, x30, [sp, #-192]!
  416374:	mov	x29, sp
  416378:	stp	x19, x20, [sp, #16]
  41637c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  416380:	stp	x23, x24, [sp, #48]
  416384:	mov	x23, x0
  416388:	ldr	x0, [x20, #2160]
  41638c:	cbz	x0, 416560 <wcrtomb@plt+0x11940>
  416390:	adrp	x4, 404000 <fputs@plt>
  416394:	adrp	x3, 440000 <argp_parse@@Base+0xc118>
  416398:	add	x0, sp, #0x68
  41639c:	add	x4, x4, #0x7b0
  4163a0:	add	x3, x3, #0xf48
  4163a4:	mov	x2, #0x0                   	// #0
  4163a8:	mov	x1, #0x0                   	// #0
  4163ac:	stp	x21, x22, [sp, #32]
  4163b0:	bl	441fe0 <_obstack_begin@@Base>
  4163b4:	cbz	x23, 41666c <wcrtomb@plt+0x11a4c>
  4163b8:	ldr	x0, [x23, #40]
  4163bc:	cbz	x0, 416664 <wcrtomb@plt+0x11a44>
  4163c0:	ldr	x21, [x0]
  4163c4:	mov	x22, #0x0                   	// #0
  4163c8:	cbz	x21, 416438 <wcrtomb@plt+0x11818>
  4163cc:	ldrb	w0, [x21]
  4163d0:	ldr	x24, [sp, #128]
  4163d4:	cbz	w0, 41641c <wcrtomb@plt+0x117fc>
  4163d8:	mov	x19, x21
  4163dc:	nop
  4163e0:	mov	x0, x19
  4163e4:	bl	403ff0 <strlen@plt>
  4163e8:	add	x0, x0, #0x1
  4163ec:	add	x19, x19, x0
  4163f0:	add	x22, x22, x0
  4163f4:	ldrb	w0, [x19]
  4163f8:	cbnz	w0, 4163e0 <wcrtomb@plt+0x117c0>
  4163fc:	ldr	x0, [sp, #136]
  416400:	sub	x0, x0, x24
  416404:	cmp	x0, x22
  416408:	b.cs	41641c <wcrtomb@plt+0x117fc>  // b.hs, b.nlast
  41640c:	mov	x1, x22
  416410:	add	x0, sp, #0x68
  416414:	bl	442010 <_obstack_newchunk@@Base>
  416418:	ldr	x24, [sp, #128]
  41641c:	mov	x1, x21
  416420:	mov	x0, x24
  416424:	mov	x2, x22
  416428:	bl	403f70 <memcpy@plt>
  41642c:	ldr	x0, [sp, #128]
  416430:	add	x0, x0, x22
  416434:	str	x0, [sp, #128]
  416438:	ldr	x19, [x20, #2160]
  41643c:	cbz	x19, 4164c4 <wcrtomb@plt+0x118a4>
  416440:	adrp	x24, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  416444:	add	x24, x24, #0x948
  416448:	stp	x25, x26, [sp, #64]
  41644c:	mov	w25, #0x58                  	// #88
  416450:	str	x27, [sp, #80]
  416454:	nop
  416458:	ldr	w1, [x19, #60]
  41645c:	tbz	w1, #4, 4164b0 <wcrtomb@plt+0x11890>
  416460:	mov	x21, x19
  416464:	b	41646c <wcrtomb@plt+0x1184c>
  416468:	ldr	w1, [x0, #60]
  41646c:	ldr	x0, [x21, #64]
  416470:	and	w1, w1, #0xffffffef
  416474:	cmp	x0, x19
  416478:	b.eq	416570 <wcrtomb@plt+0x11950>  // b.none
  41647c:	str	w1, [x21, #60]
  416480:	mov	x21, x0
  416484:	cbnz	x0, 416468 <wcrtomb@plt+0x11848>
  416488:	mov	x20, x19
  41648c:	b	4164a4 <wcrtomb@plt+0x11884>
  416490:	ldr	x2, [x20, #88]
  416494:	ldr	x1, [x1, #88]
  416498:	bl	415200 <wcrtomb@plt+0x105e0>
  41649c:	ldr	x20, [x20, #64]
  4164a0:	cbz	x20, 4164b0 <wcrtomb@plt+0x11890>
  4164a4:	ldr	x1, [x20, #64]
  4164a8:	add	x0, sp, #0x68
  4164ac:	cbnz	x1, 416490 <wcrtomb@plt+0x11870>
  4164b0:	ldr	x19, [x19]
  4164b4:	cbnz	x19, 416458 <wcrtomb@plt+0x11838>
  4164b8:	ldp	x25, x26, [sp, #64]
  4164bc:	ldr	x27, [sp, #80]
  4164c0:	cbz	x23, 416550 <wcrtomb@plt+0x11930>
  4164c4:	ldp	x1, x0, [sp, #120]
  4164c8:	sub	x1, x0, x1
  4164cc:	cmp	x1, x22
  4164d0:	b.eq	416550 <wcrtomb@plt+0x11930>  // b.none
  4164d4:	ldr	x1, [sp, #136]
  4164d8:	cmp	x0, x1
  4164dc:	b.eq	41667c <wcrtomb@plt+0x11a5c>  // b.none
  4164e0:	add	x1, x0, #0x1
  4164e4:	str	x1, [sp, #128]
  4164e8:	strb	wzr, [x0]
  4164ec:	ldr	x19, [x23, #40]
  4164f0:	ldr	x0, [x19, #24]
  4164f4:	bl	4047b0 <free@plt>
  4164f8:	mov	x0, x19
  4164fc:	bl	4047b0 <free@plt>
  416500:	ldp	x0, x3, [sp, #120]
  416504:	cmp	x3, x0
  416508:	b.eq	416654 <wcrtomb@plt+0x11a34>  // b.none
  41650c:	ldr	x2, [sp, #152]
  416510:	ldr	x1, [sp, #112]
  416514:	add	x3, x3, x2
  416518:	ldr	x4, [sp, #136]
  41651c:	bic	x2, x3, x2
  416520:	str	x2, [sp, #128]
  416524:	sub	x3, x2, x1
  416528:	sub	x1, x4, x1
  41652c:	cmp	x3, x1
  416530:	b.ls	41653c <wcrtomb@plt+0x1191c>  // b.plast
  416534:	mov	x2, x4
  416538:	str	x4, [sp, #128]
  41653c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  416540:	add	x1, x1, #0x900
  416544:	str	x2, [sp, #120]
  416548:	bl	4149e0 <wcrtomb@plt+0xfdc0>
  41654c:	str	x0, [x23, #40]
  416550:	add	x0, sp, #0x68
  416554:	mov	x1, #0x0                   	// #0
  416558:	bl	442160 <_obstack_free@@Base>
  41655c:	ldp	x21, x22, [sp, #32]
  416560:	ldp	x19, x20, [sp, #16]
  416564:	ldp	x23, x24, [sp, #48]
  416568:	ldp	x29, x30, [sp], #192
  41656c:	ret
  416570:	ldr	x0, [x19, #88]
  416574:	str	w1, [x21, #60]
  416578:	bl	435420 <argp_parse@@Base+0x1538>
  41657c:	mov	x27, x0
  416580:	ldp	x1, x0, [sp, #128]
  416584:	cmp	x0, x1
  416588:	b.eq	416640 <wcrtomb@plt+0x11a20>  // b.none
  41658c:	add	x0, x1, #0x1
  416590:	str	x0, [sp, #128]
  416594:	strb	w25, [x1]
  416598:	mov	x0, x27
  41659c:	bl	403ff0 <strlen@plt>
  4165a0:	add	x26, x0, #0x1
  4165a4:	ldp	x0, x1, [sp, #128]
  4165a8:	sub	x1, x1, x0
  4165ac:	cmp	x26, x1
  4165b0:	b.hi	41662c <wcrtomb@plt+0x11a0c>  // b.pmore
  4165b4:	mov	x2, x26
  4165b8:	mov	x1, x27
  4165bc:	bl	403f70 <memcpy@plt>
  4165c0:	mov	x20, x19
  4165c4:	ldr	x1, [x19, #88]
  4165c8:	mov	x2, x24
  4165cc:	ldr	x3, [sp, #128]
  4165d0:	add	x0, sp, #0x68
  4165d4:	add	x26, x3, x26
  4165d8:	str	x26, [sp, #128]
  4165dc:	bl	415200 <wcrtomb@plt+0x105e0>
  4165e0:	cmp	x19, x21
  4165e4:	b.eq	416608 <wcrtomb@plt+0x119e8>  // b.none
  4165e8:	ldr	x1, [x20, #64]
  4165ec:	add	x0, sp, #0x68
  4165f0:	ldr	x2, [x20, #88]
  4165f4:	ldr	x1, [x1, #88]
  4165f8:	bl	415200 <wcrtomb@plt+0x105e0>
  4165fc:	ldr	x20, [x20, #64]
  416600:	cmp	x20, x21
  416604:	b.ne	4165e8 <wcrtomb@plt+0x119c8>  // b.any
  416608:	ldr	x2, [x21, #88]
  41660c:	mov	x1, x24
  416610:	add	x0, sp, #0x68
  416614:	bl	415200 <wcrtomb@plt+0x105e0>
  416618:	mov	x0, x27
  41661c:	bl	4047b0 <free@plt>
  416620:	ldr	x19, [x19]
  416624:	cbnz	x19, 416458 <wcrtomb@plt+0x11838>
  416628:	b	4164b8 <wcrtomb@plt+0x11898>
  41662c:	add	x0, sp, #0x68
  416630:	mov	x1, x26
  416634:	bl	442010 <_obstack_newchunk@@Base>
  416638:	ldr	x0, [sp, #128]
  41663c:	b	4165b4 <wcrtomb@plt+0x11994>
  416640:	mov	x1, #0x1                   	// #1
  416644:	add	x0, sp, #0x68
  416648:	bl	442010 <_obstack_newchunk@@Base>
  41664c:	ldr	x1, [sp, #128]
  416650:	b	41658c <wcrtomb@plt+0x1196c>
  416654:	ldrb	w1, [sp, #184]
  416658:	orr	w1, w1, #0x2
  41665c:	strb	w1, [sp, #184]
  416660:	b	41650c <wcrtomb@plt+0x118ec>
  416664:	mov	x22, #0x0                   	// #0
  416668:	b	416438 <wcrtomb@plt+0x11818>
  41666c:	ldr	x19, [x20, #2160]
  416670:	mov	x22, #0x0                   	// #0
  416674:	cbnz	x19, 416440 <wcrtomb@plt+0x11820>
  416678:	b	416550 <wcrtomb@plt+0x11930>
  41667c:	add	x0, sp, #0x68
  416680:	mov	x1, #0x1                   	// #1
  416684:	bl	442010 <_obstack_newchunk@@Base>
  416688:	ldr	x0, [sp, #128]
  41668c:	b	4164e0 <wcrtomb@plt+0x118c0>
  416690:	stp	x29, x30, [sp, #-96]!
  416694:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  416698:	add	x0, x0, #0xa88
  41669c:	mov	x29, sp
  4166a0:	stp	x19, x20, [sp, #16]
  4166a4:	adrp	x19, 455000 <_obstack_memory_used@@Base+0x12e10>
  4166a8:	add	x19, x19, #0xea8
  4166ac:	stp	x21, x22, [sp, #32]
  4166b0:	bl	4046b0 <puts@plt>
  4166b4:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x12e10>
  4166b8:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x12e10>
  4166bc:	add	x4, x4, #0xab8
  4166c0:	add	x3, x3, #0xac0
  4166c4:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  4166c8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4166cc:	add	x2, x2, #0xac8
  4166d0:	add	x1, x1, #0xad8
  4166d4:	mov	w0, #0x1                   	// #1
  4166d8:	bl	404400 <__printf_chk@plt>
  4166dc:	adrp	x21, 455000 <_obstack_memory_used@@Base+0x12e10>
  4166e0:	adrp	x22, 455000 <_obstack_memory_used@@Base+0x12e10>
  4166e4:	add	x19, x19, #0x8
  4166e8:	add	x21, x21, #0xa80
  4166ec:	add	x22, x22, #0xaf8
  4166f0:	mov	x2, #0x1                   	// #1
  4166f4:	mov	x1, #0x0                   	// #0
  4166f8:	b	416700 <wcrtomb@plt+0x11ae0>
  4166fc:	ldp	x1, x2, [x19, #8]
  416700:	add	x3, sp, #0x30
  416704:	mov	x0, x1
  416708:	bl	41b190 <wcrtomb@plt+0x16570>
  41670c:	ldp	x1, x2, [x19, #8]
  416710:	mov	x20, x0
  416714:	add	x3, sp, #0x48
  416718:	mov	x0, x2
  41671c:	bl	41b190 <wcrtomb@plt+0x16570>
  416720:	mov	x2, x21
  416724:	mov	x4, x0
  416728:	mov	x3, x20
  41672c:	mov	x1, x22
  416730:	mov	w0, #0x1                   	// #1
  416734:	bl	404400 <__printf_chk@plt>
  416738:	ldr	x21, [x19, #24]!
  41673c:	cbnz	x21, 4166fc <wcrtomb@plt+0x11adc>
  416740:	mov	w0, #0xa                   	// #10
  416744:	bl	404b00 <putchar@plt>
  416748:	ldp	x19, x20, [sp, #16]
  41674c:	ldp	x21, x22, [sp, #32]
  416750:	ldp	x29, x30, [sp], #96
  416754:	ret
  416758:	stp	x29, x30, [sp, #-272]!
  41675c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416760:	mov	w3, #0x42                  	// #66
  416764:	mov	x29, sp
  416768:	ldr	w4, [x0, #724]
  41676c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416770:	mov	w1, #0x242                 	// #578
  416774:	mov	w2, #0x1b6                 	// #438
  416778:	ldr	x0, [x0, #776]
  41677c:	cmp	w4, #0x0
  416780:	csel	w1, w3, w1, ne  // ne = any
  416784:	stp	xzr, xzr, [sp, #112]
  416788:	bl	404340 <open@plt>
  41678c:	tbnz	w0, #31, 416b50 <wcrtomb@plt+0x11f30>
  416790:	stp	x19, x20, [sp, #16]
  416794:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  416798:	add	x19, x19, #0x870
  41679c:	mov	w20, w0
  4167a0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4167a4:	add	x1, x1, #0xb18
  4167a8:	bl	404420 <fdopen@plt>
  4167ac:	str	x0, [x19, #32]
  4167b0:	cbz	x0, 416e7c <wcrtomb@plt+0x1225c>
  4167b4:	bl	41eaf8 <wcrtomb@plt+0x19ed8>
  4167b8:	bl	41eb78 <wcrtomb@plt+0x19f58>
  4167bc:	ldr	x3, [x19, #32]
  4167c0:	add	x1, sp, #0x78
  4167c4:	add	x0, sp, #0x70
  4167c8:	mov	w2, #0xa                   	// #10
  4167cc:	bl	404b40 <__getdelim@plt>
  4167d0:	cmp	x0, #0x0
  4167d4:	b.le	416b30 <wcrtomb@plt+0x11f10>
  4167d8:	stp	x21, x22, [sp, #32]
  4167dc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4167e0:	mov	x2, #0x7                   	// #7
  4167e4:	ldr	x21, [sp, #112]
  4167e8:	add	x1, x1, #0xb20
  4167ec:	stp	x23, x24, [sp, #48]
  4167f0:	mov	x0, x21
  4167f4:	bl	4043c0 <strncmp@plt>
  4167f8:	cbnz	w0, 416e9c <wcrtomb@plt+0x1227c>
  4167fc:	ldrb	w0, [x21, #7]
  416800:	add	x20, x21, #0x8
  416804:	cmp	w0, #0x2d
  416808:	b.eq	41684c <wcrtomb@plt+0x11c2c>  // b.none
  41680c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416810:	ldr	x0, [x0, #952]
  416814:	cbz	x0, 41681c <wcrtomb@plt+0x11bfc>
  416818:	blr	x0
  41681c:	mov	w2, #0x5                   	// #5
  416820:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  416824:	mov	x0, #0x0                   	// #0
  416828:	add	x1, x1, #0xb28
  41682c:	bl	4049c0 <dcgettext@plt>
  416830:	mov	x2, x0
  416834:	mov	w1, #0x0                   	// #0
  416838:	mov	w0, #0x1                   	// #1
  41683c:	bl	404050 <error@plt>
  416840:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  416844:	mov	w1, #0x2                   	// #2
  416848:	str	w1, [x0, #3400]
  41684c:	ldrb	w0, [x21, #8]
  416850:	cmp	w0, #0x2d
  416854:	b.eq	4168b4 <wcrtomb@plt+0x11c94>  // b.none
  416858:	adrp	x22, 455000 <_obstack_memory_used@@Base+0x12e10>
  41685c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  416860:	add	x22, x22, #0xb28
  416864:	add	x21, x21, #0xd48
  416868:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  41686c:	nop
  416870:	cbnz	w0, 4168a8 <wcrtomb@plt+0x11c88>
  416874:	ldr	x0, [x23, #952]
  416878:	cbz	x0, 416880 <wcrtomb@plt+0x11c60>
  41687c:	blr	x0
  416880:	mov	x1, x22
  416884:	mov	w2, #0x5                   	// #5
  416888:	mov	x0, #0x0                   	// #0
  41688c:	bl	4049c0 <dcgettext@plt>
  416890:	mov	w1, #0x0                   	// #0
  416894:	mov	x2, x0
  416898:	mov	w0, #0x1                   	// #1
  41689c:	bl	404050 <error@plt>
  4168a0:	mov	w0, #0x2                   	// #2
  4168a4:	str	w0, [x21]
  4168a8:	ldrb	w0, [x20, #1]!
  4168ac:	cmp	w0, #0x2d
  4168b0:	b.ne	416870 <wcrtomb@plt+0x11c50>  // b.any
  4168b4:	add	x0, x20, #0x1
  4168b8:	mov	w3, #0x0                   	// #0
  4168bc:	mov	w2, #0xa                   	// #10
  4168c0:	mov	x1, #0x0                   	// #0
  4168c4:	bl	4044b0 <__strtoul_internal@plt>
  4168c8:	str	x0, [sp, #104]
  4168cc:	cmp	x0, #0x1
  4168d0:	b.ls	416b74 <wcrtomb@plt+0x11f54>  // b.plast
  4168d4:	cmp	x0, #0x2
  4168d8:	b.ne	416ae0 <wcrtomb@plt+0x11ec0>  // b.any
  4168dc:	add	x20, sp, #0xb8
  4168e0:	mov	x2, #0x0                   	// #0
  4168e4:	mov	x1, #0x0                   	// #0
  4168e8:	mov	x0, x20
  4168ec:	adrp	x4, 404000 <fputs@plt>
  4168f0:	adrp	x3, 440000 <argp_parse@@Base+0xc118>
  4168f4:	add	x4, x4, #0x7b0
  4168f8:	add	x3, x3, #0xf48
  4168fc:	stp	x25, x26, [sp, #64]
  416900:	adrp	x24, 455000 <_obstack_memory_used@@Base+0x12e10>
  416904:	adrp	x25, 455000 <_obstack_memory_used@@Base+0x12e10>
  416908:	stp	x27, x28, [sp, #80]
  41690c:	bl	441fe0 <_obstack_begin@@Base>
  416910:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  416914:	ldr	x0, [x19, #32]
  416918:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41691c:	add	x1, x1, #0xff0
  416920:	add	x2, x2, #0xff8
  416924:	add	x26, sp, #0x98
  416928:	add	x25, x25, #0xa80
  41692c:	add	x24, x24, #0xbe8
  416930:	bl	415ba0 <wcrtomb@plt+0x10f80>
  416934:	nop
  416938:	ldr	x0, [x19, #32]
  41693c:	add	x4, sp, #0x80
  416940:	mov	x1, x25
  416944:	mov	x3, #0x1                   	// #1
  416948:	mov	x2, #0x0                   	// #0
  41694c:	bl	4154b0 <wcrtomb@plt+0x10890>
  416950:	tst	w0, #0xff
  416954:	b.eq	416f0c <wcrtomb@plt+0x122ec>  // b.none
  416958:	ldr	x1, [sp, #128]
  41695c:	mov	x2, x26
  416960:	ldr	x0, [x19, #32]
  416964:	cmp	x1, #0x0
  416968:	cset	w23, ne  // ne = any
  41696c:	add	x1, sp, #0x90
  416970:	bl	415ba0 <wcrtomb@plt+0x10f80>
  416974:	ldr	x0, [x19, #32]
  416978:	add	x4, sp, #0x80
  41697c:	mov	x1, x24
  416980:	mov	x3, #0xffffffffffffffff    	// #-1
  416984:	mov	x2, #0x0                   	// #0
  416988:	bl	4154b0 <wcrtomb@plt+0x10890>
  41698c:	tst	w0, #0xff
  416990:	b.eq	4170b4 <wcrtomb@plt+0x12494>  // b.none
  416994:	ldr	x0, [x19, #32]
  416998:	add	x4, sp, #0x80
  41699c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4169a0:	mov	x3, #0xffffffffffffffff    	// #-1
  4169a4:	add	x1, x1, #0xbf0
  4169a8:	mov	x2, #0x0                   	// #0
  4169ac:	ldr	x21, [sp, #128]
  4169b0:	bl	4154b0 <wcrtomb@plt+0x10890>
  4169b4:	tst	w0, #0xff
  4169b8:	b.eq	4170b4 <wcrtomb@plt+0x12494>  // b.none
  4169bc:	ldr	x0, [x19, #32]
  4169c0:	add	x2, sp, #0x88
  4169c4:	mov	x1, x20
  4169c8:	ldr	x22, [sp, #128]
  4169cc:	bl	415378 <wcrtomb@plt+0x10758>
  4169d0:	cbnz	w0, 4170b4 <wcrtomb@plt+0x12494>
  4169d4:	ldp	x28, x2, [sp, #200]
  4169d8:	cmp	x28, x2
  4169dc:	b.eq	416dc8 <wcrtomb@plt+0x121a8>  // b.none
  4169e0:	ldr	x0, [sp, #232]
  4169e4:	ldr	x1, [sp, #192]
  4169e8:	add	x2, x2, x0
  4169ec:	ldr	x3, [sp, #216]
  4169f0:	bic	x0, x2, x0
  4169f4:	str	x0, [sp, #208]
  4169f8:	sub	x2, x0, x1
  4169fc:	sub	x1, x3, x1
  416a00:	cmp	x2, x1
  416a04:	b.ls	416a10 <wcrtomb@plt+0x11df0>  // b.plast
  416a08:	mov	x0, x3
  416a0c:	str	x3, [sp, #208]
  416a10:	str	x0, [sp, #200]
  416a14:	b	416a24 <wcrtomb@plt+0x11e04>
  416a18:	ldr	x0, [sp, #136]
  416a1c:	cmp	x0, #0x1
  416a20:	b.ls	416a38 <wcrtomb@plt+0x11e18>  // b.plast
  416a24:	ldr	x0, [x19, #32]
  416a28:	add	x2, sp, #0x88
  416a2c:	mov	x1, x20
  416a30:	bl	415378 <wcrtomb@plt+0x10758>
  416a34:	cbz	w0, 416a18 <wcrtomb@plt+0x11df8>
  416a38:	ldr	x0, [x19, #32]
  416a3c:	ldp	x1, x2, [x0, #8]
  416a40:	cmp	x1, x2
  416a44:	b.cs	416e4c <wcrtomb@plt+0x1222c>  // b.hs, b.nlast
  416a48:	add	x2, x1, #0x1
  416a4c:	str	x2, [x0, #8]
  416a50:	ldrb	w0, [x1]
  416a54:	cbnz	w0, 417108 <wcrtomb@plt+0x124e8>
  416a58:	ldp	x27, x1, [sp, #200]
  416a5c:	cmp	x27, x1
  416a60:	b.eq	416dd8 <wcrtomb@plt+0x121b8>  // b.none
  416a64:	ldr	x2, [sp, #232]
  416a68:	ldr	x0, [sp, #192]
  416a6c:	add	x1, x1, x2
  416a70:	ldr	x3, [sp, #216]
  416a74:	bic	x2, x1, x2
  416a78:	str	x2, [sp, #208]
  416a7c:	sub	x1, x2, x0
  416a80:	sub	x0, x3, x0
  416a84:	cmp	x1, x0
  416a88:	b.ls	416a94 <wcrtomb@plt+0x11e74>  // b.plast
  416a8c:	mov	x2, x3
  416a90:	str	x3, [sp, #208]
  416a94:	ldp	x8, x9, [sp, #144]
  416a98:	mov	w5, w23
  416a9c:	mov	x4, x22
  416aa0:	mov	x3, x21
  416aa4:	mov	x0, x28
  416aa8:	mov	x7, x27
  416aac:	mov	w6, #0x0                   	// #0
  416ab0:	str	x2, [sp, #200]
  416ab4:	mov	x1, x8
  416ab8:	mov	x2, x9
  416abc:	bl	414b10 <wcrtomb@plt+0xfef0>
  416ac0:	ldr	x0, [sp, #192]
  416ac4:	cmp	x27, x0
  416ac8:	b.ls	416db8 <wcrtomb@plt+0x12198>  // b.plast
  416acc:	ldr	x0, [sp, #216]
  416ad0:	cmp	x27, x0
  416ad4:	b.cs	416db8 <wcrtomb@plt+0x12198>  // b.hs, b.nlast
  416ad8:	stp	x27, x27, [sp, #200]
  416adc:	b	416938 <wcrtomb@plt+0x11d18>
  416ae0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416ae4:	ldr	x0, [x0, #952]
  416ae8:	cbz	x0, 416af0 <wcrtomb@plt+0x11ed0>
  416aec:	blr	x0
  416af0:	mov	w2, #0x5                   	// #5
  416af4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  416af8:	mov	x0, #0x0                   	// #0
  416afc:	add	x1, x1, #0xc28
  416b00:	bl	4049c0 <dcgettext@plt>
  416b04:	mov	x2, x0
  416b08:	ldr	x3, [sp, #104]
  416b0c:	mov	w1, #0x0                   	// #0
  416b10:	mov	w0, #0x1                   	// #1
  416b14:	bl	404050 <error@plt>
  416b18:	ldp	x21, x22, [sp, #32]
  416b1c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  416b20:	ldp	x23, x24, [sp, #48]
  416b24:	mov	w1, #0x2                   	// #2
  416b28:	str	w1, [x0, #3400]
  416b2c:	nop
  416b30:	ldr	x0, [x19, #32]
  416b34:	ldr	w0, [x0]
  416b38:	tbnz	w0, #5, 416b64 <wcrtomb@plt+0x11f44>
  416b3c:	ldr	x0, [sp, #112]
  416b40:	bl	4047b0 <free@plt>
  416b44:	ldp	x19, x20, [sp, #16]
  416b48:	ldp	x29, x30, [sp], #272
  416b4c:	ret
  416b50:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416b54:	ldr	x0, [x0, #776]
  416b58:	bl	429de8 <wcrtomb@plt+0x251c8>
  416b5c:	ldp	x29, x30, [sp], #272
  416b60:	ret
  416b64:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416b68:	ldr	x0, [x0, #776]
  416b6c:	bl	429e20 <wcrtomb@plt+0x25200>
  416b70:	b	416b3c <wcrtomb@plt+0x11f1c>
  416b74:	stp	x27, x28, [sp, #80]
  416b78:	str	xzr, [sp, #144]
  416b7c:	str	xzr, [sp, #160]
  416b80:	ldr	x21, [sp, #112]
  416b84:	b.ne	416fa4 <wcrtomb@plt+0x12384>  // b.any
  416b88:	ldr	x3, [x19, #32]
  416b8c:	add	x28, sp, #0xa0
  416b90:	add	x27, sp, #0x90
  416b94:	mov	x1, x28
  416b98:	mov	x0, x27
  416b9c:	mov	w2, #0xa                   	// #10
  416ba0:	bl	404b40 <__getdelim@plt>
  416ba4:	cmp	x0, #0x0
  416ba8:	b.le	416fac <wcrtomb@plt+0x1238c>
  416bac:	ldr	x0, [sp, #144]
  416bb0:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  416bb4:	add	x21, x22, #0xff0
  416bb8:	add	x20, sp, #0xb8
  416bbc:	mov	x1, x20
  416bc0:	mov	w2, #0x0                   	// #0
  416bc4:	stp	x25, x26, [sp, #64]
  416bc8:	bl	41b348 <wcrtomb@plt+0x16728>
  416bcc:	stp	x0, x1, [x21]
  416bd0:	ldr	x0, [x21, #8]
  416bd4:	tbnz	x0, #63, 4171c0 <wcrtomb@plt+0x125a0>
  416bd8:	ldr	x0, [sp, #184]
  416bdc:	mov	x25, #0x2                   	// #2
  416be0:	ldrb	w1, [x0]
  416be4:	cbz	w1, 416d4c <wcrtomb@plt+0x1212c>
  416be8:	add	x23, x0, #0x1
  416bec:	bl	404ad0 <__errno_location@plt>
  416bf0:	mov	x24, x0
  416bf4:	mov	x1, x20
  416bf8:	mov	w2, #0xa                   	// #10
  416bfc:	mov	x0, x23
  416c00:	mov	w3, #0x0                   	// #0
  416c04:	str	wzr, [x24]
  416c08:	bl	4044b0 <__strtoul_internal@plt>
  416c0c:	ldr	w1, [x24]
  416c10:	mov	x2, #0xc9ff                	// #51711
  416c14:	movk	x2, #0x3b9a, lsl #16
  416c18:	cmp	w1, #0x0
  416c1c:	ccmp	x0, x2, #0x0, eq  // eq = none
  416c20:	b.hi	416f20 <wcrtomb@plt+0x12300>  // b.pmore
  416c24:	cbnz	w1, 416f28 <wcrtomb@plt+0x12308>
  416c28:	ldr	x1, [sp, #184]
  416c2c:	cmp	x23, x1
  416c30:	b.eq	416f28 <wcrtomb@plt+0x12308>  // b.none
  416c34:	str	x0, [x21, #8]
  416c38:	b	416d4c <wcrtomb@plt+0x1212c>
  416c3c:	mov	x0, x24
  416c40:	mov	x1, x20
  416c44:	mov	w2, #0x0                   	// #0
  416c48:	bl	41b348 <wcrtomb@plt+0x16728>
  416c4c:	mov	x23, x0
  416c50:	ldr	x4, [sp, #184]
  416c54:	tbnz	x1, #63, 41718c <wcrtomb@plt+0x1256c>
  416c58:	ldrb	w0, [x4]
  416c5c:	cmp	w0, #0x20
  416c60:	b.ne	41718c <wcrtomb@plt+0x1256c>  // b.any
  416c64:	str	wzr, [x21]
  416c68:	mov	x1, x20
  416c6c:	mov	x0, x4
  416c70:	mov	w3, #0x0                   	// #0
  416c74:	mov	w2, #0xa                   	// #10
  416c78:	str	x4, [sp, #96]
  416c7c:	bl	4044b0 <__strtoul_internal@plt>
  416c80:	mov	x22, x0
  416c84:	ldr	w1, [x21]
  416c88:	mov	x0, #0xc9ff                	// #51711
  416c8c:	movk	x0, #0x3b9a, lsl #16
  416c90:	cmp	w1, #0x0
  416c94:	ccmp	x22, x0, #0x0, eq  // eq = none
  416c98:	ldr	x4, [sp, #96]
  416c9c:	b.hi	416de8 <wcrtomb@plt+0x121c8>  // b.pmore
  416ca0:	cbnz	w1, 416df0 <wcrtomb@plt+0x121d0>
  416ca4:	ldr	x24, [sp, #184]
  416ca8:	cmp	x4, x24
  416cac:	b.eq	416df0 <wcrtomb@plt+0x121d0>  // b.none
  416cb0:	ldrb	w0, [x24]
  416cb4:	cmp	w0, #0x20
  416cb8:	b.ne	416df0 <wcrtomb@plt+0x121d0>  // b.any
  416cbc:	mov	x0, x24
  416cc0:	mov	x1, x20
  416cc4:	mov	x3, #0xffffffffffffffff    	// #-1
  416cc8:	mov	x2, #0x0                   	// #0
  416ccc:	bl	41b1a8 <wcrtomb@plt+0x16588>
  416cd0:	mov	x24, x0
  416cd4:	ldr	w6, [x21]
  416cd8:	ldr	x0, [sp, #184]
  416cdc:	cbnz	w6, 417024 <wcrtomb@plt+0x12404>
  416ce0:	ldrb	w1, [x0]
  416ce4:	cmp	w1, #0x20
  416ce8:	b.ne	417024 <wcrtomb@plt+0x12404>  // b.any
  416cec:	mov	x1, x20
  416cf0:	mov	x3, #0xffffffffffffffff    	// #-1
  416cf4:	mov	x2, #0x0                   	// #0
  416cf8:	bl	41b1a8 <wcrtomb@plt+0x16588>
  416cfc:	ldr	w6, [x21]
  416d00:	mov	x4, x0
  416d04:	ldr	x1, [sp, #184]
  416d08:	cbnz	w6, 416fd0 <wcrtomb@plt+0x123b0>
  416d0c:	ldrb	w0, [x1]
  416d10:	cmp	w0, #0x20
  416d14:	b.ne	416fd0 <wcrtomb@plt+0x123b0>  // b.any
  416d18:	add	x21, x1, #0x1
  416d1c:	str	x4, [sp, #96]
  416d20:	mov	x0, x21
  416d24:	bl	41aba0 <wcrtomb@plt+0x15f80>
  416d28:	ldr	x4, [sp, #96]
  416d2c:	mov	x0, x21
  416d30:	mov	w5, w26
  416d34:	mov	x3, x24
  416d38:	mov	x1, x23
  416d3c:	mov	x2, x22
  416d40:	mov	x7, #0x0                   	// #0
  416d44:	mov	w6, #0x0                   	// #0
  416d48:	bl	414b10 <wcrtomb@plt+0xfef0>
  416d4c:	ldr	x3, [x19, #32]
  416d50:	mov	x1, x28
  416d54:	mov	x0, x27
  416d58:	mov	w2, #0xa                   	// #10
  416d5c:	bl	404b40 <__getdelim@plt>
  416d60:	cmp	w0, #0x0
  416d64:	b.le	416e54 <wcrtomb@plt+0x12234>
  416d68:	ldr	x1, [sp, #144]
  416d6c:	sxtw	x0, w0
  416d70:	sub	x0, x0, #0x1
  416d74:	add	x25, x25, #0x1
  416d78:	ldrb	w3, [x1]
  416d7c:	ldrb	w2, [x1, x0]
  416d80:	cmp	w3, #0x2b
  416d84:	cset	w26, eq  // eq = none
  416d88:	cinc	x24, x1, eq  // eq = none
  416d8c:	cmp	w2, #0xa
  416d90:	b.ne	416d98 <wcrtomb@plt+0x12178>  // b.any
  416d94:	strb	wzr, [x1, x0]
  416d98:	bl	404ad0 <__errno_location@plt>
  416d9c:	mov	x21, x0
  416da0:	ldr	x0, [sp, #104]
  416da4:	mov	x23, #0x0                   	// #0
  416da8:	mov	x22, #0x0                   	// #0
  416dac:	cmp	x0, #0x1
  416db0:	b.ne	416cbc <wcrtomb@plt+0x1209c>  // b.any
  416db4:	b	416c3c <wcrtomb@plt+0x1201c>
  416db8:	mov	x1, x27
  416dbc:	mov	x0, x20
  416dc0:	bl	442160 <_obstack_free@@Base>
  416dc4:	b	416938 <wcrtomb@plt+0x11d18>
  416dc8:	ldrb	w0, [sp, #264]
  416dcc:	orr	w0, w0, #0x2
  416dd0:	strb	w0, [sp, #264]
  416dd4:	b	4169e0 <wcrtomb@plt+0x11dc0>
  416dd8:	ldrb	w0, [sp, #264]
  416ddc:	orr	w0, w0, #0x2
  416de0:	strb	w0, [sp, #264]
  416de4:	b	416a64 <wcrtomb@plt+0x11e44>
  416de8:	mov	w0, #0x22                  	// #34
  416dec:	str	w0, [x21]
  416df0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416df4:	ldr	x0, [x0, #952]
  416df8:	cbz	x0, 416e00 <wcrtomb@plt+0x121e0>
  416dfc:	blr	x0
  416e00:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416e04:	ldr	w20, [x21]
  416e08:	ldr	x0, [x0, #776]
  416e0c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  416e10:	mov	x19, x0
  416e14:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  416e18:	add	x1, x1, #0xb90
  416e1c:	mov	w2, #0x5                   	// #5
  416e20:	mov	x0, #0x0                   	// #0
  416e24:	bl	4049c0 <dcgettext@plt>
  416e28:	mov	x3, x19
  416e2c:	mov	w1, w20
  416e30:	mov	x5, x0
  416e34:	mov	x4, x25
  416e38:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  416e3c:	add	x2, x2, #0xb60
  416e40:	mov	w0, #0x0                   	// #0
  416e44:	bl	404050 <error@plt>
  416e48:	bl	40e770 <wcrtomb@plt+0x9b50>
  416e4c:	bl	404b90 <__uflow@plt>
  416e50:	b	416a54 <wcrtomb@plt+0x11e34>
  416e54:	ldr	x0, [sp, #144]
  416e58:	bl	4047b0 <free@plt>
  416e5c:	ldr	x0, [x19, #32]
  416e60:	ldp	x21, x22, [sp, #32]
  416e64:	ldr	w0, [x0]
  416e68:	ldp	x23, x24, [sp, #48]
  416e6c:	ldp	x25, x26, [sp, #64]
  416e70:	ldp	x27, x28, [sp, #80]
  416e74:	tbz	w0, #5, 416b3c <wcrtomb@plt+0x11f1c>
  416e78:	b	416b64 <wcrtomb@plt+0x11f44>
  416e7c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416e80:	ldr	x0, [x0, #776]
  416e84:	bl	429de8 <wcrtomb@plt+0x251c8>
  416e88:	mov	w0, w20
  416e8c:	bl	4045c0 <close@plt>
  416e90:	ldp	x19, x20, [sp, #16]
  416e94:	ldp	x29, x30, [sp], #272
  416e98:	ret
  416e9c:	stp	x25, x26, [sp, #64]
  416ea0:	stp	x27, x28, [sp, #80]
  416ea4:	str	xzr, [sp, #144]
  416ea8:	str	xzr, [sp, #160]
  416eac:	mov	x0, x21
  416eb0:	bl	404580 <strdup@plt>
  416eb4:	mov	x21, x0
  416eb8:	str	x0, [sp, #144]
  416ebc:	bl	403ff0 <strlen@plt>
  416ec0:	add	x3, x0, #0x1
  416ec4:	add	x20, sp, #0xb8
  416ec8:	mov	w2, #0x0                   	// #0
  416ecc:	mov	x0, x21
  416ed0:	mov	x1, x20
  416ed4:	str	x3, [sp, #160]
  416ed8:	bl	41b348 <wcrtomb@plt+0x16728>
  416edc:	mov	x3, x1
  416ee0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  416ee4:	add	x1, x1, #0xff0
  416ee8:	mov	x2, x0
  416eec:	stp	x2, x3, [x1]
  416ef0:	ldr	x0, [x1, #8]
  416ef4:	tbnz	x0, #63, 41705c <wcrtomb@plt+0x1243c>
  416ef8:	add	x28, sp, #0xa0
  416efc:	add	x27, sp, #0x90
  416f00:	mov	x25, #0x1                   	// #1
  416f04:	str	xzr, [sp, #104]
  416f08:	b	416d4c <wcrtomb@plt+0x1212c>
  416f0c:	ldp	x21, x22, [sp, #32]
  416f10:	ldp	x23, x24, [sp, #48]
  416f14:	ldp	x25, x26, [sp, #64]
  416f18:	ldp	x27, x28, [sp, #80]
  416f1c:	b	416b30 <wcrtomb@plt+0x11f10>
  416f20:	mov	w0, #0x22                  	// #34
  416f24:	str	w0, [x24]
  416f28:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416f2c:	ldr	x0, [x0, #952]
  416f30:	cbz	x0, 416f38 <wcrtomb@plt+0x12318>
  416f34:	blr	x0
  416f38:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416f3c:	ldr	w24, [x24]
  416f40:	mov	x25, #0x2                   	// #2
  416f44:	ldr	x0, [x0, #776]
  416f48:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  416f4c:	mov	x23, x0
  416f50:	mov	w2, #0x5                   	// #5
  416f54:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  416f58:	mov	x0, #0x0                   	// #0
  416f5c:	add	x1, x1, #0xb48
  416f60:	bl	4049c0 <dcgettext@plt>
  416f64:	mov	x5, x0
  416f68:	mov	w1, w24
  416f6c:	mov	w0, #0x0                   	// #0
  416f70:	mov	x3, x23
  416f74:	mov	x4, x25
  416f78:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  416f7c:	add	x2, x2, #0xb60
  416f80:	bl	404050 <error@plt>
  416f84:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  416f88:	mov	w2, #0x2                   	// #2
  416f8c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  416f90:	str	x1, [x22, #4080]
  416f94:	str	w2, [x0, #3400]
  416f98:	mov	x0, #0xffffffffffffffff    	// #-1
  416f9c:	str	x0, [x21, #8]
  416fa0:	b	416d4c <wcrtomb@plt+0x1212c>
  416fa4:	stp	x25, x26, [sp, #64]
  416fa8:	b	416eac <wcrtomb@plt+0x1228c>
  416fac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416fb0:	ldr	x0, [x0, #776]
  416fb4:	bl	429e20 <wcrtomb@plt+0x25200>
  416fb8:	ldr	x0, [sp, #144]
  416fbc:	bl	4047b0 <free@plt>
  416fc0:	ldp	x21, x22, [sp, #32]
  416fc4:	ldp	x23, x24, [sp, #48]
  416fc8:	ldp	x27, x28, [sp, #80]
  416fcc:	b	416b30 <wcrtomb@plt+0x11f10>
  416fd0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416fd4:	ldr	x0, [x0, #952]
  416fd8:	cbz	x0, 416fe4 <wcrtomb@plt+0x123c4>
  416fdc:	blr	x0
  416fe0:	ldr	w6, [x21]
  416fe4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  416fe8:	str	w6, [sp, #96]
  416fec:	ldr	x0, [x0, #776]
  416ff0:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  416ff4:	mov	x19, x0
  416ff8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  416ffc:	add	x1, x1, #0xbd0
  417000:	mov	w2, #0x5                   	// #5
  417004:	mov	x0, #0x0                   	// #0
  417008:	bl	4049c0 <dcgettext@plt>
  41700c:	ldr	w6, [sp, #96]
  417010:	mov	x3, x19
  417014:	mov	x5, x0
  417018:	mov	x4, x25
  41701c:	mov	w1, w6
  417020:	b	416e38 <wcrtomb@plt+0x12218>
  417024:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417028:	ldr	x0, [x0, #952]
  41702c:	cbz	x0, 417038 <wcrtomb@plt+0x12418>
  417030:	blr	x0
  417034:	ldr	w6, [x21]
  417038:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41703c:	str	w6, [sp, #96]
  417040:	ldr	x0, [x0, #776]
  417044:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  417048:	mov	x19, x0
  41704c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417050:	mov	w2, #0x5                   	// #5
  417054:	add	x1, x1, #0xbb8
  417058:	b	417004 <wcrtomb@plt+0x123e4>
  41705c:	mov	x19, #0x1                   	// #1
  417060:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417064:	ldr	x0, [x0, #952]
  417068:	cbz	x0, 417070 <wcrtomb@plt+0x12450>
  41706c:	blr	x0
  417070:	bl	404ad0 <__errno_location@plt>
  417074:	mov	x1, x0
  417078:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41707c:	ldr	x0, [x0, #776]
  417080:	ldr	w21, [x1]
  417084:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  417088:	mov	x20, x0
  41708c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417090:	mov	w2, #0x5                   	// #5
  417094:	add	x1, x1, #0xb48
  417098:	mov	x0, #0x0                   	// #0
  41709c:	bl	4049c0 <dcgettext@plt>
  4170a0:	mov	x5, x0
  4170a4:	mov	x3, x20
  4170a8:	mov	w1, w21
  4170ac:	mov	x4, x19
  4170b0:	b	416e38 <wcrtomb@plt+0x12218>
  4170b4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4170b8:	ldr	x0, [x0, #952]
  4170bc:	cbz	x0, 4170c4 <wcrtomb@plt+0x124a4>
  4170c0:	blr	x0
  4170c4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4170c8:	ldr	x0, [x0, #776]
  4170cc:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4170d0:	mov	x19, x0
  4170d4:	mov	w2, #0x5                   	// #5
  4170d8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4170dc:	mov	x0, #0x0                   	// #0
  4170e0:	add	x1, x1, #0x9c8
  4170e4:	bl	4049c0 <dcgettext@plt>
  4170e8:	mov	x4, x0
  4170ec:	mov	x3, x19
  4170f0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  4170f4:	add	x2, x2, #0x9e8
  4170f8:	mov	w1, #0x0                   	// #0
  4170fc:	mov	w0, #0x0                   	// #0
  417100:	bl	404050 <error@plt>
  417104:	bl	40e770 <wcrtomb@plt+0x9b50>
  417108:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41710c:	ldr	x0, [x0, #952]
  417110:	cbz	x0, 417118 <wcrtomb@plt+0x124f8>
  417114:	blr	x0
  417118:	mov	w2, #0x5                   	// #5
  41711c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417120:	mov	x0, #0x0                   	// #0
  417124:	add	x1, x1, #0xbf8
  417128:	bl	4049c0 <dcgettext@plt>
  41712c:	mov	x20, x0
  417130:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417134:	ldr	x0, [x0, #776]
  417138:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41713c:	mov	x1, x0
  417140:	ldr	x0, [x19, #32]
  417144:	mov	x19, x1
  417148:	bl	404900 <ftello@plt>
  41714c:	add	x1, sp, #0xa0
  417150:	bl	439858 <argp_parse@@Base+0x5970>
  417154:	mov	w2, #0x5                   	// #5
  417158:	mov	x21, x0
  41715c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417160:	mov	x0, #0x0                   	// #0
  417164:	add	x1, x1, #0xc08
  417168:	bl	4049c0 <dcgettext@plt>
  41716c:	mov	x4, x21
  417170:	mov	x5, x0
  417174:	mov	x3, x19
  417178:	mov	x2, x20
  41717c:	mov	w1, #0x0                   	// #0
  417180:	mov	w0, #0x0                   	// #0
  417184:	bl	404050 <error@plt>
  417188:	bl	40e770 <wcrtomb@plt+0x9b50>
  41718c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417190:	ldr	x0, [x0, #952]
  417194:	cbz	x0, 41719c <wcrtomb@plt+0x1257c>
  417198:	blr	x0
  41719c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4171a0:	ldr	w20, [x21]
  4171a4:	ldr	x0, [x0, #776]
  4171a8:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4171ac:	mov	x19, x0
  4171b0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4171b4:	mov	w2, #0x5                   	// #5
  4171b8:	add	x1, x1, #0xb70
  4171bc:	b	416e20 <wcrtomb@plt+0x12200>
  4171c0:	mov	x19, #0x2                   	// #2
  4171c4:	b	417060 <wcrtomb@plt+0x12440>
  4171c8:	stp	x29, x30, [sp, #-80]!
  4171cc:	mov	x29, sp
  4171d0:	stp	x19, x20, [sp, #16]
  4171d4:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4171d8:	add	x20, x20, #0x870
  4171dc:	ldr	x19, [x20, #32]
  4171e0:	cbz	x19, 4172b8 <wcrtomb@plt+0x12698>
  4171e4:	mov	x0, x19
  4171e8:	mov	w2, #0x0                   	// #0
  4171ec:	mov	x1, #0x0                   	// #0
  4171f0:	stp	x21, x22, [sp, #32]
  4171f4:	bl	404780 <fseeko@plt>
  4171f8:	cbnz	w0, 41731c <wcrtomb@plt+0x126fc>
  4171fc:	mov	x0, x19
  417200:	bl	404230 <fileno@plt>
  417204:	bl	4218a8 <wcrtomb@plt+0x1cc88>
  417208:	cbnz	w0, 41730c <wcrtomb@plt+0x126ec>
  41720c:	mov	w5, #0x2                   	// #2
  417210:	mov	w1, #0x1                   	// #1
  417214:	mov	x0, x19
  417218:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x12e10>
  41721c:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x12e10>
  417220:	add	x4, x4, #0xc58
  417224:	add	x3, x3, #0xb20
  417228:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  41722c:	add	x2, x2, #0xc60
  417230:	bl	404700 <__fprintf_chk@plt>
  417234:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417238:	add	x22, x0, #0x290
  41723c:	add	x1, sp, #0x38
  417240:	ldr	x0, [x0, #656]
  417244:	bl	4397d8 <argp_parse@@Base+0x58f0>
  417248:	mov	x21, x0
  41724c:	bl	403ff0 <strlen@plt>
  417250:	mov	x1, x0
  417254:	mov	x3, x19
  417258:	mov	x2, #0x1                   	// #1
  41725c:	mov	x0, x21
  417260:	add	x1, x1, #0x1
  417264:	bl	403fd0 <fwrite_unlocked@plt>
  417268:	ldr	x0, [x22, #8]
  41726c:	add	x1, sp, #0x38
  417270:	bl	4398d8 <argp_parse@@Base+0x59f0>
  417274:	mov	x21, x0
  417278:	bl	403ff0 <strlen@plt>
  41727c:	mov	x1, x0
  417280:	mov	x3, x19
  417284:	mov	x0, x21
  417288:	add	x1, x1, #0x1
  41728c:	mov	x2, #0x1                   	// #1
  417290:	bl	403fd0 <fwrite_unlocked@plt>
  417294:	ldr	w0, [x19]
  417298:	tbz	w0, #5, 4172c4 <wcrtomb@plt+0x126a4>
  41729c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4172a0:	ldr	x0, [x0, #776]
  4172a4:	bl	42a2e8 <wcrtomb@plt+0x256c8>
  4172a8:	mov	x0, x19
  4172ac:	bl	4042a0 <fclose@plt>
  4172b0:	cbnz	w0, 4172f0 <wcrtomb@plt+0x126d0>
  4172b4:	ldp	x21, x22, [sp, #32]
  4172b8:	ldp	x19, x20, [sp, #16]
  4172bc:	ldp	x29, x30, [sp], #80
  4172c0:	ret
  4172c4:	ldr	x0, [x20, #8]
  4172c8:	cbz	x0, 4172a8 <wcrtomb@plt+0x12688>
  4172cc:	mov	x2, x19
  4172d0:	adrp	x1, 415000 <wcrtomb@plt+0x103e0>
  4172d4:	add	x1, x1, #0x830
  4172d8:	bl	438670 <argp_parse@@Base+0x4788>
  4172dc:	ldr	w0, [x19]
  4172e0:	tbnz	w0, #5, 41729c <wcrtomb@plt+0x1267c>
  4172e4:	mov	x0, x19
  4172e8:	bl	4042a0 <fclose@plt>
  4172ec:	cbz	w0, 4172b4 <wcrtomb@plt+0x12694>
  4172f0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4172f4:	ldr	x0, [x0, #776]
  4172f8:	bl	429ce8 <wcrtomb@plt+0x250c8>
  4172fc:	ldp	x19, x20, [sp, #16]
  417300:	ldp	x21, x22, [sp, #32]
  417304:	ldp	x29, x30, [sp], #80
  417308:	ret
  41730c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417310:	ldr	x0, [x0, #776]
  417314:	bl	42a298 <wcrtomb@plt+0x25678>
  417318:	b	41720c <wcrtomb@plt+0x125ec>
  41731c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417320:	ldr	x0, [x0, #776]
  417324:	bl	42a088 <wcrtomb@plt+0x25468>
  417328:	mov	x0, x19
  41732c:	bl	404230 <fileno@plt>
  417330:	bl	4218a8 <wcrtomb@plt+0x1cc88>
  417334:	cbz	w0, 41720c <wcrtomb@plt+0x125ec>
  417338:	b	41730c <wcrtomb@plt+0x126ec>
  41733c:	nop
  417340:	ldrb	w1, [x0, #376]
  417344:	cbz	w1, 417370 <wcrtomb@plt+0x12750>
  417348:	stp	x29, x30, [sp, #-32]!
  41734c:	mov	x29, sp
  417350:	ldr	x2, [x0, #384]
  417354:	str	x19, [sp, #16]
  417358:	mov	x19, x0
  41735c:	cbz	x2, 417378 <wcrtomb@plt+0x12758>
  417360:	mov	w0, w1
  417364:	ldr	x19, [sp, #16]
  417368:	ldp	x29, x30, [sp], #32
  41736c:	ret
  417370:	mov	w0, w1
  417374:	ret
  417378:	bl	415a88 <wcrtomb@plt+0x10e68>
  41737c:	ldrb	w1, [x19, #376]
  417380:	b	417360 <wcrtomb@plt+0x12740>
  417384:	nop
  417388:	stp	x29, x30, [sp, #-240]!
  41738c:	mov	x29, sp
  417390:	stp	x21, x22, [sp, #32]
  417394:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  417398:	add	x22, x22, #0x28
  41739c:	stp	x23, x24, [sp, #48]
  4173a0:	mov	x23, x0
  4173a4:	ldrb	w0, [x22, #376]
  4173a8:	cbnz	w0, 4173c0 <wcrtomb@plt+0x127a0>
  4173ac:	bl	41a238 <wcrtomb@plt+0x15618>
  4173b0:	ldp	x21, x22, [sp, #32]
  4173b4:	ldp	x23, x24, [sp, #48]
  4173b8:	ldp	x29, x30, [sp], #240
  4173bc:	ret
  4173c0:	ldr	x0, [x22, #384]
  4173c4:	cbz	x0, 41769c <wcrtomb@plt+0x12a7c>
  4173c8:	mov	x0, x23
  4173cc:	mov	w1, #0x0                   	// #0
  4173d0:	bl	41c308 <wcrtomb@plt+0x176e8>
  4173d4:	mov	x24, x0
  4173d8:	cbz	x0, 4173ac <wcrtomb@plt+0x1278c>
  4173dc:	stp	x19, x20, [sp, #16]
  4173e0:	ldr	x19, [x22, #384]
  4173e4:	stp	x25, x26, [sp, #64]
  4173e8:	stp	x27, x28, [sp, #80]
  4173ec:	ldrb	w28, [x19]
  4173f0:	cbz	w28, 41796c <wcrtomb@plt+0x12d4c>
  4173f4:	mov	x25, x19
  4173f8:	mov	w21, w28
  4173fc:	mov	w26, #0x0                   	// #0
  417400:	mov	w20, #0x0                   	// #0
  417404:	nop
  417408:	cbz	w20, 417668 <wcrtomb@plt+0x12a48>
  41740c:	cmp	w21, w20
  417410:	b.ne	417848 <wcrtomb@plt+0x12c28>  // b.any
  417414:	cmp	w20, #0x54
  417418:	b.ne	417648 <wcrtomb@plt+0x12a28>  // b.any
  41741c:	ldrb	w0, [x25, #1]
  417420:	cbnz	w0, 417428 <wcrtomb@plt+0x12808>
  417424:	cbz	w26, 417974 <wcrtomb@plt+0x12d54>
  417428:	mov	w20, #0x0                   	// #0
  41742c:	nop
  417430:	mov	x0, x25
  417434:	bl	403ff0 <strlen@plt>
  417438:	add	x0, x0, #0x1
  41743c:	add	x25, x25, x0
  417440:	ldrb	w21, [x25]
  417444:	cbnz	w21, 417408 <wcrtomb@plt+0x127e8>
  417448:	cbnz	w20, 4178f0 <wcrtomb@plt+0x12cd0>
  41744c:	cbz	w26, 417460 <wcrtomb@plt+0x12840>
  417450:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  417454:	ldr	w0, [x0, #408]
  417458:	tbnz	w0, #1, 41792c <wcrtomb@plt+0x12d0c>
  41745c:	nop
  417460:	adrp	x26, 483000 <argp_program_version_hook@@Base+0x290>
  417464:	adrp	x25, 455000 <_obstack_memory_used@@Base+0x12e10>
  417468:	add	x26, x26, #0x380
  41746c:	add	x25, x25, #0xda8
  417470:	mov	x21, #0x0                   	// #0
  417474:	mov	w27, #0x2f                  	// #47
  417478:	b	417488 <wcrtomb@plt+0x12868>
  41747c:	mov	x19, x20
  417480:	ldrb	w28, [x19]
  417484:	cbz	w28, 417500 <wcrtomb@plt+0x128e0>
  417488:	cmp	w28, #0x58
  41748c:	b.eq	4176b0 <wcrtomb@plt+0x12a90>  // b.none
  417490:	mov	x0, x19
  417494:	bl	403ff0 <strlen@plt>
  417498:	add	x20, x0, #0x1
  41749c:	cmp	w28, #0x52
  4174a0:	add	x20, x19, x20
  4174a4:	b.ne	41747c <wcrtomb@plt+0x1285c>  // b.any
  4174a8:	ldrb	w0, [x19, #1]
  4174ac:	add	x28, x20, #0x1
  4174b0:	add	x19, x19, #0x1
  4174b4:	cbnz	w0, 417738 <wcrtomb@plt+0x12b18>
  4174b8:	ldrb	w0, [x20, #1]
  4174bc:	cbnz	w0, 417720 <wcrtomb@plt+0x12b00>
  4174c0:	ldrb	w0, [x19]
  4174c4:	cbz	w0, 417718 <wcrtomb@plt+0x12af8>
  4174c8:	ldrb	w0, [x28]
  4174cc:	cmp	w0, #0x0
  4174d0:	csel	x28, x28, x21, ne  // ne = any
  4174d4:	mov	x1, x28
  4174d8:	mov	x0, x19
  4174dc:	bl	4118e0 <wcrtomb@plt+0xccc0>
  4174e0:	tst	w0, #0xff
  4174e4:	b.eq	4179ac <wcrtomb@plt+0x12d8c>  // b.none
  4174e8:	mov	x0, x20
  4174ec:	bl	403ff0 <strlen@plt>
  4174f0:	add	x19, x0, #0x1
  4174f4:	add	x19, x20, x19
  4174f8:	ldrb	w28, [x19]
  4174fc:	cbnz	w28, 417488 <wcrtomb@plt+0x12868>
  417500:	mov	x0, x21
  417504:	bl	4047b0 <free@plt>
  417508:	ldr	x0, [x22, #384]
  41750c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417510:	add	x1, x1, #0x900
  417514:	bl	4149e0 <wcrtomb@plt+0xfdc0>
  417518:	mov	x21, x0
  41751c:	ldrb	w1, [x24]
  417520:	cbz	w1, 417a90 <wcrtomb@plt+0x12e70>
  417524:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  417528:	adrp	x25, 483000 <argp_program_version_hook@@Base+0x290>
  41752c:	add	x22, x22, #0x1d
  417530:	add	x25, x25, #0x218
  417534:	mov	x19, x24
  417538:	mov	x20, #0x0                   	// #0
  41753c:	adrp	x26, 455000 <_obstack_memory_used@@Base+0x12e10>
  417540:	b	4175b8 <wcrtomb@plt+0x12998>
  417544:	bl	404ad0 <__errno_location@plt>
  417548:	ldr	w0, [x0]
  41754c:	cmp	w0, #0x2
  417550:	b.eq	4175a0 <wcrtomb@plt+0x12980>  // b.none
  417554:	mov	x0, x20
  417558:	bl	41bdb8 <wcrtomb@plt+0x17198>
  41755c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417560:	ldr	x0, [x0, #952]
  417564:	cbz	x0, 41756c <wcrtomb@plt+0x1294c>
  417568:	blr	x0
  41756c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417570:	add	x1, x1, #0xdf0
  417574:	mov	w2, #0x5                   	// #5
  417578:	mov	x0, #0x0                   	// #0
  41757c:	bl	4049c0 <dcgettext@plt>
  417580:	mov	x27, x0
  417584:	mov	x0, x20
  417588:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41758c:	mov	x2, x27
  417590:	mov	x3, x0
  417594:	mov	w1, #0x0                   	// #0
  417598:	mov	w0, #0x0                   	// #0
  41759c:	bl	404050 <error@plt>
  4175a0:	mov	x0, x19
  4175a4:	bl	403ff0 <strlen@plt>
  4175a8:	add	x1, x0, #0x1
  4175ac:	add	x19, x19, x1
  4175b0:	ldrb	w0, [x19]
  4175b4:	cbz	w0, 4177e4 <wcrtomb@plt+0x12bc4>
  4175b8:	mov	x0, x20
  4175bc:	bl	4047b0 <free@plt>
  4175c0:	mov	x1, x19
  4175c4:	mov	x0, x23
  4175c8:	bl	41eba0 <wcrtomb@plt+0x19f80>
  4175cc:	mov	x20, x0
  4175d0:	add	x1, sp, #0x70
  4175d4:	bl	41b9a0 <wcrtomb@plt+0x16d80>
  4175d8:	cbnz	w0, 417544 <wcrtomb@plt+0x12924>
  4175dc:	mov	x1, x19
  4175e0:	mov	x0, x21
  4175e4:	bl	4148f0 <wcrtomb@plt+0xfcd0>
  4175e8:	cbz	x0, 417610 <wcrtomb@plt+0x129f0>
  4175ec:	ldrb	w0, [x0]
  4175f0:	cmp	w0, #0x44
  4175f4:	b.eq	417820 <wcrtomb@plt+0x12c00>  // b.none
  4175f8:	cmp	w0, #0x59
  4175fc:	b.ne	4175a0 <wcrtomb@plt+0x12980>  // b.any
  417600:	ldr	w0, [sp, #128]
  417604:	and	w0, w0, #0xf000
  417608:	cmp	w0, #0x4, lsl #12
  41760c:	b.ne	4175a0 <wcrtomb@plt+0x12980>  // b.any
  417610:	ldrb	w0, [x22]
  417614:	cbz	w0, 417750 <wcrtomb@plt+0x12b30>
  417618:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41761c:	ldr	x1, [sp, #112]
  417620:	ldr	x0, [x0, #768]
  417624:	cmp	x1, x0
  417628:	b.eq	417750 <wcrtomb@plt+0x12b30>  // b.none
  41762c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417630:	ldr	x0, [x0, #952]
  417634:	cbz	x0, 41763c <wcrtomb@plt+0x12a1c>
  417638:	blr	x0
  41763c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417640:	add	x1, x1, #0xe20
  417644:	b	417574 <wcrtomb@plt+0x12954>
  417648:	cmp	w20, #0x52
  41764c:	b.ne	417430 <wcrtomb@plt+0x12810>  // b.any
  417650:	ldrb	w0, [x25, #1]
  417654:	cbnz	w0, 417688 <wcrtomb@plt+0x12a68>
  417658:	cbz	w26, 417a70 <wcrtomb@plt+0x12e50>
  41765c:	mov	w20, #0x54                  	// #84
  417660:	mov	w26, #0x0                   	// #0
  417664:	b	417430 <wcrtomb@plt+0x12810>
  417668:	cmp	w21, #0x54
  41766c:	b.eq	4179cc <wcrtomb@plt+0x12dac>  // b.none
  417670:	cmp	w21, #0x58
  417674:	b.eq	417690 <wcrtomb@plt+0x12a70>  // b.none
  417678:	cmp	w21, #0x52
  41767c:	b.ne	417430 <wcrtomb@plt+0x12810>  // b.any
  417680:	ldrb	w0, [x25, #1]
  417684:	cbz	w0, 417658 <wcrtomb@plt+0x12a38>
  417688:	mov	w20, #0x54                  	// #84
  41768c:	b	417430 <wcrtomb@plt+0x12810>
  417690:	cbnz	w26, 4179ec <wcrtomb@plt+0x12dcc>
  417694:	mov	w26, #0x1                   	// #1
  417698:	b	417430 <wcrtomb@plt+0x12810>
  41769c:	mov	x0, x22
  4176a0:	bl	415a88 <wcrtomb@plt+0x10e68>
  4176a4:	ldrb	w0, [x22, #376]
  4176a8:	cbnz	w0, 4173c8 <wcrtomb@plt+0x127a8>
  4176ac:	b	4173ac <wcrtomb@plt+0x1278c>
  4176b0:	add	x28, x19, #0x1
  4176b4:	mov	x0, x28
  4176b8:	bl	403ff0 <strlen@plt>
  4176bc:	mov	x20, x0
  4176c0:	mov	x0, x21
  4176c4:	add	x1, x20, #0xc
  4176c8:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  4176cc:	mov	x1, x28
  4176d0:	mov	x21, x0
  4176d4:	mov	x2, x20
  4176d8:	bl	403f70 <memcpy@plt>
  4176dc:	add	x1, x20, #0x1
  4176e0:	ldur	w3, [x25, #7]
  4176e4:	add	x2, x21, x1
  4176e8:	strb	w27, [x21, x20]
  4176ec:	ldr	x4, [x25]
  4176f0:	str	x4, [x21, x1]
  4176f4:	stur	w3, [x2, #7]
  4176f8:	mov	x0, x21
  4176fc:	bl	404640 <mkdtemp@plt>
  417700:	cbz	x0, 417a0c <wcrtomb@plt+0x12dec>
  417704:	mov	x0, x19
  417708:	bl	403ff0 <strlen@plt>
  41770c:	add	x0, x0, #0x1
  417710:	add	x19, x19, x0
  417714:	b	417480 <wcrtomb@plt+0x12860>
  417718:	mov	x19, x21
  41771c:	b	4174d4 <wcrtomb@plt+0x128b4>
  417720:	ldrb	w2, [x26]
  417724:	mov	x0, x28
  417728:	mov	w1, #0x0                   	// #0
  41772c:	bl	42a438 <wcrtomb@plt+0x25818>
  417730:	mov	x28, x0
  417734:	b	4174c0 <wcrtomb@plt+0x128a0>
  417738:	ldrb	w2, [x26]
  41773c:	mov	x0, x19
  417740:	mov	w1, #0x0                   	// #0
  417744:	bl	42a438 <wcrtomb@plt+0x25818>
  417748:	mov	x19, x0
  41774c:	b	4174b8 <wcrtomb@plt+0x12898>
  417750:	ldrb	w0, [x25]
  417754:	cbnz	w0, 417834 <wcrtomb@plt+0x12c14>
  417758:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41775c:	ldr	w0, [x0, #588]
  417760:	cbnz	w0, 4178a0 <wcrtomb@plt+0x12c80>
  417764:	mov	x0, x20
  417768:	mov	w1, #0x1                   	// #1
  41776c:	bl	41c400 <wcrtomb@plt+0x177e0>
  417770:	cbnz	w0, 4175a0 <wcrtomb@plt+0x12980>
  417774:	bl	404ad0 <__errno_location@plt>
  417778:	ldr	w28, [x0]
  41777c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  417780:	ldr	x1, [x1, #952]
  417784:	cbz	x1, 41778c <wcrtomb@plt+0x12b6c>
  417788:	blr	x1
  41778c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417790:	add	x1, x1, #0xe70
  417794:	mov	w2, #0x5                   	// #5
  417798:	mov	x0, #0x0                   	// #0
  41779c:	bl	4049c0 <dcgettext@plt>
  4177a0:	mov	x27, x0
  4177a4:	mov	x0, x20
  4177a8:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4177ac:	mov	x2, x27
  4177b0:	mov	x3, x0
  4177b4:	mov	w1, w28
  4177b8:	mov	w0, #0x0                   	// #0
  4177bc:	bl	404050 <error@plt>
  4177c0:	mov	w1, #0x2                   	// #2
  4177c4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4177c8:	str	w1, [x0, #3400]
  4177cc:	mov	x0, x19
  4177d0:	bl	403ff0 <strlen@plt>
  4177d4:	add	x1, x0, #0x1
  4177d8:	add	x19, x19, x1
  4177dc:	ldrb	w0, [x19]
  4177e0:	cbnz	w0, 4175b8 <wcrtomb@plt+0x12998>
  4177e4:	mov	x0, x20
  4177e8:	bl	4047b0 <free@plt>
  4177ec:	ldr	x0, [x21, #24]
  4177f0:	bl	4047b0 <free@plt>
  4177f4:	mov	x0, x21
  4177f8:	bl	4047b0 <free@plt>
  4177fc:	mov	x0, x24
  417800:	bl	4047b0 <free@plt>
  417804:	ldp	x19, x20, [sp, #16]
  417808:	ldp	x21, x22, [sp, #32]
  41780c:	ldp	x23, x24, [sp, #48]
  417810:	ldp	x25, x26, [sp, #64]
  417814:	ldp	x27, x28, [sp, #80]
  417818:	ldp	x29, x30, [sp], #240
  41781c:	ret
  417820:	ldr	w0, [sp, #128]
  417824:	and	w0, w0, #0xf000
  417828:	cmp	w0, #0x4, lsl #12
  41782c:	b.ne	417610 <wcrtomb@plt+0x129f0>  // b.any
  417830:	b	4175a0 <wcrtomb@plt+0x12980>
  417834:	mov	x1, x20
  417838:	add	x0, x26, #0x348
  41783c:	bl	422f70 <wcrtomb@plt+0x1e350>
  417840:	cbnz	w0, 417758 <wcrtomb@plt+0x12b38>
  417844:	b	4175a0 <wcrtomb@plt+0x12980>
  417848:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41784c:	ldr	x0, [x0, #952]
  417850:	cbz	x0, 417858 <wcrtomb@plt+0x12c38>
  417854:	blr	x0
  417858:	mov	w2, #0x5                   	// #5
  41785c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417860:	mov	x0, #0x0                   	// #0
  417864:	add	x1, x1, #0xc70
  417868:	bl	4049c0 <dcgettext@plt>
  41786c:	mov	x2, x0
  417870:	mov	w4, w21
  417874:	mov	w3, w20
  417878:	mov	w1, #0x0                   	// #0
  41787c:	mov	w0, #0x0                   	// #0
  417880:	bl	404050 <error@plt>
  417884:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  417888:	mov	w1, #0x2                   	// #2
  41788c:	ldp	x19, x20, [sp, #16]
  417890:	str	w1, [x0, #3400]
  417894:	ldp	x25, x26, [sp, #64]
  417898:	ldp	x27, x28, [sp, #80]
  41789c:	b	4173ac <wcrtomb@plt+0x1278c>
  4178a0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4178a4:	mov	w2, #0x5                   	// #5
  4178a8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4178ac:	add	x1, x1, #0xe58
  4178b0:	ldr	x28, [x0, #3872]
  4178b4:	mov	x0, #0x0                   	// #0
  4178b8:	bl	4049c0 <dcgettext@plt>
  4178bc:	mov	x27, x0
  4178c0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4178c4:	mov	x0, x20
  4178c8:	ldr	x3, [x1, #3488]
  4178cc:	str	x3, [sp, #104]
  4178d0:	bl	440248 <argp_parse@@Base+0xc360>
  4178d4:	mov	x4, x0
  4178d8:	ldr	x3, [sp, #104]
  4178dc:	mov	x2, x27
  4178e0:	mov	x0, x28
  4178e4:	mov	w1, #0x1                   	// #1
  4178e8:	bl	404700 <__fprintf_chk@plt>
  4178ec:	b	417764 <wcrtomb@plt+0x12b44>
  4178f0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4178f4:	ldr	x0, [x0, #952]
  4178f8:	cbz	x0, 417900 <wcrtomb@plt+0x12ce0>
  4178fc:	blr	x0
  417900:	mov	w2, #0x5                   	// #5
  417904:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417908:	mov	x0, #0x0                   	// #0
  41790c:	add	x1, x1, #0xd48
  417910:	bl	4049c0 <dcgettext@plt>
  417914:	mov	x2, x0
  417918:	mov	w3, w20
  41791c:	mov	w1, #0x0                   	// #0
  417920:	mov	w0, #0x0                   	// #0
  417924:	bl	404050 <error@plt>
  417928:	b	417884 <wcrtomb@plt+0x12c64>
  41792c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417930:	ldr	x0, [x0, #952]
  417934:	cbz	x0, 41793c <wcrtomb@plt+0x12d1c>
  417938:	blr	x0
  41793c:	mov	w2, #0x5                   	// #5
  417940:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417944:	mov	x0, #0x0                   	// #0
  417948:	add	x1, x1, #0xd80
  41794c:	bl	4049c0 <dcgettext@plt>
  417950:	mov	x2, x0
  417954:	mov	w1, #0x0                   	// #0
  417958:	mov	w0, #0x0                   	// #0
  41795c:	bl	404050 <error@plt>
  417960:	ldr	x19, [x22, #384]
  417964:	ldrb	w28, [x19]
  417968:	cbnz	w28, 417460 <wcrtomb@plt+0x12840>
  41796c:	mov	x21, #0x0                   	// #0
  417970:	b	417500 <wcrtomb@plt+0x128e0>
  417974:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417978:	ldr	x0, [x0, #952]
  41797c:	cbz	x0, 417984 <wcrtomb@plt+0x12d64>
  417980:	blr	x0
  417984:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417988:	add	x1, x1, #0xd20
  41798c:	mov	w2, #0x5                   	// #5
  417990:	mov	x0, #0x0                   	// #0
  417994:	bl	4049c0 <dcgettext@plt>
  417998:	mov	w1, #0x0                   	// #0
  41799c:	mov	x2, x0
  4179a0:	mov	w0, #0x0                   	// #0
  4179a4:	bl	404050 <error@plt>
  4179a8:	b	417884 <wcrtomb@plt+0x12c64>
  4179ac:	mov	x0, x21
  4179b0:	bl	4047b0 <free@plt>
  4179b4:	mov	x0, x24
  4179b8:	bl	4047b0 <free@plt>
  4179bc:	ldp	x19, x20, [sp, #16]
  4179c0:	ldp	x25, x26, [sp, #64]
  4179c4:	ldp	x27, x28, [sp, #80]
  4179c8:	b	4173ac <wcrtomb@plt+0x1278c>
  4179cc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4179d0:	ldr	x0, [x0, #952]
  4179d4:	cbz	x0, 4179dc <wcrtomb@plt+0x12dbc>
  4179d8:	blr	x0
  4179dc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4179e0:	mov	w2, #0x5                   	// #5
  4179e4:	add	x1, x1, #0xcf0
  4179e8:	b	417990 <wcrtomb@plt+0x12d70>
  4179ec:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4179f0:	ldr	x0, [x0, #952]
  4179f4:	cbz	x0, 4179fc <wcrtomb@plt+0x12ddc>
  4179f8:	blr	x0
  4179fc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417a00:	mov	w2, #0x5                   	// #5
  417a04:	add	x1, x1, #0xca0
  417a08:	b	417990 <wcrtomb@plt+0x12d70>
  417a0c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417a10:	ldr	x0, [x0, #952]
  417a14:	cbz	x0, 417a1c <wcrtomb@plt+0x12dfc>
  417a18:	blr	x0
  417a1c:	bl	404ad0 <__errno_location@plt>
  417a20:	mov	x3, x0
  417a24:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417a28:	add	x1, x1, #0xdb8
  417a2c:	mov	w2, #0x5                   	// #5
  417a30:	mov	x0, #0x0                   	// #0
  417a34:	ldr	w20, [x3]
  417a38:	bl	4049c0 <dcgettext@plt>
  417a3c:	mov	x19, x0
  417a40:	mov	x0, x21
  417a44:	bl	440248 <argp_parse@@Base+0xc360>
  417a48:	mov	x3, x0
  417a4c:	mov	x2, x19
  417a50:	mov	w1, w20
  417a54:	mov	w0, #0x0                   	// #0
  417a58:	bl	404050 <error@plt>
  417a5c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  417a60:	mov	w2, #0x2                   	// #2
  417a64:	mov	x0, x21
  417a68:	str	w2, [x1, #3400]
  417a6c:	b	4179b0 <wcrtomb@plt+0x12d90>
  417a70:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417a74:	ldr	x0, [x0, #952]
  417a78:	cbz	x0, 417a80 <wcrtomb@plt+0x12e60>
  417a7c:	blr	x0
  417a80:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417a84:	mov	w2, #0x5                   	// #5
  417a88:	add	x1, x1, #0xcc8
  417a8c:	b	417990 <wcrtomb@plt+0x12d70>
  417a90:	mov	x20, #0x0                   	// #0
  417a94:	b	4177e4 <wcrtomb@plt+0x12bc4>
  417a98:	cbz	x1, 417ba8 <wcrtomb@plt+0x12f88>
  417a9c:	stp	x29, x30, [sp, #-80]!
  417aa0:	mov	x29, sp
  417aa4:	stp	x19, x20, [sp, #16]
  417aa8:	add	x20, x0, x1
  417aac:	add	x19, x0, #0x1
  417ab0:	stp	x21, x22, [sp, #32]
  417ab4:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  417ab8:	add	x21, x21, #0xf20
  417abc:	stp	x23, x24, [sp, #48]
  417ac0:	mov	x23, #0x4401                	// #17409
  417ac4:	mov	w22, #0xa                   	// #10
  417ac8:	mov	x24, #0x1                   	// #1
  417acc:	movk	x23, #0x31, lsl #16
  417ad0:	str	x25, [sp, #64]
  417ad4:	mov	w25, #0x0                   	// #0
  417ad8:	ldurb	w0, [x19, #-1]
  417adc:	ldr	x2, [x21]
  417ae0:	cbz	w0, 417b3c <wcrtomb@plt+0x12f1c>
  417ae4:	sub	w1, w0, #0x44
  417ae8:	and	w1, w1, #0xff
  417aec:	cmp	w1, #0x15
  417af0:	b.hi	417b00 <wcrtomb@plt+0x12ee0>  // b.pmore
  417af4:	lsl	x1, x24, x1
  417af8:	tst	x1, x23
  417afc:	b.ne	417b60 <wcrtomb@plt+0x12f40>  // b.any
  417b00:	ldp	x1, x3, [x2, #40]
  417b04:	cmp	x1, x3
  417b08:	b.cs	417b88 <wcrtomb@plt+0x12f68>  // b.hs, b.nlast
  417b0c:	add	x3, x1, #0x1
  417b10:	str	x3, [x2, #40]
  417b14:	strb	w0, [x1]
  417b18:	sub	x0, x20, x19
  417b1c:	add	x19, x19, #0x1
  417b20:	cbnz	x0, 417ad8 <wcrtomb@plt+0x12eb8>
  417b24:	ldp	x19, x20, [sp, #16]
  417b28:	ldp	x21, x22, [sp, #32]
  417b2c:	ldp	x23, x24, [sp, #48]
  417b30:	ldr	x25, [sp, #64]
  417b34:	ldp	x29, x30, [sp], #80
  417b38:	ret
  417b3c:	ldp	x0, x1, [x2, #40]
  417b40:	cmp	x0, x1
  417b44:	b.cs	417b98 <wcrtomb@plt+0x12f78>  // b.hs, b.nlast
  417b48:	add	x1, x0, #0x1
  417b4c:	str	x1, [x2, #40]
  417b50:	strb	w22, [x0]
  417b54:	sub	x0, x20, x19
  417b58:	mov	w25, #0x0                   	// #0
  417b5c:	b	417b1c <wcrtomb@plt+0x12efc>
  417b60:	mov	x1, x2
  417b64:	bl	404170 <fputc@plt>
  417b68:	cbz	w25, 417b78 <wcrtomb@plt+0x12f58>
  417b6c:	sub	x0, x20, x19
  417b70:	mov	w25, #0x1                   	// #1
  417b74:	b	417b1c <wcrtomb@plt+0x12efc>
  417b78:	ldr	x1, [x21]
  417b7c:	mov	w0, #0x20                  	// #32
  417b80:	bl	404170 <fputc@plt>
  417b84:	b	417b6c <wcrtomb@plt+0x12f4c>
  417b88:	mov	w1, w0
  417b8c:	mov	x0, x2
  417b90:	bl	404680 <__overflow@plt>
  417b94:	b	417b18 <wcrtomb@plt+0x12ef8>
  417b98:	mov	x0, x2
  417b9c:	mov	w1, #0xa                   	// #10
  417ba0:	bl	404680 <__overflow@plt>
  417ba4:	b	417b54 <wcrtomb@plt+0x12f34>
  417ba8:	ret
  417bac:	nop
  417bb0:	stp	x29, x30, [sp, #-32]!
  417bb4:	mov	x29, sp
  417bb8:	ldr	w1, [x1]
  417bbc:	str	x19, [sp, #16]
  417bc0:	cmp	w1, #0x2
  417bc4:	b.eq	417bf8 <wcrtomb@plt+0x12fd8>  // b.none
  417bc8:	mov	x19, x0
  417bcc:	cmp	w1, #0x4
  417bd0:	b.eq	417be8 <wcrtomb@plt+0x12fc8>  // b.none
  417bd4:	cmp	w1, #0x1
  417bd8:	b.eq	417c3c <wcrtomb@plt+0x1301c>  // b.none
  417bdc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417be0:	ldr	x1, [x0, #824]
  417be4:	cbnz	x1, 417c18 <wcrtomb@plt+0x12ff8>
  417be8:	mov	x0, x19
  417bec:	ldr	x19, [sp, #16]
  417bf0:	ldp	x29, x30, [sp], #32
  417bf4:	ret
  417bf8:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  417bfc:	mov	w1, #0x1                   	// #1
  417c00:	ldrb	w2, [x2, #896]
  417c04:	bl	42a438 <wcrtomb@plt+0x25818>
  417c08:	mov	x19, x0
  417c0c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417c10:	ldr	x1, [x0, #824]
  417c14:	cbz	x1, 417be8 <wcrtomb@plt+0x12fc8>
  417c18:	mov	x0, x19
  417c1c:	bl	41ec30 <wcrtomb@plt+0x1a010>
  417c20:	cmn	x0, #0x1
  417c24:	b.eq	417c54 <wcrtomb@plt+0x13034>  // b.none
  417c28:	add	x19, x19, x0
  417c2c:	mov	x0, x19
  417c30:	ldr	x19, [sp, #16]
  417c34:	ldp	x29, x30, [sp], #32
  417c38:	ret
  417c3c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  417c40:	mov	w1, #0x0                   	// #0
  417c44:	ldrb	w2, [x2, #896]
  417c48:	bl	42a438 <wcrtomb@plt+0x25818>
  417c4c:	mov	x19, x0
  417c50:	b	417bdc <wcrtomb@plt+0x12fbc>
  417c54:	mov	x0, x19
  417c58:	bl	403ff0 <strlen@plt>
  417c5c:	add	x19, x19, x0
  417c60:	b	417c2c <wcrtomb@plt+0x1300c>
  417c64:	nop
  417c68:	sub	sp, sp, #0x490
  417c6c:	stp	x29, x30, [sp]
  417c70:	mov	x29, sp
  417c74:	stp	x19, x20, [sp, #16]
  417c78:	mov	x20, x2
  417c7c:	stp	x21, x22, [sp, #32]
  417c80:	and	w21, w6, #0xff
  417c84:	stp	x23, x24, [sp, #48]
  417c88:	add	x23, x0, x1
  417c8c:	stp	x25, x26, [sp, #64]
  417c90:	mov	x26, x0
  417c94:	stp	x27, x28, [sp, #80]
  417c98:	ldrb	w0, [x0]
  417c9c:	cmp	w0, #0x0
  417ca0:	cinc	x19, x26, eq  // eq = none
  417ca4:	cmp	x23, x19
  417ca8:	b.eq	417db8 <wcrtomb@plt+0x13198>  // b.none
  417cac:	mov	x28, x1
  417cb0:	mov	x24, x3
  417cb4:	mov	x22, x4
  417cb8:	and	w25, w5, #0xff
  417cbc:	bl	404740 <__ctype_b_loc@plt>
  417cc0:	mov	x27, x0
  417cc4:	ldr	x2, [x0]
  417cc8:	b	417cd8 <wcrtomb@plt+0x130b8>
  417ccc:	add	x19, x19, #0x1
  417cd0:	cmp	x23, x19
  417cd4:	b.eq	417db8 <wcrtomb@plt+0x13198>  // b.none
  417cd8:	ldrb	w5, [x19]
  417cdc:	ubfiz	x6, x5, #1, #8
  417ce0:	ldrh	w6, [x2, x6]
  417ce4:	tbnz	w6, #13, 417ccc <wcrtomb@plt+0x130ac>
  417ce8:	sub	w7, w5, #0x30
  417cec:	neg	x3, x24
  417cf0:	cmp	w7, #0x7
  417cf4:	b.hi	417e18 <wcrtomb@plt+0x131f8>  // b.pmore
  417cf8:	add	x0, x19, #0x1
  417cfc:	sxtw	x24, w7
  417d00:	cmp	x0, x23
  417d04:	b.eq	417ff4 <wcrtomb@plt+0x133d4>  // b.none
  417d08:	mov	x25, x0
  417d0c:	mov	w4, #0x0                   	// #0
  417d10:	b	417d34 <wcrtomb@plt+0x13114>
  417d14:	tst	x24, #0xe000000000000000
  417d18:	add	x25, x25, #0x1
  417d1c:	cset	w6, ne  // ne = any
  417d20:	sxtw	x1, w1
  417d24:	add	x24, x1, x24, lsl #3
  417d28:	orr	w4, w4, w6
  417d2c:	cmp	x23, x25
  417d30:	b.eq	418000 <wcrtomb@plt+0x133e0>  // b.none
  417d34:	ldrb	w1, [x25]
  417d38:	sub	w1, w1, #0x30
  417d3c:	cmp	w1, #0x7
  417d40:	b.ls	417d14 <wcrtomb@plt+0x130f4>  // b.plast
  417d44:	cmp	w4, #0x0
  417d48:	ccmp	x24, x22, #0x2, eq  // eq = none
  417d4c:	b.hi	418014 <wcrtomb@plt+0x133f4>  // b.pmore
  417d50:	cmp	x23, x25
  417d54:	b.eq	41800c <wcrtomb@plt+0x133ec>  // b.none
  417d58:	ldrb	w0, [x25]
  417d5c:	cbz	w0, 417d70 <wcrtomb@plt+0x13150>
  417d60:	ubfiz	x0, x0, #1, #8
  417d64:	ldrh	w0, [x2, x0]
  417d68:	tbz	w0, #13, 417fcc <wcrtomb@plt+0x133ac>
  417d6c:	nop
  417d70:	cmp	x22, x24
  417d74:	b.cs	41800c <wcrtomb@plt+0x133ec>  // b.hs, b.nlast
  417d78:	cmp	x20, #0x0
  417d7c:	eor	w21, w21, #0x1
  417d80:	cset	w0, ne  // ne = any
  417d84:	tst	w0, w21
  417d88:	b.ne	418174 <wcrtomb@plt+0x13554>  // b.any
  417d8c:	nop
  417d90:	mov	x0, #0xffffffffffffffff    	// #-1
  417d94:	mov	sp, x29
  417d98:	ldp	x29, x30, [sp]
  417d9c:	ldp	x19, x20, [sp, #16]
  417da0:	ldp	x21, x22, [sp, #32]
  417da4:	ldp	x23, x24, [sp, #48]
  417da8:	ldp	x25, x26, [sp, #64]
  417dac:	ldp	x27, x28, [sp, #80]
  417db0:	add	sp, sp, #0x490
  417db4:	ret
  417db8:	cmp	x20, #0x0
  417dbc:	eor	w21, w21, #0x1
  417dc0:	cset	w0, ne  // ne = any
  417dc4:	tst	w0, w21
  417dc8:	b.eq	417d90 <wcrtomb@plt+0x13170>  // b.none
  417dcc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417dd0:	ldr	x0, [x0, #952]
  417dd4:	cbz	x0, 417ddc <wcrtomb@plt+0x131bc>
  417dd8:	blr	x0
  417ddc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417de0:	add	x1, x1, #0xf40
  417de4:	mov	w2, #0x5                   	// #5
  417de8:	mov	x0, #0x0                   	// #0
  417dec:	bl	4049c0 <dcgettext@plt>
  417df0:	mov	w1, #0x0                   	// #0
  417df4:	mov	x2, x0
  417df8:	mov	x3, x20
  417dfc:	mov	w0, #0x0                   	// #0
  417e00:	bl	404050 <error@plt>
  417e04:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  417e08:	mov	w2, #0x2                   	// #2
  417e0c:	mov	x0, #0xffffffffffffffff    	// #-1
  417e10:	str	w2, [x1, #3400]
  417e14:	b	417d94 <wcrtomb@plt+0x13174>
  417e18:	cbnz	w25, 417fc4 <wcrtomb@plt+0x133a4>
  417e1c:	sub	w0, w5, #0x2b
  417e20:	mov	w1, #0xfd                  	// #253
  417e24:	tst	w0, w1
  417e28:	b.ne	418114 <wcrtomb@plt+0x134f4>  // b.any
  417e2c:	cbnz	w21, 417e8c <wcrtomb@plt+0x1326c>
  417e30:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  417e34:	ldrb	w1, [x0, #2200]
  417e38:	cbnz	w1, 417e8c <wcrtomb@plt+0x1326c>
  417e3c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  417e40:	mov	w2, #0x1                   	// #1
  417e44:	strb	w2, [x0, #2200]
  417e48:	ldr	x0, [x1, #952]
  417e4c:	cbz	x0, 417e5c <wcrtomb@plt+0x1323c>
  417e50:	str	x3, [x29, #104]
  417e54:	blr	x0
  417e58:	ldr	x3, [x29, #104]
  417e5c:	mov	w2, #0x5                   	// #5
  417e60:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  417e64:	mov	x0, #0x0                   	// #0
  417e68:	add	x1, x1, #0xff0
  417e6c:	str	x3, [x29, #104]
  417e70:	bl	4049c0 <dcgettext@plt>
  417e74:	mov	x2, x0
  417e78:	mov	w1, #0x0                   	// #0
  417e7c:	mov	w0, #0x0                   	// #0
  417e80:	bl	404050 <error@plt>
  417e84:	ldrb	w5, [x19]
  417e88:	ldr	x3, [x29, #104]
  417e8c:	cmp	w5, #0x2d
  417e90:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  417e94:	add	x19, x19, #0x1
  417e98:	add	x24, x4, #0x898
  417e9c:	cset	w6, eq  // eq = none
  417ea0:	add	x4, x24, #0x8
  417ea4:	cmp	x23, x19
  417ea8:	mov	x24, #0x0                   	// #0
  417eac:	b.ne	417ecc <wcrtomb@plt+0x132ac>  // b.any
  417eb0:	b	418318 <wcrtomb@plt+0x136f8>
  417eb4:	add	x19, x19, #0x1
  417eb8:	tst	x24, #0xfc00000000000000
  417ebc:	b.ne	418234 <wcrtomb@plt+0x13614>  // b.any
  417ec0:	orr	x24, x2, x24, lsl #6
  417ec4:	cmp	x23, x19
  417ec8:	b.eq	417efc <wcrtomb@plt+0x132dc>  // b.none
  417ecc:	ldrb	w1, [x19]
  417ed0:	ldrb	w0, [x4, w1, sxtw]
  417ed4:	and	x2, x0, #0xff
  417ed8:	cmp	w0, #0x3f
  417edc:	b.ls	417eb4 <wcrtomb@plt+0x13294>  // b.plast
  417ee0:	cmp	x19, x23
  417ee4:	b.eq	417efc <wcrtomb@plt+0x132dc>  // b.none
  417ee8:	cbz	w1, 417efc <wcrtomb@plt+0x132dc>
  417eec:	ldr	x0, [x27]
  417ef0:	ubfiz	x1, x1, #1, #8
  417ef4:	ldrh	w0, [x0, x1]
  417ef8:	tbz	w0, #13, 417fcc <wcrtomb@plt+0x133ac>
  417efc:	cbz	w6, 417d70 <wcrtomb@plt+0x13150>
  417f00:	cmp	x3, x24
  417f04:	b.cs	4180fc <wcrtomb@plt+0x134dc>  // b.hs, b.nlast
  417f08:	cmp	x20, #0x0
  417f0c:	eor	w21, w21, #0x1
  417f10:	cset	w0, ne  // ne = any
  417f14:	tst	w0, w21
  417f18:	b.eq	417d90 <wcrtomb@plt+0x13170>  // b.none
  417f1c:	mov	x0, x3
  417f20:	add	x1, x29, #0x91
  417f24:	str	x3, [x29, #104]
  417f28:	bl	4398d8 <argp_parse@@Base+0x59f0>
  417f2c:	add	x1, x29, #0xa9
  417f30:	mov	x19, x0
  417f34:	mov	x0, x24
  417f38:	bl	4398d8 <argp_parse@@Base+0x59f0>
  417f3c:	ldr	x3, [x29, #104]
  417f40:	sub	x23, x0, #0x1
  417f44:	mov	w1, #0x2d                  	// #45
  417f48:	sturb	w1, [x0, #-1]
  417f4c:	cbz	x3, 417f5c <wcrtomb@plt+0x1333c>
  417f50:	mov	w0, #0x2d                  	// #45
  417f54:	sub	x19, x19, #0x1
  417f58:	strb	w0, [x19]
  417f5c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  417f60:	ldr	x0, [x0, #952]
  417f64:	cbz	x0, 417f6c <wcrtomb@plt+0x1334c>
  417f68:	blr	x0
  417f6c:	mov	w2, #0x5                   	// #5
  417f70:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  417f74:	mov	x0, #0x0                   	// #0
  417f78:	add	x1, x1, #0xc0
  417f7c:	bl	4049c0 <dcgettext@plt>
  417f80:	mov	x21, x0
  417f84:	add	x1, x29, #0x78
  417f88:	mov	x0, x22
  417f8c:	bl	4398d8 <argp_parse@@Base+0x59f0>
  417f90:	mov	x6, x0
  417f94:	mov	x2, x21
  417f98:	mov	w1, #0x0                   	// #0
  417f9c:	mov	w0, #0x0                   	// #0
  417fa0:	mov	x5, x19
  417fa4:	mov	x4, x20
  417fa8:	mov	x3, x23
  417fac:	bl	404050 <error@plt>
  417fb0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  417fb4:	mov	w2, #0x2                   	// #2
  417fb8:	mov	x0, #0xffffffffffffffff    	// #-1
  417fbc:	str	w2, [x1, #3400]
  417fc0:	b	417d94 <wcrtomb@plt+0x13174>
  417fc4:	mov	x0, #0x0                   	// #0
  417fc8:	cbz	w5, 417d94 <wcrtomb@plt+0x13174>
  417fcc:	cbz	x20, 417d90 <wcrtomb@plt+0x13170>
  417fd0:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  417fd4:	add	x24, x4, #0x898
  417fd8:	ldr	x0, [x24, #264]
  417fdc:	cbnz	x0, 4181c0 <wcrtomb@plt+0x135a0>
  417fe0:	bl	43fb98 <argp_parse@@Base+0xbcb0>
  417fe4:	str	x0, [x24, #264]
  417fe8:	mov	w1, #0x8                   	// #8
  417fec:	bl	43fc08 <argp_parse@@Base+0xbd20>
  417ff0:	b	4181c0 <wcrtomb@plt+0x135a0>
  417ff4:	mov	x25, x23
  417ff8:	mov	w4, #0x0                   	// #0
  417ffc:	nop
  418000:	cmp	w4, #0x0
  418004:	ccmp	x22, x24, #0x0, eq  // eq = none
  418008:	b.cc	418014 <wcrtomb@plt+0x133f4>  // b.lo, b.ul, b.last
  41800c:	mov	x0, x24
  418010:	b	417d94 <wcrtomb@plt+0x13174>
  418014:	cmp	w5, #0x31
  418018:	b.ls	418104 <wcrtomb@plt+0x134e4>  // b.plast
  41801c:	cbz	x20, 4181ac <wcrtomb@plt+0x1358c>
  418020:	orr	w28, w7, #0x4
  418024:	mov	w6, #0x7                   	// #7
  418028:	sub	w28, w6, w28
  41802c:	cmp	x0, x23
  418030:	sxtw	x28, w28
  418034:	b.eq	41830c <wcrtomb@plt+0x136ec>  // b.none
  418038:	mov	w4, #0x0                   	// #0
  41803c:	b	418060 <wcrtomb@plt+0x13440>
  418040:	tst	x28, #0xe000000000000000
  418044:	sxtw	x5, w5
  418048:	cset	w1, ne  // ne = any
  41804c:	add	x0, x0, #0x1
  418050:	add	x28, x5, x28, lsl #3
  418054:	orr	w4, w4, w1
  418058:	cmp	x23, x0
  41805c:	b.eq	4182c8 <wcrtomb@plt+0x136a8>  // b.none
  418060:	ldrb	w1, [x0]
  418064:	sub	w1, w1, #0x30
  418068:	sub	w5, w6, w1
  41806c:	cmp	w1, #0x7
  418070:	b.ls	418040 <wcrtomb@plt+0x13420>  // b.plast
  418074:	mov	x25, x0
  418078:	adds	x24, x28, #0x1
  41807c:	cset	w0, eq  // eq = none
  418080:	cmp	x3, x24
  418084:	orr	w4, w4, w0
  418088:	cset	w1, cs  // cs = hs, nlast
  41808c:	eor	w0, w4, #0x1
  418090:	tst	w1, w0
  418094:	b.eq	418104 <wcrtomb@plt+0x134e4>  // b.none
  418098:	cbnz	w21, 4180dc <wcrtomb@plt+0x134bc>
  41809c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4180a0:	ldr	x0, [x0, #952]
  4180a4:	cbz	x0, 4180ac <wcrtomb@plt+0x1348c>
  4180a8:	blr	x0
  4180ac:	mov	w2, #0x5                   	// #5
  4180b0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4180b4:	mov	x0, #0x0                   	// #0
  4180b8:	add	x1, x1, #0xf78
  4180bc:	bl	4049c0 <dcgettext@plt>
  4180c0:	mov	x2, x0
  4180c4:	mov	x5, x20
  4180c8:	mov	x4, x19
  4180cc:	sub	w3, w25, w19
  4180d0:	mov	w1, #0x0                   	// #0
  4180d4:	mov	w0, #0x0                   	// #0
  4180d8:	bl	404050 <error@plt>
  4180dc:	cmp	x25, x23
  4180e0:	b.eq	418304 <wcrtomb@plt+0x136e4>  // b.none
  4180e4:	ldrb	w0, [x25]
  4180e8:	cbz	w0, 418304 <wcrtomb@plt+0x136e4>
  4180ec:	ldr	x1, [x27]
  4180f0:	ubfiz	x0, x0, #1, #8
  4180f4:	ldrh	w0, [x1, x0]
  4180f8:	tbz	w0, #13, 417fd0 <wcrtomb@plt+0x133b0>
  4180fc:	neg	x0, x24
  418100:	b	417d94 <wcrtomb@plt+0x13174>
  418104:	cbnz	w4, 418328 <wcrtomb@plt+0x13708>
  418108:	cmp	x23, x25
  41810c:	b.ne	417d58 <wcrtomb@plt+0x13138>  // b.any
  418110:	b	417d70 <wcrtomb@plt+0x13150>
  418114:	cmp	w5, #0x80
  418118:	mov	w0, #0xff                  	// #255
  41811c:	ccmp	w5, w0, #0x4, ne  // ne = any
  418120:	b.ne	4181a0 <wcrtomb@plt+0x13580>  // b.any
  418124:	and	w2, w5, #0x40
  418128:	and	w24, w5, #0x3f
  41812c:	sub	w24, w24, w2
  418130:	neg	w1, w2
  418134:	add	x19, x19, #0x1
  418138:	sxtw	x24, w24
  41813c:	lsl	x1, x1, #50
  418140:	b	418154 <wcrtomb@plt+0x13534>
  418144:	and	x0, x24, #0xffffffffffffff
  418148:	orr	x0, x0, x1
  41814c:	cmp	x0, x24
  418150:	b.ne	4182d0 <wcrtomb@plt+0x136b0>  // b.any
  418154:	ldrb	w0, [x19], #1
  418158:	cmp	x23, x19
  41815c:	add	x24, x0, x24, lsl #8
  418160:	b.ne	418144 <wcrtomb@plt+0x13524>  // b.any
  418164:	cmp	w2, #0x0
  418168:	cset	w6, ne  // ne = any
  41816c:	cneg	x24, x24, ne  // ne = any
  418170:	b	417efc <wcrtomb@plt+0x132dc>
  418174:	mov	x0, x3
  418178:	add	x1, x29, #0x91
  41817c:	str	x3, [x29, #104]
  418180:	bl	4398d8 <argp_parse@@Base+0x59f0>
  418184:	add	x1, x29, #0xa9
  418188:	mov	x19, x0
  41818c:	mov	x0, x24
  418190:	bl	4398d8 <argp_parse@@Base+0x59f0>
  418194:	mov	x23, x0
  418198:	ldr	x3, [x29, #104]
  41819c:	b	417f4c <wcrtomb@plt+0x1332c>
  4181a0:	mov	x0, #0x0                   	// #0
  4181a4:	cbz	w5, 417d94 <wcrtomb@plt+0x13174>
  4181a8:	b	417fcc <wcrtomb@plt+0x133ac>
  4181ac:	cbz	w4, 418108 <wcrtomb@plt+0x134e8>
  4181b0:	b	417d90 <wcrtomb@plt+0x13170>
  4181b4:	ldurb	w0, [x23, #-1]
  4181b8:	cbnz	w0, 4181c8 <wcrtomb@plt+0x135a8>
  4181bc:	sub	x23, x23, #0x1
  4181c0:	cmp	x26, x23
  4181c4:	b.ne	4181b4 <wcrtomb@plt+0x13594>  // b.any
  4181c8:	ldr	x4, [x24, #264]
  4181cc:	sub	x3, x23, x26
  4181d0:	mov	x2, x26
  4181d4:	add	x0, x29, #0xa8
  4181d8:	mov	x1, #0x3e8                 	// #1000
  4181dc:	bl	43fcd0 <argp_parse@@Base+0xbde8>
  4181e0:	cbnz	w21, 417d90 <wcrtomb@plt+0x13170>
  4181e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4181e8:	ldr	x0, [x0, #952]
  4181ec:	cbz	x0, 4181f4 <wcrtomb@plt+0x135d4>
  4181f0:	blr	x0
  4181f4:	mov	w2, #0x5                   	// #5
  4181f8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  4181fc:	mov	x0, #0x0                   	// #0
  418200:	add	x1, x1, #0x88
  418204:	bl	4049c0 <dcgettext@plt>
  418208:	mov	x2, x0
  41820c:	mov	w1, #0x0                   	// #0
  418210:	mov	w0, #0x0                   	// #0
  418214:	mov	x5, x20
  418218:	add	x4, x29, #0xa8
  41821c:	mov	w3, #0x3e8                 	// #1000
  418220:	bl	404050 <error@plt>
  418224:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  418228:	mov	w1, #0x2                   	// #2
  41822c:	str	w1, [x0, #3400]
  418230:	b	417d90 <wcrtomb@plt+0x13170>
  418234:	add	x0, x28, #0x10
  418238:	mov	x1, x26
  41823c:	and	x0, x0, #0xfffffffffffffff0
  418240:	mov	x2, x28
  418244:	sub	sp, sp, x0
  418248:	eor	w21, w21, #0x1
  41824c:	mov	x19, sp
  418250:	mov	x0, x19
  418254:	bl	403f70 <memcpy@plt>
  418258:	cmp	x20, #0x0
  41825c:	strb	wzr, [x19, x28]
  418260:	cset	w0, ne  // ne = any
  418264:	tst	w0, w21
  418268:	b.eq	417d90 <wcrtomb@plt+0x13170>  // b.none
  41826c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  418270:	ldr	x0, [x0, #952]
  418274:	cbz	x0, 41827c <wcrtomb@plt+0x1365c>
  418278:	blr	x0
  41827c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  418280:	add	x1, x1, #0x20
  418284:	mov	w2, #0x5                   	// #5
  418288:	mov	x0, #0x0                   	// #0
  41828c:	bl	4049c0 <dcgettext@plt>
  418290:	mov	x21, x0
  418294:	mov	x0, x19
  418298:	bl	440248 <argp_parse@@Base+0xc360>
  41829c:	mov	x2, x21
  4182a0:	mov	x3, x0
  4182a4:	mov	w1, #0x0                   	// #0
  4182a8:	mov	w0, #0x0                   	// #0
  4182ac:	mov	x4, x20
  4182b0:	bl	404050 <error@plt>
  4182b4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4182b8:	mov	w2, #0x2                   	// #2
  4182bc:	mov	x0, #0xffffffffffffffff    	// #-1
  4182c0:	str	w2, [x1, #3400]
  4182c4:	b	417d94 <wcrtomb@plt+0x13174>
  4182c8:	mov	x25, x23
  4182cc:	b	418078 <wcrtomb@plt+0x13458>
  4182d0:	cmp	x20, #0x0
  4182d4:	eor	w21, w21, #0x1
  4182d8:	cset	w0, ne  // ne = any
  4182dc:	tst	w0, w21
  4182e0:	b.eq	417d90 <wcrtomb@plt+0x13170>  // b.none
  4182e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4182e8:	ldr	x0, [x0, #952]
  4182ec:	cbz	x0, 4182f4 <wcrtomb@plt+0x136d4>
  4182f0:	blr	x0
  4182f4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  4182f8:	mov	w2, #0x5                   	// #5
  4182fc:	add	x1, x1, #0x58
  418300:	b	417de8 <wcrtomb@plt+0x131c8>
  418304:	mvn	x0, x28
  418308:	b	417d94 <wcrtomb@plt+0x13174>
  41830c:	mov	x25, x23
  418310:	mov	w4, #0x0                   	// #0
  418314:	b	418078 <wcrtomb@plt+0x13458>
  418318:	cmp	w5, #0x2d
  41831c:	mov	x0, #0x0                   	// #0
  418320:	b.eq	417d94 <wcrtomb@plt+0x13174>  // b.none
  418324:	b	41800c <wcrtomb@plt+0x133ec>
  418328:	cmp	x20, #0x0
  41832c:	eor	w21, w21, #0x1
  418330:	cset	w0, ne  // ne = any
  418334:	tst	w0, w21
  418338:	b.eq	417d90 <wcrtomb@plt+0x13170>  // b.none
  41833c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  418340:	ldr	x0, [x0, #952]
  418344:	cbz	x0, 41834c <wcrtomb@plt+0x1372c>
  418348:	blr	x0
  41834c:	mov	w2, #0x5                   	// #5
  418350:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  418354:	mov	x0, #0x0                   	// #0
  418358:	add	x1, x1, #0xfc0
  41835c:	bl	4049c0 <dcgettext@plt>
  418360:	mov	x2, x0
  418364:	mov	w1, #0x0                   	// #0
  418368:	mov	w0, #0x0                   	// #0
  41836c:	mov	x5, x20
  418370:	mov	x4, x19
  418374:	sub	w3, w25, w19
  418378:	bl	404050 <error@plt>
  41837c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  418380:	mov	w2, #0x2                   	// #2
  418384:	mov	x0, #0xffffffffffffffff    	// #-1
  418388:	str	w2, [x1, #3400]
  41838c:	b	417d94 <wcrtomb@plt+0x13174>
  418390:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  418394:	add	x0, x0, #0x898
  418398:	add	x3, x0, #0x8
  41839c:	stp	x29, x30, [sp, #-16]!
  4183a0:	mov	x0, x3
  4183a4:	mov	x29, sp
  4183a8:	mov	x2, #0x100                 	// #256
  4183ac:	mov	w1, #0x40                  	// #64
  4183b0:	bl	404410 <memset@plt>
  4183b4:	adrp	x3, 456000 <_obstack_memory_used@@Base+0x13e10>
  4183b8:	mov	x1, #0x0                   	// #0
  4183bc:	add	x3, x3, #0x228
  4183c0:	mov	w2, #0x41                  	// #65
  4183c4:	b	4183cc <wcrtomb@plt+0x137ac>
  4183c8:	ldrb	w2, [x1, x3]
  4183cc:	strb	w1, [x0, w2, sxtw]
  4183d0:	add	x1, x1, #0x1
  4183d4:	cmp	x1, #0x40
  4183d8:	b.ne	4183c8 <wcrtomb@plt+0x137a8>  // b.any
  4183dc:	ldp	x29, x30, [sp], #16
  4183e0:	ret
  4183e4:	nop
  4183e8:	cmp	w0, #0x56
  4183ec:	b.eq	418550 <wcrtomb@plt+0x13930>  // b.none
  4183f0:	stp	x29, x30, [sp, #-80]!
  4183f4:	mov	x29, sp
  4183f8:	stp	x19, x20, [sp, #16]
  4183fc:	mov	x20, x1
  418400:	mov	w19, w0
  418404:	stp	x21, x22, [sp, #32]
  418408:	adrp	x21, 417000 <wcrtomb@plt+0x123e0>
  41840c:	add	x21, x21, #0xbb0
  418410:	mov	w1, #0x1                   	// #1
  418414:	add	x3, sp, #0x4c
  418418:	mov	x2, x21
  41841c:	add	x0, x20, #0x8
  418420:	str	w1, [sp, #76]
  418424:	bl	426bd0 <wcrtomb@plt+0x21fb0>
  418428:	cmp	w19, #0x31
  41842c:	b.eq	41847c <wcrtomb@plt+0x1385c>  // b.none
  418430:	cmp	w19, #0x32
  418434:	b.eq	418454 <wcrtomb@plt+0x13834>  // b.none
  418438:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41843c:	ldrb	w0, [x0, #787]
  418440:	cbnz	w0, 4184a0 <wcrtomb@plt+0x13880>
  418444:	ldp	x19, x20, [sp, #16]
  418448:	ldp	x21, x22, [sp, #32]
  41844c:	ldp	x29, x30, [sp], #80
  418450:	ret
  418454:	mov	w1, #0x4                   	// #4
  418458:	add	x3, sp, #0x4c
  41845c:	mov	x2, x21
  418460:	add	x0, x20, #0x18
  418464:	str	w1, [sp, #76]
  418468:	bl	426bd0 <wcrtomb@plt+0x21fb0>
  41846c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  418470:	ldrb	w0, [x0, #787]
  418474:	cbz	w0, 418444 <wcrtomb@plt+0x13824>
  418478:	b	4184a0 <wcrtomb@plt+0x13880>
  41847c:	mov	w1, #0x2                   	// #2
  418480:	add	x3, sp, #0x4c
  418484:	mov	x2, x21
  418488:	add	x0, x20, #0x18
  41848c:	str	w1, [sp, #76]
  418490:	bl	426bd0 <wcrtomb@plt+0x21fb0>
  418494:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  418498:	ldrb	w0, [x0, #787]
  41849c:	cbz	w0, 418444 <wcrtomb@plt+0x13824>
  4184a0:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  4184a4:	add	x20, x20, #0x28
  4184a8:	ldr	x21, [x20, #8]
  4184ac:	mov	x19, x21
  4184b0:	ldrb	w1, [x21]
  4184b4:	sub	w0, w1, #0x2e
  4184b8:	and	w0, w0, #0xff
  4184bc:	cmp	w0, #0x1
  4184c0:	b.hi	4184dc <wcrtomb@plt+0x138bc>  // b.pmore
  4184c4:	nop
  4184c8:	ldrb	w1, [x19, #1]!
  4184cc:	sub	w0, w1, #0x2e
  4184d0:	and	w0, w0, #0xff
  4184d4:	cmp	w0, #0x1
  4184d8:	b.ls	4184c8 <wcrtomb@plt+0x138a8>  // b.plast
  4184dc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4184e0:	ldr	x22, [x0, #512]
  4184e4:	cbz	w1, 418554 <wcrtomb@plt+0x13934>
  4184e8:	mov	x0, x22
  4184ec:	str	x23, [sp, #48]
  4184f0:	bl	403ff0 <strlen@plt>
  4184f4:	mov	x23, x0
  4184f8:	mov	x1, x22
  4184fc:	mov	x0, x19
  418500:	sxtw	x23, w23
  418504:	mov	x2, x23
  418508:	bl	4043c0 <strncmp@plt>
  41850c:	cbnz	w0, 418520 <wcrtomb@plt+0x13900>
  418510:	ldrb	w0, [x19, x23]
  418514:	cmp	w0, #0x2f
  418518:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  41851c:	b.eq	418564 <wcrtomb@plt+0x13944>  // b.none
  418520:	mov	x1, x21
  418524:	mov	x0, x22
  418528:	bl	41eba0 <wcrtomb@plt+0x19f80>
  41852c:	str	x0, [x20, #8]
  418530:	bl	41ae90 <wcrtomb@plt+0x16270>
  418534:	ldr	x23, [sp, #48]
  418538:	mov	x0, x21
  41853c:	bl	4047b0 <free@plt>
  418540:	ldp	x19, x20, [sp, #16]
  418544:	ldp	x21, x22, [sp, #32]
  418548:	ldp	x29, x30, [sp], #80
  41854c:	ret
  418550:	ret
  418554:	mov	x0, x22
  418558:	bl	441170 <argp_parse@@Base+0xd288>
  41855c:	str	x0, [x20, #8]
  418560:	b	418538 <wcrtomb@plt+0x13918>
  418564:	ldr	x23, [sp, #48]
  418568:	b	418444 <wcrtomb@plt+0x13824>
  41856c:	nop
  418570:	and	w6, w1, #0xff
  418574:	mov	x8, x0
  418578:	mov	x2, x0
  41857c:	add	x7, x0, #0x200
  418580:	mov	w5, #0x0                   	// #0
  418584:	mov	w4, #0x0                   	// #0
  418588:	ldrb	w3, [x2], #1
  41858c:	add	w4, w4, w3
  418590:	cmp	x7, x2
  418594:	add	w5, w5, w3, sxtb
  418598:	b.ne	418588 <wcrtomb@plt+0x13968>  // b.any
  41859c:	mov	w0, #0x3                   	// #3
  4185a0:	cbz	w4, 418610 <wcrtomb@plt+0x139f0>
  4185a4:	stp	x29, x30, [sp, #-32]!
  4185a8:	add	x2, x8, #0x9b
  4185ac:	add	x0, x8, #0x93
  4185b0:	mov	x29, sp
  4185b4:	stp	x19, x20, [sp, #16]
  4185b8:	ldrb	w3, [x2], #-1
  4185bc:	sub	w4, w4, w3
  4185c0:	cmp	x0, x2
  4185c4:	sub	w5, w5, w3, sxtb
  4185c8:	b.ne	4185b8 <wcrtomb@plt+0x13998>  // b.any
  4185cc:	add	w19, w4, #0x100
  4185d0:	add	w20, w5, #0x100
  4185d4:	add	x0, x8, #0x94
  4185d8:	mov	w5, #0x1                   	// #1
  4185dc:	mov	x4, #0x7fffffff            	// #2147483647
  4185e0:	mov	x3, #0x0                   	// #0
  4185e4:	mov	x2, #0x0                   	// #0
  4185e8:	mov	x1, #0x8                   	// #8
  4185ec:	bl	417c68 <wcrtomb@plt+0x13048>
  4185f0:	tbnz	w0, #31, 418614 <wcrtomb@plt+0x139f4>
  4185f4:	cmp	w19, w0
  4185f8:	mov	w1, #0x5                   	// #5
  4185fc:	ccmp	w20, w0, #0x4, ne  // ne = any
  418600:	csinc	w0, w1, wzr, ne  // ne = any
  418604:	ldp	x19, x20, [sp, #16]
  418608:	ldp	x29, x30, [sp], #32
  41860c:	ret
  418610:	ret
  418614:	mov	w0, #0x5                   	// #5
  418618:	ldp	x19, x20, [sp, #16]
  41861c:	ldp	x29, x30, [sp], #32
  418620:	ret
  418624:	nop
  418628:	stp	x29, x30, [sp, #-400]!
  41862c:	mov	x29, sp
  418630:	stp	x21, x22, [sp, #32]
  418634:	mov	x21, x1
  418638:	mov	w22, w2
  41863c:	stp	x23, x24, [sp, #48]
  418640:	adrp	x24, 454000 <_obstack_memory_used@@Base+0x11e10>
  418644:	add	x24, x24, #0xa48
  418648:	mov	x23, x0
  41864c:	stp	x19, x20, [sp, #16]
  418650:	stp	x25, x26, [sp, #64]
  418654:	adrp	x26, 454000 <_obstack_memory_used@@Base+0x11e10>
  418658:	mov	x25, #0x0                   	// #0
  41865c:	add	x0, x26, #0x6a8
  418660:	stp	x27, x28, [sp, #80]
  418664:	mov	x27, #0x0                   	// #0
  418668:	stp	xzr, x0, [sp, #104]
  41866c:	str	xzr, [sp, #120]
  418670:	bl	406220 <wcrtomb@plt+0x1600>
  418674:	str	x0, [x23]
  418678:	mov	x28, x0
  41867c:	cbz	x0, 4187d0 <wcrtomb@plt+0x13bb0>
  418680:	mov	w1, #0x0                   	// #0
  418684:	bl	418570 <wcrtomb@plt+0x13950>
  418688:	mov	w19, w0
  41868c:	cmp	w0, #0x1
  418690:	b.ne	41871c <wcrtomb@plt+0x13afc>  // b.any
  418694:	ldrb	w0, [x28, #156]
  418698:	cmp	w0, #0x31
  41869c:	b.ne	41873c <wcrtomb@plt+0x13b1c>  // b.any
  4186a0:	str	xzr, [x21, #136]
  4186a4:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4186a8:	ldr	x0, [x22, #4000]
  4186ac:	bl	4047b0 <free@plt>
  4186b0:	cbz	x27, 4189e4 <wcrtomb@plt+0x13dc4>
  4186b4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4186b8:	add	x20, x27, #0x200
  4186bc:	ldr	x1, [sp, #120]
  4186c0:	str	x27, [x22, #4000]
  4186c4:	str	x1, [x0, #4008]
  4186c8:	mov	x1, x20
  4186cc:	mov	x0, x21
  4186d0:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  4186d4:	mov	x1, x20
  4186d8:	add	x0, x21, #0x8
  4186dc:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  4186e0:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4186e4:	ldr	x0, [x21, #8]
  4186e8:	bl	4355f8 <argp_parse@@Base+0x1710>
  4186ec:	mov	w1, w0
  4186f0:	ldr	x0, [x20, #4032]
  4186f4:	strb	w1, [x21, #16]
  4186f8:	bl	4047b0 <free@plt>
  4186fc:	cbz	x25, 418a54 <wcrtomb@plt+0x13e34>
  418700:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  418704:	add	x1, x25, #0x200
  418708:	ldr	x2, [sp, #104]
  41870c:	str	x25, [x20, #4032]
  418710:	str	x2, [x0, #4024]
  418714:	add	x0, x21, #0x18
  418718:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  41871c:	mov	w0, w19
  418720:	ldp	x19, x20, [sp, #16]
  418724:	ldp	x21, x22, [sp, #32]
  418728:	ldp	x23, x24, [sp, #48]
  41872c:	ldp	x25, x26, [sp, #64]
  418730:	ldp	x27, x28, [sp, #80]
  418734:	ldp	x29, x30, [sp], #400
  418738:	ret
  41873c:	add	x20, x28, #0x7c
  418740:	mov	x2, x24
  418744:	mov	x0, x20
  418748:	mov	w6, #0x0                   	// #0
  41874c:	mov	w5, #0x0                   	// #0
  418750:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418754:	mov	x3, #0x0                   	// #0
  418758:	mov	x1, #0xc                   	// #12
  41875c:	bl	417c68 <wcrtomb@plt+0x13048>
  418760:	str	x0, [x21, #136]
  418764:	tbnz	x0, #63, 4189c0 <wcrtomb@plt+0x13da0>
  418768:	ldrb	w1, [x28, #156]
  41876c:	sub	w2, w1, #0x4b
  418770:	cmp	w1, #0x78
  418774:	and	w2, w2, #0xff
  418778:	ccmp	w2, #0x1, #0x0, ne  // ne = any
  41877c:	b.hi	4187f4 <wcrtomb@plt+0x13bd4>  // b.pmore
  418780:	cmp	w22, #0x1
  418784:	b.eq	418880 <wcrtomb@plt+0x13c60>  // b.none
  418788:	cmp	w2, #0x1
  41878c:	b.ls	4188a4 <wcrtomb@plt+0x13c84>  // b.plast
  418790:	mov	w6, #0x0                   	// #0
  418794:	mov	w5, #0x0                   	// #0
  418798:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41879c:	mov	x3, #0x0                   	// #0
  4187a0:	mov	x2, x24
  4187a4:	mov	x1, #0xc                   	// #12
  4187a8:	mov	x0, x20
  4187ac:	bl	417c68 <wcrtomb@plt+0x13048>
  4187b0:	mov	x1, x28
  4187b4:	mov	x2, x0
  4187b8:	add	x0, x21, #0x158
  4187bc:	bl	414048 <wcrtomb@plt+0xf428>
  4187c0:	bl	406220 <wcrtomb@plt+0x1600>
  4187c4:	str	x0, [x23]
  4187c8:	mov	x28, x0
  4187cc:	cbnz	x0, 418680 <wcrtomb@plt+0x13a60>
  4187d0:	mov	w19, #0x4                   	// #4
  4187d4:	mov	w0, w19
  4187d8:	ldp	x19, x20, [sp, #16]
  4187dc:	ldp	x21, x22, [sp, #32]
  4187e0:	ldp	x23, x24, [sp, #48]
  4187e4:	ldp	x25, x26, [sp, #64]
  4187e8:	ldp	x27, x28, [sp, #80]
  4187ec:	ldp	x29, x30, [sp], #400
  4187f0:	ret
  4187f4:	cmp	w1, #0x58
  4187f8:	mov	w0, #0x67                  	// #103
  4187fc:	ccmp	w1, w0, #0x4, ne  // ne = any
  418800:	b.ne	4186a4 <wcrtomb@plt+0x13a84>  // b.any
  418804:	cmp	w22, #0x1
  418808:	b.eq	418880 <wcrtomb@plt+0x13c60>  // b.none
  41880c:	cmp	w1, #0x58
  418810:	b.eq	418790 <wcrtomb@plt+0x13b70>  // b.none
  418814:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  418818:	add	x19, x19, #0x898
  41881c:	ldr	x0, [x19, #272]
  418820:	cbz	x0, 4189b0 <wcrtomb@plt+0x13d90>
  418824:	mov	x1, x28
  418828:	mov	x2, #0x200                 	// #512
  41882c:	bl	403f70 <memcpy@plt>
  418830:	stp	xzr, xzr, [sp, #136]
  418834:	mov	w6, #0x0                   	// #0
  418838:	mov	w5, #0x0                   	// #0
  41883c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418840:	mov	x3, #0x0                   	// #0
  418844:	mov	x2, x24
  418848:	mov	x1, #0xc                   	// #12
  41884c:	mov	x0, x20
  418850:	stp	xzr, xzr, [sp, #152]
  418854:	bl	417c68 <wcrtomb@plt+0x13048>
  418858:	mov	x1, x28
  41885c:	mov	x2, x0
  418860:	add	x0, sp, #0x88
  418864:	bl	414048 <wcrtomb@plt+0xf428>
  418868:	add	x0, sp, #0x88
  41886c:	bl	413ed0 <wcrtomb@plt+0xf2b0>
  418870:	add	x0, sp, #0x88
  418874:	bl	4141b8 <wcrtomb@plt+0xf598>
  418878:	cmp	w22, #0x2
  41887c:	b.ne	418670 <wcrtomb@plt+0x13a50>  // b.any
  418880:	mov	w19, #0x2                   	// #2
  418884:	mov	w0, w19
  418888:	ldp	x19, x20, [sp, #16]
  41888c:	ldp	x21, x22, [sp, #32]
  418890:	ldp	x23, x24, [sp, #48]
  418894:	ldp	x25, x26, [sp, #64]
  418898:	ldp	x27, x28, [sp, #80]
  41889c:	ldp	x29, x30, [sp], #400
  4188a0:	ret
  4188a4:	add	x19, x0, #0x200
  4188a8:	ands	x1, x0, #0x1ff
  4188ac:	b.eq	4188c0 <wcrtomb@plt+0x13ca0>  // b.none
  4188b0:	add	x19, x0, #0x400
  4188b4:	sub	x19, x19, x1
  4188b8:	cmp	x0, x19
  4188bc:	b.hi	418ae0 <wcrtomb@plt+0x13ec0>  // b.pmore
  4188c0:	add	x0, x19, #0x1
  4188c4:	bl	440f48 <argp_parse@@Base+0xd060>
  4188c8:	ldrb	w1, [x28, #156]
  4188cc:	mov	x20, x0
  4188d0:	lsr	x2, x19, #9
  4188d4:	cmp	w1, #0x4c
  4188d8:	b.eq	41899c <wcrtomb@plt+0x13d7c>  // b.none
  4188dc:	mov	x0, x25
  4188e0:	mov	x25, x20
  4188e4:	str	x2, [sp, #104]
  4188e8:	bl	4047b0 <free@plt>
  4188ec:	mov	x0, x28
  4188f0:	bl	405b90 <wcrtomb@plt+0xf70>
  4188f4:	mov	x0, x20
  4188f8:	mov	x1, x28
  4188fc:	mov	x2, #0x200                 	// #512
  418900:	bl	403f70 <memcpy@plt>
  418904:	add	x20, x20, #0x200
  418908:	subs	x19, x19, #0x200
  41890c:	b.ne	41894c <wcrtomb@plt+0x13d2c>  // b.any
  418910:	b	418994 <wcrtomb@plt+0x13d74>
  418914:	bl	405bd8 <wcrtomb@plt+0xfb8>
  418918:	cmp	x0, x19
  41891c:	mov	x2, x0
  418920:	mov	x1, x26
  418924:	csel	x28, x2, x19, ls  // ls = plast
  418928:	mov	x0, x20
  41892c:	mov	x2, x28
  418930:	bl	403f70 <memcpy@plt>
  418934:	sub	x0, x28, #0x1
  418938:	add	x20, x20, x28
  41893c:	add	x0, x26, x0
  418940:	bl	405b90 <wcrtomb@plt+0xf70>
  418944:	subs	x19, x19, x28
  418948:	b.eq	418994 <wcrtomb@plt+0x13d74>  // b.none
  41894c:	bl	406220 <wcrtomb@plt+0x1600>
  418950:	mov	x26, x0
  418954:	cbnz	x0, 418914 <wcrtomb@plt+0x13cf4>
  418958:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41895c:	ldr	x0, [x0, #952]
  418960:	cbz	x0, 418968 <wcrtomb@plt+0x13d48>
  418964:	blr	x0
  418968:	ldr	x1, [sp, #112]
  41896c:	mov	w2, #0x5                   	// #5
  418970:	mov	x0, #0x0                   	// #0
  418974:	bl	4049c0 <dcgettext@plt>
  418978:	mov	x2, x0
  41897c:	mov	w1, #0x0                   	// #0
  418980:	mov	w0, #0x0                   	// #0
  418984:	bl	404050 <error@plt>
  418988:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41898c:	mov	w1, #0x2                   	// #2
  418990:	str	w1, [x0, #3400]
  418994:	strb	wzr, [x20]
  418998:	b	418670 <wcrtomb@plt+0x13a50>
  41899c:	mov	x0, x27
  4189a0:	mov	x27, x20
  4189a4:	str	x2, [sp, #120]
  4189a8:	bl	4047b0 <free@plt>
  4189ac:	b	4188ec <wcrtomb@plt+0x13ccc>
  4189b0:	mov	x0, #0x200                 	// #512
  4189b4:	bl	440f48 <argp_parse@@Base+0xd060>
  4189b8:	str	x0, [x19, #272]
  4189bc:	b	418824 <wcrtomb@plt+0x13c04>
  4189c0:	mov	w19, #0x5                   	// #5
  4189c4:	mov	w0, w19
  4189c8:	ldp	x19, x20, [sp, #16]
  4189cc:	ldp	x21, x22, [sp, #32]
  4189d0:	ldp	x23, x24, [sp, #48]
  4189d4:	ldp	x25, x26, [sp, #64]
  4189d8:	ldp	x27, x28, [sp, #80]
  4189dc:	ldp	x29, x30, [sp], #400
  4189e0:	ret
  4189e4:	ldrb	w0, [x28, #345]
  4189e8:	cbz	w0, 418a00 <wcrtomb@plt+0x13de0>
  4189ec:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  4189f0:	add	x0, x28, #0x101
  4189f4:	add	x1, x1, #0xe18
  4189f8:	bl	404710 <strcmp@plt>
  4189fc:	cbz	w0, 418aa8 <wcrtomb@plt+0x13e88>
  418a00:	add	x20, sp, #0x88
  418a04:	mov	x0, x20
  418a08:	ldp	x2, x3, [x28]
  418a0c:	stp	x2, x3, [x0]
  418a10:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  418a14:	ldp	x2, x3, [x28, #16]
  418a18:	stp	x2, x3, [x0, #16]
  418a1c:	ldp	x2, x3, [x28, #32]
  418a20:	stp	x2, x3, [x0, #32]
  418a24:	ldp	x2, x3, [x28, #48]
  418a28:	stp	x2, x3, [x0, #48]
  418a2c:	ldp	x2, x3, [x28, #64]
  418a30:	stp	x2, x3, [x0, #64]
  418a34:	ldp	x2, x3, [x28, #80]
  418a38:	stp	x2, x3, [x0, #80]
  418a3c:	ldr	w1, [x28, #96]
  418a40:	str	xzr, [x22, #4000]
  418a44:	str	xzr, [x4, #4008]
  418a48:	str	w1, [x0, #96]
  418a4c:	strb	wzr, [x0, #100]
  418a50:	b	4186c8 <wcrtomb@plt+0x13aa8>
  418a54:	add	x7, x28, #0x9d
  418a58:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  418a5c:	add	x1, sp, #0x88
  418a60:	str	xzr, [x20, #4032]
  418a64:	str	xzr, [x0, #4024]
  418a68:	ldp	x2, x3, [x7]
  418a6c:	stp	x2, x3, [sp, #136]
  418a70:	ldp	x2, x3, [x7, #16]
  418a74:	stp	x2, x3, [sp, #152]
  418a78:	ldp	x2, x3, [x7, #32]
  418a7c:	stp	x2, x3, [sp, #168]
  418a80:	ldp	x2, x3, [x7, #48]
  418a84:	stp	x2, x3, [sp, #184]
  418a88:	ldp	x2, x3, [x7, #64]
  418a8c:	stp	x2, x3, [sp, #200]
  418a90:	ldp	x2, x3, [x7, #80]
  418a94:	stp	x2, x3, [sp, #216]
  418a98:	ldur	w0, [x28, #253]
  418a9c:	str	w0, [sp, #232]
  418aa0:	strb	wzr, [sp, #236]
  418aa4:	b	418714 <wcrtomb@plt+0x13af4>
  418aa8:	add	x1, x28, #0x159
  418aac:	add	x20, sp, #0x88
  418ab0:	mov	x2, #0x9b                  	// #155
  418ab4:	mov	x0, x20
  418ab8:	bl	403f70 <memcpy@plt>
  418abc:	strb	wzr, [sp, #291]
  418ac0:	mov	x0, x20
  418ac4:	bl	403ff0 <strlen@plt>
  418ac8:	mov	x1, x0
  418acc:	add	x0, x20, x0
  418ad0:	mov	w2, #0x2f                  	// #47
  418ad4:	add	x0, x0, #0x1
  418ad8:	strb	w2, [x20, x1]
  418adc:	b	418a08 <wcrtomb@plt+0x13de8>
  418ae0:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  418ae4:	nop
  418ae8:	stp	x29, x30, [sp, #-80]!
  418aec:	mov	w6, #0x0                   	// #0
  418af0:	mov	w5, #0x0                   	// #0
  418af4:	mov	x29, sp
  418af8:	stp	x23, x24, [sp, #48]
  418afc:	mov	x24, x2
  418b00:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  418b04:	add	x2, x2, #0x9e0
  418b08:	mov	w23, w3
  418b0c:	mov	x4, #0xffffffffffffffff    	// #-1
  418b10:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418b14:	stp	x19, x20, [sp, #16]
  418b18:	mov	x20, x0
  418b1c:	mov	x19, x1
  418b20:	add	x0, x0, #0x64
  418b24:	mov	x1, #0x8                   	// #8
  418b28:	stp	x21, x22, [sp, #32]
  418b2c:	add	x21, x20, #0x101
  418b30:	str	x25, [sp, #64]
  418b34:	bl	417c68 <wcrtomb@plt+0x13048>
  418b38:	mov	x22, x0
  418b3c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  418b40:	mov	x0, x21
  418b44:	and	w25, w22, #0xfff
  418b48:	add	x1, x1, #0xe18
  418b4c:	bl	404710 <strcmp@plt>
  418b50:	cbnz	w0, 418de0 <wcrtomb@plt+0x141c0>
  418b54:	ldrb	w0, [x20, #475]
  418b58:	cbz	w0, 418cd8 <wcrtomb@plt+0x140b8>
  418b5c:	ldr	x0, [x19, #352]
  418b60:	cmp	x0, #0x0
  418b64:	cset	w21, ne  // ne = any
  418b68:	add	w21, w21, #0x3
  418b6c:	str	w21, [x24]
  418b70:	adrp	x22, 454000 <_obstack_memory_used@@Base+0x11e10>
  418b74:	str	w25, [x19, #104]
  418b78:	add	x22, x22, #0xa50
  418b7c:	mov	w6, #0x0                   	// #0
  418b80:	mov	w5, #0x0                   	// #0
  418b84:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418b88:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418b8c:	mov	x2, x22
  418b90:	mov	x1, #0xc                   	// #12
  418b94:	add	x0, x20, #0x88
  418b98:	bl	417c68 <wcrtomb@plt+0x13048>
  418b9c:	ldrb	w2, [x20, #265]
  418ba0:	add	x1, x20, #0x109
  418ba4:	stp	x0, xzr, [x19, #232]
  418ba8:	cmp	w2, #0x0
  418bac:	csel	x1, x1, xzr, ne  // ne = any
  418bb0:	mov	x2, #0x20                  	// #32
  418bb4:	add	x0, x19, x2
  418bb8:	bl	41ab38 <wcrtomb@plt+0x15f18>
  418bbc:	ldrb	w0, [x20, #297]
  418bc0:	add	x1, x20, #0x129
  418bc4:	mov	x2, #0x20                  	// #32
  418bc8:	cmp	w0, #0x0
  418bcc:	add	x0, x19, #0x28
  418bd0:	csel	x1, x1, xzr, ne  // ne = any
  418bd4:	bl	41ab38 <wcrtomb@plt+0x15f18>
  418bd8:	mov	x0, x19
  418bdc:	bl	413b80 <wcrtomb@plt+0xef60>
  418be0:	cmp	w21, #0x2
  418be4:	b.eq	418e0c <wcrtomb@plt+0x141ec>  // b.none
  418be8:	cmp	w21, #0x5
  418bec:	b.eq	418ed0 <wcrtomb@plt+0x142b0>  // b.none
  418bf0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  418bf4:	add	x0, x0, #0x290
  418bf8:	cmp	w21, #0x1
  418bfc:	ldp	x0, x1, [x0]
  418c00:	stp	x0, x1, [x19, #216]
  418c04:	stp	x0, x1, [x19, #248]
  418c08:	b.eq	418d20 <wcrtomb@plt+0x14100>  // b.none
  418c0c:	cbz	w23, 418c84 <wcrtomb@plt+0x14064>
  418c10:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  418c14:	ldrb	w0, [x21, #616]
  418c18:	cbnz	w0, 418c24 <wcrtomb@plt+0x14004>
  418c1c:	ldrb	w0, [x20, #265]
  418c20:	cbnz	w0, 418ea8 <wcrtomb@plt+0x14288>
  418c24:	add	x0, x20, #0x6c
  418c28:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  418c2c:	mov	w6, #0x0                   	// #0
  418c30:	add	x2, x2, #0xa58
  418c34:	mov	w5, #0x0                   	// #0
  418c38:	mov	x4, #0xffffffff            	// #4294967295
  418c3c:	mov	x3, #0x0                   	// #0
  418c40:	mov	x1, #0x8                   	// #8
  418c44:	bl	417c68 <wcrtomb@plt+0x13048>
  418c48:	str	w0, [x19, #112]
  418c4c:	ldrb	w0, [x21, #616]
  418c50:	cbnz	w0, 418c5c <wcrtomb@plt+0x1403c>
  418c54:	ldrb	w0, [x20, #297]
  418c58:	cbnz	w0, 418ebc <wcrtomb@plt+0x1429c>
  418c5c:	add	x0, x20, #0x74
  418c60:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  418c64:	mov	w6, #0x0                   	// #0
  418c68:	add	x2, x2, #0xa60
  418c6c:	mov	w5, #0x0                   	// #0
  418c70:	mov	x4, #0xffffffff            	// #4294967295
  418c74:	mov	x3, #0x0                   	// #0
  418c78:	mov	x1, #0x8                   	// #8
  418c7c:	bl	417c68 <wcrtomb@plt+0x13048>
  418c80:	str	w0, [x19, #116]
  418c84:	ldrb	w0, [x20, #156]
  418c88:	sub	w0, w0, #0x33
  418c8c:	cmp	w0, #0x1
  418c90:	b.ls	418e30 <wcrtomb@plt+0x14210>  // b.plast
  418c94:	str	xzr, [x19, #120]
  418c98:	mov	x0, x19
  418c9c:	bl	413e28 <wcrtomb@plt+0xf208>
  418ca0:	mov	x0, x19
  418ca4:	bl	420af0 <wcrtomb@plt+0x1bed0>
  418ca8:	tst	w0, #0xff
  418cac:	b.eq	418d8c <wcrtomb@plt+0x1416c>  // b.none
  418cb0:	mov	x0, x19
  418cb4:	bl	420b40 <wcrtomb@plt+0x1bf20>
  418cb8:	mov	w0, #0x1                   	// #1
  418cbc:	strb	w0, [x19, #272]
  418cc0:	ldp	x19, x20, [sp, #16]
  418cc4:	ldp	x21, x22, [sp, #32]
  418cc8:	ldp	x23, x24, [sp, #48]
  418ccc:	ldr	x25, [sp, #64]
  418cd0:	ldp	x29, x30, [sp], #80
  418cd4:	ret
  418cd8:	ldrb	w0, [x20, #476]
  418cdc:	sub	w0, w0, #0x30
  418ce0:	and	w0, w0, #0xff
  418ce4:	cmp	w0, #0x7
  418ce8:	b.hi	418b5c <wcrtomb@plt+0x13f3c>  // b.pmore
  418cec:	ldrb	w0, [x20, #487]
  418cf0:	cmp	w0, #0x20
  418cf4:	b.ne	418b5c <wcrtomb@plt+0x13f3c>  // b.any
  418cf8:	ldrb	w0, [x20, #488]
  418cfc:	sub	w0, w0, #0x30
  418d00:	and	w0, w0, #0xff
  418d04:	cmp	w0, #0x7
  418d08:	b.hi	418b5c <wcrtomb@plt+0x13f3c>  // b.pmore
  418d0c:	ldrb	w0, [x20, #499]
  418d10:	mov	w21, #0x5                   	// #5
  418d14:	cmp	w0, #0x20
  418d18:	b.ne	418b5c <wcrtomb@plt+0x13f3c>  // b.any
  418d1c:	b	418b6c <wcrtomb@plt+0x13f4c>
  418d20:	mov	w6, #0x0                   	// #0
  418d24:	mov	w5, #0x0                   	// #0
  418d28:	mov	x4, #0xffffffff            	// #4294967295
  418d2c:	mov	x3, #0x0                   	// #0
  418d30:	mov	x1, #0x8                   	// #8
  418d34:	add	x0, x20, #0x6c
  418d38:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  418d3c:	add	x2, x2, #0xa58
  418d40:	bl	417c68 <wcrtomb@plt+0x13048>
  418d44:	str	w0, [x19, #112]
  418d48:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  418d4c:	add	x0, x20, #0x74
  418d50:	add	x2, x2, #0xa60
  418d54:	mov	w6, #0x0                   	// #0
  418d58:	mov	w5, #0x0                   	// #0
  418d5c:	mov	x4, #0xffffffff            	// #4294967295
  418d60:	mov	x3, #0x0                   	// #0
  418d64:	mov	x1, #0x8                   	// #8
  418d68:	bl	417c68 <wcrtomb@plt+0x13048>
  418d6c:	str	w0, [x19, #116]
  418d70:	str	xzr, [x19, #120]
  418d74:	mov	x0, x19
  418d78:	bl	413e28 <wcrtomb@plt+0xf208>
  418d7c:	mov	x0, x19
  418d80:	bl	420af0 <wcrtomb@plt+0x1bed0>
  418d84:	tst	w0, #0xff
  418d88:	b.ne	418cb0 <wcrtomb@plt+0x14090>  // b.any
  418d8c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  418d90:	strb	wzr, [x19, #272]
  418d94:	ldr	w0, [x0, #3992]
  418d98:	and	w0, w0, #0xfffffffb
  418d9c:	cmp	w0, #0x2
  418da0:	b.ne	418db8 <wcrtomb@plt+0x14198>  // b.any
  418da4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  418da8:	ldr	x0, [x0, #4016]
  418dac:	ldrb	w0, [x0, #156]
  418db0:	cmp	w0, #0x44
  418db4:	b.eq	418dc0 <wcrtomb@plt+0x141a0>  // b.none
  418db8:	ldr	x0, [x19, #384]
  418dbc:	cbz	x0, 418dc8 <wcrtomb@plt+0x141a8>
  418dc0:	mov	w0, #0x1                   	// #1
  418dc4:	strb	w0, [x19, #376]
  418dc8:	ldp	x19, x20, [sp, #16]
  418dcc:	ldp	x21, x22, [sp, #32]
  418dd0:	ldp	x23, x24, [sp, #48]
  418dd4:	ldr	x25, [sp, #64]
  418dd8:	ldp	x29, x30, [sp], #80
  418ddc:	ret
  418de0:	mov	x0, x21
  418de4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  418de8:	mov	w21, #0x1                   	// #1
  418dec:	add	x1, x1, #0xe20
  418df0:	bl	404710 <strcmp@plt>
  418df4:	cbnz	w0, 418b6c <wcrtomb@plt+0x13f4c>
  418df8:	tst	x22, #0xfffffffffffff000
  418dfc:	mov	w21, #0x2                   	// #2
  418e00:	mov	w0, #0x6                   	// #6
  418e04:	csel	w21, w21, w0, ne  // ne = any
  418e08:	b	418b6c <wcrtomb@plt+0x13f4c>
  418e0c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  418e10:	ldrb	w0, [x0, #4073]
  418e14:	cbnz	w0, 418f20 <wcrtomb@plt+0x14300>
  418e18:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  418e1c:	add	x0, x0, #0x290
  418e20:	ldp	x0, x1, [x0]
  418e24:	stp	x0, x1, [x19, #216]
  418e28:	stp	x0, x1, [x19, #248]
  418e2c:	b	418c0c <wcrtomb@plt+0x13fec>
  418e30:	mov	w6, #0x0                   	// #0
  418e34:	mov	w5, #0x0                   	// #0
  418e38:	mov	x4, #0x7fffffff            	// #2147483647
  418e3c:	mov	x3, #0xffffffff80000000    	// #-2147483648
  418e40:	mov	x1, #0x8                   	// #8
  418e44:	add	x0, x20, #0x149
  418e48:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  418e4c:	add	x2, x2, #0xb20
  418e50:	bl	417c68 <wcrtomb@plt+0x13048>
  418e54:	mov	x21, x0
  418e58:	mov	x1, #0x8                   	// #8
  418e5c:	add	x0, x20, #0x151
  418e60:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  418e64:	mov	w6, #0x0                   	// #0
  418e68:	add	x2, x2, #0xb38
  418e6c:	mov	w5, #0x0                   	// #0
  418e70:	mov	x4, #0x7fffffff            	// #2147483647
  418e74:	mov	x3, #0xffffffff80000000    	// #-2147483648
  418e78:	bl	417c68 <wcrtomb@plt+0x13048>
  418e7c:	and	x2, x0, #0xff
  418e80:	lsl	x1, x21, #32
  418e84:	lsl	x0, x0, #12
  418e88:	and	x1, x1, #0xfffff00000000000
  418e8c:	ubfiz	x21, x21, #8, #12
  418e90:	and	x0, x0, #0xffffff00000
  418e94:	orr	x21, x21, x1
  418e98:	orr	x0, x0, x2
  418e9c:	orr	x0, x0, x21
  418ea0:	str	x0, [x19, #120]
  418ea4:	b	418d74 <wcrtomb@plt+0x14154>
  418ea8:	add	x1, x19, #0x70
  418eac:	add	x0, x20, #0x109
  418eb0:	bl	41da60 <wcrtomb@plt+0x18e40>
  418eb4:	cbz	w0, 418c24 <wcrtomb@plt+0x14004>
  418eb8:	b	418c4c <wcrtomb@plt+0x1402c>
  418ebc:	add	x1, x19, #0x74
  418ec0:	add	x0, x20, #0x129
  418ec4:	bl	41db28 <wcrtomb@plt+0x18f08>
  418ec8:	cbz	w0, 418c5c <wcrtomb@plt+0x1403c>
  418ecc:	b	418c84 <wcrtomb@plt+0x14064>
  418ed0:	mov	x2, x22
  418ed4:	mov	w6, #0x0                   	// #0
  418ed8:	mov	w5, #0x0                   	// #0
  418edc:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418ee0:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418ee4:	mov	x1, #0xc                   	// #12
  418ee8:	add	x0, x20, #0x1dc
  418eec:	bl	417c68 <wcrtomb@plt+0x13048>
  418ef0:	str	x0, [x19, #216]
  418ef4:	mov	x2, x22
  418ef8:	add	x0, x20, #0x1e8
  418efc:	mov	w6, #0x0                   	// #0
  418f00:	mov	w5, #0x0                   	// #0
  418f04:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418f08:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418f0c:	mov	x1, #0xc                   	// #12
  418f10:	bl	417c68 <wcrtomb@plt+0x13048>
  418f14:	str	xzr, [x19, #224]
  418f18:	stp	x0, xzr, [x19, #248]
  418f1c:	b	418c0c <wcrtomb@plt+0x13fec>
  418f20:	mov	x2, x22
  418f24:	mov	w6, #0x0                   	// #0
  418f28:	mov	w5, #0x0                   	// #0
  418f2c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418f30:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418f34:	mov	x1, #0xc                   	// #12
  418f38:	add	x0, x20, #0x159
  418f3c:	bl	417c68 <wcrtomb@plt+0x13048>
  418f40:	str	x0, [x19, #216]
  418f44:	mov	x2, x22
  418f48:	add	x0, x20, #0x165
  418f4c:	mov	w6, #0x0                   	// #0
  418f50:	mov	w5, #0x0                   	// #0
  418f54:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418f58:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418f5c:	mov	x1, #0xc                   	// #12
  418f60:	bl	417c68 <wcrtomb@plt+0x13048>
  418f64:	str	xzr, [x19, #224]
  418f68:	stp	x0, xzr, [x19, #248]
  418f6c:	b	418c0c <wcrtomb@plt+0x13fec>
  418f70:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  418f74:	mov	w6, #0x0                   	// #0
  418f78:	add	x2, x2, #0xa48
  418f7c:	mov	w5, #0x0                   	// #0
  418f80:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418f84:	mov	x3, #0x0                   	// #0
  418f88:	b	417c68 <wcrtomb@plt+0x13048>
  418f8c:	nop
  418f90:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  418f94:	mov	w6, #0x0                   	// #0
  418f98:	add	x2, x2, #0xa68
  418f9c:	mov	w5, #0x0                   	// #0
  418fa0:	mov	x4, #0xffffffffffffffff    	// #-1
  418fa4:	mov	x3, #0x0                   	// #0
  418fa8:	b	417c68 <wcrtomb@plt+0x13048>
  418fac:	nop
  418fb0:	stp	x29, x30, [sp, #-64]!
  418fb4:	cmp	w1, #0x0
  418fb8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  418fbc:	mov	x29, sp
  418fc0:	stp	x19, x20, [sp, #16]
  418fc4:	mov	x19, x0
  418fc8:	mov	w20, w1
  418fcc:	stp	x21, x22, [sp, #32]
  418fd0:	and	w21, w2, #0xff
  418fd4:	str	x0, [sp, #56]
  418fd8:	b.ge	418ff0 <wcrtomb@plt+0x143d0>  // b.tcont
  418fdc:	mov	w20, #0xca00                	// #51712
  418fe0:	add	x0, x0, #0x1
  418fe4:	movk	w20, #0x3b9a, lsl #16
  418fe8:	sub	w20, w20, w1
  418fec:	str	x0, [sp, #56]
  418ff0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  418ff4:	ldrb	w0, [x0, #497]
  418ff8:	cbz	w0, 419090 <wcrtomb@plt+0x14470>
  418ffc:	add	x0, sp, #0x38
  419000:	bl	404510 <gmtime@plt>
  419004:	mov	x3, x0
  419008:	cbz	x3, 4190a0 <wcrtomb@plt+0x14480>
  41900c:	cbnz	w21, 419044 <wcrtomb@plt+0x14424>
  419010:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419014:	add	x0, x0, #0x898
  419018:	add	x0, x0, #0x118
  41901c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x13e10>
  419020:	mov	x19, x0
  419024:	add	x2, x2, #0xf0
  419028:	mov	x1, #0x25                  	// #37
  41902c:	bl	404150 <strftime@plt>
  419030:	mov	x0, x19
  419034:	ldp	x19, x20, [sp, #16]
  419038:	ldp	x21, x22, [sp, #32]
  41903c:	ldp	x29, x30, [sp], #64
  419040:	ret
  419044:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  419048:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41904c:	add	x2, x2, #0xb28
  419050:	add	x21, x21, #0x898
  419054:	add	x21, x21, #0x118
  419058:	mov	x1, #0x25                  	// #37
  41905c:	mov	x0, x21
  419060:	bl	404150 <strftime@plt>
  419064:	mov	x0, x21
  419068:	bl	403ff0 <strlen@plt>
  41906c:	mov	x19, x21
  419070:	add	x1, x21, x0
  419074:	mov	w0, w20
  419078:	bl	41b288 <wcrtomb@plt+0x16668>
  41907c:	mov	x0, x19
  419080:	ldp	x19, x20, [sp, #16]
  419084:	ldp	x21, x22, [sp, #32]
  419088:	ldp	x29, x30, [sp], #64
  41908c:	ret
  419090:	add	x0, sp, #0x38
  419094:	bl	404240 <localtime@plt>
  419098:	mov	x3, x0
  41909c:	cbnz	x3, 41900c <wcrtomb@plt+0x143ec>
  4190a0:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4190a4:	add	x22, x22, #0x898
  4190a8:	ldr	x0, [sp, #56]
  4190ac:	tbnz	x19, #63, 419110 <wcrtomb@plt+0x144f0>
  4190b0:	add	x1, x22, #0x11e
  4190b4:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4190b8:	add	x3, x22, #0x139
  4190bc:	cmp	w21, #0x0
  4190c0:	add	x2, x22, #0x12c
  4190c4:	mov	x1, x0
  4190c8:	csel	x2, x3, x2, ne  // ne = any
  4190cc:	mov	w3, #0x20                  	// #32
  4190d0:	b	4190d8 <wcrtomb@plt+0x144b8>
  4190d4:	strb	w3, [x1, #-1]!
  4190d8:	cmp	x1, x2
  4190dc:	b.hi	4190d4 <wcrtomb@plt+0x144b4>  // b.pmore
  4190e0:	subs	x2, x2, x0
  4190e4:	csel	x2, x2, xzr, ls  // ls = plast
  4190e8:	add	x19, x0, x2
  4190ec:	cbz	w21, 419030 <wcrtomb@plt+0x14410>
  4190f0:	add	x1, x22, #0x132
  4190f4:	mov	w0, w20
  4190f8:	bl	41b288 <wcrtomb@plt+0x16668>
  4190fc:	mov	x0, x19
  419100:	ldp	x19, x20, [sp, #16]
  419104:	ldp	x21, x22, [sp, #32]
  419108:	ldp	x29, x30, [sp], #64
  41910c:	ret
  419110:	add	x1, x22, #0x11e
  419114:	neg	x0, x0
  419118:	bl	4398d8 <argp_parse@@Base+0x59f0>
  41911c:	mov	x1, x0
  419120:	mov	w2, #0x2d                  	// #45
  419124:	sub	x0, x0, #0x1
  419128:	sturb	w2, [x1, #-1]
  41912c:	b	4190b8 <wcrtomb@plt+0x14498>
  419130:	sub	sp, sp, #0x120
  419134:	stp	x29, x30, [sp, #16]
  419138:	add	x29, sp, #0x10
  41913c:	stp	x25, x26, [sp, #80]
  419140:	adrp	x26, 483000 <argp_program_version_hook@@Base+0x290>
  419144:	ldrb	w3, [x26, #784]
  419148:	stp	x19, x20, [sp, #32]
  41914c:	mov	x19, x0
  419150:	mov	x0, x2
  419154:	stp	x21, x22, [sp, #48]
  419158:	mov	x22, x1
  41915c:	stp	x23, x24, [sp, #64]
  419160:	cbz	w3, 419668 <wcrtomb@plt+0x14a48>
  419164:	ldr	x25, [x19, #8]
  419168:	cbz	x25, 419720 <wcrtomb@plt+0x14b00>
  41916c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  419170:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419174:	ldrb	w1, [x1, #617]
  419178:	cbz	w1, 4191d8 <wcrtomb@plt+0x145b8>
  41917c:	tbnz	x0, #63, 419728 <wcrtomb@plt+0x14b08>
  419180:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419184:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419188:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41918c:	mov	w2, #0x5                   	// #5
  419190:	ldr	x3, [x3, #4024]
  419194:	ldr	x21, [x1, #4008]
  419198:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41919c:	ldr	x24, [x20, #3872]
  4191a0:	add	x21, x21, x3
  4191a4:	add	x1, x1, #0x100
  4191a8:	sub	x21, x0, x21
  4191ac:	mov	x0, #0x0                   	// #0
  4191b0:	bl	4049c0 <dcgettext@plt>
  4191b4:	add	x1, sp, #0xf0
  4191b8:	mov	x23, x0
  4191bc:	mov	x0, x21
  4191c0:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4191c4:	mov	x2, x23
  4191c8:	mov	x3, x0
  4191cc:	mov	w1, #0x1                   	// #1
  4191d0:	mov	x0, x24
  4191d4:	bl	404700 <__fprintf_chk@plt>
  4191d8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4191dc:	ldr	w0, [x0, #588]
  4191e0:	cmp	w0, #0x1
  4191e4:	b.le	419680 <wcrtomb@plt+0x14a60>
  4191e8:	ldrb	w0, [x22, #156]
  4191ec:	mov	w1, #0x3f                  	// #63
  4191f0:	stp	x27, x28, [sp, #96]
  4191f4:	cmp	w0, #0x36
  4191f8:	strb	w1, [sp, #152]
  4191fc:	b.eq	41982c <wcrtomb@plt+0x14c0c>  // b.none
  419200:	b.hi	419434 <wcrtomb@plt+0x14814>  // b.pmore
  419204:	cmp	w0, #0x33
  419208:	b.eq	419838 <wcrtomb@plt+0x14c18>  // b.none
  41920c:	b.ls	419460 <wcrtomb@plt+0x14840>  // b.plast
  419210:	cmp	w0, #0x34
  419214:	b.ne	419454 <wcrtomb@plt+0x14834>  // b.any
  419218:	mov	w0, #0x62                  	// #98
  41921c:	strb	w0, [sp, #152]
  419220:	ldr	w0, [x19, #104]
  419224:	add	x1, sp, #0x99
  419228:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41922c:	bl	429948 <wcrtomb@plt+0x24d28>
  419230:	add	x1, sp, #0xa2
  419234:	mov	x0, x19
  419238:	bl	429660 <wcrtomb@plt+0x24a40>
  41923c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  419240:	ldp	x0, x1, [x19, #232]
  419244:	ldrb	w2, [x2, #640]
  419248:	bl	418fb0 <wcrtomb@plt+0x14390>
  41924c:	str	x0, [sp, #120]
  419250:	bl	403ff0 <strlen@plt>
  419254:	ldr	w1, [x24, #2176]
  419258:	cmp	w1, w0
  41925c:	b.lt	4194dc <wcrtomb@plt+0x148bc>  // b.tstop
  419260:	ldr	x21, [x19, #32]
  419264:	cbz	x21, 419270 <wcrtomb@plt+0x14650>
  419268:	ldrb	w0, [x21]
  41926c:	cbnz	w0, 4194e4 <wcrtomb@plt+0x148c4>
  419270:	ldr	w0, [x19, #112]
  419274:	add	x1, sp, #0xa8
  419278:	bl	4398d8 <argp_parse@@Base+0x59f0>
  41927c:	mov	x21, x0
  419280:	ldr	x28, [x19, #40]
  419284:	cbz	x28, 4192b0 <wcrtomb@plt+0x14690>
  419288:	ldrb	w0, [x28]
  41928c:	cbz	w0, 4192b0 <wcrtomb@plt+0x14690>
  419290:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419294:	ldr	w0, [x0, #3992]
  419298:	cmp	w0, #0x1
  41929c:	b.eq	4192b0 <wcrtomb@plt+0x14690>  // b.none
  4192a0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4192a4:	ldrb	w0, [x0, #616]
  4192a8:	cbz	w0, 4192c0 <wcrtomb@plt+0x146a0>
  4192ac:	nop
  4192b0:	ldr	w0, [x19, #116]
  4192b4:	add	x1, sp, #0xc0
  4192b8:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4192bc:	mov	x28, x0
  4192c0:	ldrb	w0, [x22, #156]
  4192c4:	sub	w0, w0, #0x33
  4192c8:	cmp	w0, #0x1
  4192cc:	b.ls	419504 <wcrtomb@plt+0x148e4>  // b.plast
  4192d0:	ldr	x0, [x19, #136]
  4192d4:	add	x27, sp, #0xd8
  4192d8:	mov	x1, x27
  4192dc:	add	x23, sp, #0xf0
  4192e0:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4192e4:	mov	x1, x0
  4192e8:	mov	x2, #0x2a                  	// #42
  4192ec:	mov	x0, x23
  4192f0:	bl	404370 <__strcpy_chk@plt>
  4192f4:	mov	x0, x23
  4192f8:	bl	403ff0 <strlen@plt>
  4192fc:	mov	x2, x0
  419300:	mov	x0, x21
  419304:	str	x2, [sp, #136]
  419308:	bl	403ff0 <strlen@plt>
  41930c:	mov	x1, x0
  419310:	mov	x0, x28
  419314:	str	x1, [sp, #128]
  419318:	bl	403ff0 <strlen@plt>
  41931c:	ldp	x1, x2, [sp, #128]
  419320:	add	x3, x24, #0x880
  419324:	add	w1, w1, w0
  419328:	add	w0, w2, #0x2
  41932c:	add	w1, w0, w1
  419330:	ldr	w0, [x3, #4]
  419334:	mov	w6, w2
  419338:	cmp	w0, w1
  41933c:	b.lt	419678 <wcrtomb@plt+0x14a58>  // b.tstop
  419340:	sub	w1, w0, w1
  419344:	add	w6, w1, w2
  419348:	ldr	x0, [x20, #3872]
  41934c:	mov	x4, x21
  419350:	ldr	x1, [sp, #120]
  419354:	str	x1, [sp, #8]
  419358:	ldr	w1, [x24, #2176]
  41935c:	mov	x5, x28
  419360:	str	w1, [sp]
  419364:	add	x3, sp, #0x98
  419368:	mov	x7, x23
  41936c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x13e10>
  419370:	add	x2, x2, #0x110
  419374:	mov	w1, #0x1                   	// #1
  419378:	bl	404700 <__fprintf_chk@plt>
  41937c:	ldr	x21, [x20, #3872]
  419380:	mov	x0, x25
  419384:	bl	43ff30 <argp_parse@@Base+0xc048>
  419388:	mov	x3, x0
  41938c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  419390:	mov	x0, x21
  419394:	add	x2, x2, #0xde8
  419398:	mov	w1, #0x1                   	// #1
  41939c:	bl	404700 <__fprintf_chk@plt>
  4193a0:	ldrb	w0, [x26, #784]
  4193a4:	cbz	w0, 4193b0 <wcrtomb@plt+0x14790>
  4193a8:	ldrb	w0, [x19, #16]
  4193ac:	cbnz	w0, 4196fc <wcrtomb@plt+0x14adc>
  4193b0:	ldrb	w3, [x22, #156]
  4193b4:	cmp	w3, #0x4b
  4193b8:	b.eq	41975c <wcrtomb@plt+0x14b3c>  // b.none
  4193bc:	b.ls	419594 <wcrtomb@plt+0x14974>  // b.plast
  4193c0:	cmp	w3, #0x4d
  4193c4:	b.eq	419770 <wcrtomb@plt+0x14b50>  // b.none
  4193c8:	b.ls	419578 <wcrtomb@plt+0x14958>  // b.plast
  4193cc:	cmp	w3, #0x53
  4193d0:	b.eq	4195a8 <wcrtomb@plt+0x14988>  // b.none
  4193d4:	cmp	w3, #0x56
  4193d8:	b.ne	419620 <wcrtomb@plt+0x14a00>  // b.any
  4193dc:	ldr	x21, [x20, #3872]
  4193e0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  4193e4:	add	x1, x1, #0x178
  4193e8:	mov	w2, #0x5                   	// #5
  4193ec:	mov	x0, #0x0                   	// #0
  4193f0:	bl	4049c0 <dcgettext@plt>
  4193f4:	mov	w1, #0x1                   	// #1
  4193f8:	mov	x2, x0
  4193fc:	mov	x0, x21
  419400:	bl	404700 <__fprintf_chk@plt>
  419404:	ldp	x27, x28, [sp, #96]
  419408:	ldr	x0, [x20, #3872]
  41940c:	bl	4048d0 <fflush_unlocked@plt>
  419410:	mov	x0, x19
  419414:	bl	4297b8 <wcrtomb@plt+0x24b98>
  419418:	ldp	x29, x30, [sp, #16]
  41941c:	ldp	x19, x20, [sp, #32]
  419420:	ldp	x21, x22, [sp, #48]
  419424:	ldp	x23, x24, [sp, #64]
  419428:	ldp	x25, x26, [sp, #80]
  41942c:	add	sp, sp, #0x120
  419430:	ret
  419434:	cmp	w0, #0x4c
  419438:	b.hi	419480 <wcrtomb@plt+0x14860>  // b.pmore
  41943c:	cmp	w0, #0x4a
  419440:	b.hi	4197e0 <wcrtomb@plt+0x14bc0>  // b.pmore
  419444:	cmp	w0, #0x37
  419448:	b.eq	4196e4 <wcrtomb@plt+0x14ac4>  // b.none
  41944c:	cmp	w0, #0x44
  419450:	b.ne	419220 <wcrtomb@plt+0x14600>  // b.any
  419454:	mov	w0, #0x64                  	// #100
  419458:	strb	w0, [sp, #152]
  41945c:	b	419220 <wcrtomb@plt+0x14600>
  419460:	cmp	w0, #0x31
  419464:	b.eq	4196f0 <wcrtomb@plt+0x14ad0>  // b.none
  419468:	b.ls	4194a4 <wcrtomb@plt+0x14884>  // b.plast
  41946c:	cmp	w0, #0x32
  419470:	b.ne	419220 <wcrtomb@plt+0x14600>  // b.any
  419474:	mov	w0, #0x6c                  	// #108
  419478:	strb	w0, [sp, #152]
  41947c:	b	419220 <wcrtomb@plt+0x14600>
  419480:	cmp	w0, #0x53
  419484:	b.eq	4194b0 <wcrtomb@plt+0x14890>  // b.none
  419488:	cmp	w0, #0x56
  41948c:	b.ne	4194cc <wcrtomb@plt+0x148ac>  // b.any
  419490:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419494:	mov	w2, #0x1                   	// #1
  419498:	strb	w0, [sp, #152]
  41949c:	strb	w2, [x1, #2517]
  4194a0:	b	419220 <wcrtomb@plt+0x14600>
  4194a4:	cbz	w0, 4194b0 <wcrtomb@plt+0x14890>
  4194a8:	cmp	w0, #0x30
  4194ac:	b.ne	419220 <wcrtomb@plt+0x14600>  // b.any
  4194b0:	ldrb	w2, [x19, #16]
  4194b4:	mov	w0, #0x64                  	// #100
  4194b8:	mov	w1, #0x2d                  	// #45
  4194bc:	cmp	w2, #0x0
  4194c0:	csel	w0, w0, w1, ne  // ne = any
  4194c4:	strb	w0, [sp, #152]
  4194c8:	b	419220 <wcrtomb@plt+0x14600>
  4194cc:	cmp	w0, #0x4d
  4194d0:	b.ne	419220 <wcrtomb@plt+0x14600>  // b.any
  4194d4:	strb	w0, [sp, #152]
  4194d8:	b	419220 <wcrtomb@plt+0x14600>
  4194dc:	str	w0, [x24, #2176]
  4194e0:	b	419260 <wcrtomb@plt+0x14640>
  4194e4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4194e8:	ldr	w0, [x0, #3992]
  4194ec:	cmp	w0, #0x1
  4194f0:	b.eq	419270 <wcrtomb@plt+0x14650>  // b.none
  4194f4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4194f8:	ldrb	w0, [x0, #616]
  4194fc:	cbz	w0, 419280 <wcrtomb@plt+0x14660>
  419500:	b	419270 <wcrtomb@plt+0x14650>
  419504:	ldr	x0, [x19, #120]
  419508:	add	x27, sp, #0xd8
  41950c:	add	x23, sp, #0xf0
  419510:	mov	x1, x27
  419514:	lsr	x2, x0, #32
  419518:	ubfx	w0, w0, #8, #12
  41951c:	and	w2, w2, #0xfffff000
  419520:	orr	w0, w2, w0
  419524:	bl	4398d8 <argp_parse@@Base+0x59f0>
  419528:	mov	x1, x0
  41952c:	mov	x2, #0x2a                  	// #42
  419530:	mov	x0, x23
  419534:	bl	404840 <__stpcpy_chk@plt>
  419538:	sub	x3, x23, x0
  41953c:	add	x3, x3, #0x2a
  419540:	mov	x2, #0x2                   	// #2
  419544:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  419548:	add	x1, x1, #0x5f8
  41954c:	bl	404250 <__memcpy_chk@plt>
  419550:	ldr	x2, [x19, #120]
  419554:	mov	x1, x27
  419558:	lsr	x0, x2, #12
  41955c:	bfxil	x0, x2, #0, #8
  419560:	bl	4398d8 <argp_parse@@Base+0x59f0>
  419564:	mov	x2, #0x2a                  	// #42
  419568:	mov	x1, x0
  41956c:	mov	x0, x23
  419570:	bl	4047c0 <__strcat_chk@plt>
  419574:	b	4192f4 <wcrtomb@plt+0x146d4>
  419578:	cmp	w3, #0x4c
  41957c:	b.ne	419620 <wcrtomb@plt+0x14a00>  // b.any
  419580:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  419584:	mov	w2, #0x5                   	// #5
  419588:	ldr	x21, [x20, #3872]
  41958c:	add	x1, x1, #0x168
  419590:	b	4193ec <wcrtomb@plt+0x147cc>
  419594:	cmp	w3, #0x32
  419598:	b.eq	419730 <wcrtomb@plt+0x14b10>  // b.none
  41959c:	b.ls	4195d0 <wcrtomb@plt+0x149b0>  // b.plast
  4195a0:	cmp	w3, #0x37
  4195a4:	b.hi	419618 <wcrtomb@plt+0x149f8>  // b.pmore
  4195a8:	ldr	x0, [x20, #3872]
  4195ac:	ldp	x1, x2, [x0, #40]
  4195b0:	cmp	x1, x2
  4195b4:	b.cs	419844 <wcrtomb@plt+0x14c24>  // b.hs, b.nlast
  4195b8:	add	x2, x1, #0x1
  4195bc:	str	x2, [x0, #40]
  4195c0:	mov	w0, #0xa                   	// #10
  4195c4:	strb	w0, [x1]
  4195c8:	ldp	x27, x28, [sp, #96]
  4195cc:	b	419408 <wcrtomb@plt+0x147e8>
  4195d0:	cmp	w3, #0x31
  4195d4:	b.ne	419650 <wcrtomb@plt+0x14a30>  // b.any
  4195d8:	ldr	x22, [x20, #3872]
  4195dc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  4195e0:	mov	w2, #0x5                   	// #5
  4195e4:	add	x1, x1, #0x130
  4195e8:	mov	x0, #0x0                   	// #0
  4195ec:	bl	4049c0 <dcgettext@plt>
  4195f0:	mov	x21, x0
  4195f4:	ldr	x0, [x19, #24]
  4195f8:	bl	43ff30 <argp_parse@@Base+0xc048>
  4195fc:	mov	x3, x0
  419600:	mov	x2, x21
  419604:	mov	x0, x22
  419608:	mov	w1, #0x1                   	// #1
  41960c:	bl	404700 <__fprintf_chk@plt>
  419610:	ldp	x27, x28, [sp, #96]
  419614:	b	419408 <wcrtomb@plt+0x147e8>
  419618:	cmp	w3, #0x44
  41961c:	b.eq	4195a8 <wcrtomb@plt+0x14988>  // b.none
  419620:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  419624:	add	x1, x1, #0x140
  419628:	mov	w2, #0x5                   	// #5
  41962c:	mov	x0, #0x0                   	// #0
  419630:	ldr	x22, [x20, #3872]
  419634:	strb	w3, [sp, #144]
  419638:	strb	wzr, [sp, #145]
  41963c:	bl	4049c0 <dcgettext@plt>
  419640:	mov	x21, x0
  419644:	add	x0, sp, #0x90
  419648:	bl	440248 <argp_parse@@Base+0xc360>
  41964c:	b	4195fc <wcrtomb@plt+0x149dc>
  419650:	cmp	w3, #0x32
  419654:	b.eq	419620 <wcrtomb@plt+0x14a00>  // b.none
  419658:	cbz	w3, 4195a8 <wcrtomb@plt+0x14988>
  41965c:	cmp	w3, #0x30
  419660:	b.eq	4195a8 <wcrtomb@plt+0x14988>  // b.none
  419664:	b	419620 <wcrtomb@plt+0x14a00>
  419668:	ldr	x25, [x19]
  41966c:	cbnz	x25, 41916c <wcrtomb@plt+0x1454c>
  419670:	ldr	x25, [x19, #8]
  419674:	b	41916c <wcrtomb@plt+0x1454c>
  419678:	str	w1, [x3, #4]
  41967c:	b	419348 <wcrtomb@plt+0x14728>
  419680:	mov	x0, x25
  419684:	bl	43ff30 <argp_parse@@Base+0xc048>
  419688:	ldr	x1, [x20, #3872]
  41968c:	bl	4049e0 <fputs_unlocked@plt>
  419690:	ldrb	w0, [x26, #784]
  419694:	cbz	w0, 4196c0 <wcrtomb@plt+0x14aa0>
  419698:	ldr	x0, [x20, #3872]
  41969c:	ldrb	w3, [x19, #16]
  4196a0:	ldp	x1, x2, [x0, #40]
  4196a4:	cbz	w3, 4196c8 <wcrtomb@plt+0x14aa8>
  4196a8:	cmp	x1, x2
  4196ac:	b.cs	41986c <wcrtomb@plt+0x14c4c>  // b.hs, b.nlast
  4196b0:	add	x2, x1, #0x1
  4196b4:	str	x2, [x0, #40]
  4196b8:	mov	w0, #0x2f                  	// #47
  4196bc:	strb	w0, [x1]
  4196c0:	ldr	x0, [x20, #3872]
  4196c4:	ldp	x1, x2, [x0, #40]
  4196c8:	cmp	x1, x2
  4196cc:	b.cs	419854 <wcrtomb@plt+0x14c34>  // b.hs, b.nlast
  4196d0:	add	x2, x1, #0x1
  4196d4:	str	x2, [x0, #40]
  4196d8:	mov	w0, #0xa                   	// #10
  4196dc:	strb	w0, [x1]
  4196e0:	b	419408 <wcrtomb@plt+0x147e8>
  4196e4:	mov	w0, #0x43                  	// #67
  4196e8:	strb	w0, [sp, #152]
  4196ec:	b	419220 <wcrtomb@plt+0x14600>
  4196f0:	mov	w0, #0x68                  	// #104
  4196f4:	strb	w0, [sp, #152]
  4196f8:	b	419220 <wcrtomb@plt+0x14600>
  4196fc:	ldr	x0, [x20, #3872]
  419700:	ldp	x1, x2, [x0, #40]
  419704:	cmp	x1, x2
  419708:	b.cs	419860 <wcrtomb@plt+0x14c40>  // b.hs, b.nlast
  41970c:	add	x2, x1, #0x1
  419710:	str	x2, [x0, #40]
  419714:	mov	w0, #0x2f                  	// #47
  419718:	strb	w0, [x1]
  41971c:	b	4193b0 <wcrtomb@plt+0x14790>
  419720:	ldr	x25, [x19]
  419724:	b	41916c <wcrtomb@plt+0x1454c>
  419728:	bl	405b20 <wcrtomb@plt+0xf00>
  41972c:	b	419180 <wcrtomb@plt+0x14560>
  419730:	ldr	x0, [x19, #24]
  419734:	ldr	x21, [x20, #3872]
  419738:	bl	43ff30 <argp_parse@@Base+0xc048>
  41973c:	mov	x3, x0
  419740:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x13e10>
  419744:	mov	x0, x21
  419748:	add	x2, x2, #0x128
  41974c:	mov	w1, #0x1                   	// #1
  419750:	bl	404700 <__fprintf_chk@plt>
  419754:	ldp	x27, x28, [sp, #96]
  419758:	b	419408 <wcrtomb@plt+0x147e8>
  41975c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  419760:	mov	w2, #0x5                   	// #5
  419764:	ldr	x21, [x20, #3872]
  419768:	add	x1, x1, #0x158
  41976c:	b	4193ec <wcrtomb@plt+0x147cc>
  419770:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  419774:	add	x2, x2, #0xa68
  419778:	mov	w6, #0x0                   	// #0
  41977c:	mov	w5, #0x0                   	// #0
  419780:	mov	x4, #0xffffffffffffffff    	// #-1
  419784:	mov	x3, #0x0                   	// #0
  419788:	mov	x1, #0xc                   	// #12
  41978c:	add	x0, x22, #0x171
  419790:	bl	417c68 <wcrtomb@plt+0x13048>
  419794:	mov	x1, x27
  419798:	bl	4398d8 <argp_parse@@Base+0x59f0>
  41979c:	mov	x2, #0x2a                  	// #42
  4197a0:	mov	x1, x0
  4197a4:	mov	x0, x23
  4197a8:	bl	404370 <__strcpy_chk@plt>
  4197ac:	ldr	x21, [x20, #3872]
  4197b0:	mov	w2, #0x5                   	// #5
  4197b4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  4197b8:	mov	x0, #0x0                   	// #0
  4197bc:	add	x1, x1, #0x190
  4197c0:	bl	4049c0 <dcgettext@plt>
  4197c4:	mov	x3, x23
  4197c8:	mov	x2, x0
  4197cc:	mov	w1, #0x1                   	// #1
  4197d0:	mov	x0, x21
  4197d4:	bl	404700 <__fprintf_chk@plt>
  4197d8:	ldp	x27, x28, [sp, #96]
  4197dc:	b	419408 <wcrtomb@plt+0x147e8>
  4197e0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4197e4:	mov	w1, #0x4c                  	// #76
  4197e8:	strb	w1, [sp, #152]
  4197ec:	ldr	x0, [x0, #952]
  4197f0:	cbz	x0, 4197f8 <wcrtomb@plt+0x14bd8>
  4197f4:	blr	x0
  4197f8:	mov	w2, #0x5                   	// #5
  4197fc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  419800:	mov	x0, #0x0                   	// #0
  419804:	add	x1, x1, #0xff8
  419808:	bl	4049c0 <dcgettext@plt>
  41980c:	mov	x2, x0
  419810:	mov	w1, #0x0                   	// #0
  419814:	mov	w0, #0x0                   	// #0
  419818:	bl	404050 <error@plt>
  41981c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419820:	mov	w1, #0x2                   	// #2
  419824:	str	w1, [x0, #3400]
  419828:	b	419220 <wcrtomb@plt+0x14600>
  41982c:	mov	w0, #0x70                  	// #112
  419830:	strb	w0, [sp, #152]
  419834:	b	419220 <wcrtomb@plt+0x14600>
  419838:	mov	w0, #0x63                  	// #99
  41983c:	strb	w0, [sp, #152]
  419840:	b	419220 <wcrtomb@plt+0x14600>
  419844:	mov	w1, #0xa                   	// #10
  419848:	bl	404680 <__overflow@plt>
  41984c:	ldp	x27, x28, [sp, #96]
  419850:	b	419408 <wcrtomb@plt+0x147e8>
  419854:	mov	w1, #0xa                   	// #10
  419858:	bl	404680 <__overflow@plt>
  41985c:	b	419408 <wcrtomb@plt+0x147e8>
  419860:	mov	w1, #0x2f                  	// #47
  419864:	bl	404680 <__overflow@plt>
  419868:	b	4193b0 <wcrtomb@plt+0x14790>
  41986c:	mov	w1, #0x2f                  	// #47
  419870:	bl	404680 <__overflow@plt>
  419874:	ldr	x0, [x20, #3872]
  419878:	ldp	x1, x2, [x0, #40]
  41987c:	b	4196c8 <wcrtomb@plt+0x14aa8>
  419880:	sub	sp, sp, #0x3d0
  419884:	mov	w1, #0x0                   	// #0
  419888:	add	x0, sp, #0x1d0
  41988c:	mov	x2, #0x200                 	// #512
  419890:	stp	x29, x30, [sp]
  419894:	mov	x29, sp
  419898:	str	x19, [sp, #16]
  41989c:	bl	404410 <memset@plt>
  4198a0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4198a4:	mov	w1, #0x56                  	// #86
  4198a8:	strb	w1, [sp, #620]
  4198ac:	ldr	x0, [x0, #2472]
  4198b0:	cbz	x0, 4198c4 <wcrtomb@plt+0x14ca4>
  4198b4:	ldr	x1, [x0, #136]
  4198b8:	str	x1, [sp, #600]
  4198bc:	ldr	w0, [x0, #144]
  4198c0:	str	w0, [sp, #608]
  4198c4:	add	x0, sp, #0x28
  4198c8:	add	x19, x0, #0x8
  4198cc:	bl	425f70 <wcrtomb@plt+0x21350>
  4198d0:	mov	x0, x19
  4198d4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  4198d8:	add	x1, x1, #0x668
  4198dc:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  4198e0:	mov	w3, #0x0                   	// #0
  4198e4:	add	x2, sp, #0x24
  4198e8:	add	x1, sp, #0x28
  4198ec:	add	x0, sp, #0x1d0
  4198f0:	bl	418ae8 <wcrtomb@plt+0x13ec8>
  4198f4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4198f8:	mov	x0, x19
  4198fc:	ldr	x1, [x1, #3912]
  419900:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  419904:	add	x1, sp, #0x1d0
  419908:	mov	x2, #0x0                   	// #0
  41990c:	add	x0, sp, #0x28
  419910:	bl	419130 <wcrtomb@plt+0x14510>
  419914:	add	x0, sp, #0x28
  419918:	bl	425ff8 <wcrtomb@plt+0x213d8>
  41991c:	ldp	x29, x30, [sp]
  419920:	ldr	x19, [sp, #16]
  419924:	add	sp, sp, #0x3d0
  419928:	ret
  41992c:	nop
  419930:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419934:	ldr	w3, [x3, #3992]
  419938:	cmp	w3, #0x4
  41993c:	b.eq	419944 <wcrtomb@plt+0x14d24>  // b.none
  419940:	b	419130 <wcrtomb@plt+0x14510>
  419944:	stp	x29, x30, [sp, #-64]!
  419948:	mov	x29, sp
  41994c:	str	x19, [sp, #16]
  419950:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419954:	add	x19, x19, #0x898
  419958:	ldrb	w3, [x19, #317]
  41995c:	cbnz	w3, 419988 <wcrtomb@plt+0x14d68>
  419960:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419964:	ldr	x3, [x3, #3912]
  419968:	cbz	x3, 419988 <wcrtomb@plt+0x14d68>
  41996c:	stp	x0, x1, [sp, #40]
  419970:	str	x2, [sp, #56]
  419974:	bl	419880 <wcrtomb@plt+0x14c60>
  419978:	ldp	x0, x1, [sp, #40]
  41997c:	mov	w3, #0x1                   	// #1
  419980:	ldr	x2, [sp, #56]
  419984:	strb	w3, [x19, #317]
  419988:	ldr	x19, [sp, #16]
  41998c:	ldp	x29, x30, [sp], #64
  419990:	b	419130 <wcrtomb@plt+0x14510>
  419994:	nop
  419998:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41999c:	ldr	w1, [x1, #588]
  4199a0:	cmp	w1, #0x1
  4199a4:	b.gt	4199ac <wcrtomb@plt+0x14d8c>
  4199a8:	ret
  4199ac:	stp	x29, x30, [sp, #-96]!
  4199b0:	mov	x29, sp
  4199b4:	stp	x19, x20, [sp, #16]
  4199b8:	mov	x20, x0
  4199bc:	mov	w0, w2
  4199c0:	mov	w2, #0x64                  	// #100
  4199c4:	add	x1, sp, #0x39
  4199c8:	stp	x21, x22, [sp, #32]
  4199cc:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4199d0:	strb	w2, [sp, #56]
  4199d4:	bl	429948 <wcrtomb@plt+0x24d28>
  4199d8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4199dc:	ldrb	w0, [x0, #617]
  4199e0:	cbnz	w0, 419a58 <wcrtomb@plt+0x14e38>
  4199e4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  4199e8:	add	x3, x0, #0x880
  4199ec:	ldr	x21, [x21, #3872]
  4199f0:	mov	w2, #0x5                   	// #5
  4199f4:	ldr	w4, [x0, #2176]
  4199f8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  4199fc:	ldr	w19, [x3, #4]
  419a00:	add	x1, x1, #0x1b0
  419a04:	mov	x0, #0x0                   	// #0
  419a08:	add	w19, w19, #0x1
  419a0c:	add	w19, w19, w4
  419a10:	bl	4049c0 <dcgettext@plt>
  419a14:	mov	x5, x0
  419a18:	mov	x0, x20
  419a1c:	mov	x20, x5
  419a20:	bl	43ff30 <argp_parse@@Base+0xc048>
  419a24:	mov	x6, x0
  419a28:	mov	w4, w19
  419a2c:	mov	x5, x20
  419a30:	add	x3, sp, #0x38
  419a34:	mov	x0, x21
  419a38:	mov	w1, #0x1                   	// #1
  419a3c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x13e10>
  419a40:	add	x2, x2, #0x1c8
  419a44:	bl	404700 <__fprintf_chk@plt>
  419a48:	ldp	x19, x20, [sp, #16]
  419a4c:	ldp	x21, x22, [sp, #32]
  419a50:	ldp	x29, x30, [sp], #96
  419a54:	ret
  419a58:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  419a5c:	add	x1, x1, #0x100
  419a60:	mov	w2, #0x5                   	// #5
  419a64:	mov	x0, #0x0                   	// #0
  419a68:	ldr	x22, [x21, #3872]
  419a6c:	bl	4049c0 <dcgettext@plt>
  419a70:	mov	x19, x0
  419a74:	bl	405b20 <wcrtomb@plt+0xf00>
  419a78:	add	x1, sp, #0x48
  419a7c:	bl	4398d8 <argp_parse@@Base+0x59f0>
  419a80:	mov	x2, x19
  419a84:	mov	x3, x0
  419a88:	mov	w1, #0x1                   	// #1
  419a8c:	mov	x0, x22
  419a90:	bl	404700 <__fprintf_chk@plt>
  419a94:	b	4199e4 <wcrtomb@plt+0x14dc4>
  419a98:	stp	x29, x30, [sp, #-32]!
  419a9c:	mov	x29, sp
  419aa0:	stp	x19, x20, [sp, #16]
  419aa4:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  419aa8:	mov	x19, x0
  419aac:	ldrb	w1, [x20, #872]
  419ab0:	cbnz	w1, 419b04 <wcrtomb@plt+0x14ee4>
  419ab4:	mov	x0, x19
  419ab8:	bl	4056c8 <wcrtomb@plt+0xaa8>
  419abc:	cmp	x19, #0x0
  419ac0:	b.le	419af8 <wcrtomb@plt+0x14ed8>
  419ac4:	sub	x0, x19, #0x1
  419ac8:	sub	x20, x19, #0x200
  419acc:	and	x0, x0, #0xfffffffffffffe00
  419ad0:	sub	x20, x20, x0
  419ad4:	nop
  419ad8:	bl	406220 <wcrtomb@plt+0x1600>
  419adc:	cbz	x0, 419b1c <wcrtomb@plt+0x14efc>
  419ae0:	bl	405b90 <wcrtomb@plt+0xf70>
  419ae4:	sub	x19, x19, #0x200
  419ae8:	mov	x0, x19
  419aec:	bl	4056c8 <wcrtomb@plt+0xaa8>
  419af0:	cmp	x19, x20
  419af4:	b.ne	419ad8 <wcrtomb@plt+0x14eb8>  // b.any
  419af8:	ldp	x19, x20, [sp, #16]
  419afc:	ldp	x29, x30, [sp], #32
  419b00:	ret
  419b04:	bl	406558 <wcrtomb@plt+0x1938>
  419b08:	tbnz	x0, #63, 419b14 <wcrtomb@plt+0x14ef4>
  419b0c:	sub	x19, x19, x0, lsl #9
  419b10:	b	419ab4 <wcrtomb@plt+0x14e94>
  419b14:	strb	wzr, [x20, #872]
  419b18:	b	419ab4 <wcrtomb@plt+0x14e94>
  419b1c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  419b20:	ldr	x0, [x0, #952]
  419b24:	cbz	x0, 419b2c <wcrtomb@plt+0x14f0c>
  419b28:	blr	x0
  419b2c:	mov	w2, #0x5                   	// #5
  419b30:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  419b34:	mov	x0, #0x0                   	// #0
  419b38:	add	x1, x1, #0x6a8
  419b3c:	bl	4049c0 <dcgettext@plt>
  419b40:	mov	x2, x0
  419b44:	mov	w1, #0x0                   	// #0
  419b48:	mov	w0, #0x0                   	// #0
  419b4c:	bl	404050 <error@plt>
  419b50:	bl	40e770 <wcrtomb@plt+0x9b50>
  419b54:	nop
  419b58:	stp	x29, x30, [sp, #-32]!
  419b5c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419b60:	mov	x29, sp
  419b64:	ldr	x0, [x0, #4016]
  419b68:	stp	x19, x20, [sp, #16]
  419b6c:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  419b70:	add	x19, x19, #0x28
  419b74:	ldrb	w20, [x0, #156]
  419b78:	bl	405b90 <wcrtomb@plt+0xf70>
  419b7c:	mov	x0, x19
  419b80:	bl	405688 <wcrtomb@plt+0xa68>
  419b84:	ldrb	w0, [x19, #272]
  419b88:	cbnz	w0, 419bb4 <wcrtomb@plt+0x14f94>
  419b8c:	cmp	w20, #0x35
  419b90:	b.ne	419ba0 <wcrtomb@plt+0x14f80>  // b.any
  419b94:	ldp	x19, x20, [sp, #16]
  419b98:	ldp	x29, x30, [sp], #32
  419b9c:	b	4056b0 <wcrtomb@plt+0xa90>
  419ba0:	ldr	x0, [x19, #136]
  419ba4:	bl	419a98 <wcrtomb@plt+0x14e78>
  419ba8:	ldp	x19, x20, [sp, #16]
  419bac:	ldp	x29, x30, [sp], #32
  419bb0:	b	4056b0 <wcrtomb@plt+0xa90>
  419bb4:	mov	x0, x19
  419bb8:	bl	420ce0 <wcrtomb@plt+0x1c0c0>
  419bbc:	ldp	x19, x20, [sp, #16]
  419bc0:	ldp	x29, x30, [sp], #32
  419bc4:	b	4056b0 <wcrtomb@plt+0xa90>
  419bc8:	stp	x29, x30, [sp, #-144]!
  419bcc:	mov	x29, sp
  419bd0:	stp	x19, x20, [sp, #16]
  419bd4:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  419bd8:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419bdc:	stp	x21, x22, [sp, #32]
  419be0:	add	x19, x19, #0x28
  419be4:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  419be8:	stp	x23, x24, [sp, #48]
  419bec:	mov	x23, x0
  419bf0:	bl	418390 <wcrtomb@plt+0x13770>
  419bf4:	bl	41dd58 <wcrtomb@plt+0x19138>
  419bf8:	add	x20, x20, #0xfb0
  419bfc:	mov	w0, #0x0                   	// #0
  419c00:	bl	408150 <wcrtomb@plt+0x3530>
  419c04:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419c08:	add	x21, x21, #0x269
  419c0c:	add	x22, x1, #0xff0
  419c10:	mov	w24, #0x0                   	// #0
  419c14:	mov	x0, x19
  419c18:	bl	425ff8 <wcrtomb@plt+0x213d8>
  419c1c:	mov	x1, x19
  419c20:	mov	x0, x20
  419c24:	mov	w2, #0x0                   	// #0
  419c28:	bl	418628 <wcrtomb@plt+0x13a08>
  419c2c:	cmp	w0, #0x4
  419c30:	b.eq	419f60 <wcrtomb@plt+0x15340>  // b.none
  419c34:	b.hi	419d10 <wcrtomb@plt+0x150f0>  // b.pmore
  419c38:	cmp	w0, #0x3
  419c3c:	b.eq	419e40 <wcrtomb@plt+0x15220>  // b.none
  419c40:	cmp	w0, #0x1
  419c44:	b.ne	419e08 <wcrtomb@plt+0x151e8>  // b.any
  419c48:	stp	x25, x26, [sp, #64]
  419c4c:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419c50:	adrp	x25, 454000 <_obstack_memory_used@@Base+0x11e10>
  419c54:	add	x24, x24, #0xf98
  419c58:	add	x25, x25, #0xa50
  419c5c:	ldr	x0, [x20]
  419c60:	mov	x2, x24
  419c64:	mov	x1, x19
  419c68:	mov	w3, #0x1                   	// #1
  419c6c:	bl	418ae8 <wcrtomb@plt+0x13ec8>
  419c70:	ldr	x0, [x19, #8]
  419c74:	bl	41e1f8 <wcrtomb@plt+0x195d8>
  419c78:	tst	w0, #0xff
  419c7c:	b.ne	419fb0 <wcrtomb@plt+0x15390>  // b.any
  419c80:	ldr	x0, [x20]
  419c84:	ldrb	w0, [x0, #156]
  419c88:	cmp	w0, #0x4d
  419c8c:	b.eq	41a01c <wcrtomb@plt+0x153fc>  // b.none
  419c90:	cmp	w0, #0x56
  419c94:	b.eq	41a01c <wcrtomb@plt+0x153fc>  // b.none
  419c98:	cmp	w0, #0x35
  419c9c:	b.eq	41a124 <wcrtomb@plt+0x15504>  // b.none
  419ca0:	ldrb	w0, [x19, #377]
  419ca4:	cbz	w0, 41a0d0 <wcrtomb@plt+0x154b0>
  419ca8:	mov	x0, x19
  419cac:	bl	41e350 <wcrtomb@plt+0x19730>
  419cb0:	tst	w0, #0xff
  419cb4:	b.ne	419cf0 <wcrtomb@plt+0x150d0>  // b.any
  419cb8:	mov	x0, x19
  419cbc:	bl	425ff8 <wcrtomb@plt+0x213d8>
  419cc0:	mov	x1, x19
  419cc4:	mov	x0, x20
  419cc8:	mov	w2, #0x0                   	// #0
  419ccc:	bl	418628 <wcrtomb@plt+0x13a08>
  419cd0:	cmp	w0, #0x4
  419cd4:	b.eq	41a178 <wcrtomb@plt+0x15558>  // b.none
  419cd8:	b.hi	419ecc <wcrtomb@plt+0x152ac>  // b.pmore
  419cdc:	cmp	w0, #0x3
  419ce0:	b.eq	419e34 <wcrtomb@plt+0x15214>  // b.none
  419ce4:	cmp	w0, #0x1
  419ce8:	b.eq	419c5c <wcrtomb@plt+0x1503c>  // b.none
  419cec:	tbz	w0, #0, 419e00 <wcrtomb@plt+0x151e0>
  419cf0:	ldp	x25, x26, [sp, #64]
  419cf4:	bl	4066c8 <wcrtomb@plt+0x1aa8>
  419cf8:	bl	41e400 <wcrtomb@plt+0x197e0>
  419cfc:	ldp	x19, x20, [sp, #16]
  419d00:	ldp	x21, x22, [sp, #32]
  419d04:	ldp	x23, x24, [sp, #48]
  419d08:	ldp	x29, x30, [sp], #144
  419d0c:	ret
  419d10:	cmp	w0, #0x5
  419d14:	b.ne	419e0c <wcrtomb@plt+0x151ec>  // b.any
  419d18:	ldr	x0, [x20]
  419d1c:	stp	x25, x26, [sp, #64]
  419d20:	bl	405b90 <wcrtomb@plt+0xf70>
  419d24:	cbnz	w24, 419e28 <wcrtomb@plt+0x15208>
  419d28:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  419d2c:	add	x26, x0, #0x3b8
  419d30:	ldr	x0, [x0, #952]
  419d34:	cbz	x0, 419d3c <wcrtomb@plt+0x1511c>
  419d38:	blr	x0
  419d3c:	mov	w2, #0x5                   	// #5
  419d40:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  419d44:	mov	x0, #0x0                   	// #0
  419d48:	add	x1, x1, #0xca0
  419d4c:	bl	4049c0 <dcgettext@plt>
  419d50:	mov	x2, x0
  419d54:	mov	w1, #0x0                   	// #0
  419d58:	mov	w0, #0x0                   	// #0
  419d5c:	bl	404050 <error@plt>
  419d60:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  419d64:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419d68:	mov	w1, #0x2                   	// #2
  419d6c:	add	x25, x0, #0xd48
  419d70:	str	w1, [x0, #3400]
  419d74:	ldrb	w0, [x21]
  419d78:	cbnz	w0, 41a060 <wcrtomb@plt+0x15440>
  419d7c:	ldr	x0, [x26]
  419d80:	cbz	x0, 419d88 <wcrtomb@plt+0x15168>
  419d84:	blr	x0
  419d88:	mov	w2, #0x5                   	// #5
  419d8c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  419d90:	mov	x0, #0x0                   	// #0
  419d94:	add	x1, x1, #0xd60
  419d98:	bl	4049c0 <dcgettext@plt>
  419d9c:	mov	x2, x0
  419da0:	mov	w1, #0x0                   	// #0
  419da4:	mov	w0, #0x0                   	// #0
  419da8:	bl	404050 <error@plt>
  419dac:	mov	w1, #0x2                   	// #2
  419db0:	mov	x0, x19
  419db4:	str	w1, [x25]
  419db8:	bl	41e350 <wcrtomb@plt+0x19730>
  419dbc:	tst	w0, #0xff
  419dc0:	b.ne	419cf0 <wcrtomb@plt+0x150d0>  // b.any
  419dc4:	mov	x0, x19
  419dc8:	bl	425ff8 <wcrtomb@plt+0x213d8>
  419dcc:	mov	x1, x19
  419dd0:	mov	x0, x20
  419dd4:	mov	w2, #0x0                   	// #0
  419dd8:	bl	418628 <wcrtomb@plt+0x13a08>
  419ddc:	mov	w1, w0
  419de0:	cmp	w0, #0x4
  419de4:	b.eq	41a184 <wcrtomb@plt+0x15564>  // b.none
  419de8:	b.hi	419efc <wcrtomb@plt+0x152dc>  // b.pmore
  419dec:	cmp	w0, #0x3
  419df0:	b.eq	41a054 <wcrtomb@plt+0x15434>  // b.none
  419df4:	cmp	w0, #0x1
  419df8:	b.eq	419c4c <wcrtomb@plt+0x1502c>  // b.none
  419dfc:	tbnz	w1, #0, 419cf0 <wcrtomb@plt+0x150d0>
  419e00:	stp	x27, x28, [sp, #80]
  419e04:	bl	404650 <abort@plt>
  419e08:	tbz	w0, #0, 41a18c <wcrtomb@plt+0x1556c>
  419e0c:	bl	4066c8 <wcrtomb@plt+0x1aa8>
  419e10:	bl	41e400 <wcrtomb@plt+0x197e0>
  419e14:	ldp	x19, x20, [sp, #16]
  419e18:	ldp	x21, x22, [sp, #32]
  419e1c:	ldp	x23, x24, [sp, #48]
  419e20:	ldp	x29, x30, [sp], #144
  419e24:	ret
  419e28:	cmp	w24, #0x1
  419e2c:	b.ne	419f0c <wcrtomb@plt+0x152ec>  // b.any
  419e30:	b	419edc <wcrtomb@plt+0x152bc>
  419e34:	ldp	x25, x26, [sp, #64]
  419e38:	mov	w24, #0x1                   	// #1
  419e3c:	nop
  419e40:	ldrb	w0, [x21]
  419e44:	cbnz	w0, 41a0d8 <wcrtomb@plt+0x154b8>
  419e48:	ldr	x0, [x20]
  419e4c:	bl	405b90 <wcrtomb@plt+0xf70>
  419e50:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  419e54:	ldrb	w0, [x0, #21]
  419e58:	cbnz	w0, 41a040 <wcrtomb@plt+0x15420>
  419e5c:	mov	x1, x19
  419e60:	mov	x0, x20
  419e64:	mov	w2, #0x0                   	// #0
  419e68:	bl	418628 <wcrtomb@plt+0x13a08>
  419e6c:	cmp	w0, #0x3
  419e70:	b.eq	419e0c <wcrtomb@plt+0x151ec>  // b.none
  419e74:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419e78:	ldr	w0, [x0, #408]
  419e7c:	tbz	w0, #0, 419e0c <wcrtomb@plt+0x151ec>
  419e80:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  419e84:	ldr	x0, [x0, #952]
  419e88:	cbz	x0, 419e90 <wcrtomb@plt+0x15270>
  419e8c:	blr	x0
  419e90:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  419e94:	add	x1, x1, #0x918
  419e98:	mov	w2, #0x5                   	// #5
  419e9c:	mov	x0, #0x0                   	// #0
  419ea0:	bl	4049c0 <dcgettext@plt>
  419ea4:	mov	x19, x0
  419ea8:	bl	405b20 <wcrtomb@plt+0xf00>
  419eac:	add	x1, sp, #0x78
  419eb0:	bl	4398d8 <argp_parse@@Base+0x59f0>
  419eb4:	mov	x2, x19
  419eb8:	mov	x3, x0
  419ebc:	mov	w1, #0x0                   	// #0
  419ec0:	mov	w0, #0x0                   	// #0
  419ec4:	bl	404050 <error@plt>
  419ec8:	b	419e0c <wcrtomb@plt+0x151ec>
  419ecc:	cmp	w0, #0x5
  419ed0:	b.ne	419cf0 <wcrtomb@plt+0x150d0>  // b.any
  419ed4:	ldr	x0, [x20]
  419ed8:	bl	405b90 <wcrtomb@plt+0xf70>
  419edc:	ldrb	w0, [x21]
  419ee0:	adrp	x26, 483000 <argp_program_version_hook@@Base+0x290>
  419ee4:	adrp	x25, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419ee8:	add	x26, x26, #0x3b8
  419eec:	add	x25, x25, #0xd48
  419ef0:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  419ef4:	cbz	w0, 419d7c <wcrtomb@plt+0x1515c>
  419ef8:	b	41a060 <wcrtomb@plt+0x15440>
  419efc:	cmp	w0, #0x5
  419f00:	b.ne	419cf0 <wcrtomb@plt+0x150d0>  // b.any
  419f04:	ldr	x0, [x20]
  419f08:	bl	405b90 <wcrtomb@plt+0xf70>
  419f0c:	mov	x0, x19
  419f10:	bl	41e350 <wcrtomb@plt+0x19730>
  419f14:	tst	w0, #0xff
  419f18:	b.ne	419cf0 <wcrtomb@plt+0x150d0>  // b.any
  419f1c:	mov	x0, x19
  419f20:	bl	425ff8 <wcrtomb@plt+0x213d8>
  419f24:	mov	x1, x19
  419f28:	mov	x0, x20
  419f2c:	mov	w2, #0x0                   	// #0
  419f30:	bl	418628 <wcrtomb@plt+0x13a08>
  419f34:	mov	w24, w0
  419f38:	cmp	w0, #0x4
  419f3c:	b.eq	41a178 <wcrtomb@plt+0x15558>  // b.none
  419f40:	b.hi	41a02c <wcrtomb@plt+0x1540c>  // b.pmore
  419f44:	cmp	w0, #0x3
  419f48:	b.eq	41a054 <wcrtomb@plt+0x15434>  // b.none
  419f4c:	cmp	w0, #0x1
  419f50:	b.eq	419c4c <wcrtomb@plt+0x1502c>  // b.none
  419f54:	tbz	w24, #0, 419e00 <wcrtomb@plt+0x151e0>
  419f58:	ldp	x25, x26, [sp, #64]
  419f5c:	b	419cf4 <wcrtomb@plt+0x150d4>
  419f60:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  419f64:	ldrb	w0, [x24, #617]
  419f68:	cbz	w0, 419e0c <wcrtomb@plt+0x151ec>
  419f6c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  419f70:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  419f74:	add	x1, x1, #0x208
  419f78:	mov	w2, #0x5                   	// #5
  419f7c:	ldr	x20, [x0, #3872]
  419f80:	mov	x0, #0x0                   	// #0
  419f84:	bl	4049c0 <dcgettext@plt>
  419f88:	mov	x19, x0
  419f8c:	bl	405b20 <wcrtomb@plt+0xf00>
  419f90:	add	x1, sp, #0x78
  419f94:	bl	4398d8 <argp_parse@@Base+0x59f0>
  419f98:	mov	x2, x19
  419f9c:	mov	x3, x0
  419fa0:	mov	w1, #0x1                   	// #1
  419fa4:	mov	x0, x20
  419fa8:	bl	404700 <__fprintf_chk@plt>
  419fac:	b	419e0c <wcrtomb@plt+0x151ec>
  419fb0:	ldr	x0, [x22, #8]
  419fb4:	tbnz	x0, #63, 41a000 <wcrtomb@plt+0x153e0>
  419fb8:	ldr	x0, [x20]
  419fbc:	mov	x1, #0xc                   	// #12
  419fc0:	mov	x2, x25
  419fc4:	mov	w6, #0x0                   	// #0
  419fc8:	add	x0, x0, #0x88
  419fcc:	mov	w5, #0x0                   	// #0
  419fd0:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  419fd4:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  419fd8:	bl	417c68 <wcrtomb@plt+0x13048>
  419fdc:	stp	x0, xzr, [x19, #232]
  419fe0:	ldr	x1, [x22]
  419fe4:	cmp	x0, x1
  419fe8:	b.lt	419c80 <wcrtomb@plt+0x15060>  // b.tstop
  419fec:	b.gt	41a000 <wcrtomb@plt+0x153e0>
  419ff0:	ldr	x0, [x22, #8]
  419ff4:	neg	w0, w0
  419ff8:	tbnz	w0, #31, 419c80 <wcrtomb@plt+0x15060>
  419ffc:	nop
  41a000:	ldr	x0, [x19, #8]
  41a004:	ldr	x1, [x19, #392]
  41a008:	bl	40ee78 <wcrtomb@plt+0xa258>
  41a00c:	tst	w0, #0xff
  41a010:	b.ne	419c80 <wcrtomb@plt+0x15060>  // b.any
  41a014:	ldr	x0, [x20]
  41a018:	ldrb	w0, [x0, #156]
  41a01c:	mov	x1, x19
  41a020:	bl	4183e8 <wcrtomb@plt+0x137c8>
  41a024:	blr	x23
  41a028:	b	419ca8 <wcrtomb@plt+0x15088>
  41a02c:	cmp	w0, #0x5
  41a030:	b.ne	419cf0 <wcrtomb@plt+0x150d0>  // b.any
  41a034:	ldr	x0, [x20]
  41a038:	bl	405b90 <wcrtomb@plt+0xf70>
  41a03c:	ldp	x25, x26, [sp, #64]
  41a040:	mov	x0, x19
  41a044:	bl	41e350 <wcrtomb@plt+0x19730>
  41a048:	tst	w0, #0xff
  41a04c:	b.eq	419c14 <wcrtomb@plt+0x14ff4>  // b.none
  41a050:	b	419e0c <wcrtomb@plt+0x151ec>
  41a054:	mov	w24, #0x5                   	// #5
  41a058:	ldp	x25, x26, [sp, #64]
  41a05c:	b	419e40 <wcrtomb@plt+0x15220>
  41a060:	stp	x27, x28, [sp, #80]
  41a064:	bl	405b20 <wcrtomb@plt+0xf00>
  41a068:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a06c:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a070:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a074:	ldr	x28, [x1, #4008]
  41a078:	mov	w2, #0x5                   	// #5
  41a07c:	ldr	x3, [x3, #4024]
  41a080:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a084:	ldr	x4, [x4, #3872]
  41a088:	add	x28, x28, x3
  41a08c:	sub	x28, x0, x28
  41a090:	add	x1, x1, #0x100
  41a094:	mov	x0, #0x0                   	// #0
  41a098:	str	x4, [sp, #104]
  41a09c:	bl	4049c0 <dcgettext@plt>
  41a0a0:	mov	x27, x0
  41a0a4:	add	x1, sp, #0x78
  41a0a8:	mov	x0, x28
  41a0ac:	bl	4398d8 <argp_parse@@Base+0x59f0>
  41a0b0:	mov	x3, x0
  41a0b4:	ldr	x4, [sp, #104]
  41a0b8:	mov	x2, x27
  41a0bc:	mov	w1, #0x1                   	// #1
  41a0c0:	mov	x0, x4
  41a0c4:	bl	404700 <__fprintf_chk@plt>
  41a0c8:	ldp	x27, x28, [sp, #80]
  41a0cc:	b	419d7c <wcrtomb@plt+0x1515c>
  41a0d0:	bl	419b58 <wcrtomb@plt+0x14f38>
  41a0d4:	b	419ca8 <wcrtomb@plt+0x15088>
  41a0d8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a0dc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a0e0:	add	x1, x1, #0x1e8
  41a0e4:	mov	w2, #0x5                   	// #5
  41a0e8:	stp	x25, x26, [sp, #64]
  41a0ec:	ldr	x26, [x0, #3872]
  41a0f0:	mov	x0, #0x0                   	// #0
  41a0f4:	bl	4049c0 <dcgettext@plt>
  41a0f8:	mov	x25, x0
  41a0fc:	bl	405b20 <wcrtomb@plt+0xf00>
  41a100:	add	x1, sp, #0x78
  41a104:	bl	4398d8 <argp_parse@@Base+0x59f0>
  41a108:	mov	x2, x25
  41a10c:	mov	x3, x0
  41a110:	mov	w1, #0x1                   	// #1
  41a114:	mov	x0, x26
  41a118:	bl	404700 <__fprintf_chk@plt>
  41a11c:	ldp	x25, x26, [sp, #64]
  41a120:	b	419e48 <wcrtomb@plt+0x15228>
  41a124:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41a128:	ldrb	w0, [x0, #642]
  41a12c:	cbz	w0, 419ca0 <wcrtomb@plt+0x15080>
  41a130:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41a134:	ldr	x0, [x0, #952]
  41a138:	cbz	x0, 41a140 <wcrtomb@plt+0x15520>
  41a13c:	blr	x0
  41a140:	mov	w2, #0x5                   	// #5
  41a144:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a148:	mov	x0, #0x0                   	// #0
  41a14c:	add	x1, x1, #0x1d8
  41a150:	bl	4049c0 <dcgettext@plt>
  41a154:	mov	x26, x0
  41a158:	ldr	x0, [x19, #8]
  41a15c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41a160:	mov	x3, x0
  41a164:	mov	x2, x26
  41a168:	mov	w1, #0x0                   	// #0
  41a16c:	mov	w0, #0x0                   	// #0
  41a170:	bl	404050 <error@plt>
  41a174:	b	419ca0 <wcrtomb@plt+0x15080>
  41a178:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  41a17c:	ldp	x25, x26, [sp, #64]
  41a180:	b	419f64 <wcrtomb@plt+0x15344>
  41a184:	ldp	x25, x26, [sp, #64]
  41a188:	b	419f64 <wcrtomb@plt+0x15344>
  41a18c:	stp	x25, x26, [sp, #64]
  41a190:	b	419e00 <wcrtomb@plt+0x151e0>
  41a194:	nop
  41a198:	stp	x29, x30, [sp, #-32]!
  41a19c:	mov	x29, sp
  41a1a0:	stp	x19, x20, [sp, #16]
  41a1a4:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  41a1a8:	bl	405b20 <wcrtomb@plt+0xf00>
  41a1ac:	ldr	w1, [x20, #588]
  41a1b0:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  41a1b4:	add	x19, x19, #0x28
  41a1b8:	cbnz	w1, 41a1d0 <wcrtomb@plt+0x155b0>
  41a1bc:	ldrb	w0, [x19, #377]
  41a1c0:	cbz	w0, 41a228 <wcrtomb@plt+0x15608>
  41a1c4:	ldp	x19, x20, [sp, #16]
  41a1c8:	ldp	x29, x30, [sp], #32
  41a1cc:	ret
  41a1d0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a1d4:	mov	x2, x0
  41a1d8:	mov	x0, x19
  41a1dc:	ldr	x1, [x1, #4016]
  41a1e0:	bl	419930 <wcrtomb@plt+0x14d10>
  41a1e4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a1e8:	ldrb	w0, [x0, #4073]
  41a1ec:	cbz	w0, 41a1bc <wcrtomb@plt+0x1559c>
  41a1f0:	ldr	w0, [x20, #588]
  41a1f4:	cmp	w0, #0x2
  41a1f8:	b.le	41a1bc <wcrtomb@plt+0x1559c>
  41a1fc:	mov	x0, x19
  41a200:	bl	417340 <wcrtomb@plt+0x12720>
  41a204:	tst	w0, #0xff
  41a208:	b.eq	41a1bc <wcrtomb@plt+0x1559c>  // b.none
  41a20c:	ldr	x20, [x19, #384]
  41a210:	mov	x0, x20
  41a214:	bl	415c78 <wcrtomb@plt+0x11058>
  41a218:	mov	x1, x0
  41a21c:	mov	x0, x20
  41a220:	bl	417a98 <wcrtomb@plt+0x12e78>
  41a224:	b	41a1bc <wcrtomb@plt+0x1559c>
  41a228:	ldp	x19, x20, [sp, #16]
  41a22c:	ldp	x29, x30, [sp], #32
  41a230:	b	419b58 <wcrtomb@plt+0x14f38>
  41a234:	nop
  41a238:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41a23c:	ldrb	w0, [x0, #417]
  41a240:	cbz	w0, 41a248 <wcrtomb@plt+0x15628>
  41a244:	ret
  41a248:	b	419b58 <wcrtomb@plt+0x14f38>
  41a24c:	nop
  41a250:	stp	x29, x30, [sp, #-32]!
  41a254:	mov	x29, sp
  41a258:	stp	x19, x20, [sp, #16]
  41a25c:	bl	418390 <wcrtomb@plt+0x13770>
  41a260:	bl	41dd58 <wcrtomb@plt+0x19138>
  41a264:	mov	w0, #0x0                   	// #0
  41a268:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  41a26c:	bl	408150 <wcrtomb@plt+0x3530>
  41a270:	add	x19, x19, #0x28
  41a274:	mov	x1, x19
  41a278:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a27c:	mov	w2, #0x0                   	// #0
  41a280:	add	x0, x20, #0xfb0
  41a284:	bl	418628 <wcrtomb@plt+0x13a08>
  41a288:	cmp	w0, #0x1
  41a28c:	b.eq	41a2a0 <wcrtomb@plt+0x15680>  // b.none
  41a290:	bl	4066c8 <wcrtomb@plt+0x1aa8>
  41a294:	ldp	x19, x20, [sp, #16]
  41a298:	ldp	x29, x30, [sp], #32
  41a29c:	b	41e598 <wcrtomb@plt+0x19978>
  41a2a0:	ldr	x0, [x20, #4016]
  41a2a4:	mov	x1, x19
  41a2a8:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a2ac:	mov	w3, #0x0                   	// #0
  41a2b0:	add	x2, x2, #0xf98
  41a2b4:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a2b8:	bl	418ae8 <wcrtomb@plt+0x13ec8>
  41a2bc:	ldr	x1, [x20, #4016]
  41a2c0:	ldrb	w0, [x1, #156]
  41a2c4:	cmp	w0, #0x56
  41a2c8:	b.eq	41a314 <wcrtomb@plt+0x156f4>  // b.none
  41a2cc:	ldr	x0, [x19, #3912]
  41a2d0:	cbz	x0, 41a290 <wcrtomb@plt+0x15670>
  41a2d4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41a2d8:	ldr	w1, [x1, #588]
  41a2dc:	cbnz	w1, 41a324 <wcrtomb@plt+0x15704>
  41a2e0:	bl	41e1f8 <wcrtomb@plt+0x195d8>
  41a2e4:	tst	w0, #0xff
  41a2e8:	b.ne	41a290 <wcrtomb@plt+0x15670>  // b.any
  41a2ec:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41a2f0:	ldrb	w0, [x0, #20]
  41a2f4:	cbz	w0, 41a290 <wcrtomb@plt+0x15670>
  41a2f8:	ldr	x0, [x19, #3912]
  41a2fc:	bl	407ea0 <wcrtomb@plt+0x3280>
  41a300:	mov	x19, x0
  41a304:	bl	41e1f8 <wcrtomb@plt+0x195d8>
  41a308:	mov	x0, x19
  41a30c:	bl	4047b0 <free@plt>
  41a310:	b	41a290 <wcrtomb@plt+0x15670>
  41a314:	add	x0, x19, #0xf48
  41a318:	mov	x2, #0x64                  	// #100
  41a31c:	bl	41ab38 <wcrtomb@plt+0x15f18>
  41a320:	b	41a2cc <wcrtomb@plt+0x156ac>
  41a324:	bl	419880 <wcrtomb@plt+0x14c60>
  41a328:	ldr	x0, [x19, #3912]
  41a32c:	b	41a2e0 <wcrtomb@plt+0x156c0>
  41a330:	ldr	x0, [x0]
  41a334:	udiv	x2, x0, x1
  41a338:	msub	x0, x2, x1, x0
  41a33c:	ret
  41a340:	ldr	x2, [x0]
  41a344:	ldr	x0, [x1]
  41a348:	cmp	x2, x0
  41a34c:	cset	w0, eq  // eq = none
  41a350:	ret
  41a354:	nop
  41a358:	stp	x29, x30, [sp, #-16]!
  41a35c:	mov	x29, sp
  41a360:	bl	404440 <getpwnam@plt>
  41a364:	cbz	x0, 41a374 <wcrtomb@plt+0x15754>
  41a368:	ldr	w0, [x0, #16]
  41a36c:	ldp	x29, x30, [sp], #16
  41a370:	ret
  41a374:	mov	x0, #0xffffffffffffffff    	// #-1
  41a378:	ldp	x29, x30, [sp], #16
  41a37c:	ret
  41a380:	stp	x29, x30, [sp, #-16]!
  41a384:	mov	x29, sp
  41a388:	bl	404110 <getgrnam@plt>
  41a38c:	cbz	x0, 41a39c <wcrtomb@plt+0x1577c>
  41a390:	ldr	w0, [x0, #16]
  41a394:	ldp	x29, x30, [sp], #16
  41a398:	ret
  41a39c:	mov	x0, #0xffffffffffffffff    	// #-1
  41a3a0:	ldp	x29, x30, [sp], #16
  41a3a4:	ret
  41a3a8:	stp	x29, x30, [sp, #-80]!
  41a3ac:	mov	x29, sp
  41a3b0:	stp	x19, x20, [sp, #16]
  41a3b4:	mov	x20, x1
  41a3b8:	stp	x21, x22, [sp, #32]
  41a3bc:	mov	x22, x3
  41a3c0:	mov	x21, x0
  41a3c4:	stp	x23, x24, [sp, #48]
  41a3c8:	mov	x24, x2
  41a3cc:	mov	w23, w4
  41a3d0:	bl	404ad0 <__errno_location@plt>
  41a3d4:	mov	x19, x0
  41a3d8:	add	x1, sp, #0x48
  41a3dc:	mov	x0, x20
  41a3e0:	mov	w3, #0x0                   	// #0
  41a3e4:	mov	w2, #0xa                   	// #10
  41a3e8:	str	wzr, [x19]
  41a3ec:	bl	4044b0 <__strtoul_internal@plt>
  41a3f0:	mov	x5, x0
  41a3f4:	ldr	x1, [sp, #72]
  41a3f8:	ldrb	w0, [x1]
  41a3fc:	cbnz	w0, 41a42c <wcrtomb@plt+0x1580c>
  41a400:	ldr	w0, [x19]
  41a404:	cbnz	w0, 41a42c <wcrtomb@plt+0x1580c>
  41a408:	mov	x1, #0xffffffff            	// #4294967295
  41a40c:	cmp	x5, x1
  41a410:	b.hi	41a468 <wcrtomb@plt+0x15848>  // b.pmore
  41a414:	str	x5, [x21]
  41a418:	ldp	x19, x20, [sp, #16]
  41a41c:	ldp	x21, x22, [sp, #32]
  41a420:	ldp	x23, x24, [sp, #48]
  41a424:	ldp	x29, x30, [sp], #80
  41a428:	ret
  41a42c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a430:	add	x1, x1, #0x268
  41a434:	mov	w2, #0x5                   	// #5
  41a438:	mov	x0, #0x0                   	// #0
  41a43c:	bl	4049c0 <dcgettext@plt>
  41a440:	mov	x6, x20
  41a444:	mov	x2, x0
  41a448:	mov	x5, x24
  41a44c:	mov	w0, #0x0                   	// #0
  41a450:	mov	w4, w23
  41a454:	mov	x3, x22
  41a458:	mov	w1, #0x0                   	// #0
  41a45c:	bl	404050 <error@plt>
  41a460:	mov	w0, #0xffffffff            	// #-1
  41a464:	b	41a418 <wcrtomb@plt+0x157f8>
  41a468:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a46c:	mov	w2, #0x5                   	// #5
  41a470:	add	x1, x1, #0x280
  41a474:	b	41a438 <wcrtomb@plt+0x15818>
  41a478:	stp	x29, x30, [sp, #-384]!
  41a47c:	mov	x29, sp
  41a480:	stp	x19, x20, [sp, #16]
  41a484:	stp	x21, x22, [sp, #32]
  41a488:	mov	x22, x1
  41a48c:	stp	x23, x24, [sp, #48]
  41a490:	mov	x24, x0
  41a494:	mov	x23, x3
  41a498:	mov	x0, x1
  41a49c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  41a4a0:	add	x1, x1, #0xf28
  41a4a4:	stp	x25, x26, [sp, #64]
  41a4a8:	mov	x26, x2
  41a4ac:	stp	x27, x28, [sp, #80]
  41a4b0:	stp	xzr, xzr, [sp, #120]
  41a4b4:	bl	4042e0 <fopen@plt>
  41a4b8:	cbz	x0, 41a84c <wcrtomb@plt+0x15c2c>
  41a4bc:	adrp	x28, 41a000 <wcrtomb@plt+0x153e0>
  41a4c0:	add	x1, x28, #0x340
  41a4c4:	mov	x21, x0
  41a4c8:	adrp	x27, 41a000 <wcrtomb@plt+0x153e0>
  41a4cc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a4d0:	add	x0, x0, #0x2a0
  41a4d4:	str	x1, [sp, #96]
  41a4d8:	add	x1, x27, #0x330
  41a4dc:	mov	x3, x21
  41a4e0:	mov	w2, #0xa                   	// #10
  41a4e4:	mov	w25, #0x0                   	// #0
  41a4e8:	mov	w20, #0x0                   	// #0
  41a4ec:	mov	w19, #0x8e44                	// #36420
  41a4f0:	str	x1, [sp, #104]
  41a4f4:	add	x1, sp, #0x80
  41a4f8:	str	x0, [sp, #216]
  41a4fc:	add	x0, sp, #0x78
  41a500:	bl	404b40 <__getdelim@plt>
  41a504:	cmp	x0, #0x0
  41a508:	b.le	41a5c8 <wcrtomb@plt+0x159a8>
  41a50c:	nop
  41a510:	ldr	x0, [sp, #120]
  41a514:	mov	w2, w19
  41a518:	add	w20, w20, #0x1
  41a51c:	add	x1, sp, #0x98
  41a520:	bl	42f1f0 <wcrtomb@plt+0x2a5d0>
  41a524:	cbnz	w0, 41a7c4 <wcrtomb@plt+0x15ba4>
  41a528:	ldr	x0, [sp, #152]
  41a52c:	cbz	x0, 41a5a8 <wcrtomb@plt+0x15988>
  41a530:	cmp	x0, #0x2
  41a534:	b.ne	41a650 <wcrtomb@plt+0x15a30>  // b.any
  41a538:	ldr	x0, [sp, #160]
  41a53c:	ldr	x0, [x0]
  41a540:	ldrb	w1, [x0]
  41a544:	cmp	w1, #0x2b
  41a548:	b.eq	41a6e4 <wcrtomb@plt+0x15ac4>  // b.none
  41a54c:	blr	x26
  41a550:	str	x0, [sp, #136]
  41a554:	cmn	x0, #0x1
  41a558:	b.eq	41a708 <wcrtomb@plt+0x15ae8>  // b.none
  41a55c:	ldr	x0, [sp, #160]
  41a560:	mov	w1, #0x3a                  	// #58
  41a564:	ldr	x27, [x0, #8]
  41a568:	mov	x0, x27
  41a56c:	bl	404870 <strchr@plt>
  41a570:	mov	x19, x0
  41a574:	cbz	x0, 41a5f4 <wcrtomb@plt+0x159d4>
  41a578:	cmp	x27, x0
  41a57c:	add	x1, x0, #0x1
  41a580:	b.cs	41a688 <wcrtomb@plt+0x15a68>  // b.hs, b.nlast
  41a584:	strb	wzr, [x0]
  41a588:	mov	w4, w20
  41a58c:	mov	x3, x22
  41a590:	mov	x2, x23
  41a594:	add	x0, sp, #0x90
  41a598:	bl	41a3a8 <wcrtomb@plt+0x15788>
  41a59c:	cbz	w0, 41a614 <wcrtomb@plt+0x159f4>
  41a5a0:	mov	w25, #0x1                   	// #1
  41a5a4:	nop
  41a5a8:	mov	w19, #0x8e4c                	// #36428
  41a5ac:	mov	x3, x21
  41a5b0:	add	x1, sp, #0x80
  41a5b4:	add	x0, sp, #0x78
  41a5b8:	mov	w2, #0xa                   	// #10
  41a5bc:	bl	404b40 <__getdelim@plt>
  41a5c0:	cmp	x0, #0x0
  41a5c4:	b.gt	41a510 <wcrtomb@plt+0x158f0>
  41a5c8:	tbnz	w19, #3, 41a7b8 <wcrtomb@plt+0x15b98>
  41a5cc:	mov	x0, x21
  41a5d0:	bl	4042a0 <fclose@plt>
  41a5d4:	cbnz	w25, 41a814 <wcrtomb@plt+0x15bf4>
  41a5d8:	ldp	x19, x20, [sp, #16]
  41a5dc:	ldp	x21, x22, [sp, #32]
  41a5e0:	ldp	x23, x24, [sp, #48]
  41a5e4:	ldp	x25, x26, [sp, #64]
  41a5e8:	ldp	x27, x28, [sp, #80]
  41a5ec:	ldp	x29, x30, [sp], #384
  41a5f0:	ret
  41a5f4:	ldrb	w0, [x27]
  41a5f8:	cmp	w0, #0x2b
  41a5fc:	b.eq	41a74c <wcrtomb@plt+0x15b2c>  // b.none
  41a600:	mov	x0, x27
  41a604:	blr	x26
  41a608:	str	x0, [sp, #144]
  41a60c:	cmn	x0, #0x1
  41a610:	b.eq	41a774 <wcrtomb@plt+0x15b54>  // b.none
  41a614:	mov	x0, #0x18                  	// #24
  41a618:	bl	440f48 <argp_parse@@Base+0xd060>
  41a61c:	mov	x28, x0
  41a620:	ldp	x1, x0, [sp, #136]
  41a624:	stp	x1, x0, [x28]
  41a628:	mov	x0, x27
  41a62c:	bl	441170 <argp_parse@@Base+0xd288>
  41a630:	mov	x19, x0
  41a634:	ldr	x0, [x24]
  41a638:	str	x19, [x28, #16]
  41a63c:	cbz	x0, 41a6c8 <wcrtomb@plt+0x15aa8>
  41a640:	mov	x1, x28
  41a644:	bl	438cb8 <argp_parse@@Base+0x4dd0>
  41a648:	cbnz	x0, 41a5a8 <wcrtomb@plt+0x15988>
  41a64c:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  41a650:	mov	w2, #0x5                   	// #5
  41a654:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a658:	mov	x0, #0x0                   	// #0
  41a65c:	add	x1, x1, #0x2c8
  41a660:	bl	4049c0 <dcgettext@plt>
  41a664:	mov	w25, #0x1                   	// #1
  41a668:	mov	x2, x0
  41a66c:	mov	w4, w20
  41a670:	mov	x3, x22
  41a674:	mov	w1, #0x0                   	// #0
  41a678:	mov	w0, #0x0                   	// #0
  41a67c:	mov	w19, #0x8e4c                	// #36428
  41a680:	bl	404050 <error@plt>
  41a684:	b	41a5ac <wcrtomb@plt+0x1598c>
  41a688:	strb	wzr, [x0]
  41a68c:	mov	w4, w20
  41a690:	mov	x3, x22
  41a694:	mov	x2, x23
  41a698:	add	x0, sp, #0x90
  41a69c:	bl	41a3a8 <wcrtomb@plt+0x15788>
  41a6a0:	cbnz	w0, 41a5a0 <wcrtomb@plt+0x15980>
  41a6a4:	mov	x19, #0x0                   	// #0
  41a6a8:	mov	x0, #0x18                  	// #24
  41a6ac:	bl	440f48 <argp_parse@@Base+0xd060>
  41a6b0:	mov	x28, x0
  41a6b4:	ldp	x1, x0, [sp, #136]
  41a6b8:	stp	x1, x0, [x28]
  41a6bc:	ldr	x0, [x24]
  41a6c0:	str	x19, [x28, #16]
  41a6c4:	cbnz	x0, 41a640 <wcrtomb@plt+0x15a20>
  41a6c8:	ldp	x3, x2, [sp, #96]
  41a6cc:	mov	x4, #0x0                   	// #0
  41a6d0:	mov	x1, #0x0                   	// #0
  41a6d4:	bl	438760 <argp_parse@@Base+0x4878>
  41a6d8:	str	x0, [x24]
  41a6dc:	cbnz	x0, 41a640 <wcrtomb@plt+0x15a20>
  41a6e0:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  41a6e4:	add	x1, x0, #0x1
  41a6e8:	mov	w4, w20
  41a6ec:	mov	x3, x22
  41a6f0:	mov	x2, x23
  41a6f4:	add	x0, sp, #0x88
  41a6f8:	bl	41a3a8 <wcrtomb@plt+0x15788>
  41a6fc:	cbz	w0, 41a55c <wcrtomb@plt+0x1593c>
  41a700:	mov	w25, #0x1                   	// #1
  41a704:	b	41a5a8 <wcrtomb@plt+0x15988>
  41a708:	mov	w2, #0x5                   	// #5
  41a70c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a710:	mov	x0, #0x0                   	// #0
  41a714:	add	x1, x1, #0x2e0
  41a718:	bl	4049c0 <dcgettext@plt>
  41a71c:	mov	w25, #0x1                   	// #1
  41a720:	ldr	x6, [sp, #160]
  41a724:	mov	x2, x0
  41a728:	mov	x5, x23
  41a72c:	mov	w4, w20
  41a730:	mov	x3, x22
  41a734:	mov	w1, #0x0                   	// #0
  41a738:	ldr	x6, [x6]
  41a73c:	mov	w0, #0x0                   	// #0
  41a740:	mov	w19, #0x8e4c                	// #36428
  41a744:	bl	404050 <error@plt>
  41a748:	b	41a5ac <wcrtomb@plt+0x1598c>
  41a74c:	mov	x1, x27
  41a750:	mov	w4, w20
  41a754:	mov	x3, x22
  41a758:	mov	x2, x23
  41a75c:	add	x0, sp, #0x90
  41a760:	bl	41a3a8 <wcrtomb@plt+0x15788>
  41a764:	cbnz	w0, 41a5a0 <wcrtomb@plt+0x15980>
  41a768:	mov	x0, #0x18                  	// #24
  41a76c:	bl	440f48 <argp_parse@@Base+0xd060>
  41a770:	b	41a6b0 <wcrtomb@plt+0x15a90>
  41a774:	mov	w2, #0x5                   	// #5
  41a778:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a77c:	mov	x0, #0x0                   	// #0
  41a780:	add	x1, x1, #0x2e0
  41a784:	bl	4049c0 <dcgettext@plt>
  41a788:	mov	w25, #0x1                   	// #1
  41a78c:	ldr	x6, [sp, #160]
  41a790:	mov	x2, x0
  41a794:	mov	x5, x23
  41a798:	mov	w4, w20
  41a79c:	mov	x3, x22
  41a7a0:	mov	w1, #0x0                   	// #0
  41a7a4:	ldr	x6, [x6, #8]
  41a7a8:	mov	w0, #0x0                   	// #0
  41a7ac:	mov	w19, #0x8e4c                	// #36428
  41a7b0:	bl	404050 <error@plt>
  41a7b4:	b	41a5ac <wcrtomb@plt+0x1598c>
  41a7b8:	add	x0, sp, #0x98
  41a7bc:	bl	42c108 <wcrtomb@plt+0x274e8>
  41a7c0:	b	41a5cc <wcrtomb@plt+0x159ac>
  41a7c4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41a7c8:	ldr	x0, [x0, #952]
  41a7cc:	cbz	x0, 41a7d4 <wcrtomb@plt+0x15bb4>
  41a7d0:	blr	x0
  41a7d4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a7d8:	add	x1, x1, #0x2a8
  41a7dc:	mov	w2, #0x5                   	// #5
  41a7e0:	mov	x0, #0x0                   	// #0
  41a7e4:	bl	4049c0 <dcgettext@plt>
  41a7e8:	mov	x19, x0
  41a7ec:	add	x0, sp, #0x98
  41a7f0:	bl	42c1d8 <wcrtomb@plt+0x275b8>
  41a7f4:	mov	w4, w20
  41a7f8:	mov	x5, x0
  41a7fc:	mov	x3, x22
  41a800:	mov	x2, x19
  41a804:	mov	w1, #0x0                   	// #0
  41a808:	mov	w0, #0x0                   	// #0
  41a80c:	bl	404050 <error@plt>
  41a810:	bl	40e770 <wcrtomb@plt+0x9b50>
  41a814:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41a818:	ldr	x0, [x0, #952]
  41a81c:	cbz	x0, 41a824 <wcrtomb@plt+0x15c04>
  41a820:	blr	x0
  41a824:	mov	w2, #0x5                   	// #5
  41a828:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a82c:	mov	x0, #0x0                   	// #0
  41a830:	add	x1, x1, #0x300
  41a834:	bl	4049c0 <dcgettext@plt>
  41a838:	mov	x2, x0
  41a83c:	mov	w1, #0x0                   	// #0
  41a840:	mov	w0, #0x0                   	// #0
  41a844:	bl	404050 <error@plt>
  41a848:	bl	40e770 <wcrtomb@plt+0x9b50>
  41a84c:	mov	x0, x22
  41a850:	bl	429df8 <wcrtomb@plt+0x251d8>
  41a854:	nop
  41a858:	mov	x1, x0
  41a85c:	adrp	x3, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a860:	adrp	x2, 41a000 <wcrtomb@plt+0x153e0>
  41a864:	add	x3, x3, #0x318
  41a868:	add	x2, x2, #0x358
  41a86c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a870:	add	x0, x0, #0x9d8
  41a874:	b	41a478 <wcrtomb@plt+0x15858>
  41a878:	stp	x29, x30, [sp, #-64]!
  41a87c:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a880:	mov	x29, sp
  41a884:	ldr	x4, [x3, #2520]
  41a888:	stp	x19, x20, [sp, #16]
  41a88c:	mov	x20, x1
  41a890:	mov	x19, x2
  41a894:	cbz	x4, 41a8d0 <wcrtomb@plt+0x15cb0>
  41a898:	mov	w3, w0
  41a89c:	add	x1, sp, #0x28
  41a8a0:	mov	x0, x4
  41a8a4:	str	x3, [sp, #40]
  41a8a8:	bl	4384c8 <argp_parse@@Base+0x45e0>
  41a8ac:	cbz	x0, 41a8d0 <wcrtomb@plt+0x15cb0>
  41a8b0:	ldr	x1, [x0, #8]
  41a8b4:	str	w1, [x20]
  41a8b8:	ldr	x1, [x0, #16]
  41a8bc:	mov	w0, #0x0                   	// #0
  41a8c0:	str	x1, [x19]
  41a8c4:	ldp	x19, x20, [sp, #16]
  41a8c8:	ldp	x29, x30, [sp], #64
  41a8cc:	ret
  41a8d0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41a8d4:	mov	w0, #0x1                   	// #1
  41a8d8:	ldr	w1, [x1, #728]
  41a8dc:	cmn	w1, #0x1
  41a8e0:	b.eq	41a8ec <wcrtomb@plt+0x15ccc>  // b.none
  41a8e4:	mov	w0, #0x0                   	// #0
  41a8e8:	str	w1, [x20]
  41a8ec:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41a8f0:	ldr	x1, [x1, #528]
  41a8f4:	cbz	x1, 41a8c4 <wcrtomb@plt+0x15ca4>
  41a8f8:	str	x1, [x19]
  41a8fc:	mov	w0, #0x0                   	// #0
  41a900:	ldp	x19, x20, [sp, #16]
  41a904:	ldp	x29, x30, [sp], #64
  41a908:	ret
  41a90c:	nop
  41a910:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a914:	add	x2, x2, #0x9d8
  41a918:	mov	x1, x0
  41a91c:	adrp	x3, 456000 <_obstack_memory_used@@Base+0x13e10>
  41a920:	add	x0, x2, #0x8
  41a924:	add	x3, x3, #0x320
  41a928:	adrp	x2, 41a000 <wcrtomb@plt+0x153e0>
  41a92c:	add	x2, x2, #0x380
  41a930:	b	41a478 <wcrtomb@plt+0x15858>
  41a934:	nop
  41a938:	stp	x29, x30, [sp, #-64]!
  41a93c:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41a940:	mov	x29, sp
  41a944:	ldr	x4, [x3, #2528]
  41a948:	stp	x19, x20, [sp, #16]
  41a94c:	mov	x20, x1
  41a950:	mov	x19, x2
  41a954:	cbz	x4, 41a990 <wcrtomb@plt+0x15d70>
  41a958:	mov	w3, w0
  41a95c:	add	x1, sp, #0x28
  41a960:	mov	x0, x4
  41a964:	str	x3, [sp, #40]
  41a968:	bl	4384c8 <argp_parse@@Base+0x45e0>
  41a96c:	cbz	x0, 41a990 <wcrtomb@plt+0x15d70>
  41a970:	ldr	x1, [x0, #8]
  41a974:	str	w1, [x20]
  41a978:	ldr	x1, [x0, #16]
  41a97c:	mov	w0, #0x0                   	// #0
  41a980:	str	x1, [x19]
  41a984:	ldp	x19, x20, [sp, #16]
  41a988:	ldp	x29, x30, [sp], #64
  41a98c:	ret
  41a990:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41a994:	mov	w0, #0x1                   	// #1
  41a998:	ldr	w1, [x1, #648]
  41a99c:	cmn	w1, #0x1
  41a9a0:	b.eq	41a9ac <wcrtomb@plt+0x15d8c>  // b.none
  41a9a4:	mov	w0, #0x0                   	// #0
  41a9a8:	str	w1, [x20]
  41a9ac:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41a9b0:	ldr	x1, [x1, #472]
  41a9b4:	cbz	x1, 41a984 <wcrtomb@plt+0x15d64>
  41a9b8:	str	x1, [x19]
  41a9bc:	mov	w0, #0x0                   	// #0
  41a9c0:	ldp	x19, x20, [sp, #16]
  41a9c4:	ldp	x29, x30, [sp], #64
  41a9c8:	ret
  41a9cc:	nop
  41a9d0:	mov	w6, #0x6667                	// #26215
  41a9d4:	asr	w3, w0, #31
  41a9d8:	movk	w6, #0x6666, lsl #16
  41a9dc:	mov	x7, x1
  41a9e0:	mov	w4, #0x2e                  	// #46
  41a9e4:	smull	x2, w0, w6
  41a9e8:	strb	w4, [x7], #1
  41a9ec:	asr	x2, x2, #34
  41a9f0:	sub	w2, w2, w3
  41a9f4:	add	w2, w2, w2, lsl #2
  41a9f8:	subs	w2, w0, w2, lsl #1
  41a9fc:	b.ne	41aa90 <wcrtomb@plt+0x15e70>  // b.any
  41aa00:	mov	w5, #0x9                   	// #9
  41aa04:	nop
  41aa08:	smull	x0, w0, w6
  41aa0c:	mov	w4, w5
  41aa10:	sub	w5, w5, #0x1
  41aa14:	asr	x0, x0, #34
  41aa18:	sub	w0, w0, w3
  41aa1c:	asr	w3, w0, #31
  41aa20:	smull	x2, w0, w6
  41aa24:	asr	x2, x2, #34
  41aa28:	sub	w2, w2, w3
  41aa2c:	add	w2, w2, w2, lsl #2
  41aa30:	subs	w2, w0, w2, lsl #1
  41aa34:	b.eq	41aa08 <wcrtomb@plt+0x15de8>  // b.none
  41aa38:	sub	w4, w4, #0x2
  41aa3c:	strb	wzr, [x7, w5, sxtw]
  41aa40:	add	w2, w2, #0x30
  41aa44:	strb	w2, [x7, w4, sxtw]
  41aa48:	cbz	w4, 41aa8c <wcrtomb@plt+0x15e6c>
  41aa4c:	mov	w5, #0x6667                	// #26215
  41aa50:	sxtw	x4, w4
  41aa54:	movk	w5, #0x6666, lsl #16
  41aa58:	smull	x0, w0, w5
  41aa5c:	asr	x0, x0, #34
  41aa60:	sub	w0, w0, w3
  41aa64:	asr	w3, w0, #31
  41aa68:	smull	x2, w0, w5
  41aa6c:	asr	x2, x2, #34
  41aa70:	sub	w2, w2, w3
  41aa74:	add	w2, w2, w2, lsl #2
  41aa78:	sub	w2, w0, w2, lsl #1
  41aa7c:	add	w2, w2, #0x30
  41aa80:	strb	w2, [x1, x4]
  41aa84:	sub	x4, x4, #0x1
  41aa88:	cbnz	w4, 41aa58 <wcrtomb@plt+0x15e38>
  41aa8c:	ret
  41aa90:	add	w2, w2, #0x30
  41aa94:	mov	w4, #0x8                   	// #8
  41aa98:	strb	w2, [x1, #9]
  41aa9c:	strb	wzr, [x1, #10]
  41aaa0:	b	41aa4c <wcrtomb@plt+0x15e2c>
  41aaa4:	nop
  41aaa8:	ret
  41aaac:	nop
  41aab0:	mvn	x0, x1
  41aab4:	lsr	x0, x0, #63
  41aab8:	ret
  41aabc:	nop
  41aac0:	stp	x29, x30, [sp, #-32]!
  41aac4:	mov	x29, sp
  41aac8:	stp	x19, x20, [sp, #16]
  41aacc:	mov	x20, x1
  41aad0:	mov	w19, w0
  41aad4:	mov	x0, #0x0                   	// #0
  41aad8:	bl	43fbe8 <argp_parse@@Base+0xbd00>
  41aadc:	mov	x2, x20
  41aae0:	mov	w1, w0
  41aae4:	mov	w0, w19
  41aae8:	ldp	x19, x20, [sp, #16]
  41aaec:	ldp	x29, x30, [sp], #32
  41aaf0:	b	4400d0 <argp_parse@@Base+0xc1e8>
  41aaf4:	nop
  41aaf8:	stp	x29, x30, [sp, #-32]!
  41aafc:	mov	x29, sp
  41ab00:	stp	x19, x20, [sp, #16]
  41ab04:	mov	x20, x0
  41ab08:	mov	x19, x1
  41ab0c:	ldr	x0, [x0]
  41ab10:	bl	4047b0 <free@plt>
  41ab14:	cbz	x19, 41ab24 <wcrtomb@plt+0x15f04>
  41ab18:	mov	x0, x19
  41ab1c:	bl	441170 <argp_parse@@Base+0xd288>
  41ab20:	mov	x19, x0
  41ab24:	str	x19, [x20]
  41ab28:	ldp	x19, x20, [sp, #16]
  41ab2c:	ldp	x29, x30, [sp], #32
  41ab30:	ret
  41ab34:	nop
  41ab38:	stp	x29, x30, [sp, #-48]!
  41ab3c:	mov	x29, sp
  41ab40:	stp	x19, x20, [sp, #16]
  41ab44:	mov	x20, x0
  41ab48:	mov	x19, x1
  41ab4c:	ldr	x0, [x0]
  41ab50:	str	x21, [sp, #32]
  41ab54:	mov	x21, x2
  41ab58:	bl	4047b0 <free@plt>
  41ab5c:	cbz	x19, 41ab90 <wcrtomb@plt+0x15f70>
  41ab60:	mov	x1, x21
  41ab64:	mov	x0, x19
  41ab68:	bl	4040c0 <strnlen@plt>
  41ab6c:	mov	x21, x0
  41ab70:	add	x0, x0, #0x1
  41ab74:	bl	440f48 <argp_parse@@Base+0xd060>
  41ab78:	mov	x1, x19
  41ab7c:	mov	x19, x0
  41ab80:	mov	x2, x21
  41ab84:	bl	403f70 <memcpy@plt>
  41ab88:	str	x19, [x20]
  41ab8c:	strb	wzr, [x19, x21]
  41ab90:	ldp	x19, x20, [sp, #16]
  41ab94:	ldr	x21, [sp, #32]
  41ab98:	ldp	x29, x30, [sp], #48
  41ab9c:	ret
  41aba0:	ldrb	w4, [x0]
  41aba4:	mov	x1, x0
  41aba8:	cbz	w4, 41ae04 <wcrtomb@plt+0x161e4>
  41abac:	mov	x2, x0
  41abb0:	mov	w15, #0xc                   	// #12
  41abb4:	mov	w0, #0x1                   	// #1
  41abb8:	mov	w14, #0x5c                  	// #92
  41abbc:	mov	w13, #0x9                   	// #9
  41abc0:	mov	w12, #0xb                   	// #11
  41abc4:	mov	w11, #0xa                   	// #10
  41abc8:	mov	w10, #0xd                   	// #13
  41abcc:	mov	w9, #0x7                   	// #7
  41abd0:	mov	w8, #0x8                   	// #8
  41abd4:	mov	w7, #0x7f                  	// #127
  41abd8:	cmp	w4, #0x5c
  41abdc:	add	x6, x2, #0x1
  41abe0:	add	x5, x1, #0x1
  41abe4:	b.eq	41ac14 <wcrtomb@plt+0x15ff4>  // b.none
  41abe8:	cmp	x1, x2
  41abec:	b.eq	41ad04 <wcrtomb@plt+0x160e4>  // b.none
  41abf0:	strb	w4, [x1]
  41abf4:	mov	x1, x5
  41abf8:	ldrb	w4, [x2, #1]
  41abfc:	mov	x2, x6
  41ac00:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ac04:	cmp	x1, x2
  41ac08:	b.eq	41ac10 <wcrtomb@plt+0x15ff0>  // b.none
  41ac0c:	strb	wzr, [x1]
  41ac10:	ret
  41ac14:	ldrb	w3, [x2, #1]
  41ac18:	cmp	w3, #0x66
  41ac1c:	b.eq	41ada8 <wcrtomb@plt+0x16188>  // b.none
  41ac20:	b.hi	41ac58 <wcrtomb@plt+0x16038>  // b.pmore
  41ac24:	cmp	w3, #0x5c
  41ac28:	b.eq	41ad90 <wcrtomb@plt+0x16170>  // b.none
  41ac2c:	b.ls	41ac84 <wcrtomb@plt+0x16064>  // b.plast
  41ac30:	cmp	w3, #0x61
  41ac34:	b.eq	41ad78 <wcrtomb@plt+0x16158>  // b.none
  41ac38:	cmp	w3, #0x62
  41ac3c:	b.ne	41ac94 <wcrtomb@plt+0x16074>  // b.any
  41ac40:	strb	w8, [x1]
  41ac44:	add	x2, x2, #0x2
  41ac48:	mov	x1, x5
  41ac4c:	ldrb	w4, [x2]
  41ac50:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ac54:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ac58:	cmp	w3, #0x74
  41ac5c:	b.eq	41adc0 <wcrtomb@plt+0x161a0>  // b.none
  41ac60:	b.ls	41acbc <wcrtomb@plt+0x1609c>  // b.plast
  41ac64:	cmp	w3, #0x76
  41ac68:	b.ne	41ac94 <wcrtomb@plt+0x16074>  // b.any
  41ac6c:	strb	w12, [x1]
  41ac70:	add	x2, x2, #0x2
  41ac74:	mov	x1, x5
  41ac78:	ldrb	w4, [x2]
  41ac7c:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ac80:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ac84:	cmp	w3, #0x37
  41ac88:	b.hi	41ace4 <wcrtomb@plt+0x160c4>  // b.pmore
  41ac8c:	cmp	w3, #0x2f
  41ac90:	b.hi	41ad30 <wcrtomb@plt+0x16110>  // b.pmore
  41ac94:	strb	w14, [x1]
  41ac98:	ldrb	w0, [x2, #1]
  41ac9c:	cbz	w0, 41adf4 <wcrtomb@plt+0x161d4>
  41aca0:	strb	w0, [x1, #1]
  41aca4:	add	x2, x2, #0x2
  41aca8:	add	x1, x1, #0x2
  41acac:	mov	w0, #0x0                   	// #0
  41acb0:	ldrb	w4, [x2]
  41acb4:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41acb8:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41acbc:	cmp	w3, #0x6e
  41acc0:	b.eq	41ad18 <wcrtomb@plt+0x160f8>  // b.none
  41acc4:	cmp	w3, #0x72
  41acc8:	b.ne	41ac94 <wcrtomb@plt+0x16074>  // b.any
  41accc:	strb	w10, [x1]
  41acd0:	add	x2, x2, #0x2
  41acd4:	mov	x1, x5
  41acd8:	ldrb	w4, [x2]
  41acdc:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ace0:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ace4:	cmp	w3, #0x3f
  41ace8:	b.ne	41ac94 <wcrtomb@plt+0x16074>  // b.any
  41acec:	strb	w7, [x1]
  41acf0:	add	x2, x2, #0x2
  41acf4:	mov	x1, x5
  41acf8:	ldrb	w4, [x2]
  41acfc:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ad00:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ad04:	ldrb	w4, [x1, #1]
  41ad08:	mov	x2, x6
  41ad0c:	mov	x1, x5
  41ad10:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ad14:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ad18:	strb	w11, [x1]
  41ad1c:	add	x2, x2, #0x2
  41ad20:	mov	x1, x5
  41ad24:	ldrb	w4, [x2]
  41ad28:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ad2c:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ad30:	ldrb	w6, [x2, #2]
  41ad34:	sub	w4, w6, #0x30
  41ad38:	and	w4, w4, #0xff
  41ad3c:	cmp	w4, #0x7
  41ad40:	b.hi	41add8 <wcrtomb@plt+0x161b8>  // b.pmore
  41ad44:	ldrb	w16, [x2, #3]
  41ad48:	add	w3, w6, w3, lsl #3
  41ad4c:	sub	w3, w3, #0x1b0
  41ad50:	sub	w4, w16, #0x30
  41ad54:	and	w4, w4, #0xff
  41ad58:	cmp	w4, #0x7
  41ad5c:	b.ls	41ae0c <wcrtomb@plt+0x161ec>  // b.plast
  41ad60:	strb	w3, [x1]
  41ad64:	add	x2, x2, #0x3
  41ad68:	mov	x1, x5
  41ad6c:	ldrb	w4, [x2]
  41ad70:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ad74:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ad78:	strb	w9, [x1]
  41ad7c:	add	x2, x2, #0x2
  41ad80:	mov	x1, x5
  41ad84:	ldrb	w4, [x2]
  41ad88:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ad8c:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ad90:	strb	w4, [x1]
  41ad94:	add	x2, x2, #0x2
  41ad98:	mov	x1, x5
  41ad9c:	ldrb	w4, [x2]
  41ada0:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ada4:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ada8:	strb	w15, [x1]
  41adac:	add	x2, x2, #0x2
  41adb0:	mov	x1, x5
  41adb4:	ldrb	w4, [x2]
  41adb8:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41adbc:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41adc0:	strb	w13, [x1]
  41adc4:	add	x2, x2, #0x2
  41adc8:	mov	x1, x5
  41adcc:	ldrb	w4, [x2]
  41add0:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41add4:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41add8:	sub	w3, w3, #0x30
  41addc:	strb	w3, [x1]
  41ade0:	add	x2, x2, #0x2
  41ade4:	mov	x1, x5
  41ade8:	ldrb	w4, [x2]
  41adec:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41adf0:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41adf4:	mov	x2, x6
  41adf8:	mov	x1, x5
  41adfc:	mov	w0, #0x0                   	// #0
  41ae00:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ae04:	mov	w0, #0x1                   	// #1
  41ae08:	ret
  41ae0c:	add	w3, w16, w3, lsl #3
  41ae10:	add	x2, x2, #0x4
  41ae14:	sub	w3, w3, #0x30
  41ae18:	strb	w3, [x1]
  41ae1c:	mov	x1, x5
  41ae20:	ldrb	w4, [x2]
  41ae24:	cbnz	w4, 41abd8 <wcrtomb@plt+0x15fb8>
  41ae28:	b	41ac04 <wcrtomb@plt+0x15fe4>
  41ae2c:	nop
  41ae30:	stp	x29, x30, [sp, #-32]!
  41ae34:	mov	x29, sp
  41ae38:	str	x19, [sp, #16]
  41ae3c:	mov	x19, x0
  41ae40:	cbz	x0, 41ae7c <wcrtomb@plt+0x1625c>
  41ae44:	ldrb	w1, [x0]
  41ae48:	cbz	w1, 41ae7c <wcrtomb@plt+0x1625c>
  41ae4c:	bl	403ff0 <strlen@plt>
  41ae50:	sub	x1, x0, #0x1
  41ae54:	add	x1, x19, x1
  41ae58:	cmp	x19, x1
  41ae5c:	b.cc	41ae70 <wcrtomb@plt+0x16250>  // b.lo, b.ul, b.last
  41ae60:	b	41ae7c <wcrtomb@plt+0x1625c>
  41ae64:	strb	wzr, [x1], #-1
  41ae68:	cmp	x19, x1
  41ae6c:	b.eq	41ae7c <wcrtomb@plt+0x1625c>  // b.none
  41ae70:	ldrb	w0, [x1]
  41ae74:	cmp	w0, #0x2f
  41ae78:	b.eq	41ae64 <wcrtomb@plt+0x16244>  // b.none
  41ae7c:	mov	x0, x19
  41ae80:	ldr	x19, [sp, #16]
  41ae84:	ldp	x29, x30, [sp], #32
  41ae88:	ret
  41ae8c:	nop
  41ae90:	ldrb	w2, [x0]
  41ae94:	mov	x1, x0
  41ae98:	mov	x3, x0
  41ae9c:	cmp	w2, #0x2e
  41aea0:	b.eq	41aebc <wcrtomb@plt+0x1629c>  // b.none
  41aea4:	b	41af08 <wcrtomb@plt+0x162e8>
  41aea8:	cmp	w2, #0x0
  41aeac:	cinc	x3, x3, eq  // eq = none
  41aeb0:	cmp	w2, #0x2e
  41aeb4:	strb	w2, [x3]
  41aeb8:	b.ne	41af04 <wcrtomb@plt+0x162e4>  // b.any
  41aebc:	ldrb	w2, [x1, #1]
  41aec0:	cmp	w2, #0x2f
  41aec4:	b.ne	41af04 <wcrtomb@plt+0x162e4>  // b.any
  41aec8:	ldrb	w2, [x1, #2]
  41aecc:	add	x4, x1, #0x2
  41aed0:	mov	x1, x4
  41aed4:	cmp	w2, #0x2f
  41aed8:	b.ne	41aea8 <wcrtomb@plt+0x16288>  // b.any
  41aedc:	ldrb	w2, [x4, #1]
  41aee0:	add	x1, x4, #0x1
  41aee4:	cmp	w2, #0x2f
  41aee8:	b.ne	41aea8 <wcrtomb@plt+0x16288>  // b.any
  41aeec:	mov	x4, x1
  41aef0:	add	x1, x4, #0x1
  41aef4:	ldrb	w2, [x4, #1]
  41aef8:	cmp	w2, #0x2f
  41aefc:	b.ne	41aea8 <wcrtomb@plt+0x16288>  // b.any
  41af00:	b	41aeec <wcrtomb@plt+0x162cc>
  41af04:	ldrb	w2, [x1]
  41af08:	strb	w2, [x3], #1
  41af0c:	add	x1, x1, #0x1
  41af10:	cbnz	w2, 41af28 <wcrtomb@plt+0x16308>
  41af14:	b	41af40 <wcrtomb@plt+0x16320>
  41af18:	strb	w2, [x3], #1
  41af1c:	add	x1, x1, #0x1
  41af20:	cbz	w2, 41af40 <wcrtomb@plt+0x16320>
  41af24:	nop
  41af28:	cmp	w2, #0x2f
  41af2c:	ldrb	w2, [x1]
  41af30:	b.eq	41af80 <wcrtomb@plt+0x16360>  // b.none
  41af34:	strb	w2, [x3], #1
  41af38:	add	x1, x1, #0x1
  41af3c:	cbnz	w2, 41af28 <wcrtomb@plt+0x16308>
  41af40:	sub	x1, x3, x0
  41af44:	cmp	x1, #0x2
  41af48:	b.le	41af68 <wcrtomb@plt+0x16348>
  41af4c:	ldurb	w1, [x3, #-2]
  41af50:	cmp	w1, #0x2e
  41af54:	b.eq	41af98 <wcrtomb@plt+0x16378>  // b.none
  41af58:	cmp	w1, #0x2f
  41af5c:	b.ne	41af64 <wcrtomb@plt+0x16344>  // b.any
  41af60:	sub	x3, x3, #0x1
  41af64:	sturb	wzr, [x3, #-1]
  41af68:	ret
  41af6c:	cmp	w2, #0x2e
  41af70:	cset	x2, eq  // eq = none
  41af74:	add	x2, x2, #0x1
  41af78:	add	x1, x1, x2
  41af7c:	ldrb	w2, [x1]
  41af80:	cmp	w2, #0x2e
  41af84:	cset	w4, eq  // eq = none
  41af88:	ldrb	w4, [x1, w4, uxtw]
  41af8c:	cmp	w4, #0x2f
  41af90:	b.eq	41af6c <wcrtomb@plt+0x1634c>  // b.none
  41af94:	b	41af18 <wcrtomb@plt+0x162f8>
  41af98:	ldurb	w1, [x3, #-3]
  41af9c:	cmp	w1, #0x2f
  41afa0:	b.ne	41af64 <wcrtomb@plt+0x16344>  // b.any
  41afa4:	sub	x3, x3, #0x1
  41afa8:	sub	x0, x3, x0
  41afac:	cmp	x0, #0x2
  41afb0:	b.gt	41af60 <wcrtomb@plt+0x16340>
  41afb4:	sturb	wzr, [x3, #-1]
  41afb8:	b	41af68 <wcrtomb@plt+0x16348>
  41afbc:	nop
  41afc0:	stp	x29, x30, [sp, #-48]!
  41afc4:	mov	x29, sp
  41afc8:	stp	x19, x20, [sp, #16]
  41afcc:	mov	x20, x1
  41afd0:	ldrb	w1, [x1]
  41afd4:	cmp	w1, #0x2f
  41afd8:	b.eq	41b060 <wcrtomb@plt+0x16440>  // b.none
  41afdc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41afe0:	stp	x21, x22, [sp, #32]
  41afe4:	add	x21, x1, #0x9e8
  41afe8:	ldr	x1, [x1, #2536]
  41afec:	cbz	x1, 41b084 <wcrtomb@plt+0x16464>
  41aff0:	mov	w2, #0x18                  	// #24
  41aff4:	smaddl	x0, w0, w2, x1
  41aff8:	ldr	x19, [x0, #8]
  41affc:	cbz	x19, 41b09c <wcrtomb@plt+0x1647c>
  41b000:	mov	x0, x19
  41b004:	bl	403ff0 <strlen@plt>
  41b008:	mov	x21, x0
  41b00c:	mov	x0, x20
  41b010:	add	x22, x21, #0x1
  41b014:	bl	403ff0 <strlen@plt>
  41b018:	add	x0, x0, #0x1
  41b01c:	add	x0, x0, x22
  41b020:	bl	440f48 <argp_parse@@Base+0xd060>
  41b024:	mov	x1, x19
  41b028:	mov	x19, x0
  41b02c:	bl	404910 <strcpy@plt>
  41b030:	mov	x1, x20
  41b034:	mov	w2, #0x2f                  	// #47
  41b038:	strb	w2, [x19, x21]
  41b03c:	add	x0, x19, x22
  41b040:	bl	404910 <strcpy@plt>
  41b044:	mov	x0, x19
  41b048:	ldp	x21, x22, [sp, #32]
  41b04c:	bl	41ae90 <wcrtomb@plt+0x16270>
  41b050:	mov	x0, x19
  41b054:	ldp	x19, x20, [sp, #16]
  41b058:	ldp	x29, x30, [sp], #48
  41b05c:	ret
  41b060:	mov	x0, x20
  41b064:	bl	441170 <argp_parse@@Base+0xd288>
  41b068:	mov	x19, x0
  41b06c:	mov	x0, x19
  41b070:	bl	41ae90 <wcrtomb@plt+0x16270>
  41b074:	mov	x0, x19
  41b078:	ldp	x19, x20, [sp, #16]
  41b07c:	ldp	x29, x30, [sp], #48
  41b080:	ret
  41b084:	ldr	x19, [x21, #8]
  41b088:	cbnz	x19, 41b000 <wcrtomb@plt+0x163e0>
  41b08c:	bl	4411a0 <argp_parse@@Base+0xd2b8>
  41b090:	mov	x19, x0
  41b094:	str	x0, [x21, #8]
  41b098:	b	41affc <wcrtomb@plt+0x163dc>
  41b09c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  41b0a0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x13e10>
  41b0a4:	add	x1, x1, #0x668
  41b0a8:	add	x0, x0, #0x328
  41b0ac:	bl	429ad0 <wcrtomb@plt+0x24eb0>
  41b0b0:	stp	x29, x30, [sp, #-80]!
  41b0b4:	mov	x29, sp
  41b0b8:	stp	x21, x22, [sp, #32]
  41b0bc:	mov	x21, x4
  41b0c0:	ldr	x22, [x0]
  41b0c4:	stp	x19, x20, [sp, #16]
  41b0c8:	mov	x19, x2
  41b0cc:	stp	x23, x24, [sp, #48]
  41b0d0:	mov	x23, x0
  41b0d4:	mov	x24, x3
  41b0d8:	mov	x0, x22
  41b0dc:	stp	x25, x26, [sp, #64]
  41b0e0:	mov	x25, x1
  41b0e4:	bl	403ff0 <strlen@plt>
  41b0e8:	cmp	x0, x19
  41b0ec:	b.ls	41b118 <wcrtomb@plt+0x164f8>  // b.plast
  41b0f0:	mov	x20, x0
  41b0f4:	mov	x1, x25
  41b0f8:	mov	x2, x19
  41b0fc:	mov	x0, x22
  41b100:	bl	4046d0 <memcmp@plt>
  41b104:	cbnz	w0, 41b118 <wcrtomb@plt+0x164f8>
  41b108:	ldrb	w0, [x22, x19]
  41b10c:	add	x1, x22, x19
  41b110:	cmp	w0, #0x2f
  41b114:	b.eq	41b130 <wcrtomb@plt+0x16510>  // b.none
  41b118:	ldp	x19, x20, [sp, #16]
  41b11c:	ldp	x21, x22, [sp, #32]
  41b120:	ldp	x23, x24, [sp, #48]
  41b124:	ldp	x25, x26, [sp, #64]
  41b128:	ldp	x29, x30, [sp], #80
  41b12c:	ret
  41b130:	cmp	x19, x21
  41b134:	b.cc	41b16c <wcrtomb@plt+0x1654c>  // b.lo, b.ul, b.last
  41b138:	sub	x2, x20, x19
  41b13c:	add	x0, x22, x21
  41b140:	add	x2, x2, #0x1
  41b144:	bl	403f80 <memmove@plt>
  41b148:	mov	x2, x21
  41b14c:	mov	x1, x24
  41b150:	mov	x0, x22
  41b154:	ldp	x19, x20, [sp, #16]
  41b158:	ldp	x21, x22, [sp, #32]
  41b15c:	ldp	x23, x24, [sp, #48]
  41b160:	ldp	x25, x26, [sp, #64]
  41b164:	ldp	x29, x30, [sp], #80
  41b168:	b	403f70 <memcpy@plt>
  41b16c:	add	x26, x21, #0x1
  41b170:	sub	x1, x20, x19
  41b174:	add	x1, x1, x26
  41b178:	mov	x0, x22
  41b17c:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  41b180:	mov	x22, x0
  41b184:	add	x1, x0, x19
  41b188:	str	x0, [x23]
  41b18c:	b	41b138 <wcrtomb@plt+0x16518>
  41b190:	mov	x1, x3
  41b194:	cmp	x0, x2
  41b198:	b.hi	41b1a0 <wcrtomb@plt+0x16580>  // b.pmore
  41b19c:	b	4398d8 <argp_parse@@Base+0x59f0>
  41b1a0:	b	4397d8 <argp_parse@@Base+0x58f0>
  41b1a4:	nop
  41b1a8:	stp	x29, x30, [sp, #-64]!
  41b1ac:	mov	x29, sp
  41b1b0:	stp	x19, x20, [sp, #16]
  41b1b4:	mov	x19, x0
  41b1b8:	stp	x21, x22, [sp, #32]
  41b1bc:	mov	x22, x2
  41b1c0:	mov	x21, x3
  41b1c4:	str	x23, [sp, #48]
  41b1c8:	mov	x23, x1
  41b1cc:	bl	404ad0 <__errno_location@plt>
  41b1d0:	str	wzr, [x0]
  41b1d4:	mov	x20, x0
  41b1d8:	ldrb	w0, [x19]
  41b1dc:	tbnz	x21, #63, 41b218 <wcrtomb@plt+0x165f8>
  41b1e0:	cmp	w0, #0x2d
  41b1e4:	cset	w0, eq  // eq = none
  41b1e8:	ldrb	w0, [x19, w0, uxtw]
  41b1ec:	sub	w0, w0, #0x30
  41b1f0:	cmp	w0, #0x9
  41b1f4:	b.ls	41b250 <wcrtomb@plt+0x16630>  // b.plast
  41b1f8:	mov	w1, #0x16                  	// #22
  41b1fc:	mov	x0, #0x0                   	// #0
  41b200:	str	w1, [x20]
  41b204:	ldp	x19, x20, [sp, #16]
  41b208:	ldp	x21, x22, [sp, #32]
  41b20c:	ldr	x23, [sp, #48]
  41b210:	ldp	x29, x30, [sp], #64
  41b214:	ret
  41b218:	sub	w0, w0, #0x30
  41b21c:	cmp	w0, #0x9
  41b220:	b.hi	41b1f8 <wcrtomb@plt+0x165d8>  // b.pmore
  41b224:	mov	x1, x23
  41b228:	mov	x0, x19
  41b22c:	mov	w3, #0x0                   	// #0
  41b230:	mov	w2, #0xa                   	// #10
  41b234:	bl	4044b0 <__strtoul_internal@plt>
  41b238:	cmp	x21, x0
  41b23c:	b.cs	41b204 <wcrtomb@plt+0x165e4>  // b.hs, b.nlast
  41b240:	mov	w1, #0x22                  	// #34
  41b244:	mov	x0, x21
  41b248:	str	w1, [x20]
  41b24c:	b	41b204 <wcrtomb@plt+0x165e4>
  41b250:	mov	x1, x23
  41b254:	mov	x0, x19
  41b258:	mov	w3, #0x0                   	// #0
  41b25c:	mov	w2, #0xa                   	// #10
  41b260:	bl	404390 <__strtol_internal@plt>
  41b264:	cmp	x0, x22
  41b268:	ccmp	x21, x0, #0x1, ge  // ge = tcont
  41b26c:	b.ge	41b204 <wcrtomb@plt+0x165e4>  // b.tcont
  41b270:	cmp	x0, x22
  41b274:	mov	w1, #0x22                  	// #34
  41b278:	csel	x0, x22, x21, lt  // lt = tstop
  41b27c:	str	w1, [x20]
  41b280:	b	41b204 <wcrtomb@plt+0x165e4>
  41b284:	nop
  41b288:	cbnz	w0, 41b294 <wcrtomb@plt+0x16674>
  41b28c:	strb	wzr, [x1]
  41b290:	ret
  41b294:	b	41a9d0 <wcrtomb@plt+0x15db0>
  41b298:	stp	x29, x30, [sp, #-32]!
  41b29c:	mov	x3, x1
  41b2a0:	mov	w1, #0xc9ff                	// #51711
  41b2a4:	mov	x29, sp
  41b2a8:	stp	x19, x20, [sp, #16]
  41b2ac:	movk	w1, #0x3b9a, lsl #16
  41b2b0:	mov	x19, x2
  41b2b4:	cmp	w3, w1
  41b2b8:	mov	x2, x0
  41b2bc:	b.hi	41b310 <wcrtomb@plt+0x166f0>  // b.pmore
  41b2c0:	cmp	w3, #0x0
  41b2c4:	mov	w20, w3
  41b2c8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41b2cc:	b.ge	41b314 <wcrtomb@plt+0x166f4>  // b.tcont
  41b2d0:	mov	w20, #0xca00                	// #51712
  41b2d4:	add	x2, x0, #0x1
  41b2d8:	movk	w20, #0x3b9a, lsl #16
  41b2dc:	add	x1, x19, #0x1
  41b2e0:	sub	w20, w20, w3
  41b2e4:	neg	x0, x2
  41b2e8:	bl	4398d8 <argp_parse@@Base+0x59f0>
  41b2ec:	mov	w1, #0x2d                  	// #45
  41b2f0:	sturb	w1, [x0, #-1]
  41b2f4:	sub	x8, x0, #0x1
  41b2f8:	cbnz	w20, 41b328 <wcrtomb@plt+0x16708>
  41b2fc:	strb	wzr, [x19, #21]
  41b300:	mov	x0, x8
  41b304:	ldp	x19, x20, [sp, #16]
  41b308:	ldp	x29, x30, [sp], #32
  41b30c:	ret
  41b310:	mov	w20, #0x0                   	// #0
  41b314:	add	x1, x19, #0x1
  41b318:	tbnz	x0, #63, 41b2e4 <wcrtomb@plt+0x166c4>
  41b31c:	bl	4398d8 <argp_parse@@Base+0x59f0>
  41b320:	mov	x8, x0
  41b324:	cbz	w20, 41b2fc <wcrtomb@plt+0x166dc>
  41b328:	add	x1, x19, #0x15
  41b32c:	mov	w0, w20
  41b330:	bl	41a9d0 <wcrtomb@plt+0x15db0>
  41b334:	mov	x0, x8
  41b338:	ldp	x19, x20, [sp, #16]
  41b33c:	ldp	x29, x30, [sp], #32
  41b340:	ret
  41b344:	nop
  41b348:	stp	x29, x30, [sp, #-64]!
  41b34c:	mov	x29, sp
  41b350:	stp	x19, x20, [sp, #16]
  41b354:	mov	x19, x0
  41b358:	stp	x21, x22, [sp, #32]
  41b35c:	mov	x22, x1
  41b360:	and	w21, w2, #0xff
  41b364:	str	x23, [sp, #48]
  41b368:	bl	404ad0 <__errno_location@plt>
  41b36c:	ldrb	w23, [x19]
  41b370:	mov	x20, x0
  41b374:	cmp	w23, #0x2d
  41b378:	cset	w0, eq  // eq = none
  41b37c:	ldrb	w0, [x19, w0, uxtw]
  41b380:	sub	w0, w0, #0x30
  41b384:	cmp	w0, #0x9
  41b388:	b.ls	41b3b4 <wcrtomb@plt+0x16794>  // b.plast
  41b38c:	mov	w2, #0x16                  	// #22
  41b390:	str	w2, [x20]
  41b394:	ldr	x23, [sp, #48]
  41b398:	str	x19, [x22]
  41b39c:	mov	x1, #0xffffffffffffffff    	// #-1
  41b3a0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41b3a4:	ldp	x19, x20, [sp, #16]
  41b3a8:	ldp	x21, x22, [sp, #32]
  41b3ac:	ldp	x29, x30, [sp], #64
  41b3b0:	ret
  41b3b4:	str	wzr, [x20]
  41b3b8:	mov	x0, x19
  41b3bc:	mov	x1, x22
  41b3c0:	cmp	w23, #0x2d
  41b3c4:	mov	w3, #0x0                   	// #0
  41b3c8:	mov	w2, #0xa                   	// #10
  41b3cc:	b.eq	41b4f8 <wcrtomb@plt+0x168d8>  // b.none
  41b3d0:	bl	4044b0 <__strtoul_internal@plt>
  41b3d4:	tbnz	x0, #63, 41b4bc <wcrtomb@plt+0x1689c>
  41b3d8:	ldr	w5, [x20]
  41b3dc:	mov	w2, #0x0                   	// #0
  41b3e0:	ldr	x19, [x22]
  41b3e4:	cbz	w21, 41b498 <wcrtomb@plt+0x16878>
  41b3e8:	ldrb	w1, [x19]
  41b3ec:	cmp	w1, #0x2e
  41b3f0:	b.ne	41b498 <wcrtomb@plt+0x16878>  // b.any
  41b3f4:	mov	x1, x19
  41b3f8:	ldrb	w1, [x1, #1]
  41b3fc:	add	x19, x19, #0x1
  41b400:	sub	w4, w1, #0x30
  41b404:	cmp	w4, #0x9
  41b408:	b.hi	41b51c <wcrtomb@plt+0x168fc>  // b.pmore
  41b40c:	mov	w7, #0x0                   	// #0
  41b410:	mov	w3, #0x0                   	// #0
  41b414:	mov	w2, #0x0                   	// #0
  41b418:	b	41b434 <wcrtomb@plt+0x16814>
  41b41c:	add	w3, w3, #0x1
  41b420:	add	w2, w4, w6, lsl #1
  41b424:	ldrb	w1, [x19, #1]!
  41b428:	sub	w4, w1, #0x30
  41b42c:	cmp	w4, #0x9
  41b430:	b.hi	41b450 <wcrtomb@plt+0x16830>  // b.pmore
  41b434:	add	w6, w2, w2, lsl #2
  41b438:	cmp	w3, #0x8
  41b43c:	b.le	41b41c <wcrtomb@plt+0x167fc>
  41b440:	cmp	w1, #0x30
  41b444:	cset	w1, ne  // ne = any
  41b448:	orr	w7, w7, w1
  41b44c:	b	41b424 <wcrtomb@plt+0x16804>
  41b450:	cmp	w3, #0x8
  41b454:	b.gt	41b46c <wcrtomb@plt+0x1684c>
  41b458:	add	w2, w2, w2, lsl #2
  41b45c:	add	w3, w3, #0x1
  41b460:	cmp	w3, #0x9
  41b464:	lsl	w2, w2, #1
  41b468:	b.ne	41b458 <wcrtomb@plt+0x16838>  // b.any
  41b46c:	cmp	w23, #0x2d
  41b470:	b.ne	41b498 <wcrtomb@plt+0x16878>  // b.any
  41b474:	adds	w2, w2, w7
  41b478:	b.eq	41b498 <wcrtomb@plt+0x16878>  // b.none
  41b47c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41b480:	cmp	x0, x1
  41b484:	b.eq	41b52c <wcrtomb@plt+0x1690c>  // b.none
  41b488:	mov	w1, #0xca00                	// #51712
  41b48c:	sub	x0, x0, #0x1
  41b490:	movk	w1, #0x3b9a, lsl #16
  41b494:	sub	w2, w1, w2
  41b498:	ldr	x23, [sp, #48]
  41b49c:	str	x19, [x22]
  41b4a0:	sxtw	x2, w2
  41b4a4:	cmp	w5, #0x22
  41b4a8:	csinv	x1, x2, xzr, ne  // ne = any
  41b4ac:	ldp	x19, x20, [sp, #16]
  41b4b0:	ldp	x21, x22, [sp, #32]
  41b4b4:	ldp	x29, x30, [sp], #64
  41b4b8:	ret
  41b4bc:	mov	w5, #0x22                  	// #34
  41b4c0:	ldr	x19, [x22]
  41b4c4:	str	w5, [x20]
  41b4c8:	cbz	w21, 41b4d8 <wcrtomb@plt+0x168b8>
  41b4cc:	ldrb	w0, [x19]
  41b4d0:	cmp	w0, #0x2e
  41b4d4:	b.eq	41b510 <wcrtomb@plt+0x168f0>  // b.none
  41b4d8:	ldr	x23, [sp, #48]
  41b4dc:	str	x19, [x22]
  41b4e0:	mov	x1, #0xffffffffffffffff    	// #-1
  41b4e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41b4e8:	ldp	x19, x20, [sp, #16]
  41b4ec:	ldp	x21, x22, [sp, #32]
  41b4f0:	ldp	x29, x30, [sp], #64
  41b4f4:	ret
  41b4f8:	bl	404390 <__strtol_internal@plt>
  41b4fc:	ldr	w5, [x20]
  41b500:	mov	w2, #0x0                   	// #0
  41b504:	ldr	x19, [x22]
  41b508:	cbz	w21, 41b498 <wcrtomb@plt+0x16878>
  41b50c:	b	41b3e8 <wcrtomb@plt+0x167c8>
  41b510:	mov	x1, x19
  41b514:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41b518:	b	41b3f8 <wcrtomb@plt+0x167d8>
  41b51c:	mov	w2, #0x0                   	// #0
  41b520:	mov	w3, #0x0                   	// #0
  41b524:	mov	w7, #0x0                   	// #0
  41b528:	b	41b458 <wcrtomb@plt+0x16838>
  41b52c:	mov	w2, #0xffffffff            	// #-1
  41b530:	b	41b498 <wcrtomb@plt+0x16878>
  41b534:	nop
  41b538:	ldrb	w1, [x0]
  41b53c:	cmp	w1, #0x2f
  41b540:	b.eq	41b58c <wcrtomb@plt+0x1696c>  // b.none
  41b544:	cmp	w1, #0x2e
  41b548:	b.ne	41b57c <wcrtomb@plt+0x1695c>  // b.any
  41b54c:	ldrb	w1, [x0, #1]
  41b550:	cmp	w1, #0x2f
  41b554:	b.ne	41b57c <wcrtomb@plt+0x1695c>  // b.any
  41b558:	ldrb	w1, [x0, #2]
  41b55c:	add	x0, x0, #0x2
  41b560:	cmp	w1, #0x2f
  41b564:	b.ne	41b544 <wcrtomb@plt+0x16924>  // b.any
  41b568:	ldrb	w1, [x0, #1]!
  41b56c:	cmp	w1, #0x2f
  41b570:	b.eq	41b568 <wcrtomb@plt+0x16948>  // b.none
  41b574:	cmp	w1, #0x2e
  41b578:	b.eq	41b54c <wcrtomb@plt+0x1692c>  // b.none
  41b57c:	cmp	w1, #0x0
  41b580:	cset	w0, eq  // eq = none
  41b584:	ret
  41b588:	add	x0, x0, #0x1
  41b58c:	ldrb	w1, [x0, #1]
  41b590:	cmp	w1, #0x2f
  41b594:	b.eq	41b588 <wcrtomb@plt+0x16968>  // b.none
  41b598:	cmp	w1, #0x2e
  41b59c:	b.ne	41b57c <wcrtomb@plt+0x1695c>  // b.any
  41b5a0:	ldrb	w1, [x0, #2]
  41b5a4:	cmp	w1, #0x2e
  41b5a8:	cset	x1, eq  // eq = none
  41b5ac:	add	x1, x1, #0x2
  41b5b0:	add	x0, x0, x1
  41b5b4:	ldrb	w1, [x0]
  41b5b8:	cmp	w1, #0x2f
  41b5bc:	b.eq	41b58c <wcrtomb@plt+0x1696c>  // b.none
  41b5c0:	mov	w0, #0x0                   	// #0
  41b5c4:	ret
  41b5c8:	stp	x29, x30, [sp, #-32]!
  41b5cc:	mov	x29, sp
  41b5d0:	stp	x19, x20, [sp, #16]
  41b5d4:	mov	x20, x0
  41b5d8:	bl	41b538 <wcrtomb@plt+0x16918>
  41b5dc:	tst	w0, #0xff
  41b5e0:	b.ne	41b620 <wcrtomb@plt+0x16a00>  // b.any
  41b5e4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41b5e8:	mov	x1, x20
  41b5ec:	mov	w2, #0x200                 	// #512
  41b5f0:	ldr	w0, [x0, #2184]
  41b5f4:	bl	404160 <unlinkat@plt>
  41b5f8:	mov	w19, w0
  41b5fc:	cbnz	w0, 41b618 <wcrtomb@plt+0x169f8>
  41b600:	mov	x0, x20
  41b604:	bl	4111b0 <wcrtomb@plt+0xc590>
  41b608:	mov	w0, w19
  41b60c:	ldp	x19, x20, [sp, #16]
  41b610:	ldp	x29, x30, [sp], #32
  41b614:	ret
  41b618:	mov	w19, #0xffffffff            	// #-1
  41b61c:	b	41b608 <wcrtomb@plt+0x169e8>
  41b620:	bl	404ad0 <__errno_location@plt>
  41b624:	mov	w19, #0xffffffff            	// #-1
  41b628:	str	wzr, [x0]
  41b62c:	b	41b608 <wcrtomb@plt+0x169e8>
  41b630:	stp	x29, x30, [sp, #-176]!
  41b634:	mov	x29, sp
  41b638:	stp	x19, x20, [sp, #16]
  41b63c:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41b640:	add	x19, x19, #0x9e8
  41b644:	mov	x20, x0
  41b648:	add	x0, x19, #0x10
  41b64c:	stp	x21, x22, [sp, #32]
  41b650:	and	w22, w1, #0xff
  41b654:	mov	x1, x20
  41b658:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  41b65c:	ldr	x0, [x19, #24]
  41b660:	bl	4047b0 <free@plt>
  41b664:	str	xzr, [x19, #24]
  41b668:	cbz	w22, 41b698 <wcrtomb@plt+0x16a78>
  41b66c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41b670:	ldrb	w0, [x0, #960]
  41b674:	cbnz	w0, 41b698 <wcrtomb@plt+0x16a78>
  41b678:	mov	w1, #0x3a                  	// #58
  41b67c:	mov	x0, x20
  41b680:	bl	404870 <strchr@plt>
  41b684:	cmp	x0, #0x0
  41b688:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41b68c:	ccmp	x0, x20, #0x0, ne  // ne = any
  41b690:	str	x0, [x1, #968]
  41b694:	b.hi	41b840 <wcrtomb@plt+0x16c20>  // b.pmore
  41b698:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41b69c:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41b6a0:	add	x3, sp, #0x30
  41b6a4:	mov	x2, x20
  41b6a8:	ldr	w4, [x0, #504]
  41b6ac:	mov	w0, #0x0                   	// #0
  41b6b0:	ldr	w1, [x21, #2184]
  41b6b4:	bl	404c00 <__fxstatat@plt>
  41b6b8:	cbz	w0, 41b6e8 <wcrtomb@plt+0x16ac8>
  41b6bc:	bl	404ad0 <__errno_location@plt>
  41b6c0:	ldr	w0, [x0]
  41b6c4:	cmp	w0, #0x2
  41b6c8:	b.eq	41b82c <wcrtomb@plt+0x16c0c>  // b.none
  41b6cc:	mov	x0, x20
  41b6d0:	bl	42a278 <wcrtomb@plt+0x25658>
  41b6d4:	mov	w0, #0x0                   	// #0
  41b6d8:	ldp	x19, x20, [sp, #16]
  41b6dc:	ldp	x21, x22, [sp, #32]
  41b6e0:	ldp	x29, x30, [sp], #176
  41b6e4:	ret
  41b6e8:	ldr	w0, [sp, #64]
  41b6ec:	and	w1, w0, #0xf000
  41b6f0:	cmp	w1, #0x4, lsl #12
  41b6f4:	b.eq	41b82c <wcrtomb@plt+0x16c0c>  // b.none
  41b6f8:	cbz	w22, 41b70c <wcrtomb@plt+0x16aec>
  41b6fc:	mov	w1, #0xb000                	// #45056
  41b700:	and	w0, w0, w1
  41b704:	cmp	w0, #0x2, lsl #12
  41b708:	b.eq	41b82c <wcrtomb@plt+0x16c0c>  // b.none
  41b70c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  41b710:	ldr	w0, [x21, #2184]
  41b714:	mov	x1, x20
  41b718:	ldr	w2, [x2, #672]
  41b71c:	bl	435298 <argp_parse@@Base+0x13b0>
  41b720:	str	x0, [x19, #24]
  41b724:	mov	x3, x0
  41b728:	cbz	x0, 41b858 <wcrtomb@plt+0x16c38>
  41b72c:	ldr	w2, [x21, #2184]
  41b730:	ldr	x1, [x19, #16]
  41b734:	mov	w0, w2
  41b738:	bl	404800 <renameat@plt>
  41b73c:	cbz	w0, 41b7cc <wcrtomb@plt+0x16bac>
  41b740:	bl	404ad0 <__errno_location@plt>
  41b744:	ldr	w22, [x0]
  41b748:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41b74c:	ldr	x1, [x1, #952]
  41b750:	cbz	x1, 41b758 <wcrtomb@plt+0x16b38>
  41b754:	blr	x1
  41b758:	mov	w2, #0x5                   	// #5
  41b75c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41b760:	mov	x0, #0x0                   	// #0
  41b764:	add	x1, x1, #0x348
  41b768:	bl	4049c0 <dcgettext@plt>
  41b76c:	mov	x20, x0
  41b770:	ldr	x0, [x19, #16]
  41b774:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41b778:	mov	x21, x0
  41b77c:	ldr	x1, [x19, #24]
  41b780:	mov	w0, #0x1                   	// #1
  41b784:	bl	440230 <argp_parse@@Base+0xc348>
  41b788:	mov	x4, x0
  41b78c:	mov	x3, x21
  41b790:	mov	x2, x20
  41b794:	mov	w1, w22
  41b798:	mov	w0, #0x0                   	// #0
  41b79c:	bl	404050 <error@plt>
  41b7a0:	ldr	x0, [x19, #24]
  41b7a4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41b7a8:	mov	w2, #0x2                   	// #2
  41b7ac:	str	w2, [x1, #3400]
  41b7b0:	bl	4047b0 <free@plt>
  41b7b4:	str	xzr, [x19, #24]
  41b7b8:	mov	w0, #0x0                   	// #0
  41b7bc:	ldp	x19, x20, [sp, #16]
  41b7c0:	ldp	x21, x22, [sp, #32]
  41b7c4:	ldp	x29, x30, [sp], #176
  41b7c8:	ret
  41b7cc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41b7d0:	ldr	w0, [x0, #588]
  41b7d4:	cbz	w0, 41b82c <wcrtomb@plt+0x16c0c>
  41b7d8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41b7dc:	mov	w2, #0x5                   	// #5
  41b7e0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41b7e4:	add	x1, x1, #0x330
  41b7e8:	ldr	x21, [x0, #3872]
  41b7ec:	mov	x0, #0x0                   	// #0
  41b7f0:	bl	4049c0 <dcgettext@plt>
  41b7f4:	mov	x20, x0
  41b7f8:	ldr	x1, [x19, #16]
  41b7fc:	mov	w0, #0x0                   	// #0
  41b800:	bl	440230 <argp_parse@@Base+0xc348>
  41b804:	ldr	x1, [x19, #24]
  41b808:	mov	x19, x0
  41b80c:	mov	w0, #0x1                   	// #1
  41b810:	bl	440230 <argp_parse@@Base+0xc348>
  41b814:	mov	x4, x0
  41b818:	mov	x3, x19
  41b81c:	mov	x2, x20
  41b820:	mov	x0, x21
  41b824:	mov	w1, #0x1                   	// #1
  41b828:	bl	404700 <__fprintf_chk@plt>
  41b82c:	mov	w0, #0x1                   	// #1
  41b830:	ldp	x19, x20, [sp, #16]
  41b834:	ldp	x21, x22, [sp, #32]
  41b838:	ldp	x29, x30, [sp], #176
  41b83c:	ret
  41b840:	sub	x2, x0, x20
  41b844:	mov	w1, #0x2f                  	// #47
  41b848:	mov	x0, x20
  41b84c:	bl	404960 <memchr@plt>
  41b850:	cbnz	x0, 41b698 <wcrtomb@plt+0x16a78>
  41b854:	b	41b82c <wcrtomb@plt+0x16c0c>
  41b858:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  41b85c:	nop
  41b860:	stp	x29, x30, [sp, #-48]!
  41b864:	mov	x29, sp
  41b868:	stp	x19, x20, [sp, #16]
  41b86c:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41b870:	add	x19, x19, #0x9e8
  41b874:	ldr	x20, [x19, #24]
  41b878:	cbz	x20, 41b930 <wcrtomb@plt+0x16d10>
  41b87c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41b880:	mov	x1, x20
  41b884:	ldr	x3, [x19, #16]
  41b888:	ldr	w2, [x0, #2184]
  41b88c:	mov	w0, w2
  41b890:	bl	404800 <renameat@plt>
  41b894:	cbz	w0, 41b918 <wcrtomb@plt+0x16cf8>
  41b898:	stp	x21, x22, [sp, #32]
  41b89c:	bl	404ad0 <__errno_location@plt>
  41b8a0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41b8a4:	ldr	w22, [x0]
  41b8a8:	ldr	x1, [x1, #952]
  41b8ac:	cbz	x1, 41b8b8 <wcrtomb@plt+0x16c98>
  41b8b0:	blr	x1
  41b8b4:	ldr	x20, [x19, #24]
  41b8b8:	mov	w2, #0x5                   	// #5
  41b8bc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41b8c0:	mov	x0, #0x0                   	// #0
  41b8c4:	add	x1, x1, #0x348
  41b8c8:	bl	4049c0 <dcgettext@plt>
  41b8cc:	mov	x2, x0
  41b8d0:	mov	x0, x20
  41b8d4:	mov	x20, x2
  41b8d8:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41b8dc:	mov	x21, x0
  41b8e0:	ldr	x1, [x19, #16]
  41b8e4:	mov	w0, #0x1                   	// #1
  41b8e8:	bl	440230 <argp_parse@@Base+0xc348>
  41b8ec:	mov	x4, x0
  41b8f0:	mov	w1, w22
  41b8f4:	mov	x3, x21
  41b8f8:	mov	x2, x20
  41b8fc:	mov	w0, #0x0                   	// #0
  41b900:	bl	404050 <error@plt>
  41b904:	ldp	x21, x22, [sp, #32]
  41b908:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41b90c:	ldr	x20, [x19, #24]
  41b910:	mov	w1, #0x2                   	// #2
  41b914:	str	w1, [x0, #3400]
  41b918:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41b91c:	ldr	w0, [x0, #588]
  41b920:	cbnz	w0, 41b93c <wcrtomb@plt+0x16d1c>
  41b924:	mov	x0, x20
  41b928:	bl	4047b0 <free@plt>
  41b92c:	str	xzr, [x19, #24]
  41b930:	ldp	x19, x20, [sp, #16]
  41b934:	ldp	x29, x30, [sp], #48
  41b938:	ret
  41b93c:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41b940:	mov	w2, #0x5                   	// #5
  41b944:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41b948:	mov	x0, #0x0                   	// #0
  41b94c:	add	x1, x1, #0x360
  41b950:	stp	x21, x22, [sp, #32]
  41b954:	ldr	x22, [x3, #3872]
  41b958:	bl	4049c0 <dcgettext@plt>
  41b95c:	mov	x1, x20
  41b960:	mov	x21, x0
  41b964:	mov	w0, #0x0                   	// #0
  41b968:	bl	440230 <argp_parse@@Base+0xc348>
  41b96c:	ldr	x1, [x19, #16]
  41b970:	mov	x20, x0
  41b974:	mov	w0, #0x1                   	// #1
  41b978:	bl	440230 <argp_parse@@Base+0xc348>
  41b97c:	mov	x4, x0
  41b980:	mov	x3, x20
  41b984:	mov	x2, x21
  41b988:	mov	x0, x22
  41b98c:	mov	w1, #0x1                   	// #1
  41b990:	bl	404700 <__fprintf_chk@plt>
  41b994:	ldr	x20, [x19, #24]
  41b998:	ldp	x21, x22, [sp, #32]
  41b99c:	b	41b924 <wcrtomb@plt+0x16d04>
  41b9a0:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  41b9a4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41b9a8:	ldr	w4, [x3, #504]
  41b9ac:	mov	x3, x1
  41b9b0:	ldr	w1, [x2, #2184]
  41b9b4:	mov	x2, x0
  41b9b8:	mov	w0, #0x0                   	// #0
  41b9bc:	b	404c00 <__fxstatat@plt>
  41b9c0:	stp	x29, x30, [sp, #-48]!
  41b9c4:	mov	x29, sp
  41b9c8:	stp	x19, x20, [sp, #16]
  41b9cc:	mov	x20, x2
  41b9d0:	stp	x21, x22, [sp, #32]
  41b9d4:	mov	w22, w0
  41b9d8:	mov	x21, x1
  41b9dc:	bl	440470 <argp_parse@@Base+0xc588>
  41b9e0:	mov	x19, x0
  41b9e4:	cmn	x0, #0x1
  41b9e8:	b.eq	41ba00 <wcrtomb@plt+0x16de0>  // b.none
  41b9ec:	mov	x0, x19
  41b9f0:	ldp	x19, x20, [sp, #16]
  41b9f4:	ldp	x21, x22, [sp, #32]
  41b9f8:	ldp	x29, x30, [sp], #48
  41b9fc:	ret
  41ba00:	bl	404ad0 <__errno_location@plt>
  41ba04:	ldr	w0, [x0]
  41ba08:	cmp	w0, #0xb
  41ba0c:	b.ne	41b9ec <wcrtomb@plt+0x16dcc>  // b.any
  41ba10:	mov	w0, w22
  41ba14:	mov	w1, #0x3                   	// #3
  41ba18:	bl	441b80 <argp_parse@@Base+0xdc98>
  41ba1c:	tbnz	w0, #31, 41b9ec <wcrtomb@plt+0x16dcc>
  41ba20:	tbz	w0, #11, 41b9ec <wcrtomb@plt+0x16dcc>
  41ba24:	and	w2, w0, #0xfffff7ff
  41ba28:	mov	w1, #0x4                   	// #4
  41ba2c:	mov	w0, w22
  41ba30:	bl	441b80 <argp_parse@@Base+0xdc98>
  41ba34:	cmn	w0, #0x1
  41ba38:	b.eq	41b9ec <wcrtomb@plt+0x16dcc>  // b.none
  41ba3c:	mov	x2, x20
  41ba40:	mov	x1, x21
  41ba44:	mov	w0, w22
  41ba48:	ldp	x19, x20, [sp, #16]
  41ba4c:	ldp	x21, x22, [sp, #32]
  41ba50:	ldp	x29, x30, [sp], #48
  41ba54:	b	440470 <argp_parse@@Base+0xc588>
  41ba58:	stp	x29, x30, [sp, #-48]!
  41ba5c:	mov	x29, sp
  41ba60:	stp	x19, x20, [sp, #16]
  41ba64:	mov	x20, x2
  41ba68:	stp	x21, x22, [sp, #32]
  41ba6c:	mov	w22, w0
  41ba70:	mov	x21, x1
  41ba74:	bl	437dc8 <argp_parse@@Base+0x3ee0>
  41ba78:	mov	x19, x0
  41ba7c:	cmp	x20, x0
  41ba80:	b.ls	41ba94 <wcrtomb@plt+0x16e74>  // b.plast
  41ba84:	bl	404ad0 <__errno_location@plt>
  41ba88:	ldr	w0, [x0]
  41ba8c:	cmp	w0, #0xb
  41ba90:	b.eq	41baa8 <wcrtomb@plt+0x16e88>  // b.none
  41ba94:	mov	x0, x19
  41ba98:	ldp	x19, x20, [sp, #16]
  41ba9c:	ldp	x21, x22, [sp, #32]
  41baa0:	ldp	x29, x30, [sp], #48
  41baa4:	ret
  41baa8:	mov	w0, w22
  41baac:	mov	w1, #0x3                   	// #3
  41bab0:	bl	441b80 <argp_parse@@Base+0xdc98>
  41bab4:	tbnz	w0, #31, 41ba94 <wcrtomb@plt+0x16e74>
  41bab8:	tbz	w0, #11, 41ba94 <wcrtomb@plt+0x16e74>
  41babc:	and	w2, w0, #0xfffff7ff
  41bac0:	mov	w1, #0x4                   	// #4
  41bac4:	mov	w0, w22
  41bac8:	bl	441b80 <argp_parse@@Base+0xdc98>
  41bacc:	cmn	w0, #0x1
  41bad0:	b.eq	41ba94 <wcrtomb@plt+0x16e74>  // b.none
  41bad4:	sub	x2, x20, x19
  41bad8:	add	x1, x21, x19
  41badc:	mov	w0, w22
  41bae0:	bl	437dc8 <argp_parse@@Base+0x3ee0>
  41bae4:	add	x19, x19, x0
  41bae8:	b	41ba94 <wcrtomb@plt+0x16e74>
  41baec:	nop
  41baf0:	stp	x29, x30, [sp, #-48]!
  41baf4:	adrp	x8, 483000 <argp_program_version_hook@@Base+0x290>
  41baf8:	mov	x7, x4
  41bafc:	mov	x29, sp
  41bb00:	ldr	w4, [x8, #504]
  41bb04:	mov	x6, x3
  41bb08:	mov	x5, #0x3ffffffe            	// #1073741822
  41bb0c:	add	x3, sp, #0x10
  41bb10:	stp	x6, x7, [sp, #16]
  41bb14:	str	x5, [sp, #40]
  41bb18:	bl	436418 <argp_parse@@Base+0x2530>
  41bb1c:	ldp	x29, x30, [sp], #48
  41bb20:	ret
  41bb24:	nop
  41bb28:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bb2c:	ldr	x0, [x0, #2568]
  41bb30:	cmp	x0, #0x0
  41bb34:	sub	w0, w0, #0x1
  41bb38:	csel	w0, w0, wzr, ne  // ne = any
  41bb3c:	ret
  41bb40:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bb44:	mov	w2, #0x18                  	// #24
  41bb48:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bb4c:	ldr	w0, [x0, #4040]
  41bb50:	ldr	x1, [x1, #2536]
  41bb54:	smull	x0, w0, w2
  41bb58:	ldr	x0, [x1, x0]
  41bb5c:	ret
  41bb60:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41bb64:	ldrb	w1, [x1, #897]
  41bb68:	cbz	w1, 41bb80 <wcrtomb@plt+0x16f60>
  41bb6c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bb70:	ldr	w1, [x1, #408]
  41bb74:	tbnz	w1, #23, 41bb7c <wcrtomb@plt+0x16f5c>
  41bb78:	ret
  41bb7c:	b	429cf8 <wcrtomb@plt+0x250d8>
  41bb80:	b	429ce8 <wcrtomb@plt+0x250c8>
  41bb84:	nop
  41bb88:	stp	x29, x30, [sp, #-96]!
  41bb8c:	mov	x29, sp
  41bb90:	stp	x23, x24, [sp, #48]
  41bb94:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bb98:	stp	x19, x20, [sp, #16]
  41bb9c:	mov	w19, w0
  41bba0:	ldr	w0, [x23, #4040]
  41bba4:	cmp	w0, w19
  41bba8:	b.eq	41bc18 <wcrtomb@plt+0x16ff8>  // b.none
  41bbac:	stp	x21, x22, [sp, #32]
  41bbb0:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bbb4:	mov	w21, #0x18                  	// #24
  41bbb8:	ldr	x24, [x22, #2536]
  41bbbc:	smull	x21, w19, w21
  41bbc0:	stp	x25, x26, [sp, #64]
  41bbc4:	adrp	x26, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41bbc8:	add	x25, x24, x21
  41bbcc:	ldr	w20, [x25, #16]
  41bbd0:	cbz	w20, 41bc28 <wcrtomb@plt+0x17008>
  41bbd4:	cmp	w20, #0x0
  41bbd8:	b.le	41bc08 <wcrtomb@plt+0x16fe8>
  41bbdc:	add	x21, x22, #0x9e8
  41bbe0:	add	x1, x21, #0x30
  41bbe4:	ldr	w2, [x21, #48]
  41bbe8:	cmp	w19, w2
  41bbec:	b.eq	41bc04 <wcrtomb@plt+0x16fe4>  // b.none
  41bbf0:	mov	w3, w2
  41bbf4:	ldr	w2, [x1, #4]
  41bbf8:	str	w3, [x1, #4]!
  41bbfc:	cmp	w19, w2
  41bc00:	b.ne	41bbf0 <wcrtomb@plt+0x16fd0>  // b.any
  41bc04:	str	w19, [x21, #48]
  41bc08:	str	w20, [x26, #2184]
  41bc0c:	ldp	x21, x22, [sp, #32]
  41bc10:	str	w19, [x23, #4040]
  41bc14:	ldp	x25, x26, [sp, #64]
  41bc18:	ldp	x19, x20, [sp, #16]
  41bc1c:	ldp	x23, x24, [sp, #48]
  41bc20:	ldp	x29, x30, [sp], #96
  41bc24:	ret
  41bc28:	ldr	x1, [x24, x21]
  41bc2c:	ldrb	w0, [x1]
  41bc30:	cmp	w0, #0x2f
  41bc34:	b.ne	41bc88 <wcrtomb@plt+0x17068>  // b.any
  41bc38:	adrp	x26, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41bc3c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  41bc40:	ldr	w0, [x26, #2184]
  41bc44:	ldr	w2, [x2, #644]
  41bc48:	and	w2, w2, #0xffff7fff
  41bc4c:	bl	4045b0 <__openat_2@plt>
  41bc50:	mov	w20, w0
  41bc54:	tbnz	w0, #31, 41bce0 <wcrtomb@plt+0x170c0>
  41bc58:	add	x21, x22, #0x9e8
  41bc5c:	str	w20, [x25, #16]
  41bc60:	ldr	x0, [x21, #40]
  41bc64:	cmp	x0, #0xf
  41bc68:	b.hi	41bc98 <wcrtomb@plt+0x17078>  // b.pmore
  41bc6c:	add	x1, x21, #0x30
  41bc70:	add	x2, x0, #0x1
  41bc74:	str	x2, [x21, #40]
  41bc78:	cmp	w20, #0x0
  41bc7c:	str	w19, [x1, x0, lsl #2]
  41bc80:	b.gt	41bbdc <wcrtomb@plt+0x16fbc>
  41bc84:	b	41bc08 <wcrtomb@plt+0x16fe8>
  41bc88:	sub	w0, w19, #0x1
  41bc8c:	bl	41bb88 <wcrtomb@plt+0x16f68>
  41bc90:	ldr	x1, [x24, x21]
  41bc94:	b	41bc38 <wcrtomb@plt+0x17018>
  41bc98:	ldr	w24, [x21, #108]
  41bc9c:	mov	w0, #0x18                  	// #24
  41bca0:	str	x27, [sp, #80]
  41bca4:	ldr	x27, [x22, #2536]
  41bca8:	smull	x24, w24, w0
  41bcac:	add	x25, x27, x24
  41bcb0:	ldr	w0, [x25, #16]
  41bcb4:	bl	4045c0 <close@plt>
  41bcb8:	cbnz	w0, 41bcd4 <wcrtomb@plt+0x170b4>
  41bcbc:	ldr	x27, [sp, #80]
  41bcc0:	str	wzr, [x25, #16]
  41bcc4:	str	w19, [x21, #108]
  41bcc8:	cmp	w20, #0x0
  41bccc:	b.gt	41bbdc <wcrtomb@plt+0x16fbc>
  41bcd0:	b	41bc08 <wcrtomb@plt+0x16fe8>
  41bcd4:	ldr	x0, [x27, x24]
  41bcd8:	bl	41bb60 <wcrtomb@plt+0x16f40>
  41bcdc:	b	41bcbc <wcrtomb@plt+0x1709c>
  41bce0:	ldr	x0, [x24, x21]
  41bce4:	str	x27, [sp, #80]
  41bce8:	bl	429df8 <wcrtomb@plt+0x251d8>
  41bcec:	nop
  41bcf0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41bcf4:	ldrb	w1, [x1, #897]
  41bcf8:	cbz	w1, 41bd10 <wcrtomb@plt+0x170f0>
  41bcfc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bd00:	ldr	w1, [x1, #408]
  41bd04:	tbnz	w1, #23, 41bd0c <wcrtomb@plt+0x170ec>
  41bd08:	ret
  41bd0c:	b	429e10 <wcrtomb@plt+0x251f0>
  41bd10:	b	429de8 <wcrtomb@plt+0x251c8>
  41bd14:	nop
  41bd18:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  41bd1c:	ldrb	w3, [x3, #897]
  41bd20:	cbz	w3, 41bd38 <wcrtomb@plt+0x17118>
  41bd24:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bd28:	ldr	w3, [x3, #408]
  41bd2c:	tbnz	w3, #23, 41bd34 <wcrtomb@plt+0x17114>
  41bd30:	ret
  41bd34:	b	429ee0 <wcrtomb@plt+0x252c0>
  41bd38:	b	429e30 <wcrtomb@plt+0x25210>
  41bd3c:	nop
  41bd40:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41bd44:	ldrb	w1, [x1, #897]
  41bd48:	cbz	w1, 41bd60 <wcrtomb@plt+0x17140>
  41bd4c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bd50:	ldr	w1, [x1, #408]
  41bd54:	tbnz	w1, #23, 41bd5c <wcrtomb@plt+0x1713c>
  41bd58:	ret
  41bd5c:	b	42a048 <wcrtomb@plt+0x25428>
  41bd60:	b	42a038 <wcrtomb@plt+0x25418>
  41bd64:	nop
  41bd68:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41bd6c:	ldrb	w1, [x1, #897]
  41bd70:	cbz	w1, 41bd88 <wcrtomb@plt+0x17168>
  41bd74:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bd78:	ldr	w1, [x1, #408]
  41bd7c:	tbnz	w1, #23, 41bd84 <wcrtomb@plt+0x17164>
  41bd80:	ret
  41bd84:	b	42a078 <wcrtomb@plt+0x25458>
  41bd88:	b	42a068 <wcrtomb@plt+0x25448>
  41bd8c:	nop
  41bd90:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  41bd94:	ldrb	w2, [x2, #897]
  41bd98:	cbz	w2, 41bdb0 <wcrtomb@plt+0x17190>
  41bd9c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bda0:	ldr	w2, [x2, #408]
  41bda4:	tbnz	w2, #23, 41bdac <wcrtomb@plt+0x1718c>
  41bda8:	ret
  41bdac:	b	42a140 <wcrtomb@plt+0x25520>
  41bdb0:	b	42a098 <wcrtomb@plt+0x25478>
  41bdb4:	nop
  41bdb8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41bdbc:	ldrb	w1, [x1, #897]
  41bdc0:	cbz	w1, 41bdd8 <wcrtomb@plt+0x171b8>
  41bdc4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41bdc8:	ldr	w1, [x1, #408]
  41bdcc:	tbnz	w1, #23, 41bdd4 <wcrtomb@plt+0x171b4>
  41bdd0:	ret
  41bdd4:	b	42a288 <wcrtomb@plt+0x25668>
  41bdd8:	b	42a278 <wcrtomb@plt+0x25658>
  41bddc:	nop
  41bde0:	stp	x29, x30, [sp, #-32]!
  41bde4:	tst	w1, #0xff
  41bde8:	mov	x29, sp
  41bdec:	stp	x19, x20, [sp, #16]
  41bdf0:	mov	x19, x0
  41bdf4:	mov	x20, x2
  41bdf8:	b.ne	41be0c <wcrtomb@plt+0x171ec>  // b.any
  41bdfc:	bl	404ad0 <__errno_location@plt>
  41be00:	ldr	w0, [x0]
  41be04:	cmp	w0, #0x2
  41be08:	b.eq	41be20 <wcrtomb@plt+0x17200>  // b.none
  41be0c:	mov	x0, x19
  41be10:	mov	x16, x20
  41be14:	ldp	x19, x20, [sp, #16]
  41be18:	ldp	x29, x30, [sp], #32
  41be1c:	br	x16
  41be20:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41be24:	ldr	w0, [x0, #408]
  41be28:	tbz	w0, #6, 41be70 <wcrtomb@plt+0x17250>
  41be2c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41be30:	ldr	x0, [x0, #952]
  41be34:	cbz	x0, 41be3c <wcrtomb@plt+0x1721c>
  41be38:	blr	x0
  41be3c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41be40:	add	x1, x1, #0x378
  41be44:	mov	w2, #0x5                   	// #5
  41be48:	mov	x0, #0x0                   	// #0
  41be4c:	bl	4049c0 <dcgettext@plt>
  41be50:	mov	x20, x0
  41be54:	mov	x0, x19
  41be58:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41be5c:	mov	x2, x20
  41be60:	mov	x3, x0
  41be64:	mov	w1, #0x0                   	// #0
  41be68:	mov	w0, #0x0                   	// #0
  41be6c:	bl	404050 <error@plt>
  41be70:	ldp	x19, x20, [sp, #16]
  41be74:	mov	w0, #0x1                   	// #1
  41be78:	ldp	x29, x30, [sp], #32
  41be7c:	b	4260d0 <wcrtomb@plt+0x214b0>
  41be80:	stp	x29, x30, [sp, #-16]!
  41be84:	mov	x29, sp
  41be88:	bl	4041c0 <fork@plt>
  41be8c:	cmn	w0, #0x1
  41be90:	b.eq	41be9c <wcrtomb@plt+0x1727c>  // b.none
  41be94:	ldp	x29, x30, [sp], #16
  41be98:	ret
  41be9c:	mov	w2, #0x5                   	// #5
  41bea0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41bea4:	mov	x0, #0x0                   	// #0
  41bea8:	add	x1, x1, #0x3a0
  41beac:	bl	4049c0 <dcgettext@plt>
  41beb0:	mov	x1, x0
  41beb4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x13e10>
  41beb8:	add	x0, x0, #0x3b0
  41bebc:	bl	429ad0 <wcrtomb@plt+0x24eb0>
  41bec0:	stp	x29, x30, [sp, #-16]!
  41bec4:	mov	x29, sp
  41bec8:	bl	404130 <pipe@plt>
  41becc:	tbnz	w0, #31, 41bed8 <wcrtomb@plt+0x172b8>
  41bed0:	ldp	x29, x30, [sp], #16
  41bed4:	ret
  41bed8:	mov	w2, #0x5                   	// #5
  41bedc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41bee0:	mov	x0, #0x0                   	// #0
  41bee4:	add	x1, x1, #0x3b8
  41bee8:	bl	4049c0 <dcgettext@plt>
  41beec:	mov	x1, x0
  41bef0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x13e10>
  41bef4:	add	x0, x0, #0x3d0
  41bef8:	bl	429ad0 <wcrtomb@plt+0x24eb0>
  41befc:	nop
  41bf00:	stp	x29, x30, [sp, #-48]!
  41bf04:	mov	x29, sp
  41bf08:	stp	x19, x20, [sp, #16]
  41bf0c:	mov	x20, x1
  41bf10:	str	x21, [sp, #32]
  41bf14:	mov	x21, x0
  41bf18:	bl	404560 <getpagesize@plt>
  41bf1c:	sxtw	x19, w0
  41bf20:	adds	x0, x19, x20
  41bf24:	b.cs	41bf54 <wcrtomb@plt+0x17334>  // b.hs, b.nlast
  41bf28:	bl	440f48 <argp_parse@@Base+0xd060>
  41bf2c:	str	x0, [x21]
  41bf30:	sub	x1, x19, #0x1
  41bf34:	add	x1, x0, x1
  41bf38:	ldr	x21, [sp, #32]
  41bf3c:	udiv	x0, x1, x19
  41bf40:	msub	x0, x0, x19, x1
  41bf44:	ldp	x19, x20, [sp, #16]
  41bf48:	sub	x0, x1, x0
  41bf4c:	ldp	x29, x30, [sp], #48
  41bf50:	ret
  41bf54:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  41bf58:	stp	x29, x30, [sp, #-48]!
  41bf5c:	mov	x29, sp
  41bf60:	stp	x19, x20, [sp, #16]
  41bf64:	str	x21, [sp, #32]
  41bf68:	mov	x21, x0
  41bf6c:	mov	x0, #0x18                  	// #24
  41bf70:	bl	440f48 <argp_parse@@Base+0xd060>
  41bf74:	mov	x20, x0
  41bf78:	mov	x0, x21
  41bf7c:	bl	403ff0 <strlen@plt>
  41bf80:	add	x0, x0, #0x2
  41bf84:	str	x0, [x20, #8]
  41bf88:	bl	440f48 <argp_parse@@Base+0xd060>
  41bf8c:	str	x0, [x20]
  41bf90:	mov	x19, x0
  41bf94:	mov	x1, x21
  41bf98:	bl	404220 <stpcpy@plt>
  41bf9c:	sub	x1, x0, x19
  41bfa0:	add	x19, x19, x1
  41bfa4:	str	x1, [x20, #16]
  41bfa8:	ldurb	w2, [x19, #-1]
  41bfac:	cmp	w2, #0x2f
  41bfb0:	b.eq	41bfc4 <wcrtomb@plt+0x173a4>  // b.none
  41bfb4:	add	x1, x1, #0x1
  41bfb8:	str	x1, [x20, #16]
  41bfbc:	mov	w1, #0x2f                  	// #47
  41bfc0:	strb	w1, [x0]
  41bfc4:	mov	x0, x20
  41bfc8:	ldp	x19, x20, [sp, #16]
  41bfcc:	ldr	x21, [sp, #32]
  41bfd0:	ldp	x29, x30, [sp], #48
  41bfd4:	ret
  41bfd8:	stp	x29, x30, [sp, #-32]!
  41bfdc:	mov	x29, sp
  41bfe0:	str	x19, [sp, #16]
  41bfe4:	mov	x19, x0
  41bfe8:	ldr	x0, [x0]
  41bfec:	bl	4047b0 <free@plt>
  41bff0:	mov	x0, x19
  41bff4:	ldr	x19, [sp, #16]
  41bff8:	ldp	x29, x30, [sp], #32
  41bffc:	b	4047b0 <free@plt>
  41c000:	stp	x29, x30, [sp, #-48]!
  41c004:	mov	x29, sp
  41c008:	stp	x19, x20, [sp, #16]
  41c00c:	mov	x19, x0
  41c010:	mov	x0, x1
  41c014:	stp	x21, x22, [sp, #32]
  41c018:	mov	x22, x1
  41c01c:	bl	403ff0 <strlen@plt>
  41c020:	ldp	x1, x3, [x19, #8]
  41c024:	mov	x20, x0
  41c028:	add	x0, x3, #0x1
  41c02c:	add	x0, x0, x20
  41c030:	cmp	x1, x0
  41c034:	ldr	x0, [x19]
  41c038:	b.hi	41c060 <wcrtomb@plt+0x17440>  // b.pmore
  41c03c:	add	x21, x19, #0x8
  41c040:	mov	x1, x21
  41c044:	bl	441090 <argp_parse@@Base+0xd1a8>
  41c048:	ldp	x4, x3, [x19, #8]
  41c04c:	str	x0, [x19]
  41c050:	add	x2, x3, #0x1
  41c054:	add	x2, x2, x20
  41c058:	cmp	x2, x4
  41c05c:	b.cs	41c040 <wcrtomb@plt+0x17420>  // b.hs, b.nlast
  41c060:	mov	x1, x22
  41c064:	add	x0, x0, x3
  41c068:	bl	404910 <strcpy@plt>
  41c06c:	ldr	x0, [x19]
  41c070:	ldp	x19, x20, [sp, #16]
  41c074:	ldp	x21, x22, [sp, #32]
  41c078:	ldp	x29, x30, [sp], #48
  41c07c:	ret
  41c080:	stp	x29, x30, [sp, #-64]!
  41c084:	mov	x29, sp
  41c088:	stp	x19, x20, [sp, #16]
  41c08c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41c090:	mov	x19, x0
  41c094:	str	x23, [sp, #48]
  41c098:	add	x23, x20, #0x9e8
  41c09c:	stp	x21, x22, [sp, #32]
  41c0a0:	ldr	x0, [x23, #32]
  41c0a4:	ldr	x2, [x23, #112]
  41c0a8:	cmp	x0, x2
  41c0ac:	b.eq	41c214 <wcrtomb@plt+0x175f4>  // b.none
  41c0b0:	ldrb	w0, [x19]
  41c0b4:	cbz	w0, 41c158 <wcrtomb@plt+0x17538>
  41c0b8:	cmp	w0, #0x2e
  41c0bc:	b.eq	41c0cc <wcrtomb@plt+0x174ac>  // b.none
  41c0c0:	b	41c150 <wcrtomb@plt+0x17530>
  41c0c4:	cmp	w0, #0x2e
  41c0c8:	b.ne	41c118 <wcrtomb@plt+0x174f8>  // b.any
  41c0cc:	ldrb	w0, [x19, #1]
  41c0d0:	cmp	w0, #0x2f
  41c0d4:	b.ne	41c140 <wcrtomb@plt+0x17520>  // b.any
  41c0d8:	ldrb	w0, [x19, #2]
  41c0dc:	add	x1, x19, #0x2
  41c0e0:	mov	x19, x1
  41c0e4:	cmp	w0, #0x2f
  41c0e8:	b.ne	41c0c4 <wcrtomb@plt+0x174a4>  // b.any
  41c0ec:	ldrb	w0, [x1, #1]
  41c0f0:	add	x19, x1, #0x1
  41c0f4:	cmp	w0, #0x2f
  41c0f8:	b.ne	41c0c4 <wcrtomb@plt+0x174a4>  // b.any
  41c0fc:	mov	x1, x19
  41c100:	add	x19, x1, #0x1
  41c104:	ldrb	w0, [x1, #1]
  41c108:	cmp	w0, #0x2f
  41c10c:	b.eq	41c0fc <wcrtomb@plt+0x174dc>  // b.none
  41c110:	cmp	w0, #0x2e
  41c114:	b.eq	41c0cc <wcrtomb@plt+0x174ac>  // b.none
  41c118:	mov	x0, #0x0                   	// #0
  41c11c:	ldrb	w0, [x19, x0]
  41c120:	cbnz	w0, 41c14c <wcrtomb@plt+0x1752c>
  41c124:	ldr	x0, [x23, #32]
  41c128:	ldp	x19, x20, [sp, #16]
  41c12c:	sub	w0, w0, #0x1
  41c130:	ldp	x21, x22, [sp, #32]
  41c134:	ldr	x23, [sp, #48]
  41c138:	ldp	x29, x30, [sp], #64
  41c13c:	ret
  41c140:	mov	x0, #0x1                   	// #1
  41c144:	ldrb	w0, [x19, x0]
  41c148:	cbz	w0, 41c124 <wcrtomb@plt+0x17504>
  41c14c:	ldrb	w0, [x19]
  41c150:	cmp	w0, #0x2f
  41c154:	b.eq	41c2c8 <wcrtomb@plt+0x176a8>  // b.none
  41c158:	ldr	x0, [x23, #32]
  41c15c:	ldr	x2, [x20, #2536]
  41c160:	add	x1, x0, x0, lsl #1
  41c164:	lsl	x1, x1, #3
  41c168:	add	x3, x2, x1
  41c16c:	ldur	x22, [x3, #-16]
  41c170:	cbz	x22, 41c1e8 <wcrtomb@plt+0x175c8>
  41c174:	mov	x0, x22
  41c178:	bl	41bf58 <wcrtomb@plt+0x17338>
  41c17c:	ldr	x1, [x0]
  41c180:	mov	x21, x0
  41c184:	ldr	x2, [x0, #16]
  41c188:	add	x1, x1, x2
  41c18c:	ldurb	w1, [x1, #-1]
  41c190:	cmp	w1, #0x2f
  41c194:	b.ne	41c298 <wcrtomb@plt+0x17678>  // b.any
  41c198:	mov	x1, x19
  41c19c:	mov	x0, x21
  41c1a0:	bl	41c000 <wcrtomb@plt+0x173e0>
  41c1a4:	mov	x0, x19
  41c1a8:	bl	403ff0 <strlen@plt>
  41c1ac:	ldr	x1, [x21, #16]
  41c1b0:	ldr	x22, [x21]
  41c1b4:	add	x0, x0, x1
  41c1b8:	str	x0, [x21, #16]
  41c1bc:	add	x1, x22, x0
  41c1c0:	ldurb	w1, [x1, #-1]
  41c1c4:	cmp	w1, #0x2f
  41c1c8:	b.ne	41c1d0 <wcrtomb@plt+0x175b0>  // b.any
  41c1cc:	strb	wzr, [x22, x0]
  41c1d0:	mov	x0, x21
  41c1d4:	bl	4047b0 <free@plt>
  41c1d8:	ldr	x0, [x23, #32]
  41c1dc:	ldr	x2, [x20, #2536]
  41c1e0:	add	x1, x0, x0, lsl #1
  41c1e4:	lsl	x1, x1, #3
  41c1e8:	add	x3, x2, x1
  41c1ec:	str	x19, [x2, x1]
  41c1f0:	add	x1, x0, #0x1
  41c1f4:	str	x1, [x23, #32]
  41c1f8:	ldp	x19, x20, [sp, #16]
  41c1fc:	str	x22, [x3, #8]
  41c200:	str	wzr, [x3, #16]
  41c204:	ldp	x21, x22, [sp, #32]
  41c208:	ldr	x23, [sp, #48]
  41c20c:	ldp	x29, x30, [sp], #64
  41c210:	ret
  41c214:	ldr	x0, [x20, #2536]
  41c218:	cbz	x2, 41c2b8 <wcrtomb@plt+0x17698>
  41c21c:	cbz	x0, 41c2e8 <wcrtomb@plt+0x176c8>
  41c220:	mov	x1, #0xe38d                	// #58253
  41c224:	movk	x1, #0x8e38, lsl #16
  41c228:	movk	x1, #0x38e3, lsl #32
  41c22c:	movk	x1, #0x38e, lsl #48
  41c230:	cmp	x2, x1
  41c234:	b.hi	41c304 <wcrtomb@plt+0x176e4>  // b.pmore
  41c238:	add	x1, x2, #0x1
  41c23c:	add	x2, x1, x2, lsr #1
  41c240:	add	x1, x2, x2, lsl #1
  41c244:	str	x2, [x23, #112]
  41c248:	lsl	x1, x1, #3
  41c24c:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  41c250:	ldr	x1, [x23, #32]
  41c254:	str	x0, [x20, #2536]
  41c258:	mov	x21, x0
  41c25c:	cbnz	x1, 41c0b0 <wcrtomb@plt+0x17490>
  41c260:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  41c264:	add	x0, x0, #0x668
  41c268:	str	x0, [x21]
  41c26c:	bl	4411a0 <argp_parse@@Base+0xd2b8>
  41c270:	str	x0, [x21, #8]
  41c274:	ldr	x1, [x23, #32]
  41c278:	mov	w2, #0xffffff9c            	// #-100
  41c27c:	ldr	x0, [x20, #2536]
  41c280:	add	x3, x1, #0x1
  41c284:	add	x1, x1, x1, lsl #1
  41c288:	str	x3, [x23, #32]
  41c28c:	add	x0, x0, x1, lsl #3
  41c290:	str	w2, [x0, #16]
  41c294:	b	41c0b0 <wcrtomb@plt+0x17490>
  41c298:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41c29c:	add	x1, x1, #0x888
  41c2a0:	add	x1, x1, #0x8
  41c2a4:	bl	41c000 <wcrtomb@plt+0x173e0>
  41c2a8:	ldr	x0, [x21, #16]
  41c2ac:	add	x0, x0, #0x1
  41c2b0:	str	x0, [x21, #16]
  41c2b4:	b	41c198 <wcrtomb@plt+0x17578>
  41c2b8:	mov	x2, #0x2                   	// #2
  41c2bc:	str	x2, [x23, #112]
  41c2c0:	cbnz	x0, 41c238 <wcrtomb@plt+0x17618>
  41c2c4:	b	41c240 <wcrtomb@plt+0x17620>
  41c2c8:	mov	x0, x19
  41c2cc:	bl	441170 <argp_parse@@Base+0xd288>
  41c2d0:	mov	x22, x0
  41c2d4:	ldr	x0, [x23, #32]
  41c2d8:	ldr	x2, [x20, #2536]
  41c2dc:	add	x1, x0, x0, lsl #1
  41c2e0:	lsl	x1, x1, #3
  41c2e4:	b	41c1e8 <wcrtomb@plt+0x175c8>
  41c2e8:	mov	x1, #0x18                  	// #24
  41c2ec:	umulh	x3, x2, x1
  41c2f0:	mul	x1, x2, x1
  41c2f4:	cmp	x3, #0x0
  41c2f8:	cset	x3, ne  // ne = any
  41c2fc:	tbnz	x1, #63, 41c304 <wcrtomb@plt+0x176e4>
  41c300:	cbz	x3, 41c240 <wcrtomb@plt+0x17620>
  41c304:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  41c308:	stp	x29, x30, [sp, #-48]!
  41c30c:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41c310:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  41c314:	mov	x29, sp
  41c318:	stp	x19, x20, [sp, #16]
  41c31c:	mov	x19, x0
  41c320:	ldr	w0, [x3, #2184]
  41c324:	ldr	w2, [x2, #652]
  41c328:	str	x21, [sp, #32]
  41c32c:	mov	w21, w1
  41c330:	orr	w2, w2, #0x4000
  41c334:	mov	x1, x19
  41c338:	bl	4045b0 <__openat_2@plt>
  41c33c:	tbz	w0, #31, 41c374 <wcrtomb@plt+0x17754>
  41c340:	cbnz	w21, 41c354 <wcrtomb@plt+0x17734>
  41c344:	bl	404ad0 <__errno_location@plt>
  41c348:	ldr	w0, [x0]
  41c34c:	cmp	w0, #0x2
  41c350:	b.eq	41c3e8 <wcrtomb@plt+0x177c8>  // b.none
  41c354:	mov	x0, x19
  41c358:	mov	x21, #0x0                   	// #0
  41c35c:	bl	429de8 <wcrtomb@plt+0x251c8>
  41c360:	mov	x0, x21
  41c364:	ldp	x19, x20, [sp, #16]
  41c368:	ldr	x21, [sp, #32]
  41c36c:	ldp	x29, x30, [sp], #48
  41c370:	ret
  41c374:	mov	w20, w0
  41c378:	bl	404610 <fdopendir@plt>
  41c37c:	mov	x21, x0
  41c380:	cbz	x0, 41c3cc <wcrtomb@plt+0x177ac>
  41c384:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41c388:	ldr	w1, [x1, #464]
  41c38c:	bl	440638 <argp_parse@@Base+0xc750>
  41c390:	mov	x20, x0
  41c394:	cbz	x0, 41c3f0 <wcrtomb@plt+0x177d0>
  41c398:	mov	x0, x21
  41c39c:	bl	404590 <closedir@plt>
  41c3a0:	cmp	w0, #0x0
  41c3a4:	mov	x21, x20
  41c3a8:	cset	w0, ne  // ne = any
  41c3ac:	cbz	w0, 41c360 <wcrtomb@plt+0x17740>
  41c3b0:	mov	x0, x19
  41c3b4:	bl	42a068 <wcrtomb@plt+0x25448>
  41c3b8:	mov	x0, x21
  41c3bc:	ldp	x19, x20, [sp, #16]
  41c3c0:	ldr	x21, [sp, #32]
  41c3c4:	ldp	x29, x30, [sp], #48
  41c3c8:	ret
  41c3cc:	mov	x0, x19
  41c3d0:	bl	42a068 <wcrtomb@plt+0x25448>
  41c3d4:	mov	w0, w20
  41c3d8:	bl	4045c0 <close@plt>
  41c3dc:	cmp	w0, #0x0
  41c3e0:	cset	w0, ne  // ne = any
  41c3e4:	b	41c3ac <wcrtomb@plt+0x1778c>
  41c3e8:	mov	x21, #0x0                   	// #0
  41c3ec:	b	41c360 <wcrtomb@plt+0x17740>
  41c3f0:	mov	x0, x19
  41c3f4:	bl	42a068 <wcrtomb@plt+0x25448>
  41c3f8:	b	41c398 <wcrtomb@plt+0x17778>
  41c3fc:	nop
  41c400:	stp	x29, x30, [sp, #-80]!
  41c404:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41c408:	mov	x29, sp
  41c40c:	stp	x19, x20, [sp, #16]
  41c410:	mov	x19, x0
  41c414:	ldr	w0, [x2, #2184]
  41c418:	mov	w2, #0x0                   	// #0
  41c41c:	stp	x21, x22, [sp, #32]
  41c420:	mov	w22, w1
  41c424:	mov	x1, x19
  41c428:	bl	404160 <unlinkat@plt>
  41c42c:	cbz	w0, 41c4ac <wcrtomb@plt+0x1788c>
  41c430:	bl	404ad0 <__errno_location@plt>
  41c434:	mov	x21, x0
  41c438:	ldr	w0, [x0]
  41c43c:	cmp	w0, #0x1
  41c440:	ccmp	w0, #0x15, #0x4, ne  // ne = any
  41c444:	b.eq	41c460 <wcrtomb@plt+0x17840>  // b.none
  41c448:	mov	w20, #0x0                   	// #0
  41c44c:	mov	w0, w20
  41c450:	ldp	x19, x20, [sp, #16]
  41c454:	ldp	x21, x22, [sp, #32]
  41c458:	ldp	x29, x30, [sp], #80
  41c45c:	ret
  41c460:	mov	x0, x19
  41c464:	bl	41b5c8 <wcrtomb@plt+0x169a8>
  41c468:	cbz	w0, 41c4ac <wcrtomb@plt+0x1788c>
  41c46c:	ldr	w1, [x21]
  41c470:	cmp	w1, #0x27
  41c474:	b.hi	41c448 <wcrtomb@plt+0x17828>  // b.pmore
  41c478:	mov	x0, #0x1                   	// #1
  41c47c:	mov	x2, #0x1                   	// #1
  41c480:	movk	x0, #0x2, lsl #16
  41c484:	lsl	x2, x2, x1
  41c488:	movk	x0, #0x80, lsl #32
  41c48c:	mov	w20, #0x0                   	// #0
  41c490:	tst	x2, x0
  41c494:	b.eq	41c44c <wcrtomb@plt+0x1782c>  // b.none
  41c498:	cmp	w22, #0x1
  41c49c:	b.eq	41c4c4 <wcrtomb@plt+0x178a4>  // b.none
  41c4a0:	cmp	w22, #0x2
  41c4a4:	csetm	w20, eq  // eq = none
  41c4a8:	b	41c44c <wcrtomb@plt+0x1782c>
  41c4ac:	mov	w20, #0x1                   	// #1
  41c4b0:	mov	w0, w20
  41c4b4:	ldp	x19, x20, [sp, #16]
  41c4b8:	ldp	x21, x22, [sp, #32]
  41c4bc:	ldp	x29, x30, [sp], #80
  41c4c0:	ret
  41c4c4:	mov	x0, x19
  41c4c8:	mov	w1, #0x0                   	// #0
  41c4cc:	str	x25, [sp, #64]
  41c4d0:	bl	41c308 <wcrtomb@plt+0x176e8>
  41c4d4:	mov	x25, x0
  41c4d8:	cbz	x0, 41c57c <wcrtomb@plt+0x1795c>
  41c4dc:	stp	x23, x24, [sp, #48]
  41c4e0:	mov	x23, x0
  41c4e4:	mov	x0, x23
  41c4e8:	bl	403ff0 <strlen@plt>
  41c4ec:	mov	x22, x0
  41c4f0:	mov	x1, x23
  41c4f4:	mov	x0, x19
  41c4f8:	cbz	x22, 41c540 <wcrtomb@plt+0x17920>
  41c4fc:	bl	41eba0 <wcrtomb@plt+0x19f80>
  41c500:	mov	x24, x0
  41c504:	mov	w1, #0x1                   	// #1
  41c508:	bl	41c400 <wcrtomb@plt+0x177e0>
  41c50c:	add	x22, x22, #0x1
  41c510:	mov	w20, w0
  41c514:	mov	x0, x24
  41c518:	ldr	w24, [x21]
  41c51c:	bl	4047b0 <free@plt>
  41c520:	cbz	w20, 41c564 <wcrtomb@plt+0x17944>
  41c524:	add	x23, x23, x22
  41c528:	mov	x0, x23
  41c52c:	bl	403ff0 <strlen@plt>
  41c530:	mov	x1, x23
  41c534:	mov	x22, x0
  41c538:	mov	x0, x19
  41c53c:	cbnz	x22, 41c4fc <wcrtomb@plt+0x178dc>
  41c540:	mov	x0, x25
  41c544:	bl	4047b0 <free@plt>
  41c548:	mov	x0, x19
  41c54c:	bl	41b5c8 <wcrtomb@plt+0x169a8>
  41c550:	cmp	w0, #0x0
  41c554:	cset	w20, eq  // eq = none
  41c558:	ldp	x23, x24, [sp, #48]
  41c55c:	ldr	x25, [sp, #64]
  41c560:	b	41c44c <wcrtomb@plt+0x1782c>
  41c564:	mov	x0, x25
  41c568:	bl	4047b0 <free@plt>
  41c56c:	ldr	x25, [sp, #64]
  41c570:	str	w24, [x21]
  41c574:	ldp	x23, x24, [sp, #48]
  41c578:	b	41c44c <wcrtomb@plt+0x1782c>
  41c57c:	ldr	x25, [sp, #64]
  41c580:	b	41c448 <wcrtomb@plt+0x17828>
  41c584:	nop
  41c588:	stp	x29, x30, [sp, #-64]!
  41c58c:	cmp	w1, #0x1
  41c590:	mov	x29, sp
  41c594:	stp	x19, x20, [sp, #16]
  41c598:	mov	x20, x0
  41c59c:	b.eq	41c6a8 <wcrtomb@plt+0x17a88>  // b.none
  41c5a0:	stp	x21, x22, [sp, #32]
  41c5a4:	cmp	w1, #0x2
  41c5a8:	mov	x22, x2
  41c5ac:	ldr	x21, [x0]
  41c5b0:	b.eq	41c694 <wcrtomb@plt+0x17a74>  // b.none
  41c5b4:	add	w0, w1, #0x1
  41c5b8:	add	w1, w1, w1, lsr #31
  41c5bc:	mov	x2, x20
  41c5c0:	add	w0, w0, w0, lsr #31
  41c5c4:	asr	w19, w1, #1
  41c5c8:	asr	w1, w0, #1
  41c5cc:	subs	w0, w1, #0x1
  41c5d0:	b.ne	41c680 <wcrtomb@plt+0x17a60>  // b.any
  41c5d4:	str	xzr, [x2]
  41c5d8:	mov	x0, x20
  41c5dc:	mov	x2, x22
  41c5e0:	bl	41c588 <wcrtomb@plt+0x17968>
  41c5e4:	mov	x20, x0
  41c5e8:	mov	w1, w19
  41c5ec:	mov	x0, x21
  41c5f0:	mov	x2, x22
  41c5f4:	bl	41c588 <wcrtomb@plt+0x17968>
  41c5f8:	cmp	x20, #0x0
  41c5fc:	mov	x19, x0
  41c600:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41c604:	b.eq	41c6d4 <wcrtomb@plt+0x17ab4>  // b.none
  41c608:	add	x21, sp, #0x38
  41c60c:	b	41c628 <wcrtomb@plt+0x17a08>
  41c610:	ldr	x19, [x19]
  41c614:	str	x3, [x21]
  41c618:	cmp	x20, #0x0
  41c61c:	mov	x21, x1
  41c620:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  41c624:	b.eq	41c660 <wcrtomb@plt+0x17a40>  // b.none
  41c628:	mov	x1, x19
  41c62c:	mov	x0, x20
  41c630:	blr	x22
  41c634:	mov	x1, x19
  41c638:	mov	x3, x19
  41c63c:	tbz	w0, #31, 41c610 <wcrtomb@plt+0x179f0>
  41c640:	mov	x1, x20
  41c644:	mov	x3, x20
  41c648:	ldr	x20, [x20]
  41c64c:	str	x3, [x21]
  41c650:	mov	x21, x1
  41c654:	cmp	x20, #0x0
  41c658:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  41c65c:	b.ne	41c628 <wcrtomb@plt+0x17a08>  // b.any
  41c660:	cmp	x20, #0x0
  41c664:	csel	x20, x20, x19, ne  // ne = any
  41c668:	ldp	x21, x22, [sp, #32]
  41c66c:	str	x20, [x1]
  41c670:	ldp	x19, x20, [sp, #16]
  41c674:	ldr	x0, [sp, #56]
  41c678:	ldp	x29, x30, [sp], #64
  41c67c:	ret
  41c680:	mov	x2, x21
  41c684:	subs	w0, w0, #0x1
  41c688:	ldr	x21, [x21]
  41c68c:	b.eq	41c5d4 <wcrtomb@plt+0x179b4>  // b.none
  41c690:	b	41c680 <wcrtomb@plt+0x17a60>
  41c694:	mov	x1, x21
  41c698:	blr	x2
  41c69c:	cmp	w0, #0x0
  41c6a0:	b.gt	41c6b8 <wcrtomb@plt+0x17a98>
  41c6a4:	ldp	x21, x22, [sp, #32]
  41c6a8:	mov	x0, x20
  41c6ac:	ldp	x19, x20, [sp, #16]
  41c6b0:	ldp	x29, x30, [sp], #64
  41c6b4:	ret
  41c6b8:	ldr	x0, [x20]
  41c6bc:	ldp	x21, x22, [sp, #32]
  41c6c0:	str	x20, [x0]
  41c6c4:	str	xzr, [x20]
  41c6c8:	ldp	x19, x20, [sp, #16]
  41c6cc:	ldp	x29, x30, [sp], #64
  41c6d0:	ret
  41c6d4:	add	x1, sp, #0x38
  41c6d8:	b	41c660 <wcrtomb@plt+0x17a40>
  41c6dc:	nop
  41c6e0:	stp	x29, x30, [sp, #-32]!
  41c6e4:	mov	x0, #0x38                  	// #56
  41c6e8:	mov	x29, sp
  41c6ec:	str	x19, [sp, #16]
  41c6f0:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41c6f4:	bl	440f48 <argp_parse@@Base+0xd060>
  41c6f8:	mov	x1, x0
  41c6fc:	ldr	x2, [x19, #2656]
  41c700:	cbz	x2, 41c72c <wcrtomb@plt+0x17b0c>
  41c704:	ldr	x0, [x2, #8]
  41c708:	str	x0, [x1, #8]
  41c70c:	cbz	x0, 41c714 <wcrtomb@plt+0x17af4>
  41c710:	str	x1, [x0]
  41c714:	ldr	x19, [sp, #16]
  41c718:	str	x2, [x1]
  41c71c:	str	x1, [x2, #8]
  41c720:	mov	x0, x1
  41c724:	ldp	x29, x30, [sp], #32
  41c728:	ret
  41c72c:	mov	w2, #0x3                   	// #3
  41c730:	stp	xzr, xzr, [x1]
  41c734:	mov	x0, #0x38                  	// #56
  41c738:	str	w2, [x1, #16]
  41c73c:	str	x1, [x19, #2656]
  41c740:	bl	440f48 <argp_parse@@Base+0xd060>
  41c744:	mov	x1, x0
  41c748:	ldr	x2, [x19, #2656]
  41c74c:	b	41c704 <wcrtomb@plt+0x17ae4>
  41c750:	stp	x29, x30, [sp, #-16]!
  41c754:	mov	x29, sp
  41c758:	ldr	x0, [x0, #88]
  41c75c:	ldr	x1, [x1, #88]
  41c760:	bl	404710 <strcmp@plt>
  41c764:	cmp	w0, #0x0
  41c768:	cset	w0, eq  // eq = none
  41c76c:	ldp	x29, x30, [sp], #16
  41c770:	ret
  41c774:	nop
  41c778:	ldr	x0, [x0, #16]
  41c77c:	ldr	x1, [x1, #16]
  41c780:	b	404710 <strcmp@plt>
  41c784:	nop
  41c788:	stp	x29, x30, [sp, #-32]!
  41c78c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41c790:	mov	x29, sp
  41c794:	stp	x19, x20, [sp, #16]
  41c798:	ldr	x20, [x1, #2656]
  41c79c:	ldr	x0, [x20]
  41c7a0:	str	x0, [x1, #2656]
  41c7a4:	cbz	x0, 41c7ac <wcrtomb@plt+0x17b8c>
  41c7a8:	str	xzr, [x0, #8]
  41c7ac:	ldr	w0, [x20, #16]
  41c7b0:	cmp	w0, #0x4
  41c7b4:	ccmp	w0, #0x1, #0x4, ne  // ne = any
  41c7b8:	b.ne	41c7f4 <wcrtomb@plt+0x17bd4>  // b.any
  41c7bc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41c7c0:	ldr	w0, [x0, #804]
  41c7c4:	cmp	w0, #0x3
  41c7c8:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  41c7cc:	b.ne	41c7e8 <wcrtomb@plt+0x17bc8>  // b.any
  41c7d0:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41c7d4:	ldr	x0, [x19, #4064]
  41c7d8:	stp	xzr, x0, [x20]
  41c7dc:	cbz	x0, 41c7e4 <wcrtomb@plt+0x17bc4>
  41c7e0:	str	x20, [x0]
  41c7e4:	str	x20, [x19, #4064]
  41c7e8:	ldp	x19, x20, [sp, #16]
  41c7ec:	ldp	x29, x30, [sp], #32
  41c7f0:	ret
  41c7f4:	cmp	w0, #0x3
  41c7f8:	b.eq	41c824 <wcrtomb@plt+0x17c04>  // b.none
  41c7fc:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41c800:	ldr	x0, [x19, #4064]
  41c804:	cbz	x0, 41c824 <wcrtomb@plt+0x17c04>
  41c808:	add	x19, x19, #0xfe0
  41c80c:	nop
  41c810:	ldr	x1, [x0, #8]
  41c814:	str	x1, [x19]
  41c818:	bl	4047b0 <free@plt>
  41c81c:	ldr	x0, [x19]
  41c820:	cbnz	x0, 41c810 <wcrtomb@plt+0x17bf0>
  41c824:	mov	x0, x20
  41c828:	ldp	x19, x20, [sp, #16]
  41c82c:	ldp	x29, x30, [sp], #32
  41c830:	b	4047b0 <free@plt>
  41c834:	nop
  41c838:	stp	x29, x30, [sp, #-32]!
  41c83c:	mov	x29, sp
  41c840:	str	x19, [sp, #16]
  41c844:	mov	x19, x0
  41c848:	bl	403ff0 <strlen@plt>
  41c84c:	sub	x1, x0, #0x1
  41c850:	add	x1, x19, x1
  41c854:	cmp	x19, x1
  41c858:	b.cc	41c86c <wcrtomb@plt+0x17c4c>  // b.lo, b.ul, b.last
  41c85c:	b	41c878 <wcrtomb@plt+0x17c58>
  41c860:	strb	wzr, [x1], #-1
  41c864:	cmp	x19, x1
  41c868:	b.eq	41c878 <wcrtomb@plt+0x17c58>  // b.none
  41c86c:	ldrb	w2, [x1]
  41c870:	cmp	w2, #0x2f
  41c874:	b.eq	41c860 <wcrtomb@plt+0x17c40>  // b.none
  41c878:	ldr	x19, [sp, #16]
  41c87c:	ldp	x29, x30, [sp], #32
  41c880:	ret
  41c884:	nop
  41c888:	stp	x29, x30, [sp, #-48]!
  41c88c:	mov	x29, sp
  41c890:	stp	x19, x20, [sp, #16]
  41c894:	mov	w20, w1
  41c898:	ldr	x1, [x0]
  41c89c:	cbz	x1, 41c8c8 <wcrtomb@plt+0x17ca8>
  41c8a0:	add	x19, x0, #0x8
  41c8a4:	str	x21, [sp, #32]
  41c8a8:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  41c8ac:	add	x21, x21, #0x8
  41c8b0:	ldr	x0, [x21]
  41c8b4:	mov	w2, w20
  41c8b8:	bl	435e28 <argp_parse@@Base+0x1f40>
  41c8bc:	ldr	x1, [x19], #8
  41c8c0:	cbnz	x1, 41c8b0 <wcrtomb@plt+0x17c90>
  41c8c4:	ldr	x21, [sp, #32]
  41c8c8:	ldp	x19, x20, [sp, #16]
  41c8cc:	ldp	x29, x30, [sp], #48
  41c8d0:	ret
  41c8d4:	nop
  41c8d8:	stp	x29, x30, [sp, #-32]!
  41c8dc:	mov	x29, sp
  41c8e0:	stp	x19, x20, [sp, #16]
  41c8e4:	mov	x20, x0
  41c8e8:	mov	x0, #0x60                  	// #96
  41c8ec:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  41c8f0:	mov	x19, x0
  41c8f4:	cmp	x20, #0x0
  41c8f8:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  41c8fc:	add	x0, x0, #0x948
  41c900:	csel	x0, x0, x20, eq  // eq = none
  41c904:	bl	441170 <argp_parse@@Base+0xd288>
  41c908:	str	x0, [x19, #16]
  41c90c:	bl	403ff0 <strlen@plt>
  41c910:	mov	x1, x0
  41c914:	mov	x0, x19
  41c918:	str	x1, [x19, #24]
  41c91c:	ldp	x19, x20, [sp, #16]
  41c920:	ldp	x29, x30, [sp], #32
  41c924:	ret
  41c928:	stp	x29, x30, [sp, #-32]!
  41c92c:	mov	x29, sp
  41c930:	stp	x19, x20, [sp, #16]
  41c934:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41c938:	add	x19, x19, #0xa60
  41c93c:	ldr	w1, [x19, #8]
  41c940:	cbnz	w1, 41c9bc <wcrtomb@plt+0x17d9c>
  41c944:	bl	4359d0 <argp_parse@@Base+0x1ae8>
  41c948:	tst	w0, #0xff
  41c94c:	b.eq	41c9bc <wcrtomb@plt+0x17d9c>  // b.none
  41c950:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  41c954:	mov	w0, #0x1                   	// #1
  41c958:	str	w0, [x19, #12]
  41c95c:	ldr	x0, [x20, #952]
  41c960:	cbz	x0, 41c968 <wcrtomb@plt+0x17d48>
  41c964:	blr	x0
  41c968:	mov	w2, #0x5                   	// #5
  41c96c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41c970:	mov	x0, #0x0                   	// #0
  41c974:	add	x1, x1, #0x3d8
  41c978:	bl	4049c0 <dcgettext@plt>
  41c97c:	mov	x2, x0
  41c980:	mov	w1, #0x0                   	// #0
  41c984:	mov	w0, #0x0                   	// #0
  41c988:	bl	404050 <error@plt>
  41c98c:	ldr	x0, [x20, #952]
  41c990:	cbz	x0, 41c998 <wcrtomb@plt+0x17d78>
  41c994:	blr	x0
  41c998:	mov	w2, #0x5                   	// #5
  41c99c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41c9a0:	mov	x0, #0x0                   	// #0
  41c9a4:	add	x1, x1, #0x408
  41c9a8:	bl	4049c0 <dcgettext@plt>
  41c9ac:	mov	x2, x0
  41c9b0:	mov	w1, #0x0                   	// #0
  41c9b4:	mov	w0, #0x0                   	// #0
  41c9b8:	bl	404050 <error@plt>
  41c9bc:	ldr	w0, [x19, #12]
  41c9c0:	ldp	x19, x20, [sp, #16]
  41c9c4:	ldp	x29, x30, [sp], #32
  41c9c8:	ret
  41c9cc:	nop
  41c9d0:	ldr	x0, [x0, #88]
  41c9d4:	b	438708 <argp_parse@@Base+0x4820>
  41c9d8:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  41c9dc:	mov	x3, x0
  41c9e0:	ldr	x0, [x2, #704]
  41c9e4:	ldr	x4, [x3, #48]
  41c9e8:	ldr	x2, [x1, #48]
  41c9ec:	cbnz	x0, 41ca14 <wcrtomb@plt+0x17df4>
  41c9f0:	cmp	x2, #0x0
  41c9f4:	cset	w2, ne  // ne = any
  41c9f8:	cmp	x4, #0x0
  41c9fc:	cset	w0, ne  // ne = any
  41ca00:	subs	w0, w2, w0
  41ca04:	b.ne	41ca2c <wcrtomb@plt+0x17e0c>  // b.any
  41ca08:	ldr	x1, [x1, #16]
  41ca0c:	ldr	x0, [x3, #16]
  41ca10:	b	404710 <strcmp@plt>
  41ca14:	cmp	x0, x2
  41ca18:	cset	w2, ls  // ls = plast
  41ca1c:	cmp	x0, x4
  41ca20:	cset	w0, ls  // ls = plast
  41ca24:	subs	w0, w2, w0
  41ca28:	b.eq	41ca08 <wcrtomb@plt+0x17de8>  // b.none
  41ca2c:	ret
  41ca30:	stp	x29, x30, [sp, #-32]!
  41ca34:	mov	x29, sp
  41ca38:	str	x19, [sp, #16]
  41ca3c:	mov	x19, x0
  41ca40:	ldr	x0, [x0, #16]
  41ca44:	bl	4047b0 <free@plt>
  41ca48:	ldr	x0, [x19, #88]
  41ca4c:	bl	4047b0 <free@plt>
  41ca50:	mov	x0, x19
  41ca54:	ldr	x19, [sp, #16]
  41ca58:	ldp	x29, x30, [sp], #32
  41ca5c:	b	4047b0 <free@plt>
  41ca60:	stp	x29, x30, [sp, #-320]!
  41ca64:	mov	x29, sp
  41ca68:	stp	x19, x20, [sp, #16]
  41ca6c:	ldrb	w19, [x0]
  41ca70:	cbz	w19, 41cb60 <wcrtomb@plt+0x17f40>
  41ca74:	mov	x20, x0
  41ca78:	stp	x21, x22, [sp, #32]
  41ca7c:	mov	x22, x1
  41ca80:	mov	x21, x2
  41ca84:	bl	404740 <__ctype_b_loc@plt>
  41ca88:	ldr	x3, [x0]
  41ca8c:	b	41ca98 <wcrtomb@plt+0x17e78>
  41ca90:	ldrb	w19, [x20, #1]!
  41ca94:	cbz	w19, 41cb48 <wcrtomb@plt+0x17f28>
  41ca98:	ubfiz	x0, x19, #1, #8
  41ca9c:	ldrh	w0, [x3, x0]
  41caa0:	tbnz	w0, #13, 41ca90 <wcrtomb@plt+0x17e70>
  41caa4:	cmp	w19, #0x2d
  41caa8:	b.ne	41cb48 <wcrtomb@plt+0x17f28>  // b.any
  41caac:	mov	x3, #0x1                   	// #1
  41cab0:	mov	w2, #0xe46                 	// #3654
  41cab4:	add	x1, sp, #0x58
  41cab8:	mov	x0, x20
  41cabc:	movk	w2, #0x200, lsl #16
  41cac0:	str	x3, [sp, #104]
  41cac4:	bl	42f1f0 <wcrtomb@plt+0x2a5d0>
  41cac8:	mov	w19, w0
  41cacc:	cbnz	w0, 41cb68 <wcrtomb@plt+0x17f48>
  41cad0:	ldp	x2, x1, [sp, #88]
  41cad4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41cad8:	ldr	x3, [x21]
  41cadc:	mov	w5, #0x2                   	// #2
  41cae0:	ldr	x0, [x0, #3488]
  41cae4:	str	x0, [x1]
  41cae8:	ldr	x0, [sp, #104]
  41caec:	str	w5, [sp, #56]
  41caf0:	ldr	x4, [x22]
  41caf4:	add	w0, w2, w0
  41caf8:	add	x2, sp, #0x38
  41cafc:	stp	x4, x3, [sp, #64]
  41cb00:	bl	424e28 <wcrtomb@plt+0x20208>
  41cb04:	ldr	x0, [sp, #88]
  41cb08:	ldr	x2, [sp, #104]
  41cb0c:	adds	x2, x2, x0
  41cb10:	b.eq	41cb2c <wcrtomb@plt+0x17f0c>  // b.none
  41cb14:	ldr	x1, [sp, #96]
  41cb18:	add	x2, x1, x2, lsl #3
  41cb1c:	nop
  41cb20:	str	xzr, [x1], #8
  41cb24:	cmp	x2, x1
  41cb28:	b.ne	41cb20 <wcrtomb@plt+0x17f00>  // b.any
  41cb2c:	add	x0, sp, #0x58
  41cb30:	bl	42c108 <wcrtomb@plt+0x274e8>
  41cb34:	mov	w0, w19
  41cb38:	ldp	x19, x20, [sp, #16]
  41cb3c:	ldp	x21, x22, [sp, #32]
  41cb40:	ldp	x29, x30, [sp], #320
  41cb44:	ret
  41cb48:	ldp	x21, x22, [sp, #32]
  41cb4c:	mov	w19, #0x1                   	// #1
  41cb50:	mov	w0, w19
  41cb54:	ldp	x19, x20, [sp, #16]
  41cb58:	ldp	x29, x30, [sp], #320
  41cb5c:	ret
  41cb60:	mov	w19, #0x1                   	// #1
  41cb64:	b	41cb50 <wcrtomb@plt+0x17f30>
  41cb68:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41cb6c:	ldr	x0, [x0, #952]
  41cb70:	cbz	x0, 41cb78 <wcrtomb@plt+0x17f58>
  41cb74:	blr	x0
  41cb78:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  41cb7c:	add	x1, x1, #0x600
  41cb80:	mov	w2, #0x5                   	// #5
  41cb84:	mov	x0, #0x0                   	// #0
  41cb88:	bl	4049c0 <dcgettext@plt>
  41cb8c:	mov	x19, x0
  41cb90:	add	x0, sp, #0x58
  41cb94:	bl	42c1d8 <wcrtomb@plt+0x275b8>
  41cb98:	mov	x3, x20
  41cb9c:	mov	x4, x0
  41cba0:	mov	x2, x19
  41cba4:	mov	w1, #0x0                   	// #0
  41cba8:	mov	w0, #0x0                   	// #0
  41cbac:	bl	404050 <error@plt>
  41cbb0:	bl	40e770 <wcrtomb@plt+0x9b50>
  41cbb4:	nop
  41cbb8:	stp	x29, x30, [sp, #-32]!
  41cbbc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41cbc0:	mov	x29, sp
  41cbc4:	stp	x19, x20, [sp, #16]
  41cbc8:	ldr	x19, [x1, #2672]
  41cbcc:	cbz	x19, 41cc10 <wcrtomb@plt+0x17ff0>
  41cbd0:	mov	x20, x0
  41cbd4:	b	41cbe0 <wcrtomb@plt+0x17fc0>
  41cbd8:	ldr	x19, [x19]
  41cbdc:	cbz	x19, 41cc10 <wcrtomb@plt+0x17ff0>
  41cbe0:	ldr	x0, [x19, #16]
  41cbe4:	ldrb	w2, [x0]
  41cbe8:	cbz	w2, 41cbd8 <wcrtomb@plt+0x17fb8>
  41cbec:	ldr	w2, [x19, #32]
  41cbf0:	mov	x1, x20
  41cbf4:	bl	435bb8 <argp_parse@@Base+0x1cd0>
  41cbf8:	tst	w0, #0xff
  41cbfc:	b.eq	41cbd8 <wcrtomb@plt+0x17fb8>  // b.none
  41cc00:	mov	x0, x19
  41cc04:	ldp	x19, x20, [sp, #16]
  41cc08:	ldp	x29, x30, [sp], #32
  41cc0c:	ret
  41cc10:	mov	x19, #0x0                   	// #0
  41cc14:	mov	x0, x19
  41cc18:	ldp	x19, x20, [sp, #16]
  41cc1c:	ldp	x29, x30, [sp], #32
  41cc20:	ret
  41cc24:	nop
  41cc28:	stp	x29, x30, [sp, #-80]!
  41cc2c:	mov	x29, sp
  41cc30:	stp	x19, x20, [sp, #16]
  41cc34:	mov	x19, x0
  41cc38:	ldr	x0, [x0, #64]
  41cc3c:	stp	x23, x24, [sp, #48]
  41cc40:	mov	x24, x2
  41cc44:	stp	x21, x22, [sp, #32]
  41cc48:	mov	x22, x1
  41cc4c:	ldr	x23, [x0, #24]
  41cc50:	str	x25, [sp, #64]
  41cc54:	sub	x25, x2, x23
  41cc58:	ldr	x20, [x19, #24]
  41cc5c:	add	x20, x25, x20
  41cc60:	add	x0, x20, #0x1
  41cc64:	bl	440f48 <argp_parse@@Base+0xd060>
  41cc68:	mov	x1, x22
  41cc6c:	mov	x21, x0
  41cc70:	bl	404220 <stpcpy@plt>
  41cc74:	ldr	x1, [x19, #16]
  41cc78:	add	x1, x1, x23
  41cc7c:	bl	404910 <strcpy@plt>
  41cc80:	ldr	x0, [x19, #16]
  41cc84:	bl	4047b0 <free@plt>
  41cc88:	stp	x21, x20, [x19, #16]
  41cc8c:	mov	x4, x24
  41cc90:	ldp	x0, x1, [x19, #56]
  41cc94:	mov	x3, x22
  41cc98:	mov	x2, x23
  41cc9c:	ldr	x1, [x1, #16]
  41cca0:	bl	415d38 <wcrtomb@plt+0x11118>
  41cca4:	ldr	x19, [x19, #80]
  41cca8:	cbnz	x19, 41cc58 <wcrtomb@plt+0x18038>
  41ccac:	ldp	x19, x20, [sp, #16]
  41ccb0:	ldp	x21, x22, [sp, #32]
  41ccb4:	ldp	x23, x24, [sp, #48]
  41ccb8:	ldr	x25, [sp, #64]
  41ccbc:	ldp	x29, x30, [sp], #80
  41ccc0:	ret
  41ccc4:	nop
  41ccc8:	stp	x29, x30, [sp, #-32]!
  41cccc:	cmp	w0, #0x54
  41ccd0:	mov	x29, sp
  41ccd4:	stp	x19, x20, [sp, #16]
  41ccd8:	mov	x20, x1
  41ccdc:	b.eq	41cd80 <wcrtomb@plt+0x18160>  // b.none
  41cce0:	mov	w19, w0
  41cce4:	cmp	w0, #0x100
  41cce8:	b.eq	41cd50 <wcrtomb@plt+0x18130>  // b.none
  41ccec:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41ccf0:	cmp	w0, #0x43
  41ccf4:	add	x2, x2, #0x898
  41ccf8:	b.ne	41cd0c <wcrtomb@plt+0x180ec>  // b.any
  41ccfc:	b	41cd2c <wcrtomb@plt+0x1810c>
  41cd00:	add	x2, x2, #0x30
  41cd04:	cmp	w19, w0
  41cd08:	b.eq	41cdb8 <wcrtomb@plt+0x18198>  // b.none
  41cd0c:	ldr	x3, [x2]
  41cd10:	ldr	w0, [x2, #8]
  41cd14:	cbnz	x3, 41cd00 <wcrtomb@plt+0x180e0>
  41cd18:	cbnz	w0, 41cd00 <wcrtomb@plt+0x180e0>
  41cd1c:	ldr	x1, [x2, #32]
  41cd20:	cbnz	x1, 41cd00 <wcrtomb@plt+0x180e0>
  41cd24:	mov	w0, #0x7                   	// #7
  41cd28:	b	41cd44 <wcrtomb@plt+0x18124>
  41cd2c:	bl	41c6e0 <wcrtomb@plt+0x17ac0>
  41cd30:	mov	x1, x0
  41cd34:	mov	w2, #0x1                   	// #1
  41cd38:	mov	w0, #0x0                   	// #0
  41cd3c:	str	w2, [x1, #16]
  41cd40:	str	x20, [x1, #24]
  41cd44:	ldp	x19, x20, [sp, #16]
  41cd48:	ldp	x29, x30, [sp], #32
  41cd4c:	ret
  41cd50:	bl	41c6e0 <wcrtomb@plt+0x17ac0>
  41cd54:	mov	x1, x0
  41cd58:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41cd5c:	mov	w0, #0x0                   	// #0
  41cd60:	ldr	x2, [x3, #4048]
  41cd64:	str	wzr, [x1, #16]
  41cd68:	str	x20, [x1, #24]
  41cd6c:	add	x1, x2, #0x1
  41cd70:	str	x1, [x3, #4048]
  41cd74:	ldp	x19, x20, [sp, #16]
  41cd78:	ldp	x29, x30, [sp], #32
  41cd7c:	ret
  41cd80:	bl	41c6e0 <wcrtomb@plt+0x17ac0>
  41cd84:	mov	x1, x0
  41cd88:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41cd8c:	mov	w4, #0x2                   	// #2
  41cd90:	mov	w0, #0x0                   	// #0
  41cd94:	ldr	x2, [x3, #4048]
  41cd98:	str	w4, [x1, #16]
  41cd9c:	stp	x20, xzr, [x1, #24]
  41cda0:	add	x2, x2, #0x1
  41cda4:	str	xzr, [x1, #48]
  41cda8:	str	x2, [x3, #4048]
  41cdac:	ldp	x19, x20, [sp, #16]
  41cdb0:	ldp	x29, x30, [sp], #32
  41cdb4:	ret
  41cdb8:	bl	41c6e0 <wcrtomb@plt+0x17ac0>
  41cdbc:	mov	x1, x0
  41cdc0:	mov	w2, #0x4                   	// #4
  41cdc4:	mov	w0, #0x0                   	// #0
  41cdc8:	str	w2, [x1, #16]
  41cdcc:	str	w19, [x1, #24]
  41cdd0:	str	x20, [x1, #32]
  41cdd4:	ldp	x19, x20, [sp, #16]
  41cdd8:	ldp	x29, x30, [sp], #32
  41cddc:	ret
  41cde0:	stp	x29, x30, [sp, #-224]!
  41cde4:	mov	x29, sp
  41cde8:	stp	x21, x22, [sp, #32]
  41cdec:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41cdf0:	stp	x27, x28, [sp, #80]
  41cdf4:	ldr	x27, [x22, #2656]
  41cdf8:	stp	x23, x24, [sp, #48]
  41cdfc:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  41ce00:	mov	w23, w0
  41ce04:	add	x24, x24, #0x2bc
  41ce08:	stp	x19, x20, [sp, #16]
  41ce0c:	cbz	x27, 41d244 <wcrtomb@plt+0x18624>
  41ce10:	ldr	w0, [x27, #16]
  41ce14:	cmp	w0, #0x2
  41ce18:	b.eq	41cf48 <wcrtomb@plt+0x18328>  // b.none
  41ce1c:	b.hi	41ce48 <wcrtomb@plt+0x18228>  // b.pmore
  41ce20:	cbz	w0, 41ce9c <wcrtomb@plt+0x1827c>
  41ce24:	ldr	x21, [x27, #24]
  41ce28:	cbz	w23, 41cea0 <wcrtomb@plt+0x18280>
  41ce2c:	mov	x0, x21
  41ce30:	bl	441170 <argp_parse@@Base+0xd288>
  41ce34:	bl	41c080 <wcrtomb@plt+0x17460>
  41ce38:	bl	41bb88 <wcrtomb@plt+0x16f68>
  41ce3c:	bl	41c788 <wcrtomb@plt+0x17b68>
  41ce40:	ldr	x27, [x22, #2656]
  41ce44:	b	41ce0c <wcrtomb@plt+0x181ec>
  41ce48:	cmp	w0, #0x3
  41ce4c:	b.eq	41ce3c <wcrtomb@plt+0x1821c>  // b.none
  41ce50:	cmp	w0, #0x4
  41ce54:	b.ne	41ce0c <wcrtomb@plt+0x181ec>  // b.any
  41ce58:	ldr	w19, [x27, #24]
  41ce5c:	ldr	x21, [x27, #32]
  41ce60:	sub	w0, w19, #0x58
  41ce64:	cmp	w0, #0xc4
  41ce68:	b.ls	41d08c <wcrtomb@plt+0x1846c>  // b.plast
  41ce6c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41ce70:	stp	x25, x26, [sp, #64]
  41ce74:	ldr	x0, [x0, #952]
  41ce78:	cbz	x0, 41ce80 <wcrtomb@plt+0x18260>
  41ce7c:	blr	x0
  41ce80:	mov	w3, w19
  41ce84:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x13e10>
  41ce88:	add	x2, x2, #0x4e0
  41ce8c:	mov	w1, #0x0                   	// #0
  41ce90:	mov	w0, #0x0                   	// #0
  41ce94:	bl	404050 <error@plt>
  41ce98:	bl	40e770 <wcrtomb@plt+0x9b50>
  41ce9c:	ldr	x21, [x27, #24]
  41cea0:	add	x20, x22, #0xa60
  41cea4:	mov	x0, x21
  41cea8:	bl	403ff0 <strlen@plt>
  41ceac:	ldr	x2, [x20, #104]
  41ceb0:	cmp	x0, x2
  41ceb4:	b.ls	41d0a4 <wcrtomb@plt+0x18484>  // b.plast
  41ceb8:	stp	x25, x26, [sp, #64]
  41cebc:	nop
  41cec0:	lsl	x2, x2, #1
  41cec4:	cbz	x2, 41d8dc <wcrtomb@plt+0x18cbc>
  41cec8:	cmp	x0, x2
  41cecc:	b.hi	41cec0 <wcrtomb@plt+0x182a0>  // b.pmore
  41ced0:	ldr	x0, [x20, #96]
  41ced4:	str	x2, [x20, #104]
  41ced8:	bl	4047b0 <free@plt>
  41cedc:	ldr	x0, [x20, #104]
  41cee0:	add	x0, x0, #0x2
  41cee4:	bl	440f48 <argp_parse@@Base+0xd060>
  41cee8:	mov	x1, x21
  41ceec:	mov	x19, x0
  41cef0:	ldp	x25, x26, [sp, #64]
  41cef4:	str	x0, [x20, #96]
  41cef8:	mov	x0, x19
  41cefc:	bl	404910 <strcpy@plt>
  41cf00:	mov	x0, x19
  41cf04:	bl	41c838 <wcrtomb@plt+0x17c18>
  41cf08:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41cf0c:	ldrb	w0, [x0, #700]
  41cf10:	cbnz	w0, 41d0c8 <wcrtomb@plt+0x184a8>
  41cf14:	ldr	w0, [x27, #16]
  41cf18:	add	x20, x20, #0x18
  41cf1c:	mov	x27, x20
  41cf20:	str	w0, [x20, #16]
  41cf24:	str	x19, [x20, #24]
  41cf28:	bl	41c788 <wcrtomb@plt+0x17b68>
  41cf2c:	mov	x0, x27
  41cf30:	ldp	x19, x20, [sp, #16]
  41cf34:	ldp	x21, x22, [sp, #32]
  41cf38:	ldp	x23, x24, [sp, #48]
  41cf3c:	ldp	x27, x28, [sp, #80]
  41cf40:	ldp	x29, x30, [sp], #224
  41cf44:	ret
  41cf48:	ldr	x28, [x27, #48]
  41cf4c:	stp	x25, x26, [sp, #64]
  41cf50:	cbz	x28, 41d158 <wcrtomb@plt+0x18538>
  41cf54:	ldr	w26, [x27, #40]
  41cf58:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41cf5c:	add	x20, x20, #0xa60
  41cf60:	ldp	x1, x4, [x28, #8]
  41cf64:	add	x25, x20, #0x68
  41cf68:	ldr	x0, [x27, #32]
  41cf6c:	add	x0, x0, #0x1
  41cf70:	str	x0, [x27, #32]
  41cf74:	cmp	x1, x4
  41cf78:	b.cs	41d1b4 <wcrtomb@plt+0x18594>  // b.hs, b.nlast
  41cf7c:	add	x3, x1, #0x1
  41cf80:	str	x3, [x28, #8]
  41cf84:	ldrb	w21, [x1]
  41cf88:	cmp	w21, w26
  41cf8c:	b.eq	41d518 <wcrtomb@plt+0x188f8>  // b.none
  41cf90:	mov	x19, #0x0                   	// #0
  41cf94:	b	41cfcc <wcrtomb@plt+0x183ac>
  41cf98:	strb	w21, [x0, x19]
  41cf9c:	add	x19, x19, #0x1
  41cfa0:	cbz	w21, 41cff0 <wcrtomb@plt+0x183d0>
  41cfa4:	ldp	x0, x1, [x28, #8]
  41cfa8:	cmp	x0, x1
  41cfac:	b.cs	41d0d8 <wcrtomb@plt+0x184b8>  // b.hs, b.nlast
  41cfb0:	add	x1, x0, #0x1
  41cfb4:	str	x1, [x28, #8]
  41cfb8:	mov	w1, #0x1                   	// #1
  41cfbc:	cmp	w1, #0x0
  41cfc0:	ldrb	w21, [x0]
  41cfc4:	ccmp	w21, w26, #0x4, ne  // ne = any
  41cfc8:	b.eq	41d0f8 <wcrtomb@plt+0x184d8>  // b.none
  41cfcc:	ldp	x0, x1, [x20, #96]
  41cfd0:	cmp	x1, x19
  41cfd4:	b.ne	41cf98 <wcrtomb@plt+0x18378>  // b.any
  41cfd8:	mov	x1, x25
  41cfdc:	bl	441090 <argp_parse@@Base+0xd1a8>
  41cfe0:	strb	w21, [x0, x19]
  41cfe4:	add	x19, x19, #0x1
  41cfe8:	str	x0, [x20, #96]
  41cfec:	cbnz	w21, 41cfa4 <wcrtomb@plt+0x18384>
  41cff0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41cff4:	ldr	w0, [x0, #408]
  41cff8:	tbz	w0, #9, 41d02c <wcrtomb@plt+0x1840c>
  41cffc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41d000:	ldr	x0, [x0, #952]
  41d004:	cbz	x0, 41d00c <wcrtomb@plt+0x183ec>
  41d008:	blr	x0
  41d00c:	ldr	x0, [x27, #24]
  41d010:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41d014:	mov	x3, x0
  41d018:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d01c:	mov	w1, #0x0                   	// #0
  41d020:	add	x2, x2, #0x4b0
  41d024:	mov	w0, #0x0                   	// #0
  41d028:	bl	404050 <error@plt>
  41d02c:	ldr	x25, [x20, #96]
  41d030:	str	wzr, [x27, #40]
  41d034:	ldrb	w0, [x27, #44]
  41d038:	cbnz	w0, 41d05c <wcrtomb@plt+0x1843c>
  41d03c:	ldrb	w0, [x24]
  41d040:	cbnz	w0, 41d4f4 <wcrtomb@plt+0x188d4>
  41d044:	mov	x0, x25
  41d048:	add	x2, x27, #0x20
  41d04c:	add	x1, x27, #0x18
  41d050:	bl	41ca60 <wcrtomb@plt+0x17e40>
  41d054:	cbz	w0, 41d238 <wcrtomb@plt+0x18618>
  41d058:	ldr	x25, [x20, #96]
  41d05c:	add	x20, x20, #0x18
  41d060:	str	wzr, [x20, #16]
  41d064:	mov	x27, x20
  41d068:	str	x25, [x20, #24]
  41d06c:	mov	x0, x27
  41d070:	ldp	x19, x20, [sp, #16]
  41d074:	ldp	x21, x22, [sp, #32]
  41d078:	ldp	x23, x24, [sp, #48]
  41d07c:	ldp	x25, x26, [sp, #64]
  41d080:	ldp	x27, x28, [sp, #80]
  41d084:	ldp	x29, x30, [sp], #224
  41d088:	ret
  41d08c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  41d090:	add	x1, x1, #0xc8
  41d094:	ldrh	w0, [x1, w0, uxtw #1]
  41d098:	adr	x1, 41d0a4 <wcrtomb@plt+0x18484>
  41d09c:	add	x0, x1, w0, sxth #2
  41d0a0:	br	x0
  41d0a4:	ldr	x19, [x20, #96]
  41d0a8:	mov	x1, x21
  41d0ac:	mov	x0, x19
  41d0b0:	bl	404910 <strcpy@plt>
  41d0b4:	mov	x0, x19
  41d0b8:	bl	41c838 <wcrtomb@plt+0x17c18>
  41d0bc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41d0c0:	ldrb	w0, [x0, #700]
  41d0c4:	cbz	w0, 41cf14 <wcrtomb@plt+0x182f4>
  41d0c8:	mov	x0, x19
  41d0cc:	bl	41aba0 <wcrtomb@plt+0x15f80>
  41d0d0:	ldr	x19, [x20, #96]
  41d0d4:	b	41cf14 <wcrtomb@plt+0x182f4>
  41d0d8:	mov	x0, x28
  41d0dc:	bl	404b90 <__uflow@plt>
  41d0e0:	cmn	w0, #0x1
  41d0e4:	mov	w21, w0
  41d0e8:	cset	w1, ne  // ne = any
  41d0ec:	cmp	w1, #0x0
  41d0f0:	ccmp	w21, w26, #0x4, ne  // ne = any
  41d0f4:	b.ne	41cfcc <wcrtomb@plt+0x183ac>  // b.any
  41d0f8:	cmp	x19, #0x0
  41d0fc:	csel	w1, w1, wzr, eq  // eq = none
  41d100:	cset	w28, eq  // eq = none
  41d104:	cbnz	w1, 41d504 <wcrtomb@plt+0x188e4>
  41d108:	ldp	x25, x0, [x20, #96]
  41d10c:	cmp	x19, x0
  41d110:	b.eq	41d220 <wcrtomb@plt+0x18600>  // b.none
  41d114:	strb	wzr, [x25, x19]
  41d118:	mov	x0, x25
  41d11c:	bl	41c838 <wcrtomb@plt+0x17c18>
  41d120:	cmp	w28, #0x0
  41d124:	ccmn	w21, #0x1, #0x0, ne  // ne = any
  41d128:	b.ne	41d034 <wcrtomb@plt+0x18414>  // b.any
  41d12c:	ldr	x0, [x27, #24]
  41d130:	ldrb	w1, [x0]
  41d134:	cmp	w1, #0x2d
  41d138:	b.ne	41d1a8 <wcrtomb@plt+0x18588>  // b.any
  41d13c:	ldrb	w0, [x0, #1]
  41d140:	cbnz	w0, 41d1a8 <wcrtomb@plt+0x18588>
  41d144:	str	xzr, [x27, #48]
  41d148:	bl	41c788 <wcrtomb@plt+0x17b68>
  41d14c:	ldr	x27, [x20]
  41d150:	ldp	x25, x26, [sp, #64]
  41d154:	b	41ce0c <wcrtomb@plt+0x181ec>
  41d158:	ldr	x25, [x27, #24]
  41d15c:	ldrb	w0, [x25]
  41d160:	cmp	w0, #0x2d
  41d164:	b.ne	41d1e0 <wcrtomb@plt+0x185c0>  // b.any
  41d168:	ldrb	w0, [x25, #1]
  41d16c:	cbnz	w0, 41d1e0 <wcrtomb@plt+0x185c0>
  41d170:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d174:	add	x0, x0, #0x460
  41d178:	bl	4232b8 <wcrtomb@plt+0x1e698>
  41d17c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d180:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d184:	add	x20, x20, #0xa60
  41d188:	ldr	x28, [x0, #1112]
  41d18c:	str	x28, [x27, #48]
  41d190:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41d194:	ldrb	w1, [x20, #88]
  41d198:	strb	w1, [x27, #44]
  41d19c:	ldrb	w26, [x0, #3880]
  41d1a0:	str	w26, [x27, #40]
  41d1a4:	b	41cf60 <wcrtomb@plt+0x18340>
  41d1a8:	ldr	x0, [x27, #48]
  41d1ac:	bl	4042a0 <fclose@plt>
  41d1b0:	b	41d144 <wcrtomb@plt+0x18524>
  41d1b4:	mov	x0, x28
  41d1b8:	bl	404b90 <__uflow@plt>
  41d1bc:	cmn	w0, #0x1
  41d1c0:	mov	w21, w0
  41d1c4:	cset	w1, ne  // ne = any
  41d1c8:	cmp	w1, #0x0
  41d1cc:	ccmp	w0, w26, #0x4, ne  // ne = any
  41d1d0:	b.ne	41cf90 <wcrtomb@plt+0x18370>  // b.any
  41d1d4:	mov	w28, #0x1                   	// #1
  41d1d8:	mov	x19, #0x0                   	// #0
  41d1dc:	b	41d104 <wcrtomb@plt+0x184e4>
  41d1e0:	add	x2, sp, #0x60
  41d1e4:	mov	x1, x25
  41d1e8:	mov	w0, #0x0                   	// #0
  41d1ec:	bl	404b10 <__xstat@plt>
  41d1f0:	cbnz	w0, 41d8e4 <wcrtomb@plt+0x18cc4>
  41d1f4:	mov	x0, x27
  41d1f8:	b	41d204 <wcrtomb@plt+0x185e4>
  41d1fc:	ldr	x0, [x0]
  41d200:	cbz	x0, 41d3d4 <wcrtomb@plt+0x187b4>
  41d204:	ldr	w1, [x0, #16]
  41d208:	cmp	w1, #0x2
  41d20c:	b.ne	41d1fc <wcrtomb@plt+0x185dc>  // b.any
  41d210:	ldr	x1, [x0, #48]
  41d214:	cbz	x1, 41d1fc <wcrtomb@plt+0x185dc>
  41d218:	ldr	x21, [x0, #24]
  41d21c:	b	41d3e8 <wcrtomb@plt+0x187c8>
  41d220:	mov	x0, x25
  41d224:	add	x1, x20, #0x68
  41d228:	bl	441090 <argp_parse@@Base+0xd1a8>
  41d22c:	mov	x25, x0
  41d230:	str	x0, [x20, #96]
  41d234:	b	41d114 <wcrtomb@plt+0x184f4>
  41d238:	ldr	x27, [x20]
  41d23c:	cbnz	x27, 41d520 <wcrtomb@plt+0x18900>
  41d240:	ldp	x25, x26, [sp, #64]
  41d244:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d248:	ldr	x0, [x23, #4064]
  41d24c:	cbz	x0, 41cf2c <wcrtomb@plt+0x1830c>
  41d250:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  41d254:	stp	x25, x26, [sp, #64]
  41d258:	ldr	x0, [x21, #952]
  41d25c:	cbz	x0, 41d264 <wcrtomb@plt+0x18644>
  41d260:	blr	x0
  41d264:	mov	w2, #0x5                   	// #5
  41d268:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d26c:	mov	x0, #0x0                   	// #0
  41d270:	add	x1, x1, #0x500
  41d274:	bl	4049c0 <dcgettext@plt>
  41d278:	mov	x2, x0
  41d27c:	mov	w1, #0x0                   	// #0
  41d280:	mov	w0, #0x0                   	// #0
  41d284:	bl	404050 <error@plt>
  41d288:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d28c:	ldr	x0, [x23, #4064]
  41d290:	mov	w1, #0x2                   	// #2
  41d294:	str	w1, [x20, #3400]
  41d298:	mov	x25, x0
  41d29c:	ldr	x0, [x0, #8]
  41d2a0:	cbnz	x0, 41d298 <wcrtomb@plt+0x18678>
  41d2a4:	adrp	x22, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d2a8:	adrp	x24, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d2ac:	add	x22, x22, #0x5d0
  41d2b0:	add	x24, x24, #0x600
  41d2b4:	nop
  41d2b8:	ldr	w0, [x25, #16]
  41d2bc:	cmp	w0, #0x1
  41d2c0:	b.eq	41d38c <wcrtomb@plt+0x1876c>  // b.none
  41d2c4:	cmp	w0, #0x4
  41d2c8:	b.ne	41d358 <wcrtomb@plt+0x18738>  // b.any
  41d2cc:	ldr	x1, [x25, #32]
  41d2d0:	ldr	x0, [x21, #952]
  41d2d4:	cbz	x1, 41d880 <wcrtomb@plt+0x18c60>
  41d2d8:	cbz	x0, 41d2e0 <wcrtomb@plt+0x186c0>
  41d2dc:	blr	x0
  41d2e0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d2e4:	mov	w2, #0x5                   	// #5
  41d2e8:	add	x1, x1, #0x5e8
  41d2ec:	mov	x0, #0x0                   	// #0
  41d2f0:	bl	4049c0 <dcgettext@plt>
  41d2f4:	mov	x26, x0
  41d2f8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41d2fc:	ldr	w3, [x25, #24]
  41d300:	add	x1, x1, #0x898
  41d304:	b	41d314 <wcrtomb@plt+0x186f4>
  41d308:	cmp	w3, w4
  41d30c:	b.eq	41d330 <wcrtomb@plt+0x18710>  // b.none
  41d310:	add	x1, x1, #0x30
  41d314:	ldr	x19, [x1]
  41d318:	ldr	w4, [x1, #8]
  41d31c:	cbnz	x19, 41d308 <wcrtomb@plt+0x186e8>
  41d320:	cbnz	w4, 41d308 <wcrtomb@plt+0x186e8>
  41d324:	ldr	x5, [x1, #32]
  41d328:	cbnz	x5, 41d308 <wcrtomb@plt+0x186e8>
  41d32c:	nop
  41d330:	ldr	x0, [x25, #32]
  41d334:	bl	440248 <argp_parse@@Base+0xc360>
  41d338:	mov	x4, x0
  41d33c:	mov	x3, x19
  41d340:	mov	w0, #0x0                   	// #0
  41d344:	mov	x2, x26
  41d348:	mov	w1, #0x0                   	// #0
  41d34c:	bl	404050 <error@plt>
  41d350:	mov	w0, #0x2                   	// #2
  41d354:	str	w0, [x20, #3400]
  41d358:	ldr	x25, [x25]
  41d35c:	cbnz	x25, 41d2b8 <wcrtomb@plt+0x18698>
  41d360:	ldr	x0, [x23, #4064]
  41d364:	cbz	x0, 41d384 <wcrtomb@plt+0x18764>
  41d368:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d36c:	add	x19, x19, #0xfe0
  41d370:	ldr	x1, [x0, #8]
  41d374:	str	x1, [x19]
  41d378:	bl	4047b0 <free@plt>
  41d37c:	ldr	x0, [x19]
  41d380:	cbnz	x0, 41d370 <wcrtomb@plt+0x18750>
  41d384:	ldp	x25, x26, [sp, #64]
  41d388:	b	41cf2c <wcrtomb@plt+0x1830c>
  41d38c:	ldr	x0, [x21, #952]
  41d390:	cbz	x0, 41d398 <wcrtomb@plt+0x18778>
  41d394:	blr	x0
  41d398:	mov	w2, #0x5                   	// #5
  41d39c:	mov	x1, x22
  41d3a0:	mov	x0, #0x0                   	// #0
  41d3a4:	bl	4049c0 <dcgettext@plt>
  41d3a8:	mov	x19, x0
  41d3ac:	ldr	x0, [x25, #24]
  41d3b0:	bl	440248 <argp_parse@@Base+0xc360>
  41d3b4:	mov	x3, x0
  41d3b8:	mov	x2, x19
  41d3bc:	mov	w0, #0x0                   	// #0
  41d3c0:	mov	w1, #0x0                   	// #0
  41d3c4:	bl	404050 <error@plt>
  41d3c8:	mov	w0, #0x2                   	// #2
  41d3cc:	str	w0, [x20, #3400]
  41d3d0:	b	41d358 <wcrtomb@plt+0x18738>
  41d3d4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d3d8:	mov	w2, #0x5                   	// #5
  41d3dc:	add	x1, x1, #0x468
  41d3e0:	bl	4049c0 <dcgettext@plt>
  41d3e4:	mov	x21, x0
  41d3e8:	add	x20, x22, #0xa60
  41d3ec:	ldr	x19, [x20, #80]
  41d3f0:	cbz	x19, 41d4ac <wcrtomb@plt+0x1888c>
  41d3f4:	ldp	x3, x2, [sp, #96]
  41d3f8:	b	41d404 <wcrtomb@plt+0x187e4>
  41d3fc:	ldr	x19, [x19]
  41d400:	cbz	x19, 41d4ac <wcrtomb@plt+0x1888c>
  41d404:	ldr	x1, [x19, #8]
  41d408:	cmp	x1, x2
  41d40c:	b.ne	41d3fc <wcrtomb@plt+0x187dc>  // b.any
  41d410:	ldr	x0, [x19, #16]
  41d414:	cmp	x0, x3
  41d418:	b.ne	41d3fc <wcrtomb@plt+0x187dc>  // b.any
  41d41c:	mov	w1, #0x3a                  	// #58
  41d420:	mov	w2, #0x1                   	// #1
  41d424:	mov	x0, #0x0                   	// #0
  41d428:	bl	43fc28 <argp_parse@@Base+0xbd40>
  41d42c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41d430:	mov	w27, w0
  41d434:	ldr	x0, [x1, #952]
  41d438:	cbz	x0, 41d440 <wcrtomb@plt+0x18820>
  41d43c:	blr	x0
  41d440:	mov	w2, #0x5                   	// #5
  41d444:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d448:	mov	x0, #0x0                   	// #0
  41d44c:	add	x1, x1, #0x478
  41d450:	bl	4049c0 <dcgettext@plt>
  41d454:	mov	x20, x0
  41d458:	mov	x1, x25
  41d45c:	mov	w0, #0x0                   	// #0
  41d460:	bl	43ff08 <argp_parse@@Base+0xc020>
  41d464:	mov	x3, x0
  41d468:	ldr	x5, [x19, #24]
  41d46c:	mov	x2, x20
  41d470:	mov	x4, x21
  41d474:	mov	w1, #0x0                   	// #0
  41d478:	mov	w0, #0x0                   	// #0
  41d47c:	bl	404050 <error@plt>
  41d480:	mov	w2, w27
  41d484:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d488:	mov	w4, #0x2                   	// #2
  41d48c:	mov	w1, #0x3a                  	// #58
  41d490:	str	w4, [x3, #3400]
  41d494:	mov	x0, #0x0                   	// #0
  41d498:	bl	43fc28 <argp_parse@@Base+0xbd40>
  41d49c:	bl	41c788 <wcrtomb@plt+0x17b68>
  41d4a0:	ldr	x27, [x22, #2656]
  41d4a4:	ldp	x25, x26, [sp, #64]
  41d4a8:	b	41ce0c <wcrtomb@plt+0x181ec>
  41d4ac:	mov	x0, #0x20                  	// #32
  41d4b0:	bl	440f48 <argp_parse@@Base+0xd060>
  41d4b4:	mov	x2, x0
  41d4b8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  41d4bc:	ldp	x3, x4, [sp, #96]
  41d4c0:	add	x1, x1, #0xf28
  41d4c4:	ldr	x0, [x27, #24]
  41d4c8:	stp	x4, x3, [x2, #8]
  41d4cc:	ldr	x4, [x20, #80]
  41d4d0:	str	x4, [x2]
  41d4d4:	str	x21, [x2, #24]
  41d4d8:	str	x2, [x20, #80]
  41d4dc:	bl	4042e0 <fopen@plt>
  41d4e0:	str	x0, [x27, #48]
  41d4e4:	mov	x28, x0
  41d4e8:	cbnz	x0, 41d190 <wcrtomb@plt+0x18570>
  41d4ec:	ldr	x0, [x27, #24]
  41d4f0:	bl	429df8 <wcrtomb@plt+0x251d8>
  41d4f4:	mov	x0, x25
  41d4f8:	bl	41aba0 <wcrtomb@plt+0x15f80>
  41d4fc:	ldr	x25, [x20, #96]
  41d500:	b	41d044 <wcrtomb@plt+0x18424>
  41d504:	ldr	x28, [x27, #48]
  41d508:	ldr	w26, [x27, #40]
  41d50c:	ldr	x0, [x27, #32]
  41d510:	ldp	x1, x4, [x28, #8]
  41d514:	b	41cf6c <wcrtomb@plt+0x1834c>
  41d518:	mov	x1, x3
  41d51c:	b	41cf6c <wcrtomb@plt+0x1834c>
  41d520:	ldr	x0, [x27, #8]
  41d524:	cbz	x0, 41d8d4 <wcrtomb@plt+0x18cb4>
  41d528:	mov	x27, x0
  41d52c:	ldr	x0, [x0, #8]
  41d530:	cbnz	x0, 41d528 <wcrtomb@plt+0x18908>
  41d534:	ldp	x25, x26, [sp, #64]
  41d538:	str	x27, [x20]
  41d53c:	b	41ce0c <wcrtomb@plt+0x181ec>
  41d540:	add	x20, x22, #0xa60
  41d544:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  41d548:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41d54c:	mov	x1, x21
  41d550:	ldr	w4, [x3, #620]
  41d554:	ldr	w2, [x20, #8]
  41d558:	ldr	x0, [x0, #8]
  41d55c:	cmp	w2, #0x1
  41d560:	cset	w3, ne  // ne = any
  41d564:	ldr	w2, [x20, #112]
  41d568:	orr	w2, w2, w4
  41d56c:	orr	w2, w2, w3, lsl #28
  41d570:	bl	435e28 <argp_parse@@Base+0x1f40>
  41d574:	nop
  41d578:	bl	41c788 <wcrtomb@plt+0x17b68>
  41d57c:	ldr	x27, [x20]
  41d580:	b	41ce0c <wcrtomb@plt+0x181ec>
  41d584:	mov	x0, x21
  41d588:	mov	w1, #0x2                   	// #2
  41d58c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d590:	bl	40eba0 <wcrtomb@plt+0x9f80>
  41d594:	add	x20, x20, #0xa60
  41d598:	b	41d578 <wcrtomb@plt+0x18958>
  41d59c:	mov	x0, x21
  41d5a0:	mov	w1, #0x1                   	// #1
  41d5a4:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d5a8:	bl	40eba0 <wcrtomb@plt+0x9f80>
  41d5ac:	add	x20, x20, #0xa60
  41d5b0:	b	41d578 <wcrtomb@plt+0x18958>
  41d5b4:	mov	x0, x21
  41d5b8:	mov	x2, #0x0                   	// #0
  41d5bc:	mov	w1, #0x1                   	// #1
  41d5c0:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d5c4:	bl	40b250 <wcrtomb@plt+0x6630>
  41d5c8:	add	x20, x20, #0xa60
  41d5cc:	b	41d578 <wcrtomb@plt+0x18958>
  41d5d0:	mov	x0, x21
  41d5d4:	mov	x2, #0x0                   	// #0
  41d5d8:	mov	w1, #0x2                   	// #2
  41d5dc:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d5e0:	bl	40b250 <wcrtomb@plt+0x6630>
  41d5e4:	add	x20, x20, #0xa60
  41d5e8:	b	41d578 <wcrtomb@plt+0x18958>
  41d5ec:	mov	x0, x21
  41d5f0:	mov	x2, #0x0                   	// #0
  41d5f4:	mov	w1, #0x3                   	// #3
  41d5f8:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d5fc:	bl	40b250 <wcrtomb@plt+0x6630>
  41d600:	add	x20, x20, #0xa60
  41d604:	b	41d578 <wcrtomb@plt+0x18958>
  41d608:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  41d60c:	add	x0, x0, #0x258
  41d610:	add	x0, x0, #0x20
  41d614:	mov	w1, #0x0                   	// #0
  41d618:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d61c:	bl	41c888 <wcrtomb@plt+0x17c68>
  41d620:	add	x20, x20, #0xa60
  41d624:	b	41d578 <wcrtomb@plt+0x18958>
  41d628:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d62c:	bl	40efb0 <wcrtomb@plt+0xa390>
  41d630:	add	x20, x20, #0xa60
  41d634:	b	41d578 <wcrtomb@plt+0x18958>
  41d638:	add	x20, x22, #0xa60
  41d63c:	ldr	w0, [x20, #112]
  41d640:	orr	w0, w0, #0x10
  41d644:	str	w0, [x20, #112]
  41d648:	b	41d578 <wcrtomb@plt+0x18958>
  41d64c:	add	x20, x22, #0xa60
  41d650:	ldr	w0, [x20, #112]
  41d654:	and	w0, w0, #0xffffffef
  41d658:	str	w0, [x20, #112]
  41d65c:	b	41d578 <wcrtomb@plt+0x18958>
  41d660:	add	x20, x22, #0xa60
  41d664:	ldr	w0, [x20, #112]
  41d668:	orr	w0, w0, #0x40000000
  41d66c:	str	w0, [x20, #112]
  41d670:	b	41d578 <wcrtomb@plt+0x18958>
  41d674:	add	x20, x22, #0xa60
  41d678:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41d67c:	str	wzr, [x0, #3884]
  41d680:	ldr	w0, [x20, #112]
  41d684:	and	w0, w0, #0xbfffffff
  41d688:	str	w0, [x20, #112]
  41d68c:	b	41d578 <wcrtomb@plt+0x18958>
  41d690:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41d694:	mov	w1, #0x8                   	// #8
  41d698:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d69c:	add	x20, x20, #0xa60
  41d6a0:	str	w1, [x0, #620]
  41d6a4:	b	41d578 <wcrtomb@plt+0x18958>
  41d6a8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41d6ac:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d6b0:	add	x20, x20, #0xa60
  41d6b4:	str	wzr, [x0, #620]
  41d6b8:	b	41d578 <wcrtomb@plt+0x18958>
  41d6bc:	add	x20, x22, #0xa60
  41d6c0:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  41d6c4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41d6c8:	adrp	x0, 435000 <argp_parse@@Base+0x1118>
  41d6cc:	ldr	w6, [x2, #620]
  41d6d0:	add	x0, x0, #0xe28
  41d6d4:	ldr	w3, [x20, #8]
  41d6d8:	mov	x2, x21
  41d6dc:	ldr	x1, [x1, #8]
  41d6e0:	cmp	w3, #0x1
  41d6e4:	cset	w5, ne  // ne = any
  41d6e8:	ldr	w3, [x20, #112]
  41d6ec:	mov	w4, #0xa                   	// #10
  41d6f0:	orr	w3, w3, w6
  41d6f4:	orr	w3, w3, w5, lsl #28
  41d6f8:	bl	436348 <argp_parse@@Base+0x2460>
  41d6fc:	cbz	w0, 41d578 <wcrtomb@plt+0x18958>
  41d700:	stp	x25, x26, [sp, #64]
  41d704:	bl	404ad0 <__errno_location@plt>
  41d708:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41d70c:	ldr	w19, [x0]
  41d710:	ldr	x1, [x1, #952]
  41d714:	cbz	x1, 41d71c <wcrtomb@plt+0x18afc>
  41d718:	blr	x1
  41d71c:	mov	x0, x21
  41d720:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41d724:	mov	w1, w19
  41d728:	mov	x3, x0
  41d72c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  41d730:	add	x2, x2, #0xb68
  41d734:	mov	w0, #0x0                   	// #0
  41d738:	bl	404050 <error@plt>
  41d73c:	bl	40e770 <wcrtomb@plt+0x9b50>
  41d740:	adrp	x2, 40b000 <wcrtomb@plt+0x63e0>
  41d744:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d748:	add	x2, x2, #0x368
  41d74c:	add	x0, x0, #0xb88
  41d750:	mov	w1, #0x2                   	// #2
  41d754:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d758:	bl	40b250 <wcrtomb@plt+0x6630>
  41d75c:	add	x20, x20, #0xa60
  41d760:	b	41d578 <wcrtomb@plt+0x18958>
  41d764:	adrp	x2, 40b000 <wcrtomb@plt+0x63e0>
  41d768:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d76c:	add	x2, x2, #0x368
  41d770:	add	x0, x0, #0xb88
  41d774:	mov	w1, #0x3                   	// #3
  41d778:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d77c:	bl	40b250 <wcrtomb@plt+0x6630>
  41d780:	add	x20, x20, #0xa60
  41d784:	b	41d578 <wcrtomb@plt+0x18958>
  41d788:	add	x20, x22, #0xa60
  41d78c:	ldr	w0, [x20, #112]
  41d790:	and	w0, w0, #0xfffffffe
  41d794:	str	w0, [x20, #112]
  41d798:	b	41d578 <wcrtomb@plt+0x18958>
  41d79c:	add	x20, x22, #0xa60
  41d7a0:	mov	w0, #0x2                   	// #2
  41d7a4:	str	w0, [x20, #8]
  41d7a8:	b	41d578 <wcrtomb@plt+0x18958>
  41d7ac:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  41d7b0:	mov	w1, #0x10000000            	// #268435456
  41d7b4:	add	x0, x0, #0x258
  41d7b8:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d7bc:	bl	41c888 <wcrtomb@plt+0x17c68>
  41d7c0:	add	x20, x20, #0xa60
  41d7c4:	b	41d578 <wcrtomb@plt+0x18958>
  41d7c8:	adrp	x2, 40b000 <wcrtomb@plt+0x63e0>
  41d7cc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x13e10>
  41d7d0:	add	x2, x2, #0x368
  41d7d4:	add	x0, x0, #0xb88
  41d7d8:	mov	w1, #0x1                   	// #1
  41d7dc:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d7e0:	bl	40b250 <wcrtomb@plt+0x6630>
  41d7e4:	add	x20, x20, #0xa60
  41d7e8:	b	41d578 <wcrtomb@plt+0x18958>
  41d7ec:	mov	w0, #0x1                   	// #1
  41d7f0:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d7f4:	add	x20, x20, #0xa60
  41d7f8:	strb	w0, [x24]
  41d7fc:	b	41d578 <wcrtomb@plt+0x18958>
  41d800:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d804:	add	x20, x20, #0xa60
  41d808:	strb	wzr, [x24]
  41d80c:	b	41d578 <wcrtomb@plt+0x18958>
  41d810:	add	x20, x22, #0xa60
  41d814:	strb	wzr, [x20, #88]
  41d818:	b	41d578 <wcrtomb@plt+0x18958>
  41d81c:	add	x20, x22, #0xa60
  41d820:	ldr	w0, [x20, #112]
  41d824:	orr	w0, w0, #0x1
  41d828:	str	w0, [x20, #112]
  41d82c:	b	41d578 <wcrtomb@plt+0x18958>
  41d830:	add	x20, x22, #0xa60
  41d834:	mov	w0, #0x1                   	// #1
  41d838:	str	w0, [x20, #8]
  41d83c:	b	41d578 <wcrtomb@plt+0x18958>
  41d840:	add	x20, x22, #0xa60
  41d844:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41d848:	mov	w1, #0x1                   	// #1
  41d84c:	strb	wzr, [x0, #3880]
  41d850:	strb	w1, [x20, #88]
  41d854:	b	41d578 <wcrtomb@plt+0x18958>
  41d858:	add	x20, x22, #0xa60
  41d85c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41d860:	mov	w1, #0xa                   	// #10
  41d864:	strb	w1, [x0, #3880]
  41d868:	strb	wzr, [x20, #88]
  41d86c:	b	41d578 <wcrtomb@plt+0x18958>
  41d870:	add	x20, x22, #0xa60
  41d874:	mov	w0, #0x1                   	// #1
  41d878:	strb	w0, [x20, #88]
  41d87c:	b	41d578 <wcrtomb@plt+0x18958>
  41d880:	cbz	x0, 41d888 <wcrtomb@plt+0x18c68>
  41d884:	blr	x0
  41d888:	mov	x1, x24
  41d88c:	mov	w2, #0x5                   	// #5
  41d890:	mov	x0, #0x0                   	// #0
  41d894:	bl	4049c0 <dcgettext@plt>
  41d898:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41d89c:	ldr	w5, [x25, #24]
  41d8a0:	mov	x2, x0
  41d8a4:	add	x1, x1, #0x898
  41d8a8:	b	41d8b8 <wcrtomb@plt+0x18c98>
  41d8ac:	cmp	w5, w4
  41d8b0:	b.eq	41d3bc <wcrtomb@plt+0x1879c>  // b.none
  41d8b4:	add	x1, x1, #0x30
  41d8b8:	ldr	x3, [x1]
  41d8bc:	ldr	w4, [x1, #8]
  41d8c0:	cbnz	x3, 41d8ac <wcrtomb@plt+0x18c8c>
  41d8c4:	cbnz	w4, 41d8ac <wcrtomb@plt+0x18c8c>
  41d8c8:	ldr	x6, [x1, #32]
  41d8cc:	cbnz	x6, 41d8ac <wcrtomb@plt+0x18c8c>
  41d8d0:	b	41d3bc <wcrtomb@plt+0x1879c>
  41d8d4:	ldp	x25, x26, [sp, #64]
  41d8d8:	b	41ce0c <wcrtomb@plt+0x181ec>
  41d8dc:	str	xzr, [x20, #104]
  41d8e0:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  41d8e4:	mov	x0, x25
  41d8e8:	bl	42a260 <wcrtomb@plt+0x25640>
  41d8ec:	nop
  41d8f0:	stp	x29, x30, [sp, #-48]!
  41d8f4:	mov	x29, sp
  41d8f8:	stp	x19, x20, [sp, #16]
  41d8fc:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d900:	mov	w20, w0
  41d904:	str	x21, [sp, #32]
  41d908:	add	x19, x19, #0xa60
  41d90c:	mov	x21, x1
  41d910:	cbz	w0, 41d920 <wcrtomb@plt+0x18d00>
  41d914:	ldr	w0, [x19, #116]
  41d918:	cmp	w0, w20
  41d91c:	b.eq	41d96c <wcrtomb@plt+0x18d4c>  // b.none
  41d920:	ldr	x0, [x19, #120]
  41d924:	cbz	x0, 41d934 <wcrtomb@plt+0x18d14>
  41d928:	ldr	w1, [x19, #128]
  41d92c:	cmp	w1, w20
  41d930:	b.eq	41d954 <wcrtomb@plt+0x18d34>  // b.none
  41d934:	mov	w0, w20
  41d938:	bl	404720 <getpwuid@plt>
  41d93c:	cbz	x0, 41d980 <wcrtomb@plt+0x18d60>
  41d940:	ldr	x1, [x0]
  41d944:	add	x0, x19, #0x78
  41d948:	str	w20, [x19, #128]
  41d94c:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  41d950:	ldr	x0, [x19, #120]
  41d954:	bl	441170 <argp_parse@@Base+0xd288>
  41d958:	str	x0, [x21]
  41d95c:	ldp	x19, x20, [sp, #16]
  41d960:	ldr	x21, [sp, #32]
  41d964:	ldp	x29, x30, [sp], #48
  41d968:	ret
  41d96c:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  41d970:	add	x0, x0, #0x948
  41d974:	bl	441170 <argp_parse@@Base+0xd288>
  41d978:	str	x0, [x21]
  41d97c:	b	41d95c <wcrtomb@plt+0x18d3c>
  41d980:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  41d984:	add	x0, x0, #0x948
  41d988:	str	w20, [x19, #116]
  41d98c:	bl	441170 <argp_parse@@Base+0xd288>
  41d990:	str	x0, [x21]
  41d994:	ldp	x19, x20, [sp, #16]
  41d998:	ldr	x21, [sp, #32]
  41d99c:	ldp	x29, x30, [sp], #48
  41d9a0:	ret
  41d9a4:	nop
  41d9a8:	stp	x29, x30, [sp, #-48]!
  41d9ac:	mov	x29, sp
  41d9b0:	stp	x19, x20, [sp, #16]
  41d9b4:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41d9b8:	mov	w20, w0
  41d9bc:	str	x21, [sp, #32]
  41d9c0:	add	x19, x19, #0xa60
  41d9c4:	mov	x21, x1
  41d9c8:	cbz	w0, 41d9d8 <wcrtomb@plt+0x18db8>
  41d9cc:	ldr	w0, [x19, #132]
  41d9d0:	cmp	w0, w20
  41d9d4:	b.eq	41da24 <wcrtomb@plt+0x18e04>  // b.none
  41d9d8:	ldr	x0, [x19, #136]
  41d9dc:	cbz	x0, 41d9ec <wcrtomb@plt+0x18dcc>
  41d9e0:	ldr	w1, [x19, #144]
  41d9e4:	cmp	w1, w20
  41d9e8:	b.eq	41da0c <wcrtomb@plt+0x18dec>  // b.none
  41d9ec:	mov	w0, w20
  41d9f0:	bl	404b20 <getgrgid@plt>
  41d9f4:	cbz	x0, 41da38 <wcrtomb@plt+0x18e18>
  41d9f8:	ldr	x1, [x0]
  41d9fc:	add	x0, x19, #0x88
  41da00:	str	w20, [x19, #144]
  41da04:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  41da08:	ldr	x0, [x19, #136]
  41da0c:	bl	441170 <argp_parse@@Base+0xd288>
  41da10:	str	x0, [x21]
  41da14:	ldp	x19, x20, [sp, #16]
  41da18:	ldr	x21, [sp, #32]
  41da1c:	ldp	x29, x30, [sp], #48
  41da20:	ret
  41da24:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  41da28:	add	x0, x0, #0x948
  41da2c:	bl	441170 <argp_parse@@Base+0xd288>
  41da30:	str	x0, [x21]
  41da34:	b	41da14 <wcrtomb@plt+0x18df4>
  41da38:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  41da3c:	add	x0, x0, #0x948
  41da40:	str	w20, [x19, #132]
  41da44:	bl	441170 <argp_parse@@Base+0xd288>
  41da48:	str	x0, [x21]
  41da4c:	ldp	x19, x20, [sp, #16]
  41da50:	ldr	x21, [sp, #32]
  41da54:	ldp	x29, x30, [sp], #48
  41da58:	ret
  41da5c:	nop
  41da60:	stp	x29, x30, [sp, #-48]!
  41da64:	mov	x29, sp
  41da68:	stp	x19, x20, [sp, #16]
  41da6c:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41da70:	add	x19, x19, #0xa60
  41da74:	str	x21, [sp, #32]
  41da78:	mov	x21, x1
  41da7c:	mov	x20, x0
  41da80:	ldr	x1, [x19, #152]
  41da84:	cbz	x1, 41da90 <wcrtomb@plt+0x18e70>
  41da88:	bl	404710 <strcmp@plt>
  41da8c:	cbz	w0, 41dad8 <wcrtomb@plt+0x18eb8>
  41da90:	ldr	x1, [x19, #120]
  41da94:	cbz	x1, 41daa8 <wcrtomb@plt+0x18e88>
  41da98:	ldrb	w2, [x20]
  41da9c:	ldrb	w0, [x1]
  41daa0:	cmp	w2, w0
  41daa4:	b.eq	41dae8 <wcrtomb@plt+0x18ec8>  // b.none
  41daa8:	mov	x0, x20
  41daac:	bl	404440 <getpwnam@plt>
  41dab0:	mov	x2, x0
  41dab4:	cbz	x0, 41db04 <wcrtomb@plt+0x18ee4>
  41dab8:	ldr	x1, [x2]
  41dabc:	add	x0, x19, #0x78
  41dac0:	ldr	w2, [x2, #16]
  41dac4:	str	w2, [x19, #128]
  41dac8:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  41dacc:	ldr	w1, [x19, #128]
  41dad0:	mov	w0, #0x1                   	// #1
  41dad4:	str	w1, [x21]
  41dad8:	ldp	x19, x20, [sp, #16]
  41dadc:	ldr	x21, [sp, #32]
  41dae0:	ldp	x29, x30, [sp], #48
  41dae4:	ret
  41dae8:	mov	x0, x20
  41daec:	bl	404710 <strcmp@plt>
  41daf0:	cbz	w0, 41dacc <wcrtomb@plt+0x18eac>
  41daf4:	mov	x0, x20
  41daf8:	bl	404440 <getpwnam@plt>
  41dafc:	mov	x2, x0
  41db00:	cbnz	x0, 41dab8 <wcrtomb@plt+0x18e98>
  41db04:	mov	x1, x20
  41db08:	add	x0, x19, #0x98
  41db0c:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  41db10:	mov	w0, #0x0                   	// #0
  41db14:	ldp	x19, x20, [sp, #16]
  41db18:	ldr	x21, [sp, #32]
  41db1c:	ldp	x29, x30, [sp], #48
  41db20:	ret
  41db24:	nop
  41db28:	stp	x29, x30, [sp, #-48]!
  41db2c:	mov	x29, sp
  41db30:	stp	x19, x20, [sp, #16]
  41db34:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41db38:	add	x19, x19, #0xa60
  41db3c:	str	x21, [sp, #32]
  41db40:	mov	x21, x1
  41db44:	mov	x20, x0
  41db48:	ldr	x1, [x19, #160]
  41db4c:	cbz	x1, 41db58 <wcrtomb@plt+0x18f38>
  41db50:	bl	404710 <strcmp@plt>
  41db54:	cbz	w0, 41db9c <wcrtomb@plt+0x18f7c>
  41db58:	ldr	x1, [x19, #136]
  41db5c:	cbz	x1, 41db70 <wcrtomb@plt+0x18f50>
  41db60:	ldrb	w2, [x20]
  41db64:	ldrb	w0, [x1]
  41db68:	cmp	w2, w0
  41db6c:	b.eq	41dbac <wcrtomb@plt+0x18f8c>  // b.none
  41db70:	mov	x0, x20
  41db74:	bl	404110 <getgrnam@plt>
  41db78:	cbz	x0, 41dbc4 <wcrtomb@plt+0x18fa4>
  41db7c:	ldr	w2, [x0, #16]
  41db80:	mov	x1, x20
  41db84:	add	x0, x19, #0x88
  41db88:	str	w2, [x19, #144]
  41db8c:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  41db90:	ldr	w1, [x19, #144]
  41db94:	mov	w0, #0x1                   	// #1
  41db98:	str	w1, [x21]
  41db9c:	ldp	x19, x20, [sp, #16]
  41dba0:	ldr	x21, [sp, #32]
  41dba4:	ldp	x29, x30, [sp], #48
  41dba8:	ret
  41dbac:	mov	x0, x20
  41dbb0:	bl	404710 <strcmp@plt>
  41dbb4:	cbz	w0, 41db90 <wcrtomb@plt+0x18f70>
  41dbb8:	mov	x0, x20
  41dbbc:	bl	404110 <getgrnam@plt>
  41dbc0:	cbnz	x0, 41db7c <wcrtomb@plt+0x18f5c>
  41dbc4:	mov	x1, x20
  41dbc8:	add	x0, x19, #0xa0
  41dbcc:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  41dbd0:	mov	w0, #0x0                   	// #0
  41dbd4:	ldp	x19, x20, [sp, #16]
  41dbd8:	ldr	x21, [sp, #32]
  41dbdc:	ldp	x29, x30, [sp], #48
  41dbe0:	ret
  41dbe4:	nop
  41dbe8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41dbec:	ldr	x0, [x0, #4048]
  41dbf0:	cmp	x0, #0x0
  41dbf4:	cset	w0, ne  // ne = any
  41dbf8:	ret
  41dbfc:	nop
  41dc00:	stp	x29, x30, [sp, #-32]!
  41dc04:	mov	x29, sp
  41dc08:	str	x19, [sp, #16]
  41dc0c:	mov	x19, x0
  41dc10:	bl	41c6e0 <wcrtomb@plt+0x17ac0>
  41dc14:	str	wzr, [x0, #16]
  41dc18:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41dc1c:	str	x19, [x0, #24]
  41dc20:	ldr	x19, [sp, #16]
  41dc24:	ldr	x1, [x2, #4048]
  41dc28:	ldp	x29, x30, [sp], #32
  41dc2c:	add	x1, x1, #0x1
  41dc30:	str	x1, [x2, #4048]
  41dc34:	ret
  41dc38:	stp	x29, x30, [sp, #-16]!
  41dc3c:	mov	x0, #0x66                  	// #102
  41dc40:	mov	x29, sp
  41dc44:	bl	440f48 <argp_parse@@Base+0xd060>
  41dc48:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41dc4c:	add	x2, x1, #0xa60
  41dc50:	mov	x4, #0x64                  	// #100
  41dc54:	ldr	x3, [x1, #2656]
  41dc58:	stp	x0, x4, [x2, #96]
  41dc5c:	cbz	x3, 41dc78 <wcrtomb@plt+0x19058>
  41dc60:	ldr	x0, [x3, #8]
  41dc64:	cbz	x0, 41dc78 <wcrtomb@plt+0x19058>
  41dc68:	mov	x2, x0
  41dc6c:	ldr	x0, [x0, #8]
  41dc70:	cbnz	x0, 41dc68 <wcrtomb@plt+0x19048>
  41dc74:	str	x2, [x1, #2656]
  41dc78:	ldp	x29, x30, [sp], #16
  41dc7c:	ret
  41dc80:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41dc84:	ldr	x0, [x0, #2752]
  41dc88:	b	4047b0 <free@plt>
  41dc8c:	nop
  41dc90:	stp	x29, x30, [sp, #-16]!
  41dc94:	mov	x29, sp
  41dc98:	bl	41cde0 <wcrtomb@plt+0x181c0>
  41dc9c:	cbz	x0, 41dca4 <wcrtomb@plt+0x19084>
  41dca0:	ldr	x0, [x0, #24]
  41dca4:	ldp	x29, x30, [sp], #16
  41dca8:	ret
  41dcac:	nop
  41dcb0:	stp	x29, x30, [sp, #-48]!
  41dcb4:	mov	x29, sp
  41dcb8:	stp	x19, x20, [sp, #16]
  41dcbc:	mov	w20, w1
  41dcc0:	mov	x19, x3
  41dcc4:	str	x21, [sp, #32]
  41dcc8:	and	w21, w2, #0xff
  41dccc:	bl	41c8d8 <wcrtomb@plt+0x17cb8>
  41dcd0:	strb	w21, [x0, #36]
  41dcd4:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41dcd8:	add	x4, x4, #0xa60
  41dcdc:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41dce0:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41dce4:	str	w20, [x0, #40]
  41dce8:	ldr	w6, [x1, #620]
  41dcec:	ldr	w1, [x4, #8]
  41dcf0:	ldr	w5, [x3, #3884]
  41dcf4:	cmp	w1, #0x2
  41dcf8:	ldr	w2, [x4, #112]
  41dcfc:	cset	w1, eq  // eq = none
  41dd00:	stp	xzr, xzr, [x0, #48]
  41dd04:	orr	w5, w5, w2
  41dd08:	ldr	x3, [x4, #168]
  41dd0c:	orr	w1, w6, w1, lsl #28
  41dd10:	orr	w5, w5, w1
  41dd14:	stp	xzr, x3, [x0]
  41dd18:	str	w5, [x0, #32]
  41dd1c:	str	x19, [x0, #64]
  41dd20:	cbz	x3, 41dd3c <wcrtomb@plt+0x1911c>
  41dd24:	str	x0, [x3]
  41dd28:	ldp	x19, x20, [sp, #16]
  41dd2c:	ldr	x21, [sp, #32]
  41dd30:	str	x0, [x4, #168]
  41dd34:	ldp	x29, x30, [sp], #48
  41dd38:	ret
  41dd3c:	str	x0, [x4, #16]
  41dd40:	ldp	x19, x20, [sp, #16]
  41dd44:	ldr	x21, [sp, #32]
  41dd48:	str	x0, [x4, #168]
  41dd4c:	ldp	x29, x30, [sp], #48
  41dd50:	ret
  41dd54:	nop
  41dd58:	stp	x29, x30, [sp, #-32]!
  41dd5c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41dd60:	mov	x29, sp
  41dd64:	ldrb	w0, [x0, #584]
  41dd68:	stp	x19, x20, [sp, #16]
  41dd6c:	cbz	w0, 41ddbc <wcrtomb@plt+0x1919c>
  41dd70:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41dd74:	add	x20, x20, #0xa60
  41dd78:	b	41dd98 <wcrtomb@plt+0x19178>
  41dd7c:	ldr	w0, [x0, #16]
  41dd80:	cmp	w0, #0x1
  41dd84:	b.ne	41de28 <wcrtomb@plt+0x19208>  // b.any
  41dd88:	ldr	x0, [x19, #24]
  41dd8c:	bl	441170 <argp_parse@@Base+0xd288>
  41dd90:	bl	41c080 <wcrtomb@plt+0x17460>
  41dd94:	str	w0, [x20, #176]
  41dd98:	mov	w0, #0x0                   	// #0
  41dd9c:	bl	41cde0 <wcrtomb@plt+0x181c0>
  41dda0:	mov	x19, x0
  41dda4:	cbnz	x0, 41dd7c <wcrtomb@plt+0x1915c>
  41dda8:	ldr	w1, [x20, #176]
  41ddac:	cbnz	w1, 41ddfc <wcrtomb@plt+0x191dc>
  41ddb0:	ldp	x19, x20, [sp, #16]
  41ddb4:	ldp	x29, x30, [sp], #32
  41ddb8:	ret
  41ddbc:	mov	w20, #0x0                   	// #0
  41ddc0:	mov	w19, w20
  41ddc4:	b	41dde4 <wcrtomb@plt+0x191c4>
  41ddc8:	ldr	w2, [x0, #16]
  41ddcc:	ldr	x0, [x0, #24]
  41ddd0:	cmp	w2, #0x1
  41ddd4:	b.ne	41de10 <wcrtomb@plt+0x191f0>  // b.any
  41ddd8:	bl	441170 <argp_parse@@Base+0xd288>
  41dddc:	bl	41c080 <wcrtomb@plt+0x17460>
  41dde0:	mov	w19, w0
  41dde4:	mov	w0, #0x0                   	// #0
  41dde8:	bl	41cde0 <wcrtomb@plt+0x181c0>
  41ddec:	cbnz	x0, 41ddc8 <wcrtomb@plt+0x191a8>
  41ddf0:	cmp	w20, w19
  41ddf4:	b.eq	41ddb0 <wcrtomb@plt+0x19190>  // b.none
  41ddf8:	mov	w1, w19
  41ddfc:	ldp	x19, x20, [sp, #16]
  41de00:	mov	x3, #0x0                   	// #0
  41de04:	ldp	x29, x30, [sp], #32
  41de08:	mov	w2, #0x0                   	// #0
  41de0c:	b	41dcb0 <wcrtomb@plt+0x19090>
  41de10:	mov	w1, w19
  41de14:	mov	w20, w19
  41de18:	mov	x3, #0x0                   	// #0
  41de1c:	mov	w2, #0x1                   	// #1
  41de20:	bl	41dcb0 <wcrtomb@plt+0x19090>
  41de24:	b	41ddc0 <wcrtomb@plt+0x191a0>
  41de28:	ldr	x0, [x20, #184]
  41de2c:	cbz	x0, 41de34 <wcrtomb@plt+0x19214>
  41de30:	bl	41ca30 <wcrtomb@plt+0x17e10>
  41de34:	ldr	x0, [x19, #24]
  41de38:	bl	41c8d8 <wcrtomb@plt+0x17cb8>
  41de3c:	str	x0, [x20, #16]
  41de40:	ldr	w3, [x20, #8]
  41de44:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  41de48:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41de4c:	ldr	w5, [x20, #112]
  41de50:	cmp	w3, #0x2
  41de54:	ldr	w3, [x2, #620]
  41de58:	ldr	w1, [x1, #3884]
  41de5c:	cset	w2, eq  // eq = none
  41de60:	mov	w4, #0x1                   	// #1
  41de64:	str	xzr, [x0]
  41de68:	orr	w2, w3, w2, lsl #28
  41de6c:	orr	w1, w1, w5
  41de70:	ldr	w3, [x20, #176]
  41de74:	orr	w1, w1, w2
  41de78:	str	w1, [x0, #32]
  41de7c:	strb	w4, [x0, #36]
  41de80:	str	w3, [x0, #40]
  41de84:	stp	xzr, xzr, [x0, #48]
  41de88:	str	xzr, [x0, #64]
  41de8c:	str	x0, [x20, #168]
  41de90:	str	x0, [x20, #184]
  41de94:	ldp	x19, x20, [sp, #16]
  41de98:	ldp	x29, x30, [sp], #32
  41de9c:	ret
  41dea0:	sub	sp, sp, #0x230
  41dea4:	stp	x29, x30, [sp]
  41dea8:	mov	x29, sp
  41deac:	stp	x23, x24, [sp, #48]
  41deb0:	mov	x23, x1
  41deb4:	stp	x25, x26, [sp, #64]
  41deb8:	mov	x25, x0
  41debc:	bl	415da0 <wcrtomb@plt+0x11180>
  41dec0:	str	x0, [x23, #56]
  41dec4:	bl	416320 <wcrtomb@plt+0x11700>
  41dec8:	cbz	x0, 41e014 <wcrtomb@plt+0x193f4>
  41decc:	ldr	x24, [x23, #24]
  41ded0:	stp	x19, x20, [sp, #16]
  41ded4:	mov	x20, x0
  41ded8:	stp	x21, x22, [sp, #32]
  41dedc:	cmp	x24, #0x63
  41dee0:	stp	x27, x28, [sp, #80]
  41dee4:	b.hi	41e04c <wcrtomb@plt+0x1942c>  // b.pmore
  41dee8:	mov	x0, #0x65                  	// #101
  41deec:	mov	x28, #0x64                  	// #100
  41def0:	bl	440f48 <argp_parse@@Base+0xd060>
  41def4:	mov	x21, x0
  41def8:	ldr	w1, [x23, #40]
  41defc:	str	w1, [sp, #108]
  41df00:	ldr	x1, [x23, #16]
  41df04:	bl	404910 <strcpy@plt>
  41df08:	add	x0, x21, x24
  41df0c:	ldurb	w0, [x0, #-1]
  41df10:	cmp	w0, #0x2f
  41df14:	b.eq	41df2c <wcrtomb@plt+0x1930c>  // b.none
  41df18:	add	x0, x24, #0x1
  41df1c:	mov	w1, #0x2f                  	// #47
  41df20:	strb	w1, [x21, x24]
  41df24:	mov	x24, x0
  41df28:	strb	wzr, [x21, x0]
  41df2c:	ldrb	w22, [x20]
  41df30:	cbz	w22, 41e0c8 <wcrtomb@plt+0x194a8>
  41df34:	add	x1, sp, #0xe0
  41df38:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41df3c:	mov	x27, #0x0                   	// #0
  41df40:	add	x0, x0, #0x28c
  41df44:	str	xzr, [sp, #96]
  41df48:	stp	x0, x1, [sp, #112]
  41df4c:	b	41df60 <wcrtomb@plt+0x19340>
  41df50:	add	x19, x19, #0x1
  41df54:	add	x20, x20, x19
  41df58:	ldrb	w22, [x20]
  41df5c:	cbz	w22, 41dff8 <wcrtomb@plt+0x193d8>
  41df60:	mov	x0, x20
  41df64:	bl	403ff0 <strlen@plt>
  41df68:	cmp	w22, #0x44
  41df6c:	mov	x19, x0
  41df70:	b.ne	41df50 <wcrtomb@plt+0x19330>  // b.any
  41df74:	add	x0, x24, x0
  41df78:	cmp	x0, x28
  41df7c:	b.cs	41e028 <wcrtomb@plt+0x19408>  // b.hs, b.nlast
  41df80:	add	x26, x20, #0x1
  41df84:	add	x0, x21, x24
  41df88:	mov	x1, x26
  41df8c:	bl	404910 <strcpy@plt>
  41df90:	ldr	w1, [sp, #108]
  41df94:	mov	x3, x23
  41df98:	mov	x0, x21
  41df9c:	mov	w2, #0x0                   	// #0
  41dfa0:	bl	41dcb0 <wcrtomb@plt+0x19090>
  41dfa4:	mov	x22, x0
  41dfa8:	ldr	x0, [sp, #96]
  41dfac:	cbz	x0, 41e098 <wcrtomb@plt+0x19478>
  41dfb0:	str	x22, [x27, #80]
  41dfb4:	add	x0, sp, #0x88
  41dfb8:	bl	425f70 <wcrtomb@plt+0x21350>
  41dfbc:	ldr	w27, [x25, #408]
  41dfc0:	str	x25, [sp, #528]
  41dfc4:	tbz	w27, #31, 41e058 <wcrtomb@plt+0x19438>
  41dfc8:	neg	w27, w27
  41dfcc:	bl	404ad0 <__errno_location@plt>
  41dfd0:	str	w27, [x0]
  41dfd4:	mov	x0, x21
  41dfd8:	bl	41bcf0 <wcrtomb@plt+0x170d0>
  41dfdc:	add	x19, x19, #0x1
  41dfe0:	mov	x27, x22
  41dfe4:	add	x20, x20, x19
  41dfe8:	add	x0, sp, #0x88
  41dfec:	bl	425ff8 <wcrtomb@plt+0x213d8>
  41dff0:	ldrb	w22, [x20]
  41dff4:	cbnz	w22, 41df60 <wcrtomb@plt+0x19340>
  41dff8:	mov	x0, x21
  41dffc:	bl	4047b0 <free@plt>
  41e000:	ldr	x0, [sp, #96]
  41e004:	ldp	x19, x20, [sp, #16]
  41e008:	ldp	x21, x22, [sp, #32]
  41e00c:	ldp	x27, x28, [sp, #80]
  41e010:	str	x0, [x23, #72]
  41e014:	ldp	x29, x30, [sp]
  41e018:	ldp	x23, x24, [sp, #48]
  41e01c:	ldp	x25, x26, [sp, #64]
  41e020:	add	sp, sp, #0x230
  41e024:	ret
  41e028:	lsl	x28, x28, #1
  41e02c:	cbz	x28, 41e0d0 <wcrtomb@plt+0x194b0>
  41e030:	cmp	x0, x28
  41e034:	b.cs	41e028 <wcrtomb@plt+0x19408>  // b.hs, b.nlast
  41e038:	mov	x0, x21
  41e03c:	add	x1, x28, #0x1
  41e040:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  41e044:	mov	x21, x0
  41e048:	b	41df80 <wcrtomb@plt+0x19360>
  41e04c:	add	x28, x24, #0x64
  41e050:	add	x0, x24, #0x65
  41e054:	b	41def0 <wcrtomb@plt+0x192d0>
  41e058:	ldr	x0, [sp, #112]
  41e05c:	mov	x1, x26
  41e060:	ldr	w2, [x0]
  41e064:	mov	x0, x25
  41e068:	orr	w2, w2, #0x4000
  41e06c:	bl	40c748 <wcrtomb@plt+0x7b28>
  41e070:	mov	w1, w0
  41e074:	tbnz	w0, #31, 41dfd4 <wcrtomb@plt+0x193b4>
  41e078:	ldr	x2, [sp, #120]
  41e07c:	mov	w0, #0x0                   	// #0
  41e080:	str	w1, [sp, #544]
  41e084:	bl	4049a0 <__fxstat@plt>
  41e088:	cbz	w0, 41e0a0 <wcrtomb@plt+0x19480>
  41e08c:	mov	x0, x21
  41e090:	bl	41bdb8 <wcrtomb@plt+0x17198>
  41e094:	b	41dfdc <wcrtomb@plt+0x193bc>
  41e098:	str	x22, [sp, #96]
  41e09c:	b	41dfb4 <wcrtomb@plt+0x19394>
  41e0a0:	mov	x0, x21
  41e0a4:	bl	441170 <argp_parse@@Base+0xd288>
  41e0a8:	mov	x2, x0
  41e0ac:	mov	x1, x22
  41e0b0:	add	x0, sp, #0x88
  41e0b4:	str	x2, [sp, #136]
  41e0b8:	bl	41dea0 <wcrtomb@plt+0x19280>
  41e0bc:	add	x0, sp, #0x88
  41e0c0:	bl	40c8b0 <wcrtomb@plt+0x7c90>
  41e0c4:	b	41dfdc <wcrtomb@plt+0x193bc>
  41e0c8:	str	xzr, [sp, #96]
  41e0cc:	b	41dff8 <wcrtomb@plt+0x193d8>
  41e0d0:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  41e0d4:	nop
  41e0d8:	stp	x29, x30, [sp, #-48]!
  41e0dc:	mov	x29, sp
  41e0e0:	stp	x21, x22, [sp, #32]
  41e0e4:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  41e0e8:	stp	x19, x20, [sp, #16]
  41e0ec:	bl	41c8d8 <wcrtomb@plt+0x17cb8>
  41e0f0:	ldrb	w1, [x22, #624]
  41e0f4:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41e0f8:	mov	x19, x0
  41e0fc:	add	x20, x20, #0xa60
  41e100:	cbnz	w1, 41e170 <wcrtomb@plt+0x19550>
  41e104:	ldr	x21, [x20, #168]
  41e108:	ldr	x0, [x20, #16]
  41e10c:	stp	x0, xzr, [x19]
  41e110:	str	x19, [x20, #16]
  41e114:	cbz	x21, 41e1a4 <wcrtomb@plt+0x19584>
  41e118:	ldr	w1, [x20, #8]
  41e11c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41e120:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41e124:	ldr	w4, [x20, #112]
  41e128:	ldr	w3, [x0, #620]
  41e12c:	cmp	w1, #0x2
  41e130:	ldr	w0, [x2, #3884]
  41e134:	cset	w1, eq  // eq = none
  41e138:	mov	w2, #0x1                   	// #1
  41e13c:	strb	w2, [x22, #624]
  41e140:	orr	w0, w0, w4
  41e144:	orr	w1, w3, w1, lsl #28
  41e148:	orr	w0, w0, w1
  41e14c:	strb	w2, [x19, #36]
  41e150:	ldp	x21, x22, [sp, #32]
  41e154:	str	w0, [x19, #32]
  41e158:	str	wzr, [x19, #40]
  41e15c:	stp	xzr, xzr, [x19, #48]
  41e160:	str	xzr, [x19, #64]
  41e164:	ldp	x19, x20, [sp, #16]
  41e168:	ldp	x29, x30, [sp], #48
  41e16c:	ret
  41e170:	ldr	x0, [x20, #16]
  41e174:	ldp	x1, x21, [x0]
  41e178:	cbz	x21, 41e1ac <wcrtomb@plt+0x1958c>
  41e17c:	str	x1, [x21]
  41e180:	ldr	x1, [x0]
  41e184:	cbz	x1, 41e1b4 <wcrtomb@plt+0x19594>
  41e188:	str	x21, [x1, #8]
  41e18c:	ldr	x21, [x20, #168]
  41e190:	bl	41ca30 <wcrtomb@plt+0x17e10>
  41e194:	ldr	x0, [x20, #16]
  41e198:	stp	x0, xzr, [x19]
  41e19c:	str	x19, [x20, #16]
  41e1a0:	cbnz	x21, 41e118 <wcrtomb@plt+0x194f8>
  41e1a4:	str	x19, [x20, #168]
  41e1a8:	b	41e118 <wcrtomb@plt+0x194f8>
  41e1ac:	str	x1, [x20, #16]
  41e1b0:	cbnz	x1, 41e188 <wcrtomb@plt+0x19568>
  41e1b4:	str	x21, [x20, #168]
  41e1b8:	bl	41ca30 <wcrtomb@plt+0x17e10>
  41e1bc:	b	41e194 <wcrtomb@plt+0x19574>
  41e1c0:	ldp	x1, x2, [x0]
  41e1c4:	cbz	x2, 41e1dc <wcrtomb@plt+0x195bc>
  41e1c8:	str	x1, [x2]
  41e1cc:	ldr	x1, [x0]
  41e1d0:	cbz	x1, 41e1e8 <wcrtomb@plt+0x195c8>
  41e1d4:	str	x2, [x1, #8]
  41e1d8:	ret
  41e1dc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41e1e0:	str	x1, [x0, #2672]
  41e1e4:	cbnz	x1, 41e1d4 <wcrtomb@plt+0x195b4>
  41e1e8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41e1ec:	str	x2, [x0, #2824]
  41e1f0:	ret
  41e1f4:	nop
  41e1f8:	stp	x29, x30, [sp, #-64]!
  41e1fc:	mov	x29, sp
  41e200:	stp	x19, x20, [sp, #16]
  41e204:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41e208:	add	x20, x20, #0xa60
  41e20c:	stp	x21, x22, [sp, #32]
  41e210:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  41e214:	mov	x22, x0
  41e218:	add	x21, x21, #0x270
  41e21c:	str	x23, [sp, #48]
  41e220:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  41e224:	add	x23, x23, #0x248
  41e228:	ldr	x1, [x20, #16]
  41e22c:	b	41e260 <wcrtomb@plt+0x19640>
  41e230:	ldr	x0, [x20, #16]
  41e234:	cmp	x0, x19
  41e238:	b.eq	41e2c8 <wcrtomb@plt+0x196a8>  // b.none
  41e23c:	ldrb	w0, [x23]
  41e240:	cbz	w0, 41e2d4 <wcrtomb@plt+0x196b4>
  41e244:	ldr	x0, [x20, #16]
  41e248:	ldr	x0, [x0, #48]
  41e24c:	cbz	x0, 41e2d4 <wcrtomb@plt+0x196b4>
  41e250:	bl	41dd58 <wcrtomb@plt+0x19138>
  41e254:	ldr	x1, [x20, #16]
  41e258:	ldr	x0, [x1, #48]
  41e25c:	cbnz	x0, 41e2d4 <wcrtomb@plt+0x196b4>
  41e260:	mov	x0, x22
  41e264:	cbz	x1, 41e2ec <wcrtomb@plt+0x196cc>
  41e268:	ldr	x2, [x1, #16]
  41e26c:	ldrb	w2, [x2]
  41e270:	cbz	w2, 41e304 <wcrtomb@plt+0x196e4>
  41e274:	bl	41cbb8 <wcrtomb@plt+0x17f98>
  41e278:	mov	x19, x0
  41e27c:	ldrb	w1, [x21]
  41e280:	cbnz	w1, 41e230 <wcrtomb@plt+0x19610>
  41e284:	cbz	x19, 41e23c <wcrtomb@plt+0x1961c>
  41e288:	ldr	x1, [x19, #24]
  41e28c:	ldr	x0, [x19, #48]
  41e290:	ldrb	w1, [x22, x1]
  41e294:	cmp	w1, #0x2f
  41e298:	b.eq	41e33c <wcrtomb@plt+0x1971c>  // b.none
  41e29c:	add	x0, x0, #0x1
  41e2a0:	str	x0, [x19, #48]
  41e2a4:	ldr	w0, [x19, #40]
  41e2a8:	bl	41bb88 <wcrtomb@plt+0x16f68>
  41e2ac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41e2b0:	ldr	x0, [x0, #704]
  41e2b4:	cbnz	x0, 41e32c <wcrtomb@plt+0x1970c>
  41e2b8:	ldr	x0, [x19, #48]
  41e2bc:	cmp	x0, #0x0
  41e2c0:	cset	w0, ne  // ne = any
  41e2c4:	b	41e2d8 <wcrtomb@plt+0x196b8>
  41e2c8:	strb	wzr, [x21]
  41e2cc:	cbz	x19, 41e23c <wcrtomb@plt+0x1961c>
  41e2d0:	b	41e288 <wcrtomb@plt+0x19668>
  41e2d4:	mov	w0, #0x0                   	// #0
  41e2d8:	ldp	x19, x20, [sp, #16]
  41e2dc:	ldp	x21, x22, [sp, #32]
  41e2e0:	ldr	x23, [sp, #48]
  41e2e4:	ldp	x29, x30, [sp], #64
  41e2e8:	ret
  41e2ec:	mov	w0, #0x1                   	// #1
  41e2f0:	ldp	x19, x20, [sp, #16]
  41e2f4:	ldp	x21, x22, [sp, #32]
  41e2f8:	ldr	x23, [sp, #48]
  41e2fc:	ldp	x29, x30, [sp], #64
  41e300:	ret
  41e304:	ldr	w0, [x1, #40]
  41e308:	bl	41bb88 <wcrtomb@plt+0x16f68>
  41e30c:	str	xzr, [x20, #16]
  41e310:	mov	w0, #0x1                   	// #1
  41e314:	str	xzr, [x20, #168]
  41e318:	ldp	x19, x20, [sp, #16]
  41e31c:	ldp	x21, x22, [sp, #32]
  41e320:	ldr	x23, [sp, #48]
  41e324:	ldp	x29, x30, [sp], #64
  41e328:	ret
  41e32c:	ldr	x1, [x19, #48]
  41e330:	cmp	x1, x0
  41e334:	cset	w0, eq  // eq = none
  41e338:	b	41e2d8 <wcrtomb@plt+0x196b8>
  41e33c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41e340:	ldr	w1, [x1, #620]
  41e344:	cbz	w1, 41e29c <wcrtomb@plt+0x1967c>
  41e348:	cbnz	x0, 41e2a4 <wcrtomb@plt+0x19684>
  41e34c:	b	41e29c <wcrtomb@plt+0x1967c>
  41e350:	stp	x29, x30, [sp, #-48]!
  41e354:	mov	x29, sp
  41e358:	stp	x19, x20, [sp, #16]
  41e35c:	ldr	x19, [x0, #8]
  41e360:	str	x21, [sp, #32]
  41e364:	cbz	x19, 41e3e8 <wcrtomb@plt+0x197c8>
  41e368:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41e36c:	mov	w21, #0x0                   	// #0
  41e370:	ldr	x20, [x1, #704]
  41e374:	cbz	x20, 41e3d4 <wcrtomb@plt+0x197b4>
  41e378:	ldrb	w21, [x0, #16]
  41e37c:	cbnz	w21, 41e3e8 <wcrtomb@plt+0x197c8>
  41e380:	mov	x0, x19
  41e384:	bl	403ff0 <strlen@plt>
  41e388:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41e38c:	ldr	x1, [x1, #2672]
  41e390:	cbz	x1, 41e3d0 <wcrtomb@plt+0x197b0>
  41e394:	nop
  41e398:	ldr	x2, [x1, #16]
  41e39c:	ldrb	w2, [x2]
  41e3a0:	cbz	w2, 41e3b0 <wcrtomb@plt+0x19790>
  41e3a4:	ldr	x2, [x1, #48]
  41e3a8:	cmp	x20, x2
  41e3ac:	b.hi	41e3d4 <wcrtomb@plt+0x197b4>  // b.pmore
  41e3b0:	ldr	x2, [x1, #24]
  41e3b4:	cmp	x2, x0
  41e3b8:	b.hi	41e3c8 <wcrtomb@plt+0x197a8>  // b.pmore
  41e3bc:	ldrb	w2, [x19, x2]
  41e3c0:	cmp	w2, #0x2f
  41e3c4:	b.eq	41e3d4 <wcrtomb@plt+0x197b4>  // b.none
  41e3c8:	ldr	x1, [x1]
  41e3cc:	cbnz	x1, 41e398 <wcrtomb@plt+0x19778>
  41e3d0:	mov	w21, #0x1                   	// #1
  41e3d4:	mov	w0, w21
  41e3d8:	ldp	x19, x20, [sp, #16]
  41e3dc:	ldr	x21, [sp, #32]
  41e3e0:	ldp	x29, x30, [sp], #48
  41e3e4:	ret
  41e3e8:	mov	w21, #0x0                   	// #0
  41e3ec:	mov	w0, w21
  41e3f0:	ldp	x19, x20, [sp, #16]
  41e3f4:	ldr	x21, [sp, #32]
  41e3f8:	ldp	x29, x30, [sp], #48
  41e3fc:	ret
  41e400:	stp	x29, x30, [sp, #-80]!
  41e404:	mov	x29, sp
  41e408:	stp	x21, x22, [sp, #32]
  41e40c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41e410:	add	x21, x21, #0xa60
  41e414:	stp	x19, x20, [sp, #16]
  41e418:	ldr	x19, [x21, #16]
  41e41c:	cbz	x19, 41e47c <wcrtomb@plt+0x1985c>
  41e420:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  41e424:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41e428:	add	x20, x20, #0x2c0
  41e42c:	add	x22, x22, #0xd48
  41e430:	stp	x23, x24, [sp, #48]
  41e434:	adrp	x23, 456000 <_obstack_memory_used@@Base+0x13e10>
  41e438:	add	x23, x23, #0x638
  41e43c:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  41e440:	str	x25, [sp, #64]
  41e444:	nop
  41e448:	ldr	x0, [x20]
  41e44c:	ldr	x1, [x19, #48]
  41e450:	cbnz	x0, 41e51c <wcrtomb@plt+0x198fc>
  41e454:	cmp	x1, #0x0
  41e458:	cset	w0, eq  // eq = none
  41e45c:	cbz	w0, 41e46c <wcrtomb@plt+0x1984c>
  41e460:	ldr	x0, [x19, #16]
  41e464:	ldrb	w1, [x0]
  41e468:	cbnz	w1, 41e528 <wcrtomb@plt+0x19908>
  41e46c:	ldr	x19, [x19]
  41e470:	cbnz	x19, 41e448 <wcrtomb@plt+0x19828>
  41e474:	ldp	x23, x24, [sp, #48]
  41e478:	ldr	x25, [sp, #64]
  41e47c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41e480:	str	xzr, [x21, #16]
  41e484:	ldrb	w0, [x0, #584]
  41e488:	str	xzr, [x21, #168]
  41e48c:	cbz	w0, 41e50c <wcrtomb@plt+0x198ec>
  41e490:	adrp	x21, 456000 <_obstack_memory_used@@Base+0x13e10>
  41e494:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41e498:	add	x21, x21, #0x618
  41e49c:	add	x20, x20, #0xd48
  41e4a0:	b	41e500 <wcrtomb@plt+0x198e0>
  41e4a4:	ldr	x19, [x0, #24]
  41e4a8:	mov	x0, x19
  41e4ac:	cbz	x19, 41e50c <wcrtomb@plt+0x198ec>
  41e4b0:	bl	41c928 <wcrtomb@plt+0x17d08>
  41e4b4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41e4b8:	ldr	x0, [x0, #952]
  41e4bc:	cbz	x0, 41e4c4 <wcrtomb@plt+0x198a4>
  41e4c0:	blr	x0
  41e4c4:	mov	w2, #0x5                   	// #5
  41e4c8:	mov	x1, x21
  41e4cc:	mov	x0, #0x0                   	// #0
  41e4d0:	bl	4049c0 <dcgettext@plt>
  41e4d4:	mov	x2, x0
  41e4d8:	mov	x0, x19
  41e4dc:	mov	x19, x2
  41e4e0:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41e4e4:	mov	x3, x0
  41e4e8:	mov	x2, x19
  41e4ec:	mov	w0, #0x0                   	// #0
  41e4f0:	mov	w1, #0x0                   	// #0
  41e4f4:	bl	404050 <error@plt>
  41e4f8:	mov	w0, #0x2                   	// #2
  41e4fc:	str	w0, [x20]
  41e500:	mov	w0, #0x1                   	// #1
  41e504:	bl	41cde0 <wcrtomb@plt+0x181c0>
  41e508:	cbnz	x0, 41e4a4 <wcrtomb@plt+0x19884>
  41e50c:	ldp	x19, x20, [sp, #16]
  41e510:	ldp	x21, x22, [sp, #32]
  41e514:	ldp	x29, x30, [sp], #80
  41e518:	ret
  41e51c:	cmp	x0, x1
  41e520:	cset	w0, hi  // hi = pmore
  41e524:	b	41e45c <wcrtomb@plt+0x1983c>
  41e528:	bl	41c928 <wcrtomb@plt+0x17d08>
  41e52c:	ldr	x0, [x24, #952]
  41e530:	cbz	x0, 41e538 <wcrtomb@plt+0x19918>
  41e534:	blr	x0
  41e538:	ldr	x0, [x19, #48]
  41e53c:	cbnz	x0, 41e57c <wcrtomb@plt+0x1995c>
  41e540:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41e544:	mov	w2, #0x5                   	// #5
  41e548:	add	x1, x1, #0x618
  41e54c:	bl	4049c0 <dcgettext@plt>
  41e550:	mov	x25, x0
  41e554:	ldr	x0, [x19, #16]
  41e558:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41e55c:	mov	x3, x0
  41e560:	mov	x2, x25
  41e564:	mov	w0, #0x0                   	// #0
  41e568:	mov	w1, #0x0                   	// #0
  41e56c:	bl	404050 <error@plt>
  41e570:	mov	w0, #0x2                   	// #2
  41e574:	str	w0, [x22]
  41e578:	b	41e46c <wcrtomb@plt+0x1984c>
  41e57c:	mov	x1, x23
  41e580:	mov	w2, #0x5                   	// #5
  41e584:	mov	x0, #0x0                   	// #0
  41e588:	bl	4049c0 <dcgettext@plt>
  41e58c:	mov	x25, x0
  41e590:	b	41e554 <wcrtomb@plt+0x19934>
  41e594:	nop
  41e598:	stp	x29, x30, [sp, #-32]!
  41e59c:	mov	x29, sp
  41e5a0:	stp	x19, x20, [sp, #16]
  41e5a4:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41e5a8:	add	x20, x20, #0xa60
  41e5ac:	ldr	x0, [x20, #16]
  41e5b0:	cbz	x0, 41e640 <wcrtomb@plt+0x19a20>
  41e5b4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  41e5b8:	ldr	x2, [x1, #704]
  41e5bc:	nop
  41e5c0:	ldr	x1, [x0, #48]
  41e5c4:	cbnz	x2, 41e64c <wcrtomb@plt+0x19a2c>
  41e5c8:	cmp	x1, #0x0
  41e5cc:	cset	w1, ne  // ne = any
  41e5d0:	cbnz	w1, 41e640 <wcrtomb@plt+0x19a20>
  41e5d4:	ldr	x0, [x0]
  41e5d8:	cbnz	x0, 41e5c0 <wcrtomb@plt+0x199a0>
  41e5dc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41e5e0:	ldr	w0, [x0, #588]
  41e5e4:	cbnz	w0, 41e658 <wcrtomb@plt+0x19a38>
  41e5e8:	mov	w0, #0x1                   	// #1
  41e5ec:	bl	4260d0 <wcrtomb@plt+0x214b0>
  41e5f0:	ldr	x19, [x20, #16]
  41e5f4:	cbnz	x19, 41e604 <wcrtomb@plt+0x199e4>
  41e5f8:	b	41e610 <wcrtomb@plt+0x199f0>
  41e5fc:	ldr	x19, [x19]
  41e600:	cbz	x19, 41e610 <wcrtomb@plt+0x199f0>
  41e604:	ldr	x0, [x19, #16]
  41e608:	bl	41c928 <wcrtomb@plt+0x17d08>
  41e60c:	cbz	w0, 41e5fc <wcrtomb@plt+0x199dc>
  41e610:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41e614:	str	xzr, [x20, #16]
  41e618:	str	xzr, [x20, #168]
  41e61c:	ldrb	w0, [x0, #584]
  41e620:	cbz	w0, 41e640 <wcrtomb@plt+0x19a20>
  41e624:	mov	w0, #0x1                   	// #1
  41e628:	bl	41cde0 <wcrtomb@plt+0x181c0>
  41e62c:	cbz	x0, 41e640 <wcrtomb@plt+0x19a20>
  41e630:	ldr	x0, [x0, #24]
  41e634:	cbz	x0, 41e640 <wcrtomb@plt+0x19a20>
  41e638:	bl	41c928 <wcrtomb@plt+0x17d08>
  41e63c:	cbz	w0, 41e624 <wcrtomb@plt+0x19a04>
  41e640:	ldp	x19, x20, [sp, #16]
  41e644:	ldp	x29, x30, [sp], #32
  41e648:	ret
  41e64c:	cmp	x2, x1
  41e650:	cset	w1, ls  // ls = plast
  41e654:	b	41e5d0 <wcrtomb@plt+0x199b0>
  41e658:	mov	w2, #0x5                   	// #5
  41e65c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41e660:	mov	x0, #0x0                   	// #0
  41e664:	add	x1, x1, #0x668
  41e668:	bl	4049c0 <dcgettext@plt>
  41e66c:	mov	x2, x0
  41e670:	mov	w1, #0x0                   	// #0
  41e674:	mov	w0, #0x0                   	// #0
  41e678:	bl	404050 <error@plt>
  41e67c:	b	41e5e8 <wcrtomb@plt+0x199c8>
  41e680:	sub	sp, sp, #0x200
  41e684:	stp	x29, x30, [sp]
  41e688:	mov	x29, sp
  41e68c:	stp	x23, x24, [sp, #48]
  41e690:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41e694:	add	x23, x23, #0xa60
  41e698:	stp	x19, x20, [sp, #16]
  41e69c:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  41e6a0:	stp	x21, x22, [sp, #32]
  41e6a4:	stp	x25, x26, [sp, #64]
  41e6a8:	bl	41dd58 <wcrtomb@plt+0x19138>
  41e6ac:	ldr	x19, [x23, #16]
  41e6b0:	cbz	x19, 41e998 <wcrtomb@plt+0x19d78>
  41e6b4:	ldr	x0, [x24, #776]
  41e6b8:	cbz	x0, 41e6e4 <wcrtomb@plt+0x19ac4>
  41e6bc:	bl	41bb28 <wcrtomb@plt+0x16f08>
  41e6c0:	cbz	w0, 41e6d8 <wcrtomb@plt+0x19ab8>
  41e6c4:	cmp	w0, #0x1
  41e6c8:	b.ne	41ea60 <wcrtomb@plt+0x19e40>  // b.any
  41e6cc:	ldr	x0, [x23, #16]
  41e6d0:	ldr	w0, [x0, #40]
  41e6d4:	cbz	w0, 41ea24 <wcrtomb@plt+0x19e04>
  41e6d8:	bl	416758 <wcrtomb@plt+0x11b38>
  41e6dc:	ldr	x19, [x23, #16]
  41e6e0:	cbz	x19, 41e990 <wcrtomb@plt+0x19d70>
  41e6e4:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  41e6e8:	add	x22, sp, #0xb0
  41e6ec:	add	x21, x21, #0x28c
  41e6f0:	mov	w20, #0x0                   	// #0
  41e6f4:	adrp	x25, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  41e6f8:	b	41e708 <wcrtomb@plt+0x19ae8>
  41e6fc:	ldr	x19, [x19]
  41e700:	add	w20, w20, #0x1
  41e704:	cbz	x19, 41e770 <wcrtomb@plt+0x19b50>
  41e708:	ldr	x0, [x19, #48]
  41e70c:	cbnz	x0, 41e6fc <wcrtomb@plt+0x19adc>
  41e710:	ldr	x0, [x19, #56]
  41e714:	cbnz	x0, 41e6fc <wcrtomb@plt+0x19adc>
  41e718:	ldr	w0, [x19, #32]
  41e71c:	tbnz	w0, #28, 41e6fc <wcrtomb@plt+0x19adc>
  41e720:	ldr	w0, [x19, #40]
  41e724:	bl	41bb88 <wcrtomb@plt+0x16f68>
  41e728:	ldr	x0, [x19, #16]
  41e72c:	ldrb	w0, [x0]
  41e730:	cbz	w0, 41e6fc <wcrtomb@plt+0x19adc>
  41e734:	add	x0, sp, #0x58
  41e738:	bl	425f70 <wcrtomb@plt+0x21350>
  41e73c:	ldr	x0, [x19, #16]
  41e740:	mov	x1, x22
  41e744:	bl	41b9a0 <wcrtomb@plt+0x16d80>
  41e748:	cbnz	w0, 41e9bc <wcrtomb@plt+0x19d9c>
  41e74c:	ldr	w0, [sp, #192]
  41e750:	and	w0, w0, #0xf000
  41e754:	cmp	w0, #0x4, lsl #12
  41e758:	b.eq	41e954 <wcrtomb@plt+0x19d34>  // b.none
  41e75c:	add	x0, sp, #0x58
  41e760:	bl	425ff8 <wcrtomb@plt+0x213d8>
  41e764:	ldr	x19, [x19]
  41e768:	add	w20, w20, #0x1
  41e76c:	cbnz	x19, 41e708 <wcrtomb@plt+0x19ae8>
  41e770:	ldr	x19, [x23, #16]
  41e774:	mov	w1, w20
  41e778:	mov	x0, x19
  41e77c:	adrp	x2, 41c000 <wcrtomb@plt+0x173e0>
  41e780:	add	x2, x2, #0x778
  41e784:	bl	41c588 <wcrtomb@plt+0x17968>
  41e788:	mov	x2, #0x0                   	// #0
  41e78c:	mov	x5, x0
  41e790:	mov	x1, x0
  41e794:	cbz	x0, 41e7a8 <wcrtomb@plt+0x19b88>
  41e798:	str	x2, [x1, #8]
  41e79c:	mov	x2, x1
  41e7a0:	ldr	x1, [x1]
  41e7a4:	cbnz	x1, 41e798 <wcrtomb@plt+0x19b78>
  41e7a8:	adrp	x3, 41c000 <wcrtomb@plt+0x173e0>
  41e7ac:	adrp	x2, 41c000 <wcrtomb@plt+0x173e0>
  41e7b0:	add	x3, x3, #0x750
  41e7b4:	add	x2, x2, #0x9d0
  41e7b8:	mov	x4, #0x0                   	// #0
  41e7bc:	mov	x1, #0x0                   	// #0
  41e7c0:	mov	x0, #0x0                   	// #0
  41e7c4:	str	x5, [x23, #16]
  41e7c8:	bl	438760 <argp_parse@@Base+0x4878>
  41e7cc:	mov	w22, #0x0                   	// #0
  41e7d0:	ldr	x21, [x23, #16]
  41e7d4:	mov	x25, x0
  41e7d8:	mov	x26, #0x0                   	// #0
  41e7dc:	cbz	x21, 41e84c <wcrtomb@plt+0x19c2c>
  41e7e0:	ldr	w0, [x21, #40]
  41e7e4:	mov	x19, x21
  41e7e8:	ldr	x1, [x21, #16]
  41e7ec:	ldr	x21, [x21]
  41e7f0:	bl	41afc0 <wcrtomb@plt+0x163a0>
  41e7f4:	str	x0, [x19, #88]
  41e7f8:	cbz	x26, 41e910 <wcrtomb@plt+0x19cf0>
  41e7fc:	mov	x1, x19
  41e800:	mov	x0, x25
  41e804:	bl	4384c8 <argp_parse@@Base+0x45e0>
  41e808:	mov	x20, x0
  41e80c:	cbz	x0, 41e910 <wcrtomb@plt+0x19cf0>
  41e810:	ldr	x0, [x19, #64]
  41e814:	cbz	x0, 41e8d0 <wcrtomb@plt+0x19cb0>
  41e818:	ldr	x0, [x19, #72]
  41e81c:	cbz	x0, 41e828 <wcrtomb@plt+0x19c08>
  41e820:	ldp	x1, x2, [x20, #16]
  41e824:	bl	41cc28 <wcrtomb@plt+0x18008>
  41e828:	ldp	x0, x1, [x19]
  41e82c:	cbz	x1, 41e934 <wcrtomb@plt+0x19d14>
  41e830:	str	x0, [x1]
  41e834:	ldr	x0, [x19]
  41e838:	cbz	x0, 41e93c <wcrtomb@plt+0x19d1c>
  41e83c:	str	x1, [x0, #8]
  41e840:	mov	x0, x19
  41e844:	bl	41ca30 <wcrtomb@plt+0x17e10>
  41e848:	cbnz	x21, 41e7e0 <wcrtomb@plt+0x19bc0>
  41e84c:	mov	x0, x25
  41e850:	str	x26, [x23, #168]
  41e854:	bl	4388f8 <argp_parse@@Base+0x4a10>
  41e858:	ldr	x0, [x23, #16]
  41e85c:	adrp	x2, 41c000 <wcrtomb@plt+0x173e0>
  41e860:	mov	w1, w22
  41e864:	add	x2, x2, #0x9d8
  41e868:	bl	41c588 <wcrtomb@plt+0x17968>
  41e86c:	cbz	x0, 41e9c8 <wcrtomb@plt+0x19da8>
  41e870:	mov	x1, x0
  41e874:	mov	x2, #0x0                   	// #0
  41e878:	str	x2, [x1, #8]
  41e87c:	mov	x2, x1
  41e880:	ldr	x1, [x1]
  41e884:	cbnz	x1, 41e878 <wcrtomb@plt+0x19c58>
  41e888:	ldr	x1, [x24, #776]
  41e88c:	str	x0, [x23, #16]
  41e890:	cbnz	x1, 41e8a0 <wcrtomb@plt+0x19c80>
  41e894:	b	41e8b4 <wcrtomb@plt+0x19c94>
  41e898:	ldr	x0, [x0]
  41e89c:	cbz	x0, 41e8b4 <wcrtomb@plt+0x19c94>
  41e8a0:	ldr	x1, [x0, #16]
  41e8a4:	ldrb	w1, [x1]
  41e8a8:	cbz	w1, 41e898 <wcrtomb@plt+0x19c78>
  41e8ac:	ldr	x0, [x0, #56]
  41e8b0:	bl	416370 <wcrtomb@plt+0x11750>
  41e8b4:	ldp	x29, x30, [sp]
  41e8b8:	ldp	x19, x20, [sp, #16]
  41e8bc:	ldp	x21, x22, [sp, #32]
  41e8c0:	ldp	x23, x24, [sp, #48]
  41e8c4:	ldp	x25, x26, [sp, #64]
  41e8c8:	add	sp, sp, #0x200
  41e8cc:	ret
  41e8d0:	ldr	x0, [x20, #72]
  41e8d4:	cbz	x0, 41e8e0 <wcrtomb@plt+0x19cc0>
  41e8d8:	ldp	x1, x2, [x19, #16]
  41e8dc:	bl	41cc28 <wcrtomb@plt+0x18008>
  41e8e0:	mov	x1, x19
  41e8e4:	mov	x0, x25
  41e8e8:	bl	438d00 <argp_parse@@Base+0x4e18>
  41e8ec:	ldp	x1, x0, [x20]
  41e8f0:	cbz	x0, 41e944 <wcrtomb@plt+0x19d24>
  41e8f4:	str	x1, [x0]
  41e8f8:	ldr	x1, [x20]
  41e8fc:	cbz	x1, 41e94c <wcrtomb@plt+0x19d2c>
  41e900:	str	x0, [x1, #8]
  41e904:	mov	x0, x20
  41e908:	sub	w22, w22, #0x1
  41e90c:	bl	41ca30 <wcrtomb@plt+0x17e10>
  41e910:	str	xzr, [x19, #48]
  41e914:	mov	x1, x19
  41e918:	mov	x0, x25
  41e91c:	bl	438cb8 <argp_parse@@Base+0x4dd0>
  41e920:	cbz	x0, 41ea20 <wcrtomb@plt+0x19e00>
  41e924:	add	w22, w22, #0x1
  41e928:	mov	x26, x19
  41e92c:	cbnz	x21, 41e7e0 <wcrtomb@plt+0x19bc0>
  41e930:	b	41e84c <wcrtomb@plt+0x19c2c>
  41e934:	str	x0, [x23, #16]
  41e938:	cbnz	x0, 41e83c <wcrtomb@plt+0x19c1c>
  41e93c:	str	x1, [x23, #168]
  41e940:	b	41e840 <wcrtomb@plt+0x19c20>
  41e944:	str	x1, [x23, #16]
  41e948:	cbnz	x1, 41e900 <wcrtomb@plt+0x19ce0>
  41e94c:	str	x0, [x23, #168]
  41e950:	b	41e904 <wcrtomb@plt+0x19ce4>
  41e954:	ldr	w0, [x25, #2184]
  41e958:	ldr	x1, [x19, #16]
  41e95c:	ldr	w2, [x21]
  41e960:	orr	w2, w2, #0x4000
  41e964:	bl	4045b0 <__openat_2@plt>
  41e968:	mov	w1, w0
  41e96c:	tbnz	w0, #31, 41e9e8 <wcrtomb@plt+0x19dc8>
  41e970:	mov	x2, x22
  41e974:	mov	w0, #0x0                   	// #0
  41e978:	str	w1, [sp, #496]
  41e97c:	bl	4049a0 <__fxstat@plt>
  41e980:	cbz	w0, 41e9f4 <wcrtomb@plt+0x19dd4>
  41e984:	ldr	x0, [x19, #16]
  41e988:	bl	41bdb8 <wcrtomb@plt+0x17198>
  41e98c:	b	41e75c <wcrtomb@plt+0x19b3c>
  41e990:	mov	w20, #0x0                   	// #0
  41e994:	b	41e774 <wcrtomb@plt+0x19b54>
  41e998:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  41e99c:	mov	x3, #0x0                   	// #0
  41e9a0:	add	x0, x0, #0x668
  41e9a4:	mov	w2, #0x0                   	// #0
  41e9a8:	mov	w1, #0x0                   	// #0
  41e9ac:	bl	41dcb0 <wcrtomb@plt+0x19090>
  41e9b0:	ldr	x0, [x24, #776]
  41e9b4:	cbnz	x0, 41e6bc <wcrtomb@plt+0x19a9c>
  41e9b8:	b	41e6dc <wcrtomb@plt+0x19abc>
  41e9bc:	ldr	x0, [x19, #16]
  41e9c0:	bl	41bdb8 <wcrtomb@plt+0x17198>
  41e9c4:	b	41e6fc <wcrtomb@plt+0x19adc>
  41e9c8:	str	xzr, [x23, #16]
  41e9cc:	ldp	x29, x30, [sp]
  41e9d0:	ldp	x19, x20, [sp, #16]
  41e9d4:	ldp	x21, x22, [sp, #32]
  41e9d8:	ldp	x23, x24, [sp, #48]
  41e9dc:	ldp	x25, x26, [sp, #64]
  41e9e0:	add	sp, sp, #0x200
  41e9e4:	ret
  41e9e8:	ldr	x0, [x19, #16]
  41e9ec:	bl	41bcf0 <wcrtomb@plt+0x170d0>
  41e9f0:	b	41e75c <wcrtomb@plt+0x19b3c>
  41e9f4:	ldr	x0, [x19, #16]
  41e9f8:	bl	441170 <argp_parse@@Base+0xd288>
  41e9fc:	mov	x3, x0
  41ea00:	ldr	x2, [x19, #48]
  41ea04:	mov	x1, x19
  41ea08:	add	x0, sp, #0x58
  41ea0c:	str	x3, [sp, #88]
  41ea10:	add	x2, x2, #0x1
  41ea14:	str	x2, [x19, #48]
  41ea18:	bl	41dea0 <wcrtomb@plt+0x19280>
  41ea1c:	b	41e75c <wcrtomb@plt+0x19b3c>
  41ea20:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  41ea24:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41ea28:	ldr	x0, [x0, #952]
  41ea2c:	cbz	x0, 41ea34 <wcrtomb@plt+0x19e14>
  41ea30:	blr	x0
  41ea34:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41ea38:	add	x1, x1, #0x680
  41ea3c:	mov	w2, #0x5                   	// #5
  41ea40:	mov	x0, #0x0                   	// #0
  41ea44:	bl	4049c0 <dcgettext@plt>
  41ea48:	mov	x2, x0
  41ea4c:	mov	w1, #0x0                   	// #0
  41ea50:	mov	w0, #0x0                   	// #0
  41ea54:	bl	404050 <error@plt>
  41ea58:	mov	w0, #0x2                   	// #2
  41ea5c:	bl	423220 <wcrtomb@plt+0x1e600>
  41ea60:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41ea64:	ldr	x0, [x0, #952]
  41ea68:	cbz	x0, 41ea70 <wcrtomb@plt+0x19e50>
  41ea6c:	blr	x0
  41ea70:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x13e10>
  41ea74:	mov	w2, #0x5                   	// #5
  41ea78:	add	x1, x1, #0x6d0
  41ea7c:	b	41ea40 <wcrtomb@plt+0x19e20>
  41ea80:	stp	x29, x30, [sp, #-48]!
  41ea84:	mov	x29, sp
  41ea88:	stp	x19, x20, [sp, #16]
  41ea8c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41ea90:	add	x20, x20, #0xa60
  41ea94:	stp	x21, x22, [sp, #32]
  41ea98:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  41ea9c:	mov	x21, x0
  41eaa0:	add	x22, x22, #0x248
  41eaa4:	b	41ead0 <wcrtomb@plt+0x19eb0>
  41eaa8:	ldrb	w1, [x22]
  41eaac:	cbz	w1, 41eae0 <wcrtomb@plt+0x19ec0>
  41eab0:	ldr	x1, [x20, #16]
  41eab4:	cbz	x1, 41eae0 <wcrtomb@plt+0x19ec0>
  41eab8:	ldr	x1, [x1, #48]
  41eabc:	cbz	x1, 41eae0 <wcrtomb@plt+0x19ec0>
  41eac0:	bl	41dd58 <wcrtomb@plt+0x19138>
  41eac4:	ldr	x0, [x20, #16]
  41eac8:	ldr	x1, [x0, #48]
  41eacc:	cbnz	x1, 41eae0 <wcrtomb@plt+0x19ec0>
  41ead0:	mov	x0, x21
  41ead4:	bl	41cbb8 <wcrtomb@plt+0x17f98>
  41ead8:	mov	x19, x0
  41eadc:	cbz	x0, 41eaa8 <wcrtomb@plt+0x19e88>
  41eae0:	mov	x0, x19
  41eae4:	ldp	x19, x20, [sp, #16]
  41eae8:	ldp	x21, x22, [sp, #32]
  41eaec:	ldp	x29, x30, [sp], #48
  41eaf0:	ret
  41eaf4:	nop
  41eaf8:	stp	x29, x30, [sp, #-32]!
  41eafc:	mov	x29, sp
  41eb00:	str	x19, [sp, #16]
  41eb04:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41eb08:	ldr	x1, [x19, #4056]
  41eb0c:	cbz	x1, 41eb60 <wcrtomb@plt+0x19f40>
  41eb10:	ldr	x0, [x1, #48]
  41eb14:	cbnz	x0, 41eb24 <wcrtomb@plt+0x19f04>
  41eb18:	ldr	x0, [x1, #16]
  41eb1c:	ldrb	w0, [x0]
  41eb20:	cbnz	w0, 41eb40 <wcrtomb@plt+0x19f20>
  41eb24:	ldr	x1, [x1]
  41eb28:	str	x1, [x19, #4056]
  41eb2c:	cbnz	x1, 41eb10 <wcrtomb@plt+0x19ef0>
  41eb30:	mov	x0, #0x0                   	// #0
  41eb34:	ldr	x19, [sp, #16]
  41eb38:	ldp	x29, x30, [sp], #32
  41eb3c:	ret
  41eb40:	ldr	w0, [x1, #40]
  41eb44:	mov	x2, #0x1                   	// #1
  41eb48:	str	x2, [x1, #48]
  41eb4c:	bl	41bb88 <wcrtomb@plt+0x16f68>
  41eb50:	ldr	x0, [x19, #4056]
  41eb54:	ldr	x19, [sp, #16]
  41eb58:	ldp	x29, x30, [sp], #32
  41eb5c:	ret
  41eb60:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41eb64:	ldr	x1, [x0, #2672]
  41eb68:	str	x1, [x19, #4056]
  41eb6c:	cbnz	x1, 41eb10 <wcrtomb@plt+0x19ef0>
  41eb70:	b	41eb30 <wcrtomb@plt+0x19f10>
  41eb74:	nop
  41eb78:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41eb7c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41eb80:	ldr	x0, [x0, #2672]
  41eb84:	str	xzr, [x1, #4056]
  41eb88:	cbz	x0, 41eb9c <wcrtomb@plt+0x19f7c>
  41eb8c:	nop
  41eb90:	str	xzr, [x0, #48]
  41eb94:	ldr	x0, [x0]
  41eb98:	cbnz	x0, 41eb90 <wcrtomb@plt+0x19f70>
  41eb9c:	ret
  41eba0:	stp	x29, x30, [sp, #-64]!
  41eba4:	mov	x29, sp
  41eba8:	stp	x19, x20, [sp, #16]
  41ebac:	mov	x20, x0
  41ebb0:	stp	x21, x22, [sp, #32]
  41ebb4:	mov	x21, x1
  41ebb8:	str	x23, [sp, #48]
  41ebbc:	bl	403ff0 <strlen@plt>
  41ebc0:	mov	x23, #0x0                   	// #0
  41ebc4:	mov	x19, x0
  41ebc8:	mov	x0, x21
  41ebcc:	bl	403ff0 <strlen@plt>
  41ebd0:	add	x22, x0, #0x1
  41ebd4:	cbz	x19, 41ebe8 <wcrtomb@plt+0x19fc8>
  41ebd8:	add	x0, x20, x19
  41ebdc:	ldurb	w0, [x0, #-1]
  41ebe0:	cmp	w0, #0x2f
  41ebe4:	cinc	x23, x19, ne  // ne = any
  41ebe8:	add	x0, x22, x23
  41ebec:	bl	440f48 <argp_parse@@Base+0xd060>
  41ebf0:	mov	x1, x20
  41ebf4:	mov	x20, x0
  41ebf8:	mov	x2, x19
  41ebfc:	bl	403f70 <memcpy@plt>
  41ec00:	mov	w3, #0x2f                  	// #47
  41ec04:	add	x0, x20, x23
  41ec08:	strb	w3, [x20, x19]
  41ec0c:	mov	x2, x22
  41ec10:	mov	x1, x21
  41ec14:	bl	403f70 <memcpy@plt>
  41ec18:	mov	x0, x20
  41ec1c:	ldp	x19, x20, [sp, #16]
  41ec20:	ldp	x21, x22, [sp, #32]
  41ec24:	ldr	x23, [sp, #48]
  41ec28:	ldp	x29, x30, [sp], #64
  41ec2c:	ret
  41ec30:	ldrb	w2, [x0]
  41ec34:	mov	x3, x0
  41ec38:	cmp	w2, #0x2f
  41ec3c:	b.ne	41ec4c <wcrtomb@plt+0x1a02c>  // b.any
  41ec40:	ldrb	w2, [x3, #1]!
  41ec44:	cmp	w2, #0x2f
  41ec48:	b.eq	41ec40 <wcrtomb@plt+0x1a020>  // b.none
  41ec4c:	cbz	w2, 41ec64 <wcrtomb@plt+0x1a044>
  41ec50:	add	x3, x3, #0x1
  41ec54:	cmp	w2, #0x2f
  41ec58:	b.eq	41ec6c <wcrtomb@plt+0x1a04c>  // b.none
  41ec5c:	ldrb	w2, [x3]
  41ec60:	cbnz	w2, 41ec50 <wcrtomb@plt+0x1a030>
  41ec64:	mov	x0, #0xffffffffffffffff    	// #-1
  41ec68:	ret
  41ec6c:	subs	x1, x1, #0x1
  41ec70:	b.eq	41ec90 <wcrtomb@plt+0x1a070>  // b.none
  41ec74:	ldrb	w2, [x3]
  41ec78:	cmp	w2, #0x2f
  41ec7c:	b.ne	41ec4c <wcrtomb@plt+0x1a02c>  // b.any
  41ec80:	ldrb	w2, [x3, #1]!
  41ec84:	cmp	w2, #0x2f
  41ec88:	b.eq	41ec80 <wcrtomb@plt+0x1a060>  // b.none
  41ec8c:	b	41ec4c <wcrtomb@plt+0x1a02c>
  41ec90:	sub	x0, x3, x0
  41ec94:	ret
  41ec98:	mov	x1, x0
  41ec9c:	ldrb	w2, [x1]
  41eca0:	cmp	w2, #0x2e
  41eca4:	b.ne	41ecb0 <wcrtomb@plt+0x1a090>  // b.any
  41eca8:	b	41ecc8 <wcrtomb@plt+0x1a0a8>
  41ecac:	ldrb	w2, [x1]
  41ecb0:	add	x1, x1, #0x1
  41ecb4:	cmp	w2, #0x2f
  41ecb8:	b.eq	41ec9c <wcrtomb@plt+0x1a07c>  // b.none
  41ecbc:	cbnz	w2, 41ecac <wcrtomb@plt+0x1a08c>
  41ecc0:	mov	w0, #0x0                   	// #0
  41ecc4:	ret
  41ecc8:	ldrb	w0, [x1, #1]
  41eccc:	cmp	w0, #0x2e
  41ecd0:	b.ne	41ecb0 <wcrtomb@plt+0x1a090>  // b.any
  41ecd4:	ldrb	w3, [x1, #2]
  41ecd8:	cmp	w3, #0x2f
  41ecdc:	cset	w0, eq  // eq = none
  41ece0:	cmp	w3, #0x0
  41ece4:	csinc	w0, w0, wzr, ne  // ne = any
  41ece8:	cbz	w0, 41ecb0 <wcrtomb@plt+0x1a090>
  41ecec:	ret
  41ecf0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41ecf4:	ldr	x0, [x0, #4016]
  41ecf8:	ldrb	w0, [x0, #156]
  41ecfc:	cmp	w0, #0x53
  41ed00:	cset	w0, eq  // eq = none
  41ed04:	ret
  41ed08:	ldr	x0, [x0, #24]
  41ed0c:	ldr	x1, [x0, #288]
  41ed10:	cbnz	x1, 41ed24 <wcrtomb@plt+0x1a104>
  41ed14:	ldr	w0, [x0, #276]
  41ed18:	cmp	w0, #0x0
  41ed1c:	cset	w0, ne  // ne = any
  41ed20:	ret
  41ed24:	mov	w0, #0x1                   	// #1
  41ed28:	ret
  41ed2c:	nop
  41ed30:	mov	x2, x0
  41ed34:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41ed38:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41ed3c:	stp	xzr, xzr, [x2]
  41ed40:	ldr	w1, [x1, #3992]
  41ed44:	ldr	w0, [x0, #760]
  41ed48:	cmp	w1, #0x0
  41ed4c:	stp	xzr, xzr, [x2, #16]
  41ed50:	csel	w1, w0, w1, eq  // eq = none
  41ed54:	stp	xzr, xzr, [x2, #32]
  41ed58:	cmp	w1, #0x5
  41ed5c:	b.eq	41edb0 <wcrtomb@plt+0x1a190>  // b.none
  41ed60:	b.hi	41ed90 <wcrtomb@plt+0x1a170>  // b.pmore
  41ed64:	cmp	w1, #0x2
  41ed68:	b.eq	41ed9c <wcrtomb@plt+0x1a17c>  // b.none
  41ed6c:	cmp	w1, #0x4
  41ed70:	mov	w0, #0x0                   	// #0
  41ed74:	b.ne	41ed8c <wcrtomb@plt+0x1a16c>  // b.any
  41ed78:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  41ed7c:	add	x0, x0, #0x3e8
  41ed80:	add	x0, x0, #0x48
  41ed84:	str	x0, [x2, #32]
  41ed88:	mov	w0, #0x1                   	// #1
  41ed8c:	ret
  41ed90:	cmp	w1, #0x6
  41ed94:	mov	w0, #0x0                   	// #0
  41ed98:	b.ne	41ed8c <wcrtomb@plt+0x1a16c>  // b.any
  41ed9c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  41eda0:	add	x0, x0, #0x3e8
  41eda4:	str	x0, [x2, #32]
  41eda8:	mov	w0, #0x1                   	// #1
  41edac:	b	41ed8c <wcrtomb@plt+0x1a16c>
  41edb0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  41edb4:	add	x0, x0, #0x3e8
  41edb8:	add	x0, x0, #0x90
  41edbc:	str	x0, [x2, #32]
  41edc0:	mov	w0, #0x1                   	// #1
  41edc4:	b	41ed8c <wcrtomb@plt+0x1a16c>
  41edc8:	stp	x29, x30, [sp, #-32]!
  41edcc:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41edd0:	mov	x1, #0xc                   	// #12
  41edd4:	mov	x29, sp
  41edd8:	str	x19, [sp, #16]
  41eddc:	mov	x19, x0
  41ede0:	ldr	x0, [x2, #4016]
  41ede4:	add	x0, x0, #0x1c4
  41ede8:	bl	418f70 <wcrtomb@plt+0x14350>
  41edec:	ldr	x2, [x19, #24]
  41edf0:	cmp	x0, #0x0
  41edf4:	csel	x1, x0, xzr, ge  // ge = tcont
  41edf8:	mvn	x4, x0
  41edfc:	ldr	x19, [sp, #16]
  41ee00:	lsr	x0, x4, #63
  41ee04:	ldr	x3, [x2, #136]
  41ee08:	str	x1, [x2, #136]
  41ee0c:	str	x3, [x2, #264]
  41ee10:	ldp	x29, x30, [sp], #32
  41ee14:	ret
  41ee18:	stp	x29, x30, [sp, #-32]!
  41ee1c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41ee20:	mov	x1, #0xc                   	// #12
  41ee24:	mov	x29, sp
  41ee28:	str	x19, [sp, #16]
  41ee2c:	mov	x19, x0
  41ee30:	ldr	x0, [x2, #4016]
  41ee34:	add	x0, x0, #0x1e3
  41ee38:	bl	418f70 <wcrtomb@plt+0x14350>
  41ee3c:	ldr	x2, [x19, #24]
  41ee40:	cmp	x0, #0x0
  41ee44:	csel	x1, x0, xzr, ge  // ge = tcont
  41ee48:	mvn	x4, x0
  41ee4c:	ldr	x19, [sp, #16]
  41ee50:	lsr	x0, x4, #63
  41ee54:	ldr	x3, [x2, #136]
  41ee58:	str	x1, [x2, #136]
  41ee5c:	str	x3, [x2, #264]
  41ee60:	ldp	x29, x30, [sp], #32
  41ee64:	ret
  41ee68:	stp	x29, x30, [sp, #-64]!
  41ee6c:	mov	x29, sp
  41ee70:	stp	x19, x20, [sp, #16]
  41ee74:	mov	x20, x2
  41ee78:	stp	x21, x22, [sp, #32]
  41ee7c:	mov	x21, x1
  41ee80:	mov	x22, x0
  41ee84:	bl	404ad0 <__errno_location@plt>
  41ee88:	mov	x19, x0
  41ee8c:	add	x1, sp, #0x38
  41ee90:	mov	x0, x21
  41ee94:	mov	w3, #0x0                   	// #0
  41ee98:	mov	w2, #0xa                   	// #10
  41ee9c:	str	wzr, [x19]
  41eea0:	bl	4044b0 <__strtoul_internal@plt>
  41eea4:	cmp	x0, x20
  41eea8:	b.hi	41eee4 <wcrtomb@plt+0x1a2c4>  // b.pmore
  41eeac:	ldr	w2, [x19]
  41eeb0:	mov	x1, x0
  41eeb4:	mov	w0, #0x0                   	// #0
  41eeb8:	cmp	w2, #0x22
  41eebc:	b.eq	41eed4 <wcrtomb@plt+0x1a2b4>  // b.none
  41eec0:	ldr	x2, [sp, #56]
  41eec4:	ldrb	w2, [x2]
  41eec8:	cbnz	w2, 41eed4 <wcrtomb@plt+0x1a2b4>
  41eecc:	mov	w0, #0x1                   	// #1
  41eed0:	str	x1, [x22]
  41eed4:	ldp	x19, x20, [sp, #16]
  41eed8:	ldp	x21, x22, [sp, #32]
  41eedc:	ldp	x29, x30, [sp], #64
  41eee0:	ret
  41eee4:	mov	w0, #0x0                   	// #0
  41eee8:	ldp	x19, x20, [sp, #16]
  41eeec:	ldp	x21, x22, [sp, #32]
  41eef0:	ldp	x29, x30, [sp], #64
  41eef4:	ret
  41eef8:	stp	x29, x30, [sp, #-48]!
  41eefc:	mov	x29, sp
  41ef00:	stp	x21, x22, [sp, #32]
  41ef04:	ldrb	w21, [x0, #4]
  41ef08:	stp	x19, x20, [sp, #16]
  41ef0c:	mov	x19, x0
  41ef10:	mov	x20, x1
  41ef14:	cbz	w21, 41ef3c <wcrtomb@plt+0x1a31c>
  41ef18:	ldr	w0, [x0]
  41ef1c:	mov	w2, #0x0                   	// #0
  41ef20:	bl	4041d0 <lseek@plt>
  41ef24:	tbnz	x0, #63, 41efa4 <wcrtomb@plt+0x1a384>
  41ef28:	mov	w0, w21
  41ef2c:	ldp	x19, x20, [sp, #16]
  41ef30:	ldp	x21, x22, [sp, #32]
  41ef34:	ldp	x29, x30, [sp], #48
  41ef38:	ret
  41ef3c:	ldr	x2, [x0, #8]
  41ef40:	cmp	x1, x2
  41ef44:	b.lt	41ef98 <wcrtomb@plt+0x1a378>  // b.tstop
  41ef48:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x14e10>
  41ef4c:	add	x21, x21, #0x3e8
  41ef50:	add	x21, x21, #0xd8
  41ef54:	mov	x22, #0x200                 	// #512
  41ef58:	b.gt	41ef74 <wcrtomb@plt+0x1a354>
  41ef5c:	b	41efcc <wcrtomb@plt+0x1a3ac>
  41ef60:	ldr	x2, [x19, #8]
  41ef64:	add	x2, x0, x2
  41ef68:	str	x2, [x19, #8]
  41ef6c:	cmp	x20, x2
  41ef70:	b.le	41efcc <wcrtomb@plt+0x1a3ac>
  41ef74:	sub	x2, x20, x2
  41ef78:	ldr	w0, [x19]
  41ef7c:	cmp	x2, #0x200
  41ef80:	mov	x1, x21
  41ef84:	csel	x2, x2, x22, le
  41ef88:	bl	404620 <write@plt>
  41ef8c:	cmp	x0, #0x0
  41ef90:	b.gt	41ef60 <wcrtomb@plt+0x1a340>
  41ef94:	b.ne	41efa4 <wcrtomb@plt+0x1a384>  // b.any
  41ef98:	bl	404ad0 <__errno_location@plt>
  41ef9c:	mov	w1, #0x16                  	// #22
  41efa0:	str	w1, [x0]
  41efa4:	ldr	x0, [x19, #24]
  41efa8:	mov	x1, x20
  41efac:	mov	w21, #0x0                   	// #0
  41efb0:	ldr	x0, [x0]
  41efb4:	bl	41bd90 <wcrtomb@plt+0x17170>
  41efb8:	mov	w0, w21
  41efbc:	ldp	x19, x20, [sp, #16]
  41efc0:	ldp	x21, x22, [sp, #32]
  41efc4:	ldp	x29, x30, [sp], #48
  41efc8:	ret
  41efcc:	mov	w21, #0x1                   	// #1
  41efd0:	mov	w0, w21
  41efd4:	ldp	x19, x20, [sp, #16]
  41efd8:	ldp	x21, x22, [sp, #32]
  41efdc:	ldp	x29, x30, [sp], #48
  41efe0:	ret
  41efe4:	nop
  41efe8:	stp	x29, x30, [sp, #-64]!
  41efec:	mov	x29, sp
  41eff0:	stp	x19, x20, [sp, #16]
  41eff4:	lsl	x20, x1, #4
  41eff8:	mov	x19, x0
  41effc:	ldr	x1, [x0, #24]
  41f000:	stp	x23, x24, [sp, #48]
  41f004:	ldr	x1, [x1, #304]
  41f008:	ldr	x1, [x1, x20]
  41f00c:	bl	41eef8 <wcrtomb@plt+0x1a2d8>
  41f010:	ands	w23, w0, #0xff
  41f014:	b.eq	41f040 <wcrtomb@plt+0x1a420>  // b.none
  41f018:	ldr	x0, [x19, #24]
  41f01c:	stp	x21, x22, [sp, #32]
  41f020:	mov	x24, #0x200                 	// #512
  41f024:	ldr	x1, [x0, #304]
  41f028:	add	x20, x1, x20
  41f02c:	ldr	x21, [x20, #8]
  41f030:	cbnz	x21, 41f0b4 <wcrtomb@plt+0x1a494>
  41f034:	ldrb	w20, [x19, #4]
  41f038:	cbnz	w20, 41f0c0 <wcrtomb@plt+0x1a4a0>
  41f03c:	ldp	x21, x22, [sp, #32]
  41f040:	mov	w0, w23
  41f044:	ldp	x19, x20, [sp, #16]
  41f048:	ldp	x23, x24, [sp, #48]
  41f04c:	ldp	x29, x30, [sp], #64
  41f050:	ret
  41f054:	cmp	x21, #0x200
  41f058:	csel	x22, x21, x24, le
  41f05c:	bl	406220 <wcrtomb@plt+0x1600>
  41f060:	mov	x20, x0
  41f064:	cbz	x0, 41f0e4 <wcrtomb@plt+0x1a4c4>
  41f068:	bl	405b90 <wcrtomb@plt+0xf70>
  41f06c:	ldr	x3, [x19, #16]
  41f070:	mov	x1, x20
  41f074:	ldr	w0, [x19]
  41f078:	mov	x2, x22
  41f07c:	add	x3, x3, #0x200
  41f080:	str	x3, [x19, #16]
  41f084:	bl	41ba58 <wcrtomb@plt+0x16e38>
  41f088:	mov	x20, x0
  41f08c:	sub	x21, x21, x0
  41f090:	ldp	x0, x1, [x19, #16]
  41f094:	ldr	x1, [x1, #264]
  41f098:	sub	x0, x1, x0
  41f09c:	bl	4056c8 <wcrtomb@plt+0xaa8>
  41f0a0:	ldr	x1, [x19, #8]
  41f0a4:	cmp	x22, x20
  41f0a8:	add	x1, x1, x20
  41f0ac:	str	x1, [x19, #8]
  41f0b0:	b.ne	41f140 <wcrtomb@plt+0x1a520>  // b.any
  41f0b4:	cmp	x21, #0x0
  41f0b8:	b.gt	41f054 <wcrtomb@plt+0x1a434>
  41f0bc:	b	41f03c <wcrtomb@plt+0x1a41c>
  41f0c0:	ldr	w0, [x19]
  41f0c4:	bl	4218a8 <wcrtomb@plt+0x1cc88>
  41f0c8:	cbz	w0, 41f03c <wcrtomb@plt+0x1a41c>
  41f0cc:	ldr	x0, [x19, #24]
  41f0d0:	mov	w23, w20
  41f0d4:	ldr	x0, [x0]
  41f0d8:	bl	42a2a8 <wcrtomb@plt+0x25688>
  41f0dc:	ldp	x21, x22, [sp, #32]
  41f0e0:	b	41f040 <wcrtomb@plt+0x1a420>
  41f0e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41f0e8:	ldr	x0, [x0, #952]
  41f0ec:	cbz	x0, 41f0f4 <wcrtomb@plt+0x1a4d4>
  41f0f0:	blr	x0
  41f0f4:	mov	w2, #0x5                   	// #5
  41f0f8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  41f0fc:	mov	x0, #0x0                   	// #0
  41f100:	add	x1, x1, #0x6a8
  41f104:	bl	4049c0 <dcgettext@plt>
  41f108:	mov	x2, x0
  41f10c:	mov	w1, #0x0                   	// #0
  41f110:	mov	w0, #0x0                   	// #0
  41f114:	bl	404050 <error@plt>
  41f118:	mov	w23, #0x0                   	// #0
  41f11c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41f120:	mov	w1, #0x2                   	// #2
  41f124:	ldp	x19, x20, [sp, #16]
  41f128:	str	w1, [x0, #3400]
  41f12c:	mov	w0, w23
  41f130:	ldp	x21, x22, [sp, #32]
  41f134:	ldp	x23, x24, [sp, #48]
  41f138:	ldp	x29, x30, [sp], #64
  41f13c:	ret
  41f140:	ldr	x0, [x19, #24]
  41f144:	mov	x2, x22
  41f148:	mov	x1, x20
  41f14c:	mov	w23, #0x0                   	// #0
  41f150:	ldr	x0, [x0]
  41f154:	bl	42a2f8 <wcrtomb@plt+0x256d8>
  41f158:	mov	w0, w23
  41f15c:	ldp	x19, x20, [sp, #16]
  41f160:	ldp	x21, x22, [sp, #32]
  41f164:	ldp	x23, x24, [sp, #48]
  41f168:	ldp	x29, x30, [sp], #64
  41f16c:	ret
  41f170:	stp	x29, x30, [sp, #-240]!
  41f174:	mov	x29, sp
  41f178:	stp	x23, x24, [sp, #48]
  41f17c:	lsl	x24, x1, #4
  41f180:	ldr	x1, [x0, #24]
  41f184:	stp	x21, x22, [sp, #32]
  41f188:	mov	x22, x0
  41f18c:	stp	x25, x26, [sp, #64]
  41f190:	ldr	x1, [x1, #304]
  41f194:	add	x2, x1, x24
  41f198:	ldr	x1, [x1, x24]
  41f19c:	ldr	x21, [x2, #8]
  41f1a0:	bl	41eef8 <wcrtomb@plt+0x1a2d8>
  41f1a4:	ands	w25, w0, #0xff
  41f1a8:	b.eq	41f250 <wcrtomb@plt+0x1a630>  // b.none
  41f1ac:	cmp	x21, #0x0
  41f1b0:	mov	x23, #0x200                 	// #512
  41f1b4:	b.le	41f250 <wcrtomb@plt+0x1a630>
  41f1b8:	stp	x19, x20, [sp, #16]
  41f1bc:	b	41f1e8 <wcrtomb@plt+0x1a5c8>
  41f1c0:	cbz	x19, 41f268 <wcrtomb@plt+0x1a648>
  41f1c4:	bl	404410 <memset@plt>
  41f1c8:	sub	x21, x21, x19
  41f1cc:	ldr	x1, [x22, #16]
  41f1d0:	mov	x0, x20
  41f1d4:	add	x19, x1, x19
  41f1d8:	str	x19, [x22, #16]
  41f1dc:	bl	405b90 <wcrtomb@plt+0xf70>
  41f1e0:	cmp	x21, #0x0
  41f1e4:	b.le	41f340 <wcrtomb@plt+0x1a720>
  41f1e8:	cmp	x21, #0x200
  41f1ec:	csel	x26, x21, x23, le
  41f1f0:	bl	406220 <wcrtomb@plt+0x1600>
  41f1f4:	mov	x1, x0
  41f1f8:	mov	x20, x0
  41f1fc:	ldr	w0, [x22]
  41f200:	mov	x2, x26
  41f204:	bl	440470 <argp_parse@@Base+0xc588>
  41f208:	mov	x19, x0
  41f20c:	sub	x2, x23, x0
  41f210:	cmn	x19, #0x1
  41f214:	add	x0, x20, x0
  41f218:	mov	w1, #0x0                   	// #0
  41f21c:	b.ne	41f1c0 <wcrtomb@plt+0x1a5a0>  // b.any
  41f220:	ldr	x0, [x22, #24]
  41f224:	mov	x2, x26
  41f228:	mov	w25, #0x0                   	// #0
  41f22c:	ldr	x1, [x0, #304]
  41f230:	ldr	x0, [x0]
  41f234:	add	x3, x1, x24
  41f238:	ldr	x1, [x1, x24]
  41f23c:	ldr	x3, [x3, #8]
  41f240:	add	x1, x1, x3
  41f244:	sub	x1, x1, x21
  41f248:	bl	41bd18 <wcrtomb@plt+0x170f8>
  41f24c:	ldp	x19, x20, [sp, #16]
  41f250:	mov	w0, w25
  41f254:	ldp	x21, x22, [sp, #32]
  41f258:	ldp	x23, x24, [sp, #48]
  41f25c:	ldp	x25, x26, [sp, #64]
  41f260:	ldp	x29, x30, [sp], #240
  41f264:	ret
  41f268:	ldr	w1, [x22]
  41f26c:	add	x2, sp, #0x70
  41f270:	mov	w0, #0x0                   	// #0
  41f274:	bl	4049a0 <__fxstat@plt>
  41f278:	ldr	x1, [x22, #24]
  41f27c:	cbz	w0, 41f35c <wcrtomb@plt+0x1a73c>
  41f280:	ldr	x0, [x1, #304]
  41f284:	ldr	x19, [x1, #136]
  41f288:	add	x1, x0, x24
  41f28c:	ldr	x0, [x0, x24]
  41f290:	ldr	x1, [x1, #8]
  41f294:	add	x0, x0, x1
  41f298:	sub	x21, x0, x21
  41f29c:	sub	x19, x19, x21
  41f2a0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41f2a4:	ldr	w0, [x0, #408]
  41f2a8:	tbz	w0, #7, 41f314 <wcrtomb@plt+0x1a6f4>
  41f2ac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41f2b0:	ldr	x0, [x0, #952]
  41f2b4:	cbz	x0, 41f2bc <wcrtomb@plt+0x1a69c>
  41f2b8:	blr	x0
  41f2bc:	mov	x3, x19
  41f2c0:	mov	w4, #0x5                   	// #5
  41f2c4:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  41f2c8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  41f2cc:	add	x2, x2, #0xbe0
  41f2d0:	add	x1, x1, #0xc10
  41f2d4:	mov	x0, #0x0                   	// #0
  41f2d8:	bl	4048f0 <dcngettext@plt>
  41f2dc:	ldr	x1, [x22, #24]
  41f2e0:	mov	x20, x0
  41f2e4:	ldr	x0, [x1]
  41f2e8:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  41f2ec:	mov	x21, x0
  41f2f0:	add	x1, sp, #0x58
  41f2f4:	mov	x0, x19
  41f2f8:	bl	4398d8 <argp_parse@@Base+0x59f0>
  41f2fc:	mov	x4, x0
  41f300:	mov	x3, x21
  41f304:	mov	x2, x20
  41f308:	mov	w1, #0x0                   	// #0
  41f30c:	mov	w0, #0x0                   	// #0
  41f310:	bl	404050 <error@plt>
  41f314:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41f318:	ldrb	w0, [x0, #897]
  41f31c:	cbz	w0, 41f36c <wcrtomb@plt+0x1a74c>
  41f320:	mov	w25, #0x0                   	// #0
  41f324:	mov	w0, w25
  41f328:	ldp	x19, x20, [sp, #16]
  41f32c:	ldp	x21, x22, [sp, #32]
  41f330:	ldp	x23, x24, [sp, #48]
  41f334:	ldp	x25, x26, [sp, #64]
  41f338:	ldp	x29, x30, [sp], #240
  41f33c:	ret
  41f340:	mov	w0, w25
  41f344:	ldp	x19, x20, [sp, #16]
  41f348:	ldp	x21, x22, [sp, #32]
  41f34c:	ldp	x23, x24, [sp, #48]
  41f350:	ldp	x25, x26, [sp, #64]
  41f354:	ldp	x29, x30, [sp], #240
  41f358:	ret
  41f35c:	ldr	x19, [x1, #136]
  41f360:	ldr	x0, [sp, #160]
  41f364:	sub	x19, x19, x0
  41f368:	b	41f2a0 <wcrtomb@plt+0x1a680>
  41f36c:	mov	w0, #0x1                   	// #1
  41f370:	bl	4260d0 <wcrtomb@plt+0x214b0>
  41f374:	b	41f320 <wcrtomb@plt+0x1a700>
  41f378:	sub	sp, sp, #0x260
  41f37c:	stp	x29, x30, [sp]
  41f380:	mov	x29, sp
  41f384:	stp	x19, x20, [sp, #16]
  41f388:	mov	x20, x2
  41f38c:	stp	x21, x22, [sp, #32]
  41f390:	mov	x21, x0
  41f394:	stp	x23, x24, [sp, #48]
  41f398:	mov	x24, x1
  41f39c:	bl	41eef8 <wcrtomb@plt+0x1a2d8>
  41f3a0:	ands	w23, w0, #0xff
  41f3a4:	b.eq	41f40c <wcrtomb@plt+0x1a7ec>  // b.none
  41f3a8:	cmp	x24, x20
  41f3ac:	mov	x22, #0x200                 	// #512
  41f3b0:	b.ge	41f40c <wcrtomb@plt+0x1a7ec>  // b.tcont
  41f3b4:	nop
  41f3b8:	sub	x19, x20, x24
  41f3bc:	ldr	w0, [x21]
  41f3c0:	cmp	x19, #0x200
  41f3c4:	add	x1, sp, #0x60
  41f3c8:	csel	x19, x19, x22, le
  41f3cc:	mov	x2, x19
  41f3d0:	bl	440470 <argp_parse@@Base+0xc588>
  41f3d4:	mov	x6, x0
  41f3d8:	cmn	x0, #0x1
  41f3dc:	b.eq	41f428 <wcrtomb@plt+0x1a808>  // b.none
  41f3e0:	cbz	x0, 41f45c <wcrtomb@plt+0x1a83c>
  41f3e4:	add	x0, sp, #0x60
  41f3e8:	add	x5, x0, x6
  41f3ec:	mov	x3, x0
  41f3f0:	ldrb	w4, [x3], #1
  41f3f4:	cmp	x5, x3
  41f3f8:	cbnz	w4, 41f484 <wcrtomb@plt+0x1a864>
  41f3fc:	b.ne	41f3f0 <wcrtomb@plt+0x1a7d0>  // b.any
  41f400:	add	x24, x24, x6
  41f404:	cmp	x20, x24
  41f408:	b.gt	41f3b8 <wcrtomb@plt+0x1a798>
  41f40c:	mov	w0, w23
  41f410:	ldp	x29, x30, [sp]
  41f414:	ldp	x19, x20, [sp, #16]
  41f418:	ldp	x21, x22, [sp, #32]
  41f41c:	ldp	x23, x24, [sp, #48]
  41f420:	add	sp, sp, #0x260
  41f424:	ret
  41f428:	ldr	x0, [x21, #24]
  41f42c:	mov	w23, #0x0                   	// #0
  41f430:	mov	x2, x19
  41f434:	mov	x1, x24
  41f438:	ldr	x0, [x0]
  41f43c:	bl	41bd18 <wcrtomb@plt+0x170f8>
  41f440:	mov	w0, w23
  41f444:	ldp	x29, x30, [sp]
  41f448:	ldp	x19, x20, [sp, #16]
  41f44c:	ldp	x21, x22, [sp, #32]
  41f450:	ldp	x23, x24, [sp, #48]
  41f454:	add	sp, sp, #0x260
  41f458:	ret
  41f45c:	ldr	x19, [x21, #24]
  41f460:	mov	w2, #0x5                   	// #5
  41f464:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  41f468:	add	x1, x1, #0x7d0
  41f46c:	bl	4049c0 <dcgettext@plt>
  41f470:	mov	w23, #0x0                   	// #0
  41f474:	mov	x1, x0
  41f478:	mov	x0, x19
  41f47c:	bl	409930 <wcrtomb@plt+0x4d10>
  41f480:	b	41f440 <wcrtomb@plt+0x1a820>
  41f484:	mov	w2, #0x5                   	// #5
  41f488:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  41f48c:	ldr	x20, [x21, #24]
  41f490:	add	x1, x1, #0x328
  41f494:	mov	x0, #0x0                   	// #0
  41f498:	bl	4049c0 <dcgettext@plt>
  41f49c:	add	x1, sp, #0x48
  41f4a0:	mov	x19, x0
  41f4a4:	mov	x0, x24
  41f4a8:	bl	439858 <argp_parse@@Base+0x5970>
  41f4ac:	mov	x1, x19
  41f4b0:	mov	x2, x0
  41f4b4:	mov	w23, #0x0                   	// #0
  41f4b8:	mov	x0, x20
  41f4bc:	bl	409930 <wcrtomb@plt+0x4d10>
  41f4c0:	b	41f440 <wcrtomb@plt+0x1a820>
  41f4c4:	nop
  41f4c8:	sub	sp, sp, #0x250
  41f4cc:	stp	x29, x30, [sp]
  41f4d0:	mov	x29, sp
  41f4d4:	str	x25, [sp, #64]
  41f4d8:	lsl	x25, x1, #4
  41f4dc:	ldr	x1, [x0, #24]
  41f4e0:	stp	x19, x20, [sp, #16]
  41f4e4:	mov	x19, x0
  41f4e8:	stp	x23, x24, [sp, #48]
  41f4ec:	ldr	x1, [x1, #304]
  41f4f0:	ldr	x1, [x1, x25]
  41f4f4:	bl	41eef8 <wcrtomb@plt+0x1a2d8>
  41f4f8:	ands	w23, w0, #0xff
  41f4fc:	b.ne	41f51c <wcrtomb@plt+0x1a8fc>  // b.any
  41f500:	mov	w0, w23
  41f504:	ldp	x29, x30, [sp]
  41f508:	ldp	x19, x20, [sp, #16]
  41f50c:	ldp	x23, x24, [sp, #48]
  41f510:	ldr	x25, [sp, #64]
  41f514:	add	sp, sp, #0x250
  41f518:	ret
  41f51c:	ldp	x0, x2, [x19, #16]
  41f520:	mov	x24, #0x200                 	// #512
  41f524:	ldr	x1, [x2, #304]
  41f528:	ldr	x2, [x2, #264]
  41f52c:	add	x1, x1, x25
  41f530:	sub	x0, x2, x0
  41f534:	ldr	x20, [x1, #8]
  41f538:	bl	4056c8 <wcrtomb@plt+0xaa8>
  41f53c:	cmp	x20, #0x0
  41f540:	b.le	41f500 <wcrtomb@plt+0x1a8e0>
  41f544:	stp	x21, x22, [sp, #32]
  41f548:	b	41f5a8 <wcrtomb@plt+0x1a988>
  41f54c:	bl	405b90 <wcrtomb@plt+0xf70>
  41f550:	ldr	x3, [x19, #16]
  41f554:	mov	x2, x22
  41f558:	ldr	w0, [x19]
  41f55c:	add	x1, sp, #0x50
  41f560:	add	x3, x3, #0x200
  41f564:	str	x3, [x19, #16]
  41f568:	bl	440470 <argp_parse@@Base+0xc588>
  41f56c:	cmn	x0, #0x1
  41f570:	b.eq	41f620 <wcrtomb@plt+0x1aa00>  // b.none
  41f574:	cbz	x0, 41f650 <wcrtomb@plt+0x1aa30>
  41f578:	sub	x20, x20, x0
  41f57c:	ldp	x0, x1, [x19, #16]
  41f580:	ldr	x1, [x1, #264]
  41f584:	sub	x0, x1, x0
  41f588:	bl	4056c8 <wcrtomb@plt+0xaa8>
  41f58c:	mov	x2, x22
  41f590:	add	x1, sp, #0x50
  41f594:	mov	x0, x21
  41f598:	bl	4046d0 <memcmp@plt>
  41f59c:	cbnz	w0, 41f678 <wcrtomb@plt+0x1aa58>
  41f5a0:	cmp	x20, #0x0
  41f5a4:	b.le	41f600 <wcrtomb@plt+0x1a9e0>
  41f5a8:	cmp	x20, #0x200
  41f5ac:	csel	x22, x20, x24, le
  41f5b0:	bl	406220 <wcrtomb@plt+0x1600>
  41f5b4:	mov	x21, x0
  41f5b8:	cbnz	x0, 41f54c <wcrtomb@plt+0x1a92c>
  41f5bc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41f5c0:	ldr	x0, [x0, #952]
  41f5c4:	cbz	x0, 41f5cc <wcrtomb@plt+0x1a9ac>
  41f5c8:	blr	x0
  41f5cc:	mov	w2, #0x5                   	// #5
  41f5d0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  41f5d4:	mov	x0, #0x0                   	// #0
  41f5d8:	add	x1, x1, #0x6a8
  41f5dc:	bl	4049c0 <dcgettext@plt>
  41f5e0:	mov	x2, x0
  41f5e4:	mov	w1, #0x0                   	// #0
  41f5e8:	mov	w0, #0x0                   	// #0
  41f5ec:	bl	404050 <error@plt>
  41f5f0:	mov	w23, #0x0                   	// #0
  41f5f4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41f5f8:	mov	w1, #0x2                   	// #2
  41f5fc:	str	w1, [x0, #3400]
  41f600:	mov	w0, w23
  41f604:	ldp	x29, x30, [sp]
  41f608:	ldp	x19, x20, [sp, #16]
  41f60c:	ldp	x21, x22, [sp, #32]
  41f610:	ldp	x23, x24, [sp, #48]
  41f614:	ldr	x25, [sp, #64]
  41f618:	add	sp, sp, #0x250
  41f61c:	ret
  41f620:	ldr	x0, [x19, #24]
  41f624:	mov	x2, x22
  41f628:	mov	w23, #0x0                   	// #0
  41f62c:	ldr	x1, [x0, #304]
  41f630:	ldr	x0, [x0]
  41f634:	add	x3, x1, x25
  41f638:	ldr	x1, [x1, x25]
  41f63c:	ldr	x3, [x3, #8]
  41f640:	add	x1, x1, x3
  41f644:	sub	x1, x1, x20
  41f648:	bl	41bd18 <wcrtomb@plt+0x170f8>
  41f64c:	b	41f600 <wcrtomb@plt+0x1a9e0>
  41f650:	mov	w2, #0x5                   	// #5
  41f654:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  41f658:	add	x1, x1, #0x7d0
  41f65c:	bl	4049c0 <dcgettext@plt>
  41f660:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  41f664:	mov	x1, x0
  41f668:	mov	w23, #0x0                   	// #0
  41f66c:	add	x0, x2, #0x28
  41f670:	bl	409930 <wcrtomb@plt+0x4d10>
  41f674:	b	41f600 <wcrtomb@plt+0x1a9e0>
  41f678:	ldr	x19, [x19, #24]
  41f67c:	mov	w2, #0x5                   	// #5
  41f680:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  41f684:	mov	x0, #0x0                   	// #0
  41f688:	add	x1, x1, #0x710
  41f68c:	bl	4049c0 <dcgettext@plt>
  41f690:	mov	w23, #0x0                   	// #0
  41f694:	mov	x1, x0
  41f698:	mov	x0, x19
  41f69c:	bl	409930 <wcrtomb@plt+0x4d10>
  41f6a0:	b	41f600 <wcrtomb@plt+0x1a9e0>
  41f6a4:	nop
  41f6a8:	stp	x29, x30, [sp, #-48]!
  41f6ac:	mov	x29, sp
  41f6b0:	stp	x19, x20, [sp, #16]
  41f6b4:	mov	x19, x0
  41f6b8:	mov	x20, x1
  41f6bc:	ldr	x0, [x0, #288]
  41f6c0:	stp	x21, x22, [sp, #32]
  41f6c4:	ldr	x2, [x19, #296]
  41f6c8:	add	x21, x0, #0x1
  41f6cc:	lsl	x22, x0, #4
  41f6d0:	cmp	x0, x2
  41f6d4:	ldr	x0, [x19, #304]
  41f6d8:	b.eq	41f6fc <wcrtomb@plt+0x1aadc>  // b.none
  41f6dc:	add	x0, x0, x22
  41f6e0:	ldp	x2, x3, [x20]
  41f6e4:	stp	x2, x3, [x0]
  41f6e8:	str	x21, [x19, #288]
  41f6ec:	ldp	x19, x20, [sp, #16]
  41f6f0:	ldp	x21, x22, [sp, #32]
  41f6f4:	ldp	x29, x30, [sp], #48
  41f6f8:	ret
  41f6fc:	cbz	x0, 41f744 <wcrtomb@plt+0x1ab24>
  41f700:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  41f704:	movk	x1, #0x555, lsl #48
  41f708:	cmp	x2, x1
  41f70c:	b.cs	41f774 <wcrtomb@plt+0x1ab54>  // b.hs, b.nlast
  41f710:	add	x2, x21, x2, lsr #1
  41f714:	lsl	x1, x2, #4
  41f718:	str	x2, [x19, #296]
  41f71c:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  41f720:	str	x0, [x19, #304]
  41f724:	add	x0, x0, x22
  41f728:	ldp	x2, x3, [x20]
  41f72c:	stp	x2, x3, [x0]
  41f730:	str	x21, [x19, #288]
  41f734:	ldp	x19, x20, [sp, #16]
  41f738:	ldp	x21, x22, [sp, #32]
  41f73c:	ldp	x29, x30, [sp], #48
  41f740:	ret
  41f744:	cbz	x2, 41f760 <wcrtomb@plt+0x1ab40>
  41f748:	cmp	xzr, x2, lsr #60
  41f74c:	cset	x1, ne  // ne = any
  41f750:	tbnz	x22, #63, 41f774 <wcrtomb@plt+0x1ab54>
  41f754:	cbnz	x1, 41f774 <wcrtomb@plt+0x1ab54>
  41f758:	mov	x1, x22
  41f75c:	b	41f718 <wcrtomb@plt+0x1aaf8>
  41f760:	mov	x1, #0x80                  	// #128
  41f764:	mov	x2, #0x8                   	// #8
  41f768:	mov	x22, #0x0                   	// #0
  41f76c:	mov	x21, #0x1                   	// #1
  41f770:	b	41f718 <wcrtomb@plt+0x1aaf8>
  41f774:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  41f778:	sub	sp, sp, #0x250
  41f77c:	stp	x29, x30, [sp]
  41f780:	mov	x29, sp
  41f784:	stp	x21, x22, [sp, #32]
  41f788:	mov	x21, x0
  41f78c:	ldp	x22, x1, [x0, #24]
  41f790:	stp	xzr, xzr, [sp, #64]
  41f794:	ldr	x3, [x1, #48]
  41f798:	str	x23, [sp, #48]
  41f79c:	ldr	w23, [x0]
  41f7a0:	str	xzr, [x22, #264]
  41f7a4:	cbz	x3, 41f7bc <wcrtomb@plt+0x1ab9c>
  41f7a8:	mov	x2, #0x0                   	// #0
  41f7ac:	mov	w1, #0x0                   	// #0
  41f7b0:	blr	x3
  41f7b4:	tst	w0, #0xff
  41f7b8:	b.eq	41f8c4 <wcrtomb@plt+0x1aca4>  // b.none
  41f7bc:	add	x1, sp, #0x50
  41f7c0:	mov	w0, w23
  41f7c4:	mov	x2, #0x200                 	// #512
  41f7c8:	stp	x19, x20, [sp, #16]
  41f7cc:	bl	41b9c0 <wcrtomb@plt+0x16da0>
  41f7d0:	mov	x20, #0x0                   	// #0
  41f7d4:	mov	x19, x0
  41f7d8:	cbz	x0, 41f82c <wcrtomb@plt+0x1ac0c>
  41f7dc:	nop
  41f7e0:	cmn	x0, #0x1
  41f7e4:	b.eq	41f82c <wcrtomb@plt+0x1ac0c>  // b.none
  41f7e8:	add	x0, sp, #0x50
  41f7ec:	add	x3, x0, x19
  41f7f0:	mov	x1, x0
  41f7f4:	nop
  41f7f8:	ldrb	w2, [x1], #1
  41f7fc:	cmp	x3, x1
  41f800:	cbnz	w2, 41f8dc <wcrtomb@plt+0x1acbc>
  41f804:	b.ne	41f7f8 <wcrtomb@plt+0x1abd8>  // b.any
  41f808:	ldr	x0, [sp, #72]
  41f80c:	cbnz	x0, 41f88c <wcrtomb@plt+0x1ac6c>
  41f810:	add	x20, x20, x19
  41f814:	add	x1, sp, #0x50
  41f818:	mov	w0, w23
  41f81c:	mov	x2, #0x200                 	// #512
  41f820:	bl	41b9c0 <wcrtomb@plt+0x16da0>
  41f824:	mov	x19, x0
  41f828:	cbnz	x0, 41f7e0 <wcrtomb@plt+0x1abc0>
  41f82c:	ldr	x0, [sp, #72]
  41f830:	cbnz	x0, 41f838 <wcrtomb@plt+0x1ac18>
  41f834:	str	x20, [sp, #64]
  41f838:	add	x1, sp, #0x40
  41f83c:	mov	x0, x22
  41f840:	bl	41f6a8 <wcrtomb@plt+0x1aa88>
  41f844:	ldr	x2, [x21, #32]
  41f848:	mov	w0, #0x1                   	// #1
  41f84c:	ldr	x1, [x22, #264]
  41f850:	ldr	x3, [x2, #48]
  41f854:	add	x19, x1, x19
  41f858:	str	x19, [x22, #264]
  41f85c:	cbz	x3, 41f910 <wcrtomb@plt+0x1acf0>
  41f860:	mov	x0, x21
  41f864:	mov	x2, #0x0                   	// #0
  41f868:	mov	w1, #0x2                   	// #2
  41f86c:	blr	x3
  41f870:	and	w0, w0, #0xff
  41f874:	ldp	x29, x30, [sp]
  41f878:	ldp	x19, x20, [sp, #16]
  41f87c:	ldp	x21, x22, [sp, #32]
  41f880:	ldr	x23, [sp, #48]
  41f884:	add	sp, sp, #0x250
  41f888:	ret
  41f88c:	mov	x0, x22
  41f890:	add	x1, sp, #0x40
  41f894:	bl	41f6a8 <wcrtomb@plt+0x1aa88>
  41f898:	str	xzr, [sp, #72]
  41f89c:	ldr	x0, [x21, #32]
  41f8a0:	mov	x2, #0x0                   	// #0
  41f8a4:	ldr	x3, [x0, #48]
  41f8a8:	cbz	x3, 41f810 <wcrtomb@plt+0x1abf0>
  41f8ac:	mov	x0, x21
  41f8b0:	mov	w1, #0x1                   	// #1
  41f8b4:	blr	x3
  41f8b8:	tst	w0, #0xff
  41f8bc:	b.ne	41f810 <wcrtomb@plt+0x1abf0>  // b.any
  41f8c0:	ldp	x19, x20, [sp, #16]
  41f8c4:	mov	w0, #0x0                   	// #0
  41f8c8:	ldp	x29, x30, [sp]
  41f8cc:	ldp	x21, x22, [sp, #32]
  41f8d0:	ldr	x23, [sp, #48]
  41f8d4:	add	sp, sp, #0x250
  41f8d8:	ret
  41f8dc:	ldr	x1, [sp, #72]
  41f8e0:	cbnz	x1, 41f8e8 <wcrtomb@plt+0x1acc8>
  41f8e4:	str	x20, [sp, #64]
  41f8e8:	ldr	x2, [x21, #32]
  41f8ec:	add	x1, x1, x19
  41f8f0:	ldr	x0, [x22, #264]
  41f8f4:	str	x1, [sp, #72]
  41f8f8:	ldr	x3, [x2, #48]
  41f8fc:	add	x0, x0, x19
  41f900:	str	x0, [x22, #264]
  41f904:	cbz	x3, 41f810 <wcrtomb@plt+0x1abf0>
  41f908:	add	x2, sp, #0x50
  41f90c:	b	41f8ac <wcrtomb@plt+0x1ac8c>
  41f910:	ldp	x29, x30, [sp]
  41f914:	ldp	x19, x20, [sp, #16]
  41f918:	ldp	x21, x22, [sp, #32]
  41f91c:	ldr	x23, [sp, #48]
  41f920:	add	sp, sp, #0x250
  41f924:	ret
  41f928:	stp	x29, x30, [sp, #-48]!
  41f92c:	mov	x29, sp
  41f930:	stp	x19, x20, [sp, #16]
  41f934:	mov	x19, x1
  41f938:	mov	x20, x0
  41f93c:	mov	x0, x1
  41f940:	mov	x1, #0xc                   	// #12
  41f944:	bl	418f70 <wcrtomb@plt+0x14350>
  41f948:	mov	x2, x0
  41f94c:	mov	x1, #0xc                   	// #12
  41f950:	add	x0, x19, x1
  41f954:	str	x2, [sp, #32]
  41f958:	bl	418f70 <wcrtomb@plt+0x14350>
  41f95c:	str	x0, [sp, #40]
  41f960:	ldr	x1, [sp, #32]
  41f964:	cmp	x0, #0x0
  41f968:	ccmp	x1, #0x0, #0x1, ge  // ge = tcont
  41f96c:	b.lt	41f9b0 <wcrtomb@plt+0x1ad90>  // b.tstop
  41f970:	adds	x1, x1, x0
  41f974:	b.vs	41f9b0 <wcrtomb@plt+0x1ad90>
  41f978:	ldr	x2, [x20]
  41f97c:	mov	w0, #0x2                   	// #2
  41f980:	ldr	x3, [x2, #136]
  41f984:	cmp	x3, x1
  41f988:	b.lt	41f9a4 <wcrtomb@plt+0x1ad84>  // b.tstop
  41f98c:	ldr	x1, [x2, #264]
  41f990:	tbnz	x1, #63, 41f9a4 <wcrtomb@plt+0x1ad84>
  41f994:	mov	x0, x2
  41f998:	add	x1, sp, #0x20
  41f99c:	bl	41f6a8 <wcrtomb@plt+0x1aa88>
  41f9a0:	mov	w0, #0x0                   	// #0
  41f9a4:	ldp	x19, x20, [sp, #16]
  41f9a8:	ldp	x29, x30, [sp], #48
  41f9ac:	ret
  41f9b0:	mov	w0, #0x2                   	// #2
  41f9b4:	ldp	x19, x20, [sp, #16]
  41f9b8:	ldp	x29, x30, [sp], #48
  41f9bc:	ret
  41f9c0:	stp	x29, x30, [sp, #-64]!
  41f9c4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41f9c8:	mov	x29, sp
  41f9cc:	stp	x19, x20, [sp, #16]
  41f9d0:	ldr	x19, [x1, #4016]
  41f9d4:	stp	x21, x22, [sp, #32]
  41f9d8:	ldr	x1, [x0, #24]
  41f9dc:	str	x23, [sp, #48]
  41f9e0:	mov	x23, x0
  41f9e4:	ldrb	w0, [x19, #345]
  41f9e8:	str	xzr, [x1, #288]
  41f9ec:	cbnz	w0, 41f9f8 <wcrtomb@plt+0x1add8>
  41f9f0:	ldrb	w0, [x19, #366]
  41f9f4:	cbnz	w0, 41faf0 <wcrtomb@plt+0x1aed0>
  41f9f8:	add	x21, x23, #0x18
  41f9fc:	nop
  41fa00:	bl	406220 <wcrtomb@plt+0x1600>
  41fa04:	mov	x22, x0
  41fa08:	cbz	x0, 41fb2c <wcrtomb@plt+0x1af0c>
  41fa0c:	mov	x19, x0
  41fa10:	mov	x20, #0x0                   	// #0
  41fa14:	bl	405b90 <wcrtomb@plt+0xf70>
  41fa18:	ldrb	w2, [x19, #12]
  41fa1c:	mov	x1, x19
  41fa20:	mov	x0, x21
  41fa24:	add	x20, x20, #0x1
  41fa28:	add	x19, x19, #0x18
  41fa2c:	cbnz	w2, 41fa54 <wcrtomb@plt+0x1ae34>
  41fa30:	ldr	x0, [x23, #16]
  41fa34:	add	x0, x0, #0x200
  41fa38:	str	x0, [x23, #16]
  41fa3c:	mov	w0, #0x1                   	// #1
  41fa40:	ldp	x19, x20, [sp, #16]
  41fa44:	ldp	x21, x22, [sp, #32]
  41fa48:	ldr	x23, [sp, #48]
  41fa4c:	ldp	x29, x30, [sp], #64
  41fa50:	ret
  41fa54:	bl	41f928 <wcrtomb@plt+0x1ad08>
  41fa58:	cmp	w0, #0x0
  41fa5c:	cset	w1, eq  // eq = none
  41fa60:	cmp	w1, #0x0
  41fa64:	ccmp	x20, #0x14, #0x2, ne  // ne = any
  41fa68:	b.ls	41fa18 <wcrtomb@plt+0x1adf8>  // b.plast
  41fa6c:	ldr	x2, [x23, #16]
  41fa70:	ldrb	w3, [x22, #504]
  41fa74:	add	x2, x2, #0x200
  41fa78:	str	x2, [x23, #16]
  41fa7c:	cmp	w3, #0x0
  41fa80:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  41fa84:	b.ne	41fa00 <wcrtomb@plt+0x1ade0>  // b.any
  41fa88:	cmp	w0, #0x2
  41fa8c:	b.ne	41fa3c <wcrtomb@plt+0x1ae1c>  // b.any
  41fa90:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41fa94:	ldr	x0, [x0, #952]
  41fa98:	cbz	x0, 41faa0 <wcrtomb@plt+0x1ae80>
  41fa9c:	blr	x0
  41faa0:	mov	w2, #0x5                   	// #5
  41faa4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  41faa8:	mov	x0, #0x0                   	// #0
  41faac:	add	x1, x1, #0x350
  41fab0:	bl	4049c0 <dcgettext@plt>
  41fab4:	mov	x2, x0
  41fab8:	ldr	x3, [x23, #24]
  41fabc:	mov	w1, #0x0                   	// #0
  41fac0:	mov	w0, #0x0                   	// #0
  41fac4:	ldr	x3, [x3]
  41fac8:	bl	404050 <error@plt>
  41facc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41fad0:	mov	w2, #0x2                   	// #2
  41fad4:	mov	w0, #0x0                   	// #0
  41fad8:	str	w2, [x1, #3400]
  41fadc:	ldp	x19, x20, [sp, #16]
  41fae0:	ldp	x21, x22, [sp, #32]
  41fae4:	ldr	x23, [sp, #48]
  41fae8:	ldp	x29, x30, [sp], #64
  41faec:	ret
  41faf0:	add	x21, x23, #0x18
  41faf4:	add	x20, x19, #0x164
  41faf8:	add	x22, x19, #0x1c4
  41fafc:	ldrb	w2, [x20, #12]
  41fb00:	mov	x1, x20
  41fb04:	mov	x0, x21
  41fb08:	add	x20, x20, #0x18
  41fb0c:	cbz	w2, 41fa3c <wcrtomb@plt+0x1ae1c>
  41fb10:	bl	41f928 <wcrtomb@plt+0x1ad08>
  41fb14:	cbnz	w0, 41fa88 <wcrtomb@plt+0x1ae68>
  41fb18:	cmp	x22, x20
  41fb1c:	b.ne	41fafc <wcrtomb@plt+0x1aedc>  // b.any
  41fb20:	ldrb	w0, [x19, #355]
  41fb24:	cbnz	w0, 41f9f8 <wcrtomb@plt+0x1add8>
  41fb28:	b	41fa3c <wcrtomb@plt+0x1ae1c>
  41fb2c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41fb30:	ldr	x0, [x0, #952]
  41fb34:	cbz	x0, 41fb3c <wcrtomb@plt+0x1af1c>
  41fb38:	blr	x0
  41fb3c:	mov	w2, #0x5                   	// #5
  41fb40:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  41fb44:	mov	x0, #0x0                   	// #0
  41fb48:	add	x1, x1, #0x6a8
  41fb4c:	bl	4049c0 <dcgettext@plt>
  41fb50:	mov	x2, x0
  41fb54:	mov	w1, #0x0                   	// #0
  41fb58:	mov	w0, #0x0                   	// #0
  41fb5c:	bl	404050 <error@plt>
  41fb60:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41fb64:	mov	w2, #0x2                   	// #2
  41fb68:	mov	w0, #0x0                   	// #0
  41fb6c:	str	w2, [x1, #3400]
  41fb70:	ldp	x19, x20, [sp, #16]
  41fb74:	ldp	x21, x22, [sp, #32]
  41fb78:	ldr	x23, [sp, #48]
  41fb7c:	ldp	x29, x30, [sp], #64
  41fb80:	ret
  41fb84:	nop
  41fb88:	stp	x29, x30, [sp, #-64]!
  41fb8c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41fb90:	mov	x29, sp
  41fb94:	stp	x21, x22, [sp, #32]
  41fb98:	mov	x21, x0
  41fb9c:	stp	x19, x20, [sp, #16]
  41fba0:	ldr	x20, [x1, #4016]
  41fba4:	str	x23, [sp, #48]
  41fba8:	mov	x23, x0
  41fbac:	ldr	x0, [x21, #24]!
  41fbb0:	add	x19, x20, #0x182
  41fbb4:	add	x22, x20, #0x1e2
  41fbb8:	str	xzr, [x0, #288]
  41fbbc:	ldrb	w2, [x19, #12]
  41fbc0:	mov	x1, x19
  41fbc4:	mov	x0, x21
  41fbc8:	add	x19, x19, #0x18
  41fbcc:	cbnz	w2, 41fbe8 <wcrtomb@plt+0x1afc8>
  41fbd0:	mov	w0, #0x1                   	// #1
  41fbd4:	ldp	x19, x20, [sp, #16]
  41fbd8:	ldp	x21, x22, [sp, #32]
  41fbdc:	ldr	x23, [sp, #48]
  41fbe0:	ldp	x29, x30, [sp], #64
  41fbe4:	ret
  41fbe8:	bl	41f928 <wcrtomb@plt+0x1ad08>
  41fbec:	cbnz	w0, 41fc60 <wcrtomb@plt+0x1b040>
  41fbf0:	cmp	x22, x19
  41fbf4:	b.ne	41fbbc <wcrtomb@plt+0x1af9c>  // b.any
  41fbf8:	ldrb	w0, [x20, #482]
  41fbfc:	cbz	w0, 41fbd0 <wcrtomb@plt+0x1afb0>
  41fc00:	bl	406220 <wcrtomb@plt+0x1600>
  41fc04:	mov	x22, x0
  41fc08:	cbz	x0, 41fcc8 <wcrtomb@plt+0x1b0a8>
  41fc0c:	mov	x19, x0
  41fc10:	mov	x20, #0x0                   	// #0
  41fc14:	bl	405b90 <wcrtomb@plt+0xf70>
  41fc18:	b	41fc34 <wcrtomb@plt+0x1b014>
  41fc1c:	bl	41f928 <wcrtomb@plt+0x1ad08>
  41fc20:	cmp	w0, #0x0
  41fc24:	cset	w1, eq  // eq = none
  41fc28:	cmp	w1, #0x0
  41fc2c:	ccmp	x20, #0x14, #0x2, ne  // ne = any
  41fc30:	b.hi	41fc50 <wcrtomb@plt+0x1b030>  // b.pmore
  41fc34:	ldrb	w2, [x19, #12]
  41fc38:	mov	x1, x19
  41fc3c:	mov	x0, x21
  41fc40:	add	x20, x20, #0x1
  41fc44:	add	x19, x19, #0x18
  41fc48:	cbz	w2, 41fbd0 <wcrtomb@plt+0x1afb0>
  41fc4c:	b	41fc1c <wcrtomb@plt+0x1affc>
  41fc50:	ldrb	w2, [x22, #504]
  41fc54:	cmp	w2, #0x0
  41fc58:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  41fc5c:	b.ne	41fc00 <wcrtomb@plt+0x1afe0>  // b.any
  41fc60:	cmp	w0, #0x2
  41fc64:	b.ne	41fbd0 <wcrtomb@plt+0x1afb0>  // b.any
  41fc68:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41fc6c:	ldr	x0, [x0, #952]
  41fc70:	cbz	x0, 41fc78 <wcrtomb@plt+0x1b058>
  41fc74:	blr	x0
  41fc78:	mov	w2, #0x5                   	// #5
  41fc7c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  41fc80:	mov	x0, #0x0                   	// #0
  41fc84:	add	x1, x1, #0x350
  41fc88:	bl	4049c0 <dcgettext@plt>
  41fc8c:	mov	x2, x0
  41fc90:	ldr	x3, [x23, #24]
  41fc94:	mov	w1, #0x0                   	// #0
  41fc98:	mov	w0, #0x0                   	// #0
  41fc9c:	ldr	x3, [x3]
  41fca0:	bl	404050 <error@plt>
  41fca4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41fca8:	mov	w2, #0x2                   	// #2
  41fcac:	mov	w0, #0x0                   	// #0
  41fcb0:	str	w2, [x1, #3400]
  41fcb4:	ldp	x19, x20, [sp, #16]
  41fcb8:	ldp	x21, x22, [sp, #32]
  41fcbc:	ldr	x23, [sp, #48]
  41fcc0:	ldp	x29, x30, [sp], #64
  41fcc4:	ret
  41fcc8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41fccc:	ldr	x0, [x0, #952]
  41fcd0:	cbz	x0, 41fcd8 <wcrtomb@plt+0x1b0b8>
  41fcd4:	blr	x0
  41fcd8:	mov	w2, #0x5                   	// #5
  41fcdc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  41fce0:	mov	x0, #0x0                   	// #0
  41fce4:	add	x1, x1, #0x6a8
  41fce8:	bl	4049c0 <dcgettext@plt>
  41fcec:	mov	x2, x0
  41fcf0:	mov	w1, #0x0                   	// #0
  41fcf4:	mov	w0, #0x0                   	// #0
  41fcf8:	bl	404050 <error@plt>
  41fcfc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41fd00:	mov	w2, #0x2                   	// #2
  41fd04:	mov	w0, #0x0                   	// #0
  41fd08:	str	w2, [x1, #3400]
  41fd0c:	ldp	x19, x20, [sp, #16]
  41fd10:	ldp	x21, x22, [sp, #32]
  41fd14:	ldr	x23, [sp, #48]
  41fd18:	ldp	x29, x30, [sp], #64
  41fd1c:	ret
  41fd20:	stp	x29, x30, [sp, #-144]!
  41fd24:	mov	x29, sp
  41fd28:	ldr	x1, [x0, #24]
  41fd2c:	stp	x19, x20, [sp, #16]
  41fd30:	mov	w20, #0x1                   	// #1
  41fd34:	ldr	w1, [x1, #276]
  41fd38:	cbnz	w1, 41fd4c <wcrtomb@plt+0x1b12c>
  41fd3c:	mov	w0, w20
  41fd40:	ldp	x19, x20, [sp, #16]
  41fd44:	ldp	x29, x30, [sp], #144
  41fd48:	ret
  41fd4c:	stp	x21, x22, [sp, #32]
  41fd50:	mov	x22, x0
  41fd54:	stp	x23, x24, [sp, #48]
  41fd58:	stp	x25, x26, [sp, #64]
  41fd5c:	str	x27, [sp, #80]
  41fd60:	bl	405b20 <wcrtomb@plt+0xf00>
  41fd64:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41fd68:	mov	x23, x0
  41fd6c:	ldr	x0, [x1, #4016]
  41fd70:	bl	405b90 <wcrtomb@plt+0xf70>
  41fd74:	bl	406220 <wcrtomb@plt+0x1600>
  41fd78:	mov	x26, x0
  41fd7c:	cbz	x0, 420010 <wcrtomb@plt+0x1b3f0>
  41fd80:	add	x20, sp, #0x78
  41fd84:	mov	x19, x0
  41fd88:	add	x21, x20, #0x14
  41fd8c:	add	x27, x0, #0x200
  41fd90:	b	41fdac <wcrtomb@plt+0x1b18c>
  41fd94:	ldrb	w1, [x19], #1
  41fd98:	strb	w1, [x20], #1
  41fd9c:	cmp	w1, #0xa
  41fda0:	b.eq	41fde0 <wcrtomb@plt+0x1b1c0>  // b.none
  41fda4:	cmp	x20, x21
  41fda8:	b.eq	41fe2c <wcrtomb@plt+0x1b20c>  // b.none
  41fdac:	cmp	x19, x27
  41fdb0:	b.ne	41fd94 <wcrtomb@plt+0x1b174>  // b.any
  41fdb4:	mov	x0, x26
  41fdb8:	bl	405b90 <wcrtomb@plt+0xf70>
  41fdbc:	bl	406220 <wcrtomb@plt+0x1600>
  41fdc0:	mov	x26, x0
  41fdc4:	cbz	x0, 420010 <wcrtomb@plt+0x1b3f0>
  41fdc8:	mov	x19, x0
  41fdcc:	add	x27, x0, #0x200
  41fdd0:	ldrb	w1, [x19], #1
  41fdd4:	strb	w1, [x20], #1
  41fdd8:	cmp	w1, #0xa
  41fddc:	b.ne	41fda4 <wcrtomb@plt+0x1b184>  // b.any
  41fde0:	sturb	wzr, [x20, #-1]
  41fde4:	ldrb	w1, [sp, #120]
  41fde8:	sub	w1, w1, #0x30
  41fdec:	cmp	w1, #0x9
  41fdf0:	b.hi	41fe0c <wcrtomb@plt+0x1b1ec>  // b.pmore
  41fdf4:	add	x0, sp, #0x60
  41fdf8:	add	x1, sp, #0x78
  41fdfc:	mov	x2, #0xffffffffffffffff    	// #-1
  41fe00:	bl	41ee68 <wcrtomb@plt+0x1a248>
  41fe04:	ands	w20, w0, #0xff
  41fe08:	b.ne	41fe98 <wcrtomb@plt+0x1b278>  // b.any
  41fe0c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41fe10:	ldr	x0, [x0, #952]
  41fe14:	cbz	x0, 41fe1c <wcrtomb@plt+0x1b1fc>
  41fe18:	blr	x0
  41fe1c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  41fe20:	mov	w2, #0x5                   	// #5
  41fe24:	add	x1, x1, #0x3a8
  41fe28:	b	41fe48 <wcrtomb@plt+0x1b228>
  41fe2c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  41fe30:	ldr	x0, [x0, #952]
  41fe34:	cbz	x0, 41fe3c <wcrtomb@plt+0x1b21c>
  41fe38:	blr	x0
  41fe3c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  41fe40:	add	x1, x1, #0x378
  41fe44:	mov	w2, #0x5                   	// #5
  41fe48:	mov	x0, #0x0                   	// #0
  41fe4c:	bl	4049c0 <dcgettext@plt>
  41fe50:	ldr	x3, [x22, #24]
  41fe54:	mov	x2, x0
  41fe58:	mov	w1, #0x0                   	// #0
  41fe5c:	mov	w0, #0x0                   	// #0
  41fe60:	mov	w20, #0x0                   	// #0
  41fe64:	ldr	x3, [x3]
  41fe68:	bl	404050 <error@plt>
  41fe6c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  41fe70:	mov	w1, #0x2                   	// #2
  41fe74:	ldp	x21, x22, [sp, #32]
  41fe78:	str	w1, [x0, #3400]
  41fe7c:	mov	w0, w20
  41fe80:	ldp	x19, x20, [sp, #16]
  41fe84:	ldp	x23, x24, [sp, #48]
  41fe88:	ldp	x25, x26, [sp, #64]
  41fe8c:	ldr	x27, [sp, #80]
  41fe90:	ldp	x29, x30, [sp], #144
  41fe94:	ret
  41fe98:	ldr	x21, [x22, #24]
  41fe9c:	mov	x1, #0x10                  	// #16
  41fea0:	ldr	x0, [sp, #96]
  41fea4:	str	x0, [x21, #296]
  41fea8:	bl	441108 <argp_parse@@Base+0xd220>
  41feac:	ldr	x1, [x22, #24]
  41feb0:	str	x0, [x21, #304]
  41feb4:	ldr	x0, [x1, #296]
  41feb8:	str	xzr, [x1, #288]
  41febc:	cbz	x0, 41ffe0 <wcrtomb@plt+0x1b3c0>
  41fec0:	add	x24, sp, #0x8c
  41fec4:	mov	x25, #0x0                   	// #0
  41fec8:	add	x21, sp, #0x78
  41fecc:	b	41fee8 <wcrtomb@plt+0x1b2c8>
  41fed0:	ldrb	w1, [x19], #1
  41fed4:	strb	w1, [x21], #1
  41fed8:	cmp	w1, #0xa
  41fedc:	b.eq	41ff10 <wcrtomb@plt+0x1b2f0>  // b.none
  41fee0:	cmp	x21, x24
  41fee4:	b.eq	41fe2c <wcrtomb@plt+0x1b20c>  // b.none
  41fee8:	cmp	x19, x27
  41feec:	b.ne	41fed0 <wcrtomb@plt+0x1b2b0>  // b.any
  41fef0:	mov	x0, x26
  41fef4:	bl	405b90 <wcrtomb@plt+0xf70>
  41fef8:	bl	406220 <wcrtomb@plt+0x1600>
  41fefc:	mov	x26, x0
  41ff00:	cbz	x0, 420010 <wcrtomb@plt+0x1b3f0>
  41ff04:	mov	x19, x0
  41ff08:	add	x27, x0, #0x200
  41ff0c:	b	41fed0 <wcrtomb@plt+0x1b2b0>
  41ff10:	sturb	wzr, [x21, #-1]
  41ff14:	ldrb	w0, [sp, #120]
  41ff18:	sub	w0, w0, #0x30
  41ff1c:	cmp	w0, #0x9
  41ff20:	b.hi	41fe0c <wcrtomb@plt+0x1b1ec>  // b.pmore
  41ff24:	add	x1, sp, #0x78
  41ff28:	add	x0, sp, #0x60
  41ff2c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41ff30:	bl	41ee68 <wcrtomb@plt+0x1a248>
  41ff34:	tst	w0, #0xff
  41ff38:	b.eq	41fe0c <wcrtomb@plt+0x1b1ec>  // b.none
  41ff3c:	ldr	x0, [sp, #96]
  41ff40:	add	x21, sp, #0x78
  41ff44:	str	x0, [sp, #104]
  41ff48:	b	41ff64 <wcrtomb@plt+0x1b344>
  41ff4c:	ldrb	w1, [x19], #1
  41ff50:	strb	w1, [x21], #1
  41ff54:	cmp	w1, #0xa
  41ff58:	b.eq	41ff8c <wcrtomb@plt+0x1b36c>  // b.none
  41ff5c:	cmp	x21, x24
  41ff60:	b.eq	41fe2c <wcrtomb@plt+0x1b20c>  // b.none
  41ff64:	cmp	x19, x27
  41ff68:	b.ne	41ff4c <wcrtomb@plt+0x1b32c>  // b.any
  41ff6c:	mov	x0, x26
  41ff70:	bl	405b90 <wcrtomb@plt+0xf70>
  41ff74:	bl	406220 <wcrtomb@plt+0x1600>
  41ff78:	mov	x26, x0
  41ff7c:	cbz	x0, 420010 <wcrtomb@plt+0x1b3f0>
  41ff80:	mov	x19, x0
  41ff84:	add	x27, x0, #0x200
  41ff88:	b	41ff4c <wcrtomb@plt+0x1b32c>
  41ff8c:	sturb	wzr, [x21, #-1]
  41ff90:	ldrb	w0, [sp, #120]
  41ff94:	sub	w0, w0, #0x30
  41ff98:	cmp	w0, #0x9
  41ff9c:	b.hi	41fe0c <wcrtomb@plt+0x1b1ec>  // b.pmore
  41ffa0:	add	x1, sp, #0x78
  41ffa4:	add	x0, sp, #0x60
  41ffa8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41ffac:	bl	41ee68 <wcrtomb@plt+0x1a248>
  41ffb0:	tst	w0, #0xff
  41ffb4:	b.eq	41fe0c <wcrtomb@plt+0x1b1ec>  // b.none
  41ffb8:	ldr	x0, [x22, #24]
  41ffbc:	add	x1, sp, #0x68
  41ffc0:	ldr	x2, [sp, #96]
  41ffc4:	str	x2, [sp, #112]
  41ffc8:	add	x25, x25, #0x1
  41ffcc:	bl	41f6a8 <wcrtomb@plt+0x1aa88>
  41ffd0:	ldr	x0, [x22, #24]
  41ffd4:	ldr	x0, [x0, #296]
  41ffd8:	cmp	x25, x0
  41ffdc:	b.cc	41fec8 <wcrtomb@plt+0x1b2a8>  // b.lo, b.ul, b.last
  41ffe0:	mov	x0, x26
  41ffe4:	bl	405b90 <wcrtomb@plt+0xf70>
  41ffe8:	bl	405b20 <wcrtomb@plt+0xf00>
  41ffec:	sub	x0, x0, x23
  41fff0:	ldr	x1, [x22, #16]
  41fff4:	ldp	x23, x24, [sp, #48]
  41fff8:	add	x0, x1, x0, lsl #9
  41fffc:	ldp	x25, x26, [sp, #64]
  420000:	ldr	x27, [sp, #80]
  420004:	str	x0, [x22, #16]
  420008:	ldp	x21, x22, [sp, #32]
  42000c:	b	41fd3c <wcrtomb@plt+0x1b11c>
  420010:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  420014:	ldr	x0, [x0, #952]
  420018:	cbz	x0, 420020 <wcrtomb@plt+0x1b400>
  42001c:	blr	x0
  420020:	mov	w2, #0x5                   	// #5
  420024:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  420028:	mov	x0, #0x0                   	// #0
  42002c:	add	x1, x1, #0x6a8
  420030:	bl	4049c0 <dcgettext@plt>
  420034:	mov	x2, x0
  420038:	mov	w1, #0x0                   	// #0
  42003c:	mov	w0, #0x0                   	// #0
  420040:	bl	404050 <error@plt>
  420044:	bl	40e770 <wcrtomb@plt+0x9b50>
  420048:	stp	x29, x30, [sp, #-128]!
  42004c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  420050:	mov	x29, sp
  420054:	stp	x21, x22, [sp, #32]
  420058:	mov	x21, x0
  42005c:	ldr	w0, [x1, #552]
  420060:	stp	x19, x20, [sp, #16]
  420064:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  420068:	ldr	x1, [x21, #24]
  42006c:	stp	x23, x24, [sp, #48]
  420070:	ldr	w2, [x19, #32]
  420074:	str	w0, [x1, #276]
  420078:	str	w2, [x1, #280]
  42007c:	cbnz	w0, 420170 <wcrtomb@plt+0x1b550>
  420080:	bl	405b20 <wcrtomb@plt+0xf00>
  420084:	mov	x22, x0
  420088:	ldr	x1, [x21, #24]
  42008c:	mov	x2, #0x0                   	// #0
  420090:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  420094:	add	x0, x0, #0x4d8
  420098:	adrp	x20, 455000 <_obstack_memory_used@@Base+0x12e10>
  42009c:	add	x20, x20, #0x500
  4200a0:	ldr	x24, [x1, #304]
  4200a4:	bl	413f80 <wcrtomb@plt+0xf360>
  4200a8:	ldr	x1, [x21, #24]
  4200ac:	mov	x2, #0x0                   	// #0
  4200b0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  4200b4:	add	x0, x0, #0x4c0
  4200b8:	bl	413f80 <wcrtomb@plt+0xf360>
  4200bc:	mov	x0, x20
  4200c0:	bl	413218 <wcrtomb@plt+0xe5f8>
  4200c4:	tst	w0, #0xff
  4200c8:	b.eq	4204dc <wcrtomb@plt+0x1b8bc>  // b.none
  4200cc:	ldr	x19, [x21, #24]
  4200d0:	str	xzr, [sp, #96]
  4200d4:	ldr	x0, [x19, #288]
  4200d8:	cbz	x0, 42012c <wcrtomb@plt+0x1b50c>
  4200dc:	adrp	x23, 455000 <_obstack_memory_used@@Base+0x12e10>
  4200e0:	adrp	x20, 455000 <_obstack_memory_used@@Base+0x12e10>
  4200e4:	add	x23, x23, #0x2b0
  4200e8:	add	x20, x20, #0x4e8
  4200ec:	nop
  4200f0:	mov	x1, x19
  4200f4:	add	x2, sp, #0x60
  4200f8:	mov	x0, x23
  4200fc:	bl	413f80 <wcrtomb@plt+0xf360>
  420100:	ldr	x1, [x21, #24]
  420104:	mov	x0, x20
  420108:	add	x2, sp, #0x60
  42010c:	bl	413f80 <wcrtomb@plt+0xf360>
  420110:	ldr	x19, [x21, #24]
  420114:	ldr	x1, [sp, #96]
  420118:	ldr	x0, [x19, #288]
  42011c:	add	x1, x1, #0x1
  420120:	str	x1, [sp, #96]
  420124:	cmp	x1, x0
  420128:	b.cc	4200f0 <wcrtomb@plt+0x1b4d0>  // b.lo, b.ul, b.last
  42012c:	ldr	x1, [x19, #264]
  420130:	mov	x0, x19
  420134:	ldr	x20, [x19, #136]
  420138:	str	x1, [x19, #136]
  42013c:	mov	w23, #0x1                   	// #1
  420140:	bl	40b888 <wcrtomb@plt+0x6c68>
  420144:	mov	x1, x0
  420148:	ldr	x0, [x21, #24]
  42014c:	str	x20, [x19, #136]
  420150:	mov	x2, x22
  420154:	bl	40b648 <wcrtomb@plt+0x6a28>
  420158:	mov	w0, w23
  42015c:	ldp	x19, x20, [sp, #16]
  420160:	ldp	x21, x22, [sp, #32]
  420164:	ldp	x23, x24, [sp, #48]
  420168:	ldp	x29, x30, [sp], #128
  42016c:	ret
  420170:	stp	x25, x26, [sp, #64]
  420174:	add	x23, sp, #0x68
  420178:	str	x27, [sp, #80]
  42017c:	bl	405b20 <wcrtomb@plt+0xf00>
  420180:	ldr	x2, [x21, #24]
  420184:	mov	x24, x0
  420188:	mov	x1, x23
  42018c:	ldr	x0, [x2, #288]
  420190:	ldr	x25, [x2, #8]
  420194:	ldr	x22, [x2, #304]
  420198:	bl	4398d8 <argp_parse@@Base+0x59f0>
  42019c:	bl	403ff0 <strlen@plt>
  4201a0:	add	x19, x0, #0x1
  4201a4:	ldr	x1, [x21, #24]
  4201a8:	ldr	x0, [x1, #288]
  4201ac:	cbz	x0, 420200 <wcrtomb@plt+0x1b5e0>
  4201b0:	mov	x26, x22
  4201b4:	mov	x27, #0x0                   	// #0
  4201b8:	ldr	x0, [x26]
  4201bc:	mov	x1, x23
  4201c0:	add	x27, x27, #0x1
  4201c4:	add	x19, x19, #0x2
  4201c8:	add	x26, x26, #0x10
  4201cc:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4201d0:	bl	403ff0 <strlen@plt>
  4201d4:	mov	x20, x0
  4201d8:	ldur	x0, [x26, #-8]
  4201dc:	mov	x1, x23
  4201e0:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4201e4:	bl	403ff0 <strlen@plt>
  4201e8:	add	x20, x20, x0
  4201ec:	ldr	x1, [x21, #24]
  4201f0:	add	x19, x19, x20
  4201f4:	ldr	x0, [x1, #288]
  4201f8:	cmp	x27, x0
  4201fc:	b.cc	4201b8 <wcrtomb@plt+0x1b598>  // b.lo, b.ul, b.last
  420200:	add	x0, x19, #0x3fe
  420204:	adds	x19, x19, #0x1ff
  420208:	ldr	x2, [x1, #264]
  42020c:	csel	x19, x0, x19, mi  // mi = first
  420210:	and	x19, x19, #0xfffffffffffffe00
  420214:	add	x0, x2, x19
  420218:	str	x0, [x1, #264]
  42021c:	mov	x2, #0x0                   	// #0
  420220:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  420224:	ldr	x3, [x21, #16]
  420228:	add	x0, x0, #0x478
  42022c:	add	x19, x3, x19
  420230:	str	x19, [x21, #16]
  420234:	bl	413f80 <wcrtomb@plt+0xf360>
  420238:	ldr	x1, [x21, #24]
  42023c:	mov	x2, #0x0                   	// #0
  420240:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  420244:	add	x0, x0, #0x490
  420248:	bl	413f80 <wcrtomb@plt+0xf360>
  42024c:	ldr	x1, [x21, #24]
  420250:	mov	x2, #0x0                   	// #0
  420254:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  420258:	add	x0, x0, #0x468
  42025c:	bl	413f80 <wcrtomb@plt+0xf360>
  420260:	ldr	x1, [x21, #24]
  420264:	mov	x2, #0x0                   	// #0
  420268:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  42026c:	add	x0, x0, #0x4a8
  420270:	bl	413f80 <wcrtomb@plt+0xf360>
  420274:	ldr	x19, [x21, #24]
  420278:	mov	x2, #0x0                   	// #0
  42027c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  420280:	add	x1, x1, #0x3d0
  420284:	mov	x0, x19
  420288:	bl	4136a0 <wcrtomb@plt+0xea80>
  42028c:	str	x0, [x19, #8]
  420290:	ldr	x19, [x21, #24]
  420294:	ldr	x20, [x19, #8]
  420298:	mov	x0, x20
  42029c:	bl	403ff0 <strlen@plt>
  4202a0:	cmp	x0, #0x64
  4202a4:	b.ls	4202b0 <wcrtomb@plt+0x1b690>  // b.plast
  4202a8:	strb	wzr, [x20, #100]
  4202ac:	ldr	x19, [x21, #24]
  4202b0:	mov	x0, x19
  4202b4:	ldr	x1, [x19, #264]
  4202b8:	ldr	x20, [x19, #136]
  4202bc:	str	x1, [x19, #136]
  4202c0:	bl	40b888 <wcrtomb@plt+0x6c68>
  4202c4:	mov	x1, x0
  4202c8:	ldr	x0, [x21, #24]
  4202cc:	str	x20, [x19, #136]
  4202d0:	mov	x2, x24
  4202d4:	bl	40b648 <wcrtomb@plt+0x6a28>
  4202d8:	ldr	x0, [x21, #24]
  4202dc:	ldr	x0, [x0, #8]
  4202e0:	bl	4047b0 <free@plt>
  4202e4:	ldr	x0, [x21, #24]
  4202e8:	str	x25, [x0, #8]
  4202ec:	bl	406220 <wcrtomb@plt+0x1600>
  4202f0:	mov	x20, x0
  4202f4:	ldr	x2, [x21, #24]
  4202f8:	mov	x19, x0
  4202fc:	add	x26, x0, #0x200
  420300:	mov	x1, x23
  420304:	ldr	x0, [x2, #288]
  420308:	bl	4398d8 <argp_parse@@Base+0x59f0>
  42030c:	mov	x24, x0
  420310:	ldrb	w0, [x0]
  420314:	cbnz	w0, 4204b8 <wcrtomb@plt+0x1b898>
  420318:	cmp	x26, x19
  42031c:	b.eq	4204c4 <wcrtomb@plt+0x1b8a4>  // b.none
  420320:	mov	w24, #0xa                   	// #10
  420324:	strb	w24, [x19], #1
  420328:	ldr	x0, [x21, #24]
  42032c:	ldr	x0, [x0, #288]
  420330:	cbz	x0, 420450 <wcrtomb@plt+0x1b830>
  420334:	mov	x25, #0x0                   	// #0
  420338:	ldr	x0, [x22]
  42033c:	mov	x1, x23
  420340:	add	x26, x20, #0x200
  420344:	bl	4398d8 <argp_parse@@Base+0x59f0>
  420348:	mov	x27, x0
  42034c:	ldrb	w0, [x0]
  420350:	cbnz	w0, 420368 <wcrtomb@plt+0x1b748>
  420354:	b	420398 <wcrtomb@plt+0x1b778>
  420358:	ldrb	w0, [x27], #1
  42035c:	strb	w0, [x19], #1
  420360:	ldrb	w0, [x27]
  420364:	cbz	w0, 420398 <wcrtomb@plt+0x1b778>
  420368:	cmp	x19, x26
  42036c:	b.ne	420358 <wcrtomb@plt+0x1b738>  // b.any
  420370:	mov	x0, x20
  420374:	bl	405b90 <wcrtomb@plt+0xf70>
  420378:	bl	406220 <wcrtomb@plt+0x1600>
  42037c:	mov	x19, x0
  420380:	mov	x20, x0
  420384:	add	x26, x0, #0x200
  420388:	ldrb	w0, [x27], #1
  42038c:	strb	w0, [x19], #1
  420390:	ldrb	w0, [x27]
  420394:	cbnz	w0, 420368 <wcrtomb@plt+0x1b748>
  420398:	cmp	x26, x19
  42039c:	b.ne	4203b8 <wcrtomb@plt+0x1b798>  // b.any
  4203a0:	mov	x0, x20
  4203a4:	bl	405b90 <wcrtomb@plt+0xf70>
  4203a8:	bl	406220 <wcrtomb@plt+0x1600>
  4203ac:	mov	x20, x0
  4203b0:	mov	x19, x0
  4203b4:	add	x26, x0, #0x200
  4203b8:	strb	w24, [x19], #1
  4203bc:	mov	x1, x23
  4203c0:	ldr	x0, [x22, #8]
  4203c4:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4203c8:	mov	x27, x0
  4203cc:	ldrb	w0, [x0]
  4203d0:	cbnz	w0, 4203e8 <wcrtomb@plt+0x1b7c8>
  4203d4:	b	420418 <wcrtomb@plt+0x1b7f8>
  4203d8:	ldrb	w0, [x27], #1
  4203dc:	strb	w0, [x19], #1
  4203e0:	ldrb	w0, [x27]
  4203e4:	cbz	w0, 420418 <wcrtomb@plt+0x1b7f8>
  4203e8:	cmp	x19, x26
  4203ec:	b.ne	4203d8 <wcrtomb@plt+0x1b7b8>  // b.any
  4203f0:	mov	x0, x20
  4203f4:	bl	405b90 <wcrtomb@plt+0xf70>
  4203f8:	bl	406220 <wcrtomb@plt+0x1600>
  4203fc:	mov	x19, x0
  420400:	mov	x20, x0
  420404:	add	x26, x0, #0x200
  420408:	ldrb	w0, [x27], #1
  42040c:	strb	w0, [x19], #1
  420410:	ldrb	w0, [x27]
  420414:	cbnz	w0, 4203e8 <wcrtomb@plt+0x1b7c8>
  420418:	cmp	x26, x19
  42041c:	b.ne	420434 <wcrtomb@plt+0x1b814>  // b.any
  420420:	mov	x0, x20
  420424:	bl	405b90 <wcrtomb@plt+0xf70>
  420428:	bl	406220 <wcrtomb@plt+0x1600>
  42042c:	mov	x20, x0
  420430:	mov	x19, x0
  420434:	strb	w24, [x19], #1
  420438:	add	x25, x25, #0x1
  42043c:	add	x22, x22, #0x10
  420440:	ldr	x0, [x21, #24]
  420444:	ldr	x0, [x0, #288]
  420448:	cmp	x25, x0
  42044c:	b.cc	420338 <wcrtomb@plt+0x1b718>  // b.lo, b.ul, b.last
  420450:	sub	x2, x20, x19
  420454:	mov	w1, #0x0                   	// #0
  420458:	add	x2, x2, #0x200
  42045c:	mov	x0, x19
  420460:	bl	404410 <memset@plt>
  420464:	mov	w23, #0x1                   	// #1
  420468:	mov	x0, x20
  42046c:	bl	405b90 <wcrtomb@plt+0xf70>
  420470:	ldp	x25, x26, [sp, #64]
  420474:	ldr	x27, [sp, #80]
  420478:	mov	w0, w23
  42047c:	ldp	x19, x20, [sp, #16]
  420480:	ldp	x21, x22, [sp, #32]
  420484:	ldp	x23, x24, [sp, #48]
  420488:	ldp	x29, x30, [sp], #128
  42048c:	ret
  420490:	mov	x0, x20
  420494:	bl	405b90 <wcrtomb@plt+0xf70>
  420498:	bl	406220 <wcrtomb@plt+0x1600>
  42049c:	mov	x20, x0
  4204a0:	mov	x19, x0
  4204a4:	add	x26, x0, #0x200
  4204a8:	ldrb	w0, [x24], #1
  4204ac:	strb	w0, [x19], #1
  4204b0:	ldrb	w0, [x24]
  4204b4:	cbz	w0, 420318 <wcrtomb@plt+0x1b6f8>
  4204b8:	cmp	x26, x19
  4204bc:	b.ne	4204a8 <wcrtomb@plt+0x1b888>  // b.any
  4204c0:	b	420490 <wcrtomb@plt+0x1b870>
  4204c4:	mov	x0, x20
  4204c8:	bl	405b90 <wcrtomb@plt+0xf70>
  4204cc:	bl	406220 <wcrtomb@plt+0x1600>
  4204d0:	mov	x20, x0
  4204d4:	mov	x19, x0
  4204d8:	b	420320 <wcrtomb@plt+0x1b700>
  4204dc:	ldr	w0, [x19, #32]
  4204e0:	ldr	x19, [x21, #24]
  4204e4:	cbz	w0, 4200d0 <wcrtomb@plt+0x1b4b0>
  4204e8:	mov	x1, x19
  4204ec:	mov	x2, #0x0                   	// #0
  4204f0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  4204f4:	add	x0, x0, #0x468
  4204f8:	stp	x25, x26, [sp, #64]
  4204fc:	bl	413f80 <wcrtomb@plt+0xf360>
  420500:	mov	x2, #0x0                   	// #0
  420504:	ldr	x19, [x21, #24]
  420508:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  42050c:	add	x1, x1, #0x3d0
  420510:	mov	x0, x19
  420514:	ldr	x25, [x19, #8]
  420518:	bl	4136a0 <wcrtomb@plt+0xea80>
  42051c:	str	x0, [x19, #8]
  420520:	ldr	x0, [x21, #24]
  420524:	add	x0, x0, #0x158
  420528:	bl	4143d0 <wcrtomb@plt+0xf7b0>
  42052c:	ldr	x0, [x21, #24]
  420530:	str	xzr, [sp, #96]
  420534:	ldr	x1, [x0, #288]
  420538:	cbz	x1, 4205e4 <wcrtomb@plt+0x1b9c4>
  42053c:	adrp	x19, 454000 <_obstack_memory_used@@Base+0x11e10>
  420540:	add	x26, x0, #0x158
  420544:	add	x19, x19, #0x5f8
  420548:	add	x23, sp, #0x68
  42054c:	mov	x2, #0x0                   	// #0
  420550:	lsl	x2, x2, #4
  420554:	mov	x1, x23
  420558:	ldr	x0, [x24, x2]
  42055c:	bl	4398d8 <argp_parse@@Base+0x59f0>
  420560:	mov	x1, x0
  420564:	mov	x0, x26
  420568:	bl	4143d8 <wcrtomb@plt+0xf7b8>
  42056c:	ldr	x0, [x21, #24]
  420570:	mov	x1, x19
  420574:	add	x0, x0, #0x158
  420578:	bl	4143d8 <wcrtomb@plt+0xf7b8>
  42057c:	ldr	x0, [sp, #96]
  420580:	mov	x1, x23
  420584:	ldr	x26, [x21, #24]
  420588:	add	x0, x24, x0, lsl #4
  42058c:	add	x26, x26, #0x158
  420590:	ldr	x0, [x0, #8]
  420594:	bl	4398d8 <argp_parse@@Base+0x59f0>
  420598:	mov	x1, x0
  42059c:	mov	x0, x26
  4205a0:	bl	4143d8 <wcrtomb@plt+0xf7b8>
  4205a4:	ldr	x0, [x21, #24]
  4205a8:	ldr	x2, [sp, #96]
  4205ac:	add	x26, x0, #0x158
  4205b0:	ldr	x1, [x0, #288]
  4205b4:	add	x2, x2, #0x1
  4205b8:	str	x2, [sp, #96]
  4205bc:	cmp	x2, x1
  4205c0:	b.cs	4205e4 <wcrtomb@plt+0x1b9c4>  // b.hs, b.nlast
  4205c4:	cbz	x2, 420550 <wcrtomb@plt+0x1b930>
  4205c8:	mov	x0, x26
  4205cc:	mov	x1, x19
  4205d0:	bl	4143d8 <wcrtomb@plt+0xf7b8>
  4205d4:	ldr	x26, [x21, #24]
  4205d8:	ldr	x2, [sp, #96]
  4205dc:	add	x26, x26, #0x158
  4205e0:	b	420550 <wcrtomb@plt+0x1b930>
  4205e4:	mov	x1, x20
  4205e8:	add	x0, x0, #0x158
  4205ec:	bl	414458 <wcrtomb@plt+0xf838>
  4205f0:	ands	w23, w0, #0xff
  4205f4:	b.eq	420628 <wcrtomb@plt+0x1ba08>  // b.none
  4205f8:	ldr	x19, [x21, #24]
  4205fc:	mov	x0, x19
  420600:	ldr	x1, [x19, #264]
  420604:	ldr	x20, [x19, #136]
  420608:	str	x1, [x19, #136]
  42060c:	bl	40b888 <wcrtomb@plt+0x6c68>
  420610:	mov	x1, x0
  420614:	ldr	x0, [x21, #24]
  420618:	str	x20, [x19, #136]
  42061c:	mov	x2, x22
  420620:	bl	40b648 <wcrtomb@plt+0x6a28>
  420624:	cbz	x25, 420658 <wcrtomb@plt+0x1ba38>
  420628:	ldr	x0, [x21, #24]
  42062c:	ldr	x0, [x0, #8]
  420630:	bl	4047b0 <free@plt>
  420634:	ldr	x0, [x21, #24]
  420638:	ldp	x19, x20, [sp, #16]
  42063c:	str	x25, [x0, #8]
  420640:	mov	w0, w23
  420644:	ldp	x21, x22, [sp, #32]
  420648:	ldp	x23, x24, [sp, #48]
  42064c:	ldp	x25, x26, [sp, #64]
  420650:	ldp	x29, x30, [sp], #128
  420654:	ret
  420658:	ldp	x25, x26, [sp, #64]
  42065c:	b	420478 <wcrtomb@plt+0x1b858>
  420660:	stp	x29, x30, [sp, #-48]!
  420664:	mov	x29, sp
  420668:	stp	x21, x22, [sp, #32]
  42066c:	mov	x21, x0
  420670:	ldr	x0, [x0]
  420674:	stp	x19, x20, [sp, #16]
  420678:	mov	x20, x1
  42067c:	ldr	x4, [x1]
  420680:	ldr	x1, [x0, #288]
  420684:	cmp	x4, x1
  420688:	b.cs	4206f4 <wcrtomb@plt+0x1bad4>  // b.hs, b.nlast
  42068c:	mov	x19, x2
  420690:	mov	x22, x3
  420694:	nop
  420698:	ldr	x0, [x0, #304]
  42069c:	lsl	x4, x4, #4
  4206a0:	mov	x1, x19
  4206a4:	mov	x2, #0xc                   	// #12
  4206a8:	ldr	x0, [x0, x4]
  4206ac:	bl	40b3b8 <wcrtomb@plt+0x6798>
  4206b0:	ldr	x0, [x21]
  4206b4:	mov	x2, #0xc                   	// #12
  4206b8:	ldr	x4, [x20]
  4206bc:	add	x1, x19, x2
  4206c0:	ldr	x0, [x0, #304]
  4206c4:	add	x19, x19, #0x18
  4206c8:	add	x4, x0, x4, lsl #4
  4206cc:	ldr	x0, [x4, #8]
  4206d0:	bl	40b3b8 <wcrtomb@plt+0x6798>
  4206d4:	ldr	x4, [x20]
  4206d8:	subs	x22, x22, #0x1
  4206dc:	ldr	x0, [x21]
  4206e0:	add	x4, x4, #0x1
  4206e4:	str	x4, [x20]
  4206e8:	ldr	x1, [x0, #288]
  4206ec:	ccmp	x4, x1, #0x2, ne  // ne = any
  4206f0:	b.cc	420698 <wcrtomb@plt+0x1ba78>  // b.lo, b.ul, b.last
  4206f4:	ldp	x19, x20, [sp, #16]
  4206f8:	ldp	x21, x22, [sp, #32]
  4206fc:	ldp	x29, x30, [sp], #48
  420700:	ret
  420704:	nop
  420708:	stp	x29, x30, [sp, #-64]!
  42070c:	mov	x29, sp
  420710:	stp	x19, x20, [sp, #16]
  420714:	mov	x20, x0
  420718:	stp	x21, x22, [sp, #32]
  42071c:	bl	405b20 <wcrtomb@plt+0xf00>
  420720:	mov	x22, x0
  420724:	ldr	x0, [x20, #24]
  420728:	bl	40b888 <wcrtomb@plt+0x6c68>
  42072c:	mov	x19, x0
  420730:	ldr	x1, [x20, #24]
  420734:	mov	w2, #0x53                  	// #83
  420738:	ldr	x0, [x1, #288]
  42073c:	strb	w2, [x19, #156]
  420740:	cmp	x0, #0x4
  420744:	b.ls	420750 <wcrtomb@plt+0x1bb30>  // b.plast
  420748:	mov	w0, #0x1                   	// #1
  42074c:	strb	w0, [x19, #482]
  420750:	ldr	x0, [x1, #136]
  420754:	mov	x21, x20
  420758:	add	x1, x19, #0x1e3
  42075c:	mov	x2, #0xc                   	// #12
  420760:	bl	40b3b8 <wcrtomb@plt+0x6798>
  420764:	ldr	x0, [x21, #24]!
  420768:	add	x1, x19, #0x7c
  42076c:	mov	x2, #0xc                   	// #12
  420770:	ldr	x0, [x0, #264]
  420774:	bl	40b3b8 <wcrtomb@plt+0x6798>
  420778:	str	xzr, [sp, #56]
  42077c:	mov	x0, x21
  420780:	add	x1, sp, #0x38
  420784:	add	x2, x19, #0x182
  420788:	mov	x3, #0x4                   	// #4
  42078c:	bl	420660 <wcrtomb@plt+0x1ba40>
  420790:	ldr	x0, [x20, #24]
  420794:	mov	x1, x19
  420798:	ldr	x3, [sp, #56]
  42079c:	mov	x2, x22
  4207a0:	ldr	x4, [x0, #288]
  4207a4:	cmp	x4, x3
  4207a8:	cset	w3, hi  // hi = pmore
  4207ac:	strb	w3, [x19, #482]
  4207b0:	bl	40b648 <wcrtomb@plt+0x6a28>
  4207b4:	ldr	x0, [x20, #24]
  4207b8:	ldr	x1, [sp, #56]
  4207bc:	ldr	x0, [x0, #288]
  4207c0:	cmp	x1, x0
  4207c4:	b.cs	42082c <wcrtomb@plt+0x1bc0c>  // b.hs, b.nlast
  4207c8:	mov	w22, #0x1                   	// #1
  4207cc:	nop
  4207d0:	bl	406220 <wcrtomb@plt+0x1600>
  4207d4:	mov	x19, x0
  4207d8:	mov	x2, #0x200                 	// #512
  4207dc:	mov	w1, #0x0                   	// #0
  4207e0:	bl	404410 <memset@plt>
  4207e4:	mov	x2, x19
  4207e8:	add	x1, sp, #0x38
  4207ec:	mov	x0, x21
  4207f0:	mov	x3, #0x15                  	// #21
  4207f4:	bl	420660 <wcrtomb@plt+0x1ba40>
  4207f8:	ldr	x2, [x20, #24]
  4207fc:	mov	x0, x19
  420800:	ldr	x1, [sp, #56]
  420804:	ldr	x2, [x2, #288]
  420808:	cmp	x2, x1
  42080c:	b.ls	420814 <wcrtomb@plt+0x1bbf4>  // b.plast
  420810:	strb	w22, [x19, #504]
  420814:	bl	405b90 <wcrtomb@plt+0xf70>
  420818:	ldr	x1, [x20, #24]
  42081c:	ldr	x0, [sp, #56]
  420820:	ldr	x1, [x1, #288]
  420824:	cmp	x1, x0
  420828:	b.hi	4207d0 <wcrtomb@plt+0x1bbb0>  // b.pmore
  42082c:	mov	w0, #0x1                   	// #1
  420830:	ldp	x19, x20, [sp, #16]
  420834:	ldp	x21, x22, [sp, #32]
  420838:	ldp	x29, x30, [sp], #64
  42083c:	ret
  420840:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  420844:	ldr	x0, [x0, #4016]
  420848:	ldrb	w0, [x0, #156]
  42084c:	cmp	w0, #0x53
  420850:	cset	w0, eq  // eq = none
  420854:	ret
  420858:	stp	x29, x30, [sp, #-128]!
  42085c:	mov	x29, sp
  420860:	stp	x19, x20, [sp, #16]
  420864:	mov	x19, x1
  420868:	stp	x21, x22, [sp, #32]
  42086c:	mov	w21, w0
  420870:	add	x0, sp, #0x50
  420874:	bl	41ed30 <wcrtomb@plt+0x1a110>
  420878:	ands	w22, w0, #0xff
  42087c:	b.eq	420a6c <wcrtomb@plt+0x1be4c>  // b.none
  420880:	ldr	x0, [x19, #152]
  420884:	mov	w1, #0x1                   	// #1
  420888:	str	xzr, [sp, #72]
  42088c:	str	w21, [sp, #80]
  420890:	strb	w1, [sp, #84]
  420894:	str	x19, [sp, #104]
  420898:	cbz	x0, 4209d8 <wcrtomb@plt+0x1bdb8>
  42089c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4208a0:	ldr	w0, [x0, #860]
  4208a4:	cmp	w0, #0x1
  4208a8:	b.eq	4209a0 <wcrtomb@plt+0x1bd80>  // b.none
  4208ac:	tst	w0, #0xfffffffd
  4208b0:	b.eq	42090c <wcrtomb@plt+0x1bcec>  // b.none
  4208b4:	ldr	x1, [x19, #264]
  4208b8:	mov	w22, #0x0                   	// #0
  4208bc:	ldr	x0, [sp, #96]
  4208c0:	sub	x0, x1, x0
  4208c4:	bl	40c398 <wcrtomb@plt+0x7778>
  4208c8:	ldr	x0, [sp, #112]
  4208cc:	ldr	x1, [x0, #8]
  4208d0:	cbz	x1, 4208f8 <wcrtomb@plt+0x1bcd8>
  4208d4:	add	x0, sp, #0x50
  4208d8:	blr	x1
  4208dc:	tst	w0, #0xff
  4208e0:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  4208e4:	cset	w0, eq  // eq = none
  4208e8:	ldp	x19, x20, [sp, #16]
  4208ec:	ldp	x21, x22, [sp, #32]
  4208f0:	ldp	x29, x30, [sp], #128
  4208f4:	ret
  4208f8:	mov	w0, #0x1                   	// #1
  4208fc:	ldp	x19, x20, [sp, #16]
  420900:	ldp	x21, x22, [sp, #32]
  420904:	ldp	x29, x30, [sp], #128
  420908:	ret
  42090c:	str	x23, [sp, #48]
  420910:	mov	x23, #0x0                   	// #0
  420914:	str	xzr, [sp, #64]
  420918:	str	xzr, [x19, #264]
  42091c:	b	420964 <wcrtomb@plt+0x1bd44>
  420920:	bl	4041d0 <lseek@plt>
  420924:	mov	x2, x0
  420928:	add	x1, sp, #0x40
  42092c:	mov	x0, x19
  420930:	orr	x23, x23, x20
  420934:	sub	x3, x2, x20
  420938:	cbnz	x23, 420948 <wcrtomb@plt+0x1bd28>
  42093c:	ldr	x4, [x19, #136]
  420940:	cmp	x2, x4
  420944:	b.eq	420aa8 <wcrtomb@plt+0x1be88>  // b.none
  420948:	mov	x23, x2
  42094c:	stp	x20, x3, [sp, #64]
  420950:	bl	41f6a8 <wcrtomb@plt+0x1aa88>
  420954:	ldr	x0, [sp, #72]
  420958:	ldr	x1, [x19, #264]
  42095c:	add	x1, x1, x0
  420960:	str	x1, [x19, #264]
  420964:	mov	x1, x23
  420968:	mov	w2, #0x3                   	// #3
  42096c:	mov	w0, w21
  420970:	bl	4041d0 <lseek@plt>
  420974:	mov	x20, x0
  420978:	mov	w2, #0x4                   	// #4
  42097c:	mov	w0, w21
  420980:	mov	x1, x20
  420984:	cmn	x20, #0x1
  420988:	b.ne	420920 <wcrtomb@plt+0x1bd00>  // b.any
  42098c:	bl	404ad0 <__errno_location@plt>
  420990:	ldr	w0, [x0]
  420994:	cmp	w0, #0x6
  420998:	b.eq	420ac0 <wcrtomb@plt+0x1bea0>  // b.none
  42099c:	ldr	x23, [sp, #48]
  4209a0:	add	x0, sp, #0x50
  4209a4:	bl	41f778 <wcrtomb@plt+0x1ab58>
  4209a8:	tst	w0, #0xff
  4209ac:	b.ne	4209f0 <wcrtomb@plt+0x1bdd0>  // b.any
  4209b0:	ldr	x19, [sp, #104]
  4209b4:	mov	w22, #0x0                   	// #0
  4209b8:	ldr	x1, [x19, #264]
  4209bc:	ldr	x0, [sp, #96]
  4209c0:	sub	x0, x1, x0
  4209c4:	bl	40c398 <wcrtomb@plt+0x7778>
  4209c8:	ldr	x0, [sp, #112]
  4209cc:	ldr	x1, [x0, #8]
  4209d0:	cbnz	x1, 4208d4 <wcrtomb@plt+0x1bcb4>
  4209d4:	b	4208f8 <wcrtomb@plt+0x1bcd8>
  4209d8:	ldr	x2, [x19, #136]
  4209dc:	str	xzr, [x19, #264]
  4209e0:	mov	x0, x19
  4209e4:	add	x1, sp, #0x40
  4209e8:	str	x2, [sp, #64]
  4209ec:	bl	41f6a8 <wcrtomb@plt+0x1aa88>
  4209f0:	ldr	x0, [sp, #112]
  4209f4:	ldr	x1, [x0, #56]
  4209f8:	cbz	x1, 420a80 <wcrtomb@plt+0x1be60>
  4209fc:	ldr	x1, [x0, #24]
  420a00:	cbz	x1, 420a0c <wcrtomb@plt+0x1bdec>
  420a04:	add	x0, sp, #0x50
  420a08:	blr	x1
  420a0c:	ldp	x0, x1, [sp, #96]
  420a10:	ldr	x2, [x1, #264]
  420a14:	sub	x2, x2, x0
  420a18:	tbnz	w21, #31, 420a8c <wcrtomb@plt+0x1be6c>
  420a1c:	ldr	x0, [x1, #8]
  420a20:	mov	x20, #0x0                   	// #0
  420a24:	ldr	x1, [x1, #136]
  420a28:	bl	405660 <wcrtomb@plt+0xa40>
  420a2c:	nop
  420a30:	ldr	x19, [sp, #104]
  420a34:	mov	x1, x20
  420a38:	add	x0, sp, #0x50
  420a3c:	ldr	x2, [x19, #288]
  420a40:	cmp	x2, x20
  420a44:	b.ls	420adc <wcrtomb@plt+0x1bebc>  // b.plast
  420a48:	ldr	x2, [sp, #112]
  420a4c:	add	x20, x20, #0x1
  420a50:	ldr	x2, [x2, #56]
  420a54:	cbz	x2, 4208b4 <wcrtomb@plt+0x1bc94>
  420a58:	blr	x2
  420a5c:	tst	w0, #0xff
  420a60:	b.ne	420a30 <wcrtomb@plt+0x1be10>  // b.any
  420a64:	ldr	x19, [sp, #104]
  420a68:	b	4209b4 <wcrtomb@plt+0x1bd94>
  420a6c:	mov	w0, #0x3                   	// #3
  420a70:	ldp	x19, x20, [sp, #16]
  420a74:	ldp	x21, x22, [sp, #32]
  420a78:	ldp	x29, x30, [sp], #128
  420a7c:	ret
  420a80:	ldp	x0, x1, [sp, #96]
  420a84:	ldr	x2, [x1, #264]
  420a88:	sub	x2, x2, x0
  420a8c:	mov	x0, x2
  420a90:	bl	40c398 <wcrtomb@plt+0x7778>
  420a94:	ldr	x0, [sp, #112]
  420a98:	ldr	x1, [x0, #8]
  420a9c:	cbnz	x1, 4208d4 <wcrtomb@plt+0x1bcb4>
  420aa0:	mov	w0, #0x0                   	// #0
  420aa4:	b	4208e8 <wcrtomb@plt+0x1bcc8>
  420aa8:	mov	w0, w21
  420aac:	mov	w2, #0x0                   	// #0
  420ab0:	mov	x1, #0x0                   	// #0
  420ab4:	bl	4041d0 <lseek@plt>
  420ab8:	ldr	x23, [sp, #48]
  420abc:	b	4209a0 <wcrtomb@plt+0x1bd80>
  420ac0:	ldr	x2, [x19, #136]
  420ac4:	mov	x0, x19
  420ac8:	add	x1, sp, #0x40
  420acc:	stp	x2, xzr, [sp, #64]
  420ad0:	bl	41f6a8 <wcrtomb@plt+0x1aa88>
  420ad4:	ldr	x23, [sp, #48]
  420ad8:	b	4209f0 <wcrtomb@plt+0x1bdd0>
  420adc:	ldr	x0, [sp, #96]
  420ae0:	ldr	x2, [x19, #264]
  420ae4:	sub	x2, x2, x0
  420ae8:	b	420a8c <wcrtomb@plt+0x1be6c>
  420aec:	nop
  420af0:	mov	x3, x0
  420af4:	stp	x29, x30, [sp, #-64]!
  420af8:	mov	x29, sp
  420afc:	add	x0, sp, #0x10
  420b00:	bl	41ed30 <wcrtomb@plt+0x1a110>
  420b04:	tst	w0, #0xff
  420b08:	b.eq	420b30 <wcrtomb@plt+0x1bf10>  // b.none
  420b0c:	ldr	x0, [sp, #48]
  420b10:	ldr	x1, [x0, #16]
  420b14:	str	x3, [sp, #40]
  420b18:	cbz	x1, 420b30 <wcrtomb@plt+0x1bf10>
  420b1c:	add	x0, sp, #0x10
  420b20:	blr	x1
  420b24:	and	w0, w0, #0xff
  420b28:	ldp	x29, x30, [sp], #64
  420b2c:	ret
  420b30:	mov	w0, #0x0                   	// #0
  420b34:	ldp	x29, x30, [sp], #64
  420b38:	ret
  420b3c:	nop
  420b40:	mov	x3, x0
  420b44:	stp	x29, x30, [sp, #-64]!
  420b48:	mov	x29, sp
  420b4c:	add	x0, sp, #0x10
  420b50:	bl	41ed30 <wcrtomb@plt+0x1a110>
  420b54:	ands	w0, w0, #0xff
  420b58:	b.eq	420b78 <wcrtomb@plt+0x1bf58>  // b.none
  420b5c:	ldr	x1, [sp, #48]
  420b60:	str	x3, [sp, #40]
  420b64:	ldr	x1, [x1, #32]
  420b68:	cbz	x1, 420b78 <wcrtomb@plt+0x1bf58>
  420b6c:	add	x0, sp, #0x10
  420b70:	blr	x1
  420b74:	and	w0, w0, #0xff
  420b78:	ldp	x29, x30, [sp], #64
  420b7c:	ret
  420b80:	stp	x29, x30, [sp, #-96]!
  420b84:	mov	w3, w0
  420b88:	mov	x4, x1
  420b8c:	mov	x29, sp
  420b90:	add	x0, sp, #0x30
  420b94:	stp	x19, x20, [sp, #16]
  420b98:	mov	x20, x2
  420b9c:	str	x21, [sp, #32]
  420ba0:	bl	41ed30 <wcrtomb@plt+0x1a110>
  420ba4:	ands	w21, w0, #0xff
  420ba8:	b.eq	420c80 <wcrtomb@plt+0x1c060>  // b.none
  420bac:	mov	x1, #0x0                   	// #0
  420bb0:	mov	w0, w3
  420bb4:	mov	w2, #0x0                   	// #0
  420bb8:	str	w3, [sp, #48]
  420bbc:	str	x4, [sp, #72]
  420bc0:	bl	4041d0 <lseek@plt>
  420bc4:	ldr	x5, [sp, #80]
  420bc8:	cmp	x0, #0x0
  420bcc:	cset	w0, eq  // eq = none
  420bd0:	strb	w0, [sp, #52]
  420bd4:	str	xzr, [sp, #56]
  420bd8:	ldr	x1, [x5, #40]
  420bdc:	cbz	x1, 420bf4 <wcrtomb@plt+0x1bfd4>
  420be0:	add	x0, sp, #0x30
  420be4:	blr	x1
  420be8:	tst	w0, #0xff
  420bec:	b.eq	420c94 <wcrtomb@plt+0x1c074>  // b.none
  420bf0:	ldr	x5, [sp, #80]
  420bf4:	mov	x19, #0x0                   	// #0
  420bf8:	ldr	x4, [sp, #72]
  420bfc:	mov	x1, x19
  420c00:	add	x0, sp, #0x30
  420c04:	ldr	x3, [x4, #288]
  420c08:	cmp	x3, x19
  420c0c:	b.ls	420c44 <wcrtomb@plt+0x1c024>  // b.plast
  420c10:	ldr	x3, [x5, #64]
  420c14:	add	x19, x19, #0x1
  420c18:	cbz	x3, 420c98 <wcrtomb@plt+0x1c078>
  420c1c:	blr	x3
  420c20:	tst	w0, #0xff
  420c24:	b.eq	420c94 <wcrtomb@plt+0x1c074>  // b.none
  420c28:	ldr	x4, [sp, #72]
  420c2c:	mov	x1, x19
  420c30:	add	x0, sp, #0x30
  420c34:	ldr	x5, [sp, #80]
  420c38:	ldr	x3, [x4, #288]
  420c3c:	cmp	x3, x19
  420c40:	b.hi	420c10 <wcrtomb@plt+0x1bff0>  // b.pmore
  420c44:	ldr	x2, [sp, #64]
  420c48:	ldr	x0, [x4, #264]
  420c4c:	ldr	x1, [x5, #8]
  420c50:	sub	x0, x0, x2
  420c54:	str	x0, [x20]
  420c58:	cbz	x1, 420cc8 <wcrtomb@plt+0x1c0a8>
  420c5c:	add	x0, sp, #0x30
  420c60:	blr	x1
  420c64:	tst	w0, #0xff
  420c68:	ccmp	w21, #0x0, #0x4, ne  // ne = any
  420c6c:	cset	w0, eq  // eq = none
  420c70:	ldp	x19, x20, [sp, #16]
  420c74:	ldr	x21, [sp, #32]
  420c78:	ldp	x29, x30, [sp], #96
  420c7c:	ret
  420c80:	mov	w0, #0x3                   	// #3
  420c84:	ldp	x19, x20, [sp, #16]
  420c88:	ldr	x21, [sp, #32]
  420c8c:	ldp	x29, x30, [sp], #96
  420c90:	ret
  420c94:	ldp	x4, x5, [sp, #72]
  420c98:	mov	w21, #0x0                   	// #0
  420c9c:	ldr	x2, [sp, #64]
  420ca0:	ldr	x0, [x4, #264]
  420ca4:	ldr	x1, [x5, #8]
  420ca8:	sub	x0, x0, x2
  420cac:	str	x0, [x20]
  420cb0:	mov	w0, #0x1                   	// #1
  420cb4:	cbnz	x1, 420c5c <wcrtomb@plt+0x1c03c>
  420cb8:	ldp	x19, x20, [sp, #16]
  420cbc:	ldr	x21, [sp, #32]
  420cc0:	ldp	x29, x30, [sp], #96
  420cc4:	ret
  420cc8:	mov	w0, #0x0                   	// #0
  420ccc:	ldp	x19, x20, [sp, #16]
  420cd0:	ldr	x21, [sp, #32]
  420cd4:	ldp	x29, x30, [sp], #96
  420cd8:	ret
  420cdc:	nop
  420ce0:	stp	x29, x30, [sp, #-80]!
  420ce4:	mov	x3, x0
  420ce8:	mov	x29, sp
  420cec:	add	x0, sp, #0x20
  420cf0:	str	x19, [sp, #16]
  420cf4:	bl	41ed30 <wcrtomb@plt+0x1a110>
  420cf8:	ands	w19, w0, #0xff
  420cfc:	b.eq	420da0 <wcrtomb@plt+0x1c180>  // b.none
  420d00:	ldr	x0, [sp, #64]
  420d04:	mov	w1, #0xffffffff            	// #-1
  420d08:	str	w1, [sp, #32]
  420d0c:	str	x3, [sp, #56]
  420d10:	ldr	x1, [x0, #40]
  420d14:	cbz	x1, 420d64 <wcrtomb@plt+0x1c144>
  420d18:	add	x0, sp, #0x20
  420d1c:	blr	x1
  420d20:	and	w19, w0, #0xff
  420d24:	ldp	x0, x1, [sp, #48]
  420d28:	ldr	x1, [x1, #264]
  420d2c:	sub	x0, x1, x0
  420d30:	bl	419a98 <wcrtomb@plt+0x14e78>
  420d34:	ldr	x0, [sp, #64]
  420d38:	ldr	x1, [x0, #8]
  420d3c:	cbz	x1, 420d90 <wcrtomb@plt+0x1c170>
  420d40:	add	x0, sp, #0x20
  420d44:	blr	x1
  420d48:	mov	w1, w0
  420d4c:	mov	w0, #0x1                   	// #1
  420d50:	tst	w1, #0xff
  420d54:	b.ne	420d90 <wcrtomb@plt+0x1c170>  // b.any
  420d58:	ldr	x19, [sp, #16]
  420d5c:	ldp	x29, x30, [sp], #80
  420d60:	ret
  420d64:	ldr	x1, [x3, #264]
  420d68:	ldr	x0, [sp, #48]
  420d6c:	sub	x0, x1, x0
  420d70:	bl	419a98 <wcrtomb@plt+0x14e78>
  420d74:	ldr	x0, [sp, #64]
  420d78:	ldr	x1, [x0, #8]
  420d7c:	cbnz	x1, 420d40 <wcrtomb@plt+0x1c120>
  420d80:	mov	w0, #0x0                   	// #0
  420d84:	ldr	x19, [sp, #16]
  420d88:	ldp	x29, x30, [sp], #80
  420d8c:	ret
  420d90:	eor	w0, w19, #0x1
  420d94:	ldr	x19, [sp, #16]
  420d98:	ldp	x29, x30, [sp], #80
  420d9c:	ret
  420da0:	mov	w0, #0x3                   	// #3
  420da4:	ldr	x19, [sp, #16]
  420da8:	ldp	x29, x30, [sp], #80
  420dac:	ret
  420db0:	stp	x29, x30, [sp, #-96]!
  420db4:	mov	w3, w0
  420db8:	mov	x29, sp
  420dbc:	add	x0, sp, #0x30
  420dc0:	stp	x19, x20, [sp, #16]
  420dc4:	mov	x19, x1
  420dc8:	str	x21, [sp, #32]
  420dcc:	bl	41ed30 <wcrtomb@plt+0x1a110>
  420dd0:	ands	w21, w0, #0xff
  420dd4:	b.eq	420ed0 <wcrtomb@plt+0x1c2b0>  // b.none
  420dd8:	ldr	x0, [sp, #80]
  420ddc:	mov	w1, #0x1                   	// #1
  420de0:	strb	w1, [sp, #52]
  420de4:	str	w3, [sp, #48]
  420de8:	ldr	x1, [x0, #40]
  420dec:	str	x19, [sp, #72]
  420df0:	cbz	x1, 420ec4 <wcrtomb@plt+0x1c2a4>
  420df4:	add	x0, sp, #0x30
  420df8:	blr	x1
  420dfc:	mov	w1, w0
  420e00:	mov	x0, x19
  420e04:	and	w19, w1, #0xff
  420e08:	bl	405688 <wcrtomb@plt+0xa68>
  420e0c:	cbz	w19, 420e48 <wcrtomb@plt+0x1c228>
  420e10:	ldr	x2, [sp, #72]
  420e14:	mov	x1, #0x0                   	// #0
  420e18:	mov	x19, #0x0                   	// #0
  420e1c:	nop
  420e20:	ldr	x3, [x2, #288]
  420e24:	lsl	x20, x19, #4
  420e28:	add	x0, sp, #0x30
  420e2c:	cmp	x3, x19
  420e30:	b.ls	420e60 <wcrtomb@plt+0x1c240>  // b.plast
  420e34:	ldr	x2, [x2, #304]
  420e38:	ldr	x2, [x2, x20]
  420e3c:	bl	41f378 <wcrtomb@plt+0x1a758>
  420e40:	tst	w0, #0xff
  420e44:	b.ne	420e8c <wcrtomb@plt+0x1c26c>  // b.any
  420e48:	ldr	x3, [sp, #72]
  420e4c:	mov	w21, #0x0                   	// #0
  420e50:	ldr	x1, [x3, #264]
  420e54:	ldr	x0, [sp, #64]
  420e58:	sub	x0, x1, x0
  420e5c:	bl	419a98 <wcrtomb@plt+0x14e78>
  420e60:	bl	4056b0 <wcrtomb@plt+0xa90>
  420e64:	ldr	x0, [sp, #80]
  420e68:	ldr	x1, [x0, #8]
  420e6c:	cbz	x1, 420e78 <wcrtomb@plt+0x1c258>
  420e70:	add	x0, sp, #0x30
  420e74:	blr	x1
  420e78:	mov	w0, w21
  420e7c:	ldp	x19, x20, [sp, #16]
  420e80:	ldr	x21, [sp, #32]
  420e84:	ldp	x29, x30, [sp], #96
  420e88:	ret
  420e8c:	mov	x1, x19
  420e90:	add	x0, sp, #0x30
  420e94:	bl	41f4c8 <wcrtomb@plt+0x1a8a8>
  420e98:	tst	w0, #0xff
  420e9c:	ldr	x2, [sp, #72]
  420ea0:	add	x19, x19, #0x1
  420ea4:	mov	x3, x2
  420ea8:	ldr	x1, [x2, #304]
  420eac:	add	x0, x1, x20
  420eb0:	ldr	x1, [x1, x20]
  420eb4:	ldr	x0, [x0, #8]
  420eb8:	add	x1, x1, x0
  420ebc:	b.ne	420e20 <wcrtomb@plt+0x1c200>  // b.any
  420ec0:	b	420e4c <wcrtomb@plt+0x1c22c>
  420ec4:	mov	x0, x19
  420ec8:	bl	405688 <wcrtomb@plt+0xa68>
  420ecc:	b	420e10 <wcrtomb@plt+0x1c1f0>
  420ed0:	mov	w21, #0x1                   	// #1
  420ed4:	mov	w0, w21
  420ed8:	ldp	x19, x20, [sp, #16]
  420edc:	ldr	x21, [sp, #32]
  420ee0:	ldp	x29, x30, [sp], #96
  420ee4:	ret
  420ee8:	stp	x29, x30, [sp, #-64]!
  420eec:	mov	x29, sp
  420ef0:	stp	x19, x20, [sp, #16]
  420ef4:	stp	x21, x22, [sp, #32]
  420ef8:	mov	x22, x1
  420efc:	mov	w1, #0x2e                  	// #46
  420f00:	stp	x23, x24, [sp, #48]
  420f04:	mov	x23, x0
  420f08:	bl	4045d0 <strrchr@plt>
  420f0c:	mov	x20, x0
  420f10:	cbz	x0, 420f7c <wcrtomb@plt+0x1c35c>
  420f14:	add	x24, x0, #0x1
  420f18:	mov	x0, x24
  420f1c:	bl	403ff0 <strlen@plt>
  420f20:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  420f24:	mov	x21, x0
  420f28:	add	x19, x1, #0xfa8
  420f2c:	ldr	x20, [x1, #4008]
  420f30:	cbnz	x20, 420f40 <wcrtomb@plt+0x1c320>
  420f34:	b	420f7c <wcrtomb@plt+0x1c35c>
  420f38:	ldr	x20, [x19, #24]!
  420f3c:	cbz	x20, 420f7c <wcrtomb@plt+0x1c35c>
  420f40:	ldr	x3, [x19, #8]
  420f44:	cmp	x3, x21
  420f48:	b.ne	420f38 <wcrtomb@plt+0x1c318>  // b.any
  420f4c:	mov	x0, x20
  420f50:	mov	x2, x21
  420f54:	mov	x1, x24
  420f58:	bl	4046d0 <memcmp@plt>
  420f5c:	cbnz	w0, 420f38 <wcrtomb@plt+0x1c318>
  420f60:	mov	x20, x19
  420f64:	cbz	x22, 420f7c <wcrtomb@plt+0x1c35c>
  420f68:	mvn	x21, x21
  420f6c:	mov	x0, x23
  420f70:	bl	403ff0 <strlen@plt>
  420f74:	add	x21, x21, x0
  420f78:	str	x21, [x22]
  420f7c:	mov	x0, x20
  420f80:	ldp	x19, x20, [sp, #16]
  420f84:	ldp	x21, x22, [sp, #32]
  420f88:	ldp	x23, x24, [sp, #48]
  420f8c:	ldp	x29, x30, [sp], #64
  420f90:	ret
  420f94:	nop
  420f98:	stp	x29, x30, [sp, #-32]!
  420f9c:	mov	x29, sp
  420fa0:	str	x19, [sp, #16]
  420fa4:	mov	x19, x1
  420fa8:	mov	x1, #0x0                   	// #0
  420fac:	bl	420ee8 <wcrtomb@plt+0x1c2c8>
  420fb0:	cbz	x0, 420fb8 <wcrtomb@plt+0x1c398>
  420fb4:	ldr	x19, [x0, #16]
  420fb8:	cbz	x19, 420fc4 <wcrtomb@plt+0x1c3a4>
  420fbc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  420fc0:	str	x19, [x0, #848]
  420fc4:	ldr	x19, [sp, #16]
  420fc8:	ldp	x29, x30, [sp], #32
  420fcc:	ret
  420fd0:	stp	x29, x30, [sp, #-64]!
  420fd4:	mov	x29, sp
  420fd8:	add	x1, sp, #0x38
  420fdc:	stp	x19, x20, [sp, #16]
  420fe0:	mov	x20, x0
  420fe4:	bl	420ee8 <wcrtomb@plt+0x1c2c8>
  420fe8:	mov	x19, x0
  420fec:	cbz	x0, 421058 <wcrtomb@plt+0x1c438>
  420ff0:	stp	x21, x22, [sp, #32]
  420ff4:	ldr	x21, [sp, #56]
  420ff8:	cmp	x21, #0x4
  420ffc:	b.ls	421068 <wcrtomb@plt+0x1c448>  // b.plast
  421000:	sub	x22, x21, #0x4
  421004:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  421008:	add	x0, x20, x22
  42100c:	add	x1, x1, #0x6c0
  421010:	mov	x2, #0x4                   	// #4
  421014:	bl	4043c0 <strncmp@plt>
  421018:	cbnz	w0, 421034 <wcrtomb@plt+0x1c414>
  42101c:	ldr	x0, [x19]
  421020:	ldrb	w0, [x0]
  421024:	cmp	w0, #0x74
  421028:	b.eq	421034 <wcrtomb@plt+0x1c414>  // b.none
  42102c:	mov	x21, x22
  421030:	str	x22, [sp, #56]
  421034:	add	x0, x21, #0x1
  421038:	bl	440f48 <argp_parse@@Base+0xd060>
  42103c:	mov	x1, x20
  421040:	mov	x19, x0
  421044:	ldr	x20, [sp, #56]
  421048:	mov	x2, x20
  42104c:	bl	403f70 <memcpy@plt>
  421050:	strb	wzr, [x19, x20]
  421054:	ldp	x21, x22, [sp, #32]
  421058:	mov	x0, x19
  42105c:	ldp	x19, x20, [sp, #16]
  421060:	ldp	x29, x30, [sp], #64
  421064:	ret
  421068:	mov	x19, #0x0                   	// #0
  42106c:	cbnz	x21, 421034 <wcrtomb@plt+0x1c414>
  421070:	mov	x0, x19
  421074:	ldp	x19, x20, [sp, #16]
  421078:	ldp	x21, x22, [sp, #32]
  42107c:	ldp	x29, x30, [sp], #64
  421080:	ret
  421084:	nop
  421088:	stp	x29, x30, [sp, #-64]!
  42108c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x14e10>
  421090:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x14e10>
  421094:	add	x2, x2, #0x748
  421098:	add	x3, x3, #0x750
  42109c:	add	x1, sp, #0x20
  4210a0:	mov	x29, sp
  4210a4:	str	x19, [sp, #16]
  4210a8:	mov	x19, x0
  4210ac:	mov	x0, x2
  4210b0:	stp	x2, x3, [sp, #32]
  4210b4:	str	x19, [sp, #48]
  4210b8:	str	xzr, [sp, #56]
  4210bc:	bl	4044f0 <execv@plt>
  4210c0:	mov	x0, x19
  4210c4:	bl	429d08 <wcrtomb@plt+0x250e8>
  4210c8:	stp	x29, x30, [sp, #-48]!
  4210cc:	mov	x29, sp
  4210d0:	str	x19, [sp, #16]
  4210d4:	mov	w19, w0
  4210d8:	b	4210ec <wcrtomb@plt+0x1c4cc>
  4210dc:	bl	404ad0 <__errno_location@plt>
  4210e0:	ldr	w1, [x0]
  4210e4:	cmp	w1, #0x4
  4210e8:	b.ne	421134 <wcrtomb@plt+0x1c514>  // b.any
  4210ec:	add	x1, sp, #0x2c
  4210f0:	mov	w0, w19
  4210f4:	mov	w2, #0x0                   	// #0
  4210f8:	bl	404b60 <waitpid@plt>
  4210fc:	cmn	w0, #0x1
  421100:	b.eq	4210dc <wcrtomb@plt+0x1c4bc>  // b.none
  421104:	ldr	w1, [sp, #44]
  421108:	and	w3, w1, #0x7f
  42110c:	add	w2, w3, #0x1
  421110:	ubfx	x0, x1, #8, #8
  421114:	sbfx	x1, x2, #1, #7
  421118:	cmp	w1, #0x0
  42111c:	b.gt	421124 <wcrtomb@plt+0x1c504>
  421120:	bl	404020 <exit@plt>
  421124:	mov	w0, w3
  421128:	bl	404030 <raise@plt>
  42112c:	mov	w0, #0x0                   	// #0
  421130:	bl	404020 <exit@plt>
  421134:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421138:	ldr	x0, [x0, #848]
  42113c:	bl	42a2d8 <wcrtomb@plt+0x256b8>
  421140:	b	421104 <wcrtomb@plt+0x1c4e4>
  421144:	nop
  421148:	stp	x29, x30, [sp, #-320]!
  42114c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  421150:	mov	x2, #0x1                   	// #1
  421154:	mov	x29, sp
  421158:	ldr	x1, [x1, #1120]
  42115c:	add	x0, sp, #0x54
  421160:	stp	x19, x20, [sp, #16]
  421164:	stp	x21, x22, [sp, #32]
  421168:	stp	x23, x24, [sp, #48]
  42116c:	str	x25, [sp, #64]
  421170:	str	x2, [sp, #104]
  421174:	str	x1, [sp, #200]
  421178:	bl	4057b0 <wcrtomb@plt+0xb90>
  42117c:	cbz	x0, 4212d8 <wcrtomb@plt+0x1c6b8>
  421180:	mov	w2, #0xe06                 	// #3590
  421184:	mov	w23, #0xe0e                 	// #3598
  421188:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x14e10>
  42118c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  421190:	mov	x20, x0
  421194:	add	x22, x22, #0x778
  421198:	add	x21, x21, #0x198
  42119c:	movk	w2, #0x208, lsl #16
  4211a0:	movk	w23, #0x208, lsl #16
  4211a4:	b	421274 <wcrtomb@plt+0x1c654>
  4211a8:	ldp	x2, x0, [sp, #88]
  4211ac:	ldr	x1, [sp, #104]
  4211b0:	lsl	x2, x2, #3
  4211b4:	add	x1, x0, x1, lsl #3
  4211b8:	bl	403f80 <memmove@plt>
  4211bc:	ldp	x0, x1, [sp, #88]
  4211c0:	str	x22, [x1, x0, lsl #3]
  4211c4:	ldr	x0, [x1]
  4211c8:	bl	4046f0 <execvp@plt>
  4211cc:	ldp	x2, x1, [sp, #88]
  4211d0:	add	x0, sp, #0x54
  4211d4:	str	xzr, [x1, x2, lsl #3]
  4211d8:	bl	405828 <wcrtomb@plt+0xc08>
  4211dc:	mov	x19, x0
  4211e0:	cbz	x0, 4212d0 <wcrtomb@plt+0x1c6b0>
  4211e4:	ldr	w0, [x21]
  4211e8:	tbz	w0, #19, 42126c <wcrtomb@plt+0x1c64c>
  4211ec:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  4211f0:	ldr	x0, [x24, #952]
  4211f4:	cbz	x0, 4211fc <wcrtomb@plt+0x1c5dc>
  4211f8:	blr	x0
  4211fc:	bl	404ad0 <__errno_location@plt>
  421200:	mov	x3, x0
  421204:	mov	w2, #0x5                   	// #5
  421208:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  42120c:	mov	x0, #0x0                   	// #0
  421210:	add	x1, x1, #0x758
  421214:	ldr	w25, [x3]
  421218:	bl	4049c0 <dcgettext@plt>
  42121c:	mov	x3, x20
  421220:	mov	x2, x0
  421224:	mov	w1, w25
  421228:	mov	w0, #0x0                   	// #0
  42122c:	bl	404050 <error@plt>
  421230:	ldr	w0, [x21]
  421234:	tbz	w0, #19, 42126c <wcrtomb@plt+0x1c64c>
  421238:	ldr	x0, [x24, #952]
  42123c:	cbz	x0, 421244 <wcrtomb@plt+0x1c624>
  421240:	blr	x0
  421244:	mov	w2, #0x5                   	// #5
  421248:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  42124c:	mov	x0, #0x0                   	// #0
  421250:	add	x1, x1, #0x768
  421254:	bl	4049c0 <dcgettext@plt>
  421258:	mov	x2, x0
  42125c:	mov	x3, x19
  421260:	mov	w1, #0x0                   	// #0
  421264:	mov	w0, #0x0                   	// #0
  421268:	bl	404050 <error@plt>
  42126c:	mov	x20, x19
  421270:	mov	w2, w23
  421274:	add	x1, sp, #0x58
  421278:	mov	x0, x20
  42127c:	bl	42f1f0 <wcrtomb@plt+0x2a5d0>
  421280:	cbz	w0, 4211a8 <wcrtomb@plt+0x1c588>
  421284:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421288:	ldr	x0, [x0, #952]
  42128c:	cbz	x0, 421294 <wcrtomb@plt+0x1c674>
  421290:	blr	x0
  421294:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  421298:	add	x1, x1, #0x600
  42129c:	mov	w2, #0x5                   	// #5
  4212a0:	mov	x0, #0x0                   	// #0
  4212a4:	bl	4049c0 <dcgettext@plt>
  4212a8:	mov	x19, x0
  4212ac:	add	x0, sp, #0x58
  4212b0:	bl	42c1d8 <wcrtomb@plt+0x275b8>
  4212b4:	mov	x3, x20
  4212b8:	mov	x4, x0
  4212bc:	mov	x2, x19
  4212c0:	mov	w1, #0x0                   	// #0
  4212c4:	mov	w0, #0x0                   	// #0
  4212c8:	bl	404050 <error@plt>
  4212cc:	bl	40e770 <wcrtomb@plt+0x9b50>
  4212d0:	mov	x0, x20
  4212d4:	bl	429d08 <wcrtomb@plt+0x250e8>
  4212d8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4212dc:	ldr	x0, [x0, #952]
  4212e0:	cbz	x0, 4212e8 <wcrtomb@plt+0x1c6c8>
  4212e4:	blr	x0
  4212e8:	mov	w2, #0x5                   	// #5
  4212ec:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  4212f0:	mov	x0, #0x0                   	// #0
  4212f4:	add	x1, x1, #0x780
  4212f8:	bl	4049c0 <dcgettext@plt>
  4212fc:	mov	x2, x0
  421300:	mov	w1, #0x0                   	// #0
  421304:	mov	w0, #0x0                   	// #0
  421308:	bl	404050 <error@plt>
  42130c:	bl	40e770 <wcrtomb@plt+0x9b50>
  421310:	cbz	x1, 421330 <wcrtomb@plt+0x1c710>
  421314:	stp	x29, x30, [sp, #-16]!
  421318:	mov	w2, #0x1                   	// #1
  42131c:	mov	x29, sp
  421320:	bl	404100 <setenv@plt>
  421324:	cbnz	w0, 421334 <wcrtomb@plt+0x1c714>
  421328:	ldp	x29, x30, [sp], #16
  42132c:	ret
  421330:	b	404930 <unsetenv@plt>
  421334:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  421338:	stp	x29, x30, [sp, #-64]!
  42133c:	mov	x29, sp
  421340:	str	x19, [sp, #16]
  421344:	mov	x19, x0
  421348:	mov	x0, x1
  42134c:	mov	x1, x2
  421350:	add	x2, sp, #0x20
  421354:	bl	41b298 <wcrtomb@plt+0x16678>
  421358:	mov	w2, #0x1                   	// #1
  42135c:	mov	x1, x0
  421360:	mov	x0, x19
  421364:	bl	404100 <setenv@plt>
  421368:	cbnz	w0, 421378 <wcrtomb@plt+0x1c758>
  42136c:	ldr	x19, [sp, #16]
  421370:	ldp	x29, x30, [sp], #64
  421374:	ret
  421378:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  42137c:	nop
  421380:	stp	x29, x30, [sp, #-64]!
  421384:	mov	x29, sp
  421388:	str	x19, [sp, #16]
  42138c:	mov	x19, x0
  421390:	mov	x0, x1
  421394:	add	x1, sp, #0x28
  421398:	bl	4398d8 <argp_parse@@Base+0x59f0>
  42139c:	mov	x1, x0
  4213a0:	mov	w2, #0x1                   	// #1
  4213a4:	mov	x0, x19
  4213a8:	bl	404100 <setenv@plt>
  4213ac:	cbnz	w0, 4213bc <wcrtomb@plt+0x1c79c>
  4213b0:	ldr	x19, [sp, #16]
  4213b4:	ldp	x29, x30, [sp], #64
  4213b8:	ret
  4213bc:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  4213c0:	stp	x29, x30, [sp, #-144]!
  4213c4:	mov	x1, x0
  4213c8:	mov	w0, #0x0                   	// #0
  4213cc:	mov	x29, sp
  4213d0:	add	x2, sp, #0x10
  4213d4:	bl	404b10 <__xstat@plt>
  4213d8:	cbnz	w0, 4213f4 <wcrtomb@plt+0x1c7d4>
  4213dc:	ldr	w0, [sp, #32]
  4213e0:	ldp	x29, x30, [sp], #144
  4213e4:	and	w0, w0, #0xf000
  4213e8:	cmp	w0, #0x8, lsl #12
  4213ec:	cset	w0, eq  // eq = none
  4213f0:	ret
  4213f4:	bl	404ad0 <__errno_location@plt>
  4213f8:	ldr	w0, [x0]
  4213fc:	ldp	x29, x30, [sp], #144
  421400:	cmp	w0, #0x2
  421404:	cset	w0, eq  // eq = none
  421408:	ret
  42140c:	nop
  421410:	cmp	w0, w1
  421414:	b.ne	42141c <wcrtomb@plt+0x1c7fc>  // b.any
  421418:	ret
  42141c:	stp	x29, x30, [sp, #-48]!
  421420:	mov	x29, sp
  421424:	stp	x19, x20, [sp, #16]
  421428:	mov	w19, w0
  42142c:	mov	w20, w1
  421430:	mov	w0, w1
  421434:	bl	4045c0 <close@plt>
  421438:	cbz	w0, 421454 <wcrtomb@plt+0x1c834>
  42143c:	str	x21, [sp, #32]
  421440:	bl	404ad0 <__errno_location@plt>
  421444:	ldr	w21, [x0]
  421448:	cmp	w21, #0x9
  42144c:	b.ne	4214bc <wcrtomb@plt+0x1c89c>  // b.any
  421450:	ldr	x21, [sp, #32]
  421454:	mov	w0, w19
  421458:	bl	404040 <dup@plt>
  42145c:	cmp	w20, w0
  421460:	b.ne	421474 <wcrtomb@plt+0x1c854>  // b.any
  421464:	mov	w0, w19
  421468:	ldp	x19, x20, [sp, #16]
  42146c:	ldp	x29, x30, [sp], #48
  421470:	b	405be8 <wcrtomb@plt+0xfc8>
  421474:	str	x21, [sp, #32]
  421478:	tbz	w0, #31, 4214f4 <wcrtomb@plt+0x1c8d4>
  42147c:	bl	404ad0 <__errno_location@plt>
  421480:	ldr	w19, [x0]
  421484:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421488:	ldr	x1, [x1, #952]
  42148c:	cbz	x1, 421494 <wcrtomb@plt+0x1c874>
  421490:	blr	x1
  421494:	mov	w2, #0x5                   	// #5
  421498:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  42149c:	mov	x0, #0x0                   	// #0
  4214a0:	add	x1, x1, #0x7b8
  4214a4:	bl	4049c0 <dcgettext@plt>
  4214a8:	mov	x2, x0
  4214ac:	mov	w1, w19
  4214b0:	mov	w0, #0x0                   	// #0
  4214b4:	bl	404050 <error@plt>
  4214b8:	bl	40e770 <wcrtomb@plt+0x9b50>
  4214bc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4214c0:	ldr	x0, [x0, #952]
  4214c4:	cbz	x0, 4214cc <wcrtomb@plt+0x1c8ac>
  4214c8:	blr	x0
  4214cc:	mov	w2, #0x5                   	// #5
  4214d0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  4214d4:	mov	x0, #0x0                   	// #0
  4214d8:	add	x1, x1, #0x7a8
  4214dc:	bl	4049c0 <dcgettext@plt>
  4214e0:	mov	x2, x0
  4214e4:	mov	w1, w21
  4214e8:	mov	w0, #0x0                   	// #0
  4214ec:	bl	404050 <error@plt>
  4214f0:	bl	40e770 <wcrtomb@plt+0x9b50>
  4214f4:	bl	404650 <abort@plt>
  4214f8:	stp	x29, x30, [sp, #-16]!
  4214fc:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421500:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  421504:	mov	x29, sp
  421508:	ldr	w1, [x1, #920]
  42150c:	add	x2, x2, #0xb20
  421510:	mov	w0, #0x0                   	// #0
  421514:	bl	4049a0 <__fxstat@plt>
  421518:	cmp	w0, #0x0
  42151c:	cset	w0, eq  // eq = none
  421520:	ldp	x29, x30, [sp], #16
  421524:	ret
  421528:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  42152c:	mov	w2, #0x0                   	// #0
  421530:	ldr	x1, [x1, #488]
  421534:	cbz	x1, 421548 <wcrtomb@plt+0x1c928>
  421538:	ldr	x3, [x0, #88]
  42153c:	mov	w2, #0x0                   	// #0
  421540:	cmp	x1, x3
  421544:	b.eq	421550 <wcrtomb@plt+0x1c930>  // b.none
  421548:	mov	w0, w2
  42154c:	ret
  421550:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  421554:	ldr	x1, [x0, #96]
  421558:	ldr	x0, [x2, #832]
  42155c:	cmp	x1, x0
  421560:	cset	w2, eq  // eq = none
  421564:	mov	w0, w2
  421568:	ret
  42156c:	nop
  421570:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421574:	mov	w0, #0x3fffffff            	// #1073741823
  421578:	ldr	w1, [x1, #920]
  42157c:	cmp	w1, w0
  421580:	b.gt	42159c <wcrtomb@plt+0x1c97c>
  421584:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  421588:	add	x1, x2, #0xb20
  42158c:	ldr	w0, [x1, #16]
  421590:	and	w0, w0, #0xf000
  421594:	cmp	w0, #0x8, lsl #12
  421598:	b.eq	4215a8 <wcrtomb@plt+0x1c988>  // b.none
  42159c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4215a0:	str	xzr, [x0, #488]
  4215a4:	ret
  4215a8:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  4215ac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4215b0:	ldr	x2, [x2, #2848]
  4215b4:	str	x2, [x3, #488]
  4215b8:	ldr	x1, [x1, #8]
  4215bc:	str	x1, [x0, #832]
  4215c0:	ret
  4215c4:	nop
  4215c8:	stp	x29, x30, [sp, #-176]!
  4215cc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4215d0:	mov	x29, sp
  4215d4:	ldr	x0, [x0, #632]
  4215d8:	stp	x19, x20, [sp, #16]
  4215dc:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x14e10>
  4215e0:	add	x19, x19, #0xa20
  4215e4:	ldr	x0, [x0]
  4215e8:	mov	x1, x19
  4215ec:	bl	404710 <strcmp@plt>
  4215f0:	mov	w1, #0x1                   	// #1
  4215f4:	cbz	w0, 421630 <wcrtomb@plt+0x1ca10>
  4215f8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4215fc:	mov	w0, #0x3fffffff            	// #1073741823
  421600:	ldr	w1, [x1, #920]
  421604:	cmp	w1, w0
  421608:	b.gt	42162c <wcrtomb@plt+0x1ca0c>
  42160c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  421610:	str	x21, [sp, #32]
  421614:	add	x21, x20, #0xb20
  421618:	ldr	w0, [x21, #16]
  42161c:	and	w0, w0, #0xf000
  421620:	cmp	w0, #0x2, lsl #12
  421624:	b.eq	421644 <wcrtomb@plt+0x1ca24>  // b.none
  421628:	ldr	x21, [sp, #32]
  42162c:	mov	w1, #0x0                   	// #0
  421630:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421634:	ldp	x19, x20, [sp, #16]
  421638:	strb	w1, [x0, #480]
  42163c:	ldp	x29, x30, [sp], #176
  421640:	ret
  421644:	mov	x1, x19
  421648:	add	x2, sp, #0x30
  42164c:	mov	w0, #0x0                   	// #0
  421650:	bl	404b10 <__xstat@plt>
  421654:	cbnz	w0, 421628 <wcrtomb@plt+0x1ca08>
  421658:	ldr	x1, [x20, #2848]
  42165c:	ldr	x0, [sp, #48]
  421660:	cmp	x1, x0
  421664:	b.ne	421628 <wcrtomb@plt+0x1ca08>  // b.any
  421668:	ldr	x1, [x21, #8]
  42166c:	ldr	x0, [sp, #56]
  421670:	ldr	x21, [sp, #32]
  421674:	cmp	x1, x0
  421678:	cset	w1, eq  // eq = none
  42167c:	b	421630 <wcrtomb@plt+0x1ca10>
  421680:	cbz	w0, 421738 <wcrtomb@plt+0x1cb18>
  421684:	stp	x29, x30, [sp, #-48]!
  421688:	mov	x29, sp
  42168c:	stp	x19, x20, [sp, #16]
  421690:	and	w20, w1, #0xff
  421694:	mov	w19, w0
  421698:	b	4216ac <wcrtomb@plt+0x1ca8c>
  42169c:	bl	404ad0 <__errno_location@plt>
  4216a0:	ldr	w1, [x0]
  4216a4:	cmp	w1, #0x4
  4216a8:	b.ne	42173c <wcrtomb@plt+0x1cb1c>  // b.any
  4216ac:	add	x1, sp, #0x2c
  4216b0:	mov	w0, w19
  4216b4:	mov	w2, #0x0                   	// #0
  4216b8:	bl	404b60 <waitpid@plt>
  4216bc:	cmn	w0, #0x1
  4216c0:	b.eq	42169c <wcrtomb@plt+0x1ca7c>  // b.none
  4216c4:	ldr	w1, [sp, #44]
  4216c8:	and	w19, w1, #0x7f
  4216cc:	add	w0, w19, #0x1
  4216d0:	sbfx	x0, x0, #1, #7
  4216d4:	cmp	w0, #0x0
  4216d8:	b.le	4216f4 <wcrtomb@plt+0x1cad4>
  4216dc:	cmp	w20, #0x0
  4216e0:	ccmp	w19, #0xd, #0x0, eq  // eq = none
  4216e4:	b.ne	421764 <wcrtomb@plt+0x1cb44>  // b.any
  4216e8:	ldp	x19, x20, [sp, #16]
  4216ec:	ldp	x29, x30, [sp], #48
  4216f0:	ret
  4216f4:	tst	x1, #0xff00
  4216f8:	b.eq	4216e8 <wcrtomb@plt+0x1cac8>  // b.none
  4216fc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421700:	ldr	x0, [x0, #952]
  421704:	cbz	x0, 42170c <wcrtomb@plt+0x1caec>
  421708:	blr	x0
  42170c:	mov	w2, #0x5                   	// #5
  421710:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  421714:	mov	x0, #0x0                   	// #0
  421718:	add	x1, x1, #0x7e8
  42171c:	bl	4049c0 <dcgettext@plt>
  421720:	mov	x2, x0
  421724:	ldrb	w3, [sp, #45]
  421728:	mov	w1, #0x0                   	// #0
  42172c:	mov	w0, #0x0                   	// #0
  421730:	bl	404050 <error@plt>
  421734:	bl	40e770 <wcrtomb@plt+0x9b50>
  421738:	ret
  42173c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421740:	ldr	x0, [x0, #848]
  421744:	bl	42a2d8 <wcrtomb@plt+0x256b8>
  421748:	ldr	w1, [sp, #44]
  42174c:	and	w19, w1, #0x7f
  421750:	add	w0, w19, #0x1
  421754:	sbfx	x0, x0, #1, #7
  421758:	cmp	w0, #0x0
  42175c:	b.gt	4216dc <wcrtomb@plt+0x1cabc>
  421760:	b	4216f4 <wcrtomb@plt+0x1cad4>
  421764:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421768:	ldr	x0, [x0, #952]
  42176c:	cbz	x0, 421774 <wcrtomb@plt+0x1cb54>
  421770:	blr	x0
  421774:	mov	w2, #0x5                   	// #5
  421778:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  42177c:	mov	x0, #0x0                   	// #0
  421780:	add	x1, x1, #0x7c8
  421784:	bl	4049c0 <dcgettext@plt>
  421788:	mov	x2, x0
  42178c:	mov	w3, w19
  421790:	mov	w1, #0x0                   	// #0
  421794:	mov	w0, #0x0                   	// #0
  421798:	bl	404050 <error@plt>
  42179c:	bl	40e770 <wcrtomb@plt+0x9b50>
  4217a0:	stp	x29, x30, [sp, #-48]!
  4217a4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4217a8:	add	x0, x0, #0x808
  4217ac:	mov	x29, sp
  4217b0:	stp	x19, x20, [sp, #16]
  4217b4:	bl	404af0 <getenv@plt>
  4217b8:	mov	x20, x0
  4217bc:	cmp	x20, #0x0
  4217c0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4217c4:	add	x0, x0, #0x748
  4217c8:	csel	x20, x0, x20, eq  // eq = none
  4217cc:	bl	41be80 <wcrtomb@plt+0x17260>
  4217d0:	mov	w19, w0
  4217d4:	cbnz	w0, 4217ec <wcrtomb@plt+0x1cbcc>
  4217d8:	b	421824 <wcrtomb@plt+0x1cc04>
  4217dc:	bl	404ad0 <__errno_location@plt>
  4217e0:	ldr	w1, [x0]
  4217e4:	cmp	w1, #0x4
  4217e8:	b.ne	421810 <wcrtomb@plt+0x1cbf0>  // b.any
  4217ec:	add	x1, sp, #0x2c
  4217f0:	mov	w0, w19
  4217f4:	mov	w2, #0x0                   	// #0
  4217f8:	bl	404b60 <waitpid@plt>
  4217fc:	cmn	w0, #0x1
  421800:	b.eq	4217dc <wcrtomb@plt+0x1cbbc>  // b.none
  421804:	ldp	x19, x20, [sp, #16]
  421808:	ldp	x29, x30, [sp], #48
  42180c:	ret
  421810:	mov	x0, x20
  421814:	bl	42a2d8 <wcrtomb@plt+0x256b8>
  421818:	ldp	x19, x20, [sp, #16]
  42181c:	ldp	x29, x30, [sp], #48
  421820:	ret
  421824:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x14e10>
  421828:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  42182c:	add	x2, x2, #0x810
  421830:	add	x1, x1, #0x818
  421834:	mov	x3, #0x0                   	// #0
  421838:	mov	x0, x20
  42183c:	bl	404ae0 <execlp@plt>
  421840:	mov	x0, x20
  421844:	bl	429d08 <wcrtomb@plt+0x250e8>
  421848:	ldr	w2, [x0, #24]
  42184c:	ldr	w0, [x1, #24]
  421850:	cmp	w2, w0
  421854:	cset	w0, eq  // eq = none
  421858:	ret
  42185c:	nop
  421860:	ldr	w2, [x0, #28]
  421864:	ldr	w0, [x1, #28]
  421868:	cmp	w2, w0
  42186c:	cset	w0, eq  // eq = none
  421870:	ret
  421874:	nop
  421878:	ldr	x2, [x0]
  42187c:	ldr	x3, [x1]
  421880:	cmp	x3, x2
  421884:	b.eq	421890 <wcrtomb@plt+0x1cc70>  // b.none
  421888:	mov	w0, #0x0                   	// #0
  42188c:	ret
  421890:	ldr	x0, [x0, #8]
  421894:	ldr	x1, [x1, #8]
  421898:	cmp	x1, x0
  42189c:	cset	w0, eq  // eq = none
  4218a0:	ret
  4218a4:	nop
  4218a8:	stp	x29, x30, [sp, #-32]!
  4218ac:	mov	w2, #0x1                   	// #1
  4218b0:	mov	x1, #0x0                   	// #0
  4218b4:	mov	x29, sp
  4218b8:	str	x19, [sp, #16]
  4218bc:	mov	w19, w0
  4218c0:	bl	4041d0 <lseek@plt>
  4218c4:	tbnz	x0, #63, 4218dc <wcrtomb@plt+0x1ccbc>
  4218c8:	mov	x1, x0
  4218cc:	mov	w0, w19
  4218d0:	ldr	x19, [sp, #16]
  4218d4:	ldp	x29, x30, [sp], #32
  4218d8:	b	404a10 <ftruncate@plt>
  4218dc:	mov	w0, #0xffffffff            	// #-1
  4218e0:	ldr	x19, [sp, #16]
  4218e4:	ldp	x29, x30, [sp], #32
  4218e8:	ret
  4218ec:	nop
  4218f0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4218f4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4218f8:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4218fc:	mov	w3, #0x3fffffff            	// #1073741823
  421900:	ldr	w0, [x0, #920]
  421904:	ldr	x1, [x1, #3928]
  421908:	cmp	w0, w3
  42190c:	ldr	x2, [x2, #864]
  421910:	b.le	421920 <wcrtomb@plt+0x1cd00>
  421914:	mov	w3, #0xc0000000            	// #-1073741824
  421918:	add	w0, w0, w3
  42191c:	b	42b0d8 <wcrtomb@plt+0x264b8>
  421920:	b	437dc8 <argp_parse@@Base+0x3ee0>
  421924:	nop
  421928:	stp	x29, x30, [sp, #-96]!
  42192c:	mov	x1, #0x1                   	// #1
  421930:	mov	w0, #0xd                   	// #13
  421934:	mov	x29, sp
  421938:	bl	404270 <signal@plt>
  42193c:	add	x0, sp, #0x50
  421940:	bl	41bec0 <wcrtomb@plt+0x172a0>
  421944:	bl	41be80 <wcrtomb@plt+0x17260>
  421948:	stp	x19, x20, [sp, #16]
  42194c:	cmp	w0, #0x0
  421950:	b.gt	421a34 <wcrtomb@plt+0x1ce14>
  421954:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  421958:	add	x1, x1, #0x820
  42195c:	mov	w2, #0x5                   	// #5
  421960:	mov	x0, #0x0                   	// #0
  421964:	stp	x21, x22, [sp, #32]
  421968:	bl	4049c0 <dcgettext@plt>
  42196c:	bl	43e738 <argp_parse@@Base+0xa850>
  421970:	mov	x1, #0x0                   	// #0
  421974:	mov	w0, #0xd                   	// #13
  421978:	bl	404270 <signal@plt>
  42197c:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  421980:	ldr	w0, [sp, #80]
  421984:	mov	w1, #0x0                   	// #0
  421988:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  42198c:	bl	421410 <wcrtomb@plt+0x1c7f0>
  421990:	ldr	w0, [sp, #84]
  421994:	bl	405be8 <wcrtomb@plt+0xfc8>
  421998:	ldrb	w0, [x21, #960]
  42199c:	cbnz	w0, 421b50 <wcrtomb@plt+0x1cf30>
  4219a0:	ldr	x20, [x19, #632]
  4219a4:	mov	w1, #0x3a                  	// #58
  4219a8:	ldr	x0, [x20]
  4219ac:	bl	404870 <strchr@plt>
  4219b0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4219b4:	str	x0, [x1, #968]
  4219b8:	ldr	x20, [x20]
  4219bc:	cbz	x0, 4219c8 <wcrtomb@plt+0x1cda8>
  4219c0:	cmp	x0, x20
  4219c4:	b.hi	421a58 <wcrtomb@plt+0x1ce38>  // b.pmore
  4219c8:	mov	x0, x20
  4219cc:	bl	4213c0 <wcrtomb@plt+0x1c7a0>
  4219d0:	cbz	w0, 421a6c <wcrtomb@plt+0x1ce4c>
  4219d4:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  4219d8:	ldr	x0, [x19, #632]
  4219dc:	ldrb	w1, [x20, #701]
  4219e0:	ldr	x0, [x0]
  4219e4:	cbnz	w1, 421c0c <wcrtomb@plt+0x1cfec>
  4219e8:	ldrb	w1, [x0]
  4219ec:	cmp	w1, #0x2d
  4219f0:	b.eq	421bb8 <wcrtomb@plt+0x1cf98>  // b.none
  4219f4:	mov	w1, #0x1b6                 	// #438
  4219f8:	bl	404bb0 <creat@plt>
  4219fc:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  421a00:	str	w0, [x2, #920]
  421a04:	tbz	w0, #31, 421bf0 <wcrtomb@plt+0x1cfd0>
  421a08:	stp	x23, x24, [sp, #48]
  421a0c:	str	x25, [sp, #64]
  421a10:	bl	404ad0 <__errno_location@plt>
  421a14:	ldrb	w1, [x20, #701]
  421a18:	mov	x20, x0
  421a1c:	ldr	w21, [x0]
  421a20:	cbnz	w1, 421c48 <wcrtomb@plt+0x1d028>
  421a24:	ldr	x0, [x19, #632]
  421a28:	ldr	x0, [x0]
  421a2c:	str	w21, [x20]
  421a30:	bl	429df8 <wcrtomb@plt+0x251d8>
  421a34:	mov	w19, w0
  421a38:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421a3c:	ldp	w0, w2, [sp, #80]
  421a40:	str	w2, [x1, #920]
  421a44:	bl	405be8 <wcrtomb@plt+0xfc8>
  421a48:	mov	w0, w19
  421a4c:	ldp	x19, x20, [sp, #16]
  421a50:	ldp	x29, x30, [sp], #96
  421a54:	ret
  421a58:	sub	x2, x0, x20
  421a5c:	mov	w1, #0x2f                  	// #47
  421a60:	mov	x0, x20
  421a64:	bl	404960 <memchr@plt>
  421a68:	cbnz	x0, 4219c8 <wcrtomb@plt+0x1cda8>
  421a6c:	add	x0, sp, #0x58
  421a70:	stp	x23, x24, [sp, #48]
  421a74:	bl	41bec0 <wcrtomb@plt+0x172a0>
  421a78:	bl	41be80 <wcrtomb@plt+0x17260>
  421a7c:	mov	w23, w0
  421a80:	cbz	w0, 421c5c <wcrtomb@plt+0x1d03c>
  421a84:	ldr	w0, [sp, #88]
  421a88:	mov	w1, #0x0                   	// #0
  421a8c:	bl	421410 <wcrtomb@plt+0x1c7f0>
  421a90:	ldr	w0, [sp, #92]
  421a94:	bl	405be8 <wcrtomb@plt+0xfc8>
  421a98:	ldr	x22, [x19, #632]
  421a9c:	ldr	x20, [x22]
  421aa0:	ldrb	w0, [x20]
  421aa4:	cmp	w0, #0x2d
  421aa8:	b.ne	421b5c <wcrtomb@plt+0x1cf3c>  // b.any
  421aac:	ldrb	w0, [x20, #1]
  421ab0:	cbnz	w0, 421b5c <wcrtomb@plt+0x1cf3c>
  421ab4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421ab8:	mov	w1, #0x1                   	// #1
  421abc:	str	w1, [x0, #920]
  421ac0:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  421ac4:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  421ac8:	add	x22, x24, #0xf58
  421acc:	str	x25, [sp, #64]
  421ad0:	ldr	x2, [x21, #864]
  421ad4:	nop
  421ad8:	ldr	x20, [x22]
  421adc:	cbz	x2, 421b48 <wcrtomb@plt+0x1cf28>
  421ae0:	mov	x19, #0x0                   	// #0
  421ae4:	b	421b00 <wcrtomb@plt+0x1cee0>
  421ae8:	ldr	x2, [x21, #864]
  421aec:	add	x19, x19, x0
  421af0:	add	x20, x20, x0
  421af4:	add	x25, x21, #0x360
  421af8:	cmp	x2, x19
  421afc:	b.ls	421bd8 <wcrtomb@plt+0x1cfb8>  // b.plast
  421b00:	sub	x2, x2, x19
  421b04:	mov	x1, x20
  421b08:	mov	w0, #0x0                   	// #0
  421b0c:	bl	440470 <argp_parse@@Base+0xc588>
  421b10:	cmn	x0, #0x1
  421b14:	b.eq	421c50 <wcrtomb@plt+0x1d030>  // b.none
  421b18:	cbnz	x0, 421ae8 <wcrtomb@plt+0x1cec8>
  421b1c:	cbz	x19, 421b48 <wcrtomb@plt+0x1cf28>
  421b20:	ldr	x2, [x21, #864]
  421b24:	mov	w1, #0x0                   	// #0
  421b28:	ldr	x0, [x24, #3928]
  421b2c:	sub	x2, x2, x19
  421b30:	add	x0, x0, x19
  421b34:	bl	404410 <memset@plt>
  421b38:	bl	4218f0 <wcrtomb@plt+0x1ccd0>
  421b3c:	ldr	x1, [x21, #864]
  421b40:	cmp	x1, x0
  421b44:	b.ne	421bec <wcrtomb@plt+0x1cfcc>  // b.any
  421b48:	mov	w0, w23
  421b4c:	bl	4210c8 <wcrtomb@plt+0x1c4a8>
  421b50:	ldr	x0, [x19, #632]
  421b54:	ldr	x20, [x0]
  421b58:	b	4219c8 <wcrtomb@plt+0x1cda8>
  421b5c:	ldrb	w0, [x21, #960]
  421b60:	cbnz	w0, 421c20 <wcrtomb@plt+0x1d000>
  421b64:	mov	x0, x20
  421b68:	mov	w1, #0x3a                  	// #58
  421b6c:	bl	404870 <strchr@plt>
  421b70:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421b74:	str	x0, [x1, #968]
  421b78:	ldr	x20, [x22]
  421b7c:	cbz	x0, 421c20 <wcrtomb@plt+0x1d000>
  421b80:	cmp	x0, x20
  421b84:	b.ls	421c20 <wcrtomb@plt+0x1d000>  // b.plast
  421b88:	sub	x2, x0, x20
  421b8c:	mov	w1, #0x2f                  	// #47
  421b90:	mov	x0, x20
  421b94:	bl	404960 <memchr@plt>
  421b98:	cbnz	x0, 421c20 <wcrtomb@plt+0x1d000>
  421b9c:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  421ba0:	mov	x0, x20
  421ba4:	mov	w2, #0x40000000            	// #1073741824
  421ba8:	mov	w1, #0x41                  	// #65
  421bac:	ldr	x3, [x3, #752]
  421bb0:	bl	42a918 <wcrtomb@plt+0x25cf8>
  421bb4:	b	421c2c <wcrtomb@plt+0x1d00c>
  421bb8:	ldrb	w1, [x0, #1]
  421bbc:	cbz	w1, 421bf8 <wcrtomb@plt+0x1cfd8>
  421bc0:	mov	w1, #0x1b6                 	// #438
  421bc4:	bl	404bb0 <creat@plt>
  421bc8:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  421bcc:	str	w0, [x2, #920]
  421bd0:	tbnz	w0, #31, 421a08 <wcrtomb@plt+0x1cde8>
  421bd4:	b	421bf0 <wcrtomb@plt+0x1cfd0>
  421bd8:	bl	4218f0 <wcrtomb@plt+0x1ccd0>
  421bdc:	mov	x2, x0
  421be0:	ldr	x1, [x25]
  421be4:	cmp	x1, x0
  421be8:	b.eq	421ad8 <wcrtomb@plt+0x1ceb8>  // b.none
  421bec:	bl	406850 <wcrtomb@plt+0x1c30>
  421bf0:	mov	w1, #0x1                   	// #1
  421bf4:	bl	421410 <wcrtomb@plt+0x1c7f0>
  421bf8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421bfc:	stp	x23, x24, [sp, #48]
  421c00:	ldr	x0, [x0, #848]
  421c04:	str	x25, [sp, #64]
  421c08:	bl	421088 <wcrtomb@plt+0x1c468>
  421c0c:	mov	w1, #0x1                   	// #1
  421c10:	bl	41b630 <wcrtomb@plt+0x16a10>
  421c14:	ldr	x0, [x19, #632]
  421c18:	ldr	x0, [x0]
  421c1c:	b	4219e8 <wcrtomb@plt+0x1cdc8>
  421c20:	mov	x0, x20
  421c24:	mov	w1, #0x1b6                 	// #438
  421c28:	bl	404bb0 <creat@plt>
  421c2c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421c30:	str	w0, [x1, #920]
  421c34:	tbz	w0, #31, 421ac0 <wcrtomb@plt+0x1cea0>
  421c38:	ldr	x0, [x19, #632]
  421c3c:	ldr	x0, [x0]
  421c40:	str	x25, [sp, #64]
  421c44:	bl	429df8 <wcrtomb@plt+0x251d8>
  421c48:	bl	41b860 <wcrtomb@plt+0x16c40>
  421c4c:	b	421a24 <wcrtomb@plt+0x1ce04>
  421c50:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421c54:	ldr	x0, [x0, #848]
  421c58:	bl	429f88 <wcrtomb@plt+0x25368>
  421c5c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  421c60:	add	x1, x1, #0x830
  421c64:	mov	w2, #0x5                   	// #5
  421c68:	mov	x0, #0x0                   	// #0
  421c6c:	str	x25, [sp, #64]
  421c70:	bl	4049c0 <dcgettext@plt>
  421c74:	bl	43e738 <argp_parse@@Base+0xa850>
  421c78:	ldr	w0, [sp, #92]
  421c7c:	mov	w1, #0x1                   	// #1
  421c80:	bl	421410 <wcrtomb@plt+0x1c7f0>
  421c84:	ldr	w0, [sp, #88]
  421c88:	bl	405be8 <wcrtomb@plt+0xfc8>
  421c8c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421c90:	ldr	x0, [x0, #848]
  421c94:	bl	421088 <wcrtomb@plt+0x1c468>
  421c98:	stp	x29, x30, [sp, #-128]!
  421c9c:	add	x0, sp, #0x70
  421ca0:	mov	x29, sp
  421ca4:	stp	x19, x20, [sp, #16]
  421ca8:	bl	41bec0 <wcrtomb@plt+0x172a0>
  421cac:	bl	41be80 <wcrtomb@plt+0x17260>
  421cb0:	cmp	w0, #0x0
  421cb4:	b.gt	421ee4 <wcrtomb@plt+0x1d2c4>
  421cb8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  421cbc:	add	x1, x1, #0x820
  421cc0:	mov	w2, #0x5                   	// #5
  421cc4:	mov	x0, #0x0                   	// #0
  421cc8:	stp	x21, x22, [sp, #32]
  421ccc:	bl	4049c0 <dcgettext@plt>
  421cd0:	bl	43e738 <argp_parse@@Base+0xa850>
  421cd4:	mov	x1, #0x0                   	// #0
  421cd8:	mov	w0, #0xd                   	// #13
  421cdc:	bl	404270 <signal@plt>
  421ce0:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  421ce4:	ldr	w0, [sp, #116]
  421ce8:	mov	w1, #0x1                   	// #1
  421cec:	bl	421410 <wcrtomb@plt+0x1c7f0>
  421cf0:	ldr	w0, [sp, #112]
  421cf4:	bl	405be8 <wcrtomb@plt+0xfc8>
  421cf8:	ldr	x21, [x20, #632]
  421cfc:	ldr	x19, [x21]
  421d00:	ldrb	w0, [x19]
  421d04:	cmp	w0, #0x2d
  421d08:	b.eq	421e60 <wcrtomb@plt+0x1d240>  // b.none
  421d0c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421d10:	ldrb	w0, [x0, #960]
  421d14:	cbnz	w0, 421d50 <wcrtomb@plt+0x1d130>
  421d18:	mov	x0, x19
  421d1c:	mov	w1, #0x3a                  	// #58
  421d20:	bl	404870 <strchr@plt>
  421d24:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421d28:	str	x0, [x1, #968]
  421d2c:	ldr	x19, [x21]
  421d30:	cbz	x0, 421d50 <wcrtomb@plt+0x1d130>
  421d34:	cmp	x0, x19
  421d38:	b.ls	421d50 <wcrtomb@plt+0x1d130>  // b.plast
  421d3c:	sub	x2, x0, x19
  421d40:	mov	w1, #0x2f                  	// #47
  421d44:	mov	x0, x19
  421d48:	bl	404960 <memchr@plt>
  421d4c:	cbz	x0, 421d5c <wcrtomb@plt+0x1d13c>
  421d50:	mov	x0, x19
  421d54:	bl	4213c0 <wcrtomb@plt+0x1c7a0>
  421d58:	cbnz	w0, 421f18 <wcrtomb@plt+0x1d2f8>
  421d5c:	add	x0, sp, #0x78
  421d60:	bl	41bec0 <wcrtomb@plt+0x172a0>
  421d64:	bl	41be80 <wcrtomb@plt+0x17260>
  421d68:	str	w0, [sp, #108]
  421d6c:	cbz	w0, 421f6c <wcrtomb@plt+0x1d34c>
  421d70:	ldr	w0, [sp, #124]
  421d74:	mov	w1, #0x1                   	// #1
  421d78:	bl	421410 <wcrtomb@plt+0x1c7f0>
  421d7c:	ldr	w0, [sp, #120]
  421d80:	bl	405be8 <wcrtomb@plt+0xfc8>
  421d84:	ldr	x21, [x20, #632]
  421d88:	ldr	x19, [x21]
  421d8c:	ldrb	w0, [x19]
  421d90:	cmp	w0, #0x2d
  421d94:	b.ne	421e6c <wcrtomb@plt+0x1d24c>  // b.any
  421d98:	ldrb	w0, [x19, #1]
  421d9c:	cbnz	w0, 421e6c <wcrtomb@plt+0x1d24c>
  421da0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421da4:	str	wzr, [x1, #920]
  421da8:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  421dac:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  421db0:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  421db4:	add	x22, x22, #0x398
  421db8:	add	x20, x20, #0xf58
  421dbc:	add	x21, x21, #0x360
  421dc0:	stp	x23, x24, [sp, #48]
  421dc4:	mov	w23, #0x3fffffff            	// #1073741823
  421dc8:	mov	w24, #0xc0000000            	// #-1073741824
  421dcc:	stp	x25, x26, [sp, #64]
  421dd0:	adrp	x25, 483000 <argp_program_version_hook@@Base+0x290>
  421dd4:	stp	x27, x28, [sp, #80]
  421dd8:	bl	4056e0 <wcrtomb@plt+0xac0>
  421ddc:	b	421df8 <wcrtomb@plt+0x1d1d8>
  421de0:	add	w0, w0, w24
  421de4:	bl	42afe8 <wcrtomb@plt+0x263c8>
  421de8:	mov	x19, x0
  421dec:	cmn	x19, #0x1
  421df0:	b.ne	421e1c <wcrtomb@plt+0x1d1fc>  // b.any
  421df4:	bl	405c20 <wcrtomb@plt+0x1000>
  421df8:	ldr	w0, [x22]
  421dfc:	ldr	x1, [x20]
  421e00:	cmp	w0, w23
  421e04:	ldr	x2, [x21]
  421e08:	b.gt	421de0 <wcrtomb@plt+0x1d1c0>
  421e0c:	bl	440470 <argp_parse@@Base+0xc588>
  421e10:	mov	x19, x0
  421e14:	cmn	x19, #0x1
  421e18:	b.eq	421df4 <wcrtomb@plt+0x1d1d4>  // b.none
  421e1c:	cbz	x19, 421f08 <wcrtomb@plt+0x1d2e8>
  421e20:	ldr	x26, [x20]
  421e24:	mov	x28, #0x200                 	// #512
  421e28:	cmp	x19, #0x200
  421e2c:	mov	x1, x26
  421e30:	csel	x27, x19, x28, ls  // ls = plast
  421e34:	mov	w0, #0x1                   	// #1
  421e38:	mov	x2, x27
  421e3c:	bl	437dc8 <argp_parse@@Base+0x3ee0>
  421e40:	cmp	x0, x27
  421e44:	b.eq	421e50 <wcrtomb@plt+0x1d230>  // b.none
  421e48:	ldr	x0, [x25, #848]
  421e4c:	bl	42a2e8 <wcrtomb@plt+0x256c8>
  421e50:	add	x26, x26, x27
  421e54:	subs	x19, x19, x27
  421e58:	b.ne	421e28 <wcrtomb@plt+0x1d208>  // b.any
  421e5c:	b	421dd8 <wcrtomb@plt+0x1d1b8>
  421e60:	ldrb	w0, [x19, #1]
  421e64:	cbz	w0, 421d5c <wcrtomb@plt+0x1d13c>
  421e68:	b	421d0c <wcrtomb@plt+0x1d0ec>
  421e6c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  421e70:	ldrb	w0, [x0, #960]
  421e74:	cbnz	w0, 421eb0 <wcrtomb@plt+0x1d290>
  421e78:	mov	x0, x19
  421e7c:	mov	w1, #0x3a                  	// #58
  421e80:	bl	404870 <strchr@plt>
  421e84:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421e88:	str	x0, [x1, #968]
  421e8c:	ldr	x19, [x21]
  421e90:	cbz	x0, 421eb0 <wcrtomb@plt+0x1d290>
  421e94:	cmp	x0, x19
  421e98:	b.ls	421eb0 <wcrtomb@plt+0x1d290>  // b.plast
  421e9c:	sub	x2, x0, x19
  421ea0:	mov	w1, #0x2f                  	// #47
  421ea4:	mov	x0, x19
  421ea8:	bl	404960 <memchr@plt>
  421eac:	cbz	x0, 421f50 <wcrtomb@plt+0x1d330>
  421eb0:	mov	x0, x19
  421eb4:	mov	w2, #0x1b6                 	// #438
  421eb8:	mov	w1, #0x0                   	// #0
  421ebc:	bl	404340 <open@plt>
  421ec0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421ec4:	str	w0, [x1, #920]
  421ec8:	tbz	w0, #31, 421da8 <wcrtomb@plt+0x1d188>
  421ecc:	stp	x23, x24, [sp, #48]
  421ed0:	stp	x25, x26, [sp, #64]
  421ed4:	stp	x27, x28, [sp, #80]
  421ed8:	ldr	x0, [x20, #632]
  421edc:	ldr	x0, [x0]
  421ee0:	bl	429df8 <wcrtomb@plt+0x251d8>
  421ee4:	mov	w19, w0
  421ee8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  421eec:	ldp	w2, w0, [sp, #112]
  421ef0:	str	w2, [x1, #920]
  421ef4:	bl	405be8 <wcrtomb@plt+0xfc8>
  421ef8:	mov	w0, w19
  421efc:	ldp	x19, x20, [sp, #16]
  421f00:	ldp	x29, x30, [sp], #128
  421f04:	ret
  421f08:	mov	w0, #0x1                   	// #1
  421f0c:	bl	405be8 <wcrtomb@plt+0xfc8>
  421f10:	ldr	w0, [sp, #108]
  421f14:	bl	4210c8 <wcrtomb@plt+0x1c4a8>
  421f18:	ldr	x0, [x20, #632]
  421f1c:	mov	w2, #0x1b6                 	// #438
  421f20:	mov	w1, #0x0                   	// #0
  421f24:	ldr	x0, [x0]
  421f28:	bl	404340 <open@plt>
  421f2c:	stp	x23, x24, [sp, #48]
  421f30:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  421f34:	stp	x25, x26, [sp, #64]
  421f38:	str	w0, [x2, #920]
  421f3c:	stp	x27, x28, [sp, #80]
  421f40:	tbnz	w0, #31, 421ed8 <wcrtomb@plt+0x1d2b8>
  421f44:	mov	w1, #0x0                   	// #0
  421f48:	bl	421410 <wcrtomb@plt+0x1c7f0>
  421f4c:	bl	421148 <wcrtomb@plt+0x1c528>
  421f50:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  421f54:	mov	x0, x19
  421f58:	mov	w2, #0x40000000            	// #1073741824
  421f5c:	mov	w1, #0x0                   	// #0
  421f60:	ldr	x3, [x3, #752]
  421f64:	bl	42a918 <wcrtomb@plt+0x25cf8>
  421f68:	b	421ec0 <wcrtomb@plt+0x1d2a0>
  421f6c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  421f70:	add	x1, x1, #0x830
  421f74:	mov	w2, #0x5                   	// #5
  421f78:	mov	x0, #0x0                   	// #0
  421f7c:	stp	x23, x24, [sp, #48]
  421f80:	stp	x25, x26, [sp, #64]
  421f84:	stp	x27, x28, [sp, #80]
  421f88:	bl	4049c0 <dcgettext@plt>
  421f8c:	bl	43e738 <argp_parse@@Base+0xa850>
  421f90:	ldr	w0, [sp, #120]
  421f94:	mov	w1, #0x0                   	// #0
  421f98:	bl	421410 <wcrtomb@plt+0x1c7f0>
  421f9c:	ldr	w0, [sp, #124]
  421fa0:	bl	405be8 <wcrtomb@plt+0xfc8>
  421fa4:	bl	421148 <wcrtomb@plt+0x1c528>
  421fa8:	stp	x29, x30, [sp, #-96]!
  421fac:	mov	x29, sp
  421fb0:	stp	x19, x20, [sp, #16]
  421fb4:	mov	w20, w1
  421fb8:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  421fbc:	add	x19, x19, #0xb20
  421fc0:	stp	x21, x22, [sp, #32]
  421fc4:	mov	x22, x2
  421fc8:	mov	x21, x0
  421fcc:	add	x0, sp, #0x40
  421fd0:	bl	41bec0 <wcrtomb@plt+0x172a0>
  421fd4:	mov	x1, #0x1                   	// #1
  421fd8:	mov	w0, #0xd                   	// #13
  421fdc:	bl	404270 <signal@plt>
  421fe0:	str	x0, [x19, #128]
  421fe4:	bl	41be80 <wcrtomb@plt+0x17260>
  421fe8:	str	w0, [x19, #136]
  421fec:	cbz	w0, 42200c <wcrtomb@plt+0x1d3ec>
  421ff0:	ldr	w0, [sp, #64]
  421ff4:	bl	405be8 <wcrtomb@plt+0xfc8>
  421ff8:	ldr	w0, [sp, #68]
  421ffc:	ldp	x19, x20, [sp, #16]
  422000:	ldp	x21, x22, [sp, #32]
  422004:	ldp	x29, x30, [sp], #96
  422008:	ret
  42200c:	ldr	w0, [sp, #64]
  422010:	mov	w1, #0x0                   	// #0
  422014:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  422018:	and	w20, w20, #0xff
  42201c:	bl	421410 <wcrtomb@plt+0x1c7f0>
  422020:	ldr	w0, [sp, #68]
  422024:	bl	405be8 <wcrtomb@plt+0xfc8>
  422028:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  42202c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422030:	add	x1, x1, #0xc58
  422034:	add	x0, x0, #0x848
  422038:	bl	421310 <wcrtomb@plt+0x1c6f0>
  42203c:	ldr	x1, [x19, #680]
  422040:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422044:	add	x0, x0, #0x858
  422048:	ldr	x1, [x1]
  42204c:	bl	421310 <wcrtomb@plt+0x1c6f0>
  422050:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  422054:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422058:	ldr	x1, [x19, #680]
  42205c:	add	x0, x0, #0x868
  422060:	ldr	x2, [x2, #632]
  422064:	sub	x1, x1, x2
  422068:	asr	x1, x1, #3
  42206c:	add	x1, x1, #0x1
  422070:	bl	421380 <wcrtomb@plt+0x1c760>
  422074:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  422078:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  42207c:	add	x0, x0, #0x878
  422080:	ldrsw	x1, [x1, #692]
  422084:	bl	421380 <wcrtomb@plt+0x1c760>
  422088:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42208c:	ldr	w0, [x0, #3992]
  422090:	cbnz	w0, 42209c <wcrtomb@plt+0x1d47c>
  422094:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  422098:	ldr	w0, [x0, #760]
  42209c:	bl	4230e0 <wcrtomb@plt+0x1e4c0>
  4220a0:	mov	x1, x0
  4220a4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x14e10>
  4220a8:	add	x0, x2, #0x890
  4220ac:	bl	421310 <wcrtomb@plt+0x1c6f0>
  4220b0:	strb	w20, [sp, #56]
  4220b4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4220b8:	add	x1, sp, #0x38
  4220bc:	add	x0, x0, #0x8a0
  4220c0:	mov	w2, #0x1                   	// #1
  4220c4:	strb	wzr, [sp, #57]
  4220c8:	bl	404100 <setenv@plt>
  4220cc:	cbnz	w0, 422270 <wcrtomb@plt+0x1d650>
  4220d0:	ldr	w5, [x22, #104]
  4220d4:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x14e10>
  4220d8:	add	x4, x4, #0x8b0
  4220dc:	mov	x3, #0x18                  	// #24
  4220e0:	mov	w2, #0x1                   	// #1
  4220e4:	mov	x1, x3
  4220e8:	add	x0, sp, #0x48
  4220ec:	bl	404290 <__snprintf_chk@plt>
  4220f0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4220f4:	add	x1, sp, #0x48
  4220f8:	add	x0, x0, #0x8b8
  4220fc:	mov	w2, #0x1                   	// #1
  422100:	bl	404100 <setenv@plt>
  422104:	cbnz	w0, 422270 <wcrtomb@plt+0x1d650>
  422108:	mov	x1, x21
  42210c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422110:	add	x0, x0, #0x8c8
  422114:	bl	421310 <wcrtomb@plt+0x1c6f0>
  422118:	ldr	x1, [x22, #8]
  42211c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422120:	add	x0, x0, #0x8d8
  422124:	bl	421310 <wcrtomb@plt+0x1c6f0>
  422128:	ldr	x1, [x22, #32]
  42212c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422130:	add	x0, x0, #0x8e8
  422134:	bl	421310 <wcrtomb@plt+0x1c6f0>
  422138:	ldr	x1, [x22, #40]
  42213c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422140:	add	x0, x0, #0x8f8
  422144:	bl	421310 <wcrtomb@plt+0x1c6f0>
  422148:	ldp	x1, x2, [x22, #216]
  42214c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422150:	add	x0, x0, #0x908
  422154:	bl	421338 <wcrtomb@plt+0x1c718>
  422158:	ldp	x1, x2, [x22, #232]
  42215c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422160:	add	x0, x0, #0x918
  422164:	bl	421338 <wcrtomb@plt+0x1c718>
  422168:	ldp	x1, x2, [x22, #248]
  42216c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422170:	add	x0, x0, #0x928
  422174:	bl	421338 <wcrtomb@plt+0x1c718>
  422178:	ldr	x1, [x22, #136]
  42217c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422180:	add	x0, x0, #0x938
  422184:	bl	421380 <wcrtomb@plt+0x1c760>
  422188:	ldr	w1, [x22, #112]
  42218c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422190:	add	x0, x0, #0x948
  422194:	bl	421380 <wcrtomb@plt+0x1c760>
  422198:	ldr	w1, [x22, #116]
  42219c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4221a0:	add	x0, x0, #0x950
  4221a4:	bl	421380 <wcrtomb@plt+0x1c760>
  4221a8:	cmp	w20, #0x68
  4221ac:	b.eq	422244 <wcrtomb@plt+0x1d624>  // b.none
  4221b0:	b.hi	422214 <wcrtomb@plt+0x1d5f4>  // b.pmore
  4221b4:	sub	w20, w20, #0x62
  4221b8:	and	w0, w20, #0xff
  4221bc:	cmp	w0, #0x1
  4221c0:	b.hi	42221c <wcrtomb@plt+0x1d5fc>  // b.pmore
  4221c4:	ldr	x2, [x22, #120]
  4221c8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4221cc:	add	x0, x0, #0x958
  4221d0:	lsr	x1, x2, #12
  4221d4:	bfxil	x1, x2, #0, #8
  4221d8:	bl	421380 <wcrtomb@plt+0x1c760>
  4221dc:	ldr	x1, [x22, #120]
  4221e0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4221e4:	add	x0, x0, #0x968
  4221e8:	lsr	x2, x1, #32
  4221ec:	ubfx	w1, w1, #8, #12
  4221f0:	and	w2, w2, #0xfffff000
  4221f4:	orr	w1, w2, w1
  4221f8:	bl	421380 <wcrtomb@plt+0x1c760>
  4221fc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422200:	add	x0, x0, #0x978
  422204:	bl	404930 <unsetenv@plt>
  422208:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42220c:	ldr	x0, [x0, #560]
  422210:	bl	421088 <wcrtomb@plt+0x1c468>
  422214:	cmp	w20, #0x6c
  422218:	b.eq	422244 <wcrtomb@plt+0x1d624>  // b.none
  42221c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422220:	add	x0, x0, #0x958
  422224:	bl	404930 <unsetenv@plt>
  422228:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  42222c:	add	x0, x0, #0x968
  422230:	bl	404930 <unsetenv@plt>
  422234:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422238:	add	x0, x0, #0x978
  42223c:	bl	404930 <unsetenv@plt>
  422240:	b	422208 <wcrtomb@plt+0x1d5e8>
  422244:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422248:	add	x0, x0, #0x958
  42224c:	bl	404930 <unsetenv@plt>
  422250:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422254:	add	x0, x0, #0x968
  422258:	bl	404930 <unsetenv@plt>
  42225c:	ldr	x1, [x22, #24]
  422260:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422264:	add	x0, x0, #0x978
  422268:	bl	421310 <wcrtomb@plt+0x1c6f0>
  42226c:	b	422208 <wcrtomb@plt+0x1d5e8>
  422270:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  422274:	nop
  422278:	stp	x29, x30, [sp, #-48]!
  42227c:	mov	x29, sp
  422280:	stp	x19, x20, [sp, #16]
  422284:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  422288:	add	x20, x20, #0xb20
  42228c:	ldr	w19, [x20, #136]
  422290:	tbnz	w19, #31, 422338 <wcrtomb@plt+0x1d718>
  422294:	ldr	x1, [x20, #128]
  422298:	mov	w0, #0xd                   	// #13
  42229c:	bl	404270 <signal@plt>
  4222a0:	b	4222b8 <wcrtomb@plt+0x1d698>
  4222a4:	bl	404ad0 <__errno_location@plt>
  4222a8:	ldr	w0, [x0]
  4222ac:	cmp	w0, #0x4
  4222b0:	b.ne	422344 <wcrtomb@plt+0x1d724>  // b.any
  4222b4:	ldr	w19, [x20, #136]
  4222b8:	mov	w0, w19
  4222bc:	add	x1, sp, #0x2c
  4222c0:	mov	w2, #0x0                   	// #0
  4222c4:	bl	404b60 <waitpid@plt>
  4222c8:	mov	w19, w0
  4222cc:	cmn	w0, #0x1
  4222d0:	b.eq	4222a4 <wcrtomb@plt+0x1d684>  // b.none
  4222d4:	ldr	w1, [sp, #44]
  4222d8:	ands	w0, w1, #0x7f
  4222dc:	b.eq	422360 <wcrtomb@plt+0x1d740>  // b.none
  4222e0:	add	w0, w0, #0x1
  4222e4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4222e8:	sbfx	x0, x0, #1, #7
  4222ec:	cmp	w0, #0x0
  4222f0:	ldr	x0, [x1, #952]
  4222f4:	b.le	4223c0 <wcrtomb@plt+0x1d7a0>
  4222f8:	cbz	x0, 422300 <wcrtomb@plt+0x1d6e0>
  4222fc:	blr	x0
  422300:	mov	w2, #0x5                   	// #5
  422304:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422308:	mov	x0, #0x0                   	// #0
  42230c:	add	x1, x1, #0x9a8
  422310:	bl	4049c0 <dcgettext@plt>
  422314:	mov	x2, x0
  422318:	ldrsw	x3, [x20, #136]
  42231c:	mov	w1, #0x0                   	// #0
  422320:	ldr	w4, [sp, #44]
  422324:	mov	w0, #0x0                   	// #0
  422328:	and	w4, w4, #0x7f
  42232c:	bl	404050 <error@plt>
  422330:	mov	w0, #0xffffffff            	// #-1
  422334:	str	w0, [x20, #136]
  422338:	ldp	x19, x20, [sp, #16]
  42233c:	ldp	x29, x30, [sp], #48
  422340:	ret
  422344:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  422348:	str	w19, [x20, #136]
  42234c:	ldr	x0, [x0, #560]
  422350:	bl	42a2d8 <wcrtomb@plt+0x256b8>
  422354:	ldp	x19, x20, [sp, #16]
  422358:	ldp	x29, x30, [sp], #48
  42235c:	ret
  422360:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  422364:	ldrb	w0, [x0, #521]
  422368:	cbnz	w0, 422330 <wcrtomb@plt+0x1d710>
  42236c:	tst	x1, #0xff00
  422370:	b.eq	422330 <wcrtomb@plt+0x1d710>  // b.none
  422374:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  422378:	ldr	x0, [x0, #952]
  42237c:	cbz	x0, 422384 <wcrtomb@plt+0x1d764>
  422380:	blr	x0
  422384:	mov	w2, #0x5                   	// #5
  422388:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  42238c:	mov	x0, #0x0                   	// #0
  422390:	add	x1, x1, #0x988
  422394:	bl	4049c0 <dcgettext@plt>
  422398:	mov	x2, x0
  42239c:	ldrb	w4, [sp, #45]
  4223a0:	mov	w1, #0x0                   	// #0
  4223a4:	ldrsw	x3, [x20, #136]
  4223a8:	mov	w0, #0x0                   	// #0
  4223ac:	bl	404050 <error@plt>
  4223b0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4223b4:	mov	w1, #0x2                   	// #2
  4223b8:	str	w1, [x0, #3400]
  4223bc:	b	422330 <wcrtomb@plt+0x1d710>
  4223c0:	cbz	x0, 4223c8 <wcrtomb@plt+0x1d7a8>
  4223c4:	blr	x0
  4223c8:	mov	w2, #0x5                   	// #5
  4223cc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  4223d0:	mov	x0, #0x0                   	// #0
  4223d4:	add	x1, x1, #0x9d0
  4223d8:	bl	4049c0 <dcgettext@plt>
  4223dc:	mov	x2, x0
  4223e0:	ldrsw	x3, [x20, #136]
  4223e4:	mov	w1, #0x0                   	// #0
  4223e8:	mov	w0, #0x0                   	// #0
  4223ec:	bl	404050 <error@plt>
  4223f0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4223f4:	mov	w1, #0x2                   	// #2
  4223f8:	str	w1, [x0, #3400]
  4223fc:	b	422330 <wcrtomb@plt+0x1d710>
  422400:	stp	x29, x30, [sp, #-112]!
  422404:	mov	x29, sp
  422408:	stp	x19, x20, [sp, #16]
  42240c:	mov	w19, w1
  422410:	stp	x21, x22, [sp, #32]
  422414:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  422418:	add	x21, x21, #0xb20
  42241c:	str	x23, [sp, #48]
  422420:	mov	x23, x0
  422424:	add	x0, sp, #0x48
  422428:	bl	41bec0 <wcrtomb@plt+0x172a0>
  42242c:	mov	x1, #0x1                   	// #1
  422430:	mov	w0, #0xd                   	// #13
  422434:	bl	404270 <signal@plt>
  422438:	str	x0, [x21, #144]
  42243c:	bl	41be80 <wcrtomb@plt+0x17260>
  422440:	cbz	w0, 4225a0 <wcrtomb@plt+0x1d980>
  422444:	mov	w20, w0
  422448:	ldr	w0, [sp, #76]
  42244c:	stp	xzr, xzr, [sp, #80]
  422450:	bl	405be8 <wcrtomb@plt+0xfc8>
  422454:	ldr	w0, [sp, #72]
  422458:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  42245c:	add	x1, x1, #0xf28
  422460:	bl	404420 <fdopen@plt>
  422464:	mov	x3, x0
  422468:	add	x1, sp, #0x58
  42246c:	mov	w2, #0xa                   	// #10
  422470:	mov	x22, x0
  422474:	add	x0, sp, #0x50
  422478:	bl	404b40 <__getdelim@plt>
  42247c:	mov	x19, x0
  422480:	mov	x0, x22
  422484:	bl	4042a0 <fclose@plt>
  422488:	cmp	w19, #0x0
  42248c:	mov	w22, w19
  422490:	b.le	4224e0 <wcrtomb@plt+0x1d8c0>
  422494:	ldr	x0, [sp, #80]
  422498:	add	x1, x0, w19, sxtw
  42249c:	ldurb	w1, [x1, #-1]
  4224a0:	cmp	w1, #0xa
  4224a4:	b.ne	4224e0 <wcrtomb@plt+0x1d8c0>  // b.any
  4224a8:	sub	w22, w19, #0x1
  4224ac:	add	x1, sp, #0x44
  4224b0:	mov	w2, #0x0                   	// #0
  4224b4:	strb	wzr, [x0, w22, sxtw]
  4224b8:	mov	w0, w20
  4224bc:	bl	404b60 <waitpid@plt>
  4224c0:	mov	w19, w0
  4224c4:	cmn	w0, #0x1
  4224c8:	b.ne	4224fc <wcrtomb@plt+0x1d8dc>  // b.any
  4224cc:	nop
  4224d0:	bl	404ad0 <__errno_location@plt>
  4224d4:	ldr	w1, [x0]
  4224d8:	cmp	w1, #0x4
  4224dc:	b.ne	422560 <wcrtomb@plt+0x1d940>  // b.any
  4224e0:	add	x1, sp, #0x44
  4224e4:	mov	w0, w20
  4224e8:	mov	w2, #0x0                   	// #0
  4224ec:	bl	404b60 <waitpid@plt>
  4224f0:	mov	w19, w0
  4224f4:	cmn	w0, #0x1
  4224f8:	b.eq	4224d0 <wcrtomb@plt+0x1d8b0>  // b.none
  4224fc:	ldr	x1, [x21, #144]
  422500:	mov	w0, #0xd                   	// #13
  422504:	bl	404270 <signal@plt>
  422508:	ldr	w0, [sp, #68]
  42250c:	ands	w19, w0, #0x7f
  422510:	b.ne	422590 <wcrtomb@plt+0x1d970>  // b.any
  422514:	tst	x0, #0xff00
  422518:	ccmp	w22, #0x0, #0x4, eq  // eq = none
  42251c:	ldr	x0, [sp, #80]
  422520:	b.gt	422544 <wcrtomb@plt+0x1d924>
  422524:	bl	4047b0 <free@plt>
  422528:	ldrb	w19, [sp, #69]
  42252c:	mov	w0, w19
  422530:	ldp	x19, x20, [sp, #16]
  422534:	ldp	x21, x22, [sp, #32]
  422538:	ldr	x23, [sp, #48]
  42253c:	ldp	x29, x30, [sp], #112
  422540:	ret
  422544:	str	x0, [x23]
  422548:	mov	w0, w19
  42254c:	ldp	x19, x20, [sp, #16]
  422550:	ldp	x21, x22, [sp, #32]
  422554:	ldr	x23, [sp, #48]
  422558:	ldp	x29, x30, [sp], #112
  42255c:	ret
  422560:	ldr	x1, [x21, #144]
  422564:	mov	w0, #0xd                   	// #13
  422568:	bl	404270 <signal@plt>
  42256c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  422570:	ldr	x0, [x0, #712]
  422574:	bl	42a2d8 <wcrtomb@plt+0x256b8>
  422578:	mov	w0, w19
  42257c:	ldp	x19, x20, [sp, #16]
  422580:	ldp	x21, x22, [sp, #32]
  422584:	ldr	x23, [sp, #48]
  422588:	ldp	x29, x30, [sp], #112
  42258c:	ret
  422590:	ldr	x0, [sp, #80]
  422594:	mov	w19, #0xffffffff            	// #-1
  422598:	bl	4047b0 <free@plt>
  42259c:	b	42252c <wcrtomb@plt+0x1d90c>
  4225a0:	mov	w2, #0x1                   	// #1
  4225a4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  4225a8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4225ac:	add	x1, x1, #0xc58
  4225b0:	add	x0, x0, #0x848
  4225b4:	bl	404100 <setenv@plt>
  4225b8:	ldr	x1, [x23]
  4225bc:	mov	w2, #0x1                   	// #1
  4225c0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4225c4:	add	x0, x0, #0x858
  4225c8:	bl	404100 <setenv@plt>
  4225cc:	add	x1, sp, #0x58
  4225d0:	sxtw	x0, w19
  4225d4:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4225d8:	mov	x1, x0
  4225dc:	mov	w2, #0x1                   	// #1
  4225e0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4225e4:	add	x0, x0, #0x868
  4225e8:	bl	404100 <setenv@plt>
  4225ec:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4225f0:	add	x1, sp, #0x58
  4225f4:	ldrsw	x0, [x0, #692]
  4225f8:	bl	4398d8 <argp_parse@@Base+0x59f0>
  4225fc:	mov	x1, x0
  422600:	mov	w2, #0x1                   	// #1
  422604:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422608:	add	x0, x0, #0x878
  42260c:	bl	404100 <setenv@plt>
  422610:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  422614:	ldr	w0, [x0, #804]
  422618:	bl	423120 <wcrtomb@plt+0x1e500>
  42261c:	mov	x1, x0
  422620:	mov	w2, #0x1                   	// #1
  422624:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422628:	add	x0, x0, #0x9f8
  42262c:	bl	404100 <setenv@plt>
  422630:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  422634:	ldr	w0, [x0, #3992]
  422638:	cbnz	w0, 422644 <wcrtomb@plt+0x1da24>
  42263c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  422640:	ldr	w0, [x0, #760]
  422644:	bl	4230e0 <wcrtomb@plt+0x1e4c0>
  422648:	mov	x1, x0
  42264c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x14e10>
  422650:	add	x0, x2, #0x890
  422654:	mov	w2, #0x1                   	// #1
  422658:	bl	404100 <setenv@plt>
  42265c:	ldrsw	x0, [sp, #76]
  422660:	add	x1, sp, #0x58
  422664:	bl	4398d8 <argp_parse@@Base+0x59f0>
  422668:	mov	x1, x0
  42266c:	mov	w2, #0x1                   	// #1
  422670:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422674:	add	x0, x0, #0xa08
  422678:	bl	404100 <setenv@plt>
  42267c:	ldr	w0, [sp, #72]
  422680:	bl	405be8 <wcrtomb@plt+0xfc8>
  422684:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  422688:	ldr	x0, [x0, #712]
  42268c:	bl	421088 <wcrtomb@plt+0x1c468>
  422690:	stp	x29, x30, [sp, #-80]!
  422694:	mov	x29, sp
  422698:	stp	x19, x20, [sp, #16]
  42269c:	mov	w20, w2
  4226a0:	stp	x21, x22, [sp, #32]
  4226a4:	mov	x22, x0
  4226a8:	mov	x21, x1
  4226ac:	bl	41be80 <wcrtomb@plt+0x17260>
  4226b0:	cbz	w0, 42270c <wcrtomb@plt+0x1daec>
  4226b4:	mov	w19, w0
  4226b8:	b	4226cc <wcrtomb@plt+0x1daac>
  4226bc:	bl	404ad0 <__errno_location@plt>
  4226c0:	ldr	w1, [x0]
  4226c4:	cmp	w1, #0x4
  4226c8:	b.ne	4226f4 <wcrtomb@plt+0x1dad4>  // b.any
  4226cc:	add	x1, sp, #0x38
  4226d0:	mov	w0, w19
  4226d4:	mov	w2, #0x0                   	// #0
  4226d8:	bl	404b60 <waitpid@plt>
  4226dc:	cmn	w0, #0x1
  4226e0:	b.eq	4226bc <wcrtomb@plt+0x1da9c>  // b.none
  4226e4:	ldp	x19, x20, [sp, #16]
  4226e8:	ldp	x21, x22, [sp, #32]
  4226ec:	ldp	x29, x30, [sp], #80
  4226f0:	ret
  4226f4:	mov	x0, x22
  4226f8:	bl	42a2d8 <wcrtomb@plt+0x256b8>
  4226fc:	ldp	x19, x20, [sp, #16]
  422700:	ldp	x21, x22, [sp, #32]
  422704:	ldp	x29, x30, [sp], #80
  422708:	ret
  42270c:	mov	w2, #0x1                   	// #1
  422710:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  422714:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422718:	add	x1, x1, #0xc58
  42271c:	add	x0, x0, #0x848
  422720:	bl	404100 <setenv@plt>
  422724:	mov	w2, #0x1                   	// #1
  422728:	mov	x1, x21
  42272c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422730:	add	x0, x0, #0x858
  422734:	bl	404100 <setenv@plt>
  422738:	add	x1, sp, #0x38
  42273c:	sxtw	x0, w20
  422740:	bl	4398d8 <argp_parse@@Base+0x59f0>
  422744:	mov	x1, x0
  422748:	mov	w2, #0x1                   	// #1
  42274c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422750:	add	x0, x0, #0xa10
  422754:	bl	404100 <setenv@plt>
  422758:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42275c:	add	x1, sp, #0x38
  422760:	ldrsw	x0, [x0, #692]
  422764:	bl	4398d8 <argp_parse@@Base+0x59f0>
  422768:	mov	x1, x0
  42276c:	mov	w2, #0x1                   	// #1
  422770:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422774:	add	x0, x0, #0x878
  422778:	bl	404100 <setenv@plt>
  42277c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  422780:	ldr	w0, [x0, #804]
  422784:	bl	423120 <wcrtomb@plt+0x1e500>
  422788:	mov	x1, x0
  42278c:	mov	w2, #0x1                   	// #1
  422790:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422794:	add	x0, x0, #0x9f8
  422798:	bl	404100 <setenv@plt>
  42279c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4227a0:	ldr	w0, [x0, #3992]
  4227a4:	cbnz	w0, 4227b0 <wcrtomb@plt+0x1db90>
  4227a8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4227ac:	ldr	w0, [x0, #760]
  4227b0:	bl	4230e0 <wcrtomb@plt+0x1e4c0>
  4227b4:	mov	x1, x0
  4227b8:	mov	w2, #0x1                   	// #1
  4227bc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4227c0:	add	x0, x0, #0x890
  4227c4:	bl	404100 <setenv@plt>
  4227c8:	mov	x0, x22
  4227cc:	bl	421088 <wcrtomb@plt+0x1c468>
  4227d0:	b	4227e0 <wcrtomb@plt+0x1dbc0>
  4227d4:	cmp	w1, w2
  4227d8:	b.eq	42280c <wcrtomb@plt+0x1dbec>  // b.none
  4227dc:	add	x0, x0, #0x30
  4227e0:	ldr	x3, [x0]
  4227e4:	ldr	w2, [x0, #8]
  4227e8:	cbnz	x3, 4227d4 <wcrtomb@plt+0x1dbb4>
  4227ec:	cbnz	w2, 4227d4 <wcrtomb@plt+0x1dbb4>
  4227f0:	ldr	x3, [x0, #16]
  4227f4:	cbnz	x3, 4227d4 <wcrtomb@plt+0x1dbb4>
  4227f8:	ldr	w3, [x0, #24]
  4227fc:	cbnz	w3, 4227d4 <wcrtomb@plt+0x1dbb4>
  422800:	ldr	x3, [x0, #32]
  422804:	cbnz	x3, 4227d4 <wcrtomb@plt+0x1dbb4>
  422808:	mov	x0, #0x0                   	// #0
  42280c:	ret
  422810:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422814:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  422818:	add	x1, x1, #0xa30
  42281c:	add	x0, x0, #0xc70
  422820:	b	422828 <wcrtomb@plt+0x1dc08>
  422824:	ldr	x1, [x0, #16]
  422828:	add	x0, x0, #0x10
  42282c:	cbz	x1, 422864 <wcrtomb@plt+0x1dc44>
  422830:	ldr	w2, [x0, #8]
  422834:	cmp	w2, #0x6
  422838:	b.ne	422824 <wcrtomb@plt+0x1dc04>  // b.any
  42283c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  422840:	adrp	x5, 457000 <_obstack_memory_used@@Base+0x14e10>
  422844:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x14e10>
  422848:	add	x5, x5, #0xa48
  42284c:	ldr	x4, [x0, #3544]
  422850:	add	x2, x2, #0xa60
  422854:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  422858:	mov	w3, #0x14                  	// #20
  42285c:	add	x0, x0, #0xa68
  422860:	b	4417b0 <argp_parse@@Base+0xd8c8>
  422864:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422868:	add	x1, x1, #0xa38
  42286c:	b	42283c <wcrtomb@plt+0x1dc1c>
  422870:	stp	x29, x30, [sp, #-48]!
  422874:	mov	x29, sp
  422878:	str	x21, [sp, #32]
  42287c:	mov	x21, x1
  422880:	ldr	x1, [x1, #8]
  422884:	stp	x19, x20, [sp, #16]
  422888:	mov	w20, w0
  42288c:	mov	x0, #0x20                  	// #32
  422890:	cbz	x1, 4228a0 <wcrtomb@plt+0x1dc80>
  422894:	mov	x0, x1
  422898:	bl	403ff0 <strlen@plt>
  42289c:	add	x0, x0, #0x21
  4228a0:	bl	440f48 <argp_parse@@Base+0xd060>
  4228a4:	mov	x19, x0
  4228a8:	ldr	x1, [x21, #8]
  4228ac:	cbz	x1, 4228f8 <wcrtomb@plt+0x1dcd8>
  4228b0:	add	x2, x0, #0x20
  4228b4:	mov	x0, x2
  4228b8:	bl	404910 <strcpy@plt>
  4228bc:	str	x0, [x19, #8]
  4228c0:	mov	w2, w20
  4228c4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4228c8:	add	x1, x1, #0xbb8
  4228cc:	ldr	w0, [x21]
  4228d0:	str	w0, [x19]
  4228d4:	ldr	x3, [x21, #16]
  4228d8:	str	x3, [x19, #16]
  4228dc:	ldr	x0, [x1, x2, lsl #3]
  4228e0:	str	x0, [x19, #24]
  4228e4:	ldr	x21, [sp, #32]
  4228e8:	str	x19, [x1, x2, lsl #3]
  4228ec:	ldp	x19, x20, [sp, #16]
  4228f0:	ldp	x29, x30, [sp], #48
  4228f4:	ret
  4228f8:	str	xzr, [x0, #8]
  4228fc:	b	4228c0 <wcrtomb@plt+0x1dca0>
  422900:	stp	x29, x30, [sp, #-32]!
  422904:	mov	x29, sp
  422908:	str	x19, [sp, #16]
  42290c:	mov	w19, w0
  422910:	bl	405738 <wcrtomb@plt+0xb18>
  422914:	bl	405b00 <wcrtomb@plt+0xee0>
  422918:	mov	w0, w19
  42291c:	adrp	x1, 422000 <wcrtomb@plt+0x1d3e0>
  422920:	ldr	x19, [sp, #16]
  422924:	add	x1, x1, #0x900
  422928:	ldp	x29, x30, [sp], #32
  42292c:	b	404270 <signal@plt>
  422930:	stp	x29, x30, [sp, #-80]!
  422934:	mov	x29, sp
  422938:	stp	x19, x20, [sp, #16]
  42293c:	mov	x20, x0
  422940:	stp	x21, x22, [sp, #32]
  422944:	mov	x22, x1
  422948:	mov	x21, #0xffffffffffffffff    	// #-1
  42294c:	mov	w1, #0x3a                  	// #58
  422950:	str	x21, [sp, #56]
  422954:	bl	404870 <strchr@plt>
  422958:	cbz	x0, 422a08 <wcrtomb@plt+0x1dde8>
  42295c:	mov	x19, x0
  422960:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  422964:	add	x3, sp, #0x38
  422968:	add	x4, x4, #0x948
  42296c:	add	x1, sp, #0x40
  422970:	mov	w2, #0xa                   	// #10
  422974:	strb	wzr, [x19], #1
  422978:	ldrb	w5, [x20]
  42297c:	mov	x0, x19
  422980:	cmp	w5, #0x0
  422984:	csel	x20, x20, xzr, ne  // ne = any
  422988:	bl	441208 <argp_parse@@Base+0xd320>
  42298c:	cbz	w0, 4229e0 <wcrtomb@plt+0x1ddc0>
  422990:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  422994:	ldr	x0, [x0, #952]
  422998:	cbz	x0, 4229a0 <wcrtomb@plt+0x1dd80>
  42299c:	blr	x0
  4229a0:	mov	x0, x19
  4229a4:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4229a8:	mov	w2, #0x5                   	// #5
  4229ac:	mov	x19, x0
  4229b0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  4229b4:	mov	x0, #0x0                   	// #0
  4229b8:	add	x1, x1, #0xaa8
  4229bc:	bl	4049c0 <dcgettext@plt>
  4229c0:	mov	x3, x19
  4229c4:	mov	x4, x0
  4229c8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  4229cc:	add	x2, x2, #0x9e8
  4229d0:	mov	w1, #0x0                   	// #0
  4229d4:	mov	w0, #0x0                   	// #0
  4229d8:	bl	404050 <error@plt>
  4229dc:	bl	40e770 <wcrtomb@plt+0x9b50>
  4229e0:	ldr	x0, [sp, #56]
  4229e4:	mov	x1, #0xffffffff            	// #4294967295
  4229e8:	cmp	x0, x1
  4229ec:	b.hi	422990 <wcrtomb@plt+0x1dd70>  // b.pmore
  4229f0:	cbz	x20, 4229f8 <wcrtomb@plt+0x1ddd8>
  4229f4:	str	x20, [x22]
  4229f8:	ldp	x19, x20, [sp, #16]
  4229fc:	ldp	x21, x22, [sp, #32]
  422a00:	ldp	x29, x30, [sp], #80
  422a04:	ret
  422a08:	ldrb	w1, [x20]
  422a0c:	mov	x0, x21
  422a10:	sub	w1, w1, #0x30
  422a14:	and	w1, w1, #0xff
  422a18:	cmp	w1, #0x9
  422a1c:	b.hi	4229f4 <wcrtomb@plt+0x1ddd4>  // b.pmore
  422a20:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  422a24:	add	x3, sp, #0x48
  422a28:	add	x4, x4, #0x948
  422a2c:	add	x1, sp, #0x40
  422a30:	mov	x0, x20
  422a34:	mov	w2, #0xa                   	// #10
  422a38:	bl	441208 <argp_parse@@Base+0xd320>
  422a3c:	cbz	w0, 422a50 <wcrtomb@plt+0x1de30>
  422a40:	cmp	w0, #0x1
  422a44:	b.eq	422a60 <wcrtomb@plt+0x1de40>  // b.none
  422a48:	ldr	x0, [sp, #56]
  422a4c:	b	4229f4 <wcrtomb@plt+0x1ddd4>
  422a50:	ldr	x0, [sp, #72]
  422a54:	mov	x1, #0xffffffff            	// #4294967295
  422a58:	cmp	x0, x1
  422a5c:	b.ls	4229f8 <wcrtomb@plt+0x1ddd8>  // b.plast
  422a60:	mov	x19, x20
  422a64:	b	422990 <wcrtomb@plt+0x1dd70>
  422a68:	stp	x29, x30, [sp, #-160]!
  422a6c:	cmp	w0, #0x114
  422a70:	mov	x29, sp
  422a74:	stp	x19, x20, [sp, #16]
  422a78:	b.eq	422ec0 <wcrtomb@plt+0x1e2a0>  // b.none
  422a7c:	b.le	422bd4 <wcrtomb@plt+0x1dfb4>
  422a80:	cmp	w0, #0x14f
  422a84:	b.eq	422ce0 <wcrtomb@plt+0x1e0c0>  // b.none
  422a88:	b.le	422c60 <wcrtomb@plt+0x1e040>
  422a8c:	mov	w2, #0x4                   	// #4
  422a90:	movk	w2, #0x200, lsl #16
  422a94:	cmp	w0, w2
  422a98:	b.ne	422ca4 <wcrtomb@plt+0x1e084>  // b.any
  422a9c:	mov	x2, #0x0                   	// #0
  422aa0:	mov	x1, #0x0                   	// #0
  422aa4:	add	x0, sp, #0x48
  422aa8:	adrp	x4, 404000 <fputs@plt>
  422aac:	adrp	x3, 440000 <argp_parse@@Base+0xc118>
  422ab0:	add	x4, x4, #0x7b0
  422ab4:	add	x3, x3, #0xf48
  422ab8:	stp	x21, x22, [sp, #32]
  422abc:	bl	441fe0 <_obstack_begin@@Base>
  422ac0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422ac4:	add	x1, x1, #0xae8
  422ac8:	mov	w2, #0x5                   	// #5
  422acc:	mov	x0, #0x0                   	// #0
  422ad0:	bl	4049c0 <dcgettext@plt>
  422ad4:	mov	x20, x0
  422ad8:	bl	403ff0 <strlen@plt>
  422adc:	mov	x19, x0
  422ae0:	ldp	x0, x1, [sp, #96]
  422ae4:	sub	x1, x1, x0
  422ae8:	cmp	x19, x1
  422aec:	b.hi	422ee8 <wcrtomb@plt+0x1e2c8>  // b.pmore
  422af0:	mov	x2, x19
  422af4:	mov	x1, x20
  422af8:	bl	403f70 <memcpy@plt>
  422afc:	ldp	x2, x0, [sp, #96]
  422b00:	add	x19, x2, x19
  422b04:	str	x19, [sp, #96]
  422b08:	sub	x0, x0, x19
  422b0c:	cmp	x0, #0x1
  422b10:	b.ls	422f34 <wcrtomb@plt+0x1e314>  // b.plast
  422b14:	mov	w0, #0xa0a                 	// #2570
  422b18:	strh	w0, [x19]
  422b1c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  422b20:	add	x22, x0, #0xda0
  422b24:	ldr	x1, [sp, #96]
  422b28:	ldr	x21, [x0, #3488]
  422b2c:	add	x1, x1, #0x2
  422b30:	str	x1, [sp, #96]
  422b34:	cbz	x21, 422d80 <wcrtomb@plt+0x1e160>
  422b38:	stp	x23, x24, [sp, #48]
  422b3c:	mov	w24, #0x2020                	// #8224
  422b40:	mov	w23, #0xa                   	// #10
  422b44:	b	422bb0 <wcrtomb@plt+0x1df90>
  422b48:	strh	w24, [x1]
  422b4c:	mov	x0, x21
  422b50:	ldr	x20, [sp, #96]
  422b54:	add	x20, x20, #0x2
  422b58:	str	x20, [sp, #96]
  422b5c:	bl	403ff0 <strlen@plt>
  422b60:	mov	x19, x0
  422b64:	ldr	x1, [sp, #104]
  422b68:	sub	x1, x1, x20
  422b6c:	cmp	x0, x1
  422b70:	b.hi	422cb8 <wcrtomb@plt+0x1e098>  // b.pmore
  422b74:	mov	x1, x21
  422b78:	mov	x2, x19
  422b7c:	mov	x0, x20
  422b80:	bl	403f70 <memcpy@plt>
  422b84:	ldp	x1, x2, [sp, #96]
  422b88:	add	x0, x1, x19
  422b8c:	str	x0, [sp, #96]
  422b90:	cmp	x0, x2
  422b94:	b.eq	422ccc <wcrtomb@plt+0x1e0ac>  // b.none
  422b98:	add	x1, x0, #0x1
  422b9c:	str	x1, [sp, #96]
  422ba0:	strb	w23, [x0]
  422ba4:	ldr	x21, [x22, #8]!
  422ba8:	cbz	x21, 422d7c <wcrtomb@plt+0x1e15c>
  422bac:	ldr	x1, [sp, #96]
  422bb0:	ldr	x0, [sp, #104]
  422bb4:	sub	x0, x0, x1
  422bb8:	cmp	x0, #0x1
  422bbc:	b.hi	422b48 <wcrtomb@plt+0x1df28>  // b.pmore
  422bc0:	mov	x1, #0x2                   	// #2
  422bc4:	add	x0, sp, #0x48
  422bc8:	bl	442010 <_obstack_newchunk@@Base>
  422bcc:	ldr	x1, [sp, #96]
  422bd0:	b	422b48 <wcrtomb@plt+0x1df28>
  422bd4:	cmp	w0, #0x6a
  422bd8:	b.eq	422d14 <wcrtomb@plt+0x1e0f4>  // b.none
  422bdc:	b.le	422c1c <wcrtomb@plt+0x1dffc>
  422be0:	cmp	w0, #0x7a
  422be4:	b.ne	422ca4 <wcrtomb@plt+0x1e084>  // b.any
  422be8:	mov	w2, #0x5                   	// #5
  422bec:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422bf0:	mov	x0, #0x0                   	// #0
  422bf4:	add	x1, x1, #0xac8
  422bf8:	bl	4049c0 <dcgettext@plt>
  422bfc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  422c00:	add	x1, x1, #0x3c0
  422c04:	bl	4417b0 <argp_parse@@Base+0xd8c8>
  422c08:	mov	x19, x0
  422c0c:	mov	x0, x19
  422c10:	ldp	x19, x20, [sp, #16]
  422c14:	ldp	x29, x30, [sp], #160
  422c18:	ret
  422c1c:	cmp	w0, #0x4a
  422c20:	b.eq	422d48 <wcrtomb@plt+0x1e128>  // b.none
  422c24:	cmp	w0, #0x5a
  422c28:	b.ne	422ca4 <wcrtomb@plt+0x1e084>  // b.any
  422c2c:	mov	w2, #0x5                   	// #5
  422c30:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422c34:	mov	x0, #0x0                   	// #0
  422c38:	add	x1, x1, #0xac8
  422c3c:	bl	4049c0 <dcgettext@plt>
  422c40:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x16e10>
  422c44:	add	x1, x1, #0xf28
  422c48:	bl	4417b0 <argp_parse@@Base+0xd8c8>
  422c4c:	mov	x19, x0
  422c50:	mov	x0, x19
  422c54:	ldp	x19, x20, [sp, #16]
  422c58:	ldp	x29, x30, [sp], #160
  422c5c:	ret
  422c60:	cmp	w0, #0x115
  422c64:	b.eq	422e8c <wcrtomb@plt+0x1e26c>  // b.none
  422c68:	cmp	w0, #0x116
  422c6c:	b.ne	422ca4 <wcrtomb@plt+0x1e084>  // b.any
  422c70:	mov	w2, #0x5                   	// #5
  422c74:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422c78:	mov	x0, #0x0                   	// #0
  422c7c:	add	x1, x1, #0xac8
  422c80:	bl	4049c0 <dcgettext@plt>
  422c84:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  422c88:	add	x1, x1, #0x418
  422c8c:	bl	4417b0 <argp_parse@@Base+0xd8c8>
  422c90:	mov	x19, x0
  422c94:	mov	x0, x19
  422c98:	ldp	x19, x20, [sp, #16]
  422c9c:	ldp	x29, x30, [sp], #160
  422ca0:	ret
  422ca4:	mov	x19, x1
  422ca8:	mov	x0, x19
  422cac:	ldp	x19, x20, [sp, #16]
  422cb0:	ldp	x29, x30, [sp], #160
  422cb4:	ret
  422cb8:	mov	x1, x0
  422cbc:	add	x0, sp, #0x48
  422cc0:	bl	442010 <_obstack_newchunk@@Base>
  422cc4:	ldr	x20, [sp, #96]
  422cc8:	b	422b74 <wcrtomb@plt+0x1df54>
  422ccc:	add	x0, sp, #0x48
  422cd0:	mov	x1, #0x1                   	// #1
  422cd4:	bl	442010 <_obstack_newchunk@@Base>
  422cd8:	ldr	x0, [sp, #96]
  422cdc:	b	422b98 <wcrtomb@plt+0x1df78>
  422ce0:	mov	w2, #0x5                   	// #5
  422ce4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422ce8:	mov	x0, #0x0                   	// #0
  422cec:	add	x1, x1, #0xac8
  422cf0:	bl	4049c0 <dcgettext@plt>
  422cf4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  422cf8:	add	x1, x1, #0x428
  422cfc:	bl	4417b0 <argp_parse@@Base+0xd8c8>
  422d00:	mov	x19, x0
  422d04:	mov	x0, x19
  422d08:	ldp	x19, x20, [sp, #16]
  422d0c:	ldp	x29, x30, [sp], #160
  422d10:	ret
  422d14:	mov	w2, #0x5                   	// #5
  422d18:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422d1c:	mov	x0, #0x0                   	// #0
  422d20:	add	x1, x1, #0xac8
  422d24:	bl	4049c0 <dcgettext@plt>
  422d28:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  422d2c:	add	x1, x1, #0x3d0
  422d30:	bl	4417b0 <argp_parse@@Base+0xd8c8>
  422d34:	mov	x19, x0
  422d38:	mov	x0, x19
  422d3c:	ldp	x19, x20, [sp, #16]
  422d40:	ldp	x29, x30, [sp], #160
  422d44:	ret
  422d48:	mov	w2, #0x5                   	// #5
  422d4c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422d50:	mov	x0, #0x0                   	// #0
  422d54:	add	x1, x1, #0xac8
  422d58:	bl	4049c0 <dcgettext@plt>
  422d5c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  422d60:	add	x1, x1, #0x408
  422d64:	bl	4417b0 <argp_parse@@Base+0xd8c8>
  422d68:	mov	x19, x0
  422d6c:	mov	x0, x19
  422d70:	ldp	x19, x20, [sp, #16]
  422d74:	ldp	x29, x30, [sp], #160
  422d78:	ret
  422d7c:	ldp	x23, x24, [sp, #48]
  422d80:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422d84:	add	x1, x1, #0xb20
  422d88:	mov	w2, #0x5                   	// #5
  422d8c:	mov	x0, #0x0                   	// #0
  422d90:	bl	4049c0 <dcgettext@plt>
  422d94:	mov	x20, x0
  422d98:	bl	403ff0 <strlen@plt>
  422d9c:	mov	x19, x0
  422da0:	ldp	x0, x1, [sp, #96]
  422da4:	sub	x1, x1, x0
  422da8:	cmp	x19, x1
  422dac:	b.hi	422f10 <wcrtomb@plt+0x1e2f0>  // b.pmore
  422db0:	mov	x1, x20
  422db4:	mov	x2, x19
  422db8:	bl	403f70 <memcpy@plt>
  422dbc:	ldr	x0, [sp, #96]
  422dc0:	add	x0, x0, x19
  422dc4:	str	x0, [sp, #96]
  422dc8:	bl	422810 <wcrtomb@plt+0x1dbf0>
  422dcc:	mov	x20, x0
  422dd0:	bl	403ff0 <strlen@plt>
  422dd4:	mov	x19, x0
  422dd8:	ldp	x0, x1, [sp, #96]
  422ddc:	sub	x1, x1, x0
  422de0:	cmp	x19, x1
  422de4:	b.hi	422efc <wcrtomb@plt+0x1e2dc>  // b.pmore
  422de8:	mov	x1, x20
  422dec:	mov	x2, x19
  422df0:	bl	403f70 <memcpy@plt>
  422df4:	ldp	x1, x0, [sp, #96]
  422df8:	add	x2, x1, x19
  422dfc:	str	x2, [sp, #96]
  422e00:	cmp	x2, x0
  422e04:	b.eq	422f5c <wcrtomb@plt+0x1e33c>  // b.none
  422e08:	add	x0, x2, #0x1
  422e0c:	str	x0, [sp, #96]
  422e10:	mov	w0, #0xa                   	// #10
  422e14:	strb	w0, [x2]
  422e18:	ldp	x0, x1, [sp, #96]
  422e1c:	cmp	x1, x0
  422e20:	b.eq	422f48 <wcrtomb@plt+0x1e328>  // b.none
  422e24:	add	x1, x0, #0x1
  422e28:	str	x1, [sp, #96]
  422e2c:	strb	wzr, [x0]
  422e30:	ldp	x0, x3, [sp, #88]
  422e34:	cmp	x3, x0
  422e38:	b.eq	422f24 <wcrtomb@plt+0x1e304>  // b.none
  422e3c:	ldr	x1, [sp, #120]
  422e40:	ldr	x2, [sp, #80]
  422e44:	add	x3, x3, x1
  422e48:	ldr	x4, [sp, #104]
  422e4c:	bic	x1, x3, x1
  422e50:	str	x1, [sp, #96]
  422e54:	sub	x3, x1, x2
  422e58:	sub	x2, x4, x2
  422e5c:	cmp	x3, x2
  422e60:	b.ls	422e6c <wcrtomb@plt+0x1e24c>  // b.plast
  422e64:	mov	x1, x4
  422e68:	str	x4, [sp, #96]
  422e6c:	str	x1, [sp, #88]
  422e70:	bl	441170 <argp_parse@@Base+0xd288>
  422e74:	mov	x1, #0x0                   	// #0
  422e78:	mov	x19, x0
  422e7c:	add	x0, sp, #0x48
  422e80:	bl	442160 <_obstack_free@@Base>
  422e84:	ldp	x21, x22, [sp, #32]
  422e88:	b	422c0c <wcrtomb@plt+0x1dfec>
  422e8c:	mov	w2, #0x5                   	// #5
  422e90:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422e94:	mov	x0, #0x0                   	// #0
  422e98:	add	x1, x1, #0xac8
  422e9c:	bl	4049c0 <dcgettext@plt>
  422ea0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  422ea4:	add	x1, x1, #0x3f8
  422ea8:	bl	4417b0 <argp_parse@@Base+0xd8c8>
  422eac:	mov	x19, x0
  422eb0:	mov	x0, x19
  422eb4:	ldp	x19, x20, [sp, #16]
  422eb8:	ldp	x29, x30, [sp], #160
  422ebc:	ret
  422ec0:	mov	w2, #0x5                   	// #5
  422ec4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  422ec8:	mov	x0, #0x0                   	// #0
  422ecc:	add	x1, x1, #0xac8
  422ed0:	bl	4049c0 <dcgettext@plt>
  422ed4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  422ed8:	add	x1, x1, #0x3e8
  422edc:	bl	4417b0 <argp_parse@@Base+0xd8c8>
  422ee0:	mov	x19, x0
  422ee4:	b	422c0c <wcrtomb@plt+0x1dfec>
  422ee8:	add	x0, sp, #0x48
  422eec:	mov	x1, x19
  422ef0:	bl	442010 <_obstack_newchunk@@Base>
  422ef4:	ldr	x0, [sp, #96]
  422ef8:	b	422af0 <wcrtomb@plt+0x1ded0>
  422efc:	add	x0, sp, #0x48
  422f00:	mov	x1, x19
  422f04:	bl	442010 <_obstack_newchunk@@Base>
  422f08:	ldr	x0, [sp, #96]
  422f0c:	b	422de8 <wcrtomb@plt+0x1e1c8>
  422f10:	add	x0, sp, #0x48
  422f14:	mov	x1, x19
  422f18:	bl	442010 <_obstack_newchunk@@Base>
  422f1c:	ldr	x0, [sp, #96]
  422f20:	b	422db0 <wcrtomb@plt+0x1e190>
  422f24:	ldrb	w1, [sp, #152]
  422f28:	orr	w1, w1, #0x2
  422f2c:	strb	w1, [sp, #152]
  422f30:	b	422e3c <wcrtomb@plt+0x1e21c>
  422f34:	add	x0, sp, #0x48
  422f38:	mov	x1, #0x2                   	// #2
  422f3c:	bl	442010 <_obstack_newchunk@@Base>
  422f40:	ldr	x19, [sp, #96]
  422f44:	b	422b14 <wcrtomb@plt+0x1def4>
  422f48:	add	x0, sp, #0x48
  422f4c:	mov	x1, #0x1                   	// #1
  422f50:	bl	442010 <_obstack_newchunk@@Base>
  422f54:	ldr	x0, [sp, #96]
  422f58:	b	422e24 <wcrtomb@plt+0x1e204>
  422f5c:	add	x0, sp, #0x48
  422f60:	mov	x1, #0x1                   	// #1
  422f64:	bl	442010 <_obstack_newchunk@@Base>
  422f68:	ldr	x2, [sp, #96]
  422f6c:	b	422e08 <wcrtomb@plt+0x1e1e8>
  422f70:	stp	x29, x30, [sp, #-64]!
  422f74:	mov	x29, sp
  422f78:	stp	x19, x20, [sp, #16]
  422f7c:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  422f80:	add	x19, x19, #0xbb8
  422f84:	mov	x20, x0
  422f88:	stp	x21, x22, [sp, #32]
  422f8c:	mov	x21, x1
  422f90:	ldr	x0, [x19, #80]
  422f94:	cbz	x0, 423014 <wcrtomb@plt+0x1e3f4>
  422f98:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  422f9c:	mov	x0, x21
  422fa0:	ldr	x21, [x22, #3872]
  422fa4:	bl	440248 <argp_parse@@Base+0xc360>
  422fa8:	mov	x3, x20
  422fac:	mov	x4, x0
  422fb0:	mov	w1, #0x1                   	// #1
  422fb4:	mov	x0, x21
  422fb8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x14e10>
  422fbc:	add	x2, x2, #0xb48
  422fc0:	bl	404700 <__fprintf_chk@plt>
  422fc4:	ldr	x0, [x22, #3872]
  422fc8:	bl	4048d0 <fflush_unlocked@plt>
  422fcc:	ldr	w20, [x19, #96]
  422fd0:	cbz	w20, 423050 <wcrtomb@plt+0x1e430>
  422fd4:	mov	w20, #0x0                   	// #0
  422fd8:	ldr	x0, [x22, #3872]
  422fdc:	ldp	x1, x2, [x0, #40]
  422fe0:	cmp	x1, x2
  422fe4:	b.cs	4230d0 <wcrtomb@plt+0x1e4b0>  // b.hs, b.nlast
  422fe8:	add	x2, x1, #0x1
  422fec:	str	x2, [x0, #40]
  422ff0:	mov	w0, #0xa                   	// #10
  422ff4:	strb	w0, [x1]
  422ff8:	ldr	x0, [x22, #3872]
  422ffc:	bl	4048d0 <fflush_unlocked@plt>
  423000:	mov	w0, w20
  423004:	ldp	x19, x20, [sp, #16]
  423008:	ldp	x21, x22, [sp, #32]
  42300c:	ldp	x29, x30, [sp], #64
  423010:	ret
  423014:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423018:	ldr	w0, [x0, #920]
  42301c:	cbz	w0, 423028 <wcrtomb@plt+0x1e408>
  423020:	ldr	x0, [x19, #88]
  423024:	cbz	x0, 4230b4 <wcrtomb@plt+0x1e494>
  423028:	adrp	x22, 453000 <_obstack_memory_used@@Base+0x10e10>
  42302c:	add	x22, x22, #0xe90
  423030:	mov	x0, x22
  423034:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  423038:	add	x1, x1, #0xf28
  42303c:	bl	4042e0 <fopen@plt>
  423040:	str	x0, [x19, #80]
  423044:	cbnz	x0, 422f98 <wcrtomb@plt+0x1e378>
  423048:	mov	x0, x22
  42304c:	bl	429df8 <wcrtomb@plt+0x251d8>
  423050:	ldr	x3, [x19, #80]
  423054:	add	x1, sp, #0x38
  423058:	add	x0, sp, #0x30
  42305c:	mov	w2, #0xa                   	// #10
  423060:	stp	xzr, xzr, [sp, #48]
  423064:	bl	404b40 <__getdelim@plt>
  423068:	tbz	x0, #63, 423080 <wcrtomb@plt+0x1e460>
  42306c:	ldr	x0, [sp, #48]
  423070:	mov	w1, #0x1                   	// #1
  423074:	str	w1, [x19, #96]
  423078:	bl	4047b0 <free@plt>
  42307c:	b	422fd8 <wcrtomb@plt+0x1e3b8>
  423080:	ldr	x0, [sp, #48]
  423084:	bl	404070 <rpmatch@plt>
  423088:	ldr	w19, [x19, #96]
  42308c:	cmp	w0, #0x0
  423090:	ldr	x0, [sp, #48]
  423094:	cset	w20, gt
  423098:	bl	4047b0 <free@plt>
  42309c:	cbnz	w19, 422fd8 <wcrtomb@plt+0x1e3b8>
  4230a0:	mov	w0, w20
  4230a4:	ldp	x19, x20, [sp, #16]
  4230a8:	ldp	x21, x22, [sp, #32]
  4230ac:	ldp	x29, x30, [sp], #64
  4230b0:	ret
  4230b4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4230b8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4230bc:	add	x0, x0, #0xb40
  4230c0:	str	x0, [x19, #88]
  4230c4:	ldr	x0, [x1, #1112]
  4230c8:	str	x0, [x19, #80]
  4230cc:	b	422f98 <wcrtomb@plt+0x1e378>
  4230d0:	mov	w1, #0xa                   	// #10
  4230d4:	bl	404680 <__overflow@plt>
  4230d8:	b	422ff8 <wcrtomb@plt+0x1e3d8>
  4230dc:	nop
  4230e0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x14e10>
  4230e4:	mov	w3, w0
  4230e8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x17e10>
  4230ec:	add	x0, x2, #0xb50
  4230f0:	add	x1, x1, #0xc70
  4230f4:	mov	w2, #0x1                   	// #1
  4230f8:	b	423108 <wcrtomb@plt+0x1e4e8>
  4230fc:	ldr	x0, [x1, #16]!
  423100:	cbz	x0, 423114 <wcrtomb@plt+0x1e4f4>
  423104:	ldr	w2, [x1, #8]
  423108:	cmp	w3, w2
  42310c:	b.ne	4230fc <wcrtomb@plt+0x1e4dc>  // b.any
  423110:	ret
  423114:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  423118:	add	x0, x0, #0xa38
  42311c:	ret
  423120:	cmp	w0, #0x9
  423124:	b.hi	42313c <wcrtomb@plt+0x1e51c>  // b.pmore
  423128:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x17e10>
  42312c:	add	x1, x1, #0xc70
  423130:	add	x1, x1, #0x70
  423134:	ldr	x0, [x1, w0, uxtw #3]
  423138:	ret
  42313c:	stp	x29, x30, [sp, #-16]!
  423140:	mov	x29, sp
  423144:	bl	404650 <abort@plt>
  423148:	stp	x29, x30, [sp, #-48]!
  42314c:	mov	x29, sp
  423150:	stp	x19, x20, [sp, #16]
  423154:	stp	x21, x22, [sp, #32]
  423158:	mov	x21, x0
  42315c:	ldrb	w0, [x0]
  423160:	cmp	w0, #0x53
  423164:	b.ne	423174 <wcrtomb@plt+0x1e554>  // b.any
  423168:	ldrb	w0, [x21, #1]
  42316c:	cmp	w0, #0x49
  423170:	b.eq	423208 <wcrtomb@plt+0x1e5e8>  // b.none
  423174:	mov	x22, x21
  423178:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x14e10>
  42317c:	adrp	x20, 45a000 <_obstack_memory_used@@Base+0x17e10>
  423180:	add	x20, x20, #0xc70
  423184:	add	x0, x2, #0xb58
  423188:	add	x19, x20, #0xc0
  42318c:	mov	x1, x22
  423190:	add	x20, x20, #0x110
  423194:	bl	404710 <strcmp@plt>
  423198:	cbz	w0, 4231b8 <wcrtomb@plt+0x1e598>
  42319c:	add	x19, x19, #0x10
  4231a0:	cmp	x19, x20
  4231a4:	b.eq	4231cc <wcrtomb@plt+0x1e5ac>  // b.none
  4231a8:	ldr	x0, [x19]
  4231ac:	mov	x1, x22
  4231b0:	bl	404710 <strcmp@plt>
  4231b4:	cbnz	w0, 42319c <wcrtomb@plt+0x1e57c>
  4231b8:	ldr	w0, [x19, #8]
  4231bc:	ldp	x19, x20, [sp, #16]
  4231c0:	ldp	x21, x22, [sp, #32]
  4231c4:	ldp	x29, x30, [sp], #48
  4231c8:	ret
  4231cc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4231d0:	ldr	x0, [x0, #952]
  4231d4:	cbz	x0, 4231dc <wcrtomb@plt+0x1e5bc>
  4231d8:	blr	x0
  4231dc:	mov	w2, #0x5                   	// #5
  4231e0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  4231e4:	mov	x0, #0x0                   	// #0
  4231e8:	add	x1, x1, #0xb60
  4231ec:	bl	4049c0 <dcgettext@plt>
  4231f0:	mov	x2, x0
  4231f4:	mov	x3, x21
  4231f8:	mov	w1, #0x0                   	// #0
  4231fc:	mov	w0, #0x0                   	// #0
  423200:	bl	404050 <error@plt>
  423204:	bl	40e770 <wcrtomb@plt+0x9b50>
  423208:	ldrb	w0, [x21, #2]
  42320c:	cmp	w0, #0x47
  423210:	b.ne	423174 <wcrtomb@plt+0x1e554>  // b.any
  423214:	add	x22, x21, #0x3
  423218:	b	423178 <wcrtomb@plt+0x1e558>
  42321c:	nop
  423220:	stp	x29, x30, [sp, #-32]!
  423224:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  423228:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42322c:	mov	x29, sp
  423230:	ldr	x3, [x2, #3488]
  423234:	str	x19, [sp, #16]
  423238:	ldr	x1, [x1, #1096]
  42323c:	mov	w19, w0
  423240:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3de10>
  423244:	add	x0, x0, #0x170
  423248:	mov	w2, #0x4                   	// #4
  42324c:	bl	433740 <argp_help@@Base>
  423250:	bl	435340 <argp_parse@@Base+0x1458>
  423254:	mov	w0, w19
  423258:	bl	404020 <exit@plt>
  42325c:	nop
  423260:	stp	x29, x30, [sp, #-32]!
  423264:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  423268:	mov	x29, sp
  42326c:	str	x19, [sp, #16]
  423270:	mov	x19, x0
  423274:	ldr	x0, [x1, #952]
  423278:	cbz	x0, 423280 <wcrtomb@plt+0x1e660>
  42327c:	blr	x0
  423280:	mov	w2, #0x5                   	// #5
  423284:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  423288:	mov	x0, #0x0                   	// #0
  42328c:	add	x1, x1, #0xb78
  423290:	bl	4049c0 <dcgettext@plt>
  423294:	mov	x2, x0
  423298:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42329c:	mov	x4, x19
  4232a0:	mov	w1, #0x0                   	// #0
  4232a4:	mov	w0, #0x0                   	// #0
  4232a8:	ldr	x3, [x3, #3088]
  4232ac:	bl	404050 <error@plt>
  4232b0:	mov	w0, #0x2                   	// #2
  4232b4:	bl	423220 <wcrtomb@plt+0x1e600>
  4232b8:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4232bc:	add	x1, x1, #0xbb8
  4232c0:	ldr	x3, [x1, #88]
  4232c4:	cbnz	x3, 4232d0 <wcrtomb@plt+0x1e6b0>
  4232c8:	str	x0, [x1, #88]
  4232cc:	ret
  4232d0:	stp	x29, x30, [sp, #-16]!
  4232d4:	mov	x29, sp
  4232d8:	bl	423260 <wcrtomb@plt+0x1e640>
  4232dc:	nop
  4232e0:	stp	x29, x30, [sp, #-176]!
  4232e4:	mov	x29, sp
  4232e8:	stp	x19, x20, [sp, #16]
  4232ec:	mov	x19, x2
  4232f0:	mov	x20, x3
  4232f4:	ldrb	w4, [x2]
  4232f8:	sub	w4, w4, #0x2e
  4232fc:	and	w4, w4, #0xff
  423300:	cmp	w4, #0x1
  423304:	b.ls	4233e8 <wcrtomb@plt+0x1e7c8>  // b.plast
  423308:	mov	x2, #0x0                   	// #0
  42330c:	stp	x21, x22, [sp, #32]
  423310:	mov	x21, x0
  423314:	mov	x22, x1
  423318:	mov	x0, x3
  42331c:	mov	x1, x19
  423320:	bl	43e6a0 <argp_parse@@Base+0xa7b8>
  423324:	tst	w0, #0xff
  423328:	b.ne	42339c <wcrtomb@plt+0x1e77c>  // b.any
  42332c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423330:	ldr	x0, [x0, #952]
  423334:	cbz	x0, 42333c <wcrtomb@plt+0x1e71c>
  423338:	blr	x0
  42333c:	mov	w2, #0x5                   	// #5
  423340:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  423344:	mov	x0, #0x0                   	// #0
  423348:	add	x1, x1, #0xbc8
  42334c:	bl	4049c0 <dcgettext@plt>
  423350:	mov	x21, x0
  423354:	ldp	x0, x1, [x20]
  423358:	mov	w2, #0x0                   	// #0
  42335c:	bl	418fb0 <wcrtomb@plt+0x14390>
  423360:	mov	x22, x0
  423364:	mov	x0, x19
  423368:	bl	440248 <argp_parse@@Base+0xc360>
  42336c:	mov	x3, x22
  423370:	mov	x4, x0
  423374:	mov	x2, x21
  423378:	mov	w1, #0x0                   	// #0
  42337c:	mov	w0, #0x0                   	// #0
  423380:	bl	404050 <error@plt>
  423384:	ldp	x21, x22, [sp, #32]
  423388:	str	xzr, [x20, #8]
  42338c:	mov	w0, #0x1                   	// #1
  423390:	ldp	x19, x20, [sp, #16]
  423394:	ldp	x29, x30, [sp], #176
  423398:	ret
  42339c:	mov	x0, #0x28                  	// #40
  4233a0:	bl	440f48 <argp_parse@@Base+0xd060>
  4233a4:	mov	x2, x0
  4233a8:	mov	x0, x19
  4233ac:	mov	x19, x2
  4233b0:	ldp	x2, x3, [x20]
  4233b4:	stp	x2, x3, [x19, #8]
  4233b8:	str	x22, [x19, #24]
  4233bc:	bl	441170 <argp_parse@@Base+0xd288>
  4233c0:	mov	x1, x0
  4233c4:	ldr	x2, [x21]
  4233c8:	str	x2, [x19]
  4233cc:	str	x19, [x21]
  4233d0:	mov	w0, #0x0                   	// #0
  4233d4:	str	x1, [x19, #32]
  4233d8:	ldp	x19, x20, [sp, #16]
  4233dc:	ldp	x21, x22, [sp, #32]
  4233e0:	ldp	x29, x30, [sp], #176
  4233e4:	ret
  4233e8:	add	x2, sp, #0x30
  4233ec:	mov	x1, x19
  4233f0:	mov	w0, #0x0                   	// #0
  4233f4:	bl	404b10 <__xstat@plt>
  4233f8:	cbnz	w0, 423418 <wcrtomb@plt+0x1e7f8>
  4233fc:	ldr	x1, [sp, #136]
  423400:	str	x1, [x20]
  423404:	ldr	x1, [sp, #144]
  423408:	str	x1, [x20, #8]
  42340c:	ldp	x19, x20, [sp, #16]
  423410:	ldp	x29, x30, [sp], #176
  423414:	ret
  423418:	mov	x0, x19
  42341c:	stp	x21, x22, [sp, #32]
  423420:	bl	42a278 <wcrtomb@plt+0x25658>
  423424:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423428:	ldr	x0, [x0, #952]
  42342c:	cbz	x0, 423434 <wcrtomb@plt+0x1e814>
  423430:	blr	x0
  423434:	mov	w2, #0x5                   	// #5
  423438:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  42343c:	mov	x0, #0x0                   	// #0
  423440:	add	x1, x1, #0xba8
  423444:	bl	4049c0 <dcgettext@plt>
  423448:	mov	x2, x0
  42344c:	mov	w1, #0x0                   	// #0
  423450:	mov	w0, #0x0                   	// #0
  423454:	bl	404050 <error@plt>
  423458:	mov	w0, #0x2                   	// #2
  42345c:	bl	423220 <wcrtomb@plt+0x1e600>
  423460:	stp	x29, x30, [sp, #-16]!
  423464:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423468:	mov	x29, sp
  42346c:	ldr	x0, [x0, #952]
  423470:	cbz	x0, 423478 <wcrtomb@plt+0x1e858>
  423474:	blr	x0
  423478:	mov	w2, #0x5                   	// #5
  42347c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  423480:	mov	x0, #0x0                   	// #0
  423484:	add	x1, x1, #0xbf8
  423488:	bl	4049c0 <dcgettext@plt>
  42348c:	mov	x2, x0
  423490:	mov	w1, #0x0                   	// #0
  423494:	mov	w0, #0x0                   	// #0
  423498:	bl	404050 <error@plt>
  42349c:	mov	w0, #0x2                   	// #2
  4234a0:	bl	423220 <wcrtomb@plt+0x1e600>
  4234a4:	nop
  4234a8:	stp	x29, x30, [sp, #-32]!
  4234ac:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4234b0:	mov	x29, sp
  4234b4:	stp	x19, x20, [sp, #16]
  4234b8:	mov	x19, x0
  4234bc:	mov	x20, x1
  4234c0:	ldr	x0, [x2, #952]
  4234c4:	cbz	x0, 4234cc <wcrtomb@plt+0x1e8ac>
  4234c8:	blr	x0
  4234cc:	mov	w2, #0x5                   	// #5
  4234d0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  4234d4:	mov	x0, #0x0                   	// #0
  4234d8:	add	x1, x1, #0xc50
  4234dc:	bl	4049c0 <dcgettext@plt>
  4234e0:	mov	x2, x0
  4234e4:	mov	x4, x20
  4234e8:	mov	x3, x19
  4234ec:	mov	w1, #0x0                   	// #0
  4234f0:	mov	w0, #0x0                   	// #0
  4234f4:	bl	404050 <error@plt>
  4234f8:	mov	w0, #0x2                   	// #2
  4234fc:	bl	423220 <wcrtomb@plt+0x1e600>
  423500:	stp	x29, x30, [sp, #-32]!
  423504:	mov	x29, sp
  423508:	stp	x19, x20, [sp, #16]
  42350c:	mov	w19, w0
  423510:	mov	x20, x1
  423514:	mov	w0, #0x9                   	// #9
  423518:	bl	422870 <wcrtomb@plt+0x1dc50>
  42351c:	cbz	x0, 423530 <wcrtomb@plt+0x1e910>
  423520:	ldr	w2, [x0]
  423524:	ldr	w1, [x20]
  423528:	cmp	w1, w2
  42352c:	b.eq	423544 <wcrtomb@plt+0x1e924>  // b.none
  423530:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423534:	str	w19, [x0, #696]
  423538:	ldp	x19, x20, [sp, #16]
  42353c:	ldp	x29, x30, [sp], #32
  423540:	ret
  423544:	cmp	w1, #0x1
  423548:	b.eq	42355c <wcrtomb@plt+0x1e93c>  // b.none
  42354c:	ldr	x1, [x0, #8]
  423550:	ldr	x0, [x20, #8]
  423554:	bl	404710 <strcmp@plt>
  423558:	cbnz	w0, 423530 <wcrtomb@plt+0x1e910>
  42355c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423560:	ldr	w1, [x0, #696]
  423564:	cmp	w1, w19
  423568:	b.eq	423534 <wcrtomb@plt+0x1e914>  // b.none
  42356c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  423570:	add	x0, x0, #0xc70
  423574:	add	x0, x0, #0x110
  423578:	ldr	x1, [x0, w1, uxtw #3]
  42357c:	ldr	x0, [x0, w19, sxtw #3]
  423580:	bl	4234a8 <wcrtomb@plt+0x1e888>
  423584:	nop
  423588:	stp	x29, x30, [sp, #-48]!
  42358c:	mov	x29, sp
  423590:	str	x21, [sp, #32]
  423594:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  423598:	stp	x19, x20, [sp, #16]
  42359c:	mov	x19, x0
  4235a0:	mov	w0, #0x0                   	// #0
  4235a4:	bl	422870 <wcrtomb@plt+0x1dc50>
  4235a8:	ldr	x1, [x21, #848]
  4235ac:	cbz	x1, 4235d0 <wcrtomb@plt+0x1e9b0>
  4235b0:	mov	x20, x0
  4235b4:	mov	x0, x1
  4235b8:	mov	x1, x19
  4235bc:	bl	404710 <strcmp@plt>
  4235c0:	cbz	w0, 4235d0 <wcrtomb@plt+0x1e9b0>
  4235c4:	ldr	w0, [x20]
  4235c8:	cmp	w0, #0x1
  4235cc:	b.eq	4235e4 <wcrtomb@plt+0x1e9c4>  // b.none
  4235d0:	str	x19, [x21, #848]
  4235d4:	ldp	x19, x20, [sp, #16]
  4235d8:	ldr	x21, [sp, #32]
  4235dc:	ldp	x29, x30, [sp], #48
  4235e0:	ret
  4235e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4235e8:	ldr	x0, [x0, #952]
  4235ec:	cbz	x0, 4235f4 <wcrtomb@plt+0x1e9d4>
  4235f0:	blr	x0
  4235f4:	mov	w2, #0x5                   	// #5
  4235f8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  4235fc:	mov	x0, #0x0                   	// #0
  423600:	add	x1, x1, #0xc70
  423604:	bl	4049c0 <dcgettext@plt>
  423608:	mov	x2, x0
  42360c:	mov	w1, #0x0                   	// #0
  423610:	mov	w0, #0x0                   	// #0
  423614:	bl	404050 <error@plt>
  423618:	mov	w0, #0x2                   	// #2
  42361c:	bl	423220 <wcrtomb@plt+0x1e600>
  423620:	stp	x29, x30, [sp, #-32]!
  423624:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x14e10>
  423628:	mov	x29, sp
  42362c:	stp	x19, x20, [sp, #16]
  423630:	mov	x20, x0
  423634:	adrp	x19, 45a000 <_obstack_memory_used@@Base+0x17e10>
  423638:	add	x0, x2, #0xb50
  42363c:	add	x19, x19, #0xc70
  423640:	b	42364c <wcrtomb@plt+0x1ea2c>
  423644:	ldr	x0, [x19, #16]!
  423648:	cbz	x0, 423670 <wcrtomb@plt+0x1ea50>
  42364c:	mov	x1, x20
  423650:	bl	404710 <strcmp@plt>
  423654:	cbnz	w0, 423644 <wcrtomb@plt+0x1ea24>
  423658:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42365c:	ldr	w1, [x19, #8]
  423660:	ldp	x19, x20, [sp, #16]
  423664:	str	w1, [x0, #760]
  423668:	ldp	x29, x30, [sp], #32
  42366c:	ret
  423670:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423674:	ldr	x0, [x0, #952]
  423678:	cbz	x0, 423680 <wcrtomb@plt+0x1ea60>
  42367c:	blr	x0
  423680:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  423684:	add	x1, x1, #0xc90
  423688:	mov	w2, #0x5                   	// #5
  42368c:	mov	x0, #0x0                   	// #0
  423690:	bl	4049c0 <dcgettext@plt>
  423694:	mov	x19, x0
  423698:	mov	x0, x20
  42369c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4236a0:	mov	x2, x19
  4236a4:	mov	x3, x0
  4236a8:	mov	w1, #0x0                   	// #0
  4236ac:	mov	w0, #0x0                   	// #0
  4236b0:	bl	404050 <error@plt>
  4236b4:	mov	w0, #0x2                   	// #2
  4236b8:	bl	423220 <wcrtomb@plt+0x1e600>
  4236bc:	nop
  4236c0:	stp	x29, x30, [sp, #-240]!
  4236c4:	cmp	w0, #0x14f
  4236c8:	mov	x29, sp
  4236cc:	stp	x19, x20, [sp, #16]
  4236d0:	mov	w19, w0
  4236d4:	stp	x25, x26, [sp, #64]
  4236d8:	ldr	x25, [x2, #40]
  4236dc:	b.gt	423720 <wcrtomb@plt+0x1eb00>
  4236e0:	tbnz	w0, #31, 424914 <wcrtomb@plt+0x1fcf4>
  4236e4:	cmp	w0, #0x14f
  4236e8:	b.hi	423708 <wcrtomb@plt+0x1eae8>  // b.pmore
  4236ec:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  4236f0:	mov	x20, x1
  4236f4:	add	x0, x0, #0x9d0
  4236f8:	ldrh	w0, [x0, w19, uxtw #1]
  4236fc:	adr	x1, 423708 <wcrtomb@plt+0x1eae8>
  423700:	add	x0, x1, w0, sxth #2
  423704:	br	x0
  423708:	mov	w19, #0x7                   	// #7
  42370c:	mov	w0, w19
  423710:	ldp	x19, x20, [sp, #16]
  423714:	ldp	x25, x26, [sp, #64]
  423718:	ldp	x29, x30, [sp], #240
  42371c:	ret
  423720:	mov	w0, #0x5                   	// #5
  423724:	movk	w0, #0x100, lsl #16
  423728:	cmp	w19, w0
  42372c:	b.eq	424aec <wcrtomb@plt+0x1fecc>  // b.none
  423730:	mov	w19, #0x7                   	// #7
  423734:	mov	w0, w19
  423738:	ldp	x19, x20, [sp, #16]
  42373c:	ldp	x25, x26, [sp, #64]
  423740:	ldp	x29, x30, [sp], #240
  423744:	ret
  423748:	ldr	x1, [x25]
  42374c:	mov	w0, #0x2                   	// #2
  423750:	bl	422870 <wcrtomb@plt+0x1dc50>
  423754:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  423758:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42375c:	mov	w1, #0x1                   	// #1
  423760:	str	x20, [x2, #776]
  423764:	str	w1, [x0, #916]
  423768:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42376c:	mov	w1, #0x1                   	// #1
  423770:	mov	w19, #0x0                   	// #0
  423774:	strb	w1, [x0, #4073]
  423778:	b	42370c <wcrtomb@plt+0x1eaec>
  42377c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  423780:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423784:	mov	w1, #0x1                   	// #1
  423788:	mov	w19, #0x0                   	// #0
  42378c:	str	x20, [x2, #712]
  423790:	strb	w1, [x0, #20]
  423794:	b	42370c <wcrtomb@plt+0x1eaec>
  423798:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42379c:	mov	w1, #0x1                   	// #1
  4237a0:	mov	w19, #0x0                   	// #0
  4237a4:	strb	w1, [x0, #785]
  4237a8:	b	42370c <wcrtomb@plt+0x1eaec>
  4237ac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4237b0:	ldr	w1, [x0, #804]
  4237b4:	tst	w1, #0xfffffffd
  4237b8:	b.ne	424c5c <wcrtomb@plt+0x2003c>  // b.any
  4237bc:	mov	w1, #0x2                   	// #2
  4237c0:	mov	w19, #0x0                   	// #0
  4237c4:	str	w1, [x0, #804]
  4237c8:	b	42370c <wcrtomb@plt+0x1eaec>
  4237cc:	mov	x0, x20
  4237d0:	bl	41dc00 <wcrtomb@plt+0x18fe0>
  4237d4:	b	42370c <wcrtomb@plt+0x1eaec>
  4237d8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  4237dc:	add	x0, x0, #0xe60
  4237e0:	bl	423620 <wcrtomb@plt+0x1ea00>
  4237e4:	cmp	w19, #0x14e
  4237e8:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4237ec:	mov	w3, #0x1                   	// #1
  4237f0:	mov	x0, x20
  4237f4:	cset	w1, eq  // eq = none
  4237f8:	mov	w19, #0x0                   	// #0
  4237fc:	str	w3, [x2, #600]
  423800:	bl	428fb8 <wcrtomb@plt+0x24398>
  423804:	b	42370c <wcrtomb@plt+0x1eaec>
  423808:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  42380c:	add	x0, x0, #0xe60
  423810:	bl	423620 <wcrtomb@plt+0x1ea00>
  423814:	mov	w19, #0x0                   	// #0
  423818:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42381c:	mov	w1, #0x1                   	// #1
  423820:	str	w1, [x0, #600]
  423824:	b	42370c <wcrtomb@plt+0x1eaec>
  423828:	mov	x0, x20
  42382c:	mov	w19, #0x0                   	// #0
  423830:	bl	427c60 <wcrtomb@plt+0x23040>
  423834:	b	42370c <wcrtomb@plt+0x1eaec>
  423838:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42383c:	mov	w19, #0x0                   	// #0
  423840:	str	x20, [x0, #608]
  423844:	b	42370c <wcrtomb@plt+0x1eaec>
  423848:	ldr	x1, [x25]
  42384c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  423850:	mov	w19, #0x0                   	// #0
  423854:	add	x0, x0, #0x428
  423858:	bl	423588 <wcrtomb@plt+0x1e968>
  42385c:	b	42370c <wcrtomb@plt+0x1eaec>
  423860:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423864:	mov	w1, #0x1                   	// #1
  423868:	mov	w19, #0x0                   	// #0
  42386c:	strb	w1, [x0, #497]
  423870:	b	42370c <wcrtomb@plt+0x1eaec>
  423874:	mov	x0, x20
  423878:	mov	w19, #0x0                   	// #0
  42387c:	bl	426ba8 <wcrtomb@plt+0x21f88>
  423880:	b	42370c <wcrtomb@plt+0x1eaec>
  423884:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423888:	ldr	x1, [x0, #560]
  42388c:	cbnz	x1, 424d58 <wcrtomb@plt+0x20138>
  423890:	str	x20, [x0, #560]
  423894:	mov	w19, #0x0                   	// #0
  423898:	b	42370c <wcrtomb@plt+0x1eaec>
  42389c:	cbz	x20, 4249b0 <wcrtomb@plt+0x1fd90>
  4238a0:	mov	x0, x20
  4238a4:	bl	423148 <wcrtomb@plt+0x1e528>
  4238a8:	mov	w19, #0x0                   	// #0
  4238ac:	adrp	x1, 422000 <wcrtomb@plt+0x1d3e0>
  4238b0:	add	x1, x1, #0x900
  4238b4:	bl	404270 <signal@plt>
  4238b8:	b	42370c <wcrtomb@plt+0x1eaec>
  4238bc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4238c0:	ldr	w1, [x0, #804]
  4238c4:	cmp	w1, #0x0
  4238c8:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  4238cc:	b.ne	424c5c <wcrtomb@plt+0x2003c>  // b.any
  4238d0:	mov	w1, #0x9                   	// #9
  4238d4:	mov	w19, #0x0                   	// #0
  4238d8:	str	w1, [x0, #804]
  4238dc:	b	42370c <wcrtomb@plt+0x1eaec>
  4238e0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4238e4:	adrp	x19, 45a000 <_obstack_memory_used@@Base+0x17e10>
  4238e8:	add	x19, x19, #0xc70
  4238ec:	mov	x1, x20
  4238f0:	ldr	x5, [x0, #920]
  4238f4:	add	x3, x19, #0x148
  4238f8:	add	x2, x19, #0x150
  4238fc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  423900:	mov	x4, #0x4                   	// #4
  423904:	add	x0, x0, #0xd58
  423908:	bl	430500 <wcrtomb@plt+0x2b8e0>
  42390c:	add	x0, x19, x0, lsl #2
  423910:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  423914:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  423918:	mov	w3, #0x1                   	// #1
  42391c:	mov	w19, #0x0                   	// #0
  423920:	ldr	w0, [x0, #328]
  423924:	strb	w3, [x2, #856]
  423928:	str	w0, [x1, #860]
  42392c:	b	42370c <wcrtomb@plt+0x1eaec>
  423930:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  423934:	stp	x21, x22, [sp, #32]
  423938:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3de10>
  42393c:	ldr	x5, [x0, #920]
  423940:	add	x21, x21, #0x170
  423944:	add	x21, x21, #0x38
  423948:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x17e10>
  42394c:	add	x2, x2, #0xc70
  423950:	mov	x1, x20
  423954:	mov	x3, x21
  423958:	add	x2, x2, #0x188
  42395c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  423960:	mov	x4, #0x4                   	// #4
  423964:	add	x0, x0, #0xec8
  423968:	bl	430500 <wcrtomb@plt+0x2b8e0>
  42396c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  423970:	ldr	w0, [x21, x0, lsl #2]
  423974:	mov	w19, #0x0                   	// #0
  423978:	str	w0, [x1, #464]
  42397c:	ldp	x21, x22, [sp, #32]
  423980:	b	42370c <wcrtomb@plt+0x1eaec>
  423984:	ldr	x1, [x25]
  423988:	mov	w0, #0x5                   	// #5
  42398c:	mov	w19, #0x0                   	// #0
  423990:	bl	423500 <wcrtomb@plt+0x1e8e0>
  423994:	b	42370c <wcrtomb@plt+0x1eaec>
  423998:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42399c:	mov	w1, #0x1                   	// #1
  4239a0:	mov	w19, #0x0                   	// #0
  4239a4:	strb	w1, [x0, #784]
  4239a8:	b	42370c <wcrtomb@plt+0x1eaec>
  4239ac:	stp	x21, x22, [sp, #32]
  4239b0:	stp	x23, x24, [sp, #48]
  4239b4:	str	x27, [sp, #80]
  4239b8:	str	d8, [sp, #88]
  4239bc:	bl	416690 <wcrtomb@plt+0x11a70>
  4239c0:	bl	435340 <argp_parse@@Base+0x1458>
  4239c4:	mov	w0, #0x0                   	// #0
  4239c8:	bl	404020 <exit@plt>
  4239cc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4239d0:	mov	w1, #0x1                   	// #1
  4239d4:	mov	w19, #0x0                   	// #0
  4239d8:	strb	w1, [x0, #642]
  4239dc:	b	42370c <wcrtomb@plt+0x1eaec>
  4239e0:	stp	x21, x22, [sp, #32]
  4239e4:	stp	x23, x24, [sp, #48]
  4239e8:	str	x27, [sp, #80]
  4239ec:	str	d8, [sp, #88]
  4239f0:	bl	422810 <wcrtomb@plt+0x1dbf0>
  4239f4:	mov	x19, x0
  4239f8:	bl	4046b0 <puts@plt>
  4239fc:	bl	435340 <argp_parse@@Base+0x1458>
  423a00:	mov	x0, x19
  423a04:	bl	4047b0 <free@plt>
  423a08:	mov	w0, #0x0                   	// #0
  423a0c:	bl	404020 <exit@plt>
  423a10:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  423a14:	add	x0, x0, #0xe60
  423a18:	bl	423620 <wcrtomb@plt+0x1ea00>
  423a1c:	mov	w19, #0x0                   	// #0
  423a20:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423a24:	mov	w1, #0x1                   	// #1
  423a28:	str	w1, [x0, #928]
  423a2c:	b	42370c <wcrtomb@plt+0x1eaec>
  423a30:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  423a34:	add	x3, sp, #0x98
  423a38:	add	x4, x4, #0x948
  423a3c:	mov	x0, x20
  423a40:	mov	w2, #0xa                   	// #10
  423a44:	mov	x1, #0x0                   	// #0
  423a48:	bl	441208 <argp_parse@@Base+0xd320>
  423a4c:	cbnz	w0, 424d88 <wcrtomb@plt+0x20168>
  423a50:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423a54:	mov	w19, #0x0                   	// #0
  423a58:	ldr	x1, [sp, #152]
  423a5c:	str	x1, [x0, #824]
  423a60:	b	42370c <wcrtomb@plt+0x1eaec>
  423a64:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  423a68:	mov	w3, #0x1                   	// #1
  423a6c:	add	x1, sp, #0x98
  423a70:	mov	x0, x20
  423a74:	strb	w3, [x2, #856]
  423a78:	mov	w2, #0xa                   	// #10
  423a7c:	bl	403fe0 <strtoul@plt>
  423a80:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  423a84:	ldr	x2, [sp, #152]
  423a88:	str	w0, [x1, #552]
  423a8c:	ldrb	w0, [x2]
  423a90:	cbz	w0, 423ac0 <wcrtomb@plt+0x1eea0>
  423a94:	cmp	w0, #0x2e
  423a98:	b.ne	424dc0 <wcrtomb@plt+0x201a0>  // b.any
  423a9c:	add	x1, sp, #0x98
  423aa0:	add	x0, x2, #0x1
  423aa4:	mov	w2, #0xa                   	// #10
  423aa8:	bl	403fe0 <strtoul@plt>
  423aac:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  423ab0:	ldr	x1, [sp, #152]
  423ab4:	str	w0, [x2, #32]
  423ab8:	ldrb	w0, [x1]
  423abc:	cbnz	w0, 424dc0 <wcrtomb@plt+0x201a0>
  423ac0:	mov	w19, #0x0                   	// #0
  423ac4:	b	42370c <wcrtomb@plt+0x1eaec>
  423ac8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423acc:	mov	w1, #0x1                   	// #1
  423ad0:	mov	w19, #0x0                   	// #0
  423ad4:	str	x20, [x25, #24]
  423ad8:	strb	w1, [x0, #701]
  423adc:	b	42370c <wcrtomb@plt+0x1eaec>
  423ae0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423ae4:	mov	w1, #0x1                   	// #1
  423ae8:	mov	w19, #0x0                   	// #0
  423aec:	str	w1, [x0, #924]
  423af0:	b	42370c <wcrtomb@plt+0x1eaec>
  423af4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423af8:	mov	w19, #0x0                   	// #0
  423afc:	str	x20, [x0, #752]
  423b00:	b	42370c <wcrtomb@plt+0x1eaec>
  423b04:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  423b08:	mov	w19, #0x0                   	// #0
  423b0c:	str	x20, [x0, #600]
  423b10:	b	42370c <wcrtomb@plt+0x1eaec>
  423b14:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423b18:	mov	w1, #0x1                   	// #1
  423b1c:	mov	w19, #0x0                   	// #0
  423b20:	strb	w1, [x0, #720]
  423b24:	b	42370c <wcrtomb@plt+0x1eaec>
  423b28:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423b2c:	mov	w1, #0x1                   	// #1
  423b30:	mov	w19, #0x0                   	// #0
  423b34:	strb	w1, [x0, #688]
  423b38:	b	42370c <wcrtomb@plt+0x1eaec>
  423b3c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  423b40:	mov	w1, #0x1                   	// #1
  423b44:	mov	w19, #0x0                   	// #0
  423b48:	strb	w1, [x0, #4074]
  423b4c:	b	42370c <wcrtomb@plt+0x1eaec>
  423b50:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x14e10>
  423b54:	add	x3, sp, #0x98
  423b58:	add	x4, x4, #0xce8
  423b5c:	mov	x0, x20
  423b60:	mov	w2, #0xa                   	// #10
  423b64:	mov	x1, #0x0                   	// #0
  423b68:	bl	441208 <argp_parse@@Base+0xd320>
  423b6c:	cbnz	w0, 424d20 <wcrtomb@plt+0x20100>
  423b70:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  423b74:	ldr	x0, [sp, #152]
  423b78:	str	x0, [x1, #864]
  423b7c:	tst	x0, #0x1ff
  423b80:	b.ne	424cd0 <wcrtomb@plt+0x200b0>  // b.any
  423b84:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  423b88:	lsr	x0, x0, #9
  423b8c:	mov	w19, #0x0                   	// #0
  423b90:	str	w0, [x1, #692]
  423b94:	b	42370c <wcrtomb@plt+0x1eaec>
  423b98:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  423b9c:	stp	x21, x22, [sp, #32]
  423ba0:	add	x22, x0, #0xda0
  423ba4:	ldr	x1, [x0, #3488]
  423ba8:	mov	x21, #0x0                   	// #0
  423bac:	cbnz	x1, 423bc0 <wcrtomb@plt+0x1efa0>
  423bb0:	b	424b4c <wcrtomb@plt+0x1ff2c>
  423bb4:	add	x21, x21, #0x1
  423bb8:	ldr	x1, [x22, x21, lsl #3]
  423bbc:	cbz	x1, 424b4c <wcrtomb@plt+0x1ff2c>
  423bc0:	mov	x0, x20
  423bc4:	bl	404710 <strcmp@plt>
  423bc8:	mov	w19, w0
  423bcc:	cbnz	w0, 423bb4 <wcrtomb@plt+0x1ef94>
  423bd0:	mov	w1, w21
  423bd4:	mov	x0, #0x0                   	// #0
  423bd8:	bl	43fc08 <argp_parse@@Base+0xbd20>
  423bdc:	ldp	x21, x22, [sp, #32]
  423be0:	b	42370c <wcrtomb@plt+0x1eaec>
  423be4:	ldrb	w1, [x20]
  423be8:	cbz	w1, 423c04 <wcrtomb@plt+0x1efe4>
  423bec:	nop
  423bf0:	mov	w2, #0x1                   	// #1
  423bf4:	mov	x0, #0x0                   	// #0
  423bf8:	bl	43fc28 <argp_parse@@Base+0xbd40>
  423bfc:	ldrb	w1, [x20, #1]!
  423c00:	cbnz	w1, 423bf0 <wcrtomb@plt+0x1efd0>
  423c04:	mov	w19, #0x0                   	// #0
  423c08:	b	42370c <wcrtomb@plt+0x1eaec>
  423c0c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  423c10:	mov	w19, #0x0                   	// #0
  423c14:	add	x0, x0, #0xe60
  423c18:	bl	423620 <wcrtomb@plt+0x1ea00>
  423c1c:	b	42370c <wcrtomb@plt+0x1eaec>
  423c20:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423c24:	mov	w1, #0x1                   	// #1
  423c28:	mov	w19, #0x0                   	// #0
  423c2c:	strb	w1, [x0, #29]
  423c30:	b	42370c <wcrtomb@plt+0x1eaec>
  423c34:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  423c38:	mov	w19, #0x0                   	// #0
  423c3c:	add	x0, x0, #0xb50
  423c40:	bl	423620 <wcrtomb@plt+0x1ea00>
  423c44:	b	42370c <wcrtomb@plt+0x1eaec>
  423c48:	ldr	x1, [x25]
  423c4c:	mov	w0, #0x1                   	// #1
  423c50:	bl	422870 <wcrtomb@plt+0x1dc50>
  423c54:	cbz	x20, 42499c <wcrtomb@plt+0x1fd7c>
  423c58:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  423c5c:	add	x3, sp, #0x98
  423c60:	add	x4, x4, #0x948
  423c64:	mov	x0, x20
  423c68:	mov	w2, #0xa                   	// #10
  423c6c:	mov	x1, #0x0                   	// #0
  423c70:	bl	441208 <argp_parse@@Base+0xd320>
  423c74:	cbnz	w0, 424bfc <wcrtomb@plt+0x1ffdc>
  423c78:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423c7c:	mov	w19, #0x0                   	// #0
  423c80:	ldr	x1, [sp, #152]
  423c84:	str	x1, [x0, #704]
  423c88:	b	42370c <wcrtomb@plt+0x1eaec>
  423c8c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423c90:	mov	w1, #0x1                   	// #1
  423c94:	mov	w19, #0x0                   	// #0
  423c98:	strb	w1, [x0, #616]
  423c9c:	b	42370c <wcrtomb@plt+0x1eaec>
  423ca0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423ca4:	mov	w1, #0xffffffff            	// #-1
  423ca8:	mov	w19, #0x0                   	// #0
  423cac:	str	w1, [x0, #600]
  423cb0:	b	42370c <wcrtomb@plt+0x1eaec>
  423cb4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423cb8:	mov	w1, #0xffffffff            	// #-1
  423cbc:	mov	w19, #0x0                   	// #0
  423cc0:	str	w1, [x0, #928]
  423cc4:	b	42370c <wcrtomb@plt+0x1eaec>
  423cc8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423ccc:	mov	w19, #0x0                   	// #0
  423cd0:	str	wzr, [x0, #16]
  423cd4:	b	42370c <wcrtomb@plt+0x1eaec>
  423cd8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423cdc:	mov	w1, #0xffffffff            	// #-1
  423ce0:	mov	w19, #0x0                   	// #0
  423ce4:	str	w1, [x0, #556]
  423ce8:	b	42370c <wcrtomb@plt+0x1eaec>
  423cec:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423cf0:	mov	w1, #0xffffffff            	// #-1
  423cf4:	mov	w19, #0x0                   	// #0
  423cf8:	str	w1, [x0, #924]
  423cfc:	b	42370c <wcrtomb@plt+0x1eaec>
  423d00:	ldrb	w1, [x20]
  423d04:	cbz	w1, 423c04 <wcrtomb@plt+0x1efe4>
  423d08:	mov	w2, #0x0                   	// #0
  423d0c:	mov	x0, #0x0                   	// #0
  423d10:	bl	43fc28 <argp_parse@@Base+0xbd40>
  423d14:	ldrb	w1, [x20, #1]!
  423d18:	cbnz	w1, 423d08 <wcrtomb@plt+0x1f0e8>
  423d1c:	mov	w19, #0x0                   	// #0
  423d20:	b	42370c <wcrtomb@plt+0x1eaec>
  423d24:	ldr	x1, [x25]
  423d28:	mov	w0, #0x1                   	// #1
  423d2c:	mov	w19, #0x0                   	// #0
  423d30:	bl	423500 <wcrtomb@plt+0x1e8e0>
  423d34:	b	42370c <wcrtomb@plt+0x1eaec>
  423d38:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423d3c:	mov	w19, #0x0                   	// #0
  423d40:	strb	wzr, [x0, #521]
  423d44:	b	42370c <wcrtomb@plt+0x1eaec>
  423d48:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423d4c:	mov	w19, #0x0                   	// #0
  423d50:	strb	wzr, [x0, #912]
  423d54:	b	42370c <wcrtomb@plt+0x1eaec>
  423d58:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  423d5c:	mov	w19, #0x0                   	// #0
  423d60:	strb	wzr, [x0, #4072]
  423d64:	b	42370c <wcrtomb@plt+0x1eaec>
  423d68:	mov	w19, #0x0                   	// #0
  423d6c:	str	wzr, [x25, #40]
  423d70:	b	42370c <wcrtomb@plt+0x1eaec>
  423d74:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423d78:	mov	w1, #0xffffffff            	// #-1
  423d7c:	mov	w19, #0x0                   	// #0
  423d80:	str	w1, [x0, #840]
  423d84:	b	42370c <wcrtomb@plt+0x1eaec>
  423d88:	mov	x0, x20
  423d8c:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  423d90:	add	x1, x19, #0x210
  423d94:	bl	422930 <wcrtomb@plt+0x1dd10>
  423d98:	cmn	x0, #0x1
  423d9c:	b.eq	4249e8 <wcrtomb@plt+0x1fdc8>  // b.none
  423da0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  423da4:	mov	w19, #0x0                   	// #0
  423da8:	str	w0, [x1, #728]
  423dac:	b	42370c <wcrtomb@plt+0x1eaec>
  423db0:	ldr	x1, [x25]
  423db4:	mov	w0, #0x2                   	// #2
  423db8:	mov	w19, #0x0                   	// #0
  423dbc:	bl	423500 <wcrtomb@plt+0x1e8e0>
  423dc0:	b	42370c <wcrtomb@plt+0x1eaec>
  423dc4:	ldr	x1, [x25]
  423dc8:	mov	w0, #0x0                   	// #0
  423dcc:	mov	w19, #0x0                   	// #0
  423dd0:	bl	423500 <wcrtomb@plt+0x1e8e0>
  423dd4:	b	42370c <wcrtomb@plt+0x1eaec>
  423dd8:	ldr	x1, [x25]
  423ddc:	mov	w0, #0x7                   	// #7
  423de0:	mov	w19, #0x0                   	// #0
  423de4:	bl	422870 <wcrtomb@plt+0x1dc50>
  423de8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  423dec:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423df0:	mov	w2, #0x1                   	// #1
  423df4:	str	x20, [x0, #512]
  423df8:	strb	w2, [x1, #787]
  423dfc:	b	42370c <wcrtomb@plt+0x1eaec>
  423e00:	adrp	x4, 404000 <fputs@plt>
  423e04:	adrp	x3, 440000 <argp_parse@@Base+0xc118>
  423e08:	add	x0, sp, #0x98
  423e0c:	add	x4, x4, #0x7b0
  423e10:	add	x3, x3, #0xf48
  423e14:	mov	x2, #0x0                   	// #0
  423e18:	mov	x1, #0x0                   	// #0
  423e1c:	stp	x21, x22, [sp, #32]
  423e20:	stp	x23, x24, [sp, #48]
  423e24:	adrp	x23, 454000 <_obstack_memory_used@@Base+0x11e10>
  423e28:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x14e10>
  423e2c:	add	x23, x23, #0x5f8
  423e30:	add	x24, x24, #0xe50
  423e34:	str	x27, [sp, #80]
  423e38:	bl	441fe0 <_obstack_begin@@Base>
  423e3c:	ldrb	w0, [x20]
  423e40:	ldp	x19, x22, [sp, #176]
  423e44:	cbz	w0, 423ea8 <wcrtomb@plt+0x1f288>
  423e48:	mov	x1, x23
  423e4c:	mov	x0, x20
  423e50:	bl	404a90 <strcspn@plt>
  423e54:	sub	x22, x22, x19
  423e58:	mov	x2, x0
  423e5c:	mov	x27, x0
  423e60:	mov	w1, #0x3d                  	// #61
  423e64:	mov	x0, x20
  423e68:	bl	404960 <memchr@plt>
  423e6c:	mov	x21, x0
  423e70:	cbnz	x0, 424810 <wcrtomb@plt+0x1fbf0>
  423e74:	cmp	x27, x22
  423e78:	b.hi	4248b8 <wcrtomb@plt+0x1fc98>  // b.pmore
  423e7c:	mov	x0, x19
  423e80:	mov	x2, x27
  423e84:	mov	x1, x20
  423e88:	bl	403f70 <memcpy@plt>
  423e8c:	ldr	x19, [sp, #176]
  423e90:	add	x19, x19, x27
  423e94:	str	x19, [sp, #176]
  423e98:	ldrb	w0, [x20, x27]
  423e9c:	add	x20, x20, x27
  423ea0:	cbnz	w0, 4248f4 <wcrtomb@plt+0x1fcd4>
  423ea4:	ldr	x22, [sp, #184]
  423ea8:	cmp	x22, x19
  423eac:	b.eq	424aac <wcrtomb@plt+0x1fe8c>  // b.none
  423eb0:	add	x0, x19, #0x1
  423eb4:	str	x0, [sp, #176]
  423eb8:	strb	wzr, [x19]
  423ebc:	ldp	x0, x3, [sp, #168]
  423ec0:	cmp	x0, x3
  423ec4:	b.eq	424a0c <wcrtomb@plt+0x1fdec>  // b.none
  423ec8:	ldr	x1, [sp, #200]
  423ecc:	ldr	x2, [sp, #160]
  423ed0:	add	x3, x3, x1
  423ed4:	ldr	x4, [sp, #184]
  423ed8:	bic	x1, x3, x1
  423edc:	str	x1, [sp, #176]
  423ee0:	sub	x3, x1, x2
  423ee4:	sub	x2, x4, x2
  423ee8:	cmp	x3, x2
  423eec:	b.ls	423ef8 <wcrtomb@plt+0x1f2d8>  // b.plast
  423ef0:	mov	x1, x4
  423ef4:	str	x4, [sp, #176]
  423ef8:	str	x1, [sp, #168]
  423efc:	bl	441170 <argp_parse@@Base+0xd288>
  423f00:	mov	x1, #0x0                   	// #0
  423f04:	mov	x20, x0
  423f08:	add	x0, sp, #0x98
  423f0c:	bl	442160 <_obstack_free@@Base>
  423f10:	mov	w0, #0x1                   	// #1
  423f14:	strb	w0, [x25, #17]
  423f18:	mov	x0, x20
  423f1c:	mov	w19, #0x0                   	// #0
  423f20:	bl	413350 <wcrtomb@plt+0xe730>
  423f24:	mov	x0, x20
  423f28:	bl	4047b0 <free@plt>
  423f2c:	ldp	x21, x22, [sp, #32]
  423f30:	ldp	x23, x24, [sp, #48]
  423f34:	ldr	x27, [sp, #80]
  423f38:	b	42370c <wcrtomb@plt+0x1eaec>
  423f3c:	mov	x0, x20
  423f40:	mov	w19, #0x0                   	// #0
  423f44:	bl	41a858 <wcrtomb@plt+0x15c38>
  423f48:	b	42370c <wcrtomb@plt+0x1eaec>
  423f4c:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  423f50:	add	x3, x3, #0xff0
  423f54:	ldr	x0, [x3, #8]
  423f58:	tbz	x0, #63, 424c70 <wcrtomb@plt+0x20050>
  423f5c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  423f60:	add	x1, x1, #0xcc0
  423f64:	mov	x2, x20
  423f68:	add	x0, x25, #0x8
  423f6c:	bl	4232e0 <wcrtomb@plt+0x1e6c0>
  423f70:	mov	w19, #0x0                   	// #0
  423f74:	ldr	x1, [x25]
  423f78:	mov	w0, #0x3                   	// #3
  423f7c:	bl	422870 <wcrtomb@plt+0x1dc50>
  423f80:	b	42370c <wcrtomb@plt+0x1eaec>
  423f84:	mov	x2, x20
  423f88:	add	x0, x25, #0x8
  423f8c:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  423f90:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  423f94:	add	x3, x3, #0x2e0
  423f98:	add	x1, x1, #0xd30
  423f9c:	bl	4232e0 <wcrtomb@plt+0x1e6c0>
  423fa0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  423fa4:	ldr	w1, [x0]
  423fa8:	cbnz	w1, 423c04 <wcrtomb@plt+0x1efe4>
  423fac:	mov	w1, #0x1                   	// #1
  423fb0:	mov	w19, #0x0                   	// #0
  423fb4:	str	w1, [x0]
  423fb8:	b	42370c <wcrtomb@plt+0x1eaec>
  423fbc:	mov	x0, x20
  423fc0:	bl	43a020 <argp_parse@@Base+0x6138>
  423fc4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  423fc8:	str	x0, [x1, #544]
  423fcc:	cbz	x0, 424ca0 <wcrtomb@plt+0x20080>
  423fd0:	mov	w0, #0x0                   	// #0
  423fd4:	bl	404a80 <umask@plt>
  423fd8:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  423fdc:	mov	w19, #0x0                   	// #0
  423fe0:	str	w0, [x1, #24]
  423fe4:	bl	404a80 <umask@plt>
  423fe8:	b	42370c <wcrtomb@plt+0x1eaec>
  423fec:	ldr	x1, [x25]
  423ff0:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  423ff4:	mov	w19, #0x0                   	// #0
  423ff8:	add	x0, x0, #0x418
  423ffc:	bl	423588 <wcrtomb@plt+0x1e968>
  424000:	b	42370c <wcrtomb@plt+0x1eaec>
  424004:	ldr	x1, [x25]
  424008:	mov	w0, #0x6                   	// #6
  42400c:	mov	w19, #0x0                   	// #0
  424010:	bl	422870 <wcrtomb@plt+0x1dc50>
  424014:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424018:	mov	w1, #0x1                   	// #1
  42401c:	strb	w1, [x0, #584]
  424020:	b	42370c <wcrtomb@plt+0x1eaec>
  424024:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424028:	ldr	w1, [x0, #804]
  42402c:	cmp	w1, #0x1
  424030:	b.hi	424c5c <wcrtomb@plt+0x2003c>  // b.pmore
  424034:	mov	w1, #0x1                   	// #1
  424038:	mov	w19, #0x0                   	// #0
  42403c:	str	w1, [x0, #804]
  424040:	b	42370c <wcrtomb@plt+0x1eaec>
  424044:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424048:	mov	w1, #0x1                   	// #1
  42404c:	mov	w19, #0x0                   	// #0
  424050:	str	w1, [x0, #556]
  424054:	b	42370c <wcrtomb@plt+0x1eaec>
  424058:	mov	w0, #0x1                   	// #1
  42405c:	mov	w19, #0x0                   	// #0
  424060:	strb	w0, [x25, #16]
  424064:	b	42370c <wcrtomb@plt+0x1eaec>
  424068:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42406c:	mov	w1, #0x1                   	// #1
  424070:	mov	w19, #0x0                   	// #0
  424074:	str	w1, [x0, #16]
  424078:	b	42370c <wcrtomb@plt+0x1eaec>
  42407c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424080:	mov	w1, #0x1                   	// #1
  424084:	mov	w19, #0x0                   	// #0
  424088:	strb	w1, [x0, #496]
  42408c:	b	42370c <wcrtomb@plt+0x1eaec>
  424090:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  424094:	mov	w1, #0x1                   	// #1
  424098:	mov	w19, #0x0                   	// #0
  42409c:	str	w1, [x0, #3112]
  4240a0:	b	42370c <wcrtomb@plt+0x1eaec>
  4240a4:	ldr	x1, [x25]
  4240a8:	mov	w0, #0x4                   	// #4
  4240ac:	mov	w19, #0x0                   	// #0
  4240b0:	bl	423500 <wcrtomb@plt+0x1e8e0>
  4240b4:	b	42370c <wcrtomb@plt+0x1eaec>
  4240b8:	ldr	x1, [x25]
  4240bc:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  4240c0:	mov	w19, #0x0                   	// #0
  4240c4:	add	x0, x0, #0x3d0
  4240c8:	bl	423588 <wcrtomb@plt+0x1e968>
  4240cc:	b	42370c <wcrtomb@plt+0x1eaec>
  4240d0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4240d4:	mov	w1, #0x1                   	// #1
  4240d8:	mov	w19, #0x0                   	// #0
  4240dc:	strb	w1, [x0, #21]
  4240e0:	b	42370c <wcrtomb@plt+0x1eaec>
  4240e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4240e8:	mov	w1, #0x1                   	// #1
  4240ec:	mov	w19, #0x0                   	// #0
  4240f0:	strb	w1, [x0, #520]
  4240f4:	b	42370c <wcrtomb@plt+0x1eaec>
  4240f8:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4240fc:	add	x2, x2, #0xbb8
  424100:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  424104:	stp	x21, x22, [sp, #32]
  424108:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  42410c:	ldr	x1, [x19, #792]
  424110:	ldr	x3, [x2, #104]
  424114:	ldr	x0, [x21, #632]
  424118:	cmp	x1, x3
  42411c:	b.eq	424a30 <wcrtomb@plt+0x1fe10>  // b.none
  424120:	add	x2, x1, #0x1
  424124:	str	x2, [x19, #792]
  424128:	mov	w19, #0x0                   	// #0
  42412c:	str	x20, [x0, x1, lsl #3]
  424130:	ldp	x21, x22, [sp, #32]
  424134:	b	42370c <wcrtomb@plt+0x1eaec>
  424138:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42413c:	ldr	w1, [x0, #804]
  424140:	cmp	w1, #0x0
  424144:	ccmp	w1, #0x5, #0x4, ne  // ne = any
  424148:	b.ne	424c5c <wcrtomb@plt+0x2003c>  // b.any
  42414c:	mov	w1, #0x5                   	// #5
  424150:	mov	w19, #0x0                   	// #0
  424154:	str	w1, [x0, #804]
  424158:	b	42370c <wcrtomb@plt+0x1eaec>
  42415c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424160:	ldr	w1, [x0, #804]
  424164:	cmp	w1, #0x0
  424168:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  42416c:	b.ne	424c5c <wcrtomb@plt+0x2003c>  // b.any
  424170:	mov	w1, #0x3                   	// #3
  424174:	mov	w19, #0x0                   	// #0
  424178:	str	w1, [x0, #804]
  42417c:	b	42370c <wcrtomb@plt+0x1eaec>
  424180:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  424184:	add	x3, sp, #0x98
  424188:	add	x4, x4, #0x948
  42418c:	mov	x0, x20
  424190:	mov	w2, #0xa                   	// #10
  424194:	mov	x1, #0x0                   	// #0
  424198:	bl	441208 <argp_parse@@Base+0xd320>
  42419c:	cbnz	w0, 4241d4 <wcrtomb@plt+0x1f5b4>
  4241a0:	ldr	x0, [sp, #152]
  4241a4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4241a8:	str	w0, [x1, #692]
  4241ac:	cmp	w0, #0x0
  4241b0:	sxtw	x1, w0
  4241b4:	ccmp	x1, x0, #0x0, gt
  4241b8:	b.ne	4241d4 <wcrtomb@plt+0x1f5b4>  // b.any
  4241bc:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4241c0:	lsl	x1, x0, #9
  4241c4:	mov	w19, #0x0                   	// #0
  4241c8:	str	x1, [x2, #864]
  4241cc:	cmp	x0, x1, lsr #9
  4241d0:	b.eq	42370c <wcrtomb@plt+0x1eaec>  // b.none
  4241d4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4241d8:	stp	x21, x22, [sp, #32]
  4241dc:	ldr	x0, [x0, #952]
  4241e0:	stp	x23, x24, [sp, #48]
  4241e4:	str	x27, [sp, #80]
  4241e8:	str	d8, [sp, #88]
  4241ec:	cbz	x0, 4241f4 <wcrtomb@plt+0x1f5d4>
  4241f0:	blr	x0
  4241f4:	mov	x0, x20
  4241f8:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4241fc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424200:	mov	x19, x0
  424204:	add	x1, x1, #0xcd0
  424208:	mov	w2, #0x5                   	// #5
  42420c:	mov	x0, #0x0                   	// #0
  424210:	bl	4049c0 <dcgettext@plt>
  424214:	mov	x4, x0
  424218:	mov	x3, x19
  42421c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  424220:	add	x2, x2, #0x9e8
  424224:	mov	w1, #0x0                   	// #0
  424228:	mov	w0, #0x0                   	// #0
  42422c:	bl	404050 <error@plt>
  424230:	mov	w0, #0x2                   	// #2
  424234:	bl	423220 <wcrtomb@plt+0x1e600>
  424238:	mov	w0, #0x1                   	// #1
  42423c:	mov	w19, #0x0                   	// #0
  424240:	str	w0, [x25, #40]
  424244:	b	42370c <wcrtomb@plt+0x1eaec>
  424248:	ldr	x1, [x25]
  42424c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x16e10>
  424250:	mov	w19, #0x0                   	// #0
  424254:	add	x0, x0, #0xf28
  424258:	bl	423588 <wcrtomb@plt+0x1e968>
  42425c:	b	42370c <wcrtomb@plt+0x1eaec>
  424260:	ldr	x1, [x25]
  424264:	mov	w0, #0x4                   	// #4
  424268:	mov	w19, #0x0                   	// #0
  42426c:	bl	422870 <wcrtomb@plt+0x1dc50>
  424270:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424274:	mov	w1, #0x1                   	// #1
  424278:	strb	w1, [x0, #786]
  42427c:	b	42370c <wcrtomb@plt+0x1eaec>
  424280:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424284:	mov	w19, #0x0                   	// #0
  424288:	str	x20, [x0, #592]
  42428c:	b	42370c <wcrtomb@plt+0x1eaec>
  424290:	ldr	x1, [x25]
  424294:	mov	w0, #0x3                   	// #3
  424298:	mov	w19, #0x0                   	// #0
  42429c:	bl	423500 <wcrtomb@plt+0x1e8e0>
  4242a0:	b	42370c <wcrtomb@plt+0x1eaec>
  4242a4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4242a8:	mov	w1, #0x1                   	// #1
  4242ac:	mov	w19, #0x0                   	// #0
  4242b0:	strb	w1, [x0, #856]
  4242b4:	b	42370c <wcrtomb@plt+0x1eaec>
  4242b8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4242bc:	mov	w1, #0x1                   	// #1
  4242c0:	mov	w19, #0x0                   	// #0
  4242c4:	strb	w1, [x0, #617]
  4242c8:	b	42370c <wcrtomb@plt+0x1eaec>
  4242cc:	ldr	x1, [x25]
  4242d0:	mov	w0, #0x8                   	// #8
  4242d4:	mov	w19, #0x0                   	// #0
  4242d8:	bl	422870 <wcrtomb@plt+0x1dc50>
  4242dc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4242e0:	mov	w1, #0x1                   	// #1
  4242e4:	strb	w1, [x0, #896]
  4242e8:	b	42370c <wcrtomb@plt+0x1eaec>
  4242ec:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4242f0:	mov	w1, #0x1                   	// #1
  4242f4:	mov	w19, #0x0                   	// #0
  4242f8:	strb	w1, [x0, #569]
  4242fc:	b	42370c <wcrtomb@plt+0x1eaec>
  424300:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  424304:	add	x3, x3, #0xff0
  424308:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  42430c:	mov	w2, #0x1                   	// #1
  424310:	ldr	x0, [x3, #8]
  424314:	str	w2, [x1, #916]
  424318:	tbz	x0, #63, 424c70 <wcrtomb@plt+0x20050>
  42431c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424320:	add	x1, x1, #0xcb0
  424324:	b	423f64 <wcrtomb@plt+0x1f344>
  424328:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42432c:	mov	w1, #0x1                   	// #1
  424330:	mov	w19, #0x0                   	// #0
  424334:	strb	w1, [x0, #20]
  424338:	b	42370c <wcrtomb@plt+0x1eaec>
  42433c:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x14e10>
  424340:	add	x19, x19, #0xce8
  424344:	mov	x4, x19
  424348:	add	x3, sp, #0x78
  42434c:	add	x1, sp, #0x98
  424350:	mov	x0, x20
  424354:	mov	w2, #0xa                   	// #10
  424358:	bl	441208 <argp_parse@@Base+0xd320>
  42435c:	cbnz	w0, 424df0 <wcrtomb@plt+0x201d0>
  424360:	ldr	x0, [sp, #152]
  424364:	str	d8, [sp, #88]
  424368:	ldr	d8, [sp, #120]
  42436c:	cmp	x0, x20
  424370:	b.ls	424384 <wcrtomb@plt+0x1f764>  // b.plast
  424374:	ldurb	w1, [x0, #-1]
  424378:	mov	x0, x19
  42437c:	bl	404870 <strchr@plt>
  424380:	cbz	x0, 4247fc <wcrtomb@plt+0x1fbdc>
  424384:	ucvtf	d0, d8
  424388:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  42438c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424390:	mov	w1, #0x1                   	// #1
  424394:	mov	w19, #0x0                   	// #0
  424398:	strb	w1, [x0, #20]
  42439c:	str	d0, [x2, #576]
  4243a0:	ldr	d8, [sp, #88]
  4243a4:	b	42370c <wcrtomb@plt+0x1eaec>
  4243a8:	ldr	x1, [x25]
  4243ac:	mov	w0, #0x5                   	// #5
  4243b0:	mov	w19, #0x0                   	// #0
  4243b4:	bl	422870 <wcrtomb@plt+0x1dc50>
  4243b8:	mov	x0, x20
  4243bc:	bl	41e0d8 <wcrtomb@plt+0x194b8>
  4243c0:	b	42370c <wcrtomb@plt+0x1eaec>
  4243c4:	ldr	x1, [x25]
  4243c8:	mov	x0, x20
  4243cc:	mov	w19, #0x0                   	// #0
  4243d0:	bl	423588 <wcrtomb@plt+0x1e968>
  4243d4:	b	42370c <wcrtomb@plt+0x1eaec>
  4243d8:	mov	x0, x20
  4243dc:	mov	w19, #0x0                   	// #0
  4243e0:	bl	423620 <wcrtomb@plt+0x1ea00>
  4243e4:	b	42370c <wcrtomb@plt+0x1eaec>
  4243e8:	ldr	x1, [x25]
  4243ec:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  4243f0:	mov	w19, #0x0                   	// #0
  4243f4:	add	x0, x0, #0x408
  4243f8:	bl	423588 <wcrtomb@plt+0x1e968>
  4243fc:	b	42370c <wcrtomb@plt+0x1eaec>
  424400:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424404:	ldr	w1, [x0, #804]
  424408:	tst	w1, #0xfffffffb
  42440c:	b.ne	424c5c <wcrtomb@plt+0x2003c>  // b.any
  424410:	mov	w1, #0x4                   	// #4
  424414:	mov	w19, #0x0                   	// #0
  424418:	str	w1, [x0, #804]
  42441c:	b	42370c <wcrtomb@plt+0x1eaec>
  424420:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424424:	mov	w1, #0x1                   	// #1
  424428:	mov	w19, #0x0                   	// #0
  42442c:	strb	w1, [x0, #28]
  424430:	b	42370c <wcrtomb@plt+0x1eaec>
  424434:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424438:	mov	w1, #0x1                   	// #1
  42443c:	mov	w19, #0x0                   	// #0
  424440:	strb	w1, [x0, #912]
  424444:	b	42370c <wcrtomb@plt+0x1eaec>
  424448:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42444c:	mov	w1, #0x2                   	// #2
  424450:	mov	w19, #0x0                   	// #0
  424454:	str	w1, [x0]
  424458:	b	42370c <wcrtomb@plt+0x1eaec>
  42445c:	mov	x0, x20
  424460:	mov	w19, #0x0                   	// #0
  424464:	bl	4090e8 <wcrtomb@plt+0x44c8>
  424468:	b	42370c <wcrtomb@plt+0x1eaec>
  42446c:	cbz	x20, 424a1c <wcrtomb@plt+0x1fdfc>
  424470:	ldrb	w0, [x20]
  424474:	cmp	w0, #0x2e
  424478:	b.eq	424ad8 <wcrtomb@plt+0x1feb8>  // b.none
  42447c:	add	x1, sp, #0x98
  424480:	mov	w2, #0x0                   	// #0
  424484:	mov	x0, x20
  424488:	bl	403fe0 <strtoul@plt>
  42448c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  424490:	mov	w19, #0x0                   	// #0
  424494:	ldr	x1, [sp, #152]
  424498:	str	w0, [x2, #800]
  42449c:	ldrb	w0, [x1]
  4244a0:	cbz	w0, 42370c <wcrtomb@plt+0x1eaec>
  4244a4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4244a8:	stp	x21, x22, [sp, #32]
  4244ac:	ldr	x0, [x0, #952]
  4244b0:	stp	x23, x24, [sp, #48]
  4244b4:	str	x27, [sp, #80]
  4244b8:	str	d8, [sp, #88]
  4244bc:	cbz	x0, 4244c4 <wcrtomb@plt+0x1f8a4>
  4244c0:	blr	x0
  4244c4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  4244c8:	add	x1, x1, #0xda8
  4244cc:	mov	w2, #0x5                   	// #5
  4244d0:	mov	x0, #0x0                   	// #0
  4244d4:	bl	4049c0 <dcgettext@plt>
  4244d8:	mov	x2, x0
  4244dc:	mov	w1, #0x0                   	// #0
  4244e0:	mov	w0, #0x0                   	// #0
  4244e4:	bl	404050 <error@plt>
  4244e8:	bl	40e770 <wcrtomb@plt+0x9b50>
  4244ec:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4244f0:	mov	w1, #0x1                   	// #1
  4244f4:	mov	w19, #0x0                   	// #0
  4244f8:	strb	w1, [x0, #4072]
  4244fc:	b	42370c <wcrtomb@plt+0x1eaec>
  424500:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424504:	mov	w1, #0x1                   	// #1
  424508:	strb	w1, [x0, #701]
  42450c:	cbz	x20, 423c04 <wcrtomb@plt+0x1efe4>
  424510:	mov	w19, #0x0                   	// #0
  424514:	str	x20, [x25, #32]
  424518:	b	42370c <wcrtomb@plt+0x1eaec>
  42451c:	mov	w0, #0x1                   	// #1
  424520:	cbz	x20, 424558 <wcrtomb@plt+0x1f938>
  424524:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  424528:	adrp	x19, 45a000 <_obstack_memory_used@@Base+0x17e10>
  42452c:	add	x19, x19, #0xc70
  424530:	mov	x1, x20
  424534:	ldr	x5, [x0, #920]
  424538:	add	x3, x19, #0x168
  42453c:	add	x2, x19, #0x170
  424540:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  424544:	mov	x4, #0x4                   	// #4
  424548:	add	x0, x0, #0xd90
  42454c:	bl	430500 <wcrtomb@plt+0x2b8e0>
  424550:	add	x19, x19, x0, lsl #2
  424554:	ldr	w0, [x19, #360]
  424558:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  42455c:	mov	w19, #0x0                   	// #0
  424560:	str	w0, [x1, #500]
  424564:	b	42370c <wcrtomb@plt+0x1eaec>
  424568:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  42456c:	add	x0, x0, #0xe60
  424570:	bl	423620 <wcrtomb@plt+0x1ea00>
  424574:	mov	w19, #0x0                   	// #0
  424578:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42457c:	mov	w1, #0x1                   	// #1
  424580:	str	w1, [x0, #840]
  424584:	b	42370c <wcrtomb@plt+0x1eaec>
  424588:	ldr	x1, [x25]
  42458c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  424590:	mov	w19, #0x0                   	// #0
  424594:	add	x0, x0, #0x3c0
  424598:	bl	423588 <wcrtomb@plt+0x1e968>
  42459c:	b	42370c <wcrtomb@plt+0x1eaec>
  4245a0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4245a4:	ldr	w1, [x0, #804]
  4245a8:	cmp	w1, #0x0
  4245ac:	ccmp	w1, #0x6, #0x4, ne  // ne = any
  4245b0:	b.ne	424c5c <wcrtomb@plt+0x2003c>  // b.any
  4245b4:	mov	w1, #0x6                   	// #6
  4245b8:	mov	w19, #0x0                   	// #0
  4245bc:	str	w1, [x0, #804]
  4245c0:	b	42370c <wcrtomb@plt+0x1eaec>
  4245c4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4245c8:	mov	w1, #0x1                   	// #1
  4245cc:	mov	w19, #0x0                   	// #0
  4245d0:	strb	w1, [x0, #536]
  4245d4:	b	42370c <wcrtomb@plt+0x1eaec>
  4245d8:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  4245dc:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4245e0:	mov	w4, #0x3000                	// #12288
  4245e4:	mov	w19, #0x0                   	// #0
  4245e8:	ldr	w1, [x3, #588]
  4245ec:	movk	w4, #0x58, lsl #16
  4245f0:	ldr	w0, [x2, #408]
  4245f4:	add	w1, w1, #0x1
  4245f8:	str	w1, [x3, #588]
  4245fc:	orr	w0, w0, w4
  424600:	str	w0, [x2, #408]
  424604:	b	42370c <wcrtomb@plt+0x1eaec>
  424608:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42460c:	ldr	w1, [x0, #804]
  424610:	tst	w1, #0xfffffff7
  424614:	b.ne	424c5c <wcrtomb@plt+0x2003c>  // b.any
  424618:	mov	w1, #0x8                   	// #8
  42461c:	mov	w19, #0x0                   	// #0
  424620:	str	w1, [x0, #804]
  424624:	b	42370c <wcrtomb@plt+0x1eaec>
  424628:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42462c:	ldr	w1, [x0, #804]
  424630:	cmp	w1, #0x0
  424634:	ccmp	w1, #0x7, #0x4, ne  // ne = any
  424638:	b.ne	424c5c <wcrtomb@plt+0x2003c>  // b.any
  42463c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  424640:	mov	w2, #0x7                   	// #7
  424644:	str	w2, [x0, #804]
  424648:	mov	w19, #0x0                   	// #0
  42464c:	ldr	w0, [x1, #588]
  424650:	add	w0, w0, #0x1
  424654:	str	w0, [x1, #588]
  424658:	b	42370c <wcrtomb@plt+0x1eaec>
  42465c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424660:	mov	w1, #0x1                   	// #1
  424664:	mov	w19, #0x0                   	// #0
  424668:	strb	w1, [x0, #568]
  42466c:	b	42370c <wcrtomb@plt+0x1eaec>
  424670:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424674:	mov	w19, #0x0                   	// #0
  424678:	str	x20, [x0, #904]
  42467c:	b	42370c <wcrtomb@plt+0x1eaec>
  424680:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424684:	mov	w1, #0x1                   	// #1
  424688:	mov	w19, #0x0                   	// #0
  42468c:	strb	w1, [x0, #897]
  424690:	b	42370c <wcrtomb@plt+0x1eaec>
  424694:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424698:	mov	w1, #0x1                   	// #1
  42469c:	mov	w19, #0x0                   	// #0
  4246a0:	strb	w1, [x0, #521]
  4246a4:	b	42370c <wcrtomb@plt+0x1eaec>
  4246a8:	mov	x0, x20
  4246ac:	mov	w19, #0x0                   	// #0
  4246b0:	bl	41a910 <wcrtomb@plt+0x15cf0>
  4246b4:	b	42370c <wcrtomb@plt+0x1eaec>
  4246b8:	mov	x0, x20
  4246bc:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  4246c0:	add	x1, x19, #0x1d8
  4246c4:	bl	422930 <wcrtomb@plt+0x1dd10>
  4246c8:	cmn	x0, #0x1
  4246cc:	b.eq	4249c4 <wcrtomb@plt+0x1fda4>  // b.none
  4246d0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4246d4:	mov	w19, #0x0                   	// #0
  4246d8:	str	w0, [x1, #648]
  4246dc:	b	42370c <wcrtomb@plt+0x1eaec>
  4246e0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4246e4:	mov	w1, #0x1                   	// #1
  4246e8:	mov	w19, #0x0                   	// #0
  4246ec:	strb	w1, [x0, #640]
  4246f0:	b	42370c <wcrtomb@plt+0x1eaec>
  4246f4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4246f8:	mov	w1, #0x1                   	// #1
  4246fc:	mov	w19, #0x0                   	// #0
  424700:	strb	w1, [x0, #960]
  424704:	b	42370c <wcrtomb@plt+0x1eaec>
  424708:	ldr	x1, [x25]
  42470c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  424710:	mov	w19, #0x0                   	// #0
  424714:	add	x0, x0, #0x3f8
  424718:	bl	423588 <wcrtomb@plt+0x1e968>
  42471c:	b	42370c <wcrtomb@plt+0x1eaec>
  424720:	ldr	x1, [x25]
  424724:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  424728:	mov	w19, #0x0                   	// #0
  42472c:	add	x0, x0, #0x3e8
  424730:	bl	423588 <wcrtomb@plt+0x1e968>
  424734:	b	42370c <wcrtomb@plt+0x1eaec>
  424738:	add	x1, sp, #0x98
  42473c:	mov	w2, #0xa                   	// #10
  424740:	mov	x0, x20
  424744:	bl	403fe0 <strtoul@plt>
  424748:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  42474c:	mov	w19, #0x0                   	// #0
  424750:	ldr	x1, [sp, #152]
  424754:	str	w0, [x2, #724]
  424758:	ldrb	w0, [x1]
  42475c:	cbz	w0, 42370c <wcrtomb@plt+0x1eaec>
  424760:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424764:	stp	x21, x22, [sp, #32]
  424768:	ldr	x0, [x0, #952]
  42476c:	stp	x23, x24, [sp, #48]
  424770:	str	x27, [sp, #80]
  424774:	str	d8, [sp, #88]
  424778:	cbz	x0, 424780 <wcrtomb@plt+0x1fb60>
  42477c:	blr	x0
  424780:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424784:	add	x1, x1, #0xd10
  424788:	mov	w2, #0x5                   	// #5
  42478c:	mov	x0, #0x0                   	// #0
  424790:	bl	4049c0 <dcgettext@plt>
  424794:	mov	x2, x0
  424798:	mov	w1, #0x0                   	// #0
  42479c:	mov	w0, #0x0                   	// #0
  4247a0:	bl	404050 <error@plt>
  4247a4:	mov	w0, #0x2                   	// #2
  4247a8:	bl	423220 <wcrtomb@plt+0x1e600>
  4247ac:	ldr	x1, [x25]
  4247b0:	mov	w0, #0x6                   	// #6
  4247b4:	mov	w19, #0x0                   	// #0
  4247b8:	bl	423500 <wcrtomb@plt+0x1e8e0>
  4247bc:	b	42370c <wcrtomb@plt+0x1eaec>
  4247c0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  4247c4:	add	x1, x1, #0xef8
  4247c8:	mov	x0, #0x0                   	// #0
  4247cc:	stp	x21, x22, [sp, #32]
  4247d0:	mov	x21, x2
  4247d4:	mov	w2, #0x5                   	// #5
  4247d8:	stp	x23, x24, [sp, #48]
  4247dc:	str	x27, [sp, #80]
  4247e0:	str	d8, [sp, #88]
  4247e4:	bl	4049c0 <dcgettext@plt>
  4247e8:	mov	x1, x0
  4247ec:	mov	x0, x21
  4247f0:	bl	4337f8 <argp_error@@Base>
  4247f4:	mov	w0, #0x40                  	// #64
  4247f8:	bl	404020 <exit@plt>
  4247fc:	ucvtf	d0, d8
  424800:	mov	x0, #0x4090000000000000    	// #4652218415073722368
  424804:	fmov	d1, x0
  424808:	fmul	d0, d0, d1
  42480c:	b	424388 <wcrtomb@plt+0x1f768>
  424810:	sub	x26, x0, x20
  424814:	add	x26, x26, #0x1
  424818:	cmp	x26, x22
  42481c:	b.hi	4248cc <wcrtomb@plt+0x1fcac>  // b.pmore
  424820:	mov	x2, x26
  424824:	mov	x0, x19
  424828:	mov	x1, x20
  42482c:	bl	403f70 <memcpy@plt>
  424830:	ldr	x2, [sp, #176]
  424834:	sub	x19, x27, x26
  424838:	ldrb	w22, [x21, #1]
  42483c:	add	x21, x21, #0x1
  424840:	add	x26, x2, x26
  424844:	str	x26, [sp, #176]
  424848:	cbz	w22, 424888 <wcrtomb@plt+0x1fc68>
  42484c:	bl	404740 <__ctype_b_loc@plt>
  424850:	ldr	x2, [x0]
  424854:	b	424864 <wcrtomb@plt+0x1fc44>
  424858:	ldrb	w22, [x21, #1]!
  42485c:	sub	x19, x19, #0x1
  424860:	cbz	w22, 424888 <wcrtomb@plt+0x1fc68>
  424864:	ubfiz	x1, x22, #1, #8
  424868:	ldrh	w1, [x2, x1]
  42486c:	tbnz	w1, #13, 424858 <wcrtomb@plt+0x1fc38>
  424870:	cmp	w22, #0x7b
  424874:	b.ne	424888 <wcrtomb@plt+0x1fc68>  // b.any
  424878:	add	x0, x21, x19
  42487c:	ldurb	w0, [x0, #-1]
  424880:	cmp	w0, #0x7d
  424884:	b.eq	42491c <wcrtomb@plt+0x1fcfc>  // b.none
  424888:	ldr	x0, [sp, #184]
  42488c:	sub	x0, x0, x26
  424890:	cmp	x0, x19
  424894:	b.cc	4248e0 <wcrtomb@plt+0x1fcc0>  // b.lo, b.ul, b.last
  424898:	mov	x2, x19
  42489c:	mov	x1, x21
  4248a0:	mov	x0, x26
  4248a4:	bl	403f70 <memcpy@plt>
  4248a8:	ldr	x0, [sp, #176]
  4248ac:	add	x19, x0, x19
  4248b0:	str	x19, [sp, #176]
  4248b4:	b	423e98 <wcrtomb@plt+0x1f278>
  4248b8:	mov	x1, x27
  4248bc:	add	x0, sp, #0x98
  4248c0:	bl	442010 <_obstack_newchunk@@Base>
  4248c4:	ldr	x19, [sp, #176]
  4248c8:	b	423e7c <wcrtomb@plt+0x1f25c>
  4248cc:	mov	x1, x26
  4248d0:	add	x0, sp, #0x98
  4248d4:	bl	442010 <_obstack_newchunk@@Base>
  4248d8:	ldr	x19, [sp, #176]
  4248dc:	b	424820 <wcrtomb@plt+0x1fc00>
  4248e0:	mov	x1, x19
  4248e4:	add	x0, sp, #0x98
  4248e8:	bl	442010 <_obstack_newchunk@@Base>
  4248ec:	ldr	x26, [sp, #176]
  4248f0:	b	424898 <wcrtomb@plt+0x1fc78>
  4248f4:	ldr	x1, [sp, #184]
  4248f8:	cmp	x1, x19
  4248fc:	b.eq	424ac0 <wcrtomb@plt+0x1fea0>  // b.none
  424900:	add	x1, x19, #0x1
  424904:	str	x1, [sp, #176]
  424908:	add	x20, x20, #0x1
  42490c:	strb	w0, [x19]
  424910:	b	423e3c <wcrtomb@plt+0x1f21c>
  424914:	mov	w19, #0x7                   	// #7
  424918:	b	42370c <wcrtomb@plt+0x1eaec>
  42491c:	sub	x26, x19, #0x2
  424920:	mov	x0, x19
  424924:	bl	440f48 <argp_parse@@Base+0xd060>
  424928:	mov	x22, x0
  42492c:	mov	x2, x26
  424930:	add	x1, x21, #0x1
  424934:	bl	403f70 <memcpy@plt>
  424938:	strb	wzr, [x22, x26]
  42493c:	mov	x2, x22
  424940:	add	x3, sp, #0x68
  424944:	mov	x1, x24
  424948:	add	x0, x25, #0x8
  42494c:	bl	4232e0 <wcrtomb@plt+0x1e6c0>
  424950:	cbz	w0, 424a64 <wcrtomb@plt+0x1fe44>
  424954:	ldp	x0, x1, [sp, #176]
  424958:	sub	x1, x1, x0
  42495c:	cmp	x1, x19
  424960:	b.cc	424988 <wcrtomb@plt+0x1fd68>  // b.lo, b.ul, b.last
  424964:	mov	x1, x21
  424968:	mov	x2, x19
  42496c:	bl	403f70 <memcpy@plt>
  424970:	ldr	x0, [sp, #176]
  424974:	add	x19, x0, x19
  424978:	mov	x0, x22
  42497c:	str	x19, [sp, #176]
  424980:	bl	4047b0 <free@plt>
  424984:	b	423e98 <wcrtomb@plt+0x1f278>
  424988:	add	x0, sp, #0x98
  42498c:	mov	x1, x19
  424990:	bl	442010 <_obstack_newchunk@@Base>
  424994:	ldr	x0, [sp, #176]
  424998:	b	424964 <wcrtomb@plt+0x1fd44>
  42499c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4249a0:	mov	x1, #0x1                   	// #1
  4249a4:	mov	w19, #0x0                   	// #0
  4249a8:	str	x1, [x0, #704]
  4249ac:	b	42370c <wcrtomb@plt+0x1eaec>
  4249b0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4249b4:	mov	w1, #0x1                   	// #1
  4249b8:	mov	w19, #0x0                   	// #0
  4249bc:	strb	w1, [x0, #641]
  4249c0:	b	42370c <wcrtomb@plt+0x1eaec>
  4249c4:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4249c8:	add	x1, x2, #0x288
  4249cc:	ldr	x3, [x19, #472]
  4249d0:	str	w0, [x2, #648]
  4249d4:	cbz	x3, 423c04 <wcrtomb@plt+0x1efe4>
  4249d8:	mov	x0, x3
  4249dc:	mov	w19, #0x0                   	// #0
  4249e0:	bl	41db28 <wcrtomb@plt+0x18f08>
  4249e4:	b	42370c <wcrtomb@plt+0x1eaec>
  4249e8:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4249ec:	add	x1, x2, #0x2d8
  4249f0:	ldr	x3, [x19, #528]
  4249f4:	str	w0, [x2, #728]
  4249f8:	cbz	x3, 423c04 <wcrtomb@plt+0x1efe4>
  4249fc:	mov	x0, x3
  424a00:	mov	w19, #0x0                   	// #0
  424a04:	bl	41da60 <wcrtomb@plt+0x18e40>
  424a08:	b	42370c <wcrtomb@plt+0x1eaec>
  424a0c:	ldrb	w1, [sp, #232]
  424a10:	orr	w1, w1, #0x2
  424a14:	strb	w1, [sp, #232]
  424a18:	b	423ec8 <wcrtomb@plt+0x1f2a8>
  424a1c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424a20:	mov	w1, #0xa                   	// #10
  424a24:	mov	w19, #0x0                   	// #0
  424a28:	str	w1, [x0, #800]
  424a2c:	b	42370c <wcrtomb@plt+0x1eaec>
  424a30:	cbz	x0, 424b18 <wcrtomb@plt+0x1fef8>
  424a34:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  424a38:	movk	x1, #0xaaa, lsl #48
  424a3c:	cmp	x3, x1
  424a40:	b.cs	424b30 <wcrtomb@plt+0x1ff10>  // b.hs, b.nlast
  424a44:	add	x1, x3, #0x1
  424a48:	add	x3, x1, x3, lsr #1
  424a4c:	lsl	x1, x3, #3
  424a50:	str	x3, [x2, #104]
  424a54:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  424a58:	ldr	x1, [x19, #792]
  424a5c:	str	x0, [x21, #632]
  424a60:	b	424120 <wcrtomb@plt+0x1f500>
  424a64:	ldp	x0, x1, [sp, #104]
  424a68:	add	x2, sp, #0x78
  424a6c:	bl	41b298 <wcrtomb@plt+0x16678>
  424a70:	mov	x26, x0
  424a74:	bl	403ff0 <strlen@plt>
  424a78:	mov	x19, x0
  424a7c:	ldp	x0, x1, [sp, #176]
  424a80:	sub	x1, x1, x0
  424a84:	cmp	x19, x1
  424a88:	b.hi	424a94 <wcrtomb@plt+0x1fe74>  // b.pmore
  424a8c:	mov	x1, x26
  424a90:	b	424968 <wcrtomb@plt+0x1fd48>
  424a94:	mov	x1, x19
  424a98:	add	x0, sp, #0x98
  424a9c:	bl	442010 <_obstack_newchunk@@Base>
  424aa0:	mov	x1, x26
  424aa4:	ldr	x0, [sp, #176]
  424aa8:	b	424968 <wcrtomb@plt+0x1fd48>
  424aac:	add	x0, sp, #0x98
  424ab0:	mov	x1, #0x1                   	// #1
  424ab4:	bl	442010 <_obstack_newchunk@@Base>
  424ab8:	ldr	x19, [sp, #176]
  424abc:	b	423eb0 <wcrtomb@plt+0x1f290>
  424ac0:	add	x0, sp, #0x98
  424ac4:	mov	x1, #0x1                   	// #1
  424ac8:	bl	442010 <_obstack_newchunk@@Base>
  424acc:	ldrb	w0, [x20]
  424ad0:	ldr	x19, [sp, #176]
  424ad4:	b	424900 <wcrtomb@plt+0x1fce0>
  424ad8:	add	x20, x20, #0x1
  424adc:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  424ae0:	add	x0, x0, #0x668
  424ae4:	bl	4090e8 <wcrtomb@plt+0x44c8>
  424ae8:	b	42447c <wcrtomb@plt+0x1f85c>
  424aec:	ldr	x0, [x25]
  424af0:	stp	x21, x22, [sp, #32]
  424af4:	stp	x23, x24, [sp, #48]
  424af8:	ldr	w0, [x0]
  424afc:	str	x27, [sp, #80]
  424b00:	str	d8, [sp, #88]
  424b04:	cmp	w0, #0x2
  424b08:	b.eq	424bcc <wcrtomb@plt+0x1ffac>  // b.none
  424b0c:	cbz	w0, 424b9c <wcrtomb@plt+0x1ff7c>
  424b10:	mov	w0, #0x40                  	// #64
  424b14:	bl	404020 <exit@plt>
  424b18:	cbz	x3, 424b40 <wcrtomb@plt+0x1ff20>
  424b1c:	cmp	xzr, x3, lsr #61
  424b20:	lsl	x1, x3, #3
  424b24:	cset	x4, ne  // ne = any
  424b28:	tbnz	x3, #60, 424b30 <wcrtomb@plt+0x1ff10>
  424b2c:	cbz	x4, 424a50 <wcrtomb@plt+0x1fe30>
  424b30:	stp	x23, x24, [sp, #48]
  424b34:	str	x27, [sp, #80]
  424b38:	str	d8, [sp, #88]
  424b3c:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  424b40:	mov	x3, #0x10                  	// #16
  424b44:	mov	x1, #0x80                  	// #128
  424b48:	b	424a50 <wcrtomb@plt+0x1fe30>
  424b4c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424b50:	stp	x23, x24, [sp, #48]
  424b54:	ldr	x0, [x0, #952]
  424b58:	str	x27, [sp, #80]
  424b5c:	str	d8, [sp, #88]
  424b60:	cbz	x0, 424b68 <wcrtomb@plt+0x1ff48>
  424b64:	blr	x0
  424b68:	mov	w2, #0x5                   	// #5
  424b6c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424b70:	mov	x0, #0x0                   	// #0
  424b74:	add	x1, x1, #0xe00
  424b78:	bl	4049c0 <dcgettext@plt>
  424b7c:	mov	x2, x0
  424b80:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  424b84:	mov	x3, x20
  424b88:	mov	w1, #0x0                   	// #0
  424b8c:	mov	w0, #0x0                   	// #0
  424b90:	ldr	x4, [x4, #3488]
  424b94:	bl	404050 <error@plt>
  424b98:	bl	40e770 <wcrtomb@plt+0x9b50>
  424b9c:	mov	w2, #0x5                   	// #5
  424ba0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424ba4:	mov	x0, #0x0                   	// #0
  424ba8:	add	x1, x1, #0xf50
  424bac:	bl	4049c0 <dcgettext@plt>
  424bb0:	mov	x2, x0
  424bb4:	ldr	x3, [x25]
  424bb8:	mov	w1, #0x0                   	// #0
  424bbc:	mov	w0, #0x0                   	// #0
  424bc0:	ldr	x3, [x3, #8]
  424bc4:	bl	404050 <error@plt>
  424bc8:	b	424b10 <wcrtomb@plt+0x1fef0>
  424bcc:	mov	w2, #0x5                   	// #5
  424bd0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424bd4:	mov	x0, #0x0                   	// #0
  424bd8:	add	x1, x1, #0xf30
  424bdc:	bl	4049c0 <dcgettext@plt>
  424be0:	mov	x2, x0
  424be4:	ldr	x4, [x25]
  424be8:	mov	w1, #0x0                   	// #0
  424bec:	mov	w0, #0x0                   	// #0
  424bf0:	ldp	x3, x4, [x4, #8]
  424bf4:	bl	404050 <error@plt>
  424bf8:	b	424b10 <wcrtomb@plt+0x1fef0>
  424bfc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424c00:	stp	x21, x22, [sp, #32]
  424c04:	ldr	x0, [x0, #952]
  424c08:	stp	x23, x24, [sp, #48]
  424c0c:	str	x27, [sp, #80]
  424c10:	str	d8, [sp, #88]
  424c14:	cbz	x0, 424c1c <wcrtomb@plt+0x1fffc>
  424c18:	blr	x0
  424c1c:	mov	x0, x20
  424c20:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  424c24:	mov	w2, #0x5                   	// #5
  424c28:	mov	x19, x0
  424c2c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424c30:	mov	x0, #0x0                   	// #0
  424c34:	add	x1, x1, #0xdf0
  424c38:	bl	4049c0 <dcgettext@plt>
  424c3c:	mov	x3, x19
  424c40:	mov	x4, x0
  424c44:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  424c48:	add	x2, x2, #0x9e8
  424c4c:	mov	w1, #0x0                   	// #0
  424c50:	mov	w0, #0x0                   	// #0
  424c54:	bl	404050 <error@plt>
  424c58:	bl	40e770 <wcrtomb@plt+0x9b50>
  424c5c:	stp	x21, x22, [sp, #32]
  424c60:	stp	x23, x24, [sp, #48]
  424c64:	str	x27, [sp, #80]
  424c68:	str	d8, [sp, #88]
  424c6c:	bl	423460 <wcrtomb@plt+0x1e840>
  424c70:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424c74:	stp	x21, x22, [sp, #32]
  424c78:	ldr	x0, [x0, #952]
  424c7c:	stp	x23, x24, [sp, #48]
  424c80:	str	x27, [sp, #80]
  424c84:	str	d8, [sp, #88]
  424c88:	cbz	x0, 424c90 <wcrtomb@plt+0x20070>
  424c8c:	blr	x0
  424c90:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424c94:	mov	w2, #0x5                   	// #5
  424c98:	add	x1, x1, #0xd38
  424c9c:	b	42478c <wcrtomb@plt+0x1fb6c>
  424ca0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424ca4:	stp	x21, x22, [sp, #32]
  424ca8:	ldr	x0, [x0, #952]
  424cac:	stp	x23, x24, [sp, #48]
  424cb0:	str	x27, [sp, #80]
  424cb4:	str	d8, [sp, #88]
  424cb8:	cbz	x0, 424cc0 <wcrtomb@plt+0x200a0>
  424cbc:	blr	x0
  424cc0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424cc4:	mov	w2, #0x5                   	// #5
  424cc8:	add	x1, x1, #0xdd0
  424ccc:	b	4244d0 <wcrtomb@plt+0x1f8b0>
  424cd0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424cd4:	stp	x21, x22, [sp, #32]
  424cd8:	ldr	x0, [x0, #952]
  424cdc:	stp	x23, x24, [sp, #48]
  424ce0:	str	x27, [sp, #80]
  424ce4:	str	d8, [sp, #88]
  424ce8:	cbz	x0, 424cf0 <wcrtomb@plt+0x200d0>
  424cec:	blr	x0
  424cf0:	mov	w2, #0x5                   	// #5
  424cf4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424cf8:	mov	x0, #0x0                   	// #0
  424cfc:	add	x1, x1, #0xe80
  424d00:	bl	4049c0 <dcgettext@plt>
  424d04:	mov	x2, x0
  424d08:	mov	w3, #0x200                 	// #512
  424d0c:	mov	w1, #0x0                   	// #0
  424d10:	mov	w0, #0x0                   	// #0
  424d14:	bl	404050 <error@plt>
  424d18:	mov	w0, #0x2                   	// #2
  424d1c:	bl	423220 <wcrtomb@plt+0x1e600>
  424d20:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424d24:	stp	x21, x22, [sp, #32]
  424d28:	ldr	x0, [x0, #952]
  424d2c:	stp	x23, x24, [sp, #48]
  424d30:	str	x27, [sp, #80]
  424d34:	str	d8, [sp, #88]
  424d38:	cbz	x0, 424d40 <wcrtomb@plt+0x20120>
  424d3c:	blr	x0
  424d40:	mov	x0, x20
  424d44:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  424d48:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424d4c:	mov	x19, x0
  424d50:	add	x1, x1, #0xe68
  424d54:	b	424208 <wcrtomb@plt+0x1f5e8>
  424d58:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424d5c:	stp	x21, x22, [sp, #32]
  424d60:	ldr	x0, [x0, #952]
  424d64:	stp	x23, x24, [sp, #48]
  424d68:	str	x27, [sp, #80]
  424d6c:	str	d8, [sp, #88]
  424d70:	cbz	x0, 424d78 <wcrtomb@plt+0x20158>
  424d74:	blr	x0
  424d78:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424d7c:	mov	w2, #0x5                   	// #5
  424d80:	add	x1, x1, #0xed0
  424d84:	b	42478c <wcrtomb@plt+0x1fb6c>
  424d88:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424d8c:	stp	x21, x22, [sp, #32]
  424d90:	ldr	x0, [x0, #952]
  424d94:	stp	x23, x24, [sp, #48]
  424d98:	str	x27, [sp, #80]
  424d9c:	str	d8, [sp, #88]
  424da0:	cbz	x0, 424da8 <wcrtomb@plt+0x20188>
  424da4:	blr	x0
  424da8:	mov	x0, x20
  424dac:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  424db0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424db4:	mov	x19, x0
  424db8:	add	x1, x1, #0xea8
  424dbc:	b	424208 <wcrtomb@plt+0x1f5e8>
  424dc0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424dc4:	stp	x21, x22, [sp, #32]
  424dc8:	ldr	x0, [x0, #952]
  424dcc:	stp	x23, x24, [sp, #48]
  424dd0:	str	x27, [sp, #80]
  424dd4:	str	d8, [sp, #88]
  424dd8:	cbz	x0, 424de0 <wcrtomb@plt+0x201c0>
  424ddc:	blr	x0
  424de0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424de4:	mov	w2, #0x5                   	// #5
  424de8:	add	x1, x1, #0xd70
  424dec:	b	42478c <wcrtomb@plt+0x1fb6c>
  424df0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424df4:	stp	x21, x22, [sp, #32]
  424df8:	ldr	x0, [x0, #952]
  424dfc:	stp	x23, x24, [sp, #48]
  424e00:	str	x27, [sp, #80]
  424e04:	str	d8, [sp, #88]
  424e08:	cbz	x0, 424e10 <wcrtomb@plt+0x201f0>
  424e0c:	blr	x0
  424e10:	mov	x0, x20
  424e14:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  424e18:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424e1c:	mov	x19, x0
  424e20:	add	x1, x1, #0xcf8
  424e24:	b	424208 <wcrtomb@plt+0x1f5e8>
  424e28:	stp	x29, x30, [sp, #-48]!
  424e2c:	adrp	x6, 482000 <_obstack_memory_used@@Base+0x3fe10>
  424e30:	add	x6, x6, #0xbb8
  424e34:	mov	x29, sp
  424e38:	str	x19, [sp, #16]
  424e3c:	add	x5, x6, #0x78
  424e40:	mov	x19, x2
  424e44:	add	x4, sp, #0x2c
  424e48:	mov	x2, x1
  424e4c:	mov	w3, #0x28                  	// #40
  424e50:	mov	w1, w0
  424e54:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3de10>
  424e58:	add	x0, x0, #0x170
  424e5c:	str	x19, [x6, #120]
  424e60:	bl	433ee8 <argp_parse@@Base>
  424e64:	cbnz	w0, 424ec8 <wcrtomb@plt+0x202a8>
  424e68:	ldr	w0, [x19]
  424e6c:	cbz	w0, 424e7c <wcrtomb@plt+0x2025c>
  424e70:	ldr	x19, [sp, #16]
  424e74:	ldp	x29, x30, [sp], #48
  424e78:	ret
  424e7c:	bl	41dbe8 <wcrtomb@plt+0x18fc8>
  424e80:	tst	w0, #0xff
  424e84:	b.eq	424e70 <wcrtomb@plt+0x20250>  // b.none
  424e88:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  424e8c:	ldr	x0, [x0, #952]
  424e90:	cbz	x0, 424e98 <wcrtomb@plt+0x20278>
  424e94:	blr	x0
  424e98:	mov	w2, #0x5                   	// #5
  424e9c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  424ea0:	mov	x0, #0x0                   	// #0
  424ea4:	add	x1, x1, #0xf68
  424ea8:	bl	4049c0 <dcgettext@plt>
  424eac:	mov	x2, x0
  424eb0:	ldr	x3, [x19, #8]
  424eb4:	mov	w1, #0x0                   	// #0
  424eb8:	mov	w0, #0x0                   	// #0
  424ebc:	bl	404050 <error@plt>
  424ec0:	mov	w0, #0x2                   	// #2
  424ec4:	bl	423220 <wcrtomb@plt+0x1e600>
  424ec8:	bl	404650 <abort@plt>
  424ecc:	nop
  424ed0:	stp	x29, x30, [sp, #-416]!
  424ed4:	mov	x29, sp
  424ed8:	stp	x23, x24, [sp, #48]
  424edc:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  424ee0:	add	x23, x23, #0xbb8
  424ee4:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x3de10>
  424ee8:	add	x24, x24, #0x170
  424eec:	stp	x21, x22, [sp, #32]
  424ef0:	mov	x22, x1
  424ef4:	add	x1, x24, #0x48
  424ef8:	mov	w21, w0
  424efc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  424f00:	add	x0, x0, #0x6c8
  424f04:	stp	x19, x20, [sp, #16]
  424f08:	mov	w20, #0x1                   	// #1
  424f0c:	stp	x25, x26, [sp, #64]
  424f10:	stp	x27, x28, [sp, #80]
  424f14:	adrp	x27, 483000 <argp_program_version_hook@@Base+0x290>
  424f18:	adrp	x28, 483000 <argp_program_version_hook@@Base+0x290>
  424f1c:	str	w20, [sp, #120]
  424f20:	stp	xzr, xzr, [sp, #128]
  424f24:	str	xzr, [sp, #144]
  424f28:	bl	434c18 <argp_parse@@Base+0xd30>
  424f2c:	strh	wzr, [x23, #136]
  424f30:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  424f34:	add	x0, x0, #0xf88
  424f38:	str	xzr, [x23, #128]
  424f3c:	bl	404af0 <getenv@plt>
  424f40:	str	wzr, [x27, #804]
  424f44:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  424f48:	mov	w3, #0x14                  	// #20
  424f4c:	mov	x1, #0x2800                	// #10240
  424f50:	str	wzr, [x28, #760]
  424f54:	str	w3, [x2, #692]
  424f58:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  424f5c:	stp	x0, xzr, [x23, #144]
  424f60:	str	x1, [x2, #864]
  424f64:	str	wzr, [x23, #160]
  424f68:	bl	435ac0 <argp_parse@@Base+0x1bd8>
  424f6c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  424f70:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  424f74:	adrp	x8, 483000 <argp_program_version_hook@@Base+0x290>
  424f78:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  424f7c:	strb	w20, [x2, #4072]
  424f80:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  424f84:	str	x2, [x1, #736]
  424f88:	mov	w1, #0x8                   	// #8
  424f8c:	str	w1, [x8, #620]
  424f90:	add	x1, x3, #0xff0
  424f94:	adrp	x5, 483000 <argp_program_version_hook@@Base+0x290>
  424f98:	adrp	x6, 483000 <argp_program_version_hook@@Base+0x290>
  424f9c:	adrp	x4, 483000 <argp_program_version_hook@@Base+0x290>
  424fa0:	adrp	x11, 483000 <argp_program_version_hook@@Base+0x290>
  424fa4:	str	x0, [x5, #8]
  424fa8:	mov	x0, #0xffffffffffffffff    	// #-1
  424fac:	str	x0, [x1, #8]
  424fb0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  424fb4:	add	x1, x1, #0x2e0
  424fb8:	adrp	x10, 483000 <argp_program_version_hook@@Base+0x290>
  424fbc:	adrp	x9, 483000 <argp_program_version_hook@@Base+0x290>
  424fc0:	strb	w20, [x6, #700]
  424fc4:	adrp	x12, 483000 <argp_program_version_hook@@Base+0x290>
  424fc8:	adrp	x7, 483000 <argp_program_version_hook@@Base+0x290>
  424fcc:	str	w20, [x4, #552]
  424fd0:	adrp	x6, 483000 <argp_program_version_hook@@Base+0x290>
  424fd4:	adrp	x5, 483000 <argp_program_version_hook@@Base+0x290>
  424fd8:	adrp	x4, 483000 <argp_program_version_hook@@Base+0x290>
  424fdc:	str	x2, [x3, #4080]
  424fe0:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  424fe4:	str	wzr, [x12, #860]
  424fe8:	cmp	w21, w20
  424fec:	str	w0, [x11, #728]
  424ff0:	str	w0, [x10, #648]
  424ff4:	str	w0, [x9, #16]
  424ff8:	str	w0, [x2, #724]
  424ffc:	str	wzr, [x7, #32]
  425000:	str	wzr, [x6, #464]
  425004:	str	xzr, [x5, #528]
  425008:	str	xzr, [x4, #472]
  42500c:	str	x0, [x1, #8]
  425010:	b.le	425024 <wcrtomb@plt+0x20404>
  425014:	ldr	x0, [x22, #8]
  425018:	ldrb	w1, [x0]
  42501c:	cmp	w1, #0x2d
  425020:	b.ne	4255f0 <wcrtomb@plt+0x209d0>  // b.any
  425024:	add	x25, sp, #0xb8
  425028:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x14e10>
  42502c:	add	x19, x19, #0xfc8
  425030:	mov	x0, x19
  425034:	bl	404af0 <getenv@plt>
  425038:	str	wzr, [sp, #152]
  42503c:	stp	x19, xzr, [sp, #160]
  425040:	str	xzr, [sp, #176]
  425044:	cbz	x0, 425074 <wcrtomb@plt+0x20454>
  425048:	mov	x3, #0x1                   	// #1
  42504c:	mov	w2, #0xe46                 	// #3654
  425050:	mov	x1, x25
  425054:	movk	w2, #0x200, lsl #16
  425058:	str	x3, [sp, #200]
  42505c:	bl	42f1f0 <wcrtomb@plt+0x2a5d0>
  425060:	cbnz	w0, 425df8 <wcrtomb@plt+0x211d8>
  425064:	ldr	x0, [sp, #184]
  425068:	cbnz	x0, 425754 <wcrtomb@plt+0x20b34>
  42506c:	mov	x0, x25
  425070:	bl	42c108 <wcrtomb@plt+0x274e8>
  425074:	add	x6, sp, #0x78
  425078:	add	x20, x23, #0x78
  42507c:	mov	x4, x25
  425080:	mov	x0, x24
  425084:	mov	x5, x20
  425088:	mov	x2, x22
  42508c:	mov	w1, w21
  425090:	mov	w3, #0x8                   	// #8
  425094:	str	x6, [x23, #120]
  425098:	bl	433ee8 <argp_parse@@Base>
  42509c:	mov	w19, w0
  4250a0:	cbnz	w0, 425df0 <wcrtomb@plt+0x211d0>
  4250a4:	ldrb	w0, [x20, #16]
  4250a8:	cbz	w0, 4250c4 <wcrtomb@plt+0x204a4>
  4250ac:	ldr	w0, [x27, #804]
  4250b0:	cmp	w0, #0x3
  4250b4:	b.eq	425bb0 <wcrtomb@plt+0x20f90>  // b.none
  4250b8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4250bc:	mov	w1, #0xffffffff            	// #-1
  4250c0:	str	w1, [x0, #924]
  4250c4:	ldr	w0, [sp, #184]
  4250c8:	cmp	w21, w0
  4250cc:	b.le	4250ec <wcrtomb@plt+0x204cc>
  4250d0:	ldr	x0, [x22, w0, sxtw #3]
  4250d4:	bl	41dc00 <wcrtomb@plt+0x18fe0>
  4250d8:	ldr	w0, [sp, #184]
  4250dc:	add	w0, w0, #0x1
  4250e0:	str	w0, [sp, #184]
  4250e4:	cmp	w0, w21
  4250e8:	b.lt	4250d0 <wcrtomb@plt+0x204b0>  // b.tstop
  4250ec:	ldr	w0, [x28, #760]
  4250f0:	cbz	w0, 425568 <wcrtomb@plt+0x20948>
  4250f4:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  4250f8:	ldr	x0, [x21, #592]
  4250fc:	cbz	x0, 42510c <wcrtomb@plt+0x204ec>
  425100:	ldr	w0, [x27, #804]
  425104:	cmp	w0, #0x3
  425108:	b.eq	425118 <wcrtomb@plt+0x204f8>  // b.none
  42510c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  425110:	ldrb	w0, [x0, #4073]
  425114:	cbz	w0, 4255d4 <wcrtomb@plt+0x209b4>
  425118:	ldr	w2, [x28, #760]
  42511c:	mov	w0, #0x1                   	// #1
  425120:	mov	w1, #0x54                  	// #84
  425124:	lsl	w0, w0, w2
  425128:	tst	w0, w1
  42512c:	b.eq	425e80 <wcrtomb@plt+0x21260>  // b.none
  425130:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  425134:	ldr	x0, [x20, #704]
  425138:	cbnz	x0, 4259e4 <wcrtomb@plt+0x20dc4>
  42513c:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  425140:	ldr	x0, [x20, #792]
  425144:	cbz	x0, 4259b0 <wcrtomb@plt+0x20d90>
  425148:	cmp	x0, #0x1
  42514c:	b.ls	42515c <wcrtomb@plt+0x2053c>  // b.plast
  425150:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425154:	ldrb	w0, [x0, #20]
  425158:	cbz	w0, 425ee0 <wcrtomb@plt+0x212c0>
  42515c:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  425160:	ldr	x0, [x22, #776]
  425164:	cbz	x0, 42590c <wcrtomb@plt+0x20cec>
  425168:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42516c:	add	x0, x0, #0xff0
  425170:	ldr	x0, [x0, #8]
  425174:	tbnz	x0, #63, 4251b0 <wcrtomb@plt+0x20590>
  425178:	ldp	x2, x1, [x23, #16]
  42517c:	ldr	w3, [x1]
  425180:	ldr	w0, [x2]
  425184:	cmp	w0, w3
  425188:	b.ne	425900 <wcrtomb@plt+0x20ce0>  // b.any
  42518c:	cmp	w0, #0x1
  425190:	b.eq	425bd4 <wcrtomb@plt+0x20fb4>  // b.none
  425194:	ldr	x1, [x1, #8]
  425198:	ldr	x0, [x2, #8]
  42519c:	bl	404710 <strcmp@plt>
  4251a0:	cbz	w0, 425bd4 <wcrtomb@plt+0x20fb4>
  4251a4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4251a8:	add	x0, x0, #0xff0
  4251ac:	stp	xzr, xzr, [x0]
  4251b0:	ldr	x0, [x21, #592]
  4251b4:	cbz	x0, 4251ec <wcrtomb@plt+0x205cc>
  4251b8:	ldr	w1, [x28, #760]
  4251bc:	and	w1, w1, #0xfffffffb
  4251c0:	cmp	w1, #0x2
  4251c4:	b.ne	4251ec <wcrtomb@plt+0x205cc>  // b.any
  4251c8:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4251cc:	mov	x1, #0x63                  	// #99
  4251d0:	mov	x24, #0x51                  	// #81
  4251d4:	ldrb	w2, [x2, #20]
  4251d8:	cmp	w2, #0x0
  4251dc:	csel	x24, x24, x1, ne  // ne = any
  4251e0:	bl	403ff0 <strlen@plt>
  4251e4:	cmp	x0, x24
  4251e8:	b.hi	425d20 <wcrtomb@plt+0x21100>  // b.pmore
  4251ec:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4251f0:	ldrb	w0, [x1, #786]
  4251f4:	cbnz	w0, 425584 <wcrtomb@plt+0x20964>
  4251f8:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  4251fc:	ldr	x0, [x24, #848]
  425200:	cbz	x0, 425230 <wcrtomb@plt+0x20610>
  425204:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425208:	ldrb	w0, [x0, #20]
  42520c:	cbnz	w0, 425e40 <wcrtomb@plt+0x21220>
  425210:	ldr	w1, [x27, #804]
  425214:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  425218:	add	x0, x0, #0xc70
  42521c:	add	x0, x0, #0x1a8
  425220:	ldr	w0, [x0, w1, uxtw #2]
  425224:	tbnz	w0, #2, 425ec0 <wcrtomb@plt+0x212a0>
  425228:	cmp	w1, #0x2
  42522c:	b.eq	425ea0 <wcrtomb@plt+0x21280>  // b.none
  425230:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425234:	ldr	w0, [x0]
  425238:	cmp	w0, #0x2
  42523c:	b.eq	425a28 <wcrtomb@plt+0x20e08>  // b.none
  425240:	ldrb	w0, [x23, #137]
  425244:	cbz	w0, 4254ec <wcrtomb@plt+0x208cc>
  425248:	ldr	w0, [x28, #760]
  42524c:	cmp	w0, #0x4
  425250:	b.eq	4254ec <wcrtomb@plt+0x208cc>  // b.none
  425254:	ldr	w2, [x27, #804]
  425258:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  42525c:	add	x0, x0, #0xc70
  425260:	add	x1, x0, #0x1a8
  425264:	ldr	w1, [x1, x2, lsl #2]
  425268:	tbz	w1, #0, 425e60 <wcrtomb@plt+0x21240>
  42526c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  425270:	ldr	w1, [x1, #840]
  425274:	cmp	w1, #0x0
  425278:	b.le	425778 <wcrtomb@plt+0x20b58>
  42527c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425280:	ldr	w0, [x0, #928]
  425284:	cmp	w0, #0x0
  425288:	b.le	425788 <wcrtomb@plt+0x20b68>
  42528c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425290:	ldrb	w0, [x0, #624]
  425294:	cbnz	w0, 4252d8 <wcrtomb@plt+0x206b8>
  425298:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  42529c:	ldrb	w0, [x21, #584]
  4252a0:	cbz	w0, 4252d8 <wcrtomb@plt+0x206b8>
  4252a4:	ldr	w3, [x27, #804]
  4252a8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  4252ac:	add	x0, x0, #0xc70
  4252b0:	add	x1, x0, #0x1a8
  4252b4:	mov	w2, w3
  4252b8:	ldr	w1, [x1, x2, lsl #2]
  4252bc:	tbnz	w1, #0, 4252d8 <wcrtomb@plt+0x206b8>
  4252c0:	ldr	x1, [x23, #48]
  4252c4:	cbz	x1, 4252d4 <wcrtomb@plt+0x206b4>
  4252c8:	ldr	w1, [x1]
  4252cc:	cmp	w1, #0x1
  4252d0:	b.eq	425db8 <wcrtomb@plt+0x21198>  // b.none
  4252d4:	strb	wzr, [x21, #584]
  4252d8:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  4252dc:	ldrb	w0, [x21, #787]
  4252e0:	cbz	w0, 42531c <wcrtomb@plt+0x206fc>
  4252e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4252e8:	ldrb	w1, [x0, #896]
  4252ec:	cbz	w1, 425310 <wcrtomb@plt+0x206f0>
  4252f0:	ldp	x2, x3, [x23, #56]
  4252f4:	ldr	w1, [x2]
  4252f8:	ldr	w4, [x3]
  4252fc:	cmp	w1, w4
  425300:	b.eq	425aec <wcrtomb@plt+0x20ecc>  // b.none
  425304:	cmp	w1, #0x1
  425308:	b.ne	425b04 <wcrtomb@plt+0x20ee4>  // b.any
  42530c:	strb	wzr, [x0, #896]
  425310:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  425314:	ldr	x0, [x21, #512]
  425318:	cbz	x0, 425be8 <wcrtomb@plt+0x20fc8>
  42531c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  425320:	ldrb	w0, [x0, #4074]
  425324:	cbz	w0, 425334 <wcrtomb@plt+0x20714>
  425328:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42532c:	mov	w1, #0x3                   	// #3
  425330:	str	w1, [x0, #696]
  425334:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  425338:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42533c:	ldrb	w1, [x1, #520]
  425340:	ldr	w0, [x0, #500]
  425344:	cbz	w1, 425954 <wcrtomb@plt+0x20d34>
  425348:	cmp	w0, #0x2
  42534c:	b.eq	425b64 <wcrtomb@plt+0x20f44>  // b.none
  425350:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  425354:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425358:	mov	w3, #0x900                 	// #2304
  42535c:	mov	w1, #0x4900                	// #18688
  425360:	movk	w3, #0x8, lsl #16
  425364:	movk	w1, #0x8, lsl #16
  425368:	str	w3, [x2, #652]
  42536c:	str	w1, [x0, #644]
  425370:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  425374:	ldr	w0, [x27, #804]
  425378:	str	w19, [x1, #504]
  42537c:	cmp	w0, #0x9
  425380:	b.eq	425b44 <wcrtomb@plt+0x20f24>  // b.none
  425384:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425388:	ldrb	w0, [x0, #497]
  42538c:	cbz	w0, 42539c <wcrtomb@plt+0x2077c>
  425390:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425394:	mov	w1, #0x2                   	// #2
  425398:	str	w1, [x0, #588]
  42539c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4253a0:	ldr	d0, [x0, #576]
  4253a4:	fcmp	d0, #0.0
  4253a8:	b.eq	4253c0 <wcrtomb@plt+0x207a0>  // b.none
  4253ac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4253b0:	ldr	d1, [x0, #864]
  4253b4:	ucvtf	d1, d1
  4253b8:	fcmpe	d0, d1
  4253bc:	b.mi	425d00 <wcrtomb@plt+0x210e0>  // b.first
  4253c0:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  4253c4:	ldrb	w0, [x21, #584]
  4253c8:	cbz	w0, 4253f8 <wcrtomb@plt+0x207d8>
  4253cc:	ldr	x0, [x22, #776]
  4253d0:	cbz	x0, 4253f8 <wcrtomb@plt+0x207d8>
  4253d4:	ldr	x1, [x23, #16]
  4253d8:	ldr	x2, [x23, #48]
  4253dc:	ldr	w3, [x1]
  4253e0:	ldr	w0, [x2]
  4253e4:	cmp	w0, w3
  4253e8:	b.eq	425acc <wcrtomb@plt+0x20eac>  // b.none
  4253ec:	cmp	w0, #0x1
  4253f0:	b.ne	425ae4 <wcrtomb@plt+0x20ec4>  // b.any
  4253f4:	str	xzr, [x22, #776]
  4253f8:	ldr	w0, [x27, #804]
  4253fc:	cmp	w0, #0x7
  425400:	b.hi	42588c <wcrtomb@plt+0x20c6c>  // b.pmore
  425404:	cmp	w0, #0x4
  425408:	b.hi	42589c <wcrtomb@plt+0x20c7c>  // b.pmore
  42540c:	cmp	w0, #0x2
  425410:	b.ls	425838 <wcrtomb@plt+0x20c18>  // b.plast
  425414:	cmp	w0, #0x3
  425418:	b.ne	425430 <wcrtomb@plt+0x20810>  // b.any
  42541c:	bl	41dbe8 <wcrtomb@plt+0x18fc8>
  425420:	tst	w0, #0xff
  425424:	b.eq	425f48 <wcrtomb@plt+0x21328>  // b.none
  425428:	ldr	w0, [x23, #160]
  42542c:	cbnz	w0, 425b0c <wcrtomb@plt+0x20eec>
  425430:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  425434:	ldr	x0, [x19, #904]
  425438:	cbz	x0, 425984 <wcrtomb@plt+0x20d64>
  42543c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  425440:	add	x1, x1, #0xe80
  425444:	bl	4042e0 <fopen@plt>
  425448:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42544c:	str	x0, [x1, #3872]
  425450:	cbz	x0, 425f40 <wcrtomb@plt+0x21320>
  425454:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  425458:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  42545c:	ldr	x0, [x23, #144]
  425460:	ldr	x2, [x2, #632]
  425464:	str	x2, [x1, #680]
  425468:	cbz	x0, 425478 <wcrtomb@plt+0x20858>
  42546c:	bl	441170 <argp_parse@@Base+0xd288>
  425470:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  425474:	str	x0, [x1, #3464]
  425478:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  42547c:	ldrb	w0, [x19, #701]
  425480:	cbnz	w0, 425a58 <wcrtomb@plt+0x20e38>
  425484:	bl	4093f0 <wcrtomb@plt+0x47d0>
  425488:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x15e10>
  42548c:	ldr	x19, [x23, #128]
  425490:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425494:	add	x25, x25, #0x488
  425498:	add	x23, x0, #0x24c
  42549c:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  4254a0:	cbz	x19, 4254d0 <wcrtomb@plt+0x208b0>
  4254a4:	nop
  4254a8:	ldr	w0, [x23]
  4254ac:	mov	x20, x19
  4254b0:	ldr	x19, [x19]
  4254b4:	cbnz	w0, 4257dc <wcrtomb@plt+0x20bbc>
  4254b8:	ldr	x21, [x20, #32]
  4254bc:	mov	x0, x21
  4254c0:	bl	4047b0 <free@plt>
  4254c4:	mov	x0, x20
  4254c8:	bl	4047b0 <free@plt>
  4254cc:	cbnz	x19, 4254a8 <wcrtomb@plt+0x20888>
  4254d0:	ldp	x19, x20, [sp, #16]
  4254d4:	ldp	x21, x22, [sp, #32]
  4254d8:	ldp	x23, x24, [sp, #48]
  4254dc:	ldp	x25, x26, [sp, #64]
  4254e0:	ldp	x27, x28, [sp, #80]
  4254e4:	ldp	x29, x30, [sp], #416
  4254e8:	ret
  4254ec:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4254f0:	ldr	w0, [x0, #840]
  4254f4:	cmp	w0, #0x0
  4254f8:	b.le	425700 <wcrtomb@plt+0x20ae0>
  4254fc:	ldr	w0, [x28, #760]
  425500:	cmp	w0, #0x4
  425504:	b.ne	425a94 <wcrtomb@plt+0x20e74>  // b.any
  425508:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42550c:	ldr	w0, [x0, #928]
  425510:	cmp	w0, #0x0
  425514:	b.le	425788 <wcrtomb@plt+0x20b68>
  425518:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  42551c:	ldrb	w0, [x1, #624]
  425520:	cbz	w0, 425298 <wcrtomb@plt+0x20678>
  425524:	ldr	w3, [x27, #804]
  425528:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  42552c:	add	x0, x0, #0xc70
  425530:	add	x4, x0, #0x1a8
  425534:	mov	w2, w3
  425538:	ldr	w4, [x4, x2, lsl #2]
  42553c:	tbnz	w4, #0, 4252d8 <wcrtomb@plt+0x206b8>
  425540:	ldr	x4, [x23, #40]
  425544:	cbz	x4, 425554 <wcrtomb@plt+0x20934>
  425548:	ldr	w4, [x4]
  42554c:	cmp	w4, #0x1
  425550:	b.eq	425dd4 <wcrtomb@plt+0x211b4>  // b.none
  425554:	adrp	x21, 483000 <argp_program_version_hook@@Base+0x290>
  425558:	strb	wzr, [x1, #624]
  42555c:	ldrb	w1, [x21, #584]
  425560:	cbz	w1, 4252d8 <wcrtomb@plt+0x206b8>
  425564:	b	4252c0 <wcrtomb@plt+0x206a0>
  425568:	ldrb	w2, [x23, #137]
  42556c:	mov	w1, #0x6                   	// #6
  425570:	mov	w0, #0x4                   	// #4
  425574:	cmp	w2, #0x0
  425578:	csel	w0, w0, w1, ne  // ne = any
  42557c:	str	w0, [x28, #760]
  425580:	b	4250f4 <wcrtomb@plt+0x204d4>
  425584:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425588:	ldrb	w0, [x0, #20]
  42558c:	cbnz	w0, 425f00 <wcrtomb@plt+0x212e0>
  425590:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  425594:	ldr	x0, [x24, #848]
  425598:	cbnz	x0, 425f20 <wcrtomb@plt+0x21300>
  42559c:	ldr	w3, [x27, #804]
  4255a0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  4255a4:	add	x0, x0, #0xc70
  4255a8:	add	x4, x0, #0x1a8
  4255ac:	mov	w2, w3
  4255b0:	ldr	w4, [x4, x2, lsl #2]
  4255b4:	tbnz	w4, #1, 425230 <wcrtomb@plt+0x20610>
  4255b8:	ldr	x4, [x23, #32]
  4255bc:	cbz	x4, 4255cc <wcrtomb@plt+0x209ac>
  4255c0:	ldr	w4, [x4]
  4255c4:	cmp	w4, #0x1
  4255c8:	b.eq	425d9c <wcrtomb@plt+0x2117c>  // b.none
  4255cc:	strb	wzr, [x1, #786]
  4255d0:	b	425230 <wcrtomb@plt+0x20610>
  4255d4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4255d8:	ldrb	w0, [x0, #20]
  4255dc:	cbnz	w0, 425118 <wcrtomb@plt+0x204f8>
  4255e0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4255e4:	ldrb	w0, [x0, #856]
  4255e8:	cbz	w0, 425130 <wcrtomb@plt+0x20510>
  4255ec:	b	425118 <wcrtomb@plt+0x204f8>
  4255f0:	mov	w1, #0x2d                  	// #45
  4255f4:	strb	w1, [sp, #184]
  4255f8:	strb	wzr, [sp, #186]
  4255fc:	mov	x19, x22
  425600:	bl	403ff0 <strlen@plt>
  425604:	add	w0, w21, w0
  425608:	sub	w1, w0, #0x1
  42560c:	str	w1, [sp, #100]
  425610:	sbfiz	x0, x0, #3, #32
  425614:	add	x26, x22, w21, sxtw #3
  425618:	add	x25, sp, #0xb8
  42561c:	bl	440f48 <argp_parse@@Base+0xd060>
  425620:	mov	x20, x0
  425624:	ldr	x22, [x22, #8]
  425628:	str	x0, [sp, #104]
  42562c:	ldr	x0, [x19], #16
  425630:	str	x0, [x20], #8
  425634:	ldrb	w1, [x22]
  425638:	cbnz	w1, 425664 <wcrtomb@plt+0x20a44>
  42563c:	b	4256b8 <wcrtomb@plt+0x20a98>
  425640:	ldr	x0, [x0, #16]
  425644:	cbz	x0, 4256ac <wcrtomb@plt+0x20a8c>
  425648:	cmp	x26, x19
  42564c:	b.ls	425c98 <wcrtomb@plt+0x21078>  // b.plast
  425650:	ldr	x0, [x19], #8
  425654:	str	x0, [x20, #8]
  425658:	add	x20, x20, #0x10
  42565c:	ldrb	w1, [x22, #1]!
  425660:	cbz	w1, 4256b8 <wcrtomb@plt+0x20a98>
  425664:	mov	x21, x20
  425668:	mov	x0, x25
  42566c:	strb	w1, [sp, #185]
  425670:	bl	441170 <argp_parse@@Base+0xd288>
  425674:	str	x0, [x21], #8
  425678:	ldr	x0, [x24]
  42567c:	ldrb	w1, [x22]
  425680:	bl	4227d0 <wcrtomb@plt+0x1dbb0>
  425684:	cbnz	x0, 425640 <wcrtomb@plt+0x20a20>
  425688:	ldr	x4, [x24, #32]
  42568c:	cbz	x4, 4256ac <wcrtomb@plt+0x20a8c>
  425690:	ldr	x0, [x4]
  425694:	cbz	x0, 4256ac <wcrtomb@plt+0x20a8c>
  425698:	ldr	x0, [x0]
  42569c:	bl	4227d0 <wcrtomb@plt+0x1dbb0>
  4256a0:	cbnz	x0, 425640 <wcrtomb@plt+0x20a20>
  4256a4:	ldr	x0, [x4, #32]!
  4256a8:	cbnz	x0, 425698 <wcrtomb@plt+0x20a78>
  4256ac:	ldrb	w1, [x22, #1]!
  4256b0:	mov	x20, x21
  4256b4:	cbnz	w1, 425664 <wcrtomb@plt+0x20a44>
  4256b8:	cmp	x26, x19
  4256bc:	b.ls	4256f0 <wcrtomb@plt+0x20ad0>  // b.plast
  4256c0:	sub	x2, x26, #0x1
  4256c4:	mov	x0, #0x0                   	// #0
  4256c8:	sub	x2, x2, x19
  4256cc:	lsr	x2, x2, #3
  4256d0:	add	x3, x2, #0x1
  4256d4:	nop
  4256d8:	ldr	x1, [x19, x0, lsl #3]
  4256dc:	str	x1, [x20, x0, lsl #3]
  4256e0:	cmp	x2, x0
  4256e4:	add	x0, x0, #0x1
  4256e8:	b.ne	4256d8 <wcrtomb@plt+0x20ab8>  // b.any
  4256ec:	add	x20, x20, x3, lsl #3
  4256f0:	ldr	w21, [sp, #100]
  4256f4:	str	xzr, [x20]
  4256f8:	ldr	x22, [sp, #104]
  4256fc:	b	425028 <wcrtomb@plt+0x20408>
  425700:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425704:	ldr	w0, [x0, #928]
  425708:	cmp	w0, #0x0
  42570c:	b.le	425788 <wcrtomb@plt+0x20b68>
  425710:	ldr	w0, [x28, #760]
  425714:	cmp	w0, #0x4
  425718:	b.eq	425518 <wcrtomb@plt+0x208f8>  // b.none
  42571c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  425720:	add	x0, x0, #0xc70
  425724:	ldr	w1, [x27, #804]
  425728:	add	x0, x0, #0x1a8
  42572c:	ldr	w0, [x0, x1, lsl #2]
  425730:	tbnz	w0, #0, 42528c <wcrtomb@plt+0x2066c>
  425734:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425738:	ldr	x0, [x0, #952]
  42573c:	cbz	x0, 425744 <wcrtomb@plt+0x20b24>
  425740:	blr	x0
  425744:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425748:	mov	w2, #0x5                   	// #5
  42574c:	add	x1, x1, #0x2c0
  425750:	b	425c30 <wcrtomb@plt+0x21010>
  425754:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  425758:	ldp	x1, x2, [sp, #192]
  42575c:	ldr	x3, [x3, #3488]
  425760:	str	x3, [x1]
  425764:	add	w0, w2, w0
  425768:	add	x2, sp, #0x98
  42576c:	bl	424e28 <wcrtomb@plt+0x20208>
  425770:	str	xzr, [sp, #184]
  425774:	b	42506c <wcrtomb@plt+0x2044c>
  425778:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  42577c:	ldr	w1, [x1, #928]
  425780:	cmp	w1, #0x0
  425784:	b.gt	425724 <wcrtomb@plt+0x20b04>
  425788:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42578c:	ldr	w0, [x0, #600]
  425790:	cmp	w0, #0x0
  425794:	b.le	425518 <wcrtomb@plt+0x208f8>
  425798:	ldr	w0, [x28, #760]
  42579c:	cmp	w0, #0x4
  4257a0:	b.eq	425518 <wcrtomb@plt+0x208f8>  // b.none
  4257a4:	ldr	w1, [x27, #804]
  4257a8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  4257ac:	add	x0, x0, #0xc70
  4257b0:	add	x0, x0, #0x1a8
  4257b4:	ldr	w0, [x0, x1, lsl #2]
  4257b8:	tbnz	w0, #0, 42528c <wcrtomb@plt+0x2066c>
  4257bc:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4257c0:	ldr	x0, [x0, #952]
  4257c4:	cbz	x0, 4257cc <wcrtomb@plt+0x20bac>
  4257c8:	blr	x0
  4257cc:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  4257d0:	mov	w2, #0x5                   	// #5
  4257d4:	add	x1, x1, #0x2f0
  4257d8:	b	425c30 <wcrtomb@plt+0x21010>
  4257dc:	ldp	x0, x1, [x20, #8]
  4257e0:	mov	w2, #0x1                   	// #1
  4257e4:	bl	418fb0 <wcrtomb@plt+0x14390>
  4257e8:	mov	x22, x0
  4257ec:	ldr	x21, [x20, #32]
  4257f0:	mov	x1, x0
  4257f4:	mov	x0, x21
  4257f8:	bl	404710 <strcmp@plt>
  4257fc:	cbz	w0, 4254bc <wcrtomb@plt+0x2089c>
  425800:	ldr	x0, [x24, #952]
  425804:	cbz	x0, 42580c <wcrtomb@plt+0x20bec>
  425808:	blr	x0
  42580c:	mov	x1, x25
  425810:	mov	w2, #0x5                   	// #5
  425814:	mov	x0, #0x0                   	// #0
  425818:	bl	4049c0 <dcgettext@plt>
  42581c:	ldp	x3, x4, [x20, #24]
  425820:	mov	x2, x0
  425824:	mov	x5, x22
  425828:	mov	w1, #0x0                   	// #0
  42582c:	mov	w0, #0x0                   	// #0
  425830:	bl	404050 <error@plt>
  425834:	b	4254b8 <wcrtomb@plt+0x20898>
  425838:	cbz	w0, 425430 <wcrtomb@plt+0x20810>
  42583c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425840:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  425844:	ldr	x4, [x20, #792]
  425848:	ldr	x0, [x0, #632]
  42584c:	str	x0, [x2, #680]
  425850:	add	x4, x0, x4, lsl #3
  425854:	cmp	x0, x4
  425858:	b.cs	425430 <wcrtomb@plt+0x20810>  // b.hs, b.nlast
  42585c:	nop
  425860:	ldr	x1, [x0]
  425864:	ldrb	w3, [x1]
  425868:	cmp	w3, #0x2d
  42586c:	b.ne	425878 <wcrtomb@plt+0x20c58>  // b.any
  425870:	ldrb	w1, [x1, #1]
  425874:	cbz	w1, 425c78 <wcrtomb@plt+0x21058>
  425878:	add	x0, x0, #0x8
  42587c:	str	x0, [x2, #680]
  425880:	cmp	x0, x4
  425884:	b.cc	425860 <wcrtomb@plt+0x20c40>  // b.lo, b.ul, b.last
  425888:	b	425430 <wcrtomb@plt+0x20810>
  42588c:	cmp	w0, #0x8
  425890:	b.eq	42583c <wcrtomb@plt+0x20c1c>  // b.none
  425894:	cmp	w0, #0x9
  425898:	b.ne	425430 <wcrtomb@plt+0x20810>  // b.any
  42589c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4258a0:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4258a4:	ldr	x4, [x20, #792]
  4258a8:	ldr	x0, [x0, #632]
  4258ac:	str	x0, [x2, #680]
  4258b0:	add	x4, x0, x4, lsl #3
  4258b4:	cmp	x0, x4
  4258b8:	b.cs	425430 <wcrtomb@plt+0x20810>  // b.hs, b.nlast
  4258bc:	adrp	x5, 458000 <_obstack_memory_used@@Base+0x15e10>
  4258c0:	add	x5, x5, #0x440
  4258c4:	nop
  4258c8:	ldr	x1, [x0]
  4258cc:	ldrb	w3, [x1]
  4258d0:	cmp	w3, #0x2d
  4258d4:	b.ne	4258ec <wcrtomb@plt+0x20ccc>  // b.any
  4258d8:	ldrb	w1, [x1, #1]
  4258dc:	cbnz	w1, 4258ec <wcrtomb@plt+0x20ccc>
  4258e0:	ldr	x1, [x23, #88]
  4258e4:	cbnz	x1, 425cd8 <wcrtomb@plt+0x210b8>
  4258e8:	str	x5, [x23, #88]
  4258ec:	add	x0, x0, #0x8
  4258f0:	str	x0, [x2, #680]
  4258f4:	cmp	x0, x4
  4258f8:	b.cc	4258c8 <wcrtomb@plt+0x20ca8>  // b.lo, b.ul, b.last
  4258fc:	b	425430 <wcrtomb@plt+0x20810>
  425900:	cmp	w0, #0x1
  425904:	b.ne	4251a4 <wcrtomb@plt+0x20584>  // b.any
  425908:	str	xzr, [x22, #776]
  42590c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425910:	ldr	w0, [x0, #724]
  425914:	cmn	w0, #0x1
  425918:	b.eq	4251b0 <wcrtomb@plt+0x20590>  // b.none
  42591c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425920:	ldr	x0, [x0, #952]
  425924:	cbz	x0, 42592c <wcrtomb@plt+0x20d0c>
  425928:	blr	x0
  42592c:	mov	w2, #0x5                   	// #5
  425930:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425934:	mov	x0, #0x0                   	// #0
  425938:	add	x1, x1, #0xc8
  42593c:	bl	4049c0 <dcgettext@plt>
  425940:	mov	x2, x0
  425944:	mov	w1, #0x0                   	// #0
  425948:	mov	w0, #0x0                   	// #0
  42594c:	bl	404050 <error@plt>
  425950:	b	4251b0 <wcrtomb@plt+0x20590>
  425954:	cmp	w0, #0x2
  425958:	b.eq	425b88 <wcrtomb@plt+0x20f68>  // b.none
  42595c:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  425960:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425964:	mov	w3, #0x8900                	// #35072
  425968:	mov	w1, #0xc900                	// #51456
  42596c:	movk	w3, #0x8, lsl #16
  425970:	movk	w1, #0x8, lsl #16
  425974:	str	w3, [x2, #652]
  425978:	mov	w19, #0x100                 	// #256
  42597c:	str	w1, [x0, #644]
  425980:	b	425370 <wcrtomb@plt+0x20750>
  425984:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  425988:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42598c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  425990:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  425994:	ldrb	w3, [x3, #569]
  425998:	ldr	x2, [x2, #1104]
  42599c:	cmp	w3, #0x0
  4259a0:	ldr	x0, [x0, #1096]
  4259a4:	csel	x0, x0, x2, ne  // ne = any
  4259a8:	str	x0, [x1, #3872]
  4259ac:	b	425454 <wcrtomb@plt+0x20834>
  4259b0:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  4259b4:	mov	x1, #0x1                   	// #1
  4259b8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  4259bc:	str	x1, [x20, #792]
  4259c0:	ldr	x24, [x22, #632]
  4259c4:	add	x0, x0, #0x70
  4259c8:	bl	404af0 <getenv@plt>
  4259cc:	ldr	x1, [x22, #632]
  4259d0:	str	x0, [x24]
  4259d4:	ldr	x0, [x1]
  4259d8:	cbz	x0, 425bc0 <wcrtomb@plt+0x20fa0>
  4259dc:	ldr	x0, [x20, #792]
  4259e0:	b	425148 <wcrtomb@plt+0x20528>
  4259e4:	bl	41dbe8 <wcrtomb@plt+0x18fc8>
  4259e8:	tst	w0, #0xff
  4259ec:	b.eq	425d7c <wcrtomb@plt+0x2115c>  // b.none
  4259f0:	ldr	w2, [x27, #804]
  4259f4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  4259f8:	add	x0, x0, #0xc70
  4259fc:	add	x3, x0, #0x1a8
  425a00:	mov	w1, w2
  425a04:	ldr	w3, [x3, x1, lsl #2]
  425a08:	tbnz	w3, #4, 42513c <wcrtomb@plt+0x2051c>
  425a0c:	ldr	x3, [x23, #8]
  425a10:	cbz	x3, 425a20 <wcrtomb@plt+0x20e00>
  425a14:	ldr	w3, [x3]
  425a18:	cmp	w3, #0x1
  425a1c:	b.eq	425ce4 <wcrtomb@plt+0x210c4>  // b.none
  425a20:	str	xzr, [x20, #704]
  425a24:	b	42513c <wcrtomb@plt+0x2051c>
  425a28:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425a2c:	add	x0, x0, #0x2e0
  425a30:	ldr	x0, [x0, #8]
  425a34:	tbz	x0, #63, 425240 <wcrtomb@plt+0x20620>
  425a38:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425a3c:	ldr	x0, [x0, #952]
  425a40:	cbz	x0, 425a48 <wcrtomb@plt+0x20e28>
  425a44:	blr	x0
  425a48:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425a4c:	mov	w2, #0x5                   	// #5
  425a50:	add	x1, x1, #0x228
  425a54:	b	425c30 <wcrtomb@plt+0x21010>
  425a58:	ldr	x1, [x23, #152]
  425a5c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  425a60:	add	x0, x0, #0x478
  425a64:	bl	4352d0 <argp_parse@@Base+0x13e8>
  425a68:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  425a6c:	str	w0, [x1, #672]
  425a70:	cbz	w0, 425a8c <wcrtomb@plt+0x20e6c>
  425a74:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425a78:	ldrb	w0, [x0, #569]
  425a7c:	cbnz	w0, 425a8c <wcrtomb@plt+0x20e6c>
  425a80:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425a84:	ldr	x0, [x0, #560]
  425a88:	cbz	x0, 425484 <wcrtomb@plt+0x20864>
  425a8c:	strb	wzr, [x19, #701]
  425a90:	b	425484 <wcrtomb@plt+0x20864>
  425a94:	ldr	w1, [x27, #804]
  425a98:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x17e10>
  425a9c:	add	x0, x0, #0xc70
  425aa0:	add	x0, x0, #0x1a8
  425aa4:	ldr	w0, [x0, x1, lsl #2]
  425aa8:	tbnz	w0, #0, 42527c <wcrtomb@plt+0x2065c>
  425aac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425ab0:	ldr	x0, [x0, #952]
  425ab4:	cbz	x0, 425abc <wcrtomb@plt+0x20e9c>
  425ab8:	blr	x0
  425abc:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425ac0:	mov	w2, #0x5                   	// #5
  425ac4:	add	x1, x1, #0x290
  425ac8:	b	425c30 <wcrtomb@plt+0x21010>
  425acc:	cmp	w0, #0x1
  425ad0:	b.eq	425c50 <wcrtomb@plt+0x21030>  // b.none
  425ad4:	ldr	x1, [x1, #8]
  425ad8:	ldr	x0, [x2, #8]
  425adc:	bl	404710 <strcmp@plt>
  425ae0:	cbz	w0, 425c50 <wcrtomb@plt+0x21030>
  425ae4:	strb	wzr, [x21, #584]
  425ae8:	b	4253f8 <wcrtomb@plt+0x207d8>
  425aec:	cmp	w1, #0x1
  425af0:	b.eq	425c64 <wcrtomb@plt+0x21044>  // b.none
  425af4:	ldr	x0, [x2, #8]
  425af8:	ldr	x1, [x3, #8]
  425afc:	bl	404710 <strcmp@plt>
  425b00:	cbz	w0, 425c64 <wcrtomb@plt+0x21044>
  425b04:	strb	wzr, [x21, #787]
  425b08:	b	42531c <wcrtomb@plt+0x206fc>
  425b0c:	ldr	x0, [x20, #792]
  425b10:	cbz	x0, 425430 <wcrtomb@plt+0x20810>
  425b14:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425b18:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  425b1c:	add	x1, x1, #0xa60
  425b20:	ldr	x0, [x0, #632]
  425b24:	ldr	x19, [x0]
  425b28:	mov	x0, x19
  425b2c:	bl	404710 <strcmp@plt>
  425b30:	cbz	w0, 425430 <wcrtomb@plt+0x20810>
  425b34:	ldr	x1, [x24, #848]
  425b38:	mov	x0, x19
  425b3c:	bl	420f98 <wcrtomb@plt+0x1c378>
  425b40:	b	425430 <wcrtomb@plt+0x20810>
  425b44:	bl	41dbe8 <wcrtomb@plt+0x18fc8>
  425b48:	tst	w0, #0xff
  425b4c:	b.ne	42539c <wcrtomb@plt+0x2077c>  // b.any
  425b50:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425b54:	ldr	w1, [x0, #588]
  425b58:	add	w1, w1, #0x1
  425b5c:	str	w1, [x0, #588]
  425b60:	b	42539c <wcrtomb@plt+0x2077c>
  425b64:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  425b68:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425b6c:	mov	w3, #0x900                 	// #2304
  425b70:	mov	w1, #0x4900                	// #18688
  425b74:	movk	w3, #0xc, lsl #16
  425b78:	movk	w1, #0xc, lsl #16
  425b7c:	str	w3, [x2, #652]
  425b80:	str	w1, [x0, #644]
  425b84:	b	425370 <wcrtomb@plt+0x20750>
  425b88:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  425b8c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425b90:	mov	w3, #0x8900                	// #35072
  425b94:	mov	w1, #0xc900                	// #51456
  425b98:	movk	w3, #0xc, lsl #16
  425b9c:	movk	w1, #0xc, lsl #16
  425ba0:	str	w3, [x2, #652]
  425ba4:	mov	w19, #0x100                 	// #256
  425ba8:	str	w1, [x0, #644]
  425bac:	b	425370 <wcrtomb@plt+0x20750>
  425bb0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  425bb4:	add	x0, x0, #0xb50
  425bb8:	bl	423620 <wcrtomb@plt+0x1ea00>
  425bbc:	b	4250c4 <wcrtomb@plt+0x204a4>
  425bc0:	ldr	x0, [x20, #792]
  425bc4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x14e10>
  425bc8:	add	x2, x2, #0xa60
  425bcc:	str	x2, [x1]
  425bd0:	b	425148 <wcrtomb@plt+0x20528>
  425bd4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425bd8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  425bdc:	add	x1, x1, #0xa8
  425be0:	add	x0, x0, #0xb0
  425be4:	bl	4234a8 <wcrtomb@plt+0x1e888>
  425be8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425bec:	ldr	x0, [x0, #632]
  425bf0:	ldr	x0, [x0]
  425bf4:	bl	435440 <argp_parse@@Base+0x1558>
  425bf8:	mov	x26, x0
  425bfc:	bl	420fd0 <wcrtomb@plt+0x1c3b0>
  425c00:	mov	x25, x0
  425c04:	mov	x0, x26
  425c08:	str	x25, [x21, #512]
  425c0c:	bl	4047b0 <free@plt>
  425c10:	cbnz	x25, 42531c <wcrtomb@plt+0x206fc>
  425c14:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425c18:	ldr	x0, [x0, #952]
  425c1c:	cbz	x0, 425c24 <wcrtomb@plt+0x21004>
  425c20:	blr	x0
  425c24:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425c28:	add	x1, x1, #0x368
  425c2c:	mov	w2, #0x5                   	// #5
  425c30:	mov	x0, #0x0                   	// #0
  425c34:	bl	4049c0 <dcgettext@plt>
  425c38:	mov	x2, x0
  425c3c:	mov	w1, #0x0                   	// #0
  425c40:	mov	w0, #0x0                   	// #0
  425c44:	bl	404050 <error@plt>
  425c48:	mov	w0, #0x2                   	// #2
  425c4c:	bl	423220 <wcrtomb@plt+0x1e600>
  425c50:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425c54:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  425c58:	add	x1, x1, #0xb0
  425c5c:	add	x0, x0, #0x3f8
  425c60:	bl	4234a8 <wcrtomb@plt+0x1e888>
  425c64:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425c68:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  425c6c:	add	x1, x1, #0x340
  425c70:	add	x0, x0, #0x358
  425c74:	bl	4234a8 <wcrtomb@plt+0x1e888>
  425c78:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425c7c:	ldr	x0, [x0, #952]
  425c80:	cbz	x0, 425c88 <wcrtomb@plt+0x21068>
  425c84:	blr	x0
  425c88:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425c8c:	mov	w2, #0x5                   	// #5
  425c90:	add	x1, x1, #0x448
  425c94:	b	425c30 <wcrtomb@plt+0x21010>
  425c98:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425c9c:	ldr	x0, [x0, #952]
  425ca0:	cbz	x0, 425ca8 <wcrtomb@plt+0x21088>
  425ca4:	blr	x0
  425ca8:	mov	w2, #0x5                   	// #5
  425cac:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  425cb0:	mov	x0, #0x0                   	// #0
  425cb4:	add	x1, x1, #0xfa0
  425cb8:	bl	4049c0 <dcgettext@plt>
  425cbc:	mov	x2, x0
  425cc0:	ldrb	w3, [x22]
  425cc4:	mov	w1, #0x0                   	// #0
  425cc8:	mov	w0, #0x0                   	// #0
  425ccc:	bl	404050 <error@plt>
  425cd0:	mov	w0, #0x2                   	// #2
  425cd4:	bl	423220 <wcrtomb@plt+0x1e600>
  425cd8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  425cdc:	add	x0, x0, #0x440
  425ce0:	bl	423260 <wcrtomb@plt+0x1e640>
  425ce4:	cmp	w2, #0x9
  425ce8:	b.hi	425f68 <wcrtomb@plt+0x21348>  // b.pmore
  425cec:	add	x2, x0, #0x70
  425cf0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  425cf4:	add	x0, x0, #0x60
  425cf8:	ldr	x1, [x2, x1, lsl #3]
  425cfc:	bl	4234a8 <wcrtomb@plt+0x1e888>
  425d00:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425d04:	ldr	x0, [x0, #952]
  425d08:	cbz	x0, 425d10 <wcrtomb@plt+0x210f0>
  425d0c:	blr	x0
  425d10:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425d14:	mov	w2, #0x5                   	// #5
  425d18:	add	x1, x1, #0x3c8
  425d1c:	b	425c30 <wcrtomb@plt+0x21010>
  425d20:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425d24:	ldr	x0, [x0, #952]
  425d28:	cbz	x0, 425d30 <wcrtomb@plt+0x21110>
  425d2c:	blr	x0
  425d30:	mov	x3, x24
  425d34:	mov	w4, #0x5                   	// #5
  425d38:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x15e10>
  425d3c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425d40:	add	x2, x2, #0x100
  425d44:	add	x1, x1, #0x138
  425d48:	mov	x0, #0x0                   	// #0
  425d4c:	bl	4048f0 <dcngettext@plt>
  425d50:	mov	x19, x0
  425d54:	ldr	x0, [x21, #592]
  425d58:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  425d5c:	mov	x3, x0
  425d60:	mov	x4, x24
  425d64:	mov	x2, x19
  425d68:	mov	w1, #0x0                   	// #0
  425d6c:	mov	w0, #0x0                   	// #0
  425d70:	bl	404050 <error@plt>
  425d74:	mov	w0, #0x2                   	// #2
  425d78:	bl	423220 <wcrtomb@plt+0x1e600>
  425d7c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425d80:	ldr	x0, [x0, #952]
  425d84:	cbz	x0, 425d8c <wcrtomb@plt+0x2116c>
  425d88:	blr	x0
  425d8c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425d90:	mov	w2, #0x5                   	// #5
  425d94:	add	x1, x1, #0x30
  425d98:	b	425c30 <wcrtomb@plt+0x21010>
  425d9c:	cmp	w3, #0x9
  425da0:	b.hi	425f68 <wcrtomb@plt+0x21348>  // b.pmore
  425da4:	add	x1, x0, #0x70
  425da8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  425dac:	add	x0, x0, #0x1c0
  425db0:	ldr	x1, [x1, x2, lsl #3]
  425db4:	bl	4234a8 <wcrtomb@plt+0x1e888>
  425db8:	cmp	w3, #0x9
  425dbc:	b.hi	425f68 <wcrtomb@plt+0x21348>  // b.pmore
  425dc0:	add	x1, x0, #0x70
  425dc4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  425dc8:	add	x0, x0, #0x330
  425dcc:	ldr	x1, [x1, x2, lsl #3]
  425dd0:	bl	4234a8 <wcrtomb@plt+0x1e888>
  425dd4:	cmp	w3, #0x9
  425dd8:	b.hi	425f68 <wcrtomb@plt+0x21348>  // b.pmore
  425ddc:	add	x1, x0, #0x70
  425de0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x15e10>
  425de4:	add	x0, x0, #0x320
  425de8:	ldr	x1, [x1, x2, lsl #3]
  425dec:	bl	4234a8 <wcrtomb@plt+0x1e888>
  425df0:	mov	w0, #0x2                   	// #2
  425df4:	bl	404020 <exit@plt>
  425df8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425dfc:	ldr	x0, [x0, #952]
  425e00:	cbz	x0, 425e08 <wcrtomb@plt+0x211e8>
  425e04:	blr	x0
  425e08:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  425e0c:	add	x1, x1, #0xfd8
  425e10:	mov	w2, #0x5                   	// #5
  425e14:	mov	x0, #0x0                   	// #0
  425e18:	bl	4049c0 <dcgettext@plt>
  425e1c:	mov	x19, x0
  425e20:	mov	x0, x25
  425e24:	bl	42c1d8 <wcrtomb@plt+0x275b8>
  425e28:	mov	x2, x19
  425e2c:	mov	x3, x0
  425e30:	mov	w1, #0x0                   	// #0
  425e34:	mov	w0, #0x0                   	// #0
  425e38:	bl	404050 <error@plt>
  425e3c:	bl	40e770 <wcrtomb@plt+0x9b50>
  425e40:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425e44:	ldr	x0, [x0, #952]
  425e48:	cbz	x0, 425e50 <wcrtomb@plt+0x21230>
  425e4c:	blr	x0
  425e50:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425e54:	mov	w2, #0x5                   	// #5
  425e58:	add	x1, x1, #0x1d0
  425e5c:	b	425c30 <wcrtomb@plt+0x21010>
  425e60:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425e64:	ldr	x0, [x0, #952]
  425e68:	cbz	x0, 425e70 <wcrtomb@plt+0x21250>
  425e6c:	blr	x0
  425e70:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425e74:	mov	w2, #0x5                   	// #5
  425e78:	add	x1, x1, #0x260
  425e7c:	b	425c30 <wcrtomb@plt+0x21010>
  425e80:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425e84:	ldr	x0, [x0, #952]
  425e88:	cbz	x0, 425e90 <wcrtomb@plt+0x21270>
  425e8c:	blr	x0
  425e90:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  425e94:	mov	w2, #0x5                   	// #5
  425e98:	add	x1, x1, #0xff8
  425e9c:	b	425c30 <wcrtomb@plt+0x21010>
  425ea0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425ea4:	ldr	x0, [x0, #952]
  425ea8:	cbz	x0, 425eb0 <wcrtomb@plt+0x21290>
  425eac:	blr	x0
  425eb0:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425eb4:	mov	w2, #0x5                   	// #5
  425eb8:	add	x1, x1, #0x200
  425ebc:	b	425c30 <wcrtomb@plt+0x21010>
  425ec0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425ec4:	ldr	x0, [x0, #952]
  425ec8:	cbz	x0, 425ed0 <wcrtomb@plt+0x212b0>
  425ecc:	blr	x0
  425ed0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  425ed4:	mov	w2, #0x5                   	// #5
  425ed8:	add	x1, x1, #0x348
  425edc:	b	425c30 <wcrtomb@plt+0x21010>
  425ee0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425ee4:	ldr	x0, [x0, #952]
  425ee8:	cbz	x0, 425ef0 <wcrtomb@plt+0x212d0>
  425eec:	blr	x0
  425ef0:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425ef4:	mov	w2, #0x5                   	// #5
  425ef8:	add	x1, x1, #0x78
  425efc:	b	425c30 <wcrtomb@plt+0x21010>
  425f00:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425f04:	ldr	x0, [x0, #952]
  425f08:	cbz	x0, 425f10 <wcrtomb@plt+0x212f0>
  425f0c:	blr	x0
  425f10:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425f14:	mov	w2, #0x5                   	// #5
  425f18:	add	x1, x1, #0x170
  425f1c:	b	425c30 <wcrtomb@plt+0x21010>
  425f20:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425f24:	ldr	x0, [x0, #952]
  425f28:	cbz	x0, 425f30 <wcrtomb@plt+0x21310>
  425f2c:	blr	x0
  425f30:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425f34:	mov	w2, #0x5                   	// #5
  425f38:	add	x1, x1, #0x198
  425f3c:	b	425c30 <wcrtomb@plt+0x21010>
  425f40:	ldr	x0, [x19, #904]
  425f44:	bl	429df8 <wcrtomb@plt+0x251d8>
  425f48:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  425f4c:	ldr	x0, [x0, #952]
  425f50:	cbz	x0, 425f58 <wcrtomb@plt+0x21338>
  425f54:	blr	x0
  425f58:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  425f5c:	mov	w2, #0x5                   	// #5
  425f60:	add	x1, x1, #0x410
  425f64:	b	425c30 <wcrtomb@plt+0x21010>
  425f68:	bl	404650 <abort@plt>
  425f6c:	nop
  425f70:	mov	x2, #0x1a8                 	// #424
  425f74:	mov	w1, #0x0                   	// #0
  425f78:	b	404410 <memset@plt>
  425f7c:	nop
  425f80:	stp	x29, x30, [sp, #-32]!
  425f84:	mov	x29, sp
  425f88:	str	x19, [sp, #16]
  425f8c:	mov	x19, x0
  425f90:	ldr	x0, [x0, #400]
  425f94:	cbz	x0, 425fc8 <wcrtomb@plt+0x213a8>
  425f98:	bl	404590 <closedir@plt>
  425f9c:	mov	w1, w0
  425fa0:	str	xzr, [x19, #400]
  425fa4:	mov	w0, #0x1                   	// #1
  425fa8:	str	wzr, [x19, #408]
  425fac:	cbz	w1, 425fbc <wcrtomb@plt+0x2139c>
  425fb0:	ldr	x0, [x19]
  425fb4:	bl	41bb60 <wcrtomb@plt+0x16f40>
  425fb8:	mov	w0, #0x0                   	// #0
  425fbc:	ldr	x19, [sp, #16]
  425fc0:	ldp	x29, x30, [sp], #32
  425fc4:	ret
  425fc8:	ldr	w0, [x19, #408]
  425fcc:	cmp	w0, #0x0
  425fd0:	b.gt	425fe8 <wcrtomb@plt+0x213c8>
  425fd4:	str	wzr, [x19, #408]
  425fd8:	mov	w0, #0x1                   	// #1
  425fdc:	ldr	x19, [sp, #16]
  425fe0:	ldp	x29, x30, [sp], #32
  425fe4:	ret
  425fe8:	bl	4045c0 <close@plt>
  425fec:	mov	w1, w0
  425ff0:	b	425fa0 <wcrtomb@plt+0x21380>
  425ff4:	nop
  425ff8:	stp	x29, x30, [sp, #-32]!
  425ffc:	mov	x29, sp
  426000:	str	x19, [sp, #16]
  426004:	mov	x19, x0
  426008:	bl	425f80 <wcrtomb@plt+0x21360>
  42600c:	ldp	x1, x0, [x19, #328]
  426010:	bl	413b98 <wcrtomb@plt+0xef78>
  426014:	ldr	x0, [x19]
  426018:	bl	4047b0 <free@plt>
  42601c:	ldr	x0, [x19, #8]
  426020:	bl	4047b0 <free@plt>
  426024:	ldr	x0, [x19, #24]
  426028:	bl	4047b0 <free@plt>
  42602c:	ldr	x0, [x19, #32]
  426030:	bl	4047b0 <free@plt>
  426034:	ldr	x0, [x19, #40]
  426038:	bl	4047b0 <free@plt>
  42603c:	ldr	x0, [x19, #48]
  426040:	bl	4047b0 <free@plt>
  426044:	ldr	x0, [x19, #56]
  426048:	bl	4047b0 <free@plt>
  42604c:	ldr	x0, [x19, #72]
  426050:	bl	4047b0 <free@plt>
  426054:	ldr	x0, [x19, #304]
  426058:	bl	4047b0 <free@plt>
  42605c:	ldr	x0, [x19, #384]
  426060:	bl	4047b0 <free@plt>
  426064:	add	x0, x19, #0x158
  426068:	bl	4141b8 <wcrtomb@plt+0xf598>
  42606c:	mov	x0, x19
  426070:	bl	40ee28 <wcrtomb@plt+0xa208>
  426074:	mov	x0, x19
  426078:	mov	x2, #0x1a8                 	// #424
  42607c:	ldr	x19, [sp, #16]
  426080:	mov	w1, #0x0                   	// #0
  426084:	ldp	x29, x30, [sp], #32
  426088:	b	404410 <memset@plt>
  42608c:	nop
  426090:	adrp	x5, 482000 <_obstack_memory_used@@Base+0x3fe10>
  426094:	mov	w4, #0x10                  	// #16
  426098:	ldr	w5, [x5, #3992]
  42609c:	asr	w4, w4, w5
  4260a0:	ands	w4, w4, #0x1
  4260a4:	csel	x3, x3, xzr, ne  // ne = any
  4260a8:	cmp	w4, #0x0
  4260ac:	csel	x1, x1, xzr, ne  // ne = any
  4260b0:	cmp	x0, x2
  4260b4:	b.lt	4260c4 <wcrtomb@plt+0x214a4>  // b.tstop
  4260b8:	sub	w1, w1, w3
  4260bc:	csinc	w0, w1, wzr, le
  4260c0:	ret
  4260c4:	mov	w0, #0xffffffff            	// #-1
  4260c8:	ret
  4260cc:	nop
  4260d0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4260d4:	ldr	w2, [x1, #3400]
  4260d8:	cmp	w2, w0
  4260dc:	b.ge	4260e4 <wcrtomb@plt+0x214c4>  // b.tcont
  4260e0:	str	w0, [x1, #3400]
  4260e4:	ret
  4260e8:	mov	x2, x0
  4260ec:	cmp	w1, #0x68
  4260f0:	b.eq	42618c <wcrtomb@plt+0x2156c>  // b.none
  4260f4:	b.gt	426138 <wcrtomb@plt+0x21518>
  4260f8:	cmp	w1, #0x52
  4260fc:	b.eq	426164 <wcrtomb@plt+0x21544>  // b.none
  426100:	cmp	w1, #0x53
  426104:	b.ne	42611c <wcrtomb@plt+0x214fc>  // b.any
  426108:	ldr	w1, [x2]
  42610c:	mov	w0, #0x0                   	// #0
  426110:	and	w1, w1, #0xfffffffb
  426114:	str	w1, [x2]
  426118:	ret
  42611c:	cmp	w1, #0x48
  426120:	b.ne	42615c <wcrtomb@plt+0x2153c>  // b.any
  426124:	ldr	w1, [x2]
  426128:	mov	w0, #0x0                   	// #0
  42612c:	and	w1, w1, #0xfffffffd
  426130:	str	w1, [x2]
  426134:	ret
  426138:	cmp	w1, #0x72
  42613c:	b.eq	426178 <wcrtomb@plt+0x21558>  // b.none
  426140:	cmp	w1, #0x73
  426144:	b.ne	42615c <wcrtomb@plt+0x2153c>  // b.any
  426148:	ldr	w1, [x2]
  42614c:	mov	w0, #0x0                   	// #0
  426150:	orr	w1, w1, #0x4
  426154:	str	w1, [x2]
  426158:	ret
  42615c:	mov	w0, #0x1                   	// #1
  426160:	ret
  426164:	ldr	w1, [x2]
  426168:	mov	w0, #0x0                   	// #0
  42616c:	and	w1, w1, #0xfffffffe
  426170:	str	w1, [x2]
  426174:	ret
  426178:	ldr	w1, [x2]
  42617c:	mov	w0, #0x0                   	// #0
  426180:	orr	w1, w1, #0x1
  426184:	str	w1, [x2]
  426188:	ret
  42618c:	ldr	w1, [x2]
  426190:	mov	w0, #0x0                   	// #0
  426194:	orr	w1, w1, #0x2
  426198:	str	w1, [x2]
  42619c:	ret
  4261a0:	stp	x29, x30, [sp, #-32]!
  4261a4:	mov	x29, sp
  4261a8:	str	x19, [sp, #16]
  4261ac:	mov	x19, x0
  4261b0:	mov	x0, #0x20                  	// #32
  4261b4:	bl	440f48 <argp_parse@@Base+0xd060>
  4261b8:	str	xzr, [x0]
  4261bc:	ldr	x1, [x19, #96]
  4261c0:	cbz	x1, 4261e0 <wcrtomb@plt+0x215c0>
  4261c4:	str	x0, [x1]
  4261c8:	ldr	x1, [x19, #104]
  4261cc:	add	x1, x1, #0x1
  4261d0:	stp	x0, x1, [x19, #96]
  4261d4:	ldr	x19, [sp, #16]
  4261d8:	ldp	x29, x30, [sp], #32
  4261dc:	ret
  4261e0:	ldr	x1, [x19, #104]
  4261e4:	str	x0, [x19, #88]
  4261e8:	add	x1, x1, #0x1
  4261ec:	stp	x0, x1, [x19, #96]
  4261f0:	ldr	x19, [sp, #16]
  4261f4:	ldp	x29, x30, [sp], #32
  4261f8:	ret
  4261fc:	nop
  426200:	stp	x29, x30, [sp, #-32]!
  426204:	mov	x29, sp
  426208:	stp	x19, x20, [sp, #16]
  42620c:	mov	w20, w1
  426210:	bl	4261a0 <wcrtomb@plt+0x21580>
  426214:	mov	x19, x0
  426218:	mov	x0, #0x2                   	// #2
  42621c:	str	wzr, [x19, #8]
  426220:	bl	440f48 <argp_parse@@Base+0xd060>
  426224:	str	x0, [x19, #16]
  426228:	strb	w20, [x0]
  42622c:	mov	x1, #0x1                   	// #1
  426230:	ldr	x0, [x19, #16]
  426234:	strb	wzr, [x0, #1]
  426238:	str	x1, [x19, #24]
  42623c:	ldp	x19, x20, [sp, #16]
  426240:	ldp	x29, x30, [sp], #32
  426244:	ret
  426248:	stp	x29, x30, [sp, #-48]!
  42624c:	mov	x29, sp
  426250:	stp	x19, x20, [sp, #16]
  426254:	subs	x20, x2, x1
  426258:	b.ne	426268 <wcrtomb@plt+0x21648>  // b.any
  42625c:	ldp	x19, x20, [sp, #16]
  426260:	ldp	x29, x30, [sp], #48
  426264:	ret
  426268:	mov	x19, x1
  42626c:	str	x21, [sp, #32]
  426270:	bl	4261a0 <wcrtomb@plt+0x21580>
  426274:	mov	x21, x0
  426278:	add	x0, x20, #0x1
  42627c:	str	wzr, [x21, #8]
  426280:	bl	440f48 <argp_parse@@Base+0xd060>
  426284:	str	x0, [x21, #16]
  426288:	mov	x1, x19
  42628c:	mov	x2, x20
  426290:	bl	403f70 <memcpy@plt>
  426294:	ldr	x0, [x21, #16]
  426298:	strb	wzr, [x0, x20]
  42629c:	str	x20, [x21, #24]
  4262a0:	ldp	x19, x20, [sp, #16]
  4262a4:	ldr	x21, [sp, #32]
  4262a8:	ldp	x29, x30, [sp], #48
  4262ac:	ret
  4262b0:	sub	sp, sp, #0x280
  4262b4:	stp	x29, x30, [sp]
  4262b8:	mov	x29, sp
  4262bc:	stp	x19, x20, [sp, #16]
  4262c0:	mov	x19, x0
  4262c4:	mov	x0, #0x70                  	// #112
  4262c8:	stp	x27, x28, [sp, #80]
  4262cc:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  4262d0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4262d4:	mov	x27, x0
  4262d8:	ldr	x0, [x1, #3168]
  4262dc:	cbz	x0, 426658 <wcrtomb@plt+0x21a38>
  4262e0:	str	x27, [x0]
  4262e4:	ldrb	w0, [x19]
  4262e8:	str	x27, [x1, #3168]
  4262ec:	cmp	w0, #0x73
  4262f0:	b.eq	426360 <wcrtomb@plt+0x21740>  // b.none
  4262f4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4262f8:	mov	x0, x19
  4262fc:	add	x1, x1, #0x100
  426300:	mov	x2, #0x6                   	// #6
  426304:	bl	4043c0 <strncmp@plt>
  426308:	cbnz	w0, 4269b8 <wcrtomb@plt+0x21d98>
  42630c:	ldrb	w1, [x19, #6]
  426310:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  426314:	add	x19, x19, #0x6
  426318:	str	wzr, [x3, #384]
  42631c:	cbz	w1, 426348 <wcrtomb@plt+0x21728>
  426320:	add	x3, x3, #0x180
  426324:	b	42633c <wcrtomb@plt+0x2171c>
  426328:	mov	x0, x3
  42632c:	bl	4260e8 <wcrtomb@plt+0x214c8>
  426330:	cbnz	w0, 426908 <wcrtomb@plt+0x21ce8>
  426334:	ldrb	w1, [x19, #1]!
  426338:	cbz	w1, 426348 <wcrtomb@plt+0x21728>
  42633c:	cmp	w1, #0x3b
  426340:	b.ne	426328 <wcrtomb@plt+0x21708>  // b.any
  426344:	add	x19, x19, #0x1
  426348:	mov	x0, x19
  42634c:	ldp	x29, x30, [sp]
  426350:	ldp	x19, x20, [sp, #16]
  426354:	ldp	x27, x28, [sp, #80]
  426358:	add	sp, sp, #0x280
  42635c:	ret
  426360:	stp	x21, x22, [sp, #32]
  426364:	mov	w21, #0x2                   	// #2
  426368:	mov	x22, #0x2                   	// #2
  42636c:	stp	x23, x24, [sp, #48]
  426370:	stp	x25, x26, [sp, #64]
  426374:	add	x25, x19, #0x2
  426378:	ldrb	w0, [x19, #2]
  42637c:	ldrb	w23, [x19, #1]
  426380:	cbnz	w0, 426398 <wcrtomb@plt+0x21778>
  426384:	b	4263cc <wcrtomb@plt+0x217ac>
  426388:	mov	w21, w28
  42638c:	sxtw	x22, w21
  426390:	ldrb	w0, [x19, w21, sxtw]
  426394:	cbz	w0, 4263cc <wcrtomb@plt+0x217ac>
  426398:	cmp	w23, w0
  42639c:	add	w28, w21, #0x1
  4263a0:	b.eq	4267e0 <wcrtomb@plt+0x21bc0>  // b.none
  4263a4:	cmp	w0, #0x5c
  4263a8:	b.ne	426388 <wcrtomb@plt+0x21768>  // b.any
  4263ac:	add	x22, x19, x22
  4263b0:	add	w21, w21, #0x2
  4263b4:	ldrb	w0, [x22, #1]
  4263b8:	cmp	w0, #0x0
  4263bc:	csel	w21, w21, w28, ne  // ne = any
  4263c0:	sxtw	x22, w21
  4263c4:	ldrb	w0, [x19, w21, sxtw]
  4263c8:	cbnz	w0, 426398 <wcrtomb@plt+0x21778>
  4263cc:	cbnz	w23, 4267f4 <wcrtomb@plt+0x21bd4>
  4263d0:	add	w28, w21, #0x1
  4263d4:	mov	w20, w28
  4263d8:	sxtw	x1, w28
  4263dc:	ldrb	w0, [x19, w28, sxtw]
  4263e0:	add	x2, x19, x1
  4263e4:	str	x2, [sp, #104]
  4263e8:	cbz	w0, 42643c <wcrtomb@plt+0x2181c>
  4263ec:	mov	w20, w28
  4263f0:	b	426404 <wcrtomb@plt+0x217e4>
  4263f4:	mov	w20, w0
  4263f8:	sxtw	x1, w20
  4263fc:	ldrb	w0, [x19, w20, sxtw]
  426400:	cbz	w0, 426438 <wcrtomb@plt+0x21818>
  426404:	cmp	w23, w0
  426408:	b.eq	42643c <wcrtomb@plt+0x2181c>  // b.none
  42640c:	cmp	w0, #0x5c
  426410:	add	w0, w20, #0x1
  426414:	b.ne	4263f4 <wcrtomb@plt+0x217d4>  // b.any
  426418:	add	x1, x19, x1
  42641c:	add	w20, w20, #0x2
  426420:	ldrb	w1, [x1, #1]
  426424:	cmp	w1, #0x0
  426428:	csel	w20, w20, w0, ne  // ne = any
  42642c:	sxtw	x1, w20
  426430:	ldrb	w0, [x19, w20, sxtw]
  426434:	cbnz	w0, 426404 <wcrtomb@plt+0x217e4>
  426438:	cbnz	w23, 4267f4 <wcrtomb@plt+0x21bd4>
  42643c:	add	x1, x1, #0x1
  426440:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  426444:	add	x0, x19, x1
  426448:	str	x0, [sp, #120]
  42644c:	ldr	w2, [x2, #384]
  426450:	ldrb	w1, [x19, x1]
  426454:	stp	wzr, w2, [x27, #8]
  426458:	cmp	w1, #0x3b
  42645c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  426460:	b.eq	426900 <wcrtomb@plt+0x21ce0>  // b.none
  426464:	add	x26, x27, #0xc
  426468:	mov	w24, #0x0                   	// #0
  42646c:	mov	w19, #0x1                   	// #1
  426470:	b	4264a4 <wcrtomb@plt+0x21884>
  426474:	cmp	w1, #0x2f
  426478:	b.hi	42668c <wcrtomb@plt+0x21a6c>  // b.pmore
  42647c:	mov	x0, x26
  426480:	bl	4260e8 <wcrtomb@plt+0x214c8>
  426484:	cbnz	w0, 426954 <wcrtomb@plt+0x21d34>
  426488:	ldr	x1, [sp, #120]
  42648c:	add	x0, x1, #0x1
  426490:	str	x0, [sp, #120]
  426494:	ldrb	w1, [x1, #1]
  426498:	cmp	w1, #0x3b
  42649c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4264a0:	b.eq	4264e0 <wcrtomb@plt+0x218c0>  // b.none
  4264a4:	cmp	w1, #0x69
  4264a8:	b.eq	42667c <wcrtomb@plt+0x21a5c>  // b.none
  4264ac:	b.hi	426664 <wcrtomb@plt+0x21a44>  // b.pmore
  4264b0:	cmp	w1, #0x39
  4264b4:	b.ls	426474 <wcrtomb@plt+0x21854>  // b.plast
  4264b8:	cmp	w1, #0x67
  4264bc:	b.ne	42647c <wcrtomb@plt+0x2185c>  // b.any
  4264c0:	ldr	x1, [sp, #120]
  4264c4:	str	w19, [x27, #8]
  4264c8:	add	x0, x1, #0x1
  4264cc:	str	x0, [sp, #120]
  4264d0:	ldrb	w1, [x1, #1]
  4264d4:	cmp	w1, #0x3b
  4264d8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4264dc:	b.ne	4264a4 <wcrtomb@plt+0x21884>  // b.any
  4264e0:	cmp	w1, #0x3b
  4264e4:	b.ne	4264f0 <wcrtomb@plt+0x218d0>  // b.any
  4264e8:	add	x1, x0, #0x1
  4264ec:	str	x1, [sp, #120]
  4264f0:	sub	w0, w21, #0x1
  4264f4:	add	x19, x27, #0x18
  4264f8:	sxtw	x0, w0
  4264fc:	bl	440f48 <argp_parse@@Base+0xd060>
  426500:	add	x22, x0, x22
  426504:	sub	w2, w21, #0x2
  426508:	mov	x26, x0
  42650c:	mov	x1, x25
  426510:	sxtw	x2, w2
  426514:	bl	403f70 <memcpy@plt>
  426518:	sturb	wzr, [x22, #-2]
  42651c:	mov	w2, w24
  426520:	mov	x1, x26
  426524:	mov	x0, x19
  426528:	bl	44ea78 <_obstack_memory_used@@Base+0xc888>
  42652c:	cbnz	w0, 4269d8 <wcrtomb@plt+0x21db8>
  426530:	ldrb	w0, [x26]
  426534:	cmp	w0, #0x5e
  426538:	b.eq	426830 <wcrtomb@plt+0x21c10>  // b.none
  42653c:	cmp	w21, #0x2
  426540:	b.eq	426550 <wcrtomb@plt+0x21930>  // b.none
  426544:	ldurb	w0, [x22, #-3]
  426548:	cmp	w0, #0x24
  42654c:	b.eq	426830 <wcrtomb@plt+0x21c10>  // b.none
  426550:	sub	w20, w20, w28
  426554:	mov	x0, x26
  426558:	bl	4047b0 <free@plt>
  42655c:	add	w0, w20, #0x1
  426560:	sxtw	x0, w0
  426564:	bl	440f48 <argp_parse@@Base+0xd060>
  426568:	ldr	x1, [sp, #104]
  42656c:	mov	x21, x0
  426570:	sxtw	x2, w20
  426574:	bl	403f70 <memcpy@plt>
  426578:	strb	wzr, [x21, w20, sxtw]
  42657c:	str	x21, [sp, #128]
  426580:	mov	x1, x21
  426584:	ldrb	w19, [x21]
  426588:	cbz	w19, 4268f8 <wcrtomb@plt+0x21cd8>
  42658c:	add	x22, sp, #0x72
  426590:	mov	x2, x21
  426594:	mov	w20, #0x1                   	// #1
  426598:	b	4265b4 <wcrtomb@plt+0x21994>
  42659c:	cmp	w19, #0x26
  4265a0:	b.eq	4267b4 <wcrtomb@plt+0x21b94>  // b.none
  4265a4:	add	x2, x2, #0x1
  4265a8:	str	x2, [sp, #128]
  4265ac:	ldrb	w19, [x2]
  4265b0:	cbz	w19, 426620 <wcrtomb@plt+0x21a00>
  4265b4:	cmp	w19, #0x5c
  4265b8:	b.ne	42659c <wcrtomb@plt+0x2197c>  // b.any
  4265bc:	mov	x0, x27
  4265c0:	bl	426248 <wcrtomb@plt+0x21628>
  4265c4:	ldr	x1, [sp, #128]
  4265c8:	add	x0, x1, #0x1
  4265cc:	str	x0, [sp, #128]
  4265d0:	ldrb	w3, [x1, #1]
  4265d4:	cmp	w3, #0x62
  4265d8:	b.eq	426838 <wcrtomb@plt+0x21c18>  // b.none
  4265dc:	b.hi	426760 <wcrtomb@plt+0x21b40>  // b.pmore
  4265e0:	cmp	w3, #0x4c
  4265e4:	b.eq	4268d8 <wcrtomb@plt+0x21cb8>  // b.none
  4265e8:	b.ls	4266dc <wcrtomb@plt+0x21abc>  // b.plast
  4265ec:	cmp	w3, #0x5c
  4265f0:	b.eq	4268d0 <wcrtomb@plt+0x21cb0>  // b.none
  4265f4:	cmp	w3, #0x61
  4265f8:	mov	w1, #0x7                   	// #7
  4265fc:	b.ne	4266a8 <wcrtomb@plt+0x21a88>  // b.any
  426600:	mov	x0, x27
  426604:	bl	426200 <wcrtomb@plt+0x215e0>
  426608:	ldr	x1, [sp, #128]
  42660c:	add	x1, x1, #0x1
  426610:	str	x1, [sp, #128]
  426614:	mov	x2, x1
  426618:	ldrb	w19, [x2]
  42661c:	cbnz	w19, 4265b4 <wcrtomb@plt+0x21994>
  426620:	mov	x0, x27
  426624:	bl	426248 <wcrtomb@plt+0x21628>
  426628:	mov	x0, x21
  42662c:	bl	4047b0 <free@plt>
  426630:	ldr	x19, [sp, #120]
  426634:	ldp	x29, x30, [sp]
  426638:	mov	x0, x19
  42663c:	ldp	x19, x20, [sp, #16]
  426640:	ldp	x21, x22, [sp, #32]
  426644:	ldp	x23, x24, [sp, #48]
  426648:	ldp	x25, x26, [sp, #64]
  42664c:	ldp	x27, x28, [sp, #80]
  426650:	add	sp, sp, #0x280
  426654:	ret
  426658:	add	x2, x1, #0xc60
  42665c:	str	x27, [x2, #8]
  426660:	b	4262e4 <wcrtomb@plt+0x216c4>
  426664:	cmp	w1, #0x78
  426668:	b.ne	42647c <wcrtomb@plt+0x2185c>  // b.any
  42666c:	ldr	x1, [sp, #120]
  426670:	orr	w24, w24, #0x1
  426674:	add	x0, x1, #0x1
  426678:	b	426490 <wcrtomb@plt+0x21870>
  42667c:	ldr	x1, [sp, #120]
  426680:	orr	w24, w24, #0x2
  426684:	add	x0, x1, #0x1
  426688:	b	426490 <wcrtomb@plt+0x21870>
  42668c:	add	x1, sp, #0x78
  426690:	mov	w2, #0x0                   	// #0
  426694:	bl	403fe0 <strtoul@plt>
  426698:	str	w0, [x27, #16]
  42669c:	ldr	x0, [sp, #120]
  4266a0:	sub	x1, x0, #0x1
  4266a4:	b	426490 <wcrtomb@plt+0x21870>
  4266a8:	cmp	w3, #0x55
  4266ac:	b.ne	4266f8 <wcrtomb@plt+0x21ad8>  // b.any
  4266b0:	mov	x0, x27
  4266b4:	bl	4261a0 <wcrtomb@plt+0x21580>
  4266b8:	mov	w2, #0x3                   	// #3
  4266bc:	str	w2, [x0, #16]
  4266c0:	mov	w1, #0x2                   	// #2
  4266c4:	str	w1, [x0, #8]
  4266c8:	ldr	x1, [sp, #128]
  4266cc:	add	x1, x1, #0x1
  4266d0:	str	x1, [sp, #128]
  4266d4:	mov	x2, x1
  4266d8:	b	426618 <wcrtomb@plt+0x219f8>
  4266dc:	cmp	w3, #0x39
  4266e0:	b.hi	426730 <wcrtomb@plt+0x21b10>  // b.pmore
  4266e4:	cmp	w3, #0x2f
  4266e8:	b.hi	426848 <wcrtomb@plt+0x21c28>  // b.pmore
  4266ec:	mov	w1, w3
  4266f0:	cmp	w3, #0x26
  4266f4:	b.eq	426600 <wcrtomb@plt+0x219e0>  // b.none
  4266f8:	cmp	w23, w3
  4266fc:	b.eq	4268e8 <wcrtomb@plt+0x21cc8>  // b.none
  426700:	mov	w4, #0x5c                  	// #92
  426704:	mov	x2, x22
  426708:	add	x1, sp, #0x70
  42670c:	mov	x0, x27
  426710:	strb	w4, [sp, #112]
  426714:	strb	w3, [sp, #113]
  426718:	bl	426248 <wcrtomb@plt+0x21628>
  42671c:	ldr	x1, [sp, #128]
  426720:	add	x1, x1, #0x1
  426724:	str	x1, [sp, #128]
  426728:	mov	x2, x1
  42672c:	b	426618 <wcrtomb@plt+0x219f8>
  426730:	cmp	w3, #0x45
  426734:	b.ne	4266f8 <wcrtomb@plt+0x21ad8>  // b.any
  426738:	mov	x0, x27
  42673c:	bl	4261a0 <wcrtomb@plt+0x21580>
  426740:	str	wzr, [x0, #16]
  426744:	mov	w1, #0x2                   	// #2
  426748:	str	w1, [x0, #8]
  42674c:	ldr	x1, [sp, #128]
  426750:	add	x1, x1, #0x1
  426754:	str	x1, [sp, #128]
  426758:	mov	x2, x1
  42675c:	b	426618 <wcrtomb@plt+0x219f8>
  426760:	cmp	w3, #0x72
  426764:	b.eq	426840 <wcrtomb@plt+0x21c20>  // b.none
  426768:	b.ls	426790 <wcrtomb@plt+0x21b70>  // b.plast
  42676c:	cmp	w3, #0x75
  426770:	b.eq	426880 <wcrtomb@plt+0x21c60>  // b.none
  426774:	cmp	w3, #0x76
  426778:	mov	w1, #0xb                   	// #11
  42677c:	b.eq	426600 <wcrtomb@plt+0x219e0>  // b.none
  426780:	cmp	w3, #0x74
  426784:	mov	w1, #0x9                   	// #9
  426788:	b.eq	426600 <wcrtomb@plt+0x219e0>  // b.none
  42678c:	b	4266f8 <wcrtomb@plt+0x21ad8>
  426790:	cmp	w3, #0x6c
  426794:	b.eq	4268a8 <wcrtomb@plt+0x21c88>  // b.none
  426798:	cmp	w3, #0x6e
  42679c:	mov	w1, #0xa                   	// #10
  4267a0:	b.eq	426600 <wcrtomb@plt+0x219e0>  // b.none
  4267a4:	cmp	w3, #0x66
  4267a8:	mov	w1, #0xc                   	// #12
  4267ac:	b.eq	426600 <wcrtomb@plt+0x219e0>  // b.none
  4267b0:	b	4266f8 <wcrtomb@plt+0x21ad8>
  4267b4:	mov	x0, x27
  4267b8:	bl	426248 <wcrtomb@plt+0x21628>
  4267bc:	mov	x0, x27
  4267c0:	bl	4261a0 <wcrtomb@plt+0x21580>
  4267c4:	str	xzr, [x0, #16]
  4267c8:	str	w20, [x0, #8]
  4267cc:	ldr	x1, [sp, #128]
  4267d0:	add	x1, x1, #0x1
  4267d4:	str	x1, [sp, #128]
  4267d8:	mov	x2, x1
  4267dc:	b	4265ac <wcrtomb@plt+0x2198c>
  4267e0:	ldrb	w0, [x19, w28, sxtw]
  4267e4:	sxtw	x1, w28
  4267e8:	add	x2, x19, x1
  4267ec:	str	x2, [sp, #104]
  4267f0:	cbnz	w0, 4263ec <wcrtomb@plt+0x217cc>
  4267f4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4267f8:	ldr	x0, [x0, #952]
  4267fc:	cbz	x0, 426804 <wcrtomb@plt+0x21be4>
  426800:	blr	x0
  426804:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  426808:	add	x1, x1, #0x128
  42680c:	mov	w2, #0x5                   	// #5
  426810:	mov	x0, #0x0                   	// #0
  426814:	bl	4049c0 <dcgettext@plt>
  426818:	mov	x2, x0
  42681c:	mov	w1, #0x0                   	// #0
  426820:	mov	w0, #0x0                   	// #0
  426824:	bl	404050 <error@plt>
  426828:	mov	w0, #0x2                   	// #2
  42682c:	bl	423220 <wcrtomb@plt+0x1e600>
  426830:	str	wzr, [x27, #8]
  426834:	b	426550 <wcrtomb@plt+0x21930>
  426838:	mov	w1, #0x8                   	// #8
  42683c:	b	426600 <wcrtomb@plt+0x219e0>
  426840:	mov	w1, #0xd                   	// #13
  426844:	b	426600 <wcrtomb@plt+0x219e0>
  426848:	add	x1, sp, #0x80
  42684c:	mov	w2, #0xa                   	// #10
  426850:	bl	403fe0 <strtoul@plt>
  426854:	mov	x19, x0
  426858:	ldr	x1, [x27, #72]
  42685c:	cmp	x1, x0
  426860:	b.cc	426998 <wcrtomb@plt+0x21d78>  // b.lo, b.ul, b.last
  426864:	mov	x0, x27
  426868:	bl	4261a0 <wcrtomb@plt+0x21580>
  42686c:	str	x19, [x0, #16]
  426870:	str	w20, [x0, #8]
  426874:	ldr	x1, [sp, #128]
  426878:	mov	x2, x1
  42687c:	b	426618 <wcrtomb@plt+0x219f8>
  426880:	mov	x0, x27
  426884:	bl	4261a0 <wcrtomb@plt+0x21580>
  426888:	str	w20, [x0, #16]
  42688c:	mov	w1, #0x2                   	// #2
  426890:	str	w1, [x0, #8]
  426894:	ldr	x1, [sp, #128]
  426898:	add	x1, x1, #0x1
  42689c:	str	x1, [sp, #128]
  4268a0:	mov	x2, x1
  4268a4:	b	426618 <wcrtomb@plt+0x219f8>
  4268a8:	mov	x0, x27
  4268ac:	bl	4261a0 <wcrtomb@plt+0x21580>
  4268b0:	mov	w1, #0x2                   	// #2
  4268b4:	str	w1, [x0, #16]
  4268b8:	str	w1, [x0, #8]
  4268bc:	ldr	x1, [sp, #128]
  4268c0:	add	x1, x1, #0x1
  4268c4:	str	x1, [sp, #128]
  4268c8:	mov	x2, x1
  4268cc:	b	426618 <wcrtomb@plt+0x219f8>
  4268d0:	mov	w1, w19
  4268d4:	b	426600 <wcrtomb@plt+0x219e0>
  4268d8:	mov	x0, x27
  4268dc:	bl	4261a0 <wcrtomb@plt+0x21580>
  4268e0:	mov	w2, #0x4                   	// #4
  4268e4:	b	4266bc <wcrtomb@plt+0x21a9c>
  4268e8:	mov	w1, w23
  4268ec:	mov	x0, x27
  4268f0:	bl	426200 <wcrtomb@plt+0x215e0>
  4268f4:	b	42671c <wcrtomb@plt+0x21afc>
  4268f8:	mov	x2, x21
  4268fc:	b	426620 <wcrtomb@plt+0x21a00>
  426900:	mov	w24, #0x0                   	// #0
  426904:	b	4264e0 <wcrtomb@plt+0x218c0>
  426908:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42690c:	stp	x21, x22, [sp, #32]
  426910:	ldr	x0, [x0, #952]
  426914:	stp	x23, x24, [sp, #48]
  426918:	stp	x25, x26, [sp, #64]
  42691c:	cbz	x0, 426924 <wcrtomb@plt+0x21d04>
  426920:	blr	x0
  426924:	mov	w2, #0x5                   	// #5
  426928:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42692c:	mov	x0, #0x0                   	// #0
  426930:	add	x1, x1, #0x108
  426934:	bl	4049c0 <dcgettext@plt>
  426938:	mov	x2, x0
  42693c:	ldrb	w3, [x19]
  426940:	mov	w1, #0x0                   	// #0
  426944:	mov	w0, #0x0                   	// #0
  426948:	bl	404050 <error@plt>
  42694c:	mov	w0, #0x2                   	// #2
  426950:	bl	423220 <wcrtomb@plt+0x1e600>
  426954:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  426958:	ldr	x0, [x0, #952]
  42695c:	cbz	x0, 426964 <wcrtomb@plt+0x21d44>
  426960:	blr	x0
  426964:	mov	w2, #0x5                   	// #5
  426968:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42696c:	mov	x0, #0x0                   	// #0
  426970:	add	x1, x1, #0x148
  426974:	bl	4049c0 <dcgettext@plt>
  426978:	mov	x2, x0
  42697c:	ldr	x3, [sp, #120]
  426980:	mov	w1, #0x0                   	// #0
  426984:	mov	w0, #0x0                   	// #0
  426988:	ldrb	w3, [x3]
  42698c:	bl	404050 <error@plt>
  426990:	mov	w0, #0x2                   	// #2
  426994:	bl	423220 <wcrtomb@plt+0x1e600>
  426998:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42699c:	ldr	x0, [x0, #952]
  4269a0:	cbz	x0, 4269a8 <wcrtomb@plt+0x21d88>
  4269a4:	blr	x0
  4269a8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4269ac:	mov	w2, #0x5                   	// #5
  4269b0:	add	x1, x1, #0x1a0
  4269b4:	b	426810 <wcrtomb@plt+0x21bf0>
  4269b8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4269bc:	stp	x21, x22, [sp, #32]
  4269c0:	ldr	x0, [x0, #952]
  4269c4:	stp	x23, x24, [sp, #48]
  4269c8:	stp	x25, x26, [sp, #64]
  4269cc:	cbz	x0, 426804 <wcrtomb@plt+0x21be4>
  4269d0:	blr	x0
  4269d4:	b	426804 <wcrtomb@plt+0x21be4>
  4269d8:	mov	x1, x19
  4269dc:	add	x2, sp, #0x80
  4269e0:	mov	x3, #0x200                 	// #512
  4269e4:	bl	44eb90 <_obstack_memory_used@@Base+0xc9a0>
  4269e8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4269ec:	ldr	x0, [x0, #952]
  4269f0:	cbz	x0, 4269f8 <wcrtomb@plt+0x21dd8>
  4269f4:	blr	x0
  4269f8:	mov	w2, #0x5                   	// #5
  4269fc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  426a00:	mov	x0, #0x0                   	// #0
  426a04:	add	x1, x1, #0x178
  426a08:	bl	4049c0 <dcgettext@plt>
  426a0c:	mov	x2, x0
  426a10:	add	x3, sp, #0x80
  426a14:	mov	w1, #0x0                   	// #0
  426a18:	mov	w0, #0x0                   	// #0
  426a1c:	bl	404050 <error@plt>
  426a20:	mov	w0, #0x2                   	// #2
  426a24:	bl	423220 <wcrtomb@plt+0x1e600>
  426a28:	stp	x29, x30, [sp, #-64]!
  426a2c:	mov	x29, sp
  426a30:	stp	x21, x22, [sp, #32]
  426a34:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  426a38:	add	x22, x22, #0xc60
  426a3c:	stp	x19, x20, [sp, #16]
  426a40:	mov	x19, x2
  426a44:	mov	w20, w0
  426a48:	ldp	x21, x2, [x22, #16]
  426a4c:	str	x23, [sp, #48]
  426a50:	mov	x23, x1
  426a54:	cmp	x2, x19
  426a58:	b.cc	426b00 <wcrtomb@plt+0x21ee0>  // b.lo, b.ul, b.last
  426a5c:	mov	x1, x23
  426a60:	mov	x2, x19
  426a64:	mov	x0, x21
  426a68:	bl	403f70 <memcpy@plt>
  426a6c:	cmp	w20, #0x3
  426a70:	b.eq	426b30 <wcrtomb@plt+0x21f10>  // b.none
  426a74:	b.hi	426ab4 <wcrtomb@plt+0x21e94>  // b.pmore
  426a78:	cmp	w20, #0x1
  426a7c:	b.eq	426b78 <wcrtomb@plt+0x21f58>  // b.none
  426a80:	cmp	w20, #0x2
  426a84:	b.ne	426a9c <wcrtomb@plt+0x21e7c>  // b.any
  426a88:	bl	4041f0 <__ctype_tolower_loc@plt>
  426a8c:	ldrb	w1, [x21]
  426a90:	ldr	x0, [x0]
  426a94:	ldr	w0, [x0, x1, lsl #2]
  426a98:	strb	w0, [x21]
  426a9c:	mov	x0, x21
  426aa0:	ldp	x19, x20, [sp, #16]
  426aa4:	ldp	x21, x22, [sp, #32]
  426aa8:	ldr	x23, [sp, #48]
  426aac:	ldp	x29, x30, [sp], #64
  426ab0:	ret
  426ab4:	cmp	w20, #0x4
  426ab8:	b.ne	426a9c <wcrtomb@plt+0x21e7c>  // b.any
  426abc:	add	x19, x21, x19
  426ac0:	cmp	x19, x21
  426ac4:	b.ls	426a9c <wcrtomb@plt+0x21e7c>  // b.plast
  426ac8:	bl	4041f0 <__ctype_tolower_loc@plt>
  426acc:	mov	x1, x21
  426ad0:	ldrb	w3, [x1]
  426ad4:	ldr	x2, [x0]
  426ad8:	ldr	w2, [x2, x3, lsl #2]
  426adc:	strb	w2, [x1], #1
  426ae0:	cmp	x1, x19
  426ae4:	b.ne	426ad0 <wcrtomb@plt+0x21eb0>  // b.any
  426ae8:	mov	x0, x21
  426aec:	ldp	x19, x20, [sp, #16]
  426af0:	ldp	x21, x22, [sp, #32]
  426af4:	ldr	x23, [sp, #48]
  426af8:	ldp	x29, x30, [sp], #64
  426afc:	ret
  426b00:	mov	x0, x21
  426b04:	mov	x1, x19
  426b08:	str	x19, [x22, #24]
  426b0c:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  426b10:	mov	x21, x0
  426b14:	mov	x1, x23
  426b18:	mov	x2, x19
  426b1c:	str	x0, [x22, #16]
  426b20:	mov	x0, x21
  426b24:	bl	403f70 <memcpy@plt>
  426b28:	cmp	w20, #0x3
  426b2c:	b.ne	426a74 <wcrtomb@plt+0x21e54>  // b.any
  426b30:	add	x19, x21, x19
  426b34:	cmp	x19, x21
  426b38:	b.ls	426a9c <wcrtomb@plt+0x21e7c>  // b.plast
  426b3c:	bl	404540 <__ctype_toupper_loc@plt>
  426b40:	mov	x1, x21
  426b44:	nop
  426b48:	ldrb	w3, [x1]
  426b4c:	ldr	x2, [x0]
  426b50:	ldr	w2, [x2, x3, lsl #2]
  426b54:	strb	w2, [x1], #1
  426b58:	cmp	x1, x19
  426b5c:	b.ne	426b48 <wcrtomb@plt+0x21f28>  // b.any
  426b60:	mov	x0, x21
  426b64:	ldp	x19, x20, [sp, #16]
  426b68:	ldp	x21, x22, [sp, #32]
  426b6c:	ldr	x23, [sp, #48]
  426b70:	ldp	x29, x30, [sp], #64
  426b74:	ret
  426b78:	bl	404540 <__ctype_toupper_loc@plt>
  426b7c:	ldrb	w1, [x21]
  426b80:	ldr	x0, [x0]
  426b84:	ldr	w0, [x0, x1, lsl #2]
  426b88:	strb	w0, [x21]
  426b8c:	mov	x0, x21
  426b90:	ldp	x19, x20, [sp, #16]
  426b94:	ldp	x21, x22, [sp, #32]
  426b98:	ldr	x23, [sp, #48]
  426b9c:	ldp	x29, x30, [sp], #64
  426ba0:	ret
  426ba4:	nop
  426ba8:	ldrb	w1, [x0]
  426bac:	cbz	w1, 426bcc <wcrtomb@plt+0x21fac>
  426bb0:	stp	x29, x30, [sp, #-16]!
  426bb4:	mov	x29, sp
  426bb8:	bl	4262b0 <wcrtomb@plt+0x21690>
  426bbc:	ldrb	w1, [x0]
  426bc0:	cbnz	w1, 426bb8 <wcrtomb@plt+0x21f98>
  426bc4:	ldp	x29, x30, [sp], #16
  426bc8:	ret
  426bcc:	ret
  426bd0:	stp	x29, x30, [sp, #-160]!
  426bd4:	mov	x29, sp
  426bd8:	stp	x25, x26, [sp, #64]
  426bdc:	adrp	x25, 482000 <_obstack_memory_used@@Base+0x3fe10>
  426be0:	add	x25, x25, #0xc60
  426be4:	stp	x19, x20, [sp, #16]
  426be8:	stp	x2, x0, [sp, #136]
  426bec:	ldr	x19, [x0]
  426bf0:	stp	x21, x22, [sp, #32]
  426bf4:	ldrb	w0, [x25, #32]
  426bf8:	str	w1, [sp, #124]
  426bfc:	str	x3, [sp, #152]
  426c00:	cbz	w0, 4270c0 <wcrtomb@plt+0x224a0>
  426c04:	ldr	x22, [x25, #8]
  426c08:	cbz	x22, 427060 <wcrtomb@plt+0x22440>
  426c0c:	mov	w20, #0x0                   	// #0
  426c10:	stp	x23, x24, [sp, #48]
  426c14:	stp	x27, x28, [sp, #80]
  426c18:	add	x28, x25, #0x28
  426c1c:	b	426c28 <wcrtomb@plt+0x22008>
  426c20:	ldr	x22, [x22]
  426c24:	cbz	x22, 426dec <wcrtomb@plt+0x221cc>
  426c28:	ldr	w0, [x22, #12]
  426c2c:	ldr	w1, [sp, #124]
  426c30:	tst	w1, w0
  426c34:	b.eq	426c20 <wcrtomb@plt+0x22000>  // b.none
  426c38:	ldr	x0, [x22, #72]
  426c3c:	add	x0, x0, #0x1
  426c40:	lsl	x0, x0, #4
  426c44:	bl	440f48 <argp_parse@@Base+0xd060>
  426c48:	ldrb	w1, [x19]
  426c4c:	mov	x23, x0
  426c50:	cbz	w1, 426e6c <wcrtomb@plt+0x2224c>
  426c54:	add	x0, x22, #0x18
  426c58:	mov	w24, #0x0                   	// #0
  426c5c:	mov	w20, #0x0                   	// #0
  426c60:	stp	xzr, x0, [sp, #104]
  426c64:	b	426ce8 <wcrtomb@plt+0x220c8>
  426c68:	ldp	x26, x21, [x23]
  426c6c:	cbz	x26, 426c98 <wcrtomb@plt+0x22078>
  426c70:	ldp	x0, x1, [x28, #24]
  426c74:	sub	x1, x1, x0
  426c78:	cmp	x26, x1
  426c7c:	b.hi	426ec0 <wcrtomb@plt+0x222a0>  // b.pmore
  426c80:	mov	x2, x26
  426c84:	mov	x1, x19
  426c88:	bl	403f70 <memcpy@plt>
  426c8c:	ldr	x0, [x28, #24]
  426c90:	add	x2, x0, x26
  426c94:	str	x2, [x28, #24]
  426c98:	ldr	x1, [sp, #104]
  426c9c:	ldr	w0, [x22, #16]
  426ca0:	add	x1, x1, #0x1
  426ca4:	str	x1, [sp, #104]
  426ca8:	cbz	w0, 426ee8 <wcrtomb@plt+0x222c8>
  426cac:	cmp	x1, w0, uxtw
  426cb0:	b.cs	426ee8 <wcrtomb@plt+0x222c8>  // b.hs, b.nlast
  426cb4:	ldp	x0, x1, [x28, #24]
  426cb8:	sub	x1, x1, x0
  426cbc:	cmp	x21, x1
  426cc0:	b.hi	426ed4 <wcrtomb@plt+0x222b4>  // b.pmore
  426cc4:	mov	x2, x21
  426cc8:	mov	x1, x19
  426ccc:	bl	403f70 <memcpy@plt>
  426cd0:	add	x19, x19, x21
  426cd4:	ldr	x0, [x28, #24]
  426cd8:	add	x21, x0, x21
  426cdc:	str	x21, [x28, #24]
  426ce0:	ldrb	w0, [x19]
  426ce4:	cbz	w0, 426e6c <wcrtomb@plt+0x2224c>
  426ce8:	ldr	x0, [sp, #112]
  426cec:	mov	x3, x23
  426cf0:	ldr	x2, [x22, #72]
  426cf4:	mov	x1, x19
  426cf8:	mov	w4, #0x0                   	// #0
  426cfc:	add	x2, x2, #0x1
  426d00:	bl	44ec70 <_obstack_memory_used@@Base+0xca80>
  426d04:	cbz	w0, 426c68 <wcrtomb@plt+0x22048>
  426d08:	mov	x0, x19
  426d0c:	bl	403ff0 <strlen@plt>
  426d10:	mov	x21, x0
  426d14:	ldp	x1, x0, [x28, #24]
  426d18:	sub	x0, x0, x1
  426d1c:	cmp	x21, x0
  426d20:	b.hi	426e58 <wcrtomb@plt+0x22238>  // b.pmore
  426d24:	mov	x0, x1
  426d28:	mov	x2, x21
  426d2c:	mov	x1, x19
  426d30:	bl	403f70 <memcpy@plt>
  426d34:	ldr	x0, [x28, #24]
  426d38:	add	x0, x0, x21
  426d3c:	str	x0, [x28, #24]
  426d40:	ldr	w0, [x22, #8]
  426d44:	add	x19, x19, x21
  426d48:	cbnz	w0, 426ce0 <wcrtomb@plt+0x220c0>
  426d4c:	mov	x0, x19
  426d50:	bl	403ff0 <strlen@plt>
  426d54:	mov	x20, x0
  426d58:	ldp	x0, x1, [x28, #24]
  426d5c:	sub	x1, x1, x0
  426d60:	cmp	x20, x1
  426d64:	b.hi	4270ac <wcrtomb@plt+0x2248c>  // b.pmore
  426d68:	mov	x1, x19
  426d6c:	mov	x2, x20
  426d70:	bl	403f70 <memcpy@plt>
  426d74:	ldr	x1, [x28, #24]
  426d78:	ldr	x0, [x28, #32]
  426d7c:	add	x2, x1, x20
  426d80:	str	x2, [x28, #24]
  426d84:	cmp	x0, x2
  426d88:	b.eq	426e7c <wcrtomb@plt+0x2225c>  // b.none
  426d8c:	add	x0, x2, #0x1
  426d90:	str	x0, [x28, #24]
  426d94:	strb	wzr, [x2]
  426d98:	mov	x0, x23
  426d9c:	bl	4047b0 <free@plt>
  426da0:	ldp	x19, x2, [x28, #16]
  426da4:	cmp	x19, x2
  426da8:	b.eq	426eb0 <wcrtomb@plt+0x22290>  // b.none
  426dac:	ldr	x0, [x28, #48]
  426db0:	ldr	x1, [x28, #8]
  426db4:	add	x2, x2, x0
  426db8:	ldr	x3, [x28, #32]
  426dbc:	bic	x0, x2, x0
  426dc0:	str	x0, [x28, #24]
  426dc4:	sub	x2, x0, x1
  426dc8:	sub	x1, x3, x1
  426dcc:	cmp	x2, x1
  426dd0:	b.ls	426ddc <wcrtomb@plt+0x221bc>  // b.plast
  426dd4:	mov	x0, x3
  426dd8:	str	x3, [x28, #24]
  426ddc:	ldr	x22, [x22]
  426de0:	str	x0, [x28, #16]
  426de4:	mov	w20, #0x1                   	// #1
  426de8:	cbnz	x22, 426c28 <wcrtomb@plt+0x22008>
  426dec:	cbz	w20, 427058 <wcrtomb@plt+0x22438>
  426df0:	ldr	x2, [sp, #136]
  426df4:	mov	x1, x19
  426df8:	cbz	x2, 426e0c <wcrtomb@plt+0x221ec>
  426dfc:	ldr	x1, [sp, #152]
  426e00:	mov	x0, x19
  426e04:	blr	x2
  426e08:	mov	x1, x0
  426e0c:	ldr	x0, [sp, #144]
  426e10:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  426e14:	ldr	x1, [x25, #48]
  426e18:	cmp	x1, x19
  426e1c:	b.cs	426e2c <wcrtomb@plt+0x2220c>  // b.hs, b.nlast
  426e20:	ldr	x1, [x25, #72]
  426e24:	cmp	x1, x19
  426e28:	b.hi	4270ec <wcrtomb@plt+0x224cc>  // b.pmore
  426e2c:	mov	x1, x19
  426e30:	add	x0, x25, #0x28
  426e34:	bl	442160 <_obstack_free@@Base>
  426e38:	ldp	x23, x24, [sp, #48]
  426e3c:	ldp	x27, x28, [sp, #80]
  426e40:	mov	w0, w20
  426e44:	ldp	x19, x20, [sp, #16]
  426e48:	ldp	x21, x22, [sp, #32]
  426e4c:	ldp	x25, x26, [sp, #64]
  426e50:	ldp	x29, x30, [sp], #160
  426e54:	ret
  426e58:	mov	x1, x21
  426e5c:	mov	x0, x28
  426e60:	bl	442010 <_obstack_newchunk@@Base>
  426e64:	ldr	x1, [x28, #24]
  426e68:	b	426d24 <wcrtomb@plt+0x22104>
  426e6c:	ldr	x2, [x28, #24]
  426e70:	ldr	x0, [x28, #32]
  426e74:	cmp	x0, x2
  426e78:	b.ne	426d8c <wcrtomb@plt+0x2216c>  // b.any
  426e7c:	mov	x0, x28
  426e80:	mov	x1, #0x1                   	// #1
  426e84:	bl	442010 <_obstack_newchunk@@Base>
  426e88:	ldr	x2, [x28, #24]
  426e8c:	add	x0, x2, #0x1
  426e90:	str	x0, [x28, #24]
  426e94:	strb	wzr, [x2]
  426e98:	mov	x0, x23
  426e9c:	bl	4047b0 <free@plt>
  426ea0:	ldp	x19, x2, [x28, #16]
  426ea4:	cmp	x19, x2
  426ea8:	b.ne	426dac <wcrtomb@plt+0x2218c>  // b.any
  426eac:	nop
  426eb0:	ldrb	w0, [x28, #80]
  426eb4:	orr	w0, w0, #0x2
  426eb8:	strb	w0, [x28, #80]
  426ebc:	b	426dac <wcrtomb@plt+0x2218c>
  426ec0:	mov	x0, x28
  426ec4:	mov	x1, x26
  426ec8:	bl	442010 <_obstack_newchunk@@Base>
  426ecc:	ldr	x0, [x28, #24]
  426ed0:	b	426c80 <wcrtomb@plt+0x22060>
  426ed4:	mov	x0, x28
  426ed8:	mov	x1, x21
  426edc:	bl	442010 <_obstack_newchunk@@Base>
  426ee0:	ldr	x0, [x28, #24]
  426ee4:	b	426cc4 <wcrtomb@plt+0x220a4>
  426ee8:	ldr	x26, [x22, #88]
  426eec:	cbnz	x26, 426f00 <wcrtomb@plt+0x222e0>
  426ef0:	b	426d40 <wcrtomb@plt+0x22120>
  426ef4:	cbz	w0, 426f88 <wcrtomb@plt+0x22368>
  426ef8:	ldr	x26, [x26]
  426efc:	cbz	x26, 426d40 <wcrtomb@plt+0x22120>
  426f00:	ldr	w0, [x26, #8]
  426f04:	cmp	w0, #0x1
  426f08:	b.eq	426f2c <wcrtomb@plt+0x2230c>  // b.none
  426f0c:	cmp	w0, #0x2
  426f10:	b.ne	426ef4 <wcrtomb@plt+0x222d4>  // b.any
  426f14:	ldr	w0, [x26, #16]
  426f18:	cmp	w0, #0x2
  426f1c:	b.hi	42702c <wcrtomb@plt+0x2240c>  // b.pmore
  426f20:	cbnz	w0, 427014 <wcrtomb@plt+0x223f4>
  426f24:	mov	w20, #0x0                   	// #0
  426f28:	b	426ef8 <wcrtomb@plt+0x222d8>
  426f2c:	ldr	x0, [x26, #16]
  426f30:	lsl	x0, x0, #4
  426f34:	add	x1, x23, x0
  426f38:	ldr	x4, [x23, x0]
  426f3c:	cmn	x4, #0x1
  426f40:	b.eq	426ef8 <wcrtomb@plt+0x222d8>  // b.none
  426f44:	ldr	x2, [x1, #8]
  426f48:	cmn	x2, #0x1
  426f4c:	b.eq	426ef8 <wcrtomb@plt+0x222d8>  // b.none
  426f50:	sub	x27, x2, x4
  426f54:	add	x4, x19, x4
  426f58:	cbnz	w20, 426fc0 <wcrtomb@plt+0x223a0>
  426f5c:	ldp	x0, x1, [x28, #24]
  426f60:	sub	x1, x1, x0
  426f64:	cmp	x27, x1
  426f68:	b.hi	426fa4 <wcrtomb@plt+0x22384>  // b.pmore
  426f6c:	mov	x2, x27
  426f70:	mov	x1, x4
  426f74:	bl	403f70 <memcpy@plt>
  426f78:	ldr	x0, [x28, #24]
  426f7c:	add	x2, x0, x27
  426f80:	str	x2, [x28, #24]
  426f84:	b	426ef8 <wcrtomb@plt+0x222d8>
  426f88:	ldr	x27, [x26, #24]
  426f8c:	cbnz	w20, 426fec <wcrtomb@plt+0x223cc>
  426f90:	ldr	x4, [x26, #16]
  426f94:	ldp	x0, x1, [x28, #24]
  426f98:	sub	x1, x1, x0
  426f9c:	cmp	x1, x27
  426fa0:	b.cs	426f6c <wcrtomb@plt+0x2234c>  // b.hs, b.nlast
  426fa4:	mov	x0, x28
  426fa8:	mov	x1, x27
  426fac:	str	x4, [sp, #128]
  426fb0:	bl	442010 <_obstack_newchunk@@Base>
  426fb4:	ldr	x0, [x28, #24]
  426fb8:	ldr	x4, [sp, #128]
  426fbc:	b	426f6c <wcrtomb@plt+0x2234c>
  426fc0:	mov	x1, x4
  426fc4:	mov	x2, x27
  426fc8:	mov	w0, w20
  426fcc:	bl	426a28 <wcrtomb@plt+0x21e08>
  426fd0:	sub	w1, w20, #0x1
  426fd4:	mov	x4, x0
  426fd8:	cmp	w1, #0x1
  426fdc:	b.hi	426f5c <wcrtomb@plt+0x2233c>  // b.pmore
  426fe0:	mov	w20, w24
  426fe4:	mov	w24, #0x0                   	// #0
  426fe8:	b	426f5c <wcrtomb@plt+0x2233c>
  426fec:	ldr	x1, [x26, #16]
  426ff0:	mov	x2, x27
  426ff4:	mov	w0, w20
  426ff8:	bl	426a28 <wcrtomb@plt+0x21e08>
  426ffc:	mov	x4, x0
  427000:	sub	w1, w20, #0x1
  427004:	cmp	w1, #0x1
  427008:	b.ls	42703c <wcrtomb@plt+0x2241c>  // b.plast
  42700c:	ldr	x27, [x26, #24]
  427010:	b	426f94 <wcrtomb@plt+0x22374>
  427014:	cbz	w24, 42704c <wcrtomb@plt+0x2242c>
  427018:	sub	w1, w24, #0x3
  42701c:	cmp	w1, #0x1
  427020:	b.ls	42704c <wcrtomb@plt+0x2242c>  // b.plast
  427024:	mov	w20, w0
  427028:	b	426ef8 <wcrtomb@plt+0x222d8>
  42702c:	sub	w1, w0, #0x3
  427030:	cmp	w1, #0x1
  427034:	csel	w20, w20, w0, hi  // hi = pmore
  427038:	b	426ef8 <wcrtomb@plt+0x222d8>
  42703c:	mov	w20, w24
  427040:	mov	w24, #0x0                   	// #0
  427044:	ldr	x27, [x26, #24]
  427048:	b	426f94 <wcrtomb@plt+0x22374>
  42704c:	mov	w24, w20
  427050:	mov	w20, w0
  427054:	b	426ef8 <wcrtomb@plt+0x222d8>
  427058:	ldp	x23, x24, [sp, #48]
  42705c:	ldp	x27, x28, [sp, #80]
  427060:	mov	w20, #0x0                   	// #0
  427064:	ldr	x2, [sp, #136]
  427068:	cbz	x2, 426e40 <wcrtomb@plt+0x22220>
  42706c:	ldp	x21, x1, [sp, #144]
  427070:	str	xzr, [x21]
  427074:	mov	x0, x19
  427078:	mov	w20, #0x1                   	// #1
  42707c:	blr	x2
  427080:	mov	x1, x0
  427084:	mov	x0, x21
  427088:	bl	41aaf8 <wcrtomb@plt+0x15ed8>
  42708c:	mov	x0, x19
  427090:	bl	4047b0 <free@plt>
  427094:	mov	w0, w20
  427098:	ldp	x19, x20, [sp, #16]
  42709c:	ldp	x21, x22, [sp, #32]
  4270a0:	ldp	x25, x26, [sp, #64]
  4270a4:	ldp	x29, x30, [sp], #160
  4270a8:	ret
  4270ac:	mov	x0, x28
  4270b0:	mov	x1, x20
  4270b4:	bl	442010 <_obstack_newchunk@@Base>
  4270b8:	ldr	x0, [x28, #24]
  4270bc:	b	426d68 <wcrtomb@plt+0x22148>
  4270c0:	add	x0, x25, #0x28
  4270c4:	adrp	x4, 404000 <fputs@plt>
  4270c8:	adrp	x3, 440000 <argp_parse@@Base+0xc118>
  4270cc:	add	x4, x4, #0x7b0
  4270d0:	add	x3, x3, #0xf48
  4270d4:	mov	x2, #0x0                   	// #0
  4270d8:	mov	x1, #0x0                   	// #0
  4270dc:	bl	441fe0 <_obstack_begin@@Base>
  4270e0:	mov	w0, #0x1                   	// #1
  4270e4:	strb	w0, [x25, #32]
  4270e8:	b	426c04 <wcrtomb@plt+0x21fe4>
  4270ec:	stp	x19, x19, [x25, #56]
  4270f0:	mov	w0, w20
  4270f4:	ldp	x19, x20, [sp, #16]
  4270f8:	ldp	x21, x22, [sp, #32]
  4270fc:	ldp	x23, x24, [sp, #48]
  427100:	ldp	x25, x26, [sp, #64]
  427104:	ldp	x27, x28, [sp, #80]
  427108:	ldp	x29, x30, [sp], #160
  42710c:	ret
  427110:	mov	x3, #0x0                   	// #0
  427114:	mov	x2, #0x0                   	// #0
  427118:	b	426bd0 <wcrtomb@plt+0x21fb0>
  42711c:	nop
  427120:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427124:	ldr	x0, [x0, #3176]
  427128:	cmp	x0, #0x0
  42712c:	cset	w0, ne  // ne = any
  427130:	ret
  427134:	nop
  427138:	stp	x29, x30, [sp, #-96]!
  42713c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427140:	mov	x29, sp
  427144:	stp	x27, x28, [sp, #80]
  427148:	adrp	x27, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42714c:	stp	x19, x20, [sp, #16]
  427150:	ldr	x20, [x27, #3296]
  427154:	stp	x25, x26, [sp, #64]
  427158:	ldr	w26, [x1, #4040]
  42715c:	cbz	x20, 4273a0 <wcrtomb@plt+0x22780>
  427160:	stp	x21, x22, [sp, #32]
  427164:	add	x21, x27, #0xce0
  427168:	mov	x22, #0x0                   	// #0
  42716c:	stp	x23, x24, [sp, #48]
  427170:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  427174:	and	w23, w0, #0xff
  427178:	add	x24, x24, #0x888
  42717c:	adrp	x25, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427180:	mov	x19, x20
  427184:	ldr	x20, [x20]
  427188:	cbnz	w23, 42719c <wcrtomb@plt+0x2257c>
  42718c:	ldr	x0, [x25, #3896]
  427190:	ldr	x1, [x19, #32]
  427194:	cmp	x1, x0
  427198:	b.cs	4271d0 <wcrtomb@plt+0x225b0>  // b.hs, b.nlast
  42719c:	ldr	w0, [x19, #8]
  4271a0:	bl	41bb88 <wcrtomb@plt+0x16f68>
  4271a4:	ldrb	w0, [x19, #24]
  4271a8:	cbz	w0, 427318 <wcrtomb@plt+0x226f8>
  4271ac:	ldr	w0, [x19, #8]
  4271b0:	ldr	x28, [x19, #16]
  4271b4:	cbz	w0, 4272b4 <wcrtomb@plt+0x22694>
  4271b8:	ldrb	w0, [x28]
  4271bc:	cbz	w0, 4271d0 <wcrtomb@plt+0x225b0>
  4271c0:	cmp	w0, #0x2e
  4271c4:	b.ne	4272b4 <wcrtomb@plt+0x22694>  // b.any
  4271c8:	ldrb	w0, [x28, #1]
  4271cc:	cbnz	w0, 4272b4 <wcrtomb@plt+0x22694>
  4271d0:	mov	x22, x19
  4271d4:	cbnz	x20, 427180 <wcrtomb@plt+0x22560>
  4271d8:	ldr	x20, [x27, #3296]
  4271dc:	cbz	x20, 427398 <wcrtomb@plt+0x22778>
  4271e0:	cbz	w23, 427370 <wcrtomb@plt+0x22750>
  4271e4:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4271e8:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  4271ec:	add	x21, x21, #0xce0
  4271f0:	add	x23, x23, #0x888
  4271f4:	nop
  4271f8:	ldr	w0, [x20, #8]
  4271fc:	mov	x19, x20
  427200:	ldr	x20, [x20]
  427204:	bl	41bb88 <wcrtomb@plt+0x16f68>
  427208:	ldr	w0, [x19, #8]
  42720c:	cbz	w0, 427390 <wcrtomb@plt+0x22770>
  427210:	ldrb	w0, [x19, #24]
  427214:	ldr	x22, [x19, #16]
  427218:	cbz	w0, 427248 <wcrtomb@plt+0x22628>
  42721c:	ldrb	w0, [x22]
  427220:	cbz	w0, 427234 <wcrtomb@plt+0x22614>
  427224:	cmp	w0, #0x2e
  427228:	b.ne	427248 <wcrtomb@plt+0x22628>  // b.any
  42722c:	ldrb	w0, [x22, #1]
  427230:	cbnz	w0, 427248 <wcrtomb@plt+0x22628>
  427234:	bl	41bb40 <wcrtomb@plt+0x16f20>
  427238:	mov	x22, x0
  42723c:	ldr	w1, [x19, #8]
  427240:	sub	w0, w1, #0x1
  427244:	bl	41bb88 <wcrtomb@plt+0x16f68>
  427248:	ldr	w0, [x23]
  42724c:	mov	x1, x22
  427250:	mov	w2, #0x200                 	// #512
  427254:	bl	404160 <unlinkat@plt>
  427258:	cbz	w0, 427274 <wcrtomb@plt+0x22654>
  42725c:	bl	404ad0 <__errno_location@plt>
  427260:	ldr	w0, [x0]
  427264:	cmp	w0, #0x2
  427268:	b.eq	427274 <wcrtomb@plt+0x22654>  // b.none
  42726c:	mov	x0, x22
  427270:	bl	42a058 <wcrtomb@plt+0x25438>
  427274:	ldr	x0, [x19, #16]
  427278:	bl	4047b0 <free@plt>
  42727c:	ldp	x1, x0, [x21, #16]
  427280:	str	x1, [x19]
  427284:	sub	x0, x0, #0x1
  427288:	stp	x19, x0, [x21, #16]
  42728c:	cbnz	x20, 4271f8 <wcrtomb@plt+0x225d8>
  427290:	mov	w0, w26
  427294:	stp	xzr, xzr, [x21]
  427298:	ldp	x19, x20, [sp, #16]
  42729c:	ldp	x21, x22, [sp, #32]
  4272a0:	ldp	x23, x24, [sp, #48]
  4272a4:	ldp	x25, x26, [sp, #64]
  4272a8:	ldp	x27, x28, [sp, #80]
  4272ac:	ldp	x29, x30, [sp], #96
  4272b0:	b	41bb88 <wcrtomb@plt+0x16f68>
  4272b4:	ldr	w0, [x24]
  4272b8:	mov	x1, x28
  4272bc:	mov	w2, #0x200                 	// #512
  4272c0:	bl	404160 <unlinkat@plt>
  4272c4:	cbz	w0, 427348 <wcrtomb@plt+0x22728>
  4272c8:	bl	404ad0 <__errno_location@plt>
  4272cc:	ldr	w0, [x0]
  4272d0:	cmp	w0, #0x11
  4272d4:	b.eq	4271d0 <wcrtomb@plt+0x225b0>  // b.none
  4272d8:	cmp	w0, #0x27
  4272dc:	b.eq	4271d0 <wcrtomb@plt+0x225b0>  // b.none
  4272e0:	cmp	w0, #0x2
  4272e4:	b.eq	427348 <wcrtomb@plt+0x22728>  // b.none
  4272e8:	mov	x0, x28
  4272ec:	bl	42a058 <wcrtomb@plt+0x25438>
  4272f0:	ldr	x0, [x19, #16]
  4272f4:	bl	4047b0 <free@plt>
  4272f8:	ldp	x1, x0, [x21, #16]
  4272fc:	str	x1, [x19]
  427300:	sub	x0, x0, #0x1
  427304:	stp	x19, x0, [x21, #16]
  427308:	cbz	x22, 427364 <wcrtomb@plt+0x22744>
  42730c:	str	x20, [x22]
  427310:	cbnz	x20, 427180 <wcrtomb@plt+0x22560>
  427314:	b	4271d8 <wcrtomb@plt+0x225b8>
  427318:	ldr	w0, [x24]
  42731c:	mov	w2, #0x0                   	// #0
  427320:	ldr	x1, [x19, #16]
  427324:	bl	404160 <unlinkat@plt>
  427328:	cbz	w0, 427348 <wcrtomb@plt+0x22728>
  42732c:	bl	404ad0 <__errno_location@plt>
  427330:	ldr	w1, [x0]
  427334:	ldr	x0, [x19, #16]
  427338:	cmp	w1, #0x2
  42733c:	b.eq	4272f4 <wcrtomb@plt+0x226d4>  // b.none
  427340:	bl	42a2b8 <wcrtomb@plt+0x25698>
  427344:	nop
  427348:	ldr	x0, [x19, #16]
  42734c:	bl	4047b0 <free@plt>
  427350:	ldp	x1, x0, [x21, #16]
  427354:	str	x1, [x19]
  427358:	sub	x0, x0, #0x1
  42735c:	stp	x19, x0, [x21, #16]
  427360:	cbnz	x22, 42730c <wcrtomb@plt+0x226ec>
  427364:	str	x20, [x21]
  427368:	cbnz	x20, 427180 <wcrtomb@plt+0x22560>
  42736c:	b	4271d8 <wcrtomb@plt+0x225b8>
  427370:	mov	w0, w26
  427374:	ldp	x19, x20, [sp, #16]
  427378:	ldp	x21, x22, [sp, #32]
  42737c:	ldp	x23, x24, [sp, #48]
  427380:	ldp	x25, x26, [sp, #64]
  427384:	ldp	x27, x28, [sp, #80]
  427388:	ldp	x29, x30, [sp], #96
  42738c:	b	41bb88 <wcrtomb@plt+0x16f68>
  427390:	ldr	x22, [x19, #16]
  427394:	b	427248 <wcrtomb@plt+0x22628>
  427398:	ldp	x21, x22, [sp, #32]
  42739c:	ldp	x23, x24, [sp, #48]
  4273a0:	add	x27, x27, #0xce0
  4273a4:	mov	w0, w26
  4273a8:	ldp	x19, x20, [sp, #16]
  4273ac:	str	xzr, [x27, #8]
  4273b0:	ldp	x25, x26, [sp, #64]
  4273b4:	ldp	x27, x28, [sp, #80]
  4273b8:	ldp	x29, x30, [sp], #96
  4273bc:	b	41bb88 <wcrtomb@plt+0x16f68>
  4273c0:	stp	x29, x30, [sp, #-32]!
  4273c4:	mov	w0, #0x1                   	// #1
  4273c8:	mov	x29, sp
  4273cc:	stp	x19, x20, [sp, #16]
  4273d0:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4273d4:	add	x20, x20, #0xce0
  4273d8:	bl	427138 <wcrtomb@plt+0x22518>
  4273dc:	ldr	x19, [x20, #16]
  4273e0:	cbz	x19, 4273fc <wcrtomb@plt+0x227dc>
  4273e4:	nop
  4273e8:	mov	x0, x19
  4273ec:	ldr	x19, [x19]
  4273f0:	bl	4047b0 <free@plt>
  4273f4:	str	x19, [x20, #16]
  4273f8:	cbnz	x19, 4273e8 <wcrtomb@plt+0x227c8>
  4273fc:	ldp	x19, x20, [sp, #16]
  427400:	ldp	x29, x30, [sp], #32
  427404:	ret
  427408:	stp	x29, x30, [sp, #-64]!
  42740c:	mov	x29, sp
  427410:	stp	x21, x22, [sp, #32]
  427414:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427418:	mov	x21, x0
  42741c:	ldr	x0, [x22, #3296]
  427420:	stp	x19, x20, [sp, #16]
  427424:	stp	x23, x24, [sp, #48]
  427428:	and	w23, w1, #0xff
  42742c:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427430:	cbz	x0, 427444 <wcrtomb@plt+0x22824>
  427434:	ldr	x1, [x24, #3896]
  427438:	ldr	x0, [x0, #32]
  42743c:	cmp	x0, x1
  427440:	b.cc	427574 <wcrtomb@plt+0x22954>  // b.lo, b.ul, b.last
  427444:	add	x20, x22, #0xce0
  427448:	ldr	x19, [x20, #16]
  42744c:	cbz	x19, 427588 <wcrtomb@plt+0x22968>
  427450:	ldr	x0, [x19]
  427454:	str	xzr, [x19]
  427458:	str	x0, [x20, #16]
  42745c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427460:	mov	x0, x21
  427464:	ldr	w1, [x1, #4040]
  427468:	str	xzr, [x19]
  42746c:	str	w1, [x19, #8]
  427470:	bl	441170 <argp_parse@@Base+0xd288>
  427474:	str	x0, [x19, #16]
  427478:	bl	41ae90 <wcrtomb@plt+0x16270>
  42747c:	strb	w23, [x19, #24]
  427480:	ldr	x0, [x24, #3896]
  427484:	str	x0, [x19, #32]
  427488:	cbz	w23, 427538 <wcrtomb@plt+0x22918>
  42748c:	ldr	x1, [x19, #16]
  427490:	ldrb	w0, [x1]
  427494:	cbnz	w0, 42752c <wcrtomb@plt+0x2290c>
  427498:	ldr	x4, [x22, #3296]
  42749c:	cbz	x4, 4274ec <wcrtomb@plt+0x228cc>
  4274a0:	mov	x1, x4
  4274a4:	mov	x2, #0x0                   	// #0
  4274a8:	ldrb	w0, [x1, #24]
  4274ac:	cbz	w0, 4274dc <wcrtomb@plt+0x228bc>
  4274b0:	ldr	x3, [x1, #16]
  4274b4:	ldrb	w0, [x3]
  4274b8:	cmp	w0, #0x2e
  4274bc:	cbz	w0, 4274cc <wcrtomb@plt+0x228ac>
  4274c0:	b.ne	4274dc <wcrtomb@plt+0x228bc>  // b.any
  4274c4:	ldrb	w0, [x3, #1]
  4274c8:	cbnz	w0, 4274dc <wcrtomb@plt+0x228bc>
  4274cc:	ldr	w3, [x1, #8]
  4274d0:	ldr	w0, [x19, #8]
  4274d4:	cmp	w3, w0
  4274d8:	b.lt	427598 <wcrtomb@plt+0x22978>  // b.tstop
  4274dc:	ldr	x0, [x1]
  4274e0:	mov	x2, x1
  4274e4:	mov	x1, x0
  4274e8:	cbnz	x0, 4274a8 <wcrtomb@plt+0x22888>
  4274ec:	ldr	x0, [x20, #8]
  4274f0:	cbz	x0, 4275f8 <wcrtomb@plt+0x229d8>
  4274f4:	ldr	x1, [x0]
  4274f8:	str	x1, [x19]
  4274fc:	str	x19, [x0]
  427500:	ldr	x4, [x19]
  427504:	cbnz	x4, 427554 <wcrtomb@plt+0x22934>
  427508:	ldr	x0, [x20, #24]
  42750c:	str	x19, [x20, #8]
  427510:	ldp	x21, x22, [sp, #32]
  427514:	add	x0, x0, #0x1
  427518:	str	x0, [x20, #24]
  42751c:	ldp	x19, x20, [sp, #16]
  427520:	ldp	x23, x24, [sp, #48]
  427524:	ldp	x29, x30, [sp], #64
  427528:	ret
  42752c:	cmp	w0, #0x2e
  427530:	b.eq	4275e0 <wcrtomb@plt+0x229c0>  // b.none
  427534:	nop
  427538:	ldr	x0, [x20, #8]
  42753c:	cbz	x0, 4275d0 <wcrtomb@plt+0x229b0>
  427540:	ldr	x1, [x0]
  427544:	str	x1, [x19]
  427548:	str	x19, [x0]
  42754c:	ldr	x0, [x19]
  427550:	cbz	x0, 427508 <wcrtomb@plt+0x228e8>
  427554:	ldr	x0, [x20, #24]
  427558:	ldp	x21, x22, [sp, #32]
  42755c:	add	x0, x0, #0x1
  427560:	str	x0, [x20, #24]
  427564:	ldp	x19, x20, [sp, #16]
  427568:	ldp	x23, x24, [sp, #48]
  42756c:	ldp	x29, x30, [sp], #64
  427570:	ret
  427574:	add	x20, x22, #0xce0
  427578:	mov	w0, #0x0                   	// #0
  42757c:	bl	427138 <wcrtomb@plt+0x22518>
  427580:	ldr	x19, [x20, #16]
  427584:	cbnz	x19, 427450 <wcrtomb@plt+0x22830>
  427588:	mov	x0, #0x28                  	// #40
  42758c:	bl	440f48 <argp_parse@@Base+0xd060>
  427590:	mov	x19, x0
  427594:	b	42745c <wcrtomb@plt+0x2283c>
  427598:	cbz	x2, 4275ec <wcrtomb@plt+0x229cc>
  42759c:	ldr	x0, [x2]
  4275a0:	str	x0, [x19]
  4275a4:	str	x19, [x2]
  4275a8:	ldr	x0, [x19]
  4275ac:	cbz	x0, 427508 <wcrtomb@plt+0x228e8>
  4275b0:	ldr	x0, [x20, #24]
  4275b4:	ldp	x21, x22, [sp, #32]
  4275b8:	add	x0, x0, #0x1
  4275bc:	str	x0, [x20, #24]
  4275c0:	ldp	x19, x20, [sp, #16]
  4275c4:	ldp	x23, x24, [sp, #48]
  4275c8:	ldp	x29, x30, [sp], #64
  4275cc:	ret
  4275d0:	ldr	x0, [x22, #3296]
  4275d4:	str	x19, [x22, #3296]
  4275d8:	str	x0, [x19]
  4275dc:	b	427550 <wcrtomb@plt+0x22930>
  4275e0:	ldrb	w0, [x1, #1]
  4275e4:	cbz	w0, 427498 <wcrtomb@plt+0x22878>
  4275e8:	b	427538 <wcrtomb@plt+0x22918>
  4275ec:	str	x19, [x22, #3296]
  4275f0:	str	x4, [x19]
  4275f4:	b	427554 <wcrtomb@plt+0x22934>
  4275f8:	str	x19, [x22, #3296]
  4275fc:	str	x4, [x19]
  427600:	cbnz	x4, 427554 <wcrtomb@plt+0x22934>
  427604:	b	427508 <wcrtomb@plt+0x228e8>
  427608:	stp	x29, x30, [sp, #-256]!
  42760c:	mov	x29, sp
  427610:	stp	x19, x20, [sp, #16]
  427614:	adrp	x20, 483000 <argp_program_version_hook@@Base+0x290>
  427618:	add	x20, x20, #0x28
  42761c:	stp	x21, x22, [sp, #32]
  427620:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427624:	add	x21, x21, #0xfb0
  427628:	stp	x23, x24, [sp, #48]
  42762c:	mov	w22, #0x0                   	// #0
  427630:	adrp	x24, 454000 <_obstack_memory_used@@Base+0x11e10>
  427634:	stp	x25, x26, [sp, #64]
  427638:	bl	41dd58 <wcrtomb@plt+0x19138>
  42763c:	mov	w0, #0x2                   	// #2
  427640:	bl	408150 <wcrtomb@plt+0x3530>
  427644:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427648:	bl	413b28 <wcrtomb@plt+0xef08>
  42764c:	add	x24, x24, #0xd60
  427650:	mov	x1, x20
  427654:	mov	x0, x21
  427658:	mov	w2, #0x0                   	// #0
  42765c:	add	x23, x23, #0xd48
  427660:	bl	418628 <wcrtomb@plt+0x13a08>
  427664:	mov	w19, w0
  427668:	cmp	w0, #0x4
  42766c:	b.eq	4276f4 <wcrtomb@plt+0x22ad4>  // b.none
  427670:	b.hi	427718 <wcrtomb@plt+0x22af8>  // b.pmore
  427674:	cmp	w0, #0x3
  427678:	b.eq	4277d8 <wcrtomb@plt+0x22bb8>  // b.none
  42767c:	cmp	w0, #0x1
  427680:	b.ne	427704 <wcrtomb@plt+0x22ae4>  // b.any
  427684:	ldr	x0, [x21]
  427688:	mov	x1, x20
  42768c:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427690:	mov	w3, #0x0                   	// #0
  427694:	add	x2, x22, #0xf98
  427698:	bl	418ae8 <wcrtomb@plt+0x13ec8>
  42769c:	ldr	x0, [x21]
  4276a0:	mov	x1, x20
  4276a4:	ldrb	w0, [x0, #156]
  4276a8:	bl	4183e8 <wcrtomb@plt+0x137c8>
  4276ac:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4276b0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4276b4:	ldr	w2, [x22, #3992]
  4276b8:	ldr	w0, [x0, #804]
  4276bc:	str	w2, [x1, #760]
  4276c0:	cmp	w0, #0x8
  4276c4:	b.eq	4279a8 <wcrtomb@plt+0x22d88>  // b.none
  4276c8:	mov	w22, w19
  4276cc:	bl	41a238 <wcrtomb@plt+0x15618>
  4276d0:	mov	x0, x20
  4276d4:	bl	425ff8 <wcrtomb@plt+0x213d8>
  4276d8:	mov	x1, x20
  4276dc:	mov	x0, x21
  4276e0:	mov	w2, #0x0                   	// #0
  4276e4:	bl	418628 <wcrtomb@plt+0x13a08>
  4276e8:	mov	w19, w0
  4276ec:	cmp	w0, #0x4
  4276f0:	b.ne	427670 <wcrtomb@plt+0x22a50>  // b.any
  4276f4:	mov	x0, x20
  4276f8:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4276fc:	bl	425ff8 <wcrtomb@plt+0x213d8>
  427700:	b	4277ec <wcrtomb@plt+0x22bcc>
  427704:	tbz	w19, #0, 4277d0 <wcrtomb@plt+0x22bb0>
  427708:	mov	x0, x20
  42770c:	mov	w22, w19
  427710:	bl	425ff8 <wcrtomb@plt+0x213d8>
  427714:	b	4276d8 <wcrtomb@plt+0x22ab8>
  427718:	cmp	w0, #0x5
  42771c:	b.ne	427708 <wcrtomb@plt+0x22ae8>  // b.any
  427720:	ldr	x0, [x21]
  427724:	bl	405b90 <wcrtomb@plt+0xf70>
  427728:	cmp	w22, #0x1
  42772c:	b.eq	4277b8 <wcrtomb@plt+0x22b98>  // b.none
  427730:	b.hi	4277b0 <wcrtomb@plt+0x22b90>  // b.pmore
  427734:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  427738:	add	x22, x0, #0x3b8
  42773c:	ldr	x0, [x0, #952]
  427740:	cbz	x0, 427748 <wcrtomb@plt+0x22b28>
  427744:	blr	x0
  427748:	mov	w2, #0x5                   	// #5
  42774c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x10e10>
  427750:	mov	x0, #0x0                   	// #0
  427754:	add	x1, x1, #0xca0
  427758:	bl	4049c0 <dcgettext@plt>
  42775c:	mov	x2, x0
  427760:	mov	w1, #0x0                   	// #0
  427764:	mov	w0, #0x0                   	// #0
  427768:	bl	404050 <error@plt>
  42776c:	ldr	x0, [x22]
  427770:	cbz	x0, 427778 <wcrtomb@plt+0x22b58>
  427774:	blr	x0
  427778:	mov	x1, x24
  42777c:	mov	w2, #0x5                   	// #5
  427780:	mov	x0, #0x0                   	// #0
  427784:	bl	4049c0 <dcgettext@plt>
  427788:	mov	w1, #0x0                   	// #0
  42778c:	mov	x2, x0
  427790:	mov	w0, #0x0                   	// #0
  427794:	bl	404050 <error@plt>
  427798:	mov	w1, #0x2                   	// #2
  42779c:	mov	x0, x20
  4277a0:	mov	w22, w19
  4277a4:	str	w1, [x23]
  4277a8:	bl	425ff8 <wcrtomb@plt+0x213d8>
  4277ac:	b	4276d8 <wcrtomb@plt+0x22ab8>
  4277b0:	cmp	w22, #0x3
  4277b4:	b.ne	4277c4 <wcrtomb@plt+0x22ba4>  // b.any
  4277b8:	adrp	x22, 483000 <argp_program_version_hook@@Base+0x290>
  4277bc:	add	x22, x22, #0x3b8
  4277c0:	b	42776c <wcrtomb@plt+0x22b4c>
  4277c4:	sub	w22, w22, #0x2
  4277c8:	tst	w22, #0xfffffffd
  4277cc:	b.ne	427708 <wcrtomb@plt+0x22ae8>  // b.any
  4277d0:	str	x27, [sp, #80]
  4277d4:	bl	404650 <abort@plt>
  4277d8:	ldr	x1, [x21]
  4277dc:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4277e0:	mov	x0, x20
  4277e4:	str	x1, [x19, #3952]
  4277e8:	bl	425ff8 <wcrtomb@plt+0x213d8>
  4277ec:	bl	405b48 <wcrtomb@plt+0xf28>
  4277f0:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  4277f4:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  4277f8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4277fc:	ldr	x3, [x19, #3952]
  427800:	adrp	x25, 454000 <_obstack_memory_used@@Base+0x11e10>
  427804:	add	x24, x24, #0x218
  427808:	add	x25, x25, #0xd58
  42780c:	mov	w1, #0x1                   	// #1
  427810:	str	x3, [x2, #944]
  427814:	strb	w1, [x0, #936]
  427818:	bl	41eaf8 <wcrtomb@plt+0x19ed8>
  42781c:	cbz	x0, 427868 <wcrtomb@plt+0x22c48>
  427820:	ldr	x22, [x0, #16]
  427824:	mov	x1, #0x0                   	// #0
  427828:	mov	x0, x22
  42782c:	bl	40ee78 <wcrtomb@plt+0xa258>
  427830:	tst	w0, #0xff
  427834:	b.ne	427818 <wcrtomb@plt+0x22bf8>  // b.any
  427838:	ldrb	w0, [x24]
  42783c:	cbnz	w0, 427890 <wcrtomb@plt+0x22c70>
  427840:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  427844:	ldr	w0, [x0, #804]
  427848:	cmp	w0, #0x2
  42784c:	b.eq	4278b0 <wcrtomb@plt+0x22c90>  // b.none
  427850:	mov	x2, x22
  427854:	mov	x1, x22
  427858:	mov	x0, #0x0                   	// #0
  42785c:	bl	40c9d0 <wcrtomb@plt+0x7db0>
  427860:	bl	41eaf8 <wcrtomb@plt+0x19ed8>
  427864:	cbnz	x0, 427820 <wcrtomb@plt+0x22c00>
  427868:	bl	40b408 <wcrtomb@plt+0x67e8>
  42786c:	bl	4066c8 <wcrtomb@plt+0x1aa8>
  427870:	bl	4273c0 <wcrtomb@plt+0x227a0>
  427874:	bl	41e400 <wcrtomb@plt+0x197e0>
  427878:	ldp	x19, x20, [sp, #16]
  42787c:	ldp	x21, x22, [sp, #32]
  427880:	ldp	x23, x24, [sp, #48]
  427884:	ldp	x25, x26, [sp, #64]
  427888:	ldp	x29, x30, [sp], #256
  42788c:	ret
  427890:	mov	x1, x22
  427894:	mov	x0, x25
  427898:	bl	422f70 <wcrtomb@plt+0x1e350>
  42789c:	cbz	w0, 427818 <wcrtomb@plt+0x22bf8>
  4278a0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4278a4:	ldr	w0, [x0, #804]
  4278a8:	cmp	w0, #0x2
  4278ac:	b.ne	427850 <wcrtomb@plt+0x22c30>  // b.any
  4278b0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  4278b4:	mov	x1, x22
  4278b8:	mov	w2, #0x0                   	// #0
  4278bc:	ldr	w0, [x0, #2184]
  4278c0:	bl	404ab0 <openat@plt>
  4278c4:	mov	w23, w0
  4278c8:	tbnz	w0, #31, 427984 <wcrtomb@plt+0x22d64>
  4278cc:	mov	w1, w0
  4278d0:	add	x2, sp, #0x80
  4278d4:	mov	w0, #0x0                   	// #0
  4278d8:	bl	4049a0 <__fxstat@plt>
  4278dc:	cbnz	w0, 427990 <wcrtomb@plt+0x22d70>
  4278e0:	ldr	x19, [sp, #176]
  4278e4:	mov	x26, #0x200                 	// #512
  4278e8:	cmp	x19, #0x0
  4278ec:	b.le	42796c <wcrtomb@plt+0x22d4c>
  4278f0:	str	x27, [sp, #80]
  4278f4:	b	427930 <wcrtomb@plt+0x22d10>
  4278f8:	mov	x2, x20
  4278fc:	mov	x1, x21
  427900:	mov	w0, w23
  427904:	bl	440470 <argp_parse@@Base+0xc588>
  427908:	cmn	x0, #0x1
  42790c:	b.eq	427aec <wcrtomb@plt+0x22ecc>  // b.none
  427910:	cbz	x0, 427a84 <wcrtomb@plt+0x22e64>
  427914:	sub	x1, x0, #0x1
  427918:	sub	x19, x19, x0
  42791c:	and	x0, x1, #0xfffffffffffffe00
  427920:	add	x0, x21, x0
  427924:	bl	405b90 <wcrtomb@plt+0xf70>
  427928:	cmp	x19, #0x0
  42792c:	b.le	427968 <wcrtomb@plt+0x22d48>
  427930:	bl	406220 <wcrtomb@plt+0x1600>
  427934:	mov	x21, x0
  427938:	bl	405bd8 <wcrtomb@plt+0xfb8>
  42793c:	mov	x20, x0
  427940:	cmp	x0, x19
  427944:	b.ls	4278f8 <wcrtomb@plt+0x22cd8>  // b.plast
  427948:	mov	x20, x19
  42794c:	ands	x2, x19, #0x1ff
  427950:	b.eq	4278f8 <wcrtomb@plt+0x22cd8>  // b.none
  427954:	sub	x2, x26, x2
  427958:	add	x0, x21, x19
  42795c:	mov	w1, #0x0                   	// #0
  427960:	bl	404410 <memset@plt>
  427964:	b	4278f8 <wcrtomb@plt+0x22cd8>
  427968:	ldr	x27, [sp, #80]
  42796c:	mov	w0, w23
  427970:	bl	4045c0 <close@plt>
  427974:	cbz	w0, 427818 <wcrtomb@plt+0x22bf8>
  427978:	mov	x0, x22
  42797c:	bl	429ce8 <wcrtomb@plt+0x250c8>
  427980:	b	427818 <wcrtomb@plt+0x22bf8>
  427984:	mov	x0, x22
  427988:	bl	429de8 <wcrtomb@plt+0x251c8>
  42798c:	b	427818 <wcrtomb@plt+0x22bf8>
  427990:	mov	x0, x22
  427994:	bl	42a278 <wcrtomb@plt+0x25658>
  427998:	mov	w0, w23
  42799c:	bl	4045c0 <close@plt>
  4279a0:	cbz	w0, 427818 <wcrtomb@plt+0x22bf8>
  4279a4:	b	427978 <wcrtomb@plt+0x22d58>
  4279a8:	ldr	x0, [x20, #8]
  4279ac:	bl	41ea80 <wcrtomb@plt+0x19e60>
  4279b0:	mov	x22, x0
  4279b4:	cbz	x0, 4276c8 <wcrtomb@plt+0x22aa8>
  4279b8:	ldr	w0, [x0, #40]
  4279bc:	bl	41bb88 <wcrtomb@plt+0x16f68>
  4279c0:	ldr	x0, [x20, #8]
  4279c4:	add	x1, sp, #0x80
  4279c8:	bl	41b9a0 <wcrtomb@plt+0x16d80>
  4279cc:	cbnz	w0, 4276c8 <wcrtomb@plt+0x22aa8>
  4279d0:	ldr	w0, [sp, #144]
  4279d4:	and	w0, w0, #0xf000
  4279d8:	cmp	w0, #0x4, lsl #12
  4279dc:	b.eq	427a00 <wcrtomb@plt+0x22de0>  // b.none
  4279e0:	ldp	x0, x1, [sp, #216]
  4279e4:	ldp	x2, x3, [x20, #232]
  4279e8:	bl	426090 <wcrtomb@plt+0x21470>
  4279ec:	cmp	w0, #0x0
  4279f0:	b.gt	4276c8 <wcrtomb@plt+0x22aa8>
  4279f4:	mov	x0, x22
  4279f8:	bl	41e1c0 <wcrtomb@plt+0x195a0>
  4279fc:	b	4276c8 <wcrtomb@plt+0x22aa8>
  427a00:	ldr	x0, [x22, #16]
  427a04:	mov	w1, w19
  427a08:	bl	41c308 <wcrtomb@plt+0x176e8>
  427a0c:	mov	x26, x0
  427a10:	cbz	x0, 4276c8 <wcrtomb@plt+0x22aa8>
  427a14:	mov	x25, x0
  427a18:	ldr	x0, [x22, #16]
  427a1c:	str	x27, [sp, #80]
  427a20:	bl	41bf58 <wcrtomb@plt+0x17338>
  427a24:	mov	x27, x0
  427a28:	ldrb	w1, [x26]
  427a2c:	cbz	w1, 427a64 <wcrtomb@plt+0x22e44>
  427a30:	mov	x1, x25
  427a34:	mov	x0, x27
  427a38:	bl	41c000 <wcrtomb@plt+0x173e0>
  427a3c:	ldr	w1, [x22, #40]
  427a40:	mov	x3, #0x0                   	// #0
  427a44:	mov	w2, #0x0                   	// #0
  427a48:	bl	41dcb0 <wcrtomb@plt+0x19090>
  427a4c:	mov	x0, x25
  427a50:	bl	403ff0 <strlen@plt>
  427a54:	add	x0, x0, #0x1
  427a58:	add	x25, x25, x0
  427a5c:	ldrb	w0, [x25]
  427a60:	cbnz	w0, 427a30 <wcrtomb@plt+0x22e10>
  427a64:	mov	x0, x27
  427a68:	bl	41bfd8 <wcrtomb@plt+0x173b8>
  427a6c:	mov	x0, x26
  427a70:	bl	4047b0 <free@plt>
  427a74:	mov	x0, x22
  427a78:	bl	41e1c0 <wcrtomb@plt+0x195a0>
  427a7c:	ldr	x27, [sp, #80]
  427a80:	b	4276c8 <wcrtomb@plt+0x22aa8>
  427a84:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  427a88:	ldr	x0, [x0, #952]
  427a8c:	cbz	x0, 427a94 <wcrtomb@plt+0x22e74>
  427a90:	blr	x0
  427a94:	mov	x3, x19
  427a98:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  427a9c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  427aa0:	add	x2, x2, #0x1e0
  427aa4:	add	x1, x1, #0x200
  427aa8:	mov	w4, #0x5                   	// #5
  427aac:	mov	x0, #0x0                   	// #0
  427ab0:	bl	4048f0 <dcngettext@plt>
  427ab4:	mov	x20, x0
  427ab8:	mov	x0, x22
  427abc:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  427ac0:	mov	x21, x0
  427ac4:	add	x1, sp, #0x68
  427ac8:	mov	x0, x19
  427acc:	bl	4398d8 <argp_parse@@Base+0x59f0>
  427ad0:	mov	x4, x0
  427ad4:	mov	x3, x21
  427ad8:	mov	x2, x20
  427adc:	mov	w1, #0x0                   	// #0
  427ae0:	mov	w0, #0x0                   	// #0
  427ae4:	bl	404050 <error@plt>
  427ae8:	bl	40e770 <wcrtomb@plt+0x9b50>
  427aec:	ldr	x1, [sp, #176]
  427af0:	mov	x2, x20
  427af4:	mov	x0, x22
  427af8:	sub	x1, x1, x19
  427afc:	bl	429fa0 <wcrtomb@plt+0x25380>
  427b00:	stp	x29, x30, [sp, #-96]!
  427b04:	mov	x29, sp
  427b08:	stp	x21, x22, [sp, #32]
  427b0c:	mov	x21, x2
  427b10:	stp	x23, x24, [sp, #48]
  427b14:	and	x23, x0, #0xff
  427b18:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427b1c:	add	x22, x24, #0x188
  427b20:	stp	x19, x20, [sp, #16]
  427b24:	mov	x19, x1
  427b28:	ldr	x20, [x22, x23, lsl #3]
  427b2c:	cmn	x20, #0x1
  427b30:	b.eq	427ba0 <wcrtomb@plt+0x22f80>  // b.none
  427b34:	cbz	x20, 427c20 <wcrtomb@plt+0x23000>
  427b38:	mov	x0, x19
  427b3c:	bl	403ff0 <strlen@plt>
  427b40:	add	x0, x0, #0x1
  427b44:	str	x0, [sp, #80]
  427b48:	lsl	x0, x0, #4
  427b4c:	add	x0, x0, #0x1
  427b50:	str	x0, [sp, #88]
  427b54:	bl	440f48 <argp_parse@@Base+0xd060>
  427b58:	mov	x22, x0
  427b5c:	add	x4, sp, #0x58
  427b60:	mov	x0, x20
  427b64:	add	x3, sp, #0x48
  427b68:	add	x2, sp, #0x50
  427b6c:	add	x1, sp, #0x40
  427b70:	stp	x19, x22, [sp, #64]
  427b74:	bl	404730 <iconv@plt>
  427b78:	cbnz	x0, 427c00 <wcrtomb@plt+0x22fe0>
  427b7c:	ldr	x1, [sp, #72]
  427b80:	mov	w0, #0x1                   	// #1
  427b84:	strb	wzr, [x1]
  427b88:	str	x22, [x21]
  427b8c:	ldp	x19, x20, [sp, #16]
  427b90:	ldp	x21, x22, [sp, #32]
  427b94:	ldp	x23, x24, [sp, #48]
  427b98:	ldp	x29, x30, [sp], #96
  427b9c:	ret
  427ba0:	and	w0, w0, #0xff
  427ba4:	cbnz	w0, 427be4 <wcrtomb@plt+0x22fc4>
  427ba8:	bl	439918 <argp_parse@@Base+0x5a30>
  427bac:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  427bb0:	add	x1, x1, #0x220
  427bb4:	bl	404940 <iconv_open@plt>
  427bb8:	str	x0, [x24, #392]
  427bbc:	ldr	x20, [x22, x23, lsl #3]
  427bc0:	cbz	x20, 427c20 <wcrtomb@plt+0x23000>
  427bc4:	cmn	x20, #0x1
  427bc8:	mov	w0, #0x0                   	// #0
  427bcc:	b.ne	427b38 <wcrtomb@plt+0x22f18>  // b.any
  427bd0:	ldp	x19, x20, [sp, #16]
  427bd4:	ldp	x21, x22, [sp, #32]
  427bd8:	ldp	x23, x24, [sp, #48]
  427bdc:	ldp	x29, x30, [sp], #96
  427be0:	ret
  427be4:	bl	439918 <argp_parse@@Base+0x5a30>
  427be8:	mov	x1, x0
  427bec:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  427bf0:	add	x0, x0, #0x220
  427bf4:	bl	404940 <iconv_open@plt>
  427bf8:	str	x0, [x22, #8]
  427bfc:	b	427bbc <wcrtomb@plt+0x22f9c>
  427c00:	mov	x0, x22
  427c04:	bl	4047b0 <free@plt>
  427c08:	mov	w0, #0x0                   	// #0
  427c0c:	ldp	x19, x20, [sp, #16]
  427c10:	ldp	x21, x22, [sp, #32]
  427c14:	ldp	x23, x24, [sp, #48]
  427c18:	ldp	x29, x30, [sp], #96
  427c1c:	ret
  427c20:	mov	x0, x19
  427c24:	bl	441170 <argp_parse@@Base+0xd288>
  427c28:	mov	x1, x0
  427c2c:	mov	w0, #0x1                   	// #1
  427c30:	str	x1, [x21]
  427c34:	b	427b8c <wcrtomb@plt+0x22f6c>
  427c38:	ldrb	w1, [x0]
  427c3c:	cbz	w1, 427c4c <wcrtomb@plt+0x2302c>
  427c40:	tbnz	w1, #7, 427c54 <wcrtomb@plt+0x23034>
  427c44:	ldrb	w1, [x0, #1]!
  427c48:	cbnz	w1, 427c40 <wcrtomb@plt+0x23020>
  427c4c:	mov	w0, #0x1                   	// #1
  427c50:	ret
  427c54:	mov	w0, #0x0                   	// #0
  427c58:	ret
  427c5c:	nop
  427c60:	stp	x29, x30, [sp, #-48]!
  427c64:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  427c68:	add	x1, x1, #0x680
  427c6c:	mov	x29, sp
  427c70:	stp	x19, x20, [sp, #16]
  427c74:	mov	x19, x0
  427c78:	bl	404710 <strcmp@plt>
  427c7c:	cbz	w0, 427d48 <wcrtomb@plt+0x23128>
  427c80:	mov	x0, x19
  427c84:	str	x21, [sp, #32]
  427c88:	bl	403ff0 <strlen@plt>
  427c8c:	cmp	x0, #0x2
  427c90:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427c94:	ldr	x5, [x1, #920]
  427c98:	b.hi	427ce8 <wcrtomb@plt+0x230c8>  // b.pmore
  427c9c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427ca0:	add	x20, x21, #0x198
  427ca4:	add	x20, x20, #0x8
  427ca8:	mov	x1, x19
  427cac:	mov	x3, x20
  427cb0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  427cb4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  427cb8:	add	x2, x2, #0x3d0
  427cbc:	add	x0, x0, #0x230
  427cc0:	mov	x4, #0x4                   	// #4
  427cc4:	bl	430500 <wcrtomb@plt+0x2b8e0>
  427cc8:	ldr	w0, [x20, x0, lsl #2]
  427ccc:	ldr	w1, [x21, #408]
  427cd0:	orr	w1, w1, w0
  427cd4:	str	w1, [x21, #408]
  427cd8:	ldr	x21, [sp, #32]
  427cdc:	ldp	x19, x20, [sp, #16]
  427ce0:	ldp	x29, x30, [sp], #48
  427ce4:	ret
  427ce8:	ldrh	w1, [x19]
  427cec:	mov	w0, #0x6f6e                	// #28526
  427cf0:	cmp	w1, w0
  427cf4:	b.ne	427c9c <wcrtomb@plt+0x2307c>  // b.any
  427cf8:	ldrb	w0, [x19, #2]
  427cfc:	cmp	w0, #0x2d
  427d00:	b.ne	427c9c <wcrtomb@plt+0x2307c>  // b.any
  427d04:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427d08:	add	x20, x21, #0x198
  427d0c:	add	x20, x20, #0x8
  427d10:	add	x1, x19, #0x3
  427d14:	mov	x3, x20
  427d18:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  427d1c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  427d20:	add	x2, x2, #0x3d0
  427d24:	add	x0, x0, #0x230
  427d28:	mov	x4, #0x4                   	// #4
  427d2c:	bl	430500 <wcrtomb@plt+0x2b8e0>
  427d30:	ldr	w0, [x20, x0, lsl #2]
  427d34:	ldr	w1, [x21, #408]
  427d38:	bic	w0, w1, w0
  427d3c:	str	w0, [x21, #408]
  427d40:	ldr	x21, [sp, #32]
  427d44:	b	427cdc <wcrtomb@plt+0x230bc>
  427d48:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  427d4c:	ldp	x19, x20, [sp, #16]
  427d50:	str	wzr, [x0, #408]
  427d54:	ldp	x29, x30, [sp], #48
  427d58:	ret
  427d5c:	nop
  427d60:	mov	x12, #0x1010                	// #4112
  427d64:	sub	sp, sp, x12
  427d68:	cmn	w0, #0x64
  427d6c:	stp	x29, x30, [sp]
  427d70:	mov	x29, sp
  427d74:	stp	x19, x20, [sp, #16]
  427d78:	mov	x20, x1
  427d7c:	stp	x21, x22, [sp, #32]
  427d80:	mov	x22, x2
  427d84:	b.eq	427e90 <wcrtomb@plt+0x23270>  // b.none
  427d88:	mov	w19, w0
  427d8c:	ldrb	w0, [x1]
  427d90:	cmp	w0, #0x2f
  427d94:	b.eq	427e90 <wcrtomb@plt+0x23270>  // b.none
  427d98:	stp	x23, x24, [sp, #48]
  427d9c:	add	x24, sp, #0x50
  427da0:	mov	x2, x1
  427da4:	mov	x0, x24
  427da8:	mov	w1, w19
  427dac:	bl	442218 <_obstack_memory_used@@Base+0x28>
  427db0:	mov	x23, x0
  427db4:	cbz	x0, 427e1c <wcrtomb@plt+0x231fc>
  427db8:	mov	x1, x22
  427dbc:	stp	x25, x26, [sp, #64]
  427dc0:	bl	4364c8 <argp_parse@@Base+0x25e0>
  427dc4:	mov	w21, w0
  427dc8:	bl	404ad0 <__errno_location@plt>
  427dcc:	ldr	w26, [x0]
  427dd0:	mov	x25, x0
  427dd4:	cmp	x23, x24
  427dd8:	b.eq	427de4 <wcrtomb@plt+0x231c4>  // b.none
  427ddc:	mov	x0, x23
  427de0:	bl	4047b0 <free@plt>
  427de4:	cmn	w21, #0x1
  427de8:	b.ne	427ebc <wcrtomb@plt+0x2329c>  // b.any
  427dec:	cmp	w26, #0x14
  427df0:	b.eq	427e18 <wcrtomb@plt+0x231f8>  // b.none
  427df4:	sub	w0, w26, #0x1
  427df8:	cmp	w0, #0x1
  427dfc:	ccmp	w26, #0xd, #0x4, hi  // hi = pmore
  427e00:	b.eq	427e18 <wcrtomb@plt+0x231f8>  // b.none
  427e04:	cmp	w26, #0x26
  427e08:	mov	w0, #0x5f                  	// #95
  427e0c:	ccmp	w26, w0, #0x4, ne  // ne = any
  427e10:	b.ne	427f64 <wcrtomb@plt+0x23344>  // b.any
  427e14:	nop
  427e18:	ldp	x25, x26, [sp, #64]
  427e1c:	mov	x0, x24
  427e20:	bl	440560 <argp_parse@@Base+0xc678>
  427e24:	cbnz	w0, 427fac <wcrtomb@plt+0x2338c>
  427e28:	tbnz	w19, #31, 427e38 <wcrtomb@plt+0x23218>
  427e2c:	ldr	w0, [sp, #80]
  427e30:	cmp	w0, w19
  427e34:	b.eq	427f74 <wcrtomb@plt+0x23354>  // b.none
  427e38:	mov	w0, w19
  427e3c:	bl	404060 <fchdir@plt>
  427e40:	cbnz	w0, 427f28 <wcrtomb@plt+0x23308>
  427e44:	mov	x1, x22
  427e48:	mov	x0, x20
  427e4c:	bl	4364c8 <argp_parse@@Base+0x25e0>
  427e50:	mov	w21, w0
  427e54:	cmn	w0, #0x1
  427e58:	b.eq	427ee0 <wcrtomb@plt+0x232c0>  // b.none
  427e5c:	mov	x0, x24
  427e60:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  427e64:	cbnz	w0, 427f9c <wcrtomb@plt+0x2337c>
  427e68:	mov	x0, x24
  427e6c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  427e70:	mov	w0, w21
  427e74:	mov	x12, #0x1010                	// #4112
  427e78:	ldp	x29, x30, [sp]
  427e7c:	ldp	x19, x20, [sp, #16]
  427e80:	ldp	x21, x22, [sp, #32]
  427e84:	ldp	x23, x24, [sp, #48]
  427e88:	add	sp, sp, x12
  427e8c:	ret
  427e90:	mov	x1, x22
  427e94:	mov	x0, x20
  427e98:	bl	4364c8 <argp_parse@@Base+0x25e0>
  427e9c:	mov	w21, w0
  427ea0:	mov	w0, w21
  427ea4:	mov	x12, #0x1010                	// #4112
  427ea8:	ldp	x29, x30, [sp]
  427eac:	ldp	x19, x20, [sp, #16]
  427eb0:	ldp	x21, x22, [sp, #32]
  427eb4:	add	sp, sp, x12
  427eb8:	ret
  427ebc:	mov	w0, w21
  427ec0:	mov	x12, #0x1010                	// #4112
  427ec4:	ldp	x29, x30, [sp]
  427ec8:	ldp	x19, x20, [sp, #16]
  427ecc:	ldp	x21, x22, [sp, #32]
  427ed0:	ldp	x23, x24, [sp, #48]
  427ed4:	ldp	x25, x26, [sp, #64]
  427ed8:	add	sp, sp, x12
  427edc:	ret
  427ee0:	bl	404ad0 <__errno_location@plt>
  427ee4:	mov	x19, x0
  427ee8:	mov	x0, x24
  427eec:	ldr	w20, [x19]
  427ef0:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  427ef4:	cbnz	w0, 427f9c <wcrtomb@plt+0x2337c>
  427ef8:	mov	x0, x24
  427efc:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  427f00:	cbz	w20, 427f94 <wcrtomb@plt+0x23374>
  427f04:	ldp	x23, x24, [sp, #48]
  427f08:	str	w20, [x19]
  427f0c:	mov	w0, w21
  427f10:	mov	x12, #0x1010                	// #4112
  427f14:	ldp	x29, x30, [sp]
  427f18:	ldp	x19, x20, [sp, #16]
  427f1c:	ldp	x21, x22, [sp, #32]
  427f20:	add	sp, sp, x12
  427f24:	ret
  427f28:	bl	404ad0 <__errno_location@plt>
  427f2c:	mov	x19, x0
  427f30:	mov	x0, x24
  427f34:	mov	w21, #0xffffffff            	// #-1
  427f38:	ldr	w20, [x19]
  427f3c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  427f40:	ldp	x23, x24, [sp, #48]
  427f44:	str	w20, [x19]
  427f48:	mov	w0, w21
  427f4c:	mov	x12, #0x1010                	// #4112
  427f50:	ldp	x29, x30, [sp]
  427f54:	ldp	x19, x20, [sp, #16]
  427f58:	ldp	x21, x22, [sp, #32]
  427f5c:	add	sp, sp, x12
  427f60:	ret
  427f64:	ldp	x23, x24, [sp, #48]
  427f68:	str	w26, [x25]
  427f6c:	ldp	x25, x26, [sp, #64]
  427f70:	b	427ea0 <wcrtomb@plt+0x23280>
  427f74:	mov	x0, x24
  427f78:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  427f7c:	mov	w21, #0xffffffff            	// #-1
  427f80:	bl	404ad0 <__errno_location@plt>
  427f84:	mov	w1, #0x9                   	// #9
  427f88:	ldp	x23, x24, [sp, #48]
  427f8c:	str	w1, [x0]
  427f90:	b	427ea0 <wcrtomb@plt+0x23280>
  427f94:	ldp	x23, x24, [sp, #48]
  427f98:	b	427ea0 <wcrtomb@plt+0x23280>
  427f9c:	stp	x25, x26, [sp, #64]
  427fa0:	bl	404ad0 <__errno_location@plt>
  427fa4:	ldr	w0, [x0]
  427fa8:	bl	43a5a0 <argp_parse@@Base+0x66b8>
  427fac:	stp	x25, x26, [sp, #64]
  427fb0:	bl	404ad0 <__errno_location@plt>
  427fb4:	ldr	w0, [x0]
  427fb8:	bl	43a560 <argp_parse@@Base+0x6678>
  427fbc:	nop
  427fc0:	stp	x29, x30, [sp, #-32]!
  427fc4:	mov	x29, sp
  427fc8:	stp	x19, x20, [sp, #16]
  427fcc:	mov	x19, x0
  427fd0:	mov	x20, x1
  427fd4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  427fd8:	add	x1, x1, #0x4a0
  427fdc:	bl	404a90 <strcspn@plt>
  427fe0:	ldrb	w3, [x19, x0]
  427fe4:	add	x4, x19, x0
  427fe8:	cbz	w3, 428024 <wcrtomb@plt+0x23404>
  427fec:	mov	x5, x4
  427ff0:	b	42800c <wcrtomb@plt+0x233ec>
  427ff4:	cmp	w3, #0x23
  427ff8:	b.eq	42803c <wcrtomb@plt+0x2341c>  // b.none
  427ffc:	strb	w3, [x4], #1
  428000:	mov	x5, x2
  428004:	ldrb	w3, [x2]
  428008:	cbz	w3, 428024 <wcrtomb@plt+0x23404>
  42800c:	cmp	w3, #0x9
  428010:	add	x2, x5, #0x1
  428014:	b.ne	427ff4 <wcrtomb@plt+0x233d4>  // b.any
  428018:	ldrb	w3, [x2]
  42801c:	mov	x5, x2
  428020:	cbnz	w3, 42800c <wcrtomb@plt+0x233ec>
  428024:	sub	x19, x4, x19
  428028:	str	x19, [x20]
  42802c:	strb	wzr, [x4]
  428030:	ldp	x19, x20, [sp, #16]
  428034:	ldp	x29, x30, [sp], #32
  428038:	ret
  42803c:	ldrb	w0, [x5]
  428040:	cmp	w0, #0xa
  428044:	b.eq	428058 <wcrtomb@plt+0x23438>  // b.none
  428048:	ldrb	w3, [x2]
  42804c:	add	x2, x2, #0x1
  428050:	cmp	w3, #0xa
  428054:	b.ne	428048 <wcrtomb@plt+0x23428>  // b.any
  428058:	mov	w3, #0xa                   	// #10
  42805c:	b	427ffc <wcrtomb@plt+0x233dc>
  428060:	mov	x12, #0x1010                	// #4112
  428064:	sub	sp, sp, x12
  428068:	cmn	w0, #0x64
  42806c:	stp	x29, x30, [sp]
  428070:	mov	x29, sp
  428074:	stp	x19, x20, [sp, #16]
  428078:	mov	x20, x1
  42807c:	stp	x21, x22, [sp, #32]
  428080:	b.eq	428184 <wcrtomb@plt+0x23564>  // b.none
  428084:	mov	w19, w0
  428088:	ldrb	w0, [x1]
  42808c:	cmp	w0, #0x2f
  428090:	b.eq	428184 <wcrtomb@plt+0x23564>  // b.none
  428094:	stp	x23, x24, [sp, #48]
  428098:	add	x23, sp, #0x50
  42809c:	mov	x2, x1
  4280a0:	mov	x0, x23
  4280a4:	mov	w1, w19
  4280a8:	bl	442218 <_obstack_memory_used@@Base+0x28>
  4280ac:	mov	x22, x0
  4280b0:	cbz	x0, 428114 <wcrtomb@plt+0x234f4>
  4280b4:	str	x25, [sp, #64]
  4280b8:	bl	404280 <acl_delete_def_file@plt>
  4280bc:	mov	w21, w0
  4280c0:	bl	404ad0 <__errno_location@plt>
  4280c4:	cmp	x22, x23
  4280c8:	ldr	w25, [x0]
  4280cc:	mov	x24, x0
  4280d0:	b.eq	4280dc <wcrtomb@plt+0x234bc>  // b.none
  4280d4:	mov	x0, x22
  4280d8:	bl	4047b0 <free@plt>
  4280dc:	cmn	w21, #0x1
  4280e0:	b.ne	4281ac <wcrtomb@plt+0x2358c>  // b.any
  4280e4:	cmp	w25, #0x14
  4280e8:	b.eq	428110 <wcrtomb@plt+0x234f0>  // b.none
  4280ec:	sub	w0, w25, #0x1
  4280f0:	cmp	w0, #0x1
  4280f4:	ccmp	w25, #0xd, #0x4, hi  // hi = pmore
  4280f8:	b.eq	428110 <wcrtomb@plt+0x234f0>  // b.none
  4280fc:	cmp	w25, #0x26
  428100:	mov	w0, #0x5f                  	// #95
  428104:	ccmp	w25, w0, #0x4, ne  // ne = any
  428108:	b.ne	428254 <wcrtomb@plt+0x23634>  // b.any
  42810c:	nop
  428110:	ldr	x25, [sp, #64]
  428114:	mov	x0, x23
  428118:	bl	440560 <argp_parse@@Base+0xc678>
  42811c:	cbnz	w0, 42829c <wcrtomb@plt+0x2367c>
  428120:	tbnz	w19, #31, 428130 <wcrtomb@plt+0x23510>
  428124:	ldr	w0, [sp, #80]
  428128:	cmp	w0, w19
  42812c:	b.eq	428264 <wcrtomb@plt+0x23644>  // b.none
  428130:	mov	w0, w19
  428134:	bl	404060 <fchdir@plt>
  428138:	cbnz	w0, 428218 <wcrtomb@plt+0x235f8>
  42813c:	mov	x0, x20
  428140:	bl	404280 <acl_delete_def_file@plt>
  428144:	mov	w21, w0
  428148:	cmn	w0, #0x1
  42814c:	b.eq	4281d0 <wcrtomb@plt+0x235b0>  // b.none
  428150:	mov	x0, x23
  428154:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  428158:	cbnz	w0, 42828c <wcrtomb@plt+0x2366c>
  42815c:	mov	x0, x23
  428160:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  428164:	mov	w0, w21
  428168:	mov	x12, #0x1010                	// #4112
  42816c:	ldp	x29, x30, [sp]
  428170:	ldp	x19, x20, [sp, #16]
  428174:	ldp	x21, x22, [sp, #32]
  428178:	ldp	x23, x24, [sp, #48]
  42817c:	add	sp, sp, x12
  428180:	ret
  428184:	mov	x0, x20
  428188:	bl	404280 <acl_delete_def_file@plt>
  42818c:	mov	w21, w0
  428190:	mov	w0, w21
  428194:	mov	x12, #0x1010                	// #4112
  428198:	ldp	x29, x30, [sp]
  42819c:	ldp	x19, x20, [sp, #16]
  4281a0:	ldp	x21, x22, [sp, #32]
  4281a4:	add	sp, sp, x12
  4281a8:	ret
  4281ac:	mov	w0, w21
  4281b0:	mov	x12, #0x1010                	// #4112
  4281b4:	ldp	x29, x30, [sp]
  4281b8:	ldp	x19, x20, [sp, #16]
  4281bc:	ldp	x21, x22, [sp, #32]
  4281c0:	ldp	x23, x24, [sp, #48]
  4281c4:	ldr	x25, [sp, #64]
  4281c8:	add	sp, sp, x12
  4281cc:	ret
  4281d0:	bl	404ad0 <__errno_location@plt>
  4281d4:	mov	x19, x0
  4281d8:	mov	x0, x23
  4281dc:	ldr	w20, [x19]
  4281e0:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  4281e4:	cbnz	w0, 42828c <wcrtomb@plt+0x2366c>
  4281e8:	mov	x0, x23
  4281ec:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  4281f0:	cbz	w20, 428284 <wcrtomb@plt+0x23664>
  4281f4:	ldp	x23, x24, [sp, #48]
  4281f8:	str	w20, [x19]
  4281fc:	mov	w0, w21
  428200:	mov	x12, #0x1010                	// #4112
  428204:	ldp	x29, x30, [sp]
  428208:	ldp	x19, x20, [sp, #16]
  42820c:	ldp	x21, x22, [sp, #32]
  428210:	add	sp, sp, x12
  428214:	ret
  428218:	bl	404ad0 <__errno_location@plt>
  42821c:	mov	x19, x0
  428220:	mov	x0, x23
  428224:	mov	w21, #0xffffffff            	// #-1
  428228:	ldr	w20, [x19]
  42822c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  428230:	ldp	x23, x24, [sp, #48]
  428234:	str	w20, [x19]
  428238:	mov	w0, w21
  42823c:	mov	x12, #0x1010                	// #4112
  428240:	ldp	x29, x30, [sp]
  428244:	ldp	x19, x20, [sp, #16]
  428248:	ldp	x21, x22, [sp, #32]
  42824c:	add	sp, sp, x12
  428250:	ret
  428254:	str	w25, [x24]
  428258:	ldp	x23, x24, [sp, #48]
  42825c:	ldr	x25, [sp, #64]
  428260:	b	428190 <wcrtomb@plt+0x23570>
  428264:	mov	x0, x23
  428268:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42826c:	mov	w21, #0xffffffff            	// #-1
  428270:	bl	404ad0 <__errno_location@plt>
  428274:	mov	w1, #0x9                   	// #9
  428278:	ldp	x23, x24, [sp, #48]
  42827c:	str	w1, [x0]
  428280:	b	428190 <wcrtomb@plt+0x23570>
  428284:	ldp	x23, x24, [sp, #48]
  428288:	b	428190 <wcrtomb@plt+0x23570>
  42828c:	str	x25, [sp, #64]
  428290:	bl	404ad0 <__errno_location@plt>
  428294:	ldr	w0, [x0]
  428298:	bl	43a5a0 <argp_parse@@Base+0x66b8>
  42829c:	str	x25, [sp, #64]
  4282a0:	bl	404ad0 <__errno_location@plt>
  4282a4:	ldr	w0, [x0]
  4282a8:	bl	43a560 <argp_parse@@Base+0x6678>
  4282ac:	nop
  4282b0:	mov	x12, #0x1020                	// #4128
  4282b4:	sub	sp, sp, x12
  4282b8:	cmn	w0, #0x64
  4282bc:	stp	x29, x30, [sp]
  4282c0:	mov	x29, sp
  4282c4:	stp	x19, x20, [sp, #16]
  4282c8:	mov	x20, x1
  4282cc:	stp	x21, x22, [sp, #32]
  4282d0:	mov	w22, w2
  4282d4:	stp	x23, x24, [sp, #48]
  4282d8:	mov	x23, x3
  4282dc:	b.eq	4283f0 <wcrtomb@plt+0x237d0>  // b.none
  4282e0:	mov	w19, w0
  4282e4:	ldrb	w0, [x1]
  4282e8:	cmp	w0, #0x2f
  4282ec:	b.eq	4283f0 <wcrtomb@plt+0x237d0>  // b.none
  4282f0:	stp	x25, x26, [sp, #64]
  4282f4:	add	x25, sp, #0x60
  4282f8:	mov	x2, x1
  4282fc:	mov	x0, x25
  428300:	mov	w1, w19
  428304:	bl	442218 <_obstack_memory_used@@Base+0x28>
  428308:	mov	x24, x0
  42830c:	cbz	x0, 428374 <wcrtomb@plt+0x23754>
  428310:	mov	x2, x23
  428314:	mov	w1, w22
  428318:	str	x27, [sp, #80]
  42831c:	bl	404550 <acl_set_file@plt>
  428320:	mov	w21, w0
  428324:	bl	404ad0 <__errno_location@plt>
  428328:	ldr	w27, [x0]
  42832c:	mov	x26, x0
  428330:	cmp	x24, x25
  428334:	b.eq	428340 <wcrtomb@plt+0x23720>  // b.none
  428338:	mov	x0, x24
  42833c:	bl	4047b0 <free@plt>
  428340:	cmn	w21, #0x1
  428344:	b.ne	428424 <wcrtomb@plt+0x23804>  // b.any
  428348:	cmp	w27, #0x14
  42834c:	b.eq	428370 <wcrtomb@plt+0x23750>  // b.none
  428350:	sub	w0, w27, #0x1
  428354:	cmp	w0, #0x1
  428358:	ccmp	w27, #0xd, #0x4, hi  // hi = pmore
  42835c:	b.eq	428370 <wcrtomb@plt+0x23750>  // b.none
  428360:	cmp	w27, #0x26
  428364:	mov	w0, #0x5f                  	// #95
  428368:	ccmp	w27, w0, #0x4, ne  // ne = any
  42836c:	b.ne	4284d8 <wcrtomb@plt+0x238b8>  // b.any
  428370:	ldr	x27, [sp, #80]
  428374:	mov	x0, x25
  428378:	bl	440560 <argp_parse@@Base+0xc678>
  42837c:	cbnz	w0, 428520 <wcrtomb@plt+0x23900>
  428380:	tbnz	w19, #31, 428390 <wcrtomb@plt+0x23770>
  428384:	ldr	w0, [sp, #96]
  428388:	cmp	w0, w19
  42838c:	b.eq	4284e8 <wcrtomb@plt+0x238c8>  // b.none
  428390:	mov	w0, w19
  428394:	bl	404060 <fchdir@plt>
  428398:	cbnz	w0, 428498 <wcrtomb@plt+0x23878>
  42839c:	mov	x2, x23
  4283a0:	mov	w1, w22
  4283a4:	mov	x0, x20
  4283a8:	bl	404550 <acl_set_file@plt>
  4283ac:	mov	w21, w0
  4283b0:	cmn	w0, #0x1
  4283b4:	b.eq	42844c <wcrtomb@plt+0x2382c>  // b.none
  4283b8:	mov	x0, x25
  4283bc:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  4283c0:	cbnz	w0, 428510 <wcrtomb@plt+0x238f0>
  4283c4:	mov	x0, x25
  4283c8:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  4283cc:	mov	w0, w21
  4283d0:	mov	x12, #0x1020                	// #4128
  4283d4:	ldp	x29, x30, [sp]
  4283d8:	ldp	x19, x20, [sp, #16]
  4283dc:	ldp	x21, x22, [sp, #32]
  4283e0:	ldp	x23, x24, [sp, #48]
  4283e4:	ldp	x25, x26, [sp, #64]
  4283e8:	add	sp, sp, x12
  4283ec:	ret
  4283f0:	mov	x2, x23
  4283f4:	mov	w1, w22
  4283f8:	mov	x0, x20
  4283fc:	bl	404550 <acl_set_file@plt>
  428400:	mov	w21, w0
  428404:	mov	w0, w21
  428408:	mov	x12, #0x1020                	// #4128
  42840c:	ldp	x29, x30, [sp]
  428410:	ldp	x19, x20, [sp, #16]
  428414:	ldp	x21, x22, [sp, #32]
  428418:	ldp	x23, x24, [sp, #48]
  42841c:	add	sp, sp, x12
  428420:	ret
  428424:	mov	w0, w21
  428428:	mov	x12, #0x1020                	// #4128
  42842c:	ldp	x29, x30, [sp]
  428430:	ldp	x19, x20, [sp, #16]
  428434:	ldp	x21, x22, [sp, #32]
  428438:	ldp	x23, x24, [sp, #48]
  42843c:	ldp	x25, x26, [sp, #64]
  428440:	ldr	x27, [sp, #80]
  428444:	add	sp, sp, x12
  428448:	ret
  42844c:	bl	404ad0 <__errno_location@plt>
  428450:	mov	x19, x0
  428454:	mov	x0, x25
  428458:	ldr	w20, [x19]
  42845c:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  428460:	cbnz	w0, 428510 <wcrtomb@plt+0x238f0>
  428464:	mov	x0, x25
  428468:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42846c:	cbz	w20, 428508 <wcrtomb@plt+0x238e8>
  428470:	ldp	x25, x26, [sp, #64]
  428474:	str	w20, [x19]
  428478:	mov	w0, w21
  42847c:	mov	x12, #0x1020                	// #4128
  428480:	ldp	x29, x30, [sp]
  428484:	ldp	x19, x20, [sp, #16]
  428488:	ldp	x21, x22, [sp, #32]
  42848c:	ldp	x23, x24, [sp, #48]
  428490:	add	sp, sp, x12
  428494:	ret
  428498:	bl	404ad0 <__errno_location@plt>
  42849c:	mov	x19, x0
  4284a0:	mov	x0, x25
  4284a4:	mov	w21, #0xffffffff            	// #-1
  4284a8:	ldr	w20, [x19]
  4284ac:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  4284b0:	ldp	x25, x26, [sp, #64]
  4284b4:	str	w20, [x19]
  4284b8:	mov	w0, w21
  4284bc:	mov	x12, #0x1020                	// #4128
  4284c0:	ldp	x29, x30, [sp]
  4284c4:	ldp	x19, x20, [sp, #16]
  4284c8:	ldp	x21, x22, [sp, #32]
  4284cc:	ldp	x23, x24, [sp, #48]
  4284d0:	add	sp, sp, x12
  4284d4:	ret
  4284d8:	str	w27, [x26]
  4284dc:	ldp	x25, x26, [sp, #64]
  4284e0:	ldr	x27, [sp, #80]
  4284e4:	b	428404 <wcrtomb@plt+0x237e4>
  4284e8:	mov	x0, x25
  4284ec:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  4284f0:	mov	w21, #0xffffffff            	// #-1
  4284f4:	bl	404ad0 <__errno_location@plt>
  4284f8:	mov	w1, #0x9                   	// #9
  4284fc:	ldp	x25, x26, [sp, #64]
  428500:	str	w1, [x0]
  428504:	b	428404 <wcrtomb@plt+0x237e4>
  428508:	ldp	x25, x26, [sp, #64]
  42850c:	b	428404 <wcrtomb@plt+0x237e4>
  428510:	str	x27, [sp, #80]
  428514:	bl	404ad0 <__errno_location@plt>
  428518:	ldr	w0, [x0]
  42851c:	bl	43a5a0 <argp_parse@@Base+0x66b8>
  428520:	str	x27, [sp, #80]
  428524:	bl	404ad0 <__errno_location@plt>
  428528:	ldr	w0, [x0]
  42852c:	bl	43a560 <argp_parse@@Base+0x6678>
  428530:	mov	x12, #0x1010                	// #4112
  428534:	sub	sp, sp, x12
  428538:	stp	x29, x30, [sp]
  42853c:	mov	x29, sp
  428540:	stp	x23, x24, [sp, #48]
  428544:	add	x23, sp, #0x50
  428548:	mov	w24, w2
  42854c:	mov	x2, x1
  428550:	stp	x19, x20, [sp, #16]
  428554:	mov	w19, w0
  428558:	stp	x21, x22, [sp, #32]
  42855c:	mov	x22, x1
  428560:	mov	w1, w0
  428564:	mov	x0, x23
  428568:	bl	442218 <_obstack_memory_used@@Base+0x28>
  42856c:	cbz	x0, 4285f4 <wcrtomb@plt+0x239d4>
  428570:	mov	w1, w24
  428574:	mov	x21, x0
  428578:	stp	x25, x26, [sp, #64]
  42857c:	bl	404760 <acl_get_file@plt>
  428580:	mov	x20, x0
  428584:	bl	404ad0 <__errno_location@plt>
  428588:	ldr	w26, [x0]
  42858c:	mov	x25, x0
  428590:	cmp	x21, x23
  428594:	b.eq	4285a0 <wcrtomb@plt+0x23980>  // b.none
  428598:	mov	x0, x21
  42859c:	bl	4047b0 <free@plt>
  4285a0:	cbz	x20, 4285c8 <wcrtomb@plt+0x239a8>
  4285a4:	ldp	x25, x26, [sp, #64]
  4285a8:	mov	x0, x20
  4285ac:	mov	x12, #0x1010                	// #4112
  4285b0:	ldp	x29, x30, [sp]
  4285b4:	ldp	x19, x20, [sp, #16]
  4285b8:	ldp	x21, x22, [sp, #32]
  4285bc:	ldp	x23, x24, [sp, #48]
  4285c0:	add	sp, sp, x12
  4285c4:	ret
  4285c8:	cmp	w26, #0x14
  4285cc:	b.eq	4285f0 <wcrtomb@plt+0x239d0>  // b.none
  4285d0:	sub	w0, w26, #0x1
  4285d4:	cmp	w0, #0x1
  4285d8:	ccmp	w26, #0xd, #0x4, hi  // hi = pmore
  4285dc:	b.eq	4285f0 <wcrtomb@plt+0x239d0>  // b.none
  4285e0:	cmp	w26, #0x26
  4285e4:	mov	w0, #0x5f                  	// #95
  4285e8:	ccmp	w26, w0, #0x4, ne  // ne = any
  4285ec:	b.ne	428704 <wcrtomb@plt+0x23ae4>  // b.any
  4285f0:	ldp	x25, x26, [sp, #64]
  4285f4:	mov	x0, x23
  4285f8:	bl	440560 <argp_parse@@Base+0xc678>
  4285fc:	cbnz	w0, 428710 <wcrtomb@plt+0x23af0>
  428600:	tbnz	w19, #31, 428610 <wcrtomb@plt+0x239f0>
  428604:	ldr	w0, [sp, #80]
  428608:	cmp	w19, w0
  42860c:	b.eq	4286a0 <wcrtomb@plt+0x23a80>  // b.none
  428610:	mov	w0, w19
  428614:	bl	404060 <fchdir@plt>
  428618:	cbnz	w0, 428664 <wcrtomb@plt+0x23a44>
  42861c:	mov	w1, w24
  428620:	mov	x0, x22
  428624:	bl	404760 <acl_get_file@plt>
  428628:	mov	x20, x0
  42862c:	cbz	x0, 4286bc <wcrtomb@plt+0x23a9c>
  428630:	mov	x0, x23
  428634:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  428638:	cbnz	w0, 428720 <wcrtomb@plt+0x23b00>
  42863c:	mov	x0, x23
  428640:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  428644:	mov	x0, x20
  428648:	mov	x12, #0x1010                	// #4112
  42864c:	ldp	x29, x30, [sp]
  428650:	ldp	x19, x20, [sp, #16]
  428654:	ldp	x21, x22, [sp, #32]
  428658:	ldp	x23, x24, [sp, #48]
  42865c:	add	sp, sp, x12
  428660:	ret
  428664:	bl	404ad0 <__errno_location@plt>
  428668:	mov	x19, x0
  42866c:	mov	x0, x23
  428670:	mov	x20, #0x0                   	// #0
  428674:	ldr	w21, [x19]
  428678:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42867c:	str	w21, [x19]
  428680:	mov	x0, x20
  428684:	mov	x12, #0x1010                	// #4112
  428688:	ldp	x29, x30, [sp]
  42868c:	ldp	x19, x20, [sp, #16]
  428690:	ldp	x21, x22, [sp, #32]
  428694:	ldp	x23, x24, [sp, #48]
  428698:	add	sp, sp, x12
  42869c:	ret
  4286a0:	mov	x0, x23
  4286a4:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  4286a8:	mov	x20, #0x0                   	// #0
  4286ac:	bl	404ad0 <__errno_location@plt>
  4286b0:	mov	w1, #0x9                   	// #9
  4286b4:	str	w1, [x0]
  4286b8:	b	4285a8 <wcrtomb@plt+0x23988>
  4286bc:	bl	404ad0 <__errno_location@plt>
  4286c0:	mov	x19, x0
  4286c4:	mov	x0, x23
  4286c8:	ldr	w21, [x19]
  4286cc:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  4286d0:	cbnz	w0, 428720 <wcrtomb@plt+0x23b00>
  4286d4:	mov	x0, x23
  4286d8:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  4286dc:	cbz	w21, 4285a8 <wcrtomb@plt+0x23988>
  4286e0:	str	w21, [x19]
  4286e4:	mov	x0, x20
  4286e8:	mov	x12, #0x1010                	// #4112
  4286ec:	ldp	x29, x30, [sp]
  4286f0:	ldp	x19, x20, [sp, #16]
  4286f4:	ldp	x21, x22, [sp, #32]
  4286f8:	ldp	x23, x24, [sp, #48]
  4286fc:	add	sp, sp, x12
  428700:	ret
  428704:	str	w26, [x25]
  428708:	ldp	x25, x26, [sp, #64]
  42870c:	b	4285a8 <wcrtomb@plt+0x23988>
  428710:	stp	x25, x26, [sp, #64]
  428714:	bl	404ad0 <__errno_location@plt>
  428718:	ldr	w0, [x0]
  42871c:	bl	43a560 <argp_parse@@Base+0x6678>
  428720:	stp	x25, x26, [sp, #64]
  428724:	bl	404ad0 <__errno_location@plt>
  428728:	ldr	w0, [x0]
  42872c:	bl	43a5a0 <argp_parse@@Base+0x66b8>
  428730:	cmn	w0, #0x64
  428734:	mov	x3, x1
  428738:	mov	w4, w2
  42873c:	b.eq	428750 <wcrtomb@plt+0x23b30>  // b.none
  428740:	ldrb	w5, [x1]
  428744:	cmp	w5, #0x2f
  428748:	b.eq	428750 <wcrtomb@plt+0x23b30>  // b.none
  42874c:	b	428530 <wcrtomb@plt+0x23910>
  428750:	mov	w1, w4
  428754:	mov	x0, x3
  428758:	b	404760 <acl_get_file@plt>
  42875c:	nop
  428760:	stp	x29, x30, [sp, #-128]!
  428764:	mov	x29, sp
  428768:	stp	x19, x20, [sp, #16]
  42876c:	stp	x23, x24, [sp, #48]
  428770:	mov	x24, x1
  428774:	stp	x25, x26, [sp, #64]
  428778:	mov	w25, w2
  42877c:	cbz	x3, 42892c <wcrtomb@plt+0x23d0c>
  428780:	mov	x20, x3
  428784:	stp	x21, x22, [sp, #32]
  428788:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42878c:	str	x27, [sp, #80]
  428790:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428794:	mov	x22, x3
  428798:	add	x23, x23, #0x4a8
  42879c:	ldrb	w0, [x20]
  4287a0:	add	x26, x26, #0x4b0
  4287a4:	mov	x21, x3
  4287a8:	cbz	w0, 428854 <wcrtomb@plt+0x23c34>
  4287ac:	nop
  4287b0:	mov	x1, x23
  4287b4:	mov	x0, x20
  4287b8:	bl	404a90 <strcspn@plt>
  4287bc:	add	x19, x20, x0
  4287c0:	ldrb	w0, [x20, x0]
  4287c4:	cmp	w0, #0x3a
  4287c8:	b.ne	4288b4 <wcrtomb@plt+0x23c94>  // b.any
  4287cc:	add	x27, x19, #0x1
  4287d0:	mov	x1, x23
  4287d4:	mov	x0, x27
  4287d8:	bl	404a90 <strcspn@plt>
  4287dc:	add	x19, x27, x0
  4287e0:	ldrb	w0, [x27, x0]
  4287e4:	cmp	w0, #0x3a
  4287e8:	b.ne	4288b4 <wcrtomb@plt+0x23c94>  // b.any
  4287ec:	add	x19, x19, #0x1
  4287f0:	mov	x1, x23
  4287f4:	mov	x0, x19
  4287f8:	bl	404a90 <strcspn@plt>
  4287fc:	add	x19, x19, x0
  428800:	cmp	x20, x21
  428804:	sub	x2, x19, x20
  428808:	add	x27, x21, x2
  42880c:	b.eq	42881c <wcrtomb@plt+0x23bfc>  // b.none
  428810:	mov	x1, x20
  428814:	mov	x0, x21
  428818:	bl	403f80 <memmove@plt>
  42881c:	ldrb	w0, [x19]
  428820:	cmp	w0, #0x3a
  428824:	b.ne	42883c <wcrtomb@plt+0x23c1c>  // b.any
  428828:	mov	x0, x19
  42882c:	mov	x1, x26
  428830:	bl	404a90 <strcspn@plt>
  428834:	add	x19, x19, x0
  428838:	ldrb	w0, [x19]
  42883c:	cmp	w0, #0x2c
  428840:	mov	x21, x27
  428844:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  428848:	b.eq	4288c8 <wcrtomb@plt+0x23ca8>  // b.none
  42884c:	mov	x20, x19
  428850:	cbnz	w0, 4287b0 <wcrtomb@plt+0x23b90>
  428854:	cmp	x20, x21
  428858:	b.eq	428860 <wcrtomb@plt+0x23c40>  // b.none
  42885c:	strb	wzr, [x21]
  428860:	mov	x0, x22
  428864:	bl	4049f0 <acl_from_text@plt>
  428868:	mov	x19, x0
  42886c:	ldp	x21, x22, [sp, #32]
  428870:	ldr	x27, [sp, #80]
  428874:	cbz	x19, 4289cc <wcrtomb@plt+0x23dac>
  428878:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  42887c:	mov	w2, w25
  428880:	mov	x3, x19
  428884:	mov	x1, x24
  428888:	ldr	w0, [x0, #2184]
  42888c:	bl	4282b0 <wcrtomb@plt+0x23690>
  428890:	cmn	w0, #0x1
  428894:	b.eq	4288d8 <wcrtomb@plt+0x23cb8>  // b.none
  428898:	mov	x0, x19
  42889c:	bl	404bf0 <acl_free@plt>
  4288a0:	ldp	x19, x20, [sp, #16]
  4288a4:	ldp	x23, x24, [sp, #48]
  4288a8:	ldp	x25, x26, [sp, #64]
  4288ac:	ldp	x29, x30, [sp], #128
  4288b0:	ret
  4288b4:	sub	x2, x19, x20
  4288b8:	cmp	x20, x21
  4288bc:	add	x27, x21, x2
  4288c0:	b.ne	428810 <wcrtomb@plt+0x23bf0>  // b.any
  4288c4:	b	428838 <wcrtomb@plt+0x23c18>
  4288c8:	add	x20, x19, #0x1
  4288cc:	strb	w0, [x21], #1
  4288d0:	ldrb	w0, [x20]
  4288d4:	b	4287a8 <wcrtomb@plt+0x23b88>
  4288d8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4288dc:	ldr	w0, [x0, #408]
  4288e0:	tbz	w0, #21, 428898 <wcrtomb@plt+0x23c78>
  4288e4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4288e8:	ldr	x0, [x0, #952]
  4288ec:	cbz	x0, 4288f4 <wcrtomb@plt+0x23cd4>
  4288f0:	blr	x0
  4288f4:	bl	404ad0 <__errno_location@plt>
  4288f8:	mov	x3, x0
  4288fc:	mov	w2, #0x5                   	// #5
  428900:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428904:	mov	x0, #0x0                   	// #0
  428908:	add	x1, x1, #0x510
  42890c:	ldr	w20, [x3]
  428910:	bl	4049c0 <dcgettext@plt>
  428914:	mov	x3, x24
  428918:	mov	x2, x0
  42891c:	mov	w1, w20
  428920:	mov	w0, #0x0                   	// #0
  428924:	bl	404050 <error@plt>
  428928:	b	428898 <wcrtomb@plt+0x23c78>
  42892c:	and	w4, w4, #0xff
  428930:	cbnz	w4, 4289f0 <wcrtomb@plt+0x23dd0>
  428934:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428938:	add	x1, x1, #0x548
  42893c:	ldr	w0, [x0]
  428940:	ldp	x2, x3, [x1]
  428944:	stp	x2, x3, [sp, #96]
  428948:	ldp	x2, x3, [x1, #16]
  42894c:	stp	x2, x3, [sp, #112]
  428950:	tbz	w0, #8, 42895c <wcrtomb@plt+0x23d3c>
  428954:	mov	w1, #0x72                  	// #114
  428958:	strb	w1, [sp, #102]
  42895c:	tbz	w0, #7, 428968 <wcrtomb@plt+0x23d48>
  428960:	mov	w1, #0x77                  	// #119
  428964:	strb	w1, [sp, #103]
  428968:	tbz	w0, #6, 428974 <wcrtomb@plt+0x23d54>
  42896c:	mov	w1, #0x78                  	// #120
  428970:	strb	w1, [sp, #104]
  428974:	tbz	w0, #5, 428980 <wcrtomb@plt+0x23d60>
  428978:	mov	w1, #0x72                  	// #114
  42897c:	strb	w1, [sp, #113]
  428980:	tbz	w0, #4, 42898c <wcrtomb@plt+0x23d6c>
  428984:	mov	w1, #0x77                  	// #119
  428988:	strb	w1, [sp, #114]
  42898c:	tbz	w0, #3, 428998 <wcrtomb@plt+0x23d78>
  428990:	mov	w1, #0x78                  	// #120
  428994:	strb	w1, [sp, #115]
  428998:	tbz	w0, #2, 4289a4 <wcrtomb@plt+0x23d84>
  42899c:	mov	w1, #0x72                  	// #114
  4289a0:	strb	w1, [sp, #124]
  4289a4:	tbz	w0, #1, 4289b0 <wcrtomb@plt+0x23d90>
  4289a8:	mov	w1, #0x77                  	// #119
  4289ac:	strb	w1, [sp, #125]
  4289b0:	tbz	w0, #0, 4289bc <wcrtomb@plt+0x23d9c>
  4289b4:	mov	w0, #0x78                  	// #120
  4289b8:	strb	w0, [sp, #126]
  4289bc:	add	x0, sp, #0x60
  4289c0:	bl	4049f0 <acl_from_text@plt>
  4289c4:	mov	x19, x0
  4289c8:	cbnz	x19, 428878 <wcrtomb@plt+0x23c58>
  4289cc:	mov	x1, x24
  4289d0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4289d4:	add	x0, x0, #0x500
  4289d8:	bl	429b40 <wcrtomb@plt+0x24f20>
  4289dc:	ldp	x19, x20, [sp, #16]
  4289e0:	ldp	x23, x24, [sp, #48]
  4289e4:	ldp	x25, x26, [sp, #64]
  4289e8:	ldp	x29, x30, [sp], #128
  4289ec:	ret
  4289f0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  4289f4:	ldr	w0, [x0, #2184]
  4289f8:	bl	428060 <wcrtomb@plt+0x23440>
  4289fc:	cbz	w0, 4288a0 <wcrtomb@plt+0x23c80>
  428a00:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  428a04:	ldr	w0, [x0, #408]
  428a08:	tbz	w0, #21, 4288a0 <wcrtomb@plt+0x23c80>
  428a0c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  428a10:	ldr	x0, [x0, #952]
  428a14:	cbz	x0, 428a1c <wcrtomb@plt+0x23dfc>
  428a18:	blr	x0
  428a1c:	bl	404ad0 <__errno_location@plt>
  428a20:	mov	x3, x0
  428a24:	mov	w2, #0x5                   	// #5
  428a28:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428a2c:	mov	x0, #0x0                   	// #0
  428a30:	add	x1, x1, #0x4b8
  428a34:	ldr	w19, [x3]
  428a38:	bl	4049c0 <dcgettext@plt>
  428a3c:	mov	x3, x24
  428a40:	mov	x2, x0
  428a44:	mov	w1, w19
  428a48:	mov	w0, #0x0                   	// #0
  428a4c:	bl	404050 <error@plt>
  428a50:	b	4288a0 <wcrtomb@plt+0x23c80>
  428a54:	nop
  428a58:	stp	x29, x30, [sp, #-48]!
  428a5c:	mov	x29, sp
  428a60:	str	x21, [sp, #32]
  428a64:	mov	x21, x0
  428a68:	ldr	x0, [x1, #16]
  428a6c:	cbz	x0, 428ac0 <wcrtomb@plt+0x23ea0>
  428a70:	stp	x19, x20, [sp, #16]
  428a74:	mov	x20, x1
  428a78:	mov	x19, #0x0                   	// #0
  428a7c:	b	428a8c <wcrtomb@plt+0x23e6c>
  428a80:	ldr	x2, [x20, #16]
  428a84:	cmp	x2, x19
  428a88:	b.ls	428abc <wcrtomb@plt+0x23e9c>  // b.plast
  428a8c:	ldr	x3, [x20]
  428a90:	mov	x1, x21
  428a94:	mov	w2, #0x0                   	// #0
  428a98:	ldr	x0, [x3, x19, lsl #3]
  428a9c:	add	x19, x19, #0x1
  428aa0:	bl	4048c0 <fnmatch@plt>
  428aa4:	cbnz	w0, 428a80 <wcrtomb@plt+0x23e60>
  428aa8:	mov	w0, #0x1                   	// #1
  428aac:	ldp	x19, x20, [sp, #16]
  428ab0:	ldr	x21, [sp, #32]
  428ab4:	ldp	x29, x30, [sp], #48
  428ab8:	ret
  428abc:	ldp	x19, x20, [sp, #16]
  428ac0:	mov	w0, #0x0                   	// #0
  428ac4:	ldr	x21, [sp, #32]
  428ac8:	ldp	x29, x30, [sp], #48
  428acc:	ret
  428ad0:	stp	x29, x30, [sp, #-32]!
  428ad4:	mov	x29, sp
  428ad8:	stp	x19, x20, [sp, #16]
  428adc:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  428ae0:	add	x19, x19, #0xd00
  428ae4:	mov	x20, x0
  428ae8:	ldr	x2, [x19, #8]
  428aec:	cbnz	x2, 428b38 <wcrtomb@plt+0x23f18>
  428af0:	and	w1, w1, #0xff
  428af4:	cbz	w1, 428b0c <wcrtomb@plt+0x23eec>
  428af8:	ldr	x0, [x19, #32]
  428afc:	cbnz	x0, 428b48 <wcrtomb@plt+0x23f28>
  428b00:	ldp	x19, x20, [sp, #16]
  428b04:	ldp	x29, x30, [sp], #32
  428b08:	ret
  428b0c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428b10:	mov	x2, #0x5                   	// #5
  428b14:	add	x1, x1, #0x568
  428b18:	bl	4043c0 <strncmp@plt>
  428b1c:	cmp	w0, #0x0
  428b20:	cset	w0, eq  // eq = none
  428b24:	cbnz	w0, 428af8 <wcrtomb@plt+0x23ed8>
  428b28:	mov	w0, #0x1                   	// #1
  428b2c:	ldp	x19, x20, [sp, #16]
  428b30:	ldp	x29, x30, [sp], #32
  428b34:	ret
  428b38:	mov	x1, x19
  428b3c:	bl	428a58 <wcrtomb@plt+0x23e38>
  428b40:	and	w0, w0, #0xff
  428b44:	b	428b24 <wcrtomb@plt+0x23f04>
  428b48:	add	x1, x19, #0x18
  428b4c:	mov	x0, x20
  428b50:	ldp	x19, x20, [sp, #16]
  428b54:	ldp	x29, x30, [sp], #32
  428b58:	b	428a58 <wcrtomb@plt+0x23e38>
  428b5c:	nop
  428b60:	cmp	x1, #0x0
  428b64:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  428b68:	b.ne	428b70 <wcrtomb@plt+0x23f50>  // b.any
  428b6c:	ret
  428b70:	stp	x29, x30, [sp, #-192]!
  428b74:	mov	x29, sp
  428b78:	stp	x19, x20, [sp, #16]
  428b7c:	stp	x21, x22, [sp, #32]
  428b80:	stp	x23, x24, [sp, #48]
  428b84:	mov	x24, x1
  428b88:	mov	x21, x24
  428b8c:	stp	x25, x26, [sp, #64]
  428b90:	mov	x25, x2
  428b94:	mov	x26, x0
  428b98:	stp	x27, x28, [sp, #80]
  428b9c:	bl	403ff0 <strlen@plt>
  428ba0:	mov	x22, x0
  428ba4:	adrp	x4, 404000 <fputs@plt>
  428ba8:	add	x0, sp, #0x68
  428bac:	add	x4, x4, #0x7b0
  428bb0:	adrp	x3, 440000 <argp_parse@@Base+0xc118>
  428bb4:	mov	x2, #0x0                   	// #0
  428bb8:	add	x3, x3, #0xf48
  428bbc:	mov	x1, #0x0                   	// #0
  428bc0:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428bc4:	bl	441fe0 <_obstack_begin@@Base>
  428bc8:	sxtw	x22, w22
  428bcc:	add	x27, x27, #0x570
  428bd0:	mov	w23, #0x0                   	// #0
  428bd4:	ldr	x19, [sp, #128]
  428bd8:	b	428c34 <wcrtomb@plt+0x24014>
  428bdc:	mov	x1, x26
  428be0:	mov	x2, x22
  428be4:	mov	x0, x19
  428be8:	bl	403f70 <memcpy@plt>
  428bec:	ldp	x0, x1, [sp, #128]
  428bf0:	add	x0, x0, x22
  428bf4:	str	x0, [sp, #128]
  428bf8:	sub	x1, x1, x0
  428bfc:	cmp	x1, w20, sxtw
  428c00:	b.cc	428c94 <wcrtomb@plt+0x24074>  // b.lo, b.ul, b.last
  428c04:	mov	x1, x21
  428c08:	mov	x2, x28
  428c0c:	bl	403f70 <memcpy@plt>
  428c10:	add	w20, w20, #0x1
  428c14:	ldr	x19, [sp, #128]
  428c18:	add	w23, w23, w20
  428c1c:	add	x0, x28, #0x1
  428c20:	add	x19, x19, x28
  428c24:	str	x19, [sp, #128]
  428c28:	cmp	x25, w23, sxtw
  428c2c:	add	x21, x21, x0
  428c30:	b.cc	428cbc <wcrtomb@plt+0x2409c>  // b.lo, b.ul, b.last
  428c34:	mov	x1, x27
  428c38:	mov	x0, x21
  428c3c:	bl	404a90 <strcspn@plt>
  428c40:	mov	x20, x0
  428c44:	cmp	x24, x21
  428c48:	ldr	x0, [sp, #136]
  428c4c:	cbz	w20, 428cc0 <wcrtomb@plt+0x240a0>
  428c50:	b.eq	428c70 <wcrtomb@plt+0x24050>  // b.none
  428c54:	cmp	x19, x0
  428c58:	b.eq	428ca8 <wcrtomb@plt+0x24088>  // b.none
  428c5c:	add	x0, x19, #0x1
  428c60:	str	x0, [sp, #128]
  428c64:	mov	w0, #0x2c                  	// #44
  428c68:	strb	w0, [x19]
  428c6c:	ldp	x19, x0, [sp, #128]
  428c70:	sub	x0, x0, x19
  428c74:	sxtw	x28, w20
  428c78:	cmp	x22, x0
  428c7c:	b.ls	428bdc <wcrtomb@plt+0x23fbc>  // b.plast
  428c80:	mov	x1, x22
  428c84:	add	x0, sp, #0x68
  428c88:	bl	442010 <_obstack_newchunk@@Base>
  428c8c:	ldr	x19, [sp, #128]
  428c90:	b	428bdc <wcrtomb@plt+0x23fbc>
  428c94:	add	x0, sp, #0x68
  428c98:	mov	x1, x28
  428c9c:	bl	442010 <_obstack_newchunk@@Base>
  428ca0:	ldr	x0, [sp, #128]
  428ca4:	b	428c04 <wcrtomb@plt+0x23fe4>
  428ca8:	add	x0, sp, #0x68
  428cac:	mov	x1, #0x1                   	// #1
  428cb0:	bl	442010 <_obstack_newchunk@@Base>
  428cb4:	ldr	x19, [sp, #128]
  428cb8:	b	428c5c <wcrtomb@plt+0x2403c>
  428cbc:	ldr	x0, [sp, #136]
  428cc0:	cmp	x19, x0
  428cc4:	b.eq	428d58 <wcrtomb@plt+0x24138>  // b.none
  428cc8:	add	x0, x19, #0x1
  428ccc:	str	x0, [sp, #128]
  428cd0:	strb	wzr, [x19]
  428cd4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  428cd8:	ldp	x0, x4, [sp, #120]
  428cdc:	ldr	x1, [x1, #3872]
  428ce0:	cmp	x0, x4
  428ce4:	b.eq	428d48 <wcrtomb@plt+0x24128>  // b.none
  428ce8:	ldr	x2, [sp, #152]
  428cec:	ldr	x3, [sp, #112]
  428cf0:	add	x4, x4, x2
  428cf4:	ldr	x5, [sp, #136]
  428cf8:	bic	x2, x4, x2
  428cfc:	str	x2, [sp, #128]
  428d00:	sub	x4, x2, x3
  428d04:	sub	x3, x5, x3
  428d08:	cmp	x4, x3
  428d0c:	b.ls	428d18 <wcrtomb@plt+0x240f8>  // b.plast
  428d10:	mov	x2, x5
  428d14:	str	x5, [sp, #128]
  428d18:	str	x2, [sp, #120]
  428d1c:	bl	404000 <fputs@plt>
  428d20:	add	x0, sp, #0x68
  428d24:	mov	x1, #0x0                   	// #0
  428d28:	bl	442160 <_obstack_free@@Base>
  428d2c:	ldp	x19, x20, [sp, #16]
  428d30:	ldp	x21, x22, [sp, #32]
  428d34:	ldp	x23, x24, [sp, #48]
  428d38:	ldp	x25, x26, [sp, #64]
  428d3c:	ldp	x27, x28, [sp, #80]
  428d40:	ldp	x29, x30, [sp], #192
  428d44:	ret
  428d48:	ldrb	w2, [sp, #184]
  428d4c:	orr	w2, w2, #0x2
  428d50:	strb	w2, [sp, #184]
  428d54:	b	428ce8 <wcrtomb@plt+0x240c8>
  428d58:	add	x0, sp, #0x68
  428d5c:	mov	x1, #0x1                   	// #1
  428d60:	bl	442010 <_obstack_newchunk@@Base>
  428d64:	ldr	x19, [sp, #128]
  428d68:	b	428cc8 <wcrtomb@plt+0x240a8>
  428d6c:	nop
  428d70:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  428d74:	ldr	w3, [x3, #840]
  428d78:	cmp	w3, #0x0
  428d7c:	b.gt	428d84 <wcrtomb@plt+0x24164>
  428d80:	ret
  428d84:	stp	x29, x30, [sp, #-64]!
  428d88:	mov	x29, sp
  428d8c:	stp	x19, x20, [sp, #16]
  428d90:	mov	w20, w0
  428d94:	mov	x19, x1
  428d98:	stp	x21, x22, [sp, #32]
  428d9c:	mov	x22, x2
  428da0:	mov	w21, w4
  428da4:	add	x2, x2, #0x58
  428da8:	bl	427d60 <wcrtomb@plt+0x23140>
  428dac:	cbz	w0, 428e14 <wcrtomb@plt+0x241f4>
  428db0:	cmn	w0, #0x1
  428db4:	b.eq	428eac <wcrtomb@plt+0x2428c>  // b.none
  428db8:	mov	x1, x19
  428dbc:	mov	w0, w20
  428dc0:	mov	w2, #0x8000                	// #32768
  428dc4:	str	x23, [sp, #48]
  428dc8:	bl	428730 <wcrtomb@plt+0x23b10>
  428dcc:	mov	x23, x0
  428dd0:	cbz	x0, 428e84 <wcrtomb@plt+0x24264>
  428dd4:	mov	x1, #0x0                   	// #0
  428dd8:	bl	4045e0 <acl_to_text@plt>
  428ddc:	mov	x1, x0
  428de0:	mov	x0, x23
  428de4:	mov	x23, x1
  428de8:	bl	404bf0 <acl_free@plt>
  428dec:	cbz	x23, 428ef8 <wcrtomb@plt+0x242d8>
  428df0:	mov	x0, x23
  428df4:	bl	441170 <argp_parse@@Base+0xd288>
  428df8:	add	x1, x22, #0x40
  428dfc:	str	x0, [x22, #56]
  428e00:	bl	427fc0 <wcrtomb@plt+0x233a0>
  428e04:	mov	x0, x23
  428e08:	bl	404bf0 <acl_free@plt>
  428e0c:	cbz	w21, 428e24 <wcrtomb@plt+0x24204>
  428e10:	ldr	x23, [sp, #48]
  428e14:	ldp	x19, x20, [sp, #16]
  428e18:	ldp	x21, x22, [sp, #32]
  428e1c:	ldp	x29, x30, [sp], #64
  428e20:	ret
  428e24:	mov	w0, w20
  428e28:	mov	x1, x19
  428e2c:	mov	w2, #0x4000                	// #16384
  428e30:	bl	428730 <wcrtomb@plt+0x23b10>
  428e34:	mov	x20, x0
  428e38:	cbz	x0, 428ec8 <wcrtomb@plt+0x242a8>
  428e3c:	mov	x1, #0x0                   	// #0
  428e40:	bl	4045e0 <acl_to_text@plt>
  428e44:	mov	x1, x0
  428e48:	mov	x0, x20
  428e4c:	mov	x20, x1
  428e50:	bl	404bf0 <acl_free@plt>
  428e54:	cbz	x20, 428f10 <wcrtomb@plt+0x242f0>
  428e58:	mov	x0, x20
  428e5c:	bl	441170 <argp_parse@@Base+0xd288>
  428e60:	str	x0, [x22, #72]
  428e64:	add	x1, x22, #0x50
  428e68:	bl	427fc0 <wcrtomb@plt+0x233a0>
  428e6c:	mov	x0, x20
  428e70:	ldp	x19, x20, [sp, #16]
  428e74:	ldp	x21, x22, [sp, #32]
  428e78:	ldr	x23, [sp, #48]
  428e7c:	ldp	x29, x30, [sp], #64
  428e80:	b	404bf0 <acl_free@plt>
  428e84:	bl	404ad0 <__errno_location@plt>
  428e88:	ldr	w0, [x0]
  428e8c:	cmp	w0, #0x5f
  428e90:	b.eq	428e0c <wcrtomb@plt+0x241ec>  // b.none
  428e94:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428e98:	mov	x1, x19
  428e9c:	add	x0, x0, #0x588
  428ea0:	bl	429b40 <wcrtomb@plt+0x24f20>
  428ea4:	cbnz	w21, 428e10 <wcrtomb@plt+0x241f0>
  428ea8:	b	428e24 <wcrtomb@plt+0x24204>
  428eac:	mov	x1, x19
  428eb0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428eb4:	ldp	x19, x20, [sp, #16]
  428eb8:	add	x0, x0, #0x578
  428ebc:	ldp	x21, x22, [sp, #32]
  428ec0:	ldp	x29, x30, [sp], #64
  428ec4:	b	429b40 <wcrtomb@plt+0x24f20>
  428ec8:	bl	404ad0 <__errno_location@plt>
  428ecc:	ldr	w0, [x0]
  428ed0:	cmp	w0, #0x5f
  428ed4:	b.eq	428e10 <wcrtomb@plt+0x241f0>  // b.none
  428ed8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428edc:	mov	x1, x19
  428ee0:	add	x0, x0, #0x588
  428ee4:	ldp	x19, x20, [sp, #16]
  428ee8:	ldp	x21, x22, [sp, #32]
  428eec:	ldr	x23, [sp, #48]
  428ef0:	ldp	x29, x30, [sp], #64
  428ef4:	b	429b40 <wcrtomb@plt+0x24f20>
  428ef8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428efc:	mov	x1, x19
  428f00:	add	x0, x0, #0x598
  428f04:	bl	429b40 <wcrtomb@plt+0x24f20>
  428f08:	cbnz	w21, 428e10 <wcrtomb@plt+0x241f0>
  428f0c:	b	428e24 <wcrtomb@plt+0x24204>
  428f10:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  428f14:	mov	x1, x19
  428f18:	add	x0, x0, #0x598
  428f1c:	b	428ee4 <wcrtomb@plt+0x242c4>
  428f20:	stp	x29, x30, [sp, #-48]!
  428f24:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  428f28:	mov	x29, sp
  428f2c:	stp	x21, x22, [sp, #32]
  428f30:	and	w21, w2, #0xff
  428f34:	ldr	w2, [x3, #840]
  428f38:	cmp	w21, #0x32
  428f3c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  428f40:	b.gt	428f50 <wcrtomb@plt+0x24330>
  428f44:	ldp	x21, x22, [sp, #32]
  428f48:	ldp	x29, x30, [sp], #48
  428f4c:	ret
  428f50:	stp	x19, x20, [sp, #16]
  428f54:	mov	x19, x0
  428f58:	add	x22, x0, #0x68
  428f5c:	mov	x0, x22
  428f60:	mov	x20, x1
  428f64:	ldr	x3, [x19, #56]
  428f68:	mov	w4, #0x0                   	// #0
  428f6c:	mov	w2, #0x8000                	// #32768
  428f70:	bl	428760 <wcrtomb@plt+0x23b40>
  428f74:	cmp	w21, #0x35
  428f78:	mov	w0, #0x44                  	// #68
  428f7c:	ccmp	w21, w0, #0x4, ne  // ne = any
  428f80:	b.eq	428f94 <wcrtomb@plt+0x24374>  // b.none
  428f84:	ldp	x19, x20, [sp, #16]
  428f88:	ldp	x21, x22, [sp, #32]
  428f8c:	ldp	x29, x30, [sp], #48
  428f90:	ret
  428f94:	mov	x1, x20
  428f98:	mov	x0, x22
  428f9c:	ldp	x21, x22, [sp, #32]
  428fa0:	mov	w4, #0x1                   	// #1
  428fa4:	ldr	x3, [x19, #72]
  428fa8:	mov	w2, #0x4000                	// #16384
  428fac:	ldp	x19, x20, [sp, #16]
  428fb0:	ldp	x29, x30, [sp], #48
  428fb4:	b	428760 <wcrtomb@plt+0x23b40>
  428fb8:	stp	x29, x30, [sp, #-32]!
  428fbc:	tst	w1, #0xff
  428fc0:	mov	x29, sp
  428fc4:	stp	x19, x20, [sp, #16]
  428fc8:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  428fcc:	add	x19, x19, #0xd00
  428fd0:	add	x1, x19, #0x18
  428fd4:	mov	x20, x0
  428fd8:	csel	x19, x19, x1, ne  // ne = any
  428fdc:	ldp	x0, x2, [x19]
  428fe0:	ldr	x1, [x19, #16]
  428fe4:	cmp	x1, x2
  428fe8:	b.eq	429004 <wcrtomb@plt+0x243e4>  // b.none
  428fec:	add	x2, x1, #0x1
  428ff0:	str	x2, [x19, #16]
  428ff4:	str	x20, [x0, x1, lsl #3]
  428ff8:	ldp	x19, x20, [sp, #16]
  428ffc:	ldp	x29, x30, [sp], #32
  429000:	ret
  429004:	cbz	x2, 429050 <wcrtomb@plt+0x24430>
  429008:	cbz	x0, 429064 <wcrtomb@plt+0x24444>
  42900c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  429010:	movk	x1, #0xaaa, lsl #48
  429014:	cmp	x2, x1
  429018:	b.cs	429078 <wcrtomb@plt+0x24458>  // b.hs, b.nlast
  42901c:	add	x1, x2, #0x1
  429020:	add	x2, x1, x2, lsr #1
  429024:	lsl	x1, x2, #3
  429028:	str	x2, [x19, #8]
  42902c:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  429030:	str	x0, [x19]
  429034:	ldr	x1, [x19, #16]
  429038:	add	x2, x1, #0x1
  42903c:	str	x2, [x19, #16]
  429040:	str	x20, [x0, x1, lsl #3]
  429044:	ldp	x19, x20, [sp, #16]
  429048:	ldp	x29, x30, [sp], #32
  42904c:	ret
  429050:	mov	x2, #0x4                   	// #4
  429054:	str	x2, [x19, #8]
  429058:	mov	x1, #0x20                  	// #32
  42905c:	cbnz	x0, 42901c <wcrtomb@plt+0x243fc>
  429060:	b	429028 <wcrtomb@plt+0x24408>
  429064:	cmp	xzr, x2, lsr #61
  429068:	lsl	x1, x2, #3
  42906c:	cset	x3, ne  // ne = any
  429070:	tbnz	x2, #60, 429078 <wcrtomb@plt+0x24458>
  429074:	cbz	x3, 429028 <wcrtomb@plt+0x24408>
  429078:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  42907c:	nop
  429080:	stp	x29, x30, [sp, #-32]!
  429084:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  429088:	mov	x29, sp
  42908c:	str	x19, [sp, #16]
  429090:	add	x19, x0, #0xd00
  429094:	ldr	x1, [x19, #8]
  429098:	cbnz	x1, 4290b0 <wcrtomb@plt+0x24490>
  42909c:	ldr	x0, [x19, #32]
  4290a0:	cbnz	x0, 4290c0 <wcrtomb@plt+0x244a0>
  4290a4:	ldr	x19, [sp, #16]
  4290a8:	ldp	x29, x30, [sp], #32
  4290ac:	ret
  4290b0:	ldr	x0, [x0, #3328]
  4290b4:	bl	4047b0 <free@plt>
  4290b8:	ldr	x0, [x19, #32]
  4290bc:	cbz	x0, 4290a4 <wcrtomb@plt+0x24484>
  4290c0:	ldr	x0, [x19, #24]
  4290c4:	ldr	x19, [sp, #16]
  4290c8:	ldp	x29, x30, [sp], #32
  4290cc:	b	4047b0 <free@plt>
  4290d0:	stp	x29, x30, [sp, #-112]!
  4290d4:	adrp	x4, 483000 <argp_program_version_hook@@Base+0x290>
  4290d8:	mov	x29, sp
  4290dc:	ldr	w4, [x4, #600]
  4290e0:	str	x2, [sp, #96]
  4290e4:	cmp	w4, #0x0
  4290e8:	b.le	4292bc <wcrtomb@plt+0x2469c>
  4290ec:	stp	x19, x20, [sp, #16]
  4290f0:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4290f4:	add	x20, x20, #0xd00
  4290f8:	stp	x23, x24, [sp, #48]
  4290fc:	mov	x24, x1
  429100:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  429104:	ldr	x1, [x20, #48]
  429108:	stp	x21, x22, [sp, #32]
  42910c:	mov	w21, w3
  429110:	stp	x25, x26, [sp, #64]
  429114:	mov	w25, w0
  429118:	ldr	x2, [x19, #520]
  42911c:	cbz	x1, 429328 <wcrtomb@plt+0x24708>
  429120:	mov	x22, #0x5555555555555555    	// #6148914691236517205
  429124:	movk	x22, #0x5553
  429128:	cbnz	w21, 429194 <wcrtomb@plt+0x24574>
  42912c:	nop
  429130:	mov	x3, x2
  429134:	mov	w0, w25
  429138:	mov	x2, x1
  42913c:	mov	x1, x24
  429140:	bl	42fe20 <wcrtomb@plt+0x2b200>
  429144:	mov	x23, x0
  429148:	cmn	x0, #0x1
  42914c:	b.ne	4291a8 <wcrtomb@plt+0x24588>  // b.any
  429150:	bl	404ad0 <__errno_location@plt>
  429154:	ldr	w0, [x0]
  429158:	cmp	w0, #0x22
  42915c:	b.ne	42935c <wcrtomb@plt+0x2473c>  // b.any
  429160:	ldr	x0, [x20, #48]
  429164:	ldr	x1, [x19, #520]
  429168:	cbz	x0, 4292c4 <wcrtomb@plt+0x246a4>
  42916c:	cmp	x1, x22
  429170:	b.hi	4292d0 <wcrtomb@plt+0x246b0>  // b.pmore
  429174:	add	x2, x1, #0x1
  429178:	add	x1, x2, x1, lsr #1
  42917c:	str	x1, [x19, #520]
  429180:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  429184:	str	x0, [x20, #48]
  429188:	mov	x1, x0
  42918c:	ldr	x2, [x19, #520]
  429190:	cbz	w21, 429130 <wcrtomb@plt+0x24510>
  429194:	mov	w0, w21
  429198:	bl	404980 <flistxattr@plt>
  42919c:	mov	x23, x0
  4291a0:	cmn	x0, #0x1
  4291a4:	b.eq	429150 <wcrtomb@plt+0x24530>  // b.none
  4291a8:	ldp	x22, x0, [x20, #48]
  4291ac:	cbz	x0, 429390 <wcrtomb@plt+0x24770>
  4291b0:	cmp	x23, #0x0
  4291b4:	b.le	4293c8 <wcrtomb@plt+0x247a8>
  4291b8:	cmp	w21, #0x0
  4291bc:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4291c0:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4291c4:	add	x0, x0, #0x5d8
  4291c8:	mov	x26, #0x5555555555555555    	// #6148914691236517205
  4291cc:	add	x19, x19, #0x208
  4291d0:	stp	x27, x28, [sp, #80]
  4291d4:	adrp	x28, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4291d8:	add	x28, x28, #0x5c8
  4291dc:	csel	x0, x28, x0, eq  // eq = none
  4291e0:	movk	x26, #0x5553
  4291e4:	str	x0, [sp, #104]
  4291e8:	mov	x0, x22
  4291ec:	bl	403ff0 <strlen@plt>
  4291f0:	mov	x27, x0
  4291f4:	ldr	x2, [x20, #56]
  4291f8:	b	42925c <wcrtomb@plt+0x2463c>
  4291fc:	mov	x4, x3
  429200:	mov	x1, x24
  429204:	mov	x3, x2
  429208:	mov	w0, w25
  42920c:	mov	x2, x22
  429210:	bl	42f910 <wcrtomb@plt+0x2acf0>
  429214:	mov	x28, x0
  429218:	cmn	x0, #0x1
  42921c:	b.ne	42927c <wcrtomb@plt+0x2465c>  // b.any
  429220:	bl	404ad0 <__errno_location@plt>
  429224:	ldr	w0, [x0]
  429228:	cmp	w0, #0x22
  42922c:	b.ne	4292f8 <wcrtomb@plt+0x246d8>  // b.any
  429230:	ldr	x0, [x20, #56]
  429234:	ldr	x1, [x19, #8]
  429238:	cbz	x0, 4292e0 <wcrtomb@plt+0x246c0>
  42923c:	cmp	x1, x26
  429240:	b.hi	4292d4 <wcrtomb@plt+0x246b4>  // b.pmore
  429244:	add	x2, x1, #0x1
  429248:	add	x1, x2, x1, lsr #1
  42924c:	str	x1, [x19, #8]
  429250:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  429254:	mov	x2, x0
  429258:	str	x0, [x20, #56]
  42925c:	ldr	x3, [x19, #8]
  429260:	cbz	w21, 4291fc <wcrtomb@plt+0x245dc>
  429264:	mov	x1, x22
  429268:	mov	w0, w21
  42926c:	bl	404820 <fgetxattr@plt>
  429270:	mov	x28, x0
  429274:	cmn	x0, #0x1
  429278:	b.eq	429220 <wcrtomb@plt+0x24600>  // b.none
  42927c:	mov	x0, x22
  429280:	mov	w1, #0x1                   	// #1
  429284:	bl	428ad0 <wcrtomb@plt+0x23eb0>
  429288:	tst	w0, #0xff
  42928c:	b.eq	429310 <wcrtomb@plt+0x246f0>  // b.none
  429290:	sub	x23, x23, x27
  429294:	add	x27, x27, #0x1
  429298:	sub	x23, x23, #0x1
  42929c:	add	x22, x22, x27
  4292a0:	cmp	x23, #0x0
  4292a4:	b.gt	4291e8 <wcrtomb@plt+0x245c8>
  4292a8:	ldp	x19, x20, [sp, #16]
  4292ac:	ldp	x21, x22, [sp, #32]
  4292b0:	ldp	x23, x24, [sp, #48]
  4292b4:	ldp	x25, x26, [sp, #64]
  4292b8:	ldp	x27, x28, [sp, #80]
  4292bc:	ldp	x29, x30, [sp], #112
  4292c0:	ret
  4292c4:	cmp	x1, #0x0
  4292c8:	cbz	x1, 4292d8 <wcrtomb@plt+0x246b8>
  4292cc:	b.ge	42917c <wcrtomb@plt+0x2455c>  // b.tcont
  4292d0:	stp	x27, x28, [sp, #80]
  4292d4:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  4292d8:	mov	x1, #0x80                  	// #128
  4292dc:	b	42917c <wcrtomb@plt+0x2455c>
  4292e0:	cmp	x1, #0x0
  4292e4:	cbz	x1, 4292f0 <wcrtomb@plt+0x246d0>
  4292e8:	b.ge	42924c <wcrtomb@plt+0x2462c>  // b.tcont
  4292ec:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  4292f0:	mov	x1, #0x80                  	// #128
  4292f4:	b	42924c <wcrtomb@plt+0x2462c>
  4292f8:	cmp	w0, #0x3d
  4292fc:	b.eq	429290 <wcrtomb@plt+0x24670>  // b.none
  429300:	ldr	x0, [sp, #104]
  429304:	mov	x1, x24
  429308:	bl	429b40 <wcrtomb@plt+0x24f20>
  42930c:	b	429290 <wcrtomb@plt+0x24670>
  429310:	ldr	x2, [x20, #56]
  429314:	mov	x3, x28
  429318:	ldr	x0, [sp, #96]
  42931c:	mov	x1, x22
  429320:	bl	413bf0 <wcrtomb@plt+0xefd0>
  429324:	b	429290 <wcrtomb@plt+0x24670>
  429328:	cmp	x2, #0x0
  42932c:	cbz	x2, 4293b8 <wcrtomb@plt+0x24798>
  429330:	b.lt	4292d0 <wcrtomb@plt+0x246b0>  // b.tstop
  429334:	mov	x1, x2
  429338:	str	x2, [x19, #520]
  42933c:	mov	x0, #0x0                   	// #0
  429340:	mov	x22, #0x5555555555555555    	// #6148914691236517205
  429344:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  429348:	movk	x22, #0x5553
  42934c:	ldr	x2, [x19, #520]
  429350:	mov	x1, x0
  429354:	str	x0, [x20, #48]
  429358:	b	429128 <wcrtomb@plt+0x24508>
  42935c:	cmp	w21, #0x0
  429360:	mov	x1, x24
  429364:	ldp	x19, x20, [sp, #16]
  429368:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42936c:	ldp	x21, x22, [sp, #32]
  429370:	add	x0, x0, #0x5b8
  429374:	ldp	x23, x24, [sp, #48]
  429378:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42937c:	ldp	x25, x26, [sp, #64]
  429380:	add	x2, x2, #0x5a8
  429384:	ldp	x29, x30, [sp], #112
  429388:	csel	x0, x2, x0, eq  // eq = none
  42938c:	b	429b40 <wcrtomb@plt+0x24f20>
  429390:	add	x19, x19, #0x208
  429394:	ldr	x1, [x19, #8]
  429398:	cmp	x1, #0x0
  42939c:	cbz	x1, 4293c0 <wcrtomb@plt+0x247a0>
  4293a0:	b.lt	4292d0 <wcrtomb@plt+0x246b0>  // b.tstop
  4293a4:	mov	x0, #0x0                   	// #0
  4293a8:	str	x1, [x19, #8]
  4293ac:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  4293b0:	str	x0, [x20, #56]
  4293b4:	b	4291b0 <wcrtomb@plt+0x24590>
  4293b8:	mov	x2, #0x80                  	// #128
  4293bc:	b	429334 <wcrtomb@plt+0x24714>
  4293c0:	mov	x1, #0x80                  	// #128
  4293c4:	b	4293a4 <wcrtomb@plt+0x24784>
  4293c8:	ldp	x19, x20, [sp, #16]
  4293cc:	ldp	x21, x22, [sp, #32]
  4293d0:	ldp	x23, x24, [sp, #48]
  4293d4:	ldp	x25, x26, [sp, #64]
  4293d8:	b	4292bc <wcrtomb@plt+0x2469c>
  4293dc:	nop
  4293e0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4293e4:	ldr	w0, [x0, #928]
  4293e8:	cmp	w0, #0x0
  4293ec:	b.le	429454 <wcrtomb@plt+0x24834>
  4293f0:	stp	x29, x30, [sp, #-32]!
  4293f4:	mov	x29, sp
  4293f8:	str	x19, [sp, #16]
  4293fc:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  429400:	add	x19, x19, #0xd00
  429404:	ldr	w0, [x19, #64]
  429408:	cbnz	w0, 429440 <wcrtomb@plt+0x24820>
  42940c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  429410:	ldr	x0, [x0, #952]
  429414:	cbz	x0, 42941c <wcrtomb@plt+0x247fc>
  429418:	blr	x0
  42941c:	mov	w2, #0x5                   	// #5
  429420:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429424:	mov	x0, #0x0                   	// #0
  429428:	add	x1, x1, #0x5e8
  42942c:	bl	4049c0 <dcgettext@plt>
  429430:	mov	x2, x0
  429434:	mov	w1, #0x0                   	// #0
  429438:	mov	w0, #0x0                   	// #0
  42943c:	bl	404050 <error@plt>
  429440:	mov	w0, #0x1                   	// #1
  429444:	str	w0, [x19, #64]
  429448:	ldr	x19, [sp, #16]
  42944c:	ldp	x29, x30, [sp], #32
  429450:	ret
  429454:	ret
  429458:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42945c:	ldr	w0, [x0, #928]
  429460:	cmp	w0, #0x0
  429464:	b.le	4294cc <wcrtomb@plt+0x248ac>
  429468:	stp	x29, x30, [sp, #-32]!
  42946c:	mov	x29, sp
  429470:	str	x19, [sp, #16]
  429474:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  429478:	add	x19, x19, #0xd00
  42947c:	ldr	w0, [x19, #68]
  429480:	cbnz	w0, 4294b8 <wcrtomb@plt+0x24898>
  429484:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  429488:	ldr	x0, [x0, #952]
  42948c:	cbz	x0, 429494 <wcrtomb@plt+0x24874>
  429490:	blr	x0
  429494:	mov	w2, #0x5                   	// #5
  429498:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42949c:	mov	x0, #0x0                   	// #0
  4294a0:	add	x1, x1, #0x5e8
  4294a4:	bl	4049c0 <dcgettext@plt>
  4294a8:	mov	x2, x0
  4294ac:	mov	w1, #0x0                   	// #0
  4294b0:	mov	w0, #0x0                   	// #0
  4294b4:	bl	404050 <error@plt>
  4294b8:	mov	w0, #0x1                   	// #1
  4294bc:	str	w0, [x19, #68]
  4294c0:	ldr	x19, [sp, #16]
  4294c4:	ldp	x29, x30, [sp], #32
  4294c8:	ret
  4294cc:	ret
  4294d0:	adrp	x4, 483000 <argp_program_version_hook@@Base+0x290>
  4294d4:	ldr	w4, [x4, #600]
  4294d8:	cmp	w4, #0x0
  4294dc:	b.le	429648 <wcrtomb@plt+0x24a28>
  4294e0:	stp	x29, x30, [sp, #-112]!
  4294e4:	mov	x29, sp
  4294e8:	stp	x21, x22, [sp, #32]
  4294ec:	ldr	x22, [x0, #328]
  4294f0:	stp	x27, x28, [sp, #80]
  4294f4:	mov	x28, x0
  4294f8:	cbz	x22, 4295d8 <wcrtomb@plt+0x249b8>
  4294fc:	adrp	x27, 482000 <_obstack_memory_used@@Base+0x3fe10>
  429500:	add	x27, x27, #0x198
  429504:	stp	x23, x24, [sp, #48]
  429508:	mov	w24, w3
  42950c:	and	w23, w2, #0xff
  429510:	stp	x25, x26, [sp, #64]
  429514:	adrp	x26, 47f000 <_obstack_memory_used@@Base+0x3ce10>
  429518:	mov	x25, x1
  42951c:	add	x26, x26, #0x888
  429520:	mov	x21, #0x0                   	// #0
  429524:	stp	x19, x20, [sp, #16]
  429528:	mov	x20, #0x0                   	// #0
  42952c:	nop
  429530:	cmp	w23, #0x30
  429534:	ldr	x0, [x28, #336]
  429538:	ldr	x19, [x0, x20]
  42953c:	add	x19, x19, #0xd
  429540:	b.ne	429564 <wcrtomb@plt+0x24944>  // b.any
  429544:	mov	x0, x19
  429548:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42954c:	add	x1, x1, #0x630
  429550:	bl	404710 <strcmp@plt>
  429554:	cmp	w0, #0x0
  429558:	cset	w0, ne  // ne = any
  42955c:	cmp	w0, w24
  429560:	b.eq	4295bc <wcrtomb@plt+0x2499c>  // b.none
  429564:	mov	x0, x19
  429568:	mov	w1, #0x0                   	// #0
  42956c:	bl	428ad0 <wcrtomb@plt+0x23eb0>
  429570:	tst	w0, #0xff
  429574:	b.ne	4295b8 <wcrtomb@plt+0x24998>  // b.any
  429578:	ldr	x1, [x28, #336]
  42957c:	add	x1, x1, x20
  429580:	ldr	x3, [x1, #8]
  429584:	cbz	x3, 4295b8 <wcrtomb@plt+0x24998>
  429588:	ldr	w0, [x26]
  42958c:	mov	x2, x19
  429590:	cmp	w23, #0x32
  429594:	mov	w5, #0x0                   	// #0
  429598:	ldr	x4, [x1, #16]
  42959c:	mov	x1, x25
  4295a0:	b.eq	42964c <wcrtomb@plt+0x24a2c>  // b.none
  4295a4:	bl	42f240 <wcrtomb@plt+0x2a620>
  4295a8:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4295ac:	add	x22, x3, #0x610
  4295b0:	cmn	w0, #0x1
  4295b4:	b.eq	4295e8 <wcrtomb@plt+0x249c8>  // b.none
  4295b8:	ldr	x22, [x28, #328]
  4295bc:	add	x21, x21, #0x1
  4295c0:	cmp	x22, x21
  4295c4:	add	x20, x20, #0x18
  4295c8:	b.hi	429530 <wcrtomb@plt+0x24910>  // b.pmore
  4295cc:	ldp	x19, x20, [sp, #16]
  4295d0:	ldp	x23, x24, [sp, #48]
  4295d4:	ldp	x25, x26, [sp, #64]
  4295d8:	ldp	x21, x22, [sp, #32]
  4295dc:	ldp	x27, x28, [sp, #80]
  4295e0:	ldp	x29, x30, [sp], #112
  4295e4:	ret
  4295e8:	ldr	w0, [x27]
  4295ec:	tbz	w0, #21, 4295b8 <wcrtomb@plt+0x24998>
  4295f0:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4295f4:	ldr	x0, [x0, #952]
  4295f8:	cbz	x0, 429600 <wcrtomb@plt+0x249e0>
  4295fc:	blr	x0
  429600:	bl	404ad0 <__errno_location@plt>
  429604:	mov	x3, x0
  429608:	mov	w2, #0x5                   	// #5
  42960c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429610:	mov	x0, #0x0                   	// #0
  429614:	add	x1, x1, #0x648
  429618:	ldr	w7, [x3]
  42961c:	str	w7, [sp, #108]
  429620:	bl	4049c0 <dcgettext@plt>
  429624:	mov	x2, x0
  429628:	ldr	w7, [sp, #108]
  42962c:	mov	x5, x25
  429630:	mov	x4, x19
  429634:	mov	x3, x22
  429638:	mov	w1, w7
  42963c:	mov	w0, #0x0                   	// #0
  429640:	bl	404050 <error@plt>
  429644:	b	4295b8 <wcrtomb@plt+0x24998>
  429648:	ret
  42964c:	bl	42f460 <wcrtomb@plt+0x2a840>
  429650:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429654:	add	x22, x3, #0x620
  429658:	b	4295b0 <wcrtomb@plt+0x24990>
  42965c:	nop
  429660:	stp	x29, x30, [sp, #-64]!
  429664:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  429668:	mov	x29, sp
  42966c:	stp	x19, x20, [sp, #16]
  429670:	mov	x19, x0
  429674:	ldr	w0, [x2, #588]
  429678:	stp	x21, x22, [sp, #32]
  42967c:	mov	x22, x1
  429680:	cmp	w0, #0x1
  429684:	b.le	4297a4 <wcrtomb@plt+0x24b84>
  429688:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42968c:	stp	x23, x24, [sp, #48]
  429690:	adrp	x23, 483000 <argp_program_version_hook@@Base+0x290>
  429694:	ldr	w1, [x0, #600]
  429698:	adrp	x24, 483000 <argp_program_version_hook@@Base+0x290>
  42969c:	cmp	w1, #0x0
  4296a0:	b.le	42976c <wcrtomb@plt+0x24b4c>
  4296a4:	mov	w1, #0x20                  	// #32
  4296a8:	strh	w1, [x22]
  4296ac:	ldr	w0, [x0, #600]
  4296b0:	cmp	w0, #0x0
  4296b4:	b.le	429750 <wcrtomb@plt+0x24b30>
  4296b8:	ldr	x0, [x19, #328]
  4296bc:	cbz	x0, 429750 <wcrtomb@plt+0x24b30>
  4296c0:	mov	x20, #0x0                   	// #0
  4296c4:	mov	x21, #0x0                   	// #0
  4296c8:	b	4296d8 <wcrtomb@plt+0x24ab8>
  4296cc:	ldr	x0, [x19, #328]
  4296d0:	cmp	x0, x21
  4296d4:	b.ls	429750 <wcrtomb@plt+0x24b30>  // b.plast
  4296d8:	ldr	x0, [x19, #336]
  4296dc:	mov	w1, #0x0                   	// #0
  4296e0:	add	x21, x21, #0x1
  4296e4:	ldr	x0, [x0, x20]
  4296e8:	add	x20, x20, #0x18
  4296ec:	add	x0, x0, #0xd
  4296f0:	bl	428ad0 <wcrtomb@plt+0x23eb0>
  4296f4:	tst	w0, #0xff
  4296f8:	b.ne	4296cc <wcrtomb@plt+0x24aac>  // b.any
  4296fc:	mov	w0, #0x2a                  	// #42
  429700:	strb	w0, [x22]
  429704:	ldr	w0, [x23, #928]
  429708:	cmp	w0, #0x0
  42970c:	b.le	429720 <wcrtomb@plt+0x24b00>
  429710:	ldr	x0, [x19, #48]
  429714:	cbz	x0, 429720 <wcrtomb@plt+0x24b00>
  429718:	mov	w0, #0x2e                  	// #46
  42971c:	strb	w0, [x22]
  429720:	ldr	w0, [x24, #840]
  429724:	cmp	w0, #0x0
  429728:	b.le	42973c <wcrtomb@plt+0x24b1c>
  42972c:	ldr	x0, [x19, #64]
  429730:	cbnz	x0, 429788 <wcrtomb@plt+0x24b68>
  429734:	ldr	x0, [x19, #80]
  429738:	cbnz	x0, 429788 <wcrtomb@plt+0x24b68>
  42973c:	ldp	x19, x20, [sp, #16]
  429740:	ldp	x21, x22, [sp, #32]
  429744:	ldp	x23, x24, [sp, #48]
  429748:	ldp	x29, x30, [sp], #64
  42974c:	ret
  429750:	ldr	w0, [x23, #928]
  429754:	cmp	w0, #0x0
  429758:	b.gt	429710 <wcrtomb@plt+0x24af0>
  42975c:	ldr	w0, [x24, #840]
  429760:	cmp	w0, #0x0
  429764:	b.gt	42972c <wcrtomb@plt+0x24b0c>
  429768:	b	42973c <wcrtomb@plt+0x24b1c>
  42976c:	ldr	w1, [x23, #928]
  429770:	cmp	w1, #0x0
  429774:	b.gt	4296a4 <wcrtomb@plt+0x24a84>
  429778:	ldr	w1, [x24, #840]
  42977c:	cmp	w1, #0x0
  429780:	b.gt	4296a4 <wcrtomb@plt+0x24a84>
  429784:	b	429720 <wcrtomb@plt+0x24b00>
  429788:	mov	w0, #0x2b                  	// #43
  42978c:	strb	w0, [x22]
  429790:	ldp	x19, x20, [sp, #16]
  429794:	ldp	x21, x22, [sp, #32]
  429798:	ldp	x23, x24, [sp, #48]
  42979c:	ldp	x29, x30, [sp], #64
  4297a0:	ret
  4297a4:	strb	wzr, [x1]
  4297a8:	ldp	x19, x20, [sp, #16]
  4297ac:	ldp	x21, x22, [sp, #32]
  4297b0:	ldp	x29, x30, [sp], #64
  4297b4:	ret
  4297b8:	stp	x29, x30, [sp, #-64]!
  4297bc:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  4297c0:	mov	x29, sp
  4297c4:	stp	x19, x20, [sp, #16]
  4297c8:	mov	x19, x0
  4297cc:	ldr	w0, [x1, #588]
  4297d0:	cmp	w0, #0x2
  4297d4:	b.le	429924 <wcrtomb@plt+0x24d04>
  4297d8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  4297dc:	ldr	w0, [x0, #928]
  4297e0:	cmp	w0, #0x0
  4297e4:	b.le	429808 <wcrtomb@plt+0x24be8>
  4297e8:	ldr	x3, [x19, #48]
  4297ec:	cbz	x3, 429808 <wcrtomb@plt+0x24be8>
  4297f0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4297f4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4297f8:	mov	w1, #0x1                   	// #1
  4297fc:	add	x2, x2, #0x680
  429800:	ldr	x0, [x0, #3872]
  429804:	bl	404700 <__fprintf_chk@plt>
  429808:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42980c:	ldr	w0, [x0, #840]
  429810:	cmp	w0, #0x0
  429814:	b.le	429880 <wcrtomb@plt+0x24c60>
  429818:	ldr	x0, [x19, #64]
  42981c:	cbnz	x0, 429828 <wcrtomb@plt+0x24c08>
  429820:	ldr	x0, [x19, #80]
  429824:	cbz	x0, 429880 <wcrtomb@plt+0x24c60>
  429828:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42982c:	mov	x2, #0x5                   	// #5
  429830:	mov	x1, #0x1                   	// #1
  429834:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429838:	ldr	x3, [x20, #3872]
  42983c:	add	x0, x0, #0x690
  429840:	bl	4048b0 <fwrite@plt>
  429844:	ldp	x1, x2, [x19, #56]
  429848:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42984c:	add	x0, x0, #0x948
  429850:	bl	428b60 <wcrtomb@plt+0x23f40>
  429854:	ldr	x0, [x19, #64]
  429858:	ldr	x2, [x19, #80]
  42985c:	cbz	x0, 429864 <wcrtomb@plt+0x24c44>
  429860:	cbnz	x2, 429930 <wcrtomb@plt+0x24d10>
  429864:	ldr	x1, [x19, #72]
  429868:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42986c:	add	x0, x0, #0x698
  429870:	bl	428b60 <wcrtomb@plt+0x23f40>
  429874:	ldr	x1, [x20, #3872]
  429878:	mov	w0, #0xa                   	// #10
  42987c:	bl	404170 <fputc@plt>
  429880:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  429884:	ldr	w0, [x0, #600]
  429888:	cmp	w0, #0x0
  42988c:	b.le	429924 <wcrtomb@plt+0x24d04>
  429890:	ldr	x0, [x19, #328]
  429894:	cbz	x0, 429924 <wcrtomb@plt+0x24d04>
  429898:	stp	x21, x22, [sp, #32]
  42989c:	mov	x21, #0x0                   	// #0
  4298a0:	mov	x22, #0x0                   	// #0
  4298a4:	stp	x23, x24, [sp, #48]
  4298a8:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4298ac:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4298b0:	add	x23, x23, #0x6a8
  4298b4:	b	4298c8 <wcrtomb@plt+0x24ca8>
  4298b8:	ldr	x0, [x19, #328]
  4298bc:	add	x21, x21, #0x18
  4298c0:	cmp	x0, x22
  4298c4:	b.ls	42991c <wcrtomb@plt+0x24cfc>  // b.plast
  4298c8:	ldr	x0, [x19, #336]
  4298cc:	mov	w1, #0x0                   	// #0
  4298d0:	add	x22, x22, #0x1
  4298d4:	ldr	x20, [x0, x21]
  4298d8:	add	x20, x20, #0xd
  4298dc:	mov	x0, x20
  4298e0:	bl	428ad0 <wcrtomb@plt+0x23eb0>
  4298e4:	tst	w0, #0xff
  4298e8:	b.ne	4298b8 <wcrtomb@plt+0x24c98>  // b.any
  4298ec:	ldr	x3, [x19, #336]
  4298f0:	mov	x4, x20
  4298f4:	ldr	x0, [x24, #3872]
  4298f8:	add	x3, x3, x21
  4298fc:	mov	x2, x23
  429900:	mov	w1, #0x1                   	// #1
  429904:	add	x21, x21, #0x18
  429908:	ldr	x3, [x3, #16]
  42990c:	bl	404700 <__fprintf_chk@plt>
  429910:	ldr	x0, [x19, #328]
  429914:	cmp	x0, x22
  429918:	b.hi	4298c8 <wcrtomb@plt+0x24ca8>  // b.pmore
  42991c:	ldp	x21, x22, [sp, #32]
  429920:	ldp	x23, x24, [sp, #48]
  429924:	ldp	x19, x20, [sp, #16]
  429928:	ldp	x29, x30, [sp], #64
  42992c:	ret
  429930:	ldr	x1, [x20, #3872]
  429934:	mov	w0, #0x2c                  	// #44
  429938:	bl	404170 <fputc@plt>
  42993c:	ldr	x2, [x19, #80]
  429940:	b	429864 <wcrtomb@plt+0x24c44>
  429944:	nop
  429948:	tst	x0, #0x100
  42994c:	mov	w4, #0x2d                  	// #45
  429950:	mov	w3, #0x72                  	// #114
  429954:	csel	w3, w3, w4, ne  // ne = any
  429958:	tst	x0, #0x80
  42995c:	mov	w2, #0x77                  	// #119
  429960:	csel	w2, w2, w4, ne  // ne = any
  429964:	strb	w3, [x1]
  429968:	strb	w2, [x1, #1]
  42996c:	and	w2, w0, #0x40
  429970:	tbz	w0, #11, 429a10 <wcrtomb@plt+0x24df0>
  429974:	cmp	w2, #0x0
  429978:	mov	w5, #0x73                  	// #115
  42997c:	mov	w2, #0x53                  	// #83
  429980:	csel	w5, w5, w2, ne  // ne = any
  429984:	tst	x0, #0x20
  429988:	mov	w6, #0x2d                  	// #45
  42998c:	mov	w3, #0x72                  	// #114
  429990:	csel	w3, w3, w6, ne  // ne = any
  429994:	tst	x0, #0x10
  429998:	mov	w2, #0x77                  	// #119
  42999c:	csel	w2, w2, w6, ne  // ne = any
  4299a0:	strb	w5, [x1, #2]
  4299a4:	strb	w3, [x1, #3]
  4299a8:	and	w3, w0, #0x8
  4299ac:	strb	w2, [x1, #4]
  4299b0:	tbz	w0, #10, 429a38 <wcrtomb@plt+0x24e18>
  4299b4:	cmp	w3, #0x0
  4299b8:	mov	w4, #0x73                  	// #115
  4299bc:	mov	w2, #0x53                  	// #83
  4299c0:	csel	w4, w4, w2, ne  // ne = any
  4299c4:	tst	x0, #0x4
  4299c8:	mov	w5, #0x2d                  	// #45
  4299cc:	mov	w3, #0x72                  	// #114
  4299d0:	csel	w3, w3, w5, ne  // ne = any
  4299d4:	tst	x0, #0x2
  4299d8:	mov	w2, #0x77                  	// #119
  4299dc:	csel	w2, w2, w5, ne  // ne = any
  4299e0:	strb	w4, [x1, #5]
  4299e4:	strb	w3, [x1, #6]
  4299e8:	and	w3, w0, #0x1
  4299ec:	strb	w2, [x1, #7]
  4299f0:	tbz	w0, #9, 429a20 <wcrtomb@plt+0x24e00>
  4299f4:	cmp	w3, #0x0
  4299f8:	mov	w2, #0x54                  	// #84
  4299fc:	mov	w0, #0x74                  	// #116
  429a00:	csel	w0, w0, w2, ne  // ne = any
  429a04:	strb	w0, [x1, #8]
  429a08:	strb	wzr, [x1, #9]
  429a0c:	ret
  429a10:	cmp	w2, #0x0
  429a14:	mov	w5, #0x78                  	// #120
  429a18:	csel	w5, w5, w4, ne  // ne = any
  429a1c:	b	429984 <wcrtomb@plt+0x24d64>
  429a20:	cmp	w3, #0x0
  429a24:	mov	w0, #0x78                  	// #120
  429a28:	csel	w0, w0, w5, ne  // ne = any
  429a2c:	strb	w0, [x1, #8]
  429a30:	strb	wzr, [x1, #9]
  429a34:	ret
  429a38:	cmp	w3, #0x0
  429a3c:	mov	w4, #0x78                  	// #120
  429a40:	csel	w4, w4, w6, ne  // ne = any
  429a44:	b	4299c4 <wcrtomb@plt+0x24da4>
  429a48:	stp	x29, x30, [sp, #-48]!
  429a4c:	mov	x29, sp
  429a50:	stp	x19, x20, [sp, #16]
  429a54:	mov	x20, x0
  429a58:	stp	x21, x22, [sp, #32]
  429a5c:	mov	x21, x1
  429a60:	bl	404ad0 <__errno_location@plt>
  429a64:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  429a68:	ldr	w22, [x0]
  429a6c:	ldr	x1, [x1, #952]
  429a70:	cbz	x1, 429a78 <wcrtomb@plt+0x24e58>
  429a74:	blr	x1
  429a78:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429a7c:	add	x1, x1, #0x6b8
  429a80:	mov	w2, #0x5                   	// #5
  429a84:	mov	x0, #0x0                   	// #0
  429a88:	bl	4049c0 <dcgettext@plt>
  429a8c:	mov	x19, x0
  429a90:	mov	x0, x21
  429a94:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  429a98:	mov	x4, x20
  429a9c:	mov	x3, x0
  429aa0:	mov	x2, x19
  429aa4:	mov	w1, w22
  429aa8:	mov	w0, #0x0                   	// #0
  429aac:	bl	404050 <error@plt>
  429ab0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  429ab4:	mov	w1, #0x2                   	// #2
  429ab8:	ldp	x19, x20, [sp, #16]
  429abc:	str	w1, [x0, #3400]
  429ac0:	ldp	x21, x22, [sp, #32]
  429ac4:	ldp	x29, x30, [sp], #48
  429ac8:	ret
  429acc:	nop
  429ad0:	stp	x29, x30, [sp, #-48]!
  429ad4:	mov	x29, sp
  429ad8:	stp	x19, x20, [sp, #16]
  429adc:	mov	x20, x0
  429ae0:	stp	x21, x22, [sp, #32]
  429ae4:	mov	x21, x1
  429ae8:	bl	404ad0 <__errno_location@plt>
  429aec:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  429af0:	ldr	w22, [x0]
  429af4:	ldr	x1, [x1, #952]
  429af8:	cbz	x1, 429b00 <wcrtomb@plt+0x24ee0>
  429afc:	blr	x1
  429b00:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429b04:	add	x1, x1, #0x6b8
  429b08:	mov	w2, #0x5                   	// #5
  429b0c:	mov	x0, #0x0                   	// #0
  429b10:	bl	4049c0 <dcgettext@plt>
  429b14:	mov	x19, x0
  429b18:	mov	x0, x21
  429b1c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  429b20:	mov	x4, x20
  429b24:	mov	x3, x0
  429b28:	mov	x2, x19
  429b2c:	mov	w1, w22
  429b30:	mov	w0, #0x0                   	// #0
  429b34:	bl	404050 <error@plt>
  429b38:	bl	40e770 <wcrtomb@plt+0x9b50>
  429b3c:	nop
  429b40:	stp	x29, x30, [sp, #-48]!
  429b44:	mov	x29, sp
  429b48:	stp	x19, x20, [sp, #16]
  429b4c:	mov	x20, x0
  429b50:	stp	x21, x22, [sp, #32]
  429b54:	mov	x21, x1
  429b58:	bl	404ad0 <__errno_location@plt>
  429b5c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  429b60:	ldr	w22, [x0]
  429b64:	ldr	x1, [x1, #952]
  429b68:	cbz	x1, 429b70 <wcrtomb@plt+0x24f50>
  429b6c:	blr	x1
  429b70:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429b74:	add	x1, x1, #0x6c8
  429b78:	mov	w2, #0x5                   	// #5
  429b7c:	mov	x0, #0x0                   	// #0
  429b80:	bl	4049c0 <dcgettext@plt>
  429b84:	mov	x19, x0
  429b88:	mov	x0, x21
  429b8c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  429b90:	mov	x4, x20
  429b94:	mov	x2, x19
  429b98:	mov	w1, w22
  429b9c:	mov	x3, x0
  429ba0:	ldp	x19, x20, [sp, #16]
  429ba4:	mov	w0, #0x0                   	// #0
  429ba8:	ldp	x21, x22, [sp, #32]
  429bac:	ldp	x29, x30, [sp], #48
  429bb0:	b	404050 <error@plt>
  429bb4:	nop
  429bb8:	stp	x29, x30, [sp, #-64]!
  429bbc:	mov	x29, sp
  429bc0:	stp	x19, x20, [sp, #16]
  429bc4:	mov	w19, w1
  429bc8:	mov	x20, x0
  429bcc:	str	x21, [sp, #32]
  429bd0:	bl	404ad0 <__errno_location@plt>
  429bd4:	mov	x2, x0
  429bd8:	add	x1, sp, #0x30
  429bdc:	mov	w0, w19
  429be0:	ldr	w21, [x2]
  429be4:	bl	429948 <wcrtomb@plt+0x24d28>
  429be8:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  429bec:	ldr	x0, [x0, #952]
  429bf0:	cbz	x0, 429bf8 <wcrtomb@plt+0x24fd8>
  429bf4:	blr	x0
  429bf8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429bfc:	add	x1, x1, #0x6e0
  429c00:	mov	w2, #0x5                   	// #5
  429c04:	mov	x0, #0x0                   	// #0
  429c08:	bl	4049c0 <dcgettext@plt>
  429c0c:	mov	x19, x0
  429c10:	mov	x0, x20
  429c14:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  429c18:	add	x4, sp, #0x30
  429c1c:	mov	x3, x0
  429c20:	mov	x2, x19
  429c24:	mov	w1, w21
  429c28:	mov	w0, #0x0                   	// #0
  429c2c:	bl	404050 <error@plt>
  429c30:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  429c34:	mov	w1, #0x2                   	// #2
  429c38:	ldp	x19, x20, [sp, #16]
  429c3c:	str	w1, [x0, #3400]
  429c40:	ldr	x21, [sp, #32]
  429c44:	ldp	x29, x30, [sp], #64
  429c48:	ret
  429c4c:	nop
  429c50:	stp	x29, x30, [sp, #-64]!
  429c54:	mov	x29, sp
  429c58:	stp	x19, x20, [sp, #16]
  429c5c:	mov	w19, w1
  429c60:	mov	w20, w2
  429c64:	stp	x21, x22, [sp, #32]
  429c68:	mov	x22, x0
  429c6c:	str	x23, [sp, #48]
  429c70:	bl	404ad0 <__errno_location@plt>
  429c74:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  429c78:	ldr	w23, [x0]
  429c7c:	ldr	x1, [x1, #952]
  429c80:	cbz	x1, 429c88 <wcrtomb@plt+0x25068>
  429c84:	blr	x1
  429c88:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429c8c:	add	x1, x1, #0x700
  429c90:	mov	w2, #0x5                   	// #5
  429c94:	mov	x0, #0x0                   	// #0
  429c98:	bl	4049c0 <dcgettext@plt>
  429c9c:	mov	x21, x0
  429ca0:	mov	x0, x22
  429ca4:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  429ca8:	mov	x2, x21
  429cac:	mov	x3, x0
  429cb0:	mov	w5, w20
  429cb4:	mov	w4, w19
  429cb8:	mov	w1, w23
  429cbc:	mov	w0, #0x0                   	// #0
  429cc0:	bl	404050 <error@plt>
  429cc4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  429cc8:	mov	w1, #0x2                   	// #2
  429ccc:	ldp	x19, x20, [sp, #16]
  429cd0:	str	w1, [x0, #3400]
  429cd4:	ldp	x21, x22, [sp, #32]
  429cd8:	ldr	x23, [sp, #48]
  429cdc:	ldp	x29, x30, [sp], #64
  429ce0:	ret
  429ce4:	nop
  429ce8:	mov	x1, x0
  429cec:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429cf0:	add	x0, x2, #0x730
  429cf4:	b	429a48 <wcrtomb@plt+0x24e28>
  429cf8:	mov	x1, x0
  429cfc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429d00:	add	x0, x2, #0x730
  429d04:	b	429b40 <wcrtomb@plt+0x24f20>
  429d08:	stp	x29, x30, [sp, #-16]!
  429d0c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429d10:	mov	x1, x0
  429d14:	mov	x29, sp
  429d18:	add	x0, x2, #0x738
  429d1c:	bl	429ad0 <wcrtomb@plt+0x24eb0>
  429d20:	stp	x29, x30, [sp, #-48]!
  429d24:	mov	x29, sp
  429d28:	stp	x19, x20, [sp, #16]
  429d2c:	mov	x20, x1
  429d30:	stp	x21, x22, [sp, #32]
  429d34:	mov	x21, x0
  429d38:	bl	404ad0 <__errno_location@plt>
  429d3c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  429d40:	ldr	w22, [x0]
  429d44:	ldr	x1, [x1, #952]
  429d48:	cbz	x1, 429d50 <wcrtomb@plt+0x25130>
  429d4c:	blr	x1
  429d50:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429d54:	add	x1, x1, #0x740
  429d58:	mov	w2, #0x5                   	// #5
  429d5c:	mov	x0, #0x0                   	// #0
  429d60:	bl	4049c0 <dcgettext@plt>
  429d64:	mov	x19, x0
  429d68:	mov	x0, x20
  429d6c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  429d70:	mov	x1, x21
  429d74:	mov	x20, x0
  429d78:	mov	w0, #0x1                   	// #1
  429d7c:	bl	440230 <argp_parse@@Base+0xc348>
  429d80:	mov	x3, x20
  429d84:	mov	x4, x0
  429d88:	mov	x2, x19
  429d8c:	mov	w1, w22
  429d90:	mov	w0, #0x0                   	// #0
  429d94:	bl	404050 <error@plt>
  429d98:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  429d9c:	mov	w1, #0x2                   	// #2
  429da0:	ldp	x19, x20, [sp, #16]
  429da4:	str	w1, [x0, #3400]
  429da8:	ldp	x21, x22, [sp, #32]
  429dac:	ldp	x29, x30, [sp], #48
  429db0:	ret
  429db4:	nop
  429db8:	mov	x1, x0
  429dbc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429dc0:	add	x0, x2, #0x760
  429dc4:	b	429a48 <wcrtomb@plt+0x24e28>
  429dc8:	mov	x1, x0
  429dcc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429dd0:	add	x0, x2, #0x768
  429dd4:	b	429a48 <wcrtomb@plt+0x24e28>
  429dd8:	mov	x1, x0
  429ddc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429de0:	add	x0, x2, #0x770
  429de4:	b	429a48 <wcrtomb@plt+0x24e28>
  429de8:	mov	x1, x0
  429dec:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429df0:	add	x0, x2, #0x778
  429df4:	b	429a48 <wcrtomb@plt+0x24e28>
  429df8:	stp	x29, x30, [sp, #-16]!
  429dfc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429e00:	mov	x1, x0
  429e04:	mov	x29, sp
  429e08:	add	x0, x2, #0x778
  429e0c:	bl	429ad0 <wcrtomb@plt+0x24eb0>
  429e10:	mov	x1, x0
  429e14:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429e18:	add	x0, x2, #0x778
  429e1c:	b	429b40 <wcrtomb@plt+0x24f20>
  429e20:	mov	x1, x0
  429e24:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  429e28:	add	x0, x2, #0x588
  429e2c:	b	429a48 <wcrtomb@plt+0x24e28>
  429e30:	stp	x29, x30, [sp, #-96]!
  429e34:	mov	x29, sp
  429e38:	stp	x19, x20, [sp, #16]
  429e3c:	mov	x19, x2
  429e40:	stp	x21, x22, [sp, #32]
  429e44:	mov	x22, x1
  429e48:	mov	x21, x0
  429e4c:	str	x23, [sp, #48]
  429e50:	bl	404ad0 <__errno_location@plt>
  429e54:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  429e58:	ldr	w23, [x0]
  429e5c:	ldr	x1, [x1, #952]
  429e60:	cbz	x1, 429e68 <wcrtomb@plt+0x25248>
  429e64:	blr	x1
  429e68:	mov	x3, x19
  429e6c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429e70:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429e74:	add	x2, x2, #0x780
  429e78:	add	x1, x1, #0x7b8
  429e7c:	mov	w4, #0x5                   	// #5
  429e80:	mov	x0, #0x0                   	// #0
  429e84:	bl	4048f0 <dcngettext@plt>
  429e88:	mov	x20, x0
  429e8c:	mov	x0, x21
  429e90:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  429e94:	mov	x21, x0
  429e98:	add	x1, sp, #0x48
  429e9c:	mov	x0, x22
  429ea0:	bl	4398d8 <argp_parse@@Base+0x59f0>
  429ea4:	mov	x4, x0
  429ea8:	mov	x5, x19
  429eac:	mov	x3, x21
  429eb0:	mov	x2, x20
  429eb4:	mov	w1, w23
  429eb8:	mov	w0, #0x0                   	// #0
  429ebc:	bl	404050 <error@plt>
  429ec0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  429ec4:	mov	w1, #0x2                   	// #2
  429ec8:	ldp	x19, x20, [sp, #16]
  429ecc:	str	w1, [x0, #3400]
  429ed0:	ldp	x21, x22, [sp, #32]
  429ed4:	ldr	x23, [sp, #48]
  429ed8:	ldp	x29, x30, [sp], #96
  429edc:	ret
  429ee0:	stp	x29, x30, [sp, #-96]!
  429ee4:	mov	x29, sp
  429ee8:	stp	x19, x20, [sp, #16]
  429eec:	mov	x19, x2
  429ef0:	stp	x21, x22, [sp, #32]
  429ef4:	mov	x22, x1
  429ef8:	mov	x21, x0
  429efc:	str	x23, [sp, #48]
  429f00:	bl	404ad0 <__errno_location@plt>
  429f04:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  429f08:	ldr	w23, [x0]
  429f0c:	ldr	x1, [x1, #952]
  429f10:	cbz	x1, 429f18 <wcrtomb@plt+0x252f8>
  429f14:	blr	x1
  429f18:	mov	x3, x19
  429f1c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429f20:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429f24:	add	x2, x2, #0x7f0
  429f28:	add	x1, x1, #0x830
  429f2c:	mov	w4, #0x5                   	// #5
  429f30:	mov	x0, #0x0                   	// #0
  429f34:	bl	4048f0 <dcngettext@plt>
  429f38:	mov	x20, x0
  429f3c:	mov	x0, x21
  429f40:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  429f44:	mov	x21, x0
  429f48:	add	x1, sp, #0x48
  429f4c:	mov	x0, x22
  429f50:	bl	4398d8 <argp_parse@@Base+0x59f0>
  429f54:	mov	x4, x0
  429f58:	mov	x5, x19
  429f5c:	mov	x3, x21
  429f60:	mov	x2, x20
  429f64:	mov	w1, w23
  429f68:	mov	w0, #0x0                   	// #0
  429f6c:	bl	404050 <error@plt>
  429f70:	ldp	x19, x20, [sp, #16]
  429f74:	ldp	x21, x22, [sp, #32]
  429f78:	ldr	x23, [sp, #48]
  429f7c:	ldp	x29, x30, [sp], #96
  429f80:	ret
  429f84:	nop
  429f88:	stp	x29, x30, [sp, #-16]!
  429f8c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  429f90:	mov	x1, x0
  429f94:	mov	x29, sp
  429f98:	add	x0, x2, #0x588
  429f9c:	bl	429ad0 <wcrtomb@plt+0x24eb0>
  429fa0:	stp	x29, x30, [sp, #-96]!
  429fa4:	mov	x29, sp
  429fa8:	stp	x19, x20, [sp, #16]
  429fac:	mov	x19, x2
  429fb0:	stp	x21, x22, [sp, #32]
  429fb4:	mov	x22, x1
  429fb8:	mov	x21, x0
  429fbc:	str	x23, [sp, #48]
  429fc0:	bl	404ad0 <__errno_location@plt>
  429fc4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  429fc8:	ldr	w23, [x0]
  429fcc:	ldr	x1, [x1, #952]
  429fd0:	cbz	x1, 429fd8 <wcrtomb@plt+0x253b8>
  429fd4:	blr	x1
  429fd8:	mov	x3, x19
  429fdc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429fe0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  429fe4:	add	x2, x2, #0x780
  429fe8:	add	x1, x1, #0x7b8
  429fec:	mov	w4, #0x5                   	// #5
  429ff0:	mov	x0, #0x0                   	// #0
  429ff4:	bl	4048f0 <dcngettext@plt>
  429ff8:	mov	x20, x0
  429ffc:	mov	x0, x21
  42a000:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  42a004:	mov	x21, x0
  42a008:	add	x1, sp, #0x48
  42a00c:	mov	x0, x22
  42a010:	bl	4398d8 <argp_parse@@Base+0x59f0>
  42a014:	mov	x4, x0
  42a018:	mov	x5, x19
  42a01c:	mov	x3, x21
  42a020:	mov	x2, x20
  42a024:	mov	w1, w23
  42a028:	mov	w0, #0x0                   	// #0
  42a02c:	bl	404050 <error@plt>
  42a030:	bl	40e770 <wcrtomb@plt+0x9b50>
  42a034:	nop
  42a038:	mov	x1, x0
  42a03c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a040:	add	x0, x2, #0x870
  42a044:	b	429a48 <wcrtomb@plt+0x24e28>
  42a048:	mov	x1, x0
  42a04c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a050:	add	x0, x2, #0x870
  42a054:	b	429b40 <wcrtomb@plt+0x24f20>
  42a058:	mov	x1, x0
  42a05c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a060:	add	x0, x2, #0x880
  42a064:	b	429a48 <wcrtomb@plt+0x24e28>
  42a068:	mov	x1, x0
  42a06c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a070:	add	x0, x2, #0x888
  42a074:	b	429a48 <wcrtomb@plt+0x24e28>
  42a078:	mov	x1, x0
  42a07c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a080:	add	x0, x2, #0x888
  42a084:	b	429b40 <wcrtomb@plt+0x24f20>
  42a088:	mov	x1, x0
  42a08c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x15e10>
  42a090:	add	x0, x2, #0x678
  42a094:	b	429a48 <wcrtomb@plt+0x24e28>
  42a098:	stp	x29, x30, [sp, #-80]!
  42a09c:	mov	x29, sp
  42a0a0:	stp	x19, x20, [sp, #16]
  42a0a4:	mov	x20, x0
  42a0a8:	stp	x21, x22, [sp, #32]
  42a0ac:	mov	x21, x1
  42a0b0:	bl	404ad0 <__errno_location@plt>
  42a0b4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  42a0b8:	ldr	w22, [x0]
  42a0bc:	ldr	x1, [x1, #952]
  42a0c0:	cbz	x1, 42a0c8 <wcrtomb@plt+0x254a8>
  42a0c4:	blr	x1
  42a0c8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a0cc:	add	x1, x1, #0x890
  42a0d0:	mov	w2, #0x5                   	// #5
  42a0d4:	mov	x0, #0x0                   	// #0
  42a0d8:	bl	4049c0 <dcgettext@plt>
  42a0dc:	mov	x19, x0
  42a0e0:	mov	x0, x20
  42a0e4:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  42a0e8:	add	x1, sp, #0x38
  42a0ec:	mov	x20, x0
  42a0f0:	mov	x0, x21
  42a0f4:	bl	4398d8 <argp_parse@@Base+0x59f0>
  42a0f8:	mov	x3, x20
  42a0fc:	mov	x4, x0
  42a100:	mov	x2, x19
  42a104:	mov	w1, w22
  42a108:	mov	w0, #0x0                   	// #0
  42a10c:	bl	404050 <error@plt>
  42a110:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42a114:	mov	w1, #0x2                   	// #2
  42a118:	ldp	x19, x20, [sp, #16]
  42a11c:	str	w1, [x0, #3400]
  42a120:	ldp	x21, x22, [sp, #32]
  42a124:	ldp	x29, x30, [sp], #80
  42a128:	ret
  42a12c:	nop
  42a130:	mov	x1, x0
  42a134:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x15e10>
  42a138:	add	x0, x2, #0x678
  42a13c:	b	429b40 <wcrtomb@plt+0x24f20>
  42a140:	stp	x29, x30, [sp, #-80]!
  42a144:	mov	x29, sp
  42a148:	stp	x19, x20, [sp, #16]
  42a14c:	mov	x20, x0
  42a150:	stp	x21, x22, [sp, #32]
  42a154:	mov	x21, x1
  42a158:	bl	404ad0 <__errno_location@plt>
  42a15c:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  42a160:	ldr	w22, [x0]
  42a164:	ldr	x1, [x1, #952]
  42a168:	cbz	x1, 42a170 <wcrtomb@plt+0x25550>
  42a16c:	blr	x1
  42a170:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a174:	add	x1, x1, #0x8a8
  42a178:	mov	w2, #0x5                   	// #5
  42a17c:	mov	x0, #0x0                   	// #0
  42a180:	bl	4049c0 <dcgettext@plt>
  42a184:	mov	x19, x0
  42a188:	mov	x0, x20
  42a18c:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  42a190:	add	x1, sp, #0x38
  42a194:	mov	x20, x0
  42a198:	mov	x0, x21
  42a19c:	bl	4398d8 <argp_parse@@Base+0x59f0>
  42a1a0:	mov	x3, x20
  42a1a4:	mov	x4, x0
  42a1a8:	mov	x2, x19
  42a1ac:	mov	w1, w22
  42a1b0:	mov	w0, #0x0                   	// #0
  42a1b4:	bl	404050 <error@plt>
  42a1b8:	ldp	x19, x20, [sp, #16]
  42a1bc:	ldp	x21, x22, [sp, #32]
  42a1c0:	ldp	x29, x30, [sp], #80
  42a1c4:	ret
  42a1c8:	stp	x29, x30, [sp, #-48]!
  42a1cc:	mov	x29, sp
  42a1d0:	stp	x19, x20, [sp, #16]
  42a1d4:	mov	x20, x1
  42a1d8:	stp	x21, x22, [sp, #32]
  42a1dc:	mov	x21, x0
  42a1e0:	bl	404ad0 <__errno_location@plt>
  42a1e4:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  42a1e8:	ldr	w22, [x0]
  42a1ec:	ldr	x1, [x1, #952]
  42a1f0:	cbz	x1, 42a1f8 <wcrtomb@plt+0x255d8>
  42a1f4:	blr	x1
  42a1f8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a1fc:	add	x1, x1, #0x8c8
  42a200:	mov	w2, #0x5                   	// #5
  42a204:	mov	x0, #0x0                   	// #0
  42a208:	bl	4049c0 <dcgettext@plt>
  42a20c:	mov	x19, x0
  42a210:	mov	x0, x20
  42a214:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  42a218:	mov	x1, x21
  42a21c:	mov	x20, x0
  42a220:	mov	w0, #0x1                   	// #1
  42a224:	bl	440230 <argp_parse@@Base+0xc348>
  42a228:	mov	x3, x20
  42a22c:	mov	x4, x0
  42a230:	mov	x2, x19
  42a234:	mov	w1, w22
  42a238:	mov	w0, #0x0                   	// #0
  42a23c:	bl	404050 <error@plt>
  42a240:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42a244:	mov	w1, #0x2                   	// #2
  42a248:	ldp	x19, x20, [sp, #16]
  42a24c:	str	w1, [x0, #3400]
  42a250:	ldp	x21, x22, [sp, #32]
  42a254:	ldp	x29, x30, [sp], #48
  42a258:	ret
  42a25c:	nop
  42a260:	stp	x29, x30, [sp, #-16]!
  42a264:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a268:	mov	x1, x0
  42a26c:	mov	x29, sp
  42a270:	add	x0, x2, #0x8e8
  42a274:	bl	429ad0 <wcrtomb@plt+0x24eb0>
  42a278:	mov	x1, x0
  42a27c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a280:	add	x0, x2, #0x8e8
  42a284:	b	429a48 <wcrtomb@plt+0x24e28>
  42a288:	mov	x1, x0
  42a28c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a290:	add	x0, x2, #0x8e8
  42a294:	b	429b40 <wcrtomb@plt+0x24f20>
  42a298:	mov	x1, x0
  42a29c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a2a0:	add	x0, x2, #0x8f0
  42a2a4:	b	429a48 <wcrtomb@plt+0x24e28>
  42a2a8:	mov	x1, x0
  42a2ac:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a2b0:	add	x0, x2, #0x8f0
  42a2b4:	b	429b40 <wcrtomb@plt+0x24f20>
  42a2b8:	mov	x1, x0
  42a2bc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a2c0:	add	x0, x2, #0x900
  42a2c4:	b	429a48 <wcrtomb@plt+0x24e28>
  42a2c8:	mov	x1, x0
  42a2cc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a2d0:	add	x0, x2, #0x908
  42a2d4:	b	429a48 <wcrtomb@plt+0x24e28>
  42a2d8:	mov	x1, x0
  42a2dc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a2e0:	add	x0, x2, #0x910
  42a2e4:	b	429a48 <wcrtomb@plt+0x24e28>
  42a2e8:	mov	x1, x0
  42a2ec:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x11e10>
  42a2f0:	add	x0, x2, #0x580
  42a2f4:	b	429a48 <wcrtomb@plt+0x24e28>
  42a2f8:	stp	x29, x30, [sp, #-48]!
  42a2fc:	mov	x29, sp
  42a300:	str	x21, [sp, #32]
  42a304:	mov	x21, x0
  42a308:	cbz	x1, 42a380 <wcrtomb@plt+0x25760>
  42a30c:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42a310:	stp	x19, x20, [sp, #16]
  42a314:	mov	x19, x1
  42a318:	ldr	x0, [x0, #952]
  42a31c:	mov	x20, x2
  42a320:	cbz	x0, 42a328 <wcrtomb@plt+0x25708>
  42a324:	blr	x0
  42a328:	mov	x3, x20
  42a32c:	mov	w4, #0x5                   	// #5
  42a330:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a334:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a338:	add	x2, x2, #0x918
  42a33c:	add	x1, x1, #0x938
  42a340:	mov	x0, #0x0                   	// #0
  42a344:	bl	4048f0 <dcngettext@plt>
  42a348:	mov	x5, x20
  42a34c:	mov	x4, x19
  42a350:	mov	x3, x21
  42a354:	mov	x2, x0
  42a358:	mov	w1, #0x0                   	// #0
  42a35c:	mov	w0, #0x0                   	// #0
  42a360:	bl	404050 <error@plt>
  42a364:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42a368:	mov	w1, #0x2                   	// #2
  42a36c:	ldp	x19, x20, [sp, #16]
  42a370:	str	w1, [x0, #3400]
  42a374:	ldr	x21, [sp, #32]
  42a378:	ldp	x29, x30, [sp], #48
  42a37c:	ret
  42a380:	ldr	x21, [sp, #32]
  42a384:	mov	x1, x0
  42a388:	ldp	x29, x30, [sp], #48
  42a38c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x11e10>
  42a390:	add	x0, x0, #0x580
  42a394:	b	429a48 <wcrtomb@plt+0x24e28>
  42a398:	stp	x29, x30, [sp, #-16]!
  42a39c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a3a0:	mov	x1, x0
  42a3a4:	mov	x29, sp
  42a3a8:	add	x0, x2, #0x958
  42a3ac:	bl	429ad0 <wcrtomb@plt+0x24eb0>
  42a3b0:	stp	x29, x30, [sp, #-16]!
  42a3b4:	mov	x29, sp
  42a3b8:	bl	404710 <strcmp@plt>
  42a3bc:	cmp	w0, #0x0
  42a3c0:	cset	w0, eq  // eq = none
  42a3c4:	ldp	x29, x30, [sp], #16
  42a3c8:	ret
  42a3cc:	nop
  42a3d0:	b	438708 <argp_parse@@Base+0x4820>
  42a3d4:	nop
  42a3d8:	stp	x29, x30, [sp, #-32]!
  42a3dc:	mov	x29, sp
  42a3e0:	str	x19, [sp, #16]
  42a3e4:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42a3e8:	ldr	x0, [x19, #3408]
  42a3ec:	cbz	x0, 42a40c <wcrtomb@plt+0x257ec>
  42a3f0:	bl	4382f0 <argp_parse@@Base+0x4408>
  42a3f4:	mov	w1, #0x1                   	// #1
  42a3f8:	cbz	x0, 42a40c <wcrtomb@plt+0x257ec>
  42a3fc:	mov	w0, w1
  42a400:	ldr	x19, [sp, #16]
  42a404:	ldp	x29, x30, [sp], #32
  42a408:	ret
  42a40c:	add	x19, x19, #0xd50
  42a410:	mov	w1, #0x0                   	// #0
  42a414:	ldr	x0, [x19, #8]
  42a418:	cbz	x0, 42a3fc <wcrtomb@plt+0x257dc>
  42a41c:	bl	4382f0 <argp_parse@@Base+0x4408>
  42a420:	cmp	x0, #0x0
  42a424:	cset	w1, ne  // ne = any
  42a428:	mov	w0, w1
  42a42c:	ldr	x19, [sp, #16]
  42a430:	ldp	x29, x30, [sp], #32
  42a434:	ret
  42a438:	stp	x29, x30, [sp, #-80]!
  42a43c:	tst	w2, #0xff
  42a440:	mov	x29, sp
  42a444:	stp	x19, x20, [sp, #16]
  42a448:	mov	x19, x0
  42a44c:	stp	x23, x24, [sp, #48]
  42a450:	and	w23, w1, #0xff
  42a454:	ldrb	w1, [x0]
  42a458:	b.ne	42a4ec <wcrtomb@plt+0x258cc>  // b.any
  42a45c:	cbz	w1, 42a4f4 <wcrtomb@plt+0x258d4>
  42a460:	mov	x3, x0
  42a464:	stp	x21, x22, [sp, #32]
  42a468:	mov	x21, #0x0                   	// #0
  42a46c:	nop
  42a470:	ldrb	w5, [x3, #1]
  42a474:	cmp	w1, #0x2e
  42a478:	b.eq	42a554 <wcrtomb@plt+0x25934>  // b.none
  42a47c:	mov	w4, w1
  42a480:	mov	w1, w5
  42a484:	b	42a494 <wcrtomb@plt+0x25874>
  42a488:	cbz	w1, 42a4a8 <wcrtomb@plt+0x25888>
  42a48c:	mov	w4, w1
  42a490:	ldrb	w1, [x3, #1]
  42a494:	add	x3, x3, #0x1
  42a498:	cmp	w4, #0x2f
  42a49c:	b.ne	42a488 <wcrtomb@plt+0x25868>  // b.any
  42a4a0:	cbnz	w1, 42a470 <wcrtomb@plt+0x25850>
  42a4a4:	nop
  42a4a8:	ldrb	w0, [x19, x21]
  42a4ac:	add	x20, x19, x21
  42a4b0:	cmp	w0, #0x2f
  42a4b4:	b.eq	42a578 <wcrtomb@plt+0x25958>  // b.none
  42a4b8:	cbnz	x21, 42a58c <wcrtomb@plt+0x2596c>
  42a4bc:	ldrb	w0, [x20]
  42a4c0:	cbnz	w0, 42a5ec <wcrtomb@plt+0x259cc>
  42a4c4:	cmp	x19, x20
  42a4c8:	b.eq	42a678 <wcrtomb@plt+0x25a58>  // b.none
  42a4cc:	ldp	x21, x22, [sp, #32]
  42a4d0:	adrp	x20, 458000 <_obstack_memory_used@@Base+0x15e10>
  42a4d4:	add	x20, x20, #0x668
  42a4d8:	mov	x0, x20
  42a4dc:	ldp	x19, x20, [sp, #16]
  42a4e0:	ldp	x23, x24, [sp, #48]
  42a4e4:	ldp	x29, x30, [sp], #80
  42a4e8:	ret
  42a4ec:	mov	x20, x0
  42a4f0:	cbnz	w1, 42a4d8 <wcrtomb@plt+0x258b8>
  42a4f4:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42a4f8:	ldr	x0, [x0, #952]
  42a4fc:	cbz	x0, 42a504 <wcrtomb@plt+0x258e4>
  42a500:	blr	x0
  42a504:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a508:	add	x1, x1, #0xa10
  42a50c:	add	x1, x1, w23, sxtw #3
  42a510:	mov	w2, #0x5                   	// #5
  42a514:	mov	x0, #0x0                   	// #0
  42a518:	adrp	x20, 458000 <_obstack_memory_used@@Base+0x15e10>
  42a51c:	add	x20, x20, #0x668
  42a520:	ldr	x1, [x1, #16]
  42a524:	bl	4049c0 <dcgettext@plt>
  42a528:	mov	x3, x0
  42a52c:	mov	w1, #0x0                   	// #0
  42a530:	mov	w0, #0x0                   	// #0
  42a534:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  42a538:	add	x2, x2, #0xb68
  42a53c:	bl	404050 <error@plt>
  42a540:	mov	x0, x20
  42a544:	ldp	x19, x20, [sp, #16]
  42a548:	ldp	x23, x24, [sp, #48]
  42a54c:	ldp	x29, x30, [sp], #80
  42a550:	ret
  42a554:	cmp	w5, #0x2e
  42a558:	b.ne	42a47c <wcrtomb@plt+0x2585c>  // b.any
  42a55c:	mov	x0, x3
  42a560:	ldrb	w2, [x0, #2]!
  42a564:	cmp	w2, #0x2f
  42a568:	sub	x0, x0, x19
  42a56c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  42a570:	csel	x21, x0, x21, eq  // eq = none
  42a574:	b	42a47c <wcrtomb@plt+0x2585c>
  42a578:	ldrb	w0, [x20, #1]!
  42a57c:	cmp	w0, #0x2f
  42a580:	b.eq	42a578 <wcrtomb@plt+0x25958>  // b.none
  42a584:	sub	x21, x20, x19
  42a588:	cbz	x21, 42a4bc <wcrtomb@plt+0x2589c>
  42a58c:	stp	x25, x26, [sp, #64]
  42a590:	sxtw	x25, w23
  42a594:	adrp	x26, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42a598:	add	x26, x26, #0xd50
  42a59c:	add	x0, x21, #0x1
  42a5a0:	ldr	x24, [x26, x25, lsl #3]
  42a5a4:	bl	440f48 <argp_parse@@Base+0xd060>
  42a5a8:	mov	x22, x0
  42a5ac:	mov	x2, x21
  42a5b0:	mov	x1, x19
  42a5b4:	bl	403f70 <memcpy@plt>
  42a5b8:	strb	wzr, [x22, x21]
  42a5bc:	cbz	x24, 42a648 <wcrtomb@plt+0x25a28>
  42a5c0:	mov	x0, x24
  42a5c4:	mov	x1, x22
  42a5c8:	bl	438cb8 <argp_parse@@Base+0x4dd0>
  42a5cc:	mov	x21, x0
  42a5d0:	cbz	x0, 42a674 <wcrtomb@plt+0x25a54>
  42a5d4:	cmp	x22, x0
  42a5d8:	b.eq	42a604 <wcrtomb@plt+0x259e4>  // b.none
  42a5dc:	mov	x0, x22
  42a5e0:	bl	4047b0 <free@plt>
  42a5e4:	ldp	x25, x26, [sp, #64]
  42a5e8:	b	42a4bc <wcrtomb@plt+0x2589c>
  42a5ec:	mov	x0, x20
  42a5f0:	ldp	x19, x20, [sp, #16]
  42a5f4:	ldp	x21, x22, [sp, #32]
  42a5f8:	ldp	x23, x24, [sp, #48]
  42a5fc:	ldp	x29, x30, [sp], #80
  42a600:	ret
  42a604:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  42a608:	ldr	x0, [x0, #952]
  42a60c:	cbz	x0, 42a614 <wcrtomb@plt+0x259f4>
  42a610:	blr	x0
  42a614:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42a618:	add	x1, x1, #0xa10
  42a61c:	mov	w2, #0x5                   	// #5
  42a620:	mov	x0, #0x0                   	// #0
  42a624:	ldr	x1, [x1, x25, lsl #3]
  42a628:	bl	4049c0 <dcgettext@plt>
  42a62c:	mov	x2, x0
  42a630:	mov	x3, x21
  42a634:	mov	w1, #0x0                   	// #0
  42a638:	mov	w0, #0x0                   	// #0
  42a63c:	bl	404050 <error@plt>
  42a640:	ldp	x25, x26, [sp, #64]
  42a644:	b	42a4bc <wcrtomb@plt+0x2589c>
  42a648:	adrp	x3, 42a000 <wcrtomb@plt+0x253e0>
  42a64c:	adrp	x2, 42a000 <wcrtomb@plt+0x253e0>
  42a650:	add	x3, x3, #0x3b0
  42a654:	add	x2, x2, #0x3d0
  42a658:	mov	x4, #0x0                   	// #0
  42a65c:	mov	x1, #0x0                   	// #0
  42a660:	mov	x0, #0x0                   	// #0
  42a664:	bl	438760 <argp_parse@@Base+0x4878>
  42a668:	str	x0, [x26, x25, lsl #3]
  42a66c:	mov	x24, x0
  42a670:	cbnz	x0, 42a5c0 <wcrtomb@plt+0x259a0>
  42a674:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  42a678:	ldp	x21, x22, [sp, #32]
  42a67c:	b	42a4f4 <wcrtomb@plt+0x258d4>
  42a680:	stp	x29, x30, [sp, #-48]!
  42a684:	mov	x29, sp
  42a688:	stp	x19, x20, [sp, #16]
  42a68c:	sbfiz	x19, x0, #3, #32
  42a690:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42a694:	add	x20, x20, #0x218
  42a698:	stp	x21, x22, [sp, #32]
  42a69c:	add	x21, x20, #0x20
  42a6a0:	add	x21, x21, x19
  42a6a4:	mov	w22, w1
  42a6a8:	ldr	w0, [x20, x19]
  42a6ac:	bl	4045c0 <close@plt>
  42a6b0:	ldr	w0, [x21, #4]
  42a6b4:	bl	4045c0 <close@plt>
  42a6b8:	mov	w0, #0xffffffff            	// #-1
  42a6bc:	str	w0, [x20, x19]
  42a6c0:	str	w0, [x21, #4]
  42a6c4:	bl	404ad0 <__errno_location@plt>
  42a6c8:	ldp	x19, x20, [sp, #16]
  42a6cc:	str	w22, [x0]
  42a6d0:	ldp	x21, x22, [sp, #32]
  42a6d4:	ldp	x29, x30, [sp], #48
  42a6d8:	ret
  42a6dc:	nop
  42a6e0:	stp	x29, x30, [sp, #-48]!
  42a6e4:	mov	x29, sp
  42a6e8:	stp	x19, x20, [sp, #16]
  42a6ec:	mov	x20, x1
  42a6f0:	str	x21, [sp, #32]
  42a6f4:	mov	w21, w0
  42a6f8:	mov	x0, x1
  42a6fc:	bl	403ff0 <strlen@plt>
  42a700:	mov	x1, #0x1                   	// #1
  42a704:	mov	x19, x0
  42a708:	mov	w0, #0xd                   	// #13
  42a70c:	bl	404270 <signal@plt>
  42a710:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42a714:	add	x3, x3, #0x218
  42a718:	add	x3, x3, w21, sxtw #3
  42a71c:	mov	x1, x20
  42a720:	mov	x20, x0
  42a724:	mov	x2, x19
  42a728:	ldr	w0, [x3, #36]
  42a72c:	bl	437dc8 <argp_parse@@Base+0x3ee0>
  42a730:	mov	x1, x20
  42a734:	mov	x20, x0
  42a738:	mov	w0, #0xd                   	// #13
  42a73c:	bl	404270 <signal@plt>
  42a740:	cmp	x20, x19
  42a744:	mov	w0, #0x0                   	// #0
  42a748:	b.ne	42a75c <wcrtomb@plt+0x25b3c>  // b.any
  42a74c:	ldp	x19, x20, [sp, #16]
  42a750:	ldr	x21, [sp, #32]
  42a754:	ldp	x29, x30, [sp], #48
  42a758:	ret
  42a75c:	mov	w0, w21
  42a760:	mov	w1, #0x5                   	// #5
  42a764:	bl	42a680 <wcrtomb@plt+0x25a60>
  42a768:	mov	w0, #0xffffffff            	// #-1
  42a76c:	b	42a74c <wcrtomb@plt+0x25b2c>
  42a770:	stp	x29, x30, [sp, #-96]!
  42a774:	mov	x29, sp
  42a778:	str	x25, [sp, #64]
  42a77c:	sxtw	x25, w0
  42a780:	stp	x19, x20, [sp, #16]
  42a784:	mov	x20, x1
  42a788:	mov	x19, x1
  42a78c:	stp	x21, x22, [sp, #32]
  42a790:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42a794:	sbfiz	x22, x25, #3, #32
  42a798:	add	x21, x21, #0x218
  42a79c:	stp	x23, x24, [sp, #48]
  42a7a0:	add	x23, x1, #0x40
  42a7a4:	mov	x24, x25
  42a7a8:	b	42a7c4 <wcrtomb@plt+0x25ba4>
  42a7ac:	ldrb	w2, [x19]
  42a7b0:	cmp	w2, #0xa
  42a7b4:	b.eq	42a808 <wcrtomb@plt+0x25be8>  // b.none
  42a7b8:	add	x19, x19, #0x1
  42a7bc:	cmp	x19, x23
  42a7c0:	b.eq	42a7dc <wcrtomb@plt+0x25bbc>  // b.none
  42a7c4:	ldr	w0, [x21, x22]
  42a7c8:	mov	x1, x19
  42a7cc:	mov	x2, #0x1                   	// #1
  42a7d0:	bl	440470 <argp_parse@@Base+0xc588>
  42a7d4:	cmp	x0, #0x1
  42a7d8:	b.eq	42a7ac <wcrtomb@plt+0x25b8c>  // b.none
  42a7dc:	mov	w0, w24
  42a7e0:	mov	w1, #0x5                   	// #5
  42a7e4:	mov	x19, #0x0                   	// #0
  42a7e8:	bl	42a680 <wcrtomb@plt+0x25a60>
  42a7ec:	mov	x0, x19
  42a7f0:	ldp	x19, x20, [sp, #16]
  42a7f4:	ldp	x21, x22, [sp, #32]
  42a7f8:	ldp	x23, x24, [sp, #48]
  42a7fc:	ldr	x25, [sp, #64]
  42a800:	ldp	x29, x30, [sp], #96
  42a804:	ret
  42a808:	strb	wzr, [x19]
  42a80c:	ldrb	w2, [x20]
  42a810:	cbnz	w2, 42a820 <wcrtomb@plt+0x25c00>
  42a814:	b	42a7dc <wcrtomb@plt+0x25bbc>
  42a818:	ldrb	w2, [x20, #1]!
  42a81c:	cbz	w2, 42a7dc <wcrtomb@plt+0x25bbc>
  42a820:	cmp	w2, #0x20
  42a824:	b.eq	42a818 <wcrtomb@plt+0x25bf8>  // b.none
  42a828:	sub	w0, w2, #0x45
  42a82c:	lsl	x25, x25, #3
  42a830:	and	w0, w0, #0xff
  42a834:	cmp	w0, #0x1
  42a838:	b.ls	42a870 <wcrtomb@plt+0x25c50>  // b.plast
  42a83c:	cmp	w2, #0x41
  42a840:	b.ne	42a7dc <wcrtomb@plt+0x25bbc>  // b.any
  42a844:	add	x19, x20, #0x1
  42a848:	mov	x0, x19
  42a84c:	ldp	x19, x20, [sp, #16]
  42a850:	ldp	x21, x22, [sp, #32]
  42a854:	ldp	x23, x24, [sp, #48]
  42a858:	ldr	x25, [sp, #64]
  42a85c:	ldp	x29, x30, [sp], #96
  42a860:	ret
  42a864:	ldrb	w0, [sp, #95]
  42a868:	cmp	w0, #0xa
  42a86c:	b.eq	42a888 <wcrtomb@plt+0x25c68>  // b.none
  42a870:	ldr	w0, [x21, x25]
  42a874:	add	x1, sp, #0x5f
  42a878:	mov	x2, #0x1                   	// #1
  42a87c:	bl	440470 <argp_parse@@Base+0xc588>
  42a880:	cmp	x0, #0x1
  42a884:	b.eq	42a864 <wcrtomb@plt+0x25c44>  // b.none
  42a888:	bl	404ad0 <__errno_location@plt>
  42a88c:	mov	x19, x0
  42a890:	mov	x1, #0x0                   	// #0
  42a894:	add	x0, x20, #0x1
  42a898:	mov	w2, #0xa                   	// #10
  42a89c:	bl	404770 <strtol@plt>
  42a8a0:	str	w0, [x19]
  42a8a4:	mov	x19, #0x0                   	// #0
  42a8a8:	ldrb	w1, [x20]
  42a8ac:	cmp	w1, #0x46
  42a8b0:	b.ne	42a7ec <wcrtomb@plt+0x25bcc>  // b.any
  42a8b4:	mov	w1, w0
  42a8b8:	mov	w0, w24
  42a8bc:	bl	42a680 <wcrtomb@plt+0x25a60>
  42a8c0:	b	42a7ec <wcrtomb@plt+0x25bcc>
  42a8c4:	nop
  42a8c8:	stp	x29, x30, [sp, #-80]!
  42a8cc:	mov	x29, sp
  42a8d0:	add	x1, sp, #0x10
  42a8d4:	bl	42a770 <wcrtomb@plt+0x25b50>
  42a8d8:	cbz	x0, 42a90c <wcrtomb@plt+0x25cec>
  42a8dc:	mov	w2, #0xa                   	// #10
  42a8e0:	mov	x1, #0x0                   	// #0
  42a8e4:	bl	404770 <strtol@plt>
  42a8e8:	tbnz	x0, #63, 42a8f4 <wcrtomb@plt+0x25cd4>
  42a8ec:	ldp	x29, x30, [sp], #80
  42a8f0:	ret
  42a8f4:	bl	404ad0 <__errno_location@plt>
  42a8f8:	mov	x1, x0
  42a8fc:	mov	w2, #0x5                   	// #5
  42a900:	mov	x0, #0xffffffffffffffff    	// #-1
  42a904:	str	w2, [x1]
  42a908:	b	42a8ec <wcrtomb@plt+0x25ccc>
  42a90c:	mov	x0, #0xffffffffffffffff    	// #-1
  42a910:	b	42a8ec <wcrtomb@plt+0x25ccc>
  42a914:	nop
  42a918:	stp	x29, x30, [sp, #-128]!
  42a91c:	adrp	x7, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42a920:	mov	x29, sp
  42a924:	stp	x27, x28, [sp, #80]
  42a928:	add	x27, x7, #0x218
  42a92c:	add	x4, x27, #0x20
  42a930:	stp	x21, x22, [sp, #32]
  42a934:	mov	x22, x3
  42a938:	stp	x23, x24, [sp, #48]
  42a93c:	mov	w23, w2
  42a940:	stp	x19, x20, [sp, #16]
  42a944:	mov	w19, w1
  42a948:	mov	x1, #0x0                   	// #0
  42a94c:	lsl	x2, x1, #3
  42a950:	mov	w20, w1
  42a954:	ldr	w3, [x27, x2]
  42a958:	cmn	w3, #0x1
  42a95c:	b.eq	42a980 <wcrtomb@plt+0x25d60>  // b.none
  42a960:	add	x1, x1, #0x1
  42a964:	cmp	x1, #0x4
  42a968:	b.ne	42a94c <wcrtomb@plt+0x25d2c>  // b.any
  42a96c:	bl	404ad0 <__errno_location@plt>
  42a970:	mov	w21, #0xffffffff            	// #-1
  42a974:	mov	w1, #0x18                  	// #24
  42a978:	str	w1, [x0]
  42a97c:	b	42ace0 <wcrtomb@plt+0x260c0>
  42a980:	add	x2, x4, x2
  42a984:	ldr	w21, [x2, #4]
  42a988:	cmn	w21, #0x1
  42a98c:	b.ne	42a960 <wcrtomb@plt+0x25d40>  // b.any
  42a990:	stp	x25, x26, [sp, #64]
  42a994:	bl	441170 <argp_parse@@Base+0xd288>
  42a998:	ldrb	w1, [x0]
  42a99c:	mov	x28, x0
  42a9a0:	cbz	w1, 42aeac <wcrtomb@plt+0x2628c>
  42a9a4:	add	x0, x28, #0x1
  42a9a8:	mov	x25, x28
  42a9ac:	mov	x26, #0x0                   	// #0
  42a9b0:	mov	x24, #0x0                   	// #0
  42a9b4:	cmp	w1, #0x3a
  42a9b8:	b.eq	42acb8 <wcrtomb@plt+0x26098>  // b.none
  42a9bc:	cmp	w1, #0x40
  42a9c0:	b.eq	42acfc <wcrtomb@plt+0x260dc>  // b.none
  42a9c4:	cmp	w1, #0xa
  42a9c8:	b.eq	42acc8 <wcrtomb@plt+0x260a8>  // b.none
  42a9cc:	ldrb	w1, [x0], #1
  42a9d0:	cbnz	w1, 42a9b4 <wcrtomb@plt+0x25d94>
  42a9d4:	mov	x0, x25
  42a9d8:	bl	404bc0 <gethostbyname@plt>
  42a9dc:	cbz	x0, 42aed8 <wcrtomb@plt+0x262b8>
  42a9e0:	cbz	x26, 42a9f0 <wcrtomb@plt+0x25dd0>
  42a9e4:	ldrb	w0, [x26]
  42a9e8:	cmp	w0, #0x0
  42a9ec:	csel	x26, x26, xzr, ne  // ne = any
  42a9f0:	cbz	x22, 42af5c <wcrtomb@plt+0x2633c>
  42a9f4:	sbfiz	x1, x20, #3, #32
  42a9f8:	mov	x0, x22
  42a9fc:	str	x1, [sp, #104]
  42aa00:	bl	435560 <argp_parse@@Base+0x1678>
  42aa04:	add	x2, x27, #0x20
  42aa08:	sbfiz	x1, x20, #3, #32
  42aa0c:	stp	x2, x0, [sp, #104]
  42aa10:	add	x0, x2, x1
  42aa14:	bl	404130 <pipe@plt>
  42aa18:	cmn	w0, #0x1
  42aa1c:	sxtw	x1, w20
  42aa20:	str	x1, [sp, #120]
  42aa24:	b.eq	42ac90 <wcrtomb@plt+0x26070>  // b.none
  42aa28:	sbfiz	x0, x20, #3, #32
  42aa2c:	add	x0, x27, x0
  42aa30:	bl	404130 <pipe@plt>
  42aa34:	cmn	w0, #0x1
  42aa38:	b.eq	42ac90 <wcrtomb@plt+0x26070>  // b.none
  42aa3c:	bl	4041c0 <fork@plt>
  42aa40:	mov	w1, w0
  42aa44:	cmn	w0, #0x1
  42aa48:	b.eq	42af78 <wcrtomb@plt+0x26358>  // b.none
  42aa4c:	cbnz	w0, 42ab78 <wcrtomb@plt+0x25f58>
  42aa50:	ldr	x0, [sp, #104]
  42aa54:	sbfiz	x1, x20, #3, #32
  42aa58:	ldr	w0, [x0, x1]
  42aa5c:	mov	w1, #0x0                   	// #0
  42aa60:	bl	404a30 <dup2@plt>
  42aa64:	tbnz	w0, #31, 42aad0 <wcrtomb@plt+0x25eb0>
  42aa68:	ldr	x0, [sp, #104]
  42aa6c:	sbfiz	x1, x20, #3, #32
  42aa70:	ldr	w0, [x0, x1]
  42aa74:	cbnz	w0, 42af04 <wcrtomb@plt+0x262e4>
  42aa78:	sxtw	x0, w20
  42aa7c:	add	x0, x27, x0, lsl #3
  42aa80:	ldr	w0, [x0, #36]
  42aa84:	cbnz	w0, 42aec8 <wcrtomb@plt+0x262a8>
  42aa88:	sxtw	x0, w20
  42aa8c:	mov	w1, #0x1                   	// #1
  42aa90:	lsl	x2, x0, #3
  42aa94:	str	x2, [sp, #104]
  42aa98:	add	x0, x27, x2
  42aa9c:	str	x0, [sp, #120]
  42aaa0:	ldr	w0, [x0, #4]
  42aaa4:	bl	404a30 <dup2@plt>
  42aaa8:	tbnz	w0, #31, 42aad0 <wcrtomb@plt+0x25eb0>
  42aaac:	ldr	x2, [sp, #104]
  42aab0:	ldr	w0, [x27, x2]
  42aab4:	bl	4045c0 <close@plt>
  42aab8:	cbnz	w0, 42aad0 <wcrtomb@plt+0x25eb0>
  42aabc:	ldr	x0, [sp, #120]
  42aac0:	ldr	w0, [x0, #4]
  42aac4:	bl	4045c0 <close@plt>
  42aac8:	cbz	w0, 42ab08 <wcrtomb@plt+0x25ee8>
  42aacc:	nop
  42aad0:	bl	404ad0 <__errno_location@plt>
  42aad4:	mov	x3, x0
  42aad8:	mov	w2, #0x5                   	// #5
  42aadc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42aae0:	mov	x0, #0x0                   	// #0
  42aae4:	add	x1, x1, #0xa58
  42aae8:	ldr	w3, [x3]
  42aaec:	str	w3, [sp, #104]
  42aaf0:	bl	4049c0 <dcgettext@plt>
  42aaf4:	mov	x2, x0
  42aaf8:	ldr	w3, [sp, #104]
  42aafc:	mov	w0, #0x80                  	// #128
  42ab00:	mov	w1, w3
  42ab04:	bl	404050 <error@plt>
  42ab08:	bl	404120 <getuid@plt>
  42ab0c:	bl	403fb0 <setuid@plt>
  42ab10:	cbnz	w0, 42af8c <wcrtomb@plt+0x2636c>
  42ab14:	bl	4047f0 <getgid@plt>
  42ab18:	bl	404660 <setgid@plt>
  42ab1c:	cbnz	w0, 42af8c <wcrtomb@plt+0x2636c>
  42ab20:	ldr	x5, [x27, #64]
  42ab24:	cbz	x26, 42af10 <wcrtomb@plt+0x262f0>
  42ab28:	ldr	x1, [sp, #112]
  42ab2c:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ab30:	mov	x4, x26
  42ab34:	mov	x2, x25
  42ab38:	mov	x0, x22
  42ab3c:	add	x3, x3, #0xa80
  42ab40:	mov	x6, #0x0                   	// #0
  42ab44:	bl	404080 <execl@plt>
  42ab48:	bl	404ad0 <__errno_location@plt>
  42ab4c:	mov	x3, x0
  42ab50:	mov	w2, #0x5                   	// #5
  42ab54:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ab58:	mov	x0, #0x0                   	// #0
  42ab5c:	add	x1, x1, #0xa88
  42ab60:	ldr	w22, [x3]
  42ab64:	bl	4049c0 <dcgettext@plt>
  42ab68:	mov	x2, x0
  42ab6c:	mov	w0, #0x80                  	// #128
  42ab70:	mov	w1, w22
  42ab74:	bl	404050 <error@plt>
  42ab78:	sxtw	x0, w20
  42ab7c:	lsl	x26, x0, #3
  42ab80:	add	x0, x27, x26
  42ab84:	ldr	w0, [x0, #4]
  42ab88:	bl	4045c0 <close@plt>
  42ab8c:	add	x7, x27, #0x20
  42ab90:	ldr	w0, [x7, x26]
  42ab94:	bl	4045c0 <close@plt>
  42ab98:	mov	x0, x24
  42ab9c:	bl	403ff0 <strlen@plt>
  42aba0:	mov	x22, x0
  42aba4:	add	x0, x0, #0x3e8
  42aba8:	bl	440f48 <argp_parse@@Base+0xd060>
  42abac:	add	x22, x22, #0x2
  42abb0:	mov	x4, x24
  42abb4:	mov	x24, x0
  42abb8:	mov	x2, #0xffffffffffffffff    	// #-1
  42abbc:	mov	w1, #0x1                   	// #1
  42abc0:	add	x22, x24, x22
  42abc4:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42abc8:	add	x3, x3, #0xaa8
  42abcc:	bl	404010 <__sprintf_chk@plt>
  42abd0:	mov	x0, x22
  42abd4:	mov	w4, w19
  42abd8:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42abdc:	mov	x2, #0xffffffffffffffff    	// #-1
  42abe0:	add	x3, x3, #0xab0
  42abe4:	mov	w1, #0x1                   	// #1
  42abe8:	bl	404010 <__sprintf_chk@plt>
  42abec:	and	w0, w19, #0x3
  42abf0:	cmp	w0, #0x1
  42abf4:	b.eq	42ae48 <wcrtomb@plt+0x26228>  // b.none
  42abf8:	cmp	w0, #0x2
  42abfc:	b.ne	42ae18 <wcrtomb@plt+0x261f8>  // b.any
  42ac00:	mov	x0, x22
  42ac04:	bl	403ff0 <strlen@plt>
  42ac08:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ac0c:	add	x1, x1, #0xac8
  42ac10:	add	x2, x22, x0
  42ac14:	ldr	w3, [x1]
  42ac18:	str	w3, [x22, x0]
  42ac1c:	ldur	w0, [x1, #3]
  42ac20:	stur	w0, [x2, #3]
  42ac24:	tbnz	w19, #10, 42ad68 <wcrtomb@plt+0x26148>
  42ac28:	tbnz	w19, #6, 42ad3c <wcrtomb@plt+0x2611c>
  42ac2c:	tbnz	w19, #12, 42ad10 <wcrtomb@plt+0x260f0>
  42ac30:	tbnz	w19, #7, 42adf4 <wcrtomb@plt+0x261d4>
  42ac34:	tbnz	w19, #8, 42adcc <wcrtomb@plt+0x261ac>
  42ac38:	tbnz	w19, #11, 42ae5c <wcrtomb@plt+0x2623c>
  42ac3c:	and	w0, w19, #0x1ff000
  42ac40:	and	w0, w0, #0xfff01fff
  42ac44:	cbnz	w0, 42ad94 <wcrtomb@plt+0x26174>
  42ac48:	tbnz	w19, #9, 42ae84 <wcrtomb@plt+0x26264>
  42ac4c:	mov	x0, x24
  42ac50:	bl	403ff0 <strlen@plt>
  42ac54:	mov	x2, x0
  42ac58:	mov	w3, #0xa                   	// #10
  42ac5c:	mov	x1, x24
  42ac60:	mov	w0, w20
  42ac64:	strh	w3, [x24, x2]
  42ac68:	bl	42a6e0 <wcrtomb@plt+0x25ac0>
  42ac6c:	cmn	w0, #0x1
  42ac70:	b.eq	42af2c <wcrtomb@plt+0x2630c>  // b.none
  42ac74:	mov	w0, w20
  42ac78:	bl	42a8c8 <wcrtomb@plt+0x25ca8>
  42ac7c:	cmn	x0, #0x1
  42ac80:	b.eq	42af2c <wcrtomb@plt+0x2630c>  // b.none
  42ac84:	mov	x0, x24
  42ac88:	add	w21, w23, w20
  42ac8c:	bl	4047b0 <free@plt>
  42ac90:	mov	x0, x28
  42ac94:	bl	4047b0 <free@plt>
  42ac98:	mov	w0, w21
  42ac9c:	ldp	x19, x20, [sp, #16]
  42aca0:	ldp	x21, x22, [sp, #32]
  42aca4:	ldp	x23, x24, [sp, #48]
  42aca8:	ldp	x25, x26, [sp, #64]
  42acac:	ldp	x27, x28, [sp, #80]
  42acb0:	ldp	x29, x30, [sp], #128
  42acb4:	ret
  42acb8:	cbnz	x24, 42a9cc <wcrtomb@plt+0x25dac>
  42acbc:	mov	x24, x0
  42acc0:	sturb	wzr, [x0, #-1]
  42acc4:	b	42a9cc <wcrtomb@plt+0x25dac>
  42acc8:	mov	x0, x28
  42accc:	bl	4047b0 <free@plt>
  42acd0:	bl	404ad0 <__errno_location@plt>
  42acd4:	mov	w1, #0x2                   	// #2
  42acd8:	ldp	x25, x26, [sp, #64]
  42acdc:	str	w1, [x0]
  42ace0:	mov	w0, w21
  42ace4:	ldp	x19, x20, [sp, #16]
  42ace8:	ldp	x21, x22, [sp, #32]
  42acec:	ldp	x23, x24, [sp, #48]
  42acf0:	ldp	x27, x28, [sp, #80]
  42acf4:	ldp	x29, x30, [sp], #128
  42acf8:	ret
  42acfc:	cbnz	x26, 42a9cc <wcrtomb@plt+0x25dac>
  42ad00:	mov	x26, x25
  42ad04:	mov	x25, x0
  42ad08:	sturb	wzr, [x0, #-1]
  42ad0c:	b	42a9cc <wcrtomb@plt+0x25dac>
  42ad10:	mov	x0, x22
  42ad14:	bl	403ff0 <strlen@plt>
  42ad18:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ad1c:	add	x1, x1, #0xb00
  42ad20:	add	x2, x22, x0
  42ad24:	ldr	x3, [x1]
  42ad28:	str	x3, [x22, x0]
  42ad2c:	ldrb	w0, [x1, #8]
  42ad30:	strb	w0, [x2, #8]
  42ad34:	tbz	w19, #7, 42ac34 <wcrtomb@plt+0x26014>
  42ad38:	b	42adf4 <wcrtomb@plt+0x261d4>
  42ad3c:	mov	x0, x22
  42ad40:	bl	403ff0 <strlen@plt>
  42ad44:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ad48:	add	x1, x1, #0xaf0
  42ad4c:	add	x2, x22, x0
  42ad50:	ldr	x3, [x1]
  42ad54:	str	x3, [x22, x0]
  42ad58:	ldrb	w0, [x1, #8]
  42ad5c:	strb	w0, [x2, #8]
  42ad60:	tbz	w19, #12, 42ac30 <wcrtomb@plt+0x26010>
  42ad64:	b	42ad10 <wcrtomb@plt+0x260f0>
  42ad68:	mov	x0, x22
  42ad6c:	bl	403ff0 <strlen@plt>
  42ad70:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ad74:	add	x1, x1, #0xae0
  42ad78:	add	x2, x22, x0
  42ad7c:	ldr	x3, [x1]
  42ad80:	str	x3, [x22, x0]
  42ad84:	ldrh	w0, [x1, #8]
  42ad88:	strh	w0, [x2, #8]
  42ad8c:	tbz	w19, #6, 42ac2c <wcrtomb@plt+0x2600c>
  42ad90:	b	42ad3c <wcrtomb@plt+0x2611c>
  42ad94:	mov	x0, x22
  42ad98:	bl	403ff0 <strlen@plt>
  42ad9c:	mov	x3, #0x4f7c                	// #20348
  42ada0:	add	x1, x0, #0x8
  42ada4:	movk	x3, #0x525f, lsl #16
  42ada8:	mov	x2, #0x4f7c                	// #20348
  42adac:	movk	x3, #0x5953, lsl #32
  42adb0:	movk	x2, #0x535f, lsl #16
  42adb4:	movk	x3, #0x434e, lsl #48
  42adb8:	movk	x2, #0x4e59, lsl #32
  42adbc:	str	x3, [x22, x0]
  42adc0:	movk	x2, #0x43, lsl #48
  42adc4:	str	x2, [x22, x1]
  42adc8:	b	42ac48 <wcrtomb@plt+0x26028>
  42adcc:	mov	x0, x22
  42add0:	bl	403ff0 <strlen@plt>
  42add4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42add8:	add	x1, x1, #0xb10
  42addc:	add	x2, x22, x0
  42ade0:	ldr	x3, [x1]
  42ade4:	str	x3, [x22, x0]
  42ade8:	ldrh	w0, [x1, #8]
  42adec:	strh	w0, [x2, #8]
  42adf0:	b	42ac38 <wcrtomb@plt+0x26018>
  42adf4:	mov	x0, x22
  42adf8:	bl	403ff0 <strlen@plt>
  42adfc:	mov	x1, #0x4f7c                	// #20348
  42ae00:	movk	x1, #0x455f, lsl #16
  42ae04:	movk	x1, #0x4358, lsl #32
  42ae08:	movk	x1, #0x4c, lsl #48
  42ae0c:	str	x1, [x22, x0]
  42ae10:	tbz	w19, #8, 42ac38 <wcrtomb@plt+0x26018>
  42ae14:	b	42adcc <wcrtomb@plt+0x261ac>
  42ae18:	cbnz	w0, 42af8c <wcrtomb@plt+0x2636c>
  42ae1c:	mov	x0, x22
  42ae20:	bl	403ff0 <strlen@plt>
  42ae24:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ae28:	add	x1, x1, #0xab8
  42ae2c:	add	x2, x22, x0
  42ae30:	ldr	x3, [x1]
  42ae34:	str	x3, [x22, x0]
  42ae38:	ldrb	w0, [x1, #8]
  42ae3c:	strb	w0, [x2, #8]
  42ae40:	tbz	w19, #10, 42ac28 <wcrtomb@plt+0x26008>
  42ae44:	b	42ad68 <wcrtomb@plt+0x26148>
  42ae48:	mov	x0, x22
  42ae4c:	bl	403ff0 <strlen@plt>
  42ae50:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ae54:	add	x1, x1, #0xad0
  42ae58:	b	42ae2c <wcrtomb@plt+0x2620c>
  42ae5c:	mov	x0, x22
  42ae60:	bl	403ff0 <strlen@plt>
  42ae64:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ae68:	add	x1, x1, #0xb20
  42ae6c:	add	x2, x22, x0
  42ae70:	ldr	x3, [x1]
  42ae74:	str	x3, [x22, x0]
  42ae78:	ldr	w0, [x1, #8]
  42ae7c:	str	w0, [x2, #8]
  42ae80:	b	42ac3c <wcrtomb@plt+0x2601c>
  42ae84:	mov	x0, x22
  42ae88:	bl	403ff0 <strlen@plt>
  42ae8c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ae90:	add	x1, x1, #0xb30
  42ae94:	add	x2, x22, x0
  42ae98:	ldr	x3, [x1]
  42ae9c:	str	x3, [x22, x0]
  42aea0:	ldrb	w0, [x1, #8]
  42aea4:	strb	w0, [x2, #8]
  42aea8:	b	42ac4c <wcrtomb@plt+0x2602c>
  42aeac:	bl	404bc0 <gethostbyname@plt>
  42aeb0:	mov	x25, x28
  42aeb4:	mov	x24, x0
  42aeb8:	cbz	x0, 42aed4 <wcrtomb@plt+0x262b4>
  42aebc:	mov	x24, #0x0                   	// #0
  42aec0:	mov	x26, #0x0                   	// #0
  42aec4:	b	42a9f0 <wcrtomb@plt+0x25dd0>
  42aec8:	bl	4045c0 <close@plt>
  42aecc:	cbnz	w0, 42aad0 <wcrtomb@plt+0x25eb0>
  42aed0:	b	42aa88 <wcrtomb@plt+0x25e68>
  42aed4:	mov	x26, #0x0                   	// #0
  42aed8:	mov	w2, #0x5                   	// #5
  42aedc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42aee0:	mov	x0, #0x0                   	// #0
  42aee4:	add	x1, x1, #0xa30
  42aee8:	bl	4049c0 <dcgettext@plt>
  42aeec:	mov	x2, x0
  42aef0:	mov	x3, x25
  42aef4:	mov	w1, #0x0                   	// #0
  42aef8:	mov	w0, #0x80                  	// #128
  42aefc:	bl	404050 <error@plt>
  42af00:	b	42a9e0 <wcrtomb@plt+0x25dc0>
  42af04:	bl	4045c0 <close@plt>
  42af08:	cbnz	w0, 42aad0 <wcrtomb@plt+0x25eb0>
  42af0c:	b	42aa78 <wcrtomb@plt+0x25e58>
  42af10:	ldr	x1, [sp, #112]
  42af14:	mov	x3, x5
  42af18:	mov	x2, x25
  42af1c:	mov	x0, x22
  42af20:	mov	x4, #0x0                   	// #0
  42af24:	bl	404080 <execl@plt>
  42af28:	b	42ab48 <wcrtomb@plt+0x25f28>
  42af2c:	bl	404ad0 <__errno_location@plt>
  42af30:	mov	x1, x0
  42af34:	mov	x0, x24
  42af38:	ldr	w19, [x1]
  42af3c:	bl	4047b0 <free@plt>
  42af40:	mov	x0, x28
  42af44:	bl	4047b0 <free@plt>
  42af48:	mov	w1, w19
  42af4c:	mov	w0, w20
  42af50:	bl	42a680 <wcrtomb@plt+0x25a60>
  42af54:	ldp	x25, x26, [sp, #64]
  42af58:	b	42ace0 <wcrtomb@plt+0x260c0>
  42af5c:	mov	x0, x28
  42af60:	bl	4047b0 <free@plt>
  42af64:	bl	404ad0 <__errno_location@plt>
  42af68:	mov	w1, #0x5                   	// #5
  42af6c:	ldp	x25, x26, [sp, #64]
  42af70:	str	w1, [x0]
  42af74:	b	42ace0 <wcrtomb@plt+0x260c0>
  42af78:	mov	x0, x28
  42af7c:	mov	w21, w1
  42af80:	bl	4047b0 <free@plt>
  42af84:	ldp	x25, x26, [sp, #64]
  42af88:	b	42ace0 <wcrtomb@plt+0x260c0>
  42af8c:	bl	404650 <abort@plt>
  42af90:	stp	x29, x30, [sp, #-32]!
  42af94:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42af98:	add	x1, x1, #0xb40
  42af9c:	mov	x29, sp
  42afa0:	stp	x19, x20, [sp, #16]
  42afa4:	mov	w20, w0
  42afa8:	bl	42a6e0 <wcrtomb@plt+0x25ac0>
  42afac:	cmn	w0, #0x1
  42afb0:	b.eq	42afd8 <wcrtomb@plt+0x263b8>  // b.none
  42afb4:	mov	w0, w20
  42afb8:	bl	42a8c8 <wcrtomb@plt+0x25ca8>
  42afbc:	mov	x19, x0
  42afc0:	bl	404ad0 <__errno_location@plt>
  42afc4:	mov	x1, x0
  42afc8:	mov	w0, w20
  42afcc:	ldr	w1, [x1]
  42afd0:	bl	42a680 <wcrtomb@plt+0x25a60>
  42afd4:	mov	w0, w19
  42afd8:	ldp	x19, x20, [sp, #16]
  42afdc:	ldp	x29, x30, [sp], #32
  42afe0:	ret
  42afe4:	nop
  42afe8:	stp	x29, x30, [sp, #-128]!
  42afec:	mov	x4, x2
  42aff0:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42aff4:	mov	x29, sp
  42aff8:	add	x3, x3, #0xb48
  42affc:	stp	x19, x20, [sp, #16]
  42b000:	mov	x19, x2
  42b004:	mov	x2, #0x40                  	// #64
  42b008:	mov	x20, x1
  42b00c:	mov	w1, #0x1                   	// #1
  42b010:	stp	x21, x22, [sp, #32]
  42b014:	stp	x23, x24, [sp, #48]
  42b018:	mov	w23, w0
  42b01c:	add	x0, sp, x2
  42b020:	bl	404010 <__sprintf_chk@plt>
  42b024:	add	x1, sp, #0x40
  42b028:	mov	w0, w23
  42b02c:	bl	42a6e0 <wcrtomb@plt+0x25ac0>
  42b030:	cmn	w0, #0x1
  42b034:	b.eq	42b0bc <wcrtomb@plt+0x2649c>  // b.none
  42b038:	mov	w0, w23
  42b03c:	bl	42a8c8 <wcrtomb@plt+0x25ca8>
  42b040:	cmp	x19, x0
  42b044:	mov	x21, x0
  42b048:	ccmn	x0, #0x1, #0x4, cs  // cs = hs, nlast
  42b04c:	b.eq	42b0bc <wcrtomb@plt+0x2649c>  // b.none
  42b050:	cbz	x0, 42b0a4 <wcrtomb@plt+0x26484>
  42b054:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42b058:	sbfiz	x24, x23, #3, #32
  42b05c:	add	x22, x22, #0x218
  42b060:	mov	x19, #0x0                   	// #0
  42b064:	b	42b074 <wcrtomb@plt+0x26454>
  42b068:	add	x20, x20, x0
  42b06c:	cmp	x21, x19
  42b070:	b.ls	42b0a4 <wcrtomb@plt+0x26484>  // b.plast
  42b074:	ldr	w0, [x22, x24]
  42b078:	mov	x1, x20
  42b07c:	sub	x2, x21, x19
  42b080:	bl	440470 <argp_parse@@Base+0xc588>
  42b084:	sub	x1, x0, #0x1
  42b088:	add	x19, x19, x0
  42b08c:	cmn	x1, #0x3
  42b090:	b.ls	42b068 <wcrtomb@plt+0x26448>  // b.plast
  42b094:	mov	w0, w23
  42b098:	mov	w1, #0x5                   	// #5
  42b09c:	mov	x21, #0xffffffffffffffff    	// #-1
  42b0a0:	bl	42a680 <wcrtomb@plt+0x25a60>
  42b0a4:	mov	x0, x21
  42b0a8:	ldp	x19, x20, [sp, #16]
  42b0ac:	ldp	x21, x22, [sp, #32]
  42b0b0:	ldp	x23, x24, [sp, #48]
  42b0b4:	ldp	x29, x30, [sp], #128
  42b0b8:	ret
  42b0bc:	mov	x21, #0xffffffffffffffff    	// #-1
  42b0c0:	mov	x0, x21
  42b0c4:	ldp	x19, x20, [sp, #16]
  42b0c8:	ldp	x21, x22, [sp, #32]
  42b0cc:	ldp	x23, x24, [sp, #48]
  42b0d0:	ldp	x29, x30, [sp], #128
  42b0d4:	ret
  42b0d8:	stp	x29, x30, [sp, #-112]!
  42b0dc:	mov	x4, x2
  42b0e0:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42b0e4:	mov	x29, sp
  42b0e8:	add	x3, x3, #0xb50
  42b0ec:	stp	x19, x20, [sp, #16]
  42b0f0:	mov	x20, x2
  42b0f4:	mov	x2, #0x40                  	// #64
  42b0f8:	mov	w19, w0
  42b0fc:	add	x0, sp, #0x30
  42b100:	stp	x21, x22, [sp, #32]
  42b104:	mov	x21, x1
  42b108:	mov	w1, #0x1                   	// #1
  42b10c:	bl	404010 <__sprintf_chk@plt>
  42b110:	add	x1, sp, #0x30
  42b114:	mov	w0, w19
  42b118:	bl	42a6e0 <wcrtomb@plt+0x25ac0>
  42b11c:	cmn	w0, #0x1
  42b120:	b.eq	42b1a4 <wcrtomb@plt+0x26584>  // b.none
  42b124:	mov	x1, #0x1                   	// #1
  42b128:	mov	w0, #0xd                   	// #13
  42b12c:	bl	404270 <signal@plt>
  42b130:	mov	x22, x0
  42b134:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42b138:	add	x3, x3, #0x218
  42b13c:	add	x3, x3, w19, sxtw #3
  42b140:	mov	x2, x20
  42b144:	mov	x1, x21
  42b148:	ldr	w0, [x3, #36]
  42b14c:	bl	437dc8 <argp_parse@@Base+0x3ee0>
  42b150:	mov	x21, x0
  42b154:	mov	x1, x22
  42b158:	mov	w0, #0xd                   	// #13
  42b15c:	bl	404270 <signal@plt>
  42b160:	cmp	x20, x21
  42b164:	b.eq	42b188 <wcrtomb@plt+0x26568>  // b.none
  42b168:	mov	w0, w19
  42b16c:	mov	w1, #0x5                   	// #5
  42b170:	bl	42a680 <wcrtomb@plt+0x25a60>
  42b174:	mov	x0, x21
  42b178:	ldp	x19, x20, [sp, #16]
  42b17c:	ldp	x21, x22, [sp, #32]
  42b180:	ldp	x29, x30, [sp], #112
  42b184:	ret
  42b188:	mov	w0, w19
  42b18c:	bl	42a8c8 <wcrtomb@plt+0x25ca8>
  42b190:	tbnz	x0, #63, 42b1a4 <wcrtomb@plt+0x26584>
  42b194:	cmp	x21, x0
  42b198:	b.eq	42b174 <wcrtomb@plt+0x26554>  // b.none
  42b19c:	mov	x21, x0
  42b1a0:	b	42b168 <wcrtomb@plt+0x26548>
  42b1a4:	mov	x21, #0x0                   	// #0
  42b1a8:	mov	x0, x21
  42b1ac:	ldp	x19, x20, [sp, #16]
  42b1b0:	ldp	x21, x22, [sp, #32]
  42b1b4:	ldp	x29, x30, [sp], #112
  42b1b8:	ret
  42b1bc:	nop
  42b1c0:	stp	x29, x30, [sp, #-192]!
  42b1c4:	cmp	x1, #0x0
  42b1c8:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  42b1cc:	mov	x29, sp
  42b1d0:	mov	w5, w2
  42b1d4:	cneg	x7, x1, lt  // lt = tstop
  42b1d8:	add	x4, sp, #0x3c
  42b1dc:	str	x19, [sp, #16]
  42b1e0:	mov	w19, w0
  42b1e4:	movk	x8, #0xcccd
  42b1e8:	strb	wzr, [sp, #60]
  42b1ec:	nop
  42b1f0:	umulh	x6, x7, x8
  42b1f4:	mov	x9, x4
  42b1f8:	cmp	x7, #0x9
  42b1fc:	lsr	x6, x6, #3
  42b200:	add	x3, x6, x6, lsl #2
  42b204:	sub	x3, x7, x3, lsl #1
  42b208:	mov	x7, x6
  42b20c:	add	w3, w3, #0x30
  42b210:	strb	w3, [x4, #-1]!
  42b214:	b.hi	42b1f0 <wcrtomb@plt+0x265d0>  // b.pmore
  42b218:	tbz	x1, #63, 42b228 <wcrtomb@plt+0x26608>
  42b21c:	mov	w0, #0x2d                  	// #45
  42b220:	sturb	w0, [x4, #-1]
  42b224:	sub	x4, x9, #0x2
  42b228:	cmp	w5, #0x2
  42b22c:	b.hi	42b31c <wcrtomb@plt+0x266fc>  // b.pmore
  42b230:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42b234:	add	x3, x3, #0xb58
  42b238:	mov	x2, #0x40                  	// #64
  42b23c:	mov	w1, #0x1                   	// #1
  42b240:	add	x0, sp, x2
  42b244:	bl	404010 <__sprintf_chk@plt>
  42b248:	add	x1, sp, #0x40
  42b24c:	mov	w0, w19
  42b250:	bl	42a6e0 <wcrtomb@plt+0x25ac0>
  42b254:	cmn	w0, #0x1
  42b258:	b.eq	42b2e8 <wcrtomb@plt+0x266c8>  // b.none
  42b25c:	mov	w0, w19
  42b260:	add	x1, sp, #0x80
  42b264:	bl	42a770 <wcrtomb@plt+0x25b50>
  42b268:	cbz	x0, 42b2e8 <wcrtomb@plt+0x266c8>
  42b26c:	ldrb	w4, [x0]
  42b270:	cmp	w4, #0x20
  42b274:	ccmp	w4, #0x9, #0x4, ne  // ne = any
  42b278:	b.eq	42b2f8 <wcrtomb@plt+0x266d8>  // b.none
  42b27c:	sub	w1, w4, #0x2b
  42b280:	mov	w2, #0xfd                  	// #253
  42b284:	tst	w1, w2
  42b288:	cset	w1, eq  // eq = none
  42b28c:	cinc	x3, x0, eq  // eq = none
  42b290:	add	x3, x3, #0x1
  42b294:	ldrb	w1, [x0, w1, uxtw]
  42b298:	mov	x0, #0x0                   	// #0
  42b29c:	sub	w1, w1, #0x30
  42b2a0:	cmp	w1, #0x9
  42b2a4:	b.ls	42b2c8 <wcrtomb@plt+0x266a8>  // b.plast
  42b2a8:	b	42b2ec <wcrtomb@plt+0x266cc>
  42b2ac:	add	x0, x2, x1
  42b2b0:	cmp	x2, x0
  42b2b4:	b.gt	42b2e8 <wcrtomb@plt+0x266c8>
  42b2b8:	ldrb	w1, [x3], #1
  42b2bc:	sub	w1, w1, #0x30
  42b2c0:	cmp	w1, #0x9
  42b2c4:	b.hi	42b2ec <wcrtomb@plt+0x266cc>  // b.pmore
  42b2c8:	add	x0, x0, x0, lsl #2
  42b2cc:	sxtw	x1, w1
  42b2d0:	cmp	w4, #0x2d
  42b2d4:	lsl	x2, x0, #1
  42b2d8:	b.ne	42b2ac <wcrtomb@plt+0x2668c>  // b.any
  42b2dc:	sub	x0, x2, x1
  42b2e0:	cmp	x2, x0
  42b2e4:	b.ge	42b2b8 <wcrtomb@plt+0x26698>  // b.tcont
  42b2e8:	mov	x0, #0xffffffffffffffff    	// #-1
  42b2ec:	ldr	x19, [sp, #16]
  42b2f0:	ldp	x29, x30, [sp], #192
  42b2f4:	ret
  42b2f8:	ldrb	w4, [x0, #1]!
  42b2fc:	cmp	w4, #0x20
  42b300:	ccmp	w4, #0x9, #0x4, ne  // ne = any
  42b304:	b.ne	42b27c <wcrtomb@plt+0x2665c>  // b.any
  42b308:	ldrb	w4, [x0, #1]!
  42b30c:	cmp	w4, #0x20
  42b310:	ccmp	w4, #0x9, #0x4, ne  // ne = any
  42b314:	b.ne	42b27c <wcrtomb@plt+0x2665c>  // b.any
  42b318:	b	42b2f8 <wcrtomb@plt+0x266d8>
  42b31c:	bl	404650 <abort@plt>
  42b320:	stp	x29, x30, [sp, #-160]!
  42b324:	mov	x29, sp
  42b328:	stp	x19, x20, [sp, #16]
  42b32c:	mov	w20, w0
  42b330:	stp	x21, x22, [sp, #32]
  42b334:	mov	x21, x2
  42b338:	mov	w2, #0x6d02                	// #27906
  42b33c:	movk	w2, #0x8030, lsl #16
  42b340:	cmp	w1, w2
  42b344:	b.eq	42b37c <wcrtomb@plt+0x2675c>  // b.none
  42b348:	mov	w0, #0x6d01                	// #27905
  42b34c:	movk	w0, #0x4008, lsl #16
  42b350:	cmp	w1, w0
  42b354:	b.eq	42b418 <wcrtomb@plt+0x267f8>  // b.none
  42b358:	bl	404ad0 <__errno_location@plt>
  42b35c:	mov	x1, x0
  42b360:	mov	w2, #0x5f                  	// #95
  42b364:	mov	w0, #0xffffffff            	// #-1
  42b368:	str	w2, [x1]
  42b36c:	ldp	x19, x20, [sp, #16]
  42b370:	ldp	x21, x22, [sp, #32]
  42b374:	ldp	x29, x30, [sp], #160
  42b378:	ret
  42b37c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  42b380:	add	x1, x1, #0xb38
  42b384:	bl	42a6e0 <wcrtomb@plt+0x25ac0>
  42b388:	cmn	w0, #0x1
  42b38c:	b.eq	42b50c <wcrtomb@plt+0x268ec>  // b.none
  42b390:	mov	w0, w20
  42b394:	bl	42a8c8 <wcrtomb@plt+0x25ca8>
  42b398:	mov	x19, x0
  42b39c:	cmn	x0, #0x1
  42b3a0:	b.eq	42b50c <wcrtomb@plt+0x268ec>  // b.none
  42b3a4:	cmp	x0, #0x8
  42b3a8:	b.hi	42b514 <wcrtomb@plt+0x268f4>  // b.pmore
  42b3ac:	sxtw	x22, w20
  42b3b0:	str	x23, [sp, #48]
  42b3b4:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42b3b8:	add	x23, x23, #0x218
  42b3bc:	lsl	x22, x22, #3
  42b3c0:	cbnz	x0, 42b3d4 <wcrtomb@plt+0x267b4>
  42b3c4:	b	42b4f4 <wcrtomb@plt+0x268d4>
  42b3c8:	add	x21, x21, x0
  42b3cc:	cmp	x19, #0x0
  42b3d0:	b.le	42b4bc <wcrtomb@plt+0x2689c>
  42b3d4:	ldr	w0, [x23, x22]
  42b3d8:	mov	x1, x21
  42b3dc:	mov	x2, x19
  42b3e0:	bl	440470 <argp_parse@@Base+0xc588>
  42b3e4:	sub	x1, x0, #0x1
  42b3e8:	sub	x19, x19, x0
  42b3ec:	cmn	x1, #0x3
  42b3f0:	b.ls	42b3c8 <wcrtomb@plt+0x267a8>  // b.plast
  42b3f4:	mov	w0, w20
  42b3f8:	mov	w1, #0x5                   	// #5
  42b3fc:	bl	42a680 <wcrtomb@plt+0x25a60>
  42b400:	mov	w0, #0xffffffff            	// #-1
  42b404:	ldp	x19, x20, [sp, #16]
  42b408:	ldp	x21, x22, [sp, #32]
  42b40c:	ldr	x23, [sp, #48]
  42b410:	ldp	x29, x30, [sp], #160
  42b414:	ret
  42b418:	ldr	w6, [x21, #4]
  42b41c:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  42b420:	add	x5, sp, #0x5c
  42b424:	movk	x2, #0xcccd
  42b428:	cmp	w6, #0x0
  42b42c:	strb	wzr, [sp, #92]
  42b430:	sxtw	x0, w6
  42b434:	cneg	x0, x0, lt  // lt = tstop
  42b438:	umulh	x3, x0, x2
  42b43c:	mov	x4, x5
  42b440:	cmp	x0, #0x9
  42b444:	lsr	x3, x3, #3
  42b448:	add	x1, x3, x3, lsl #2
  42b44c:	sub	x1, x0, x1, lsl #1
  42b450:	mov	x0, x3
  42b454:	add	w1, w1, #0x30
  42b458:	strb	w1, [x5, #-1]!
  42b45c:	b.hi	42b438 <wcrtomb@plt+0x26818>  // b.pmore
  42b460:	tbnz	w6, #31, 42b4ac <wcrtomb@plt+0x2688c>
  42b464:	ldrsh	w4, [x21]
  42b468:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42b46c:	add	x3, x3, #0xb60
  42b470:	mov	x2, #0x40                  	// #64
  42b474:	mov	w1, #0x1                   	// #1
  42b478:	add	x0, sp, #0x60
  42b47c:	bl	404010 <__sprintf_chk@plt>
  42b480:	add	x1, sp, #0x60
  42b484:	mov	w0, w20
  42b488:	bl	42a6e0 <wcrtomb@plt+0x25ac0>
  42b48c:	cmn	w0, #0x1
  42b490:	b.eq	42b36c <wcrtomb@plt+0x2674c>  // b.none
  42b494:	mov	w0, w20
  42b498:	bl	42a8c8 <wcrtomb@plt+0x25ca8>
  42b49c:	ldp	x19, x20, [sp, #16]
  42b4a0:	ldp	x21, x22, [sp, #32]
  42b4a4:	ldp	x29, x30, [sp], #160
  42b4a8:	ret
  42b4ac:	mov	w0, #0x2d                  	// #45
  42b4b0:	sturb	w0, [x5, #-1]
  42b4b4:	sub	x5, x4, #0x2
  42b4b8:	b	42b464 <wcrtomb@plt+0x26844>
  42b4bc:	ldr	x0, [x21]
  42b4c0:	cmp	x0, #0xff
  42b4c4:	b.le	42b4f4 <wcrtomb@plt+0x268d4>
  42b4c8:	cbz	x19, 42b4f4 <wcrtomb@plt+0x268d4>
  42b4cc:	add	x1, x21, #0x1
  42b4d0:	mov	x0, #0x0                   	// #0
  42b4d4:	nop
  42b4d8:	ldrb	w3, [x1, x0]
  42b4dc:	ldrb	w2, [x21, x0]
  42b4e0:	strb	w3, [x21, x0]
  42b4e4:	strb	w2, [x1, x0]
  42b4e8:	add	x0, x0, #0x2
  42b4ec:	cmp	x19, x0
  42b4f0:	b.hi	42b4d8 <wcrtomb@plt+0x268b8>  // b.pmore
  42b4f4:	mov	w0, #0x0                   	// #0
  42b4f8:	ldp	x19, x20, [sp, #16]
  42b4fc:	ldp	x21, x22, [sp, #32]
  42b500:	ldr	x23, [sp, #48]
  42b504:	ldp	x29, x30, [sp], #160
  42b508:	ret
  42b50c:	mov	w0, #0xffffffff            	// #-1
  42b510:	b	42b36c <wcrtomb@plt+0x2674c>
  42b514:	bl	404ad0 <__errno_location@plt>
  42b518:	mov	x1, x0
  42b51c:	mov	w2, #0x4b                  	// #75
  42b520:	mov	w0, #0xffffffff            	// #-1
  42b524:	str	w2, [x1]
  42b528:	b	42b36c <wcrtomb@plt+0x2674c>
  42b52c:	nop
  42b530:	stp	x29, x30, [sp, #-64]!
  42b534:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42b538:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42b53c:	mov	x29, sp
  42b540:	stp	x19, x20, [sp, #16]
  42b544:	mov	x19, #0x0                   	// #0
  42b548:	mov	w20, w19
  42b54c:	stp	x21, x22, [sp, #32]
  42b550:	add	x22, x0, #0xb78
  42b554:	mov	w21, #0x1                   	// #1
  42b558:	mov	w0, w19
  42b55c:	stp	x23, x24, [sp, #48]
  42b560:	add	x23, x1, #0xb88
  42b564:	mov	w1, #0x1                   	// #1
  42b568:	bl	441b80 <argp_parse@@Base+0xdc98>
  42b56c:	tbnz	w0, #31, 42b590 <wcrtomb@plt+0x26970>
  42b570:	cmp	w20, #0x2
  42b574:	b.eq	42b5ac <wcrtomb@plt+0x2698c>  // b.none
  42b578:	add	x19, x19, #0x1
  42b57c:	mov	w1, #0x1                   	// #1
  42b580:	mov	w0, w19
  42b584:	mov	w20, w19
  42b588:	bl	441b80 <argp_parse@@Base+0xdc98>
  42b58c:	tbz	w0, #31, 42b570 <wcrtomb@plt+0x26950>
  42b590:	bl	404ad0 <__errno_location@plt>
  42b594:	ldr	w0, [x0]
  42b598:	cmp	w0, #0x9
  42b59c:	b.eq	42b5c4 <wcrtomb@plt+0x269a4>  // b.none
  42b5a0:	cmp	w20, #0x2
  42b5a4:	mov	w21, #0x0                   	// #0
  42b5a8:	b.ne	42b578 <wcrtomb@plt+0x26958>  // b.any
  42b5ac:	mov	w0, w21
  42b5b0:	ldp	x19, x20, [sp, #16]
  42b5b4:	ldp	x21, x22, [sp, #32]
  42b5b8:	ldp	x23, x24, [sp, #48]
  42b5bc:	ldp	x29, x30, [sp], #64
  42b5c0:	ret
  42b5c4:	ldr	w24, [x23, x19, lsl #2]
  42b5c8:	cbz	w24, 42b5f4 <wcrtomb@plt+0x269d4>
  42b5cc:	mov	w1, w24
  42b5d0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42b5d4:	add	x0, x0, #0xb68
  42b5d8:	bl	404ba0 <__open_2@plt>
  42b5dc:	cmp	w0, w19
  42b5e0:	b.eq	42b618 <wcrtomb@plt+0x269f8>  // b.none
  42b5e4:	mov	w1, w24
  42b5e8:	mov	x0, x22
  42b5ec:	bl	404ba0 <__open_2@plt>
  42b5f0:	b	42b600 <wcrtomb@plt+0x269e0>
  42b5f4:	mov	x0, x22
  42b5f8:	mov	w1, #0x0                   	// #0
  42b5fc:	bl	404340 <open@plt>
  42b600:	cmp	w0, w19
  42b604:	b.eq	42b570 <wcrtomb@plt+0x26950>  // b.none
  42b608:	tbnz	w0, #31, 42b5a0 <wcrtomb@plt+0x26980>
  42b60c:	mov	w21, #0x0                   	// #0
  42b610:	bl	4045c0 <close@plt>
  42b614:	b	42b570 <wcrtomb@plt+0x26950>
  42b618:	mov	w0, #0x0                   	// #0
  42b61c:	cbnz	w19, 42b60c <wcrtomb@plt+0x269ec>
  42b620:	b	42b578 <wcrtomb@plt+0x26958>
  42b624:	nop
  42b628:	mov	w2, w0
  42b62c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42b630:	tbz	w2, #1, 42b69c <wcrtomb@plt+0x26a7c>
  42b634:	mov	w0, #0x77                  	// #119
  42b638:	strb	w0, [x1, #3424]
  42b63c:	tst	x2, #0x4
  42b640:	mov	w3, #0x2d                  	// #45
  42b644:	mov	w7, #0x71                  	// #113
  42b648:	csel	w7, w3, w7, eq  // eq = none
  42b64c:	tst	x2, #0x8
  42b650:	add	x0, x1, #0xd60
  42b654:	mov	w6, #0x45                  	// #69
  42b658:	csel	w6, w3, w6, eq  // eq = none
  42b65c:	tst	x2, #0x10
  42b660:	mov	w5, #0x6a                  	// #106
  42b664:	csel	w5, w3, w5, eq  // eq = none
  42b668:	tst	x2, #0x20
  42b66c:	mov	w4, #0x73                  	// #115
  42b670:	csel	w4, w3, w4, eq  // eq = none
  42b674:	tst	x2, #0x40
  42b678:	mov	w1, #0x64                  	// #100
  42b67c:	csel	w3, w1, w3, ne  // ne = any
  42b680:	strb	w7, [x0, #1]
  42b684:	strb	w6, [x0, #2]
  42b688:	strb	w5, [x0, #3]
  42b68c:	strb	w4, [x0, #4]
  42b690:	strb	w3, [x0, #5]
  42b694:	strb	wzr, [x0, #6]
  42b698:	ret
  42b69c:	tbz	w2, #0, 42b6ac <wcrtomb@plt+0x26a8c>
  42b6a0:	mov	w0, #0x6e                  	// #110
  42b6a4:	strb	w0, [x1, #3424]
  42b6a8:	b	42b63c <wcrtomb@plt+0x26a1c>
  42b6ac:	mov	w0, #0x2d                  	// #45
  42b6b0:	strb	w0, [x1, #3424]
  42b6b4:	b	42b63c <wcrtomb@plt+0x26a1c>
  42b6b8:	stp	x29, x30, [sp, #-64]!
  42b6bc:	mov	x29, sp
  42b6c0:	stp	x19, x20, [sp, #16]
  42b6c4:	ldr	x19, [x0, #208]
  42b6c8:	cbz	x19, 42b778 <wcrtomb@plt+0x26b58>
  42b6cc:	mov	w20, #0x0                   	// #0
  42b6d0:	stp	x21, x22, [sp, #32]
  42b6d4:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42b6d8:	mov	x21, x0
  42b6dc:	add	x22, x22, #0xb98
  42b6e0:	str	x23, [sp, #48]
  42b6e4:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42b6e8:	add	x23, x23, #0xbb8
  42b6ec:	b	42b720 <wcrtomb@plt+0x26b00>
  42b6f0:	bl	42b628 <wcrtomb@plt+0x26a08>
  42b6f4:	mov	x5, x0
  42b6f8:	ldr	x6, [x19, #24]
  42b6fc:	mov	x3, x19
  42b700:	mov	w2, w20
  42b704:	mov	w4, w8
  42b708:	mov	w1, w10
  42b70c:	mov	x0, x22
  42b710:	blr	x9
  42b714:	add	w20, w20, #0x1
  42b718:	ldr	x19, [x19, #8]
  42b71c:	cbz	x19, 42b770 <wcrtomb@plt+0x26b50>
  42b720:	ldr	w8, [x19, #16]
  42b724:	ldr	w10, [x21, #224]
  42b728:	mov	w0, w8
  42b72c:	ldr	x9, [x21, #104]
  42b730:	tbnz	w8, #1, 42b6f0 <wcrtomb@plt+0x26ad0>
  42b734:	bl	42b628 <wcrtomb@plt+0x26a08>
  42b738:	mov	x5, x0
  42b73c:	ldp	x7, x6, [x19, #24]
  42b740:	mov	x3, x19
  42b744:	ldr	x0, [x21, #168]
  42b748:	mov	w2, w20
  42b74c:	mov	w4, w8
  42b750:	mov	w1, w10
  42b754:	add	w20, w20, #0x1
  42b758:	sub	w6, w6, w7
  42b75c:	add	x7, x0, x7
  42b760:	mov	x0, x23
  42b764:	blr	x9
  42b768:	ldr	x19, [x19, #8]
  42b76c:	cbnz	x19, 42b720 <wcrtomb@plt+0x26b00>
  42b770:	ldp	x21, x22, [sp, #32]
  42b774:	ldr	x23, [sp, #48]
  42b778:	ldp	x19, x20, [sp, #16]
  42b77c:	ldp	x29, x30, [sp], #64
  42b780:	ret
  42b784:	nop
  42b788:	cmp	x1, x2
  42b78c:	mov	x6, #0x1                   	// #1
  42b790:	b.cs	42b7cc <wcrtomb@plt+0x26bac>  // b.hs, b.nlast
  42b794:	ldrb	w5, [x0, x1]
  42b798:	cmp	w5, #0x22
  42b79c:	b.eq	42b7d4 <wcrtomb@plt+0x26bb4>  // b.none
  42b7a0:	cmp	w5, #0x27
  42b7a4:	b.eq	42b820 <wcrtomb@plt+0x26c00>  // b.none
  42b7a8:	ldrb	w7, [x4]
  42b7ac:	cmp	w7, w5
  42b7b0:	b.eq	42b860 <wcrtomb@plt+0x26c40>  // b.none
  42b7b4:	ldrb	w7, [x4, #1]
  42b7b8:	cmp	w7, w5
  42b7bc:	b.eq	42b84c <wcrtomb@plt+0x26c2c>  // b.none
  42b7c0:	add	x1, x1, #0x1
  42b7c4:	cmp	x2, x1
  42b7c8:	b.hi	42b794 <wcrtomb@plt+0x26b74>  // b.pmore
  42b7cc:	mov	w0, #0x1                   	// #1
  42b7d0:	ret
  42b7d4:	add	x1, x1, #0x1
  42b7d8:	cmp	x2, x1
  42b7dc:	b.ls	42b7cc <wcrtomb@plt+0x26bac>  // b.plast
  42b7e0:	ldrb	w5, [x0, x1]
  42b7e4:	cmp	w5, #0x5c
  42b7e8:	b.eq	42b80c <wcrtomb@plt+0x26bec>  // b.none
  42b7ec:	add	x1, x1, #0x1
  42b7f0:	cmp	w5, #0x22
  42b7f4:	b.eq	42b7c4 <wcrtomb@plt+0x26ba4>  // b.none
  42b7f8:	cmp	x2, x1
  42b7fc:	b.ls	42b7cc <wcrtomb@plt+0x26bac>  // b.plast
  42b800:	ldrb	w5, [x0, x1]
  42b804:	cmp	w5, #0x5c
  42b808:	b.ne	42b7ec <wcrtomb@plt+0x26bcc>  // b.any
  42b80c:	add	x1, x1, #0x2
  42b810:	cmp	x2, x1
  42b814:	b.hi	42b7e0 <wcrtomb@plt+0x26bc0>  // b.pmore
  42b818:	mov	w0, #0x1                   	// #1
  42b81c:	b	42b7d0 <wcrtomb@plt+0x26bb0>
  42b820:	add	x1, x1, #0x1
  42b824:	cmp	x2, x1
  42b828:	b.ls	42b7cc <wcrtomb@plt+0x26bac>  // b.plast
  42b82c:	ldrb	w5, [x0, x1]
  42b830:	add	x1, x1, #0x1
  42b834:	cmp	w5, #0x27
  42b838:	b.eq	42b7c4 <wcrtomb@plt+0x26ba4>  // b.none
  42b83c:	cmp	x2, x1
  42b840:	b.hi	42b82c <wcrtomb@plt+0x26c0c>  // b.pmore
  42b844:	mov	w0, #0x1                   	// #1
  42b848:	b	42b7d0 <wcrtomb@plt+0x26bb0>
  42b84c:	subs	x6, x6, #0x1
  42b850:	b.ne	42b7c0 <wcrtomb@plt+0x26ba0>  // b.any
  42b854:	mov	w0, #0x0                   	// #0
  42b858:	str	x1, [x3]
  42b85c:	ret
  42b860:	add	x1, x1, #0x1
  42b864:	add	x6, x6, #0x1
  42b868:	cmp	x2, x1
  42b86c:	b.hi	42b794 <wcrtomb@plt+0x26b74>  // b.pmore
  42b870:	mov	w0, #0x1                   	// #1
  42b874:	b	42b7d0 <wcrtomb@plt+0x26bb0>
  42b878:	cmp	w0, #0x28
  42b87c:	cset	w0, eq  // eq = none
  42b880:	ret
  42b884:	nop
  42b888:	stp	x29, x30, [sp, #-32]!
  42b88c:	mov	x29, sp
  42b890:	str	x19, [sp, #16]
  42b894:	mov	x19, x0
  42b898:	ldr	w0, [x0, #16]
  42b89c:	tbnz	w0, #1, 42b8b0 <wcrtomb@plt+0x26c90>
  42b8a0:	mov	x0, x19
  42b8a4:	ldr	x19, [sp, #16]
  42b8a8:	ldp	x29, x30, [sp], #32
  42b8ac:	b	4047b0 <free@plt>
  42b8b0:	ldr	x0, [x19, #24]
  42b8b4:	bl	4047b0 <free@plt>
  42b8b8:	mov	x0, x19
  42b8bc:	ldr	x19, [sp, #16]
  42b8c0:	ldp	x29, x30, [sp], #32
  42b8c4:	b	4047b0 <free@plt>
  42b8c8:	stp	x29, x30, [sp, #-32]!
  42b8cc:	mov	x29, sp
  42b8d0:	stp	x19, x20, [sp, #16]
  42b8d4:	ldr	x19, [x0, #208]
  42b8d8:	cbz	x19, 42b930 <wcrtomb@plt+0x26d10>
  42b8dc:	mov	x20, x0
  42b8e0:	ldr	w1, [x19, #16]
  42b8e4:	mov	x0, x19
  42b8e8:	ldr	x19, [x19, #8]
  42b8ec:	tbz	w1, #6, 42b908 <wcrtomb@plt+0x26ce8>
  42b8f0:	ldr	x2, [x0]
  42b8f4:	cbz	x2, 42b908 <wcrtomb@plt+0x26ce8>
  42b8f8:	ldr	w1, [x2, #16]
  42b8fc:	and	w1, w1, #0xffffffef
  42b900:	str	w1, [x2, #16]
  42b904:	ldr	w1, [x0, #16]
  42b908:	tbz	w1, #0, 42b92c <wcrtomb@plt+0x26d0c>
  42b90c:	ldr	x1, [x0]
  42b910:	cbz	x1, 42b950 <wcrtomb@plt+0x26d30>
  42b914:	str	x19, [x1, #8]
  42b918:	ldr	x2, [x0, #8]
  42b91c:	cbz	x2, 42b93c <wcrtomb@plt+0x26d1c>
  42b920:	str	x1, [x2]
  42b924:	stp	xzr, xzr, [x0]
  42b928:	bl	42b888 <wcrtomb@plt+0x26c68>
  42b92c:	cbnz	x19, 42b8e0 <wcrtomb@plt+0x26cc0>
  42b930:	ldp	x19, x20, [sp, #16]
  42b934:	ldp	x29, x30, [sp], #32
  42b938:	ret
  42b93c:	ldr	w2, [x1, #16]
  42b940:	and	w2, w2, #0xffffffef
  42b944:	str	w2, [x1, #16]
  42b948:	str	x1, [x20, #216]
  42b94c:	b	42b924 <wcrtomb@plt+0x26d04>
  42b950:	str	x19, [x20, #208]
  42b954:	ldr	x2, [x0, #8]
  42b958:	cbnz	x2, 42b920 <wcrtomb@plt+0x26d00>
  42b95c:	str	x1, [x20, #216]
  42b960:	b	42b924 <wcrtomb@plt+0x26d04>
  42b964:	nop
  42b968:	stp	x29, x30, [sp, #-16]!
  42b96c:	mov	x29, sp
  42b970:	ldr	x2, [x0, #208]
  42b974:	cbz	x2, 42ba2c <wcrtomb@plt+0x26e0c>
  42b978:	ldr	w3, [x2, #16]
  42b97c:	tbnz	w3, #2, 42b990 <wcrtomb@plt+0x26d70>
  42b980:	b	42b9f0 <wcrtomb@plt+0x26dd0>
  42b984:	tbz	w3, #4, 42ba3c <wcrtomb@plt+0x26e1c>
  42b988:	ldr	w3, [x1, #16]
  42b98c:	mov	x2, x1
  42b990:	ldr	x1, [x2, #8]
  42b994:	cbnz	x1, 42b984 <wcrtomb@plt+0x26d64>
  42b998:	tbnz	w3, #2, 42ba2c <wcrtomb@plt+0x26e0c>
  42b99c:	ldp	x8, x5, [x2, #24]
  42b9a0:	b	42b9c4 <wcrtomb@plt+0x26da4>
  42b9a4:	ldr	x4, [x0, #168]
  42b9a8:	ldrb	w7, [x4, x6]
  42b9ac:	sub	w4, w7, #0x9
  42b9b0:	cmp	w7, #0x20
  42b9b4:	and	w4, w4, #0xff
  42b9b8:	ccmp	w4, #0x1, #0x0, ne  // ne = any
  42b9bc:	b.hi	42ba48 <wcrtomb@plt+0x26e28>  // b.pmore
  42b9c0:	mov	x5, x6
  42b9c4:	sub	x6, x5, #0x1
  42b9c8:	cmp	x8, x5
  42b9cc:	b.cc	42b9a4 <wcrtomb@plt+0x26d84>  // b.lo, b.ul, b.last
  42b9d0:	str	x5, [x2, #32]
  42b9d4:	b.ne	42b9e0 <wcrtomb@plt+0x26dc0>  // b.any
  42b9d8:	orr	w3, w3, #0x1
  42b9dc:	str	w3, [x2, #16]
  42b9e0:	cbz	x1, 42ba2c <wcrtomb@plt+0x26e0c>
  42b9e4:	mov	x2, x1
  42b9e8:	ldr	w3, [x2, #16]
  42b9ec:	tbnz	w3, #2, 42b990 <wcrtomb@plt+0x26d70>
  42b9f0:	ldp	x1, x6, [x2, #24]
  42b9f4:	cmp	x1, x6
  42b9f8:	b.cs	42ba54 <wcrtomb@plt+0x26e34>  // b.hs, b.nlast
  42b9fc:	ldr	x7, [x0, #168]
  42ba00:	ldrb	w5, [x7, x1]
  42ba04:	sub	w4, w5, #0x9
  42ba08:	cmp	w5, #0x20
  42ba0c:	and	w4, w4, #0xff
  42ba10:	ccmp	w4, #0x1, #0x0, ne  // ne = any
  42ba14:	b.hi	42ba54 <wcrtomb@plt+0x26e34>  // b.pmore
  42ba18:	add	x1, x1, #0x1
  42ba1c:	cmp	x1, x6
  42ba20:	b.ne	42ba00 <wcrtomb@plt+0x26de0>  // b.any
  42ba24:	str	x6, [x2, #24]
  42ba28:	b	42b990 <wcrtomb@plt+0x26d70>
  42ba2c:	bl	42b8c8 <wcrtomb@plt+0x26ca8>
  42ba30:	mov	w0, #0x0                   	// #0
  42ba34:	ldp	x29, x30, [sp], #16
  42ba38:	ret
  42ba3c:	tbz	w3, #2, 42b99c <wcrtomb@plt+0x26d7c>
  42ba40:	mov	x2, x1
  42ba44:	b	42b9e8 <wcrtomb@plt+0x26dc8>
  42ba48:	str	x5, [x2, #32]
  42ba4c:	cbnz	x1, 42b9e4 <wcrtomb@plt+0x26dc4>
  42ba50:	b	42ba2c <wcrtomb@plt+0x26e0c>
  42ba54:	mov	x6, x1
  42ba58:	str	x6, [x2, #24]
  42ba5c:	b	42b990 <wcrtomb@plt+0x26d70>
  42ba60:	stp	x29, x30, [sp, #-320]!
  42ba64:	mov	w9, #0xffffffc8            	// #-56
  42ba68:	mov	w8, #0xffffff80            	// #-128
  42ba6c:	mov	x29, sp
  42ba70:	add	x10, sp, #0x100
  42ba74:	add	x11, sp, #0x140
  42ba78:	stp	x11, x11, [sp, #64]
  42ba7c:	mov	x12, x0
  42ba80:	str	x10, [sp, #80]
  42ba84:	stp	w9, w8, [sp, #88]
  42ba88:	str	x19, [sp, #16]
  42ba8c:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42ba90:	ldp	x10, x11, [sp, #64]
  42ba94:	stp	x10, x11, [sp, #32]
  42ba98:	ldp	x8, x9, [sp, #80]
  42ba9c:	stp	x8, x9, [sp, #48]
  42baa0:	ldr	x0, [x19, #1096]
  42baa4:	stp	x10, x11, [sp, #96]
  42baa8:	stp	x8, x9, [sp, #112]
  42baac:	str	q0, [sp, #128]
  42bab0:	str	q1, [sp, #144]
  42bab4:	str	q2, [sp, #160]
  42bab8:	str	q3, [sp, #176]
  42babc:	str	q4, [sp, #192]
  42bac0:	str	q5, [sp, #208]
  42bac4:	str	q6, [sp, #224]
  42bac8:	str	q7, [sp, #240]
  42bacc:	stp	x1, x2, [sp, #264]
  42bad0:	mov	x2, x12
  42bad4:	mov	w1, #0x1                   	// #1
  42bad8:	stp	x3, x4, [sp, #280]
  42badc:	add	x3, sp, #0x20
  42bae0:	stp	x5, x6, [sp, #296]
  42bae4:	str	x7, [sp, #312]
  42bae8:	bl	4044a0 <__vfprintf_chk@plt>
  42baec:	ldr	x1, [x19, #1096]
  42baf0:	mov	w0, #0xa                   	// #10
  42baf4:	bl	404170 <fputc@plt>
  42baf8:	ldr	x19, [sp, #16]
  42bafc:	ldp	x29, x30, [sp], #320
  42bb00:	ret
  42bb04:	nop
  42bb08:	stp	x29, x30, [sp, #-32]!
  42bb0c:	mov	x3, x0
  42bb10:	mov	w2, #0x5                   	// #5
  42bb14:	mov	x29, sp
  42bb18:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  42bb1c:	mov	x0, #0x0                   	// #0
  42bb20:	add	x1, x1, #0xdc8
  42bb24:	str	x19, [sp, #16]
  42bb28:	ldr	x19, [x3, #96]
  42bb2c:	bl	4049c0 <dcgettext@plt>
  42bb30:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  42bb34:	mov	x1, x0
  42bb38:	add	x0, x2, #0xb68
  42bb3c:	blr	x19
  42bb40:	bl	404650 <abort@plt>
  42bb44:	nop
  42bb48:	stp	x29, x30, [sp, #-80]!
  42bb4c:	mov	x29, sp
  42bb50:	stp	x19, x20, [sp, #16]
  42bb54:	mov	x20, x1
  42bb58:	stp	x21, x22, [sp, #32]
  42bb5c:	mov	w22, w2
  42bb60:	mov	w21, #0x0                   	// #0
  42bb64:	stp	x23, x24, [sp, #48]
  42bb68:	mov	x23, x0
  42bb6c:	mov	w24, w3
  42bb70:	stp	x25, x26, [sp, #64]
  42bb74:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42bb78:	mov	w25, #0x0                   	// #0
  42bb7c:	add	x26, x26, #0xbe0
  42bb80:	b	42bbb0 <wcrtomb@plt+0x26f90>
  42bb84:	bl	404540 <__ctype_toupper_loc@plt>
  42bb88:	ldr	x0, [x0]
  42bb8c:	ldr	w4, [x0, x19, lsl #2]
  42bb90:	sub	w4, w4, #0x37
  42bb94:	cmp	w4, w22
  42bb98:	b.ge	42bbd8 <wcrtomb@plt+0x26fb8>  // b.tcont
  42bb9c:	add	w21, w21, #0x1
  42bba0:	madd	w25, w22, w25, w4
  42bba4:	cmp	w24, w21
  42bba8:	add	x20, x20, #0x1
  42bbac:	b.eq	42bbd8 <wcrtomb@plt+0x26fb8>  // b.none
  42bbb0:	ldrb	w19, [x20]
  42bbb4:	mov	x0, x26
  42bbb8:	sub	w4, w19, #0x30
  42bbbc:	cmp	w19, #0x7f
  42bbc0:	b.gt	42bbd8 <wcrtomb@plt+0x26fb8>
  42bbc4:	cmp	w4, #0x9
  42bbc8:	b.ls	42bb94 <wcrtomb@plt+0x26f74>  // b.plast
  42bbcc:	mov	w1, w19
  42bbd0:	bl	404870 <strchr@plt>
  42bbd4:	cbnz	x0, 42bb84 <wcrtomb@plt+0x26f64>
  42bbd8:	mov	w0, w21
  42bbdc:	ldp	x19, x20, [sp, #16]
  42bbe0:	ldp	x21, x22, [sp, #32]
  42bbe4:	str	w25, [x23]
  42bbe8:	ldp	x23, x24, [sp, #48]
  42bbec:	ldp	x25, x26, [sp, #64]
  42bbf0:	ldp	x29, x30, [sp], #80
  42bbf4:	ret
  42bbf8:	sub	w3, w0, #0x41
  42bbfc:	sub	w2, w0, #0x61
  42bc00:	cmp	w3, #0x19
  42bc04:	mov	w1, #0x5f                  	// #95
  42bc08:	ccmp	w2, #0x1a, #0x0, hi  // hi = pmore
  42bc0c:	ccmp	w0, w1, #0x4, hi  // hi = pmore
  42bc10:	cset	w0, eq  // eq = none
  42bc14:	ret
  42bc18:	ldr	w2, [x0, #16]
  42bc1c:	mov	x1, x0
  42bc20:	tbnz	w2, #0, 42bc3c <wcrtomb@plt+0x2701c>
  42bc24:	ldr	x0, [x0, #24]
  42bc28:	tbz	w2, #1, 42bc30 <wcrtomb@plt+0x27010>
  42bc2c:	b	403ff0 <strlen@plt>
  42bc30:	ldr	x1, [x1, #32]
  42bc34:	sub	x0, x1, x0
  42bc38:	ret
  42bc3c:	mov	x0, #0x0                   	// #0
  42bc40:	ret
  42bc44:	nop
  42bc48:	stp	x29, x30, [sp, #-32]!
  42bc4c:	mov	x29, sp
  42bc50:	ldr	x1, [x0, #120]
  42bc54:	stp	x19, x20, [sp, #16]
  42bc58:	mov	x20, x0
  42bc5c:	ldr	x0, [x1]
  42bc60:	cbz	x0, 42bc7c <wcrtomb@plt+0x2705c>
  42bc64:	mov	x19, #0x8                   	// #8
  42bc68:	bl	4047b0 <free@plt>
  42bc6c:	ldr	x1, [x20, #120]
  42bc70:	ldr	x0, [x1, x19]
  42bc74:	add	x19, x19, #0x8
  42bc78:	cbnz	x0, 42bc68 <wcrtomb@plt+0x27048>
  42bc7c:	mov	x0, x1
  42bc80:	bl	4047b0 <free@plt>
  42bc84:	stp	xzr, xzr, [x20, #120]
  42bc88:	str	xzr, [x20, #136]
  42bc8c:	ldp	x19, x20, [sp, #16]
  42bc90:	ldp	x29, x30, [sp], #32
  42bc94:	ret
  42bc98:	ldr	x4, [x0, #208]
  42bc9c:	mov	x3, x1
  42bca0:	cbz	x4, 42bcb8 <wcrtomb@plt+0x27098>
  42bca4:	cbz	x3, 42bcc4 <wcrtomb@plt+0x270a4>
  42bca8:	ldr	x4, [x3, #8]
  42bcac:	cbz	x4, 42bcc4 <wcrtomb@plt+0x270a4>
  42bcb0:	mov	x3, x4
  42bcb4:	b	42bca4 <wcrtomb@plt+0x27084>
  42bcb8:	stp	xzr, xzr, [x1]
  42bcbc:	stp	x1, x1, [x0, #208]
  42bcc0:	ret
  42bcc4:	ldr	x4, [x2, #8]
  42bcc8:	cbz	x4, 42bce0 <wcrtomb@plt+0x270c0>
  42bccc:	str	x3, [x4]
  42bcd0:	str	x4, [x3, #8]
  42bcd4:	str	x2, [x1]
  42bcd8:	str	x1, [x2, #8]
  42bcdc:	ret
  42bce0:	str	x3, [x0, #216]
  42bce4:	b	42bcd0 <wcrtomb@plt+0x270b0>
  42bce8:	stp	x29, x30, [sp, #-80]!
  42bcec:	mov	x29, sp
  42bcf0:	str	wzr, [x2]
  42bcf4:	stp	x19, x20, [sp, #16]
  42bcf8:	stp	x23, x24, [sp, #48]
  42bcfc:	mov	w24, w1
  42bd00:	ldrb	w1, [x0]
  42bd04:	cbz	w1, 42bde0 <wcrtomb@plt+0x271c0>
  42bd08:	mov	x19, x0
  42bd0c:	mov	x20, #0x0                   	// #0
  42bd10:	mov	w23, #0x1                   	// #1
  42bd14:	stp	x21, x22, [sp, #32]
  42bd18:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42bd1c:	mov	x22, x2
  42bd20:	add	x21, x21, #0xbf0
  42bd24:	stp	x25, x26, [sp, #64]
  42bd28:	adrp	x26, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42bd2c:	mov	w25, #0x5c                  	// #92
  42bd30:	add	x26, x26, #0x260
  42bd34:	b	42bd64 <wcrtomb@plt+0x27144>
  42bd38:	cmp	w3, #0x22
  42bd3c:	b.eq	42bda8 <wcrtomb@plt+0x27188>  // b.none
  42bd40:	sub	w0, w3, #0x20
  42bd44:	and	w0, w0, #0xff
  42bd48:	cmp	w0, #0x5f
  42bd4c:	ccmp	w3, w25, #0x4, ls  // ls = plast
  42bd50:	b.ne	42bd80 <wcrtomb@plt+0x27160>  // b.any
  42bd54:	cbz	w24, 42bdb0 <wcrtomb@plt+0x27190>
  42bd58:	add	x20, x20, #0x3
  42bd5c:	ldrb	w1, [x19, #1]!
  42bd60:	cbz	w1, 42bd8c <wcrtomb@plt+0x2716c>
  42bd64:	mov	x0, x21
  42bd68:	bl	404870 <strchr@plt>
  42bd6c:	cbz	x0, 42bd74 <wcrtomb@plt+0x27154>
  42bd70:	str	w23, [x22]
  42bd74:	ldrb	w3, [x19]
  42bd78:	cmp	w3, #0x20
  42bd7c:	b.ne	42bd38 <wcrtomb@plt+0x27118>  // b.any
  42bd80:	ldrb	w1, [x19, #1]!
  42bd84:	add	x20, x20, #0x1
  42bd88:	cbnz	w1, 42bd64 <wcrtomb@plt+0x27144>
  42bd8c:	mov	x0, x20
  42bd90:	ldp	x19, x20, [sp, #16]
  42bd94:	ldp	x21, x22, [sp, #32]
  42bd98:	ldp	x23, x24, [sp, #48]
  42bd9c:	ldp	x25, x26, [sp, #64]
  42bda0:	ldp	x29, x30, [sp], #80
  42bda4:	ret
  42bda8:	add	x20, x20, #0x2
  42bdac:	b	42bd5c <wcrtomb@plt+0x2713c>
  42bdb0:	ldrb	w0, [x26]
  42bdb4:	mov	x1, x26
  42bdb8:	cbnz	w0, 42bdcc <wcrtomb@plt+0x271ac>
  42bdbc:	b	42bdd8 <wcrtomb@plt+0x271b8>
  42bdc0:	b.eq	42bda8 <wcrtomb@plt+0x27188>  // b.none
  42bdc4:	ldrb	w0, [x1, #2]!
  42bdc8:	cbz	w0, 42bdd8 <wcrtomb@plt+0x271b8>
  42bdcc:	ldrb	w0, [x1, #1]
  42bdd0:	cmp	w3, w0
  42bdd4:	cbnz	w0, 42bdc0 <wcrtomb@plt+0x271a0>
  42bdd8:	add	x20, x20, #0x4
  42bddc:	b	42bd5c <wcrtomb@plt+0x2713c>
  42bde0:	mov	x20, #0x0                   	// #0
  42bde4:	mov	x0, x20
  42bde8:	ldp	x19, x20, [sp, #16]
  42bdec:	ldp	x23, x24, [sp, #48]
  42bdf0:	ldp	x29, x30, [sp], #80
  42bdf4:	ret
  42bdf8:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42bdfc:	add	x2, x1, #0x260
  42be00:	ldrb	w1, [x1, #608]
  42be04:	cbnz	w1, 42be18 <wcrtomb@plt+0x271f8>
  42be08:	b	42be24 <wcrtomb@plt+0x27204>
  42be0c:	b.eq	42be2c <wcrtomb@plt+0x2720c>  // b.none
  42be10:	ldrb	w1, [x2, #2]!
  42be14:	cbz	w1, 42be24 <wcrtomb@plt+0x27204>
  42be18:	ldrb	w3, [x2, #1]
  42be1c:	cmp	w0, w1
  42be20:	cbnz	w3, 42be0c <wcrtomb@plt+0x271ec>
  42be24:	mov	w0, #0x0                   	// #0
  42be28:	ret
  42be2c:	mov	w0, w3
  42be30:	ret
  42be34:	nop
  42be38:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42be3c:	add	x2, x1, #0x260
  42be40:	ldrb	w3, [x1, #608]
  42be44:	cbnz	w3, 42be58 <wcrtomb@plt+0x27238>
  42be48:	b	42be64 <wcrtomb@plt+0x27244>
  42be4c:	b.eq	42be6c <wcrtomb@plt+0x2724c>  // b.none
  42be50:	ldrb	w3, [x2, #2]!
  42be54:	cbz	w3, 42be64 <wcrtomb@plt+0x27244>
  42be58:	ldrb	w1, [x2, #1]
  42be5c:	cmp	w0, w1
  42be60:	cbnz	w1, 42be4c <wcrtomb@plt+0x2722c>
  42be64:	mov	w0, #0x0                   	// #0
  42be68:	ret
  42be6c:	mov	w0, w3
  42be70:	ret
  42be74:	nop
  42be78:	ldrb	w5, [x1]
  42be7c:	cbz	w5, 42bfcc <wcrtomb@plt+0x273ac>
  42be80:	stp	x29, x30, [sp, #-80]!
  42be84:	mov	x29, sp
  42be88:	stp	x19, x20, [sp, #16]
  42be8c:	mov	x19, x0
  42be90:	mov	w20, w2
  42be94:	stp	x21, x22, [sp, #32]
  42be98:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42be9c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42bea0:	add	x22, x22, #0xbf8
  42bea4:	add	x21, x21, #0x260
  42bea8:	stp	x23, x24, [sp, #48]
  42beac:	mov	x23, x1
  42beb0:	b	42bed8 <wcrtomb@plt+0x272b8>
  42beb4:	sub	w0, w5, #0x20
  42beb8:	mov	w2, #0x5c                  	// #92
  42bebc:	and	w0, w0, #0xff
  42bec0:	cmp	w0, #0x5f
  42bec4:	ccmp	w5, w2, #0x4, ls  // ls = plast
  42bec8:	b.eq	42bf14 <wcrtomb@plt+0x272f4>  // b.none
  42becc:	strb	w5, [x19], #1
  42bed0:	ldrb	w5, [x23, #1]!
  42bed4:	cbz	w5, 42bf00 <wcrtomb@plt+0x272e0>
  42bed8:	cmp	w5, #0x22
  42bedc:	b.ne	42beb4 <wcrtomb@plt+0x27294>  // b.any
  42bee0:	mov	x0, x19
  42bee4:	mov	w1, #0x5c                  	// #92
  42bee8:	strb	w1, [x0], #2
  42beec:	ldrb	w1, [x23]
  42bef0:	strb	w1, [x19, #1]
  42bef4:	mov	x19, x0
  42bef8:	ldrb	w5, [x23, #1]!
  42befc:	cbnz	w5, 42bed8 <wcrtomb@plt+0x272b8>
  42bf00:	ldp	x19, x20, [sp, #16]
  42bf04:	ldp	x21, x22, [sp, #32]
  42bf08:	ldp	x23, x24, [sp, #48]
  42bf0c:	ldp	x29, x30, [sp], #80
  42bf10:	ret
  42bf14:	cbz	w20, 42bf48 <wcrtomb@plt+0x27328>
  42bf18:	mov	x3, #0x4                   	// #4
  42bf1c:	mov	x4, x22
  42bf20:	mov	x1, x3
  42bf24:	add	x0, sp, #0x48
  42bf28:	mov	w2, #0x1                   	// #1
  42bf2c:	bl	404290 <__snprintf_chk@plt>
  42bf30:	ldrh	w1, [sp, #72]
  42bf34:	add	x19, x19, #0x3
  42bf38:	ldrb	w0, [sp, #74]
  42bf3c:	sturh	w1, [x19, #-3]
  42bf40:	sturb	w0, [x19, #-1]
  42bf44:	b	42bed0 <wcrtomb@plt+0x272b0>
  42bf48:	ldrb	w0, [x21]
  42bf4c:	mov	x4, x21
  42bf50:	cbnz	w0, 42bf64 <wcrtomb@plt+0x27344>
  42bf54:	b	42bf70 <wcrtomb@plt+0x27350>
  42bf58:	b.eq	42bfb4 <wcrtomb@plt+0x27394>  // b.none
  42bf5c:	ldrb	w0, [x4, #2]!
  42bf60:	cbz	w0, 42bf70 <wcrtomb@plt+0x27350>
  42bf64:	ldrb	w3, [x4, #1]
  42bf68:	cmp	w3, w5
  42bf6c:	cbnz	w3, 42bf58 <wcrtomb@plt+0x27338>
  42bf70:	mov	x24, x19
  42bf74:	mov	w0, #0x5c                  	// #92
  42bf78:	mov	x3, #0x4                   	// #4
  42bf7c:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42bf80:	mov	x1, x3
  42bf84:	add	x4, x4, #0xc00
  42bf88:	strb	w0, [x24], #1
  42bf8c:	mov	w2, #0x1                   	// #1
  42bf90:	add	x0, sp, #0x48
  42bf94:	add	x19, x19, #0x4
  42bf98:	ldrb	w5, [x23]
  42bf9c:	bl	404290 <__snprintf_chk@plt>
  42bfa0:	ldrh	w0, [sp, #72]
  42bfa4:	sturh	w0, [x19, #-3]
  42bfa8:	ldrb	w0, [sp, #74]
  42bfac:	strb	w0, [x24, #2]
  42bfb0:	b	42bed0 <wcrtomb@plt+0x272b0>
  42bfb4:	mov	x1, x19
  42bfb8:	mov	w2, #0x5c                  	// #92
  42bfbc:	strb	w2, [x1], #2
  42bfc0:	strb	w0, [x19, #1]
  42bfc4:	mov	x19, x1
  42bfc8:	b	42bed0 <wcrtomb@plt+0x272b0>
  42bfcc:	ret
  42bfd0:	stp	x29, x30, [sp, #-32]!
  42bfd4:	mov	x29, sp
  42bfd8:	ldr	x3, [x0]
  42bfdc:	stp	x19, x20, [sp, #16]
  42bfe0:	mov	x20, x0
  42bfe4:	cbz	x3, 42c01c <wcrtomb@plt+0x273fc>
  42bfe8:	ldp	x2, x1, [x0, #8]
  42bfec:	mov	x19, #0x0                   	// #0
  42bff0:	add	x0, x19, x1
  42bff4:	ldr	x0, [x2, x0, lsl #3]
  42bff8:	cbz	x0, 42c010 <wcrtomb@plt+0x273f0>
  42bffc:	bl	4047b0 <free@plt>
  42c000:	ldp	x3, x2, [x20]
  42c004:	ldr	x1, [x20, #16]
  42c008:	add	x0, x19, x1
  42c00c:	str	xzr, [x2, x0, lsl #3]
  42c010:	add	x19, x19, #0x1
  42c014:	cmp	x3, x19
  42c018:	b.hi	42bff0 <wcrtomb@plt+0x273d0>  // b.pmore
  42c01c:	str	xzr, [x20]
  42c020:	ldp	x19, x20, [sp, #16]
  42c024:	ldp	x29, x30, [sp], #32
  42c028:	ret
  42c02c:	nop
  42c030:	stp	x29, x30, [sp, #-32]!
  42c034:	mov	x29, sp
  42c038:	ldr	w1, [x0, #32]
  42c03c:	str	x19, [sp, #16]
  42c040:	mov	x19, x0
  42c044:	tbz	w1, #3, 42c06c <wcrtomb@plt+0x2744c>
  42c048:	tbz	w1, #0, 42c084 <wcrtomb@plt+0x27464>
  42c04c:	ldr	w0, [x19, #192]
  42c050:	cmp	w0, #0x9
  42c054:	b.eq	42c094 <wcrtomb@plt+0x27474>  // b.none
  42c058:	str	wzr, [x19, #192]
  42c05c:	str	xzr, [x19, #200]
  42c060:	ldr	x19, [sp, #16]
  42c064:	ldp	x29, x30, [sp], #32
  42c068:	ret
  42c06c:	stp	xzr, xzr, [x0]
  42c070:	str	xzr, [x0, #24]
  42c074:	str	wzr, [x19, #192]
  42c078:	ldr	x19, [sp, #16]
  42c07c:	ldp	x29, x30, [sp], #32
  42c080:	ret
  42c084:	bl	42bfd0 <wcrtomb@plt+0x273b0>
  42c088:	ldr	w0, [x19, #192]
  42c08c:	cmp	w0, #0x9
  42c090:	b.ne	42c058 <wcrtomb@plt+0x27438>  // b.any
  42c094:	ldr	x0, [x19, #200]
  42c098:	bl	4047b0 <free@plt>
  42c09c:	b	42c058 <wcrtomb@plt+0x27438>
  42c0a0:	ldr	w2, [x0, #32]
  42c0a4:	tbnz	w2, #2, 42c0b4 <wcrtomb@plt+0x27494>
  42c0a8:	ldr	x1, [x0, #120]
  42c0ac:	cbz	x1, 42c0b4 <wcrtomb@plt+0x27494>
  42c0b0:	b	42bc48 <wcrtomb@plt+0x27028>
  42c0b4:	ret
  42c0b8:	stp	x29, x30, [sp, #-32]!
  42c0bc:	mov	x29, sp
  42c0c0:	str	x19, [sp, #16]
  42c0c4:	mov	x19, x0
  42c0c8:	ldr	w0, [x0, #192]
  42c0cc:	cmp	w0, #0x9
  42c0d0:	b.eq	42c0e8 <wcrtomb@plt+0x274c8>  // b.none
  42c0d4:	str	wzr, [x19, #192]
  42c0d8:	str	xzr, [x19, #200]
  42c0dc:	ldr	x19, [sp, #16]
  42c0e0:	ldp	x29, x30, [sp], #32
  42c0e4:	ret
  42c0e8:	ldr	x0, [x19, #200]
  42c0ec:	bl	4047b0 <free@plt>
  42c0f0:	str	wzr, [x19, #192]
  42c0f4:	str	xzr, [x19, #200]
  42c0f8:	ldr	x19, [sp, #16]
  42c0fc:	ldp	x29, x30, [sp], #32
  42c100:	ret
  42c104:	nop
  42c108:	stp	x29, x30, [sp, #-32]!
  42c10c:	mov	x29, sp
  42c110:	stp	x19, x20, [sp, #16]
  42c114:	mov	x20, x0
  42c118:	ldr	x19, [x0, #208]
  42c11c:	cbz	x19, 42c130 <wcrtomb@plt+0x27510>
  42c120:	mov	x0, x19
  42c124:	ldr	x19, [x19, #8]
  42c128:	bl	42b888 <wcrtomb@plt+0x26c68>
  42c12c:	cbnz	x19, 42c120 <wcrtomb@plt+0x27500>
  42c130:	stp	xzr, xzr, [x20, #208]
  42c134:	mov	x0, x20
  42c138:	bl	42bfd0 <wcrtomb@plt+0x273b0>
  42c13c:	ldr	x0, [x20, #8]
  42c140:	bl	4047b0 <free@plt>
  42c144:	str	xzr, [x20, #8]
  42c148:	ldr	w0, [x20, #32]
  42c14c:	tbnz	w0, #2, 42c168 <wcrtomb@plt+0x27548>
  42c150:	ldr	x0, [x20, #120]
  42c154:	cbz	x0, 42c168 <wcrtomb@plt+0x27548>
  42c158:	mov	x0, x20
  42c15c:	ldp	x19, x20, [sp, #16]
  42c160:	ldp	x29, x30, [sp], #32
  42c164:	b	42bc48 <wcrtomb@plt+0x27028>
  42c168:	ldp	x19, x20, [sp, #16]
  42c16c:	ldp	x29, x30, [sp], #32
  42c170:	ret
  42c174:	nop
  42c178:	stp	x29, x30, [sp, #-48]!
  42c17c:	mov	x29, sp
  42c180:	stp	x19, x20, [sp, #16]
  42c184:	mov	x19, x0
  42c188:	mov	x20, x1
  42c18c:	ldp	x3, x0, [x0]
  42c190:	str	x21, [sp, #32]
  42c194:	mov	x21, x2
  42c198:	add	x3, x3, #0x1
  42c19c:	lsl	x1, x3, #3
  42c1a0:	bl	404530 <realloc@plt>
  42c1a4:	cbz	x0, 42c1d0 <wcrtomb@plt+0x275b0>
  42c1a8:	ldr	x1, [x19]
  42c1ac:	str	x0, [x21]
  42c1b0:	str	x1, [x20]
  42c1b4:	mov	w0, #0x0                   	// #0
  42c1b8:	stp	xzr, xzr, [x19]
  42c1bc:	str	xzr, [x19, #24]
  42c1c0:	ldp	x19, x20, [sp, #16]
  42c1c4:	ldr	x21, [sp, #32]
  42c1c8:	ldp	x29, x30, [sp], #48
  42c1cc:	ret
  42c1d0:	mov	w0, #0xffffffff            	// #-1
  42c1d4:	b	42c1c0 <wcrtomb@plt+0x275a0>
  42c1d8:	ldr	w2, [x0, #192]
  42c1dc:	cmp	w2, #0x9
  42c1e0:	b.eq	42c210 <wcrtomb@plt+0x275f0>  // b.none
  42c1e4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42c1e8:	add	x1, x1, #0x260
  42c1ec:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42c1f0:	add	x0, x0, #0xc08
  42c1f4:	ldr	w3, [x1, #20]
  42c1f8:	cmp	w2, w3
  42c1fc:	b.lt	42c204 <wcrtomb@plt+0x275e4>  // b.tstop
  42c200:	ret
  42c204:	add	x1, x1, #0x18
  42c208:	ldr	x0, [x1, w2, sxtw #3]
  42c20c:	ret
  42c210:	ldr	x0, [x0, #200]
  42c214:	ret
  42c218:	stp	x29, x30, [sp, #-32]!
  42c21c:	mov	x29, sp
  42c220:	stp	x19, x20, [sp, #16]
  42c224:	mov	x19, x0
  42c228:	ldr	w0, [x0, #192]
  42c22c:	cmp	w0, #0x1
  42c230:	ldr	x20, [x19, #96]
  42c234:	b.eq	42c294 <wcrtomb@plt+0x27674>  // b.none
  42c238:	cmp	w0, #0x9
  42c23c:	b.eq	42c2c4 <wcrtomb@plt+0x276a4>  // b.none
  42c240:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42c244:	add	x2, x2, #0x260
  42c248:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42c24c:	add	x1, x1, #0xc08
  42c250:	ldr	w3, [x2, #20]
  42c254:	cmp	w0, w3
  42c258:	b.lt	42c274 <wcrtomb@plt+0x27654>  // b.tstop
  42c25c:	mov	x16, x20
  42c260:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  42c264:	ldp	x19, x20, [sp, #16]
  42c268:	add	x0, x0, #0xb68
  42c26c:	ldp	x29, x30, [sp], #32
  42c270:	br	x16
  42c274:	add	x2, x2, #0x18
  42c278:	mov	x16, x20
  42c27c:	ldp	x19, x20, [sp, #16]
  42c280:	ldp	x29, x30, [sp], #32
  42c284:	ldr	x1, [x2, w0, sxtw #3]
  42c288:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  42c28c:	add	x0, x0, #0xb68
  42c290:	br	x16
  42c294:	mov	w2, #0x5                   	// #5
  42c298:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42c29c:	mov	x0, #0x0                   	// #0
  42c2a0:	add	x1, x1, #0xc18
  42c2a4:	bl	4049c0 <dcgettext@plt>
  42c2a8:	ldr	x1, [x19, #168]
  42c2ac:	mov	x16, x20
  42c2b0:	ldr	x2, [x19, #184]
  42c2b4:	ldp	x19, x20, [sp, #16]
  42c2b8:	ldp	x29, x30, [sp], #32
  42c2bc:	ldrb	w1, [x1, x2]
  42c2c0:	br	x16
  42c2c4:	mov	x16, x20
  42c2c8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  42c2cc:	ldr	x1, [x19, #200]
  42c2d0:	add	x0, x0, #0xb68
  42c2d4:	ldp	x19, x20, [sp, #16]
  42c2d8:	ldp	x29, x30, [sp], #32
  42c2dc:	br	x16
  42c2e0:	stp	x29, x30, [sp, #-32]!
  42c2e4:	mov	x29, sp
  42c2e8:	stp	x19, x20, [sp, #16]
  42c2ec:	mov	x20, x0
  42c2f0:	bl	404ad0 <__errno_location@plt>
  42c2f4:	mov	w2, #0xc                   	// #12
  42c2f8:	str	w2, [x0]
  42c2fc:	mov	w1, #0x2                   	// #2
  42c300:	str	w1, [x20, #192]
  42c304:	ldr	w0, [x20, #32]
  42c308:	tbz	w0, #7, 42c31c <wcrtomb@plt+0x276fc>
  42c30c:	ldr	x1, [x20, #88]
  42c310:	mov	x0, x20
  42c314:	blr	x1
  42c318:	ldr	w0, [x20, #32]
  42c31c:	tbnz	w0, #4, 42c354 <wcrtomb@plt+0x27734>
  42c320:	tbz	w0, #3, 42c364 <wcrtomb@plt+0x27744>
  42c324:	ldr	x19, [x20, #208]
  42c328:	cbz	x19, 42c340 <wcrtomb@plt+0x27720>
  42c32c:	nop
  42c330:	mov	x0, x19
  42c334:	ldr	x19, [x19, #8]
  42c338:	bl	42b888 <wcrtomb@plt+0x26c68>
  42c33c:	cbnz	x19, 42c330 <wcrtomb@plt+0x27710>
  42c340:	stp	xzr, xzr, [x20, #208]
  42c344:	ldr	w0, [x20, #192]
  42c348:	ldp	x19, x20, [sp, #16]
  42c34c:	ldp	x29, x30, [sp], #32
  42c350:	ret
  42c354:	mov	x0, x20
  42c358:	bl	42c218 <wcrtomb@plt+0x275f8>
  42c35c:	ldr	w0, [x20, #32]
  42c360:	tbnz	w0, #3, 42c324 <wcrtomb@plt+0x27704>
  42c364:	mov	x0, x20
  42c368:	bl	42c108 <wcrtomb@plt+0x274e8>
  42c36c:	b	42c324 <wcrtomb@plt+0x27704>
  42c370:	stp	x29, x30, [sp, #-32]!
  42c374:	mov	x29, sp
  42c378:	stp	x19, x20, [sp, #16]
  42c37c:	mov	x19, x0
  42c380:	ldr	w0, [x0, #32]
  42c384:	mov	x20, x1
  42c388:	mov	x1, #0x0                   	// #0
  42c38c:	tbz	w0, #1, 42c394 <wcrtomb@plt+0x27774>
  42c390:	ldr	x1, [x19, #16]
  42c394:	ldr	x0, [x19, #8]
  42c398:	cbz	x0, 42c3f8 <wcrtomb@plt+0x277d8>
  42c39c:	ldr	x2, [x19]
  42c3a0:	ldr	x3, [x19, #24]
  42c3a4:	add	x1, x1, x2
  42c3a8:	add	x2, x1, x20
  42c3ac:	cmp	x3, x2
  42c3b0:	b.cc	42c3c4 <wcrtomb@plt+0x277a4>  // b.lo, b.ul, b.last
  42c3b4:	mov	w0, #0x0                   	// #0
  42c3b8:	ldp	x19, x20, [sp, #16]
  42c3bc:	ldp	x29, x30, [sp], #32
  42c3c0:	ret
  42c3c4:	cmp	x20, #0x80
  42c3c8:	mov	x2, #0x80                  	// #128
  42c3cc:	csel	x20, x20, x2, cs  // cs = hs, nlast
  42c3d0:	add	x20, x20, x1
  42c3d4:	lsl	x1, x20, #3
  42c3d8:	bl	404530 <realloc@plt>
  42c3dc:	cbz	x0, 42c418 <wcrtomb@plt+0x277f8>
  42c3e0:	str	x0, [x19, #8]
  42c3e4:	mov	w0, #0x0                   	// #0
  42c3e8:	str	x20, [x19, #24]
  42c3ec:	ldp	x19, x20, [sp, #16]
  42c3f0:	ldp	x29, x30, [sp], #32
  42c3f4:	ret
  42c3f8:	add	x1, x1, x20
  42c3fc:	mov	x0, #0x80                  	// #128
  42c400:	cmp	x1, x0
  42c404:	mov	x1, #0x8                   	// #8
  42c408:	csel	x20, x20, x0, hi  // hi = pmore
  42c40c:	mov	x0, x20
  42c410:	bl	4044c0 <calloc@plt>
  42c414:	b	42c3dc <wcrtomb@plt+0x277bc>
  42c418:	mov	x0, x19
  42c41c:	ldp	x19, x20, [sp, #16]
  42c420:	ldp	x29, x30, [sp], #32
  42c424:	b	42c2e0 <wcrtomb@plt+0x276c0>
  42c428:	stp	x29, x30, [sp, #-64]!
  42c42c:	mov	x29, sp
  42c430:	stp	x21, x22, [sp, #32]
  42c434:	sxtw	x21, w1
  42c438:	ldr	x1, [x0]
  42c43c:	str	x23, [sp, #48]
  42c440:	mov	x23, x2
  42c444:	add	x2, x21, #0x1
  42c448:	add	x1, x2, x1
  42c44c:	stp	x19, x20, [sp, #16]
  42c450:	mov	x20, x0
  42c454:	bl	42c370 <wcrtomb@plt+0x27750>
  42c458:	mov	w22, w0
  42c45c:	cbnz	w0, 42c4a4 <wcrtomb@plt+0x27884>
  42c460:	cbz	x21, 42c4bc <wcrtomb@plt+0x2789c>
  42c464:	mov	x19, #0x0                   	// #0
  42c468:	ldr	x0, [x23, x19, lsl #3]
  42c46c:	bl	404580 <strdup@plt>
  42c470:	cbz	x0, 42c4c8 <wcrtomb@plt+0x278a8>
  42c474:	ldp	x4, x2, [x20]
  42c478:	ldr	x1, [x20, #16]
  42c47c:	add	x3, x1, x4
  42c480:	add	x3, x3, x19
  42c484:	add	x19, x19, #0x1
  42c488:	cmp	x21, x19
  42c48c:	str	x0, [x2, x3, lsl #3]
  42c490:	b.ne	42c468 <wcrtomb@plt+0x27848>  // b.any
  42c494:	add	x4, x4, x21
  42c498:	add	x1, x1, x4
  42c49c:	str	x4, [x20]
  42c4a0:	str	xzr, [x2, x1, lsl #3]
  42c4a4:	mov	w0, w22
  42c4a8:	ldp	x19, x20, [sp, #16]
  42c4ac:	ldp	x21, x22, [sp, #32]
  42c4b0:	ldr	x23, [sp, #48]
  42c4b4:	ldp	x29, x30, [sp], #64
  42c4b8:	ret
  42c4bc:	ldp	x4, x2, [x20]
  42c4c0:	ldr	x1, [x20, #16]
  42c4c4:	b	42c498 <wcrtomb@plt+0x27878>
  42c4c8:	cbz	x19, 42c508 <wcrtomb@plt+0x278e8>
  42c4cc:	ldp	x1, x2, [x20]
  42c4d0:	ldr	x0, [x20, #16]
  42c4d4:	add	x0, x0, x1
  42c4d8:	add	x0, x0, x19
  42c4dc:	add	x0, x2, x0, lsl #3
  42c4e0:	ldur	x0, [x0, #-8]
  42c4e4:	bl	4047b0 <free@plt>
  42c4e8:	ldp	x1, x2, [x20]
  42c4ec:	ldr	x0, [x20, #16]
  42c4f0:	add	x0, x0, x1
  42c4f4:	add	x1, x0, x19
  42c4f8:	subs	x19, x19, #0x1
  42c4fc:	add	x1, x2, x1, lsl #3
  42c500:	stur	xzr, [x1, #-8]
  42c504:	b.ne	42c4d8 <wcrtomb@plt+0x278b8>  // b.any
  42c508:	mov	x0, x20
  42c50c:	ldp	x19, x20, [sp, #16]
  42c510:	ldp	x21, x22, [sp, #32]
  42c514:	ldr	x23, [sp, #48]
  42c518:	ldp	x29, x30, [sp], #64
  42c51c:	b	42c2e0 <wcrtomb@plt+0x276c0>
  42c520:	stp	x29, x30, [sp, #-32]!
  42c524:	mov	x29, sp
  42c528:	stp	x19, x20, [sp, #16]
  42c52c:	mov	x20, x0
  42c530:	mov	x19, x1
  42c534:	mov	x0, #0x1                   	// #1
  42c538:	mov	x1, #0x28                  	// #40
  42c53c:	bl	4044c0 <calloc@plt>
  42c540:	cbz	x0, 42c55c <wcrtomb@plt+0x2793c>
  42c544:	mov	x2, x0
  42c548:	str	x2, [x19]
  42c54c:	mov	w0, #0x0                   	// #0
  42c550:	ldp	x19, x20, [sp, #16]
  42c554:	ldp	x29, x30, [sp], #32
  42c558:	ret
  42c55c:	mov	x0, x20
  42c560:	ldp	x19, x20, [sp, #16]
  42c564:	ldp	x29, x30, [sp], #32
  42c568:	b	42c2e0 <wcrtomb@plt+0x276c0>
  42c56c:	nop
  42c570:	stp	x29, x30, [sp, #-64]!
  42c574:	cmp	x2, x1
  42c578:	mov	x29, sp
  42c57c:	stp	x19, x20, [sp, #16]
  42c580:	mov	x20, x0
  42c584:	mov	w19, w3
  42c588:	stp	x21, x22, [sp, #32]
  42c58c:	mov	x22, x1
  42c590:	mov	x21, x2
  42c594:	b.ne	42c5a0 <wcrtomb@plt+0x27980>  // b.any
  42c598:	and	w0, w3, #0x100
  42c59c:	tbz	w19, #8, 42c5dc <wcrtomb@plt+0x279bc>
  42c5a0:	add	x1, sp, #0x38
  42c5a4:	mov	x0, x20
  42c5a8:	bl	42c520 <wcrtomb@plt+0x27900>
  42c5ac:	cbnz	w0, 42c5dc <wcrtomb@plt+0x279bc>
  42c5b0:	ldr	x1, [sp, #56]
  42c5b4:	mov	w3, #0xfffffefd            	// #-259
  42c5b8:	and	w19, w19, w3
  42c5bc:	str	xzr, [x1, #8]
  42c5c0:	str	w19, [x1, #16]
  42c5c4:	ldr	x2, [x20, #216]
  42c5c8:	str	x2, [x1]
  42c5cc:	stp	x22, x21, [x1, #24]
  42c5d0:	cbz	x2, 42c5ec <wcrtomb@plt+0x279cc>
  42c5d4:	str	x1, [x2, #8]
  42c5d8:	str	x1, [x20, #216]
  42c5dc:	ldp	x19, x20, [sp, #16]
  42c5e0:	ldp	x21, x22, [sp, #32]
  42c5e4:	ldp	x29, x30, [sp], #64
  42c5e8:	ret
  42c5ec:	str	x1, [x20, #208]
  42c5f0:	str	x1, [x20, #216]
  42c5f4:	b	42c5dc <wcrtomb@plt+0x279bc>
  42c5f8:	stp	x29, x30, [sp, #-144]!
  42c5fc:	mov	x29, sp
  42c600:	stp	x23, x24, [sp, #48]
  42c604:	ldr	x23, [x0, #208]
  42c608:	cbz	x23, 42c764 <wcrtomb@plt+0x27b44>
  42c60c:	stp	x21, x22, [sp, #32]
  42c610:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42c614:	add	x21, x21, #0x948
  42c618:	stp	x27, x28, [sp, #80]
  42c61c:	mov	x28, x0
  42c620:	stp	x19, x20, [sp, #16]
  42c624:	stp	x25, x26, [sp, #64]
  42c628:	ldr	w19, [x23, #16]
  42c62c:	mov	x24, x21
  42c630:	tbnz	w19, #0, 42c644 <wcrtomb@plt+0x27a24>
  42c634:	ldr	x24, [x23, #24]
  42c638:	tbnz	w19, #1, 42c644 <wcrtomb@plt+0x27a24>
  42c63c:	ldr	x0, [x28, #168]
  42c640:	add	x24, x0, x24
  42c644:	ldr	w0, [x28, #32]
  42c648:	tst	w0, #0x600
  42c64c:	b.eq	42c74c <wcrtomb@plt+0x27b2c>  // b.none
  42c650:	tbnz	w19, #3, 42c74c <wcrtomb@plt+0x27b2c>
  42c654:	mov	x0, x23
  42c658:	bl	42bc18 <wcrtomb@plt+0x26ff8>
  42c65c:	mov	x27, x0
  42c660:	tbnz	w19, #1, 42c694 <wcrtomb@plt+0x27a74>
  42c664:	add	x0, x0, #0x1
  42c668:	bl	404310 <malloc@plt>
  42c66c:	mov	x19, x0
  42c670:	cbz	x0, 42c8fc <wcrtomb@plt+0x27cdc>
  42c674:	mov	x2, x27
  42c678:	mov	x1, x24
  42c67c:	bl	403f70 <memcpy@plt>
  42c680:	strb	wzr, [x19, x27]
  42c684:	str	x19, [x23, #24]
  42c688:	ldr	w19, [x23, #16]
  42c68c:	orr	w19, w19, #0x2
  42c690:	str	w19, [x23, #16]
  42c694:	ubfx	x1, x19, #2, #1
  42c698:	ldr	x19, [x23, #24]
  42c69c:	cbz	x27, 42c748 <wcrtomb@plt+0x27b28>
  42c6a0:	sxtw	x5, w1
  42c6a4:	lsl	w1, w1, #2
  42c6a8:	add	x5, x5, #0x8
  42c6ac:	mov	w6, #0x20                  	// #32
  42c6b0:	mov	w8, #0x10                  	// #16
  42c6b4:	mov	w0, #0x40                  	// #64
  42c6b8:	lsl	w7, w0, w1
  42c6bc:	add	x5, x28, x5, lsl #3
  42c6c0:	lsl	w6, w6, w1
  42c6c4:	mov	w20, #0x0                   	// #0
  42c6c8:	lsl	w22, w8, w1
  42c6cc:	mov	x1, #0x0                   	// #0
  42c6d0:	b	42c6e4 <wcrtomb@plt+0x27ac4>
  42c6d4:	mov	w20, w25
  42c6d8:	strb	w26, [x19], #1
  42c6dc:	cmp	x27, x1
  42c6e0:	b.ls	42c748 <wcrtomb@plt+0x27b28>  // b.plast
  42c6e4:	ldrb	w26, [x24, x1]
  42c6e8:	add	w25, w20, #0x1
  42c6ec:	cmp	w26, #0x5c
  42c6f0:	sxtw	x1, w25
  42c6f4:	b.ne	42c6d4 <wcrtomb@plt+0x27ab4>  // b.any
  42c6f8:	ldr	w4, [x28, #36]
  42c6fc:	add	x9, x24, x1
  42c700:	ldrb	w0, [x24, w25, sxtw]
  42c704:	tst	w4, w7
  42c708:	b.eq	42c774 <wcrtomb@plt+0x27b54>  // b.none
  42c70c:	and	w2, w0, #0xffffffdf
  42c710:	cmp	w2, #0x58
  42c714:	b.ne	42c774 <wcrtomb@plt+0x27b54>  // b.any
  42c718:	sub	x0, x27, x1
  42c71c:	cmp	x0, #0x1
  42c720:	b.hi	42c880 <wcrtomb@plt+0x27c60>  // b.pmore
  42c724:	mov	x0, x19
  42c728:	add	w20, w20, #0x2
  42c72c:	sxtw	x1, w20
  42c730:	strb	w26, [x0], #2
  42c734:	cmp	x27, x1
  42c738:	ldrb	w2, [x9]
  42c73c:	strb	w2, [x19, #1]
  42c740:	mov	x19, x0
  42c744:	b.hi	42c6e4 <wcrtomb@plt+0x27ac4>  // b.pmore
  42c748:	strb	wzr, [x19]
  42c74c:	ldr	x23, [x23, #8]
  42c750:	cbnz	x23, 42c628 <wcrtomb@plt+0x27a08>
  42c754:	ldp	x19, x20, [sp, #16]
  42c758:	ldp	x21, x22, [sp, #32]
  42c75c:	ldp	x25, x26, [sp, #64]
  42c760:	ldp	x27, x28, [sp, #80]
  42c764:	mov	w0, #0x0                   	// #0
  42c768:	ldp	x23, x24, [sp, #48]
  42c76c:	ldp	x29, x30, [sp], #144
  42c770:	ret
  42c774:	tst	w4, w6
  42c778:	b.eq	42c7b8 <wcrtomb@plt+0x27b98>  // b.none
  42c77c:	sub	w2, w0, #0x30
  42c780:	and	w2, w2, #0xff
  42c784:	cmp	w2, #0x9
  42c788:	b.hi	42c7b8 <wcrtomb@plt+0x27b98>  // b.pmore
  42c78c:	cmp	x27, x1
  42c790:	b.ne	42c824 <wcrtomb@plt+0x27c04>  // b.any
  42c794:	mov	x0, x19
  42c798:	mov	w1, #0x5c                  	// #92
  42c79c:	add	w20, w20, #0x2
  42c7a0:	strb	w1, [x0], #2
  42c7a4:	sxtw	x1, w20
  42c7a8:	ldrb	w2, [x9]
  42c7ac:	strb	w2, [x19, #1]
  42c7b0:	mov	x19, x0
  42c7b4:	b	42c6dc <wcrtomb@plt+0x27abc>
  42c7b8:	ldr	x2, [x5, #8]
  42c7bc:	ldrb	w1, [x2]
  42c7c0:	cbnz	w1, 42c7d4 <wcrtomb@plt+0x27bb4>
  42c7c4:	b	42c7e0 <wcrtomb@plt+0x27bc0>
  42c7c8:	b.eq	42c810 <wcrtomb@plt+0x27bf0>  // b.none
  42c7cc:	ldrb	w1, [x2, #2]!
  42c7d0:	cbz	w1, 42c7e0 <wcrtomb@plt+0x27bc0>
  42c7d4:	ldrb	w3, [x2, #1]
  42c7d8:	cmp	w0, w1
  42c7dc:	cbnz	w3, 42c7c8 <wcrtomb@plt+0x27ba8>
  42c7e0:	str	wzr, [sp, #140]
  42c7e4:	tst	w4, w22
  42c7e8:	add	x0, x19, #0x1
  42c7ec:	b.ne	42c874 <wcrtomb@plt+0x27c54>  // b.any
  42c7f0:	mov	x1, x0
  42c7f4:	mov	x0, x19
  42c7f8:	mov	x19, x1
  42c7fc:	add	w20, w20, #0x2
  42c800:	ldrb	w1, [x9]
  42c804:	strb	w1, [x0]
  42c808:	sxtw	x1, w20
  42c80c:	b	42c6dc <wcrtomb@plt+0x27abc>
  42c810:	add	w20, w20, #0x2
  42c814:	str	w3, [sp, #140]
  42c818:	strb	w3, [x19], #1
  42c81c:	sxtw	x1, w20
  42c820:	b	42c6dc <wcrtomb@plt+0x27abc>
  42c824:	mov	x1, x9
  42c828:	add	x0, sp, #0x8c
  42c82c:	mov	w3, #0x3                   	// #3
  42c830:	mov	w2, #0x8                   	// #8
  42c834:	stp	w7, w6, [sp, #104]
  42c838:	stp	x5, x9, [sp, #112]
  42c83c:	bl	42bb48 <wcrtomb@plt+0x26f28>
  42c840:	ldp	w7, w6, [sp, #104]
  42c844:	ldr	x5, [sp, #112]
  42c848:	cbnz	w0, 42c8d0 <wcrtomb@plt+0x27cb0>
  42c84c:	mov	x0, x19
  42c850:	mov	w1, #0x5c                  	// #92
  42c854:	ldr	x9, [sp, #120]
  42c858:	add	w20, w20, #0x2
  42c85c:	strb	w1, [x0], #2
  42c860:	sxtw	x1, w20
  42c864:	ldrb	w2, [x9]
  42c868:	strb	w2, [x19, #1]
  42c86c:	mov	x19, x0
  42c870:	b	42c6dc <wcrtomb@plt+0x27abc>
  42c874:	mov	w1, #0x5c                  	// #92
  42c878:	strb	w1, [x19], #2
  42c87c:	b	42c7fc <wcrtomb@plt+0x27bdc>
  42c880:	add	x1, x1, #0x1
  42c884:	add	x0, sp, #0x8c
  42c888:	add	x1, x24, x1
  42c88c:	mov	w3, #0x2                   	// #2
  42c890:	mov	w2, #0x10                  	// #16
  42c894:	stp	w7, w6, [sp, #104]
  42c898:	stp	x5, x9, [sp, #112]
  42c89c:	bl	42bb48 <wcrtomb@plt+0x26f28>
  42c8a0:	ldp	w7, w6, [sp, #104]
  42c8a4:	ldr	x5, [sp, #112]
  42c8a8:	cbnz	w0, 42c8e4 <wcrtomb@plt+0x27cc4>
  42c8ac:	mov	x0, x19
  42c8b0:	add	w20, w20, #0x2
  42c8b4:	ldr	x9, [sp, #120]
  42c8b8:	sxtw	x1, w20
  42c8bc:	strb	w26, [x0], #2
  42c8c0:	ldrb	w2, [x9]
  42c8c4:	strb	w2, [x19, #1]
  42c8c8:	mov	x19, x0
  42c8cc:	b	42c6dc <wcrtomb@plt+0x27abc>
  42c8d0:	add	w20, w0, w25
  42c8d4:	ldr	w1, [sp, #140]
  42c8d8:	strb	w1, [x19], #1
  42c8dc:	sxtw	x1, w20
  42c8e0:	b	42c6dc <wcrtomb@plt+0x27abc>
  42c8e4:	add	w0, w0, #0x1
  42c8e8:	ldr	w1, [sp, #140]
  42c8ec:	add	w20, w0, w25
  42c8f0:	strb	w1, [x19], #1
  42c8f4:	sxtw	x1, w20
  42c8f8:	b	42c6dc <wcrtomb@plt+0x27abc>
  42c8fc:	mov	x0, x28
  42c900:	bl	42c2e0 <wcrtomb@plt+0x276c0>
  42c904:	ldp	x19, x20, [sp, #16]
  42c908:	ldp	x21, x22, [sp, #32]
  42c90c:	ldp	x25, x26, [sp, #64]
  42c910:	ldp	x27, x28, [sp, #80]
  42c914:	b	42c768 <wcrtomb@plt+0x27b48>
  42c918:	stp	x29, x30, [sp, #-96]!
  42c91c:	mov	x29, sp
  42c920:	stp	x19, x20, [sp, #16]
  42c924:	mov	w20, w5
  42c928:	mov	w19, #0x1                   	// #1
  42c92c:	stp	x21, x22, [sp, #32]
  42c930:	mov	x22, x3
  42c934:	mov	x21, x4
  42c938:	stp	x23, x24, [sp, #48]
  42c93c:	mov	x23, x1
  42c940:	mov	x24, x2
  42c944:	add	x1, sp, #0x58
  42c948:	stp	x25, x26, [sp, #64]
  42c94c:	mov	x25, x0
  42c950:	bl	42c520 <wcrtomb@plt+0x27900>
  42c954:	cbz	w0, 42c974 <wcrtomb@plt+0x27d54>
  42c958:	mov	w0, w19
  42c95c:	ldp	x19, x20, [sp, #16]
  42c960:	ldp	x21, x22, [sp, #32]
  42c964:	ldp	x23, x24, [sp, #48]
  42c968:	ldp	x25, x26, [sp, #64]
  42c96c:	ldp	x29, x30, [sp], #96
  42c970:	ret
  42c974:	ldr	x2, [x23]
  42c978:	mov	w19, w0
  42c97c:	ldr	x1, [sp, #88]
  42c980:	mov	x0, x25
  42c984:	bl	42bc98 <wcrtomb@plt+0x27078>
  42c988:	ldr	w0, [x24, #16]
  42c98c:	tbz	w0, #1, 42c9d0 <wcrtomb@plt+0x27db0>
  42c990:	tbnz	w0, #0, 42ca10 <wcrtomb@plt+0x27df0>
  42c994:	ldr	x26, [x24, #24]
  42c998:	add	x0, x21, #0x1
  42c99c:	bl	404310 <malloc@plt>
  42c9a0:	mov	x24, x0
  42c9a4:	cbz	x0, 42ca1c <wcrtomb@plt+0x27dfc>
  42c9a8:	add	x1, x26, x22
  42c9ac:	mov	x2, x21
  42c9b0:	bl	403f70 <memcpy@plt>
  42c9b4:	strb	wzr, [x24, x21]
  42c9b8:	ldr	x6, [sp, #88]
  42c9bc:	mov	w0, #0x2                   	// #2
  42c9c0:	mov	w5, w0
  42c9c4:	str	w0, [x6, #16]
  42c9c8:	str	x24, [x6, #24]
  42c9cc:	b	42c9e8 <wcrtomb@plt+0x27dc8>
  42c9d0:	ldr	x6, [sp, #88]
  42c9d4:	ldr	x3, [x24, #24]
  42c9d8:	ldr	w5, [x6, #16]
  42c9dc:	add	x22, x22, x3
  42c9e0:	add	x21, x21, x22
  42c9e4:	stp	x22, x21, [x6, #24]
  42c9e8:	orr	w20, w20, w5
  42c9ec:	str	w20, [x6, #16]
  42c9f0:	mov	w0, w19
  42c9f4:	str	x6, [x23]
  42c9f8:	ldp	x19, x20, [sp, #16]
  42c9fc:	ldp	x21, x22, [sp, #32]
  42ca00:	ldp	x23, x24, [sp, #48]
  42ca04:	ldp	x25, x26, [sp, #64]
  42ca08:	ldp	x29, x30, [sp], #96
  42ca0c:	ret
  42ca10:	adrp	x26, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42ca14:	add	x26, x26, #0x948
  42ca18:	b	42c998 <wcrtomb@plt+0x27d78>
  42ca1c:	mov	x0, x25
  42ca20:	bl	42c2e0 <wcrtomb@plt+0x276c0>
  42ca24:	mov	w19, w0
  42ca28:	b	42c958 <wcrtomb@plt+0x27d38>
  42ca2c:	nop
  42ca30:	stp	x29, x30, [sp, #-112]!
  42ca34:	mov	x29, sp
  42ca38:	stp	x23, x24, [sp, #48]
  42ca3c:	mov	x24, x0
  42ca40:	ldr	w0, [x1, #16]
  42ca44:	stp	x19, x20, [sp, #16]
  42ca48:	mov	x23, x2
  42ca4c:	mov	x20, x1
  42ca50:	stp	x25, x26, [sp, #64]
  42ca54:	mov	x26, x3
  42ca58:	stp	x27, x28, [sp, #80]
  42ca5c:	tbnz	w0, #0, 42cc54 <wcrtomb@plt+0x28034>
  42ca60:	ldr	x19, [x1, #24]
  42ca64:	tbz	w0, #1, 42cc28 <wcrtomb@plt+0x28008>
  42ca68:	mov	x0, x20
  42ca6c:	bl	42bc18 <wcrtomb@plt+0x26ff8>
  42ca70:	stp	x19, x20, [sp, #96]
  42ca74:	add	x28, x19, x0
  42ca78:	mov	x25, x0
  42ca7c:	cmp	x28, x19
  42ca80:	b.ls	42cc0c <wcrtomb@plt+0x27fec>  // b.plast
  42ca84:	mov	w27, #0x14                  	// #20
  42ca88:	stp	x21, x22, [sp, #32]
  42ca8c:	mov	x22, x19
  42ca90:	mov	x21, #0x0                   	// #0
  42ca94:	b	42caac <wcrtomb@plt+0x27e8c>
  42ca98:	ldr	x19, [sp, #96]
  42ca9c:	add	x19, x19, #0x1
  42caa0:	str	x19, [sp, #96]
  42caa4:	cmp	x28, x19
  42caa8:	b.ls	42cb60 <wcrtomb@plt+0x27f40>  // b.plast
  42caac:	ldrb	w0, [x19]
  42cab0:	cmp	w0, #0x5c
  42cab4:	b.eq	42cbcc <wcrtomb@plt+0x27fac>  // b.none
  42cab8:	cmp	w0, #0x24
  42cabc:	b.ne	42ca98 <wcrtomb@plt+0x27e78>  // b.any
  42cac0:	ldrb	w0, [x19, #1]
  42cac4:	blr	x23
  42cac8:	cbz	w0, 42ca98 <wcrtomb@plt+0x27e78>
  42cacc:	ldp	x1, x0, [sp, #96]
  42cad0:	sub	x19, x1, x22
  42cad4:	cmp	x0, x20
  42cad8:	b.eq	42cae8 <wcrtomb@plt+0x27ec8>  // b.none
  42cadc:	ldr	w2, [x0, #16]
  42cae0:	orr	w2, w2, #0x10
  42cae4:	str	w2, [x0, #16]
  42cae8:	cbz	x19, 42cb10 <wcrtomb@plt+0x27ef0>
  42caec:	mov	x4, x19
  42caf0:	mov	x3, x21
  42caf4:	mov	x2, x20
  42caf8:	add	x1, sp, #0x68
  42cafc:	mov	x0, x24
  42cb00:	mov	w5, #0x10                  	// #16
  42cb04:	bl	42c918 <wcrtomb@plt+0x27cf8>
  42cb08:	cbnz	w0, 42cc34 <wcrtomb@plt+0x28014>
  42cb0c:	ldr	x1, [sp, #96]
  42cb10:	add	x1, x1, #0x1
  42cb14:	ldr	w5, [x20, #16]
  42cb18:	sub	x2, x25, x19
  42cb1c:	add	x4, sp, #0x60
  42cb20:	add	x3, sp, #0x68
  42cb24:	mov	x0, x24
  42cb28:	and	w5, w5, w27
  42cb2c:	str	x1, [sp, #96]
  42cb30:	blr	x26
  42cb34:	cbnz	w0, 42cc34 <wcrtomb@plt+0x28014>
  42cb38:	ldr	x0, [sp, #96]
  42cb3c:	add	x21, x21, #0x1
  42cb40:	sub	x1, x0, x22
  42cb44:	add	x22, x0, #0x1
  42cb48:	mov	x19, x22
  42cb4c:	str	x19, [sp, #96]
  42cb50:	add	x21, x1, x21
  42cb54:	cmp	x28, x19
  42cb58:	b.hi	42caac <wcrtomb@plt+0x27e8c>  // b.pmore
  42cb5c:	nop
  42cb60:	cmp	x22, x19
  42cb64:	ldr	x0, [sp, #104]
  42cb68:	b.cs	42cc00 <wcrtomb@plt+0x27fe0>  // b.hs, b.nlast
  42cb6c:	sub	x4, x19, x22
  42cb70:	cmp	x20, x0
  42cb74:	b.eq	42cbd4 <wcrtomb@plt+0x27fb4>  // b.none
  42cb78:	ldr	w1, [x0, #16]
  42cb7c:	orr	w1, w1, #0x10
  42cb80:	str	w1, [x0, #16]
  42cb84:	cbnz	x4, 42cbd8 <wcrtomb@plt+0x27fb8>
  42cb88:	ldp	x0, x1, [x20]
  42cb8c:	cbz	x0, 42cc60 <wcrtomb@plt+0x28040>
  42cb90:	str	x1, [x0, #8]
  42cb94:	ldr	x1, [x20, #8]
  42cb98:	cbz	x1, 42cc74 <wcrtomb@plt+0x28054>
  42cb9c:	str	x0, [x1]
  42cba0:	stp	xzr, xzr, [x20]
  42cba4:	mov	x0, x20
  42cba8:	bl	42b888 <wcrtomb@plt+0x26c68>
  42cbac:	mov	w0, #0x0                   	// #0
  42cbb0:	ldp	x19, x20, [sp, #16]
  42cbb4:	ldp	x21, x22, [sp, #32]
  42cbb8:	ldp	x23, x24, [sp, #48]
  42cbbc:	ldp	x25, x26, [sp, #64]
  42cbc0:	ldp	x27, x28, [sp, #80]
  42cbc4:	ldp	x29, x30, [sp], #112
  42cbc8:	ret
  42cbcc:	add	x19, x19, #0x2
  42cbd0:	b	42caa0 <wcrtomb@plt+0x27e80>
  42cbd4:	cbz	x4, 42cc08 <wcrtomb@plt+0x27fe8>
  42cbd8:	ldr	w5, [x20, #16]
  42cbdc:	mov	w0, #0x14                  	// #20
  42cbe0:	mov	x3, x21
  42cbe4:	mov	x2, x20
  42cbe8:	and	w5, w5, w0
  42cbec:	add	x1, sp, #0x68
  42cbf0:	mov	x0, x24
  42cbf4:	bl	42c918 <wcrtomb@plt+0x27cf8>
  42cbf8:	cbnz	w0, 42cc34 <wcrtomb@plt+0x28014>
  42cbfc:	ldr	x0, [sp, #104]
  42cc00:	cmp	x20, x0
  42cc04:	b.ne	42cb88 <wcrtomb@plt+0x27f68>  // b.any
  42cc08:	ldp	x21, x22, [sp, #32]
  42cc0c:	mov	w0, #0x0                   	// #0
  42cc10:	ldp	x19, x20, [sp, #16]
  42cc14:	ldp	x23, x24, [sp, #48]
  42cc18:	ldp	x25, x26, [sp, #64]
  42cc1c:	ldp	x27, x28, [sp, #80]
  42cc20:	ldp	x29, x30, [sp], #112
  42cc24:	ret
  42cc28:	ldr	x0, [x24, #168]
  42cc2c:	add	x19, x0, x19
  42cc30:	b	42ca68 <wcrtomb@plt+0x27e48>
  42cc34:	mov	w0, #0x1                   	// #1
  42cc38:	ldp	x19, x20, [sp, #16]
  42cc3c:	ldp	x21, x22, [sp, #32]
  42cc40:	ldp	x23, x24, [sp, #48]
  42cc44:	ldp	x25, x26, [sp, #64]
  42cc48:	ldp	x27, x28, [sp, #80]
  42cc4c:	ldp	x29, x30, [sp], #112
  42cc50:	ret
  42cc54:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42cc58:	add	x19, x19, #0x948
  42cc5c:	b	42ca68 <wcrtomb@plt+0x27e48>
  42cc60:	str	x1, [x24, #208]
  42cc64:	ldr	x1, [x20, #8]
  42cc68:	cbnz	x1, 42cb9c <wcrtomb@plt+0x27f7c>
  42cc6c:	str	x0, [x24, #216]
  42cc70:	b	42cba0 <wcrtomb@plt+0x27f80>
  42cc74:	ldr	w1, [x0, #16]
  42cc78:	and	w1, w1, #0xffffffef
  42cc7c:	str	w1, [x0, #16]
  42cc80:	str	x0, [x24, #216]
  42cc84:	b	42cba0 <wcrtomb@plt+0x27f80>
  42cc88:	stp	x29, x30, [sp, #-64]!
  42cc8c:	mov	x29, sp
  42cc90:	stp	x19, x20, [sp, #16]
  42cc94:	ldr	x19, [x0, #208]
  42cc98:	stp	x21, x22, [sp, #32]
  42cc9c:	mov	x21, x0
  42cca0:	cbz	x19, 42ccdc <wcrtomb@plt+0x280bc>
  42cca4:	adrp	x22, 42b000 <wcrtomb@plt+0x263e0>
  42cca8:	add	x22, x22, #0xbf8
  42ccac:	str	x23, [sp, #48]
  42ccb0:	adrp	x23, 42e000 <wcrtomb@plt+0x293e0>
  42ccb4:	add	x23, x23, #0x360
  42ccb8:	mov	w20, #0x48                  	// #72
  42ccbc:	nop
  42ccc0:	ldr	w4, [x19, #16]
  42ccc4:	mov	x1, x19
  42ccc8:	ldr	x19, [x19, #8]
  42cccc:	tst	w4, w20
  42ccd0:	b.eq	42ccf8 <wcrtomb@plt+0x280d8>  // b.none
  42ccd4:	cbnz	x19, 42ccc0 <wcrtomb@plt+0x280a0>
  42ccd8:	ldr	x23, [sp, #48]
  42ccdc:	mov	x0, x21
  42cce0:	bl	42b8c8 <wcrtomb@plt+0x26ca8>
  42cce4:	mov	w0, #0x0                   	// #0
  42cce8:	ldp	x19, x20, [sp, #16]
  42ccec:	ldp	x21, x22, [sp, #32]
  42ccf0:	ldp	x29, x30, [sp], #64
  42ccf4:	ret
  42ccf8:	mov	x3, x23
  42ccfc:	mov	x2, x22
  42cd00:	mov	x0, x21
  42cd04:	bl	42ca30 <wcrtomb@plt+0x27e10>
  42cd08:	cbz	w0, 42ccd4 <wcrtomb@plt+0x280b4>
  42cd0c:	mov	w0, #0x1                   	// #1
  42cd10:	ldp	x19, x20, [sp, #16]
  42cd14:	ldp	x21, x22, [sp, #32]
  42cd18:	ldr	x23, [sp, #48]
  42cd1c:	ldp	x29, x30, [sp], #64
  42cd20:	ret
  42cd24:	nop
  42cd28:	stp	x29, x30, [sp, #-48]!
  42cd2c:	mov	x29, sp
  42cd30:	stp	x19, x20, [sp, #16]
  42cd34:	mov	x20, x0
  42cd38:	ldr	x19, [x0, #208]
  42cd3c:	cbz	x19, 42cd70 <wcrtomb@plt+0x28150>
  42cd40:	stp	x21, x22, [sp, #32]
  42cd44:	adrp	x22, 42e000 <wcrtomb@plt+0x293e0>
  42cd48:	adrp	x21, 42b000 <wcrtomb@plt+0x263e0>
  42cd4c:	add	x22, x22, #0xe50
  42cd50:	add	x21, x21, #0x878
  42cd54:	nop
  42cd58:	ldr	w4, [x19, #16]
  42cd5c:	mov	x1, x19
  42cd60:	ldr	x19, [x19, #8]
  42cd64:	tbz	w4, #3, 42cd88 <wcrtomb@plt+0x28168>
  42cd68:	cbnz	x19, 42cd58 <wcrtomb@plt+0x28138>
  42cd6c:	ldp	x21, x22, [sp, #32]
  42cd70:	mov	x0, x20
  42cd74:	bl	42b8c8 <wcrtomb@plt+0x26ca8>
  42cd78:	mov	w0, #0x0                   	// #0
  42cd7c:	ldp	x19, x20, [sp, #16]
  42cd80:	ldp	x29, x30, [sp], #48
  42cd84:	ret
  42cd88:	mov	x3, x22
  42cd8c:	mov	x2, x21
  42cd90:	mov	x0, x20
  42cd94:	bl	42ca30 <wcrtomb@plt+0x27e10>
  42cd98:	cbz	w0, 42cd68 <wcrtomb@plt+0x28148>
  42cd9c:	mov	w0, #0x1                   	// #1
  42cda0:	ldp	x19, x20, [sp, #16]
  42cda4:	ldp	x21, x22, [sp, #32]
  42cda8:	ldp	x29, x30, [sp], #48
  42cdac:	ret
  42cdb0:	stp	x29, x30, [sp, #-112]!
  42cdb4:	mov	x29, sp
  42cdb8:	stp	x19, x20, [sp, #16]
  42cdbc:	ldr	x19, [x0, #208]
  42cdc0:	stp	x23, x24, [sp, #48]
  42cdc4:	cbz	x19, 42cf5c <wcrtomb@plt+0x2833c>
  42cdc8:	mov	x23, x0
  42cdcc:	mov	x24, #0x0                   	// #0
  42cdd0:	stp	x21, x22, [sp, #32]
  42cdd4:	stp	x25, x26, [sp, #64]
  42cdd8:	mov	w26, #0x5                   	// #5
  42cddc:	stp	x27, x28, [sp, #80]
  42cde0:	str	xzr, [sp, #96]
  42cde4:	b	42cdf0 <wcrtomb@plt+0x281d0>
  42cde8:	ldr	x19, [x19, #8]
  42cdec:	cbz	x19, 42cf10 <wcrtomb@plt+0x282f0>
  42cdf0:	ldr	w1, [x19, #16]
  42cdf4:	tst	w1, w26
  42cdf8:	b.ne	42cde8 <wcrtomb@plt+0x281c8>  // b.any
  42cdfc:	ldr	x21, [x19, #24]
  42ce00:	tbnz	w1, #1, 42ce0c <wcrtomb@plt+0x281ec>
  42ce04:	ldr	x0, [x23, #168]
  42ce08:	add	x21, x0, x21
  42ce0c:	ldrb	w0, [x21]
  42ce10:	cmp	w0, #0x7e
  42ce14:	b.ne	42cde8 <wcrtomb@plt+0x281c8>  // b.any
  42ce18:	mov	x0, x19
  42ce1c:	mov	x20, #0x1                   	// #1
  42ce20:	bl	42bc18 <wcrtomb@plt+0x26ff8>
  42ce24:	mov	x22, x0
  42ce28:	cmp	x0, x20
  42ce2c:	b.hi	42ce40 <wcrtomb@plt+0x28220>  // b.pmore
  42ce30:	b	42cf48 <wcrtomb@plt+0x28328>
  42ce34:	add	x20, x20, #0x1
  42ce38:	cmp	x22, x20
  42ce3c:	b.eq	42cde8 <wcrtomb@plt+0x281c8>  // b.none
  42ce40:	ldrb	w1, [x21, x20]
  42ce44:	cmp	w1, #0x2f
  42ce48:	b.ne	42ce34 <wcrtomb@plt+0x28214>  // b.any
  42ce4c:	cmp	x20, #0x1
  42ce50:	b.eq	42cf4c <wcrtomb@plt+0x2832c>  // b.none
  42ce54:	ldr	x0, [sp, #96]
  42ce58:	cmp	x20, x0
  42ce5c:	b.ls	42ce78 <wcrtomb@plt+0x28258>  // b.plast
  42ce60:	mov	x1, x20
  42ce64:	mov	x0, x24
  42ce68:	bl	404530 <realloc@plt>
  42ce6c:	cbz	x0, 42cf64 <wcrtomb@plt+0x28344>
  42ce70:	mov	x24, x0
  42ce74:	str	x20, [sp, #96]
  42ce78:	sub	x20, x20, #0x1
  42ce7c:	add	x1, x21, #0x1
  42ce80:	mov	x2, x20
  42ce84:	mov	x0, x24
  42ce88:	bl	403f70 <memcpy@plt>
  42ce8c:	strb	wzr, [x24, x20]
  42ce90:	mov	x0, x24
  42ce94:	bl	404440 <getpwnam@plt>
  42ce98:	cbz	x0, 42cde8 <wcrtomb@plt+0x281c8>
  42ce9c:	ldr	x1, [x0, #32]
  42cea0:	sub	x22, x22, x20
  42cea4:	str	x1, [sp, #104]
  42cea8:	mov	x0, x1
  42ceac:	bl	403ff0 <strlen@plt>
  42ceb0:	add	x27, x22, x0
  42ceb4:	mov	x25, x0
  42ceb8:	mov	x0, x27
  42cebc:	bl	404310 <malloc@plt>
  42cec0:	mov	x28, x0
  42cec4:	ldr	x1, [sp, #104]
  42cec8:	cbz	x0, 42cf64 <wcrtomb@plt+0x28344>
  42cecc:	add	x27, x28, x27
  42ced0:	mov	x2, x25
  42ced4:	add	x20, x20, #0x1
  42ced8:	bl	403f70 <memcpy@plt>
  42cedc:	add	x1, x21, x20
  42cee0:	sub	x2, x22, #0x1
  42cee4:	add	x0, x28, x25
  42cee8:	bl	403f70 <memcpy@plt>
  42ceec:	sturb	wzr, [x27, #-1]
  42cef0:	ldr	w0, [x19, #16]
  42cef4:	tbnz	w0, #1, 42cf38 <wcrtomb@plt+0x28318>
  42cef8:	orr	w0, w0, #0x2
  42cefc:	str	w0, [x19, #16]
  42cf00:	str	x28, [x19, #24]
  42cf04:	ldr	x19, [x19, #8]
  42cf08:	cbnz	x19, 42cdf0 <wcrtomb@plt+0x281d0>
  42cf0c:	nop
  42cf10:	ldp	x21, x22, [sp, #32]
  42cf14:	ldp	x25, x26, [sp, #64]
  42cf18:	ldp	x27, x28, [sp, #80]
  42cf1c:	mov	x0, x24
  42cf20:	bl	4047b0 <free@plt>
  42cf24:	mov	w0, #0x0                   	// #0
  42cf28:	ldp	x19, x20, [sp, #16]
  42cf2c:	ldp	x23, x24, [sp, #48]
  42cf30:	ldp	x29, x30, [sp], #112
  42cf34:	ret
  42cf38:	ldr	x0, [x19, #24]
  42cf3c:	bl	4047b0 <free@plt>
  42cf40:	ldr	w0, [x19, #16]
  42cf44:	b	42cef8 <wcrtomb@plt+0x282d8>
  42cf48:	b.eq	42cde8 <wcrtomb@plt+0x281c8>  // b.none
  42cf4c:	mov	x20, #0x1                   	// #1
  42cf50:	bl	404120 <getuid@plt>
  42cf54:	bl	404720 <getpwuid@plt>
  42cf58:	b	42ce98 <wcrtomb@plt+0x28278>
  42cf5c:	mov	x24, #0x0                   	// #0
  42cf60:	b	42cf1c <wcrtomb@plt+0x282fc>
  42cf64:	mov	x0, x24
  42cf68:	bl	4047b0 <free@plt>
  42cf6c:	mov	x0, x23
  42cf70:	ldp	x19, x20, [sp, #16]
  42cf74:	ldp	x21, x22, [sp, #32]
  42cf78:	ldp	x23, x24, [sp, #48]
  42cf7c:	ldp	x25, x26, [sp, #64]
  42cf80:	ldp	x27, x28, [sp, #80]
  42cf84:	ldp	x29, x30, [sp], #112
  42cf88:	b	42c2e0 <wcrtomb@plt+0x276c0>
  42cf8c:	nop
  42cf90:	stp	x29, x30, [sp, #-96]!
  42cf94:	mov	x29, sp
  42cf98:	stp	x19, x20, [sp, #16]
  42cf9c:	mov	x20, x1
  42cfa0:	stp	x21, x22, [sp, #32]
  42cfa4:	mov	x22, x1
  42cfa8:	stp	x27, x28, [sp, #80]
  42cfac:	mov	x27, x0
  42cfb0:	mov	x0, #0x1                   	// #1
  42cfb4:	cbz	x1, 42cfe0 <wcrtomb@plt+0x283c0>
  42cfb8:	mov	x19, #0x0                   	// #0
  42cfbc:	b	42cfc8 <wcrtomb@plt+0x283a8>
  42cfc0:	ldr	x20, [x20, #8]
  42cfc4:	cbz	x20, 42cfdc <wcrtomb@plt+0x283bc>
  42cfc8:	mov	x0, x20
  42cfcc:	bl	42bc18 <wcrtomb@plt+0x26ff8>
  42cfd0:	ldr	w1, [x20, #16]
  42cfd4:	add	x19, x19, x0
  42cfd8:	tbnz	w1, #4, 42cfc0 <wcrtomb@plt+0x283a0>
  42cfdc:	add	x0, x19, #0x1
  42cfe0:	bl	404310 <malloc@plt>
  42cfe4:	mov	x28, x0
  42cfe8:	cbz	x0, 42d124 <wcrtomb@plt+0x28504>
  42cfec:	stp	x25, x26, [sp, #64]
  42cff0:	mov	x19, x22
  42cff4:	ldr	w25, [x22, #16]
  42cff8:	adrp	x26, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42cffc:	add	x26, x26, #0x948
  42d000:	stp	x23, x24, [sp, #48]
  42d004:	mov	x23, x0
  42d008:	mov	w0, w25
  42d00c:	nop
  42d010:	mov	x21, x26
  42d014:	ldr	x24, [x19, #8]
  42d018:	tbnz	w0, #0, 42d02c <wcrtomb@plt+0x2840c>
  42d01c:	ldr	x21, [x19, #24]
  42d020:	tbnz	w0, #1, 42d02c <wcrtomb@plt+0x2840c>
  42d024:	ldr	x1, [x27, #168]
  42d028:	add	x21, x1, x21
  42d02c:	mov	x0, x19
  42d030:	bl	42bc18 <wcrtomb@plt+0x26ff8>
  42d034:	mov	x1, x21
  42d038:	mov	x21, x0
  42d03c:	mov	x2, x21
  42d040:	mov	x0, x23
  42d044:	bl	403f70 <memcpy@plt>
  42d048:	add	x23, x23, x21
  42d04c:	cmp	x22, x19
  42d050:	b.eq	42d094 <wcrtomb@plt+0x28474>  // b.none
  42d054:	ldr	w0, [x19, #16]
  42d058:	and	w0, w0, #0x4
  42d05c:	orr	w25, w0, w25
  42d060:	ldp	x1, x0, [x19]
  42d064:	str	w25, [x22, #16]
  42d068:	cbz	x1, 42d104 <wcrtomb@plt+0x284e4>
  42d06c:	str	x0, [x1, #8]
  42d070:	ldr	x0, [x19, #8]
  42d074:	cbz	x0, 42d0a0 <wcrtomb@plt+0x28480>
  42d078:	str	x1, [x0]
  42d07c:	mov	x0, x19
  42d080:	stp	xzr, xzr, [x19]
  42d084:	bl	42b888 <wcrtomb@plt+0x26c68>
  42d088:	cmp	x19, x20
  42d08c:	b.eq	42d0c4 <wcrtomb@plt+0x284a4>  // b.none
  42d090:	ldr	w25, [x22, #16]
  42d094:	ldr	w0, [x24, #16]
  42d098:	mov	x19, x24
  42d09c:	b	42d010 <wcrtomb@plt+0x283f0>
  42d0a0:	ldr	w0, [x1, #16]
  42d0a4:	and	w0, w0, #0xffffffef
  42d0a8:	str	w0, [x1, #16]
  42d0ac:	str	x1, [x27, #216]
  42d0b0:	stp	xzr, xzr, [x19]
  42d0b4:	mov	x0, x19
  42d0b8:	bl	42b888 <wcrtomb@plt+0x26c68>
  42d0bc:	cmp	x19, x20
  42d0c0:	b.ne	42d090 <wcrtomb@plt+0x28470>  // b.any
  42d0c4:	ldr	w1, [x22, #16]
  42d0c8:	strb	wzr, [x23]
  42d0cc:	and	w0, w1, #0xffffffef
  42d0d0:	str	w0, [x22, #16]
  42d0d4:	tbnz	w1, #1, 42d118 <wcrtomb@plt+0x284f8>
  42d0d8:	orr	w0, w0, #0x2
  42d0dc:	str	w0, [x22, #16]
  42d0e0:	ldp	x19, x20, [sp, #16]
  42d0e4:	mov	w0, #0x0                   	// #0
  42d0e8:	ldp	x23, x24, [sp, #48]
  42d0ec:	ldp	x25, x26, [sp, #64]
  42d0f0:	str	x28, [x22, #24]
  42d0f4:	ldp	x21, x22, [sp, #32]
  42d0f8:	ldp	x27, x28, [sp, #80]
  42d0fc:	ldp	x29, x30, [sp], #96
  42d100:	ret
  42d104:	str	x0, [x27, #208]
  42d108:	ldr	x0, [x19, #8]
  42d10c:	cbnz	x0, 42d078 <wcrtomb@plt+0x28458>
  42d110:	str	x1, [x27, #216]
  42d114:	b	42d0b0 <wcrtomb@plt+0x28490>
  42d118:	ldr	x0, [x22, #24]
  42d11c:	bl	4047b0 <free@plt>
  42d120:	b	42d0e0 <wcrtomb@plt+0x284c0>
  42d124:	mov	x0, x27
  42d128:	ldp	x19, x20, [sp, #16]
  42d12c:	ldp	x21, x22, [sp, #32]
  42d130:	ldp	x27, x28, [sp, #80]
  42d134:	ldp	x29, x30, [sp], #96
  42d138:	b	42c2e0 <wcrtomb@plt+0x276c0>
  42d13c:	nop
  42d140:	stp	x29, x30, [sp, #-32]!
  42d144:	mov	x29, sp
  42d148:	stp	x19, x20, [sp, #16]
  42d14c:	mov	x19, x0
  42d150:	str	w3, [x0, #32]
  42d154:	tbnz	w3, #16, 42d164 <wcrtomb@plt+0x28544>
  42d158:	adrp	x0, 42b000 <wcrtomb@plt+0x263e0>
  42d15c:	add	x0, x0, #0xb08
  42d160:	str	x0, [x19, #88]
  42d164:	and	w4, w3, #0x20000
  42d168:	tbnz	w3, #17, 42d178 <wcrtomb@plt+0x28558>
  42d16c:	adrp	x0, 42b000 <wcrtomb@plt+0x263e0>
  42d170:	add	x0, x0, #0xa60
  42d174:	str	x0, [x19, #96]
  42d178:	tbnz	w3, #6, 42d184 <wcrtomb@plt+0x28564>
  42d17c:	stp	xzr, xzr, [x19, #120]
  42d180:	str	xzr, [x19, #136]
  42d184:	tbnz	w3, #2, 42d190 <wcrtomb@plt+0x28570>
  42d188:	ldr	x0, [x19, #160]
  42d18c:	cbz	x0, 42d2a0 <wcrtomb@plt+0x28680>
  42d190:	tbz	w3, #21, 42d1b0 <wcrtomb@plt+0x28590>
  42d194:	tbnz	w3, #18, 42d1b0 <wcrtomb@plt+0x28590>
  42d198:	cbnz	w4, 42d28c <wcrtomb@plt+0x2866c>
  42d19c:	tbz	w3, #4, 42d2d0 <wcrtomb@plt+0x286b0>
  42d1a0:	adrp	x0, 42b000 <wcrtomb@plt+0x263e0>
  42d1a4:	add	x0, x0, #0xa60
  42d1a8:	str	x0, [x19, #104]
  42d1ac:	nop
  42d1b0:	stp	x1, x2, [x19, #168]
  42d1b4:	tbnz	w3, #1, 42d1bc <wcrtomb@plt+0x2859c>
  42d1b8:	str	xzr, [x19, #16]
  42d1bc:	tbnz	w3, #14, 42d1cc <wcrtomb@plt+0x285ac>
  42d1c0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42d1c4:	add	x0, x0, #0xc40
  42d1c8:	str	x0, [x19, #56]
  42d1cc:	tbnz	w3, #15, 42d1d4 <wcrtomb@plt+0x285b4>
  42d1d0:	str	xzr, [x19, #64]
  42d1d4:	tbz	w3, #26, 42d264 <wcrtomb@plt+0x28644>
  42d1d8:	tbnz	w3, #31, 42d1e0 <wcrtomb@plt+0x285c0>
  42d1dc:	str	wzr, [x19, #36]
  42d1e0:	tbnz	w3, #28, 42d244 <wcrtomb@plt+0x28624>
  42d1e4:	ldr	w0, [x19, #36]
  42d1e8:	tbz	w3, #25, 42d26c <wcrtomb@plt+0x2864c>
  42d1ec:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42d1f0:	mov	w2, #0x660                 	// #1632
  42d1f4:	add	x1, x1, #0x260
  42d1f8:	orr	w0, w0, w2
  42d1fc:	str	w0, [x19, #36]
  42d200:	stp	x1, x1, [x19, #72]
  42d204:	str	xzr, [x19, #48]
  42d208:	str	xzr, [x19, #184]
  42d20c:	tbz	w3, #3, 42d228 <wcrtomb@plt+0x28608>
  42d210:	ldr	x20, [x19, #208]
  42d214:	cbz	x20, 42d228 <wcrtomb@plt+0x28608>
  42d218:	mov	x0, x20
  42d21c:	ldr	x20, [x20, #8]
  42d220:	bl	42b888 <wcrtomb@plt+0x26c68>
  42d224:	cbnz	x20, 42d218 <wcrtomb@plt+0x285f8>
  42d228:	stp	xzr, xzr, [x19, #208]
  42d22c:	mov	x0, x19
  42d230:	bl	42c030 <wcrtomb@plt+0x27410>
  42d234:	mov	w0, #0x0                   	// #0
  42d238:	ldp	x19, x20, [sp, #16]
  42d23c:	ldp	x29, x30, [sp], #32
  42d240:	ret
  42d244:	ldr	x0, [x19, #72]
  42d248:	cbz	x0, 42d2c0 <wcrtomb@plt+0x286a0>
  42d24c:	ldr	x0, [x19, #80]
  42d250:	cbnz	x0, 42d204 <wcrtomb@plt+0x285e4>
  42d254:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42d258:	add	x0, x0, #0x948
  42d25c:	str	x0, [x19, #80]
  42d260:	b	42d204 <wcrtomb@plt+0x285e4>
  42d264:	str	xzr, [x19, #152]
  42d268:	b	42d1d8 <wcrtomb@plt+0x285b8>
  42d26c:	orr	w0, w0, #0x100
  42d270:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42d274:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42d278:	add	x2, x2, #0x948
  42d27c:	add	x1, x1, #0xc48
  42d280:	str	w0, [x19, #36]
  42d284:	stp	x2, x1, [x19, #72]
  42d288:	b	42d204 <wcrtomb@plt+0x285e4>
  42d28c:	ldr	x0, [x19, #96]
  42d290:	str	x0, [x19, #104]
  42d294:	stp	x1, x2, [x19, #168]
  42d298:	tbnz	w3, #1, 42d1bc <wcrtomb@plt+0x2859c>
  42d29c:	b	42d1b8 <wcrtomb@plt+0x28598>
  42d2a0:	mov	w0, #0x3                   	// #3
  42d2a4:	str	w0, [x19, #192]
  42d2a8:	tbnz	w3, #4, 42d2dc <wcrtomb@plt+0x286bc>
  42d2ac:	bl	404ad0 <__errno_location@plt>
  42d2b0:	mov	w1, #0x16                  	// #22
  42d2b4:	str	w1, [x0]
  42d2b8:	ldr	w0, [x19, #192]
  42d2bc:	b	42d238 <wcrtomb@plt+0x28618>
  42d2c0:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42d2c4:	add	x0, x0, #0x948
  42d2c8:	str	x0, [x19, #72]
  42d2cc:	b	42d24c <wcrtomb@plt+0x2862c>
  42d2d0:	and	w3, w3, #0xffdfffff
  42d2d4:	str	w3, [x19, #32]
  42d2d8:	b	42d1b0 <wcrtomb@plt+0x28590>
  42d2dc:	mov	x0, x19
  42d2e0:	bl	42c218 <wcrtomb@plt+0x275f8>
  42d2e4:	b	42d2ac <wcrtomb@plt+0x2868c>
  42d2e8:	stp	x29, x30, [sp, #-304]!
  42d2ec:	mov	x29, sp
  42d2f0:	stp	x21, x22, [sp, #32]
  42d2f4:	ldr	x22, [x0, #208]
  42d2f8:	stp	x25, x26, [sp, #64]
  42d2fc:	ldr	w26, [x0, #36]
  42d300:	stp	x19, x20, [sp, #16]
  42d304:	ubfx	x26, x26, #2, #1
  42d308:	cbz	x22, 42d344 <wcrtomb@plt+0x28724>
  42d30c:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42d310:	mov	x25, x0
  42d314:	lsl	w26, w26, #7
  42d318:	add	x21, x21, #0xc50
  42d31c:	stp	x23, x24, [sp, #48]
  42d320:	str	x27, [sp, #80]
  42d324:	nop
  42d328:	ldr	w2, [x22, #16]
  42d32c:	mov	x23, x22
  42d330:	ldr	x22, [x22, #8]
  42d334:	tbz	w2, #2, 42d360 <wcrtomb@plt+0x28740>
  42d338:	cbnz	x22, 42d328 <wcrtomb@plt+0x28708>
  42d33c:	ldp	x23, x24, [sp, #48]
  42d340:	ldr	x27, [sp, #80]
  42d344:	mov	w19, #0x0                   	// #0
  42d348:	mov	w0, w19
  42d34c:	ldp	x19, x20, [sp, #16]
  42d350:	ldp	x21, x22, [sp, #32]
  42d354:	ldp	x25, x26, [sp, #64]
  42d358:	ldp	x29, x30, [sp], #304
  42d35c:	ret
  42d360:	tbnz	w2, #0, 42d3a8 <wcrtomb@plt+0x28788>
  42d364:	ldr	x24, [x23, #24]
  42d368:	tbnz	w2, #1, 42d374 <wcrtomb@plt+0x28754>
  42d36c:	ldr	x0, [x25, #168]
  42d370:	add	x24, x0, x24
  42d374:	mov	x0, x23
  42d378:	mov	x19, x24
  42d37c:	bl	42bc18 <wcrtomb@plt+0x26ff8>
  42d380:	mov	x27, x0
  42d384:	add	x20, x24, w0, uxtw
  42d388:	b	42d39c <wcrtomb@plt+0x2877c>
  42d38c:	ldrb	w1, [x19], #1
  42d390:	mov	x0, x21
  42d394:	bl	404870 <strchr@plt>
  42d398:	cbnz	x0, 42d3b4 <wcrtomb@plt+0x28794>
  42d39c:	cmp	x19, x20
  42d3a0:	b.ne	42d38c <wcrtomb@plt+0x2876c>  // b.any
  42d3a4:	b	42d338 <wcrtomb@plt+0x28718>
  42d3a8:	adrp	x24, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42d3ac:	add	x24, x24, #0x948
  42d3b0:	b	42d374 <wcrtomb@plt+0x28754>
  42d3b4:	add	x0, x27, #0x1
  42d3b8:	bl	404310 <malloc@plt>
  42d3bc:	mov	x19, x0
  42d3c0:	cbz	x0, 42d43c <wcrtomb@plt+0x2881c>
  42d3c4:	mov	x1, x24
  42d3c8:	mov	x2, x27
  42d3cc:	bl	403f70 <memcpy@plt>
  42d3d0:	strb	wzr, [x19, x27]
  42d3d4:	add	x3, sp, #0x68
  42d3d8:	mov	w1, w26
  42d3dc:	mov	x0, x19
  42d3e0:	mov	x2, #0x0                   	// #0
  42d3e4:	bl	404a00 <glob@plt>
  42d3e8:	cmp	w0, #0x1
  42d3ec:	b.eq	42d468 <wcrtomb@plt+0x28848>  // b.none
  42d3f0:	cmp	w0, #0x3
  42d3f4:	b.eq	42d520 <wcrtomb@plt+0x28900>  // b.none
  42d3f8:	cbz	w0, 42d488 <wcrtomb@plt+0x28868>
  42d3fc:	mov	x0, x19
  42d400:	bl	4047b0 <free@plt>
  42d404:	ldr	w0, [x25, #32]
  42d408:	mov	w19, #0x8                   	// #8
  42d40c:	str	w19, [x25, #192]
  42d410:	tbnz	w0, #4, 42d590 <wcrtomb@plt+0x28970>
  42d414:	mov	w0, w19
  42d418:	ldp	x19, x20, [sp, #16]
  42d41c:	ldp	x21, x22, [sp, #32]
  42d420:	ldp	x23, x24, [sp, #48]
  42d424:	ldp	x25, x26, [sp, #64]
  42d428:	ldr	x27, [sp, #80]
  42d42c:	ldp	x29, x30, [sp], #304
  42d430:	ret
  42d434:	mov	x0, x1
  42d438:	bl	42b888 <wcrtomb@plt+0x26c68>
  42d43c:	mov	x0, x25
  42d440:	bl	42c2e0 <wcrtomb@plt+0x276c0>
  42d444:	ldp	x23, x24, [sp, #48]
  42d448:	mov	w19, w0
  42d44c:	ldr	x27, [sp, #80]
  42d450:	mov	w0, w19
  42d454:	ldp	x19, x20, [sp, #16]
  42d458:	ldp	x21, x22, [sp, #32]
  42d45c:	ldp	x25, x26, [sp, #64]
  42d460:	ldp	x29, x30, [sp], #304
  42d464:	ret
  42d468:	mov	x0, x19
  42d46c:	bl	4047b0 <free@plt>
  42d470:	mov	x0, x25
  42d474:	bl	42c2e0 <wcrtomb@plt+0x276c0>
  42d478:	mov	w19, w0
  42d47c:	ldp	x23, x24, [sp, #48]
  42d480:	ldr	x27, [sp, #80]
  42d484:	b	42d450 <wcrtomb@plt+0x28830>
  42d488:	mov	x0, x19
  42d48c:	bl	4047b0 <free@plt>
  42d490:	ldr	x0, [sp, #104]
  42d494:	mov	x20, x23
  42d498:	mov	x19, #0x0                   	// #0
  42d49c:	cbnz	x0, 42d4ec <wcrtomb@plt+0x288cc>
  42d4a0:	b	42d5ec <wcrtomb@plt+0x289cc>
  42d4a4:	ldr	x0, [sp, #112]
  42d4a8:	ldr	x0, [x0, x19, lsl #3]
  42d4ac:	add	x19, x19, #0x1
  42d4b0:	bl	404580 <strdup@plt>
  42d4b4:	mov	x3, x0
  42d4b8:	mov	x2, x20
  42d4bc:	mov	x0, x25
  42d4c0:	ldr	x1, [sp, #176]
  42d4c4:	cbz	x3, 42d434 <wcrtomb@plt+0x28814>
  42d4c8:	ldr	w4, [x1, #16]
  42d4cc:	str	x3, [x1, #24]
  42d4d0:	orr	w3, w4, #0x6
  42d4d4:	str	w3, [x1, #16]
  42d4d8:	bl	42bc98 <wcrtomb@plt+0x27078>
  42d4dc:	ldr	x0, [sp, #104]
  42d4e0:	ldr	x20, [sp, #176]
  42d4e4:	cmp	x0, x19
  42d4e8:	b.ls	42d5ec <wcrtomb@plt+0x289cc>  // b.plast
  42d4ec:	add	x1, sp, #0xb0
  42d4f0:	mov	x0, x25
  42d4f4:	bl	42c520 <wcrtomb@plt+0x27900>
  42d4f8:	cbz	w0, 42d4a4 <wcrtomb@plt+0x28884>
  42d4fc:	mov	w19, #0x1                   	// #1
  42d500:	mov	w0, w19
  42d504:	ldp	x19, x20, [sp, #16]
  42d508:	ldp	x21, x22, [sp, #32]
  42d50c:	ldp	x23, x24, [sp, #48]
  42d510:	ldp	x25, x26, [sp, #64]
  42d514:	ldr	x27, [sp, #80]
  42d518:	ldp	x29, x30, [sp], #304
  42d51c:	ret
  42d520:	ldr	w0, [x25, #36]
  42d524:	tbnz	w0, #0, 42d5b8 <wcrtomb@plt+0x28998>
  42d528:	tbz	w0, #1, 42d5dc <wcrtomb@plt+0x289bc>
  42d52c:	ldr	w0, [x25, #192]
  42d530:	cmp	w0, #0x9
  42d534:	b.eq	42d670 <wcrtomb@plt+0x28a50>  // b.none
  42d538:	mov	w2, #0x5                   	// #5
  42d53c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42d540:	mov	x0, #0x0                   	// #0
  42d544:	add	x1, x1, #0xc58
  42d548:	bl	4049c0 <dcgettext@plt>
  42d54c:	mov	x4, x0
  42d550:	mov	x3, #0x80                  	// #128
  42d554:	mov	x5, x19
  42d558:	mov	x1, x3
  42d55c:	mov	w2, #0x1                   	// #1
  42d560:	add	x0, sp, #0xb0
  42d564:	bl	404290 <__snprintf_chk@plt>
  42d568:	mov	x0, x19
  42d56c:	bl	4047b0 <free@plt>
  42d570:	add	x0, sp, #0xb0
  42d574:	bl	404580 <strdup@plt>
  42d578:	str	x0, [x25, #200]
  42d57c:	cbz	x0, 42d43c <wcrtomb@plt+0x2881c>
  42d580:	ldr	w0, [x25, #32]
  42d584:	mov	w19, #0x9                   	// #9
  42d588:	str	w19, [x25, #192]
  42d58c:	tbz	w0, #4, 42d414 <wcrtomb@plt+0x287f4>
  42d590:	mov	x0, x25
  42d594:	bl	42c218 <wcrtomb@plt+0x275f8>
  42d598:	mov	w0, w19
  42d59c:	ldp	x19, x20, [sp, #16]
  42d5a0:	ldp	x21, x22, [sp, #32]
  42d5a4:	ldp	x23, x24, [sp, #48]
  42d5a8:	ldp	x25, x26, [sp, #64]
  42d5ac:	ldr	x27, [sp, #80]
  42d5b0:	ldp	x29, x30, [sp], #304
  42d5b4:	ret
  42d5b8:	ldp	x0, x1, [x23]
  42d5bc:	cbz	x0, 42d65c <wcrtomb@plt+0x28a3c>
  42d5c0:	str	x1, [x0, #8]
  42d5c4:	ldr	x1, [x23, #8]
  42d5c8:	cbz	x1, 42d634 <wcrtomb@plt+0x28a14>
  42d5cc:	str	x0, [x1]
  42d5d0:	stp	xzr, xzr, [x23]
  42d5d4:	mov	x0, x23
  42d5d8:	bl	42b888 <wcrtomb@plt+0x26c68>
  42d5dc:	mov	x0, x19
  42d5e0:	bl	4047b0 <free@plt>
  42d5e4:	cbnz	x22, 42d328 <wcrtomb@plt+0x28708>
  42d5e8:	b	42d33c <wcrtomb@plt+0x2871c>
  42d5ec:	add	x0, sp, #0x68
  42d5f0:	bl	404880 <globfree@plt>
  42d5f4:	ldp	x0, x1, [x23]
  42d5f8:	cbz	x0, 42d648 <wcrtomb@plt+0x28a28>
  42d5fc:	str	x1, [x0, #8]
  42d600:	ldr	x1, [x23, #8]
  42d604:	cbz	x1, 42d620 <wcrtomb@plt+0x28a00>
  42d608:	str	x0, [x1]
  42d60c:	stp	xzr, xzr, [x23]
  42d610:	mov	x0, x23
  42d614:	bl	42b888 <wcrtomb@plt+0x26c68>
  42d618:	cbnz	x22, 42d328 <wcrtomb@plt+0x28708>
  42d61c:	b	42d33c <wcrtomb@plt+0x2871c>
  42d620:	ldr	w1, [x0, #16]
  42d624:	and	w1, w1, #0xffffffef
  42d628:	str	w1, [x0, #16]
  42d62c:	str	x0, [x25, #216]
  42d630:	b	42d60c <wcrtomb@plt+0x289ec>
  42d634:	ldr	w1, [x0, #16]
  42d638:	and	w1, w1, #0xffffffef
  42d63c:	str	w1, [x0, #16]
  42d640:	str	x0, [x25, #216]
  42d644:	b	42d5d0 <wcrtomb@plt+0x289b0>
  42d648:	str	x1, [x25, #208]
  42d64c:	ldr	x1, [x23, #8]
  42d650:	cbnz	x1, 42d608 <wcrtomb@plt+0x289e8>
  42d654:	str	x0, [x25, #216]
  42d658:	b	42d60c <wcrtomb@plt+0x289ec>
  42d65c:	str	x1, [x25, #208]
  42d660:	ldr	x1, [x23, #8]
  42d664:	cbnz	x1, 42d5cc <wcrtomb@plt+0x289ac>
  42d668:	str	x0, [x25, #216]
  42d66c:	b	42d5d0 <wcrtomb@plt+0x289b0>
  42d670:	ldr	x0, [x25, #200]
  42d674:	bl	4047b0 <free@plt>
  42d678:	b	42d538 <wcrtomb@plt+0x28918>
  42d67c:	nop
  42d680:	stp	x29, x30, [sp, #-128]!
  42d684:	mov	x29, sp
  42d688:	stp	x27, x28, [sp, #80]
  42d68c:	ldp	x28, x27, [x0, #168]
  42d690:	stp	x21, x22, [sp, #32]
  42d694:	mov	x21, x0
  42d698:	stp	x23, x24, [sp, #48]
  42d69c:	str	x1, [sp, #120]
  42d6a0:	cmp	x27, x1
  42d6a4:	ldr	x24, [x0, #64]
  42d6a8:	ldr	x22, [x0, #216]
  42d6ac:	b.ls	42d95c <wcrtomb@plt+0x28d3c>  // b.plast
  42d6b0:	stp	x25, x26, [sp, #64]
  42d6b4:	mov	w23, w2
  42d6b8:	ldr	w26, [x0, #32]
  42d6bc:	stp	x19, x20, [sp, #16]
  42d6c0:	mov	x19, x1
  42d6c4:	tbz	w26, #13, 42d6d4 <wcrtomb@plt+0x28ab4>
  42d6c8:	ldrb	w0, [x28, x1]
  42d6cc:	cmp	w0, #0x73
  42d6d0:	b.eq	42d9b4 <wcrtomb@plt+0x28d94>  // b.none
  42d6d4:	cbz	w23, 42d7f4 <wcrtomb@plt+0x28bd4>
  42d6d8:	mov	x25, x19
  42d6dc:	mov	w20, #0x0                   	// #0
  42d6e0:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42d6e4:	add	x26, x26, #0xca0
  42d6e8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42d6ec:	add	x0, x0, #0xca8
  42d6f0:	str	x0, [sp, #104]
  42d6f4:	nop
  42d6f8:	cbz	x24, 42d70c <wcrtomb@plt+0x28aec>
  42d6fc:	ldrb	w1, [x28, x19]
  42d700:	mov	x0, x24
  42d704:	bl	404870 <strchr@plt>
  42d708:	cbnz	x0, 42db84 <wcrtomb@plt+0x28f64>
  42d70c:	ldr	w0, [x21, #32]
  42d710:	tst	w0, #0x600
  42d714:	b.eq	42d744 <wcrtomb@plt+0x28b24>  // b.none
  42d718:	ldrb	w1, [x28, x19]
  42d71c:	cmp	w1, #0x5c
  42d720:	b.eq	42d944 <wcrtomb@plt+0x28d24>  // b.none
  42d724:	cmp	w1, #0x27
  42d728:	and	w2, w0, #0x200
  42d72c:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  42d730:	b.ne	42d8b0 <wcrtomb@plt+0x28c90>  // b.any
  42d734:	and	w0, w0, #0x400
  42d738:	cmp	w1, #0x22
  42d73c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  42d740:	b.ne	42d8b0 <wcrtomb@plt+0x28c90>  // b.any
  42d744:	ldr	x19, [sp, #120]
  42d748:	ldrb	w0, [x28, x19]
  42d74c:	cmp	w0, #0x24
  42d750:	b.eq	42d860 <wcrtomb@plt+0x28c40>  // b.none
  42d754:	cbnz	w23, 42d768 <wcrtomb@plt+0x28b48>
  42d758:	ldrb	w1, [x28, x19]
  42d75c:	ldr	x0, [x21, #56]
  42d760:	bl	404870 <strchr@plt>
  42d764:	cbnz	x0, 42d778 <wcrtomb@plt+0x28b58>
  42d768:	add	x19, x19, #0x1
  42d76c:	str	x19, [sp, #120]
  42d770:	cmp	x27, x19
  42d774:	b.hi	42d6f8 <wcrtomb@plt+0x28ad8>  // b.pmore
  42d778:	mov	x27, x19
  42d77c:	mov	x19, x25
  42d780:	cbz	w20, 42d790 <wcrtomb@plt+0x28b70>
  42d784:	cmp	x25, x27
  42d788:	mov	w20, #0x0                   	// #0
  42d78c:	b.cc	42d99c <wcrtomb@plt+0x28d7c>  // b.lo, b.ul, b.last
  42d790:	mov	w3, w20
  42d794:	mov	x2, x27
  42d798:	mov	x1, x19
  42d79c:	mov	x0, x21
  42d7a0:	bl	42c570 <wcrtomb@plt+0x27950>
  42d7a4:	cbnz	w0, 42d840 <wcrtomb@plt+0x28c20>
  42d7a8:	ldr	w1, [x21, #32]
  42d7ac:	ldr	x2, [sp, #120]
  42d7b0:	str	x2, [x21, #184]
  42d7b4:	tbnz	w1, #29, 42da90 <wcrtomb@plt+0x28e70>
  42d7b8:	cbz	w23, 42d7d4 <wcrtomb@plt+0x28bb4>
  42d7bc:	cbz	x22, 42db78 <wcrtomb@plt+0x28f58>
  42d7c0:	ldr	w0, [x22, #16]
  42d7c4:	orr	w0, w0, #0x4
  42d7c8:	str	w0, [x22, #16]
  42d7cc:	ldr	x22, [x22, #8]
  42d7d0:	cbnz	x22, 42d7c0 <wcrtomb@plt+0x28ba0>
  42d7d4:	mov	w0, #0x1                   	// #1
  42d7d8:	ldp	x19, x20, [sp, #16]
  42d7dc:	ldp	x21, x22, [sp, #32]
  42d7e0:	ldp	x23, x24, [sp, #48]
  42d7e4:	ldp	x25, x26, [sp, #64]
  42d7e8:	ldp	x27, x28, [sp, #80]
  42d7ec:	ldp	x29, x30, [sp], #128
  42d7f0:	ret
  42d7f4:	ldrb	w1, [x28, x19]
  42d7f8:	mov	x25, x19
  42d7fc:	ldr	x0, [x21, #56]
  42d800:	mov	w20, #0x0                   	// #0
  42d804:	bl	404870 <strchr@plt>
  42d808:	cbz	x0, 42d6e0 <wcrtomb@plt+0x28ac0>
  42d80c:	ldr	x0, [x21, #32]
  42d810:	and	x0, x0, #0xfffffff000
  42d814:	and	x0, x0, #0xffffff8000001fff
  42d818:	cbz	x0, 42da54 <wcrtomb@plt+0x28e34>
  42d81c:	add	x27, x19, #0x1
  42d820:	mov	w20, #0x40                  	// #64
  42d824:	mov	x2, x27
  42d828:	mov	w3, w20
  42d82c:	mov	x1, x19
  42d830:	mov	x0, x21
  42d834:	str	x27, [sp, #120]
  42d838:	bl	42c570 <wcrtomb@plt+0x27950>
  42d83c:	cbz	w0, 42d7a8 <wcrtomb@plt+0x28b88>
  42d840:	ldp	x19, x20, [sp, #16]
  42d844:	mov	w0, #0x2                   	// #2
  42d848:	ldp	x25, x26, [sp, #64]
  42d84c:	ldp	x21, x22, [sp, #32]
  42d850:	ldp	x23, x24, [sp, #48]
  42d854:	ldp	x27, x28, [sp, #80]
  42d858:	ldp	x29, x30, [sp], #128
  42d85c:	ret
  42d860:	ldr	w0, [x21, #32]
  42d864:	tbnz	w0, #6, 42d878 <wcrtomb@plt+0x28c58>
  42d868:	add	x1, x28, x19
  42d86c:	ldrb	w1, [x1, #1]
  42d870:	cmp	w1, #0x7b
  42d874:	b.eq	42da68 <wcrtomb@plt+0x28e48>  // b.none
  42d878:	tbnz	w0, #2, 42d754 <wcrtomb@plt+0x28b34>
  42d87c:	add	x0, x28, x19
  42d880:	ldrb	w0, [x0, #1]
  42d884:	cmp	w0, #0x28
  42d888:	b.ne	42d754 <wcrtomb@plt+0x28b34>  // b.any
  42d88c:	ldr	x4, [sp, #104]
  42d890:	add	x1, x19, #0x2
  42d894:	add	x3, sp, #0x78
  42d898:	mov	x2, x27
  42d89c:	mov	x0, x28
  42d8a0:	bl	42b788 <wcrtomb@plt+0x26b68>
  42d8a4:	ldr	x19, [sp, #120]
  42d8a8:	cbnz	w0, 42d754 <wcrtomb@plt+0x28b34>
  42d8ac:	b	42d770 <wcrtomb@plt+0x28b50>
  42d8b0:	cbnz	w20, 42d984 <wcrtomb@plt+0x28d64>
  42d8b4:	mov	x2, x19
  42d8b8:	mov	x1, x25
  42d8bc:	mov	x0, x21
  42d8c0:	mov	w3, #0x10                  	// #16
  42d8c4:	bl	42c570 <wcrtomb@plt+0x27950>
  42d8c8:	cbnz	w0, 42d840 <wcrtomb@plt+0x28c20>
  42d8cc:	ldp	x4, x6, [x21, #168]
  42d8d0:	ldr	x8, [sp, #120]
  42d8d4:	add	x1, x8, #0x1
  42d8d8:	ldrb	w2, [x4, x8]
  42d8dc:	cmp	x6, x1
  42d8e0:	b.ls	42daac <wcrtomb@plt+0x28e8c>  // b.plast
  42d8e4:	mov	x19, x1
  42d8e8:	mov	w7, #0x5c                  	// #92
  42d8ec:	b	42d904 <wcrtomb@plt+0x28ce4>
  42d8f0:	cmp	w2, #0x22
  42d8f4:	ccmp	w0, w7, #0x0, eq  // eq = none
  42d8f8:	csinc	x19, x3, x19, eq  // eq = none
  42d8fc:	cmp	x6, x19
  42d900:	b.ls	42daac <wcrtomb@plt+0x28e8c>  // b.plast
  42d904:	ldrb	w0, [x4, x19]
  42d908:	add	x3, x19, #0x2
  42d90c:	cmp	w2, w0
  42d910:	b.ne	42d8f0 <wcrtomb@plt+0x28cd0>  // b.any
  42d914:	cmp	w2, #0x27
  42d918:	mov	w0, #0x104                 	// #260
  42d91c:	mov	w3, #0x10c                 	// #268
  42d920:	mov	x2, x19
  42d924:	csel	w3, w3, w0, eq  // eq = none
  42d928:	mov	x0, x21
  42d92c:	bl	42c570 <wcrtomb@plt+0x27950>
  42d930:	cbnz	w0, 42d840 <wcrtomb@plt+0x28c20>
  42d934:	add	x25, x19, #0x1
  42d938:	mov	w20, #0x1                   	// #1
  42d93c:	str	x19, [sp, #120]
  42d940:	b	42d748 <wcrtomb@plt+0x28b28>
  42d944:	add	x0, x19, #0x1
  42d948:	cmp	x0, x27
  42d94c:	b.eq	42d978 <wcrtomb@plt+0x28d58>  // b.none
  42d950:	add	x19, x19, #0x2
  42d954:	str	x19, [sp, #120]
  42d958:	b	42d770 <wcrtomb@plt+0x28b50>
  42d95c:	str	wzr, [x21, #192]
  42d960:	mov	w0, #0x0                   	// #0
  42d964:	ldp	x21, x22, [sp, #32]
  42d968:	ldp	x23, x24, [sp, #48]
  42d96c:	ldp	x27, x28, [sp, #80]
  42d970:	ldp	x29, x30, [sp], #128
  42d974:	ret
  42d978:	mov	x19, x25
  42d97c:	str	x27, [sp, #120]
  42d980:	b	42d780 <wcrtomb@plt+0x28b60>
  42d984:	ldr	x0, [x21, #216]
  42d988:	cbz	x0, 42d8b4 <wcrtomb@plt+0x28c94>
  42d98c:	ldr	w1, [x0, #16]
  42d990:	orr	w1, w1, #0x10
  42d994:	str	w1, [x0, #16]
  42d998:	b	42d8b4 <wcrtomb@plt+0x28c94>
  42d99c:	ldr	x0, [x21, #216]
  42d9a0:	cbz	x0, 42d790 <wcrtomb@plt+0x28b70>
  42d9a4:	ldr	w1, [x0, #16]
  42d9a8:	orr	w1, w1, #0x10
  42d9ac:	str	w1, [x0, #16]
  42d9b0:	b	42d790 <wcrtomb@plt+0x28b70>
  42d9b4:	add	x0, x1, #0x3
  42d9b8:	cmp	x0, x27
  42d9bc:	b.cs	42d6d4 <wcrtomb@plt+0x28ab4>  // b.hs, b.nlast
  42d9c0:	add	x1, x28, x1
  42d9c4:	adrp	x25, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42d9c8:	add	x25, x25, #0xc78
  42d9cc:	mov	x20, x19
  42d9d0:	mov	x0, x25
  42d9d4:	ldrb	w1, [x1, #1]
  42d9d8:	bl	404870 <strchr@plt>
  42d9dc:	cbz	x0, 42d6d4 <wcrtomb@plt+0x28ab4>
  42d9e0:	sub	x26, x28, #0x1
  42d9e4:	nop
  42d9e8:	add	x0, x20, #0x3
  42d9ec:	cmp	x27, x0
  42d9f0:	b.ls	42da44 <wcrtomb@plt+0x28e24>  // b.plast
  42d9f4:	add	x1, x28, x20
  42d9f8:	mov	x0, x25
  42d9fc:	ldrb	w24, [x1, #1]
  42da00:	mov	w1, w24
  42da04:	bl	404870 <strchr@plt>
  42da08:	cbz	x0, 42da44 <wcrtomb@plt+0x28e24>
  42da0c:	add	x20, x20, #0x2
  42da10:	cmp	x27, x20
  42da14:	b.ls	42da44 <wcrtomb@plt+0x28e24>  // b.plast
  42da18:	mov	w1, #0x1                   	// #1
  42da1c:	nop
  42da20:	ldrb	w0, [x28, x20]
  42da24:	add	x2, x20, #0x1
  42da28:	cmp	w0, #0x5c
  42da2c:	b.eq	42dacc <wcrtomb@plt+0x28eac>  // b.none
  42da30:	cmp	w24, w0
  42da34:	b.eq	42dad4 <wcrtomb@plt+0x28eb4>  // b.none
  42da38:	mov	x20, x2
  42da3c:	cmp	x27, x20
  42da40:	b.hi	42da20 <wcrtomb@plt+0x28e00>  // b.pmore
  42da44:	sxtw	x27, w20
  42da48:	mov	w20, #0x20                  	// #32
  42da4c:	str	x27, [sp, #120]
  42da50:	b	42d790 <wcrtomb@plt+0x28b70>
  42da54:	tst	x26, #0x800
  42da58:	mov	w20, #0x100                 	// #256
  42da5c:	mov	x27, x19
  42da60:	csel	w20, w20, wzr, eq  // eq = none
  42da64:	b	42d790 <wcrtomb@plt+0x28b70>
  42da68:	add	x1, x19, #0x2
  42da6c:	mov	x4, x26
  42da70:	add	x3, sp, #0x78
  42da74:	mov	x2, x27
  42da78:	mov	x0, x28
  42da7c:	bl	42b788 <wcrtomb@plt+0x26b68>
  42da80:	ldr	x19, [sp, #120]
  42da84:	cbz	w0, 42d770 <wcrtomb@plt+0x28b50>
  42da88:	ldr	w0, [x21, #32]
  42da8c:	b	42d878 <wcrtomb@plt+0x28c58>
  42da90:	ldp	x19, x20, [sp, #16]
  42da94:	ldp	x21, x22, [sp, #32]
  42da98:	ldp	x23, x24, [sp, #48]
  42da9c:	ldp	x25, x26, [sp, #64]
  42daa0:	ldp	x27, x28, [sp, #80]
  42daa4:	ldp	x29, x30, [sp], #128
  42daa8:	ret
  42daac:	ldr	w0, [x21, #32]
  42dab0:	mov	w1, #0x1                   	// #1
  42dab4:	str	x8, [x21, #184]
  42dab8:	str	w1, [x21, #192]
  42dabc:	tbz	w0, #4, 42d840 <wcrtomb@plt+0x28c20>
  42dac0:	mov	x0, x21
  42dac4:	bl	42c218 <wcrtomb@plt+0x275f8>
  42dac8:	b	42d840 <wcrtomb@plt+0x28c20>
  42dacc:	add	x20, x20, #0x2
  42dad0:	b	42da3c <wcrtomb@plt+0x28e1c>
  42dad4:	add	w1, w1, #0x1
  42dad8:	cmp	x27, x2
  42dadc:	b.ls	42dbd8 <wcrtomb@plt+0x28fb8>  // b.plast
  42dae0:	cmp	w1, #0x3
  42dae4:	b.eq	42daf0 <wcrtomb@plt+0x28ed0>  // b.none
  42dae8:	mov	x20, x2
  42daec:	b	42da20 <wcrtomb@plt+0x28e00>
  42daf0:	ldrb	w0, [x28, x2]
  42daf4:	cmp	w24, w0
  42daf8:	b.eq	42dbe0 <wcrtomb@plt+0x28fc0>  // b.none
  42dafc:	add	x20, x20, #0x2
  42db00:	b	42db14 <wcrtomb@plt+0x28ef4>
  42db04:	ldrb	w0, [x26, x3]
  42db08:	cmp	w24, w0
  42db0c:	b.eq	42db50 <wcrtomb@plt+0x28f30>  // b.none
  42db10:	mov	x20, x3
  42db14:	and	w2, w0, #0xffffffdf
  42db18:	sub	w0, w0, #0x30
  42db1c:	sub	w2, w2, #0x41
  42db20:	add	x3, x20, #0x1
  42db24:	and	w2, w2, #0xff
  42db28:	and	w0, w0, #0xff
  42db2c:	cmp	w2, #0x19
  42db30:	sub	x1, x20, #0x1
  42db34:	b.ls	42db40 <wcrtomb@plt+0x28f20>  // b.plast
  42db38:	cmp	w0, #0x9
  42db3c:	b.hi	42db4c <wcrtomb@plt+0x28f2c>  // b.pmore
  42db40:	cmp	x27, x20
  42db44:	b.hi	42db04 <wcrtomb@plt+0x28ee4>  // b.pmore
  42db48:	b	42da44 <wcrtomb@plt+0x28e24>
  42db4c:	mov	x20, x1
  42db50:	cmp	x27, x20
  42db54:	b.ls	42da44 <wcrtomb@plt+0x28e24>  // b.plast
  42db58:	ldrb	w0, [x28, x20]
  42db5c:	cmp	w0, #0x3b
  42db60:	b.ne	42da44 <wcrtomb@plt+0x28e24>  // b.any
  42db64:	add	x20, x20, #0x1
  42db68:	ldrb	w0, [x28, x20]
  42db6c:	cmp	w0, #0x73
  42db70:	b.eq	42d9e8 <wcrtomb@plt+0x28dc8>  // b.none
  42db74:	b	42da44 <wcrtomb@plt+0x28e24>
  42db78:	ldr	x22, [x21, #208]
  42db7c:	cbnz	x22, 42d7c0 <wcrtomb@plt+0x28ba0>
  42db80:	b	42d7d4 <wcrtomb@plt+0x28bb4>
  42db84:	add	x20, x19, #0x1
  42db88:	cmp	x27, x20
  42db8c:	b.hi	42dba0 <wcrtomb@plt+0x28f80>  // b.pmore
  42db90:	b	42dbac <wcrtomb@plt+0x28f8c>
  42db94:	add	x20, x20, #0x1
  42db98:	cmp	x27, x20
  42db9c:	b.ls	42dbac <wcrtomb@plt+0x28f8c>  // b.plast
  42dba0:	ldrb	w0, [x28, x20]
  42dba4:	cmp	w0, #0xa
  42dba8:	b.ne	42db94 <wcrtomb@plt+0x28f74>  // b.any
  42dbac:	mov	x2, x19
  42dbb0:	mov	x1, x25
  42dbb4:	mov	x0, x21
  42dbb8:	mov	w3, #0x0                   	// #0
  42dbbc:	bl	42c570 <wcrtomb@plt+0x27950>
  42dbc0:	cbnz	w0, 42d840 <wcrtomb@plt+0x28c20>
  42dbc4:	mov	w0, #0x1                   	// #1
  42dbc8:	ldp	x25, x26, [sp, #64]
  42dbcc:	str	x20, [x21, #184]
  42dbd0:	ldp	x19, x20, [sp, #16]
  42dbd4:	b	42d84c <wcrtomb@plt+0x28c2c>
  42dbd8:	mov	x20, x2
  42dbdc:	b	42da44 <wcrtomb@plt+0x28e24>
  42dbe0:	mov	x20, x2
  42dbe4:	b	42db5c <wcrtomb@plt+0x28f3c>
  42dbe8:	stp	x29, x30, [sp, #-64]!
  42dbec:	mov	x29, sp
  42dbf0:	stp	x19, x20, [sp, #16]
  42dbf4:	mov	x20, x0
  42dbf8:	ldr	w0, [x0, #32]
  42dbfc:	stp	x21, x22, [sp, #32]
  42dc00:	mov	x19, x1
  42dc04:	tbnz	w0, #21, 42de10 <wcrtomb@plt+0x291f0>
  42dc08:	tbnz	w0, #22, 42ddb4 <wcrtomb@plt+0x29194>
  42dc0c:	ldr	w0, [x20, #36]
  42dc10:	tbnz	w0, #7, 42dda4 <wcrtomb@plt+0x29184>
  42dc14:	mov	x21, #0x1000                	// #4096
  42dc18:	movk	x21, #0x80, lsl #32
  42dc1c:	b	42dc30 <wcrtomb@plt+0x29010>
  42dc20:	ldr	x0, [x20, #32]
  42dc24:	ldr	x19, [x20, #184]
  42dc28:	tst	x0, x21
  42dc2c:	cinc	x19, x19, eq  // eq = none
  42dc30:	mov	x1, x19
  42dc34:	mov	x0, x20
  42dc38:	mov	w2, #0x0                   	// #0
  42dc3c:	bl	42d680 <wcrtomb@plt+0x28a60>
  42dc40:	cmp	w0, #0x1
  42dc44:	b.eq	42dc20 <wcrtomb@plt+0x29000>  // b.none
  42dc48:	ldr	x1, [x20, #216]
  42dc4c:	cbz	x1, 42dc5c <wcrtomb@plt+0x2903c>
  42dc50:	ldr	w2, [x1, #16]
  42dc54:	and	w2, w2, #0xffffffef
  42dc58:	str	w2, [x1, #16]
  42dc5c:	cmp	w0, #0x2
  42dc60:	b.eq	42dcec <wcrtomb@plt+0x290cc>  // b.none
  42dc64:	ldr	w0, [x20, #32]
  42dc68:	tbnz	w0, #21, 42ddd4 <wcrtomb@plt+0x291b4>
  42dc6c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  42dc70:	add	x0, x0, #0x260
  42dc74:	add	x21, x0, #0x60
  42dc78:	ldr	x0, [x0, #96]
  42dc7c:	cbz	x0, 42dcec <wcrtomb@plt+0x290cc>
  42dc80:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42dc84:	add	x22, x22, #0xcd8
  42dc88:	stp	x23, x24, [sp, #48]
  42dc8c:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42dc90:	add	x23, x23, #0xce8
  42dc94:	nop
  42dc98:	ldp	w2, w1, [x21, #8]
  42dc9c:	ldr	w3, [x20, #32]
  42dca0:	and	w0, w2, w3
  42dca4:	tbz	w1, #1, 42dcb0 <wcrtomb@plt+0x29090>
  42dca8:	cmp	w2, w0
  42dcac:	cset	w0, eq  // eq = none
  42dcb0:	tbz	w1, #0, 42dcbc <wcrtomb@plt+0x2909c>
  42dcb4:	cmp	w0, #0x0
  42dcb8:	cset	w0, eq  // eq = none
  42dcbc:	cbz	w0, 42dce0 <wcrtomb@plt+0x290c0>
  42dcc0:	tbnz	w1, #2, 42dd00 <wcrtomb@plt+0x290e0>
  42dcc4:	ldr	x1, [x21, #16]
  42dcc8:	cbz	x1, 42dce0 <wcrtomb@plt+0x290c0>
  42dccc:	mov	x0, x20
  42dcd0:	blr	x1
  42dcd4:	cbnz	w0, 42dce8 <wcrtomb@plt+0x290c8>
  42dcd8:	ldr	w0, [x20, #32]
  42dcdc:	tbnz	w0, #21, 42dd70 <wcrtomb@plt+0x29150>
  42dce0:	ldr	x0, [x21, #24]!
  42dce4:	cbnz	x0, 42dc98 <wcrtomb@plt+0x29078>
  42dce8:	ldp	x23, x24, [sp, #48]
  42dcec:	ldr	w0, [x20, #192]
  42dcf0:	ldp	x19, x20, [sp, #16]
  42dcf4:	ldp	x21, x22, [sp, #32]
  42dcf8:	ldp	x29, x30, [sp], #64
  42dcfc:	ret
  42dd00:	ldr	x19, [x20, #208]
  42dd04:	cbnz	x19, 42dd14 <wcrtomb@plt+0x290f4>
  42dd08:	b	42dd38 <wcrtomb@plt+0x29118>
  42dd0c:	ldr	x19, [x19, #8]
  42dd10:	cbz	x19, 42dd34 <wcrtomb@plt+0x29114>
  42dd14:	ldr	w0, [x19, #16]
  42dd18:	tbz	w0, #4, 42dd0c <wcrtomb@plt+0x290ec>
  42dd1c:	mov	x1, x19
  42dd20:	mov	x0, x20
  42dd24:	bl	42cf90 <wcrtomb@plt+0x28370>
  42dd28:	cbnz	w0, 42dce8 <wcrtomb@plt+0x290c8>
  42dd2c:	ldr	x19, [x19, #8]
  42dd30:	cbnz	x19, 42dd14 <wcrtomb@plt+0x290f4>
  42dd34:	ldr	w3, [x20, #32]
  42dd38:	tbz	w3, #21, 42dcc4 <wcrtomb@plt+0x290a4>
  42dd3c:	ldr	w24, [x20, #224]
  42dd40:	mov	x1, x23
  42dd44:	ldr	x19, [x20, #104]
  42dd48:	mov	w2, #0x5                   	// #5
  42dd4c:	mov	x0, #0x0                   	// #0
  42dd50:	bl	4049c0 <dcgettext@plt>
  42dd54:	mov	w1, w24
  42dd58:	mov	x2, x0
  42dd5c:	mov	x0, x22
  42dd60:	blr	x19
  42dd64:	mov	x0, x20
  42dd68:	bl	42b6b8 <wcrtomb@plt+0x26a98>
  42dd6c:	b	42dcc4 <wcrtomb@plt+0x290a4>
  42dd70:	ldr	x1, [x21]
  42dd74:	mov	w2, #0x5                   	// #5
  42dd78:	ldr	w24, [x20, #224]
  42dd7c:	mov	x0, #0x0                   	// #0
  42dd80:	ldr	x19, [x20, #104]
  42dd84:	bl	4049c0 <dcgettext@plt>
  42dd88:	mov	w1, w24
  42dd8c:	mov	x2, x0
  42dd90:	mov	x0, x22
  42dd94:	blr	x19
  42dd98:	mov	x0, x20
  42dd9c:	bl	42b6b8 <wcrtomb@plt+0x26a98>
  42dda0:	b	42dce0 <wcrtomb@plt+0x290c0>
  42dda4:	ldp	x1, x0, [x20, #40]
  42dda8:	add	x0, x0, #0x1
  42ddac:	cmp	x0, x1
  42ddb0:	b.ne	42dc14 <wcrtomb@plt+0x28ff4>  // b.any
  42ddb4:	mov	x1, x19
  42ddb8:	mov	x0, x20
  42ddbc:	mov	w2, #0x1                   	// #1
  42ddc0:	bl	42d680 <wcrtomb@plt+0x28a60>
  42ddc4:	cmp	w0, #0x2
  42ddc8:	b.eq	42dcec <wcrtomb@plt+0x290cc>  // b.none
  42ddcc:	ldr	w0, [x20, #32]
  42ddd0:	tbz	w0, #21, 42dc6c <wcrtomb@plt+0x2904c>
  42ddd4:	ldr	w21, [x20, #224]
  42ddd8:	mov	w2, #0x5                   	// #5
  42dddc:	ldr	x19, [x20, #104]
  42dde0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42dde4:	mov	x0, #0x0                   	// #0
  42dde8:	add	x1, x1, #0xcc8
  42ddec:	bl	4049c0 <dcgettext@plt>
  42ddf0:	mov	x2, x0
  42ddf4:	mov	w1, w21
  42ddf8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ddfc:	add	x0, x0, #0xcd8
  42de00:	blr	x19
  42de04:	mov	x0, x20
  42de08:	bl	42b6b8 <wcrtomb@plt+0x26a98>
  42de0c:	b	42dc6c <wcrtomb@plt+0x2904c>
  42de10:	mov	w2, #0x5                   	// #5
  42de14:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42de18:	mov	x0, #0x0                   	// #0
  42de1c:	add	x1, x1, #0xcb0
  42de20:	ldr	x21, [x20, #104]
  42de24:	bl	4049c0 <dcgettext@plt>
  42de28:	ldr	w2, [x20, #176]
  42de2c:	ldr	w1, [x20, #224]
  42de30:	ldr	x3, [x20, #168]
  42de34:	blr	x21
  42de38:	ldr	w0, [x20, #32]
  42de3c:	b	42dc08 <wcrtomb@plt+0x28fe8>
  42de40:	stp	x29, x30, [sp, #-80]!
  42de44:	mov	x29, sp
  42de48:	stp	x21, x22, [sp, #32]
  42de4c:	mov	x21, #0x1000                	// #4096
  42de50:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42de54:	movk	x21, #0x80, lsl #32
  42de58:	add	x22, x22, #0xcf8
  42de5c:	stp	x19, x20, [sp, #16]
  42de60:	mov	x20, x0
  42de64:	b	42ded8 <wcrtomb@plt+0x292b8>
  42de68:	ldr	w0, [x20, #32]
  42de6c:	tbz	w0, #12, 42df44 <wcrtomb@plt+0x29324>
  42de70:	tbz	w0, #11, 42df8c <wcrtomb@plt+0x2936c>
  42de74:	tbnz	w3, #0, 42df94 <wcrtomb@plt+0x29374>
  42de78:	ldr	x5, [x1, #24]
  42de7c:	tbz	w3, #1, 42dfa8 <wcrtomb@plt+0x29388>
  42de80:	mov	x3, x5
  42de84:	ldrb	w3, [x3]
  42de88:	cbz	w4, 42df9c <wcrtomb@plt+0x2937c>
  42de8c:	cmp	w3, w4
  42de90:	b.eq	42e044 <wcrtomb@plt+0x29424>  // b.none
  42de94:	add	x3, x19, #0x1
  42de98:	mov	w4, #0x0                   	// #0
  42de9c:	nop
  42dea0:	add	x19, x3, #0x1
  42dea4:	tbz	w0, #29, 42df30 <wcrtomb@plt+0x29310>
  42dea8:	cbnz	x19, 42e064 <wcrtomb@plt+0x29444>
  42deac:	ldp	x2, x1, [x20, #176]
  42deb0:	cmp	x1, x2
  42deb4:	b.cs	42e170 <wcrtomb@plt+0x29550>  // b.hs, b.nlast
  42deb8:	tbnz	w0, #21, 42e024 <wcrtomb@plt+0x29404>
  42debc:	ldr	x2, [x20, #32]
  42dec0:	mov	x0, x20
  42dec4:	tst	x2, x21
  42dec8:	cinc	x1, x1, eq  // eq = none
  42decc:	bl	42dbe8 <wcrtomb@plt+0x28fc8>
  42ded0:	mov	w19, w0
  42ded4:	cbnz	w0, 42dffc <wcrtomb@plt+0x293dc>
  42ded8:	ldr	x2, [x20, #208]
  42dedc:	cbz	x2, 42e18c <wcrtomb@plt+0x2956c>
  42dee0:	mov	w4, #0x0                   	// #0
  42dee4:	mov	x19, #0x0                   	// #0
  42dee8:	ldr	w3, [x2, #16]
  42deec:	mov	x1, x2
  42def0:	ldr	x2, [x2, #8]
  42def4:	tbnz	w3, #6, 42de68 <wcrtomb@plt+0x29248>
  42def8:	ldr	w0, [x20, #36]
  42defc:	cmp	w4, #0x0
  42df00:	cinc	x19, x19, ne  // ne = any
  42df04:	tbz	w0, #7, 42df1c <wcrtomb@plt+0x292fc>
  42df08:	ldp	x4, x0, [x20, #40]
  42df0c:	add	x0, x0, #0x1
  42df10:	add	x0, x0, x19
  42df14:	cmp	x0, x4
  42df18:	b.eq	42dfb4 <wcrtomb@plt+0x29394>  // b.none
  42df1c:	ldr	w0, [x20, #32]
  42df20:	mov	x3, x19
  42df24:	add	x19, x3, #0x1
  42df28:	mov	w4, #0x0                   	// #0
  42df2c:	tbnz	w0, #29, 42dea8 <wcrtomb@plt+0x29288>
  42df30:	cbnz	x2, 42dee8 <wcrtomb@plt+0x292c8>
  42df34:	cbz	x19, 42e18c <wcrtomb@plt+0x2956c>
  42df38:	add	x1, x19, #0x1
  42df3c:	stp	x25, x26, [sp, #64]
  42df40:	b	42e06c <wcrtomb@plt+0x2944c>
  42df44:	ldr	w5, [x20, #36]
  42df48:	mov	x3, x19
  42df4c:	tbz	w5, #7, 42dea0 <wcrtomb@plt+0x29280>
  42df50:	ldr	x0, [x1]
  42df54:	cbz	x0, 42e010 <wcrtomb@plt+0x293f0>
  42df58:	str	x2, [x0, #8]
  42df5c:	ldr	x3, [x1, #8]
  42df60:	cbz	x3, 42df74 <wcrtomb@plt+0x29354>
  42df64:	str	x0, [x3]
  42df68:	stp	xzr, xzr, [x1]
  42df6c:	cbnz	x2, 42dee8 <wcrtomb@plt+0x292c8>
  42df70:	b	42df34 <wcrtomb@plt+0x29314>
  42df74:	ldr	w3, [x0, #16]
  42df78:	and	w3, w3, #0xffffffef
  42df7c:	str	w3, [x0, #16]
  42df80:	str	x0, [x20, #216]
  42df84:	stp	xzr, xzr, [x1]
  42df88:	b	42df6c <wcrtomb@plt+0x2934c>
  42df8c:	mov	x3, x19
  42df90:	b	42dea0 <wcrtomb@plt+0x29280>
  42df94:	mov	w3, #0x0                   	// #0
  42df98:	cbnz	w4, 42de94 <wcrtomb@plt+0x29274>
  42df9c:	mov	w4, w3
  42dfa0:	cbnz	x2, 42dee8 <wcrtomb@plt+0x292c8>
  42dfa4:	b	42df34 <wcrtomb@plt+0x29314>
  42dfa8:	ldr	x3, [x20, #168]
  42dfac:	add	x3, x3, x5
  42dfb0:	b	42de84 <wcrtomb@plt+0x29264>
  42dfb4:	mov	x4, x1
  42dfb8:	cbnz	x2, 42dfc8 <wcrtomb@plt+0x293a8>
  42dfbc:	b	42dff0 <wcrtomb@plt+0x293d0>
  42dfc0:	ldr	w3, [x2, #16]
  42dfc4:	mov	x2, x0
  42dfc8:	ldr	x0, [x2, #8]
  42dfcc:	orr	w3, w3, #0x10
  42dfd0:	str	w3, [x4, #16]
  42dfd4:	mov	x4, x2
  42dfd8:	cbnz	x0, 42dfc0 <wcrtomb@plt+0x293a0>
  42dfdc:	ldr	w0, [x1, #16]
  42dfe0:	tbz	w0, #4, 42dff0 <wcrtomb@plt+0x293d0>
  42dfe4:	mov	x0, x20
  42dfe8:	bl	42cf90 <wcrtomb@plt+0x28370>
  42dfec:	cbnz	w0, 42dff8 <wcrtomb@plt+0x293d8>
  42dff0:	add	x19, x19, #0x1
  42dff4:	b	42df34 <wcrtomb@plt+0x29314>
  42dff8:	ldr	w19, [x20, #192]
  42dffc:	mov	w0, w19
  42e000:	ldp	x19, x20, [sp, #16]
  42e004:	ldp	x21, x22, [sp, #32]
  42e008:	ldp	x29, x30, [sp], #80
  42e00c:	ret
  42e010:	str	x2, [x20, #208]
  42e014:	ldr	x3, [x1, #8]
  42e018:	cbz	x3, 42df80 <wcrtomb@plt+0x29360>
  42e01c:	str	x0, [x3]
  42e020:	b	42df68 <wcrtomb@plt+0x29348>
  42e024:	ldr	x19, [x20, #104]
  42e028:	mov	x1, x22
  42e02c:	mov	w2, #0x5                   	// #5
  42e030:	mov	x0, #0x0                   	// #0
  42e034:	bl	4049c0 <dcgettext@plt>
  42e038:	blr	x19
  42e03c:	ldr	x1, [x20, #184]
  42e040:	b	42debc <wcrtomb@plt+0x2929c>
  42e044:	ldr	x0, [x1]
  42e048:	cbz	x0, 42e010 <wcrtomb@plt+0x293f0>
  42e04c:	str	x2, [x0, #8]
  42e050:	cbnz	x2, 42e014 <wcrtomb@plt+0x293f4>
  42e054:	ldr	w3, [x0, #16]
  42e058:	and	w3, w3, #0xffffffef
  42e05c:	str	w3, [x0, #16]
  42e060:	b	42e014 <wcrtomb@plt+0x293f4>
  42e064:	add	x1, x3, #0x2
  42e068:	stp	x25, x26, [sp, #64]
  42e06c:	mov	x0, x20
  42e070:	adrp	x25, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42e074:	bl	42c370 <wcrtomb@plt+0x27750>
  42e078:	add	x25, x25, #0x948
  42e07c:	mov	w19, w0
  42e080:	cbnz	w0, 42e1b4 <wcrtomb@plt+0x29594>
  42e084:	stp	x23, x24, [sp, #48]
  42e088:	ldr	x21, [x20, #208]
  42e08c:	cbz	x21, 42e1d0 <wcrtomb@plt+0x295b0>
  42e090:	ldr	w0, [x21, #16]
  42e094:	mov	x26, x25
  42e098:	tbnz	w0, #0, 42e0ac <wcrtomb@plt+0x2948c>
  42e09c:	ldr	x26, [x21, #24]
  42e0a0:	tbnz	w0, #1, 42e0ac <wcrtomb@plt+0x2948c>
  42e0a4:	ldr	x0, [x20, #168]
  42e0a8:	add	x26, x0, x26
  42e0ac:	mov	x0, x21
  42e0b0:	bl	42bc18 <wcrtomb@plt+0x26ff8>
  42e0b4:	mov	x22, x0
  42e0b8:	add	x0, x0, #0x1
  42e0bc:	bl	404310 <malloc@plt>
  42e0c0:	mov	x23, x0
  42e0c4:	ldp	x24, x1, [x20]
  42e0c8:	ldr	x2, [x20, #16]
  42e0cc:	add	x2, x24, x2
  42e0d0:	str	x0, [x1, x2, lsl #3]
  42e0d4:	cbz	x0, 42e1ec <wcrtomb@plt+0x295cc>
  42e0d8:	mov	x1, x26
  42e0dc:	mov	x2, x22
  42e0e0:	bl	403f70 <memcpy@plt>
  42e0e4:	strb	wzr, [x23, x22]
  42e0e8:	ldp	x0, x1, [x21]
  42e0ec:	cbz	x0, 42e15c <wcrtomb@plt+0x2953c>
  42e0f0:	str	x1, [x0, #8]
  42e0f4:	ldr	x1, [x21, #8]
  42e0f8:	cbz	x1, 42e148 <wcrtomb@plt+0x29528>
  42e0fc:	str	x0, [x1]
  42e100:	ldr	x0, [x20, #48]
  42e104:	add	x24, x24, #0x1
  42e108:	ldr	w1, [x20, #32]
  42e10c:	stp	xzr, xzr, [x21]
  42e110:	add	x0, x0, #0x1
  42e114:	str	x24, [x20]
  42e118:	str	x0, [x20, #48]
  42e11c:	tbz	w1, #29, 42e088 <wcrtomb@plt+0x29468>
  42e120:	ldp	x0, x1, [x20, #8]
  42e124:	ldp	x25, x26, [sp, #64]
  42e128:	add	x24, x24, x1
  42e12c:	str	xzr, [x0, x24, lsl #3]
  42e130:	ldp	x23, x24, [sp, #48]
  42e134:	mov	w0, w19
  42e138:	ldp	x19, x20, [sp, #16]
  42e13c:	ldp	x21, x22, [sp, #32]
  42e140:	ldp	x29, x30, [sp], #80
  42e144:	ret
  42e148:	ldr	w1, [x0, #16]
  42e14c:	and	w1, w1, #0xffffffef
  42e150:	str	w1, [x0, #16]
  42e154:	str	x0, [x20, #216]
  42e158:	b	42e100 <wcrtomb@plt+0x294e0>
  42e15c:	str	x1, [x20, #208]
  42e160:	ldr	x1, [x21, #8]
  42e164:	cbnz	x1, 42e0fc <wcrtomb@plt+0x294dc>
  42e168:	str	x0, [x20, #216]
  42e16c:	b	42e100 <wcrtomb@plt+0x294e0>
  42e170:	str	xzr, [x20, #96]
  42e174:	mov	w19, #0x0                   	// #0
  42e178:	mov	w0, w19
  42e17c:	ldp	x19, x20, [sp, #16]
  42e180:	ldp	x21, x22, [sp, #32]
  42e184:	ldp	x29, x30, [sp], #80
  42e188:	ret
  42e18c:	ldr	w0, [x20, #32]
  42e190:	tbnz	w0, #29, 42deac <wcrtomb@plt+0x2928c>
  42e194:	mov	x0, x20
  42e198:	mov	x1, #0x1                   	// #1
  42e19c:	stp	x25, x26, [sp, #64]
  42e1a0:	adrp	x25, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42e1a4:	bl	42c370 <wcrtomb@plt+0x27750>
  42e1a8:	add	x25, x25, #0x948
  42e1ac:	mov	w19, w0
  42e1b0:	cbz	w0, 42e084 <wcrtomb@plt+0x29464>
  42e1b4:	ldr	w19, [x20, #192]
  42e1b8:	ldp	x21, x22, [sp, #32]
  42e1bc:	mov	w0, w19
  42e1c0:	ldp	x19, x20, [sp, #16]
  42e1c4:	ldp	x25, x26, [sp, #64]
  42e1c8:	ldp	x29, x30, [sp], #80
  42e1cc:	ret
  42e1d0:	ldp	x0, x1, [x20, #8]
  42e1d4:	ldr	x24, [x20]
  42e1d8:	ldp	x25, x26, [sp, #64]
  42e1dc:	add	x24, x24, x1
  42e1e0:	str	xzr, [x0, x24, lsl #3]
  42e1e4:	ldp	x23, x24, [sp, #48]
  42e1e8:	b	42e134 <wcrtomb@plt+0x29514>
  42e1ec:	mov	x0, x20
  42e1f0:	ldp	x19, x20, [sp, #16]
  42e1f4:	ldp	x21, x22, [sp, #32]
  42e1f8:	ldp	x23, x24, [sp, #48]
  42e1fc:	ldp	x25, x26, [sp, #64]
  42e200:	ldp	x29, x30, [sp], #80
  42e204:	b	42c2e0 <wcrtomb@plt+0x276c0>
  42e208:	stp	x29, x30, [sp, #-48]!
  42e20c:	mov	x29, sp
  42e210:	stp	x19, x20, [sp, #16]
  42e214:	mov	x20, x0
  42e218:	mov	x19, x1
  42e21c:	stp	x21, x22, [sp, #32]
  42e220:	mov	w22, w5
  42e224:	ldr	x0, [x0, #56]
  42e228:	ldr	x6, [x20, #88]
  42e22c:	str	x0, [x1, #56]
  42e230:	mov	x1, x2
  42e234:	ldp	x2, x0, [x20, #96]
  42e238:	stp	x6, x2, [x19, #88]
  42e23c:	str	x0, [x19, #104]
  42e240:	ldr	w0, [x20, #32]
  42e244:	tbnz	w4, #6, 42e264 <wcrtomb@plt+0x29644>
  42e248:	mov	w2, #0x8180000             	// #135790592
  42e24c:	and	w2, w0, w2
  42e250:	orr	w4, w4, w2
  42e254:	ldr	x2, [x20, #112]
  42e258:	str	x2, [x19, #112]
  42e25c:	ldr	x2, [x20, #144]
  42e260:	str	x2, [x19, #144]
  42e264:	tbnz	w4, #2, 42e270 <wcrtomb@plt+0x29650>
  42e268:	ldr	x2, [x20, #160]
  42e26c:	str	x2, [x19, #160]
  42e270:	mov	w2, #0x44                  	// #68
  42e274:	and	w2, w4, w2
  42e278:	cmp	w2, #0x44
  42e27c:	b.eq	42e290 <wcrtomb@plt+0x29670>  // b.none
  42e280:	and	w2, w0, #0x4000000
  42e284:	orr	w4, w4, w2
  42e288:	ldr	x2, [x20, #152]
  42e28c:	str	x2, [x19, #152]
  42e290:	mov	w5, #0x10                  	// #16
  42e294:	ldr	w2, [x20, #36]
  42e298:	movk	w5, #0x8020, lsl #16
  42e29c:	and	w0, w0, w5
  42e2a0:	orr	w4, w0, w4
  42e2a4:	str	w2, [x19, #36]
  42e2a8:	sxtw	x2, w3
  42e2ac:	mov	w3, #0x4000                	// #16384
  42e2b0:	mov	x0, x19
  42e2b4:	movk	w3, #0x7, lsl #16
  42e2b8:	orr	w3, w4, w3
  42e2bc:	bl	42d140 <wcrtomb@plt+0x28520>
  42e2c0:	mov	w21, w0
  42e2c4:	cbz	w0, 42e2dc <wcrtomb@plt+0x296bc>
  42e2c8:	mov	w0, w21
  42e2cc:	ldp	x19, x20, [sp, #16]
  42e2d0:	ldp	x21, x22, [sp, #32]
  42e2d4:	ldp	x29, x30, [sp], #48
  42e2d8:	ret
  42e2dc:	ldr	w2, [x20, #224]
  42e2e0:	mov	x0, x19
  42e2e4:	mov	x1, #0x0                   	// #0
  42e2e8:	add	w2, w2, #0x1
  42e2ec:	str	w2, [x19, #224]
  42e2f0:	bl	42dbe8 <wcrtomb@plt+0x28fc8>
  42e2f4:	mov	w21, w0
  42e2f8:	cbnz	w0, 42e340 <wcrtomb@plt+0x29720>
  42e2fc:	cbz	w22, 42e2c8 <wcrtomb@plt+0x296a8>
  42e300:	mov	x0, x19
  42e304:	bl	42de40 <wcrtomb@plt+0x29220>
  42e308:	ldr	x20, [x19, #208]
  42e30c:	mov	w21, w0
  42e310:	cbz	x20, 42e328 <wcrtomb@plt+0x29708>
  42e314:	nop
  42e318:	mov	x0, x20
  42e31c:	ldr	x20, [x20, #8]
  42e320:	bl	42b888 <wcrtomb@plt+0x26c68>
  42e324:	cbnz	x20, 42e318 <wcrtomb@plt+0x296f8>
  42e328:	stp	xzr, xzr, [x19, #208]
  42e32c:	mov	w0, w21
  42e330:	ldp	x19, x20, [sp, #16]
  42e334:	ldp	x21, x22, [sp, #32]
  42e338:	ldp	x29, x30, [sp], #48
  42e33c:	ret
  42e340:	ldr	x20, [x19, #208]
  42e344:	cbz	x20, 42e328 <wcrtomb@plt+0x29708>
  42e348:	mov	x0, x20
  42e34c:	ldr	x20, [x20, #8]
  42e350:	bl	42b888 <wcrtomb@plt+0x26c68>
  42e354:	cbnz	x20, 42e348 <wcrtomb@plt+0x29728>
  42e358:	stp	xzr, xzr, [x19, #208]
  42e35c:	b	42e32c <wcrtomb@plt+0x2970c>
  42e360:	sub	sp, sp, #0x270
  42e364:	stp	x29, x30, [sp]
  42e368:	mov	x29, sp
  42e36c:	stp	x19, x20, [sp, #16]
  42e370:	mov	x20, x0
  42e374:	stp	x21, x22, [sp, #32]
  42e378:	mov	x21, x4
  42e37c:	stp	x23, x24, [sp, #48]
  42e380:	mov	x24, x1
  42e384:	stp	x25, x26, [sp, #64]
  42e388:	ldrb	w6, [x1]
  42e38c:	str	w5, [sp, #104]
  42e390:	and	w1, w6, #0xffffffdf
  42e394:	str	x3, [sp, #112]
  42e398:	sub	w1, w1, #0x41
  42e39c:	cmp	w6, #0x5f
  42e3a0:	and	w1, w1, #0xff
  42e3a4:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  42e3a8:	b.hi	42e594 <wcrtomb@plt+0x29974>  // b.pmore
  42e3ac:	cmp	x2, #0x1
  42e3b0:	b.ls	42ec3c <wcrtomb@plt+0x2a01c>  // b.plast
  42e3b4:	mov	x19, #0x1                   	// #1
  42e3b8:	ldrb	w0, [x24, x19]
  42e3bc:	add	x1, x24, x19
  42e3c0:	and	w6, w0, #0xffffffdf
  42e3c4:	sub	w7, w0, #0x30
  42e3c8:	sub	w6, w6, #0x41
  42e3cc:	and	w7, w7, #0xff
  42e3d0:	and	w6, w6, #0xff
  42e3d4:	cmp	w6, #0x19
  42e3d8:	b.ls	42e3e8 <wcrtomb@plt+0x297c8>  // b.plast
  42e3dc:	cmp	w0, #0x5f
  42e3e0:	ccmp	w7, #0x9, #0x0, ne  // ne = any
  42e3e4:	b.hi	42e7d4 <wcrtomb@plt+0x29bb4>  // b.pmore
  42e3e8:	add	x19, x19, #0x1
  42e3ec:	cmp	x2, x19
  42e3f0:	b.ne	42e3b8 <wcrtomb@plt+0x29798>  // b.any
  42e3f4:	mov	x22, x24
  42e3f8:	mov	x25, #0x0                   	// #0
  42e3fc:	str	x1, [x21]
  42e400:	ldr	w26, [x20, #32]
  42e404:	tbz	w26, #19, 42e53c <wcrtomb@plt+0x2991c>
  42e408:	ldr	x0, [x20, #112]
  42e40c:	str	x0, [sp, #120]
  42e410:	tbz	w26, #27, 42e4e4 <wcrtomb@plt+0x298c4>
  42e414:	stp	x27, x28, [sp, #80]
  42e418:	ldr	x27, [x0]
  42e41c:	cbz	x27, 42e538 <wcrtomb@plt+0x29918>
  42e420:	add	x23, x0, #0x8
  42e424:	mov	x28, #0x0                   	// #0
  42e428:	b	42e444 <wcrtomb@plt+0x29824>
  42e42c:	ldr	x0, [x23]
  42e430:	add	x28, x28, #0x2
  42e434:	add	x23, x23, #0x10
  42e438:	cbz	x0, 42e538 <wcrtomb@plt+0x29918>
  42e43c:	ldur	x27, [x23, #-8]
  42e440:	cbz	x27, 42e538 <wcrtomb@plt+0x29918>
  42e444:	mov	x0, x27
  42e448:	bl	403ff0 <strlen@plt>
  42e44c:	cmp	x0, x19
  42e450:	b.ne	42e42c <wcrtomb@plt+0x2980c>  // b.any
  42e454:	mov	x0, x27
  42e458:	mov	x2, x19
  42e45c:	mov	x1, x22
  42e460:	bl	4046d0 <memcmp@plt>
  42e464:	cbnz	w0, 42e42c <wcrtomb@plt+0x2980c>
  42e468:	ldr	x0, [sp, #120]
  42e46c:	add	x28, x28, #0x1
  42e470:	ldr	x0, [x0, x28, lsl #3]
  42e474:	cbnz	x0, 42e730 <wcrtomb@plt+0x29b10>
  42e478:	ldp	x27, x28, [sp, #80]
  42e47c:	cbz	x25, 42e648 <wcrtomb@plt+0x29a28>
  42e480:	ldrb	w0, [x25]
  42e484:	and	w1, w0, #0xffffffef
  42e488:	cmp	w1, #0x2d
  42e48c:	b.eq	42e870 <wcrtomb@plt+0x29c50>  // b.none
  42e490:	cmp	w0, #0x3f
  42e494:	b.eq	42ea80 <wcrtomb@plt+0x29e60>  // b.none
  42e498:	ldr	w0, [x20, #32]
  42e49c:	str	xzr, [sp, #152]
  42e4a0:	and	w0, w0, #0x800000
  42e4a4:	cbnz	w0, 42e65c <wcrtomb@plt+0x29a3c>
  42e4a8:	add	x1, sp, #0x188
  42e4ac:	mov	x0, x20
  42e4b0:	bl	42c520 <wcrtomb@plt+0x27900>
  42e4b4:	mov	w26, w0
  42e4b8:	cbnz	w0, 42e678 <wcrtomb@plt+0x29a58>
  42e4bc:	ldr	x5, [sp, #112]
  42e4c0:	mov	x0, x20
  42e4c4:	ldr	x1, [sp, #392]
  42e4c8:	ldr	x2, [x5]
  42e4cc:	bl	42bc98 <wcrtomb@plt+0x27078>
  42e4d0:	ldr	x0, [sp, #392]
  42e4d4:	str	x0, [x5]
  42e4d8:	mov	w1, #0x1                   	// #1
  42e4dc:	str	w1, [x0, #16]
  42e4e0:	b	42e708 <wcrtomb@plt+0x29ae8>
  42e4e4:	ldr	x0, [sp, #120]
  42e4e8:	cbz	x0, 42e53c <wcrtomb@plt+0x2991c>
  42e4ec:	ldr	x3, [x0]
  42e4f0:	cbz	x3, 42e53c <wcrtomb@plt+0x2991c>
  42e4f4:	stp	x27, x28, [sp, #80]
  42e4f8:	add	x27, x0, #0x8
  42e4fc:	nop
  42e500:	mov	x2, #0x0                   	// #0
  42e504:	nop
  42e508:	ldrb	w1, [x22, x2]
  42e50c:	ldrb	w0, [x3, x2]
  42e510:	add	x2, x2, #0x1
  42e514:	cmp	w1, w0
  42e518:	b.ne	42e530 <wcrtomb@plt+0x29910>  // b.any
  42e51c:	cmp	x2, x19
  42e520:	b.ne	42e508 <wcrtomb@plt+0x298e8>  // b.any
  42e524:	ldrb	w0, [x3, x19]
  42e528:	cmp	w0, #0x3d
  42e52c:	b.eq	42e728 <wcrtomb@plt+0x29b08>  // b.none
  42e530:	ldr	x3, [x27], #8
  42e534:	cbnz	x3, 42e500 <wcrtomb@plt+0x298e0>
  42e538:	ldp	x27, x28, [sp, #80]
  42e53c:	tbz	w26, #20, 42e47c <wcrtomb@plt+0x2985c>
  42e540:	ldp	x4, x3, [x20, #144]
  42e544:	mov	x2, x19
  42e548:	mov	x1, x22
  42e54c:	add	x0, sp, #0x98
  42e550:	blr	x4
  42e554:	mov	w26, w0
  42e558:	cbnz	w0, 42e988 <wcrtomb@plt+0x29d68>
  42e55c:	ldr	x0, [sp, #152]
  42e560:	cbnz	x0, 42e740 <wcrtomb@plt+0x29b20>
  42e564:	cbz	x25, 42e588 <wcrtomb@plt+0x29968>
  42e568:	ldurb	w1, [x25, #-1]
  42e56c:	cmp	w1, #0x3a
  42e570:	b.eq	42ec78 <wcrtomb@plt+0x2a058>  // b.none
  42e574:	ldrb	w0, [x25]
  42e578:	cmp	w0, #0x2b
  42e57c:	b.eq	42ea20 <wcrtomb@plt+0x29e00>  // b.none
  42e580:	ldr	x19, [sp, #152]
  42e584:	cbnz	x19, 42e750 <wcrtomb@plt+0x29b30>
  42e588:	ldr	w0, [x20, #32]
  42e58c:	and	w0, w0, #0x800000
  42e590:	b	42e4a4 <wcrtomb@plt+0x29884>
  42e594:	cmp	w6, #0x7b
  42e598:	b.ne	42e69c <wcrtomb@plt+0x29a7c>  // b.any
  42e59c:	sub	x26, x2, #0x1
  42e5a0:	add	x22, x24, #0x1
  42e5a4:	cmp	x26, #0x1
  42e5a8:	b.ls	42ecb0 <wcrtomb@plt+0x2a090>  // b.plast
  42e5ac:	mov	x19, #0x1                   	// #1
  42e5b0:	stp	x27, x28, [sp, #80]
  42e5b4:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42e5b8:	add	x28, x24, #0x2
  42e5bc:	add	x27, x27, #0xd08
  42e5c0:	b	42e5e0 <wcrtomb@plt+0x299c0>
  42e5c4:	cmp	w1, #0x7d
  42e5c8:	b.eq	42ebc8 <wcrtomb@plt+0x29fa8>  // b.none
  42e5cc:	bl	404870 <strchr@plt>
  42e5d0:	cbnz	x0, 42ebf8 <wcrtomb@plt+0x29fd8>
  42e5d4:	add	x19, x19, #0x1
  42e5d8:	cmp	x26, x19
  42e5dc:	b.eq	42ec34 <wcrtomb@plt+0x2a014>  // b.none
  42e5e0:	ldrb	w1, [x28]
  42e5e4:	mov	x25, x28
  42e5e8:	mov	x0, x27
  42e5ec:	add	x28, x28, #0x1
  42e5f0:	cmp	w1, #0x3a
  42e5f4:	b.ne	42e5c4 <wcrtomb@plt+0x299a4>  // b.any
  42e5f8:	add	x1, x19, #0x1
  42e5fc:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42e600:	add	x25, x22, x1
  42e604:	add	x4, x4, #0xca0
  42e608:	add	x3, sp, #0x188
  42e60c:	mov	x2, x26
  42e610:	mov	x0, x22
  42e614:	bl	42b788 <wcrtomb@plt+0x26b68>
  42e618:	cbnz	w0, 42ec18 <wcrtomb@plt+0x29ff8>
  42e61c:	ldr	x0, [sp, #392]
  42e620:	cmp	x26, x19
  42e624:	add	x0, x22, x0
  42e628:	str	x0, [x21]
  42e62c:	b.eq	42ec34 <wcrtomb@plt+0x2a014>  // b.none
  42e630:	ldrb	w1, [x25]
  42e634:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42e638:	add	x0, x0, #0xd08
  42e63c:	bl	404870 <strchr@plt>
  42e640:	ldp	x27, x28, [sp, #80]
  42e644:	cbnz	x0, 42e400 <wcrtomb@plt+0x297e0>
  42e648:	ldr	w0, [x20, #32]
  42e64c:	tbnz	w0, #5, 42ec48 <wcrtomb@plt+0x2a028>
  42e650:	tbnz	w0, #24, 42eb78 <wcrtomb@plt+0x29f58>
  42e654:	tbz	w0, #23, 42e7e0 <wcrtomb@plt+0x29bc0>
  42e658:	str	xzr, [sp, #152]
  42e65c:	add	x1, sp, #0x188
  42e660:	mov	x0, x20
  42e664:	ldr	x19, [x21]
  42e668:	bl	42c520 <wcrtomb@plt+0x27900>
  42e66c:	mov	w26, w0
  42e670:	cbz	w0, 42eaf0 <wcrtomb@plt+0x29ed0>
  42e674:	nop
  42e678:	mov	w26, #0x1                   	// #1
  42e67c:	mov	w0, w26
  42e680:	ldp	x29, x30, [sp]
  42e684:	ldp	x19, x20, [sp, #16]
  42e688:	ldp	x21, x22, [sp, #32]
  42e68c:	ldp	x23, x24, [sp, #48]
  42e690:	ldp	x25, x26, [sp, #64]
  42e694:	add	sp, sp, #0x270
  42e698:	ret
  42e69c:	add	x1, sp, #0x188
  42e6a0:	bl	42c520 <wcrtomb@plt+0x27900>
  42e6a4:	mov	w26, w0
  42e6a8:	cbnz	w0, 42e678 <wcrtomb@plt+0x29a58>
  42e6ac:	ldr	x5, [sp, #112]
  42e6b0:	mov	x0, x20
  42e6b4:	ldr	x1, [sp, #392]
  42e6b8:	ldr	x2, [x5]
  42e6bc:	bl	42bc98 <wcrtomb@plt+0x27078>
  42e6c0:	ldr	x19, [sp, #392]
  42e6c4:	str	x19, [x5]
  42e6c8:	ldr	w0, [sp, #104]
  42e6cc:	orr	w22, w0, #0x2
  42e6d0:	str	w22, [x19, #16]
  42e6d4:	mov	x0, #0x3                   	// #3
  42e6d8:	bl	404310 <malloc@plt>
  42e6dc:	str	x0, [x19, #24]
  42e6e0:	cbz	x0, 42e7f8 <wcrtomb@plt+0x29bd8>
  42e6e4:	mov	w1, #0x24                  	// #36
  42e6e8:	strb	w1, [x0]
  42e6ec:	ldrb	w1, [x24]
  42e6f0:	ldr	x0, [x19, #24]
  42e6f4:	strb	w1, [x0, #1]
  42e6f8:	ldr	x0, [sp, #392]
  42e6fc:	ldr	x0, [x0, #24]
  42e700:	strb	wzr, [x0, #2]
  42e704:	str	x24, [x21]
  42e708:	mov	w0, w26
  42e70c:	ldp	x29, x30, [sp]
  42e710:	ldp	x19, x20, [sp, #16]
  42e714:	ldp	x21, x22, [sp, #32]
  42e718:	ldp	x23, x24, [sp, #48]
  42e71c:	ldp	x25, x26, [sp, #64]
  42e720:	add	sp, sp, #0x270
  42e724:	ret
  42e728:	add	x0, x19, #0x1
  42e72c:	add	x0, x3, x0
  42e730:	bl	404580 <strdup@plt>
  42e734:	str	x0, [sp, #152]
  42e738:	ldp	x27, x28, [sp, #80]
  42e73c:	cbz	x0, 42e7f8 <wcrtomb@plt+0x29bd8>
  42e740:	ldrb	w1, [x0]
  42e744:	cbnz	w1, 42ea10 <wcrtomb@plt+0x29df0>
  42e748:	cbnz	x25, 42e568 <wcrtomb@plt+0x29948>
  42e74c:	ldr	x19, [sp, #152]
  42e750:	ldr	x0, [sp, #104]
  42e754:	tbnz	w0, #2, 42e824 <wcrtomb@plt+0x29c04>
  42e758:	ldrb	w0, [x19]
  42e75c:	cbz	w0, 42e9d4 <wcrtomb@plt+0x29db4>
  42e760:	mov	x0, x19
  42e764:	bl	403ff0 <strlen@plt>
  42e768:	ldr	x1, [x20, #32]
  42e76c:	mov	w3, w0
  42e770:	mov	w6, #0x1644                	// #5700
  42e774:	mov	x2, x19
  42e778:	and	x0, x1, #0xfffffff000
  42e77c:	mov	w4, #0x644                 	// #1604
  42e780:	ands	x0, x0, #0xffffff8000001fff
  42e784:	add	x1, sp, #0x188
  42e788:	csel	w4, w6, w4, ne  // ne = any
  42e78c:	mov	x0, x20
  42e790:	mov	w5, #0x0                   	// #0
  42e794:	bl	42e208 <wcrtomb@plt+0x295e8>
  42e798:	mov	w26, w0
  42e79c:	ldr	x0, [sp, #152]
  42e7a0:	bl	4047b0 <free@plt>
  42e7a4:	cbz	w26, 42e9e0 <wcrtomb@plt+0x29dc0>
  42e7a8:	ldr	w0, [x20, #192]
  42e7ac:	cmp	w0, #0x9
  42e7b0:	b.eq	42ebbc <wcrtomb@plt+0x29f9c>  // b.none
  42e7b4:	ldr	w0, [sp, #584]
  42e7b8:	str	w0, [x20, #192]
  42e7bc:	cmp	w0, #0x9
  42e7c0:	b.eq	42eba8 <wcrtomb@plt+0x29f88>  // b.none
  42e7c4:	add	x0, sp, #0x188
  42e7c8:	mov	w26, #0x1                   	// #1
  42e7cc:	bl	42c108 <wcrtomb@plt+0x274e8>
  42e7d0:	b	42e708 <wcrtomb@plt+0x29ae8>
  42e7d4:	sub	x1, x19, #0x1
  42e7d8:	add	x1, x24, x1
  42e7dc:	b	42e3f4 <wcrtomb@plt+0x297d4>
  42e7e0:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  42e7e4:	add	x0, x0, #0x948
  42e7e8:	bl	404580 <strdup@plt>
  42e7ec:	str	x0, [sp, #152]
  42e7f0:	mov	x19, x0
  42e7f4:	cbnz	x0, 42e750 <wcrtomb@plt+0x29b30>
  42e7f8:	mov	x0, x20
  42e7fc:	bl	42c2e0 <wcrtomb@plt+0x276c0>
  42e800:	mov	w26, w0
  42e804:	mov	w0, w26
  42e808:	ldp	x29, x30, [sp]
  42e80c:	ldp	x19, x20, [sp, #16]
  42e810:	ldp	x21, x22, [sp, #32]
  42e814:	ldp	x23, x24, [sp, #48]
  42e818:	ldp	x25, x26, [sp, #64]
  42e81c:	add	sp, sp, #0x270
  42e820:	ret
  42e824:	add	x1, sp, #0x188
  42e828:	mov	x0, x20
  42e82c:	bl	42c520 <wcrtomb@plt+0x27900>
  42e830:	mov	w26, w0
  42e834:	cbnz	w0, 42ec5c <wcrtomb@plt+0x2a03c>
  42e838:	ldr	x5, [sp, #112]
  42e83c:	mov	x0, x20
  42e840:	ldr	x1, [sp, #392]
  42e844:	ldr	x2, [x5]
  42e848:	bl	42bc98 <wcrtomb@plt+0x27078>
  42e84c:	ldr	x0, [sp, #392]
  42e850:	str	x0, [x5]
  42e854:	ldr	w3, [sp, #104]
  42e858:	mov	w1, #0xa                   	// #10
  42e85c:	ldr	x2, [sp, #152]
  42e860:	orr	w22, w3, w1
  42e864:	str	w22, [x0, #16]
  42e868:	str	x2, [x0, #24]
  42e86c:	b	42e708 <wcrtomb@plt+0x29ae8>
  42e870:	ldr	w0, [x20, #32]
  42e874:	add	x2, x25, #0x1
  42e878:	ldr	x3, [x21]
  42e87c:	mov	w1, #0x44                  	// #68
  42e880:	mov	w4, #0x700                 	// #1792
  42e884:	and	w0, w0, w1
  42e888:	sub	w3, w3, w2
  42e88c:	add	x1, sp, #0xa0
  42e890:	movk	w4, #0x40, lsl #16
  42e894:	mov	w5, #0x1                   	// #1
  42e898:	orr	w4, w0, w4
  42e89c:	mov	x0, x20
  42e8a0:	bl	42e208 <wcrtomb@plt+0x295e8>
  42e8a4:	mov	w26, w0
  42e8a8:	cbnz	w0, 42e708 <wcrtomb@plt+0x29ae8>
  42e8ac:	ldr	x1, [sp, #168]
  42e8b0:	add	x0, sp, #0xa0
  42e8b4:	ldr	x2, [x1]
  42e8b8:	str	x2, [sp, #152]
  42e8bc:	str	xzr, [x1]
  42e8c0:	bl	42c108 <wcrtomb@plt+0x274e8>
  42e8c4:	ldrb	w0, [x25]
  42e8c8:	cmp	w0, #0x3d
  42e8cc:	b.ne	42e580 <wcrtomb@plt+0x29960>  // b.any
  42e8d0:	stp	x27, x28, [sp, #80]
  42e8d4:	ldr	w28, [x20, #32]
  42e8d8:	ldr	x0, [sp, #152]
  42e8dc:	str	x0, [sp, #136]
  42e8e0:	and	w23, w28, #0x8000000
  42e8e4:	ldr	x0, [x20, #128]
  42e8e8:	ldr	x1, [x20, #136]
  42e8ec:	tbz	w28, #27, 42ecc0 <wcrtomb@plt+0x2a0a0>
  42e8f0:	add	x0, x0, #0x2
  42e8f4:	cmp	x0, x1
  42e8f8:	b.cc	42e92c <wcrtomb@plt+0x29d0c>  // b.lo, b.ul, b.last
  42e8fc:	mov	x25, #0x2                   	// #2
  42e900:	ldr	x0, [x20, #120]
  42e904:	cbz	x0, 42ed28 <wcrtomb@plt+0x2a108>
  42e908:	lsl	x2, x1, #1
  42e90c:	str	x2, [x20, #136]
  42e910:	lsl	x1, x1, #4
  42e914:	bl	404530 <realloc@plt>
  42e918:	cbz	x0, 42ee04 <wcrtomb@plt+0x2a1e4>
  42e91c:	ldr	w26, [x20, #32]
  42e920:	stp	x0, x0, [x20, #112]
  42e924:	and	w23, w26, #0x8000000
  42e928:	cbz	w23, 42ecd0 <wcrtomb@plt+0x2a0b0>
  42e92c:	add	x0, x19, #0x1
  42e930:	bl	404310 <malloc@plt>
  42e934:	mov	x25, x0
  42e938:	cbz	x0, 42ee04 <wcrtomb@plt+0x2a1e4>
  42e93c:	mov	x1, x22
  42e940:	mov	x2, x19
  42e944:	bl	403f70 <memcpy@plt>
  42e948:	strb	wzr, [x25, x19]
  42e94c:	ldr	x0, [sp, #136]
  42e950:	bl	404580 <strdup@plt>
  42e954:	mov	x1, x0
  42e958:	cbz	x0, 42ee38 <wcrtomb@plt+0x2a218>
  42e95c:	ldr	x0, [x20, #112]
  42e960:	ldr	x3, [x20, #128]
  42e964:	add	x2, x3, #0x2
  42e968:	add	x4, x0, x3, lsl #3
  42e96c:	str	x25, [x0, x3, lsl #3]
  42e970:	str	x1, [x4, #8]
  42e974:	add	x1, x2, #0x1
  42e978:	ldp	x27, x28, [sp, #80]
  42e97c:	str	x1, [x20, #128]
  42e980:	str	xzr, [x0, x2, lsl #3]
  42e984:	b	42e580 <wcrtomb@plt+0x29960>
  42e988:	cmp	w0, #0x5
  42e98c:	b.eq	42e47c <wcrtomb@plt+0x2985c>  // b.none
  42e990:	cmp	w0, #0x9
  42e994:	b.eq	42e9bc <wcrtomb@plt+0x29d9c>  // b.none
  42e998:	cmp	w0, #0x2
  42e99c:	b.eq	42e7f8 <wcrtomb@plt+0x29bd8>  // b.none
  42e9a0:	ldr	w0, [x20, #32]
  42e9a4:	str	w26, [x20, #192]
  42e9a8:	tbz	w0, #4, 42e678 <wcrtomb@plt+0x29a58>
  42e9ac:	mov	x0, x20
  42e9b0:	mov	w26, #0x1                   	// #1
  42e9b4:	bl	42c218 <wcrtomb@plt+0x275f8>
  42e9b8:	b	42e708 <wcrtomb@plt+0x29ae8>
  42e9bc:	ldr	w0, [x20, #192]
  42e9c0:	cmp	w0, #0x9
  42e9c4:	b.eq	42ec6c <wcrtomb@plt+0x2a04c>  // b.none
  42e9c8:	ldr	x0, [sp, #152]
  42e9cc:	str	x0, [x20, #200]
  42e9d0:	b	42e9a0 <wcrtomb@plt+0x29d80>
  42e9d4:	mov	x0, x19
  42e9d8:	bl	4047b0 <free@plt>
  42e9dc:	b	42e4a8 <wcrtomb@plt+0x29888>
  42e9e0:	ldr	x5, [sp, #112]
  42e9e4:	mov	x0, x20
  42e9e8:	ldr	x1, [sp, #600]
  42e9ec:	ldr	x2, [x5]
  42e9f0:	bl	42bc98 <wcrtomb@plt+0x27078>
  42e9f4:	str	xzr, [sp, #600]
  42e9f8:	ldr	x0, [sp, #608]
  42e9fc:	str	x0, [x5]
  42ea00:	add	x0, sp, #0x188
  42ea04:	str	xzr, [sp, #608]
  42ea08:	bl	42c108 <wcrtomb@plt+0x274e8>
  42ea0c:	b	42e708 <wcrtomb@plt+0x29ae8>
  42ea10:	cbz	x25, 42e74c <wcrtomb@plt+0x29b2c>
  42ea14:	ldrb	w0, [x25]
  42ea18:	cmp	w0, #0x2b
  42ea1c:	b.ne	42e74c <wcrtomb@plt+0x29b2c>  // b.any
  42ea20:	ldr	w0, [x20, #32]
  42ea24:	add	x2, x25, #0x1
  42ea28:	ldr	x3, [x21]
  42ea2c:	mov	w1, #0x44                  	// #68
  42ea30:	mov	w4, #0x700                 	// #1792
  42ea34:	and	w0, w0, w1
  42ea38:	sub	w3, w3, w2
  42ea3c:	add	x1, sp, #0xa0
  42ea40:	movk	w4, #0x40, lsl #16
  42ea44:	mov	w5, #0x1                   	// #1
  42ea48:	orr	w4, w0, w4
  42ea4c:	mov	x0, x20
  42ea50:	bl	42e208 <wcrtomb@plt+0x295e8>
  42ea54:	mov	w26, w0
  42ea58:	cbnz	w0, 42e708 <wcrtomb@plt+0x29ae8>
  42ea5c:	ldr	x0, [sp, #152]
  42ea60:	bl	4047b0 <free@plt>
  42ea64:	ldr	x1, [sp, #168]
  42ea68:	add	x0, sp, #0xa0
  42ea6c:	ldr	x2, [x1]
  42ea70:	str	x2, [sp, #152]
  42ea74:	str	xzr, [x1]
  42ea78:	bl	42c108 <wcrtomb@plt+0x274e8>
  42ea7c:	b	42e580 <wcrtomb@plt+0x29960>
  42ea80:	ldr	x0, [x21]
  42ea84:	add	x25, x25, #0x1
  42ea88:	subs	x26, x0, x25
  42ea8c:	b.eq	42eb50 <wcrtomb@plt+0x29f30>  // b.none
  42ea90:	ldr	w0, [x20, #32]
  42ea94:	mov	w1, #0x44                  	// #68
  42ea98:	mov	w4, #0x700                 	// #1792
  42ea9c:	mov	w3, w26
  42eaa0:	and	w0, w0, w1
  42eaa4:	movk	w4, #0x40, lsl #16
  42eaa8:	mov	x2, x25
  42eaac:	orr	w4, w0, w4
  42eab0:	add	x1, sp, #0xa0
  42eab4:	mov	x0, x20
  42eab8:	mov	w5, #0x1                   	// #1
  42eabc:	bl	42e208 <wcrtomb@plt+0x295e8>
  42eac0:	cbnz	w0, 42ec80 <wcrtomb@plt+0x2a060>
  42eac4:	ldr	x0, [sp, #168]
  42eac8:	mov	x2, x22
  42eacc:	ldr	x4, [x20, #96]
  42ead0:	mov	w1, w19
  42ead4:	ldr	x3, [x0]
  42ead8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42eadc:	add	x0, x0, #0xd30
  42eae0:	blr	x4
  42eae4:	add	x0, sp, #0xa0
  42eae8:	bl	42c108 <wcrtomb@plt+0x274e8>
  42eaec:	b	42e498 <wcrtomb@plt+0x29878>
  42eaf0:	ldr	x5, [sp, #112]
  42eaf4:	mov	x0, x20
  42eaf8:	ldr	x1, [sp, #392]
  42eafc:	sub	x24, x24, #0x1
  42eb00:	ldr	x2, [x5]
  42eb04:	sub	x19, x19, x24
  42eb08:	bl	42bc98 <wcrtomb@plt+0x27078>
  42eb0c:	ldr	x21, [sp, #392]
  42eb10:	str	x21, [x5]
  42eb14:	ldr	w1, [sp, #104]
  42eb18:	mov	w0, #0xa                   	// #10
  42eb1c:	orr	w22, w1, w0
  42eb20:	str	w22, [x21, #16]
  42eb24:	add	x0, x19, #0x2
  42eb28:	bl	404310 <malloc@plt>
  42eb2c:	str	x0, [x21, #24]
  42eb30:	cbz	x0, 42e7f8 <wcrtomb@plt+0x29bd8>
  42eb34:	add	x19, x19, #0x1
  42eb38:	mov	x1, x24
  42eb3c:	mov	x2, x19
  42eb40:	bl	403f70 <memcpy@plt>
  42eb44:	ldr	x0, [x21, #24]
  42eb48:	strb	wzr, [x0, x19]
  42eb4c:	b	42e708 <wcrtomb@plt+0x29ae8>
  42eb50:	ldr	x25, [x20, #96]
  42eb54:	mov	w2, #0x5                   	// #5
  42eb58:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42eb5c:	mov	x0, #0x0                   	// #0
  42eb60:	add	x1, x1, #0xd10
  42eb64:	bl	4049c0 <dcgettext@plt>
  42eb68:	mov	x2, x22
  42eb6c:	mov	w1, w19
  42eb70:	blr	x25
  42eb74:	b	42e498 <wcrtomb@plt+0x29878>
  42eb78:	ldr	x25, [x20, #96]
  42eb7c:	mov	w2, #0x5                   	// #5
  42eb80:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42eb84:	mov	x0, #0x0                   	// #0
  42eb88:	add	x1, x1, #0xd50
  42eb8c:	bl	4049c0 <dcgettext@plt>
  42eb90:	mov	x2, x22
  42eb94:	mov	w1, w19
  42eb98:	blr	x25
  42eb9c:	ldr	w0, [x20, #32]
  42eba0:	tbnz	w0, #23, 42e658 <wcrtomb@plt+0x29a38>
  42eba4:	b	42e7e0 <wcrtomb@plt+0x29bc0>
  42eba8:	ldr	x0, [sp, #592]
  42ebac:	str	x0, [x20, #200]
  42ebb0:	str	wzr, [sp, #584]
  42ebb4:	str	xzr, [sp, #592]
  42ebb8:	b	42e7c4 <wcrtomb@plt+0x29ba4>
  42ebbc:	ldr	x0, [x20, #200]
  42ebc0:	bl	4047b0 <free@plt>
  42ebc4:	b	42e7b4 <wcrtomb@plt+0x29b94>
  42ebc8:	ldp	x27, x28, [sp, #80]
  42ebcc:	str	x25, [x21]
  42ebd0:	cmp	x26, x19
  42ebd4:	mov	x25, #0x0                   	// #0
  42ebd8:	b.ne	42e400 <wcrtomb@plt+0x297e0>  // b.any
  42ebdc:	ldr	w0, [x20, #32]
  42ebe0:	mov	w26, #0x4                   	// #4
  42ebe4:	str	w26, [x20, #192]
  42ebe8:	tbz	w0, #4, 42e708 <wcrtomb@plt+0x29ae8>
  42ebec:	mov	x0, x20
  42ebf0:	bl	42c218 <wcrtomb@plt+0x275f8>
  42ebf4:	b	42e708 <wcrtomb@plt+0x29ae8>
  42ebf8:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ebfc:	add	x3, sp, #0x188
  42ec00:	add	x4, x4, #0xca0
  42ec04:	mov	x2, x26
  42ec08:	mov	x1, x19
  42ec0c:	mov	x0, x22
  42ec10:	bl	42b788 <wcrtomb@plt+0x26b68>
  42ec14:	cbz	w0, 42e61c <wcrtomb@plt+0x299fc>
  42ec18:	ldr	w0, [x20, #32]
  42ec1c:	mov	w1, #0x4                   	// #4
  42ec20:	str	w1, [x20, #192]
  42ec24:	tbnz	w0, #4, 42eca4 <wcrtomb@plt+0x2a084>
  42ec28:	mov	w26, #0x4                   	// #4
  42ec2c:	ldp	x27, x28, [sp, #80]
  42ec30:	b	42e708 <wcrtomb@plt+0x29ae8>
  42ec34:	ldp	x27, x28, [sp, #80]
  42ec38:	b	42ebdc <wcrtomb@plt+0x29fbc>
  42ec3c:	mov	x1, x24
  42ec40:	mov	x19, #0x1                   	// #1
  42ec44:	b	42e3f4 <wcrtomb@plt+0x297d4>
  42ec48:	mov	w1, #0x5                   	// #5
  42ec4c:	str	w1, [x20, #192]
  42ec50:	tbnz	w0, #4, 42e9ac <wcrtomb@plt+0x29d8c>
  42ec54:	mov	w26, #0x1                   	// #1
  42ec58:	b	42e67c <wcrtomb@plt+0x29a5c>
  42ec5c:	ldr	x0, [sp, #152]
  42ec60:	mov	w26, #0x1                   	// #1
  42ec64:	bl	4047b0 <free@plt>
  42ec68:	b	42e708 <wcrtomb@plt+0x29ae8>
  42ec6c:	ldr	x0, [x20, #200]
  42ec70:	bl	4047b0 <free@plt>
  42ec74:	b	42e9c8 <wcrtomb@plt+0x29da8>
  42ec78:	bl	4047b0 <free@plt>
  42ec7c:	b	42e480 <wcrtomb@plt+0x29860>
  42ec80:	ldr	x5, [x20, #96]
  42ec84:	mov	x4, x25
  42ec88:	mov	w3, w26
  42ec8c:	mov	x2, x22
  42ec90:	mov	w1, w19
  42ec94:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ec98:	add	x0, x0, #0xd40
  42ec9c:	blr	x5
  42eca0:	b	42eae4 <wcrtomb@plt+0x29ec4>
  42eca4:	mov	x0, x20
  42eca8:	bl	42c218 <wcrtomb@plt+0x275f8>
  42ecac:	b	42ec28 <wcrtomb@plt+0x2a008>
  42ecb0:	b.eq	42ebdc <wcrtomb@plt+0x29fbc>  // b.none
  42ecb4:	mov	x25, #0x0                   	// #0
  42ecb8:	mov	x19, #0x1                   	// #1
  42ecbc:	b	42e400 <wcrtomb@plt+0x297e0>
  42ecc0:	add	x0, x0, #0x1
  42ecc4:	mov	x25, #0x1                   	// #1
  42ecc8:	cmp	x0, x1
  42eccc:	b.cs	42e900 <wcrtomb@plt+0x29ce0>  // b.hs, b.nlast
  42ecd0:	ldr	x23, [sp, #136]
  42ecd4:	mov	x0, x23
  42ecd8:	bl	403ff0 <strlen@plt>
  42ecdc:	add	x1, x19, #0x2
  42ece0:	add	x0, x1, x0
  42ece4:	bl	404310 <malloc@plt>
  42ece8:	mov	x25, x0
  42ecec:	cbz	x0, 42ee04 <wcrtomb@plt+0x2a1e4>
  42ecf0:	mov	x2, x19
  42ecf4:	mov	x1, x22
  42ecf8:	bl	403f70 <memcpy@plt>
  42ecfc:	mov	w2, #0x3d                  	// #61
  42ed00:	strb	w2, [x25, x19]
  42ed04:	add	x0, x19, #0x1
  42ed08:	mov	x1, x23
  42ed0c:	add	x0, x25, x0
  42ed10:	bl	404910 <strcpy@plt>
  42ed14:	ldr	x0, [x20, #112]
  42ed18:	ldr	x1, [x20, #128]
  42ed1c:	add	x2, x1, #0x1
  42ed20:	str	x25, [x0, x1, lsl #3]
  42ed24:	b	42e974 <wcrtomb@plt+0x29d54>
  42ed28:	tbz	w28, #19, 42edb4 <wcrtomb@plt+0x2a194>
  42ed2c:	ldr	x5, [x20, #112]
  42ed30:	cbz	x5, 42ee14 <wcrtomb@plt+0x2a1f4>
  42ed34:	ldr	x0, [x5]
  42ed38:	cbz	x0, 42ee14 <wcrtomb@plt+0x2a1f4>
  42ed3c:	mov	x26, #0x0                   	// #0
  42ed40:	str	x26, [sp, #120]
  42ed44:	add	x26, x26, #0x1
  42ed48:	ldr	x0, [x5, x26, lsl #3]
  42ed4c:	cbnz	x0, 42ed40 <wcrtomb@plt+0x2a120>
  42ed50:	ldr	x0, [sp, #120]
  42ed54:	add	x25, x25, #0x2
  42ed58:	mov	x1, #0x8                   	// #8
  42ed5c:	str	x5, [sp, #128]
  42ed60:	add	x25, x25, x0
  42ed64:	mov	x27, #0x0                   	// #0
  42ed68:	mov	x0, x25
  42ed6c:	bl	4044c0 <calloc@plt>
  42ed70:	mov	x28, x0
  42ed74:	ldr	x5, [sp, #128]
  42ed78:	cbz	x0, 42ee04 <wcrtomb@plt+0x2a1e4>
  42ed7c:	ldr	x0, [x5, x27, lsl #3]
  42ed80:	str	x5, [sp, #128]
  42ed84:	bl	404580 <strdup@plt>
  42ed88:	str	x0, [x28, x27, lsl #3]
  42ed8c:	ldp	x1, x5, [sp, #120]
  42ed90:	add	x4, x27, #0x1
  42ed94:	cmp	x27, x1
  42ed98:	cbz	x0, 42eddc <wcrtomb@plt+0x2a1bc>
  42ed9c:	mov	x27, x4
  42eda0:	b.ne	42ed7c <wcrtomb@plt+0x2a15c>  // b.any
  42eda4:	str	xzr, [x28, x4, lsl #3]
  42eda8:	stp	x28, x28, [x20, #112]
  42edac:	stp	x26, x25, [x20, #128]
  42edb0:	b	42e928 <wcrtomb@plt+0x29d08>
  42edb4:	mov	x1, #0x8                   	// #8
  42edb8:	mov	x0, #0x10                  	// #16
  42edbc:	bl	4044c0 <calloc@plt>
  42edc0:	cbz	x0, 42ee04 <wcrtomb@plt+0x2a1e4>
  42edc4:	orr	w28, w28, #0x80000
  42edc8:	mov	x1, #0x10                  	// #16
  42edcc:	str	w28, [x20, #32]
  42edd0:	stp	x0, x0, [x20, #112]
  42edd4:	stp	xzr, x1, [x20, #128]
  42edd8:	b	42e928 <wcrtomb@plt+0x29d08>
  42eddc:	sub	x19, x28, #0x8
  42ede0:	b	42ede8 <wcrtomb@plt+0x2a1c8>
  42ede4:	bl	4047b0 <free@plt>
  42ede8:	cmp	x27, #0x1
  42edec:	ldr	x0, [x19, x27, lsl #3]
  42edf0:	sub	x27, x27, #0x1
  42edf4:	b.hi	42ede4 <wcrtomb@plt+0x2a1c4>  // b.pmore
  42edf8:	bl	4047b0 <free@plt>
  42edfc:	mov	x0, x28
  42ee00:	bl	4047b0 <free@plt>
  42ee04:	mov	x0, x20
  42ee08:	bl	42c2e0 <wcrtomb@plt+0x276c0>
  42ee0c:	ldp	x27, x28, [sp, #80]
  42ee10:	b	42e580 <wcrtomb@plt+0x29960>
  42ee14:	add	x25, x25, #0x1
  42ee18:	mov	x1, #0x8                   	// #8
  42ee1c:	mov	x0, x25
  42ee20:	bl	4044c0 <calloc@plt>
  42ee24:	mov	x28, x0
  42ee28:	cbz	x0, 42ee04 <wcrtomb@plt+0x2a1e4>
  42ee2c:	mov	x26, #0x0                   	// #0
  42ee30:	mov	x4, #0x0                   	// #0
  42ee34:	b	42eda4 <wcrtomb@plt+0x2a184>
  42ee38:	mov	x0, x25
  42ee3c:	bl	4047b0 <free@plt>
  42ee40:	mov	x0, x20
  42ee44:	bl	42c2e0 <wcrtomb@plt+0x276c0>
  42ee48:	ldp	x27, x28, [sp, #80]
  42ee4c:	b	42e580 <wcrtomb@plt+0x29960>
  42ee50:	stp	x29, x30, [sp, #-320]!
  42ee54:	mov	x8, x4
  42ee58:	sub	x2, x2, #0x1
  42ee5c:	mov	x29, sp
  42ee60:	stp	x19, x20, [sp, #16]
  42ee64:	add	x20, x1, #0x1
  42ee68:	mov	x19, x0
  42ee6c:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x18e10>
  42ee70:	mov	x0, x20
  42ee74:	add	x4, x4, #0xca8
  42ee78:	mov	x1, #0x0                   	// #0
  42ee7c:	stp	x21, x22, [sp, #32]
  42ee80:	mov	x22, x3
  42ee84:	mov	w21, w5
  42ee88:	add	x3, sp, #0x48
  42ee8c:	bl	42b788 <wcrtomb@plt+0x26b68>
  42ee90:	cbnz	w0, 42efb0 <wcrtomb@plt+0x2a390>
  42ee94:	ldr	x2, [sp, #72]
  42ee98:	ldr	w0, [x19, #36]
  42ee9c:	add	x1, x20, x2
  42eea0:	str	x1, [x8]
  42eea4:	tbnz	w0, #3, 42ef5c <wcrtomb@plt+0x2a33c>
  42eea8:	ldp	x4, x5, [x19, #152]
  42eeac:	mov	x1, x20
  42eeb0:	add	x0, sp, #0x50
  42eeb4:	mov	x3, #0x0                   	// #0
  42eeb8:	blr	x5
  42eebc:	mov	w20, w0
  42eec0:	cmp	w20, #0x2
  42eec4:	b.eq	42f0dc <wcrtomb@plt+0x2a4bc>  // b.none
  42eec8:	cbnz	w20, 42efd8 <wcrtomb@plt+0x2a3b8>
  42eecc:	ldr	x20, [sp, #80]
  42eed0:	cbz	x20, 42f0a4 <wcrtomb@plt+0x2a484>
  42eed4:	tbnz	w21, #2, 42f00c <wcrtomb@plt+0x2a3ec>
  42eed8:	ldrb	w0, [x20]
  42eedc:	cbz	w0, 42f09c <wcrtomb@plt+0x2a47c>
  42eee0:	mov	x0, x20
  42eee4:	str	x23, [sp, #48]
  42eee8:	bl	403ff0 <strlen@plt>
  42eeec:	mov	w3, w0
  42eef0:	ldr	x1, [x19, #32]
  42eef4:	mov	w6, #0x1744                	// #5956
  42eef8:	add	x23, sp, #0x58
  42eefc:	mov	x2, x20
  42ef00:	and	x0, x1, #0xfffffff000
  42ef04:	mov	w4, #0x744                 	// #1860
  42ef08:	ands	x0, x0, #0xffffff8000001fff
  42ef0c:	mov	x1, x23
  42ef10:	csel	w4, w6, w4, ne  // ne = any
  42ef14:	mov	x0, x19
  42ef18:	mov	w5, #0x0                   	// #0
  42ef1c:	bl	42e208 <wcrtomb@plt+0x295e8>
  42ef20:	mov	w20, w0
  42ef24:	ldr	x0, [sp, #80]
  42ef28:	bl	4047b0 <free@plt>
  42ef2c:	cbnz	w20, 42f04c <wcrtomb@plt+0x2a42c>
  42ef30:	ldr	x2, [x22]
  42ef34:	mov	x0, x19
  42ef38:	ldr	x1, [sp, #296]
  42ef3c:	bl	42bc98 <wcrtomb@plt+0x27078>
  42ef40:	ldr	x0, [sp, #304]
  42ef44:	str	x0, [x22]
  42ef48:	mov	x0, x23
  42ef4c:	stp	xzr, xzr, [sp, #296]
  42ef50:	bl	42c108 <wcrtomb@plt+0x274e8>
  42ef54:	ldr	x23, [sp, #48]
  42ef58:	b	42efc4 <wcrtomb@plt+0x2a3a4>
  42ef5c:	str	x23, [sp, #48]
  42ef60:	add	x23, sp, #0x58
  42ef64:	mov	w3, w2
  42ef68:	mov	x0, x19
  42ef6c:	mov	x2, x20
  42ef70:	mov	x1, x23
  42ef74:	mov	w5, #0x1                   	// #1
  42ef78:	mov	w4, #0x700                 	// #1792
  42ef7c:	bl	42e208 <wcrtomb@plt+0x295e8>
  42ef80:	cbnz	w0, 42f04c <wcrtomb@plt+0x2a42c>
  42ef84:	ldp	x4, x5, [x19, #152]
  42ef88:	mov	x1, x20
  42ef8c:	ldr	x2, [sp, #72]
  42ef90:	add	x0, sp, #0x50
  42ef94:	ldr	x3, [sp, #96]
  42ef98:	blr	x5
  42ef9c:	mov	w20, w0
  42efa0:	mov	x0, x23
  42efa4:	bl	42c108 <wcrtomb@plt+0x274e8>
  42efa8:	ldr	x23, [sp, #48]
  42efac:	b	42eec0 <wcrtomb@plt+0x2a2a0>
  42efb0:	ldr	w0, [x19, #32]
  42efb4:	mov	w1, #0x7                   	// #7
  42efb8:	str	w1, [x19, #192]
  42efbc:	tbnz	w0, #4, 42efec <wcrtomb@plt+0x2a3cc>
  42efc0:	mov	w20, #0x1                   	// #1
  42efc4:	mov	w0, w20
  42efc8:	ldp	x19, x20, [sp, #16]
  42efcc:	ldp	x21, x22, [sp, #32]
  42efd0:	ldp	x29, x30, [sp], #320
  42efd4:	ret
  42efd8:	cmp	w20, #0x9
  42efdc:	b.eq	42f0ec <wcrtomb@plt+0x2a4cc>  // b.none
  42efe0:	ldr	w0, [x19, #32]
  42efe4:	str	w20, [x19, #192]
  42efe8:	tbz	w0, #4, 42efc0 <wcrtomb@plt+0x2a3a0>
  42efec:	mov	x0, x19
  42eff0:	mov	w20, #0x1                   	// #1
  42eff4:	bl	42c218 <wcrtomb@plt+0x275f8>
  42eff8:	mov	w0, w20
  42effc:	ldp	x19, x20, [sp, #16]
  42f000:	ldp	x21, x22, [sp, #32]
  42f004:	ldp	x29, x30, [sp], #320
  42f008:	ret
  42f00c:	add	x1, sp, #0x58
  42f010:	mov	x0, x19
  42f014:	bl	42c520 <wcrtomb@plt+0x27900>
  42f018:	mov	w20, w0
  42f01c:	cbnz	w0, 42efc0 <wcrtomb@plt+0x2a3a0>
  42f020:	ldr	x2, [x22]
  42f024:	mov	x0, x19
  42f028:	ldr	x1, [sp, #88]
  42f02c:	bl	42bc98 <wcrtomb@plt+0x27078>
  42f030:	ldp	x1, x0, [sp, #80]
  42f034:	str	x0, [x22]
  42f038:	mov	w2, #0xa                   	// #10
  42f03c:	orr	w21, w21, w2
  42f040:	str	w21, [x0, #16]
  42f044:	str	x1, [x0, #24]
  42f048:	b	42efc4 <wcrtomb@plt+0x2a3a4>
  42f04c:	ldr	w0, [x19, #192]
  42f050:	cmp	w0, #0x9
  42f054:	b.eq	42f110 <wcrtomb@plt+0x2a4f0>  // b.none
  42f058:	ldr	w0, [sp, #280]
  42f05c:	str	w0, [x19, #192]
  42f060:	cmp	w0, #0x9
  42f064:	b.ne	42f078 <wcrtomb@plt+0x2a458>  // b.any
  42f068:	str	wzr, [sp, #280]
  42f06c:	ldr	x0, [sp, #288]
  42f070:	str	xzr, [sp, #288]
  42f074:	str	x0, [x19, #200]
  42f078:	mov	x0, x23
  42f07c:	mov	w20, #0x1                   	// #1
  42f080:	bl	42c108 <wcrtomb@plt+0x274e8>
  42f084:	mov	w0, w20
  42f088:	ldp	x19, x20, [sp, #16]
  42f08c:	ldp	x21, x22, [sp, #32]
  42f090:	ldr	x23, [sp, #48]
  42f094:	ldp	x29, x30, [sp], #320
  42f098:	ret
  42f09c:	mov	x0, x20
  42f0a0:	bl	4047b0 <free@plt>
  42f0a4:	add	x1, sp, #0x58
  42f0a8:	mov	x0, x19
  42f0ac:	bl	42c520 <wcrtomb@plt+0x27900>
  42f0b0:	mov	w20, w0
  42f0b4:	cbnz	w0, 42efc0 <wcrtomb@plt+0x2a3a0>
  42f0b8:	ldr	x2, [x22]
  42f0bc:	mov	x0, x19
  42f0c0:	ldr	x1, [sp, #88]
  42f0c4:	bl	42bc98 <wcrtomb@plt+0x27078>
  42f0c8:	ldr	x0, [sp, #88]
  42f0cc:	str	x0, [x22]
  42f0d0:	mov	w1, #0x1                   	// #1
  42f0d4:	str	w1, [x0, #16]
  42f0d8:	b	42efc4 <wcrtomb@plt+0x2a3a4>
  42f0dc:	mov	x0, x19
  42f0e0:	bl	42c2e0 <wcrtomb@plt+0x276c0>
  42f0e4:	mov	w20, w0
  42f0e8:	b	42efc4 <wcrtomb@plt+0x2a3a4>
  42f0ec:	ldr	w0, [x19, #192]
  42f0f0:	cmp	w0, #0x9
  42f0f4:	b.eq	42f104 <wcrtomb@plt+0x2a4e4>  // b.none
  42f0f8:	ldr	x0, [sp, #80]
  42f0fc:	str	x0, [x19, #200]
  42f100:	b	42efe0 <wcrtomb@plt+0x2a3c0>
  42f104:	ldr	x0, [x19, #200]
  42f108:	bl	4047b0 <free@plt>
  42f10c:	b	42f0f8 <wcrtomb@plt+0x2a4d8>
  42f110:	ldr	x0, [x19, #200]
  42f114:	bl	4047b0 <free@plt>
  42f118:	b	42f058 <wcrtomb@plt+0x2a438>
  42f11c:	nop
  42f120:	stp	x29, x30, [sp, #-32]!
  42f124:	mov	x29, sp
  42f128:	stp	x19, x20, [sp, #16]
  42f12c:	mov	x19, x2
  42f130:	cbz	x0, 42f178 <wcrtomb@plt+0x2a558>
  42f134:	mov	x2, x1
  42f138:	mov	x1, x0
  42f13c:	mov	x0, x19
  42f140:	bl	42d140 <wcrtomb@plt+0x28520>
  42f144:	mov	w20, w0
  42f148:	cbnz	w0, 42f1b4 <wcrtomb@plt+0x2a594>
  42f14c:	mov	x20, #0x0                   	// #0
  42f150:	str	wzr, [x19, #224]
  42f154:	mov	x1, x20
  42f158:	mov	x0, x19
  42f15c:	bl	42dbe8 <wcrtomb@plt+0x28fc8>
  42f160:	mov	w20, w0
  42f164:	cbnz	w0, 42f1b4 <wcrtomb@plt+0x2a594>
  42f168:	mov	x0, x19
  42f16c:	ldp	x19, x20, [sp, #16]
  42f170:	ldp	x29, x30, [sp], #32
  42f174:	b	42de40 <wcrtomb@plt+0x29220>
  42f178:	mov	w2, w3
  42f17c:	tbz	w2, #29, 42f1d8 <wcrtomb@plt+0x2a5b8>
  42f180:	ldr	x0, [x19, #208]
  42f184:	cbnz	x0, 42f168 <wcrtomb@plt+0x2a548>
  42f188:	ldp	x2, x1, [x19, #176]
  42f18c:	ldr	w0, [x19, #32]
  42f190:	tst	x0, #0x1000
  42f194:	cinc	x20, x1, eq  // eq = none
  42f198:	cmp	x1, x2
  42f19c:	b.ne	42f1c4 <wcrtomb@plt+0x2a5a4>  // b.any
  42f1a0:	mov	w20, #0x6                   	// #6
  42f1a4:	str	w20, [x19, #192]
  42f1a8:	tbz	w0, #4, 42f1b4 <wcrtomb@plt+0x2a594>
  42f1ac:	mov	x0, x19
  42f1b0:	bl	42c218 <wcrtomb@plt+0x275f8>
  42f1b4:	mov	w0, w20
  42f1b8:	ldp	x19, x20, [sp, #16]
  42f1bc:	ldp	x29, x30, [sp], #32
  42f1c0:	ret
  42f1c4:	orr	w0, w0, #0x8
  42f1c8:	str	w0, [x19, #32]
  42f1cc:	mov	x0, x19
  42f1d0:	bl	42c030 <wcrtomb@plt+0x27410>
  42f1d4:	b	42f154 <wcrtomb@plt+0x2a534>
  42f1d8:	ldr	w0, [x19, #32]
  42f1dc:	mov	w20, #0x3                   	// #3
  42f1e0:	str	w20, [x19, #192]
  42f1e4:	tbz	w0, #4, 42f1b4 <wcrtomb@plt+0x2a594>
  42f1e8:	b	42f1ac <wcrtomb@plt+0x2a58c>
  42f1ec:	nop
  42f1f0:	stp	x29, x30, [sp, #-48]!
  42f1f4:	mov	x29, sp
  42f1f8:	stp	x19, x20, [sp, #16]
  42f1fc:	mov	x20, x1
  42f200:	mov	x19, x0
  42f204:	str	x21, [sp, #32]
  42f208:	mov	x1, #0x0                   	// #0
  42f20c:	mov	w21, w2
  42f210:	cbz	x0, 42f21c <wcrtomb@plt+0x2a5fc>
  42f214:	bl	403ff0 <strlen@plt>
  42f218:	mov	x1, x0
  42f21c:	mov	w3, w21
  42f220:	mov	x2, x20
  42f224:	mov	x0, x19
  42f228:	ldp	x19, x20, [sp, #16]
  42f22c:	ldr	x21, [sp, #32]
  42f230:	ldp	x29, x30, [sp], #48
  42f234:	b	42f120 <wcrtomb@plt+0x2a500>
  42f238:	b	42f120 <wcrtomb@plt+0x2a500>
  42f23c:	nop
  42f240:	mov	x12, #0x1030                	// #4144
  42f244:	sub	sp, sp, x12
  42f248:	cmn	w0, #0x64
  42f24c:	stp	x29, x30, [sp]
  42f250:	mov	x29, sp
  42f254:	stp	x19, x20, [sp, #16]
  42f258:	mov	x20, x1
  42f25c:	stp	x21, x22, [sp, #32]
  42f260:	mov	x22, x2
  42f264:	stp	x23, x24, [sp, #48]
  42f268:	mov	x23, x3
  42f26c:	mov	x24, x4
  42f270:	stp	x25, x26, [sp, #64]
  42f274:	mov	w25, w5
  42f278:	b.eq	42f360 <wcrtomb@plt+0x2a740>  // b.none
  42f27c:	mov	w19, w0
  42f280:	ldrb	w0, [x1]
  42f284:	cmp	w0, #0x2f
  42f288:	b.eq	42f360 <wcrtomb@plt+0x2a740>  // b.none
  42f28c:	add	x26, sp, #0x70
  42f290:	mov	x2, x1
  42f294:	mov	x0, x26
  42f298:	mov	w1, w19
  42f29c:	stp	x27, x28, [sp, #80]
  42f2a0:	bl	442218 <_obstack_memory_used@@Base+0x28>
  42f2a4:	mov	x27, x0
  42f2a8:	cbz	x0, 42f2f8 <wcrtomb@plt+0x2a6d8>
  42f2ac:	mov	x1, x22
  42f2b0:	mov	w4, w25
  42f2b4:	mov	x3, x24
  42f2b8:	mov	x2, x23
  42f2bc:	bl	4043f0 <setxattr@plt>
  42f2c0:	mov	w21, w0
  42f2c4:	bl	404ad0 <__errno_location@plt>
  42f2c8:	ldr	w1, [x0]
  42f2cc:	mov	x28, x0
  42f2d0:	cmp	x27, x26
  42f2d4:	b.eq	42f2e8 <wcrtomb@plt+0x2a6c8>  // b.none
  42f2d8:	mov	x0, x27
  42f2dc:	str	w1, [sp, #108]
  42f2e0:	bl	4047b0 <free@plt>
  42f2e4:	ldr	w1, [sp, #108]
  42f2e8:	cmn	w21, #0x1
  42f2ec:	b.ne	42f3a0 <wcrtomb@plt+0x2a780>  // b.any
  42f2f0:	cmp	w1, #0x14
  42f2f4:	b.ne	42f3a8 <wcrtomb@plt+0x2a788>  // b.any
  42f2f8:	mov	x0, x26
  42f2fc:	bl	440560 <argp_parse@@Base+0xc678>
  42f300:	cbnz	w0, 42f454 <wcrtomb@plt+0x2a834>
  42f304:	tbnz	w19, #31, 42f314 <wcrtomb@plt+0x2a6f4>
  42f308:	ldr	w0, [sp, #112]
  42f30c:	cmp	w0, w19
  42f310:	b.eq	42f428 <wcrtomb@plt+0x2a808>  // b.none
  42f314:	mov	w0, w19
  42f318:	bl	404060 <fchdir@plt>
  42f31c:	cbnz	w0, 42f404 <wcrtomb@plt+0x2a7e4>
  42f320:	mov	w4, w25
  42f324:	mov	x3, x24
  42f328:	mov	x2, x23
  42f32c:	mov	x1, x22
  42f330:	mov	x0, x20
  42f334:	bl	4043f0 <setxattr@plt>
  42f338:	mov	w21, w0
  42f33c:	cmn	w0, #0x1
  42f340:	b.eq	42f3d4 <wcrtomb@plt+0x2a7b4>  // b.none
  42f344:	mov	x0, x26
  42f348:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42f34c:	cbnz	w0, 42f448 <wcrtomb@plt+0x2a828>
  42f350:	mov	x0, x26
  42f354:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f358:	ldp	x27, x28, [sp, #80]
  42f35c:	b	42f37c <wcrtomb@plt+0x2a75c>
  42f360:	mov	w4, w25
  42f364:	mov	x3, x24
  42f368:	mov	x2, x23
  42f36c:	mov	x1, x22
  42f370:	mov	x0, x20
  42f374:	bl	4043f0 <setxattr@plt>
  42f378:	mov	w21, w0
  42f37c:	mov	w0, w21
  42f380:	mov	x12, #0x1030                	// #4144
  42f384:	ldp	x29, x30, [sp]
  42f388:	ldp	x19, x20, [sp, #16]
  42f38c:	ldp	x21, x22, [sp, #32]
  42f390:	ldp	x23, x24, [sp, #48]
  42f394:	ldp	x25, x26, [sp, #64]
  42f398:	add	sp, sp, x12
  42f39c:	ret
  42f3a0:	ldp	x27, x28, [sp, #80]
  42f3a4:	b	42f37c <wcrtomb@plt+0x2a75c>
  42f3a8:	sub	w0, w1, #0x1
  42f3ac:	cmp	w0, #0x1
  42f3b0:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
  42f3b4:	b.eq	42f2f8 <wcrtomb@plt+0x2a6d8>  // b.none
  42f3b8:	cmp	w1, #0x26
  42f3bc:	mov	w0, #0x5f                  	// #95
  42f3c0:	ccmp	w1, w0, #0x4, ne  // ne = any
  42f3c4:	b.eq	42f2f8 <wcrtomb@plt+0x2a6d8>  // b.none
  42f3c8:	str	w1, [x28]
  42f3cc:	ldp	x27, x28, [sp, #80]
  42f3d0:	b	42f37c <wcrtomb@plt+0x2a75c>
  42f3d4:	bl	404ad0 <__errno_location@plt>
  42f3d8:	mov	x19, x0
  42f3dc:	mov	x0, x26
  42f3e0:	ldr	w20, [x19]
  42f3e4:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42f3e8:	cbnz	w0, 42f448 <wcrtomb@plt+0x2a828>
  42f3ec:	mov	x0, x26
  42f3f0:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f3f4:	cbz	w20, 42f3a0 <wcrtomb@plt+0x2a780>
  42f3f8:	ldp	x27, x28, [sp, #80]
  42f3fc:	str	w20, [x19]
  42f400:	b	42f37c <wcrtomb@plt+0x2a75c>
  42f404:	bl	404ad0 <__errno_location@plt>
  42f408:	mov	x19, x0
  42f40c:	mov	w21, #0xffffffff            	// #-1
  42f410:	mov	x0, x26
  42f414:	ldr	w20, [x19]
  42f418:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f41c:	ldp	x27, x28, [sp, #80]
  42f420:	str	w20, [x19]
  42f424:	b	42f37c <wcrtomb@plt+0x2a75c>
  42f428:	mov	x0, x26
  42f42c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f430:	mov	w21, #0xffffffff            	// #-1
  42f434:	bl	404ad0 <__errno_location@plt>
  42f438:	mov	w1, #0x9                   	// #9
  42f43c:	ldp	x27, x28, [sp, #80]
  42f440:	str	w1, [x0]
  42f444:	b	42f37c <wcrtomb@plt+0x2a75c>
  42f448:	bl	404ad0 <__errno_location@plt>
  42f44c:	ldr	w0, [x0]
  42f450:	bl	43a5a0 <argp_parse@@Base+0x66b8>
  42f454:	bl	404ad0 <__errno_location@plt>
  42f458:	ldr	w0, [x0]
  42f45c:	bl	43a560 <argp_parse@@Base+0x6678>
  42f460:	mov	x12, #0x1030                	// #4144
  42f464:	sub	sp, sp, x12
  42f468:	cmn	w0, #0x64
  42f46c:	stp	x29, x30, [sp]
  42f470:	mov	x29, sp
  42f474:	stp	x19, x20, [sp, #16]
  42f478:	mov	x20, x1
  42f47c:	stp	x21, x22, [sp, #32]
  42f480:	mov	x22, x2
  42f484:	stp	x23, x24, [sp, #48]
  42f488:	mov	x23, x3
  42f48c:	mov	x24, x4
  42f490:	stp	x25, x26, [sp, #64]
  42f494:	mov	w25, w5
  42f498:	b.eq	42f580 <wcrtomb@plt+0x2a960>  // b.none
  42f49c:	mov	w19, w0
  42f4a0:	ldrb	w0, [x1]
  42f4a4:	cmp	w0, #0x2f
  42f4a8:	b.eq	42f580 <wcrtomb@plt+0x2a960>  // b.none
  42f4ac:	add	x26, sp, #0x70
  42f4b0:	mov	x2, x1
  42f4b4:	mov	x0, x26
  42f4b8:	mov	w1, w19
  42f4bc:	stp	x27, x28, [sp, #80]
  42f4c0:	bl	442218 <_obstack_memory_used@@Base+0x28>
  42f4c4:	mov	x27, x0
  42f4c8:	cbz	x0, 42f518 <wcrtomb@plt+0x2a8f8>
  42f4cc:	mov	x1, x22
  42f4d0:	mov	w4, w25
  42f4d4:	mov	x3, x24
  42f4d8:	mov	x2, x23
  42f4dc:	bl	4044d0 <lsetxattr@plt>
  42f4e0:	mov	w21, w0
  42f4e4:	bl	404ad0 <__errno_location@plt>
  42f4e8:	ldr	w1, [x0]
  42f4ec:	mov	x28, x0
  42f4f0:	cmp	x27, x26
  42f4f4:	b.eq	42f508 <wcrtomb@plt+0x2a8e8>  // b.none
  42f4f8:	mov	x0, x27
  42f4fc:	str	w1, [sp, #108]
  42f500:	bl	4047b0 <free@plt>
  42f504:	ldr	w1, [sp, #108]
  42f508:	cmn	w21, #0x1
  42f50c:	b.ne	42f5c0 <wcrtomb@plt+0x2a9a0>  // b.any
  42f510:	cmp	w1, #0x14
  42f514:	b.ne	42f5c8 <wcrtomb@plt+0x2a9a8>  // b.any
  42f518:	mov	x0, x26
  42f51c:	bl	440560 <argp_parse@@Base+0xc678>
  42f520:	cbnz	w0, 42f674 <wcrtomb@plt+0x2aa54>
  42f524:	tbnz	w19, #31, 42f534 <wcrtomb@plt+0x2a914>
  42f528:	ldr	w0, [sp, #112]
  42f52c:	cmp	w0, w19
  42f530:	b.eq	42f648 <wcrtomb@plt+0x2aa28>  // b.none
  42f534:	mov	w0, w19
  42f538:	bl	404060 <fchdir@plt>
  42f53c:	cbnz	w0, 42f624 <wcrtomb@plt+0x2aa04>
  42f540:	mov	w4, w25
  42f544:	mov	x3, x24
  42f548:	mov	x2, x23
  42f54c:	mov	x1, x22
  42f550:	mov	x0, x20
  42f554:	bl	4044d0 <lsetxattr@plt>
  42f558:	mov	w21, w0
  42f55c:	cmn	w0, #0x1
  42f560:	b.eq	42f5f4 <wcrtomb@plt+0x2a9d4>  // b.none
  42f564:	mov	x0, x26
  42f568:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42f56c:	cbnz	w0, 42f668 <wcrtomb@plt+0x2aa48>
  42f570:	mov	x0, x26
  42f574:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f578:	ldp	x27, x28, [sp, #80]
  42f57c:	b	42f59c <wcrtomb@plt+0x2a97c>
  42f580:	mov	w4, w25
  42f584:	mov	x3, x24
  42f588:	mov	x2, x23
  42f58c:	mov	x1, x22
  42f590:	mov	x0, x20
  42f594:	bl	4044d0 <lsetxattr@plt>
  42f598:	mov	w21, w0
  42f59c:	mov	w0, w21
  42f5a0:	mov	x12, #0x1030                	// #4144
  42f5a4:	ldp	x29, x30, [sp]
  42f5a8:	ldp	x19, x20, [sp, #16]
  42f5ac:	ldp	x21, x22, [sp, #32]
  42f5b0:	ldp	x23, x24, [sp, #48]
  42f5b4:	ldp	x25, x26, [sp, #64]
  42f5b8:	add	sp, sp, x12
  42f5bc:	ret
  42f5c0:	ldp	x27, x28, [sp, #80]
  42f5c4:	b	42f59c <wcrtomb@plt+0x2a97c>
  42f5c8:	sub	w0, w1, #0x1
  42f5cc:	cmp	w0, #0x1
  42f5d0:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
  42f5d4:	b.eq	42f518 <wcrtomb@plt+0x2a8f8>  // b.none
  42f5d8:	cmp	w1, #0x26
  42f5dc:	mov	w0, #0x5f                  	// #95
  42f5e0:	ccmp	w1, w0, #0x4, ne  // ne = any
  42f5e4:	b.eq	42f518 <wcrtomb@plt+0x2a8f8>  // b.none
  42f5e8:	str	w1, [x28]
  42f5ec:	ldp	x27, x28, [sp, #80]
  42f5f0:	b	42f59c <wcrtomb@plt+0x2a97c>
  42f5f4:	bl	404ad0 <__errno_location@plt>
  42f5f8:	mov	x19, x0
  42f5fc:	mov	x0, x26
  42f600:	ldr	w20, [x19]
  42f604:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42f608:	cbnz	w0, 42f668 <wcrtomb@plt+0x2aa48>
  42f60c:	mov	x0, x26
  42f610:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f614:	cbz	w20, 42f5c0 <wcrtomb@plt+0x2a9a0>
  42f618:	ldp	x27, x28, [sp, #80]
  42f61c:	str	w20, [x19]
  42f620:	b	42f59c <wcrtomb@plt+0x2a97c>
  42f624:	bl	404ad0 <__errno_location@plt>
  42f628:	mov	x19, x0
  42f62c:	mov	w21, #0xffffffff            	// #-1
  42f630:	mov	x0, x26
  42f634:	ldr	w20, [x19]
  42f638:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f63c:	ldp	x27, x28, [sp, #80]
  42f640:	str	w20, [x19]
  42f644:	b	42f59c <wcrtomb@plt+0x2a97c>
  42f648:	mov	x0, x26
  42f64c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f650:	mov	w21, #0xffffffff            	// #-1
  42f654:	bl	404ad0 <__errno_location@plt>
  42f658:	mov	w1, #0x9                   	// #9
  42f65c:	ldp	x27, x28, [sp, #80]
  42f660:	str	w1, [x0]
  42f664:	b	42f59c <wcrtomb@plt+0x2a97c>
  42f668:	bl	404ad0 <__errno_location@plt>
  42f66c:	ldr	w0, [x0]
  42f670:	bl	43a5a0 <argp_parse@@Base+0x66b8>
  42f674:	bl	404ad0 <__errno_location@plt>
  42f678:	ldr	w0, [x0]
  42f67c:	bl	43a560 <argp_parse@@Base+0x6678>
  42f680:	mov	x12, #0x1020                	// #4128
  42f684:	sub	sp, sp, x12
  42f688:	cmn	w0, #0x64
  42f68c:	stp	x29, x30, [sp]
  42f690:	mov	x29, sp
  42f694:	stp	x19, x20, [sp, #16]
  42f698:	mov	x20, x1
  42f69c:	stp	x21, x22, [sp, #32]
  42f6a0:	mov	x22, x2
  42f6a4:	stp	x23, x24, [sp, #48]
  42f6a8:	mov	x23, x3
  42f6ac:	mov	x24, x4
  42f6b0:	b.eq	42f7cc <wcrtomb@plt+0x2abac>  // b.none
  42f6b4:	mov	w19, w0
  42f6b8:	ldrb	w0, [x1]
  42f6bc:	cmp	w0, #0x2f
  42f6c0:	b.eq	42f7cc <wcrtomb@plt+0x2abac>  // b.none
  42f6c4:	stp	x25, x26, [sp, #64]
  42f6c8:	add	x26, sp, #0x60
  42f6cc:	mov	x2, x1
  42f6d0:	mov	x0, x26
  42f6d4:	mov	w1, w19
  42f6d8:	bl	442218 <_obstack_memory_used@@Base+0x28>
  42f6dc:	mov	x25, x0
  42f6e0:	cbz	x0, 42f74c <wcrtomb@plt+0x2ab2c>
  42f6e4:	mov	x3, x24
  42f6e8:	mov	x2, x23
  42f6ec:	mov	x1, x22
  42f6f0:	stp	x27, x28, [sp, #80]
  42f6f4:	bl	4046c0 <getxattr@plt>
  42f6f8:	mov	x21, x0
  42f6fc:	bl	404ad0 <__errno_location@plt>
  42f700:	ldr	w28, [x0]
  42f704:	mov	x27, x0
  42f708:	cmp	x25, x26
  42f70c:	b.eq	42f718 <wcrtomb@plt+0x2aaf8>  // b.none
  42f710:	mov	x0, x25
  42f714:	bl	4047b0 <free@plt>
  42f718:	cmn	x21, #0x1
  42f71c:	b.ne	42f804 <wcrtomb@plt+0x2abe4>  // b.any
  42f720:	cmp	w28, #0x14
  42f724:	b.eq	42f748 <wcrtomb@plt+0x2ab28>  // b.none
  42f728:	sub	w0, w28, #0x1
  42f72c:	cmp	w0, #0x1
  42f730:	ccmp	w28, #0xd, #0x4, hi  // hi = pmore
  42f734:	b.eq	42f748 <wcrtomb@plt+0x2ab28>  // b.none
  42f738:	cmp	w28, #0x26
  42f73c:	mov	w0, #0x5f                  	// #95
  42f740:	ccmp	w28, w0, #0x4, ne  // ne = any
  42f744:	b.ne	42f8b8 <wcrtomb@plt+0x2ac98>  // b.any
  42f748:	ldp	x27, x28, [sp, #80]
  42f74c:	mov	x0, x26
  42f750:	bl	440560 <argp_parse@@Base+0xc678>
  42f754:	cbnz	w0, 42f900 <wcrtomb@plt+0x2ace0>
  42f758:	tbnz	w19, #31, 42f768 <wcrtomb@plt+0x2ab48>
  42f75c:	ldr	w0, [sp, #96]
  42f760:	cmp	w0, w19
  42f764:	b.eq	42f8c8 <wcrtomb@plt+0x2aca8>  // b.none
  42f768:	mov	w0, w19
  42f76c:	bl	404060 <fchdir@plt>
  42f770:	cbnz	w0, 42f878 <wcrtomb@plt+0x2ac58>
  42f774:	mov	x3, x24
  42f778:	mov	x2, x23
  42f77c:	mov	x1, x22
  42f780:	mov	x0, x20
  42f784:	bl	4046c0 <getxattr@plt>
  42f788:	mov	x21, x0
  42f78c:	cmn	x0, #0x1
  42f790:	b.eq	42f82c <wcrtomb@plt+0x2ac0c>  // b.none
  42f794:	mov	x0, x26
  42f798:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42f79c:	cbnz	w0, 42f8f0 <wcrtomb@plt+0x2acd0>
  42f7a0:	mov	x0, x26
  42f7a4:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f7a8:	mov	x0, x21
  42f7ac:	mov	x12, #0x1020                	// #4128
  42f7b0:	ldp	x29, x30, [sp]
  42f7b4:	ldp	x19, x20, [sp, #16]
  42f7b8:	ldp	x21, x22, [sp, #32]
  42f7bc:	ldp	x23, x24, [sp, #48]
  42f7c0:	ldp	x25, x26, [sp, #64]
  42f7c4:	add	sp, sp, x12
  42f7c8:	ret
  42f7cc:	mov	x3, x24
  42f7d0:	mov	x2, x23
  42f7d4:	mov	x1, x22
  42f7d8:	mov	x0, x20
  42f7dc:	bl	4046c0 <getxattr@plt>
  42f7e0:	mov	x21, x0
  42f7e4:	mov	x0, x21
  42f7e8:	mov	x12, #0x1020                	// #4128
  42f7ec:	ldp	x29, x30, [sp]
  42f7f0:	ldp	x19, x20, [sp, #16]
  42f7f4:	ldp	x21, x22, [sp, #32]
  42f7f8:	ldp	x23, x24, [sp, #48]
  42f7fc:	add	sp, sp, x12
  42f800:	ret
  42f804:	mov	x0, x21
  42f808:	mov	x12, #0x1020                	// #4128
  42f80c:	ldp	x29, x30, [sp]
  42f810:	ldp	x19, x20, [sp, #16]
  42f814:	ldp	x21, x22, [sp, #32]
  42f818:	ldp	x23, x24, [sp, #48]
  42f81c:	ldp	x25, x26, [sp, #64]
  42f820:	ldp	x27, x28, [sp, #80]
  42f824:	add	sp, sp, x12
  42f828:	ret
  42f82c:	bl	404ad0 <__errno_location@plt>
  42f830:	mov	x19, x0
  42f834:	mov	x0, x26
  42f838:	ldr	w20, [x19]
  42f83c:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42f840:	cbnz	w0, 42f8f0 <wcrtomb@plt+0x2acd0>
  42f844:	mov	x0, x26
  42f848:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f84c:	cbz	w20, 42f8e8 <wcrtomb@plt+0x2acc8>
  42f850:	ldp	x25, x26, [sp, #64]
  42f854:	str	w20, [x19]
  42f858:	mov	x0, x21
  42f85c:	mov	x12, #0x1020                	// #4128
  42f860:	ldp	x29, x30, [sp]
  42f864:	ldp	x19, x20, [sp, #16]
  42f868:	ldp	x21, x22, [sp, #32]
  42f86c:	ldp	x23, x24, [sp, #48]
  42f870:	add	sp, sp, x12
  42f874:	ret
  42f878:	bl	404ad0 <__errno_location@plt>
  42f87c:	mov	x19, x0
  42f880:	mov	x0, x26
  42f884:	mov	x21, #0xffffffffffffffff    	// #-1
  42f888:	ldr	w20, [x19]
  42f88c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f890:	ldp	x25, x26, [sp, #64]
  42f894:	str	w20, [x19]
  42f898:	mov	x0, x21
  42f89c:	mov	x12, #0x1020                	// #4128
  42f8a0:	ldp	x29, x30, [sp]
  42f8a4:	ldp	x19, x20, [sp, #16]
  42f8a8:	ldp	x21, x22, [sp, #32]
  42f8ac:	ldp	x23, x24, [sp, #48]
  42f8b0:	add	sp, sp, x12
  42f8b4:	ret
  42f8b8:	ldp	x25, x26, [sp, #64]
  42f8bc:	str	w28, [x27]
  42f8c0:	ldp	x27, x28, [sp, #80]
  42f8c4:	b	42f7e4 <wcrtomb@plt+0x2abc4>
  42f8c8:	mov	x0, x26
  42f8cc:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42f8d0:	mov	x21, #0xffffffffffffffff    	// #-1
  42f8d4:	bl	404ad0 <__errno_location@plt>
  42f8d8:	mov	w1, #0x9                   	// #9
  42f8dc:	ldp	x25, x26, [sp, #64]
  42f8e0:	str	w1, [x0]
  42f8e4:	b	42f7e4 <wcrtomb@plt+0x2abc4>
  42f8e8:	ldp	x25, x26, [sp, #64]
  42f8ec:	b	42f7e4 <wcrtomb@plt+0x2abc4>
  42f8f0:	stp	x27, x28, [sp, #80]
  42f8f4:	bl	404ad0 <__errno_location@plt>
  42f8f8:	ldr	w0, [x0]
  42f8fc:	bl	43a5a0 <argp_parse@@Base+0x66b8>
  42f900:	stp	x27, x28, [sp, #80]
  42f904:	bl	404ad0 <__errno_location@plt>
  42f908:	ldr	w0, [x0]
  42f90c:	bl	43a560 <argp_parse@@Base+0x6678>
  42f910:	mov	x12, #0x1020                	// #4128
  42f914:	sub	sp, sp, x12
  42f918:	cmn	w0, #0x64
  42f91c:	stp	x29, x30, [sp]
  42f920:	mov	x29, sp
  42f924:	stp	x19, x20, [sp, #16]
  42f928:	mov	x20, x1
  42f92c:	stp	x21, x22, [sp, #32]
  42f930:	mov	x22, x2
  42f934:	stp	x23, x24, [sp, #48]
  42f938:	mov	x23, x3
  42f93c:	mov	x24, x4
  42f940:	b.eq	42fa5c <wcrtomb@plt+0x2ae3c>  // b.none
  42f944:	mov	w19, w0
  42f948:	ldrb	w0, [x1]
  42f94c:	cmp	w0, #0x2f
  42f950:	b.eq	42fa5c <wcrtomb@plt+0x2ae3c>  // b.none
  42f954:	stp	x25, x26, [sp, #64]
  42f958:	add	x26, sp, #0x60
  42f95c:	mov	x2, x1
  42f960:	mov	x0, x26
  42f964:	mov	w1, w19
  42f968:	bl	442218 <_obstack_memory_used@@Base+0x28>
  42f96c:	mov	x25, x0
  42f970:	cbz	x0, 42f9dc <wcrtomb@plt+0x2adbc>
  42f974:	mov	x3, x24
  42f978:	mov	x2, x23
  42f97c:	mov	x1, x22
  42f980:	stp	x27, x28, [sp, #80]
  42f984:	bl	404570 <lgetxattr@plt>
  42f988:	mov	x21, x0
  42f98c:	bl	404ad0 <__errno_location@plt>
  42f990:	ldr	w28, [x0]
  42f994:	mov	x27, x0
  42f998:	cmp	x25, x26
  42f99c:	b.eq	42f9a8 <wcrtomb@plt+0x2ad88>  // b.none
  42f9a0:	mov	x0, x25
  42f9a4:	bl	4047b0 <free@plt>
  42f9a8:	cmn	x21, #0x1
  42f9ac:	b.ne	42fa94 <wcrtomb@plt+0x2ae74>  // b.any
  42f9b0:	cmp	w28, #0x14
  42f9b4:	b.eq	42f9d8 <wcrtomb@plt+0x2adb8>  // b.none
  42f9b8:	sub	w0, w28, #0x1
  42f9bc:	cmp	w0, #0x1
  42f9c0:	ccmp	w28, #0xd, #0x4, hi  // hi = pmore
  42f9c4:	b.eq	42f9d8 <wcrtomb@plt+0x2adb8>  // b.none
  42f9c8:	cmp	w28, #0x26
  42f9cc:	mov	w0, #0x5f                  	// #95
  42f9d0:	ccmp	w28, w0, #0x4, ne  // ne = any
  42f9d4:	b.ne	42fb48 <wcrtomb@plt+0x2af28>  // b.any
  42f9d8:	ldp	x27, x28, [sp, #80]
  42f9dc:	mov	x0, x26
  42f9e0:	bl	440560 <argp_parse@@Base+0xc678>
  42f9e4:	cbnz	w0, 42fb90 <wcrtomb@plt+0x2af70>
  42f9e8:	tbnz	w19, #31, 42f9f8 <wcrtomb@plt+0x2add8>
  42f9ec:	ldr	w0, [sp, #96]
  42f9f0:	cmp	w0, w19
  42f9f4:	b.eq	42fb58 <wcrtomb@plt+0x2af38>  // b.none
  42f9f8:	mov	w0, w19
  42f9fc:	bl	404060 <fchdir@plt>
  42fa00:	cbnz	w0, 42fb08 <wcrtomb@plt+0x2aee8>
  42fa04:	mov	x3, x24
  42fa08:	mov	x2, x23
  42fa0c:	mov	x1, x22
  42fa10:	mov	x0, x20
  42fa14:	bl	404570 <lgetxattr@plt>
  42fa18:	mov	x21, x0
  42fa1c:	cmn	x0, #0x1
  42fa20:	b.eq	42fabc <wcrtomb@plt+0x2ae9c>  // b.none
  42fa24:	mov	x0, x26
  42fa28:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42fa2c:	cbnz	w0, 42fb80 <wcrtomb@plt+0x2af60>
  42fa30:	mov	x0, x26
  42fa34:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42fa38:	mov	x0, x21
  42fa3c:	mov	x12, #0x1020                	// #4128
  42fa40:	ldp	x29, x30, [sp]
  42fa44:	ldp	x19, x20, [sp, #16]
  42fa48:	ldp	x21, x22, [sp, #32]
  42fa4c:	ldp	x23, x24, [sp, #48]
  42fa50:	ldp	x25, x26, [sp, #64]
  42fa54:	add	sp, sp, x12
  42fa58:	ret
  42fa5c:	mov	x3, x24
  42fa60:	mov	x2, x23
  42fa64:	mov	x1, x22
  42fa68:	mov	x0, x20
  42fa6c:	bl	404570 <lgetxattr@plt>
  42fa70:	mov	x21, x0
  42fa74:	mov	x0, x21
  42fa78:	mov	x12, #0x1020                	// #4128
  42fa7c:	ldp	x29, x30, [sp]
  42fa80:	ldp	x19, x20, [sp, #16]
  42fa84:	ldp	x21, x22, [sp, #32]
  42fa88:	ldp	x23, x24, [sp, #48]
  42fa8c:	add	sp, sp, x12
  42fa90:	ret
  42fa94:	mov	x0, x21
  42fa98:	mov	x12, #0x1020                	// #4128
  42fa9c:	ldp	x29, x30, [sp]
  42faa0:	ldp	x19, x20, [sp, #16]
  42faa4:	ldp	x21, x22, [sp, #32]
  42faa8:	ldp	x23, x24, [sp, #48]
  42faac:	ldp	x25, x26, [sp, #64]
  42fab0:	ldp	x27, x28, [sp, #80]
  42fab4:	add	sp, sp, x12
  42fab8:	ret
  42fabc:	bl	404ad0 <__errno_location@plt>
  42fac0:	mov	x19, x0
  42fac4:	mov	x0, x26
  42fac8:	ldr	w20, [x19]
  42facc:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42fad0:	cbnz	w0, 42fb80 <wcrtomb@plt+0x2af60>
  42fad4:	mov	x0, x26
  42fad8:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42fadc:	cbz	w20, 42fb78 <wcrtomb@plt+0x2af58>
  42fae0:	ldp	x25, x26, [sp, #64]
  42fae4:	str	w20, [x19]
  42fae8:	mov	x0, x21
  42faec:	mov	x12, #0x1020                	// #4128
  42faf0:	ldp	x29, x30, [sp]
  42faf4:	ldp	x19, x20, [sp, #16]
  42faf8:	ldp	x21, x22, [sp, #32]
  42fafc:	ldp	x23, x24, [sp, #48]
  42fb00:	add	sp, sp, x12
  42fb04:	ret
  42fb08:	bl	404ad0 <__errno_location@plt>
  42fb0c:	mov	x19, x0
  42fb10:	mov	x0, x26
  42fb14:	mov	x21, #0xffffffffffffffff    	// #-1
  42fb18:	ldr	w20, [x19]
  42fb1c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42fb20:	ldp	x25, x26, [sp, #64]
  42fb24:	str	w20, [x19]
  42fb28:	mov	x0, x21
  42fb2c:	mov	x12, #0x1020                	// #4128
  42fb30:	ldp	x29, x30, [sp]
  42fb34:	ldp	x19, x20, [sp, #16]
  42fb38:	ldp	x21, x22, [sp, #32]
  42fb3c:	ldp	x23, x24, [sp, #48]
  42fb40:	add	sp, sp, x12
  42fb44:	ret
  42fb48:	ldp	x25, x26, [sp, #64]
  42fb4c:	str	w28, [x27]
  42fb50:	ldp	x27, x28, [sp, #80]
  42fb54:	b	42fa74 <wcrtomb@plt+0x2ae54>
  42fb58:	mov	x0, x26
  42fb5c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42fb60:	mov	x21, #0xffffffffffffffff    	// #-1
  42fb64:	bl	404ad0 <__errno_location@plt>
  42fb68:	mov	w1, #0x9                   	// #9
  42fb6c:	ldp	x25, x26, [sp, #64]
  42fb70:	str	w1, [x0]
  42fb74:	b	42fa74 <wcrtomb@plt+0x2ae54>
  42fb78:	ldp	x25, x26, [sp, #64]
  42fb7c:	b	42fa74 <wcrtomb@plt+0x2ae54>
  42fb80:	stp	x27, x28, [sp, #80]
  42fb84:	bl	404ad0 <__errno_location@plt>
  42fb88:	ldr	w0, [x0]
  42fb8c:	bl	43a5a0 <argp_parse@@Base+0x66b8>
  42fb90:	stp	x27, x28, [sp, #80]
  42fb94:	bl	404ad0 <__errno_location@plt>
  42fb98:	ldr	w0, [x0]
  42fb9c:	bl	43a560 <argp_parse@@Base+0x6678>
  42fba0:	mov	x12, #0x1020                	// #4128
  42fba4:	sub	sp, sp, x12
  42fba8:	cmn	w0, #0x64
  42fbac:	stp	x29, x30, [sp]
  42fbb0:	mov	x29, sp
  42fbb4:	stp	x19, x20, [sp, #16]
  42fbb8:	mov	x20, x1
  42fbbc:	stp	x21, x22, [sp, #32]
  42fbc0:	mov	x22, x2
  42fbc4:	stp	x23, x24, [sp, #48]
  42fbc8:	mov	x23, x3
  42fbcc:	b.eq	42fce0 <wcrtomb@plt+0x2b0c0>  // b.none
  42fbd0:	mov	w19, w0
  42fbd4:	ldrb	w0, [x1]
  42fbd8:	cmp	w0, #0x2f
  42fbdc:	b.eq	42fce0 <wcrtomb@plt+0x2b0c0>  // b.none
  42fbe0:	stp	x25, x26, [sp, #64]
  42fbe4:	add	x25, sp, #0x60
  42fbe8:	mov	x2, x1
  42fbec:	mov	x0, x25
  42fbf0:	mov	w1, w19
  42fbf4:	bl	442218 <_obstack_memory_used@@Base+0x28>
  42fbf8:	mov	x24, x0
  42fbfc:	cbz	x0, 42fc64 <wcrtomb@plt+0x2b044>
  42fc00:	mov	x2, x23
  42fc04:	mov	x1, x22
  42fc08:	str	x27, [sp, #80]
  42fc0c:	bl	4044e0 <listxattr@plt>
  42fc10:	mov	x21, x0
  42fc14:	bl	404ad0 <__errno_location@plt>
  42fc18:	ldr	w27, [x0]
  42fc1c:	mov	x26, x0
  42fc20:	cmp	x24, x25
  42fc24:	b.eq	42fc30 <wcrtomb@plt+0x2b010>  // b.none
  42fc28:	mov	x0, x24
  42fc2c:	bl	4047b0 <free@plt>
  42fc30:	cmn	x21, #0x1
  42fc34:	b.ne	42fd14 <wcrtomb@plt+0x2b0f4>  // b.any
  42fc38:	cmp	w27, #0x14
  42fc3c:	b.eq	42fc60 <wcrtomb@plt+0x2b040>  // b.none
  42fc40:	sub	w0, w27, #0x1
  42fc44:	cmp	w0, #0x1
  42fc48:	ccmp	w27, #0xd, #0x4, hi  // hi = pmore
  42fc4c:	b.eq	42fc60 <wcrtomb@plt+0x2b040>  // b.none
  42fc50:	cmp	w27, #0x26
  42fc54:	mov	w0, #0x5f                  	// #95
  42fc58:	ccmp	w27, w0, #0x4, ne  // ne = any
  42fc5c:	b.ne	42fdc8 <wcrtomb@plt+0x2b1a8>  // b.any
  42fc60:	ldr	x27, [sp, #80]
  42fc64:	mov	x0, x25
  42fc68:	bl	440560 <argp_parse@@Base+0xc678>
  42fc6c:	cbnz	w0, 42fe10 <wcrtomb@plt+0x2b1f0>
  42fc70:	tbnz	w19, #31, 42fc80 <wcrtomb@plt+0x2b060>
  42fc74:	ldr	w0, [sp, #96]
  42fc78:	cmp	w0, w19
  42fc7c:	b.eq	42fdd8 <wcrtomb@plt+0x2b1b8>  // b.none
  42fc80:	mov	w0, w19
  42fc84:	bl	404060 <fchdir@plt>
  42fc88:	cbnz	w0, 42fd88 <wcrtomb@plt+0x2b168>
  42fc8c:	mov	x2, x23
  42fc90:	mov	x1, x22
  42fc94:	mov	x0, x20
  42fc98:	bl	4044e0 <listxattr@plt>
  42fc9c:	mov	x21, x0
  42fca0:	cmn	x0, #0x1
  42fca4:	b.eq	42fd3c <wcrtomb@plt+0x2b11c>  // b.none
  42fca8:	mov	x0, x25
  42fcac:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42fcb0:	cbnz	w0, 42fe00 <wcrtomb@plt+0x2b1e0>
  42fcb4:	mov	x0, x25
  42fcb8:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42fcbc:	mov	x0, x21
  42fcc0:	mov	x12, #0x1020                	// #4128
  42fcc4:	ldp	x29, x30, [sp]
  42fcc8:	ldp	x19, x20, [sp, #16]
  42fccc:	ldp	x21, x22, [sp, #32]
  42fcd0:	ldp	x23, x24, [sp, #48]
  42fcd4:	ldp	x25, x26, [sp, #64]
  42fcd8:	add	sp, sp, x12
  42fcdc:	ret
  42fce0:	mov	x2, x23
  42fce4:	mov	x1, x22
  42fce8:	mov	x0, x20
  42fcec:	bl	4044e0 <listxattr@plt>
  42fcf0:	mov	x21, x0
  42fcf4:	mov	x0, x21
  42fcf8:	mov	x12, #0x1020                	// #4128
  42fcfc:	ldp	x29, x30, [sp]
  42fd00:	ldp	x19, x20, [sp, #16]
  42fd04:	ldp	x21, x22, [sp, #32]
  42fd08:	ldp	x23, x24, [sp, #48]
  42fd0c:	add	sp, sp, x12
  42fd10:	ret
  42fd14:	mov	x0, x21
  42fd18:	mov	x12, #0x1020                	// #4128
  42fd1c:	ldp	x29, x30, [sp]
  42fd20:	ldp	x19, x20, [sp, #16]
  42fd24:	ldp	x21, x22, [sp, #32]
  42fd28:	ldp	x23, x24, [sp, #48]
  42fd2c:	ldp	x25, x26, [sp, #64]
  42fd30:	ldr	x27, [sp, #80]
  42fd34:	add	sp, sp, x12
  42fd38:	ret
  42fd3c:	bl	404ad0 <__errno_location@plt>
  42fd40:	mov	x19, x0
  42fd44:	mov	x0, x25
  42fd48:	ldr	w20, [x19]
  42fd4c:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42fd50:	cbnz	w0, 42fe00 <wcrtomb@plt+0x2b1e0>
  42fd54:	mov	x0, x25
  42fd58:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42fd5c:	cbz	w20, 42fdf8 <wcrtomb@plt+0x2b1d8>
  42fd60:	ldp	x25, x26, [sp, #64]
  42fd64:	str	w20, [x19]
  42fd68:	mov	x0, x21
  42fd6c:	mov	x12, #0x1020                	// #4128
  42fd70:	ldp	x29, x30, [sp]
  42fd74:	ldp	x19, x20, [sp, #16]
  42fd78:	ldp	x21, x22, [sp, #32]
  42fd7c:	ldp	x23, x24, [sp, #48]
  42fd80:	add	sp, sp, x12
  42fd84:	ret
  42fd88:	bl	404ad0 <__errno_location@plt>
  42fd8c:	mov	x19, x0
  42fd90:	mov	x0, x25
  42fd94:	mov	x21, #0xffffffffffffffff    	// #-1
  42fd98:	ldr	w20, [x19]
  42fd9c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42fda0:	ldp	x25, x26, [sp, #64]
  42fda4:	str	w20, [x19]
  42fda8:	mov	x0, x21
  42fdac:	mov	x12, #0x1020                	// #4128
  42fdb0:	ldp	x29, x30, [sp]
  42fdb4:	ldp	x19, x20, [sp, #16]
  42fdb8:	ldp	x21, x22, [sp, #32]
  42fdbc:	ldp	x23, x24, [sp, #48]
  42fdc0:	add	sp, sp, x12
  42fdc4:	ret
  42fdc8:	str	w27, [x26]
  42fdcc:	ldp	x25, x26, [sp, #64]
  42fdd0:	ldr	x27, [sp, #80]
  42fdd4:	b	42fcf4 <wcrtomb@plt+0x2b0d4>
  42fdd8:	mov	x0, x25
  42fddc:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42fde0:	mov	x21, #0xffffffffffffffff    	// #-1
  42fde4:	bl	404ad0 <__errno_location@plt>
  42fde8:	mov	w1, #0x9                   	// #9
  42fdec:	ldp	x25, x26, [sp, #64]
  42fdf0:	str	w1, [x0]
  42fdf4:	b	42fcf4 <wcrtomb@plt+0x2b0d4>
  42fdf8:	ldp	x25, x26, [sp, #64]
  42fdfc:	b	42fcf4 <wcrtomb@plt+0x2b0d4>
  42fe00:	str	x27, [sp, #80]
  42fe04:	bl	404ad0 <__errno_location@plt>
  42fe08:	ldr	w0, [x0]
  42fe0c:	bl	43a5a0 <argp_parse@@Base+0x66b8>
  42fe10:	str	x27, [sp, #80]
  42fe14:	bl	404ad0 <__errno_location@plt>
  42fe18:	ldr	w0, [x0]
  42fe1c:	bl	43a560 <argp_parse@@Base+0x6678>
  42fe20:	mov	x12, #0x1020                	// #4128
  42fe24:	sub	sp, sp, x12
  42fe28:	cmn	w0, #0x64
  42fe2c:	stp	x29, x30, [sp]
  42fe30:	mov	x29, sp
  42fe34:	stp	x19, x20, [sp, #16]
  42fe38:	mov	x20, x1
  42fe3c:	stp	x21, x22, [sp, #32]
  42fe40:	mov	x22, x2
  42fe44:	stp	x23, x24, [sp, #48]
  42fe48:	mov	x23, x3
  42fe4c:	b.eq	42ff60 <wcrtomb@plt+0x2b340>  // b.none
  42fe50:	mov	w19, w0
  42fe54:	ldrb	w0, [x1]
  42fe58:	cmp	w0, #0x2f
  42fe5c:	b.eq	42ff60 <wcrtomb@plt+0x2b340>  // b.none
  42fe60:	stp	x25, x26, [sp, #64]
  42fe64:	add	x25, sp, #0x60
  42fe68:	mov	x2, x1
  42fe6c:	mov	x0, x25
  42fe70:	mov	w1, w19
  42fe74:	bl	442218 <_obstack_memory_used@@Base+0x28>
  42fe78:	mov	x24, x0
  42fe7c:	cbz	x0, 42fee4 <wcrtomb@plt+0x2b2c4>
  42fe80:	mov	x2, x23
  42fe84:	mov	x1, x22
  42fe88:	str	x27, [sp, #80]
  42fe8c:	bl	404a20 <llistxattr@plt>
  42fe90:	mov	x21, x0
  42fe94:	bl	404ad0 <__errno_location@plt>
  42fe98:	ldr	w27, [x0]
  42fe9c:	mov	x26, x0
  42fea0:	cmp	x24, x25
  42fea4:	b.eq	42feb0 <wcrtomb@plt+0x2b290>  // b.none
  42fea8:	mov	x0, x24
  42feac:	bl	4047b0 <free@plt>
  42feb0:	cmn	x21, #0x1
  42feb4:	b.ne	42ff94 <wcrtomb@plt+0x2b374>  // b.any
  42feb8:	cmp	w27, #0x14
  42febc:	b.eq	42fee0 <wcrtomb@plt+0x2b2c0>  // b.none
  42fec0:	sub	w0, w27, #0x1
  42fec4:	cmp	w0, #0x1
  42fec8:	ccmp	w27, #0xd, #0x4, hi  // hi = pmore
  42fecc:	b.eq	42fee0 <wcrtomb@plt+0x2b2c0>  // b.none
  42fed0:	cmp	w27, #0x26
  42fed4:	mov	w0, #0x5f                  	// #95
  42fed8:	ccmp	w27, w0, #0x4, ne  // ne = any
  42fedc:	b.ne	430048 <wcrtomb@plt+0x2b428>  // b.any
  42fee0:	ldr	x27, [sp, #80]
  42fee4:	mov	x0, x25
  42fee8:	bl	440560 <argp_parse@@Base+0xc678>
  42feec:	cbnz	w0, 430090 <wcrtomb@plt+0x2b470>
  42fef0:	tbnz	w19, #31, 42ff00 <wcrtomb@plt+0x2b2e0>
  42fef4:	ldr	w0, [sp, #96]
  42fef8:	cmp	w0, w19
  42fefc:	b.eq	430058 <wcrtomb@plt+0x2b438>  // b.none
  42ff00:	mov	w0, w19
  42ff04:	bl	404060 <fchdir@plt>
  42ff08:	cbnz	w0, 430008 <wcrtomb@plt+0x2b3e8>
  42ff0c:	mov	x2, x23
  42ff10:	mov	x1, x22
  42ff14:	mov	x0, x20
  42ff18:	bl	404a20 <llistxattr@plt>
  42ff1c:	mov	x21, x0
  42ff20:	cmn	x0, #0x1
  42ff24:	b.eq	42ffbc <wcrtomb@plt+0x2b39c>  // b.none
  42ff28:	mov	x0, x25
  42ff2c:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42ff30:	cbnz	w0, 430080 <wcrtomb@plt+0x2b460>
  42ff34:	mov	x0, x25
  42ff38:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42ff3c:	mov	x0, x21
  42ff40:	mov	x12, #0x1020                	// #4128
  42ff44:	ldp	x29, x30, [sp]
  42ff48:	ldp	x19, x20, [sp, #16]
  42ff4c:	ldp	x21, x22, [sp, #32]
  42ff50:	ldp	x23, x24, [sp, #48]
  42ff54:	ldp	x25, x26, [sp, #64]
  42ff58:	add	sp, sp, x12
  42ff5c:	ret
  42ff60:	mov	x2, x23
  42ff64:	mov	x1, x22
  42ff68:	mov	x0, x20
  42ff6c:	bl	404a20 <llistxattr@plt>
  42ff70:	mov	x21, x0
  42ff74:	mov	x0, x21
  42ff78:	mov	x12, #0x1020                	// #4128
  42ff7c:	ldp	x29, x30, [sp]
  42ff80:	ldp	x19, x20, [sp, #16]
  42ff84:	ldp	x21, x22, [sp, #32]
  42ff88:	ldp	x23, x24, [sp, #48]
  42ff8c:	add	sp, sp, x12
  42ff90:	ret
  42ff94:	mov	x0, x21
  42ff98:	mov	x12, #0x1020                	// #4128
  42ff9c:	ldp	x29, x30, [sp]
  42ffa0:	ldp	x19, x20, [sp, #16]
  42ffa4:	ldp	x21, x22, [sp, #32]
  42ffa8:	ldp	x23, x24, [sp, #48]
  42ffac:	ldp	x25, x26, [sp, #64]
  42ffb0:	ldr	x27, [sp, #80]
  42ffb4:	add	sp, sp, x12
  42ffb8:	ret
  42ffbc:	bl	404ad0 <__errno_location@plt>
  42ffc0:	mov	x19, x0
  42ffc4:	mov	x0, x25
  42ffc8:	ldr	w20, [x19]
  42ffcc:	bl	4405c0 <argp_parse@@Base+0xc6d8>
  42ffd0:	cbnz	w0, 430080 <wcrtomb@plt+0x2b460>
  42ffd4:	mov	x0, x25
  42ffd8:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  42ffdc:	cbz	w20, 430078 <wcrtomb@plt+0x2b458>
  42ffe0:	ldp	x25, x26, [sp, #64]
  42ffe4:	str	w20, [x19]
  42ffe8:	mov	x0, x21
  42ffec:	mov	x12, #0x1020                	// #4128
  42fff0:	ldp	x29, x30, [sp]
  42fff4:	ldp	x19, x20, [sp, #16]
  42fff8:	ldp	x21, x22, [sp, #32]
  42fffc:	ldp	x23, x24, [sp, #48]
  430000:	add	sp, sp, x12
  430004:	ret
  430008:	bl	404ad0 <__errno_location@plt>
  43000c:	mov	x19, x0
  430010:	mov	x0, x25
  430014:	mov	x21, #0xffffffffffffffff    	// #-1
  430018:	ldr	w20, [x19]
  43001c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  430020:	ldp	x25, x26, [sp, #64]
  430024:	str	w20, [x19]
  430028:	mov	x0, x21
  43002c:	mov	x12, #0x1020                	// #4128
  430030:	ldp	x29, x30, [sp]
  430034:	ldp	x19, x20, [sp, #16]
  430038:	ldp	x21, x22, [sp, #32]
  43003c:	ldp	x23, x24, [sp, #48]
  430040:	add	sp, sp, x12
  430044:	ret
  430048:	str	w27, [x26]
  43004c:	ldp	x25, x26, [sp, #64]
  430050:	ldr	x27, [sp, #80]
  430054:	b	42ff74 <wcrtomb@plt+0x2b354>
  430058:	mov	x0, x25
  43005c:	bl	4405d8 <argp_parse@@Base+0xc6f0>
  430060:	mov	x21, #0xffffffffffffffff    	// #-1
  430064:	bl	404ad0 <__errno_location@plt>
  430068:	mov	w1, #0x9                   	// #9
  43006c:	ldp	x25, x26, [sp, #64]
  430070:	str	w1, [x0]
  430074:	b	42ff74 <wcrtomb@plt+0x2b354>
  430078:	ldp	x25, x26, [sp, #64]
  43007c:	b	42ff74 <wcrtomb@plt+0x2b354>
  430080:	str	x27, [sp, #80]
  430084:	bl	404ad0 <__errno_location@plt>
  430088:	ldr	w0, [x0]
  43008c:	bl	43a5a0 <argp_parse@@Base+0x66b8>
  430090:	str	x27, [sp, #80]
  430094:	bl	404ad0 <__errno_location@plt>
  430098:	ldr	w0, [x0]
  43009c:	bl	43a560 <argp_parse@@Base+0x6678>
  4300a0:	stp	x29, x30, [sp, #-80]!
  4300a4:	cmp	x2, #0x401
  4300a8:	mov	x29, sp
  4300ac:	stp	x19, x20, [sp, #16]
  4300b0:	mov	x19, #0x401                 	// #1025
  4300b4:	csinc	x19, x19, x2, cs  // cs = hs, nlast
  4300b8:	stp	x21, x22, [sp, #32]
  4300bc:	mov	x22, x1
  4300c0:	stp	x23, x24, [sp, #48]
  4300c4:	mov	w23, w0
  4300c8:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
  4300cc:	str	x25, [sp, #64]
  4300d0:	mov	x25, #0x7ffffffffffffffe    	// #9223372036854775806
  4300d4:	nop
  4300d8:	mov	x0, x19
  4300dc:	bl	404310 <malloc@plt>
  4300e0:	mov	x3, x19
  4300e4:	mov	x20, x0
  4300e8:	mov	x1, x22
  4300ec:	mov	w0, w23
  4300f0:	cbz	x20, 43013c <wcrtomb@plt+0x2b51c>
  4300f4:	mov	x2, x20
  4300f8:	bl	404c10 <readlinkat@plt>
  4300fc:	mov	x21, x0
  430100:	tbnz	x0, #63, 430190 <wcrtomb@plt+0x2b570>
  430104:	mov	x0, x20
  430108:	cmp	x19, x21
  43010c:	b.hi	4301c8 <wcrtomb@plt+0x2b5a8>  // b.pmore
  430110:	bl	4047b0 <free@plt>
  430114:	cmp	x19, x24
  430118:	b.hi	430158 <wcrtomb@plt+0x2b538>  // b.pmore
  43011c:	lsl	x19, x19, #1
  430120:	mov	x0, x19
  430124:	bl	404310 <malloc@plt>
  430128:	mov	x3, x19
  43012c:	mov	x20, x0
  430130:	mov	x1, x22
  430134:	mov	w0, w23
  430138:	cbnz	x20, 4300f4 <wcrtomb@plt+0x2b4d4>
  43013c:	mov	x0, x20
  430140:	ldp	x19, x20, [sp, #16]
  430144:	ldp	x21, x22, [sp, #32]
  430148:	ldp	x23, x24, [sp, #48]
  43014c:	ldr	x25, [sp, #64]
  430150:	ldp	x29, x30, [sp], #80
  430154:	ret
  430158:	cmp	x19, x25
  43015c:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
  430160:	b.ls	4300d8 <wcrtomb@plt+0x2b4b8>  // b.plast
  430164:	bl	404ad0 <__errno_location@plt>
  430168:	mov	x20, #0x0                   	// #0
  43016c:	mov	w1, #0xc                   	// #12
  430170:	str	w1, [x0]
  430174:	mov	x0, x20
  430178:	ldp	x19, x20, [sp, #16]
  43017c:	ldp	x21, x22, [sp, #32]
  430180:	ldp	x23, x24, [sp, #48]
  430184:	ldr	x25, [sp, #64]
  430188:	ldp	x29, x30, [sp], #80
  43018c:	ret
  430190:	bl	404ad0 <__errno_location@plt>
  430194:	ldr	w0, [x0]
  430198:	cmp	w0, #0x22
  43019c:	b.eq	430104 <wcrtomb@plt+0x2b4e4>  // b.none
  4301a0:	mov	x0, x20
  4301a4:	mov	x20, #0x0                   	// #0
  4301a8:	bl	4047b0 <free@plt>
  4301ac:	mov	x0, x20
  4301b0:	ldp	x19, x20, [sp, #16]
  4301b4:	ldp	x21, x22, [sp, #32]
  4301b8:	ldp	x23, x24, [sp, #48]
  4301bc:	ldr	x25, [sp, #64]
  4301c0:	ldp	x29, x30, [sp], #80
  4301c4:	ret
  4301c8:	strb	wzr, [x20, x21]
  4301cc:	mov	x0, x20
  4301d0:	ldp	x19, x20, [sp, #16]
  4301d4:	ldp	x21, x22, [sp, #32]
  4301d8:	ldp	x23, x24, [sp, #48]
  4301dc:	ldr	x25, [sp, #64]
  4301e0:	ldp	x29, x30, [sp], #80
  4301e4:	ret
  4301e8:	stp	x29, x30, [sp, #-16]!
  4301ec:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4301f0:	mov	x29, sp
  4301f4:	ldr	w0, [x0, #968]
  4301f8:	bl	404020 <exit@plt>
  4301fc:	nop
  430200:	stp	x29, x30, [sp, #-96]!
  430204:	mov	x29, sp
  430208:	stp	x23, x24, [sp, #48]
  43020c:	mov	x24, x1
  430210:	stp	x21, x22, [sp, #32]
  430214:	mov	x21, x3
  430218:	stp	x25, x26, [sp, #64]
  43021c:	mov	x26, x2
  430220:	mov	x25, x0
  430224:	stp	x27, x28, [sp, #80]
  430228:	bl	403ff0 <strlen@plt>
  43022c:	ldr	x28, [x24]
  430230:	cbz	x28, 430320 <wcrtomb@plt+0x2b700>
  430234:	mov	x22, x0
  430238:	mov	w27, #0x0                   	// #0
  43023c:	mov	x23, #0xffffffffffffffff    	// #-1
  430240:	stp	x19, x20, [sp, #16]
  430244:	mov	x20, x26
  430248:	mov	x19, #0x0                   	// #0
  43024c:	b	430270 <wcrtomb@plt+0x2b650>
  430250:	cbz	x26, 4302f4 <wcrtomb@plt+0x2b6d4>
  430254:	bl	4046d0 <memcmp@plt>
  430258:	cmp	w0, #0x0
  43025c:	csinc	w27, w27, wzr, eq  // eq = none
  430260:	add	x19, x19, #0x1
  430264:	add	x20, x20, x21
  430268:	ldr	x28, [x24, x19, lsl #3]
  43026c:	cbz	x28, 4302c8 <wcrtomb@plt+0x2b6a8>
  430270:	mov	x1, x25
  430274:	mov	x2, x22
  430278:	mov	x0, x28
  43027c:	bl	4043c0 <strncmp@plt>
  430280:	mov	w1, w0
  430284:	mov	x0, x28
  430288:	cbnz	w1, 430260 <wcrtomb@plt+0x2b640>
  43028c:	bl	403ff0 <strlen@plt>
  430290:	mov	x3, x0
  430294:	mov	x2, x21
  430298:	madd	x0, x23, x21, x26
  43029c:	mov	x1, x20
  4302a0:	cmp	x3, x22
  4302a4:	b.eq	4302fc <wcrtomb@plt+0x2b6dc>  // b.none
  4302a8:	cmn	x23, #0x1
  4302ac:	b.ne	430250 <wcrtomb@plt+0x2b630>  // b.any
  4302b0:	mov	x23, x19
  4302b4:	add	x19, x19, #0x1
  4302b8:	add	x20, x20, x21
  4302bc:	ldr	x28, [x24, x19, lsl #3]
  4302c0:	cbnz	x28, 430270 <wcrtomb@plt+0x2b650>
  4302c4:	nop
  4302c8:	ldp	x19, x20, [sp, #16]
  4302cc:	cmp	w27, #0x0
  4302d0:	mov	x0, #0xfffffffffffffffe    	// #-2
  4302d4:	csel	x23, x23, x0, eq  // eq = none
  4302d8:	mov	x0, x23
  4302dc:	ldp	x21, x22, [sp, #32]
  4302e0:	ldp	x23, x24, [sp, #48]
  4302e4:	ldp	x25, x26, [sp, #64]
  4302e8:	ldp	x27, x28, [sp, #80]
  4302ec:	ldp	x29, x30, [sp], #96
  4302f0:	ret
  4302f4:	mov	w27, #0x1                   	// #1
  4302f8:	b	430260 <wcrtomb@plt+0x2b640>
  4302fc:	mov	x23, x19
  430300:	mov	x0, x23
  430304:	ldp	x19, x20, [sp, #16]
  430308:	ldp	x21, x22, [sp, #32]
  43030c:	ldp	x23, x24, [sp, #48]
  430310:	ldp	x25, x26, [sp, #64]
  430314:	ldp	x27, x28, [sp, #80]
  430318:	ldp	x29, x30, [sp], #96
  43031c:	ret
  430320:	mov	x23, #0xffffffffffffffff    	// #-1
  430324:	b	4302d8 <wcrtomb@plt+0x2b6b8>
  430328:	stp	x29, x30, [sp, #-48]!
  43032c:	cmn	x2, #0x1
  430330:	mov	x29, sp
  430334:	stp	x19, x20, [sp, #16]
  430338:	mov	x20, x0
  43033c:	str	x21, [sp, #32]
  430340:	mov	x21, x1
  430344:	b.eq	4303a4 <wcrtomb@plt+0x2b784>  // b.none
  430348:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  43034c:	mov	w2, #0x5                   	// #5
  430350:	add	x1, x1, #0xec0
  430354:	mov	x0, #0x0                   	// #0
  430358:	bl	4049c0 <dcgettext@plt>
  43035c:	mov	x19, x0
  430360:	mov	x2, x21
  430364:	mov	w1, #0x8                   	// #8
  430368:	mov	w0, #0x0                   	// #0
  43036c:	bl	43ff70 <argp_parse@@Base+0xc088>
  430370:	mov	x1, x20
  430374:	mov	x20, x0
  430378:	mov	w0, #0x1                   	// #1
  43037c:	bl	440230 <argp_parse@@Base+0xc348>
  430380:	mov	x3, x20
  430384:	mov	x2, x19
  430388:	ldp	x19, x20, [sp, #16]
  43038c:	mov	x4, x0
  430390:	ldr	x21, [sp, #32]
  430394:	mov	w1, #0x0                   	// #0
  430398:	ldp	x29, x30, [sp], #48
  43039c:	mov	w0, #0x0                   	// #0
  4303a0:	b	404050 <error@plt>
  4303a4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4303a8:	mov	w2, #0x5                   	// #5
  4303ac:	add	x1, x1, #0xea0
  4303b0:	mov	x0, #0x0                   	// #0
  4303b4:	bl	4049c0 <dcgettext@plt>
  4303b8:	mov	x19, x0
  4303bc:	b	430360 <wcrtomb@plt+0x2b740>
  4303c0:	stp	x29, x30, [sp, #-112]!
  4303c4:	mov	x29, sp
  4303c8:	stp	x27, x28, [sp, #80]
  4303cc:	adrp	x28, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4303d0:	stp	x19, x20, [sp, #16]
  4303d4:	mov	x20, x1
  4303d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4303dc:	add	x1, x1, #0xee0
  4303e0:	stp	x21, x22, [sp, #32]
  4303e4:	mov	x22, x2
  4303e8:	mov	w2, #0x5                   	// #5
  4303ec:	stp	x23, x24, [sp, #48]
  4303f0:	mov	x24, x0
  4303f4:	mov	x0, #0x0                   	// #0
  4303f8:	bl	4049c0 <dcgettext@plt>
  4303fc:	ldr	x1, [x28, #1096]
  430400:	bl	4049e0 <fputs_unlocked@plt>
  430404:	ldr	x21, [x24]
  430408:	cbz	x21, 430480 <wcrtomb@plt+0x2b860>
  43040c:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x18e10>
  430410:	add	x27, x27, #0xf00
  430414:	stp	x25, x26, [sp, #64]
  430418:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0x18e10>
  43041c:	add	x25, x28, #0x448
  430420:	add	x26, x26, #0xef8
  430424:	mov	x23, #0x0                   	// #0
  430428:	mov	x19, #0x0                   	// #0
  43042c:	nop
  430430:	cbz	x19, 430448 <wcrtomb@plt+0x2b828>
  430434:	mov	x2, x22
  430438:	mov	x1, x20
  43043c:	mov	x0, x23
  430440:	bl	4046d0 <memcmp@plt>
  430444:	cbz	w0, 4304b8 <wcrtomb@plt+0x2b898>
  430448:	ldr	x23, [x25]
  43044c:	mov	x0, x21
  430450:	bl	440248 <argp_parse@@Base+0xc360>
  430454:	mov	x3, x0
  430458:	mov	x2, x26
  43045c:	mov	x0, x23
  430460:	mov	w1, #0x1                   	// #1
  430464:	mov	x23, x20
  430468:	bl	404700 <__fprintf_chk@plt>
  43046c:	add	x19, x19, #0x1
  430470:	add	x20, x20, x22
  430474:	ldr	x21, [x24, x19, lsl #3]
  430478:	cbnz	x21, 430430 <wcrtomb@plt+0x2b810>
  43047c:	ldp	x25, x26, [sp, #64]
  430480:	ldr	x0, [x28, #1096]
  430484:	ldp	x1, x2, [x0, #40]
  430488:	cmp	x1, x2
  43048c:	b.cs	4304e4 <wcrtomb@plt+0x2b8c4>  // b.hs, b.nlast
  430490:	add	x2, x1, #0x1
  430494:	str	x2, [x0, #40]
  430498:	mov	w0, #0xa                   	// #10
  43049c:	strb	w0, [x1]
  4304a0:	ldp	x19, x20, [sp, #16]
  4304a4:	ldp	x21, x22, [sp, #32]
  4304a8:	ldp	x23, x24, [sp, #48]
  4304ac:	ldp	x27, x28, [sp, #80]
  4304b0:	ldp	x29, x30, [sp], #112
  4304b4:	ret
  4304b8:	ldr	x1, [x25]
  4304bc:	mov	x0, x21
  4304c0:	str	x1, [sp, #104]
  4304c4:	bl	440248 <argp_parse@@Base+0xc360>
  4304c8:	mov	x3, x0
  4304cc:	ldr	x1, [sp, #104]
  4304d0:	mov	x2, x27
  4304d4:	mov	x0, x1
  4304d8:	mov	w1, #0x1                   	// #1
  4304dc:	bl	404700 <__fprintf_chk@plt>
  4304e0:	b	43046c <wcrtomb@plt+0x2b84c>
  4304e4:	ldp	x19, x20, [sp, #16]
  4304e8:	mov	w1, #0xa                   	// #10
  4304ec:	ldp	x21, x22, [sp, #32]
  4304f0:	ldp	x23, x24, [sp, #48]
  4304f4:	ldp	x27, x28, [sp, #80]
  4304f8:	ldp	x29, x30, [sp], #112
  4304fc:	b	404680 <__overflow@plt>
  430500:	stp	x29, x30, [sp, #-64]!
  430504:	mov	x29, sp
  430508:	stp	x19, x20, [sp, #16]
  43050c:	mov	x19, x2
  430510:	mov	x20, x3
  430514:	stp	x21, x22, [sp, #32]
  430518:	mov	x22, x1
  43051c:	mov	x21, x4
  430520:	mov	x3, x4
  430524:	mov	x2, x20
  430528:	mov	x1, x19
  43052c:	stp	x23, x24, [sp, #48]
  430530:	mov	x24, x0
  430534:	mov	x23, x5
  430538:	mov	x0, x22
  43053c:	bl	430200 <wcrtomb@plt+0x2b5e0>
  430540:	tbnz	x0, #63, 430558 <wcrtomb@plt+0x2b938>
  430544:	ldp	x19, x20, [sp, #16]
  430548:	ldp	x21, x22, [sp, #32]
  43054c:	ldp	x23, x24, [sp, #48]
  430550:	ldp	x29, x30, [sp], #64
  430554:	ret
  430558:	mov	x2, x0
  43055c:	mov	x1, x22
  430560:	mov	x0, x24
  430564:	bl	430328 <wcrtomb@plt+0x2b708>
  430568:	mov	x0, x19
  43056c:	mov	x2, x21
  430570:	mov	x1, x20
  430574:	bl	4303c0 <wcrtomb@plt+0x2b7a0>
  430578:	blr	x23
  43057c:	mov	x0, #0xffffffffffffffff    	// #-1
  430580:	b	430544 <wcrtomb@plt+0x2b924>
  430584:	nop
  430588:	stp	x29, x30, [sp, #-64]!
  43058c:	mov	x29, sp
  430590:	stp	x21, x22, [sp, #32]
  430594:	ldr	x22, [x1]
  430598:	cbz	x22, 4305e0 <wcrtomb@plt+0x2b9c0>
  43059c:	mov	x21, x3
  4305a0:	stp	x19, x20, [sp, #16]
  4305a4:	mov	x19, x2
  4305a8:	add	x20, x1, #0x8
  4305ac:	str	x23, [sp, #48]
  4305b0:	mov	x23, x0
  4305b4:	b	4305c4 <wcrtomb@plt+0x2b9a4>
  4305b8:	ldr	x22, [x20], #8
  4305bc:	add	x19, x19, x21
  4305c0:	cbz	x22, 4305d8 <wcrtomb@plt+0x2b9b8>
  4305c4:	mov	x2, x21
  4305c8:	mov	x1, x19
  4305cc:	mov	x0, x23
  4305d0:	bl	4046d0 <memcmp@plt>
  4305d4:	cbnz	w0, 4305b8 <wcrtomb@plt+0x2b998>
  4305d8:	ldp	x19, x20, [sp, #16]
  4305dc:	ldr	x23, [sp, #48]
  4305e0:	mov	x0, x22
  4305e4:	ldp	x21, x22, [sp, #32]
  4305e8:	ldp	x29, x30, [sp], #64
  4305ec:	ret
  4305f0:	stp	x29, x30, [sp, #-32]!
  4305f4:	mov	x29, sp
  4305f8:	str	x19, [sp, #16]
  4305fc:	mov	x19, x0
  430600:	bl	404740 <__ctype_b_loc@plt>
  430604:	ldr	x5, [x0]
  430608:	ldr	x1, [x19]
  43060c:	b	430614 <wcrtomb@plt+0x2b9f4>
  430610:	str	x1, [x19]
  430614:	ldrb	w4, [x1], #1
  430618:	ubfiz	x0, x4, #1, #8
  43061c:	ldrh	w3, [x5, x0]
  430620:	tbnz	w3, #13, 430610 <wcrtomb@plt+0x2b9f0>
  430624:	cmp	w4, #0x2d
  430628:	cset	w0, ne  // ne = any
  43062c:	cbz	w4, 430650 <wcrtomb@plt+0x2ba30>
  430630:	tbnz	w3, #3, 430650 <wcrtomb@plt+0x2ba30>
  430634:	nop
  430638:	str	x1, [x19]
  43063c:	ldrb	w2, [x1], #1
  430640:	ubfiz	x3, x2, #1, #8
  430644:	cbz	w2, 430650 <wcrtomb@plt+0x2ba30>
  430648:	ldrh	w3, [x5, x3]
  43064c:	tbz	w3, #3, 430638 <wcrtomb@plt+0x2ba18>
  430650:	ldr	x19, [sp, #16]
  430654:	ldp	x29, x30, [sp], #32
  430658:	ret
  43065c:	nop
  430660:	stp	x29, x30, [sp, #-32]!
  430664:	mov	x29, sp
  430668:	stp	x19, x20, [sp, #16]
  43066c:	mov	x20, x0
  430670:	ldr	x19, [x0, #24]
  430674:	cbz	x19, 430688 <wcrtomb@plt+0x2ba68>
  430678:	mov	x0, x19
  43067c:	ldr	x19, [x19, #40]
  430680:	bl	4047b0 <free@plt>
  430684:	cbnz	x19, 430678 <wcrtomb@plt+0x2ba58>
  430688:	ldr	w0, [x20, #8]
  43068c:	cbnz	w0, 4306a0 <wcrtomb@plt+0x2ba80>
  430690:	mov	x0, x20
  430694:	ldp	x19, x20, [sp, #16]
  430698:	ldp	x29, x30, [sp], #32
  43069c:	b	4047b0 <free@plt>
  4306a0:	ldr	x0, [x20]
  4306a4:	bl	4047b0 <free@plt>
  4306a8:	ldr	x0, [x20, #16]
  4306ac:	bl	4047b0 <free@plt>
  4306b0:	mov	x0, x20
  4306b4:	ldp	x19, x20, [sp, #16]
  4306b8:	ldp	x29, x30, [sp], #32
  4306bc:	b	4047b0 <free@plt>
  4306c0:	ldr	x2, [x0, #16]
  4306c4:	cbz	x2, 4306d0 <wcrtomb@plt+0x2bab0>
  4306c8:	mov	w0, #0x0                   	// #0
  4306cc:	ret
  4306d0:	ldr	x2, [x1, #16]
  4306d4:	cbnz	x2, 4306c8 <wcrtomb@plt+0x2baa8>
  4306d8:	ldr	w2, [x1, #24]
  4306dc:	ldr	w1, [x0, #24]
  4306e0:	orr	w1, w1, w2
  4306e4:	tbnz	w1, #4, 4306c8 <wcrtomb@plt+0x2baa8>
  4306e8:	ldr	x1, [x3]
  4306ec:	ldr	w0, [x0, #8]
  4306f0:	add	x2, x1, #0x1
  4306f4:	str	x2, [x3]
  4306f8:	strb	w0, [x1]
  4306fc:	b	4306c8 <wcrtomb@plt+0x2baa8>
  430700:	mov	x6, x0
  430704:	cbz	x0, 43077c <wcrtomb@plt+0x2bb5c>
  430708:	stp	x29, x30, [sp, #-48]!
  43070c:	mov	x0, x4
  430710:	mov	x29, sp
  430714:	ldr	w1, [x1]
  430718:	stp	x19, x20, [sp, #16]
  43071c:	mov	x19, x5
  430720:	tbz	w1, #0, 430754 <wcrtomb@plt+0x2bb34>
  430724:	mov	x1, x6
  430728:	mov	w2, #0x5                   	// #5
  43072c:	str	x21, [sp, #32]
  430730:	mov	x21, x3
  430734:	bl	4049c0 <dcgettext@plt>
  430738:	mov	x2, x0
  43073c:	mov	x1, x21
  430740:	mov	x0, x19
  430744:	ldp	x19, x20, [sp, #16]
  430748:	ldr	x21, [sp, #32]
  43074c:	ldp	x29, x30, [sp], #48
  430750:	b	44fb70 <_obstack_memory_used@@Base+0xd980>
  430754:	mov	x20, x2
  430758:	mov	x1, x6
  43075c:	mov	w2, #0x5                   	// #5
  430760:	bl	4049c0 <dcgettext@plt>
  430764:	mov	x1, x20
  430768:	mov	x2, x0
  43076c:	mov	x0, x19
  430770:	ldp	x19, x20, [sp, #16]
  430774:	ldp	x29, x30, [sp], #48
  430778:	b	44fb70 <_obstack_memory_used@@Base+0xd980>
  43077c:	ret
  430780:	stp	x29, x30, [sp, #-64]!
  430784:	mov	x29, sp
  430788:	stp	x21, x22, [sp, #32]
  43078c:	cbz	w1, 430840 <wcrtomb@plt+0x2bc20>
  430790:	str	x23, [sp, #48]
  430794:	mov	x23, x2
  430798:	sub	w2, w1, #0x1
  43079c:	mov	x21, x0
  4307a0:	mov	w1, w2
  4307a4:	stp	x19, x20, [sp, #16]
  4307a8:	add	x1, x1, #0x1
  4307ac:	lsl	x22, x1, #3
  4307b0:	sub	x1, x22, x1
  4307b4:	add	x22, x0, x1, lsl #3
  4307b8:	ldr	w0, [x21, #8]
  4307bc:	ldr	x19, [x21]
  4307c0:	sub	w20, w0, #0x1
  4307c4:	cbz	w0, 430800 <wcrtomb@plt+0x2bbe0>
  4307c8:	add	x20, x20, #0x1
  4307cc:	add	x20, x20, x20, lsl #1
  4307d0:	add	x20, x19, x20, lsl #4
  4307d4:	nop
  4307d8:	ldr	x0, [x19]
  4307dc:	cbz	x0, 4307f4 <wcrtomb@plt+0x2bbd4>
  4307e0:	ldr	w3, [x19, #24]
  4307e4:	mov	x1, x23
  4307e8:	tbnz	w3, #1, 4307f4 <wcrtomb@plt+0x2bbd4>
  4307ec:	bl	404710 <strcmp@plt>
  4307f0:	cbz	w0, 430828 <wcrtomb@plt+0x2bc08>
  4307f4:	add	x19, x19, #0x30
  4307f8:	cmp	x19, x20
  4307fc:	b.ne	4307d8 <wcrtomb@plt+0x2bbb8>  // b.any
  430800:	add	x21, x21, #0x38
  430804:	cmp	x22, x21
  430808:	b.ne	4307b8 <wcrtomb@plt+0x2bb98>  // b.any
  43080c:	mov	x21, #0x0                   	// #0
  430810:	mov	x0, x21
  430814:	ldp	x19, x20, [sp, #16]
  430818:	ldp	x21, x22, [sp, #32]
  43081c:	ldr	x23, [sp, #48]
  430820:	ldp	x29, x30, [sp], #64
  430824:	ret
  430828:	ldp	x19, x20, [sp, #16]
  43082c:	ldr	x23, [sp, #48]
  430830:	mov	x0, x21
  430834:	ldp	x21, x22, [sp, #32]
  430838:	ldp	x29, x30, [sp], #64
  43083c:	ret
  430840:	mov	x21, #0x0                   	// #0
  430844:	b	430830 <wcrtomb@plt+0x2bc10>
  430848:	stp	x29, x30, [sp, #-32]!
  43084c:	mov	x29, sp
  430850:	stp	x19, x20, [sp, #16]
  430854:	mov	x19, x1
  430858:	mov	x20, #0x0                   	// #0
  43085c:	cbz	x0, 430870 <wcrtomb@plt+0x2bc50>
  430860:	mov	w1, #0xa                   	// #10
  430864:	bl	404870 <strchr@plt>
  430868:	cmp	x0, #0x0
  43086c:	cset	x20, ne  // ne = any
  430870:	cbz	x19, 430894 <wcrtomb@plt+0x2bc74>
  430874:	ldr	x2, [x19]
  430878:	cbz	x2, 430894 <wcrtomb@plt+0x2bc74>
  43087c:	ldr	x0, [x2, #16]
  430880:	ldr	x1, [x2, #32]
  430884:	bl	430848 <wcrtomb@plt+0x2bc28>
  430888:	add	x20, x20, x0
  43088c:	ldr	x2, [x19, #32]!
  430890:	cbnz	x2, 43087c <wcrtomb@plt+0x2bc5c>
  430894:	mov	x0, x20
  430898:	ldp	x19, x20, [sp, #16]
  43089c:	ldp	x29, x30, [sp], #32
  4308a0:	ret
  4308a4:	nop
  4308a8:	stp	x29, x30, [sp, #-48]!
  4308ac:	mov	x29, sp
  4308b0:	stp	x19, x20, [sp, #16]
  4308b4:	mov	x19, x2
  4308b8:	mov	w20, w1
  4308bc:	mov	x1, x3
  4308c0:	str	x21, [sp, #32]
  4308c4:	mov	x21, x0
  4308c8:	mov	x0, x2
  4308cc:	bl	434bb0 <argp_parse@@Base+0xcc8>
  4308d0:	mov	x2, x0
  4308d4:	mov	x1, x21
  4308d8:	mov	w0, w20
  4308dc:	ldr	x21, [sp, #32]
  4308e0:	ldr	x3, [x19, #40]
  4308e4:	ldp	x19, x20, [sp, #16]
  4308e8:	mov	x16, x3
  4308ec:	ldp	x29, x30, [sp], #48
  4308f0:	br	x16
  4308f4:	nop
  4308f8:	stp	x29, x30, [sp, #-160]!
  4308fc:	mov	x29, sp
  430900:	stp	x21, x22, [sp, #32]
  430904:	mov	x22, x0
  430908:	mov	x21, x1
  43090c:	mov	x0, #0x20                  	// #32
  430910:	stp	x19, x20, [sp, #16]
  430914:	stp	x23, x24, [sp, #48]
  430918:	stp	x25, x26, [sp, #64]
  43091c:	stp	x27, x28, [sp, #80]
  430920:	ldr	x23, [x22]
  430924:	ldr	x20, [x22, #32]
  430928:	bl	404310 <malloc@plt>
  43092c:	cbz	x0, 430e58 <wcrtomb@plt+0x2c238>
  430930:	str	wzr, [x0, #8]
  430934:	mov	x19, x0
  430938:	str	xzr, [x0, #24]
  43093c:	cbz	x23, 430b28 <wcrtomb@plt+0x2bf08>
  430940:	ldr	w0, [x23, #24]
  430944:	tbnz	w0, #2, 430e38 <wcrtomb@plt+0x2c218>
  430948:	mov	x24, x23
  43094c:	mov	w25, #0x0                   	// #0
  430950:	mov	w27, #0x0                   	// #0
  430954:	nop
  430958:	ldr	w0, [x24, #8]
  43095c:	cbnz	w0, 430968 <wcrtomb@plt+0x2bd48>
  430960:	ldr	x0, [x24]
  430964:	cbz	x0, 4309ac <wcrtomb@plt+0x2bd8c>
  430968:	ldr	w0, [x24, #24]
  43096c:	tbnz	w0, #2, 430978 <wcrtomb@plt+0x2bd58>
  430970:	add	w25, w25, #0x1
  430974:	str	w25, [x19, #8]
  430978:	ldr	w0, [x24, #24]
  43097c:	tbnz	w0, #3, 4309a4 <wcrtomb@plt+0x2bd84>
  430980:	ldr	w26, [x24, #8]
  430984:	sub	w0, w26, #0x1
  430988:	cmp	w0, #0xfe
  43098c:	b.hi	4309a4 <wcrtomb@plt+0x2bd84>  // b.pmore
  430990:	bl	404740 <__ctype_b_loc@plt>
  430994:	ldr	x0, [x0]
  430998:	ldrh	w0, [x0, w26, sxtw #1]
  43099c:	ubfx	x0, x0, #14, #1
  4309a0:	add	w27, w27, w0
  4309a4:	add	x24, x24, #0x30
  4309a8:	b	430958 <wcrtomb@plt+0x2bd38>
  4309ac:	ldr	x0, [x24, #32]
  4309b0:	cbnz	x0, 430968 <wcrtomb@plt+0x2bd48>
  4309b4:	ldr	w28, [x24, #40]
  4309b8:	cbnz	w28, 430968 <wcrtomb@plt+0x2bd48>
  4309bc:	mov	w0, #0x38                  	// #56
  4309c0:	umull	x0, w25, w0
  4309c4:	bl	404310 <malloc@plt>
  4309c8:	mov	x24, x0
  4309cc:	str	x24, [x19]
  4309d0:	add	w0, w27, #0x1
  4309d4:	bl	404310 <malloc@plt>
  4309d8:	str	x0, [x19, #16]
  4309dc:	cmp	x24, #0x0
  4309e0:	mov	x3, x0
  4309e4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4309e8:	b.eq	430e18 <wcrtomb@plt+0x2c1f8>  // b.none
  4309ec:	ldr	w2, [x23, #8]
  4309f0:	mov	x25, x0
  4309f4:	ldr	w1, [x23, #40]
  4309f8:	cbnz	w2, 430ac8 <wcrtomb@plt+0x2bea8>
  4309fc:	nop
  430a00:	ldr	x0, [x23]
  430a04:	cbz	x0, 430af8 <wcrtomb@plt+0x2bed8>
  430a08:	str	x23, [x24]
  430a0c:	str	wzr, [x24, #8]
  430a10:	str	x25, [x24, #16]
  430a14:	cbnz	w1, 430ad8 <wcrtomb@plt+0x2beb8>
  430a18:	ldr	x0, [x23]
  430a1c:	cmp	x0, #0x0
  430a20:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  430a24:	b.eq	430b10 <wcrtomb@plt+0x2bef0>  // b.none
  430a28:	mov	w27, #0x1                   	// #1
  430a2c:	str	w28, [x24, #24]
  430a30:	stp	x21, x22, [x24, #32]
  430a34:	nop
  430a38:	str	w27, [x24, #8]
  430a3c:	ldr	w0, [x23, #24]
  430a40:	tbnz	w0, #3, 430a98 <wcrtomb@plt+0x2be78>
  430a44:	ldr	w26, [x23, #8]
  430a48:	sub	w0, w26, #0x1
  430a4c:	cmp	w0, #0xfe
  430a50:	b.hi	430a98 <wcrtomb@plt+0x2be78>  // b.pmore
  430a54:	str	x3, [sp, #96]
  430a58:	bl	404740 <__ctype_b_loc@plt>
  430a5c:	ldr	x0, [x0]
  430a60:	ldr	x3, [sp, #96]
  430a64:	ldrh	w0, [x0, w26, sxtw #1]
  430a68:	tbz	w0, #14, 430a98 <wcrtomb@plt+0x2be78>
  430a6c:	and	w26, w26, #0xff
  430a70:	cmp	x3, x25
  430a74:	b.cs	430b18 <wcrtomb@plt+0x2bef8>  // b.hs, b.nlast
  430a78:	mov	x1, x3
  430a7c:	b	430a8c <wcrtomb@plt+0x2be6c>
  430a80:	add	x1, x1, #0x1
  430a84:	cmp	x1, x25
  430a88:	b.eq	430b18 <wcrtomb@plt+0x2bef8>  // b.none
  430a8c:	ldrb	w0, [x1]
  430a90:	cmp	w0, w26
  430a94:	b.ne	430a80 <wcrtomb@plt+0x2be60>  // b.any
  430a98:	ldr	w0, [x23, #56]
  430a9c:	add	x23, x23, #0x30
  430aa0:	cbnz	w0, 430aac <wcrtomb@plt+0x2be8c>
  430aa4:	ldr	x1, [x23]
  430aa8:	cbz	x1, 430ae0 <wcrtomb@plt+0x2bec0>
  430aac:	ldr	w1, [x23, #24]
  430ab0:	add	w27, w27, #0x1
  430ab4:	tbnz	w1, #2, 430a38 <wcrtomb@plt+0x2be18>
  430ab8:	mov	w2, w0
  430abc:	add	x24, x24, #0x38
  430ac0:	ldr	w1, [x23, #40]
  430ac4:	cbz	w2, 430a00 <wcrtomb@plt+0x2bde0>
  430ac8:	str	x23, [x24]
  430acc:	str	wzr, [x24, #8]
  430ad0:	str	x25, [x24, #16]
  430ad4:	cbz	w1, 430a28 <wcrtomb@plt+0x2be08>
  430ad8:	mov	w28, w1
  430adc:	b	430a28 <wcrtomb@plt+0x2be08>
  430ae0:	ldr	x1, [x23, #32]
  430ae4:	cbnz	x1, 430aac <wcrtomb@plt+0x2be8c>
  430ae8:	ldr	w2, [x23, #40]
  430aec:	cbnz	w2, 430aac <wcrtomb@plt+0x2be8c>
  430af0:	add	x24, x24, #0x38
  430af4:	b	430ac0 <wcrtomb@plt+0x2bea0>
  430af8:	ldr	x0, [x23, #32]
  430afc:	cbz	x0, 430b20 <wcrtomb@plt+0x2bf00>
  430b00:	str	x23, [x24]
  430b04:	str	wzr, [x24, #8]
  430b08:	str	x25, [x24, #16]
  430b0c:	cbnz	w1, 430ad8 <wcrtomb@plt+0x2beb8>
  430b10:	add	w28, w28, #0x1
  430b14:	b	430a28 <wcrtomb@plt+0x2be08>
  430b18:	strb	w26, [x25], #1
  430b1c:	b	430a98 <wcrtomb@plt+0x2be78>
  430b20:	cbnz	w1, 430c24 <wcrtomb@plt+0x2c004>
  430b24:	strb	wzr, [x25]
  430b28:	cbz	x20, 430c04 <wcrtomb@plt+0x2bfe4>
  430b2c:	ldr	x24, [x20]
  430b30:	cbz	x24, 430c04 <wcrtomb@plt+0x2bfe4>
  430b34:	add	x0, x19, #0x18
  430b38:	str	x0, [sp, #152]
  430b3c:	ldr	w25, [x20, #24]
  430b40:	ldr	x26, [x20, #16]
  430b44:	cbnz	w25, 430b50 <wcrtomb@plt+0x2bf30>
  430b48:	mov	x1, x21
  430b4c:	cbz	x26, 430b98 <wcrtomb@plt+0x2bf78>
  430b50:	ldr	x23, [x22, #32]
  430b54:	mov	x0, #0x30                  	// #48
  430b58:	bl	404310 <malloc@plt>
  430b5c:	mov	x1, x0
  430b60:	sub	x23, x20, x23
  430b64:	asr	x23, x23, #5
  430b68:	cbz	x0, 430b98 <wcrtomb@plt+0x2bf78>
  430b6c:	str	x26, [x1]
  430b70:	mov	w0, #0x0                   	// #0
  430b74:	stp	w23, w25, [x1, #8]
  430b78:	stp	x21, x22, [x1, #16]
  430b7c:	cbz	x21, 430b88 <wcrtomb@plt+0x2bf68>
  430b80:	ldr	w0, [x21, #32]
  430b84:	add	w0, w0, #0x1
  430b88:	ldr	x2, [x19, #24]
  430b8c:	str	x1, [x19, #24]
  430b90:	str	w0, [x1, #32]
  430b94:	str	x2, [x1, #40]
  430b98:	mov	x0, x24
  430b9c:	bl	4308f8 <wcrtomb@plt+0x2bcd8>
  430ba0:	ldr	x1, [x19, #24]
  430ba4:	mov	x28, x0
  430ba8:	cbz	x1, 430e10 <wcrtomb@plt+0x2c1f0>
  430bac:	nop
  430bb0:	mov	x0, x1
  430bb4:	ldr	x1, [x1, #40]
  430bb8:	cbnz	x1, 430bb0 <wcrtomb@plt+0x2bf90>
  430bbc:	add	x0, x0, #0x28
  430bc0:	ldr	w23, [x28, #8]
  430bc4:	ldr	x1, [x28, #24]
  430bc8:	str	x1, [x0]
  430bcc:	str	xzr, [x28, #24]
  430bd0:	cbz	w23, 430bf4 <wcrtomb@plt+0x2bfd4>
  430bd4:	ldr	w27, [x19, #8]
  430bd8:	cbnz	w27, 430c34 <wcrtomb@plt+0x2c014>
  430bdc:	ldr	x0, [x28]
  430be0:	str	x0, [x19]
  430be4:	ldr	x0, [x28, #16]
  430be8:	str	w23, [x19, #8]
  430bec:	str	x0, [x19, #16]
  430bf0:	str	wzr, [x28, #8]
  430bf4:	mov	x0, x28
  430bf8:	bl	430660 <wcrtomb@plt+0x2ba40>
  430bfc:	ldr	x24, [x20, #32]!
  430c00:	cbnz	x24, 430b3c <wcrtomb@plt+0x2bf1c>
  430c04:	mov	x0, x19
  430c08:	ldp	x19, x20, [sp, #16]
  430c0c:	ldp	x21, x22, [sp, #32]
  430c10:	ldp	x23, x24, [sp, #48]
  430c14:	ldp	x25, x26, [sp, #64]
  430c18:	ldp	x27, x28, [sp, #80]
  430c1c:	ldp	x29, x30, [sp], #160
  430c20:	ret
  430c24:	mov	w28, w1
  430c28:	str	x23, [x24]
  430c2c:	str	x25, [x24, #16]
  430c30:	b	430a28 <wcrtomb@plt+0x2be08>
  430c34:	add	w0, w23, w27
  430c38:	mov	w1, #0x38                  	// #56
  430c3c:	str	w0, [sp, #140]
  430c40:	umull	x0, w0, w1
  430c44:	bl	404310 <malloc@plt>
  430c48:	str	x0, [sp, #128]
  430c4c:	ldr	x25, [x19, #16]
  430c50:	mov	x0, x25
  430c54:	bl	403ff0 <strlen@plt>
  430c58:	ldr	x26, [x28, #16]
  430c5c:	mov	w24, w0
  430c60:	str	x24, [sp, #96]
  430c64:	mov	x0, x26
  430c68:	bl	403ff0 <strlen@plt>
  430c6c:	add	x0, x0, #0x1
  430c70:	add	x0, x0, x24
  430c74:	bl	404310 <malloc@plt>
  430c78:	ldr	x1, [sp, #128]
  430c7c:	mov	x24, x0
  430c80:	cmp	x1, #0x0
  430c84:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  430c88:	b.eq	430e78 <wcrtomb@plt+0x2c258>  // b.none
  430c8c:	mov	w0, #0x38                  	// #56
  430c90:	ldr	x1, [x19]
  430c94:	umull	x2, w27, w0
  430c98:	ldr	x0, [sp, #128]
  430c9c:	str	x1, [sp, #144]
  430ca0:	sub	w27, w27, #0x1
  430ca4:	add	x27, x27, #0x1
  430ca8:	bl	404810 <mempcpy@plt>
  430cac:	mov	w1, #0x38                  	// #56
  430cb0:	umull	x2, w23, w1
  430cb4:	ldr	x1, [x28]
  430cb8:	bl	403f70 <memcpy@plt>
  430cbc:	ldr	x2, [sp, #96]
  430cc0:	mov	x1, x25
  430cc4:	mov	x0, x24
  430cc8:	bl	403f70 <memcpy@plt>
  430ccc:	ldr	x0, [sp, #128]
  430cd0:	lsl	x3, x27, #3
  430cd4:	sub	x27, x3, x27
  430cd8:	mov	x2, x0
  430cdc:	add	x27, x0, x27, lsl #3
  430ce0:	ldr	x1, [x2, #16]
  430ce4:	add	x2, x2, #0x38
  430ce8:	sub	x1, x1, x25
  430cec:	add	x1, x24, x1
  430cf0:	stur	x1, [x2, #-40]
  430cf4:	cmp	x2, x27
  430cf8:	b.ne	430ce0 <wcrtomb@plt+0x2c0c0>  // b.any
  430cfc:	ldr	x0, [sp, #96]
  430d00:	sub	w23, w23, #0x1
  430d04:	add	x1, x24, x0
  430d08:	add	x0, x23, #0x1
  430d0c:	stp	x1, x1, [sp, #104]
  430d10:	lsl	x1, x0, #3
  430d14:	sub	x0, x1, x0
  430d18:	add	x0, x27, x0, lsl #3
  430d1c:	str	x0, [sp, #120]
  430d20:	ldr	w1, [x27, #8]
  430d24:	ldr	x0, [sp, #104]
  430d28:	str	x0, [x27, #16]
  430d2c:	ldr	x5, [x27]
  430d30:	cbz	w1, 430d90 <wcrtomb@plt+0x2c170>
  430d34:	sub	w1, w1, #0x1
  430d38:	add	x1, x1, #0x1
  430d3c:	add	x1, x1, x1, lsl #1
  430d40:	add	x25, x5, x1, lsl #4
  430d44:	nop
  430d48:	ldr	w0, [x5, #24]
  430d4c:	tbnz	w0, #3, 430d84 <wcrtomb@plt+0x2c164>
  430d50:	ldr	w23, [x5, #8]
  430d54:	sub	w0, w23, #0x1
  430d58:	cmp	w0, #0xfe
  430d5c:	b.hi	430d84 <wcrtomb@plt+0x2c164>  // b.pmore
  430d60:	str	x5, [sp, #96]
  430d64:	bl	404740 <__ctype_b_loc@plt>
  430d68:	ldr	x0, [x0]
  430d6c:	ldrb	w6, [x26]
  430d70:	ldr	x5, [sp, #96]
  430d74:	ldrh	w0, [x0, w23, sxtw #1]
  430d78:	tst	x0, #0x4000
  430d7c:	ccmp	w6, w23, #0x0, ne  // ne = any
  430d80:	b.eq	430dd0 <wcrtomb@plt+0x2c1b0>  // b.none
  430d84:	add	x5, x5, #0x30
  430d88:	cmp	x25, x5
  430d8c:	b.ne	430d48 <wcrtomb@plt+0x2c128>  // b.any
  430d90:	ldr	x0, [sp, #120]
  430d94:	add	x27, x27, #0x38
  430d98:	cmp	x0, x27
  430d9c:	b.ne	430d20 <wcrtomb@plt+0x2c100>  // b.any
  430da0:	ldr	x0, [sp, #104]
  430da4:	strb	wzr, [x0]
  430da8:	ldr	x0, [sp, #144]
  430dac:	bl	4047b0 <free@plt>
  430db0:	ldr	x0, [x19, #16]
  430db4:	bl	4047b0 <free@plt>
  430db8:	str	x24, [x19, #16]
  430dbc:	ldr	x0, [sp, #128]
  430dc0:	str	x0, [x19]
  430dc4:	ldr	w0, [sp, #140]
  430dc8:	str	w0, [x19, #8]
  430dcc:	b	430bf4 <wcrtomb@plt+0x2bfd4>
  430dd0:	ldr	x0, [sp, #112]
  430dd4:	cmp	x24, x0
  430dd8:	b.cs	430dfc <wcrtomb@plt+0x2c1dc>  // b.hs, b.nlast
  430ddc:	mov	x2, x24
  430de0:	ldrb	w0, [x2]
  430de4:	cmp	w0, w6
  430de8:	b.eq	430e08 <wcrtomb@plt+0x2c1e8>  // b.none
  430dec:	ldr	x0, [sp, #112]
  430df0:	add	x2, x2, #0x1
  430df4:	cmp	x0, x2
  430df8:	b.ne	430de0 <wcrtomb@plt+0x2c1c0>  // b.any
  430dfc:	ldr	x23, [sp, #104]
  430e00:	strb	w6, [x23], #1
  430e04:	str	x23, [sp, #104]
  430e08:	add	x26, x26, #0x1
  430e0c:	b	430d84 <wcrtomb@plt+0x2c164>
  430e10:	ldr	x0, [sp, #152]
  430e14:	b	430bc0 <wcrtomb@plt+0x2bfa0>
  430e18:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  430e1c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  430e20:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  430e24:	add	x3, x3, #0x1d0
  430e28:	add	x1, x1, #0xf08
  430e2c:	add	x0, x0, #0xf30
  430e30:	mov	w2, #0x1d1                 	// #465
  430e34:	bl	404ac0 <__assert_fail@plt>
  430e38:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  430e3c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  430e40:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  430e44:	add	x3, x3, #0x1d0
  430e48:	add	x1, x1, #0xf08
  430e4c:	add	x0, x0, #0xf20
  430e50:	mov	w2, #0x1c3                 	// #451
  430e54:	bl	404ac0 <__assert_fail@plt>
  430e58:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  430e5c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  430e60:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  430e64:	add	x3, x3, #0x1d0
  430e68:	add	x1, x1, #0xf08
  430e6c:	add	x0, x0, #0xf18
  430e70:	mov	w2, #0x1b9                 	// #441
  430e74:	bl	404ac0 <__assert_fail@plt>
  430e78:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  430e7c:	add	x3, x3, #0x1d0
  430e80:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  430e84:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  430e88:	add	x3, x3, #0x10
  430e8c:	add	x1, x1, #0xf08
  430e90:	add	x0, x0, #0xf58
  430e94:	mov	w2, #0x366                 	// #870
  430e98:	bl	404ac0 <__assert_fail@plt>
  430e9c:	nop
  430ea0:	stp	x29, x30, [sp, #-112]!
  430ea4:	mov	x29, sp
  430ea8:	stp	x19, x20, [sp, #16]
  430eac:	ldr	w20, [x0, #8]
  430eb0:	stp	x23, x24, [sp, #48]
  430eb4:	stp	x25, x26, [sp, #64]
  430eb8:	str	x1, [sp, #104]
  430ebc:	ldr	x25, [x0]
  430ec0:	ldr	x24, [x0, #16]
  430ec4:	cbz	w20, 430f98 <wcrtomb@plt+0x2c378>
  430ec8:	mov	x26, x2
  430ecc:	mov	x19, x25
  430ed0:	stp	x21, x22, [sp, #32]
  430ed4:	stp	x27, x28, [sp, #80]
  430ed8:	mov	x27, x3
  430edc:	b	430f1c <wcrtomb@plt+0x2c2fc>
  430ee0:	ldr	w28, [x19, #8]
  430ee4:	sub	w0, w28, #0x1
  430ee8:	cmp	w0, #0xfe
  430eec:	b.hi	430f0c <wcrtomb@plt+0x2c2ec>  // b.pmore
  430ef0:	bl	404740 <__ctype_b_loc@plt>
  430ef4:	ldr	x0, [x0]
  430ef8:	ldrh	w0, [x0, w28, sxtw #1]
  430efc:	tbz	w0, #14, 430f0c <wcrtomb@plt+0x2c2ec>
  430f00:	ldrb	w0, [x24]
  430f04:	cmp	w0, w28
  430f08:	b.eq	430f60 <wcrtomb@plt+0x2c340>  // b.none
  430f0c:	subs	w20, w20, #0x1
  430f10:	add	x19, x19, #0x30
  430f14:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  430f18:	b.eq	430f40 <wcrtomb@plt+0x2c320>  // b.none
  430f1c:	ldr	w21, [x19, #24]
  430f20:	mov	w22, #0x1                   	// #1
  430f24:	and	w23, w21, #0x8
  430f28:	tbz	w21, #3, 430ee0 <wcrtomb@plt+0x2c2c0>
  430f2c:	subs	w20, w20, #0x1
  430f30:	add	x19, x19, #0x30
  430f34:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  430f38:	mov	w23, #0x0                   	// #0
  430f3c:	b.ne	430f1c <wcrtomb@plt+0x2c2fc>  // b.any
  430f40:	mov	w0, w23
  430f44:	ldp	x19, x20, [sp, #16]
  430f48:	ldp	x21, x22, [sp, #32]
  430f4c:	ldp	x23, x24, [sp, #48]
  430f50:	ldp	x25, x26, [sp, #64]
  430f54:	ldp	x27, x28, [sp, #80]
  430f58:	ldp	x29, x30, [sp], #112
  430f5c:	ret
  430f60:	tst	x21, #0x4
  430f64:	mov	x3, x27
  430f68:	csel	x25, x25, x19, ne  // ne = any
  430f6c:	mov	x2, x26
  430f70:	mov	x0, x19
  430f74:	add	x24, x24, #0x1
  430f78:	mov	x1, x25
  430f7c:	tbnz	w21, #1, 430f0c <wcrtomb@plt+0x2c2ec>
  430f80:	ldr	x4, [sp, #104]
  430f84:	blr	x4
  430f88:	cmp	w0, #0x0
  430f8c:	mov	w23, w0
  430f90:	cset	w22, eq  // eq = none
  430f94:	b	430f0c <wcrtomb@plt+0x2c2ec>
  430f98:	mov	w23, #0x0                   	// #0
  430f9c:	mov	w0, w23
  430fa0:	ldp	x19, x20, [sp, #16]
  430fa4:	ldp	x23, x24, [sp, #48]
  430fa8:	ldp	x25, x26, [sp, #64]
  430fac:	ldp	x29, x30, [sp], #112
  430fb0:	ret
  430fb4:	nop
  430fb8:	stp	x29, x30, [sp, #-112]!
  430fbc:	mov	x29, sp
  430fc0:	stp	x19, x20, [sp, #16]
  430fc4:	ldr	w19, [x0, #8]
  430fc8:	stp	x21, x22, [sp, #32]
  430fcc:	stp	x23, x24, [sp, #48]
  430fd0:	stp	x25, x26, [sp, #64]
  430fd4:	stp	x27, x28, [sp, #80]
  430fd8:	cbz	w19, 431168 <wcrtomb@plt+0x2c548>
  430fdc:	mov	x20, x0
  430fe0:	mov	x22, x1
  430fe4:	ldr	x0, [x0, #16]
  430fe8:	sub	w19, w19, #0x1
  430fec:	adrp	x23, 430000 <wcrtomb@plt+0x2b3e0>
  430ff0:	add	x23, x23, #0x6c0
  430ff4:	bl	403ff0 <strlen@plt>
  430ff8:	add	x1, x0, #0x10
  430ffc:	add	x0, x19, #0x1
  431000:	and	x1, x1, #0xfffffffffffffff0
  431004:	ldr	x19, [x20]
  431008:	lsl	x21, x0, #3
  43100c:	sub	x21, x21, x0
  431010:	sub	sp, sp, x1
  431014:	mov	x24, sp
  431018:	str	x24, [x29, #104]
  43101c:	add	x21, x19, x21, lsl #3
  431020:	ldr	x2, [x19, #40]
  431024:	mov	x0, x19
  431028:	add	x3, x29, #0x68
  43102c:	mov	x1, x23
  431030:	add	x19, x19, #0x38
  431034:	ldr	x2, [x2, #48]
  431038:	bl	430ea0 <wcrtomb@plt+0x2c280>
  43103c:	cmp	x19, x21
  431040:	b.ne	431020 <wcrtomb@plt+0x2c400>  // b.any
  431044:	ldr	x0, [x29, #104]
  431048:	cmp	x0, x24
  43104c:	b.hi	4311b8 <wcrtomb@plt+0x2c598>  // b.pmore
  431050:	ldr	w0, [x20, #8]
  431054:	ldr	x19, [x20]
  431058:	cbz	w0, 431168 <wcrtomb@plt+0x2c548>
  43105c:	sub	w0, w0, #0x1
  431060:	adrp	x23, 431000 <wcrtomb@plt+0x2c3e0>
  431064:	add	x0, x0, #0x1
  431068:	add	x23, x23, #0x718
  43106c:	lsl	x21, x0, #3
  431070:	sub	x21, x21, x0
  431074:	add	x21, x19, x21, lsl #3
  431078:	ldr	x2, [x19, #40]
  43107c:	mov	x0, x19
  431080:	mov	x3, x22
  431084:	mov	x1, x23
  431088:	add	x19, x19, #0x38
  43108c:	ldr	x2, [x2, #48]
  431090:	bl	430ea0 <wcrtomb@plt+0x2c280>
  431094:	cmp	x19, x21
  431098:	b.ne	431078 <wcrtomb@plt+0x2c458>  // b.any
  43109c:	ldr	w0, [x20, #8]
  4310a0:	ldr	x28, [x20]
  4310a4:	cbz	w0, 431168 <wcrtomb@plt+0x2c548>
  4310a8:	sub	w0, w0, #0x1
  4310ac:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4310b0:	add	x0, x0, #0x1
  4310b4:	adrp	x25, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4310b8:	add	x26, x26, #0xf90
  4310bc:	add	x25, x25, #0xf80
  4310c0:	lsl	x24, x0, #3
  4310c4:	sub	x0, x24, x0
  4310c8:	add	x24, x28, x0, lsl #3
  4310cc:	nop
  4310d0:	ldr	w0, [x28, #8]
  4310d4:	ldr	x1, [x28, #40]
  4310d8:	ldr	x27, [x28]
  4310dc:	ldr	x23, [x1, #48]
  4310e0:	cbz	w0, 43115c <wcrtomb@plt+0x2c53c>
  4310e4:	sub	w0, w0, #0x1
  4310e8:	mov	x19, x27
  4310ec:	add	x21, x0, #0x1
  4310f0:	add	x21, x21, x21, lsl #1
  4310f4:	add	x21, x27, x21, lsl #4
  4310f8:	ldr	x2, [x19]
  4310fc:	cbz	x2, 431150 <wcrtomb@plt+0x2c530>
  431100:	ldr	w0, [x19, #24]
  431104:	tst	x0, #0x4
  431108:	csel	x27, x27, x19, ne  // ne = any
  43110c:	tbnz	w0, #1, 431150 <wcrtomb@plt+0x2c530>
  431110:	ldr	x1, [x19, #16]
  431114:	ldr	w20, [x27, #24]
  431118:	orr	w20, w0, w20
  43111c:	and	w0, w20, #0x10
  431120:	cbz	x1, 431188 <wcrtomb@plt+0x2c568>
  431124:	cbnz	w0, 431150 <wcrtomb@plt+0x2c530>
  431128:	mov	w2, #0x5                   	// #5
  43112c:	mov	x0, x23
  431130:	bl	4049c0 <dcgettext@plt>
  431134:	mov	x3, x0
  431138:	ldr	x2, [x19]
  43113c:	tbz	w20, #0, 4311a8 <wcrtomb@plt+0x2c588>
  431140:	mov	x1, x25
  431144:	mov	x0, x22
  431148:	bl	44fb70 <_obstack_memory_used@@Base+0xd980>
  43114c:	nop
  431150:	add	x19, x19, #0x30
  431154:	cmp	x19, x21
  431158:	b.ne	4310f8 <wcrtomb@plt+0x2c4d8>  // b.any
  43115c:	add	x28, x28, #0x38
  431160:	cmp	x28, x24
  431164:	b.ne	4310d0 <wcrtomb@plt+0x2c4b0>  // b.any
  431168:	mov	sp, x29
  43116c:	ldp	x19, x20, [sp, #16]
  431170:	ldp	x21, x22, [sp, #32]
  431174:	ldp	x23, x24, [sp, #48]
  431178:	ldp	x25, x26, [sp, #64]
  43117c:	ldp	x27, x28, [sp, #80]
  431180:	ldp	x29, x30, [sp], #112
  431184:	ret
  431188:	cbnz	w0, 431150 <wcrtomb@plt+0x2c530>
  43118c:	ldr	x1, [x27, #16]
  431190:	cbnz	x1, 431128 <wcrtomb@plt+0x2c508>
  431194:	mov	x0, x22
  431198:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  43119c:	add	x1, x1, #0xfa0
  4311a0:	bl	44fb70 <_obstack_memory_used@@Base+0xd980>
  4311a4:	b	431150 <wcrtomb@plt+0x2c530>
  4311a8:	mov	x1, x26
  4311ac:	mov	x0, x22
  4311b0:	bl	44fb70 <_obstack_memory_used@@Base+0xd980>
  4311b4:	b	431150 <wcrtomb@plt+0x2c530>
  4311b8:	add	x1, x0, #0x1
  4311bc:	str	x1, [x29, #104]
  4311c0:	strb	wzr, [x0]
  4311c4:	mov	x2, x24
  4311c8:	mov	x0, x22
  4311cc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4311d0:	add	x1, x1, #0xf78
  4311d4:	bl	44fb70 <_obstack_memory_used@@Base+0xd980>
  4311d8:	b	431050 <wcrtomb@plt+0x2c430>
  4311dc:	nop
  4311e0:	stp	x29, x30, [sp, #-64]!
  4311e4:	mov	x29, sp
  4311e8:	ldr	x3, [x1, #32]
  4311ec:	stp	x19, x20, [sp, #16]
  4311f0:	ldr	w4, [x0, #24]
  4311f4:	ldr	x2, [x0, #32]
  4311f8:	mov	x19, x1
  4311fc:	ldr	w1, [x1, #24]
  431200:	cmp	x2, x3
  431204:	b.eq	4312f4 <wcrtomb@plt+0x2c6d4>  // b.none
  431208:	cbz	x2, 431294 <wcrtomb@plt+0x2c674>
  43120c:	cbz	x3, 4312b4 <wcrtomb@plt+0x2c694>
  431210:	ldr	w0, [x2, #32]
  431214:	ldr	w1, [x3, #32]
  431218:	cmp	w1, w0
  43121c:	b.ge	431230 <wcrtomb@plt+0x2c610>  // b.tcont
  431220:	ldr	x2, [x2, #16]
  431224:	ldr	w0, [x2, #32]
  431228:	cmp	w0, w1
  43122c:	b.gt	431220 <wcrtomb@plt+0x2c600>
  431230:	cmp	w0, w1
  431234:	b.ge	431248 <wcrtomb@plt+0x2c628>  // b.tcont
  431238:	ldr	x3, [x3, #16]
  43123c:	ldr	w1, [x3, #32]
  431240:	cmp	w1, w0
  431244:	b.gt	431238 <wcrtomb@plt+0x2c618>
  431248:	mov	x1, x2
  43124c:	mov	x4, x3
  431250:	ldr	x2, [x2, #16]
  431254:	ldr	x3, [x3, #16]
  431258:	cmp	x2, x3
  43125c:	b.ne	431248 <wcrtomb@plt+0x2c628>  // b.any
  431260:	ldr	w2, [x1, #12]
  431264:	ldr	w0, [x4, #12]
  431268:	cmp	w2, w0
  43126c:	b.eq	431428 <wcrtomb@plt+0x2c808>  // b.none
  431270:	mvn	w1, w0
  431274:	sub	w3, w2, w0
  431278:	sub	w0, w0, w2
  43127c:	lsr	w1, w1, #31
  431280:	cmp	w1, w2, lsr #31
  431284:	csel	w0, w0, w3, eq  // eq = none
  431288:	ldp	x19, x20, [sp, #16]
  43128c:	ldp	x29, x30, [sp], #64
  431290:	ret
  431294:	mov	x0, x3
  431298:	ldr	x3, [x3, #16]
  43129c:	cbnz	x3, 431294 <wcrtomb@plt+0x2c674>
  4312a0:	ldr	w1, [x0, #12]
  4312a4:	mov	w0, #0xffffffff            	// #-1
  4312a8:	cmp	w4, w1
  4312ac:	b.ne	4312fc <wcrtomb@plt+0x2c6dc>  // b.any
  4312b0:	b	431288 <wcrtomb@plt+0x2c668>
  4312b4:	mov	x0, x2
  4312b8:	ldr	x2, [x2, #16]
  4312bc:	cbnz	x2, 4312b4 <wcrtomb@plt+0x2c694>
  4312c0:	ldr	w2, [x0, #12]
  4312c4:	mov	w0, #0x1                   	// #1
  4312c8:	cmp	w1, w2
  4312cc:	b.eq	431288 <wcrtomb@plt+0x2c668>  // b.none
  4312d0:	mvn	w3, w1
  4312d4:	sub	w0, w2, w1
  4312d8:	sub	w1, w1, w2
  4312dc:	lsr	w3, w3, #31
  4312e0:	cmp	w3, w2, lsr #31
  4312e4:	csel	w0, w1, w0, eq  // eq = none
  4312e8:	ldp	x19, x20, [sp, #16]
  4312ec:	ldp	x29, x30, [sp], #64
  4312f0:	ret
  4312f4:	cmp	w4, w1
  4312f8:	b.eq	431320 <wcrtomb@plt+0x2c700>  // b.none
  4312fc:	mvn	w2, w1
  431300:	sub	w0, w4, w1
  431304:	sub	w1, w1, w4
  431308:	lsr	w2, w2, #31
  43130c:	cmp	w2, w4, lsr #31
  431310:	csel	w0, w1, w0, eq  // eq = none
  431314:	ldp	x19, x20, [sp, #16]
  431318:	ldp	x29, x30, [sp], #64
  43131c:	ret
  431320:	ldr	x2, [x0, #40]
  431324:	stp	x21, x22, [sp, #32]
  431328:	adrp	x22, 431000 <wcrtomb@plt+0x2c3e0>
  43132c:	add	x22, x22, #0x5e0
  431330:	mov	x20, x0
  431334:	ldr	x2, [x2, #48]
  431338:	mov	x1, x22
  43133c:	mov	x3, #0x0                   	// #0
  431340:	bl	430ea0 <wcrtomb@plt+0x2c280>
  431344:	mov	w21, w0
  431348:	ldr	x2, [x19, #40]
  43134c:	mov	x1, x22
  431350:	mov	x3, #0x0                   	// #0
  431354:	mov	x0, x19
  431358:	ldr	x2, [x2, #48]
  43135c:	bl	430ea0 <wcrtomb@plt+0x2c280>
  431360:	mov	w22, w0
  431364:	ldr	x1, [x19]
  431368:	ldr	w3, [x20, #8]
  43136c:	ldr	x2, [x20]
  431370:	ldr	w20, [x1, #24]
  431374:	ldr	w0, [x2, #24]
  431378:	and	w20, w20, #0x8
  43137c:	cbz	w3, 4313ac <wcrtomb@plt+0x2c78c>
  431380:	sub	w3, w3, #0x1
  431384:	add	x4, x3, #0x1
  431388:	add	x4, x4, x4, lsl #1
  43138c:	add	x4, x2, x4, lsl #4
  431390:	ldr	x3, [x2]
  431394:	cbz	x3, 4313a0 <wcrtomb@plt+0x2c780>
  431398:	ldr	w5, [x2, #24]
  43139c:	tbz	w5, #1, 431470 <wcrtomb@plt+0x2c850>
  4313a0:	add	x2, x2, #0x30
  4313a4:	cmp	x2, x4
  4313a8:	b.ne	431390 <wcrtomb@plt+0x2c770>  // b.any
  4313ac:	ldr	w2, [x19, #8]
  4313b0:	mov	w0, #0x0                   	// #0
  4313b4:	str	xzr, [sp, #48]
  4313b8:	cbz	w2, 431438 <wcrtomb@plt+0x2c818>
  4313bc:	sub	w2, w2, #0x1
  4313c0:	add	x3, x2, #0x1
  4313c4:	add	x3, x3, x3, lsl #1
  4313c8:	add	x3, x1, x3, lsl #4
  4313cc:	nop
  4313d0:	ldr	x2, [x1]
  4313d4:	cbz	x2, 4313e0 <wcrtomb@plt+0x2c7c0>
  4313d8:	ldr	w4, [x1, #24]
  4313dc:	tbz	w4, #1, 4313f0 <wcrtomb@plt+0x2c7d0>
  4313e0:	add	x1, x1, #0x30
  4313e4:	cmp	x1, x3
  4313e8:	b.ne	4313d0 <wcrtomb@plt+0x2c7b0>  // b.any
  4313ec:	mov	x2, #0x0                   	// #0
  4313f0:	str	x2, [sp, #56]
  4313f4:	cbnz	w0, 431490 <wcrtomb@plt+0x2c870>
  4313f8:	cbz	w20, 431440 <wcrtomb@plt+0x2c820>
  4313fc:	mov	w19, #0x0                   	// #0
  431400:	cbz	x2, 431440 <wcrtomb@plt+0x2c820>
  431404:	add	x0, sp, #0x38
  431408:	bl	4305f0 <wcrtomb@plt+0x2b9d0>
  43140c:	cmp	w0, #0x0
  431410:	cset	w20, ne  // ne = any
  431414:	cmp	w19, w20
  431418:	b.eq	431440 <wcrtomb@plt+0x2c820>  // b.none
  43141c:	sub	w0, w19, w20
  431420:	ldp	x21, x22, [sp, #32]
  431424:	b	431288 <wcrtomb@plt+0x2c668>
  431428:	ldr	w1, [x1, #8]
  43142c:	ldr	w0, [x4, #8]
  431430:	sub	w0, w0, w1
  431434:	b	431288 <wcrtomb@plt+0x2c668>
  431438:	str	xzr, [sp, #56]
  43143c:	nop
  431440:	orr	w0, w21, w22
  431444:	and	w20, w21, #0xff
  431448:	tst	w0, #0xff
  43144c:	and	w21, w21, #0xff
  431450:	b.ne	4314b4 <wcrtomb@plt+0x2c894>  // b.any
  431454:	ldr	x0, [sp, #48]
  431458:	cbz	x0, 431504 <wcrtomb@plt+0x2c8e4>
  43145c:	ldr	x1, [sp, #56]
  431460:	cbz	x1, 431520 <wcrtomb@plt+0x2c900>
  431464:	bl	404500 <strcasecmp@plt>
  431468:	ldp	x21, x22, [sp, #32]
  43146c:	b	431288 <wcrtomb@plt+0x2c668>
  431470:	ldr	w2, [x19, #8]
  431474:	and	w4, w0, #0x8
  431478:	str	x3, [sp, #48]
  43147c:	ubfx	x0, x0, #3, #1
  431480:	cbnz	w2, 4313bc <wcrtomb@plt+0x2c79c>
  431484:	str	xzr, [sp, #56]
  431488:	cbz	w4, 431440 <wcrtomb@plt+0x2c820>
  43148c:	nop
  431490:	add	x0, sp, #0x30
  431494:	bl	4305f0 <wcrtomb@plt+0x2b9d0>
  431498:	cmp	w0, #0x0
  43149c:	cset	w19, ne  // ne = any
  4314a0:	cbz	w20, 431414 <wcrtomb@plt+0x2c7f4>
  4314a4:	ldr	x0, [sp, #56]
  4314a8:	mov	w20, #0x0                   	// #0
  4314ac:	cbz	x0, 431414 <wcrtomb@plt+0x2c7f4>
  4314b0:	b	431404 <wcrtomb@plt+0x2c7e4>
  4314b4:	cbnz	w21, 4314c4 <wcrtomb@plt+0x2c8a4>
  4314b8:	ldr	x0, [sp, #48]
  4314bc:	cbz	x0, 431508 <wcrtomb@plt+0x2c8e8>
  4314c0:	ldrb	w20, [x0]
  4314c4:	ubfiz	x21, x20, #2, #8
  4314c8:	tst	w22, #0xff
  4314cc:	b.ne	431514 <wcrtomb@plt+0x2c8f4>  // b.any
  4314d0:	ldr	x0, [sp, #56]
  4314d4:	cbz	x0, 431530 <wcrtomb@plt+0x2c910>
  4314d8:	ldrb	w19, [x0]
  4314dc:	ubfiz	x22, x19, #2, #8
  4314e0:	bl	4041f0 <__ctype_tolower_loc@plt>
  4314e4:	sub	w19, w19, w20
  4314e8:	ldr	x1, [x0]
  4314ec:	ldr	w0, [x1, x21]
  4314f0:	ldr	w1, [x1, x22]
  4314f4:	ldp	x21, x22, [sp, #32]
  4314f8:	subs	w0, w0, w1
  4314fc:	csel	w0, w19, w0, eq  // eq = none
  431500:	b	431288 <wcrtomb@plt+0x2c668>
  431504:	cbnz	w21, 4314c4 <wcrtomb@plt+0x2c8a4>
  431508:	mov	x21, #0x0                   	// #0
  43150c:	mov	w20, #0x0                   	// #0
  431510:	b	4314c8 <wcrtomb@plt+0x2c8a8>
  431514:	and	w19, w22, #0xff
  431518:	ubfiz	x22, x22, #2, #8
  43151c:	b	4314e0 <wcrtomb@plt+0x2c8c0>
  431520:	cbz	w21, 4314c0 <wcrtomb@plt+0x2c8a0>
  431524:	tst	w22, #0xff
  431528:	ubfiz	x21, x20, #2, #8
  43152c:	b.ne	431514 <wcrtomb@plt+0x2c8f4>  // b.any
  431530:	mov	x22, #0x0                   	// #0
  431534:	mov	w19, #0x0                   	// #0
  431538:	b	4314e0 <wcrtomb@plt+0x2c8c0>
  43153c:	nop
  431540:	stp	x29, x30, [sp, #-48]!
  431544:	mov	x29, sp
  431548:	stp	x19, x20, [sp, #16]
  43154c:	mov	w20, w1
  431550:	mov	x19, x0
  431554:	ldp	x3, x1, [x0, #48]
  431558:	ldr	x2, [x0, #32]
  43155c:	str	x21, [sp, #32]
  431560:	sub	x1, x1, x3
  431564:	cmp	x1, x2
  431568:	b.hi	4315d8 <wcrtomb@plt+0x2c9b8>  // b.pmore
  43156c:	ldr	x0, [x19, #40]
  431570:	mov	w21, #0x20                  	// #32
  431574:	cmp	x0, #0x0
  431578:	csel	x0, x0, xzr, ge  // ge = tcont
  43157c:	sub	w20, w20, w0
  431580:	cmp	w20, #0x0
  431584:	sub	w20, w20, #0x1
  431588:	b.le	4315c8 <wcrtomb@plt+0x2c9a8>
  43158c:	nop
  431590:	ldp	x2, x3, [x19, #56]
  431594:	sub	w20, w20, #0x1
  431598:	mov	x0, x19
  43159c:	mov	x1, #0x1                   	// #1
  4315a0:	cmp	x2, x3
  4315a4:	b.cc	4315b4 <wcrtomb@plt+0x2c994>  // b.lo, b.ul, b.last
  4315a8:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4315ac:	cbz	w0, 4315c0 <wcrtomb@plt+0x2c9a0>
  4315b0:	ldr	x2, [x19, #56]
  4315b4:	add	x0, x2, #0x1
  4315b8:	str	x0, [x19, #56]
  4315bc:	strb	w21, [x2]
  4315c0:	cmn	w20, #0x1
  4315c4:	b.ne	431590 <wcrtomb@plt+0x2c970>  // b.any
  4315c8:	ldp	x19, x20, [sp, #16]
  4315cc:	ldr	x21, [sp, #32]
  4315d0:	ldp	x29, x30, [sp], #48
  4315d4:	ret
  4315d8:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  4315dc:	b	43156c <wcrtomb@plt+0x2c94c>
  4315e0:	ldr	w2, [x0, #24]
  4315e4:	tbnz	w2, #3, 43162c <wcrtomb@plt+0x2ca0c>
  4315e8:	stp	x29, x30, [sp, #-32]!
  4315ec:	mov	x1, x0
  4315f0:	and	w0, w2, #0x8
  4315f4:	mov	x29, sp
  4315f8:	str	x19, [sp, #16]
  4315fc:	ldr	w19, [x1, #8]
  431600:	sub	w1, w19, #0x1
  431604:	cmp	w1, #0xfe
  431608:	b.hi	431620 <wcrtomb@plt+0x2ca00>  // b.pmore
  43160c:	bl	404740 <__ctype_b_loc@plt>
  431610:	ldr	x0, [x0]
  431614:	ldrh	w0, [x0, w19, sxtw #1]
  431618:	tst	x0, #0x4000
  43161c:	csel	w0, wzr, w19, eq  // eq = none
  431620:	ldr	x19, [sp, #16]
  431624:	ldp	x29, x30, [sp], #32
  431628:	ret
  43162c:	mov	w0, #0x0                   	// #0
  431630:	ret
  431634:	nop
  431638:	stp	x29, x30, [sp, #-32]!
  43163c:	mov	x29, sp
  431640:	stp	x19, x20, [sp, #16]
  431644:	mov	x20, x1
  431648:	mov	x19, x0
  43164c:	ldp	x1, x2, [x0, #48]
  431650:	ldr	x3, [x0, #32]
  431654:	sub	x1, x2, x1
  431658:	cmp	x1, x3
  43165c:	b.hi	431708 <wcrtomb@plt+0x2cae8>  // b.pmore
  431660:	ldr	x0, [x19, #40]
  431664:	ldr	x1, [x19, #16]
  431668:	cmp	x0, #0x0
  43166c:	csel	x0, x0, xzr, ge  // ge = tcont
  431670:	add	x0, x0, x20
  431674:	cmp	x0, x1
  431678:	ldr	x0, [x19, #64]
  43167c:	b.cc	4316a4 <wcrtomb@plt+0x2ca84>  // b.lo, b.ul, b.last
  431680:	cmp	x2, x0
  431684:	b.cs	4316c8 <wcrtomb@plt+0x2caa8>  // b.hs, b.nlast
  431688:	add	x0, x2, #0x1
  43168c:	str	x0, [x19, #56]
  431690:	mov	w0, #0xa                   	// #10
  431694:	strb	w0, [x2]
  431698:	ldp	x19, x20, [sp, #16]
  43169c:	ldp	x29, x30, [sp], #32
  4316a0:	ret
  4316a4:	cmp	x2, x0
  4316a8:	b.cs	4316f0 <wcrtomb@plt+0x2cad0>  // b.hs, b.nlast
  4316ac:	add	x0, x2, #0x1
  4316b0:	str	x0, [x19, #56]
  4316b4:	mov	w0, #0x20                  	// #32
  4316b8:	strb	w0, [x2]
  4316bc:	ldp	x19, x20, [sp, #16]
  4316c0:	ldp	x29, x30, [sp], #32
  4316c4:	ret
  4316c8:	mov	x0, x19
  4316cc:	mov	x1, #0x1                   	// #1
  4316d0:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4316d4:	cbz	w0, 4316bc <wcrtomb@plt+0x2ca9c>
  4316d8:	ldr	x2, [x19, #56]
  4316dc:	add	x0, x2, #0x1
  4316e0:	str	x0, [x19, #56]
  4316e4:	mov	w0, #0xa                   	// #10
  4316e8:	strb	w0, [x2]
  4316ec:	b	431698 <wcrtomb@plt+0x2ca78>
  4316f0:	mov	x0, x19
  4316f4:	mov	x1, #0x1                   	// #1
  4316f8:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4316fc:	cbz	w0, 4316bc <wcrtomb@plt+0x2ca9c>
  431700:	ldr	x2, [x19, #56]
  431704:	b	4316ac <wcrtomb@plt+0x2ca8c>
  431708:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  43170c:	ldr	x2, [x19, #56]
  431710:	b	431660 <wcrtomb@plt+0x2ca40>
  431714:	nop
  431718:	stp	x29, x30, [sp, #-48]!
  43171c:	mov	x29, sp
  431720:	stp	x19, x20, [sp, #16]
  431724:	mov	x19, x0
  431728:	mov	x20, x3
  43172c:	ldr	x0, [x0, #16]
  431730:	cbz	x0, 4317a0 <wcrtomb@plt+0x2cb80>
  431734:	ldr	w1, [x1, #24]
  431738:	stp	x21, x22, [sp, #32]
  43173c:	ldr	w21, [x19, #24]
  431740:	orr	w21, w21, w1
  431744:	tbz	w21, #4, 43175c <wcrtomb@plt+0x2cb3c>
  431748:	mov	w0, #0x0                   	// #0
  43174c:	ldp	x19, x20, [sp, #16]
  431750:	ldp	x21, x22, [sp, #32]
  431754:	ldp	x29, x30, [sp], #48
  431758:	ret
  43175c:	mov	x1, x0
  431760:	mov	x0, x2
  431764:	mov	w2, #0x5                   	// #5
  431768:	bl	4049c0 <dcgettext@plt>
  43176c:	mov	x22, x0
  431770:	tbz	w21, #0, 4317b8 <wcrtomb@plt+0x2cb98>
  431774:	ldr	w2, [x19, #8]
  431778:	mov	x3, x0
  43177c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  431780:	mov	x0, x20
  431784:	add	x1, x1, #0xfa8
  431788:	bl	44fb70 <_obstack_memory_used@@Base+0xd980>
  43178c:	mov	w0, #0x0                   	// #0
  431790:	ldp	x19, x20, [sp, #16]
  431794:	ldp	x21, x22, [sp, #32]
  431798:	ldp	x29, x30, [sp], #48
  43179c:	ret
  4317a0:	ldr	x0, [x1, #16]
  4317a4:	cbnz	x0, 431734 <wcrtomb@plt+0x2cb14>
  4317a8:	mov	w0, #0x0                   	// #0
  4317ac:	ldp	x19, x20, [sp, #16]
  4317b0:	ldp	x29, x30, [sp], #48
  4317b4:	ret
  4317b8:	bl	403ff0 <strlen@plt>
  4317bc:	add	x1, x0, #0x6
  4317c0:	mov	x0, x20
  4317c4:	bl	431638 <wcrtomb@plt+0x2ca18>
  4317c8:	ldr	w2, [x19, #8]
  4317cc:	mov	x3, x22
  4317d0:	mov	x0, x20
  4317d4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4317d8:	add	x1, x1, #0xfb8
  4317dc:	bl	44fb70 <_obstack_memory_used@@Base+0xd980>
  4317e0:	mov	w0, #0x0                   	// #0
  4317e4:	ldp	x19, x20, [sp, #16]
  4317e8:	ldp	x21, x22, [sp, #32]
  4317ec:	ldp	x29, x30, [sp], #48
  4317f0:	ret
  4317f4:	nop
  4317f8:	stp	x29, x30, [sp, #-128]!
  4317fc:	mov	x29, sp
  431800:	stp	x23, x24, [sp, #48]
  431804:	mov	x23, x2
  431808:	mov	x24, x1
  43180c:	stp	x19, x20, [sp, #16]
  431810:	mov	x19, x0
  431814:	mov	w20, w3
  431818:	ldr	x3, [x23]
  43181c:	mov	w2, #0x5                   	// #5
  431820:	ldr	x1, [x0, #16]
  431824:	stp	x21, x22, [sp, #32]
  431828:	mov	x21, x4
  43182c:	ldr	x0, [x0, #48]
  431830:	stp	x25, x26, [sp, #64]
  431834:	stp	x27, x28, [sp, #80]
  431838:	str	x3, [sp, #104]
  43183c:	ldr	x22, [x19, #32]
  431840:	bl	4049c0 <dcgettext@plt>
  431844:	ldr	x1, [x19, #40]
  431848:	str	x0, [sp, #112]
  43184c:	mov	x25, x0
  431850:	cbz	x1, 43186c <wcrtomb@plt+0x2cc4c>
  431854:	mov	w1, #0x6                   	// #6
  431858:	mov	x2, x19
  43185c:	mov	x3, x24
  431860:	movk	w1, #0x200, lsl #16
  431864:	bl	4308a8 <wcrtomb@plt+0x2bc88>
  431868:	mov	x25, x0
  43186c:	cbz	x25, 4319c8 <wcrtomb@plt+0x2cda8>
  431870:	mov	x0, x25
  431874:	mov	w1, #0xa                   	// #10
  431878:	bl	4049b0 <strchrnul@plt>
  43187c:	mov	x19, x0
  431880:	ldrb	w0, [x0]
  431884:	cbnz	w0, 431974 <wcrtomb@plt+0x2cd54>
  431888:	mov	x26, x25
  43188c:	mov	w27, #0x0                   	// #0
  431890:	add	x1, x19, #0x1
  431894:	mov	x0, x21
  431898:	sub	x1, x1, x26
  43189c:	bl	431638 <wcrtomb@plt+0x2ca18>
  4318a0:	ldp	x0, x4, [x21, #56]
  4318a4:	sub	x2, x19, x26
  4318a8:	add	x1, x0, x2
  4318ac:	cmp	x4, x1
  4318b0:	b.cs	4318d0 <wcrtomb@plt+0x2ccb0>  // b.hs, b.nlast
  4318b4:	mov	x1, x2
  4318b8:	mov	x0, x21
  4318bc:	str	x2, [sp, #120]
  4318c0:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4318c4:	cbz	w0, 4318ec <wcrtomb@plt+0x2cccc>
  4318c8:	ldr	x0, [x21, #56]
  4318cc:	ldr	x2, [sp, #120]
  4318d0:	mov	x1, x26
  4318d4:	str	x2, [sp, #120]
  4318d8:	bl	403f70 <memcpy@plt>
  4318dc:	ldr	x0, [x21, #56]
  4318e0:	ldr	x2, [sp, #120]
  4318e4:	add	x2, x0, x2
  4318e8:	str	x2, [x21, #56]
  4318ec:	ldr	x0, [sp, #112]
  4318f0:	cmp	x0, x25
  4318f4:	b.ne	4319bc <wcrtomb@plt+0x2cd9c>  // b.any
  4318f8:	cbz	x22, 431930 <wcrtomb@plt+0x2cd10>
  4318fc:	ldr	x0, [x22]
  431900:	cbz	x0, 431930 <wcrtomb@plt+0x2cd10>
  431904:	nop
  431908:	mov	w3, w20
  43190c:	mov	x1, x24
  431910:	mov	x4, x21
  431914:	mov	x2, x23
  431918:	bl	4317f8 <wcrtomb@plt+0x2cbd8>
  43191c:	mov	w1, w0
  431920:	ldr	x0, [x22, #32]!
  431924:	cmp	w1, #0x0
  431928:	cset	w20, eq  // eq = none
  43192c:	cbnz	x0, 431908 <wcrtomb@plt+0x2cce8>
  431930:	cmp	w20, #0x0
  431934:	ccmp	w27, #0x0, #0x4, ne  // ne = any
  431938:	b.eq	4319dc <wcrtomb@plt+0x2cdbc>  // b.none
  43193c:	ldrb	w0, [x19]
  431940:	ldr	x2, [sp, #104]
  431944:	ldrb	w1, [x2]
  431948:	cbz	w0, 431a00 <wcrtomb@plt+0x2cde0>
  43194c:	add	w1, w1, #0x1
  431950:	mov	w0, #0x1                   	// #1
  431954:	strb	w1, [x2]
  431958:	ldp	x19, x20, [sp, #16]
  43195c:	ldp	x21, x22, [sp, #32]
  431960:	ldp	x23, x24, [sp, #48]
  431964:	ldp	x25, x26, [sp, #64]
  431968:	ldp	x27, x28, [sp, #80]
  43196c:	ldp	x29, x30, [sp], #128
  431970:	ret
  431974:	ldr	x0, [sp, #104]
  431978:	ldrb	w27, [x0]
  43197c:	cbz	w27, 431a2c <wcrtomb@plt+0x2ce0c>
  431980:	mov	w28, #0x0                   	// #0
  431984:	nop
  431988:	add	x26, x19, #0x1
  43198c:	add	w28, w28, #0x1
  431990:	mov	x0, x26
  431994:	mov	w1, #0xa                   	// #10
  431998:	bl	4049b0 <strchrnul@plt>
  43199c:	mov	x19, x0
  4319a0:	cmp	w28, w27
  4319a4:	b.ne	431988 <wcrtomb@plt+0x2cd68>  // b.any
  4319a8:	ldr	x0, [x23]
  4319ac:	mov	w27, #0x1                   	// #1
  4319b0:	add	x0, x0, #0x1
  4319b4:	str	x0, [x23]
  4319b8:	b	431890 <wcrtomb@plt+0x2cc70>
  4319bc:	mov	x0, x25
  4319c0:	bl	4047b0 <free@plt>
  4319c4:	b	4318f8 <wcrtomb@plt+0x2ccd8>
  4319c8:	cbz	x22, 4319dc <wcrtomb@plt+0x2cdbc>
  4319cc:	ldr	x0, [x22]
  4319d0:	mov	x19, #0x0                   	// #0
  4319d4:	mov	w27, #0x0                   	// #0
  4319d8:	cbnz	x0, 431908 <wcrtomb@plt+0x2cce8>
  4319dc:	cmp	w20, #0x0
  4319e0:	cset	w0, eq  // eq = none
  4319e4:	ldp	x19, x20, [sp, #16]
  4319e8:	ldp	x21, x22, [sp, #32]
  4319ec:	ldp	x23, x24, [sp, #48]
  4319f0:	ldp	x25, x26, [sp, #64]
  4319f4:	ldp	x27, x28, [sp, #80]
  4319f8:	ldp	x29, x30, [sp], #128
  4319fc:	ret
  431a00:	mov	w0, #0x0                   	// #0
  431a04:	cbz	w1, 431958 <wcrtomb@plt+0x2cd38>
  431a08:	ldr	x1, [sp, #104]
  431a0c:	strb	wzr, [x1]
  431a10:	ldp	x19, x20, [sp, #16]
  431a14:	ldp	x21, x22, [sp, #32]
  431a18:	ldp	x23, x24, [sp, #48]
  431a1c:	ldp	x25, x26, [sp, #64]
  431a20:	ldp	x27, x28, [sp, #80]
  431a24:	ldp	x29, x30, [sp], #128
  431a28:	ret
  431a2c:	mov	x26, x25
  431a30:	b	4319a8 <wcrtomb@plt+0x2cd88>
  431a34:	nop
  431a38:	stp	x29, x30, [sp, #-96]!
  431a3c:	mov	x29, sp
  431a40:	stp	x21, x22, [sp, #32]
  431a44:	mov	x21, x1
  431a48:	mov	x1, x0
  431a4c:	stp	x19, x20, [sp, #16]
  431a50:	mov	x20, x2
  431a54:	ldr	x0, [x21, #48]
  431a58:	str	x2, [sp, #88]
  431a5c:	mov	w2, #0x5                   	// #5
  431a60:	bl	4049c0 <dcgettext@plt>
  431a64:	mov	x22, x0
  431a68:	ldr	x1, [x21, #40]
  431a6c:	mov	x19, x0
  431a70:	cbz	x1, 431a8c <wcrtomb@plt+0x2ce6c>
  431a74:	ldr	x3, [x20, #32]
  431a78:	mov	w1, #0x3                   	// #3
  431a7c:	mov	x2, x21
  431a80:	movk	w1, #0x200, lsl #16
  431a84:	bl	4308a8 <wcrtomb@plt+0x2bc88>
  431a88:	mov	x19, x0
  431a8c:	cbz	x19, 431aa4 <wcrtomb@plt+0x2ce84>
  431a90:	ldrb	w1, [x19]
  431a94:	ldr	x0, [x20, #16]
  431a98:	cbnz	w1, 431ac0 <wcrtomb@plt+0x2cea0>
  431a9c:	mov	w1, #0x1                   	// #1
  431aa0:	str	w1, [x0, #8]
  431aa4:	cmp	x22, x19
  431aa8:	b.eq	431b9c <wcrtomb@plt+0x2cf7c>  // b.none
  431aac:	mov	x0, x19
  431ab0:	ldp	x19, x20, [sp, #16]
  431ab4:	ldp	x21, x22, [sp, #32]
  431ab8:	ldp	x29, x30, [sp], #96
  431abc:	b	4047b0 <free@plt>
  431ac0:	ldr	x0, [x0]
  431ac4:	stp	x23, x24, [sp, #48]
  431ac8:	stp	x25, x26, [sp, #64]
  431acc:	ldr	x21, [x20, #8]
  431ad0:	cbz	x0, 431b08 <wcrtomb@plt+0x2cee8>
  431ad4:	ldp	x0, x1, [x21, #56]
  431ad8:	cmp	x0, x1
  431adc:	b.cc	431af4 <wcrtomb@plt+0x2ced4>  // b.lo, b.ul, b.last
  431ae0:	mov	x0, x21
  431ae4:	mov	x1, #0x1                   	// #1
  431ae8:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  431aec:	cbz	w0, 431b04 <wcrtomb@plt+0x2cee4>
  431af0:	ldr	x0, [x21, #56]
  431af4:	add	x1, x0, #0x1
  431af8:	str	x1, [x21, #56]
  431afc:	mov	w1, #0xa                   	// #10
  431b00:	strb	w1, [x0]
  431b04:	ldr	x21, [x20, #8]
  431b08:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x3fe10>
  431b0c:	add	x24, x24, #0x3a0
  431b10:	mov	x0, x21
  431b14:	ldr	w1, [x24, #24]
  431b18:	bl	431540 <wcrtomb@plt+0x2c920>
  431b1c:	ldrsw	x25, [x24, #24]
  431b20:	ldr	x21, [x20, #8]
  431b24:	ldp	x0, x23, [x21, #48]
  431b28:	ldr	x1, [x21, #32]
  431b2c:	sub	x0, x23, x0
  431b30:	cmp	x0, x1
  431b34:	b.hi	431c24 <wcrtomb@plt+0x2d004>  // b.pmore
  431b38:	mov	x26, x21
  431b3c:	str	x25, [x21, #8]
  431b40:	str	x25, [x26, #24]
  431b44:	mov	x0, x19
  431b48:	bl	403ff0 <strlen@plt>
  431b4c:	mov	x24, x0
  431b50:	cbnz	x0, 431bd8 <wcrtomb@plt+0x2cfb8>
  431b54:	ldr	x0, [x21, #48]
  431b58:	mov	x24, x21
  431b5c:	ldr	x1, [x21, #32]
  431b60:	sub	x0, x23, x0
  431b64:	cmp	x0, x1
  431b68:	b.hi	431bc4 <wcrtomb@plt+0x2cfa4>  // b.pmore
  431b6c:	ldr	x0, [x24, #64]
  431b70:	str	xzr, [x21, #8]
  431b74:	cmp	x0, x23
  431b78:	b.ls	431bac <wcrtomb@plt+0x2cf8c>  // b.plast
  431b7c:	add	x0, x23, #0x1
  431b80:	str	x0, [x24, #56]
  431b84:	mov	w0, #0xa                   	// #10
  431b88:	strb	w0, [x23]
  431b8c:	ldr	x0, [x20, #16]
  431b90:	ldp	x23, x24, [sp, #48]
  431b94:	ldp	x25, x26, [sp, #64]
  431b98:	b	431a9c <wcrtomb@plt+0x2ce7c>
  431b9c:	ldp	x19, x20, [sp, #16]
  431ba0:	ldp	x21, x22, [sp, #32]
  431ba4:	ldp	x29, x30, [sp], #96
  431ba8:	ret
  431bac:	mov	x0, x24
  431bb0:	mov	x1, #0x1                   	// #1
  431bb4:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  431bb8:	cbz	w0, 431b8c <wcrtomb@plt+0x2cf6c>
  431bbc:	ldr	x23, [x24, #56]
  431bc0:	b	431b7c <wcrtomb@plt+0x2cf5c>
  431bc4:	mov	x0, x21
  431bc8:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  431bcc:	ldr	x24, [x20, #8]
  431bd0:	ldr	x23, [x24, #56]
  431bd4:	b	431b6c <wcrtomb@plt+0x2cf4c>
  431bd8:	ldr	x1, [x21, #64]
  431bdc:	add	x0, x23, x0
  431be0:	cmp	x1, x0
  431be4:	b.cs	431bfc <wcrtomb@plt+0x2cfdc>  // b.hs, b.nlast
  431be8:	mov	x1, x24
  431bec:	mov	x0, x21
  431bf0:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  431bf4:	cbz	w0, 431c18 <wcrtomb@plt+0x2cff8>
  431bf8:	ldr	x23, [x21, #56]
  431bfc:	mov	x0, x23
  431c00:	mov	x2, x24
  431c04:	mov	x1, x19
  431c08:	bl	403f70 <memcpy@plt>
  431c0c:	ldr	x0, [x21, #56]
  431c10:	add	x0, x0, x24
  431c14:	str	x0, [x21, #56]
  431c18:	ldr	x21, [x20, #8]
  431c1c:	ldr	x23, [x21, #56]
  431c20:	b	431b54 <wcrtomb@plt+0x2cf34>
  431c24:	mov	x0, x21
  431c28:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  431c2c:	ldr	x26, [x20, #8]
  431c30:	ldr	w24, [x24, #24]
  431c34:	ldp	x0, x23, [x26, #48]
  431c38:	ldr	x1, [x26, #32]
  431c3c:	str	x25, [x21, #8]
  431c40:	sub	x0, x23, x0
  431c44:	cmp	x0, x1
  431c48:	b.ls	431c64 <wcrtomb@plt+0x2d044>  // b.plast
  431c4c:	mov	x0, x26
  431c50:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  431c54:	ldr	x21, [x20, #8]
  431c58:	sxtw	x25, w24
  431c5c:	ldr	x23, [x21, #56]
  431c60:	b	431b40 <wcrtomb@plt+0x2cf20>
  431c64:	sxtw	x25, w24
  431c68:	mov	x21, x26
  431c6c:	b	431b40 <wcrtomb@plt+0x2cf20>
  431c70:	stp	x29, x30, [sp, #-64]!
  431c74:	mov	x29, sp
  431c78:	stp	x19, x20, [sp, #16]
  431c7c:	mov	w20, w0
  431c80:	ldr	w0, [x1, #24]
  431c84:	stp	x21, x22, [sp, #32]
  431c88:	mov	x19, x1
  431c8c:	ldr	x21, [x1, #8]
  431c90:	cbz	w0, 431d98 <wcrtomb@plt+0x2d178>
  431c94:	ldr	x1, [x1]
  431c98:	ldr	x0, [x19, #16]
  431c9c:	ldr	x22, [x1, #32]
  431ca0:	str	x23, [sp, #48]
  431ca4:	ldr	x23, [x0]
  431ca8:	ldr	w0, [x0, #8]
  431cac:	cmp	w0, #0x0
  431cb0:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  431cb4:	b.ne	431d4c <wcrtomb@plt+0x2d12c>  // b.any
  431cb8:	cbz	x22, 431d2c <wcrtomb@plt+0x2d10c>
  431cbc:	ldr	x0, [x22]
  431cc0:	cbz	x0, 431d2c <wcrtomb@plt+0x2d10c>
  431cc4:	ldrb	w1, [x0]
  431cc8:	cbz	w1, 431d2c <wcrtomb@plt+0x2d10c>
  431ccc:	cbz	x23, 431cf8 <wcrtomb@plt+0x2d0d8>
  431cd0:	ldr	x1, [x23, #32]
  431cd4:	cmp	x1, x22
  431cd8:	b.eq	431d2c <wcrtomb@plt+0x2d10c>  // b.none
  431cdc:	cbz	x1, 431cf8 <wcrtomb@plt+0x2d0d8>
  431ce0:	ldr	x1, [x1, #16]
  431ce4:	cmp	x1, #0x0
  431ce8:	ccmp	x22, x1, #0x4, ne  // ne = any
  431cec:	b.ne	431ce0 <wcrtomb@plt+0x2d0c0>  // b.any
  431cf0:	cmp	x22, x1
  431cf4:	b.eq	431d2c <wcrtomb@plt+0x2d10c>  // b.none
  431cf8:	ldr	x1, [x22, #24]
  431cfc:	mov	x2, x19
  431d00:	ldr	x23, [x21, #24]
  431d04:	bl	431a38 <wcrtomb@plt+0x2ce18>
  431d08:	ldr	x22, [x19, #8]
  431d0c:	mov	x21, x22
  431d10:	ldp	x2, x0, [x22, #48]
  431d14:	ldr	x1, [x22, #32]
  431d18:	sub	x0, x0, x2
  431d1c:	cmp	x0, x1
  431d20:	b.hi	431dec <wcrtomb@plt+0x2d1cc>  // b.pmore
  431d24:	sxtw	x23, w23
  431d28:	str	x23, [x22, #24]
  431d2c:	ldr	x23, [sp, #48]
  431d30:	str	wzr, [x19, #24]
  431d34:	mov	w1, w20
  431d38:	mov	x0, x21
  431d3c:	ldp	x19, x20, [sp, #16]
  431d40:	ldp	x21, x22, [sp, #32]
  431d44:	ldp	x29, x30, [sp], #64
  431d48:	b	431540 <wcrtomb@plt+0x2c920>
  431d4c:	ldr	w1, [x1, #24]
  431d50:	ldr	w0, [x23, #24]
  431d54:	cmp	w1, w0
  431d58:	b.eq	431cb8 <wcrtomb@plt+0x2d098>  // b.none
  431d5c:	ldp	x0, x1, [x21, #56]
  431d60:	cmp	x0, x1
  431d64:	b.cc	431d7c <wcrtomb@plt+0x2d15c>  // b.lo, b.ul, b.last
  431d68:	mov	x0, x21
  431d6c:	mov	x1, #0x1                   	// #1
  431d70:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  431d74:	cbz	w0, 431d8c <wcrtomb@plt+0x2d16c>
  431d78:	ldr	x0, [x21, #56]
  431d7c:	add	x1, x0, #0x1
  431d80:	str	x1, [x21, #56]
  431d84:	mov	w1, #0xa                   	// #10
  431d88:	strb	w1, [x0]
  431d8c:	ldr	x21, [x19, #8]
  431d90:	cbnz	x22, 431cbc <wcrtomb@plt+0x2d09c>
  431d94:	b	431d2c <wcrtomb@plt+0x2d10c>
  431d98:	ldp	x0, x2, [x21, #56]
  431d9c:	add	x1, x0, #0x2
  431da0:	cmp	x2, x1
  431da4:	b.cs	431dbc <wcrtomb@plt+0x2d19c>  // b.hs, b.nlast
  431da8:	mov	x0, x21
  431dac:	mov	x1, #0x2                   	// #2
  431db0:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  431db4:	cbz	w0, 431dd0 <wcrtomb@plt+0x2d1b0>
  431db8:	ldr	x0, [x21, #56]
  431dbc:	mov	w1, #0x202c                	// #8236
  431dc0:	strh	w1, [x0]
  431dc4:	ldr	x0, [x21, #56]
  431dc8:	add	x0, x0, #0x2
  431dcc:	str	x0, [x21, #56]
  431dd0:	ldr	x21, [x19, #8]
  431dd4:	mov	w1, w20
  431dd8:	ldp	x19, x20, [sp, #16]
  431ddc:	mov	x0, x21
  431de0:	ldp	x21, x22, [sp, #32]
  431de4:	ldp	x29, x30, [sp], #64
  431de8:	b	431540 <wcrtomb@plt+0x2c920>
  431dec:	mov	x0, x22
  431df0:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  431df4:	ldr	x21, [x19, #8]
  431df8:	b	431d24 <wcrtomb@plt+0x2d104>
  431dfc:	nop
  431e00:	stp	x29, x30, [sp, #-128]!
  431e04:	mov	x29, sp
  431e08:	stp	x19, x20, [sp, #16]
  431e0c:	mov	x20, x0
  431e10:	mov	x19, x5
  431e14:	stp	x25, x26, [sp, #64]
  431e18:	mov	x26, x1
  431e1c:	mov	w25, w3
  431e20:	ldr	x1, [x0, #24]
  431e24:	stp	x21, x22, [sp, #32]
  431e28:	ldr	x0, [x0, #48]
  431e2c:	stp	x23, x24, [sp, #48]
  431e30:	mov	w23, w2
  431e34:	mov	w2, #0x5                   	// #5
  431e38:	stp	x27, x28, [sp, #80]
  431e3c:	mov	w27, w4
  431e40:	bl	4049c0 <dcgettext@plt>
  431e44:	mov	x21, x0
  431e48:	ldr	x22, [x20, #32]
  431e4c:	cbz	x0, 4321d0 <wcrtomb@plt+0x2d5b0>
  431e50:	mov	w1, #0xb                   	// #11
  431e54:	bl	404870 <strchr@plt>
  431e58:	ldr	x3, [x20, #40]
  431e5c:	cbnz	w23, 432074 <wcrtomb@plt+0x2d454>
  431e60:	cbz	x0, 43207c <wcrtomb@plt+0x2d45c>
  431e64:	subs	x6, x0, x21
  431e68:	cset	w5, ne  // ne = any
  431e6c:	cbz	x3, 4322d4 <wcrtomb@plt+0x2d6b4>
  431e70:	cbz	x6, 431e94 <wcrtomb@plt+0x2d274>
  431e74:	mov	x0, x21
  431e78:	mov	x1, x6
  431e7c:	str	x6, [sp, #104]
  431e80:	str	w5, [sp, #112]
  431e84:	bl	404850 <strndup@plt>
  431e88:	ldr	w5, [sp, #112]
  431e8c:	mov	x21, x0
  431e90:	ldr	x6, [sp, #104]
  431e94:	mov	x1, x26
  431e98:	mov	x0, x20
  431e9c:	str	w5, [sp, #104]
  431ea0:	str	x6, [sp, #120]
  431ea4:	bl	434bb0 <argp_parse@@Base+0xcc8>
  431ea8:	ldr	w5, [sp, #104]
  431eac:	cmp	x21, #0x0
  431eb0:	ldr	x3, [x20, #40]
  431eb4:	csel	w1, w5, wzr, ne  // ne = any
  431eb8:	mov	x24, x0
  431ebc:	mov	w0, #0x1                   	// #1
  431ec0:	mov	x2, x24
  431ec4:	movk	w0, #0x200, lsl #16
  431ec8:	str	w1, [sp, #104]
  431ecc:	mov	x1, x21
  431ed0:	str	w5, [sp, #112]
  431ed4:	blr	x3
  431ed8:	ldr	w5, [sp, #112]
  431edc:	mov	x28, x0
  431ee0:	ldr	x6, [sp, #120]
  431ee4:	cbz	x0, 4322e4 <wcrtomb@plt+0x2d6c4>
  431ee8:	cmp	x21, x28
  431eec:	csel	w5, w5, wzr, eq  // eq = none
  431ef0:	ldr	x3, [x19, #56]
  431ef4:	cbnz	w25, 4320cc <wcrtomb@plt+0x2d4ac>
  431ef8:	cbz	w5, 4320f0 <wcrtomb@plt+0x2d4d0>
  431efc:	ldr	x1, [x19, #64]
  431f00:	add	x0, x3, x6
  431f04:	cmp	x1, x0
  431f08:	b.cs	432158 <wcrtomb@plt+0x2d538>  // b.hs, b.nlast
  431f0c:	mov	x1, x6
  431f10:	mov	x0, x19
  431f14:	str	x6, [sp, #112]
  431f18:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  431f1c:	ldr	x3, [x19, #56]
  431f20:	ldr	x6, [sp, #112]
  431f24:	cbnz	w0, 432158 <wcrtomb@plt+0x2d538>
  431f28:	ldr	x1, [x19, #48]
  431f2c:	ldr	x0, [x19, #32]
  431f30:	sub	x3, x3, x1
  431f34:	cmp	x3, x0
  431f38:	b.hi	432190 <wcrtomb@plt+0x2d570>  // b.pmore
  431f3c:	ldr	x0, [x19, #40]
  431f40:	ldr	x1, [x19, #8]
  431f44:	cmp	x0, #0x0
  431f48:	csel	x0, x0, xzr, ge  // ge = tcont
  431f4c:	cmp	x1, x0
  431f50:	b.cc	4321b0 <wcrtomb@plt+0x2d590>  // b.lo, b.ul, b.last
  431f54:	cmp	x21, x28
  431f58:	b.eq	431f64 <wcrtomb@plt+0x2d344>  // b.none
  431f5c:	mov	x0, x28
  431f60:	bl	4047b0 <free@plt>
  431f64:	ldr	w0, [sp, #104]
  431f68:	mov	w28, #0x1                   	// #1
  431f6c:	cbz	w0, 431f80 <wcrtomb@plt+0x2d360>
  431f70:	ldr	x0, [x20, #40]
  431f74:	cbz	x0, 431ff8 <wcrtomb@plt+0x2d3d8>
  431f78:	mov	x0, x21
  431f7c:	bl	4047b0 <free@plt>
  431f80:	cbz	w23, 431ff8 <wcrtomb@plt+0x2d3d8>
  431f84:	ldr	x3, [x20, #40]
  431f88:	cbz	x3, 431ff8 <wcrtomb@plt+0x2d3d8>
  431f8c:	mov	w0, #0x4                   	// #4
  431f90:	mov	x2, x24
  431f94:	movk	w0, #0x200, lsl #16
  431f98:	mov	x1, #0x0                   	// #0
  431f9c:	blr	x3
  431fa0:	mov	x20, x0
  431fa4:	cbz	x0, 431ff8 <wcrtomb@plt+0x2d3d8>
  431fa8:	orr	w6, w25, w28
  431fac:	cbnz	w6, 432274 <wcrtomb@plt+0x2d654>
  431fb0:	mov	x0, x20
  431fb4:	bl	403ff0 <strlen@plt>
  431fb8:	mov	x21, x0
  431fbc:	cbnz	x0, 432294 <wcrtomb@plt+0x2d674>
  431fc0:	mov	x0, x20
  431fc4:	bl	4047b0 <free@plt>
  431fc8:	ldp	x2, x0, [x19, #48]
  431fcc:	ldr	x1, [x19, #32]
  431fd0:	sub	x0, x0, x2
  431fd4:	cmp	x0, x1
  431fd8:	b.hi	432268 <wcrtomb@plt+0x2d648>  // b.pmore
  431fdc:	ldr	x0, [x19, #40]
  431fe0:	ldr	x1, [x19, #8]
  431fe4:	cmp	x0, #0x0
  431fe8:	csel	x0, x0, xzr, ge  // ge = tcont
  431fec:	cmp	x1, x0
  431ff0:	b.cc	432244 <wcrtomb@plt+0x2d624>  // b.lo, b.ul, b.last
  431ff4:	mov	w28, #0x1                   	// #1
  431ff8:	cbz	x22, 432054 <wcrtomb@plt+0x2d434>
  431ffc:	ldr	x0, [x22]
  432000:	cbz	x0, 432054 <wcrtomb@plt+0x2d434>
  432004:	eor	w2, w27, #0x1
  432008:	eor	w1, w28, #0x1
  43200c:	and	w20, w2, #0x1
  432010:	orr	w1, w1, w2
  432014:	tbz	w1, #0, 43230c <wcrtomb@plt+0x2d6ec>
  432018:	orr	w1, w25, w28
  43201c:	mov	x5, x19
  432020:	cmp	w1, #0x0
  432024:	mov	w4, w27
  432028:	cset	w3, ne  // ne = any
  43202c:	mov	x1, x26
  432030:	mov	w2, w23
  432034:	bl	431e00 <wcrtomb@plt+0x2d1e0>
  432038:	mov	w1, w0
  43203c:	ldr	x0, [x22, #32]!
  432040:	orr	w28, w28, w1
  432044:	cmp	w28, #0x0
  432048:	ccmp	w20, #0x0, #0x0, ne  // ne = any
  43204c:	cbz	x0, 432054 <wcrtomb@plt+0x2d434>
  432050:	b.ne	432018 <wcrtomb@plt+0x2d3f8>  // b.any
  432054:	mov	w0, w28
  432058:	ldp	x19, x20, [sp, #16]
  43205c:	ldp	x21, x22, [sp, #32]
  432060:	ldp	x23, x24, [sp, #48]
  432064:	ldp	x25, x26, [sp, #64]
  432068:	ldp	x27, x28, [sp, #80]
  43206c:	ldp	x29, x30, [sp], #128
  432070:	ret
  432074:	add	x21, x0, #0x1
  432078:	cbz	x0, 4322fc <wcrtomb@plt+0x2d6dc>
  43207c:	mov	w5, #0x0                   	// #0
  432080:	mov	x6, #0x0                   	// #0
  432084:	cbz	x3, 4322d4 <wcrtomb@plt+0x2d6b4>
  432088:	mov	x1, x26
  43208c:	mov	x0, x20
  432090:	bl	434bb0 <argp_parse@@Base+0xcc8>
  432094:	mov	x2, x0
  432098:	ldr	x3, [x20, #40]
  43209c:	mov	x24, x0
  4320a0:	mov	w0, #0x1                   	// #1
  4320a4:	mov	x1, x21
  4320a8:	movk	w0, #0x200, lsl #16
  4320ac:	add	w0, w23, w0
  4320b0:	blr	x3
  4320b4:	mov	x28, x0
  4320b8:	cbz	x0, 4322f4 <wcrtomb@plt+0x2d6d4>
  4320bc:	mov	x6, #0x0                   	// #0
  4320c0:	mov	w5, #0x0                   	// #0
  4320c4:	str	wzr, [sp, #104]
  4320c8:	b	431ee8 <wcrtomb@plt+0x2d2c8>
  4320cc:	ldr	x0, [x19, #64]
  4320d0:	cmp	x0, x3
  4320d4:	b.ls	432208 <wcrtomb@plt+0x2d5e8>  // b.plast
  4320d8:	add	x0, x3, #0x1
  4320dc:	str	x0, [x19, #56]
  4320e0:	mov	w0, #0xa                   	// #10
  4320e4:	strb	w0, [x3]
  4320e8:	ldr	x3, [x19, #56]
  4320ec:	cbnz	w5, 431efc <wcrtomb@plt+0x2d2dc>
  4320f0:	mov	x0, x28
  4320f4:	str	x3, [sp, #112]
  4320f8:	bl	403ff0 <strlen@plt>
  4320fc:	mov	x2, x0
  432100:	ldr	x3, [sp, #112]
  432104:	cbz	x0, 431f28 <wcrtomb@plt+0x2d308>
  432108:	ldr	x1, [x19, #64]
  43210c:	add	x0, x3, x0
  432110:	cmp	x1, x0
  432114:	b.cs	432134 <wcrtomb@plt+0x2d514>  // b.hs, b.nlast
  432118:	mov	x1, x2
  43211c:	mov	x0, x19
  432120:	str	x2, [sp, #112]
  432124:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  432128:	ldr	x3, [x19, #56]
  43212c:	ldr	x2, [sp, #112]
  432130:	cbz	w0, 431f28 <wcrtomb@plt+0x2d308>
  432134:	mov	x0, x3
  432138:	mov	x1, x28
  43213c:	str	x2, [sp, #112]
  432140:	bl	403f70 <memcpy@plt>
  432144:	ldr	x3, [x19, #56]
  432148:	ldr	x2, [sp, #112]
  43214c:	add	x3, x3, x2
  432150:	str	x3, [x19, #56]
  432154:	b	431f28 <wcrtomb@plt+0x2d308>
  432158:	mov	x0, x3
  43215c:	mov	x2, x6
  432160:	mov	x1, x21
  432164:	str	x6, [sp, #112]
  432168:	bl	403f70 <memcpy@plt>
  43216c:	ldr	x3, [x19, #56]
  432170:	ldr	x6, [sp, #112]
  432174:	ldr	x1, [x19, #48]
  432178:	add	x3, x3, x6
  43217c:	ldr	x0, [x19, #32]
  432180:	str	x3, [x19, #56]
  432184:	sub	x3, x3, x1
  432188:	cmp	x3, x0
  43218c:	b.ls	431f3c <wcrtomb@plt+0x2d31c>  // b.plast
  432190:	mov	x0, x19
  432194:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  432198:	ldr	x0, [x19, #40]
  43219c:	ldr	x1, [x19, #8]
  4321a0:	cmp	x0, #0x0
  4321a4:	csel	x0, x0, xzr, ge  // ge = tcont
  4321a8:	cmp	x1, x0
  4321ac:	b.cs	431f54 <wcrtomb@plt+0x2d334>  // b.hs, b.nlast
  4321b0:	ldp	x0, x1, [x19, #56]
  4321b4:	cmp	x0, x1
  4321b8:	b.cs	4321e0 <wcrtomb@plt+0x2d5c0>  // b.hs, b.nlast
  4321bc:	add	x1, x0, #0x1
  4321c0:	str	x1, [x19, #56]
  4321c4:	mov	w1, #0xa                   	// #10
  4321c8:	strb	w1, [x0]
  4321cc:	b	431f54 <wcrtomb@plt+0x2d334>
  4321d0:	ldr	x0, [x20, #40]
  4321d4:	cbnz	x0, 432088 <wcrtomb@plt+0x2d468>
  4321d8:	mov	w28, #0x0                   	// #0
  4321dc:	b	431ff8 <wcrtomb@plt+0x2d3d8>
  4321e0:	mov	x0, x19
  4321e4:	mov	x1, #0x1                   	// #1
  4321e8:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4321ec:	cbz	w0, 431f54 <wcrtomb@plt+0x2d334>
  4321f0:	ldr	x0, [x19, #56]
  4321f4:	add	x1, x0, #0x1
  4321f8:	str	x1, [x19, #56]
  4321fc:	mov	w1, #0xa                   	// #10
  432200:	strb	w1, [x0]
  432204:	b	431f54 <wcrtomb@plt+0x2d334>
  432208:	mov	x0, x19
  43220c:	mov	x1, #0x1                   	// #1
  432210:	str	x6, [sp, #112]
  432214:	str	w5, [sp, #120]
  432218:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  43221c:	ldr	w5, [sp, #120]
  432220:	ldr	x3, [x19, #56]
  432224:	ldr	x6, [sp, #112]
  432228:	cbz	w0, 431ef8 <wcrtomb@plt+0x2d2d8>
  43222c:	add	x0, x3, #0x1
  432230:	str	x0, [x19, #56]
  432234:	mov	w0, #0xa                   	// #10
  432238:	strb	w0, [x3]
  43223c:	ldr	x3, [x19, #56]
  432240:	b	4320ec <wcrtomb@plt+0x2d4cc>
  432244:	ldp	x0, x1, [x19, #56]
  432248:	cmp	x0, x1
  43224c:	b.cs	43232c <wcrtomb@plt+0x2d70c>  // b.hs, b.nlast
  432250:	add	x1, x0, #0x1
  432254:	str	x1, [x19, #56]
  432258:	mov	w28, #0x1                   	// #1
  43225c:	mov	w1, #0xa                   	// #10
  432260:	strb	w1, [x0]
  432264:	b	431ff8 <wcrtomb@plt+0x2d3d8>
  432268:	mov	x0, x19
  43226c:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  432270:	b	431fdc <wcrtomb@plt+0x2d3bc>
  432274:	ldp	x0, x1, [x19, #56]
  432278:	cmp	x0, x1
  43227c:	b.cs	432314 <wcrtomb@plt+0x2d6f4>  // b.hs, b.nlast
  432280:	add	x1, x0, #0x1
  432284:	str	x1, [x19, #56]
  432288:	mov	w1, #0xa                   	// #10
  43228c:	strb	w1, [x0]
  432290:	b	431fb0 <wcrtomb@plt+0x2d390>
  432294:	ldp	x0, x2, [x19, #56]
  432298:	add	x1, x0, x21
  43229c:	cmp	x2, x1
  4322a0:	b.cs	4322b8 <wcrtomb@plt+0x2d698>  // b.hs, b.nlast
  4322a4:	mov	x1, x21
  4322a8:	mov	x0, x19
  4322ac:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4322b0:	cbz	w0, 431fc0 <wcrtomb@plt+0x2d3a0>
  4322b4:	ldr	x0, [x19, #56]
  4322b8:	mov	x2, x21
  4322bc:	mov	x1, x20
  4322c0:	bl	403f70 <memcpy@plt>
  4322c4:	ldr	x0, [x19, #56]
  4322c8:	add	x0, x0, x21
  4322cc:	str	x0, [x19, #56]
  4322d0:	b	431fc0 <wcrtomb@plt+0x2d3a0>
  4322d4:	mov	x28, x21
  4322d8:	mov	x24, #0x0                   	// #0
  4322dc:	str	w5, [sp, #104]
  4322e0:	b	431ef0 <wcrtomb@plt+0x2d2d0>
  4322e4:	ldr	w0, [sp, #104]
  4322e8:	mov	w28, #0x0                   	// #0
  4322ec:	cbnz	w0, 431f70 <wcrtomb@plt+0x2d350>
  4322f0:	b	431ff8 <wcrtomb@plt+0x2d3d8>
  4322f4:	mov	w28, #0x0                   	// #0
  4322f8:	b	431f80 <wcrtomb@plt+0x2d360>
  4322fc:	mov	x21, #0x0                   	// #0
  432300:	cbnz	x3, 432088 <wcrtomb@plt+0x2d468>
  432304:	mov	w28, #0x0                   	// #0
  432308:	b	431ff8 <wcrtomb@plt+0x2d3d8>
  43230c:	mov	w28, #0x1                   	// #1
  432310:	b	432054 <wcrtomb@plt+0x2d434>
  432314:	mov	x0, x19
  432318:	mov	x1, #0x1                   	// #1
  43231c:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  432320:	cbz	w0, 431fb0 <wcrtomb@plt+0x2d390>
  432324:	ldr	x0, [x19, #56]
  432328:	b	432280 <wcrtomb@plt+0x2d660>
  43232c:	mov	x0, x19
  432330:	mov	x1, #0x1                   	// #1
  432334:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  432338:	cbz	w0, 431ff4 <wcrtomb@plt+0x2d3d4>
  43233c:	ldr	x0, [x19, #56]
  432340:	b	432250 <wcrtomb@plt+0x2d630>
  432344:	nop

0000000000432348 <argp_failure@@Base>:
  432348:	stp	x29, x30, [sp, #-496]!
  43234c:	mov	x29, sp
  432350:	stp	x19, x20, [sp, #16]
  432354:	mov	x20, x0
  432358:	stp	x21, x22, [sp, #32]
  43235c:	mov	w22, w2
  432360:	mov	x21, x3
  432364:	str	x23, [sp, #48]
  432368:	mov	w23, w1
  43236c:	str	q0, [sp, #336]
  432370:	str	q1, [sp, #352]
  432374:	str	q2, [sp, #368]
  432378:	str	q3, [sp, #384]
  43237c:	str	q4, [sp, #400]
  432380:	str	q5, [sp, #416]
  432384:	str	q6, [sp, #432]
  432388:	str	q7, [sp, #448]
  43238c:	stp	x4, x5, [sp, #464]
  432390:	stp	x6, x7, [sp, #480]
  432394:	cbz	x0, 4324e0 <argp_failure@@Base+0x198>
  432398:	ldr	w0, [x0, #28]
  43239c:	tbnz	w0, #1, 4324cc <argp_failure@@Base+0x184>
  4323a0:	ldr	x19, [x20, #72]
  4323a4:	cbz	x19, 4324cc <argp_failure@@Base+0x184>
  4323a8:	mov	x0, x19
  4323ac:	bl	404090 <flockfile@plt>
  4323b0:	ldr	x0, [x20, #64]
  4323b4:	mov	x1, x19
  4323b8:	bl	4049e0 <fputs_unlocked@plt>
  4323bc:	cbz	x21, 432440 <argp_failure@@Base+0xf8>
  4323c0:	ldp	x0, x4, [x19, #40]
  4323c4:	add	x3, sp, #0x1d0
  4323c8:	add	x5, sp, #0x1f0
  4323cc:	mov	w2, #0xffffffe0            	// #-32
  4323d0:	mov	w1, #0xffffff80            	// #-128
  4323d4:	stp	x5, x5, [sp, #104]
  4323d8:	str	x3, [sp, #120]
  4323dc:	stp	w2, w1, [sp, #128]
  4323e0:	cmp	x0, x4
  4323e4:	b.cs	432550 <argp_failure@@Base+0x208>  // b.hs, b.nlast
  4323e8:	add	x1, x0, #0x1
  4323ec:	str	x1, [x19, #40]
  4323f0:	mov	w1, #0x3a                  	// #58
  4323f4:	strb	w1, [x0]
  4323f8:	ldp	x0, x1, [x19, #40]
  4323fc:	cmp	x0, x1
  432400:	b.cs	432540 <argp_failure@@Base+0x1f8>  // b.hs, b.nlast
  432404:	add	x1, x0, #0x1
  432408:	str	x1, [x19, #40]
  43240c:	mov	w1, #0x20                  	// #32
  432410:	strb	w1, [x0]
  432414:	ldp	x6, x7, [sp, #104]
  432418:	mov	x2, x21
  43241c:	ldp	x4, x5, [sp, #120]
  432420:	add	x3, sp, #0x40
  432424:	mov	x0, x19
  432428:	mov	w1, #0x1                   	// #1
  43242c:	stp	x6, x7, [sp, #64]
  432430:	stp	x4, x5, [sp, #80]
  432434:	stp	x6, x7, [sp, #136]
  432438:	stp	x4, x5, [sp, #152]
  43243c:	bl	4044a0 <__vfprintf_chk@plt>
  432440:	ldp	x0, x1, [x19, #40]
  432444:	cbz	w22, 43249c <argp_failure@@Base+0x154>
  432448:	cmp	x0, x1
  43244c:	b.cs	432570 <argp_failure@@Base+0x228>  // b.hs, b.nlast
  432450:	add	x1, x0, #0x1
  432454:	str	x1, [x19, #40]
  432458:	mov	w1, #0x3a                  	// #58
  43245c:	strb	w1, [x0]
  432460:	ldp	x0, x1, [x19, #40]
  432464:	cmp	x0, x1
  432468:	b.cs	432560 <argp_failure@@Base+0x218>  // b.hs, b.nlast
  43246c:	add	x1, x0, #0x1
  432470:	str	x1, [x19, #40]
  432474:	mov	w1, #0x20                  	// #32
  432478:	strb	w1, [x0]
  43247c:	add	x1, sp, #0x88
  432480:	mov	w0, w22
  432484:	mov	x2, #0xc8                  	// #200
  432488:	bl	404490 <strerror_r@plt>
  43248c:	cbz	x0, 432518 <argp_failure@@Base+0x1d0>
  432490:	mov	x1, x19
  432494:	bl	4049e0 <fputs_unlocked@plt>
  432498:	ldp	x0, x1, [x19, #40]
  43249c:	cmp	x1, x0
  4324a0:	b.ls	432508 <argp_failure@@Base+0x1c0>  // b.plast
  4324a4:	add	x1, x0, #0x1
  4324a8:	str	x1, [x19, #40]
  4324ac:	mov	w1, #0xa                   	// #10
  4324b0:	strb	w1, [x0]
  4324b4:	mov	x0, x19
  4324b8:	bl	404330 <funlockfile@plt>
  4324bc:	cbz	w23, 4324cc <argp_failure@@Base+0x184>
  4324c0:	cbz	x20, 432500 <argp_failure@@Base+0x1b8>
  4324c4:	ldr	w0, [x20, #28]
  4324c8:	tbz	w0, #5, 432500 <argp_failure@@Base+0x1b8>
  4324cc:	ldp	x19, x20, [sp, #16]
  4324d0:	ldp	x21, x22, [sp, #32]
  4324d4:	ldr	x23, [sp, #48]
  4324d8:	ldp	x29, x30, [sp], #496
  4324dc:	ret
  4324e0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4324e4:	ldr	x19, [x0, #1096]
  4324e8:	cbz	x19, 4324cc <argp_failure@@Base+0x184>
  4324ec:	mov	x0, x19
  4324f0:	bl	404090 <flockfile@plt>
  4324f4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4324f8:	ldr	x0, [x0, #1128]
  4324fc:	b	4323b4 <argp_failure@@Base+0x6c>
  432500:	mov	w0, w23
  432504:	bl	404020 <exit@plt>
  432508:	mov	x0, x19
  43250c:	mov	w1, #0xa                   	// #10
  432510:	bl	404680 <__overflow@plt>
  432514:	b	4324b4 <argp_failure@@Base+0x16c>
  432518:	mov	w0, w22
  43251c:	bl	4045a0 <strerror@plt>
  432520:	cbnz	x0, 432490 <argp_failure@@Base+0x148>
  432524:	ldr	x0, [x20]
  432528:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  43252c:	mov	w2, #0x5                   	// #5
  432530:	add	x1, x1, #0xfc8
  432534:	ldr	x0, [x0, #48]
  432538:	bl	4049c0 <dcgettext@plt>
  43253c:	b	432490 <argp_failure@@Base+0x148>
  432540:	mov	x0, x19
  432544:	mov	w1, #0x20                  	// #32
  432548:	bl	404680 <__overflow@plt>
  43254c:	b	432414 <argp_failure@@Base+0xcc>
  432550:	mov	x0, x19
  432554:	mov	w1, #0x3a                  	// #58
  432558:	bl	404680 <__overflow@plt>
  43255c:	b	4323f8 <argp_failure@@Base+0xb0>
  432560:	mov	x0, x19
  432564:	mov	w1, #0x20                  	// #32
  432568:	bl	404680 <__overflow@plt>
  43256c:	b	43247c <argp_failure@@Base+0x134>
  432570:	mov	x0, x19
  432574:	mov	w1, #0x3a                  	// #58
  432578:	bl	404680 <__overflow@plt>
  43257c:	b	432460 <argp_failure@@Base+0x118>
  432580:	stp	x29, x30, [sp, #-240]!
  432584:	mov	x29, sp
  432588:	stp	x19, x20, [sp, #16]
  43258c:	stp	x21, x22, [sp, #32]
  432590:	stp	x23, x24, [sp, #48]
  432594:	stp	x25, x26, [sp, #64]
  432598:	stp	x27, x28, [sp, #80]
  43259c:	str	x2, [x29, #120]
  4325a0:	cbz	x2, 4329c4 <argp_failure@@Base+0x67c>
  4325a4:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4325a8:	add	x19, x19, #0x3a0
  4325ac:	mov	x22, x0
  4325b0:	mov	x20, x1
  4325b4:	mov	x0, x2
  4325b8:	mov	w21, w3
  4325bc:	mov	x28, x4
  4325c0:	bl	404090 <flockfile@plt>
  4325c4:	ldr	w0, [x19, #36]
  4325c8:	cbz	w0, 4329e4 <argp_failure@@Base+0x69c>
  4325cc:	ldrsw	x2, [x19, #32]
  4325d0:	mov	x3, #0x0                   	// #0
  4325d4:	ldr	x0, [x29, #120]
  4325d8:	mov	x1, #0x0                   	// #0
  4325dc:	bl	44f458 <_obstack_memory_used@@Base+0xd268>
  4325e0:	mov	x26, x0
  4325e4:	cbz	x0, 43352c <argp_failure@@Base+0x11e4>
  4325e8:	mov	w0, #0xb                   	// #11
  4325ec:	mov	x27, #0x0                   	// #0
  4325f0:	tst	w21, w0
  4325f4:	b.ne	432ccc <argp_failure@@Base+0x984>  // b.any
  4325f8:	tst	x21, #0x3
  4325fc:	mov	w23, #0x0                   	// #0
  432600:	b.ne	432b78 <argp_failure@@Base+0x830>  // b.any
  432604:	tbnz	w21, #4, 432b4c <argp_failure@@Base+0x804>
  432608:	and	w24, w21, #0x8
  43260c:	tbnz	w21, #2, 432ae0 <argp_failure@@Base+0x798>
  432610:	cbz	w24, 43296c <argp_failure@@Base+0x624>
  432614:	ldr	w0, [x27, #8]
  432618:	cbz	w0, 43296c <argp_failure@@Base+0x624>
  43261c:	cbnz	w23, 432b18 <argp_failure@@Base+0x7d0>
  432620:	ldr	x25, [x27]
  432624:	stp	xzr, xzr, [x29, #184]
  432628:	sub	w0, w0, #0x1
  43262c:	add	x0, x0, #0x1
  432630:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432634:	add	x1, x1, #0x118
  432638:	str	x1, [x29, #96]
  43263c:	lsl	x1, x0, #3
  432640:	sub	x0, x1, x0
  432644:	add	x0, x25, x0, lsl #3
  432648:	str	x0, [x29, #112]
  43264c:	nop
  432650:	ldp	x0, x2, [x26, #48]
  432654:	ldr	x3, [x26, #32]
  432658:	ldr	x23, [x25]
  43265c:	sub	x2, x2, x0
  432660:	ldr	x0, [x25, #16]
  432664:	str	x0, [x29, #168]
  432668:	cmp	x2, x3
  43266c:	b.hi	433270 <argp_failure@@Base+0xf28>  // b.pmore
  432670:	ldr	w0, [x23, #24]
  432674:	mov	w1, #0x1                   	// #1
  432678:	ldr	x4, [x26, #8]
  43267c:	str	x4, [x29, #144]
  432680:	ldr	x4, [x26, #24]
  432684:	str	xzr, [x26, #8]
  432688:	str	x4, [x29, #136]
  43268c:	and	w4, w0, #0x8
  432690:	str	w4, [x29, #132]
  432694:	add	x4, x29, #0xb8
  432698:	stp	x25, x26, [x29, #200]
  43269c:	str	x4, [x29, #216]
  4326a0:	str	w1, [x29, #224]
  4326a4:	str	x20, [x29, #232]
  4326a8:	tbnz	w0, #3, 432f5c <argp_failure@@Base+0xc14>
  4326ac:	ldr	w0, [x25, #8]
  4326b0:	cbz	w0, 4326e4 <argp_failure@@Base+0x39c>
  4326b4:	sub	w1, w0, #0x1
  4326b8:	mov	x0, x23
  4326bc:	add	x1, x1, #0x1
  4326c0:	add	x1, x1, x1, lsl #1
  4326c4:	add	x1, x23, x1, lsl #4
  4326c8:	ldr	x4, [x0]
  4326cc:	cbz	x4, 4326d8 <argp_failure@@Base+0x390>
  4326d0:	ldr	w4, [x0, #24]
  4326d4:	tbz	w4, #1, 433330 <argp_failure@@Base+0xfe8>
  4326d8:	add	x0, x0, #0x30
  4326dc:	cmp	x0, x1
  4326e0:	b.ne	4326c8 <argp_failure@@Base+0x380>  // b.any
  4326e4:	ldr	w28, [x19, #8]
  4326e8:	cmp	x2, x3
  4326ec:	b.hi	432f6c <argp_failure@@Base+0xc24>  // b.pmore
  4326f0:	ldr	w24, [x25, #8]
  4326f4:	sxtw	x1, w28
  4326f8:	str	x1, [x26, #24]
  4326fc:	cbz	w24, 432778 <argp_failure@@Base+0x430>
  432700:	sub	w24, w24, #0x1
  432704:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x12e10>
  432708:	add	x24, x24, #0x1
  43270c:	add	x0, x0, #0xde8
  432710:	mov	x28, x23
  432714:	str	x0, [x29, #104]
  432718:	add	x24, x24, x24, lsl #1
  43271c:	add	x0, x23, x24, lsl #4
  432720:	str	x0, [x29, #152]
  432724:	nop
  432728:	ldr	w24, [x28, #24]
  43272c:	tbnz	w24, #3, 432768 <argp_failure@@Base+0x420>
  432730:	ldr	w1, [x28, #8]
  432734:	str	w1, [x29, #160]
  432738:	sub	w0, w1, #0x1
  43273c:	cmp	w0, #0xfe
  432740:	b.hi	432768 <argp_failure@@Base+0x420>  // b.pmore
  432744:	bl	404740 <__ctype_b_loc@plt>
  432748:	ldr	w1, [x29, #160]
  43274c:	ldr	x0, [x0]
  432750:	ldrh	w0, [x0, w1, sxtw #1]
  432754:	tbz	w0, #14, 432768 <argp_failure@@Base+0x420>
  432758:	ldr	x0, [x29, #168]
  43275c:	ldrb	w0, [x0]
  432760:	cmp	w1, w0
  432764:	b.eq	432e94 <argp_failure@@Base+0xb4c>  // b.none
  432768:	ldr	x0, [x29, #152]
  43276c:	add	x28, x28, #0x30
  432770:	cmp	x28, x0
  432774:	b.ne	432728 <argp_failure@@Base+0x3e0>  // b.any
  432778:	ldp	x3, x0, [x26, #48]
  43277c:	ldr	w2, [x23, #24]
  432780:	ldr	x1, [x26, #32]
  432784:	sub	x0, x0, x3
  432788:	tbz	w2, #3, 432ea8 <argp_failure@@Base+0xb60>
  43278c:	ldr	w24, [x19, #16]
  432790:	cmp	x0, x1
  432794:	b.hi	4333b8 <argp_failure@@Base+0x1070>  // b.pmore
  432798:	ldr	w0, [x25, #8]
  43279c:	sxtw	x24, w24
  4327a0:	str	x24, [x26, #24]
  4327a4:	cbz	w0, 432870 <argp_failure@@Base+0x528>
  4327a8:	sub	w24, w0, #0x1
  4327ac:	mov	x28, x23
  4327b0:	add	x24, x24, #0x1
  4327b4:	add	x24, x24, x24, lsl #1
  4327b8:	add	x24, x23, x24, lsl #4
  4327bc:	b	4327cc <argp_failure@@Base+0x484>
  4327c0:	add	x28, x28, #0x30
  4327c4:	cmp	x28, x24
  4327c8:	b.eq	432870 <argp_failure@@Base+0x528>  // b.none
  4327cc:	ldr	x0, [x28]
  4327d0:	cbz	x0, 4327c0 <argp_failure@@Base+0x478>
  4327d4:	ldr	w0, [x28, #24]
  4327d8:	tbnz	w0, #1, 4327c0 <argp_failure@@Base+0x478>
  4327dc:	ldr	w0, [x19, #16]
  4327e0:	add	x1, x29, #0xc8
  4327e4:	bl	431c70 <wcrtomb@plt+0x2d050>
  4327e8:	mov	x0, #0x0                   	// #0
  4327ec:	mov	w2, #0x5                   	// #5
  4327f0:	cbz	x20, 4327fc <argp_failure@@Base+0x4b4>
  4327f4:	ldr	x0, [x20]
  4327f8:	ldr	x0, [x0, #48]
  4327fc:	ldr	x1, [x28]
  432800:	bl	4049c0 <dcgettext@plt>
  432804:	str	x0, [x29, #168]
  432808:	bl	403ff0 <strlen@plt>
  43280c:	mov	x2, x0
  432810:	cbz	x0, 4327c0 <argp_failure@@Base+0x478>
  432814:	ldp	x4, x7, [x26, #56]
  432818:	mov	x1, x0
  43281c:	mov	x0, x26
  432820:	add	x6, x4, x2
  432824:	cmp	x7, x6
  432828:	b.cs	432840 <argp_failure@@Base+0x4f8>  // b.hs, b.nlast
  43282c:	str	x2, [x29, #160]
  432830:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  432834:	cbz	w0, 4327c0 <argp_failure@@Base+0x478>
  432838:	ldr	x4, [x26, #56]
  43283c:	ldr	x2, [x29, #160]
  432840:	mov	x0, x4
  432844:	ldr	x1, [x29, #168]
  432848:	str	x2, [x29, #168]
  43284c:	add	x28, x28, #0x30
  432850:	bl	403f70 <memcpy@plt>
  432854:	ldr	x0, [x26, #56]
  432858:	cmp	x28, x24
  43285c:	ldr	x2, [x29, #168]
  432860:	add	x2, x0, x2
  432864:	str	x2, [x26, #56]
  432868:	b.ne	4327cc <argp_failure@@Base+0x484>  // b.any
  43286c:	nop
  432870:	ldp	x2, x0, [x26, #48]
  432874:	ldr	x1, [x26, #32]
  432878:	sub	x0, x0, x2
  43287c:	cmp	x0, x1
  432880:	b.hi	433288 <argp_failure@@Base+0xf40>  // b.pmore
  432884:	ldr	w0, [x29, #224]
  432888:	str	xzr, [x26, #8]
  43288c:	cbz	w0, 432f78 <argp_failure@@Base+0xc30>
  432890:	ldr	w0, [x23, #24]
  432894:	tbnz	w0, #3, 4328b8 <argp_failure@@Base+0x570>
  432898:	ldr	w24, [x23, #8]
  43289c:	sub	w0, w24, #0x1
  4328a0:	cmp	w0, #0xfe
  4328a4:	b.hi	4328b8 <argp_failure@@Base+0x570>  // b.pmore
  4328a8:	bl	404740 <__ctype_b_loc@plt>
  4328ac:	ldr	x0, [x0]
  4328b0:	ldrh	w0, [x0, w24, sxtw #1]
  4328b4:	tbnz	w0, #14, 4328c0 <argp_failure@@Base+0x578>
  4328b8:	ldr	x0, [x23]
  4328bc:	cbz	x0, 4333d8 <argp_failure@@Base+0x1090>
  4328c0:	ldp	x2, x0, [x26, #48]
  4328c4:	ldr	x1, [x26, #32]
  4328c8:	ldrsw	x23, [x29, #144]
  4328cc:	sub	x0, x0, x2
  4328d0:	cmp	x0, x1
  4328d4:	b.hi	433134 <argp_failure@@Base+0xdec>  // b.pmore
  4328d8:	str	x23, [x26, #8]
  4328dc:	ldrsw	x0, [x29, #136]
  4328e0:	add	x25, x25, #0x38
  4328e4:	str	x0, [x26, #24]
  4328e8:	ldr	x0, [x29, #112]
  4328ec:	cmp	x25, x0
  4328f0:	b.ne	432650 <argp_failure@@Base+0x308>  // b.any
  4328f4:	ldr	w0, [x29, #196]
  4328f8:	cbz	w0, 432968 <argp_failure@@Base+0x620>
  4328fc:	ldr	w0, [x19, #4]
  432900:	cbz	w0, 432968 <argp_failure@@Base+0x620>
  432904:	cbz	x20, 433648 <argp_failure@@Base+0x1300>
  432908:	ldr	x0, [x20]
  43290c:	mov	w2, #0x5                   	// #5
  432910:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432914:	add	x1, x1, #0x140
  432918:	ldr	x0, [x0, #48]
  43291c:	bl	4049c0 <dcgettext@plt>
  432920:	mov	x24, x0
  432924:	ldr	x2, [x20]
  432928:	cbz	x2, 4336ec <argp_failure@@Base+0x13a4>
  43292c:	ldr	x1, [x2, #40]
  432930:	mov	x19, x0
  432934:	cbz	x1, 43294c <argp_failure@@Base+0x604>
  432938:	mov	w1, #0x5                   	// #5
  43293c:	mov	x3, x20
  432940:	movk	w1, #0x200, lsl #16
  432944:	bl	4308a8 <wcrtomb@plt+0x2bc88>
  432948:	mov	x19, x0
  43294c:	cbz	x19, 432968 <argp_failure@@Base+0x620>
  432950:	ldrb	w1, [x19]
  432954:	cbnz	w1, 433668 <argp_failure@@Base+0x1320>
  432958:	cmp	x19, x24
  43295c:	b.eq	432968 <argp_failure@@Base+0x620>  // b.none
  432960:	mov	x0, x19
  432964:	bl	4047b0 <free@plt>
  432968:	mov	w23, #0x1                   	// #1
  43296c:	tbnz	w21, #5, 432d70 <argp_failure@@Base+0xa28>
  432970:	tbz	w21, #6, 4329a8 <argp_failure@@Base+0x660>
  432974:	adrp	x19, 483000 <argp_program_version_hook@@Base+0x290>
  432978:	ldr	x0, [x19, #992]
  43297c:	cbz	x0, 4329a8 <argp_failure@@Base+0x660>
  432980:	cbnz	w23, 432e74 <argp_failure@@Base+0xb2c>
  432984:	ldr	x0, [x22, #48]
  432988:	mov	w2, #0x5                   	// #5
  43298c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432990:	add	x1, x1, #0x1b8
  432994:	bl	4049c0 <dcgettext@plt>
  432998:	mov	x1, x0
  43299c:	ldr	x2, [x19, #992]
  4329a0:	mov	x0, x26
  4329a4:	bl	44fb70 <_obstack_memory_used@@Base+0xd980>
  4329a8:	ldr	x0, [x29, #120]
  4329ac:	bl	404330 <funlockfile@plt>
  4329b0:	cbz	x27, 4329bc <argp_failure@@Base+0x674>
  4329b4:	mov	x0, x27
  4329b8:	bl	430660 <wcrtomb@plt+0x2ba40>
  4329bc:	mov	x0, x26
  4329c0:	bl	44fa18 <_obstack_memory_used@@Base+0xd828>
  4329c4:	mov	sp, x29
  4329c8:	ldp	x19, x20, [sp, #16]
  4329cc:	ldp	x21, x22, [sp, #32]
  4329d0:	ldp	x23, x24, [sp, #48]
  4329d4:	ldp	x25, x26, [sp, #64]
  4329d8:	ldp	x27, x28, [sp, #80]
  4329dc:	ldp	x29, x30, [sp], #240
  4329e0:	ret
  4329e4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x18e10>
  4329e8:	add	x0, x0, #0xfe0
  4329ec:	bl	404af0 <getenv@plt>
  4329f0:	mov	x26, x0
  4329f4:	ldp	x0, x1, [x19, #16]
  4329f8:	stp	x0, x1, [x29, #216]
  4329fc:	ldp	x2, x3, [x19]
  432a00:	stp	x2, x3, [x29, #200]
  432a04:	ldr	x0, [x19, #32]
  432a08:	str	x0, [x29, #232]
  432a0c:	cbz	x26, 4325cc <argp_failure@@Base+0x284>
  432a10:	ldrb	w25, [x26]
  432a14:	cbz	w25, 4336dc <argp_failure@@Base+0x1394>
  432a18:	bl	404740 <__ctype_b_loc@plt>
  432a1c:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432a20:	add	x1, x24, #0x1d0
  432a24:	stp	x1, x0, [x29, #160]
  432a28:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432a2c:	add	x0, x0, #0x20
  432a30:	str	x0, [x29, #136]
  432a34:	nop
  432a38:	ldr	x0, [x29, #168]
  432a3c:	ldr	x0, [x0]
  432a40:	b	432a48 <argp_failure@@Base+0x700>
  432a44:	ldrb	w25, [x26, #1]!
  432a48:	ubfiz	x1, x25, #1, #8
  432a4c:	ldrh	w1, [x0, x1]
  432a50:	tbnz	w1, #13, 432a44 <argp_failure@@Base+0x6fc>
  432a54:	tbnz	w1, #10, 433160 <argp_failure@@Base+0xe18>
  432a58:	cbnz	w25, 433538 <argp_failure@@Base+0x11f0>
  432a5c:	ldr	x1, [x29, #160]
  432a60:	add	x4, x29, #0xc8
  432a64:	ldr	w3, [x29, #232]
  432a68:	add	x0, x1, #0x20
  432a6c:	add	x24, x1, #0xb0
  432a70:	add	x23, x0, #0x10
  432a74:	mov	x0, x23
  432a78:	cmp	x23, x24
  432a7c:	b.eq	433470 <argp_failure@@Base+0x1128>  // b.none
  432a80:	ldrb	w1, [x23, #14]
  432a84:	cbnz	w1, 432a70 <argp_failure@@Base+0x728>
  432a88:	ldrb	w1, [x23, #15]
  432a8c:	and	x2, x1, #0xff
  432a90:	cmp	w1, #0x20
  432a94:	b.eq	432a70 <argp_failure@@Base+0x728>  // b.none
  432a98:	ldr	w1, [x4, x2]
  432a9c:	cmp	w1, w3
  432aa0:	b.lt	432a70 <argp_failure@@Base+0x728>  // b.tstop
  432aa4:	ldr	x0, [x20]
  432aa8:	mov	w2, #0x5                   	// #5
  432aac:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432ab0:	add	x1, x1, #0x68
  432ab4:	ldr	x0, [x0, #48]
  432ab8:	bl	4049c0 <dcgettext@plt>
  432abc:	mov	x3, x0
  432ac0:	mov	x5, x23
  432ac4:	mov	x0, x20
  432ac8:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432acc:	mov	w2, #0x0                   	// #0
  432ad0:	add	x4, x4, #0xa0
  432ad4:	mov	w1, #0x0                   	// #0
  432ad8:	bl	432348 <argp_failure@@Base>
  432adc:	b	4325cc <argp_failure@@Base+0x284>
  432ae0:	ldr	x0, [x22, #48]
  432ae4:	mov	w2, #0x5                   	// #5
  432ae8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432aec:	add	x1, x1, #0xe0
  432af0:	mov	w23, #0x1                   	// #1
  432af4:	bl	4049c0 <dcgettext@plt>
  432af8:	mov	x1, x0
  432afc:	mov	x3, x28
  432b00:	mov	x2, x28
  432b04:	mov	x0, x26
  432b08:	bl	44fb70 <_obstack_memory_used@@Base+0xd980>
  432b0c:	cbz	w24, 43296c <argp_failure@@Base+0x624>
  432b10:	ldr	w0, [x27, #8]
  432b14:	cbz	w0, 43296c <argp_failure@@Base+0x624>
  432b18:	ldp	x0, x1, [x26, #56]
  432b1c:	cmp	x0, x1
  432b20:	b.cs	4335a4 <argp_failure@@Base+0x125c>  // b.hs, b.nlast
  432b24:	add	x1, x0, #0x1
  432b28:	str	x1, [x26, #56]
  432b2c:	mov	w1, #0xa                   	// #10
  432b30:	strb	w1, [x0]
  432b34:	ldr	w0, [x27, #8]
  432b38:	ldr	x25, [x27]
  432b3c:	stp	xzr, xzr, [x29, #184]
  432b40:	cbnz	w0, 432628 <argp_failure@@Base+0x2e0>
  432b44:	mov	w23, #0x1                   	// #1
  432b48:	b	43296c <argp_failure@@Base+0x624>
  432b4c:	mov	x5, x26
  432b50:	mov	x1, x20
  432b54:	mov	x0, x22
  432b58:	mov	w4, #0x1                   	// #1
  432b5c:	mov	w3, #0x0                   	// #0
  432b60:	mov	w2, #0x0                   	// #0
  432b64:	and	w24, w21, #0x8
  432b68:	bl	431e00 <wcrtomb@plt+0x2d1e0>
  432b6c:	orr	w23, w23, w0
  432b70:	tbz	w21, #2, 432610 <argp_failure@@Base+0x2c8>
  432b74:	b	432ae0 <argp_failure@@Base+0x798>
  432b78:	ldr	x0, [x22, #16]
  432b7c:	mov	w24, #0x1                   	// #1
  432b80:	ldr	x1, [x22, #32]
  432b84:	bl	430848 <wcrtomb@plt+0x2bc28>
  432b88:	mov	x2, x0
  432b8c:	add	x0, x0, #0xf
  432b90:	mov	w1, #0x0                   	// #0
  432b94:	and	x0, x0, #0xfffffffffffffff0
  432b98:	sub	sp, sp, x0
  432b9c:	mov	x0, sp
  432ba0:	str	x0, [x29, #168]
  432ba4:	bl	404410 <memset@plt>
  432ba8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432bac:	add	x0, x0, #0xc8
  432bb0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432bb4:	add	x1, x1, #0xc0
  432bb8:	stp	x0, x1, [x29, #152]
  432bbc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432bc0:	add	x0, x0, #0xb8
  432bc4:	str	x0, [x29, #144]
  432bc8:	b	432c8c <argp_failure@@Base+0x944>
  432bcc:	ldr	x1, [x29, #144]
  432bd0:	bl	4049c0 <dcgettext@plt>
  432bd4:	ldr	x1, [x29, #160]
  432bd8:	mov	x2, x0
  432bdc:	mov	x3, x28
  432be0:	mov	x0, x26
  432be4:	bl	44fb70 <_obstack_memory_used@@Base+0xd980>
  432be8:	ldrsw	x25, [x19, #28]
  432bec:	ldp	x2, x0, [x26, #48]
  432bf0:	ldr	x1, [x26, #32]
  432bf4:	sub	x0, x0, x2
  432bf8:	cmp	x0, x1
  432bfc:	b.hi	432dec <argp_failure@@Base+0xaa4>  // b.pmore
  432c00:	ldr	x24, [x26, #8]
  432c04:	str	x25, [x26, #8]
  432c08:	tbz	w21, #1, 432dd8 <argp_failure@@Base+0xa90>
  432c0c:	ldr	w0, [x27, #8]
  432c10:	cbnz	w0, 432df8 <argp_failure@@Base+0xab0>
  432c14:	add	x2, x29, #0xc8
  432c18:	mov	x1, x20
  432c1c:	mov	x4, x26
  432c20:	mov	x0, x22
  432c24:	mov	w3, #0x1                   	// #1
  432c28:	bl	4317f8 <wcrtomb@plt+0x2cbd8>
  432c2c:	mov	w25, w0
  432c30:	ldp	x1, x0, [x26, #48]
  432c34:	ldr	x2, [x26, #32]
  432c38:	sub	x1, x0, x1
  432c3c:	cmp	x1, x2
  432c40:	b.hi	432da0 <argp_failure@@Base+0xa58>  // b.pmore
  432c44:	sxtw	x24, w24
  432c48:	sxtw	x23, w23
  432c4c:	str	x23, [x26, #24]
  432c50:	ldr	x1, [x26, #64]
  432c54:	str	x24, [x26, #8]
  432c58:	cmp	x1, x0
  432c5c:	b.hi	432c74 <argp_failure@@Base+0x92c>  // b.pmore
  432c60:	mov	x0, x26
  432c64:	mov	x1, #0x1                   	// #1
  432c68:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  432c6c:	cbz	w0, 432c84 <argp_failure@@Base+0x93c>
  432c70:	ldr	x0, [x26, #56]
  432c74:	add	x1, x0, #0x1
  432c78:	str	x1, [x26, #56]
  432c7c:	mov	w1, #0xa                   	// #10
  432c80:	strb	w1, [x0]
  432c84:	mov	w24, #0x0                   	// #0
  432c88:	cbz	w25, 432e68 <argp_failure@@Base+0xb20>
  432c8c:	ldp	x2, x0, [x26, #48]
  432c90:	ldr	x1, [x26, #32]
  432c94:	ldr	w23, [x19, #28]
  432c98:	sub	x0, x0, x2
  432c9c:	cmp	x0, x1
  432ca0:	b.hi	432d94 <argp_failure@@Base+0xa4c>  // b.pmore
  432ca4:	sxtw	x0, w23
  432ca8:	mov	w2, #0x5                   	// #5
  432cac:	ldr	x23, [x26, #24]
  432cb0:	str	x0, [x26, #24]
  432cb4:	ldr	x0, [x29, #168]
  432cb8:	str	x0, [x29, #200]
  432cbc:	ldr	x0, [x22, #48]
  432cc0:	cbnz	w24, 432bcc <argp_failure@@Base+0x884>
  432cc4:	ldr	x1, [x29, #152]
  432cc8:	b	432bd0 <argp_failure@@Base+0x888>
  432ccc:	mov	x1, #0x0                   	// #0
  432cd0:	mov	x0, x22
  432cd4:	bl	4308f8 <wcrtomb@plt+0x2bcd8>
  432cd8:	ldr	w23, [x0, #8]
  432cdc:	ldr	x24, [x0]
  432ce0:	mov	x27, x0
  432ce4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432ce8:	mov	w1, w23
  432cec:	add	x2, x2, #0xa8
  432cf0:	mov	x0, x24
  432cf4:	bl	430780 <wcrtomb@plt+0x2bb60>
  432cf8:	cbz	x0, 432d08 <argp_failure@@Base+0x9c0>
  432cfc:	mov	w1, #0xffffffff            	// #-1
  432d00:	str	w1, [x0, #24]
  432d04:	ldr	w23, [x27, #8]
  432d08:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432d0c:	mov	w1, w23
  432d10:	add	x2, x2, #0xb0
  432d14:	mov	x0, x24
  432d18:	bl	430780 <wcrtomb@plt+0x2bb60>
  432d1c:	cbz	x0, 432d2c <argp_failure@@Base+0x9e4>
  432d20:	mov	w1, #0xffffffff            	// #-1
  432d24:	str	w1, [x0, #24]
  432d28:	ldr	w23, [x27, #8]
  432d2c:	cbz	w23, 4325f8 <argp_failure@@Base+0x2b0>
  432d30:	mov	x2, x24
  432d34:	mov	w1, #0x0                   	// #0
  432d38:	str	w1, [x2, #48]
  432d3c:	add	w1, w1, #0x1
  432d40:	cmp	w1, w23
  432d44:	add	x2, x2, #0x38
  432d48:	b.ne	432d38 <argp_failure@@Base+0x9f0>  // b.any
  432d4c:	mov	x0, x24
  432d50:	adrp	x3, 431000 <wcrtomb@plt+0x2c3e0>
  432d54:	mov	x2, #0x38                  	// #56
  432d58:	add	x3, x3, #0x1e0
  432d5c:	bl	4041a0 <qsort@plt>
  432d60:	mov	w23, #0x0                   	// #0
  432d64:	tst	x21, #0x3
  432d68:	b.eq	432604 <argp_failure@@Base+0x2bc>  // b.none
  432d6c:	b	432b78 <argp_failure@@Base+0x830>
  432d70:	mov	w3, w23
  432d74:	mov	x1, x20
  432d78:	mov	x5, x26
  432d7c:	mov	x0, x22
  432d80:	mov	w4, #0x0                   	// #0
  432d84:	mov	w2, #0x1                   	// #1
  432d88:	bl	431e00 <wcrtomb@plt+0x2d1e0>
  432d8c:	orr	w23, w23, w0
  432d90:	b	432970 <argp_failure@@Base+0x628>
  432d94:	mov	x0, x26
  432d98:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  432d9c:	b	432ca4 <argp_failure@@Base+0x95c>
  432da0:	mov	x0, x26
  432da4:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  432da8:	ldp	x1, x0, [x26, #48]
  432dac:	sxtw	x23, w23
  432db0:	ldr	x2, [x26, #32]
  432db4:	str	x23, [x26, #24]
  432db8:	sxtw	x24, w24
  432dbc:	sub	x1, x0, x1
  432dc0:	cmp	x1, x2
  432dc4:	b.ls	432c50 <argp_failure@@Base+0x908>  // b.plast
  432dc8:	mov	x0, x26
  432dcc:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  432dd0:	ldr	x0, [x26, #56]
  432dd4:	b	432c50 <argp_failure@@Base+0x908>
  432dd8:	orr	w21, w21, #0x2
  432ddc:	mov	x1, x26
  432de0:	mov	x0, x27
  432de4:	bl	430fb8 <wcrtomb@plt+0x2c398>
  432de8:	b	432c14 <argp_failure@@Base+0x8cc>
  432dec:	mov	x0, x26
  432df0:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  432df4:	b	432c00 <argp_failure@@Base+0x8b8>
  432df8:	ldr	x0, [x22, #48]
  432dfc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432e00:	add	x1, x1, #0xd0
  432e04:	mov	w2, #0x5                   	// #5
  432e08:	bl	4049c0 <dcgettext@plt>
  432e0c:	mov	x25, x0
  432e10:	bl	403ff0 <strlen@plt>
  432e14:	mov	x2, x0
  432e18:	cbz	x0, 432c14 <argp_failure@@Base+0x8cc>
  432e1c:	ldp	x0, x3, [x26, #56]
  432e20:	add	x1, x0, x2
  432e24:	cmp	x3, x1
  432e28:	b.cs	432e48 <argp_failure@@Base+0xb00>  // b.hs, b.nlast
  432e2c:	mov	x1, x2
  432e30:	mov	x0, x26
  432e34:	str	x2, [x29, #136]
  432e38:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  432e3c:	cbz	w0, 432c14 <argp_failure@@Base+0x8cc>
  432e40:	ldr	x0, [x26, #56]
  432e44:	ldr	x2, [x29, #136]
  432e48:	mov	x1, x25
  432e4c:	str	x2, [x29, #136]
  432e50:	bl	403f70 <memcpy@plt>
  432e54:	ldr	x0, [x26, #56]
  432e58:	ldr	x2, [x29, #136]
  432e5c:	add	x2, x0, x2
  432e60:	str	x2, [x26, #56]
  432e64:	b	432c14 <argp_failure@@Base+0x8cc>
  432e68:	mov	w23, #0x1                   	// #1
  432e6c:	tbz	w21, #4, 432608 <argp_failure@@Base+0x2c0>
  432e70:	b	432b4c <argp_failure@@Base+0x804>
  432e74:	ldp	x0, x1, [x26, #56]
  432e78:	cmp	x0, x1
  432e7c:	b.cs	43358c <argp_failure@@Base+0x1244>  // b.hs, b.nlast
  432e80:	add	x1, x0, #0x1
  432e84:	str	x1, [x26, #56]
  432e88:	mov	w1, #0xa                   	// #10
  432e8c:	strb	w1, [x0]
  432e90:	b	432984 <argp_failure@@Base+0x63c>
  432e94:	tbz	w24, #1, 433294 <argp_failure@@Base+0xf4c>
  432e98:	ldr	x0, [x29, #168]
  432e9c:	add	x0, x0, #0x1
  432ea0:	str	x0, [x29, #168]
  432ea4:	b	432768 <argp_failure@@Base+0x420>
  432ea8:	ldr	w24, [x19, #12]
  432eac:	cmp	x0, x1
  432eb0:	b.hi	4333ac <argp_failure@@Base+0x1064>  // b.pmore
  432eb4:	ldr	w0, [x25, #8]
  432eb8:	sxtw	x24, w24
  432ebc:	str	x24, [x26, #24]
  432ec0:	cbz	w0, 432870 <argp_failure@@Base+0x528>
  432ec4:	sub	w0, w0, #0x1
  432ec8:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432ecc:	add	x0, x0, #0x1
  432ed0:	add	x1, x28, #0x120
  432ed4:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432ed8:	mov	x28, x23
  432edc:	add	x0, x0, x0, lsl #1
  432ee0:	add	x24, x24, #0x128
  432ee4:	add	x0, x23, x0, lsl #4
  432ee8:	stp	x1, x0, [x29, #160]
  432eec:	b	432f00 <argp_failure@@Base+0xbb8>
  432ef0:	ldr	x0, [x29, #168]
  432ef4:	add	x28, x28, #0x30
  432ef8:	cmp	x28, x0
  432efc:	b.eq	432870 <argp_failure@@Base+0x528>  // b.none
  432f00:	ldr	x0, [x28]
  432f04:	cbz	x0, 432ef0 <argp_failure@@Base+0xba8>
  432f08:	ldr	w0, [x28, #24]
  432f0c:	tbnz	w0, #1, 432ef0 <argp_failure@@Base+0xba8>
  432f10:	ldr	w0, [x19, #12]
  432f14:	add	x1, x29, #0xc8
  432f18:	bl	431c70 <wcrtomb@plt+0x2d050>
  432f1c:	ldr	x2, [x28]
  432f20:	mov	x0, x26
  432f24:	ldr	x1, [x29, #160]
  432f28:	bl	44fb70 <_obstack_memory_used@@Base+0xd980>
  432f2c:	mov	x4, #0x0                   	// #0
  432f30:	cbz	x20, 432f3c <argp_failure@@Base+0xbf4>
  432f34:	ldr	x0, [x20]
  432f38:	ldr	x4, [x0, #48]
  432f3c:	mov	x5, x26
  432f40:	ldr	x0, [x23, #16]
  432f44:	mov	x3, x24
  432f48:	add	x1, x23, #0x18
  432f4c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  432f50:	add	x2, x2, #0x130
  432f54:	bl	430700 <wcrtomb@plt+0x2bae0>
  432f58:	b	432ef0 <argp_failure@@Base+0xba8>
  432f5c:	str	wzr, [x29, #132]
  432f60:	cmp	x2, x3
  432f64:	ldr	w28, [x19, #8]
  432f68:	b.ls	4326f0 <argp_failure@@Base+0x3a8>  // b.plast
  432f6c:	mov	x0, x26
  432f70:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  432f74:	b	4326f0 <argp_failure@@Base+0x3a8>
  432f78:	ldr	x28, [x23, #32]
  432f7c:	cbz	x28, 4333c4 <argp_failure@@Base+0x107c>
  432f80:	mov	x0, #0x0                   	// #0
  432f84:	cbz	x20, 432f90 <argp_failure@@Base+0xc48>
  432f88:	ldr	x0, [x20]
  432f8c:	ldr	x0, [x0, #48]
  432f90:	mov	w2, #0x5                   	// #5
  432f94:	mov	x1, x28
  432f98:	bl	4049c0 <dcgettext@plt>
  432f9c:	ldr	x2, [x25, #40]
  432fa0:	mov	x24, x0
  432fa4:	cbz	x2, 433494 <argp_failure@@Base+0x114c>
  432fa8:	mov	x28, x0
  432fac:	ldr	x0, [x2, #40]
  432fb0:	cbz	x0, 432fc8 <argp_failure@@Base+0xc80>
  432fb4:	ldr	w1, [x23, #8]
  432fb8:	mov	x3, x20
  432fbc:	mov	x0, x28
  432fc0:	bl	4308a8 <wcrtomb@plt+0x2bc88>
  432fc4:	mov	x24, x0
  432fc8:	cbz	x24, 4330d0 <argp_failure@@Base+0xd88>
  432fcc:	ldrb	w0, [x24]
  432fd0:	cbz	w0, 4330c0 <argp_failure@@Base+0xd78>
  432fd4:	ldp	x2, x0, [x26, #48]
  432fd8:	ldr	x1, [x26, #32]
  432fdc:	sub	x0, x0, x2
  432fe0:	cmp	x0, x1
  432fe4:	b.hi	4334bc <argp_failure@@Base+0x1174>  // b.pmore
  432fe8:	ldr	x23, [x26, #40]
  432fec:	ldr	w1, [x19, #20]
  432ff0:	cmp	x23, #0x0
  432ff4:	csel	x23, x23, xzr, ge  // ge = tcont
  432ff8:	sxtw	x3, w1
  432ffc:	mov	w2, w1
  433000:	str	x3, [x26, #8]
  433004:	sxtw	x2, w2
  433008:	str	x2, [x26, #24]
  43300c:	add	w0, w1, #0x3
  433010:	cmp	w0, w23
  433014:	b.cc	43349c <argp_failure@@Base+0x1154>  // b.lo, b.ul, b.last
  433018:	cmp	w1, w23
  43301c:	b.hi	43306c <argp_failure@@Base+0xd24>  // b.pmore
  433020:	ldp	x0, x2, [x26, #56]
  433024:	add	x1, x0, #0x3
  433028:	cmp	x2, x1
  43302c:	b.cs	433044 <argp_failure@@Base+0xcfc>  // b.hs, b.nlast
  433030:	mov	x0, x26
  433034:	mov	x1, #0x3                   	// #3
  433038:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  43303c:	cbz	w0, 433074 <argp_failure@@Base+0xd2c>
  433040:	ldr	x0, [x26, #56]
  433044:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  433048:	add	x1, x1, #0x138
  43304c:	ldrh	w2, [x1]
  433050:	ldrb	w1, [x1, #2]
  433054:	strh	w2, [x0]
  433058:	strb	w1, [x0, #2]
  43305c:	ldr	x0, [x26, #56]
  433060:	add	x0, x0, #0x3
  433064:	str	x0, [x26, #56]
  433068:	b	433074 <argp_failure@@Base+0xd2c>
  43306c:	mov	x0, x26
  433070:	bl	431540 <wcrtomb@plt+0x2c920>
  433074:	mov	x0, x24
  433078:	bl	403ff0 <strlen@plt>
  43307c:	mov	x23, x0
  433080:	cbz	x0, 4330c0 <argp_failure@@Base+0xd78>
  433084:	ldp	x0, x2, [x26, #56]
  433088:	add	x1, x0, x23
  43308c:	cmp	x2, x1
  433090:	b.cs	4330a8 <argp_failure@@Base+0xd60>  // b.hs, b.nlast
  433094:	mov	x1, x23
  433098:	mov	x0, x26
  43309c:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4330a0:	cbz	w0, 4330c0 <argp_failure@@Base+0xd78>
  4330a4:	ldr	x0, [x26, #56]
  4330a8:	mov	x2, x23
  4330ac:	mov	x1, x24
  4330b0:	bl	403f70 <memcpy@plt>
  4330b4:	ldr	x0, [x26, #56]
  4330b8:	add	x0, x0, x23
  4330bc:	str	x0, [x26, #56]
  4330c0:	cmp	x24, x28
  4330c4:	b.eq	4330d0 <argp_failure@@Base+0xd88>  // b.none
  4330c8:	mov	x0, x24
  4330cc:	bl	4047b0 <free@plt>
  4330d0:	ldp	x1, x0, [x26, #48]
  4330d4:	ldr	x2, [x26, #32]
  4330d8:	sub	x1, x0, x1
  4330dc:	cmp	x1, x2
  4330e0:	b.hi	43339c <argp_failure@@Base+0x1054>  // b.pmore
  4330e4:	ldr	x1, [x26, #64]
  4330e8:	str	xzr, [x26, #8]
  4330ec:	cmp	x1, x0
  4330f0:	b.hi	433108 <argp_failure@@Base+0xdc0>  // b.pmore
  4330f4:	mov	x0, x26
  4330f8:	mov	x1, #0x1                   	// #1
  4330fc:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  433100:	cbz	w0, 433118 <argp_failure@@Base+0xdd0>
  433104:	ldr	x0, [x26, #56]
  433108:	add	x1, x0, #0x1
  43310c:	str	x1, [x26, #56]
  433110:	mov	w1, #0xa                   	// #10
  433114:	strb	w1, [x0]
  433118:	str	x25, [x29, #184]
  43311c:	ldp	x2, x0, [x26, #48]
  433120:	ldr	x1, [x26, #32]
  433124:	ldrsw	x23, [x29, #144]
  433128:	sub	x0, x0, x2
  43312c:	cmp	x0, x1
  433130:	b.ls	4328d8 <argp_failure@@Base+0x590>  // b.plast
  433134:	mov	x0, x26
  433138:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  43313c:	ldp	x2, x0, [x26, #48]
  433140:	str	x23, [x26, #8]
  433144:	ldr	x1, [x26, #32]
  433148:	sub	x0, x0, x2
  43314c:	cmp	x0, x1
  433150:	b.ls	4328dc <argp_failure@@Base+0x594>  // b.plast
  433154:	mov	x0, x26
  433158:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  43315c:	b	4328dc <argp_failure@@Base+0x594>
  433160:	cmp	w25, #0x2d
  433164:	and	w1, w1, #0x8
  433168:	mov	w2, #0x5f                  	// #95
  43316c:	ccmp	w25, w2, #0x4, ne  // ne = any
  433170:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  433174:	b.eq	433638 <argp_failure@@Base+0x12f0>  // b.none
  433178:	mov	x24, x26
  43317c:	mov	w4, #0x2d                  	// #45
  433180:	ldrb	w1, [x24, #1]!
  433184:	cmp	w1, #0x5f
  433188:	ubfiz	x2, x1, #1, #8
  43318c:	ccmp	w1, w4, #0x4, ne  // ne = any
  433190:	ldrh	w2, [x0, x2]
  433194:	and	w3, w2, #0x8
  433198:	ccmp	w3, #0x0, #0x0, ne  // ne = any
  43319c:	b.ne	433180 <argp_failure@@Base+0xe38>  // b.any
  4331a0:	sub	x23, x24, x26
  4331a4:	tbz	w2, #13, 4331b8 <argp_failure@@Base+0xe70>
  4331a8:	ldrb	w1, [x24, #1]!
  4331ac:	ubfiz	x2, x1, #1, #8
  4331b0:	ldrh	w2, [x0, x2]
  4331b4:	tbnz	w2, #13, 4331a8 <argp_failure@@Base+0xe60>
  4331b8:	cmp	w1, #0x2c
  4331bc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4331c0:	b.eq	43333c <argp_failure@@Base+0xff4>  // b.none
  4331c4:	cmp	w1, #0x3d
  4331c8:	b.eq	4335bc <argp_failure@@Base+0x1274>  // b.none
  4331cc:	ldrb	w1, [x24]
  4331d0:	ldrh	w1, [x0, x1, lsl #1]
  4331d4:	str	wzr, [x29, #144]
  4331d8:	str	wzr, [x29, #152]
  4331dc:	tbnz	w1, #11, 4335e4 <argp_failure@@Base+0x129c>
  4331e0:	ldr	x0, [x29, #160]
  4331e4:	add	x27, x0, #0x20
  4331e8:	add	x25, x0, #0xb0
  4331ec:	b	4331fc <argp_failure@@Base+0xeb4>
  4331f0:	add	x27, x27, #0x10
  4331f4:	cmp	x27, x25
  4331f8:	b.eq	433410 <argp_failure@@Base+0x10c8>  // b.none
  4331fc:	mov	x0, x27
  433200:	bl	403ff0 <strlen@plt>
  433204:	cmp	x0, x23
  433208:	b.ne	4331f0 <argp_failure@@Base+0xea8>  // b.any
  43320c:	mov	x2, x23
  433210:	mov	x1, x27
  433214:	mov	x0, x26
  433218:	bl	4043c0 <strncmp@plt>
  43321c:	cbnz	w0, 4331f0 <argp_failure@@Base+0xea8>
  433220:	ldr	w0, [x29, #152]
  433224:	cbz	w0, 4333f0 <argp_failure@@Base+0x10a8>
  433228:	ldrb	w0, [x27, #14]
  43322c:	cbnz	w0, 4333f0 <argp_failure@@Base+0x10a8>
  433230:	mov	x0, #0x0                   	// #0
  433234:	cbz	x20, 433240 <argp_failure@@Base+0xef8>
  433238:	ldr	x0, [x20]
  43323c:	ldr	x0, [x0, #48]
  433240:	mov	w2, #0x5                   	// #5
  433244:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x18e10>
  433248:	add	x1, x1, #0xff0
  43324c:	bl	4049c0 <dcgettext@plt>
  433250:	mov	x3, x0
  433254:	mov	x5, x26
  433258:	mov	w4, w23
  43325c:	mov	x0, x20
  433260:	mov	w2, #0x0                   	// #0
  433264:	mov	w1, #0x0                   	// #0
  433268:	bl	432348 <argp_failure@@Base>
  43326c:	b	433400 <argp_failure@@Base+0x10b8>
  433270:	mov	x0, x26
  433274:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  433278:	ldp	x0, x2, [x26, #48]
  43327c:	ldr	x3, [x26, #32]
  433280:	sub	x2, x2, x0
  433284:	b	432670 <argp_failure@@Base+0x328>
  433288:	mov	x0, x26
  43328c:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  433290:	b	432884 <argp_failure@@Base+0x53c>
  433294:	ldr	w0, [x19, #8]
  433298:	add	x1, x29, #0xc8
  43329c:	bl	431c70 <wcrtomb@plt+0x2d050>
  4332a0:	ldp	x0, x1, [x26, #56]
  4332a4:	cmp	x0, x1
  4332a8:	b.cc	4332c0 <argp_failure@@Base+0xf78>  // b.lo, b.ul, b.last
  4332ac:	mov	x0, x26
  4332b0:	mov	x1, #0x1                   	// #1
  4332b4:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4332b8:	cbz	w0, 4332d0 <argp_failure@@Base+0xf88>
  4332bc:	ldr	x0, [x26, #56]
  4332c0:	add	x1, x0, #0x1
  4332c4:	str	x1, [x26, #56]
  4332c8:	mov	w1, #0x2d                  	// #45
  4332cc:	strb	w1, [x0]
  4332d0:	ldp	x0, x1, [x26, #56]
  4332d4:	ldr	x2, [x29, #168]
  4332d8:	cmp	x0, x1
  4332dc:	ldrb	w2, [x2]
  4332e0:	b.cc	433300 <argp_failure@@Base+0xfb8>  // b.lo, b.ul, b.last
  4332e4:	mov	x0, x26
  4332e8:	mov	x1, #0x1                   	// #1
  4332ec:	str	w2, [x29, #160]
  4332f0:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4332f4:	cbz	w0, 43330c <argp_failure@@Base+0xfc4>
  4332f8:	ldr	w2, [x29, #160]
  4332fc:	ldr	x0, [x26, #56]
  433300:	add	x1, x0, #0x1
  433304:	str	x1, [x26, #56]
  433308:	strb	w2, [x0]
  43330c:	ldr	w1, [x29, #132]
  433310:	ldr	x0, [x23, #16]
  433314:	cbz	w1, 433378 <argp_failure@@Base+0x1030>
  433318:	ldr	w1, [x19]
  43331c:	cbnz	w1, 433378 <argp_failure@@Base+0x1030>
  433320:	cbz	x0, 432e98 <argp_failure@@Base+0xb50>
  433324:	mov	w0, #0x1                   	// #1
  433328:	str	w0, [x29, #196]
  43332c:	b	432e98 <argp_failure@@Base+0xb50>
  433330:	mov	w0, #0x1                   	// #1
  433334:	str	w0, [x29, #132]
  433338:	b	4326e4 <argp_failure@@Base+0x39c>
  43333c:	mov	w0, #0x1                   	// #1
  433340:	str	w0, [x29, #144]
  433344:	str	w0, [x29, #152]
  433348:	cmp	w25, #0x6e
  43334c:	b.ne	4331e0 <argp_failure@@Base+0xe98>  // b.any
  433350:	ldrb	w0, [x26, #1]
  433354:	cmp	w0, #0x6f
  433358:	b.ne	4331e0 <argp_failure@@Base+0xe98>  // b.any
  43335c:	ldrb	w0, [x26, #2]
  433360:	cmp	w0, #0x2d
  433364:	b.ne	4331e0 <argp_failure@@Base+0xe98>  // b.any
  433368:	add	x26, x26, #0x3
  43336c:	sub	x23, x23, #0x3
  433370:	str	wzr, [x29, #144]
  433374:	b	4331e0 <argp_failure@@Base+0xe98>
  433378:	mov	x4, #0x0                   	// #0
  43337c:	cbz	x20, 433388 <argp_failure@@Base+0x1040>
  433380:	ldr	x1, [x20]
  433384:	ldr	x4, [x1, #48]
  433388:	mov	x5, x26
  43338c:	ldp	x3, x2, [x29, #96]
  433390:	add	x1, x23, #0x18
  433394:	bl	430700 <wcrtomb@plt+0x2bae0>
  433398:	b	432e98 <argp_failure@@Base+0xb50>
  43339c:	mov	x0, x26
  4333a0:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  4333a4:	ldr	x0, [x26, #56]
  4333a8:	b	4330e4 <argp_failure@@Base+0xd9c>
  4333ac:	mov	x0, x26
  4333b0:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  4333b4:	b	432eb4 <argp_failure@@Base+0xb6c>
  4333b8:	mov	x0, x26
  4333bc:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  4333c0:	b	432798 <argp_failure@@Base+0x450>
  4333c4:	ldr	x2, [x25, #40]
  4333c8:	cbz	x2, 4330d0 <argp_failure@@Base+0xd88>
  4333cc:	ldr	x0, [x2, #40]
  4333d0:	cbnz	x0, 432fb4 <argp_failure@@Base+0xc6c>
  4333d4:	b	4330d0 <argp_failure@@Base+0xd88>
  4333d8:	ldr	x0, [x23, #32]
  4333dc:	add	x2, x29, #0xc8
  4333e0:	ldr	x1, [x25, #40]
  4333e4:	bl	431a38 <wcrtomb@plt+0x2ce18>
  4333e8:	str	x25, [x29, #184]
  4333ec:	b	43311c <argp_failure@@Base+0xdd4>
  4333f0:	ldrb	w0, [x27, #15]
  4333f4:	add	x1, x29, #0xc8
  4333f8:	ldr	w2, [x29, #144]
  4333fc:	str	w2, [x1, x0]
  433400:	ldr	x0, [x29, #160]
  433404:	add	x0, x0, #0xb0
  433408:	cmp	x27, x0
  43340c:	b.ne	433448 <argp_failure@@Base+0x1100>  // b.any
  433410:	mov	x0, #0x0                   	// #0
  433414:	cbz	x20, 433420 <argp_failure@@Base+0x10d8>
  433418:	ldr	x0, [x20]
  43341c:	ldr	x0, [x0, #48]
  433420:	mov	w2, #0x5                   	// #5
  433424:	ldr	x1, [x29, #136]
  433428:	bl	4049c0 <dcgettext@plt>
  43342c:	mov	x3, x0
  433430:	mov	x5, x26
  433434:	mov	w4, w23
  433438:	mov	x0, x20
  43343c:	mov	w2, #0x0                   	// #0
  433440:	mov	w1, #0x0                   	// #0
  433444:	bl	432348 <argp_failure@@Base>
  433448:	ldrb	w25, [x24]
  43344c:	mov	x26, x24
  433450:	cmp	w25, #0x2c
  433454:	b.eq	433460 <argp_failure@@Base+0x1118>  // b.none
  433458:	cbnz	w25, 432a38 <argp_failure@@Base+0x6f0>
  43345c:	b	432a5c <argp_failure@@Base+0x714>
  433460:	ldrb	w25, [x24, #1]
  433464:	add	x26, x24, #0x1
  433468:	cbnz	w25, 432a38 <argp_failure@@Base+0x6f0>
  43346c:	b	432a5c <argp_failure@@Base+0x714>
  433470:	ldr	x0, [x29, #232]
  433474:	str	x0, [x19, #32]
  433478:	ldp	x4, x5, [x29, #200]
  43347c:	mov	w0, #0x1                   	// #1
  433480:	ldp	x2, x3, [x29, #216]
  433484:	stp	x4, x5, [x19]
  433488:	stp	x2, x3, [x19, #16]
  43348c:	str	w0, [x19, #36]
  433490:	b	4325cc <argp_failure@@Base+0x284>
  433494:	mov	x28, x0
  433498:	b	432fc8 <argp_failure@@Base+0xc80>
  43349c:	ldp	x0, x1, [x26, #56]
  4334a0:	cmp	x0, x1
  4334a4:	b.cs	433574 <argp_failure@@Base+0x122c>  // b.hs, b.nlast
  4334a8:	add	x1, x0, #0x1
  4334ac:	str	x1, [x26, #56]
  4334b0:	mov	w1, #0xa                   	// #10
  4334b4:	strb	w1, [x0]
  4334b8:	b	433074 <argp_failure@@Base+0xd2c>
  4334bc:	mov	x0, x26
  4334c0:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  4334c4:	ldp	x2, x23, [x26, #32]
  4334c8:	ldp	x3, x0, [x26, #48]
  4334cc:	ldr	w1, [x19, #20]
  4334d0:	cmp	x23, #0x0
  4334d4:	csel	x23, x23, xzr, ge  // ge = tcont
  4334d8:	sub	x0, x0, x3
  4334dc:	sxtw	x3, w1
  4334e0:	cmp	x0, x2
  4334e4:	b.ls	432ffc <argp_failure@@Base+0xcb4>  // b.plast
  4334e8:	mov	x0, x26
  4334ec:	str	x3, [x29, #168]
  4334f0:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  4334f4:	ldp	x2, x0, [x26, #48]
  4334f8:	ldr	x1, [x26, #32]
  4334fc:	ldr	x3, [x29, #168]
  433500:	str	x3, [x26, #8]
  433504:	sub	x0, x0, x2
  433508:	ldr	w2, [x19, #20]
  43350c:	cmp	x0, x1
  433510:	b.ls	433738 <argp_failure@@Base+0x13f0>  // b.plast
  433514:	mov	x0, x26
  433518:	str	w2, [x29, #168]
  43351c:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  433520:	ldr	w1, [x19, #20]
  433524:	ldr	w2, [x29, #168]
  433528:	b	433004 <argp_failure@@Base+0xcbc>
  43352c:	ldr	x0, [x29, #120]
  433530:	bl	404330 <funlockfile@plt>
  433534:	b	4329c4 <argp_failure@@Base+0x67c>
  433538:	mov	x0, #0x0                   	// #0
  43353c:	cbz	x20, 433548 <argp_failure@@Base+0x1200>
  433540:	ldr	x0, [x20]
  433544:	ldr	x0, [x0, #48]
  433548:	mov	w2, #0x5                   	// #5
  43354c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  433550:	add	x1, x1, #0x48
  433554:	bl	4049c0 <dcgettext@plt>
  433558:	mov	x3, x0
  43355c:	mov	x4, x26
  433560:	mov	x0, x20
  433564:	mov	w2, #0x0                   	// #0
  433568:	mov	w1, #0x0                   	// #0
  43356c:	bl	432348 <argp_failure@@Base>
  433570:	b	432a5c <argp_failure@@Base+0x714>
  433574:	mov	x0, x26
  433578:	mov	x1, #0x1                   	// #1
  43357c:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  433580:	cbz	w0, 433074 <argp_failure@@Base+0xd2c>
  433584:	ldr	x0, [x26, #56]
  433588:	b	4334a8 <argp_failure@@Base+0x1160>
  43358c:	mov	x0, x26
  433590:	mov	x1, #0x1                   	// #1
  433594:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  433598:	cbz	w0, 432984 <argp_failure@@Base+0x63c>
  43359c:	ldr	x0, [x26, #56]
  4335a0:	b	432e80 <argp_failure@@Base+0xb38>
  4335a4:	mov	x0, x26
  4335a8:	mov	x1, #0x1                   	// #1
  4335ac:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4335b0:	cbz	w0, 432b34 <argp_failure@@Base+0x7ec>
  4335b4:	ldr	x0, [x26, #56]
  4335b8:	b	432b24 <argp_failure@@Base+0x7dc>
  4335bc:	ldrb	w1, [x24, #1]
  4335c0:	add	x6, x24, #0x1
  4335c4:	ldrh	w1, [x0, x1, lsl #1]
  4335c8:	tbz	w1, #13, 4335dc <argp_failure@@Base+0x1294>
  4335cc:	nop
  4335d0:	ldrb	w1, [x6, #1]!
  4335d4:	ldrh	w1, [x0, x1, lsl #1]
  4335d8:	tbnz	w1, #13, 4335d0 <argp_failure@@Base+0x1288>
  4335dc:	mov	x24, x6
  4335e0:	b	4331d4 <argp_failure@@Base+0xe8c>
  4335e4:	mov	w2, #0xa                   	// #10
  4335e8:	mov	x1, #0x0                   	// #0
  4335ec:	mov	x0, x24
  4335f0:	bl	404770 <strtol@plt>
  4335f4:	ldr	x1, [x29, #168]
  4335f8:	str	w0, [x29, #144]
  4335fc:	ldrb	w2, [x24]
  433600:	ldr	x1, [x1]
  433604:	ldrh	w0, [x1, x2, lsl #1]
  433608:	tbz	w0, #11, 433620 <argp_failure@@Base+0x12d8>
  43360c:	nop
  433610:	ldrb	w0, [x24, #1]!
  433614:	ldrh	w0, [x1, x0, lsl #1]
  433618:	tbnz	w0, #11, 433610 <argp_failure@@Base+0x12c8>
  43361c:	nop
  433620:	tbz	w0, #13, 433630 <argp_failure@@Base+0x12e8>
  433624:	ldrb	w0, [x24, #1]!
  433628:	ldrh	w0, [x1, x0, lsl #1]
  43362c:	b	433620 <argp_failure@@Base+0x12d8>
  433630:	str	wzr, [x29, #152]
  433634:	b	4331e0 <argp_failure@@Base+0xe98>
  433638:	mov	w1, w25
  43363c:	mov	x24, x26
  433640:	mov	x23, #0x0                   	// #0
  433644:	b	4331b8 <argp_failure@@Base+0xe70>
  433648:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43364c:	mov	w2, #0x5                   	// #5
  433650:	add	x1, x1, #0x140
  433654:	mov	x0, #0x0                   	// #0
  433658:	bl	4049c0 <dcgettext@plt>
  43365c:	mov	x19, x0
  433660:	mov	x24, x0
  433664:	b	43294c <argp_failure@@Base+0x604>
  433668:	ldp	x0, x1, [x26, #56]
  43366c:	cmp	x0, x1
  433670:	b.cc	433688 <argp_failure@@Base+0x1340>  // b.lo, b.ul, b.last
  433674:	mov	x0, x26
  433678:	mov	x1, #0x1                   	// #1
  43367c:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  433680:	cbz	w0, 433698 <argp_failure@@Base+0x1350>
  433684:	ldr	x0, [x26, #56]
  433688:	add	x1, x0, #0x1
  43368c:	str	x1, [x26, #56]
  433690:	mov	w1, #0xa                   	// #10
  433694:	strb	w1, [x0]
  433698:	mov	x0, x19
  43369c:	bl	403ff0 <strlen@plt>
  4336a0:	mov	x23, x0
  4336a4:	ldp	x0, x1, [x26, #56]
  4336a8:	cbnz	x23, 4336f4 <argp_failure@@Base+0x13ac>
  4336ac:	cmp	x0, x1
  4336b0:	b.cc	4336c8 <argp_failure@@Base+0x1380>  // b.lo, b.ul, b.last
  4336b4:	mov	x0, x26
  4336b8:	mov	x1, #0x1                   	// #1
  4336bc:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  4336c0:	cbz	w0, 432958 <argp_failure@@Base+0x610>
  4336c4:	ldr	x0, [x26, #56]
  4336c8:	add	x1, x0, #0x1
  4336cc:	str	x1, [x26, #56]
  4336d0:	mov	w1, #0xa                   	// #10
  4336d4:	strb	w1, [x0]
  4336d8:	b	432958 <argp_failure@@Base+0x610>
  4336dc:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4336e0:	add	x0, x24, #0x1d0
  4336e4:	str	x0, [x29, #160]
  4336e8:	b	432a5c <argp_failure@@Base+0x714>
  4336ec:	mov	x19, x0
  4336f0:	b	43294c <argp_failure@@Base+0x604>
  4336f4:	add	x2, x0, x23
  4336f8:	cmp	x1, x2
  4336fc:	b.cs	43371c <argp_failure@@Base+0x13d4>  // b.hs, b.nlast
  433700:	mov	x1, x23
  433704:	mov	x0, x26
  433708:	bl	44fb50 <_obstack_memory_used@@Base+0xd960>
  43370c:	cbnz	w0, 433718 <argp_failure@@Base+0x13d0>
  433710:	ldp	x0, x1, [x26, #56]
  433714:	b	4336ac <argp_failure@@Base+0x1364>
  433718:	ldr	x0, [x26, #56]
  43371c:	mov	x1, x19
  433720:	mov	x2, x23
  433724:	bl	403f70 <memcpy@plt>
  433728:	ldp	x0, x1, [x26, #56]
  43372c:	add	x0, x0, x23
  433730:	str	x0, [x26, #56]
  433734:	b	4336ac <argp_failure@@Base+0x1364>
  433738:	mov	w1, w2
  43373c:	b	433004 <argp_failure@@Base+0xcbc>

0000000000433740 <argp_help@@Base>:
  433740:	mov	w5, w2
  433744:	mov	x4, x3
  433748:	mov	x2, x1
  43374c:	mov	w3, w5
  433750:	mov	x1, #0x0                   	// #0
  433754:	b	432580 <argp_failure@@Base+0x238>

0000000000433758 <argp_state_help@@Base>:
  433758:	stp	x29, x30, [sp, #-32]!
  43375c:	mov	x29, sp
  433760:	stp	x19, x20, [sp, #16]
  433764:	mov	w20, w2
  433768:	cbz	x0, 4337c8 <argp_state_help@@Base+0x70>
  43376c:	ldr	w2, [x0, #28]
  433770:	mov	x19, x0
  433774:	tst	x2, #0x2
  433778:	ccmp	x1, #0x0, #0x4, eq  // eq = none
  43377c:	b.ne	43378c <argp_state_help@@Base+0x34>  // b.any
  433780:	ldp	x19, x20, [sp, #16]
  433784:	ldp	x29, x30, [sp], #32
  433788:	ret
  43378c:	tst	x2, #0x40
  433790:	orr	w2, w20, #0x80
  433794:	csel	w20, w2, w20, ne  // ne = any
  433798:	mov	x2, x1
  43379c:	mov	x1, x0
  4337a0:	mov	w3, w20
  4337a4:	ldr	x0, [x0]
  4337a8:	ldr	x4, [x19, #64]
  4337ac:	bl	432580 <argp_failure@@Base+0x238>
  4337b0:	ldr	w0, [x19, #28]
  4337b4:	tbnz	w0, #5, 433780 <argp_state_help@@Base+0x28>
  4337b8:	tbnz	w20, #8, 4337e8 <argp_state_help@@Base+0x90>
  4337bc:	tbz	w20, #9, 433780 <argp_state_help@@Base+0x28>
  4337c0:	mov	w0, #0x0                   	// #0
  4337c4:	bl	404020 <exit@plt>
  4337c8:	cbz	x1, 433780 <argp_state_help@@Base+0x28>
  4337cc:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4337d0:	mov	x2, x1
  4337d4:	mov	w3, w20
  4337d8:	mov	x1, #0x0                   	// #0
  4337dc:	ldr	x4, [x4, #1128]
  4337e0:	bl	432580 <argp_failure@@Base+0x238>
  4337e4:	b	4337b8 <argp_state_help@@Base+0x60>
  4337e8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4337ec:	ldr	w0, [x0, #1072]
  4337f0:	bl	404020 <exit@plt>
  4337f4:	nop

00000000004337f8 <argp_error@@Base>:
  4337f8:	stp	x29, x30, [sp, #-320]!
  4337fc:	mov	x29, sp
  433800:	stp	x19, x20, [sp, #16]
  433804:	mov	x20, x0
  433808:	str	x21, [sp, #32]
  43380c:	mov	x21, x1
  433810:	str	q0, [sp, #144]
  433814:	str	q1, [sp, #160]
  433818:	str	q2, [sp, #176]
  43381c:	str	q3, [sp, #192]
  433820:	str	q4, [sp, #208]
  433824:	str	q5, [sp, #224]
  433828:	str	q6, [sp, #240]
  43382c:	str	q7, [sp, #256]
  433830:	stp	x2, x3, [sp, #272]
  433834:	stp	x4, x5, [sp, #288]
  433838:	stp	x6, x7, [sp, #304]
  43383c:	cbz	x0, 433928 <argp_error@@Base+0x130>
  433840:	ldr	w0, [x0, #28]
  433844:	tbnz	w0, #1, 433918 <argp_error@@Base+0x120>
  433848:	ldr	x19, [x20, #72]
  43384c:	cbz	x19, 433918 <argp_error@@Base+0x120>
  433850:	mov	x0, x19
  433854:	bl	404090 <flockfile@plt>
  433858:	mov	w0, #0xffffff80            	// #-128
  43385c:	mov	w1, #0xffffffd0            	// #-48
  433860:	stp	w1, w0, [sp, #104]
  433864:	add	x2, sp, #0x110
  433868:	ldr	x0, [x20, #64]
  43386c:	add	x3, sp, #0x140
  433870:	stp	x3, x3, [sp, #80]
  433874:	str	x2, [sp, #96]
  433878:	mov	x1, x19
  43387c:	bl	4049e0 <fputs_unlocked@plt>
  433880:	ldp	x0, x1, [x19, #40]
  433884:	cmp	x0, x1
  433888:	b.cs	433974 <argp_error@@Base+0x17c>  // b.hs, b.nlast
  43388c:	add	x1, x0, #0x1
  433890:	str	x1, [x19, #40]
  433894:	mov	w1, #0x3a                  	// #58
  433898:	strb	w1, [x0]
  43389c:	ldp	x0, x1, [x19, #40]
  4338a0:	cmp	x0, x1
  4338a4:	b.cs	433984 <argp_error@@Base+0x18c>  // b.hs, b.nlast
  4338a8:	add	x1, x0, #0x1
  4338ac:	str	x1, [x19, #40]
  4338b0:	mov	w1, #0x20                  	// #32
  4338b4:	strb	w1, [x0]
  4338b8:	ldp	x6, x7, [sp, #80]
  4338bc:	mov	w1, #0x1                   	// #1
  4338c0:	ldp	x4, x5, [sp, #96]
  4338c4:	mov	x2, x21
  4338c8:	add	x3, sp, #0x30
  4338cc:	mov	x0, x19
  4338d0:	stp	x6, x7, [sp, #48]
  4338d4:	stp	x4, x5, [sp, #64]
  4338d8:	stp	x6, x7, [sp, #112]
  4338dc:	stp	x4, x5, [sp, #128]
  4338e0:	bl	4044a0 <__vfprintf_chk@plt>
  4338e4:	ldp	x0, x1, [x19, #40]
  4338e8:	cmp	x0, x1
  4338ec:	b.cs	433964 <argp_error@@Base+0x16c>  // b.hs, b.nlast
  4338f0:	add	x1, x0, #0x1
  4338f4:	str	x1, [x19, #40]
  4338f8:	mov	w1, #0xa                   	// #10
  4338fc:	strb	w1, [x0]
  433900:	mov	x1, x19
  433904:	mov	w2, #0x104                 	// #260
  433908:	mov	x0, x20
  43390c:	bl	433758 <argp_state_help@@Base>
  433910:	mov	x0, x19
  433914:	bl	404330 <funlockfile@plt>
  433918:	ldp	x19, x20, [sp, #16]
  43391c:	ldr	x21, [sp, #32]
  433920:	ldp	x29, x30, [sp], #320
  433924:	ret
  433928:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43392c:	ldr	x19, [x0, #1096]
  433930:	cbz	x19, 433918 <argp_error@@Base+0x120>
  433934:	mov	x0, x19
  433938:	bl	404090 <flockfile@plt>
  43393c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  433940:	add	x3, sp, #0x110
  433944:	add	x4, sp, #0x140
  433948:	mov	w2, #0xffffffd0            	// #-48
  43394c:	mov	w1, #0xffffff80            	// #-128
  433950:	stp	x4, x4, [sp, #80]
  433954:	ldr	x0, [x0, #1128]
  433958:	str	x3, [sp, #96]
  43395c:	stp	w2, w1, [sp, #104]
  433960:	b	433878 <argp_error@@Base+0x80>
  433964:	mov	x0, x19
  433968:	mov	w1, #0xa                   	// #10
  43396c:	bl	404680 <__overflow@plt>
  433970:	b	433900 <argp_error@@Base+0x108>
  433974:	mov	x0, x19
  433978:	mov	w1, #0x3a                  	// #58
  43397c:	bl	404680 <__overflow@plt>
  433980:	b	43389c <argp_error@@Base+0xa4>
  433984:	mov	x0, x19
  433988:	mov	w1, #0x20                  	// #32
  43398c:	bl	404680 <__overflow@plt>
  433990:	b	4338b8 <argp_error@@Base+0xc0>
  433994:	nop
  433998:	stp	x29, x30, [sp, #-32]!
  43399c:	mov	x29, sp
  4339a0:	ldr	x2, [x0]
  4339a4:	stp	x19, x20, [sp, #16]
  4339a8:	mov	x19, x1
  4339ac:	ldr	x20, [x0, #32]
  4339b0:	cbz	x2, 433a3c <argp_error@@Base+0x244>
  4339b4:	ldr	x1, [x1, #16]
  4339b8:	mov	w0, #0x0                   	// #0
  4339bc:	add	x1, x1, #0x1
  4339c0:	str	x1, [x19, #16]
  4339c4:	nop
  4339c8:	ldr	w3, [x2, #8]
  4339cc:	add	x2, x2, #0x30
  4339d0:	cbnz	w3, 4339dc <argp_error@@Base+0x1e4>
  4339d4:	ldur	x3, [x2, #-48]
  4339d8:	cbz	x3, 4339e4 <argp_error@@Base+0x1ec>
  4339dc:	add	w0, w0, #0x1
  4339e0:	b	4339c8 <argp_error@@Base+0x1d0>
  4339e4:	ldur	x1, [x2, #-16]
  4339e8:	cbnz	x1, 4339dc <argp_error@@Base+0x1e4>
  4339ec:	ldur	w1, [x2, #-8]
  4339f0:	cbnz	w1, 4339dc <argp_error@@Base+0x1e4>
  4339f4:	ldp	x3, x2, [x19]
  4339f8:	add	w1, w0, w0, lsl #1
  4339fc:	add	x0, x2, w0, sxtw
  433a00:	add	x1, x3, w1, sxtw
  433a04:	stp	x1, x0, [x19]
  433a08:	cbz	x20, 433a30 <argp_error@@Base+0x238>
  433a0c:	ldr	x0, [x20]
  433a10:	cbz	x0, 433a30 <argp_error@@Base+0x238>
  433a14:	mov	x1, x19
  433a18:	bl	433998 <argp_error@@Base+0x1a0>
  433a1c:	ldr	x1, [x19, #24]
  433a20:	ldr	x0, [x20, #32]!
  433a24:	add	x1, x1, #0x1
  433a28:	str	x1, [x19, #24]
  433a2c:	cbnz	x0, 433a14 <argp_error@@Base+0x21c>
  433a30:	ldp	x19, x20, [sp, #16]
  433a34:	ldp	x29, x30, [sp], #32
  433a38:	ret
  433a3c:	ldr	x0, [x0, #8]
  433a40:	cbz	x0, 433a08 <argp_error@@Base+0x210>
  433a44:	ldr	x0, [x1, #16]
  433a48:	add	x0, x0, #0x1
  433a4c:	str	x0, [x1, #16]
  433a50:	b	433a08 <argp_error@@Base+0x210>
  433a54:	nop
  433a58:	cmp	w0, #0x56
  433a5c:	b.eq	433a68 <argp_error@@Base+0x270>  // b.none
  433a60:	mov	w0, #0x7                   	// #7
  433a64:	ret
  433a68:	stp	x29, x30, [sp, #-32]!
  433a6c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  433a70:	mov	x29, sp
  433a74:	str	x19, [sp, #16]
  433a78:	mov	x19, x2
  433a7c:	ldr	x2, [x0, #3440]
  433a80:	cbz	x2, 433aac <argp_error@@Base+0x2b4>
  433a84:	ldr	x0, [x19, #80]
  433a88:	mov	x1, x19
  433a8c:	blr	x2
  433a90:	ldr	w1, [x19, #28]
  433a94:	mov	w0, #0x0                   	// #0
  433a98:	tbz	w1, #5, 433aa8 <argp_error@@Base+0x2b0>
  433a9c:	ldr	x19, [sp, #16]
  433aa0:	ldp	x29, x30, [sp], #32
  433aa4:	ret
  433aa8:	bl	404020 <exit@plt>
  433aac:	adrp	x0, 483000 <argp_program_version_hook@@Base+0x290>
  433ab0:	ldr	x3, [x0, #976]
  433ab4:	cbz	x3, 433ad0 <argp_error@@Base+0x2d8>
  433ab8:	ldr	x0, [x19, #80]
  433abc:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x1be10>
  433ac0:	mov	w1, #0x1                   	// #1
  433ac4:	add	x2, x2, #0xe18
  433ac8:	bl	404700 <__fprintf_chk@plt>
  433acc:	b	433a90 <argp_error@@Base+0x298>
  433ad0:	ldr	x0, [x19]
  433ad4:	mov	w2, #0x5                   	// #5
  433ad8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  433adc:	add	x1, x1, #0x280
  433ae0:	ldr	x0, [x0, #48]
  433ae4:	bl	4049c0 <dcgettext@plt>
  433ae8:	mov	x2, x0
  433aec:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  433af0:	mov	x0, x19
  433af4:	add	x1, x1, #0xb68
  433af8:	bl	4337f8 <argp_error@@Base>
  433afc:	b	433a90 <argp_error@@Base+0x298>
  433b00:	stp	x29, x30, [sp, #-32]!
  433b04:	cmn	w0, #0x2
  433b08:	mov	x29, sp
  433b0c:	stp	x19, x20, [sp, #16]
  433b10:	mov	x20, x1
  433b14:	mov	x19, x2
  433b18:	b.eq	433b80 <argp_error@@Base+0x388>  // b.none
  433b1c:	cmn	w0, #0x1
  433b20:	b.ge	433b54 <argp_error@@Base+0x35c>  // b.tcont
  433b24:	cmn	w0, #0x4
  433b28:	b.eq	433bbc <argp_error@@Base+0x3c4>  // b.none
  433b2c:	cmn	w0, #0x3
  433b30:	b.ne	433c2c <argp_error@@Base+0x434>  // b.any
  433b34:	ldr	x1, [x19, #80]
  433b38:	mov	x0, x2
  433b3c:	mov	w2, #0x201                 	// #513
  433b40:	bl	433758 <argp_state_help@@Base>
  433b44:	mov	w0, #0x0                   	// #0
  433b48:	ldp	x19, x20, [sp, #16]
  433b4c:	ldp	x29, x30, [sp], #32
  433b50:	ret
  433b54:	cmp	w0, #0x3f
  433b58:	mov	w0, #0x7                   	// #7
  433b5c:	b.ne	433b48 <argp_error@@Base+0x350>  // b.any
  433b60:	ldr	x1, [x19, #80]
  433b64:	mov	x0, x2
  433b68:	mov	w2, #0x27a                 	// #634
  433b6c:	bl	433758 <argp_state_help@@Base>
  433b70:	mov	w0, #0x0                   	// #0
  433b74:	ldp	x19, x20, [sp, #16]
  433b78:	ldp	x29, x30, [sp], #32
  433b7c:	ret
  433b80:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  433b84:	mov	x0, x20
  433b88:	str	x20, [x1, #1088]
  433b8c:	bl	435560 <argp_parse@@Base+0x1678>
  433b90:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  433b94:	ldr	w1, [x19, #28]
  433b98:	str	x0, [x19, #64]
  433b9c:	str	x0, [x2, #1128]
  433ba0:	and	w1, w1, #0x3
  433ba4:	cmp	w1, #0x1
  433ba8:	b.eq	433c1c <argp_error@@Base+0x424>  // b.none
  433bac:	mov	w0, #0x0                   	// #0
  433bb0:	ldp	x19, x20, [sp, #16]
  433bb4:	ldp	x29, x30, [sp], #32
  433bb8:	ret
  433bbc:	cmp	x1, #0x0
  433bc0:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  433bc4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  433bc8:	add	x0, x0, #0x2a8
  433bcc:	csel	x0, x0, x1, eq  // eq = none
  433bd0:	mov	w2, #0xa                   	// #10
  433bd4:	mov	x1, #0x0                   	// #0
  433bd8:	bl	404770 <strtol@plt>
  433bdc:	str	w0, [x19, #3432]
  433be0:	ldr	w0, [x19, #3432]
  433be4:	sub	w1, w0, #0x1
  433be8:	str	w1, [x19, #3432]
  433bec:	cmp	w0, #0x0
  433bf0:	b.le	433bac <argp_error@@Base+0x3b4>
  433bf4:	add	x19, x19, #0xd68
  433bf8:	mov	w0, #0x1                   	// #1
  433bfc:	bl	404460 <sleep@plt>
  433c00:	ldr	w0, [x19]
  433c04:	sub	w1, w0, #0x1
  433c08:	str	w1, [x19]
  433c0c:	cmp	w0, #0x0
  433c10:	b.gt	433bf8 <argp_error@@Base+0x400>
  433c14:	mov	w0, #0x0                   	// #0
  433c18:	b	433bb0 <argp_error@@Base+0x3b8>
  433c1c:	ldr	x1, [x19, #16]
  433c20:	mov	w0, #0x0                   	// #0
  433c24:	str	x20, [x1]
  433c28:	b	433b48 <argp_error@@Base+0x350>
  433c2c:	mov	w0, #0x7                   	// #7
  433c30:	b	433b48 <argp_error@@Base+0x350>
  433c34:	nop
  433c38:	stp	x29, x30, [sp, #-128]!
  433c3c:	mov	x29, sp
  433c40:	stp	x19, x20, [sp, #16]
  433c44:	mov	x19, x4
  433c48:	ldr	x20, [x0]
  433c4c:	stp	x0, x1, [sp, #104]
  433c50:	ldr	x0, [x0, #32]
  433c54:	stp	x23, x24, [sp, #48]
  433c58:	mov	x24, x3
  433c5c:	str	x0, [sp, #96]
  433c60:	str	w2, [sp, #124]
  433c64:	cbz	x20, 433ec0 <argp_error@@Base+0x6c8>
  433c68:	ldr	x23, [x4, #8]
  433c6c:	stp	x27, x28, [sp, #80]
  433c70:	mov	x28, x20
  433c74:	stp	x21, x22, [sp, #32]
  433c78:	stp	x25, x26, [sp, #64]
  433c7c:	nop
  433c80:	ldr	w22, [x28, #8]
  433c84:	cbnz	w22, 433c90 <argp_error@@Base+0x498>
  433c88:	ldr	x0, [x28]
  433c8c:	cbz	x0, 433dd8 <argp_error@@Base+0x5e0>
  433c90:	ldr	w1, [x28, #24]
  433c94:	tbz	w1, #2, 433db8 <argp_error@@Base+0x5c0>
  433c98:	ldr	w0, [x20, #24]
  433c9c:	and	w21, w0, #0x8
  433ca0:	tbnz	w0, #3, 433db0 <argp_error@@Base+0x5b8>
  433ca4:	tbnz	w1, #3, 433d14 <argp_error@@Base+0x51c>
  433ca8:	sub	w0, w22, #0x1
  433cac:	cmp	w0, #0xfe
  433cb0:	b.hi	433d14 <argp_error@@Base+0x51c>  // b.pmore
  433cb4:	bl	404740 <__ctype_b_loc@plt>
  433cb8:	ldr	x0, [x0]
  433cbc:	ldrh	w0, [x0, w22, sxtw #1]
  433cc0:	tbz	w0, #14, 433d14 <argp_error@@Base+0x51c>
  433cc4:	add	x0, x23, #0x1
  433cc8:	str	x0, [x19, #8]
  433ccc:	strb	w22, [x23]
  433cd0:	ldr	x0, [x20, #16]
  433cd4:	cbz	x0, 433d08 <argp_error@@Base+0x510>
  433cd8:	ldr	x0, [x19, #8]
  433cdc:	add	x1, x0, #0x1
  433ce0:	str	x1, [x19, #8]
  433ce4:	mov	w1, #0x3a                  	// #58
  433ce8:	strb	w1, [x0]
  433cec:	ldr	w0, [x20, #24]
  433cf0:	tbz	w0, #0, 433d08 <argp_error@@Base+0x510>
  433cf4:	ldr	x0, [x19, #8]
  433cf8:	add	x1, x0, #0x1
  433cfc:	str	x1, [x19, #8]
  433d00:	mov	w1, #0x3a                  	// #58
  433d04:	strb	w1, [x0]
  433d08:	ldr	x0, [x19, #8]
  433d0c:	strb	wzr, [x0]
  433d10:	ldr	x23, [x19, #8]
  433d14:	ldr	x27, [x28]
  433d18:	cbz	x27, 433db0 <argp_error@@Base+0x5b8>
  433d1c:	ldr	x25, [x19]
  433d20:	ldr	x22, [x25, #16]
  433d24:	ldr	x0, [x22]
  433d28:	cbz	x0, 433d44 <argp_error@@Base+0x54c>
  433d2c:	mov	x26, x22
  433d30:	mov	x1, x27
  433d34:	bl	404710 <strcmp@plt>
  433d38:	cbz	w0, 433dc4 <argp_error@@Base+0x5cc>
  433d3c:	ldr	x0, [x26, #32]!
  433d40:	cbnz	x0, 433d30 <argp_error@@Base+0x538>
  433d44:	ldr	x3, [x19, #16]
  433d48:	ldr	x0, [x20, #16]
  433d4c:	str	x27, [x3]
  433d50:	cbz	x0, 433d60 <argp_error@@Base+0x568>
  433d54:	ldr	w21, [x20, #24]
  433d58:	and	w21, w21, #0x1
  433d5c:	add	w21, w21, #0x1
  433d60:	str	w21, [x3, #8]
  433d64:	str	xzr, [x3, #16]
  433d68:	ldr	w0, [x28, #8]
  433d6c:	cbnz	w0, 433d74 <argp_error@@Base+0x57c>
  433d70:	ldr	w0, [x20, #8]
  433d74:	and	w1, w0, #0xffffff
  433d78:	mov	x2, #0x8e39                	// #36409
  433d7c:	ldr	x0, [x25, #80]
  433d80:	movk	x2, #0x38e3, lsl #16
  433d84:	movk	x2, #0xe38e, lsl #32
  433d88:	add	x4, x3, #0x20
  433d8c:	sub	x0, x24, x0
  433d90:	movk	x2, #0x8e38, lsl #48
  433d94:	asr	x0, x0, #3
  433d98:	mul	x0, x0, x2
  433d9c:	add	w0, w0, #0x1
  433da0:	add	w0, w1, w0, lsl #24
  433da4:	str	w0, [x3, #24]
  433da8:	str	x4, [x19, #16]
  433dac:	str	xzr, [x3, #32]
  433db0:	add	x28, x28, #0x30
  433db4:	b	433c80 <argp_error@@Base+0x488>
  433db8:	mov	w0, w1
  433dbc:	mov	x20, x28
  433dc0:	b	433c9c <argp_error@@Base+0x4a4>
  433dc4:	sub	x22, x26, x22
  433dc8:	asr	x22, x22, #5
  433dcc:	tbnz	w22, #31, 433d44 <argp_error@@Base+0x54c>
  433dd0:	add	x28, x28, #0x30
  433dd4:	b	433c80 <argp_error@@Base+0x488>
  433dd8:	ldr	x0, [x28, #32]
  433ddc:	cbnz	x0, 433c90 <argp_error@@Base+0x498>
  433de0:	ldr	w0, [x28, #40]
  433de4:	cbnz	w0, 433c90 <argp_error@@Base+0x498>
  433de8:	ldr	x0, [sp, #104]
  433dec:	ldp	x21, x22, [sp, #32]
  433df0:	ldp	x25, x26, [sp, #64]
  433df4:	ldp	x27, x28, [sp, #80]
  433df8:	ldr	x0, [x0, #8]
  433dfc:	str	x0, [x24]
  433e00:	ldr	x0, [sp, #104]
  433e04:	str	x0, [x24, #8]
  433e08:	ldr	x0, [sp, #112]
  433e0c:	str	x0, [x24, #32]
  433e10:	ldr	w0, [sp, #124]
  433e14:	str	w0, [x24, #40]
  433e18:	ldr	x0, [sp, #96]
  433e1c:	str	x23, [x24, #16]
  433e20:	str	wzr, [x24, #24]
  433e24:	stp	xzr, xzr, [x24, #48]
  433e28:	str	xzr, [x24, #64]
  433e2c:	cbz	x0, 433e6c <argp_error@@Base+0x674>
  433e30:	ldr	x0, [x0]
  433e34:	cbz	x0, 433edc <argp_error@@Base+0x6e4>
  433e38:	mov	w0, #0x0                   	// #0
  433e3c:	nop
  433e40:	add	w2, w0, #0x1
  433e44:	ldr	x3, [sp, #96]
  433e48:	ubfiz	x1, x2, #5, #32
  433e4c:	mov	x0, x2
  433e50:	ldr	x1, [x3, x1]
  433e54:	cbnz	x1, 433e40 <argp_error@@Base+0x648>
  433e58:	lsl	x2, x2, #3
  433e5c:	ldr	x0, [x19, #24]
  433e60:	str	x0, [x24, #56]
  433e64:	add	x2, x0, x2
  433e68:	str	x2, [x19, #24]
  433e6c:	add	x3, x24, #0x48
  433e70:	ldr	x0, [sp, #96]
  433e74:	cbz	x0, 433eac <argp_error@@Base+0x6b4>
  433e78:	ldr	x0, [x0]
  433e7c:	cbz	x0, 433eac <argp_error@@Base+0x6b4>
  433e80:	mov	w20, #0x0                   	// #0
  433e84:	mov	w2, w20
  433e88:	mov	x1, x24
  433e8c:	mov	x4, x19
  433e90:	bl	433c38 <argp_error@@Base+0x440>
  433e94:	ldr	x1, [sp, #96]
  433e98:	mov	x3, x0
  433e9c:	add	w20, w20, #0x1
  433ea0:	ldr	x0, [x1, #32]!
  433ea4:	str	x1, [sp, #96]
  433ea8:	cbnz	x0, 433e84 <argp_error@@Base+0x68c>
  433eac:	mov	x0, x3
  433eb0:	ldp	x19, x20, [sp, #16]
  433eb4:	ldp	x23, x24, [sp, #48]
  433eb8:	ldp	x29, x30, [sp], #128
  433ebc:	ret
  433ec0:	ldr	x0, [sp, #104]
  433ec4:	ldr	x0, [x0, #8]
  433ec8:	cbz	x0, 433ed4 <argp_error@@Base+0x6dc>
  433ecc:	ldr	x23, [x4, #8]
  433ed0:	b	433dfc <argp_error@@Base+0x604>
  433ed4:	mov	x24, #0x0                   	// #0
  433ed8:	b	433e70 <argp_error@@Base+0x678>
  433edc:	mov	x2, #0x0                   	// #0
  433ee0:	b	433e5c <argp_error@@Base+0x664>
  433ee4:	nop

0000000000433ee8 <argp_parse@@Base>:
  433ee8:	stp	x29, x30, [sp, #-448]!
  433eec:	mov	x29, sp
  433ef0:	stp	x19, x20, [sp, #16]
  433ef4:	mov	w20, w1
  433ef8:	stp	x21, x22, [sp, #32]
  433efc:	mov	x22, x2
  433f00:	stp	x23, x24, [sp, #48]
  433f04:	stp	x25, x26, [sp, #64]
  433f08:	mov	w25, w3
  433f0c:	mov	x26, x5
  433f10:	stp	x27, x28, [sp, #80]
  433f14:	mov	x28, x0
  433f18:	str	x4, [x29, #104]
  433f1c:	tbnz	w25, #0, 433f38 <argp_parse@@Base+0x50>
  433f20:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  433f24:	ldr	x1, [x0, #1088]
  433f28:	cbz	x1, 4347e4 <argp_parse@@Base+0x8fc>
  433f2c:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  433f30:	ldr	x0, [x19, #1128]
  433f34:	cbz	x0, 4347f8 <argp_parse@@Base+0x910>
  433f38:	ands	w0, w25, #0x4
  433f3c:	str	w0, [x29, #100]
  433f40:	cset	x0, eq  // eq = none
  433f44:	tbz	w25, #4, 433f78 <argp_parse@@Base+0x90>
  433f48:	stp	x0, xzr, [x29, #112]
  433f4c:	stp	xzr, xzr, [x29, #128]
  433f50:	stp	xzr, xzr, [x29, #176]
  433f54:	stp	xzr, xzr, [x29, #192]
  433f58:	stp	xzr, xzr, [x29, #208]
  433f5c:	str	xzr, [x29, #224]
  433f60:	cbnz	x28, 434010 <argp_parse@@Base+0x128>
  433f64:	mov	x23, #0x48                  	// #72
  433f68:	mov	x19, #0x68                  	// #104
  433f6c:	mov	x21, x23
  433f70:	mov	x24, #0x0                   	// #0
  433f74:	b	434040 <argp_parse@@Base+0x158>
  433f78:	sub	sp, sp, #0x80
  433f7c:	mov	x1, sp
  433f80:	sub	sp, sp, #0x40
  433f84:	mov	x2, sp
  433f88:	mov	x3, x1
  433f8c:	stp	xzr, xzr, [x1]
  433f90:	stp	xzr, xzr, [x2, #32]
  433f94:	stp	xzr, xzr, [x2]
  433f98:	stp	xzr, xzr, [x1, #16]
  433f9c:	stp	xzr, xzr, [x2, #16]
  433fa0:	stp	xzr, xzr, [x1, #32]
  433fa4:	str	x1, [x2, #32]
  433fa8:	stp	xzr, xzr, [x1, #48]
  433fac:	str	xzr, [x2, #48]
  433fb0:	stp	xzr, xzr, [x1, #64]
  433fb4:	stp	xzr, xzr, [x1, #80]
  433fb8:	stp	xzr, xzr, [x1, #96]
  433fbc:	stp	xzr, xzr, [x1, #112]
  433fc0:	cbz	x28, 433fcc <argp_parse@@Base+0xe4>
  433fc4:	add	x3, x1, #0x20
  433fc8:	str	x28, [x1]
  433fcc:	adrp	x4, 483000 <argp_program_version_hook@@Base+0x290>
  433fd0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  433fd4:	add	x1, x1, #0x3a8
  433fd8:	str	x1, [x3]
  433fdc:	ldr	x4, [x4, #976]
  433fe0:	cbz	x4, 434a54 <argp_parse@@Base+0xb6c>
  433fe4:	add	x4, x3, #0x40
  433fe8:	add	x1, x1, #0x38
  433fec:	str	x1, [x3, #32]
  433ff0:	mov	x28, x2
  433ff4:	str	xzr, [x4]
  433ff8:	stp	x0, xzr, [x29, #112]
  433ffc:	stp	xzr, xzr, [x29, #128]
  434000:	stp	xzr, xzr, [x29, #176]
  434004:	stp	xzr, xzr, [x29, #192]
  434008:	stp	xzr, xzr, [x29, #208]
  43400c:	str	xzr, [x29, #224]
  434010:	mov	x0, x28
  434014:	add	x1, x29, #0x70
  434018:	bl	433998 <argp_error@@Base+0x1a0>
  43401c:	ldp	x3, x2, [x29, #128]
  434020:	ldp	x0, x19, [x29, #112]
  434024:	add	x3, x3, #0x1
  434028:	lsl	x24, x2, #3
  43402c:	add	x3, x3, x3, lsl #3
  434030:	add	x19, x19, #0x1
  434034:	lsl	x21, x3, #3
  434038:	add	x23, x24, x21
  43403c:	add	x19, x23, x19, lsl #5
  434040:	add	x0, x0, x19
  434044:	add	x0, x0, #0x1
  434048:	bl	404310 <malloc@plt>
  43404c:	str	x0, [x29, #440]
  434050:	mov	x27, x0
  434054:	cbz	x0, 434b78 <argp_parse@@Base+0xc90>
  434058:	mov	x0, #0x100000001           	// #4294967297
  43405c:	str	x0, [x29, #176]
  434060:	ldp	x6, x7, [x29, #192]
  434064:	add	x3, x27, x21
  434068:	ldp	x8, x9, [x29, #176]
  43406c:	add	x23, x27, x23
  434070:	ldp	x4, x5, [x29, #208]
  434074:	mov	x2, x24
  434078:	ldr	x12, [x29, #224]
  43407c:	add	x24, x27, x19
  434080:	add	x21, x29, #0xe8
  434084:	mov	x0, x3
  434088:	mov	w1, #0x0                   	// #0
  43408c:	stp	x24, x23, [x29, #240]
  434090:	stp	x8, x9, [x29, #256]
  434094:	stp	x6, x7, [x29, #272]
  434098:	stp	x4, x5, [x29, #288]
  43409c:	stp	x12, x27, [x29, #304]
  4340a0:	str	x3, [x29, #328]
  4340a4:	bl	404410 <memset@plt>
  4340a8:	stp	x21, x24, [x29, #144]
  4340ac:	stp	x23, x0, [x29, #160]
  4340b0:	tbnz	w25, #3, 4341e4 <argp_parse@@Base+0x2fc>
  4340b4:	mov	x0, x24
  4340b8:	ands	w1, w25, #0x4
  4340bc:	cbz	w1, 4340d0 <argp_parse@@Base+0x1e8>
  4340c0:	add	x0, x24, #0x1
  4340c4:	mov	w1, #0x2b                  	// #43
  4340c8:	strb	w1, [x24]
  4340cc:	str	x0, [x29, #152]
  4340d0:	ldr	x1, [x29, #160]
  4340d4:	strb	wzr, [x0]
  4340d8:	str	xzr, [x1]
  4340dc:	str	x28, [x29, #232]
  4340e0:	cbz	x28, 434208 <argp_parse@@Base+0x320>
  4340e4:	ldr	x3, [x29, #312]
  4340e8:	add	x4, x29, #0x90
  4340ec:	mov	w2, #0x0                   	// #0
  4340f0:	mov	x1, #0x0                   	// #0
  4340f4:	mov	x0, x28
  4340f8:	bl	433c38 <argp_error@@Base+0x440>
  4340fc:	stp	xzr, xzr, [x29, #352]
  434100:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434104:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434108:	mov	w4, #0x1                   	// #1
  43410c:	ldr	x3, [x3, #1096]
  434110:	stp	xzr, xzr, [x21, #136]
  434114:	mov	x1, x22
  434118:	ldr	x2, [x2, #1104]
  43411c:	str	w4, [x29, #336]
  434120:	stp	x3, x2, [x29, #416]
  434124:	str	x21, [x29, #432]
  434128:	ldr	x5, [x29, #232]
  43412c:	stp	xzr, xzr, [x21, #152]
  434130:	ldr	x4, [x29, #312]
  434134:	stp	xzr, xzr, [x21, #168]
  434138:	str	x0, [x29, #320]
  43413c:	cmp	x0, x4
  434140:	str	x5, [x29, #344]
  434144:	str	w20, [x29, #352]
  434148:	str	x22, [x29, #360]
  43414c:	str	w25, [x29, #372]
  434150:	b.ls	434254 <argp_parse@@Base+0x36c>  // b.plast
  434154:	mov	w24, #0x3                   	// #3
  434158:	add	x20, x4, #0x48
  43415c:	add	x25, x21, #0x70
  434160:	movk	w24, #0x100, lsl #16
  434164:	str	x26, [x4, #48]
  434168:	ldur	x3, [x20, #-40]
  43416c:	mov	x2, x25
  434170:	mov	w0, w24
  434174:	mov	x1, #0x0                   	// #0
  434178:	cbz	x3, 43418c <argp_parse@@Base+0x2a4>
  43417c:	ldur	w4, [x20, #-32]
  434180:	ldr	x3, [x3, #56]
  434184:	ldr	x3, [x3, x4, lsl #3]
  434188:	stur	x3, [x20, #-24]
  43418c:	ldur	x3, [x20, #-72]
  434190:	cbz	x3, 434418 <argp_parse@@Base+0x530>
  434194:	ldur	x4, [x20, #-8]
  434198:	ldur	w5, [x20, #-48]
  43419c:	str	x4, [x29, #400]
  4341a0:	ldur	x4, [x20, #-24]
  4341a4:	str	x4, [x29, #384]
  4341a8:	ldur	x4, [x20, #-16]
  4341ac:	str	w5, [x29, #376]
  4341b0:	str	x4, [x29, #392]
  4341b4:	blr	x3
  4341b8:	mov	w19, w0
  4341bc:	ldr	x1, [x29, #400]
  4341c0:	stur	x1, [x20, #-8]
  4341c4:	ldr	x3, [x29, #320]
  4341c8:	cmp	x3, x20
  4341cc:	b.ls	434670 <argp_parse@@Base+0x788>  // b.plast
  4341d0:	cmp	w0, #0x0
  4341d4:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  4341d8:	b.ne	4343f4 <argp_parse@@Base+0x50c>  // b.any
  4341dc:	add	x20, x20, #0x48
  4341e0:	b	434168 <argp_parse@@Base+0x280>
  4341e4:	mov	w1, #0x2d                  	// #45
  4341e8:	add	x0, x24, #0x1
  4341ec:	strb	w1, [x27, x19]
  4341f0:	ldr	x1, [x29, #160]
  4341f4:	str	x0, [x29, #152]
  4341f8:	strb	wzr, [x0]
  4341fc:	str	xzr, [x1]
  434200:	str	x28, [x29, #232]
  434204:	cbnz	x28, 4340e4 <argp_parse@@Base+0x1fc>
  434208:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43420c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434210:	stp	xzr, xzr, [x29, #352]
  434214:	mov	w4, #0x1                   	// #1
  434218:	ldr	x3, [x1, #1096]
  43421c:	stp	xzr, xzr, [x21, #136]
  434220:	mov	x1, x22
  434224:	ldr	x2, [x2, #1104]
  434228:	str	w4, [x29, #336]
  43422c:	stp	x3, x2, [x29, #416]
  434230:	str	x21, [x29, #432]
  434234:	ldr	x4, [x29, #312]
  434238:	stp	xzr, xzr, [x21, #152]
  43423c:	stp	xzr, xzr, [x21, #168]
  434240:	str	x4, [x29, #320]
  434244:	str	xzr, [x29, #344]
  434248:	str	w20, [x29, #352]
  43424c:	str	x22, [x29, #360]
  434250:	str	w25, [x29, #372]
  434254:	tbz	w25, #1, 43445c <argp_parse@@Base+0x574>
  434258:	str	wzr, [x29, #260]
  43425c:	ldr	w19, [x29, #352]
  434260:	tbnz	w25, #0, 4347d0 <argp_parse@@Base+0x8e8>
  434264:	cmp	x22, x1
  434268:	b.eq	434470 <argp_parse@@Base+0x588>  // b.none
  43426c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434270:	ldr	x0, [x0, #1128]
  434274:	str	x0, [x29, #408]
  434278:	ldr	w2, [x29, #336]
  43427c:	mov	w24, #0x6                   	// #6
  434280:	ldr	w28, [x29, #368]
  434284:	mov	w0, w19
  434288:	add	x20, x21, #0x70
  43428c:	mov	w25, #0xffffffff            	// #-1
  434290:	movk	w24, #0x100, lsl #16
  434294:	ldr	w1, [x29, #380]
  434298:	cbz	w1, 4342a8 <argp_parse@@Base+0x3c0>
  43429c:	cmp	w1, w28
  4342a0:	b.le	4342ac <argp_parse@@Base+0x3c4>
  4342a4:	str	wzr, [x29, #380]
  4342a8:	cbnz	w2, 4345a0 <argp_parse@@Base+0x6b8>
  4342ac:	cmp	w0, w28
  4342b0:	b.le	434500 <argp_parse@@Base+0x618>
  4342b4:	ldr	w0, [x29, #372]
  4342b8:	tbnz	w0, #2, 434690 <argp_parse@@Base+0x7a8>
  4342bc:	ldr	x0, [x29, #360]
  4342c0:	ldr	x22, [x0, w28, sxtw #3]
  4342c4:	str	x22, [x29, #272]
  4342c8:	ldp	x26, x3, [x29, #312]
  4342cc:	str	w28, [x29, #368]
  4342d0:	cmp	x26, x3
  4342d4:	b.cs	4344f8 <argp_parse@@Base+0x610>  // b.hs, b.nlast
  4342d8:	mov	w5, w28
  4342dc:	nop
  4342e0:	mov	x27, x26
  4342e4:	ldr	x4, [x27]
  4342e8:	add	w6, w5, #0x1
  4342ec:	str	w6, [x29, #368]
  4342f0:	mov	x2, x20
  4342f4:	mov	x1, x22
  4342f8:	mov	w0, #0x0                   	// #0
  4342fc:	cbz	x4, 4344e8 <argp_parse@@Base+0x600>
  434300:	ldr	x3, [x27, #64]
  434304:	ldr	w5, [x27, #24]
  434308:	str	x3, [x29, #400]
  43430c:	ldr	x3, [x27, #48]
  434310:	str	x3, [x29, #384]
  434314:	ldr	x3, [x27, #56]
  434318:	str	w5, [x29, #376]
  43431c:	str	x3, [x29, #392]
  434320:	blr	x4
  434324:	mov	w19, w0
  434328:	ldr	x1, [x29, #400]
  43432c:	str	x1, [x27, #64]
  434330:	cmp	w0, #0x7
  434334:	b.eq	434484 <argp_parse@@Base+0x59c>  // b.none
  434338:	add	x26, x27, #0x48
  43433c:	cbnz	w0, 434820 <argp_parse@@Base+0x938>
  434340:	ldr	w0, [x29, #352]
  434344:	ldr	w1, [x29, #368]
  434348:	cmp	w1, w28
  43434c:	b.le	4345f4 <argp_parse@@Base+0x70c>
  434350:	ldur	w3, [x26, #-48]
  434354:	sub	w4, w1, w28
  434358:	ldr	w2, [x29, #336]
  43435c:	mov	w28, w1
  434360:	add	w1, w3, w4
  434364:	stur	w1, [x26, #-48]
  434368:	b	434294 <argp_parse@@Base+0x3ac>
  43436c:	cmp	w0, #0x7
  434370:	b.eq	434730 <argp_parse@@Base+0x848>  // b.none
  434374:	ldr	x20, [x29, #320]
  434378:	sub	x20, x20, #0x48
  43437c:	cmp	x20, x4
  434380:	b.cc	4343e0 <argp_parse@@Base+0x4f8>  // b.lo, b.ul, b.last
  434384:	mov	w22, #0x7                   	// #7
  434388:	add	x21, x21, #0x70
  43438c:	movk	w22, #0x100, lsl #16
  434390:	ldr	x3, [x20]
  434394:	mov	x2, x21
  434398:	mov	w0, w22
  43439c:	mov	x1, #0x0                   	// #0
  4343a0:	cbz	x3, 4343d4 <argp_parse@@Base+0x4ec>
  4343a4:	ldr	x4, [x20, #64]
  4343a8:	ldr	w5, [x20, #24]
  4343ac:	str	x4, [x29, #400]
  4343b0:	ldr	x4, [x20, #48]
  4343b4:	str	x4, [x29, #384]
  4343b8:	ldr	x4, [x20, #56]
  4343bc:	str	w5, [x29, #376]
  4343c0:	str	x4, [x29, #392]
  4343c4:	blr	x3
  4343c8:	ldr	x0, [x29, #400]
  4343cc:	str	x0, [x20, #64]
  4343d0:	ldr	x4, [x29, #312]
  4343d4:	sub	x20, x20, #0x48
  4343d8:	cmp	x20, x4
  4343dc:	b.cs	434390 <argp_parse@@Base+0x4a8>  // b.hs, b.nlast
  4343e0:	cmp	w19, #0x7
  4343e4:	mov	w0, #0x16                  	// #22
  4343e8:	csel	w19, w19, w0, ne  // ne = any
  4343ec:	ldr	x0, [x29, #440]
  4343f0:	bl	4047b0 <free@plt>
  4343f4:	mov	sp, x29
  4343f8:	mov	w0, w19
  4343fc:	ldp	x19, x20, [sp, #16]
  434400:	ldp	x21, x22, [sp, #32]
  434404:	ldp	x23, x24, [sp, #48]
  434408:	ldp	x25, x26, [sp, #64]
  43440c:	ldp	x27, x28, [sp, #80]
  434410:	ldp	x29, x30, [sp], #448
  434414:	ret
  434418:	ldur	x3, [x20, #-64]
  43441c:	ldr	x3, [x3, #32]
  434420:	cbz	x3, 434440 <argp_parse@@Base+0x558>
  434424:	ldr	x3, [x3]
  434428:	cbz	x3, 434440 <argp_parse@@Base+0x558>
  43442c:	ldp	x4, x3, [x20, #-24]
  434430:	str	x4, [x3]
  434434:	ldur	x3, [x20, #-72]
  434438:	cbnz	x3, 434194 <argp_parse@@Base+0x2ac>
  43443c:	nop
  434440:	ldr	x3, [x29, #320]
  434444:	cmp	x3, x20
  434448:	b.hi	4341dc <argp_parse@@Base+0x2f4>  // b.pmore
  43444c:	ldr	w25, [x29, #372]
  434450:	ldr	x1, [x29, #360]
  434454:	nop
  434458:	tbnz	w25, #1, 434258 <argp_parse@@Base+0x370>
  43445c:	mov	w0, #0x1                   	// #1
  434460:	str	w0, [x29, #260]
  434464:	ldr	w19, [x29, #352]
  434468:	cmp	x22, x1
  43446c:	b.ne	43426c <argp_parse@@Base+0x384>  // b.any
  434470:	ldr	x0, [x22]
  434474:	cbz	x0, 43426c <argp_parse@@Base+0x384>
  434478:	bl	435560 <argp_parse@@Base+0x1678>
  43447c:	str	x0, [x29, #408]
  434480:	b	434278 <argp_parse@@Base+0x390>
  434484:	mov	x26, x27
  434488:	ldr	w5, [x29, #368]
  43448c:	sub	w5, w5, #0x1
  434490:	ldr	x3, [x26], #72
  434494:	str	w5, [x29, #368]
  434498:	cbz	x3, 434b80 <argp_parse@@Base+0xc98>
  43449c:	ldp	x6, x5, [x27, #48]
  4344a0:	mov	x2, x20
  4344a4:	ldr	w7, [x27, #24]
  4344a8:	mov	w0, w24
  4344ac:	ldr	x4, [x27, #64]
  4344b0:	str	w7, [x29, #376]
  4344b4:	stp	x6, x5, [x29, #384]
  4344b8:	mov	x1, #0x0                   	// #0
  4344bc:	str	x4, [x29, #400]
  4344c0:	blr	x3
  4344c4:	mov	w19, w0
  4344c8:	ldr	x3, [x29, #320]
  4344cc:	ldr	x0, [x29, #400]
  4344d0:	str	x0, [x27, #64]
  4344d4:	cmp	x3, x26
  4344d8:	ccmp	w19, #0x7, #0x0, hi  // hi = pmore
  4344dc:	b.ne	434b8c <argp_parse@@Base+0xca4>  // b.any
  4344e0:	ldr	w5, [x29, #368]
  4344e4:	b	4342e0 <argp_parse@@Base+0x3f8>
  4344e8:	add	x27, x27, #0x48
  4344ec:	str	w5, [x29, #368]
  4344f0:	cmp	x3, x27
  4344f4:	b.hi	4342e4 <argp_parse@@Base+0x3fc>  // b.pmore
  4344f8:	ldr	w0, [x29, #352]
  4344fc:	ldr	w28, [x29, #368]
  434500:	cmp	w28, w0
  434504:	b.ne	434690 <argp_parse@@Base+0x7a8>  // b.any
  434508:	ldp	x20, x3, [x29, #312]
  43450c:	mov	x4, x20
  434510:	cmp	x3, x20
  434514:	b.ls	434b48 <argp_parse@@Base+0xc60>  // b.plast
  434518:	mov	w22, #0x2                   	// #2
  43451c:	add	x24, x21, #0x70
  434520:	mov	w19, #0x0                   	// #0
  434524:	movk	w22, #0x100, lsl #16
  434528:	b	434570 <argp_parse@@Base+0x688>
  43452c:	ldur	x3, [x20, #-8]
  434530:	str	x3, [x29, #400]
  434534:	ldur	x3, [x20, #-24]
  434538:	str	x3, [x29, #384]
  43453c:	ldur	x3, [x20, #-16]
  434540:	str	wzr, [x29, #376]
  434544:	str	x3, [x29, #392]
  434548:	blr	x4
  43454c:	mov	w19, w0
  434550:	ldr	x1, [x29, #400]
  434554:	stur	x1, [x20, #-8]
  434558:	ldr	x3, [x29, #320]
  43455c:	cmp	x20, x3
  434560:	b.cs	434a74 <argp_parse@@Base+0xb8c>  // b.hs, b.nlast
  434564:	cmp	w19, #0x0
  434568:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  43456c:	b.ne	434808 <argp_parse@@Base+0x920>  // b.any
  434570:	ldr	w4, [x20, #24]
  434574:	mov	x2, x24
  434578:	mov	w0, w22
  43457c:	add	x20, x20, #0x48
  434580:	mov	x1, #0x0                   	// #0
  434584:	cbnz	w4, 43455c <argp_parse@@Base+0x674>
  434588:	ldur	x4, [x20, #-72]
  43458c:	cbnz	x4, 43452c <argp_parse@@Base+0x644>
  434590:	cmp	x20, x3
  434594:	b.cs	434b64 <argp_parse@@Base+0xc7c>  // b.hs, b.nlast
  434598:	mov	w19, #0x7                   	// #7
  43459c:	b	434570 <argp_parse@@Base+0x688>
  4345a0:	ldr	w4, [x29, #372]
  4345a4:	str	w28, [x29, #256]
  4345a8:	str	w25, [x29, #264]
  4345ac:	ldp	x2, x3, [x29, #240]
  4345b0:	ldr	x1, [x29, #360]
  4345b4:	tbz	w4, #6, 434608 <argp_parse@@Base+0x720>
  4345b8:	add	x5, x21, #0x18
  4345bc:	mov	x4, #0x0                   	// #0
  4345c0:	bl	441e08 <argp_parse@@Base+0xdf20>
  4345c4:	ldr	w28, [x29, #256]
  4345c8:	str	w28, [x29, #368]
  4345cc:	mov	w22, w0
  4345d0:	cmn	w22, #0x1
  4345d4:	b.eq	434628 <argp_parse@@Base+0x740>  // b.none
  4345d8:	cmp	w22, #0x3f
  4345dc:	b.eq	434748 <argp_parse@@Base+0x860>  // b.none
  4345e0:	cmp	w22, #0x1
  4345e4:	b.ne	434954 <argp_parse@@Base+0xa6c>  // b.any
  4345e8:	sub	w28, w28, #0x1
  4345ec:	ldr	x22, [x29, #272]
  4345f0:	b	4342c8 <argp_parse@@Base+0x3e0>
  4345f4:	mov	w28, w1
  4345f8:	mov	w1, #0x1                   	// #1
  4345fc:	mov	w2, w1
  434600:	str	w1, [x29, #336]
  434604:	b	434294 <argp_parse@@Base+0x3ac>
  434608:	add	x5, x21, #0x18
  43460c:	mov	x4, #0x0                   	// #0
  434610:	bl	441de8 <argp_parse@@Base+0xdf00>
  434614:	ldr	w28, [x29, #256]
  434618:	str	w28, [x29, #368]
  43461c:	mov	w22, w0
  434620:	cmn	w22, #0x1
  434624:	b.ne	4345d8 <argp_parse@@Base+0x6f0>  // b.any
  434628:	str	wzr, [x29, #336]
  43462c:	cmp	w28, #0x1
  434630:	b.le	434688 <argp_parse@@Base+0x7a0>
  434634:	mov	x0, #0xfffffffffffffff8    	// #-8
  434638:	ldr	x1, [x29, #360]
  43463c:	add	x0, x0, w28, sxtw #3
  434640:	ldr	x0, [x1, x0]
  434644:	ldrb	w1, [x0]
  434648:	cmp	w1, #0x2d
  43464c:	b.ne	434688 <argp_parse@@Base+0x7a0>  // b.any
  434650:	ldrb	w1, [x0, #1]
  434654:	cmp	w1, #0x2d
  434658:	b.ne	434688 <argp_parse@@Base+0x7a0>  // b.any
  43465c:	ldrb	w0, [x0, #2]
  434660:	cbnz	w0, 434688 <argp_parse@@Base+0x7a0>
  434664:	ldr	w0, [x29, #352]
  434668:	str	w28, [x29, #380]
  43466c:	b	4342ac <argp_parse@@Base+0x3c4>
  434670:	cmp	w0, #0x0
  434674:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  434678:	b.ne	4343f4 <argp_parse@@Base+0x50c>  // b.any
  43467c:	ldr	w25, [x29, #372]
  434680:	ldr	x1, [x29, #360]
  434684:	b	434458 <argp_parse@@Base+0x570>
  434688:	ldr	w0, [x29, #352]
  43468c:	b	4342ac <argp_parse@@Base+0x3c4>
  434690:	ldr	x0, [x29, #104]
  434694:	cbz	x0, 4348c4 <argp_parse@@Base+0x9dc>
  434698:	ldp	x4, x3, [x29, #312]
  43469c:	str	w28, [x0]
  4346a0:	sub	x20, x3, #0x48
  4346a4:	cmp	x4, x20
  4346a8:	b.hi	434b5c <argp_parse@@Base+0xc74>  // b.pmore
  4346ac:	mov	w22, #0x4                   	// #4
  4346b0:	add	x23, x21, #0x70
  4346b4:	movk	w22, #0x100, lsl #16
  4346b8:	ldr	x3, [x20], #-72
  4346bc:	mov	x2, x23
  4346c0:	mov	w0, w22
  4346c4:	mov	x1, #0x0                   	// #0
  4346c8:	cbz	x3, 434728 <argp_parse@@Base+0x840>
  4346cc:	ldr	x4, [x20, #136]
  4346d0:	ldr	w5, [x20, #96]
  4346d4:	str	x4, [x29, #400]
  4346d8:	ldr	x4, [x20, #120]
  4346dc:	str	x4, [x29, #384]
  4346e0:	ldr	x4, [x20, #128]
  4346e4:	str	w5, [x29, #376]
  4346e8:	str	x4, [x29, #392]
  4346ec:	blr	x3
  4346f0:	mov	w19, w0
  4346f4:	ldr	x1, [x29, #400]
  4346f8:	str	x1, [x20, #136]
  4346fc:	ldr	x4, [x29, #312]
  434700:	cmp	x4, x20
  434704:	b.hi	43436c <argp_parse@@Base+0x484>  // b.pmore
  434708:	cmp	w0, #0x0
  43470c:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  434710:	b.ne	434374 <argp_parse@@Base+0x48c>  // b.any
  434714:	ldr	x3, [x20], #-72
  434718:	mov	x2, x23
  43471c:	mov	w0, w22
  434720:	mov	x1, #0x0                   	// #0
  434724:	cbnz	x3, 4346cc <argp_parse@@Base+0x7e4>
  434728:	cmp	x4, x20
  43472c:	b.ls	4346b8 <argp_parse@@Base+0x7d0>  // b.plast
  434730:	ldr	x20, [x29, #320]
  434734:	mov	w19, #0x0                   	// #0
  434738:	sub	x20, x20, #0x48
  43473c:	cmp	x20, x4
  434740:	b.cs	434384 <argp_parse@@Base+0x49c>  // b.hs, b.nlast
  434744:	b	4343ec <argp_parse@@Base+0x504>
  434748:	ldr	w0, [x29, #264]
  43474c:	cmn	w0, #0x1
  434750:	b.ne	434828 <argp_parse@@Base+0x940>  // b.any
  434754:	ldr	x0, [x29, #240]
  434758:	mov	w1, w22
  43475c:	bl	404870 <strchr@plt>
  434760:	cbz	x0, 434910 <argp_parse@@Base+0xa28>
  434764:	ldp	x26, x2, [x29, #312]
  434768:	cmp	x26, x2
  43476c:	b.cc	434780 <argp_parse@@Base+0x898>  // b.lo, b.ul, b.last
  434770:	b	434910 <argp_parse@@Base+0xa28>
  434774:	add	x26, x26, #0x48
  434778:	cmp	x26, x2
  43477c:	b.cs	434910 <argp_parse@@Base+0xa28>  // b.hs, b.nlast
  434780:	ldr	x1, [x26, #16]
  434784:	cmp	x0, x1
  434788:	b.cs	434774 <argp_parse@@Base+0x88c>  // b.hs, b.nlast
  43478c:	ldr	x3, [x26]
  434790:	cbz	x3, 434910 <argp_parse@@Base+0xa28>
  434794:	ldp	x6, x5, [x26, #48]
  434798:	mov	x2, x20
  43479c:	ldr	w7, [x26, #24]
  4347a0:	mov	w0, w22
  4347a4:	ldr	x4, [x26, #64]
  4347a8:	str	w7, [x29, #376]
  4347ac:	ldr	x1, [x29, #272]
  4347b0:	stp	x6, x5, [x29, #384]
  4347b4:	mov	w27, #0x0                   	// #0
  4347b8:	str	x4, [x29, #400]
  4347bc:	blr	x3
  4347c0:	mov	w19, w0
  4347c4:	ldr	x1, [x29, #400]
  4347c8:	str	x1, [x26, #64]
  4347cc:	b	4349c0 <argp_parse@@Base+0xad8>
  4347d0:	sub	x1, x1, #0x8
  4347d4:	add	w19, w19, #0x1
  4347d8:	str	w19, [x29, #352]
  4347dc:	str	x1, [x29, #360]
  4347e0:	b	434264 <argp_parse@@Base+0x37c>
  4347e4:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4347e8:	ldr	x1, [x2]
  4347ec:	str	x1, [x0, #1088]
  4347f0:	ldr	x0, [x19, #1128]
  4347f4:	cbnz	x0, 433f38 <argp_parse@@Base+0x50>
  4347f8:	ldr	x0, [x22]
  4347fc:	bl	435560 <argp_parse@@Base+0x1678>
  434800:	str	x0, [x19, #1128]
  434804:	b	433f38 <argp_parse@@Base+0x50>
  434808:	ldr	x4, [x29, #312]
  43480c:	sub	x3, x3, #0x48
  434810:	cmp	x4, x3
  434814:	b.ls	434afc <argp_parse@@Base+0xc14>  // b.plast
  434818:	ldr	x0, [x29, #104]
  43481c:	cbnz	x0, 434b04 <argp_parse@@Base+0xc1c>
  434820:	cmp	w19, #0x7
  434824:	b.ne	434840 <argp_parse@@Base+0x958>  // b.any
  434828:	ldr	x19, [x29, #416]
  43482c:	mov	x1, x19
  434830:	mov	w19, #0x7                   	// #7
  434834:	add	x0, x21, #0x70
  434838:	mov	w2, #0x104                 	// #260
  43483c:	bl	433758 <argp_state_help@@Base>
  434840:	ldr	x3, [x29, #320]
  434844:	mov	x20, x3
  434848:	ldr	x22, [x29, #312]
  43484c:	cmp	x22, x3
  434850:	mov	x4, x22
  434854:	b.cs	434378 <argp_parse@@Base+0x490>  // b.hs, b.nlast
  434858:	mov	w23, #0x5                   	// #5
  43485c:	add	x24, x21, #0x70
  434860:	movk	w23, #0x100, lsl #16
  434864:	nop
  434868:	ldr	x4, [x22]
  43486c:	mov	x2, x24
  434870:	mov	w0, w23
  434874:	mov	x1, #0x0                   	// #0
  434878:	cbz	x4, 4348ac <argp_parse@@Base+0x9c4>
  43487c:	ldr	x3, [x22, #64]
  434880:	ldr	w5, [x22, #24]
  434884:	str	x3, [x29, #400]
  434888:	ldr	x3, [x22, #48]
  43488c:	str	x3, [x29, #384]
  434890:	ldr	x3, [x22, #56]
  434894:	str	w5, [x29, #376]
  434898:	str	x3, [x29, #392]
  43489c:	blr	x4
  4348a0:	ldr	x0, [x29, #400]
  4348a4:	str	x0, [x22, #64]
  4348a8:	ldr	x3, [x29, #320]
  4348ac:	add	x22, x22, #0x48
  4348b0:	mov	x20, x3
  4348b4:	cmp	x22, x3
  4348b8:	b.cc	434868 <argp_parse@@Base+0x980>  // b.lo, b.ul, b.last
  4348bc:	ldr	x4, [x29, #312]
  4348c0:	b	434378 <argp_parse@@Base+0x490>
  4348c4:	ldr	w0, [x29, #372]
  4348c8:	ldr	x19, [x29, #416]
  4348cc:	tbnz	w0, #1, 43482c <argp_parse@@Base+0x944>
  4348d0:	cbz	x19, 43482c <argp_parse@@Base+0x944>
  4348d4:	ldr	x0, [x29, #232]
  4348d8:	mov	w2, #0x5                   	// #5
  4348dc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4348e0:	add	x1, x1, #0x2d0
  4348e4:	ldr	x0, [x0, #48]
  4348e8:	bl	4049c0 <dcgettext@plt>
  4348ec:	mov	x2, x0
  4348f0:	ldr	x3, [x29, #408]
  4348f4:	mov	x0, x19
  4348f8:	mov	w1, #0x1                   	// #1
  4348fc:	bl	404700 <__fprintf_chk@plt>
  434900:	ldr	x19, [x29, #416]
  434904:	b	43482c <argp_parse@@Base+0x944>
  434908:	cbnz	w27, 4349dc <argp_parse@@Base+0xaf4>
  43490c:	nop
  434910:	ldr	x0, [x29, #232]
  434914:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  434918:	add	x1, x1, #0x3a8
  43491c:	mov	w2, #0x5                   	// #5
  434920:	add	x1, x1, #0x70
  434924:	ldr	x0, [x0, #48]
  434928:	bl	4049c0 <dcgettext@plt>
  43492c:	mov	x3, x0
  434930:	mov	w2, w22
  434934:	add	x0, x21, #0x70
  434938:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43493c:	add	x1, x1, #0x2b8
  434940:	bl	4337f8 <argp_error@@Base>
  434944:	add	w0, w22, #0x1
  434948:	and	w0, w0, #0xfffffffd
  43494c:	cbnz	w0, 434828 <argp_parse@@Base+0x940>
  434950:	b	4344f8 <argp_parse@@Base+0x610>
  434954:	cmp	wzr, w22, asr #24
  434958:	asr	w27, w22, #24
  43495c:	b.eq	434754 <argp_parse@@Base+0x86c>  // b.none
  434960:	mov	x0, #0xffffffffffffffb8    	// #-72
  434964:	mov	w1, #0x48                  	// #72
  434968:	ldr	x3, [x29, #312]
  43496c:	smaddl	x1, w27, w1, x0
  434970:	ands	w2, w22, #0x800000
  434974:	and	w0, w22, #0xffffff
  434978:	add	x26, x3, x1
  43497c:	mov	w4, #0xff000000            	// #-16777216
  434980:	csel	w2, w2, w4, eq  // eq = none
  434984:	ldr	x3, [x3, x1]
  434988:	orr	w0, w0, w2
  43498c:	cbz	x3, 4349dc <argp_parse@@Base+0xaf4>
  434990:	ldp	x6, x5, [x26, #48]
  434994:	mov	x2, x20
  434998:	ldr	w7, [x26, #24]
  43499c:	ldr	x4, [x26, #64]
  4349a0:	str	w7, [x29, #376]
  4349a4:	ldr	x1, [x29, #272]
  4349a8:	stp	x6, x5, [x29, #384]
  4349ac:	str	x4, [x29, #400]
  4349b0:	blr	x3
  4349b4:	mov	w19, w0
  4349b8:	ldr	x0, [x29, #400]
  4349bc:	str	x0, [x26, #64]
  4349c0:	cmp	w19, #0x7
  4349c4:	b.eq	434908 <argp_parse@@Base+0xa20>  // b.none
  4349c8:	cbnz	w19, 434820 <argp_parse@@Base+0x938>
  4349cc:	ldr	w2, [x29, #336]
  4349d0:	ldr	w0, [x29, #352]
  4349d4:	ldr	w28, [x29, #368]
  4349d8:	b	434294 <argp_parse@@Base+0x3ac>
  4349dc:	ldr	x0, [x29, #248]
  4349e0:	ldr	w1, [x0, #24]
  4349e4:	cmp	w1, w22
  4349e8:	b.ne	4349fc <argp_parse@@Base+0xb14>  // b.any
  4349ec:	b	434a68 <argp_parse@@Base+0xb80>
  4349f0:	ldr	w1, [x0, #24]
  4349f4:	cmp	w22, w1
  4349f8:	b.eq	434a68 <argp_parse@@Base+0xb80>  // b.none
  4349fc:	ldr	x1, [x0]
  434a00:	add	x0, x0, #0x20
  434a04:	cbnz	x1, 4349f0 <argp_parse@@Base+0xb08>
  434a08:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x19e10>
  434a0c:	add	x19, x19, #0x2b0
  434a10:	ldr	x0, [x29, #232]
  434a14:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  434a18:	add	x1, x1, #0x3a8
  434a1c:	mov	w2, #0x5                   	// #5
  434a20:	add	x1, x1, #0x70
  434a24:	ldr	x0, [x0, #48]
  434a28:	bl	4049c0 <dcgettext@plt>
  434a2c:	mov	x3, x0
  434a30:	mov	x2, x19
  434a34:	add	x0, x21, #0x70
  434a38:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  434a3c:	add	x1, x1, #0x2c0
  434a40:	bl	4337f8 <argp_error@@Base>
  434a44:	add	w0, w22, #0x1
  434a48:	and	w0, w0, #0xfffffffd
  434a4c:	cbnz	w0, 434828 <argp_parse@@Base+0x940>
  434a50:	b	4344f8 <argp_parse@@Base+0x610>
  434a54:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434a58:	ldr	x4, [x4, #3440]
  434a5c:	cbnz	x4, 433fe4 <argp_parse@@Base+0xfc>
  434a60:	add	x4, x3, #0x20
  434a64:	b	433ff0 <argp_parse@@Base+0x108>
  434a68:	ldr	x19, [x0]
  434a6c:	cbnz	x19, 434a10 <argp_parse@@Base+0xb28>
  434a70:	b	434a08 <argp_parse@@Base+0xb20>
  434a74:	ldr	x4, [x29, #312]
  434a78:	sub	x20, x3, #0x48
  434a7c:	cmp	x4, x20
  434a80:	b.hi	434b3c <argp_parse@@Base+0xc54>  // b.pmore
  434a84:	cmp	w19, #0x0
  434a88:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  434a8c:	b.ne	434afc <argp_parse@@Base+0xc14>  // b.any
  434a90:	mov	w22, #0x1                   	// #1
  434a94:	add	x24, x21, #0x70
  434a98:	movk	w22, #0x100, lsl #16
  434a9c:	nop
  434aa0:	ldr	x3, [x20], #-72
  434aa4:	mov	x2, x24
  434aa8:	mov	w0, w22
  434aac:	mov	x1, #0x0                   	// #0
  434ab0:	cbz	x3, 434b1c <argp_parse@@Base+0xc34>
  434ab4:	ldr	x4, [x20, #136]
  434ab8:	ldr	w5, [x20, #96]
  434abc:	str	x4, [x29, #400]
  434ac0:	ldr	x4, [x20, #120]
  434ac4:	str	x4, [x29, #384]
  434ac8:	ldr	x4, [x20, #128]
  434acc:	str	w5, [x29, #376]
  434ad0:	str	x4, [x29, #392]
  434ad4:	blr	x3
  434ad8:	mov	w19, w0
  434adc:	ldr	x1, [x29, #400]
  434ae0:	str	x1, [x20, #136]
  434ae4:	ldr	x4, [x29, #312]
  434ae8:	cmp	x4, x20
  434aec:	b.hi	434b3c <argp_parse@@Base+0xc54>  // b.pmore
  434af0:	cmp	w0, #0x0
  434af4:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  434af8:	b.eq	434aa0 <argp_parse@@Base+0xbb8>  // b.none
  434afc:	ldr	x0, [x29, #104]
  434b00:	cbz	x0, 434b10 <argp_parse@@Base+0xc28>
  434b04:	ldr	x1, [x29, #104]
  434b08:	ldr	w0, [x29, #368]
  434b0c:	str	w0, [x1]
  434b10:	cbnz	w19, 434820 <argp_parse@@Base+0x938>
  434b14:	ldr	x3, [x29, #320]
  434b18:	b	4346a0 <argp_parse@@Base+0x7b8>
  434b1c:	cmp	x4, x20
  434b20:	b.ls	434aa0 <argp_parse@@Base+0xbb8>  // b.plast
  434b24:	ldr	x3, [x29, #320]
  434b28:	ldr	x1, [x29, #104]
  434b2c:	cbz	x1, 4346a0 <argp_parse@@Base+0x7b8>
  434b30:	ldr	w0, [x29, #368]
  434b34:	str	w0, [x1]
  434b38:	b	4346a0 <argp_parse@@Base+0x7b8>
  434b3c:	cmp	w19, #0x7
  434b40:	b.eq	434b24 <argp_parse@@Base+0xc3c>  // b.none
  434b44:	b	434afc <argp_parse@@Base+0xc14>
  434b48:	sub	x20, x3, #0x48
  434b4c:	cmp	x4, x20
  434b50:	b.ls	434a90 <argp_parse@@Base+0xba8>  // b.plast
  434b54:	ldr	x1, [x29, #104]
  434b58:	cbnz	x1, 434b30 <argp_parse@@Base+0xc48>
  434b5c:	mov	w19, #0x0                   	// #0
  434b60:	b	4343ec <argp_parse@@Base+0x504>
  434b64:	ldr	x4, [x29, #312]
  434b68:	sub	x20, x3, #0x48
  434b6c:	cmp	x4, x20
  434b70:	b.ls	434a90 <argp_parse@@Base+0xba8>  // b.plast
  434b74:	b	434b28 <argp_parse@@Base+0xc40>
  434b78:	mov	w19, #0xc                   	// #12
  434b7c:	b	4343f4 <argp_parse@@Base+0x50c>
  434b80:	mov	x27, x26
  434b84:	ldr	x3, [x29, #320]
  434b88:	b	4344f0 <argp_parse@@Base+0x608>
  434b8c:	cbnz	w19, 434ba0 <argp_parse@@Base+0xcb8>
  434b90:	ldr	w1, [x29, #352]
  434b94:	str	w1, [x29, #368]
  434b98:	mov	w0, w1
  434b9c:	b	434348 <argp_parse@@Base+0x460>
  434ba0:	cmp	w19, #0x7
  434ba4:	b.eq	4344f8 <argp_parse@@Base+0x610>  // b.none
  434ba8:	b	434844 <argp_parse@@Base+0x95c>
  434bac:	nop
  434bb0:	cbz	x1, 434be8 <argp_parse@@Base+0xd00>
  434bb4:	ldr	x2, [x1, #88]
  434bb8:	ldp	x1, x3, [x2, #80]
  434bbc:	cmp	x1, x3
  434bc0:	b.cc	434bd4 <argp_parse@@Base+0xcec>  // b.lo, b.ul, b.last
  434bc4:	b	434be8 <argp_parse@@Base+0xd00>
  434bc8:	add	x1, x1, #0x48
  434bcc:	cmp	x1, x3
  434bd0:	b.cs	434be8 <argp_parse@@Base+0xd00>  // b.hs, b.nlast
  434bd4:	ldr	x2, [x1, #8]
  434bd8:	cmp	x2, x0
  434bdc:	b.ne	434bc8 <argp_parse@@Base+0xce0>  // b.any
  434be0:	ldr	x0, [x1, #48]
  434be4:	ret
  434be8:	mov	x0, #0x0                   	// #0
  434bec:	ret
  434bf0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434bf4:	add	x5, x1, #0xd78
  434bf8:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x12e10>
  434bfc:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  434c00:	ldr	x4, [x1, #3448]
  434c04:	add	x3, x3, #0xc58
  434c08:	ldr	x1, [x5, #8]
  434c0c:	add	x2, x2, #0xb20
  434c10:	b	440d58 <argp_parse@@Base+0xce70>
  434c14:	nop
  434c18:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434c1c:	add	x4, x3, #0xd78
  434c20:	adrp	x5, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434c24:	adrp	x2, 434000 <argp_parse@@Base+0x118>
  434c28:	str	x1, [x3, #3448]
  434c2c:	add	x2, x2, #0xbf0
  434c30:	str	x2, [x5, #3440]
  434c34:	str	x0, [x4, #8]
  434c38:	ret
  434c3c:	nop
  434c40:	stp	x29, x30, [sp, #-32]!
  434c44:	mov	x29, sp
  434c48:	str	x19, [sp, #16]
  434c4c:	mov	x19, x0
  434c50:	cbz	x0, 434c9c <argp_parse@@Base+0xdb4>
  434c54:	ldrb	w0, [x19]
  434c58:	cbnz	w0, 434c78 <argp_parse@@Base+0xd90>
  434c5c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434c60:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x19e10>
  434c64:	add	x19, x19, #0x5a0
  434c68:	str	x19, [x0, #3464]
  434c6c:	ldr	x19, [sp, #16]
  434c70:	ldp	x29, x30, [sp], #32
  434c74:	ret
  434c78:	mov	x0, x19
  434c7c:	bl	435560 <argp_parse@@Base+0x1678>
  434c80:	cmp	x19, x0
  434c84:	b.ne	434c5c <argp_parse@@Base+0xd74>  // b.any
  434c88:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434c8c:	str	x19, [x0, #3464]
  434c90:	ldr	x19, [sp, #16]
  434c94:	ldp	x29, x30, [sp], #32
  434c98:	ret
  434c9c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  434ca0:	add	x0, x0, #0xf88
  434ca4:	bl	404af0 <getenv@plt>
  434ca8:	mov	x19, x0
  434cac:	cbz	x0, 434c5c <argp_parse@@Base+0xd74>
  434cb0:	b	434c54 <argp_parse@@Base+0xd6c>
  434cb4:	nop
  434cb8:	stp	x29, x30, [sp, #-208]!
  434cbc:	mov	x29, sp
  434cc0:	stp	x23, x24, [sp, #48]
  434cc4:	mov	x23, x1
  434cc8:	str	w0, [sp, #188]
  434ccc:	and	w0, w3, #0xff
  434cd0:	stp	x19, x20, [sp, #16]
  434cd4:	stp	x21, x22, [sp, #32]
  434cd8:	stp	x25, x26, [sp, #64]
  434cdc:	mov	w25, w2
  434ce0:	str	w0, [sp, #184]
  434ce4:	mov	x0, x1
  434ce8:	bl	435560 <argp_parse@@Base+0x1678>
  434cec:	sub	x21, x0, x23
  434cf0:	bl	403ff0 <strlen@plt>
  434cf4:	add	x24, x21, x0
  434cf8:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  434cfc:	ldr	x1, [x1, #3464]
  434d00:	cbz	x1, 4351fc <argp_parse@@Base+0x1314>
  434d04:	mov	x0, x1
  434d08:	bl	403ff0 <strlen@plt>
  434d0c:	add	x1, x0, #0x1
  434d10:	add	x2, x24, #0x1
  434d14:	mov	x0, #0x9                   	// #9
  434d18:	cmp	x1, x0
  434d1c:	csel	x0, x1, x0, cs  // cs = hs, nlast
  434d20:	str	x2, [sp, #120]
  434d24:	add	x0, x0, x2
  434d28:	str	x0, [sp, #152]
  434d2c:	str	x1, [sp, #176]
  434d30:	bl	404310 <malloc@plt>
  434d34:	mov	x19, x0
  434d38:	cbz	x0, 434fe4 <argp_parse@@Base+0x10fc>
  434d3c:	add	x0, x24, #0x4
  434d40:	mov	x22, #0x0                   	// #0
  434d44:	stp	x27, x28, [sp, #80]
  434d48:	str	xzr, [sp, #144]
  434d4c:	str	x0, [sp, #160]
  434d50:	mov	w0, #0xffffffff            	// #-1
  434d54:	str	w0, [sp, #204]
  434d58:	ldr	x2, [sp, #120]
  434d5c:	mov	x1, x23
  434d60:	mov	x0, x19
  434d64:	bl	403f70 <memcpy@plt>
  434d68:	cmp	w25, #0x1
  434d6c:	b.eq	435000 <argp_parse@@Base+0x1118>  // b.none
  434d70:	add	x27, x19, x21
  434d74:	mov	x0, x27
  434d78:	bl	4355b8 <argp_parse@@Base+0x16d0>
  434d7c:	mov	x20, x0
  434d80:	cbz	x22, 4350d0 <argp_parse@@Base+0x11e8>
  434d84:	mov	x0, x22
  434d88:	bl	404750 <rewinddir@plt>
  434d8c:	ldr	x0, [sp, #152]
  434d90:	str	x0, [sp, #104]
  434d94:	add	x0, x20, #0x4
  434d98:	add	x20, x20, #0x2
  434d9c:	mov	x27, #0x1                   	// #1
  434da0:	mov	w26, #0x2                   	// #2
  434da4:	str	x0, [sp, #112]
  434da8:	mov	x0, x22
  434dac:	bl	404520 <readdir@plt>
  434db0:	cbz	x0, 434f60 <argp_parse@@Base+0x1078>
  434db4:	add	x28, x0, #0x13
  434db8:	mov	x0, x28
  434dbc:	bl	403ff0 <strlen@plt>
  434dc0:	ldr	x1, [sp, #112]
  434dc4:	cmp	x0, x1
  434dc8:	b.cc	434da8 <argp_parse@@Base+0xec0>  // b.lo, b.ul, b.last
  434dcc:	mov	x2, x20
  434dd0:	mov	x1, x28
  434dd4:	add	x0, x19, x21
  434dd8:	bl	4046d0 <memcmp@plt>
  434ddc:	cbnz	w0, 434da8 <argp_parse@@Base+0xec0>
  434de0:	ldrb	w2, [x28, x20]
  434de4:	add	x3, x28, x20
  434de8:	sub	w0, w2, #0x31
  434dec:	and	w0, w0, #0xff
  434df0:	cmp	w0, #0x8
  434df4:	b.hi	434da8 <argp_parse@@Base+0xec0>  // b.pmore
  434df8:	ldrb	w0, [x3, #1]
  434dfc:	cmp	w2, #0x39
  434e00:	cset	w5, eq  // eq = none
  434e04:	mov	x4, #0x1                   	// #1
  434e08:	sub	w1, w0, #0x30
  434e0c:	cmp	w1, #0x9
  434e10:	b.hi	434e34 <argp_parse@@Base+0xf4c>  // b.pmore
  434e14:	nop
  434e18:	add	x4, x4, #0x1
  434e1c:	cmp	w0, #0x39
  434e20:	csel	w5, w5, wzr, eq  // eq = none
  434e24:	ldrb	w0, [x3, x4]
  434e28:	sub	w1, w0, #0x30
  434e2c:	cmp	w1, #0x9
  434e30:	b.ls	434e18 <argp_parse@@Base+0xf30>  // b.plast
  434e34:	cmp	w0, #0x7e
  434e38:	b.ne	434da8 <argp_parse@@Base+0xec0>  // b.any
  434e3c:	add	x0, x3, x4
  434e40:	ldrb	w0, [x0, #1]
  434e44:	cbnz	w0, 434da8 <argp_parse@@Base+0xec0>
  434e48:	cmp	x27, x4
  434e4c:	b.cc	434e88 <argp_parse@@Base+0xfa0>  // b.lo, b.ul, b.last
  434e50:	str	x4, [sp, #128]
  434e54:	str	w5, [sp, #136]
  434e58:	b.ne	434da8 <argp_parse@@Base+0xec0>  // b.any
  434e5c:	add	x0, x24, #0x2
  434e60:	mov	x1, x3
  434e64:	mov	x2, x27
  434e68:	add	x0, x19, x0
  434e6c:	str	x3, [sp, #168]
  434e70:	bl	4046d0 <memcmp@plt>
  434e74:	ldr	w5, [sp, #136]
  434e78:	cmp	w0, #0x0
  434e7c:	ldr	x4, [sp, #128]
  434e80:	ldr	x3, [sp, #168]
  434e84:	b.gt	434da8 <argp_parse@@Base+0xec0>
  434e88:	ldr	x0, [sp, #160]
  434e8c:	and	x6, x5, #0xff
  434e90:	ldr	x1, [sp, #104]
  434e94:	add	x27, x6, x4
  434e98:	add	x0, x0, x27
  434e9c:	mov	w26, w5
  434ea0:	cmp	x0, x1
  434ea4:	b.ls	4351a0 <argp_parse@@Base+0x12b8>  // b.plast
  434ea8:	cmp	x0, #0x0
  434eac:	lsl	x2, x0, #1
  434eb0:	cset	x1, lt  // lt = tstop
  434eb4:	tbnz	x0, #62, 435198 <argp_parse@@Base+0x12b0>
  434eb8:	cbnz	x1, 435198 <argp_parse@@Base+0x12b0>
  434ebc:	str	x2, [sp, #104]
  434ec0:	ldr	x1, [sp, #104]
  434ec4:	mov	x0, x19
  434ec8:	stp	x4, x3, [sp, #128]
  434ecc:	str	x6, [sp, #168]
  434ed0:	bl	404530 <realloc@plt>
  434ed4:	mov	x5, x0
  434ed8:	ldp	x4, x3, [sp, #128]
  434edc:	ldr	x6, [sp, #168]
  434ee0:	cbz	x0, 435160 <argp_parse@@Base+0x1278>
  434ee4:	add	x0, x5, x24
  434ee8:	mov	w1, #0x7e2e                	// #32302
  434eec:	add	x2, x0, #0x2
  434ef0:	strh	w1, [x5, x24]
  434ef4:	add	x6, x2, x6
  434ef8:	mov	x1, x3
  434efc:	mov	w3, #0x30                  	// #48
  434f00:	strb	w3, [x0, #2]
  434f04:	add	x2, x4, #0x2
  434f08:	mov	x0, x6
  434f0c:	stp	x4, x5, [sp, #128]
  434f10:	bl	403f70 <memcpy@plt>
  434f14:	ldp	x4, x5, [sp, #128]
  434f18:	add	x4, x0, x4
  434f1c:	sub	x2, x4, #0x1
  434f20:	ldurb	w1, [x4, #-1]
  434f24:	cmp	w1, #0x39
  434f28:	b.ne	434f44 <argp_parse@@Base+0x105c>  // b.any
  434f2c:	nop
  434f30:	mov	w0, #0x30                  	// #48
  434f34:	strb	w0, [x2]
  434f38:	ldrb	w1, [x2, #-1]!
  434f3c:	cmp	w1, #0x39
  434f40:	b.eq	434f30 <argp_parse@@Base+0x1048>  // b.none
  434f44:	add	w1, w1, #0x1
  434f48:	strb	w1, [x2]
  434f4c:	mov	x19, x5
  434f50:	mov	x0, x22
  434f54:	bl	404520 <readdir@plt>
  434f58:	cbnz	x0, 434db4 <argp_parse@@Base+0xecc>
  434f5c:	nop
  434f60:	cmp	w26, #0x2
  434f64:	b.eq	435018 <argp_parse@@Base+0x1130>  // b.none
  434f68:	cmp	w26, #0x1
  434f6c:	b.eq	435038 <argp_parse@@Base+0x1150>  // b.none
  434f70:	ldr	w0, [sp, #184]
  434f74:	cbz	w0, 4351d0 <argp_parse@@Base+0x12e8>
  434f78:	ldr	w2, [sp, #204]
  434f7c:	add	x3, x19, x21
  434f80:	tbz	w2, #31, 434f98 <argp_parse@@Base+0x10b0>
  434f84:	mov	w0, #0xffffff9c            	// #-100
  434f88:	mov	x3, x19
  434f8c:	mov	w2, w0
  434f90:	mov	x21, #0x0                   	// #0
  434f94:	str	w0, [sp, #204]
  434f98:	cmp	w25, #0x1
  434f9c:	mov	x1, x23
  434fa0:	cset	w4, ne  // ne = any
  434fa4:	mov	w0, #0xffffff9c            	// #-100
  434fa8:	bl	440268 <argp_parse@@Base+0xc380>
  434fac:	cbz	w0, 4351d0 <argp_parse@@Base+0x12e8>
  434fb0:	bl	404ad0 <__errno_location@plt>
  434fb4:	ldr	w26, [x0]
  434fb8:	mov	x20, x0
  434fbc:	cmp	w26, #0x11
  434fc0:	b.eq	434d58 <argp_parse@@Base+0xe70>  // b.none
  434fc4:	cbz	x22, 434fd0 <argp_parse@@Base+0x10e8>
  434fc8:	mov	x0, x22
  434fcc:	bl	404590 <closedir@plt>
  434fd0:	mov	x0, x19
  434fd4:	mov	x19, #0x0                   	// #0
  434fd8:	bl	4047b0 <free@plt>
  434fdc:	ldp	x27, x28, [sp, #80]
  434fe0:	str	w26, [x20]
  434fe4:	mov	x0, x19
  434fe8:	ldp	x19, x20, [sp, #16]
  434fec:	ldp	x21, x22, [sp, #32]
  434ff0:	ldp	x23, x24, [sp, #48]
  434ff4:	ldp	x25, x26, [sp, #64]
  434ff8:	ldp	x29, x30, [sp], #208
  434ffc:	ret
  435000:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  435004:	ldr	x2, [sp, #176]
  435008:	ldr	x1, [x0, #3464]
  43500c:	add	x0, x19, x24
  435010:	bl	403f70 <memcpy@plt>
  435014:	b	434f70 <argp_parse@@Base+0x1088>
  435018:	cmp	w25, #0x2
  43501c:	b.ne	435038 <argp_parse@@Base+0x1150>  // b.any
  435020:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  435024:	mov	w25, #0x1                   	// #1
  435028:	ldr	x2, [sp, #176]
  43502c:	ldr	x1, [x0, #3464]
  435030:	add	x0, x19, x24
  435034:	bl	403f70 <memcpy@plt>
  435038:	mov	x0, x19
  43503c:	bl	435560 <argp_parse@@Base+0x1678>
  435040:	mov	x20, x0
  435044:	bl	4355b8 <argp_parse@@Base+0x16d0>
  435048:	mov	x26, x0
  43504c:	cmp	x0, #0xe
  435050:	b.ls	434f70 <argp_parse@@Base+0x1088>  // b.plast
  435054:	ldr	x0, [sp, #144]
  435058:	cbnz	x0, 43509c <argp_parse@@Base+0x11b4>
  43505c:	ldr	w1, [sp, #204]
  435060:	str	w1, [sp, #104]
  435064:	bl	404ad0 <__errno_location@plt>
  435068:	mov	x27, x0
  43506c:	ldr	w1, [sp, #104]
  435070:	tbnz	w1, #31, 435210 <argp_parse@@Base+0x1328>
  435074:	str	wzr, [x27]
  435078:	mov	w0, w1
  43507c:	mov	w1, #0x3                   	// #3
  435080:	bl	4046a0 <fpathconf@plt>
  435084:	ldr	w1, [x27]
  435088:	cmp	w1, #0x0
  43508c:	cset	x1, eq  // eq = none
  435090:	sub	x0, x0, x1
  435094:	str	x0, [sp, #144]
  435098:	tbnz	x0, #63, 4351b8 <argp_parse@@Base+0x12d0>
  43509c:	ldr	x0, [sp, #144]
  4350a0:	cmp	x26, x0
  4350a4:	b.ls	434f70 <argp_parse@@Base+0x1088>  // b.plast
  4350a8:	ldr	x2, [sp, #144]
  4350ac:	add	x0, x19, x24
  4350b0:	sub	x1, x0, x20
  4350b4:	cmp	x1, x2
  4350b8:	b.cs	4351a8 <argp_parse@@Base+0x12c0>  // b.hs, b.nlast
  4350bc:	add	x1, x1, #0x1
  4350c0:	mov	w2, #0x7e                  	// #126
  4350c4:	strb	w2, [x0]
  4350c8:	strb	wzr, [x20, x1]
  4350cc:	b	434f70 <argp_parse@@Base+0x1088>
  4350d0:	mov	w0, #0x2e                  	// #46
  4350d4:	ldrh	w26, [x19, x21]
  4350d8:	strh	w0, [x19, x21]
  4350dc:	mov	x1, x19
  4350e0:	ldr	w0, [sp, #188]
  4350e4:	add	x3, sp, #0xcc
  4350e8:	mov	w2, #0x0                   	// #0
  4350ec:	bl	43a5e0 <argp_parse@@Base+0x66f8>
  4350f0:	mov	x22, x0
  4350f4:	add	x1, x27, x20
  4350f8:	cbz	x0, 43511c <argp_parse@@Base+0x1234>
  4350fc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  435100:	add	x0, x0, #0x5a8
  435104:	strh	w26, [x27]
  435108:	ldr	w2, [x0]
  43510c:	ldrb	w0, [x0, #4]
  435110:	str	w2, [x27, x20]
  435114:	strb	w0, [x1, #4]
  435118:	b	434d8c <argp_parse@@Base+0xea4>
  43511c:	str	x1, [sp, #104]
  435120:	bl	404ad0 <__errno_location@plt>
  435124:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  435128:	add	x2, x2, #0x5a8
  43512c:	ldr	x1, [sp, #104]
  435130:	strh	w26, [x27]
  435134:	ldr	w0, [x0]
  435138:	ldr	w3, [x2]
  43513c:	ldrb	w2, [x2, #4]
  435140:	cmp	w0, #0xc
  435144:	str	w3, [x27, x20]
  435148:	cset	w0, eq  // eq = none
  43514c:	strb	w2, [x1, #4]
  435150:	add	w26, w0, #0x2
  435154:	cbz	w0, 435018 <argp_parse@@Base+0x1130>
  435158:	cmp	w26, #0x3
  43515c:	b.ne	434f68 <argp_parse@@Base+0x1080>  // b.any
  435160:	mov	x0, x19
  435164:	bl	4047b0 <free@plt>
  435168:	mov	x19, #0x0                   	// #0
  43516c:	bl	404ad0 <__errno_location@plt>
  435170:	mov	w1, #0xc                   	// #12
  435174:	ldp	x27, x28, [sp, #80]
  435178:	str	w1, [x0]
  43517c:	mov	x0, x19
  435180:	ldp	x19, x20, [sp, #16]
  435184:	ldp	x21, x22, [sp, #32]
  435188:	ldp	x23, x24, [sp, #48]
  43518c:	ldp	x25, x26, [sp, #64]
  435190:	ldp	x29, x30, [sp], #208
  435194:	ret
  435198:	str	x0, [sp, #104]
  43519c:	b	434ec0 <argp_parse@@Base+0xfd8>
  4351a0:	mov	x5, x19
  4351a4:	b	434ee4 <argp_parse@@Base+0xffc>
  4351a8:	ldr	x1, [sp, #144]
  4351ac:	sub	x0, x1, #0x1
  4351b0:	add	x0, x20, x0
  4351b4:	b	4350c0 <argp_parse@@Base+0x11d8>
  4351b8:	mov	x1, #0xe                   	// #14
  4351bc:	str	x1, [sp, #144]
  4351c0:	cmn	x0, #0x1
  4351c4:	b.ne	4350a8 <argp_parse@@Base+0x11c0>  // b.any
  4351c8:	str	x0, [sp, #144]
  4351cc:	b	434f70 <argp_parse@@Base+0x1088>
  4351d0:	cbz	x22, 43524c <argp_parse@@Base+0x1364>
  4351d4:	mov	x0, x22
  4351d8:	bl	404590 <closedir@plt>
  4351dc:	mov	x0, x19
  4351e0:	ldp	x19, x20, [sp, #16]
  4351e4:	ldp	x21, x22, [sp, #32]
  4351e8:	ldp	x23, x24, [sp, #48]
  4351ec:	ldp	x25, x26, [sp, #64]
  4351f0:	ldp	x27, x28, [sp, #80]
  4351f4:	ldp	x29, x30, [sp], #208
  4351f8:	ret
  4351fc:	mov	x0, #0x0                   	// #0
  435200:	bl	434c40 <argp_parse@@Base+0xd58>
  435204:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  435208:	ldr	x1, [x0, #3464]
  43520c:	b	434d04 <argp_parse@@Base+0xe1c>
  435210:	ldrh	w2, [x20]
  435214:	mov	w0, #0x2e                  	// #46
  435218:	strh	w0, [x20]
  43521c:	mov	w1, #0x3                   	// #3
  435220:	str	wzr, [x27]
  435224:	mov	x0, x19
  435228:	str	w2, [sp, #104]
  43522c:	bl	4041b0 <pathconf@plt>
  435230:	ldr	w1, [x27]
  435234:	ldr	w2, [sp, #104]
  435238:	cmp	w1, #0x0
  43523c:	strh	w2, [x20]
  435240:	cset	x1, eq  // eq = none
  435244:	sub	x0, x0, x1
  435248:	b	435094 <argp_parse@@Base+0x11ac>
  43524c:	ldp	x27, x28, [sp, #80]
  435250:	b	434fe4 <argp_parse@@Base+0x10fc>
  435254:	nop
  435258:	stp	x29, x30, [sp, #-32]!
  43525c:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  435260:	mov	x4, #0x4                   	// #4
  435264:	mov	x29, sp
  435268:	ldr	x5, [x2, #920]
  43526c:	str	x19, [sp, #16]
  435270:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x19e10>
  435274:	add	x19, x19, #0x618
  435278:	mov	x3, x19
  43527c:	add	x2, x19, #0x20
  435280:	bl	430500 <wcrtomb@plt+0x2b8e0>
  435284:	ldr	w0, [x19, x0, lsl #2]
  435288:	ldr	x19, [sp, #16]
  43528c:	ldp	x29, x30, [sp], #32
  435290:	ret
  435294:	nop
  435298:	stp	x29, x30, [sp, #-16]!
  43529c:	mov	w3, #0x0                   	// #0
  4352a0:	mov	x29, sp
  4352a4:	bl	434cb8 <argp_parse@@Base+0xdd0>
  4352a8:	cbz	x0, 4352b4 <argp_parse@@Base+0x13cc>
  4352ac:	ldp	x29, x30, [sp], #16
  4352b0:	ret
  4352b4:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  4352b8:	cbz	x1, 4352c4 <argp_parse@@Base+0x13dc>
  4352bc:	ldrb	w2, [x1]
  4352c0:	cbnz	w2, 4352cc <argp_parse@@Base+0x13e4>
  4352c4:	mov	w0, #0x2                   	// #2
  4352c8:	ret
  4352cc:	b	435258 <argp_parse@@Base+0x1370>
  4352d0:	cbz	x1, 4352dc <argp_parse@@Base+0x13f4>
  4352d4:	ldrb	w2, [x1]
  4352d8:	cbnz	w2, 435318 <argp_parse@@Base+0x1430>
  4352dc:	stp	x29, x30, [sp, #-16]!
  4352e0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4352e4:	add	x0, x0, #0x5b0
  4352e8:	mov	x29, sp
  4352ec:	bl	404af0 <getenv@plt>
  4352f0:	mov	x1, x0
  4352f4:	cbz	x0, 435300 <argp_parse@@Base+0x1418>
  4352f8:	ldrb	w0, [x0]
  4352fc:	cbnz	w0, 43530c <argp_parse@@Base+0x1424>
  435300:	mov	w0, #0x2                   	// #2
  435304:	ldp	x29, x30, [sp], #16
  435308:	ret
  43530c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  435310:	add	x0, x0, #0x5c0
  435314:	ldp	x29, x30, [sp], #16
  435318:	b	435258 <argp_parse@@Base+0x1370>
  43531c:	nop
  435320:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  435324:	str	x0, [x1, #3472]
  435328:	ret
  43532c:	nop
  435330:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  435334:	strb	w0, [x1, #3480]
  435338:	ret
  43533c:	nop
  435340:	stp	x29, x30, [sp, #-48]!
  435344:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  435348:	mov	x29, sp
  43534c:	ldr	x0, [x0, #1104]
  435350:	bl	44fc90 <_obstack_memory_used@@Base+0xdaa0>
  435354:	cbz	w0, 43538c <argp_parse@@Base+0x14a4>
  435358:	stp	x19, x20, [sp, #16]
  43535c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  435360:	add	x0, x20, #0xd90
  435364:	str	x21, [sp, #32]
  435368:	ldrb	w21, [x0, #8]
  43536c:	bl	404ad0 <__errno_location@plt>
  435370:	mov	x19, x0
  435374:	cbz	w21, 4353a4 <argp_parse@@Base+0x14bc>
  435378:	ldr	w0, [x0]
  43537c:	cmp	w0, #0x20
  435380:	b.ne	4353a4 <argp_parse@@Base+0x14bc>  // b.any
  435384:	ldp	x19, x20, [sp, #16]
  435388:	ldr	x21, [sp, #32]
  43538c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  435390:	ldr	x0, [x0, #1096]
  435394:	bl	44fc90 <_obstack_memory_used@@Base+0xdaa0>
  435398:	cbnz	w0, 4353f8 <argp_parse@@Base+0x1510>
  43539c:	ldp	x29, x30, [sp], #48
  4353a0:	ret
  4353a4:	mov	w2, #0x5                   	// #5
  4353a8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4353ac:	mov	x0, #0x0                   	// #0
  4353b0:	add	x1, x1, #0x680
  4353b4:	bl	4049c0 <dcgettext@plt>
  4353b8:	ldr	x2, [x20, #3472]
  4353bc:	mov	x20, x0
  4353c0:	cbz	x2, 435404 <argp_parse@@Base+0x151c>
  4353c4:	ldr	w19, [x19]
  4353c8:	mov	x0, x2
  4353cc:	bl	4400b8 <argp_parse@@Base+0xc1d0>
  4353d0:	mov	x3, x0
  4353d4:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  4353d8:	mov	w1, w19
  4353dc:	mov	x4, x20
  4353e0:	add	x2, x2, #0x9e8
  4353e4:	mov	w0, #0x0                   	// #0
  4353e8:	bl	404050 <error@plt>
  4353ec:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4353f0:	ldr	w0, [x0, #968]
  4353f4:	bl	403f90 <_exit@plt>
  4353f8:	stp	x19, x20, [sp, #16]
  4353fc:	str	x21, [sp, #32]
  435400:	b	4353ec <argp_parse@@Base+0x1504>
  435404:	ldr	w1, [x19]
  435408:	mov	x3, x0
  43540c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  435410:	mov	w0, #0x0                   	// #0
  435414:	add	x2, x2, #0xb68
  435418:	bl	404050 <error@plt>
  43541c:	b	4353ec <argp_parse@@Base+0x1504>
  435420:	stp	x29, x30, [sp, #-16]!
  435424:	mov	x29, sp
  435428:	bl	4354f0 <argp_parse@@Base+0x1608>
  43542c:	cbz	x0, 435438 <argp_parse@@Base+0x1550>
  435430:	ldp	x29, x30, [sp], #16
  435434:	ret
  435438:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  43543c:	nop
  435440:	stp	x29, x30, [sp, #-32]!
  435444:	mov	x29, sp
  435448:	stp	x19, x20, [sp, #16]
  43544c:	mov	x20, x0
  435450:	bl	435560 <argp_parse@@Base+0x1678>
  435454:	ldrb	w1, [x0]
  435458:	cbz	w1, 435484 <argp_parse@@Base+0x159c>
  43545c:	mov	x19, x0
  435460:	bl	4355b8 <argp_parse@@Base+0x16d0>
  435464:	mov	x1, x0
  435468:	mov	x0, x19
  43546c:	ldrb	w2, [x19, x1]
  435470:	ldp	x19, x20, [sp, #16]
  435474:	cmp	w2, #0x2f
  435478:	ldp	x29, x30, [sp], #32
  43547c:	cinc	x1, x1, eq  // eq = none
  435480:	b	4411e8 <argp_parse@@Base+0xd300>
  435484:	mov	x0, x20
  435488:	bl	4355b8 <argp_parse@@Base+0x16d0>
  43548c:	mov	x1, x0
  435490:	mov	x0, x20
  435494:	ldp	x19, x20, [sp, #16]
  435498:	ldp	x29, x30, [sp], #32
  43549c:	b	4411e8 <argp_parse@@Base+0xd300>
  4354a0:	stp	x29, x30, [sp, #-32]!
  4354a4:	mov	x29, sp
  4354a8:	stp	x19, x20, [sp, #16]
  4354ac:	mov	x19, x0
  4354b0:	ldrb	w1, [x0]
  4354b4:	cmp	w1, #0x2f
  4354b8:	cset	x20, eq  // eq = none
  4354bc:	bl	435560 <argp_parse@@Base+0x1678>
  4354c0:	sub	x0, x0, x19
  4354c4:	b	4354d8 <argp_parse@@Base+0x15f0>
  4354c8:	ldrb	w2, [x19, x1]
  4354cc:	cmp	w2, #0x2f
  4354d0:	b.ne	4354e4 <argp_parse@@Base+0x15fc>  // b.any
  4354d4:	mov	x0, x1
  4354d8:	sub	x1, x0, #0x1
  4354dc:	cmp	x0, x20
  4354e0:	b.hi	4354c8 <argp_parse@@Base+0x15e0>  // b.pmore
  4354e4:	ldp	x19, x20, [sp, #16]
  4354e8:	ldp	x29, x30, [sp], #32
  4354ec:	ret
  4354f0:	stp	x29, x30, [sp, #-48]!
  4354f4:	mov	x29, sp
  4354f8:	stp	x19, x20, [sp, #16]
  4354fc:	str	x21, [sp, #32]
  435500:	mov	x21, x0
  435504:	bl	4354a0 <argp_parse@@Base+0x15b8>
  435508:	cmp	x0, #0x0
  43550c:	mov	x19, x0
  435510:	add	x0, x0, #0x1
  435514:	cinc	x0, x0, eq  // eq = none
  435518:	bl	404310 <malloc@plt>
  43551c:	mov	x20, x0
  435520:	cbz	x0, 435538 <argp_parse@@Base+0x1650>
  435524:	mov	x1, x21
  435528:	mov	x2, x19
  43552c:	bl	403f70 <memcpy@plt>
  435530:	cbz	x19, 43554c <argp_parse@@Base+0x1664>
  435534:	strb	wzr, [x20, x19]
  435538:	mov	x0, x20
  43553c:	ldp	x19, x20, [sp, #16]
  435540:	ldr	x21, [sp, #32]
  435544:	ldp	x29, x30, [sp], #48
  435548:	ret
  43554c:	mov	w0, #0x2e                  	// #46
  435550:	mov	x19, #0x1                   	// #1
  435554:	strb	w0, [x20]
  435558:	b	435534 <argp_parse@@Base+0x164c>
  43555c:	nop
  435560:	ldrb	w1, [x0]
  435564:	cmp	w1, #0x2f
  435568:	b.ne	43557c <argp_parse@@Base+0x1694>  // b.any
  43556c:	nop
  435570:	ldrb	w1, [x0, #1]!
  435574:	cmp	w1, #0x2f
  435578:	b.eq	435570 <argp_parse@@Base+0x1688>  // b.none
  43557c:	cbz	w1, 4355b4 <argp_parse@@Base+0x16cc>
  435580:	mov	x2, x0
  435584:	mov	w3, #0x0                   	// #0
  435588:	b	4355a0 <argp_parse@@Base+0x16b8>
  43558c:	cbz	w3, 435598 <argp_parse@@Base+0x16b0>
  435590:	mov	x0, x2
  435594:	mov	w3, #0x0                   	// #0
  435598:	ldrb	w1, [x2, #1]!
  43559c:	cbz	w1, 4355b4 <argp_parse@@Base+0x16cc>
  4355a0:	cmp	w1, #0x2f
  4355a4:	b.ne	43558c <argp_parse@@Base+0x16a4>  // b.any
  4355a8:	ldrb	w1, [x2, #1]!
  4355ac:	mov	w3, #0x1                   	// #1
  4355b0:	cbnz	w1, 4355a0 <argp_parse@@Base+0x16b8>
  4355b4:	ret
  4355b8:	stp	x29, x30, [sp, #-32]!
  4355bc:	mov	x29, sp
  4355c0:	str	x19, [sp, #16]
  4355c4:	mov	x19, x0
  4355c8:	bl	403ff0 <strlen@plt>
  4355cc:	subs	x1, x0, #0x1
  4355d0:	b.ls	4355e0 <argp_parse@@Base+0x16f8>  // b.plast
  4355d4:	ldrb	w2, [x19, x1]
  4355d8:	cmp	w2, #0x2f
  4355dc:	b.eq	4355ec <argp_parse@@Base+0x1704>  // b.none
  4355e0:	ldr	x19, [sp, #16]
  4355e4:	ldp	x29, x30, [sp], #32
  4355e8:	ret
  4355ec:	mov	x0, x1
  4355f0:	b	4355cc <argp_parse@@Base+0x16e4>
  4355f4:	nop
  4355f8:	stp	x29, x30, [sp, #-32]!
  4355fc:	mov	x29, sp
  435600:	str	x19, [sp, #16]
  435604:	mov	x19, x0
  435608:	bl	435560 <argp_parse@@Base+0x1678>
  43560c:	ldrb	w1, [x0]
  435610:	cmp	w1, #0x0
  435614:	csel	x19, x19, x0, eq  // eq = none
  435618:	mov	x0, x19
  43561c:	bl	4355b8 <argp_parse@@Base+0x16d0>
  435620:	ldrb	w1, [x19, x0]
  435624:	strb	wzr, [x19, x0]
  435628:	cmp	w1, #0x0
  43562c:	cset	w0, ne  // ne = any
  435630:	ldr	x19, [sp, #16]
  435634:	ldp	x29, x30, [sp], #32
  435638:	ret
  43563c:	nop
  435640:	ldr	x3, [x3]
  435644:	mov	x16, x3
  435648:	br	x16
  43564c:	nop
  435650:	b	4047b0 <free@plt>
  435654:	nop
  435658:	stp	x29, x30, [sp, #-16]!
  43565c:	mov	x29, sp
  435660:	bl	439a40 <argp_parse@@Base+0x5b58>
  435664:	cmp	w0, #0x0
  435668:	cset	w0, eq  // eq = none
  43566c:	ldp	x29, x30, [sp], #16
  435670:	ret
  435674:	nop
  435678:	stp	x29, x30, [sp, #-16]!
  43567c:	mov	x29, sp
  435680:	bl	404710 <strcmp@plt>
  435684:	cmp	w0, #0x0
  435688:	cset	w0, eq  // eq = none
  43568c:	ldp	x29, x30, [sp], #16
  435690:	ret
  435694:	nop
  435698:	b	438708 <argp_parse@@Base+0x4820>
  43569c:	nop
  4356a0:	and	w3, w2, #0x10
  4356a4:	tbz	w2, #3, 43577c <argp_parse@@Base+0x1894>
  4356a8:	stp	x29, x30, [sp, #-64]!
  4356ac:	mov	x29, sp
  4356b0:	stp	x19, x20, [sp, #16]
  4356b4:	mov	x19, x1
  4356b8:	stp	x21, x22, [sp, #32]
  4356bc:	mov	x21, x0
  4356c0:	cbnz	w3, 435704 <argp_parse@@Base+0x181c>
  4356c4:	bl	403ff0 <strlen@plt>
  4356c8:	mov	x22, x0
  4356cc:	mov	x2, x22
  4356d0:	mov	x0, x21
  4356d4:	mov	x1, x19
  4356d8:	bl	4043c0 <strncmp@plt>
  4356dc:	mov	w20, w0
  4356e0:	cbnz	w0, 4356f0 <argp_parse@@Base+0x1808>
  4356e4:	ldrb	w20, [x19, x22]
  4356e8:	cmp	w20, #0x2f
  4356ec:	csel	w20, wzr, w20, eq  // eq = none
  4356f0:	mov	w0, w20
  4356f4:	ldp	x19, x20, [sp, #16]
  4356f8:	ldp	x21, x22, [sp, #32]
  4356fc:	ldp	x29, x30, [sp], #64
  435700:	ret
  435704:	mov	x0, x1
  435708:	str	x23, [sp, #48]
  43570c:	bl	441170 <argp_parse@@Base+0xd288>
  435710:	mov	w23, #0x2f                  	// #47
  435714:	mov	x22, x0
  435718:	mov	x19, x0
  43571c:	b	435738 <argp_parse@@Base+0x1850>
  435720:	strb	wzr, [x19]
  435724:	bl	439a40 <argp_parse@@Base+0x5b58>
  435728:	mov	w20, w0
  43572c:	cmp	w0, #0x0
  435730:	b.le	43575c <argp_parse@@Base+0x1874>
  435734:	strb	w23, [x19], #1
  435738:	mov	x0, x19
  43573c:	mov	w1, #0x2f                  	// #47
  435740:	bl	404870 <strchr@plt>
  435744:	mov	x19, x0
  435748:	mov	x1, x22
  43574c:	mov	x0, x21
  435750:	cbnz	x19, 435720 <argp_parse@@Base+0x1838>
  435754:	bl	439a40 <argp_parse@@Base+0x5b58>
  435758:	mov	w20, w0
  43575c:	mov	x0, x22
  435760:	bl	4047b0 <free@plt>
  435764:	mov	w0, w20
  435768:	ldp	x19, x20, [sp, #16]
  43576c:	ldp	x21, x22, [sp, #32]
  435770:	ldr	x23, [sp, #48]
  435774:	ldp	x29, x30, [sp], #64
  435778:	ret
  43577c:	cbz	w3, 435784 <argp_parse@@Base+0x189c>
  435780:	b	439a40 <argp_parse@@Base+0x5b58>
  435784:	b	404710 <strcmp@plt>
  435788:	stp	x29, x30, [sp, #-144]!
  43578c:	mov	x29, sp
  435790:	strb	wzr, [sp, #80]
  435794:	str	x0, [sp, #96]
  435798:	ldrb	w0, [sp, #80]
  43579c:	stp	x19, x20, [sp, #16]
  4357a0:	mov	x19, #0x0                   	// #0
  4357a4:	stp	x21, x22, [sp, #32]
  4357a8:	mov	x21, x1
  4357ac:	mov	w22, #0x1                   	// #1
  4357b0:	stp	x23, x24, [sp, #48]
  4357b4:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4357b8:	add	x24, sp, #0x54
  4357bc:	str	x25, [sp, #64]
  4357c0:	add	x23, x23, #0x9d8
  4357c4:	stur	xzr, [sp, #84]
  4357c8:	strb	wzr, [sp, #92]
  4357cc:	ldr	x20, [sp, #96]
  4357d0:	cbnz	w0, 43584c <argp_parse@@Base+0x1964>
  4357d4:	nop
  4357d8:	ldrb	w1, [x20]
  4357dc:	ubfx	x0, x1, #5, #3
  4357e0:	ldr	w0, [x23, x0, lsl #2]
  4357e4:	lsr	w0, w0, w1
  4357e8:	tbz	w0, #0, 4358e8 <argp_parse@@Base+0x1a00>
  4357ec:	mov	x0, #0x1                   	// #1
  4357f0:	str	x0, [sp, #104]
  4357f4:	ldrb	w25, [x20]
  4357f8:	strb	w0, [sp, #92]
  4357fc:	strb	w0, [sp, #112]
  435800:	str	w25, [sp, #116]
  435804:	cbz	w25, 4358c4 <argp_parse@@Base+0x19dc>
  435808:	ldrb	w0, [sp, #112]
  43580c:	ldr	x20, [sp, #96]
  435810:	cbz	w0, 4358e0 <argp_parse@@Base+0x19f8>
  435814:	mov	w0, w25
  435818:	bl	404b80 <towlower@plt>
  43581c:	lsl	x1, x19, #5
  435820:	strb	wzr, [sp, #92]
  435824:	sub	x19, x1, x19
  435828:	add	x0, x19, w0, uxtw
  43582c:	ldr	x1, [sp, #104]
  435830:	udiv	x19, x0, x21
  435834:	add	x20, x20, x1
  435838:	str	x20, [sp, #96]
  43583c:	ldr	x20, [sp, #96]
  435840:	msub	x19, x19, x21, x0
  435844:	ldrb	w0, [sp, #80]
  435848:	cbz	w0, 4357d8 <argp_parse@@Base+0x18f0>
  43584c:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  435850:	mov	x1, x0
  435854:	mov	x0, x20
  435858:	bl	4409c0 <argp_parse@@Base+0xcad8>
  43585c:	mov	x2, x0
  435860:	add	x0, sp, #0x50
  435864:	mov	x1, x20
  435868:	add	x3, sp, #0x54
  43586c:	add	x0, x0, #0x24
  435870:	bl	441e18 <argp_parse@@Base+0xdf30>
  435874:	str	x0, [sp, #104]
  435878:	cmn	x0, #0x1
  43587c:	b.eq	4358fc <argp_parse@@Base+0x1a14>  // b.none
  435880:	cmn	x0, #0x2
  435884:	b.eq	435914 <argp_parse@@Base+0x1a2c>  // b.none
  435888:	cbnz	x0, 435930 <argp_parse@@Base+0x1a48>
  43588c:	ldr	x0, [sp, #96]
  435890:	mov	x1, #0x1                   	// #1
  435894:	str	x1, [sp, #104]
  435898:	ldrb	w0, [x0]
  43589c:	cbnz	w0, 435978 <argp_parse@@Base+0x1a90>
  4358a0:	ldr	w25, [sp, #116]
  4358a4:	cbnz	w25, 435958 <argp_parse@@Base+0x1a70>
  4358a8:	add	x0, sp, #0x54
  4358ac:	strb	w22, [sp, #112]
  4358b0:	bl	404670 <mbsinit@plt>
  4358b4:	cbz	w0, 4358bc <argp_parse@@Base+0x19d4>
  4358b8:	strb	wzr, [sp, #80]
  4358bc:	strb	w22, [sp, #92]
  4358c0:	cbnz	w25, 435808 <argp_parse@@Base+0x1920>
  4358c4:	mov	x0, x19
  4358c8:	ldp	x19, x20, [sp, #16]
  4358cc:	ldp	x21, x22, [sp, #32]
  4358d0:	ldp	x23, x24, [sp, #48]
  4358d4:	ldr	x25, [sp, #64]
  4358d8:	ldp	x29, x30, [sp], #144
  4358dc:	ret
  4358e0:	ldrb	w0, [x20]
  4358e4:	b	43581c <argp_parse@@Base+0x1934>
  4358e8:	mov	x0, x24
  4358ec:	bl	404670 <mbsinit@plt>
  4358f0:	cbz	w0, 435938 <argp_parse@@Base+0x1a50>
  4358f4:	strb	w22, [sp, #80]
  4358f8:	b	43584c <argp_parse@@Base+0x1964>
  4358fc:	mov	x0, #0x1                   	// #1
  435900:	ldr	w25, [sp, #116]
  435904:	strb	w0, [sp, #92]
  435908:	str	x0, [sp, #104]
  43590c:	strb	wzr, [sp, #112]
  435910:	b	435808 <argp_parse@@Base+0x1920>
  435914:	ldr	x0, [sp, #96]
  435918:	bl	403ff0 <strlen@plt>
  43591c:	ldr	w25, [sp, #116]
  435920:	strb	w22, [sp, #92]
  435924:	str	x0, [sp, #104]
  435928:	strb	wzr, [sp, #112]
  43592c:	b	435808 <argp_parse@@Base+0x1920>
  435930:	ldr	w25, [sp, #116]
  435934:	b	4358a8 <argp_parse@@Base+0x19c0>
  435938:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43593c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  435940:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  435944:	add	x3, x3, #0x6f0
  435948:	add	x1, x1, #0x690
  43594c:	add	x0, x0, #0x6a0
  435950:	mov	w2, #0x96                  	// #150
  435954:	bl	404ac0 <__assert_fail@plt>
  435958:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43595c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  435960:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  435964:	add	x3, x3, #0x6f0
  435968:	add	x1, x1, #0x690
  43596c:	add	x0, x0, #0x6d0
  435970:	mov	w2, #0xb3                  	// #179
  435974:	bl	404ac0 <__assert_fail@plt>
  435978:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43597c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  435980:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  435984:	add	x3, x3, #0x6f0
  435988:	add	x1, x1, #0x690
  43598c:	add	x0, x0, #0x6b8
  435990:	mov	w2, #0xb2                  	// #178
  435994:	bl	404ac0 <__assert_fail@plt>
  435998:	stp	x29, x30, [sp, #-32]!
  43599c:	mov	x29, sp
  4359a0:	stp	x19, x20, [sp, #16]
  4359a4:	mov	x19, x0
  4359a8:	mov	x20, x1
  4359ac:	mov	x0, #0x10                  	// #16
  4359b0:	bl	440f48 <argp_parse@@Base+0xd060>
  4359b4:	ldr	x1, [x19, #8]
  4359b8:	stp	x1, x20, [x0]
  4359bc:	str	x0, [x19, #8]
  4359c0:	ldp	x19, x20, [sp, #16]
  4359c4:	ldp	x29, x30, [sp], #32
  4359c8:	ret
  4359cc:	nop
  4359d0:	and	w9, w1, #0x8000000
  4359d4:	and	w10, w1, #0x2
  4359d8:	and	w2, w1, #0x20
  4359dc:	ldrb	w1, [x0]
  4359e0:	mov	x7, #0x401                 	// #1025
  4359e4:	mov	x5, #0x200                 	// #512
  4359e8:	mov	x8, #0x1                   	// #1
  4359ec:	movk	x7, #0x8000, lsl #16
  4359f0:	mov	x6, #0x2180                	// #8576
  4359f4:	movk	x5, #0x4000, lsl #16
  4359f8:	cmp	w1, #0x40
  4359fc:	add	x4, x0, #0x1
  435a00:	b.hi	435a4c <argp_parse@@Base+0x1b64>  // b.pmore
  435a04:	cmp	w1, #0x20
  435a08:	b.hi	435a18 <argp_parse@@Base+0x1b30>  // b.pmore
  435a0c:	cbnz	w1, 435a38 <argp_parse@@Base+0x1b50>
  435a10:	mov	w0, #0x0                   	// #0
  435a14:	ret
  435a18:	sub	w1, w1, #0x21
  435a1c:	lsl	x1, x8, x1
  435a20:	tst	x1, x7
  435a24:	b.ne	435a84 <argp_parse@@Base+0x1b9c>  // b.any
  435a28:	tst	x1, x6
  435a2c:	b.ne	435a68 <argp_parse@@Base+0x1b80>  // b.any
  435a30:	tst	x1, x5
  435a34:	b.ne	435a6c <argp_parse@@Base+0x1b84>  // b.any
  435a38:	ldrb	w1, [x0, #1]
  435a3c:	mov	x0, x4
  435a40:	add	x4, x0, #0x1
  435a44:	cmp	w1, #0x40
  435a48:	b.ls	435a04 <argp_parse@@Base+0x1b1c>  // b.plast
  435a4c:	cmp	w1, #0x5c
  435a50:	b.eq	435a9c <argp_parse@@Base+0x1bb4>  // b.none
  435a54:	b.ls	435a74 <argp_parse@@Base+0x1b8c>  // b.plast
  435a58:	sub	w1, w1, #0x7b
  435a5c:	mov	w3, #0xfd                  	// #253
  435a60:	tst	w1, w3
  435a64:	b.ne	435a38 <argp_parse@@Base+0x1b50>  // b.any
  435a68:	cbz	w9, 435a38 <argp_parse@@Base+0x1b50>
  435a6c:	mov	w0, #0x1                   	// #1
  435a70:	ret
  435a74:	cmp	w1, #0x5b
  435a78:	b.ne	435a38 <argp_parse@@Base+0x1b50>  // b.any
  435a7c:	mov	w0, #0x1                   	// #1
  435a80:	b	435a70 <argp_parse@@Base+0x1b88>
  435a84:	cbz	w2, 435a38 <argp_parse@@Base+0x1b50>
  435a88:	ldrb	w1, [x0, #1]
  435a8c:	cmp	w1, #0x28
  435a90:	b.eq	435a6c <argp_parse@@Base+0x1b84>  // b.none
  435a94:	mov	x0, x4
  435a98:	b	4359f8 <argp_parse@@Base+0x1b10>
  435a9c:	cbnz	w9, 435a38 <argp_parse@@Base+0x1b50>
  435aa0:	cbnz	w10, 435ab4 <argp_parse@@Base+0x1bcc>
  435aa4:	ldrb	w1, [x0, #1]
  435aa8:	add	x0, x0, #0x2
  435aac:	cmp	w1, #0x0
  435ab0:	csel	x4, x0, x4, ne  // ne = any
  435ab4:	ldrb	w1, [x4]
  435ab8:	mov	x0, x4
  435abc:	b	4359f8 <argp_parse@@Base+0x1b10>
  435ac0:	mov	x0, #0x10                  	// #16
  435ac4:	b	4410e0 <argp_parse@@Base+0xd1f8>
  435ac8:	stp	x29, x30, [sp, #-64]!
  435acc:	mov	x29, sp
  435ad0:	stp	x21, x22, [sp, #32]
  435ad4:	ldr	x21, [x0]
  435ad8:	stp	x19, x20, [sp, #16]
  435adc:	str	x23, [sp, #48]
  435ae0:	mov	x23, x0
  435ae4:	cbz	x21, 435b5c <argp_parse@@Base+0x1c74>
  435ae8:	ldr	w1, [x21, #8]
  435aec:	mov	x19, x21
  435af0:	ldr	x21, [x21]
  435af4:	cbz	w1, 435b9c <argp_parse@@Base+0x1cb4>
  435af8:	cmp	w1, #0x1
  435afc:	b.ne	435b50 <argp_parse@@Base+0x1c68>  // b.any
  435b00:	ldr	x1, [x19, #32]
  435b04:	ldr	x0, [x19, #16]
  435b08:	cbz	x1, 435b4c <argp_parse@@Base+0x1c64>
  435b0c:	mov	x20, #0x0                   	// #0
  435b10:	mov	x22, #0x0                   	// #0
  435b14:	b	435b20 <argp_parse@@Base+0x1c38>
  435b18:	cmp	x22, x1
  435b1c:	b.cs	435b4c <argp_parse@@Base+0x1c64>  // b.hs, b.nlast
  435b20:	ldr	w2, [x0, x20]
  435b24:	add	x3, x0, x20
  435b28:	add	x22, x22, #0x1
  435b2c:	add	x20, x20, #0x48
  435b30:	tbz	w2, #27, 435b18 <argp_parse@@Base+0x1c30>
  435b34:	add	x0, x3, #0x8
  435b38:	bl	44ec28 <_obstack_memory_used@@Base+0xca38>
  435b3c:	ldr	x1, [x19, #32]
  435b40:	ldr	x0, [x19, #16]
  435b44:	cmp	x22, x1
  435b48:	b.cc	435b20 <argp_parse@@Base+0x1c38>  // b.lo, b.ul, b.last
  435b4c:	bl	4047b0 <free@plt>
  435b50:	mov	x0, x19
  435b54:	bl	4047b0 <free@plt>
  435b58:	cbnz	x21, 435ae8 <argp_parse@@Base+0x1c00>
  435b5c:	ldr	x19, [x23, #8]
  435b60:	cbz	x19, 435b84 <argp_parse@@Base+0x1c9c>
  435b64:	nop
  435b68:	mov	x20, x19
  435b6c:	ldr	x19, [x19]
  435b70:	ldr	x0, [x20, #8]
  435b74:	bl	4047b0 <free@plt>
  435b78:	mov	x0, x20
  435b7c:	bl	4047b0 <free@plt>
  435b80:	cbnz	x19, 435b68 <argp_parse@@Base+0x1c80>
  435b84:	mov	x0, x23
  435b88:	ldp	x19, x20, [sp, #16]
  435b8c:	ldp	x21, x22, [sp, #32]
  435b90:	ldr	x23, [sp, #48]
  435b94:	ldp	x29, x30, [sp], #64
  435b98:	b	4047b0 <free@plt>
  435b9c:	ldr	x0, [x19, #16]
  435ba0:	bl	4388f8 <argp_parse@@Base+0x4a10>
  435ba4:	mov	x0, x19
  435ba8:	bl	4047b0 <free@plt>
  435bac:	cbnz	x21, 435ae8 <argp_parse@@Base+0x1c00>
  435bb0:	b	435b5c <argp_parse@@Base+0x1c74>
  435bb4:	nop
  435bb8:	stp	x29, x30, [sp, #-64]!
  435bbc:	mov	x29, sp
  435bc0:	stp	x21, x22, [sp, #32]
  435bc4:	mov	w21, w2
  435bc8:	tst	x21, #0x10000000
  435bcc:	stp	x19, x20, [sp, #16]
  435bd0:	adrp	x20, 435000 <argp_parse@@Base+0x1118>
  435bd4:	add	x3, x20, #0x6a0
  435bd8:	str	x23, [sp, #48]
  435bdc:	adrp	x20, 404000 <fputs@plt>
  435be0:	add	x20, x20, #0x8c0
  435be4:	csel	x20, x20, x3, ne  // ne = any
  435be8:	mov	x19, x1
  435bec:	mov	x23, x0
  435bf0:	blr	x20
  435bf4:	cmp	w0, #0x0
  435bf8:	mov	w1, w0
  435bfc:	cset	w0, eq  // eq = none
  435c00:	tbnz	w21, #30, 435c28 <argp_parse@@Base+0x1d40>
  435c04:	ldrb	w3, [x19]
  435c08:	cbz	w3, 435c28 <argp_parse@@Base+0x1d40>
  435c0c:	cbz	w1, 435c6c <argp_parse@@Base+0x1d84>
  435c10:	mov	x22, x19
  435c14:	cmp	w3, #0x2f
  435c18:	ldrb	w3, [x19, #1]!
  435c1c:	b.eq	435c48 <argp_parse@@Base+0x1d60>  // b.none
  435c20:	cbnz	w3, 435c10 <argp_parse@@Base+0x1d28>
  435c24:	mov	w0, #0x0                   	// #0
  435c28:	ldp	x19, x20, [sp, #16]
  435c2c:	ldp	x21, x22, [sp, #32]
  435c30:	ldr	x23, [sp, #48]
  435c34:	ldp	x29, x30, [sp], #64
  435c38:	ret
  435c3c:	ldrb	w3, [x19, #1]
  435c40:	mov	x22, x19
  435c44:	add	x19, x19, #0x1
  435c48:	cmp	w3, #0x2f
  435c4c:	b.eq	435c3c <argp_parse@@Base+0x1d54>  // b.none
  435c50:	mov	w2, w21
  435c54:	mov	x1, x19
  435c58:	mov	x0, x23
  435c5c:	blr	x20
  435c60:	ldrb	w3, [x22, #1]
  435c64:	cbz	w3, 435c84 <argp_parse@@Base+0x1d9c>
  435c68:	cbnz	w0, 435c10 <argp_parse@@Base+0x1d28>
  435c6c:	mov	w0, #0x1                   	// #1
  435c70:	ldp	x19, x20, [sp, #16]
  435c74:	ldp	x21, x22, [sp, #32]
  435c78:	ldr	x23, [sp, #48]
  435c7c:	ldp	x29, x30, [sp], #64
  435c80:	ret
  435c84:	cmp	w0, #0x0
  435c88:	cset	w0, eq  // eq = none
  435c8c:	b	435c28 <argp_parse@@Base+0x1d40>
  435c90:	stp	x29, x30, [sp, #-80]!
  435c94:	mov	x29, sp
  435c98:	stp	x21, x22, [sp, #32]
  435c9c:	ldr	x22, [x0]
  435ca0:	cbz	x22, 435e14 <argp_parse@@Base+0x1f2c>
  435ca4:	ldr	w0, [x22, #8]
  435ca8:	stp	x19, x20, [sp, #16]
  435cac:	mov	x20, #0x0                   	// #0
  435cb0:	stp	x23, x24, [sp, #48]
  435cb4:	mov	x23, x1
  435cb8:	str	x25, [sp, #64]
  435cbc:	cbnz	w0, 435d90 <argp_parse@@Base+0x1ea8>
  435cc0:	cbz	x20, 435df4 <argp_parse@@Base+0x1f0c>
  435cc4:	ldr	w21, [x22, #12]
  435cc8:	mov	x19, x23
  435ccc:	ldr	x25, [x22, #16]
  435cd0:	and	w24, w21, #0x8
  435cd4:	and	w21, w21, #0x40000000
  435cd8:	mov	x1, x19
  435cdc:	mov	x0, x20
  435ce0:	bl	404910 <strcpy@plt>
  435ce4:	mov	x1, x20
  435ce8:	mov	x0, x25
  435cec:	bl	4384c8 <argp_parse@@Base+0x45e0>
  435cf0:	mov	x2, x0
  435cf4:	mov	w1, #0x2f                  	// #47
  435cf8:	mov	x0, x20
  435cfc:	cbnz	x2, 435d2c <argp_parse@@Base+0x1e44>
  435d00:	cbz	w24, 435d60 <argp_parse@@Base+0x1e78>
  435d04:	bl	4045d0 <strrchr@plt>
  435d08:	cbz	x0, 435d60 <argp_parse@@Base+0x1e78>
  435d0c:	strb	wzr, [x0]
  435d10:	mov	x1, x20
  435d14:	mov	x0, x25
  435d18:	bl	4384c8 <argp_parse@@Base+0x45e0>
  435d1c:	mov	x2, x0
  435d20:	mov	w1, #0x2f                  	// #47
  435d24:	mov	x0, x20
  435d28:	cbz	x2, 435d00 <argp_parse@@Base+0x1e18>
  435d2c:	mov	w19, #0x0                   	// #0
  435d30:	mov	x0, x20
  435d34:	bl	4047b0 <free@plt>
  435d38:	ldr	w0, [x22, #12]
  435d3c:	ldp	x21, x22, [sp, #32]
  435d40:	eor	x0, x0, #0x20000000
  435d44:	ldp	x23, x24, [sp, #48]
  435d48:	ubfx	x0, x0, #29, #1
  435d4c:	eor	w0, w19, w0
  435d50:	ldp	x19, x20, [sp, #16]
  435d54:	ldr	x25, [sp, #64]
  435d58:	ldp	x29, x30, [sp], #80
  435d5c:	ret
  435d60:	cbnz	w21, 435d7c <argp_parse@@Base+0x1e94>
  435d64:	mov	x0, x19
  435d68:	mov	w1, #0x2f                  	// #47
  435d6c:	bl	404870 <strchr@plt>
  435d70:	cbz	x0, 435d7c <argp_parse@@Base+0x1e94>
  435d74:	add	x19, x0, #0x1
  435d78:	b	435cd8 <argp_parse@@Base+0x1df0>
  435d7c:	ldr	x0, [x22]
  435d80:	cbz	x0, 435e0c <argp_parse@@Base+0x1f24>
  435d84:	mov	x22, x0
  435d88:	ldr	w0, [x22, #8]
  435d8c:	cbz	w0, 435cc0 <argp_parse@@Base+0x1dd8>
  435d90:	ldr	x24, [x22, #32]
  435d94:	ldr	x19, [x22, #16]
  435d98:	cbz	x24, 435d7c <argp_parse@@Base+0x1e94>
  435d9c:	add	x19, x19, #0x8
  435da0:	mov	x21, #0x0                   	// #0
  435da4:	b	435dcc <argp_parse@@Base+0x1ee4>
  435da8:	mov	x2, #0x0                   	// #0
  435dac:	bl	44ec70 <_obstack_memory_used@@Base+0xca80>
  435db0:	cmp	w0, #0x0
  435db4:	cset	w0, eq  // eq = none
  435db8:	add	x21, x21, #0x1
  435dbc:	cbnz	w0, 435d2c <argp_parse@@Base+0x1e44>
  435dc0:	cmp	x24, x21
  435dc4:	add	x19, x19, #0x48
  435dc8:	b.eq	435d7c <argp_parse@@Base+0x1e94>  // b.none
  435dcc:	ldur	w2, [x19, #-8]
  435dd0:	mov	x1, x23
  435dd4:	mov	x0, x19
  435dd8:	mov	w4, #0x0                   	// #0
  435ddc:	mov	x3, #0x0                   	// #0
  435de0:	tbnz	w2, #27, 435da8 <argp_parse@@Base+0x1ec0>
  435de4:	ldr	x0, [x19]
  435de8:	bl	435bb8 <argp_parse@@Base+0x1cd0>
  435dec:	and	w0, w0, #0xff
  435df0:	b	435db8 <argp_parse@@Base+0x1ed0>
  435df4:	mov	x0, x23
  435df8:	bl	403ff0 <strlen@plt>
  435dfc:	add	x0, x0, #0x1
  435e00:	bl	440f48 <argp_parse@@Base+0xd060>
  435e04:	mov	x20, x0
  435e08:	b	435cc4 <argp_parse@@Base+0x1ddc>
  435e0c:	mov	w19, #0x1                   	// #1
  435e10:	b	435d30 <argp_parse@@Base+0x1e48>
  435e14:	mov	w0, #0x0                   	// #0
  435e18:	ldp	x21, x22, [sp, #32]
  435e1c:	ldp	x29, x30, [sp], #80
  435e20:	ret
  435e24:	nop
  435e28:	stp	x29, x30, [sp, #-64]!
  435e2c:	tst	w2, #0x18000000
  435e30:	mov	x29, sp
  435e34:	stp	x19, x20, [sp, #16]
  435e38:	mov	x20, x0
  435e3c:	mov	w19, w2
  435e40:	stp	x21, x22, [sp, #32]
  435e44:	mov	x22, x1
  435e48:	ldr	x21, [x0]
  435e4c:	b.eq	435f04 <argp_parse@@Base+0x201c>  // b.none
  435e50:	mov	w1, w2
  435e54:	mov	x0, x22
  435e58:	bl	4359d0 <argp_parse@@Base+0x1ae8>
  435e5c:	tst	w0, #0xff
  435e60:	b.eq	435f04 <argp_parse@@Base+0x201c>  // b.none
  435e64:	stp	x23, x24, [sp, #48]
  435e68:	cbz	x21, 435e78 <argp_parse@@Base+0x1f90>
  435e6c:	ldr	w0, [x21, #8]
  435e70:	cmp	w0, #0x1
  435e74:	b.eq	43604c <argp_parse@@Base+0x2164>  // b.none
  435e78:	mov	x0, #0x28                  	// #40
  435e7c:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  435e80:	mov	x21, x0
  435e84:	mov	w1, #0x1                   	// #1
  435e88:	ldr	x0, [x20]
  435e8c:	str	x21, [x20]
  435e90:	str	x0, [x21]
  435e94:	stp	w1, w19, [x21, #8]
  435e98:	add	x24, x21, #0x10
  435e9c:	ldr	x0, [x21, #16]
  435ea0:	ldp	x1, x23, [x24, #8]
  435ea4:	cmp	x23, x1
  435ea8:	b.eq	43605c <argp_parse@@Base+0x2174>  // b.none
  435eac:	add	x1, x23, x23, lsl #3
  435eb0:	add	x2, x23, #0x1
  435eb4:	str	x2, [x24, #16]
  435eb8:	lsl	x1, x1, #3
  435ebc:	add	x21, x0, x1
  435ec0:	str	w19, [x0, x1]
  435ec4:	tbz	w19, #27, 435fdc <argp_parse@@Base+0x20f4>
  435ec8:	asr	w0, w19, #3
  435ecc:	mov	w20, #0x9                   	// #9
  435ed0:	and	w0, w0, #0x2
  435ed4:	orr	w20, w0, w20
  435ed8:	tbz	w19, #3, 4360d8 <argp_parse@@Base+0x21f0>
  435edc:	mov	x0, x22
  435ee0:	bl	403ff0 <strlen@plt>
  435ee4:	mov	x19, x0
  435ee8:	cbz	x19, 4360a4 <argp_parse@@Base+0x21bc>
  435eec:	sub	x2, x19, #0x1
  435ef0:	ldrb	w0, [x22, x2]
  435ef4:	cmp	w0, #0x2f
  435ef8:	b.ne	43611c <argp_parse@@Base+0x2234>  // b.any
  435efc:	mov	x19, x2
  435f00:	b	435ee8 <argp_parse@@Base+0x2000>
  435f04:	cbz	x21, 435f10 <argp_parse@@Base+0x2028>
  435f08:	ldr	w0, [x21, #8]
  435f0c:	cbz	w0, 435fa0 <argp_parse@@Base+0x20b8>
  435f10:	mov	x0, #0x28                  	// #40
  435f14:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  435f18:	stp	wzr, w19, [x0, #8]
  435f1c:	mov	x21, x0
  435f20:	tbnz	w19, #4, 435fc8 <argp_parse@@Base+0x20e0>
  435f24:	adrp	x2, 435000 <argp_parse@@Base+0x1118>
  435f28:	adrp	x3, 435000 <argp_parse@@Base+0x1118>
  435f2c:	add	x2, x2, #0x698
  435f30:	add	x3, x3, #0x678
  435f34:	mov	x1, #0x0                   	// #0
  435f38:	adrp	x4, 435000 <argp_parse@@Base+0x1118>
  435f3c:	mov	x0, #0x0                   	// #0
  435f40:	add	x4, x4, #0x650
  435f44:	bl	438760 <argp_parse@@Base+0x4878>
  435f48:	str	x0, [x21, #16]
  435f4c:	ldr	x1, [x20]
  435f50:	str	x1, [x21]
  435f54:	str	x21, [x20]
  435f58:	and	w19, w19, #0x1ffffffe
  435f5c:	mov	x0, x22
  435f60:	and	w19, w19, #0xf0000003
  435f64:	bl	441170 <argp_parse@@Base+0xd288>
  435f68:	mov	x20, x0
  435f6c:	mov	w0, #0x10000000            	// #268435456
  435f70:	cmp	w19, w0
  435f74:	b.eq	435ff8 <argp_parse@@Base+0x2110>  // b.none
  435f78:	ldr	x0, [x21, #16]
  435f7c:	mov	x1, x20
  435f80:	bl	438cb8 <argp_parse@@Base+0x4dd0>
  435f84:	cmp	x20, x0
  435f88:	b.eq	435fe8 <argp_parse@@Base+0x2100>  // b.none
  435f8c:	mov	x0, x20
  435f90:	ldp	x19, x20, [sp, #16]
  435f94:	ldp	x21, x22, [sp, #32]
  435f98:	ldp	x29, x30, [sp], #64
  435f9c:	b	4047b0 <free@plt>
  435fa0:	ldr	w2, [x21, #12]
  435fa4:	eor	w2, w19, w2
  435fa8:	and	w2, w2, #0x7ffffff8
  435fac:	and	w2, w2, #0xe000001f
  435fb0:	cbz	w2, 435f58 <argp_parse@@Base+0x2070>
  435fb4:	mov	x0, #0x28                  	// #40
  435fb8:	bl	4410e0 <argp_parse@@Base+0xd1f8>
  435fbc:	stp	wzr, w19, [x0, #8]
  435fc0:	mov	x21, x0
  435fc4:	tbz	w19, #4, 435f24 <argp_parse@@Base+0x203c>
  435fc8:	adrp	x2, 435000 <argp_parse@@Base+0x1118>
  435fcc:	adrp	x3, 435000 <argp_parse@@Base+0x1118>
  435fd0:	add	x2, x2, #0x788
  435fd4:	add	x3, x3, #0x658
  435fd8:	b	435f34 <argp_parse@@Base+0x204c>
  435fdc:	tbnz	w19, #26, 4360f8 <argp_parse@@Base+0x2210>
  435fe0:	ldp	x23, x24, [sp, #48]
  435fe4:	str	x22, [x21, #8]
  435fe8:	ldp	x19, x20, [sp, #16]
  435fec:	ldp	x21, x22, [sp, #32]
  435ff0:	ldp	x29, x30, [sp], #64
  435ff4:	ret
  435ff8:	mov	x4, x20
  435ffc:	mov	x5, x20
  436000:	mov	x2, x4
  436004:	ldrb	w3, [x2], #1
  436008:	cmp	w3, #0x5c
  43600c:	b.eq	43602c <argp_parse@@Base+0x2144>  // b.none
  436010:	strb	w3, [x5], #1
  436014:	cbz	w3, 435f78 <argp_parse@@Base+0x2090>
  436018:	mov	x4, x2
  43601c:	mov	x2, x4
  436020:	ldrb	w3, [x2], #1
  436024:	cmp	w3, #0x5c
  436028:	b.ne	436010 <argp_parse@@Base+0x2128>  // b.any
  43602c:	ldrb	w0, [x4, #1]
  436030:	cbz	w0, 436040 <argp_parse@@Base+0x2158>
  436034:	mov	w3, w0
  436038:	add	x2, x4, #0x2
  43603c:	b	436010 <argp_parse@@Base+0x2128>
  436040:	mov	x4, x2
  436044:	strb	w3, [x5], #1
  436048:	b	43601c <argp_parse@@Base+0x2134>
  43604c:	ldr	w0, [x21, #12]
  436050:	eor	w0, w19, w0
  436054:	tbz	w0, #29, 435e98 <argp_parse@@Base+0x1fb0>
  436058:	b	435e78 <argp_parse@@Base+0x1f90>
  43605c:	cbz	x0, 4360b0 <argp_parse@@Base+0x21c8>
  436060:	mov	x1, #0xf683                	// #63107
  436064:	movk	x1, #0xda12, lsl #16
  436068:	movk	x1, #0x684b, lsl #32
  43606c:	movk	x1, #0x12f, lsl #48
  436070:	cmp	x23, x1
  436074:	b.hi	4360d4 <argp_parse@@Base+0x21ec>  // b.pmore
  436078:	add	x1, x23, #0x1
  43607c:	add	x23, x1, x23, lsr #1
  436080:	add	x1, x23, x23, lsl #3
  436084:	str	x23, [x21, #24]
  436088:	lsl	x1, x1, #3
  43608c:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  436090:	ldr	x23, [x24, #16]
  436094:	str	x0, [x21, #16]
  436098:	b	435eac <argp_parse@@Base+0x1fc4>
  43609c:	ldr	x23, [x24, #16]
  4360a0:	sub	x23, x23, #0x1
  4360a4:	str	x23, [x24, #16]
  4360a8:	ldp	x23, x24, [sp, #48]
  4360ac:	b	435fe8 <argp_parse@@Base+0x2100>
  4360b0:	cmp	x23, #0x0
  4360b4:	mov	x1, #0x48                  	// #72
  4360b8:	csinc	x23, x23, xzr, ne  // ne = any
  4360bc:	umulh	x2, x23, x1
  4360c0:	mul	x1, x23, x1
  4360c4:	cmp	x2, #0x0
  4360c8:	cset	x2, ne  // ne = any
  4360cc:	tbnz	x1, #63, 4360d4 <argp_parse@@Base+0x21ec>
  4360d0:	cbz	x2, 436080 <argp_parse@@Base+0x2198>
  4360d4:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  4360d8:	mov	w2, w20
  4360dc:	mov	x1, x22
  4360e0:	add	x0, x21, #0x8
  4360e4:	bl	44ea78 <_obstack_memory_used@@Base+0xc888>
  4360e8:	mov	w19, w0
  4360ec:	cbnz	w19, 43609c <argp_parse@@Base+0x21b4>
  4360f0:	ldp	x23, x24, [sp, #48]
  4360f4:	b	435fe8 <argp_parse@@Base+0x2100>
  4360f8:	mov	x0, x22
  4360fc:	bl	441170 <argp_parse@@Base+0xd288>
  436100:	mov	x22, x0
  436104:	mov	x0, #0x10                  	// #16
  436108:	bl	440f48 <argp_parse@@Base+0xd060>
  43610c:	ldr	x1, [x20, #8]
  436110:	stp	x1, x22, [x0]
  436114:	str	x0, [x20, #8]
  436118:	b	435fe0 <argp_parse@@Base+0x20f8>
  43611c:	add	x0, x19, #0x7
  436120:	bl	440f48 <argp_parse@@Base+0xd060>
  436124:	mov	x1, x22
  436128:	mov	x2, x19
  43612c:	mov	x22, x0
  436130:	bl	403f70 <memcpy@plt>
  436134:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  436138:	add	x3, x3, #0x6e8
  43613c:	add	x4, x22, x19
  436140:	mov	w2, w20
  436144:	mov	x1, x22
  436148:	add	x0, x21, #0x8
  43614c:	ldr	w5, [x3]
  436150:	ldur	w3, [x3, #3]
  436154:	str	w5, [x22, x19]
  436158:	stur	w3, [x4, #3]
  43615c:	bl	44ea78 <_obstack_memory_used@@Base+0xc888>
  436160:	mov	w19, w0
  436164:	mov	x0, x22
  436168:	bl	4047b0 <free@plt>
  43616c:	b	4360ec <argp_parse@@Base+0x2204>
  436170:	stp	x29, x30, [sp, #-144]!
  436174:	mov	x29, sp
  436178:	stp	x19, x20, [sp, #16]
  43617c:	and	w20, w4, #0xff
  436180:	mov	x19, #0x0                   	// #0
  436184:	stp	x21, x22, [sp, #32]
  436188:	mov	x21, x1
  43618c:	mov	x22, x2
  436190:	stp	x23, x24, [sp, #48]
  436194:	mov	w24, w3
  436198:	stp	x25, x26, [sp, #64]
  43619c:	mov	x25, x5
  4361a0:	stp	x27, x28, [sp, #80]
  4361a4:	mov	x27, #0x0                   	// #0
  4361a8:	str	x0, [sp, #104]
  4361ac:	str	xzr, [sp, #136]
  4361b0:	b	4361bc <argp_parse@@Base+0x22d4>
  4361b4:	strb	w26, [x27, x19]
  4361b8:	add	x19, x19, #0x1
  4361bc:	ldp	x1, x2, [x22, #8]
  4361c0:	add	x3, x1, #0x1
  4361c4:	cmp	x1, x2
  4361c8:	b.cs	4361f4 <argp_parse@@Base+0x230c>  // b.hs, b.nlast
  4361cc:	str	x3, [x22, #8]
  4361d0:	ldrb	w26, [x1]
  4361d4:	ldr	x0, [sp, #136]
  4361d8:	cmp	x0, x19
  4361dc:	b.ne	4361b4 <argp_parse@@Base+0x22cc>  // b.any
  4361e0:	mov	x0, x27
  4361e4:	add	x1, sp, #0x88
  4361e8:	bl	441090 <argp_parse@@Base+0xd1a8>
  4361ec:	mov	x27, x0
  4361f0:	b	4361b4 <argp_parse@@Base+0x22cc>
  4361f4:	mov	x0, x22
  4361f8:	bl	404b90 <__uflow@plt>
  4361fc:	cmn	w0, #0x1
  436200:	b.ne	436340 <argp_parse@@Base+0x2458>  // b.any
  436204:	ldr	w22, [x22]
  436208:	str	wzr, [sp, #116]
  43620c:	bl	404ad0 <__errno_location@plt>
  436210:	str	x0, [sp, #120]
  436214:	and	w22, w22, #0x20
  436218:	cbz	w22, 43622c <argp_parse@@Base+0x2344>
  43621c:	ldr	w22, [x0]
  436220:	cmp	w22, #0x0
  436224:	csetm	w0, ne  // ne = any
  436228:	str	w0, [sp, #116]
  43622c:	mov	x0, x27
  436230:	add	x1, x19, #0x1
  436234:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  436238:	strb	w20, [x0, x19]
  43623c:	mov	x26, x0
  436240:	cbz	x19, 436328 <argp_parse@@Base+0x2440>
  436244:	add	x1, x0, x19
  436248:	mov	x0, #0x10                  	// #16
  43624c:	ldurb	w1, [x1, #-1]
  436250:	cmp	w1, w20
  436254:	cinc	x19, x19, ne  // ne = any
  436258:	add	x19, x26, x19
  43625c:	bl	440f48 <argp_parse@@Base+0xd060>
  436260:	ldr	x1, [x21, #8]
  436264:	stp	x1, x26, [x0]
  436268:	cmp	x26, x19
  43626c:	str	x0, [x21, #8]
  436270:	b.cs	4362d4 <argp_parse@@Base+0x23ec>  // b.hs, b.nlast
  436274:	ubfiz	x27, x20, #1, #8
  436278:	mov	x28, x26
  43627c:	b	436288 <argp_parse@@Base+0x23a0>
  436280:	cmp	x19, x26
  436284:	b.eq	4362d4 <argp_parse@@Base+0x23ec>  // b.none
  436288:	ldrb	w0, [x26]
  43628c:	mov	x23, x26
  436290:	add	x26, x26, #0x1
  436294:	cmp	w0, w20
  436298:	b.ne	436280 <argp_parse@@Base+0x2398>  // b.any
  43629c:	bl	404740 <__ctype_b_loc@plt>
  4362a0:	ldr	x3, [x0]
  4362a4:	ldrh	w0, [x3, x27]
  4362a8:	tbnz	w0, #13, 4362fc <argp_parse@@Base+0x2414>
  4362ac:	ldr	x4, [sp, #104]
  4362b0:	strb	wzr, [x23]
  4362b4:	mov	x1, x28
  4362b8:	mov	x3, x25
  4362bc:	mov	w2, w24
  4362c0:	mov	x0, x21
  4362c4:	blr	x4
  4362c8:	mov	x28, x26
  4362cc:	cmp	x19, x26
  4362d0:	b.ne	436288 <argp_parse@@Base+0x23a0>  // b.any
  4362d4:	ldr	x0, [sp, #120]
  4362d8:	ldp	x19, x20, [sp, #16]
  4362dc:	ldp	x23, x24, [sp, #48]
  4362e0:	ldp	x25, x26, [sp, #64]
  4362e4:	ldp	x27, x28, [sp, #80]
  4362e8:	str	w22, [x0]
  4362ec:	ldr	w0, [sp, #116]
  4362f0:	ldp	x21, x22, [sp, #32]
  4362f4:	ldp	x29, x30, [sp], #144
  4362f8:	ret
  4362fc:	sub	x0, x26, #0x1
  436300:	cmp	x28, x0
  436304:	b.eq	4362c8 <argp_parse@@Base+0x23e0>  // b.none
  436308:	ldurb	w0, [x23, #-1]
  43630c:	ldrh	w0, [x3, x0, lsl #1]
  436310:	tbz	w0, #13, 4362ac <argp_parse@@Base+0x23c4>
  436314:	sub	x23, x23, #0x1
  436318:	cmp	x23, x28
  43631c:	b.ne	436308 <argp_parse@@Base+0x2420>  // b.any
  436320:	mov	x28, x26
  436324:	b	4362cc <argp_parse@@Base+0x23e4>
  436328:	mov	x0, #0x10                  	// #16
  43632c:	bl	440f48 <argp_parse@@Base+0xd060>
  436330:	ldr	x1, [x21, #8]
  436334:	stp	x1, x26, [x0]
  436338:	str	x0, [x21, #8]
  43633c:	b	4362d4 <argp_parse@@Base+0x23ec>
  436340:	and	w26, w0, #0xff
  436344:	b	4361d4 <argp_parse@@Base+0x22ec>
  436348:	stp	x29, x30, [sp, #-64]!
  43634c:	mov	x29, sp
  436350:	stp	x19, x20, [sp, #16]
  436354:	mov	x19, x1
  436358:	mov	w20, w3
  43635c:	stp	x21, x22, [sp, #32]
  436360:	and	w21, w4, #0xff
  436364:	str	x0, [sp, #56]
  436368:	mov	x0, x2
  43636c:	ldrb	w2, [x2]
  436370:	cmp	w2, #0x2d
  436374:	b.eq	4363d0 <argp_parse@@Base+0x24e8>  // b.none
  436378:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  43637c:	add	x1, x1, #0xf28
  436380:	bl	4042e0 <fopen@plt>
  436384:	mov	x22, x0
  436388:	cbz	x0, 43640c <argp_parse@@Base+0x2524>
  43638c:	mov	x1, x19
  436390:	mov	w4, w21
  436394:	mov	w3, w20
  436398:	add	x5, sp, #0x38
  43639c:	mov	x2, x22
  4363a0:	adrp	x0, 435000 <argp_parse@@Base+0x1118>
  4363a4:	add	x0, x0, #0x640
  4363a8:	bl	436170 <argp_parse@@Base+0x2288>
  4363ac:	mov	w19, w0
  4363b0:	mov	x0, x22
  4363b4:	bl	4042a0 <fclose@plt>
  4363b8:	cbnz	w0, 43640c <argp_parse@@Base+0x2524>
  4363bc:	mov	w0, w19
  4363c0:	ldp	x19, x20, [sp, #16]
  4363c4:	ldp	x21, x22, [sp, #32]
  4363c8:	ldp	x29, x30, [sp], #64
  4363cc:	ret
  4363d0:	ldrb	w2, [x0, #1]
  4363d4:	cbnz	w2, 436378 <argp_parse@@Base+0x2490>
  4363d8:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4363dc:	mov	w4, w21
  4363e0:	add	x5, sp, #0x38
  4363e4:	adrp	x0, 435000 <argp_parse@@Base+0x1118>
  4363e8:	ldr	x2, [x2, #1112]
  4363ec:	add	x0, x0, #0x640
  4363f0:	bl	436170 <argp_parse@@Base+0x2288>
  4363f4:	mov	w19, w0
  4363f8:	mov	w0, w19
  4363fc:	ldp	x19, x20, [sp, #16]
  436400:	ldp	x21, x22, [sp, #32]
  436404:	ldp	x29, x30, [sp], #64
  436408:	ret
  43640c:	mov	w19, #0xffffffff            	// #-1
  436410:	b	4363bc <argp_parse@@Base+0x24d4>
  436414:	nop
  436418:	stp	x29, x30, [sp, #-48]!
  43641c:	mov	x29, sp
  436420:	stp	x19, x20, [sp, #16]
  436424:	mov	x19, x2
  436428:	mov	x20, x3
  43642c:	stp	x21, x22, [sp, #32]
  436430:	mov	w21, w1
  436434:	mov	w22, w4
  436438:	tbz	w0, #31, 43646c <argp_parse@@Base+0x2584>
  43643c:	cbz	x2, 4364a4 <argp_parse@@Base+0x25bc>
  436440:	mov	w3, w22
  436444:	mov	x2, x20
  436448:	mov	x1, x19
  43644c:	mov	w0, w21
  436450:	bl	4048a0 <utimensat@plt>
  436454:	cmp	w0, #0x1
  436458:	b.eq	4364a4 <argp_parse@@Base+0x25bc>  // b.none
  43645c:	ldp	x19, x20, [sp, #16]
  436460:	ldp	x21, x22, [sp, #32]
  436464:	ldp	x29, x30, [sp], #48
  436468:	ret
  43646c:	mov	x1, x3
  436470:	bl	4043b0 <futimens@plt>
  436474:	cmp	x19, #0x0
  436478:	ccmn	w0, #0x1, #0x0, ne  // ne = any
  43647c:	b.ne	436454 <argp_parse@@Base+0x256c>  // b.any
  436480:	bl	404ad0 <__errno_location@plt>
  436484:	ldr	w0, [x0]
  436488:	cmp	w0, #0x26
  43648c:	b.eq	436440 <argp_parse@@Base+0x2558>  // b.none
  436490:	mov	w0, #0xffffffff            	// #-1
  436494:	ldp	x19, x20, [sp, #16]
  436498:	ldp	x21, x22, [sp, #32]
  43649c:	ldp	x29, x30, [sp], #48
  4364a0:	ret
  4364a4:	bl	404ad0 <__errno_location@plt>
  4364a8:	mov	x1, x0
  4364ac:	mov	w2, #0x9                   	// #9
  4364b0:	mov	w0, #0xffffffff            	// #-1
  4364b4:	ldp	x19, x20, [sp, #16]
  4364b8:	str	w2, [x1]
  4364bc:	ldp	x21, x22, [sp, #32]
  4364c0:	ldp	x29, x30, [sp], #48
  4364c4:	ret
  4364c8:	stp	x29, x30, [sp, #-32]!
  4364cc:	mov	x29, sp
  4364d0:	stp	x19, x20, [sp, #16]
  4364d4:	mov	x19, x1
  4364d8:	ldr	w1, [x1, #16]
  4364dc:	and	w1, w1, #0xf000
  4364e0:	cmp	w1, #0xa, lsl #12
  4364e4:	b.ne	4364f8 <argp_parse@@Base+0x2610>  // b.any
  4364e8:	mov	w0, #0x0                   	// #0
  4364ec:	ldp	x19, x20, [sp, #16]
  4364f0:	ldp	x29, x30, [sp], #32
  4364f4:	ret
  4364f8:	mov	x20, x0
  4364fc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  436500:	mov	x3, #0x0                   	// #0
  436504:	add	x1, x1, #0x708
  436508:	mov	x2, #0x0                   	// #0
  43650c:	bl	4046c0 <getxattr@plt>
  436510:	cmp	x0, #0x0
  436514:	b.lt	43652c <argp_parse@@Base+0x2644>  // b.tstop
  436518:	b.eq	436554 <argp_parse@@Base+0x266c>  // b.none
  43651c:	mov	w0, #0x1                   	// #1
  436520:	ldp	x19, x20, [sp, #16]
  436524:	ldp	x29, x30, [sp], #32
  436528:	ret
  43652c:	bl	404ad0 <__errno_location@plt>
  436530:	ldr	w0, [x0]
  436534:	cmp	w0, #0x3d
  436538:	b.eq	436554 <argp_parse@@Base+0x266c>  // b.none
  43653c:	bl	44f418 <_obstack_memory_used@@Base+0xd228>
  436540:	and	w0, w0, #0xff
  436544:	neg	w0, w0
  436548:	ldp	x19, x20, [sp, #16]
  43654c:	ldp	x29, x30, [sp], #32
  436550:	ret
  436554:	ldr	w0, [x19, #16]
  436558:	and	w0, w0, #0xf000
  43655c:	cmp	w0, #0x4, lsl #12
  436560:	b.ne	4364e8 <argp_parse@@Base+0x2600>  // b.any
  436564:	mov	x0, x20
  436568:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43656c:	mov	x3, #0x0                   	// #0
  436570:	add	x1, x1, #0x720
  436574:	mov	x2, #0x0                   	// #0
  436578:	bl	4046c0 <getxattr@plt>
  43657c:	cmp	x0, #0x0
  436580:	b.lt	436590 <argp_parse@@Base+0x26a8>  // b.tstop
  436584:	b.eq	4364e8 <argp_parse@@Base+0x2600>  // b.none
  436588:	mov	w0, #0x1                   	// #1
  43658c:	b	436520 <argp_parse@@Base+0x2638>
  436590:	bl	404ad0 <__errno_location@plt>
  436594:	ldr	w0, [x0]
  436598:	cmp	w0, #0x3d
  43659c:	b.ne	43653c <argp_parse@@Base+0x2654>  // b.any
  4365a0:	b	4364e8 <argp_parse@@Base+0x2600>
  4365a4:	nop
  4365a8:	cbz	x2, 436604 <argp_parse@@Base+0x271c>
  4365ac:	stp	x29, x30, [sp, #-48]!
  4365b0:	mov	x29, sp
  4365b4:	stp	x19, x20, [sp, #16]
  4365b8:	mov	x19, x1
  4365bc:	mov	x20, x2
  4365c0:	add	x20, x19, x20
  4365c4:	stp	x21, x22, [sp, #32]
  4365c8:	mov	x21, x0
  4365cc:	bl	4041f0 <__ctype_tolower_loc@plt>
  4365d0:	mov	x22, x0
  4365d4:	nop
  4365d8:	ldrb	w3, [x19], #1
  4365dc:	mov	x1, x21
  4365e0:	ldr	x2, [x22]
  4365e4:	ldr	w0, [x2, x3, lsl #2]
  4365e8:	bl	404170 <fputc@plt>
  4365ec:	cmp	x19, x20
  4365f0:	b.ne	4365d8 <argp_parse@@Base+0x26f0>  // b.any
  4365f4:	ldp	x19, x20, [sp, #16]
  4365f8:	ldp	x21, x22, [sp, #32]
  4365fc:	ldp	x29, x30, [sp], #48
  436600:	ret
  436604:	ret
  436608:	cbz	x2, 436664 <argp_parse@@Base+0x277c>
  43660c:	stp	x29, x30, [sp, #-48]!
  436610:	mov	x29, sp
  436614:	stp	x19, x20, [sp, #16]
  436618:	mov	x19, x1
  43661c:	mov	x20, x2
  436620:	add	x20, x19, x20
  436624:	stp	x21, x22, [sp, #32]
  436628:	mov	x21, x0
  43662c:	bl	404540 <__ctype_toupper_loc@plt>
  436630:	mov	x22, x0
  436634:	nop
  436638:	ldrb	w3, [x19], #1
  43663c:	mov	x1, x21
  436640:	ldr	x2, [x22]
  436644:	ldr	w0, [x2, x3, lsl #2]
  436648:	bl	404170 <fputc@plt>
  43664c:	cmp	x19, x20
  436650:	b.ne	436638 <argp_parse@@Base+0x2750>  // b.any
  436654:	ldp	x19, x20, [sp, #16]
  436658:	ldp	x21, x22, [sp, #32]
  43665c:	ldp	x29, x30, [sp], #48
  436660:	ret
  436664:	ret
  436668:	sub	sp, sp, #0x4f0
  43666c:	stp	x29, x30, [sp]
  436670:	mov	x29, sp
  436674:	stp	x19, x20, [sp, #16]
  436678:	mov	x20, x2
  43667c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  436680:	stp	x27, x28, [sp, #80]
  436684:	add	x2, x2, #0x948
  436688:	ldr	x27, [x20, #48]
  43668c:	stp	x21, x22, [sp, #32]
  436690:	mov	x22, x0
  436694:	stp	x23, x24, [sp, #48]
  436698:	cmp	x27, #0x0
  43669c:	csel	x27, x2, x27, eq  // eq = none
  4366a0:	stp	x25, x26, [sp, #64]
  4366a4:	mov	x21, x1
  4366a8:	ldr	w26, [x20, #8]
  4366ac:	stp	x5, x4, [sp, #104]
  4366b0:	and	w24, w3, #0xff
  4366b4:	cmp	w26, #0xc
  4366b8:	str	w6, [sp, #192]
  4366bc:	b.le	43673c <argp_parse@@Base+0x2854>
  4366c0:	sub	w26, w26, #0xc
  4366c4:	ldrb	w0, [x21]
  4366c8:	cbz	w0, 436734 <argp_parse@@Base+0x284c>
  4366cc:	add	x1, sp, #0xda
  4366d0:	mov	x28, #0x0                   	// #0
  4366d4:	str	x1, [sp, #96]
  4366d8:	add	x1, sp, #0xf1
  4366dc:	str	x1, [sp, #120]
  4366e0:	cmp	w0, #0x25
  4366e4:	b.eq	43674c <argp_parse@@Base+0x2864>  // b.none
  4366e8:	cmn	x28, #0x3
  4366ec:	b.hi	436734 <argp_parse@@Base+0x284c>  // b.pmore
  4366f0:	cbz	x22, 4366fc <argp_parse@@Base+0x2814>
  4366f4:	mov	x1, x22
  4366f8:	bl	404170 <fputc@plt>
  4366fc:	add	x28, x28, #0x1
  436700:	mov	x25, x21
  436704:	ldrb	w0, [x25, #1]
  436708:	add	x21, x25, #0x1
  43670c:	cbnz	w0, 4366e0 <argp_parse@@Base+0x27f8>
  436710:	mov	x0, x28
  436714:	ldp	x29, x30, [sp]
  436718:	ldp	x19, x20, [sp, #16]
  43671c:	ldp	x21, x22, [sp, #32]
  436720:	ldp	x23, x24, [sp, #48]
  436724:	ldp	x25, x26, [sp, #64]
  436728:	ldp	x27, x28, [sp, #80]
  43672c:	add	sp, sp, #0x4f0
  436730:	ret
  436734:	mov	x28, #0x0                   	// #0
  436738:	b	436710 <argp_parse@@Base+0x2828>
  43673c:	cmp	w26, #0x0
  436740:	mov	w0, #0xc                   	// #12
  436744:	csel	w26, w26, w0, ne  // ne = any
  436748:	b	4366c4 <argp_parse@@Base+0x27dc>
  43674c:	mov	w23, w24
  436750:	mov	w25, #0x0                   	// #0
  436754:	mov	w14, #0x0                   	// #0
  436758:	ldrb	w4, [x21, #1]!
  43675c:	cmp	w4, #0x30
  436760:	mov	w0, w4
  436764:	b.eq	436788 <argp_parse@@Base+0x28a0>  // b.none
  436768:	b.hi	436864 <argp_parse@@Base+0x297c>  // b.pmore
  43676c:	cmp	w4, #0x23
  436770:	b.ne	436790 <argp_parse@@Base+0x28a8>  // b.any
  436774:	ldrb	w4, [x21, #1]!
  436778:	mov	w25, #0x1                   	// #1
  43677c:	cmp	w4, #0x30
  436780:	mov	w0, w4
  436784:	b.ne	436768 <argp_parse@@Base+0x2880>  // b.any
  436788:	mov	w14, w4
  43678c:	b	436758 <argp_parse@@Base+0x2870>
  436790:	cmp	w4, #0x2d
  436794:	b.eq	436788 <argp_parse@@Base+0x28a0>  // b.none
  436798:	mov	w12, #0xffffffff            	// #-1
  43679c:	cmp	w4, #0x4f
  4367a0:	mov	w19, #0x0                   	// #0
  4367a4:	b.eq	4368d4 <argp_parse@@Base+0x29ec>  // b.none
  4367a8:	cmp	w4, #0x7a
  4367ac:	b.ls	4368ec <argp_parse@@Base+0x2a04>  // b.plast
  4367b0:	sub	x0, x21, #0x1
  4367b4:	add	w2, w21, #0x1
  4367b8:	sub	w19, w2, w0
  4367bc:	str	x0, [sp, #144]
  4367c0:	ldrb	w1, [x0], #-1
  4367c4:	cmp	w1, #0x25
  4367c8:	b.ne	4367b8 <argp_parse@@Base+0x28d0>  // b.any
  4367cc:	cmp	w12, #0x0
  4367d0:	sxtw	x19, w19
  4367d4:	csel	w1, w12, wzr, ge  // ge = tcont
  4367d8:	mov	x25, x21
  4367dc:	mvn	x2, x28
  4367e0:	sxtw	x1, w1
  4367e4:	cmp	x1, x19
  4367e8:	csel	x0, x1, x19, cs  // cs = hs, nlast
  4367ec:	str	x0, [sp, #136]
  4367f0:	ldr	x0, [sp, #136]
  4367f4:	cmp	x0, x2
  4367f8:	b.cs	436734 <argp_parse@@Base+0x284c>  // b.hs, b.nlast
  4367fc:	cbz	x22, 436858 <argp_parse@@Base+0x2970>
  436800:	cmp	x1, x19
  436804:	b.ls	436844 <argp_parse@@Base+0x295c>  // b.plast
  436808:	sxtw	x12, w12
  43680c:	cmp	w14, #0x30
  436810:	sub	x0, x12, x19
  436814:	str	x0, [sp, #128]
  436818:	b.eq	437944 <argp_parse@@Base+0x3a5c>  // b.none
  43681c:	mov	x21, #0x0                   	// #0
  436820:	cbz	x0, 436844 <argp_parse@@Base+0x295c>
  436824:	nop
  436828:	mov	x1, x22
  43682c:	mov	w0, #0x20                  	// #32
  436830:	bl	404170 <fputc@plt>
  436834:	add	x21, x21, #0x1
  436838:	ldr	x0, [sp, #128]
  43683c:	cmp	x0, x21
  436840:	b.ne	436828 <argp_parse@@Base+0x2940>  // b.any
  436844:	cbz	w23, 437738 <argp_parse@@Base+0x3850>
  436848:	ldr	x1, [sp, #144]
  43684c:	mov	x2, x19
  436850:	mov	x0, x22
  436854:	bl	436608 <argp_parse@@Base+0x2720>
  436858:	ldr	x0, [sp, #136]
  43685c:	add	x28, x28, x0
  436860:	b	436704 <argp_parse@@Base+0x281c>
  436864:	cmp	w4, #0x5e
  436868:	b.ne	436874 <argp_parse@@Base+0x298c>  // b.any
  43686c:	mov	w23, #0x1                   	// #1
  436870:	b	436758 <argp_parse@@Base+0x2870>
  436874:	cmp	w4, #0x5f
  436878:	b.eq	436788 <argp_parse@@Base+0x28a0>  // b.none
  43687c:	sub	w1, w4, #0x30
  436880:	cmp	w1, #0x9
  436884:	b.hi	437d84 <argp_parse@@Base+0x3e9c>  // b.pmore
  436888:	mov	w5, #0xcccc                	// #52428
  43688c:	mov	w12, #0x0                   	// #0
  436890:	movk	w5, #0xccc, lsl #16
  436894:	mov	x0, x21
  436898:	cmp	w12, w5
  43689c:	ldrb	w4, [x0, #1]!
  4368a0:	sub	w1, w4, #0x30
  4368a4:	b.gt	43690c <argp_parse@@Base+0x2a24>
  4368a8:	ldrb	w2, [x21]
  4368ac:	b.eq	436904 <argp_parse@@Base+0x2a1c>  // b.none
  4368b0:	add	w12, w12, w12, lsl #2
  4368b4:	sub	w2, w2, #0x30
  4368b8:	mov	x21, x0
  4368bc:	add	w12, w2, w12, lsl #1
  4368c0:	cmp	w1, #0x9
  4368c4:	b.ls	436894 <argp_parse@@Base+0x29ac>  // b.plast
  4368c8:	mov	w0, w4
  4368cc:	cmp	w4, #0x45
  4368d0:	b.ne	43679c <argp_parse@@Base+0x28b4>  // b.any
  4368d4:	ldrb	w4, [x21, #1]
  4368d8:	mov	w19, w0
  4368dc:	add	x21, x21, #0x1
  4368e0:	mov	w0, w4
  4368e4:	cmp	w4, #0x7a
  4368e8:	b.hi	4367b0 <argp_parse@@Base+0x28c8>  // b.pmore
  4368ec:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4368f0:	add	x1, x1, #0x774
  4368f4:	ldrh	w1, [x1, w4, uxtw #1]
  4368f8:	adr	x2, 436904 <argp_parse@@Base+0x2a1c>
  4368fc:	add	x1, x2, w1, sxth #2
  436900:	br	x1
  436904:	cmp	w2, #0x37
  436908:	b.ls	4368b0 <argp_parse@@Base+0x29c8>  // b.plast
  43690c:	cmp	w1, #0x9
  436910:	b.hi	43768c <argp_parse@@Base+0x37a4>  // b.pmore
  436914:	ldrb	w4, [x21, #2]!
  436918:	mov	w12, #0x7fffffff            	// #2147483647
  43691c:	sub	w1, w4, #0x30
  436920:	b	4368c0 <argp_parse@@Base+0x29d8>
  436924:	cmp	w19, #0x4f
  436928:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  43692c:	str	wzr, [sp, #136]
  436930:	mov	w0, #0x2520                	// #9504
  436934:	strh	w0, [sp, #216]
  436938:	cbnz	w19, 437d94 <argp_parse@@Base+0x3eac>
  43693c:	ldr	x0, [sp, #96]
  436940:	mov	x25, x21
  436944:	strb	w4, [x0]
  436948:	mov	x3, x20
  43694c:	strb	wzr, [x0, #1]
  436950:	add	x2, sp, #0xd8
  436954:	add	x0, sp, #0xf0
  436958:	mov	x1, #0x400                 	// #1024
  43695c:	str	w12, [sp, #128]
  436960:	str	w14, [sp, #144]
  436964:	bl	404150 <strftime@plt>
  436968:	cbz	x0, 436704 <argp_parse@@Base+0x281c>
  43696c:	ldr	w12, [sp, #128]
  436970:	sub	x21, x0, #0x1
  436974:	mvn	x1, x28
  436978:	cmp	w12, #0x0
  43697c:	csel	w0, w12, wzr, ge  // ge = tcont
  436980:	sxtw	x0, w0
  436984:	cmp	x21, x0
  436988:	csel	x2, x21, x0, cs  // cs = hs, nlast
  43698c:	str	x2, [sp, #152]
  436990:	cmp	x1, x2
  436994:	b.ls	436734 <argp_parse@@Base+0x284c>  // b.plast
  436998:	cbz	x22, 436a00 <argp_parse@@Base+0x2b18>
  43699c:	cmp	w19, #0x0
  4369a0:	ldr	w14, [sp, #144]
  4369a4:	ccmp	x21, x0, #0x2, eq  // eq = none
  4369a8:	b.cs	4369e4 <argp_parse@@Base+0x2afc>  // b.hs, b.nlast
  4369ac:	sxtw	x12, w12
  4369b0:	cmp	w14, #0x30
  4369b4:	sub	x0, x12, x21
  4369b8:	str	x0, [sp, #128]
  4369bc:	b.eq	43777c <argp_parse@@Base+0x3894>  // b.none
  4369c0:	mov	x19, #0x0                   	// #0
  4369c4:	cbz	x0, 4369e4 <argp_parse@@Base+0x2afc>
  4369c8:	mov	x1, x22
  4369cc:	mov	w0, #0x20                  	// #32
  4369d0:	bl	404170 <fputc@plt>
  4369d4:	add	x19, x19, #0x1
  4369d8:	ldr	x0, [sp, #128]
  4369dc:	cmp	x0, x19
  4369e0:	b.ne	4369c8 <argp_parse@@Base+0x2ae0>  // b.any
  4369e4:	ldr	w0, [sp, #136]
  4369e8:	cbnz	w0, 437768 <argp_parse@@Base+0x3880>
  4369ec:	cbz	w23, 437750 <argp_parse@@Base+0x3868>
  4369f0:	ldr	x1, [sp, #120]
  4369f4:	mov	x2, x21
  4369f8:	mov	x0, x22
  4369fc:	bl	436608 <argp_parse@@Base+0x2720>
  436a00:	ldr	x0, [sp, #152]
  436a04:	add	x28, x28, x0
  436a08:	b	436704 <argp_parse@@Base+0x281c>
  436a0c:	cmp	w19, #0x45
  436a10:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  436a14:	ldp	w2, w1, [x20, #20]
  436a18:	mov	w0, #0x2493                	// #9363
  436a1c:	ldr	w5, [x20, #28]
  436a20:	movk	w0, #0x9249, lsl #16
  436a24:	cmp	w2, #0x0
  436a28:	mov	w15, #0xffffff9c            	// #-100
  436a2c:	sub	w6, w5, w1
  436a30:	mov	w3, #0x12c                 	// #300
  436a34:	add	w6, w6, #0x17e
  436a38:	csel	w3, w3, w15, lt  // lt = tstop
  436a3c:	add	w3, w2, w3
  436a40:	smull	x0, w6, w0
  436a44:	lsr	x0, x0, #32
  436a48:	add	w0, w6, w0
  436a4c:	asr	w0, w0, #2
  436a50:	sub	w0, w0, w6, asr #31
  436a54:	lsl	w15, w0, #3
  436a58:	sub	w0, w15, w0
  436a5c:	sub	w0, w6, w0
  436a60:	sub	w0, w5, w0
  436a64:	adds	w0, w0, #0x3
  436a68:	b.mi	437a68 <argp_parse@@Base+0x3b80>  // b.first
  436a6c:	tst	x3, #0x3
  436a70:	mov	w6, #0x16d                 	// #365
  436a74:	b.ne	436abc <argp_parse@@Base+0x2bd4>  // b.any
  436a78:	mov	w16, #0x5c29                	// #23593
  436a7c:	mov	w6, #0xb850                	// #47184
  436a80:	movk	w16, #0xc28f, lsl #16
  436a84:	movk	w6, #0x51e, lsl #16
  436a88:	mov	w15, #0x5c28                	// #23592
  436a8c:	madd	w3, w3, w16, w6
  436a90:	movk	w15, #0x28f, lsl #16
  436a94:	mov	w6, #0x16e                 	// #366
  436a98:	ror	w16, w3, #2
  436a9c:	cmp	w16, w15
  436aa0:	b.hi	436abc <argp_parse@@Base+0x2bd4>  // b.pmore
  436aa4:	mov	w6, #0xd70a                	// #55050
  436aa8:	ror	w3, w3, #4
  436aac:	movk	w6, #0xa3, lsl #16
  436ab0:	cmp	w3, w6
  436ab4:	cset	w6, ls  // ls = plast
  436ab8:	add	w6, w6, #0x16d
  436abc:	sub	w5, w5, w6
  436ac0:	mov	w3, #0x2493                	// #9363
  436ac4:	sub	w1, w5, w1
  436ac8:	movk	w3, #0x9249, lsl #16
  436acc:	add	w1, w1, #0x17e
  436ad0:	smull	x3, w1, w3
  436ad4:	lsr	x3, x3, #32
  436ad8:	add	w3, w1, w3
  436adc:	asr	w3, w3, #2
  436ae0:	sub	w3, w3, w1, asr #31
  436ae4:	lsl	w6, w3, #3
  436ae8:	sub	w3, w6, w3
  436aec:	sub	w1, w1, w3
  436af0:	sub	w1, w5, w1
  436af4:	adds	w1, w1, #0x3
  436af8:	csel	w0, w0, w1, mi  // mi = first
  436afc:	cmp	w1, #0x0
  436b00:	cset	w3, ge  // ge = tcont
  436b04:	cmp	w4, #0x47
  436b08:	b.eq	437b38 <argp_parse@@Base+0x3c50>  // b.none
  436b0c:	cmp	w4, #0x67
  436b10:	b.ne	437b60 <argp_parse@@Base+0x3c78>  // b.any
  436b14:	mov	w0, #0x851f                	// #34079
  436b18:	mov	w5, #0x64                  	// #100
  436b1c:	movk	w0, #0x51eb, lsl #16
  436b20:	mov	w16, #0x2                   	// #2
  436b24:	smull	x1, w2, w0
  436b28:	asr	x1, x1, #37
  436b2c:	sub	w1, w1, w2, asr #31
  436b30:	msub	w1, w1, w5, w2
  436b34:	add	w1, w1, w3
  436b38:	smull	x0, w1, w0
  436b3c:	asr	x0, x0, #37
  436b40:	sub	w0, w0, w1, asr #31
  436b44:	msub	w0, w0, w5, w1
  436b48:	tbz	w0, #31, 436b68 <argp_parse@@Base+0x2c80>
  436b4c:	mov	w1, #0xfffff894            	// #-1900
  436b50:	sub	w3, w1, w3
  436b54:	cmp	w2, w3
  436b58:	neg	w1, w0
  436b5c:	add	w0, w0, w5
  436b60:	csel	w0, w0, w1, ge  // ge = tcont
  436b64:	nop
  436b68:	lsr	w15, w0, #31
  436b6c:	mov	w6, #0x0                   	// #0
  436b70:	mov	w5, #0x0                   	// #0
  436b74:	cmp	w19, #0x4f
  436b78:	eor	w1, w15, #0x1
  436b7c:	csel	w1, w1, wzr, eq  // eq = none
  436b80:	cbz	w1, 4370b0 <argp_parse@@Base+0x31c8>
  436b84:	mov	w0, #0x2520                	// #9504
  436b88:	str	wzr, [sp, #136]
  436b8c:	strh	w0, [sp, #216]
  436b90:	mov	x25, x21
  436b94:	add	x0, sp, #0xdb
  436b98:	strb	w19, [sp, #218]
  436b9c:	mov	w19, w16
  436ba0:	b	436944 <argp_parse@@Base+0x2a5c>
  436ba4:	cbnz	w19, 4367b0 <argp_parse@@Base+0x28c8>
  436ba8:	cmp	w25, #0x0
  436bac:	mov	w0, #0x2520                	// #9504
  436bb0:	csel	w23, w23, w25, eq  // eq = none
  436bb4:	mov	w19, #0x0                   	// #0
  436bb8:	mov	x25, x21
  436bbc:	str	wzr, [sp, #136]
  436bc0:	strh	w0, [sp, #216]
  436bc4:	ldr	x0, [sp, #96]
  436bc8:	b	436944 <argp_parse@@Base+0x2a5c>
  436bcc:	cmp	w25, #0x0
  436bd0:	csel	w23, w23, w25, eq  // eq = none
  436bd4:	cmp	w19, #0x45
  436bd8:	b.ne	43692c <argp_parse@@Base+0x2a44>  // b.any
  436bdc:	b	4367b0 <argp_parse@@Base+0x28c8>
  436be0:	ldr	w0, [x20, #16]
  436be4:	cmp	w19, #0x4f
  436be8:	mov	w16, #0x1                   	// #1
  436bec:	b.eq	436b84 <argp_parse@@Base+0x2c9c>  // b.none
  436bf0:	mov	w1, #0xb                   	// #11
  436bf4:	mov	w5, #0x0                   	// #0
  436bf8:	mov	w15, #0x0                   	// #0
  436bfc:	mov	w6, #0x0                   	// #0
  436c00:	mul	w0, w0, w1
  436c04:	asr	w0, w0, #5
  436c08:	add	w0, w0, w16
  436c0c:	nop
  436c10:	mov	w17, #0xcccd                	// #52429
  436c14:	add	x19, sp, #0xef
  436c18:	mov	w18, #0x3a                  	// #58
  436c1c:	movk	w17, #0xcccc, lsl #16
  436c20:	b	436c58 <argp_parse@@Base+0x2d70>
  436c24:	sub	x19, x19, #0x2
  436c28:	strb	w18, [x19, #1]
  436c2c:	umull	x2, w0, w17
  436c30:	asr	w6, w6, #1
  436c34:	cmp	w6, #0x0
  436c38:	ccmp	w0, #0x9, #0x2, eq  // eq = none
  436c3c:	lsr	x2, x2, #35
  436c40:	add	w1, w2, w2, lsl #2
  436c44:	sub	w0, w0, w1, lsl #1
  436c48:	add	w0, w0, #0x30
  436c4c:	sturb	w0, [x4, #-1]
  436c50:	b.ls	437558 <argp_parse@@Base+0x3670>  // b.plast
  436c54:	mov	w0, w2
  436c58:	sub	x4, x19, #0x1
  436c5c:	tbnz	w6, #0, 436c24 <argp_parse@@Base+0x2d3c>
  436c60:	mov	x1, x4
  436c64:	mov	x4, x19
  436c68:	mov	x19, x1
  436c6c:	b	436c2c <argp_parse@@Base+0x2d44>
  436c70:	cmp	w12, #0x0
  436c74:	mvn	x0, x28
  436c78:	csel	w23, w12, wzr, ge  // ge = tcont
  436c7c:	sxtw	x23, w23
  436c80:	cmp	x23, #0x0
  436c84:	csinc	x23, x23, xzr, ne  // ne = any
  436c88:	cmp	x0, x23
  436c8c:	b.ls	436734 <argp_parse@@Base+0x284c>  // b.plast
  436c90:	cbz	x22, 436ec0 <argp_parse@@Base+0x2fd8>
  436c94:	cmp	w12, #0x1
  436c98:	b.le	436cc8 <argp_parse@@Base+0x2de0>
  436c9c:	sxtw	x12, w12
  436ca0:	cmp	w14, #0x30
  436ca4:	sub	x19, x12, #0x1
  436ca8:	mov	x25, #0x0                   	// #0
  436cac:	b.eq	436cd8 <argp_parse@@Base+0x2df0>  // b.none
  436cb0:	add	x25, x25, #0x1
  436cb4:	mov	x1, x22
  436cb8:	mov	w0, #0x20                  	// #32
  436cbc:	bl	404170 <fputc@plt>
  436cc0:	cmp	x19, x25
  436cc4:	b.ne	436cb0 <argp_parse@@Base+0x2dc8>  // b.any
  436cc8:	mov	x1, x22
  436ccc:	mov	w0, #0x9                   	// #9
  436cd0:	bl	404170 <fputc@plt>
  436cd4:	b	436ec0 <argp_parse@@Base+0x2fd8>
  436cd8:	add	x25, x25, #0x1
  436cdc:	mov	x1, x22
  436ce0:	mov	w0, #0x30                  	// #48
  436ce4:	bl	404170 <fputc@plt>
  436ce8:	cmp	x19, x25
  436cec:	b.ne	436cd8 <argp_parse@@Base+0x2df0>  // b.any
  436cf0:	b	436cc8 <argp_parse@@Base+0x2de0>
  436cf4:	ldp	x4, x5, [x20, #16]
  436cf8:	stp	x4, x5, [sp, #256]
  436cfc:	add	x1, sp, #0xf0
  436d00:	ldp	x2, x3, [x20]
  436d04:	stp	x2, x3, [sp, #240]
  436d08:	add	x19, sp, #0xef
  436d0c:	ldp	x4, x5, [x20, #32]
  436d10:	str	w14, [sp, #128]
  436d14:	ldr	x2, [x20, #48]
  436d18:	str	w12, [sp, #136]
  436d1c:	ldr	x0, [sp, #104]
  436d20:	stp	x4, x5, [sp, #272]
  436d24:	str	x2, [sp, #288]
  436d28:	bl	44f2e8 <_obstack_memory_used@@Base+0xd0f8>
  436d2c:	mov	x5, x0
  436d30:	ldr	w14, [sp, #128]
  436d34:	mov	x15, #0x6666666666666666    	// #7378697629483820646
  436d38:	ldr	w12, [sp, #136]
  436d3c:	mov	x1, x0
  436d40:	movk	x15, #0x6667
  436d44:	mov	w6, #0x30                  	// #48
  436d48:	smulh	x2, x1, x15
  436d4c:	asr	x4, x1, #63
  436d50:	cmp	x5, #0x0
  436d54:	asr	x2, x2, #2
  436d58:	sub	x0, x2, x4
  436d5c:	add	x0, x0, x0, lsl #2
  436d60:	sub	x0, x1, x0, lsl #1
  436d64:	and	w1, w0, #0xff
  436d68:	add	w1, w1, #0x30
  436d6c:	sub	w0, w6, w0, uxtb
  436d70:	and	w1, w1, #0xff
  436d74:	and	w0, w0, #0xff
  436d78:	csel	w0, w1, w0, ge  // ge = tcont
  436d7c:	strb	w0, [x19, #-1]!
  436d80:	subs	x1, x2, x4
  436d84:	b.ne	436d48 <argp_parse@@Base+0x2e60>  // b.any
  436d88:	cmp	w12, #0x0
  436d8c:	csinc	w0, w12, wzr, gt
  436d90:	str	w0, [sp, #136]
  436d94:	tbnz	x5, #63, 43769c <argp_parse@@Base+0x37b4>
  436d98:	add	x25, sp, #0xef
  436d9c:	cmp	w14, #0x2d
  436da0:	sub	x0, x25, x19
  436da4:	str	x0, [sp, #128]
  436da8:	mvn	x0, x28
  436dac:	b.eq	436dc4 <argp_parse@@Base+0x2edc>  // b.none
  436db0:	ldr	w2, [sp, #128]
  436db4:	ldr	w1, [sp, #136]
  436db8:	sub	w2, w1, w2
  436dbc:	cmp	w2, #0x0
  436dc0:	b.gt	437bd8 <argp_parse@@Base+0x3cf0>
  436dc4:	cmp	w12, #0x0
  436dc8:	mov	x25, x21
  436dcc:	csel	w2, w12, wzr, ge  // ge = tcont
  436dd0:	sxtw	x2, w2
  436dd4:	ldr	x1, [sp, #128]
  436dd8:	cmp	x1, x2
  436ddc:	csel	x3, x1, x2, cs  // cs = hs, nlast
  436de0:	str	x3, [sp, #144]
  436de4:	cmp	x3, x0
  436de8:	b.cs	436734 <argp_parse@@Base+0x284c>  // b.hs, b.nlast
  436dec:	cbz	x22, 436e50 <argp_parse@@Base+0x2f68>
  436df0:	ldr	w0, [sp, #136]
  436df4:	cmp	w0, #0x0
  436df8:	ccmp	x1, x2, #0x2, eq  // eq = none
  436dfc:	b.cs	436e3c <argp_parse@@Base+0x2f54>  // b.hs, b.nlast
  436e00:	ldr	x0, [sp, #128]
  436e04:	sxtw	x12, w12
  436e08:	cmp	w14, #0x30
  436e0c:	sub	x0, x12, x0
  436e10:	str	x0, [sp, #136]
  436e14:	b.eq	4378e8 <argp_parse@@Base+0x3a00>  // b.none
  436e18:	mov	x21, #0x0                   	// #0
  436e1c:	cbz	x0, 436e3c <argp_parse@@Base+0x2f54>
  436e20:	mov	x1, x22
  436e24:	mov	w0, #0x20                  	// #32
  436e28:	bl	404170 <fputc@plt>
  436e2c:	add	x21, x21, #0x1
  436e30:	ldr	x0, [sp, #136]
  436e34:	cmp	x0, x21
  436e38:	b.ne	436e20 <argp_parse@@Base+0x2f38>  // b.any
  436e3c:	cbz	w23, 437720 <argp_parse@@Base+0x3838>
  436e40:	ldr	x2, [sp, #128]
  436e44:	mov	x1, x19
  436e48:	mov	x0, x22
  436e4c:	bl	436608 <argp_parse@@Base+0x2720>
  436e50:	ldr	x0, [sp, #144]
  436e54:	add	x28, x28, x0
  436e58:	b	436704 <argp_parse@@Base+0x281c>
  436e5c:	cmp	w12, #0x0
  436e60:	mvn	x0, x28
  436e64:	csel	w23, w12, wzr, ge  // ge = tcont
  436e68:	sxtw	x23, w23
  436e6c:	cmp	x23, #0x0
  436e70:	csinc	x23, x23, xzr, ne  // ne = any
  436e74:	cmp	x0, x23
  436e78:	b.ls	436734 <argp_parse@@Base+0x284c>  // b.plast
  436e7c:	cbz	x22, 436ec0 <argp_parse@@Base+0x2fd8>
  436e80:	cmp	w12, #0x1
  436e84:	b.le	436eb4 <argp_parse@@Base+0x2fcc>
  436e88:	sxtw	x12, w12
  436e8c:	cmp	w14, #0x30
  436e90:	sub	x19, x12, #0x1
  436e94:	mov	x25, #0x0                   	// #0
  436e98:	b.eq	436ecc <argp_parse@@Base+0x2fe4>  // b.none
  436e9c:	add	x25, x25, #0x1
  436ea0:	mov	x1, x22
  436ea4:	mov	w0, #0x20                  	// #32
  436ea8:	bl	404170 <fputc@plt>
  436eac:	cmp	x19, x25
  436eb0:	b.ne	436e9c <argp_parse@@Base+0x2fb4>  // b.any
  436eb4:	mov	x1, x22
  436eb8:	mov	w0, #0xa                   	// #10
  436ebc:	bl	404170 <fputc@plt>
  436ec0:	add	x28, x28, x23
  436ec4:	mov	x25, x21
  436ec8:	b	436704 <argp_parse@@Base+0x281c>
  436ecc:	add	x25, x25, #0x1
  436ed0:	mov	x1, x22
  436ed4:	mov	w0, #0x30                  	// #48
  436ed8:	bl	404170 <fputc@plt>
  436edc:	cmp	x19, x25
  436ee0:	b.ne	436ecc <argp_parse@@Base+0x2fe4>  // b.any
  436ee4:	b	436eb4 <argp_parse@@Base+0x2fcc>
  436ee8:	cmp	w19, #0x45
  436eec:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  436ef0:	ldr	w0, [x20, #16]
  436ef4:	mov	w6, #0x0                   	// #0
  436ef8:	mov	w5, #0x0                   	// #0
  436efc:	mov	w16, #0x2                   	// #2
  436f00:	adds	w0, w0, #0x1
  436f04:	cset	w15, lt  // lt = tstop
  436f08:	b	436b74 <argp_parse@@Base+0x2c8c>
  436f0c:	cmp	w19, #0x45
  436f10:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  436f14:	mov	w0, w26
  436f18:	cmp	w14, #0x30
  436f1c:	mov	w1, #0x2d                  	// #45
  436f20:	ccmp	w14, w1, #0x4, ne  // ne = any
  436f24:	mov	w16, #0x2                   	// #2
  436f28:	mov	w1, #0x5f                  	// #95
  436f2c:	csel	w14, w14, w1, eq  // eq = none
  436f30:	b	436b68 <argp_parse@@Base+0x2c80>
  436f34:	cmp	w19, #0x45
  436f38:	b.eq	43793c <argp_parse@@Base+0x3a54>  // b.none
  436f3c:	ldr	w1, [x20, #20]
  436f40:	mov	w0, #0x851f                	// #34079
  436f44:	movk	w0, #0x51eb, lsl #16
  436f48:	mov	w2, #0x64                  	// #100
  436f4c:	mov	w16, #0x2                   	// #2
  436f50:	smull	x0, w1, w0
  436f54:	asr	x0, x0, #37
  436f58:	sub	w0, w0, w1, asr #31
  436f5c:	msub	w0, w0, w2, w1
  436f60:	tbz	w0, #31, 436b68 <argp_parse@@Base+0x2c80>
  436f64:	neg	w2, w0
  436f68:	cmn	w1, #0x76d
  436f6c:	add	w0, w0, #0x64
  436f70:	csel	w0, w0, w2, gt
  436f74:	b	436b68 <argp_parse@@Base+0x2c80>
  436f78:	cmp	w25, #0x0
  436f7c:	mov	x0, x27
  436f80:	csel	w23, w23, wzr, eq  // eq = none
  436f84:	str	w12, [sp, #128]
  436f88:	str	w14, [sp, #136]
  436f8c:	bl	403ff0 <strlen@plt>
  436f90:	mov	x2, x0
  436f94:	ldr	w12, [sp, #128]
  436f98:	mvn	x1, x28
  436f9c:	cmp	w12, #0x0
  436fa0:	csel	w0, w12, wzr, ge  // ge = tcont
  436fa4:	sxtw	x0, w0
  436fa8:	cmp	x2, x0
  436fac:	csel	x3, x2, x0, cs  // cs = hs, nlast
  436fb0:	str	x3, [sp, #144]
  436fb4:	cmp	x1, x3
  436fb8:	b.ls	436734 <argp_parse@@Base+0x284c>  // b.plast
  436fbc:	cbz	x22, 43701c <argp_parse@@Base+0x3134>
  436fc0:	ldr	w14, [sp, #136]
  436fc4:	cmp	x2, x0
  436fc8:	b.cs	437008 <argp_parse@@Base+0x3120>  // b.hs, b.nlast
  436fcc:	sxtw	x12, w12
  436fd0:	cmp	w14, #0x30
  436fd4:	sub	x19, x12, x2
  436fd8:	b.eq	437cb4 <argp_parse@@Base+0x3dcc>  // b.none
  436fdc:	mov	x4, #0x0                   	// #0
  436fe0:	cbz	x19, 437008 <argp_parse@@Base+0x3120>
  436fe4:	add	x4, x4, #0x1
  436fe8:	mov	x1, x22
  436fec:	mov	w0, #0x20                  	// #32
  436ff0:	stp	x4, x2, [sp, #128]
  436ff4:	str	x4, [sp, #152]
  436ff8:	bl	404170 <fputc@plt>
  436ffc:	ldp	x4, x2, [sp, #128]
  437000:	cmp	x19, x4
  437004:	b.ne	436fe4 <argp_parse@@Base+0x30fc>  // b.any
  437008:	cbnz	w25, 437c20 <argp_parse@@Base+0x3d38>
  43700c:	cbz	w23, 437c08 <argp_parse@@Base+0x3d20>
  437010:	mov	x1, x27
  437014:	mov	x0, x22
  437018:	bl	436608 <argp_parse@@Base+0x2720>
  43701c:	ldr	x0, [sp, #144]
  437020:	mov	x25, x21
  437024:	add	x28, x28, x0
  437028:	b	436704 <argp_parse@@Base+0x281c>
  43702c:	cmp	w19, #0x45
  437030:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  437034:	ldr	w0, [x20, #8]
  437038:	b	436f18 <argp_parse@@Base+0x3030>
  43703c:	cmp	w19, #0x45
  437040:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  437044:	ldr	w0, [x20, #12]
  437048:	b	436f18 <argp_parse@@Base+0x3030>
  43704c:	cmp	w19, #0x45
  437050:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  437054:	ldr	w0, [x20, #12]
  437058:	mov	w16, #0x2                   	// #2
  43705c:	b	436b68 <argp_parse@@Base+0x2c80>
  437060:	cmp	w19, #0x45
  437064:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  437068:	ldr	w0, [x20, #28]
  43706c:	mov	w6, #0x0                   	// #0
  437070:	mov	w5, #0x0                   	// #0
  437074:	mov	w16, #0x3                   	// #3
  437078:	adds	w0, w0, #0x1
  43707c:	cset	w15, lt  // lt = tstop
  437080:	b	436b74 <argp_parse@@Base+0x2c8c>
  437084:	cmp	w19, #0x45
  437088:	b.eq	43793c <argp_parse@@Base+0x3a54>  // b.none
  43708c:	cmp	w19, #0x4f
  437090:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  437094:	ldr	w0, [x20, #20]
  437098:	mov	w6, #0x0                   	// #0
  43709c:	mov	w5, #0x0                   	// #0
  4370a0:	mov	w16, #0x4                   	// #4
  4370a4:	adds	w0, w0, #0x76c
  4370a8:	cset	w15, lt  // lt = tstop
  4370ac:	nop
  4370b0:	cmp	w15, #0x0
  4370b4:	cneg	w0, w0, ne  // ne = any
  4370b8:	b	436c10 <argp_parse@@Base+0x2d28>
  4370bc:	cmp	w19, #0x45
  4370c0:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  4370c4:	ldp	w2, w3, [x20, #24]
  4370c8:	mov	w0, #0x2493                	// #9363
  4370cc:	movk	w0, #0x9249, lsl #16
  4370d0:	mov	w16, #0x2                   	// #2
  4370d4:	add	w2, w2, #0x6
  4370d8:	smull	x1, w2, w0
  4370dc:	lsr	x1, x1, #32
  4370e0:	add	w1, w2, w1
  4370e4:	asr	w1, w1, #2
  4370e8:	sub	w1, w1, w2, asr #31
  4370ec:	lsl	w5, w1, #3
  4370f0:	sub	w1, w5, w1
  4370f4:	sub	w2, w2, w1
  4370f8:	sub	w2, w3, w2
  4370fc:	add	w1, w2, #0x7
  437100:	smull	x0, w1, w0
  437104:	lsr	x0, x0, #32
  437108:	add	w0, w1, w0
  43710c:	asr	w0, w0, #2
  437110:	sub	w0, w0, w1, asr #31
  437114:	b	436b68 <argp_parse@@Base+0x2c80>
  437118:	cmp	w19, #0x45
  43711c:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  437120:	ldp	w2, w1, [x20, #24]
  437124:	mov	w0, #0x2493                	// #9363
  437128:	movk	w0, #0x9249, lsl #16
  43712c:	mov	w16, #0x2                   	// #2
  437130:	sub	w1, w1, w2
  437134:	add	w1, w1, #0x7
  437138:	b	437100 <argp_parse@@Base+0x3218>
  43713c:	cmp	w19, #0x45
  437140:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  437144:	ldr	w0, [x20]
  437148:	mov	w16, #0x2                   	// #2
  43714c:	b	436b68 <argp_parse@@Base+0x2c80>
  437150:	cbnz	w19, 4367b0 <argp_parse@@Base+0x28c8>
  437154:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x19e10>
  437158:	add	x25, x25, #0x768
  43715c:	ldp	x5, x4, [sp, #104]
  437160:	mov	w3, w23
  437164:	ldr	w6, [sp, #192]
  437168:	mov	x2, x20
  43716c:	mov	x1, x25
  437170:	mov	x0, #0x0                   	// #0
  437174:	str	w12, [sp, #128]
  437178:	str	w14, [sp, #144]
  43717c:	bl	436668 <argp_parse@@Base+0x2780>
  437180:	ldr	w12, [sp, #128]
  437184:	mvn	x2, x28
  437188:	cmp	w12, #0x0
  43718c:	csel	w1, w12, wzr, ge  // ge = tcont
  437190:	sxtw	x1, w1
  437194:	cmp	x0, x1
  437198:	csel	x3, x0, x1, cs  // cs = hs, nlast
  43719c:	str	x3, [sp, #136]
  4371a0:	cmp	x2, x3
  4371a4:	b.ls	436734 <argp_parse@@Base+0x284c>  // b.plast
  4371a8:	cbz	x22, 437210 <argp_parse@@Base+0x3328>
  4371ac:	ldr	w14, [sp, #144]
  4371b0:	cmp	x0, x1
  4371b4:	b.cs	4371f4 <argp_parse@@Base+0x330c>  // b.hs, b.nlast
  4371b8:	sxtw	x12, w12
  4371bc:	cmp	w14, #0x30
  4371c0:	sub	x0, x12, x0
  4371c4:	str	x0, [sp, #128]
  4371c8:	b.eq	437a30 <argp_parse@@Base+0x3b48>  // b.none
  4371cc:	mov	x19, #0x0                   	// #0
  4371d0:	cbz	x0, 4371f4 <argp_parse@@Base+0x330c>
  4371d4:	nop
  4371d8:	mov	x1, x22
  4371dc:	mov	w0, #0x20                  	// #32
  4371e0:	bl	404170 <fputc@plt>
  4371e4:	add	x19, x19, #0x1
  4371e8:	ldr	x0, [sp, #128]
  4371ec:	cmp	x0, x19
  4371f0:	b.ne	4371d8 <argp_parse@@Base+0x32f0>  // b.any
  4371f4:	ldp	x5, x4, [sp, #104]
  4371f8:	mov	w3, w23
  4371fc:	ldr	w6, [sp, #192]
  437200:	mov	x1, x25
  437204:	mov	x2, x20
  437208:	mov	x0, x22
  43720c:	bl	436668 <argp_parse@@Base+0x2780>
  437210:	ldr	x0, [sp, #136]
  437214:	mov	x25, x21
  437218:	add	x28, x28, x0
  43721c:	b	436704 <argp_parse@@Base+0x281c>
  437220:	cbnz	w19, 4367b0 <argp_parse@@Base+0x28c8>
  437224:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x19e10>
  437228:	add	x25, x25, #0x750
  43722c:	b	43715c <argp_parse@@Base+0x3274>
  437230:	cmp	w19, #0x45
  437234:	b.eq	43793c <argp_parse@@Base+0x3a54>  // b.none
  437238:	ldr	w2, [x20, #20]
  43723c:	mov	w1, #0x851f                	// #34079
  437240:	movk	w1, #0x51eb, lsl #16
  437244:	mov	w3, #0x64                  	// #100
  437248:	mov	w6, #0x0                   	// #0
  43724c:	mov	w5, #0x0                   	// #0
  437250:	mov	w16, #0x2                   	// #2
  437254:	smull	x1, w2, w1
  437258:	asr	x1, x1, #37
  43725c:	sub	w1, w1, w2, asr #31
  437260:	add	w0, w1, #0x13
  437264:	msub	w1, w1, w3, w2
  437268:	cmp	w1, #0x0
  43726c:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  437270:	cset	w1, gt
  437274:	cmn	w2, #0x76c
  437278:	sub	w0, w0, w1
  43727c:	cset	w15, lt  // lt = tstop
  437280:	b	436b74 <argp_parse@@Base+0x2c8c>
  437284:	cmp	w19, #0x45
  437288:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  43728c:	cmn	w12, #0x1
  437290:	b.ne	437b00 <argp_parse@@Base+0x3c18>  // b.any
  437294:	mov	w12, #0x9                   	// #9
  437298:	ldr	w0, [sp, #192]
  43729c:	mov	w16, w12
  4372a0:	b	436b68 <argp_parse@@Base+0x2c80>
  4372a4:	cmp	w19, #0x45
  4372a8:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  4372ac:	ldr	w0, [x20, #4]
  4372b0:	mov	w16, #0x2                   	// #2
  4372b4:	b	436b68 <argp_parse@@Base+0x2c80>
  4372b8:	cmp	w19, #0x45
  4372bc:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  4372c0:	mov	w0, w26
  4372c4:	mov	w16, #0x2                   	// #2
  4372c8:	b	436b68 <argp_parse@@Base+0x2c80>
  4372cc:	cmp	w19, #0x45
  4372d0:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  4372d4:	ldr	w0, [x20, #8]
  4372d8:	mov	w16, #0x2                   	// #2
  4372dc:	b	436b68 <argp_parse@@Base+0x2c80>
  4372e0:	cmp	w19, #0x45
  4372e4:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  4372e8:	ldr	w0, [x20, #24]
  4372ec:	mov	w16, #0x1                   	// #1
  4372f0:	b	436b68 <argp_parse@@Base+0x2c80>
  4372f4:	ldr	w1, [x20, #24]
  4372f8:	mov	w0, #0x2493                	// #9363
  4372fc:	movk	w0, #0x9249, lsl #16
  437300:	mov	w16, #0x1                   	// #1
  437304:	add	w1, w1, #0x6
  437308:	smull	x0, w1, w0
  43730c:	lsr	x0, x0, #32
  437310:	add	w0, w1, w0
  437314:	asr	w0, w0, #2
  437318:	sub	w0, w0, w1, asr #31
  43731c:	lsl	w2, w0, #3
  437320:	sub	w0, w2, w0
  437324:	sub	w0, w1, w0
  437328:	add	w0, w0, w16
  43732c:	b	436b68 <argp_parse@@Base+0x2c80>
  437330:	ldurb	w0, [x21, #-1]
  437334:	sub	x1, x21, #0x1
  437338:	str	x1, [sp, #144]
  43733c:	cmp	w12, #0x0
  437340:	mvn	x2, x28
  437344:	csel	w1, w12, wzr, ge  // ge = tcont
  437348:	cmp	w0, #0x25
  43734c:	sxtw	x1, w1
  437350:	b.ne	437d8c <argp_parse@@Base+0x3ea4>  // b.any
  437354:	cmp	x1, #0x0
  437358:	mov	x19, #0x1                   	// #1
  43735c:	csel	x0, x1, x19, ne  // ne = any
  437360:	str	x0, [sp, #136]
  437364:	ldr	x25, [sp, #144]
  437368:	b	4367f0 <argp_parse@@Base+0x2908>
  43736c:	cmp	w12, #0x0
  437370:	mov	x3, #0x1                   	// #1
  437374:	csel	w1, w12, wzr, ge  // ge = tcont
  437378:	mvn	x2, x28
  43737c:	sxtw	x1, w1
  437380:	cmp	x1, #0x0
  437384:	csel	x4, x1, x3, ne  // ne = any
  437388:	str	x4, [sp, #136]
  43738c:	cbnz	w19, 437c58 <argp_parse@@Base+0x3d70>
  437390:	cmp	x4, x2
  437394:	b.cs	436734 <argp_parse@@Base+0x284c>  // b.hs, b.nlast
  437398:	cbz	x22, 437210 <argp_parse@@Base+0x3328>
  43739c:	cmp	w12, #0x1
  4373a0:	b.le	4373d4 <argp_parse@@Base+0x34ec>
  4373a4:	sxtw	x12, w12
  4373a8:	cmp	w14, #0x30
  4373ac:	sub	x19, x12, #0x1
  4373b0:	mov	x23, #0x0                   	// #0
  4373b4:	b.eq	4373e0 <argp_parse@@Base+0x34f8>  // b.none
  4373b8:	add	x23, x23, #0x1
  4373bc:	mov	x1, x22
  4373c0:	mov	w0, #0x20                  	// #32
  4373c4:	bl	404170 <fputc@plt>
  4373c8:	cmp	x19, x23
  4373cc:	b.ne	4373b8 <argp_parse@@Base+0x34d0>  // b.any
  4373d0:	ldrb	w0, [x21]
  4373d4:	mov	x1, x22
  4373d8:	bl	404170 <fputc@plt>
  4373dc:	b	437210 <argp_parse@@Base+0x3328>
  4373e0:	add	x23, x23, #0x1
  4373e4:	mov	x1, x22
  4373e8:	mov	w0, #0x30                  	// #48
  4373ec:	bl	404170 <fputc@plt>
  4373f0:	cmp	x19, x23
  4373f4:	b.ne	4373e0 <argp_parse@@Base+0x34f8>  // b.any
  4373f8:	b	4373d0 <argp_parse@@Base+0x34e8>
  4373fc:	cmp	w19, #0x45
  437400:	b.eq	4367b0 <argp_parse@@Base+0x28c8>  // b.none
  437404:	cmp	w25, #0x0
  437408:	str	wzr, [sp, #136]
  43740c:	csel	w23, w23, w25, eq  // eq = none
  437410:	b	436930 <argp_parse@@Base+0x2a48>
  437414:	ldrb	w0, [x21, #1]
  437418:	add	x25, x21, #0x1
  43741c:	mov	x16, #0x1                   	// #1
  437420:	cmp	w0, #0x3a
  437424:	b.eq	437540 <argp_parse@@Base+0x3658>  // b.none
  437428:	cmp	w0, #0x7a
  43742c:	b.ne	4367b0 <argp_parse@@Base+0x28c8>  // b.any
  437430:	ldr	w0, [x20, #32]
  437434:	tbnz	w0, #31, 436704 <argp_parse@@Base+0x281c>
  437438:	ldr	x2, [x20, #40]
  43743c:	mov	w15, #0x1                   	// #1
  437440:	cmp	w2, #0x0
  437444:	b.lt	43745c <argp_parse@@Base+0x3574>  // b.tstop
  437448:	mov	w15, #0x0                   	// #0
  43744c:	b.ne	43745c <argp_parse@@Base+0x3574>  // b.any
  437450:	ldrb	w0, [x27]
  437454:	cmp	w0, #0x2d
  437458:	cset	w15, eq  // eq = none
  43745c:	mov	w6, #0x8889                	// #34953
  437460:	asr	w3, w2, #31
  437464:	movk	w6, #0x8888, lsl #16
  437468:	mov	w0, #0xb3c5                	// #46021
  43746c:	movk	w0, #0x91a2, lsl #16
  437470:	cmp	x16, #0x2
  437474:	smull	x1, w2, w6
  437478:	smull	x0, w2, w0
  43747c:	lsr	x1, x1, #32
  437480:	add	w1, w1, w2
  437484:	lsr	x0, x0, #32
  437488:	add	w0, w0, w2
  43748c:	asr	w1, w1, #5
  437490:	sub	w1, w1, w3
  437494:	asr	w0, w0, #11
  437498:	sub	w0, w0, w3
  43749c:	lsl	w3, w1, #4
  4374a0:	smull	x6, w1, w6
  4374a4:	sub	w3, w3, w1
  4374a8:	sub	w2, w2, w3, lsl #2
  4374ac:	lsr	x6, x6, #32
  4374b0:	add	w6, w1, w6
  4374b4:	asr	w6, w6, #5
  4374b8:	sub	w6, w6, w1, asr #31
  4374bc:	lsl	w3, w6, #4
  4374c0:	sub	w6, w3, w6
  4374c4:	sub	w6, w1, w6, lsl #2
  4374c8:	b.eq	437be0 <argp_parse@@Base+0x3cf8>  // b.none
  4374cc:	b.hi	437920 <argp_parse@@Base+0x3a38>  // b.pmore
  4374d0:	cbz	x16, 437c3c <argp_parse@@Base+0x3d54>
  4374d4:	mov	w1, #0x64                  	// #100
  4374d8:	mov	x21, x25
  4374dc:	mov	w5, #0x1                   	// #1
  4374e0:	mov	w16, #0x6                   	// #6
  4374e4:	madd	w0, w0, w1, w6
  4374e8:	mov	w6, #0x4                   	// #4
  4374ec:	b	436b74 <argp_parse@@Base+0x2c8c>
  4374f0:	str	wzr, [sp, #136]
  4374f4:	ldr	w0, [sp, #136]
  4374f8:	cmp	w25, #0x0
  4374fc:	csel	w23, w23, wzr, eq  // eq = none
  437500:	mov	w4, #0x70                  	// #112
  437504:	csel	w0, w0, w25, eq  // eq = none
  437508:	str	w0, [sp, #136]
  43750c:	b	436930 <argp_parse@@Base+0x2a48>
  437510:	mov	x25, x21
  437514:	mov	x16, #0x0                   	// #0
  437518:	b	437430 <argp_parse@@Base+0x3548>
  43751c:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x19e10>
  437520:	add	x25, x25, #0x760
  437524:	b	43715c <argp_parse@@Base+0x3274>
  437528:	mov	w0, #0x1                   	// #1
  43752c:	str	w0, [sp, #136]
  437530:	b	4374f4 <argp_parse@@Base+0x360c>
  437534:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x19e10>
  437538:	add	x25, x25, #0x740
  43753c:	b	43715c <argp_parse@@Base+0x3274>
  437540:	add	x16, x16, #0x1
  437544:	add	x25, x21, x16
  437548:	ldrb	w0, [x21, x16]
  43754c:	cmp	w0, #0x3a
  437550:	b.ne	437428 <argp_parse@@Base+0x3540>  // b.any
  437554:	b	437540 <argp_parse@@Base+0x3658>
  437558:	cmp	w16, w12
  43755c:	csel	w0, w16, w12, ge  // ge = tcont
  437560:	str	w0, [sp, #136]
  437564:	cbnz	w15, 43769c <argp_parse@@Base+0x37b4>
  437568:	cbz	w5, 436d98 <argp_parse@@Base+0x2eb0>
  43756c:	cmp	w14, #0x2d
  437570:	mov	w0, #0x2b                  	// #43
  437574:	b.eq	437970 <argp_parse@@Base+0x3a88>  // b.none
  437578:	str	w0, [sp, #144]
  43757c:	ldr	w0, [sp, #136]
  437580:	add	x25, sp, #0xef
  437584:	sub	x1, x25, x19
  437588:	str	x1, [sp, #128]
  43758c:	sub	w2, w0, #0x1
  437590:	mvn	x0, x28
  437594:	sub	w2, w2, w1
  437598:	cmp	w2, #0x0
  43759c:	b.le	4377b4 <argp_parse@@Base+0x38cc>
  4375a0:	cmp	w14, #0x5f
  4375a4:	b.eq	437870 <argp_parse@@Base+0x3988>  // b.none
  4375a8:	ldr	w3, [sp, #136]
  4375ac:	cmp	x0, w3, sxtw
  4375b0:	b.ls	436734 <argp_parse@@Base+0x284c>  // b.plast
  4375b4:	ldr	w1, [sp, #144]
  4375b8:	cbz	w1, 437658 <argp_parse@@Base+0x3770>
  4375bc:	cmp	w12, #0x0
  4375c0:	csel	w1, w12, wzr, ge  // ge = tcont
  4375c4:	sxtw	x1, w1
  4375c8:	cmp	x1, #0x0
  4375cc:	csinc	x4, x1, xzr, ne  // ne = any
  4375d0:	str	x4, [sp, #168]
  4375d4:	cmp	x4, x0
  4375d8:	b.cs	436734 <argp_parse@@Base+0x284c>  // b.hs, b.nlast
  4375dc:	cbz	x22, 437650 <argp_parse@@Base+0x3768>
  4375e0:	cmp	w3, #0x0
  4375e4:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  4375e8:	b.ls	437634 <argp_parse@@Base+0x374c>  // b.plast
  4375ec:	sxtw	x12, w12
  4375f0:	cmp	w14, #0x30
  4375f4:	sub	x0, x12, #0x1
  4375f8:	str	x0, [sp, #160]
  4375fc:	b.eq	437d30 <argp_parse@@Base+0x3e48>  // b.none
  437600:	mov	x25, #0x0                   	// #0
  437604:	cbz	x0, 437634 <argp_parse@@Base+0x374c>
  437608:	mov	x1, x22
  43760c:	mov	w0, #0x20                  	// #32
  437610:	str	w14, [sp, #128]
  437614:	add	x25, x25, #0x1
  437618:	str	w2, [sp, #152]
  43761c:	bl	404170 <fputc@plt>
  437620:	ldr	x0, [sp, #160]
  437624:	ldr	w14, [sp, #128]
  437628:	ldr	w2, [sp, #152]
  43762c:	cmp	x0, x25
  437630:	b.ne	437608 <argp_parse@@Base+0x3720>  // b.any
  437634:	ldr	w0, [sp, #144]
  437638:	mov	x1, x22
  43763c:	str	w14, [sp, #128]
  437640:	str	w2, [sp, #152]
  437644:	bl	404170 <fputc@plt>
  437648:	ldr	w14, [sp, #128]
  43764c:	ldr	w2, [sp, #152]
  437650:	ldr	x0, [sp, #168]
  437654:	add	x28, x28, x0
  437658:	sxtw	x0, w2
  43765c:	str	x0, [sp, #144]
  437660:	cbnz	x22, 4378bc <argp_parse@@Base+0x39d4>
  437664:	ldr	x0, [sp, #144]
  437668:	add	x1, sp, #0xef
  43766c:	sub	x1, x1, x19
  437670:	mov	x25, x21
  437674:	add	x28, x28, x0
  437678:	mov	x2, #0x0                   	// #0
  43767c:	mvn	x0, x28
  437680:	mov	w12, #0x0                   	// #0
  437684:	str	x1, [sp, #128]
  437688:	b	436dd4 <argp_parse@@Base+0x2eec>
  43768c:	mov	x21, x0
  437690:	mov	w12, #0x7fffffff            	// #2147483647
  437694:	mov	w0, w4
  437698:	b	4368cc <argp_parse@@Base+0x29e4>
  43769c:	mov	w0, #0x2d                  	// #45
  4376a0:	str	w0, [sp, #144]
  4376a4:	cmp	w14, #0x2d
  4376a8:	b.ne	43757c <argp_parse@@Base+0x3694>  // b.any
  4376ac:	str	w14, [sp, #160]
  4376b0:	cmp	w12, #0x0
  4376b4:	mvn	x0, x28
  4376b8:	csel	w2, w12, wzr, ge  // ge = tcont
  4376bc:	sxtw	x2, w2
  4376c0:	cmp	x2, #0x0
  4376c4:	csinc	x25, x2, xzr, ne  // ne = any
  4376c8:	cmp	x0, x25
  4376cc:	b.ls	436734 <argp_parse@@Base+0x284c>  // b.plast
  4376d0:	cbz	x22, 437700 <argp_parse@@Base+0x3818>
  4376d4:	ldr	w0, [sp, #136]
  4376d8:	cmp	w0, #0x0
  4376dc:	ccmp	x2, #0x1, #0x0, eq  // eq = none
  4376e0:	b.hi	437b88 <argp_parse@@Base+0x3ca0>  // b.pmore
  4376e4:	ldr	w0, [sp, #160]
  4376e8:	mov	x1, x22
  4376ec:	str	x2, [sp, #128]
  4376f0:	str	w12, [sp, #144]
  4376f4:	bl	404170 <fputc@plt>
  4376f8:	ldr	w12, [sp, #144]
  4376fc:	ldr	x2, [sp, #128]
  437700:	add	x28, x28, x25
  437704:	add	x1, sp, #0xef
  437708:	mov	x25, x21
  43770c:	sub	x1, x1, x19
  437710:	mvn	x0, x28
  437714:	mov	w14, #0x2d                  	// #45
  437718:	str	x1, [sp, #128]
  43771c:	b	436dd4 <argp_parse@@Base+0x2eec>
  437720:	ldr	x1, [sp, #128]
  437724:	mov	x0, x19
  437728:	mov	x3, x22
  43772c:	mov	x2, #0x1                   	// #1
  437730:	bl	4048b0 <fwrite@plt>
  437734:	b	436e50 <argp_parse@@Base+0x2f68>
  437738:	ldr	x0, [sp, #144]
  43773c:	mov	x1, x19
  437740:	mov	x3, x22
  437744:	mov	x2, #0x1                   	// #1
  437748:	bl	4048b0 <fwrite@plt>
  43774c:	b	436858 <argp_parse@@Base+0x2970>
  437750:	ldr	x0, [sp, #120]
  437754:	mov	x1, x21
  437758:	mov	x3, x22
  43775c:	mov	x2, #0x1                   	// #1
  437760:	bl	4048b0 <fwrite@plt>
  437764:	b	436a00 <argp_parse@@Base+0x2b18>
  437768:	ldr	x1, [sp, #120]
  43776c:	mov	x2, x21
  437770:	mov	x0, x22
  437774:	bl	4365a8 <argp_parse@@Base+0x26c0>
  437778:	b	436a00 <argp_parse@@Base+0x2b18>
  43777c:	ldr	x0, [sp, #128]
  437780:	cbz	x0, 4369e4 <argp_parse@@Base+0x2afc>
  437784:	mov	x2, #0x0                   	// #0
  437788:	add	x2, x2, #0x1
  43778c:	mov	x1, x22
  437790:	mov	w0, #0x30                  	// #48
  437794:	str	x2, [sp, #144]
  437798:	str	x2, [sp, #160]
  43779c:	bl	404170 <fputc@plt>
  4377a0:	ldr	x0, [sp, #128]
  4377a4:	ldr	x2, [sp, #144]
  4377a8:	cmp	x0, x2
  4377ac:	b.ne	437788 <argp_parse@@Base+0x38a0>  // b.any
  4377b0:	b	4369e4 <argp_parse@@Base+0x2afc>
  4377b4:	cmp	w12, #0x0
  4377b8:	csel	w2, w12, wzr, ge  // ge = tcont
  4377bc:	sxtw	x2, w2
  4377c0:	cmp	x2, #0x0
  4377c4:	csinc	x1, x2, xzr, ne  // ne = any
  4377c8:	str	x1, [sp, #184]
  4377cc:	cmp	x1, x0
  4377d0:	b.cs	436734 <argp_parse@@Base+0x284c>  // b.hs, b.nlast
  4377d4:	cbz	x22, 43785c <argp_parse@@Base+0x3974>
  4377d8:	ldr	w0, [sp, #136]
  4377dc:	cmp	w0, #0x0
  4377e0:	ccmp	x2, #0x1, #0x0, eq  // eq = none
  4377e4:	b.ls	437838 <argp_parse@@Base+0x3950>  // b.plast
  4377e8:	sxtw	x0, w12
  4377ec:	cmp	w14, #0x30
  4377f0:	sub	x0, x0, #0x1
  4377f4:	str	x0, [sp, #176]
  4377f8:	b.eq	437c68 <argp_parse@@Base+0x3d80>  // b.none
  4377fc:	mov	x25, #0x0                   	// #0
  437800:	cbz	x0, 437838 <argp_parse@@Base+0x3950>
  437804:	mov	x1, x22
  437808:	mov	w0, #0x20                  	// #32
  43780c:	str	w14, [sp, #152]
  437810:	add	x25, x25, #0x1
  437814:	str	x2, [sp, #160]
  437818:	str	w12, [sp, #168]
  43781c:	bl	404170 <fputc@plt>
  437820:	ldr	x0, [sp, #176]
  437824:	ldr	w14, [sp, #152]
  437828:	ldr	w12, [sp, #168]
  43782c:	cmp	x0, x25
  437830:	ldr	x2, [sp, #160]
  437834:	b.ne	437804 <argp_parse@@Base+0x391c>  // b.any
  437838:	ldr	w0, [sp, #144]
  43783c:	mov	x1, x22
  437840:	str	w14, [sp, #152]
  437844:	str	x2, [sp, #160]
  437848:	str	w12, [sp, #168]
  43784c:	bl	404170 <fputc@plt>
  437850:	ldr	w14, [sp, #152]
  437854:	ldr	w12, [sp, #168]
  437858:	ldr	x2, [sp, #160]
  43785c:	mov	x25, x21
  437860:	ldr	x0, [sp, #184]
  437864:	add	x28, x28, x0
  437868:	mvn	x0, x28
  43786c:	b	436dd4 <argp_parse@@Base+0x2eec>
  437870:	cmp	x0, w2, sxtw
  437874:	sxtw	x0, w2
  437878:	str	x0, [sp, #168]
  43787c:	b.ls	436734 <argp_parse@@Base+0x284c>  // b.plast
  437880:	cbnz	x22, 4379f0 <argp_parse@@Base+0x3b08>
  437884:	ldr	x0, [sp, #168]
  437888:	cmp	w12, w2
  43788c:	add	x28, x28, x0
  437890:	b.gt	437978 <argp_parse@@Base+0x3a90>
  437894:	mov	x2, #0x0                   	// #0
  437898:	mov	w12, #0x0                   	// #0
  43789c:	ldr	w1, [sp, #144]
  4378a0:	mvn	x0, x28
  4378a4:	cbnz	w1, 437984 <argp_parse@@Base+0x3a9c>
  4378a8:	add	x1, sp, #0xef
  4378ac:	mov	x25, x21
  4378b0:	sub	x1, x1, x19
  4378b4:	str	x1, [sp, #128]
  4378b8:	b	436dd4 <argp_parse@@Base+0x2eec>
  4378bc:	mov	x25, #0x0                   	// #0
  4378c0:	mov	x1, x22
  4378c4:	mov	w0, #0x30                  	// #48
  4378c8:	str	w14, [sp, #128]
  4378cc:	bl	404170 <fputc@plt>
  4378d0:	ldr	x0, [sp, #144]
  4378d4:	add	x25, x25, #0x1
  4378d8:	ldr	w14, [sp, #128]
  4378dc:	cmp	x25, x0
  4378e0:	b.cc	4378c0 <argp_parse@@Base+0x39d8>  // b.lo, b.ul, b.last
  4378e4:	b	437664 <argp_parse@@Base+0x377c>
  4378e8:	ldr	x0, [sp, #136]
  4378ec:	cbz	x0, 436e3c <argp_parse@@Base+0x2f54>
  4378f0:	mov	x2, #0x0                   	// #0
  4378f4:	nop
  4378f8:	add	x2, x2, #0x1
  4378fc:	mov	x1, x22
  437900:	mov	w0, #0x30                  	// #48
  437904:	stp	x2, x2, [sp, #152]
  437908:	bl	404170 <fputc@plt>
  43790c:	ldr	x0, [sp, #136]
  437910:	ldr	x2, [sp, #152]
  437914:	cmp	x0, x2
  437918:	b.ne	4378f8 <argp_parse@@Base+0x3a10>  // b.any
  43791c:	b	436e3c <argp_parse@@Base+0x2f54>
  437920:	cmp	x16, #0x3
  437924:	b.ne	437c30 <argp_parse@@Base+0x3d48>  // b.any
  437928:	cbnz	w2, 437be0 <argp_parse@@Base+0x3cf8>
  43792c:	cbnz	w6, 4374d4 <argp_parse@@Base+0x35ec>
  437930:	mov	x21, x25
  437934:	mov	w5, #0x1                   	// #1
  437938:	b	436b74 <argp_parse@@Base+0x2c8c>
  43793c:	mov	w16, #0x0                   	// #0
  437940:	b	436b84 <argp_parse@@Base+0x2c9c>
  437944:	ldr	x0, [sp, #128]
  437948:	cbz	x0, 436844 <argp_parse@@Base+0x295c>
  43794c:	mov	x21, #0x0                   	// #0
  437950:	mov	x1, x22
  437954:	mov	w0, #0x30                  	// #48
  437958:	bl	404170 <fputc@plt>
  43795c:	add	x21, x21, #0x1
  437960:	ldr	x0, [sp, #128]
  437964:	cmp	x0, x21
  437968:	b.ne	437950 <argp_parse@@Base+0x3a68>  // b.any
  43796c:	b	436844 <argp_parse@@Base+0x295c>
  437970:	str	w0, [sp, #160]
  437974:	b	4376b0 <argp_parse@@Base+0x37c8>
  437978:	sub	w12, w12, w2
  43797c:	sxtw	x2, w12
  437980:	b	43789c <argp_parse@@Base+0x39b4>
  437984:	cmp	x2, #0x0
  437988:	csinc	x1, x2, xzr, ne  // ne = any
  43798c:	str	x1, [sp, #168]
  437990:	cmp	x1, x0
  437994:	b.cs	436734 <argp_parse@@Base+0x284c>  // b.hs, b.nlast
  437998:	cbz	x22, 4379d0 <argp_parse@@Base+0x3ae8>
  43799c:	ldr	w0, [sp, #136]
  4379a0:	cmp	w0, #0x0
  4379a4:	ccmp	x2, #0x1, #0x0, eq  // eq = none
  4379a8:	b.hi	437ce4 <argp_parse@@Base+0x3dfc>  // b.pmore
  4379ac:	ldr	w0, [sp, #144]
  4379b0:	mov	x1, x22
  4379b4:	str	w14, [sp, #128]
  4379b8:	str	x2, [sp, #152]
  4379bc:	str	w12, [sp, #160]
  4379c0:	bl	404170 <fputc@plt>
  4379c4:	ldr	w14, [sp, #128]
  4379c8:	ldr	w12, [sp, #160]
  4379cc:	ldr	x2, [sp, #152]
  4379d0:	add	x1, sp, #0xef
  4379d4:	ldr	x0, [sp, #168]
  4379d8:	sub	x1, x1, x19
  4379dc:	mov	x25, x21
  4379e0:	str	x1, [sp, #128]
  4379e4:	add	x28, x28, x0
  4379e8:	mvn	x0, x28
  4379ec:	b	436dd4 <argp_parse@@Base+0x2eec>
  4379f0:	mov	x25, #0x0                   	// #0
  4379f4:	nop
  4379f8:	mov	x1, x22
  4379fc:	mov	w0, #0x20                  	// #32
  437a00:	str	w14, [sp, #128]
  437a04:	add	x25, x25, #0x1
  437a08:	str	w2, [sp, #152]
  437a0c:	str	w12, [sp, #160]
  437a10:	bl	404170 <fputc@plt>
  437a14:	ldr	x0, [sp, #168]
  437a18:	ldr	w14, [sp, #128]
  437a1c:	ldr	w2, [sp, #152]
  437a20:	cmp	x0, x25
  437a24:	ldr	w12, [sp, #160]
  437a28:	b.hi	4379f8 <argp_parse@@Base+0x3b10>  // b.pmore
  437a2c:	b	437884 <argp_parse@@Base+0x399c>
  437a30:	ldr	x0, [sp, #128]
  437a34:	cbz	x0, 4371f4 <argp_parse@@Base+0x330c>
  437a38:	mov	x2, #0x0                   	// #0
  437a3c:	nop
  437a40:	add	x2, x2, #0x1
  437a44:	mov	x1, x22
  437a48:	mov	w0, #0x30                  	// #48
  437a4c:	stp	x2, x2, [sp, #144]
  437a50:	bl	404170 <fputc@plt>
  437a54:	ldr	x0, [sp, #128]
  437a58:	ldr	x2, [sp, #144]
  437a5c:	cmp	x0, x2
  437a60:	b.ne	437a40 <argp_parse@@Base+0x3b58>  // b.any
  437a64:	b	4371f4 <argp_parse@@Base+0x330c>
  437a68:	sub	w3, w3, #0x1
  437a6c:	mov	w0, #0x16d                 	// #365
  437a70:	tst	x3, #0x3
  437a74:	b.ne	437abc <argp_parse@@Base+0x3bd4>  // b.any
  437a78:	mov	w6, #0x5c29                	// #23593
  437a7c:	mov	w0, #0xb850                	// #47184
  437a80:	movk	w0, #0x51e, lsl #16
  437a84:	movk	w6, #0xc28f, lsl #16
  437a88:	mov	w15, #0x5c28                	// #23592
  437a8c:	madd	w6, w3, w6, w0
  437a90:	movk	w15, #0x28f, lsl #16
  437a94:	mov	w0, #0x16e                 	// #366
  437a98:	ror	w6, w6, #2
  437a9c:	cmp	w6, w15
  437aa0:	b.hi	437abc <argp_parse@@Base+0x3bd4>  // b.pmore
  437aa4:	mov	w6, #0x190                 	// #400
  437aa8:	sdiv	w0, w3, w6
  437aac:	msub	w3, w0, w6, w3
  437ab0:	cmp	w3, #0x0
  437ab4:	cset	w0, eq  // eq = none
  437ab8:	add	w0, w0, #0x16d
  437abc:	add	w5, w5, w0
  437ac0:	mov	w0, #0x2493                	// #9363
  437ac4:	sub	w1, w5, w1
  437ac8:	movk	w0, #0x9249, lsl #16
  437acc:	add	w1, w1, #0x17e
  437ad0:	mov	w3, #0xffffffff            	// #-1
  437ad4:	smull	x0, w1, w0
  437ad8:	lsr	x0, x0, #32
  437adc:	add	w0, w1, w0
  437ae0:	asr	w0, w0, #2
  437ae4:	sub	w0, w0, w1, asr #31
  437ae8:	lsl	w6, w0, #3
  437aec:	sub	w0, w6, w0
  437af0:	sub	w1, w1, w0
  437af4:	sub	w0, w5, w1
  437af8:	add	w0, w0, #0x3
  437afc:	b	436b04 <argp_parse@@Base+0x2c1c>
  437b00:	cmp	w12, #0x8
  437b04:	b.gt	437d78 <argp_parse@@Base+0x3e90>
  437b08:	ldr	w0, [sp, #192]
  437b0c:	mov	w3, #0x6667                	// #26215
  437b10:	mov	w2, w12
  437b14:	movk	w3, #0x6666, lsl #16
  437b18:	smull	x1, w0, w3
  437b1c:	add	w2, w2, #0x1
  437b20:	cmp	w2, #0x9
  437b24:	asr	x1, x1, #34
  437b28:	sub	w0, w1, w0, asr #31
  437b2c:	b.ne	437b18 <argp_parse@@Base+0x3c30>  // b.any
  437b30:	mov	w16, w12
  437b34:	b	436b68 <argp_parse@@Base+0x2c80>
  437b38:	mov	w0, #0xfffff894            	// #-1900
  437b3c:	sub	w0, w0, w3
  437b40:	cmp	w2, w0
  437b44:	add	w0, w2, #0x76c
  437b48:	add	w0, w0, w3
  437b4c:	cset	w15, lt  // lt = tstop
  437b50:	mov	w6, #0x0                   	// #0
  437b54:	mov	w5, #0x0                   	// #0
  437b58:	mov	w16, #0x4                   	// #4
  437b5c:	b	436b74 <argp_parse@@Base+0x2c8c>
  437b60:	mov	w1, #0x2493                	// #9363
  437b64:	mov	w16, #0x2                   	// #2
  437b68:	movk	w1, #0x9249, lsl #16
  437b6c:	smull	x1, w0, w1
  437b70:	lsr	x1, x1, #32
  437b74:	add	w1, w0, w1
  437b78:	asr	w1, w1, #2
  437b7c:	sub	w0, w1, w0, asr #31
  437b80:	add	w0, w0, #0x1
  437b84:	b	436b68 <argp_parse@@Base+0x2c80>
  437b88:	sxtw	x0, w12
  437b8c:	subs	x0, x0, #0x1
  437b90:	str	x0, [sp, #168]
  437b94:	b.eq	4376e4 <argp_parse@@Base+0x37fc>  // b.none
  437b98:	mov	x4, #0x0                   	// #0
  437b9c:	add	x4, x4, #0x1
  437ba0:	mov	x1, x22
  437ba4:	mov	w0, #0x20                  	// #32
  437ba8:	str	x4, [sp, #128]
  437bac:	str	x2, [sp, #144]
  437bb0:	str	w12, [sp, #152]
  437bb4:	str	x4, [sp, #176]
  437bb8:	bl	404170 <fputc@plt>
  437bbc:	ldr	x4, [sp, #128]
  437bc0:	ldr	x0, [sp, #168]
  437bc4:	ldr	w12, [sp, #152]
  437bc8:	cmp	x0, x4
  437bcc:	ldr	x2, [sp, #144]
  437bd0:	b.ne	437b9c <argp_parse@@Base+0x3cb4>  // b.any
  437bd4:	b	4376e4 <argp_parse@@Base+0x37fc>
  437bd8:	str	wzr, [sp, #144]
  437bdc:	b	4375a0 <argp_parse@@Base+0x36b8>
  437be0:	mov	w3, #0x64                  	// #100
  437be4:	mov	w1, #0x2710                	// #10000
  437be8:	mov	x21, x25
  437bec:	mov	w5, #0x1                   	// #1
  437bf0:	mul	w6, w6, w3
  437bf4:	mov	w16, #0x9                   	// #9
  437bf8:	madd	w0, w0, w1, w6
  437bfc:	mov	w6, #0x14                  	// #20
  437c00:	add	w0, w0, w2
  437c04:	b	436b74 <argp_parse@@Base+0x2c8c>
  437c08:	mov	x1, x2
  437c0c:	mov	x3, x22
  437c10:	mov	x0, x27
  437c14:	mov	x2, #0x1                   	// #1
  437c18:	bl	4048b0 <fwrite@plt>
  437c1c:	b	43701c <argp_parse@@Base+0x3134>
  437c20:	mov	x1, x27
  437c24:	mov	x0, x22
  437c28:	bl	4365a8 <argp_parse@@Base+0x26c0>
  437c2c:	b	43701c <argp_parse@@Base+0x3134>
  437c30:	ldrb	w0, [x25]
  437c34:	str	x25, [sp, #144]
  437c38:	b	43733c <argp_parse@@Base+0x3454>
  437c3c:	mov	w1, #0x64                  	// #100
  437c40:	mov	x21, x25
  437c44:	mov	w5, #0x1                   	// #1
  437c48:	mov	w16, #0x5                   	// #5
  437c4c:	madd	w0, w0, w1, w6
  437c50:	mov	w6, #0x0                   	// #0
  437c54:	b	436b74 <argp_parse@@Base+0x2c8c>
  437c58:	mov	x25, x21
  437c5c:	mov	x19, x3
  437c60:	str	x21, [sp, #144]
  437c64:	b	4367f0 <argp_parse@@Base+0x2908>
  437c68:	ldr	x0, [sp, #176]
  437c6c:	cbz	x0, 437838 <argp_parse@@Base+0x3950>
  437c70:	mov	x4, #0x0                   	// #0
  437c74:	add	x4, x4, #0x1
  437c78:	mov	x1, x22
  437c7c:	mov	w0, #0x30                  	// #48
  437c80:	str	x4, [sp, #152]
  437c84:	str	w14, [sp, #160]
  437c88:	str	x2, [sp, #168]
  437c8c:	str	w12, [sp, #196]
  437c90:	str	x4, [sp, #200]
  437c94:	bl	404170 <fputc@plt>
  437c98:	ldp	x2, x0, [sp, #168]
  437c9c:	ldr	x4, [sp, #152]
  437ca0:	ldr	w14, [sp, #160]
  437ca4:	ldr	w12, [sp, #196]
  437ca8:	cmp	x0, x4
  437cac:	b.ne	437c74 <argp_parse@@Base+0x3d8c>  // b.any
  437cb0:	b	437838 <argp_parse@@Base+0x3950>
  437cb4:	cbz	x19, 437008 <argp_parse@@Base+0x3120>
  437cb8:	mov	x4, #0x0                   	// #0
  437cbc:	add	x4, x4, #0x1
  437cc0:	mov	x1, x22
  437cc4:	mov	w0, #0x30                  	// #48
  437cc8:	stp	x4, x2, [sp, #128]
  437ccc:	str	x4, [sp, #152]
  437cd0:	bl	404170 <fputc@plt>
  437cd4:	ldp	x4, x2, [sp, #128]
  437cd8:	cmp	x19, x4
  437cdc:	b.ne	437cbc <argp_parse@@Base+0x3dd4>  // b.any
  437ce0:	b	437008 <argp_parse@@Base+0x3120>
  437ce4:	sxtw	x25, w12
  437ce8:	subs	x0, x25, #0x1
  437cec:	str	x0, [sp, #176]
  437cf0:	b.eq	4379ac <argp_parse@@Base+0x3ac4>  // b.none
  437cf4:	mov	x25, #0x0                   	// #0
  437cf8:	mov	x1, x22
  437cfc:	mov	w0, #0x20                  	// #32
  437d00:	str	w14, [sp, #128]
  437d04:	add	x25, x25, #0x1
  437d08:	str	x2, [sp, #152]
  437d0c:	str	w12, [sp, #160]
  437d10:	bl	404170 <fputc@plt>
  437d14:	ldr	x0, [sp, #176]
  437d18:	ldr	w14, [sp, #128]
  437d1c:	ldr	w12, [sp, #160]
  437d20:	cmp	x0, x25
  437d24:	ldr	x2, [sp, #152]
  437d28:	b.ne	437cf8 <argp_parse@@Base+0x3e10>  // b.any
  437d2c:	b	4379ac <argp_parse@@Base+0x3ac4>
  437d30:	ldr	x0, [sp, #160]
  437d34:	cbz	x0, 437634 <argp_parse@@Base+0x374c>
  437d38:	mov	x4, #0x0                   	// #0
  437d3c:	add	x4, x4, #0x1
  437d40:	mov	x1, x22
  437d44:	mov	w0, #0x30                  	// #48
  437d48:	str	x4, [sp, #128]
  437d4c:	str	w14, [sp, #152]
  437d50:	str	w2, [sp, #176]
  437d54:	str	x4, [sp, #184]
  437d58:	bl	404170 <fputc@plt>
  437d5c:	ldr	x4, [sp, #128]
  437d60:	ldr	x0, [sp, #160]
  437d64:	ldr	w14, [sp, #152]
  437d68:	ldr	w2, [sp, #176]
  437d6c:	cmp	x0, x4
  437d70:	b.ne	437d3c <argp_parse@@Base+0x3e54>  // b.any
  437d74:	b	437634 <argp_parse@@Base+0x374c>
  437d78:	ldr	w0, [sp, #192]
  437d7c:	mov	w16, w12
  437d80:	b	436b68 <argp_parse@@Base+0x2c80>
  437d84:	mov	w12, #0xffffffff            	// #-1
  437d88:	b	4368cc <argp_parse@@Base+0x29e4>
  437d8c:	ldr	x21, [sp, #144]
  437d90:	b	4367b0 <argp_parse@@Base+0x28c8>
  437d94:	mov	w16, #0x0                   	// #0
  437d98:	b	436b90 <argp_parse@@Base+0x2ca8>
  437d9c:	nop
  437da0:	stp	x29, x30, [sp, #-32]!
  437da4:	mov	x5, x3
  437da8:	mov	w6, w4
  437dac:	mov	x29, sp
  437db0:	add	x4, sp, #0x1f
  437db4:	mov	w3, #0x0                   	// #0
  437db8:	strb	wzr, [sp, #31]
  437dbc:	bl	436668 <argp_parse@@Base+0x2780>
  437dc0:	ldp	x29, x30, [sp], #32
  437dc4:	ret
  437dc8:	stp	x29, x30, [sp, #-48]!
  437dcc:	mov	x29, sp
  437dd0:	stp	x21, x22, [sp, #32]
  437dd4:	cbz	x2, 437e50 <argp_parse@@Base+0x3f68>
  437dd8:	mov	w22, w0
  437ddc:	mov	x21, #0x0                   	// #0
  437de0:	stp	x19, x20, [sp, #16]
  437de4:	mov	x20, x1
  437de8:	mov	x19, x2
  437dec:	b	437e04 <argp_parse@@Base+0x3f1c>
  437df0:	cbz	x0, 437e30 <argp_parse@@Base+0x3f48>
  437df4:	add	x21, x21, x0
  437df8:	add	x20, x20, x0
  437dfc:	subs	x19, x19, x0
  437e00:	b.eq	437e1c <argp_parse@@Base+0x3f34>  // b.none
  437e04:	mov	x2, x19
  437e08:	mov	x1, x20
  437e0c:	mov	w0, w22
  437e10:	bl	4404e8 <argp_parse@@Base+0xc600>
  437e14:	cmn	x0, #0x1
  437e18:	b.ne	437df0 <argp_parse@@Base+0x3f08>  // b.any
  437e1c:	ldp	x19, x20, [sp, #16]
  437e20:	mov	x0, x21
  437e24:	ldp	x21, x22, [sp, #32]
  437e28:	ldp	x29, x30, [sp], #48
  437e2c:	ret
  437e30:	bl	404ad0 <__errno_location@plt>
  437e34:	mov	w1, #0x1c                  	// #28
  437e38:	ldp	x19, x20, [sp, #16]
  437e3c:	str	w1, [x0]
  437e40:	mov	x0, x21
  437e44:	ldp	x21, x22, [sp, #32]
  437e48:	ldp	x29, x30, [sp], #48
  437e4c:	ret
  437e50:	mov	x21, #0x0                   	// #0
  437e54:	b	437e20 <argp_parse@@Base+0x3f38>
  437e58:	mov	x1, x0
  437e5c:	mov	w0, #0x0                   	// #0
  437e60:	b	404190 <clock_gettime@plt>
  437e64:	nop
  437e68:	stp	x29, x30, [sp, #-32]!
  437e6c:	mov	w0, #0x0                   	// #0
  437e70:	mov	x29, sp
  437e74:	add	x1, sp, #0x10
  437e78:	bl	404190 <clock_gettime@plt>
  437e7c:	ldp	x0, x1, [sp, #16]
  437e80:	ldp	x29, x30, [sp], #32
  437e84:	ret
  437e88:	ror	x2, x0, #3
  437e8c:	udiv	x0, x2, x1
  437e90:	msub	x0, x0, x1, x2
  437e94:	ret
  437e98:	cmp	x1, x0
  437e9c:	cset	w0, eq  // eq = none
  437ea0:	ret
  437ea4:	nop
  437ea8:	stp	x29, x30, [sp, #-32]!
  437eac:	mov	x29, sp
  437eb0:	str	x19, [sp, #16]
  437eb4:	mov	x19, x0
  437eb8:	mov	x0, x1
  437ebc:	ldr	x1, [x19, #16]
  437ec0:	ldr	x2, [x19, #48]
  437ec4:	blr	x2
  437ec8:	ldr	x1, [x19, #16]
  437ecc:	cmp	x1, x0
  437ed0:	b.ls	437ee8 <argp_parse@@Base+0x4000>  // b.plast
  437ed4:	ldr	x1, [x19]
  437ed8:	ldr	x19, [sp, #16]
  437edc:	add	x0, x1, x0, lsl #4
  437ee0:	ldp	x29, x30, [sp], #32
  437ee4:	ret
  437ee8:	bl	404650 <abort@plt>
  437eec:	nop
  437ef0:	stp	x29, x30, [sp, #-64]!
  437ef4:	mov	x29, sp
  437ef8:	str	x23, [sp, #48]
  437efc:	mov	x23, x2
  437f00:	stp	x19, x20, [sp, #16]
  437f04:	mov	x20, x1
  437f08:	stp	x21, x22, [sp, #32]
  437f0c:	and	w22, w3, #0xff
  437f10:	mov	x21, x0
  437f14:	bl	437ea8 <argp_parse@@Base+0x3fc0>
  437f18:	str	x0, [x23]
  437f1c:	ldr	x1, [x0]
  437f20:	cbz	x1, 437fac <argp_parse@@Base+0x40c4>
  437f24:	mov	x19, x0
  437f28:	cmp	x1, x20
  437f2c:	b.eq	438004 <argp_parse@@Base+0x411c>  // b.none
  437f30:	ldr	x2, [x21, #56]
  437f34:	mov	x0, x20
  437f38:	blr	x2
  437f3c:	tst	w0, #0xff
  437f40:	b.eq	437fa4 <argp_parse@@Base+0x40bc>  // b.none
  437f44:	ldr	x0, [x19]
  437f48:	cbz	w22, 437fb0 <argp_parse@@Base+0x40c8>
  437f4c:	ldr	x1, [x19, #8]
  437f50:	cbz	x1, 437ffc <argp_parse@@Base+0x4114>
  437f54:	ldp	x2, x3, [x1]
  437f58:	stp	x2, x3, [x19]
  437f5c:	str	xzr, [x1]
  437f60:	ldp	x19, x20, [sp, #16]
  437f64:	ldr	x2, [x21, #72]
  437f68:	str	x2, [x1, #8]
  437f6c:	str	x1, [x21, #72]
  437f70:	ldp	x21, x22, [sp, #32]
  437f74:	ldr	x23, [sp, #48]
  437f78:	ldp	x29, x30, [sp], #64
  437f7c:	ret
  437f80:	ldr	x1, [x2]
  437f84:	mov	x0, x20
  437f88:	cmp	x1, x20
  437f8c:	b.eq	437fc4 <argp_parse@@Base+0x40dc>  // b.none
  437f90:	ldr	x2, [x21, #56]
  437f94:	blr	x2
  437f98:	tst	w0, #0xff
  437f9c:	b.ne	437fc4 <argp_parse@@Base+0x40dc>  // b.any
  437fa0:	ldr	x19, [x19, #8]
  437fa4:	ldr	x2, [x19, #8]
  437fa8:	cbnz	x2, 437f80 <argp_parse@@Base+0x4098>
  437fac:	mov	x0, #0x0                   	// #0
  437fb0:	ldp	x19, x20, [sp, #16]
  437fb4:	ldp	x21, x22, [sp, #32]
  437fb8:	ldr	x23, [sp, #48]
  437fbc:	ldp	x29, x30, [sp], #64
  437fc0:	ret
  437fc4:	ldr	x1, [x19, #8]
  437fc8:	ldr	x0, [x1]
  437fcc:	cbz	w22, 437fb0 <argp_parse@@Base+0x40c8>
  437fd0:	ldr	x2, [x1, #8]
  437fd4:	str	x2, [x19, #8]
  437fd8:	str	xzr, [x1]
  437fdc:	ldp	x19, x20, [sp, #16]
  437fe0:	ldr	x2, [x21, #72]
  437fe4:	str	x2, [x1, #8]
  437fe8:	str	x1, [x21, #72]
  437fec:	ldp	x21, x22, [sp, #32]
  437ff0:	ldr	x23, [sp, #48]
  437ff4:	ldp	x29, x30, [sp], #64
  437ff8:	ret
  437ffc:	str	xzr, [x19]
  438000:	b	437fb0 <argp_parse@@Base+0x40c8>
  438004:	mov	x0, x1
  438008:	b	437f48 <argp_parse@@Base+0x4060>
  43800c:	nop
  438010:	ldr	x3, [x0]
  438014:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  438018:	add	x2, x2, #0x8e0
  43801c:	mov	x1, x0
  438020:	cmp	x3, x2
  438024:	b.eq	4380ac <argp_parse@@Base+0x41c4>  // b.none
  438028:	mov	w0, #0xcccd                	// #52429
  43802c:	ldr	s1, [x3, #8]
  438030:	movk	w0, #0x3dcc, lsl #16
  438034:	fmov	s0, w0
  438038:	fcmpe	s1, s0
  43803c:	b.le	4380a0 <argp_parse@@Base+0x41b8>
  438040:	mov	w0, #0x6666                	// #26214
  438044:	movk	w0, #0x3f66, lsl #16
  438048:	fmov	s2, w0
  43804c:	fcmpe	s1, s2
  438050:	b.pl	4380a0 <argp_parse@@Base+0x41b8>  // b.nfrst
  438054:	mov	w0, #0xcccd                	// #52429
  438058:	ldr	s3, [x3, #12]
  43805c:	movk	w0, #0x3f8c, lsl #16
  438060:	fmov	s2, w0
  438064:	fcmpe	s3, s2
  438068:	b.le	4380a0 <argp_parse@@Base+0x41b8>
  43806c:	ldr	s2, [x3]
  438070:	fcmpe	s2, #0.0
  438074:	b.lt	4380a0 <argp_parse@@Base+0x41b8>  // b.tstop
  438078:	fadd	s0, s2, s0
  43807c:	ldr	s2, [x3, #4]
  438080:	fcmpe	s0, s2
  438084:	b.pl	4380a0 <argp_parse@@Base+0x41b8>  // b.nfrst
  438088:	fmov	s3, #1.000000000000000000e+00
  43808c:	fcmpe	s2, s3
  438090:	b.hi	4380a0 <argp_parse@@Base+0x41b8>  // b.pmore
  438094:	fcmpe	s1, s0
  438098:	mov	w0, #0x1                   	// #1
  43809c:	b.gt	4380a8 <argp_parse@@Base+0x41c0>
  4380a0:	mov	w0, #0x0                   	// #0
  4380a4:	str	x2, [x1]
  4380a8:	ret
  4380ac:	mov	w0, #0x1                   	// #1
  4380b0:	ret
  4380b4:	nop
  4380b8:	tst	w1, #0xff
  4380bc:	b.ne	4380e0 <argp_parse@@Base+0x41f8>  // b.any
  4380c0:	ucvtf	s1, x0
  4380c4:	mov	w0, #0x5f800000            	// #1602224128
  4380c8:	fmov	s2, w0
  4380cc:	mov	x0, #0x0                   	// #0
  4380d0:	fdiv	s0, s1, s0
  4380d4:	fcmpe	s0, s2
  4380d8:	b.ge	438160 <argp_parse@@Base+0x4278>  // b.tcont
  4380dc:	fcvtzu	x0, s0
  4380e0:	cmp	x0, #0xa
  4380e4:	mov	x1, #0xa                   	// #10
  4380e8:	csel	x0, x0, x1, cs  // cs = hs, nlast
  4380ec:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4380f0:	orr	x0, x0, #0x1
  4380f4:	movk	x5, #0xaaab
  4380f8:	cmn	x0, #0x1
  4380fc:	b.eq	43815c <argp_parse@@Base+0x4274>  // b.none
  438100:	umulh	x1, x0, x5
  438104:	cmp	x0, #0x9
  438108:	and	x2, x1, #0xfffffffffffffffe
  43810c:	add	x1, x2, x1, lsr #1
  438110:	sub	x1, x0, x1
  438114:	b.ls	43814c <argp_parse@@Base+0x4264>  // b.plast
  438118:	cbz	x1, 438150 <argp_parse@@Base+0x4268>
  43811c:	mov	x4, #0x10                  	// #16
  438120:	mov	x3, #0x9                   	// #9
  438124:	mov	x2, #0x3                   	// #3
  438128:	b	438130 <argp_parse@@Base+0x4248>
  43812c:	cbz	x1, 438150 <argp_parse@@Base+0x4268>
  438130:	add	x2, x2, #0x2
  438134:	add	x3, x3, x4
  438138:	cmp	x0, x3
  43813c:	add	x4, x4, #0x8
  438140:	udiv	x1, x0, x2
  438144:	msub	x1, x1, x2, x0
  438148:	b.hi	43812c <argp_parse@@Base+0x4244>  // b.pmore
  43814c:	cbnz	x1, 438164 <argp_parse@@Base+0x427c>
  438150:	add	x0, x0, #0x2
  438154:	cmn	x0, #0x1
  438158:	b.ne	438100 <argp_parse@@Base+0x4218>  // b.any
  43815c:	mov	x0, #0x0                   	// #0
  438160:	ret
  438164:	cmp	xzr, x0, lsr #61
  438168:	cset	x1, ne  // ne = any
  43816c:	tbnz	x0, #60, 43815c <argp_parse@@Base+0x4274>
  438170:	cbnz	x1, 43815c <argp_parse@@Base+0x4274>
  438174:	ret
  438178:	stp	x29, x30, [sp, #-64]!
  43817c:	mov	x29, sp
  438180:	stp	x19, x20, [sp, #16]
  438184:	mov	x20, x0
  438188:	stp	x21, x22, [sp, #32]
  43818c:	ldp	x22, x0, [x1]
  438190:	stp	x23, x24, [sp, #48]
  438194:	mov	x23, x1
  438198:	and	w24, w2, #0xff
  43819c:	cmp	x22, x0
  4381a0:	b.cc	4381b4 <argp_parse@@Base+0x42cc>  // b.lo, b.ul, b.last
  4381a4:	b	438214 <argp_parse@@Base+0x432c>
  4381a8:	add	x22, x22, #0x10
  4381ac:	cmp	x0, x22
  4381b0:	b.ls	438214 <argp_parse@@Base+0x432c>  // b.plast
  4381b4:	ldr	x21, [x22]
  4381b8:	cbz	x21, 4381a8 <argp_parse@@Base+0x42c0>
  4381bc:	ldr	x19, [x22, #8]
  4381c0:	cbz	x19, 4381fc <argp_parse@@Base+0x4314>
  4381c4:	nop
  4381c8:	ldr	x21, [x19]
  4381cc:	mov	x0, x20
  4381d0:	mov	x1, x21
  4381d4:	bl	437ea8 <argp_parse@@Base+0x3fc0>
  4381d8:	ldr	x3, [x0]
  4381dc:	mov	x2, x19
  4381e0:	ldr	x19, [x19, #8]
  4381e4:	cbz	x3, 438230 <argp_parse@@Base+0x4348>
  4381e8:	ldr	x1, [x0, #8]
  4381ec:	str	x1, [x2, #8]
  4381f0:	str	x2, [x0, #8]
  4381f4:	cbnz	x19, 4381c8 <argp_parse@@Base+0x42e0>
  4381f8:	ldr	x21, [x22]
  4381fc:	str	xzr, [x22, #8]
  438200:	cbz	w24, 438258 <argp_parse@@Base+0x4370>
  438204:	ldr	x0, [x23, #8]
  438208:	add	x22, x22, #0x10
  43820c:	cmp	x0, x22
  438210:	b.hi	4381b4 <argp_parse@@Base+0x42cc>  // b.pmore
  438214:	mov	w24, #0x1                   	// #1
  438218:	mov	w0, w24
  43821c:	ldp	x19, x20, [sp, #16]
  438220:	ldp	x21, x22, [sp, #32]
  438224:	ldp	x23, x24, [sp, #48]
  438228:	ldp	x29, x30, [sp], #64
  43822c:	ret
  438230:	ldr	x1, [x20, #24]
  438234:	str	x21, [x0]
  438238:	add	x1, x1, #0x1
  43823c:	str	x1, [x20, #24]
  438240:	str	xzr, [x2]
  438244:	ldr	x0, [x20, #72]
  438248:	str	x0, [x2, #8]
  43824c:	str	x2, [x20, #72]
  438250:	cbnz	x19, 4381c8 <argp_parse@@Base+0x42e0>
  438254:	b	4381f8 <argp_parse@@Base+0x4310>
  438258:	mov	x1, x21
  43825c:	mov	x0, x20
  438260:	bl	437ea8 <argp_parse@@Base+0x3fc0>
  438264:	mov	x19, x0
  438268:	ldr	x0, [x0]
  43826c:	cbz	x0, 4382a4 <argp_parse@@Base+0x43bc>
  438270:	ldr	x0, [x20, #72]
  438274:	cbz	x0, 4382b8 <argp_parse@@Base+0x43d0>
  438278:	ldr	x1, [x0, #8]
  43827c:	str	x1, [x20, #72]
  438280:	ldr	x1, [x19, #8]
  438284:	stp	x21, x1, [x0]
  438288:	str	x0, [x19, #8]
  43828c:	ldr	x1, [x23, #24]
  438290:	str	xzr, [x22]
  438294:	sub	x1, x1, #0x1
  438298:	str	x1, [x23, #24]
  43829c:	ldr	x0, [x23, #8]
  4382a0:	b	4381a8 <argp_parse@@Base+0x42c0>
  4382a4:	ldr	x0, [x20, #24]
  4382a8:	str	x21, [x19]
  4382ac:	add	x0, x0, #0x1
  4382b0:	str	x0, [x20, #24]
  4382b4:	b	43828c <argp_parse@@Base+0x43a4>
  4382b8:	mov	x0, #0x10                  	// #16
  4382bc:	bl	404310 <malloc@plt>
  4382c0:	cbnz	x0, 438280 <argp_parse@@Base+0x4398>
  4382c4:	mov	w0, w24
  4382c8:	ldp	x19, x20, [sp, #16]
  4382cc:	ldp	x21, x22, [sp, #32]
  4382d0:	ldp	x23, x24, [sp, #48]
  4382d4:	ldp	x29, x30, [sp], #64
  4382d8:	ret
  4382dc:	nop
  4382e0:	ldr	x0, [x0, #16]
  4382e4:	ret
  4382e8:	ldr	x0, [x0, #24]
  4382ec:	ret
  4382f0:	ldr	x0, [x0, #32]
  4382f4:	ret
  4382f8:	ldp	x3, x4, [x0]
  4382fc:	mov	x0, #0x0                   	// #0
  438300:	cmp	x3, x4
  438304:	b.cc	438318 <argp_parse@@Base+0x4430>  // b.lo, b.ul, b.last
  438308:	b	438350 <argp_parse@@Base+0x4468>
  43830c:	add	x3, x3, #0x10
  438310:	cmp	x3, x4
  438314:	b.cs	438350 <argp_parse@@Base+0x4468>  // b.hs, b.nlast
  438318:	ldr	x1, [x3]
  43831c:	cbz	x1, 43830c <argp_parse@@Base+0x4424>
  438320:	ldr	x1, [x3, #8]
  438324:	mov	x2, #0x1                   	// #1
  438328:	cbz	x1, 43833c <argp_parse@@Base+0x4454>
  43832c:	nop
  438330:	ldr	x1, [x1, #8]
  438334:	add	x2, x2, #0x1
  438338:	cbnz	x1, 438330 <argp_parse@@Base+0x4448>
  43833c:	cmp	x0, x2
  438340:	add	x3, x3, #0x10
  438344:	csel	x0, x0, x2, cs  // cs = hs, nlast
  438348:	cmp	x3, x4
  43834c:	b.cc	438318 <argp_parse@@Base+0x4430>  // b.lo, b.ul, b.last
  438350:	ret
  438354:	nop
  438358:	ldp	x3, x4, [x0]
  43835c:	mov	x6, x0
  438360:	mov	x2, #0x0                   	// #0
  438364:	mov	x5, #0x0                   	// #0
  438368:	cmp	x3, x4
  43836c:	b.cc	438380 <argp_parse@@Base+0x4498>  // b.lo, b.ul, b.last
  438370:	b	4383b0 <argp_parse@@Base+0x44c8>
  438374:	add	x3, x3, #0x10
  438378:	cmp	x3, x4
  43837c:	b.cs	4383b0 <argp_parse@@Base+0x44c8>  // b.hs, b.nlast
  438380:	ldr	x1, [x3]
  438384:	cbz	x1, 438374 <argp_parse@@Base+0x448c>
  438388:	ldr	x1, [x3, #8]
  43838c:	add	x5, x5, #0x1
  438390:	add	x2, x2, #0x1
  438394:	cbz	x1, 438374 <argp_parse@@Base+0x448c>
  438398:	ldr	x1, [x1, #8]
  43839c:	add	x2, x2, #0x1
  4383a0:	cbnz	x1, 438398 <argp_parse@@Base+0x44b0>
  4383a4:	add	x3, x3, #0x10
  4383a8:	cmp	x3, x4
  4383ac:	b.cc	438380 <argp_parse@@Base+0x4498>  // b.lo, b.ul, b.last
  4383b0:	ldr	x1, [x6, #24]
  4383b4:	mov	w0, #0x0                   	// #0
  4383b8:	cmp	x1, x5
  4383bc:	b.eq	4383c4 <argp_parse@@Base+0x44dc>  // b.none
  4383c0:	ret
  4383c4:	ldr	x0, [x6, #32]
  4383c8:	cmp	x0, x2
  4383cc:	cset	w0, eq  // eq = none
  4383d0:	ret
  4383d4:	nop
  4383d8:	stp	x29, x30, [sp, #-48]!
  4383dc:	mov	x29, sp
  4383e0:	ldp	x4, x5, [x0]
  4383e4:	stp	x19, x20, [sp, #16]
  4383e8:	mov	x20, x1
  4383ec:	stp	x21, x22, [sp, #32]
  4383f0:	mov	x19, #0x0                   	// #0
  4383f4:	ldp	x21, x22, [x0, #16]
  4383f8:	cmp	x4, x5
  4383fc:	ldr	x3, [x0, #32]
  438400:	b.cc	438414 <argp_parse@@Base+0x452c>  // b.lo, b.ul, b.last
  438404:	b	438448 <argp_parse@@Base+0x4560>
  438408:	add	x4, x4, #0x10
  43840c:	cmp	x4, x5
  438410:	b.cs	438448 <argp_parse@@Base+0x4560>  // b.hs, b.nlast
  438414:	ldr	x0, [x4]
  438418:	cbz	x0, 438408 <argp_parse@@Base+0x4520>
  43841c:	ldr	x0, [x4, #8]
  438420:	mov	x2, #0x1                   	// #1
  438424:	cbz	x0, 438434 <argp_parse@@Base+0x454c>
  438428:	ldr	x0, [x0, #8]
  43842c:	add	x2, x2, #0x1
  438430:	cbnz	x0, 438428 <argp_parse@@Base+0x4540>
  438434:	cmp	x19, x2
  438438:	add	x4, x4, #0x10
  43843c:	csel	x19, x19, x2, cs  // cs = hs, nlast
  438440:	cmp	x4, x5
  438444:	b.cc	438414 <argp_parse@@Base+0x452c>  // b.lo, b.ul, b.last
  438448:	mov	x0, x20
  43844c:	mov	w1, #0x1                   	// #1
  438450:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  438454:	add	x2, x2, #0x870
  438458:	bl	404700 <__fprintf_chk@plt>
  43845c:	mov	x3, x21
  438460:	mov	x0, x20
  438464:	mov	w1, #0x1                   	// #1
  438468:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43846c:	add	x2, x2, #0x888
  438470:	bl	404700 <__fprintf_chk@plt>
  438474:	ucvtf	d1, x22
  438478:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  43847c:	fmov	d2, x0
  438480:	ucvtf	d0, x21
  438484:	mov	x3, x22
  438488:	mov	x0, x20
  43848c:	mov	w1, #0x1                   	// #1
  438490:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  438494:	fmul	d1, d1, d2
  438498:	add	x2, x2, #0x8a0
  43849c:	fdiv	d0, d1, d0
  4384a0:	bl	404700 <__fprintf_chk@plt>
  4384a4:	mov	x3, x19
  4384a8:	mov	x0, x20
  4384ac:	ldp	x19, x20, [sp, #16]
  4384b0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4384b4:	ldp	x21, x22, [sp, #32]
  4384b8:	add	x2, x2, #0x8c8
  4384bc:	ldp	x29, x30, [sp], #48
  4384c0:	mov	w1, #0x1                   	// #1
  4384c4:	b	404700 <__fprintf_chk@plt>
  4384c8:	stp	x29, x30, [sp, #-48]!
  4384cc:	mov	x29, sp
  4384d0:	stp	x19, x20, [sp, #16]
  4384d4:	mov	x20, x1
  4384d8:	str	x21, [sp, #32]
  4384dc:	mov	x21, x0
  4384e0:	bl	437ea8 <argp_parse@@Base+0x3fc0>
  4384e4:	ldr	x1, [x0]
  4384e8:	cbz	x1, 43851c <argp_parse@@Base+0x4634>
  4384ec:	mov	x19, x0
  4384f0:	b	4384f8 <argp_parse@@Base+0x4610>
  4384f4:	ldr	x1, [x19]
  4384f8:	mov	x0, x20
  4384fc:	cmp	x1, x20
  438500:	b.eq	438534 <argp_parse@@Base+0x464c>  // b.none
  438504:	ldr	x2, [x21, #56]
  438508:	blr	x2
  43850c:	tst	w0, #0xff
  438510:	b.ne	438530 <argp_parse@@Base+0x4648>  // b.any
  438514:	ldr	x19, [x19, #8]
  438518:	cbnz	x19, 4384f4 <argp_parse@@Base+0x460c>
  43851c:	mov	x0, #0x0                   	// #0
  438520:	ldp	x19, x20, [sp, #16]
  438524:	ldr	x21, [sp, #32]
  438528:	ldp	x29, x30, [sp], #48
  43852c:	ret
  438530:	ldr	x20, [x19]
  438534:	mov	x0, x20
  438538:	ldp	x19, x20, [sp, #16]
  43853c:	ldr	x21, [sp, #32]
  438540:	ldp	x29, x30, [sp], #48
  438544:	ret
  438548:	ldr	x1, [x0, #32]
  43854c:	cbz	x1, 438578 <argp_parse@@Base+0x4690>
  438550:	ldp	x1, x2, [x0]
  438554:	cmp	x1, x2
  438558:	b.cc	43856c <argp_parse@@Base+0x4684>  // b.lo, b.ul, b.last
  43855c:	b	438580 <argp_parse@@Base+0x4698>
  438560:	add	x1, x1, #0x10
  438564:	cmp	x1, x2
  438568:	b.cs	438580 <argp_parse@@Base+0x4698>  // b.hs, b.nlast
  43856c:	ldr	x0, [x1]
  438570:	cbz	x0, 438560 <argp_parse@@Base+0x4678>
  438574:	ret
  438578:	mov	x0, #0x0                   	// #0
  43857c:	ret
  438580:	stp	x29, x30, [sp, #-16]!
  438584:	mov	x29, sp
  438588:	bl	404650 <abort@plt>
  43858c:	nop
  438590:	stp	x29, x30, [sp, #-32]!
  438594:	mov	x29, sp
  438598:	stp	x19, x20, [sp, #16]
  43859c:	mov	x20, x0
  4385a0:	mov	x19, x1
  4385a4:	bl	437ea8 <argp_parse@@Base+0x3fc0>
  4385a8:	mov	x3, x0
  4385ac:	mov	x2, x0
  4385b0:	b	4385b8 <argp_parse@@Base+0x46d0>
  4385b4:	cbz	x2, 4385c8 <argp_parse@@Base+0x46e0>
  4385b8:	ldp	x4, x2, [x2]
  4385bc:	cmp	x4, x19
  4385c0:	b.ne	4385b4 <argp_parse@@Base+0x46cc>  // b.any
  4385c4:	cbnz	x2, 4385f4 <argp_parse@@Base+0x470c>
  4385c8:	ldr	x1, [x20, #8]
  4385cc:	b	4385d8 <argp_parse@@Base+0x46f0>
  4385d0:	ldr	x0, [x3]
  4385d4:	cbnz	x0, 4385e8 <argp_parse@@Base+0x4700>
  4385d8:	add	x3, x3, #0x10
  4385dc:	cmp	x1, x3
  4385e0:	b.hi	4385d0 <argp_parse@@Base+0x46e8>  // b.pmore
  4385e4:	mov	x0, #0x0                   	// #0
  4385e8:	ldp	x19, x20, [sp, #16]
  4385ec:	ldp	x29, x30, [sp], #32
  4385f0:	ret
  4385f4:	ldr	x0, [x2]
  4385f8:	ldp	x19, x20, [sp, #16]
  4385fc:	ldp	x29, x30, [sp], #32
  438600:	ret
  438604:	nop
  438608:	ldp	x5, x3, [x0]
  43860c:	mov	x6, x0
  438610:	cmp	x3, x5
  438614:	b.ls	438664 <argp_parse@@Base+0x477c>  // b.plast
  438618:	sub	x4, x1, #0x8
  43861c:	mov	x0, #0x0                   	// #0
  438620:	ldr	x1, [x5]
  438624:	cbnz	x1, 438638 <argp_parse@@Base+0x4750>
  438628:	add	x5, x5, #0x10
  43862c:	cmp	x3, x5
  438630:	b.hi	438620 <argp_parse@@Base+0x4738>  // b.pmore
  438634:	ret
  438638:	mov	x1, x5
  43863c:	nop
  438640:	cmp	x2, x0
  438644:	b.ls	438634 <argp_parse@@Base+0x474c>  // b.plast
  438648:	add	x0, x0, #0x1
  43864c:	ldr	x3, [x1]
  438650:	str	x3, [x4, x0, lsl #3]
  438654:	ldr	x1, [x1, #8]
  438658:	cbnz	x1, 438640 <argp_parse@@Base+0x4758>
  43865c:	ldr	x3, [x6, #8]
  438660:	b	438628 <argp_parse@@Base+0x4740>
  438664:	mov	x0, #0x0                   	// #0
  438668:	ret
  43866c:	nop
  438670:	stp	x29, x30, [sp, #-64]!
  438674:	mov	x29, sp
  438678:	stp	x21, x22, [sp, #32]
  43867c:	mov	x21, x1
  438680:	stp	x23, x24, [sp, #48]
  438684:	ldp	x23, x1, [x0]
  438688:	stp	x19, x20, [sp, #16]
  43868c:	cmp	x1, x23
  438690:	b.ls	4386fc <argp_parse@@Base+0x4814>  // b.plast
  438694:	mov	x24, x0
  438698:	mov	x22, x2
  43869c:	mov	x20, #0x0                   	// #0
  4386a0:	ldr	x0, [x23]
  4386a4:	cbnz	x0, 4386cc <argp_parse@@Base+0x47e4>
  4386a8:	add	x23, x23, #0x10
  4386ac:	cmp	x1, x23
  4386b0:	b.hi	4386a0 <argp_parse@@Base+0x47b8>  // b.pmore
  4386b4:	mov	x0, x20
  4386b8:	ldp	x19, x20, [sp, #16]
  4386bc:	ldp	x21, x22, [sp, #32]
  4386c0:	ldp	x23, x24, [sp, #48]
  4386c4:	ldp	x29, x30, [sp], #64
  4386c8:	ret
  4386cc:	mov	x19, x23
  4386d0:	b	4386d8 <argp_parse@@Base+0x47f0>
  4386d4:	ldr	x0, [x19]
  4386d8:	mov	x1, x22
  4386dc:	blr	x21
  4386e0:	tst	w0, #0xff
  4386e4:	b.eq	4386b4 <argp_parse@@Base+0x47cc>  // b.none
  4386e8:	ldr	x19, [x19, #8]
  4386ec:	add	x20, x20, #0x1
  4386f0:	cbnz	x19, 4386d4 <argp_parse@@Base+0x47ec>
  4386f4:	ldr	x1, [x24, #8]
  4386f8:	b	4386a8 <argp_parse@@Base+0x47c0>
  4386fc:	mov	x20, #0x0                   	// #0
  438700:	b	4386b4 <argp_parse@@Base+0x47cc>
  438704:	nop
  438708:	ldrb	w4, [x0]
  43870c:	mov	x2, #0x0                   	// #0
  438710:	cbz	w4, 438734 <argp_parse@@Base+0x484c>
  438714:	nop
  438718:	lsl	x3, x2, #5
  43871c:	sub	x2, x3, x2
  438720:	add	x2, x2, w4, uxtb
  438724:	ldrb	w4, [x0, #1]!
  438728:	udiv	x3, x2, x1
  43872c:	msub	x2, x3, x1, x2
  438730:	cbnz	w4, 438718 <argp_parse@@Base+0x4830>
  438734:	mov	x0, x2
  438738:	ret
  43873c:	nop
  438740:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  438744:	add	x1, x1, #0x8e0
  438748:	ldp	x2, x3, [x1]
  43874c:	stp	x2, x3, [x0]
  438750:	ldr	w1, [x1, #16]
  438754:	str	w1, [x0, #16]
  438758:	ret
  43875c:	nop
  438760:	stp	x29, x30, [sp, #-64]!
  438764:	cmp	x2, #0x0
  438768:	mov	x29, sp
  43876c:	stp	x21, x22, [sp, #32]
  438770:	mov	x22, x2
  438774:	adrp	x2, 437000 <argp_parse@@Base+0x3118>
  438778:	add	x2, x2, #0xe88
  43877c:	stp	x19, x20, [sp, #16]
  438780:	csel	x22, x2, x22, eq  // eq = none
  438784:	cmp	x3, #0x0
  438788:	adrp	x2, 437000 <argp_parse@@Base+0x3118>
  43878c:	add	x2, x2, #0xe98
  438790:	mov	x20, x1
  438794:	csel	x21, x2, x3, eq  // eq = none
  438798:	stp	x23, x24, [sp, #48]
  43879c:	mov	x24, x0
  4387a0:	mov	x23, x4
  4387a4:	mov	x0, #0x50                  	// #80
  4387a8:	bl	404310 <malloc@plt>
  4387ac:	mov	x19, x0
  4387b0:	cbz	x0, 438814 <argp_parse@@Base+0x492c>
  4387b4:	cmp	x20, #0x0
  4387b8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4387bc:	add	x1, x1, #0x8e0
  4387c0:	csel	x20, x1, x20, eq  // eq = none
  4387c4:	str	x20, [x0, #40]!
  4387c8:	bl	438010 <argp_parse@@Base+0x4128>
  4387cc:	tst	w0, #0xff
  4387d0:	b.eq	43882c <argp_parse@@Base+0x4944>  // b.none
  4387d4:	ldrb	w1, [x20, #16]
  4387d8:	mov	x0, x24
  4387dc:	ldr	s0, [x20, #8]
  4387e0:	bl	4380b8 <argp_parse@@Base+0x41d0>
  4387e4:	str	x0, [x19, #16]
  4387e8:	mov	x20, x0
  4387ec:	cbz	x0, 43882c <argp_parse@@Base+0x4944>
  4387f0:	mov	x1, #0x10                  	// #16
  4387f4:	bl	4044c0 <calloc@plt>
  4387f8:	str	x0, [x19]
  4387fc:	cbz	x0, 43882c <argp_parse@@Base+0x4944>
  438800:	add	x20, x0, x20, lsl #4
  438804:	str	x20, [x19, #8]
  438808:	stp	xzr, xzr, [x19, #24]
  43880c:	stp	x22, x21, [x19, #48]
  438810:	stp	x23, xzr, [x19, #64]
  438814:	mov	x0, x19
  438818:	ldp	x19, x20, [sp, #16]
  43881c:	ldp	x21, x22, [sp, #32]
  438820:	ldp	x23, x24, [sp, #48]
  438824:	ldp	x29, x30, [sp], #64
  438828:	ret
  43882c:	mov	x0, x19
  438830:	mov	x19, #0x0                   	// #0
  438834:	bl	4047b0 <free@plt>
  438838:	mov	x0, x19
  43883c:	ldp	x19, x20, [sp, #16]
  438840:	ldp	x21, x22, [sp, #32]
  438844:	ldp	x23, x24, [sp, #48]
  438848:	ldp	x29, x30, [sp], #64
  43884c:	ret
  438850:	stp	x29, x30, [sp, #-48]!
  438854:	mov	x29, sp
  438858:	ldr	x1, [x0, #8]
  43885c:	str	x21, [sp, #32]
  438860:	ldr	x21, [x0]
  438864:	stp	x19, x20, [sp, #16]
  438868:	mov	x20, x0
  43886c:	cmp	x21, x1
  438870:	b.cc	438884 <argp_parse@@Base+0x499c>  // b.lo, b.ul, b.last
  438874:	b	4388e0 <argp_parse@@Base+0x49f8>
  438878:	add	x21, x21, #0x10
  43887c:	cmp	x1, x21
  438880:	b.ls	4388e0 <argp_parse@@Base+0x49f8>  // b.plast
  438884:	ldr	x0, [x21]
  438888:	cbz	x0, 438878 <argp_parse@@Base+0x4990>
  43888c:	ldr	x19, [x21, #8]
  438890:	ldr	x1, [x20, #64]
  438894:	cbz	x19, 4388c0 <argp_parse@@Base+0x49d8>
  438898:	cbz	x1, 4388a8 <argp_parse@@Base+0x49c0>
  43889c:	ldr	x0, [x19]
  4388a0:	blr	x1
  4388a4:	ldr	x1, [x20, #64]
  4388a8:	ldr	x0, [x19, #8]
  4388ac:	ldr	x2, [x20, #72]
  4388b0:	stp	xzr, x2, [x19]
  4388b4:	str	x19, [x20, #72]
  4388b8:	mov	x19, x0
  4388bc:	cbnz	x0, 438898 <argp_parse@@Base+0x49b0>
  4388c0:	cbz	x1, 4388cc <argp_parse@@Base+0x49e4>
  4388c4:	ldr	x0, [x21]
  4388c8:	blr	x1
  4388cc:	stp	xzr, xzr, [x21]
  4388d0:	add	x21, x21, #0x10
  4388d4:	ldr	x1, [x20, #8]
  4388d8:	cmp	x1, x21
  4388dc:	b.hi	438884 <argp_parse@@Base+0x499c>  // b.pmore
  4388e0:	ldr	x21, [sp, #32]
  4388e4:	stp	xzr, xzr, [x20, #24]
  4388e8:	ldp	x19, x20, [sp, #16]
  4388ec:	ldp	x29, x30, [sp], #48
  4388f0:	ret
  4388f4:	nop
  4388f8:	stp	x29, x30, [sp, #-48]!
  4388fc:	mov	x29, sp
  438900:	str	x21, [sp, #32]
  438904:	mov	x21, x0
  438908:	ldr	x0, [x0, #64]
  43890c:	stp	x19, x20, [sp, #16]
  438910:	ldp	x20, x1, [x21]
  438914:	cbz	x0, 438970 <argp_parse@@Base+0x4a88>
  438918:	ldr	x0, [x21, #32]
  43891c:	cbz	x0, 438970 <argp_parse@@Base+0x4a88>
  438920:	cmp	x20, x1
  438924:	b.cc	438938 <argp_parse@@Base+0x4a50>  // b.lo, b.ul, b.last
  438928:	b	4389a0 <argp_parse@@Base+0x4ab8>
  43892c:	add	x20, x20, #0x10
  438930:	cmp	x1, x20
  438934:	b.ls	43896c <argp_parse@@Base+0x4a84>  // b.plast
  438938:	ldr	x0, [x20]
  43893c:	cbz	x0, 43892c <argp_parse@@Base+0x4a44>
  438940:	mov	x19, x20
  438944:	b	43894c <argp_parse@@Base+0x4a64>
  438948:	ldr	x0, [x19]
  43894c:	ldr	x1, [x21, #64]
  438950:	blr	x1
  438954:	ldr	x19, [x19, #8]
  438958:	cbnz	x19, 438948 <argp_parse@@Base+0x4a60>
  43895c:	ldr	x1, [x21, #8]
  438960:	add	x20, x20, #0x10
  438964:	cmp	x1, x20
  438968:	b.hi	438938 <argp_parse@@Base+0x4a50>  // b.pmore
  43896c:	ldr	x20, [x21]
  438970:	cmp	x20, x1
  438974:	b.cs	4389a0 <argp_parse@@Base+0x4ab8>  // b.hs, b.nlast
  438978:	ldr	x19, [x20, #8]
  43897c:	cbz	x19, 438994 <argp_parse@@Base+0x4aac>
  438980:	mov	x0, x19
  438984:	ldr	x19, [x19, #8]
  438988:	bl	4047b0 <free@plt>
  43898c:	cbnz	x19, 438980 <argp_parse@@Base+0x4a98>
  438990:	ldr	x1, [x21, #8]
  438994:	add	x20, x20, #0x10
  438998:	cmp	x1, x20
  43899c:	b.hi	438978 <argp_parse@@Base+0x4a90>  // b.pmore
  4389a0:	ldr	x19, [x21, #72]
  4389a4:	cbz	x19, 4389b8 <argp_parse@@Base+0x4ad0>
  4389a8:	mov	x0, x19
  4389ac:	ldr	x19, [x19, #8]
  4389b0:	bl	4047b0 <free@plt>
  4389b4:	cbnz	x19, 4389a8 <argp_parse@@Base+0x4ac0>
  4389b8:	ldr	x0, [x21]
  4389bc:	bl	4047b0 <free@plt>
  4389c0:	mov	x0, x21
  4389c4:	ldp	x19, x20, [sp, #16]
  4389c8:	ldr	x21, [sp, #32]
  4389cc:	ldp	x29, x30, [sp], #48
  4389d0:	b	4047b0 <free@plt>
  4389d4:	nop
  4389d8:	stp	x29, x30, [sp, #-128]!
  4389dc:	mov	x29, sp
  4389e0:	stp	x19, x20, [sp, #16]
  4389e4:	mov	x19, x0
  4389e8:	mov	x0, x1
  4389ec:	str	x21, [sp, #32]
  4389f0:	ldr	x21, [x19, #40]
  4389f4:	ldrb	w1, [x21, #16]
  4389f8:	ldr	s0, [x21, #8]
  4389fc:	bl	4380b8 <argp_parse@@Base+0x41d0>
  438a00:	cbz	x0, 438ac8 <argp_parse@@Base+0x4be0>
  438a04:	ldr	x1, [x19, #16]
  438a08:	mov	x20, x0
  438a0c:	cmp	x1, x0
  438a10:	b.eq	438ab0 <argp_parse@@Base+0x4bc8>  // b.none
  438a14:	mov	x1, #0x10                  	// #16
  438a18:	bl	4044c0 <calloc@plt>
  438a1c:	str	x0, [sp, #48]
  438a20:	cbz	x0, 438ac8 <argp_parse@@Base+0x4be0>
  438a24:	ldp	x7, x6, [x19, #48]
  438a28:	add	x3, x0, x20, lsl #4
  438a2c:	ldp	x5, x4, [x19, #64]
  438a30:	add	x0, sp, #0x30
  438a34:	mov	x1, x19
  438a38:	mov	w2, #0x0                   	// #0
  438a3c:	stp	x3, x20, [sp, #56]
  438a40:	stp	xzr, xzr, [sp, #72]
  438a44:	stp	x21, x7, [sp, #88]
  438a48:	stp	x6, x5, [sp, #104]
  438a4c:	str	x4, [sp, #120]
  438a50:	bl	438178 <argp_parse@@Base+0x4290>
  438a54:	ands	w20, w0, #0xff
  438a58:	b.ne	438ae0 <argp_parse@@Base+0x4bf8>  // b.any
  438a5c:	ldr	x0, [sp, #120]
  438a60:	str	x0, [x19, #72]
  438a64:	add	x1, sp, #0x30
  438a68:	mov	x0, x19
  438a6c:	mov	w2, #0x1                   	// #1
  438a70:	bl	438178 <argp_parse@@Base+0x4290>
  438a74:	tst	w0, #0xff
  438a78:	b.eq	438b24 <argp_parse@@Base+0x4c3c>  // b.none
  438a7c:	add	x1, sp, #0x30
  438a80:	mov	x0, x19
  438a84:	mov	w2, #0x0                   	// #0
  438a88:	bl	438178 <argp_parse@@Base+0x4290>
  438a8c:	tst	w0, #0xff
  438a90:	b.eq	438b24 <argp_parse@@Base+0x4c3c>  // b.none
  438a94:	ldr	x0, [sp, #48]
  438a98:	bl	4047b0 <free@plt>
  438a9c:	mov	w0, w20
  438aa0:	ldp	x19, x20, [sp, #16]
  438aa4:	ldr	x21, [sp, #32]
  438aa8:	ldp	x29, x30, [sp], #128
  438aac:	ret
  438ab0:	mov	w20, #0x1                   	// #1
  438ab4:	mov	w0, w20
  438ab8:	ldp	x19, x20, [sp, #16]
  438abc:	ldr	x21, [sp, #32]
  438ac0:	ldp	x29, x30, [sp], #128
  438ac4:	ret
  438ac8:	mov	w20, #0x0                   	// #0
  438acc:	mov	w0, w20
  438ad0:	ldp	x19, x20, [sp, #16]
  438ad4:	ldr	x21, [sp, #32]
  438ad8:	ldp	x29, x30, [sp], #128
  438adc:	ret
  438ae0:	ldr	x0, [x19]
  438ae4:	bl	4047b0 <free@plt>
  438ae8:	ldr	x0, [sp, #48]
  438aec:	str	x0, [x19]
  438af0:	ldr	x0, [sp, #56]
  438af4:	str	x0, [x19, #8]
  438af8:	ldr	x0, [sp, #64]
  438afc:	str	x0, [x19, #16]
  438b00:	ldr	x0, [sp, #72]
  438b04:	str	x0, [x19, #24]
  438b08:	ldr	x0, [sp, #120]
  438b0c:	str	x0, [x19, #72]
  438b10:	mov	w0, w20
  438b14:	ldp	x19, x20, [sp, #16]
  438b18:	ldr	x21, [sp, #32]
  438b1c:	ldp	x29, x30, [sp], #128
  438b20:	ret
  438b24:	bl	404650 <abort@plt>
  438b28:	stp	x29, x30, [sp, #-64]!
  438b2c:	mov	x29, sp
  438b30:	stp	x19, x20, [sp, #16]
  438b34:	str	x21, [sp, #32]
  438b38:	cbz	x1, 438cb4 <argp_parse@@Base+0x4dcc>
  438b3c:	mov	w3, #0x0                   	// #0
  438b40:	mov	x20, x2
  438b44:	mov	x19, x0
  438b48:	mov	x21, x1
  438b4c:	add	x2, sp, #0x38
  438b50:	bl	437ef0 <argp_parse@@Base+0x4008>
  438b54:	mov	x3, x0
  438b58:	cbz	x0, 438b78 <argp_parse@@Base+0x4c90>
  438b5c:	mov	w0, #0x0                   	// #0
  438b60:	cbz	x20, 438b68 <argp_parse@@Base+0x4c80>
  438b64:	str	x3, [x20]
  438b68:	ldp	x19, x20, [sp, #16]
  438b6c:	ldr	x21, [sp, #32]
  438b70:	ldp	x29, x30, [sp], #64
  438b74:	ret
  438b78:	ldr	x0, [x19, #16]
  438b7c:	ldr	x1, [x19, #40]
  438b80:	ucvtf	s0, x0
  438b84:	ldr	x0, [x19, #24]
  438b88:	ldr	s2, [x1, #8]
  438b8c:	ucvtf	s1, x0
  438b90:	fmul	s0, s0, s2
  438b94:	fcmpe	s1, s0
  438b98:	b.gt	438be4 <argp_parse@@Base+0x4cfc>
  438b9c:	ldr	x20, [sp, #56]
  438ba0:	ldr	x0, [x20]
  438ba4:	cbz	x0, 438c44 <argp_parse@@Base+0x4d5c>
  438ba8:	ldr	x0, [x19, #72]
  438bac:	cbz	x0, 438c6c <argp_parse@@Base+0x4d84>
  438bb0:	ldr	x1, [x0, #8]
  438bb4:	str	x1, [x19, #72]
  438bb8:	ldr	x2, [x20, #8]
  438bbc:	ldr	x1, [x19, #32]
  438bc0:	stp	x21, x2, [x0]
  438bc4:	str	x0, [x20, #8]
  438bc8:	add	x1, x1, #0x1
  438bcc:	str	x1, [x19, #32]
  438bd0:	mov	w0, #0x1                   	// #1
  438bd4:	ldp	x19, x20, [sp, #16]
  438bd8:	ldr	x21, [sp, #32]
  438bdc:	ldp	x29, x30, [sp], #64
  438be0:	ret
  438be4:	add	x0, x19, #0x28
  438be8:	bl	438010 <argp_parse@@Base+0x4128>
  438bec:	ldr	x0, [x19, #16]
  438bf0:	ldr	x1, [x19, #40]
  438bf4:	ucvtf	s0, x0
  438bf8:	ldr	x0, [x19, #24]
  438bfc:	ldr	s2, [x1, #8]
  438c00:	ucvtf	s1, x0
  438c04:	fmul	s3, s2, s0
  438c08:	fcmpe	s1, s3
  438c0c:	b.le	438b9c <argp_parse@@Base+0x4cb4>
  438c10:	ldrb	w0, [x1, #16]
  438c14:	ldr	s1, [x1, #12]
  438c18:	fmul	s0, s0, s1
  438c1c:	cbz	w0, 438c80 <argp_parse@@Base+0x4d98>
  438c20:	mov	w0, #0x5f800000            	// #1602224128
  438c24:	fmov	s1, w0
  438c28:	fcmpe	s0, s1
  438c2c:	b.lt	438c88 <argp_parse@@Base+0x4da0>  // b.tstop
  438c30:	mov	w0, #0xffffffff            	// #-1
  438c34:	ldp	x19, x20, [sp, #16]
  438c38:	ldr	x21, [sp, #32]
  438c3c:	ldp	x29, x30, [sp], #64
  438c40:	ret
  438c44:	ldp	x2, x1, [x19, #24]
  438c48:	str	x21, [x20]
  438c4c:	mov	w0, #0x1                   	// #1
  438c50:	ldr	x21, [sp, #32]
  438c54:	add	x2, x2, #0x1
  438c58:	add	x1, x1, #0x1
  438c5c:	stp	x2, x1, [x19, #24]
  438c60:	ldp	x19, x20, [sp, #16]
  438c64:	ldp	x29, x30, [sp], #64
  438c68:	ret
  438c6c:	mov	x0, #0x10                  	// #16
  438c70:	bl	404310 <malloc@plt>
  438c74:	cbnz	x0, 438bb8 <argp_parse@@Base+0x4cd0>
  438c78:	mov	w0, #0xffffffff            	// #-1
  438c7c:	b	438c34 <argp_parse@@Base+0x4d4c>
  438c80:	fmul	s0, s0, s2
  438c84:	b	438c20 <argp_parse@@Base+0x4d38>
  438c88:	fcvtzu	x1, s0
  438c8c:	mov	x0, x19
  438c90:	bl	4389d8 <argp_parse@@Base+0x4af0>
  438c94:	tst	w0, #0xff
  438c98:	b.eq	438c30 <argp_parse@@Base+0x4d48>  // b.none
  438c9c:	add	x2, sp, #0x38
  438ca0:	mov	x1, x21
  438ca4:	mov	x0, x19
  438ca8:	mov	w3, #0x0                   	// #0
  438cac:	bl	437ef0 <argp_parse@@Base+0x4008>
  438cb0:	cbz	x0, 438b9c <argp_parse@@Base+0x4cb4>
  438cb4:	bl	404650 <abort@plt>
  438cb8:	stp	x29, x30, [sp, #-48]!
  438cbc:	mov	x29, sp
  438cc0:	add	x2, sp, #0x28
  438cc4:	str	x19, [sp, #16]
  438cc8:	mov	x19, x1
  438ccc:	bl	438b28 <argp_parse@@Base+0x4c40>
  438cd0:	cmn	w0, #0x1
  438cd4:	b.eq	438cf0 <argp_parse@@Base+0x4e08>  // b.none
  438cd8:	ldr	x1, [sp, #40]
  438cdc:	cmp	w0, #0x0
  438ce0:	csel	x0, x1, x19, eq  // eq = none
  438ce4:	ldr	x19, [sp, #16]
  438ce8:	ldp	x29, x30, [sp], #48
  438cec:	ret
  438cf0:	mov	x0, #0x0                   	// #0
  438cf4:	ldr	x19, [sp, #16]
  438cf8:	ldp	x29, x30, [sp], #48
  438cfc:	ret
  438d00:	stp	x29, x30, [sp, #-64]!
  438d04:	mov	w3, #0x1                   	// #1
  438d08:	mov	x29, sp
  438d0c:	add	x2, sp, #0x38
  438d10:	stp	x19, x20, [sp, #16]
  438d14:	mov	x19, x0
  438d18:	bl	437ef0 <argp_parse@@Base+0x4008>
  438d1c:	mov	x20, x0
  438d20:	cbz	x0, 438d3c <argp_parse@@Base+0x4e54>
  438d24:	ldr	x1, [sp, #56]
  438d28:	ldr	x0, [x19, #32]
  438d2c:	ldr	x1, [x1]
  438d30:	sub	x0, x0, #0x1
  438d34:	str	x0, [x19, #32]
  438d38:	cbz	x1, 438d4c <argp_parse@@Base+0x4e64>
  438d3c:	mov	x0, x20
  438d40:	ldp	x19, x20, [sp, #16]
  438d44:	ldp	x29, x30, [sp], #64
  438d48:	ret
  438d4c:	ldr	x0, [x19, #16]
  438d50:	ldr	x1, [x19, #40]
  438d54:	ucvtf	s1, x0
  438d58:	ldr	x0, [x19, #24]
  438d5c:	ldr	s0, [x1]
  438d60:	sub	x0, x0, #0x1
  438d64:	str	x0, [x19, #24]
  438d68:	fmul	s1, s1, s0
  438d6c:	ucvtf	s0, x0
  438d70:	fcmpe	s0, s1
  438d74:	b.pl	438d3c <argp_parse@@Base+0x4e54>  // b.nfrst
  438d78:	add	x0, x19, #0x28
  438d7c:	bl	438010 <argp_parse@@Base+0x4128>
  438d80:	ldr	x0, [x19, #16]
  438d84:	ldr	x1, [x19, #40]
  438d88:	ucvtf	s0, x0
  438d8c:	ldr	x0, [x19, #24]
  438d90:	ldr	s1, [x1]
  438d94:	ucvtf	s2, x0
  438d98:	fmul	s1, s0, s1
  438d9c:	fcmpe	s2, s1
  438da0:	b.pl	438d3c <argp_parse@@Base+0x4e54>  // b.nfrst
  438da4:	ldrb	w0, [x1, #16]
  438da8:	ldr	s1, [x1, #4]
  438dac:	fmul	s0, s0, s1
  438db0:	cbnz	w0, 438dbc <argp_parse@@Base+0x4ed4>
  438db4:	ldr	s1, [x1, #8]
  438db8:	fmul	s0, s0, s1
  438dbc:	fcvtzu	x1, s0
  438dc0:	mov	x0, x19
  438dc4:	bl	4389d8 <argp_parse@@Base+0x4af0>
  438dc8:	tst	w0, #0xff
  438dcc:	b.ne	438d3c <argp_parse@@Base+0x4e54>  // b.any
  438dd0:	str	x21, [sp, #32]
  438dd4:	ldr	x21, [x19, #72]
  438dd8:	cbz	x21, 438df0 <argp_parse@@Base+0x4f08>
  438ddc:	nop
  438de0:	mov	x0, x21
  438de4:	ldr	x21, [x21, #8]
  438de8:	bl	4047b0 <free@plt>
  438dec:	cbnz	x21, 438de0 <argp_parse@@Base+0x4ef8>
  438df0:	ldr	x21, [sp, #32]
  438df4:	str	xzr, [x19, #72]
  438df8:	b	438d3c <argp_parse@@Base+0x4e54>
  438dfc:	nop
  438e00:	stp	x29, x30, [sp, #-48]!
  438e04:	mov	x29, sp
  438e08:	stp	x19, x20, [sp, #16]
  438e0c:	mov	w19, w0
  438e10:	str	q0, [sp, #32]
  438e14:	bl	453960 <_obstack_memory_used@@Base+0x11770>
  438e18:	mov	x20, x0
  438e1c:	bl	453a80 <_obstack_memory_used@@Base+0x11890>
  438e20:	mov	v2.16b, v0.16b
  438e24:	cbnz	w19, 438e4c <argp_parse@@Base+0x4f64>
  438e28:	ldr	q0, [sp, #32]
  438e2c:	mov	v1.16b, v2.16b
  438e30:	str	q2, [sp, #32]
  438e34:	bl	452ec8 <_obstack_memory_used@@Base+0x10cd8>
  438e38:	ldr	q2, [sp, #32]
  438e3c:	cbz	w0, 438e4c <argp_parse@@Base+0x4f64>
  438e40:	add	x0, x20, #0x1
  438e44:	bl	453a80 <_obstack_memory_used@@Base+0x11890>
  438e48:	mov	v2.16b, v0.16b
  438e4c:	mov	v0.16b, v2.16b
  438e50:	ldp	x19, x20, [sp, #16]
  438e54:	ldp	x29, x30, [sp], #48
  438e58:	ret
  438e5c:	nop
  438e60:	stp	x29, x30, [sp, #-224]!
  438e64:	mov	x29, sp
  438e68:	stp	x21, x22, [sp, #32]
  438e6c:	mov	w21, w2
  438e70:	ands	w2, w2, #0x20
  438e74:	stp	x19, x20, [sp, #16]
  438e78:	mov	x19, x0
  438e7c:	mov	w0, #0x3e8                 	// #1000
  438e80:	stp	x25, x26, [sp, #64]
  438e84:	mov	w26, #0x400                 	// #1024
  438e88:	csel	w0, w26, w0, ne  // ne = any
  438e8c:	mov	x20, x3
  438e90:	stp	x23, x24, [sp, #48]
  438e94:	mov	x23, x1
  438e98:	stp	x27, x28, [sp, #80]
  438e9c:	and	w27, w21, #0x3
  438ea0:	str	x4, [sp, #136]
  438ea4:	stp	w0, w2, [sp, #168]
  438ea8:	bl	404210 <localeconv@plt>
  438eac:	ldr	x28, [x0]
  438eb0:	mov	x25, x0
  438eb4:	mov	x0, x28
  438eb8:	bl	403ff0 <strlen@plt>
  438ebc:	mov	x26, x0
  438ec0:	sub	x0, x0, #0x1
  438ec4:	cmp	x0, #0xf
  438ec8:	b.ls	438ed8 <argp_parse@@Base+0x4ff0>  // b.plast
  438ecc:	adrp	x28, 458000 <_obstack_memory_used@@Base+0x15e10>
  438ed0:	add	x28, x28, #0x668
  438ed4:	mov	x26, #0x1                   	// #1
  438ed8:	ldp	x24, x25, [x25, #8]
  438edc:	add	x0, x23, #0x287
  438ee0:	str	x0, [sp, #160]
  438ee4:	mov	x0, x24
  438ee8:	bl	403ff0 <strlen@plt>
  438eec:	ldr	x1, [sp, #136]
  438ef0:	cmp	x0, #0x10
  438ef4:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  438ef8:	add	x0, x0, #0x948
  438efc:	csel	x24, x0, x24, hi  // hi = pmore
  438f00:	cmp	x1, x20
  438f04:	b.hi	439108 <argp_parse@@Base+0x5220>  // b.pmore
  438f08:	udiv	x0, x20, x1
  438f0c:	msub	x1, x0, x1, x20
  438f10:	cbnz	x1, 438f24 <argp_parse@@Base+0x503c>
  438f14:	mul	x4, x19, x0
  438f18:	udiv	x0, x4, x0
  438f1c:	cmp	x0, x19
  438f20:	b.eq	439380 <argp_parse@@Base+0x5498>  // b.none
  438f24:	mov	x0, x20
  438f28:	bl	453a80 <_obstack_memory_used@@Base+0x11890>
  438f2c:	ldr	x0, [sp, #136]
  438f30:	str	q0, [sp, #96]
  438f34:	bl	453a80 <_obstack_memory_used@@Base+0x11890>
  438f38:	mov	v1.16b, v0.16b
  438f3c:	ldr	q2, [sp, #96]
  438f40:	mov	v0.16b, v2.16b
  438f44:	bl	4525a8 <_obstack_memory_used@@Base+0x103b8>
  438f48:	mov	x0, x19
  438f4c:	str	q0, [sp, #96]
  438f50:	bl	453a80 <_obstack_memory_used@@Base+0x11890>
  438f54:	mov	v1.16b, v0.16b
  438f58:	ldr	q2, [sp, #96]
  438f5c:	mov	v0.16b, v2.16b
  438f60:	bl	453110 <_obstack_memory_used@@Base+0x10f20>
  438f64:	str	q0, [sp, #144]
  438f68:	tbz	w21, #4, 4391d4 <argp_parse@@Base+0x52ec>
  438f6c:	ldr	w0, [sp, #168]
  438f70:	mov	w19, #0x0                   	// #0
  438f74:	bl	4538f8 <_obstack_memory_used@@Base+0x11708>
  438f78:	str	q0, [sp, #96]
  438f7c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  438f80:	add	x0, x0, #0x980
  438f84:	ldr	q2, [x0]
  438f88:	ldr	q1, [sp, #96]
  438f8c:	mov	v0.16b, v2.16b
  438f90:	add	w19, w19, #0x1
  438f94:	bl	453110 <_obstack_memory_used@@Base+0x10f20>
  438f98:	str	q0, [sp, #112]
  438f9c:	ldr	q1, [sp, #96]
  438fa0:	bl	453110 <_obstack_memory_used@@Base+0x10f20>
  438fa4:	ldr	q1, [sp, #144]
  438fa8:	bl	452fd0 <_obstack_memory_used@@Base+0x10de0>
  438fac:	cmp	w0, #0x0
  438fb0:	ldr	q2, [sp, #112]
  438fb4:	b.gt	438fc0 <argp_parse@@Base+0x50d8>
  438fb8:	cmp	w19, #0x8
  438fbc:	b.ne	438f88 <argp_parse@@Base+0x50a0>  // b.any
  438fc0:	ldr	q0, [sp, #144]
  438fc4:	mov	v1.16b, v2.16b
  438fc8:	add	x20, x26, #0x1
  438fcc:	bl	4525a8 <_obstack_memory_used@@Base+0x103b8>
  438fd0:	str	q0, [sp, #96]
  438fd4:	ldr	w0, [sp, #172]
  438fd8:	cmp	w0, #0x0
  438fdc:	cset	x28, eq  // eq = none
  438fe0:	cmp	w27, #0x1
  438fe4:	add	x28, x28, #0x1
  438fe8:	add	x28, x28, x20
  438fec:	b.eq	439444 <argp_parse@@Base+0x555c>  // b.none
  438ff0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  438ff4:	add	x0, x0, #0x970
  438ff8:	ldr	q1, [x0]
  438ffc:	bl	452fd0 <_obstack_memory_used@@Base+0x10de0>
  439000:	ldr	q0, [sp, #96]
  439004:	tbz	w0, #31, 439010 <argp_parse@@Base+0x5128>
  439008:	mov	w0, w27
  43900c:	bl	438e00 <argp_parse@@Base+0x4f18>
  439010:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439014:	add	x3, x3, #0x900
  439018:	mov	x2, #0xffffffffffffffff    	// #-1
  43901c:	mov	w1, #0x1                   	// #1
  439020:	mov	x0, x23
  439024:	bl	404010 <__sprintf_chk@plt>
  439028:	mov	x0, x23
  43902c:	bl	403ff0 <strlen@plt>
  439030:	mov	x2, x0
  439034:	cmp	x0, x28
  439038:	b.ls	439350 <argp_parse@@Base+0x5468>  // b.plast
  43903c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439040:	add	x0, x0, #0x990
  439044:	ldr	q0, [sp, #96]
  439048:	ldr	q1, [x0]
  43904c:	bl	453110 <_obstack_memory_used@@Base+0x10f20>
  439050:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439054:	add	x0, x0, #0x970
  439058:	str	q0, [sp, #96]
  43905c:	ldr	q1, [x0]
  439060:	bl	452fd0 <_obstack_memory_used@@Base+0x10de0>
  439064:	ldr	q0, [sp, #96]
  439068:	tbz	w0, #31, 439074 <argp_parse@@Base+0x518c>
  43906c:	mov	w0, w27
  439070:	bl	438e00 <argp_parse@@Base+0x4f18>
  439074:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439078:	add	x0, x0, #0x990
  43907c:	ldr	q1, [x0]
  439080:	bl	4525a8 <_obstack_memory_used@@Base+0x103b8>
  439084:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439088:	add	x3, x3, #0x8f8
  43908c:	mov	x2, #0xffffffffffffffff    	// #-1
  439090:	mov	w1, #0x1                   	// #1
  439094:	mov	x0, x23
  439098:	bl	404010 <__sprintf_chk@plt>
  43909c:	mov	x0, x23
  4390a0:	bl	403ff0 <strlen@plt>
  4390a4:	mov	x2, x0
  4390a8:	mov	x20, x0
  4390ac:	ldr	x0, [sp, #160]
  4390b0:	mov	x1, x23
  4390b4:	sub	x27, x0, x2
  4390b8:	add	x20, x27, x20
  4390bc:	mov	x0, x27
  4390c0:	bl	403f80 <memmove@plt>
  4390c4:	tbnz	w21, #2, 43923c <argp_parse@@Base+0x5354>
  4390c8:	tbz	w21, #7, 4390e0 <argp_parse@@Base+0x51f8>
  4390cc:	cmn	w19, #0x1
  4390d0:	b.eq	4393b4 <argp_parse@@Base+0x54cc>  // b.none
  4390d4:	and	w0, w21, #0x100
  4390d8:	orr	w1, w0, w19
  4390dc:	cbnz	w1, 439488 <argp_parse@@Base+0x55a0>
  4390e0:	ldr	x0, [sp, #160]
  4390e4:	strb	wzr, [x0]
  4390e8:	mov	x0, x27
  4390ec:	ldp	x19, x20, [sp, #16]
  4390f0:	ldp	x21, x22, [sp, #32]
  4390f4:	ldp	x23, x24, [sp, #48]
  4390f8:	ldp	x25, x26, [sp, #64]
  4390fc:	ldp	x27, x28, [sp, #80]
  439100:	ldp	x29, x30, [sp], #224
  439104:	ret
  439108:	cbz	x20, 438f24 <argp_parse@@Base+0x503c>
  43910c:	ldr	x0, [sp, #136]
  439110:	udiv	x5, x0, x20
  439114:	msub	x0, x5, x20, x0
  439118:	cbnz	x0, 438f24 <argp_parse@@Base+0x503c>
  43911c:	udiv	x4, x19, x5
  439120:	msub	x19, x4, x5, x19
  439124:	add	x19, x19, x19, lsl #2
  439128:	lsl	x2, x19, #1
  43912c:	udiv	x1, x2, x5
  439130:	msub	x2, x1, x5, x2
  439134:	mov	w3, w1
  439138:	lsl	x2, x2, #1
  43913c:	cmp	x5, x2
  439140:	b.ls	439490 <argp_parse@@Base+0x55a8>  // b.plast
  439144:	cmp	x2, #0x0
  439148:	cset	w1, ne  // ne = any
  43914c:	and	w22, w21, #0x10
  439150:	tbz	w21, #4, 439390 <argp_parse@@Base+0x54a8>
  439154:	ldr	w0, [sp, #168]
  439158:	mov	w19, #0x0                   	// #0
  43915c:	mov	w6, w0
  439160:	cmp	x4, w0, uxtw
  439164:	b.cs	439304 <argp_parse@@Base+0x541c>  // b.hs, b.nlast
  439168:	cmp	w27, #0x1
  43916c:	ldr	x20, [sp, #160]
  439170:	b.eq	439398 <argp_parse@@Base+0x54b0>  // b.none
  439174:	cbnz	w27, 439198 <argp_parse@@Base+0x52b0>
  439178:	add	w1, w1, w3
  43917c:	cmp	w1, #0x0
  439180:	b.le	439198 <argp_parse@@Base+0x52b0>
  439184:	add	x4, x4, #0x1
  439188:	cbz	w22, 439198 <argp_parse@@Base+0x52b0>
  43918c:	ldr	w0, [sp, #168]
  439190:	cmp	x4, w0, uxtw
  439194:	b.eq	4394d0 <argp_parse@@Base+0x55e8>  // b.none
  439198:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  43919c:	mov	x27, x20
  4391a0:	movk	x2, #0xcccd
  4391a4:	nop
  4391a8:	umulh	x1, x4, x2
  4391ac:	cmp	x4, #0x9
  4391b0:	lsr	x1, x1, #3
  4391b4:	add	x0, x1, x1, lsl #2
  4391b8:	sub	x0, x4, x0, lsl #1
  4391bc:	mov	x4, x1
  4391c0:	add	w0, w0, #0x30
  4391c4:	strb	w0, [x27, #-1]!
  4391c8:	b.hi	4391a8 <argp_parse@@Base+0x52c0>  // b.pmore
  4391cc:	tbz	w21, #2, 4390c8 <argp_parse@@Base+0x51e0>
  4391d0:	b	43923c <argp_parse@@Base+0x5354>
  4391d4:	cmp	w27, #0x1
  4391d8:	b.eq	4391f0 <argp_parse@@Base+0x5308>  // b.none
  4391dc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4391e0:	add	x0, x0, #0x970
  4391e4:	ldr	q1, [x0]
  4391e8:	bl	452fd0 <_obstack_memory_used@@Base+0x10de0>
  4391ec:	tbnz	w0, #31, 43936c <argp_parse@@Base+0x5484>
  4391f0:	ldr	q0, [sp, #144]
  4391f4:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4391f8:	add	x3, x3, #0x8f8
  4391fc:	mov	x2, #0xffffffffffffffff    	// #-1
  439200:	mov	w1, #0x1                   	// #1
  439204:	mov	x0, x23
  439208:	bl	404010 <__sprintf_chk@plt>
  43920c:	mov	w19, #0xffffffff            	// #-1
  439210:	mov	x0, x23
  439214:	bl	403ff0 <strlen@plt>
  439218:	mov	x2, x0
  43921c:	mov	x20, x0
  439220:	ldr	x0, [sp, #160]
  439224:	mov	x1, x23
  439228:	sub	x27, x0, x2
  43922c:	add	x20, x27, x20
  439230:	mov	x0, x27
  439234:	bl	403f80 <memmove@plt>
  439238:	tbz	w21, #2, 4390c8 <argp_parse@@Base+0x51e0>
  43923c:	mov	x0, x24
  439240:	sub	x26, x20, x27
  439244:	bl	403ff0 <strlen@plt>
  439248:	mov	x22, #0xffffffffffffffff    	// #-1
  43924c:	mov	x28, x0
  439250:	mov	x1, x27
  439254:	mov	x2, x26
  439258:	add	x0, sp, #0xb0
  43925c:	mov	x3, #0x29                  	// #41
  439260:	bl	404250 <__memcpy_chk@plt>
  439264:	b	43929c <argp_parse@@Base+0x53b4>
  439268:	sub	x26, x26, x22
  43926c:	add	x0, sp, #0xb0
  439270:	add	x1, x0, x26
  439274:	sub	x27, x20, x22
  439278:	mov	x2, x22
  43927c:	sub	x20, x27, x28
  439280:	mov	x0, x27
  439284:	bl	403f70 <memcpy@plt>
  439288:	cbz	x26, 4390c8 <argp_parse@@Base+0x51e0>
  43928c:	mov	x2, x28
  439290:	mov	x1, x24
  439294:	mov	x0, x20
  439298:	bl	403f70 <memcpy@plt>
  43929c:	ldrb	w0, [x25]
  4392a0:	cmp	x22, x26
  4392a4:	csel	x22, x22, x26, ls  // ls = plast
  4392a8:	cbz	w0, 439268 <argp_parse@@Base+0x5380>
  4392ac:	and	x4, x0, #0xff
  4392b0:	cmp	w0, #0xff
  4392b4:	b.eq	4392d4 <argp_parse@@Base+0x53ec>  // b.none
  4392b8:	cmp	x26, w0, uxtb
  4392bc:	add	x0, sp, #0xb0
  4392c0:	csel	x22, x4, x26, cs  // cs = hs, nlast
  4392c4:	add	x25, x25, #0x1
  4392c8:	sub	x26, x26, x22
  4392cc:	add	x1, x0, x26
  4392d0:	b	439274 <argp_parse@@Base+0x538c>
  4392d4:	mov	x22, x26
  4392d8:	add	x1, sp, #0xb0
  4392dc:	add	x25, x25, #0x1
  4392e0:	mov	x26, #0x0                   	// #0
  4392e4:	b	439274 <argp_parse@@Base+0x538c>
  4392e8:	cmp	w1, #0x0
  4392ec:	cset	w1, ne  // ne = any
  4392f0:	add	w19, w19, #0x1
  4392f4:	cmp	x6, x2
  4392f8:	b.hi	43950c <argp_parse@@Base+0x5624>  // b.pmore
  4392fc:	cmp	w19, #0x8
  439300:	b.eq	439168 <argp_parse@@Base+0x5280>  // b.none
  439304:	udiv	x2, x4, x6
  439308:	ldr	w5, [sp, #168]
  43930c:	asr	w8, w1, #1
  439310:	msub	x0, x2, x6, x4
  439314:	mov	x4, x2
  439318:	add	w0, w0, w0, lsl #2
  43931c:	add	w0, w3, w0, lsl #1
  439320:	udiv	w7, w0, w5
  439324:	msub	w0, w7, w5, w0
  439328:	mov	w3, w7
  43932c:	add	w0, w8, w0, lsl #1
  439330:	add	w1, w1, w0
  439334:	cmp	w5, w0
  439338:	b.hi	4392e8 <argp_parse@@Base+0x5400>  // b.pmore
  43933c:	ldr	w0, [sp, #168]
  439340:	cmp	w0, w1
  439344:	cset	w1, cc  // cc = lo, ul, last
  439348:	add	w1, w1, #0x2
  43934c:	b	4392f0 <argp_parse@@Base+0x5408>
  439350:	tbz	w21, #3, 439364 <argp_parse@@Base+0x547c>
  439354:	add	x0, x23, x2
  439358:	ldurb	w0, [x0, #-1]
  43935c:	cmp	w0, #0x30
  439360:	b.eq	4394b0 <argp_parse@@Base+0x55c8>  // b.none
  439364:	sub	x20, x2, x20
  439368:	b	439220 <argp_parse@@Base+0x5338>
  43936c:	ldr	q0, [sp, #144]
  439370:	mov	w0, w27
  439374:	bl	438e00 <argp_parse@@Base+0x4f18>
  439378:	str	q0, [sp, #144]
  43937c:	b	4391f0 <argp_parse@@Base+0x5308>
  439380:	and	w22, w21, #0x10
  439384:	mov	w1, #0x0                   	// #0
  439388:	mov	w3, #0x0                   	// #0
  43938c:	tbnz	w21, #4, 439154 <argp_parse@@Base+0x526c>
  439390:	mov	w19, #0xffffffff            	// #-1
  439394:	b	439168 <argp_parse@@Base+0x5280>
  439398:	and	x0, x4, #0x1
  43939c:	add	x1, x0, w1, sxtw
  4393a0:	cmp	x1, #0x0
  4393a4:	cinc	w1, w3, ne  // ne = any
  4393a8:	cmp	w1, #0x5
  4393ac:	b.gt	439184 <argp_parse@@Base+0x529c>
  4393b0:	b	439198 <argp_parse@@Base+0x52b0>
  4393b4:	ldr	x0, [sp, #136]
  4393b8:	cmp	x0, #0x1
  4393bc:	b.ls	4395a4 <argp_parse@@Base+0x56bc>  // b.plast
  4393c0:	ldr	w26, [sp, #168]
  4393c4:	mov	w19, #0x1                   	// #1
  4393c8:	mov	x0, #0x1                   	// #1
  4393cc:	nop
  4393d0:	ldr	x1, [sp, #136]
  4393d4:	mul	x0, x0, x26
  4393d8:	cmp	x1, x0
  4393dc:	b.ls	4393ec <argp_parse@@Base+0x5504>  // b.plast
  4393e0:	add	w19, w19, #0x1
  4393e4:	cmp	w19, #0x8
  4393e8:	b.ne	4393d0 <argp_parse@@Base+0x54e8>  // b.any
  4393ec:	and	w0, w21, #0x100
  4393f0:	tbz	w21, #6, 439408 <argp_parse@@Base+0x5520>
  4393f4:	add	x1, x23, #0x288
  4393f8:	str	x1, [sp, #160]
  4393fc:	mov	w1, #0x20                  	// #32
  439400:	strb	w1, [x23, #647]
  439404:	cbz	w19, 4395f0 <argp_parse@@Base+0x5708>
  439408:	ldr	w3, [sp, #172]
  43940c:	cmp	w3, #0x0
  439410:	ccmp	w19, #0x1, #0x0, eq  // eq = none
  439414:	b.eq	4394f4 <argp_parse@@Base+0x560c>  // b.none
  439418:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43941c:	add	x2, x2, #0x9a0
  439420:	ldr	x1, [sp, #160]
  439424:	ldrb	w2, [x2, w19, sxtw]
  439428:	strb	w2, [x1], #1
  43942c:	cbz	w0, 439504 <argp_parse@@Base+0x561c>
  439430:	cbnz	w3, 43949c <argp_parse@@Base+0x55b4>
  439434:	mov	w0, #0x42                  	// #66
  439438:	strb	w0, [x1], #1
  43943c:	str	x1, [sp, #160]
  439440:	b	4390e0 <argp_parse@@Base+0x51f8>
  439444:	mov	w1, w27
  439448:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43944c:	add	x3, x3, #0x900
  439450:	mov	x2, #0xffffffffffffffff    	// #-1
  439454:	mov	x0, x23
  439458:	bl	404010 <__sprintf_chk@plt>
  43945c:	mov	x0, x23
  439460:	bl	403ff0 <strlen@plt>
  439464:	mov	x2, x0
  439468:	cmp	x0, x28
  43946c:	b.ls	439350 <argp_parse@@Base+0x5468>  // b.plast
  439470:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439474:	add	x0, x0, #0x990
  439478:	ldr	q0, [sp, #96]
  43947c:	ldr	q1, [x0]
  439480:	bl	453110 <_obstack_memory_used@@Base+0x10f20>
  439484:	b	439074 <argp_parse@@Base+0x518c>
  439488:	tbz	w21, #6, 439404 <argp_parse@@Base+0x551c>
  43948c:	b	4393f4 <argp_parse@@Base+0x550c>
  439490:	cset	w2, cc  // cc = lo, ul, last
  439494:	add	w1, w2, #0x2
  439498:	b	43914c <argp_parse@@Base+0x5264>
  43949c:	ldr	x2, [sp, #160]
  4394a0:	mov	w0, #0x69                  	// #105
  4394a4:	add	x1, x2, #0x2
  4394a8:	strb	w0, [x2, #1]
  4394ac:	b	439434 <argp_parse@@Base+0x554c>
  4394b0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4394b4:	add	x0, x0, #0x990
  4394b8:	ldr	q0, [sp, #96]
  4394bc:	ldr	q1, [x0]
  4394c0:	bl	453110 <_obstack_memory_used@@Base+0x10f20>
  4394c4:	cmp	w27, #0x1
  4394c8:	b.ne	439050 <argp_parse@@Base+0x5168>  // b.any
  4394cc:	b	439074 <argp_parse@@Base+0x518c>
  4394d0:	cmp	w19, #0x8
  4394d4:	b.eq	439198 <argp_parse@@Base+0x52b0>  // b.none
  4394d8:	add	w19, w19, #0x1
  4394dc:	tbz	w21, #3, 4395c0 <argp_parse@@Base+0x56d8>
  4394e0:	mov	w0, #0x31                  	// #49
  4394e4:	sturb	w0, [x20, #-1]
  4394e8:	sub	x27, x20, #0x1
  4394ec:	tbz	w21, #2, 4390c8 <argp_parse@@Base+0x51e0>
  4394f0:	b	43923c <argp_parse@@Base+0x5354>
  4394f4:	ldr	x1, [sp, #160]
  4394f8:	mov	w2, #0x6b                  	// #107
  4394fc:	strb	w2, [x1], #1
  439500:	cbnz	w0, 439434 <argp_parse@@Base+0x554c>
  439504:	str	x1, [sp, #160]
  439508:	b	4390e0 <argp_parse@@Base+0x51f8>
  43950c:	cmp	x2, #0x9
  439510:	b.hi	439168 <argp_parse@@Base+0x5280>  // b.pmore
  439514:	cmp	w27, #0x1
  439518:	b.eq	439590 <argp_parse@@Base+0x56a8>  // b.none
  43951c:	cmp	w27, #0x0
  439520:	cset	w0, eq  // eq = none
  439524:	cmp	w1, #0x0
  439528:	cset	w3, gt
  43952c:	and	w0, w0, w3
  439530:	cbnz	w0, 43957c <argp_parse@@Base+0x5694>
  439534:	cbnz	w7, 4395fc <argp_parse@@Base+0x5714>
  439538:	ldr	x20, [sp, #160]
  43953c:	tbnz	w21, #3, 43956c <argp_parse@@Base+0x5684>
  439540:	mov	w0, #0x30                  	// #48
  439544:	add	x20, x23, #0x286
  439548:	strb	w0, [x23, #646]
  43954c:	sub	x20, x20, x26
  439550:	mov	x1, x28
  439554:	mov	x2, x26
  439558:	mov	x0, x20
  43955c:	str	x4, [sp, #96]
  439560:	bl	403f70 <memcpy@plt>
  439564:	ldr	x4, [sp, #96]
  439568:	mov	w1, #0x0                   	// #0
  43956c:	cmp	w27, #0x1
  439570:	b.eq	439198 <argp_parse@@Base+0x52b0>  // b.none
  439574:	mov	w3, #0x0                   	// #0
  439578:	b	439174 <argp_parse@@Base+0x528c>
  43957c:	cmp	w7, #0x9
  439580:	b.eq	4395ac <argp_parse@@Base+0x56c4>  // b.none
  439584:	add	w0, w7, #0x31
  439588:	and	w0, w0, #0xff
  43958c:	b	439544 <argp_parse@@Base+0x565c>
  439590:	and	w0, w7, #0x1
  439594:	add	w0, w0, w1
  439598:	cmp	w0, #0x2
  43959c:	cset	w0, gt
  4395a0:	b	439530 <argp_parse@@Base+0x5648>
  4395a4:	mov	w19, #0x0                   	// #0
  4395a8:	b	4390d4 <argp_parse@@Base+0x51ec>
  4395ac:	cmp	x2, #0x9
  4395b0:	add	x4, x2, #0x1
  4395b4:	b.eq	4395e4 <argp_parse@@Base+0x56fc>  // b.none
  4395b8:	mov	w1, #0x0                   	// #0
  4395bc:	b	439538 <argp_parse@@Base+0x5650>
  4395c0:	mvn	x0, x26
  4395c4:	mov	w1, #0x30                  	// #48
  4395c8:	sturb	w1, [x20, #-1]
  4395cc:	add	x20, x20, x0
  4395d0:	mov	x1, x28
  4395d4:	mov	x2, x26
  4395d8:	mov	x0, x20
  4395dc:	bl	403f70 <memcpy@plt>
  4395e0:	b	4394e0 <argp_parse@@Base+0x55f8>
  4395e4:	mov	w1, #0x0                   	// #0
  4395e8:	ldr	x20, [sp, #160]
  4395ec:	b	43956c <argp_parse@@Base+0x5684>
  4395f0:	ldr	x1, [sp, #160]
  4395f4:	cbnz	w0, 439434 <argp_parse@@Base+0x554c>
  4395f8:	b	4390e0 <argp_parse@@Base+0x51f8>
  4395fc:	add	w0, w7, #0x30
  439600:	and	w0, w0, #0xff
  439604:	b	439544 <argp_parse@@Base+0x565c>
  439608:	stp	x29, x30, [sp, #-80]!
  43960c:	mov	x29, sp
  439610:	stp	x19, x20, [sp, #16]
  439614:	mov	x19, x0
  439618:	mov	x20, x2
  43961c:	stp	x21, x22, [sp, #32]
  439620:	mov	x21, x1
  439624:	cbz	x0, 439764 <argp_parse@@Base+0x587c>
  439628:	str	x23, [sp, #48]
  43962c:	mov	w23, #0x0                   	// #0
  439630:	ldrb	w0, [x19]
  439634:	cmp	w0, #0x27
  439638:	b.ne	439644 <argp_parse@@Base+0x575c>  // b.any
  43963c:	add	x19, x19, #0x1
  439640:	mov	w23, #0x4                   	// #4
  439644:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439648:	add	x22, x3, #0x9a0
  43964c:	add	x2, x22, #0x10
  439650:	add	x1, x22, #0x18
  439654:	mov	x0, x19
  439658:	mov	x3, #0x4                   	// #4
  43965c:	bl	430200 <wcrtomb@plt+0x2b5e0>
  439660:	tbnz	w0, #31, 439694 <argp_parse@@Base+0x57ac>
  439664:	add	x3, x22, w0, sxtw #2
  439668:	mov	x0, #0x1                   	// #1
  43966c:	ldr	w1, [x3, #16]
  439670:	orr	w1, w23, w1
  439674:	ldr	x23, [sp, #48]
  439678:	str	x0, [x20]
  43967c:	mov	w0, #0x0                   	// #0
  439680:	str	w1, [x21]
  439684:	ldp	x19, x20, [sp, #16]
  439688:	ldp	x21, x22, [sp, #32]
  43968c:	ldp	x29, x30, [sp], #80
  439690:	ret
  439694:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439698:	mov	x3, x20
  43969c:	add	x4, x4, #0x938
  4396a0:	add	x1, sp, #0x48
  4396a4:	mov	x0, x19
  4396a8:	mov	w2, #0x0                   	// #0
  4396ac:	bl	441208 <argp_parse@@Base+0xd320>
  4396b0:	cbnz	w0, 439720 <argp_parse@@Base+0x5838>
  4396b4:	ldrb	w1, [x19]
  4396b8:	sub	w1, w1, #0x30
  4396bc:	and	w1, w1, #0xff
  4396c0:	cmp	w1, #0x9
  4396c4:	b.ls	439700 <argp_parse@@Base+0x5818>  // b.plast
  4396c8:	ldr	x1, [sp, #72]
  4396cc:	b	4396e4 <argp_parse@@Base+0x57fc>
  4396d0:	ldrb	w3, [x19, #1]!
  4396d4:	sub	w3, w3, #0x30
  4396d8:	and	w3, w3, #0xff
  4396dc:	cmp	w3, #0x9
  4396e0:	b.ls	439700 <argp_parse@@Base+0x5818>  // b.plast
  4396e4:	cmp	x1, x19
  4396e8:	b.ne	4396d0 <argp_parse@@Base+0x57e8>  // b.any
  4396ec:	ldurb	w2, [x1, #-1]
  4396f0:	cmp	w2, #0x42
  4396f4:	b.eq	4397b0 <argp_parse@@Base+0x58c8>  // b.none
  4396f8:	orr	w23, w23, #0x80
  4396fc:	orr	w23, w23, #0x20
  439700:	ldr	x1, [x20]
  439704:	str	w23, [x21]
  439708:	cbz	x1, 43972c <argp_parse@@Base+0x5844>
  43970c:	ldp	x19, x20, [sp, #16]
  439710:	ldp	x21, x22, [sp, #32]
  439714:	ldr	x23, [sp, #48]
  439718:	ldp	x29, x30, [sp], #80
  43971c:	ret
  439720:	ldr	x1, [x20]
  439724:	str	wzr, [x21]
  439728:	cbnz	x1, 43970c <argp_parse@@Base+0x5824>
  43972c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439730:	add	x0, x0, #0x928
  439734:	bl	404af0 <getenv@plt>
  439738:	cmp	x0, #0x0
  43973c:	mov	x2, #0x400                 	// #1024
  439740:	mov	x1, #0x200                 	// #512
  439744:	csel	x1, x1, x2, ne  // ne = any
  439748:	mov	w0, #0x4                   	// #4
  43974c:	ldr	x23, [sp, #48]
  439750:	str	x1, [x20]
  439754:	ldp	x19, x20, [sp, #16]
  439758:	ldp	x21, x22, [sp, #32]
  43975c:	ldp	x29, x30, [sp], #80
  439760:	ret
  439764:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439768:	add	x0, x0, #0x908
  43976c:	bl	404af0 <getenv@plt>
  439770:	mov	x19, x0
  439774:	cbnz	x0, 439628 <argp_parse@@Base+0x5740>
  439778:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43977c:	add	x0, x0, #0x918
  439780:	bl	404af0 <getenv@plt>
  439784:	mov	x19, x0
  439788:	cbnz	x0, 439628 <argp_parse@@Base+0x5740>
  43978c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439790:	add	x0, x0, #0x928
  439794:	bl	404af0 <getenv@plt>
  439798:	cbz	x0, 4397c4 <argp_parse@@Base+0x58dc>
  43979c:	mov	x0, #0x200                 	// #512
  4397a0:	str	x0, [x20]
  4397a4:	mov	w0, #0x0                   	// #0
  4397a8:	str	wzr, [x21]
  4397ac:	b	439684 <argp_parse@@Base+0x579c>
  4397b0:	ldurb	w1, [x1, #-2]
  4397b4:	orr	w23, w23, #0x180
  4397b8:	cmp	w1, #0x69
  4397bc:	b.ne	439700 <argp_parse@@Base+0x5818>  // b.any
  4397c0:	b	4396fc <argp_parse@@Base+0x5814>
  4397c4:	mov	x0, #0x400                 	// #1024
  4397c8:	str	x0, [x20]
  4397cc:	mov	w0, #0x0                   	// #0
  4397d0:	str	wzr, [x21]
  4397d4:	b	439684 <argp_parse@@Base+0x579c>
  4397d8:	strb	wzr, [x1, #20]
  4397dc:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  4397e0:	mov	x2, x0
  4397e4:	movk	x4, #0xcccd
  4397e8:	add	x0, x1, #0x14
  4397ec:	tbnz	x2, #63, 439814 <argp_parse@@Base+0x592c>
  4397f0:	umulh	x3, x2, x4
  4397f4:	lsr	x3, x3, #3
  4397f8:	add	x1, x3, x3, lsl #2
  4397fc:	sub	x1, x2, x1, lsl #1
  439800:	mov	x2, x3
  439804:	add	w1, w1, #0x30
  439808:	strb	w1, [x0, #-1]!
  43980c:	cbnz	x3, 4397f0 <argp_parse@@Base+0x5908>
  439810:	ret
  439814:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  439818:	mov	w5, #0x30                  	// #48
  43981c:	movk	x6, #0x6667
  439820:	smulh	x1, x2, x6
  439824:	mov	x4, x0
  439828:	asr	x1, x1, #2
  43982c:	sub	x1, x1, x2, asr #63
  439830:	add	x3, x1, x1, lsl #2
  439834:	sub	x3, x2, x3, lsl #1
  439838:	mov	x2, x1
  43983c:	sub	w1, w5, w3
  439840:	strb	w1, [x0, #-1]!
  439844:	cbnz	x2, 439820 <argp_parse@@Base+0x5938>
  439848:	mov	w1, #0x2d                  	// #45
  43984c:	sturb	w1, [x0, #-1]
  439850:	sub	x0, x4, #0x2
  439854:	ret
  439858:	strb	wzr, [x1, #20]
  43985c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  439860:	mov	x2, x0
  439864:	movk	x4, #0xcccd
  439868:	add	x0, x1, #0x14
  43986c:	tbnz	x2, #63, 439894 <argp_parse@@Base+0x59ac>
  439870:	umulh	x3, x2, x4
  439874:	lsr	x3, x3, #3
  439878:	add	x1, x3, x3, lsl #2
  43987c:	sub	x1, x2, x1, lsl #1
  439880:	mov	x2, x3
  439884:	add	w1, w1, #0x30
  439888:	strb	w1, [x0, #-1]!
  43988c:	cbnz	x3, 439870 <argp_parse@@Base+0x5988>
  439890:	ret
  439894:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  439898:	mov	w5, #0x30                  	// #48
  43989c:	movk	x6, #0x6667
  4398a0:	smulh	x1, x2, x6
  4398a4:	mov	x4, x0
  4398a8:	asr	x1, x1, #2
  4398ac:	sub	x1, x1, x2, asr #63
  4398b0:	add	x3, x1, x1, lsl #2
  4398b4:	sub	x3, x2, x3, lsl #1
  4398b8:	mov	x2, x1
  4398bc:	sub	w1, w5, w3
  4398c0:	strb	w1, [x0, #-1]!
  4398c4:	cbnz	x2, 4398a0 <argp_parse@@Base+0x59b8>
  4398c8:	mov	w1, #0x2d                  	// #45
  4398cc:	sturb	w1, [x0, #-1]
  4398d0:	sub	x0, x4, #0x2
  4398d4:	ret
  4398d8:	mov	x3, x0
  4398dc:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  4398e0:	add	x0, x1, #0x14
  4398e4:	movk	x4, #0xcccd
  4398e8:	strb	wzr, [x1, #20]
  4398ec:	nop
  4398f0:	umulh	x2, x3, x4
  4398f4:	cmp	x3, #0x9
  4398f8:	lsr	x2, x2, #3
  4398fc:	add	x1, x2, x2, lsl #2
  439900:	sub	x1, x3, x1, lsl #1
  439904:	mov	x3, x2
  439908:	add	w1, w1, #0x30
  43990c:	strb	w1, [x0, #-1]!
  439910:	b.hi	4398f0 <argp_parse@@Base+0x5a08>  // b.pmore
  439914:	ret
  439918:	stp	x29, x30, [sp, #-16]!
  43991c:	mov	w0, #0xe                   	// #14
  439920:	mov	x29, sp
  439924:	bl	4042d0 <nl_langinfo@plt>
  439928:	cbz	x0, 439948 <argp_parse@@Base+0x5a60>
  43992c:	ldrb	w2, [x0]
  439930:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439934:	add	x1, x1, #0x9d0
  439938:	cmp	w2, #0x0
  43993c:	csel	x0, x1, x0, eq  // eq = none
  439940:	ldp	x29, x30, [sp], #16
  439944:	ret
  439948:	ldp	x29, x30, [sp], #16
  43994c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439950:	add	x0, x0, #0x9d0
  439954:	ret
  439958:	stp	x29, x30, [sp, #-32]!
  43995c:	mov	x29, sp
  439960:	str	x19, [sp, #16]
  439964:	mov	w19, w0
  439968:	bl	404320 <wcwidth@plt>
  43996c:	tbz	w0, #31, 439980 <argp_parse@@Base+0x5a98>
  439970:	mov	w0, w19
  439974:	bl	404180 <iswcntrl@plt>
  439978:	cmp	w0, #0x0
  43997c:	cset	w0, eq  // eq = none
  439980:	ldr	x19, [sp, #16]
  439984:	ldp	x29, x30, [sp], #32
  439988:	ret
  43998c:	nop
  439990:	stp	x29, x30, [sp, #-32]!
  439994:	mov	x29, sp
  439998:	stp	x19, x20, [sp, #16]
  43999c:	mov	x20, x0
  4399a0:	mov	x0, x1
  4399a4:	mov	x19, x1
  4399a8:	ldr	x2, [x1, #8]
  4399ac:	ldr	x1, [x0], #24
  4399b0:	cmp	x1, x0
  4399b4:	b.eq	4399e0 <argp_parse@@Base+0x5af8>  // b.none
  4399b8:	str	x1, [x20]
  4399bc:	ldrb	w0, [x19, #16]
  4399c0:	str	x2, [x20, #8]
  4399c4:	strb	w0, [x20, #16]
  4399c8:	cbz	w0, 4399d4 <argp_parse@@Base+0x5aec>
  4399cc:	ldr	w0, [x19, #20]
  4399d0:	str	w0, [x20, #20]
  4399d4:	ldp	x19, x20, [sp, #16]
  4399d8:	ldp	x29, x30, [sp], #32
  4399dc:	ret
  4399e0:	add	x3, x20, #0x18
  4399e4:	mov	x0, x3
  4399e8:	bl	403f70 <memcpy@plt>
  4399ec:	ldr	x2, [x19, #8]
  4399f0:	str	x0, [x20]
  4399f4:	b	4399bc <argp_parse@@Base+0x5ad4>
  4399f8:	ubfx	x2, x0, #5, #3
  4399fc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439a00:	add	x1, x1, #0x9d8
  439a04:	ldr	w1, [x1, x2, lsl #2]
  439a08:	lsr	w0, w1, w0
  439a0c:	and	w0, w0, #0x1
  439a10:	ret
  439a14:	nop
  439a18:	stp	x29, x30, [sp, #-16]!
  439a1c:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439a20:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439a24:	mov	x29, sp
  439a28:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439a2c:	add	x3, x3, #0x9f8
  439a30:	add	x1, x1, #0x690
  439a34:	add	x0, x0, #0x6d0
  439a38:	mov	w2, #0xb3                  	// #179
  439a3c:	bl	404ac0 <__assert_fail@plt>
  439a40:	cmp	x0, x1
  439a44:	b.eq	439dac <argp_parse@@Base+0x5ec4>  // b.none
  439a48:	stp	x29, x30, [sp, #-192]!
  439a4c:	mov	x29, sp
  439a50:	stp	x19, x20, [sp, #16]
  439a54:	stp	x21, x22, [sp, #32]
  439a58:	stp	x23, x24, [sp, #48]
  439a5c:	mov	x23, x0
  439a60:	mov	x24, x1
  439a64:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  439a68:	cmp	x0, #0x1
  439a6c:	b.ls	439be4 <argp_parse@@Base+0x5cfc>  // b.plast
  439a70:	strb	wzr, [sp, #64]
  439a74:	mov	x19, x23
  439a78:	stur	xzr, [sp, #68]
  439a7c:	add	x21, sp, #0x44
  439a80:	ldrb	w0, [sp, #64]
  439a84:	add	x22, sp, #0x84
  439a88:	strb	wzr, [sp, #76]
  439a8c:	mov	w20, #0x1                   	// #1
  439a90:	str	x23, [sp, #80]
  439a94:	strb	wzr, [sp, #128]
  439a98:	stur	xzr, [sp, #132]
  439a9c:	strb	wzr, [sp, #140]
  439aa0:	str	x24, [sp, #144]
  439aa4:	cbnz	w0, 439b84 <argp_parse@@Base+0x5c9c>
  439aa8:	ldrb	w2, [x19]
  439aac:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439ab0:	add	x1, x1, #0x9d8
  439ab4:	ubfx	x0, x2, #5, #3
  439ab8:	ldr	w0, [x1, x0, lsl #2]
  439abc:	lsr	w0, w0, w2
  439ac0:	tbz	w0, #0, 439cf8 <argp_parse@@Base+0x5e10>
  439ac4:	mov	x0, #0x1                   	// #1
  439ac8:	str	x0, [sp, #88]
  439acc:	ldrb	w1, [x19]
  439ad0:	strb	w0, [sp, #76]
  439ad4:	mov	w19, w1
  439ad8:	strb	w0, [sp, #96]
  439adc:	str	w1, [sp, #100]
  439ae0:	cbz	w19, 439e60 <argp_parse@@Base+0x5f78>
  439ae4:	ldrb	w0, [sp, #140]
  439ae8:	cbnz	w0, 439cd0 <argp_parse@@Base+0x5de8>
  439aec:	ldrb	w0, [sp, #128]
  439af0:	ldr	x19, [sp, #144]
  439af4:	cbnz	w0, 439c70 <argp_parse@@Base+0x5d88>
  439af8:	ldrb	w2, [x19]
  439afc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439b00:	add	x1, x1, #0x9d8
  439b04:	ubfx	x0, x2, #5, #3
  439b08:	ldr	w0, [x1, x0, lsl #2]
  439b0c:	lsr	w0, w0, w2
  439b10:	tbz	w0, #0, 439c60 <argp_parse@@Base+0x5d78>
  439b14:	mov	x0, #0x1                   	// #1
  439b18:	str	x0, [sp, #152]
  439b1c:	ldrb	w1, [x19]
  439b20:	strb	w0, [sp, #140]
  439b24:	mov	w23, w1
  439b28:	strb	w0, [sp, #160]
  439b2c:	str	w1, [sp, #164]
  439b30:	cbz	w23, 439de8 <argp_parse@@Base+0x5f00>
  439b34:	ldrb	w0, [sp, #96]
  439b38:	cbz	w0, 439dc8 <argp_parse@@Base+0x5ee0>
  439b3c:	ldr	w0, [sp, #100]
  439b40:	bl	404b80 <towlower@plt>
  439b44:	mov	w19, w0
  439b48:	mov	w0, w23
  439b4c:	bl	404b80 <towlower@plt>
  439b50:	sub	w0, w19, w0
  439b54:	cbnz	w0, 439c4c <argp_parse@@Base+0x5d64>
  439b58:	ldp	x19, x1, [sp, #80]
  439b5c:	strb	wzr, [sp, #76]
  439b60:	ldr	x0, [sp, #144]
  439b64:	strb	wzr, [sp, #140]
  439b68:	add	x19, x19, x1
  439b6c:	str	x19, [sp, #80]
  439b70:	ldr	x1, [sp, #152]
  439b74:	add	x0, x0, x1
  439b78:	str	x0, [sp, #144]
  439b7c:	ldrb	w0, [sp, #64]
  439b80:	cbz	w0, 439aa8 <argp_parse@@Base+0x5bc0>
  439b84:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  439b88:	mov	x1, x0
  439b8c:	mov	x0, x19
  439b90:	bl	4409c0 <argp_parse@@Base+0xcad8>
  439b94:	mov	x2, x0
  439b98:	add	x0, sp, #0x40
  439b9c:	mov	x1, x19
  439ba0:	add	x3, sp, #0x44
  439ba4:	add	x0, x0, #0x24
  439ba8:	bl	441e18 <argp_parse@@Base+0xdf30>
  439bac:	str	x0, [sp, #88]
  439bb0:	cmn	x0, #0x1
  439bb4:	b.eq	439d0c <argp_parse@@Base+0x5e24>  // b.none
  439bb8:	cmn	x0, #0x2
  439bbc:	b.eq	439d34 <argp_parse@@Base+0x5e4c>  // b.none
  439bc0:	cbz	x0, 439d64 <argp_parse@@Base+0x5e7c>
  439bc4:	ldr	w19, [sp, #100]
  439bc8:	add	x0, sp, #0x44
  439bcc:	strb	w20, [sp, #96]
  439bd0:	bl	404670 <mbsinit@plt>
  439bd4:	cbz	w0, 439bdc <argp_parse@@Base+0x5cf4>
  439bd8:	strb	wzr, [sp, #64]
  439bdc:	strb	w20, [sp, #76]
  439be0:	b	439ae0 <argp_parse@@Base+0x5bf8>
  439be4:	bl	404740 <__ctype_b_loc@plt>
  439be8:	mov	x20, #0x0                   	// #0
  439bec:	ldr	x21, [x0]
  439bf0:	ldrb	w22, [x23, x20]
  439bf4:	mov	x19, x22
  439bf8:	ubfiz	x0, x22, #1, #8
  439bfc:	ldrh	w0, [x21, x0]
  439c00:	tbz	w0, #8, 439c14 <argp_parse@@Base+0x5d2c>
  439c04:	bl	4041f0 <__ctype_tolower_loc@plt>
  439c08:	ldr	x0, [x0]
  439c0c:	ldr	w19, [x0, x22, lsl #2]
  439c10:	and	w19, w19, #0xff
  439c14:	ldrb	w22, [x24, x20]
  439c18:	mov	x2, x22
  439c1c:	ubfiz	x0, x22, #1, #8
  439c20:	ldrh	w0, [x21, x0]
  439c24:	tbz	w0, #8, 439c38 <argp_parse@@Base+0x5d50>
  439c28:	bl	4041f0 <__ctype_tolower_loc@plt>
  439c2c:	ldr	x0, [x0]
  439c30:	ldr	w2, [x0, x22, lsl #2]
  439c34:	and	w2, w2, #0xff
  439c38:	cbz	w19, 439de0 <argp_parse@@Base+0x5ef8>
  439c3c:	add	x20, x20, #0x1
  439c40:	cmp	w19, w2
  439c44:	b.eq	439bf0 <argp_parse@@Base+0x5d08>  // b.none
  439c48:	sub	w0, w19, w2
  439c4c:	ldp	x19, x20, [sp, #16]
  439c50:	ldp	x21, x22, [sp, #32]
  439c54:	ldp	x23, x24, [sp, #48]
  439c58:	ldp	x29, x30, [sp], #192
  439c5c:	ret
  439c60:	mov	x0, x22
  439c64:	bl	404670 <mbsinit@plt>
  439c68:	cbz	w0, 439fe0 <argp_parse@@Base+0x60f8>
  439c6c:	strb	w20, [sp, #128]
  439c70:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  439c74:	mov	x1, x0
  439c78:	mov	x0, x19
  439c7c:	bl	4409c0 <argp_parse@@Base+0xcad8>
  439c80:	mov	x2, x0
  439c84:	add	x0, sp, #0x80
  439c88:	mov	x1, x19
  439c8c:	add	x3, sp, #0x84
  439c90:	add	x0, x0, #0x24
  439c94:	bl	441e18 <argp_parse@@Base+0xdf30>
  439c98:	str	x0, [sp, #152]
  439c9c:	cmn	x0, #0x1
  439ca0:	b.eq	439d20 <argp_parse@@Base+0x5e38>  // b.none
  439ca4:	cmn	x0, #0x2
  439ca8:	b.eq	439d4c <argp_parse@@Base+0x5e64>  // b.none
  439cac:	cbz	x0, 439d84 <argp_parse@@Base+0x5e9c>
  439cb0:	ldr	w23, [sp, #164]
  439cb4:	add	x0, sp, #0x84
  439cb8:	strb	w20, [sp, #160]
  439cbc:	bl	404670 <mbsinit@plt>
  439cc0:	cbz	w0, 439cc8 <argp_parse@@Base+0x5de0>
  439cc4:	strb	wzr, [sp, #128]
  439cc8:	strb	w20, [sp, #140]
  439ccc:	b	439b30 <argp_parse@@Base+0x5c48>
  439cd0:	ldrb	w0, [sp, #160]
  439cd4:	cbnz	w0, 439da4 <argp_parse@@Base+0x5ebc>
  439cd8:	ldrb	w0, [sp, #96]
  439cdc:	cbnz	w0, 439e48 <argp_parse@@Base+0x5f60>
  439ce0:	ldp	x0, x2, [sp, #80]
  439ce4:	ldp	x1, x3, [sp, #144]
  439ce8:	cmp	x2, x3
  439cec:	b.ne	439db4 <argp_parse@@Base+0x5ecc>  // b.any
  439cf0:	bl	4046d0 <memcmp@plt>
  439cf4:	b	439b54 <argp_parse@@Base+0x5c6c>
  439cf8:	mov	x0, x21
  439cfc:	bl	404670 <mbsinit@plt>
  439d00:	cbz	w0, 439fe0 <argp_parse@@Base+0x60f8>
  439d04:	strb	w20, [sp, #64]
  439d08:	b	439b84 <argp_parse@@Base+0x5c9c>
  439d0c:	mov	x0, #0x1                   	// #1
  439d10:	strb	w0, [sp, #76]
  439d14:	str	x0, [sp, #88]
  439d18:	strb	wzr, [sp, #96]
  439d1c:	b	439ae4 <argp_parse@@Base+0x5bfc>
  439d20:	mov	x0, #0x1                   	// #1
  439d24:	strb	w0, [sp, #140]
  439d28:	str	x0, [sp, #152]
  439d2c:	strb	wzr, [sp, #160]
  439d30:	b	439cd8 <argp_parse@@Base+0x5df0>
  439d34:	ldr	x0, [sp, #80]
  439d38:	bl	403ff0 <strlen@plt>
  439d3c:	strb	w20, [sp, #76]
  439d40:	str	x0, [sp, #88]
  439d44:	strb	wzr, [sp, #96]
  439d48:	b	439ae4 <argp_parse@@Base+0x5bfc>
  439d4c:	ldr	x0, [sp, #144]
  439d50:	bl	403ff0 <strlen@plt>
  439d54:	strb	w20, [sp, #140]
  439d58:	str	x0, [sp, #152]
  439d5c:	strb	wzr, [sp, #160]
  439d60:	b	439cd8 <argp_parse@@Base+0x5df0>
  439d64:	ldr	x0, [sp, #80]
  439d68:	mov	x1, #0x1                   	// #1
  439d6c:	str	x1, [sp, #88]
  439d70:	ldrb	w0, [x0]
  439d74:	cbnz	w0, 43a000 <argp_parse@@Base+0x6118>
  439d78:	ldr	w19, [sp, #100]
  439d7c:	cbz	w19, 439bc8 <argp_parse@@Base+0x5ce0>
  439d80:	bl	439a18 <argp_parse@@Base+0x5b30>
  439d84:	ldr	x0, [sp, #144]
  439d88:	mov	x1, #0x1                   	// #1
  439d8c:	str	x1, [sp, #152]
  439d90:	ldrb	w0, [x0]
  439d94:	cbnz	w0, 43a000 <argp_parse@@Base+0x6118>
  439d98:	ldr	w23, [sp, #164]
  439d9c:	cbz	w23, 439cb4 <argp_parse@@Base+0x5dcc>
  439da0:	bl	439a18 <argp_parse@@Base+0x5b30>
  439da4:	ldr	w23, [sp, #164]
  439da8:	b	439b30 <argp_parse@@Base+0x5c48>
  439dac:	mov	w0, #0x0                   	// #0
  439db0:	ret
  439db4:	b.cs	439f2c <argp_parse@@Base+0x6044>  // b.hs, b.nlast
  439db8:	bl	4046d0 <memcmp@plt>
  439dbc:	cmp	w0, #0x0
  439dc0:	b.le	439e48 <argp_parse@@Base+0x5f60>
  439dc4:	nop
  439dc8:	mov	w0, #0x1                   	// #1
  439dcc:	ldp	x19, x20, [sp, #16]
  439dd0:	ldp	x21, x22, [sp, #32]
  439dd4:	ldp	x23, x24, [sp, #48]
  439dd8:	ldp	x29, x30, [sp], #192
  439ddc:	ret
  439de0:	mov	w19, #0x0                   	// #0
  439de4:	b	439c48 <argp_parse@@Base+0x5d60>
  439de8:	ldrb	w0, [sp, #76]
  439dec:	cbz	w0, 439e68 <argp_parse@@Base+0x5f80>
  439df0:	ldrb	w0, [sp, #96]
  439df4:	cbz	w0, 439dc8 <argp_parse@@Base+0x5ee0>
  439df8:	ldr	w19, [sp, #100]
  439dfc:	nop
  439e00:	cbnz	w19, 439dc8 <argp_parse@@Base+0x5ee0>
  439e04:	ldrb	w0, [sp, #140]
  439e08:	cbnz	w0, 439fac <argp_parse@@Base+0x60c4>
  439e0c:	ldrb	w0, [sp, #128]
  439e10:	add	x20, sp, #0x80
  439e14:	ldr	x19, [sp, #144]
  439e18:	cbnz	w0, 439f58 <argp_parse@@Base+0x6070>
  439e1c:	ldrb	w1, [x19]
  439e20:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439e24:	add	x0, x0, #0x9d8
  439e28:	ubfx	x2, x1, #5, #3
  439e2c:	ldr	w0, [x0, x2, lsl #2]
  439e30:	lsr	w0, w0, w1
  439e34:	tbz	w0, #0, 439f40 <argp_parse@@Base+0x6058>
  439e38:	mov	x0, #0x1                   	// #1
  439e3c:	str	x0, [sp, #152]
  439e40:	ldrb	w23, [x19]
  439e44:	cbz	w23, 439fa4 <argp_parse@@Base+0x60bc>
  439e48:	mov	w0, #0xffffffff            	// #-1
  439e4c:	ldp	x19, x20, [sp, #16]
  439e50:	ldp	x21, x22, [sp, #32]
  439e54:	ldp	x23, x24, [sp, #48]
  439e58:	ldp	x29, x30, [sp], #192
  439e5c:	ret
  439e60:	ldrb	w0, [sp, #76]
  439e64:	cbnz	w0, 439e04 <argp_parse@@Base+0x5f1c>
  439e68:	ldrb	w0, [sp, #64]
  439e6c:	add	x20, sp, #0x40
  439e70:	ldr	x19, [sp, #80]
  439e74:	cbnz	w0, 439eac <argp_parse@@Base+0x5fc4>
  439e78:	ldrb	w1, [x19]
  439e7c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439e80:	add	x0, x0, #0x9d8
  439e84:	ubfx	x2, x1, #5, #3
  439e88:	ldr	w0, [x0, x2, lsl #2]
  439e8c:	lsr	w0, w0, w1
  439e90:	tbnz	w0, #0, 439f0c <argp_parse@@Base+0x6024>
  439e94:	add	x20, sp, #0x40
  439e98:	add	x0, x20, #0x4
  439e9c:	bl	404670 <mbsinit@plt>
  439ea0:	cbz	w0, 439fe0 <argp_parse@@Base+0x60f8>
  439ea4:	mov	w0, #0x1                   	// #1
  439ea8:	strb	w0, [sp, #64]
  439eac:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  439eb0:	mov	x1, x0
  439eb4:	mov	x0, x19
  439eb8:	bl	4409c0 <argp_parse@@Base+0xcad8>
  439ebc:	mov	x1, x19
  439ec0:	mov	x2, x0
  439ec4:	add	x3, x20, #0x4
  439ec8:	add	x0, x20, #0x24
  439ecc:	bl	441e18 <argp_parse@@Base+0xdf30>
  439ed0:	str	x0, [sp, #88]
  439ed4:	cmn	x0, #0x1
  439ed8:	b.eq	439dc8 <argp_parse@@Base+0x5ee0>  // b.none
  439edc:	cmn	x0, #0x2
  439ee0:	b.eq	439dc8 <argp_parse@@Base+0x5ee0>  // b.none
  439ee4:	cbz	x0, 439fc0 <argp_parse@@Base+0x60d8>
  439ee8:	ldr	w19, [sp, #100]
  439eec:	add	x0, x20, #0x4
  439ef0:	mov	w20, #0x1                   	// #1
  439ef4:	strb	w20, [sp, #96]
  439ef8:	bl	404670 <mbsinit@plt>
  439efc:	cbz	w0, 439f04 <argp_parse@@Base+0x601c>
  439f00:	strb	wzr, [sp, #64]
  439f04:	strb	w20, [sp, #76]
  439f08:	b	439e00 <argp_parse@@Base+0x5f18>
  439f0c:	mov	x0, #0x1                   	// #1
  439f10:	str	x0, [sp, #88]
  439f14:	ldrb	w1, [x19]
  439f18:	strb	w0, [sp, #76]
  439f1c:	mov	w19, w1
  439f20:	strb	w0, [sp, #96]
  439f24:	str	w1, [sp, #100]
  439f28:	b	439e00 <argp_parse@@Base+0x5f18>
  439f2c:	mov	x2, x3
  439f30:	bl	4046d0 <memcmp@plt>
  439f34:	tbnz	w0, #31, 439e48 <argp_parse@@Base+0x5f60>
  439f38:	mov	w0, #0x1                   	// #1
  439f3c:	b	439dcc <argp_parse@@Base+0x5ee4>
  439f40:	add	x20, sp, #0x80
  439f44:	add	x0, sp, #0x84
  439f48:	bl	404670 <mbsinit@plt>
  439f4c:	cbz	w0, 439fe0 <argp_parse@@Base+0x60f8>
  439f50:	mov	w0, #0x1                   	// #1
  439f54:	strb	w0, [sp, #128]
  439f58:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  439f5c:	mov	x1, x0
  439f60:	mov	x0, x19
  439f64:	bl	4409c0 <argp_parse@@Base+0xcad8>
  439f68:	mov	x1, x19
  439f6c:	mov	x2, x0
  439f70:	add	x3, x20, #0x4
  439f74:	add	x0, x20, #0x24
  439f78:	bl	441e18 <argp_parse@@Base+0xdf30>
  439f7c:	cmn	x0, #0x3
  439f80:	b.hi	439e48 <argp_parse@@Base+0x5f60>  // b.pmore
  439f84:	cbnz	x0, 439fb4 <argp_parse@@Base+0x60cc>
  439f88:	ldr	x0, [sp, #144]
  439f8c:	mov	x1, #0x1                   	// #1
  439f90:	str	x1, [sp, #152]
  439f94:	ldrb	w0, [x0]
  439f98:	cbnz	w0, 43a000 <argp_parse@@Base+0x6118>
  439f9c:	ldr	w23, [sp, #164]
  439fa0:	cbnz	w23, 439d80 <argp_parse@@Base+0x5e98>
  439fa4:	mov	w0, #0x0                   	// #0
  439fa8:	b	439c4c <argp_parse@@Base+0x5d64>
  439fac:	ldrb	w0, [sp, #160]
  439fb0:	cbz	w0, 439e48 <argp_parse@@Base+0x5f60>
  439fb4:	ldr	w23, [sp, #164]
  439fb8:	cbnz	w23, 439e48 <argp_parse@@Base+0x5f60>
  439fbc:	b	439fa4 <argp_parse@@Base+0x60bc>
  439fc0:	ldr	x0, [sp, #80]
  439fc4:	mov	x1, #0x1                   	// #1
  439fc8:	str	x1, [sp, #88]
  439fcc:	ldrb	w0, [x0]
  439fd0:	cbnz	w0, 43a000 <argp_parse@@Base+0x6118>
  439fd4:	ldr	w19, [sp, #100]
  439fd8:	cbz	w19, 439eec <argp_parse@@Base+0x6004>
  439fdc:	bl	439a18 <argp_parse@@Base+0x5b30>
  439fe0:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439fe4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439fe8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  439fec:	add	x3, x3, #0x9f8
  439ff0:	add	x1, x1, #0x690
  439ff4:	add	x0, x0, #0x6a0
  439ff8:	mov	w2, #0x96                  	// #150
  439ffc:	bl	404ac0 <__assert_fail@plt>
  43a000:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43a004:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43a008:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43a00c:	add	x3, x3, #0x9f8
  43a010:	add	x1, x1, #0x690
  43a014:	add	x0, x0, #0x6b8
  43a018:	mov	w2, #0xb2                  	// #178
  43a01c:	bl	404ac0 <__assert_fail@plt>
  43a020:	stp	x29, x30, [sp, #-48]!
  43a024:	mov	x29, sp
  43a028:	stp	x19, x20, [sp, #16]
  43a02c:	mov	x20, x0
  43a030:	ldrb	w1, [x0]
  43a034:	sub	w0, w1, #0x30
  43a038:	and	w0, w0, #0xff
  43a03c:	cmp	w0, #0x7
  43a040:	b.ls	43a0e4 <argp_parse@@Base+0x61fc>  // b.plast
  43a044:	mov	x3, x20
  43a048:	mov	x2, #0x1                   	// #1
  43a04c:	mov	w4, #0x2b                  	// #43
  43a050:	mov	x0, #0x10                  	// #16
  43a054:	cbz	w1, 43a088 <argp_parse@@Base+0x61a0>
  43a058:	and	w0, w1, #0xffffffef
  43a05c:	and	w0, w0, #0xff
  43a060:	cmp	w0, #0x2d
  43a064:	ccmp	w1, w4, #0x4, ne  // ne = any
  43a068:	ldrb	w1, [x3, #1]!
  43a06c:	cinc	x2, x2, eq  // eq = none
  43a070:	cbnz	w1, 43a058 <argp_parse@@Base+0x6170>
  43a074:	cmp	xzr, x2, lsr #60
  43a078:	lsl	x0, x2, #4
  43a07c:	cset	x1, ne  // ne = any
  43a080:	tbnz	x2, #59, 43a3b0 <argp_parse@@Base+0x64c8>
  43a084:	cbnz	x1, 43a3b0 <argp_parse@@Base+0x64c8>
  43a088:	bl	440f48 <argp_parse@@Base+0xd060>
  43a08c:	mov	x6, #0x0                   	// #0
  43a090:	mov	w17, #0x438                 	// #1080
  43a094:	mov	w16, #0x207                 	// #519
  43a098:	mov	w15, #0x9c0                 	// #2496
  43a09c:	mov	w11, #0x3                   	// #3
  43a0a0:	mov	w14, #0x92                  	// #146
  43a0a4:	mov	w13, #0x49                  	// #73
  43a0a8:	mov	w12, #0x124                 	// #292
  43a0ac:	mov	w10, #0x1                   	// #1
  43a0b0:	ldrb	w4, [x20]
  43a0b4:	mov	w7, #0x0                   	// #0
  43a0b8:	cmp	w4, #0x67
  43a0bc:	b.eq	43a28c <argp_parse@@Base+0x63a4>  // b.none
  43a0c0:	b.hi	43a268 <argp_parse@@Base+0x6380>  // b.pmore
  43a0c4:	cmp	w4, #0x61
  43a0c8:	b.eq	43a30c <argp_parse@@Base+0x6424>  // b.none
  43a0cc:	b.ls	43a128 <argp_parse@@Base+0x6240>  // b.plast
  43a0d0:	bl	4047b0 <free@plt>
  43a0d4:	mov	x0, #0x0                   	// #0
  43a0d8:	ldp	x19, x20, [sp, #16]
  43a0dc:	ldp	x29, x30, [sp], #48
  43a0e0:	ret
  43a0e4:	mov	x2, x20
  43a0e8:	mov	w19, #0x0                   	// #0
  43a0ec:	b	43a104 <argp_parse@@Base+0x621c>
  43a0f0:	ldrb	w1, [x2]
  43a0f4:	sub	w0, w1, #0x30
  43a0f8:	and	w0, w0, #0xff
  43a0fc:	cmp	w0, #0x7
  43a100:	b.hi	43a33c <argp_parse@@Base+0x6454>  // b.pmore
  43a104:	add	w19, w1, w19, lsl #3
  43a108:	add	x2, x2, #0x1
  43a10c:	sub	w19, w19, #0x30
  43a110:	cmp	w19, #0xfff
  43a114:	b.ls	43a0f0 <argp_parse@@Base+0x6208>  // b.plast
  43a118:	mov	x0, #0x0                   	// #0
  43a11c:	ldp	x19, x20, [sp, #16]
  43a120:	ldp	x29, x30, [sp], #48
  43a124:	ret
  43a128:	and	w1, w4, #0xffffffef
  43a12c:	cmp	w1, #0x2d
  43a130:	b.eq	43a13c <argp_parse@@Base+0x6254>  // b.none
  43a134:	cmp	w4, #0x2b
  43a138:	b.ne	43a0d0 <argp_parse@@Base+0x61e8>  // b.any
  43a13c:	ldrb	w1, [x20, #1]
  43a140:	add	x8, x6, #0x1
  43a144:	add	x3, x20, #0x1
  43a148:	add	x6, x0, x6, lsl #4
  43a14c:	cmp	w1, #0x6f
  43a150:	mov	w18, #0xfff                 	// #4095
  43a154:	mov	w9, #0x2b                  	// #43
  43a158:	b.eq	43a248 <argp_parse@@Base+0x6360>  // b.none
  43a15c:	nop
  43a160:	b.hi	43a254 <argp_parse@@Base+0x636c>  // b.pmore
  43a164:	cmp	w1, #0x37
  43a168:	b.hi	43a1e4 <argp_parse@@Base+0x62fc>  // b.pmore
  43a16c:	cmp	w1, #0x2f
  43a170:	b.hi	43a298 <argp_parse@@Base+0x63b0>  // b.pmore
  43a174:	cmp	w1, #0x74
  43a178:	mov	w2, #0x1                   	// #1
  43a17c:	mov	w5, #0x0                   	// #0
  43a180:	b.eq	43a1a8 <argp_parse@@Base+0x62c0>  // b.none
  43a184:	b.hi	43a1c8 <argp_parse@@Base+0x62e0>  // b.pmore
  43a188:	cmp	w1, #0x72
  43a18c:	b.eq	43a324 <argp_parse@@Base+0x643c>  // b.none
  43a190:	cmp	w1, #0x73
  43a194:	b.ne	43a1b4 <argp_parse@@Base+0x62cc>  // b.any
  43a198:	ldrb	w1, [x3, #1]!
  43a19c:	orr	w5, w5, #0xc00
  43a1a0:	cmp	w1, #0x74
  43a1a4:	b.ne	43a184 <argp_parse@@Base+0x629c>  // b.any
  43a1a8:	ldrb	w1, [x3, #1]!
  43a1ac:	orr	w5, w5, #0x200
  43a1b0:	b	43a1a0 <argp_parse@@Base+0x62b8>
  43a1b4:	cmp	w1, #0x58
  43a1b8:	b.ne	43a2f4 <argp_parse@@Base+0x640c>  // b.any
  43a1bc:	ldrb	w1, [x3, #1]!
  43a1c0:	mov	w2, #0x2                   	// #2
  43a1c4:	b	43a1a0 <argp_parse@@Base+0x62b8>
  43a1c8:	cmp	w1, #0x77
  43a1cc:	b.eq	43a318 <argp_parse@@Base+0x6430>  // b.none
  43a1d0:	cmp	w1, #0x78
  43a1d4:	b.ne	43a2f4 <argp_parse@@Base+0x640c>  // b.any
  43a1d8:	ldrb	w1, [x3, #1]!
  43a1dc:	orr	w5, w5, w13
  43a1e0:	b	43a1a0 <argp_parse@@Base+0x62b8>
  43a1e4:	cmp	w1, #0x67
  43a1e8:	add	x2, x20, #0x2
  43a1ec:	mov	w5, #0x38                  	// #56
  43a1f0:	b.ne	43a174 <argp_parse@@Base+0x628c>  // b.any
  43a1f4:	strb	w4, [x6]
  43a1f8:	ldrb	w4, [x20, #2]
  43a1fc:	mov	x20, x2
  43a200:	strb	w11, [x6, #1]
  43a204:	stp	w7, w5, [x6, #4]
  43a208:	cmp	w7, #0x0
  43a20c:	and	w1, w5, w7
  43a210:	csel	w5, w1, w5, ne  // ne = any
  43a214:	and	w1, w4, #0xffffffef
  43a218:	str	w5, [x6, #12]
  43a21c:	and	w1, w1, #0xff
  43a220:	add	x6, x6, #0x10
  43a224:	cmp	w1, #0x2d
  43a228:	add	x1, x8, #0x1
  43a22c:	ccmp	w4, w9, #0x4, ne  // ne = any
  43a230:	b.ne	43a38c <argp_parse@@Base+0x64a4>  // b.any
  43a234:	mov	x8, x1
  43a238:	ldrb	w1, [x20, #1]
  43a23c:	add	x3, x20, #0x1
  43a240:	cmp	w1, #0x6f
  43a244:	b.ne	43a160 <argp_parse@@Base+0x6278>  // b.any
  43a248:	add	x2, x20, #0x2
  43a24c:	mov	w5, #0x7                   	// #7
  43a250:	b	43a1f4 <argp_parse@@Base+0x630c>
  43a254:	cmp	w1, #0x75
  43a258:	add	x2, x20, #0x2
  43a25c:	mov	w5, #0x1c0                 	// #448
  43a260:	b.eq	43a1f4 <argp_parse@@Base+0x630c>  // b.none
  43a264:	b	43a174 <argp_parse@@Base+0x628c>
  43a268:	cmp	w4, #0x6f
  43a26c:	b.eq	43a330 <argp_parse@@Base+0x6448>  // b.none
  43a270:	cmp	w4, #0x75
  43a274:	b.ne	43a0d0 <argp_parse@@Base+0x61e8>  // b.any
  43a278:	orr	w7, w7, w15
  43a27c:	add	x20, x20, #0x1
  43a280:	ldrb	w4, [x20]
  43a284:	cmp	w4, #0x67
  43a288:	b.ne	43a0c0 <argp_parse@@Base+0x61d8>  // b.any
  43a28c:	orr	w7, w7, w17
  43a290:	add	x20, x20, #0x1
  43a294:	b	43a280 <argp_parse@@Base+0x6398>
  43a298:	mov	w2, #0x0                   	// #0
  43a29c:	add	w2, w1, w2, lsl #3
  43a2a0:	add	x3, x3, #0x1
  43a2a4:	sub	w2, w2, #0x30
  43a2a8:	cmp	w2, #0xfff
  43a2ac:	b.hi	43a0d0 <argp_parse@@Base+0x61e8>  // b.pmore
  43a2b0:	ldrb	w1, [x3]
  43a2b4:	sub	w5, w1, #0x30
  43a2b8:	and	w5, w5, #0xff
  43a2bc:	cmp	w5, #0x7
  43a2c0:	b.ls	43a29c <argp_parse@@Base+0x63b4>  // b.plast
  43a2c4:	cbnz	w7, 43a0d0 <argp_parse@@Base+0x61e8>
  43a2c8:	cmp	w1, #0x2c
  43a2cc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43a2d0:	b.ne	43a0d0 <argp_parse@@Base+0x61e8>  // b.any
  43a2d4:	mov	w7, #0xfff                 	// #4095
  43a2d8:	mov	x20, x3
  43a2dc:	mov	w5, w7
  43a2e0:	strb	w4, [x6]
  43a2e4:	mov	w4, w1
  43a2e8:	strb	w10, [x6, #1]
  43a2ec:	stp	w18, w2, [x6, #4]
  43a2f0:	b	43a214 <argp_parse@@Base+0x632c>
  43a2f4:	mov	x20, x3
  43a2f8:	strb	w4, [x6]
  43a2fc:	mov	w4, w1
  43a300:	strb	w2, [x6, #1]
  43a304:	stp	w7, w5, [x6, #4]
  43a308:	b	43a208 <argp_parse@@Base+0x6320>
  43a30c:	add	x20, x20, #0x1
  43a310:	mov	w7, #0xfff                 	// #4095
  43a314:	b	43a280 <argp_parse@@Base+0x6398>
  43a318:	ldrb	w1, [x3, #1]!
  43a31c:	orr	w5, w5, w14
  43a320:	b	43a1a0 <argp_parse@@Base+0x62b8>
  43a324:	ldrb	w1, [x3, #1]!
  43a328:	orr	w5, w5, w12
  43a32c:	b	43a1a0 <argp_parse@@Base+0x62b8>
  43a330:	orr	w7, w7, w16
  43a334:	add	x20, x20, #0x1
  43a338:	b	43a280 <argp_parse@@Base+0x6398>
  43a33c:	mov	x0, #0x0                   	// #0
  43a340:	cbnz	w1, 43a0d8 <argp_parse@@Base+0x61f0>
  43a344:	sub	x20, x2, x20
  43a348:	and	w0, w19, #0xc00
  43a34c:	cmp	x20, #0x5
  43a350:	orr	w20, w0, #0x3ff
  43a354:	mov	x0, #0x20                  	// #32
  43a358:	str	x21, [sp, #32]
  43a35c:	mov	w21, #0xfff                 	// #4095
  43a360:	csel	w20, w20, w21, lt  // lt = tstop
  43a364:	bl	440f48 <argp_parse@@Base+0xd060>
  43a368:	stp	w21, w19, [x0, #4]
  43a36c:	mov	w1, #0x13d                 	// #317
  43a370:	strh	w1, [x0]
  43a374:	str	w20, [x0, #12]
  43a378:	strb	wzr, [x0, #17]
  43a37c:	ldp	x19, x20, [sp, #16]
  43a380:	ldr	x21, [sp, #32]
  43a384:	ldp	x29, x30, [sp], #48
  43a388:	ret
  43a38c:	cmp	w4, #0x2c
  43a390:	b.ne	43a3a0 <argp_parse@@Base+0x64b8>  // b.any
  43a394:	add	x20, x20, #0x1
  43a398:	mov	x6, x8
  43a39c:	b	43a0b0 <argp_parse@@Base+0x61c8>
  43a3a0:	cbnz	w4, 43a0d0 <argp_parse@@Base+0x61e8>
  43a3a4:	add	x8, x0, x8, lsl #4
  43a3a8:	strb	wzr, [x8, #1]
  43a3ac:	b	43a0d8 <argp_parse@@Base+0x61f0>
  43a3b0:	str	x21, [sp, #32]
  43a3b4:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  43a3b8:	stp	x29, x30, [sp, #-160]!
  43a3bc:	mov	x1, x0
  43a3c0:	mov	w0, #0x0                   	// #0
  43a3c4:	mov	x29, sp
  43a3c8:	add	x2, sp, #0x20
  43a3cc:	bl	404b10 <__xstat@plt>
  43a3d0:	cbnz	w0, 43a408 <argp_parse@@Base+0x6520>
  43a3d4:	mov	x0, #0x20                  	// #32
  43a3d8:	str	x19, [sp, #16]
  43a3dc:	ldr	w19, [sp, #48]
  43a3e0:	bl	440f48 <argp_parse@@Base+0xd060>
  43a3e4:	mov	w1, #0xfff                 	// #4095
  43a3e8:	mov	w2, #0x13d                 	// #317
  43a3ec:	strh	w2, [x0]
  43a3f0:	stp	w1, w19, [x0, #4]
  43a3f4:	str	w1, [x0, #12]
  43a3f8:	strb	wzr, [x0, #17]
  43a3fc:	ldr	x19, [sp, #16]
  43a400:	ldp	x29, x30, [sp], #160
  43a404:	ret
  43a408:	mov	x0, #0x0                   	// #0
  43a40c:	ldp	x29, x30, [sp], #160
  43a410:	ret
  43a414:	nop
  43a418:	ldrb	w6, [x3, #1]
  43a41c:	and	w0, w0, #0xfff
  43a420:	and	w1, w1, #0xff
  43a424:	cbz	w6, 43a554 <argp_parse@@Base+0x666c>
  43a428:	mvn	w11, w2
  43a42c:	mov	w9, #0x0                   	// #0
  43a430:	mov	w10, #0x49                  	// #73
  43a434:	mov	w13, #0x124                 	// #292
  43a438:	mov	w12, #0x92                  	// #146
  43a43c:	b	43a4b4 <argp_parse@@Base+0x65cc>
  43a440:	cmp	w6, #0x2
  43a444:	mov	w5, #0xffffffff            	// #-1
  43a448:	b.eq	43a540 <argp_parse@@Base+0x6658>  // b.none
  43a44c:	mov	w7, #0x0                   	// #0
  43a450:	cmp	w6, #0x3
  43a454:	b.ne	43a480 <argp_parse@@Base+0x6598>  // b.any
  43a458:	and	w2, w0, w2
  43a45c:	tst	w2, w13
  43a460:	csel	w6, w13, wzr, ne  // ne = any
  43a464:	tst	w2, w12
  43a468:	orr	w14, w6, w12
  43a46c:	csel	w6, w14, w6, ne  // ne = any
  43a470:	tst	w2, w10
  43a474:	orr	w14, w6, w10
  43a478:	csel	w6, w14, w6, ne  // ne = any
  43a47c:	orr	w2, w6, w2
  43a480:	ldrb	w6, [x3]
  43a484:	and	w2, w2, w5
  43a488:	cmp	w6, #0x2d
  43a48c:	cbnz	w8, 43a4e8 <argp_parse@@Base+0x6600>
  43a490:	and	w2, w11, w2
  43a494:	b.eq	43a528 <argp_parse@@Base+0x6640>  // b.none
  43a498:	cmp	w6, #0x3d
  43a49c:	b.eq	43a500 <argp_parse@@Base+0x6618>  // b.none
  43a4a0:	cmp	w6, #0x2b
  43a4a4:	b.eq	43a534 <argp_parse@@Base+0x664c>  // b.none
  43a4a8:	ldrb	w6, [x3, #17]
  43a4ac:	add	x3, x3, #0x10
  43a4b0:	cbz	w6, 43a51c <argp_parse@@Base+0x6634>
  43a4b4:	ldp	w8, w2, [x3, #4]
  43a4b8:	cbz	w1, 43a440 <argp_parse@@Base+0x6558>
  43a4bc:	ldr	w5, [x3, #12]
  43a4c0:	cmp	w6, #0x2
  43a4c4:	mvn	w7, w5
  43a4c8:	orr	w5, w5, #0xfffff3ff
  43a4cc:	and	w7, w7, #0xc00
  43a4d0:	b.ne	43a450 <argp_parse@@Base+0x6568>  // b.any
  43a4d4:	orr	w2, w2, w10
  43a4d8:	ldrb	w6, [x3]
  43a4dc:	and	w2, w2, w5
  43a4e0:	cmp	w6, #0x2d
  43a4e4:	cbz	w8, 43a490 <argp_parse@@Base+0x65a8>
  43a4e8:	and	w2, w2, w8
  43a4ec:	b.eq	43a528 <argp_parse@@Base+0x6640>  // b.none
  43a4f0:	cmp	w6, #0x3d
  43a4f4:	b.ne	43a4a0 <argp_parse@@Base+0x65b8>  // b.any
  43a4f8:	orn	w7, w7, w8
  43a4fc:	mvn	w5, w7
  43a500:	ldrb	w6, [x3, #17]
  43a504:	and	w5, w5, #0xfff
  43a508:	and	w0, w0, w7
  43a50c:	add	x3, x3, #0x10
  43a510:	orr	w9, w9, w5
  43a514:	orr	w0, w0, w2
  43a518:	cbnz	w6, 43a4b4 <argp_parse@@Base+0x65cc>
  43a51c:	cbz	x4, 43a524 <argp_parse@@Base+0x663c>
  43a520:	str	w9, [x4]
  43a524:	ret
  43a528:	orr	w9, w9, w2
  43a52c:	bic	w0, w0, w2
  43a530:	b	43a4a8 <argp_parse@@Base+0x65c0>
  43a534:	orr	w9, w9, w2
  43a538:	orr	w0, w0, w2
  43a53c:	b	43a4a8 <argp_parse@@Base+0x65c0>
  43a540:	ands	w7, w0, w10
  43a544:	b.eq	43a480 <argp_parse@@Base+0x6598>  // b.none
  43a548:	orr	w2, w2, w10
  43a54c:	mov	w7, #0x0                   	// #0
  43a550:	b	43a4d8 <argp_parse@@Base+0x65f0>
  43a554:	mov	w9, #0x0                   	// #0
  43a558:	b	43a51c <argp_parse@@Base+0x6634>
  43a55c:	nop
  43a560:	stp	x29, x30, [sp, #-32]!
  43a564:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43a568:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43a56c:	mov	x29, sp
  43a570:	stp	x19, x20, [sp, #16]
  43a574:	add	x1, x1, #0xa10
  43a578:	ldr	w20, [x2, #968]
  43a57c:	mov	w19, w0
  43a580:	mov	w2, #0x5                   	// #5
  43a584:	mov	x0, #0x0                   	// #0
  43a588:	bl	4049c0 <dcgettext@plt>
  43a58c:	mov	w1, w19
  43a590:	mov	x2, x0
  43a594:	mov	w0, w20
  43a598:	bl	404050 <error@plt>
  43a59c:	bl	404650 <abort@plt>
  43a5a0:	stp	x29, x30, [sp, #-32]!
  43a5a4:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43a5a8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43a5ac:	mov	x29, sp
  43a5b0:	stp	x19, x20, [sp, #16]
  43a5b4:	add	x1, x1, #0xa40
  43a5b8:	ldr	w20, [x2, #968]
  43a5bc:	mov	w19, w0
  43a5c0:	mov	w2, #0x5                   	// #5
  43a5c4:	mov	x0, #0x0                   	// #0
  43a5c8:	bl	4049c0 <dcgettext@plt>
  43a5cc:	mov	w1, w19
  43a5d0:	mov	x2, x0
  43a5d4:	mov	w0, w20
  43a5d8:	bl	404050 <error@plt>
  43a5dc:	bl	404650 <abort@plt>
  43a5e0:	stp	x29, x30, [sp, #-48]!
  43a5e4:	mov	x29, sp
  43a5e8:	str	x21, [sp, #32]
  43a5ec:	mov	x21, x3
  43a5f0:	mov	w3, #0x4900                	// #18688
  43a5f4:	stp	x19, x20, [sp, #16]
  43a5f8:	movk	w3, #0x8, lsl #16
  43a5fc:	mov	x20, #0x0                   	// #0
  43a600:	orr	w2, w2, w3
  43a604:	bl	4515b0 <_obstack_memory_used@@Base+0xf3c0>
  43a608:	tbnz	w0, #31, 43a620 <argp_parse@@Base+0x6738>
  43a60c:	mov	w19, w0
  43a610:	bl	404610 <fdopendir@plt>
  43a614:	mov	x20, x0
  43a618:	cbz	x0, 43a634 <argp_parse@@Base+0x674c>
  43a61c:	str	w19, [x21]
  43a620:	mov	x0, x20
  43a624:	ldp	x19, x20, [sp, #16]
  43a628:	ldr	x21, [sp, #32]
  43a62c:	ldp	x29, x30, [sp], #48
  43a630:	ret
  43a634:	bl	404ad0 <__errno_location@plt>
  43a638:	mov	x21, x0
  43a63c:	mov	w0, w19
  43a640:	ldr	w19, [x21]
  43a644:	bl	4045c0 <close@plt>
  43a648:	b	43a61c <argp_parse@@Base+0x6734>
  43a64c:	nop
  43a650:	ldr	x6, [x0, #168]
  43a654:	ldp	x3, x4, [x1, #8]
  43a658:	cbz	x6, 43a694 <argp_parse@@Base+0x67ac>
  43a65c:	ldr	x2, [x0, #48]
  43a660:	cbnz	x2, 43a694 <argp_parse@@Base+0x67ac>
  43a664:	ldrb	w2, [x0, #161]
  43a668:	cbnz	w2, 43a694 <argp_parse@@Base+0x67ac>
  43a66c:	ldr	x2, [x0, #200]
  43a670:	cmp	x2, #0x0
  43a674:	ccmp	x4, #0x2, #0x0, eq  // eq = none
  43a678:	b.le	43a77c <argp_parse@@Base+0x6894>
  43a67c:	ldp	x2, x3, [x1]
  43a680:	mov	w1, #0x1                   	// #1
  43a684:	stp	x2, x3, [x0, #32]
  43a688:	str	x4, [x0, #48]
  43a68c:	strb	w1, [x0, #216]
  43a690:	ret
  43a694:	cmp	x4, #0x4
  43a698:	b.le	43a724 <argp_parse@@Base+0x683c>
  43a69c:	mov	x2, #0xd70b                	// #55051
  43a6a0:	mov	x5, #0x594b                	// #22859
  43a6a4:	movk	x2, #0x70a3, lsl #16
  43a6a8:	movk	x5, #0x3886, lsl #16
  43a6ac:	movk	x2, #0xa3d, lsl #32
  43a6b0:	movk	x5, #0xc5d6, lsl #32
  43a6b4:	movk	x2, #0xa3d7, lsl #48
  43a6b8:	movk	x5, #0x346d, lsl #48
  43a6bc:	asr	x7, x3, #63
  43a6c0:	sub	x4, x4, #0x4
  43a6c4:	smulh	x1, x3, x2
  43a6c8:	str	x4, [x0, #48]
  43a6cc:	smulh	x5, x3, x5
  43a6d0:	add	x6, x6, #0x1
  43a6d4:	add	x1, x1, x3
  43a6d8:	str	x6, [x0, #168]
  43a6dc:	asr	x1, x1, #6
  43a6e0:	asr	x4, x5, #11
  43a6e4:	sub	x1, x1, x7
  43a6e8:	sub	x4, x4, x7
  43a6ec:	str	x4, [x0, #40]
  43a6f0:	add	x4, x1, x1, lsl #1
  43a6f4:	smulh	x2, x1, x2
  43a6f8:	add	x4, x1, x4, lsl #3
  43a6fc:	add	x2, x2, x1
  43a700:	sub	x3, x3, x4, lsl #2
  43a704:	str	x3, [x0, #64]
  43a708:	asr	x2, x2, #6
  43a70c:	sub	x2, x2, x1, asr #63
  43a710:	add	x3, x2, x2, lsl #1
  43a714:	add	x2, x2, x3, lsl #3
  43a718:	sub	x1, x1, x2, lsl #2
  43a71c:	str	x1, [x0, #56]
  43a720:	ret
  43a724:	ldr	x1, [x0, #200]
  43a728:	cmp	x4, #0x2
  43a72c:	add	x1, x1, #0x1
  43a730:	str	x1, [x0, #200]
  43a734:	b.le	43a788 <argp_parse@@Base+0x68a0>
  43a738:	mov	x1, #0xd70b                	// #55051
  43a73c:	movk	x1, #0x70a3, lsl #16
  43a740:	movk	x1, #0xa3d, lsl #32
  43a744:	movk	x1, #0xa3d7, lsl #48
  43a748:	smulh	x1, x3, x1
  43a74c:	add	x1, x1, x3
  43a750:	asr	x1, x1, #6
  43a754:	sub	x1, x1, x3, asr #63
  43a758:	str	x1, [x0, #72]
  43a75c:	add	x2, x1, x1, lsl #1
  43a760:	add	x1, x1, x2, lsl #3
  43a764:	sub	x3, x3, x1, lsl #2
  43a768:	str	x3, [x0, #80]
  43a76c:	mov	w1, #0x2                   	// #2
  43a770:	str	w1, [x0, #28]
  43a774:	stp	xzr, xzr, [x0, #88]
  43a778:	ret
  43a77c:	mov	x1, #0x1                   	// #1
  43a780:	str	x1, [x0, #200]
  43a784:	nop
  43a788:	stp	x3, xzr, [x0, #72]
  43a78c:	b	43a76c <argp_parse@@Base+0x6884>
  43a790:	ldr	w2, [x1, #24]
  43a794:	tbnz	w2, #31, 43a7f4 <argp_parse@@Base+0x690c>
  43a798:	ldp	w4, w5, [x1]
  43a79c:	ldp	w2, w3, [x0]
  43a7a0:	ldr	w7, [x1, #8]
  43a7a4:	eor	w2, w2, w4
  43a7a8:	ldr	w4, [x0, #8]
  43a7ac:	eor	w3, w3, w5
  43a7b0:	ldr	w6, [x0, #12]
  43a7b4:	eor	w4, w4, w7
  43a7b8:	orr	w2, w2, w3
  43a7bc:	ldp	w5, w7, [x1, #12]
  43a7c0:	ldr	w3, [x0, #16]
  43a7c4:	eor	w6, w6, w5
  43a7c8:	ldr	w5, [x0, #20]
  43a7cc:	orr	w0, w4, w6
  43a7d0:	ldr	w4, [x1, #20]
  43a7d4:	orr	w0, w2, w0
  43a7d8:	eor	w1, w3, w7
  43a7dc:	eor	w2, w5, w4
  43a7e0:	orr	w1, w1, w2
  43a7e4:	orr	w0, w0, w1
  43a7e8:	cmp	w0, #0x0
  43a7ec:	cset	w0, eq  // eq = none
  43a7f0:	ret
  43a7f4:	mov	w0, #0x0                   	// #0
  43a7f8:	ret
  43a7fc:	nop
  43a800:	stp	x29, x30, [sp, #-48]!
  43a804:	mov	w5, #0xb3c5                	// #46021
  43a808:	movk	w5, #0x91a2, lsl #16
  43a80c:	mov	x29, sp
  43a810:	stp	x19, x20, [sp, #16]
  43a814:	mov	w20, w0
  43a818:	cmp	w0, #0x0
  43a81c:	mov	w4, #0x2d                  	// #45
  43a820:	mov	w0, #0x2b                  	// #43
  43a824:	smull	x5, w20, w5
  43a828:	csel	w4, w4, w0, lt  // lt = tstop
  43a82c:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43a830:	mov	x0, x1
  43a834:	add	x3, x3, #0xa70
  43a838:	mov	x2, #0xffffffffffffffff    	// #-1
  43a83c:	lsr	x5, x5, #32
  43a840:	str	x21, [sp, #32]
  43a844:	add	w5, w20, w5
  43a848:	mov	x21, x1
  43a84c:	mov	w1, #0x1                   	// #1
  43a850:	asr	w5, w5, #11
  43a854:	subs	w19, w5, w20, asr #31
  43a858:	cneg	w5, w19, mi  // mi = first
  43a85c:	bl	404010 <__sprintf_chk@plt>
  43a860:	mov	w1, #0xe10                 	// #3600
  43a864:	msub	w19, w19, w1, w20
  43a868:	cbz	w19, 43a8d0 <argp_parse@@Base+0x69e8>
  43a86c:	cmp	w19, #0x0
  43a870:	mov	w1, #0x8889                	// #34953
  43a874:	cneg	w19, w19, lt  // lt = tstop
  43a878:	movk	w1, #0x8888, lsl #16
  43a87c:	add	x3, x21, w0, sxtw
  43a880:	mov	w5, #0x3a                  	// #58
  43a884:	strb	w5, [x21, w0, sxtw]
  43a888:	mov	w2, #0xcccd                	// #52429
  43a88c:	umull	x0, w19, w1
  43a890:	movk	w2, #0xcccc, lsl #16
  43a894:	lsr	x1, x0, #37
  43a898:	lsl	w4, w1, #4
  43a89c:	umull	x0, w1, w2
  43a8a0:	sub	w4, w4, w1
  43a8a4:	subs	w19, w19, w4, lsl #2
  43a8a8:	lsr	x0, x0, #35
  43a8ac:	add	w4, w0, #0x30
  43a8b0:	strb	w4, [x3, #1]
  43a8b4:	add	w0, w0, w0, lsl #2
  43a8b8:	sub	w0, w1, w0, lsl #1
  43a8bc:	add	w0, w0, #0x30
  43a8c0:	strb	w0, [x3, #2]
  43a8c4:	add	x0, x3, #0x3
  43a8c8:	b.ne	43a8e4 <argp_parse@@Base+0x69fc>  // b.any
  43a8cc:	strb	wzr, [x0]
  43a8d0:	mov	x0, x21
  43a8d4:	ldp	x19, x20, [sp, #16]
  43a8d8:	ldr	x21, [sp, #32]
  43a8dc:	ldp	x29, x30, [sp], #48
  43a8e0:	ret
  43a8e4:	umull	x2, w19, w2
  43a8e8:	add	x0, x3, #0x6
  43a8ec:	strb	w5, [x3, #3]
  43a8f0:	lsr	x2, x2, #35
  43a8f4:	add	w1, w2, #0x30
  43a8f8:	strb	w1, [x3, #4]
  43a8fc:	add	w2, w2, w2, lsl #2
  43a900:	sub	w19, w19, w2, lsl #1
  43a904:	add	w19, w19, #0x30
  43a908:	strb	w19, [x3, #5]
  43a90c:	b	43a8cc <argp_parse@@Base+0x69e4>
  43a910:	mov	w4, #0x851f                	// #34079
  43a914:	mov	w5, #0x64                  	// #100
  43a918:	movk	w4, #0x51eb, lsl #16
  43a91c:	stp	x29, x30, [sp, #-32]!
  43a920:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43a924:	smull	x4, w0, w4
  43a928:	mov	x29, sp
  43a92c:	add	x3, x3, #0xa78
  43a930:	mov	x2, #0xffffffffffffffff    	// #-1
  43a934:	str	x19, [sp, #16]
  43a938:	asr	x4, x4, #37
  43a93c:	mov	x19, x1
  43a940:	sub	w4, w4, w0, asr #31
  43a944:	msub	w5, w4, w5, w0
  43a948:	cmp	w5, #0x0
  43a94c:	cneg	w5, w5, lt  // lt = tstop
  43a950:	adds	w4, w4, #0x13
  43a954:	cneg	w4, w4, mi  // mi = first
  43a958:	cmn	w0, #0x76c
  43a95c:	cinc	x3, x3, ge  // ge = tcont
  43a960:	mov	x0, x1
  43a964:	mov	w1, #0x1                   	// #1
  43a968:	bl	404010 <__sprintf_chk@plt>
  43a96c:	mov	x0, x19
  43a970:	ldr	x19, [sp, #16]
  43a974:	ldp	x29, x30, [sp], #32
  43a978:	ret
  43a97c:	nop
  43a980:	stp	x29, x30, [sp, #-320]!
  43a984:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43a988:	mov	x29, sp
  43a98c:	stp	x19, x20, [sp, #16]
  43a990:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43a994:	mov	x19, x0
  43a998:	stp	x3, x4, [sp, #280]
  43a99c:	add	x0, x8, #0xa88
  43a9a0:	ldr	x3, [x20, #1096]
  43a9a4:	str	q0, [sp, #128]
  43a9a8:	str	q1, [sp, #144]
  43a9ac:	str	q2, [sp, #160]
  43a9b0:	str	q3, [sp, #176]
  43a9b4:	str	q4, [sp, #192]
  43a9b8:	str	q5, [sp, #208]
  43a9bc:	str	q6, [sp, #224]
  43a9c0:	str	q7, [sp, #240]
  43a9c4:	stp	x1, x2, [sp, #264]
  43a9c8:	mov	x1, #0x1                   	// #1
  43a9cc:	mov	x2, #0x6                   	// #6
  43a9d0:	stp	x5, x6, [sp, #296]
  43a9d4:	str	x7, [sp, #312]
  43a9d8:	bl	4048b0 <fwrite@plt>
  43a9dc:	add	x1, sp, #0x100
  43a9e0:	add	x2, sp, #0x140
  43a9e4:	add	x3, sp, #0x140
  43a9e8:	mov	w5, #0xffffffc8            	// #-56
  43a9ec:	mov	w4, #0xffffff80            	// #-128
  43a9f0:	stp	x2, x3, [sp, #64]
  43a9f4:	mov	x2, x19
  43a9f8:	str	x1, [sp, #80]
  43a9fc:	add	x3, sp, #0x20
  43aa00:	stp	w5, w4, [sp, #88]
  43aa04:	mov	w1, #0x1                   	// #1
  43aa08:	ldp	x6, x7, [sp, #64]
  43aa0c:	stp	x6, x7, [sp, #32]
  43aa10:	ldp	x4, x5, [sp, #80]
  43aa14:	stp	x4, x5, [sp, #48]
  43aa18:	ldr	x0, [x20, #1096]
  43aa1c:	stp	x6, x7, [sp, #96]
  43aa20:	stp	x4, x5, [sp, #112]
  43aa24:	bl	4044a0 <__vfprintf_chk@plt>
  43aa28:	ldp	x19, x20, [sp, #16]
  43aa2c:	ldp	x29, x30, [sp], #320
  43aa30:	ret
  43aa34:	nop
  43aa38:	stp	x29, x30, [sp, #-16]!
  43aa3c:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43aa40:	and	x0, x0, #0xff
  43aa44:	mov	x29, sp
  43aa48:	eor	x5, x0, #0x1
  43aa4c:	ldr	x0, [x3, #1096]
  43aa50:	adrp	x6, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43aa54:	add	x6, x6, #0xa90
  43aa58:	mov	x3, x1
  43aa5c:	mov	x4, x2
  43aa60:	mov	w1, #0x1                   	// #1
  43aa64:	add	x2, x6, x5
  43aa68:	bl	404700 <__fprintf_chk@plt>
  43aa6c:	mov	w0, #0x1                   	// #1
  43aa70:	ldp	x29, x30, [sp], #16
  43aa74:	ret
  43aa78:	stp	x29, x30, [sp, #-48]!
  43aa7c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43aa80:	mov	x29, sp
  43aa84:	stp	x21, x22, [sp, #32]
  43aa88:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43aa8c:	add	x21, x21, #0xc20
  43aa90:	mov	x22, x0
  43aa94:	stp	x19, x20, [sp, #16]
  43aa98:	mov	x20, x1
  43aa9c:	mov	x19, x21
  43aaa0:	add	x1, x2, #0xaa0
  43aaa4:	b	43aab0 <argp_parse@@Base+0x6bc8>
  43aaa8:	ldr	x1, [x19, #16]!
  43aaac:	cbz	x1, 43aad0 <argp_parse@@Base+0x6be8>
  43aab0:	mov	x0, x20
  43aab4:	bl	404710 <strcmp@plt>
  43aab8:	cbnz	w0, 43aaa8 <argp_parse@@Base+0x6bc0>
  43aabc:	mov	x0, x19
  43aac0:	ldp	x19, x20, [sp, #16]
  43aac4:	ldp	x21, x22, [sp, #32]
  43aac8:	ldp	x29, x30, [sp], #48
  43aacc:	ret
  43aad0:	ldr	x1, [x22, #232]
  43aad4:	add	x19, x22, #0xe8
  43aad8:	cbnz	x1, 43ab10 <argp_parse@@Base+0x6c28>
  43aadc:	nop
  43aae0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43aae4:	add	x19, x21, #0x40
  43aae8:	add	x1, x1, #0xaa8
  43aaec:	b	43aaf8 <argp_parse@@Base+0x6c10>
  43aaf0:	ldr	x1, [x19, #16]!
  43aaf4:	cbz	x1, 43ab30 <argp_parse@@Base+0x6c48>
  43aaf8:	mov	x0, x20
  43aafc:	bl	404710 <strcmp@plt>
  43ab00:	cbnz	w0, 43aaf0 <argp_parse@@Base+0x6c08>
  43ab04:	b	43aabc <argp_parse@@Base+0x6bd4>
  43ab08:	ldr	x1, [x19, #16]!
  43ab0c:	cbz	x1, 43aae0 <argp_parse@@Base+0x6bf8>
  43ab10:	mov	x0, x20
  43ab14:	bl	404710 <strcmp@plt>
  43ab18:	cbnz	w0, 43ab08 <argp_parse@@Base+0x6c20>
  43ab1c:	mov	x0, x19
  43ab20:	ldp	x19, x20, [sp, #16]
  43ab24:	ldp	x21, x22, [sp, #32]
  43ab28:	ldp	x29, x30, [sp], #48
  43ab2c:	ret
  43ab30:	mov	x19, #0x0                   	// #0
  43ab34:	mov	x0, x19
  43ab38:	ldp	x19, x20, [sp, #16]
  43ab3c:	ldp	x21, x22, [sp, #32]
  43ab40:	ldp	x29, x30, [sp], #48
  43ab44:	ret
  43ab48:	stp	x29, x30, [sp, #-32]!
  43ab4c:	mov	w2, #0x5                   	// #5
  43ab50:	mov	x29, sp
  43ab54:	stp	x19, x20, [sp, #16]
  43ab58:	mov	x19, x1
  43ab5c:	mov	x20, x0
  43ab60:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ab64:	mov	x0, #0x0                   	// #0
  43ab68:	add	x1, x1, #0xab0
  43ab6c:	bl	4049c0 <dcgettext@plt>
  43ab70:	mov	x1, x20
  43ab74:	bl	43a980 <argp_parse@@Base+0x6a98>
  43ab78:	ldr	x1, [x19, #104]
  43ab7c:	cbnz	x1, 43ac78 <argp_parse@@Base+0x6d90>
  43ab80:	ldr	x1, [x19, #112]
  43ab84:	cbz	x1, 43ac28 <argp_parse@@Base+0x6d40>
  43ab88:	mov	w0, #0x0                   	// #0
  43ab8c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ab90:	add	x2, x2, #0xae0
  43ab94:	bl	43aa38 <argp_parse@@Base+0x6b50>
  43ab98:	and	w0, w0, #0xff
  43ab9c:	ldr	x1, [x19, #120]
  43aba0:	cbz	x1, 43abb4 <argp_parse@@Base+0x6ccc>
  43aba4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43aba8:	add	x2, x2, #0xaf0
  43abac:	bl	43aa38 <argp_parse@@Base+0x6b50>
  43abb0:	and	w0, w0, #0xff
  43abb4:	ldr	x1, [x19, #128]
  43abb8:	cbz	x1, 43abcc <argp_parse@@Base+0x6ce4>
  43abbc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43abc0:	add	x2, x2, #0xaf8
  43abc4:	bl	43aa38 <argp_parse@@Base+0x6b50>
  43abc8:	and	w0, w0, #0xff
  43abcc:	ldr	x1, [x19, #136]
  43abd0:	cbz	x1, 43abe4 <argp_parse@@Base+0x6cfc>
  43abd4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43abd8:	add	x2, x2, #0xb00
  43abdc:	bl	43aa38 <argp_parse@@Base+0x6b50>
  43abe0:	and	w0, w0, #0xff
  43abe4:	ldr	x1, [x19, #144]
  43abe8:	cbz	x1, 43abfc <argp_parse@@Base+0x6d14>
  43abec:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43abf0:	add	x2, x2, #0xb08
  43abf4:	bl	43aa38 <argp_parse@@Base+0x6b50>
  43abf8:	and	w0, w0, #0xff
  43abfc:	ldrsw	x1, [x19, #152]
  43ac00:	cbz	x1, 43ac10 <argp_parse@@Base+0x6d28>
  43ac04:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ac08:	add	x2, x2, #0xb10
  43ac0c:	bl	43aa38 <argp_parse@@Base+0x6b50>
  43ac10:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43ac14:	mov	w0, #0xa                   	// #10
  43ac18:	ldp	x19, x20, [sp, #16]
  43ac1c:	ldp	x29, x30, [sp], #32
  43ac20:	ldr	x1, [x1, #1096]
  43ac24:	b	404170 <fputc@plt>
  43ac28:	ldr	x1, [x19, #120]
  43ac2c:	cbnz	x1, 43ac9c <argp_parse@@Base+0x6db4>
  43ac30:	ldr	x1, [x19, #128]
  43ac34:	cbnz	x1, 43aca4 <argp_parse@@Base+0x6dbc>
  43ac38:	ldr	x0, [x19, #136]
  43ac3c:	cbnz	x0, 43acac <argp_parse@@Base+0x6dc4>
  43ac40:	ldr	x0, [x19, #144]
  43ac44:	cbnz	x0, 43acac <argp_parse@@Base+0x6dc4>
  43ac48:	ldr	w1, [x19, #152]
  43ac4c:	cbnz	w1, 43abcc <argp_parse@@Base+0x6ce4>
  43ac50:	mov	w2, #0x5                   	// #5
  43ac54:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ac58:	mov	x0, #0x0                   	// #0
  43ac5c:	add	x1, x1, #0xac8
  43ac60:	bl	4049c0 <dcgettext@plt>
  43ac64:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43ac68:	ldp	x19, x20, [sp, #16]
  43ac6c:	ldp	x29, x30, [sp], #32
  43ac70:	ldr	x1, [x1, #1096]
  43ac74:	b	404000 <fputs@plt>
  43ac78:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ac7c:	mov	w0, #0x0                   	// #0
  43ac80:	add	x2, x2, #0xad8
  43ac84:	bl	43aa38 <argp_parse@@Base+0x6b50>
  43ac88:	ldr	x1, [x19, #112]
  43ac8c:	and	w0, w0, #0xff
  43ac90:	cbnz	x1, 43ab8c <argp_parse@@Base+0x6ca4>
  43ac94:	ldr	x1, [x19, #120]
  43ac98:	b	43aba0 <argp_parse@@Base+0x6cb8>
  43ac9c:	mov	w0, #0x0                   	// #0
  43aca0:	b	43aba4 <argp_parse@@Base+0x6cbc>
  43aca4:	mov	w0, #0x0                   	// #0
  43aca8:	b	43abb8 <argp_parse@@Base+0x6cd0>
  43acac:	mov	w0, #0x0                   	// #0
  43acb0:	b	43abcc <argp_parse@@Base+0x6ce4>
  43acb4:	nop
  43acb8:	stp	x29, x30, [sp, #-80]!
  43acbc:	mov	x3, x0
  43acc0:	mov	w5, #0x0                   	// #0
  43acc4:	mov	x29, sp
  43acc8:	mov	x0, x2
  43accc:	mov	x4, #0x0                   	// #0
  43acd0:	stp	x19, x20, [sp, #16]
  43acd4:	mov	x20, x1
  43acd8:	mov	x19, x2
  43acdc:	mov	x1, #0x64                  	// #100
  43ace0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ace4:	add	x2, x2, #0xb20
  43ace8:	bl	451588 <_obstack_memory_used@@Base+0xf398>
  43acec:	cmp	w0, #0x63
  43acf0:	ccmp	x20, #0x0, #0x4, le
  43acf4:	b.eq	43ad0c <argp_parse@@Base+0x6e24>  // b.none
  43acf8:	str	x21, [sp, #32]
  43acfc:	mov	x21, x0
  43ad00:	ldr	x0, [x20, #208]
  43ad04:	cbnz	x0, 43ad1c <argp_parse@@Base+0x6e34>
  43ad08:	ldr	x21, [sp, #32]
  43ad0c:	mov	x0, x19
  43ad10:	ldp	x19, x20, [sp, #16]
  43ad14:	ldp	x29, x30, [sp], #80
  43ad18:	ret
  43ad1c:	ldr	w0, [x20, #24]
  43ad20:	add	x1, sp, #0x30
  43ad24:	add	x20, x19, w21, sxtw
  43ad28:	bl	43a800 <argp_parse@@Base+0x6918>
  43ad2c:	mov	x5, x0
  43ad30:	mov	w1, #0x64                  	// #100
  43ad34:	sub	w1, w1, w21
  43ad38:	mov	x0, x20
  43ad3c:	mov	x3, #0xffffffffffffffff    	// #-1
  43ad40:	sxtw	x1, w1
  43ad44:	mov	w2, #0x1                   	// #1
  43ad48:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ad4c:	add	x4, x4, #0xb40
  43ad50:	bl	404290 <__snprintf_chk@plt>
  43ad54:	mov	x0, x19
  43ad58:	ldp	x19, x20, [sp, #16]
  43ad5c:	ldr	x21, [sp, #32]
  43ad60:	ldp	x29, x30, [sp], #80
  43ad64:	ret
  43ad68:	stp	x29, x30, [sp, #-48]!
  43ad6c:	mov	x29, sp
  43ad70:	stp	x19, x20, [sp, #16]
  43ad74:	mov	x19, x0
  43ad78:	ldrb	w0, [x0, #224]
  43ad7c:	mov	x20, x1
  43ad80:	cbz	w0, 43adec <argp_parse@@Base+0x6f04>
  43ad84:	ldr	x5, [x19, #8]
  43ad88:	add	x0, x5, #0x1
  43ad8c:	cmp	x0, #0xd
  43ad90:	b.hi	43ae48 <argp_parse@@Base+0x6f60>  // b.pmore
  43ad94:	add	x3, x0, x0, lsl #1
  43ad98:	str	x21, [sp, #32]
  43ad9c:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43ada0:	add	x21, x21, #0xc20
  43ada4:	add	x1, x21, #0x340
  43ada8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  43adac:	add	x3, x1, x3, lsl #2
  43adb0:	add	x2, x2, #0xb68
  43adb4:	sub	x3, x3, x0
  43adb8:	mov	x1, #0x64                  	// #100
  43adbc:	mov	x0, x20
  43adc0:	bl	404200 <snprintf@plt>
  43adc4:	ldr	w2, [x19, #16]
  43adc8:	cmp	w2, #0x6
  43adcc:	b.hi	43add8 <argp_parse@@Base+0x6ef0>  // b.pmore
  43add0:	cmp	w0, #0x63
  43add4:	b.ls	43ae7c <argp_parse@@Base+0x6f94>  // b.plast
  43add8:	ldr	x21, [sp, #32]
  43addc:	mov	x0, x20
  43ade0:	ldp	x19, x20, [sp, #16]
  43ade4:	ldp	x29, x30, [sp], #48
  43ade8:	ret
  43adec:	strb	wzr, [x1]
  43adf0:	ldr	w2, [x19, #16]
  43adf4:	cmp	w2, #0x6
  43adf8:	b.hi	43addc <argp_parse@@Base+0x6ef4>  // b.pmore
  43adfc:	str	x21, [sp, #32]
  43ae00:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43ae04:	add	x21, x21, #0xc20
  43ae08:	mov	x0, x1
  43ae0c:	mov	x4, #0x1                   	// #1
  43ae10:	mov	x1, #0x64                  	// #100
  43ae14:	add	x5, x21, #0x3e0
  43ae18:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x12e10>
  43ae1c:	add	x3, x3, #0xde8
  43ae20:	add	x5, x5, w2, sxtw #2
  43ae24:	add	x4, x3, x4
  43ae28:	mov	w2, #0x1                   	// #1
  43ae2c:	mov	x3, #0xffffffffffffffff    	// #-1
  43ae30:	bl	404290 <__snprintf_chk@plt>
  43ae34:	mov	x0, x20
  43ae38:	ldp	x19, x20, [sp, #16]
  43ae3c:	ldr	x21, [sp, #32]
  43ae40:	ldp	x29, x30, [sp], #48
  43ae44:	ret
  43ae48:	mov	w2, #0x1                   	// #1
  43ae4c:	mov	x0, x20
  43ae50:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ae54:	mov	x3, #0xffffffffffffffff    	// #-1
  43ae58:	add	x4, x4, #0xb48
  43ae5c:	mov	x1, #0x64                  	// #100
  43ae60:	bl	404290 <__snprintf_chk@plt>
  43ae64:	ldr	w2, [x19, #16]
  43ae68:	cmp	w2, #0x6
  43ae6c:	b.hi	43addc <argp_parse@@Base+0x6ef4>  // b.pmore
  43ae70:	str	x21, [sp, #32]
  43ae74:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43ae78:	add	x21, x21, #0xc20
  43ae7c:	mov	w1, #0x64                  	// #100
  43ae80:	sub	w1, w1, w0
  43ae84:	cmp	w0, #0x0
  43ae88:	add	x0, x20, w0, sxtw
  43ae8c:	sxtw	x1, w1
  43ae90:	cset	x4, eq  // eq = none
  43ae94:	b	43ae14 <argp_parse@@Base+0x6f2c>
  43ae98:	stp	x29, x30, [sp, #-160]!
  43ae9c:	mov	w2, #0x5                   	// #5
  43aea0:	mov	x29, sp
  43aea4:	stp	x19, x20, [sp, #16]
  43aea8:	mov	x19, x1
  43aeac:	mov	x20, x0
  43aeb0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43aeb4:	mov	x0, #0x0                   	// #0
  43aeb8:	add	x1, x1, #0xab0
  43aebc:	stp	x21, x22, [sp, #32]
  43aec0:	bl	4049c0 <dcgettext@plt>
  43aec4:	mov	x1, x20
  43aec8:	bl	43a980 <argp_parse@@Base+0x6a98>
  43aecc:	ldr	x0, [x19, #168]
  43aed0:	cbnz	x0, 43b088 <argp_parse@@Base+0x71a0>
  43aed4:	ldrb	w1, [x19, #216]
  43aed8:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43aedc:	ldrb	w0, [x19, #223]
  43aee0:	ldr	x20, [x21, #1096]
  43aee4:	cmp	w1, w0
  43aee8:	b.eq	43b0a8 <argp_parse@@Base+0x71c0>  // b.none
  43aeec:	mov	w2, #0x5                   	// #5
  43aef0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43aef4:	mov	x0, #0x0                   	// #0
  43aef8:	add	x1, x1, #0xb80
  43aefc:	bl	4049c0 <dcgettext@plt>
  43af00:	mov	x2, x0
  43af04:	ldr	x3, [x19, #40]
  43af08:	mov	x0, x20
  43af0c:	mov	w1, #0x1                   	// #1
  43af10:	bl	404700 <__fprintf_chk@plt>
  43af14:	ldr	x20, [x21, #1096]
  43af18:	mov	w2, #0x1                   	// #1
  43af1c:	ldrb	w0, [x19, #216]
  43af20:	strb	w0, [x19, #223]
  43af24:	ldr	x0, [x19, #200]
  43af28:	cbz	x0, 43af34 <argp_parse@@Base+0x704c>
  43af2c:	ldrb	w0, [x19, #221]
  43af30:	cbz	w0, 43b0f8 <argp_parse@@Base+0x7210>
  43af34:	ldr	x0, [x19, #176]
  43af38:	cbz	x0, 43af98 <argp_parse@@Base+0x70b0>
  43af3c:	ldrb	w0, [x19, #219]
  43af40:	cbnz	w0, 43af98 <argp_parse@@Base+0x70b0>
  43af44:	cbnz	w2, 43b150 <argp_parse@@Base+0x7268>
  43af48:	mov	w2, #0x5                   	// #5
  43af4c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43af50:	mov	x0, #0x0                   	// #0
  43af54:	add	x1, x1, #0xbb8
  43af58:	bl	4049c0 <dcgettext@plt>
  43af5c:	mov	x22, x0
  43af60:	add	x1, sp, #0x38
  43af64:	mov	x0, x19
  43af68:	bl	43ad68 <argp_parse@@Base+0x6e80>
  43af6c:	mov	x3, x0
  43af70:	ldr	w5, [x19, #16]
  43af74:	mov	x2, x22
  43af78:	ldr	x4, [x19, #8]
  43af7c:	mov	x0, x20
  43af80:	mov	w1, #0x1                   	// #1
  43af84:	bl	404700 <__fprintf_chk@plt>
  43af88:	ldr	x20, [x21, #1096]
  43af8c:	mov	w0, #0x1                   	// #1
  43af90:	mov	w2, #0x1                   	// #1
  43af94:	strb	w0, [x19, #219]
  43af98:	ldr	x0, [x19, #184]
  43af9c:	cbz	x0, 43b020 <argp_parse@@Base+0x7138>
  43afa0:	ldrb	w0, [x19, #220]
  43afa4:	cbnz	w0, 43b020 <argp_parse@@Base+0x7138>
  43afa8:	ldr	x0, [x19, #192]
  43afac:	adrp	x5, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43afb0:	ldr	w3, [x19, #20]
  43afb4:	add	x5, x5, #0xbd8
  43afb8:	cmp	x0, #0x0
  43afbc:	eor	w2, w2, #0x1
  43afc0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  43afc4:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43afc8:	add	x1, x1, #0x948
  43afcc:	add	x4, x4, #0xb50
  43afd0:	csel	x4, x4, x1, ne  // ne = any
  43afd4:	add	x2, x5, w2, uxtb
  43afd8:	mov	w1, #0x1                   	// #1
  43afdc:	mov	x0, x20
  43afe0:	bl	404700 <__fprintf_chk@plt>
  43afe4:	ldr	x0, [x19, #208]
  43afe8:	mov	w1, #0x1                   	// #1
  43afec:	strb	w1, [x19, #220]
  43aff0:	cbz	x0, 43b164 <argp_parse@@Base+0x727c>
  43aff4:	ldrb	w0, [x19, #222]
  43aff8:	ldr	x20, [x21, #1096]
  43affc:	cbz	w0, 43b1e0 <argp_parse@@Base+0x72f8>
  43b000:	ldrb	w0, [x19, #160]
  43b004:	cbz	w0, 43b06c <argp_parse@@Base+0x7184>
  43b008:	ldr	x19, [x19, #88]
  43b00c:	mov	x1, x20
  43b010:	mov	w0, #0x20                  	// #32
  43b014:	bl	404170 <fputc@plt>
  43b018:	ldr	x20, [x21, #1096]
  43b01c:	b	43b040 <argp_parse@@Base+0x7158>
  43b020:	ldr	x0, [x19, #208]
  43b024:	cbz	x0, 43b030 <argp_parse@@Base+0x7148>
  43b028:	ldrb	w0, [x19, #222]
  43b02c:	cbz	w0, 43b174 <argp_parse@@Base+0x728c>
  43b030:	ldrb	w0, [x19, #160]
  43b034:	cbz	w0, 43b06c <argp_parse@@Base+0x7184>
  43b038:	ldr	x19, [x19, #88]
  43b03c:	cbnz	w2, 43b00c <argp_parse@@Base+0x7124>
  43b040:	mov	w2, #0x5                   	// #5
  43b044:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43b048:	mov	x0, #0x0                   	// #0
  43b04c:	add	x1, x1, #0xbe8
  43b050:	bl	4049c0 <dcgettext@plt>
  43b054:	mov	x2, x0
  43b058:	mov	x3, x19
  43b05c:	mov	x0, x20
  43b060:	mov	w1, #0x1                   	// #1
  43b064:	bl	404700 <__fprintf_chk@plt>
  43b068:	ldr	x20, [x21, #1096]
  43b06c:	mov	x1, x20
  43b070:	mov	w0, #0xa                   	// #10
  43b074:	bl	404170 <fputc@plt>
  43b078:	ldp	x19, x20, [sp, #16]
  43b07c:	ldp	x21, x22, [sp, #32]
  43b080:	ldp	x29, x30, [sp], #160
  43b084:	ret
  43b088:	ldrb	w0, [x19, #218]
  43b08c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43b090:	ldr	x20, [x21, #1096]
  43b094:	cbz	w0, 43b0b0 <argp_parse@@Base+0x71c8>
  43b098:	ldrb	w1, [x19, #216]
  43b09c:	ldrb	w0, [x19, #223]
  43b0a0:	cmp	w1, w0
  43b0a4:	b.ne	43aeec <argp_parse@@Base+0x7004>  // b.any
  43b0a8:	mov	w2, #0x0                   	// #0
  43b0ac:	b	43af24 <argp_parse@@Base+0x703c>
  43b0b0:	ldp	x4, x5, [x19, #56]
  43b0b4:	mov	w1, #0x1                   	// #1
  43b0b8:	ldr	x3, [x19, #40]
  43b0bc:	mov	x0, x20
  43b0c0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43b0c4:	add	x2, x2, #0xb60
  43b0c8:	bl	404700 <__fprintf_chk@plt>
  43b0cc:	ldrb	w1, [x19, #216]
  43b0d0:	mov	w2, #0x1                   	// #1
  43b0d4:	ldrb	w0, [x19, #223]
  43b0d8:	strb	w2, [x19, #218]
  43b0dc:	cmp	w1, w0
  43b0e0:	b.eq	43b1bc <argp_parse@@Base+0x72d4>  // b.none
  43b0e4:	ldr	x1, [x21, #1096]
  43b0e8:	mov	w0, #0x20                  	// #32
  43b0ec:	bl	404170 <fputc@plt>
  43b0f0:	ldr	x20, [x21, #1096]
  43b0f4:	b	43aeec <argp_parse@@Base+0x7004>
  43b0f8:	ldp	x3, x4, [x19, #72]
  43b0fc:	eor	w2, w2, #0x1
  43b100:	ldr	x5, [x19, #88]
  43b104:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43b108:	add	x1, x1, #0xb90
  43b10c:	mov	x0, x20
  43b110:	add	x2, x1, w2, uxtb
  43b114:	mov	w1, #0x1                   	// #1
  43b118:	bl	404700 <__fprintf_chk@plt>
  43b11c:	ldr	x3, [x19, #96]
  43b120:	cbnz	x3, 43b1c8 <argp_parse@@Base+0x72e0>
  43b124:	ldr	w0, [x19, #28]
  43b128:	ldr	x20, [x21, #1096]
  43b12c:	cmp	w0, #0x1
  43b130:	b.eq	43b1ec <argp_parse@@Base+0x7304>  // b.none
  43b134:	ldr	x0, [x19, #176]
  43b138:	mov	w1, #0x1                   	// #1
  43b13c:	strb	w1, [x19, #221]
  43b140:	mov	w2, #0x1                   	// #1
  43b144:	cbz	x0, 43af98 <argp_parse@@Base+0x70b0>
  43b148:	ldrb	w2, [x19, #219]
  43b14c:	cbnz	w2, 43af98 <argp_parse@@Base+0x70b0>
  43b150:	mov	x1, x20
  43b154:	mov	w0, #0x20                  	// #32
  43b158:	bl	404170 <fputc@plt>
  43b15c:	ldr	x20, [x21, #1096]
  43b160:	b	43af48 <argp_parse@@Base+0x7060>
  43b164:	ldrb	w0, [x19, #160]
  43b168:	ldr	x20, [x21, #1096]
  43b16c:	cbz	w0, 43b06c <argp_parse@@Base+0x7184>
  43b170:	b	43b008 <argp_parse@@Base+0x7120>
  43b174:	eor	w2, w2, #0x1
  43b178:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43b17c:	add	x22, x22, #0xb58
  43b180:	add	x22, x22, w2, uxtb
  43b184:	ldr	w0, [x19, #24]
  43b188:	add	x1, sp, #0x38
  43b18c:	bl	43a800 <argp_parse@@Base+0x6918>
  43b190:	mov	x3, x0
  43b194:	mov	w1, #0x1                   	// #1
  43b198:	mov	x0, x20
  43b19c:	mov	x2, x22
  43b1a0:	bl	404700 <__fprintf_chk@plt>
  43b1a4:	ldrb	w0, [x19, #160]
  43b1a8:	mov	w1, #0x1                   	// #1
  43b1ac:	strb	w1, [x19, #222]
  43b1b0:	ldr	x20, [x21, #1096]
  43b1b4:	cbnz	w0, 43b008 <argp_parse@@Base+0x7120>
  43b1b8:	b	43b06c <argp_parse@@Base+0x7184>
  43b1bc:	ldr	x20, [x21, #1096]
  43b1c0:	mov	w2, #0x1                   	// #1
  43b1c4:	b	43af24 <argp_parse@@Base+0x703c>
  43b1c8:	ldr	x0, [x21, #1096]
  43b1cc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43b1d0:	mov	w1, #0x1                   	// #1
  43b1d4:	add	x2, x2, #0xba8
  43b1d8:	bl	404700 <__fprintf_chk@plt>
  43b1dc:	b	43b124 <argp_parse@@Base+0x723c>
  43b1e0:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43b1e4:	add	x22, x22, #0xb58
  43b1e8:	b	43b184 <argp_parse@@Base+0x729c>
  43b1ec:	mov	x3, x20
  43b1f0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43b1f4:	mov	x2, #0x2                   	// #2
  43b1f8:	add	x0, x0, #0xbb0
  43b1fc:	mov	x1, #0x1                   	// #1
  43b200:	bl	4048b0 <fwrite@plt>
  43b204:	ldr	x20, [x21, #1096]
  43b208:	b	43b134 <argp_parse@@Base+0x724c>
  43b20c:	nop
  43b210:	sub	sp, sp, #0x5e0
  43b214:	stp	x29, x30, [sp]
  43b218:	mov	x29, sp
  43b21c:	stp	x19, x20, [sp, #16]
  43b220:	add	x20, sp, #0x180
  43b224:	stp	x21, x22, [sp, #32]
  43b228:	add	x21, sp, #0xe8
  43b22c:	adrp	x22, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43b230:	stp	x23, x24, [sp, #48]
  43b234:	mov	x23, x0
  43b238:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43b23c:	add	x0, x0, #0xb70
  43b240:	stp	x25, x26, [sp, #64]
  43b244:	mov	x19, x21
  43b248:	stp	x27, x28, [sp, #80]
  43b24c:	add	x22, x22, #0xc20
  43b250:	mov	w28, #0x26                  	// #38
  43b254:	str	x0, [sp, #96]
  43b258:	cmn	w28, #0x5d
  43b25c:	strh	wzr, [sp, #232]
  43b260:	mov	w25, w28
  43b264:	mov	w26, #0x0                   	// #0
  43b268:	mov	w27, #0x0                   	// #0
  43b26c:	mov	w24, #0xfffffffe            	// #-2
  43b270:	b.eq	43b398 <argp_parse@@Base+0x74b0>  // b.none
  43b274:	cmn	w24, #0x2
  43b278:	b.eq	43b624 <argp_parse@@Base+0x773c>  // b.none
  43b27c:	cmp	w24, #0x0
  43b280:	b.le	43b5a4 <argp_parse@@Base+0x76bc>
  43b284:	cmp	w24, #0x115
  43b288:	b.le	43b658 <argp_parse@@Base+0x7770>
  43b28c:	add	w25, w28, #0x2
  43b290:	mov	w2, #0x2                   	// #2
  43b294:	cmp	w25, #0x70
  43b298:	b.hi	43b398 <argp_parse@@Base+0x74b0>  // b.pmore
  43b29c:	add	x0, x22, #0xb10
  43b2a0:	ldrsb	w0, [x0, w25, sxtw]
  43b2a4:	cmp	w0, w2
  43b2a8:	b.ne	43b398 <argp_parse@@Base+0x74b0>  // b.any
  43b2ac:	add	x0, x22, #0xb88
  43b2b0:	ldrb	w27, [x0, w25, sxtw]
  43b2b4:	cbnz	w27, 43b5c4 <argp_parse@@Base+0x76dc>
  43b2b8:	add	x2, sp, #0x200
  43b2bc:	ldr	w8, [x20, #104]
  43b2c0:	ldp	x0, x1, [x20, #56]
  43b2c4:	add	x25, sp, #0x148
  43b2c8:	stp	x0, x1, [x2, #-184]
  43b2cc:	mov	x27, x20
  43b2d0:	add	x0, sp, #0x250
  43b2d4:	ldp	x6, x7, [x20, #72]
  43b2d8:	mov	w9, #0xffffffe4            	// #-28
  43b2dc:	ldp	x4, x5, [x20, #88]
  43b2e0:	stp	x6, x7, [x0, #-248]
  43b2e4:	ldrsb	w2, [x22, #3356]
  43b2e8:	stp	x4, x5, [x0, #-232]
  43b2ec:	ldp	x7, x6, [x20, #72]
  43b2f0:	ldp	x5, x4, [x20, #88]
  43b2f4:	ldr	x3, [x20, #104]
  43b2f8:	str	x3, [sp, #376]
  43b2fc:	ldr	x28, [x20, #56]
  43b300:	ldr	x3, [x20, #64]
  43b304:	nop
  43b308:	stp	x28, x3, [sp, #328]
  43b30c:	add	x20, x27, #0x38
  43b310:	stp	x7, x6, [sp, #344]
  43b314:	ldrsh	w3, [x19]
  43b318:	stp	x5, x4, [sp, #360]
  43b31c:	add	w2, w3, w2
  43b320:	str	w8, [sp, #376]
  43b324:	cmp	w2, #0x70
  43b328:	ldp	x0, x1, [x25]
  43b32c:	stp	x0, x1, [x27, #56]
  43b330:	ldp	x0, x1, [x25, #16]
  43b334:	stp	x0, x1, [x20, #16]
  43b338:	ldp	x0, x1, [x25, #32]
  43b33c:	stp	x0, x1, [x20, #32]
  43b340:	ldr	x0, [x25, #48]
  43b344:	str	x0, [x20, #48]
  43b348:	b.hi	43b35c <argp_parse@@Base+0x7474>  // b.pmore
  43b34c:	add	x0, x22, #0xb10
  43b350:	ldrsb	w0, [x0, w2, sxtw]
  43b354:	cmp	w0, w3
  43b358:	b.eq	43b618 <argp_parse@@Base+0x7730>  // b.none
  43b35c:	add	x0, x22, #0xd58
  43b360:	ldrsb	w27, [x0, w9, sxtw]
  43b364:	strh	w27, [x19, #2]
  43b368:	add	x0, x21, #0x26
  43b36c:	add	x19, x19, #0x2
  43b370:	cmp	x19, x0
  43b374:	b.cs	43cb08 <argp_parse@@Base+0x8c20>  // b.hs, b.nlast
  43b378:	cmp	w27, #0xc
  43b37c:	b.eq	43cb10 <argp_parse@@Base+0x8c28>  // b.none
  43b380:	add	x0, x22, #0x980
  43b384:	ldrsb	w28, [x0, w27, sxtw]
  43b388:	cmn	w28, #0x5d
  43b38c:	mov	w25, w28
  43b390:	b.ne	43b274 <argp_parse@@Base+0x738c>  // b.any
  43b394:	nop
  43b398:	add	x0, x22, #0xc00
  43b39c:	ldrb	w0, [x0, w27, sxtw]
  43b3a0:	cbnz	w0, 43b444 <argp_parse@@Base+0x755c>
  43b3a4:	cmp	w26, #0x3
  43b3a8:	b.ne	43b3b8 <argp_parse@@Base+0x74d0>  // b.any
  43b3ac:	cmp	w24, #0x0
  43b3b0:	b.gt	43b610 <argp_parse@@Base+0x7728>
  43b3b4:	b.eq	43b580 <argp_parse@@Base+0x7698>  // b.none
  43b3b8:	add	x2, x22, #0xb10
  43b3bc:	add	x3, x22, #0xb88
  43b3c0:	add	x1, x22, #0x980
  43b3c4:	b	43b3dc <argp_parse@@Base+0x74f4>
  43b3c8:	cmp	x19, x21
  43b3cc:	b.eq	43b580 <argp_parse@@Base+0x7698>  // b.none
  43b3d0:	ldrsh	w0, [x19, #-2]!
  43b3d4:	sub	x20, x20, #0x38
  43b3d8:	ldrsb	w28, [x1, w0, sxtw]
  43b3dc:	cmn	w28, #0x5d
  43b3e0:	b.eq	43b3c8 <argp_parse@@Base+0x74e0>  // b.none
  43b3e4:	add	w28, w28, #0x1
  43b3e8:	cmp	w28, #0x70
  43b3ec:	b.hi	43b3c8 <argp_parse@@Base+0x74e0>  // b.pmore
  43b3f0:	ldrsb	w0, [x2, w28, sxtw]
  43b3f4:	cmp	w0, #0x1
  43b3f8:	b.ne	43b3c8 <argp_parse@@Base+0x74e0>  // b.any
  43b3fc:	ldrb	w27, [x3, w28, sxtw]
  43b400:	cbz	w27, 43b3c8 <argp_parse@@Base+0x74e0>
  43b404:	ldr	x0, [sp, #104]
  43b408:	str	x0, [sp, #280]
  43b40c:	ldr	x0, [sp, #112]
  43b410:	str	x0, [sp, #288]
  43b414:	add	x4, x20, #0x38
  43b418:	mov	w26, #0x3                   	// #3
  43b41c:	ldp	x0, x1, [sp, #272]
  43b420:	stp	x0, x1, [x20, #56]
  43b424:	mov	x20, x4
  43b428:	ldp	x2, x3, [sp, #288]
  43b42c:	stp	x2, x3, [x4, #16]
  43b430:	ldp	x0, x1, [sp, #304]
  43b434:	stp	x0, x1, [x4, #32]
  43b438:	ldr	x2, [sp, #320]
  43b43c:	str	x2, [x4, #48]
  43b440:	b	43b364 <argp_parse@@Base+0x747c>
  43b444:	add	x2, x22, #0xc78
  43b448:	mov	w1, #0x1                   	// #1
  43b44c:	mov	w3, #0x38                  	// #56
  43b450:	sub	w10, w0, #0x4
  43b454:	sxtw	x9, w0
  43b458:	cmp	w10, #0x57
  43b45c:	ldrb	w11, [x2, w0, sxtw]
  43b460:	add	x25, sp, #0x148
  43b464:	sub	w1, w1, w11
  43b468:	smull	x1, w1, w3
  43b46c:	add	x0, x20, x1
  43b470:	ldr	x28, [x20, x1]
  43b474:	add	x1, sp, #0x200
  43b478:	ldp	x2, x3, [x0]
  43b47c:	stp	x2, x3, [x1, #-184]
  43b480:	add	x1, sp, #0x250
  43b484:	ldr	w8, [x0, #48]
  43b488:	ldp	x2, x3, [x0, #16]
  43b48c:	stp	x2, x3, [x1, #-248]
  43b490:	ldp	x2, x3, [x0, #32]
  43b494:	stp	x2, x3, [x1, #-232]
  43b498:	ldp	x4, x1, [x0, #40]
  43b49c:	str	x1, [sp, #376]
  43b4a0:	ldp	x3, x7, [x0, #8]
  43b4a4:	ldp	x6, x5, [x0, #24]
  43b4a8:	b.ls	43b5b0 <argp_parse@@Base+0x76c8>  // b.plast
  43b4ac:	add	x1, x22, #0xcd8
  43b4b0:	add	x0, x22, #0xd38
  43b4b4:	mov	w27, #0x38                  	// #56
  43b4b8:	sub	x19, x19, w11, uxtb #1
  43b4bc:	ldrb	w9, [x1, x9]
  43b4c0:	umsubl	x27, w11, w27, x20
  43b4c4:	sub	w9, w9, #0x1c
  43b4c8:	ldrsb	w2, [x0, w9, sxtw]
  43b4cc:	b	43b308 <argp_parse@@Base+0x7420>
  43b4d0:	ldp	x10, x1, [x20, #32]
  43b4d4:	stp	x3, x6, [sp, #120]
  43b4d8:	ldr	w9, [x23, #152]
  43b4dc:	ldp	x11, x0, [x23, #136]
  43b4e0:	stp	x7, x4, [sp, #136]
  43b4e4:	ldr	w2, [x20, #48]
  43b4e8:	str	x5, [sp, #152]
  43b4ec:	adds	w2, w9, w2
  43b4f0:	str	w2, [x23, #152]
  43b4f4:	cset	w9, vs
  43b4f8:	str	w8, [sp, #164]
  43b4fc:	adds	x0, x0, x1
  43b500:	str	x0, [x23, #144]
  43b504:	cset	x0, vs
  43b508:	adds	x11, x11, x10
  43b50c:	orr	w9, w9, w0
  43b510:	cset	x13, vs
  43b514:	ldr	x1, [x20, #24]
  43b518:	str	x11, [x23, #136]
  43b51c:	ldr	x0, [x23, #128]
  43b520:	ldr	x10, [x20, #16]
  43b524:	adds	x1, x0, x1
  43b528:	ldr	x0, [x23, #120]
  43b52c:	cset	x12, vs
  43b530:	ldr	x2, [x20]
  43b534:	adds	x0, x0, x10
  43b538:	stp	x0, x1, [x23, #120]
  43b53c:	cset	x0, vs
  43b540:	orr	x12, x13, x12
  43b544:	ldr	x10, [x20, #8]
  43b548:	ldr	x1, [x23, #112]
  43b54c:	adds	x1, x1, x10
  43b550:	str	x1, [x23, #112]
  43b554:	ldr	x1, [x23, #104]
  43b558:	cset	x10, vs
  43b55c:	orr	x0, x0, x10
  43b560:	ldur	x10, [x20, #-56]
  43b564:	adds	x1, x1, x2
  43b568:	orr	w0, w0, w12
  43b56c:	str	w10, [x23, #24]
  43b570:	str	x1, [x23, #104]
  43b574:	orr	w0, w0, w9
  43b578:	csinc	w0, w0, wzr, vc
  43b57c:	cbz	w0, 43bf20 <argp_parse@@Base+0x8038>
  43b580:	mov	w0, #0x1                   	// #1
  43b584:	ldp	x29, x30, [sp]
  43b588:	ldp	x19, x20, [sp, #16]
  43b58c:	ldp	x21, x22, [sp, #32]
  43b590:	ldp	x23, x24, [sp, #48]
  43b594:	ldp	x25, x26, [sp, #64]
  43b598:	ldp	x27, x28, [sp, #80]
  43b59c:	add	sp, sp, #0x5e0
  43b5a0:	ret
  43b5a4:	mov	w2, #0x0                   	// #0
  43b5a8:	mov	w24, #0x0                   	// #0
  43b5ac:	b	43b294 <argp_parse@@Base+0x73ac>
  43b5b0:	ldr	x0, [sp, #96]
  43b5b4:	ldrh	w0, [x0, w10, uxtw #1]
  43b5b8:	adr	x1, 43b5c4 <argp_parse@@Base+0x76dc>
  43b5bc:	add	x0, x1, w0, sxth #2
  43b5c0:	br	x0
  43b5c4:	ldr	x0, [sp, #104]
  43b5c8:	str	x0, [sp, #280]
  43b5cc:	ldr	x0, [sp, #112]
  43b5d0:	add	x4, x20, #0x38
  43b5d4:	cmp	w26, #0x0
  43b5d8:	str	x0, [sp, #288]
  43b5dc:	cset	w5, ne  // ne = any
  43b5e0:	mov	w24, #0xfffffffe            	// #-2
  43b5e4:	ldp	x0, x1, [sp, #272]
  43b5e8:	sub	w26, w26, w5
  43b5ec:	stp	x0, x1, [x20, #56]
  43b5f0:	mov	x20, x4
  43b5f4:	ldp	x2, x3, [sp, #288]
  43b5f8:	stp	x2, x3, [x4, #16]
  43b5fc:	ldp	x0, x1, [sp, #304]
  43b600:	stp	x0, x1, [x4, #32]
  43b604:	ldr	x5, [sp, #320]
  43b608:	str	x5, [x4, #48]
  43b60c:	b	43b364 <argp_parse@@Base+0x747c>
  43b610:	mov	w24, #0xfffffffe            	// #-2
  43b614:	b	43b3b8 <argp_parse@@Base+0x74d0>
  43b618:	add	x0, x22, #0xb88
  43b61c:	ldrb	w27, [x0, w2, sxtw]
  43b620:	b	43b364 <argp_parse@@Base+0x747c>
  43b624:	ldr	x1, [x23]
  43b628:	mov	w6, #0xffffffff            	// #-1
  43b62c:	ldrb	w0, [x1]
  43b630:	cmp	w0, #0xd
  43b634:	b.hi	43b668 <argp_parse@@Base+0x7780>  // b.pmore
  43b638:	cmp	w0, #0x8
  43b63c:	b.hi	43b7e0 <argp_parse@@Base+0x78f8>  // b.pmore
  43b640:	add	x0, x1, #0x1
  43b644:	str	x0, [x23]
  43b648:	mov	w2, #0x0                   	// #0
  43b64c:	ldrb	w24, [x1]
  43b650:	cbz	w24, 43b294 <argp_parse@@Base+0x73ac>
  43b654:	nop
  43b658:	add	x0, x22, #0x9f8
  43b65c:	ldrb	w2, [x0, w24, sxtw]
  43b660:	add	w25, w28, w2
  43b664:	b	43b294 <argp_parse@@Base+0x73ac>
  43b668:	cmp	w0, #0x20
  43b66c:	b.eq	43b7e0 <argp_parse@@Base+0x78f8>  // b.none
  43b670:	sub	w3, w0, #0x2b
  43b674:	cmp	w0, #0x2d
  43b678:	sub	w2, w0, #0x30
  43b67c:	and	w3, w3, #0xfffffffd
  43b680:	cset	w4, eq  // eq = none
  43b684:	and	w3, w3, #0xff
  43b688:	cmp	w2, #0x9
  43b68c:	b.hi	43b7f0 <argp_parse@@Base+0x7908>  // b.pmore
  43b690:	cbnz	w3, 43cb84 <argp_parse@@Base+0x8c9c>
  43b694:	cmp	w4, #0x0
  43b698:	cneg	w5, w6, eq  // eq = none
  43b69c:	add	x1, x1, #0x1
  43b6a0:	str	x1, [x23]
  43b6a4:	ldrb	w0, [x1]
  43b6a8:	cmp	w0, #0xd
  43b6ac:	b.hi	43b6cc <argp_parse@@Base+0x77e4>  // b.pmore
  43b6b0:	cmp	w0, #0x8
  43b6b4:	b.ls	43b630 <argp_parse@@Base+0x7748>  // b.plast
  43b6b8:	add	x1, x1, #0x1
  43b6bc:	str	x1, [x23]
  43b6c0:	ldrb	w0, [x1]
  43b6c4:	cmp	w0, #0xd
  43b6c8:	b.ls	43b6b0 <argp_parse@@Base+0x77c8>  // b.plast
  43b6cc:	cmp	w0, #0x20
  43b6d0:	b.eq	43b69c <argp_parse@@Base+0x77b4>  // b.none
  43b6d4:	sub	w2, w0, #0x30
  43b6d8:	cmp	w2, #0x9
  43b6dc:	b.hi	43b630 <argp_parse@@Base+0x7748>  // b.pmore
  43b6e0:	mov	x4, x1
  43b6e4:	mov	x3, #0x0                   	// #0
  43b6e8:	mov	w8, #0x30                  	// #48
  43b6ec:	mov	x9, #0xa                   	// #10
  43b6f0:	cmn	w5, #0x1
  43b6f4:	sub	w0, w8, w0
  43b6f8:	csel	w0, w0, w2, eq  // eq = none
  43b6fc:	sxtw	x0, w0
  43b700:	adds	x7, x3, x0
  43b704:	b.vs	43ba08 <argp_parse@@Base+0x7b20>
  43b708:	ldrb	w0, [x4, #1]
  43b70c:	add	x6, x4, #0x1
  43b710:	sub	w2, w0, #0x30
  43b714:	cmp	w2, #0x9
  43b718:	b.ls	43b84c <argp_parse@@Base+0x7964>  // b.plast
  43b71c:	and	w0, w0, #0xfffffffd
  43b720:	and	w0, w0, #0xff
  43b724:	cmp	w0, #0x2c
  43b728:	b.ne	43b864 <argp_parse@@Base+0x797c>  // b.any
  43b72c:	ldrb	w0, [x6, #1]
  43b730:	sub	w0, w0, #0x30
  43b734:	cmp	w0, #0x9
  43b738:	b.hi	43b864 <argp_parse@@Base+0x797c>  // b.pmore
  43b73c:	ldrb	w3, [x4, #3]
  43b740:	add	x4, x4, #0x3
  43b744:	mov	w2, #0x8                   	// #8
  43b748:	sub	w1, w3, #0x30
  43b74c:	nop
  43b750:	add	w0, w0, w0, lsl #2
  43b754:	cmp	w1, #0x9
  43b758:	mov	w6, w1
  43b75c:	lsl	w0, w0, #1
  43b760:	b.hi	43b778 <argp_parse@@Base+0x7890>  // b.pmore
  43b764:	ldrb	w3, [x4, #1]
  43b768:	add	w0, w0, w1
  43b76c:	add	x4, x4, #0x1
  43b770:	sub	w1, w3, #0x30
  43b774:	mov	w6, w1
  43b778:	subs	w2, w2, #0x1
  43b77c:	b.ne	43b750 <argp_parse@@Base+0x7868>  // b.any
  43b780:	cmn	w5, #0x1
  43b784:	b.eq	43b8e8 <argp_parse@@Base+0x7a00>  // b.none
  43b788:	cmp	w6, #0x9
  43b78c:	b.hi	43b7a0 <argp_parse@@Base+0x78b8>  // b.pmore
  43b790:	ldrb	w1, [x4, #1]!
  43b794:	sub	w1, w1, #0x30
  43b798:	cmp	w1, #0x9
  43b79c:	b.ls	43b790 <argp_parse@@Base+0x78a8>  // b.plast
  43b7a0:	cmp	w5, #0x0
  43b7a4:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  43b7a8:	b.ne	43b89c <argp_parse@@Base+0x79b4>  // b.any
  43b7ac:	cmp	w5, #0x0
  43b7b0:	sxtw	x0, w0
  43b7b4:	mov	w2, #0x16                  	// #22
  43b7b8:	mov	w1, #0x15                  	// #21
  43b7bc:	csel	w2, w2, w1, eq  // eq = none
  43b7c0:	mov	w24, #0x115                 	// #277
  43b7c4:	add	w25, w28, w2
  43b7c8:	str	x4, [x23]
  43b7cc:	str	x0, [sp, #104]
  43b7d0:	mov	w0, #0x114                 	// #276
  43b7d4:	csel	w24, w24, w0, eq  // eq = none
  43b7d8:	str	x7, [sp, #272]
  43b7dc:	b	43b294 <argp_parse@@Base+0x73ac>
  43b7e0:	add	x1, x1, #0x1
  43b7e4:	str	x1, [x23]
  43b7e8:	ldrb	w0, [x1]
  43b7ec:	b	43b630 <argp_parse@@Base+0x7748>
  43b7f0:	cbz	w3, 43b694 <argp_parse@@Base+0x77ac>
  43b7f4:	cmp	w0, #0x5a
  43b7f8:	b.ls	43b984 <argp_parse@@Base+0x7a9c>  // b.plast
  43b7fc:	sub	w2, w0, #0x61
  43b800:	and	w2, w2, #0xff
  43b804:	cmp	w2, #0x19
  43b808:	b.hi	43b640 <argp_parse@@Base+0x7758>  // b.pmore
  43b80c:	add	x2, sp, #0xd0
  43b810:	add	x1, x1, #0x1
  43b814:	add	x5, x2, #0x13
  43b818:	cmp	x2, x5
  43b81c:	b.cs	43b824 <argp_parse@@Base+0x793c>  // b.hs, b.nlast
  43b820:	strb	w0, [x2], #1
  43b824:	str	x1, [x23]
  43b828:	ldrb	w0, [x1]
  43b82c:	cmp	w0, #0x5a
  43b830:	b.hi	43b910 <argp_parse@@Base+0x7a28>  // b.pmore
  43b834:	cmp	w0, #0x40
  43b838:	b.hi	43b844 <argp_parse@@Base+0x795c>  // b.pmore
  43b83c:	cmp	w0, #0x2e
  43b840:	b.ne	43b920 <argp_parse@@Base+0x7a38>  // b.any
  43b844:	add	x1, x1, #0x1
  43b848:	b	43b818 <argp_parse@@Base+0x7930>
  43b84c:	mul	x3, x7, x9
  43b850:	smulh	x7, x7, x9
  43b854:	cmp	x7, x3, asr #63
  43b858:	b.ne	43ba08 <argp_parse@@Base+0x7b20>  // b.any
  43b85c:	mov	x4, x6
  43b860:	b	43b6f0 <argp_parse@@Base+0x7808>
  43b864:	cmp	w5, #0x0
  43b868:	mov	w0, #0x14                  	// #20
  43b86c:	mov	w2, #0x13                  	// #19
  43b870:	csel	w2, w2, w0, ne  // ne = any
  43b874:	sub	x0, x6, x1
  43b878:	mov	w24, #0x112                 	// #274
  43b87c:	mov	w1, #0x113                 	// #275
  43b880:	add	w25, w28, w2
  43b884:	csel	w24, w24, w1, ne  // ne = any
  43b888:	str	x6, [x23]
  43b88c:	stp	x7, x0, [sp, #104]
  43b890:	lsr	w0, w5, #31
  43b894:	strb	w0, [sp, #272]
  43b898:	b	43b294 <argp_parse@@Base+0x73ac>
  43b89c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  43b8a0:	cmp	x7, x1
  43b8a4:	b.eq	43ba08 <argp_parse@@Base+0x7b20>  // b.none
  43b8a8:	mov	w1, #0xca00                	// #51712
  43b8ac:	sub	x3, x7, #0x1
  43b8b0:	movk	w1, #0x3b9a, lsl #16
  43b8b4:	sub	w0, w1, w0
  43b8b8:	mov	w2, #0x15                  	// #21
  43b8bc:	mov	w24, #0x114                 	// #276
  43b8c0:	sxtw	x0, w0
  43b8c4:	add	w25, w28, w2
  43b8c8:	str	x4, [x23]
  43b8cc:	str	x0, [sp, #104]
  43b8d0:	str	x3, [sp, #272]
  43b8d4:	b	43b294 <argp_parse@@Base+0x73ac>
  43b8d8:	cmp	w3, #0x30
  43b8dc:	b.ne	43ce08 <argp_parse@@Base+0x8f20>  // b.any
  43b8e0:	ldrb	w3, [x4, #1]!
  43b8e4:	sub	w1, w3, #0x30
  43b8e8:	cmp	w1, #0x9
  43b8ec:	b.ls	43b8d8 <argp_parse@@Base+0x79f0>  // b.plast
  43b8f0:	cbnz	w0, 43b89c <argp_parse@@Base+0x79b4>
  43b8f4:	mov	w2, #0x15                  	// #21
  43b8f8:	mov	w24, #0x114                 	// #276
  43b8fc:	add	w25, w28, w2
  43b900:	str	x4, [x23]
  43b904:	str	xzr, [sp, #104]
  43b908:	str	x7, [sp, #272]
  43b90c:	b	43b294 <argp_parse@@Base+0x73ac>
  43b910:	sub	w3, w0, #0x61
  43b914:	and	w3, w3, #0xff
  43b918:	cmp	w3, #0x19
  43b91c:	b.ls	43b844 <argp_parse@@Base+0x795c>  // b.plast
  43b920:	strb	wzr, [x2]
  43b924:	add	x2, sp, #0xd0
  43b928:	ldrb	w0, [sp, #208]
  43b92c:	cbz	w0, 43b950 <argp_parse@@Base+0x7a68>
  43b930:	sub	w3, w0, #0x61
  43b934:	sub	w1, w0, #0x20
  43b938:	cmp	w3, #0x1a
  43b93c:	and	w1, w1, #0xff
  43b940:	csel	w0, w1, w0, cc  // cc = lo, ul, last
  43b944:	strb	w0, [x2]
  43b948:	ldrb	w0, [x2, #1]!
  43b94c:	cbnz	w0, 43b930 <argp_parse@@Base+0x7a48>
  43b950:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43b954:	add	x24, x22, #0x400
  43b958:	add	x1, x1, #0xc00
  43b95c:	b	43b968 <argp_parse@@Base+0x7a80>
  43b960:	ldr	x1, [x24, #16]!
  43b964:	cbz	x1, 43ca50 <argp_parse@@Base+0x8b68>
  43b968:	add	x0, sp, #0xd0
  43b96c:	bl	404710 <strcmp@plt>
  43b970:	cbnz	w0, 43b960 <argp_parse@@Base+0x7a78>
  43b974:	ldrsw	x0, [x24, #12]
  43b978:	ldr	w24, [x24, #8]
  43b97c:	str	x0, [sp, #272]
  43b980:	b	43b27c <argp_parse@@Base+0x7394>
  43b984:	cmp	w0, #0x40
  43b988:	b.hi	43b80c <argp_parse@@Base+0x7924>  // b.pmore
  43b98c:	cmp	w0, #0x28
  43b990:	b.ne	43b640 <argp_parse@@Base+0x7758>  // b.any
  43b994:	mov	x2, #0x0                   	// #0
  43b998:	mov	x3, x1
  43b99c:	add	x1, x1, #0x1
  43b9a0:	str	x1, [x23]
  43b9a4:	ldurb	w0, [x1, #-1]
  43b9a8:	cbz	w0, 43b5a4 <argp_parse@@Base+0x76bc>
  43b9ac:	cmp	w0, #0x28
  43b9b0:	b.eq	43b9cc <argp_parse@@Base+0x7ae4>  // b.none
  43b9b4:	cmp	w0, #0x29
  43b9b8:	cset	x0, eq  // eq = none
  43b9bc:	sub	x2, x2, x0
  43b9c0:	cbnz	x2, 43b998 <argp_parse@@Base+0x7ab0>
  43b9c4:	ldrb	w0, [x3, #1]
  43b9c8:	b	43b630 <argp_parse@@Base+0x7748>
  43b9cc:	add	x2, x2, #0x1
  43b9d0:	cbnz	x2, 43b998 <argp_parse@@Base+0x7ab0>
  43b9d4:	b	43b9c4 <argp_parse@@Base+0x7adc>
  43b9d8:	ldur	w8, [x20, #-48]
  43b9dc:	sub	x19, x19, #0x4
  43b9e0:	sub	x27, x20, #0x70
  43b9e4:	mov	w2, #0xffffffa3            	// #-93
  43b9e8:	mov	w9, #0x11                  	// #17
  43b9ec:	mov	x5, #0x0                   	// #0
  43b9f0:	mov	x6, #0x0                   	// #0
  43b9f4:	mov	x7, #0x0                   	// #0
  43b9f8:	mov	x3, #0x0                   	// #0
  43b9fc:	mov	x28, #0x0                   	// #0
  43ba00:	ldur	x4, [x20, #-56]
  43ba04:	b	43b308 <argp_parse@@Base+0x7420>
  43ba08:	mov	w2, #0x2                   	// #2
  43ba0c:	mov	w24, #0x3f                  	// #63
  43ba10:	add	w25, w28, w2
  43ba14:	b	43b294 <argp_parse@@Base+0x73ac>
  43ba18:	ldur	x2, [x20, #-56]
  43ba1c:	mov	x27, x20
  43ba20:	sub	x19, x19, #0x4
  43ba24:	ldr	x1, [x27], #-112
  43ba28:	mov	w0, #0x1                   	// #1
  43ba2c:	mov	w9, #0xd                   	// #13
  43ba30:	str	x2, [x23, #8]
  43ba34:	mov	w2, #0xffffffa3            	// #-93
  43ba38:	str	w1, [x23, #16]
  43ba3c:	strb	w0, [x23, #224]
  43ba40:	b	43b308 <argp_parse@@Base+0x7420>
  43ba44:	ldur	x0, [x20, #-56]
  43ba48:	sub	x19, x19, #0x4
  43ba4c:	sub	x27, x20, #0x70
  43ba50:	mov	w2, #0xffffffa3            	// #-93
  43ba54:	mov	w9, #0xd                   	// #13
  43ba58:	str	xzr, [x23, #8]
  43ba5c:	str	w0, [x23, #16]
  43ba60:	b	43b308 <argp_parse@@Base+0x7420>
  43ba64:	mov	x27, x20
  43ba68:	sub	x19, x19, #0x4
  43ba6c:	ldur	x0, [x20, #-48]
  43ba70:	mov	w2, #0xffffffa3            	// #-93
  43ba74:	ldr	x1, [x27], #-112
  43ba78:	mov	w9, #0xe                   	// #14
  43ba7c:	stp	x1, x0, [x23, #56]
  43ba80:	b	43b308 <argp_parse@@Base+0x7420>
  43ba84:	ldur	x0, [x20, #-168]
  43ba88:	sub	x19, x19, #0x8
  43ba8c:	ldur	x9, [x20, #-104]
  43ba90:	sub	x27, x20, #0xe0
  43ba94:	str	x0, [x23, #56]
  43ba98:	ldp	x0, x1, [x20]
  43ba9c:	stp	x0, x1, [x23, #32]
  43baa0:	mov	w2, #0xffffffa3            	// #-93
  43baa4:	ldr	x0, [x20, #16]
  43baa8:	str	x0, [x23, #48]
  43baac:	str	x9, [x23, #64]
  43bab0:	mov	w9, #0xe                   	// #14
  43bab4:	b	43b308 <argp_parse@@Base+0x7420>
  43bab8:	ldur	x1, [x20, #-56]
  43babc:	sub	x19, x19, #0x4
  43bac0:	ldr	x0, [x20, #8]
  43bac4:	sub	x27, x20, #0x70
  43bac8:	mov	w2, #0xffffffa3            	// #-93
  43bacc:	mov	w9, #0xe                   	// #14
  43bad0:	stp	x1, x0, [x23, #56]
  43bad4:	b	43b308 <argp_parse@@Base+0x7420>
  43bad8:	ldur	x0, [x20, #-48]
  43badc:	ldur	x1, [x20, #-112]
  43bae0:	negs	x0, x0
  43bae4:	stp	x1, x0, [x23, #56]
  43bae8:	b.vs	43b580 <argp_parse@@Base+0x7698>
  43baec:	ldr	x0, [x20, #8]
  43baf0:	negs	x0, x0
  43baf4:	str	x0, [x23, #40]
  43baf8:	b.vs	43b580 <argp_parse@@Base+0x7698>
  43bafc:	ldr	x0, [x20, #16]
  43bb00:	sub	x19, x19, #0x6
  43bb04:	sub	x27, x20, #0xa8
  43bb08:	mov	w2, #0xffffffa3            	// #-93
  43bb0c:	mov	w9, #0xe                   	// #14
  43bb10:	str	x0, [x23, #48]
  43bb14:	b	43b308 <argp_parse@@Base+0x7420>
  43bb18:	ldr	x0, [x20, #8]
  43bb1c:	ldur	x1, [x20, #-104]
  43bb20:	negs	x0, x0
  43bb24:	str	x0, [x23, #40]
  43bb28:	ldur	x0, [x20, #-56]
  43bb2c:	str	x0, [x23, #56]
  43bb30:	str	x1, [x23, #64]
  43bb34:	b.vc	43bafc <argp_parse@@Base+0x7c14>
  43bb38:	b	43b580 <argp_parse@@Base+0x7698>
  43bb3c:	ldur	x9, [x20, #-208]
  43bb40:	sub	x27, x20, #0xe0
  43bb44:	ldrb	w0, [x23, #217]
  43bb48:	cmp	x9, #0x3
  43bb4c:	b.le	43cba4 <argp_parse@@Base+0x8cbc>
  43bb50:	cbnz	w0, 43ccc4 <argp_parse@@Base+0x8ddc>
  43bb54:	ldur	x1, [x20, #-104]
  43bb58:	sub	x19, x19, #0xa
  43bb5c:	ldr	x0, [x27, #16]
  43bb60:	stp	x0, x1, [x23, #48]
  43bb64:	mov	w2, #0xffffffa3            	// #-93
  43bb68:	ldp	x10, x11, [x27]
  43bb6c:	mov	w9, #0xe                   	// #14
  43bb70:	ldr	x0, [x20, #8]
  43bb74:	sub	x27, x20, #0x118
  43bb78:	stp	x10, x11, [x23, #32]
  43bb7c:	str	x0, [x23, #64]
  43bb80:	b	43b308 <argp_parse@@Base+0x7420>
  43bb84:	ldur	x1, [x20, #-104]
  43bb88:	sub	x19, x19, #0x6
  43bb8c:	ldr	x0, [x20, #8]
  43bb90:	sub	x27, x20, #0xa8
  43bb94:	mov	w2, #0xffffffa3            	// #-93
  43bb98:	mov	w9, #0xe                   	// #14
  43bb9c:	stp	x1, x0, [x23, #56]
  43bba0:	b	43b308 <argp_parse@@Base+0x7420>
  43bba4:	mov	x27, x20
  43bba8:	sub	x19, x19, #0x4
  43bbac:	ldur	x2, [x20, #-48]
  43bbb0:	b	43ba24 <argp_parse@@Base+0x7b3c>
  43bbb4:	mov	w0, #0x6270                	// #25200
  43bbb8:	sub	x27, x20, #0x38
  43bbbc:	sub	x19, x19, #0x2
  43bbc0:	mov	w2, #0xffffffa3            	// #-93
  43bbc4:	mov	w9, #0xc                   	// #12
  43bbc8:	str	w0, [x23, #24]
  43bbcc:	b	43b308 <argp_parse@@Base+0x7420>
  43bbd0:	mov	x27, x20
  43bbd4:	sub	x19, x19, #0x2
  43bbd8:	mov	w2, #0xffffffa3            	// #-93
  43bbdc:	mov	w9, #0xc                   	// #12
  43bbe0:	ldr	x0, [x27], #-56
  43bbe4:	str	w0, [x23, #24]
  43bbe8:	b	43b308 <argp_parse@@Base+0x7420>
  43bbec:	ldr	x0, [x23, #192]
  43bbf0:	mov	w1, #0x1                   	// #1
  43bbf4:	sub	x27, x20, #0x70
  43bbf8:	sub	x19, x19, #0x4
  43bbfc:	add	x0, x0, #0x1
  43bc00:	mov	w2, #0xffffffa3            	// #-93
  43bc04:	mov	w9, #0xb                   	// #11
  43bc08:	str	w1, [x23, #20]
  43bc0c:	str	x0, [x23, #192]
  43bc10:	b	43b308 <argp_parse@@Base+0x7420>
  43bc14:	mov	x27, x20
  43bc18:	sub	x19, x19, #0x2
  43bc1c:	mov	w2, #0xffffffa3            	// #-93
  43bc20:	mov	w9, #0xb                   	// #11
  43bc24:	ldr	x0, [x27], #-56
  43bc28:	str	w0, [x23, #20]
  43bc2c:	b	43b308 <argp_parse@@Base+0x7420>
  43bc30:	ldr	x0, [x23, #208]
  43bc34:	ldur	x1, [x20, #-40]
  43bc38:	add	x0, x0, #0x1
  43bc3c:	str	x0, [x23, #208]
  43bc40:	cmp	x1, #0x2
  43bc44:	ldur	x1, [x20, #-48]
  43bc48:	ldr	x2, [x20]
  43bc4c:	b.gt	43cbd8 <argp_parse@@Base+0x8cf0>
  43bc50:	tbnz	x2, #63, 43cd84 <argp_parse@@Base+0x8e9c>
  43bc54:	mov	x9, #0x3c                  	// #60
  43bc58:	ldurb	w10, [x20, #-56]
  43bc5c:	mul	x0, x1, x9
  43bc60:	smulh	x1, x1, x9
  43bc64:	cmp	x1, x0, asr #63
  43bc68:	cset	w1, ne  // ne = any
  43bc6c:	cbz	w10, 43ccb8 <argp_parse@@Base+0x8dd0>
  43bc70:	subs	x0, x0, x2
  43bc74:	cset	w2, vs
  43bc78:	orr	w1, w1, w2
  43bc7c:	cbnz	w1, 43b580 <argp_parse@@Base+0x7698>
  43bc80:	add	x1, x0, #0x5a0
  43bc84:	cmp	x1, #0xb40
  43bc88:	b.hi	43b580 <argp_parse@@Base+0x7698>  // b.pmore
  43bc8c:	lsl	w1, w0, #4
  43bc90:	sub	x27, x20, #0x70
  43bc94:	sub	w0, w1, w0
  43bc98:	sub	x19, x19, #0x4
  43bc9c:	mov	w2, #0xffffffe5            	// #-27
  43bca0:	mov	w9, #0xa                   	// #10
  43bca4:	lsl	w0, w0, #2
  43bca8:	str	w0, [x23, #24]
  43bcac:	b	43b308 <argp_parse@@Base+0x7420>
  43bcb0:	sub	x1, x20, #0x118
  43bcb4:	ldursw	x0, [x20, #-48]
  43bcb8:	ldur	x2, [x20, #-160]
  43bcbc:	sub	x19, x19, #0xc
  43bcc0:	ldr	x1, [x1, #8]
  43bcc4:	stp	x1, x2, [x23, #72]
  43bcc8:	mov	w2, #0x2                   	// #2
  43bccc:	ldur	x1, [x20, #-56]
  43bcd0:	sub	x27, x20, #0x150
  43bcd4:	mov	w9, #0x8                   	// #8
  43bcd8:	str	w2, [x23, #28]
  43bcdc:	mov	w2, #0x14                  	// #20
  43bce0:	str	x1, [x23, #88]
  43bce4:	str	x0, [x23, #96]
  43bce8:	b	43b308 <argp_parse@@Base+0x7420>
  43bcec:	ldur	x1, [x20, #-160]
  43bcf0:	sub	x19, x19, #0x8
  43bcf4:	ldur	x0, [x20, #-48]
  43bcf8:	sub	x27, x20, #0xe0
  43bcfc:	mov	w2, #0x14                  	// #20
  43bd00:	mov	w9, #0x8                   	// #8
  43bd04:	stp	x1, x0, [x23, #72]
  43bd08:	mov	w1, #0x2                   	// #2
  43bd0c:	str	w1, [x23, #28]
  43bd10:	stp	xzr, xzr, [x23, #88]
  43bd14:	b	43b308 <argp_parse@@Base+0x7420>
  43bd18:	ldur	x0, [x20, #-48]
  43bd1c:	mov	w1, #0x2                   	// #2
  43bd20:	sub	x19, x19, #0x4
  43bd24:	sub	x27, x20, #0x70
  43bd28:	mov	w2, #0x14                  	// #20
  43bd2c:	mov	w9, #0x8                   	// #8
  43bd30:	str	w1, [x23, #28]
  43bd34:	stp	x0, xzr, [x23, #72]
  43bd38:	stp	xzr, xzr, [x23, #88]
  43bd3c:	b	43b308 <argp_parse@@Base+0x7420>
  43bd40:	sub	x1, x20, #0x118
  43bd44:	ldursw	x0, [x20, #-48]
  43bd48:	ldur	x2, [x20, #-160]
  43bd4c:	sub	x19, x19, #0xc
  43bd50:	ldr	x1, [x1, #8]
  43bd54:	stp	x1, x2, [x23, #72]
  43bd58:	sub	x27, x20, #0x150
  43bd5c:	ldr	x2, [x20]
  43bd60:	mov	w9, #0x7                   	// #7
  43bd64:	ldur	x1, [x20, #-56]
  43bd68:	str	w2, [x23, #28]
  43bd6c:	mov	w2, #0xffffffa3            	// #-93
  43bd70:	str	x1, [x23, #88]
  43bd74:	str	x0, [x23, #96]
  43bd78:	b	43b308 <argp_parse@@Base+0x7420>
  43bd7c:	mov	x27, x20
  43bd80:	sub	x19, x19, #0x8
  43bd84:	ldur	x0, [x20, #-160]
  43bd88:	str	x0, [x23, #72]
  43bd8c:	ldr	x0, [x27], #-224
  43bd90:	str	w0, [x23, #28]
  43bd94:	ldur	x0, [x20, #-48]
  43bd98:	mov	w2, #0xffffffa3            	// #-93
  43bd9c:	mov	w9, #0x7                   	// #7
  43bda0:	str	x0, [x23, #80]
  43bda4:	stp	xzr, xzr, [x23, #88]
  43bda8:	b	43b308 <argp_parse@@Base+0x7420>
  43bdac:	sub	x19, x19, #0x4
  43bdb0:	sub	x27, x20, #0x70
  43bdb4:	mov	w2, #0xffffffa3            	// #-93
  43bdb8:	mov	w9, #0x11                  	// #17
  43bdbc:	mov	w8, #0x0                   	// #0
  43bdc0:	mov	x5, #0x0                   	// #0
  43bdc4:	mov	x6, #0x0                   	// #0
  43bdc8:	mov	x7, #0x0                   	// #0
  43bdcc:	mov	x3, #0x0                   	// #0
  43bdd0:	mov	x28, #0x0                   	// #0
  43bdd4:	ldur	x4, [x20, #-48]
  43bdd8:	b	43b308 <argp_parse@@Base+0x7420>
  43bddc:	sub	x19, x19, #0x4
  43bde0:	sub	x27, x20, #0x70
  43bde4:	mov	w2, #0xffffffa3            	// #-93
  43bde8:	mov	w9, #0x11                  	// #17
  43bdec:	mov	w8, #0x0                   	// #0
  43bdf0:	mov	x5, #0x0                   	// #0
  43bdf4:	mov	x6, #0x0                   	// #0
  43bdf8:	mov	x7, #0x0                   	// #0
  43bdfc:	mov	x3, #0x0                   	// #0
  43be00:	mov	x28, #0x0                   	// #0
  43be04:	ldur	x4, [x20, #-56]
  43be08:	b	43b308 <argp_parse@@Base+0x7420>
  43be0c:	sub	x27, x20, #0x38
  43be10:	sub	x19, x19, #0x2
  43be14:	mov	w2, #0xffffffa3            	// #-93
  43be18:	mov	w9, #0x11                  	// #17
  43be1c:	mov	w8, #0x0                   	// #0
  43be20:	mov	x4, #0x0                   	// #0
  43be24:	mov	x5, #0x1                   	// #1
  43be28:	mov	x6, #0x0                   	// #0
  43be2c:	mov	x7, #0x0                   	// #0
  43be30:	mov	x3, #0x0                   	// #0
  43be34:	mov	x28, #0x0                   	// #0
  43be38:	b	43b308 <argp_parse@@Base+0x7420>
  43be3c:	sub	x19, x19, #0x4
  43be40:	sub	x27, x20, #0x70
  43be44:	mov	w2, #0xffffffa3            	// #-93
  43be48:	mov	w9, #0x11                  	// #17
  43be4c:	mov	w8, #0x0                   	// #0
  43be50:	mov	x4, #0x0                   	// #0
  43be54:	mov	x6, #0x0                   	// #0
  43be58:	mov	x7, #0x0                   	// #0
  43be5c:	mov	x3, #0x0                   	// #0
  43be60:	mov	x28, #0x0                   	// #0
  43be64:	ldur	x5, [x20, #-48]
  43be68:	b	43b308 <argp_parse@@Base+0x7420>
  43be6c:	ldp	x11, x0, [x23, #136]
  43be70:	mov	w1, #0x6270                	// #25200
  43be74:	ldr	w10, [x23, #152]
  43be78:	ldr	w9, [x20, #48]
  43be7c:	ldr	x2, [x20, #40]
  43be80:	str	w1, [x23, #24]
  43be84:	ldr	x1, [x20, #32]
  43be88:	adds	w9, w10, w9
  43be8c:	cset	w10, vs
  43be90:	adds	x0, x0, x2
  43be94:	str	x0, [x23, #144]
  43be98:	cset	x0, vs
  43be9c:	adds	x12, x11, x1
  43bea0:	orr	w10, w10, w0
  43bea4:	ldr	x2, [x20, #24]
  43bea8:	cset	x13, vs
  43beac:	ldr	x1, [x23, #128]
  43beb0:	str	w9, [x23, #152]
  43beb4:	ldr	x11, [x20, #16]
  43beb8:	adds	x2, x1, x2
  43bebc:	ldr	x1, [x23, #120]
  43bec0:	cset	x0, vs
  43bec4:	orr	x0, x13, x0
  43bec8:	stp	x3, x6, [sp, #120]
  43becc:	adds	x1, x1, x11
  43bed0:	stp	x1, x2, [x23, #120]
  43bed4:	cset	x11, vs
  43bed8:	ldr	x2, [x20, #8]
  43bedc:	str	x12, [x23, #136]
  43bee0:	ldr	x1, [x23, #112]
  43bee4:	stp	x7, x4, [sp, #136]
  43bee8:	adds	x1, x1, x2
  43beec:	str	x1, [x23, #112]
  43bef0:	ldr	x2, [x20]
  43bef4:	cset	x9, vs
  43bef8:	ldr	x1, [x23, #104]
  43befc:	orr	x9, x11, x9
  43bf00:	orr	w0, w0, w9
  43bf04:	str	x5, [sp, #152]
  43bf08:	adds	x1, x1, x2
  43bf0c:	str	x1, [x23, #104]
  43bf10:	str	w8, [sp, #164]
  43bf14:	orr	w0, w0, w10
  43bf18:	csinc	w0, w0, wzr, vc
  43bf1c:	cbnz	w0, 43b580 <argp_parse@@Base+0x7698>
  43bf20:	mov	w0, #0x1                   	// #1
  43bf24:	strb	w0, [x23, #161]
  43bf28:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43bf2c:	mov	w2, #0x5                   	// #5
  43bf30:	add	x1, x1, #0xca0
  43bf34:	mov	x0, #0x0                   	// #0
  43bf38:	bl	4049c0 <dcgettext@plt>
  43bf3c:	sub	x19, x19, #0x4
  43bf40:	ldrb	w1, [x23, #217]
  43bf44:	sub	x27, x20, #0x70
  43bf48:	ldr	w8, [sp, #164]
  43bf4c:	ldp	x3, x6, [sp, #120]
  43bf50:	ldp	x7, x4, [sp, #136]
  43bf54:	ldr	x5, [sp, #152]
  43bf58:	cbz	w1, 43cb8c <argp_parse@@Base+0x8ca4>
  43bf5c:	mov	x1, x23
  43bf60:	str	w8, [sp, #164]
  43bf64:	bl	43ab48 <argp_parse@@Base+0x6c60>
  43bf68:	mov	w2, #0xffffffa3            	// #-93
  43bf6c:	mov	w9, #0xc                   	// #12
  43bf70:	ldr	w8, [sp, #164]
  43bf74:	ldp	x3, x6, [sp, #120]
  43bf78:	ldp	x7, x4, [sp, #136]
  43bf7c:	ldr	x5, [sp, #152]
  43bf80:	b	43b308 <argp_parse@@Base+0x7420>
  43bf84:	sub	x19, x19, #0x4
  43bf88:	sub	x27, x20, #0x70
  43bf8c:	mov	w2, #0x3c                  	// #60
  43bf90:	mov	w9, #0x12                  	// #18
  43bf94:	mov	w8, #0x0                   	// #0
  43bf98:	mov	x4, #0x0                   	// #0
  43bf9c:	mov	x5, #0x0                   	// #0
  43bfa0:	mov	x6, #0x0                   	// #0
  43bfa4:	mov	x7, #0x0                   	// #0
  43bfa8:	mov	x3, #0x0                   	// #0
  43bfac:	ldur	x28, [x20, #-48]
  43bfb0:	b	43b308 <argp_parse@@Base+0x7420>
  43bfb4:	sub	x27, x20, #0x38
  43bfb8:	sub	x19, x19, #0x2
  43bfbc:	mov	w2, #0xffffffa3            	// #-93
  43bfc0:	mov	w9, #0x11                  	// #17
  43bfc4:	mov	w8, #0x0                   	// #0
  43bfc8:	mov	x4, #0x1                   	// #1
  43bfcc:	mov	x5, #0x0                   	// #0
  43bfd0:	mov	x6, #0x0                   	// #0
  43bfd4:	mov	x7, #0x0                   	// #0
  43bfd8:	mov	x3, #0x0                   	// #0
  43bfdc:	mov	x28, #0x0                   	// #0
  43bfe0:	b	43b308 <argp_parse@@Base+0x7420>
  43bfe4:	ldr	x0, [x23, #200]
  43bfe8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x12e10>
  43bfec:	add	x1, x1, #0x398
  43bff0:	mov	w2, #0x5                   	// #5
  43bff4:	add	x0, x0, #0x1
  43bff8:	stp	x3, x6, [sp, #120]
  43bffc:	stp	x7, x4, [sp, #136]
  43c000:	str	x5, [sp, #152]
  43c004:	str	w8, [sp, #164]
  43c008:	str	x0, [x23, #200]
  43c00c:	mov	x0, #0x0                   	// #0
  43c010:	bl	4049c0 <dcgettext@plt>
  43c014:	ldrb	w1, [x23, #217]
  43c018:	sub	x27, x20, #0x38
  43c01c:	ldr	w8, [sp, #164]
  43c020:	sub	x19, x19, #0x2
  43c024:	ldp	x3, x6, [sp, #120]
  43c028:	ldp	x7, x4, [sp, #136]
  43c02c:	ldr	x5, [sp, #152]
  43c030:	cbz	w1, 43ca44 <argp_parse@@Base+0x8b5c>
  43c034:	mov	x1, x23
  43c038:	str	w8, [sp, #164]
  43c03c:	bl	43ae98 <argp_parse@@Base+0x6fb0>
  43c040:	mov	w2, #0xffffffa3            	// #-93
  43c044:	mov	w9, #0x4                   	// #4
  43c048:	b	43bf70 <argp_parse@@Base+0x8088>
  43c04c:	ldr	x2, [x23, #168]
  43c050:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43c054:	ldr	x0, [x23, #200]
  43c058:	add	x2, x2, #0x1
  43c05c:	str	x2, [x23, #168]
  43c060:	add	x1, x1, #0xc70
  43c064:	add	x0, x0, #0x1
  43c068:	str	x0, [x23, #200]
  43c06c:	mov	w2, #0x5                   	// #5
  43c070:	mov	x0, #0x0                   	// #0
  43c074:	stp	x3, x6, [sp, #120]
  43c078:	sub	x27, x20, #0x38
  43c07c:	stp	x7, x4, [sp, #136]
  43c080:	str	x5, [sp, #152]
  43c084:	str	w8, [sp, #164]
  43c088:	bl	4049c0 <dcgettext@plt>
  43c08c:	ldrb	w1, [x23, #217]
  43c090:	b	43c01c <argp_parse@@Base+0x8134>
  43c094:	mov	x27, x20
  43c098:	sub	x19, x19, #0x4
  43c09c:	ldur	x0, [x20, #-48]
  43c0a0:	mov	w2, #0xffffffa3            	// #-93
  43c0a4:	ldr	x1, [x27], #-112
  43c0a8:	mov	w9, #0x7                   	// #7
  43c0ac:	str	w1, [x23, #28]
  43c0b0:	stp	x0, xzr, [x23, #72]
  43c0b4:	stp	xzr, xzr, [x23, #88]
  43c0b8:	b	43b308 <argp_parse@@Base+0x7420>
  43c0bc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43c0c0:	add	x1, x1, #0xcb0
  43c0c4:	mov	w2, #0x5                   	// #5
  43c0c8:	stp	x3, x6, [sp, #120]
  43c0cc:	stp	x7, x4, [sp, #136]
  43c0d0:	str	x5, [sp, #152]
  43c0d4:	str	w8, [sp, #164]
  43c0d8:	mov	x0, #0x0                   	// #0
  43c0dc:	bl	4049c0 <dcgettext@plt>
  43c0e0:	ldrb	w1, [x23, #217]
  43c0e4:	sub	x27, x20, #0x38
  43c0e8:	ldr	w8, [sp, #164]
  43c0ec:	sub	x19, x19, #0x2
  43c0f0:	ldp	x3, x6, [sp, #120]
  43c0f4:	ldp	x7, x4, [sp, #136]
  43c0f8:	ldr	x5, [sp, #152]
  43c0fc:	cbz	w1, 43ca44 <argp_parse@@Base+0x8b5c>
  43c100:	mov	x1, x23
  43c104:	str	w8, [sp, #164]
  43c108:	bl	43ab48 <argp_parse@@Base+0x6c60>
  43c10c:	b	43c040 <argp_parse@@Base+0x8158>
  43c110:	sub	x19, x19, #0x4
  43c114:	sub	x27, x20, #0x70
  43c118:	mov	w2, #0x2b                  	// #43
  43c11c:	mov	w9, #0x19                  	// #25
  43c120:	ldr	x28, [x20, #8]
  43c124:	b	43b308 <argp_parse@@Base+0x7420>
  43c128:	mov	x27, x20
  43c12c:	mov	w0, #0x1                   	// #1
  43c130:	strb	w0, [x23, #160]
  43c134:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43c138:	mov	w2, #0x5                   	// #5
  43c13c:	add	x1, x1, #0xc58
  43c140:	ldp	x10, x11, [x27], #-112
  43c144:	stp	x10, x11, [x23, #88]
  43c148:	mov	x0, #0x0                   	// #0
  43c14c:	stp	x3, x6, [sp, #120]
  43c150:	sub	x19, x19, #0x4
  43c154:	stp	x7, x4, [sp, #136]
  43c158:	str	x5, [sp, #152]
  43c15c:	str	w8, [sp, #164]
  43c160:	bl	4049c0 <dcgettext@plt>
  43c164:	ldrb	w1, [x23, #217]
  43c168:	ldr	w8, [sp, #164]
  43c16c:	ldp	x3, x6, [sp, #120]
  43c170:	ldp	x7, x4, [sp, #136]
  43c174:	ldr	x5, [sp, #152]
  43c178:	cbz	w1, 43cb98 <argp_parse@@Base+0x8cb0>
  43c17c:	mov	x1, x23
  43c180:	str	w8, [sp, #164]
  43c184:	bl	43ae98 <argp_parse@@Base+0x6fb0>
  43c188:	mov	w2, #0xffffffa3            	// #-93
  43c18c:	mov	w9, #0x2                   	// #2
  43c190:	b	43bf70 <argp_parse@@Base+0x8088>
  43c194:	ldr	x0, [x23, #176]
  43c198:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43c19c:	mov	w2, #0x5                   	// #5
  43c1a0:	add	x1, x1, #0xc98
  43c1a4:	add	x0, x0, #0x1
  43c1a8:	str	x0, [x23, #176]
  43c1ac:	mov	x0, #0x0                   	// #0
  43c1b0:	stp	x3, x6, [sp, #120]
  43c1b4:	sub	x27, x20, #0x38
  43c1b8:	stp	x7, x4, [sp, #136]
  43c1bc:	str	x5, [sp, #152]
  43c1c0:	str	w8, [sp, #164]
  43c1c4:	bl	4049c0 <dcgettext@plt>
  43c1c8:	ldrb	w1, [x23, #217]
  43c1cc:	b	43c01c <argp_parse@@Base+0x8134>
  43c1d0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  43c1d4:	mov	w2, #0x5                   	// #5
  43c1d8:	add	x1, x1, #0xdf8
  43c1dc:	mov	x0, #0x0                   	// #0
  43c1e0:	stp	x3, x6, [sp, #120]
  43c1e4:	sub	x27, x20, #0x38
  43c1e8:	stp	x7, x4, [sp, #136]
  43c1ec:	str	x5, [sp, #152]
  43c1f0:	str	w8, [sp, #164]
  43c1f4:	bl	4049c0 <dcgettext@plt>
  43c1f8:	ldrb	w1, [x23, #217]
  43c1fc:	b	43c01c <argp_parse@@Base+0x8134>
  43c200:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43c204:	mov	w2, #0x5                   	// #5
  43c208:	add	x1, x1, #0xca0
  43c20c:	stp	x3, x6, [sp, #120]
  43c210:	stp	x7, x4, [sp, #136]
  43c214:	str	x5, [sp, #152]
  43c218:	str	w8, [sp, #164]
  43c21c:	b	43c0d8 <argp_parse@@Base+0x81f0>
  43c220:	ldr	x0, [x23, #208]
  43c224:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43c228:	mov	w2, #0x5                   	// #5
  43c22c:	add	x1, x1, #0xc90
  43c230:	add	x0, x0, #0x1
  43c234:	stp	x3, x6, [sp, #120]
  43c238:	stp	x7, x4, [sp, #136]
  43c23c:	str	x5, [sp, #152]
  43c240:	str	w8, [sp, #164]
  43c244:	str	x0, [x23, #208]
  43c248:	b	43c00c <argp_parse@@Base+0x8124>
  43c24c:	ldr	x0, [x23, #184]
  43c250:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43c254:	mov	w2, #0x5                   	// #5
  43c258:	add	x1, x1, #0xc80
  43c25c:	add	x0, x0, #0x1
  43c260:	stp	x3, x6, [sp, #120]
  43c264:	stp	x7, x4, [sp, #136]
  43c268:	str	x5, [sp, #152]
  43c26c:	str	w8, [sp, #164]
  43c270:	str	x0, [x23, #184]
  43c274:	b	43c00c <argp_parse@@Base+0x8124>
  43c278:	ldr	x0, [x23, #168]
  43c27c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x14e10>
  43c280:	mov	w2, #0x5                   	// #5
  43c284:	add	x1, x1, #0xd50
  43c288:	add	x0, x0, #0x1
  43c28c:	stp	x3, x6, [sp, #120]
  43c290:	stp	x7, x4, [sp, #136]
  43c294:	str	x5, [sp, #152]
  43c298:	str	w8, [sp, #164]
  43c29c:	str	x0, [x23, #168]
  43c2a0:	b	43c00c <argp_parse@@Base+0x8124>
  43c2a4:	sub	x19, x19, #0x4
  43c2a8:	sub	x27, x20, #0x70
  43c2ac:	mov	w2, #0xffffffa3            	// #-93
  43c2b0:	mov	w9, #0x11                  	// #17
  43c2b4:	mov	w8, #0x0                   	// #0
  43c2b8:	mov	x4, #0x0                   	// #0
  43c2bc:	mov	x6, #0x0                   	// #0
  43c2c0:	mov	x7, #0x0                   	// #0
  43c2c4:	mov	x3, #0x0                   	// #0
  43c2c8:	mov	x28, #0x0                   	// #0
  43c2cc:	ldur	x5, [x20, #-56]
  43c2d0:	b	43b308 <argp_parse@@Base+0x7420>
  43c2d4:	sub	x27, x20, #0x38
  43c2d8:	sub	x19, x19, #0x2
  43c2dc:	mov	w2, #0xffffffa3            	// #-93
  43c2e0:	mov	w9, #0x11                  	// #17
  43c2e4:	mov	w8, #0x0                   	// #0
  43c2e8:	mov	x4, #0x0                   	// #0
  43c2ec:	mov	x5, #0x0                   	// #0
  43c2f0:	mov	x6, #0x1                   	// #1
  43c2f4:	mov	x7, #0x0                   	// #0
  43c2f8:	mov	x3, #0x0                   	// #0
  43c2fc:	mov	x28, #0x0                   	// #0
  43c300:	b	43b308 <argp_parse@@Base+0x7420>
  43c304:	sub	x19, x19, #0x4
  43c308:	sub	x27, x20, #0x70
  43c30c:	mov	w2, #0xffffffa3            	// #-93
  43c310:	mov	w9, #0x11                  	// #17
  43c314:	mov	w8, #0x0                   	// #0
  43c318:	mov	x4, #0x0                   	// #0
  43c31c:	mov	x5, #0x0                   	// #0
  43c320:	mov	x7, #0x0                   	// #0
  43c324:	mov	x3, #0x0                   	// #0
  43c328:	mov	x28, #0x0                   	// #0
  43c32c:	ldur	x6, [x20, #-48]
  43c330:	b	43b308 <argp_parse@@Base+0x7420>
  43c334:	sub	x19, x19, #0x4
  43c338:	sub	x27, x20, #0x70
  43c33c:	mov	w2, #0xffffffa3            	// #-93
  43c340:	mov	w9, #0x11                  	// #17
  43c344:	mov	w8, #0x0                   	// #0
  43c348:	mov	x4, #0x0                   	// #0
  43c34c:	mov	x5, #0x0                   	// #0
  43c350:	mov	x7, #0x0                   	// #0
  43c354:	mov	x3, #0x0                   	// #0
  43c358:	mov	x28, #0x0                   	// #0
  43c35c:	ldur	x6, [x20, #-56]
  43c360:	b	43b308 <argp_parse@@Base+0x7420>
  43c364:	mov	x27, x20
  43c368:	sub	x19, x19, #0x2
  43c36c:	mov	w2, #0xffffffa3            	// #-93
  43c370:	mov	w9, #0x11                  	// #17
  43c374:	mov	w8, #0x0                   	// #0
  43c378:	mov	x4, #0x0                   	// #0
  43c37c:	mov	x5, #0x0                   	// #0
  43c380:	mov	x6, #0x0                   	// #0
  43c384:	mov	x3, #0x0                   	// #0
  43c388:	mov	x28, #0x0                   	// #0
  43c38c:	ldr	x7, [x27], #-56
  43c390:	b	43b308 <argp_parse@@Base+0x7420>
  43c394:	ldur	x0, [x20, #-48]
  43c398:	ldr	x2, [x20]
  43c39c:	mul	x1, x0, x2
  43c3a0:	smulh	x0, x0, x2
  43c3a4:	mov	x7, x1
  43c3a8:	cmp	x0, x1, asr #63
  43c3ac:	cset	x28, ne  // ne = any
  43c3b0:	b.ne	43b580 <argp_parse@@Base+0x7698>  // b.any
  43c3b4:	sub	x27, x20, #0x70
  43c3b8:	sub	x19, x19, #0x4
  43c3bc:	mov	x4, #0x0                   	// #0
  43c3c0:	mov	x5, #0x0                   	// #0
  43c3c4:	mov	x6, #0x0                   	// #0
  43c3c8:	mov	x3, #0x0                   	// #0
  43c3cc:	mov	w2, #0xffffffa3            	// #-93
  43c3d0:	mov	w9, #0x11                  	// #17
  43c3d4:	mov	w8, #0x0                   	// #0
  43c3d8:	b	43b308 <argp_parse@@Base+0x7420>
  43c3dc:	ldur	x0, [x20, #-56]
  43c3e0:	b	43c398 <argp_parse@@Base+0x84b0>
  43c3e4:	sub	x27, x20, #0x38
  43c3e8:	sub	x19, x19, #0x2
  43c3ec:	mov	w2, #0xffffffa3            	// #-93
  43c3f0:	mov	w9, #0x11                  	// #17
  43c3f4:	mov	w8, #0x0                   	// #0
  43c3f8:	mov	x4, #0x0                   	// #0
  43c3fc:	mov	x5, #0x0                   	// #0
  43c400:	mov	x6, #0x0                   	// #0
  43c404:	mov	x7, #0x0                   	// #0
  43c408:	mov	x3, #0x1                   	// #1
  43c40c:	mov	x28, #0x0                   	// #0
  43c410:	b	43b308 <argp_parse@@Base+0x7420>
  43c414:	sub	x19, x19, #0x4
  43c418:	sub	x27, x20, #0x70
  43c41c:	mov	w2, #0xffffffa3            	// #-93
  43c420:	mov	w9, #0x11                  	// #17
  43c424:	mov	w8, #0x0                   	// #0
  43c428:	mov	x4, #0x0                   	// #0
  43c42c:	mov	x5, #0x0                   	// #0
  43c430:	mov	x6, #0x0                   	// #0
  43c434:	mov	x7, #0x0                   	// #0
  43c438:	mov	x28, #0x0                   	// #0
  43c43c:	ldur	x3, [x20, #-48]
  43c440:	b	43b308 <argp_parse@@Base+0x7420>
  43c444:	sub	x19, x19, #0x4
  43c448:	sub	x27, x20, #0x70
  43c44c:	mov	w2, #0xffffffa3            	// #-93
  43c450:	mov	w9, #0x11                  	// #17
  43c454:	mov	w8, #0x0                   	// #0
  43c458:	mov	x4, #0x0                   	// #0
  43c45c:	mov	x5, #0x0                   	// #0
  43c460:	mov	x6, #0x0                   	// #0
  43c464:	mov	x7, #0x0                   	// #0
  43c468:	mov	x28, #0x0                   	// #0
  43c46c:	ldur	x3, [x20, #-56]
  43c470:	b	43b308 <argp_parse@@Base+0x7420>
  43c474:	mov	w27, #0x38                  	// #56
  43c478:	sub	x19, x19, w11, uxtb #1
  43c47c:	mov	w2, #0xffffffa3            	// #-93
  43c480:	mov	w9, #0x11                  	// #17
  43c484:	umsubl	x27, w11, w27, x20
  43c488:	mov	w8, #0x0                   	// #0
  43c48c:	mov	x4, #0x0                   	// #0
  43c490:	mov	x5, #0x0                   	// #0
  43c494:	mov	x6, #0x0                   	// #0
  43c498:	mov	x7, #0x0                   	// #0
  43c49c:	mov	x3, #0x0                   	// #0
  43c4a0:	mov	x28, #0x1                   	// #1
  43c4a4:	b	43b308 <argp_parse@@Base+0x7420>
  43c4a8:	sub	x19, x19, #0x4
  43c4ac:	sub	x27, x20, #0x70
  43c4b0:	mov	w2, #0xffffffa3            	// #-93
  43c4b4:	mov	w9, #0x11                  	// #17
  43c4b8:	b	43bf94 <argp_parse@@Base+0x80ac>
  43c4bc:	sub	x19, x19, #0x4
  43c4c0:	sub	x27, x20, #0x70
  43c4c4:	mov	w2, #0xffffffa3            	// #-93
  43c4c8:	mov	w9, #0x11                  	// #17
  43c4cc:	mov	w8, #0x0                   	// #0
  43c4d0:	mov	x4, #0x0                   	// #0
  43c4d4:	mov	x5, #0x0                   	// #0
  43c4d8:	mov	x6, #0x0                   	// #0
  43c4dc:	mov	x7, #0x0                   	// #0
  43c4e0:	mov	x3, #0x0                   	// #0
  43c4e4:	ldur	x28, [x20, #-56]
  43c4e8:	b	43b308 <argp_parse@@Base+0x7420>
  43c4ec:	ldp	x10, x1, [x20, #32]
  43c4f0:	ldp	x11, x0, [x23, #136]
  43c4f4:	ldr	w9, [x23, #152]
  43c4f8:	ldr	w2, [x20, #48]
  43c4fc:	adds	w2, w9, w2
  43c500:	str	w2, [x23, #152]
  43c504:	cset	w9, vs
  43c508:	adds	x0, x0, x1
  43c50c:	str	x0, [x23, #144]
  43c510:	cset	x0, vs
  43c514:	orr	w9, w9, w0
  43c518:	adds	x11, x11, x10
  43c51c:	ldr	x1, [x20, #24]
  43c520:	cset	x13, vs
  43c524:	ldr	x0, [x23, #128]
  43c528:	str	x11, [x23, #136]
  43c52c:	ldr	x10, [x20, #16]
  43c530:	adds	x1, x0, x1
  43c534:	ldr	x0, [x23, #120]
  43c538:	cset	x12, vs
  43c53c:	ldr	x2, [x20]
  43c540:	adds	x0, x0, x10
  43c544:	stp	x0, x1, [x23, #120]
  43c548:	cset	x0, vs
  43c54c:	orr	x12, x13, x12
  43c550:	ldr	x10, [x20, #8]
  43c554:	ldr	x1, [x23, #112]
  43c558:	adds	x1, x1, x10
  43c55c:	str	x1, [x23, #112]
  43c560:	ldr	x1, [x23, #104]
  43c564:	cset	x10, vs
  43c568:	orr	x0, x0, x10
  43c56c:	adds	x1, x1, x2
  43c570:	orr	w0, w0, w12
  43c574:	str	x1, [x23, #104]
  43c578:	orr	w0, w0, w9
  43c57c:	csinc	w0, w0, wzr, vc
  43c580:	cbnz	w0, 43b580 <argp_parse@@Base+0x7698>
  43c584:	mov	w0, #0x1                   	// #1
  43c588:	sub	x27, x20, #0x38
  43c58c:	sub	x19, x19, #0x2
  43c590:	mov	w2, #0xffffffa3            	// #-93
  43c594:	mov	w9, #0x10                  	// #16
  43c598:	strb	w0, [x23, #161]
  43c59c:	b	43b308 <argp_parse@@Base+0x7420>
  43c5a0:	ldp	x1, x2, [x20, #32]
  43c5a4:	ldp	x11, x0, [x23, #136]
  43c5a8:	ldr	w10, [x23, #152]
  43c5ac:	ldr	w9, [x20, #48]
  43c5b0:	adds	w9, w10, w9
  43c5b4:	str	w9, [x23, #152]
  43c5b8:	cset	w10, vs
  43c5bc:	adds	x0, x0, x2
  43c5c0:	str	x0, [x23, #144]
  43c5c4:	cset	x0, vs
  43c5c8:	adds	x12, x11, x1
  43c5cc:	orr	w10, w10, w0
  43c5d0:	ldr	x2, [x20, #24]
  43c5d4:	cset	x13, vs
  43c5d8:	ldr	x1, [x23, #128]
  43c5dc:	str	x12, [x23, #136]
  43c5e0:	ldr	x11, [x20, #16]
  43c5e4:	adds	x2, x1, x2
  43c5e8:	ldr	x1, [x23, #120]
  43c5ec:	cset	x0, vs
  43c5f0:	orr	x0, x13, x0
  43c5f4:	adds	x1, x1, x11
  43c5f8:	stp	x1, x2, [x23, #120]
  43c5fc:	cset	x11, vs
  43c600:	ldr	x2, [x20, #8]
  43c604:	ldr	x1, [x23, #112]
  43c608:	adds	x1, x1, x2
  43c60c:	str	x1, [x23, #112]
  43c610:	ldr	x2, [x20]
  43c614:	cset	x9, vs
  43c618:	ldr	x1, [x23, #104]
  43c61c:	orr	x9, x11, x9
  43c620:	orr	w0, w0, w9
  43c624:	adds	x1, x1, x2
  43c628:	str	x1, [x23, #104]
  43c62c:	orr	w0, w0, w10
  43c630:	csinc	w0, w0, wzr, vc
  43c634:	cbz	w0, 43c584 <argp_parse@@Base+0x869c>
  43c638:	b	43b580 <argp_parse@@Base+0x7698>
  43c63c:	ldr	x30, [x20]
  43c640:	ldur	w27, [x20, #-8]
  43c644:	ldr	w15, [x23, #152]
  43c648:	ldp	x13, x9, [x20, #-56]
  43c64c:	ldp	x2, x10, [x20, #-40]
  43c650:	ldp	x0, x1, [x20, #-24]
  43c654:	ldp	x12, x14, [x23, #104]
  43c658:	ldp	x17, x18, [x23, #120]
  43c65c:	ldp	x11, x16, [x23, #136]
  43c660:	tbnz	w30, #31, 43cc60 <argp_parse@@Base+0x8d78>
  43c664:	adds	w15, w15, w27
  43c668:	str	w15, [x23, #152]
  43c66c:	cset	w15, vs
  43c670:	adds	x1, x16, x1
  43c674:	cset	x16, vs
  43c678:	adds	x11, x11, x0
  43c67c:	cset	x0, vs
  43c680:	adds	x10, x18, x10
  43c684:	cset	x18, vs
  43c688:	adds	x2, x17, x2
  43c68c:	cset	x17, vs
  43c690:	adds	x9, x14, x9
  43c694:	cset	x14, vs
  43c698:	orr	x0, x0, x18
  43c69c:	orr	x14, x17, x14
  43c6a0:	orr	w15, w15, w16
  43c6a4:	orr	w0, w0, w14
  43c6a8:	adds	x12, x12, x13
  43c6ac:	stp	x12, x9, [x23, #104]
  43c6b0:	orr	w0, w0, w15
  43c6b4:	csinc	w0, w0, wzr, vc
  43c6b8:	stp	x2, x10, [x23, #120]
  43c6bc:	stp	x11, x1, [x23, #136]
  43c6c0:	cbnz	w0, 43b580 <argp_parse@@Base+0x7698>
  43c6c4:	mov	w0, #0x1                   	// #1
  43c6c8:	sub	x27, x20, #0x70
  43c6cc:	sub	x19, x19, #0x4
  43c6d0:	mov	w2, #0xffffffa3            	// #-93
  43c6d4:	mov	w9, #0x10                  	// #16
  43c6d8:	strb	w0, [x23, #161]
  43c6dc:	b	43b308 <argp_parse@@Base+0x7420>
  43c6e0:	ldp	x0, x1, [x20, #-112]
  43c6e4:	stp	x0, x1, [x23, #32]
  43c6e8:	ldur	x2, [x20, #-48]
  43c6ec:	ldur	x0, [x20, #-96]
  43c6f0:	negs	x2, x2
  43c6f4:	stp	x0, x2, [x23, #48]
  43c6f8:	b.vs	43b580 <argp_parse@@Base+0x7698>
  43c6fc:	ldr	x0, [x20, #8]
  43c700:	negs	x0, x0
  43c704:	str	x0, [x23, #64]
  43c708:	b.vs	43b580 <argp_parse@@Base+0x7698>
  43c70c:	sub	x27, x20, #0xa8
  43c710:	sub	x19, x19, #0x6
  43c714:	mov	w2, #0xffffffa3            	// #-93
  43c718:	mov	w9, #0xf                   	// #15
  43c71c:	b	43b308 <argp_parse@@Base+0x7420>
  43c720:	sub	x19, x19, #0x2
  43c724:	sub	x27, x20, #0x38
  43c728:	mov	w2, #0xffffffa4            	// #-92
  43c72c:	mov	w9, #0x16                  	// #22
  43c730:	mov	x3, #0x0                   	// #0
  43c734:	ldr	x28, [x20, #8]
  43c738:	b	43b308 <argp_parse@@Base+0x7420>
  43c73c:	sub	x19, x19, #0x2
  43c740:	sub	x27, x20, #0x38
  43c744:	mov	w2, #0xffffffa3            	// #-93
  43c748:	mov	w9, #0x15                  	// #21
  43c74c:	mov	x3, #0x0                   	// #0
  43c750:	ldr	x28, [x20, #8]
  43c754:	b	43b308 <argp_parse@@Base+0x7420>
  43c758:	mov	x27, x20
  43c75c:	sub	x19, x19, #0x2
  43c760:	mov	w2, #0xffffffa3            	// #-93
  43c764:	mov	w9, #0x13                  	// #19
  43c768:	b	43c374 <argp_parse@@Base+0x848c>
  43c76c:	sub	x19, x19, #0x4
  43c770:	sub	x27, x20, #0x70
  43c774:	mov	w2, #0x3c                  	// #60
  43c778:	mov	w9, #0x12                  	// #18
  43c77c:	b	43bdbc <argp_parse@@Base+0x7ed4>
  43c780:	mov	x27, x20
  43c784:	sub	x19, x19, #0x2
  43c788:	mov	w2, #0xffffffa3            	// #-93
  43c78c:	mov	w9, #0xd                   	// #13
  43c790:	str	xzr, [x23, #8]
  43c794:	ldr	x0, [x27], #-56
  43c798:	str	w0, [x23, #16]
  43c79c:	b	43b308 <argp_parse@@Base+0x7420>
  43c7a0:	ldur	x0, [x20, #-56]
  43c7a4:	sub	x19, x19, #0x4
  43c7a8:	sub	x27, x20, #0x70
  43c7ac:	mov	w2, #0xffffffa3            	// #-93
  43c7b0:	add	w0, w0, #0xe10
  43c7b4:	mov	w9, #0xc                   	// #12
  43c7b8:	str	w0, [x23, #24]
  43c7bc:	b	43b308 <argp_parse@@Base+0x7420>
  43c7c0:	mov	x27, x20
  43c7c4:	sub	x19, x19, #0x2
  43c7c8:	mov	w2, #0xffffffa3            	// #-93
  43c7cc:	mov	w9, #0xc                   	// #12
  43c7d0:	ldr	x0, [x27], #-56
  43c7d4:	add	w0, w0, #0xe10
  43c7d8:	str	w0, [x23, #24]
  43c7dc:	b	43b308 <argp_parse@@Base+0x7420>
  43c7e0:	ldp	x1, x0, [x20, #-48]
  43c7e4:	ldr	x2, [x20]
  43c7e8:	cmp	x0, #0x2
  43c7ec:	b.gt	43cc1c <argp_parse@@Base+0x8d34>
  43c7f0:	tbnz	x2, #63, 43cd10 <argp_parse@@Base+0x8e28>
  43c7f4:	mov	x9, #0x3c                  	// #60
  43c7f8:	ldurb	w10, [x20, #-56]
  43c7fc:	mul	x0, x1, x9
  43c800:	smulh	x1, x1, x9
  43c804:	cmp	x1, x0, asr #63
  43c808:	cset	w1, ne  // ne = any
  43c80c:	cbz	w10, 43ccac <argp_parse@@Base+0x8dc4>
  43c810:	subs	x0, x0, x2
  43c814:	cset	w2, vs
  43c818:	orr	w1, w1, w2
  43c81c:	cbnz	w1, 43b580 <argp_parse@@Base+0x7698>
  43c820:	add	x1, x0, #0x5a0
  43c824:	cmp	x1, #0xb40
  43c828:	b.hi	43b580 <argp_parse@@Base+0x7698>  // b.pmore
  43c82c:	lsl	w1, w0, #4
  43c830:	sub	w0, w1, w0
  43c834:	ldur	x1, [x20, #-112]
  43c838:	lsl	w0, w0, #2
  43c83c:	sxtw	x0, w0
  43c840:	adds	x0, x0, x1
  43c844:	str	w0, [x23, #24]
  43c848:	cset	w1, vs
  43c84c:	cmp	x0, w0, sxtw
  43c850:	csinc	w1, w1, wzr, eq  // eq = none
  43c854:	cbnz	w1, 43b580 <argp_parse@@Base+0x7698>
  43c858:	sub	x27, x20, #0xa8
  43c85c:	sub	x19, x19, #0x6
  43c860:	mov	w2, #0xffffffa3            	// #-93
  43c864:	mov	w9, #0xc                   	// #12
  43c868:	b	43b308 <argp_parse@@Base+0x7420>
  43c86c:	ldur	x0, [x20, #-48]
  43c870:	ldr	x2, [x20]
  43c874:	mul	x1, x0, x2
  43c878:	smulh	x0, x0, x2
  43c87c:	mov	x7, x1
  43c880:	cmp	x0, x1, asr #63
  43c884:	cset	x28, ne  // ne = any
  43c888:	b.ne	43b580 <argp_parse@@Base+0x7698>  // b.any
  43c88c:	sub	x27, x20, #0x70
  43c890:	sub	x19, x19, #0x4
  43c894:	mov	x4, #0x0                   	// #0
  43c898:	mov	x5, #0x0                   	// #0
  43c89c:	mov	x6, #0x0                   	// #0
  43c8a0:	mov	x3, #0x0                   	// #0
  43c8a4:	mov	w2, #0x3c                  	// #60
  43c8a8:	mov	w9, #0x12                  	// #18
  43c8ac:	mov	w8, #0x0                   	// #0
  43c8b0:	b	43b308 <argp_parse@@Base+0x7420>
  43c8b4:	ldp	x0, x1, [x20, #-56]
  43c8b8:	stp	x0, x1, [sp, #176]
  43c8bc:	ldur	x2, [x20, #-40]
  43c8c0:	add	x1, sp, #0xb0
  43c8c4:	mov	x0, x23
  43c8c8:	stp	x3, x6, [sp, #120]
  43c8cc:	stp	x7, x4, [sp, #136]
  43c8d0:	str	x5, [sp, #152]
  43c8d4:	str	w8, [sp, #164]
  43c8d8:	str	x2, [sp, #192]
  43c8dc:	bl	43a650 <argp_parse@@Base+0x6768>
  43c8e0:	ldp	x10, x1, [x20, #32]
  43c8e4:	ldp	x11, x0, [x23, #136]
  43c8e8:	ldr	w9, [x23, #152]
  43c8ec:	ldr	w2, [x20, #48]
  43c8f0:	adds	w2, w9, w2
  43c8f4:	str	w2, [x23, #152]
  43c8f8:	cset	w9, vs
  43c8fc:	adds	x0, x0, x1
  43c900:	str	x0, [x23, #144]
  43c904:	cset	x0, vs
  43c908:	orr	w9, w9, w0
  43c90c:	adds	x11, x11, x10
  43c910:	ldr	x1, [x20, #24]
  43c914:	cset	x13, vs
  43c918:	ldr	x0, [x23, #128]
  43c91c:	str	x11, [x23, #136]
  43c920:	ldr	x10, [x20, #16]
  43c924:	adds	x1, x0, x1
  43c928:	ldr	x0, [x23, #120]
  43c92c:	cset	x12, vs
  43c930:	ldr	x2, [x20]
  43c934:	adds	x0, x0, x10
  43c938:	stp	x0, x1, [x23, #120]
  43c93c:	cset	x0, vs
  43c940:	orr	x12, x13, x12
  43c944:	ldr	x10, [x20, #8]
  43c948:	ldr	x1, [x23, #112]
  43c94c:	adds	x1, x1, x10
  43c950:	str	x1, [x23, #112]
  43c954:	ldr	x1, [x23, #104]
  43c958:	cset	x10, vs
  43c95c:	orr	x0, x0, x10
  43c960:	adds	x1, x1, x2
  43c964:	orr	w0, w0, w12
  43c968:	str	x1, [x23, #104]
  43c96c:	orr	w0, w0, w9
  43c970:	csinc	w0, w0, wzr, vc
  43c974:	cbnz	w0, 43b580 <argp_parse@@Base+0x7698>
  43c978:	mov	w0, #0x1                   	// #1
  43c97c:	sub	x27, x20, #0x70
  43c980:	sub	x19, x19, #0x4
  43c984:	mov	w2, #0xffffffa3            	// #-93
  43c988:	mov	w9, #0x18                  	// #24
  43c98c:	strb	w0, [x23, #161]
  43c990:	b	43bf70 <argp_parse@@Base+0x8088>
  43c994:	ldp	x0, x1, [x20]
  43c998:	stp	x0, x1, [sp, #176]
  43c99c:	sub	x19, x19, #0x2
  43c9a0:	ldr	x0, [x20, #16]
  43c9a4:	add	x1, sp, #0xb0
  43c9a8:	stp	x3, x6, [sp, #120]
  43c9ac:	sub	x27, x20, #0x38
  43c9b0:	stp	x7, x4, [sp, #136]
  43c9b4:	str	x5, [sp, #152]
  43c9b8:	str	w8, [sp, #164]
  43c9bc:	str	x0, [sp, #192]
  43c9c0:	mov	x0, x23
  43c9c4:	bl	43a650 <argp_parse@@Base+0x6768>
  43c9c8:	mov	w2, #0xffffffa3            	// #-93
  43c9cc:	mov	w9, #0x17                  	// #23
  43c9d0:	b	43bf70 <argp_parse@@Base+0x8088>
  43c9d4:	sub	x19, x19, #0x4
  43c9d8:	sub	x27, x20, #0x70
  43c9dc:	mov	w2, #0x3c                  	// #60
  43c9e0:	mov	w9, #0x12                  	// #18
  43c9e4:	b	43be4c <argp_parse@@Base+0x7f64>
  43c9e8:	sub	x19, x19, #0x4
  43c9ec:	sub	x27, x20, #0x70
  43c9f0:	mov	w2, #0x3c                  	// #60
  43c9f4:	mov	w9, #0x12                  	// #18
  43c9f8:	b	43c314 <argp_parse@@Base+0x842c>
  43c9fc:	ldur	x0, [x20, #-56]
  43ca00:	str	x0, [x23, #56]
  43ca04:	ldp	x0, x1, [x20]
  43ca08:	sub	x19, x19, #0x6
  43ca0c:	sub	x27, x20, #0xa8
  43ca10:	stp	x0, x1, [x23, #32]
  43ca14:	ldur	x9, [x20, #-104]
  43ca18:	b	43baa0 <argp_parse@@Base+0x7bb8>
  43ca1c:	sub	x19, x19, #0x4
  43ca20:	sub	x27, x20, #0x70
  43ca24:	mov	w2, #0x3c                  	// #60
  43ca28:	mov	w9, #0x12                  	// #18
  43ca2c:	b	43c424 <argp_parse@@Base+0x853c>
  43ca30:	mov	x27, x20
  43ca34:	mov	w2, #0x2b                  	// #43
  43ca38:	mov	w9, #0x19                  	// #25
  43ca3c:	mov	x28, #0xffffffffffffffff    	// #-1
  43ca40:	b	43b308 <argp_parse@@Base+0x7420>
  43ca44:	mov	w2, #0xffffffa3            	// #-93
  43ca48:	mov	w9, #0x4                   	// #4
  43ca4c:	b	43b308 <argp_parse@@Base+0x7420>
  43ca50:	add	x0, sp, #0xd0
  43ca54:	bl	403ff0 <strlen@plt>
  43ca58:	str	x0, [sp, #120]
  43ca5c:	mov	w1, #0x1                   	// #1
  43ca60:	cmp	x0, #0x3
  43ca64:	mov	w2, w1
  43ca68:	b.eq	43ca88 <argp_parse@@Base+0x8ba0>  // b.none
  43ca6c:	cmp	x0, #0x4
  43ca70:	mov	w2, #0x0                   	// #0
  43ca74:	b.ne	43ca88 <argp_parse@@Base+0x8ba0>  // b.any
  43ca78:	ldrb	w0, [sp, #211]
  43ca7c:	cmp	w0, #0x2e
  43ca80:	cset	w0, eq  // eq = none
  43ca84:	mov	w2, w0
  43ca88:	add	x24, x22, #0x450
  43ca8c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ca90:	add	x1, x1, #0xc08
  43ca94:	str	x19, [sp, #128]
  43ca98:	mov	x19, x24
  43ca9c:	mov	w24, w2
  43caa0:	cbz	w24, 43caf4 <argp_parse@@Base+0x8c0c>
  43caa4:	mov	x2, #0x3                   	// #3
  43caa8:	add	x0, sp, #0xd0
  43caac:	bl	4043c0 <strncmp@plt>
  43cab0:	cmp	w0, #0x0
  43cab4:	cset	w2, eq  // eq = none
  43cab8:	cbnz	w2, 43cb70 <argp_parse@@Base+0x8c88>
  43cabc:	ldr	x1, [x19, #16]!
  43cac0:	cbnz	x1, 43caa0 <argp_parse@@Base+0x8bb8>
  43cac4:	add	x1, sp, #0xd0
  43cac8:	mov	x0, x23
  43cacc:	ldr	x19, [sp, #128]
  43cad0:	str	w2, [sp, #128]
  43cad4:	bl	43aa78 <argp_parse@@Base+0x6b90>
  43cad8:	mov	x1, x0
  43cadc:	ldr	w2, [sp, #128]
  43cae0:	cbz	x0, 43cb18 <argp_parse@@Base+0x8c30>
  43cae4:	ldrsw	x0, [x1, #12]
  43cae8:	ldr	w24, [x1, #8]
  43caec:	str	x0, [sp, #272]
  43caf0:	b	43b27c <argp_parse@@Base+0x7394>
  43caf4:	add	x0, sp, #0xd0
  43caf8:	bl	404710 <strcmp@plt>
  43cafc:	cmp	w0, #0x0
  43cb00:	cset	w2, eq  // eq = none
  43cb04:	b	43cab8 <argp_parse@@Base+0x8bd0>
  43cb08:	mov	w0, #0x2                   	// #2
  43cb0c:	b	43b584 <argp_parse@@Base+0x769c>
  43cb10:	mov	w0, #0x0                   	// #0
  43cb14:	b	43b584 <argp_parse@@Base+0x769c>
  43cb18:	add	x0, sp, #0xd0
  43cb1c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43cb20:	add	x1, x1, #0xc30
  43cb24:	str	w2, [sp, #128]
  43cb28:	bl	404710 <strcmp@plt>
  43cb2c:	ldr	w2, [sp, #128]
  43cb30:	cbz	w0, 43cd18 <argp_parse@@Base+0x8e30>
  43cb34:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43cb38:	add	x0, x24, #0xc10
  43cb3c:	add	x24, x22, #0x5e0
  43cb40:	mov	x1, x0
  43cb44:	stp	x19, x0, [sp, #128]
  43cb48:	mov	x19, x24
  43cb4c:	mov	x24, x23
  43cb50:	mov	w23, w2
  43cb54:	b	43cb60 <argp_parse@@Base+0x8c78>
  43cb58:	ldr	x1, [x19, #16]!
  43cb5c:	cbz	x1, 43cd24 <argp_parse@@Base+0x8e3c>
  43cb60:	add	x0, sp, #0xd0
  43cb64:	bl	404710 <strcmp@plt>
  43cb68:	cbnz	w0, 43cb58 <argp_parse@@Base+0x8c70>
  43cb6c:	mov	x23, x24
  43cb70:	ldrsw	x0, [x19, #12]
  43cb74:	ldr	w24, [x19, #8]
  43cb78:	str	x0, [sp, #272]
  43cb7c:	ldr	x19, [sp, #128]
  43cb80:	b	43b27c <argp_parse@@Base+0x7394>
  43cb84:	mov	w5, #0x0                   	// #0
  43cb88:	b	43b6e0 <argp_parse@@Base+0x77f8>
  43cb8c:	mov	w2, #0xffffffa3            	// #-93
  43cb90:	mov	w9, #0xc                   	// #12
  43cb94:	b	43b308 <argp_parse@@Base+0x7420>
  43cb98:	mov	w2, #0xffffffa3            	// #-93
  43cb9c:	mov	w9, #0x2                   	// #2
  43cba0:	b	43b308 <argp_parse@@Base+0x7420>
  43cba4:	ldur	x27, [x20, #-216]
  43cba8:	cbnz	w0, 43cd8c <argp_parse@@Base+0x8ea4>
  43cbac:	ldur	x9, [x20, #-104]
  43cbb0:	sub	x19, x19, #0xa
  43cbb4:	ldr	x0, [x20, #16]
  43cbb8:	stp	x0, x27, [x23, #48]
  43cbbc:	mov	w2, #0xffffffa3            	// #-93
  43cbc0:	ldp	x0, x1, [x20]
  43cbc4:	sub	x27, x20, #0x118
  43cbc8:	stp	x0, x1, [x23, #32]
  43cbcc:	str	x9, [x23, #64]
  43cbd0:	mov	w9, #0xe                   	// #14
  43cbd4:	b	43b308 <argp_parse@@Base+0x7420>
  43cbd8:	tbz	x2, #63, 43bc54 <argp_parse@@Base+0x7d6c>
  43cbdc:	mov	x0, #0xd70b                	// #55051
  43cbe0:	movk	x0, #0x70a3, lsl #16
  43cbe4:	movk	x0, #0xa3d, lsl #32
  43cbe8:	movk	x0, #0xa3d7, lsl #48
  43cbec:	smulh	x0, x1, x0
  43cbf0:	add	x0, x0, x1
  43cbf4:	asr	x0, x0, #6
  43cbf8:	sub	x0, x0, x1, asr #63
  43cbfc:	add	x2, x0, x0, lsl #1
  43cc00:	add	x2, x0, x2, lsl #3
  43cc04:	sub	x2, x1, x2, lsl #2
  43cc08:	mov	x1, x0
  43cc0c:	lsl	x0, x1, #4
  43cc10:	sub	x0, x0, x1
  43cc14:	add	x0, x2, x0, lsl #2
  43cc18:	b	43bc80 <argp_parse@@Base+0x7d98>
  43cc1c:	tbz	x2, #63, 43c7f4 <argp_parse@@Base+0x890c>
  43cc20:	mov	x0, #0xd70b                	// #55051
  43cc24:	movk	x0, #0x70a3, lsl #16
  43cc28:	movk	x0, #0xa3d, lsl #32
  43cc2c:	movk	x0, #0xa3d7, lsl #48
  43cc30:	smulh	x0, x1, x0
  43cc34:	add	x0, x0, x1
  43cc38:	asr	x0, x0, #6
  43cc3c:	sub	x0, x0, x1, asr #63
  43cc40:	add	x2, x0, x0, lsl #1
  43cc44:	add	x2, x0, x2, lsl #3
  43cc48:	sub	x2, x1, x2, lsl #2
  43cc4c:	mov	x1, x0
  43cc50:	lsl	x0, x1, #4
  43cc54:	sub	x0, x0, x1
  43cc58:	add	x0, x2, x0, lsl #2
  43cc5c:	b	43c820 <argp_parse@@Base+0x8938>
  43cc60:	subs	w15, w15, w27
  43cc64:	str	w15, [x23, #152]
  43cc68:	cset	w15, vs
  43cc6c:	subs	x1, x16, x1
  43cc70:	cset	x16, vs
  43cc74:	subs	x11, x11, x0
  43cc78:	cset	x0, vs
  43cc7c:	subs	x10, x18, x10
  43cc80:	cset	x18, vs
  43cc84:	subs	x2, x17, x2
  43cc88:	cset	x17, vs
  43cc8c:	subs	x9, x14, x9
  43cc90:	cset	x14, vs
  43cc94:	orr	x0, x0, x18
  43cc98:	orr	x14, x17, x14
  43cc9c:	orr	w15, w15, w16
  43cca0:	orr	w0, w0, w14
  43cca4:	subs	x12, x12, x13
  43cca8:	b	43c6ac <argp_parse@@Base+0x87c4>
  43ccac:	adds	x0, x0, x2
  43ccb0:	cset	w2, vs
  43ccb4:	b	43c818 <argp_parse@@Base+0x8930>
  43ccb8:	adds	x0, x0, x2
  43ccbc:	cset	w2, vs
  43ccc0:	b	43bc78 <argp_parse@@Base+0x7d90>
  43ccc4:	mov	w2, #0x5                   	// #5
  43ccc8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43cccc:	mov	x0, #0x0                   	// #0
  43ccd0:	add	x1, x1, #0xcb8
  43ccd4:	stp	x3, x6, [sp, #120]
  43ccd8:	stp	x7, x4, [sp, #136]
  43ccdc:	str	x5, [sp, #152]
  43cce0:	str	w8, [sp, #164]
  43cce4:	str	x9, [sp, #168]
  43cce8:	bl	4049c0 <dcgettext@plt>
  43ccec:	ldr	x1, [x27, #8]
  43ccf0:	ldr	x9, [sp, #168]
  43ccf4:	mov	x2, x9
  43ccf8:	bl	43a980 <argp_parse@@Base+0x6a98>
  43ccfc:	ldr	w8, [sp, #164]
  43cd00:	ldp	x3, x6, [sp, #120]
  43cd04:	ldp	x7, x4, [sp, #136]
  43cd08:	ldr	x5, [sp, #152]
  43cd0c:	b	43bb54 <argp_parse@@Base+0x7c6c>
  43cd10:	mov	x2, #0x0                   	// #0
  43cd14:	b	43cc50 <argp_parse@@Base+0x8d68>
  43cd18:	mov	w24, #0x103                 	// #259
  43cd1c:	str	xzr, [sp, #272]
  43cd20:	b	43b658 <argp_parse@@Base+0x7770>
  43cd24:	ldp	x0, x19, [sp, #120]
  43cd28:	mov	w2, w23
  43cd2c:	mov	x23, x24
  43cd30:	sub	x3, x0, #0x1
  43cd34:	add	x0, sp, #0xd0
  43cd38:	ldrb	w0, [x0, x3]
  43cd3c:	cmp	w0, #0x53
  43cd40:	b.eq	43cdcc <argp_parse@@Base+0x8ee4>  // b.none
  43cd44:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43cd48:	add	x24, x22, #0x690
  43cd4c:	add	x1, x1, #0xc18
  43cd50:	str	x23, [sp, #128]
  43cd54:	mov	w23, w2
  43cd58:	b	43cd64 <argp_parse@@Base+0x8e7c>
  43cd5c:	ldr	x1, [x24, #16]!
  43cd60:	cbz	x1, 43ce18 <argp_parse@@Base+0x8f30>
  43cd64:	add	x0, sp, #0xd0
  43cd68:	bl	404710 <strcmp@plt>
  43cd6c:	cbnz	w0, 43cd5c <argp_parse@@Base+0x8e74>
  43cd70:	ldrsw	x0, [x24, #12]
  43cd74:	ldr	w24, [x24, #8]
  43cd78:	str	x0, [sp, #272]
  43cd7c:	ldr	x23, [sp, #128]
  43cd80:	b	43b27c <argp_parse@@Base+0x7394>
  43cd84:	mov	x2, #0x0                   	// #0
  43cd88:	b	43cc0c <argp_parse@@Base+0x8d24>
  43cd8c:	mov	w2, #0x5                   	// #5
  43cd90:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43cd94:	mov	x0, #0x0                   	// #0
  43cd98:	add	x1, x1, #0xcf0
  43cd9c:	stp	x3, x6, [sp, #120]
  43cda0:	stp	x7, x4, [sp, #136]
  43cda4:	str	x5, [sp, #152]
  43cda8:	str	w8, [sp, #164]
  43cdac:	bl	4049c0 <dcgettext@plt>
  43cdb0:	mov	x1, x27
  43cdb4:	bl	43a980 <argp_parse@@Base+0x6a98>
  43cdb8:	ldr	w8, [sp, #164]
  43cdbc:	ldp	x3, x6, [sp, #120]
  43cdc0:	ldp	x7, x4, [sp, #136]
  43cdc4:	ldr	x5, [sp, #152]
  43cdc8:	b	43cbac <argp_parse@@Base+0x8cc4>
  43cdcc:	add	x0, sp, #0xd0
  43cdd0:	add	x24, x22, #0x5e0
  43cdd4:	str	x23, [sp, #128]
  43cdd8:	mov	w23, w2
  43cddc:	ldr	x1, [sp, #136]
  43cde0:	strb	wzr, [x0, x3]
  43cde4:	b	43cdf0 <argp_parse@@Base+0x8f08>
  43cde8:	ldr	x1, [x24, #16]!
  43cdec:	cbz	x1, 43cedc <argp_parse@@Base+0x8ff4>
  43cdf0:	add	x0, sp, #0xd0
  43cdf4:	str	x3, [sp, #136]
  43cdf8:	bl	404710 <strcmp@plt>
  43cdfc:	ldr	x3, [sp, #136]
  43ce00:	cbnz	w0, 43cde8 <argp_parse@@Base+0x8f00>
  43ce04:	b	43cd70 <argp_parse@@Base+0x8e88>
  43ce08:	ldrb	w6, [x4]
  43ce0c:	add	w0, w0, #0x1
  43ce10:	sub	w6, w6, #0x30
  43ce14:	b	43b788 <argp_parse@@Base+0x78a0>
  43ce18:	mov	w2, w23
  43ce1c:	ldp	x0, x23, [sp, #120]
  43ce20:	cmp	x0, #0x1
  43ce24:	ldrb	w0, [sp, #208]
  43ce28:	b.eq	43cea8 <argp_parse@@Base+0x8fc0>  // b.none
  43ce2c:	add	x3, sp, #0xd0
  43ce30:	mov	x1, x3
  43ce34:	cbnz	w0, 43ce4c <argp_parse@@Base+0x8f64>
  43ce38:	b	43ce74 <argp_parse@@Base+0x8f8c>
  43ce3c:	add	x1, x1, #0x1
  43ce40:	ldrb	w0, [x3, #1]!
  43ce44:	strb	w0, [x1]
  43ce48:	cbz	w0, 43ce5c <argp_parse@@Base+0x8f74>
  43ce4c:	cmp	w0, #0x2e
  43ce50:	b.ne	43ce3c <argp_parse@@Base+0x8f54>  // b.any
  43ce54:	mov	w2, #0x1                   	// #1
  43ce58:	b	43ce40 <argp_parse@@Base+0x8f58>
  43ce5c:	cbz	w2, 43ce74 <argp_parse@@Base+0x8f8c>
  43ce60:	add	x1, sp, #0xd0
  43ce64:	mov	x0, x23
  43ce68:	bl	43aa78 <argp_parse@@Base+0x6b90>
  43ce6c:	mov	x1, x0
  43ce70:	cbnz	x0, 43cae4 <argp_parse@@Base+0x8bfc>
  43ce74:	ldrb	w0, [x23, #217]
  43ce78:	cbz	w0, 43ba08 <argp_parse@@Base+0x7b20>
  43ce7c:	mov	w2, #0x5                   	// #5
  43ce80:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ce84:	mov	x0, #0x0                   	// #0
  43ce88:	add	x1, x1, #0xc38
  43ce8c:	bl	4049c0 <dcgettext@plt>
  43ce90:	mov	w24, #0x3f                  	// #63
  43ce94:	add	x1, sp, #0xd0
  43ce98:	bl	43a980 <argp_parse@@Base+0x6a98>
  43ce9c:	mov	w2, #0x2                   	// #2
  43cea0:	add	w25, w28, w2
  43cea4:	b	43b294 <argp_parse@@Base+0x73ac>
  43cea8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43ceac:	add	x3, x22, #0x7e0
  43ceb0:	add	x1, x1, #0xc28
  43ceb4:	b	43cec0 <argp_parse@@Base+0x8fd8>
  43ceb8:	ldr	x1, [x3, #16]!
  43cebc:	cbz	x1, 43cef4 <argp_parse@@Base+0x900c>
  43cec0:	ldrb	w1, [x1]
  43cec4:	cmp	w1, w0
  43cec8:	b.ne	43ceb8 <argp_parse@@Base+0x8fd0>  // b.any
  43cecc:	ldrsw	x0, [x3, #12]
  43ced0:	ldr	w24, [x3, #8]
  43ced4:	str	x0, [sp, #272]
  43ced8:	b	43b27c <argp_parse@@Base+0x7394>
  43cedc:	add	x1, sp, #0xd0
  43cee0:	mov	w2, w23
  43cee4:	mov	w0, #0x53                  	// #83
  43cee8:	ldr	x23, [sp, #128]
  43ceec:	strb	w0, [x1, x3]
  43cef0:	b	43cd44 <argp_parse@@Base+0x8e5c>
  43cef4:	cbz	w0, 43ce74 <argp_parse@@Base+0x8f8c>
  43cef8:	add	x3, sp, #0xd0
  43cefc:	mov	x1, x3
  43cf00:	b	43ce4c <argp_parse@@Base+0x8f64>
  43cf04:	nop
  43cf08:	sub	sp, sp, #0x420
  43cf0c:	stp	x29, x30, [sp, #32]
  43cf10:	add	x29, sp, #0x20
  43cf14:	stp	x19, x20, [sp, #48]
  43cf18:	mov	x19, x4
  43cf1c:	stp	x21, x22, [sp, #64]
  43cf20:	stp	x23, x24, [sp, #80]
  43cf24:	mov	x24, x1
  43cf28:	mov	x23, x2
  43cf2c:	stp	x25, x26, [sp, #96]
  43cf30:	mov	x25, x5
  43cf34:	stp	x27, x28, [sp, #112]
  43cf38:	str	w3, [sp, #136]
  43cf3c:	str	x0, [sp, #144]
  43cf40:	mov	x0, x1
  43cf44:	bl	403ff0 <strlen@plt>
  43cf48:	str	x0, [sp, #152]
  43cf4c:	cbz	x23, 43d65c <argp_parse@@Base+0x9774>
  43cf50:	ldp	x22, x28, [x23]
  43cf54:	mov	x27, x24
  43cf58:	ldrb	w0, [x27]
  43cf5c:	cmp	w0, #0xd
  43cf60:	b.hi	43d4c8 <argp_parse@@Base+0x95e0>  // b.pmore
  43cf64:	cmp	w0, #0x8
  43cf68:	b.hi	43d4d0 <argp_parse@@Base+0x95e8>  // b.pmore
  43cf6c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43cf70:	mov	x0, x27
  43cf74:	add	x1, x1, #0xd48
  43cf78:	mov	x2, #0x4                   	// #4
  43cf7c:	bl	4043c0 <strncmp@plt>
  43cf80:	cbnz	w0, 43cfe0 <argp_parse@@Base+0x90f8>
  43cf84:	ldrb	w20, [x27, #4]
  43cf88:	add	x26, x27, #0x4
  43cf8c:	cbz	w20, 43cfe0 <argp_parse@@Base+0x90f8>
  43cf90:	mov	x4, x26
  43cf94:	mov	w1, w20
  43cf98:	mov	x0, #0x1                   	// #1
  43cf9c:	mov	w7, #0x22                  	// #34
  43cfa0:	b	43cfbc <argp_parse@@Base+0x90d4>
  43cfa4:	cmp	w1, #0x22
  43cfa8:	b.eq	43d518 <argp_parse@@Base+0x9630>  // b.none
  43cfac:	ldrb	w1, [x3, #1]
  43cfb0:	add	x0, x0, #0x1
  43cfb4:	add	x4, x3, #0x1
  43cfb8:	cbz	w1, 43cfe0 <argp_parse@@Base+0x90f8>
  43cfbc:	mov	x3, x4
  43cfc0:	cmp	w1, #0x5c
  43cfc4:	b.ne	43cfa4 <argp_parse@@Base+0x90bc>  // b.any
  43cfc8:	ldrb	w1, [x4, #1]
  43cfcc:	add	x3, x4, #0x1
  43cfd0:	cmp	w1, #0x5c
  43cfd4:	ccmp	w1, w7, #0x4, ne  // ne = any
  43cfd8:	b.eq	43cfac <argp_parse@@Base+0x90c4>  // b.none
  43cfdc:	nop
  43cfe0:	mov	x1, x23
  43cfe4:	add	x2, sp, #0x160
  43cfe8:	mov	x0, x19
  43cfec:	bl	44f228 <_obstack_memory_used@@Base+0xd038>
  43cff0:	cbz	x0, 43d640 <argp_parse@@Base+0x9758>
  43cff4:	mov	x20, x19
  43cff8:	mov	x21, #0x0                   	// #0
  43cffc:	ldr	w0, [sp, #368]
  43d000:	add	x12, sp, #0x168
  43d004:	ldrb	w3, [x27]
  43d008:	add	x13, sp, #0x330
  43d00c:	add	x14, sp, #0x350
  43d010:	add	x15, sp, #0x370
  43d014:	ldrsw	x1, [sp, #372]
  43d018:	add	w0, w0, #0x1
  43d01c:	ldpsw	x8, x9, [x12, #-8]
  43d020:	cmp	w3, #0x0
  43d024:	ldpsw	x10, x11, [x12]
  43d028:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d02c:	ldr	w6, [sp, #384]
  43d030:	add	x2, x2, #0x6e0
  43d034:	ldr	w3, [sp, #136]
  43d038:	sxtw	x7, w28
  43d03c:	csel	x27, x2, x27, eq  // eq = none
  43d040:	add	x1, x1, #0x76c
  43d044:	sxtw	x0, w0
  43d048:	mov	w2, #0x2                   	// #2
  43d04c:	mov	w26, #0xa700                	// #42752
  43d050:	stp	x1, xzr, [x13]
  43d054:	and	w3, w3, #0x1
  43d058:	stp	x10, x9, [x14]
  43d05c:	movk	w26, #0x76, lsl #16
  43d060:	mov	w28, #0x9c00                	// #39936
  43d064:	stp	xzr, xzr, [x15]
  43d068:	mov	w23, w26
  43d06c:	mov	w1, #0x10d                 	// #269
  43d070:	stp	x0, x11, [x13, #16]
  43d074:	movk	w28, #0x1da, lsl #16
  43d078:	stp	x8, x7, [x14, #16]
  43d07c:	stp	xzr, xzr, [x15, #16]
  43d080:	str	w6, [sp, #272]
  43d084:	str	x27, [sp, #776]
  43d088:	str	w2, [sp, #804]
  43d08c:	str	xzr, [sp, #912]
  43d090:	str	xzr, [sp, #920]
  43d094:	str	wzr, [sp, #928]
  43d098:	strh	wzr, [sp, #936]
  43d09c:	str	xzr, [sp, #944]
  43d0a0:	str	xzr, [sp, #952]
  43d0a4:	str	xzr, [sp, #960]
  43d0a8:	str	xzr, [sp, #976]
  43d0ac:	strb	w3, [sp, #993]
  43d0b0:	ldr	x0, [sp, #400]
  43d0b4:	str	xzr, [sp, #968]
  43d0b8:	str	xzr, [sp, #984]
  43d0bc:	strb	wzr, [sp, #992]
  43d0c0:	strh	wzr, [sp, #994]
  43d0c4:	str	wzr, [sp, #996]
  43d0c8:	strb	wzr, [sp, #1000]
  43d0cc:	str	x0, [sp, #1008]
  43d0d0:	str	w1, [sp, #1016]
  43d0d4:	str	w6, [sp, #1020]
  43d0d8:	str	xzr, [sp, #1024]
  43d0dc:	sxtw	x0, w26
  43d0e0:	add	w26, w26, w23
  43d0e4:	adds	x3, x22, x0
  43d0e8:	b.vs	43d124 <argp_parse@@Base+0x923c>
  43d0ec:	add	x2, sp, #0x2a0
  43d0f0:	add	x1, sp, #0x1d0
  43d0f4:	mov	x0, x20
  43d0f8:	str	x3, [sp, #464]
  43d0fc:	bl	44f228 <_obstack_memory_used@@Base+0xd038>
  43d100:	cbz	x0, 43d11c <argp_parse@@Base+0x9234>
  43d104:	ldr	x0, [sp, #720]
  43d108:	cbz	x0, 43d11c <argp_parse@@Base+0x9234>
  43d10c:	ldr	w1, [sp, #704]
  43d110:	ldr	w2, [sp, #1020]
  43d114:	cmp	w1, w2
  43d118:	b.ne	43da04 <argp_parse@@Base+0x9b1c>  // b.any
  43d11c:	cmp	w26, w28
  43d120:	b.ne	43d0dc <argp_parse@@Base+0x91f4>  // b.any
  43d124:	ldr	x0, [sp, #1008]
  43d128:	cbz	x0, 43d13c <argp_parse@@Base+0x9254>
  43d12c:	ldr	x1, [sp, #1024]
  43d130:	cbz	x1, 43d13c <argp_parse@@Base+0x9254>
  43d134:	bl	404710 <strcmp@plt>
  43d138:	cbz	w0, 43d5a4 <argp_parse@@Base+0x96bc>
  43d13c:	add	x0, sp, #0x308
  43d140:	bl	43b210 <argp_parse@@Base+0x7328>
  43d144:	cbnz	w0, 43d4d8 <argp_parse@@Base+0x95f0>
  43d148:	ldrb	w0, [sp, #993]
  43d14c:	cbnz	w0, 43d5c8 <argp_parse@@Base+0x96e0>
  43d150:	ldrb	w22, [sp, #936]
  43d154:	cbnz	w22, 43d5b4 <argp_parse@@Base+0x96cc>
  43d158:	add	x4, sp, #0x3b0
  43d15c:	ldp	x3, x2, [x4]
  43d160:	ldp	x1, x0, [x4, #24]
  43d164:	orr	x2, x2, x1
  43d168:	orr	x0, x0, x3
  43d16c:	ldr	x1, [sp, #960]
  43d170:	orr	x0, x0, x2
  43d174:	ldr	x3, [sp, #984]
  43d178:	add	x1, x1, x3
  43d17c:	orr	x0, x0, x1
  43d180:	cmp	x0, #0x1
  43d184:	b.gt	43d488 <argp_parse@@Base+0x95a0>
  43d188:	ldr	x24, [sp, #816]
  43d18c:	tbnz	x24, #63, 43d9d8 <argp_parse@@Base+0x9af0>
  43d190:	ldr	x0, [sp, #824]
  43d194:	cmp	x0, #0x2
  43d198:	b.eq	43d970 <argp_parse@@Base+0x9a88>  // b.none
  43d19c:	cmp	x24, #0x76c
  43d1a0:	sub	x0, x24, #0x76c
  43d1a4:	mov	w23, #0x0                   	// #0
  43d1a8:	b.cs	43d940 <argp_parse@@Base+0x9a58>  // b.hs, b.nlast
  43d1ac:	tbz	x0, #63, 43d944 <argp_parse@@Base+0x9a5c>
  43d1b0:	cmp	x0, w0, sxtw
  43d1b4:	str	w0, [sp, #260]
  43d1b8:	csinc	w23, w23, wzr, eq  // eq = none
  43d1bc:	and	w23, w23, #0x1
  43d1c0:	cbnz	w23, 43d990 <argp_parse@@Base+0x9aa8>
  43d1c4:	ldr	x0, [sp, #832]
  43d1c8:	ldrb	w2, [sp, #993]
  43d1cc:	subs	x0, x0, #0x1
  43d1d0:	str	w0, [sp, #256]
  43d1d4:	cset	w1, vs
  43d1d8:	mov	w3, w0
  43d1dc:	cmp	x0, w0, sxtw
  43d1e0:	csinc	w1, w1, wzr, eq  // eq = none
  43d1e4:	cbnz	w1, 43d9b4 <argp_parse@@Base+0x9acc>
  43d1e8:	ldr	x0, [sp, #840]
  43d1ec:	str	w0, [sp, #252]
  43d1f0:	mov	w6, w0
  43d1f4:	cmp	x0, w0, sxtw
  43d1f8:	cset	w22, ne  // ne = any
  43d1fc:	b.ne	43d9b4 <argp_parse@@Base+0x9acc>  // b.any
  43d200:	ldr	x1, [sp, #976]
  43d204:	cbnz	x1, 43dd3c <argp_parse@@Base+0x9e54>
  43d208:	ldrb	w0, [sp, #937]
  43d20c:	cbz	w0, 43dec4 <argp_parse@@Base+0x9fdc>
  43d210:	ldr	x0, [sp, #944]
  43d214:	cbnz	x0, 43dec4 <argp_parse@@Base+0x9fdc>
  43d218:	ldr	x0, [sp, #952]
  43d21c:	cbz	x0, 43dd3c <argp_parse@@Base+0x9e54>
  43d220:	str	xzr, [sp, #240]
  43d224:	str	wzr, [sp, #248]
  43d228:	str	xzr, [sp, #872]
  43d22c:	cbnz	w2, 43e1b0 <argp_parse@@Base+0xa2c8>
  43d230:	mov	w5, #0x0                   	// #0
  43d234:	mov	w4, #0x0                   	// #0
  43d238:	mov	w0, #0xffffffff            	// #-1
  43d23c:	str	w0, [sp, #272]
  43d240:	ldr	x0, [sp, #960]
  43d244:	cbnz	x0, 43dda8 <argp_parse@@Base+0x9ec0>
  43d248:	ldr	w7, [sp, #272]
  43d24c:	ldr	w8, [sp, #260]
  43d250:	add	x9, sp, #0x130
  43d254:	add	x1, sp, #0xf0
  43d258:	mov	x0, x20
  43d25c:	mov	w27, #0xffffffff            	// #-1
  43d260:	str	w27, [sp, #264]
  43d264:	stp	w4, w5, [x9, #-8]
  43d268:	stp	w2, w6, [x9]
  43d26c:	str	w3, [sp, #312]
  43d270:	str	w8, [sp, #316]
  43d274:	str	w7, [sp, #328]
  43d278:	bl	44f2e8 <_obstack_memory_used@@Base+0xd0f8>
  43d27c:	add	x1, sp, #0xf0
  43d280:	mov	x24, x0
  43d284:	add	x0, sp, #0x128
  43d288:	bl	43a790 <argp_parse@@Base+0x68a8>
  43d28c:	tst	w0, #0xff
  43d290:	b.ne	43daa8 <argp_parse@@Base+0x9bc0>  // b.any
  43d294:	ldr	x0, [sp, #984]
  43d298:	str	x0, [sp, #136]
  43d29c:	cbnz	x0, 43da38 <argp_parse@@Base+0x9b50>
  43d2a0:	add	x5, sp, #0x118
  43d2a4:	add	x8, sp, #0x138
  43d2a8:	ldp	w0, w28, [sp, #240]
  43d2ac:	str	w0, [sp, #152]
  43d2b0:	ldp	w1, w2, [x5, #16]
  43d2b4:	str	w1, [sp, #144]
  43d2b8:	str	w2, [sp, #164]
  43d2bc:	cmp	w1, w0
  43d2c0:	ldrb	w0, [sp, #993]
  43d2c4:	ldp	w4, w24, [sp, #248]
  43d2c8:	ccmp	w2, w28, #0x0, eq  // eq = none
  43d2cc:	ldp	w26, w6, [x5, #-24]
  43d2d0:	ldp	w9, w23, [x8, #-8]
  43d2d4:	ldp	w25, w7, [x8]
  43d2d8:	b.ne	43e424 <argp_parse@@Base+0xa53c>  // b.any
  43d2dc:	cmp	w23, w24
  43d2e0:	ccmp	w9, w4, #0x4, eq  // eq = none
  43d2e4:	b.eq	43e424 <argp_parse@@Base+0xa53c>  // b.none
  43d2e8:	cmp	w25, w26
  43d2ec:	ccmp	w7, w6, #0x0, eq  // eq = none
  43d2f0:	b.ne	43e424 <argp_parse@@Base+0xa53c>  // b.any
  43d2f4:	cbz	w0, 43d488 <argp_parse@@Base+0x95a0>
  43d2f8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d2fc:	add	x1, x1, #0x98
  43d300:	mov	w2, #0x5                   	// #5
  43d304:	mov	x0, #0x0                   	// #0
  43d308:	bl	4049c0 <dcgettext@plt>
  43d30c:	add	x27, sp, #0x2a0
  43d310:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d314:	mov	w2, #0x5                   	// #5
  43d318:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d31c:	mov	x0, #0x0                   	// #0
  43d320:	add	x1, x1, #0xc0
  43d324:	bl	4049c0 <dcgettext@plt>
  43d328:	mov	x22, x0
  43d32c:	mov	x2, x27
  43d330:	add	x1, sp, #0x308
  43d334:	add	x0, sp, #0x128
  43d338:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43d33c:	mov	x1, x0
  43d340:	mov	x0, x22
  43d344:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d348:	mov	w2, #0x5                   	// #5
  43d34c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d350:	mov	x0, #0x0                   	// #0
  43d354:	add	x1, x1, #0xe0
  43d358:	bl	4049c0 <dcgettext@plt>
  43d35c:	mov	x22, x0
  43d360:	mov	x2, x27
  43d364:	add	x1, sp, #0x308
  43d368:	add	x0, sp, #0xf0
  43d36c:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43d370:	mov	x1, x0
  43d374:	mov	x0, x22
  43d378:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d37c:	mov	w22, #0x1                   	// #1
  43d380:	adrp	x7, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  43d384:	add	x7, x7, #0x948
  43d388:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d38c:	mov	x6, x7
  43d390:	mov	x5, x7
  43d394:	add	x0, x0, #0xd40
  43d398:	ldr	w1, [sp, #164]
  43d39c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d3a0:	ldr	w3, [sp, #144]
  43d3a4:	add	x2, x2, #0xd40
  43d3a8:	ldr	w4, [sp, #152]
  43d3ac:	cmp	w1, w28
  43d3b0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  43d3b4:	add	x1, x1, #0x948
  43d3b8:	str	x0, [sp]
  43d3bc:	csel	x0, x1, x2, eq  // eq = none
  43d3c0:	cmp	w3, w4
  43d3c4:	mov	x3, #0x64                  	// #100
  43d3c8:	csel	x1, x1, x2, eq  // eq = none
  43d3cc:	stp	x0, x1, [sp, #8]
  43d3d0:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d3d4:	mov	x1, x3
  43d3d8:	add	x4, x4, #0x100
  43d3dc:	mov	x0, x27
  43d3e0:	mov	w2, #0x1                   	// #1
  43d3e4:	bl	404290 <__snprintf_chk@plt>
  43d3e8:	mov	x0, #0x34                  	// #52
  43d3ec:	b	43d400 <argp_parse@@Base+0x9518>
  43d3f0:	sub	x0, x0, #0x1
  43d3f4:	ldrb	w1, [x27, x0]
  43d3f8:	cmp	w1, #0x20
  43d3fc:	b.ne	43d408 <argp_parse@@Base+0x9520>  // b.any
  43d400:	mov	w2, w0
  43d404:	cbnz	w0, 43d3f0 <argp_parse@@Base+0x9508>
  43d408:	mov	x1, x27
  43d40c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43d410:	add	x0, x0, #0xe18
  43d414:	strb	wzr, [x27, w2, sxtw]
  43d418:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d41c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d420:	add	x1, x1, #0x140
  43d424:	mov	w2, #0x5                   	// #5
  43d428:	mov	x0, #0x0                   	// #0
  43d42c:	bl	4049c0 <dcgettext@plt>
  43d430:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d434:	cbnz	w22, 43e5d4 <argp_parse@@Base+0xa6ec>
  43d438:	cmp	w23, w24
  43d43c:	ccmp	w25, w26, #0x4, ne  // ne = any
  43d440:	b.ne	43e5b8 <argp_parse@@Base+0xa6d0>  // b.any
  43d444:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d448:	add	x1, x1, #0x1b8
  43d44c:	mov	w2, #0x5                   	// #5
  43d450:	mov	x0, #0x0                   	// #0
  43d454:	bl	4049c0 <dcgettext@plt>
  43d458:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d45c:	ldr	x0, [sp, #136]
  43d460:	cbz	x0, 43e558 <argp_parse@@Base+0xa670>
  43d464:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d468:	add	x1, x1, #0x1e0
  43d46c:	mov	w2, #0x5                   	// #5
  43d470:	mov	x0, #0x0                   	// #0
  43d474:	bl	4049c0 <dcgettext@plt>
  43d478:	mov	x1, x0
  43d47c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d480:	add	x0, x0, #0x210
  43d484:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d488:	mov	w22, #0x0                   	// #0
  43d48c:	cmp	x20, x19
  43d490:	b.eq	43d49c <argp_parse@@Base+0x95b4>  // b.none
  43d494:	mov	x0, x20
  43d498:	bl	44f218 <_obstack_memory_used@@Base+0xd028>
  43d49c:	mov	x0, x21
  43d4a0:	bl	4047b0 <free@plt>
  43d4a4:	mov	w0, w22
  43d4a8:	ldp	x29, x30, [sp, #32]
  43d4ac:	ldp	x19, x20, [sp, #48]
  43d4b0:	ldp	x21, x22, [sp, #64]
  43d4b4:	ldp	x23, x24, [sp, #80]
  43d4b8:	ldp	x25, x26, [sp, #96]
  43d4bc:	ldp	x27, x28, [sp, #112]
  43d4c0:	add	sp, sp, #0x420
  43d4c4:	ret
  43d4c8:	cmp	w0, #0x20
  43d4cc:	b.ne	43cf6c <argp_parse@@Base+0x9084>  // b.any
  43d4d0:	add	x27, x27, #0x1
  43d4d4:	b	43cf58 <argp_parse@@Base+0x9070>
  43d4d8:	ldrb	w22, [sp, #993]
  43d4dc:	cbz	w22, 43d48c <argp_parse@@Base+0x95a4>
  43d4e0:	ldr	x1, [sp, #152]
  43d4e4:	ldr	x0, [sp, #776]
  43d4e8:	add	x24, x24, x1
  43d4ec:	cmp	x0, x24
  43d4f0:	b.cc	43d66c <argp_parse@@Base+0x9784>  // b.lo, b.ul, b.last
  43d4f4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d4f8:	mov	w2, #0x5                   	// #5
  43d4fc:	add	x1, x1, #0xd50
  43d500:	mov	x0, #0x0                   	// #0
  43d504:	bl	4049c0 <dcgettext@plt>
  43d508:	ldr	x1, [sp, #776]
  43d50c:	mov	w22, #0x0                   	// #0
  43d510:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d514:	b	43d48c <argp_parse@@Base+0x95a4>
  43d518:	add	x25, sp, #0x238
  43d51c:	cmp	x0, #0x64
  43d520:	mov	x21, #0x0                   	// #0
  43d524:	b.gt	43d630 <argp_parse@@Base+0x9748>
  43d528:	mov	x1, x25
  43d52c:	cmp	w20, #0x22
  43d530:	b.eq	43d55c <argp_parse@@Base+0x9674>  // b.none
  43d534:	nop
  43d538:	cmp	w20, #0x5c
  43d53c:	cset	w3, eq  // eq = none
  43d540:	cinc	x0, x26, eq  // eq = none
  43d544:	ldrb	w3, [x26, w3, uxtw]
  43d548:	add	x26, x0, #0x1
  43d54c:	ldrb	w20, [x0, #1]
  43d550:	strb	w3, [x1], #1
  43d554:	cmp	w20, #0x22
  43d558:	b.ne	43d538 <argp_parse@@Base+0x9650>  // b.any
  43d55c:	strb	wzr, [x1]
  43d560:	mov	x0, x25
  43d564:	bl	44eef0 <_obstack_memory_used@@Base+0xcd00>
  43d568:	mov	x20, x0
  43d56c:	cbz	x0, 43d8f4 <argp_parse@@Base+0x9a0c>
  43d570:	add	x27, x26, #0x1
  43d574:	ldrb	w0, [x27]
  43d578:	cmp	w0, #0xd
  43d57c:	b.hi	43d64c <argp_parse@@Base+0x9764>  // b.pmore
  43d580:	cmp	w0, #0x8
  43d584:	b.hi	43d654 <argp_parse@@Base+0x976c>  // b.pmore
  43d588:	mov	x1, x23
  43d58c:	add	x2, sp, #0x160
  43d590:	mov	x0, x20
  43d594:	bl	44f228 <_obstack_memory_used@@Base+0xd038>
  43d598:	cbnz	x0, 43cffc <argp_parse@@Base+0x9114>
  43d59c:	mov	w22, #0x0                   	// #0
  43d5a0:	b	43d48c <argp_parse@@Base+0x95a4>
  43d5a4:	mov	w0, #0xffffffff            	// #-1
  43d5a8:	str	w0, [sp, #1020]
  43d5ac:	str	xzr, [sp, #1024]
  43d5b0:	b	43d13c <argp_parse@@Base+0x9254>
  43d5b4:	add	x0, sp, #0x440
  43d5b8:	ldr	x2, [sp, #144]
  43d5bc:	ldp	x0, x1, [x0, #-224]
  43d5c0:	stp	x0, x1, [x2]
  43d5c4:	b	43d48c <argp_parse@@Base+0x95a4>
  43d5c8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d5cc:	add	x1, x1, #0xd90
  43d5d0:	mov	w2, #0x5                   	// #5
  43d5d4:	mov	x0, #0x0                   	// #0
  43d5d8:	bl	4049c0 <dcgettext@plt>
  43d5dc:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d5e0:	ldrb	w0, [sp, #936]
  43d5e4:	cbnz	w0, 43d684 <argp_parse@@Base+0x979c>
  43d5e8:	ldr	x0, [sp, #984]
  43d5ec:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43d5f0:	ldr	x23, [x22, #1096]
  43d5f4:	cbnz	x0, 43d9f4 <argp_parse@@Base+0x9b0c>
  43d5f8:	cbz	x25, 43dd98 <argp_parse@@Base+0x9eb0>
  43d5fc:	cmp	x19, x20
  43d600:	b.eq	43d94c <argp_parse@@Base+0x9a64>  // b.none
  43d604:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d608:	add	x1, x1, #0xde0
  43d60c:	mov	w2, #0x5                   	// #5
  43d610:	mov	x0, #0x0                   	// #0
  43d614:	bl	4049c0 <dcgettext@plt>
  43d618:	mov	x3, x25
  43d61c:	mov	x2, x0
  43d620:	mov	w1, #0x1                   	// #1
  43d624:	mov	x0, x23
  43d628:	bl	404700 <__fprintf_chk@plt>
  43d62c:	b	43d6b0 <argp_parse@@Base+0x97c8>
  43d630:	bl	404310 <malloc@plt>
  43d634:	mov	x25, x0
  43d638:	mov	x21, x0
  43d63c:	cbnz	x0, 43d528 <argp_parse@@Base+0x9640>
  43d640:	mov	x21, #0x0                   	// #0
  43d644:	mov	w22, #0x0                   	// #0
  43d648:	b	43d49c <argp_parse@@Base+0x95b4>
  43d64c:	cmp	w0, #0x20
  43d650:	b.ne	43d588 <argp_parse@@Base+0x96a0>  // b.any
  43d654:	add	x27, x27, #0x1
  43d658:	b	43d574 <argp_parse@@Base+0x968c>
  43d65c:	add	x23, sp, #0xc0
  43d660:	mov	x0, x23
  43d664:	bl	437e58 <argp_parse@@Base+0x3f70>
  43d668:	b	43cf50 <argp_parse@@Base+0x9068>
  43d66c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d670:	mov	w2, #0x5                   	// #5
  43d674:	add	x1, x1, #0xd68
  43d678:	mov	x0, #0x0                   	// #0
  43d67c:	bl	4049c0 <dcgettext@plt>
  43d680:	b	43d508 <argp_parse@@Base+0x9620>
  43d684:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43d688:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d68c:	add	x1, x1, #0xda8
  43d690:	mov	w2, #0x5                   	// #5
  43d694:	ldr	x23, [x22, #1096]
  43d698:	mov	x0, #0x0                   	// #0
  43d69c:	bl	4049c0 <dcgettext@plt>
  43d6a0:	mov	x2, x0
  43d6a4:	mov	w1, #0x1                   	// #1
  43d6a8:	mov	x0, x23
  43d6ac:	bl	404700 <__fprintf_chk@plt>
  43d6b0:	ldr	x1, [sp, #960]
  43d6b4:	ldr	x23, [x22, #1096]
  43d6b8:	ldr	x0, [sp, #984]
  43d6bc:	cbz	x1, 43d848 <argp_parse@@Base+0x9960>
  43d6c0:	cbz	x0, 43d818 <argp_parse@@Base+0x9930>
  43d6c4:	ldr	w0, [sp, #800]
  43d6c8:	add	x1, sp, #0xd0
  43d6cc:	bl	43a800 <argp_parse@@Base+0x6918>
  43d6d0:	mov	x3, x0
  43d6d4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d6d8:	mov	x0, x23
  43d6dc:	add	x2, x2, #0xe60
  43d6e0:	mov	w1, #0x1                   	// #1
  43d6e4:	bl	404700 <__fprintf_chk@plt>
  43d6e8:	ldr	x23, [x22, #1096]
  43d6ec:	mov	x1, x23
  43d6f0:	mov	w0, #0xa                   	// #10
  43d6f4:	bl	404170 <fputc@plt>
  43d6f8:	ldrb	w0, [sp, #936]
  43d6fc:	ldrb	w22, [sp, #993]
  43d700:	cbz	w0, 43d850 <argp_parse@@Base+0x9968>
  43d704:	add	x0, sp, #0x440
  43d708:	ldr	x2, [sp, #144]
  43d70c:	ldp	x0, x1, [x0, #-224]
  43d710:	stp	x0, x1, [x2]
  43d714:	cbz	w22, 43dd34 <argp_parse@@Base+0x9e4c>
  43d718:	cbz	x25, 43da1c <argp_parse@@Base+0x9b34>
  43d71c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d720:	mov	x0, x25
  43d724:	add	x1, x1, #0xdf8
  43d728:	bl	404710 <strcmp@plt>
  43d72c:	cbnz	w0, 43d8d4 <argp_parse@@Base+0x99ec>
  43d730:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d734:	add	x1, x1, #0x6d8
  43d738:	mov	w2, #0x5                   	// #5
  43d73c:	mov	x0, #0x0                   	// #0
  43d740:	bl	4049c0 <dcgettext@plt>
  43d744:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d748:	ldr	x25, [sp, #144]
  43d74c:	mov	w2, #0x5                   	// #5
  43d750:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d754:	mov	x0, #0x0                   	// #0
  43d758:	add	x1, x1, #0x720
  43d75c:	ldp	x23, x24, [x25]
  43d760:	bl	4049c0 <dcgettext@plt>
  43d764:	mov	w2, w24
  43d768:	mov	x1, x23
  43d76c:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d770:	add	x1, sp, #0x198
  43d774:	mov	x0, x25
  43d778:	bl	404450 <gmtime_r@plt>
  43d77c:	cbz	x0, 43d7b4 <argp_parse@@Base+0x98cc>
  43d780:	mov	w2, #0x5                   	// #5
  43d784:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d788:	mov	x0, #0x0                   	// #0
  43d78c:	add	x1, x1, #0x748
  43d790:	bl	4049c0 <dcgettext@plt>
  43d794:	mov	x23, x0
  43d798:	add	x2, sp, #0x1d0
  43d79c:	mov	x1, #0x0                   	// #0
  43d7a0:	add	x0, sp, #0x198
  43d7a4:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43d7a8:	mov	x1, x0
  43d7ac:	mov	x0, x23
  43d7b0:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d7b4:	ldr	x1, [sp, #144]
  43d7b8:	add	x2, sp, #0x2a0
  43d7bc:	mov	x0, x20
  43d7c0:	bl	44f228 <_obstack_memory_used@@Base+0xd038>
  43d7c4:	cbz	x0, 43d48c <argp_parse@@Base+0x95a4>
  43d7c8:	mov	w2, #0x5                   	// #5
  43d7cc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d7d0:	mov	x0, #0x0                   	// #0
  43d7d4:	add	x1, x1, #0x760
  43d7d8:	ldr	x25, [sp, #712]
  43d7dc:	bl	4049c0 <dcgettext@plt>
  43d7e0:	add	x2, sp, #0x1d0
  43d7e4:	mov	x23, x0
  43d7e8:	mov	x1, #0x0                   	// #0
  43d7ec:	add	x0, sp, #0x2a0
  43d7f0:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43d7f4:	mov	x24, x0
  43d7f8:	add	x1, sp, #0xd0
  43d7fc:	mov	w0, w25
  43d800:	bl	43a800 <argp_parse@@Base+0x6918>
  43d804:	mov	x2, x0
  43d808:	mov	x1, x24
  43d80c:	mov	x0, x23
  43d810:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d814:	b	43d48c <argp_parse@@Base+0x95a4>
  43d818:	ldr	w0, [sp, #796]
  43d81c:	cmp	w0, #0x0
  43d820:	b.le	43d6ec <argp_parse@@Base+0x9804>
  43d824:	mov	x3, x23
  43d828:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d82c:	mov	x2, #0x5                   	// #5
  43d830:	add	x0, x0, #0xe58
  43d834:	mov	x1, #0x1                   	// #1
  43d838:	bl	4048b0 <fwrite@plt>
  43d83c:	ldr	x23, [x22, #1096]
  43d840:	ldr	x0, [sp, #984]
  43d844:	nop
  43d848:	cbz	x0, 43d6ec <argp_parse@@Base+0x9804>
  43d84c:	b	43d6c4 <argp_parse@@Base+0x97dc>
  43d850:	add	x10, sp, #0x3b0
  43d854:	ldr	x4, [sp, #984]
  43d858:	ldp	x2, x0, [x10]
  43d85c:	ldp	x1, x3, [x10, #24]
  43d860:	orr	x0, x0, x1
  43d864:	orr	x5, x3, x2
  43d868:	ldr	x1, [sp, #960]
  43d86c:	orr	x0, x0, x5
  43d870:	add	x1, x1, x4
  43d874:	orr	x0, x0, x1
  43d878:	cmp	x0, #0x1
  43d87c:	b.le	43d188 <argp_parse@@Base+0x92a0>
  43d880:	cbz	w22, 43d488 <argp_parse@@Base+0x95a0>
  43d884:	cmp	x3, #0x1
  43d888:	b.gt	43d92c <argp_parse@@Base+0x9a44>
  43d88c:	cmp	x2, #0x1
  43d890:	b.gt	43d91c <argp_parse@@Base+0x9a34>
  43d894:	ldr	x0, [sp, #952]
  43d898:	cmp	x0, #0x1
  43d89c:	b.gt	43d90c <argp_parse@@Base+0x9a24>
  43d8a0:	ldr	x0, [sp, #968]
  43d8a4:	cmp	x0, #0x1
  43d8a8:	b.gt	43d8fc <argp_parse@@Base+0x9a14>
  43d8ac:	ldr	x0, [sp, #960]
  43d8b0:	ldr	x1, [sp, #984]
  43d8b4:	add	x0, x0, x1
  43d8b8:	cmp	x0, #0x1
  43d8bc:	b.le	43d488 <argp_parse@@Base+0x95a0>
  43d8c0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d8c4:	mov	w22, #0x0                   	// #0
  43d8c8:	add	x0, x0, #0xf10
  43d8cc:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d8d0:	b	43d48c <argp_parse@@Base+0x95a4>
  43d8d4:	mov	w2, #0x5                   	// #5
  43d8d8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43d8dc:	mov	x0, #0x0                   	// #0
  43d8e0:	add	x1, x1, #0x6f8
  43d8e4:	bl	4049c0 <dcgettext@plt>
  43d8e8:	mov	x1, x25
  43d8ec:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d8f0:	b	43d748 <argp_parse@@Base+0x9860>
  43d8f4:	mov	w22, #0x0                   	// #0
  43d8f8:	b	43d49c <argp_parse@@Base+0x95b4>
  43d8fc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d900:	add	x0, x0, #0xee0
  43d904:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d908:	b	43d8ac <argp_parse@@Base+0x99c4>
  43d90c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d910:	add	x0, x0, #0xeb8
  43d914:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d918:	b	43d8a0 <argp_parse@@Base+0x99b8>
  43d91c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d920:	add	x0, x0, #0xe90
  43d924:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d928:	b	43d894 <argp_parse@@Base+0x99ac>
  43d92c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d930:	add	x0, x0, #0xe68
  43d934:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d938:	ldr	x2, [sp, #944]
  43d93c:	b	43d88c <argp_parse@@Base+0x99a4>
  43d940:	tbz	x0, #63, 43d1b0 <argp_parse@@Base+0x92c8>
  43d944:	mov	w23, #0x1                   	// #1
  43d948:	b	43d1b0 <argp_parse@@Base+0x92c8>
  43d94c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d950:	mov	x0, x25
  43d954:	add	x1, x1, #0xdf8
  43d958:	bl	404710 <strcmp@plt>
  43d95c:	cbnz	w0, 43dd88 <argp_parse@@Base+0x9ea0>
  43d960:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d964:	mov	w2, #0x5                   	// #5
  43d968:	add	x1, x1, #0xe00
  43d96c:	b	43d698 <argp_parse@@Base+0x97b0>
  43d970:	cmp	x24, #0x45
  43d974:	mov	x23, #0x7d0                 	// #2000
  43d978:	mov	x0, #0x76c                 	// #1900
  43d97c:	csel	x23, x23, x0, lt  // lt = tstop
  43d980:	add	x23, x24, x23
  43d984:	cbnz	w22, 43e0e4 <argp_parse@@Base+0xa1fc>
  43d988:	mov	x24, x23
  43d98c:	b	43d19c <argp_parse@@Base+0x92b4>
  43d990:	cbz	w22, 43d9b0 <argp_parse@@Base+0x9ac8>
  43d994:	mov	w2, #0x5                   	// #5
  43d998:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d99c:	mov	x0, #0x0                   	// #0
  43d9a0:	add	x1, x1, #0xf68
  43d9a4:	bl	4049c0 <dcgettext@plt>
  43d9a8:	mov	x1, x24
  43d9ac:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d9b0:	ldrb	w2, [sp, #993]
  43d9b4:	cbz	w2, 43d488 <argp_parse@@Base+0x95a0>
  43d9b8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d9bc:	add	x1, x1, #0xf88
  43d9c0:	mov	w2, #0x5                   	// #5
  43d9c4:	mov	x0, #0x0                   	// #0
  43d9c8:	mov	w22, #0x0                   	// #0
  43d9cc:	bl	4049c0 <dcgettext@plt>
  43d9d0:	bl	43a980 <argp_parse@@Base+0x6a98>
  43d9d4:	b	43d48c <argp_parse@@Base+0x95a4>
  43d9d8:	mov	x0, #0xfffffffffffff894    	// #-1900
  43d9dc:	subs	x0, x0, x24
  43d9e0:	cset	w23, vs
  43d9e4:	str	w0, [sp, #260]
  43d9e8:	cmp	x0, w0, sxtw
  43d9ec:	csinc	w23, w23, wzr, eq  // eq = none
  43d9f0:	b	43d1c0 <argp_parse@@Base+0x92d8>
  43d9f4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43d9f8:	mov	w2, #0x5                   	// #5
  43d9fc:	add	x1, x1, #0xdc8
  43da00:	b	43d698 <argp_parse@@Base+0x97b0>
  43da04:	mov	w2, #0x10d                 	// #269
  43da08:	str	x0, [sp, #1024]
  43da0c:	str	w2, [sp, #1032]
  43da10:	str	w1, [sp, #1036]
  43da14:	str	xzr, [sp, #1040]
  43da18:	b	43d124 <argp_parse@@Base+0x923c>
  43da1c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43da20:	add	x1, x1, #0x6b8
  43da24:	mov	w2, #0x5                   	// #5
  43da28:	mov	x0, #0x0                   	// #0
  43da2c:	bl	4049c0 <dcgettext@plt>
  43da30:	bl	43a980 <argp_parse@@Base+0x6a98>
  43da34:	b	43d748 <argp_parse@@Base+0x9860>
  43da38:	ldr	w0, [sp, #800]
  43da3c:	mov	w3, #0x5858                	// #22616
  43da40:	mov	w2, #0x58                  	// #88
  43da44:	add	x1, sp, #0x2a3
  43da48:	strh	w3, [sp, #672]
  43da4c:	strb	w2, [sp, #674]
  43da50:	bl	43a800 <argp_parse@@Base+0x6918>
  43da54:	add	x0, sp, #0x2a0
  43da58:	bl	44eef0 <_obstack_memory_used@@Base+0xcd00>
  43da5c:	mov	x28, x0
  43da60:	cbz	x0, 43e530 <argp_parse@@Base+0xa648>
  43da64:	ldp	x3, x2, [sp, #296]
  43da68:	stp	x3, x2, [sp, #240]
  43da6c:	ldr	w2, [sp, #328]
  43da70:	ldr	x3, [sp, #312]
  43da74:	add	x1, sp, #0xf0
  43da78:	str	x3, [sp, #256]
  43da7c:	str	w27, [sp, #264]
  43da80:	str	w2, [sp, #272]
  43da84:	bl	44f2e8 <_obstack_memory_used@@Base+0xd0f8>
  43da88:	add	x1, sp, #0xf0
  43da8c:	mov	x24, x0
  43da90:	add	x0, sp, #0x128
  43da94:	bl	43a790 <argp_parse@@Base+0x68a8>
  43da98:	and	w27, w0, #0xff
  43da9c:	mov	x0, x28
  43daa0:	bl	44f218 <_obstack_memory_used@@Base+0xd028>
  43daa4:	cbz	w27, 43d2a0 <argp_parse@@Base+0x93b8>
  43daa8:	ldr	x0, [sp, #952]
  43daac:	cbz	x0, 43ddfc <argp_parse@@Base+0x9f14>
  43dab0:	ldr	x0, [sp, #944]
  43dab4:	cbnz	x0, 43e154 <argp_parse@@Base+0xa26c>
  43dab8:	ldr	x0, [sp, #784]
  43dabc:	cmp	x0, #0x0
  43dac0:	b.le	43dad8 <argp_parse@@Base+0x9bf0>
  43dac4:	ldr	w1, [sp, #792]
  43dac8:	ldr	w2, [sp, #264]
  43dacc:	cmp	w2, w1
  43dad0:	cset	x1, ne  // ne = any
  43dad4:	sub	x0, x0, x1
  43dad8:	asr	x1, x0, #63
  43dadc:	lsl	x2, x0, #3
  43dae0:	subs	x2, x2, x0
  43dae4:	extr	x0, x1, x0, #61
  43dae8:	sbc	x0, x0, x1
  43daec:	cmp	x0, x2, asr #63
  43daf0:	b.ne	43e1c0 <argp_parse@@Base+0xa2d8>  // b.any
  43daf4:	ldr	w3, [sp, #264]
  43daf8:	mov	w1, #0x2493                	// #9363
  43dafc:	ldr	w0, [sp, #792]
  43db00:	movk	w1, #0x9249, lsl #16
  43db04:	sub	w0, w0, w3
  43db08:	add	w0, w0, #0x7
  43db0c:	smull	x1, w0, w1
  43db10:	lsr	x1, x1, #32
  43db14:	add	w1, w0, w1
  43db18:	asr	w1, w1, #2
  43db1c:	sub	w1, w1, w0, asr #31
  43db20:	lsl	w3, w1, #3
  43db24:	sub	w1, w3, w1
  43db28:	sub	w0, w0, w1
  43db2c:	sxtw	x0, w0
  43db30:	adds	x0, x0, x2
  43db34:	b.vs	43e1c0 <argp_parse@@Base+0xa2d8>
  43db38:	ldrsw	x1, [sp, #252]
  43db3c:	adds	x0, x0, x1
  43db40:	str	w0, [sp, #252]
  43db44:	cset	w1, vs
  43db48:	cmp	x0, w0, sxtw
  43db4c:	csinc	w1, w1, wzr, eq  // eq = none
  43db50:	cbnz	w1, 43e1c0 <argp_parse@@Base+0xa2d8>
  43db54:	mov	w2, #0xffffffff            	// #-1
  43db58:	add	x1, sp, #0xf0
  43db5c:	mov	x0, x20
  43db60:	str	w2, [sp, #272]
  43db64:	bl	44f2e8 <_obstack_memory_used@@Base+0xd0f8>
  43db68:	mov	x24, x0
  43db6c:	cmn	x0, #0x1
  43db70:	b.eq	43e1c0 <argp_parse@@Base+0xa2d8>  // b.none
  43db74:	ldrb	w1, [sp, #993]
  43db78:	cbnz	w1, 43ddb4 <argp_parse@@Base+0x9ecc>
  43db7c:	ldr	x0, [sp, #880]
  43db80:	ldr	x28, [sp, #888]
  43db84:	ldr	x3, [sp, #896]
  43db88:	orr	x2, x28, x0
  43db8c:	orr	x2, x2, x3
  43db90:	cbz	x2, 43e034 <argp_parse@@Base+0xa14c>
  43db94:	ldrsw	x27, [sp, #260]
  43db98:	adds	x27, x27, x0
  43db9c:	cset	w0, vs
  43dba0:	cmp	x27, w27, sxtw
  43dba4:	b.ne	43d488 <argp_parse@@Base+0x95a0>  // b.any
  43dba8:	cbnz	w0, 43d488 <argp_parse@@Base+0x95a0>
  43dbac:	ldrsw	x0, [sp, #256]
  43dbb0:	adds	x28, x0, x28
  43dbb4:	cset	w0, vs
  43dbb8:	cmp	x28, w28, sxtw
  43dbbc:	b.ne	43e10c <argp_parse@@Base+0xa224>  // b.any
  43dbc0:	cbnz	w0, 43e10c <argp_parse@@Base+0xa224>
  43dbc4:	ldr	x0, [sp, #896]
  43dbc8:	ldrsw	x22, [sp, #252]
  43dbcc:	adds	x22, x22, x0
  43dbd0:	cset	w0, vs
  43dbd4:	cmp	x22, w22, sxtw
  43dbd8:	b.ne	43e10c <argp_parse@@Base+0xa224>  // b.any
  43dbdc:	cbnz	w0, 43e10c <argp_parse@@Base+0xa224>
  43dbe0:	ldr	w3, [sp, #304]
  43dbe4:	add	x1, sp, #0xf0
  43dbe8:	ldr	w2, [sp, #328]
  43dbec:	mov	x0, x20
  43dbf0:	ldr	x4, [sp, #296]
  43dbf4:	str	x4, [sp, #240]
  43dbf8:	stp	w3, w22, [sp, #248]
  43dbfc:	str	w28, [sp, #256]
  43dc00:	str	w27, [sp, #260]
  43dc04:	str	w2, [sp, #272]
  43dc08:	bl	44f2e8 <_obstack_memory_used@@Base+0xd0f8>
  43dc0c:	mov	x24, x0
  43dc10:	cmn	x0, #0x1
  43dc14:	b.eq	43e574 <argp_parse@@Base+0xa68c>  // b.none
  43dc18:	ldrb	w1, [sp, #993]
  43dc1c:	mov	w2, w1
  43dc20:	cbnz	w1, 43dee4 <argp_parse@@Base+0x9ffc>
  43dc24:	ldr	x0, [sp, #984]
  43dc28:	cbz	x0, 43dc4c <argp_parse@@Base+0x9d64>
  43dc2c:	ldr	x3, [sp, #280]
  43dc30:	ldrsw	x0, [sp, #800]
  43dc34:	subs	x0, x0, x3
  43dc38:	cset	x3, vs
  43dc3c:	subs	x24, x24, x0
  43dc40:	csinc	x0, x3, xzr, vc
  43dc44:	cbnz	x0, 43d488 <argp_parse@@Base+0x95a0>
  43dc48:	cbnz	w2, 43e2bc <argp_parse@@Base+0xa3d4>
  43dc4c:	ldr	x4, [sp, #904]
  43dc50:	mov	x0, #0xe10                 	// #3600
  43dc54:	mul	x2, x4, x0
  43dc58:	smulh	x0, x4, x0
  43dc5c:	cmp	x0, x2, asr #63
  43dc60:	b.ne	43d488 <argp_parse@@Base+0x95a0>  // b.any
  43dc64:	ldr	x0, [sp, #872]
  43dc68:	mov	x5, #0x94b3                	// #38067
  43dc6c:	ldrsw	x6, [sp, #928]
  43dc70:	movk	x5, #0x26d6, lsl #16
  43dc74:	movk	x5, #0xbe8, lsl #32
  43dc78:	adds	x2, x24, x2
  43dc7c:	add	x0, x6, x0
  43dc80:	movk	x5, #0x112e, lsl #48
  43dc84:	mov	x3, x2
  43dc88:	mov	x7, #0xca00                	// #51712
  43dc8c:	movk	x7, #0x3b9a, lsl #16
  43dc90:	mov	x8, #0x5a53                	// #23123
  43dc94:	smulh	x2, x0, x5
  43dc98:	movk	x8, #0xa09b, lsl #16
  43dc9c:	orr	x6, x6, x4
  43dca0:	movk	x8, #0xb82f, lsl #32
  43dca4:	movk	x8, #0x44, lsl #48
  43dca8:	asr	x2, x2, #26
  43dcac:	sub	x2, x2, x0, asr #63
  43dcb0:	msub	x2, x2, x7, x0
  43dcb4:	add	x2, x2, x7
  43dcb8:	lsr	x4, x2, #9
  43dcbc:	umulh	x4, x4, x8
  43dcc0:	lsr	x4, x4, #11
  43dcc4:	msub	x4, x4, x7, x2
  43dcc8:	sub	x0, x0, x4
  43dccc:	smulh	x2, x0, x5
  43dcd0:	asr	x2, x2, #26
  43dcd4:	sub	x0, x2, x0, asr #63
  43dcd8:	b.vs	43d488 <argp_parse@@Base+0x95a0>
  43dcdc:	ldr	x5, [sp, #912]
  43dce0:	mov	x7, #0x3c                  	// #60
  43dce4:	mul	x2, x5, x7
  43dce8:	smulh	x7, x5, x7
  43dcec:	cmp	x7, x2, asr #63
  43dcf0:	b.ne	43d488 <argp_parse@@Base+0x95a0>  // b.any
  43dcf4:	adds	x2, x3, x2
  43dcf8:	b.vs	43e22c <argp_parse@@Base+0xa344>
  43dcfc:	ldr	x3, [sp, #920]
  43dd00:	orr	x5, x3, x5
  43dd04:	adds	x2, x2, x3
  43dd08:	b.vs	43e22c <argp_parse@@Base+0xa344>
  43dd0c:	sxtw	x0, w0
  43dd10:	adds	x22, x2, x0
  43dd14:	b.vs	43e22c <argp_parse@@Base+0xa344>
  43dd18:	ldr	x0, [sp, #144]
  43dd1c:	stp	x22, x4, [x0]
  43dd20:	cbz	w23, 43dd2c <argp_parse@@Base+0x9e44>
  43dd24:	orr	x0, x5, x6
  43dd28:	cbnz	x0, 43e5f0 <argp_parse@@Base+0xa708>
  43dd2c:	mov	w22, w1
  43dd30:	b	43d714 <argp_parse@@Base+0x982c>
  43dd34:	mov	w22, #0x1                   	// #1
  43dd38:	b	43d48c <argp_parse@@Base+0x95a4>
  43dd3c:	ldr	w4, [sp, #804]
  43dd40:	ldr	x0, [sp, #848]
  43dd44:	cbz	w4, 43e194 <argp_parse@@Base+0xa2ac>
  43dd48:	cmp	w4, #0x1
  43dd4c:	b.eq	43e140 <argp_parse@@Base+0xa258>  // b.none
  43dd50:	cmp	x0, #0x17
  43dd54:	b.hi	43e410 <argp_parse@@Base+0xa528>  // b.pmore
  43dd58:	str	w0, [sp, #248]
  43dd5c:	ldr	x5, [sp, #856]
  43dd60:	ldr	x4, [sp, #864]
  43dd64:	stp	w4, w5, [sp, #240]
  43dd68:	cbnz	w2, 43e080 <argp_parse@@Base+0xa198>
  43dd6c:	ldr	w2, [sp, #248]
  43dd70:	ldr	x0, [sp, #944]
  43dd74:	ldr	x7, [sp, #952]
  43dd78:	orr	x0, x0, x7
  43dd7c:	orr	x0, x0, x1
  43dd80:	cbz	x0, 43d240 <argp_parse@@Base+0x9358>
  43dd84:	b	43d238 <argp_parse@@Base+0x9350>
  43dd88:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43dd8c:	mov	w2, #0x5                   	// #5
  43dd90:	add	x1, x1, #0xe28
  43dd94:	b	43d610 <argp_parse@@Base+0x9728>
  43dd98:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43dd9c:	mov	w2, #0x5                   	// #5
  43dda0:	add	x1, x1, #0xe48
  43dda4:	b	43d698 <argp_parse@@Base+0x97b0>
  43dda8:	ldr	w7, [sp, #796]
  43ddac:	str	w7, [sp, #272]
  43ddb0:	b	43d24c <argp_parse@@Base+0x9364>
  43ddb4:	mov	w2, #0x5                   	// #5
  43ddb8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43ddbc:	mov	x0, #0x0                   	// #0
  43ddc0:	add	x1, x1, #0x270
  43ddc4:	bl	4049c0 <dcgettext@plt>
  43ddc8:	mov	x22, x0
  43ddcc:	add	x1, sp, #0x2a0
  43ddd0:	add	x0, sp, #0x308
  43ddd4:	bl	43ad68 <argp_parse@@Base+0x6e80>
  43ddd8:	mov	x27, x0
  43dddc:	add	x2, sp, #0x1d0
  43dde0:	add	x1, sp, #0x308
  43dde4:	add	x0, sp, #0xf0
  43dde8:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43ddec:	mov	x1, x27
  43ddf0:	mov	x2, x0
  43ddf4:	mov	x0, x22
  43ddf8:	bl	43a980 <argp_parse@@Base+0x6a98>
  43ddfc:	ldrb	w1, [sp, #993]
  43de00:	cbz	w1, 43db7c <argp_parse@@Base+0x9c94>
  43de04:	ldr	x1, [sp, #944]
  43de08:	ldr	x0, [sp, #952]
  43de0c:	cbnz	x1, 43e2b0 <argp_parse@@Base+0xa3c8>
  43de10:	add	x27, sp, #0x1d0
  43de14:	cbz	x0, 43e3a8 <argp_parse@@Base+0xa4c0>
  43de18:	mov	w2, #0x5                   	// #5
  43de1c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43de20:	mov	x0, #0x0                   	// #0
  43de24:	add	x1, x1, #0x318
  43de28:	bl	4049c0 <dcgettext@plt>
  43de2c:	mov	x22, x0
  43de30:	mov	x2, x27
  43de34:	add	x1, sp, #0x308
  43de38:	add	x0, sp, #0xf0
  43de3c:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43de40:	mov	x1, x0
  43de44:	mov	x0, x22
  43de48:	bl	43a980 <argp_parse@@Base+0x6a98>
  43de4c:	ldr	x0, [sp, #880]
  43de50:	ldr	x28, [sp, #888]
  43de54:	ldr	x3, [sp, #896]
  43de58:	orr	x4, x0, x28
  43de5c:	ldrb	w1, [sp, #993]
  43de60:	orr	x5, x4, x3
  43de64:	mov	w2, w1
  43de68:	cbz	x5, 43e034 <argp_parse@@Base+0xa14c>
  43de6c:	cbz	w1, 43db94 <argp_parse@@Base+0x9cac>
  43de70:	cbz	x4, 43e508 <argp_parse@@Base+0xa620>
  43de74:	ldr	w0, [sp, #252]
  43de78:	cmp	w0, #0xf
  43de7c:	b.eq	43de9c <argp_parse@@Base+0x9fb4>  // b.none
  43de80:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43de84:	add	x1, x1, #0x338
  43de88:	mov	w2, #0x5                   	// #5
  43de8c:	mov	x0, #0x0                   	// #0
  43de90:	bl	4049c0 <dcgettext@plt>
  43de94:	bl	43a980 <argp_parse@@Base+0x6a98>
  43de98:	ldr	x3, [sp, #896]
  43de9c:	cbnz	x3, 43e508 <argp_parse@@Base+0xa620>
  43dea0:	ldr	x0, [sp, #880]
  43dea4:	ldrsw	x27, [sp, #260]
  43dea8:	adds	x27, x27, x0
  43deac:	cset	w0, vs
  43deb0:	cmp	x27, w27, sxtw
  43deb4:	b.ne	43e10c <argp_parse@@Base+0xa224>  // b.any
  43deb8:	cbnz	w0, 43e10c <argp_parse@@Base+0xa224>
  43debc:	ldr	x28, [sp, #888]
  43dec0:	b	43dbac <argp_parse@@Base+0x9cc4>
  43dec4:	str	xzr, [sp, #240]
  43dec8:	str	wzr, [sp, #248]
  43decc:	str	xzr, [sp, #872]
  43ded0:	cbnz	w2, 43e1b0 <argp_parse@@Base+0xa2c8>
  43ded4:	mov	w2, #0x0                   	// #0
  43ded8:	mov	w5, #0x0                   	// #0
  43dedc:	mov	w4, #0x0                   	// #0
  43dee0:	b	43dd70 <argp_parse@@Base+0x9e88>
  43dee4:	mov	w2, #0x5                   	// #5
  43dee8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43deec:	mov	x0, #0x0                   	// #0
  43def0:	add	x1, x1, #0x450
  43def4:	bl	4049c0 <dcgettext@plt>
  43def8:	ldr	x1, [sp, #880]
  43defc:	ldr	x2, [sp, #888]
  43df00:	ldr	x3, [sp, #896]
  43df04:	bl	43a980 <argp_parse@@Base+0x6a98>
  43df08:	mov	w2, #0x5                   	// #5
  43df0c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43df10:	mov	x0, #0x0                   	// #0
  43df14:	add	x1, x1, #0x490
  43df18:	bl	4049c0 <dcgettext@plt>
  43df1c:	mov	x3, x0
  43df20:	add	x2, sp, #0x1d0
  43df24:	add	x1, sp, #0x308
  43df28:	add	x0, sp, #0xf0
  43df2c:	str	x3, [sp, #136]
  43df30:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43df34:	mov	x1, x0
  43df38:	ldr	x3, [sp, #136]
  43df3c:	mov	x0, x3
  43df40:	bl	43a980 <argp_parse@@Base+0x6a98>
  43df44:	ldr	w0, [sp, #328]
  43df48:	cmn	w0, #0x1
  43df4c:	b.eq	43df74 <argp_parse@@Base+0xa08c>  // b.none
  43df50:	ldr	w1, [sp, #272]
  43df54:	cmp	w0, w1
  43df58:	b.eq	43df74 <argp_parse@@Base+0xa08c>  // b.none
  43df5c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43df60:	add	x1, x1, #0x4b0
  43df64:	mov	w2, #0x5                   	// #5
  43df68:	mov	x0, #0x0                   	// #0
  43df6c:	bl	4049c0 <dcgettext@plt>
  43df70:	bl	43a980 <argp_parse@@Base+0x6a98>
  43df74:	ldr	x0, [sp, #896]
  43df78:	cbnz	x0, 43e02c <argp_parse@@Base+0xa144>
  43df7c:	ldr	w0, [sp, #252]
  43df80:	cmp	w22, w0
  43df84:	b.ne	43df9c <argp_parse@@Base+0xa0b4>  // b.any
  43df88:	ldr	x0, [sp, #888]
  43df8c:	cbnz	x0, 43e02c <argp_parse@@Base+0xa144>
  43df90:	ldr	w0, [sp, #256]
  43df94:	cmp	w28, w0
  43df98:	b.eq	43e02c <argp_parse@@Base+0xa144>  // b.none
  43df9c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43dfa0:	add	x1, x1, #0x4f0
  43dfa4:	mov	w2, #0x5                   	// #5
  43dfa8:	mov	x0, #0x0                   	// #0
  43dfac:	bl	4049c0 <dcgettext@plt>
  43dfb0:	bl	43a980 <argp_parse@@Base+0x6a98>
  43dfb4:	mov	w2, #0x5                   	// #5
  43dfb8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43dfbc:	mov	x0, #0x0                   	// #0
  43dfc0:	add	x1, x1, #0x530
  43dfc4:	bl	4049c0 <dcgettext@plt>
  43dfc8:	mov	x2, x0
  43dfcc:	add	x1, sp, #0x198
  43dfd0:	mov	w0, w27
  43dfd4:	str	x2, [sp, #136]
  43dfd8:	bl	43a910 <argp_parse@@Base+0x6a28>
  43dfdc:	mov	x1, x0
  43dfe0:	ldr	x2, [sp, #136]
  43dfe4:	mov	w3, w22
  43dfe8:	mov	x0, x2
  43dfec:	add	w2, w28, #0x1
  43dff0:	bl	43a980 <argp_parse@@Base+0x6a98>
  43dff4:	mov	w2, #0x5                   	// #5
  43dff8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43dffc:	mov	x0, #0x0                   	// #0
  43e000:	add	x1, x1, #0x558
  43e004:	bl	4049c0 <dcgettext@plt>
  43e008:	mov	x22, x0
  43e00c:	ldr	w0, [sp, #260]
  43e010:	add	x1, sp, #0x198
  43e014:	bl	43a910 <argp_parse@@Base+0x6a28>
  43e018:	mov	x1, x0
  43e01c:	ldp	w3, w2, [sp, #252]
  43e020:	mov	x0, x22
  43e024:	add	w2, w2, #0x1
  43e028:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e02c:	ldrb	w1, [sp, #993]
  43e030:	mov	w2, w1
  43e034:	ldr	x0, [sp, #984]
  43e038:	cbz	x0, 43dc48 <argp_parse@@Base+0x9d60>
  43e03c:	ldr	x3, [sp, #280]
  43e040:	ldrsw	x0, [sp, #800]
  43e044:	subs	x0, x0, x3
  43e048:	cset	x3, vs
  43e04c:	subs	x24, x24, x0
  43e050:	csinc	x0, x3, xzr, vc
  43e054:	cbz	x0, 43dc48 <argp_parse@@Base+0x9d60>
  43e058:	cbz	w2, 43d488 <argp_parse@@Base+0x95a0>
  43e05c:	mov	w2, #0x5                   	// #5
  43e060:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e064:	mov	x0, #0x0                   	// #0
  43e068:	add	x1, x1, #0x580
  43e06c:	bl	4049c0 <dcgettext@plt>
  43e070:	mov	w22, #0x0                   	// #0
  43e074:	ldr	w1, [sp, #800]
  43e078:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e07c:	b	43d48c <argp_parse@@Base+0x95a4>
  43e080:	cbz	x1, 43e250 <argp_parse@@Base+0xa368>
  43e084:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43e088:	mov	w2, #0x5                   	// #5
  43e08c:	add	x1, x1, #0xfd0
  43e090:	mov	x0, #0x0                   	// #0
  43e094:	bl	4049c0 <dcgettext@plt>
  43e098:	mov	x24, x0
  43e09c:	ldp	w7, w6, [sp, #240]
  43e0a0:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e0a4:	ldr	w5, [sp, #248]
  43e0a8:	add	x4, x4, #0x30
  43e0ac:	add	x27, sp, #0x1d0
  43e0b0:	mov	x3, #0x64                  	// #100
  43e0b4:	mov	w2, #0x1                   	// #1
  43e0b8:	mov	x1, x3
  43e0bc:	mov	x0, x27
  43e0c0:	bl	404290 <__snprintf_chk@plt>
  43e0c4:	mov	x1, x27
  43e0c8:	mov	x0, x24
  43e0cc:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e0d0:	ldp	w4, w5, [sp, #240]
  43e0d4:	ldp	w2, w6, [sp, #248]
  43e0d8:	ldr	w3, [sp, #256]
  43e0dc:	ldr	x1, [sp, #976]
  43e0e0:	b	43dd70 <argp_parse@@Base+0x9e88>
  43e0e4:	mov	w2, #0x5                   	// #5
  43e0e8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43e0ec:	mov	x0, #0x0                   	// #0
  43e0f0:	add	x1, x1, #0xf38
  43e0f4:	bl	4049c0 <dcgettext@plt>
  43e0f8:	mov	x1, x24
  43e0fc:	mov	x2, x23
  43e100:	mov	x24, x23
  43e104:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e108:	b	43d19c <argp_parse@@Base+0x92b4>
  43e10c:	ldrb	w0, [sp, #993]
  43e110:	cbz	w0, 43d488 <argp_parse@@Base+0x95a0>
  43e114:	mov	w2, #0x5                   	// #5
  43e118:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e11c:	mov	x0, #0x0                   	// #0
  43e120:	add	x1, x1, #0x3e8
  43e124:	bl	4049c0 <dcgettext@plt>
  43e128:	mov	w22, #0x0                   	// #0
  43e12c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e130:	mov	w2, #0x877                 	// #2167
  43e134:	add	x1, x1, #0x3f8
  43e138:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e13c:	b	43d48c <argp_parse@@Base+0x95a4>
  43e140:	sub	x4, x0, #0x1
  43e144:	cmp	x4, #0xa
  43e148:	b.hi	43e26c <argp_parse@@Base+0xa384>  // b.pmore
  43e14c:	add	w0, w0, #0xc
  43e150:	b	43dd58 <argp_parse@@Base+0x9e70>
  43e154:	ldrb	w1, [sp, #993]
  43e158:	cbz	w1, 43db7c <argp_parse@@Base+0x9c94>
  43e15c:	add	x27, sp, #0x1d0
  43e160:	mov	w2, #0x5                   	// #5
  43e164:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e168:	mov	x0, #0x0                   	// #0
  43e16c:	add	x1, x1, #0x2d8
  43e170:	bl	4049c0 <dcgettext@plt>
  43e174:	mov	x22, x0
  43e178:	add	x1, sp, #0x2a0
  43e17c:	add	x0, sp, #0x308
  43e180:	bl	43ad68 <argp_parse@@Base+0x6e80>
  43e184:	mov	x1, x0
  43e188:	mov	x0, x22
  43e18c:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e190:	b	43de18 <argp_parse@@Base+0x9f30>
  43e194:	sub	x4, x0, #0x1
  43e198:	cmp	x4, #0xa
  43e19c:	b.ls	43dd58 <argp_parse@@Base+0x9e70>  // b.plast
  43e1a0:	cmp	x0, #0xc
  43e1a4:	b.ne	43e688 <argp_parse@@Base+0xa7a0>  // b.any
  43e1a8:	str	wzr, [sp, #248]
  43e1ac:	b	43dd5c <argp_parse@@Base+0x9e74>
  43e1b0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e1b4:	add	x0, x0, #0x40
  43e1b8:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e1bc:	b	43e0d0 <argp_parse@@Base+0xa1e8>
  43e1c0:	ldrb	w0, [sp, #993]
  43e1c4:	cbz	w0, 43d488 <argp_parse@@Base+0x95a0>
  43e1c8:	mov	w2, #0x5                   	// #5
  43e1cc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e1d0:	mov	x0, #0x0                   	// #0
  43e1d4:	add	x1, x1, #0x220
  43e1d8:	bl	4049c0 <dcgettext@plt>
  43e1dc:	mov	x22, x0
  43e1e0:	add	x1, sp, #0x2a0
  43e1e4:	add	x0, sp, #0x308
  43e1e8:	bl	43ad68 <argp_parse@@Base+0x6e80>
  43e1ec:	ldr	w25, [sp, #792]
  43e1f0:	ldr	x24, [sp, #784]
  43e1f4:	mov	x23, x0
  43e1f8:	add	x1, sp, #0x308
  43e1fc:	add	x2, sp, #0x1d0
  43e200:	add	x0, sp, #0xf0
  43e204:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43e208:	mov	w3, w25
  43e20c:	mov	x4, x0
  43e210:	mov	x2, x24
  43e214:	mov	x0, x22
  43e218:	mov	x1, x23
  43e21c:	mov	w22, #0x0                   	// #0
  43e220:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e224:	b	43d48c <argp_parse@@Base+0x95a4>
  43e228:	ldrb	w23, [sp, #993]
  43e22c:	cbz	w23, 43d488 <argp_parse@@Base+0x95a0>
  43e230:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e234:	add	x1, x1, #0x5d0
  43e238:	mov	w2, #0x5                   	// #5
  43e23c:	mov	x0, #0x0                   	// #0
  43e240:	mov	w22, #0x0                   	// #0
  43e244:	bl	4049c0 <dcgettext@plt>
  43e248:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e24c:	b	43d48c <argp_parse@@Base+0x95a4>
  43e250:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e254:	mov	w2, #0x5                   	// #5
  43e258:	add	x1, x1, #0x0
  43e25c:	mov	x0, #0x0                   	// #0
  43e260:	bl	4049c0 <dcgettext@plt>
  43e264:	mov	x24, x0
  43e268:	b	43e09c <argp_parse@@Base+0xa1b4>
  43e26c:	cmp	x0, #0xc
  43e270:	b.eq	43dd58 <argp_parse@@Base+0x9e70>  // b.none
  43e274:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43e278:	add	x22, x22, #0xbb0
  43e27c:	mov	w0, #0xffffffff            	// #-1
  43e280:	str	w0, [sp, #248]
  43e284:	cbz	w2, 43d488 <argp_parse@@Base+0x95a0>
  43e288:	mov	w2, #0x5                   	// #5
  43e28c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43e290:	mov	x0, #0x0                   	// #0
  43e294:	add	x1, x1, #0xfb0
  43e298:	bl	4049c0 <dcgettext@plt>
  43e29c:	ldr	x1, [sp, #848]
  43e2a0:	mov	x2, x22
  43e2a4:	mov	w22, #0x0                   	// #0
  43e2a8:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e2ac:	b	43d48c <argp_parse@@Base+0x95a4>
  43e2b0:	cbnz	x0, 43e15c <argp_parse@@Base+0xa274>
  43e2b4:	add	x27, sp, #0x1d0
  43e2b8:	b	43de18 <argp_parse@@Base+0x9f30>
  43e2bc:	mov	w2, #0x5                   	// #5
  43e2c0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e2c4:	mov	x0, #0x0                   	// #0
  43e2c8:	add	x1, x1, #0x5b0
  43e2cc:	bl	4049c0 <dcgettext@plt>
  43e2d0:	mov	x22, x0
  43e2d4:	add	x1, sp, #0x308
  43e2d8:	add	x2, sp, #0x1d0
  43e2dc:	add	x0, sp, #0xf0
  43e2e0:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43e2e4:	mov	x2, x24
  43e2e8:	mov	x1, x0
  43e2ec:	mov	x0, x22
  43e2f0:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e2f4:	ldr	x4, [sp, #904]
  43e2f8:	mov	x0, #0xe10                 	// #3600
  43e2fc:	mul	x2, x4, x0
  43e300:	smulh	x0, x4, x0
  43e304:	cmp	x0, x2, asr #63
  43e308:	b.ne	43e228 <argp_parse@@Base+0xa340>  // b.any
  43e30c:	ldr	x0, [sp, #872]
  43e310:	mov	x5, #0x94b3                	// #38067
  43e314:	ldrsw	x6, [sp, #928]
  43e318:	movk	x5, #0x26d6, lsl #16
  43e31c:	movk	x5, #0xbe8, lsl #32
  43e320:	adds	x2, x24, x2
  43e324:	add	x0, x6, x0
  43e328:	movk	x5, #0x112e, lsl #48
  43e32c:	mov	x3, x2
  43e330:	mov	x7, #0xca00                	// #51712
  43e334:	movk	x7, #0x3b9a, lsl #16
  43e338:	mov	x8, #0x5a53                	// #23123
  43e33c:	smulh	x2, x0, x5
  43e340:	movk	x8, #0xa09b, lsl #16
  43e344:	orr	x6, x6, x4
  43e348:	movk	x8, #0xb82f, lsl #32
  43e34c:	movk	x8, #0x44, lsl #48
  43e350:	ldrb	w1, [sp, #993]
  43e354:	asr	x2, x2, #26
  43e358:	sub	x2, x2, x0, asr #63
  43e35c:	mov	w23, w1
  43e360:	msub	x2, x2, x7, x0
  43e364:	add	x2, x2, x7
  43e368:	lsr	x4, x2, #9
  43e36c:	umulh	x4, x4, x8
  43e370:	lsr	x4, x4, #11
  43e374:	msub	x4, x4, x7, x2
  43e378:	sub	x0, x0, x4
  43e37c:	smulh	x2, x0, x5
  43e380:	asr	x2, x2, #26
  43e384:	sub	x0, x2, x0, asr #63
  43e388:	b.vs	43e22c <argp_parse@@Base+0xa344>
  43e38c:	ldr	x5, [sp, #912]
  43e390:	mov	x7, #0x3c                  	// #60
  43e394:	mul	x2, x5, x7
  43e398:	smulh	x7, x5, x7
  43e39c:	cmp	x7, x2, asr #63
  43e3a0:	b.eq	43dcf4 <argp_parse@@Base+0x9e0c>  // b.none
  43e3a4:	b	43e22c <argp_parse@@Base+0xa344>
  43e3a8:	mov	w2, #0x5                   	// #5
  43e3ac:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e3b0:	add	x1, x1, #0x290
  43e3b4:	bl	4049c0 <dcgettext@plt>
  43e3b8:	mov	x22, x0
  43e3bc:	ldr	w0, [sp, #260]
  43e3c0:	add	x1, sp, #0x198
  43e3c4:	bl	43a910 <argp_parse@@Base+0x6a28>
  43e3c8:	mov	x5, x0
  43e3cc:	ldp	w7, w6, [sp, #252]
  43e3d0:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e3d4:	add	x4, x4, #0x2c0
  43e3d8:	mov	x3, #0x64                  	// #100
  43e3dc:	add	w6, w6, #0x1
  43e3e0:	mov	w2, #0x1                   	// #1
  43e3e4:	mov	x1, x3
  43e3e8:	mov	x0, x27
  43e3ec:	bl	404290 <__snprintf_chk@plt>
  43e3f0:	mov	x0, x22
  43e3f4:	mov	x1, x27
  43e3f8:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e3fc:	ldr	x0, [sp, #952]
  43e400:	cbz	x0, 43de18 <argp_parse@@Base+0x9f30>
  43e404:	ldr	x0, [sp, #944]
  43e408:	cbnz	x0, 43e160 <argp_parse@@Base+0xa278>
  43e40c:	b	43de18 <argp_parse@@Base+0x9f30>
  43e410:	adrp	x22, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  43e414:	mov	w0, #0xffffffff            	// #-1
  43e418:	add	x22, x22, #0x948
  43e41c:	str	w0, [sp, #248]
  43e420:	b	43e284 <argp_parse@@Base+0xa39c>
  43e424:	stp	w9, w4, [sp, #176]
  43e428:	stp	w7, w6, [sp, #184]
  43e42c:	cbz	w0, 43d488 <argp_parse@@Base+0x95a0>
  43e430:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e434:	add	x1, x1, #0x98
  43e438:	mov	w2, #0x5                   	// #5
  43e43c:	mov	x0, #0x0                   	// #0
  43e440:	bl	4049c0 <dcgettext@plt>
  43e444:	add	x27, sp, #0x2a0
  43e448:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e44c:	mov	w2, #0x5                   	// #5
  43e450:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e454:	mov	x0, #0x0                   	// #0
  43e458:	add	x1, x1, #0xc0
  43e45c:	bl	4049c0 <dcgettext@plt>
  43e460:	mov	x3, x0
  43e464:	mov	x2, x27
  43e468:	add	x1, sp, #0x308
  43e46c:	add	x0, sp, #0x128
  43e470:	str	x3, [sp, #168]
  43e474:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43e478:	mov	x1, x0
  43e47c:	ldr	x3, [sp, #168]
  43e480:	mov	x0, x3
  43e484:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e488:	mov	w2, #0x5                   	// #5
  43e48c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e490:	mov	x0, #0x0                   	// #0
  43e494:	add	x1, x1, #0xe0
  43e498:	bl	4049c0 <dcgettext@plt>
  43e49c:	mov	x3, x0
  43e4a0:	mov	x2, x27
  43e4a4:	add	x1, sp, #0x308
  43e4a8:	add	x0, sp, #0xf0
  43e4ac:	str	x3, [sp, #168]
  43e4b0:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43e4b4:	mov	x1, x0
  43e4b8:	ldr	x3, [sp, #168]
  43e4bc:	mov	x0, x3
  43e4c0:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e4c4:	ldp	w7, w6, [sp, #184]
  43e4c8:	adrp	x5, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43e4cc:	ldp	w9, w4, [sp, #176]
  43e4d0:	cmp	w7, w6
  43e4d4:	add	x5, x5, #0xd38
  43e4d8:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  43e4dc:	add	x0, x0, #0x948
  43e4e0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x19e10>
  43e4e4:	csel	x5, x0, x5, eq  // eq = none
  43e4e8:	add	x1, x1, #0xd40
  43e4ec:	cmp	w25, w26
  43e4f0:	csel	x6, x0, x1, eq  // eq = none
  43e4f4:	cmp	w23, w24
  43e4f8:	csel	x7, x0, x1, eq  // eq = none
  43e4fc:	cmp	w9, w4
  43e500:	csel	x0, x0, x1, eq  // eq = none
  43e504:	b	43d398 <argp_parse@@Base+0x94b0>
  43e508:	ldr	w0, [sp, #248]
  43e50c:	cmp	w0, #0xc
  43e510:	b.eq	43dea0 <argp_parse@@Base+0x9fb8>  // b.none
  43e514:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e518:	add	x1, x1, #0x3a0
  43e51c:	mov	w2, #0x5                   	// #5
  43e520:	mov	x0, #0x0                   	// #0
  43e524:	bl	4049c0 <dcgettext@plt>
  43e528:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e52c:	b	43dea0 <argp_parse@@Base+0x9fb8>
  43e530:	ldrb	w1, [sp, #993]
  43e534:	cbz	w1, 43d488 <argp_parse@@Base+0x95a0>
  43e538:	mov	w2, #0x5                   	// #5
  43e53c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e540:	add	x1, x1, #0x78
  43e544:	bl	4049c0 <dcgettext@plt>
  43e548:	add	x1, sp, #0x2a0
  43e54c:	mov	w22, #0x0                   	// #0
  43e550:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e554:	b	43d48c <argp_parse@@Base+0x95a4>
  43e558:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e55c:	add	x1, x1, #0x1f8
  43e560:	mov	w2, #0x5                   	// #5
  43e564:	mov	x0, #0x0                   	// #0
  43e568:	bl	4049c0 <dcgettext@plt>
  43e56c:	mov	x1, x0
  43e570:	b	43d47c <argp_parse@@Base+0x9594>
  43e574:	ldrb	w0, [sp, #993]
  43e578:	cbz	w0, 43d488 <argp_parse@@Base+0x95a0>
  43e57c:	mov	w2, #0x5                   	// #5
  43e580:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e584:	mov	x0, #0x0                   	// #0
  43e588:	add	x1, x1, #0x410
  43e58c:	bl	4049c0 <dcgettext@plt>
  43e590:	mov	x22, x0
  43e594:	add	x2, sp, #0x1d0
  43e598:	add	x1, sp, #0x308
  43e59c:	add	x0, sp, #0xf0
  43e5a0:	bl	43acb8 <argp_parse@@Base+0x6dd0>
  43e5a4:	mov	x1, x0
  43e5a8:	mov	x0, x22
  43e5ac:	mov	w22, #0x0                   	// #0
  43e5b0:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e5b4:	b	43d48c <argp_parse@@Base+0x95a4>
  43e5b8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e5bc:	add	x1, x1, #0x190
  43e5c0:	mov	w2, #0x5                   	// #5
  43e5c4:	mov	x0, #0x0                   	// #0
  43e5c8:	bl	4049c0 <dcgettext@plt>
  43e5cc:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e5d0:	b	43d444 <argp_parse@@Base+0x955c>
  43e5d4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e5d8:	add	x1, x1, #0x158
  43e5dc:	mov	w2, #0x5                   	// #5
  43e5e0:	mov	x0, #0x0                   	// #0
  43e5e4:	bl	4049c0 <dcgettext@plt>
  43e5e8:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e5ec:	b	43d438 <argp_parse@@Base+0x9550>
  43e5f0:	mov	w2, #0x5                   	// #5
  43e5f4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e5f8:	mov	x0, #0x0                   	// #0
  43e5fc:	add	x1, x1, #0x600
  43e600:	bl	4049c0 <dcgettext@plt>
  43e604:	ldr	w4, [sp, #928]
  43e608:	ldr	x1, [sp, #904]
  43e60c:	ldr	x2, [sp, #912]
  43e610:	ldr	x3, [sp, #920]
  43e614:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e618:	mov	w2, #0x5                   	// #5
  43e61c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e620:	mov	x0, #0x0                   	// #0
  43e624:	add	x1, x1, #0x650
  43e628:	bl	4049c0 <dcgettext@plt>
  43e62c:	mov	x1, x22
  43e630:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e634:	ldr	w0, [sp, #272]
  43e638:	cmn	w0, #0x1
  43e63c:	b.eq	43e67c <argp_parse@@Base+0xa794>  // b.none
  43e640:	ldr	x1, [sp, #144]
  43e644:	add	x2, sp, #0x198
  43e648:	mov	x0, x20
  43e64c:	bl	44f228 <_obstack_memory_used@@Base+0xd038>
  43e650:	cbz	x0, 43e67c <argp_parse@@Base+0xa794>
  43e654:	ldr	w1, [sp, #272]
  43e658:	ldr	w0, [sp, #440]
  43e65c:	cmp	w1, w0
  43e660:	b.eq	43e67c <argp_parse@@Base+0xa794>  // b.none
  43e664:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e668:	add	x1, x1, #0x678
  43e66c:	mov	w2, #0x5                   	// #5
  43e670:	mov	x0, #0x0                   	// #0
  43e674:	bl	4049c0 <dcgettext@plt>
  43e678:	bl	43a980 <argp_parse@@Base+0x6a98>
  43e67c:	ldrb	w1, [sp, #993]
  43e680:	mov	w22, w1
  43e684:	b	43d714 <argp_parse@@Base+0x982c>
  43e688:	mov	w0, #0xffffffff            	// #-1
  43e68c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x18e10>
  43e690:	add	x22, x22, #0x398
  43e694:	str	w0, [sp, #248]
  43e698:	b	43e284 <argp_parse@@Base+0xa39c>
  43e69c:	nop
  43e6a0:	stp	x29, x30, [sp, #-64]!
  43e6a4:	mov	x29, sp
  43e6a8:	stp	x19, x20, [sp, #16]
  43e6ac:	mov	x20, x0
  43e6b0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  43e6b4:	add	x0, x0, #0x778
  43e6b8:	stp	x21, x22, [sp, #32]
  43e6bc:	mov	x21, x1
  43e6c0:	mov	x22, x2
  43e6c4:	str	x23, [sp, #48]
  43e6c8:	bl	404af0 <getenv@plt>
  43e6cc:	mov	x23, x0
  43e6d0:	bl	44eef0 <_obstack_memory_used@@Base+0xcd00>
  43e6d4:	cbz	x0, 43e71c <argp_parse@@Base+0xa834>
  43e6d8:	mov	x5, x23
  43e6dc:	mov	x2, x22
  43e6e0:	mov	x1, x21
  43e6e4:	mov	x4, x0
  43e6e8:	mov	w3, #0x0                   	// #0
  43e6ec:	mov	x19, x0
  43e6f0:	mov	x0, x20
  43e6f4:	bl	43cf08 <argp_parse@@Base+0x9020>
  43e6f8:	and	w20, w0, #0xff
  43e6fc:	mov	x0, x19
  43e700:	bl	44f218 <_obstack_memory_used@@Base+0xd028>
  43e704:	mov	w0, w20
  43e708:	ldp	x19, x20, [sp, #16]
  43e70c:	ldp	x21, x22, [sp, #32]
  43e710:	ldr	x23, [sp, #48]
  43e714:	ldp	x29, x30, [sp], #64
  43e718:	ret
  43e71c:	mov	w20, #0x0                   	// #0
  43e720:	mov	w0, w20
  43e724:	ldp	x19, x20, [sp, #16]
  43e728:	ldp	x21, x22, [sp, #32]
  43e72c:	ldr	x23, [sp, #48]
  43e730:	ldp	x29, x30, [sp], #64
  43e734:	ret
  43e738:	stp	x29, x30, [sp, #-48]!
  43e73c:	mov	x29, sp
  43e740:	stp	x19, x20, [sp, #16]
  43e744:	cbz	x0, 43e81c <argp_parse@@Base+0xa934>
  43e748:	mov	x19, x0
  43e74c:	mov	w1, #0x2f                  	// #47
  43e750:	bl	4045d0 <strrchr@plt>
  43e754:	mov	x20, x0
  43e758:	cbz	x0, 43e7bc <argp_parse@@Base+0xa8d4>
  43e75c:	str	x21, [sp, #32]
  43e760:	add	x21, x0, #0x1
  43e764:	sub	x0, x21, x19
  43e768:	cmp	x0, #0x6
  43e76c:	b.le	43e7d8 <argp_parse@@Base+0xa8f0>
  43e770:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43e774:	sub	x0, x20, #0x6
  43e778:	add	x1, x1, #0x9d0
  43e77c:	mov	x2, #0x7                   	// #7
  43e780:	bl	4043c0 <strncmp@plt>
  43e784:	cbnz	w0, 43e7d8 <argp_parse@@Base+0xa8f0>
  43e788:	ldrb	w0, [x20, #1]
  43e78c:	cmp	w0, #0x6c
  43e790:	b.ne	43e7f8 <argp_parse@@Base+0xa910>  // b.any
  43e794:	ldrb	w0, [x21, #1]
  43e798:	cmp	w0, #0x74
  43e79c:	b.ne	43e7f8 <argp_parse@@Base+0xa910>  // b.any
  43e7a0:	ldrb	w0, [x21, #2]
  43e7a4:	cmp	w0, #0x2d
  43e7a8:	b.ne	43e7f8 <argp_parse@@Base+0xa910>  // b.any
  43e7ac:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43e7b0:	add	x19, x20, #0x4
  43e7b4:	ldr	x21, [sp, #32]
  43e7b8:	str	x19, [x0, #1128]
  43e7bc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43e7c0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43e7c4:	str	x19, [x1, #3488]
  43e7c8:	str	x19, [x0, #1088]
  43e7cc:	ldp	x19, x20, [sp, #16]
  43e7d0:	ldp	x29, x30, [sp], #48
  43e7d4:	ret
  43e7d8:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43e7dc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43e7e0:	ldr	x21, [sp, #32]
  43e7e4:	str	x19, [x1, #3488]
  43e7e8:	str	x19, [x0, #1088]
  43e7ec:	ldp	x19, x20, [sp, #16]
  43e7f0:	ldp	x29, x30, [sp], #48
  43e7f4:	ret
  43e7f8:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43e7fc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43e800:	mov	x19, x21
  43e804:	str	x19, [x1, #3488]
  43e808:	str	x19, [x0, #1088]
  43e80c:	ldp	x19, x20, [sp, #16]
  43e810:	ldr	x21, [sp, #32]
  43e814:	ldp	x29, x30, [sp], #48
  43e818:	ret
  43e81c:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43e820:	mov	x2, #0x37                  	// #55
  43e824:	mov	x1, #0x1                   	// #1
  43e828:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43e82c:	ldr	x3, [x3, #1096]
  43e830:	add	x0, x0, #0x998
  43e834:	str	x21, [sp, #32]
  43e838:	bl	4048b0 <fwrite@plt>
  43e83c:	bl	404650 <abort@plt>
  43e840:	stp	xzr, xzr, [x8]
  43e844:	cmp	w0, #0xa
  43e848:	stp	xzr, xzr, [x8, #16]
  43e84c:	stp	xzr, xzr, [x8, #32]
  43e850:	str	xzr, [x8, #48]
  43e854:	b.eq	43e860 <argp_parse@@Base+0xa978>  // b.none
  43e858:	str	w0, [x8]
  43e85c:	ret
  43e860:	stp	x29, x30, [sp, #-16]!
  43e864:	mov	x29, sp
  43e868:	bl	404650 <abort@plt>
  43e86c:	nop
  43e870:	stp	x29, x30, [sp, #-48]!
  43e874:	mov	w2, #0x5                   	// #5
  43e878:	mov	x29, sp
  43e87c:	stp	x19, x20, [sp, #16]
  43e880:	mov	x20, x0
  43e884:	str	x21, [sp, #32]
  43e888:	mov	w21, w1
  43e88c:	mov	x1, x0
  43e890:	mov	x0, #0x0                   	// #0
  43e894:	bl	4049c0 <dcgettext@plt>
  43e898:	mov	x19, x0
  43e89c:	cmp	x20, x0
  43e8a0:	b.eq	43e8b8 <argp_parse@@Base+0xa9d0>  // b.none
  43e8a4:	mov	x0, x19
  43e8a8:	ldp	x19, x20, [sp, #16]
  43e8ac:	ldr	x21, [sp, #32]
  43e8b0:	ldp	x29, x30, [sp], #48
  43e8b4:	ret
  43e8b8:	bl	439918 <argp_parse@@Base+0x5a30>
  43e8bc:	ldrb	w1, [x0]
  43e8c0:	and	w1, w1, #0xffffffdf
  43e8c4:	cmp	w1, #0x55
  43e8c8:	b.ne	43e92c <argp_parse@@Base+0xaa44>  // b.any
  43e8cc:	ldrb	w1, [x0, #1]
  43e8d0:	and	w1, w1, #0xffffffdf
  43e8d4:	cmp	w1, #0x54
  43e8d8:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e8dc:	ldrb	w1, [x0, #2]
  43e8e0:	and	w1, w1, #0xffffffdf
  43e8e4:	cmp	w1, #0x46
  43e8e8:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e8ec:	ldrb	w1, [x0, #3]
  43e8f0:	cmp	w1, #0x2d
  43e8f4:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e8f8:	ldrb	w1, [x0, #4]
  43e8fc:	cmp	w1, #0x38
  43e900:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e904:	ldrb	w0, [x0, #5]
  43e908:	cbnz	w0, 43e9a8 <argp_parse@@Base+0xaac0>
  43e90c:	ldrb	w1, [x19]
  43e910:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43e914:	adrp	x19, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43e918:	add	x0, x0, #0x9e0
  43e91c:	cmp	w1, #0x60
  43e920:	add	x19, x19, #0x9f8
  43e924:	csel	x19, x19, x0, eq  // eq = none
  43e928:	b	43e8a4 <argp_parse@@Base+0xa9bc>
  43e92c:	cmp	w1, #0x47
  43e930:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e934:	ldrb	w1, [x0, #1]
  43e938:	and	w1, w1, #0xffffffdf
  43e93c:	cmp	w1, #0x42
  43e940:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e944:	ldrb	w1, [x0, #2]
  43e948:	cmp	w1, #0x31
  43e94c:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e950:	ldrb	w1, [x0, #3]
  43e954:	cmp	w1, #0x38
  43e958:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e95c:	ldrb	w1, [x0, #4]
  43e960:	cmp	w1, #0x30
  43e964:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e968:	ldrb	w1, [x0, #5]
  43e96c:	cmp	w1, #0x33
  43e970:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e974:	ldrb	w1, [x0, #6]
  43e978:	cmp	w1, #0x30
  43e97c:	b.ne	43e9a8 <argp_parse@@Base+0xaac0>  // b.any
  43e980:	ldrb	w0, [x0, #7]
  43e984:	cbnz	w0, 43e9a8 <argp_parse@@Base+0xaac0>
  43e988:	ldrb	w1, [x19]
  43e98c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43e990:	adrp	x19, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43e994:	add	x0, x0, #0x9e8
  43e998:	cmp	w1, #0x60
  43e99c:	add	x19, x19, #0x9f0
  43e9a0:	csel	x19, x19, x0, eq  // eq = none
  43e9a4:	b	43e8a4 <argp_parse@@Base+0xa9bc>
  43e9a8:	cmp	w21, #0x9
  43e9ac:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43e9b0:	adrp	x19, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43e9b4:	add	x0, x0, #0xa00
  43e9b8:	add	x19, x19, #0x9d8
  43e9bc:	csel	x19, x19, x0, eq  // eq = none
  43e9c0:	mov	x0, x19
  43e9c4:	ldp	x19, x20, [sp, #16]
  43e9c8:	ldr	x21, [sp, #32]
  43e9cc:	ldp	x29, x30, [sp], #48
  43e9d0:	ret
  43e9d4:	nop
  43e9d8:	sub	sp, sp, #0xf0
  43e9dc:	stp	x29, x30, [sp, #16]
  43e9e0:	add	x29, sp, #0x10
  43e9e4:	stp	x19, x20, [sp, #32]
  43e9e8:	mov	w19, w5
  43e9ec:	and	w20, w5, #0x2
  43e9f0:	stp	x21, x22, [sp, #48]
  43e9f4:	stp	x23, x24, [sp, #64]
  43e9f8:	mov	x23, x1
  43e9fc:	stp	x25, x26, [sp, #80]
  43ea00:	mov	w26, w4
  43ea04:	mov	x25, x3
  43ea08:	stp	x27, x28, [sp, #96]
  43ea0c:	mov	x28, x0
  43ea10:	mov	x27, x2
  43ea14:	str	x6, [sp, #112]
  43ea18:	str	w5, [sp, #200]
  43ea1c:	str	x7, [sp, #208]
  43ea20:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  43ea24:	mov	x1, x19
  43ea28:	str	x0, [sp, #192]
  43ea2c:	cmp	w26, #0x4
  43ea30:	ubfx	x11, x1, #1, #1
  43ea34:	ldr	x6, [sp, #112]
  43ea38:	b.eq	43f6d0 <argp_parse@@Base+0xb7e8>  // b.none
  43ea3c:	b.ls	43eaa4 <argp_parse@@Base+0xabbc>  // b.plast
  43ea40:	cmp	w26, #0x7
  43ea44:	b.eq	43f560 <argp_parse@@Base+0xb678>  // b.none
  43ea48:	b.ls	43f1cc <argp_parse@@Base+0xb2e4>  // b.plast
  43ea4c:	sub	w0, w26, #0x8
  43ea50:	cmp	w0, #0x2
  43ea54:	b.hi	43f9ec <argp_parse@@Base+0xbb04>  // b.pmore
  43ea58:	cmp	w26, #0xa
  43ea5c:	b.ne	43f5d4 <argp_parse@@Base+0xb6ec>  // b.any
  43ea60:	mov	x19, #0x0                   	// #0
  43ea64:	cbz	w20, 43f84c <argp_parse@@Base+0xb964>
  43ea68:	ldr	x0, [sp, #240]
  43ea6c:	str	w11, [sp, #136]
  43ea70:	str	x6, [sp, #144]
  43ea74:	bl	403ff0 <strlen@plt>
  43ea78:	mov	x12, x0
  43ea7c:	ldr	x0, [sp, #240]
  43ea80:	mov	w10, #0x1                   	// #1
  43ea84:	ldr	w11, [sp, #136]
  43ea88:	mov	w5, w10
  43ea8c:	mov	w7, #0x0                   	// #0
  43ea90:	str	x0, [sp, #112]
  43ea94:	str	wzr, [sp, #120]
  43ea98:	str	xzr, [sp, #128]
  43ea9c:	ldr	x6, [sp, #144]
  43eaa0:	b	43eae8 <argp_parse@@Base+0xac00>
  43eaa4:	cmp	w26, #0x1
  43eaa8:	b.eq	43f52c <argp_parse@@Base+0xb644>  // b.none
  43eaac:	b.ls	43f1a0 <argp_parse@@Base+0xb2b8>  // b.plast
  43eab0:	cmp	w26, #0x2
  43eab4:	b.eq	43f6f4 <argp_parse@@Base+0xb80c>  // b.none
  43eab8:	mov	w10, #0x1                   	// #1
  43eabc:	adrp	x26, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43eac0:	mov	w11, w10
  43eac4:	mov	w5, w10
  43eac8:	add	x0, x26, #0xa00
  43eacc:	mov	w7, #0x0                   	// #0
  43ead0:	mov	x12, #0x1                   	// #1
  43ead4:	mov	x19, #0x0                   	// #0
  43ead8:	mov	w26, #0x2                   	// #2
  43eadc:	str	x0, [sp, #112]
  43eae0:	str	wzr, [sp, #120]
  43eae4:	str	xzr, [sp, #128]
  43eae8:	mov	w22, w5
  43eaec:	mov	w24, w7
  43eaf0:	mov	x20, #0x0                   	// #0
  43eaf4:	nop
  43eaf8:	cmp	x25, x20
  43eafc:	cset	w21, ne  // ne = any
  43eb00:	cmn	x25, #0x1
  43eb04:	b.eq	43ebd4 <argp_parse@@Base+0xacec>  // b.none
  43eb08:	cbz	w21, 43ebe4 <argp_parse@@Base+0xacfc>
  43eb0c:	cmp	w26, #0x2
  43eb10:	add	x3, x27, x20
  43eb14:	cset	w5, ne  // ne = any
  43eb18:	ands	w5, w22, w5
  43eb1c:	b.eq	43f0ec <argp_parse@@Base+0xb204>  // b.none
  43eb20:	cbz	x12, 43ede0 <argp_parse@@Base+0xaef8>
  43eb24:	cmp	x12, #0x1
  43eb28:	add	x1, x20, x12
  43eb2c:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  43eb30:	b.ne	43eb68 <argp_parse@@Base+0xac80>  // b.any
  43eb34:	mov	x0, x27
  43eb38:	str	x1, [sp, #136]
  43eb3c:	str	w5, [sp, #144]
  43eb40:	stp	x3, x12, [sp, #152]
  43eb44:	stp	w11, w10, [sp, #172]
  43eb48:	str	x6, [sp, #184]
  43eb4c:	bl	403ff0 <strlen@plt>
  43eb50:	ldp	x3, x12, [sp, #152]
  43eb54:	mov	x25, x0
  43eb58:	ldr	w5, [sp, #144]
  43eb5c:	ldp	w11, w10, [sp, #172]
  43eb60:	ldr	x1, [sp, #136]
  43eb64:	ldr	x6, [sp, #184]
  43eb68:	cmp	x1, x25
  43eb6c:	b.hi	43ede0 <argp_parse@@Base+0xaef8>  // b.pmore
  43eb70:	ldr	x1, [sp, #112]
  43eb74:	mov	x2, x12
  43eb78:	mov	x0, x3
  43eb7c:	stp	x3, x12, [sp, #136]
  43eb80:	str	w5, [sp, #152]
  43eb84:	str	w11, [sp, #160]
  43eb88:	str	w10, [sp, #172]
  43eb8c:	str	x6, [sp, #176]
  43eb90:	bl	4046d0 <memcmp@plt>
  43eb94:	ldr	w5, [sp, #152]
  43eb98:	ldr	w11, [sp, #160]
  43eb9c:	ldr	w10, [sp, #172]
  43eba0:	ldp	x3, x12, [sp, #136]
  43eba4:	ldr	x6, [sp, #176]
  43eba8:	cbnz	w0, 43ede0 <argp_parse@@Base+0xaef8>
  43ebac:	cbnz	w11, 43eed8 <argp_parse@@Base+0xaff0>
  43ebb0:	ldrb	w4, [x3]
  43ebb4:	cmp	w4, #0x7e
  43ebb8:	b.hi	43edf0 <argp_parse@@Base+0xaf08>  // b.pmore
  43ebbc:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43ebc0:	add	x0, x0, #0xa78
  43ebc4:	ldrh	w0, [x0, w4, uxtw #1]
  43ebc8:	adr	x1, 43ebd4 <argp_parse@@Base+0xacec>
  43ebcc:	add	x0, x1, w0, sxth #2
  43ebd0:	br	x0
  43ebd4:	ldrb	w0, [x27, x20]
  43ebd8:	cmp	w0, #0x0
  43ebdc:	cset	w21, ne  // ne = any
  43ebe0:	cbnz	w21, 43eb0c <argp_parse@@Base+0xac24>
  43ebe4:	cmp	w26, #0x2
  43ebe8:	mov	w5, w22
  43ebec:	cset	w0, eq  // eq = none
  43ebf0:	mov	w7, w24
  43ebf4:	cmp	w0, #0x0
  43ebf8:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  43ebfc:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  43ec00:	b.eq	43f994 <argp_parse@@Base+0xbaac>  // b.none
  43ec04:	eor	w11, w11, #0x1
  43ec08:	ands	w0, w0, w11
  43ec0c:	b.eq	43f8f4 <argp_parse@@Base+0xba0c>  // b.none
  43ec10:	ldr	w1, [sp, #120]
  43ec14:	cbz	w1, 43f8f8 <argp_parse@@Base+0xba10>
  43ec18:	cbnz	w10, 43f950 <argp_parse@@Base+0xba68>
  43ec1c:	ldr	x2, [sp, #128]
  43ec20:	cmp	x23, #0x0
  43ec24:	cset	w0, eq  // eq = none
  43ec28:	cmp	x2, #0x0
  43ec2c:	mov	x1, x2
  43ec30:	csel	w0, w0, wzr, ne  // ne = any
  43ec34:	cbz	w0, 43f980 <argp_parse@@Base+0xba98>
  43ec38:	adrp	x26, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43ec3c:	mov	x12, #0x1                   	// #1
  43ec40:	mov	w11, #0x0                   	// #0
  43ec44:	mov	x19, x12
  43ec48:	str	w0, [sp, #120]
  43ec4c:	mov	w0, #0x27                  	// #39
  43ec50:	strb	w0, [x28]
  43ec54:	ldr	x23, [sp, #128]
  43ec58:	str	x1, [sp, #128]
  43ec5c:	add	x1, x26, #0xa00
  43ec60:	mov	w26, #0x2                   	// #2
  43ec64:	str	x1, [sp, #112]
  43ec68:	b	43eae8 <argp_parse@@Base+0xac00>
  43ec6c:	mov	w0, w5
  43ec70:	mov	w21, w5
  43ec74:	mov	w5, w0
  43ec78:	mov	w1, #0x0                   	// #0
  43ec7c:	nop
  43ec80:	cbz	x6, 43ed98 <argp_parse@@Base+0xaeb0>
  43ec84:	ubfx	x0, x4, #5, #8
  43ec88:	ldr	w0, [x6, x0, lsl #2]
  43ec8c:	lsr	w0, w0, w4
  43ec90:	tbz	w0, #0, 43ed98 <argp_parse@@Base+0xaeb0>
  43ec94:	cmp	w26, #0x2
  43ec98:	cset	w0, eq  // eq = none
  43ec9c:	cbnz	w11, 43f018 <argp_parse@@Base+0xb130>
  43eca0:	eor	w1, w24, #0x1
  43eca4:	ands	w0, w0, w1
  43eca8:	b.eq	43ecec <argp_parse@@Base+0xae04>  // b.none
  43ecac:	cmp	x23, x19
  43ecb0:	b.ls	43ecbc <argp_parse@@Base+0xadd4>  // b.plast
  43ecb4:	mov	w1, #0x27                  	// #39
  43ecb8:	strb	w1, [x28, x19]
  43ecbc:	add	x1, x19, #0x1
  43ecc0:	cmp	x23, x1
  43ecc4:	b.ls	43ecd0 <argp_parse@@Base+0xade8>  // b.plast
  43ecc8:	mov	w2, #0x24                  	// #36
  43eccc:	strb	w2, [x28, x1]
  43ecd0:	add	x1, x19, #0x2
  43ecd4:	cmp	x23, x1
  43ecd8:	b.ls	43ece4 <argp_parse@@Base+0xadfc>  // b.plast
  43ecdc:	mov	w2, #0x27                  	// #39
  43ece0:	strb	w2, [x28, x1]
  43ece4:	add	x19, x19, #0x3
  43ece8:	mov	w24, w0
  43ecec:	cmp	x19, x23
  43ecf0:	b.cs	43ecfc <argp_parse@@Base+0xae14>  // b.hs, b.nlast
  43ecf4:	mov	w0, #0x5c                  	// #92
  43ecf8:	strb	w0, [x28, x19]
  43ecfc:	add	x19, x19, #0x1
  43ed00:	add	x20, x20, #0x1
  43ed04:	cmp	x19, x23
  43ed08:	b.cs	43ed10 <argp_parse@@Base+0xae28>  // b.hs, b.nlast
  43ed0c:	strb	w4, [x28, x19]
  43ed10:	cmp	w21, #0x0
  43ed14:	add	x19, x19, #0x1
  43ed18:	csel	w10, w10, wzr, ne  // ne = any
  43ed1c:	b	43eaf8 <argp_parse@@Base+0xac10>
  43ed20:	cbnz	w11, 43f93c <argp_parse@@Base+0xba54>
  43ed24:	ldr	x1, [sp, #128]
  43ed28:	cmp	x23, #0x0
  43ed2c:	mov	x0, #0x0                   	// #0
  43ed30:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  43ed34:	b.eq	43ed78 <argp_parse@@Base+0xae90>  // b.none
  43ed38:	cmp	x23, x19
  43ed3c:	b.ls	43ed48 <argp_parse@@Base+0xae60>  // b.plast
  43ed40:	mov	w0, #0x27                  	// #39
  43ed44:	strb	w0, [x28, x19]
  43ed48:	add	x0, x19, #0x1
  43ed4c:	cmp	x23, x0
  43ed50:	b.ls	43ed5c <argp_parse@@Base+0xae74>  // b.plast
  43ed54:	mov	w1, #0x5c                  	// #92
  43ed58:	strb	w1, [x28, x0]
  43ed5c:	add	x1, x19, #0x2
  43ed60:	mov	x0, x23
  43ed64:	cmp	x23, x1
  43ed68:	b.ls	43f9cc <argp_parse@@Base+0xbae4>  // b.plast
  43ed6c:	ldr	x23, [sp, #128]
  43ed70:	mov	w2, #0x27                  	// #39
  43ed74:	strb	w2, [x28, x1]
  43ed78:	add	x19, x19, #0x3
  43ed7c:	str	x23, [sp, #128]
  43ed80:	mov	x23, x0
  43ed84:	mov	w1, #0x0                   	// #0
  43ed88:	mov	w24, #0x0                   	// #0
  43ed8c:	mov	w4, #0x27                  	// #39
  43ed90:	str	w21, [sp, #120]
  43ed94:	nop
  43ed98:	cbnz	w5, 43ec94 <argp_parse@@Base+0xadac>
  43ed9c:	eor	w1, w1, #0x1
  43eda0:	add	x20, x20, #0x1
  43eda4:	and	w1, w24, w1
  43eda8:	and	w1, w1, #0xff
  43edac:	cbz	w1, 43ed04 <argp_parse@@Base+0xae1c>
  43edb0:	cmp	x23, x19
  43edb4:	b.ls	43edc0 <argp_parse@@Base+0xaed8>  // b.plast
  43edb8:	mov	w0, #0x27                  	// #39
  43edbc:	strb	w0, [x28, x19]
  43edc0:	add	x0, x19, #0x1
  43edc4:	cmp	x23, x0
  43edc8:	b.ls	43edd4 <argp_parse@@Base+0xaeec>  // b.plast
  43edcc:	mov	w1, #0x27                  	// #39
  43edd0:	strb	w1, [x28, x0]
  43edd4:	add	x19, x19, #0x2
  43edd8:	mov	w24, #0x0                   	// #0
  43eddc:	b	43ed04 <argp_parse@@Base+0xae1c>
  43ede0:	ldrb	w4, [x3]
  43ede4:	cmp	w4, #0x7e
  43ede8:	b.ls	43f174 <argp_parse@@Base+0xb28c>  // b.plast
  43edec:	mov	w5, #0x0                   	// #0
  43edf0:	ldr	x0, [sp, #192]
  43edf4:	cmp	x0, #0x1
  43edf8:	b.ne	43f2a0 <argp_parse@@Base+0xb3b8>  // b.any
  43edfc:	str	w4, [sp, #136]
  43ee00:	str	w5, [sp, #144]
  43ee04:	str	x12, [sp, #152]
  43ee08:	str	w11, [sp, #160]
  43ee0c:	str	w10, [sp, #172]
  43ee10:	str	x6, [sp, #176]
  43ee14:	bl	404740 <__ctype_b_loc@plt>
  43ee18:	ldr	w4, [sp, #136]
  43ee1c:	ldr	x0, [x0]
  43ee20:	ldr	w5, [sp, #144]
  43ee24:	ldr	w11, [sp, #160]
  43ee28:	ldrh	w21, [x0, w4, uxtw #1]
  43ee2c:	ldr	w10, [sp, #172]
  43ee30:	ands	w0, w21, #0x4000
  43ee34:	cset	w2, eq  // eq = none
  43ee38:	ubfx	x21, x21, #14, #1
  43ee3c:	ldr	x12, [sp, #152]
  43ee40:	and	w2, w22, w2
  43ee44:	ldr	x6, [sp, #176]
  43ee48:	ldr	x8, [sp, #192]
  43ee4c:	cbnz	w2, 43f6b4 <argp_parse@@Base+0xb7cc>
  43ee50:	cmp	w26, #0x2
  43ee54:	cset	w1, eq  // eq = none
  43ee58:	eor	w0, w22, #0x1
  43ee5c:	orr	w1, w1, w0
  43ee60:	cbz	w1, 43ec80 <argp_parse@@Base+0xad98>
  43ee64:	mov	w1, #0x0                   	// #0
  43ee68:	cbnz	w11, 43ec80 <argp_parse@@Base+0xad98>
  43ee6c:	nop
  43ee70:	cbnz	w5, 43ec94 <argp_parse@@Base+0xadac>
  43ee74:	b	43ed9c <argp_parse@@Base+0xaeb4>
  43ee78:	mov	w5, #0x0                   	// #0
  43ee7c:	cmp	x25, #0x1
  43ee80:	cset	w0, ne  // ne = any
  43ee84:	cmn	x25, #0x1
  43ee88:	b.ne	43ee98 <argp_parse@@Base+0xafb0>  // b.any
  43ee8c:	ldrb	w0, [x27, #1]
  43ee90:	cmp	w0, #0x0
  43ee94:	cset	w0, ne  // ne = any
  43ee98:	cmp	w26, #0x2
  43ee9c:	cset	w1, eq  // eq = none
  43eea0:	cbz	w0, 43eeb4 <argp_parse@@Base+0xafcc>
  43eea4:	mov	w21, #0x0                   	// #0
  43eea8:	b	43ee58 <argp_parse@@Base+0xaf70>
  43eeac:	cmp	w26, #0x2
  43eeb0:	cset	w1, eq  // eq = none
  43eeb4:	cbnz	x20, 43eea4 <argp_parse@@Base+0xafbc>
  43eeb8:	cmp	w11, #0x0
  43eebc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43eec0:	b.eq	43ee58 <argp_parse@@Base+0xaf70>  // b.none
  43eec4:	mov	w5, w22
  43eec8:	mov	w26, #0x2                   	// #2
  43eecc:	cmp	w5, #0x0
  43eed0:	mov	w0, #0x4                   	// #4
  43eed4:	csel	w26, w26, w0, eq  // eq = none
  43eed8:	ldr	x7, [sp, #208]
  43eedc:	mov	w4, w26
  43eee0:	ldr	x0, [sp, #240]
  43eee4:	str	x0, [sp]
  43eee8:	ldr	w0, [sp, #200]
  43eeec:	mov	x3, x25
  43eef0:	mov	x2, x27
  43eef4:	mov	x1, x23
  43eef8:	and	w5, w0, #0xfffffffd
  43eefc:	mov	x6, #0x0                   	// #0
  43ef00:	mov	x0, x28
  43ef04:	bl	43e9d8 <argp_parse@@Base+0xaaf0>
  43ef08:	mov	x19, x0
  43ef0c:	mov	x0, x19
  43ef10:	ldp	x29, x30, [sp, #16]
  43ef14:	ldp	x19, x20, [sp, #32]
  43ef18:	ldp	x21, x22, [sp, #48]
  43ef1c:	ldp	x23, x24, [sp, #64]
  43ef20:	ldp	x25, x26, [sp, #80]
  43ef24:	ldp	x27, x28, [sp, #96]
  43ef28:	add	sp, sp, #0xf0
  43ef2c:	ret
  43ef30:	mov	w5, #0x0                   	// #0
  43ef34:	cmp	w26, #0x2
  43ef38:	b.eq	43f270 <argp_parse@@Base+0xb388>  // b.none
  43ef3c:	cmp	w22, #0x0
  43ef40:	mov	w4, #0x5c                  	// #92
  43ef44:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  43ef48:	mov	w0, w4
  43ef4c:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  43ef50:	b.ne	43f5a0 <argp_parse@@Base+0xb6b8>  // b.any
  43ef54:	cbnz	w22, 43f610 <argp_parse@@Base+0xb728>
  43ef58:	mov	w21, #0x0                   	// #0
  43ef5c:	mov	w1, #0x0                   	// #0
  43ef60:	cbnz	w11, 43ec80 <argp_parse@@Base+0xad98>
  43ef64:	b	43ee70 <argp_parse@@Base+0xaf88>
  43ef68:	mov	w5, #0x0                   	// #0
  43ef6c:	cmp	w26, #0x2
  43ef70:	b.eq	43f288 <argp_parse@@Base+0xb3a0>  // b.none
  43ef74:	cmp	w26, #0x5
  43ef78:	b.ne	43efa0 <argp_parse@@Base+0xb0b8>  // b.any
  43ef7c:	ldr	x0, [sp, #200]
  43ef80:	tbz	w0, #2, 43efa0 <argp_parse@@Base+0xb0b8>
  43ef84:	add	x7, x20, #0x2
  43ef88:	cmp	x7, x25
  43ef8c:	b.cs	43efa0 <argp_parse@@Base+0xb0b8>  // b.hs, b.nlast
  43ef90:	ldrb	w4, [x3, #1]
  43ef94:	cmp	w4, #0x3f
  43ef98:	b.eq	43f77c <argp_parse@@Base+0xb894>  // b.none
  43ef9c:	nop
  43efa0:	mov	w1, #0x0                   	// #0
  43efa4:	mov	w21, #0x0                   	// #0
  43efa8:	mov	w4, #0x3f                  	// #63
  43efac:	b	43ee58 <argp_parse@@Base+0xaf70>
  43efb0:	mov	w5, #0x0                   	// #0
  43efb4:	cmp	w26, #0x2
  43efb8:	b.eq	43ed20 <argp_parse@@Base+0xae38>  // b.none
  43efbc:	mov	w1, #0x0                   	// #0
  43efc0:	mov	w4, #0x27                  	// #39
  43efc4:	str	w21, [sp, #120]
  43efc8:	b	43ee58 <argp_parse@@Base+0xaf70>
  43efcc:	mov	w0, #0x74                  	// #116
  43efd0:	cmp	w11, #0x0
  43efd4:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  43efd8:	b.eq	43eec4 <argp_parse@@Base+0xafdc>  // b.none
  43efdc:	cbz	w22, 43ef58 <argp_parse@@Base+0xb070>
  43efe0:	b	43f610 <argp_parse@@Base+0xb728>
  43efe4:	mov	w4, #0x62                  	// #98
  43efe8:	cmp	w26, #0x2
  43efec:	cset	w0, eq  // eq = none
  43eff0:	cbnz	w11, 43f018 <argp_parse@@Base+0xb130>
  43eff4:	mov	w21, #0x0                   	// #0
  43eff8:	b	43ecec <argp_parse@@Base+0xae04>
  43effc:	mov	w4, #0x66                  	// #102
  43f000:	b	43efe8 <argp_parse@@Base+0xb100>
  43f004:	mov	w4, #0x6e                  	// #110
  43f008:	mov	w21, #0x0                   	// #0
  43f00c:	cmp	w26, #0x2
  43f010:	cset	w0, eq  // eq = none
  43f014:	cbz	w11, 43eca0 <argp_parse@@Base+0xadb8>
  43f018:	and	w5, w22, w0
  43f01c:	b	43eecc <argp_parse@@Base+0xafe4>
  43f020:	mov	w4, #0x72                  	// #114
  43f024:	mov	w21, #0x0                   	// #0
  43f028:	b	43f00c <argp_parse@@Base+0xb124>
  43f02c:	mov	w4, #0x61                  	// #97
  43f030:	b	43efe8 <argp_parse@@Base+0xb100>
  43f034:	cbnz	w11, 43f944 <argp_parse@@Base+0xba5c>
  43f038:	mov	w5, #0x0                   	// #0
  43f03c:	cmp	w26, #0x2
  43f040:	eor	w1, w24, #0x1
  43f044:	cset	w0, eq  // eq = none
  43f048:	ands	w1, w0, w1
  43f04c:	b.eq	43f250 <argp_parse@@Base+0xb368>  // b.none
  43f050:	cmp	x23, x19
  43f054:	b.ls	43f060 <argp_parse@@Base+0xb178>  // b.plast
  43f058:	mov	w2, #0x27                  	// #39
  43f05c:	strb	w2, [x28, x19]
  43f060:	add	x2, x19, #0x1
  43f064:	cmp	x23, x2
  43f068:	b.ls	43f074 <argp_parse@@Base+0xb18c>  // b.plast
  43f06c:	mov	w3, #0x24                  	// #36
  43f070:	strb	w3, [x28, x2]
  43f074:	add	x2, x19, #0x2
  43f078:	cmp	x23, x2
  43f07c:	b.ls	43f088 <argp_parse@@Base+0xb1a0>  // b.plast
  43f080:	mov	w3, #0x27                  	// #39
  43f084:	strb	w3, [x28, x2]
  43f088:	add	x2, x19, #0x3
  43f08c:	cmp	x23, x2
  43f090:	b.ls	43f588 <argp_parse@@Base+0xb6a0>  // b.plast
  43f094:	mov	w24, w1
  43f098:	mov	w1, #0x5c                  	// #92
  43f09c:	strb	w1, [x28, x2]
  43f0a0:	cmp	w26, #0x2
  43f0a4:	add	x19, x2, #0x1
  43f0a8:	b.eq	43f768 <argp_parse@@Base+0xb880>  // b.none
  43f0ac:	add	x1, x20, #0x1
  43f0b0:	mov	w4, #0x30                  	// #48
  43f0b4:	cmp	x1, x25
  43f0b8:	b.cs	43f0d0 <argp_parse@@Base+0xb1e8>  // b.hs, b.nlast
  43f0bc:	ldrb	w1, [x27, x1]
  43f0c0:	sub	w1, w1, #0x30
  43f0c4:	and	w1, w1, #0xff
  43f0c8:	cmp	w1, #0x9
  43f0cc:	b.ls	43f61c <argp_parse@@Base+0xb734>  // b.plast
  43f0d0:	eor	w1, w22, #0x1
  43f0d4:	orr	w0, w0, w1
  43f0d8:	mov	w1, w21
  43f0dc:	mov	w21, #0x0                   	// #0
  43f0e0:	cbz	w0, 43ec80 <argp_parse@@Base+0xad98>
  43f0e4:	cbnz	w5, 43ec94 <argp_parse@@Base+0xadac>
  43f0e8:	b	43ed9c <argp_parse@@Base+0xaeb4>
  43f0ec:	ldrb	w4, [x27, x20]
  43f0f0:	cmp	w4, #0x7e
  43f0f4:	b.hi	43edf0 <argp_parse@@Base+0xaf08>  // b.pmore
  43f0f8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f0fc:	add	x0, x0, #0xb78
  43f100:	ldrh	w0, [x0, w4, uxtw #1]
  43f104:	adr	x1, 43f110 <argp_parse@@Base+0xb228>
  43f108:	add	x0, x1, w0, sxth #2
  43f10c:	br	x0
  43f110:	cmp	w26, #0x2
  43f114:	mov	w21, #0x0                   	// #0
  43f118:	cset	w1, eq  // eq = none
  43f11c:	cmp	w11, #0x0
  43f120:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43f124:	b.eq	43ee58 <argp_parse@@Base+0xaf70>  // b.none
  43f128:	b	43eec4 <argp_parse@@Base+0xafdc>
  43f12c:	cmp	w26, #0x2
  43f130:	cset	w1, eq  // eq = none
  43f134:	cmp	w11, #0x0
  43f138:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43f13c:	b.eq	43ee58 <argp_parse@@Base+0xaf70>  // b.none
  43f140:	b	43eec4 <argp_parse@@Base+0xafdc>
  43f144:	cbnz	w22, 43f034 <argp_parse@@Base+0xb14c>
  43f148:	ldr	x0, [sp, #200]
  43f14c:	mov	w5, #0x0                   	// #0
  43f150:	tbz	w0, #0, 43ef58 <argp_parse@@Base+0xb070>
  43f154:	add	x20, x20, #0x1
  43f158:	b	43eaf8 <argp_parse@@Base+0xac10>
  43f15c:	mov	w0, #0x66                  	// #102
  43f160:	cbz	w22, 43ef58 <argp_parse@@Base+0xb070>
  43f164:	b	43f610 <argp_parse@@Base+0xb728>
  43f168:	mov	w0, #0x62                  	// #98
  43f16c:	cbz	w22, 43ef58 <argp_parse@@Base+0xb070>
  43f170:	b	43f610 <argp_parse@@Base+0xb728>
  43f174:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f178:	add	x0, x0, #0xc78
  43f17c:	ldrh	w0, [x0, w4, uxtw #1]
  43f180:	adr	x1, 43f18c <argp_parse@@Base+0xb2a4>
  43f184:	add	x0, x1, w0, sxth #2
  43f188:	br	x0
  43f18c:	mov	w0, #0x0                   	// #0
  43f190:	b	43ec70 <argp_parse@@Base+0xad88>
  43f194:	mov	w0, #0x0                   	// #0
  43f198:	mov	w5, #0x0                   	// #0
  43f19c:	b	43ec70 <argp_parse@@Base+0xad88>
  43f1a0:	cbnz	w26, 43f9ec <argp_parse@@Base+0xbb04>
  43f1a4:	mov	w10, #0x1                   	// #1
  43f1a8:	mov	w7, #0x0                   	// #0
  43f1ac:	mov	w11, #0x0                   	// #0
  43f1b0:	mov	w5, #0x0                   	// #0
  43f1b4:	mov	x12, #0x0                   	// #0
  43f1b8:	mov	x19, #0x0                   	// #0
  43f1bc:	str	xzr, [sp, #112]
  43f1c0:	str	wzr, [sp, #120]
  43f1c4:	str	xzr, [sp, #128]
  43f1c8:	b	43eae8 <argp_parse@@Base+0xac00>
  43f1cc:	cmp	w26, #0x5
  43f1d0:	b.ne	43f214 <argp_parse@@Base+0xb32c>  // b.any
  43f1d4:	cbnz	w20, 43f80c <argp_parse@@Base+0xb924>
  43f1d8:	cbz	x23, 43f738 <argp_parse@@Base+0xb850>
  43f1dc:	mov	w0, #0x22                  	// #34
  43f1e0:	mov	w10, #0x1                   	// #1
  43f1e4:	mov	x12, #0x1                   	// #1
  43f1e8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f1ec:	mov	w5, w10
  43f1f0:	add	x1, x1, #0x9d8
  43f1f4:	mov	x19, x12
  43f1f8:	mov	w7, #0x0                   	// #0
  43f1fc:	mov	w11, #0x0                   	// #0
  43f200:	strb	w0, [x28]
  43f204:	str	x1, [sp, #112]
  43f208:	str	wzr, [sp, #120]
  43f20c:	str	xzr, [sp, #128]
  43f210:	b	43eae8 <argp_parse@@Base+0xac00>
  43f214:	cmp	w26, #0x6
  43f218:	b.ne	43f9ec <argp_parse@@Base+0xbb04>  // b.any
  43f21c:	adrp	x26, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f220:	mov	w10, #0x1                   	// #1
  43f224:	add	x0, x26, #0x9d8
  43f228:	mov	w11, w10
  43f22c:	mov	w5, w10
  43f230:	mov	w7, #0x0                   	// #0
  43f234:	mov	x12, #0x1                   	// #1
  43f238:	mov	x19, #0x0                   	// #0
  43f23c:	mov	w26, #0x5                   	// #5
  43f240:	str	x0, [sp, #112]
  43f244:	str	wzr, [sp, #120]
  43f248:	str	xzr, [sp, #128]
  43f24c:	b	43eae8 <argp_parse@@Base+0xac00>
  43f250:	mov	x2, x19
  43f254:	cmp	x23, x19
  43f258:	b.ls	43f0a0 <argp_parse@@Base+0xb1b8>  // b.plast
  43f25c:	mov	w1, w24
  43f260:	mov	w24, w1
  43f264:	mov	w1, #0x5c                  	// #92
  43f268:	strb	w1, [x28, x2]
  43f26c:	b	43f0a0 <argp_parse@@Base+0xb1b8>
  43f270:	cbnz	w11, 43f93c <argp_parse@@Base+0xba54>
  43f274:	add	x20, x20, #0x1
  43f278:	mov	w1, w24
  43f27c:	mov	w21, #0x0                   	// #0
  43f280:	mov	w4, #0x5c                  	// #92
  43f284:	b	43edac <argp_parse@@Base+0xaec4>
  43f288:	cbnz	w11, 43f93c <argp_parse@@Base+0xba54>
  43f28c:	mov	w21, #0x0                   	// #0
  43f290:	mov	w1, #0x0                   	// #0
  43f294:	mov	w4, #0x3f                  	// #63
  43f298:	cbnz	w5, 43ec94 <argp_parse@@Base+0xadac>
  43f29c:	b	43ed9c <argp_parse@@Base+0xaeb4>
  43f2a0:	str	xzr, [sp, #232]
  43f2a4:	cmn	x25, #0x1
  43f2a8:	b.ne	43f2e8 <argp_parse@@Base+0xb400>  // b.any
  43f2ac:	mov	x0, x27
  43f2b0:	str	w4, [sp, #136]
  43f2b4:	str	w5, [sp, #144]
  43f2b8:	str	x12, [sp, #152]
  43f2bc:	str	w11, [sp, #160]
  43f2c0:	str	w10, [sp, #172]
  43f2c4:	str	x6, [sp, #176]
  43f2c8:	bl	403ff0 <strlen@plt>
  43f2cc:	ldr	w4, [sp, #136]
  43f2d0:	mov	x25, x0
  43f2d4:	ldr	w5, [sp, #144]
  43f2d8:	ldr	w11, [sp, #160]
  43f2dc:	ldr	w10, [sp, #172]
  43f2e0:	ldr	x12, [sp, #152]
  43f2e4:	ldr	x6, [sp, #176]
  43f2e8:	mov	x8, #0x0                   	// #0
  43f2ec:	str	x19, [sp, #184]
  43f2f0:	mov	w19, w21
  43f2f4:	mov	x21, x8
  43f2f8:	str	w11, [sp, #136]
  43f2fc:	str	x12, [sp, #144]
  43f300:	str	w24, [sp, #152]
  43f304:	str	w10, [sp, #160]
  43f308:	stp	w4, w5, [sp, #172]
  43f30c:	str	x6, [sp, #216]
  43f310:	add	x24, x20, x21
  43f314:	add	x3, sp, #0xe8
  43f318:	sub	x2, x25, x24
  43f31c:	add	x1, x27, x24
  43f320:	add	x0, sp, #0xe4
  43f324:	bl	441e18 <argp_parse@@Base+0xdf30>
  43f328:	mov	x13, #0x2b                  	// #43
  43f32c:	mov	x3, x0
  43f330:	movk	x13, #0x2, lsl #32
  43f334:	cbz	x0, 43f37c <argp_parse@@Base+0xb494>
  43f338:	cmn	x0, #0x1
  43f33c:	b.eq	43f874 <argp_parse@@Base+0xb98c>  // b.none
  43f340:	cmn	x0, #0x2
  43f344:	mov	x7, #0x1                   	// #1
  43f348:	b.eq	43f8a0 <argp_parse@@Base+0xb9b8>  // b.none
  43f34c:	ldr	w0, [sp, #136]
  43f350:	cmp	w0, #0x0
  43f354:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  43f358:	b.eq	43f4e0 <argp_parse@@Base+0xb5f8>  // b.none
  43f35c:	ldr	w0, [sp, #228]
  43f360:	add	x21, x21, x3
  43f364:	bl	404a70 <iswprint@plt>
  43f368:	cmp	w0, #0x0
  43f36c:	csel	w19, w19, wzr, ne  // ne = any
  43f370:	add	x0, sp, #0xe8
  43f374:	bl	404670 <mbsinit@plt>
  43f378:	cbz	w0, 43f310 <argp_parse@@Base+0xb428>
  43f37c:	eor	w2, w19, #0x1
  43f380:	mov	x8, x21
  43f384:	ldr	w11, [sp, #136]
  43f388:	mov	w21, w19
  43f38c:	ldr	w24, [sp, #152]
  43f390:	and	w2, w22, w2
  43f394:	ldr	w10, [sp, #160]
  43f398:	ldp	w4, w5, [sp, #172]
  43f39c:	ldr	x12, [sp, #144]
  43f3a0:	ldr	x19, [sp, #184]
  43f3a4:	ldr	x6, [sp, #216]
  43f3a8:	cmp	x8, #0x1
  43f3ac:	b.ls	43ee4c <argp_parse@@Base+0xaf64>  // b.plast
  43f3b0:	add	x8, x8, x20
  43f3b4:	mov	w14, #0x0                   	// #0
  43f3b8:	mov	w3, #0x27                  	// #39
  43f3bc:	mov	w7, #0x5c                  	// #92
  43f3c0:	mov	w9, #0x24                  	// #36
  43f3c4:	cbz	w2, 43f484 <argp_parse@@Base+0xb59c>
  43f3c8:	cmp	w26, #0x2
  43f3cc:	cset	w0, eq  // eq = none
  43f3d0:	cbnz	w11, 43f6c8 <argp_parse@@Base+0xb7e0>
  43f3d4:	eor	w1, w24, #0x1
  43f3d8:	ands	w0, w0, w1
  43f3dc:	b.eq	43f414 <argp_parse@@Base+0xb52c>  // b.none
  43f3e0:	cmp	x23, x19
  43f3e4:	b.ls	43f3ec <argp_parse@@Base+0xb504>  // b.plast
  43f3e8:	strb	w3, [x28, x19]
  43f3ec:	add	x1, x19, #0x1
  43f3f0:	cmp	x23, x1
  43f3f4:	b.ls	43f3fc <argp_parse@@Base+0xb514>  // b.plast
  43f3f8:	strb	w9, [x28, x1]
  43f3fc:	add	x1, x19, #0x2
  43f400:	cmp	x23, x1
  43f404:	b.ls	43f40c <argp_parse@@Base+0xb524>  // b.plast
  43f408:	strb	w3, [x28, x1]
  43f40c:	add	x19, x19, #0x3
  43f410:	mov	w24, w0
  43f414:	cmp	x23, x19
  43f418:	b.ls	43f420 <argp_parse@@Base+0xb538>  // b.plast
  43f41c:	strb	w7, [x28, x19]
  43f420:	add	x0, x19, #0x1
  43f424:	cmp	x23, x0
  43f428:	b.ls	43f438 <argp_parse@@Base+0xb550>  // b.plast
  43f42c:	lsr	w1, w4, #6
  43f430:	add	w1, w1, #0x30
  43f434:	strb	w1, [x28, x0]
  43f438:	add	x0, x19, #0x2
  43f43c:	cmp	x23, x0
  43f440:	b.ls	43f450 <argp_parse@@Base+0xb568>  // b.plast
  43f444:	ubfx	x1, x4, #3, #3
  43f448:	add	w1, w1, #0x30
  43f44c:	strb	w1, [x28, x0]
  43f450:	and	w4, w4, #0x7
  43f454:	add	x20, x20, #0x1
  43f458:	add	w4, w4, #0x30
  43f45c:	cmp	x20, x8
  43f460:	add	x19, x19, #0x3
  43f464:	b.cs	43ed04 <argp_parse@@Base+0xae1c>  // b.hs, b.nlast
  43f468:	mov	w14, w2
  43f46c:	cmp	x23, x19
  43f470:	b.ls	43f478 <argp_parse@@Base+0xb590>  // b.plast
  43f474:	strb	w4, [x28, x19]
  43f478:	ldrb	w4, [x27, x20]
  43f47c:	add	x19, x19, #0x1
  43f480:	cbnz	w2, 43f3c8 <argp_parse@@Base+0xb4e0>
  43f484:	eor	w0, w14, #0x1
  43f488:	and	w0, w24, w0
  43f48c:	and	w0, w0, #0xff
  43f490:	cbz	w5, 43f4a4 <argp_parse@@Base+0xb5bc>
  43f494:	cmp	x23, x19
  43f498:	b.ls	43f4a0 <argp_parse@@Base+0xb5b8>  // b.plast
  43f49c:	strb	w7, [x28, x19]
  43f4a0:	add	x19, x19, #0x1
  43f4a4:	add	x20, x20, #0x1
  43f4a8:	cmp	x20, x8
  43f4ac:	b.cs	43f6c0 <argp_parse@@Base+0xb7d8>  // b.hs, b.nlast
  43f4b0:	cbz	w0, 43f730 <argp_parse@@Base+0xb848>
  43f4b4:	cmp	x23, x19
  43f4b8:	b.ls	43f4c0 <argp_parse@@Base+0xb5d8>  // b.plast
  43f4bc:	strb	w3, [x28, x19]
  43f4c0:	add	x0, x19, #0x1
  43f4c4:	cmp	x23, x0
  43f4c8:	b.ls	43f4d0 <argp_parse@@Base+0xb5e8>  // b.plast
  43f4cc:	strb	w3, [x28, x0]
  43f4d0:	add	x19, x19, #0x2
  43f4d4:	mov	w5, #0x0                   	// #0
  43f4d8:	mov	w24, #0x0                   	// #0
  43f4dc:	b	43f46c <argp_parse@@Base+0xb584>
  43f4e0:	cmp	x3, #0x1
  43f4e4:	b.eq	43f35c <argp_parse@@Base+0xb474>  // b.none
  43f4e8:	add	x2, x24, #0x1
  43f4ec:	add	x0, x27, x3
  43f4f0:	add	x2, x27, x2
  43f4f4:	add	x9, x0, x24
  43f4f8:	b	43f508 <argp_parse@@Base+0xb620>
  43f4fc:	add	x2, x2, #0x1
  43f500:	cmp	x9, x2
  43f504:	b.eq	43f35c <argp_parse@@Base+0xb474>  // b.none
  43f508:	ldrb	w0, [x2]
  43f50c:	sub	w0, w0, #0x5b
  43f510:	and	w0, w0, #0xff
  43f514:	cmp	w0, #0x21
  43f518:	b.hi	43f4fc <argp_parse@@Base+0xb614>  // b.pmore
  43f51c:	lsl	x0, x7, x0
  43f520:	tst	x0, x13
  43f524:	b.eq	43f4fc <argp_parse@@Base+0xb614>  // b.none
  43f528:	b	43eec4 <argp_parse@@Base+0xafdc>
  43f52c:	mov	w10, w26
  43f530:	mov	w11, w26
  43f534:	adrp	x26, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f538:	add	x0, x26, #0xa00
  43f53c:	str	x0, [sp, #112]
  43f540:	str	wzr, [sp, #120]
  43f544:	mov	w7, #0x0                   	// #0
  43f548:	mov	w5, #0x0                   	// #0
  43f54c:	mov	x12, #0x1                   	// #1
  43f550:	mov	x19, #0x0                   	// #0
  43f554:	mov	w26, #0x2                   	// #2
  43f558:	str	xzr, [sp, #128]
  43f55c:	b	43eae8 <argp_parse@@Base+0xac00>
  43f560:	mov	w10, #0x1                   	// #1
  43f564:	mov	w7, #0x0                   	// #0
  43f568:	mov	w5, w10
  43f56c:	mov	w11, #0x0                   	// #0
  43f570:	mov	x12, #0x0                   	// #0
  43f574:	mov	x19, #0x0                   	// #0
  43f578:	str	xzr, [sp, #112]
  43f57c:	str	wzr, [sp, #120]
  43f580:	str	xzr, [sp, #128]
  43f584:	b	43eae8 <argp_parse@@Base+0xac00>
  43f588:	add	x19, x19, #0x4
  43f58c:	mov	w24, w1
  43f590:	mov	w21, #0x0                   	// #0
  43f594:	mov	w4, #0x30                  	// #48
  43f598:	cbnz	w5, 43ec94 <argp_parse@@Base+0xadac>
  43f59c:	b	43ed9c <argp_parse@@Base+0xaeb4>
  43f5a0:	add	x20, x20, #0x1
  43f5a4:	mov	w1, w24
  43f5a8:	mov	w21, #0x0                   	// #0
  43f5ac:	b	43edac <argp_parse@@Base+0xaec4>
  43f5b0:	mov	w0, w5
  43f5b4:	mov	w5, #0x0                   	// #0
  43f5b8:	b	43ec70 <argp_parse@@Base+0xad88>
  43f5bc:	mov	w0, #0x0                   	// #0
  43f5c0:	cbnz	x20, 43f6a4 <argp_parse@@Base+0xb7bc>
  43f5c4:	mov	w21, w5
  43f5c8:	mov	w1, #0x0                   	// #0
  43f5cc:	mov	w5, w0
  43f5d0:	b	43ee58 <argp_parse@@Base+0xaf70>
  43f5d4:	mov	w1, w26
  43f5d8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f5dc:	add	x0, x0, #0xa08
  43f5e0:	str	w11, [sp, #112]
  43f5e4:	str	x6, [sp, #120]
  43f5e8:	bl	43e870 <argp_parse@@Base+0xa988>
  43f5ec:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f5f0:	str	x0, [sp, #208]
  43f5f4:	add	x0, x1, #0xa00
  43f5f8:	mov	w1, w26
  43f5fc:	bl	43e870 <argp_parse@@Base+0xa988>
  43f600:	str	x0, [sp, #240]
  43f604:	ldr	w11, [sp, #112]
  43f608:	ldr	x6, [sp, #120]
  43f60c:	b	43ea60 <argp_parse@@Base+0xab78>
  43f610:	mov	w4, w0
  43f614:	mov	w21, #0x0                   	// #0
  43f618:	b	43f00c <argp_parse@@Base+0xb124>
  43f61c:	cmp	x23, x19
  43f620:	b.ls	43f628 <argp_parse@@Base+0xb740>  // b.plast
  43f624:	strb	w4, [x28, x19]
  43f628:	add	x1, x2, #0x2
  43f62c:	cmp	x23, x1
  43f630:	b.ls	43f63c <argp_parse@@Base+0xb754>  // b.plast
  43f634:	mov	w3, #0x30                  	// #48
  43f638:	strb	w3, [x28, x1]
  43f63c:	add	x19, x2, #0x3
  43f640:	mov	w4, #0x30                  	// #48
  43f644:	b	43f0d0 <argp_parse@@Base+0xb1e8>
  43f648:	mov	w0, #0x76                  	// #118
  43f64c:	cbz	w22, 43ef58 <argp_parse@@Base+0xb070>
  43f650:	b	43f610 <argp_parse@@Base+0xb728>
  43f654:	mov	w0, #0x72                  	// #114
  43f658:	b	43efd0 <argp_parse@@Base+0xb0e8>
  43f65c:	mov	w0, #0x61                  	// #97
  43f660:	cbz	w22, 43ef58 <argp_parse@@Base+0xb070>
  43f664:	b	43f610 <argp_parse@@Base+0xb728>
  43f668:	mov	w0, #0x6e                  	// #110
  43f66c:	b	43efd0 <argp_parse@@Base+0xb0e8>
  43f670:	mov	w0, #0x0                   	// #0
  43f674:	mov	w21, w5
  43f678:	mov	w1, #0x0                   	// #0
  43f67c:	mov	w5, w0
  43f680:	mov	w4, #0x20                  	// #32
  43f684:	b	43ee58 <argp_parse@@Base+0xaf70>
  43f688:	mov	w5, #0x0                   	// #0
  43f68c:	mov	w0, #0x74                  	// #116
  43f690:	b	43efd0 <argp_parse@@Base+0xb0e8>
  43f694:	mov	w5, #0x0                   	// #0
  43f698:	mov	w0, #0x76                  	// #118
  43f69c:	cbz	w22, 43ef58 <argp_parse@@Base+0xb070>
  43f6a0:	b	43f610 <argp_parse@@Base+0xb728>
  43f6a4:	mov	w5, w0
  43f6a8:	mov	w21, #0x0                   	// #0
  43f6ac:	mov	w1, #0x0                   	// #0
  43f6b0:	b	43ec80 <argp_parse@@Base+0xad98>
  43f6b4:	mov	w2, w22
  43f6b8:	mov	w21, #0x0                   	// #0
  43f6bc:	b	43f3b0 <argp_parse@@Base+0xb4c8>
  43f6c0:	mov	w1, w0
  43f6c4:	b	43edac <argp_parse@@Base+0xaec4>
  43f6c8:	mov	w5, w0
  43f6cc:	b	43eecc <argp_parse@@Base+0xafe4>
  43f6d0:	mov	w5, #0x1                   	// #1
  43f6d4:	cbz	w20, 43f6fc <argp_parse@@Base+0xb814>
  43f6d8:	mov	w10, #0x1                   	// #1
  43f6dc:	adrp	x26, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f6e0:	mov	w11, w10
  43f6e4:	add	x0, x26, #0xa00
  43f6e8:	str	x0, [sp, #112]
  43f6ec:	str	wzr, [sp, #120]
  43f6f0:	b	43f544 <argp_parse@@Base+0xb65c>
  43f6f4:	cbnz	w20, 43f99c <argp_parse@@Base+0xbab4>
  43f6f8:	mov	w5, #0x0                   	// #0
  43f6fc:	cbnz	x23, 43f9d4 <argp_parse@@Base+0xbaec>
  43f700:	adrp	x26, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f704:	mov	x12, #0x1                   	// #1
  43f708:	add	x0, x26, #0xa00
  43f70c:	mov	x19, x12
  43f710:	mov	w10, #0x1                   	// #1
  43f714:	mov	w7, #0x0                   	// #0
  43f718:	mov	w11, #0x0                   	// #0
  43f71c:	mov	w26, #0x2                   	// #2
  43f720:	str	x0, [sp, #112]
  43f724:	str	wzr, [sp, #120]
  43f728:	str	xzr, [sp, #128]
  43f72c:	b	43eae8 <argp_parse@@Base+0xac00>
  43f730:	mov	w5, #0x0                   	// #0
  43f734:	b	43f46c <argp_parse@@Base+0xb584>
  43f738:	mov	w10, #0x1                   	// #1
  43f73c:	mov	x12, #0x1                   	// #1
  43f740:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f744:	mov	w5, w10
  43f748:	add	x0, x0, #0x9d8
  43f74c:	mov	x19, x12
  43f750:	mov	w7, #0x0                   	// #0
  43f754:	mov	w11, #0x0                   	// #0
  43f758:	str	x0, [sp, #112]
  43f75c:	str	wzr, [sp, #120]
  43f760:	str	xzr, [sp, #128]
  43f764:	b	43eae8 <argp_parse@@Base+0xac00>
  43f768:	mov	w1, w21
  43f76c:	mov	w4, #0x30                  	// #48
  43f770:	mov	w21, #0x0                   	// #0
  43f774:	cbnz	w5, 43ec94 <argp_parse@@Base+0xadac>
  43f778:	b	43ed9c <argp_parse@@Base+0xaeb4>
  43f77c:	ldrb	w3, [x27, x7]
  43f780:	cmp	w3, #0x3e
  43f784:	b.hi	43f988 <argp_parse@@Base+0xbaa0>  // b.pmore
  43f788:	mov	x0, #0x1                   	// #1
  43f78c:	mov	x2, #0xa38200000000        	// #179778741075968
  43f790:	movk	x2, #0x7000, lsl #48
  43f794:	lsl	x0, x0, x3
  43f798:	mov	w1, #0x0                   	// #0
  43f79c:	tst	x0, x2
  43f7a0:	mov	w21, #0x0                   	// #0
  43f7a4:	b.eq	43ee58 <argp_parse@@Base+0xaf70>  // b.none
  43f7a8:	cbnz	w11, 43eed8 <argp_parse@@Base+0xaff0>
  43f7ac:	cmp	x23, x19
  43f7b0:	b.ls	43f7b8 <argp_parse@@Base+0xb8d0>  // b.plast
  43f7b4:	strb	w4, [x28, x19]
  43f7b8:	add	x0, x19, #0x1
  43f7bc:	cmp	x23, x0
  43f7c0:	b.ls	43f7cc <argp_parse@@Base+0xb8e4>  // b.plast
  43f7c4:	mov	w1, #0x22                  	// #34
  43f7c8:	strb	w1, [x28, x0]
  43f7cc:	add	x0, x19, #0x2
  43f7d0:	cmp	x23, x0
  43f7d4:	b.ls	43f7e0 <argp_parse@@Base+0xb8f8>  // b.plast
  43f7d8:	mov	w1, #0x22                  	// #34
  43f7dc:	strb	w1, [x28, x0]
  43f7e0:	add	x0, x19, #0x3
  43f7e4:	cmp	x23, x0
  43f7e8:	b.ls	43f7f4 <argp_parse@@Base+0xb90c>  // b.plast
  43f7ec:	mov	w1, #0x3f                  	// #63
  43f7f0:	strb	w1, [x28, x0]
  43f7f4:	add	x19, x19, #0x4
  43f7f8:	mov	w4, w3
  43f7fc:	mov	x20, x7
  43f800:	mov	w0, #0x0                   	// #0
  43f804:	mov	w21, #0x0                   	// #0
  43f808:	b	43f0d0 <argp_parse@@Base+0xb1e8>
  43f80c:	mov	w10, #0x1                   	// #1
  43f810:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f814:	mov	w11, w10
  43f818:	add	x0, x0, #0x9d8
  43f81c:	mov	w5, w10
  43f820:	mov	w7, #0x0                   	// #0
  43f824:	mov	x12, #0x1                   	// #1
  43f828:	mov	x19, #0x0                   	// #0
  43f82c:	str	x0, [sp, #112]
  43f830:	str	wzr, [sp, #120]
  43f834:	str	xzr, [sp, #128]
  43f838:	b	43eae8 <argp_parse@@Base+0xac00>
  43f83c:	mov	w0, w5
  43f840:	b	43f5c0 <argp_parse@@Base+0xb6d8>
  43f844:	mov	w0, w5
  43f848:	b	43f674 <argp_parse@@Base+0xb78c>
  43f84c:	ldr	x1, [sp, #208]
  43f850:	ldrb	w0, [x1]
  43f854:	cbz	w0, 43ea68 <argp_parse@@Base+0xab80>
  43f858:	cmp	x23, x19
  43f85c:	b.ls	43f864 <argp_parse@@Base+0xb97c>  // b.plast
  43f860:	strb	w0, [x28, x19]
  43f864:	add	x19, x19, #0x1
  43f868:	ldrb	w0, [x1, x19]
  43f86c:	cbnz	w0, 43f858 <argp_parse@@Base+0xb970>
  43f870:	b	43ea68 <argp_parse@@Base+0xab80>
  43f874:	mov	x8, x21
  43f878:	ldr	w11, [sp, #136]
  43f87c:	ldr	w24, [sp, #152]
  43f880:	mov	w2, w22
  43f884:	ldr	w10, [sp, #160]
  43f888:	mov	w21, #0x0                   	// #0
  43f88c:	ldp	w4, w5, [sp, #172]
  43f890:	ldr	x12, [sp, #144]
  43f894:	ldr	x19, [sp, #184]
  43f898:	ldr	x6, [sp, #216]
  43f89c:	b	43f3a8 <argp_parse@@Base+0xb4c0>
  43f8a0:	mov	x9, x24
  43f8a4:	cmp	x24, x25
  43f8a8:	ldr	w11, [sp, #136]
  43f8ac:	mov	x8, x21
  43f8b0:	ldr	w24, [sp, #152]
  43f8b4:	ldr	w10, [sp, #160]
  43f8b8:	ldp	w4, w5, [sp, #172]
  43f8bc:	ldr	x12, [sp, #144]
  43f8c0:	ldr	x19, [sp, #184]
  43f8c4:	ldr	x6, [sp, #216]
  43f8c8:	b.cc	43f8e0 <argp_parse@@Base+0xb9f8>  // b.lo, b.ul, b.last
  43f8cc:	b	43f8e8 <argp_parse@@Base+0xba00>
  43f8d0:	add	x8, x8, #0x1
  43f8d4:	add	x9, x20, x8
  43f8d8:	cmp	x25, x9
  43f8dc:	b.ls	43f8e8 <argp_parse@@Base+0xba00>  // b.plast
  43f8e0:	ldrb	w0, [x27, x9]
  43f8e4:	cbnz	w0, 43f8d0 <argp_parse@@Base+0xb9e8>
  43f8e8:	mov	w2, w22
  43f8ec:	mov	w21, #0x0                   	// #0
  43f8f0:	b	43f3a8 <argp_parse@@Base+0xb4c0>
  43f8f4:	mov	w0, w11
  43f8f8:	ldr	x1, [sp, #112]
  43f8fc:	cmp	x1, #0x0
  43f900:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43f904:	b.eq	43f92c <argp_parse@@Base+0xba44>  // b.none
  43f908:	ldrb	w0, [x1]
  43f90c:	cbz	w0, 43f92c <argp_parse@@Base+0xba44>
  43f910:	sub	x26, x1, x19
  43f914:	cmp	x23, x19
  43f918:	b.ls	43f920 <argp_parse@@Base+0xba38>  // b.plast
  43f91c:	strb	w0, [x28, x19]
  43f920:	add	x19, x19, #0x1
  43f924:	ldrb	w0, [x26, x19]
  43f928:	cbnz	w0, 43f914 <argp_parse@@Base+0xba2c>
  43f92c:	cmp	x23, x19
  43f930:	b.ls	43ef0c <argp_parse@@Base+0xb024>  // b.plast
  43f934:	strb	wzr, [x28, x19]
  43f938:	b	43ef0c <argp_parse@@Base+0xb024>
  43f93c:	mov	w5, w22
  43f940:	b	43eecc <argp_parse@@Base+0xafe4>
  43f944:	cmp	w26, #0x2
  43f948:	cset	w5, eq  // eq = none
  43f94c:	b	43eecc <argp_parse@@Base+0xafe4>
  43f950:	ldr	w5, [sp, #200]
  43f954:	mov	x3, x25
  43f958:	ldr	x1, [sp, #128]
  43f95c:	mov	x2, x27
  43f960:	ldr	x7, [sp, #208]
  43f964:	mov	w4, #0x5                   	// #5
  43f968:	ldr	x0, [sp, #240]
  43f96c:	str	x0, [sp]
  43f970:	mov	x0, x28
  43f974:	bl	43e9d8 <argp_parse@@Base+0xaaf0>
  43f978:	mov	x19, x0
  43f97c:	b	43ef0c <argp_parse@@Base+0xb024>
  43f980:	ldr	w0, [sp, #120]
  43f984:	b	43f8f8 <argp_parse@@Base+0xba10>
  43f988:	mov	w1, #0x0                   	// #0
  43f98c:	mov	w21, #0x0                   	// #0
  43f990:	b	43ee58 <argp_parse@@Base+0xaf70>
  43f994:	mov	w26, #0x2                   	// #2
  43f998:	b	43eecc <argp_parse@@Base+0xafe4>
  43f99c:	mov	w10, #0x1                   	// #1
  43f9a0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1be10>
  43f9a4:	mov	w11, w10
  43f9a8:	add	x0, x0, #0xa00
  43f9ac:	mov	w7, #0x0                   	// #0
  43f9b0:	mov	w5, #0x0                   	// #0
  43f9b4:	mov	x12, #0x1                   	// #1
  43f9b8:	mov	x19, #0x0                   	// #0
  43f9bc:	str	x0, [sp, #112]
  43f9c0:	str	wzr, [sp, #120]
  43f9c4:	str	xzr, [sp, #128]
  43f9c8:	b	43eae8 <argp_parse@@Base+0xac00>
  43f9cc:	ldr	x23, [sp, #128]
  43f9d0:	b	43ed78 <argp_parse@@Base+0xae90>
  43f9d4:	mov	w7, #0x0                   	// #0
  43f9d8:	mov	w0, #0x0                   	// #0
  43f9dc:	mov	w10, #0x1                   	// #1
  43f9e0:	mov	x1, #0x0                   	// #0
  43f9e4:	str	x23, [sp, #128]
  43f9e8:	b	43ec38 <argp_parse@@Base+0xad50>
  43f9ec:	bl	404650 <abort@plt>
  43f9f0:	sub	sp, sp, #0x80
  43f9f4:	stp	x29, x30, [sp, #16]
  43f9f8:	add	x29, sp, #0x10
  43f9fc:	stp	x19, x20, [sp, #32]
  43fa00:	mov	w19, w0
  43fa04:	mov	x20, x3
  43fa08:	stp	x21, x22, [sp, #48]
  43fa0c:	stp	x23, x24, [sp, #64]
  43fa10:	mov	x23, x1
  43fa14:	mov	x24, x2
  43fa18:	stp	x25, x26, [sp, #80]
  43fa1c:	stp	x27, x28, [sp, #96]
  43fa20:	bl	404ad0 <__errno_location@plt>
  43fa24:	mov	x22, x0
  43fa28:	ldr	w0, [x0]
  43fa2c:	adrp	x27, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43fa30:	str	w0, [sp, #116]
  43fa34:	ldr	x21, [x27, #976]
  43fa38:	tbnz	w19, #31, 43fb90 <argp_parse@@Base+0xbca8>
  43fa3c:	add	x26, x27, #0x3d0
  43fa40:	ldr	w0, [x26, #8]
  43fa44:	cmp	w0, w19
  43fa48:	b.gt	43fa98 <argp_parse@@Base+0xbbb0>
  43fa4c:	mov	w0, #0x7fffffff            	// #2147483647
  43fa50:	cmp	w19, w0
  43fa54:	b.eq	43fb8c <argp_parse@@Base+0xbca4>  // b.none
  43fa58:	add	w28, w19, #0x1
  43fa5c:	add	x0, x26, #0x10
  43fa60:	cmp	x21, x0
  43fa64:	sbfiz	x1, x28, #4, #32
  43fa68:	b.eq	43fb70 <argp_parse@@Base+0xbc88>  // b.none
  43fa6c:	mov	x0, x21
  43fa70:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  43fa74:	mov	x21, x0
  43fa78:	str	x0, [x27, #976]
  43fa7c:	ldr	w0, [x26, #8]
  43fa80:	mov	w1, #0x0                   	// #0
  43fa84:	sub	w2, w28, w0
  43fa88:	add	x0, x21, w0, sxtw #4
  43fa8c:	sbfiz	x2, x2, #4, #32
  43fa90:	bl	404410 <memset@plt>
  43fa94:	str	w28, [x26, #8]
  43fa98:	sbfiz	x19, x19, #4, #32
  43fa9c:	add	x26, x20, #0x8
  43faa0:	add	x0, x21, x19
  43faa4:	str	x0, [sp, #120]
  43faa8:	ldp	w4, w5, [x20]
  43faac:	mov	x6, x26
  43fab0:	ldr	x7, [x20, #40]
  43fab4:	orr	w25, w5, #0x1
  43fab8:	ldr	x27, [x21, x19]
  43fabc:	mov	x3, x24
  43fac0:	ldr	x28, [x0, #8]
  43fac4:	mov	x1, x27
  43fac8:	ldr	x0, [x20, #48]
  43facc:	str	x0, [sp]
  43fad0:	mov	x2, x23
  43fad4:	mov	w5, w25
  43fad8:	mov	x0, x28
  43fadc:	bl	43e9d8 <argp_parse@@Base+0xaaf0>
  43fae0:	cmp	x27, x0
  43fae4:	b.hi	43fb44 <argp_parse@@Base+0xbc5c>  // b.pmore
  43fae8:	add	x27, x0, #0x1
  43faec:	str	x27, [x21, x19]
  43faf0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43faf4:	add	x0, x0, #0xda8
  43faf8:	cmp	x28, x0
  43fafc:	b.eq	43fb08 <argp_parse@@Base+0xbc20>  // b.none
  43fb00:	mov	x0, x28
  43fb04:	bl	4047b0 <free@plt>
  43fb08:	mov	x0, x27
  43fb0c:	bl	440f48 <argp_parse@@Base+0xd060>
  43fb10:	ldr	x1, [sp, #120]
  43fb14:	mov	x28, x0
  43fb18:	ldr	w4, [x20]
  43fb1c:	mov	x6, x26
  43fb20:	ldr	x7, [x20, #40]
  43fb24:	str	x0, [x1, #8]
  43fb28:	ldr	x1, [x20, #48]
  43fb2c:	str	x1, [sp]
  43fb30:	mov	w5, w25
  43fb34:	mov	x3, x24
  43fb38:	mov	x2, x23
  43fb3c:	mov	x1, x27
  43fb40:	bl	43e9d8 <argp_parse@@Base+0xaaf0>
  43fb44:	ldr	w0, [sp, #116]
  43fb48:	ldp	x29, x30, [sp, #16]
  43fb4c:	ldp	x19, x20, [sp, #32]
  43fb50:	ldp	x23, x24, [sp, #64]
  43fb54:	ldp	x25, x26, [sp, #80]
  43fb58:	str	w0, [x22]
  43fb5c:	mov	x0, x28
  43fb60:	ldp	x21, x22, [sp, #48]
  43fb64:	ldp	x27, x28, [sp, #96]
  43fb68:	add	sp, sp, #0x80
  43fb6c:	ret
  43fb70:	mov	x0, #0x0                   	// #0
  43fb74:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  43fb78:	mov	x21, x0
  43fb7c:	str	x0, [x27, #976]
  43fb80:	ldp	x0, x1, [x26, #16]
  43fb84:	stp	x0, x1, [x21]
  43fb88:	b	43fa7c <argp_parse@@Base+0xbb94>
  43fb8c:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  43fb90:	bl	404650 <abort@plt>
  43fb94:	nop
  43fb98:	stp	x29, x30, [sp, #-48]!
  43fb9c:	mov	x29, sp
  43fba0:	stp	x19, x20, [sp, #16]
  43fba4:	mov	x20, x0
  43fba8:	str	x21, [sp, #32]
  43fbac:	bl	404ad0 <__errno_location@plt>
  43fbb0:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43fbb4:	mov	x19, x0
  43fbb8:	add	x2, x2, #0xda8
  43fbbc:	cmp	x20, #0x0
  43fbc0:	add	x2, x2, #0x100
  43fbc4:	mov	x1, #0x38                  	// #56
  43fbc8:	ldr	w21, [x19]
  43fbcc:	csel	x0, x2, x20, eq  // eq = none
  43fbd0:	bl	441140 <argp_parse@@Base+0xd258>
  43fbd4:	str	w21, [x19]
  43fbd8:	ldp	x19, x20, [sp, #16]
  43fbdc:	ldr	x21, [sp, #32]
  43fbe0:	ldp	x29, x30, [sp], #48
  43fbe4:	ret
  43fbe8:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43fbec:	add	x1, x1, #0xda8
  43fbf0:	cmp	x0, #0x0
  43fbf4:	add	x1, x1, #0x100
  43fbf8:	csel	x0, x1, x0, eq  // eq = none
  43fbfc:	ldr	w0, [x0]
  43fc00:	ret
  43fc04:	nop
  43fc08:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43fc0c:	add	x2, x2, #0xda8
  43fc10:	cmp	x0, #0x0
  43fc14:	add	x2, x2, #0x100
  43fc18:	csel	x0, x2, x0, eq  // eq = none
  43fc1c:	str	w1, [x0]
  43fc20:	ret
  43fc24:	nop
  43fc28:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43fc2c:	add	x3, x3, #0xda8
  43fc30:	cmp	x0, #0x0
  43fc34:	add	x3, x3, #0x100
  43fc38:	csel	x0, x3, x0, eq  // eq = none
  43fc3c:	ubfx	x4, x1, #5, #3
  43fc40:	add	x3, x0, #0x8
  43fc44:	and	w1, w1, #0x1f
  43fc48:	ldr	w5, [x3, x4, lsl #2]
  43fc4c:	lsr	w0, w5, w1
  43fc50:	eor	w2, w0, w2
  43fc54:	and	w2, w2, #0x1
  43fc58:	and	w0, w0, #0x1
  43fc5c:	lsl	w2, w2, w1
  43fc60:	eor	w2, w2, w5
  43fc64:	str	w2, [x3, x4, lsl #2]
  43fc68:	ret
  43fc6c:	nop
  43fc70:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43fc74:	add	x3, x3, #0xda8
  43fc78:	cmp	x0, #0x0
  43fc7c:	add	x3, x3, #0x100
  43fc80:	csel	x2, x3, x0, eq  // eq = none
  43fc84:	ldr	w0, [x2, #4]
  43fc88:	str	w1, [x2, #4]
  43fc8c:	ret
  43fc90:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43fc94:	add	x3, x3, #0xda8
  43fc98:	cmp	x0, #0x0
  43fc9c:	add	x3, x3, #0x100
  43fca0:	csel	x0, x3, x0, eq  // eq = none
  43fca4:	mov	w3, #0xa                   	// #10
  43fca8:	cmp	x1, #0x0
  43fcac:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  43fcb0:	str	w3, [x0]
  43fcb4:	b.eq	43fcc0 <argp_parse@@Base+0xbdd8>  // b.none
  43fcb8:	stp	x1, x2, [x0, #40]
  43fcbc:	ret
  43fcc0:	stp	x29, x30, [sp, #-16]!
  43fcc4:	mov	x29, sp
  43fcc8:	bl	404650 <abort@plt>
  43fccc:	nop
  43fcd0:	sub	sp, sp, #0x50
  43fcd4:	adrp	x5, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43fcd8:	stp	x29, x30, [sp, #16]
  43fcdc:	add	x29, sp, #0x10
  43fce0:	stp	x19, x20, [sp, #32]
  43fce4:	mov	x19, x4
  43fce8:	add	x4, x5, #0xda8
  43fcec:	cmp	x19, #0x0
  43fcf0:	add	x4, x4, #0x100
  43fcf4:	csel	x19, x4, x19, eq  // eq = none
  43fcf8:	mov	x20, x3
  43fcfc:	stp	x21, x22, [sp, #48]
  43fd00:	mov	x21, x0
  43fd04:	mov	x22, x1
  43fd08:	str	x23, [sp, #64]
  43fd0c:	mov	x23, x2
  43fd10:	bl	404ad0 <__errno_location@plt>
  43fd14:	ldp	x7, x8, [x19, #40]
  43fd18:	mov	x3, x20
  43fd1c:	mov	x20, x0
  43fd20:	mov	x0, x21
  43fd24:	ldp	w4, w5, [x19]
  43fd28:	mov	x2, x23
  43fd2c:	ldr	w21, [x20]
  43fd30:	mov	x1, x22
  43fd34:	str	x8, [sp]
  43fd38:	add	x6, x19, #0x8
  43fd3c:	bl	43e9d8 <argp_parse@@Base+0xaaf0>
  43fd40:	ldp	x29, x30, [sp, #16]
  43fd44:	ldr	x23, [sp, #64]
  43fd48:	str	w21, [x20]
  43fd4c:	ldp	x19, x20, [sp, #32]
  43fd50:	ldp	x21, x22, [sp, #48]
  43fd54:	add	sp, sp, #0x50
  43fd58:	ret
  43fd5c:	nop
  43fd60:	sub	sp, sp, #0x70
  43fd64:	adrp	x4, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43fd68:	add	x4, x4, #0xda8
  43fd6c:	cmp	x3, #0x0
  43fd70:	add	x4, x4, #0x100
  43fd74:	stp	x29, x30, [sp, #16]
  43fd78:	add	x29, sp, #0x10
  43fd7c:	stp	x19, x20, [sp, #32]
  43fd80:	csel	x19, x4, x3, eq  // eq = none
  43fd84:	mov	x20, x2
  43fd88:	stp	x21, x22, [sp, #48]
  43fd8c:	mov	x22, x0
  43fd90:	stp	x23, x24, [sp, #64]
  43fd94:	mov	x23, x1
  43fd98:	stp	x25, x26, [sp, #80]
  43fd9c:	stp	x27, x28, [sp, #96]
  43fda0:	bl	404ad0 <__errno_location@plt>
  43fda4:	ldr	w28, [x0]
  43fda8:	ldp	w4, w5, [x19]
  43fdac:	mov	x21, x0
  43fdb0:	ldp	x7, x0, [x19, #40]
  43fdb4:	cmp	x20, #0x0
  43fdb8:	cset	w24, eq  // eq = none
  43fdbc:	add	x27, x19, #0x8
  43fdc0:	orr	w24, w24, w5
  43fdc4:	mov	x6, x27
  43fdc8:	mov	x3, x23
  43fdcc:	mov	x2, x22
  43fdd0:	mov	w5, w24
  43fdd4:	str	x0, [sp]
  43fdd8:	mov	x1, #0x0                   	// #0
  43fddc:	mov	x0, #0x0                   	// #0
  43fde0:	bl	43e9d8 <argp_parse@@Base+0xaaf0>
  43fde4:	add	x26, x0, #0x1
  43fde8:	mov	x25, x0
  43fdec:	mov	x0, x26
  43fdf0:	bl	440f48 <argp_parse@@Base+0xd060>
  43fdf4:	ldp	x7, x1, [x19, #40]
  43fdf8:	mov	w5, w24
  43fdfc:	ldr	w4, [x19]
  43fe00:	mov	x6, x27
  43fe04:	str	x1, [sp]
  43fe08:	mov	x3, x23
  43fe0c:	mov	x2, x22
  43fe10:	mov	x19, x0
  43fe14:	mov	x1, x26
  43fe18:	bl	43e9d8 <argp_parse@@Base+0xaaf0>
  43fe1c:	str	w28, [x21]
  43fe20:	cbz	x20, 43fe28 <argp_parse@@Base+0xbf40>
  43fe24:	str	x25, [x20]
  43fe28:	mov	x0, x19
  43fe2c:	ldp	x29, x30, [sp, #16]
  43fe30:	ldp	x19, x20, [sp, #32]
  43fe34:	ldp	x21, x22, [sp, #48]
  43fe38:	ldp	x23, x24, [sp, #64]
  43fe3c:	ldp	x25, x26, [sp, #80]
  43fe40:	ldp	x27, x28, [sp, #96]
  43fe44:	add	sp, sp, #0x70
  43fe48:	ret
  43fe4c:	nop
  43fe50:	mov	x3, x2
  43fe54:	mov	x2, #0x0                   	// #0
  43fe58:	b	43fd60 <argp_parse@@Base+0xbe78>
  43fe5c:	nop
  43fe60:	stp	x29, x30, [sp, #-64]!
  43fe64:	mov	x29, sp
  43fe68:	stp	x21, x22, [sp, #32]
  43fe6c:	str	x23, [sp, #48]
  43fe70:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43fe74:	add	x22, x23, #0x3d0
  43fe78:	stp	x19, x20, [sp, #16]
  43fe7c:	ldr	x21, [x23, #976]
  43fe80:	ldr	w20, [x22, #8]
  43fe84:	cmp	w20, #0x1
  43fe88:	b.le	43feb0 <argp_parse@@Base+0xbfc8>
  43fe8c:	sub	w0, w20, #0x2
  43fe90:	add	x20, x21, #0x28
  43fe94:	add	x19, x21, #0x18
  43fe98:	add	x20, x20, w0, uxtw #4
  43fe9c:	nop
  43fea0:	ldr	x0, [x19], #16
  43fea4:	bl	4047b0 <free@plt>
  43fea8:	cmp	x19, x20
  43feac:	b.ne	43fea0 <argp_parse@@Base+0xbfb8>  // b.any
  43feb0:	ldr	x0, [x21, #8]
  43feb4:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43feb8:	add	x19, x19, #0xda8
  43febc:	cmp	x0, x19
  43fec0:	b.eq	43fed0 <argp_parse@@Base+0xbfe8>  // b.none
  43fec4:	bl	4047b0 <free@plt>
  43fec8:	mov	x0, #0x100                 	// #256
  43fecc:	stp	x0, x19, [x22, #16]
  43fed0:	add	x19, x22, #0x10
  43fed4:	cmp	x21, x19
  43fed8:	b.eq	43fee8 <argp_parse@@Base+0xc000>  // b.none
  43fedc:	mov	x0, x21
  43fee0:	bl	4047b0 <free@plt>
  43fee4:	str	x19, [x23, #976]
  43fee8:	mov	w0, #0x1                   	// #1
  43feec:	str	w0, [x22, #8]
  43fef0:	ldp	x19, x20, [sp, #16]
  43fef4:	ldp	x21, x22, [sp, #32]
  43fef8:	ldr	x23, [sp, #48]
  43fefc:	ldp	x29, x30, [sp], #64
  43ff00:	ret
  43ff04:	nop
  43ff08:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43ff0c:	add	x3, x3, #0xda8
  43ff10:	add	x3, x3, #0x100
  43ff14:	mov	x2, #0xffffffffffffffff    	// #-1
  43ff18:	b	43f9f0 <argp_parse@@Base+0xbb08>
  43ff1c:	nop
  43ff20:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43ff24:	add	x3, x3, #0xda8
  43ff28:	add	x3, x3, #0x100
  43ff2c:	b	43f9f0 <argp_parse@@Base+0xbb08>
  43ff30:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43ff34:	add	x3, x3, #0xda8
  43ff38:	mov	x1, x0
  43ff3c:	add	x3, x3, #0x100
  43ff40:	mov	x2, #0xffffffffffffffff    	// #-1
  43ff44:	mov	w0, #0x0                   	// #0
  43ff48:	b	43f9f0 <argp_parse@@Base+0xbb08>
  43ff4c:	nop
  43ff50:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  43ff54:	add	x3, x3, #0xda8
  43ff58:	mov	x2, x1
  43ff5c:	add	x3, x3, #0x100
  43ff60:	mov	x1, x0
  43ff64:	mov	w0, #0x0                   	// #0
  43ff68:	b	43f9f0 <argp_parse@@Base+0xbb08>
  43ff6c:	nop
  43ff70:	stp	x29, x30, [sp, #-96]!
  43ff74:	add	x8, sp, #0x28
  43ff78:	mov	x29, sp
  43ff7c:	stp	x19, x20, [sp, #16]
  43ff80:	mov	x20, x2
  43ff84:	mov	w19, w0
  43ff88:	mov	w0, w1
  43ff8c:	bl	43e840 <argp_parse@@Base+0xa958>
  43ff90:	add	x3, sp, #0x28
  43ff94:	mov	x1, x20
  43ff98:	mov	w0, w19
  43ff9c:	mov	x2, #0xffffffffffffffff    	// #-1
  43ffa0:	bl	43f9f0 <argp_parse@@Base+0xbb08>
  43ffa4:	ldp	x19, x20, [sp, #16]
  43ffa8:	ldp	x29, x30, [sp], #96
  43ffac:	ret
  43ffb0:	stp	x29, x30, [sp, #-112]!
  43ffb4:	add	x8, sp, #0x38
  43ffb8:	mov	x29, sp
  43ffbc:	stp	x19, x20, [sp, #16]
  43ffc0:	mov	x20, x2
  43ffc4:	mov	w19, w0
  43ffc8:	mov	w0, w1
  43ffcc:	str	x21, [sp, #32]
  43ffd0:	mov	x21, x3
  43ffd4:	bl	43e840 <argp_parse@@Base+0xa958>
  43ffd8:	add	x3, sp, #0x38
  43ffdc:	mov	x2, x21
  43ffe0:	mov	x1, x20
  43ffe4:	mov	w0, w19
  43ffe8:	bl	43f9f0 <argp_parse@@Base+0xbb08>
  43ffec:	ldp	x19, x20, [sp, #16]
  43fff0:	ldr	x21, [sp, #32]
  43fff4:	ldp	x29, x30, [sp], #112
  43fff8:	ret
  43fffc:	nop
  440000:	mov	x2, x1
  440004:	mov	w1, w0
  440008:	mov	w0, #0x0                   	// #0
  44000c:	b	43ff70 <argp_parse@@Base+0xc088>
  440010:	mov	x4, x1
  440014:	mov	x3, x2
  440018:	mov	w1, w0
  44001c:	mov	x2, x4
  440020:	mov	w0, #0x0                   	// #0
  440024:	b	43ffb0 <argp_parse@@Base+0xc0c8>
  440028:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  44002c:	add	x3, x3, #0xda8
  440030:	stp	x29, x30, [sp, #-80]!
  440034:	add	x5, x3, #0x100
  440038:	ubfx	x7, x2, #5, #3
  44003c:	mov	x29, sp
  440040:	ldp	x8, x9, [x3, #256]
  440044:	stp	x8, x9, [sp, #24]
  440048:	add	x6, sp, #0x20
  44004c:	and	w8, w2, #0x1f
  440050:	add	x4, sp, #0x18
  440054:	ldp	x2, x3, [x3, #272]
  440058:	stp	x2, x3, [sp, #40]
  44005c:	ldp	x2, x3, [x5, #32]
  440060:	stp	x2, x3, [sp, #56]
  440064:	mov	x2, x1
  440068:	mov	x3, x4
  44006c:	ldr	x1, [x5, #48]
  440070:	str	x1, [sp, #72]
  440074:	mov	x1, x0
  440078:	mov	w0, #0x0                   	// #0
  44007c:	ldr	w5, [x6, x7, lsl #2]
  440080:	lsr	w4, w5, w8
  440084:	mvn	w4, w4
  440088:	and	w4, w4, #0x1
  44008c:	lsl	w4, w4, w8
  440090:	eor	w4, w4, w5
  440094:	str	w4, [x6, x7, lsl #2]
  440098:	bl	43f9f0 <argp_parse@@Base+0xbb08>
  44009c:	ldp	x29, x30, [sp], #80
  4400a0:	ret
  4400a4:	nop
  4400a8:	mov	w2, w1
  4400ac:	mov	x1, #0xffffffffffffffff    	// #-1
  4400b0:	b	440028 <argp_parse@@Base+0xc140>
  4400b4:	nop
  4400b8:	mov	w2, #0x3a                  	// #58
  4400bc:	mov	x1, #0xffffffffffffffff    	// #-1
  4400c0:	b	440028 <argp_parse@@Base+0xc140>
  4400c4:	nop
  4400c8:	mov	w2, #0x3a                  	// #58
  4400cc:	b	440028 <argp_parse@@Base+0xc140>
  4400d0:	stp	x29, x30, [sp, #-160]!
  4400d4:	mov	x29, sp
  4400d8:	add	x8, sp, #0x20
  4400dc:	stp	x19, x20, [sp, #16]
  4400e0:	mov	x20, x2
  4400e4:	mov	w19, w0
  4400e8:	mov	w0, w1
  4400ec:	bl	43e840 <argp_parse@@Base+0xa958>
  4400f0:	ldp	x0, x1, [sp, #32]
  4400f4:	stp	x0, x1, [sp, #104]
  4400f8:	add	x3, sp, #0x68
  4400fc:	ldr	w2, [sp, #116]
  440100:	mov	x1, x20
  440104:	ldp	x6, x7, [sp, #48]
  440108:	mvn	w4, w2
  44010c:	ldp	x8, x9, [sp, #64]
  440110:	and	w4, w4, #0x4000000
  440114:	ldr	x5, [sp, #80]
  440118:	eor	w4, w4, w2
  44011c:	mov	w0, w19
  440120:	mov	x2, #0xffffffffffffffff    	// #-1
  440124:	str	w4, [sp, #116]
  440128:	stp	x6, x7, [sp, #120]
  44012c:	stp	x8, x9, [sp, #136]
  440130:	str	x5, [sp, #152]
  440134:	bl	43f9f0 <argp_parse@@Base+0xbb08>
  440138:	ldp	x19, x20, [sp, #16]
  44013c:	ldp	x29, x30, [sp], #160
  440140:	ret
  440144:	nop
  440148:	adrp	x5, 482000 <_obstack_memory_used@@Base+0x3fe10>
  44014c:	add	x5, x5, #0xda8
  440150:	stp	x29, x30, [sp, #-80]!
  440154:	mov	x6, x1
  440158:	mov	w1, #0xa                   	// #10
  44015c:	mov	x29, sp
  440160:	ldp	x8, x9, [x5, #256]
  440164:	stp	x8, x9, [sp, #24]
  440168:	cmp	x6, #0x0
  44016c:	str	w1, [sp, #24]
  440170:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  440174:	ldp	x10, x11, [x5, #272]
  440178:	stp	x10, x11, [sp, #40]
  44017c:	ldp	x8, x9, [x5, #288]
  440180:	stp	x8, x9, [sp, #56]
  440184:	ldr	x1, [x5, #304]
  440188:	str	x1, [sp, #72]
  44018c:	b.eq	4401b0 <argp_parse@@Base+0xc2c8>  // b.none
  440190:	mov	x5, x2
  440194:	mov	x1, x3
  440198:	mov	x2, x4
  44019c:	add	x3, sp, #0x18
  4401a0:	stp	x6, x5, [sp, #64]
  4401a4:	bl	43f9f0 <argp_parse@@Base+0xbb08>
  4401a8:	ldp	x29, x30, [sp], #80
  4401ac:	ret
  4401b0:	bl	404650 <abort@plt>
  4401b4:	nop
  4401b8:	mov	x4, #0xffffffffffffffff    	// #-1
  4401bc:	b	440148 <argp_parse@@Base+0xc260>
  4401c0:	mov	x4, x1
  4401c4:	mov	x3, x2
  4401c8:	mov	x1, x0
  4401cc:	mov	x2, x4
  4401d0:	mov	w0, #0x0                   	// #0
  4401d4:	mov	x4, #0xffffffffffffffff    	// #-1
  4401d8:	b	440148 <argp_parse@@Base+0xc260>
  4401dc:	nop
  4401e0:	mov	x4, x1
  4401e4:	mov	x5, x2
  4401e8:	mov	x1, x0
  4401ec:	mov	x2, x4
  4401f0:	mov	w0, #0x0                   	// #0
  4401f4:	mov	x4, x3
  4401f8:	mov	x3, x5
  4401fc:	b	440148 <argp_parse@@Base+0xc260>
  440200:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  440204:	add	x3, x3, #0x3d0
  440208:	add	x3, x3, #0x20
  44020c:	b	43f9f0 <argp_parse@@Base+0xbb08>
  440210:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  440214:	add	x3, x3, #0x3d0
  440218:	mov	x2, x1
  44021c:	add	x3, x3, #0x20
  440220:	mov	x1, x0
  440224:	mov	w0, #0x0                   	// #0
  440228:	b	43f9f0 <argp_parse@@Base+0xbb08>
  44022c:	nop
  440230:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  440234:	add	x3, x3, #0x3d0
  440238:	add	x3, x3, #0x20
  44023c:	mov	x2, #0xffffffffffffffff    	// #-1
  440240:	b	43f9f0 <argp_parse@@Base+0xbb08>
  440244:	nop
  440248:	adrp	x3, 482000 <_obstack_memory_used@@Base+0x3fe10>
  44024c:	add	x3, x3, #0x3d0
  440250:	mov	x1, x0
  440254:	add	x3, x3, #0x20
  440258:	mov	x2, #0xffffffffffffffff    	// #-1
  44025c:	mov	w0, #0x0                   	// #0
  440260:	b	43f9f0 <argp_parse@@Base+0xbb08>
  440264:	nop
  440268:	stp	x29, x30, [sp, #-336]!
  44026c:	mov	x29, sp
  440270:	stp	x19, x20, [sp, #16]
  440274:	mov	x20, x3
  440278:	stp	x21, x22, [sp, #32]
  44027c:	mov	x21, x1
  440280:	stp	x23, x24, [sp, #48]
  440284:	mov	w24, w2
  440288:	stp	x25, x26, [sp, #64]
  44028c:	mov	w25, w0
  440290:	mov	w26, w4
  440294:	bl	4047d0 <renameat2@plt>
  440298:	mov	w19, w0
  44029c:	tbz	w0, #31, 4402dc <argp_parse@@Base+0xc3f4>
  4402a0:	bl	404ad0 <__errno_location@plt>
  4402a4:	mov	x22, x0
  4402a8:	ldr	w0, [x0]
  4402ac:	sub	w1, w0, #0x16
  4402b0:	tst	w1, #0xffffffef
  4402b4:	cset	w23, ne  // ne = any
  4402b8:	cmp	w0, #0x5f
  4402bc:	csel	w23, w23, wzr, ne  // ne = any
  4402c0:	cbnz	w23, 4402dc <argp_parse@@Base+0xc3f4>
  4402c4:	cbz	w26, 440330 <argp_parse@@Base+0xc448>
  4402c8:	tst	w26, #0xfffffffe
  4402cc:	b.eq	4402f8 <argp_parse@@Base+0xc410>  // b.none
  4402d0:	mov	w0, #0x5f                  	// #95
  4402d4:	mov	w19, #0xffffffff            	// #-1
  4402d8:	str	w0, [x22]
  4402dc:	mov	w0, w19
  4402e0:	ldp	x19, x20, [sp, #16]
  4402e4:	ldp	x21, x22, [sp, #32]
  4402e8:	ldp	x23, x24, [sp, #48]
  4402ec:	ldp	x25, x26, [sp, #64]
  4402f0:	ldp	x29, x30, [sp], #336
  4402f4:	ret
  4402f8:	add	x3, sp, #0xd0
  4402fc:	mov	x2, x20
  440300:	mov	w1, w24
  440304:	mov	w4, #0x100                 	// #256
  440308:	mov	w0, #0x0                   	// #0
  44030c:	bl	404c00 <__fxstatat@plt>
  440310:	cbz	w0, 440420 <argp_parse@@Base+0xc538>
  440314:	ldr	w0, [x22]
  440318:	cmp	w0, #0x4b
  44031c:	b.eq	440420 <argp_parse@@Base+0xc538>  // b.none
  440320:	cmp	w0, #0x2
  440324:	b.ne	440418 <argp_parse@@Base+0xc530>  // b.any
  440328:	mov	w23, #0x1                   	// #1
  44032c:	nop
  440330:	mov	x0, x21
  440334:	bl	403ff0 <strlen@plt>
  440338:	mov	x19, x0
  44033c:	mov	x0, x20
  440340:	bl	403ff0 <strlen@plt>
  440344:	cmp	x19, #0x0
  440348:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44034c:	b.eq	4403e4 <argp_parse@@Base+0xc4fc>  // b.none
  440350:	add	x19, x21, x19
  440354:	add	x0, x20, x0
  440358:	mov	w1, #0x2f                  	// #47
  44035c:	ldurb	w2, [x19, #-1]
  440360:	ldurb	w0, [x0, #-1]
  440364:	cmp	w2, w1
  440368:	ccmp	w0, w1, #0x4, ne  // ne = any
  44036c:	b.ne	4403e4 <argp_parse@@Base+0xc4fc>  // b.any
  440370:	add	x3, sp, #0x50
  440374:	mov	x2, x21
  440378:	mov	w1, w25
  44037c:	mov	w4, #0x100                 	// #256
  440380:	mov	w0, #0x0                   	// #0
  440384:	bl	404c00 <__fxstatat@plt>
  440388:	cbnz	w0, 440418 <argp_parse@@Base+0xc530>
  44038c:	cbz	w23, 4403b0 <argp_parse@@Base+0xc4c8>
  440390:	ldr	w0, [sp, #96]
  440394:	and	w0, w0, #0xf000
  440398:	cmp	w0, #0x4, lsl #12
  44039c:	b.eq	4403e4 <argp_parse@@Base+0xc4fc>  // b.none
  4403a0:	mov	w0, #0x2                   	// #2
  4403a4:	mov	w19, #0xffffffff            	// #-1
  4403a8:	str	w0, [x22]
  4403ac:	b	4402dc <argp_parse@@Base+0xc3f4>
  4403b0:	add	x3, sp, #0xd0
  4403b4:	mov	x2, x20
  4403b8:	mov	w1, w24
  4403bc:	mov	w4, #0x100                 	// #256
  4403c0:	bl	404c00 <__fxstatat@plt>
  4403c4:	cbz	w0, 440430 <argp_parse@@Base+0xc548>
  4403c8:	ldr	w0, [x22]
  4403cc:	cmp	w0, #0x2
  4403d0:	b.ne	440418 <argp_parse@@Base+0xc530>  // b.any
  4403d4:	ldr	w0, [sp, #96]
  4403d8:	and	w0, w0, #0xf000
  4403dc:	cmp	w0, #0x4, lsl #12
  4403e0:	b.ne	440418 <argp_parse@@Base+0xc530>  // b.any
  4403e4:	mov	x3, x20
  4403e8:	mov	w2, w24
  4403ec:	mov	x1, x21
  4403f0:	mov	w0, w25
  4403f4:	bl	404800 <renameat@plt>
  4403f8:	mov	w19, w0
  4403fc:	mov	w0, w19
  440400:	ldp	x19, x20, [sp, #16]
  440404:	ldp	x21, x22, [sp, #32]
  440408:	ldp	x23, x24, [sp, #48]
  44040c:	ldp	x25, x26, [sp, #64]
  440410:	ldp	x29, x30, [sp], #336
  440414:	ret
  440418:	mov	w19, #0xffffffff            	// #-1
  44041c:	b	4402dc <argp_parse@@Base+0xc3f4>
  440420:	mov	w0, #0x11                  	// #17
  440424:	mov	w19, #0xffffffff            	// #-1
  440428:	str	w0, [x22]
  44042c:	b	4402dc <argp_parse@@Base+0xc3f4>
  440430:	ldr	w0, [sp, #224]
  440434:	and	w0, w0, #0xf000
  440438:	cmp	w0, #0x4, lsl #12
  44043c:	b.eq	440450 <argp_parse@@Base+0xc568>  // b.none
  440440:	mov	w0, #0x14                  	// #20
  440444:	mov	w19, #0xffffffff            	// #-1
  440448:	str	w0, [x22]
  44044c:	b	4402dc <argp_parse@@Base+0xc3f4>
  440450:	ldr	w0, [sp, #96]
  440454:	and	w0, w0, #0xf000
  440458:	cmp	w0, #0x4, lsl #12
  44045c:	b.eq	4403e4 <argp_parse@@Base+0xc4fc>  // b.none
  440460:	mov	w0, #0x15                  	// #21
  440464:	mov	w19, #0xffffffff            	// #-1
  440468:	str	w0, [x22]
  44046c:	b	4402dc <argp_parse@@Base+0xc3f4>
  440470:	stp	x29, x30, [sp, #-64]!
  440474:	mov	x29, sp
  440478:	stp	x19, x20, [sp, #16]
  44047c:	mov	x20, x2
  440480:	stp	x21, x22, [sp, #32]
  440484:	mov	w22, w0
  440488:	mov	x21, x1
  44048c:	str	x23, [sp, #48]
  440490:	mov	x23, #0x7ff00000            	// #2146435072
  440494:	nop
  440498:	mov	x2, x20
  44049c:	mov	x1, x21
  4404a0:	mov	w0, w22
  4404a4:	bl	404950 <read@plt>
  4404a8:	mov	x19, x0
  4404ac:	tbz	x0, #63, 4404d0 <argp_parse@@Base+0xc5e8>
  4404b0:	bl	404ad0 <__errno_location@plt>
  4404b4:	ldr	w2, [x0]
  4404b8:	cmp	w2, #0x4
  4404bc:	b.eq	440498 <argp_parse@@Base+0xc5b0>  // b.none
  4404c0:	cmp	x20, x23
  4404c4:	mov	x20, #0x7ff00000            	// #2146435072
  4404c8:	ccmp	w2, #0x16, #0x0, hi  // hi = pmore
  4404cc:	b.eq	440498 <argp_parse@@Base+0xc5b0>  // b.none
  4404d0:	mov	x0, x19
  4404d4:	ldp	x19, x20, [sp, #16]
  4404d8:	ldp	x21, x22, [sp, #32]
  4404dc:	ldr	x23, [sp, #48]
  4404e0:	ldp	x29, x30, [sp], #64
  4404e4:	ret
  4404e8:	stp	x29, x30, [sp, #-64]!
  4404ec:	mov	x29, sp
  4404f0:	stp	x19, x20, [sp, #16]
  4404f4:	mov	x20, x2
  4404f8:	stp	x21, x22, [sp, #32]
  4404fc:	mov	w22, w0
  440500:	mov	x21, x1
  440504:	str	x23, [sp, #48]
  440508:	mov	x23, #0x7ff00000            	// #2146435072
  44050c:	nop
  440510:	mov	x2, x20
  440514:	mov	x1, x21
  440518:	mov	w0, w22
  44051c:	bl	404620 <write@plt>
  440520:	mov	x19, x0
  440524:	tbz	x0, #63, 440548 <argp_parse@@Base+0xc660>
  440528:	bl	404ad0 <__errno_location@plt>
  44052c:	ldr	w2, [x0]
  440530:	cmp	w2, #0x4
  440534:	b.eq	440510 <argp_parse@@Base+0xc628>  // b.none
  440538:	cmp	w2, #0x16
  44053c:	ccmp	x20, x23, #0x0, eq  // eq = none
  440540:	mov	x20, #0x7ff00000            	// #2146435072
  440544:	b.hi	440510 <argp_parse@@Base+0xc628>  // b.pmore
  440548:	mov	x0, x19
  44054c:	ldp	x19, x20, [sp, #16]
  440550:	ldp	x21, x22, [sp, #32]
  440554:	ldr	x23, [sp, #48]
  440558:	ldp	x29, x30, [sp], #64
  44055c:	ret
  440560:	stp	x29, x30, [sp, #-32]!
  440564:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x15e10>
  440568:	mov	x29, sp
  44056c:	str	x19, [sp, #16]
  440570:	mov	x19, x0
  440574:	add	x0, x1, #0x668
  440578:	mov	w1, #0x80000               	// #524288
  44057c:	str	xzr, [x19, #8]
  440580:	bl	44fda8 <_obstack_memory_used@@Base+0xdbb8>
  440584:	str	w0, [x19]
  440588:	tbnz	w0, #31, 44059c <argp_parse@@Base+0xc6b4>
  44058c:	mov	w0, #0x0                   	// #0
  440590:	ldr	x19, [sp, #16]
  440594:	ldp	x29, x30, [sp], #32
  440598:	ret
  44059c:	mov	x1, #0x0                   	// #0
  4405a0:	mov	x0, #0x0                   	// #0
  4405a4:	bl	403fa0 <getcwd@plt>
  4405a8:	str	x0, [x19, #8]
  4405ac:	cmp	x0, #0x0
  4405b0:	csetm	w0, eq  // eq = none
  4405b4:	ldr	x19, [sp, #16]
  4405b8:	ldp	x29, x30, [sp], #32
  4405bc:	ret
  4405c0:	mov	x1, x0
  4405c4:	ldr	w0, [x0]
  4405c8:	tbnz	w0, #31, 4405d0 <argp_parse@@Base+0xc6e8>
  4405cc:	b	404060 <fchdir@plt>
  4405d0:	ldr	x0, [x1, #8]
  4405d4:	b	4418b0 <argp_parse@@Base+0xd9c8>
  4405d8:	stp	x29, x30, [sp, #-32]!
  4405dc:	mov	x29, sp
  4405e0:	str	x19, [sp, #16]
  4405e4:	mov	x19, x0
  4405e8:	ldr	w0, [x0]
  4405ec:	tbnz	w0, #31, 4405f4 <argp_parse@@Base+0xc70c>
  4405f0:	bl	4045c0 <close@plt>
  4405f4:	ldr	x0, [x19, #8]
  4405f8:	ldr	x19, [sp, #16]
  4405fc:	ldp	x29, x30, [sp], #32
  440600:	b	4047b0 <free@plt>
  440604:	nop
  440608:	ldr	x2, [x0, #8]
  44060c:	mov	w3, #0xffffffff            	// #-1
  440610:	ldr	x1, [x1, #8]
  440614:	cmp	x2, x1
  440618:	cset	w0, hi  // hi = pmore
  44061c:	csel	w0, w0, w3, cs  // cs = hs, nlast
  440620:	ret
  440624:	nop
  440628:	ldr	x0, [x0]
  44062c:	ldr	x1, [x1]
  440630:	b	404710 <strcmp@plt>
  440634:	nop
  440638:	stp	x29, x30, [sp, #-128]!
  44063c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440640:	add	x2, x2, #0xdf8
  440644:	mov	x29, sp
  440648:	stp	x23, x24, [sp, #48]
  44064c:	stp	x25, x26, [sp, #64]
  440650:	ldr	x26, [x2, w1, uxtw #3]
  440654:	cbz	x0, 4408d4 <argp_parse@@Base+0xc9ec>
  440658:	stp	x19, x20, [sp, #16]
  44065c:	mov	x19, x0
  440660:	mov	x24, #0x0                   	// #0
  440664:	stp	x21, x22, [sp, #32]
  440668:	mov	x25, #0x0                   	// #0
  44066c:	mov	x22, #0x0                   	// #0
  440670:	stp	x27, x28, [sp, #80]
  440674:	bl	404ad0 <__errno_location@plt>
  440678:	mov	x20, x0
  44067c:	mov	x21, #0x0                   	// #0
  440680:	mov	x23, #0x0                   	// #0
  440684:	str	xzr, [sp, #96]
  440688:	str	wzr, [x20]
  44068c:	mov	x0, x19
  440690:	bl	404520 <readdir@plt>
  440694:	mov	x27, x0
  440698:	cbz	x0, 440718 <argp_parse@@Base+0xc830>
  44069c:	ldrb	w0, [x0, #19]
  4406a0:	add	x28, x27, #0x13
  4406a4:	cmp	w0, #0x2e
  4406a8:	b.eq	440740 <argp_parse@@Base+0xc858>  // b.none
  4406ac:	cbz	w0, 440688 <argp_parse@@Base+0xc7a0>
  4406b0:	mov	x0, x28
  4406b4:	bl	403ff0 <strlen@plt>
  4406b8:	add	x2, x0, #0x1
  4406bc:	cbz	x26, 4407e8 <argp_parse@@Base+0xc900>
  4406c0:	ldr	x0, [sp, #96]
  4406c4:	lsl	x5, x22, #4
  4406c8:	cmp	x22, x0
  4406cc:	add	x22, x22, #0x1
  4406d0:	b.eq	440858 <argp_parse@@Base+0xc970>  // b.none
  4406d4:	add	x1, x25, x5
  4406d8:	mov	x0, x28
  4406dc:	stp	x1, x5, [sp, #104]
  4406e0:	str	x2, [sp, #120]
  4406e4:	bl	441170 <argp_parse@@Base+0xd288>
  4406e8:	ldp	x1, x5, [sp, #104]
  4406ec:	ldr	x2, [sp, #120]
  4406f0:	add	x24, x24, x2
  4406f4:	str	x0, [x25, x5]
  4406f8:	ldr	x0, [x27]
  4406fc:	str	x0, [x1, #8]
  440700:	str	wzr, [x20]
  440704:	mov	x0, x19
  440708:	bl	404520 <readdir@plt>
  44070c:	mov	x27, x0
  440710:	cbnz	x0, 44069c <argp_parse@@Base+0xc7b4>
  440714:	nop
  440718:	ldr	w19, [x20]
  44071c:	cbnz	w19, 4408ac <argp_parse@@Base+0xc9c4>
  440720:	cbz	x26, 440848 <argp_parse@@Base+0xc960>
  440724:	add	x24, x24, #0x1
  440728:	cbnz	x22, 440758 <argp_parse@@Base+0xc870>
  44072c:	mov	x0, x24
  440730:	bl	440f48 <argp_parse@@Base+0xd060>
  440734:	mov	x23, x0
  440738:	mov	x20, x0
  44073c:	b	4407bc <argp_parse@@Base+0xc8d4>
  440740:	ldrb	w0, [x27, #20]
  440744:	cmp	w0, #0x2e
  440748:	b.ne	4406ac <argp_parse@@Base+0xc7c4>  // b.any
  44074c:	ldrb	w0, [x27, #21]
  440750:	cbz	w0, 440688 <argp_parse@@Base+0xc7a0>
  440754:	b	4406b0 <argp_parse@@Base+0xc7c8>
  440758:	mov	x1, x22
  44075c:	mov	x3, x26
  440760:	mov	x2, #0x10                  	// #16
  440764:	mov	x0, x25
  440768:	bl	4041a0 <qsort@plt>
  44076c:	add	x22, x25, x22, lsl #4
  440770:	mov	x0, x24
  440774:	mov	x19, x25
  440778:	bl	440f48 <argp_parse@@Base+0xd060>
  44077c:	mov	x23, x0
  440780:	mov	x20, #0x0                   	// #0
  440784:	nop
  440788:	ldr	x1, [x19]
  44078c:	add	x21, x23, x20
  440790:	mov	x0, x21
  440794:	bl	404220 <stpcpy@plt>
  440798:	mov	x1, x0
  44079c:	sub	x1, x1, x21
  4407a0:	ldr	x0, [x19], #16
  4407a4:	add	x1, x1, #0x1
  4407a8:	add	x20, x20, x1
  4407ac:	bl	4047b0 <free@plt>
  4407b0:	cmp	x19, x22
  4407b4:	b.ne	440788 <argp_parse@@Base+0xc8a0>  // b.any
  4407b8:	add	x20, x23, x20
  4407bc:	mov	x0, x25
  4407c0:	bl	4047b0 <free@plt>
  4407c4:	strb	wzr, [x20]
  4407c8:	ldp	x19, x20, [sp, #16]
  4407cc:	ldp	x21, x22, [sp, #32]
  4407d0:	ldp	x27, x28, [sp, #80]
  4407d4:	mov	x0, x23
  4407d8:	ldp	x23, x24, [sp, #48]
  4407dc:	ldp	x25, x26, [sp, #64]
  4407e0:	ldp	x29, x30, [sp], #128
  4407e4:	ret
  4407e8:	adds	x3, x24, x2
  4407ec:	sub	x0, x21, x24
  4407f0:	cset	x1, cs  // cs = hs, nlast
  4407f4:	cmp	x0, x2
  4407f8:	b.hi	440834 <argp_parse@@Base+0xc94c>  // b.pmore
  4407fc:	cbnz	x1, 44092c <argp_parse@@Base+0xca44>
  440800:	cbz	x23, 4408dc <argp_parse@@Base+0xc9f4>
  440804:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  440808:	movk	x0, #0x5553
  44080c:	cmp	x3, x0
  440810:	b.hi	44092c <argp_parse@@Base+0xca44>  // b.pmore
  440814:	add	x21, x3, #0x1
  440818:	add	x21, x21, x3, lsr #1
  44081c:	mov	x0, x23
  440820:	mov	x1, x21
  440824:	stp	x2, x3, [sp, #104]
  440828:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  44082c:	mov	x23, x0
  440830:	ldp	x2, x3, [sp, #104]
  440834:	add	x0, x23, x24
  440838:	mov	x1, x28
  44083c:	mov	x24, x3
  440840:	bl	403f70 <memcpy@plt>
  440844:	b	440688 <argp_parse@@Base+0xc7a0>
  440848:	cmp	x21, x24
  44084c:	b.eq	440894 <argp_parse@@Base+0xc9ac>  // b.none
  440850:	add	x20, x23, x24
  440854:	b	4407c4 <argp_parse@@Base+0xc8dc>
  440858:	cbz	x25, 4408f8 <argp_parse@@Base+0xca10>
  44085c:	ldr	x0, [sp, #96]
  440860:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  440864:	movk	x1, #0x555, lsl #48
  440868:	cmp	x0, x1
  44086c:	b.cs	44092c <argp_parse@@Base+0xca44>  // b.hs, b.nlast
  440870:	add	x0, x22, x0, lsr #1
  440874:	str	x0, [sp, #96]
  440878:	lsl	x1, x0, #4
  44087c:	mov	x0, x25
  440880:	stp	x2, x5, [sp, #104]
  440884:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  440888:	mov	x25, x0
  44088c:	ldp	x2, x5, [sp, #104]
  440890:	b	4406d4 <argp_parse@@Base+0xc7ec>
  440894:	mov	x0, x23
  440898:	add	x1, x21, #0x1
  44089c:	bl	440fa8 <argp_parse@@Base+0xd0c0>
  4408a0:	mov	x23, x0
  4408a4:	add	x20, x0, x21
  4408a8:	b	4407c4 <argp_parse@@Base+0xc8dc>
  4408ac:	mov	x0, x25
  4408b0:	bl	4047b0 <free@plt>
  4408b4:	mov	x0, x23
  4408b8:	mov	x23, #0x0                   	// #0
  4408bc:	bl	4047b0 <free@plt>
  4408c0:	ldp	x21, x22, [sp, #32]
  4408c4:	ldp	x27, x28, [sp, #80]
  4408c8:	str	w19, [x20]
  4408cc:	ldp	x19, x20, [sp, #16]
  4408d0:	b	4407d4 <argp_parse@@Base+0xc8ec>
  4408d4:	mov	x23, #0x0                   	// #0
  4408d8:	b	4407d4 <argp_parse@@Base+0xc8ec>
  4408dc:	cmp	x3, #0x0
  4408e0:	cbz	x3, 4408f0 <argp_parse@@Base+0xca08>
  4408e4:	b.lt	44092c <argp_parse@@Base+0xca44>  // b.tstop
  4408e8:	mov	x21, x3
  4408ec:	b	44081c <argp_parse@@Base+0xc934>
  4408f0:	mov	x21, #0x80                  	// #128
  4408f4:	b	44081c <argp_parse@@Base+0xc934>
  4408f8:	cbz	x0, 440914 <argp_parse@@Base+0xca2c>
  4408fc:	cmp	xzr, x0, lsr #60
  440900:	cset	x0, ne  // ne = any
  440904:	tbnz	x5, #63, 44092c <argp_parse@@Base+0xca44>
  440908:	cbnz	x0, 44092c <argp_parse@@Base+0xca44>
  44090c:	mov	x1, x5
  440910:	b	44087c <argp_parse@@Base+0xc994>
  440914:	mov	x0, #0x8                   	// #8
  440918:	mov	x1, #0x80                  	// #128
  44091c:	mov	x5, #0x0                   	// #0
  440920:	mov	x22, #0x1                   	// #1
  440924:	str	x0, [sp, #96]
  440928:	b	44087c <argp_parse@@Base+0xc994>
  44092c:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  440930:	stp	x29, x30, [sp, #-48]!
  440934:	mov	x29, sp
  440938:	stp	x19, x20, [sp, #16]
  44093c:	mov	w20, w1
  440940:	bl	44fd00 <_obstack_memory_used@@Base+0xdb10>
  440944:	cbz	x0, 440978 <argp_parse@@Base+0xca90>
  440948:	mov	w1, w20
  44094c:	mov	x19, x0
  440950:	bl	440638 <argp_parse@@Base+0xc750>
  440954:	mov	x1, x0
  440958:	mov	x0, x19
  44095c:	mov	x19, x1
  440960:	bl	404590 <closedir@plt>
  440964:	cbnz	w0, 44098c <argp_parse@@Base+0xcaa4>
  440968:	mov	x0, x19
  44096c:	ldp	x19, x20, [sp, #16]
  440970:	ldp	x29, x30, [sp], #48
  440974:	ret
  440978:	mov	x19, #0x0                   	// #0
  44097c:	mov	x0, x19
  440980:	ldp	x19, x20, [sp, #16]
  440984:	ldp	x29, x30, [sp], #48
  440988:	ret
  44098c:	str	x21, [sp, #32]
  440990:	bl	404ad0 <__errno_location@plt>
  440994:	mov	x20, x0
  440998:	mov	x0, x19
  44099c:	mov	x19, #0x0                   	// #0
  4409a0:	ldr	w21, [x20]
  4409a4:	bl	4047b0 <free@plt>
  4409a8:	str	w21, [x20]
  4409ac:	mov	x0, x19
  4409b0:	ldp	x19, x20, [sp, #16]
  4409b4:	ldr	x21, [sp, #32]
  4409b8:	ldp	x29, x30, [sp], #48
  4409bc:	ret
  4409c0:	stp	x29, x30, [sp, #-32]!
  4409c4:	mov	x2, x1
  4409c8:	mov	x29, sp
  4409cc:	stp	x19, x20, [sp, #16]
  4409d0:	mov	x19, x0
  4409d4:	mov	x20, x1
  4409d8:	mov	w1, #0x0                   	// #0
  4409dc:	bl	404960 <memchr@plt>
  4409e0:	sub	x19, x0, x19
  4409e4:	cmp	x0, #0x0
  4409e8:	csinc	x0, x20, x19, eq  // eq = none
  4409ec:	ldp	x19, x20, [sp, #16]
  4409f0:	ldp	x29, x30, [sp], #32
  4409f4:	ret
  4409f8:	sub	sp, sp, #0x50
  4409fc:	stp	x29, x30, [sp, #32]
  440a00:	add	x29, sp, #0x20
  440a04:	stp	x19, x20, [sp, #48]
  440a08:	mov	x19, x5
  440a0c:	mov	x20, x4
  440a10:	str	x21, [sp, #64]
  440a14:	mov	x5, x3
  440a18:	mov	x21, x0
  440a1c:	cbz	x1, 440bf8 <argp_parse@@Base+0xcd10>
  440a20:	mov	x4, x2
  440a24:	mov	x3, x1
  440a28:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440a2c:	mov	w1, #0x1                   	// #1
  440a30:	add	x2, x2, #0xe10
  440a34:	bl	404700 <__fprintf_chk@plt>
  440a38:	mov	w2, #0x5                   	// #5
  440a3c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440a40:	mov	x0, #0x0                   	// #0
  440a44:	add	x1, x1, #0xe28
  440a48:	bl	4049c0 <dcgettext@plt>
  440a4c:	mov	x3, x0
  440a50:	mov	w4, #0x7e3                 	// #2019
  440a54:	mov	w1, #0x1                   	// #1
  440a58:	mov	x0, x21
  440a5c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  440a60:	add	x2, x2, #0x140
  440a64:	bl	404700 <__fprintf_chk@plt>
  440a68:	mov	w2, #0x5                   	// #5
  440a6c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440a70:	mov	x0, #0x0                   	// #0
  440a74:	add	x1, x1, #0xe30
  440a78:	bl	4049c0 <dcgettext@plt>
  440a7c:	mov	x1, x21
  440a80:	bl	4049e0 <fputs_unlocked@plt>
  440a84:	cmp	x19, #0x5
  440a88:	b.eq	440c14 <argp_parse@@Base+0xcd2c>  // b.none
  440a8c:	b.hi	440ae0 <argp_parse@@Base+0xcbf8>  // b.pmore
  440a90:	cmp	x19, #0x2
  440a94:	b.eq	440c54 <argp_parse@@Base+0xcd6c>  // b.none
  440a98:	b.ls	440b54 <argp_parse@@Base+0xcc6c>  // b.plast
  440a9c:	cmp	x19, #0x3
  440aa0:	b.eq	440cd4 <argp_parse@@Base+0xcdec>  // b.none
  440aa4:	mov	w2, #0x5                   	// #5
  440aa8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440aac:	mov	x0, #0x0                   	// #0
  440ab0:	add	x1, x1, #0xf48
  440ab4:	bl	4049c0 <dcgettext@plt>
  440ab8:	mov	x2, x0
  440abc:	ldp	x3, x4, [x20]
  440ac0:	mov	x0, x21
  440ac4:	ldp	x5, x6, [x20, #16]
  440ac8:	mov	w1, #0x1                   	// #1
  440acc:	ldp	x29, x30, [sp, #32]
  440ad0:	ldp	x19, x20, [sp, #48]
  440ad4:	ldr	x21, [sp, #64]
  440ad8:	add	sp, sp, #0x50
  440adc:	b	404700 <__fprintf_chk@plt>
  440ae0:	cmp	x19, #0x8
  440ae4:	b.eq	440d10 <argp_parse@@Base+0xce28>  // b.none
  440ae8:	b.ls	440b98 <argp_parse@@Base+0xccb0>  // b.plast
  440aec:	cmp	x19, #0x9
  440af0:	b.ne	440cc4 <argp_parse@@Base+0xcddc>  // b.any
  440af4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  440af8:	add	x1, x1, #0x18
  440afc:	mov	w2, #0x5                   	// #5
  440b00:	mov	x0, #0x0                   	// #0
  440b04:	bl	4049c0 <dcgettext@plt>
  440b08:	ldp	x7, x8, [x20, #32]
  440b0c:	mov	x2, x0
  440b10:	ldp	x3, x4, [x20]
  440b14:	mov	x0, x21
  440b18:	ldp	x5, x6, [x20, #16]
  440b1c:	str	x8, [sp]
  440b20:	mov	w1, #0x1                   	// #1
  440b24:	ldr	x8, [x20, #48]
  440b28:	str	x8, [sp, #8]
  440b2c:	ldr	x8, [x20, #56]
  440b30:	str	x8, [sp, #16]
  440b34:	ldr	x8, [x20, #64]
  440b38:	str	x8, [sp, #24]
  440b3c:	bl	404700 <__fprintf_chk@plt>
  440b40:	ldp	x29, x30, [sp, #32]
  440b44:	ldp	x19, x20, [sp, #48]
  440b48:	ldr	x21, [sp, #64]
  440b4c:	add	sp, sp, #0x50
  440b50:	ret
  440b54:	cbz	x19, 440be4 <argp_parse@@Base+0xccfc>
  440b58:	cmp	x19, #0x1
  440b5c:	b.ne	440cc4 <argp_parse@@Base+0xcddc>  // b.any
  440b60:	mov	w2, #0x5                   	// #5
  440b64:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440b68:	mov	x0, #0x0                   	// #0
  440b6c:	add	x1, x1, #0xf00
  440b70:	bl	4049c0 <dcgettext@plt>
  440b74:	mov	x2, x0
  440b78:	mov	w1, w19
  440b7c:	mov	x0, x21
  440b80:	ldr	x3, [x20]
  440b84:	ldp	x29, x30, [sp, #32]
  440b88:	ldp	x19, x20, [sp, #48]
  440b8c:	ldr	x21, [sp, #64]
  440b90:	add	sp, sp, #0x50
  440b94:	b	404700 <__fprintf_chk@plt>
  440b98:	cmp	x19, #0x6
  440b9c:	b.eq	440c8c <argp_parse@@Base+0xcda4>  // b.none
  440ba0:	cmp	x19, #0x7
  440ba4:	b.ne	440cc4 <argp_parse@@Base+0xcddc>  // b.any
  440ba8:	mov	w2, #0x5                   	// #5
  440bac:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440bb0:	mov	x0, #0x0                   	// #0
  440bb4:	add	x1, x1, #0xfb8
  440bb8:	bl	4049c0 <dcgettext@plt>
  440bbc:	mov	x2, x0
  440bc0:	ldp	x7, x8, [x20, #32]
  440bc4:	mov	x0, x21
  440bc8:	ldp	x3, x4, [x20]
  440bcc:	mov	w1, #0x1                   	// #1
  440bd0:	ldp	x5, x6, [x20, #16]
  440bd4:	str	x8, [sp]
  440bd8:	ldr	x8, [x20, #48]
  440bdc:	str	x8, [sp, #8]
  440be0:	bl	404700 <__fprintf_chk@plt>
  440be4:	ldp	x29, x30, [sp, #32]
  440be8:	ldp	x19, x20, [sp, #48]
  440bec:	ldr	x21, [sp, #64]
  440bf0:	add	sp, sp, #0x50
  440bf4:	ret
  440bf8:	mov	x4, x3
  440bfc:	mov	w1, #0x1                   	// #1
  440c00:	mov	x3, x2
  440c04:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440c08:	add	x2, x2, #0xe20
  440c0c:	bl	404700 <__fprintf_chk@plt>
  440c10:	b	440a38 <argp_parse@@Base+0xcb50>
  440c14:	mov	w2, w19
  440c18:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440c1c:	mov	x0, #0x0                   	// #0
  440c20:	add	x1, x1, #0xf68
  440c24:	bl	4049c0 <dcgettext@plt>
  440c28:	mov	x2, x0
  440c2c:	ldp	x3, x4, [x20]
  440c30:	mov	x0, x21
  440c34:	ldp	x5, x6, [x20, #16]
  440c38:	mov	w1, #0x1                   	// #1
  440c3c:	ldp	x29, x30, [sp, #32]
  440c40:	ldr	x7, [x20, #32]
  440c44:	ldp	x19, x20, [sp, #48]
  440c48:	ldr	x21, [sp, #64]
  440c4c:	add	sp, sp, #0x50
  440c50:	b	404700 <__fprintf_chk@plt>
  440c54:	mov	w2, #0x5                   	// #5
  440c58:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440c5c:	mov	x0, #0x0                   	// #0
  440c60:	add	x1, x1, #0xf10
  440c64:	bl	4049c0 <dcgettext@plt>
  440c68:	mov	x2, x0
  440c6c:	ldp	x3, x4, [x20]
  440c70:	mov	x0, x21
  440c74:	ldp	x29, x30, [sp, #32]
  440c78:	mov	w1, #0x1                   	// #1
  440c7c:	ldp	x19, x20, [sp, #48]
  440c80:	ldr	x21, [sp, #64]
  440c84:	add	sp, sp, #0x50
  440c88:	b	404700 <__fprintf_chk@plt>
  440c8c:	mov	w2, #0x5                   	// #5
  440c90:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440c94:	mov	x0, #0x0                   	// #0
  440c98:	add	x1, x1, #0xf90
  440c9c:	bl	4049c0 <dcgettext@plt>
  440ca0:	mov	x2, x0
  440ca4:	ldp	x3, x4, [x20]
  440ca8:	mov	x0, x21
  440cac:	ldp	x5, x6, [x20, #16]
  440cb0:	mov	w1, #0x1                   	// #1
  440cb4:	ldp	x7, x8, [x20, #32]
  440cb8:	str	x8, [sp]
  440cbc:	bl	404700 <__fprintf_chk@plt>
  440cc0:	b	440be4 <argp_parse@@Base+0xccfc>
  440cc4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  440cc8:	mov	w2, #0x5                   	// #5
  440ccc:	add	x1, x1, #0x50
  440cd0:	b	440b00 <argp_parse@@Base+0xcc18>
  440cd4:	mov	w2, #0x5                   	// #5
  440cd8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440cdc:	mov	x0, #0x0                   	// #0
  440ce0:	add	x1, x1, #0xf28
  440ce4:	bl	4049c0 <dcgettext@plt>
  440ce8:	mov	x2, x0
  440cec:	ldp	x3, x4, [x20]
  440cf0:	mov	x0, x21
  440cf4:	ldr	x5, [x20, #16]
  440cf8:	mov	w1, #0x1                   	// #1
  440cfc:	ldp	x29, x30, [sp, #32]
  440d00:	ldp	x19, x20, [sp, #48]
  440d04:	ldr	x21, [sp, #64]
  440d08:	add	sp, sp, #0x50
  440d0c:	b	404700 <__fprintf_chk@plt>
  440d10:	mov	w2, #0x5                   	// #5
  440d14:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1be10>
  440d18:	mov	x0, #0x0                   	// #0
  440d1c:	add	x1, x1, #0xfe8
  440d20:	bl	4049c0 <dcgettext@plt>
  440d24:	mov	x2, x0
  440d28:	ldp	x7, x8, [x20, #32]
  440d2c:	mov	x0, x21
  440d30:	ldp	x3, x4, [x20]
  440d34:	mov	w1, #0x1                   	// #1
  440d38:	ldp	x5, x6, [x20, #16]
  440d3c:	str	x8, [sp]
  440d40:	ldr	x8, [x20, #48]
  440d44:	str	x8, [sp, #8]
  440d48:	ldr	x8, [x20, #56]
  440d4c:	str	x8, [sp, #16]
  440d50:	bl	404700 <__fprintf_chk@plt>
  440d54:	b	440be4 <argp_parse@@Base+0xccfc>
  440d58:	ldr	x5, [x4]
  440d5c:	cbz	x5, 440d78 <argp_parse@@Base+0xce90>
  440d60:	mov	x5, #0x0                   	// #0
  440d64:	nop
  440d68:	add	x5, x5, #0x1
  440d6c:	ldr	x6, [x4, x5, lsl #3]
  440d70:	cbnz	x6, 440d68 <argp_parse@@Base+0xce80>
  440d74:	b	4409f8 <argp_parse@@Base+0xcb10>
  440d78:	mov	x5, #0x0                   	// #0
  440d7c:	b	4409f8 <argp_parse@@Base+0xcb10>
  440d80:	stp	x29, x30, [sp, #-96]!
  440d84:	mov	x5, #0x0                   	// #0
  440d88:	mov	x29, sp
  440d8c:	add	x8, sp, #0x10
  440d90:	ldr	w7, [x4, #24]
  440d94:	ldp	x6, x11, [x4]
  440d98:	b	440dc0 <argp_parse@@Base+0xced8>
  440d9c:	mov	x4, x6
  440da0:	add	x8, x8, #0x8
  440da4:	and	x6, x10, #0xfffffffffffffff8
  440da8:	ldr	x4, [x4]
  440dac:	stur	x4, [x8, #-8]
  440db0:	cbz	x4, 440df0 <argp_parse@@Base+0xcf08>
  440db4:	add	x5, x5, #0x1
  440db8:	cmp	x5, #0xa
  440dbc:	b.eq	440df0 <argp_parse@@Base+0xcf08>  // b.none
  440dc0:	add	x10, x6, #0xf
  440dc4:	add	w9, w7, #0x8
  440dc8:	tbz	w7, #31, 440d9c <argp_parse@@Base+0xceb4>
  440dcc:	add	x4, x11, w7, sxtw
  440dd0:	add	x10, x6, #0xf
  440dd4:	mov	w7, w9
  440dd8:	cmp	w9, #0x0
  440ddc:	b.gt	440d9c <argp_parse@@Base+0xceb4>
  440de0:	ldr	x4, [x4]
  440de4:	str	x4, [x8]
  440de8:	add	x8, x8, #0x8
  440dec:	cbnz	x4, 440db4 <argp_parse@@Base+0xcecc>
  440df0:	add	x4, sp, #0x10
  440df4:	bl	4409f8 <argp_parse@@Base+0xcb10>
  440df8:	ldp	x29, x30, [sp], #96
  440dfc:	ret
  440e00:	stp	x29, x30, [sp, #-288]!
  440e04:	mov	w12, #0xffffffe0            	// #-32
  440e08:	mov	w13, #0xffffff80            	// #-128
  440e0c:	mov	x29, sp
  440e10:	add	x14, sp, #0x100
  440e14:	add	x11, sp, #0x120
  440e18:	add	x9, sp, #0x30
  440e1c:	mov	w8, w12
  440e20:	mov	x10, #0x0                   	// #0
  440e24:	stp	x11, x11, [sp, #16]
  440e28:	str	x14, [sp, #32]
  440e2c:	stp	w12, w13, [sp, #40]
  440e30:	str	q0, [sp, #128]
  440e34:	str	q1, [sp, #144]
  440e38:	str	q2, [sp, #160]
  440e3c:	str	q3, [sp, #176]
  440e40:	str	q4, [sp, #192]
  440e44:	str	q5, [sp, #208]
  440e48:	str	q6, [sp, #224]
  440e4c:	str	q7, [sp, #240]
  440e50:	stp	x4, x5, [sp, #256]
  440e54:	stp	x6, x7, [sp, #272]
  440e58:	b	440e80 <argp_parse@@Base+0xcf98>
  440e5c:	mov	x4, x11
  440e60:	add	x9, x9, #0x8
  440e64:	add	x11, x11, #0x8
  440e68:	ldr	x4, [x4]
  440e6c:	stur	x4, [x9, #-8]
  440e70:	cbz	x4, 440eac <argp_parse@@Base+0xcfc4>
  440e74:	add	x10, x10, #0x1
  440e78:	cmp	x10, #0xa
  440e7c:	b.eq	440eac <argp_parse@@Base+0xcfc4>  // b.none
  440e80:	add	w5, w8, #0x8
  440e84:	tbz	w8, #31, 440e5c <argp_parse@@Base+0xcf74>
  440e88:	add	x4, sp, #0x120
  440e8c:	cmp	w5, #0x0
  440e90:	add	x4, x4, w8, sxtw
  440e94:	mov	w8, w5
  440e98:	b.gt	440e5c <argp_parse@@Base+0xcf74>
  440e9c:	ldr	x4, [x4]
  440ea0:	str	x4, [x9]
  440ea4:	add	x9, x9, #0x8
  440ea8:	cbnz	x4, 440e74 <argp_parse@@Base+0xcf8c>
  440eac:	add	x4, sp, #0x30
  440eb0:	mov	x5, x10
  440eb4:	bl	4409f8 <argp_parse@@Base+0xcb10>
  440eb8:	ldp	x29, x30, [sp], #288
  440ebc:	ret
  440ec0:	stp	x29, x30, [sp, #-16]!
  440ec4:	mov	w2, #0x5                   	// #5
  440ec8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  440ecc:	mov	x29, sp
  440ed0:	add	x1, x1, #0x90
  440ed4:	mov	x0, #0x0                   	// #0
  440ed8:	bl	4049c0 <dcgettext@plt>
  440edc:	mov	x1, x0
  440ee0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  440ee4:	mov	w0, #0x1                   	// #1
  440ee8:	add	x2, x2, #0xa8
  440eec:	bl	404400 <__printf_chk@plt>
  440ef0:	mov	w2, #0x5                   	// #5
  440ef4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  440ef8:	mov	x0, #0x0                   	// #0
  440efc:	add	x1, x1, #0xb8
  440f00:	bl	4049c0 <dcgettext@plt>
  440f04:	mov	x1, x0
  440f08:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  440f0c:	add	x3, x3, #0xd0
  440f10:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x12e10>
  440f14:	mov	w0, #0x1                   	// #1
  440f18:	add	x2, x2, #0xb20
  440f1c:	bl	404400 <__printf_chk@plt>
  440f20:	mov	w2, #0x5                   	// #5
  440f24:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  440f28:	mov	x0, #0x0                   	// #0
  440f2c:	add	x1, x1, #0xf8
  440f30:	bl	4049c0 <dcgettext@plt>
  440f34:	ldp	x29, x30, [sp], #16
  440f38:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x3fe10>
  440f3c:	ldr	x1, [x1, #1104]
  440f40:	b	4049e0 <fputs_unlocked@plt>
  440f44:	nop
  440f48:	stp	x29, x30, [sp, #-32]!
  440f4c:	mov	x29, sp
  440f50:	str	x19, [sp, #16]
  440f54:	mov	x19, x0
  440f58:	bl	404310 <malloc@plt>
  440f5c:	cmp	x0, #0x0
  440f60:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  440f64:	b.ne	440f74 <argp_parse@@Base+0xd08c>  // b.any
  440f68:	ldr	x19, [sp, #16]
  440f6c:	ldp	x29, x30, [sp], #32
  440f70:	ret
  440f74:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  440f78:	umulh	x2, x0, x1
  440f7c:	mul	x0, x0, x1
  440f80:	cmp	x2, #0x0
  440f84:	cset	x1, ne  // ne = any
  440f88:	tbnz	x0, #63, 440f94 <argp_parse@@Base+0xd0ac>
  440f8c:	cbnz	x1, 440f94 <argp_parse@@Base+0xd0ac>
  440f90:	b	440f48 <argp_parse@@Base+0xd060>
  440f94:	stp	x29, x30, [sp, #-16]!
  440f98:	mov	x29, sp
  440f9c:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  440fa0:	b	440f48 <argp_parse@@Base+0xd060>
  440fa4:	nop
  440fa8:	stp	x29, x30, [sp, #-32]!
  440fac:	cmp	x1, #0x0
  440fb0:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  440fb4:	mov	x29, sp
  440fb8:	b.ne	440fe0 <argp_parse@@Base+0xd0f8>  // b.any
  440fbc:	str	x19, [sp, #16]
  440fc0:	mov	x19, x1
  440fc4:	bl	404530 <realloc@plt>
  440fc8:	cmp	x0, #0x0
  440fcc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  440fd0:	b.ne	440ff0 <argp_parse@@Base+0xd108>  // b.any
  440fd4:	ldr	x19, [sp, #16]
  440fd8:	ldp	x29, x30, [sp], #32
  440fdc:	ret
  440fe0:	bl	4047b0 <free@plt>
  440fe4:	mov	x0, #0x0                   	// #0
  440fe8:	ldp	x29, x30, [sp], #32
  440fec:	ret
  440ff0:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  440ff4:	nop
  440ff8:	umulh	x3, x1, x2
  440ffc:	mul	x1, x1, x2
  441000:	cmp	x3, #0x0
  441004:	cset	x2, ne  // ne = any
  441008:	tbnz	x1, #63, 441014 <argp_parse@@Base+0xd12c>
  44100c:	cbnz	x2, 441014 <argp_parse@@Base+0xd12c>
  441010:	b	440fa8 <argp_parse@@Base+0xd0c0>
  441014:	stp	x29, x30, [sp, #-16]!
  441018:	mov	x29, sp
  44101c:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  441020:	mov	x4, x1
  441024:	ldr	x3, [x1]
  441028:	cbz	x0, 441054 <argp_parse@@Base+0xd16c>
  44102c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  441030:	movk	x1, #0x5554
  441034:	udiv	x1, x1, x2
  441038:	cmp	x1, x3
  44103c:	b.ls	441070 <argp_parse@@Base+0xd188>  // b.plast
  441040:	add	x1, x3, #0x1
  441044:	add	x3, x1, x3, lsr #1
  441048:	mul	x1, x3, x2
  44104c:	str	x3, [x4]
  441050:	b	440fa8 <argp_parse@@Base+0xd0c0>
  441054:	cbz	x3, 44107c <argp_parse@@Base+0xd194>
  441058:	umulh	x5, x3, x2
  44105c:	mul	x1, x3, x2
  441060:	cmp	x5, #0x0
  441064:	cset	x2, ne  // ne = any
  441068:	tbnz	x1, #63, 441070 <argp_parse@@Base+0xd188>
  44106c:	cbz	x2, 44104c <argp_parse@@Base+0xd164>
  441070:	stp	x29, x30, [sp, #-16]!
  441074:	mov	x29, sp
  441078:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  44107c:	mov	x3, #0x80                  	// #128
  441080:	cmp	x2, x3
  441084:	udiv	x3, x3, x2
  441088:	cinc	x3, x3, hi  // hi = pmore
  44108c:	b	441058 <argp_parse@@Base+0xd170>
  441090:	mov	x2, x1
  441094:	ldr	x1, [x1]
  441098:	cbz	x0, 4410bc <argp_parse@@Base+0xd1d4>
  44109c:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  4410a0:	movk	x3, #0x5553
  4410a4:	cmp	x1, x3
  4410a8:	b.hi	4410d4 <argp_parse@@Base+0xd1ec>  // b.pmore
  4410ac:	add	x3, x1, #0x1
  4410b0:	add	x1, x3, x1, lsr #1
  4410b4:	str	x1, [x2]
  4410b8:	b	440fa8 <argp_parse@@Base+0xd0c0>
  4410bc:	cmp	x1, #0x0
  4410c0:	cbnz	x1, 4410d0 <argp_parse@@Base+0xd1e8>
  4410c4:	mov	x1, #0x80                  	// #128
  4410c8:	str	x1, [x2]
  4410cc:	b	440fa8 <argp_parse@@Base+0xd0c0>
  4410d0:	b.ge	4410b4 <argp_parse@@Base+0xd1cc>  // b.tcont
  4410d4:	stp	x29, x30, [sp, #-16]!
  4410d8:	mov	x29, sp
  4410dc:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  4410e0:	stp	x29, x30, [sp, #-32]!
  4410e4:	mov	x29, sp
  4410e8:	str	x19, [sp, #16]
  4410ec:	mov	x19, x0
  4410f0:	bl	440f48 <argp_parse@@Base+0xd060>
  4410f4:	mov	x2, x19
  4410f8:	mov	w1, #0x0                   	// #0
  4410fc:	ldr	x19, [sp, #16]
  441100:	ldp	x29, x30, [sp], #32
  441104:	b	404410 <memset@plt>
  441108:	umulh	x4, x0, x1
  44110c:	stp	x29, x30, [sp, #-16]!
  441110:	mul	x2, x0, x1
  441114:	cmp	x4, #0x0
  441118:	mov	x29, sp
  44111c:	cset	x3, ne  // ne = any
  441120:	tbnz	x2, #63, 441138 <argp_parse@@Base+0xd250>
  441124:	cbnz	x3, 441138 <argp_parse@@Base+0xd250>
  441128:	bl	4044c0 <calloc@plt>
  44112c:	cbz	x0, 441138 <argp_parse@@Base+0xd250>
  441130:	ldp	x29, x30, [sp], #16
  441134:	ret
  441138:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  44113c:	nop
  441140:	stp	x29, x30, [sp, #-32]!
  441144:	mov	x29, sp
  441148:	stp	x19, x20, [sp, #16]
  44114c:	mov	x19, x1
  441150:	mov	x20, x0
  441154:	mov	x0, x1
  441158:	bl	440f48 <argp_parse@@Base+0xd060>
  44115c:	mov	x2, x19
  441160:	mov	x1, x20
  441164:	ldp	x19, x20, [sp, #16]
  441168:	ldp	x29, x30, [sp], #32
  44116c:	b	403f70 <memcpy@plt>
  441170:	stp	x29, x30, [sp, #-32]!
  441174:	mov	x29, sp
  441178:	str	x19, [sp, #16]
  44117c:	mov	x19, x0
  441180:	bl	403ff0 <strlen@plt>
  441184:	mov	x1, x0
  441188:	mov	x0, x19
  44118c:	add	x1, x1, #0x1
  441190:	ldr	x19, [sp, #16]
  441194:	ldp	x29, x30, [sp], #32
  441198:	b	441140 <argp_parse@@Base+0xd258>
  44119c:	nop
  4411a0:	stp	x29, x30, [sp, #-32]!
  4411a4:	mov	x1, #0x0                   	// #0
  4411a8:	mov	x0, #0x0                   	// #0
  4411ac:	mov	x29, sp
  4411b0:	str	x19, [sp, #16]
  4411b4:	bl	403fa0 <getcwd@plt>
  4411b8:	mov	x19, x0
  4411bc:	cbz	x0, 4411d0 <argp_parse@@Base+0xd2e8>
  4411c0:	mov	x0, x19
  4411c4:	ldr	x19, [sp, #16]
  4411c8:	ldp	x29, x30, [sp], #32
  4411cc:	ret
  4411d0:	bl	404ad0 <__errno_location@plt>
  4411d4:	ldr	w0, [x0]
  4411d8:	cmp	w0, #0xc
  4411dc:	b.ne	4411c0 <argp_parse@@Base+0xd2d8>  // b.any
  4411e0:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  4411e4:	nop
  4411e8:	stp	x29, x30, [sp, #-16]!
  4411ec:	mov	x29, sp
  4411f0:	bl	404850 <strndup@plt>
  4411f4:	cbz	x0, 441200 <argp_parse@@Base+0xd318>
  4411f8:	ldp	x29, x30, [sp], #16
  4411fc:	ret
  441200:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  441204:	nop
  441208:	stp	x29, x30, [sp, #-112]!
  44120c:	cmp	w2, #0x24
  441210:	mov	x29, sp
  441214:	stp	x19, x20, [sp, #16]
  441218:	stp	x21, x22, [sp, #32]
  44121c:	stp	x23, x24, [sp, #48]
  441220:	b.hi	441738 <argp_parse@@Base+0xd850>  // b.pmore
  441224:	cmp	x1, #0x0
  441228:	mov	x19, x0
  44122c:	add	x0, sp, #0x68
  441230:	mov	x21, x3
  441234:	csel	x24, x0, x1, eq  // eq = none
  441238:	mov	w22, w2
  44123c:	mov	x23, x4
  441240:	stp	x27, x28, [sp, #80]
  441244:	bl	404ad0 <__errno_location@plt>
  441248:	str	wzr, [x0]
  44124c:	mov	x20, x0
  441250:	bl	404740 <__ctype_b_loc@plt>
  441254:	ldrb	w3, [x19]
  441258:	mov	x5, x19
  44125c:	ldr	x1, [x0]
  441260:	b	441268 <argp_parse@@Base+0xd380>
  441264:	ldrb	w3, [x5, #1]!
  441268:	ubfiz	x4, x3, #1, #8
  44126c:	ldrh	w4, [x1, x4]
  441270:	tbnz	w4, #13, 441264 <argp_parse@@Base+0xd37c>
  441274:	cmp	w3, #0x2d
  441278:	b.eq	441300 <argp_parse@@Base+0xd418>  // b.none
  44127c:	mov	w2, w22
  441280:	mov	x1, x24
  441284:	mov	x0, x19
  441288:	mov	w3, #0x0                   	// #0
  44128c:	stp	x25, x26, [sp, #64]
  441290:	bl	4044b0 <__strtoul_internal@plt>
  441294:	mov	x26, x0
  441298:	ldr	x28, [x24]
  44129c:	cmp	x28, x19
  4412a0:	b.eq	4412f0 <argp_parse@@Base+0xd408>  // b.none
  4412a4:	ldr	w0, [x20]
  4412a8:	cbz	w0, 4412e8 <argp_parse@@Base+0xd400>
  4412ac:	cmp	w0, #0x22
  4412b0:	mov	w27, #0x1                   	// #1
  4412b4:	b.ne	4412fc <argp_parse@@Base+0xd414>  // b.any
  4412b8:	cbz	x23, 4412c4 <argp_parse@@Base+0xd3dc>
  4412bc:	ldrb	w25, [x28]
  4412c0:	cbnz	w25, 44159c <argp_parse@@Base+0xd6b4>
  4412c4:	str	x26, [x21]
  4412c8:	mov	w0, w27
  4412cc:	ldp	x19, x20, [sp, #16]
  4412d0:	ldp	x21, x22, [sp, #32]
  4412d4:	ldp	x23, x24, [sp, #48]
  4412d8:	ldp	x25, x26, [sp, #64]
  4412dc:	ldp	x27, x28, [sp, #80]
  4412e0:	ldp	x29, x30, [sp], #112
  4412e4:	ret
  4412e8:	mov	w27, #0x0                   	// #0
  4412ec:	b	4412b8 <argp_parse@@Base+0xd3d0>
  4412f0:	cbz	x23, 4412fc <argp_parse@@Base+0xd414>
  4412f4:	ldrb	w25, [x19]
  4412f8:	cbnz	w25, 441320 <argp_parse@@Base+0xd438>
  4412fc:	ldp	x25, x26, [sp, #64]
  441300:	mov	w27, #0x4                   	// #4
  441304:	mov	w0, w27
  441308:	ldp	x19, x20, [sp, #16]
  44130c:	ldp	x21, x22, [sp, #32]
  441310:	ldp	x23, x24, [sp, #48]
  441314:	ldp	x27, x28, [sp, #80]
  441318:	ldp	x29, x30, [sp], #112
  44131c:	ret
  441320:	mov	w1, w25
  441324:	mov	x0, x23
  441328:	mov	w27, #0x0                   	// #0
  44132c:	mov	x26, #0x1                   	// #1
  441330:	bl	404870 <strchr@plt>
  441334:	cbz	x0, 4412fc <argp_parse@@Base+0xd414>
  441338:	sub	w2, w25, #0x45
  44133c:	and	w2, w2, #0xff
  441340:	cmp	w2, #0x2f
  441344:	b.hi	4413cc <argp_parse@@Base+0xd4e4>  // b.pmore
  441348:	mov	x3, #0x8945                	// #35141
  44134c:	mov	x19, #0x1                   	// #1
  441350:	movk	x3, #0x30, lsl #16
  441354:	lsl	x2, x19, x2
  441358:	movk	x3, #0x8144, lsl #32
  44135c:	mov	w22, w19
  441360:	tst	x2, x3
  441364:	mov	x20, #0x400                 	// #1024
  441368:	b.ne	441530 <argp_parse@@Base+0xd648>  // b.any
  44136c:	cmp	w25, #0x5a
  441370:	b.eq	4416fc <argp_parse@@Base+0xd814>  // b.none
  441374:	b.hi	441464 <argp_parse@@Base+0xd57c>  // b.pmore
  441378:	cmp	w25, #0x4d
  44137c:	b.eq	44150c <argp_parse@@Base+0xd624>  // b.none
  441380:	b.hi	4413fc <argp_parse@@Base+0xd514>  // b.pmore
  441384:	cmp	w25, #0x45
  441388:	b.eq	4416ac <argp_parse@@Base+0xd7c4>  // b.none
  44138c:	b.ls	4413d8 <argp_parse@@Base+0xd4f0>  // b.plast
  441390:	cmp	w25, #0x47
  441394:	b.eq	441480 <argp_parse@@Base+0xd598>  // b.none
  441398:	cmp	w25, #0x4b
  44139c:	b.ne	4415ac <argp_parse@@Base+0xd6c4>  // b.any
  4413a0:	sxtw	x19, w22
  4413a4:	umulh	x0, x26, x20
  4413a8:	cbnz	x0, 441524 <argp_parse@@Base+0xd63c>
  4413ac:	mul	x26, x26, x20
  4413b0:	add	x0, x28, x19
  4413b4:	str	x0, [x24]
  4413b8:	orr	w0, w27, #0x2
  4413bc:	ldrb	w1, [x28, x19]
  4413c0:	cmp	w1, #0x0
  4413c4:	csel	w27, w0, w27, ne  // ne = any
  4413c8:	b	4412c4 <argp_parse@@Base+0xd3dc>
  4413cc:	mov	w22, #0x1                   	// #1
  4413d0:	mov	x20, #0x400                 	// #1024
  4413d4:	b	44136c <argp_parse@@Base+0xd484>
  4413d8:	sxtw	x19, w22
  4413dc:	cmp	w25, #0x42
  4413e0:	b.ne	4415ac <argp_parse@@Base+0xd6c4>  // b.any
  4413e4:	lsr	x0, x26, #54
  4413e8:	lsl	x26, x26, #10
  4413ec:	cmp	x0, #0x0
  4413f0:	csinc	w27, w27, wzr, eq  // eq = none
  4413f4:	csinv	x26, x26, xzr, eq  // eq = none
  4413f8:	b	4413b0 <argp_parse@@Base+0xd4c8>
  4413fc:	cmp	w25, #0x54
  441400:	b.eq	4416d4 <argp_parse@@Base+0xd7ec>  // b.none
  441404:	sxtw	x19, w22
  441408:	cmp	w25, #0x59
  44140c:	b.ne	441434 <argp_parse@@Base+0xd54c>  // b.any
  441410:	mov	w0, #0x8                   	// #8
  441414:	mov	w2, #0x0                   	// #0
  441418:	umulh	x1, x26, x20
  44141c:	cbnz	x1, 44177c <argp_parse@@Base+0xd894>
  441420:	mul	x26, x26, x20
  441424:	subs	w0, w0, #0x1
  441428:	b.ne	441418 <argp_parse@@Base+0xd530>  // b.any
  44142c:	orr	w27, w27, w2
  441430:	b	4413b0 <argp_parse@@Base+0xd4c8>
  441434:	sxtw	x19, w22
  441438:	cmp	w25, #0x50
  44143c:	b.ne	4415ac <argp_parse@@Base+0xd6c4>  // b.any
  441440:	mov	w0, #0x5                   	// #5
  441444:	mov	w2, #0x0                   	// #0
  441448:	umulh	x1, x26, x20
  44144c:	cbnz	x1, 441770 <argp_parse@@Base+0xd888>
  441450:	mul	x26, x26, x20
  441454:	subs	w0, w0, #0x1
  441458:	b.ne	441448 <argp_parse@@Base+0xd560>  // b.any
  44145c:	orr	w27, w27, w2
  441460:	b	4413b0 <argp_parse@@Base+0xd4c8>
  441464:	cmp	w25, #0x6b
  441468:	b.eq	4413a0 <argp_parse@@Base+0xd4b8>  // b.none
  44146c:	b.hi	4414d8 <argp_parse@@Base+0xd5f0>  // b.pmore
  441470:	cmp	w25, #0x63
  441474:	b.eq	4416a4 <argp_parse@@Base+0xd7bc>  // b.none
  441478:	cmp	w25, #0x67
  44147c:	b.ne	4414b4 <argp_parse@@Base+0xd5cc>  // b.any
  441480:	sxtw	x19, w22
  441484:	umulh	x0, x26, x20
  441488:	cbnz	x0, 441760 <argp_parse@@Base+0xd878>
  44148c:	mul	x26, x26, x20
  441490:	umulh	x0, x26, x20
  441494:	cbnz	x0, 441760 <argp_parse@@Base+0xd878>
  441498:	mul	x26, x26, x20
  44149c:	umulh	x0, x26, x20
  4414a0:	cbnz	x0, 441760 <argp_parse@@Base+0xd878>
  4414a4:	mov	w0, #0x0                   	// #0
  4414a8:	mul	x26, x26, x20
  4414ac:	orr	w27, w27, w0
  4414b0:	b	4413b0 <argp_parse@@Base+0xd4c8>
  4414b4:	sxtw	x19, w22
  4414b8:	cmp	w25, #0x62
  4414bc:	b.ne	4415ac <argp_parse@@Base+0xd6c4>  // b.any
  4414c0:	lsr	x0, x26, #55
  4414c4:	lsl	x26, x26, #9
  4414c8:	cmp	x0, #0x0
  4414cc:	csinc	w27, w27, wzr, eq  // eq = none
  4414d0:	csinv	x26, x26, xzr, eq  // eq = none
  4414d4:	b	4413b0 <argp_parse@@Base+0xd4c8>
  4414d8:	cmp	w25, #0x74
  4414dc:	b.eq	4416d4 <argp_parse@@Base+0xd7ec>  // b.none
  4414e0:	cmp	w25, #0x77
  4414e4:	sxtw	x19, w22
  4414e8:	b.ne	441504 <argp_parse@@Base+0xd61c>  // b.any
  4414ec:	lsr	x0, x26, #63
  4414f0:	lsl	x26, x26, #1
  4414f4:	cmp	x0, #0x0
  4414f8:	csinc	w27, w27, wzr, eq  // eq = none
  4414fc:	csinv	x26, x26, xzr, eq  // eq = none
  441500:	b	4413b0 <argp_parse@@Base+0xd4c8>
  441504:	cmp	w25, #0x6d
  441508:	b.ne	4415ac <argp_parse@@Base+0xd6c4>  // b.any
  44150c:	sxtw	x19, w22
  441510:	umulh	x0, x26, x20
  441514:	cbnz	x0, 441524 <argp_parse@@Base+0xd63c>
  441518:	mul	x26, x26, x20
  44151c:	umulh	x0, x26, x20
  441520:	cbz	x0, 4413ac <argp_parse@@Base+0xd4c4>
  441524:	mov	w27, #0x1                   	// #1
  441528:	mov	x26, #0xffffffffffffffff    	// #-1
  44152c:	b	4413b0 <argp_parse@@Base+0xd4c8>
  441530:	mov	x0, x23
  441534:	mov	w1, #0x30                  	// #48
  441538:	bl	404870 <strchr@plt>
  44153c:	cbz	x0, 44136c <argp_parse@@Base+0xd484>
  441540:	ldrb	w0, [x28, #1]
  441544:	cmp	w0, #0x44
  441548:	b.eq	4415f4 <argp_parse@@Base+0xd70c>  // b.none
  44154c:	cmp	w0, #0x69
  441550:	b.eq	4415b4 <argp_parse@@Base+0xd6cc>  // b.none
  441554:	cmp	w0, #0x42
  441558:	b.eq	4415f4 <argp_parse@@Base+0xd70c>  // b.none
  44155c:	cmp	w25, #0x5a
  441560:	b.eq	4415c8 <argp_parse@@Base+0xd6e0>  // b.none
  441564:	b.hi	44161c <argp_parse@@Base+0xd734>  // b.pmore
  441568:	cmp	w25, #0x4d
  44156c:	b.eq	441614 <argp_parse@@Base+0xd72c>  // b.none
  441570:	b.hi	441648 <argp_parse@@Base+0xd760>  // b.pmore
  441574:	cmp	w25, #0x45
  441578:	b.eq	441724 <argp_parse@@Base+0xd83c>  // b.none
  44157c:	b.ls	441664 <argp_parse@@Base+0xd77c>  // b.plast
  441580:	cmp	w25, #0x47
  441584:	b.eq	441704 <argp_parse@@Base+0xd81c>  // b.none
  441588:	cmp	w25, #0x4b
  44158c:	b.ne	4415ac <argp_parse@@Base+0xd6c4>  // b.any
  441590:	mov	x19, #0x1                   	// #1
  441594:	mov	x20, #0x400                 	// #1024
  441598:	b	4413a4 <argp_parse@@Base+0xd4bc>
  44159c:	mov	w1, w25
  4415a0:	mov	x0, x23
  4415a4:	bl	404870 <strchr@plt>
  4415a8:	cbnz	x0, 441338 <argp_parse@@Base+0xd450>
  4415ac:	orr	w27, w27, #0x2
  4415b0:	b	4412c4 <argp_parse@@Base+0xd3dc>
  4415b4:	ldrb	w1, [x28, #2]
  4415b8:	mov	w0, #0x3                   	// #3
  4415bc:	cmp	w1, #0x42
  4415c0:	csel	w22, w19, w0, ne  // ne = any
  4415c4:	b	44136c <argp_parse@@Base+0xd484>
  4415c8:	mov	x20, #0x400                 	// #1024
  4415cc:	mov	w0, #0x7                   	// #7
  4415d0:	mov	w2, #0x0                   	// #0
  4415d4:	nop
  4415d8:	umulh	x1, x26, x20
  4415dc:	cbnz	x1, 441794 <argp_parse@@Base+0xd8ac>
  4415e0:	mul	x26, x26, x20
  4415e4:	subs	w0, w0, #0x1
  4415e8:	b.ne	4415d8 <argp_parse@@Base+0xd6f0>  // b.any
  4415ec:	orr	w27, w27, w2
  4415f0:	b	4413b0 <argp_parse@@Base+0xd4c8>
  4415f4:	mov	w22, #0x2                   	// #2
  4415f8:	mov	x20, #0x3e8                 	// #1000
  4415fc:	b	44136c <argp_parse@@Base+0xd484>
  441600:	cmp	w25, #0x6b
  441604:	b.eq	441590 <argp_parse@@Base+0xd6a8>  // b.none
  441608:	cmp	w25, #0x6d
  44160c:	mov	x19, #0x1                   	// #1
  441610:	b.ne	4415ac <argp_parse@@Base+0xd6c4>  // b.any
  441614:	mov	x20, #0x400                 	// #1024
  441618:	b	441510 <argp_parse@@Base+0xd628>
  44161c:	cmp	w25, #0x67
  441620:	b.eq	441730 <argp_parse@@Base+0xd848>  // b.none
  441624:	b.ls	441678 <argp_parse@@Base+0xd790>  // b.plast
  441628:	cmp	w25, #0x74
  44162c:	b.eq	441718 <argp_parse@@Base+0xd830>  // b.none
  441630:	b.ls	441600 <argp_parse@@Base+0xd718>  // b.plast
  441634:	cmp	w25, #0x77
  441638:	mov	x19, #0x1                   	// #1
  44163c:	b.eq	4414ec <argp_parse@@Base+0xd604>  // b.none
  441640:	orr	w27, w27, #0x2
  441644:	b	4412c4 <argp_parse@@Base+0xd3dc>
  441648:	cmp	w25, #0x54
  44164c:	b.eq	441718 <argp_parse@@Base+0xd830>  // b.none
  441650:	cmp	w25, #0x59
  441654:	b.ne	441690 <argp_parse@@Base+0xd7a8>  // b.any
  441658:	mov	x19, #0x1                   	// #1
  44165c:	mov	x20, #0x400                 	// #1024
  441660:	b	441410 <argp_parse@@Base+0xd528>
  441664:	cmp	w25, #0x42
  441668:	mov	x19, #0x1                   	// #1
  44166c:	b.eq	4413e4 <argp_parse@@Base+0xd4fc>  // b.none
  441670:	orr	w27, w27, #0x2
  441674:	b	4412c4 <argp_parse@@Base+0xd3dc>
  441678:	cmp	w25, #0x62
  44167c:	b.eq	441710 <argp_parse@@Base+0xd828>  // b.none
  441680:	cmp	w25, #0x63
  441684:	mov	x19, #0x1                   	// #1
  441688:	b.eq	4413b0 <argp_parse@@Base+0xd4c8>  // b.none
  44168c:	b	4415ac <argp_parse@@Base+0xd6c4>
  441690:	cmp	w25, #0x50
  441694:	b.ne	4415ac <argp_parse@@Base+0xd6c4>  // b.any
  441698:	mov	x19, #0x1                   	// #1
  44169c:	mov	x20, #0x400                 	// #1024
  4416a0:	b	441440 <argp_parse@@Base+0xd558>
  4416a4:	sxtw	x19, w22
  4416a8:	b	4413b0 <argp_parse@@Base+0xd4c8>
  4416ac:	sxtw	x19, w22
  4416b0:	mov	w0, #0x6                   	// #6
  4416b4:	mov	w2, #0x0                   	// #0
  4416b8:	umulh	x1, x26, x20
  4416bc:	cbnz	x1, 441788 <argp_parse@@Base+0xd8a0>
  4416c0:	mul	x26, x26, x20
  4416c4:	subs	w0, w0, #0x1
  4416c8:	b.ne	4416b8 <argp_parse@@Base+0xd7d0>  // b.any
  4416cc:	orr	w27, w27, w2
  4416d0:	b	4413b0 <argp_parse@@Base+0xd4c8>
  4416d4:	sxtw	x19, w22
  4416d8:	mov	w0, #0x4                   	// #4
  4416dc:	mov	w2, #0x0                   	// #0
  4416e0:	umulh	x1, x26, x20
  4416e4:	cbnz	x1, 4417a0 <argp_parse@@Base+0xd8b8>
  4416e8:	mul	x26, x26, x20
  4416ec:	subs	w0, w0, #0x1
  4416f0:	b.ne	4416e0 <argp_parse@@Base+0xd7f8>  // b.any
  4416f4:	orr	w27, w27, w2
  4416f8:	b	4413b0 <argp_parse@@Base+0xd4c8>
  4416fc:	sxtw	x19, w22
  441700:	b	4415cc <argp_parse@@Base+0xd6e4>
  441704:	mov	x19, #0x1                   	// #1
  441708:	mov	x20, #0x400                 	// #1024
  44170c:	b	441484 <argp_parse@@Base+0xd59c>
  441710:	mov	x19, #0x1                   	// #1
  441714:	b	4414c0 <argp_parse@@Base+0xd5d8>
  441718:	mov	x19, #0x1                   	// #1
  44171c:	mov	x20, #0x400                 	// #1024
  441720:	b	4416d8 <argp_parse@@Base+0xd7f0>
  441724:	mov	x19, #0x1                   	// #1
  441728:	mov	x20, #0x400                 	// #1024
  44172c:	b	4416b0 <argp_parse@@Base+0xd7c8>
  441730:	mov	x20, #0x400                 	// #1024
  441734:	b	441484 <argp_parse@@Base+0xd59c>
  441738:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44173c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441740:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441744:	add	x3, x3, #0x1a8
  441748:	add	x1, x1, #0x170
  44174c:	add	x0, x0, #0x180
  441750:	mov	w2, #0x54                  	// #84
  441754:	stp	x25, x26, [sp, #64]
  441758:	stp	x27, x28, [sp, #80]
  44175c:	bl	404ac0 <__assert_fail@plt>
  441760:	mov	w0, #0x1                   	// #1
  441764:	mov	x26, #0xffffffffffffffff    	// #-1
  441768:	orr	w27, w27, w0
  44176c:	b	4413b0 <argp_parse@@Base+0xd4c8>
  441770:	mov	w2, #0x1                   	// #1
  441774:	mov	x26, #0xffffffffffffffff    	// #-1
  441778:	b	441454 <argp_parse@@Base+0xd56c>
  44177c:	mov	w2, #0x1                   	// #1
  441780:	mov	x26, #0xffffffffffffffff    	// #-1
  441784:	b	441424 <argp_parse@@Base+0xd53c>
  441788:	mov	w2, #0x1                   	// #1
  44178c:	mov	x26, #0xffffffffffffffff    	// #-1
  441790:	b	4416c4 <argp_parse@@Base+0xd7dc>
  441794:	mov	w2, #0x1                   	// #1
  441798:	mov	x26, #0xffffffffffffffff    	// #-1
  44179c:	b	4415e4 <argp_parse@@Base+0xd6fc>
  4417a0:	mov	w2, #0x1                   	// #1
  4417a4:	mov	x26, #0xffffffffffffffff    	// #-1
  4417a8:	b	4416ec <argp_parse@@Base+0xd804>
  4417ac:	nop
  4417b0:	stp	x29, x30, [sp, #-272]!
  4417b4:	mov	w9, #0xffffffc8            	// #-56
  4417b8:	mov	w8, #0xffffff80            	// #-128
  4417bc:	mov	x29, sp
  4417c0:	add	x10, sp, #0xd0
  4417c4:	add	x11, sp, #0x110
  4417c8:	stp	x11, x11, [sp, #48]
  4417cc:	str	x10, [sp, #64]
  4417d0:	stp	w9, w8, [sp, #72]
  4417d4:	ldp	x10, x11, [sp, #48]
  4417d8:	stp	x10, x11, [sp, #16]
  4417dc:	ldp	x8, x9, [sp, #64]
  4417e0:	stp	x8, x9, [sp, #32]
  4417e4:	str	q0, [sp, #80]
  4417e8:	str	q1, [sp, #96]
  4417ec:	str	q2, [sp, #112]
  4417f0:	str	q3, [sp, #128]
  4417f4:	str	q4, [sp, #144]
  4417f8:	str	q5, [sp, #160]
  4417fc:	str	q6, [sp, #176]
  441800:	str	q7, [sp, #192]
  441804:	stp	x1, x2, [sp, #216]
  441808:	add	x1, sp, #0x10
  44180c:	stp	x3, x4, [sp, #232]
  441810:	stp	x5, x6, [sp, #248]
  441814:	str	x7, [sp, #264]
  441818:	bl	451810 <_obstack_memory_used@@Base+0xf620>
  44181c:	ldp	x29, x30, [sp], #272
  441820:	ret
  441824:	nop
  441828:	tbz	w0, #31, 441830 <argp_parse@@Base+0xd948>
  44182c:	ret
  441830:	stp	x29, x30, [sp, #-16]!
  441834:	mov	x29, sp
  441838:	bl	4045c0 <close@plt>
  44183c:	cbnz	w0, 441848 <argp_parse@@Base+0xd960>
  441840:	ldp	x29, x30, [sp], #16
  441844:	ret
  441848:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44184c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441850:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441854:	add	x3, x3, #0x228
  441858:	add	x1, x1, #0x1b8
  44185c:	add	x0, x0, #0x1c8
  441860:	mov	w2, #0x40                  	// #64
  441864:	bl	404ac0 <__assert_fail@plt>
  441868:	stp	x29, x30, [sp, #-32]!
  44186c:	mov	w2, #0x4900                	// #18688
  441870:	mov	x29, sp
  441874:	stp	x19, x20, [sp, #16]
  441878:	mov	x19, x0
  44187c:	ldr	w0, [x0]
  441880:	bl	404ab0 <openat@plt>
  441884:	tbnz	w0, #31, 4418a8 <argp_parse@@Base+0xd9c0>
  441888:	mov	w20, w0
  44188c:	ldr	w0, [x19]
  441890:	bl	441828 <argp_parse@@Base+0xd940>
  441894:	str	w20, [x19]
  441898:	mov	w0, #0x0                   	// #0
  44189c:	ldp	x19, x20, [sp, #16]
  4418a0:	ldp	x29, x30, [sp], #32
  4418a4:	ret
  4418a8:	mov	w0, #0xffffffff            	// #-1
  4418ac:	b	44189c <argp_parse@@Base+0xd9b4>
  4418b0:	stp	x29, x30, [sp, #-80]!
  4418b4:	mov	x29, sp
  4418b8:	stp	x19, x20, [sp, #16]
  4418bc:	stp	x23, x24, [sp, #48]
  4418c0:	mov	x24, x0
  4418c4:	bl	4047a0 <chdir@plt>
  4418c8:	mov	w19, w0
  4418cc:	cbz	w0, 4419c8 <argp_parse@@Base+0xdae0>
  4418d0:	stp	x21, x22, [sp, #32]
  4418d4:	bl	404ad0 <__errno_location@plt>
  4418d8:	mov	x22, x0
  4418dc:	ldr	w0, [x0]
  4418e0:	cmp	w0, #0x24
  4418e4:	b.ne	4419dc <argp_parse@@Base+0xdaf4>  // b.any
  4418e8:	mov	x0, x24
  4418ec:	bl	403ff0 <strlen@plt>
  4418f0:	mov	w1, #0xffffff9c            	// #-100
  4418f4:	str	w1, [sp, #72]
  4418f8:	mov	x23, x0
  4418fc:	cbz	x0, 441b34 <argp_parse@@Base+0xdc4c>
  441900:	cmp	x0, #0xfff
  441904:	b.ls	441b58 <argp_parse@@Base+0xdc70>  // b.plast
  441908:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44190c:	add	x21, x21, #0x280
  441910:	mov	x1, x21
  441914:	mov	x0, x24
  441918:	bl	404860 <strspn@plt>
  44191c:	mov	x19, x0
  441920:	cmp	x0, #0x2
  441924:	b.eq	441a60 <argp_parse@@Base+0xdb78>  // b.none
  441928:	mov	x20, x24
  44192c:	cbnz	x0, 4419f4 <argp_parse@@Base+0xdb0c>
  441930:	ldrb	w0, [x20]
  441934:	cmp	w0, #0x2f
  441938:	b.eq	441aec <argp_parse@@Base+0xdc04>  // b.none
  44193c:	add	x23, x24, x23
  441940:	cmp	x20, x23
  441944:	b.hi	441b10 <argp_parse@@Base+0xdc28>  // b.pmore
  441948:	sub	x0, x23, x20
  44194c:	mov	w24, #0x2f                  	// #47
  441950:	cmp	x0, #0xfff
  441954:	b.gt	4419a0 <argp_parse@@Base+0xdab8>
  441958:	b	441a0c <argp_parse@@Base+0xdb24>
  44195c:	strb	wzr, [x0]
  441960:	sub	x0, x0, x20
  441964:	cmp	x0, #0xfff
  441968:	b.gt	441ac8 <argp_parse@@Base+0xdbe0>
  44196c:	mov	x1, x20
  441970:	add	x0, sp, #0x48
  441974:	bl	441868 <argp_parse@@Base+0xd980>
  441978:	strb	w24, [x19]
  44197c:	cbnz	w0, 441a34 <argp_parse@@Base+0xdb4c>
  441980:	add	x19, x19, #0x1
  441984:	mov	x1, x21
  441988:	mov	x0, x19
  44198c:	bl	404860 <strspn@plt>
  441990:	add	x20, x19, x0
  441994:	sub	x0, x23, x20
  441998:	cmp	x0, #0xfff
  44199c:	b.le	441a0c <argp_parse@@Base+0xdb24>
  4419a0:	mov	x0, x20
  4419a4:	mov	x2, #0x1000                	// #4096
  4419a8:	mov	w1, #0x2f                  	// #47
  4419ac:	bl	404890 <memrchr@plt>
  4419b0:	mov	x19, x0
  4419b4:	cbnz	x0, 44195c <argp_parse@@Base+0xda74>
  4419b8:	mov	w0, #0x24                  	// #36
  4419bc:	str	w0, [x22]
  4419c0:	ldp	x21, x22, [sp, #32]
  4419c4:	mov	w19, #0xffffffff            	// #-1
  4419c8:	mov	w0, w19
  4419cc:	ldp	x19, x20, [sp, #16]
  4419d0:	ldp	x23, x24, [sp, #48]
  4419d4:	ldp	x29, x30, [sp], #80
  4419d8:	ret
  4419dc:	mov	w0, w19
  4419e0:	ldp	x19, x20, [sp, #16]
  4419e4:	ldp	x21, x22, [sp, #32]
  4419e8:	ldp	x23, x24, [sp, #48]
  4419ec:	ldp	x29, x30, [sp], #80
  4419f0:	ret
  4419f4:	mov	x1, x21
  4419f8:	add	x0, sp, #0x48
  4419fc:	bl	441868 <argp_parse@@Base+0xd980>
  441a00:	cbnz	w0, 441a34 <argp_parse@@Base+0xdb4c>
  441a04:	add	x20, x24, x19
  441a08:	b	441930 <argp_parse@@Base+0xda48>
  441a0c:	cmp	x23, x20
  441a10:	b.ls	441a24 <argp_parse@@Base+0xdb3c>  // b.plast
  441a14:	mov	x1, x20
  441a18:	add	x0, sp, #0x48
  441a1c:	bl	441868 <argp_parse@@Base+0xd980>
  441a20:	cbnz	w0, 441a34 <argp_parse@@Base+0xdb4c>
  441a24:	ldr	w0, [sp, #72]
  441a28:	bl	404060 <fchdir@plt>
  441a2c:	mov	w19, w0
  441a30:	cbz	w0, 441aac <argp_parse@@Base+0xdbc4>
  441a34:	ldr	w0, [sp, #72]
  441a38:	mov	w19, #0xffffffff            	// #-1
  441a3c:	ldr	w20, [x22]
  441a40:	bl	441828 <argp_parse@@Base+0xd940>
  441a44:	str	w20, [x22]
  441a48:	mov	w0, w19
  441a4c:	ldp	x19, x20, [sp, #16]
  441a50:	ldp	x21, x22, [sp, #32]
  441a54:	ldp	x23, x24, [sp, #48]
  441a58:	ldp	x29, x30, [sp], #80
  441a5c:	ret
  441a60:	sub	x2, x23, #0x3
  441a64:	add	x0, x24, #0x3
  441a68:	mov	w1, #0x2f                  	// #47
  441a6c:	bl	404960 <memchr@plt>
  441a70:	mov	x19, x0
  441a74:	cbz	x0, 441abc <argp_parse@@Base+0xdbd4>
  441a78:	strb	wzr, [x0]
  441a7c:	mov	x1, x24
  441a80:	add	x0, sp, #0x48
  441a84:	bl	441868 <argp_parse@@Base+0xd980>
  441a88:	mov	w1, #0x2f                  	// #47
  441a8c:	strb	w1, [x19]
  441a90:	cbnz	w0, 441a34 <argp_parse@@Base+0xdb4c>
  441a94:	add	x19, x19, #0x1
  441a98:	mov	x1, x21
  441a9c:	mov	x0, x19
  441aa0:	bl	404860 <strspn@plt>
  441aa4:	add	x20, x19, x0
  441aa8:	b	441930 <argp_parse@@Base+0xda48>
  441aac:	ldr	w0, [sp, #72]
  441ab0:	bl	441828 <argp_parse@@Base+0xd940>
  441ab4:	ldp	x21, x22, [sp, #32]
  441ab8:	b	4419c8 <argp_parse@@Base+0xdae0>
  441abc:	mov	w19, #0xffffffff            	// #-1
  441ac0:	ldp	x21, x22, [sp, #32]
  441ac4:	b	4419c8 <argp_parse@@Base+0xdae0>
  441ac8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441acc:	add	x3, x3, #0x228
  441ad0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441ad4:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441ad8:	add	x3, x3, #0x10
  441adc:	add	x1, x1, #0x1b8
  441ae0:	add	x0, x0, #0x210
  441ae4:	mov	w2, #0xb3                  	// #179
  441ae8:	bl	404ac0 <__assert_fail@plt>
  441aec:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441af0:	add	x3, x3, #0x228
  441af4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441af8:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441afc:	add	x3, x3, #0x10
  441b00:	add	x1, x1, #0x1b8
  441b04:	add	x0, x0, #0x1f0
  441b08:	mov	w2, #0xa2                  	// #162
  441b0c:	bl	404ac0 <__assert_fail@plt>
  441b10:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441b14:	add	x3, x3, #0x228
  441b18:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441b1c:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441b20:	add	x3, x3, #0x10
  441b24:	add	x1, x1, #0x1b8
  441b28:	add	x0, x0, #0x200
  441b2c:	mov	w2, #0xa3                  	// #163
  441b30:	bl	404ac0 <__assert_fail@plt>
  441b34:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441b38:	add	x3, x3, #0x228
  441b3c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441b40:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441b44:	add	x3, x3, #0x10
  441b48:	add	x1, x1, #0x1b8
  441b4c:	add	x0, x0, #0x1d8
  441b50:	mov	w2, #0x7e                  	// #126
  441b54:	bl	404ac0 <__assert_fail@plt>
  441b58:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441b5c:	add	x3, x3, #0x228
  441b60:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441b64:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  441b68:	add	x3, x3, #0x10
  441b6c:	add	x1, x1, #0x1b8
  441b70:	add	x0, x0, #0x1e0
  441b74:	mov	w2, #0x7f                  	// #127
  441b78:	bl	404ac0 <__assert_fail@plt>
  441b7c:	nop
  441b80:	stp	x29, x30, [sp, #-112]!
  441b84:	mov	w6, #0xffffffe0            	// #-32
  441b88:	mov	x29, sp
  441b8c:	add	x7, sp, #0x50
  441b90:	stp	x19, x20, [sp, #16]
  441b94:	str	x7, [sp, #64]
  441b98:	stp	w6, wzr, [sp, #72]
  441b9c:	stp	x2, x3, [sp, #80]
  441ba0:	add	x2, sp, #0x70
  441ba4:	stp	x2, x2, [sp, #48]
  441ba8:	stp	x4, x5, [sp, #96]
  441bac:	cbz	w1, 441c6c <argp_parse@@Base+0xdd84>
  441bb0:	mov	w20, w0
  441bb4:	mov	w3, w1
  441bb8:	cmp	w1, #0x406
  441bbc:	b.eq	441c88 <argp_parse@@Base+0xdda0>  // b.none
  441bc0:	cmp	w1, #0xb
  441bc4:	b.gt	441c10 <argp_parse@@Base+0xdd28>
  441bc8:	cmp	w1, #0x0
  441bcc:	b.le	441c3c <argp_parse@@Base+0xdd54>
  441bd0:	mov	x1, #0x1                   	// #1
  441bd4:	mov	x2, #0x514                 	// #1300
  441bd8:	lsl	x1, x1, x3
  441bdc:	tst	x1, x2
  441be0:	b.ne	441d04 <argp_parse@@Base+0xde1c>  // b.any
  441be4:	mov	x2, #0xa0a                 	// #2570
  441be8:	tst	x1, x2
  441bec:	b.eq	441c3c <argp_parse@@Base+0xdd54>  // b.none
  441bf0:	mov	w1, w3
  441bf4:	mov	w0, w20
  441bf8:	bl	4048e0 <fcntl@plt>
  441bfc:	mov	w19, w0
  441c00:	mov	w0, w19
  441c04:	ldp	x19, x20, [sp, #16]
  441c08:	ldp	x29, x30, [sp], #112
  441c0c:	ret
  441c10:	sub	w0, w1, #0x400
  441c14:	cmp	w0, #0xa
  441c18:	b.hi	441c3c <argp_parse@@Base+0xdd54>  // b.pmore
  441c1c:	mov	x1, #0x1                   	// #1
  441c20:	mov	x2, #0x2c5                 	// #709
  441c24:	lsl	x1, x1, x0
  441c28:	tst	x1, x2
  441c2c:	b.ne	441d04 <argp_parse@@Base+0xde1c>  // b.any
  441c30:	mov	x2, #0x502                 	// #1282
  441c34:	tst	x1, x2
  441c38:	b.ne	441bf0 <argp_parse@@Base+0xdd08>  // b.any
  441c3c:	ldr	w0, [sp, #72]
  441c40:	ldr	x1, [sp, #48]
  441c44:	tbnz	w0, #31, 441db0 <argp_parse@@Base+0xdec8>
  441c48:	ldr	x2, [x1]
  441c4c:	mov	w0, w20
  441c50:	mov	w1, w3
  441c54:	bl	4048e0 <fcntl@plt>
  441c58:	mov	w19, w0
  441c5c:	mov	w0, w19
  441c60:	ldp	x19, x20, [sp, #16]
  441c64:	ldp	x29, x30, [sp], #112
  441c68:	ret
  441c6c:	ldr	w2, [sp, #80]
  441c70:	bl	4048e0 <fcntl@plt>
  441c74:	mov	w19, w0
  441c78:	mov	w0, w19
  441c7c:	ldp	x19, x20, [sp, #16]
  441c80:	ldp	x29, x30, [sp], #112
  441c84:	ret
  441c88:	stp	x21, x22, [sp, #32]
  441c8c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  441c90:	mov	w2, #0xffffffe8            	// #-24
  441c94:	str	w2, [sp, #72]
  441c98:	ldr	w2, [x21, #3808]
  441c9c:	ldr	w22, [sp, #80]
  441ca0:	tbnz	w2, #31, 441cd0 <argp_parse@@Base+0xdde8>
  441ca4:	mov	w2, w22
  441ca8:	bl	4048e0 <fcntl@plt>
  441cac:	mov	w19, w0
  441cb0:	tbnz	w0, #31, 441d34 <argp_parse@@Base+0xde4c>
  441cb4:	mov	w0, #0x1                   	// #1
  441cb8:	str	w0, [x21, #3808]
  441cbc:	mov	w0, w19
  441cc0:	ldp	x19, x20, [sp, #16]
  441cc4:	ldp	x21, x22, [sp, #32]
  441cc8:	ldp	x29, x30, [sp], #112
  441ccc:	ret
  441cd0:	mov	w2, w22
  441cd4:	mov	w1, #0x0                   	// #0
  441cd8:	bl	4048e0 <fcntl@plt>
  441cdc:	mov	w19, w0
  441ce0:	tbnz	w0, #31, 441cf0 <argp_parse@@Base+0xde08>
  441ce4:	ldr	w0, [x21, #3808]
  441ce8:	cmn	w0, #0x1
  441cec:	b.eq	441d64 <argp_parse@@Base+0xde7c>  // b.none
  441cf0:	mov	w0, w19
  441cf4:	ldp	x19, x20, [sp, #16]
  441cf8:	ldp	x21, x22, [sp, #32]
  441cfc:	ldp	x29, x30, [sp], #112
  441d00:	ret
  441d04:	ldr	w0, [sp, #72]
  441d08:	ldr	x1, [sp, #48]
  441d0c:	tbnz	w0, #31, 441dc4 <argp_parse@@Base+0xdedc>
  441d10:	ldr	w2, [x1]
  441d14:	mov	w0, w20
  441d18:	mov	w1, w3
  441d1c:	bl	4048e0 <fcntl@plt>
  441d20:	mov	w19, w0
  441d24:	mov	w0, w19
  441d28:	ldp	x19, x20, [sp, #16]
  441d2c:	ldp	x29, x30, [sp], #112
  441d30:	ret
  441d34:	bl	404ad0 <__errno_location@plt>
  441d38:	ldr	w0, [x0]
  441d3c:	cmp	w0, #0x16
  441d40:	b.ne	441cb4 <argp_parse@@Base+0xddcc>  // b.any
  441d44:	mov	w2, w22
  441d48:	mov	w0, w20
  441d4c:	mov	w1, #0x0                   	// #0
  441d50:	bl	4048e0 <fcntl@plt>
  441d54:	mov	w19, w0
  441d58:	tbnz	w0, #31, 441cf0 <argp_parse@@Base+0xde08>
  441d5c:	mov	w0, #0xffffffff            	// #-1
  441d60:	str	w0, [x21, #3808]
  441d64:	mov	w0, w19
  441d68:	mov	w1, #0x1                   	// #1
  441d6c:	bl	4048e0 <fcntl@plt>
  441d70:	tbnz	w0, #31, 441d8c <argp_parse@@Base+0xdea4>
  441d74:	orr	w2, w0, #0x1
  441d78:	mov	w1, #0x2                   	// #2
  441d7c:	mov	w0, w19
  441d80:	bl	4048e0 <fcntl@plt>
  441d84:	cmn	w0, #0x1
  441d88:	b.ne	441cf0 <argp_parse@@Base+0xde08>  // b.any
  441d8c:	bl	404ad0 <__errno_location@plt>
  441d90:	mov	x20, x0
  441d94:	mov	w0, w19
  441d98:	mov	w19, #0xffffffff            	// #-1
  441d9c:	ldr	w21, [x20]
  441da0:	bl	4045c0 <close@plt>
  441da4:	str	w21, [x20]
  441da8:	ldp	x21, x22, [sp, #32]
  441dac:	b	441c00 <argp_parse@@Base+0xdd18>
  441db0:	cmn	w0, #0x7
  441db4:	b.ge	441c48 <argp_parse@@Base+0xdd60>  // b.tcont
  441db8:	ldr	x1, [sp, #56]
  441dbc:	add	x1, x1, w0, sxtw
  441dc0:	b	441c48 <argp_parse@@Base+0xdd60>
  441dc4:	cmn	w0, #0x7
  441dc8:	b.ge	441d10 <argp_parse@@Base+0xde28>  // b.tcont
  441dcc:	ldr	x1, [sp, #56]
  441dd0:	add	x1, x1, w0, sxtw
  441dd4:	b	441d10 <argp_parse@@Base+0xde28>
  441dd8:	mov	w6, #0x0                   	// #0
  441ddc:	mov	w5, #0x0                   	// #0
  441de0:	b	452518 <_obstack_memory_used@@Base+0x10328>
  441de4:	nop
  441de8:	mov	x6, x5
  441dec:	mov	w7, #0x0                   	// #0
  441df0:	mov	w5, #0x0                   	// #0
  441df4:	b	451ee0 <_obstack_memory_used@@Base+0xfcf0>
  441df8:	mov	w6, #0x0                   	// #0
  441dfc:	mov	w5, #0x1                   	// #1
  441e00:	b	452518 <_obstack_memory_used@@Base+0x10328>
  441e04:	nop
  441e08:	mov	x6, x5
  441e0c:	mov	w7, #0x0                   	// #0
  441e10:	mov	w5, #0x1                   	// #1
  441e14:	b	451ee0 <_obstack_memory_used@@Base+0xfcf0>
  441e18:	stp	x29, x30, [sp, #-64]!
  441e1c:	cmp	x0, #0x0
  441e20:	add	x4, sp, #0x3c
  441e24:	mov	x29, sp
  441e28:	stp	x19, x20, [sp, #16]
  441e2c:	csel	x19, x4, x0, eq  // eq = none
  441e30:	mov	x20, x2
  441e34:	mov	x0, x19
  441e38:	str	x21, [sp, #32]
  441e3c:	mov	x21, x1
  441e40:	bl	403f60 <mbrtowc@plt>
  441e44:	cmp	x20, #0x0
  441e48:	mov	x20, x0
  441e4c:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  441e50:	b.hi	441e68 <argp_parse@@Base+0xdf80>  // b.pmore
  441e54:	mov	x0, x20
  441e58:	ldp	x19, x20, [sp, #16]
  441e5c:	ldr	x21, [sp, #32]
  441e60:	ldp	x29, x30, [sp], #64
  441e64:	ret
  441e68:	mov	w0, #0x0                   	// #0
  441e6c:	bl	44fdf8 <_obstack_memory_used@@Base+0xdc08>
  441e70:	tst	w0, #0xff
  441e74:	b.ne	441e54 <argp_parse@@Base+0xdf6c>  // b.any
  441e78:	ldrb	w0, [x21]
  441e7c:	mov	x20, #0x1                   	// #1
  441e80:	str	w0, [x19]
  441e84:	mov	x0, x20
  441e88:	ldp	x19, x20, [sp, #16]
  441e8c:	ldr	x21, [sp, #32]
  441e90:	ldp	x29, x30, [sp], #64
  441e94:	ret
  441e98:	stp	x29, x30, [sp, #-32]!
  441e9c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  441ea0:	mov	w2, #0x5                   	// #5
  441ea4:	mov	x29, sp
  441ea8:	str	x19, [sp, #16]
  441eac:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x11e10>
  441eb0:	ldr	x19, [x0, #1096]
  441eb4:	add	x1, x1, #0xdc8
  441eb8:	mov	x0, #0x0                   	// #0
  441ebc:	bl	4049c0 <dcgettext@plt>
  441ec0:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x1be10>
  441ec4:	mov	x3, x0
  441ec8:	add	x2, x2, #0xe18
  441ecc:	mov	x0, x19
  441ed0:	mov	w1, #0x1                   	// #1
  441ed4:	bl	404700 <__fprintf_chk@plt>
  441ed8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  441edc:	ldr	w0, [x0, #968]
  441ee0:	bl	404020 <exit@plt>
  441ee4:	nop
  441ee8:	mov	x2, x0
  441eec:	mov	x0, x1
  441ef0:	ldrb	w4, [x2, #80]
  441ef4:	ldr	x3, [x2, #56]
  441ef8:	tbz	w4, #0, 441f08 <argp_parse@@Base+0xe020>
  441efc:	ldr	x0, [x2, #72]
  441f00:	mov	x16, x3
  441f04:	br	x16
  441f08:	mov	x16, x3
  441f0c:	br	x16
  441f10:	mov	x2, x0
  441f14:	mov	x0, x1
  441f18:	ldrb	w4, [x2, #80]
  441f1c:	ldr	x3, [x2, #64]
  441f20:	tbz	w4, #0, 441f30 <argp_parse@@Base+0xe048>
  441f24:	ldr	x0, [x2, #72]
  441f28:	mov	x16, x3
  441f2c:	br	x16
  441f30:	mov	x16, x3
  441f34:	br	x16
  441f38:	stp	x29, x30, [sp, #-48]!
  441f3c:	mov	x29, sp
  441f40:	stp	x19, x20, [sp, #16]
  441f44:	mov	x19, x0
  441f48:	str	x21, [sp, #32]
  441f4c:	cbz	x2, 441fc8 <argp_parse@@Base+0xe0e0>
  441f50:	mov	x20, x2
  441f54:	sub	x21, x2, #0x1
  441f58:	cmp	x1, #0x0
  441f5c:	mov	x0, #0xfe0                 	// #4064
  441f60:	csel	x1, x1, x0, ne  // ne = any
  441f64:	str	x1, [x19]
  441f68:	str	x21, [x19, #48]
  441f6c:	mov	x0, x19
  441f70:	bl	441ee8 <argp_parse@@Base+0xe000>
  441f74:	str	x0, [x19, #8]
  441f78:	mov	x1, x0
  441f7c:	cbz	x0, 441fd4 <argp_parse@@Base+0xe0ec>
  441f80:	add	x2, x0, #0x10
  441f84:	neg	x20, x20
  441f88:	ldr	x0, [x19]
  441f8c:	add	x2, x2, x21
  441f90:	and	x20, x2, x20
  441f94:	ldr	x21, [sp, #32]
  441f98:	stp	x20, x20, [x19, #16]
  441f9c:	add	x2, x1, x0
  441fa0:	str	x2, [x1]
  441fa4:	mov	w0, #0x1                   	// #1
  441fa8:	str	x2, [x19, #32]
  441fac:	ldrb	w2, [x19, #80]
  441fb0:	str	xzr, [x1, #8]
  441fb4:	and	w1, w2, #0xfffffff9
  441fb8:	strb	w1, [x19, #80]
  441fbc:	ldp	x19, x20, [sp, #16]
  441fc0:	ldp	x29, x30, [sp], #48
  441fc4:	ret
  441fc8:	mov	x21, #0xf                   	// #15
  441fcc:	mov	x20, #0x10                  	// #16
  441fd0:	b	441f58 <argp_parse@@Base+0xe070>
  441fd4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  441fd8:	ldr	x0, [x0, #1064]
  441fdc:	blr	x0

0000000000441fe0 <_obstack_begin@@Base>:
  441fe0:	ldrb	w6, [x0, #80]
  441fe4:	stp	x3, x4, [x0, #56]
  441fe8:	and	w6, w6, #0xfffffffe
  441fec:	strb	w6, [x0, #80]
  441ff0:	b	441f38 <argp_parse@@Base+0xe050>
  441ff4:	nop

0000000000441ff8 <_obstack_begin_1@@Base>:
  441ff8:	ldrb	w7, [x0, #80]
  441ffc:	stp	x3, x4, [x0, #56]
  442000:	orr	w7, w7, #0x1
  442004:	str	x5, [x0, #72]
  442008:	strb	w7, [x0, #80]
  44200c:	b	441f38 <argp_parse@@Base+0xe050>

0000000000442010 <_obstack_newchunk@@Base>:
  442010:	stp	x29, x30, [sp, #-64]!
  442014:	mov	x29, sp
  442018:	stp	x21, x22, [sp, #32]
  44201c:	ldp	x2, x21, [x0, #16]
  442020:	stp	x19, x20, [sp, #16]
  442024:	ldr	x4, [x0, #48]
  442028:	ldr	x3, [x0]
  44202c:	sub	x21, x21, x2
  442030:	adds	x1, x21, x1
  442034:	str	x23, [sp, #48]
  442038:	cset	x2, cs  // cs = hs, nlast
  44203c:	lsr	x20, x21, #3
  442040:	adds	x4, x4, x1
  442044:	add	x20, x20, #0x64
  442048:	cset	x1, cs  // cs = hs, nlast
  44204c:	cmp	x3, x4
  442050:	csel	x3, x3, x4, cs  // cs = hs, nlast
  442054:	add	x4, x20, x4
  442058:	cmp	x3, x4
  44205c:	csel	x20, x3, x4, cs  // cs = hs, nlast
  442060:	cmp	x2, #0x0
  442064:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  442068:	ldr	x23, [x0, #8]
  44206c:	b.ne	442118 <_obstack_newchunk@@Base+0x108>  // b.any
  442070:	mov	x19, x0
  442074:	mov	x1, x20
  442078:	bl	441ee8 <argp_parse@@Base+0xe000>
  44207c:	mov	x22, x0
  442080:	cbz	x0, 442118 <_obstack_newchunk@@Base+0x108>
  442084:	str	x0, [x19, #8]
  442088:	add	x3, x0, x20
  44208c:	ldr	x1, [x19, #16]
  442090:	mov	x2, x21
  442094:	ldr	x20, [x19, #48]
  442098:	str	x23, [x0, #8]
  44209c:	str	x3, [x19, #32]
  4420a0:	str	x3, [x0], #16
  4420a4:	add	x0, x0, x20
  4420a8:	bic	x20, x0, x20
  4420ac:	mov	x0, x20
  4420b0:	bl	403f70 <memcpy@plt>
  4420b4:	ldrb	w0, [x19, #80]
  4420b8:	tbnz	w0, #1, 4420d8 <_obstack_newchunk@@Base+0xc8>
  4420bc:	ldr	x1, [x19, #48]
  4420c0:	add	x0, x23, #0x10
  4420c4:	ldr	x2, [x19, #16]
  4420c8:	add	x0, x0, x1
  4420cc:	bic	x0, x0, x1
  4420d0:	cmp	x2, x0
  4420d4:	b.eq	442100 <_obstack_newchunk@@Base+0xf0>  // b.none
  4420d8:	ldrb	w0, [x19, #80]
  4420dc:	add	x21, x20, x21
  4420e0:	ldr	x23, [sp, #48]
  4420e4:	and	w0, w0, #0xfffffffd
  4420e8:	stp	x20, x21, [x19, #16]
  4420ec:	strb	w0, [x19, #80]
  4420f0:	ldp	x19, x20, [sp, #16]
  4420f4:	ldp	x21, x22, [sp, #32]
  4420f8:	ldp	x29, x30, [sp], #64
  4420fc:	ret
  442100:	ldr	x0, [x23, #8]
  442104:	str	x0, [x22, #8]
  442108:	mov	x1, x23
  44210c:	mov	x0, x19
  442110:	bl	441f10 <argp_parse@@Base+0xe028>
  442114:	b	4420d8 <_obstack_newchunk@@Base+0xc8>
  442118:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  44211c:	ldr	x0, [x0, #1064]
  442120:	blr	x0
  442124:	nop

0000000000442128 <_obstack_allocated_p@@Base>:
  442128:	ldr	x0, [x0, #8]
  44212c:	cbz	x0, 442150 <_obstack_allocated_p@@Base+0x28>
  442130:	cmp	x1, x0
  442134:	b.ls	442144 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  442138:	ldr	x2, [x0]
  44213c:	cmp	x2, x1
  442140:	b.cs	442154 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  442144:	ldr	x0, [x0, #8]
  442148:	cbnz	x0, 442130 <_obstack_allocated_p@@Base+0x8>
  44214c:	mov	w0, #0x0                   	// #0
  442150:	ret
  442154:	mov	w0, #0x1                   	// #1
  442158:	ret
  44215c:	nop

0000000000442160 <_obstack_free@@Base>:
  442160:	stp	x29, x30, [sp, #-48]!
  442164:	mov	x29, sp
  442168:	str	x21, [sp, #32]
  44216c:	mov	x21, x1
  442170:	ldr	x1, [x0, #8]
  442174:	cbz	x1, 4421bc <_obstack_free@@Base+0x5c>
  442178:	stp	x19, x20, [sp, #16]
  44217c:	mov	x20, x0
  442180:	b	442188 <_obstack_free@@Base+0x28>
  442184:	mov	x1, x19
  442188:	cmp	x1, x21
  44218c:	b.cs	44219c <_obstack_free@@Base+0x3c>  // b.hs, b.nlast
  442190:	ldr	x0, [x1]
  442194:	cmp	x0, x21
  442198:	b.cs	4421cc <_obstack_free@@Base+0x6c>  // b.hs, b.nlast
  44219c:	mov	x0, x20
  4421a0:	ldr	x19, [x1, #8]
  4421a4:	bl	441f10 <argp_parse@@Base+0xe028>
  4421a8:	ldrb	w2, [x20, #80]
  4421ac:	orr	w2, w2, #0x2
  4421b0:	strb	w2, [x20, #80]
  4421b4:	cbnz	x19, 442184 <_obstack_free@@Base+0x24>
  4421b8:	ldp	x19, x20, [sp, #16]
  4421bc:	cbnz	x21, 4421e4 <_obstack_free@@Base+0x84>
  4421c0:	ldr	x21, [sp, #32]
  4421c4:	ldp	x29, x30, [sp], #48
  4421c8:	ret
  4421cc:	stp	x1, x21, [x20, #8]
  4421d0:	stp	x21, x0, [x20, #24]
  4421d4:	ldp	x19, x20, [sp, #16]
  4421d8:	ldr	x21, [sp, #32]
  4421dc:	ldp	x29, x30, [sp], #48
  4421e0:	ret
  4421e4:	stp	x19, x20, [sp, #16]
  4421e8:	bl	404650 <abort@plt>
  4421ec:	nop

00000000004421f0 <_obstack_memory_used@@Base>:
  4421f0:	ldr	x1, [x0, #8]
  4421f4:	mov	x0, #0x0                   	// #0
  4421f8:	cbz	x1, 442214 <_obstack_memory_used@@Base+0x24>
  4421fc:	nop
  442200:	ldr	x2, [x1]
  442204:	sub	x2, x2, x1
  442208:	ldr	x1, [x1, #8]
  44220c:	add	x0, x0, x2
  442210:	cbnz	x1, 442200 <_obstack_memory_used@@Base+0x10>
  442214:	ret
  442218:	stp	x29, x30, [sp, #-96]!
  44221c:	mov	x29, sp
  442220:	stp	x19, x20, [sp, #16]
  442224:	mov	x19, x0
  442228:	ldrb	w0, [x2]
  44222c:	cbz	w0, 4422f0 <_obstack_memory_used@@Base+0x100>
  442230:	stp	x21, x22, [sp, #32]
  442234:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x3fe10>
  442238:	mov	x20, x2
  44223c:	ldr	w0, [x22, #3812]
  442240:	mov	w21, w1
  442244:	cbz	w0, 4422b4 <_obstack_memory_used@@Base+0xc4>
  442248:	tbnz	w0, #31, 4422a8 <_obstack_memory_used@@Base+0xb8>
  44224c:	mov	x0, x20
  442250:	bl	403ff0 <strlen@plt>
  442254:	add	x0, x0, #0x1b
  442258:	cmp	x0, #0xfc0
  44225c:	b.hi	44229c <_obstack_memory_used@@Base+0xac>  // b.pmore
  442260:	mov	w4, w21
  442264:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  442268:	add	x3, x3, #0x270
  44226c:	mov	x2, #0xffffffffffffffff    	// #-1
  442270:	mov	w1, #0x1                   	// #1
  442274:	mov	x0, x19
  442278:	bl	404010 <__sprintf_chk@plt>
  44227c:	add	x0, x19, w0, sxtw
  442280:	mov	x1, x20
  442284:	bl	404910 <strcpy@plt>
  442288:	ldp	x21, x22, [sp, #32]
  44228c:	mov	x0, x19
  442290:	ldp	x19, x20, [sp, #16]
  442294:	ldp	x29, x30, [sp], #96
  442298:	ret
  44229c:	bl	404310 <malloc@plt>
  4422a0:	mov	x19, x0
  4422a4:	cbnz	x0, 442260 <_obstack_memory_used@@Base+0x70>
  4422a8:	mov	x0, #0x0                   	// #0
  4422ac:	ldp	x21, x22, [sp, #32]
  4422b0:	b	442290 <_obstack_memory_used@@Base+0xa0>
  4422b4:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  4422b8:	mov	w1, #0x4900                	// #18688
  4422bc:	add	x0, x0, #0x248
  4422c0:	str	x23, [sp, #48]
  4422c4:	bl	404340 <open@plt>
  4422c8:	mov	w23, w0
  4422cc:	tbz	w0, #31, 442304 <_obstack_memory_used@@Base+0x114>
  4422d0:	mov	w1, #0xffffffff            	// #-1
  4422d4:	str	w1, [x22, #3812]
  4422d8:	mov	x0, #0x0                   	// #0
  4422dc:	ldp	x19, x20, [sp, #16]
  4422e0:	ldp	x21, x22, [sp, #32]
  4422e4:	ldr	x23, [sp, #48]
  4422e8:	ldp	x29, x30, [sp], #96
  4422ec:	ret
  4422f0:	strb	wzr, [x19]
  4422f4:	mov	x0, x19
  4422f8:	ldp	x19, x20, [sp, #16]
  4422fc:	ldp	x29, x30, [sp], #96
  442300:	ret
  442304:	mov	w4, w0
  442308:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44230c:	add	x3, x3, #0x258
  442310:	mov	x2, #0x20                  	// #32
  442314:	mov	w1, #0x1                   	// #1
  442318:	add	x0, sp, #0x40
  44231c:	bl	404010 <__sprintf_chk@plt>
  442320:	mov	w1, #0x0                   	// #0
  442324:	add	x0, sp, #0x40
  442328:	bl	404690 <access@plt>
  44232c:	cmp	w0, #0x0
  442330:	mov	w1, #0x1                   	// #1
  442334:	cneg	w1, w1, ne  // ne = any
  442338:	mov	w0, w23
  44233c:	str	w1, [x22, #3812]
  442340:	bl	4045c0 <close@plt>
  442344:	ldr	w0, [x22, #3812]
  442348:	ldr	x23, [sp, #48]
  44234c:	b	442248 <_obstack_memory_used@@Base+0x58>
  442350:	cmp	x0, #0x0
  442354:	mov	x3, x0
  442358:	cset	w0, eq  // eq = none
  44235c:	cmp	x1, #0x0
  442360:	csinc	w0, w0, wzr, ne  // ne = any
  442364:	cbnz	w0, 4423a4 <_obstack_memory_used@@Base+0x1b4>
  442368:	ldr	x4, [x1, #8]
  44236c:	ldr	x2, [x3, #8]
  442370:	cmp	x2, x4
  442374:	b.eq	442394 <_obstack_memory_used@@Base+0x1a4>  // b.none
  442378:	ret
  44237c:	ldr	x4, [x1, #16]
  442380:	ldr	x5, [x3, #16]
  442384:	ldr	x4, [x4, x2, lsl #3]
  442388:	ldr	x5, [x5, x2, lsl #3]
  44238c:	cmp	x5, x4
  442390:	b.ne	442378 <_obstack_memory_used@@Base+0x188>  // b.any
  442394:	subs	x2, x2, #0x1
  442398:	b.pl	44237c <_obstack_memory_used@@Base+0x18c>  // b.nfrst
  44239c:	mov	w0, #0x1                   	// #1
  4423a0:	ret
  4423a4:	mov	w0, #0x0                   	// #0
  4423a8:	ret
  4423ac:	nop
  4423b0:	mov	x3, x0
  4423b4:	ldr	x0, [x1, #72]
  4423b8:	ldr	x4, [x1, #104]
  4423bc:	cmp	x4, x0
  4423c0:	b.le	442464 <_obstack_memory_used@@Base+0x274>
  4423c4:	ldr	x5, [x1, #8]
  4423c8:	ldr	w6, [x1, #144]
  4423cc:	ldrb	w4, [x5, x0]
  4423d0:	cmp	w6, #0x1
  4423d4:	strb	w4, [x3]
  4423d8:	b.le	4423f8 <_obstack_memory_used@@Base+0x208>
  4423dc:	ldr	x6, [x1, #48]
  4423e0:	cmp	x0, x6
  4423e4:	b.eq	4423f8 <_obstack_memory_used@@Base+0x208>  // b.none
  4423e8:	ldr	x6, [x1, #16]
  4423ec:	ldr	w6, [x6, x0, lsl #2]
  4423f0:	cmn	w6, #0x1
  4423f4:	b.eq	44243c <_obstack_memory_used@@Base+0x24c>  // b.none
  4423f8:	cmp	w4, #0x5c
  4423fc:	b.eq	442428 <_obstack_memory_used@@Base+0x238>  // b.none
  442400:	cmp	w4, #0x5b
  442404:	b.eq	442474 <_obstack_memory_used@@Base+0x284>  // b.none
  442408:	cmp	w4, #0x5d
  44240c:	b.eq	4424c0 <_obstack_memory_used@@Base+0x2d0>  // b.none
  442410:	cmp	w4, #0x5e
  442414:	b.ne	44244c <_obstack_memory_used@@Base+0x25c>  // b.any
  442418:	mov	w1, #0x19                  	// #25
  44241c:	mov	w0, #0x1                   	// #1
  442420:	strb	w1, [x3, #8]
  442424:	ret
  442428:	tbz	w2, #0, 44243c <_obstack_memory_used@@Base+0x24c>
  44242c:	ldr	x4, [x1, #88]
  442430:	add	x2, x0, #0x1
  442434:	cmp	x2, x4
  442438:	b.lt	4424d0 <_obstack_memory_used@@Base+0x2e0>  // b.tstop
  44243c:	mov	w1, #0x1                   	// #1
  442440:	mov	w0, #0x1                   	// #1
  442444:	strb	w1, [x3, #8]
  442448:	ret
  44244c:	cmp	w4, #0x2d
  442450:	b.ne	44243c <_obstack_memory_used@@Base+0x24c>  // b.any
  442454:	mov	w1, #0x16                  	// #22
  442458:	mov	w0, #0x1                   	// #1
  44245c:	strb	w1, [x3, #8]
  442460:	ret
  442464:	mov	w1, #0x2                   	// #2
  442468:	mov	w0, #0x0                   	// #0
  44246c:	strb	w1, [x3, #8]
  442470:	ret
  442474:	ldr	x1, [x1, #88]
  442478:	add	x4, x0, #0x1
  44247c:	cmp	x4, x1
  442480:	b.ge	4424a8 <_obstack_memory_used@@Base+0x2b8>  // b.tcont
  442484:	add	x0, x5, x0
  442488:	ldrb	w0, [x0, #1]
  44248c:	strb	w0, [x3]
  442490:	cmp	w0, #0x3a
  442494:	b.eq	44250c <_obstack_memory_used@@Base+0x31c>  // b.none
  442498:	cmp	w0, #0x3d
  44249c:	b.eq	4424fc <_obstack_memory_used@@Base+0x30c>  // b.none
  4424a0:	cmp	w0, #0x2e
  4424a4:	b.eq	4424ec <_obstack_memory_used@@Base+0x2fc>  // b.none
  4424a8:	mov	w1, #0x1                   	// #1
  4424ac:	mov	w2, #0x5b                  	// #91
  4424b0:	mov	w0, #0x1                   	// #1
  4424b4:	strb	w2, [x3]
  4424b8:	strb	w1, [x3, #8]
  4424bc:	ret
  4424c0:	mov	w1, #0x15                  	// #21
  4424c4:	mov	w0, #0x1                   	// #1
  4424c8:	strb	w1, [x3, #8]
  4424cc:	ret
  4424d0:	str	x2, [x1, #72]
  4424d4:	mov	w0, #0x1                   	// #1
  4424d8:	mov	w1, #0x1                   	// #1
  4424dc:	ldrb	w2, [x5, x2]
  4424e0:	strb	w2, [x3]
  4424e4:	strb	w1, [x3, #8]
  4424e8:	ret
  4424ec:	mov	w1, #0x1a                  	// #26
  4424f0:	mov	w0, #0x2                   	// #2
  4424f4:	strb	w1, [x3, #8]
  4424f8:	ret
  4424fc:	mov	w1, #0x1c                  	// #28
  442500:	mov	w0, #0x2                   	// #2
  442504:	strb	w1, [x3, #8]
  442508:	ret
  44250c:	tbz	w2, #2, 4424a8 <_obstack_memory_used@@Base+0x2b8>
  442510:	mov	w1, #0x1e                  	// #30
  442514:	mov	w0, #0x2                   	// #2
  442518:	strb	w1, [x3, #8]
  44251c:	ret
  442520:	ldrb	w2, [x1, #48]
  442524:	cmp	w2, #0x11
  442528:	b.eq	442534 <_obstack_memory_used@@Base+0x344>  // b.none
  44252c:	mov	w0, #0x0                   	// #0
  442530:	ret
  442534:	ldr	x2, [x1, #40]
  442538:	cmp	x0, x2
  44253c:	b.ne	44252c <_obstack_memory_used@@Base+0x33c>  // b.any
  442540:	ldrb	w0, [x1, #50]
  442544:	orr	w0, w0, #0x8
  442548:	strb	w0, [x1, #50]
  44254c:	mov	w0, #0x0                   	// #0
  442550:	ret
  442554:	nop
  442558:	stp	x29, x30, [sp, #-144]!
  44255c:	mov	x12, x0
  442560:	add	x9, x3, x3, lsl #1
  442564:	mov	x29, sp
  442568:	stp	x23, x24, [sp, #48]
  44256c:	ldr	x24, [x0, #152]
  442570:	stp	x21, x22, [sp, #32]
  442574:	stp	x25, x26, [sp, #64]
  442578:	mov	w26, w1
  44257c:	ldr	x0, [x24, #48]
  442580:	add	x22, x0, x9, lsl #3
  442584:	ldr	x0, [x22, #8]
  442588:	cmp	x0, #0x0
  44258c:	b.le	442748 <_obstack_memory_used@@Base+0x558>
  442590:	mov	x1, #0x1                   	// #1
  442594:	add	x23, x4, x4, lsl #2
  442598:	lsl	x1, x1, x2
  44259c:	str	x1, [sp, #120]
  4425a0:	mvn	w1, w1
  4425a4:	mov	x13, x3
  4425a8:	and	w1, w1, #0xffff
  4425ac:	str	w1, [sp, #132]
  4425b0:	lsl	x1, x23, #3
  4425b4:	mov	x25, x4
  4425b8:	and	w23, w26, #0x1
  4425bc:	stp	x19, x20, [sp, #16]
  4425c0:	mov	x19, #0x0                   	// #0
  4425c4:	stp	x27, x28, [sp, #80]
  4425c8:	mov	x27, x2
  4425cc:	str	x1, [sp, #136]
  4425d0:	and	w1, w26, #0x2
  4425d4:	str	w1, [sp, #128]
  4425d8:	b	4425f0 <_obstack_memory_used@@Base+0x400>
  4425dc:	cmp	w5, #0x4
  4425e0:	b.eq	44267c <_obstack_memory_used@@Base+0x48c>  // b.none
  4425e4:	add	x19, x19, #0x1
  4425e8:	cmp	x0, x19
  4425ec:	b.le	442740 <_obstack_memory_used@@Base+0x550>
  4425f0:	ldr	x5, [x22, #16]
  4425f4:	ldr	x7, [x24]
  4425f8:	ldr	x21, [x5, x19, lsl #3]
  4425fc:	lsl	x6, x21, #4
  442600:	add	x5, x7, x6
  442604:	ldrb	w5, [x5, #8]
  442608:	cmp	w5, #0x8
  44260c:	b.eq	44264c <_obstack_memory_used@@Base+0x45c>  // b.none
  442610:	cmp	w5, #0x9
  442614:	b.ne	4425dc <_obstack_memory_used@@Base+0x3ec>  // b.any
  442618:	ldr	w1, [sp, #128]
  44261c:	cbz	w1, 4425e4 <_obstack_memory_used@@Base+0x3f4>
  442620:	ldr	x1, [x7, x6]
  442624:	cmp	x1, x27
  442628:	b.ne	4425e4 <_obstack_memory_used@@Base+0x3f4>  // b.any
  44262c:	mov	w0, #0x0                   	// #0
  442630:	ldp	x19, x20, [sp, #16]
  442634:	ldp	x21, x22, [sp, #32]
  442638:	ldp	x23, x24, [sp, #48]
  44263c:	ldp	x25, x26, [sp, #64]
  442640:	ldp	x27, x28, [sp, #80]
  442644:	ldp	x29, x30, [sp], #144
  442648:	ret
  44264c:	cbz	w23, 4425e4 <_obstack_memory_used@@Base+0x3f4>
  442650:	ldr	x1, [x7, x6]
  442654:	cmp	x1, x27
  442658:	b.ne	4425e4 <_obstack_memory_used@@Base+0x3f4>  // b.any
  44265c:	mov	w0, #0xffffffff            	// #-1
  442660:	ldp	x19, x20, [sp, #16]
  442664:	ldp	x21, x22, [sp, #32]
  442668:	ldp	x23, x24, [sp, #48]
  44266c:	ldp	x25, x26, [sp, #64]
  442670:	ldp	x27, x28, [sp, #80]
  442674:	ldp	x29, x30, [sp], #144
  442678:	ret
  44267c:	cmn	x25, #0x1
  442680:	b.eq	4425e4 <_obstack_memory_used@@Base+0x3f4>  // b.none
  442684:	ldr	x0, [sp, #136]
  442688:	add	x28, x21, x21, lsl #1
  44268c:	ldr	x20, [x12, #216]
  442690:	lsl	x28, x28, #3
  442694:	add	x20, x20, x0
  442698:	ldr	x5, [x20]
  44269c:	mov	x4, x25
  4426a0:	mov	x2, x27
  4426a4:	mov	w1, w26
  4426a8:	mov	x0, x12
  4426ac:	cmp	x5, x21
  4426b0:	b.ne	442720 <_obstack_memory_used@@Base+0x530>  // b.any
  4426b4:	cmp	x27, #0x3f
  4426b8:	b.gt	4426cc <_obstack_memory_used@@Base+0x4dc>
  4426bc:	ldr	x5, [sp, #120]
  4426c0:	ldrh	w3, [x20, #34]
  4426c4:	tst	x3, x5
  4426c8:	b.eq	442720 <_obstack_memory_used@@Base+0x530>  // b.none
  4426cc:	ldr	x3, [x24, #40]
  4426d0:	add	x3, x3, x28
  4426d4:	ldr	x3, [x3, #16]
  4426d8:	ldr	x3, [x3]
  4426dc:	cmp	x13, x3
  4426e0:	b.eq	442760 <_obstack_memory_used@@Base+0x570>  // b.none
  4426e4:	stp	x12, x13, [sp, #104]
  4426e8:	bl	442558 <_obstack_memory_used@@Base+0x368>
  4426ec:	cmn	w0, #0x1
  4426f0:	ldp	x12, x13, [sp, #104]
  4426f4:	b.eq	44265c <_obstack_memory_used@@Base+0x46c>  // b.none
  4426f8:	cbnz	w0, 442704 <_obstack_memory_used@@Base+0x514>
  4426fc:	ldr	w0, [sp, #128]
  442700:	cbnz	w0, 44262c <_obstack_memory_used@@Base+0x43c>
  442704:	cmp	x27, #0x3f
  442708:	b.gt	442720 <_obstack_memory_used@@Base+0x530>
  44270c:	ldrh	w0, [x20, #34]
  442710:	ldr	w1, [sp, #132]
  442714:	and	w0, w1, w0
  442718:	strh	w0, [x20, #34]
  44271c:	nop
  442720:	ldrb	w0, [x20, #32]
  442724:	add	x20, x20, #0x28
  442728:	cbnz	w0, 442698 <_obstack_memory_used@@Base+0x4a8>
  44272c:	ldr	x0, [x22, #8]
  442730:	add	x19, x19, #0x1
  442734:	cmp	x0, x19
  442738:	b.gt	4425f0 <_obstack_memory_used@@Base+0x400>
  44273c:	nop
  442740:	ldp	x19, x20, [sp, #16]
  442744:	ldp	x27, x28, [sp, #80]
  442748:	asr	w0, w26, #1
  44274c:	ldp	x21, x22, [sp, #32]
  442750:	ldp	x23, x24, [sp, #48]
  442754:	ldp	x25, x26, [sp, #64]
  442758:	ldp	x29, x30, [sp], #144
  44275c:	ret
  442760:	sbfx	x0, x26, #0, #1
  442764:	ldp	x19, x20, [sp, #16]
  442768:	ldp	x21, x22, [sp, #32]
  44276c:	ldp	x23, x24, [sp, #48]
  442770:	ldp	x25, x26, [sp, #64]
  442774:	ldp	x27, x28, [sp, #80]
  442778:	ldp	x29, x30, [sp], #144
  44277c:	ret
  442780:	mov	x7, x0
  442784:	add	x1, x1, x1, lsl #2
  442788:	ldr	x0, [x0, #216]
  44278c:	mov	x6, x4
  442790:	add	x1, x0, x1, lsl #3
  442794:	ldr	x0, [x1, #16]
  442798:	cmp	x0, x4
  44279c:	b.gt	4427e4 <_obstack_memory_used@@Base+0x5f4>
  4427a0:	ldr	x4, [x1, #24]
  4427a4:	cmp	x4, x6
  4427a8:	b.lt	4427dc <_obstack_memory_used@@Base+0x5ec>  // b.tstop
  4427ac:	cmp	x0, x6
  4427b0:	cset	w1, eq  // eq = none
  4427b4:	cmp	x4, x6
  4427b8:	b.eq	4427cc <_obstack_memory_used@@Base+0x5dc>  // b.none
  4427bc:	cmp	x0, x6
  4427c0:	mov	w0, #0x0                   	// #0
  4427c4:	b.eq	4427d0 <_obstack_memory_used@@Base+0x5e0>  // b.none
  4427c8:	ret
  4427cc:	orr	w1, w1, #0x2
  4427d0:	mov	x4, x5
  4427d4:	mov	x0, x7
  4427d8:	b	442558 <_obstack_memory_used@@Base+0x368>
  4427dc:	mov	w0, #0x1                   	// #1
  4427e0:	ret
  4427e4:	mov	w0, #0xffffffff            	// #-1
  4427e8:	ret
  4427ec:	nop
  4427f0:	stp	x29, x30, [sp, #-48]!
  4427f4:	mov	x29, sp
  4427f8:	stp	x19, x20, [sp, #16]
  4427fc:	mov	x20, x2
  442800:	str	x21, [sp, #32]
  442804:	mov	x21, x1
  442808:	mov	x19, x0
  44280c:	ldr	x0, [x0, #8]
  442810:	cbnz	x0, 442808 <_obstack_memory_used@@Base+0x618>
  442814:	ldr	x0, [x19, #16]
  442818:	cbnz	x0, 442808 <_obstack_memory_used@@Base+0x618>
  44281c:	mov	x1, x19
  442820:	mov	x0, x20
  442824:	blr	x21
  442828:	cbnz	w0, 44285c <_obstack_memory_used@@Base+0x66c>
  44282c:	nop
  442830:	ldr	x3, [x19]
  442834:	cbz	x3, 44285c <_obstack_memory_used@@Base+0x66c>
  442838:	ldr	x0, [x3, #16]
  44283c:	cmp	x0, #0x0
  442840:	ccmp	x0, x19, #0x4, ne  // ne = any
  442844:	mov	x19, x3
  442848:	b.ne	442808 <_obstack_memory_used@@Base+0x618>  // b.any
  44284c:	mov	x1, x19
  442850:	mov	x0, x20
  442854:	blr	x21
  442858:	cbz	w0, 442830 <_obstack_memory_used@@Base+0x640>
  44285c:	ldp	x19, x20, [sp, #16]
  442860:	ldr	x21, [sp, #32]
  442864:	ldp	x29, x30, [sp], #48
  442868:	ret
  44286c:	nop
  442870:	stp	x29, x30, [sp, #-48]!
  442874:	mov	x29, sp
  442878:	stp	x19, x20, [sp, #16]
  44287c:	mov	x19, x0
  442880:	mov	x20, x2
  442884:	str	x21, [sp, #32]
  442888:	mov	x0, x20
  44288c:	mov	x21, x1
  442890:	mov	x1, x19
  442894:	blr	x21
  442898:	cbnz	w0, 4428bc <_obstack_memory_used@@Base+0x6cc>
  44289c:	nop
  4428a0:	ldr	x3, [x19, #8]
  4428a4:	cbz	x3, 4428cc <_obstack_memory_used@@Base+0x6dc>
  4428a8:	mov	x19, x3
  4428ac:	mov	x1, x19
  4428b0:	mov	x0, x20
  4428b4:	blr	x21
  4428b8:	cbz	w0, 4428a0 <_obstack_memory_used@@Base+0x6b0>
  4428bc:	ldp	x19, x20, [sp, #16]
  4428c0:	ldr	x21, [sp, #32]
  4428c4:	ldp	x29, x30, [sp], #48
  4428c8:	ret
  4428cc:	ldr	x4, [x19, #16]
  4428d0:	cmp	x4, #0x0
  4428d4:	ccmp	x4, x3, #0x4, ne  // ne = any
  4428d8:	b.ne	442900 <_obstack_memory_used@@Base+0x710>  // b.any
  4428dc:	nop
  4428e0:	ldr	x4, [x19]
  4428e4:	mov	x3, x19
  4428e8:	mov	x19, x4
  4428ec:	cbz	x4, 4428bc <_obstack_memory_used@@Base+0x6cc>
  4428f0:	ldr	x4, [x19, #16]
  4428f4:	cmp	x4, #0x0
  4428f8:	ccmp	x4, x3, #0x4, ne  // ne = any
  4428fc:	b.eq	4428e0 <_obstack_memory_used@@Base+0x6f0>  // b.none
  442900:	mov	x3, x4
  442904:	mov	x19, x3
  442908:	b	4428ac <_obstack_memory_used@@Base+0x6bc>
  44290c:	nop
  442910:	stp	x29, x30, [sp, #-32]!
  442914:	mov	x29, sp
  442918:	stp	x19, x20, [sp, #16]
  44291c:	mov	x19, x0
  442920:	ldr	w0, [x0, #144]
  442924:	mov	x20, x1
  442928:	cmp	w0, #0x1
  44292c:	b.le	44296c <_obstack_memory_used@@Base+0x77c>
  442930:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  442934:	cmp	x1, x0
  442938:	b.hi	4429a0 <_obstack_memory_used@@Base+0x7b0>  // b.pmore
  44293c:	ldr	x0, [x19, #16]
  442940:	lsl	x1, x1, #2
  442944:	bl	404530 <realloc@plt>
  442948:	mov	x1, x0
  44294c:	cbz	x0, 4429a0 <_obstack_memory_used@@Base+0x7b0>
  442950:	ldr	x0, [x19, #24]
  442954:	str	x1, [x19, #16]
  442958:	cbz	x0, 44296c <_obstack_memory_used@@Base+0x77c>
  44295c:	lsl	x1, x20, #3
  442960:	bl	404530 <realloc@plt>
  442964:	cbz	x0, 4429a0 <_obstack_memory_used@@Base+0x7b0>
  442968:	str	x0, [x19, #24]
  44296c:	ldrb	w0, [x19, #139]
  442970:	cbnz	w0, 442988 <_obstack_memory_used@@Base+0x798>
  442974:	str	x20, [x19, #64]
  442978:	mov	w0, #0x0                   	// #0
  44297c:	ldp	x19, x20, [sp, #16]
  442980:	ldp	x29, x30, [sp], #32
  442984:	ret
  442988:	ldr	x0, [x19, #8]
  44298c:	mov	x1, x20
  442990:	bl	404530 <realloc@plt>
  442994:	cbz	x0, 4429a0 <_obstack_memory_used@@Base+0x7b0>
  442998:	str	x0, [x19, #8]
  44299c:	b	442974 <_obstack_memory_used@@Base+0x784>
  4429a0:	mov	w0, #0xc                   	// #12
  4429a4:	ldp	x19, x20, [sp, #16]
  4429a8:	ldp	x29, x30, [sp], #32
  4429ac:	ret
  4429b0:	stp	x29, x30, [sp, #-32]!
  4429b4:	mov	x29, sp
  4429b8:	stp	x19, x20, [sp, #16]
  4429bc:	mov	x19, x0
  4429c0:	mov	x20, x1
  4429c4:	ldr	x0, [x0]
  4429c8:	ldp	x2, x1, [x19, #8]
  4429cc:	cmp	x0, x2
  4429d0:	b.eq	4429f0 <_obstack_memory_used@@Base+0x800>  // b.none
  4429d4:	add	x0, x2, #0x1
  4429d8:	str	x0, [x19, #8]
  4429dc:	mov	w0, #0x1                   	// #1
  4429e0:	str	x20, [x1, x2, lsl #3]
  4429e4:	ldp	x19, x20, [sp, #16]
  4429e8:	ldp	x29, x30, [sp], #32
  4429ec:	ret
  4429f0:	add	x2, x2, #0x1
  4429f4:	mov	x0, x1
  4429f8:	lsl	x1, x2, #1
  4429fc:	str	x1, [x19]
  442a00:	lsl	x1, x2, #4
  442a04:	bl	404530 <realloc@plt>
  442a08:	mov	x1, x0
  442a0c:	cbz	x0, 442a1c <_obstack_memory_used@@Base+0x82c>
  442a10:	str	x0, [x19, #16]
  442a14:	ldr	x2, [x19, #8]
  442a18:	b	4429d4 <_obstack_memory_used@@Base+0x7e4>
  442a1c:	mov	w0, #0x0                   	// #0
  442a20:	b	4429e4 <_obstack_memory_used@@Base+0x7f4>
  442a24:	nop
  442a28:	stp	x29, x30, [sp, #-48]!
  442a2c:	mov	x29, sp
  442a30:	ldr	x2, [x0]
  442a34:	stp	x19, x20, [sp, #16]
  442a38:	mov	x19, x0
  442a3c:	mov	x20, x1
  442a40:	cbz	x2, 442a6c <_obstack_memory_used@@Base+0x87c>
  442a44:	ldp	x1, x0, [x0, #8]
  442a48:	cbnz	x1, 442aa4 <_obstack_memory_used@@Base+0x8b4>
  442a4c:	str	x20, [x0]
  442a50:	mov	w0, #0x1                   	// #1
  442a54:	ldr	x1, [x19, #8]
  442a58:	add	x1, x1, #0x1
  442a5c:	str	x1, [x19, #8]
  442a60:	ldp	x19, x20, [sp, #16]
  442a64:	ldp	x29, x30, [sp], #48
  442a68:	ret
  442a6c:	str	x21, [sp, #32]
  442a70:	mov	x21, #0x1                   	// #1
  442a74:	stp	x21, x21, [x19]
  442a78:	mov	x0, #0x8                   	// #8
  442a7c:	bl	404310 <malloc@plt>
  442a80:	str	x0, [x19, #16]
  442a84:	mov	x1, x0
  442a88:	cbz	x0, 442b20 <_obstack_memory_used@@Base+0x930>
  442a8c:	mov	w0, w21
  442a90:	ldr	x21, [sp, #32]
  442a94:	str	x20, [x1]
  442a98:	ldp	x19, x20, [sp, #16]
  442a9c:	ldp	x29, x30, [sp], #48
  442aa0:	ret
  442aa4:	cmp	x2, x1
  442aa8:	b.eq	442b30 <_obstack_memory_used@@Base+0x940>  // b.none
  442aac:	ldr	x3, [x0]
  442ab0:	lsl	x2, x1, #3
  442ab4:	cmp	x3, x20
  442ab8:	b.le	442af4 <_obstack_memory_used@@Base+0x904>
  442abc:	cmp	x1, #0x0
  442ac0:	b.le	442adc <_obstack_memory_used@@Base+0x8ec>
  442ac4:	add	x2, x0, x2
  442ac8:	ldur	x1, [x2, #-8]
  442acc:	str	x1, [x2], #-8
  442ad0:	cmp	x2, x0
  442ad4:	b.ne	442ac8 <_obstack_memory_used@@Base+0x8d8>  // b.any
  442ad8:	mov	x2, #0x0                   	// #0
  442adc:	str	x20, [x0, x2]
  442ae0:	mov	w0, #0x1                   	// #1
  442ae4:	ldr	x1, [x19, #8]
  442ae8:	add	x1, x1, #0x1
  442aec:	str	x1, [x19, #8]
  442af0:	b	442a60 <_obstack_memory_used@@Base+0x870>
  442af4:	add	x1, x0, x2
  442af8:	ldur	x1, [x1, #-8]
  442afc:	cmp	x20, x1
  442b00:	b.ge	442adc <_obstack_memory_used@@Base+0x8ec>  // b.tcont
  442b04:	sub	x3, x0, #0x8
  442b08:	str	x1, [x0, x2]
  442b0c:	sub	x2, x2, #0x8
  442b10:	ldr	x1, [x3, x2]
  442b14:	cmp	x1, x20
  442b18:	b.gt	442b08 <_obstack_memory_used@@Base+0x918>
  442b1c:	b	442adc <_obstack_memory_used@@Base+0x8ec>
  442b20:	mov	w0, #0x0                   	// #0
  442b24:	ldr	x21, [sp, #32]
  442b28:	stp	xzr, xzr, [x19]
  442b2c:	b	442a60 <_obstack_memory_used@@Base+0x870>
  442b30:	lsl	x2, x1, #1
  442b34:	str	x2, [x19]
  442b38:	lsl	x1, x1, #4
  442b3c:	bl	404530 <realloc@plt>
  442b40:	cbz	x0, 442b50 <_obstack_memory_used@@Base+0x960>
  442b44:	str	x0, [x19, #16]
  442b48:	ldr	x1, [x19, #8]
  442b4c:	b	442aac <_obstack_memory_used@@Base+0x8bc>
  442b50:	mov	w0, #0x0                   	// #0
  442b54:	b	442a60 <_obstack_memory_used@@Base+0x870>
  442b58:	stp	x29, x30, [sp, #-64]!
  442b5c:	mov	x29, sp
  442b60:	stp	x19, x20, [sp, #16]
  442b64:	mov	x20, x1
  442b68:	ldr	x19, [x1, #16]
  442b6c:	str	x23, [sp, #48]
  442b70:	mov	x23, x1
  442b74:	stp	x21, x22, [sp, #32]
  442b78:	mov	x22, x2
  442b7c:	mov	x21, x0
  442b80:	lsl	x0, x19, #3
  442b84:	str	x2, [x23], #32
  442b88:	str	x19, [x1, #32]
  442b8c:	str	xzr, [x23, #8]
  442b90:	bl	404310 <malloc@plt>
  442b94:	str	x0, [x23, #16]
  442b98:	cbz	x0, 442be4 <_obstack_memory_used@@Base+0x9f4>
  442b9c:	cmp	x19, #0x0
  442ba0:	mov	x19, #0x0                   	// #0
  442ba4:	b.gt	442bb8 <_obstack_memory_used@@Base+0x9c8>
  442ba8:	b	442bfc <_obstack_memory_used@@Base+0xa0c>
  442bac:	ldr	x1, [x20, #16]
  442bb0:	cmp	x1, x19
  442bb4:	b.le	442bfc <_obstack_memory_used@@Base+0xa0c>
  442bb8:	ldr	x1, [x20, #24]
  442bbc:	ldr	x3, [x21]
  442bc0:	ldr	x1, [x1, x19, lsl #3]
  442bc4:	add	x19, x19, #0x1
  442bc8:	add	x3, x3, x1, lsl #4
  442bcc:	ldrb	w3, [x3, #8]
  442bd0:	tbnz	w3, #3, 442bac <_obstack_memory_used@@Base+0x9bc>
  442bd4:	mov	x0, x23
  442bd8:	bl	4429b0 <_obstack_memory_used@@Base+0x7c0>
  442bdc:	tst	w0, #0xff
  442be0:	b.ne	442bac <_obstack_memory_used@@Base+0x9bc>  // b.any
  442be4:	mov	w0, #0xc                   	// #12
  442be8:	ldp	x19, x20, [sp, #16]
  442bec:	ldp	x21, x22, [sp, #32]
  442bf0:	ldr	x23, [sp, #48]
  442bf4:	ldp	x29, x30, [sp], #64
  442bf8:	ret
  442bfc:	ldr	x19, [x21, #136]
  442c00:	ldr	x21, [x21, #64]
  442c04:	and	x22, x22, x19
  442c08:	add	x22, x22, x22, lsl #1
  442c0c:	lsl	x19, x22, #3
  442c10:	add	x22, x21, x19
  442c14:	ldr	x2, [x21, x19]
  442c18:	ldp	x0, x3, [x22, #8]
  442c1c:	add	x1, x2, #0x1
  442c20:	cmp	x0, x2
  442c24:	b.le	442c48 <_obstack_memory_used@@Base+0xa58>
  442c28:	str	x1, [x21, x19]
  442c2c:	mov	w0, #0x0                   	// #0
  442c30:	str	x20, [x3, x2, lsl #3]
  442c34:	ldp	x19, x20, [sp, #16]
  442c38:	ldp	x21, x22, [sp, #32]
  442c3c:	ldr	x23, [sp, #48]
  442c40:	ldp	x29, x30, [sp], #64
  442c44:	ret
  442c48:	mov	x0, x3
  442c4c:	lsl	x23, x1, #1
  442c50:	lsl	x1, x1, #4
  442c54:	bl	404530 <realloc@plt>
  442c58:	mov	x3, x0
  442c5c:	cbz	x0, 442be4 <_obstack_memory_used@@Base+0x9f4>
  442c60:	ldr	x2, [x21, x19]
  442c64:	stp	x23, x0, [x22, #8]
  442c68:	add	x1, x2, #0x1
  442c6c:	b	442c28 <_obstack_memory_used@@Base+0xa38>
  442c70:	stp	x29, x30, [sp, #-48]!
  442c74:	mov	x29, sp
  442c78:	stp	x19, x20, [sp, #16]
  442c7c:	mov	x20, x0
  442c80:	ldr	x19, [x0, #48]
  442c84:	str	x21, [sp, #32]
  442c88:	ldr	x21, [x0, #64]
  442c8c:	ldr	x0, [x0, #88]
  442c90:	cmp	x21, x0
  442c94:	csel	x21, x21, x0, le
  442c98:	cmp	x21, x19
  442c9c:	b.le	442cf8 <_obstack_memory_used@@Base+0xb08>
  442ca0:	bl	404540 <__ctype_toupper_loc@plt>
  442ca4:	nop
  442ca8:	ldr	x1, [x20]
  442cac:	ldr	x3, [x20, #40]
  442cb0:	add	x1, x1, x19
  442cb4:	ldr	x2, [x20, #120]
  442cb8:	ldrb	w1, [x1, x3]
  442cbc:	cbnz	x2, 442cf0 <_obstack_memory_used@@Base+0xb00>
  442cc0:	ldr	x3, [x0]
  442cc4:	ldr	x2, [x20, #8]
  442cc8:	ldr	w1, [x3, x1, lsl #2]
  442ccc:	strb	w1, [x2, x19]
  442cd0:	add	x19, x19, #0x1
  442cd4:	cmp	x21, x19
  442cd8:	b.ne	442ca8 <_obstack_memory_used@@Base+0xab8>  // b.any
  442cdc:	stp	x21, x21, [x20, #48]
  442ce0:	ldp	x19, x20, [sp, #16]
  442ce4:	ldr	x21, [sp, #32]
  442ce8:	ldp	x29, x30, [sp], #48
  442cec:	ret
  442cf0:	ldrb	w1, [x2, x1]
  442cf4:	b	442cc0 <_obstack_memory_used@@Base+0xad0>
  442cf8:	mov	x21, x19
  442cfc:	stp	x21, x21, [x20, #48]
  442d00:	ldp	x19, x20, [sp, #16]
  442d04:	ldr	x21, [sp, #32]
  442d08:	ldp	x29, x30, [sp], #48
  442d0c:	ret
  442d10:	stp	x29, x30, [sp, #-144]!
  442d14:	mov	x29, sp
  442d18:	stp	x19, x20, [sp, #16]
  442d1c:	mov	x19, x0
  442d20:	stp	x23, x24, [sp, #48]
  442d24:	ldr	x24, [x0, #64]
  442d28:	ldr	x0, [x0, #88]
  442d2c:	ldr	x20, [x19, #48]
  442d30:	cmp	x24, x0
  442d34:	csel	x24, x24, x0, le
  442d38:	cmp	x24, x20
  442d3c:	b.le	442ddc <_obstack_memory_used@@Base+0xbec>
  442d40:	stp	x21, x22, [sp, #32]
  442d44:	add	x22, x19, #0x20
  442d48:	mov	w21, #0xffffffff            	// #-1
  442d4c:	nop
  442d50:	ldr	x4, [x19, #120]
  442d54:	sub	x2, x24, x20
  442d58:	ldr	x23, [x19, #32]
  442d5c:	cbnz	x4, 442e38 <_obstack_memory_used@@Base+0xc48>
  442d60:	ldr	x0, [x19, #40]
  442d64:	ldr	x1, [x19]
  442d68:	add	x0, x20, x0
  442d6c:	add	x1, x1, x0
  442d70:	mov	x3, x22
  442d74:	add	x0, sp, #0x4c
  442d78:	bl	441e18 <argp_parse@@Base+0xdf30>
  442d7c:	sub	x1, x0, #0x1
  442d80:	cmn	x1, #0x3
  442d84:	b.hi	442df0 <_obstack_memory_used@@Base+0xc00>  // b.pmore
  442d88:	cmn	x0, #0x2
  442d8c:	b.eq	442eb4 <_obstack_memory_used@@Base+0xcc4>  // b.none
  442d90:	ldr	x1, [x19, #16]
  442d94:	add	x0, x20, x0
  442d98:	ldr	w3, [sp, #76]
  442d9c:	add	x4, x20, #0x1
  442da0:	lsl	x2, x20, #2
  442da4:	cmp	x4, x0
  442da8:	str	w3, [x1, x20, lsl #2]
  442dac:	b.ge	442e30 <_obstack_memory_used@@Base+0xc40>  // b.tcont
  442db0:	add	x3, x2, #0x4
  442db4:	add	x2, x1, x0, lsl #2
  442db8:	add	x1, x1, x3
  442dbc:	nop
  442dc0:	str	w21, [x1], #4
  442dc4:	cmp	x2, x1
  442dc8:	b.ne	442dc0 <_obstack_memory_used@@Base+0xbd0>  // b.any
  442dcc:	mov	x20, x0
  442dd0:	cmp	x20, x24
  442dd4:	b.lt	442d50 <_obstack_memory_used@@Base+0xb60>  // b.tstop
  442dd8:	ldp	x21, x22, [sp, #32]
  442ddc:	ldp	x23, x24, [sp, #48]
  442de0:	stp	x20, x20, [x19, #48]
  442de4:	ldp	x19, x20, [sp, #16]
  442de8:	ldp	x29, x30, [sp], #144
  442dec:	ret
  442df0:	ldr	x0, [x19]
  442df4:	ldr	x2, [x19, #40]
  442df8:	add	x0, x0, x20
  442dfc:	ldr	x1, [x19, #120]
  442e00:	ldrb	w3, [x0, x2]
  442e04:	str	w3, [sp, #76]
  442e08:	cbnz	x1, 442ee0 <_obstack_memory_used@@Base+0xcf0>
  442e0c:	ldr	x1, [x19, #16]
  442e10:	str	x23, [x19, #32]
  442e14:	add	x4, x20, #0x1
  442e18:	mov	x0, #0x1                   	// #1
  442e1c:	add	x0, x20, x0
  442e20:	lsl	x2, x20, #2
  442e24:	str	w3, [x1, x20, lsl #2]
  442e28:	cmp	x4, x0
  442e2c:	b.lt	442db0 <_obstack_memory_used@@Base+0xbc0>  // b.tstop
  442e30:	mov	x20, x4
  442e34:	b	442dd0 <_obstack_memory_used@@Base+0xbe0>
  442e38:	ldr	w0, [x19, #144]
  442e3c:	cmp	w0, #0x0
  442e40:	b.le	442eac <_obstack_memory_used@@Base+0xcbc>
  442e44:	cmp	x2, #0x0
  442e48:	b.le	442eac <_obstack_memory_used@@Base+0xcbc>
  442e4c:	mov	x1, #0x1                   	// #1
  442e50:	b	442e64 <_obstack_memory_used@@Base+0xc74>
  442e54:	cmp	x2, x1
  442e58:	b.eq	442eac <_obstack_memory_used@@Base+0xcbc>  // b.none
  442e5c:	ldr	x4, [x19, #120]
  442e60:	mov	x1, x7
  442e64:	ldr	x0, [x19]
  442e68:	add	x3, sp, #0x50
  442e6c:	add	x5, x3, x1
  442e70:	add	x7, x1, #0x1
  442e74:	ldr	x3, [x19, #40]
  442e78:	add	x0, x0, x20
  442e7c:	add	x0, x0, x1
  442e80:	add	x0, x0, x3
  442e84:	ldr	x3, [x19, #8]
  442e88:	ldurb	w6, [x0, #-1]
  442e8c:	add	x0, x3, x20
  442e90:	add	x0, x0, x1
  442e94:	ldrb	w3, [x4, x6]
  442e98:	sturb	w3, [x0, #-1]
  442e9c:	sturb	w3, [x5, #-1]
  442ea0:	ldr	w0, [x19, #144]
  442ea4:	cmp	w0, w1
  442ea8:	b.gt	442e54 <_obstack_memory_used@@Base+0xc64>
  442eac:	add	x1, sp, #0x50
  442eb0:	b	442d70 <_obstack_memory_used@@Base+0xb80>
  442eb4:	ldr	x1, [x19, #64]
  442eb8:	ldr	x0, [x19, #88]
  442ebc:	cmp	x1, x0
  442ec0:	b.ge	442df0 <_obstack_memory_used@@Base+0xc00>  // b.tcont
  442ec4:	ldp	x21, x22, [sp, #32]
  442ec8:	str	x23, [x19, #32]
  442ecc:	ldp	x23, x24, [sp, #48]
  442ed0:	stp	x20, x20, [x19, #48]
  442ed4:	ldp	x19, x20, [sp, #16]
  442ed8:	ldp	x29, x30, [sp], #144
  442edc:	ret
  442ee0:	and	x3, x3, #0xff
  442ee4:	ldrb	w3, [x1, x3]
  442ee8:	str	w3, [sp, #76]
  442eec:	b	442e0c <_obstack_memory_used@@Base+0xc1c>
  442ef0:	stp	x29, x30, [sp, #-192]!
  442ef4:	mov	x29, sp
  442ef8:	stp	x19, x20, [sp, #16]
  442efc:	mov	x19, x0
  442f00:	stp	x21, x22, [sp, #32]
  442f04:	ldrb	w1, [x0, #138]
  442f08:	ldr	x21, [x0, #64]
  442f0c:	ldr	x0, [x0, #88]
  442f10:	ldr	x20, [x19, #48]
  442f14:	cmp	x21, x0
  442f18:	csel	x21, x21, x0, le
  442f1c:	cbnz	w1, 442f28 <_obstack_memory_used@@Base+0xd38>
  442f20:	ldr	x0, [x19, #120]
  442f24:	cbz	x0, 443078 <_obstack_memory_used@@Base+0xe88>
  442f28:	ldr	x22, [x19, #56]
  442f2c:	cmp	x21, x20
  442f30:	b.le	443060 <_obstack_memory_used@@Base+0xe70>
  442f34:	stp	x23, x24, [sp, #48]
  442f38:	add	x24, x19, #0x20
  442f3c:	add	x0, sp, #0x74
  442f40:	stp	x25, x26, [sp, #64]
  442f44:	sub	x26, x21, x20
  442f48:	stp	x27, x28, [sp, #80]
  442f4c:	str	x0, [sp, #104]
  442f50:	ldr	x2, [x19, #120]
  442f54:	ldr	x0, [x19, #32]
  442f58:	str	x0, [sp, #120]
  442f5c:	cbnz	x2, 443258 <_obstack_memory_used@@Base+0x1068>
  442f60:	ldr	x0, [x19, #40]
  442f64:	ldr	x25, [x19]
  442f68:	add	x0, x22, x0
  442f6c:	add	x25, x25, x0
  442f70:	ldr	x0, [sp, #104]
  442f74:	mov	x3, x24
  442f78:	mov	x2, x26
  442f7c:	mov	x1, x25
  442f80:	bl	441e18 <argp_parse@@Base+0xdf30>
  442f84:	sub	x28, x0, #0x1
  442f88:	mov	x23, x0
  442f8c:	cmn	x28, #0x4
  442f90:	b.hi	4432ec <_obstack_memory_used@@Base+0x10fc>  // b.pmore
  442f94:	ldr	w27, [sp, #116]
  442f98:	mov	x26, x20
  442f9c:	mov	w0, w27
  442fa0:	bl	404a60 <towupper@plt>
  442fa4:	mov	w24, w0
  442fa8:	cmp	w27, w0
  442fac:	b.eq	4432c4 <_obstack_memory_used@@Base+0x10d4>  // b.none
  442fb0:	add	x3, sp, #0x80
  442fb4:	add	x2, sp, #0x78
  442fb8:	mov	x0, x3
  442fbc:	mov	w1, w24
  442fc0:	str	x3, [sp, #104]
  442fc4:	bl	404c20 <wcrtomb@plt>
  442fc8:	mov	x27, x0
  442fcc:	cmp	x23, x0
  442fd0:	ldr	x3, [sp, #104]
  442fd4:	b.ne	443388 <_obstack_memory_used@@Base+0x1198>  // b.any
  442fd8:	ldr	x0, [x19, #8]
  442fdc:	mov	x1, x3
  442fe0:	mov	x2, x23
  442fe4:	add	x0, x0, x20
  442fe8:	bl	403f70 <memcpy@plt>
  442fec:	ldrb	w0, [x19, #140]
  442ff0:	cbnz	w0, 443360 <_obstack_memory_used@@Base+0x1170>
  442ff4:	add	x0, x23, x22
  442ff8:	ldr	x1, [x19, #16]
  442ffc:	add	x20, x20, #0x1
  443000:	add	x23, x23, x26
  443004:	mov	x22, x0
  443008:	cmp	x20, x23
  44300c:	lsl	x0, x26, #2
  443010:	str	w24, [x1, x26, lsl #2]
  443014:	b.ge	4432dc <_obstack_memory_used@@Base+0x10ec>  // b.tcont
  443018:	add	x0, x0, #0x4
  44301c:	add	x2, x1, x23, lsl #2
  443020:	add	x0, x1, x0
  443024:	mov	w1, #0xffffffff            	// #-1
  443028:	str	w1, [x0], #4
  44302c:	cmp	x2, x0
  443030:	b.ne	443028 <_obstack_memory_used@@Base+0xe38>  // b.any
  443034:	mov	x20, x23
  443038:	ldp	x23, x24, [sp, #48]
  44303c:	ldp	x25, x26, [sp, #64]
  443040:	ldp	x27, x28, [sp, #80]
  443044:	b	442f2c <_obstack_memory_used@@Base+0xd3c>
  443048:	ldr	x0, [sp, #120]
  44304c:	ldp	x23, x24, [sp, #48]
  443050:	ldp	x25, x26, [sp, #64]
  443054:	ldp	x27, x28, [sp, #80]
  443058:	str	x0, [x19, #32]
  44305c:	nop
  443060:	mov	w0, #0x0                   	// #0
  443064:	stp	x20, x22, [x19, #48]
  443068:	ldp	x19, x20, [sp, #16]
  44306c:	ldp	x21, x22, [sp, #32]
  443070:	ldp	x29, x30, [sp], #192
  443074:	ret
  443078:	ldrb	w0, [x19, #140]
  44307c:	cbnz	w0, 442f28 <_obstack_memory_used@@Base+0xd38>
  443080:	cmp	x20, x21
  443084:	b.ge	443194 <_obstack_memory_used@@Base+0xfa4>  // b.tcont
  443088:	stp	x23, x24, [sp, #48]
  44308c:	add	x24, x19, #0x20
  443090:	mov	w23, #0xffffffff            	// #-1
  443094:	stp	x25, x26, [sp, #64]
  443098:	stp	x27, x28, [sp, #80]
  44309c:	nop
  4430a0:	mov	x25, x20
  4430a4:	ldr	x27, [x19]
  4430a8:	ldr	x22, [x19, #40]
  4430ac:	add	x0, x27, x22
  4430b0:	ldrb	w26, [x0, x20]
  4430b4:	tbnz	w26, #7, 4430c4 <_obstack_memory_used@@Base+0xed4>
  4430b8:	mov	x0, x24
  4430bc:	bl	404670 <mbsinit@plt>
  4430c0:	cbnz	w0, 4431c0 <_obstack_memory_used@@Base+0xfd0>
  4430c4:	ldr	x4, [x19, #32]
  4430c8:	add	x22, x22, x20
  4430cc:	sub	x26, x21, x20
  4430d0:	add	x1, x27, x22
  4430d4:	mov	x2, x26
  4430d8:	mov	x3, x24
  4430dc:	add	x0, sp, #0x74
  4430e0:	str	x4, [sp, #120]
  4430e4:	bl	441e18 <argp_parse@@Base+0xdf30>
  4430e8:	mov	x22, x0
  4430ec:	add	x0, sp, #0x74
  4430f0:	str	x0, [sp, #104]
  4430f4:	sub	x0, x22, #0x1
  4430f8:	cmn	x0, #0x4
  4430fc:	b.hi	4431e8 <_obstack_memory_used@@Base+0xff8>  // b.pmore
  443100:	ldr	w28, [sp, #116]
  443104:	mov	w0, w28
  443108:	bl	404a60 <towupper@plt>
  44310c:	mov	w27, w0
  443110:	cmp	w28, w0
  443114:	b.eq	4431a0 <_obstack_memory_used@@Base+0xfb0>  // b.none
  443118:	mov	w1, w0
  44311c:	add	x2, sp, #0x78
  443120:	add	x0, sp, #0x80
  443124:	bl	404c20 <wcrtomb@plt>
  443128:	cmp	x22, x0
  44312c:	b.ne	4432bc <_obstack_memory_used@@Base+0x10cc>  // b.any
  443130:	ldr	x0, [x19, #8]
  443134:	mov	x2, x22
  443138:	add	x1, sp, #0x80
  44313c:	add	x0, x0, x20
  443140:	bl	403f70 <memcpy@plt>
  443144:	ldr	x1, [x19, #16]
  443148:	add	x20, x20, #0x1
  44314c:	add	x22, x22, x25
  443150:	lsl	x0, x25, #2
  443154:	cmp	x20, x22
  443158:	str	w27, [x1, x25, lsl #2]
  44315c:	b.ge	443180 <_obstack_memory_used@@Base+0xf90>  // b.tcont
  443160:	add	x2, x0, #0x4
  443164:	add	x0, x1, x22, lsl #2
  443168:	add	x1, x1, x2
  44316c:	nop
  443170:	str	w23, [x1], #4
  443174:	cmp	x0, x1
  443178:	b.ne	443170 <_obstack_memory_used@@Base+0xf80>  // b.any
  44317c:	mov	x20, x22
  443180:	cmp	x20, x21
  443184:	b.lt	4430a0 <_obstack_memory_used@@Base+0xeb0>  // b.tstop
  443188:	ldp	x23, x24, [sp, #48]
  44318c:	ldp	x25, x26, [sp, #64]
  443190:	ldp	x27, x28, [sp, #80]
  443194:	mov	w0, #0x0                   	// #0
  443198:	stp	x20, x20, [x19, #48]
  44319c:	b	443068 <_obstack_memory_used@@Base+0xe78>
  4431a0:	ldp	x3, x0, [x19]
  4431a4:	mov	x2, x22
  4431a8:	ldr	x1, [x19, #40]
  4431ac:	add	x1, x20, x1
  4431b0:	add	x1, x3, x1
  4431b4:	add	x0, x0, x20
  4431b8:	bl	403f70 <memcpy@plt>
  4431bc:	b	443144 <_obstack_memory_used@@Base+0xf54>
  4431c0:	bl	404540 <__ctype_toupper_loc@plt>
  4431c4:	ldr	x0, [x0]
  4431c8:	ldr	x1, [x19, #8]
  4431cc:	ldr	w0, [x0, x26, lsl #2]
  4431d0:	strb	w0, [x1, x20]
  4431d4:	ldp	x1, x0, [x19, #8]
  4431d8:	ldrb	w1, [x1, x20]
  4431dc:	str	w1, [x0, x20, lsl #2]
  4431e0:	add	x20, x20, #0x1
  4431e4:	b	443180 <_obstack_memory_used@@Base+0xf90>
  4431e8:	cmn	x0, #0x3
  4431ec:	b.eq	443224 <_obstack_memory_used@@Base+0x1034>  // b.none
  4431f0:	ldp	x0, x1, [x19]
  4431f4:	cmn	x22, #0x1
  4431f8:	ldr	x2, [x19, #40]
  4431fc:	add	x0, x0, x20
  443200:	ldrb	w0, [x0, x2]
  443204:	strb	w0, [x1, x20]
  443208:	add	x20, x20, #0x1
  44320c:	ldr	x1, [x19, #16]
  443210:	str	w0, [x1, x25, lsl #2]
  443214:	b.ne	443180 <_obstack_memory_used@@Base+0xf90>  // b.any
  443218:	ldr	x0, [sp, #120]
  44321c:	str	x0, [x19, #32]
  443220:	b	443180 <_obstack_memory_used@@Base+0xf90>
  443224:	ldr	x1, [x19, #64]
  443228:	ldr	x0, [x19, #88]
  44322c:	cmp	x1, x0
  443230:	b.lt	443474 <_obstack_memory_used@@Base+0x1284>  // b.tstop
  443234:	ldp	x0, x1, [x19]
  443238:	ldr	x2, [x19, #40]
  44323c:	add	x0, x0, x20
  443240:	ldrb	w0, [x0, x2]
  443244:	strb	w0, [x1, x20]
  443248:	add	x20, x20, #0x1
  44324c:	ldr	x1, [x19, #16]
  443250:	str	w0, [x1, x25, lsl #2]
  443254:	b	443180 <_obstack_memory_used@@Base+0xf90>
  443258:	ldr	w7, [x19, #144]
  44325c:	cmp	w7, #0x0
  443260:	b.le	4434b8 <_obstack_memory_used@@Base+0x12c8>
  443264:	cmp	x26, #0x0
  443268:	b.le	4434b8 <_obstack_memory_used@@Base+0x12c8>
  44326c:	ldr	x1, [x19, #40]
  443270:	add	x3, sp, #0x80
  443274:	ldr	x6, [x19]
  443278:	add	x1, x22, x1
  44327c:	sub	x1, x1, #0x1
  443280:	mov	x0, #0x1                   	// #1
  443284:	add	x6, x6, x1
  443288:	b	443298 <_obstack_memory_used@@Base+0x10a8>
  44328c:	cmp	x26, x0
  443290:	mov	x0, x4
  443294:	b.eq	4432b4 <_obstack_memory_used@@Base+0x10c4>  // b.none
  443298:	ldrb	w5, [x6, x0]
  44329c:	add	x1, x3, x0
  4432a0:	cmp	w7, w0
  4432a4:	add	x4, x0, #0x1
  4432a8:	ldrb	w5, [x2, x5]
  4432ac:	sturb	w5, [x1, #-1]
  4432b0:	b.gt	44328c <_obstack_memory_used@@Base+0x109c>
  4432b4:	mov	x25, x3
  4432b8:	b	442f70 <_obstack_memory_used@@Base+0xd80>
  4432bc:	mov	x22, x20
  4432c0:	b	442f50 <_obstack_memory_used@@Base+0xd60>
  4432c4:	ldr	x0, [x19, #8]
  4432c8:	mov	x1, x25
  4432cc:	mov	x2, x23
  4432d0:	add	x0, x0, x20
  4432d4:	bl	403f70 <memcpy@plt>
  4432d8:	b	442fec <_obstack_memory_used@@Base+0xdfc>
  4432dc:	ldp	x23, x24, [sp, #48]
  4432e0:	ldp	x25, x26, [sp, #64]
  4432e4:	ldp	x27, x28, [sp, #80]
  4432e8:	b	442f2c <_obstack_memory_used@@Base+0xd3c>
  4432ec:	cmn	x28, #0x3
  4432f0:	b.ne	443304 <_obstack_memory_used@@Base+0x1114>  // b.any
  4432f4:	ldr	x1, [x19, #64]
  4432f8:	ldr	x0, [x19, #88]
  4432fc:	cmp	x1, x0
  443300:	b.lt	443048 <_obstack_memory_used@@Base+0xe58>  // b.tstop
  443304:	ldr	x0, [x19]
  443308:	ldr	x2, [x19, #40]
  44330c:	add	x0, x0, x22
  443310:	ldr	x1, [x19, #120]
  443314:	ldrb	w0, [x0, x2]
  443318:	cbnz	x1, 4434d0 <_obstack_memory_used@@Base+0x12e0>
  44331c:	ldr	x1, [x19, #8]
  443320:	mov	x2, x20
  443324:	strb	w0, [x1, x20]
  443328:	ldrb	w1, [x19, #140]
  44332c:	cbnz	w1, 4434c4 <_obstack_memory_used@@Base+0x12d4>
  443330:	ldr	x1, [x19, #16]
  443334:	add	x22, x22, #0x1
  443338:	add	x20, x20, #0x1
  44333c:	cmn	x23, #0x1
  443340:	str	w0, [x1, x2, lsl #2]
  443344:	b.ne	4432dc <_obstack_memory_used@@Base+0x10ec>  // b.any
  443348:	ldr	x0, [sp, #120]
  44334c:	ldp	x23, x24, [sp, #48]
  443350:	ldp	x25, x26, [sp, #64]
  443354:	ldp	x27, x28, [sp, #80]
  443358:	str	x0, [x19, #32]
  44335c:	b	442f2c <_obstack_memory_used@@Base+0xd3c>
  443360:	ldr	x1, [x19, #24]
  443364:	neg	x2, x22, lsl #3
  443368:	add	x2, x2, x20, lsl #3
  44336c:	add	x0, x23, x22
  443370:	add	x1, x1, x2
  443374:	str	x22, [x1, x22, lsl #3]
  443378:	add	x22, x22, #0x1
  44337c:	cmp	x0, x22
  443380:	b.ne	443374 <_obstack_memory_used@@Base+0x1184>  // b.any
  443384:	b	442ff8 <_obstack_memory_used@@Base+0xe08>
  443388:	cmn	x0, #0x1
  44338c:	b.eq	4432c4 <_obstack_memory_used@@Base+0x10d4>  // b.none
  443390:	add	x25, x0, x20
  443394:	ldr	x0, [x19, #64]
  443398:	cmp	x25, x0
  44339c:	b.hi	443048 <_obstack_memory_used@@Base+0xe58>  // b.pmore
  4433a0:	ldr	x1, [x19, #24]
  4433a4:	cbz	x1, 44348c <_obstack_memory_used@@Base+0x129c>
  4433a8:	ldrb	w0, [x19, #140]
  4433ac:	cbnz	w0, 4433d4 <_obstack_memory_used@@Base+0x11e4>
  4433b0:	cbz	x20, 4433cc <_obstack_memory_used@@Base+0x11dc>
  4433b4:	ldr	x1, [x19, #24]
  4433b8:	mov	x0, #0x0                   	// #0
  4433bc:	str	x0, [x1, x0, lsl #3]
  4433c0:	add	x0, x0, #0x1
  4433c4:	cmp	x0, x20
  4433c8:	b.ne	4433bc <_obstack_memory_used@@Base+0x11cc>  // b.any
  4433cc:	mov	w0, #0x1                   	// #1
  4433d0:	strb	w0, [x19, #140]
  4433d4:	ldr	x0, [x19, #8]
  4433d8:	mov	x1, x3
  4433dc:	mov	x2, x27
  4433e0:	add	x0, x0, x20
  4433e4:	bl	403f70 <memcpy@plt>
  4433e8:	ldp	x2, x1, [x19, #16]
  4433ec:	str	w24, [x2, x20, lsl #2]
  4433f0:	cmp	x27, #0x1
  4433f4:	mov	x0, #0x1                   	// #1
  4433f8:	mov	w4, #0xffffffff            	// #-1
  4433fc:	str	x22, [x1, x20, lsl #3]
  443400:	add	x2, x2, x20, lsl #2
  443404:	add	x1, x1, x20, lsl #3
  443408:	b.ls	44342c <_obstack_memory_used@@Base+0x123c>  // b.plast
  44340c:	cmp	x23, x0
  443410:	csel	x3, x28, x0, ls  // ls = plast
  443414:	add	x3, x3, x22
  443418:	str	x3, [x1, x0, lsl #3]
  44341c:	str	w4, [x2, x0, lsl #2]
  443420:	add	x0, x0, #0x1
  443424:	cmp	x0, x27
  443428:	b.ne	44340c <_obstack_memory_used@@Base+0x121c>  // b.any
  44342c:	ldp	x0, x1, [x19, #88]
  443430:	sub	x27, x27, x23
  443434:	add	x0, x27, x0
  443438:	str	x0, [x19, #88]
  44343c:	cmp	x22, x1
  443440:	b.ge	443450 <_obstack_memory_used@@Base+0x1260>  // b.tcont
  443444:	ldr	x1, [x19, #104]
  443448:	add	x27, x1, x27
  44344c:	str	x27, [x19, #104]
  443450:	ldr	x21, [x19, #64]
  443454:	mov	x20, x25
  443458:	add	x22, x23, x22
  44345c:	cmp	x21, x0
  443460:	csel	x21, x21, x0, le
  443464:	ldp	x23, x24, [sp, #48]
  443468:	ldp	x25, x26, [sp, #64]
  44346c:	ldp	x27, x28, [sp, #80]
  443470:	b	442f2c <_obstack_memory_used@@Base+0xd3c>
  443474:	ldr	x0, [sp, #120]
  443478:	ldp	x23, x24, [sp, #48]
  44347c:	ldp	x25, x26, [sp, #64]
  443480:	ldp	x27, x28, [sp, #80]
  443484:	str	x0, [x19, #32]
  443488:	b	443194 <_obstack_memory_used@@Base+0xfa4>
  44348c:	lsl	x0, x0, #3
  443490:	str	x3, [sp, #104]
  443494:	bl	404310 <malloc@plt>
  443498:	str	x0, [x19, #24]
  44349c:	ldr	x3, [sp, #104]
  4434a0:	cbnz	x0, 4433a8 <_obstack_memory_used@@Base+0x11b8>
  4434a4:	mov	w0, #0xc                   	// #12
  4434a8:	ldp	x23, x24, [sp, #48]
  4434ac:	ldp	x25, x26, [sp, #64]
  4434b0:	ldp	x27, x28, [sp, #80]
  4434b4:	b	443068 <_obstack_memory_used@@Base+0xe78>
  4434b8:	add	x3, sp, #0x80
  4434bc:	mov	x25, x3
  4434c0:	b	442f70 <_obstack_memory_used@@Base+0xd80>
  4434c4:	ldr	x1, [x19, #24]
  4434c8:	str	x22, [x1, x20, lsl #3]
  4434cc:	b	443330 <_obstack_memory_used@@Base+0x1140>
  4434d0:	and	x0, x0, #0xff
  4434d4:	ldrb	w0, [x1, x0]
  4434d8:	b	44331c <_obstack_memory_used@@Base+0x112c>
  4434dc:	nop
  4434e0:	stp	x29, x30, [sp, #-32]!
  4434e4:	mov	x3, #0xffffffffffffffe     	// #1152921504606846974
  4434e8:	mov	x29, sp
  4434ec:	ldr	x2, [x0, #64]
  4434f0:	stp	x19, x20, [sp, #16]
  4434f4:	cmp	x2, x3
  4434f8:	b.hi	44360c <_obstack_memory_used@@Base+0x141c>  // b.pmore
  4434fc:	ldr	x3, [x0, #88]
  443500:	lsl	x2, x2, #1
  443504:	sxtw	x1, w1
  443508:	mov	x19, x0
  44350c:	cmp	x2, x3
  443510:	csel	x2, x2, x3, le
  443514:	cmp	x2, x1
  443518:	csel	x1, x2, x1, ge  // ge = tcont
  44351c:	bl	442910 <_obstack_memory_used@@Base+0x720>
  443520:	mov	w20, w0
  443524:	cbnz	w0, 443574 <_obstack_memory_used@@Base+0x1384>
  443528:	ldr	x0, [x19, #184]
  44352c:	cbz	x0, 443548 <_obstack_memory_used@@Base+0x1358>
  443530:	ldr	x1, [x19, #64]
  443534:	add	x1, x1, #0x1
  443538:	lsl	x1, x1, #3
  44353c:	bl	404530 <realloc@plt>
  443540:	cbz	x0, 44360c <_obstack_memory_used@@Base+0x141c>
  443544:	str	x0, [x19, #184]
  443548:	ldrb	w0, [x19, #136]
  44354c:	ldr	w1, [x19, #144]
  443550:	cmp	w1, #0x1
  443554:	cbz	w0, 443584 <_obstack_memory_used@@Base+0x1394>
  443558:	mov	x0, x19
  44355c:	b.le	4435f8 <_obstack_memory_used@@Base+0x1408>
  443560:	ldp	x19, x20, [sp, #16]
  443564:	ldp	x29, x30, [sp], #32
  443568:	b	442ef0 <_obstack_memory_used@@Base+0xd00>
  44356c:	mov	x5, x1
  443570:	stp	x5, x5, [x19, #48]
  443574:	mov	w0, w20
  443578:	ldp	x19, x20, [sp, #16]
  44357c:	ldp	x29, x30, [sp], #32
  443580:	ret
  443584:	b.gt	4435e0 <_obstack_memory_used@@Base+0x13f0>
  443588:	ldr	x0, [x19, #120]
  44358c:	cbz	x0, 443574 <_obstack_memory_used@@Base+0x1384>
  443590:	ldr	x5, [x19, #64]
  443594:	ldr	x2, [x19, #88]
  443598:	ldr	x1, [x19, #48]
  44359c:	cmp	x5, x2
  4435a0:	csel	x5, x5, x2, le
  4435a4:	cmp	x5, x1
  4435a8:	b.gt	4435b4 <_obstack_memory_used@@Base+0x13c4>
  4435ac:	b	44356c <_obstack_memory_used@@Base+0x137c>
  4435b0:	ldr	x0, [x19, #120]
  4435b4:	ldp	x2, x3, [x19]
  4435b8:	ldr	x4, [x19, #40]
  4435bc:	add	x2, x2, x1
  4435c0:	ldrb	w2, [x2, x4]
  4435c4:	ldrb	w0, [x0, x2]
  4435c8:	strb	w0, [x3, x1]
  4435cc:	add	x1, x1, #0x1
  4435d0:	cmp	x5, x1
  4435d4:	b.ne	4435b0 <_obstack_memory_used@@Base+0x13c0>  // b.any
  4435d8:	stp	x5, x5, [x19, #48]
  4435dc:	b	443574 <_obstack_memory_used@@Base+0x1384>
  4435e0:	mov	x0, x19
  4435e4:	bl	442d10 <_obstack_memory_used@@Base+0xb20>
  4435e8:	mov	w0, w20
  4435ec:	ldp	x19, x20, [sp, #16]
  4435f0:	ldp	x29, x30, [sp], #32
  4435f4:	ret
  4435f8:	bl	442c70 <_obstack_memory_used@@Base+0xa80>
  4435fc:	mov	w0, w20
  443600:	ldp	x19, x20, [sp, #16]
  443604:	ldp	x29, x30, [sp], #32
  443608:	ret
  44360c:	mov	w20, #0xc                   	// #12
  443610:	mov	w0, w20
  443614:	ldp	x19, x20, [sp, #16]
  443618:	ldp	x29, x30, [sp], #32
  44361c:	ret
  443620:	stp	x29, x30, [sp, #-48]!
  443624:	mov	x29, sp
  443628:	stp	x19, x20, [sp, #16]
  44362c:	mov	x19, x0
  443630:	mov	x20, x1
  443634:	ldr	x0, [x0, #64]
  443638:	str	x21, [sp, #32]
  44363c:	ldr	x21, [x19, #192]
  443640:	cmp	x0, x1
  443644:	b.gt	443680 <_obstack_memory_used@@Base+0x1490>
  443648:	ldr	x1, [x19, #88]
  44364c:	cmp	x0, x1
  443650:	b.ge	443680 <_obstack_memory_used@@Base+0x1490>  // b.tcont
  443654:	add	w1, w20, #0x1
  443658:	mov	x0, x19
  44365c:	bl	4434e0 <_obstack_memory_used@@Base+0x12f0>
  443660:	cbnz	w0, 443670 <_obstack_memory_used@@Base+0x1480>
  443664:	cmp	x21, x20
  443668:	mov	w0, #0x0                   	// #0
  44366c:	b.lt	4436ac <_obstack_memory_used@@Base+0x14bc>  // b.tstop
  443670:	ldp	x19, x20, [sp, #16]
  443674:	ldr	x21, [sp, #32]
  443678:	ldp	x29, x30, [sp], #48
  44367c:	ret
  443680:	ldr	x0, [x19, #48]
  443684:	cmp	x0, x20
  443688:	b.gt	443664 <_obstack_memory_used@@Base+0x1474>
  44368c:	ldr	x1, [x19, #88]
  443690:	cmp	x0, x1
  443694:	b.ge	443664 <_obstack_memory_used@@Base+0x1474>  // b.tcont
  443698:	add	w1, w20, #0x1
  44369c:	mov	x0, x19
  4436a0:	bl	4434e0 <_obstack_memory_used@@Base+0x12f0>
  4436a4:	cbz	w0, 443664 <_obstack_memory_used@@Base+0x1474>
  4436a8:	b	443670 <_obstack_memory_used@@Base+0x1480>
  4436ac:	ldr	x0, [x19, #184]
  4436b0:	add	x3, x21, #0x1
  4436b4:	sub	x2, x20, x21
  4436b8:	mov	w1, #0x0                   	// #0
  4436bc:	lsl	x2, x2, #3
  4436c0:	add	x0, x0, x3, lsl #3
  4436c4:	bl	404410 <memset@plt>
  4436c8:	str	x20, [x19, #192]
  4436cc:	mov	w0, #0x0                   	// #0
  4436d0:	ldp	x19, x20, [sp, #16]
  4436d4:	ldr	x21, [sp, #32]
  4436d8:	ldp	x29, x30, [sp], #48
  4436dc:	ret
  4436e0:	stp	x29, x30, [sp, #-32]!
  4436e4:	mov	x29, sp
  4436e8:	str	x19, [sp, #16]
  4436ec:	mov	x19, x0
  4436f0:	ldr	x0, [x0]
  4436f4:	bl	4047b0 <free@plt>
  4436f8:	ldr	x0, [x19, #8]
  4436fc:	bl	4047b0 <free@plt>
  443700:	ldr	x0, [x19, #16]
  443704:	bl	4047b0 <free@plt>
  443708:	ldr	x0, [x19, #24]
  44370c:	bl	4047b0 <free@plt>
  443710:	mov	x0, x19
  443714:	ldr	x19, [sp, #16]
  443718:	ldp	x29, x30, [sp], #32
  44371c:	b	4047b0 <free@plt>
  443720:	ldr	w1, [x0, #8]
  443724:	and	w1, w1, #0x7ffff
  443728:	and	w1, w1, #0xfffc00ff
  44372c:	cmp	w1, #0x6
  443730:	b.eq	443740 <_obstack_memory_used@@Base+0x1550>  // b.none
  443734:	cmp	w1, #0x3
  443738:	b.eq	443748 <_obstack_memory_used@@Base+0x1558>  // b.none
  44373c:	ret
  443740:	ldr	x0, [x0]
  443744:	b	4436e0 <_obstack_memory_used@@Base+0x14f0>
  443748:	ldr	x0, [x0]
  44374c:	b	4047b0 <free@plt>
  443750:	stp	x29, x30, [sp, #-16]!
  443754:	add	x0, x1, #0x28
  443758:	mov	x29, sp
  44375c:	bl	443720 <_obstack_memory_used@@Base+0x1530>
  443760:	mov	w0, #0x0                   	// #0
  443764:	ldp	x29, x30, [sp], #16
  443768:	ret
  44376c:	nop
  443770:	stp	x29, x30, [sp, #-96]!
  443774:	mov	x29, sp
  443778:	stp	x21, x22, [sp, #32]
  44377c:	ldp	x21, x4, [x0, #8]
  443780:	stp	x19, x20, [sp, #16]
  443784:	mov	x19, x0
  443788:	stp	x23, x24, [sp, #48]
  44378c:	mov	x20, x2
  443790:	mov	x24, x1
  443794:	stp	x25, x26, [sp, #64]
  443798:	and	w25, w2, #0xff
  44379c:	cmp	x4, x21
  4437a0:	b.cs	44384c <_obstack_memory_used@@Base+0x165c>  // b.hs, b.nlast
  4437a4:	ldr	x22, [x0, #24]
  4437a8:	ldr	x21, [x0, #40]
  4437ac:	lsl	x3, x4, #4
  4437b0:	ldr	x5, [x19]
  4437b4:	and	w1, w20, #0xfffc00ff
  4437b8:	cmp	w25, #0x6
  4437bc:	add	x2, x5, x3
  4437c0:	cset	w0, eq  // eq = none
  4437c4:	str	x24, [x5, x3]
  4437c8:	cmp	w25, #0x5
  4437cc:	str	x20, [x2, #8]
  4437d0:	str	w1, [x2, #8]
  4437d4:	b.ne	4437e4 <_obstack_memory_used@@Base+0x15f4>  // b.any
  4437d8:	ldr	w0, [x19, #180]
  4437dc:	cmp	w0, #0x1
  4437e0:	cset	w0, gt
  4437e4:	ldrb	w1, [x2, #10]
  4437e8:	mov	x3, #0xffffffffffffffff    	// #-1
  4437ec:	bfi	w1, w0, #4, #1
  4437f0:	strb	w1, [x2, #10]
  4437f4:	str	x3, [x22, x4, lsl #3]
  4437f8:	ldr	x0, [x19, #16]
  4437fc:	add	x0, x0, x0, lsl #1
  443800:	add	x0, x21, x0, lsl #3
  443804:	stp	xzr, xzr, [x0]
  443808:	str	xzr, [x0, #16]
  44380c:	ldr	x0, [x19, #16]
  443810:	ldr	x1, [x19, #48]
  443814:	add	x0, x0, x0, lsl #1
  443818:	add	x0, x1, x0, lsl #3
  44381c:	stp	xzr, xzr, [x0]
  443820:	str	xzr, [x0, #16]
  443824:	ldr	x1, [x19, #16]
  443828:	mov	x0, x1
  44382c:	add	x1, x1, #0x1
  443830:	str	x1, [x19, #16]
  443834:	ldp	x19, x20, [sp, #16]
  443838:	ldp	x21, x22, [sp, #32]
  44383c:	ldp	x23, x24, [sp, #48]
  443840:	ldp	x25, x26, [sp, #64]
  443844:	ldp	x29, x30, [sp], #96
  443848:	ret
  44384c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  443850:	lsl	x23, x21, #1
  443854:	movk	x0, #0xaaa, lsl #48
  443858:	cmp	x0, x21, lsl #1
  44385c:	b.cc	4438f8 <_obstack_memory_used@@Base+0x1708>  // b.lo, b.ul, b.last
  443860:	ldr	x0, [x19]
  443864:	lsl	x1, x21, #5
  443868:	bl	404530 <realloc@plt>
  44386c:	mov	x1, x0
  443870:	cbz	x0, 4438f8 <_obstack_memory_used@@Base+0x1708>
  443874:	ldr	x0, [x19, #24]
  443878:	str	x27, [sp, #80]
  44387c:	str	x1, [x19]
  443880:	lsl	x26, x21, #4
  443884:	mov	x1, x26
  443888:	add	x21, x23, x21
  44388c:	bl	404530 <realloc@plt>
  443890:	mov	x22, x0
  443894:	ldr	x0, [x19, #32]
  443898:	mov	x1, x26
  44389c:	lsl	x21, x21, #4
  4438a0:	bl	404530 <realloc@plt>
  4438a4:	mov	x26, x0
  4438a8:	ldr	x0, [x19, #40]
  4438ac:	mov	x1, x21
  4438b0:	bl	404530 <realloc@plt>
  4438b4:	mov	x1, x21
  4438b8:	mov	x21, x0
  4438bc:	ldr	x0, [x19, #48]
  4438c0:	bl	404530 <realloc@plt>
  4438c4:	mov	x27, x0
  4438c8:	cmp	x22, #0x0
  4438cc:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  4438d0:	b.eq	443900 <_obstack_memory_used@@Base+0x1710>  // b.none
  4438d4:	cmp	x21, #0x0
  4438d8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4438dc:	b.eq	443900 <_obstack_memory_used@@Base+0x1710>  // b.none
  4438e0:	str	x23, [x19, #8]
  4438e4:	stp	x22, x26, [x19, #24]
  4438e8:	stp	x21, x0, [x19, #40]
  4438ec:	ldr	x4, [x19, #16]
  4438f0:	ldr	x27, [sp, #80]
  4438f4:	b	4437ac <_obstack_memory_used@@Base+0x15bc>
  4438f8:	mov	x0, #0xffffffffffffffff    	// #-1
  4438fc:	b	443834 <_obstack_memory_used@@Base+0x1644>
  443900:	mov	x0, x22
  443904:	bl	4047b0 <free@plt>
  443908:	mov	x0, x26
  44390c:	bl	4047b0 <free@plt>
  443910:	mov	x0, x21
  443914:	bl	4047b0 <free@plt>
  443918:	mov	x0, x27
  44391c:	bl	4047b0 <free@plt>
  443920:	mov	x0, #0xffffffffffffffff    	// #-1
  443924:	ldr	x27, [sp, #80]
  443928:	b	443834 <_obstack_memory_used@@Base+0x1644>
  44392c:	nop
  443930:	stp	x29, x30, [sp, #-48]!
  443934:	mov	x29, sp
  443938:	stp	x19, x20, [sp, #16]
  44393c:	mov	x20, x1
  443940:	mov	x19, x0
  443944:	stp	x21, x22, [sp, #32]
  443948:	lsl	x21, x1, #4
  44394c:	mov	w22, w2
  443950:	ldr	x1, [x0]
  443954:	add	x1, x1, x21
  443958:	ldp	x2, x3, [x1]
  44395c:	mov	x1, x2
  443960:	mov	x2, x3
  443964:	bl	443770 <_obstack_memory_used@@Base+0x1580>
  443968:	cmn	x0, #0x1
  44396c:	b.eq	4439b4 <_obstack_memory_used@@Base+0x17c4>  // b.none
  443970:	ldr	x3, [x19]
  443974:	and	w1, w22, #0x3ff
  443978:	add	x21, x3, x21
  44397c:	add	x3, x3, x0, lsl #4
  443980:	ldr	w4, [x3, #8]
  443984:	bfi	w4, w1, #8, #10
  443988:	str	w4, [x3, #8]
  44398c:	and	w4, w4, #0xfff800ff
  443990:	ldr	w2, [x21, #8]
  443994:	ldr	x5, [x19, #32]
  443998:	ubfx	x2, x2, #8, #10
  44399c:	orr	w2, w2, w1
  4439a0:	lsl	w2, w2, #8
  4439a4:	orr	w2, w2, #0x40000
  4439a8:	orr	w2, w2, w4
  4439ac:	str	w2, [x3, #8]
  4439b0:	str	x20, [x5, x0, lsl #3]
  4439b4:	ldp	x19, x20, [sp, #16]
  4439b8:	ldp	x21, x22, [sp, #32]
  4439bc:	ldp	x29, x30, [sp], #48
  4439c0:	ret
  4439c4:	nop
  4439c8:	stp	x29, x30, [sp, #-80]!
  4439cc:	mov	x29, sp
  4439d0:	stp	x19, x20, [sp, #16]
  4439d4:	mov	x20, x0
  4439d8:	mov	x19, x2
  4439dc:	stp	x21, x22, [sp, #32]
  4439e0:	mov	x21, x1
  4439e4:	stp	x23, x24, [sp, #48]
  4439e8:	mov	x24, x3
  4439ec:	mov	w23, w4
  4439f0:	stp	x25, x26, [sp, #64]
  4439f4:	mov	x22, x19
  4439f8:	ldr	x4, [x20]
  4439fc:	ldr	x0, [x20, #40]
  443a00:	add	x3, x4, x21, lsl #4
  443a04:	ldrb	w1, [x3, #8]
  443a08:	cmp	w1, #0x4
  443a0c:	b.eq	443b84 <_obstack_memory_used@@Base+0x1994>  // b.none
  443a10:	add	x25, x21, x21, lsl #1
  443a14:	lsl	x25, x25, #3
  443a18:	add	x2, x0, x25
  443a1c:	ldr	x1, [x2, #8]
  443a20:	cbz	x1, 443c38 <_obstack_memory_used@@Base+0x1a48>
  443a24:	ldr	x2, [x2, #16]
  443a28:	add	x22, x19, x19, lsl #1
  443a2c:	cmp	x1, #0x1
  443a30:	lsl	x22, x22, #3
  443a34:	add	x0, x0, x22
  443a38:	ldr	x26, [x2]
  443a3c:	b.eq	443b14 <_obstack_memory_used@@Base+0x1924>  // b.none
  443a40:	ldr	x3, [x20, #16]
  443a44:	sub	x1, x3, #0x1
  443a48:	add	x2, x4, x1, lsl #4
  443a4c:	ldrb	w5, [x2, #10]
  443a50:	str	xzr, [x0, #8]
  443a54:	tst	x5, #0x4
  443a58:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  443a5c:	b.le	443be4 <_obstack_memory_used@@Base+0x19f4>
  443a60:	add	x3, x4, x3, lsl #4
  443a64:	sub	x3, x3, x2
  443a68:	sub	x3, x3, #0x20
  443a6c:	ldr	x5, [x20, #32]
  443a70:	b	443a8c <_obstack_memory_used@@Base+0x189c>
  443a74:	add	x2, x2, x3
  443a78:	sub	x1, x1, #0x1
  443a7c:	ldrb	w4, [x2, #10]
  443a80:	tst	x4, #0x4
  443a84:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  443a88:	b.le	443be4 <_obstack_memory_used@@Base+0x19f4>
  443a8c:	ldr	x4, [x5, x1, lsl #3]
  443a90:	cmp	x4, x26
  443a94:	b.ne	443a74 <_obstack_memory_used@@Base+0x1884>  // b.any
  443a98:	ldr	w4, [x2, #8]
  443a9c:	ubfx	x4, x4, #8, #10
  443aa0:	cmp	w23, w4
  443aa4:	b.ne	443a74 <_obstack_memory_used@@Base+0x1884>  // b.any
  443aa8:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  443aac:	tst	w0, #0xff
  443ab0:	b.eq	443af8 <_obstack_memory_used@@Base+0x1908>  // b.none
  443ab4:	ldr	x1, [x20, #40]
  443ab8:	mov	w2, w23
  443abc:	mov	x0, x20
  443ac0:	add	x25, x1, x25
  443ac4:	ldr	x1, [x25, #16]
  443ac8:	ldr	x21, [x1, #8]
  443acc:	mov	x1, x21
  443ad0:	bl	443930 <_obstack_memory_used@@Base+0x1740>
  443ad4:	mov	x19, x0
  443ad8:	cmn	x0, #0x1
  443adc:	b.eq	443af8 <_obstack_memory_used@@Base+0x1908>  // b.none
  443ae0:	mov	x1, x0
  443ae4:	ldr	x0, [x20, #40]
  443ae8:	add	x0, x0, x22
  443aec:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  443af0:	tst	w0, #0xff
  443af4:	b.ne	4439f4 <_obstack_memory_used@@Base+0x1804>  // b.any
  443af8:	mov	w0, #0xc                   	// #12
  443afc:	ldp	x19, x20, [sp, #16]
  443b00:	ldp	x21, x22, [sp, #32]
  443b04:	ldp	x23, x24, [sp, #48]
  443b08:	ldp	x25, x26, [sp, #64]
  443b0c:	ldp	x29, x30, [sp], #80
  443b10:	ret
  443b14:	str	xzr, [x0, #8]
  443b18:	cmp	x21, x24
  443b1c:	ccmp	x21, x19, #0x4, eq  // eq = none
  443b20:	b.ne	443c4c <_obstack_memory_used@@Base+0x1a5c>  // b.any
  443b24:	ldr	w2, [x3, #8]
  443b28:	mov	x1, x26
  443b2c:	mov	x0, x20
  443b30:	ubfx	x2, x2, #8, #10
  443b34:	orr	w23, w23, w2
  443b38:	mov	w2, w23
  443b3c:	bl	443930 <_obstack_memory_used@@Base+0x1740>
  443b40:	mov	x19, x0
  443b44:	cmn	x0, #0x1
  443b48:	b.eq	443af8 <_obstack_memory_used@@Base+0x1908>  // b.none
  443b4c:	mov	x1, x0
  443b50:	ldr	x0, [x20, #40]
  443b54:	add	x0, x0, x22
  443b58:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  443b5c:	tst	w0, #0xff
  443b60:	b.eq	443af8 <_obstack_memory_used@@Base+0x1908>  // b.none
  443b64:	ldr	x4, [x20]
  443b68:	mov	x21, x26
  443b6c:	mov	x22, x19
  443b70:	ldr	x0, [x20, #40]
  443b74:	add	x3, x4, x21, lsl #4
  443b78:	ldrb	w1, [x3, #8]
  443b7c:	cmp	w1, #0x4
  443b80:	b.ne	443a10 <_obstack_memory_used@@Base+0x1820>  // b.any
  443b84:	add	x19, x19, x19, lsl #1
  443b88:	lsl	x26, x21, #3
  443b8c:	ldr	x3, [x20, #24]
  443b90:	lsl	x25, x19, #3
  443b94:	add	x1, x0, x25
  443b98:	mov	w2, w23
  443b9c:	mov	x0, x20
  443ba0:	ldr	x21, [x3, x21, lsl #3]
  443ba4:	str	xzr, [x1, #8]
  443ba8:	mov	x1, x21
  443bac:	bl	443930 <_obstack_memory_used@@Base+0x1740>
  443bb0:	mov	x19, x0
  443bb4:	cmn	x0, #0x1
  443bb8:	b.eq	443af8 <_obstack_memory_used@@Base+0x1908>  // b.none
  443bbc:	ldr	x2, [x20, #24]
  443bc0:	mov	x1, x0
  443bc4:	ldr	x0, [x20, #40]
  443bc8:	ldr	x3, [x2, x26]
  443bcc:	str	x3, [x2, x22, lsl #3]
  443bd0:	add	x0, x0, x25
  443bd4:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  443bd8:	tst	w0, #0xff
  443bdc:	b.ne	4439f4 <_obstack_memory_used@@Base+0x1804>  // b.any
  443be0:	b	443af8 <_obstack_memory_used@@Base+0x1908>
  443be4:	mov	w2, w23
  443be8:	mov	x1, x26
  443bec:	mov	x0, x20
  443bf0:	bl	443930 <_obstack_memory_used@@Base+0x1740>
  443bf4:	mov	x19, x0
  443bf8:	cmn	x0, #0x1
  443bfc:	b.eq	443af8 <_obstack_memory_used@@Base+0x1908>  // b.none
  443c00:	ldr	x0, [x20, #40]
  443c04:	mov	x1, x19
  443c08:	add	x0, x0, x22
  443c0c:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  443c10:	tst	w0, #0xff
  443c14:	b.eq	443af8 <_obstack_memory_used@@Base+0x1908>  // b.none
  443c18:	mov	x2, x19
  443c1c:	mov	x1, x26
  443c20:	mov	w4, w23
  443c24:	mov	x3, x24
  443c28:	mov	x0, x20
  443c2c:	bl	4439c8 <_obstack_memory_used@@Base+0x17d8>
  443c30:	cbz	w0, 443ab4 <_obstack_memory_used@@Base+0x18c4>
  443c34:	b	443afc <_obstack_memory_used@@Base+0x190c>
  443c38:	ldr	x1, [x20, #24]
  443c3c:	mov	w0, #0x0                   	// #0
  443c40:	ldr	x2, [x1, x21, lsl #3]
  443c44:	str	x2, [x1, x19, lsl #3]
  443c48:	b	443afc <_obstack_memory_used@@Base+0x190c>
  443c4c:	mov	x1, x26
  443c50:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  443c54:	tst	w0, #0xff
  443c58:	mov	w0, #0x0                   	// #0
  443c5c:	b.ne	443afc <_obstack_memory_used@@Base+0x190c>  // b.any
  443c60:	b	443af8 <_obstack_memory_used@@Base+0x1908>
  443c64:	nop
  443c68:	stp	x29, x30, [sp, #-32]!
  443c6c:	mov	x29, sp
  443c70:	str	x19, [sp, #16]
  443c74:	mov	x19, x0
  443c78:	ldr	x0, [x0, #48]
  443c7c:	bl	4047b0 <free@plt>
  443c80:	ldr	x0, [x19, #72]
  443c84:	bl	4047b0 <free@plt>
  443c88:	ldr	x0, [x19, #80]
  443c8c:	add	x1, x19, #0x8
  443c90:	cmp	x0, x1
  443c94:	b.eq	443ca8 <_obstack_memory_used@@Base+0x1ab8>  // b.none
  443c98:	ldr	x0, [x0, #16]
  443c9c:	bl	4047b0 <free@plt>
  443ca0:	ldr	x0, [x19, #80]
  443ca4:	bl	4047b0 <free@plt>
  443ca8:	ldr	x0, [x19, #24]
  443cac:	bl	4047b0 <free@plt>
  443cb0:	ldr	x0, [x19, #96]
  443cb4:	bl	4047b0 <free@plt>
  443cb8:	ldr	x0, [x19, #88]
  443cbc:	bl	4047b0 <free@plt>
  443cc0:	mov	x0, x19
  443cc4:	ldr	x19, [sp, #16]
  443cc8:	ldp	x29, x30, [sp], #32
  443ccc:	b	4047b0 <free@plt>
  443cd0:	stp	x29, x30, [sp, #-32]!
  443cd4:	mov	x29, sp
  443cd8:	str	x19, [sp, #16]
  443cdc:	mov	x19, x0
  443ce0:	ldr	x0, [x0, #16]
  443ce4:	bl	4047b0 <free@plt>
  443ce8:	ldr	x0, [x19, #24]
  443cec:	bl	4047b0 <free@plt>
  443cf0:	ldrb	w0, [x19, #139]
  443cf4:	cbnz	w0, 443d04 <_obstack_memory_used@@Base+0x1b14>
  443cf8:	ldr	x19, [sp, #16]
  443cfc:	ldp	x29, x30, [sp], #32
  443d00:	ret
  443d04:	ldr	x0, [x19, #8]
  443d08:	ldr	x19, [sp, #16]
  443d0c:	ldp	x29, x30, [sp], #32
  443d10:	b	4047b0 <free@plt>
  443d14:	nop
  443d18:	stp	x29, x30, [sp, #-64]!
  443d1c:	mov	x29, sp
  443d20:	stp	x21, x22, [sp, #32]
  443d24:	mov	x21, x0
  443d28:	ldr	x0, [x0]
  443d2c:	stp	x19, x20, [sp, #16]
  443d30:	str	x23, [sp, #48]
  443d34:	cbz	x0, 443d64 <_obstack_memory_used@@Base+0x1b74>
  443d38:	ldr	x1, [x21, #16]
  443d3c:	cbz	x1, 443d64 <_obstack_memory_used@@Base+0x1b74>
  443d40:	mov	x19, #0x0                   	// #0
  443d44:	b	443d4c <_obstack_memory_used@@Base+0x1b5c>
  443d48:	ldr	x0, [x21]
  443d4c:	add	x0, x0, x19, lsl #4
  443d50:	bl	443720 <_obstack_memory_used@@Base+0x1530>
  443d54:	add	x19, x19, #0x1
  443d58:	ldr	x0, [x21, #16]
  443d5c:	cmp	x0, x19
  443d60:	b.hi	443d48 <_obstack_memory_used@@Base+0x1b58>  // b.pmore
  443d64:	ldr	x0, [x21, #24]
  443d68:	mov	x19, #0x0                   	// #0
  443d6c:	mov	x20, #0x0                   	// #0
  443d70:	bl	4047b0 <free@plt>
  443d74:	ldr	x0, [x21, #16]
  443d78:	cbz	x0, 443dd0 <_obstack_memory_used@@Base+0x1be0>
  443d7c:	nop
  443d80:	ldr	x0, [x21, #48]
  443d84:	add	x20, x20, #0x1
  443d88:	add	x1, x0, x19
  443d8c:	cbz	x0, 443d98 <_obstack_memory_used@@Base+0x1ba8>
  443d90:	ldr	x0, [x1, #16]
  443d94:	bl	4047b0 <free@plt>
  443d98:	ldr	x0, [x21, #56]
  443d9c:	add	x1, x0, x19
  443da0:	cbz	x0, 443dac <_obstack_memory_used@@Base+0x1bbc>
  443da4:	ldr	x0, [x1, #16]
  443da8:	bl	4047b0 <free@plt>
  443dac:	ldr	x0, [x21, #40]
  443db0:	add	x1, x0, x19
  443db4:	add	x19, x19, #0x18
  443db8:	cbz	x0, 443dc4 <_obstack_memory_used@@Base+0x1bd4>
  443dbc:	ldr	x0, [x1, #16]
  443dc0:	bl	4047b0 <free@plt>
  443dc4:	ldr	x0, [x21, #16]
  443dc8:	cmp	x0, x20
  443dcc:	b.hi	443d80 <_obstack_memory_used@@Base+0x1b90>  // b.pmore
  443dd0:	ldr	x0, [x21, #40]
  443dd4:	mov	x22, #0x0                   	// #0
  443dd8:	mov	x23, #0x0                   	// #0
  443ddc:	bl	4047b0 <free@plt>
  443de0:	ldr	x0, [x21, #48]
  443de4:	bl	4047b0 <free@plt>
  443de8:	ldr	x0, [x21, #56]
  443dec:	bl	4047b0 <free@plt>
  443df0:	ldr	x0, [x21]
  443df4:	bl	4047b0 <free@plt>
  443df8:	ldr	x0, [x21, #64]
  443dfc:	cbz	x0, 443e5c <_obstack_memory_used@@Base+0x1c6c>
  443e00:	ldr	x1, [x0, x22]
  443e04:	add	x20, x0, x22
  443e08:	mov	x19, #0x0                   	// #0
  443e0c:	cmp	x1, #0x0
  443e10:	b.le	443e34 <_obstack_memory_used@@Base+0x1c44>
  443e14:	nop
  443e18:	ldr	x1, [x20, #16]
  443e1c:	ldr	x0, [x1, x19, lsl #3]
  443e20:	add	x19, x19, #0x1
  443e24:	bl	443c68 <_obstack_memory_used@@Base+0x1a78>
  443e28:	ldr	x1, [x20]
  443e2c:	cmp	x1, x19
  443e30:	b.gt	443e18 <_obstack_memory_used@@Base+0x1c28>
  443e34:	ldr	x0, [x20, #16]
  443e38:	add	x23, x23, #0x1
  443e3c:	add	x22, x22, #0x18
  443e40:	bl	4047b0 <free@plt>
  443e44:	ldr	x0, [x21, #136]
  443e48:	cmp	x0, x23
  443e4c:	b.cc	443e58 <_obstack_memory_used@@Base+0x1c68>  // b.lo, b.ul, b.last
  443e50:	ldr	x0, [x21, #64]
  443e54:	b	443e00 <_obstack_memory_used@@Base+0x1c10>
  443e58:	ldr	x0, [x21, #64]
  443e5c:	bl	4047b0 <free@plt>
  443e60:	ldr	x0, [x21, #120]
  443e64:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  443e68:	add	x1, x1, #0x4a0
  443e6c:	cmp	x0, x1
  443e70:	b.eq	443e78 <_obstack_memory_used@@Base+0x1c88>  // b.none
  443e74:	bl	4047b0 <free@plt>
  443e78:	ldr	x0, [x21, #224]
  443e7c:	bl	4047b0 <free@plt>
  443e80:	mov	x0, x21
  443e84:	ldp	x19, x20, [sp, #16]
  443e88:	ldp	x21, x22, [sp, #32]
  443e8c:	ldr	x23, [sp, #48]
  443e90:	ldp	x29, x30, [sp], #64
  443e94:	b	4047b0 <free@plt>
  443e98:	stp	x29, x30, [sp, #-64]!
  443e9c:	mov	x29, sp
  443ea0:	str	x23, [sp, #48]
  443ea4:	mov	x23, x0
  443ea8:	ldr	x0, [x0, #232]
  443eac:	cmp	x0, #0x0
  443eb0:	b.le	443f40 <_obstack_memory_used@@Base+0x1d50>
  443eb4:	stp	x19, x20, [sp, #16]
  443eb8:	stp	x21, x22, [sp, #32]
  443ebc:	mov	x22, #0x0                   	// #0
  443ec0:	ldr	x0, [x23, #248]
  443ec4:	ldr	x21, [x0, x22, lsl #3]
  443ec8:	ldr	x0, [x21, #32]
  443ecc:	cmp	x0, #0x0
  443ed0:	b.le	443f00 <_obstack_memory_used@@Base+0x1d10>
  443ed4:	mov	x19, #0x0                   	// #0
  443ed8:	ldr	x1, [x21, #40]
  443edc:	ldr	x20, [x1, x19, lsl #3]
  443ee0:	add	x19, x19, #0x1
  443ee4:	ldr	x0, [x20, #32]
  443ee8:	bl	4047b0 <free@plt>
  443eec:	mov	x0, x20
  443ef0:	bl	4047b0 <free@plt>
  443ef4:	ldr	x1, [x21, #32]
  443ef8:	cmp	x1, x19
  443efc:	b.gt	443ed8 <_obstack_memory_used@@Base+0x1ce8>
  443f00:	ldr	x0, [x21, #40]
  443f04:	bl	4047b0 <free@plt>
  443f08:	ldr	x0, [x21, #16]
  443f0c:	cbz	x0, 443f20 <_obstack_memory_used@@Base+0x1d30>
  443f10:	ldr	x0, [x0, #16]
  443f14:	bl	4047b0 <free@plt>
  443f18:	ldr	x0, [x21, #16]
  443f1c:	bl	4047b0 <free@plt>
  443f20:	mov	x0, x21
  443f24:	bl	4047b0 <free@plt>
  443f28:	ldr	x0, [x23, #232]
  443f2c:	add	x22, x22, #0x1
  443f30:	cmp	x0, x22
  443f34:	b.gt	443ec0 <_obstack_memory_used@@Base+0x1cd0>
  443f38:	ldp	x19, x20, [sp, #16]
  443f3c:	ldp	x21, x22, [sp, #32]
  443f40:	str	xzr, [x23, #200]
  443f44:	str	xzr, [x23, #232]
  443f48:	ldr	x23, [sp, #48]
  443f4c:	ldp	x29, x30, [sp], #64
  443f50:	ret
  443f54:	nop
  443f58:	ldr	x3, [x0, #48]
  443f5c:	add	x1, x1, #0x1
  443f60:	cmp	x1, x3
  443f64:	b.ge	443f94 <_obstack_memory_used@@Base+0x1da4>  // b.tcont
  443f68:	ldr	x4, [x0, #16]
  443f6c:	mov	w0, #0x1                   	// #1
  443f70:	b	443f80 <_obstack_memory_used@@Base+0x1d90>
  443f74:	add	w0, w0, #0x1
  443f78:	cmp	x1, x3
  443f7c:	b.eq	443f90 <_obstack_memory_used@@Base+0x1da0>  // b.none
  443f80:	ldr	w2, [x4, x1, lsl #2]
  443f84:	add	x1, x1, #0x1
  443f88:	cmn	w2, #0x1
  443f8c:	b.eq	443f74 <_obstack_memory_used@@Base+0x1d84>  // b.none
  443f90:	ret
  443f94:	mov	w0, #0x1                   	// #1
  443f98:	ret
  443f9c:	nop
  443fa0:	cmp	x0, #0x0
  443fa4:	b.le	443ff0 <_obstack_memory_used@@Base+0x1e00>
  443fa8:	sub	x3, x0, #0x1
  443fac:	mov	x0, #0x0                   	// #0
  443fb0:	ldr	x5, [x1]
  443fb4:	b	443fcc <_obstack_memory_used@@Base+0x1ddc>
  443fb8:	lsr	x1, x1, #1
  443fbc:	ldr	x4, [x5, x1, lsl #3]
  443fc0:	cmp	x4, x2
  443fc4:	b.lt	443fe8 <_obstack_memory_used@@Base+0x1df8>  // b.tstop
  443fc8:	mov	x3, x1
  443fcc:	add	x1, x3, x0
  443fd0:	cmp	x3, x0
  443fd4:	b.hi	443fb8 <_obstack_memory_used@@Base+0x1dc8>  // b.pmore
  443fd8:	ldr	x1, [x5, x0, lsl #3]
  443fdc:	cmp	x2, x1
  443fe0:	csinc	x0, xzr, x0, ne  // ne = any
  443fe4:	ret
  443fe8:	add	x0, x1, #0x1
  443fec:	b	443fcc <_obstack_memory_used@@Base+0x1ddc>
  443ff0:	mov	x0, #0x0                   	// #0
  443ff4:	ret
  443ff8:	stp	x29, x30, [sp, #-64]!
  443ffc:	mov	x29, sp
  444000:	stp	x19, x20, [sp, #16]
  444004:	mov	x20, x1
  444008:	mov	x19, x2
  44400c:	stp	x21, x22, [sp, #32]
  444010:	mov	x21, x0
  444014:	mov	w22, w4
  444018:	stp	x23, x24, [sp, #48]
  44401c:	mov	x23, x3
  444020:	add	x24, x1, #0x10
  444024:	ldr	x0, [x20, #8]
  444028:	mov	x2, x19
  44402c:	mov	x1, x24
  444030:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  444034:	mov	x3, x0
  444038:	lsl	x2, x19, #4
  44403c:	mov	x1, x19
  444040:	mov	x0, x20
  444044:	cbnz	x3, 444108 <_obstack_memory_used@@Base+0x1f18>
  444048:	ldr	x3, [x21]
  44404c:	add	x4, x3, x2
  444050:	ldrb	w4, [x4, #8]
  444054:	cmp	w4, w22
  444058:	b.ne	444068 <_obstack_memory_used@@Base+0x1e78>  // b.any
  44405c:	ldr	x2, [x3, x2]
  444060:	cmp	x2, x23
  444064:	b.eq	4440d0 <_obstack_memory_used@@Base+0x1ee0>  // b.none
  444068:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  44406c:	add	x19, x19, x19, lsl #1
  444070:	tst	w0, #0xff
  444074:	b.eq	4440f0 <_obstack_memory_used@@Base+0x1f00>  // b.none
  444078:	ldr	x2, [x21, #40]
  44407c:	lsl	x19, x19, #3
  444080:	add	x2, x2, x19
  444084:	ldr	x0, [x2, #8]
  444088:	cmp	x0, #0x2
  44408c:	cbz	x0, 444108 <_obstack_memory_used@@Base+0x1f18>
  444090:	ldr	x2, [x2, #16]
  444094:	b.eq	4440a0 <_obstack_memory_used@@Base+0x1eb0>  // b.none
  444098:	ldr	x19, [x2]
  44409c:	b	444024 <_obstack_memory_used@@Base+0x1e34>
  4440a0:	ldr	x2, [x2, #8]
  4440a4:	mov	w4, w22
  4440a8:	mov	x3, x23
  4440ac:	mov	x1, x20
  4440b0:	mov	x0, x21
  4440b4:	bl	443ff8 <_obstack_memory_used@@Base+0x1e08>
  4440b8:	cbnz	w0, 4440f4 <_obstack_memory_used@@Base+0x1f04>
  4440bc:	ldr	x0, [x21, #40]
  4440c0:	add	x19, x0, x19
  4440c4:	ldr	x2, [x19, #16]
  4440c8:	ldr	x19, [x2]
  4440cc:	b	444024 <_obstack_memory_used@@Base+0x1e34>
  4440d0:	cmp	w22, #0x9
  4440d4:	b.ne	444108 <_obstack_memory_used@@Base+0x1f18>  // b.any
  4440d8:	mov	x1, x19
  4440dc:	mov	x0, x20
  4440e0:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  4440e4:	tst	w0, #0xff
  4440e8:	b.ne	444108 <_obstack_memory_used@@Base+0x1f18>  // b.any
  4440ec:	nop
  4440f0:	mov	w0, #0xc                   	// #12
  4440f4:	ldp	x19, x20, [sp, #16]
  4440f8:	ldp	x21, x22, [sp, #32]
  4440fc:	ldp	x23, x24, [sp, #48]
  444100:	ldp	x29, x30, [sp], #64
  444104:	ret
  444108:	mov	w0, #0x0                   	// #0
  44410c:	ldp	x19, x20, [sp, #16]
  444110:	ldp	x21, x22, [sp, #32]
  444114:	ldp	x23, x24, [sp, #48]
  444118:	ldp	x29, x30, [sp], #64
  44411c:	ret
  444120:	ldr	x3, [x0]
  444124:	cmp	x2, x3
  444128:	b.ge	444150 <_obstack_memory_used@@Base+0x1f60>  // b.tcont
  44412c:	ldr	x3, [x1]
  444130:	add	x4, x3, #0x8
  444134:	nop
  444138:	ldr	x1, [x4, x2, lsl #3]
  44413c:	str	x1, [x3, x2, lsl #3]
  444140:	add	x2, x2, #0x1
  444144:	ldr	x1, [x0]
  444148:	cmp	x2, x1
  44414c:	b.lt	444138 <_obstack_memory_used@@Base+0x1f48>  // b.tstop
  444150:	ret
  444154:	nop
  444158:	ldrb	w2, [x1, #48]
  44415c:	cmp	w2, #0x4
  444160:	b.eq	4441cc <_obstack_memory_used@@Base+0x1fdc>  // b.none
  444164:	cmp	w2, #0x11
  444168:	b.eq	444174 <_obstack_memory_used@@Base+0x1f84>  // b.none
  44416c:	mov	w0, #0x0                   	// #0
  444170:	ret
  444174:	ldr	x2, [x1, #8]
  444178:	cbz	x2, 44416c <_obstack_memory_used@@Base+0x1f7c>
  44417c:	ldrb	w3, [x2, #48]
  444180:	cmp	w3, #0x11
  444184:	b.ne	44416c <_obstack_memory_used@@Base+0x1f7c>  // b.any
  444188:	ldr	x3, [x2, #8]
  44418c:	ldr	x2, [x2, #40]
  444190:	str	x3, [x1, #8]
  444194:	cbz	x3, 44419c <_obstack_memory_used@@Base+0x1fac>
  444198:	str	x1, [x3]
  44419c:	ldr	x3, [x1, #40]
  4441a0:	cmp	x2, #0x3f
  4441a4:	ldr	x1, [x0, #224]
  4441a8:	ldr	x3, [x1, x3, lsl #3]
  4441ac:	str	x3, [x1, x2, lsl #3]
  4441b0:	b.gt	44416c <_obstack_memory_used@@Base+0x1f7c>
  4441b4:	ldr	x3, [x0, #160]
  4441b8:	mov	x1, #0x1                   	// #1
  4441bc:	lsl	x1, x1, x2
  4441c0:	bic	x1, x3, x1
  4441c4:	str	x1, [x0, #160]
  4441c8:	b	44416c <_obstack_memory_used@@Base+0x1f7c>
  4441cc:	ldr	x4, [x0, #224]
  4441d0:	cbz	x4, 44416c <_obstack_memory_used@@Base+0x1f7c>
  4441d4:	ldrsw	x5, [x1, #40]
  4441d8:	mov	w2, #0x1                   	// #1
  4441dc:	ldr	x3, [x0, #160]
  4441e0:	ldr	x4, [x4, x5, lsl #3]
  4441e4:	str	x4, [x1, #40]
  4441e8:	lsl	w1, w2, w4
  4441ec:	sxtw	x1, w1
  4441f0:	orr	x1, x3, x1
  4441f4:	str	x1, [x0, #160]
  4441f8:	mov	w0, #0x0                   	// #0
  4441fc:	ret
  444200:	ldrb	w0, [x1, #48]
  444204:	ldr	x2, [x1, #8]
  444208:	cmp	w0, #0xb
  44420c:	b.eq	44423c <_obstack_memory_used@@Base+0x204c>  // b.none
  444210:	cmp	w0, #0x10
  444214:	b.eq	444248 <_obstack_memory_used@@Base+0x2058>  // b.none
  444218:	cbz	x2, 444224 <_obstack_memory_used@@Base+0x2034>
  44421c:	ldr	x0, [x1, #32]
  444220:	str	x0, [x2, #32]
  444224:	ldr	x0, [x1, #16]
  444228:	cbz	x0, 444234 <_obstack_memory_used@@Base+0x2044>
  44422c:	ldr	x1, [x1, #32]
  444230:	str	x1, [x0, #32]
  444234:	mov	w0, #0x0                   	// #0
  444238:	ret
  44423c:	mov	w0, #0x0                   	// #0
  444240:	str	x1, [x2, #32]
  444244:	ret
  444248:	ldr	x0, [x1, #16]
  44424c:	ldr	x3, [x0, #24]
  444250:	str	x3, [x2, #32]
  444254:	ldr	x1, [x1, #32]
  444258:	str	x1, [x0, #32]
  44425c:	mov	w0, #0x0                   	// #0
  444260:	ret
  444264:	nop
  444268:	stp	x29, x30, [sp, #-64]!
  44426c:	mov	x10, x0
  444270:	mov	x15, x4
  444274:	mov	x29, sp
  444278:	ldr	x12, [x0, #200]
  44427c:	mov	x18, x5
  444280:	mov	x11, #0x0                   	// #0
  444284:	stp	x19, x20, [sp, #16]
  444288:	mov	x9, x12
  44428c:	mov	x20, x2
  444290:	mov	x19, x6
  444294:	stp	x21, x22, [sp, #32]
  444298:	mov	x21, x1
  44429c:	mov	x22, x3
  4442a0:	stp	x23, x24, [sp, #48]
  4442a4:	ldr	x23, [x0, #152]
  4442a8:	b	4442cc <_obstack_memory_used@@Base+0x20dc>
  4442ac:	asr	x7, x7, #1
  4442b0:	ldr	x0, [x10, #216]
  4442b4:	add	x8, x7, x7, lsl #2
  4442b8:	add	x8, x0, x8, lsl #3
  4442bc:	ldr	x0, [x8, #8]
  4442c0:	cmp	x0, x15
  4442c4:	b.lt	4443dc <_obstack_memory_used@@Base+0x21ec>  // b.tstop
  4442c8:	mov	x9, x7
  4442cc:	add	x7, x9, x11
  4442d0:	cmp	x9, x11
  4442d4:	b.gt	4442ac <_obstack_memory_used@@Base+0x20bc>
  4442d8:	cmp	x12, x11
  4442dc:	b.le	444404 <_obstack_memory_used@@Base+0x2214>
  4442e0:	ldr	x1, [x10, #216]
  4442e4:	add	x0, x11, x11, lsl #2
  4442e8:	add	x0, x1, x0, lsl #3
  4442ec:	ldr	x0, [x0, #8]
  4442f0:	cmp	x15, x0
  4442f4:	csinv	x11, x11, xzr, eq  // eq = none
  4442f8:	mov	x9, x12
  4442fc:	mov	x14, #0x0                   	// #0
  444300:	b	444324 <_obstack_memory_used@@Base+0x2134>
  444304:	asr	x7, x7, #1
  444308:	ldr	x0, [x10, #216]
  44430c:	add	x8, x7, x7, lsl #2
  444310:	add	x8, x0, x8, lsl #3
  444314:	ldr	x0, [x8, #8]
  444318:	cmp	x0, x19
  44431c:	b.lt	4443e4 <_obstack_memory_used@@Base+0x21f4>  // b.tstop
  444320:	mov	x9, x7
  444324:	add	x7, x9, x14
  444328:	cmp	x9, x14
  44432c:	b.gt	444304 <_obstack_memory_used@@Base+0x2114>
  444330:	cmp	x12, x14
  444334:	b.le	44440c <_obstack_memory_used@@Base+0x221c>
  444338:	ldr	x1, [x10, #216]
  44433c:	add	x0, x14, x14, lsl #2
  444340:	add	x0, x1, x0, lsl #3
  444344:	ldr	x0, [x0, #8]
  444348:	cmp	x19, x0
  44434c:	csinv	x14, x14, xzr, eq  // eq = none
  444350:	ldr	x0, [x21]
  444354:	cmp	x0, #0x0
  444358:	b.le	4443fc <_obstack_memory_used@@Base+0x220c>
  44435c:	mov	x24, #0x0                   	// #0
  444360:	ldr	x0, [x20]
  444364:	mov	x5, x11
  444368:	ldr	x7, [x10, #216]
  44436c:	mov	x4, x15
  444370:	ldr	x1, [x0, x24, lsl #3]
  444374:	mov	x3, x22
  444378:	ldr	x6, [x23]
  44437c:	mov	x0, x10
  444380:	add	x2, x1, x1, lsl #2
  444384:	ldr	x2, [x7, x2, lsl #3]
  444388:	lsl	x2, x2, #4
  44438c:	ldr	x8, [x6, x2]
  444390:	mov	x2, x8
  444394:	bl	442780 <_obstack_memory_used@@Base+0x590>
  444398:	mov	x2, x8
  44439c:	ldr	x1, [x20]
  4443a0:	mov	w8, w0
  4443a4:	mov	x5, x14
  4443a8:	mov	x4, x19
  4443ac:	mov	x3, x18
  4443b0:	mov	x0, x10
  4443b4:	ldr	x1, [x1, x24, lsl #3]
  4443b8:	bl	442780 <_obstack_memory_used@@Base+0x590>
  4443bc:	cmp	w8, w0
  4443c0:	b.eq	4443ec <_obstack_memory_used@@Base+0x21fc>  // b.none
  4443c4:	mov	w0, #0x1                   	// #1
  4443c8:	ldp	x19, x20, [sp, #16]
  4443cc:	ldp	x21, x22, [sp, #32]
  4443d0:	ldp	x23, x24, [sp, #48]
  4443d4:	ldp	x29, x30, [sp], #64
  4443d8:	ret
  4443dc:	add	x11, x7, #0x1
  4443e0:	b	4442cc <_obstack_memory_used@@Base+0x20dc>
  4443e4:	add	x14, x7, #0x1
  4443e8:	b	444324 <_obstack_memory_used@@Base+0x2134>
  4443ec:	ldr	x0, [x21]
  4443f0:	add	x24, x24, #0x1
  4443f4:	cmp	x24, x0
  4443f8:	b.lt	444360 <_obstack_memory_used@@Base+0x2170>  // b.tstop
  4443fc:	mov	w0, #0x0                   	// #0
  444400:	b	4443c8 <_obstack_memory_used@@Base+0x21d8>
  444404:	mov	x11, #0xffffffffffffffff    	// #-1
  444408:	b	4442f8 <_obstack_memory_used@@Base+0x2108>
  44440c:	mov	x14, #0xffffffffffffffff    	// #-1
  444410:	b	444350 <_obstack_memory_used@@Base+0x2160>
  444414:	nop
  444418:	cbz	x1, 4445ac <_obstack_memory_used@@Base+0x23bc>
  44441c:	stp	x29, x30, [sp, #-48]!
  444420:	mov	x29, sp
  444424:	stp	x19, x20, [sp, #16]
  444428:	ldr	x19, [x1, #8]
  44442c:	stp	x21, x22, [sp, #32]
  444430:	mov	x21, x1
  444434:	cbz	x19, 44451c <_obstack_memory_used@@Base+0x232c>
  444438:	ldp	x2, x1, [x0]
  44443c:	mov	x20, x0
  444440:	add	x0, x1, x19, lsl #1
  444444:	cmp	x2, x0
  444448:	b.lt	444564 <_obstack_memory_used@@Base+0x2374>  // b.tstop
  44444c:	cbz	x1, 444590 <_obstack_memory_used@@Base+0x23a0>
  444450:	subs	x2, x19, #0x1
  444454:	sub	x3, x1, #0x1
  444458:	add	x19, x1, x19, lsl #1
  44445c:	ccmp	x3, #0x0, #0x1, pl  // pl = nfrst
  444460:	b.lt	4444b0 <_obstack_memory_used@@Base+0x22c0>  // b.tstop
  444464:	ldr	x0, [x20, #16]
  444468:	ldr	x1, [x21, #16]
  44446c:	b	44448c <_obstack_memory_used@@Base+0x229c>
  444470:	b.ge	444530 <_obstack_memory_used@@Base+0x2340>  // b.tcont
  444474:	sub	x19, x19, #0x1
  444478:	sub	x2, x2, #0x1
  44447c:	str	x4, [x0, x19, lsl #3]
  444480:	cmp	x2, #0x0
  444484:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  444488:	b.lt	4444b0 <_obstack_memory_used@@Base+0x22c0>  // b.tstop
  44448c:	ldr	x5, [x0, x3, lsl #3]
  444490:	ldr	x4, [x1, x2, lsl #3]
  444494:	cmp	x5, x4
  444498:	b.ne	444470 <_obstack_memory_used@@Base+0x2280>  // b.any
  44449c:	sub	x2, x2, #0x1
  4444a0:	sub	x3, x3, #0x1
  4444a4:	cmp	x2, #0x0
  4444a8:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  4444ac:	b.ge	44448c <_obstack_memory_used@@Base+0x229c>  // b.tcont
  4444b0:	tbnz	x2, #63, 4444d0 <_obstack_memory_used@@Base+0x22e0>
  4444b4:	ldr	x0, [x20, #16]
  4444b8:	add	x2, x2, #0x1
  4444bc:	ldr	x1, [x21, #16]
  4444c0:	sub	x19, x19, x2
  4444c4:	lsl	x2, x2, #3
  4444c8:	add	x0, x0, x19, lsl #3
  4444cc:	bl	403f70 <memcpy@plt>
  4444d0:	ldr	x3, [x20, #8]
  4444d4:	ldr	x2, [x21, #8]
  4444d8:	add	x2, x3, x2, lsl #1
  4444dc:	sub	x5, x2, #0x1
  4444e0:	subs	x2, x2, x19
  4444e4:	b.eq	44451c <_obstack_memory_used@@Base+0x232c>  // b.none
  4444e8:	ldr	x0, [x20, #16]
  4444ec:	sub	x1, x3, #0x1
  4444f0:	add	x3, x3, x2
  4444f4:	str	x3, [x20, #8]
  4444f8:	ldr	x4, [x0, x5, lsl #3]
  4444fc:	add	x6, x1, x2
  444500:	ldr	x3, [x0, x1, lsl #3]
  444504:	cmp	x4, x3
  444508:	b.le	444538 <_obstack_memory_used@@Base+0x2348>
  44450c:	str	x4, [x0, x6, lsl #3]
  444510:	sub	x5, x5, #0x1
  444514:	subs	x2, x2, #0x1
  444518:	b.ne	4444f8 <_obstack_memory_used@@Base+0x2308>  // b.any
  44451c:	mov	w0, #0x0                   	// #0
  444520:	ldp	x19, x20, [sp, #16]
  444524:	ldp	x21, x22, [sp, #32]
  444528:	ldp	x29, x30, [sp], #48
  44452c:	ret
  444530:	sub	x3, x3, #0x1
  444534:	b	444480 <_obstack_memory_used@@Base+0x2290>
  444538:	str	x3, [x0, x6, lsl #3]
  44453c:	subs	x1, x1, #0x1
  444540:	b.pl	4444f8 <_obstack_memory_used@@Base+0x2308>  // b.nfrst
  444544:	add	x1, x0, x19, lsl #3
  444548:	lsl	x2, x2, #3
  44454c:	bl	403f70 <memcpy@plt>
  444550:	mov	w0, #0x0                   	// #0
  444554:	ldp	x19, x20, [sp, #16]
  444558:	ldp	x21, x22, [sp, #32]
  44455c:	ldp	x29, x30, [sp], #48
  444560:	ret
  444564:	ldr	x0, [x20, #16]
  444568:	add	x19, x19, x2
  44456c:	lsl	x22, x19, #1
  444570:	lsl	x1, x19, #4
  444574:	bl	404530 <realloc@plt>
  444578:	cbz	x0, 4445b4 <_obstack_memory_used@@Base+0x23c4>
  44457c:	ldr	x1, [x20, #8]
  444580:	ldr	x19, [x21, #8]
  444584:	str	x22, [x20]
  444588:	str	x0, [x20, #16]
  44458c:	cbnz	x1, 444450 <_obstack_memory_used@@Base+0x2260>
  444590:	ldr	x1, [x21, #16]
  444594:	str	x19, [x20, #8]
  444598:	ldr	x0, [x20, #16]
  44459c:	ldr	x2, [x21, #8]
  4445a0:	lsl	x2, x2, #3
  4445a4:	bl	403f70 <memcpy@plt>
  4445a8:	b	44451c <_obstack_memory_used@@Base+0x232c>
  4445ac:	mov	w0, #0x0                   	// #0
  4445b0:	ret
  4445b4:	mov	w0, #0xc                   	// #12
  4445b8:	b	444520 <_obstack_memory_used@@Base+0x2330>
  4445bc:	nop
  4445c0:	stp	x29, x30, [sp, #-144]!
  4445c4:	mov	x29, sp
  4445c8:	stp	x19, x20, [sp, #16]
  4445cc:	add	x20, x2, x2, lsl #1
  4445d0:	mov	x19, x1
  4445d4:	stp	x23, x24, [sp, #48]
  4445d8:	lsl	x20, x20, #3
  4445dc:	and	w24, w3, #0xff
  4445e0:	ldr	x23, [x1, #40]
  4445e4:	stp	x21, x22, [sp, #32]
  4445e8:	mov	x22, x0
  4445ec:	add	x23, x23, x20
  4445f0:	mov	x21, x2
  4445f4:	ldr	x0, [x23, #8]
  4445f8:	add	x0, x0, #0x1
  4445fc:	stp	x0, xzr, [sp, #96]
  444600:	lsl	x0, x0, #3
  444604:	bl	404310 <malloc@plt>
  444608:	str	x0, [sp, #112]
  44460c:	cbz	x0, 4447fc <_obstack_memory_used@@Base+0x260c>
  444610:	ldr	x2, [x19]
  444614:	stp	x25, x26, [sp, #64]
  444618:	lsl	x25, x21, #4
  44461c:	ldr	x0, [x19, #48]
  444620:	add	x1, x2, x25
  444624:	mov	x3, #0xffffffffffffffff    	// #-1
  444628:	add	x0, x0, x20
  44462c:	ldr	w4, [x1, #8]
  444630:	str	x3, [x0, #8]
  444634:	tst	w4, #0x3ff00
  444638:	b.ne	444784 <_obstack_memory_used@@Base+0x2594>  // b.any
  44463c:	ldrb	w0, [x1, #8]
  444640:	tbz	w0, #3, 4447c8 <_obstack_memory_used@@Base+0x25d8>
  444644:	ldr	x1, [x19, #40]
  444648:	add	x0, x1, x20
  44464c:	ldr	x2, [x0, #8]
  444650:	cmp	x2, #0x0
  444654:	b.le	4447c8 <_obstack_memory_used@@Base+0x25d8>
  444658:	mov	w23, #0x0                   	// #0
  44465c:	mov	x26, #0x0                   	// #0
  444660:	str	x27, [sp, #80]
  444664:	nop
  444668:	ldr	x0, [x0, #16]
  44466c:	add	x27, sp, #0x78
  444670:	ldr	x3, [x19, #48]
  444674:	ldr	x2, [x0, x26, lsl #3]
  444678:	add	x25, x2, x2, lsl #1
  44467c:	lsl	x25, x25, #3
  444680:	add	x3, x3, x25
  444684:	ldr	x0, [x3, #8]
  444688:	cmn	x0, #0x1
  44468c:	b.eq	44477c <_obstack_memory_used@@Base+0x258c>  // b.none
  444690:	cbz	x0, 444748 <_obstack_memory_used@@Base+0x2558>
  444694:	ldp	x0, x1, [x3]
  444698:	stp	x0, x1, [sp, #120]
  44469c:	ldr	x0, [x3, #16]
  4446a0:	str	x0, [sp, #136]
  4446a4:	mov	x1, x27
  4446a8:	add	x0, sp, #0x60
  4446ac:	bl	444418 <_obstack_memory_used@@Base+0x2228>
  4446b0:	cbnz	w0, 444760 <_obstack_memory_used@@Base+0x2570>
  4446b4:	ldr	x0, [x19, #48]
  4446b8:	add	x25, x0, x25
  4446bc:	ldr	x0, [x25, #8]
  4446c0:	cbz	x0, 444738 <_obstack_memory_used@@Base+0x2548>
  4446c4:	ldr	x1, [x19, #40]
  4446c8:	add	x0, x1, x20
  4446cc:	add	x26, x26, #0x1
  4446d0:	ldr	x2, [x0, #8]
  4446d4:	cmp	x2, x26
  4446d8:	b.gt	444668 <_obstack_memory_used@@Base+0x2478>
  4446dc:	mov	x1, x21
  4446e0:	add	x0, sp, #0x60
  4446e4:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  4446e8:	tst	w0, #0xff
  4446ec:	b.eq	44481c <_obstack_memory_used@@Base+0x262c>  // b.none
  4446f0:	ldr	x0, [x19, #48]
  4446f4:	eor	w24, w24, #0x1
  4446f8:	tst	w23, w24
  4446fc:	add	x1, x0, x20
  444700:	b.eq	44482c <_obstack_memory_used@@Base+0x263c>  // b.none
  444704:	ldr	x27, [sp, #80]
  444708:	str	xzr, [x1, #8]
  44470c:	ldp	x2, x3, [sp, #96]
  444710:	mov	w0, #0x0                   	// #0
  444714:	ldr	x1, [sp, #112]
  444718:	stp	x2, x3, [x22]
  44471c:	ldp	x25, x26, [sp, #64]
  444720:	str	x1, [x22, #16]
  444724:	ldp	x19, x20, [sp, #16]
  444728:	ldp	x21, x22, [sp, #32]
  44472c:	ldp	x23, x24, [sp, #48]
  444730:	ldp	x29, x30, [sp], #144
  444734:	ret
  444738:	ldr	x0, [sp, #136]
  44473c:	mov	w23, #0x1                   	// #1
  444740:	bl	4047b0 <free@plt>
  444744:	b	4446c4 <_obstack_memory_used@@Base+0x24d4>
  444748:	add	x27, sp, #0x78
  44474c:	mov	x1, x19
  444750:	mov	x0, x27
  444754:	mov	w3, #0x0                   	// #0
  444758:	bl	4445c0 <_obstack_memory_used@@Base+0x23d0>
  44475c:	cbz	w0, 4446a4 <_obstack_memory_used@@Base+0x24b4>
  444760:	ldp	x19, x20, [sp, #16]
  444764:	ldp	x21, x22, [sp, #32]
  444768:	ldp	x23, x24, [sp, #48]
  44476c:	ldp	x25, x26, [sp, #64]
  444770:	ldr	x27, [sp, #80]
  444774:	ldp	x29, x30, [sp], #144
  444778:	ret
  44477c:	mov	w23, #0x1                   	// #1
  444780:	b	4446c8 <_obstack_memory_used@@Base+0x24d8>
  444784:	ldr	x0, [x23, #8]
  444788:	cbz	x0, 4447c8 <_obstack_memory_used@@Base+0x25d8>
  44478c:	ldr	x0, [x23, #16]
  444790:	ldr	x0, [x0]
  444794:	add	x2, x2, x0, lsl #4
  444798:	ldrb	w0, [x2, #10]
  44479c:	tbnz	w0, #2, 44463c <_obstack_memory_used@@Base+0x244c>
  4447a0:	ubfx	x4, x4, #8, #10
  4447a4:	mov	x3, x21
  4447a8:	mov	x2, x21
  4447ac:	mov	x1, x21
  4447b0:	mov	x0, x19
  4447b4:	bl	4439c8 <_obstack_memory_used@@Base+0x17d8>
  4447b8:	cbnz	w0, 444814 <_obstack_memory_used@@Base+0x2624>
  4447bc:	ldr	x1, [x19]
  4447c0:	add	x1, x1, x25
  4447c4:	b	44463c <_obstack_memory_used@@Base+0x244c>
  4447c8:	mov	x1, x21
  4447cc:	add	x0, sp, #0x60
  4447d0:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  4447d4:	tst	w0, #0xff
  4447d8:	b.eq	4447f8 <_obstack_memory_used@@Base+0x2608>  // b.none
  4447dc:	ldr	x0, [x19, #48]
  4447e0:	add	x20, x0, x20
  4447e4:	ldp	x0, x1, [sp, #96]
  4447e8:	stp	x0, x1, [x20]
  4447ec:	ldr	x0, [sp, #112]
  4447f0:	str	x0, [x20, #16]
  4447f4:	b	44470c <_obstack_memory_used@@Base+0x251c>
  4447f8:	ldp	x25, x26, [sp, #64]
  4447fc:	mov	w0, #0xc                   	// #12
  444800:	ldp	x19, x20, [sp, #16]
  444804:	ldp	x21, x22, [sp, #32]
  444808:	ldp	x23, x24, [sp, #48]
  44480c:	ldp	x29, x30, [sp], #144
  444810:	ret
  444814:	ldp	x25, x26, [sp, #64]
  444818:	b	444724 <_obstack_memory_used@@Base+0x2534>
  44481c:	mov	w0, #0xc                   	// #12
  444820:	ldp	x25, x26, [sp, #64]
  444824:	ldr	x27, [sp, #80]
  444828:	b	444800 <_obstack_memory_used@@Base+0x2610>
  44482c:	ldr	x27, [sp, #80]
  444830:	b	4447e0 <_obstack_memory_used@@Base+0x25f0>
  444834:	nop
  444838:	stp	x29, x30, [sp, #-96]!
  44483c:	mov	x29, sp
  444840:	stp	x21, x22, [sp, #32]
  444844:	ldr	x21, [x1, #8]
  444848:	stp	x19, x20, [sp, #16]
  44484c:	mov	x20, x2
  444850:	mov	w19, w3
  444854:	stp	x23, x24, [sp, #48]
  444858:	mov	x24, x1
  44485c:	mov	x23, x0
  444860:	lsl	x0, x21, #3
  444864:	stp	x21, xzr, [sp, #72]
  444868:	bl	404310 <malloc@plt>
  44486c:	str	x0, [sp, #88]
  444870:	cbz	x0, 444978 <_obstack_memory_used@@Base+0x2788>
  444874:	cmp	x21, #0x0
  444878:	b.le	444914 <_obstack_memory_used@@Base+0x2724>
  44487c:	mov	x22, #0x0                   	// #0
  444880:	ldr	x1, [x24, #16]
  444884:	ldr	x0, [x23, #48]
  444888:	ldr	x2, [x1, x22, lsl #3]
  44488c:	add	x1, x2, x2, lsl #1
  444890:	add	x1, x0, x1, lsl #3
  444894:	ldr	x10, [x1, #8]
  444898:	cmp	x10, #0x0
  44489c:	b.le	444948 <_obstack_memory_used@@Base+0x2758>
  4448a0:	mov	x5, #0x0                   	// #0
  4448a4:	ldr	x9, [x23]
  4448a8:	ldr	x4, [x1, #16]
  4448ac:	b	4448b8 <_obstack_memory_used@@Base+0x26c8>
  4448b0:	cmp	x10, x5
  4448b4:	b.eq	444948 <_obstack_memory_used@@Base+0x2758>  // b.none
  4448b8:	ldr	x7, [x4, x5, lsl #3]
  4448bc:	add	x5, x5, #0x1
  4448c0:	lsl	x6, x7, #4
  4448c4:	add	x8, x9, x6
  4448c8:	ldrb	w8, [x8, #8]
  4448cc:	cmp	w19, w8
  4448d0:	b.ne	4448b0 <_obstack_memory_used@@Base+0x26c0>  // b.any
  4448d4:	ldr	x6, [x9, x6]
  4448d8:	cmp	x20, x6
  4448dc:	b.ne	4448b0 <_obstack_memory_used@@Base+0x26c0>  // b.any
  4448e0:	cmn	x7, #0x1
  4448e4:	b.eq	444948 <_obstack_memory_used@@Base+0x2758>  // b.none
  4448e8:	mov	w4, w19
  4448ec:	mov	x3, x20
  4448f0:	add	x1, sp, #0x48
  4448f4:	mov	x0, x23
  4448f8:	bl	443ff8 <_obstack_memory_used@@Base+0x1e08>
  4448fc:	mov	w21, w0
  444900:	cbnz	w0, 444958 <_obstack_memory_used@@Base+0x2768>
  444904:	ldr	x0, [x24, #8]
  444908:	add	x22, x22, #0x1
  44490c:	cmp	x0, x22
  444910:	b.gt	444880 <_obstack_memory_used@@Base+0x2690>
  444914:	ldr	x0, [x24, #16]
  444918:	mov	w21, #0x0                   	// #0
  44491c:	bl	4047b0 <free@plt>
  444920:	ldp	x0, x1, [sp, #72]
  444924:	stp	x0, x1, [x24]
  444928:	ldr	x0, [sp, #88]
  44492c:	str	x0, [x24, #16]
  444930:	mov	w0, w21
  444934:	ldp	x19, x20, [sp, #16]
  444938:	ldp	x21, x22, [sp, #32]
  44493c:	ldp	x23, x24, [sp, #48]
  444940:	ldp	x29, x30, [sp], #96
  444944:	ret
  444948:	add	x0, sp, #0x48
  44494c:	bl	444418 <_obstack_memory_used@@Base+0x2228>
  444950:	mov	w21, w0
  444954:	cbz	w0, 444904 <_obstack_memory_used@@Base+0x2714>
  444958:	ldr	x0, [sp, #88]
  44495c:	bl	4047b0 <free@plt>
  444960:	mov	w0, w21
  444964:	ldp	x19, x20, [sp, #16]
  444968:	ldp	x21, x22, [sp, #32]
  44496c:	ldp	x23, x24, [sp, #48]
  444970:	ldp	x29, x30, [sp], #96
  444974:	ret
  444978:	mov	w21, #0xc                   	// #12
  44497c:	mov	w0, w21
  444980:	ldp	x19, x20, [sp, #16]
  444984:	ldp	x21, x22, [sp, #32]
  444988:	ldp	x23, x24, [sp, #48]
  44498c:	ldp	x29, x30, [sp], #96
  444990:	ret
  444994:	nop
  444998:	ldr	x4, [x1, #8]
  44499c:	cbz	x4, 444b10 <_obstack_memory_used@@Base+0x2920>
  4449a0:	stp	x29, x30, [sp, #-48]!
  4449a4:	mov	x29, sp
  4449a8:	ldr	x8, [x2, #8]
  4449ac:	stp	x19, x20, [sp, #16]
  4449b0:	mov	x19, x0
  4449b4:	stp	x21, x22, [sp, #32]
  4449b8:	mov	w0, #0x0                   	// #0
  4449bc:	mov	x21, x2
  4449c0:	cbz	x8, 444ab4 <_obstack_memory_used@@Base+0x28c4>
  4449c4:	ldp	x22, x3, [x19]
  4449c8:	mov	x20, x1
  4449cc:	add	x1, x4, x8
  4449d0:	ldr	x0, [x19, #16]
  4449d4:	add	x2, x1, x3
  4449d8:	cmp	x2, x22
  4449dc:	b.gt	444b18 <_obstack_memory_used@@Base+0x2928>
  4449e0:	ldr	x10, [x20, #16]
  4449e4:	sub	x6, x4, #0x1
  4449e8:	ldr	x9, [x21, #16]
  4449ec:	sub	x7, x8, #0x1
  4449f0:	add	x4, x3, x4
  4449f4:	sub	x3, x3, #0x1
  4449f8:	add	x8, x4, x8
  4449fc:	ldr	x5, [x9, x7, lsl #3]
  444a00:	ldr	x4, [x10, x6, lsl #3]
  444a04:	nop
  444a08:	cmp	x4, x5
  444a0c:	b.eq	444a28 <_obstack_memory_used@@Base+0x2838>  // b.none
  444a10:	b.ge	444b00 <_obstack_memory_used@@Base+0x2910>  // b.tcont
  444a14:	subs	x7, x7, #0x1
  444a18:	b.mi	444a70 <_obstack_memory_used@@Base+0x2880>  // b.first
  444a1c:	ldr	x5, [x9, x7, lsl #3]
  444a20:	cmp	x4, x5
  444a24:	b.ne	444a10 <_obstack_memory_used@@Base+0x2820>  // b.any
  444a28:	tbz	x3, #63, 444a3c <_obstack_memory_used@@Base+0x284c>
  444a2c:	b	444a4c <_obstack_memory_used@@Base+0x285c>
  444a30:	sub	x3, x3, #0x1
  444a34:	cmn	x3, #0x1
  444a38:	b.eq	444a4c <_obstack_memory_used@@Base+0x285c>  // b.none
  444a3c:	ldr	x5, [x0, x3, lsl #3]
  444a40:	cmp	x5, x4
  444a44:	b.gt	444a30 <_obstack_memory_used@@Base+0x2840>
  444a48:	b.eq	444a54 <_obstack_memory_used@@Base+0x2864>  // b.none
  444a4c:	sub	x8, x8, #0x1
  444a50:	str	x4, [x0, x8, lsl #3]
  444a54:	subs	x6, x6, #0x1
  444a58:	b.mi	444a70 <_obstack_memory_used@@Base+0x2880>  // b.first
  444a5c:	subs	x7, x7, #0x1
  444a60:	b.mi	444a70 <_obstack_memory_used@@Base+0x2880>  // b.first
  444a64:	ldr	x4, [x10, x6, lsl #3]
  444a68:	ldr	x5, [x9, x7, lsl #3]
  444a6c:	b	444a20 <_obstack_memory_used@@Base+0x2830>
  444a70:	ldr	x1, [x19, #8]
  444a74:	ldr	x4, [x20, #8]
  444a78:	sub	x2, x1, #0x1
  444a7c:	ldr	x3, [x21, #8]
  444a80:	add	x4, x1, x4
  444a84:	add	x4, x4, x3
  444a88:	sub	x3, x4, x8
  444a8c:	sub	x4, x4, #0x1
  444a90:	add	x1, x1, x3
  444a94:	str	x1, [x19, #8]
  444a98:	cmp	x3, #0x0
  444a9c:	ccmp	x2, #0x0, #0x1, gt
  444aa0:	b.ge	444ad4 <_obstack_memory_used@@Base+0x28e4>  // b.tcont
  444aa4:	lsl	x2, x3, #3
  444aa8:	add	x1, x0, x8, lsl #3
  444aac:	bl	403f70 <memcpy@plt>
  444ab0:	mov	w0, #0x0                   	// #0
  444ab4:	ldp	x19, x20, [sp, #16]
  444ab8:	ldp	x21, x22, [sp, #32]
  444abc:	ldp	x29, x30, [sp], #48
  444ac0:	ret
  444ac4:	str	x1, [x0, x6, lsl #3]
  444ac8:	sub	x2, x2, #0x1
  444acc:	cmn	x2, #0x1
  444ad0:	b.eq	444aa4 <_obstack_memory_used@@Base+0x28b4>  // b.none
  444ad4:	ldr	x5, [x0, x4, lsl #3]
  444ad8:	add	x6, x2, x3
  444adc:	ldr	x1, [x0, x2, lsl #3]
  444ae0:	cmp	x5, x1
  444ae4:	b.le	444ac4 <_obstack_memory_used@@Base+0x28d4>
  444ae8:	str	x5, [x0, x6, lsl #3]
  444aec:	sub	x4, x4, #0x1
  444af0:	subs	x3, x3, #0x1
  444af4:	b.ne	444ad4 <_obstack_memory_used@@Base+0x28e4>  // b.any
  444af8:	mov	x2, #0x0                   	// #0
  444afc:	b	444aa8 <_obstack_memory_used@@Base+0x28b8>
  444b00:	subs	x6, x6, #0x1
  444b04:	b.mi	444a70 <_obstack_memory_used@@Base+0x2880>  // b.first
  444b08:	ldr	x4, [x10, x6, lsl #3]
  444b0c:	b	444a08 <_obstack_memory_used@@Base+0x2818>
  444b10:	mov	w0, #0x0                   	// #0
  444b14:	ret
  444b18:	add	x22, x1, x22
  444b1c:	lsl	x1, x22, #3
  444b20:	bl	404530 <realloc@plt>
  444b24:	cbz	x0, 444b40 <_obstack_memory_used@@Base+0x2950>
  444b28:	ldr	x4, [x20, #8]
  444b2c:	ldr	x8, [x21, #8]
  444b30:	str	x22, [x19]
  444b34:	str	x0, [x19, #16]
  444b38:	ldr	x3, [x19, #8]
  444b3c:	b	4449e0 <_obstack_memory_used@@Base+0x27f0>
  444b40:	mov	w0, #0xc                   	// #12
  444b44:	b	444ab4 <_obstack_memory_used@@Base+0x28c4>
  444b48:	stp	x29, x30, [sp, #-64]!
  444b4c:	mov	x29, sp
  444b50:	ldr	w5, [x1]
  444b54:	stp	x19, x20, [sp, #16]
  444b58:	mov	x20, x2
  444b5c:	mov	x19, x3
  444b60:	stp	x21, x22, [sp, #32]
  444b64:	cmp	w5, #0xf
  444b68:	mov	x21, x1
  444b6c:	mov	x22, x0
  444b70:	b.eq	444be8 <_obstack_memory_used@@Base+0x29f8>  // b.none
  444b74:	mov	x6, #0x8                   	// #8
  444b78:	mov	w0, #0x40                  	// #64
  444b7c:	add	w1, w5, #0x1
  444b80:	smaddl	x0, w5, w0, x6
  444b84:	ldr	x6, [x22]
  444b88:	sbfiz	x5, x5, #6, #32
  444b8c:	str	w1, [x21]
  444b90:	add	x1, x6, x5
  444b94:	add	x5, x5, #0x20
  444b98:	add	x0, x6, x0
  444b9c:	add	x5, x6, x5
  444ba0:	mov	x3, #0xffffffffffffffff    	// #-1
  444ba4:	stp	xzr, x20, [x1, #8]
  444ba8:	str	x19, [x1, #24]
  444bac:	ldp	x6, x7, [x4]
  444bb0:	stp	x6, x7, [x1, #48]
  444bb4:	ldrb	w2, [x5, #26]
  444bb8:	and	w2, w2, #0xfffffff3
  444bbc:	strb	w2, [x5, #26]
  444bc0:	stp	xzr, xzr, [x1, #32]
  444bc4:	str	x3, [x1, #64]
  444bc8:	cbz	x20, 444bd0 <_obstack_memory_used@@Base+0x29e0>
  444bcc:	str	x0, [x20]
  444bd0:	cbz	x19, 444bd8 <_obstack_memory_used@@Base+0x29e8>
  444bd4:	str	x0, [x19]
  444bd8:	ldp	x19, x20, [sp, #16]
  444bdc:	ldp	x21, x22, [sp, #32]
  444be0:	ldp	x29, x30, [sp], #64
  444be4:	ret
  444be8:	mov	x0, #0x3c8                 	// #968
  444bec:	str	x4, [sp, #56]
  444bf0:	bl	404310 <malloc@plt>
  444bf4:	mov	x6, x0
  444bf8:	cbz	x0, 444c1c <_obstack_memory_used@@Base+0x2a2c>
  444bfc:	ldr	x2, [x22]
  444c00:	mov	x0, #0x8                   	// #8
  444c04:	mov	w1, #0x1                   	// #1
  444c08:	mov	w5, #0x0                   	// #0
  444c0c:	str	x2, [x6]
  444c10:	str	x6, [x22]
  444c14:	ldr	x4, [sp, #56]
  444c18:	b	444b88 <_obstack_memory_used@@Base+0x2998>
  444c1c:	mov	x0, #0x0                   	// #0
  444c20:	b	444bd8 <_obstack_memory_used@@Base+0x29e8>
  444c24:	nop
  444c28:	stp	x29, x30, [sp, #-80]!
  444c2c:	mov	x29, sp
  444c30:	stp	x19, x20, [sp, #16]
  444c34:	mov	x19, x0
  444c38:	stp	x21, x22, [sp, #32]
  444c3c:	add	x21, x1, #0x70
  444c40:	add	x22, x1, #0x80
  444c44:	ldr	x20, [x0]
  444c48:	str	x23, [sp, #48]
  444c4c:	add	x23, sp, #0x48
  444c50:	b	444c5c <_obstack_memory_used@@Base+0x2a6c>
  444c54:	mov	x19, x0
  444c58:	add	x23, x20, #0x8
  444c5c:	add	x4, x19, #0x28
  444c60:	mov	x1, x22
  444c64:	mov	x0, x21
  444c68:	mov	x3, #0x0                   	// #0
  444c6c:	mov	x2, #0x0                   	// #0
  444c70:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  444c74:	str	x0, [x23]
  444c78:	cbz	x0, 444cc0 <_obstack_memory_used@@Base+0x2ad0>
  444c7c:	str	x20, [x0]
  444c80:	ldr	x20, [x23]
  444c84:	ldrb	w0, [x20, #50]
  444c88:	orr	w0, w0, #0x4
  444c8c:	strb	w0, [x20, #50]
  444c90:	ldr	x0, [x19, #8]
  444c94:	cbnz	x0, 444c54 <_obstack_memory_used@@Base+0x2a64>
  444c98:	ldr	x2, [x19, #16]
  444c9c:	cmp	x2, #0x0
  444ca0:	ccmp	x2, x0, #0x4, ne  // ne = any
  444ca4:	b.ne	444cd4 <_obstack_memory_used@@Base+0x2ae4>  // b.any
  444ca8:	ldr	x2, [x19]
  444cac:	mov	x0, x19
  444cb0:	ldr	x20, [x20]
  444cb4:	mov	x19, x2
  444cb8:	cbnz	x2, 444c98 <_obstack_memory_used@@Base+0x2aa8>
  444cbc:	ldr	x0, [sp, #72]
  444cc0:	ldp	x19, x20, [sp, #16]
  444cc4:	ldp	x21, x22, [sp, #32]
  444cc8:	ldr	x23, [sp, #48]
  444ccc:	ldp	x29, x30, [sp], #80
  444cd0:	ret
  444cd4:	mov	x19, x2
  444cd8:	add	x23, x20, #0x10
  444cdc:	b	444c5c <_obstack_memory_used@@Base+0x2a6c>
  444ce0:	stp	x29, x30, [sp, #-112]!
  444ce4:	mov	x29, sp
  444ce8:	stp	x23, x24, [sp, #48]
  444cec:	mov	x24, x0
  444cf0:	ldrb	w0, [x1, #56]
  444cf4:	stp	x19, x20, [sp, #16]
  444cf8:	stp	x21, x22, [sp, #32]
  444cfc:	mov	x21, x2
  444d00:	stp	x25, x26, [sp, #64]
  444d04:	ldr	x20, [x1]
  444d08:	ldr	x19, [x2, #8]
  444d0c:	str	x27, [sp, #80]
  444d10:	tbz	w0, #4, 444e8c <_obstack_memory_used@@Base+0x2c9c>
  444d14:	cbz	x19, 444e30 <_obstack_memory_used@@Base+0x2c40>
  444d18:	ldr	x0, [x2, #40]
  444d1c:	cmp	x0, #0x3f
  444d20:	b.gt	444e10 <_obstack_memory_used@@Base+0x2c20>
  444d24:	ldr	x1, [x20, #160]
  444d28:	lsr	x0, x1, x0
  444d2c:	tbz	w0, #0, 444e10 <_obstack_memory_used@@Base+0x2c20>
  444d30:	mov	w5, #0x8                   	// #8
  444d34:	add	x26, x20, #0x70
  444d38:	add	x27, sp, #0x60
  444d3c:	add	x20, x20, #0x80
  444d40:	mov	x1, x20
  444d44:	mov	x4, x27
  444d48:	mov	x3, #0x0                   	// #0
  444d4c:	mov	x2, #0x0                   	// #0
  444d50:	mov	x0, x26
  444d54:	strb	w5, [sp, #104]
  444d58:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  444d5c:	mov	x22, x0
  444d60:	mov	w5, #0x9                   	// #9
  444d64:	mov	x4, x27
  444d68:	mov	x1, x20
  444d6c:	mov	x0, x26
  444d70:	mov	x3, #0x0                   	// #0
  444d74:	mov	x2, #0x0                   	// #0
  444d78:	strb	w5, [sp, #104]
  444d7c:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  444d80:	mov	x23, x0
  444d84:	mov	w5, #0x10                  	// #16
  444d88:	mov	x2, x19
  444d8c:	mov	x4, x27
  444d90:	mov	x3, x23
  444d94:	mov	x1, x20
  444d98:	mov	x0, x26
  444d9c:	strb	w5, [sp, #104]
  444da0:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  444da4:	mov	x25, x0
  444da8:	mov	w5, #0x10                  	// #16
  444dac:	mov	x4, x27
  444db0:	mov	x1, x20
  444db4:	mov	x0, x26
  444db8:	mov	x3, x25
  444dbc:	mov	x2, x22
  444dc0:	strb	w5, [sp, #104]
  444dc4:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  444dc8:	cmp	x0, #0x0
  444dcc:	mov	x19, x0
  444dd0:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  444dd4:	b.eq	444eec <_obstack_memory_used@@Base+0x2cfc>  // b.none
  444dd8:	cmp	x22, #0x0
  444ddc:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  444de0:	b.eq	444eec <_obstack_memory_used@@Base+0x2cfc>  // b.none
  444de4:	ldr	x0, [x21, #40]
  444de8:	str	x0, [x23, #40]
  444dec:	str	x0, [x22, #40]
  444df0:	ldrb	w0, [x21, #50]
  444df4:	ldrb	w1, [x23, #50]
  444df8:	ubfx	x0, x0, #3, #1
  444dfc:	bfi	w1, w0, #3, #1
  444e00:	strb	w1, [x23, #50]
  444e04:	ldrb	w1, [x22, #50]
  444e08:	bfi	w1, w0, #3, #1
  444e0c:	strb	w1, [x22, #50]
  444e10:	mov	x0, x19
  444e14:	ldp	x19, x20, [sp, #16]
  444e18:	ldp	x21, x22, [sp, #32]
  444e1c:	ldp	x23, x24, [sp, #48]
  444e20:	ldp	x25, x26, [sp, #64]
  444e24:	ldr	x27, [sp, #80]
  444e28:	ldp	x29, x30, [sp], #112
  444e2c:	ret
  444e30:	mov	w5, #0x8                   	// #8
  444e34:	add	x26, x20, #0x70
  444e38:	add	x27, sp, #0x60
  444e3c:	add	x20, x20, #0x80
  444e40:	mov	x1, x20
  444e44:	mov	x4, x27
  444e48:	mov	x3, #0x0                   	// #0
  444e4c:	mov	x2, #0x0                   	// #0
  444e50:	mov	x0, x26
  444e54:	strb	w5, [sp, #104]
  444e58:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  444e5c:	mov	x22, x0
  444e60:	mov	w5, #0x9                   	// #9
  444e64:	mov	x4, x27
  444e68:	mov	x1, x20
  444e6c:	mov	x0, x26
  444e70:	mov	x3, #0x0                   	// #0
  444e74:	mov	x2, #0x0                   	// #0
  444e78:	strb	w5, [sp, #104]
  444e7c:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  444e80:	mov	x25, x0
  444e84:	mov	x23, x0
  444e88:	b	444da8 <_obstack_memory_used@@Base+0x2bb8>
  444e8c:	mov	w5, #0x8                   	// #8
  444e90:	add	x26, x20, #0x70
  444e94:	add	x27, sp, #0x60
  444e98:	add	x20, x20, #0x80
  444e9c:	mov	x1, x20
  444ea0:	mov	x4, x27
  444ea4:	mov	x3, #0x0                   	// #0
  444ea8:	mov	x2, #0x0                   	// #0
  444eac:	mov	x0, x26
  444eb0:	strb	w5, [sp, #104]
  444eb4:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  444eb8:	mov	x22, x0
  444ebc:	mov	w5, #0x9                   	// #9
  444ec0:	mov	x4, x27
  444ec4:	mov	x1, x20
  444ec8:	mov	x0, x26
  444ecc:	mov	x3, #0x0                   	// #0
  444ed0:	mov	x2, #0x0                   	// #0
  444ed4:	strb	w5, [sp, #104]
  444ed8:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  444edc:	mov	x23, x0
  444ee0:	mov	x25, x0
  444ee4:	cbnz	x19, 444d84 <_obstack_memory_used@@Base+0x2b94>
  444ee8:	b	444da8 <_obstack_memory_used@@Base+0x2bb8>
  444eec:	mov	w0, #0xc                   	// #12
  444ef0:	str	w0, [x24]
  444ef4:	mov	x19, #0x0                   	// #0
  444ef8:	mov	x0, x19
  444efc:	ldp	x19, x20, [sp, #16]
  444f00:	ldp	x21, x22, [sp, #32]
  444f04:	ldp	x23, x24, [sp, #48]
  444f08:	ldp	x25, x26, [sp, #64]
  444f0c:	ldr	x27, [sp, #80]
  444f10:	ldp	x29, x30, [sp], #112
  444f14:	ret
  444f18:	stp	x29, x30, [sp, #-48]!
  444f1c:	mov	x29, sp
  444f20:	ldr	x2, [x1, #8]
  444f24:	stp	x19, x20, [sp, #16]
  444f28:	mov	x19, x1
  444f2c:	str	wzr, [sp, #44]
  444f30:	mov	x20, x0
  444f34:	cbz	x2, 444f44 <_obstack_memory_used@@Base+0x2d54>
  444f38:	ldrb	w0, [x2, #48]
  444f3c:	cmp	w0, #0x11
  444f40:	b.eq	444f68 <_obstack_memory_used@@Base+0x2d78>  // b.none
  444f44:	ldr	x2, [x19, #16]
  444f48:	cbz	x2, 444f58 <_obstack_memory_used@@Base+0x2d68>
  444f4c:	ldrb	w0, [x2, #48]
  444f50:	cmp	w0, #0x11
  444f54:	b.eq	444f84 <_obstack_memory_used@@Base+0x2d94>  // b.none
  444f58:	ldr	w0, [sp, #44]
  444f5c:	ldp	x19, x20, [sp, #16]
  444f60:	ldp	x29, x30, [sp], #48
  444f64:	ret
  444f68:	mov	x1, x20
  444f6c:	add	x0, sp, #0x2c
  444f70:	bl	444ce0 <_obstack_memory_used@@Base+0x2af0>
  444f74:	str	x0, [x19, #8]
  444f78:	cbz	x0, 444f44 <_obstack_memory_used@@Base+0x2d54>
  444f7c:	str	x19, [x0]
  444f80:	b	444f44 <_obstack_memory_used@@Base+0x2d54>
  444f84:	mov	x1, x20
  444f88:	add	x0, sp, #0x2c
  444f8c:	bl	444ce0 <_obstack_memory_used@@Base+0x2af0>
  444f90:	str	x0, [x19, #16]
  444f94:	cbz	x0, 444f58 <_obstack_memory_used@@Base+0x2d68>
  444f98:	str	x19, [x0]
  444f9c:	b	444f58 <_obstack_memory_used@@Base+0x2d68>
  444fa0:	stp	x29, x30, [sp, #-48]!
  444fa4:	mov	x29, sp
  444fa8:	stp	x19, x20, [sp, #16]
  444fac:	mov	x19, x0
  444fb0:	ldr	x2, [x1, #8]
  444fb4:	str	x2, [x0, #8]
  444fb8:	cmp	x2, #0x0
  444fbc:	b.le	445000 <_obstack_memory_used@@Base+0x2e10>
  444fc0:	str	x21, [sp, #32]
  444fc4:	lsl	x20, x2, #3
  444fc8:	str	x2, [x19]
  444fcc:	mov	x0, x20
  444fd0:	mov	x21, x1
  444fd4:	bl	404310 <malloc@plt>
  444fd8:	str	x0, [x19, #16]
  444fdc:	cbz	x0, 445018 <_obstack_memory_used@@Base+0x2e28>
  444fe0:	ldr	x1, [x21, #16]
  444fe4:	mov	x2, x20
  444fe8:	bl	403f70 <memcpy@plt>
  444fec:	ldr	x21, [sp, #32]
  444ff0:	mov	w0, #0x0                   	// #0
  444ff4:	ldp	x19, x20, [sp, #16]
  444ff8:	ldp	x29, x30, [sp], #48
  444ffc:	ret
  445000:	stp	xzr, xzr, [x19]
  445004:	mov	w0, #0x0                   	// #0
  445008:	str	xzr, [x19, #16]
  44500c:	ldp	x19, x20, [sp, #16]
  445010:	ldp	x29, x30, [sp], #48
  445014:	ret
  445018:	mov	w0, #0xc                   	// #12
  44501c:	ldr	x21, [sp, #32]
  445020:	stp	xzr, xzr, [x19]
  445024:	b	444ff4 <_obstack_memory_used@@Base+0x2e04>
  445028:	stp	x29, x30, [sp, #-64]!
  44502c:	mov	x29, sp
  445030:	str	x21, [sp, #24]
  445034:	mov	x21, x0
  445038:	cbz	x1, 44505c <_obstack_memory_used@@Base+0x2e6c>
  44503c:	stp	x22, x23, [sp, #32]
  445040:	cmp	x2, #0x0
  445044:	ldr	x22, [x1, #8]
  445048:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  44504c:	b.gt	445084 <_obstack_memory_used@@Base+0x2e94>
  445050:	cmp	x22, #0x0
  445054:	b.gt	445094 <_obstack_memory_used@@Base+0x2ea4>
  445058:	ldp	x22, x23, [sp, #32]
  44505c:	cbz	x2, 44506c <_obstack_memory_used@@Base+0x2e7c>
  445060:	ldr	x0, [x2, #8]
  445064:	cmp	x0, #0x0
  445068:	b.gt	4450a8 <_obstack_memory_used@@Base+0x2eb8>
  44506c:	mov	w0, #0x0                   	// #0
  445070:	stp	xzr, xzr, [x21]
  445074:	str	xzr, [x21, #16]
  445078:	ldr	x21, [sp, #24]
  44507c:	ldp	x29, x30, [sp], #64
  445080:	ret
  445084:	ldr	x23, [x2, #8]
  445088:	str	x2, [sp, #48]
  44508c:	cmp	x23, #0x0
  445090:	b.gt	4450bc <_obstack_memory_used@@Base+0x2ecc>
  445094:	mov	x0, x21
  445098:	ldr	x21, [sp, #24]
  44509c:	ldp	x22, x23, [sp, #32]
  4450a0:	ldp	x29, x30, [sp], #64
  4450a4:	b	444fa0 <_obstack_memory_used@@Base+0x2db0>
  4450a8:	mov	x0, x21
  4450ac:	mov	x1, x2
  4450b0:	ldr	x21, [sp, #24]
  4450b4:	ldp	x29, x30, [sp], #64
  4450b8:	b	444fa0 <_obstack_memory_used@@Base+0x2db0>
  4450bc:	add	x0, x22, x23
  4450c0:	str	x0, [x21]
  4450c4:	str	x1, [sp, #56]
  4450c8:	lsl	x0, x0, #3
  4450cc:	bl	404310 <malloc@plt>
  4450d0:	str	x0, [x21, #16]
  4450d4:	ldp	x2, x1, [sp, #48]
  4450d8:	cbz	x0, 445194 <_obstack_memory_used@@Base+0x2fa4>
  4450dc:	sub	x7, x0, #0x8
  4450e0:	mov	x3, #0x0                   	// #0
  4450e4:	mov	x4, #0x0                   	// #0
  4450e8:	ldr	x1, [x1, #16]
  4450ec:	ldr	x6, [x2, #16]
  4450f0:	str	x19, [sp, #16]
  4450f4:	mov	x19, #0x0                   	// #0
  4450f8:	b	445118 <_obstack_memory_used@@Base+0x2f28>
  4450fc:	cinc	x3, x3, eq  // eq = none
  445100:	add	x4, x4, #0x1
  445104:	str	x2, [x7, x19, lsl #3]
  445108:	cmp	x22, x4
  44510c:	b.le	445138 <_obstack_memory_used@@Base+0x2f48>
  445110:	cmp	x23, x3
  445114:	b.le	445178 <_obstack_memory_used@@Base+0x2f88>
  445118:	ldr	x2, [x1, x4, lsl #3]
  44511c:	add	x19, x19, #0x1
  445120:	ldr	x5, [x6, x3, lsl #3]
  445124:	cmp	x2, x5
  445128:	b.le	4450fc <_obstack_memory_used@@Base+0x2f0c>
  44512c:	add	x3, x3, #0x1
  445130:	str	x5, [x7, x19, lsl #3]
  445134:	b	445108 <_obstack_memory_used@@Base+0x2f18>
  445138:	cmp	x23, x3
  44513c:	b.gt	44515c <_obstack_memory_used@@Base+0x2f6c>
  445140:	ldp	x22, x23, [sp, #32]
  445144:	str	x19, [x21, #8]
  445148:	mov	w0, #0x0                   	// #0
  44514c:	ldr	x19, [sp, #16]
  445150:	ldr	x21, [sp, #24]
  445154:	ldp	x29, x30, [sp], #64
  445158:	ret
  44515c:	sub	x2, x23, x3
  445160:	add	x0, x0, x19, lsl #3
  445164:	add	x1, x6, x3, lsl #3
  445168:	add	x19, x19, x2
  44516c:	lsl	x2, x2, #3
  445170:	bl	403f70 <memcpy@plt>
  445174:	b	445140 <_obstack_memory_used@@Base+0x2f50>
  445178:	sub	x2, x22, x4
  44517c:	add	x1, x1, x4, lsl #3
  445180:	add	x0, x0, x19, lsl #3
  445184:	add	x19, x19, x2
  445188:	lsl	x2, x2, #3
  44518c:	bl	403f70 <memcpy@plt>
  445190:	b	445140 <_obstack_memory_used@@Base+0x2f50>
  445194:	mov	w0, #0xc                   	// #12
  445198:	ldp	x22, x23, [sp, #32]
  44519c:	b	445078 <_obstack_memory_used@@Base+0x2e88>
  4451a0:	stp	x29, x30, [sp, #-112]!
  4451a4:	mov	x29, sp
  4451a8:	stp	x25, x26, [sp, #64]
  4451ac:	mov	x25, x2
  4451b0:	ldr	x2, [x2, #8]
  4451b4:	stp	x27, x28, [sp, #80]
  4451b8:	str	x0, [sp, #104]
  4451bc:	cbz	x2, 445454 <_obstack_memory_used@@Base+0x3264>
  4451c0:	stp	x19, x20, [sp, #16]
  4451c4:	cmp	x2, #0x0
  4451c8:	mov	w20, w3
  4451cc:	stp	x21, x22, [sp, #32]
  4451d0:	add	x26, x2, w3, uxtw
  4451d4:	mov	x22, x1
  4451d8:	b.le	4451f8 <_obstack_memory_used@@Base+0x3008>
  4451dc:	ldr	x0, [x25, #16]
  4451e0:	add	x2, x0, x2, lsl #3
  4451e4:	nop
  4451e8:	ldr	x1, [x0], #8
  4451ec:	add	x26, x26, x1
  4451f0:	cmp	x2, x0
  4451f4:	b.ne	4451e8 <_obstack_memory_used@@Base+0x2ff8>  // b.any
  4451f8:	ldr	x0, [x22, #136]
  4451fc:	ldr	x1, [x22, #64]
  445200:	and	x0, x26, x0
  445204:	add	x0, x0, x0, lsl #1
  445208:	lsl	x0, x0, #3
  44520c:	add	x2, x1, x0
  445210:	ldr	x10, [x1, x0]
  445214:	cmp	x10, #0x0
  445218:	b.le	445284 <_obstack_memory_used@@Base+0x3094>
  44521c:	mov	x6, #0x0                   	// #0
  445220:	ldr	x11, [x2, #16]
  445224:	b	445230 <_obstack_memory_used@@Base+0x3040>
  445228:	cmp	x6, x10
  44522c:	b.eq	445284 <_obstack_memory_used@@Base+0x3094>  // b.none
  445230:	ldr	x27, [x11, x6, lsl #3]
  445234:	add	x6, x6, #0x1
  445238:	ldr	x0, [x27]
  44523c:	cmp	x0, x26
  445240:	b.ne	445228 <_obstack_memory_used@@Base+0x3038>  // b.any
  445244:	ldrb	w0, [x27, #104]
  445248:	and	w0, w0, #0xf
  44524c:	cmp	w0, w20
  445250:	b.ne	445228 <_obstack_memory_used@@Base+0x3038>  // b.any
  445254:	ldr	x0, [x27, #80]
  445258:	mov	x1, x25
  44525c:	bl	442350 <_obstack_memory_used@@Base+0x160>
  445260:	tst	w0, #0xff
  445264:	b.eq	445228 <_obstack_memory_used@@Base+0x3038>  // b.none
  445268:	ldp	x19, x20, [sp, #16]
  44526c:	ldp	x21, x22, [sp, #32]
  445270:	mov	x0, x27
  445274:	ldp	x25, x26, [sp, #64]
  445278:	ldp	x27, x28, [sp, #80]
  44527c:	ldp	x29, x30, [sp], #112
  445280:	ret
  445284:	mov	x1, #0x1                   	// #1
  445288:	mov	x0, #0x70                  	// #112
  44528c:	bl	4044c0 <calloc@plt>
  445290:	mov	x27, x0
  445294:	cbz	x0, 4453c8 <_obstack_memory_used@@Base+0x31d8>
  445298:	add	x21, x0, #0x8
  44529c:	mov	x1, x25
  4452a0:	mov	x0, x21
  4452a4:	bl	444fa0 <_obstack_memory_used@@Base+0x2db0>
  4452a8:	cbnz	w0, 445480 <_obstack_memory_used@@Base+0x3290>
  4452ac:	ldrb	w0, [x27, #104]
  4452b0:	ldr	x2, [x25, #8]
  4452b4:	str	x21, [x27, #80]
  4452b8:	bfxil	w0, w20, #0, #4
  4452bc:	strb	w0, [x27, #104]
  4452c0:	cmp	x2, #0x0
  4452c4:	b.le	4453a8 <_obstack_memory_used@@Base+0x31b8>
  4452c8:	and	w0, w20, #0x4
  4452cc:	stp	x23, x24, [sp, #48]
  4452d0:	add	x24, x27, #0x18
  4452d4:	add	x23, x27, #0x10
  4452d8:	str	w0, [sp, #100]
  4452dc:	and	w0, w20, #0x2
  4452e0:	and	w20, w20, #0x1
  4452e4:	mov	x6, #0x0                   	// #0
  4452e8:	mov	x28, #0x0                   	// #0
  4452ec:	str	w0, [sp, #96]
  4452f0:	ldr	x1, [x25, #16]
  4452f4:	ldr	x0, [x22]
  4452f8:	ldr	x3, [x1, x28, lsl #3]
  4452fc:	add	x3, x0, x3, lsl #4
  445300:	ldr	w19, [x3, #8]
  445304:	ldrb	w4, [x3, #8]
  445308:	ubfx	x19, x19, #8, #10
  44530c:	cmp	w19, #0x0
  445310:	ccmp	w4, #0x1, #0x0, eq  // eq = none
  445314:	b.eq	445398 <_obstack_memory_used@@Base+0x31a8>  // b.none
  445318:	ldrb	w5, [x3, #10]
  44531c:	cmp	w4, #0x2
  445320:	ldrb	w0, [x27, #104]
  445324:	ubfx	x5, x5, #4, #1
  445328:	mov	w3, w0
  44532c:	ubfx	x0, x0, #5, #1
  445330:	orr	w0, w0, w5
  445334:	bfi	w3, w0, #5, #1
  445338:	strb	w3, [x27, #104]
  44533c:	b.eq	445448 <_obstack_memory_used@@Base+0x3258>  // b.none
  445340:	cmp	w4, #0x4
  445344:	b.eq	4453e4 <_obstack_memory_used@@Base+0x31f4>  // b.none
  445348:	cbz	w19, 445398 <_obstack_memory_used@@Base+0x31a8>
  44534c:	ldr	x0, [x27, #80]
  445350:	cmp	x21, x0
  445354:	b.eq	4453f0 <_obstack_memory_used@@Base+0x3200>  // b.none
  445358:	tbz	w19, #0, 445420 <_obstack_memory_used@@Base+0x3230>
  44535c:	cbz	w20, 445368 <_obstack_memory_used@@Base+0x3178>
  445360:	tbz	w19, #1, 445428 <_obstack_memory_used@@Base+0x3238>
  445364:	nop
  445368:	subs	x2, x28, x6
  44536c:	b.mi	445390 <_obstack_memory_used@@Base+0x31a0>  // b.first
  445370:	ldr	x0, [x27, #16]
  445374:	cmp	x2, x0
  445378:	b.ge	445390 <_obstack_memory_used@@Base+0x31a0>  // b.tcont
  44537c:	sub	x0, x0, #0x1
  445380:	str	x0, [x27, #16]
  445384:	mov	x1, x24
  445388:	mov	x0, x23
  44538c:	bl	444120 <_obstack_memory_used@@Base+0x1f30>
  445390:	ldr	x2, [x25, #8]
  445394:	add	x6, x6, #0x1
  445398:	add	x28, x28, #0x1
  44539c:	cmp	x28, x2
  4453a0:	b.lt	4452f0 <_obstack_memory_used@@Base+0x3100>  // b.tstop
  4453a4:	ldp	x23, x24, [sp, #48]
  4453a8:	mov	x2, x26
  4453ac:	mov	x0, x22
  4453b0:	mov	x1, x27
  4453b4:	bl	442b58 <_obstack_memory_used@@Base+0x968>
  4453b8:	cbz	w0, 445268 <_obstack_memory_used@@Base+0x3078>
  4453bc:	mov	x0, x27
  4453c0:	bl	443c68 <_obstack_memory_used@@Base+0x1a78>
  4453c4:	nop
  4453c8:	ldr	x1, [sp, #104]
  4453cc:	mov	w0, #0xc                   	// #12
  4453d0:	mov	x27, #0x0                   	// #0
  4453d4:	ldp	x19, x20, [sp, #16]
  4453d8:	ldp	x21, x22, [sp, #32]
  4453dc:	str	w0, [x1]
  4453e0:	b	445270 <_obstack_memory_used@@Base+0x3080>
  4453e4:	orr	w3, w3, #0x40
  4453e8:	strb	w3, [x27, #104]
  4453ec:	b	445348 <_obstack_memory_used@@Base+0x3158>
  4453f0:	mov	x0, #0x18                  	// #24
  4453f4:	bl	404310 <malloc@plt>
  4453f8:	str	x0, [x27, #80]
  4453fc:	cbz	x0, 445470 <_obstack_memory_used@@Base+0x3280>
  445400:	mov	x1, x25
  445404:	bl	444fa0 <_obstack_memory_used@@Base+0x2db0>
  445408:	cbnz	w0, 44548c <_obstack_memory_used@@Base+0x329c>
  44540c:	ldrb	w0, [x27, #104]
  445410:	mov	x6, #0x0                   	// #0
  445414:	orr	w0, w0, #0xffffff80
  445418:	strb	w0, [x27, #104]
  44541c:	tbnz	w19, #0, 44535c <_obstack_memory_used@@Base+0x316c>
  445420:	tbz	w19, #1, 445428 <_obstack_memory_used@@Base+0x3238>
  445424:	cbnz	w20, 445368 <_obstack_memory_used@@Base+0x3178>
  445428:	tbz	w19, #4, 445434 <_obstack_memory_used@@Base+0x3244>
  44542c:	ldr	w0, [sp, #96]
  445430:	cbz	w0, 445368 <_obstack_memory_used@@Base+0x3178>
  445434:	tbz	w19, #6, 445440 <_obstack_memory_used@@Base+0x3250>
  445438:	ldr	w0, [sp, #100]
  44543c:	cbz	w0, 445368 <_obstack_memory_used@@Base+0x3178>
  445440:	ldr	x2, [x25, #8]
  445444:	b	445398 <_obstack_memory_used@@Base+0x31a8>
  445448:	orr	w3, w3, #0x10
  44544c:	strb	w3, [x27, #104]
  445450:	b	445348 <_obstack_memory_used@@Base+0x3158>
  445454:	str	wzr, [x0]
  445458:	mov	x27, #0x0                   	// #0
  44545c:	mov	x0, x27
  445460:	ldp	x25, x26, [sp, #64]
  445464:	ldp	x27, x28, [sp, #80]
  445468:	ldp	x29, x30, [sp], #112
  44546c:	ret
  445470:	mov	x0, x27
  445474:	bl	443c68 <_obstack_memory_used@@Base+0x1a78>
  445478:	ldp	x23, x24, [sp, #48]
  44547c:	b	4453c8 <_obstack_memory_used@@Base+0x31d8>
  445480:	mov	x0, x27
  445484:	bl	4047b0 <free@plt>
  445488:	b	4453c8 <_obstack_memory_used@@Base+0x31d8>
  44548c:	ldp	x23, x24, [sp, #48]
  445490:	b	4453c8 <_obstack_memory_used@@Base+0x31d8>
  445494:	nop
  445498:	stp	x29, x30, [sp, #-64]!
  44549c:	mov	x29, sp
  4454a0:	stp	x19, x20, [sp, #16]
  4454a4:	ldr	x20, [x2, #8]
  4454a8:	stp	x21, x22, [sp, #32]
  4454ac:	mov	x22, x0
  4454b0:	cbz	x20, 445690 <_obstack_memory_used@@Base+0x34a0>
  4454b4:	stp	x23, x24, [sp, #48]
  4454b8:	mov	x21, x1
  4454bc:	mov	x23, x2
  4454c0:	cmp	x20, #0x0
  4454c4:	b.le	4454e0 <_obstack_memory_used@@Base+0x32f0>
  4454c8:	ldr	x3, [x2, #16]
  4454cc:	add	x1, x3, x20, lsl #3
  4454d0:	ldr	x0, [x3], #8
  4454d4:	add	x20, x20, x0
  4454d8:	cmp	x1, x3
  4454dc:	b.ne	4454d0 <_obstack_memory_used@@Base+0x32e0>  // b.any
  4454e0:	ldr	x0, [x21, #136]
  4454e4:	ldr	x1, [x21, #64]
  4454e8:	and	x0, x20, x0
  4454ec:	add	x0, x0, x0, lsl #1
  4454f0:	lsl	x0, x0, #3
  4454f4:	add	x2, x1, x0
  4454f8:	ldr	x7, [x1, x0]
  4454fc:	cmp	x7, #0x0
  445500:	b.le	445540 <_obstack_memory_used@@Base+0x3350>
  445504:	ldr	x8, [x2, #16]
  445508:	mov	x6, #0x0                   	// #0
  44550c:	nop
  445510:	ldr	x19, [x8, x6, lsl #3]
  445514:	mov	x1, x23
  445518:	add	x6, x6, #0x1
  44551c:	add	x0, x19, #0x8
  445520:	ldr	x3, [x19]
  445524:	cmp	x3, x20
  445528:	b.ne	445538 <_obstack_memory_used@@Base+0x3348>  // b.any
  44552c:	bl	442350 <_obstack_memory_used@@Base+0x160>
  445530:	tst	w0, #0xff
  445534:	b.ne	445638 <_obstack_memory_used@@Base+0x3448>  // b.any
  445538:	cmp	x6, x7
  44553c:	b.ne	445510 <_obstack_memory_used@@Base+0x3320>  // b.any
  445540:	mov	x1, #0x1                   	// #1
  445544:	mov	x0, #0x70                  	// #112
  445548:	bl	4044c0 <calloc@plt>
  44554c:	mov	x19, x0
  445550:	cbz	x0, 44567c <_obstack_memory_used@@Base+0x348c>
  445554:	add	x24, x0, #0x8
  445558:	mov	x1, x23
  44555c:	mov	x0, x24
  445560:	bl	444fa0 <_obstack_memory_used@@Base+0x2db0>
  445564:	cbnz	w0, 445674 <_obstack_memory_used@@Base+0x3484>
  445568:	ldr	x6, [x23, #8]
  44556c:	str	x24, [x19, #80]
  445570:	cmp	x6, #0x0
  445574:	b.le	445624 <_obstack_memory_used@@Base+0x3434>
  445578:	ldr	x0, [x23, #16]
  44557c:	ldr	x7, [x21]
  445580:	add	x6, x0, x6, lsl #3
  445584:	b	4455cc <_obstack_memory_used@@Base+0x33dc>
  445588:	ldrb	w3, [x19, #104]
  44558c:	cmp	w4, #0x2
  445590:	ldrb	w5, [x2, #10]
  445594:	mov	w1, w3
  445598:	ubfx	x3, x3, #5, #1
  44559c:	ubfx	x5, x5, #4, #1
  4455a0:	orr	w3, w3, w5
  4455a4:	bfi	w1, w3, #5, #1
  4455a8:	strb	w1, [x19, #104]
  4455ac:	b.eq	445650 <_obstack_memory_used@@Base+0x3460>  // b.none
  4455b0:	cmp	w4, #0x4
  4455b4:	b.ne	44565c <_obstack_memory_used@@Base+0x346c>  // b.any
  4455b8:	orr	w1, w1, #0x40
  4455bc:	strb	w1, [x19, #104]
  4455c0:	add	x0, x0, #0x8
  4455c4:	cmp	x6, x0
  4455c8:	b.eq	445624 <_obstack_memory_used@@Base+0x3434>  // b.none
  4455cc:	ldr	x2, [x0]
  4455d0:	add	x2, x7, x2, lsl #4
  4455d4:	ldrb	w4, [x2, #8]
  4455d8:	cmp	w4, #0x1
  4455dc:	b.ne	445588 <_obstack_memory_used@@Base+0x3398>  // b.any
  4455e0:	ldr	w1, [x2, #8]
  4455e4:	tst	w1, #0x3ff00
  4455e8:	b.eq	4455c0 <_obstack_memory_used@@Base+0x33d0>  // b.none
  4455ec:	ldrb	w1, [x19, #104]
  4455f0:	ldrb	w2, [x2, #10]
  4455f4:	mov	w3, w1
  4455f8:	ubfx	x1, x1, #5, #1
  4455fc:	ubfx	x2, x2, #4, #1
  445600:	orr	w1, w1, w2
  445604:	bfi	w3, w1, #5, #1
  445608:	strb	w3, [x19, #104]
  44560c:	ldrb	w1, [x19, #104]
  445610:	add	x0, x0, #0x8
  445614:	cmp	x6, x0
  445618:	orr	w1, w1, #0xffffff80
  44561c:	strb	w1, [x19, #104]
  445620:	b.ne	4455cc <_obstack_memory_used@@Base+0x33dc>  // b.any
  445624:	mov	x2, x20
  445628:	mov	x0, x21
  44562c:	mov	x1, x19
  445630:	bl	442b58 <_obstack_memory_used@@Base+0x968>
  445634:	cbnz	w0, 4456ac <_obstack_memory_used@@Base+0x34bc>
  445638:	ldp	x23, x24, [sp, #48]
  44563c:	mov	x0, x19
  445640:	ldp	x19, x20, [sp, #16]
  445644:	ldp	x21, x22, [sp, #32]
  445648:	ldp	x29, x30, [sp], #64
  44564c:	ret
  445650:	orr	w1, w1, #0x10
  445654:	strb	w1, [x19, #104]
  445658:	b	4455c0 <_obstack_memory_used@@Base+0x33d0>
  44565c:	cmp	w4, #0xc
  445660:	b.eq	44560c <_obstack_memory_used@@Base+0x341c>  // b.none
  445664:	ldr	w1, [x2, #8]
  445668:	tst	w1, #0x3ff00
  44566c:	b.eq	4455c0 <_obstack_memory_used@@Base+0x33d0>  // b.none
  445670:	b	44560c <_obstack_memory_used@@Base+0x341c>
  445674:	mov	x0, x19
  445678:	bl	4047b0 <free@plt>
  44567c:	mov	w0, #0xc                   	// #12
  445680:	mov	x19, #0x0                   	// #0
  445684:	ldp	x23, x24, [sp, #48]
  445688:	str	w0, [x22]
  44568c:	b	44563c <_obstack_memory_used@@Base+0x344c>
  445690:	str	wzr, [x0]
  445694:	mov	x19, #0x0                   	// #0
  445698:	mov	x0, x19
  44569c:	ldp	x19, x20, [sp, #16]
  4456a0:	ldp	x21, x22, [sp, #32]
  4456a4:	ldp	x29, x30, [sp], #64
  4456a8:	ret
  4456ac:	mov	x0, x19
  4456b0:	bl	443c68 <_obstack_memory_used@@Base+0x1a78>
  4456b4:	b	44567c <_obstack_memory_used@@Base+0x348c>
  4456b8:	cmp	x3, #0x0
  4456bc:	b.le	445774 <_obstack_memory_used@@Base+0x3584>
  4456c0:	stp	x29, x30, [sp, #-96]!
  4456c4:	mov	x29, sp
  4456c8:	stp	x19, x20, [sp, #16]
  4456cc:	mov	x20, x1
  4456d0:	mov	x19, #0x0                   	// #0
  4456d4:	stp	x21, x22, [sp, #32]
  4456d8:	mov	x21, x3
  4456dc:	mov	x22, x2
  4456e0:	str	x23, [sp, #48]
  4456e4:	mov	x23, x0
  4456e8:	b	44573c <_obstack_memory_used@@Base+0x354c>
  4456ec:	add	x2, x4, #0x8
  4456f0:	add	x1, x1, #0x8
  4456f4:	add	x0, sp, #0x48
  4456f8:	cbz	x4, 445730 <_obstack_memory_used@@Base+0x3540>
  4456fc:	bl	445028 <_obstack_memory_used@@Base+0x2e38>
  445700:	mov	w4, w0
  445704:	str	w4, [sp, #68]
  445708:	add	x2, sp, #0x48
  44570c:	mov	x1, x23
  445710:	add	x0, sp, #0x44
  445714:	cbnz	w4, 44575c <_obstack_memory_used@@Base+0x356c>
  445718:	bl	445498 <_obstack_memory_used@@Base+0x32a8>
  44571c:	str	x0, [x20, x19, lsl #3]
  445720:	ldr	x0, [sp, #88]
  445724:	bl	4047b0 <free@plt>
  445728:	ldr	w4, [sp, #68]
  44572c:	cbnz	w4, 44575c <_obstack_memory_used@@Base+0x356c>
  445730:	add	x19, x19, #0x1
  445734:	cmp	x21, x19
  445738:	b.eq	445758 <_obstack_memory_used@@Base+0x3568>  // b.none
  44573c:	ldr	x1, [x20, x19, lsl #3]
  445740:	ldr	x4, [x22, x19, lsl #3]
  445744:	cbnz	x1, 4456ec <_obstack_memory_used@@Base+0x34fc>
  445748:	str	x4, [x20, x19, lsl #3]
  44574c:	add	x19, x19, #0x1
  445750:	cmp	x21, x19
  445754:	b.ne	44573c <_obstack_memory_used@@Base+0x354c>  // b.any
  445758:	mov	w4, #0x0                   	// #0
  44575c:	mov	w0, w4
  445760:	ldp	x19, x20, [sp, #16]
  445764:	ldp	x21, x22, [sp, #32]
  445768:	ldr	x23, [sp, #48]
  44576c:	ldp	x29, x30, [sp], #96
  445770:	ret
  445774:	mov	w4, #0x0                   	// #0
  445778:	mov	w0, w4
  44577c:	ret
  445780:	stp	x29, x30, [sp, #-160]!
  445784:	mov	x29, sp
  445788:	ldr	x7, [x0, #200]
  44578c:	stp	x19, x20, [sp, #16]
  445790:	mov	x20, #0x0                   	// #0
  445794:	stp	x21, x22, [sp, #32]
  445798:	mov	x21, x2
  44579c:	mov	x22, x1
  4457a0:	mov	x2, x7
  4457a4:	stp	x23, x24, [sp, #48]
  4457a8:	mov	x24, x0
  4457ac:	str	x3, [sp, #104]
  4457b0:	str	w4, [sp, #116]
  4457b4:	b	4457d8 <_obstack_memory_used@@Base+0x35e8>
  4457b8:	asr	x5, x5, #1
  4457bc:	ldr	x0, [x24, #216]
  4457c0:	add	x1, x5, x5, lsl #2
  4457c4:	add	x1, x0, x1, lsl #3
  4457c8:	ldr	x0, [x1, #8]
  4457cc:	cmp	x21, x0
  4457d0:	b.gt	4459b4 <_obstack_memory_used@@Base+0x37c4>
  4457d4:	mov	x2, x5
  4457d8:	add	x5, x2, x20
  4457dc:	cmp	x2, x20
  4457e0:	b.gt	4457b8 <_obstack_memory_used@@Base+0x35c8>
  4457e4:	cmp	x7, x20
  4457e8:	b.le	4459c4 <_obstack_memory_used@@Base+0x37d4>
  4457ec:	add	x20, x20, x20, lsl #2
  4457f0:	ldr	x19, [x24, #216]
  4457f4:	lsl	x0, x20, #3
  4457f8:	str	x0, [sp, #120]
  4457fc:	add	x19, x19, x0
  445800:	ldr	x0, [x19, #8]
  445804:	cmp	x21, x0
  445808:	b.ne	4459c4 <_obstack_memory_used@@Base+0x37d4>  // b.any
  44580c:	add	x23, x22, #0x10
  445810:	stp	x25, x26, [sp, #64]
  445814:	stp	x27, x28, [sp, #80]
  445818:	ldr	x26, [x24, #152]
  44581c:	b	4458c8 <_obstack_memory_used@@Base+0x36d8>
  445820:	ldr	x0, [x24, #184]
  445824:	lsl	x28, x20, #3
  445828:	ldr	x1, [x26, #24]
  44582c:	add	x25, x0, x28
  445830:	ldr	x7, [x0, x20, lsl #3]
  445834:	ldr	x27, [x1, x2, lsl #3]
  445838:	cbz	x7, 445990 <_obstack_memory_used@@Base+0x37a0>
  44583c:	ldr	x0, [x7, #16]
  445840:	mov	x2, x27
  445844:	add	x1, x7, #0x18
  445848:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  44584c:	cbnz	x0, 4458bc <_obstack_memory_used@@Base+0x36cc>
  445850:	add	x1, x7, #0x8
  445854:	add	x0, sp, #0x88
  445858:	bl	444fa0 <_obstack_memory_used@@Base+0x2db0>
  44585c:	mov	w4, w0
  445860:	mov	x1, x27
  445864:	add	x0, sp, #0x88
  445868:	str	w4, [sp, #132]
  44586c:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  445870:	and	w0, w0, #0xff
  445874:	ldr	w1, [sp, #132]
  445878:	eor	w0, w0, #0x1
  44587c:	cmp	w1, #0x0
  445880:	cset	w1, ne  // ne = any
  445884:	orr	w0, w1, w0
  445888:	cbnz	w0, 445a00 <_obstack_memory_used@@Base+0x3810>
  44588c:	ldr	x4, [x24, #184]
  445890:	add	x25, x4, x28
  445894:	add	x2, sp, #0x88
  445898:	mov	x1, x26
  44589c:	add	x0, sp, #0x84
  4458a0:	bl	445498 <_obstack_memory_used@@Base+0x32a8>
  4458a4:	str	x0, [x25]
  4458a8:	ldr	x0, [sp, #152]
  4458ac:	bl	4047b0 <free@plt>
  4458b0:	ldr	x0, [x24, #184]
  4458b4:	ldr	x0, [x0, x20, lsl #3]
  4458b8:	cbz	x0, 4459dc <_obstack_memory_used@@Base+0x37ec>
  4458bc:	ldrb	w0, [x19, #32]
  4458c0:	add	x19, x19, #0x28
  4458c4:	cbz	w0, 4459bc <_obstack_memory_used@@Base+0x37cc>
  4458c8:	ldr	x2, [x19]
  4458cc:	mov	x1, x23
  4458d0:	ldr	x7, [x22, #8]
  4458d4:	mov	x0, x7
  4458d8:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  4458dc:	cbz	x0, 4458bc <_obstack_memory_used@@Base+0x36cc>
  4458e0:	ldp	x0, x3, [x19, #16]
  4458e4:	add	x3, x21, x3
  4458e8:	sub	x20, x3, x0
  4458ec:	cmp	x21, x20
  4458f0:	b.ne	445820 <_obstack_memory_used@@Base+0x3630>  // b.any
  4458f4:	ldr	x3, [x26, #40]
  4458f8:	add	x2, x2, x2, lsl #1
  4458fc:	mov	x0, x7
  445900:	mov	x1, x23
  445904:	add	x2, x3, x2, lsl #3
  445908:	ldr	x2, [x2, #16]
  44590c:	ldr	x28, [x2]
  445910:	mov	x2, x28
  445914:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  445918:	cbnz	x0, 4458bc <_obstack_memory_used@@Base+0x36cc>
  44591c:	mov	x1, #0x1                   	// #1
  445920:	mov	x0, #0x8                   	// #8
  445924:	stp	x1, x1, [sp, #136]
  445928:	bl	404310 <malloc@plt>
  44592c:	str	x0, [sp, #152]
  445930:	cbz	x0, 445a30 <_obstack_memory_used@@Base+0x3840>
  445934:	mov	w4, #0x0                   	// #0
  445938:	str	x28, [x0]
  44593c:	ldr	w3, [sp, #116]
  445940:	add	x1, sp, #0x88
  445944:	ldr	x2, [sp, #104]
  445948:	mov	x0, x26
  44594c:	str	w4, [sp, #132]
  445950:	bl	444838 <_obstack_memory_used@@Base+0x2648>
  445954:	mov	w19, w0
  445958:	add	x1, sp, #0x88
  44595c:	mov	x0, x22
  445960:	bl	444418 <_obstack_memory_used@@Base+0x2228>
  445964:	mov	w28, w0
  445968:	ldr	x0, [sp, #152]
  44596c:	bl	4047b0 <free@plt>
  445970:	ldr	w0, [sp, #132]
  445974:	orr	w1, w19, w28
  445978:	orr	w1, w1, w0
  44597c:	cbnz	w1, 445a3c <_obstack_memory_used@@Base+0x384c>
  445980:	ldr	x0, [sp, #120]
  445984:	ldr	x19, [x24, #216]
  445988:	add	x19, x19, x0
  44598c:	b	4458c8 <_obstack_memory_used@@Base+0x36d8>
  445990:	mov	x1, #0x1                   	// #1
  445994:	mov	x0, #0x8                   	// #8
  445998:	stp	x1, x1, [sp, #136]
  44599c:	bl	404310 <malloc@plt>
  4459a0:	str	x0, [sp, #152]
  4459a4:	cbz	x0, 445a10 <_obstack_memory_used@@Base+0x3820>
  4459a8:	str	x27, [x0]
  4459ac:	str	wzr, [sp, #132]
  4459b0:	b	445894 <_obstack_memory_used@@Base+0x36a4>
  4459b4:	add	x20, x5, #0x1
  4459b8:	b	4457d8 <_obstack_memory_used@@Base+0x35e8>
  4459bc:	ldp	x25, x26, [sp, #64]
  4459c0:	ldp	x27, x28, [sp, #80]
  4459c4:	mov	w0, #0x0                   	// #0
  4459c8:	ldp	x19, x20, [sp, #16]
  4459cc:	ldp	x21, x22, [sp, #32]
  4459d0:	ldp	x23, x24, [sp, #48]
  4459d4:	ldp	x29, x30, [sp], #160
  4459d8:	ret
  4459dc:	ldr	w0, [sp, #132]
  4459e0:	cbz	w0, 4458bc <_obstack_memory_used@@Base+0x36cc>
  4459e4:	ldp	x19, x20, [sp, #16]
  4459e8:	ldp	x21, x22, [sp, #32]
  4459ec:	ldp	x23, x24, [sp, #48]
  4459f0:	ldp	x25, x26, [sp, #64]
  4459f4:	ldp	x27, x28, [sp, #80]
  4459f8:	ldp	x29, x30, [sp], #160
  4459fc:	ret
  445a00:	ldr	x0, [sp, #152]
  445a04:	bl	4047b0 <free@plt>
  445a08:	ldr	w0, [sp, #132]
  445a0c:	cbnz	w0, 4459e4 <_obstack_memory_used@@Base+0x37f4>
  445a10:	mov	w0, #0xc                   	// #12
  445a14:	ldp	x19, x20, [sp, #16]
  445a18:	ldp	x21, x22, [sp, #32]
  445a1c:	ldp	x23, x24, [sp, #48]
  445a20:	ldp	x25, x26, [sp, #64]
  445a24:	ldp	x27, x28, [sp, #80]
  445a28:	ldp	x29, x30, [sp], #160
  445a2c:	ret
  445a30:	mov	w4, #0xc                   	// #12
  445a34:	stp	xzr, xzr, [sp, #136]
  445a38:	b	44593c <_obstack_memory_used@@Base+0x374c>
  445a3c:	cbnz	w0, 4459e4 <_obstack_memory_used@@Base+0x37f4>
  445a40:	cmp	w19, #0x0
  445a44:	csel	w0, w19, w28, ne  // ne = any
  445a48:	ldp	x25, x26, [sp, #64]
  445a4c:	ldp	x27, x28, [sp, #80]
  445a50:	b	4459c8 <_obstack_memory_used@@Base+0x37d8>
  445a54:	nop
  445a58:	stp	x29, x30, [sp, #-96]!
  445a5c:	mov	x29, sp
  445a60:	stp	x21, x22, [sp, #32]
  445a64:	mov	x22, x2
  445a68:	ldr	x2, [x1]
  445a6c:	ldr	x21, [x0, #152]
  445a70:	cmp	x2, #0x0
  445a74:	b.le	445b2c <_obstack_memory_used@@Base+0x393c>
  445a78:	stp	x19, x20, [sp, #16]
  445a7c:	mov	x19, #0x0                   	// #0
  445a80:	stp	x23, x24, [sp, #48]
  445a84:	mov	x24, x0
  445a88:	mov	x23, x3
  445a8c:	stp	x25, x26, [sp, #64]
  445a90:	mov	x25, x1
  445a94:	b	445aa0 <_obstack_memory_used@@Base+0x38b0>
  445a98:	cmp	x19, x2
  445a9c:	b.ge	445b20 <_obstack_memory_used@@Base+0x3930>  // b.tcont
  445aa0:	ldr	x4, [x22]
  445aa4:	ldr	x5, [x21]
  445aa8:	ldr	x20, [x4, x19, lsl #3]
  445aac:	add	x19, x19, #0x1
  445ab0:	lsl	x4, x20, #4
  445ab4:	add	x6, x5, x4
  445ab8:	ldrb	w6, [x6, #8]
  445abc:	cmp	w6, #0x8
  445ac0:	b.ne	445a98 <_obstack_memory_used@@Base+0x38a8>  // b.any
  445ac4:	ldr	x3, [x5, x4]
  445ac8:	cmp	x3, #0x3f
  445acc:	b.gt	445a98 <_obstack_memory_used@@Base+0x38a8>
  445ad0:	ldr	x4, [x21, #160]
  445ad4:	lsr	x3, x4, x3
  445ad8:	tbz	w3, #0, 445a98 <_obstack_memory_used@@Base+0x38a8>
  445adc:	ldp	x26, x0, [x24, #232]
  445ae0:	str	x27, [sp, #80]
  445ae4:	ldr	x27, [x24, #248]
  445ae8:	cmp	x26, x0
  445aec:	b.eq	445b54 <_obstack_memory_used@@Base+0x3964>  // b.none
  445af0:	mov	x1, #0x30                  	// #48
  445af4:	mov	x0, #0x1                   	// #1
  445af8:	bl	4044c0 <calloc@plt>
  445afc:	str	x0, [x27, x26, lsl #3]
  445b00:	add	x1, x26, #0x1
  445b04:	cbz	x0, 445b3c <_obstack_memory_used@@Base+0x394c>
  445b08:	ldr	x27, [sp, #80]
  445b0c:	str	x1, [x24, #232]
  445b10:	stp	x23, x20, [x0]
  445b14:	ldr	x2, [x25]
  445b18:	cmp	x19, x2
  445b1c:	b.lt	445aa0 <_obstack_memory_used@@Base+0x38b0>  // b.tstop
  445b20:	ldp	x19, x20, [sp, #16]
  445b24:	ldp	x23, x24, [sp, #48]
  445b28:	ldp	x25, x26, [sp, #64]
  445b2c:	mov	w0, #0x0                   	// #0
  445b30:	ldp	x21, x22, [sp, #32]
  445b34:	ldp	x29, x30, [sp], #96
  445b38:	ret
  445b3c:	mov	w0, #0xc                   	// #12
  445b40:	ldp	x19, x20, [sp, #16]
  445b44:	ldp	x23, x24, [sp, #48]
  445b48:	ldp	x25, x26, [sp, #64]
  445b4c:	ldr	x27, [sp, #80]
  445b50:	b	445b30 <_obstack_memory_used@@Base+0x3940>
  445b54:	mov	x0, x27
  445b58:	lsl	x1, x26, #4
  445b5c:	bl	404530 <realloc@plt>
  445b60:	mov	x27, x0
  445b64:	lsl	x0, x26, #1
  445b68:	cbz	x27, 445b3c <_obstack_memory_used@@Base+0x394c>
  445b6c:	stp	x0, x27, [x24, #240]
  445b70:	ldr	x26, [x24, #232]
  445b74:	b	445af0 <_obstack_memory_used@@Base+0x3900>
  445b78:	stp	x29, x30, [sp, #-32]!
  445b7c:	mov	x29, sp
  445b80:	stp	x19, x20, [sp, #16]
  445b84:	mov	x20, x0
  445b88:	tbnz	x1, #63, 445c1c <_obstack_memory_used@@Base+0x3a2c>
  445b8c:	ldr	x0, [x0, #88]
  445b90:	cmp	x0, x1
  445b94:	b.eq	445c48 <_obstack_memory_used@@Base+0x3a58>  // b.none
  445b98:	ldr	w0, [x20, #144]
  445b9c:	cmp	w0, #0x1
  445ba0:	b.le	445be4 <_obstack_memory_used@@Base+0x39f4>
  445ba4:	ldr	x0, [x20, #16]
  445ba8:	b	445bb4 <_obstack_memory_used@@Base+0x39c4>
  445bac:	cmn	x1, #0x1
  445bb0:	b.eq	445c1c <_obstack_memory_used@@Base+0x3a2c>  // b.none
  445bb4:	ldr	w19, [x0, x1, lsl #2]
  445bb8:	sub	x1, x1, #0x1
  445bbc:	cmn	w19, #0x1
  445bc0:	b.eq	445bac <_obstack_memory_used@@Base+0x39bc>  // b.none
  445bc4:	ldrb	w0, [x20, #142]
  445bc8:	cbnz	w0, 445c5c <_obstack_memory_used@@Base+0x3a6c>
  445bcc:	cmp	w19, #0xa
  445bd0:	mov	w0, #0x0                   	// #0
  445bd4:	b.eq	445c2c <_obstack_memory_used@@Base+0x3a3c>  // b.none
  445bd8:	ldp	x19, x20, [sp, #16]
  445bdc:	ldp	x29, x30, [sp], #32
  445be0:	ret
  445be4:	ldr	x2, [x20, #8]
  445be8:	mov	w0, #0x1                   	// #1
  445bec:	ldr	x3, [x20, #128]
  445bf0:	ldrb	w2, [x2, x1]
  445bf4:	ubfx	x1, x2, #6, #2
  445bf8:	ldr	x1, [x3, x1, lsl #3]
  445bfc:	lsr	x1, x1, x2
  445c00:	tbnz	w1, #0, 445bd8 <_obstack_memory_used@@Base+0x39e8>
  445c04:	cmp	w2, #0xa
  445c08:	b.eq	445c2c <_obstack_memory_used@@Base+0x3a3c>  // b.none
  445c0c:	mov	w0, #0x0                   	// #0
  445c10:	ldp	x19, x20, [sp, #16]
  445c14:	ldp	x29, x30, [sp], #32
  445c18:	ret
  445c1c:	ldr	w0, [x20, #112]
  445c20:	ldp	x19, x20, [sp, #16]
  445c24:	ldp	x29, x30, [sp], #32
  445c28:	ret
  445c2c:	ldrb	w0, [x20, #141]
  445c30:	ldp	x19, x20, [sp, #16]
  445c34:	cmp	w0, #0x0
  445c38:	cset	w0, ne  // ne = any
  445c3c:	ldp	x29, x30, [sp], #32
  445c40:	lsl	w0, w0, #1
  445c44:	ret
  445c48:	tst	x2, #0x2
  445c4c:	mov	w0, #0x8                   	// #8
  445c50:	mov	w1, #0xa                   	// #10
  445c54:	csel	w0, w0, w1, ne  // ne = any
  445c58:	b	445bd8 <_obstack_memory_used@@Base+0x39e8>
  445c5c:	mov	w0, w19
  445c60:	bl	404990 <iswalnum@plt>
  445c64:	cmp	w19, #0x5f
  445c68:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  445c6c:	mov	w0, #0x1                   	// #1
  445c70:	b.ne	445bd8 <_obstack_memory_used@@Base+0x39e8>  // b.any
  445c74:	b	445bcc <_obstack_memory_used@@Base+0x39dc>
  445c78:	mov	x4, x1
  445c7c:	mov	x5, x0
  445c80:	ldr	x0, [x0, #8]
  445c84:	mov	x1, x2
  445c88:	ldrb	w3, [x4, #8]
  445c8c:	ldrb	w2, [x0, x2]
  445c90:	cmp	w3, #0x5
  445c94:	b.eq	445d38 <_obstack_memory_used@@Base+0x3b48>  // b.none
  445c98:	b.hi	445d28 <_obstack_memory_used@@Base+0x3b38>  // b.pmore
  445c9c:	cmp	w3, #0x1
  445ca0:	b.eq	445d70 <_obstack_memory_used@@Base+0x3b80>  // b.none
  445ca4:	cmp	w3, #0x3
  445ca8:	b.ne	445d98 <_obstack_memory_used@@Base+0x3ba8>  // b.any
  445cac:	ldr	x0, [x4]
  445cb0:	ubfx	x3, x2, #6, #2
  445cb4:	ldr	x0, [x0, x3, lsl #3]
  445cb8:	lsr	x2, x0, x2
  445cbc:	and	w0, w2, #0x1
  445cc0:	tbz	w2, #0, 445d6c <_obstack_memory_used@@Base+0x3b7c>
  445cc4:	stp	x29, x30, [sp, #-32]!
  445cc8:	mov	w0, #0x1                   	// #1
  445ccc:	mov	x29, sp
  445cd0:	str	x19, [sp, #16]
  445cd4:	ldr	w19, [x4, #8]
  445cd8:	tst	w19, #0x3ff00
  445cdc:	b.eq	445d1c <_obstack_memory_used@@Base+0x3b2c>  // b.none
  445ce0:	ldr	w2, [x5, #160]
  445ce4:	mov	x0, x5
  445ce8:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  445cec:	mov	w1, w0
  445cf0:	ubfx	x2, x19, #8, #10
  445cf4:	tbz	w19, #10, 445d5c <_obstack_memory_used@@Base+0x3b6c>
  445cf8:	mov	w0, #0x0                   	// #0
  445cfc:	tbz	w1, #0, 445d1c <_obstack_memory_used@@Base+0x3b2c>
  445d00:	tbnz	w2, #3, 445d1c <_obstack_memory_used@@Base+0x3b2c>
  445d04:	tbz	w2, #5, 445d10 <_obstack_memory_used@@Base+0x3b20>
  445d08:	mov	w0, #0x0                   	// #0
  445d0c:	tbz	w1, #1, 445d1c <_obstack_memory_used@@Base+0x3b2c>
  445d10:	ubfx	x0, x1, #3, #1
  445d14:	tst	x2, #0x80
  445d18:	csinc	w0, w0, wzr, ne  // ne = any
  445d1c:	ldr	x19, [sp, #16]
  445d20:	ldp	x29, x30, [sp], #32
  445d24:	ret
  445d28:	cmp	w3, #0x7
  445d2c:	mov	w0, #0x0                   	// #0
  445d30:	b.ne	445d58 <_obstack_memory_used@@Base+0x3b68>  // b.any
  445d34:	tbnz	w2, #7, 445d54 <_obstack_memory_used@@Base+0x3b64>
  445d38:	cmp	w2, #0xa
  445d3c:	b.eq	445d84 <_obstack_memory_used@@Base+0x3b94>  // b.none
  445d40:	cbnz	w2, 445cc4 <_obstack_memory_used@@Base+0x3ad4>
  445d44:	ldr	x2, [x5, #152]
  445d48:	mov	w0, #0x0                   	// #0
  445d4c:	ldr	x2, [x2, #216]
  445d50:	tbz	w2, #7, 445cc4 <_obstack_memory_used@@Base+0x3ad4>
  445d54:	ret
  445d58:	ret
  445d5c:	tbz	w2, #3, 445d04 <_obstack_memory_used@@Base+0x3b14>
  445d60:	tbz	w1, #0, 445d04 <_obstack_memory_used@@Base+0x3b14>
  445d64:	mov	w0, #0x0                   	// #0
  445d68:	b	445d1c <_obstack_memory_used@@Base+0x3b2c>
  445d6c:	ret
  445d70:	ldrb	w3, [x4]
  445d74:	mov	w0, #0x0                   	// #0
  445d78:	cmp	w3, w2
  445d7c:	b.eq	445cc4 <_obstack_memory_used@@Base+0x3ad4>  // b.none
  445d80:	ret
  445d84:	ldr	x2, [x5, #152]
  445d88:	mov	w0, #0x0                   	// #0
  445d8c:	ldr	x2, [x2, #216]
  445d90:	tbnz	w2, #6, 445cc4 <_obstack_memory_used@@Base+0x3ad4>
  445d94:	ret
  445d98:	mov	w0, #0x0                   	// #0
  445d9c:	ret
  445da0:	stp	x29, x30, [sp, #-48]!
  445da4:	mov	x29, sp
  445da8:	str	x21, [sp, #32]
  445dac:	mov	x21, x2
  445db0:	ldr	w2, [x0, #160]
  445db4:	stp	x19, x20, [sp, #16]
  445db8:	mov	x19, x1
  445dbc:	mov	x20, x0
  445dc0:	mov	x1, x3
  445dc4:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  445dc8:	cmp	x19, #0x0
  445dcc:	b.le	445e54 <_obstack_memory_used@@Base+0x3c64>
  445dd0:	ldr	x1, [x20, #152]
  445dd4:	and	w8, w0, #0x8
  445dd8:	ldr	x5, [x21]
  445ddc:	and	w7, w0, #0x2
  445de0:	ldr	x1, [x1]
  445de4:	and	w6, w0, #0x1
  445de8:	mov	x3, #0x0                   	// #0
  445dec:	nop
  445df0:	ldr	x0, [x5, x3, lsl #3]
  445df4:	add	x4, x1, x0, lsl #4
  445df8:	ldr	w2, [x4, #8]
  445dfc:	ldrb	w4, [x4, #8]
  445e00:	ubfx	x2, x2, #8, #10
  445e04:	cmp	w4, #0x2
  445e08:	b.ne	445e48 <_obstack_memory_used@@Base+0x3c58>  // b.any
  445e0c:	cbz	w2, 445e2c <_obstack_memory_used@@Base+0x3c3c>
  445e10:	tbz	w2, #2, 445e3c <_obstack_memory_used@@Base+0x3c4c>
  445e14:	cbz	w6, 445e48 <_obstack_memory_used@@Base+0x3c58>
  445e18:	tbnz	w2, #3, 445e48 <_obstack_memory_used@@Base+0x3c58>
  445e1c:	tbz	w2, #5, 445e24 <_obstack_memory_used@@Base+0x3c34>
  445e20:	cbz	w7, 445e48 <_obstack_memory_used@@Base+0x3c58>
  445e24:	tbz	w2, #7, 445e2c <_obstack_memory_used@@Base+0x3c3c>
  445e28:	cbz	w8, 445e48 <_obstack_memory_used@@Base+0x3c58>
  445e2c:	ldp	x19, x20, [sp, #16]
  445e30:	ldr	x21, [sp, #32]
  445e34:	ldp	x29, x30, [sp], #48
  445e38:	ret
  445e3c:	tbz	w2, #3, 445e1c <_obstack_memory_used@@Base+0x3c2c>
  445e40:	cbz	w6, 445e1c <_obstack_memory_used@@Base+0x3c2c>
  445e44:	nop
  445e48:	add	x3, x3, #0x1
  445e4c:	cmp	x3, x19
  445e50:	b.ne	445df0 <_obstack_memory_used@@Base+0x3c00>  // b.any
  445e54:	mov	x0, #0x0                   	// #0
  445e58:	ldp	x19, x20, [sp, #16]
  445e5c:	ldr	x21, [sp, #32]
  445e60:	ldp	x29, x30, [sp], #48
  445e64:	ret
  445e68:	stp	x29, x30, [sp, #-128]!
  445e6c:	mov	x29, sp
  445e70:	stp	x19, x20, [sp, #16]
  445e74:	mov	x19, x0
  445e78:	ldr	x20, [x0, #40]
  445e7c:	stp	x21, x22, [sp, #32]
  445e80:	mov	x21, x1
  445e84:	stp	x23, x24, [sp, #48]
  445e88:	cmp	x20, x1
  445e8c:	mov	w24, w2
  445e90:	b.le	446004 <_obstack_memory_used@@Base+0x3e14>
  445e94:	ldr	w0, [x0, #144]
  445e98:	cmp	w0, #0x1
  445e9c:	b.le	445ea4 <_obstack_memory_used@@Base+0x3cb4>
  445ea0:	str	xzr, [x19, #32]
  445ea4:	ldrb	w0, [x19, #139]
  445ea8:	tst	x24, #0x1
  445eac:	ldr	x3, [x19, #80]
  445eb0:	mov	w1, #0x4                   	// #4
  445eb4:	ldr	x2, [x19, #96]
  445eb8:	mov	w4, #0x6                   	// #6
  445ebc:	csel	w1, w1, w4, ne  // ne = any
  445ec0:	stp	xzr, xzr, [x19, #40]
  445ec4:	mov	x20, x21
  445ec8:	str	xzr, [x19, #56]
  445ecc:	str	x3, [x19, #88]
  445ed0:	str	x2, [x19, #104]
  445ed4:	str	w1, [x19, #112]
  445ed8:	strb	wzr, [x19, #140]
  445edc:	cbz	w0, 445f98 <_obstack_memory_used@@Base+0x3da8>
  445ee0:	cbz	x20, 445fa4 <_obstack_memory_used@@Base+0x3db4>
  445ee4:	ldp	x23, x0, [x19, #48]
  445ee8:	ldrb	w1, [x19, #140]
  445eec:	cmp	x0, x20
  445ef0:	b.le	44600c <_obstack_memory_used@@Base+0x3e1c>
  445ef4:	cbnz	w1, 4460f0 <_obstack_memory_used@@Base+0x3f00>
  445ef8:	mov	w2, w24
  445efc:	sub	x1, x20, #0x1
  445f00:	mov	x0, x19
  445f04:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  445f08:	str	w0, [x19, #112]
  445f0c:	sub	x2, x23, x20
  445f10:	ldr	w0, [x19, #144]
  445f14:	cmp	w0, #0x1
  445f18:	b.gt	445fd8 <_obstack_memory_used@@Base+0x3de8>
  445f1c:	ldrb	w0, [x19, #139]
  445f20:	cbnz	w0, 446134 <_obstack_memory_used@@Base+0x3f44>
  445f24:	ldr	x3, [x19, #56]
  445f28:	str	x2, [x19, #48]
  445f2c:	ldr	x1, [x19, #88]
  445f30:	sub	x2, x3, x20
  445f34:	ldr	x3, [x19, #104]
  445f38:	str	x2, [x19, #56]
  445f3c:	ldr	w2, [x19, #144]
  445f40:	sub	x1, x1, x20
  445f44:	sub	x3, x3, x20
  445f48:	cbnz	w0, 445f58 <_obstack_memory_used@@Base+0x3d68>
  445f4c:	ldr	x0, [x19, #8]
  445f50:	add	x20, x0, x20
  445f54:	str	x20, [x19, #8]
  445f58:	str	x21, [x19, #40]
  445f5c:	cmp	w2, #0x1
  445f60:	str	x1, [x19, #88]
  445f64:	str	x3, [x19, #104]
  445f68:	b.le	445fc8 <_obstack_memory_used@@Base+0x3dd8>
  445f6c:	ldrb	w0, [x19, #136]
  445f70:	cbnz	w0, 445ff4 <_obstack_memory_used@@Base+0x3e04>
  445f74:	mov	x0, x19
  445f78:	bl	442d10 <_obstack_memory_used@@Base+0xb20>
  445f7c:	mov	w0, #0x0                   	// #0
  445f80:	str	xzr, [x19, #72]
  445f84:	ldp	x19, x20, [sp, #16]
  445f88:	ldp	x21, x22, [sp, #32]
  445f8c:	ldp	x23, x24, [sp, #48]
  445f90:	ldp	x29, x30, [sp], #128
  445f94:	ret
  445f98:	ldr	x0, [x19]
  445f9c:	str	x0, [x19, #8]
  445fa0:	cbnz	x20, 445ee4 <_obstack_memory_used@@Base+0x3cf4>
  445fa4:	ldr	x1, [x19, #88]
  445fa8:	str	x21, [x19, #40]
  445fac:	ldr	x3, [x19, #104]
  445fb0:	str	x1, [x19, #88]
  445fb4:	ldr	w2, [x19, #144]
  445fb8:	str	x3, [x19, #104]
  445fbc:	cmp	w2, #0x1
  445fc0:	b.gt	445f6c <_obstack_memory_used@@Base+0x3d7c>
  445fc4:	nop
  445fc8:	ldrb	w0, [x19, #139]
  445fcc:	cbnz	w0, 446300 <_obstack_memory_used@@Base+0x4110>
  445fd0:	str	x1, [x19, #48]
  445fd4:	b	445f7c <_obstack_memory_used@@Base+0x3d8c>
  445fd8:	ldr	x0, [x19, #16]
  445fdc:	lsl	x2, x2, #2
  445fe0:	add	x1, x0, x20, lsl #2
  445fe4:	bl	403f80 <memmove@plt>
  445fe8:	ldr	x2, [x19, #48]
  445fec:	sub	x2, x2, x20
  445ff0:	b	445f1c <_obstack_memory_used@@Base+0x3d2c>
  445ff4:	mov	x0, x19
  445ff8:	bl	442ef0 <_obstack_memory_used@@Base+0xd00>
  445ffc:	cbz	w0, 445f7c <_obstack_memory_used@@Base+0x3d8c>
  446000:	b	445f84 <_obstack_memory_used@@Base+0x3d94>
  446004:	sub	x20, x1, x20
  446008:	b	445ee0 <_obstack_memory_used@@Base+0x3cf0>
  44600c:	cbnz	w1, 4464c0 <_obstack_memory_used@@Base+0x42d0>
  446010:	ldr	w2, [x19, #144]
  446014:	str	xzr, [x19, #48]
  446018:	cmp	w2, #0x1
  44601c:	ldr	x1, [x19, #40]
  446020:	b.le	44635c <_obstack_memory_used@@Base+0x416c>
  446024:	ldrb	w3, [x19, #137]
  446028:	cbnz	w3, 446250 <_obstack_memory_used@@Base+0x4060>
  44602c:	add	x22, x1, x0
  446030:	cmp	x21, x22
  446034:	b.le	4465d0 <_obstack_memory_used@@Base+0x43e0>
  446038:	stp	x27, x28, [sp, #80]
  44603c:	add	x27, x19, #0x20
  446040:	stp	x25, x26, [sp, #64]
  446044:	nop
  446048:	mov	x3, x27
  44604c:	ldr	x1, [x19]
  446050:	add	x0, sp, #0x78
  446054:	ldr	x25, [x19, #80]
  446058:	add	x1, x1, x22
  44605c:	ldr	x26, [x19, #32]
  446060:	sub	x25, x25, x22
  446064:	mov	x2, x25
  446068:	bl	441e18 <argp_parse@@Base+0xdf30>
  44606c:	sub	x1, x0, #0x1
  446070:	cmn	x1, #0x4
  446074:	b.hi	4464e8 <_obstack_memory_used@@Base+0x42f8>  // b.pmore
  446078:	ldr	w28, [sp, #120]
  44607c:	add	x22, x22, x0
  446080:	cmp	x21, x22
  446084:	b.gt	446048 <_obstack_memory_used@@Base+0x3e58>
  446088:	sub	x22, x22, x21
  44608c:	str	x22, [x19, #48]
  446090:	cmn	w28, #0x1
  446094:	b.eq	44650c <_obstack_memory_used@@Base+0x431c>  // b.none
  446098:	ldrb	w0, [x19, #142]
  44609c:	cbnz	w0, 446570 <_obstack_memory_used@@Base+0x4380>
  4460a0:	cmp	w28, #0xa
  4460a4:	mov	w0, #0x0                   	// #0
  4460a8:	b.ne	4460bc <_obstack_memory_used@@Base+0x3ecc>  // b.any
  4460ac:	ldrb	w0, [x19, #141]
  4460b0:	cmp	w0, #0x0
  4460b4:	cset	w0, ne  // ne = any
  4460b8:	lsl	w0, w0, #1
  4460bc:	ldp	x25, x26, [sp, #64]
  4460c0:	ldp	x27, x28, [sp, #80]
  4460c4:	str	w0, [x19, #112]
  4460c8:	cmp	x22, #0x0
  4460cc:	cbnz	x22, 44652c <_obstack_memory_used@@Base+0x433c>
  4460d0:	ldrb	w0, [x19, #139]
  4460d4:	ldr	x1, [x19, #88]
  4460d8:	str	x22, [x19, #56]
  4460dc:	ldr	x3, [x19, #104]
  4460e0:	sub	x1, x1, x20
  4460e4:	ldr	w2, [x19, #144]
  4460e8:	sub	x3, x3, x20
  4460ec:	b	445f48 <_obstack_memory_used@@Base+0x3d58>
  4460f0:	mov	x1, x23
  4460f4:	mov	x2, #0x0                   	// #0
  4460f8:	stp	x25, x26, [sp, #64]
  4460fc:	ldr	x25, [x19, #24]
  446100:	b	446114 <_obstack_memory_used@@Base+0x3f24>
  446104:	b.ge	4462f4 <_obstack_memory_used@@Base+0x4104>  // b.tcont
  446108:	add	x2, x0, #0x1
  44610c:	cmp	x2, x1
  446110:	b.ge	446150 <_obstack_memory_used@@Base+0x3f60>  // b.tcont
  446114:	add	x0, x2, x1
  446118:	add	x0, x0, x0, lsr #63
  44611c:	asr	x0, x0, #1
  446120:	ldr	x3, [x25, x0, lsl #3]
  446124:	cmp	x3, x20
  446128:	b.le	446104 <_obstack_memory_used@@Base+0x3f14>
  44612c:	mov	x1, x0
  446130:	b	44610c <_obstack_memory_used@@Base+0x3f1c>
  446134:	ldr	x0, [x19, #8]
  446138:	add	x1, x0, x20
  44613c:	bl	403f80 <memmove@plt>
  446140:	ldr	x2, [x19, #48]
  446144:	ldrb	w0, [x19, #139]
  446148:	sub	x2, x2, x20
  44614c:	b	445f24 <_obstack_memory_used@@Base+0x3d34>
  446150:	cmp	x3, x20
  446154:	add	x22, x0, #0x1
  446158:	b.ge	4462f4 <_obstack_memory_used@@Base+0x4104>  // b.tcont
  44615c:	mov	x1, x0
  446160:	mov	w2, w24
  446164:	mov	x0, x19
  446168:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  44616c:	str	w0, [x19, #112]
  446170:	cmp	x20, x22
  446174:	ccmp	x20, x23, #0x0, eq  // eq = none
  446178:	b.lt	446410 <_obstack_memory_used@@Base+0x4220>  // b.tstop
  44617c:	ldr	x1, [x19, #80]
  446180:	strb	wzr, [x19, #140]
  446184:	ldr	x3, [x19, #96]
  446188:	sub	x1, x1, x21
  44618c:	add	x0, x1, x20
  446190:	str	x0, [x19, #88]
  446194:	sub	x3, x3, x21
  446198:	cmp	x22, #0x0
  44619c:	add	x0, x3, x20
  4461a0:	str	x0, [x19, #104]
  4461a4:	sub	x2, x25, #0x8
  4461a8:	b.gt	4461b8 <_obstack_memory_used@@Base+0x3fc8>
  4461ac:	b	4461c4 <_obstack_memory_used@@Base+0x3fd4>
  4461b0:	subs	x22, x22, #0x1
  4461b4:	b.eq	4461c4 <_obstack_memory_used@@Base+0x3fd4>  // b.none
  4461b8:	ldr	x0, [x2, x22, lsl #3]
  4461bc:	cmp	x0, x20
  4461c0:	b.eq	4461b0 <_obstack_memory_used@@Base+0x3fc0>  // b.none
  4461c4:	cmp	x22, x23
  4461c8:	b.ge	4463e4 <_obstack_memory_used@@Base+0x41f4>  // b.tcont
  4461cc:	ldr	x2, [x19, #16]
  4461d0:	b	4461e0 <_obstack_memory_used@@Base+0x3ff0>
  4461d4:	add	x22, x22, #0x1
  4461d8:	cmp	x22, x23
  4461dc:	b.eq	4463e8 <_obstack_memory_used@@Base+0x41f8>  // b.none
  4461e0:	ldr	w0, [x2, x22, lsl #2]
  4461e4:	cmn	w0, #0x1
  4461e8:	b.eq	4461d4 <_obstack_memory_used@@Base+0x3fe4>  // b.none
  4461ec:	ldr	x2, [x25, x22, lsl #3]
  4461f0:	sub	x2, x2, x20
  4461f4:	str	x2, [x19, #48]
  4461f8:	cmp	x2, #0x0
  4461fc:	cbz	x2, 44623c <_obstack_memory_used@@Base+0x404c>
  446200:	b.le	44621c <_obstack_memory_used@@Base+0x402c>
  446204:	ldr	x0, [x19, #16]
  446208:	mov	w3, #0xffffffff            	// #-1
  44620c:	add	x1, x0, x2, lsl #2
  446210:	str	w3, [x0], #4
  446214:	cmp	x1, x0
  446218:	b.ne	446210 <_obstack_memory_used@@Base+0x4020>  // b.any
  44621c:	ldr	x0, [x19, #8]
  446220:	mov	w1, #0xff                  	// #255
  446224:	bl	404410 <memset@plt>
  446228:	ldr	x1, [x19, #88]
  44622c:	ldr	x3, [x19, #104]
  446230:	sub	x1, x1, x20
  446234:	ldr	x2, [x19, #48]
  446238:	sub	x3, x3, x20
  44623c:	ldrb	w0, [x19, #139]
  446240:	ldp	x25, x26, [sp, #64]
  446244:	str	x2, [x19, #56]
  446248:	ldr	w2, [x19, #144]
  44624c:	b	445f48 <_obstack_memory_used@@Base+0x3d58>
  446250:	ldr	x3, [x19]
  446254:	sub	x2, x20, w2, sxtw
  446258:	stp	x25, x26, [sp, #64]
  44625c:	sub	x22, x20, #0x1
  446260:	add	x25, x3, x1
  446264:	add	x2, x25, x2
  446268:	add	x22, x25, x22
  44626c:	cmp	x3, x2
  446270:	csel	x3, x3, x2, cs  // cs = hs, nlast
  446274:	cmp	x22, x3
  446278:	b.cs	44628c <_obstack_memory_used@@Base+0x409c>  // b.hs, b.nlast
  44627c:	b	4464ac <_obstack_memory_used@@Base+0x42bc>
  446280:	sub	x22, x22, #0x1
  446284:	cmp	x22, x3
  446288:	b.cc	4464ac <_obstack_memory_used@@Base+0x42bc>  // b.lo, b.ul, b.last
  44628c:	ldrb	w2, [x22]
  446290:	and	w2, w2, #0xc0
  446294:	cmp	w2, #0x80
  446298:	b.eq	446280 <_obstack_memory_used@@Base+0x4090>  // b.none
  44629c:	ldr	x2, [x19, #88]
  4462a0:	mov	x1, x22
  4462a4:	ldr	x3, [x19, #120]
  4462a8:	add	x2, x25, x2
  4462ac:	sub	x2, x2, x22
  4462b0:	cbnz	x3, 446598 <_obstack_memory_used@@Base+0x43a8>
  4462b4:	add	x3, sp, #0x78
  4462b8:	add	x0, sp, #0x6c
  4462bc:	str	xzr, [sp, #120]
  4462c0:	bl	441e18 <argp_parse@@Base+0xdf30>
  4462c4:	add	x1, x25, x20
  4462c8:	sub	x22, x1, x22
  4462cc:	cmp	x0, x22
  4462d0:	b.cc	4465dc <_obstack_memory_used@@Base+0x43ec>  // b.lo, b.ul, b.last
  4462d4:	stp	x27, x28, [sp, #80]
  4462d8:	cmn	x0, #0x3
  4462dc:	b.ls	4463f4 <_obstack_memory_used@@Base+0x4204>  // b.plast
  4462e0:	ldr	x1, [x19, #40]
  4462e4:	ldr	x0, [x19, #56]
  4462e8:	ldp	x25, x26, [sp, #64]
  4462ec:	ldp	x27, x28, [sp, #80]
  4462f0:	b	44602c <_obstack_memory_used@@Base+0x3e3c>
  4462f4:	mov	x22, x0
  4462f8:	sub	x0, x0, #0x1
  4462fc:	b	44615c <_obstack_memory_used@@Base+0x3f6c>
  446300:	ldrb	w0, [x19, #136]
  446304:	cbnz	w0, 4464b4 <_obstack_memory_used@@Base+0x42c4>
  446308:	ldr	x2, [x19, #120]
  44630c:	cbz	x2, 445f7c <_obstack_memory_used@@Base+0x3d8c>
  446310:	ldr	x4, [x19, #64]
  446314:	ldr	x0, [x19, #48]
  446318:	cmp	x4, x1
  44631c:	csel	x4, x4, x1, le
  446320:	cmp	x4, x0
  446324:	b.gt	446334 <_obstack_memory_used@@Base+0x4144>
  446328:	b	44658c <_obstack_memory_used@@Base+0x439c>
  44632c:	ldr	x21, [x19, #40]
  446330:	ldr	x2, [x19, #120]
  446334:	ldp	x1, x3, [x19]
  446338:	add	x1, x1, x0
  44633c:	ldrb	w1, [x1, x21]
  446340:	ldrb	w1, [x2, x1]
  446344:	strb	w1, [x3, x0]
  446348:	add	x0, x0, #0x1
  44634c:	cmp	x4, x0
  446350:	b.ne	44632c <_obstack_memory_used@@Base+0x413c>  // b.any
  446354:	stp	x4, x4, [x19, #48]
  446358:	b	445f7c <_obstack_memory_used@@Base+0x3d8c>
  44635c:	ldr	x22, [x19]
  446360:	ldr	x3, [x19, #120]
  446364:	add	x22, x22, x20
  446368:	add	x22, x22, x1
  44636c:	ldurb	w0, [x22, #-1]
  446370:	str	xzr, [x19, #56]
  446374:	cbz	x3, 446380 <_obstack_memory_used@@Base+0x4190>
  446378:	and	x0, x0, #0xff
  44637c:	ldrb	w0, [x3, x0]
  446380:	ldr	x4, [x19, #128]
  446384:	ubfx	x1, x0, #6, #2
  446388:	mov	w3, #0x1                   	// #1
  44638c:	ldr	x1, [x4, x1, lsl #3]
  446390:	lsr	x1, x1, x0
  446394:	tbnz	w1, #0, 4463b8 <_obstack_memory_used@@Base+0x41c8>
  446398:	cmp	w0, #0xa
  44639c:	mov	w3, #0x0                   	// #0
  4463a0:	b.ne	4463b8 <_obstack_memory_used@@Base+0x41c8>  // b.any
  4463a4:	ldrb	w0, [x19, #141]
  4463a8:	cmp	w0, #0x0
  4463ac:	cset	w3, ne  // ne = any
  4463b0:	lsl	w3, w3, #1
  4463b4:	nop
  4463b8:	ldrb	w0, [x19, #139]
  4463bc:	str	w3, [x19, #112]
  4463c0:	ldr	x1, [x19, #88]
  4463c4:	ldr	x3, [x19, #104]
  4463c8:	sub	x1, x1, x20
  4463cc:	sub	x3, x3, x20
  4463d0:	cbz	w0, 445f4c <_obstack_memory_used@@Base+0x3d5c>
  4463d4:	str	x21, [x19, #40]
  4463d8:	str	x1, [x19, #88]
  4463dc:	str	x3, [x19, #104]
  4463e0:	b	445fcc <_obstack_memory_used@@Base+0x3ddc>
  4463e4:	b.ne	4461ec <_obstack_memory_used@@Base+0x3ffc>  // b.any
  4463e8:	mov	x2, #0x0                   	// #0
  4463ec:	str	xzr, [x19, #48]
  4463f0:	b	44623c <_obstack_memory_used@@Base+0x404c>
  4463f4:	ldr	w28, [sp, #108]
  4463f8:	sub	x22, x0, x22
  4463fc:	str	xzr, [x19, #32]
  446400:	str	x22, [x19, #48]
  446404:	cmn	w28, #0x1
  446408:	b.ne	446098 <_obstack_memory_used@@Base+0x3ea8>  // b.any
  44640c:	b	4462e0 <_obstack_memory_used@@Base+0x40f0>
  446410:	ldr	x0, [x25, x22, lsl #3]
  446414:	cmp	x0, x20
  446418:	b.ne	44617c <_obstack_memory_used@@Base+0x3f8c>  // b.any
  44641c:	ldr	x0, [x19, #16]
  446420:	sub	x2, x23, x20
  446424:	lsl	x2, x2, #2
  446428:	add	x1, x0, x20, lsl #2
  44642c:	bl	403f80 <memmove@plt>
  446430:	ldr	x0, [x19, #8]
  446434:	ldr	x2, [x19, #48]
  446438:	add	x1, x0, x20
  44643c:	sub	x2, x2, x20
  446440:	bl	403f80 <memmove@plt>
  446444:	ldp	x0, x1, [x19, #48]
  446448:	sub	x0, x0, x20
  44644c:	str	x0, [x19, #48]
  446450:	cmp	x0, #0x0
  446454:	sub	x0, x1, x20
  446458:	str	x0, [x19, #56]
  44645c:	b.le	44648c <_obstack_memory_used@@Base+0x429c>
  446460:	ldr	x2, [x19, #24]
  446464:	mov	x0, #0x0                   	// #0
  446468:	add	x3, x2, x20, lsl #3
  44646c:	nop
  446470:	ldr	x1, [x3, x0, lsl #3]
  446474:	sub	x1, x1, x20
  446478:	str	x1, [x2, x0, lsl #3]
  44647c:	add	x0, x0, #0x1
  446480:	ldr	x1, [x19, #48]
  446484:	cmp	x1, x0
  446488:	b.gt	446470 <_obstack_memory_used@@Base+0x4280>
  44648c:	ldr	x1, [x19, #88]
  446490:	ldr	x3, [x19, #104]
  446494:	sub	x1, x1, x20
  446498:	ldrb	w0, [x19, #139]
  44649c:	ldr	w2, [x19, #144]
  4464a0:	sub	x3, x3, x20
  4464a4:	ldp	x25, x26, [sp, #64]
  4464a8:	b	445f48 <_obstack_memory_used@@Base+0x3d58>
  4464ac:	ldp	x25, x26, [sp, #64]
  4464b0:	b	44602c <_obstack_memory_used@@Base+0x3e3c>
  4464b4:	mov	x0, x19
  4464b8:	bl	442c70 <_obstack_memory_used@@Base+0xa80>
  4464bc:	b	445f7c <_obstack_memory_used@@Base+0x3d8c>
  4464c0:	ldr	x2, [x19, #80]
  4464c4:	strb	wzr, [x19, #140]
  4464c8:	ldr	x1, [x19, #96]
  4464cc:	sub	x2, x2, x21
  4464d0:	add	x2, x2, x20
  4464d4:	str	x2, [x19, #88]
  4464d8:	sub	x1, x1, x21
  4464dc:	add	x1, x1, x20
  4464e0:	str	x1, [x19, #104]
  4464e4:	b	446010 <_obstack_memory_used@@Base+0x3e20>
  4464e8:	cmp	x0, #0x0
  4464ec:	mov	w28, #0x0                   	// #0
  4464f0:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  4464f4:	b.eq	446500 <_obstack_memory_used@@Base+0x4310>  // b.none
  4464f8:	ldr	x0, [x19]
  4464fc:	ldrb	w28, [x0, x22]
  446500:	mov	x0, #0x1                   	// #1
  446504:	str	x26, [x19, #32]
  446508:	b	44607c <_obstack_memory_used@@Base+0x3e8c>
  44650c:	ldp	x25, x26, [sp, #64]
  446510:	ldp	x27, x28, [sp, #80]
  446514:	mov	w2, w24
  446518:	sub	x1, x23, #0x1
  44651c:	mov	x0, x19
  446520:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  446524:	str	w0, [x19, #112]
  446528:	b	4460c8 <_obstack_memory_used@@Base+0x3ed8>
  44652c:	b.le	44654c <_obstack_memory_used@@Base+0x435c>
  446530:	ldr	x0, [x19, #16]
  446534:	mov	w2, #0xffffffff            	// #-1
  446538:	add	x1, x0, x22, lsl #2
  44653c:	nop
  446540:	str	w2, [x0], #4
  446544:	cmp	x1, x0
  446548:	b.ne	446540 <_obstack_memory_used@@Base+0x4350>  // b.any
  44654c:	ldrb	w0, [x19, #139]
  446550:	cbz	w0, 4460d4 <_obstack_memory_used@@Base+0x3ee4>
  446554:	ldr	x0, [x19, #8]
  446558:	mov	x2, x22
  44655c:	mov	w1, #0xff                  	// #255
  446560:	bl	404410 <memset@plt>
  446564:	ldrb	w0, [x19, #139]
  446568:	ldr	x22, [x19, #48]
  44656c:	b	4460d4 <_obstack_memory_used@@Base+0x3ee4>
  446570:	mov	w0, w28
  446574:	bl	404990 <iswalnum@plt>
  446578:	cmp	w28, #0x5f
  44657c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  446580:	mov	w0, #0x1                   	// #1
  446584:	b.ne	4460bc <_obstack_memory_used@@Base+0x3ecc>  // b.any
  446588:	b	4460a0 <_obstack_memory_used@@Base+0x3eb0>
  44658c:	mov	x4, x0
  446590:	stp	x4, x4, [x19, #48]
  446594:	b	445f7c <_obstack_memory_used@@Base+0x3d8c>
  446598:	cmp	x2, #0x6
  44659c:	mov	x0, #0x6                   	// #6
  4465a0:	csel	x0, x2, x0, le
  4465a4:	add	x1, sp, #0x70
  4465a8:	subs	w0, w0, #0x1
  4465ac:	b.mi	4462b4 <_obstack_memory_used@@Base+0x40c4>  // b.first
  4465b0:	sxtw	x0, w0
  4465b4:	add	x1, sp, #0x70
  4465b8:	ldrb	w4, [x22, x0]
  4465bc:	ldrb	w4, [x3, x4]
  4465c0:	strb	w4, [x1, x0]
  4465c4:	sub	x0, x0, #0x1
  4465c8:	tbz	w0, #31, 4465b8 <_obstack_memory_used@@Base+0x43c8>
  4465cc:	b	4462b4 <_obstack_memory_used@@Base+0x40c4>
  4465d0:	sub	x22, x22, x21
  4465d4:	str	x22, [x19, #48]
  4465d8:	b	446514 <_obstack_memory_used@@Base+0x4324>
  4465dc:	ldr	x1, [x19, #40]
  4465e0:	ldr	x0, [x19, #56]
  4465e4:	ldp	x25, x26, [sp, #64]
  4465e8:	b	44602c <_obstack_memory_used@@Base+0x3e3c>
  4465ec:	nop
  4465f0:	stp	x29, x30, [sp, #-128]!
  4465f4:	mov	x29, sp
  4465f8:	stp	x25, x26, [sp, #64]
  4465fc:	mov	x26, x0
  446600:	ldr	x0, [x0, #56]
  446604:	stp	x19, x20, [sp, #16]
  446608:	add	x20, x1, x1, lsl #1
  44660c:	stp	xzr, xzr, [sp, #104]
  446610:	add	x20, x0, x20, lsl #3
  446614:	str	xzr, [sp, #120]
  446618:	str	x27, [sp, #80]
  44661c:	ldr	x7, [x20, #8]
  446620:	cmp	x7, #0x0
  446624:	b.le	4467f0 <_obstack_memory_used@@Base+0x4600>
  446628:	add	x25, x2, #0x10
  44662c:	mov	x19, #0x0                   	// #0
  446630:	stp	x21, x22, [sp, #32]
  446634:	mov	x21, x1
  446638:	mov	x22, x2
  44663c:	stp	x23, x24, [sp, #48]
  446640:	mov	x24, x3
  446644:	add	x23, x20, #0x10
  446648:	b	44668c <_obstack_memory_used@@Base+0x449c>
  44664c:	cbnz	x0, 446734 <_obstack_memory_used@@Base+0x4544>
  446650:	ldr	x0, [x22, #8]
  446654:	mov	x1, x25
  446658:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  44665c:	cbz	x0, 446734 <_obstack_memory_used@@Base+0x4544>
  446660:	ldr	x2, [x26, #56]
  446664:	mov	x1, x24
  446668:	add	x0, sp, #0x68
  44666c:	add	x2, x2, x6
  446670:	bl	444998 <_obstack_memory_used@@Base+0x27a8>
  446674:	mov	w27, w0
  446678:	cbnz	w0, 44670c <_obstack_memory_used@@Base+0x451c>
  44667c:	ldr	x7, [x20, #8]
  446680:	add	x19, x19, #0x1
  446684:	cmp	x7, x19
  446688:	b.le	446750 <_obstack_memory_used@@Base+0x4560>
  44668c:	ldr	x1, [x20, #16]
  446690:	ldr	x4, [x1, x19, lsl #3]
  446694:	cmp	x21, x4
  446698:	b.eq	446680 <_obstack_memory_used@@Base+0x4490>  // b.none
  44669c:	ldr	x1, [x26]
  4466a0:	add	x1, x1, x4, lsl #4
  4466a4:	ldrb	w0, [x1, #8]
  4466a8:	tbz	w0, #3, 446680 <_obstack_memory_used@@Base+0x4490>
  4466ac:	add	x4, x4, x4, lsl #1
  4466b0:	mov	x1, x23
  4466b4:	ldr	x8, [x26, #40]
  4466b8:	lsl	x6, x4, #3
  4466bc:	mov	x0, x7
  4466c0:	add	x8, x8, x6
  4466c4:	ldr	x9, [x8, #16]
  4466c8:	ldr	x2, [x9]
  4466cc:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  4466d0:	ldr	x1, [x8, #8]
  4466d4:	cmp	x1, #0x1
  4466d8:	b.gt	44664c <_obstack_memory_used@@Base+0x445c>
  4466dc:	cbnz	x0, 446680 <_obstack_memory_used@@Base+0x4490>
  4466e0:	ldr	x0, [x22, #8]
  4466e4:	mov	x1, x25
  4466e8:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  4466ec:	cbz	x0, 446680 <_obstack_memory_used@@Base+0x4490>
  4466f0:	ldr	x2, [x26, #56]
  4466f4:	mov	x1, x24
  4466f8:	add	x0, sp, #0x68
  4466fc:	add	x2, x2, x6
  446700:	bl	444998 <_obstack_memory_used@@Base+0x27a8>
  446704:	mov	w27, w0
  446708:	cbz	w0, 44667c <_obstack_memory_used@@Base+0x448c>
  44670c:	ldr	x0, [sp, #120]
  446710:	bl	4047b0 <free@plt>
  446714:	mov	w0, w27
  446718:	ldp	x19, x20, [sp, #16]
  44671c:	ldp	x21, x22, [sp, #32]
  446720:	ldp	x23, x24, [sp, #48]
  446724:	ldp	x25, x26, [sp, #64]
  446728:	ldr	x27, [sp, #80]
  44672c:	ldp	x29, x30, [sp], #128
  446730:	ret
  446734:	ldr	x2, [x9, #8]
  446738:	cmp	x2, #0x0
  44673c:	b.le	446680 <_obstack_memory_used@@Base+0x4490>
  446740:	mov	x1, x23
  446744:	mov	x0, x7
  446748:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  44674c:	b	4466dc <_obstack_memory_used@@Base+0x44ec>
  446750:	cmp	x7, #0x0
  446754:	add	x10, sp, #0x78
  446758:	add	x9, x22, #0x10
  44675c:	add	x11, x22, #0x8
  446760:	mov	x6, #0x0                   	// #0
  446764:	b.le	4467c4 <_obstack_memory_used@@Base+0x45d4>
  446768:	ldr	x2, [x20, #16]
  44676c:	mov	x1, x10
  446770:	ldr	x0, [sp, #112]
  446774:	ldr	x2, [x2, x6, lsl #3]
  446778:	add	x6, x6, #0x1
  44677c:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  446780:	mov	x1, x9
  446784:	cbnz	x0, 4467bc <_obstack_memory_used@@Base+0x45cc>
  446788:	ldr	x8, [x22, #8]
  44678c:	mov	x0, x8
  446790:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  446794:	mov	x2, x0
  446798:	subs	x2, x2, #0x1
  44679c:	sub	x3, x8, #0x1
  4467a0:	mov	x1, x9
  4467a4:	mov	x0, x11
  4467a8:	ccmp	x2, x8, #0x0, pl  // pl = nfrst
  4467ac:	b.ge	4467bc <_obstack_memory_used@@Base+0x45cc>  // b.tcont
  4467b0:	str	x3, [x22, #8]
  4467b4:	bl	444120 <_obstack_memory_used@@Base+0x1f30>
  4467b8:	ldr	x7, [x20, #8]
  4467bc:	cmp	x7, x6
  4467c0:	b.gt	446768 <_obstack_memory_used@@Base+0x4578>
  4467c4:	ldp	x21, x22, [sp, #32]
  4467c8:	ldp	x23, x24, [sp, #48]
  4467cc:	ldr	x0, [sp, #120]
  4467d0:	bl	4047b0 <free@plt>
  4467d4:	mov	w27, #0x0                   	// #0
  4467d8:	mov	w0, w27
  4467dc:	ldp	x19, x20, [sp, #16]
  4467e0:	ldp	x25, x26, [sp, #64]
  4467e4:	ldr	x27, [sp, #80]
  4467e8:	ldp	x29, x30, [sp], #128
  4467ec:	ret
  4467f0:	mov	x0, #0x0                   	// #0
  4467f4:	b	4467d0 <_obstack_memory_used@@Base+0x45e0>
  4467f8:	stp	x29, x30, [sp, #-256]!
  4467fc:	mov	x29, sp
  446800:	stp	x23, x24, [sp, #48]
  446804:	mov	x23, x0
  446808:	mov	x0, #0x3800                	// #14336
  44680c:	str	x1, [sp, #136]
  446810:	bl	404310 <malloc@plt>
  446814:	cbz	x0, 447030 <_obstack_memory_used@@Base+0x4e40>
  446818:	ldr	x2, [sp, #136]
  44681c:	mov	x1, #0x1800                	// #6144
  446820:	add	x1, x0, x1
  446824:	stp	x19, x20, [sp, #16]
  446828:	add	x24, x2, #0x8
  44682c:	str	x1, [sp, #104]
  446830:	mov	x20, x0
  446834:	stp	xzr, xzr, [sp, #160]
  446838:	ldr	x1, [x24, #8]
  44683c:	stp	xzr, xzr, [x2, #88]
  446840:	stp	xzr, xzr, [sp, #176]
  446844:	cmp	x1, #0x0
  446848:	b.le	447090 <_obstack_memory_used@@Base+0x4ea0>
  44684c:	mov	x19, #0x0                   	// #0
  446850:	stp	x21, x22, [sp, #32]
  446854:	stp	x25, x26, [sp, #64]
  446858:	mov	x25, #0x0                   	// #0
  44685c:	stp	x27, x28, [sp, #80]
  446860:	lsl	x1, x25, #3
  446864:	ldr	x0, [x24, #16]
  446868:	str	x1, [sp, #120]
  44686c:	ldr	x2, [x23]
  446870:	ldr	x1, [x0, x25, lsl #3]
  446874:	lsl	x1, x1, #4
  446878:	add	x21, x2, x1
  44687c:	ldr	w0, [x21, #8]
  446880:	ldrb	w28, [x21, #8]
  446884:	ubfx	x0, x0, #8, #10
  446888:	cmp	w28, #0x1
  44688c:	b.eq	446b14 <_obstack_memory_used@@Base+0x4924>  // b.none
  446890:	cmp	w28, #0x3
  446894:	b.eq	446f78 <_obstack_memory_used@@Base+0x4d88>  // b.none
  446898:	cmp	w28, #0x5
  44689c:	b.eq	446e58 <_obstack_memory_used@@Base+0x4c68>  // b.none
  4468a0:	cmp	w28, #0x7
  4468a4:	b.eq	446f54 <_obstack_memory_used@@Base+0x4d64>  // b.none
  4468a8:	ldr	x0, [x24, #8]
  4468ac:	add	x25, x25, #0x1
  4468b0:	cmp	x25, x0
  4468b4:	b.lt	446860 <_obstack_memory_used@@Base+0x4670>  // b.tstop
  4468b8:	cmp	x19, #0x0
  4468bc:	b.le	447198 <_obstack_memory_used@@Base+0x4fa8>
  4468c0:	add	x22, x19, #0x1
  4468c4:	stp	x22, xzr, [sp, #192]
  4468c8:	lsl	x27, x19, #1
  4468cc:	lsl	x22, x22, #3
  4468d0:	mov	x0, x22
  4468d4:	bl	404310 <malloc@plt>
  4468d8:	str	x0, [sp, #208]
  4468dc:	mov	x25, x0
  4468e0:	cbz	x0, 446ddc <_obstack_memory_used@@Base+0x4bec>
  4468e4:	mov	x0, #0xa855                	// #43093
  4468e8:	str	wzr, [sp, #160]
  4468ec:	movk	x0, #0xaaaa, lsl #16
  4468f0:	lsl	x27, x19, #1
  4468f4:	movk	x0, #0xaaaa, lsl #32
  4468f8:	movk	x0, #0xaaa, lsl #48
  4468fc:	cmp	x19, x0
  446900:	b.gt	446ddc <_obstack_memory_used@@Base+0x4bec>
  446904:	add	x26, x27, x19
  446908:	lsl	x21, x26, #3
  44690c:	mov	x0, x21
  446910:	bl	404310 <malloc@plt>
  446914:	mov	x24, x0
  446918:	cbz	x0, 446ddc <_obstack_memory_used@@Base+0x4bec>
  44691c:	sub	x22, x22, #0x8
  446920:	add	x26, x20, #0x8
  446924:	add	x0, x0, x22
  446928:	add	x25, sp, #0x100
  44692c:	str	x0, [sp, #112]
  446930:	add	x0, x0, x22
  446934:	mov	x22, #0x0                   	// #0
  446938:	str	x0, [sp, #120]
  44693c:	str	wzr, [sp, #128]
  446940:	stp	xzr, xzr, [sp, #224]
  446944:	stp	xzr, xzr, [sp, #240]
  446948:	mov	x28, #0x0                   	// #0
  44694c:	ldr	x5, [x26]
  446950:	str	xzr, [sp, #200]
  446954:	cmp	x5, #0x0
  446958:	b.le	4469a4 <_obstack_memory_used@@Base+0x47b4>
  44695c:	nop
  446960:	ldr	x3, [x26, #8]
  446964:	add	x0, sp, #0xc0
  446968:	ldr	x1, [x23, #24]
  44696c:	ldr	x3, [x3, x28, lsl #3]
  446970:	ldr	x3, [x1, x3, lsl #3]
  446974:	cmn	x3, #0x1
  446978:	b.eq	446998 <_obstack_memory_used@@Base+0x47a8>  // b.none
  44697c:	ldr	x1, [x23, #48]
  446980:	add	x3, x3, x3, lsl #1
  446984:	add	x1, x1, x3, lsl #3
  446988:	bl	444418 <_obstack_memory_used@@Base+0x2228>
  44698c:	str	w0, [sp, #160]
  446990:	cbnz	w0, 446dd0 <_obstack_memory_used@@Base+0x4be0>
  446994:	ldr	x5, [x26]
  446998:	add	x28, x28, #0x1
  44699c:	cmp	x5, x28
  4469a0:	b.gt	446960 <_obstack_memory_used@@Base+0x4770>
  4469a4:	add	x2, sp, #0xc0
  4469a8:	mov	x1, x23
  4469ac:	add	x0, sp, #0xa0
  4469b0:	mov	w3, #0x0                   	// #0
  4469b4:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  4469b8:	str	x0, [x24, x22, lsl #3]
  4469bc:	cbz	x0, 446dc4 <_obstack_memory_used@@Base+0x4bd4>
  4469c0:	ldrsb	w1, [x0, #104]
  4469c4:	tbnz	w1, #31, 446fb4 <_obstack_memory_used@@Base+0x4dc4>
  4469c8:	ldr	x1, [sp, #112]
  4469cc:	str	x0, [x1, x22, lsl #3]
  4469d0:	ldr	x1, [sp, #120]
  4469d4:	ldr	x0, [x24, x22, lsl #3]
  4469d8:	str	x0, [x1, x22, lsl #3]
  4469dc:	add	x5, sp, #0xe0
  4469e0:	mov	x7, x20
  4469e4:	mov	x0, x5
  4469e8:	add	x2, x20, x22, lsl #5
  4469ec:	ldr	x1, [x0]
  4469f0:	add	x2, x2, #0x8
  4469f4:	ldr	x3, [x2, #6136]
  4469f8:	orr	x1, x1, x3
  4469fc:	str	x1, [x0], #8
  446a00:	cmp	x25, x0
  446a04:	b.ne	4469ec <_obstack_memory_used@@Base+0x47fc>  // b.any
  446a08:	add	x22, x22, #0x1
  446a0c:	add	x26, x26, #0x18
  446a10:	cmp	x22, x19
  446a14:	b.ne	446948 <_obstack_memory_used@@Base+0x4758>  // b.any
  446a18:	ldr	w0, [sp, #128]
  446a1c:	stp	x5, x7, [sp, #144]
  446a20:	cbnz	w0, 4470e0 <_obstack_memory_used@@Base+0x4ef0>
  446a24:	mov	x1, #0x100                 	// #256
  446a28:	mov	x0, #0x8                   	// #8
  446a2c:	bl	4044c0 <calloc@plt>
  446a30:	mov	x10, x0
  446a34:	ldr	x0, [sp, #136]
  446a38:	str	x10, [x0, #88]
  446a3c:	cbz	x10, 446dd0 <_obstack_memory_used@@Base+0x4be0>
  446a40:	ldp	x5, x7, [sp, #144]
  446a44:	add	x6, x23, #0xb8
  446a48:	ldr	x8, [sp, #104]
  446a4c:	mov	x9, #0x0                   	// #0
  446a50:	ldr	x0, [x5]
  446a54:	add	x3, x10, x9, lsl #9
  446a58:	mov	x1, #0x1                   	// #1
  446a5c:	cbz	x0, 446a74 <_obstack_memory_used@@Base+0x4884>
  446a60:	tbnz	w0, #0, 447040 <_obstack_memory_used@@Base+0x4e50>
  446a64:	lsl	x1, x1, #1
  446a68:	lsr	x0, x0, #1
  446a6c:	add	x3, x3, #0x8
  446a70:	cbnz	x0, 446a60 <_obstack_memory_used@@Base+0x4870>
  446a74:	add	x9, x9, #0x1
  446a78:	add	x5, x5, #0x8
  446a7c:	cmp	x9, #0x4
  446a80:	add	x8, x8, #0x8
  446a84:	b.ne	446a50 <_obstack_memory_used@@Base+0x4860>  // b.any
  446a88:	ldr	x0, [sp, #224]
  446a8c:	tst	w0, #0x400
  446a90:	b.eq	446ab8 <_obstack_memory_used@@Base+0x48c8>  // b.none
  446a94:	mov	x0, #0x0                   	// #0
  446a98:	ldr	x2, [sp, #104]
  446a9c:	lsl	x1, x0, #5
  446aa0:	ldr	x1, [x2, x1]
  446aa4:	tst	w1, #0x400
  446aa8:	b.ne	4470c4 <_obstack_memory_used@@Base+0x4ed4>  // b.any
  446aac:	add	x0, x0, #0x1
  446ab0:	cmp	x0, x19
  446ab4:	b.ne	446a98 <_obstack_memory_used@@Base+0x48a8>  // b.any
  446ab8:	mov	x0, x24
  446abc:	str	x7, [sp, #104]
  446ac0:	bl	4047b0 <free@plt>
  446ac4:	add	x26, x20, x21
  446ac8:	ldr	x0, [sp, #208]
  446acc:	bl	4047b0 <free@plt>
  446ad0:	ldr	x7, [sp, #104]
  446ad4:	nop
  446ad8:	add	x7, x7, #0x18
  446adc:	ldur	x0, [x7, #-8]
  446ae0:	stp	x7, x7, [sp, #104]
  446ae4:	bl	4047b0 <free@plt>
  446ae8:	ldr	x7, [sp, #104]
  446aec:	cmp	x26, x7
  446af0:	b.ne	446ad8 <_obstack_memory_used@@Base+0x48e8>  // b.any
  446af4:	mov	x0, x20
  446af8:	bl	4047b0 <free@plt>
  446afc:	mov	w0, #0x1                   	// #1
  446b00:	ldp	x19, x20, [sp, #16]
  446b04:	ldp	x21, x22, [sp, #32]
  446b08:	ldp	x25, x26, [sp, #64]
  446b0c:	ldp	x27, x28, [sp, #80]
  446b10:	b	446e20 <_obstack_memory_used@@Base+0x4c30>
  446b14:	ldrb	w2, [x2, x1]
  446b18:	add	x27, sp, #0xa0
  446b1c:	mov	x1, #0x1                   	// #1
  446b20:	ubfx	x3, x2, #6, #2
  446b24:	lsl	x2, x1, x2
  446b28:	ldr	x1, [x27, x3, lsl #3]
  446b2c:	orr	x1, x1, x2
  446b30:	str	x1, [x27, x3, lsl #3]
  446b34:	cbz	w0, 446bf0 <_obstack_memory_used@@Base+0x4a00>
  446b38:	tbnz	w0, #5, 446da4 <_obstack_memory_used@@Base+0x4bb4>
  446b3c:	tbnz	w0, #7, 446d98 <_obstack_memory_used@@Base+0x4ba8>
  446b40:	tbz	w0, #2, 446b98 <_obstack_memory_used@@Base+0x49a8>
  446b44:	cmp	w28, #0x1
  446b48:	b.eq	446f3c <_obstack_memory_used@@Base+0x4d4c>  // b.none
  446b4c:	ldr	w1, [x23, #180]
  446b50:	cmp	w1, #0x1
  446b54:	b.le	446f04 <_obstack_memory_used@@Base+0x4d14>
  446b58:	ldr	x12, [x23, #120]
  446b5c:	mov	x5, x27
  446b60:	add	x3, x23, #0xb8
  446b64:	mov	x4, #0x0                   	// #0
  446b68:	mov	x2, #0x0                   	// #0
  446b6c:	ldr	x1, [x12, x2, lsl #3]
  446b70:	ldr	x11, [x3, x2, lsl #3]
  446b74:	add	x2, x2, #0x1
  446b78:	ldr	x10, [x5]
  446b7c:	orn	x1, x11, x1
  446b80:	cmp	x2, #0x4
  446b84:	and	x1, x1, x10
  446b88:	str	x1, [x5], #8
  446b8c:	orr	x4, x4, x1
  446b90:	b.ne	446b6c <_obstack_memory_used@@Base+0x497c>  // b.any
  446b94:	cbz	x4, 4468a8 <_obstack_memory_used@@Base+0x46b8>
  446b98:	tbz	w0, #3, 446bf0 <_obstack_memory_used@@Base+0x4a00>
  446b9c:	cmp	w28, #0x1
  446ba0:	b.eq	446fa8 <_obstack_memory_used@@Base+0x4db8>  // b.none
  446ba4:	ldr	w0, [x23, #180]
  446ba8:	cmp	w0, #0x1
  446bac:	b.le	446ecc <_obstack_memory_used@@Base+0x4cdc>
  446bb0:	ldr	x11, [x23, #120]
  446bb4:	mov	x4, x27
  446bb8:	add	x3, x23, #0xb8
  446bbc:	mov	x2, #0x0                   	// #0
  446bc0:	mov	x1, #0x0                   	// #0
  446bc4:	ldr	x10, [x11, x1, lsl #3]
  446bc8:	ldr	x0, [x3, x1, lsl #3]
  446bcc:	add	x1, x1, #0x1
  446bd0:	ldr	x5, [x4]
  446bd4:	and	x0, x0, x10
  446bd8:	cmp	x1, #0x4
  446bdc:	bic	x0, x5, x0
  446be0:	str	x0, [x4], #8
  446be4:	orr	x2, x2, x0
  446be8:	b.ne	446bc4 <_obstack_memory_used@@Base+0x49d4>  // b.any
  446bec:	cbz	x2, 4468a8 <_obstack_memory_used@@Base+0x46b8>
  446bf0:	mov	x0, #0x17f8                	// #6136
  446bf4:	cmp	x19, #0x0
  446bf8:	add	x26, x20, x0
  446bfc:	mov	x22, #0x0                   	// #0
  446c00:	b.gt	446c34 <_obstack_memory_used@@Base+0x4a44>
  446c04:	b	446d40 <_obstack_memory_used@@Base+0x4b50>
  446c08:	ldrb	w2, [x21]
  446c0c:	ldr	x3, [sp, #104]
  446c10:	ubfx	x1, x2, #6, #2
  446c14:	add	x1, x3, x1, lsl #3
  446c18:	ldr	x0, [x1, x0]
  446c1c:	lsr	x0, x0, x2
  446c20:	tbnz	w0, #0, 446c40 <_obstack_memory_used@@Base+0x4a50>
  446c24:	add	x22, x22, #0x1
  446c28:	add	x26, x26, #0x20
  446c2c:	cmp	x22, x19
  446c30:	b.ge	446d40 <_obstack_memory_used@@Base+0x4b50>  // b.tcont
  446c34:	cmp	w28, #0x1
  446c38:	lsl	x0, x22, #5
  446c3c:	b.eq	446c08 <_obstack_memory_used@@Base+0x4a18>  // b.none
  446c40:	mov	x1, #0x1                   	// #1
  446c44:	mov	x3, #0x0                   	// #0
  446c48:	lsl	x0, x1, #3
  446c4c:	add	x2, sp, #0xc0
  446c50:	add	x5, x27, x0
  446c54:	add	x2, x2, x0
  446c58:	ldr	x4, [x26, x1, lsl #3]
  446c5c:	add	x1, x1, #0x1
  446c60:	ldur	x0, [x5, #-8]
  446c64:	cmp	x1, #0x5
  446c68:	and	x0, x0, x4
  446c6c:	stur	x0, [x2, #-8]
  446c70:	orr	x3, x3, x0
  446c74:	b.ne	446c48 <_obstack_memory_used@@Base+0x4a58>  // b.any
  446c78:	cbz	x3, 446c24 <_obstack_memory_used@@Base+0x4a34>
  446c7c:	mov	x2, x27
  446c80:	mov	x0, #0x1                   	// #1
  446c84:	mov	x10, #0x0                   	// #0
  446c88:	mov	x5, #0x0                   	// #0
  446c8c:	add	x1, sp, #0xe0
  446c90:	add	x11, x1, x0, lsl #3
  446c94:	ldr	x4, [x2]
  446c98:	ldr	x1, [x26, x0, lsl #3]
  446c9c:	add	x0, x0, #0x1
  446ca0:	cmp	x0, #0x5
  446ca4:	bic	x3, x1, x4
  446ca8:	bic	x1, x4, x1
  446cac:	stur	x3, [x11, #-8]
  446cb0:	orr	x5, x5, x3
  446cb4:	str	x1, [x2], #8
  446cb8:	orr	x10, x10, x1
  446cbc:	b.ne	446c8c <_obstack_memory_used@@Base+0x4a9c>  // b.any
  446cc0:	add	x1, x22, x22, lsl #1
  446cc4:	add	x1, x20, x1, lsl #3
  446cc8:	cbz	x5, 446d18 <_obstack_memory_used@@Base+0x4b28>
  446ccc:	ldr	x0, [sp, #104]
  446cd0:	str	x1, [sp, #112]
  446cd4:	ldp	x4, x5, [sp, #224]
  446cd8:	str	x10, [sp, #128]
  446cdc:	add	x11, x0, x19, lsl #5
  446ce0:	add	x0, x19, x19, lsl #1
  446ce4:	ldp	x2, x3, [sp, #240]
  446ce8:	add	x0, x20, x0, lsl #3
  446cec:	stp	x4, x5, [x11]
  446cf0:	stp	x2, x3, [x11, #16]
  446cf4:	ldp	x2, x3, [sp, #192]
  446cf8:	stp	x2, x3, [x26, #8]
  446cfc:	ldp	x2, x3, [sp, #208]
  446d00:	stp	x2, x3, [x26, #24]
  446d04:	bl	444fa0 <_obstack_memory_used@@Base+0x2db0>
  446d08:	cbnz	w0, 446e38 <_obstack_memory_used@@Base+0x4c48>
  446d0c:	ldr	x1, [sp, #112]
  446d10:	add	x19, x19, #0x1
  446d14:	ldr	x10, [sp, #128]
  446d18:	mov	x0, x1
  446d1c:	ldr	x2, [x24, #16]
  446d20:	str	x10, [sp, #112]
  446d24:	ldr	x1, [sp, #120]
  446d28:	ldr	x1, [x2, x1]
  446d2c:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  446d30:	tst	w0, #0xff
  446d34:	b.eq	446e38 <_obstack_memory_used@@Base+0x4c48>  // b.none
  446d38:	ldr	x10, [sp, #112]
  446d3c:	cbnz	x10, 446c24 <_obstack_memory_used@@Base+0x4a34>
  446d40:	cmp	x19, x22
  446d44:	b.ne	4468a8 <_obstack_memory_used@@Base+0x46b8>  // b.any
  446d48:	ldr	x0, [sp, #104]
  446d4c:	add	x2, x19, x19, lsl #1
  446d50:	ldr	x5, [x24, #16]
  446d54:	add	x26, x20, x2, lsl #3
  446d58:	add	x3, x0, x19, lsl #5
  446d5c:	mov	x4, #0x1                   	// #1
  446d60:	ldp	x0, x1, [x27]
  446d64:	stp	x0, x1, [x3]
  446d68:	ldp	x0, x1, [x27, #16]
  446d6c:	stp	x0, x1, [x3, #16]
  446d70:	ldr	x1, [sp, #120]
  446d74:	mov	x0, #0x8                   	// #8
  446d78:	ldr	x22, [x5, x1]
  446d7c:	str	x4, [x20, x2, lsl #3]
  446d80:	str	x4, [x26, #8]
  446d84:	bl	404310 <malloc@plt>
  446d88:	str	x0, [x26, #16]
  446d8c:	cbz	x0, 446e2c <_obstack_memory_used@@Base+0x4c3c>
  446d90:	add	x19, x19, #0x1
  446d94:	str	x22, [x0]
  446d98:	stp	xzr, xzr, [x27]
  446d9c:	stp	xzr, xzr, [x27, #16]
  446da0:	b	4468a8 <_obstack_memory_used@@Base+0x46b8>
  446da4:	ldr	x1, [sp, #160]
  446da8:	stp	xzr, xzr, [x27]
  446dac:	stp	xzr, xzr, [x27, #16]
  446db0:	tst	w1, #0x400
  446db4:	b.eq	4468a8 <_obstack_memory_used@@Base+0x46b8>  // b.none
  446db8:	mov	x1, #0x400                 	// #1024
  446dbc:	str	x1, [sp, #160]
  446dc0:	b	446b3c <_obstack_memory_used@@Base+0x494c>
  446dc4:	ldr	w1, [sp, #160]
  446dc8:	cbz	w1, 4469c0 <_obstack_memory_used@@Base+0x47d0>
  446dcc:	nop
  446dd0:	mov	x0, x24
  446dd4:	bl	4047b0 <free@plt>
  446dd8:	ldr	x25, [sp, #208]
  446ddc:	add	x19, x27, x19
  446de0:	mov	x21, x20
  446de4:	mov	x0, x25
  446de8:	add	x19, x20, x19, lsl #3
  446dec:	bl	4047b0 <free@plt>
  446df0:	ldr	x0, [x21, #16]
  446df4:	add	x21, x21, #0x18
  446df8:	bl	4047b0 <free@plt>
  446dfc:	cmp	x19, x21
  446e00:	b.ne	446df0 <_obstack_memory_used@@Base+0x4c00>  // b.any
  446e04:	mov	x0, x20
  446e08:	bl	4047b0 <free@plt>
  446e0c:	ldp	x19, x20, [sp, #16]
  446e10:	mov	w0, #0x0                   	// #0
  446e14:	ldp	x21, x22, [sp, #32]
  446e18:	ldp	x25, x26, [sp, #64]
  446e1c:	ldp	x27, x28, [sp, #80]
  446e20:	ldp	x23, x24, [sp, #48]
  446e24:	ldp	x29, x30, [sp], #256
  446e28:	ret
  446e2c:	stp	xzr, xzr, [x26]
  446e30:	cbz	x19, 446e04 <_obstack_memory_used@@Base+0x4c14>
  446e34:	nop
  446e38:	add	x22, x20, #0x10
  446e3c:	mov	x21, #0x0                   	// #0
  446e40:	ldr	x0, [x22], #24
  446e44:	add	x21, x21, #0x1
  446e48:	bl	4047b0 <free@plt>
  446e4c:	cmp	x19, x21
  446e50:	b.gt	446e40 <_obstack_memory_used@@Base+0x4c50>
  446e54:	b	446e04 <_obstack_memory_used@@Base+0x4c14>
  446e58:	ldr	w1, [x23, #180]
  446e5c:	add	x27, sp, #0xa0
  446e60:	cmp	w1, #0x1
  446e64:	b.le	446eb8 <_obstack_memory_used@@Base+0x4cc8>
  446e68:	ldr	x5, [x23, #120]
  446e6c:	mov	x3, x27
  446e70:	mov	x1, #0x0                   	// #0
  446e74:	ldr	x4, [x5, x1]
  446e78:	add	x1, x1, #0x8
  446e7c:	ldr	x2, [x3]
  446e80:	cmp	x1, #0x20
  446e84:	orr	x2, x2, x4
  446e88:	str	x2, [x3], #8
  446e8c:	b.ne	446e74 <_obstack_memory_used@@Base+0x4c84>  // b.any
  446e90:	ldr	x1, [x23, #216]
  446e94:	tbnz	w1, #6, 446ea4 <_obstack_memory_used@@Base+0x4cb4>
  446e98:	ldr	x2, [sp, #160]
  446e9c:	and	x2, x2, #0xfffffffffffffbff
  446ea0:	str	x2, [sp, #160]
  446ea4:	tbz	w1, #7, 446b34 <_obstack_memory_used@@Base+0x4944>
  446ea8:	ldr	x1, [sp, #160]
  446eac:	and	x1, x1, #0xfffffffffffffffe
  446eb0:	str	x1, [sp, #160]
  446eb4:	b	446b34 <_obstack_memory_used@@Base+0x4944>
  446eb8:	mov	x2, #0xffffffffffffffff    	// #-1
  446ebc:	mov	x3, #0xffffffffffffffff    	// #-1
  446ec0:	stp	x2, x3, [sp, #160]
  446ec4:	stp	x2, x3, [sp, #176]
  446ec8:	b	446e90 <_obstack_memory_used@@Base+0x4ca0>
  446ecc:	mov	x4, x27
  446ed0:	add	x3, x23, #0xb8
  446ed4:	mov	x2, #0x0                   	// #0
  446ed8:	mov	x1, #0x0                   	// #0
  446edc:	ldr	x0, [x3, x1, lsl #3]
  446ee0:	add	x1, x1, #0x1
  446ee4:	ldr	x5, [x4]
  446ee8:	cmp	x1, #0x4
  446eec:	bic	x0, x5, x0
  446ef0:	str	x0, [x4], #8
  446ef4:	orr	x2, x2, x0
  446ef8:	b.ne	446edc <_obstack_memory_used@@Base+0x4cec>  // b.any
  446efc:	cbz	x2, 4468a8 <_obstack_memory_used@@Base+0x46b8>
  446f00:	b	446bf0 <_obstack_memory_used@@Base+0x4a00>
  446f04:	mov	x5, x27
  446f08:	add	x3, x23, #0xb8
  446f0c:	mov	x4, #0x0                   	// #0
  446f10:	mov	x2, #0x0                   	// #0
  446f14:	ldr	x1, [x3, x2, lsl #3]
  446f18:	add	x2, x2, #0x1
  446f1c:	ldr	x10, [x5]
  446f20:	cmp	x2, #0x4
  446f24:	and	x1, x1, x10
  446f28:	str	x1, [x5], #8
  446f2c:	orr	x4, x4, x1
  446f30:	b.ne	446f14 <_obstack_memory_used@@Base+0x4d24>  // b.any
  446f34:	cbnz	x4, 446b98 <_obstack_memory_used@@Base+0x49a8>
  446f38:	b	4468a8 <_obstack_memory_used@@Base+0x46b8>
  446f3c:	ldrb	w1, [x21, #10]
  446f40:	tbz	w1, #6, 446d98 <_obstack_memory_used@@Base+0x4ba8>
  446f44:	ldr	w1, [x23, #180]
  446f48:	cmp	w1, #0x1
  446f4c:	b.gt	446b58 <_obstack_memory_used@@Base+0x4968>
  446f50:	b	446f04 <_obstack_memory_used@@Base+0x4d14>
  446f54:	ldr	x1, [x23, #216]
  446f58:	mov	x2, #0xffffffffffffffff    	// #-1
  446f5c:	mov	x3, #0xffffffffffffffff    	// #-1
  446f60:	stp	x2, x3, [sp, #160]
  446f64:	add	x27, sp, #0xa0
  446f68:	tbnz	w1, #6, 446ea4 <_obstack_memory_used@@Base+0x4cb4>
  446f6c:	mov	x2, #0xfffffffffffffbff    	// #-1025
  446f70:	str	x2, [sp, #160]
  446f74:	b	446ea4 <_obstack_memory_used@@Base+0x4cb4>
  446f78:	add	x27, sp, #0xa0
  446f7c:	mov	x3, #0x0                   	// #0
  446f80:	ldr	x5, [x2, x1]
  446f84:	mov	x2, x27
  446f88:	ldr	x4, [x5, x3]
  446f8c:	add	x3, x3, #0x8
  446f90:	ldr	x1, [x2]
  446f94:	cmp	x3, #0x20
  446f98:	orr	x1, x1, x4
  446f9c:	str	x1, [x2], #8
  446fa0:	b.ne	446f88 <_obstack_memory_used@@Base+0x4d98>  // b.any
  446fa4:	b	446b34 <_obstack_memory_used@@Base+0x4944>
  446fa8:	ldrb	w0, [x21, #10]
  446fac:	tbz	w0, #6, 446ba4 <_obstack_memory_used@@Base+0x49b4>
  446fb0:	b	446d98 <_obstack_memory_used@@Base+0x4ba8>
  446fb4:	mov	x1, x23
  446fb8:	add	x2, sp, #0xc0
  446fbc:	add	x0, sp, #0xa0
  446fc0:	mov	w3, #0x1                   	// #1
  446fc4:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  446fc8:	ldr	x1, [sp, #112]
  446fcc:	str	x0, [x1, x22, lsl #3]
  446fd0:	cbz	x0, 4470b8 <_obstack_memory_used@@Base+0x4ec8>
  446fd4:	ldr	x1, [x24, x22, lsl #3]
  446fd8:	cmp	x0, x1
  446fdc:	b.eq	446ff4 <_obstack_memory_used@@Base+0x4e04>  // b.none
  446fe0:	ldr	w0, [x23, #180]
  446fe4:	cmp	w0, #0x2
  446fe8:	ldr	w0, [sp, #128]
  446fec:	csinc	w0, w0, wzr, lt  // lt = tstop
  446ff0:	str	w0, [sp, #128]
  446ff4:	mov	x1, x23
  446ff8:	add	x2, sp, #0xc0
  446ffc:	add	x0, sp, #0xa0
  447000:	mov	w3, #0x2                   	// #2
  447004:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  447008:	ldr	x1, [sp, #120]
  44700c:	str	x0, [x1, x22, lsl #3]
  447010:	cbnz	x0, 4469dc <_obstack_memory_used@@Base+0x47ec>
  447014:	ldr	w0, [sp, #160]
  447018:	cbz	w0, 4469dc <_obstack_memory_used@@Base+0x47ec>
  44701c:	b	446dd0 <_obstack_memory_used@@Base+0x4be0>
  447020:	ldp	x19, x20, [sp, #16]
  447024:	ldp	x21, x22, [sp, #32]
  447028:	ldp	x25, x26, [sp, #64]
  44702c:	ldp	x27, x28, [sp, #80]
  447030:	mov	w0, #0x0                   	// #0
  447034:	ldp	x23, x24, [sp, #48]
  447038:	ldp	x29, x30, [sp], #256
  44703c:	ret
  447040:	ldr	x2, [x8]
  447044:	tst	x1, x2
  447048:	mov	x2, #0x0                   	// #0
  44704c:	b.ne	447068 <_obstack_memory_used@@Base+0x4e78>  // b.any
  447050:	add	x2, x2, #0x1
  447054:	lsl	x4, x2, #5
  447058:	ldr	x4, [x8, x4]
  44705c:	tst	x1, x4
  447060:	b.eq	447050 <_obstack_memory_used@@Base+0x4e60>  // b.none
  447064:	lsl	x2, x2, #3
  447068:	ldr	x4, [x6, x9, lsl #3]
  44706c:	tst	x1, x4
  447070:	b.eq	447084 <_obstack_memory_used@@Base+0x4e94>  // b.none
  447074:	ldr	x4, [sp, #112]
  447078:	ldr	x2, [x4, x2]
  44707c:	str	x2, [x3]
  447080:	b	446a64 <_obstack_memory_used@@Base+0x4874>
  447084:	ldr	x2, [x24, x2]
  447088:	str	x2, [x3]
  44708c:	b	446a64 <_obstack_memory_used@@Base+0x4874>
  447090:	bl	4047b0 <free@plt>
  447094:	mov	x1, #0x100                 	// #256
  447098:	mov	x0, #0x8                   	// #8
  44709c:	bl	4044c0 <calloc@plt>
  4470a0:	cmp	x0, #0x0
  4470a4:	ldr	x1, [sp, #136]
  4470a8:	ldp	x19, x20, [sp, #16]
  4470ac:	str	x0, [x1, #88]
  4470b0:	cset	w0, ne  // ne = any
  4470b4:	b	446e20 <_obstack_memory_used@@Base+0x4c30>
  4470b8:	ldr	w1, [sp, #160]
  4470bc:	cbz	w1, 446fd4 <_obstack_memory_used@@Base+0x4de4>
  4470c0:	b	446dd0 <_obstack_memory_used@@Base+0x4be0>
  4470c4:	ldr	x1, [sp, #120]
  4470c8:	ldr	x0, [x1, x0, lsl #3]
  4470cc:	str	x0, [x10, #80]
  4470d0:	ldr	w1, [sp, #128]
  4470d4:	cbz	w1, 446ab8 <_obstack_memory_used@@Base+0x48c8>
  4470d8:	str	x0, [x10, #2128]
  4470dc:	b	446ab8 <_obstack_memory_used@@Base+0x48c8>
  4470e0:	mov	x1, #0x200                 	// #512
  4470e4:	mov	x0, #0x8                   	// #8
  4470e8:	bl	4044c0 <calloc@plt>
  4470ec:	mov	x10, x0
  4470f0:	ldr	x0, [sp, #136]
  4470f4:	str	x10, [x0, #96]
  4470f8:	cbz	x10, 446dd0 <_obstack_memory_used@@Base+0x4be0>
  4470fc:	ldp	x5, x7, [sp, #144]
  447100:	add	x11, x10, #0x800
  447104:	ldr	x6, [sp, #104]
  447108:	mov	w9, #0x0                   	// #0
  44710c:	ldr	x0, [x5]
  447110:	mov	x3, x11
  447114:	mov	x2, #0x1                   	// #1
  447118:	cbz	x0, 447130 <_obstack_memory_used@@Base+0x4f40>
  44711c:	tbnz	w0, #0, 44714c <_obstack_memory_used@@Base+0x4f5c>
  447120:	lsl	x2, x2, #1
  447124:	lsr	x0, x0, #1
  447128:	add	x3, x3, #0x8
  44712c:	cbnz	x0, 44711c <_obstack_memory_used@@Base+0x4f2c>
  447130:	add	w9, w9, #0x40
  447134:	add	x5, x5, #0x8
  447138:	cmp	w9, #0x100
  44713c:	add	x11, x11, #0x200
  447140:	add	x6, x6, #0x8
  447144:	b.ne	44710c <_obstack_memory_used@@Base+0x4f1c>  // b.any
  447148:	b	446a88 <_obstack_memory_used@@Base+0x4898>
  44714c:	ldr	x1, [x6]
  447150:	tst	x2, x1
  447154:	b.ne	447190 <_obstack_memory_used@@Base+0x4fa0>  // b.any
  447158:	mov	x1, #0x0                   	// #0
  44715c:	add	x1, x1, #0x1
  447160:	mov	x8, x1
  447164:	lsl	x4, x1, #5
  447168:	ldr	x4, [x6, x4]
  44716c:	tst	x2, x4
  447170:	b.eq	44715c <_obstack_memory_used@@Base+0x4f6c>  // b.none
  447174:	sub	x1, x3, #0x8, lsl #12
  447178:	ldr	x4, [x24, x8, lsl #3]
  44717c:	str	x4, [x1, #30720]
  447180:	ldr	x1, [sp, #112]
  447184:	ldr	x1, [x1, x8, lsl #3]
  447188:	str	x1, [x3]
  44718c:	b	447120 <_obstack_memory_used@@Base+0x4f30>
  447190:	mov	x8, #0x0                   	// #0
  447194:	b	447174 <_obstack_memory_used@@Base+0x4f84>
  447198:	mov	x0, x20
  44719c:	bl	4047b0 <free@plt>
  4471a0:	cbnz	x19, 447020 <_obstack_memory_used@@Base+0x4e30>
  4471a4:	ldp	x21, x22, [sp, #32]
  4471a8:	ldp	x25, x26, [sp, #64]
  4471ac:	ldp	x27, x28, [sp, #80]
  4471b0:	b	447094 <_obstack_memory_used@@Base+0x4ea4>
  4471b4:	nop
  4471b8:	stp	x29, x30, [sp, #-32]!
  4471bc:	mov	x29, sp
  4471c0:	stp	x19, x20, [sp, #16]
  4471c4:	mov	x19, x1
  4471c8:	ldrb	w1, [x1, #48]
  4471cc:	cmp	w1, #0x10
  4471d0:	b.ne	4471f8 <_obstack_memory_used@@Base+0x5008>  // b.any
  4471d4:	ldr	x1, [x19, #8]
  4471d8:	mov	w0, #0x0                   	// #0
  4471dc:	ldr	x2, [x1, #24]
  4471e0:	ldr	x1, [x1, #56]
  4471e4:	str	x2, [x19, #24]
  4471e8:	str	x1, [x19, #56]
  4471ec:	ldp	x19, x20, [sp, #16]
  4471f0:	ldp	x29, x30, [sp], #32
  4471f4:	ret
  4471f8:	ldp	x2, x3, [x19, #40]
  4471fc:	str	x19, [x19, #24]
  447200:	mov	x20, x0
  447204:	mov	x1, x2
  447208:	mov	x2, x3
  44720c:	bl	443770 <_obstack_memory_used@@Base+0x1580>
  447210:	str	x0, [x19, #56]
  447214:	mov	x1, x0
  447218:	cmn	x0, #0x1
  44721c:	b.eq	447254 <_obstack_memory_used@@Base+0x5064>  // b.none
  447220:	ldrb	w2, [x19, #48]
  447224:	mov	w0, #0x0                   	// #0
  447228:	cmp	w2, #0xc
  44722c:	b.ne	4471ec <_obstack_memory_used@@Base+0x4ffc>  // b.any
  447230:	ldr	x2, [x20]
  447234:	ldr	w3, [x19, #40]
  447238:	add	x1, x2, x1, lsl #4
  44723c:	ldr	w2, [x1, #8]
  447240:	bfi	w2, w3, #8, #10
  447244:	str	w2, [x1, #8]
  447248:	ldp	x19, x20, [sp, #16]
  44724c:	ldp	x29, x30, [sp], #32
  447250:	ret
  447254:	mov	w0, #0xc                   	// #12
  447258:	b	4471ec <_obstack_memory_used@@Base+0x4ffc>
  44725c:	nop
  447260:	stp	x29, x30, [sp, #-48]!
  447264:	mov	x29, sp
  447268:	stp	x19, x20, [sp, #16]
  44726c:	mov	x20, x0
  447270:	ldr	x0, [x0]
  447274:	cmp	x0, #0x0
  447278:	b.le	4472c0 <_obstack_memory_used@@Base+0x50d0>
  44727c:	mov	x19, #0x0                   	// #0
  447280:	str	x21, [sp, #32]
  447284:	mov	x21, #0x0                   	// #0
  447288:	ldr	x1, [x20, #16]
  44728c:	add	x21, x21, #0x1
  447290:	add	x1, x1, x19
  447294:	ldr	x0, [x1, #40]
  447298:	bl	4047b0 <free@plt>
  44729c:	ldr	x1, [x20, #16]
  4472a0:	add	x1, x1, x19
  4472a4:	add	x19, x19, #0x30
  4472a8:	ldr	x0, [x1, #16]
  4472ac:	bl	4047b0 <free@plt>
  4472b0:	ldr	x0, [x20]
  4472b4:	cmp	x21, x0
  4472b8:	b.lt	447288 <_obstack_memory_used@@Base+0x5098>  // b.tstop
  4472bc:	ldr	x21, [sp, #32]
  4472c0:	ldr	x0, [x20, #16]
  4472c4:	ldp	x19, x20, [sp, #16]
  4472c8:	ldp	x29, x30, [sp], #48
  4472cc:	b	4047b0 <free@plt>
  4472d0:	stp	x29, x30, [sp, #-48]!
  4472d4:	mov	x29, sp
  4472d8:	ldr	x6, [x0]
  4472dc:	stp	x19, x20, [sp, #16]
  4472e0:	str	x21, [sp, #32]
  4472e4:	sub	x6, x6, #0x1
  4472e8:	str	x6, [x0]
  4472ec:	tbnz	x6, #63, 447368 <_obstack_memory_used@@Base+0x5178>
  4472f0:	mov	x21, x1
  4472f4:	add	x6, x6, x6, lsl #1
  4472f8:	mov	x1, x2
  4472fc:	lsl	x2, x3, #4
  447300:	lsl	x19, x6, #4
  447304:	mov	x0, x4
  447308:	ldr	x3, [x21]
  44730c:	mov	x20, x5
  447310:	add	x4, x3, x19
  447314:	ldr	x3, [x3, x19]
  447318:	str	x3, [x1]
  44731c:	ldr	x1, [x4, #16]
  447320:	bl	403f70 <memcpy@plt>
  447324:	ldr	x0, [x20, #16]
  447328:	bl	4047b0 <free@plt>
  44732c:	ldr	x0, [x21]
  447330:	add	x0, x0, x19
  447334:	ldr	x0, [x0, #16]
  447338:	bl	4047b0 <free@plt>
  44733c:	ldr	x6, [x21]
  447340:	ldr	x21, [sp, #32]
  447344:	add	x19, x6, x19
  447348:	ldp	x0, x1, [x19, #24]
  44734c:	stp	x0, x1, [x20]
  447350:	ldr	x0, [x19, #40]
  447354:	str	x0, [x20, #16]
  447358:	ldr	x0, [x19, #8]
  44735c:	ldp	x19, x20, [sp, #16]
  447360:	ldp	x29, x30, [sp], #48
  447364:	ret
  447368:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44736c:	add	x3, x3, #0x4a0
  447370:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  447374:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  447378:	add	x3, x3, #0x20
  44737c:	add	x1, x1, #0x288
  447380:	add	x0, x0, #0x298
  447384:	mov	w2, #0x553                 	// #1363
  447388:	bl	404ac0 <__assert_fail@plt>
  44738c:	nop
  447390:	stp	x29, x30, [sp, #-32]!
  447394:	mov	x29, sp
  447398:	stp	x19, x20, [sp, #16]
  44739c:	mov	x19, x1
  4473a0:	mov	x20, x0
  4473a4:	mov	x0, x1
  4473a8:	bl	403ff0 <strlen@plt>
  4473ac:	cmp	x0, #0x1
  4473b0:	b.ne	4473e0 <_obstack_memory_used@@Base+0x51f0>  // b.any
  4473b4:	ldrb	w1, [x19]
  4473b8:	mov	x2, x0
  4473bc:	mov	w0, #0x0                   	// #0
  4473c0:	ubfx	x3, x1, #6, #2
  4473c4:	lsl	x2, x2, x1
  4473c8:	ldr	x1, [x20, x3, lsl #3]
  4473cc:	orr	x2, x1, x2
  4473d0:	str	x2, [x20, x3, lsl #3]
  4473d4:	ldp	x19, x20, [sp, #16]
  4473d8:	ldp	x29, x30, [sp], #32
  4473dc:	ret
  4473e0:	mov	w0, #0x3                   	// #3
  4473e4:	ldp	x19, x20, [sp, #16]
  4473e8:	ldp	x29, x30, [sp], #32
  4473ec:	ret
  4473f0:	stp	x29, x30, [sp, #-80]!
  4473f4:	mov	x29, sp
  4473f8:	stp	x19, x20, [sp, #16]
  4473fc:	mov	x20, x0
  447400:	mov	x19, x1
  447404:	stp	x21, x22, [sp, #32]
  447408:	mov	x22, x3
  44740c:	mov	x21, x5
  447410:	stp	x23, x24, [sp, #48]
  447414:	mov	x24, x4
  447418:	stp	x25, x26, [sp, #64]
  44741c:	mov	x25, x2
  447420:	tbz	w6, #22, 447440 <_obstack_memory_used@@Base+0x5250>
  447424:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  447428:	mov	x0, x5
  44742c:	add	x1, x1, #0x2b0
  447430:	bl	404710 <strcmp@plt>
  447434:	cbnz	w0, 44752c <_obstack_memory_used@@Base+0x533c>
  447438:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44743c:	add	x21, x21, #0x2a8
  447440:	ldr	x23, [x22]
  447444:	ldr	x0, [x24]
  447448:	ldr	x26, [x25]
  44744c:	cmp	x0, x23
  447450:	b.eq	447560 <_obstack_memory_used@@Base+0x5370>  // b.none
  447454:	add	x0, x23, #0x1
  447458:	str	x0, [x22]
  44745c:	mov	x0, x21
  447460:	bl	4040a0 <wctype@plt>
  447464:	str	x0, [x26, x23, lsl #3]
  447468:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44746c:	mov	x0, x21
  447470:	add	x1, x1, #0x2c0
  447474:	bl	404710 <strcmp@plt>
  447478:	cbz	w0, 4474ec <_obstack_memory_used@@Base+0x52fc>
  44747c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  447480:	mov	x0, x21
  447484:	add	x1, x1, #0x2c8
  447488:	bl	404710 <strcmp@plt>
  44748c:	cbnz	w0, 44758c <_obstack_memory_used@@Base+0x539c>
  447490:	bl	404740 <__ctype_b_loc@plt>
  447494:	mov	x2, #0x0                   	// #0
  447498:	mov	x5, #0x1                   	// #1
  44749c:	ldr	x4, [x0]
  4474a0:	cbnz	x20, 447718 <_obstack_memory_used@@Base+0x5528>
  4474a4:	nop
  4474a8:	ldrh	w0, [x4, x2, lsl #1]
  4474ac:	asr	x1, x2, #6
  4474b0:	lsl	x3, x5, x2
  4474b4:	add	x2, x2, #0x1
  4474b8:	tbz	w0, #1, 4474c8 <_obstack_memory_used@@Base+0x52d8>
  4474bc:	ldr	x0, [x19, x1, lsl #3]
  4474c0:	orr	x0, x0, x3
  4474c4:	str	x0, [x19, x1, lsl #3]
  4474c8:	cmp	x2, #0x100
  4474cc:	b.ne	4474a8 <_obstack_memory_used@@Base+0x52b8>  // b.any
  4474d0:	mov	w0, #0x0                   	// #0
  4474d4:	ldp	x19, x20, [sp, #16]
  4474d8:	ldp	x21, x22, [sp, #32]
  4474dc:	ldp	x23, x24, [sp, #48]
  4474e0:	ldp	x25, x26, [sp, #64]
  4474e4:	ldp	x29, x30, [sp], #80
  4474e8:	ret
  4474ec:	bl	404740 <__ctype_b_loc@plt>
  4474f0:	mov	x2, #0x0                   	// #0
  4474f4:	mov	x6, #0x1                   	// #1
  4474f8:	ldr	x5, [x0]
  4474fc:	cbnz	x20, 4476dc <_obstack_memory_used@@Base+0x54ec>
  447500:	ldrh	w3, [x5, x2, lsl #1]
  447504:	asr	x0, x2, #6
  447508:	lsl	x4, x6, x2
  44750c:	add	x2, x2, #0x1
  447510:	tbz	w3, #3, 447520 <_obstack_memory_used@@Base+0x5330>
  447514:	ldr	x1, [x19, x0, lsl #3]
  447518:	orr	x1, x1, x4
  44751c:	str	x1, [x19, x0, lsl #3]
  447520:	cmp	x2, #0x100
  447524:	b.ne	447500 <_obstack_memory_used@@Base+0x5310>  // b.any
  447528:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  44752c:	mov	x0, x21
  447530:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  447534:	add	x1, x1, #0x2b8
  447538:	bl	404710 <strcmp@plt>
  44753c:	cmp	w0, #0x0
  447540:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  447544:	ldr	x23, [x22]
  447548:	add	x1, x1, #0x2a8
  44754c:	ldr	x0, [x24]
  447550:	csel	x21, x1, x21, eq  // eq = none
  447554:	ldr	x26, [x25]
  447558:	cmp	x0, x23
  44755c:	b.ne	447454 <_obstack_memory_used@@Base+0x5264>  // b.any
  447560:	lsl	x23, x23, #1
  447564:	mov	x0, x26
  447568:	add	x23, x23, #0x1
  44756c:	lsl	x1, x23, #3
  447570:	bl	404530 <realloc@plt>
  447574:	mov	x26, x0
  447578:	cbz	x0, 447830 <_obstack_memory_used@@Base+0x5640>
  44757c:	str	x0, [x25]
  447580:	str	x23, [x24]
  447584:	ldr	x23, [x22]
  447588:	b	447454 <_obstack_memory_used@@Base+0x5264>
  44758c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  447590:	mov	x0, x21
  447594:	add	x1, x1, #0x2b8
  447598:	bl	404710 <strcmp@plt>
  44759c:	cbz	w0, 4475f4 <_obstack_memory_used@@Base+0x5404>
  4475a0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  4475a4:	mov	x0, x21
  4475a8:	add	x1, x1, #0x2d0
  4475ac:	bl	404710 <strcmp@plt>
  4475b0:	cbnz	w0, 447634 <_obstack_memory_used@@Base+0x5444>
  4475b4:	bl	404740 <__ctype_b_loc@plt>
  4475b8:	mov	x1, #0x0                   	// #0
  4475bc:	mov	x5, #0x1                   	// #1
  4475c0:	ldr	x4, [x0]
  4475c4:	cbnz	x20, 4478c0 <_obstack_memory_used@@Base+0x56d0>
  4475c8:	ldrh	w0, [x4, x1, lsl #1]
  4475cc:	asr	x2, x1, #6
  4475d0:	lsl	x3, x5, x1
  4475d4:	add	x1, x1, #0x1
  4475d8:	tbz	w0, #13, 4475e8 <_obstack_memory_used@@Base+0x53f8>
  4475dc:	ldr	x0, [x19, x2, lsl #3]
  4475e0:	orr	x0, x0, x3
  4475e4:	str	x0, [x19, x2, lsl #3]
  4475e8:	cmp	x1, #0x100
  4475ec:	b.ne	4475c8 <_obstack_memory_used@@Base+0x53d8>  // b.any
  4475f0:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  4475f4:	bl	404740 <__ctype_b_loc@plt>
  4475f8:	mov	x1, #0x0                   	// #0
  4475fc:	mov	x5, #0x1                   	// #1
  447600:	ldr	x4, [x0]
  447604:	cbnz	x20, 447750 <_obstack_memory_used@@Base+0x5560>
  447608:	ldrh	w0, [x4, x1, lsl #1]
  44760c:	asr	x2, x1, #6
  447610:	lsl	x3, x5, x1
  447614:	add	x1, x1, #0x1
  447618:	tbz	w0, #9, 447628 <_obstack_memory_used@@Base+0x5438>
  44761c:	ldr	x0, [x19, x2, lsl #3]
  447620:	orr	x0, x0, x3
  447624:	str	x0, [x19, x2, lsl #3]
  447628:	cmp	x1, #0x100
  44762c:	b.ne	447608 <_obstack_memory_used@@Base+0x5418>  // b.any
  447630:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447634:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  447638:	mov	x0, x21
  44763c:	add	x1, x1, #0x2a8
  447640:	bl	404710 <strcmp@plt>
  447644:	cbz	w0, 44769c <_obstack_memory_used@@Base+0x54ac>
  447648:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44764c:	mov	x0, x21
  447650:	add	x1, x1, #0x2d8
  447654:	bl	404710 <strcmp@plt>
  447658:	cbnz	w0, 447788 <_obstack_memory_used@@Base+0x5598>
  44765c:	bl	404740 <__ctype_b_loc@plt>
  447660:	mov	x1, #0x0                   	// #0
  447664:	mov	x5, #0x1                   	// #1
  447668:	ldr	x4, [x0]
  44766c:	cbnz	x20, 4478f8 <_obstack_memory_used@@Base+0x5708>
  447670:	ldrh	w2, [x4, x1, lsl #1]
  447674:	asr	x0, x1, #6
  447678:	lsl	x3, x5, x1
  44767c:	add	x1, x1, #0x1
  447680:	tbz	w2, #11, 447690 <_obstack_memory_used@@Base+0x54a0>
  447684:	ldr	x2, [x19, x0, lsl #3]
  447688:	orr	x2, x2, x3
  44768c:	str	x2, [x19, x0, lsl #3]
  447690:	cmp	x1, #0x100
  447694:	b.ne	447670 <_obstack_memory_used@@Base+0x5480>  // b.any
  447698:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  44769c:	bl	404740 <__ctype_b_loc@plt>
  4476a0:	mov	x1, #0x0                   	// #0
  4476a4:	mov	x5, #0x1                   	// #1
  4476a8:	ldr	x4, [x0]
  4476ac:	cbnz	x20, 44788c <_obstack_memory_used@@Base+0x569c>
  4476b0:	ldrh	w0, [x4, x1, lsl #1]
  4476b4:	asr	x2, x1, #6
  4476b8:	lsl	x3, x5, x1
  4476bc:	add	x1, x1, #0x1
  4476c0:	tbz	w0, #10, 4476d0 <_obstack_memory_used@@Base+0x54e0>
  4476c4:	ldr	x0, [x19, x2, lsl #3]
  4476c8:	orr	x0, x0, x3
  4476cc:	str	x0, [x19, x2, lsl #3]
  4476d0:	cmp	x1, #0x100
  4476d4:	b.ne	4476b0 <_obstack_memory_used@@Base+0x54c0>  // b.any
  4476d8:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  4476dc:	mov	x4, x6
  4476e0:	mov	x0, #0x0                   	// #0
  4476e4:	nop
  4476e8:	ldrh	w1, [x5, x0, lsl #1]
  4476ec:	tbz	w1, #3, 447708 <_obstack_memory_used@@Base+0x5518>
  4476f0:	ldrb	w1, [x20, x0]
  4476f4:	ubfx	x3, x1, #6, #2
  4476f8:	lsl	x1, x4, x1
  4476fc:	ldr	x2, [x19, x3, lsl #3]
  447700:	orr	x1, x2, x1
  447704:	str	x1, [x19, x3, lsl #3]
  447708:	add	x0, x0, #0x1
  44770c:	cmp	x0, #0x100
  447710:	b.ne	4476e8 <_obstack_memory_used@@Base+0x54f8>  // b.any
  447714:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447718:	mov	x0, #0x0                   	// #0
  44771c:	nop
  447720:	ldrh	w1, [x4, x0, lsl #1]
  447724:	tbz	w1, #1, 447740 <_obstack_memory_used@@Base+0x5550>
  447728:	ldrb	w1, [x20, x0]
  44772c:	ubfx	x3, x1, #6, #2
  447730:	lsl	x1, x5, x1
  447734:	ldr	x2, [x19, x3, lsl #3]
  447738:	orr	x1, x2, x1
  44773c:	str	x1, [x19, x3, lsl #3]
  447740:	add	x0, x0, #0x1
  447744:	cmp	x0, #0x100
  447748:	b.ne	447720 <_obstack_memory_used@@Base+0x5530>  // b.any
  44774c:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447750:	mov	x0, #0x0                   	// #0
  447754:	nop
  447758:	ldrh	w1, [x4, x0, lsl #1]
  44775c:	tbz	w1, #9, 447778 <_obstack_memory_used@@Base+0x5588>
  447760:	ldrb	w1, [x20, x0]
  447764:	ubfx	x3, x1, #6, #2
  447768:	lsl	x1, x5, x1
  44776c:	ldr	x2, [x19, x3, lsl #3]
  447770:	orr	x1, x2, x1
  447774:	str	x1, [x19, x3, lsl #3]
  447778:	add	x0, x0, #0x1
  44777c:	cmp	x0, #0x100
  447780:	b.ne	447758 <_obstack_memory_used@@Base+0x5568>  // b.any
  447784:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447788:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44778c:	mov	x0, x21
  447790:	add	x1, x1, #0x2e0
  447794:	bl	404710 <strcmp@plt>
  447798:	cbnz	w0, 4477dc <_obstack_memory_used@@Base+0x55ec>
  44779c:	bl	404740 <__ctype_b_loc@plt>
  4477a0:	mov	x1, #0x0                   	// #0
  4477a4:	mov	x5, #0x1                   	// #1
  4477a8:	ldr	x4, [x0]
  4477ac:	cbnz	x20, 447ad8 <_obstack_memory_used@@Base+0x58e8>
  4477b0:	ldrh	w0, [x4, x1, lsl #1]
  4477b4:	asr	x2, x1, #6
  4477b8:	lsl	x3, x5, x1
  4477bc:	add	x1, x1, #0x1
  4477c0:	tbz	w0, #14, 4477d0 <_obstack_memory_used@@Base+0x55e0>
  4477c4:	ldr	x0, [x19, x2, lsl #3]
  4477c8:	orr	x0, x0, x3
  4477cc:	str	x0, [x19, x2, lsl #3]
  4477d0:	cmp	x1, #0x100
  4477d4:	b.ne	4477b0 <_obstack_memory_used@@Base+0x55c0>  // b.any
  4477d8:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  4477dc:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  4477e0:	mov	x0, x21
  4477e4:	add	x1, x1, #0x2b0
  4477e8:	bl	404710 <strcmp@plt>
  4477ec:	cbnz	w0, 447838 <_obstack_memory_used@@Base+0x5648>
  4477f0:	bl	404740 <__ctype_b_loc@plt>
  4477f4:	mov	x1, #0x0                   	// #0
  4477f8:	mov	x5, #0x1                   	// #1
  4477fc:	ldr	x4, [x0]
  447800:	cbnz	x20, 447b44 <_obstack_memory_used@@Base+0x5954>
  447804:	ldrh	w0, [x4, x1, lsl #1]
  447808:	asr	x2, x1, #6
  44780c:	lsl	x3, x5, x1
  447810:	add	x1, x1, #0x1
  447814:	tbz	w0, #8, 447824 <_obstack_memory_used@@Base+0x5634>
  447818:	ldr	x0, [x19, x2, lsl #3]
  44781c:	orr	x0, x0, x3
  447820:	str	x0, [x19, x2, lsl #3]
  447824:	cmp	x1, #0x100
  447828:	b.ne	447804 <_obstack_memory_used@@Base+0x5614>  // b.any
  44782c:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447830:	mov	w0, #0xc                   	// #12
  447834:	b	4474d4 <_obstack_memory_used@@Base+0x52e4>
  447838:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44783c:	mov	x0, x21
  447840:	add	x1, x1, #0x2e8
  447844:	bl	404710 <strcmp@plt>
  447848:	cbnz	w0, 44792c <_obstack_memory_used@@Base+0x573c>
  44784c:	bl	404740 <__ctype_b_loc@plt>
  447850:	mov	x1, #0x0                   	// #0
  447854:	mov	x4, #0x1                   	// #1
  447858:	ldr	x2, [x0]
  44785c:	cbnz	x20, 447b0c <_obstack_memory_used@@Base+0x591c>
  447860:	ldrh	w0, [x2, x1, lsl #1]
  447864:	asr	x3, x1, #6
  447868:	lsl	x5, x4, x1
  44786c:	add	x1, x1, #0x1
  447870:	tbz	w0, #0, 447880 <_obstack_memory_used@@Base+0x5690>
  447874:	ldr	x0, [x19, x3, lsl #3]
  447878:	orr	x0, x0, x5
  44787c:	str	x0, [x19, x3, lsl #3]
  447880:	cmp	x1, #0x100
  447884:	b.ne	447860 <_obstack_memory_used@@Base+0x5670>  // b.any
  447888:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  44788c:	mov	x0, #0x0                   	// #0
  447890:	ldrh	w1, [x4, x0, lsl #1]
  447894:	tbz	w1, #10, 4478b0 <_obstack_memory_used@@Base+0x56c0>
  447898:	ldrb	w1, [x20, x0]
  44789c:	ubfx	x3, x1, #6, #2
  4478a0:	lsl	x1, x5, x1
  4478a4:	ldr	x2, [x19, x3, lsl #3]
  4478a8:	orr	x1, x2, x1
  4478ac:	str	x1, [x19, x3, lsl #3]
  4478b0:	add	x0, x0, #0x1
  4478b4:	cmp	x0, #0x100
  4478b8:	b.ne	447890 <_obstack_memory_used@@Base+0x56a0>  // b.any
  4478bc:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  4478c0:	mov	x0, #0x0                   	// #0
  4478c4:	nop
  4478c8:	ldrh	w1, [x4, x0, lsl #1]
  4478cc:	tbz	w1, #13, 4478e8 <_obstack_memory_used@@Base+0x56f8>
  4478d0:	ldrb	w1, [x20, x0]
  4478d4:	ubfx	x3, x1, #6, #2
  4478d8:	lsl	x1, x5, x1
  4478dc:	ldr	x2, [x19, x3, lsl #3]
  4478e0:	orr	x1, x2, x1
  4478e4:	str	x1, [x19, x3, lsl #3]
  4478e8:	add	x0, x0, #0x1
  4478ec:	cmp	x0, #0x100
  4478f0:	b.ne	4478c8 <_obstack_memory_used@@Base+0x56d8>  // b.any
  4478f4:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  4478f8:	mov	x0, #0x0                   	// #0
  4478fc:	ldrh	w1, [x4, x0, lsl #1]
  447900:	tbz	w1, #11, 44791c <_obstack_memory_used@@Base+0x572c>
  447904:	ldrb	w1, [x20, x0]
  447908:	ubfx	x3, x1, #6, #2
  44790c:	lsl	x1, x5, x1
  447910:	ldr	x2, [x19, x3, lsl #3]
  447914:	orr	x1, x2, x1
  447918:	str	x1, [x19, x3, lsl #3]
  44791c:	add	x0, x0, #0x1
  447920:	cmp	x0, #0x100
  447924:	b.ne	4478fc <_obstack_memory_used@@Base+0x570c>  // b.any
  447928:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  44792c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  447930:	mov	x0, x21
  447934:	add	x1, x1, #0x2f0
  447938:	bl	404710 <strcmp@plt>
  44793c:	cbnz	w0, 4479b8 <_obstack_memory_used@@Base+0x57c8>
  447940:	bl	404740 <__ctype_b_loc@plt>
  447944:	mov	x1, #0x0                   	// #0
  447948:	mov	x4, #0x1                   	// #1
  44794c:	ldr	x3, [x0]
  447950:	cbnz	x20, 447980 <_obstack_memory_used@@Base+0x5790>
  447954:	ldrsh	w0, [x3, x1, lsl #1]
  447958:	asr	x2, x1, #6
  44795c:	lsl	x5, x4, x1
  447960:	add	x1, x1, #0x1
  447964:	tbz	w0, #31, 447974 <_obstack_memory_used@@Base+0x5784>
  447968:	ldr	x0, [x19, x2, lsl #3]
  44796c:	orr	x0, x0, x5
  447970:	str	x0, [x19, x2, lsl #3]
  447974:	cmp	x1, #0x100
  447978:	b.ne	447954 <_obstack_memory_used@@Base+0x5764>  // b.any
  44797c:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447980:	mov	x5, x4
  447984:	mov	x0, #0x0                   	// #0
  447988:	ldrsh	w1, [x3, x0, lsl #1]
  44798c:	tbz	w1, #31, 4479a8 <_obstack_memory_used@@Base+0x57b8>
  447990:	ldrb	w1, [x20, x0]
  447994:	ubfx	x4, x1, #6, #2
  447998:	lsl	x1, x5, x1
  44799c:	ldr	x2, [x19, x4, lsl #3]
  4479a0:	orr	x1, x2, x1
  4479a4:	str	x1, [x19, x4, lsl #3]
  4479a8:	add	x0, x0, #0x1
  4479ac:	cmp	x0, #0x100
  4479b0:	b.ne	447988 <_obstack_memory_used@@Base+0x5798>  // b.any
  4479b4:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  4479b8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  4479bc:	mov	x0, x21
  4479c0:	add	x1, x1, #0x2f8
  4479c4:	bl	404710 <strcmp@plt>
  4479c8:	cbnz	w0, 447a44 <_obstack_memory_used@@Base+0x5854>
  4479cc:	bl	404740 <__ctype_b_loc@plt>
  4479d0:	mov	x1, #0x0                   	// #0
  4479d4:	mov	x4, #0x1                   	// #1
  4479d8:	ldr	x3, [x0]
  4479dc:	cbnz	x20, 447a0c <_obstack_memory_used@@Base+0x581c>
  4479e0:	ldrh	w0, [x3, x1, lsl #1]
  4479e4:	asr	x2, x1, #6
  4479e8:	lsl	x5, x4, x1
  4479ec:	add	x1, x1, #0x1
  4479f0:	tbz	w0, #2, 447a00 <_obstack_memory_used@@Base+0x5810>
  4479f4:	ldr	x0, [x19, x2, lsl #3]
  4479f8:	orr	x0, x0, x5
  4479fc:	str	x0, [x19, x2, lsl #3]
  447a00:	cmp	x1, #0x100
  447a04:	b.ne	4479e0 <_obstack_memory_used@@Base+0x57f0>  // b.any
  447a08:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447a0c:	mov	x5, x4
  447a10:	mov	x0, #0x0                   	// #0
  447a14:	ldrh	w1, [x3, x0, lsl #1]
  447a18:	tbz	w1, #2, 447a34 <_obstack_memory_used@@Base+0x5844>
  447a1c:	ldrb	w1, [x20, x0]
  447a20:	ubfx	x4, x1, #6, #2
  447a24:	lsl	x1, x5, x1
  447a28:	ldr	x2, [x19, x4, lsl #3]
  447a2c:	orr	x1, x2, x1
  447a30:	str	x1, [x19, x4, lsl #3]
  447a34:	add	x0, x0, #0x1
  447a38:	cmp	x0, #0x100
  447a3c:	b.ne	447a14 <_obstack_memory_used@@Base+0x5824>  // b.any
  447a40:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447a44:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  447a48:	mov	x0, x21
  447a4c:	add	x1, x1, #0x300
  447a50:	bl	404710 <strcmp@plt>
  447a54:	cbnz	w0, 447ad0 <_obstack_memory_used@@Base+0x58e0>
  447a58:	bl	404740 <__ctype_b_loc@plt>
  447a5c:	mov	x1, #0x0                   	// #0
  447a60:	mov	x4, #0x1                   	// #1
  447a64:	ldr	x3, [x0]
  447a68:	cbnz	x20, 447a98 <_obstack_memory_used@@Base+0x58a8>
  447a6c:	ldrh	w0, [x3, x1, lsl #1]
  447a70:	asr	x2, x1, #6
  447a74:	lsl	x5, x4, x1
  447a78:	add	x1, x1, #0x1
  447a7c:	tbz	w0, #12, 447a8c <_obstack_memory_used@@Base+0x589c>
  447a80:	ldr	x0, [x19, x2, lsl #3]
  447a84:	orr	x0, x0, x5
  447a88:	str	x0, [x19, x2, lsl #3]
  447a8c:	cmp	x1, #0x100
  447a90:	b.ne	447a6c <_obstack_memory_used@@Base+0x587c>  // b.any
  447a94:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447a98:	mov	x5, x4
  447a9c:	mov	x0, #0x0                   	// #0
  447aa0:	ldrh	w1, [x3, x0, lsl #1]
  447aa4:	tbz	w1, #12, 447ac0 <_obstack_memory_used@@Base+0x58d0>
  447aa8:	ldrb	w1, [x20, x0]
  447aac:	ubfx	x4, x1, #6, #2
  447ab0:	lsl	x1, x5, x1
  447ab4:	ldr	x2, [x19, x4, lsl #3]
  447ab8:	orr	x1, x2, x1
  447abc:	str	x1, [x19, x4, lsl #3]
  447ac0:	add	x0, x0, #0x1
  447ac4:	cmp	x0, #0x100
  447ac8:	b.ne	447aa0 <_obstack_memory_used@@Base+0x58b0>  // b.any
  447acc:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447ad0:	mov	w0, #0x4                   	// #4
  447ad4:	b	4474d4 <_obstack_memory_used@@Base+0x52e4>
  447ad8:	mov	x0, #0x0                   	// #0
  447adc:	ldrh	w1, [x4, x0, lsl #1]
  447ae0:	tbz	w1, #14, 447afc <_obstack_memory_used@@Base+0x590c>
  447ae4:	ldrb	w1, [x20, x0]
  447ae8:	ubfx	x3, x1, #6, #2
  447aec:	lsl	x1, x5, x1
  447af0:	ldr	x2, [x19, x3, lsl #3]
  447af4:	orr	x1, x2, x1
  447af8:	str	x1, [x19, x3, lsl #3]
  447afc:	add	x0, x0, #0x1
  447b00:	cmp	x0, #0x100
  447b04:	b.ne	447adc <_obstack_memory_used@@Base+0x58ec>  // b.any
  447b08:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447b0c:	mov	x5, x4
  447b10:	mov	x0, #0x0                   	// #0
  447b14:	ldrh	w1, [x2, x0, lsl #1]
  447b18:	tbz	w1, #0, 447b34 <_obstack_memory_used@@Base+0x5944>
  447b1c:	ldrb	w1, [x20, x0]
  447b20:	ubfx	x4, x1, #6, #2
  447b24:	lsl	x1, x5, x1
  447b28:	ldr	x3, [x19, x4, lsl #3]
  447b2c:	orr	x1, x3, x1
  447b30:	str	x1, [x19, x4, lsl #3]
  447b34:	add	x0, x0, #0x1
  447b38:	cmp	x0, #0x100
  447b3c:	b.ne	447b14 <_obstack_memory_used@@Base+0x5924>  // b.any
  447b40:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447b44:	mov	x0, #0x0                   	// #0
  447b48:	ldrh	w1, [x4, x0, lsl #1]
  447b4c:	tbz	w1, #8, 447b68 <_obstack_memory_used@@Base+0x5978>
  447b50:	ldrb	w1, [x20, x0]
  447b54:	ubfx	x3, x1, #6, #2
  447b58:	lsl	x1, x5, x1
  447b5c:	ldr	x2, [x19, x3, lsl #3]
  447b60:	orr	x1, x2, x1
  447b64:	str	x1, [x19, x3, lsl #3]
  447b68:	add	x0, x0, #0x1
  447b6c:	cmp	x0, #0x100
  447b70:	b.ne	447b48 <_obstack_memory_used@@Base+0x5958>  // b.any
  447b74:	b	4474d0 <_obstack_memory_used@@Base+0x52e0>
  447b78:	stp	x29, x30, [sp, #-128]!
  447b7c:	mov	x29, sp
  447b80:	stp	x19, x20, [sp, #16]
  447b84:	mov	x20, x3
  447b88:	stp	x21, x22, [sp, #32]
  447b8c:	mov	x21, x0
  447b90:	mov	x22, x5
  447b94:	mov	x0, #0x20                  	// #32
  447b98:	stp	x23, x24, [sp, #48]
  447b9c:	and	w23, w4, #0xff
  447ba0:	stp	x25, x26, [sp, #64]
  447ba4:	mov	x25, x1
  447ba8:	mov	x26, x2
  447bac:	mov	x1, #0x1                   	// #1
  447bb0:	str	xzr, [sp, #88]
  447bb4:	bl	4044c0 <calloc@plt>
  447bb8:	cbz	x0, 447d94 <_obstack_memory_used@@Base+0x5ba4>
  447bbc:	mov	x19, x0
  447bc0:	mov	x1, #0x1                   	// #1
  447bc4:	mov	x0, #0x50                  	// #80
  447bc8:	bl	4044c0 <calloc@plt>
  447bcc:	mov	x24, x0
  447bd0:	cbz	x0, 447dbc <_obstack_memory_used@@Base+0x5bcc>
  447bd4:	ldrb	w7, [x0, #32]
  447bd8:	mov	x5, x26
  447bdc:	mov	x0, x25
  447be0:	add	x4, sp, #0x58
  447be4:	add	x3, x24, #0x48
  447be8:	add	x2, x24, #0x18
  447bec:	bfxil	w7, w23, #0, #1
  447bf0:	mov	x1, x19
  447bf4:	mov	x6, #0x0                   	// #0
  447bf8:	strb	w7, [x24, #32]
  447bfc:	bl	4473f0 <_obstack_memory_used@@Base+0x5200>
  447c00:	mov	w25, w0
  447c04:	cbnz	w0, 447dd4 <_obstack_memory_used@@Base+0x5be4>
  447c08:	ldrb	w1, [x20]
  447c0c:	mov	x0, #0x1                   	// #1
  447c10:	cbz	w1, 447c34 <_obstack_memory_used@@Base+0x5a44>
  447c14:	nop
  447c18:	ubfx	x4, x1, #6, #2
  447c1c:	lsl	x3, x0, x1
  447c20:	ldrb	w1, [x20, #1]!
  447c24:	ldr	x2, [x19, x4, lsl #3]
  447c28:	orr	x2, x2, x3
  447c2c:	str	x2, [x19, x4, lsl #3]
  447c30:	cbnz	w1, 447c18 <_obstack_memory_used@@Base+0x5a28>
  447c34:	cbz	w23, 447c54 <_obstack_memory_used@@Base+0x5a64>
  447c38:	mov	x0, #0x0                   	// #0
  447c3c:	ldr	x1, [x19, x0, lsl #3]
  447c40:	mvn	x1, x1
  447c44:	str	x1, [x19, x0, lsl #3]
  447c48:	add	x0, x0, #0x1
  447c4c:	cmp	x0, #0x4
  447c50:	b.ne	447c3c <_obstack_memory_used@@Base+0x5a4c>  // b.any
  447c54:	ldr	w0, [x21, #180]
  447c58:	cmp	w0, #0x1
  447c5c:	b.le	447c84 <_obstack_memory_used@@Base+0x5a94>
  447c60:	ldr	x3, [x21, #120]
  447c64:	mov	x1, #0x0                   	// #0
  447c68:	ldr	x0, [x19, x1]
  447c6c:	ldr	x2, [x3, x1]
  447c70:	and	x0, x0, x2
  447c74:	str	x0, [x19, x1]
  447c78:	add	x1, x1, #0x8
  447c7c:	cmp	x1, #0x20
  447c80:	b.ne	447c68 <_obstack_memory_used@@Base+0x5a78>  // b.any
  447c84:	mov	w5, #0x3                   	// #3
  447c88:	add	x23, x21, #0x70
  447c8c:	add	x25, x21, #0x80
  447c90:	mov	x0, x23
  447c94:	mov	x1, x25
  447c98:	add	x4, sp, #0x60
  447c9c:	mov	x3, #0x0                   	// #0
  447ca0:	mov	x2, #0x0                   	// #0
  447ca4:	str	x19, [sp, #96]
  447ca8:	strb	w5, [sp, #104]
  447cac:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  447cb0:	mov	x20, x0
  447cb4:	cbz	x0, 447d5c <_obstack_memory_used@@Base+0x5b6c>
  447cb8:	ldr	w0, [x21, #180]
  447cbc:	cmp	w0, #0x1
  447cc0:	b.le	447d38 <_obstack_memory_used@@Base+0x5b48>
  447cc4:	ldrb	w0, [x21, #176]
  447cc8:	mov	w5, #0x6                   	// #6
  447ccc:	mov	x3, #0x0                   	// #0
  447cd0:	add	x4, sp, #0x60
  447cd4:	orr	w0, w0, #0x2
  447cd8:	strb	w0, [x21, #176]
  447cdc:	mov	x1, x25
  447ce0:	mov	x0, x23
  447ce4:	mov	x2, #0x0                   	// #0
  447ce8:	str	x24, [sp, #96]
  447cec:	strb	w5, [sp, #104]
  447cf0:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  447cf4:	mov	x3, x0
  447cf8:	cbz	x0, 447d5c <_obstack_memory_used@@Base+0x5b6c>
  447cfc:	mov	w5, #0xa                   	// #10
  447d00:	mov	x2, x20
  447d04:	mov	x1, x25
  447d08:	mov	x0, x23
  447d0c:	add	x4, sp, #0x70
  447d10:	strb	w5, [sp, #120]
  447d14:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  447d18:	mov	x20, x0
  447d1c:	mov	x0, x20
  447d20:	ldp	x19, x20, [sp, #16]
  447d24:	ldp	x21, x22, [sp, #32]
  447d28:	ldp	x23, x24, [sp, #48]
  447d2c:	ldp	x25, x26, [sp, #64]
  447d30:	ldp	x29, x30, [sp], #128
  447d34:	ret
  447d38:	mov	x0, x24
  447d3c:	bl	4436e0 <_obstack_memory_used@@Base+0x14f0>
  447d40:	mov	x0, x20
  447d44:	ldp	x19, x20, [sp, #16]
  447d48:	ldp	x21, x22, [sp, #32]
  447d4c:	ldp	x23, x24, [sp, #48]
  447d50:	ldp	x25, x26, [sp, #64]
  447d54:	ldp	x29, x30, [sp], #128
  447d58:	ret
  447d5c:	mov	x0, x19
  447d60:	bl	4047b0 <free@plt>
  447d64:	mov	x0, x24
  447d68:	bl	4436e0 <_obstack_memory_used@@Base+0x14f0>
  447d6c:	mov	w0, #0xc                   	// #12
  447d70:	str	w0, [x22]
  447d74:	mov	x20, #0x0                   	// #0
  447d78:	mov	x0, x20
  447d7c:	ldp	x19, x20, [sp, #16]
  447d80:	ldp	x21, x22, [sp, #32]
  447d84:	ldp	x23, x24, [sp, #48]
  447d88:	ldp	x25, x26, [sp, #64]
  447d8c:	ldp	x29, x30, [sp], #128
  447d90:	ret
  447d94:	mov	w0, #0xc                   	// #12
  447d98:	str	w0, [x22]
  447d9c:	mov	x20, #0x0                   	// #0
  447da0:	mov	x0, x20
  447da4:	ldp	x19, x20, [sp, #16]
  447da8:	ldp	x21, x22, [sp, #32]
  447dac:	ldp	x23, x24, [sp, #48]
  447db0:	ldp	x25, x26, [sp, #64]
  447db4:	ldp	x29, x30, [sp], #128
  447db8:	ret
  447dbc:	mov	x0, x19
  447dc0:	bl	4047b0 <free@plt>
  447dc4:	mov	w0, #0xc                   	// #12
  447dc8:	mov	x20, #0x0                   	// #0
  447dcc:	str	w0, [x22]
  447dd0:	b	447d1c <_obstack_memory_used@@Base+0x5b2c>
  447dd4:	mov	x0, x19
  447dd8:	bl	4047b0 <free@plt>
  447ddc:	mov	x0, x24
  447de0:	mov	x20, #0x0                   	// #0
  447de4:	bl	4436e0 <_obstack_memory_used@@Base+0x14f0>
  447de8:	str	w25, [x22]
  447dec:	b	447d1c <_obstack_memory_used@@Base+0x5b2c>
  447df0:	stp	x29, x30, [sp, #-400]!
  447df4:	mov	x29, sp
  447df8:	stp	x21, x22, [sp, #32]
  447dfc:	ldr	x22, [x0]
  447e00:	stp	x25, x26, [sp, #64]
  447e04:	mov	w26, #0x0                   	// #0
  447e08:	stp	x27, x28, [sp, #80]
  447e0c:	mov	x28, x3
  447e10:	stp	x0, x2, [sp, #104]
  447e14:	ldr	w0, [x22, #180]
  447e18:	str	x1, [sp, #120]
  447e1c:	cmp	w0, #0x1
  447e20:	b.ne	447e30 <_obstack_memory_used@@Base+0x5c40>  // b.any
  447e24:	ldr	x0, [sp, #104]
  447e28:	ldr	x6, [x0, #24]
  447e2c:	ubfx	w26, w6, #22, #1
  447e30:	ldr	x0, [sp, #120]
  447e34:	mov	x21, #0x0                   	// #0
  447e38:	ldr	x2, [x0]
  447e3c:	cmp	x2, #0x0
  447e40:	b.le	447f04 <_obstack_memory_used@@Base+0x5d14>
  447e44:	mov	w27, #0x1                   	// #1
  447e48:	stp	x19, x20, [sp, #16]
  447e4c:	stp	x23, x24, [sp, #48]
  447e50:	add	x23, sp, #0x90
  447e54:	b	447e88 <_obstack_memory_used@@Base+0x5c98>
  447e58:	cmp	w19, #0x3
  447e5c:	b.eq	448038 <_obstack_memory_used@@Base+0x5e48>  // b.none
  447e60:	cmp	w19, #0x6
  447e64:	b.eq	447f18 <_obstack_memory_used@@Base+0x5d28>  // b.none
  447e68:	and	w0, w19, #0xfffffffd
  447e6c:	cmp	w0, #0x5
  447e70:	b.eq	448174 <_obstack_memory_used@@Base+0x5f84>  // b.none
  447e74:	cmp	w19, #0x2
  447e78:	b.eq	448198 <_obstack_memory_used@@Base+0x5fa8>  // b.none
  447e7c:	add	x21, x21, #0x1
  447e80:	cmp	x21, x2
  447e84:	b.ge	447efc <_obstack_memory_used@@Base+0x5d0c>  // b.tcont
  447e88:	ldr	x0, [sp, #112]
  447e8c:	ldr	x1, [x0]
  447e90:	ldr	x0, [x22]
  447e94:	ldr	x20, [x1, x21, lsl #3]
  447e98:	lsl	x24, x20, #4
  447e9c:	add	x1, x0, x24
  447ea0:	ldrb	w19, [x1, #8]
  447ea4:	cmp	w19, #0x1
  447ea8:	b.ne	447e58 <_obstack_memory_used@@Base+0x5c68>  // b.any
  447eac:	ldrb	w25, [x0, x24]
  447eb0:	and	x0, x25, #0xff
  447eb4:	strb	w19, [x28, x0]
  447eb8:	cbz	w26, 447ecc <_obstack_memory_used@@Base+0x5cdc>
  447ebc:	bl	4041f0 <__ctype_tolower_loc@plt>
  447ec0:	ldr	x0, [x0]
  447ec4:	ldrsw	x0, [x0, x25, lsl #2]
  447ec8:	strb	w19, [x28, x0]
  447ecc:	ldr	x0, [sp, #104]
  447ed0:	ldr	x0, [x0, #24]
  447ed4:	tbz	w0, #22, 447ee8 <_obstack_memory_used@@Base+0x5cf8>
  447ed8:	ldr	w0, [x22, #180]
  447edc:	cmp	w0, #0x1
  447ee0:	b.gt	4480b4 <_obstack_memory_used@@Base+0x5ec4>
  447ee4:	nop
  447ee8:	ldr	x0, [sp, #120]
  447eec:	add	x21, x21, #0x1
  447ef0:	ldr	x2, [x0]
  447ef4:	cmp	x21, x2
  447ef8:	b.lt	447e88 <_obstack_memory_used@@Base+0x5c98>  // b.tstop
  447efc:	ldp	x19, x20, [sp, #16]
  447f00:	ldp	x23, x24, [sp, #48]
  447f04:	ldp	x21, x22, [sp, #32]
  447f08:	ldp	x25, x26, [sp, #64]
  447f0c:	ldp	x27, x28, [sp, #80]
  447f10:	ldp	x29, x30, [sp], #400
  447f14:	ret
  447f18:	ldr	w0, [x22, #180]
  447f1c:	ldr	x24, [x1]
  447f20:	cmp	w0, #0x1
  447f24:	b.le	447f40 <_obstack_memory_used@@Base+0x5d50>
  447f28:	ldr	x0, [x24, #72]
  447f2c:	cbnz	x0, 447ff0 <_obstack_memory_used@@Base+0x5e00>
  447f30:	ldrb	w0, [x24, #32]
  447f34:	tbnz	w0, #0, 447ff0 <_obstack_memory_used@@Base+0x5e00>
  447f38:	ldr	x0, [x24, #64]
  447f3c:	cbnz	x0, 447ff0 <_obstack_memory_used@@Base+0x5e00>
  447f40:	ldr	x0, [x24, #40]
  447f44:	mov	x20, #0x0                   	// #0
  447f48:	cmp	x0, #0x0
  447f4c:	b.gt	447f60 <_obstack_memory_used@@Base+0x5d70>
  447f50:	b	447e7c <_obstack_memory_used@@Base+0x5c8c>
  447f54:	ldr	x0, [x24, #40]
  447f58:	cmp	x20, x0
  447f5c:	b.ge	447ee8 <_obstack_memory_used@@Base+0x5cf8>  // b.tcont
  447f60:	str	xzr, [sp, #136]
  447f64:	add	x2, sp, #0x88
  447f68:	mov	x0, x23
  447f6c:	lsl	x19, x20, #2
  447f70:	ldr	x1, [x24]
  447f74:	ldr	w1, [x1, x20, lsl #2]
  447f78:	add	x20, x20, #0x1
  447f7c:	bl	404c20 <wcrtomb@plt>
  447f80:	cmn	x0, #0x1
  447f84:	b.eq	447fa8 <_obstack_memory_used@@Base+0x5db8>  // b.none
  447f88:	ldrb	w25, [sp, #144]
  447f8c:	and	x0, x25, #0xff
  447f90:	strb	w27, [x28, x0]
  447f94:	cbz	w26, 447fa8 <_obstack_memory_used@@Base+0x5db8>
  447f98:	bl	4041f0 <__ctype_tolower_loc@plt>
  447f9c:	ldr	x0, [x0]
  447fa0:	ldrsw	x0, [x0, x25, lsl #2]
  447fa4:	strb	w27, [x28, x0]
  447fa8:	ldr	x0, [sp, #104]
  447fac:	ldr	x0, [x0, #24]
  447fb0:	tbz	w0, #22, 447f54 <_obstack_memory_used@@Base+0x5d64>
  447fb4:	ldr	w0, [x22, #180]
  447fb8:	cmp	w0, #0x1
  447fbc:	b.le	447f54 <_obstack_memory_used@@Base+0x5d64>
  447fc0:	ldr	x0, [x24]
  447fc4:	ldr	w0, [x0, x19]
  447fc8:	bl	404b80 <towlower@plt>
  447fcc:	mov	w1, w0
  447fd0:	add	x2, sp, #0x88
  447fd4:	mov	x0, x23
  447fd8:	bl	404c20 <wcrtomb@plt>
  447fdc:	cmn	x0, #0x1
  447fe0:	b.eq	447f54 <_obstack_memory_used@@Base+0x5d64>  // b.none
  447fe4:	ldrb	w0, [sp, #144]
  447fe8:	strb	w27, [x28, x0]
  447fec:	b	447f54 <_obstack_memory_used@@Base+0x5d64>
  447ff0:	strb	wzr, [sp, #136]
  447ff4:	nop
  447ff8:	mov	x3, x23
  447ffc:	add	x1, sp, #0x88
  448000:	mov	x2, #0x1                   	// #1
  448004:	mov	x0, #0x0                   	// #0
  448008:	str	xzr, [x23]
  44800c:	bl	441e18 <argp_parse@@Base+0xdf30>
  448010:	cmn	x0, #0x2
  448014:	b.ne	448020 <_obstack_memory_used@@Base+0x5e30>  // b.any
  448018:	ldrb	w0, [sp, #136]
  44801c:	strb	w27, [x28, x0]
  448020:	ldrb	w0, [sp, #136]
  448024:	add	w0, w0, #0x1
  448028:	and	w0, w0, #0xff
  44802c:	strb	w0, [sp, #136]
  448030:	cbnz	w0, 447ff8 <_obstack_memory_used@@Base+0x5e08>
  448034:	b	447ee8 <_obstack_memory_used@@Base+0x5cf8>
  448038:	str	xzr, [sp, #96]
  44803c:	ldr	x0, [x1]
  448040:	mov	w19, #0x0                   	// #0
  448044:	ldr	x1, [sp, #96]
  448048:	ldr	x25, [x0, x1]
  44804c:	lsl	x20, x1, #3
  448050:	lsr	x0, x25, x19
  448054:	add	w19, w19, #0x1
  448058:	tbz	w0, #0, 448088 <_obstack_memory_used@@Base+0x5e98>
  44805c:	strb	w27, [x28, x20]
  448060:	add	w0, w20, #0x80
  448064:	add	x2, x28, x20
  448068:	cmp	w0, #0x17f
  44806c:	cbz	w26, 448088 <_obstack_memory_used@@Base+0x5e98>
  448070:	b.hi	448084 <_obstack_memory_used@@Base+0x5e94>  // b.pmore
  448074:	bl	4041f0 <__ctype_tolower_loc@plt>
  448078:	ldr	x0, [x0]
  44807c:	ldrsw	x2, [x0, x20, lsl #2]
  448080:	add	x2, x28, x2
  448084:	strb	w27, [x2]
  448088:	add	x20, x20, #0x1
  44808c:	cmp	w19, #0x40
  448090:	b.ne	448050 <_obstack_memory_used@@Base+0x5e60>  // b.any
  448094:	ldr	x0, [sp, #96]
  448098:	add	x0, x0, #0x8
  44809c:	str	x0, [sp, #96]
  4480a0:	cmp	x0, #0x20
  4480a4:	b.eq	447ee8 <_obstack_memory_used@@Base+0x5cf8>  // b.none
  4480a8:	ldr	x0, [x22]
  4480ac:	add	x1, x0, x24
  4480b0:	b	44803c <_obstack_memory_used@@Base+0x5e4c>
  4480b4:	ldr	x2, [x22]
  4480b8:	add	x0, x20, #0x1
  4480bc:	add	x7, x23, #0x1
  4480c0:	ldrb	w1, [x2, x24]
  4480c4:	strb	w1, [sp, #144]
  4480c8:	ldr	x1, [x22, #16]
  4480cc:	cmp	x0, x1
  4480d0:	b.cs	4481d4 <_obstack_memory_used@@Base+0x5fe4>  // b.hs, b.nlast
  4480d4:	mov	w9, #0xff                  	// #255
  4480d8:	mov	w8, #0x1                   	// #1
  4480dc:	movk	w9, #0x20, lsl #16
  4480e0:	movk	w8, #0x20, lsl #16
  4480e4:	b	448100 <_obstack_memory_used@@Base+0x5f10>
  4480e8:	ldrb	w1, [x2, x3]
  4480ec:	strb	w1, [x7], #1
  4480f0:	ldr	x1, [x22, #16]
  4480f4:	cmp	x1, x0
  4480f8:	b.ls	44811c <_obstack_memory_used@@Base+0x5f2c>  // b.plast
  4480fc:	ldr	x2, [x22]
  448100:	lsl	x3, x0, #4
  448104:	add	x1, x2, x3
  448108:	add	x0, x0, #0x1
  44810c:	ldr	w1, [x1, #8]
  448110:	and	w1, w1, w9
  448114:	cmp	w1, w8
  448118:	b.eq	4480e8 <_obstack_memory_used@@Base+0x5ef8>  // b.none
  44811c:	sub	x19, x7, x23
  448120:	add	x3, sp, #0x88
  448124:	mov	x2, x19
  448128:	mov	x1, x23
  44812c:	add	x0, sp, #0x84
  448130:	str	xzr, [sp, #136]
  448134:	bl	441e18 <argp_parse@@Base+0xdf30>
  448138:	cmp	x0, x19
  44813c:	b.ne	447ee8 <_obstack_memory_used@@Base+0x5cf8>  // b.any
  448140:	ldr	w0, [sp, #132]
  448144:	bl	404b80 <towlower@plt>
  448148:	mov	w1, w0
  44814c:	add	x2, sp, #0x88
  448150:	mov	x0, x23
  448154:	bl	404c20 <wcrtomb@plt>
  448158:	cmn	x0, #0x1
  44815c:	b.eq	447ee8 <_obstack_memory_used@@Base+0x5cf8>  // b.none
  448160:	ldrb	w0, [sp, #144]
  448164:	strb	w27, [x28, x0]
  448168:	ldr	x0, [sp, #120]
  44816c:	ldr	x2, [x0]
  448170:	b	447e7c <_obstack_memory_used@@Base+0x5c8c>
  448174:	mov	x0, x28
  448178:	mov	x2, #0x100                 	// #256
  44817c:	mov	w1, #0x1                   	// #1
  448180:	bl	404410 <memset@plt>
  448184:	cmp	w19, #0x2
  448188:	b.eq	4481a8 <_obstack_memory_used@@Base+0x5fb8>  // b.none
  44818c:	ldp	x19, x20, [sp, #16]
  448190:	ldp	x23, x24, [sp, #48]
  448194:	b	447f04 <_obstack_memory_used@@Base+0x5d14>
  448198:	mov	x0, x28
  44819c:	mov	x2, #0x100                 	// #256
  4481a0:	mov	w1, #0x1                   	// #1
  4481a4:	bl	404410 <memset@plt>
  4481a8:	ldr	x1, [sp, #104]
  4481ac:	ldp	x19, x20, [sp, #16]
  4481b0:	ldrb	w0, [x1, #56]
  4481b4:	ldp	x23, x24, [sp, #48]
  4481b8:	orr	w0, w0, #0x1
  4481bc:	strb	w0, [x1, #56]
  4481c0:	ldp	x21, x22, [sp, #32]
  4481c4:	ldp	x25, x26, [sp, #64]
  4481c8:	ldp	x27, x28, [sp, #80]
  4481cc:	ldp	x29, x30, [sp], #400
  4481d0:	ret
  4481d4:	mov	x19, #0x1                   	// #1
  4481d8:	b	448120 <_obstack_memory_used@@Base+0x5f30>
  4481dc:	nop
  4481e0:	lsl	x7, x2, #4
  4481e4:	stp	x29, x30, [sp, #-48]!
  4481e8:	mov	x8, x0
  4481ec:	add	x0, x0, x7
  4481f0:	mov	x29, sp
  4481f4:	mov	x5, x3
  4481f8:	stp	x19, x20, [sp, #16]
  4481fc:	mov	x6, x4
  448200:	ldrb	w10, [x0, #8]
  448204:	cmp	w10, #0x7
  448208:	b.eq	448338 <_obstack_memory_used@@Base+0x6148>  // b.none
  44820c:	ldr	w0, [x3, #144]
  448210:	cmp	w0, #0x1
  448214:	b.eq	448240 <_obstack_memory_used@@Base+0x6050>  // b.none
  448218:	mov	x9, x1
  44821c:	mov	x0, x3
  448220:	mov	x1, x4
  448224:	bl	443f58 <_obstack_memory_used@@Base+0x1d68>
  448228:	mov	w19, w0
  44822c:	cmp	w10, #0x5
  448230:	b.eq	448254 <_obstack_memory_used@@Base+0x6064>  // b.none
  448234:	cmp	w10, #0x6
  448238:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  44823c:	b.ne	448288 <_obstack_memory_used@@Base+0x6098>  // b.any
  448240:	mov	w19, #0x0                   	// #0
  448244:	mov	w0, w19
  448248:	ldp	x19, x20, [sp, #16]
  44824c:	ldp	x29, x30, [sp], #48
  448250:	ret
  448254:	cmp	w0, #0x1
  448258:	b.eq	448240 <_obstack_memory_used@@Base+0x6050>  // b.none
  44825c:	ldr	x0, [x9]
  448260:	tbnz	w0, #6, 448274 <_obstack_memory_used@@Base+0x6084>
  448264:	ldr	x1, [x5, #8]
  448268:	ldrb	w1, [x1, x6]
  44826c:	cmp	w1, #0xa
  448270:	b.eq	448240 <_obstack_memory_used@@Base+0x6050>  // b.none
  448274:	tbz	w0, #7, 448244 <_obstack_memory_used@@Base+0x6054>
  448278:	ldr	x0, [x5, #8]
  44827c:	ldrb	w0, [x0, x6]
  448280:	cbz	w0, 448240 <_obstack_memory_used@@Base+0x6050>
  448284:	b	448244 <_obstack_memory_used@@Base+0x6054>
  448288:	stp	x21, x22, [sp, #32]
  44828c:	ldr	x22, [x8, x7]
  448290:	ldr	x4, [x22, #64]
  448294:	ldr	x2, [x22, #40]
  448298:	cbnz	x4, 4482a8 <_obstack_memory_used@@Base+0x60b8>
  44829c:	ldr	x0, [x22, #72]
  4482a0:	orr	x0, x2, x0
  4482a4:	cbz	x0, 448328 <_obstack_memory_used@@Base+0x6138>
  4482a8:	ldr	x0, [x5, #16]
  4482ac:	cmp	x2, #0x0
  4482b0:	ldr	w20, [x0, x6, lsl #2]
  4482b4:	b.le	4483c0 <_obstack_memory_used@@Base+0x61d0>
  4482b8:	mov	x1, #0x0                   	// #0
  4482bc:	ldr	x3, [x22]
  4482c0:	b	4482cc <_obstack_memory_used@@Base+0x60dc>
  4482c4:	cmp	x1, x2
  4482c8:	b.eq	4483c0 <_obstack_memory_used@@Base+0x61d0>  // b.none
  4482cc:	ldr	w0, [x3, x1, lsl #2]
  4482d0:	add	x1, x1, #0x1
  4482d4:	cmp	w20, w0
  4482d8:	b.ne	4482c4 <_obstack_memory_used@@Base+0x60d4>  // b.any
  4482dc:	ldrb	w0, [x22, #32]
  4482e0:	tbz	w0, #0, 448330 <_obstack_memory_used@@Base+0x6140>
  4482e4:	ldp	x21, x22, [sp, #32]
  4482e8:	b	448240 <_obstack_memory_used@@Base+0x6050>
  4482ec:	ldr	x4, [x22, #64]
  4482f0:	cmp	x4, #0x0
  4482f4:	b.le	448328 <_obstack_memory_used@@Base+0x6138>
  4482f8:	ldr	x2, [x22, #8]
  4482fc:	mov	x0, #0x0                   	// #0
  448300:	ldr	w1, [x2, x0, lsl #2]
  448304:	cmp	w20, w1
  448308:	b.cc	44831c <_obstack_memory_used@@Base+0x612c>  // b.lo, b.ul, b.last
  44830c:	ldr	x1, [x22, #16]
  448310:	ldr	w1, [x1, x0, lsl #2]
  448314:	cmp	w20, w1
  448318:	b.ls	4482dc <_obstack_memory_used@@Base+0x60ec>  // b.plast
  44831c:	add	x0, x0, #0x1
  448320:	cmp	x0, x4
  448324:	b.ne	448300 <_obstack_memory_used@@Base+0x6110>  // b.any
  448328:	ldrb	w0, [x22, #32]
  44832c:	tbz	w0, #0, 4482e4 <_obstack_memory_used@@Base+0x60f4>
  448330:	ldp	x21, x22, [sp, #32]
  448334:	b	448244 <_obstack_memory_used@@Base+0x6054>
  448338:	ldr	x0, [x3, #8]
  44833c:	add	x1, x0, x4
  448340:	ldrb	w0, [x0, x4]
  448344:	cmp	w0, #0xc1
  448348:	b.ls	448240 <_obstack_memory_used@@Base+0x6050>  // b.plast
  44834c:	ldr	x2, [x5, #88]
  448350:	add	x3, x4, #0x1
  448354:	cmp	x3, x2
  448358:	b.ge	448240 <_obstack_memory_used@@Base+0x6050>  // b.tcont
  44835c:	ldrb	w3, [x1, #1]
  448360:	cmp	w0, #0xdf
  448364:	b.ls	448420 <_obstack_memory_used@@Base+0x6230>  // b.plast
  448368:	cmp	w0, #0xef
  44836c:	b.hi	4483fc <_obstack_memory_used@@Base+0x620c>  // b.pmore
  448370:	cmp	w0, #0xe0
  448374:	mov	w0, #0x9f                  	// #159
  448378:	ccmp	w3, w0, #0x2, eq  // eq = none
  44837c:	b.ls	448240 <_obstack_memory_used@@Base+0x6050>  // b.plast
  448380:	mov	x3, #0x3                   	// #3
  448384:	mov	w19, w3
  448388:	add	x6, x6, x3
  44838c:	cmp	x2, x6
  448390:	b.lt	448240 <_obstack_memory_used@@Base+0x6050>  // b.tstop
  448394:	mov	x2, #0x1                   	// #1
  448398:	b	4483a4 <_obstack_memory_used@@Base+0x61b4>
  44839c:	cmp	x2, x3
  4483a0:	b.eq	448244 <_obstack_memory_used@@Base+0x6054>  // b.none
  4483a4:	ldrb	w0, [x1, x2]
  4483a8:	add	x2, x2, #0x1
  4483ac:	sub	w0, w0, #0x80
  4483b0:	and	w0, w0, #0xff
  4483b4:	cmp	w0, #0x3f
  4483b8:	b.ls	44839c <_obstack_memory_used@@Base+0x61ac>  // b.plast
  4483bc:	b	448240 <_obstack_memory_used@@Base+0x6050>
  4483c0:	ldr	x0, [x22, #72]
  4483c4:	cmp	x0, #0x0
  4483c8:	b.le	4482f0 <_obstack_memory_used@@Base+0x6100>
  4483cc:	mov	x21, #0x0                   	// #0
  4483d0:	b	4483e0 <_obstack_memory_used@@Base+0x61f0>
  4483d4:	ldr	x0, [x22, #72]
  4483d8:	cmp	x21, x0
  4483dc:	b.ge	4482ec <_obstack_memory_used@@Base+0x60fc>  // b.tcont
  4483e0:	ldr	x1, [x22, #24]
  4483e4:	mov	w0, w20
  4483e8:	ldr	x1, [x1, x21, lsl #3]
  4483ec:	add	x21, x21, #0x1
  4483f0:	bl	404300 <iswctype@plt>
  4483f4:	cbz	w0, 4483d4 <_obstack_memory_used@@Base+0x61e4>
  4483f8:	b	4482dc <_obstack_memory_used@@Base+0x60ec>
  4483fc:	cmp	w0, #0xf7
  448400:	b.hi	448438 <_obstack_memory_used@@Base+0x6248>  // b.pmore
  448404:	cmp	w0, #0xf0
  448408:	mov	w0, #0x8f                  	// #143
  44840c:	ccmp	w3, w0, #0x2, eq  // eq = none
  448410:	b.ls	448240 <_obstack_memory_used@@Base+0x6050>  // b.plast
  448414:	mov	x3, #0x4                   	// #4
  448418:	mov	w19, w3
  44841c:	b	448388 <_obstack_memory_used@@Base+0x6198>
  448420:	sub	w0, w3, #0x80
  448424:	mov	w19, #0x2                   	// #2
  448428:	and	w0, w0, #0xff
  44842c:	cmp	w0, #0x3f
  448430:	b.ls	448244 <_obstack_memory_used@@Base+0x6054>  // b.plast
  448434:	b	448240 <_obstack_memory_used@@Base+0x6050>
  448438:	cmp	w0, #0xfb
  44843c:	b.hi	44845c <_obstack_memory_used@@Base+0x626c>  // b.pmore
  448440:	cmp	w0, #0xf8
  448444:	mov	w0, #0x87                  	// #135
  448448:	ccmp	w3, w0, #0x2, eq  // eq = none
  44844c:	b.ls	448240 <_obstack_memory_used@@Base+0x6050>  // b.plast
  448450:	mov	x3, #0x5                   	// #5
  448454:	mov	w19, w3
  448458:	b	448388 <_obstack_memory_used@@Base+0x6198>
  44845c:	cmp	w0, #0xfd
  448460:	b.hi	448240 <_obstack_memory_used@@Base+0x6050>  // b.pmore
  448464:	cmp	w0, #0xfc
  448468:	mov	w0, #0x83                  	// #131
  44846c:	ccmp	w3, w0, #0x2, eq  // eq = none
  448470:	b.ls	448240 <_obstack_memory_used@@Base+0x6050>  // b.plast
  448474:	mov	x3, #0x6                   	// #6
  448478:	mov	w19, w3
  44847c:	b	448388 <_obstack_memory_used@@Base+0x6198>
  448480:	stp	x29, x30, [sp, #-240]!
  448484:	mov	x29, sp
  448488:	stp	x27, x28, [sp, #80]
  44848c:	ldr	x27, [x0, #152]
  448490:	stp	x19, x20, [sp, #16]
  448494:	mov	x20, x2
  448498:	stp	x21, x22, [sp, #32]
  44849c:	mov	x19, x3
  4484a0:	str	x1, [sp, #144]
  4484a4:	ldr	x22, [x1, #8]
  4484a8:	lsl	x1, x2, #4
  4484ac:	ldr	x2, [x27]
  4484b0:	stp	x25, x26, [sp, #64]
  4484b4:	mov	x26, x0
  4484b8:	ldrsw	x0, [x0, #224]
  4484bc:	ldr	x1, [x2, x1]
  4484c0:	stp	x23, x24, [sp, #48]
  4484c4:	add	x0, x0, x5
  4484c8:	str	x5, [sp, #120]
  4484cc:	cmp	x0, x22
  4484d0:	str	x1, [sp, #128]
  4484d4:	str	w6, [sp, #140]
  4484d8:	str	x4, [sp, #168]
  4484dc:	str	wzr, [sp, #184]
  4484e0:	b.ge	44891c <_obstack_memory_used@@Base+0x672c>  // b.tcont
  4484e4:	ldr	x0, [sp, #144]
  4484e8:	ldr	w2, [x26, #160]
  4484ec:	ldr	x21, [x0]
  4484f0:	ldr	x22, [x0, #16]
  4484f4:	ldr	x0, [x26, #72]
  4484f8:	str	x0, [sp, #160]
  4484fc:	ldr	x0, [x26, #184]
  448500:	str	x0, [sp, #152]
  448504:	cbz	x21, 4488b8 <_obstack_memory_used@@Base+0x66c8>
  448508:	str	x21, [x26, #72]
  44850c:	sub	x1, x21, #0x1
  448510:	str	x22, [x26, #184]
  448514:	mov	x0, x26
  448518:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  44851c:	mov	w23, w0
  448520:	cmp	x21, x19
  448524:	b.eq	4488d0 <_obstack_memory_used@@Base+0x66e0>  // b.none
  448528:	ldr	x19, [x22, x21, lsl #3]
  44852c:	cbz	x19, 448538 <_obstack_memory_used@@Base+0x6348>
  448530:	ldrb	w0, [x19, #104]
  448534:	tbnz	w0, #6, 448760 <_obstack_memory_used@@Base+0x6570>
  448538:	stp	xzr, xzr, [sp, #192]
  44853c:	str	xzr, [sp, #208]
  448540:	ldr	x0, [sp, #120]
  448544:	cmp	x21, x0
  448548:	b.ge	4486c8 <_obstack_memory_used@@Base+0x64d8>  // b.tcont
  44854c:	add	x22, x21, #0x1
  448550:	str	xzr, [sp, #96]
  448554:	ldr	x1, [sp, #96]
  448558:	sub	x21, x22, #0x1
  44855c:	ldrsw	x0, [x26, #224]
  448560:	cmp	x1, x0
  448564:	b.gt	4486c8 <_obstack_memory_used@@Base+0x64d8>
  448568:	ldr	x0, [x26, #184]
  44856c:	lsl	x1, x22, #3
  448570:	str	x1, [sp, #104]
  448574:	str	xzr, [sp, #200]
  448578:	ldr	x1, [x0, x22, lsl #3]
  44857c:	cbz	x1, 448888 <_obstack_memory_used@@Base+0x6698>
  448580:	add	x1, x1, #0x8
  448584:	add	x0, sp, #0xc0
  448588:	bl	444418 <_obstack_memory_used@@Base+0x2228>
  44858c:	str	w0, [sp, #184]
  448590:	cbnz	w0, 448738 <_obstack_memory_used@@Base+0x6548>
  448594:	cbz	x19, 448630 <_obstack_memory_used@@Base+0x6440>
  448598:	ldr	x0, [x19, #40]
  44859c:	str	wzr, [sp, #188]
  4485a0:	stp	xzr, xzr, [sp, #216]
  4485a4:	add	x19, x19, #0x20
  4485a8:	cmp	x0, #0x0
  4485ac:	str	xzr, [sp, #232]
  4485b0:	ldr	x23, [x26, #152]
  4485b4:	b.le	4489a0 <_obstack_memory_used@@Base+0x67b0>
  4485b8:	add	x0, x23, #0xd8
  4485bc:	mov	x24, #0x0                   	// #0
  4485c0:	str	x0, [sp, #112]
  4485c4:	nop
  4485c8:	ldr	x1, [x19, #16]
  4485cc:	ldr	x0, [x23]
  4485d0:	ldr	x28, [x1, x24, lsl #3]
  4485d4:	lsl	x20, x28, #4
  4485d8:	add	x1, x0, x20
  4485dc:	ldrb	w2, [x1, #10]
  4485e0:	tbnz	w2, #4, 4487d0 <_obstack_memory_used@@Base+0x65e0>
  4485e4:	mov	x2, x21
  4485e8:	mov	x0, x26
  4485ec:	bl	445c78 <_obstack_memory_used@@Base+0x3a88>
  4485f0:	tst	w0, #0xff
  4485f4:	b.eq	448614 <_obstack_memory_used@@Base+0x6424>  // b.none
  4485f8:	lsl	x25, x28, #3
  4485fc:	ldr	x1, [x23, #24]
  448600:	add	x0, sp, #0xc0
  448604:	ldr	x1, [x1, x25]
  448608:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  44860c:	tst	w0, #0xff
  448610:	b.eq	448728 <_obstack_memory_used@@Base+0x6538>  // b.none
  448614:	ldr	x0, [x19, #8]
  448618:	add	x24, x24, #0x1
  44861c:	cmp	x24, x0
  448620:	b.lt	4485c8 <_obstack_memory_used@@Base+0x63d8>  // b.tstop
  448624:	ldr	x0, [sp, #232]
  448628:	bl	4047b0 <free@plt>
  44862c:	str	wzr, [sp, #184]
  448630:	ldr	x0, [sp, #200]
  448634:	mov	x20, x22
  448638:	cbz	x0, 448678 <_obstack_memory_used@@Base+0x6488>
  44863c:	ldr	w3, [sp, #140]
  448640:	add	x1, sp, #0xc0
  448644:	ldr	x2, [sp, #128]
  448648:	mov	x0, x27
  44864c:	bl	444838 <_obstack_memory_used@@Base+0x2648>
  448650:	str	w0, [sp, #184]
  448654:	cbnz	w0, 448738 <_obstack_memory_used@@Base+0x6548>
  448658:	ldr	w4, [sp, #140]
  44865c:	mov	x2, x22
  448660:	ldr	x3, [sp, #128]
  448664:	add	x1, sp, #0xc0
  448668:	mov	x0, x26
  44866c:	bl	445780 <_obstack_memory_used@@Base+0x3590>
  448670:	str	w0, [sp, #184]
  448674:	cbnz	w0, 448738 <_obstack_memory_used@@Base+0x6548>
  448678:	ldr	w2, [x26, #160]
  44867c:	mov	x1, x21
  448680:	mov	x0, x26
  448684:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  448688:	mov	w3, w0
  44868c:	add	x2, sp, #0xc0
  448690:	mov	x1, x27
  448694:	add	x0, sp, #0xb8
  448698:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  44869c:	mov	x19, x0
  4486a0:	cbz	x0, 448894 <_obstack_memory_used@@Base+0x66a4>
  4486a4:	ldr	x1, [sp, #104]
  4486a8:	str	xzr, [sp, #96]
  4486ac:	ldr	x0, [x26, #184]
  4486b0:	str	x19, [x0, x1]
  4486b4:	ldr	x0, [sp, #120]
  4486b8:	add	x22, x22, #0x1
  4486bc:	cmp	x20, x0
  4486c0:	b.lt	448554 <_obstack_memory_used@@Base+0x6364>  // b.tstop
  4486c4:	mov	x21, x20
  4486c8:	ldr	x0, [sp, #208]
  4486cc:	bl	4047b0 <free@plt>
  4486d0:	ldr	x1, [sp, #120]
  4486d4:	ldr	x0, [x26, #184]
  4486d8:	ldr	x0, [x0, x1, lsl #3]
  4486dc:	cbz	x0, 448980 <_obstack_memory_used@@Base+0x6790>
  4486e0:	ldp	x1, x3, [sp, #144]
  4486e4:	str	x21, [x1]
  4486e8:	ldr	x1, [sp, #160]
  4486ec:	str	x1, [x26, #72]
  4486f0:	add	x1, x0, #0x18
  4486f4:	str	x3, [x26, #184]
  4486f8:	ldr	x0, [x0, #16]
  4486fc:	ldr	x2, [sp, #168]
  448700:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  448704:	cmp	x0, #0x0
  448708:	cset	w0, eq  // eq = none
  44870c:	ldp	x19, x20, [sp, #16]
  448710:	ldp	x21, x22, [sp, #32]
  448714:	ldp	x23, x24, [sp, #48]
  448718:	ldp	x25, x26, [sp, #64]
  44871c:	ldp	x27, x28, [sp, #80]
  448720:	ldp	x29, x30, [sp], #240
  448724:	ret
  448728:	ldr	x0, [sp, #232]
  44872c:	bl	4047b0 <free@plt>
  448730:	mov	w0, #0xc                   	// #12
  448734:	str	w0, [sp, #184]
  448738:	ldr	x0, [sp, #208]
  44873c:	bl	4047b0 <free@plt>
  448740:	ldr	w0, [sp, #184]
  448744:	ldp	x19, x20, [sp, #16]
  448748:	ldp	x21, x22, [sp, #32]
  44874c:	ldp	x23, x24, [sp, #48]
  448750:	ldp	x25, x26, [sp, #64]
  448754:	ldp	x27, x28, [sp, #80]
  448758:	ldp	x29, x30, [sp], #240
  44875c:	ret
  448760:	add	x22, sp, #0xc0
  448764:	add	x1, x19, #0x8
  448768:	mov	x0, x22
  44876c:	bl	444fa0 <_obstack_memory_used@@Base+0x2db0>
  448770:	str	w0, [sp, #184]
  448774:	cbnz	w0, 448744 <_obstack_memory_used@@Base+0x6554>
  448778:	ldrb	w0, [x19, #104]
  44877c:	tbz	w0, #6, 448540 <_obstack_memory_used@@Base+0x6350>
  448780:	ldr	x0, [sp, #200]
  448784:	cbz	x0, 4487a8 <_obstack_memory_used@@Base+0x65b8>
  448788:	ldr	w4, [sp, #140]
  44878c:	mov	x2, x21
  448790:	ldr	x3, [sp, #128]
  448794:	mov	x1, x22
  448798:	mov	x0, x26
  44879c:	bl	445780 <_obstack_memory_used@@Base+0x3590>
  4487a0:	str	w0, [sp, #184]
  4487a4:	cbnz	w0, 448738 <_obstack_memory_used@@Base+0x6548>
  4487a8:	mov	w3, w23
  4487ac:	mov	x2, x22
  4487b0:	mov	x1, x27
  4487b4:	add	x0, sp, #0xb8
  4487b8:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  4487bc:	mov	x19, x0
  4487c0:	cbz	x0, 44896c <_obstack_memory_used@@Base+0x677c>
  4487c4:	ldr	x0, [x26, #184]
  4487c8:	str	x19, [x0, x21, lsl #3]
  4487cc:	b	448540 <_obstack_memory_used@@Base+0x6350>
  4487d0:	ldr	x1, [sp, #112]
  4487d4:	mov	x4, x21
  4487d8:	mov	x3, x26
  4487dc:	mov	x2, x28
  4487e0:	bl	4481e0 <_obstack_memory_used@@Base+0x5ff0>
  4487e4:	cmp	w0, #0x1
  4487e8:	b.le	448878 <_obstack_memory_used@@Base+0x6688>
  4487ec:	ldr	x1, [x26, #184]
  4487f0:	add	x20, x21, w0, sxtw
  4487f4:	ldr	x0, [x23, #24]
  4487f8:	lsl	x25, x28, #3
  4487fc:	ldr	x1, [x1, x20, lsl #3]
  448800:	ldr	x28, [x0, x28, lsl #3]
  448804:	str	xzr, [sp, #224]
  448808:	cbz	x1, 448820 <_obstack_memory_used@@Base+0x6630>
  44880c:	add	x1, x1, #0x8
  448810:	add	x0, sp, #0xd8
  448814:	bl	444418 <_obstack_memory_used@@Base+0x2228>
  448818:	str	w0, [sp, #188]
  44881c:	cbnz	w0, 448860 <_obstack_memory_used@@Base+0x6670>
  448820:	mov	x1, x28
  448824:	add	x0, sp, #0xd8
  448828:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  44882c:	tst	w0, #0xff
  448830:	b.eq	448728 <_obstack_memory_used@@Base+0x6538>  // b.none
  448834:	ldr	x28, [x26, #184]
  448838:	mov	x1, x23
  44883c:	add	x2, sp, #0xd8
  448840:	add	x0, sp, #0xbc
  448844:	bl	445498 <_obstack_memory_used@@Base+0x32a8>
  448848:	ldr	x1, [x26, #184]
  44884c:	str	x0, [x28, x20, lsl #3]
  448850:	ldr	x0, [x1, x20, lsl #3]
  448854:	cbnz	x0, 4485fc <_obstack_memory_used@@Base+0x640c>
  448858:	ldr	w0, [sp, #188]
  44885c:	cbz	w0, 4485fc <_obstack_memory_used@@Base+0x640c>
  448860:	ldr	x0, [sp, #232]
  448864:	bl	4047b0 <free@plt>
  448868:	ldr	w0, [sp, #188]
  44886c:	str	w0, [sp, #184]
  448870:	cbz	w0, 448630 <_obstack_memory_used@@Base+0x6440>
  448874:	b	448738 <_obstack_memory_used@@Base+0x6548>
  448878:	cbnz	w0, 4485f8 <_obstack_memory_used@@Base+0x6408>
  44887c:	ldr	x1, [x23]
  448880:	add	x1, x1, x20
  448884:	b	4485e4 <_obstack_memory_used@@Base+0x63f4>
  448888:	cbnz	x19, 448598 <_obstack_memory_used@@Base+0x63a8>
  44888c:	mov	x20, x22
  448890:	b	448678 <_obstack_memory_used@@Base+0x6488>
  448894:	ldr	w0, [sp, #184]
  448898:	cbnz	w0, 448738 <_obstack_memory_used@@Base+0x6548>
  44889c:	ldr	x1, [sp, #96]
  4488a0:	ldr	x0, [x26, #184]
  4488a4:	add	x1, x1, #0x1
  4488a8:	str	x1, [sp, #96]
  4488ac:	ldr	x1, [sp, #104]
  4488b0:	str	xzr, [x0, x1]
  4488b4:	b	4486b4 <_obstack_memory_used@@Base+0x64c4>
  4488b8:	str	x19, [x26, #72]
  4488bc:	sub	x1, x19, #0x1
  4488c0:	str	x22, [x26, #184]
  4488c4:	mov	x0, x26
  4488c8:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  4488cc:	mov	w23, w0
  4488d0:	mov	x1, #0x1                   	// #1
  4488d4:	mov	x0, #0x8                   	// #8
  4488d8:	stp	x1, x1, [sp, #192]
  4488dc:	bl	404310 <malloc@plt>
  4488e0:	str	x0, [sp, #208]
  4488e4:	mov	x4, x0
  4488e8:	cbz	x0, 448978 <_obstack_memory_used@@Base+0x6788>
  4488ec:	ldr	w3, [sp, #140]
  4488f0:	add	x22, sp, #0xc0
  4488f4:	ldr	x2, [sp, #128]
  4488f8:	str	x20, [x4]
  4488fc:	mov	x1, x22
  448900:	mov	x0, x27
  448904:	str	wzr, [sp, #184]
  448908:	mov	x21, x19
  44890c:	bl	444838 <_obstack_memory_used@@Base+0x2648>
  448910:	str	w0, [sp, #184]
  448914:	cbz	w0, 448780 <_obstack_memory_used@@Base+0x6590>
  448918:	b	448738 <_obstack_memory_used@@Base+0x6548>
  44891c:	add	x21, x0, #0x1
  448920:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  448924:	sub	x0, x0, x22
  448928:	cmp	x0, x21
  44892c:	b.lt	448978 <_obstack_memory_used@@Base+0x6788>  // b.tstop
  448930:	add	x23, x22, x21
  448934:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  448938:	cmp	x23, x0
  44893c:	b.hi	448978 <_obstack_memory_used@@Base+0x6788>  // b.pmore
  448940:	ldr	x24, [sp, #144]
  448944:	lsl	x1, x23, #3
  448948:	ldr	x0, [x24, #16]
  44894c:	bl	404530 <realloc@plt>
  448950:	cbz	x0, 448978 <_obstack_memory_used@@Base+0x6788>
  448954:	stp	x23, x0, [x24, #8]
  448958:	lsl	x2, x21, #3
  44895c:	add	x0, x0, x22, lsl #3
  448960:	mov	w1, #0x0                   	// #0
  448964:	bl	404410 <memset@plt>
  448968:	b	4484e4 <_obstack_memory_used@@Base+0x62f4>
  44896c:	ldr	w0, [sp, #184]
  448970:	cbz	w0, 4487c4 <_obstack_memory_used@@Base+0x65d4>
  448974:	b	448738 <_obstack_memory_used@@Base+0x6548>
  448978:	mov	w0, #0xc                   	// #12
  44897c:	b	448744 <_obstack_memory_used@@Base+0x6554>
  448980:	ldr	x0, [sp, #144]
  448984:	ldr	x1, [sp, #160]
  448988:	str	x21, [x0]
  44898c:	mov	w0, #0x1                   	// #1
  448990:	str	x1, [x26, #72]
  448994:	ldr	x1, [sp, #152]
  448998:	str	x1, [x26, #184]
  44899c:	b	448744 <_obstack_memory_used@@Base+0x6554>
  4489a0:	mov	x0, #0x0                   	// #0
  4489a4:	b	448628 <_obstack_memory_used@@Base+0x6438>
  4489a8:	stp	x29, x30, [sp, #-208]!
  4489ac:	mov	x5, #0x2                   	// #2
  4489b0:	tst	w4, #0xff
  4489b4:	mov	x29, sp
  4489b8:	stp	x19, x20, [sp, #16]
  4489bc:	mov	x19, x1
  4489c0:	mov	x20, x3
  4489c4:	stp	x21, x22, [sp, #32]
  4489c8:	mov	x21, x2
  4489cc:	stp	x23, x24, [sp, #48]
  4489d0:	stp	x25, x26, [sp, #64]
  4489d4:	stp	x27, x28, [sp, #80]
  4489d8:	stp	xzr, x5, [x29, #184]
  4489dc:	str	xzr, [x29, #200]
  4489e0:	ldr	x24, [x0]
  4489e4:	b.eq	448f58 <_obstack_memory_used@@Base+0x6d68>  // b.none
  4489e8:	mov	x0, #0x60                  	// #96
  4489ec:	bl	404310 <malloc@plt>
  4489f0:	str	x0, [x29, #200]
  4489f4:	add	x22, x29, #0xb8
  4489f8:	cbz	x0, 448ebc <_obstack_memory_used@@Base+0x6ccc>
  4489fc:	lsl	x0, x21, #4
  448a00:	str	x0, [x29, #136]
  448a04:	stp	xzr, xzr, [x29, #160]
  448a08:	cmp	x0, #0xfbf
  448a0c:	str	xzr, [x29, #176]
  448a10:	ldr	x28, [x24, #144]
  448a14:	b.hi	448f78 <_obstack_memory_used@@Base+0x6d88>  // b.pmore
  448a18:	sub	sp, sp, x0
  448a1c:	str	wzr, [x29, #108]
  448a20:	mov	x0, sp
  448a24:	str	x0, [x29, #120]
  448a28:	ldr	x0, [x29, #120]
  448a2c:	mov	x1, x20
  448a30:	ldr	x2, [x29, #136]
  448a34:	bl	403f70 <memcpy@plt>
  448a38:	ldr	x3, [x20]
  448a3c:	add	x0, x29, #0xb0
  448a40:	str	x0, [x29, #112]
  448a44:	str	x3, [x29, #152]
  448a48:	add	x0, x22, #0x10
  448a4c:	str	x0, [x29, #128]
  448a50:	ldr	x0, [x20, #8]
  448a54:	cmp	x0, x3
  448a58:	b.lt	448b2c <_obstack_memory_used@@Base+0x693c>  // b.tstop
  448a5c:	nop
  448a60:	ldr	x2, [x24]
  448a64:	lsl	x25, x28, #4
  448a68:	mov	x23, x28
  448a6c:	add	x4, x2, x25
  448a70:	ldrb	w1, [x4, #8]
  448a74:	cmp	w1, #0x8
  448a78:	b.eq	448ba4 <_obstack_memory_used@@Base+0x69b4>  // b.none
  448a7c:	cmp	w1, #0x9
  448a80:	b.eq	448c54 <_obstack_memory_used@@Base+0x6a64>  // b.none
  448a84:	cmp	x0, x3
  448a88:	b.ne	448a98 <_obstack_memory_used@@Base+0x68a8>  // b.any
  448a8c:	ldr	x0, [x19, #176]
  448a90:	cmp	x0, x28
  448a94:	b.eq	448dc8 <_obstack_memory_used@@Base+0x6bd8>  // b.none
  448a98:	ldr	x27, [x19, #152]
  448a9c:	ldr	x0, [x27]
  448aa0:	add	x1, x0, x25
  448aa4:	ldrb	w2, [x1, #8]
  448aa8:	tbnz	w2, #3, 448bd0 <_obstack_memory_used@@Base+0x69e0>
  448aac:	ldrb	w3, [x1, #10]
  448ab0:	tbnz	w3, #4, 448c9c <_obstack_memory_used@@Base+0x6aac>
  448ab4:	cmp	w2, #0x4
  448ab8:	b.eq	448cc8 <_obstack_memory_used@@Base+0x6ad8>  // b.none
  448abc:	ldr	x26, [x29, #152]
  448ac0:	mov	x2, x26
  448ac4:	mov	x0, x19
  448ac8:	bl	445c78 <_obstack_memory_used@@Base+0x3a88>
  448acc:	tst	w0, #0xff
  448ad0:	b.eq	448b78 <_obstack_memory_used@@Base+0x6988>  // b.none
  448ad4:	ldr	x0, [x27, #24]
  448ad8:	add	x2, x26, #0x1
  448adc:	ldr	x28, [x0, x23, lsl #3]
  448ae0:	str	x2, [x29, #152]
  448ae4:	cbz	x22, 448b14 <_obstack_memory_used@@Base+0x6924>
  448ae8:	ldr	x0, [x19, #168]
  448aec:	cmp	x2, x0
  448af0:	b.gt	448b7c <_obstack_memory_used@@Base+0x698c>
  448af4:	ldr	x0, [x19, #184]
  448af8:	ldr	x1, [x0, x2, lsl #3]
  448afc:	cbz	x1, 448b7c <_obstack_memory_used@@Base+0x698c>
  448b00:	ldr	x0, [x1, #16]
  448b04:	mov	x2, x28
  448b08:	add	x1, x1, #0x18
  448b0c:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  448b10:	cbz	x0, 448b7c <_obstack_memory_used@@Base+0x698c>
  448b14:	str	xzr, [x29, #168]
  448b18:	tbnz	x28, #63, 448b70 <_obstack_memory_used@@Base+0x6980>
  448b1c:	ldr	x0, [x20, #8]
  448b20:	ldr	x3, [x29, #152]
  448b24:	cmp	x0, x3
  448b28:	b.ge	448a60 <_obstack_memory_used@@Base+0x6870>  // b.tcont
  448b2c:	ldr	x0, [x29, #176]
  448b30:	bl	4047b0 <free@plt>
  448b34:	ldr	w0, [x29, #108]
  448b38:	cbnz	w0, 448f08 <_obstack_memory_used@@Base+0x6d18>
  448b3c:	cbz	x22, 448f28 <_obstack_memory_used@@Base+0x6d38>
  448b40:	mov	x0, x22
  448b44:	mov	w19, #0x0                   	// #0
  448b48:	bl	447260 <_obstack_memory_used@@Base+0x5070>
  448b4c:	mov	sp, x29
  448b50:	mov	w0, w19
  448b54:	ldp	x19, x20, [sp, #16]
  448b58:	ldp	x21, x22, [sp, #32]
  448b5c:	ldp	x23, x24, [sp, #48]
  448b60:	ldp	x25, x26, [sp, #64]
  448b64:	ldp	x27, x28, [sp, #80]
  448b68:	ldp	x29, x30, [sp], #208
  448b6c:	ret
  448b70:	cmn	x28, #0x2
  448b74:	b.eq	448ea8 <_obstack_memory_used@@Base+0x6cb8>  // b.none
  448b78:	cbz	x22, 448fa8 <_obstack_memory_used@@Base+0x6db8>
  448b7c:	mov	x3, x21
  448b80:	add	x5, x29, #0xa0
  448b84:	mov	x4, x20
  448b88:	add	x2, x29, #0x98
  448b8c:	add	x1, x22, #0x10
  448b90:	mov	x0, x22
  448b94:	bl	4472d0 <_obstack_memory_used@@Base+0x50e0>
  448b98:	mov	x28, x0
  448b9c:	ldr	x3, [x29, #152]
  448ba0:	b	448a48 <_obstack_memory_used@@Base+0x6858>
  448ba4:	ldr	x1, [x2, x25]
  448ba8:	add	x1, x1, #0x1
  448bac:	cmp	x21, x1
  448bb0:	b.le	448a84 <_obstack_memory_used@@Base+0x6894>
  448bb4:	lsl	x1, x1, #4
  448bb8:	add	x0, x20, x1
  448bbc:	str	x3, [x20, x1]
  448bc0:	mov	x1, #0xffffffffffffffff    	// #-1
  448bc4:	str	x1, [x0, #8]
  448bc8:	ldr	x0, [x20, #8]
  448bcc:	b	448a84 <_obstack_memory_used@@Base+0x6894>
  448bd0:	ldr	x4, [x27, #40]
  448bd4:	add	x23, x28, x28, lsl #1
  448bd8:	ldr	x3, [x29, #152]
  448bdc:	mov	x1, x28
  448be0:	ldr	x2, [x19, #184]
  448be4:	add	x0, x29, #0xa0
  448be8:	add	x23, x4, x23, lsl #3
  448bec:	ldr	x25, [x2, x3, lsl #3]
  448bf0:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  448bf4:	tst	w0, #0xff
  448bf8:	b.eq	448ea8 <_obstack_memory_used@@Base+0x6cb8>  // b.none
  448bfc:	ldr	x7, [x23, #8]
  448c00:	cmp	x7, #0x0
  448c04:	b.le	448b78 <_obstack_memory_used@@Base+0x6988>
  448c08:	ldr	x10, [x23, #16]
  448c0c:	add	x9, x25, #0x18
  448c10:	ldr	x8, [x25, #16]
  448c14:	mov	x28, #0xffffffffffffffff    	// #-1
  448c18:	mov	x6, #0x0                   	// #0
  448c1c:	nop
  448c20:	ldr	x23, [x10, x6, lsl #3]
  448c24:	add	x6, x6, #0x1
  448c28:	mov	x1, x9
  448c2c:	mov	x0, x8
  448c30:	mov	x2, x23
  448c34:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  448c38:	cbz	x0, 448c48 <_obstack_memory_used@@Base+0x6a58>
  448c3c:	cmn	x28, #0x1
  448c40:	b.ne	448d24 <_obstack_memory_used@@Base+0x6b34>  // b.any
  448c44:	mov	x28, x23
  448c48:	cmp	x6, x7
  448c4c:	b.ne	448c20 <_obstack_memory_used@@Base+0x6a30>  // b.any
  448c50:	b	448b18 <_obstack_memory_used@@Base+0x6928>
  448c54:	ldr	x1, [x4]
  448c58:	add	x1, x1, #0x1
  448c5c:	cmp	x21, x1
  448c60:	b.le	448a84 <_obstack_memory_used@@Base+0x6894>
  448c64:	lsl	x1, x1, #4
  448c68:	add	x2, x20, x1
  448c6c:	ldr	x0, [x20, x1]
  448c70:	cmp	x0, x3
  448c74:	b.lt	448ec4 <_obstack_memory_used@@Base+0x6cd4>  // b.tstop
  448c78:	ldrb	w0, [x4, #10]
  448c7c:	tbz	w0, #3, 448c90 <_obstack_memory_used@@Base+0x6aa0>
  448c80:	ldr	x4, [x29, #120]
  448c84:	ldr	x0, [x4, x1]
  448c88:	cmn	x0, #0x1
  448c8c:	b.ne	448ee8 <_obstack_memory_used@@Base+0x6cf8>  // b.any
  448c90:	str	x3, [x2, #8]
  448c94:	ldr	x0, [x20, #8]
  448c98:	b	448a84 <_obstack_memory_used@@Base+0x6894>
  448c9c:	ldr	x4, [x29, #152]
  448ca0:	mov	x3, x19
  448ca4:	mov	x2, x28
  448ca8:	add	x1, x27, #0xd8
  448cac:	bl	4481e0 <_obstack_memory_used@@Base+0x5ff0>
  448cb0:	sxtw	x26, w0
  448cb4:	cbnz	w0, 448dc0 <_obstack_memory_used@@Base+0x6bd0>
  448cb8:	ldr	x1, [x27]
  448cbc:	ldr	x26, [x29, #152]
  448cc0:	add	x1, x1, x25
  448cc4:	b	448ac0 <_obstack_memory_used@@Base+0x68d0>
  448cc8:	ldr	x0, [x1]
  448ccc:	add	x0, x0, #0x1
  448cd0:	lsl	x0, x0, #4
  448cd4:	add	x1, x20, x0
  448cd8:	ldr	x0, [x20, x0]
  448cdc:	ldr	x1, [x1, #8]
  448ce0:	sub	x26, x1, x0
  448ce4:	cbz	x22, 448dbc <_obstack_memory_used@@Base+0x6bcc>
  448ce8:	cmn	x0, #0x1
  448cec:	ccmn	x1, #0x1, #0x4, ne  // ne = any
  448cf0:	b.eq	448b7c <_obstack_memory_used@@Base+0x698c>  // b.none
  448cf4:	cbz	x26, 448e4c <_obstack_memory_used@@Base+0x6c5c>
  448cf8:	ldr	x1, [x19, #8]
  448cfc:	mov	x2, x26
  448d00:	ldr	x23, [x29, #152]
  448d04:	add	x0, x1, x0
  448d08:	add	x1, x1, x23
  448d0c:	bl	4046d0 <memcmp@plt>
  448d10:	cbnz	w0, 448b7c <_obstack_memory_used@@Base+0x698c>
  448d14:	ldr	x0, [x27, #24]
  448d18:	add	x2, x23, x26
  448d1c:	ldr	x28, [x0, x28, lsl #3]
  448d20:	b	448ae0 <_obstack_memory_used@@Base+0x68f0>
  448d24:	ldr	x1, [x29, #112]
  448d28:	mov	x2, x28
  448d2c:	ldr	x0, [x29, #168]
  448d30:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  448d34:	cbnz	x0, 448ea0 <_obstack_memory_used@@Base+0x6cb0>
  448d38:	cbz	x22, 448b18 <_obstack_memory_used@@Base+0x6928>
  448d3c:	ldp	x25, x0, [x22]
  448d40:	ldr	x26, [x29, #152]
  448d44:	add	x1, x25, #0x1
  448d48:	str	x1, [x22]
  448d4c:	cmp	x1, x0
  448d50:	b.eq	448f30 <_obstack_memory_used@@Base+0x6d40>  // b.none
  448d54:	ldr	x1, [x22, #16]
  448d58:	add	x2, x25, x25, lsl #1
  448d5c:	ldr	x27, [x29, #136]
  448d60:	lsl	x2, x2, #4
  448d64:	add	x25, x1, x2
  448d68:	mov	x0, x27
  448d6c:	str	x26, [x1, x2]
  448d70:	str	x23, [x25, #8]
  448d74:	bl	404310 <malloc@plt>
  448d78:	str	x0, [x25, #16]
  448d7c:	cbz	x0, 448d9c <_obstack_memory_used@@Base+0x6bac>
  448d80:	mov	x2, x27
  448d84:	mov	x1, x20
  448d88:	bl	403f70 <memcpy@plt>
  448d8c:	add	x1, x29, #0xa0
  448d90:	add	x0, x25, #0x18
  448d94:	bl	444fa0 <_obstack_memory_used@@Base+0x2db0>
  448d98:	cbz	w0, 448b18 <_obstack_memory_used@@Base+0x6928>
  448d9c:	ldr	x0, [x29, #176]
  448da0:	bl	4047b0 <free@plt>
  448da4:	ldr	w0, [x29, #108]
  448da8:	cbnz	w0, 448f98 <_obstack_memory_used@@Base+0x6da8>
  448dac:	mov	x0, x22
  448db0:	mov	w19, #0xc                   	// #12
  448db4:	bl	447260 <_obstack_memory_used@@Base+0x5070>
  448db8:	b	448b4c <_obstack_memory_used@@Base+0x695c>
  448dbc:	cbz	x26, 448e4c <_obstack_memory_used@@Base+0x6c5c>
  448dc0:	ldr	x23, [x29, #152]
  448dc4:	b	448d14 <_obstack_memory_used@@Base+0x6b24>
  448dc8:	cbz	x22, 448f18 <_obstack_memory_used@@Base+0x6d28>
  448dcc:	cbz	x21, 448dfc <_obstack_memory_used@@Base+0x6c0c>
  448dd0:	mov	x0, x20
  448dd4:	mov	x1, #0x0                   	// #0
  448dd8:	ldr	x2, [x0]
  448ddc:	tbnz	x2, #63, 448dec <_obstack_memory_used@@Base+0x6bfc>
  448de0:	ldr	x2, [x0, #8]
  448de4:	cmn	x2, #0x1
  448de8:	b.eq	448e18 <_obstack_memory_used@@Base+0x6c28>  // b.none
  448dec:	add	x1, x1, #0x1
  448df0:	add	x0, x0, #0x10
  448df4:	cmp	x21, x1
  448df8:	b.ne	448dd8 <_obstack_memory_used@@Base+0x6be8>  // b.any
  448dfc:	ldr	x0, [x29, #176]
  448e00:	bl	4047b0 <free@plt>
  448e04:	ldr	w0, [x29, #108]
  448e08:	cbz	w0, 448b40 <_obstack_memory_used@@Base+0x6950>
  448e0c:	ldr	x0, [x29, #120]
  448e10:	bl	4047b0 <free@plt>
  448e14:	b	448b40 <_obstack_memory_used@@Base+0x6950>
  448e18:	cmp	x21, x1
  448e1c:	b.eq	448dfc <_obstack_memory_used@@Base+0x6c0c>  // b.none
  448e20:	ldr	x1, [x29, #128]
  448e24:	add	x5, x29, #0xa0
  448e28:	mov	x4, x20
  448e2c:	mov	x3, x21
  448e30:	add	x2, x29, #0x98
  448e34:	mov	x0, x22
  448e38:	bl	4472d0 <_obstack_memory_used@@Base+0x50e0>
  448e3c:	mov	x28, x0
  448e40:	mov	x23, x0
  448e44:	lsl	x25, x0, #4
  448e48:	b	448a98 <_obstack_memory_used@@Base+0x68a8>
  448e4c:	mov	x1, x28
  448e50:	add	x0, x29, #0xa0
  448e54:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  448e58:	tst	w0, #0xff
  448e5c:	b.eq	448ea8 <_obstack_memory_used@@Base+0x6cb8>  // b.none
  448e60:	ldr	x1, [x27, #40]
  448e64:	add	x5, x28, x28, lsl #1
  448e68:	ldr	x26, [x29, #152]
  448e6c:	ldr	x0, [x19, #184]
  448e70:	add	x5, x1, x5, lsl #3
  448e74:	ldr	x0, [x0, x26, lsl #3]
  448e78:	ldr	x2, [x5, #16]
  448e7c:	add	x1, x0, #0x18
  448e80:	ldr	x0, [x0, #16]
  448e84:	ldr	x28, [x2]
  448e88:	mov	x2, x28
  448e8c:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  448e90:	cbnz	x0, 448b18 <_obstack_memory_used@@Base+0x6928>
  448e94:	ldr	x1, [x27]
  448e98:	add	x1, x1, x25
  448e9c:	b	448ac0 <_obstack_memory_used@@Base+0x68d0>
  448ea0:	mov	x28, x23
  448ea4:	b	448b18 <_obstack_memory_used@@Base+0x6928>
  448ea8:	ldr	x0, [x29, #176]
  448eac:	bl	4047b0 <free@plt>
  448eb0:	ldr	w0, [x29, #108]
  448eb4:	cbnz	w0, 448f98 <_obstack_memory_used@@Base+0x6da8>
  448eb8:	cbnz	x22, 448dac <_obstack_memory_used@@Base+0x6bbc>
  448ebc:	mov	w19, #0xc                   	// #12
  448ec0:	b	448b4c <_obstack_memory_used@@Base+0x695c>
  448ec4:	str	x3, [x2, #8]
  448ec8:	mov	x1, x20
  448ecc:	ldr	x0, [x29, #120]
  448ed0:	str	x3, [x29, #96]
  448ed4:	ldr	x2, [x29, #136]
  448ed8:	bl	403f70 <memcpy@plt>
  448edc:	ldr	x0, [x20, #8]
  448ee0:	ldr	x3, [x29, #96]
  448ee4:	b	448a84 <_obstack_memory_used@@Base+0x6894>
  448ee8:	ldr	x2, [x29, #136]
  448eec:	mov	x1, x4
  448ef0:	mov	x0, x20
  448ef4:	str	x3, [x29, #96]
  448ef8:	bl	403f70 <memcpy@plt>
  448efc:	ldr	x0, [x20, #8]
  448f00:	ldr	x3, [x29, #96]
  448f04:	b	448a84 <_obstack_memory_used@@Base+0x6894>
  448f08:	ldr	x0, [x29, #120]
  448f0c:	bl	4047b0 <free@plt>
  448f10:	cbnz	x22, 448b40 <_obstack_memory_used@@Base+0x6950>
  448f14:	b	448f28 <_obstack_memory_used@@Base+0x6d38>
  448f18:	ldr	x0, [x29, #176]
  448f1c:	bl	4047b0 <free@plt>
  448f20:	ldr	w0, [x29, #108]
  448f24:	cbnz	w0, 448fc8 <_obstack_memory_used@@Base+0x6dd8>
  448f28:	mov	w19, #0x0                   	// #0
  448f2c:	b	448b4c <_obstack_memory_used@@Base+0x695c>
  448f30:	ldr	x0, [x22, #16]
  448f34:	add	x1, x1, x1, lsl #1
  448f38:	lsl	x1, x1, #5
  448f3c:	bl	404530 <realloc@plt>
  448f40:	mov	x1, x0
  448f44:	cbz	x0, 448d9c <_obstack_memory_used@@Base+0x6bac>
  448f48:	ldr	x0, [x22, #8]
  448f4c:	lsl	x0, x0, #1
  448f50:	stp	x0, x1, [x22, #8]
  448f54:	b	448d58 <_obstack_memory_used@@Base+0x6b68>
  448f58:	lsl	x0, x21, #4
  448f5c:	str	x0, [x29, #136]
  448f60:	stp	xzr, xzr, [x29, #160]
  448f64:	cmp	x0, #0xfbf
  448f68:	mov	x22, #0x0                   	// #0
  448f6c:	str	xzr, [x29, #176]
  448f70:	ldr	x28, [x24, #144]
  448f74:	b.ls	448a18 <_obstack_memory_used@@Base+0x6828>  // b.plast
  448f78:	ldr	x0, [x29, #136]
  448f7c:	bl	404310 <malloc@plt>
  448f80:	str	x0, [x29, #120]
  448f84:	mov	w1, #0x1                   	// #1
  448f88:	str	w1, [x29, #108]
  448f8c:	cbnz	x0, 448a28 <_obstack_memory_used@@Base+0x6838>
  448f90:	cbnz	x22, 448dac <_obstack_memory_used@@Base+0x6bbc>
  448f94:	b	448ebc <_obstack_memory_used@@Base+0x6ccc>
  448f98:	ldr	x0, [x29, #120]
  448f9c:	bl	4047b0 <free@plt>
  448fa0:	cbnz	x22, 448dac <_obstack_memory_used@@Base+0x6bbc>
  448fa4:	b	448ebc <_obstack_memory_used@@Base+0x6ccc>
  448fa8:	ldr	x0, [x29, #176]
  448fac:	mov	w19, #0x1                   	// #1
  448fb0:	bl	4047b0 <free@plt>
  448fb4:	ldr	w0, [x29, #108]
  448fb8:	cbz	w0, 448b4c <_obstack_memory_used@@Base+0x695c>
  448fbc:	ldr	x0, [x29, #120]
  448fc0:	bl	4047b0 <free@plt>
  448fc4:	b	448b4c <_obstack_memory_used@@Base+0x695c>
  448fc8:	ldr	x0, [x29, #120]
  448fcc:	mov	w19, #0x0                   	// #0
  448fd0:	bl	4047b0 <free@plt>
  448fd4:	b	448b4c <_obstack_memory_used@@Base+0x695c>
  448fd8:	stp	x29, x30, [sp, #-80]!
  448fdc:	mov	x6, x2
  448fe0:	mov	x5, x4
  448fe4:	mov	x29, sp
  448fe8:	stp	x19, x20, [sp, #16]
  448fec:	mov	x20, x2
  448ff0:	mov	x19, x0
  448ff4:	stp	x23, x24, [sp, #48]
  448ff8:	mov	x24, x4
  448ffc:	mov	x4, x3
  449000:	str	x25, [sp, #64]
  449004:	mov	x25, x3
  449008:	ldr	x3, [x2, #8]
  44900c:	stp	x21, x22, [sp, #32]
  449010:	mov	x21, x1
  449014:	ldr	x2, [x6], #16
  449018:	mov	x1, x6
  44901c:	mov	w6, #0x8                   	// #8
  449020:	bl	448480 <_obstack_memory_used@@Base+0x6290>
  449024:	cbz	w0, 449040 <_obstack_memory_used@@Base+0x6e50>
  449028:	ldp	x19, x20, [sp, #16]
  44902c:	ldp	x21, x22, [sp, #32]
  449030:	ldp	x23, x24, [sp, #48]
  449034:	ldr	x25, [sp, #64]
  449038:	ldp	x29, x30, [sp], #80
  44903c:	ret
  449040:	ldp	x2, x1, [x19, #200]
  449044:	ldr	x22, [x20, #8]
  449048:	ldr	x23, [x21]
  44904c:	mov	x4, x22
  449050:	cmp	x2, x1
  449054:	ldr	x0, [x19, #216]
  449058:	b.ge	4490f4 <_obstack_memory_used@@Base+0x6f04>  // b.tcont
  44905c:	add	x6, x2, x2, lsl #2
  449060:	cmp	x2, #0x0
  449064:	lsl	x6, x6, #3
  449068:	b.le	449080 <_obstack_memory_used@@Base+0x6e90>
  44906c:	sub	x3, x6, #0x28
  449070:	add	x3, x0, x3
  449074:	ldr	x1, [x3, #8]
  449078:	cmp	x24, x1
  44907c:	b.eq	4490e8 <_obstack_memory_used@@Base+0x6ef8>  // b.none
  449080:	add	x7, x0, x6
  449084:	cmp	x23, x22
  449088:	str	x25, [x0, x6]
  44908c:	csetm	w1, eq  // eq = none
  449090:	add	x2, x2, #0x1
  449094:	sub	x0, x22, x23
  449098:	stp	x24, x23, [x7, #8]
  44909c:	str	x22, [x7, #24]
  4490a0:	strh	w1, [x7, #34]
  4490a4:	str	x2, [x19, #200]
  4490a8:	strb	wzr, [x7, #32]
  4490ac:	ldrsw	x1, [x19, #224]
  4490b0:	cmp	x1, x0
  4490b4:	b.ge	4490c0 <_obstack_memory_used@@Base+0x6ed0>  // b.tcont
  4490b8:	sub	w22, w22, w23
  4490bc:	str	w22, [x19, #224]
  4490c0:	add	x4, x24, x4
  4490c4:	mov	x0, x19
  4490c8:	ldr	x1, [x21]
  4490cc:	ldp	x19, x20, [sp, #16]
  4490d0:	sub	x1, x4, x1
  4490d4:	ldp	x21, x22, [sp, #32]
  4490d8:	ldp	x23, x24, [sp, #48]
  4490dc:	ldr	x25, [sp, #64]
  4490e0:	ldp	x29, x30, [sp], #80
  4490e4:	b	443620 <_obstack_memory_used@@Base+0x1430>
  4490e8:	mov	w1, #0x1                   	// #1
  4490ec:	strb	w1, [x3, #32]
  4490f0:	b	449080 <_obstack_memory_used@@Base+0x6e90>
  4490f4:	add	x1, x1, x1, lsl #2
  4490f8:	lsl	x1, x1, #4
  4490fc:	bl	404530 <realloc@plt>
  449100:	cbz	x0, 44913c <_obstack_memory_used@@Base+0x6f4c>
  449104:	ldp	x3, x2, [x19, #200]
  449108:	str	x0, [x19, #216]
  44910c:	mov	w1, #0x0                   	// #0
  449110:	add	x3, x3, x3, lsl #2
  449114:	add	x2, x2, x2, lsl #2
  449118:	add	x0, x0, x3, lsl #3
  44911c:	lsl	x2, x2, #3
  449120:	bl	404410 <memset@plt>
  449124:	ldp	x2, x1, [x19, #200]
  449128:	ldr	x4, [x20, #8]
  44912c:	ldr	x0, [x19, #216]
  449130:	lsl	x1, x1, #1
  449134:	str	x1, [x19, #208]
  449138:	b	44905c <_obstack_memory_used@@Base+0x6e6c>
  44913c:	ldr	x0, [x19, #216]
  449140:	bl	4047b0 <free@plt>
  449144:	mov	w0, #0xc                   	// #12
  449148:	b	449028 <_obstack_memory_used@@Base+0x6e38>
  44914c:	nop
  449150:	stp	x29, x30, [sp, #-208]!
  449154:	mov	x29, sp
  449158:	stp	x21, x22, [sp, #32]
  44915c:	ldr	x21, [x0, #72]
  449160:	stp	x25, x26, [sp, #64]
  449164:	stp	x27, x28, [sp, #80]
  449168:	mov	x28, x0
  44916c:	lsl	x0, x21, #3
  449170:	ldr	x25, [x1]
  449174:	stp	x23, x24, [sp, #48]
  449178:	stp	x2, x0, [sp, #136]
  44917c:	cmp	x25, #0x0
  449180:	str	x1, [sp, #168]
  449184:	ldr	x24, [x28, #152]
  449188:	b.le	449208 <_obstack_memory_used@@Base+0x7018>
  44918c:	mov	x23, #0x0                   	// #0
  449190:	stp	x19, x20, [sp, #16]
  449194:	nop
  449198:	ldr	x0, [sp, #136]
  44919c:	ldr	x1, [x0]
  4491a0:	ldr	x0, [x24]
  4491a4:	ldr	x20, [x1, x23, lsl #3]
  4491a8:	lsl	x22, x20, #4
  4491ac:	add	x0, x0, x22
  4491b0:	ldrb	w1, [x0, #8]
  4491b4:	cmp	w1, #0x4
  4491b8:	b.ne	4491f8 <_obstack_memory_used@@Base+0x7008>  // b.any
  4491bc:	ldr	w19, [x0, #8]
  4491c0:	tst	w19, #0x3ff00
  4491c4:	b.eq	449230 <_obstack_memory_used@@Base+0x7040>  // b.none
  4491c8:	ldr	w2, [x28, #160]
  4491cc:	mov	x1, x21
  4491d0:	mov	x0, x28
  4491d4:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  4491d8:	ubfx	x1, x19, #8, #10
  4491dc:	tbz	w19, #10, 449224 <_obstack_memory_used@@Base+0x7034>
  4491e0:	tbz	w0, #0, 4491f8 <_obstack_memory_used@@Base+0x7008>
  4491e4:	tbnz	w1, #3, 4491f8 <_obstack_memory_used@@Base+0x7008>
  4491e8:	tbz	w1, #5, 4491f0 <_obstack_memory_used@@Base+0x7000>
  4491ec:	tbz	w0, #1, 4491f8 <_obstack_memory_used@@Base+0x7008>
  4491f0:	tbz	w1, #7, 449230 <_obstack_memory_used@@Base+0x7040>
  4491f4:	tbnz	w0, #3, 449230 <_obstack_memory_used@@Base+0x7040>
  4491f8:	add	x23, x23, #0x1
  4491fc:	cmp	x23, x25
  449200:	b.lt	449198 <_obstack_memory_used@@Base+0x6fa8>  // b.tstop
  449204:	ldp	x19, x20, [sp, #16]
  449208:	mov	w0, #0x0                   	// #0
  44920c:	ldp	x21, x22, [sp, #32]
  449210:	ldp	x23, x24, [sp, #48]
  449214:	ldp	x25, x26, [sp, #64]
  449218:	ldp	x27, x28, [sp, #80]
  44921c:	ldp	x29, x30, [sp], #208
  449220:	ret
  449224:	tbz	w1, #3, 4491e8 <_obstack_memory_used@@Base+0x6ff8>
  449228:	tbz	w0, #0, 4491e8 <_obstack_memory_used@@Base+0x6ff8>
  44922c:	b	4491f8 <_obstack_memory_used@@Base+0x7008>
  449230:	ldr	x5, [x28, #200]
  449234:	mov	x1, #0x0                   	// #0
  449238:	mov	x19, x5
  44923c:	mov	x3, x5
  449240:	b	449264 <_obstack_memory_used@@Base+0x7074>
  449244:	asr	x0, x0, #1
  449248:	ldr	x4, [x28, #216]
  44924c:	add	x2, x0, x0, lsl #2
  449250:	add	x2, x4, x2, lsl #3
  449254:	ldr	x2, [x2, #8]
  449258:	cmp	x21, x2
  44925c:	b.gt	449490 <_obstack_memory_used@@Base+0x72a0>
  449260:	mov	x3, x0
  449264:	add	x0, x3, x1
  449268:	cmp	x3, x1
  44926c:	b.gt	449244 <_obstack_memory_used@@Base+0x7054>
  449270:	cmp	x5, x1
  449274:	b.le	449498 <_obstack_memory_used@@Base+0x72a8>
  449278:	ldr	x0, [x28, #216]
  44927c:	add	x1, x1, x1, lsl #2
  449280:	add	x1, x0, x1, lsl #3
  449284:	ldr	x0, [x1, #8]
  449288:	cmp	x21, x0
  44928c:	b.eq	44929c <_obstack_memory_used@@Base+0x70ac>  // b.none
  449290:	b	449498 <_obstack_memory_used@@Base+0x72a8>
  449294:	ldurb	w0, [x1, #-8]
  449298:	cbz	w0, 449498 <_obstack_memory_used@@Base+0x72a8>
  44929c:	ldr	x0, [x1]
  4492a0:	add	x1, x1, #0x28
  4492a4:	cmp	x20, x0
  4492a8:	b.ne	449294 <_obstack_memory_used@@Base+0x70a4>  // b.any
  4492ac:	str	wzr, [sp, #180]
  4492b0:	cmp	x19, x5
  4492b4:	b.ge	4493e0 <_obstack_memory_used@@Base+0x71f0>  // b.tcont
  4492b8:	add	x4, x19, x19, lsl #2
  4492bc:	add	x0, x20, x20, lsl #1
  4492c0:	lsl	x1, x20, #3
  4492c4:	lsl	x27, x4, #3
  4492c8:	lsl	x0, x0, #3
  4492cc:	stp	x1, x0, [sp, #112]
  4492d0:	ldr	x0, [x28, #216]
  4492d4:	add	x1, x0, x27
  4492d8:	ldr	x0, [x0, x27]
  4492dc:	cmp	x20, x0
  4492e0:	b.ne	4493d0 <_obstack_memory_used@@Base+0x71e0>  // b.any
  4492e4:	ldr	x0, [x1, #8]
  4492e8:	cmp	x21, x0
  4492ec:	b.ne	4493d0 <_obstack_memory_used@@Base+0x71e0>  // b.any
  4492f0:	ldp	x22, x0, [x1, #16]
  4492f4:	ldr	x25, [x24, #48]
  4492f8:	subs	x26, x0, x22
  4492fc:	b.ne	449444 <_obstack_memory_used@@Base+0x7254>  // b.any
  449300:	ldr	x1, [x24, #40]
  449304:	ldr	x2, [sp, #120]
  449308:	add	x1, x1, x2
  44930c:	ldr	x1, [x1, #16]
  449310:	ldr	x1, [x1]
  449314:	add	x1, x1, x1, lsl #1
  449318:	add	x25, x25, x1, lsl #3
  44931c:	ldr	w2, [x28, #160]
  449320:	add	x0, x21, x0
  449324:	sub	x22, x0, x22
  449328:	mov	x0, x28
  44932c:	sub	x1, x22, #0x1
  449330:	str	xzr, [sp, #96]
  449334:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  449338:	mov	w3, w0
  44933c:	ldr	x0, [sp, #144]
  449340:	ldr	x5, [x28, #184]
  449344:	ldr	x1, [x5, x0]
  449348:	ldr	x0, [x5, x22, lsl #3]
  44934c:	cbz	x1, 449358 <_obstack_memory_used@@Base+0x7168>
  449350:	ldr	x1, [x1, #16]
  449354:	str	x1, [sp, #96]
  449358:	cbz	x0, 44945c <_obstack_memory_used@@Base+0x726c>
  44935c:	ldr	x1, [x0, #80]
  449360:	mov	x2, x25
  449364:	add	x0, sp, #0xb8
  449368:	str	w3, [sp, #104]
  44936c:	bl	445028 <_obstack_memory_used@@Base+0x2e38>
  449370:	str	w0, [sp, #180]
  449374:	ldr	w3, [sp, #104]
  449378:	cbnz	w0, 449614 <_obstack_memory_used@@Base+0x7424>
  44937c:	ldr	x5, [x28, #184]
  449380:	mov	x1, x24
  449384:	add	x2, sp, #0xb8
  449388:	add	x0, sp, #0xb4
  44938c:	str	x5, [sp, #104]
  449390:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  449394:	ldr	x5, [sp, #104]
  449398:	str	x0, [x5, x22, lsl #3]
  44939c:	ldr	x0, [sp, #200]
  4493a0:	bl	4047b0 <free@plt>
  4493a4:	ldr	x1, [x28, #184]
  4493a8:	ldr	x0, [x1, x22, lsl #3]
  4493ac:	cbz	x0, 449484 <_obstack_memory_used@@Base+0x7294>
  4493b0:	cbnz	x26, 4493cc <_obstack_memory_used@@Base+0x71dc>
  4493b4:	ldr	x0, [sp, #144]
  4493b8:	ldr	x0, [x1, x0]
  4493bc:	ldr	x1, [sp, #96]
  4493c0:	ldr	x0, [x0, #16]
  4493c4:	cmp	x0, x1
  4493c8:	b.gt	4493ec <_obstack_memory_used@@Base+0x71fc>
  4493cc:	ldr	x5, [x28, #200]
  4493d0:	add	x19, x19, #0x1
  4493d4:	add	x27, x27, #0x28
  4493d8:	cmp	x19, x5
  4493dc:	b.lt	4492d0 <_obstack_memory_used@@Base+0x70e0>  // b.tstop
  4493e0:	ldr	x0, [sp, #168]
  4493e4:	ldr	x25, [x0]
  4493e8:	b	4491f8 <_obstack_memory_used@@Base+0x7008>
  4493ec:	add	x22, x25, #0x8
  4493f0:	add	x25, x25, #0x10
  4493f4:	mov	x2, x25
  4493f8:	mov	x1, x22
  4493fc:	mov	x3, x21
  449400:	mov	x0, x28
  449404:	bl	445a58 <_obstack_memory_used@@Base+0x3868>
  449408:	str	w0, [sp, #180]
  44940c:	cbnz	w0, 449428 <_obstack_memory_used@@Base+0x7238>
  449410:	mov	x2, x25
  449414:	mov	x1, x22
  449418:	mov	x0, x28
  44941c:	bl	449150 <_obstack_memory_used@@Base+0x6f60>
  449420:	str	w0, [sp, #180]
  449424:	cbz	w0, 4493cc <_obstack_memory_used@@Base+0x71dc>
  449428:	ldp	x19, x20, [sp, #16]
  44942c:	ldp	x21, x22, [sp, #32]
  449430:	ldp	x23, x24, [sp, #48]
  449434:	ldp	x25, x26, [sp, #64]
  449438:	ldp	x27, x28, [sp, #80]
  44943c:	ldp	x29, x30, [sp], #208
  449440:	ret
  449444:	ldr	x1, [x24, #24]
  449448:	ldr	x2, [sp, #112]
  44944c:	ldr	x1, [x1, x2]
  449450:	add	x1, x1, x1, lsl #1
  449454:	add	x25, x25, x1, lsl #3
  449458:	b	44931c <_obstack_memory_used@@Base+0x712c>
  44945c:	mov	x1, x24
  449460:	mov	x2, x25
  449464:	add	x0, sp, #0xb4
  449468:	str	x5, [sp, #104]
  44946c:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  449470:	ldr	x5, [sp, #104]
  449474:	ldr	x1, [x28, #184]
  449478:	str	x0, [x5, x22, lsl #3]
  44947c:	ldr	x0, [x1, x22, lsl #3]
  449480:	cbnz	x0, 4493b0 <_obstack_memory_used@@Base+0x71c0>
  449484:	ldr	w0, [sp, #180]
  449488:	cbz	w0, 4493b0 <_obstack_memory_used@@Base+0x71c0>
  44948c:	b	449428 <_obstack_memory_used@@Base+0x7238>
  449490:	add	x1, x0, #0x1
  449494:	b	449264 <_obstack_memory_used@@Base+0x7074>
  449498:	ldr	x0, [x28, #152]
  44949c:	str	x0, [sp, #160]
  4494a0:	ldr	x2, [x28, #232]
  4494a4:	ldr	x1, [x0]
  4494a8:	cmp	x2, #0x0
  4494ac:	ldr	x0, [x1, x22]
  4494b0:	str	x0, [sp, #152]
  4494b4:	b.le	4492ac <_obstack_memory_used@@Base+0x70bc>
  4494b8:	ldr	x7, [x28, #8]
  4494bc:	str	xzr, [sp, #128]
  4494c0:	ldr	x3, [sp, #128]
  4494c4:	ldr	x0, [x28, #248]
  4494c8:	ldr	x26, [x0, x3, lsl #3]
  4494cc:	ldr	x0, [x26, #8]
  4494d0:	lsl	x0, x0, #4
  4494d4:	ldr	x0, [x1, x0]
  4494d8:	ldr	x1, [sp, #152]
  4494dc:	cmp	x1, x0
  4494e0:	b.eq	449504 <_obstack_memory_used@@Base+0x7314>  // b.none
  4494e4:	ldr	x0, [sp, #128]
  4494e8:	add	x0, x0, #0x1
  4494ec:	str	x0, [sp, #128]
  4494f0:	cmp	x0, x2
  4494f4:	b.ge	4497f8 <_obstack_memory_used@@Base+0x7608>  // b.tcont
  4494f8:	ldr	x0, [sp, #160]
  4494fc:	ldr	x1, [x0]
  449500:	b	4494c0 <_obstack_memory_used@@Base+0x72d0>
  449504:	ldr	x0, [x26]
  449508:	str	x0, [sp, #96]
  44950c:	ldr	x4, [x26, #32]
  449510:	cmp	x4, #0x0
  449514:	b.le	44982c <_obstack_memory_used@@Base+0x763c>
  449518:	mov	x27, x21
  44951c:	mov	x22, #0x0                   	// #0
  449520:	b	449530 <_obstack_memory_used@@Base+0x7340>
  449524:	ldr	x4, [x26, #32]
  449528:	cmp	x22, x4
  44952c:	b.ge	4497bc <_obstack_memory_used@@Base+0x75cc>  // b.tcont
  449530:	ldr	x0, [x26, #40]
  449534:	mov	x9, x27
  449538:	ldr	x25, [sp, #96]
  44953c:	ldr	x3, [x0, x22, lsl #3]
  449540:	ldr	x0, [x3, #8]
  449544:	str	x0, [sp, #96]
  449548:	sub	x2, x0, x25
  44954c:	cmp	x2, #0x0
  449550:	add	x27, x27, x2
  449554:	b.le	449584 <_obstack_memory_used@@Base+0x7394>
  449558:	ldr	x0, [x28, #48]
  44955c:	cmp	x0, x27
  449560:	b.lt	4495b0 <_obstack_memory_used@@Base+0x73c0>  // b.tstop
  449564:	add	x1, x7, x25
  449568:	add	x0, x7, x9
  44956c:	stp	x7, x9, [sp, #104]
  449570:	str	x3, [sp, #120]
  449574:	bl	4046d0 <memcmp@plt>
  449578:	ldp	x7, x9, [sp, #104]
  44957c:	ldr	x3, [sp, #120]
  449580:	cbnz	w0, 449600 <_obstack_memory_used@@Base+0x7410>
  449584:	mov	x2, x3
  449588:	mov	x4, x21
  44958c:	mov	x3, x20
  449590:	mov	x1, x26
  449594:	mov	x0, x28
  449598:	bl	448fd8 <_obstack_memory_used@@Base+0x6de8>
  44959c:	add	x22, x22, #0x1
  4495a0:	cmp	w0, #0x1
  4495a4:	ldr	x7, [x28, #8]
  4495a8:	b.ls	449524 <_obstack_memory_used@@Base+0x7334>  // b.plast
  4495ac:	b	449428 <_obstack_memory_used@@Base+0x7238>
  4495b0:	ldr	x12, [x28, #88]
  4495b4:	stp	x3, x2, [sp, #104]
  4495b8:	mov	x1, x27
  4495bc:	mov	x0, x28
  4495c0:	cmp	x12, x27
  4495c4:	b.lt	449604 <_obstack_memory_used@@Base+0x7414>  // b.tstop
  4495c8:	str	x9, [sp, #120]
  4495cc:	bl	443620 <_obstack_memory_used@@Base+0x1430>
  4495d0:	cbnz	w0, 449428 <_obstack_memory_used@@Base+0x7238>
  4495d4:	ldp	x3, x2, [sp, #104]
  4495d8:	ldr	x7, [x28, #8]
  4495dc:	ldr	x9, [sp, #120]
  4495e0:	add	x1, x7, x25
  4495e4:	stp	x7, x9, [sp, #104]
  4495e8:	add	x0, x7, x9
  4495ec:	str	x3, [sp, #120]
  4495f0:	bl	4046d0 <memcmp@plt>
  4495f4:	ldp	x7, x9, [sp, #104]
  4495f8:	ldr	x3, [sp, #120]
  4495fc:	cbz	w0, 449584 <_obstack_memory_used@@Base+0x7394>
  449600:	ldr	x4, [x26, #32]
  449604:	cmp	x22, x4
  449608:	b.ge	44963c <_obstack_memory_used@@Base+0x744c>  // b.tcont
  44960c:	ldr	x2, [x28, #232]
  449610:	b	4494e4 <_obstack_memory_used@@Base+0x72f4>
  449614:	ldr	x0, [sp, #200]
  449618:	bl	4047b0 <free@plt>
  44961c:	ldr	w0, [sp, #180]
  449620:	ldp	x19, x20, [sp, #16]
  449624:	ldp	x21, x22, [sp, #32]
  449628:	ldp	x23, x24, [sp, #48]
  44962c:	ldp	x25, x26, [sp, #64]
  449630:	ldp	x27, x28, [sp, #80]
  449634:	ldp	x29, x30, [sp], #208
  449638:	ret
  44963c:	cbnz	x22, 4497b4 <_obstack_memory_used@@Base+0x75c4>
  449640:	cmp	x21, x25
  449644:	b.lt	44960c <_obstack_memory_used@@Base+0x741c>  // b.tstop
  449648:	ldr	x0, [x26]
  44964c:	sub	x0, x25, x0
  449650:	cmp	x0, #0x0
  449654:	b.le	44967c <_obstack_memory_used@@Base+0x748c>
  449658:	ldr	x0, [x28, #48]
  44965c:	cmp	x0, x9
  449660:	b.le	4497cc <_obstack_memory_used@@Base+0x75dc>
  449664:	add	x0, x7, x25
  449668:	ldrb	w1, [x7, x9]
  44966c:	add	x9, x9, #0x1
  449670:	ldurb	w0, [x0, #-1]
  449674:	cmp	w1, w0
  449678:	b.ne	44960c <_obstack_memory_used@@Base+0x741c>  // b.any
  44967c:	ldr	x0, [x28, #184]
  449680:	ldr	x1, [x0, x25, lsl #3]
  449684:	cbz	x1, 44977c <_obstack_memory_used@@Base+0x758c>
  449688:	ldr	x4, [x1, #16]
  44968c:	cmp	x4, #0x0
  449690:	b.le	44977c <_obstack_memory_used@@Base+0x758c>
  449694:	ldr	x0, [sp, #160]
  449698:	ldr	x6, [x1, #24]
  44969c:	ldr	x3, [x0]
  4496a0:	mov	x0, #0x0                   	// #0
  4496a4:	b	4496b0 <_obstack_memory_used@@Base+0x74c0>
  4496a8:	cmp	x4, x0
  4496ac:	b.eq	44977c <_obstack_memory_used@@Base+0x758c>  // b.none
  4496b0:	ldr	x22, [x6, x0, lsl #3]
  4496b4:	add	x0, x0, #0x1
  4496b8:	lsl	x1, x22, #4
  4496bc:	add	x2, x3, x1
  4496c0:	ldrb	w2, [x2, #8]
  4496c4:	cmp	w2, #0x9
  4496c8:	b.ne	4496a8 <_obstack_memory_used@@Base+0x74b8>  // b.any
  4496cc:	ldr	x1, [x3, x1]
  4496d0:	ldr	x2, [sp, #152]
  4496d4:	cmp	x2, x1
  4496d8:	b.ne	4496a8 <_obstack_memory_used@@Base+0x74b8>  // b.any
  4496dc:	cmn	x22, #0x1
  4496e0:	b.eq	44977c <_obstack_memory_used@@Base+0x758c>  // b.none
  4496e4:	ldr	x1, [x26, #16]
  4496e8:	ldr	x27, [x26]
  4496ec:	cbz	x1, 449784 <_obstack_memory_used@@Base+0x7594>
  4496f0:	ldr	x2, [x26, #8]
  4496f4:	mov	x3, x27
  4496f8:	mov	x5, x25
  4496fc:	mov	x4, x22
  449700:	mov	x0, x28
  449704:	mov	w6, #0x9                   	// #9
  449708:	stp	x7, x9, [sp, #96]
  44970c:	bl	448480 <_obstack_memory_used@@Base+0x6290>
  449710:	cmp	w0, #0x1
  449714:	ldp	x7, x9, [sp, #96]
  449718:	b.eq	44977c <_obstack_memory_used@@Base+0x758c>  // b.none
  44971c:	cbnz	w0, 449428 <_obstack_memory_used@@Base+0x7238>
  449720:	ldp	x0, x1, [x26, #24]
  449724:	cmp	x1, x0
  449728:	b.eq	449800 <_obstack_memory_used@@Base+0x7610>  // b.none
  44972c:	mov	x1, #0x28                  	// #40
  449730:	mov	x0, #0x1                   	// #1
  449734:	str	x9, [sp, #96]
  449738:	bl	4044c0 <calloc@plt>
  44973c:	mov	x2, x0
  449740:	cbz	x0, 4497a8 <_obstack_memory_used@@Base+0x75b8>
  449744:	ldp	x0, x1, [x26, #32]
  449748:	mov	x4, x21
  44974c:	mov	x3, x20
  449750:	str	x2, [x1, x0, lsl #3]
  449754:	add	x6, x0, #0x1
  449758:	stp	x22, x25, [x2]
  44975c:	mov	x1, x26
  449760:	mov	x0, x28
  449764:	str	x6, [x26, #32]
  449768:	bl	448fd8 <_obstack_memory_used@@Base+0x6de8>
  44976c:	cmp	w0, #0x1
  449770:	ldr	x7, [x28, #8]
  449774:	ldr	x9, [sp, #96]
  449778:	b.hi	449428 <_obstack_memory_used@@Base+0x7238>  // b.pmore
  44977c:	add	x25, x25, #0x1
  449780:	b	449640 <_obstack_memory_used@@Base+0x7450>
  449784:	sub	x1, x25, x27
  449788:	mov	x0, #0x18                  	// #24
  44978c:	add	x1, x1, #0x1
  449790:	stp	x7, x9, [sp, #96]
  449794:	bl	4044c0 <calloc@plt>
  449798:	str	x0, [x26, #16]
  44979c:	mov	x1, x0
  4497a0:	ldp	x7, x9, [sp, #96]
  4497a4:	cbnz	x0, 4496f0 <_obstack_memory_used@@Base+0x7500>
  4497a8:	mov	w0, #0xc                   	// #12
  4497ac:	ldp	x19, x20, [sp, #16]
  4497b0:	b	44942c <_obstack_memory_used@@Base+0x723c>
  4497b4:	mov	x27, x9
  4497b8:	str	x25, [sp, #96]
  4497bc:	ldr	x0, [sp, #96]
  4497c0:	mov	x9, x27
  4497c4:	add	x25, x0, #0x1
  4497c8:	b	449640 <_obstack_memory_used@@Base+0x7450>
  4497cc:	ldr	x0, [x28, #88]
  4497d0:	cmp	x0, x9
  4497d4:	b.le	44960c <_obstack_memory_used@@Base+0x741c>
  4497d8:	add	w1, w9, #0x1
  4497dc:	mov	x0, x28
  4497e0:	str	x9, [sp, #96]
  4497e4:	bl	4434e0 <_obstack_memory_used@@Base+0x12f0>
  4497e8:	cbnz	w0, 449428 <_obstack_memory_used@@Base+0x7238>
  4497ec:	ldr	x7, [x28, #8]
  4497f0:	ldr	x9, [sp, #96]
  4497f4:	b	449664 <_obstack_memory_used@@Base+0x7474>
  4497f8:	ldr	x5, [x28, #200]
  4497fc:	b	4492ac <_obstack_memory_used@@Base+0x70bc>
  449800:	ldr	x0, [x26, #40]
  449804:	lsl	x1, x1, #1
  449808:	add	x27, x1, #0x1
  44980c:	str	x9, [sp, #96]
  449810:	lsl	x1, x27, #3
  449814:	bl	404530 <realloc@plt>
  449818:	cbz	x0, 4497a8 <_obstack_memory_used@@Base+0x75b8>
  44981c:	str	x27, [x26, #24]
  449820:	str	x0, [x26, #40]
  449824:	ldr	x9, [sp, #96]
  449828:	b	44972c <_obstack_memory_used@@Base+0x753c>
  44982c:	mov	x9, x21
  449830:	ldr	x25, [sp, #96]
  449834:	b	449640 <_obstack_memory_used@@Base+0x7450>
  449838:	stp	x29, x30, [sp, #-112]!
  44983c:	mov	x29, sp
  449840:	stp	x21, x22, [sp, #32]
  449844:	mov	x21, x0
  449848:	stp	x23, x24, [sp, #48]
  44984c:	ldp	x24, x0, [x1, #184]
  449850:	stp	x19, x20, [sp, #16]
  449854:	mov	x19, x1
  449858:	ldr	x20, [x1, #72]
  44985c:	ldr	x23, [x1, #152]
  449860:	cmp	x0, x20
  449864:	b.ge	449894 <_obstack_memory_used@@Base+0x76a4>  // b.tcont
  449868:	mov	x22, x2
  44986c:	str	x2, [x24, x20, lsl #3]
  449870:	str	x20, [x1, #192]
  449874:	ldr	x0, [x23, #152]
  449878:	cbnz	x0, 449958 <_obstack_memory_used@@Base+0x7768>
  44987c:	mov	x0, x22
  449880:	ldp	x19, x20, [sp, #16]
  449884:	ldp	x21, x22, [sp, #32]
  449888:	ldp	x23, x24, [sp, #48]
  44988c:	ldp	x29, x30, [sp], #112
  449890:	ret
  449894:	ldr	x0, [x24, x20, lsl #3]
  449898:	cbz	x0, 44994c <_obstack_memory_used@@Base+0x775c>
  44989c:	ldr	x0, [x0, #80]
  4498a0:	cbz	x2, 44990c <_obstack_memory_used@@Base+0x771c>
  4498a4:	ldr	x24, [x2, #80]
  4498a8:	mov	x2, x0
  4498ac:	add	x0, sp, #0x58
  4498b0:	mov	x1, x24
  4498b4:	bl	445028 <_obstack_memory_used@@Base+0x2e38>
  4498b8:	str	w0, [x21]
  4498bc:	cbnz	w0, 4499ac <_obstack_memory_used@@Base+0x77bc>
  4498c0:	ldr	w2, [x19, #160]
  4498c4:	mov	x0, x19
  4498c8:	ldr	x1, [x19, #72]
  4498cc:	str	x25, [sp, #64]
  4498d0:	sub	x1, x1, #0x1
  4498d4:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  4498d8:	ldr	x25, [x19, #184]
  4498dc:	mov	w3, w0
  4498e0:	add	x2, sp, #0x58
  4498e4:	mov	x1, x23
  4498e8:	mov	x0, x21
  4498ec:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  4498f0:	str	x0, [x25, x20, lsl #3]
  4498f4:	mov	x22, x0
  4498f8:	cbz	x24, 4499b4 <_obstack_memory_used@@Base+0x77c4>
  4498fc:	ldr	x0, [sp, #104]
  449900:	bl	4047b0 <free@plt>
  449904:	ldr	x25, [sp, #64]
  449908:	b	449874 <_obstack_memory_used@@Base+0x7684>
  44990c:	ldp	x2, x3, [x0]
  449910:	stp	x2, x3, [sp, #88]
  449914:	ldr	w2, [x19, #160]
  449918:	ldr	x3, [x0, #16]
  44991c:	sub	x1, x20, #0x1
  449920:	mov	x0, x19
  449924:	str	x3, [sp, #104]
  449928:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  44992c:	mov	w3, w0
  449930:	add	x2, sp, #0x58
  449934:	mov	x1, x23
  449938:	mov	x0, x21
  44993c:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  449940:	mov	x22, x0
  449944:	str	x0, [x24, x20, lsl #3]
  449948:	b	449874 <_obstack_memory_used@@Base+0x7684>
  44994c:	mov	x22, x2
  449950:	str	x2, [x24, x20, lsl #3]
  449954:	b	449874 <_obstack_memory_used@@Base+0x7684>
  449958:	cbz	x22, 4499ac <_obstack_memory_used@@Base+0x77bc>
  44995c:	add	x23, x22, #0x10
  449960:	add	x24, x22, #0x18
  449964:	mov	x1, x23
  449968:	mov	x2, x24
  44996c:	mov	x3, x20
  449970:	mov	x0, x19
  449974:	bl	445a58 <_obstack_memory_used@@Base+0x3868>
  449978:	str	w0, [x21]
  44997c:	cbnz	w0, 4499ac <_obstack_memory_used@@Base+0x77bc>
  449980:	ldrb	w0, [x22, #104]
  449984:	tbz	w0, #6, 44987c <_obstack_memory_used@@Base+0x768c>
  449988:	mov	x2, x24
  44998c:	mov	x1, x23
  449990:	mov	x0, x19
  449994:	bl	449150 <_obstack_memory_used@@Base+0x6f60>
  449998:	str	w0, [x21]
  44999c:	cbnz	w0, 4499ac <_obstack_memory_used@@Base+0x77bc>
  4499a0:	ldr	x0, [x19, #184]
  4499a4:	ldr	x22, [x0, x20, lsl #3]
  4499a8:	b	44987c <_obstack_memory_used@@Base+0x768c>
  4499ac:	mov	x22, #0x0                   	// #0
  4499b0:	b	44987c <_obstack_memory_used@@Base+0x768c>
  4499b4:	ldr	x25, [sp, #64]
  4499b8:	b	449874 <_obstack_memory_used@@Base+0x7684>
  4499bc:	nop
  4499c0:	stp	x29, x30, [sp, #-160]!
  4499c4:	mov	x29, sp
  4499c8:	stp	x21, x22, [sp, #32]
  4499cc:	mov	x21, x1
  4499d0:	mov	x1, #0x1                   	// #1
  4499d4:	stp	x19, x20, [sp, #16]
  4499d8:	mov	x20, x0
  4499dc:	mov	x0, #0x8                   	// #8
  4499e0:	stp	x1, x1, [sp, #136]
  4499e4:	ldp	x22, x19, [x21, #16]
  4499e8:	bl	404310 <malloc@plt>
  4499ec:	str	x0, [sp, #152]
  4499f0:	cbz	x0, 449c54 <_obstack_memory_used@@Base+0x7a64>
  4499f4:	mov	x4, x0
  4499f8:	mov	x2, x19
  4499fc:	add	x3, sp, #0x88
  449a00:	mov	x1, x21
  449a04:	mov	x0, x20
  449a08:	str	x22, [x4]
  449a0c:	bl	44ae48 <_obstack_memory_used@@Base+0x8c58>
  449a10:	cbnz	w0, 449c6c <_obstack_memory_used@@Base+0x7a7c>
  449a14:	add	x0, x21, #0x30
  449a18:	stp	x23, x24, [sp, #48]
  449a1c:	stp	x25, x26, [sp, #64]
  449a20:	mov	w25, #0x0                   	// #0
  449a24:	stp	x27, x28, [sp, #80]
  449a28:	str	x0, [sp, #112]
  449a2c:	add	x0, x21, #0x28
  449a30:	str	x0, [sp, #120]
  449a34:	cmp	x19, #0x0
  449a38:	b.le	449c08 <_obstack_memory_used@@Base+0x7a18>
  449a3c:	ldr	x0, [x21]
  449a40:	lsl	x26, x19, #3
  449a44:	ldr	w1, [x20, #224]
  449a48:	ldr	x2, [x0, x19, lsl #3]
  449a4c:	cmp	x2, #0x0
  449a50:	csinc	w25, wzr, w25, ne  // ne = any
  449a54:	cmp	w1, w25
  449a58:	b.lt	449c1c <_obstack_memory_used@@Base+0x7a2c>  // b.tstop
  449a5c:	ldr	x0, [x20, #184]
  449a60:	sub	x19, x19, #0x1
  449a64:	add	x0, x0, x26
  449a68:	ldur	x22, [x0, #-8]
  449a6c:	str	xzr, [sp, #144]
  449a70:	cbz	x22, 449bb4 <_obstack_memory_used@@Base+0x79c4>
  449a74:	ldr	x0, [x22, #40]
  449a78:	add	x22, x22, #0x20
  449a7c:	ldr	x23, [x20, #152]
  449a80:	cmp	x0, #0x0
  449a84:	b.le	449bb4 <_obstack_memory_used@@Base+0x79c4>
  449a88:	mov	x24, #0x0                   	// #0
  449a8c:	b	449b20 <_obstack_memory_used@@Base+0x7930>
  449a90:	mov	x2, x19
  449a94:	mov	x0, x20
  449a98:	bl	445c78 <_obstack_memory_used@@Base+0x3a88>
  449a9c:	tst	w0, #0xff
  449aa0:	b.eq	449b10 <_obstack_memory_used@@Base+0x7920>  // b.none
  449aa4:	ldr	x0, [x21]
  449aa8:	ldr	x0, [x0, x26]
  449aac:	cbz	x0, 449b10 <_obstack_memory_used@@Base+0x7920>
  449ab0:	ldr	x2, [x23, #24]
  449ab4:	add	x1, x0, #0x18
  449ab8:	ldr	x0, [x0, #16]
  449abc:	ldr	x2, [x2, x27, lsl #3]
  449ac0:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  449ac4:	cbz	x0, 449b10 <_obstack_memory_used@@Base+0x7920>
  449ac8:	mov	w6, #0x1                   	// #1
  449acc:	ldr	x0, [x21, #40]
  449ad0:	cbz	x0, 449afc <_obstack_memory_used@@Base+0x790c>
  449ad4:	ldr	x0, [x23, #24]
  449ad8:	add	x4, x19, w6, sxtw
  449adc:	ldp	x2, x1, [sp, #112]
  449ae0:	mov	x6, x19
  449ae4:	ldr	x3, [x0, x27, lsl #3]
  449ae8:	mov	x5, x27
  449aec:	mov	x0, x20
  449af0:	bl	444268 <_obstack_memory_used@@Base+0x2078>
  449af4:	tst	w0, #0xff
  449af8:	b.ne	449b10 <_obstack_memory_used@@Base+0x7920>  // b.any
  449afc:	mov	x1, x27
  449b00:	add	x0, sp, #0x88
  449b04:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  449b08:	tst	w0, #0xff
  449b0c:	b.eq	449c00 <_obstack_memory_used@@Base+0x7a10>  // b.none
  449b10:	ldr	x0, [x22, #8]
  449b14:	add	x24, x24, #0x1
  449b18:	cmp	x24, x0
  449b1c:	b.ge	449bb4 <_obstack_memory_used@@Base+0x79c4>  // b.tcont
  449b20:	ldr	x0, [x22, #16]
  449b24:	ldr	x1, [x23]
  449b28:	ldr	x27, [x0, x24, lsl #3]
  449b2c:	lsl	x28, x27, #4
  449b30:	add	x1, x1, x28
  449b34:	ldrb	w0, [x1, #10]
  449b38:	tbz	w0, #4, 449a90 <_obstack_memory_used@@Base+0x78a0>
  449b3c:	ldr	x8, [x20, #152]
  449b40:	mov	x4, x19
  449b44:	ldr	x9, [x21, #24]
  449b48:	mov	x1, x8
  449b4c:	mov	x3, x20
  449b50:	mov	x2, x27
  449b54:	stp	x9, x8, [sp, #96]
  449b58:	ldr	x0, [x1], #216
  449b5c:	bl	4481e0 <_obstack_memory_used@@Base+0x5ff0>
  449b60:	mov	w6, w0
  449b64:	cmp	w0, #0x0
  449b68:	b.le	449bf8 <_obstack_memory_used@@Base+0x7a08>
  449b6c:	ldr	x9, [sp, #96]
  449b70:	add	x0, x19, w0, sxtw
  449b74:	cmp	x9, x0
  449b78:	b.lt	449acc <_obstack_memory_used@@Base+0x78dc>  // b.tstop
  449b7c:	ldr	x1, [x21]
  449b80:	ldr	x8, [sp, #104]
  449b84:	ldr	x0, [x1, x0, lsl #3]
  449b88:	cbz	x0, 449ba8 <_obstack_memory_used@@Base+0x79b8>
  449b8c:	ldr	x2, [x8, #24]
  449b90:	add	x1, x0, #0x18
  449b94:	ldr	x0, [x0, #16]
  449b98:	ldr	x2, [x2, x27, lsl #3]
  449b9c:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  449ba0:	cbnz	x0, 449acc <_obstack_memory_used@@Base+0x78dc>
  449ba4:	nop
  449ba8:	ldr	x1, [x23]
  449bac:	add	x1, x1, x28
  449bb0:	b	449a90 <_obstack_memory_used@@Base+0x78a0>
  449bb4:	add	x3, sp, #0x88
  449bb8:	mov	x2, x19
  449bbc:	mov	x1, x21
  449bc0:	mov	x0, x20
  449bc4:	bl	44ae48 <_obstack_memory_used@@Base+0x8c58>
  449bc8:	mov	w22, w0
  449bcc:	cbz	w0, 449a34 <_obstack_memory_used@@Base+0x7844>
  449bd0:	ldp	x23, x24, [sp, #48]
  449bd4:	ldp	x25, x26, [sp, #64]
  449bd8:	ldp	x27, x28, [sp, #80]
  449bdc:	ldr	x0, [sp, #152]
  449be0:	bl	4047b0 <free@plt>
  449be4:	mov	w0, w22
  449be8:	ldp	x19, x20, [sp, #16]
  449bec:	ldp	x21, x22, [sp, #32]
  449bf0:	ldp	x29, x30, [sp], #160
  449bf4:	ret
  449bf8:	b.eq	449ba8 <_obstack_memory_used@@Base+0x79b8>  // b.none
  449bfc:	b	449acc <_obstack_memory_used@@Base+0x78dc>
  449c00:	mov	w22, #0xc                   	// #12
  449c04:	b	449bd0 <_obstack_memory_used@@Base+0x79e0>
  449c08:	mov	w22, #0x0                   	// #0
  449c0c:	ldp	x23, x24, [sp, #48]
  449c10:	ldp	x25, x26, [sp, #64]
  449c14:	ldp	x27, x28, [sp, #80]
  449c18:	b	449bdc <_obstack_memory_used@@Base+0x79ec>
  449c1c:	mov	x2, x26
  449c20:	mov	w1, #0x0                   	// #0
  449c24:	bl	404410 <memset@plt>
  449c28:	mov	w22, #0x0                   	// #0
  449c2c:	ldr	x0, [sp, #152]
  449c30:	bl	4047b0 <free@plt>
  449c34:	mov	w0, w22
  449c38:	ldp	x19, x20, [sp, #16]
  449c3c:	ldp	x21, x22, [sp, #32]
  449c40:	ldp	x23, x24, [sp, #48]
  449c44:	ldp	x25, x26, [sp, #64]
  449c48:	ldp	x27, x28, [sp, #80]
  449c4c:	ldp	x29, x30, [sp], #160
  449c50:	ret
  449c54:	mov	w22, #0xc                   	// #12
  449c58:	mov	w0, w22
  449c5c:	ldp	x19, x20, [sp, #16]
  449c60:	ldp	x21, x22, [sp, #32]
  449c64:	ldp	x29, x30, [sp], #160
  449c68:	ret
  449c6c:	mov	w22, w0
  449c70:	b	449bdc <_obstack_memory_used@@Base+0x79ec>
  449c74:	nop
  449c78:	sub	sp, sp, #0x260
  449c7c:	stp	x29, x30, [sp]
  449c80:	mov	x29, sp
  449c84:	stp	x19, x20, [sp, #16]
  449c88:	mov	x20, x3
  449c8c:	ldr	w3, [sp, #608]
  449c90:	stp	x21, x22, [sp, #32]
  449c94:	mov	x22, x0
  449c98:	mov	x21, x4
  449c9c:	mov	x19, x5
  449ca0:	stp	x27, x28, [sp, #80]
  449ca4:	str	x0, [sp, #104]
  449ca8:	str	x6, [sp, #120]
  449cac:	str	w3, [sp, #144]
  449cb0:	str	x2, [sp, #152]
  449cb4:	mov	x2, #0x100                 	// #256
  449cb8:	str	x1, [sp, #176]
  449cbc:	mov	w1, #0x0                   	// #0
  449cc0:	str	x7, [sp, #256]
  449cc4:	ldr	x28, [x0]
  449cc8:	add	x0, sp, #0x160
  449ccc:	bl	404410 <memset@plt>
  449cd0:	str	x28, [sp, #504]
  449cd4:	ldr	x27, [x22, #32]
  449cd8:	cbz	x27, 449cf0 <_obstack_memory_used@@Base+0x7b00>
  449cdc:	ldrb	w0, [x22, #56]
  449ce0:	tst	x0, #0x8
  449ce4:	ccmp	x20, x21, #0x4, ne  // ne = any
  449ce8:	b.ne	44a0b8 <_obstack_memory_used@@Base+0x7ec8>  // b.any
  449cec:	mov	x27, #0x0                   	// #0
  449cf0:	ldr	x0, [sp, #104]
  449cf4:	str	xzr, [sp, #224]
  449cf8:	ldr	x3, [sp, #120]
  449cfc:	ldr	x0, [x0, #48]
  449d00:	cmp	x0, x3
  449d04:	b.cs	449d20 <_obstack_memory_used@@Base+0x7b30>  // b.hs, b.nlast
  449d08:	sub	x1, x3, #0x1
  449d0c:	sub	x2, x0, x1
  449d10:	sub	x0, x1, x0
  449d14:	str	x0, [sp, #224]
  449d18:	add	x0, x3, x2
  449d1c:	str	x0, [sp, #120]
  449d20:	ldr	x4, [sp, #104]
  449d24:	ldr	x0, [x4, #16]
  449d28:	cbz	x0, 44a7e4 <_obstack_memory_used@@Base+0x85f4>
  449d2c:	ldr	x0, [x28, #72]
  449d30:	cbz	x0, 44a7e4 <_obstack_memory_used@@Base+0x85f4>
  449d34:	ldr	x1, [x28, #80]
  449d38:	cbz	x1, 44a7e4 <_obstack_memory_used@@Base+0x85f4>
  449d3c:	ldr	x2, [x28, #88]
  449d40:	cbz	x2, 44a7e4 <_obstack_memory_used@@Base+0x85f4>
  449d44:	ldr	x3, [x28, #96]
  449d48:	cbz	x3, 44a7e4 <_obstack_memory_used@@Base+0x85f4>
  449d4c:	ldr	x0, [x0, #16]
  449d50:	cbnz	x0, 449d80 <_obstack_memory_used@@Base+0x7b90>
  449d54:	ldr	x0, [x1, #16]
  449d58:	cbnz	x0, 449d80 <_obstack_memory_used@@Base+0x7b90>
  449d5c:	ldr	x0, [x2, #16]
  449d60:	cbz	x0, 449d6c <_obstack_memory_used@@Base+0x7b7c>
  449d64:	ldrsb	w0, [x4, #56]
  449d68:	tbnz	w0, #31, 449d80 <_obstack_memory_used@@Base+0x7b90>
  449d6c:	cmp	x20, #0x0
  449d70:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  449d74:	b.ne	44a7e4 <_obstack_memory_used@@Base+0x85f4>  // b.any
  449d78:	mov	x21, #0x0                   	// #0
  449d7c:	mov	x20, #0x0                   	// #0
  449d80:	ldr	x0, [sp, #120]
  449d84:	cbnz	x0, 44a0a8 <_obstack_memory_used@@Base+0x7eb8>
  449d88:	ldr	x0, [x28, #152]
  449d8c:	cmp	x0, #0x0
  449d90:	cset	w0, ne  // ne = any
  449d94:	str	w0, [sp, #160]
  449d98:	str	w0, [sp, #200]
  449d9c:	ldr	x8, [sp, #104]
  449da0:	add	x0, sp, #0x160
  449da4:	ldr	w6, [x28, #180]
  449da8:	ldr	x2, [x28, #16]
  449dac:	str	w6, [sp, #496]
  449db0:	ldr	x3, [x8, #24]
  449db4:	add	x1, x2, #0x1
  449db8:	ldr	x7, [sp, #152]
  449dbc:	sxtw	x2, w6
  449dc0:	ldr	x8, [x8, #40]
  449dc4:	cmp	x1, x2
  449dc8:	ldr	x5, [sp, #176]
  449dcc:	csel	x1, x1, x2, ge  // ge = tcont
  449dd0:	add	x4, x7, #0x1
  449dd4:	str	x5, [sp, #352]
  449dd8:	and	x5, x3, #0x400000
  449ddc:	cmp	x1, x4
  449de0:	orr	x2, x5, x8
  449de4:	csel	x1, x1, x4, le
  449de8:	cmp	x2, #0x0
  449dec:	ldrb	w2, [x28, #176]
  449df0:	ubfx	w3, w3, #22, #1
  449df4:	strb	w3, [sp, #488]
  449df8:	cset	w3, ne  // ne = any
  449dfc:	strb	w3, [sp, #491]
  449e00:	ubfx	x3, x2, #2, #1
  449e04:	ubfx	x2, x2, #3, #1
  449e08:	str	x8, [sp, #232]
  449e0c:	stp	x7, x7, [sp, #432]
  449e10:	stp	x7, x7, [sp, #448]
  449e14:	str	x8, [sp, #472]
  449e18:	strb	w3, [sp, #489]
  449e1c:	strb	w2, [sp, #490]
  449e20:	bl	442910 <_obstack_memory_used@@Base+0x720>
  449e24:	str	w0, [sp, #116]
  449e28:	cbnz	w0, 44ab74 <_obstack_memory_used@@Base+0x8984>
  449e2c:	ldrb	w0, [x28, #176]
  449e30:	add	x1, x28, #0xb8
  449e34:	ldrb	w2, [sp, #491]
  449e38:	str	x1, [sp, #480]
  449e3c:	ubfx	x0, x0, #4, #1
  449e40:	strb	w0, [sp, #494]
  449e44:	cbnz	w2, 449e60 <_obstack_memory_used@@Base+0x7c70>
  449e48:	ldr	x0, [sp, #176]
  449e4c:	str	x0, [sp, #360]
  449e50:	ldr	w0, [x28, #180]
  449e54:	ldr	x1, [sp, #152]
  449e58:	cmp	w0, #0x1
  449e5c:	b.le	449e64 <_obstack_memory_used@@Base+0x7c74>
  449e60:	mov	x1, #0x0                   	// #0
  449e64:	ldr	x0, [sp, #104]
  449e68:	mov	x2, #0xffffffffffffffff    	// #-1
  449e6c:	ldr	x22, [x28, #152]
  449e70:	stp	x1, x1, [sp, #400]
  449e74:	ldrb	w0, [x0, #56]
  449e78:	stp	x19, x19, [sp, #448]
  449e7c:	cmp	xzr, x22, lsl #1
  449e80:	ubfx	x0, x0, #7, #1
  449e84:	strb	w0, [sp, #493]
  449e88:	ldr	w0, [sp, #144]
  449e8c:	lsl	x19, x22, #1
  449e90:	str	w0, [sp, #512]
  449e94:	str	x2, [sp, #520]
  449e98:	b.ge	449edc <_obstack_memory_used@@Base+0x7cec>  // b.tcont
  449e9c:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  449ea0:	movk	x0, #0x666, lsl #48
  449ea4:	cmp	x19, x0
  449ea8:	b.gt	44ab6c <_obstack_memory_used@@Base+0x897c>
  449eac:	add	x0, x19, x22, lsl #3
  449eb0:	lsl	x0, x0, #3
  449eb4:	bl	404310 <malloc@plt>
  449eb8:	mov	x1, x0
  449ebc:	lsl	x0, x22, #4
  449ec0:	mov	x22, x1
  449ec4:	str	x1, [sp, #568]
  449ec8:	bl	404310 <malloc@plt>
  449ecc:	str	x0, [sp, #600]
  449ed0:	cmp	x0, #0x0
  449ed4:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  449ed8:	b.eq	44ab6c <_obstack_memory_used@@Base+0x897c>  // b.none
  449edc:	mov	w0, #0x1                   	// #1
  449ee0:	str	w0, [sp, #576]
  449ee4:	ldr	x0, [sp, #120]
  449ee8:	str	x19, [sp, #560]
  449eec:	str	x19, [sp, #592]
  449ef0:	cmp	x0, #0x1
  449ef4:	b.ls	44ab5c <_obstack_memory_used@@Base+0x896c>  // b.plast
  449ef8:	ldr	x0, [sp, #416]
  449efc:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
  449f00:	cmp	x0, x1
  449f04:	b.hi	44ab6c <_obstack_memory_used@@Base+0x897c>  // b.pmore
  449f08:	add	x0, x0, #0x1
  449f0c:	lsl	x0, x0, #3
  449f10:	bl	404310 <malloc@plt>
  449f14:	str	x0, [sp, #536]
  449f18:	cbz	x0, 44ad64 <_obstack_memory_used@@Base+0x8b74>
  449f1c:	ldr	x0, [sp, #144]
  449f20:	mov	w1, #0x6                   	// #6
  449f24:	mov	w2, #0x1                   	// #1
  449f28:	str	x20, [sp, #288]
  449f2c:	tst	x0, #0x1
  449f30:	mov	w0, #0x4                   	// #4
  449f34:	csel	w1, w0, w1, ne  // ne = any
  449f38:	cmp	x20, x21
  449f3c:	str	w1, [sp, #464]
  449f40:	csel	x1, x20, x21, ge  // ge = tcont
  449f44:	str	x1, [sp, #128]
  449f48:	mov	w1, #0x8                   	// #8
  449f4c:	cneg	w2, w2, gt
  449f50:	str	w1, [sp, #164]
  449f54:	ldr	w1, [x28, #180]
  449f58:	str	w2, [sp, #204]
  449f5c:	csel	x2, x20, x21, le
  449f60:	str	x2, [sp, #168]
  449f64:	str	w1, [sp, #244]
  449f68:	cbz	x27, 449fb8 <_obstack_memory_used@@Base+0x7dc8>
  449f6c:	cmp	w1, #0x1
  449f70:	b.eq	449f94 <_obstack_memory_used@@Base+0x7da4>  // b.none
  449f74:	ldr	x0, [sp, #104]
  449f78:	ldr	x1, [sp, #232]
  449f7c:	ldr	x0, [x0, #24]
  449f80:	and	x0, x0, #0x400000
  449f84:	orr	x0, x1, x0
  449f88:	cmp	x0, #0x0
  449f8c:	cset	w0, eq  // eq = none
  449f90:	lsl	w0, w0, #2
  449f94:	cmp	x20, x21
  449f98:	mov	w1, #0x2                   	// #2
  449f9c:	csel	w2, wzr, w1, gt
  449fa0:	ldr	x1, [sp, #232]
  449fa4:	cmp	x1, #0x0
  449fa8:	cset	w1, ne  // ne = any
  449fac:	orr	w0, w1, w0
  449fb0:	orr	w0, w0, w2
  449fb4:	str	w0, [sp, #164]
  449fb8:	ldr	x0, [sp, #168]
  449fbc:	cmp	x20, x0
  449fc0:	ldr	x0, [sp, #128]
  449fc4:	cset	w1, lt  // lt = tstop
  449fc8:	cmp	x20, x0
  449fcc:	cset	w0, gt
  449fd0:	orr	w0, w1, w0
  449fd4:	str	w0, [sp, #268]
  449fd8:	cbnz	w0, 44adac <_obstack_memory_used@@Base+0x8bbc>
  449fdc:	cmp	x20, x21
  449fe0:	add	x0, sp, #0x120
  449fe4:	csel	x0, x0, xzr, le
  449fe8:	str	x0, [sp, #248]
  449fec:	cmp	x0, #0x0
  449ff0:	stp	x23, x24, [sp, #48]
  449ff4:	cset	w0, ne  // ne = any
  449ff8:	stp	x25, x26, [sp, #64]
  449ffc:	stp	x28, x27, [sp, #184]
  44a000:	str	w0, [sp, #264]
  44a004:	ldr	w0, [sp, #164]
  44a008:	cmp	w0, #0x7
  44a00c:	b.eq	44a6a4 <_obstack_memory_used@@Base+0x84b4>  // b.none
  44a010:	cmp	w0, #0x8
  44a014:	b.eq	44a198 <_obstack_memory_used@@Base+0x7fa8>  // b.none
  44a018:	cmp	w0, #0x5
  44a01c:	b.gt	44a0c4 <_obstack_memory_used@@Base+0x7ed4>
  44a020:	cmp	w0, #0x3
  44a024:	b.gt	44aae8 <_obstack_memory_used@@Base+0x88f8>
  44a028:	ldrsw	x19, [sp, #204]
  44a02c:	ldr	x23, [sp, #128]
  44a030:	ldr	x21, [sp, #152]
  44a034:	ldr	x22, [sp, #168]
  44a038:	ldr	x27, [sp, #192]
  44a03c:	ldr	x2, [sp, #392]
  44a040:	b	44a078 <_obstack_memory_used@@Base+0x7e88>
  44a044:	cmp	x21, x20
  44a048:	mov	x0, x27
  44a04c:	b.le	44a05c <_obstack_memory_used@@Base+0x7e6c>
  44a050:	ldr	x0, [sp, #360]
  44a054:	ldrb	w0, [x0, x1]
  44a058:	add	x0, x27, x0
  44a05c:	ldrb	w0, [x0]
  44a060:	cbnz	w0, 44a198 <_obstack_memory_used@@Base+0x7fa8>
  44a064:	add	x20, x20, x19
  44a068:	str	x20, [sp, #288]
  44a06c:	cmp	x20, x22
  44a070:	ccmp	x20, x23, #0x0, ge  // ge = tcont
  44a074:	b.gt	44a140 <_obstack_memory_used@@Base+0x7f50>
  44a078:	ldr	x0, [sp, #408]
  44a07c:	sub	x1, x20, x2
  44a080:	cmp	x0, x1
  44a084:	b.hi	44a044 <_obstack_memory_used@@Base+0x7e54>  // b.pmore
  44a088:	ldr	w2, [sp, #144]
  44a08c:	mov	x1, x20
  44a090:	add	x0, sp, #0x160
  44a094:	bl	445e68 <_obstack_memory_used@@Base+0x3c78>
  44a098:	cbnz	w0, 44ad70 <_obstack_memory_used@@Base+0x8b80>
  44a09c:	ldr	x2, [sp, #392]
  44a0a0:	sub	x1, x20, x2
  44a0a4:	b	44a044 <_obstack_memory_used@@Base+0x7e54>
  44a0a8:	mov	w0, #0x1                   	// #1
  44a0ac:	str	w0, [sp, #160]
  44a0b0:	str	w0, [sp, #200]
  44a0b4:	b	449d9c <_obstack_memory_used@@Base+0x7bac>
  44a0b8:	tst	x0, #0x1
  44a0bc:	csel	x27, x27, xzr, eq  // eq = none
  44a0c0:	b	449cf0 <_obstack_memory_used@@Base+0x7b00>
  44a0c4:	ldr	w0, [sp, #164]
  44a0c8:	cmp	w0, #0x6
  44a0cc:	b.ne	44a028 <_obstack_memory_used@@Base+0x7e38>  // b.any
  44a0d0:	ldr	x0, [sp, #128]
  44a0d4:	mov	w2, #0x0                   	// #0
  44a0d8:	cmp	x0, x20
  44a0dc:	mov	x0, x20
  44a0e0:	b.le	44a18c <_obstack_memory_used@@Base+0x7f9c>
  44a0e4:	ldr	x4, [sp, #128]
  44a0e8:	ldr	x3, [sp, #176]
  44a0ec:	ldr	x27, [sp, #192]
  44a0f0:	ldrb	w1, [x3, x0]
  44a0f4:	ldrb	w1, [x27, x1]
  44a0f8:	cbnz	w1, 44a180 <_obstack_memory_used@@Base+0x7f90>
  44a0fc:	add	x0, x0, #0x1
  44a100:	mov	w2, #0x1                   	// #1
  44a104:	cmp	x0, x4
  44a108:	b.ne	44a0f0 <_obstack_memory_used@@Base+0x7f00>  // b.any
  44a10c:	ldr	x20, [sp, #128]
  44a110:	ldr	x0, [sp, #128]
  44a114:	str	x0, [sp, #288]
  44a118:	ldr	x0, [sp, #152]
  44a11c:	cmp	x20, x0
  44a120:	mov	x0, #0x0                   	// #0
  44a124:	b.lt	44acf0 <_obstack_memory_used@@Base+0x8b00>  // b.tstop
  44a128:	ldr	x1, [sp, #232]
  44a12c:	cbz	x1, 44a134 <_obstack_memory_used@@Base+0x7f44>
  44a130:	ldrb	w0, [x1, x0]
  44a134:	ldr	x1, [sp, #192]
  44a138:	ldrb	w0, [x1, x0]
  44a13c:	cbnz	w0, 44a198 <_obstack_memory_used@@Base+0x7fa8>
  44a140:	ldr	x28, [sp, #184]
  44a144:	mov	w0, #0x1                   	// #1
  44a148:	str	w0, [sp, #116]
  44a14c:	ldr	x0, [sp, #536]
  44a150:	ldp	x23, x24, [sp, #48]
  44a154:	ldp	x25, x26, [sp, #64]
  44a158:	bl	4047b0 <free@plt>
  44a15c:	ldr	x0, [x28, #152]
  44a160:	cbz	x0, 44a86c <_obstack_memory_used@@Base+0x867c>
  44a164:	add	x0, sp, #0x160
  44a168:	bl	443e98 <_obstack_memory_used@@Base+0x1ca8>
  44a16c:	ldr	x0, [sp, #600]
  44a170:	bl	4047b0 <free@plt>
  44a174:	ldr	x0, [sp, #568]
  44a178:	bl	4047b0 <free@plt>
  44a17c:	b	44a86c <_obstack_memory_used@@Base+0x867c>
  44a180:	cbz	w2, 44a198 <_obstack_memory_used@@Base+0x7fa8>
  44a184:	mov	x20, x0
  44a188:	str	x0, [sp, #288]
  44a18c:	ldr	x0, [sp, #128]
  44a190:	cmp	x0, x20
  44a194:	b.eq	44a118 <_obstack_memory_used@@Base+0x7f28>  // b.none
  44a198:	ldr	w2, [sp, #144]
  44a19c:	mov	x1, x20
  44a1a0:	add	x0, sp, #0x160
  44a1a4:	bl	445e68 <_obstack_memory_used@@Base+0x3c78>
  44a1a8:	str	w0, [sp, #116]
  44a1ac:	cbnz	w0, 44abec <_obstack_memory_used@@Base+0x89fc>
  44a1b0:	ldr	w0, [sp, #244]
  44a1b4:	cmp	w0, #0x1
  44a1b8:	b.eq	44a1d4 <_obstack_memory_used@@Base+0x7fe4>  // b.none
  44a1bc:	ldr	x0, [sp, #400]
  44a1c0:	cbz	x0, 44a1d4 <_obstack_memory_used@@Base+0x7fe4>
  44a1c4:	ldr	x0, [sp, #368]
  44a1c8:	ldr	w0, [x0]
  44a1cc:	cmn	w0, #0x1
  44a1d0:	b.eq	44a678 <_obstack_memory_used@@Base+0x8488>  // b.none
  44a1d4:	ldr	x20, [sp, #504]
  44a1d8:	str	wzr, [sp, #280]
  44a1dc:	ldr	x25, [sp, #424]
  44a1e0:	ldr	x19, [x20, #72]
  44a1e4:	ldrsb	w0, [x19, #104]
  44a1e8:	str	xzr, [sp, #544]
  44a1ec:	str	xzr, [sp, #552]
  44a1f0:	str	wzr, [sp, #576]
  44a1f4:	tbz	w0, #31, 44a228 <_obstack_memory_used@@Base+0x8038>
  44a1f8:	ldr	w2, [sp, #512]
  44a1fc:	sub	x1, x25, #0x1
  44a200:	add	x0, sp, #0x160
  44a204:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  44a208:	tbnz	w0, #0, 44ab7c <_obstack_memory_used@@Base+0x898c>
  44a20c:	cbz	w0, 44a228 <_obstack_memory_used@@Base+0x8038>
  44a210:	and	w1, w0, #0x6
  44a214:	cmp	w1, #0x6
  44a218:	b.eq	44ad54 <_obstack_memory_used@@Base+0x8b64>  // b.none
  44a21c:	tbnz	w0, #1, 44ac84 <_obstack_memory_used@@Base+0x8a94>
  44a220:	tbnz	w0, #2, 44acb4 <_obstack_memory_used@@Base+0x8ac4>
  44a224:	nop
  44a228:	ldr	x0, [sp, #536]
  44a22c:	cbz	x0, 44aadc <_obstack_memory_used@@Base+0x88ec>
  44a230:	ldr	x1, [x20, #152]
  44a234:	str	x19, [x0, x25, lsl #3]
  44a238:	cbnz	x1, 44acfc <_obstack_memory_used@@Base+0x8b0c>
  44a23c:	ldrb	w0, [x19, #104]
  44a240:	ldr	w24, [sp, #264]
  44a244:	str	xzr, [sp, #96]
  44a248:	mov	x26, #0xffffffffffffffff    	// #-1
  44a24c:	tbnz	w0, #4, 44ac30 <_obstack_memory_used@@Base+0x8a40>
  44a250:	ldr	x0, [sp, #248]
  44a254:	str	x0, [sp, #136]
  44a258:	ldr	x22, [sp, #424]
  44a25c:	ldr	x0, [sp, #456]
  44a260:	cmp	x0, x22
  44a264:	b.le	44a51c <_obstack_memory_used@@Base+0x832c>
  44a268:	ldr	x0, [sp, #416]
  44a26c:	add	x21, x22, #0x1
  44a270:	cmp	x21, x0
  44a274:	b.ge	44a324 <_obstack_memory_used@@Base+0x8134>  // b.tcont
  44a278:	ldr	x0, [sp, #400]
  44a27c:	cmp	x21, x0
  44a280:	b.ge	44a7d4 <_obstack_memory_used@@Base+0x85e4>  // b.tcont
  44a284:	ldrb	w0, [x19, #104]
  44a288:	mov	x4, x22
  44a28c:	tbnz	w0, #5, 44a358 <_obstack_memory_used@@Base+0x8168>
  44a290:	ldr	x0, [sp, #360]
  44a294:	add	x1, x4, #0x1
  44a298:	str	x1, [sp, #424]
  44a29c:	ldrb	w20, [x0, x4]
  44a2a0:	ldr	x0, [x19, #88]
  44a2a4:	cbz	x0, 44a7a4 <_obstack_memory_used@@Base+0x85b4>
  44a2a8:	ldr	x20, [x0, x20, lsl #3]
  44a2ac:	ldr	x0, [sp, #536]
  44a2b0:	cbz	x0, 44a2c8 <_obstack_memory_used@@Base+0x80d8>
  44a2b4:	mov	x2, x20
  44a2b8:	add	x1, sp, #0x160
  44a2bc:	add	x0, sp, #0x118
  44a2c0:	bl	449838 <_obstack_memory_used@@Base+0x7648>
  44a2c4:	mov	x20, x0
  44a2c8:	cbz	x20, 44a4c4 <_obstack_memory_used@@Base+0x82d4>
  44a2cc:	cmp	x19, x20
  44a2d0:	ldrb	w0, [x20, #104]
  44a2d4:	csel	w24, w24, wzr, eq  // eq = none
  44a2d8:	cmp	w24, #0x0
  44a2dc:	csel	x25, x25, x21, eq  // eq = none
  44a2e0:	ldr	x22, [sp, #424]
  44a2e4:	tbz	w0, #4, 44a304 <_obstack_memory_used@@Base+0x8114>
  44a2e8:	tbnz	w0, #7, 44a720 <_obstack_memory_used@@Base+0x8530>
  44a2ec:	ldr	w0, [sp, #160]
  44a2f0:	mov	x26, x22
  44a2f4:	cbz	w0, 44a530 <_obstack_memory_used@@Base+0x8340>
  44a2f8:	mov	x0, #0x1                   	// #1
  44a2fc:	str	x0, [sp, #96]
  44a300:	str	xzr, [sp, #136]
  44a304:	ldr	x0, [sp, #456]
  44a308:	cmp	x0, x22
  44a30c:	b.le	44a51c <_obstack_memory_used@@Base+0x832c>
  44a310:	ldr	x0, [sp, #416]
  44a314:	add	x21, x22, #0x1
  44a318:	mov	x19, x20
  44a31c:	cmp	x21, x0
  44a320:	b.lt	44a278 <_obstack_memory_used@@Base+0x8088>  // b.tstop
  44a324:	ldr	x1, [sp, #440]
  44a328:	cmp	x0, x1
  44a32c:	b.ge	44a278 <_obstack_memory_used@@Base+0x8088>  // b.tcont
  44a330:	add	w1, w21, #0x1
  44a334:	add	x0, sp, #0x160
  44a338:	bl	4434e0 <_obstack_memory_used@@Base+0x12f0>
  44a33c:	str	w0, [sp, #280]
  44a340:	cbnz	w0, 44ac00 <_obstack_memory_used@@Base+0x8a10>
  44a344:	ldrb	w0, [x19, #104]
  44a348:	ldr	x22, [sp, #424]
  44a34c:	mov	x4, x22
  44a350:	tbz	w0, #5, 44a290 <_obstack_memory_used@@Base+0x80a0>
  44a354:	nop
  44a358:	ldr	x27, [x19, #16]
  44a35c:	ldr	x20, [sp, #504]
  44a360:	cmp	x27, #0x0
  44a364:	b.le	44a4bc <_obstack_memory_used@@Base+0x82cc>
  44a368:	add	x22, x20, #0xd8
  44a36c:	stp	x21, x25, [sp, #208]
  44a370:	mov	x21, x4
  44a374:	str	w24, [sp, #240]
  44a378:	mov	x24, x27
  44a37c:	mov	x23, #0x0                   	// #0
  44a380:	ldr	x0, [x19, #24]
  44a384:	ldr	x25, [x20]
  44a388:	ldr	x28, [x0, x23, lsl #3]
  44a38c:	add	x0, x25, x28, lsl #4
  44a390:	ldrb	w1, [x0, #10]
  44a394:	tbz	w1, #4, 44a4a4 <_obstack_memory_used@@Base+0x82b4>
  44a398:	ldr	w27, [x0, #8]
  44a39c:	tst	w27, #0x3ff00
  44a3a0:	b.eq	44a3d8 <_obstack_memory_used@@Base+0x81e8>  // b.none
  44a3a4:	ldr	w2, [sp, #512]
  44a3a8:	mov	x1, x21
  44a3ac:	add	x0, sp, #0x160
  44a3b0:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  44a3b4:	ubfx	x2, x27, #8, #10
  44a3b8:	tbz	w27, #10, 44a73c <_obstack_memory_used@@Base+0x854c>
  44a3bc:	tbz	w0, #0, 44a4a4 <_obstack_memory_used@@Base+0x82b4>
  44a3c0:	tbnz	w2, #3, 44a4a4 <_obstack_memory_used@@Base+0x82b4>
  44a3c4:	tbz	w2, #5, 44a3cc <_obstack_memory_used@@Base+0x81dc>
  44a3c8:	tbz	w0, #1, 44a4a4 <_obstack_memory_used@@Base+0x82b4>
  44a3cc:	tbz	w2, #7, 44a3d8 <_obstack_memory_used@@Base+0x81e8>
  44a3d0:	tbz	w0, #3, 44a4a4 <_obstack_memory_used@@Base+0x82b4>
  44a3d4:	nop
  44a3d8:	mov	x1, x22
  44a3dc:	mov	x4, x21
  44a3e0:	mov	x0, x25
  44a3e4:	add	x3, sp, #0x160
  44a3e8:	mov	x2, x28
  44a3ec:	bl	4481e0 <_obstack_memory_used@@Base+0x5ff0>
  44a3f0:	mov	w1, w0
  44a3f4:	cbz	w0, 44a49c <_obstack_memory_used@@Base+0x82ac>
  44a3f8:	ldr	w2, [sp, #576]
  44a3fc:	add	x0, sp, #0x160
  44a400:	ldr	x27, [sp, #424]
  44a404:	cmp	w2, w1
  44a408:	add	x27, x27, w1, sxtw
  44a40c:	csel	w1, w2, w1, ge  // ge = tcont
  44a410:	str	w1, [sp, #576]
  44a414:	mov	x1, x27
  44a418:	bl	443620 <_obstack_memory_used@@Base+0x1430>
  44a41c:	str	w0, [sp, #284]
  44a420:	cbnz	w0, 44a808 <_obstack_memory_used@@Base+0x8618>
  44a424:	ldr	x0, [x20, #24]
  44a428:	ldr	x21, [sp, #536]
  44a42c:	ldr	x0, [x0, x28, lsl #3]
  44a430:	ldr	x1, [x21, x27, lsl #3]
  44a434:	ldr	x3, [x20, #48]
  44a438:	add	x0, x0, x0, lsl #1
  44a43c:	add	x3, x3, x0, lsl #3
  44a440:	cbz	x1, 44a748 <_obstack_memory_used@@Base+0x8558>
  44a444:	ldr	x1, [x1, #80]
  44a448:	mov	x2, x3
  44a44c:	add	x0, sp, #0x128
  44a450:	bl	445028 <_obstack_memory_used@@Base+0x2e38>
  44a454:	str	w0, [sp, #284]
  44a458:	cbnz	w0, 44a808 <_obstack_memory_used@@Base+0x8618>
  44a45c:	ldr	w2, [sp, #512]
  44a460:	sub	x1, x27, #0x1
  44a464:	add	x0, sp, #0x160
  44a468:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  44a46c:	mov	w3, w0
  44a470:	ldr	x28, [sp, #536]
  44a474:	mov	x1, x20
  44a478:	add	x2, sp, #0x128
  44a47c:	add	x0, sp, #0x11c
  44a480:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  44a484:	str	x0, [x28, x27, lsl #3]
  44a488:	ldr	x0, [sp, #312]
  44a48c:	bl	4047b0 <free@plt>
  44a490:	ldr	x1, [sp, #536]
  44a494:	ldr	x0, [x1, x27, lsl #3]
  44a498:	cbz	x0, 44a790 <_obstack_memory_used@@Base+0x85a0>
  44a49c:	ldr	x24, [x19, #16]
  44a4a0:	ldr	x21, [sp, #424]
  44a4a4:	add	x23, x23, #0x1
  44a4a8:	cmp	x23, x24
  44a4ac:	b.lt	44a380 <_obstack_memory_used@@Base+0x8190>  // b.tstop
  44a4b0:	mov	x4, x21
  44a4b4:	ldr	w24, [sp, #240]
  44a4b8:	ldp	x21, x25, [sp, #208]
  44a4bc:	str	wzr, [sp, #280]
  44a4c0:	b	44a290 <_obstack_memory_used@@Base+0x80a0>
  44a4c4:	ldr	w1, [sp, #280]
  44a4c8:	ldr	x0, [sp, #536]
  44a4cc:	cbnz	w1, 44ad5c <_obstack_memory_used@@Base+0x8b6c>
  44a4d0:	cbz	x0, 44a51c <_obstack_memory_used@@Base+0x832c>
  44a4d4:	ldr	w1, [sp, #200]
  44a4d8:	ldr	w2, [sp, #96]
  44a4dc:	eor	w1, w1, #0x1
  44a4e0:	tst	w1, w2
  44a4e4:	b.ne	44a51c <_obstack_memory_used@@Base+0x832c>  // b.any
  44a4e8:	mov	w1, #0x0                   	// #0
  44a4ec:	ldr	x3, [sp, #424]
  44a4f0:	ldr	x2, [sp, #544]
  44a4f4:	b	44a504 <_obstack_memory_used@@Base+0x8314>
  44a4f8:	ldr	x4, [x0, x3, lsl #3]
  44a4fc:	mov	w1, #0x1                   	// #1
  44a500:	cbnz	x4, 44a6ec <_obstack_memory_used@@Base+0x84fc>
  44a504:	mov	x4, x3
  44a508:	add	x3, x3, #0x1
  44a50c:	cmp	x2, x3
  44a510:	b.ge	44a4f8 <_obstack_memory_used@@Base+0x8308>  // b.tcont
  44a514:	cbz	w1, 44a51c <_obstack_memory_used@@Base+0x832c>
  44a518:	str	x4, [sp, #424]
  44a51c:	ldr	x1, [sp, #136]
  44a520:	cbz	x1, 44a530 <_obstack_memory_used@@Base+0x8340>
  44a524:	ldr	x0, [x1]
  44a528:	add	x25, x0, x25
  44a52c:	str	x25, [x1]
  44a530:	cmn	x26, #0x1
  44a534:	b.eq	44a66c <_obstack_memory_used@@Base+0x847c>  // b.none
  44a538:	cmn	x26, #0x2
  44a53c:	b.eq	44ac8c <_obstack_memory_used@@Base+0x8a9c>  // b.none
  44a540:	ldr	x0, [sp, #104]
  44a544:	str	x26, [sp, #520]
  44a548:	ldrb	w0, [x0, #56]
  44a54c:	tbnz	w0, #4, 44a898 <_obstack_memory_used@@Base+0x86a8>
  44a550:	ldr	x0, [sp, #120]
  44a554:	cmp	x0, #0x1
  44a558:	b.ls	44a8ac <_obstack_memory_used@@Base+0x86bc>  // b.plast
  44a55c:	ldr	x19, [sp, #536]
  44a560:	mov	x3, x26
  44a564:	add	x0, sp, #0x160
  44a568:	ldr	x1, [x19, x26, lsl #3]
  44a56c:	add	x2, x1, #0x18
  44a570:	ldr	x1, [x1, #16]
  44a574:	bl	445da0 <_obstack_memory_used@@Base+0x3bb0>
  44a578:	mov	x20, x0
  44a57c:	ldr	x1, [sp, #184]
  44a580:	ldrb	w1, [x1, #176]
  44a584:	str	x0, [sp, #528]
  44a588:	tbnz	w1, #0, 44a59c <_obstack_memory_used@@Base+0x83ac>
  44a58c:	ldr	x0, [sp, #184]
  44a590:	ldr	x0, [x0, #152]
  44a594:	cbz	x0, 44a8a4 <_obstack_memory_used@@Base+0x86b4>
  44a598:	ldr	x20, [sp, #528]
  44a59c:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  44a5a0:	cmp	x26, x0
  44a5a4:	ldr	x22, [sp, #504]
  44a5a8:	b.hi	44ac68 <_obstack_memory_used@@Base+0x8a78>  // b.pmore
  44a5ac:	add	x21, x26, #0x1
  44a5b0:	lsl	x19, x21, #3
  44a5b4:	mov	x0, x19
  44a5b8:	bl	404310 <malloc@plt>
  44a5bc:	mov	x24, x0
  44a5c0:	cbz	x0, 44ac8c <_obstack_memory_used@@Base+0x8a9c>
  44a5c4:	ldr	x0, [x22, #152]
  44a5c8:	cbz	x0, 44a934 <_obstack_memory_used@@Base+0x8744>
  44a5cc:	mov	x0, x19
  44a5d0:	bl	404310 <malloc@plt>
  44a5d4:	mov	x25, x0
  44a5d8:	mov	x23, x0
  44a5dc:	cbz	x0, 44ad88 <_obstack_memory_used@@Base+0x8b98>
  44a5e0:	add	x28, sp, #0x128
  44a5e4:	lsl	x2, x21, #3
  44a5e8:	mov	w1, #0x0                   	// #0
  44a5ec:	mov	x0, x25
  44a5f0:	bl	404410 <memset@plt>
  44a5f4:	stp	x24, x25, [sp, #296]
  44a5f8:	mov	x1, x28
  44a5fc:	add	x0, sp, #0x160
  44a600:	stp	x20, x26, [sp, #312]
  44a604:	stp	xzr, xzr, [x28, #32]
  44a608:	str	xzr, [x28, #48]
  44a60c:	bl	4499c0 <_obstack_memory_used@@Base+0x77d0>
  44a610:	mov	w19, w0
  44a614:	ldr	x0, [sp, #344]
  44a618:	bl	4047b0 <free@plt>
  44a61c:	cbnz	w19, 44a904 <_obstack_memory_used@@Base+0x8714>
  44a620:	ldr	x0, [x24]
  44a624:	cbnz	x0, 44a8dc <_obstack_memory_used@@Base+0x86ec>
  44a628:	ldr	x0, [x25]
  44a62c:	cbnz	x0, 44a8dc <_obstack_memory_used@@Base+0x86ec>
  44a630:	sub	x26, x26, #0x1
  44a634:	cmn	x26, #0x1
  44a638:	b.eq	44a65c <_obstack_memory_used@@Base+0x846c>  // b.none
  44a63c:	ldr	x1, [sp, #536]
  44a640:	ldr	x2, [x1, x26, lsl #3]
  44a644:	cbz	x2, 44a650 <_obstack_memory_used@@Base+0x8460>
  44a648:	ldrb	w0, [x2, #104]
  44a64c:	tbnz	w0, #4, 44abbc <_obstack_memory_used@@Base+0x89cc>
  44a650:	sub	x26, x26, #0x1
  44a654:	cmn	x26, #0x1
  44a658:	b.ne	44a640 <_obstack_memory_used@@Base+0x8450>  // b.any
  44a65c:	mov	x0, x24
  44a660:	bl	4047b0 <free@plt>
  44a664:	mov	x0, x25
  44a668:	bl	4047b0 <free@plt>
  44a66c:	add	x0, sp, #0x160
  44a670:	bl	443e98 <_obstack_memory_used@@Base+0x1ca8>
  44a674:	ldr	x20, [sp, #288]
  44a678:	ldr	w0, [sp, #204]
  44a67c:	add	x20, x20, w0, sxtw
  44a680:	str	x20, [sp, #288]
  44a684:	ldr	x0, [sp, #168]
  44a688:	cmp	x20, x0
  44a68c:	ldr	x0, [sp, #128]
  44a690:	ccmp	x20, x0, #0x0, ge  // ge = tcont
  44a694:	b.gt	44a140 <_obstack_memory_used@@Base+0x7f50>
  44a698:	ldr	w0, [sp, #164]
  44a69c:	cmp	w0, #0x7
  44a6a0:	b.ne	44a010 <_obstack_memory_used@@Base+0x7e20>  // b.any
  44a6a4:	ldr	x0, [sp, #128]
  44a6a8:	mov	w2, #0x0                   	// #0
  44a6ac:	cmp	x0, x20
  44a6b0:	mov	x0, x20
  44a6b4:	b.le	44a18c <_obstack_memory_used@@Base+0x7f9c>
  44a6b8:	ldr	x5, [sp, #128]
  44a6bc:	ldr	x4, [sp, #176]
  44a6c0:	ldr	x27, [sp, #192]
  44a6c4:	ldr	x3, [sp, #232]
  44a6c8:	ldrb	w1, [x4, x0]
  44a6cc:	ldrb	w1, [x3, x1]
  44a6d0:	ldrb	w1, [x27, x1]
  44a6d4:	cbnz	w1, 44ac50 <_obstack_memory_used@@Base+0x8a60>
  44a6d8:	add	x0, x0, #0x1
  44a6dc:	mov	w2, #0x1                   	// #1
  44a6e0:	cmp	x0, x5
  44a6e4:	b.ne	44a6c8 <_obstack_memory_used@@Base+0x84d8>  // b.any
  44a6e8:	b	44a10c <_obstack_memory_used@@Base+0x7f1c>
  44a6ec:	add	x1, sp, #0x160
  44a6f0:	add	x0, sp, #0x118
  44a6f4:	mov	x2, #0x0                   	// #0
  44a6f8:	str	x3, [sp, #424]
  44a6fc:	bl	449838 <_obstack_memory_used@@Base+0x7648>
  44a700:	ldr	w1, [sp, #280]
  44a704:	cbnz	w1, 44a714 <_obstack_memory_used@@Base+0x8524>
  44a708:	cbnz	x0, 44ac60 <_obstack_memory_used@@Base+0x8a70>
  44a70c:	ldr	x0, [sp, #536]
  44a710:	b	44a4e8 <_obstack_memory_used@@Base+0x82f8>
  44a714:	mov	x20, x0
  44a718:	cbnz	x0, 44a2cc <_obstack_memory_used@@Base+0x80dc>
  44a71c:	b	44a51c <_obstack_memory_used@@Base+0x832c>
  44a720:	ldr	x1, [x20, #16]
  44a724:	mov	x3, x22
  44a728:	add	x2, x20, #0x18
  44a72c:	add	x0, sp, #0x160
  44a730:	bl	445da0 <_obstack_memory_used@@Base+0x3bb0>
  44a734:	cbz	x0, 44a304 <_obstack_memory_used@@Base+0x8114>
  44a738:	b	44a2ec <_obstack_memory_used@@Base+0x80fc>
  44a73c:	tbz	w2, #3, 44a3c4 <_obstack_memory_used@@Base+0x81d4>
  44a740:	tbz	w0, #0, 44a3c4 <_obstack_memory_used@@Base+0x81d4>
  44a744:	b	44a4a4 <_obstack_memory_used@@Base+0x82b4>
  44a748:	add	x0, sp, #0x200
  44a74c:	ldr	w2, [sp, #512]
  44a750:	ldp	x6, x7, [x3]
  44a754:	sub	x1, x27, #0x1
  44a758:	stp	x6, x7, [x0, #-216]
  44a75c:	add	x0, sp, #0x160
  44a760:	ldr	x3, [x3, #16]
  44a764:	str	x3, [sp, #312]
  44a768:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  44a76c:	mov	w3, w0
  44a770:	mov	x1, x20
  44a774:	add	x2, sp, #0x128
  44a778:	add	x0, sp, #0x11c
  44a77c:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  44a780:	ldr	x1, [sp, #536]
  44a784:	str	x0, [x21, x27, lsl #3]
  44a788:	ldr	x0, [x1, x27, lsl #3]
  44a78c:	cbnz	x0, 44a49c <_obstack_memory_used@@Base+0x82ac>
  44a790:	ldr	w0, [sp, #284]
  44a794:	cbz	w0, 44a49c <_obstack_memory_used@@Base+0x82ac>
  44a798:	ldr	w24, [sp, #240]
  44a79c:	ldp	x21, x25, [sp, #208]
  44a7a0:	b	44a814 <_obstack_memory_used@@Base+0x8624>
  44a7a4:	ldr	x22, [x19, #96]
  44a7a8:	cbz	x22, 44a824 <_obstack_memory_used@@Base+0x8634>
  44a7ac:	ldr	w2, [sp, #512]
  44a7b0:	add	x0, sp, #0x160
  44a7b4:	ldr	x1, [sp, #424]
  44a7b8:	sub	x1, x1, #0x1
  44a7bc:	bl	445b78 <_obstack_memory_used@@Base+0x3988>
  44a7c0:	and	x1, x20, #0xff
  44a7c4:	tbz	w0, #0, 44a890 <_obstack_memory_used@@Base+0x86a0>
  44a7c8:	add	x1, x1, #0x100
  44a7cc:	ldr	x20, [x22, x1, lsl #3]
  44a7d0:	b	44a2ac <_obstack_memory_used@@Base+0x80bc>
  44a7d4:	ldr	x1, [sp, #440]
  44a7d8:	cmp	x0, x1
  44a7dc:	b.ge	44a284 <_obstack_memory_used@@Base+0x8094>  // b.tcont
  44a7e0:	b	44a330 <_obstack_memory_used@@Base+0x8140>
  44a7e4:	mov	w0, #0x1                   	// #1
  44a7e8:	str	w0, [sp, #116]
  44a7ec:	ldp	x29, x30, [sp]
  44a7f0:	ldr	w0, [sp, #116]
  44a7f4:	ldp	x19, x20, [sp, #16]
  44a7f8:	ldp	x21, x22, [sp, #32]
  44a7fc:	ldp	x27, x28, [sp, #80]
  44a800:	add	sp, sp, #0x260
  44a804:	ret
  44a808:	ldp	x21, x25, [sp, #208]
  44a80c:	ldr	w24, [sp, #240]
  44a810:	ldr	x1, [sp, #536]
  44a814:	str	w0, [sp, #280]
  44a818:	cbz	x1, 44a848 <_obstack_memory_used@@Base+0x8658>
  44a81c:	mov	x20, #0x0                   	// #0
  44a820:	b	44a2b4 <_obstack_memory_used@@Base+0x80c4>
  44a824:	ldr	x0, [sp, #504]
  44a828:	mov	x1, x19
  44a82c:	bl	4467f8 <_obstack_memory_used@@Base+0x4608>
  44a830:	tst	w0, #0xff
  44a834:	b.ne	44a2a0 <_obstack_memory_used@@Base+0x80b0>  // b.any
  44a838:	ldr	x0, [sp, #536]
  44a83c:	mov	w1, #0xc                   	// #12
  44a840:	str	w1, [sp, #280]
  44a844:	cbnz	x0, 44a81c <_obstack_memory_used@@Base+0x862c>
  44a848:	ldr	x28, [sp, #184]
  44a84c:	mov	x0, #0x0                   	// #0
  44a850:	ldp	x23, x24, [sp, #48]
  44a854:	mov	w1, #0xc                   	// #12
  44a858:	ldp	x25, x26, [sp, #64]
  44a85c:	str	w1, [sp, #116]
  44a860:	bl	4047b0 <free@plt>
  44a864:	ldr	x0, [x28, #152]
  44a868:	cbnz	x0, 44a164 <_obstack_memory_used@@Base+0x7f74>
  44a86c:	add	x0, sp, #0x160
  44a870:	bl	443cd0 <_obstack_memory_used@@Base+0x1ae0>
  44a874:	ldr	w0, [sp, #116]
  44a878:	ldp	x29, x30, [sp]
  44a87c:	ldp	x19, x20, [sp, #16]
  44a880:	ldp	x21, x22, [sp, #32]
  44a884:	ldp	x27, x28, [sp, #80]
  44a888:	add	sp, sp, #0x260
  44a88c:	ret
  44a890:	ldr	x20, [x22, x20, lsl #3]
  44a894:	b	44a2ac <_obstack_memory_used@@Base+0x80bc>
  44a898:	ldr	x0, [sp, #184]
  44a89c:	ldr	x0, [x0, #152]
  44a8a0:	cbnz	x0, 44a8b8 <_obstack_memory_used@@Base+0x86c8>
  44a8a4:	ldr	x28, [sp, #184]
  44a8a8:	b	44a988 <_obstack_memory_used@@Base+0x8798>
  44a8ac:	ldr	x28, [sp, #184]
  44a8b0:	ldr	x0, [x28, #152]
  44a8b4:	cbz	x0, 44a988 <_obstack_memory_used@@Base+0x8798>
  44a8b8:	ldr	x19, [sp, #536]
  44a8bc:	mov	x3, x26
  44a8c0:	add	x0, sp, #0x160
  44a8c4:	ldr	x1, [x19, x26, lsl #3]
  44a8c8:	add	x2, x1, #0x18
  44a8cc:	ldr	x1, [x1, #16]
  44a8d0:	bl	445da0 <_obstack_memory_used@@Base+0x3bb0>
  44a8d4:	str	x0, [sp, #528]
  44a8d8:	b	44a598 <_obstack_memory_used@@Base+0x83a8>
  44a8dc:	mov	x3, x21
  44a8e0:	mov	x2, x25
  44a8e4:	mov	x1, x24
  44a8e8:	mov	x0, x22
  44a8ec:	bl	4456b8 <_obstack_memory_used@@Base+0x34c8>
  44a8f0:	mov	w19, w0
  44a8f4:	mov	x0, x25
  44a8f8:	bl	4047b0 <free@plt>
  44a8fc:	cbz	w19, 44a970 <_obstack_memory_used@@Base+0x8780>
  44a900:	mov	x23, #0x0                   	// #0
  44a904:	mov	x0, x24
  44a908:	bl	4047b0 <free@plt>
  44a90c:	mov	x0, x23
  44a910:	bl	4047b0 <free@plt>
  44a914:	cmp	w19, #0x1
  44a918:	b.eq	44a66c <_obstack_memory_used@@Base+0x847c>  // b.none
  44a91c:	str	w19, [sp, #116]
  44a920:	ldp	x23, x24, [sp, #48]
  44a924:	ldp	x25, x26, [sp, #64]
  44a928:	ldr	x28, [sp, #184]
  44a92c:	ldr	x0, [sp, #536]
  44a930:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44a934:	add	x2, sp, #0x200
  44a938:	stp	x24, xzr, [sp, #296]
  44a93c:	add	x28, sp, #0x128
  44a940:	stp	x20, x26, [sp, #312]
  44a944:	mov	x1, x28
  44a948:	add	x0, sp, #0x160
  44a94c:	stp	xzr, xzr, [x2, #-184]
  44a950:	str	xzr, [sp, #344]
  44a954:	bl	4499c0 <_obstack_memory_used@@Base+0x77d0>
  44a958:	mov	w19, w0
  44a95c:	ldr	x0, [sp, #344]
  44a960:	bl	4047b0 <free@plt>
  44a964:	cbnz	w19, 44a900 <_obstack_memory_used@@Base+0x8710>
  44a968:	ldr	x0, [x24]
  44a96c:	cbz	x0, 44aca8 <_obstack_memory_used@@Base+0x8ab8>
  44a970:	ldr	x0, [sp, #536]
  44a974:	ldr	x28, [sp, #184]
  44a978:	bl	4047b0 <free@plt>
  44a97c:	str	x26, [sp, #520]
  44a980:	str	x20, [sp, #528]
  44a984:	str	x24, [sp, #536]
  44a988:	ldr	x0, [sp, #120]
  44a98c:	cbz	x0, 44a14c <_obstack_memory_used@@Base+0x7f5c>
  44a990:	ldr	x1, [sp, #120]
  44a994:	ldr	x2, [sp, #256]
  44a998:	cmp	x1, #0x1
  44a99c:	add	x0, x2, #0x10
  44a9a0:	add	x2, x2, x1, lsl #4
  44a9a4:	mov	x1, #0xffffffffffffffff    	// #-1
  44a9a8:	b.ls	44ae34 <_obstack_memory_used@@Base+0x8c44>  // b.plast
  44a9ac:	nop
  44a9b0:	str	x1, [x0, #8]
  44a9b4:	str	x1, [x0], #16
  44a9b8:	cmp	x2, x0
  44a9bc:	b.ne	44a9b0 <_obstack_memory_used@@Base+0x87c0>  // b.any
  44a9c0:	ldr	x0, [sp, #104]
  44a9c4:	ldr	x2, [sp, #256]
  44a9c8:	ldrb	w0, [x0, #56]
  44a9cc:	ldr	x1, [sp, #520]
  44a9d0:	stp	xzr, x1, [x2]
  44a9d4:	tst	x0, #0x10
  44a9d8:	ldr	x0, [sp, #120]
  44a9dc:	mov	x1, #0x0                   	// #0
  44a9e0:	ccmp	x0, #0x1, #0x4, eq  // eq = none
  44a9e4:	b.ne	44ade4 <_obstack_memory_used@@Base+0x8bf4>  // b.any
  44a9e8:	ldrb	w5, [sp, #492]
  44a9ec:	mov	x2, #0x0                   	// #0
  44a9f0:	ldr	x9, [sp, #120]
  44a9f4:	ldr	x0, [sp, #256]
  44a9f8:	ldr	x4, [sp, #288]
  44a9fc:	ldr	x8, [sp, #376]
  44aa00:	ldp	x6, x7, [sp, #400]
  44aa04:	b	44aa0c <_obstack_memory_used@@Base+0x881c>
  44aa08:	ldr	x1, [x0]
  44aa0c:	cmn	x1, #0x1
  44aa10:	b.eq	44aa28 <_obstack_memory_used@@Base+0x8838>  // b.none
  44aa14:	ldr	x3, [x0, #8]
  44aa18:	cbnz	w5, 44adc4 <_obstack_memory_used@@Base+0x8bd4>
  44aa1c:	add	x1, x4, x1
  44aa20:	add	x3, x4, x3
  44aa24:	stp	x1, x3, [x0]
  44aa28:	add	x2, x2, #0x1
  44aa2c:	add	x0, x0, #0x10
  44aa30:	cmp	x2, x9
  44aa34:	b.ne	44aa08 <_obstack_memory_used@@Base+0x8818>  // b.any
  44aa38:	ldr	x0, [sp, #224]
  44aa3c:	cmp	x0, #0x0
  44aa40:	b.le	44aa70 <_obstack_memory_used@@Base+0x8880>
  44aa44:	ldr	x0, [sp, #120]
  44aa48:	ldr	x1, [sp, #224]
  44aa4c:	ldr	x3, [sp, #256]
  44aa50:	add	x2, x1, x0
  44aa54:	mov	x1, #0xffffffffffffffff    	// #-1
  44aa58:	add	x0, x3, x0, lsl #4
  44aa5c:	add	x2, x3, x2, lsl #4
  44aa60:	stp	x1, x1, [x0]
  44aa64:	add	x0, x0, #0x10
  44aa68:	cmp	x2, x0
  44aa6c:	b.ne	44aa60 <_obstack_memory_used@@Base+0x8870>  // b.any
  44aa70:	ldr	x4, [x28, #224]
  44aa74:	ldr	x0, [sp, #536]
  44aa78:	cbz	x4, 44aad0 <_obstack_memory_used@@Base+0x88e0>
  44aa7c:	ldr	x1, [sp, #120]
  44aa80:	cmp	x1, #0x1
  44aa84:	b.ls	44aad0 <_obstack_memory_used@@Base+0x88e0>  // b.plast
  44aa88:	ldr	x6, [sp, #256]
  44aa8c:	sub	x5, x1, #0x1
  44aa90:	mov	x1, #0x0                   	// #0
  44aa94:	add	x3, x6, #0x10
  44aa98:	ldr	x2, [x4, x1, lsl #3]
  44aa9c:	cmp	x2, x1
  44aaa0:	b.eq	44aac0 <_obstack_memory_used@@Base+0x88d0>  // b.none
  44aaa4:	add	x2, x6, x2, lsl #4
  44aaa8:	ldr	x2, [x2, #16]
  44aaac:	str	x2, [x3]
  44aab0:	ldr	x2, [x4, x1, lsl #3]
  44aab4:	add	x2, x6, x2, lsl #4
  44aab8:	ldr	x2, [x2, #24]
  44aabc:	str	x2, [x3, #8]
  44aac0:	add	x1, x1, #0x1
  44aac4:	add	x3, x3, #0x10
  44aac8:	cmp	x5, x1
  44aacc:	b.ne	44aa98 <_obstack_memory_used@@Base+0x88a8>  // b.any
  44aad0:	ldp	x23, x24, [sp, #48]
  44aad4:	ldp	x25, x26, [sp, #64]
  44aad8:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44aadc:	ldrb	w0, [x19, #104]
  44aae0:	ldr	w24, [sp, #264]
  44aae4:	b	44a244 <_obstack_memory_used@@Base+0x8054>
  44aae8:	ldr	x0, [sp, #168]
  44aaec:	cmp	x0, x20
  44aaf0:	b.gt	44a140 <_obstack_memory_used@@Base+0x7f50>
  44aaf4:	ldp	x5, x6, [sp, #168]
  44aaf8:	mov	x1, x20
  44aafc:	ldr	x4, [sp, #152]
  44ab00:	mov	w0, #0x0                   	// #0
  44ab04:	ldr	x27, [sp, #192]
  44ab08:	ldr	x3, [sp, #232]
  44ab0c:	nop
  44ab10:	cmp	x1, x4
  44ab14:	mov	x2, #0x0                   	// #0
  44ab18:	b.ge	44ab20 <_obstack_memory_used@@Base+0x8930>  // b.tcont
  44ab1c:	ldrb	w2, [x6, x1]
  44ab20:	cbz	x3, 44ab28 <_obstack_memory_used@@Base+0x8938>
  44ab24:	ldrb	w2, [x3, x2]
  44ab28:	ldrb	w2, [x27, x2]
  44ab2c:	cbnz	w2, 44abdc <_obstack_memory_used@@Base+0x89ec>
  44ab30:	sub	x1, x1, #0x1
  44ab34:	mov	w0, #0x1                   	// #1
  44ab38:	cmp	x1, x5
  44ab3c:	b.ge	44ab10 <_obstack_memory_used@@Base+0x8920>  // b.tcont
  44ab40:	str	w0, [sp, #116]
  44ab44:	str	x1, [sp, #288]
  44ab48:	ldp	x23, x24, [sp, #48]
  44ab4c:	ldp	x25, x26, [sp, #64]
  44ab50:	ldr	x28, [sp, #184]
  44ab54:	ldr	x0, [sp, #536]
  44ab58:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44ab5c:	ldrb	w0, [x28, #176]
  44ab60:	tbnz	w0, #1, 449ef8 <_obstack_memory_used@@Base+0x7d08>
  44ab64:	str	xzr, [sp, #536]
  44ab68:	b	449f1c <_obstack_memory_used@@Base+0x7d2c>
  44ab6c:	mov	w0, #0xc                   	// #12
  44ab70:	str	w0, [sp, #116]
  44ab74:	ldr	x0, [sp, #536]
  44ab78:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44ab7c:	ldr	x19, [x20, #80]
  44ab80:	cbnz	x19, 44a228 <_obstack_memory_used@@Base+0x8038>
  44ab84:	ldr	w0, [sp, #280]
  44ab88:	str	w0, [sp, #116]
  44ab8c:	cmp	w0, #0xc
  44ab90:	ldr	x28, [sp, #184]
  44ab94:	b.eq	44a14c <_obstack_memory_used@@Base+0x7f5c>  // b.none
  44ab98:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44ab9c:	add	x3, x3, #0x4a0
  44aba0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44aba4:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44aba8:	add	x3, x3, #0x30
  44abac:	add	x1, x1, #0x288
  44abb0:	add	x0, x0, #0x308
  44abb4:	mov	w2, #0x435                 	// #1077
  44abb8:	bl	404ac0 <__assert_fail@plt>
  44abbc:	ldr	x1, [x2, #16]
  44abc0:	mov	x3, x26
  44abc4:	add	x0, sp, #0x160
  44abc8:	add	x2, x2, #0x18
  44abcc:	add	x21, x26, #0x1
  44abd0:	bl	445da0 <_obstack_memory_used@@Base+0x3bb0>
  44abd4:	mov	x20, x0
  44abd8:	b	44a5e4 <_obstack_memory_used@@Base+0x83f4>
  44abdc:	cbz	w0, 44a198 <_obstack_memory_used@@Base+0x7fa8>
  44abe0:	mov	x20, x1
  44abe4:	str	x1, [sp, #288]
  44abe8:	b	44a198 <_obstack_memory_used@@Base+0x7fa8>
  44abec:	ldp	x23, x24, [sp, #48]
  44abf0:	ldp	x25, x26, [sp, #64]
  44abf4:	ldr	x28, [sp, #184]
  44abf8:	ldr	x0, [sp, #536]
  44abfc:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44ac00:	cmp	w0, #0xc
  44ac04:	ldr	x28, [sp, #184]
  44ac08:	b.eq	44a148 <_obstack_memory_used@@Base+0x7f58>  // b.none
  44ac0c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44ac10:	add	x3, x3, #0x4a0
  44ac14:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44ac18:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44ac1c:	add	x3, x3, #0x30
  44ac20:	add	x1, x1, #0x288
  44ac24:	add	x0, x0, #0x308
  44ac28:	mov	w2, #0x46c                 	// #1132
  44ac2c:	bl	404ac0 <__assert_fail@plt>
  44ac30:	ldrsb	w0, [x19, #104]
  44ac34:	tbnz	w0, #31, 44acd0 <_obstack_memory_used@@Base+0x8ae0>
  44ac38:	mov	x0, #0x1                   	// #1
  44ac3c:	str	x0, [sp, #96]
  44ac40:	ldr	w0, [sp, #160]
  44ac44:	mov	x26, x25
  44ac48:	cbnz	w0, 44a250 <_obstack_memory_used@@Base+0x8060>
  44ac4c:	b	44a530 <_obstack_memory_used@@Base+0x8340>
  44ac50:	cbz	w2, 44a198 <_obstack_memory_used@@Base+0x7fa8>
  44ac54:	mov	x20, x0
  44ac58:	str	x0, [sp, #288]
  44ac5c:	b	44a18c <_obstack_memory_used@@Base+0x7f9c>
  44ac60:	mov	x20, x0
  44ac64:	b	44a2cc <_obstack_memory_used@@Base+0x80dc>
  44ac68:	mov	w1, #0xc                   	// #12
  44ac6c:	mov	x0, x19
  44ac70:	str	w1, [sp, #116]
  44ac74:	ldp	x23, x24, [sp, #48]
  44ac78:	ldp	x25, x26, [sp, #64]
  44ac7c:	ldr	x28, [sp, #184]
  44ac80:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44ac84:	ldr	x19, [x20, #88]
  44ac88:	b	44ab80 <_obstack_memory_used@@Base+0x8990>
  44ac8c:	mov	w0, #0xc                   	// #12
  44ac90:	str	w0, [sp, #116]
  44ac94:	ldp	x23, x24, [sp, #48]
  44ac98:	ldp	x25, x26, [sp, #64]
  44ac9c:	ldr	x28, [sp, #184]
  44aca0:	ldr	x0, [sp, #536]
  44aca4:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44aca8:	mov	x0, x24
  44acac:	bl	4047b0 <free@plt>
  44acb0:	b	44a66c <_obstack_memory_used@@Base+0x847c>
  44acb4:	ldr	x2, [x19, #80]
  44acb8:	mov	w3, w0
  44acbc:	mov	x1, x20
  44acc0:	add	x0, sp, #0x118
  44acc4:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  44acc8:	mov	x19, x0
  44accc:	b	44ab80 <_obstack_memory_used@@Base+0x8990>
  44acd0:	ldr	x1, [x19, #16]
  44acd4:	mov	x3, x25
  44acd8:	add	x2, x19, #0x18
  44acdc:	add	x0, sp, #0x160
  44ace0:	bl	445da0 <_obstack_memory_used@@Base+0x3bb0>
  44ace4:	str	x0, [sp, #96]
  44ace8:	cbz	x0, 44a250 <_obstack_memory_used@@Base+0x8060>
  44acec:	b	44ac38 <_obstack_memory_used@@Base+0x8a48>
  44acf0:	ldr	x0, [sp, #176]
  44acf4:	ldrb	w0, [x0, x20]
  44acf8:	b	44a128 <_obstack_memory_used@@Base+0x7f38>
  44acfc:	add	x20, x19, #0x10
  44ad00:	add	x21, x19, #0x18
  44ad04:	mov	x1, x20
  44ad08:	mov	x2, x21
  44ad0c:	add	x0, sp, #0x160
  44ad10:	mov	x3, #0x0                   	// #0
  44ad14:	bl	445a58 <_obstack_memory_used@@Base+0x3868>
  44ad18:	str	w0, [sp, #280]
  44ad1c:	cbnz	w0, 44adbc <_obstack_memory_used@@Base+0x8bcc>
  44ad20:	ldrb	w0, [x19, #104]
  44ad24:	tbnz	w0, #6, 44ad30 <_obstack_memory_used@@Base+0x8b40>
  44ad28:	mov	w24, #0x0                   	// #0
  44ad2c:	b	44a244 <_obstack_memory_used@@Base+0x8054>
  44ad30:	mov	x2, x21
  44ad34:	mov	x1, x20
  44ad38:	add	x0, sp, #0x160
  44ad3c:	bl	449150 <_obstack_memory_used@@Base+0x6f60>
  44ad40:	str	w0, [sp, #280]
  44ad44:	cbnz	w0, 44adbc <_obstack_memory_used@@Base+0x8bcc>
  44ad48:	ldrb	w0, [x19, #104]
  44ad4c:	mov	w24, #0x0                   	// #0
  44ad50:	b	44a244 <_obstack_memory_used@@Base+0x8054>
  44ad54:	ldr	x19, [x20, #96]
  44ad58:	b	44ab80 <_obstack_memory_used@@Base+0x8990>
  44ad5c:	ldr	x28, [sp, #184]
  44ad60:	b	44a850 <_obstack_memory_used@@Base+0x8660>
  44ad64:	mov	w1, #0xc                   	// #12
  44ad68:	str	w1, [sp, #116]
  44ad6c:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44ad70:	str	w0, [sp, #116]
  44ad74:	ldp	x23, x24, [sp, #48]
  44ad78:	ldp	x25, x26, [sp, #64]
  44ad7c:	ldr	x28, [sp, #184]
  44ad80:	ldr	x0, [sp, #536]
  44ad84:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44ad88:	mov	w1, #0xc                   	// #12
  44ad8c:	mov	x0, x24
  44ad90:	str	w1, [sp, #116]
  44ad94:	ldr	x28, [sp, #184]
  44ad98:	bl	4047b0 <free@plt>
  44ad9c:	ldp	x23, x24, [sp, #48]
  44ada0:	ldp	x25, x26, [sp, #64]
  44ada4:	ldr	x0, [sp, #536]
  44ada8:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44adac:	mov	w0, #0x1                   	// #1
  44adb0:	str	w0, [sp, #116]
  44adb4:	ldr	x0, [sp, #536]
  44adb8:	b	44a860 <_obstack_memory_used@@Base+0x8670>
  44adbc:	sxtw	x26, w0
  44adc0:	b	44a530 <_obstack_memory_used@@Base+0x8340>
  44adc4:	cmp	x6, x1
  44adc8:	b.eq	44ae2c <_obstack_memory_used@@Base+0x8c3c>  // b.none
  44adcc:	ldr	x1, [x8, x1, lsl #3]
  44add0:	str	x1, [x0]
  44add4:	cmp	x6, x3
  44add8:	b.eq	44ae24 <_obstack_memory_used@@Base+0x8c34>  // b.none
  44addc:	ldr	x3, [x8, x3, lsl #3]
  44ade0:	b	44aa1c <_obstack_memory_used@@Base+0x882c>
  44ade4:	ldrb	w0, [x28, #176]
  44ade8:	tbz	w0, #0, 44adfc <_obstack_memory_used@@Base+0x8c0c>
  44adec:	ldr	x0, [x28, #152]
  44adf0:	cmp	x0, #0x0
  44adf4:	cset	w0, gt
  44adf8:	str	w0, [sp, #268]
  44adfc:	ldrb	w4, [sp, #268]
  44ae00:	add	x1, sp, #0x160
  44ae04:	ldr	x0, [sp, #104]
  44ae08:	ldr	x2, [sp, #120]
  44ae0c:	ldr	x19, [sp, #256]
  44ae10:	mov	x3, x19
  44ae14:	bl	4489a8 <_obstack_memory_used@@Base+0x67b8>
  44ae18:	cbnz	w0, 44a148 <_obstack_memory_used@@Base+0x7f58>
  44ae1c:	ldr	x1, [x19]
  44ae20:	b	44a9e8 <_obstack_memory_used@@Base+0x87f8>
  44ae24:	mov	x3, x7
  44ae28:	b	44aa1c <_obstack_memory_used@@Base+0x882c>
  44ae2c:	mov	x1, x7
  44ae30:	b	44add0 <_obstack_memory_used@@Base+0x8be0>
  44ae34:	ldr	x2, [sp, #256]
  44ae38:	mov	x1, #0x0                   	// #0
  44ae3c:	ldr	x0, [sp, #520]
  44ae40:	stp	xzr, x0, [x2]
  44ae44:	b	44a9e8 <_obstack_memory_used@@Base+0x87f8>
  44ae48:	stp	x29, x30, [sp, #-224]!
  44ae4c:	mov	x29, sp
  44ae50:	stp	x19, x20, [sp, #16]
  44ae54:	mov	x20, x0
  44ae58:	mov	x19, x2
  44ae5c:	ldr	x0, [x0, #184]
  44ae60:	stp	x21, x22, [sp, #32]
  44ae64:	lsl	x2, x2, #3
  44ae68:	stp	x23, x24, [sp, #48]
  44ae6c:	mov	x21, x3
  44ae70:	ldr	x22, [x0, x19, lsl #3]
  44ae74:	stp	x27, x28, [sp, #80]
  44ae78:	mov	x27, x1
  44ae7c:	str	x2, [sp, #96]
  44ae80:	add	x1, x0, x2
  44ae84:	str	wzr, [sp, #164]
  44ae88:	ldr	x0, [x3, #8]
  44ae8c:	ldr	x23, [x20, #152]
  44ae90:	cbz	x22, 44b250 <_obstack_memory_used@@Base+0x9060>
  44ae94:	cbnz	x0, 44aecc <_obstack_memory_used@@Base+0x8cdc>
  44ae98:	ldr	x0, [x27]
  44ae9c:	mov	w2, #0x0                   	// #0
  44aea0:	str	xzr, [x0, x19, lsl #3]
  44aea4:	ldr	x0, [x1]
  44aea8:	ldrb	w0, [x0, #104]
  44aeac:	tbnz	w0, #6, 44afec <_obstack_memory_used@@Base+0x8dfc>
  44aeb0:	mov	w0, w2
  44aeb4:	ldp	x19, x20, [sp, #16]
  44aeb8:	ldp	x21, x22, [sp, #32]
  44aebc:	ldp	x23, x24, [sp, #48]
  44aec0:	ldp	x27, x28, [sp, #80]
  44aec4:	ldp	x29, x30, [sp], #224
  44aec8:	ret
  44aecc:	mov	x2, x3
  44aed0:	mov	x1, x23
  44aed4:	add	x0, sp, #0xa8
  44aed8:	str	wzr, [sp, #168]
  44aedc:	bl	445498 <_obstack_memory_used@@Base+0x32a8>
  44aee0:	ldr	w2, [sp, #168]
  44aee4:	cbnz	w2, 44aeb0 <_obstack_memory_used@@Base+0x8cc0>
  44aee8:	stp	x25, x26, [sp, #64]
  44aeec:	mov	x26, x0
  44aef0:	ldr	x24, [x26, #56]!
  44aef4:	cbnz	x24, 44af80 <_obstack_memory_used@@Base+0x8d90>
  44aef8:	ldr	x1, [x21, #8]
  44aefc:	str	x1, [x0, #56]
  44af00:	str	xzr, [x26, #8]
  44af04:	lsl	x0, x1, #3
  44af08:	bl	404310 <malloc@plt>
  44af0c:	str	x0, [x26, #16]
  44af10:	cbz	x0, 44af5c <_obstack_memory_used@@Base+0x8d6c>
  44af14:	ldr	x0, [x21, #8]
  44af18:	str	wzr, [sp, #168]
  44af1c:	cmp	x0, #0x0
  44af20:	b.gt	44af34 <_obstack_memory_used@@Base+0x8d44>
  44af24:	b	44af80 <_obstack_memory_used@@Base+0x8d90>
  44af28:	ldr	x0, [x21, #8]
  44af2c:	cmp	x24, x0
  44af30:	b.ge	44af80 <_obstack_memory_used@@Base+0x8d90>  // b.tcont
  44af34:	ldr	x2, [x21, #16]
  44af38:	mov	x0, x26
  44af3c:	ldr	x1, [x23, #56]
  44af40:	ldr	x3, [x2, x24, lsl #3]
  44af44:	add	x24, x24, #0x1
  44af48:	add	x3, x3, x3, lsl #1
  44af4c:	add	x1, x1, x3, lsl #3
  44af50:	bl	444418 <_obstack_memory_used@@Base+0x2228>
  44af54:	str	w0, [sp, #168]
  44af58:	cbz	w0, 44af28 <_obstack_memory_used@@Base+0x8d38>
  44af5c:	mov	w2, #0xc                   	// #12
  44af60:	mov	w0, w2
  44af64:	ldp	x19, x20, [sp, #16]
  44af68:	ldp	x21, x22, [sp, #32]
  44af6c:	ldp	x23, x24, [sp, #48]
  44af70:	ldp	x25, x26, [sp, #64]
  44af74:	ldp	x27, x28, [sp, #80]
  44af78:	ldp	x29, x30, [sp], #224
  44af7c:	ret
  44af80:	add	x25, x22, #0x8
  44af84:	mov	x2, x26
  44af88:	mov	x1, x25
  44af8c:	mov	x0, x21
  44af90:	bl	444998 <_obstack_memory_used@@Base+0x27a8>
  44af94:	str	w0, [sp, #164]
  44af98:	mov	w2, w0
  44af9c:	cbnz	w0, 44b338 <_obstack_memory_used@@Base+0x9148>
  44afa0:	ldr	x0, [x27, #40]
  44afa4:	cmp	x0, #0x0
  44afa8:	cbnz	x0, 44b358 <_obstack_memory_used@@Base+0x9168>
  44afac:	ldr	x24, [x27]
  44afb0:	mov	x2, x21
  44afb4:	mov	x1, x23
  44afb8:	add	x0, sp, #0xa4
  44afbc:	bl	445498 <_obstack_memory_used@@Base+0x32a8>
  44afc0:	ldr	w2, [sp, #164]
  44afc4:	str	x0, [x24, x19, lsl #3]
  44afc8:	cbnz	w2, 44b338 <_obstack_memory_used@@Base+0x9148>
  44afcc:	ldr	x0, [sp, #96]
  44afd0:	mov	w2, #0x0                   	// #0
  44afd4:	ldr	x1, [x20, #184]
  44afd8:	ldp	x25, x26, [sp, #64]
  44afdc:	add	x1, x1, x0
  44afe0:	ldr	x0, [x1]
  44afe4:	ldrb	w0, [x0, #104]
  44afe8:	tbz	w0, #6, 44aeb0 <_obstack_memory_used@@Base+0x8cc0>
  44afec:	ldr	x4, [x20, #200]
  44aff0:	stp	x25, x26, [sp, #64]
  44aff4:	mov	x26, #0x0                   	// #0
  44aff8:	mov	x2, x4
  44affc:	b	44b020 <_obstack_memory_used@@Base+0x8e30>
  44b000:	asr	x0, x0, #1
  44b004:	ldr	x3, [x20, #216]
  44b008:	add	x1, x0, x0, lsl #2
  44b00c:	add	x1, x3, x1, lsl #3
  44b010:	ldr	x1, [x1, #8]
  44b014:	cmp	x19, x1
  44b018:	b.gt	44b2c4 <_obstack_memory_used@@Base+0x90d4>
  44b01c:	mov	x2, x0
  44b020:	add	x0, x2, x26
  44b024:	cmp	x2, x26
  44b028:	b.gt	44b000 <_obstack_memory_used@@Base+0x8e10>
  44b02c:	cmp	x4, x26
  44b030:	b.le	44b2b8 <_obstack_memory_used@@Base+0x90c8>
  44b034:	add	x1, x26, x26, lsl #2
  44b038:	ldr	x0, [x20, #216]
  44b03c:	lsl	x1, x1, #3
  44b040:	str	x1, [sp, #136]
  44b044:	add	x0, x0, x1
  44b048:	ldr	x0, [x0, #8]
  44b04c:	cmp	x19, x0
  44b050:	b.ne	44b2b8 <_obstack_memory_used@@Base+0x90c8>  // b.any
  44b054:	ldr	x0, [x22, #16]
  44b058:	str	xzr, [sp, #168]
  44b05c:	add	x22, x22, #0x8
  44b060:	cmp	x0, #0x0
  44b064:	ldr	x25, [x20, #152]
  44b068:	b.le	44b2b8 <_obstack_memory_used@@Base+0x90c8>
  44b06c:	add	x0, x27, #0x30
  44b070:	mov	x24, #0x0                   	// #0
  44b074:	str	x0, [sp, #128]
  44b078:	add	x0, sp, #0xc8
  44b07c:	str	x0, [sp, #152]
  44b080:	b	44b09c <_obstack_memory_used@@Base+0x8eac>
  44b084:	cmp	w0, #0x4
  44b088:	b.eq	44b0d0 <_obstack_memory_used@@Base+0x8ee0>  // b.none
  44b08c:	ldr	x0, [x22, #8]
  44b090:	add	x24, x24, #0x1
  44b094:	cmp	x24, x0
  44b098:	b.ge	44b2b0 <_obstack_memory_used@@Base+0x90c0>  // b.tcont
  44b09c:	ldr	x1, [x22, #16]
  44b0a0:	ldr	x0, [x25]
  44b0a4:	ldr	x21, [x1, x24, lsl #3]
  44b0a8:	ldr	x1, [x27, #16]
  44b0ac:	add	x0, x0, x21, lsl #4
  44b0b0:	cmp	x21, x1
  44b0b4:	ldrb	w0, [x0, #8]
  44b0b8:	b.ne	44b084 <_obstack_memory_used@@Base+0x8e94>  // b.any
  44b0bc:	ldr	x1, [x27, #24]
  44b0c0:	cmp	x19, x1
  44b0c4:	b.eq	44b08c <_obstack_memory_used@@Base+0x8e9c>  // b.none
  44b0c8:	cmp	w0, #0x4
  44b0cc:	b.ne	44b08c <_obstack_memory_used@@Base+0x8e9c>  // b.any
  44b0d0:	add	x0, x21, x21, lsl #1
  44b0d4:	lsl	x1, x21, #3
  44b0d8:	ldr	x8, [x20, #216]
  44b0dc:	lsl	x0, x0, #3
  44b0e0:	stp	x1, x0, [sp, #104]
  44b0e4:	add	x0, x27, #0x28
  44b0e8:	mov	x23, x26
  44b0ec:	ldr	x1, [sp, #136]
  44b0f0:	str	x0, [sp, #120]
  44b0f4:	add	x0, x27, #0x20
  44b0f8:	str	x0, [sp, #144]
  44b0fc:	add	x28, x8, x1
  44b100:	b	44b21c <_obstack_memory_used@@Base+0x902c>
  44b104:	ldr	x0, [x25, #24]
  44b108:	ldr	x1, [sp, #104]
  44b10c:	ldr	x2, [x0, x1]
  44b110:	ldr	x0, [x27, #24]
  44b114:	cmp	x6, x0
  44b118:	b.gt	44b208 <_obstack_memory_used@@Base+0x9018>
  44b11c:	ldr	x0, [x27]
  44b120:	ldr	x1, [x0, x6, lsl #3]
  44b124:	cbz	x1, 44b208 <_obstack_memory_used@@Base+0x9018>
  44b128:	ldr	x0, [x1, #16]
  44b12c:	add	x1, x1, #0x18
  44b130:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  44b134:	cbz	x0, 44b208 <_obstack_memory_used@@Base+0x9018>
  44b138:	mov	x5, x2
  44b13c:	mov	x4, x19
  44b140:	ldp	x1, x2, [sp, #120]
  44b144:	mov	x3, x21
  44b148:	mov	x0, x20
  44b14c:	bl	444268 <_obstack_memory_used@@Base+0x2078>
  44b150:	tst	w0, #0xff
  44b154:	b.ne	44b208 <_obstack_memory_used@@Base+0x9018>  // b.any
  44b158:	ldr	x0, [sp, #168]
  44b15c:	cbz	x0, 44b2cc <_obstack_memory_used@@Base+0x90dc>
  44b160:	mov	x1, x23
  44b164:	add	x0, sp, #0xc8
  44b168:	stp	x21, x19, [sp, #184]
  44b16c:	bl	442a28 <_obstack_memory_used@@Base+0x838>
  44b170:	tst	w0, #0xff
  44b174:	b.eq	44b544 <_obstack_memory_used@@Base+0x9354>  // b.none
  44b178:	ldr	x3, [sp, #96]
  44b17c:	add	x1, sp, #0xa8
  44b180:	ldr	x2, [sp, #168]
  44b184:	mov	x0, x20
  44b188:	ldr	x28, [x2, x3]
  44b18c:	bl	4499c0 <_obstack_memory_used@@Base+0x77d0>
  44b190:	mov	w2, w0
  44b194:	cbnz	w0, 44b300 <_obstack_memory_used@@Base+0x9110>
  44b198:	ldr	x1, [x27, #8]
  44b19c:	ldr	x2, [sp, #168]
  44b1a0:	cbz	x1, 44b1bc <_obstack_memory_used@@Base+0x8fcc>
  44b1a4:	add	x3, x19, #0x1
  44b1a8:	mov	x0, x25
  44b1ac:	bl	4456b8 <_obstack_memory_used@@Base+0x34c8>
  44b1b0:	mov	w2, w0
  44b1b4:	cbnz	w0, 44b300 <_obstack_memory_used@@Base+0x9110>
  44b1b8:	ldr	x2, [sp, #168]
  44b1bc:	add	x8, sp, #0xd8
  44b1c0:	ldr	x0, [sp, #96]
  44b1c4:	mov	x1, x8
  44b1c8:	ldr	x6, [sp, #208]
  44b1cc:	str	x28, [x2, x0]
  44b1d0:	mov	x2, x23
  44b1d4:	mov	x0, x6
  44b1d8:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  44b1dc:	subs	x2, x0, #0x1
  44b1e0:	ccmp	x6, x2, #0x4, pl  // pl = nfrst
  44b1e4:	b.le	44b1fc <_obstack_memory_used@@Base+0x900c>
  44b1e8:	sub	x6, x6, #0x1
  44b1ec:	mov	x1, x8
  44b1f0:	add	x0, sp, #0xd0
  44b1f4:	str	x6, [sp, #208]
  44b1f8:	bl	444120 <_obstack_memory_used@@Base+0x1f30>
  44b1fc:	ldr	x0, [x20, #216]
  44b200:	add	x8, x23, x23, lsl #2
  44b204:	add	x28, x0, x8, lsl #3
  44b208:	ldrb	w0, [x28, #32]
  44b20c:	add	x23, x23, #0x1
  44b210:	add	x8, x28, #0x28
  44b214:	cbz	w0, 44b08c <_obstack_memory_used@@Base+0x8e9c>
  44b218:	mov	x28, x8
  44b21c:	ldr	x0, [x28]
  44b220:	cmp	x21, x0
  44b224:	b.ne	44b208 <_obstack_memory_used@@Base+0x9018>  // b.any
  44b228:	ldp	x1, x0, [x28, #16]
  44b22c:	sub	x0, x0, x1
  44b230:	add	x6, x19, x0
  44b234:	cbnz	x0, 44b104 <_obstack_memory_used@@Base+0x8f14>
  44b238:	ldr	x0, [x25, #40]
  44b23c:	ldr	x1, [sp, #112]
  44b240:	add	x0, x0, x1
  44b244:	ldr	x0, [x0, #16]
  44b248:	ldr	x2, [x0]
  44b24c:	b	44b110 <_obstack_memory_used@@Base+0x8f20>
  44b250:	ldr	x20, [x27]
  44b254:	cbnz	x0, 44b27c <_obstack_memory_used@@Base+0x908c>
  44b258:	str	xzr, [x20, x19, lsl #3]
  44b25c:	mov	w2, #0x0                   	// #0
  44b260:	mov	w0, w2
  44b264:	ldp	x19, x20, [sp, #16]
  44b268:	ldp	x21, x22, [sp, #32]
  44b26c:	ldp	x23, x24, [sp, #48]
  44b270:	ldp	x27, x28, [sp, #80]
  44b274:	ldp	x29, x30, [sp], #224
  44b278:	ret
  44b27c:	mov	x2, x3
  44b280:	mov	x1, x23
  44b284:	add	x0, sp, #0xa4
  44b288:	bl	445498 <_obstack_memory_used@@Base+0x32a8>
  44b28c:	ldr	w2, [sp, #164]
  44b290:	str	x0, [x20, x19, lsl #3]
  44b294:	mov	w0, w2
  44b298:	ldp	x19, x20, [sp, #16]
  44b29c:	ldp	x21, x22, [sp, #32]
  44b2a0:	ldp	x23, x24, [sp, #48]
  44b2a4:	ldp	x27, x28, [sp, #80]
  44b2a8:	ldp	x29, x30, [sp], #224
  44b2ac:	ret
  44b2b0:	ldr	x0, [sp, #168]
  44b2b4:	cbnz	x0, 44b570 <_obstack_memory_used@@Base+0x9380>
  44b2b8:	mov	w2, #0x0                   	// #0
  44b2bc:	ldp	x25, x26, [sp, #64]
  44b2c0:	b	44aeb0 <_obstack_memory_used@@Base+0x8cc0>
  44b2c4:	add	x26, x0, #0x1
  44b2c8:	b	44b020 <_obstack_memory_used@@Base+0x8e30>
  44b2cc:	ldp	x0, x1, [x27]
  44b2d0:	stp	x0, x1, [sp, #168]
  44b2d4:	ldp	x2, x3, [x27, #16]
  44b2d8:	stp	x2, x3, [sp, #184]
  44b2dc:	ldp	x2, x3, [x27, #32]
  44b2e0:	stp	x2, x3, [sp, #200]
  44b2e4:	ldp	x1, x0, [sp, #144]
  44b2e8:	ldr	x2, [x27, #48]
  44b2ec:	str	x2, [sp, #216]
  44b2f0:	bl	444fa0 <_obstack_memory_used@@Base+0x2db0>
  44b2f4:	mov	w2, w0
  44b2f8:	cbz	w0, 44b160 <_obstack_memory_used@@Base+0x8f70>
  44b2fc:	nop
  44b300:	ldr	x0, [sp, #168]
  44b304:	cbz	x0, 44b338 <_obstack_memory_used@@Base+0x9148>
  44b308:	ldr	x0, [sp, #216]
  44b30c:	str	w2, [sp, #96]
  44b310:	bl	4047b0 <free@plt>
  44b314:	ldr	w2, [sp, #96]
  44b318:	ldp	x19, x20, [sp, #16]
  44b31c:	mov	w0, w2
  44b320:	ldp	x21, x22, [sp, #32]
  44b324:	ldp	x23, x24, [sp, #48]
  44b328:	ldp	x25, x26, [sp, #64]
  44b32c:	ldp	x27, x28, [sp, #80]
  44b330:	ldp	x29, x30, [sp], #224
  44b334:	ret
  44b338:	mov	w0, w2
  44b33c:	ldp	x19, x20, [sp, #16]
  44b340:	ldp	x21, x22, [sp, #32]
  44b344:	ldp	x23, x24, [sp, #48]
  44b348:	ldp	x25, x26, [sp, #64]
  44b34c:	ldp	x27, x28, [sp, #80]
  44b350:	ldp	x29, x30, [sp], #224
  44b354:	ret
  44b358:	ldr	x0, [x20, #216]
  44b35c:	str	x0, [sp, #104]
  44b360:	b.le	44b438 <_obstack_memory_used@@Base+0x9248>
  44b364:	mov	x28, #0x0                   	// #0
  44b368:	ldr	x0, [x27, #48]
  44b36c:	ldr	x3, [sp, #104]
  44b370:	ldr	x0, [x0, x28, lsl #3]
  44b374:	add	x0, x0, x0, lsl #2
  44b378:	add	x1, x3, x0, lsl #3
  44b37c:	ldr	x2, [x1, #16]
  44b380:	cmp	x19, x2
  44b384:	b.le	44b428 <_obstack_memory_used@@Base+0x9238>
  44b388:	ldr	x2, [x1, #8]
  44b38c:	cmp	x19, x2
  44b390:	b.gt	44b428 <_obstack_memory_used@@Base+0x9238>
  44b394:	ldr	x2, [x3, x0, lsl #3]
  44b398:	ldr	x0, [x23]
  44b39c:	lsl	x2, x2, #4
  44b3a0:	ldr	x1, [x1, #24]
  44b3a4:	ldr	x24, [x0, x2]
  44b3a8:	cmp	x19, x1
  44b3ac:	ldr	x6, [x21, #8]
  44b3b0:	b.eq	44b440 <_obstack_memory_used@@Base+0x9250>  // b.none
  44b3b4:	cmp	x6, #0x0
  44b3b8:	mov	x26, #0x0                   	// #0
  44b3bc:	b.gt	44b3d4 <_obstack_memory_used@@Base+0x91e4>
  44b3c0:	b	44b428 <_obstack_memory_used@@Base+0x9238>
  44b3c4:	add	x26, x26, #0x1
  44b3c8:	cmp	x26, x6
  44b3cc:	b.ge	44b428 <_obstack_memory_used@@Base+0x9238>  // b.tcont
  44b3d0:	ldr	x0, [x23]
  44b3d4:	ldr	x1, [x21, #16]
  44b3d8:	ldr	x1, [x1, x26, lsl #3]
  44b3dc:	lsl	x3, x1, #4
  44b3e0:	add	x2, x0, x3
  44b3e4:	ldrb	w2, [x2, #8]
  44b3e8:	sub	w2, w2, #0x8
  44b3ec:	cmp	w2, #0x1
  44b3f0:	b.hi	44b3c4 <_obstack_memory_used@@Base+0x91d4>  // b.pmore
  44b3f4:	ldr	x0, [x0, x3]
  44b3f8:	cmp	x24, x0
  44b3fc:	b.ne	44b3c4 <_obstack_memory_used@@Base+0x91d4>  // b.any
  44b400:	mov	x2, x21
  44b404:	mov	x3, x25
  44b408:	mov	x0, x23
  44b40c:	bl	4465f0 <_obstack_memory_used@@Base+0x4400>
  44b410:	mov	w2, w0
  44b414:	cbnz	w0, 44b338 <_obstack_memory_used@@Base+0x9148>
  44b418:	ldr	x6, [x21, #8]
  44b41c:	add	x26, x26, #0x1
  44b420:	cmp	x26, x6
  44b424:	b.lt	44b3d0 <_obstack_memory_used@@Base+0x91e0>  // b.tstop
  44b428:	ldr	x0, [x27, #40]
  44b42c:	add	x28, x28, #0x1
  44b430:	cmp	x28, x0
  44b434:	b.lt	44b368 <_obstack_memory_used@@Base+0x9178>  // b.tstop
  44b438:	str	wzr, [sp, #164]
  44b43c:	b	44afac <_obstack_memory_used@@Base+0x8dbc>
  44b440:	cmp	x6, #0x0
  44b444:	b.le	44b428 <_obstack_memory_used@@Base+0x9238>
  44b448:	ldr	x10, [x21, #16]
  44b44c:	mov	x26, #0xffffffffffffffff    	// #-1
  44b450:	mov	x1, x26
  44b454:	mov	x2, x10
  44b458:	add	x11, x10, x6, lsl #3
  44b45c:	b	44b480 <_obstack_memory_used@@Base+0x9290>
  44b460:	cmp	w3, #0x9
  44b464:	b.ne	44b474 <_obstack_memory_used@@Base+0x9284>  // b.any
  44b468:	ldr	x3, [x9]
  44b46c:	cmp	x24, x3
  44b470:	csel	x26, x26, x4, ne  // ne = any
  44b474:	add	x2, x2, #0x8
  44b478:	cmp	x11, x2
  44b47c:	b.eq	44b4b0 <_obstack_memory_used@@Base+0x92c0>  // b.none
  44b480:	ldr	x4, [x2]
  44b484:	lsl	x5, x4, #4
  44b488:	add	x9, x0, x5
  44b48c:	ldrb	w3, [x9, #8]
  44b490:	cmp	w3, #0x8
  44b494:	b.ne	44b460 <_obstack_memory_used@@Base+0x9270>  // b.any
  44b498:	ldr	x3, [x0, x5]
  44b49c:	add	x2, x2, #0x8
  44b4a0:	cmp	x24, x3
  44b4a4:	csel	x1, x1, x4, ne  // ne = any
  44b4a8:	cmp	x11, x2
  44b4ac:	b.ne	44b480 <_obstack_memory_used@@Base+0x9290>  // b.any
  44b4b0:	tbz	x1, #63, 44b514 <_obstack_memory_used@@Base+0x9324>
  44b4b4:	tbnz	x26, #63, 44b428 <_obstack_memory_used@@Base+0x9238>
  44b4b8:	mov	x24, #0x0                   	// #0
  44b4bc:	nop
  44b4c0:	ldr	x9, [x10, x24, lsl #3]
  44b4c4:	mov	x2, x26
  44b4c8:	ldr	x0, [x23, #56]
  44b4cc:	add	x8, x9, x9, lsl #1
  44b4d0:	lsl	x8, x8, #3
  44b4d4:	add	x0, x0, x8
  44b4d8:	add	x1, x0, #0x10
  44b4dc:	ldr	x0, [x0, #8]
  44b4e0:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  44b4e4:	cbnz	x0, 44b500 <_obstack_memory_used@@Base+0x9310>
  44b4e8:	ldr	x0, [x23, #48]
  44b4ec:	add	x8, x0, x8
  44b4f0:	add	x1, x8, #0x10
  44b4f4:	ldr	x0, [x8, #8]
  44b4f8:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  44b4fc:	cbz	x0, 44b54c <_obstack_memory_used@@Base+0x935c>
  44b500:	add	x24, x24, #0x1
  44b504:	cmp	x6, x24
  44b508:	b.le	44b428 <_obstack_memory_used@@Base+0x9238>
  44b50c:	ldr	x10, [x21, #16]
  44b510:	b	44b4c0 <_obstack_memory_used@@Base+0x92d0>
  44b514:	mov	x2, x21
  44b518:	mov	x3, x25
  44b51c:	mov	x0, x23
  44b520:	bl	4465f0 <_obstack_memory_used@@Base+0x4400>
  44b524:	mov	w2, w0
  44b528:	cbnz	w0, 44b338 <_obstack_memory_used@@Base+0x9148>
  44b52c:	tbnz	x26, #63, 44b428 <_obstack_memory_used@@Base+0x9238>
  44b530:	ldr	x6, [x21, #8]
  44b534:	cmp	x6, #0x0
  44b538:	b.le	44b428 <_obstack_memory_used@@Base+0x9238>
  44b53c:	ldr	x10, [x21, #16]
  44b540:	b	44b4b8 <_obstack_memory_used@@Base+0x92c8>
  44b544:	mov	w2, #0xc                   	// #12
  44b548:	b	44b300 <_obstack_memory_used@@Base+0x9110>
  44b54c:	mov	x2, x21
  44b550:	mov	x1, x9
  44b554:	mov	x3, x25
  44b558:	mov	x0, x23
  44b55c:	bl	4465f0 <_obstack_memory_used@@Base+0x4400>
  44b560:	mov	w2, w0
  44b564:	cbnz	w0, 44b338 <_obstack_memory_used@@Base+0x9148>
  44b568:	ldr	x6, [x21, #8]
  44b56c:	b	44b504 <_obstack_memory_used@@Base+0x9314>
  44b570:	mov	w2, #0x0                   	// #0
  44b574:	b	44b308 <_obstack_memory_used@@Base+0x9118>
  44b578:	stp	x29, x30, [sp, #-32]!
  44b57c:	mov	x9, x0
  44b580:	mov	x6, x1
  44b584:	mov	x29, sp
  44b588:	ldr	w0, [x1, #144]
  44b58c:	mov	x10, x2
  44b590:	mov	w7, w3
  44b594:	mov	x12, x4
  44b598:	and	w5, w5, #0xff
  44b59c:	cmp	w0, #0x1
  44b5a0:	ldr	x11, [x1, #72]
  44b5a4:	b.eq	44b5bc <_obstack_memory_used@@Base+0x93cc>  // b.none
  44b5a8:	mov	x1, x11
  44b5ac:	mov	x0, x6
  44b5b0:	bl	443f58 <_obstack_memory_used@@Base+0x1d68>
  44b5b4:	cmp	w0, #0x1
  44b5b8:	b.gt	44b5fc <_obstack_memory_used@@Base+0x940c>
  44b5bc:	ldrb	w8, [x10, #8]
  44b5c0:	add	x7, x11, w7, sxtw
  44b5c4:	str	x7, [x6, #72]
  44b5c8:	and	w0, w8, #0xfffffffb
  44b5cc:	cmp	w0, #0x1a
  44b5d0:	ccmp	w8, #0x1c, #0x4, ne  // ne = any
  44b5d4:	b.eq	44b624 <_obstack_memory_used@@Base+0x9434>  // b.none
  44b5d8:	cmp	w5, #0x0
  44b5dc:	ccmp	w8, #0x16, #0x0, eq  // eq = none
  44b5e0:	b.eq	44b770 <_obstack_memory_used@@Base+0x9580>  // b.none
  44b5e4:	ldrb	w1, [x10]
  44b5e8:	mov	w0, #0x0                   	// #0
  44b5ec:	str	wzr, [x9]
  44b5f0:	strb	w1, [x9, #8]
  44b5f4:	ldp	x29, x30, [sp], #32
  44b5f8:	ret
  44b5fc:	ldr	x1, [x6, #16]
  44b600:	mov	w2, #0x1                   	// #1
  44b604:	str	w2, [x9]
  44b608:	add	x2, x11, w0, sxtw
  44b60c:	mov	w0, #0x0                   	// #0
  44b610:	ldr	w1, [x1, x11, lsl #2]
  44b614:	str	w1, [x9, #8]
  44b618:	str	x2, [x6, #72]
  44b61c:	ldp	x29, x30, [sp], #32
  44b620:	ret
  44b624:	ldr	x11, [x6, #104]
  44b628:	cmp	x7, x11
  44b62c:	b.ge	44b6d4 <_obstack_memory_used@@Base+0x94e4>  // b.tcont
  44b630:	ldrb	w12, [x10]
  44b634:	mov	x5, #0x0                   	// #0
  44b638:	b	44b65c <_obstack_memory_used@@Base+0x946c>
  44b63c:	ldr	x0, [x9, #8]
  44b640:	strb	w8, [x0, x5]
  44b644:	add	x5, x5, #0x1
  44b648:	cmp	x5, #0x20
  44b64c:	b.eq	44b6d4 <_obstack_memory_used@@Base+0x94e4>  // b.none
  44b650:	ldrb	w8, [x10, #8]
  44b654:	ldr	x7, [x6, #72]
  44b658:	ldr	x11, [x6, #104]
  44b65c:	cmp	w8, #0x1e
  44b660:	mov	w13, w5
  44b664:	b.eq	44b6e0 <_obstack_memory_used@@Base+0x94f0>  // b.none
  44b668:	ldr	x0, [x6, #8]
  44b66c:	add	x1, x7, #0x1
  44b670:	str	x1, [x6, #72]
  44b674:	ldrb	w8, [x0, x7]
  44b678:	cmp	x11, x1
  44b67c:	b.le	44b6d4 <_obstack_memory_used@@Base+0x94e4>
  44b680:	cmp	w12, w8
  44b684:	b.ne	44b63c <_obstack_memory_used@@Base+0x944c>  // b.any
  44b688:	ldr	x0, [x6, #8]
  44b68c:	ldrb	w0, [x0, x1]
  44b690:	cmp	w0, #0x5d
  44b694:	b.ne	44b63c <_obstack_memory_used@@Base+0x944c>  // b.any
  44b698:	ldr	x0, [x9, #8]
  44b69c:	add	x1, x1, #0x1
  44b6a0:	str	x1, [x6, #72]
  44b6a4:	strb	wzr, [x0, w13, sxtw]
  44b6a8:	ldrb	w0, [x10, #8]
  44b6ac:	cmp	w0, #0x1c
  44b6b0:	b.eq	44b7a4 <_obstack_memory_used@@Base+0x95b4>  // b.none
  44b6b4:	cmp	w0, #0x1e
  44b6b8:	b.eq	44b794 <_obstack_memory_used@@Base+0x95a4>  // b.none
  44b6bc:	cmp	w0, #0x1a
  44b6c0:	mov	w0, #0x0                   	// #0
  44b6c4:	b.ne	44b5f4 <_obstack_memory_used@@Base+0x9404>  // b.any
  44b6c8:	mov	w1, #0x3                   	// #3
  44b6cc:	str	w1, [x9]
  44b6d0:	b	44b5f4 <_obstack_memory_used@@Base+0x9404>
  44b6d4:	mov	w0, #0x7                   	// #7
  44b6d8:	ldp	x29, x30, [sp], #32
  44b6dc:	ret
  44b6e0:	ldrb	w0, [x6, #139]
  44b6e4:	cbz	w0, 44b668 <_obstack_memory_used@@Base+0x9478>
  44b6e8:	ldrb	w0, [x6, #140]
  44b6ec:	cbz	w0, 44b754 <_obstack_memory_used@@Base+0x9564>
  44b6f0:	ldr	x0, [x6, #48]
  44b6f4:	cmp	x7, x0
  44b6f8:	b.eq	44b70c <_obstack_memory_used@@Base+0x951c>  // b.none
  44b6fc:	ldr	x0, [x6, #16]
  44b700:	ldr	w0, [x0, x7, lsl #2]
  44b704:	cmn	w0, #0x1
  44b708:	b.eq	44b668 <_obstack_memory_used@@Base+0x9478>  // b.none
  44b70c:	ldr	x1, [x6, #24]
  44b710:	ldr	x0, [x6]
  44b714:	ldr	x2, [x1, x7, lsl #3]
  44b718:	ldr	x1, [x6, #40]
  44b71c:	add	x0, x0, x2
  44b720:	ldrb	w8, [x0, x1]
  44b724:	tbnz	w8, #7, 44b668 <_obstack_memory_used@@Base+0x9478>
  44b728:	ldr	w0, [x6, #144]
  44b72c:	mov	x1, #0x1                   	// #1
  44b730:	cmp	w0, #0x1
  44b734:	b.eq	44b748 <_obstack_memory_used@@Base+0x9558>  // b.none
  44b738:	mov	x1, x7
  44b73c:	mov	x0, x6
  44b740:	bl	443f58 <_obstack_memory_used@@Base+0x1d68>
  44b744:	sxtw	x1, w0
  44b748:	add	x1, x7, x1
  44b74c:	str	x1, [x6, #72]
  44b750:	b	44b678 <_obstack_memory_used@@Base+0x9488>
  44b754:	ldr	x0, [x6]
  44b758:	add	x1, x7, #0x1
  44b75c:	ldr	x2, [x6, #40]
  44b760:	add	x0, x0, x7
  44b764:	str	x1, [x6, #72]
  44b768:	ldrb	w8, [x0, x2]
  44b76c:	b	44b678 <_obstack_memory_used@@Base+0x9488>
  44b770:	mov	x2, x12
  44b774:	mov	x1, x6
  44b778:	add	x0, sp, #0x10
  44b77c:	bl	4423b0 <_obstack_memory_used@@Base+0x1c0>
  44b780:	ldrb	w0, [sp, #24]
  44b784:	cmp	w0, #0x15
  44b788:	b.eq	44b5e4 <_obstack_memory_used@@Base+0x93f4>  // b.none
  44b78c:	mov	w0, #0xb                   	// #11
  44b790:	b	44b5f4 <_obstack_memory_used@@Base+0x9404>
  44b794:	mov	w1, #0x4                   	// #4
  44b798:	mov	w0, #0x0                   	// #0
  44b79c:	str	w1, [x9]
  44b7a0:	b	44b5f4 <_obstack_memory_used@@Base+0x9404>
  44b7a4:	mov	w1, #0x2                   	// #2
  44b7a8:	mov	w0, #0x0                   	// #0
  44b7ac:	str	w1, [x9]
  44b7b0:	b	44b5f4 <_obstack_memory_used@@Base+0x9404>
  44b7b4:	nop
  44b7b8:	stp	x29, x30, [sp, #-96]!
  44b7bc:	mov	x29, sp
  44b7c0:	stp	x19, x20, [sp, #16]
  44b7c4:	mov	x19, x1
  44b7c8:	stp	x21, x22, [sp, #32]
  44b7cc:	ldr	x21, [x1, #72]
  44b7d0:	stp	x23, x24, [sp, #48]
  44b7d4:	mov	x23, x0
  44b7d8:	ldr	x1, [x1, #104]
  44b7dc:	cmp	x1, x21
  44b7e0:	b.le	44ba08 <_obstack_memory_used@@Base+0x9818>
  44b7e4:	ldr	x24, [x19, #8]
  44b7e8:	mov	x22, x2
  44b7ec:	ldrb	w1, [x0, #10]
  44b7f0:	ldr	w0, [x19, #144]
  44b7f4:	ldrb	w20, [x24, x21]
  44b7f8:	and	w1, w1, #0xffffff9f
  44b7fc:	strb	w20, [x23]
  44b800:	cmp	w0, #0x1
  44b804:	strb	w1, [x23, #10]
  44b808:	b.le	44b8bc <_obstack_memory_used@@Base+0x96cc>
  44b80c:	ldr	x1, [x19, #48]
  44b810:	cmp	x21, x1
  44b814:	b.eq	44b828 <_obstack_memory_used@@Base+0x9638>  // b.none
  44b818:	ldr	x1, [x19, #16]
  44b81c:	ldr	w1, [x1, x21, lsl #2]
  44b820:	cmn	w1, #0x1
  44b824:	b.eq	44ba98 <_obstack_memory_used@@Base+0x98a8>  // b.none
  44b828:	cmp	w20, #0x5c
  44b82c:	b.eq	44b904 <_obstack_memory_used@@Base+0x9714>  // b.none
  44b830:	ldr	x0, [x19, #16]
  44b834:	str	x25, [sp, #64]
  44b838:	mov	w1, #0x1                   	// #1
  44b83c:	strb	w1, [x23, #8]
  44b840:	ldr	w25, [x0, x21, lsl #2]
  44b844:	mov	w0, w25
  44b848:	bl	404990 <iswalnum@plt>
  44b84c:	cmp	w25, #0x5f
  44b850:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  44b854:	ldrb	w0, [x23, #10]
  44b858:	cset	w1, ne  // ne = any
  44b85c:	bfi	w0, w1, #6, #1
  44b860:	strb	w0, [x23, #10]
  44b864:	ldr	x25, [sp, #64]
  44b868:	cmp	w20, #0x2e
  44b86c:	b.eq	44bde0 <_obstack_memory_used@@Base+0x9bf0>  // b.none
  44b870:	b.hi	44b934 <_obstack_memory_used@@Base+0x9744>  // b.pmore
  44b874:	cmp	w20, #0x29
  44b878:	b.eq	44bdc4 <_obstack_memory_used@@Base+0x9bd4>  // b.none
  44b87c:	b.ls	44b96c <_obstack_memory_used@@Base+0x977c>  // b.plast
  44b880:	cmp	w20, #0x2a
  44b884:	b.eq	44bdd0 <_obstack_memory_used@@Base+0x9be0>  // b.none
  44b888:	cmp	w20, #0x2b
  44b88c:	b.ne	44bdbc <_obstack_memory_used@@Base+0x9bcc>  // b.any
  44b890:	mov	x1, #0x402                 	// #1026
  44b894:	mov	w0, #0x1                   	// #1
  44b898:	tst	x22, x1
  44b89c:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44b8a0:	mov	w1, #0x12                  	// #18
  44b8a4:	strb	w1, [x23, #8]
  44b8a8:	ldp	x19, x20, [sp, #16]
  44b8ac:	ldp	x21, x22, [sp, #32]
  44b8b0:	ldp	x23, x24, [sp, #48]
  44b8b4:	ldp	x29, x30, [sp], #96
  44b8b8:	ret
  44b8bc:	cmp	w20, #0x5c
  44b8c0:	b.eq	44b904 <_obstack_memory_used@@Base+0x9714>  // b.none
  44b8c4:	bl	404740 <__ctype_b_loc@plt>
  44b8c8:	ldr	x0, [x0]
  44b8cc:	ubfiz	x2, x20, #1, #8
  44b8d0:	cmp	w20, #0x5f
  44b8d4:	ldr	w1, [x23, #8]
  44b8d8:	ldrh	w0, [x0, x2]
  44b8dc:	and	w1, w1, #0xffffff00
  44b8e0:	and	w1, w1, #0xffbfffff
  44b8e4:	and	w0, w0, #0x8
  44b8e8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  44b8ec:	cset	w0, ne  // ne = any
  44b8f0:	lsl	w0, w0, #22
  44b8f4:	orr	w0, w0, #0x1
  44b8f8:	orr	w0, w0, w1
  44b8fc:	str	w0, [x23, #8]
  44b900:	b	44b868 <_obstack_memory_used@@Base+0x9678>
  44b904:	ldr	x2, [x19, #88]
  44b908:	add	x1, x21, #0x1
  44b90c:	cmp	x1, x2
  44b910:	b.lt	44ba28 <_obstack_memory_used@@Base+0x9838>  // b.tstop
  44b914:	mov	w1, #0x24                  	// #36
  44b918:	strb	w1, [x23, #8]
  44b91c:	mov	w0, #0x1                   	// #1
  44b920:	ldp	x19, x20, [sp, #16]
  44b924:	ldp	x21, x22, [sp, #32]
  44b928:	ldp	x23, x24, [sp, #48]
  44b92c:	ldp	x29, x30, [sp], #96
  44b930:	ret
  44b934:	cmp	w20, #0x7b
  44b938:	b.eq	44bd98 <_obstack_memory_used@@Base+0x9ba8>  // b.none
  44b93c:	b.ls	44b990 <_obstack_memory_used@@Base+0x97a0>  // b.plast
  44b940:	cmp	w20, #0x7c
  44b944:	b.eq	44bdac <_obstack_memory_used@@Base+0x9bbc>  // b.none
  44b948:	cmp	w20, #0x7d
  44b94c:	b.ne	44bdbc <_obstack_memory_used@@Base+0x9bcc>  // b.any
  44b950:	mov	x1, #0x1200                	// #4608
  44b954:	mov	w0, #0x1                   	// #1
  44b958:	bics	xzr, x1, x22
  44b95c:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44b960:	mov	w1, #0x18                  	// #24
  44b964:	strb	w1, [x23, #8]
  44b968:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44b96c:	cmp	w20, #0x24
  44b970:	b.eq	44bd34 <_obstack_memory_used@@Base+0x9b44>  // b.none
  44b974:	cmp	w20, #0x28
  44b978:	mov	w0, #0x1                   	// #1
  44b97c:	b.ne	44b9c8 <_obstack_memory_used@@Base+0x97d8>  // b.any
  44b980:	tbz	w22, #13, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44b984:	mov	w1, #0x8                   	// #8
  44b988:	strb	w1, [x23, #8]
  44b98c:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44b990:	cmp	w20, #0x5b
  44b994:	b.eq	44bdf0 <_obstack_memory_used@@Base+0x9c00>  // b.none
  44b998:	cmp	w20, #0x5e
  44b99c:	b.ne	44b9e4 <_obstack_memory_used@@Base+0x97f4>  // b.any
  44b9a0:	and	x0, x22, #0xfffff8
  44b9a4:	ands	x0, x0, #0xffffffffff80000f
  44b9a8:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  44b9ac:	b.ne	44bb54 <_obstack_memory_used@@Base+0x9964>  // b.any
  44b9b0:	mov	w1, #0xc                   	// #12
  44b9b4:	mov	w2, #0x10                  	// #16
  44b9b8:	mov	w0, #0x1                   	// #1
  44b9bc:	str	w2, [x23]
  44b9c0:	strb	w1, [x23, #8]
  44b9c4:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44b9c8:	cmp	w20, #0xa
  44b9cc:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44b9d0:	tbz	w22, #11, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44b9d4:	mov	w1, #0xa                   	// #10
  44b9d8:	mov	w0, #0x1                   	// #1
  44b9dc:	strb	w1, [x23, #8]
  44b9e0:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44b9e4:	cmp	w20, #0x3f
  44b9e8:	b.ne	44bdbc <_obstack_memory_used@@Base+0x9bcc>  // b.any
  44b9ec:	mov	x1, #0x402                 	// #1026
  44b9f0:	mov	w0, #0x1                   	// #1
  44b9f4:	tst	x22, x1
  44b9f8:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44b9fc:	mov	w1, #0x13                  	// #19
  44ba00:	strb	w1, [x23, #8]
  44ba04:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44ba08:	mov	w1, #0x2                   	// #2
  44ba0c:	strb	w1, [x23, #8]
  44ba10:	mov	w0, #0x0                   	// #0
  44ba14:	ldp	x19, x20, [sp, #16]
  44ba18:	ldp	x21, x22, [sp, #32]
  44ba1c:	ldp	x23, x24, [sp, #48]
  44ba20:	ldp	x29, x30, [sp], #96
  44ba24:	ret
  44ba28:	ldrb	w2, [x19, #139]
  44ba2c:	cbnz	w2, 44baf4 <_obstack_memory_used@@Base+0x9904>
  44ba30:	ldrb	w20, [x24, x1]
  44ba34:	mov	w2, #0x1                   	// #1
  44ba38:	strb	w20, [x23]
  44ba3c:	strb	w2, [x23, #8]
  44ba40:	cmp	w0, #0x1
  44ba44:	b.le	44babc <_obstack_memory_used@@Base+0x98cc>
  44ba48:	ldr	x2, [x19, #16]
  44ba4c:	add	x2, x2, x1, lsl #2
  44ba50:	ldr	w19, [x2]
  44ba54:	mov	w0, w19
  44ba58:	bl	404990 <iswalnum@plt>
  44ba5c:	cmp	w19, #0x5f
  44ba60:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  44ba64:	ldrb	w0, [x23, #10]
  44ba68:	cset	w1, ne  // ne = any
  44ba6c:	bfi	w0, w1, #6, #1
  44ba70:	strb	w0, [x23, #10]
  44ba74:	sub	w0, w20, #0x27
  44ba78:	cmp	w0, #0x56
  44ba7c:	b.hi	44baec <_obstack_memory_used@@Base+0x98fc>  // b.pmore
  44ba80:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44ba84:	add	x1, x1, #0x3f0
  44ba88:	ldrh	w0, [x1, w0, uxtw #1]
  44ba8c:	adr	x1, 44ba98 <_obstack_memory_used@@Base+0x98a8>
  44ba90:	add	x0, x1, w0, sxth #2
  44ba94:	br	x0
  44ba98:	ldr	w1, [x23, #8]
  44ba9c:	mov	w2, #0x1                   	// #1
  44baa0:	movk	w2, #0x20, lsl #16
  44baa4:	mov	w0, #0x1                   	// #1
  44baa8:	and	w1, w1, #0xffffff00
  44baac:	and	w1, w1, #0xffdfffff
  44bab0:	orr	w1, w1, w2
  44bab4:	str	w1, [x23, #8]
  44bab8:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44babc:	bl	404740 <__ctype_b_loc@plt>
  44bac0:	ldr	x0, [x0]
  44bac4:	ubfiz	x1, x20, #1, #8
  44bac8:	cmp	w20, #0x5f
  44bacc:	ldrb	w2, [x23, #10]
  44bad0:	ldrh	w0, [x0, x1]
  44bad4:	and	w0, w0, #0x8
  44bad8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  44badc:	cset	w0, ne  // ne = any
  44bae0:	bfi	w2, w0, #6, #1
  44bae4:	strb	w2, [x23, #10]
  44bae8:	b	44ba74 <_obstack_memory_used@@Base+0x9884>
  44baec:	mov	w0, #0x2                   	// #2
  44baf0:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44baf4:	cmp	w0, #0x1
  44baf8:	b.le	44bb2c <_obstack_memory_used@@Base+0x993c>
  44bafc:	ldr	x2, [x19, #16]
  44bb00:	ldr	w3, [x2, x1, lsl #2]
  44bb04:	add	x2, x2, x1, lsl #2
  44bb08:	cmn	w3, #0x1
  44bb0c:	b.eq	44be0c <_obstack_memory_used@@Base+0x9c1c>  // b.none
  44bb10:	ldr	x3, [x19, #48]
  44bb14:	add	x21, x21, #0x2
  44bb18:	cmp	x3, x21
  44bb1c:	b.eq	44bb2c <_obstack_memory_used@@Base+0x993c>  // b.none
  44bb20:	ldr	w3, [x2, #4]
  44bb24:	cmn	w3, #0x1
  44bb28:	b.eq	44be0c <_obstack_memory_used@@Base+0x9c1c>  // b.none
  44bb2c:	ldrb	w3, [x19, #140]
  44bb30:	ldr	x2, [x19]
  44bb34:	ldr	x4, [x19, #40]
  44bb38:	cbz	w3, 44be00 <_obstack_memory_used@@Base+0x9c10>
  44bb3c:	ldr	x3, [x19, #24]
  44bb40:	add	x2, x2, x4
  44bb44:	ldr	x3, [x3, x1, lsl #3]
  44bb48:	ldrb	w20, [x2, x3]
  44bb4c:	tbz	w20, #7, 44ba34 <_obstack_memory_used@@Base+0x9844>
  44bb50:	b	44ba30 <_obstack_memory_used@@Base+0x9840>
  44bb54:	add	x21, x24, x21
  44bb58:	tst	x22, #0x800
  44bb5c:	mov	w0, #0x1                   	// #1
  44bb60:	ldurb	w1, [x21, #-1]
  44bb64:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  44bb68:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44bb6c:	b	44b9b0 <_obstack_memory_used@@Base+0x97c0>
  44bb70:	mov	w0, #0x2                   	// #2
  44bb74:	tbnz	w22, #14, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bb78:	sub	w1, w20, #0x31
  44bb7c:	mov	w2, #0x4                   	// #4
  44bb80:	strb	w2, [x23, #8]
  44bb84:	sxtw	x1, w1
  44bb88:	str	x1, [x23]
  44bb8c:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bb90:	mov	x0, #0x402                 	// #1026
  44bb94:	and	x0, x22, x0
  44bb98:	cmp	x0, #0x2
  44bb9c:	mov	w0, #0x2                   	// #2
  44bba0:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44bba4:	b	44b8a0 <_obstack_memory_used@@Base+0x96b0>
  44bba8:	mov	w0, #0x2                   	// #2
  44bbac:	tbnz	w22, #19, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bbb0:	mov	w1, #0xc                   	// #12
  44bbb4:	mov	w2, #0x9                   	// #9
  44bbb8:	str	w2, [x23]
  44bbbc:	strb	w1, [x23, #8]
  44bbc0:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bbc4:	mov	w0, #0x2                   	// #2
  44bbc8:	tbnz	w22, #19, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bbcc:	mov	w1, #0xc                   	// #12
  44bbd0:	mov	w2, #0x6                   	// #6
  44bbd4:	str	w2, [x23]
  44bbd8:	strb	w1, [x23, #8]
  44bbdc:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bbe0:	mov	w0, #0x2                   	// #2
  44bbe4:	tbnz	w22, #19, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bbe8:	mov	w1, #0x20                  	// #32
  44bbec:	strb	w1, [x23, #8]
  44bbf0:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bbf4:	mov	w0, #0x2                   	// #2
  44bbf8:	tbnz	w22, #19, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bbfc:	mov	w1, #0x22                  	// #34
  44bc00:	strb	w1, [x23, #8]
  44bc04:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc08:	mov	w0, #0x2                   	// #2
  44bc0c:	tbnz	w22, #19, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc10:	mov	w1, #0xc                   	// #12
  44bc14:	mov	w2, #0x100                 	// #256
  44bc18:	str	w2, [x23]
  44bc1c:	strb	w1, [x23, #8]
  44bc20:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc24:	mov	w0, #0x2                   	// #2
  44bc28:	tbnz	w22, #19, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc2c:	mov	w1, #0xc                   	// #12
  44bc30:	mov	w2, #0x40                  	// #64
  44bc34:	str	w2, [x23]
  44bc38:	strb	w1, [x23, #8]
  44bc3c:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc40:	mov	w0, #0x2                   	// #2
  44bc44:	tbnz	w22, #19, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc48:	mov	w1, #0x21                  	// #33
  44bc4c:	strb	w1, [x23, #8]
  44bc50:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc54:	mov	w0, #0x2                   	// #2
  44bc58:	tbnz	w22, #19, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc5c:	mov	w1, #0x23                  	// #35
  44bc60:	strb	w1, [x23, #8]
  44bc64:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc68:	mov	w0, #0x2                   	// #2
  44bc6c:	tbnz	w22, #19, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc70:	mov	w1, #0xc                   	// #12
  44bc74:	mov	w2, #0x200                 	// #512
  44bc78:	str	w2, [x23]
  44bc7c:	strb	w1, [x23, #8]
  44bc80:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bc84:	mov	x0, #0x402                 	// #1026
  44bc88:	and	x0, x22, x0
  44bc8c:	cmp	x0, #0x2
  44bc90:	mov	w0, #0x2                   	// #2
  44bc94:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44bc98:	b	44b9fc <_obstack_memory_used@@Base+0x980c>
  44bc9c:	mov	x1, #0x8400                	// #33792
  44bca0:	mov	w0, #0x2                   	// #2
  44bca4:	tst	x22, x1
  44bca8:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44bcac:	mov	w1, #0xa                   	// #10
  44bcb0:	strb	w1, [x23, #8]
  44bcb4:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bcb8:	mov	x0, #0x1200                	// #4608
  44bcbc:	and	x0, x22, x0
  44bcc0:	cmp	x0, #0x200
  44bcc4:	mov	w0, #0x2                   	// #2
  44bcc8:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44bccc:	nop
  44bcd0:	mov	w1, #0x17                  	// #23
  44bcd4:	strb	w1, [x23, #8]
  44bcd8:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bcdc:	mov	x0, #0x1200                	// #4608
  44bce0:	and	x0, x22, x0
  44bce4:	cmp	x0, #0x200
  44bce8:	mov	w0, #0x2                   	// #2
  44bcec:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44bcf0:	b	44b960 <_obstack_memory_used@@Base+0x9770>
  44bcf4:	mov	w0, #0x2                   	// #2
  44bcf8:	tbnz	w22, #13, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bcfc:	nop
  44bd00:	mov	w1, #0x9                   	// #9
  44bd04:	strb	w1, [x23, #8]
  44bd08:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bd0c:	mov	w0, #0x2                   	// #2
  44bd10:	tbnz	w22, #13, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bd14:	b	44b984 <_obstack_memory_used@@Base+0x9794>
  44bd18:	mov	w0, #0x2                   	// #2
  44bd1c:	tbnz	w22, #19, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bd20:	mov	w1, #0xc                   	// #12
  44bd24:	mov	w2, #0x80                  	// #128
  44bd28:	str	w2, [x23]
  44bd2c:	strb	w1, [x23, #8]
  44bd30:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bd34:	tbnz	w22, #3, 44bd80 <_obstack_memory_used@@Base+0x9b90>
  44bd38:	ldr	x0, [x19, #88]
  44bd3c:	add	x21, x21, #0x1
  44bd40:	cmp	x21, x0
  44bd44:	b.eq	44bd80 <_obstack_memory_used@@Base+0x9b90>  // b.none
  44bd48:	str	x21, [x19, #72]
  44bd4c:	mov	x2, x22
  44bd50:	mov	x1, x19
  44bd54:	add	x0, sp, #0x50
  44bd58:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44bd5c:	ldr	x2, [x19, #72]
  44bd60:	mov	w0, #0x1                   	// #1
  44bd64:	ldrb	w1, [sp, #88]
  44bd68:	sub	x2, x2, #0x1
  44bd6c:	str	x2, [x19, #72]
  44bd70:	sub	w1, w1, #0x9
  44bd74:	and	w1, w1, #0xff
  44bd78:	cmp	w1, w0
  44bd7c:	b.hi	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.pmore
  44bd80:	mov	w1, #0xc                   	// #12
  44bd84:	mov	w2, #0x20                  	// #32
  44bd88:	mov	w0, #0x1                   	// #1
  44bd8c:	str	w2, [x23]
  44bd90:	strb	w1, [x23, #8]
  44bd94:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bd98:	mov	x1, #0x1200                	// #4608
  44bd9c:	mov	w0, #0x1                   	// #1
  44bda0:	bics	xzr, x1, x22
  44bda4:	b.ne	44b8a8 <_obstack_memory_used@@Base+0x96b8>  // b.any
  44bda8:	b	44bcd0 <_obstack_memory_used@@Base+0x9ae0>
  44bdac:	mov	x0, #0x8400                	// #33792
  44bdb0:	and	x0, x22, x0
  44bdb4:	cmp	x0, #0x8, lsl #12
  44bdb8:	b.eq	44b9d4 <_obstack_memory_used@@Base+0x97e4>  // b.none
  44bdbc:	mov	w0, #0x1                   	// #1
  44bdc0:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bdc4:	mov	w0, #0x1                   	// #1
  44bdc8:	tbz	w22, #13, 44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bdcc:	b	44bd00 <_obstack_memory_used@@Base+0x9b10>
  44bdd0:	mov	w1, #0xb                   	// #11
  44bdd4:	mov	w0, #0x1                   	// #1
  44bdd8:	strb	w1, [x23, #8]
  44bddc:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bde0:	mov	w1, #0x5                   	// #5
  44bde4:	mov	w0, #0x1                   	// #1
  44bde8:	strb	w1, [x23, #8]
  44bdec:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44bdf0:	mov	w1, #0x14                  	// #20
  44bdf4:	mov	w0, #0x1                   	// #1
  44bdf8:	strb	w1, [x23, #8]
  44bdfc:	b	44b8a8 <_obstack_memory_used@@Base+0x96b8>
  44be00:	add	x2, x2, x1
  44be04:	ldrb	w20, [x2, x4]
  44be08:	b	44ba34 <_obstack_memory_used@@Base+0x9844>
  44be0c:	ldrb	w20, [x24, x1]
  44be10:	mov	w0, #0x1                   	// #1
  44be14:	strb	w20, [x23]
  44be18:	strb	w0, [x23, #8]
  44be1c:	b	44ba50 <_obstack_memory_used@@Base+0x9860>
  44be20:	stp	x29, x30, [sp, #-64]!
  44be24:	mov	x29, sp
  44be28:	stp	x19, x20, [sp, #16]
  44be2c:	mov	x20, x0
  44be30:	mov	x19, x1
  44be34:	str	x23, [sp, #48]
  44be38:	mov	x23, x2
  44be3c:	stp	x21, x22, [sp, #32]
  44be40:	mov	x21, #0xffffffffffffffff    	// #-1
  44be44:	mov	x22, #0x8030                	// #32816
  44be48:	mov	x1, x20
  44be4c:	mov	x2, x23
  44be50:	mov	x0, x19
  44be54:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44be58:	ldr	x4, [x20, #72]
  44be5c:	ldrb	w3, [x19, #8]
  44be60:	ldrb	w1, [x19]
  44be64:	add	x0, x4, w0, sxtw
  44be68:	str	x0, [x20, #72]
  44be6c:	cmp	w3, #0x2
  44be70:	b.eq	44bec8 <_obstack_memory_used@@Base+0x9cd8>  // b.none
  44be74:	cmp	w1, #0x2c
  44be78:	ccmp	w3, #0x18, #0x4, ne  // ne = any
  44be7c:	b.eq	44becc <_obstack_memory_used@@Base+0x9cdc>  // b.none
  44be80:	cmp	w3, #0x1
  44be84:	b.eq	44be90 <_obstack_memory_used@@Base+0x9ca0>  // b.none
  44be88:	mov	x21, #0xfffffffffffffffe    	// #-2
  44be8c:	b	44be48 <_obstack_memory_used@@Base+0x9c58>
  44be90:	sub	w0, w1, #0x30
  44be94:	and	w2, w0, #0xff
  44be98:	cmp	w2, #0x9
  44be9c:	ccmn	x21, #0x2, #0x4, ls  // ls = plast
  44bea0:	b.eq	44be88 <_obstack_memory_used@@Base+0x9c98>  // b.none
  44bea4:	add	x2, x21, x21, lsl #2
  44bea8:	and	x1, x1, #0xff
  44beac:	cmn	x21, #0x1
  44beb0:	b.eq	44bee4 <_obstack_memory_used@@Base+0x9cf4>  // b.none
  44beb4:	add	x1, x1, x2, lsl #1
  44beb8:	cmp	x1, x22
  44bebc:	csel	x1, x1, x22, le
  44bec0:	sub	x21, x1, #0x30
  44bec4:	b	44be48 <_obstack_memory_used@@Base+0x9c58>
  44bec8:	mov	x21, #0xfffffffffffffffe    	// #-2
  44becc:	mov	x0, x21
  44bed0:	ldp	x19, x20, [sp, #16]
  44bed4:	ldp	x21, x22, [sp, #32]
  44bed8:	ldr	x23, [sp, #48]
  44bedc:	ldp	x29, x30, [sp], #64
  44bee0:	ret
  44bee4:	sxtw	x21, w0
  44bee8:	b	44be48 <_obstack_memory_used@@Base+0x9c58>
  44beec:	nop
  44bef0:	stp	x29, x30, [sp, #-272]!
  44bef4:	mov	x29, sp
  44bef8:	stp	x19, x20, [sp, #16]
  44befc:	mov	x19, x1
  44bf00:	stp	x21, x22, [sp, #32]
  44bf04:	mov	x22, x2
  44bf08:	ldrb	w2, [x2, #8]
  44bf0c:	stp	x25, x26, [sp, #64]
  44bf10:	mov	x21, x0
  44bf14:	cmp	w2, #0x13
  44bf18:	stp	x27, x28, [sp, #80]
  44bf1c:	mov	x27, x3
  44bf20:	str	x5, [sp, #112]
  44bf24:	ldr	x26, [x1]
  44bf28:	b.hi	44c06c <_obstack_memory_used@@Base+0x9e7c>  // b.pmore
  44bf2c:	cmp	w2, #0x11
  44bf30:	b.hi	44c8ac <_obstack_memory_used@@Base+0xa6bc>  // b.pmore
  44bf34:	cmp	w2, #0x8
  44bf38:	b.eq	44c94c <_obstack_memory_used@@Base+0xa75c>  // b.none
  44bf3c:	b.ls	44c31c <_obstack_memory_used@@Base+0xa12c>  // b.plast
  44bf40:	cmp	w2, #0xb
  44bf44:	b.eq	44c8ac <_obstack_memory_used@@Base+0xa6bc>  // b.none
  44bf48:	cmp	w2, #0xc
  44bf4c:	b.ne	44c2fc <_obstack_memory_used@@Base+0xa10c>  // b.any
  44bf50:	stp	x23, x24, [sp, #48]
  44bf54:	mov	w0, #0x30f                 	// #783
  44bf58:	ldr	w23, [x22]
  44bf5c:	tst	w23, w0
  44bf60:	b.eq	44bf98 <_obstack_memory_used@@Base+0x9da8>  // b.none
  44bf64:	ldrb	w0, [x26, #176]
  44bf68:	tbnz	w0, #4, 44bf98 <_obstack_memory_used@@Base+0x9da8>
  44bf6c:	orr	w0, w0, #0x10
  44bf70:	strb	w0, [x26, #176]
  44bf74:	mov	w1, w0
  44bf78:	tbnz	w0, #3, 44d0ec <_obstack_memory_used@@Base+0xaefc>
  44bf7c:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
  44bf80:	mov	x2, #0x3ff000000000000     	// #287948901175001088
  44bf84:	movk	x0, #0x87ff, lsl #16
  44bf88:	stp	x2, x0, [x26, #184]
  44bf8c:	tbz	w1, #2, 44d078 <_obstack_memory_used@@Base+0xae88>
  44bf90:	stp	xzr, xzr, [x26, #200]
  44bf94:	ldr	w23, [x22]
  44bf98:	sub	w0, w23, #0x100
  44bf9c:	add	x24, x26, #0x70
  44bfa0:	tst	w0, #0xfffffeff
  44bfa4:	add	x26, x26, #0x80
  44bfa8:	b.ne	44ca40 <_obstack_memory_used@@Base+0xa850>  // b.any
  44bfac:	cmp	w23, #0x100
  44bfb0:	b.eq	44ccdc <_obstack_memory_used@@Base+0xaaec>  // b.none
  44bfb4:	mov	w0, #0x5                   	// #5
  44bfb8:	str	w0, [x22]
  44bfbc:	mov	x1, x26
  44bfc0:	mov	x4, x22
  44bfc4:	mov	x0, x24
  44bfc8:	mov	x3, #0x0                   	// #0
  44bfcc:	mov	x2, #0x0                   	// #0
  44bfd0:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44bfd4:	mov	x20, x0
  44bfd8:	mov	w1, #0xa                   	// #10
  44bfdc:	str	w1, [x22]
  44bfe0:	mov	x4, x22
  44bfe4:	mov	x1, x26
  44bfe8:	mov	x3, #0x0                   	// #0
  44bfec:	mov	x2, #0x0                   	// #0
  44bff0:	mov	x0, x24
  44bff4:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44bff8:	mov	w5, #0xa                   	// #10
  44bffc:	mov	x19, x0
  44c000:	mov	x1, x26
  44c004:	mov	x0, x24
  44c008:	mov	x3, x19
  44c00c:	add	x4, sp, #0xf0
  44c010:	mov	x2, x20
  44c014:	strb	w5, [sp, #248]
  44c018:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c01c:	str	x0, [sp, #96]
  44c020:	cmp	x20, #0x0
  44c024:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  44c028:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44c02c:	b.eq	44c5e4 <_obstack_memory_used@@Base+0xa3f4>  // b.none
  44c030:	mov	x1, x21
  44c034:	mov	x2, x27
  44c038:	mov	x0, x22
  44c03c:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44c040:	ldr	x1, [x21, #72]
  44c044:	ldp	x23, x24, [sp, #48]
  44c048:	add	x0, x1, w0, sxtw
  44c04c:	str	x0, [x21, #72]
  44c050:	ldp	x19, x20, [sp, #16]
  44c054:	ldp	x21, x22, [sp, #32]
  44c058:	ldp	x25, x26, [sp, #64]
  44c05c:	ldp	x27, x28, [sp, #80]
  44c060:	ldr	x0, [sp, #96]
  44c064:	ldp	x29, x30, [sp], #272
  44c068:	ret
  44c06c:	cmp	w2, #0x21
  44c070:	b.hi	44c4a8 <_obstack_memory_used@@Base+0xa2b8>  // b.pmore
  44c074:	cmp	w2, #0x1f
  44c078:	b.hi	44c92c <_obstack_memory_used@@Base+0xa73c>  // b.pmore
  44c07c:	cmp	w2, #0x17
  44c080:	b.eq	44c8a8 <_obstack_memory_used@@Base+0xa6b8>  // b.none
  44c084:	cmp	w2, #0x18
  44c088:	b.ne	44c36c <_obstack_memory_used@@Base+0xa17c>  // b.any
  44c08c:	mov	w0, #0x1                   	// #1
  44c090:	strb	w0, [x22, #8]
  44c094:	mov	x4, x22
  44c098:	add	x1, x26, #0x80
  44c09c:	add	x0, x26, #0x70
  44c0a0:	mov	x3, #0x0                   	// #0
  44c0a4:	mov	x2, #0x0                   	// #0
  44c0a8:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c0ac:	str	x0, [sp, #96]
  44c0b0:	cbz	x0, 44c5e8 <_obstack_memory_used@@Base+0xa3f8>
  44c0b4:	stp	x23, x24, [sp, #48]
  44c0b8:	mov	x2, x27
  44c0bc:	mov	x1, x21
  44c0c0:	mov	x0, x22
  44c0c4:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44c0c8:	ldr	x23, [x21, #72]
  44c0cc:	ldrb	w1, [x22, #8]
  44c0d0:	cmp	w1, #0x12
  44c0d4:	sub	w2, w1, #0x12
  44c0d8:	cset	w19, eq  // eq = none
  44c0dc:	add	x23, x23, w0, sxtw
  44c0e0:	cmp	w1, #0x17
  44c0e4:	str	x23, [x21, #72]
  44c0e8:	and	w2, w2, #0xff
  44c0ec:	ccmp	w1, #0xb, #0x4, ne  // ne = any
  44c0f0:	ccmp	w2, #0x1, #0x0, ne  // ne = any
  44c0f4:	b.hi	44c880 <_obstack_memory_used@@Base+0xa690>  // b.pmore
  44c0f8:	adrp	x0, 442000 <_obstack_begin_1@@Base+0x8>
  44c0fc:	add	x0, x0, #0x520
  44c100:	str	x0, [sp, #120]
  44c104:	cmp	w1, #0x17
  44c108:	ldp	x24, x25, [x22]
  44c10c:	b.eq	44c298 <_obstack_memory_used@@Base+0xa0a8>  // b.none
  44c110:	cmp	w1, #0x13
  44c114:	mov	x2, x27
  44c118:	mov	x1, x21
  44c11c:	mov	x0, x22
  44c120:	mov	x20, #0xffffffffffffffff    	// #-1
  44c124:	cneg	x20, x20, eq  // eq = none
  44c128:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44c12c:	ldr	x1, [x21, #72]
  44c130:	add	x0, x1, w0, sxtw
  44c134:	str	x0, [x21, #72]
  44c138:	ldr	x0, [sp, #96]
  44c13c:	cbz	x0, 44c6d4 <_obstack_memory_used@@Base+0xa4e4>
  44c140:	ldr	x28, [sp, #96]
  44c144:	cbnz	w19, 44c858 <_obstack_memory_used@@Base+0xa668>
  44c148:	mov	x19, #0x0                   	// #0
  44c14c:	mov	x25, #0x0                   	// #0
  44c150:	ldrb	w0, [x28, #48]
  44c154:	cmp	w0, #0x11
  44c158:	b.eq	44c6c0 <_obstack_memory_used@@Base+0xa4d0>  // b.none
  44c15c:	cmn	x20, #0x1
  44c160:	mov	x2, x28
  44c164:	cset	w6, eq  // eq = none
  44c168:	add	x23, x26, #0x70
  44c16c:	add	w6, w6, #0xa
  44c170:	add	x24, x26, #0x80
  44c174:	mov	x0, x23
  44c178:	mov	x1, x24
  44c17c:	add	x4, sp, #0xf0
  44c180:	mov	x3, #0x0                   	// #0
  44c184:	strb	w6, [sp, #248]
  44c188:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c18c:	mov	x2, x0
  44c190:	cbz	x0, 44c690 <_obstack_memory_used@@Base+0xa4a0>
  44c194:	add	x19, x19, #0x2
  44c198:	cmp	x19, x20
  44c19c:	b.gt	44c214 <_obstack_memory_used@@Base+0xa024>
  44c1a0:	mov	x0, x28
  44c1a4:	mov	x1, x26
  44c1a8:	str	x2, [sp, #104]
  44c1ac:	bl	444c28 <_obstack_memory_used@@Base+0x2a38>
  44c1b0:	ldr	x2, [sp, #104]
  44c1b4:	mov	w5, #0x10                  	// #16
  44c1b8:	mov	x28, x0
  44c1bc:	mov	x3, x0
  44c1c0:	add	x4, sp, #0xf0
  44c1c4:	mov	x1, x24
  44c1c8:	mov	x0, x23
  44c1cc:	strb	w5, [sp, #248]
  44c1d0:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c1d4:	mov	x2, x0
  44c1d8:	cmp	x28, #0x0
  44c1dc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44c1e0:	b.eq	44c690 <_obstack_memory_used@@Base+0xa4a0>  // b.none
  44c1e4:	mov	w5, #0xa                   	// #10
  44c1e8:	add	x4, sp, #0xf0
  44c1ec:	mov	x1, x24
  44c1f0:	mov	x0, x23
  44c1f4:	mov	x3, #0x0                   	// #0
  44c1f8:	strb	w5, [sp, #248]
  44c1fc:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c200:	mov	x2, x0
  44c204:	cbz	x0, 44c690 <_obstack_memory_used@@Base+0xa4a0>
  44c208:	add	x19, x19, #0x1
  44c20c:	cmp	x19, x20
  44c210:	b.le	44c1a0 <_obstack_memory_used@@Base+0x9fb0>
  44c214:	cbz	x25, 44c808 <_obstack_memory_used@@Base+0xa618>
  44c218:	mov	w5, #0x10                  	// #16
  44c21c:	mov	x3, x2
  44c220:	mov	x1, x24
  44c224:	mov	x2, x25
  44c228:	mov	x0, x23
  44c22c:	add	x4, sp, #0xf0
  44c230:	strb	w5, [sp, #248]
  44c234:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c238:	ldr	x1, [sp, #112]
  44c23c:	ldr	w1, [x1]
  44c240:	cbnz	w1, 44c2f4 <_obstack_memory_used@@Base+0xa104>
  44c244:	str	x0, [sp, #96]
  44c248:	ldrb	w1, [x22, #8]
  44c24c:	cmp	w1, #0xb
  44c250:	cset	w2, eq  // eq = none
  44c254:	cmp	w1, #0x17
  44c258:	cset	w3, eq  // eq = none
  44c25c:	tbz	w27, #24, 44c26c <_obstack_memory_used@@Base+0xa07c>
  44c260:	cmp	w3, #0x0
  44c264:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  44c268:	b.ne	44c810 <_obstack_memory_used@@Base+0xa620>  // b.any
  44c26c:	subs	w0, w1, #0x12
  44c270:	cset	w19, eq  // eq = none
  44c274:	cmp	w3, #0x0
  44c278:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  44c27c:	and	w0, w0, #0xff
  44c280:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  44c284:	b.hi	44c880 <_obstack_memory_used@@Base+0xa690>  // b.pmore
  44c288:	cmp	w1, #0x17
  44c28c:	ldp	x24, x25, [x22]
  44c290:	ldr	x23, [x21, #72]
  44c294:	b.ne	44c110 <_obstack_memory_used@@Base+0x9f20>  // b.any
  44c298:	mov	x2, x27
  44c29c:	mov	x1, x22
  44c2a0:	mov	x0, x21
  44c2a4:	bl	44be20 <_obstack_memory_used@@Base+0x9c30>
  44c2a8:	mov	x19, x0
  44c2ac:	cmn	x0, #0x1
  44c2b0:	b.eq	44c6e8 <_obstack_memory_used@@Base+0xa4f8>  // b.none
  44c2b4:	cmn	x0, #0x2
  44c2b8:	b.eq	44c2d0 <_obstack_memory_used@@Base+0xa0e0>  // b.none
  44c2bc:	ldrb	w0, [x22, #8]
  44c2c0:	cmp	w0, #0x18
  44c2c4:	b.eq	44c7a8 <_obstack_memory_used@@Base+0xa5b8>  // b.none
  44c2c8:	cmp	w0, #0x1
  44c2cc:	b.eq	44c7cc <_obstack_memory_used@@Base+0xa5dc>  // b.none
  44c2d0:	tbz	w27, #21, 44cecc <_obstack_memory_used@@Base+0xacdc>
  44c2d4:	str	x23, [x21, #72]
  44c2d8:	mov	w1, #0x1                   	// #1
  44c2dc:	stp	x24, x25, [x22]
  44c2e0:	strb	w1, [x22, #8]
  44c2e4:	ldr	x1, [sp, #112]
  44c2e8:	ldr	x0, [sp, #96]
  44c2ec:	ldr	w1, [x1]
  44c2f0:	cbz	w1, 44c244 <_obstack_memory_used@@Base+0xa054>
  44c2f4:	cbnz	x0, 44c244 <_obstack_memory_used@@Base+0xa054>
  44c2f8:	b	44c7ec <_obstack_memory_used@@Base+0xa5fc>
  44c2fc:	cmp	w2, #0x9
  44c300:	b.ne	44c4e8 <_obstack_memory_used@@Base+0xa2f8>  // b.any
  44c304:	tbnz	w27, #17, 44c08c <_obstack_memory_used@@Base+0x9e9c>
  44c308:	ldr	x1, [sp, #112]
  44c30c:	mov	w0, #0x10                  	// #16
  44c310:	str	xzr, [sp, #96]
  44c314:	str	w0, [x1]
  44c318:	b	44c050 <_obstack_memory_used@@Base+0x9e60>
  44c31c:	cmp	w2, #0x4
  44c320:	b.eq	44c8c4 <_obstack_memory_used@@Base+0xa6d4>  // b.none
  44c324:	cmp	w2, #0x5
  44c328:	b.ne	44c508 <_obstack_memory_used@@Base+0xa318>  // b.any
  44c32c:	mov	x4, x22
  44c330:	add	x1, x26, #0x80
  44c334:	add	x0, x26, #0x70
  44c338:	mov	x3, #0x0                   	// #0
  44c33c:	mov	x2, #0x0                   	// #0
  44c340:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c344:	str	x0, [sp, #96]
  44c348:	cbz	x0, 44c5e8 <_obstack_memory_used@@Base+0xa3f8>
  44c34c:	ldr	w0, [x26, #180]
  44c350:	stp	x23, x24, [sp, #48]
  44c354:	cmp	w0, #0x1
  44c358:	b.le	44c0b8 <_obstack_memory_used@@Base+0x9ec8>
  44c35c:	ldrb	w0, [x26, #176]
  44c360:	orr	w0, w0, #0x2
  44c364:	strb	w0, [x26, #176]
  44c368:	b	44c0b8 <_obstack_memory_used@@Base+0x9ec8>
  44c36c:	cmp	w2, #0x14
  44c370:	b.ne	44c4e8 <_obstack_memory_used@@Base+0xa2f8>  // b.any
  44c374:	mov	x1, #0x1                   	// #1
  44c378:	mov	x0, #0x20                  	// #32
  44c37c:	str	xzr, [sp, #152]
  44c380:	bl	4044c0 <calloc@plt>
  44c384:	mov	x1, #0x1                   	// #1
  44c388:	mov	x19, x0
  44c38c:	mov	x0, #0x50                  	// #80
  44c390:	bl	4044c0 <calloc@plt>
  44c394:	cmp	x19, #0x0
  44c398:	mov	x20, x0
  44c39c:	cset	w0, eq  // eq = none
  44c3a0:	cmp	x20, #0x0
  44c3a4:	csinc	w0, w0, wzr, ne  // ne = any
  44c3a8:	cbnz	w0, 44cac0 <_obstack_memory_used@@Base+0xa8d0>
  44c3ac:	mov	x1, x21
  44c3b0:	mov	x2, x27
  44c3b4:	mov	x0, x22
  44c3b8:	bl	4423b0 <_obstack_memory_used@@Base+0x1c0>
  44c3bc:	ldrb	w1, [x22, #8]
  44c3c0:	mov	w28, w0
  44c3c4:	cmp	w1, #0x2
  44c3c8:	b.eq	44cee8 <_obstack_memory_used@@Base+0xacf8>  // b.none
  44c3cc:	str	wzr, [sp, #120]
  44c3d0:	cmp	w1, #0x19
  44c3d4:	b.eq	44ca68 <_obstack_memory_used@@Base+0xa878>  // b.none
  44c3d8:	stp	x23, x24, [sp, #48]
  44c3dc:	cmp	w1, #0x15
  44c3e0:	b.ne	44c3ec <_obstack_memory_used@@Base+0xa1fc>  // b.any
  44c3e4:	mov	w0, #0x1                   	// #1
  44c3e8:	strb	w0, [x22, #8]
  44c3ec:	add	x23, sp, #0xd0
  44c3f0:	mov	w5, #0x1                   	// #1
  44c3f4:	mov	w24, #0x3                   	// #3
  44c3f8:	stp	xzr, xzr, [sp, #96]
  44c3fc:	mov	w3, w28
  44c400:	mov	x4, x27
  44c404:	mov	x2, x22
  44c408:	mov	x1, x21
  44c40c:	add	x0, sp, #0xa0
  44c410:	str	w24, [sp, #160]
  44c414:	str	x23, [sp, #168]
  44c418:	bl	44b578 <_obstack_memory_used@@Base+0x9388>
  44c41c:	cbnz	w0, 44ccd0 <_obstack_memory_used@@Base+0xaae0>
  44c420:	mov	x1, x21
  44c424:	mov	x2, x27
  44c428:	mov	x0, x22
  44c42c:	bl	4423b0 <_obstack_memory_used@@Base+0x1c0>
  44c430:	ldr	w1, [sp, #160]
  44c434:	mov	w28, w0
  44c438:	sub	w0, w1, #0x2
  44c43c:	tst	w0, #0xfffffffd
  44c440:	b.eq	44c458 <_obstack_memory_used@@Base+0xa268>  // b.none
  44c444:	ldrb	w0, [x22, #8]
  44c448:	cmp	w0, #0x2
  44c44c:	b.eq	44cba4 <_obstack_memory_used@@Base+0xa9b4>  // b.none
  44c450:	cmp	w0, #0x16
  44c454:	b.eq	44cd0c <_obstack_memory_used@@Base+0xab1c>  // b.none
  44c458:	cmp	w1, #0x2
  44c45c:	b.eq	44cb68 <_obstack_memory_used@@Base+0xa978>  // b.none
  44c460:	b.hi	44cae4 <_obstack_memory_used@@Base+0xa8f4>  // b.pmore
  44c464:	cbz	w1, 44cb84 <_obstack_memory_used@@Base+0xa994>
  44c468:	ldr	x1, [x20, #40]
  44c46c:	ldr	x2, [sp, #96]
  44c470:	ldr	x0, [x20]
  44c474:	cmp	x1, x2
  44c478:	b.eq	44cf90 <_obstack_memory_used@@Base+0xada0>  // b.none
  44c47c:	add	x2, x1, #0x1
  44c480:	str	x2, [x20, #40]
  44c484:	ldr	w2, [sp, #168]
  44c488:	str	w2, [x0, x1, lsl #2]
  44c48c:	ldrb	w0, [x22, #8]
  44c490:	cmp	w0, #0x2
  44c494:	b.eq	44cba4 <_obstack_memory_used@@Base+0xa9b4>  // b.none
  44c498:	cmp	w0, #0x15
  44c49c:	b.eq	44cc00 <_obstack_memory_used@@Base+0xaa10>  // b.none
  44c4a0:	mov	w5, #0x0                   	// #0
  44c4a4:	b	44c3fc <_obstack_memory_used@@Base+0xa20c>
  44c4a8:	cmp	w2, #0x23
  44c4ac:	b.hi	44c5fc <_obstack_memory_used@@Base+0xa40c>  // b.pmore
  44c4b0:	ldr	x1, [x0, #120]
  44c4b4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44c4b8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44c4bc:	add	x3, x3, #0x948
  44c4c0:	add	x2, x2, #0x2d0
  44c4c4:	cset	w4, eq  // eq = none
  44c4c8:	mov	x0, x26
  44c4cc:	bl	447b78 <_obstack_memory_used@@Base+0x5988>
  44c4d0:	ldr	x1, [sp, #112]
  44c4d4:	str	x0, [sp, #96]
  44c4d8:	ldr	w1, [x1]
  44c4dc:	cmp	w1, #0x0
  44c4e0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  44c4e4:	b.ne	44c0b4 <_obstack_memory_used@@Base+0x9ec4>  // b.any
  44c4e8:	str	xzr, [sp, #96]
  44c4ec:	ldp	x19, x20, [sp, #16]
  44c4f0:	ldp	x21, x22, [sp, #32]
  44c4f4:	ldp	x25, x26, [sp, #64]
  44c4f8:	ldp	x27, x28, [sp, #80]
  44c4fc:	ldr	x0, [sp, #96]
  44c500:	ldp	x29, x30, [sp], #272
  44c504:	ret
  44c508:	cmp	w2, #0x1
  44c50c:	b.ne	44c4e8 <_obstack_memory_used@@Base+0xa2f8>  // b.any
  44c510:	add	x20, x26, #0x70
  44c514:	stp	x23, x24, [sp, #48]
  44c518:	add	x23, x26, #0x80
  44c51c:	mov	x0, x20
  44c520:	mov	x1, x23
  44c524:	mov	x4, x22
  44c528:	mov	x3, #0x0                   	// #0
  44c52c:	mov	x2, #0x0                   	// #0
  44c530:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c534:	str	x0, [sp, #96]
  44c538:	cbz	x0, 44c5e4 <_obstack_memory_used@@Base+0xa3f4>
  44c53c:	ldr	w0, [x26, #180]
  44c540:	mov	w24, #0x10                  	// #16
  44c544:	cmp	w0, #0x1
  44c548:	b.le	44c0b8 <_obstack_memory_used@@Base+0x9ec8>
  44c54c:	nop
  44c550:	ldr	x0, [x21, #72]
  44c554:	ldr	x1, [x21, #104]
  44c558:	cmp	x1, x0
  44c55c:	b.le	44c0b8 <_obstack_memory_used@@Base+0x9ec8>
  44c560:	ldr	x1, [x21, #48]
  44c564:	cmp	x0, x1
  44c568:	b.eq	44c0b8 <_obstack_memory_used@@Base+0x9ec8>  // b.none
  44c56c:	ldr	x1, [x21, #16]
  44c570:	ldr	w0, [x1, x0, lsl #2]
  44c574:	cmn	w0, #0x1
  44c578:	b.ne	44c0b8 <_obstack_memory_used@@Base+0x9ec8>  // b.any
  44c57c:	mov	x2, x27
  44c580:	mov	x1, x21
  44c584:	mov	x0, x22
  44c588:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44c58c:	ldr	x6, [x21, #72]
  44c590:	mov	w5, w0
  44c594:	mov	x4, x22
  44c598:	mov	x1, x23
  44c59c:	mov	x3, #0x0                   	// #0
  44c5a0:	mov	x2, #0x0                   	// #0
  44c5a4:	add	x5, x6, w5, sxtw
  44c5a8:	str	x5, [x21, #72]
  44c5ac:	mov	x0, x20
  44c5b0:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c5b4:	mov	x19, x0
  44c5b8:	ldr	x2, [sp, #96]
  44c5bc:	mov	x3, x0
  44c5c0:	add	x4, sp, #0xf0
  44c5c4:	mov	x1, x23
  44c5c8:	mov	x0, x20
  44c5cc:	strb	w24, [sp, #248]
  44c5d0:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c5d4:	str	x0, [sp, #96]
  44c5d8:	cmp	x19, #0x0
  44c5dc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44c5e0:	b.ne	44c550 <_obstack_memory_used@@Base+0xa360>  // b.any
  44c5e4:	ldp	x23, x24, [sp, #48]
  44c5e8:	mov	w0, #0xc                   	// #12
  44c5ec:	ldr	x1, [sp, #112]
  44c5f0:	str	xzr, [sp, #96]
  44c5f4:	str	w0, [x1]
  44c5f8:	b	44c050 <_obstack_memory_used@@Base+0x9e60>
  44c5fc:	cmp	w2, #0x24
  44c600:	b.ne	44c4e8 <_obstack_memory_used@@Base+0xa2f8>  // b.any
  44c604:	ldr	x1, [sp, #112]
  44c608:	mov	w0, #0x5                   	// #5
  44c60c:	str	xzr, [sp, #96]
  44c610:	str	w0, [x1]
  44c614:	b	44c050 <_obstack_memory_used@@Base+0x9e60>
  44c618:	cmp	x19, #0x0
  44c61c:	b.le	44d218 <_obstack_memory_used@@Base+0xb028>
  44c620:	cmp	x19, #0x1
  44c624:	b.eq	44d20c <_obstack_memory_used@@Base+0xb01c>  // b.none
  44c628:	ldr	x28, [sp, #96]
  44c62c:	add	x0, x26, #0x70
  44c630:	add	x24, x26, #0x80
  44c634:	mov	x23, #0x2                   	// #2
  44c638:	mov	x25, x28
  44c63c:	str	x0, [sp, #104]
  44c640:	b	44c650 <_obstack_memory_used@@Base+0xa460>
  44c644:	add	x23, x23, #0x1
  44c648:	cmp	x19, x23
  44c64c:	b.lt	44c860 <_obstack_memory_used@@Base+0xa670>  // b.tstop
  44c650:	mov	x0, x28
  44c654:	mov	x1, x26
  44c658:	bl	444c28 <_obstack_memory_used@@Base+0x2a38>
  44c65c:	mov	x28, x0
  44c660:	mov	x3, x0
  44c664:	mov	w5, #0x10                  	// #16
  44c668:	ldr	x0, [sp, #104]
  44c66c:	mov	x2, x25
  44c670:	add	x4, sp, #0xf0
  44c674:	mov	x1, x24
  44c678:	strb	w5, [sp, #248]
  44c67c:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c680:	mov	x25, x0
  44c684:	cmp	x28, #0x0
  44c688:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44c68c:	b.ne	44c644 <_obstack_memory_used@@Base+0xa454>  // b.any
  44c690:	adrp	x1, 443000 <_obstack_memory_used@@Base+0xe10>
  44c694:	add	x19, x1, #0x750
  44c698:	ldr	x1, [sp, #112]
  44c69c:	mov	w0, #0xc                   	// #12
  44c6a0:	str	w0, [x1]
  44c6a4:	ldr	x0, [sp, #96]
  44c6a8:	mov	x1, x19
  44c6ac:	mov	x2, #0x0                   	// #0
  44c6b0:	str	xzr, [sp, #96]
  44c6b4:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44c6b8:	ldp	x23, x24, [sp, #48]
  44c6bc:	b	44c050 <_obstack_memory_used@@Base+0x9e60>
  44c6c0:	ldr	x2, [x28, #40]
  44c6c4:	mov	x0, x28
  44c6c8:	ldr	x1, [sp, #120]
  44c6cc:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44c6d0:	b	44c15c <_obstack_memory_used@@Base+0x9f6c>
  44c6d4:	ldr	x0, [sp, #112]
  44c6d8:	ldr	w0, [x0]
  44c6dc:	cbnz	w0, 44c7f4 <_obstack_memory_used@@Base+0xa604>
  44c6e0:	str	xzr, [sp, #96]
  44c6e4:	b	44c248 <_obstack_memory_used@@Base+0xa058>
  44c6e8:	ldrb	w0, [x22, #8]
  44c6ec:	cmp	w0, #0x1
  44c6f0:	b.ne	44c7e0 <_obstack_memory_used@@Base+0xa5f0>  // b.any
  44c6f4:	ldrb	w0, [x22]
  44c6f8:	cmp	w0, #0x2c
  44c6fc:	b.ne	44c7e0 <_obstack_memory_used@@Base+0xa5f0>  // b.any
  44c700:	mov	x19, #0x0                   	// #0
  44c704:	mov	x2, x27
  44c708:	mov	x1, x22
  44c70c:	mov	x0, x21
  44c710:	bl	44be20 <_obstack_memory_used@@Base+0x9c30>
  44c714:	mov	x20, x0
  44c718:	cmn	x0, #0x2
  44c71c:	b.eq	44c2d0 <_obstack_memory_used@@Base+0xa0e0>  // b.none
  44c720:	cmp	x19, x0
  44c724:	ccmn	x0, #0x1, #0x4, gt
  44c728:	b.ne	44c7e0 <_obstack_memory_used@@Base+0xa5f0>  // b.any
  44c72c:	ldrb	w0, [x22, #8]
  44c730:	cmp	w0, #0x18
  44c734:	b.ne	44c7e0 <_obstack_memory_used@@Base+0xa5f0>  // b.any
  44c738:	cmn	x20, #0x1
  44c73c:	b.ne	44c7ac <_obstack_memory_used@@Base+0xa5bc>  // b.any
  44c740:	mov	x0, #0x7fff                	// #32767
  44c744:	cmp	x19, x0
  44c748:	cset	x0, gt
  44c74c:	cbnz	x0, 44c7bc <_obstack_memory_used@@Base+0xa5cc>
  44c750:	mov	x1, x21
  44c754:	mov	x2, x27
  44c758:	mov	x0, x22
  44c75c:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44c760:	ldr	x1, [x21, #72]
  44c764:	ldr	x3, [sp, #96]
  44c768:	add	x0, x1, w0, sxtw
  44c76c:	str	x0, [x21, #72]
  44c770:	cbz	x3, 44c6d4 <_obstack_memory_used@@Base+0xa4e4>
  44c774:	orr	x0, x19, x20
  44c778:	cbnz	x0, 44c618 <_obstack_memory_used@@Base+0xa428>
  44c77c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0xe10>
  44c780:	add	x19, x1, #0x750
  44c784:	mov	x1, x19
  44c788:	mov	x0, x3
  44c78c:	mov	x2, #0x0                   	// #0
  44c790:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44c794:	ldr	x0, [sp, #112]
  44c798:	ldr	w0, [x0]
  44c79c:	cbnz	w0, 44c6a4 <_obstack_memory_used@@Base+0xa4b4>
  44c7a0:	str	xzr, [sp, #96]
  44c7a4:	b	44c248 <_obstack_memory_used@@Base+0xa058>
  44c7a8:	mov	x20, x19
  44c7ac:	mov	x0, #0x7fff                	// #32767
  44c7b0:	cmp	x20, x0
  44c7b4:	cset	x0, gt
  44c7b8:	cbz	x0, 44c750 <_obstack_memory_used@@Base+0xa560>
  44c7bc:	ldr	x1, [sp, #112]
  44c7c0:	mov	w0, #0xf                   	// #15
  44c7c4:	str	w0, [x1]
  44c7c8:	b	44c7ec <_obstack_memory_used@@Base+0xa5fc>
  44c7cc:	ldrb	w0, [x22]
  44c7d0:	cmp	w0, #0x2c
  44c7d4:	b.eq	44c704 <_obstack_memory_used@@Base+0xa514>  // b.none
  44c7d8:	tbnz	w27, #21, 44c2d4 <_obstack_memory_used@@Base+0xa0e4>
  44c7dc:	nop
  44c7e0:	ldr	x1, [sp, #112]
  44c7e4:	mov	w0, #0xa                   	// #10
  44c7e8:	str	w0, [x1]
  44c7ec:	ldr	x0, [sp, #96]
  44c7f0:	cbnz	x0, 44d11c <_obstack_memory_used@@Base+0xaf2c>
  44c7f4:	str	xzr, [sp, #96]
  44c7f8:	ldp	x23, x24, [sp, #48]
  44c7fc:	b	44c4ec <_obstack_memory_used@@Base+0xa2fc>
  44c800:	mov	x2, x25
  44c804:	nop
  44c808:	str	x2, [sp, #96]
  44c80c:	b	44c248 <_obstack_memory_used@@Base+0xa058>
  44c810:	ldr	x0, [sp, #96]
  44c814:	cbz	x0, 44c8a0 <_obstack_memory_used@@Base+0xa6b0>
  44c818:	adrp	x1, 443000 <_obstack_memory_used@@Base+0xe10>
  44c81c:	mov	x2, #0x0                   	// #0
  44c820:	add	x1, x1, #0x750
  44c824:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44c828:	ldp	x23, x24, [sp, #48]
  44c82c:	mov	w0, #0xd                   	// #13
  44c830:	ldr	x1, [sp, #112]
  44c834:	str	xzr, [sp, #96]
  44c838:	ldp	x19, x20, [sp, #16]
  44c83c:	str	w0, [x1]
  44c840:	ldp	x21, x22, [sp, #32]
  44c844:	ldp	x25, x26, [sp, #64]
  44c848:	ldp	x27, x28, [sp, #80]
  44c84c:	ldr	x0, [sp, #96]
  44c850:	ldp	x29, x30, [sp], #272
  44c854:	ret
  44c858:	mov	x25, x28
  44c85c:	mov	x19, #0x1                   	// #1
  44c860:	cmp	x20, x19
  44c864:	b.eq	44c800 <_obstack_memory_used@@Base+0xa610>  // b.none
  44c868:	mov	x0, x28
  44c86c:	mov	x1, x26
  44c870:	bl	444c28 <_obstack_memory_used@@Base+0x2a38>
  44c874:	mov	x28, x0
  44c878:	cbnz	x0, 44c150 <_obstack_memory_used@@Base+0x9f60>
  44c87c:	b	44c690 <_obstack_memory_used@@Base+0xa4a0>
  44c880:	ldp	x19, x20, [sp, #16]
  44c884:	ldp	x21, x22, [sp, #32]
  44c888:	ldp	x23, x24, [sp, #48]
  44c88c:	ldp	x25, x26, [sp, #64]
  44c890:	ldp	x27, x28, [sp, #80]
  44c894:	ldr	x0, [sp, #96]
  44c898:	ldp	x29, x30, [sp], #272
  44c89c:	ret
  44c8a0:	ldp	x23, x24, [sp, #48]
  44c8a4:	b	44c82c <_obstack_memory_used@@Base+0xa63c>
  44c8a8:	tbnz	w3, #24, 44c82c <_obstack_memory_used@@Base+0xa63c>
  44c8ac:	tbnz	w27, #5, 44c82c <_obstack_memory_used@@Base+0xa63c>
  44c8b0:	tbnz	w27, #4, 44cbb8 <_obstack_memory_used@@Base+0xa9c8>
  44c8b4:	cmp	w2, #0x9
  44c8b8:	b.ne	44c08c <_obstack_memory_used@@Base+0x9e9c>  // b.any
  44c8bc:	tbnz	w27, #17, 44c08c <_obstack_memory_used@@Base+0x9e9c>
  44c8c0:	b	44c308 <_obstack_memory_used@@Base+0xa118>
  44c8c4:	ldr	x2, [x22]
  44c8c8:	mov	w0, #0x1                   	// #1
  44c8cc:	ldr	x1, [x26, #168]
  44c8d0:	lsl	w0, w0, w2
  44c8d4:	sxtw	x0, w0
  44c8d8:	tst	x0, x1
  44c8dc:	b.eq	44cf18 <_obstack_memory_used@@Base+0xad28>  // b.none
  44c8e0:	ldr	x1, [x26, #160]
  44c8e4:	mov	x4, x22
  44c8e8:	mov	x3, #0x0                   	// #0
  44c8ec:	mov	x2, #0x0                   	// #0
  44c8f0:	orr	x0, x1, x0
  44c8f4:	str	x0, [x26, #160]
  44c8f8:	add	x1, x26, #0x80
  44c8fc:	add	x0, x26, #0x70
  44c900:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c904:	str	x0, [sp, #96]
  44c908:	cbz	x0, 44c5e8 <_obstack_memory_used@@Base+0xa3f8>
  44c90c:	ldr	x1, [x26, #152]
  44c910:	stp	x23, x24, [sp, #48]
  44c914:	ldrb	w0, [x26, #176]
  44c918:	add	x1, x1, #0x1
  44c91c:	str	x1, [x26, #152]
  44c920:	orr	w0, w0, #0x2
  44c924:	strb	w0, [x26, #176]
  44c928:	b	44c0b8 <_obstack_memory_used@@Base+0x9ec8>
  44c92c:	cmp	w2, #0x21
  44c930:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44c934:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44c938:	cset	w4, eq  // eq = none
  44c93c:	add	x3, x3, #0x330
  44c940:	add	x2, x2, #0x2c0
  44c944:	ldr	x1, [x0, #120]
  44c948:	b	44c4c8 <_obstack_memory_used@@Base+0xa2d8>
  44c94c:	ldr	x20, [x19, #48]
  44c950:	orr	x2, x3, #0x800000
  44c954:	mov	x1, x0
  44c958:	mov	x0, x22
  44c95c:	add	x3, x20, #0x1
  44c960:	str	x3, [x19, #48]
  44c964:	str	x4, [sp, #96]
  44c968:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44c96c:	ldr	x3, [x21, #72]
  44c970:	mov	x2, #0x0                   	// #0
  44c974:	ldrb	w1, [x22, #8]
  44c978:	add	x0, x3, w0, sxtw
  44c97c:	str	x0, [x21, #72]
  44c980:	cmp	w1, #0x9
  44c984:	b.ne	44c9c0 <_obstack_memory_used@@Base+0xa7d0>  // b.any
  44c988:	cmp	x20, #0x8
  44c98c:	b.ls	44ca24 <_obstack_memory_used@@Base+0xa834>  // b.plast
  44c990:	mov	w5, #0x11                  	// #17
  44c994:	add	x4, sp, #0xf0
  44c998:	add	x1, x26, #0x80
  44c99c:	add	x0, x26, #0x70
  44c9a0:	mov	x3, #0x0                   	// #0
  44c9a4:	strb	w5, [sp, #248]
  44c9a8:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44c9ac:	str	x0, [sp, #96]
  44c9b0:	cbz	x0, 44c5e8 <_obstack_memory_used@@Base+0xa3f8>
  44c9b4:	stp	x23, x24, [sp, #48]
  44c9b8:	str	x20, [x0, #40]
  44c9bc:	b	44c0b8 <_obstack_memory_used@@Base+0x9ec8>
  44c9c0:	mov	x1, x19
  44c9c4:	mov	x2, x22
  44c9c8:	ldr	x4, [sp, #96]
  44c9cc:	mov	x3, x27
  44c9d0:	ldr	x19, [sp, #112]
  44c9d4:	mov	x0, x21
  44c9d8:	add	x4, x4, #0x1
  44c9dc:	mov	x5, x19
  44c9e0:	bl	44d3d8 <_obstack_memory_used@@Base+0xb1e8>
  44c9e4:	ldr	w1, [x19]
  44c9e8:	mov	x2, x0
  44c9ec:	cbnz	w1, 44c4e8 <_obstack_memory_used@@Base+0xa2f8>
  44c9f0:	ldrb	w1, [x22, #8]
  44c9f4:	cmp	w1, #0x9
  44c9f8:	b.eq	44c988 <_obstack_memory_used@@Base+0xa798>  // b.none
  44c9fc:	cbz	x0, 44ca10 <_obstack_memory_used@@Base+0xa820>
  44ca00:	adrp	x1, 443000 <_obstack_memory_used@@Base+0xe10>
  44ca04:	mov	x2, #0x0                   	// #0
  44ca08:	add	x1, x1, #0x750
  44ca0c:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44ca10:	ldr	x1, [sp, #112]
  44ca14:	mov	w0, #0x8                   	// #8
  44ca18:	str	xzr, [sp, #96]
  44ca1c:	str	w0, [x1]
  44ca20:	b	44c4ec <_obstack_memory_used@@Base+0xa2fc>
  44ca24:	mov	w0, #0x1                   	// #1
  44ca28:	ldr	x1, [x26, #168]
  44ca2c:	lsl	w0, w0, w20
  44ca30:	sxtw	x0, w0
  44ca34:	orr	x0, x1, x0
  44ca38:	str	x0, [x26, #168]
  44ca3c:	b	44c990 <_obstack_memory_used@@Base+0xa7a0>
  44ca40:	mov	x1, x26
  44ca44:	mov	x0, x24
  44ca48:	mov	x4, x22
  44ca4c:	mov	x3, #0x0                   	// #0
  44ca50:	mov	x2, #0x0                   	// #0
  44ca54:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44ca58:	str	x0, [sp, #96]
  44ca5c:	cbnz	x0, 44c030 <_obstack_memory_used@@Base+0x9e40>
  44ca60:	ldp	x23, x24, [sp, #48]
  44ca64:	b	44c5e8 <_obstack_memory_used@@Base+0xa3f8>
  44ca68:	ldrb	w0, [x20, #32]
  44ca6c:	orr	w0, w0, #0x1
  44ca70:	strb	w0, [x20, #32]
  44ca74:	tbz	w27, #8, 44ca84 <_obstack_memory_used@@Base+0xa894>
  44ca78:	ldr	x0, [x19]
  44ca7c:	orr	x0, x0, #0x400
  44ca80:	str	x0, [x19]
  44ca84:	ldr	x3, [x21, #72]
  44ca88:	mov	x1, x21
  44ca8c:	mov	x2, x27
  44ca90:	mov	x0, x22
  44ca94:	add	x7, x3, w28, sxtw
  44ca98:	str	x7, [x21, #72]
  44ca9c:	bl	4423b0 <_obstack_memory_used@@Base+0x1c0>
  44caa0:	mov	w28, w0
  44caa4:	ldrb	w1, [x22, #8]
  44caa8:	cmp	w1, #0x2
  44caac:	b.eq	44cee8 <_obstack_memory_used@@Base+0xacf8>  // b.none
  44cab0:	mov	w0, #0x1                   	// #1
  44cab4:	stp	x23, x24, [sp, #48]
  44cab8:	str	w0, [sp, #120]
  44cabc:	b	44c3dc <_obstack_memory_used@@Base+0xa1ec>
  44cac0:	mov	x0, x19
  44cac4:	str	xzr, [sp, #96]
  44cac8:	bl	4047b0 <free@plt>
  44cacc:	mov	x0, x20
  44cad0:	bl	4047b0 <free@plt>
  44cad4:	ldr	x1, [sp, #112]
  44cad8:	mov	w0, #0xc                   	// #12
  44cadc:	str	w0, [x1]
  44cae0:	b	44c050 <_obstack_memory_used@@Base+0x9e60>
  44cae4:	cmp	w1, #0x3
  44cae8:	b.ne	44cb30 <_obstack_memory_used@@Base+0xa940>  // b.any
  44caec:	ldr	x1, [sp, #168]
  44caf0:	mov	x0, x19
  44caf4:	bl	447390 <_obstack_memory_used@@Base+0x51a0>
  44caf8:	ldr	x1, [sp, #112]
  44cafc:	str	w0, [x1]
  44cb00:	cbz	w0, 44c48c <_obstack_memory_used@@Base+0xa29c>
  44cb04:	ldp	x23, x24, [sp, #48]
  44cb08:	mov	x0, x19
  44cb0c:	bl	4047b0 <free@plt>
  44cb10:	mov	x0, x20
  44cb14:	bl	4436e0 <_obstack_memory_used@@Base+0x14f0>
  44cb18:	ldr	x0, [sp, #112]
  44cb1c:	ldr	w0, [x0]
  44cb20:	cbnz	w0, 44c4e8 <_obstack_memory_used@@Base+0xa2f8>
  44cb24:	stp	x23, x24, [sp, #48]
  44cb28:	str	xzr, [sp, #96]
  44cb2c:	b	44c0b8 <_obstack_memory_used@@Base+0x9ec8>
  44cb30:	cmp	w1, #0x4
  44cb34:	b.ne	44d0f8 <_obstack_memory_used@@Base+0xaf08>  // b.any
  44cb38:	ldr	x0, [x21, #120]
  44cb3c:	mov	x1, x19
  44cb40:	ldr	x5, [sp, #168]
  44cb44:	mov	x6, x27
  44cb48:	add	x4, sp, #0x98
  44cb4c:	add	x3, x20, #0x48
  44cb50:	add	x2, x20, #0x18
  44cb54:	bl	4473f0 <_obstack_memory_used@@Base+0x5200>
  44cb58:	ldr	x1, [sp, #112]
  44cb5c:	str	w0, [x1]
  44cb60:	cbz	w0, 44c48c <_obstack_memory_used@@Base+0xa29c>
  44cb64:	b	44cb04 <_obstack_memory_used@@Base+0xa914>
  44cb68:	ldr	x1, [sp, #168]
  44cb6c:	mov	x0, x19
  44cb70:	bl	447390 <_obstack_memory_used@@Base+0x51a0>
  44cb74:	ldr	x1, [sp, #112]
  44cb78:	str	w0, [x1]
  44cb7c:	cbz	w0, 44c48c <_obstack_memory_used@@Base+0xa29c>
  44cb80:	b	44cb04 <_obstack_memory_used@@Base+0xa914>
  44cb84:	ldrb	w1, [sp, #168]
  44cb88:	mov	x0, #0x1                   	// #1
  44cb8c:	ubfx	x2, x1, #6, #2
  44cb90:	lsl	x1, x0, x1
  44cb94:	ldr	x0, [x19, x2, lsl #3]
  44cb98:	orr	x0, x0, x1
  44cb9c:	str	x0, [x19, x2, lsl #3]
  44cba0:	b	44c48c <_obstack_memory_used@@Base+0xa29c>
  44cba4:	ldr	x1, [sp, #112]
  44cba8:	mov	w0, #0x7                   	// #7
  44cbac:	ldp	x23, x24, [sp, #48]
  44cbb0:	str	w0, [x1]
  44cbb4:	b	44cb08 <_obstack_memory_used@@Base+0xa918>
  44cbb8:	mov	x2, x27
  44cbbc:	mov	x1, x21
  44cbc0:	mov	x0, x22
  44cbc4:	str	x4, [sp, #96]
  44cbc8:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44cbcc:	mov	w6, w0
  44cbd0:	ldr	x7, [x21, #72]
  44cbd4:	mov	x3, x27
  44cbd8:	ldr	x4, [sp, #96]
  44cbdc:	mov	x2, x22
  44cbe0:	ldr	x5, [sp, #112]
  44cbe4:	add	x6, x7, w6, sxtw
  44cbe8:	str	x6, [x21, #72]
  44cbec:	mov	x1, x19
  44cbf0:	mov	x0, x21
  44cbf4:	bl	44bef0 <_obstack_memory_used@@Base+0x9d00>
  44cbf8:	str	x0, [sp, #96]
  44cbfc:	b	44c050 <_obstack_memory_used@@Base+0x9e60>
  44cc00:	ldr	x0, [x21, #72]
  44cc04:	add	x7, x0, w28, sxtw
  44cc08:	ldr	w0, [sp, #120]
  44cc0c:	str	x7, [x21, #72]
  44cc10:	cbz	w0, 44cc30 <_obstack_memory_used@@Base+0xaa40>
  44cc14:	mov	x0, #0x0                   	// #0
  44cc18:	ldr	x1, [x19, x0, lsl #3]
  44cc1c:	mvn	x1, x1
  44cc20:	str	x1, [x19, x0, lsl #3]
  44cc24:	add	x0, x0, #0x1
  44cc28:	cmp	x0, #0x4
  44cc2c:	b.ne	44cc18 <_obstack_memory_used@@Base+0xaa28>  // b.any
  44cc30:	ldr	w2, [x26, #180]
  44cc34:	cmp	w2, #0x1
  44cc38:	b.le	44cc60 <_obstack_memory_used@@Base+0xaa70>
  44cc3c:	ldr	x3, [x26, #120]
  44cc40:	mov	x0, #0x0                   	// #0
  44cc44:	ldr	x1, [x19, x0]
  44cc48:	ldr	x4, [x3, x0]
  44cc4c:	and	x1, x1, x4
  44cc50:	str	x1, [x19, x0]
  44cc54:	add	x0, x0, #0x8
  44cc58:	cmp	x0, #0x20
  44cc5c:	b.ne	44cc44 <_obstack_memory_used@@Base+0xaa54>  // b.any
  44cc60:	ldr	x0, [x20, #40]
  44cc64:	cbnz	x0, 44cf2c <_obstack_memory_used@@Base+0xad3c>
  44cc68:	ldr	x0, [x20, #48]
  44cc6c:	cbnz	x0, 44cf2c <_obstack_memory_used@@Base+0xad3c>
  44cc70:	ldr	x0, [x20, #56]
  44cc74:	cbnz	x0, 44cf2c <_obstack_memory_used@@Base+0xad3c>
  44cc78:	ldr	x0, [x20, #64]
  44cc7c:	cbnz	x0, 44cf2c <_obstack_memory_used@@Base+0xad3c>
  44cc80:	cmp	w2, #0x1
  44cc84:	b.le	44cc98 <_obstack_memory_used@@Base+0xaaa8>
  44cc88:	ldr	x0, [x20, #72]
  44cc8c:	cbnz	x0, 44cf2c <_obstack_memory_used@@Base+0xad3c>
  44cc90:	ldrb	w0, [x20, #32]
  44cc94:	tbnz	w0, #0, 44cf2c <_obstack_memory_used@@Base+0xad3c>
  44cc98:	mov	x0, x20
  44cc9c:	bl	4436e0 <_obstack_memory_used@@Base+0x14f0>
  44cca0:	mov	w5, #0x3                   	// #3
  44cca4:	mov	x4, x23
  44cca8:	add	x1, x26, #0x80
  44ccac:	add	x0, x26, #0x70
  44ccb0:	mov	x3, #0x0                   	// #0
  44ccb4:	mov	x2, #0x0                   	// #0
  44ccb8:	str	x19, [sp, #208]
  44ccbc:	strb	w5, [sp, #216]
  44ccc0:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44ccc4:	str	x0, [sp, #96]
  44ccc8:	cbnz	x0, 44c0b8 <_obstack_memory_used@@Base+0x9ec8>
  44cccc:	mov	w0, #0xc                   	// #12
  44ccd0:	ldr	x1, [sp, #112]
  44ccd4:	str	w0, [x1]
  44ccd8:	b	44cb04 <_obstack_memory_used@@Base+0xa914>
  44ccdc:	mov	w0, #0x6                   	// #6
  44cce0:	str	w0, [x22]
  44cce4:	mov	x1, x26
  44cce8:	mov	x4, x22
  44ccec:	mov	x0, x24
  44ccf0:	mov	x3, #0x0                   	// #0
  44ccf4:	mov	x2, #0x0                   	// #0
  44ccf8:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44ccfc:	mov	w1, #0x9                   	// #9
  44cd00:	mov	x20, x0
  44cd04:	str	w1, [x22]
  44cd08:	b	44bfe0 <_obstack_memory_used@@Base+0x9df0>
  44cd0c:	ldr	x3, [x21, #72]
  44cd10:	mov	x1, x21
  44cd14:	mov	x2, x27
  44cd18:	add	x0, sp, #0xc0
  44cd1c:	add	x3, x3, w28, sxtw
  44cd20:	str	x3, [x21, #72]
  44cd24:	bl	4423b0 <_obstack_memory_used@@Base+0x1c0>
  44cd28:	mov	w3, w0
  44cd2c:	ldrb	w1, [sp, #200]
  44cd30:	cmp	w1, #0x2
  44cd34:	b.eq	44cba4 <_obstack_memory_used@@Base+0xa9b4>  // b.none
  44cd38:	cmp	w1, #0x15
  44cd3c:	b.eq	44cef8 <_obstack_memory_used@@Base+0xad08>  // b.none
  44cd40:	add	x6, sp, #0xf0
  44cd44:	mov	x4, x27
  44cd48:	add	x2, sp, #0xc0
  44cd4c:	mov	x1, x21
  44cd50:	add	x0, sp, #0xb0
  44cd54:	mov	w5, #0x1                   	// #1
  44cd58:	str	w24, [sp, #176]
  44cd5c:	str	x6, [sp, #184]
  44cd60:	bl	44b578 <_obstack_memory_used@@Base+0x9388>
  44cd64:	cbnz	w0, 44ccd0 <_obstack_memory_used@@Base+0xaae0>
  44cd68:	mov	x2, x27
  44cd6c:	mov	x1, x21
  44cd70:	mov	x0, x22
  44cd74:	bl	4423b0 <_obstack_memory_used@@Base+0x1c0>
  44cd78:	ldr	w1, [x26, #180]
  44cd7c:	mov	w28, w0
  44cd80:	ldr	w2, [sp, #160]
  44cd84:	cmp	w1, #0x2
  44cd88:	sub	w0, w2, #0x2
  44cd8c:	csel	x25, x20, xzr, ge  // ge = tcont
  44cd90:	tst	w0, #0xfffffffd
  44cd94:	b.eq	44d004 <_obstack_memory_used@@Base+0xae14>  // b.none
  44cd98:	ldr	w1, [sp, #176]
  44cd9c:	sub	w0, w1, #0x2
  44cda0:	tst	w0, #0xfffffffd
  44cda4:	b.eq	44d004 <_obstack_memory_used@@Base+0xae14>  // b.none
  44cda8:	cmp	w2, #0x3
  44cdac:	cset	w0, eq  // eq = none
  44cdb0:	str	w0, [sp, #128]
  44cdb4:	b.eq	44d180 <_obstack_memory_used@@Base+0xaf90>  // b.none
  44cdb8:	cmp	w1, #0x3
  44cdbc:	b.eq	44d1e4 <_obstack_memory_used@@Base+0xaff4>  // b.none
  44cdc0:	cbnz	w2, 44ceb0 <_obstack_memory_used@@Base+0xacc0>
  44cdc4:	ldrb	w3, [sp, #168]
  44cdc8:	ldr	w0, [sp, #128]
  44cdcc:	cmp	w2, #0x0
  44cdd0:	csinc	w0, w0, wzr, ne  // ne = any
  44cdd4:	cbz	w1, 44d018 <_obstack_memory_used@@Base+0xae28>
  44cdd8:	cmp	w1, #0x3
  44cddc:	b.ne	44cebc <_obstack_memory_used@@Base+0xaccc>  // b.any
  44cde0:	ldr	x2, [sp, #184]
  44cde4:	ldrb	w4, [x2]
  44cde8:	cbz	w0, 44cfe0 <_obstack_memory_used@@Base+0xadf0>
  44cdec:	cbz	x25, 44cfec <_obstack_memory_used@@Base+0xadfc>
  44cdf0:	mov	w0, w3
  44cdf4:	str	w4, [sp, #128]
  44cdf8:	bl	404630 <btowc@plt>
  44cdfc:	mov	w3, w0
  44ce00:	ldr	w1, [sp, #176]
  44ce04:	ldr	w4, [sp, #128]
  44ce08:	cmp	w1, #0x0
  44ce0c:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  44ce10:	b.ne	44cec4 <_obstack_memory_used@@Base+0xacd4>  // b.any
  44ce14:	mov	w0, w4
  44ce18:	str	w3, [sp, #128]
  44ce1c:	bl	404630 <btowc@plt>
  44ce20:	mov	w4, w0
  44ce24:	ldr	w3, [sp, #128]
  44ce28:	cmn	w3, #0x1
  44ce2c:	ccmn	w4, #0x1, #0x4, ne  // ne = any
  44ce30:	b.eq	44cfcc <_obstack_memory_used@@Base+0xaddc>  // b.none
  44ce34:	tst	x27, #0x10000
  44ce38:	ccmp	w4, w3, #0x2, ne  // ne = any
  44ce3c:	b.cc	44d004 <_obstack_memory_used@@Base+0xae14>  // b.lo, b.ul, b.last
  44ce40:	cbz	x25, 44ce6c <_obstack_memory_used@@Base+0xac7c>
  44ce44:	ldr	x0, [x25, #64]
  44ce48:	ldr	x1, [sp, #104]
  44ce4c:	ldr	x2, [x25, #8]
  44ce50:	cmp	x0, x1
  44ce54:	b.eq	44d128 <_obstack_memory_used@@Base+0xaf38>  // b.none
  44ce58:	ldr	x1, [x25, #16]
  44ce5c:	str	w3, [x2, x0, lsl #2]
  44ce60:	add	x2, x0, #0x1
  44ce64:	str	x2, [x25, #64]
  44ce68:	str	w4, [x1, x0, lsl #2]
  44ce6c:	mov	x1, #0x0                   	// #0
  44ce70:	mov	x6, #0x1                   	// #1
  44ce74:	nop
  44ce78:	cmp	w1, w3
  44ce7c:	ccmp	w1, w4, #0x2, cs  // cs = hs, nlast
  44ce80:	b.hi	44ce98 <_obstack_memory_used@@Base+0xaca8>  // b.pmore
  44ce84:	asr	x5, x1, #6
  44ce88:	lsl	x0, x6, x1
  44ce8c:	ldr	x2, [x19, x5, lsl #3]
  44ce90:	orr	x0, x2, x0
  44ce94:	str	x0, [x19, x5, lsl #3]
  44ce98:	add	x1, x1, #0x1
  44ce9c:	cmp	x1, #0x100
  44cea0:	b.ne	44ce78 <_obstack_memory_used@@Base+0xac88>  // b.any
  44cea4:	ldr	x0, [sp, #112]
  44cea8:	str	wzr, [x0]
  44ceac:	b	44c48c <_obstack_memory_used@@Base+0xa29c>
  44ceb0:	ldrb	w0, [sp, #128]
  44ceb4:	mov	w3, #0x0                   	// #0
  44ceb8:	cbz	w1, 44d018 <_obstack_memory_used@@Base+0xae28>
  44cebc:	cbnz	w0, 44d1d8 <_obstack_memory_used@@Base+0xafe8>
  44cec0:	ldr	w3, [sp, #168]
  44cec4:	ldr	w4, [sp, #184]
  44cec8:	b	44ce28 <_obstack_memory_used@@Base+0xac38>
  44cecc:	ldrb	w0, [x22, #8]
  44ced0:	cmp	w0, #0x2
  44ced4:	b.ne	44c7e0 <_obstack_memory_used@@Base+0xa5f0>  // b.any
  44ced8:	ldr	x1, [sp, #112]
  44cedc:	mov	w0, #0x9                   	// #9
  44cee0:	str	w0, [x1]
  44cee4:	b	44c7ec <_obstack_memory_used@@Base+0xa5fc>
  44cee8:	ldr	x1, [sp, #112]
  44ceec:	mov	w0, #0x2                   	// #2
  44cef0:	str	w0, [x1]
  44cef4:	b	44cb08 <_obstack_memory_used@@Base+0xa918>
  44cef8:	ldr	x3, [x21, #72]
  44cefc:	neg	w0, w28
  44cf00:	mov	w2, #0x1                   	// #1
  44cf04:	ldr	w1, [sp, #160]
  44cf08:	add	x0, x3, w0, sxtw
  44cf0c:	str	x0, [x21, #72]
  44cf10:	strb	w2, [x22, #8]
  44cf14:	b	44c458 <_obstack_memory_used@@Base+0xa268>
  44cf18:	ldr	x1, [sp, #112]
  44cf1c:	mov	w0, #0x6                   	// #6
  44cf20:	str	xzr, [sp, #96]
  44cf24:	str	w0, [x1]
  44cf28:	b	44c050 <_obstack_memory_used@@Base+0x9e60>
  44cf2c:	ldrb	w1, [x26, #176]
  44cf30:	mov	w5, #0x6                   	// #6
  44cf34:	add	x24, x26, #0x70
  44cf38:	add	x25, x26, #0x80
  44cf3c:	orr	w1, w1, #0x2
  44cf40:	strb	w1, [x26, #176]
  44cf44:	mov	x2, #0x0                   	// #0
  44cf48:	mov	x0, x24
  44cf4c:	mov	x1, x25
  44cf50:	mov	x4, x23
  44cf54:	mov	x3, #0x0                   	// #0
  44cf58:	str	x20, [sp, #208]
  44cf5c:	strb	w5, [sp, #216]
  44cf60:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44cf64:	str	x0, [sp, #96]
  44cf68:	mov	x2, #0x0                   	// #0
  44cf6c:	cbz	x0, 44cccc <_obstack_memory_used@@Base+0xaadc>
  44cf70:	ldr	x0, [x19, x2, lsl #3]
  44cf74:	cbnz	x0, 44d020 <_obstack_memory_used@@Base+0xae30>
  44cf78:	add	x2, x2, #0x1
  44cf7c:	cmp	x2, #0x4
  44cf80:	b.ne	44cf70 <_obstack_memory_used@@Base+0xad80>  // b.any
  44cf84:	mov	x0, x19
  44cf88:	bl	4047b0 <free@plt>
  44cf8c:	b	44c0b8 <_obstack_memory_used@@Base+0x9ec8>
  44cf90:	lsl	x1, x2, #1
  44cf94:	add	x1, x1, #0x1
  44cf98:	str	x1, [sp, #96]
  44cf9c:	lsl	x1, x1, #2
  44cfa0:	bl	404530 <realloc@plt>
  44cfa4:	cbz	x0, 44cccc <_obstack_memory_used@@Base+0xaadc>
  44cfa8:	str	x0, [x20]
  44cfac:	ldr	x1, [x20, #40]
  44cfb0:	b	44c47c <_obstack_memory_used@@Base+0xa28c>
  44cfb4:	ldr	x0, [sp, #184]
  44cfb8:	stp	w2, w1, [sp, #136]
  44cfbc:	bl	403ff0 <strlen@plt>
  44cfc0:	cmp	x0, #0x1
  44cfc4:	ldp	w2, w1, [sp, #136]
  44cfc8:	b.ls	44d1a0 <_obstack_memory_used@@Base+0xafb0>  // b.plast
  44cfcc:	ldr	x1, [sp, #112]
  44cfd0:	mov	w0, #0x3                   	// #3
  44cfd4:	ldp	x23, x24, [sp, #48]
  44cfd8:	str	w0, [x1]
  44cfdc:	b	44cb08 <_obstack_memory_used@@Base+0xa918>
  44cfe0:	ldr	w3, [sp, #168]
  44cfe4:	cbnz	x25, 44ce14 <_obstack_memory_used@@Base+0xac24>
  44cfe8:	b	44ce28 <_obstack_memory_used@@Base+0xac38>
  44cfec:	cmp	w1, #0x0
  44cff0:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  44cff4:	b.ne	44cec4 <_obstack_memory_used@@Base+0xacd4>  // b.any
  44cff8:	tst	x27, #0x10000
  44cffc:	ccmp	w4, w3, #0x2, ne  // ne = any
  44d000:	b.cs	44ce6c <_obstack_memory_used@@Base+0xac7c>  // b.hs, b.nlast
  44d004:	ldr	x1, [sp, #112]
  44d008:	mov	w0, #0xb                   	// #11
  44d00c:	ldp	x23, x24, [sp, #48]
  44d010:	str	w0, [x1]
  44d014:	b	44cb08 <_obstack_memory_used@@Base+0xa918>
  44d018:	ldrb	w4, [sp, #184]
  44d01c:	b	44cde8 <_obstack_memory_used@@Base+0xabf8>
  44d020:	mov	w5, #0x3                   	// #3
  44d024:	mov	x2, #0x0                   	// #0
  44d028:	mov	x4, x23
  44d02c:	mov	x1, x25
  44d030:	mov	x0, x24
  44d034:	mov	x3, #0x0                   	// #0
  44d038:	str	x19, [sp, #208]
  44d03c:	strb	w5, [sp, #216]
  44d040:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44d044:	mov	x2, x0
  44d048:	cbz	x0, 44cccc <_obstack_memory_used@@Base+0xaadc>
  44d04c:	ldr	x3, [sp, #96]
  44d050:	mov	w5, #0xa                   	// #10
  44d054:	mov	x1, x25
  44d058:	mov	x0, x24
  44d05c:	add	x4, sp, #0xf0
  44d060:	strb	w5, [sp, #248]
  44d064:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44d068:	str	x0, [sp, #96]
  44d06c:	cbnz	x0, 44c0b8 <_obstack_memory_used@@Base+0x9ec8>
  44d070:	mov	w0, #0xc                   	// #12
  44d074:	b	44ccd0 <_obstack_memory_used@@Base+0xaae0>
  44d078:	mov	w20, #0x80                  	// #128
  44d07c:	mov	w19, #0x2                   	// #2
  44d080:	bl	404740 <__ctype_b_loc@plt>
  44d084:	ldr	x5, [x0]
  44d088:	sxtw	x3, w19
  44d08c:	add	x4, x26, #0xb8
  44d090:	mov	x6, #0x1                   	// #1
  44d094:	add	x5, x5, w20, sxtw #1
  44d098:	mov	x0, #0x0                   	// #0
  44d09c:	nop
  44d0a0:	ldrh	w1, [x5, x0, lsl #1]
  44d0a4:	add	w2, w20, w0
  44d0a8:	cmp	w2, #0x5f
  44d0ac:	and	w1, w1, #0x8
  44d0b0:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  44d0b4:	b.eq	44d0c8 <_obstack_memory_used@@Base+0xaed8>  // b.none
  44d0b8:	ldr	x1, [x4, x3, lsl #3]
  44d0bc:	lsl	x2, x6, x0
  44d0c0:	orr	x1, x1, x2
  44d0c4:	str	x1, [x4, x3, lsl #3]
  44d0c8:	add	x0, x0, #0x1
  44d0cc:	cmp	x0, #0x40
  44d0d0:	b.ne	44d0a0 <_obstack_memory_used@@Base+0xaeb0>  // b.any
  44d0d4:	add	x3, x3, #0x1
  44d0d8:	add	w20, w20, #0x40
  44d0dc:	cmp	w3, #0x3
  44d0e0:	add	x5, x5, #0x80
  44d0e4:	b.le	44d098 <_obstack_memory_used@@Base+0xaea8>
  44d0e8:	b	44bf98 <_obstack_memory_used@@Base+0x9da8>
  44d0ec:	mov	w20, #0x0                   	// #0
  44d0f0:	mov	w19, #0x0                   	// #0
  44d0f4:	b	44d080 <_obstack_memory_used@@Base+0xae90>
  44d0f8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44d0fc:	add	x3, x3, #0x4a0
  44d100:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44d104:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  44d108:	add	x3, x3, #0x40
  44d10c:	add	x1, x1, #0x320
  44d110:	add	x0, x0, #0x6e0
  44d114:	mov	w2, #0xced                 	// #3309
  44d118:	bl	404ac0 <__assert_fail@plt>
  44d11c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0xe10>
  44d120:	add	x19, x1, #0x750
  44d124:	b	44c6a4 <_obstack_memory_used@@Base+0xa4b4>
  44d128:	lsl	x1, x1, #1
  44d12c:	mov	x0, x2
  44d130:	add	x1, x1, #0x1
  44d134:	str	x1, [sp, #104]
  44d138:	stp	w4, w3, [sp, #136]
  44d13c:	lsl	x1, x1, #2
  44d140:	str	x1, [sp, #128]
  44d144:	bl	404530 <realloc@plt>
  44d148:	mov	x2, x0
  44d14c:	ldr	x0, [x25, #16]
  44d150:	ldr	x1, [sp, #128]
  44d154:	str	x2, [sp, #128]
  44d158:	bl	404530 <realloc@plt>
  44d15c:	mov	x1, x0
  44d160:	ldr	x2, [sp, #128]
  44d164:	ldp	w4, w3, [sp, #136]
  44d168:	cmp	x2, #0x0
  44d16c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44d170:	b.eq	44d1ac <_obstack_memory_used@@Base+0xafbc>  // b.none
  44d174:	stp	x2, x1, [x25, #8]
  44d178:	ldr	x0, [x25, #64]
  44d17c:	b	44ce58 <_obstack_memory_used@@Base+0xac68>
  44d180:	ldr	x0, [sp, #168]
  44d184:	stp	w2, w1, [sp, #136]
  44d188:	bl	403ff0 <strlen@plt>
  44d18c:	cmp	x0, #0x1
  44d190:	ldp	w2, w1, [sp, #136]
  44d194:	b.hi	44cfcc <_obstack_memory_used@@Base+0xaddc>  // b.pmore
  44d198:	cmp	w1, #0x3
  44d19c:	b.eq	44cfb4 <_obstack_memory_used@@Base+0xadc4>  // b.none
  44d1a0:	ldr	x0, [sp, #168]
  44d1a4:	ldrb	w3, [x0]
  44d1a8:	b	44cdc8 <_obstack_memory_used@@Base+0xabd8>
  44d1ac:	mov	x0, x2
  44d1b0:	str	x1, [sp, #96]
  44d1b4:	bl	4047b0 <free@plt>
  44d1b8:	ldr	x1, [sp, #96]
  44d1bc:	mov	x0, x1
  44d1c0:	bl	4047b0 <free@plt>
  44d1c4:	ldr	x1, [sp, #112]
  44d1c8:	mov	w0, #0xc                   	// #12
  44d1cc:	ldp	x23, x24, [sp, #48]
  44d1d0:	str	w0, [x1]
  44d1d4:	b	44cb08 <_obstack_memory_used@@Base+0xa918>
  44d1d8:	cbz	x25, 44cec4 <_obstack_memory_used@@Base+0xacd4>
  44d1dc:	mov	w4, #0x0                   	// #0
  44d1e0:	b	44cdf0 <_obstack_memory_used@@Base+0xac00>
  44d1e4:	ldr	x0, [sp, #184]
  44d1e8:	stp	w2, w1, [sp, #136]
  44d1ec:	bl	403ff0 <strlen@plt>
  44d1f0:	cmp	x0, #0x1
  44d1f4:	b.hi	44cfcc <_obstack_memory_used@@Base+0xaddc>  // b.pmore
  44d1f8:	ldp	w2, w1, [sp, #136]
  44d1fc:	cbz	w2, 44cdc4 <_obstack_memory_used@@Base+0xabd4>
  44d200:	ldrb	w0, [sp, #128]
  44d204:	mov	w3, #0x0                   	// #0
  44d208:	b	44cde0 <_obstack_memory_used@@Base+0xabf0>
  44d20c:	ldr	x28, [sp, #96]
  44d210:	mov	x25, x28
  44d214:	b	44c860 <_obstack_memory_used@@Base+0xa670>
  44d218:	mov	x25, #0x0                   	// #0
  44d21c:	ldr	x28, [sp, #96]
  44d220:	b	44c150 <_obstack_memory_used@@Base+0x9f60>
  44d224:	nop
  44d228:	stp	x29, x30, [sp, #-128]!
  44d22c:	mov	x29, sp
  44d230:	stp	x27, x28, [sp, #80]
  44d234:	mov	x27, x5
  44d238:	stp	x19, x20, [sp, #16]
  44d23c:	mov	x20, x1
  44d240:	stp	x21, x22, [sp, #32]
  44d244:	mov	x22, x0
  44d248:	mov	x21, x4
  44d24c:	stp	x23, x24, [sp, #48]
  44d250:	mov	x23, x3
  44d254:	stp	x25, x26, [sp, #64]
  44d258:	mov	x26, x2
  44d25c:	ldr	x25, [x1]
  44d260:	bl	44bef0 <_obstack_memory_used@@Base+0x9d00>
  44d264:	ldr	w1, [x27]
  44d268:	cmp	w1, #0x0
  44d26c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  44d270:	b.eq	44d3cc <_obstack_memory_used@@Base+0xb1dc>  // b.none
  44d274:	ldrb	w6, [x26, #8]
  44d278:	mov	x28, x0
  44d27c:	and	w0, w6, #0xfffffff7
  44d280:	cmp	w0, #0x2
  44d284:	b.eq	44d338 <_obstack_memory_used@@Base+0xb148>  // b.none
  44d288:	cmp	x21, #0x0
  44d28c:	add	x0, x25, #0x80
  44d290:	cset	w24, eq  // eq = none
  44d294:	add	x25, x25, #0x70
  44d298:	str	x0, [sp, #104]
  44d29c:	b	44d2b8 <_obstack_memory_used@@Base+0xb0c8>
  44d2a0:	ldrb	w6, [x26, #8]
  44d2a4:	cmp	x28, #0x0
  44d2a8:	csel	x28, x28, x0, ne  // ne = any
  44d2ac:	and	w0, w6, #0xfffffff7
  44d2b0:	cmp	w0, #0x2
  44d2b4:	b.eq	44d338 <_obstack_memory_used@@Base+0xb148>  // b.none
  44d2b8:	cmp	w24, #0x0
  44d2bc:	mov	x5, x27
  44d2c0:	mov	x4, x21
  44d2c4:	mov	x3, x23
  44d2c8:	mov	x2, x26
  44d2cc:	mov	x1, x20
  44d2d0:	mov	x0, x22
  44d2d4:	ccmp	w6, #0x9, #0x0, eq  // eq = none
  44d2d8:	b.eq	44d338 <_obstack_memory_used@@Base+0xb148>  // b.none
  44d2dc:	bl	44bef0 <_obstack_memory_used@@Base+0x9d00>
  44d2e0:	mov	x19, x0
  44d2e4:	ldr	w1, [x27]
  44d2e8:	cmp	w1, #0x0
  44d2ec:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  44d2f0:	b.eq	44d358 <_obstack_memory_used@@Base+0xb168>  // b.none
  44d2f4:	cmp	x28, #0x0
  44d2f8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44d2fc:	b.eq	44d2a0 <_obstack_memory_used@@Base+0xb0b0>  // b.none
  44d300:	ldr	x1, [sp, #104]
  44d304:	mov	w5, #0x10                  	// #16
  44d308:	mov	x3, x0
  44d30c:	add	x4, sp, #0x70
  44d310:	mov	x2, x28
  44d314:	mov	x0, x25
  44d318:	strb	w5, [sp, #120]
  44d31c:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44d320:	cbz	x0, 44d378 <_obstack_memory_used@@Base+0xb188>
  44d324:	ldrb	w6, [x26, #8]
  44d328:	mov	x28, x0
  44d32c:	and	w0, w6, #0xfffffff7
  44d330:	cmp	w0, #0x2
  44d334:	b.ne	44d2b8 <_obstack_memory_used@@Base+0xb0c8>  // b.any
  44d338:	mov	x0, x28
  44d33c:	ldp	x19, x20, [sp, #16]
  44d340:	ldp	x21, x22, [sp, #32]
  44d344:	ldp	x23, x24, [sp, #48]
  44d348:	ldp	x25, x26, [sp, #64]
  44d34c:	ldp	x27, x28, [sp, #80]
  44d350:	ldp	x29, x30, [sp], #128
  44d354:	ret
  44d358:	cbz	x28, 44d3cc <_obstack_memory_used@@Base+0xb1dc>
  44d35c:	mov	x0, x28
  44d360:	adrp	x1, 443000 <_obstack_memory_used@@Base+0xe10>
  44d364:	mov	x2, #0x0                   	// #0
  44d368:	add	x1, x1, #0x750
  44d36c:	mov	x28, #0x0                   	// #0
  44d370:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44d374:	b	44d338 <_obstack_memory_used@@Base+0xb148>
  44d378:	adrp	x20, 443000 <_obstack_memory_used@@Base+0xe10>
  44d37c:	add	x20, x20, #0x750
  44d380:	mov	x1, x20
  44d384:	mov	x0, x19
  44d388:	mov	x2, #0x0                   	// #0
  44d38c:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44d390:	mov	x1, x20
  44d394:	mov	x0, x28
  44d398:	mov	x2, #0x0                   	// #0
  44d39c:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44d3a0:	mov	w0, #0xc                   	// #12
  44d3a4:	str	w0, [x27]
  44d3a8:	mov	x28, #0x0                   	// #0
  44d3ac:	mov	x0, x28
  44d3b0:	ldp	x19, x20, [sp, #16]
  44d3b4:	ldp	x21, x22, [sp, #32]
  44d3b8:	ldp	x23, x24, [sp, #48]
  44d3bc:	ldp	x25, x26, [sp, #64]
  44d3c0:	ldp	x27, x28, [sp, #80]
  44d3c4:	ldp	x29, x30, [sp], #128
  44d3c8:	ret
  44d3cc:	mov	x28, #0x0                   	// #0
  44d3d0:	b	44d338 <_obstack_memory_used@@Base+0xb148>
  44d3d4:	nop
  44d3d8:	stp	x29, x30, [sp, #-128]!
  44d3dc:	mov	x29, sp
  44d3e0:	stp	x19, x20, [sp, #16]
  44d3e4:	mov	x20, x5
  44d3e8:	ldr	x19, [x1]
  44d3ec:	stp	x21, x22, [sp, #32]
  44d3f0:	mov	x22, x1
  44d3f4:	mov	x21, x4
  44d3f8:	stp	x23, x24, [sp, #48]
  44d3fc:	mov	x23, x3
  44d400:	ldr	x6, [x19, #168]
  44d404:	stp	x25, x26, [sp, #64]
  44d408:	mov	x26, x0
  44d40c:	mov	x25, x2
  44d410:	stp	x27, x28, [sp, #80]
  44d414:	str	x6, [sp, #104]
  44d418:	bl	44d228 <_obstack_memory_used@@Base+0xb038>
  44d41c:	ldr	w1, [x20]
  44d420:	cmp	w1, #0x0
  44d424:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  44d428:	b.eq	44d560 <_obstack_memory_used@@Base+0xb370>  // b.none
  44d42c:	mov	x28, x0
  44d430:	orr	x24, x23, #0x800000
  44d434:	add	x0, x19, #0x80
  44d438:	str	x0, [sp, #96]
  44d43c:	b	44d4a0 <_obstack_memory_used@@Base+0xb2b0>
  44d440:	cmp	x21, #0x0
  44d444:	ccmp	w10, #0x9, #0x0, ne  // ne = any
  44d448:	b.eq	44d4f4 <_obstack_memory_used@@Base+0xb304>  // b.none
  44d44c:	ldr	x6, [sp, #104]
  44d450:	ldr	x27, [x19, #168]
  44d454:	str	x6, [x19, #168]
  44d458:	bl	44d228 <_obstack_memory_used@@Base+0xb038>
  44d45c:	mov	x3, x0
  44d460:	ldr	w1, [x20]
  44d464:	cmp	w1, #0x0
  44d468:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  44d46c:	b.eq	44d4fc <_obstack_memory_used@@Base+0xb30c>  // b.none
  44d470:	ldr	x0, [x19, #168]
  44d474:	orr	x27, x0, x27
  44d478:	str	x27, [x19, #168]
  44d47c:	ldr	x1, [sp, #96]
  44d480:	mov	w5, #0xa                   	// #10
  44d484:	mov	x2, x28
  44d488:	add	x4, sp, #0x70
  44d48c:	add	x0, x19, #0x70
  44d490:	strb	w5, [sp, #120]
  44d494:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44d498:	mov	x28, x0
  44d49c:	cbz	x0, 44d538 <_obstack_memory_used@@Base+0xb348>
  44d4a0:	ldrb	w3, [x25, #8]
  44d4a4:	mov	x2, x24
  44d4a8:	mov	x1, x26
  44d4ac:	mov	x0, x25
  44d4b0:	cmp	w3, #0xa
  44d4b4:	b.ne	44d518 <_obstack_memory_used@@Base+0xb328>  // b.any
  44d4b8:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44d4bc:	mov	w9, w0
  44d4c0:	ldr	x11, [x26, #72]
  44d4c4:	mov	x5, x20
  44d4c8:	ldrb	w10, [x25, #8]
  44d4cc:	mov	x4, x21
  44d4d0:	mov	x3, x23
  44d4d4:	mov	x2, x25
  44d4d8:	add	x9, x11, w9, sxtw
  44d4dc:	str	x9, [x26, #72]
  44d4e0:	and	w9, w10, #0xfffffff7
  44d4e4:	mov	x1, x22
  44d4e8:	mov	x0, x26
  44d4ec:	cmp	w9, #0x2
  44d4f0:	b.ne	44d440 <_obstack_memory_used@@Base+0xb250>  // b.any
  44d4f4:	mov	x3, #0x0                   	// #0
  44d4f8:	b	44d47c <_obstack_memory_used@@Base+0xb28c>
  44d4fc:	cbz	x28, 44d560 <_obstack_memory_used@@Base+0xb370>
  44d500:	mov	x0, x28
  44d504:	adrp	x1, 443000 <_obstack_memory_used@@Base+0xe10>
  44d508:	mov	x2, #0x0                   	// #0
  44d50c:	add	x1, x1, #0x750
  44d510:	mov	x28, #0x0                   	// #0
  44d514:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44d518:	mov	x0, x28
  44d51c:	ldp	x19, x20, [sp, #16]
  44d520:	ldp	x21, x22, [sp, #32]
  44d524:	ldp	x23, x24, [sp, #48]
  44d528:	ldp	x25, x26, [sp, #64]
  44d52c:	ldp	x27, x28, [sp, #80]
  44d530:	ldp	x29, x30, [sp], #128
  44d534:	ret
  44d538:	mov	w0, #0xc                   	// #12
  44d53c:	str	w0, [x20]
  44d540:	mov	x0, x28
  44d544:	ldp	x19, x20, [sp, #16]
  44d548:	ldp	x21, x22, [sp, #32]
  44d54c:	ldp	x23, x24, [sp, #48]
  44d550:	ldp	x25, x26, [sp, #64]
  44d554:	ldp	x27, x28, [sp, #80]
  44d558:	ldp	x29, x30, [sp], #128
  44d55c:	ret
  44d560:	mov	x28, #0x0                   	// #0
  44d564:	b	44d518 <_obstack_memory_used@@Base+0xb328>
  44d568:	stp	x29, x30, [sp, #-320]!
  44d56c:	mov	x29, sp
  44d570:	stp	x21, x22, [sp, #32]
  44d574:	mov	x21, x0
  44d578:	mov	x22, x1
  44d57c:	stp	x19, x20, [sp, #16]
  44d580:	mov	x20, x2
  44d584:	ldrb	w0, [x0, #56]
  44d588:	ldp	x19, x1, [x21]
  44d58c:	stp	x23, x24, [sp, #48]
  44d590:	mov	x24, x3
  44d594:	mov	w3, #0xffffff90            	// #-112
  44d598:	and	w0, w0, w3
  44d59c:	stp	xzr, x24, [x21, #16]
  44d5a0:	str	xzr, [x21, #48]
  44d5a4:	cmp	x1, #0xe7
  44d5a8:	strb	w0, [x21, #56]
  44d5ac:	str	wzr, [sp, #124]
  44d5b0:	b.ls	44e224 <_obstack_memory_used@@Base+0xc034>  // b.plast
  44d5b4:	mov	x2, #0xe8                  	// #232
  44d5b8:	str	x2, [x21, #16]
  44d5bc:	mov	x0, x19
  44d5c0:	mov	w1, #0x0                   	// #0
  44d5c4:	bl	404410 <memset@plt>
  44d5c8:	mov	w0, #0xf                   	// #15
  44d5cc:	str	w0, [x19, #128]
  44d5d0:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  44d5d4:	movk	x0, #0x555, lsl #48
  44d5d8:	cmp	x20, x0
  44d5dc:	b.cs	44db44 <_obstack_memory_used@@Base+0xb954>  // b.hs, b.nlast
  44d5e0:	stp	x25, x26, [sp, #64]
  44d5e4:	add	x25, x20, #0x1
  44d5e8:	str	x25, [x19, #8]
  44d5ec:	lsl	x0, x25, #4
  44d5f0:	bl	404310 <malloc@plt>
  44d5f4:	str	x0, [x19]
  44d5f8:	cbz	x20, 44e244 <_obstack_memory_used@@Base+0xc054>
  44d5fc:	mov	x1, #0x1                   	// #1
  44d600:	lsl	x1, x1, #1
  44d604:	cmp	x20, x1
  44d608:	b.cs	44d600 <_obstack_memory_used@@Base+0xb410>  // b.hs, b.nlast
  44d60c:	sub	x23, x1, #0x1
  44d610:	mov	x0, #0x18                  	// #24
  44d614:	bl	4044c0 <calloc@plt>
  44d618:	str	x0, [x19, #64]
  44d61c:	str	x23, [x19, #136]
  44d620:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  44d624:	str	w0, [x19, #180]
  44d628:	mov	w0, #0xe                   	// #14
  44d62c:	bl	4042d0 <nl_langinfo@plt>
  44d630:	ldrb	w1, [x0]
  44d634:	and	w1, w1, #0xffffffdf
  44d638:	and	w1, w1, #0xff
  44d63c:	cmp	w1, #0x55
  44d640:	b.ne	44d6a0 <_obstack_memory_used@@Base+0xb4b0>  // b.any
  44d644:	ldrb	w1, [x0, #1]
  44d648:	and	w1, w1, #0xffffffdf
  44d64c:	and	w1, w1, #0xff
  44d650:	cmp	w1, #0x54
  44d654:	b.ne	44d6a0 <_obstack_memory_used@@Base+0xb4b0>  // b.any
  44d658:	ldrb	w1, [x0, #2]
  44d65c:	and	w1, w1, #0xffffffdf
  44d660:	and	w1, w1, #0xff
  44d664:	cmp	w1, #0x46
  44d668:	b.ne	44d6a0 <_obstack_memory_used@@Base+0xb4b0>  // b.any
  44d66c:	ldrb	w1, [x0, #3]
  44d670:	cmp	w1, #0x2d
  44d674:	cset	x1, eq  // eq = none
  44d678:	add	x1, x1, #0x3
  44d67c:	add	x2, x0, x1
  44d680:	ldrb	w0, [x0, x1]
  44d684:	cmp	w0, #0x38
  44d688:	b.ne	44d6a0 <_obstack_memory_used@@Base+0xb4b0>  // b.any
  44d68c:	ldrb	w0, [x2, #1]
  44d690:	cbnz	w0, 44d6a0 <_obstack_memory_used@@Base+0xb4b0>
  44d694:	ldrb	w0, [x19, #176]
  44d698:	orr	w0, w0, #0x4
  44d69c:	strb	w0, [x19, #176]
  44d6a0:	ldrb	w0, [x19, #176]
  44d6a4:	ldr	w1, [x19, #180]
  44d6a8:	and	w2, w0, #0xfffffff7
  44d6ac:	strb	w2, [x19, #176]
  44d6b0:	cmp	w1, #0x1
  44d6b4:	b.le	44d6c8 <_obstack_memory_used@@Base+0xb4d8>
  44d6b8:	tbz	w0, #2, 44db70 <_obstack_memory_used@@Base+0xb980>
  44d6bc:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44d6c0:	add	x0, x0, #0x4a0
  44d6c4:	str	x0, [x19, #120]
  44d6c8:	ldr	x0, [x19]
  44d6cc:	cbz	x0, 44db40 <_obstack_memory_used@@Base+0xb950>
  44d6d0:	ldr	x0, [x19, #64]
  44d6d4:	cbz	x0, 44db40 <_obstack_memory_used@@Base+0xb950>
  44d6d8:	stp	xzr, xzr, [sp, #208]
  44d6dc:	ands	x23, x24, #0x400000
  44d6e0:	cset	w6, ne  // ne = any
  44d6e4:	stp	xzr, xzr, [sp, #224]
  44d6e8:	stp	xzr, xzr, [sp, #240]
  44d6ec:	stp	xzr, xzr, [sp, #256]
  44d6f0:	stp	xzr, xzr, [sp, #272]
  44d6f4:	stp	xzr, xzr, [sp, #288]
  44d6f8:	stp	xzr, xzr, [sp, #304]
  44d6fc:	ldr	x4, [x21, #40]
  44d700:	str	wzr, [sp, #124]
  44d704:	ldrb	w1, [x19, #176]
  44d708:	orr	x26, x4, x23
  44d70c:	ldr	w2, [x19, #180]
  44d710:	cmp	x26, #0x0
  44d714:	str	x22, [sp, #168]
  44d718:	ubfx	x5, x1, #2, #1
  44d71c:	cset	w3, ne  // ne = any
  44d720:	ubfx	x1, x1, #3, #1
  44d724:	stp	xzr, xzr, [sp, #176]
  44d728:	stp	xzr, xzr, [sp, #192]
  44d72c:	stp	x20, x20, [sp, #248]
  44d730:	stp	x20, x20, [sp, #264]
  44d734:	str	x4, [sp, #288]
  44d738:	strb	w6, [sp, #304]
  44d73c:	strb	w5, [sp, #305]
  44d740:	strb	w1, [sp, #306]
  44d744:	strb	w3, [sp, #307]
  44d748:	str	w2, [sp, #312]
  44d74c:	cbnz	x20, 44db24 <_obstack_memory_used@@Base+0xb934>
  44d750:	ldr	x0, [sp, #176]
  44d754:	cmp	w3, #0x0
  44d758:	csel	x22, x0, x22, ne  // ne = any
  44d75c:	str	x22, [sp, #176]
  44d760:	cmp	w2, #0x1
  44d764:	cbz	x23, 44d818 <_obstack_memory_used@@Base+0xb628>
  44d768:	b.le	44e214 <_obstack_memory_used@@Base+0xc024>
  44d76c:	add	x0, sp, #0xa8
  44d770:	bl	442ef0 <_obstack_memory_used@@Base+0xd00>
  44d774:	cbnz	w0, 44d7b0 <_obstack_memory_used@@Base+0xb5c0>
  44d778:	ldr	x0, [sp, #224]
  44d77c:	cmp	x20, x0
  44d780:	b.le	44e2ac <_obstack_memory_used@@Base+0xc0bc>
  44d784:	ldr	x2, [sp, #216]
  44d788:	ldrsw	x0, [x19, #180]
  44d78c:	ldr	x1, [sp, #232]
  44d790:	add	x0, x0, x2
  44d794:	cmp	x1, x0
  44d798:	b.gt	44e2ac <_obstack_memory_used@@Base+0xc0bc>
  44d79c:	lsl	x1, x1, #1
  44d7a0:	add	x0, sp, #0xa8
  44d7a4:	bl	442910 <_obstack_memory_used@@Base+0x720>
  44d7a8:	cbz	w0, 44d76c <_obstack_memory_used@@Base+0xb57c>
  44d7ac:	nop
  44d7b0:	ldr	x20, [x21]
  44d7b4:	str	w0, [sp, #124]
  44d7b8:	ldr	x22, [x20, #112]
  44d7bc:	cbz	x22, 44d7d0 <_obstack_memory_used@@Base+0xb5e0>
  44d7c0:	mov	x0, x22
  44d7c4:	ldr	x22, [x22]
  44d7c8:	bl	4047b0 <free@plt>
  44d7cc:	cbnz	x22, 44d7c0 <_obstack_memory_used@@Base+0xb5d0>
  44d7d0:	ldr	x0, [x20, #32]
  44d7d4:	mov	w1, #0xf                   	// #15
  44d7d8:	stp	xzr, xzr, [x20, #104]
  44d7dc:	str	w1, [x20, #128]
  44d7e0:	bl	4047b0 <free@plt>
  44d7e4:	str	xzr, [x20, #32]
  44d7e8:	add	x0, sp, #0xa8
  44d7ec:	bl	443cd0 <_obstack_memory_used@@Base+0x1ae0>
  44d7f0:	mov	x0, x19
  44d7f4:	bl	443d18 <_obstack_memory_used@@Base+0x1b28>
  44d7f8:	ldp	x25, x26, [sp, #64]
  44d7fc:	stp	xzr, xzr, [x21]
  44d800:	ldr	w0, [sp, #124]
  44d804:	ldp	x19, x20, [sp, #16]
  44d808:	ldp	x21, x22, [sp, #32]
  44d80c:	ldp	x23, x24, [sp, #48]
  44d810:	ldp	x29, x30, [sp], #320
  44d814:	ret
  44d818:	b.gt	44e0ac <_obstack_memory_used@@Base+0xbebc>
  44d81c:	ldr	x1, [sp, #232]
  44d820:	cbz	x26, 44dcc8 <_obstack_memory_used@@Base+0xbad8>
  44d824:	ldr	x2, [sp, #256]
  44d828:	ldr	x0, [sp, #216]
  44d82c:	cmp	x2, x1
  44d830:	csel	x2, x2, x1, le
  44d834:	cmp	x2, x0
  44d838:	b.gt	44d844 <_obstack_memory_used@@Base+0xb654>
  44d83c:	b	44e384 <_obstack_memory_used@@Base+0xc194>
  44d840:	ldr	x22, [sp, #176]
  44d844:	ldr	x1, [sp, #168]
  44d848:	ldr	x4, [sp, #208]
  44d84c:	add	x1, x1, x0
  44d850:	ldr	x3, [sp, #288]
  44d854:	ldrb	w1, [x1, x4]
  44d858:	ldrb	w1, [x3, x1]
  44d85c:	strb	w1, [x22, x0]
  44d860:	add	x0, x0, #0x1
  44d864:	cmp	x2, x0
  44d868:	b.ne	44d840 <_obstack_memory_used@@Base+0xb650>  // b.any
  44d86c:	str	wzr, [sp, #124]
  44d870:	stp	x2, x2, [sp, #216]
  44d874:	orr	x2, x24, #0x800000
  44d878:	ldr	x20, [x21]
  44d87c:	str	xzr, [x21, #48]
  44d880:	add	x1, sp, #0xa8
  44d884:	add	x0, sp, #0x80
  44d888:	str	x24, [x20, #216]
  44d88c:	bl	44b7b8 <_obstack_memory_used@@Base+0x95c8>
  44d890:	ldr	x6, [sp, #240]
  44d894:	mov	x1, x21
  44d898:	mov	x3, x24
  44d89c:	add	x2, sp, #0x80
  44d8a0:	add	x5, sp, #0x7c
  44d8a4:	mov	x4, #0x0                   	// #0
  44d8a8:	add	x6, x6, w0, sxtw
  44d8ac:	add	x0, sp, #0xa8
  44d8b0:	str	x6, [sp, #240]
  44d8b4:	bl	44d3d8 <_obstack_memory_used@@Base+0xb1e8>
  44d8b8:	mov	x22, x0
  44d8bc:	ldr	w1, [sp, #124]
  44d8c0:	cbnz	w1, 44e264 <_obstack_memory_used@@Base+0xc074>
  44d8c4:	add	x26, x20, #0x70
  44d8c8:	mov	w5, #0x2                   	// #2
  44d8cc:	add	x20, x20, #0x80
  44d8d0:	add	x25, sp, #0x90
  44d8d4:	mov	x1, x20
  44d8d8:	mov	x0, x26
  44d8dc:	mov	x4, x25
  44d8e0:	mov	x3, #0x0                   	// #0
  44d8e4:	mov	x2, #0x0                   	// #0
  44d8e8:	strb	w5, [sp, #152]
  44d8ec:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44d8f0:	mov	x24, x0
  44d8f4:	mov	x1, x0
  44d8f8:	cbz	x22, 44d924 <_obstack_memory_used@@Base+0xb734>
  44d8fc:	mov	w5, #0x10                  	// #16
  44d900:	mov	x1, x20
  44d904:	mov	x3, x24
  44d908:	mov	x2, x22
  44d90c:	mov	x0, x26
  44d910:	mov	x4, x25
  44d914:	strb	w5, [sp, #152]
  44d918:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44d91c:	mov	x1, x24
  44d920:	mov	x24, x0
  44d924:	cmp	x1, #0x0
  44d928:	cset	w0, eq  // eq = none
  44d92c:	cmp	x24, #0x0
  44d930:	csinc	w0, w0, wzr, ne  // ne = any
  44d934:	ldr	x20, [x21]
  44d938:	cbnz	w0, 44e29c <_obstack_memory_used@@Base+0xc0ac>
  44d93c:	ldr	x22, [x20, #8]
  44d940:	str	x24, [x19, #104]
  44d944:	lsl	x26, x22, #3
  44d948:	add	x22, x22, x22, lsl #1
  44d94c:	mov	x0, x26
  44d950:	bl	404310 <malloc@plt>
  44d954:	mov	x24, x0
  44d958:	str	x24, [x20, #24]
  44d95c:	mov	x0, x26
  44d960:	lsl	x22, x22, #3
  44d964:	bl	404310 <malloc@plt>
  44d968:	mov	x26, x0
  44d96c:	str	x26, [x20, #32]
  44d970:	mov	x0, x22
  44d974:	bl	404310 <malloc@plt>
  44d978:	mov	x1, x0
  44d97c:	str	x1, [x20, #40]
  44d980:	mov	x0, x22
  44d984:	mov	x22, x1
  44d988:	bl	404310 <malloc@plt>
  44d98c:	str	x0, [x20, #48]
  44d990:	cbz	x24, 44e0a0 <_obstack_memory_used@@Base+0xbeb0>
  44d994:	cbz	x26, 44e0a0 <_obstack_memory_used@@Base+0xbeb0>
  44d998:	cbz	x22, 44e0a0 <_obstack_memory_used@@Base+0xbeb0>
  44d99c:	cbz	x0, 44e0a0 <_obstack_memory_used@@Base+0xbeb0>
  44d9a0:	ldr	x22, [x21, #48]
  44d9a4:	lsl	x0, x22, #3
  44d9a8:	bl	404310 <malloc@plt>
  44d9ac:	str	x0, [x20, #224]
  44d9b0:	cbz	x0, 44da10 <_obstack_memory_used@@Base+0xb820>
  44d9b4:	mov	x1, #0x0                   	// #0
  44d9b8:	cbz	x22, 44d9d0 <_obstack_memory_used@@Base+0xb7e0>
  44d9bc:	nop
  44d9c0:	str	x1, [x0, x1, lsl #3]
  44d9c4:	add	x1, x1, #0x1
  44d9c8:	cmp	x1, x22
  44d9cc:	b.ne	44d9c0 <_obstack_memory_used@@Base+0xb7d0>  // b.any
  44d9d0:	ldr	x0, [x20, #104]
  44d9d4:	mov	x2, x20
  44d9d8:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x1e10>
  44d9dc:	add	x1, x1, #0x158
  44d9e0:	bl	442870 <_obstack_memory_used@@Base+0x680>
  44d9e4:	ldr	x3, [x21, #48]
  44d9e8:	cbz	x3, 44e250 <_obstack_memory_used@@Base+0xc060>
  44d9ec:	mov	x1, #0x0                   	// #0
  44d9f0:	ldr	x0, [x20, #224]
  44d9f4:	b	44da04 <_obstack_memory_used@@Base+0xb814>
  44d9f8:	add	x1, x1, #0x1
  44d9fc:	cmp	x1, x3
  44da00:	b.eq	44e258 <_obstack_memory_used@@Base+0xc068>  // b.none
  44da04:	ldr	x2, [x0, x1, lsl #3]
  44da08:	cmp	x1, x2
  44da0c:	b.eq	44d9f8 <_obstack_memory_used@@Base+0xb808>  // b.none
  44da10:	ldr	x0, [x20, #104]
  44da14:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x1e10>
  44da18:	mov	x2, x21
  44da1c:	add	x1, x1, #0xf18
  44da20:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44da24:	cbnz	w0, 44d7b0 <_obstack_memory_used@@Base+0xb5c0>
  44da28:	ldr	x0, [x20, #104]
  44da2c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0x4e10>
  44da30:	mov	x2, x20
  44da34:	add	x1, x1, #0x1b8
  44da38:	bl	4427f0 <_obstack_memory_used@@Base+0x600>
  44da3c:	cbnz	w0, 44d7b0 <_obstack_memory_used@@Base+0xb5c0>
  44da40:	ldr	x0, [x20, #104]
  44da44:	mov	x2, x20
  44da48:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x1e10>
  44da4c:	add	x1, x1, #0x200
  44da50:	stp	x27, x28, [sp, #80]
  44da54:	mov	x24, #0x1                   	// #1
  44da58:	bl	442870 <_obstack_memory_used@@Base+0x680>
  44da5c:	ldr	x22, [x20, #104]
  44da60:	mov	x27, #0x2                   	// #2
  44da64:	ldrb	w0, [x22, #48]
  44da68:	ldr	x1, [x22, #56]
  44da6c:	cmp	w0, #0xb
  44da70:	b.hi	44daec <_obstack_memory_used@@Base+0xb8fc>  // b.pmore
  44da74:	nop
  44da78:	cmp	w0, #0x9
  44da7c:	b.hi	44dd2c <_obstack_memory_used@@Base+0xbb3c>  // b.pmore
  44da80:	cmp	w0, #0x4
  44da84:	b.eq	44dda4 <_obstack_memory_used@@Base+0xbbb4>  // b.none
  44da88:	b.ls	44dcd4 <_obstack_memory_used@@Base+0xbae4>  // b.plast
  44da8c:	sub	w2, w0, #0x8
  44da90:	and	w2, w2, #0xff
  44da94:	cmp	w2, #0x1
  44da98:	b.hi	44dafc <_obstack_memory_used@@Base+0xb90c>  // b.pmore
  44da9c:	ldr	x3, [x22, #32]
  44daa0:	add	x1, x1, x1, lsl #1
  44daa4:	ldr	x2, [x20, #40]
  44daa8:	mov	x0, #0x8                   	// #8
  44daac:	ldr	x26, [x3, #56]
  44dab0:	add	x28, x2, x1, lsl #3
  44dab4:	str	x24, [x2, x1, lsl #3]
  44dab8:	str	x24, [x28, #8]
  44dabc:	bl	404310 <malloc@plt>
  44dac0:	str	x0, [x28, #16]
  44dac4:	cbz	x0, 44e340 <_obstack_memory_used@@Base+0xc150>
  44dac8:	str	x26, [x0]
  44dacc:	nop
  44dad0:	ldr	x28, [x22, #8]
  44dad4:	cbz	x28, 44dc18 <_obstack_memory_used@@Base+0xba28>
  44dad8:	mov	x22, x28
  44dadc:	ldrb	w0, [x22, #48]
  44dae0:	ldr	x1, [x22, #56]
  44dae4:	cmp	w0, #0xb
  44dae8:	b.ls	44da78 <_obstack_memory_used@@Base+0xb888>  // b.plast
  44daec:	cmp	w0, #0xc
  44daf0:	b.eq	44da9c <_obstack_memory_used@@Base+0xb8ac>  // b.none
  44daf4:	cmp	w0, #0x10
  44daf8:	b.eq	44dad0 <_obstack_memory_used@@Base+0xb8e0>  // b.none
  44dafc:	tbz	w0, #3, 44ddd4 <_obstack_memory_used@@Base+0xbbe4>
  44db00:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44db04:	add	x3, x3, #0x4a0
  44db08:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44db0c:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44db10:	add	x3, x3, #0x58
  44db14:	add	x1, x1, #0x320
  44db18:	add	x0, x0, #0x370
  44db1c:	mov	w2, #0x5c2                 	// #1474
  44db20:	bl	404ac0 <__assert_fail@plt>
  44db24:	mov	x1, x25
  44db28:	add	x0, sp, #0xa8
  44db2c:	bl	442910 <_obstack_memory_used@@Base+0x720>
  44db30:	cbnz	w0, 44d7b0 <_obstack_memory_used@@Base+0xb5c0>
  44db34:	ldrb	w3, [sp, #307]
  44db38:	ldr	w2, [x19, #180]
  44db3c:	b	44d750 <_obstack_memory_used@@Base+0xb560>
  44db40:	ldp	x25, x26, [sp, #64]
  44db44:	mov	w1, #0xc                   	// #12
  44db48:	mov	x0, x19
  44db4c:	str	w1, [sp, #124]
  44db50:	bl	443d18 <_obstack_memory_used@@Base+0x1b28>
  44db54:	stp	xzr, xzr, [x21]
  44db58:	ldr	w0, [sp, #124]
  44db5c:	ldp	x19, x20, [sp, #16]
  44db60:	ldp	x21, x22, [sp, #32]
  44db64:	ldp	x23, x24, [sp, #48]
  44db68:	ldp	x29, x30, [sp], #320
  44db6c:	ret
  44db70:	mov	x1, #0x1                   	// #1
  44db74:	mov	x0, #0x20                  	// #32
  44db78:	bl	4044c0 <calloc@plt>
  44db7c:	str	x0, [x19, #120]
  44db80:	cbz	x0, 44db40 <_obstack_memory_used@@Base+0xb950>
  44db84:	mov	x26, #0x1                   	// #1
  44db88:	stp	x27, x28, [sp, #80]
  44db8c:	mov	x27, #0x0                   	// #0
  44db90:	lsl	w23, w27, #3
  44db94:	mov	w28, #0x0                   	// #0
  44db98:	b	44dbbc <_obstack_memory_used@@Base+0xb9cc>
  44db9c:	cbnz	w3, 44dbac <_obstack_memory_used@@Base+0xb9bc>
  44dba0:	ldrb	w0, [x19, #176]
  44dba4:	orr	w0, w0, #0x8
  44dba8:	strb	w0, [x19, #176]
  44dbac:	add	w28, w28, #0x1
  44dbb0:	add	w23, w23, #0x1
  44dbb4:	cmp	w28, #0x40
  44dbb8:	b.eq	44dc00 <_obstack_memory_used@@Base+0xba10>  // b.none
  44dbbc:	mov	w0, w23
  44dbc0:	bl	404630 <btowc@plt>
  44dbc4:	and	w3, w23, #0xffffff80
  44dbc8:	cmn	w0, #0x1
  44dbcc:	b.eq	44db9c <_obstack_memory_used@@Base+0xb9ac>  // b.none
  44dbd0:	ldr	x4, [x19, #120]
  44dbd4:	lsl	x1, x26, x28
  44dbd8:	ldr	x2, [x4, x27]
  44dbdc:	orr	x1, x2, x1
  44dbe0:	str	x1, [x4, x27]
  44dbe4:	cbnz	w3, 44dbac <_obstack_memory_used@@Base+0xb9bc>
  44dbe8:	cmp	w0, w23
  44dbec:	b.ne	44dba0 <_obstack_memory_used@@Base+0xb9b0>  // b.any
  44dbf0:	add	w28, w28, #0x1
  44dbf4:	add	w23, w23, #0x1
  44dbf8:	cmp	w28, #0x40
  44dbfc:	b.ne	44dbbc <_obstack_memory_used@@Base+0xb9cc>  // b.any
  44dc00:	add	x27, x27, #0x8
  44dc04:	cmp	x27, #0x20
  44dc08:	b.ne	44db90 <_obstack_memory_used@@Base+0xb9a0>  // b.any
  44dc0c:	ldp	x27, x28, [sp, #80]
  44dc10:	b	44d6c8 <_obstack_memory_used@@Base+0xb4d8>
  44dc14:	mov	x22, x0
  44dc18:	ldr	x0, [x22, #16]
  44dc1c:	cmp	x0, #0x0
  44dc20:	cset	w26, eq  // eq = none
  44dc24:	cmp	x0, x28
  44dc28:	csinc	w26, w26, wzr, ne  // ne = any
  44dc2c:	cbz	w26, 44e1d4 <_obstack_memory_used@@Base+0xbfe4>
  44dc30:	ldr	x0, [x22]
  44dc34:	mov	x28, x22
  44dc38:	cbnz	x0, 44dc14 <_obstack_memory_used@@Base+0xba24>
  44dc3c:	ldr	x1, [x20, #16]
  44dc40:	mov	w27, #0x0                   	// #0
  44dc44:	mov	x22, #0x0                   	// #0
  44dc48:	cmp	x22, x1
  44dc4c:	b.eq	44dc74 <_obstack_memory_used@@Base+0xba84>  // b.none
  44dc50:	add	x24, x22, x22, lsl #1
  44dc54:	lsl	x24, x24, #3
  44dc58:	ldr	x0, [x20, #48]
  44dc5c:	add	x0, x0, x24
  44dc60:	ldr	x0, [x0, #8]
  44dc64:	cbz	x0, 44dc94 <_obstack_memory_used@@Base+0xbaa4>
  44dc68:	add	x22, x22, #0x1
  44dc6c:	cmp	x22, x1
  44dc70:	b.ne	44dc50 <_obstack_memory_used@@Base+0xba60>  // b.any
  44dc74:	cbz	w27, 44ddf0 <_obstack_memory_used@@Base+0xbc00>
  44dc78:	ldr	x0, [x20, #48]
  44dc7c:	mov	x24, #0x0                   	// #0
  44dc80:	mov	w27, #0x0                   	// #0
  44dc84:	mov	x22, #0x0                   	// #0
  44dc88:	add	x0, x0, x24
  44dc8c:	ldr	x0, [x0, #8]
  44dc90:	cbnz	x0, 44dc68 <_obstack_memory_used@@Base+0xba78>
  44dc94:	mov	x2, x22
  44dc98:	mov	x1, x20
  44dc9c:	mov	x0, x25
  44dca0:	mov	w3, #0x1                   	// #1
  44dca4:	bl	4445c0 <_obstack_memory_used@@Base+0x23d0>
  44dca8:	cbnz	w0, 44e098 <_obstack_memory_used@@Base+0xbea8>
  44dcac:	ldr	x0, [x20, #48]
  44dcb0:	add	x22, x22, #0x1
  44dcb4:	add	x24, x0, x24
  44dcb8:	ldr	x0, [x24, #8]
  44dcbc:	cbz	x0, 44dd08 <_obstack_memory_used@@Base+0xbb18>
  44dcc0:	ldr	x1, [x20, #16]
  44dcc4:	b	44dc48 <_obstack_memory_used@@Base+0xba58>
  44dcc8:	str	wzr, [sp, #124]
  44dccc:	stp	x1, x1, [sp, #216]
  44dcd0:	b	44d874 <_obstack_memory_used@@Base+0xb684>
  44dcd4:	cmp	w0, #0x2
  44dcd8:	b.ne	44ddd4 <_obstack_memory_used@@Base+0xbbe4>  // b.any
  44dcdc:	ldr	x0, [x22, #32]
  44dce0:	cbz	x0, 44dad0 <_obstack_memory_used@@Base+0xb8e0>
  44dce4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44dce8:	add	x3, x3, #0x4a0
  44dcec:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44dcf0:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44dcf4:	add	x3, x3, #0x58
  44dcf8:	add	x1, x1, #0x320
  44dcfc:	add	x0, x0, #0x338
  44dd00:	mov	w2, #0x59f                 	// #1439
  44dd04:	bl	404ac0 <__assert_fail@plt>
  44dd08:	ldr	x0, [sp, #160]
  44dd0c:	bl	4047b0 <free@plt>
  44dd10:	ldr	x1, [x20, #16]
  44dd14:	cmp	x1, x22
  44dd18:	b.eq	44e088 <_obstack_memory_used@@Base+0xbe98>  // b.none
  44dd1c:	add	x24, x22, x22, lsl #1
  44dd20:	mov	w27, w26
  44dd24:	lsl	x24, x24, #3
  44dd28:	b	44dc58 <_obstack_memory_used@@Base+0xba68>
  44dd2c:	ldrb	w0, [x20, #176]
  44dd30:	orr	w0, w0, #0x1
  44dd34:	strb	w0, [x20, #176]
  44dd38:	ldr	x28, [x22, #8]
  44dd3c:	cbz	x28, 44e1fc <_obstack_memory_used@@Base+0xc00c>
  44dd40:	ldr	x0, [x28, #24]
  44dd44:	ldr	x26, [x0, #56]
  44dd48:	ldr	x0, [x22, #16]
  44dd4c:	cbz	x0, 44e1f0 <_obstack_memory_used@@Base+0xc000>
  44dd50:	ldr	x0, [x0, #24]
  44dd54:	ldr	x2, [x0, #56]
  44dd58:	tbnz	x26, #63, 44e3dc <_obstack_memory_used@@Base+0xc1ec>
  44dd5c:	tbnz	x2, #63, 44e400 <_obstack_memory_used@@Base+0xc210>
  44dd60:	ldr	x3, [x20, #40]
  44dd64:	add	x1, x1, x1, lsl #1
  44dd68:	mov	x0, #0x10                  	// #16
  44dd6c:	add	x4, x3, x1, lsl #3
  44dd70:	str	x27, [x3, x1, lsl #3]
  44dd74:	stp	x4, x2, [sp, #96]
  44dd78:	bl	404310 <malloc@plt>
  44dd7c:	ldp	x4, x2, [sp, #96]
  44dd80:	str	x0, [x4, #16]
  44dd84:	cbz	x0, 44deb8 <_obstack_memory_used@@Base+0xbcc8>
  44dd88:	cmp	x26, x2
  44dd8c:	b.eq	44e1e0 <_obstack_memory_used@@Base+0xbff0>  // b.none
  44dd90:	str	x27, [x4, #8]
  44dd94:	b.ge	44e208 <_obstack_memory_used@@Base+0xc018>  // b.tcont
  44dd98:	stp	x26, x2, [x0]
  44dd9c:	cbnz	x28, 44dad8 <_obstack_memory_used@@Base+0xb8e8>
  44dda0:	b	44dc18 <_obstack_memory_used@@Base+0xba28>
  44dda4:	ldr	x2, [x22, #32]
  44dda8:	ldr	x0, [x20, #24]
  44ddac:	ldr	x26, [x2, #56]
  44ddb0:	str	x26, [x0, x1, lsl #3]
  44ddb4:	ldrb	w0, [x22, #48]
  44ddb8:	cmp	w0, #0x4
  44ddbc:	b.ne	44dad0 <_obstack_memory_used@@Base+0xb8e0>  // b.any
  44ddc0:	ldr	x2, [x20, #40]
  44ddc4:	add	x1, x1, x1, lsl #1
  44ddc8:	mov	x0, #0x8                   	// #8
  44ddcc:	add	x28, x2, x1, lsl #3
  44ddd0:	b	44dab4 <_obstack_memory_used@@Base+0xb8c4>
  44ddd4:	ldr	x2, [x22, #32]
  44ddd8:	ldr	x0, [x20, #24]
  44dddc:	ldr	x28, [x22, #8]
  44dde0:	ldr	x2, [x2, #56]
  44dde4:	str	x2, [x0, x1, lsl #3]
  44dde8:	cbnz	x28, 44dad8 <_obstack_memory_used@@Base+0xb8e8>
  44ddec:	b	44dc18 <_obstack_memory_used@@Base+0xba28>
  44ddf0:	ldrb	w0, [x21, #56]
  44ddf4:	tbnz	w0, #4, 44de08 <_obstack_memory_used@@Base+0xbc18>
  44ddf8:	ldr	x0, [x21, #48]
  44ddfc:	cbz	x0, 44de08 <_obstack_memory_used@@Base+0xbc18>
  44de00:	ldrb	w0, [x20, #176]
  44de04:	tbnz	w0, #0, 44de10 <_obstack_memory_used@@Base+0xbc20>
  44de08:	ldr	x0, [x20, #152]
  44de0c:	cbz	x0, 44ded8 <_obstack_memory_used@@Base+0xbce8>
  44de10:	add	x0, x22, x22, lsl #1
  44de14:	lsl	x0, x0, #3
  44de18:	bl	404310 <malloc@plt>
  44de1c:	str	x0, [x20, #56]
  44de20:	cbz	x0, 44e38c <_obstack_memory_used@@Base+0xc19c>
  44de24:	mov	x2, #0x0                   	// #0
  44de28:	mov	x1, #0x0                   	// #0
  44de2c:	cbnz	x22, 44de38 <_obstack_memory_used@@Base+0xbc48>
  44de30:	b	44ded8 <_obstack_memory_used@@Base+0xbce8>
  44de34:	ldr	x0, [x20, #56]
  44de38:	add	x0, x0, x2
  44de3c:	add	x1, x1, #0x1
  44de40:	add	x2, x2, #0x18
  44de44:	stp	xzr, xzr, [x0]
  44de48:	str	xzr, [x0, #16]
  44de4c:	ldr	x3, [x20, #16]
  44de50:	cmp	x3, x1
  44de54:	b.hi	44de34 <_obstack_memory_used@@Base+0xbc44>  // b.pmore
  44de58:	cbz	x3, 44ded8 <_obstack_memory_used@@Base+0xbce8>
  44de5c:	ldr	x0, [x20, #48]
  44de60:	mov	x24, #0x0                   	// #0
  44de64:	mov	x26, #0x0                   	// #0
  44de68:	add	x1, x0, x24
  44de6c:	mov	x22, #0x0                   	// #0
  44de70:	ldp	x2, x28, [x1, #8]
  44de74:	cmp	x2, #0x0
  44de78:	b.gt	44de98 <_obstack_memory_used@@Base+0xbca8>
  44de7c:	b	44dec8 <_obstack_memory_used@@Base+0xbcd8>
  44de80:	ldr	x0, [x20, #48]
  44de84:	add	x22, x22, #0x1
  44de88:	add	x2, x0, x24
  44de8c:	ldr	x2, [x2, #8]
  44de90:	cmp	x22, x2
  44de94:	b.ge	44dec4 <_obstack_memory_used@@Base+0xbcd4>  // b.tcont
  44de98:	ldr	x2, [x28, x22, lsl #3]
  44de9c:	mov	x1, x26
  44dea0:	ldr	x0, [x20, #56]
  44dea4:	add	x2, x2, x2, lsl #1
  44dea8:	add	x0, x0, x2, lsl #3
  44deac:	bl	4429b0 <_obstack_memory_used@@Base+0x7c0>
  44deb0:	tst	w0, #0xff
  44deb4:	b.ne	44de80 <_obstack_memory_used@@Base+0xbc90>  // b.any
  44deb8:	mov	w0, #0xc                   	// #12
  44debc:	ldp	x27, x28, [sp, #80]
  44dec0:	b	44d7b0 <_obstack_memory_used@@Base+0xb5c0>
  44dec4:	ldr	x3, [x20, #16]
  44dec8:	add	x26, x26, #0x1
  44decc:	add	x24, x24, #0x18
  44ded0:	cmp	x3, x26
  44ded4:	b.hi	44de68 <_obstack_memory_used@@Base+0xbc78>  // b.pmore
  44ded8:	ldrb	w0, [x19, #176]
  44dedc:	cmp	x23, #0x0
  44dee0:	str	wzr, [sp, #124]
  44dee4:	cset	w1, eq  // eq = none
  44dee8:	ands	w1, w1, w0, lsr #2
  44deec:	b.ne	44e0bc <_obstack_memory_used@@Base+0xbecc>  // b.any
  44def0:	ldr	x2, [x19, #104]
  44def4:	mov	x0, x25
  44def8:	ldr	x1, [x19, #48]
  44defc:	ldr	x2, [x2, #24]
  44df00:	ldr	x2, [x2, #56]
  44df04:	str	x2, [x19, #144]
  44df08:	add	x2, x2, x2, lsl #1
  44df0c:	add	x1, x1, x2, lsl #3
  44df10:	bl	444fa0 <_obstack_memory_used@@Base+0x2db0>
  44df14:	str	w0, [sp, #128]
  44df18:	mov	w20, w0
  44df1c:	cbnz	w0, 44df9c <_obstack_memory_used@@Base+0xbdac>
  44df20:	ldr	x0, [x19, #152]
  44df24:	cmp	x0, #0x0
  44df28:	b.le	44df68 <_obstack_memory_used@@Base+0xbd78>
  44df2c:	ldr	x7, [sp, #152]
  44df30:	cmp	x7, #0x0
  44df34:	b.le	44df68 <_obstack_memory_used@@Base+0xbd78>
  44df38:	add	x22, x25, #0x10
  44df3c:	mov	x6, #0x0                   	// #0
  44df40:	ldr	x4, [sp, #160]
  44df44:	ldr	x3, [x19]
  44df48:	ldr	x1, [x4, x6, lsl #3]
  44df4c:	add	x5, x3, x1, lsl #4
  44df50:	ldrb	w0, [x5, #8]
  44df54:	cmp	w0, #0x4
  44df58:	b.eq	44e004 <_obstack_memory_used@@Base+0xbe14>  // b.none
  44df5c:	add	x6, x6, #0x1
  44df60:	cmp	x7, x6
  44df64:	b.gt	44df40 <_obstack_memory_used@@Base+0xbd50>
  44df68:	mov	x2, x25
  44df6c:	mov	x1, x19
  44df70:	add	x0, sp, #0x80
  44df74:	mov	w3, #0x0                   	// #0
  44df78:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  44df7c:	str	x0, [x19, #72]
  44df80:	cbz	x0, 44e1cc <_obstack_memory_used@@Base+0xbfdc>
  44df84:	ldrsb	w1, [x0, #104]
  44df88:	tbnz	w1, #31, 44e16c <_obstack_memory_used@@Base+0xbf7c>
  44df8c:	stp	x0, x0, [x19, #80]
  44df90:	str	x0, [x19, #96]
  44df94:	ldr	x0, [sp, #160]
  44df98:	bl	4047b0 <free@plt>
  44df9c:	ldr	x22, [x21]
  44dfa0:	str	w20, [sp, #124]
  44dfa4:	ldr	x20, [x22, #112]
  44dfa8:	cbz	x20, 44dfc0 <_obstack_memory_used@@Base+0xbdd0>
  44dfac:	nop
  44dfb0:	mov	x0, x20
  44dfb4:	ldr	x20, [x20]
  44dfb8:	bl	4047b0 <free@plt>
  44dfbc:	cbnz	x20, 44dfb0 <_obstack_memory_used@@Base+0xbdc0>
  44dfc0:	ldr	x0, [x22, #32]
  44dfc4:	mov	w1, #0xf                   	// #15
  44dfc8:	stp	xzr, xzr, [x22, #104]
  44dfcc:	str	w1, [x22, #128]
  44dfd0:	bl	4047b0 <free@plt>
  44dfd4:	str	xzr, [x22, #32]
  44dfd8:	add	x0, sp, #0xa8
  44dfdc:	bl	443cd0 <_obstack_memory_used@@Base+0x1ae0>
  44dfe0:	ldr	w0, [sp, #124]
  44dfe4:	cbnz	w0, 44e2b4 <_obstack_memory_used@@Base+0xc0c4>
  44dfe8:	ldp	x19, x20, [sp, #16]
  44dfec:	ldp	x21, x22, [sp, #32]
  44dff0:	ldp	x23, x24, [sp, #48]
  44dff4:	ldp	x25, x26, [sp, #64]
  44dff8:	ldp	x27, x28, [sp, #80]
  44dffc:	ldp	x29, x30, [sp], #320
  44e000:	ret
  44e004:	mov	x2, #0x0                   	// #0
  44e008:	b	44e018 <_obstack_memory_used@@Base+0xbe28>
  44e00c:	add	x2, x2, #0x1
  44e010:	cmp	x7, x2
  44e014:	b.eq	44df5c <_obstack_memory_used@@Base+0xbd6c>  // b.none
  44e018:	ldr	x0, [x4, x2, lsl #3]
  44e01c:	lsl	x0, x0, #4
  44e020:	add	x8, x3, x0
  44e024:	ldrb	w8, [x8, #8]
  44e028:	cmp	w8, #0x9
  44e02c:	b.ne	44e00c <_obstack_memory_used@@Base+0xbe1c>  // b.any
  44e030:	ldr	x8, [x3, x0]
  44e034:	ldr	x0, [x5]
  44e038:	cmp	x8, x0
  44e03c:	b.ne	44e00c <_obstack_memory_used@@Base+0xbe1c>  // b.any
  44e040:	ldr	x3, [x19, #40]
  44e044:	add	x2, x1, x1, lsl #1
  44e048:	mov	x0, x7
  44e04c:	mov	x1, x22
  44e050:	add	x2, x3, x2, lsl #3
  44e054:	ldr	x2, [x2, #16]
  44e058:	ldr	x2, [x2]
  44e05c:	bl	443fa0 <_obstack_memory_used@@Base+0x1db0>
  44e060:	cbnz	x0, 44df5c <_obstack_memory_used@@Base+0xbd6c>
  44e064:	ldr	x1, [x19, #48]
  44e068:	add	x2, x2, x2, lsl #1
  44e06c:	mov	x0, x25
  44e070:	add	x1, x1, x2, lsl #3
  44e074:	bl	444418 <_obstack_memory_used@@Base+0x2228>
  44e078:	cbnz	w0, 44e350 <_obstack_memory_used@@Base+0xc160>
  44e07c:	mov	x6, #0x1                   	// #1
  44e080:	ldr	x7, [sp, #152]
  44e084:	b	44df60 <_obstack_memory_used@@Base+0xbd70>
  44e088:	mov	w27, #0x0                   	// #0
  44e08c:	mov	x22, #0x0                   	// #0
  44e090:	mov	x24, #0x0                   	// #0
  44e094:	b	44dc58 <_obstack_memory_used@@Base+0xba68>
  44e098:	ldp	x27, x28, [sp, #80]
  44e09c:	b	44d7b0 <_obstack_memory_used@@Base+0xb5c0>
  44e0a0:	mov	w0, #0xc                   	// #12
  44e0a4:	str	w0, [sp, #124]
  44e0a8:	b	44d7b8 <_obstack_memory_used@@Base+0xb5c8>
  44e0ac:	add	x0, sp, #0xa8
  44e0b0:	bl	442d10 <_obstack_memory_used@@Base+0xb20>
  44e0b4:	str	wzr, [sp, #124]
  44e0b8:	b	44d874 <_obstack_memory_used@@Base+0xb684>
  44e0bc:	ldr	x0, [x21, #40]
  44e0c0:	cbnz	x0, 44def0 <_obstack_memory_used@@Base+0xbd00>
  44e0c4:	ldr	x6, [x19, #16]
  44e0c8:	cbz	x6, 44e3ac <_obstack_memory_used@@Base+0xc1bc>
  44e0cc:	ldr	x7, [x19]
  44e0d0:	mov	w2, #0x10001               	// #65537
  44e0d4:	mov	w8, #0x0                   	// #0
  44e0d8:	mov	x5, #0x0                   	// #0
  44e0dc:	mov	x4, x7
  44e0e0:	mov	x3, #0x1                   	// #1
  44e0e4:	movk	x2, #0x1, lsl #48
  44e0e8:	ldrb	w0, [x4, #8]
  44e0ec:	cmp	w0, #0x5
  44e0f0:	b.eq	44e37c <_obstack_memory_used@@Base+0xc18c>  // b.none
  44e0f4:	b.hi	44e2e8 <_obstack_memory_used@@Base+0xc0f8>  // b.pmore
  44e0f8:	cmp	w0, #0x3
  44e0fc:	b.eq	44e364 <_obstack_memory_used@@Base+0xc174>  // b.none
  44e100:	cmp	w0, #0x4
  44e104:	b.ne	44e2d0 <_obstack_memory_used@@Base+0xc0e0>  // b.any
  44e108:	add	x5, x5, #0x1
  44e10c:	add	x4, x4, #0x10
  44e110:	cmp	x5, x6
  44e114:	b.ne	44e0e8 <_obstack_memory_used@@Base+0xbef8>  // b.any
  44e118:	orr	w27, w27, w8
  44e11c:	add	x5, x7, x5, lsl #4
  44e120:	tst	w27, #0xff
  44e124:	mov	w1, #0x7                   	// #7
  44e128:	b.ne	44e148 <_obstack_memory_used@@Base+0xbf58>  // b.any
  44e12c:	b	44e3ac <_obstack_memory_used@@Base+0xc1bc>
  44e130:	cmp	w0, #0x5
  44e134:	b.ne	44e13c <_obstack_memory_used@@Base+0xbf4c>  // b.any
  44e138:	strb	w1, [x7, #8]
  44e13c:	add	x7, x7, #0x10
  44e140:	cmp	x5, x7
  44e144:	b.eq	44e3b0 <_obstack_memory_used@@Base+0xc1c0>  // b.none
  44e148:	ldrb	w0, [x7, #8]
  44e14c:	cmp	w0, #0x1
  44e150:	b.ne	44e130 <_obstack_memory_used@@Base+0xbf40>  // b.any
  44e154:	ldrsb	w0, [x7]
  44e158:	tbz	w0, #31, 44e13c <_obstack_memory_used@@Base+0xbf4c>
  44e15c:	ldrb	w0, [x7, #10]
  44e160:	and	w0, w0, #0xffffffdf
  44e164:	strb	w0, [x7, #10]
  44e168:	b	44e13c <_obstack_memory_used@@Base+0xbf4c>
  44e16c:	mov	x2, x25
  44e170:	mov	x1, x19
  44e174:	mov	w3, #0x1                   	// #1
  44e178:	add	x0, sp, #0x80
  44e17c:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  44e180:	str	x0, [x19, #80]
  44e184:	mov	x2, x25
  44e188:	mov	x1, x19
  44e18c:	mov	w3, #0x2                   	// #2
  44e190:	add	x0, sp, #0x80
  44e194:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  44e198:	str	x0, [x19, #88]
  44e19c:	mov	x1, x19
  44e1a0:	mov	x2, x25
  44e1a4:	add	x0, sp, #0x80
  44e1a8:	mov	w3, #0x6                   	// #6
  44e1ac:	bl	4451a0 <_obstack_memory_used@@Base+0x2fb0>
  44e1b0:	str	x0, [x19, #96]
  44e1b4:	ldr	x1, [x19, #80]
  44e1b8:	cbz	x1, 44e1cc <_obstack_memory_used@@Base+0xbfdc>
  44e1bc:	ldr	x1, [x19, #88]
  44e1c0:	cmp	x1, #0x0
  44e1c4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44e1c8:	b.ne	44df94 <_obstack_memory_used@@Base+0xbda4>  // b.any
  44e1cc:	ldr	w20, [sp, #128]
  44e1d0:	b	44df9c <_obstack_memory_used@@Base+0xbdac>
  44e1d4:	mov	x28, x0
  44e1d8:	mov	x22, x28
  44e1dc:	b	44dadc <_obstack_memory_used@@Base+0xb8ec>
  44e1e0:	str	x24, [x4, #8]
  44e1e4:	str	x26, [x0]
  44e1e8:	cbnz	x28, 44dad8 <_obstack_memory_used@@Base+0xb8e8>
  44e1ec:	b	44dc18 <_obstack_memory_used@@Base+0xba28>
  44e1f0:	ldr	x0, [x22, #32]
  44e1f4:	ldr	x2, [x0, #56]
  44e1f8:	b	44dd58 <_obstack_memory_used@@Base+0xbb68>
  44e1fc:	ldr	x0, [x22, #32]
  44e200:	ldr	x26, [x0, #56]
  44e204:	b	44dd48 <_obstack_memory_used@@Base+0xbb58>
  44e208:	stp	x2, x26, [x0]
  44e20c:	cbnz	x28, 44dad8 <_obstack_memory_used@@Base+0xb8e8>
  44e210:	b	44dc18 <_obstack_memory_used@@Base+0xba28>
  44e214:	add	x0, sp, #0xa8
  44e218:	bl	442c70 <_obstack_memory_used@@Base+0xa80>
  44e21c:	str	wzr, [sp, #124]
  44e220:	b	44d874 <_obstack_memory_used@@Base+0xb684>
  44e224:	mov	x0, x19
  44e228:	mov	x1, #0xe8                  	// #232
  44e22c:	bl	404530 <realloc@plt>
  44e230:	mov	x19, x0
  44e234:	cbz	x0, 44e424 <_obstack_memory_used@@Base+0xc234>
  44e238:	mov	x0, #0xe8                  	// #232
  44e23c:	stp	x19, x0, [x21]
  44e240:	b	44d5b4 <_obstack_memory_used@@Base+0xb3c4>
  44e244:	mov	x23, #0x0                   	// #0
  44e248:	mov	x1, #0x1                   	// #1
  44e24c:	b	44d610 <_obstack_memory_used@@Base+0xb420>
  44e250:	ldr	x0, [x20, #224]
  44e254:	nop
  44e258:	bl	4047b0 <free@plt>
  44e25c:	str	xzr, [x20, #224]
  44e260:	b	44da10 <_obstack_memory_used@@Base+0xb820>
  44e264:	cbz	x0, 44e3a0 <_obstack_memory_used@@Base+0xc1b0>
  44e268:	mov	w5, #0x2                   	// #2
  44e26c:	add	x26, x20, #0x70
  44e270:	add	x25, sp, #0x90
  44e274:	add	x20, x20, #0x80
  44e278:	mov	x1, x20
  44e27c:	mov	x0, x26
  44e280:	mov	x4, x25
  44e284:	mov	x3, #0x0                   	// #0
  44e288:	mov	x2, #0x0                   	// #0
  44e28c:	strb	w5, [sp, #152]
  44e290:	bl	444b48 <_obstack_memory_used@@Base+0x2958>
  44e294:	mov	x24, x0
  44e298:	b	44d8fc <_obstack_memory_used@@Base+0xb70c>
  44e29c:	mov	w0, #0xc                   	// #12
  44e2a0:	str	xzr, [x19, #104]
  44e2a4:	str	w0, [sp, #124]
  44e2a8:	b	44d7b8 <_obstack_memory_used@@Base+0xb5c8>
  44e2ac:	str	wzr, [sp, #124]
  44e2b0:	b	44d874 <_obstack_memory_used@@Base+0xb684>
  44e2b4:	mov	x0, x19
  44e2b8:	bl	443d18 <_obstack_memory_used@@Base+0x1b28>
  44e2bc:	ldr	w0, [sp, #124]
  44e2c0:	ldp	x25, x26, [sp, #64]
  44e2c4:	ldp	x27, x28, [sp, #80]
  44e2c8:	stp	xzr, xzr, [x21]
  44e2cc:	b	44db5c <_obstack_memory_used@@Base+0xb96c>
  44e2d0:	cmp	w0, #0x1
  44e2d4:	b.ne	44e304 <_obstack_memory_used@@Base+0xc114>  // b.any
  44e2d8:	ldrsb	w0, [x4]
  44e2dc:	cmp	w0, #0x0
  44e2e0:	csel	w27, w27, w1, ge  // ge = tcont
  44e2e4:	b	44e108 <_obstack_memory_used@@Base+0xbf18>
  44e2e8:	cmp	w0, #0xb
  44e2ec:	b.hi	44e310 <_obstack_memory_used@@Base+0xc120>  // b.pmore
  44e2f0:	cmp	w0, #0x7
  44e2f4:	b.hi	44e108 <_obstack_memory_used@@Base+0xbf18>  // b.pmore
  44e2f8:	cmp	w0, #0x6
  44e2fc:	b.eq	44def0 <_obstack_memory_used@@Base+0xbd00>  // b.none
  44e300:	bl	404650 <abort@plt>
  44e304:	cmp	w0, #0x2
  44e308:	b.eq	44e108 <_obstack_memory_used@@Base+0xbf18>  // b.none
  44e30c:	bl	404650 <abort@plt>
  44e310:	cmp	w0, #0xc
  44e314:	b.ne	44e300 <_obstack_memory_used@@Base+0xc110>  // b.any
  44e318:	ldr	w0, [x4]
  44e31c:	cmp	w0, #0x40
  44e320:	b.hi	44e358 <_obstack_memory_used@@Base+0xc168>  // b.pmore
  44e324:	cmp	w0, #0xf
  44e328:	b.ls	44def0 <_obstack_memory_used@@Base+0xbd00>  // b.plast
  44e32c:	sub	w0, w0, #0x10
  44e330:	lsl	x0, x3, x0
  44e334:	tst	x0, x2
  44e338:	b.eq	44def0 <_obstack_memory_used@@Base+0xbd00>  // b.none
  44e33c:	b	44e108 <_obstack_memory_used@@Base+0xbf18>
  44e340:	mov	w0, #0xc                   	// #12
  44e344:	stp	xzr, xzr, [x28]
  44e348:	ldp	x27, x28, [sp, #80]
  44e34c:	b	44d7b0 <_obstack_memory_used@@Base+0xb5c0>
  44e350:	mov	w20, w0
  44e354:	b	44df9c <_obstack_memory_used@@Base+0xbdac>
  44e358:	cmp	w0, #0x80
  44e35c:	b.eq	44e108 <_obstack_memory_used@@Base+0xbf18>  // b.none
  44e360:	b	44def0 <_obstack_memory_used@@Base+0xbd00>
  44e364:	ldr	x0, [x4]
  44e368:	ldr	x9, [x0, #16]
  44e36c:	cbnz	x9, 44def0 <_obstack_memory_used@@Base+0xbd00>
  44e370:	ldr	x0, [x0, #24]
  44e374:	cbz	x0, 44e108 <_obstack_memory_used@@Base+0xbf18>
  44e378:	b	44def0 <_obstack_memory_used@@Base+0xbd00>
  44e37c:	mov	w8, w1
  44e380:	b	44e108 <_obstack_memory_used@@Base+0xbf18>
  44e384:	mov	x2, x0
  44e388:	b	44d86c <_obstack_memory_used@@Base+0xb67c>
  44e38c:	mov	w0, #0xc                   	// #12
  44e390:	str	w0, [sp, #124]
  44e394:	ldr	x20, [x21]
  44e398:	ldp	x27, x28, [sp, #80]
  44e39c:	b	44d7b8 <_obstack_memory_used@@Base+0xb5c8>
  44e3a0:	ldr	x20, [x21]
  44e3a4:	str	xzr, [x19, #104]
  44e3a8:	b	44d7b8 <_obstack_memory_used@@Base+0xb5c8>
  44e3ac:	mov	w8, #0x0                   	// #0
  44e3b0:	ldr	x2, [x19, #152]
  44e3b4:	mov	w1, #0x1                   	// #1
  44e3b8:	ldrb	w0, [x19, #176]
  44e3bc:	cmp	x2, #0x0
  44e3c0:	str	w1, [x19, #180]
  44e3c4:	ccmp	w8, #0x0, #0x0, le
  44e3c8:	and	w1, w0, #0xfffffff9
  44e3cc:	cset	w0, ne  // ne = any
  44e3d0:	orr	w0, w1, w0, lsl #1
  44e3d4:	strb	w0, [x19, #176]
  44e3d8:	b	44def0 <_obstack_memory_used@@Base+0xbd00>
  44e3dc:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e3e0:	add	x3, x3, #0x4a0
  44e3e4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e3e8:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e3ec:	add	x3, x3, #0x58
  44e3f0:	add	x1, x1, #0x320
  44e3f4:	add	x0, x0, #0x350
  44e3f8:	mov	w2, #0x5af                 	// #1455
  44e3fc:	bl	404ac0 <__assert_fail@plt>
  44e400:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e404:	add	x3, x3, #0x4a0
  44e408:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e40c:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e410:	add	x3, x3, #0x58
  44e414:	add	x1, x1, #0x320
  44e418:	add	x0, x0, #0x360
  44e41c:	mov	w2, #0x5b0                 	// #1456
  44e420:	bl	404ac0 <__assert_fail@plt>
  44e424:	mov	w0, #0xc                   	// #12
  44e428:	b	44db5c <_obstack_memory_used@@Base+0xb96c>
  44e42c:	nop
  44e430:	stp	x29, x30, [sp, #-16]!
  44e434:	adrp	x3, 483000 <argp_program_version_hook@@Base+0x290>
  44e438:	mov	x5, x2
  44e43c:	mov	x29, sp
  44e440:	ldr	x3, [x3, #984]
  44e444:	mov	w7, #0x6f                  	// #111
  44e448:	ldrb	w6, [x2, #56]
  44e44c:	mov	x2, x1
  44e450:	mov	x1, x0
  44e454:	mov	x0, x5
  44e458:	ubfx	w4, w3, #25, #1
  44e45c:	and	w6, w6, w7
  44e460:	ubfiz	w4, w4, #4, #4
  44e464:	orr	w4, w4, #0xffffff80
  44e468:	orr	w4, w4, w6
  44e46c:	strb	w4, [x5, #56]
  44e470:	bl	44d568 <_obstack_memory_used@@Base+0xb378>
  44e474:	cbz	w0, 44e4a4 <_obstack_memory_used@@Base+0xc2b4>
  44e478:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e47c:	add	x1, x1, #0x4a0
  44e480:	add	x4, x1, #0x1e8
  44e484:	mov	w3, w0
  44e488:	ldp	x29, x30, [sp], #16
  44e48c:	add	x1, x1, #0x68
  44e490:	ldr	x3, [x4, w3, sxtw #3]
  44e494:	mov	w2, #0x5                   	// #5
  44e498:	mov	x0, #0x0                   	// #0
  44e49c:	add	x1, x1, x3
  44e4a0:	b	4049c0 <dcgettext@plt>
  44e4a4:	mov	x0, #0x0                   	// #0
  44e4a8:	ldp	x29, x30, [sp], #16
  44e4ac:	ret
  44e4b0:	adrp	x1, 483000 <argp_program_version_hook@@Base+0x290>
  44e4b4:	mov	x2, x0
  44e4b8:	ldr	x0, [x1, #984]
  44e4bc:	str	x2, [x1, #984]
  44e4c0:	ret
  44e4c4:	nop
  44e4c8:	stp	x29, x30, [sp, #-48]!
  44e4cc:	mov	x2, #0x100                 	// #256
  44e4d0:	mov	w1, #0x0                   	// #0
  44e4d4:	mov	x29, sp
  44e4d8:	stp	x19, x20, [sp, #16]
  44e4dc:	mov	x19, x0
  44e4e0:	ldr	x20, [x0]
  44e4e4:	str	x21, [sp, #32]
  44e4e8:	ldr	x21, [x0, #32]
  44e4ec:	mov	x0, x21
  44e4f0:	bl	404410 <memset@plt>
  44e4f4:	ldr	x1, [x20, #72]
  44e4f8:	mov	x0, x19
  44e4fc:	mov	x3, x21
  44e500:	add	x2, x1, #0x18
  44e504:	add	x1, x1, #0x10
  44e508:	bl	447df0 <_obstack_memory_used@@Base+0x5c00>
  44e50c:	ldp	x1, x0, [x20, #72]
  44e510:	cmp	x1, x0
  44e514:	b.eq	44e530 <_obstack_memory_used@@Base+0xc340>  // b.none
  44e518:	add	x2, x0, #0x18
  44e51c:	add	x1, x0, #0x10
  44e520:	mov	x3, x21
  44e524:	mov	x0, x19
  44e528:	bl	447df0 <_obstack_memory_used@@Base+0x5c00>
  44e52c:	ldr	x0, [x20, #72]
  44e530:	ldr	x1, [x20, #88]
  44e534:	cmp	x1, x0
  44e538:	b.eq	44e554 <_obstack_memory_used@@Base+0xc364>  // b.none
  44e53c:	add	x2, x1, #0x18
  44e540:	mov	x0, x19
  44e544:	mov	x3, x21
  44e548:	add	x1, x1, #0x10
  44e54c:	bl	447df0 <_obstack_memory_used@@Base+0x5c00>
  44e550:	ldr	x0, [x20, #72]
  44e554:	ldr	x1, [x20, #96]
  44e558:	cmp	x1, x0
  44e55c:	b.eq	44e574 <_obstack_memory_used@@Base+0xc384>  // b.none
  44e560:	add	x2, x1, #0x18
  44e564:	mov	x3, x21
  44e568:	add	x1, x1, #0x10
  44e56c:	mov	x0, x19
  44e570:	bl	447df0 <_obstack_memory_used@@Base+0x5c00>
  44e574:	ldrb	w1, [x19, #56]
  44e578:	mov	w0, #0x0                   	// #0
  44e57c:	ldr	x21, [sp, #32]
  44e580:	orr	w1, w1, #0x8
  44e584:	strb	w1, [x19, #56]
  44e588:	ldp	x19, x20, [sp, #16]
  44e58c:	ldp	x29, x30, [sp], #48
  44e590:	ret
  44e594:	nop
  44e598:	sub	sp, sp, #0x80
  44e59c:	cmp	x3, #0x0
  44e5a0:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  44e5a4:	stp	x29, x30, [sp, #16]
  44e5a8:	add	x29, sp, #0x10
  44e5ac:	stp	x19, x20, [sp, #32]
  44e5b0:	stp	x23, x24, [sp, #64]
  44e5b4:	add	x23, x3, x4
  44e5b8:	b.gt	44e818 <_obstack_memory_used@@Base+0xc628>
  44e5bc:	stp	x21, x22, [sp, #48]
  44e5c0:	mov	x19, x3
  44e5c4:	mov	x24, x2
  44e5c8:	stp	x25, x26, [sp, #80]
  44e5cc:	mov	x20, x0
  44e5d0:	mov	x21, x6
  44e5d4:	stp	x27, x28, [sp, #96]
  44e5d8:	and	w25, w7, #0xff
  44e5dc:	mov	x27, x5
  44e5e0:	cmp	x23, x2
  44e5e4:	b.gt	44e7fc <_obstack_memory_used@@Base+0xc60c>
  44e5e8:	cmp	x4, #0x0
  44e5ec:	ccmp	x3, x23, #0x4, ge  // ge = tcont
  44e5f0:	b.gt	44e7fc <_obstack_memory_used@@Base+0xc60c>
  44e5f4:	tbnz	x23, #63, 44e804 <_obstack_memory_used@@Base+0xc614>
  44e5f8:	cmp	x4, #0x0
  44e5fc:	ccmp	x3, x23, #0x0, lt  // lt = tstop
  44e600:	b.le	44e804 <_obstack_memory_used@@Base+0xc614>
  44e604:	ldrb	w0, [x20, #56]
  44e608:	cmp	x23, x19
  44e60c:	ubfx	x2, x0, #5, #2
  44e610:	str	x2, [sp, #120]
  44e614:	b.le	44e624 <_obstack_memory_used@@Base+0xc434>
  44e618:	ldr	x2, [x20, #32]
  44e61c:	cbz	x2, 44e624 <_obstack_memory_used@@Base+0xc434>
  44e620:	tbz	w0, #3, 44e7b4 <_obstack_memory_used@@Base+0xc5c4>
  44e624:	ldrb	w2, [x20, #56]
  44e628:	cmp	x21, #0x0
  44e62c:	cset	w0, eq  // eq = none
  44e630:	ubfx	x3, x2, #4, #1
  44e634:	orr	w0, w0, w3
  44e638:	tbnz	w0, #0, 44e7a0 <_obstack_memory_used@@Base+0xc5b0>
  44e63c:	and	w2, w2, #0x6
  44e640:	cmp	w2, #0x4
  44e644:	ldr	x0, [x20, #48]
  44e648:	b.eq	44e848 <_obstack_memory_used@@Base+0xc658>  // b.none
  44e64c:	add	x28, x0, #0x1
  44e650:	mov	x26, x28
  44e654:	lsl	x0, x28, #4
  44e658:	str	x1, [sp, #112]
  44e65c:	bl	404310 <malloc@plt>
  44e660:	mov	x22, x0
  44e664:	cbz	x0, 44e834 <_obstack_memory_used@@Base+0xc644>
  44e668:	ldr	x1, [sp, #112]
  44e66c:	mov	x7, x0
  44e670:	ldr	w0, [sp, #120]
  44e674:	mov	x5, x27
  44e678:	str	w0, [sp]
  44e67c:	mov	x4, x23
  44e680:	mov	x2, x24
  44e684:	mov	x6, x28
  44e688:	mov	x3, x19
  44e68c:	mov	x0, x20
  44e690:	bl	449c78 <_obstack_memory_used@@Base+0x7a88>
  44e694:	cbnz	w0, 44e764 <_obstack_memory_used@@Base+0xc574>
  44e698:	cbz	x21, 44e748 <_obstack_memory_used@@Base+0xc558>
  44e69c:	ldrb	w0, [x20, #56]
  44e6a0:	add	x24, x26, #0x1
  44e6a4:	ubfx	x0, x0, #1, #2
  44e6a8:	cbz	w0, 44e7c8 <_obstack_memory_used@@Base+0xc5d8>
  44e6ac:	cmp	w0, #0x1
  44e6b0:	b.eq	44e874 <_obstack_memory_used@@Base+0xc684>  // b.none
  44e6b4:	cmp	w0, #0x2
  44e6b8:	b.ne	44e934 <_obstack_memory_used@@Base+0xc744>  // b.any
  44e6bc:	ldr	x1, [x21]
  44e6c0:	mov	w23, w0
  44e6c4:	cmp	x28, x1
  44e6c8:	b.hi	44e910 <_obstack_memory_used@@Base+0xc720>  // b.pmore
  44e6cc:	cmp	x26, #0x0
  44e6d0:	b.le	44e8b8 <_obstack_memory_used@@Base+0xc6c8>
  44e6d4:	ldp	x4, x3, [x21, #8]
  44e6d8:	mov	x0, x22
  44e6dc:	mov	x1, #0x0                   	// #0
  44e6e0:	ldr	x2, [x0]
  44e6e4:	str	x2, [x4, x1, lsl #3]
  44e6e8:	add	x0, x0, #0x10
  44e6ec:	ldur	x2, [x0, #-8]
  44e6f0:	str	x2, [x3, x1, lsl #3]
  44e6f4:	add	x1, x1, #0x1
  44e6f8:	cmp	x26, x1
  44e6fc:	b.ne	44e6e0 <_obstack_memory_used@@Base+0xc4f0>  // b.any
  44e700:	mov	x0, x1
  44e704:	ldr	x2, [x21]
  44e708:	cmp	x2, x0
  44e70c:	b.ls	44e734 <_obstack_memory_used@@Base+0xc544>  // b.plast
  44e710:	ldp	x5, x4, [x21, #8]
  44e714:	mov	x2, #0xffffffffffffffff    	// #-1
  44e718:	str	x2, [x4, x0, lsl #3]
  44e71c:	add	x1, x1, #0x1
  44e720:	str	x2, [x5, x0, lsl #3]
  44e724:	mov	x0, x1
  44e728:	ldr	x3, [x21]
  44e72c:	cmp	x3, x1
  44e730:	b.hi	44e718 <_obstack_memory_used@@Base+0xc528>  // b.pmore
  44e734:	ldrb	w0, [x20, #56]
  44e738:	bfi	w0, w23, #1, #2
  44e73c:	strb	w0, [x20, #56]
  44e740:	tst	w0, #0x6
  44e744:	b.eq	44e770 <_obstack_memory_used@@Base+0xc580>  // b.none
  44e748:	ldr	x20, [x22]
  44e74c:	cbz	w25, 44e774 <_obstack_memory_used@@Base+0xc584>
  44e750:	cmp	x19, x20
  44e754:	b.ne	44e8ec <_obstack_memory_used@@Base+0xc6fc>  // b.any
  44e758:	ldr	x0, [x22, #8]
  44e75c:	sub	x20, x0, x20
  44e760:	b	44e774 <_obstack_memory_used@@Base+0xc584>
  44e764:	cmp	w0, #0x1
  44e768:	mov	x20, #0xffffffffffffffff    	// #-1
  44e76c:	b.eq	44e774 <_obstack_memory_used@@Base+0xc584>  // b.none
  44e770:	mov	x20, #0xfffffffffffffffe    	// #-2
  44e774:	mov	x0, x22
  44e778:	bl	4047b0 <free@plt>
  44e77c:	ldp	x21, x22, [sp, #48]
  44e780:	ldp	x25, x26, [sp, #80]
  44e784:	ldp	x27, x28, [sp, #96]
  44e788:	mov	x0, x20
  44e78c:	ldp	x29, x30, [sp, #16]
  44e790:	ldp	x19, x20, [sp, #32]
  44e794:	ldp	x23, x24, [sp, #64]
  44e798:	add	sp, sp, #0x80
  44e79c:	ret
  44e7a0:	mov	x28, #0x1                   	// #1
  44e7a4:	mov	x0, #0x10                  	// #16
  44e7a8:	mov	x26, x28
  44e7ac:	mov	x21, #0x0                   	// #0
  44e7b0:	b	44e658 <_obstack_memory_used@@Base+0xc468>
  44e7b4:	mov	x0, x20
  44e7b8:	str	x1, [sp, #112]
  44e7bc:	bl	44e4c8 <_obstack_memory_used@@Base+0xc2d8>
  44e7c0:	ldr	x1, [sp, #112]
  44e7c4:	b	44e624 <_obstack_memory_used@@Base+0xc434>
  44e7c8:	lsl	x27, x24, #3
  44e7cc:	mov	x0, x27
  44e7d0:	bl	404310 <malloc@plt>
  44e7d4:	str	x0, [x21, #8]
  44e7d8:	mov	x23, x0
  44e7dc:	cbz	x0, 44e8c4 <_obstack_memory_used@@Base+0xc6d4>
  44e7e0:	mov	x0, x27
  44e7e4:	bl	404310 <malloc@plt>
  44e7e8:	str	x0, [x21, #16]
  44e7ec:	cbz	x0, 44e8cc <_obstack_memory_used@@Base+0xc6dc>
  44e7f0:	mov	w23, #0x1                   	// #1
  44e7f4:	str	x24, [x21]
  44e7f8:	b	44e6cc <_obstack_memory_used@@Base+0xc4dc>
  44e7fc:	mov	x23, x24
  44e800:	b	44e604 <_obstack_memory_used@@Base+0xc414>
  44e804:	ldrb	w28, [x20, #56]
  44e808:	mov	x23, #0x0                   	// #0
  44e80c:	ubfx	x0, x28, #5, #2
  44e810:	str	x0, [sp, #120]
  44e814:	b	44e624 <_obstack_memory_used@@Base+0xc434>
  44e818:	mov	x20, #0xffffffffffffffff    	// #-1
  44e81c:	mov	x0, x20
  44e820:	ldp	x29, x30, [sp, #16]
  44e824:	ldp	x19, x20, [sp, #32]
  44e828:	ldp	x23, x24, [sp, #64]
  44e82c:	add	sp, sp, #0x80
  44e830:	ret
  44e834:	mov	x20, #0xfffffffffffffffe    	// #-2
  44e838:	ldp	x21, x22, [sp, #48]
  44e83c:	ldp	x25, x26, [sp, #80]
  44e840:	ldp	x27, x28, [sp, #96]
  44e844:	b	44e788 <_obstack_memory_used@@Base+0xc598>
  44e848:	ldr	x28, [x21]
  44e84c:	cmp	x28, x0
  44e850:	b.hi	44e64c <_obstack_memory_used@@Base+0xc45c>  // b.pmore
  44e854:	cmp	x28, #0x0
  44e858:	mov	x26, x28
  44e85c:	b.gt	44e654 <_obstack_memory_used@@Base+0xc464>
  44e860:	mov	x28, #0x1                   	// #1
  44e864:	mov	x0, #0x10                  	// #16
  44e868:	mov	x26, x28
  44e86c:	mov	x21, #0x0                   	// #0
  44e870:	b	44e658 <_obstack_memory_used@@Base+0xc468>
  44e874:	ldr	x1, [x21]
  44e878:	mov	w23, w0
  44e87c:	cmp	x1, x24
  44e880:	b.cs	44e6cc <_obstack_memory_used@@Base+0xc4dc>  // b.hs, b.nlast
  44e884:	ldr	x0, [x21, #8]
  44e888:	lsl	x28, x24, #3
  44e88c:	mov	x1, x28
  44e890:	bl	404530 <realloc@plt>
  44e894:	mov	x27, x0
  44e898:	cbz	x0, 44e8c4 <_obstack_memory_used@@Base+0xc6d4>
  44e89c:	ldr	x0, [x21, #16]
  44e8a0:	mov	x1, x28
  44e8a4:	bl	404530 <realloc@plt>
  44e8a8:	cbz	x0, 44e8dc <_obstack_memory_used@@Base+0xc6ec>
  44e8ac:	stp	x24, x27, [x21]
  44e8b0:	str	x0, [x21, #16]
  44e8b4:	b	44e6cc <_obstack_memory_used@@Base+0xc4dc>
  44e8b8:	mov	x0, #0x0                   	// #0
  44e8bc:	mov	x1, #0x0                   	// #0
  44e8c0:	b	44e704 <_obstack_memory_used@@Base+0xc514>
  44e8c4:	mov	w23, #0x0                   	// #0
  44e8c8:	b	44e734 <_obstack_memory_used@@Base+0xc544>
  44e8cc:	mov	x0, x23
  44e8d0:	mov	w23, #0x0                   	// #0
  44e8d4:	bl	4047b0 <free@plt>
  44e8d8:	b	44e734 <_obstack_memory_used@@Base+0xc544>
  44e8dc:	mov	x0, x27
  44e8e0:	mov	w23, #0x0                   	// #0
  44e8e4:	bl	4047b0 <free@plt>
  44e8e8:	b	44e734 <_obstack_memory_used@@Base+0xc544>
  44e8ec:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e8f0:	add	x3, x3, #0x4a0
  44e8f4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e8f8:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e8fc:	add	x3, x3, #0x280
  44e900:	add	x1, x1, #0x288
  44e904:	add	x0, x0, #0x3d0
  44e908:	mov	w2, #0x1be                 	// #446
  44e90c:	bl	404ac0 <__assert_fail@plt>
  44e910:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e914:	add	x3, x3, #0x4a0
  44e918:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e91c:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e920:	add	x3, x3, #0x270
  44e924:	add	x1, x1, #0x288
  44e928:	add	x0, x0, #0x3b8
  44e92c:	mov	w2, #0x1fb                 	// #507
  44e930:	bl	404ac0 <__assert_fail@plt>
  44e934:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e938:	add	x3, x3, #0x4a0
  44e93c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e940:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44e944:	add	x3, x3, #0x270
  44e948:	add	x1, x1, #0x288
  44e94c:	add	x0, x0, #0x398
  44e950:	mov	w2, #0x1f9                 	// #505
  44e954:	bl	404ac0 <__assert_fail@plt>
  44e958:	stp	x29, x30, [sp, #-112]!
  44e95c:	cmp	x4, #0x0
  44e960:	mov	x29, sp
  44e964:	stp	x27, x28, [sp, #80]
  44e968:	ldr	x27, [sp, #112]
  44e96c:	stp	x19, x20, [sp, #16]
  44e970:	stp	x25, x26, [sp, #64]
  44e974:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
  44e978:	mov	x25, x7
  44e97c:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  44e980:	ldrb	w7, [sp, #120]
  44e984:	b.lt	44ea50 <_obstack_memory_used@@Base+0xc860>  // b.tstop
  44e988:	mov	x19, x4
  44e98c:	mov	x20, x2
  44e990:	adds	x28, x2, x4
  44e994:	b.vs	44ea50 <_obstack_memory_used@@Base+0xc860>
  44e998:	stp	x21, x22, [sp, #32]
  44e99c:	mov	x22, x0
  44e9a0:	stp	x23, x24, [sp, #48]
  44e9a4:	mov	x23, x5
  44e9a8:	mov	x24, x6
  44e9ac:	cbz	x4, 44ea6c <_obstack_memory_used@@Base+0xc87c>
  44e9b0:	str	x1, [sp, #96]
  44e9b4:	mov	x21, x3
  44e9b8:	mov	x26, #0x0                   	// #0
  44e9bc:	cbnz	x2, 44ea0c <_obstack_memory_used@@Base+0xc81c>
  44e9c0:	mov	x6, x25
  44e9c4:	mov	x5, x27
  44e9c8:	mov	x4, x24
  44e9cc:	mov	x3, x23
  44e9d0:	mov	x2, x28
  44e9d4:	mov	x1, x21
  44e9d8:	mov	x0, x22
  44e9dc:	bl	44e598 <_obstack_memory_used@@Base+0xc3a8>
  44e9e0:	mov	x19, x0
  44e9e4:	mov	x0, x26
  44e9e8:	bl	4047b0 <free@plt>
  44e9ec:	mov	x0, x19
  44e9f0:	ldp	x19, x20, [sp, #16]
  44e9f4:	ldp	x21, x22, [sp, #32]
  44e9f8:	ldp	x23, x24, [sp, #48]
  44e9fc:	ldp	x25, x26, [sp, #64]
  44ea00:	ldp	x27, x28, [sp, #80]
  44ea04:	ldp	x29, x30, [sp], #112
  44ea08:	ret
  44ea0c:	mov	x0, x28
  44ea10:	str	w7, [sp, #108]
  44ea14:	bl	404310 <malloc@plt>
  44ea18:	mov	x26, x0
  44ea1c:	cbz	x0, 44ea48 <_obstack_memory_used@@Base+0xc858>
  44ea20:	ldr	x1, [sp, #96]
  44ea24:	mov	x2, x20
  44ea28:	bl	403f70 <memcpy@plt>
  44ea2c:	mov	x1, x21
  44ea30:	mov	x2, x19
  44ea34:	add	x0, x26, x20
  44ea38:	bl	403f70 <memcpy@plt>
  44ea3c:	ldr	w7, [sp, #108]
  44ea40:	mov	x21, x26
  44ea44:	b	44e9c0 <_obstack_memory_used@@Base+0xc7d0>
  44ea48:	ldp	x21, x22, [sp, #32]
  44ea4c:	ldp	x23, x24, [sp, #48]
  44ea50:	mov	x19, #0xfffffffffffffffe    	// #-2
  44ea54:	mov	x0, x19
  44ea58:	ldp	x19, x20, [sp, #16]
  44ea5c:	ldp	x25, x26, [sp, #64]
  44ea60:	ldp	x27, x28, [sp, #80]
  44ea64:	ldp	x29, x30, [sp], #112
  44ea68:	ret
  44ea6c:	mov	x21, x1
  44ea70:	mov	x26, #0x0                   	// #0
  44ea74:	b	44e9c0 <_obstack_memory_used@@Base+0xc7d0>
  44ea78:	stp	x29, x30, [sp, #-64]!
  44ea7c:	mov	x29, sp
  44ea80:	stp	x19, x20, [sp, #16]
  44ea84:	mov	w19, w2
  44ea88:	mov	x20, x0
  44ea8c:	tst	x19, #0x1
  44ea90:	stp	x21, x22, [sp, #32]
  44ea94:	mov	x21, #0xb2fc                	// #45820
  44ea98:	str	x23, [sp, #48]
  44ea9c:	mov	x23, #0x2c6                 	// #710
  44eaa0:	stp	xzr, xzr, [x0]
  44eaa4:	mov	x22, x1
  44eaa8:	movk	x21, #0x3, lsl #16
  44eaac:	str	xzr, [x0, #16]
  44eab0:	movk	x23, #0x101, lsl #16
  44eab4:	mov	x0, #0x100                 	// #256
  44eab8:	csel	x23, x21, x23, ne  // ne = any
  44eabc:	bl	404310 <malloc@plt>
  44eac0:	str	x0, [x20, #32]
  44eac4:	cbz	x0, 44eb70 <_obstack_memory_used@@Base+0xc980>
  44eac8:	sbfiz	x21, x19, #21, #32
  44eacc:	mov	w0, #0x0                   	// #0
  44ead0:	and	x21, x21, #0x400000
  44ead4:	orr	x21, x21, x23
  44ead8:	tbnz	w19, #2, 44eb4c <_obstack_memory_used@@Base+0xc95c>
  44eadc:	ldrb	w1, [x20, #56]
  44eae0:	ubfx	x19, x19, #3, #1
  44eae4:	ubfiz	w0, w0, #7, #1
  44eae8:	mov	w2, #0x6f                  	// #111
  44eaec:	orr	w19, w0, w19, lsl #4
  44eaf0:	and	w0, w1, w2
  44eaf4:	orr	w19, w19, w0
  44eaf8:	str	xzr, [x20, #40]
  44eafc:	strb	w19, [x20, #56]
  44eb00:	mov	x0, x22
  44eb04:	bl	403ff0 <strlen@plt>
  44eb08:	mov	x2, x0
  44eb0c:	mov	x3, x21
  44eb10:	mov	x1, x22
  44eb14:	mov	x0, x20
  44eb18:	bl	44d568 <_obstack_memory_used@@Base+0xb378>
  44eb1c:	mov	w19, w0
  44eb20:	cmp	w0, #0x10
  44eb24:	b.eq	44eb5c <_obstack_memory_used@@Base+0xc96c>  // b.none
  44eb28:	cbnz	w0, 44eb60 <_obstack_memory_used@@Base+0xc970>
  44eb2c:	mov	x0, x20
  44eb30:	bl	44e4c8 <_obstack_memory_used@@Base+0xc2d8>
  44eb34:	mov	w0, w19
  44eb38:	ldp	x19, x20, [sp, #16]
  44eb3c:	ldp	x21, x22, [sp, #32]
  44eb40:	ldr	x23, [sp, #48]
  44eb44:	ldp	x29, x30, [sp], #64
  44eb48:	ret
  44eb4c:	and	x21, x21, #0xffffffffffffffbf
  44eb50:	mov	w0, #0x1                   	// #1
  44eb54:	orr	x21, x21, #0x100
  44eb58:	b	44eadc <_obstack_memory_used@@Base+0xc8ec>
  44eb5c:	mov	w19, #0x8                   	// #8
  44eb60:	ldr	x0, [x20, #32]
  44eb64:	bl	4047b0 <free@plt>
  44eb68:	str	xzr, [x20, #32]
  44eb6c:	b	44eb34 <_obstack_memory_used@@Base+0xc944>
  44eb70:	mov	w19, #0xc                   	// #12
  44eb74:	mov	w0, w19
  44eb78:	ldp	x19, x20, [sp, #16]
  44eb7c:	ldp	x21, x22, [sp, #32]
  44eb80:	ldr	x23, [sp, #48]
  44eb84:	ldp	x29, x30, [sp], #64
  44eb88:	ret
  44eb8c:	nop
  44eb90:	stp	x29, x30, [sp, #-48]!
  44eb94:	cmp	w0, #0x10
  44eb98:	mov	x29, sp
  44eb9c:	stp	x19, x20, [sp, #16]
  44eba0:	stp	x21, x22, [sp, #32]
  44eba4:	b.hi	44ec20 <_obstack_memory_used@@Base+0xca30>  // b.pmore
  44eba8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44ebac:	add	x1, x1, #0x4a0
  44ebb0:	mov	w4, w0
  44ebb4:	mov	x20, x3
  44ebb8:	add	x3, x1, #0x1e8
  44ebbc:	add	x1, x1, #0x68
  44ebc0:	mov	x21, x2
  44ebc4:	mov	w2, #0x5                   	// #5
  44ebc8:	mov	x0, #0x0                   	// #0
  44ebcc:	ldr	x3, [x3, w4, sxtw #3]
  44ebd0:	add	x1, x1, x3
  44ebd4:	bl	4049c0 <dcgettext@plt>
  44ebd8:	mov	x22, x0
  44ebdc:	bl	403ff0 <strlen@plt>
  44ebe0:	add	x19, x0, #0x1
  44ebe4:	cbz	x20, 44ec00 <_obstack_memory_used@@Base+0xca10>
  44ebe8:	cmp	x19, x20
  44ebec:	mov	x2, x19
  44ebf0:	b.hi	44ec14 <_obstack_memory_used@@Base+0xca24>  // b.pmore
  44ebf4:	mov	x1, x22
  44ebf8:	mov	x0, x21
  44ebfc:	bl	403f70 <memcpy@plt>
  44ec00:	mov	x0, x19
  44ec04:	ldp	x19, x20, [sp, #16]
  44ec08:	ldp	x21, x22, [sp, #32]
  44ec0c:	ldp	x29, x30, [sp], #48
  44ec10:	ret
  44ec14:	sub	x2, x20, #0x1
  44ec18:	strb	wzr, [x21, x2]
  44ec1c:	b	44ebf4 <_obstack_memory_used@@Base+0xca04>
  44ec20:	bl	404650 <abort@plt>
  44ec24:	nop
  44ec28:	stp	x29, x30, [sp, #-32]!
  44ec2c:	mov	x29, sp
  44ec30:	str	x19, [sp, #16]
  44ec34:	mov	x19, x0
  44ec38:	ldr	x0, [x0]
  44ec3c:	cbz	x0, 44ec44 <_obstack_memory_used@@Base+0xca54>
  44ec40:	bl	443d18 <_obstack_memory_used@@Base+0x1b28>
  44ec44:	ldr	x0, [x19, #32]
  44ec48:	stp	xzr, xzr, [x19]
  44ec4c:	bl	4047b0 <free@plt>
  44ec50:	str	xzr, [x19, #32]
  44ec54:	ldr	x0, [x19, #40]
  44ec58:	bl	4047b0 <free@plt>
  44ec5c:	str	xzr, [x19, #40]
  44ec60:	ldr	x19, [sp, #16]
  44ec64:	ldp	x29, x30, [sp], #32
  44ec68:	ret
  44ec6c:	nop
  44ec70:	tst	w4, #0xfffffff8
  44ec74:	b.ne	44ed4c <_obstack_memory_used@@Base+0xcb5c>  // b.any
  44ec78:	sub	sp, sp, #0x50
  44ec7c:	stp	x29, x30, [sp, #16]
  44ec80:	add	x29, sp, #0x10
  44ec84:	stp	x19, x20, [sp, #32]
  44ec88:	mov	w19, w4
  44ec8c:	mov	x20, x0
  44ec90:	stp	x21, x22, [sp, #48]
  44ec94:	mov	x21, x1
  44ec98:	mov	x22, x3
  44ec9c:	str	x23, [sp, #64]
  44eca0:	mov	x23, x2
  44eca4:	tbnz	w19, #2, 44ed00 <_obstack_memory_used@@Base+0xcb10>
  44eca8:	mov	x0, x1
  44ecac:	bl	403ff0 <strlen@plt>
  44ecb0:	mov	x5, x0
  44ecb4:	ldrb	w0, [x20, #56]
  44ecb8:	str	w19, [sp]
  44ecbc:	mov	x3, #0x0                   	// #0
  44ecc0:	tbz	w0, #4, 44ed10 <_obstack_memory_used@@Base+0xcb20>
  44ecc4:	mov	x1, x21
  44ecc8:	mov	x0, x20
  44eccc:	mov	x4, x5
  44ecd0:	mov	x2, x5
  44ecd4:	mov	x7, #0x0                   	// #0
  44ecd8:	mov	x6, #0x0                   	// #0
  44ecdc:	bl	449c78 <_obstack_memory_used@@Base+0x7a88>
  44ece0:	cmp	w0, #0x0
  44ece4:	cset	w0, ne  // ne = any
  44ece8:	ldp	x29, x30, [sp, #16]
  44ecec:	ldp	x19, x20, [sp, #32]
  44ecf0:	ldp	x21, x22, [sp, #48]
  44ecf4:	ldr	x23, [sp, #64]
  44ecf8:	add	sp, sp, #0x50
  44ecfc:	ret
  44ed00:	ldrb	w0, [x20, #56]
  44ed04:	ldp	x3, x5, [x3]
  44ed08:	str	w19, [sp]
  44ed0c:	tbnz	w0, #4, 44ecc4 <_obstack_memory_used@@Base+0xcad4>
  44ed10:	mov	x7, x22
  44ed14:	mov	x6, x23
  44ed18:	mov	x1, x21
  44ed1c:	mov	x0, x20
  44ed20:	mov	x4, x5
  44ed24:	mov	x2, x5
  44ed28:	bl	449c78 <_obstack_memory_used@@Base+0x7a88>
  44ed2c:	cmp	w0, #0x0
  44ed30:	cset	w0, ne  // ne = any
  44ed34:	ldp	x29, x30, [sp, #16]
  44ed38:	ldp	x19, x20, [sp, #32]
  44ed3c:	ldp	x21, x22, [sp, #48]
  44ed40:	ldr	x23, [sp, #64]
  44ed44:	add	sp, sp, #0x50
  44ed48:	ret
  44ed4c:	mov	w0, #0x2                   	// #2
  44ed50:	ret
  44ed54:	nop
  44ed58:	mov	x6, x4
  44ed5c:	mov	x5, x2
  44ed60:	mov	w7, #0x1                   	// #1
  44ed64:	mov	x4, #0x0                   	// #0
  44ed68:	b	44e598 <_obstack_memory_used@@Base+0xc3a8>
  44ed6c:	nop
  44ed70:	mov	x6, x5
  44ed74:	mov	w7, #0x0                   	// #0
  44ed78:	mov	x5, x2
  44ed7c:	b	44e598 <_obstack_memory_used@@Base+0xc3a8>
  44ed80:	sub	sp, sp, #0x20
  44ed84:	mov	w8, #0x1                   	// #1
  44ed88:	stp	x29, x30, [sp, #16]
  44ed8c:	add	x29, sp, #0x10
  44ed90:	str	x7, [sp]
  44ed94:	mov	x7, x6
  44ed98:	strb	w8, [sp, #8]
  44ed9c:	mov	x6, #0x0                   	// #0
  44eda0:	bl	44e958 <_obstack_memory_used@@Base+0xc768>
  44eda4:	ldp	x29, x30, [sp, #16]
  44eda8:	add	sp, sp, #0x20
  44edac:	ret
  44edb0:	sub	sp, sp, #0x20
  44edb4:	stp	x29, x30, [sp, #16]
  44edb8:	add	x29, sp, #0x10
  44edbc:	ldr	x8, [sp, #32]
  44edc0:	str	x8, [sp]
  44edc4:	strb	wzr, [sp, #8]
  44edc8:	bl	44e958 <_obstack_memory_used@@Base+0xc768>
  44edcc:	ldp	x29, x30, [sp, #16]
  44edd0:	add	sp, sp, #0x20
  44edd4:	ret
  44edd8:	cbz	x2, 44edf8 <_obstack_memory_used@@Base+0xcc08>
  44eddc:	ldrb	w5, [x0, #56]
  44ede0:	mov	w6, #0x1                   	// #1
  44ede4:	bfi	w5, w6, #1, #2
  44ede8:	strb	w5, [x0, #56]
  44edec:	stp	x2, x3, [x1]
  44edf0:	str	x4, [x1, #16]
  44edf4:	ret
  44edf8:	ldrb	w2, [x0, #56]
  44edfc:	and	w2, w2, #0xfffffff9
  44ee00:	strb	w2, [x0, #56]
  44ee04:	stp	xzr, xzr, [x1]
  44ee08:	str	xzr, [x1, #16]
  44ee0c:	ret
  44ee10:	mov	x1, x0
  44ee14:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  44ee18:	cbz	x1, 44ee28 <_obstack_memory_used@@Base+0xcc38>
  44ee1c:	add	x0, x0, #0x778
  44ee20:	mov	w2, #0x1                   	// #1
  44ee24:	b	404100 <setenv@plt>
  44ee28:	add	x0, x0, #0x778
  44ee2c:	b	404930 <unsetenv@plt>
  44ee30:	cbz	x0, 44ee64 <_obstack_memory_used@@Base+0xcc74>
  44ee34:	stp	x29, x30, [sp, #-32]!
  44ee38:	mov	x29, sp
  44ee3c:	str	x19, [sp, #16]
  44ee40:	mov	x19, x0
  44ee44:	nop
  44ee48:	mov	x0, x19
  44ee4c:	ldr	x19, [x19]
  44ee50:	bl	4047b0 <free@plt>
  44ee54:	cbnz	x19, 44ee48 <_obstack_memory_used@@Base+0xcc58>
  44ee58:	ldr	x19, [sp, #16]
  44ee5c:	ldp	x29, x30, [sp], #32
  44ee60:	ret
  44ee64:	ret
  44ee68:	stp	x29, x30, [sp, #-48]!
  44ee6c:	mov	x29, sp
  44ee70:	stp	x19, x20, [sp, #16]
  44ee74:	mov	x19, x0
  44ee78:	stp	x21, x22, [sp, #32]
  44ee7c:	bl	404ad0 <__errno_location@plt>
  44ee80:	mov	x20, x0
  44ee84:	ldrb	w0, [x19, #8]
  44ee88:	add	x1, x19, #0x9
  44ee8c:	cmp	w0, #0x0
  44ee90:	ldr	w21, [x20]
  44ee94:	csel	x0, x1, xzr, ne  // ne = any
  44ee98:	bl	44ee10 <_obstack_memory_used@@Base+0xcc20>
  44ee9c:	cbz	w0, 44eec8 <_obstack_memory_used@@Base+0xccd8>
  44eea0:	ldr	w21, [x20]
  44eea4:	mov	x0, x19
  44eea8:	bl	44ee30 <_obstack_memory_used@@Base+0xcc40>
  44eeac:	str	w21, [x20]
  44eeb0:	mov	w22, #0x0                   	// #0
  44eeb4:	mov	w0, w22
  44eeb8:	ldp	x19, x20, [sp, #16]
  44eebc:	ldp	x21, x22, [sp, #32]
  44eec0:	ldp	x29, x30, [sp], #48
  44eec4:	ret
  44eec8:	bl	404360 <tzset@plt>
  44eecc:	mov	w22, #0x1                   	// #1
  44eed0:	mov	x0, x19
  44eed4:	bl	44ee30 <_obstack_memory_used@@Base+0xcc40>
  44eed8:	str	w21, [x20]
  44eedc:	mov	w0, w22
  44eee0:	ldp	x19, x20, [sp, #16]
  44eee4:	ldp	x21, x22, [sp, #32]
  44eee8:	ldp	x29, x30, [sp], #48
  44eeec:	ret
  44eef0:	stp	x29, x30, [sp, #-48]!
  44eef4:	mov	x29, sp
  44eef8:	stp	x19, x20, [sp, #16]
  44eefc:	cbz	x0, 44ef68 <_obstack_memory_used@@Base+0xcd78>
  44ef00:	str	x21, [sp, #32]
  44ef04:	mov	x21, x0
  44ef08:	bl	403ff0 <strlen@plt>
  44ef0c:	add	x20, x0, #0x1
  44ef10:	mov	x0, #0x76                  	// #118
  44ef14:	cmp	x20, x0
  44ef18:	csel	x0, x20, x0, cs  // cs = hs, nlast
  44ef1c:	add	x0, x0, #0x11
  44ef20:	and	x0, x0, #0xfffffffffffffff8
  44ef24:	bl	404310 <malloc@plt>
  44ef28:	mov	x19, x0
  44ef2c:	cbz	x0, 44ef54 <_obstack_memory_used@@Base+0xcd64>
  44ef30:	add	x3, x0, #0x9
  44ef34:	mov	w0, #0x1                   	// #1
  44ef38:	str	xzr, [x19]
  44ef3c:	mov	x1, x21
  44ef40:	strh	w0, [x19, #8]
  44ef44:	mov	x2, x20
  44ef48:	mov	x0, x3
  44ef4c:	bl	403f70 <memcpy@plt>
  44ef50:	strb	wzr, [x0, x20]
  44ef54:	ldr	x21, [sp, #32]
  44ef58:	mov	x0, x19
  44ef5c:	ldp	x19, x20, [sp, #16]
  44ef60:	ldp	x29, x30, [sp], #48
  44ef64:	ret
  44ef68:	mov	x0, #0x80                  	// #128
  44ef6c:	bl	404310 <malloc@plt>
  44ef70:	mov	x19, x0
  44ef74:	cbz	x0, 44ef58 <_obstack_memory_used@@Base+0xcd68>
  44ef78:	str	xzr, [x19]
  44ef7c:	mov	x0, x19
  44ef80:	strh	wzr, [x19, #8]
  44ef84:	ldp	x19, x20, [sp, #16]
  44ef88:	ldp	x29, x30, [sp], #48
  44ef8c:	ret
  44ef90:	stp	x29, x30, [sp, #-64]!
  44ef94:	mov	x29, sp
  44ef98:	stp	x23, x24, [sp, #48]
  44ef9c:	ldr	x23, [x1, #48]
  44efa0:	cbz	x23, 44f08c <_obstack_memory_used@@Base+0xce9c>
  44efa4:	stp	x19, x20, [sp, #16]
  44efa8:	cmp	x1, x23
  44efac:	mov	x20, x0
  44efb0:	stp	x21, x22, [sp, #32]
  44efb4:	mov	x22, x1
  44efb8:	b.hi	44efcc <_obstack_memory_used@@Base+0xcddc>  // b.pmore
  44efbc:	add	x1, x1, #0x38
  44efc0:	mov	w0, #0x1                   	// #1
  44efc4:	cmp	x23, x1
  44efc8:	b.cc	44f078 <_obstack_memory_used@@Base+0xce88>  // b.lo, b.ul, b.last
  44efcc:	ldrb	w0, [x23]
  44efd0:	add	x19, x20, #0x9
  44efd4:	cbz	w0, 44f06c <_obstack_memory_used@@Base+0xce7c>
  44efd8:	mov	x1, x23
  44efdc:	mov	x0, x19
  44efe0:	bl	404710 <strcmp@plt>
  44efe4:	add	x21, x20, #0x9
  44efe8:	mov	w2, w0
  44efec:	mov	x0, x19
  44eff0:	cbz	w2, 44f050 <_obstack_memory_used@@Base+0xce60>
  44eff4:	ldrb	w1, [x19]
  44eff8:	cmp	x21, x19
  44effc:	cbnz	w1, 44f00c <_obstack_memory_used@@Base+0xce1c>
  44f000:	b.ne	44f09c <_obstack_memory_used@@Base+0xceac>  // b.any
  44f004:	ldrb	w1, [x20, #8]
  44f008:	cbz	w1, 44f09c <_obstack_memory_used@@Base+0xceac>
  44f00c:	bl	403ff0 <strlen@plt>
  44f010:	add	x0, x0, #0x1
  44f014:	add	x19, x19, x0
  44f018:	ldrb	w0, [x19]
  44f01c:	cbnz	w0, 44efd8 <_obstack_memory_used@@Base+0xcde8>
  44f020:	ldr	x0, [x20]
  44f024:	cbz	x0, 44efd8 <_obstack_memory_used@@Base+0xcde8>
  44f028:	add	x19, x0, #0x9
  44f02c:	mov	x20, x0
  44f030:	mov	x1, x23
  44f034:	mov	x0, x19
  44f038:	bl	404710 <strcmp@plt>
  44f03c:	add	x21, x20, #0x9
  44f040:	mov	w2, w0
  44f044:	mov	x0, x19
  44f048:	cbnz	w2, 44eff4 <_obstack_memory_used@@Base+0xce04>
  44f04c:	nop
  44f050:	str	x19, [x22, #48]
  44f054:	mov	w0, #0x1                   	// #1
  44f058:	ldp	x19, x20, [sp, #16]
  44f05c:	ldp	x21, x22, [sp, #32]
  44f060:	ldp	x23, x24, [sp, #48]
  44f064:	ldp	x29, x30, [sp], #64
  44f068:	ret
  44f06c:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44f070:	add	x19, x19, #0x948
  44f074:	b	44f050 <_obstack_memory_used@@Base+0xce60>
  44f078:	ldp	x19, x20, [sp, #16]
  44f07c:	ldp	x21, x22, [sp, #32]
  44f080:	ldp	x23, x24, [sp, #48]
  44f084:	ldp	x29, x30, [sp], #64
  44f088:	ret
  44f08c:	mov	w0, #0x1                   	// #1
  44f090:	ldp	x23, x24, [sp, #48]
  44f094:	ldp	x29, x30, [sp], #64
  44f098:	ret
  44f09c:	mov	x0, x23
  44f0a0:	sub	x21, x19, x21
  44f0a4:	bl	403ff0 <strlen@plt>
  44f0a8:	add	x24, x0, #0x1
  44f0ac:	mvn	x0, x21
  44f0b0:	cmp	x0, x24
  44f0b4:	b.cc	44f0dc <_obstack_memory_used@@Base+0xceec>  // b.lo, b.ul, b.last
  44f0b8:	add	x21, x24, x21
  44f0bc:	cmp	x21, #0x76
  44f0c0:	b.hi	44f0fc <_obstack_memory_used@@Base+0xcf0c>  // b.pmore
  44f0c4:	mov	x1, x23
  44f0c8:	mov	x2, x24
  44f0cc:	mov	x0, x19
  44f0d0:	bl	403f70 <memcpy@plt>
  44f0d4:	strb	wzr, [x19, x24]
  44f0d8:	b	44f050 <_obstack_memory_used@@Base+0xce60>
  44f0dc:	bl	404ad0 <__errno_location@plt>
  44f0e0:	mov	x1, x0
  44f0e4:	mov	w2, #0xc                   	// #12
  44f0e8:	mov	w0, #0x0                   	// #0
  44f0ec:	ldp	x19, x20, [sp, #16]
  44f0f0:	ldp	x21, x22, [sp, #32]
  44f0f4:	str	w2, [x1]
  44f0f8:	b	44f060 <_obstack_memory_used@@Base+0xce70>
  44f0fc:	mov	x0, x23
  44f100:	bl	44eef0 <_obstack_memory_used@@Base+0xcd00>
  44f104:	str	x0, [x20]
  44f108:	cbz	x0, 44f118 <_obstack_memory_used@@Base+0xcf28>
  44f10c:	add	x19, x0, #0x9
  44f110:	strb	wzr, [x0, #8]
  44f114:	b	44f050 <_obstack_memory_used@@Base+0xce60>
  44f118:	mov	w0, #0x0                   	// #0
  44f11c:	ldp	x19, x20, [sp, #16]
  44f120:	ldp	x21, x22, [sp, #32]
  44f124:	b	44f060 <_obstack_memory_used@@Base+0xce70>
  44f128:	stp	x29, x30, [sp, #-48]!
  44f12c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1ae10>
  44f130:	mov	x29, sp
  44f134:	stp	x19, x20, [sp, #16]
  44f138:	mov	x19, x0
  44f13c:	add	x0, x1, #0x778
  44f140:	str	x21, [sp, #32]
  44f144:	bl	404af0 <getenv@plt>
  44f148:	mov	x20, x0
  44f14c:	cbz	x0, 44f1e0 <_obstack_memory_used@@Base+0xcff0>
  44f150:	ldrb	w0, [x19, #8]
  44f154:	cbnz	w0, 44f1b8 <_obstack_memory_used@@Base+0xcfc8>
  44f158:	mov	x0, x20
  44f15c:	bl	44eef0 <_obstack_memory_used@@Base+0xcd00>
  44f160:	mov	x21, x0
  44f164:	cbz	x0, 44f1a4 <_obstack_memory_used@@Base+0xcfb4>
  44f168:	ldrb	w0, [x19, #8]
  44f16c:	add	x19, x19, #0x9
  44f170:	cmp	w0, #0x0
  44f174:	csel	x0, x19, xzr, ne  // ne = any
  44f178:	bl	44ee10 <_obstack_memory_used@@Base+0xcc20>
  44f17c:	cbz	w0, 44f200 <_obstack_memory_used@@Base+0xd010>
  44f180:	bl	404ad0 <__errno_location@plt>
  44f184:	ldr	w20, [x0]
  44f188:	mov	x19, x0
  44f18c:	cmp	x21, #0x1
  44f190:	b.eq	44f19c <_obstack_memory_used@@Base+0xcfac>  // b.none
  44f194:	mov	x0, x21
  44f198:	bl	44ee30 <_obstack_memory_used@@Base+0xcc40>
  44f19c:	mov	x21, #0x0                   	// #0
  44f1a0:	str	w20, [x19]
  44f1a4:	mov	x0, x21
  44f1a8:	ldp	x19, x20, [sp, #16]
  44f1ac:	ldr	x21, [sp, #32]
  44f1b0:	ldp	x29, x30, [sp], #48
  44f1b4:	ret
  44f1b8:	mov	x1, x20
  44f1bc:	add	x0, x19, #0x9
  44f1c0:	mov	x21, #0x1                   	// #1
  44f1c4:	bl	404710 <strcmp@plt>
  44f1c8:	cbnz	w0, 44f158 <_obstack_memory_used@@Base+0xcf68>
  44f1cc:	mov	x0, x21
  44f1d0:	ldp	x19, x20, [sp, #16]
  44f1d4:	ldr	x21, [sp, #32]
  44f1d8:	ldp	x29, x30, [sp], #48
  44f1dc:	ret
  44f1e0:	ldrb	w0, [x19, #8]
  44f1e4:	mov	x21, #0x1                   	// #1
  44f1e8:	cbnz	w0, 44f158 <_obstack_memory_used@@Base+0xcf68>
  44f1ec:	mov	x0, x21
  44f1f0:	ldp	x19, x20, [sp, #16]
  44f1f4:	ldr	x21, [sp, #32]
  44f1f8:	ldp	x29, x30, [sp], #48
  44f1fc:	ret
  44f200:	bl	404360 <tzset@plt>
  44f204:	mov	x0, x21
  44f208:	ldp	x19, x20, [sp, #16]
  44f20c:	ldr	x21, [sp, #32]
  44f210:	ldp	x29, x30, [sp], #48
  44f214:	ret
  44f218:	cmp	x0, #0x1
  44f21c:	b.eq	44f224 <_obstack_memory_used@@Base+0xd034>  // b.none
  44f220:	b	44ee30 <_obstack_memory_used@@Base+0xcc40>
  44f224:	ret
  44f228:	stp	x29, x30, [sp, #-48]!
  44f22c:	mov	x29, sp
  44f230:	stp	x19, x20, [sp, #16]
  44f234:	mov	x19, x2
  44f238:	stp	x21, x22, [sp, #32]
  44f23c:	mov	x22, x1
  44f240:	cbz	x0, 44f2d0 <_obstack_memory_used@@Base+0xd0e0>
  44f244:	mov	x20, x0
  44f248:	bl	44f128 <_obstack_memory_used@@Base+0xcf38>
  44f24c:	mov	x21, x0
  44f250:	cbz	x0, 44f2a4 <_obstack_memory_used@@Base+0xd0b4>
  44f254:	mov	x0, x22
  44f258:	mov	x1, x19
  44f25c:	bl	4040f0 <localtime_r@plt>
  44f260:	cbz	x0, 44f294 <_obstack_memory_used@@Base+0xd0a4>
  44f264:	mov	x0, x20
  44f268:	mov	x1, x19
  44f26c:	bl	44ef90 <_obstack_memory_used@@Base+0xcda0>
  44f270:	tst	w0, #0xff
  44f274:	b.eq	44f294 <_obstack_memory_used@@Base+0xd0a4>  // b.none
  44f278:	cmp	x21, #0x1
  44f27c:	b.ne	44f2b8 <_obstack_memory_used@@Base+0xd0c8>  // b.any
  44f280:	mov	x0, x19
  44f284:	ldp	x19, x20, [sp, #16]
  44f288:	ldp	x21, x22, [sp, #32]
  44f28c:	ldp	x29, x30, [sp], #48
  44f290:	ret
  44f294:	cmp	x21, #0x1
  44f298:	b.eq	44f2a4 <_obstack_memory_used@@Base+0xd0b4>  // b.none
  44f29c:	mov	x0, x21
  44f2a0:	bl	44ee68 <_obstack_memory_used@@Base+0xcc78>
  44f2a4:	mov	x0, #0x0                   	// #0
  44f2a8:	ldp	x19, x20, [sp, #16]
  44f2ac:	ldp	x21, x22, [sp, #32]
  44f2b0:	ldp	x29, x30, [sp], #48
  44f2b4:	ret
  44f2b8:	mov	x0, x21
  44f2bc:	bl	44ee68 <_obstack_memory_used@@Base+0xcc78>
  44f2c0:	tst	w0, #0xff
  44f2c4:	b.eq	44f2a4 <_obstack_memory_used@@Base+0xd0b4>  // b.none
  44f2c8:	mov	x0, x19
  44f2cc:	b	44f284 <_obstack_memory_used@@Base+0xd094>
  44f2d0:	mov	x0, x22
  44f2d4:	mov	x1, x2
  44f2d8:	ldp	x19, x20, [sp, #16]
  44f2dc:	ldp	x21, x22, [sp, #32]
  44f2e0:	ldp	x29, x30, [sp], #48
  44f2e4:	b	404450 <gmtime_r@plt>
  44f2e8:	stp	x29, x30, [sp, #-112]!
  44f2ec:	mov	x29, sp
  44f2f0:	stp	x19, x20, [sp, #16]
  44f2f4:	mov	x19, x1
  44f2f8:	cbz	x0, 44f3f8 <_obstack_memory_used@@Base+0xd208>
  44f2fc:	mov	x20, x0
  44f300:	str	x21, [sp, #32]
  44f304:	bl	44f128 <_obstack_memory_used@@Base+0xcf38>
  44f308:	mov	x21, x0
  44f30c:	cbz	x0, 44f40c <_obstack_memory_used@@Base+0xd21c>
  44f310:	mov	x0, x19
  44f314:	bl	404600 <mktime@plt>
  44f318:	str	x0, [sp, #48]
  44f31c:	cmn	x0, #0x1
  44f320:	b.eq	44f36c <_obstack_memory_used@@Base+0xd17c>  // b.none
  44f324:	mov	x1, x19
  44f328:	mov	x0, x20
  44f32c:	bl	44ef90 <_obstack_memory_used@@Base+0xcda0>
  44f330:	tst	w0, #0xff
  44f334:	b.ne	44f340 <_obstack_memory_used@@Base+0xd150>  // b.any
  44f338:	mov	x0, #0xffffffffffffffff    	// #-1
  44f33c:	str	x0, [sp, #48]
  44f340:	cmp	x21, #0x1
  44f344:	b.eq	44f358 <_obstack_memory_used@@Base+0xd168>  // b.none
  44f348:	mov	x0, x21
  44f34c:	bl	44ee68 <_obstack_memory_used@@Base+0xcc78>
  44f350:	tst	w0, #0xff
  44f354:	b.eq	44f40c <_obstack_memory_used@@Base+0xd21c>  // b.none
  44f358:	ldr	x21, [sp, #32]
  44f35c:	ldr	x0, [sp, #48]
  44f360:	ldp	x19, x20, [sp, #16]
  44f364:	ldp	x29, x30, [sp], #112
  44f368:	ret
  44f36c:	add	x1, sp, #0x38
  44f370:	add	x0, sp, #0x30
  44f374:	bl	4040f0 <localtime_r@plt>
  44f378:	cbz	x0, 44f340 <_obstack_memory_used@@Base+0xd150>
  44f37c:	ldr	w1, [x19, #32]
  44f380:	ldr	w0, [sp, #88]
  44f384:	cmp	w1, #0x0
  44f388:	cset	w3, eq  // eq = none
  44f38c:	cmp	w0, #0x0
  44f390:	cset	w2, eq  // eq = none
  44f394:	cmp	w3, w2
  44f398:	b.eq	44f3a8 <_obstack_memory_used@@Base+0xd1b8>  // b.none
  44f39c:	cmp	w1, #0x0
  44f3a0:	ccmp	w0, #0x0, #0x1, ge  // ge = tcont
  44f3a4:	b.ge	44f340 <_obstack_memory_used@@Base+0xd150>  // b.tcont
  44f3a8:	ldp	w3, w6, [sp, #64]
  44f3ac:	ldp	w2, w4, [x19, #8]
  44f3b0:	ldp	w5, w1, [sp, #72]
  44f3b4:	eor	w2, w2, w3
  44f3b8:	ldr	w0, [x19, #16]
  44f3bc:	eor	w4, w4, w6
  44f3c0:	ldr	w3, [x19, #20]
  44f3c4:	orr	w2, w2, w4
  44f3c8:	eor	w0, w0, w5
  44f3cc:	eor	w3, w3, w1
  44f3d0:	ldp	w6, w5, [sp, #56]
  44f3d4:	orr	w0, w0, w3
  44f3d8:	ldp	w1, w3, [x19]
  44f3dc:	orr	w0, w0, w2
  44f3e0:	eor	w1, w1, w6
  44f3e4:	eor	w2, w3, w5
  44f3e8:	orr	w1, w1, w2
  44f3ec:	orr	w0, w0, w1
  44f3f0:	cbz	w0, 44f324 <_obstack_memory_used@@Base+0xd134>
  44f3f4:	b	44f340 <_obstack_memory_used@@Base+0xd150>
  44f3f8:	mov	x0, x1
  44f3fc:	bl	404b50 <timegm@plt>
  44f400:	ldp	x19, x20, [sp, #16]
  44f404:	ldp	x29, x30, [sp], #112
  44f408:	ret
  44f40c:	mov	x0, #0xffffffffffffffff    	// #-1
  44f410:	ldr	x21, [sp, #32]
  44f414:	b	44f360 <_obstack_memory_used@@Base+0xd170>
  44f418:	mov	w1, w0
  44f41c:	cmp	w0, #0x26
  44f420:	b.eq	44f44c <_obstack_memory_used@@Base+0xd25c>  // b.none
  44f424:	b.gt	44f440 <_obstack_memory_used@@Base+0xd250>
  44f428:	cmp	w0, #0x10
  44f42c:	mov	w0, #0x0                   	// #0
  44f430:	b.eq	44f43c <_obstack_memory_used@@Base+0xd24c>  // b.none
  44f434:	cmp	w1, #0x16
  44f438:	cset	w0, ne  // ne = any
  44f43c:	ret
  44f440:	cmp	w0, #0x5f
  44f444:	cset	w0, ne  // ne = any
  44f448:	ret
  44f44c:	mov	w0, #0x0                   	// #0
  44f450:	ret
  44f454:	nop
  44f458:	stp	x29, x30, [sp, #-64]!
  44f45c:	mov	x29, sp
  44f460:	stp	x19, x20, [sp, #16]
  44f464:	mov	x20, x3
  44f468:	stp	x21, x22, [sp, #32]
  44f46c:	mov	x22, x1
  44f470:	mov	x21, x2
  44f474:	str	x23, [sp, #48]
  44f478:	mov	x23, x0
  44f47c:	mov	x0, #0x48                  	// #72
  44f480:	bl	404310 <malloc@plt>
  44f484:	mov	x19, x0
  44f488:	cbz	x0, 44f4b0 <_obstack_memory_used@@Base+0xd2c0>
  44f48c:	stp	x23, x22, [x19]
  44f490:	mov	x0, #0xc8                  	// #200
  44f494:	stp	x21, x20, [x19, #16]
  44f498:	stp	xzr, xzr, [x19, #32]
  44f49c:	bl	404310 <malloc@plt>
  44f4a0:	str	x0, [x19, #48]
  44f4a4:	cbz	x0, 44f4c8 <_obstack_memory_used@@Base+0xd2d8>
  44f4a8:	add	x1, x0, #0xc8
  44f4ac:	stp	x0, x1, [x19, #56]
  44f4b0:	mov	x0, x19
  44f4b4:	ldp	x19, x20, [sp, #16]
  44f4b8:	ldp	x21, x22, [sp, #32]
  44f4bc:	ldr	x23, [sp, #48]
  44f4c0:	ldp	x29, x30, [sp], #64
  44f4c4:	ret
  44f4c8:	mov	x0, x19
  44f4cc:	mov	x19, #0x0                   	// #0
  44f4d0:	bl	4047b0 <free@plt>
  44f4d4:	b	44f4b0 <_obstack_memory_used@@Base+0xd2c0>
  44f4d8:	stp	x29, x30, [sp, #-96]!
  44f4dc:	mov	x29, sp
  44f4e0:	stp	x19, x20, [sp, #16]
  44f4e4:	mov	x20, x0
  44f4e8:	ldr	x19, [x0, #32]
  44f4ec:	stp	x23, x24, [sp, #48]
  44f4f0:	ldr	x0, [x0, #48]
  44f4f4:	ldr	x23, [x20, #56]
  44f4f8:	add	x19, x0, x19
  44f4fc:	cmp	x19, x23
  44f500:	b.cs	44f780 <_obstack_memory_used@@Base+0xd590>  // b.hs, b.nlast
  44f504:	mov	w24, #0x20                  	// #32
  44f508:	stp	x21, x22, [sp, #32]
  44f50c:	stp	x25, x26, [sp, #64]
  44f510:	stp	x27, x28, [sp, #80]
  44f514:	b	44f57c <_obstack_memory_used@@Base+0xd38c>
  44f518:	sub	x0, x25, x19
  44f51c:	add	x0, x0, x21
  44f520:	cmp	x0, x26
  44f524:	b.lt	44f760 <_obstack_memory_used@@Base+0xd570>  // b.tstop
  44f528:	ldr	x28, [x20, #24]
  44f52c:	sub	x22, x26, #0x1
  44f530:	tbz	x28, #63, 44f630 <_obstack_memory_used@@Base+0xd440>
  44f534:	cmp	x23, x25
  44f538:	b.ls	44f95c <_obstack_memory_used@@Base+0xd76c>  // b.plast
  44f53c:	sub	x21, x22, x21
  44f540:	sub	x2, x23, x25
  44f544:	add	x0, x19, x21
  44f548:	mov	x1, x25
  44f54c:	bl	403f80 <memmove@plt>
  44f550:	ldr	x0, [x20, #40]
  44f554:	str	xzr, [x20, #40]
  44f558:	ldr	x2, [x20, #56]
  44f55c:	sub	x22, x22, x0
  44f560:	add	x22, x19, x22
  44f564:	add	x19, x19, x26
  44f568:	sub	x22, x22, x25
  44f56c:	sub	x23, x2, x22
  44f570:	str	x23, [x20, #56]
  44f574:	cmp	x19, x23
  44f578:	b.cs	44f770 <_obstack_memory_used@@Base+0xd580>  // b.hs, b.nlast
  44f57c:	ldr	x21, [x20, #40]
  44f580:	mov	x3, x21
  44f584:	cbnz	x21, 44f5e0 <_obstack_memory_used@@Base+0xd3f0>
  44f588:	ldr	x22, [x20, #8]
  44f58c:	cbz	x22, 44f798 <_obstack_memory_used@@Base+0xd5a8>
  44f590:	ldr	x1, [x20, #64]
  44f594:	add	x0, x23, x22
  44f598:	cmp	x1, x0
  44f59c:	b.ls	44f8f8 <_obstack_memory_used@@Base+0xd708>  // b.plast
  44f5a0:	add	x3, x19, x22
  44f5a4:	sub	x2, x23, x19
  44f5a8:	mov	x1, x19
  44f5ac:	mov	x0, x3
  44f5b0:	bl	403f80 <memmove@plt>
  44f5b4:	mov	x3, x0
  44f5b8:	ldr	x1, [x20, #56]
  44f5bc:	mov	x0, x19
  44f5c0:	mov	x2, x22
  44f5c4:	mov	x19, x3
  44f5c8:	add	x1, x1, x22
  44f5cc:	str	x1, [x20, #56]
  44f5d0:	mov	w1, #0x20                  	// #32
  44f5d4:	bl	404410 <memset@plt>
  44f5d8:	mov	x3, x22
  44f5dc:	str	x22, [x20, #40]
  44f5e0:	ldr	x23, [x20, #56]
  44f5e4:	mov	x0, x19
  44f5e8:	mov	x21, x3
  44f5ec:	mov	w1, #0xa                   	// #10
  44f5f0:	sub	x27, x23, x19
  44f5f4:	mov	x2, x27
  44f5f8:	bl	404960 <memchr@plt>
  44f5fc:	mov	x25, x0
  44f600:	tbz	x21, #63, 44f60c <_obstack_memory_used@@Base+0xd41c>
  44f604:	mov	x21, #0x0                   	// #0
  44f608:	str	xzr, [x20, #40]
  44f60c:	ldr	x26, [x20, #16]
  44f610:	cbnz	x25, 44f518 <_obstack_memory_used@@Base+0xd328>
  44f614:	add	x0, x21, x27
  44f618:	cmp	x0, x26
  44f61c:	b.cc	44f9ec <_obstack_memory_used@@Base+0xd7fc>  // b.lo, b.ul, b.last
  44f620:	ldr	x28, [x20, #24]
  44f624:	sub	x22, x26, #0x1
  44f628:	tbnz	x28, #63, 44f960 <_obstack_memory_used@@Base+0xd770>
  44f62c:	mov	x25, x23
  44f630:	add	x3, x22, #0x1
  44f634:	sub	x21, x3, x21
  44f638:	adds	x22, x19, x21
  44f63c:	b.cs	44f860 <_obstack_memory_used@@Base+0xd670>  // b.hs, b.nlast
  44f640:	bl	404740 <__ctype_b_loc@plt>
  44f644:	mov	x21, x22
  44f648:	ldr	x1, [x0]
  44f64c:	b	44f65c <_obstack_memory_used@@Base+0xd46c>
  44f650:	cmp	x19, x3
  44f654:	b.hi	44f868 <_obstack_memory_used@@Base+0xd678>  // b.pmore
  44f658:	mov	x21, x3
  44f65c:	ldrb	w0, [x21]
  44f660:	sub	x3, x21, #0x1
  44f664:	ldrh	w0, [x1, x0, lsl #1]
  44f668:	tbz	w0, #0, 44f650 <_obstack_memory_used@@Base+0xd460>
  44f66c:	add	x2, x21, #0x1
  44f670:	cmp	x19, x2
  44f674:	b.cs	44f878 <_obstack_memory_used@@Base+0xd688>  // b.hs, b.nlast
  44f678:	cmp	x19, x21
  44f67c:	b.ls	44f690 <_obstack_memory_used@@Base+0xd4a0>  // b.plast
  44f680:	b	44f950 <_obstack_memory_used@@Base+0xd760>
  44f684:	ldrb	w0, [x21]
  44f688:	ldrh	w0, [x1, x0, lsl #1]
  44f68c:	tbz	w0, #0, 44f6a0 <_obstack_memory_used@@Base+0xd4b0>
  44f690:	mov	x22, x21
  44f694:	sub	x21, x21, #0x1
  44f698:	cmp	x19, x21
  44f69c:	b.ls	44f684 <_obstack_memory_used@@Base+0xd494>  // b.plast
  44f6a0:	mov	x21, x2
  44f6a4:	nop
  44f6a8:	add	x0, x27, #0x1
  44f6ac:	add	x0, x19, x0
  44f6b0:	cmp	x21, x0
  44f6b4:	b.eq	44f7b8 <_obstack_memory_used@@Base+0xd5c8>  // b.none
  44f6b8:	add	x0, x22, #0x1
  44f6bc:	sub	x1, x21, x0
  44f6c0:	cmp	x1, x28
  44f6c4:	b.ge	44f7d0 <_obstack_memory_used@@Base+0xd5e0>  // b.tcont
  44f6c8:	cmp	x23, x21
  44f6cc:	b.ls	44f7c8 <_obstack_memory_used@@Base+0xd5d8>  // b.plast
  44f6d0:	ldr	x1, [x20, #64]
  44f6d4:	add	x28, x28, #0x1
  44f6d8:	sub	x1, x1, x23
  44f6dc:	cmp	x1, x28
  44f6e0:	b.gt	44f998 <_obstack_memory_used@@Base+0xd7a8>
  44f6e4:	ldr	x0, [x20, #48]
  44f6e8:	ldr	x3, [x20]
  44f6ec:	cmp	x0, x22
  44f6f0:	b.cs	44f704 <_obstack_memory_used@@Base+0xd514>  // b.hs, b.nlast
  44f6f4:	sub	x2, x22, x0
  44f6f8:	mov	x1, #0x1                   	// #1
  44f6fc:	bl	403fd0 <fwrite_unlocked@plt>
  44f700:	ldr	x3, [x20]
  44f704:	ldp	x0, x1, [x3, #40]
  44f708:	cmp	x0, x1
  44f70c:	b.cs	44f9dc <_obstack_memory_used@@Base+0xd7ec>  // b.hs, b.nlast
  44f710:	add	x1, x0, #0x1
  44f714:	str	x1, [x3, #40]
  44f718:	mov	w1, #0xa                   	// #10
  44f71c:	strb	w1, [x0]
  44f720:	ldr	x25, [x20, #48]
  44f724:	sub	x19, x19, x25
  44f728:	sub	x1, x21, x25
  44f72c:	add	x27, x27, x19
  44f730:	mov	x23, x1
  44f734:	mov	x19, x25
  44f738:	b	44f7e4 <_obstack_memory_used@@Base+0xd5f4>
  44f73c:	bl	404740 <__ctype_b_loc@plt>
  44f740:	ldrb	w2, [x22]
  44f744:	ldr	x1, [x0]
  44f748:	ldrh	w0, [x1, x2, lsl #1]
  44f74c:	tbnz	w0, #0, 44f88c <_obstack_memory_used@@Base+0xd69c>
  44f750:	add	x22, x22, #0x1
  44f754:	cmp	x22, x25
  44f758:	b.ne	44f73c <_obstack_memory_used@@Base+0xd54c>  // b.any
  44f75c:	nop
  44f760:	str	xzr, [x20, #40]
  44f764:	add	x19, x25, #0x1
  44f768:	cmp	x19, x23
  44f76c:	b.cc	44f57c <_obstack_memory_used@@Base+0xd38c>  // b.lo, b.ul, b.last
  44f770:	ldp	x21, x22, [sp, #32]
  44f774:	ldp	x25, x26, [sp, #64]
  44f778:	ldp	x27, x28, [sp, #80]
  44f77c:	ldr	x0, [x20, #48]
  44f780:	sub	x2, x23, x0
  44f784:	ldp	x23, x24, [sp, #48]
  44f788:	str	x2, [x20, #32]
  44f78c:	ldp	x19, x20, [sp, #16]
  44f790:	ldp	x29, x30, [sp], #96
  44f794:	ret
  44f798:	ldr	x23, [x20, #56]
  44f79c:	mov	x0, x19
  44f7a0:	mov	w1, #0xa                   	// #10
  44f7a4:	sub	x27, x23, x19
  44f7a8:	mov	x2, x27
  44f7ac:	bl	404960 <memchr@plt>
  44f7b0:	mov	x25, x0
  44f7b4:	b	44f60c <_obstack_memory_used@@Base+0xd41c>
  44f7b8:	ldr	x0, [x20, #64]
  44f7bc:	sub	x0, x0, x22
  44f7c0:	cmp	x0, x28
  44f7c4:	b.le	44f6c8 <_obstack_memory_used@@Base+0xd4d8>
  44f7c8:	add	x0, x22, #0x1
  44f7cc:	sub	x1, x21, x0
  44f7d0:	sub	x23, x21, x19
  44f7d4:	mov	x25, x19
  44f7d8:	mov	x19, x0
  44f7dc:	mov	w0, #0xa                   	// #10
  44f7e0:	strb	w0, [x22]
  44f7e4:	ldr	x0, [x20, #24]
  44f7e8:	cmp	x0, x1
  44f7ec:	b.le	44f810 <_obstack_memory_used@@Base+0xd620>
  44f7f0:	add	x1, x27, #0x1
  44f7f4:	add	x1, x25, x1
  44f7f8:	cmp	x21, x1
  44f7fc:	b.ne	44f8a0 <_obstack_memory_used@@Base+0xd6b0>  // b.any
  44f800:	ldr	x1, [x20, #64]
  44f804:	sub	x1, x1, x21
  44f808:	cmp	x0, x1
  44f80c:	b.gt	44f8a0 <_obstack_memory_used@@Base+0xd6b0>
  44f810:	cmp	x0, #0x0
  44f814:	b.le	44f83c <_obstack_memory_used@@Base+0xd64c>
  44f818:	add	x1, x19, #0x1
  44f81c:	mvn	x3, x19
  44f820:	sturb	w24, [x1, #-1]
  44f824:	mov	x19, x1
  44f828:	add	x1, x1, #0x1
  44f82c:	ldr	x0, [x20, #24]
  44f830:	add	x2, x3, x1
  44f834:	cmp	x0, x2
  44f838:	b.gt	44f820 <_obstack_memory_used@@Base+0xd630>
  44f83c:	cmp	x19, x21
  44f840:	b.cc	44f934 <_obstack_memory_used@@Base+0xd744>  // b.lo, b.ul, b.last
  44f844:	sub	x2, x27, x23
  44f848:	cmp	x0, #0x0
  44f84c:	add	x23, x19, x2
  44f850:	csinv	x0, x0, xzr, ne  // ne = any
  44f854:	str	x0, [x20, #40]
  44f858:	str	x23, [x20, #56]
  44f85c:	b	44f574 <_obstack_memory_used@@Base+0xd384>
  44f860:	add	x21, x22, #0x1
  44f864:	nop
  44f868:	cmp	x19, x21
  44f86c:	b.cs	44f878 <_obstack_memory_used@@Base+0xd688>  // b.hs, b.nlast
  44f870:	mov	x22, x21
  44f874:	b	44f6a8 <_obstack_memory_used@@Base+0xd4b8>
  44f878:	cmp	x22, x25
  44f87c:	b.cc	44f750 <_obstack_memory_used@@Base+0xd560>  // b.lo, b.ul, b.last
  44f880:	b.eq	44f760 <_obstack_memory_used@@Base+0xd570>  // b.none
  44f884:	bl	404740 <__ctype_b_loc@plt>
  44f888:	ldr	x1, [x0]
  44f88c:	mov	x21, x22
  44f890:	ldrb	w0, [x21, #1]!
  44f894:	ldrh	w0, [x1, x0, lsl #1]
  44f898:	tbnz	w0, #0, 44f890 <_obstack_memory_used@@Base+0xd6a0>
  44f89c:	b	44f6a8 <_obstack_memory_used@@Base+0xd4b8>
  44f8a0:	cmp	x0, #0x0
  44f8a4:	mov	x22, #0x0                   	// #0
  44f8a8:	b.le	44f83c <_obstack_memory_used@@Base+0xd64c>
  44f8ac:	ldr	x0, [x20]
  44f8b0:	ldp	x1, x2, [x0, #40]
  44f8b4:	add	x3, x1, #0x1
  44f8b8:	cmp	x1, x2
  44f8bc:	b.cs	44f8ec <_obstack_memory_used@@Base+0xd6fc>  // b.hs, b.nlast
  44f8c0:	str	x3, [x0, #40]
  44f8c4:	strb	w24, [x1]
  44f8c8:	ldr	x0, [x20, #24]
  44f8cc:	add	x22, x22, #0x1
  44f8d0:	cmp	x0, x22
  44f8d4:	b.le	44f83c <_obstack_memory_used@@Base+0xd64c>
  44f8d8:	ldr	x0, [x20]
  44f8dc:	ldp	x1, x2, [x0, #40]
  44f8e0:	add	x3, x1, #0x1
  44f8e4:	cmp	x1, x2
  44f8e8:	b.cc	44f8c0 <_obstack_memory_used@@Base+0xd6d0>  // b.lo, b.ul, b.last
  44f8ec:	mov	w1, #0x20                  	// #32
  44f8f0:	bl	404680 <__overflow@plt>
  44f8f4:	b	44f8c8 <_obstack_memory_used@@Base+0xd6d8>
  44f8f8:	mov	x21, #0x0                   	// #0
  44f8fc:	b	44f914 <_obstack_memory_used@@Base+0xd724>
  44f900:	str	x3, [x0, #40]
  44f904:	strb	w24, [x1]
  44f908:	add	x21, x21, #0x1
  44f90c:	cmp	x22, x21
  44f910:	b.eq	44f5d8 <_obstack_memory_used@@Base+0xd3e8>  // b.none
  44f914:	ldr	x0, [x20]
  44f918:	ldp	x1, x2, [x0, #40]
  44f91c:	add	x3, x1, #0x1
  44f920:	cmp	x1, x2
  44f924:	b.cc	44f900 <_obstack_memory_used@@Base+0xd710>  // b.lo, b.ul, b.last
  44f928:	mov	w1, #0x20                  	// #32
  44f92c:	bl	404680 <__overflow@plt>
  44f930:	b	44f908 <_obstack_memory_used@@Base+0xd718>
  44f934:	add	x2, x25, x27
  44f938:	mov	x1, x21
  44f93c:	sub	x2, x2, x21
  44f940:	mov	x0, x19
  44f944:	bl	403f80 <memmove@plt>
  44f948:	ldr	x0, [x20, #24]
  44f94c:	b	44f844 <_obstack_memory_used@@Base+0xd654>
  44f950:	mov	x22, x2
  44f954:	mov	x21, x2
  44f958:	b	44f6a8 <_obstack_memory_used@@Base+0xd4b8>
  44f95c:	add	x0, x27, x21
  44f960:	sub	x2, x22, x0
  44f964:	ldp	x21, x22, [sp, #32]
  44f968:	add	x23, x23, x2
  44f96c:	ldp	x25, x26, [sp, #64]
  44f970:	ldp	x27, x28, [sp, #80]
  44f974:	str	x0, [x20, #40]
  44f978:	ldr	x0, [x20, #48]
  44f97c:	str	x23, [x20, #56]
  44f980:	sub	x2, x23, x0
  44f984:	ldp	x23, x24, [sp, #48]
  44f988:	str	x2, [x20, #32]
  44f98c:	ldp	x19, x20, [sp, #16]
  44f990:	ldp	x29, x30, [sp], #96
  44f994:	ret
  44f998:	sub	x23, x23, x21
  44f99c:	mov	x1, x21
  44f9a0:	mov	x2, x23
  44f9a4:	add	x0, x22, x28
  44f9a8:	bl	403f80 <memmove@plt>
  44f9ac:	mov	x25, x19
  44f9b0:	ldr	x1, [x20, #24]
  44f9b4:	mov	x0, x22
  44f9b8:	mov	w2, #0xa                   	// #10
  44f9bc:	add	x21, x1, #0x1
  44f9c0:	add	x21, x22, x21
  44f9c4:	strb	w2, [x0], #1
  44f9c8:	add	x2, x21, x23
  44f9cc:	sub	x23, x21, x19
  44f9d0:	sub	x27, x2, x19
  44f9d4:	mov	x19, x0
  44f9d8:	b	44f7e4 <_obstack_memory_used@@Base+0xd5f4>
  44f9dc:	mov	x0, x3
  44f9e0:	mov	w1, #0xa                   	// #10
  44f9e4:	bl	404680 <__overflow@plt>
  44f9e8:	b	44f720 <_obstack_memory_used@@Base+0xd530>
  44f9ec:	ldp	x21, x22, [sp, #32]
  44f9f0:	ldp	x25, x26, [sp, #64]
  44f9f4:	ldp	x27, x28, [sp, #80]
  44f9f8:	str	x0, [x20, #40]
  44f9fc:	ldr	x0, [x20, #48]
  44fa00:	sub	x2, x23, x0
  44fa04:	ldp	x23, x24, [sp, #48]
  44fa08:	str	x2, [x20, #32]
  44fa0c:	ldp	x19, x20, [sp, #16]
  44fa10:	ldp	x29, x30, [sp], #96
  44fa14:	ret
  44fa18:	stp	x29, x30, [sp, #-32]!
  44fa1c:	mov	x29, sp
  44fa20:	str	x19, [sp, #16]
  44fa24:	mov	x19, x0
  44fa28:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  44fa2c:	ldp	x0, x2, [x19, #48]
  44fa30:	cmp	x2, x0
  44fa34:	b.ls	44fa4c <_obstack_memory_used@@Base+0xd85c>  // b.plast
  44fa38:	ldr	x3, [x19]
  44fa3c:	sub	x2, x2, x0
  44fa40:	mov	x1, #0x1                   	// #1
  44fa44:	bl	403fd0 <fwrite_unlocked@plt>
  44fa48:	ldr	x0, [x19, #48]
  44fa4c:	bl	4047b0 <free@plt>
  44fa50:	mov	x0, x19
  44fa54:	ldr	x19, [sp, #16]
  44fa58:	ldp	x29, x30, [sp], #32
  44fa5c:	b	4047b0 <free@plt>
  44fa60:	stp	x29, x30, [sp, #-32]!
  44fa64:	mov	x29, sp
  44fa68:	stp	x19, x20, [sp, #16]
  44fa6c:	mov	x19, x0
  44fa70:	mov	x20, x1
  44fa74:	bl	44f4d8 <_obstack_memory_used@@Base+0xd2e8>
  44fa78:	ldp	x0, x2, [x19, #48]
  44fa7c:	mov	x1, #0x1                   	// #1
  44fa80:	ldr	x3, [x19]
  44fa84:	sub	x2, x2, x0
  44fa88:	bl	403fd0 <fwrite_unlocked@plt>
  44fa8c:	mov	x3, x0
  44fa90:	ldp	x0, x2, [x19, #48]
  44fa94:	sub	x1, x2, x0
  44fa98:	cmp	x3, x1
  44fa9c:	b.ne	44fafc <_obstack_memory_used@@Base+0xd90c>  // b.any
  44faa0:	ldr	x2, [x19, #64]
  44faa4:	str	xzr, [x19, #32]
  44faa8:	str	x0, [x19, #56]
  44faac:	sub	x2, x2, x0
  44fab0:	cmp	x2, x20
  44fab4:	b.cs	44faec <_obstack_memory_used@@Base+0xd8fc>  // b.hs, b.nlast
  44fab8:	adds	x20, x2, x20
  44fabc:	b.cs	44fb2c <_obstack_memory_used@@Base+0xd93c>  // b.hs, b.nlast
  44fac0:	mov	x1, x20
  44fac4:	bl	404530 <realloc@plt>
  44fac8:	mov	x1, x0
  44facc:	cbz	x0, 44fb2c <_obstack_memory_used@@Base+0xd93c>
  44fad0:	add	x2, x0, x20
  44fad4:	stp	x1, x1, [x19, #48]
  44fad8:	mov	w0, #0x1                   	// #1
  44fadc:	str	x2, [x19, #64]
  44fae0:	ldp	x19, x20, [sp, #16]
  44fae4:	ldp	x29, x30, [sp], #32
  44fae8:	ret
  44faec:	mov	w0, #0x1                   	// #1
  44faf0:	ldp	x19, x20, [sp, #16]
  44faf4:	ldp	x29, x30, [sp], #32
  44faf8:	ret
  44fafc:	ldr	x1, [x19, #32]
  44fb00:	sub	x2, x2, x3
  44fb04:	str	x2, [x19, #56]
  44fb08:	sub	x2, x2, x0
  44fb0c:	sub	x1, x1, x3
  44fb10:	str	x1, [x19, #32]
  44fb14:	add	x1, x0, x3
  44fb18:	bl	403f80 <memmove@plt>
  44fb1c:	mov	w0, #0x0                   	// #0
  44fb20:	ldp	x19, x20, [sp, #16]
  44fb24:	ldp	x29, x30, [sp], #32
  44fb28:	ret
  44fb2c:	bl	404ad0 <__errno_location@plt>
  44fb30:	mov	x1, x0
  44fb34:	mov	w2, #0xc                   	// #12
  44fb38:	mov	w0, #0x0                   	// #0
  44fb3c:	ldp	x19, x20, [sp, #16]
  44fb40:	str	w2, [x1]
  44fb44:	ldp	x29, x30, [sp], #32
  44fb48:	ret
  44fb4c:	nop
  44fb50:	ldp	x3, x2, [x0, #56]
  44fb54:	sub	x2, x2, x3
  44fb58:	cmp	x2, x1
  44fb5c:	b.cc	44fb68 <_obstack_memory_used@@Base+0xd978>  // b.lo, b.ul, b.last
  44fb60:	mov	w0, #0x1                   	// #1
  44fb64:	ret
  44fb68:	b	44fa60 <_obstack_memory_used@@Base+0xd870>
  44fb6c:	nop
  44fb70:	stp	x29, x30, [sp, #-336]!
  44fb74:	mov	x29, sp
  44fb78:	stp	x23, x24, [sp, #48]
  44fb7c:	mov	x24, x0
  44fb80:	add	x23, sp, #0x120
  44fb84:	str	q0, [sp, #160]
  44fb88:	str	q1, [sp, #176]
  44fb8c:	str	q2, [sp, #192]
  44fb90:	str	q3, [sp, #208]
  44fb94:	str	q4, [sp, #224]
  44fb98:	str	q5, [sp, #240]
  44fb9c:	str	q6, [sp, #256]
  44fba0:	str	q7, [sp, #272]
  44fba4:	stp	x2, x3, [sp, #288]
  44fba8:	stp	x4, x5, [sp, #304]
  44fbac:	stp	x6, x7, [sp, #320]
  44fbb0:	ldp	x0, x2, [x24, #56]
  44fbb4:	stp	x19, x20, [sp, #16]
  44fbb8:	mov	x20, x1
  44fbbc:	stp	x21, x22, [sp, #32]
  44fbc0:	mov	x1, #0x96                  	// #150
  44fbc4:	mov	w22, #0xffffffd0            	// #-48
  44fbc8:	mov	w21, #0xffffff80            	// #-128
  44fbcc:	sub	x3, x2, x0
  44fbd0:	cmp	x1, x3
  44fbd4:	b.hi	44fc64 <_obstack_memory_used@@Base+0xda74>  // b.pmore
  44fbd8:	add	x1, sp, #0x150
  44fbdc:	stp	x1, x1, [sp, #96]
  44fbe0:	sub	x19, x2, x0
  44fbe4:	str	x23, [sp, #112]
  44fbe8:	mov	x1, x19
  44fbec:	stp	w22, w21, [sp, #120]
  44fbf0:	mov	w2, #0x1                   	// #1
  44fbf4:	ldp	x8, x9, [sp, #96]
  44fbf8:	add	x5, sp, #0x40
  44fbfc:	ldp	x6, x7, [sp, #112]
  44fc00:	mov	x4, x20
  44fc04:	mov	x3, #0xffffffffffffffff    	// #-1
  44fc08:	stp	x8, x9, [sp, #64]
  44fc0c:	stp	x6, x7, [sp, #80]
  44fc10:	stp	x8, x9, [sp, #128]
  44fc14:	stp	x6, x7, [sp, #144]
  44fc18:	bl	4042f0 <__vsnprintf_chk@plt>
  44fc1c:	add	w1, w0, #0x1
  44fc20:	cmp	x19, w0, sxtw
  44fc24:	sxtw	x2, w0
  44fc28:	b.ls	44fc50 <_obstack_memory_used@@Base+0xda60>  // b.plast
  44fc2c:	ldr	x1, [x24, #56]
  44fc30:	mov	x0, x2
  44fc34:	ldp	x19, x20, [sp, #16]
  44fc38:	add	x2, x1, x2
  44fc3c:	str	x2, [x24, #56]
  44fc40:	ldp	x21, x22, [sp, #32]
  44fc44:	ldp	x23, x24, [sp, #48]
  44fc48:	ldp	x29, x30, [sp], #336
  44fc4c:	ret
  44fc50:	ldp	x0, x2, [x24, #56]
  44fc54:	sxtw	x1, w1
  44fc58:	sub	x3, x2, x0
  44fc5c:	cmp	x1, x3
  44fc60:	b.ls	44fbd8 <_obstack_memory_used@@Base+0xd9e8>  // b.plast
  44fc64:	mov	x0, x24
  44fc68:	bl	44fa60 <_obstack_memory_used@@Base+0xd870>
  44fc6c:	cbz	w0, 44fc78 <_obstack_memory_used@@Base+0xda88>
  44fc70:	ldp	x0, x2, [x24, #56]
  44fc74:	b	44fbd8 <_obstack_memory_used@@Base+0xd9e8>
  44fc78:	mov	x0, #0xffffffffffffffff    	// #-1
  44fc7c:	ldp	x19, x20, [sp, #16]
  44fc80:	ldp	x21, x22, [sp, #32]
  44fc84:	ldp	x23, x24, [sp, #48]
  44fc88:	ldp	x29, x30, [sp], #336
  44fc8c:	ret
  44fc90:	stp	x29, x30, [sp, #-32]!
  44fc94:	mov	x29, sp
  44fc98:	stp	x19, x20, [sp, #16]
  44fc9c:	mov	x19, x0
  44fca0:	bl	4041e0 <__fpending@plt>
  44fca4:	mov	x20, x0
  44fca8:	mov	x0, x19
  44fcac:	ldr	w19, [x19]
  44fcb0:	and	w19, w19, #0x20
  44fcb4:	bl	4042a0 <fclose@plt>
  44fcb8:	cbnz	w19, 44fce0 <_obstack_memory_used@@Base+0xdaf0>
  44fcbc:	cbz	w0, 44fcd4 <_obstack_memory_used@@Base+0xdae4>
  44fcc0:	cbnz	x20, 44fcf8 <_obstack_memory_used@@Base+0xdb08>
  44fcc4:	bl	404ad0 <__errno_location@plt>
  44fcc8:	ldr	w0, [x0]
  44fccc:	cmp	w0, #0x9
  44fcd0:	csetm	w0, ne  // ne = any
  44fcd4:	ldp	x19, x20, [sp, #16]
  44fcd8:	ldp	x29, x30, [sp], #32
  44fcdc:	ret
  44fce0:	cbnz	w0, 44fcf8 <_obstack_memory_used@@Base+0xdb08>
  44fce4:	bl	404ad0 <__errno_location@plt>
  44fce8:	mov	x1, x0
  44fcec:	mov	w0, #0xffffffff            	// #-1
  44fcf0:	str	wzr, [x1]
  44fcf4:	b	44fcd4 <_obstack_memory_used@@Base+0xdae4>
  44fcf8:	mov	w0, #0xffffffff            	// #-1
  44fcfc:	b	44fcd4 <_obstack_memory_used@@Base+0xdae4>
  44fd00:	stp	x29, x30, [sp, #-64]!
  44fd04:	mov	x29, sp
  44fd08:	stp	x19, x20, [sp, #16]
  44fd0c:	bl	404140 <opendir@plt>
  44fd10:	mov	x19, x0
  44fd14:	cbz	x0, 44fd24 <_obstack_memory_used@@Base+0xdb34>
  44fd18:	bl	404920 <dirfd@plt>
  44fd1c:	cmp	w0, #0x2
  44fd20:	b.ls	44fd34 <_obstack_memory_used@@Base+0xdb44>  // b.plast
  44fd24:	mov	x0, x19
  44fd28:	ldp	x19, x20, [sp, #16]
  44fd2c:	ldp	x29, x30, [sp], #64
  44fd30:	ret
  44fd34:	mov	w2, #0x3                   	// #3
  44fd38:	mov	w1, #0x406                 	// #1030
  44fd3c:	stp	x21, x22, [sp, #32]
  44fd40:	str	x23, [sp, #48]
  44fd44:	bl	441b80 <argp_parse@@Base+0xdc98>
  44fd48:	mov	w21, w0
  44fd4c:	bl	404ad0 <__errno_location@plt>
  44fd50:	mov	x20, x0
  44fd54:	tbz	w21, #31, 44fd88 <_obstack_memory_used@@Base+0xdb98>
  44fd58:	ldr	w23, [x0]
  44fd5c:	mov	x22, #0x0                   	// #0
  44fd60:	mov	x0, x19
  44fd64:	mov	x19, x22
  44fd68:	bl	404590 <closedir@plt>
  44fd6c:	ldp	x21, x22, [sp, #32]
  44fd70:	str	w23, [x20]
  44fd74:	mov	x0, x19
  44fd78:	ldp	x19, x20, [sp, #16]
  44fd7c:	ldr	x23, [sp, #48]
  44fd80:	ldp	x29, x30, [sp], #64
  44fd84:	ret
  44fd88:	mov	w0, w21
  44fd8c:	bl	404610 <fdopendir@plt>
  44fd90:	ldr	w23, [x20]
  44fd94:	mov	x22, x0
  44fd98:	cbnz	x0, 44fd60 <_obstack_memory_used@@Base+0xdb70>
  44fd9c:	mov	w0, w21
  44fda0:	bl	4045c0 <close@plt>
  44fda4:	b	44fd60 <_obstack_memory_used@@Base+0xdb70>
  44fda8:	stp	x29, x30, [sp, #-64]!
  44fdac:	mov	x29, sp
  44fdb0:	str	x2, [sp, #56]
  44fdb4:	mov	w2, #0x0                   	// #0
  44fdb8:	tbnz	w1, #6, 44fdcc <_obstack_memory_used@@Base+0xdbdc>
  44fdbc:	bl	404340 <open@plt>
  44fdc0:	bl	451600 <_obstack_memory_used@@Base+0xf410>
  44fdc4:	ldp	x29, x30, [sp], #64
  44fdc8:	ret
  44fdcc:	mov	w2, #0xfffffff8            	// #-8
  44fdd0:	stp	w2, wzr, [sp, #40]
  44fdd4:	ldr	w2, [sp, #56]
  44fdd8:	add	x3, sp, #0x30
  44fddc:	add	x4, sp, #0x40
  44fde0:	stp	x4, x4, [sp, #16]
  44fde4:	str	x3, [sp, #32]
  44fde8:	bl	404340 <open@plt>
  44fdec:	bl	451600 <_obstack_memory_used@@Base+0xf410>
  44fdf0:	ldp	x29, x30, [sp], #64
  44fdf4:	ret
  44fdf8:	stp	x29, x30, [sp, #-16]!
  44fdfc:	mov	x1, #0x0                   	// #0
  44fe00:	mov	x29, sp
  44fe04:	bl	404be0 <setlocale@plt>
  44fe08:	mov	w1, #0x1                   	// #1
  44fe0c:	cbz	x0, 44fe30 <_obstack_memory_used@@Base+0xdc40>
  44fe10:	ldrb	w1, [x0]
  44fe14:	cmp	w1, #0x43
  44fe18:	b.eq	44fe3c <_obstack_memory_used@@Base+0xdc4c>  // b.none
  44fe1c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44fe20:	add	x1, x1, #0x730
  44fe24:	bl	404710 <strcmp@plt>
  44fe28:	cmp	w0, #0x0
  44fe2c:	cset	w1, ne  // ne = any
  44fe30:	mov	w0, w1
  44fe34:	ldp	x29, x30, [sp], #16
  44fe38:	ret
  44fe3c:	ldrb	w2, [x0, #1]
  44fe40:	mov	w1, #0x0                   	// #0
  44fe44:	cbnz	w2, 44fe1c <_obstack_memory_used@@Base+0xdc2c>
  44fe48:	mov	w0, w1
  44fe4c:	ldp	x29, x30, [sp], #16
  44fe50:	ret
  44fe54:	nop
  44fe58:	stp	x29, x30, [sp, #-48]!
  44fe5c:	mov	x29, sp
  44fe60:	stp	x19, x20, [sp, #16]
  44fe64:	mov	x20, x0
  44fe68:	cbz	x2, 44fea0 <_obstack_memory_used@@Base+0xdcb0>
  44fe6c:	sub	x19, x2, #0x1
  44fe70:	str	x21, [sp, #32]
  44fe74:	mov	x21, x1
  44fe78:	bl	4041f0 <__ctype_tolower_loc@plt>
  44fe7c:	nop
  44fe80:	ldrb	w3, [x21, x19]
  44fe84:	ldr	x2, [x0]
  44fe88:	ldr	w2, [x2, x3, lsl #2]
  44fe8c:	strb	w2, [x20, x19]
  44fe90:	sub	x19, x19, #0x1
  44fe94:	cmn	x19, #0x1
  44fe98:	b.ne	44fe80 <_obstack_memory_used@@Base+0xdc90>  // b.any
  44fe9c:	ldr	x21, [sp, #32]
  44fea0:	mov	x0, x20
  44fea4:	ldp	x19, x20, [sp, #16]
  44fea8:	ldp	x29, x30, [sp], #48
  44feac:	ret
  44feb0:	stp	x29, x30, [sp, #-48]!
  44feb4:	mov	x29, sp
  44feb8:	stp	x19, x20, [sp, #16]
  44febc:	mov	x20, x0
  44fec0:	cbz	x2, 44fef8 <_obstack_memory_used@@Base+0xdd08>
  44fec4:	sub	x19, x2, #0x1
  44fec8:	str	x21, [sp, #32]
  44fecc:	mov	x21, x1
  44fed0:	bl	404540 <__ctype_toupper_loc@plt>
  44fed4:	nop
  44fed8:	ldrb	w3, [x21, x19]
  44fedc:	ldr	x2, [x0]
  44fee0:	ldr	w2, [x2, x3, lsl #2]
  44fee4:	strb	w2, [x20, x19]
  44fee8:	sub	x19, x19, #0x1
  44feec:	cmn	x19, #0x1
  44fef0:	b.ne	44fed8 <_obstack_memory_used@@Base+0xdce8>  // b.any
  44fef4:	ldr	x21, [sp, #32]
  44fef8:	mov	x0, x20
  44fefc:	ldp	x19, x20, [sp, #16]
  44ff00:	ldp	x29, x30, [sp], #48
  44ff04:	ret
  44ff08:	sub	sp, sp, #0x4e0
  44ff0c:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  44ff10:	add	x9, x9, #0x948
  44ff14:	stp	x29, x30, [sp]
  44ff18:	mov	x29, sp
  44ff1c:	stp	x25, x26, [sp, #64]
  44ff20:	ldr	w25, [x3, #8]
  44ff24:	ldr	x26, [x3, #48]
  44ff28:	stp	x19, x20, [sp, #16]
  44ff2c:	mov	x19, x2
  44ff30:	stp	x21, x22, [sp, #32]
  44ff34:	cmp	x26, #0x0
  44ff38:	csel	x26, x9, x26, eq  // eq = none
  44ff3c:	stp	x23, x24, [sp, #48]
  44ff40:	mov	x21, x0
  44ff44:	mov	x22, x6
  44ff48:	stp	x27, x28, [sp, #80]
  44ff4c:	mov	w23, w7
  44ff50:	mov	x27, x1
  44ff54:	str	x5, [sp, #104]
  44ff58:	and	w24, w4, #0xff
  44ff5c:	cmp	w25, #0xc
  44ff60:	b.le	44fff0 <_obstack_memory_used@@Base+0xde00>
  44ff64:	sub	w25, w25, #0xc
  44ff68:	ldrb	w0, [x19]
  44ff6c:	cbz	w0, 451058 <_obstack_memory_used@@Base+0xee68>
  44ff70:	add	x1, sp, #0xca
  44ff74:	mov	x20, #0x0                   	// #0
  44ff78:	str	x1, [sp, #96]
  44ff7c:	add	x1, sp, #0xe1
  44ff80:	str	x1, [sp, #112]
  44ff84:	cmp	w0, #0x25
  44ff88:	b.eq	450000 <_obstack_memory_used@@Base+0xde10>  // b.none
  44ff8c:	sub	x1, x27, x20
  44ff90:	cmp	x1, #0x1
  44ff94:	b.ls	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.plast
  44ff98:	cbz	x21, 44ffa0 <_obstack_memory_used@@Base+0xddb0>
  44ff9c:	strb	w0, [x21], #1
  44ffa0:	add	x20, x20, #0x1
  44ffa4:	mov	x4, x19
  44ffa8:	ldrb	w0, [x4, #1]
  44ffac:	add	x19, x4, #0x1
  44ffb0:	cbnz	w0, 44ff84 <_obstack_memory_used@@Base+0xdd94>
  44ffb4:	cmp	x21, #0x0
  44ffb8:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  44ffbc:	b.eq	44ffcc <_obstack_memory_used@@Base+0xdddc>  // b.none
  44ffc0:	strb	wzr, [x21]
  44ffc4:	b	44ffcc <_obstack_memory_used@@Base+0xdddc>
  44ffc8:	mov	x20, #0x0                   	// #0
  44ffcc:	mov	x0, x20
  44ffd0:	ldp	x29, x30, [sp]
  44ffd4:	ldp	x19, x20, [sp, #16]
  44ffd8:	ldp	x21, x22, [sp, #32]
  44ffdc:	ldp	x23, x24, [sp, #48]
  44ffe0:	ldp	x25, x26, [sp, #64]
  44ffe4:	ldp	x27, x28, [sp, #80]
  44ffe8:	add	sp, sp, #0x4e0
  44ffec:	ret
  44fff0:	cmp	w25, #0x0
  44fff4:	mov	w0, #0xc                   	// #12
  44fff8:	csel	w25, w25, w0, ne  // ne = any
  44fffc:	b	44ff68 <_obstack_memory_used@@Base+0xdd78>
  450000:	mov	w13, w24
  450004:	mov	w4, #0x0                   	// #0
  450008:	mov	w12, #0x0                   	// #0
  45000c:	nop
  450010:	ldrb	w0, [x19, #1]!
  450014:	cmp	w0, #0x30
  450018:	mov	w28, w0
  45001c:	b.eq	450040 <_obstack_memory_used@@Base+0xde50>  // b.none
  450020:	b.hi	450124 <_obstack_memory_used@@Base+0xdf34>  // b.pmore
  450024:	cmp	w0, #0x23
  450028:	b.ne	450048 <_obstack_memory_used@@Base+0xde58>  // b.any
  45002c:	ldrb	w0, [x19, #1]!
  450030:	mov	w4, #0x1                   	// #1
  450034:	cmp	w0, #0x30
  450038:	mov	w28, w0
  45003c:	b.ne	450020 <_obstack_memory_used@@Base+0xde30>  // b.any
  450040:	mov	w12, w0
  450044:	b	450010 <_obstack_memory_used@@Base+0xde20>
  450048:	cmp	w0, #0x2d
  45004c:	b.eq	450040 <_obstack_memory_used@@Base+0xde50>  // b.none
  450050:	mov	w9, #0xffffffff            	// #-1
  450054:	cmp	w0, #0x4f
  450058:	b.eq	450194 <_obstack_memory_used@@Base+0xdfa4>  // b.none
  45005c:	cmp	w0, #0x7a
  450060:	mov	w28, #0x0                   	// #0
  450064:	b.ls	4501a4 <_obstack_memory_used@@Base+0xdfb4>  // b.plast
  450068:	sub	x0, x19, #0x1
  45006c:	add	w2, w19, #0x1
  450070:	mov	x5, x0
  450074:	sub	w28, w2, w0
  450078:	ldrb	w1, [x0], #-1
  45007c:	cmp	w1, #0x25
  450080:	b.ne	450070 <_obstack_memory_used@@Base+0xde80>  // b.any
  450084:	cmp	w9, #0x0
  450088:	sxtw	x28, w28
  45008c:	csel	w1, w9, wzr, ge  // ge = tcont
  450090:	mov	x4, x19
  450094:	sub	x2, x27, x20
  450098:	sxtw	x1, w1
  45009c:	cmp	x28, x1
  4500a0:	csel	x7, x28, x1, cs  // cs = hs, nlast
  4500a4:	cmp	x7, x2
  4500a8:	b.cs	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.hs, b.nlast
  4500ac:	cbz	x21, 45011c <_obstack_memory_used@@Base+0xdf2c>
  4500b0:	cmp	x1, x28
  4500b4:	b.ls	4500f4 <_obstack_memory_used@@Base+0xdf04>  // b.plast
  4500b8:	sxtw	x2, w9
  4500bc:	str	w13, [sp, #120]
  4500c0:	stp	x5, x4, [sp, #128]
  4500c4:	sub	x2, x2, x28
  4500c8:	cmp	w12, #0x30
  4500cc:	stp	x7, x3, [sp, #144]
  4500d0:	add	x6, x21, x2
  4500d4:	b.eq	451204 <_obstack_memory_used@@Base+0xf014>  // b.none
  4500d8:	mov	x0, x21
  4500dc:	mov	w1, #0x20                  	// #32
  4500e0:	mov	x21, x6
  4500e4:	bl	404410 <memset@plt>
  4500e8:	ldp	x5, x4, [sp, #128]
  4500ec:	ldp	x7, x3, [sp, #144]
  4500f0:	ldr	w13, [sp, #120]
  4500f4:	stp	x4, x7, [sp, #120]
  4500f8:	mov	x1, x5
  4500fc:	mov	x2, x28
  450100:	str	x3, [sp, #136]
  450104:	mov	x0, x21
  450108:	cbz	w13, 451018 <_obstack_memory_used@@Base+0xee28>
  45010c:	bl	44feb0 <_obstack_memory_used@@Base+0xdcc0>
  450110:	add	x21, x21, x28
  450114:	ldp	x4, x7, [sp, #120]
  450118:	ldr	x3, [sp, #136]
  45011c:	add	x20, x20, x7
  450120:	b	44ffa8 <_obstack_memory_used@@Base+0xddb8>
  450124:	cmp	w0, #0x5e
  450128:	b.ne	450134 <_obstack_memory_used@@Base+0xdf44>  // b.any
  45012c:	mov	w13, #0x1                   	// #1
  450130:	b	450010 <_obstack_memory_used@@Base+0xde20>
  450134:	cmp	w0, #0x5f
  450138:	b.eq	450040 <_obstack_memory_used@@Base+0xde50>  // b.none
  45013c:	sub	w1, w0, #0x30
  450140:	cmp	w1, #0x9
  450144:	b.hi	451570 <_obstack_memory_used@@Base+0xf380>  // b.pmore
  450148:	mov	w6, #0xcccc                	// #52428
  45014c:	mov	w9, #0x0                   	// #0
  450150:	movk	w6, #0xccc, lsl #16
  450154:	mov	x1, x19
  450158:	cmp	w9, w6
  45015c:	ldrb	w0, [x1, #1]!
  450160:	sub	w2, w0, #0x30
  450164:	b.gt	4501c4 <_obstack_memory_used@@Base+0xdfd4>
  450168:	ldrb	w5, [x19]
  45016c:	b.eq	4501bc <_obstack_memory_used@@Base+0xdfcc>  // b.none
  450170:	add	w9, w9, w9, lsl #2
  450174:	sub	w5, w5, #0x30
  450178:	mov	x19, x1
  45017c:	add	w9, w5, w9, lsl #1
  450180:	cmp	w2, #0x9
  450184:	b.ls	450154 <_obstack_memory_used@@Base+0xdf64>  // b.plast
  450188:	mov	w28, w0
  45018c:	cmp	w0, #0x45
  450190:	b.ne	450054 <_obstack_memory_used@@Base+0xde64>  // b.any
  450194:	ldrb	w0, [x19, #1]
  450198:	add	x19, x19, #0x1
  45019c:	cmp	w0, #0x7a
  4501a0:	b.hi	450068 <_obstack_memory_used@@Base+0xde78>  // b.pmore
  4501a4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  4501a8:	add	x1, x1, #0x738
  4501ac:	ldrh	w1, [x1, w0, uxtw #1]
  4501b0:	adr	x2, 4501bc <_obstack_memory_used@@Base+0xdfcc>
  4501b4:	add	x1, x2, w1, sxth #2
  4501b8:	br	x1
  4501bc:	cmp	w5, #0x37
  4501c0:	b.ls	450170 <_obstack_memory_used@@Base+0xdf80>  // b.plast
  4501c4:	cmp	w2, #0x9
  4501c8:	b.hi	4501dc <_obstack_memory_used@@Base+0xdfec>  // b.pmore
  4501cc:	ldrb	w0, [x19, #2]!
  4501d0:	mov	w9, #0x7fffffff            	// #2147483647
  4501d4:	sub	w2, w0, #0x30
  4501d8:	b	450180 <_obstack_memory_used@@Base+0xdf90>
  4501dc:	mov	x19, x1
  4501e0:	mov	w28, w0
  4501e4:	mov	w9, #0x7fffffff            	// #2147483647
  4501e8:	b	45018c <_obstack_memory_used@@Base+0xdf9c>
  4501ec:	cmp	w28, #0x4f
  4501f0:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  4501f4:	str	wzr, [sp, #144]
  4501f8:	mov	w1, #0x2520                	// #9504
  4501fc:	strh	w1, [sp, #200]
  450200:	cbnz	w28, 451578 <_obstack_memory_used@@Base+0xf388>
  450204:	ldr	x5, [sp, #96]
  450208:	mov	x4, x19
  45020c:	strb	w0, [x5]
  450210:	add	x2, sp, #0xc8
  450214:	strb	wzr, [x5, #1]
  450218:	add	x0, sp, #0xe0
  45021c:	mov	x1, #0x400                 	// #1024
  450220:	stp	x3, x4, [sp, #120]
  450224:	str	w9, [sp, #136]
  450228:	str	w13, [sp, #152]
  45022c:	str	w12, [sp, #160]
  450230:	bl	404150 <strftime@plt>
  450234:	ldp	x3, x4, [sp, #120]
  450238:	cbz	x0, 44ffa8 <_obstack_memory_used@@Base+0xddb8>
  45023c:	ldr	w9, [sp, #136]
  450240:	sub	x19, x0, #0x1
  450244:	sub	x1, x27, x20
  450248:	cmp	w9, #0x0
  45024c:	csel	w0, w9, wzr, ge  // ge = tcont
  450250:	sxtw	x0, w0
  450254:	cmp	x19, x0
  450258:	csel	x5, x19, x0, cs  // cs = hs, nlast
  45025c:	cmp	x1, x5
  450260:	b.ls	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.plast
  450264:	cbz	x21, 4502ec <_obstack_memory_used@@Base+0xe0fc>
  450268:	cmp	w28, #0x0
  45026c:	ldr	w13, [sp, #152]
  450270:	ccmp	x19, x0, #0x2, eq  // eq = none
  450274:	b.cs	4502bc <_obstack_memory_used@@Base+0xe0cc>  // b.hs, b.nlast
  450278:	ldr	w12, [sp, #160]
  45027c:	sxtw	x2, w9
  450280:	str	x5, [sp, #136]
  450284:	sub	x2, x2, x19
  450288:	str	x3, [sp, #152]
  45028c:	add	x6, x21, x2
  450290:	cmp	w12, #0x30
  450294:	b.eq	451060 <_obstack_memory_used@@Base+0xee70>  // b.none
  450298:	mov	x0, x21
  45029c:	mov	w1, #0x20                  	// #32
  4502a0:	mov	x21, x6
  4502a4:	str	w13, [sp, #120]
  4502a8:	str	x4, [sp, #128]
  4502ac:	bl	404410 <memset@plt>
  4502b0:	ldp	x4, x5, [sp, #128]
  4502b4:	ldr	w13, [sp, #120]
  4502b8:	ldr	x3, [sp, #152]
  4502bc:	stp	x4, x5, [sp, #120]
  4502c0:	ldr	w0, [sp, #144]
  4502c4:	str	x3, [sp, #136]
  4502c8:	mov	x2, x19
  4502cc:	ldr	x1, [sp, #112]
  4502d0:	cbnz	w0, 451040 <_obstack_memory_used@@Base+0xee50>
  4502d4:	mov	x0, x21
  4502d8:	cbz	w13, 45102c <_obstack_memory_used@@Base+0xee3c>
  4502dc:	bl	44feb0 <_obstack_memory_used@@Base+0xdcc0>
  4502e0:	add	x21, x21, x19
  4502e4:	ldp	x4, x5, [sp, #120]
  4502e8:	ldr	x3, [sp, #136]
  4502ec:	add	x20, x20, x5
  4502f0:	b	44ffa8 <_obstack_memory_used@@Base+0xddb8>
  4502f4:	cmp	w28, #0x45
  4502f8:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  4502fc:	ldp	w4, w2, [x3, #20]
  450300:	mov	w1, #0x2493                	// #9363
  450304:	ldr	w7, [x3, #28]
  450308:	movk	w1, #0x9249, lsl #16
  45030c:	cmp	w4, #0x0
  450310:	mov	w16, #0xffffff9c            	// #-100
  450314:	sub	w15, w7, w2
  450318:	mov	w5, #0x12c                 	// #300
  45031c:	add	w15, w15, #0x17e
  450320:	csel	w5, w5, w16, lt  // lt = tstop
  450324:	add	w5, w4, w5
  450328:	smull	x1, w15, w1
  45032c:	lsr	x1, x1, #32
  450330:	add	w1, w15, w1
  450334:	asr	w1, w1, #2
  450338:	sub	w1, w1, w15, asr #31
  45033c:	lsl	w16, w1, #3
  450340:	sub	w1, w16, w1
  450344:	sub	w1, w15, w1
  450348:	sub	w1, w7, w1
  45034c:	adds	w1, w1, #0x3
  450350:	b.mi	4512e8 <_obstack_memory_used@@Base+0xf0f8>  // b.first
  450354:	tst	x5, #0x3
  450358:	mov	w15, #0x16d                 	// #365
  45035c:	b.ne	4503a4 <_obstack_memory_used@@Base+0xe1b4>  // b.any
  450360:	mov	w17, #0x5c29                	// #23593
  450364:	mov	w15, #0xb850                	// #47184
  450368:	movk	w17, #0xc28f, lsl #16
  45036c:	movk	w15, #0x51e, lsl #16
  450370:	mov	w16, #0x5c28                	// #23592
  450374:	madd	w5, w5, w17, w15
  450378:	movk	w16, #0x28f, lsl #16
  45037c:	mov	w15, #0x16e                 	// #366
  450380:	ror	w17, w5, #2
  450384:	cmp	w17, w16
  450388:	b.hi	4503a4 <_obstack_memory_used@@Base+0xe1b4>  // b.pmore
  45038c:	mov	w15, #0xd70a                	// #55050
  450390:	ror	w5, w5, #4
  450394:	movk	w15, #0xa3, lsl #16
  450398:	cmp	w5, w15
  45039c:	cset	w15, ls  // ls = plast
  4503a0:	add	w15, w15, #0x16d
  4503a4:	sub	w7, w7, w15
  4503a8:	mov	w5, #0x2493                	// #9363
  4503ac:	sub	w2, w7, w2
  4503b0:	movk	w5, #0x9249, lsl #16
  4503b4:	add	w2, w2, #0x17e
  4503b8:	smull	x5, w2, w5
  4503bc:	lsr	x5, x5, #32
  4503c0:	add	w5, w2, w5
  4503c4:	asr	w5, w5, #2
  4503c8:	sub	w5, w5, w2, asr #31
  4503cc:	lsl	w15, w5, #3
  4503d0:	sub	w5, w15, w5
  4503d4:	sub	w2, w2, w5
  4503d8:	sub	w2, w7, w2
  4503dc:	adds	w2, w2, #0x3
  4503e0:	csel	w1, w1, w2, mi  // mi = first
  4503e4:	cmp	w2, #0x0
  4503e8:	cset	w5, ge  // ge = tcont
  4503ec:	cmp	w0, #0x47
  4503f0:	b.eq	4513e0 <_obstack_memory_used@@Base+0xf1f0>  // b.none
  4503f4:	cmp	w0, #0x67
  4503f8:	b.ne	4513b8 <_obstack_memory_used@@Base+0xf1c8>  // b.any
  4503fc:	mov	w1, #0x851f                	// #34079
  450400:	mov	w15, #0x64                  	// #100
  450404:	movk	w1, #0x51eb, lsl #16
  450408:	mov	w7, #0x2                   	// #2
  45040c:	smull	x2, w4, w1
  450410:	asr	x2, x2, #37
  450414:	sub	w2, w2, w4, asr #31
  450418:	msub	w2, w2, w15, w4
  45041c:	add	w2, w2, w5
  450420:	smull	x1, w2, w1
  450424:	asr	x1, x1, #37
  450428:	sub	w1, w1, w2, asr #31
  45042c:	msub	w1, w1, w15, w2
  450430:	tbz	w1, #31, 450450 <_obstack_memory_used@@Base+0xe260>
  450434:	mov	w2, #0xfffff894            	// #-1900
  450438:	sub	w5, w2, w5
  45043c:	cmp	w4, w5
  450440:	neg	w2, w1
  450444:	add	w1, w1, w15
  450448:	csel	w1, w1, w2, ge  // ge = tcont
  45044c:	nop
  450450:	lsr	w15, w1, #31
  450454:	mov	w5, #0x0                   	// #0
  450458:	mov	w16, #0x0                   	// #0
  45045c:	cmp	w28, #0x4f
  450460:	eor	w2, w15, #0x1
  450464:	csel	w2, w2, wzr, eq  // eq = none
  450468:	cbz	w2, 450cd8 <_obstack_memory_used@@Base+0xeae8>
  45046c:	mov	w1, #0x2520                	// #9504
  450470:	str	wzr, [sp, #144]
  450474:	strh	w1, [sp, #200]
  450478:	mov	x4, x19
  45047c:	add	x5, sp, #0xcb
  450480:	strb	w28, [sp, #202]
  450484:	mov	w28, w7
  450488:	b	45020c <_obstack_memory_used@@Base+0xe01c>
  45048c:	cbnz	w28, 450068 <_obstack_memory_used@@Base+0xde78>
  450490:	cmp	w4, #0x0
  450494:	mov	w1, #0x2520                	// #9504
  450498:	csel	w13, w13, w4, eq  // eq = none
  45049c:	mov	w28, #0x0                   	// #0
  4504a0:	mov	x4, x19
  4504a4:	str	wzr, [sp, #144]
  4504a8:	strh	w1, [sp, #200]
  4504ac:	ldr	x5, [sp, #96]
  4504b0:	b	45020c <_obstack_memory_used@@Base+0xe01c>
  4504b4:	cmp	w4, #0x0
  4504b8:	csel	w13, w13, w4, eq  // eq = none
  4504bc:	cmp	w28, #0x45
  4504c0:	b.ne	4501f4 <_obstack_memory_used@@Base+0xe004>  // b.any
  4504c4:	b	450068 <_obstack_memory_used@@Base+0xde78>
  4504c8:	cmp	w28, #0x45
  4504cc:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  4504d0:	ldr	w1, [x3, #4]
  4504d4:	mov	w7, #0x2                   	// #2
  4504d8:	b	450450 <_obstack_memory_used@@Base+0xe260>
  4504dc:	cmp	w28, #0x45
  4504e0:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  4504e4:	cmn	w9, #0x1
  4504e8:	b.ne	451380 <_obstack_memory_used@@Base+0xf190>  // b.any
  4504ec:	mov	w9, #0x9                   	// #9
  4504f0:	mov	w1, w23
  4504f4:	mov	w7, w9
  4504f8:	b	450450 <_obstack_memory_used@@Base+0xe260>
  4504fc:	cmp	w28, #0x45
  450500:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  450504:	ldr	w1, [x3, #8]
  450508:	mov	w7, #0x2                   	// #2
  45050c:	b	450450 <_obstack_memory_used@@Base+0xe260>
  450510:	ldr	w2, [x3, #24]
  450514:	mov	w1, #0x2493                	// #9363
  450518:	movk	w1, #0x9249, lsl #16
  45051c:	mov	w7, #0x1                   	// #1
  450520:	add	w2, w2, #0x6
  450524:	smull	x1, w2, w1
  450528:	lsr	x1, x1, #32
  45052c:	add	w1, w2, w1
  450530:	asr	w1, w1, #2
  450534:	sub	w1, w1, w2, asr #31
  450538:	lsl	w4, w1, #3
  45053c:	sub	w1, w4, w1
  450540:	sub	w1, w2, w1
  450544:	add	w1, w1, w7
  450548:	b	450450 <_obstack_memory_used@@Base+0xe260>
  45054c:	cmp	w28, #0x45
  450550:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  450554:	ldr	w1, [x3, #24]
  450558:	mov	w7, #0x1                   	// #1
  45055c:	b	450450 <_obstack_memory_used@@Base+0xe260>
  450560:	cmp	w9, #0x0
  450564:	sub	x0, x27, x20
  450568:	csel	w28, w9, wzr, ge  // ge = tcont
  45056c:	sxtw	x28, w28
  450570:	cmp	x28, #0x0
  450574:	csinc	x28, x28, xzr, ne  // ne = any
  450578:	cmp	x0, x28
  45057c:	b.ls	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.plast
  450580:	cbz	x21, 4505c0 <_obstack_memory_used@@Base+0xe3d0>
  450584:	cmp	w9, #0x1
  450588:	b.le	4505b8 <_obstack_memory_used@@Base+0xe3c8>
  45058c:	sxtw	x2, w9
  450590:	str	x3, [sp, #120]
  450594:	sub	x2, x2, #0x1
  450598:	cmp	w12, #0x30
  45059c:	add	x4, x21, x2
  4505a0:	b.eq	4514dc <_obstack_memory_used@@Base+0xf2ec>  // b.none
  4505a4:	mov	x0, x21
  4505a8:	mov	w1, #0x20                  	// #32
  4505ac:	mov	x21, x4
  4505b0:	bl	404410 <memset@plt>
  4505b4:	ldr	x3, [sp, #120]
  4505b8:	mov	w0, #0xa                   	// #10
  4505bc:	strb	w0, [x21], #1
  4505c0:	add	x20, x20, x28
  4505c4:	mov	x4, x19
  4505c8:	b	44ffa8 <_obstack_memory_used@@Base+0xddb8>
  4505cc:	ldr	w1, [x3, #16]
  4505d0:	cmp	w28, #0x4f
  4505d4:	mov	w7, #0x1                   	// #1
  4505d8:	b.eq	45046c <_obstack_memory_used@@Base+0xe27c>  // b.none
  4505dc:	mov	w0, #0xb                   	// #11
  4505e0:	mov	w16, #0x0                   	// #0
  4505e4:	mov	w15, #0x0                   	// #0
  4505e8:	mov	w5, #0x0                   	// #0
  4505ec:	mul	w1, w1, w0
  4505f0:	asr	w1, w1, #5
  4505f4:	add	w1, w1, w7
  4505f8:	mov	w6, #0xcccd                	// #52429
  4505fc:	add	x28, sp, #0xdf
  450600:	mov	w17, #0x3a                  	// #58
  450604:	movk	w6, #0xcccc, lsl #16
  450608:	b	450640 <_obstack_memory_used@@Base+0xe450>
  45060c:	sub	x28, x28, #0x2
  450610:	strb	w17, [x28, #1]
  450614:	umull	x2, w1, w6
  450618:	asr	w5, w5, #1
  45061c:	cmp	w5, #0x0
  450620:	ccmp	w1, #0x9, #0x2, eq  // eq = none
  450624:	lsr	x2, x2, #35
  450628:	add	w0, w2, w2, lsl #2
  45062c:	sub	w1, w1, w0, lsl #1
  450630:	add	w1, w1, #0x30
  450634:	sturb	w1, [x4, #-1]
  450638:	b.ls	450e28 <_obstack_memory_used@@Base+0xec38>  // b.plast
  45063c:	mov	w1, w2
  450640:	sub	x4, x28, #0x1
  450644:	tbnz	w5, #0, 45060c <_obstack_memory_used@@Base+0xe41c>
  450648:	mov	x0, x4
  45064c:	mov	x4, x28
  450650:	mov	x28, x0
  450654:	b	450614 <_obstack_memory_used@@Base+0xe424>
  450658:	cmp	w28, #0x45
  45065c:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  450660:	ldr	w1, [x3, #28]
  450664:	mov	w5, #0x0                   	// #0
  450668:	mov	w16, #0x0                   	// #0
  45066c:	mov	w7, #0x3                   	// #3
  450670:	adds	w1, w1, #0x1
  450674:	cset	w15, lt  // lt = tstop
  450678:	b	45045c <_obstack_memory_used@@Base+0xe26c>
  45067c:	cmp	w28, #0x45
  450680:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  450684:	ldr	w1, [x3, #8]
  450688:	cmp	w12, #0x30
  45068c:	mov	w2, #0x2d                  	// #45
  450690:	ccmp	w12, w2, #0x4, ne  // ne = any
  450694:	mov	w7, #0x2                   	// #2
  450698:	mov	w2, #0x5f                  	// #95
  45069c:	csel	w12, w12, w2, eq  // eq = none
  4506a0:	b	450450 <_obstack_memory_used@@Base+0xe260>
  4506a4:	cmp	w28, #0x45
  4506a8:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  4506ac:	mov	w1, w25
  4506b0:	b	450688 <_obstack_memory_used@@Base+0xe498>
  4506b4:	cmp	w28, #0x45
  4506b8:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  4506bc:	ldr	w1, [x3, #16]
  4506c0:	mov	w5, #0x0                   	// #0
  4506c4:	mov	w16, #0x0                   	// #0
  4506c8:	mov	w7, #0x2                   	// #2
  4506cc:	adds	w1, w1, #0x1
  4506d0:	cset	w15, lt  // lt = tstop
  4506d4:	b	45045c <_obstack_memory_used@@Base+0xe26c>
  4506d8:	cmp	w28, #0x45
  4506dc:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  4506e0:	ldr	w1, [x3, #12]
  4506e4:	mov	w7, #0x2                   	// #2
  4506e8:	b	450450 <_obstack_memory_used@@Base+0xe260>
  4506ec:	cmp	w28, #0x45
  4506f0:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  4506f4:	ldr	w1, [x3, #12]
  4506f8:	b	450688 <_obstack_memory_used@@Base+0xe498>
  4506fc:	cmp	w28, #0x45
  450700:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  450704:	ldr	w1, [x3]
  450708:	mov	w7, #0x2                   	// #2
  45070c:	b	450450 <_obstack_memory_used@@Base+0xe260>
  450710:	cmp	w28, #0x45
  450714:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  450718:	ldp	w4, w2, [x3, #24]
  45071c:	mov	w1, #0x2493                	// #9363
  450720:	movk	w1, #0x9249, lsl #16
  450724:	mov	w7, #0x2                   	// #2
  450728:	sub	w2, w2, w4
  45072c:	add	w2, w2, #0x7
  450730:	smull	x1, w2, w1
  450734:	lsr	x1, x1, #32
  450738:	add	w1, w2, w1
  45073c:	asr	w1, w1, #2
  450740:	sub	w1, w1, w2, asr #31
  450744:	b	450450 <_obstack_memory_used@@Base+0xe260>
  450748:	cmp	w28, #0x45
  45074c:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  450750:	ldp	w4, w5, [x3, #24]
  450754:	mov	w1, #0x2493                	// #9363
  450758:	movk	w1, #0x9249, lsl #16
  45075c:	mov	w7, #0x2                   	// #2
  450760:	add	w4, w4, #0x6
  450764:	smull	x2, w4, w1
  450768:	lsr	x2, x2, #32
  45076c:	add	w2, w4, w2
  450770:	asr	w2, w2, #2
  450774:	sub	w2, w2, w4, asr #31
  450778:	lsl	w15, w2, #3
  45077c:	sub	w2, w15, w2
  450780:	sub	w4, w4, w2
  450784:	sub	w4, w5, w4
  450788:	add	w2, w4, #0x7
  45078c:	b	450730 <_obstack_memory_used@@Base+0xe540>
  450790:	cmp	w4, #0x0
  450794:	mov	x0, x26
  450798:	csel	w13, w13, wzr, eq  // eq = none
  45079c:	str	w9, [sp, #120]
  4507a0:	str	x3, [sp, #128]
  4507a4:	str	w13, [sp, #136]
  4507a8:	str	w4, [sp, #144]
  4507ac:	str	w12, [sp, #152]
  4507b0:	str	w13, [sp, #160]
  4507b4:	bl	403ff0 <strlen@plt>
  4507b8:	ldr	w9, [sp, #120]
  4507bc:	mov	x28, x0
  4507c0:	sub	x1, x27, x20
  4507c4:	cmp	w9, #0x0
  4507c8:	csel	w0, w9, wzr, ge  // ge = tcont
  4507cc:	sxtw	x0, w0
  4507d0:	cmp	x28, x0
  4507d4:	csel	x2, x28, x0, cs  // cs = hs, nlast
  4507d8:	str	x2, [sp, #120]
  4507dc:	cmp	x1, x2
  4507e0:	b.ls	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.plast
  4507e4:	ldr	x3, [sp, #128]
  4507e8:	cbz	x21, 450860 <_obstack_memory_used@@Base+0xe670>
  4507ec:	ldr	w13, [sp, #136]
  4507f0:	cmp	x28, x0
  4507f4:	ldr	w4, [sp, #144]
  4507f8:	b.cs	45083c <_obstack_memory_used@@Base+0xe64c>  // b.hs, b.nlast
  4507fc:	ldr	w12, [sp, #152]
  450800:	sxtw	x2, w9
  450804:	str	w13, [sp, #128]
  450808:	sub	x2, x2, x28
  45080c:	str	w4, [sp, #136]
  450810:	add	x6, x21, x2
  450814:	str	x3, [sp, #144]
  450818:	cmp	w12, #0x30
  45081c:	b.eq	451528 <_obstack_memory_used@@Base+0xf338>  // b.none
  450820:	mov	x0, x21
  450824:	mov	w1, #0x20                  	// #32
  450828:	mov	x21, x6
  45082c:	bl	404410 <memset@plt>
  450830:	ldr	w13, [sp, #128]
  450834:	ldr	w4, [sp, #136]
  450838:	ldr	x3, [sp, #144]
  45083c:	str	x3, [sp, #128]
  450840:	mov	x2, x28
  450844:	mov	x1, x26
  450848:	mov	x0, x21
  45084c:	cbnz	w4, 451444 <_obstack_memory_used@@Base+0xf254>
  450850:	cbz	w13, 451438 <_obstack_memory_used@@Base+0xf248>
  450854:	bl	44feb0 <_obstack_memory_used@@Base+0xdcc0>
  450858:	ldr	x3, [sp, #128]
  45085c:	add	x21, x21, x28
  450860:	ldr	x0, [sp, #120]
  450864:	mov	x4, x19
  450868:	add	x20, x20, x0
  45086c:	b	44ffa8 <_obstack_memory_used@@Base+0xddb8>
  450870:	cmp	w28, #0x45
  450874:	b.eq	4511fc <_obstack_memory_used@@Base+0xf00c>  // b.none
  450878:	ldr	w2, [x3, #20]
  45087c:	mov	w1, #0x851f                	// #34079
  450880:	movk	w1, #0x51eb, lsl #16
  450884:	mov	w4, #0x64                  	// #100
  450888:	mov	w7, #0x2                   	// #2
  45088c:	smull	x1, w2, w1
  450890:	asr	x1, x1, #37
  450894:	sub	w1, w1, w2, asr #31
  450898:	msub	w1, w1, w4, w2
  45089c:	tbz	w1, #31, 450450 <_obstack_memory_used@@Base+0xe260>
  4508a0:	neg	w4, w1
  4508a4:	cmn	w2, #0x76d
  4508a8:	add	w1, w1, #0x64
  4508ac:	csel	w1, w1, w4, gt
  4508b0:	b	450450 <_obstack_memory_used@@Base+0xe260>
  4508b4:	ldp	x4, x5, [x3]
  4508b8:	stp	x4, x5, [sp, #224]
  4508bc:	add	x1, sp, #0xe0
  4508c0:	ldp	x6, x7, [x3, #16]
  4508c4:	mov	x0, x22
  4508c8:	ldp	x4, x5, [x3, #32]
  4508cc:	str	x3, [sp, #120]
  4508d0:	ldr	x2, [x3, #48]
  4508d4:	str	w13, [sp, #128]
  4508d8:	str	w12, [sp, #136]
  4508dc:	add	x28, sp, #0xdf
  4508e0:	str	w9, [sp, #144]
  4508e4:	stp	x6, x7, [sp, #240]
  4508e8:	stp	x4, x5, [sp, #256]
  4508ec:	str	x2, [sp, #272]
  4508f0:	bl	44f2e8 <_obstack_memory_used@@Base+0xd0f8>
  4508f4:	ldr	w13, [sp, #128]
  4508f8:	mov	x7, #0x6666666666666666    	// #7378697629483820646
  4508fc:	ldr	w12, [sp, #136]
  450900:	mov	x5, x0
  450904:	ldr	w9, [sp, #144]
  450908:	mov	x1, x0
  45090c:	ldr	x3, [sp, #120]
  450910:	movk	x7, #0x6667
  450914:	mov	w6, #0x30                  	// #48
  450918:	smulh	x2, x1, x7
  45091c:	asr	x4, x1, #63
  450920:	cmp	x5, #0x0
  450924:	asr	x2, x2, #2
  450928:	sub	x0, x2, x4
  45092c:	add	x0, x0, x0, lsl #2
  450930:	sub	x0, x1, x0, lsl #1
  450934:	and	w1, w0, #0xff
  450938:	add	w1, w1, #0x30
  45093c:	sub	w0, w6, w0, uxtb
  450940:	and	w1, w1, #0xff
  450944:	and	w0, w0, #0xff
  450948:	csel	w0, w1, w0, ge  // ge = tcont
  45094c:	strb	w0, [x28, #-1]!
  450950:	subs	x1, x2, x4
  450954:	b.ne	450918 <_obstack_memory_used@@Base+0xe728>  // b.any
  450958:	cmp	w9, #0x0
  45095c:	csinc	w7, w9, wzr, gt
  450960:	tbnz	x5, #63, 450f5c <_obstack_memory_used@@Base+0xed6c>
  450964:	add	x5, sp, #0xdf
  450968:	cmp	w12, #0x2d
  45096c:	sub	x5, x5, x28
  450970:	sub	x1, x27, x20
  450974:	b.eq	450984 <_obstack_memory_used@@Base+0xe794>  // b.none
  450978:	sub	w6, w7, w5
  45097c:	cmp	w6, #0x0
  450980:	b.gt	451430 <_obstack_memory_used@@Base+0xf240>
  450984:	cmp	w9, #0x0
  450988:	mov	x4, x19
  45098c:	csel	w6, w9, wzr, ge  // ge = tcont
  450990:	sxtw	x6, w6
  450994:	cmp	x5, x6
  450998:	csel	x19, x5, x6, cs  // cs = hs, nlast
  45099c:	cmp	x19, x1
  4509a0:	b.cs	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.hs, b.nlast
  4509a4:	cbz	x21, 450a18 <_obstack_memory_used@@Base+0xe828>
  4509a8:	cmp	w7, #0x0
  4509ac:	ccmp	x5, x6, #0x2, eq  // eq = none
  4509b0:	b.cs	4509f0 <_obstack_memory_used@@Base+0xe800>  // b.hs, b.nlast
  4509b4:	sxtw	x2, w9
  4509b8:	str	w13, [sp, #120]
  4509bc:	stp	x4, x5, [sp, #128]
  4509c0:	sub	x2, x2, x5
  4509c4:	cmp	w12, #0x30
  4509c8:	str	x3, [sp, #144]
  4509cc:	add	x6, x21, x2
  4509d0:	b.eq	4511c0 <_obstack_memory_used@@Base+0xefd0>  // b.none
  4509d4:	mov	x0, x21
  4509d8:	mov	w1, #0x20                  	// #32
  4509dc:	mov	x21, x6
  4509e0:	bl	404410 <memset@plt>
  4509e4:	ldp	x4, x5, [sp, #128]
  4509e8:	ldr	w13, [sp, #120]
  4509ec:	ldr	x3, [sp, #144]
  4509f0:	stp	x5, x4, [sp, #120]
  4509f4:	mov	x1, x28
  4509f8:	str	x3, [sp, #136]
  4509fc:	mov	x2, x5
  450a00:	mov	x0, x21
  450a04:	cbz	w13, 451004 <_obstack_memory_used@@Base+0xee14>
  450a08:	bl	44feb0 <_obstack_memory_used@@Base+0xdcc0>
  450a0c:	ldp	x5, x4, [sp, #120]
  450a10:	ldr	x3, [sp, #136]
  450a14:	add	x21, x21, x5
  450a18:	add	x20, x20, x19
  450a1c:	b	44ffa8 <_obstack_memory_used@@Base+0xddb8>
  450a20:	cmp	w9, #0x0
  450a24:	sub	x0, x27, x20
  450a28:	csel	w28, w9, wzr, ge  // ge = tcont
  450a2c:	sxtw	x28, w28
  450a30:	cmp	x28, #0x0
  450a34:	csinc	x28, x28, xzr, ne  // ne = any
  450a38:	cmp	x0, x28
  450a3c:	b.ls	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.plast
  450a40:	cbz	x21, 4505c0 <_obstack_memory_used@@Base+0xe3d0>
  450a44:	cmp	w9, #0x1
  450a48:	b.le	450a78 <_obstack_memory_used@@Base+0xe888>
  450a4c:	sxtw	x2, w9
  450a50:	str	x3, [sp, #120]
  450a54:	sub	x2, x2, #0x1
  450a58:	cmp	w12, #0x30
  450a5c:	add	x4, x21, x2
  450a60:	b.eq	451488 <_obstack_memory_used@@Base+0xf298>  // b.none
  450a64:	mov	x0, x21
  450a68:	mov	w1, #0x20                  	// #32
  450a6c:	mov	x21, x4
  450a70:	bl	404410 <memset@plt>
  450a74:	ldr	x3, [sp, #120]
  450a78:	mov	w0, #0x9                   	// #9
  450a7c:	strb	w0, [x21], #1
  450a80:	b	4505c0 <_obstack_memory_used@@Base+0xe3d0>
  450a84:	cmp	w28, #0x45
  450a88:	b.eq	4511fc <_obstack_memory_used@@Base+0xf00c>  // b.none
  450a8c:	ldr	w4, [x3, #20]
  450a90:	mov	w2, #0x851f                	// #34079
  450a94:	movk	w2, #0x51eb, lsl #16
  450a98:	mov	w15, #0x64                  	// #100
  450a9c:	mov	w5, #0x0                   	// #0
  450aa0:	mov	w16, #0x0                   	// #0
  450aa4:	mov	w7, #0x2                   	// #2
  450aa8:	smull	x2, w4, w2
  450aac:	asr	x2, x2, #37
  450ab0:	sub	w2, w2, w4, asr #31
  450ab4:	add	w1, w2, #0x13
  450ab8:	msub	w2, w2, w15, w4
  450abc:	cmp	w2, #0x0
  450ac0:	ccmp	w1, #0x0, #0x4, lt  // lt = tstop
  450ac4:	cset	w2, gt
  450ac8:	cmn	w4, #0x76c
  450acc:	sub	w1, w1, w2
  450ad0:	cset	w15, lt  // lt = tstop
  450ad4:	b	45045c <_obstack_memory_used@@Base+0xe26c>
  450ad8:	cbnz	w28, 450068 <_obstack_memory_used@@Base+0xde78>
  450adc:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x19e10>
  450ae0:	add	x28, x28, #0x750
  450ae4:	ldr	x5, [sp, #104]
  450ae8:	mov	w4, w13
  450aec:	mov	x1, #0xffffffffffffffff    	// #-1
  450af0:	mov	w7, w23
  450af4:	mov	x6, x22
  450af8:	mov	x2, x28
  450afc:	mov	x0, #0x0                   	// #0
  450b00:	str	x3, [sp, #120]
  450b04:	str	w9, [sp, #128]
  450b08:	str	w13, [sp, #136]
  450b0c:	str	w12, [sp, #144]
  450b10:	bl	44ff08 <_obstack_memory_used@@Base+0xdd18>
  450b14:	ldr	w9, [sp, #128]
  450b18:	sub	x5, x27, x20
  450b1c:	mov	x4, x0
  450b20:	cmp	w9, #0x0
  450b24:	csel	w1, w9, wzr, ge  // ge = tcont
  450b28:	sxtw	x1, w1
  450b2c:	cmp	x0, x1
  450b30:	csel	x15, x0, x1, cs  // cs = hs, nlast
  450b34:	cmp	x5, x15
  450b38:	b.ls	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.plast
  450b3c:	ldr	x3, [sp, #120]
  450b40:	cbz	x21, 450bbc <_obstack_memory_used@@Base+0xe9cc>
  450b44:	ldr	w13, [sp, #136]
  450b48:	cmp	x0, x1
  450b4c:	b.cs	450b90 <_obstack_memory_used@@Base+0xe9a0>  // b.hs, b.nlast
  450b50:	ldr	w12, [sp, #144]
  450b54:	sxtw	x2, w9
  450b58:	str	w13, [sp, #120]
  450b5c:	sub	x2, x2, x0
  450b60:	stp	x5, x0, [sp, #128]
  450b64:	add	x6, x21, x2
  450b68:	cmp	w12, #0x30
  450b6c:	stp	x15, x3, [sp, #144]
  450b70:	b.eq	4512c8 <_obstack_memory_used@@Base+0xf0d8>  // b.none
  450b74:	mov	x0, x21
  450b78:	mov	w1, #0x20                  	// #32
  450b7c:	mov	x21, x6
  450b80:	bl	404410 <memset@plt>
  450b84:	ldp	x5, x4, [sp, #128]
  450b88:	ldp	x15, x3, [sp, #144]
  450b8c:	ldr	w13, [sp, #120]
  450b90:	mov	x1, x5
  450b94:	mov	x0, x21
  450b98:	ldr	x5, [sp, #104]
  450b9c:	add	x21, x21, x4
  450ba0:	mov	x2, x28
  450ba4:	mov	w4, w13
  450ba8:	mov	w7, w23
  450bac:	mov	x6, x22
  450bb0:	stp	x3, x15, [sp, #120]
  450bb4:	bl	44ff08 <_obstack_memory_used@@Base+0xdd18>
  450bb8:	ldp	x3, x15, [sp, #120]
  450bbc:	add	x20, x20, x15
  450bc0:	mov	x4, x19
  450bc4:	b	44ffa8 <_obstack_memory_used@@Base+0xddb8>
  450bc8:	cmp	w28, #0x45
  450bcc:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  450bd0:	cmp	w4, #0x0
  450bd4:	str	wzr, [sp, #144]
  450bd8:	csel	w13, w13, w4, eq  // eq = none
  450bdc:	b	4501f8 <_obstack_memory_used@@Base+0xe008>
  450be0:	cbnz	w28, 450068 <_obstack_memory_used@@Base+0xde78>
  450be4:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x19e10>
  450be8:	add	x28, x28, #0x768
  450bec:	b	450ae4 <_obstack_memory_used@@Base+0xe8f4>
  450bf0:	ldurb	w0, [x19, #-1]
  450bf4:	sub	x5, x19, #0x1
  450bf8:	cmp	w9, #0x0
  450bfc:	sub	x2, x27, x20
  450c00:	csel	w1, w9, wzr, ge  // ge = tcont
  450c04:	cmp	w0, #0x25
  450c08:	sxtw	x1, w1
  450c0c:	b.ne	451580 <_obstack_memory_used@@Base+0xf390>  // b.any
  450c10:	cmp	x1, #0x0
  450c14:	mov	x28, #0x1                   	// #1
  450c18:	mov	x4, x5
  450c1c:	csel	x7, x1, x28, ne  // ne = any
  450c20:	b	4500a4 <_obstack_memory_used@@Base+0xdeb4>
  450c24:	cmp	w9, #0x0
  450c28:	mov	x5, #0x1                   	// #1
  450c2c:	csel	w1, w9, wzr, ge  // ge = tcont
  450c30:	sub	x2, x27, x20
  450c34:	sxtw	x1, w1
  450c38:	cmp	x1, #0x0
  450c3c:	csel	x7, x1, x5, ne  // ne = any
  450c40:	cbnz	w28, 451478 <_obstack_memory_used@@Base+0xf288>
  450c44:	cmp	x2, x7
  450c48:	b.ls	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.plast
  450c4c:	cbz	x21, 450c8c <_obstack_memory_used@@Base+0xea9c>
  450c50:	cmp	w9, #0x1
  450c54:	b.le	450c88 <_obstack_memory_used@@Base+0xea98>
  450c58:	sxtw	x2, w9
  450c5c:	stp	x7, x3, [sp, #120]
  450c60:	sub	x2, x2, #0x1
  450c64:	cmp	w12, #0x30
  450c68:	add	x28, x21, x2
  450c6c:	b.eq	451548 <_obstack_memory_used@@Base+0xf358>  // b.none
  450c70:	mov	x0, x21
  450c74:	mov	w1, #0x20                  	// #32
  450c78:	bl	404410 <memset@plt>
  450c7c:	mov	x21, x28
  450c80:	ldp	x7, x3, [sp, #120]
  450c84:	ldrb	w0, [x19]
  450c88:	strb	w0, [x21], #1
  450c8c:	add	x20, x20, x7
  450c90:	mov	x4, x19
  450c94:	b	44ffa8 <_obstack_memory_used@@Base+0xddb8>
  450c98:	cmp	w28, #0x45
  450c9c:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  450ca0:	mov	w1, w25
  450ca4:	mov	w7, #0x2                   	// #2
  450ca8:	b	450450 <_obstack_memory_used@@Base+0xe260>
  450cac:	cmp	w28, #0x45
  450cb0:	b.eq	4511fc <_obstack_memory_used@@Base+0xf00c>  // b.none
  450cb4:	cmp	w28, #0x4f
  450cb8:	b.eq	450068 <_obstack_memory_used@@Base+0xde78>  // b.none
  450cbc:	ldr	w1, [x3, #20]
  450cc0:	mov	w5, #0x0                   	// #0
  450cc4:	mov	w16, #0x0                   	// #0
  450cc8:	mov	w7, #0x4                   	// #4
  450ccc:	adds	w1, w1, #0x76c
  450cd0:	cset	w15, lt  // lt = tstop
  450cd4:	nop
  450cd8:	cmp	w15, #0x0
  450cdc:	cneg	w1, w1, ne  // ne = any
  450ce0:	b	4505f8 <_obstack_memory_used@@Base+0xe408>
  450ce4:	ldrb	w1, [x19, #1]
  450ce8:	add	x4, x19, #0x1
  450cec:	mov	x7, #0x1                   	// #1
  450cf0:	cmp	w1, #0x3a
  450cf4:	b.eq	450e10 <_obstack_memory_used@@Base+0xec20>  // b.none
  450cf8:	cmp	w1, #0x7a
  450cfc:	b.ne	450068 <_obstack_memory_used@@Base+0xde78>  // b.any
  450d00:	ldr	w1, [x3, #32]
  450d04:	tbnz	w1, #31, 44ffa8 <_obstack_memory_used@@Base+0xddb8>
  450d08:	ldr	x2, [x3, #40]
  450d0c:	mov	w15, #0x1                   	// #1
  450d10:	cmp	w2, #0x0
  450d14:	b.lt	450d2c <_obstack_memory_used@@Base+0xeb3c>  // b.tstop
  450d18:	mov	w15, #0x0                   	// #0
  450d1c:	b.ne	450d2c <_obstack_memory_used@@Base+0xeb3c>  // b.any
  450d20:	ldrb	w1, [x26]
  450d24:	cmp	w1, #0x2d
  450d28:	cset	w15, eq  // eq = none
  450d2c:	mov	w5, #0x8889                	// #34953
  450d30:	asr	w17, w2, #31
  450d34:	movk	w5, #0x8888, lsl #16
  450d38:	mov	w1, #0xb3c5                	// #46021
  450d3c:	movk	w1, #0x91a2, lsl #16
  450d40:	cmp	x7, #0x2
  450d44:	smull	x16, w2, w5
  450d48:	smull	x1, w2, w1
  450d4c:	lsr	x16, x16, #32
  450d50:	add	w16, w16, w2
  450d54:	lsr	x1, x1, #32
  450d58:	add	w1, w1, w2
  450d5c:	asr	w16, w16, #5
  450d60:	sub	w16, w16, w17
  450d64:	asr	w1, w1, #11
  450d68:	sub	w1, w1, w17
  450d6c:	lsl	w17, w16, #4
  450d70:	smull	x5, w16, w5
  450d74:	sub	w17, w17, w16
  450d78:	sub	w2, w2, w17, lsl #2
  450d7c:	lsr	x5, x5, #32
  450d80:	add	w5, w16, w5
  450d84:	asr	w5, w5, #5
  450d88:	sub	w5, w5, w16, asr #31
  450d8c:	lsl	w17, w5, #4
  450d90:	sub	w5, w17, w5
  450d94:	sub	w5, w16, w5, lsl #2
  450d98:	b.eq	451408 <_obstack_memory_used@@Base+0xf218>  // b.none
  450d9c:	b.hi	4511e0 <_obstack_memory_used@@Base+0xeff0>  // b.pmore
  450da0:	cbz	x7, 451450 <_obstack_memory_used@@Base+0xf260>
  450da4:	mov	w2, #0x64                  	// #100
  450da8:	mov	x19, x4
  450dac:	mov	w16, #0x1                   	// #1
  450db0:	mov	w7, #0x6                   	// #6
  450db4:	madd	w1, w1, w2, w5
  450db8:	mov	w5, #0x4                   	// #4
  450dbc:	b	45045c <_obstack_memory_used@@Base+0xe26c>
  450dc0:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x19e10>
  450dc4:	add	x28, x28, #0x760
  450dc8:	b	450ae4 <_obstack_memory_used@@Base+0xe8f4>
  450dcc:	str	wzr, [sp, #144]
  450dd0:	ldr	w1, [sp, #144]
  450dd4:	cmp	w4, #0x0
  450dd8:	csel	w13, w13, wzr, eq  // eq = none
  450ddc:	mov	w0, #0x70                  	// #112
  450de0:	csel	w1, w1, w4, eq  // eq = none
  450de4:	str	w1, [sp, #144]
  450de8:	b	4501f8 <_obstack_memory_used@@Base+0xe008>
  450dec:	mov	x4, x19
  450df0:	mov	x7, #0x0                   	// #0
  450df4:	b	450d00 <_obstack_memory_used@@Base+0xeb10>
  450df8:	mov	w0, #0x1                   	// #1
  450dfc:	str	w0, [sp, #144]
  450e00:	b	450dd0 <_obstack_memory_used@@Base+0xebe0>
  450e04:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x19e10>
  450e08:	add	x28, x28, #0x740
  450e0c:	b	450ae4 <_obstack_memory_used@@Base+0xe8f4>
  450e10:	add	x7, x7, #0x1
  450e14:	add	x4, x19, x7
  450e18:	ldrb	w1, [x19, x7]
  450e1c:	cmp	w1, #0x3a
  450e20:	b.ne	450cf8 <_obstack_memory_used@@Base+0xeb08>  // b.any
  450e24:	b	450e10 <_obstack_memory_used@@Base+0xec20>
  450e28:	cmp	w7, w9
  450e2c:	csel	w7, w7, w9, ge  // ge = tcont
  450e30:	cbnz	w15, 450f5c <_obstack_memory_used@@Base+0xed6c>
  450e34:	cbz	w16, 450964 <_obstack_memory_used@@Base+0xe774>
  450e38:	cmp	w12, #0x2d
  450e3c:	mov	w4, #0x2b                  	// #43
  450e40:	b.eq	451224 <_obstack_memory_used@@Base+0xf034>  // b.none
  450e44:	add	x5, sp, #0xdf
  450e48:	sub	w0, w7, #0x1
  450e4c:	sub	x5, x5, x28
  450e50:	sub	x1, x27, x20
  450e54:	sub	w6, w0, w5
  450e58:	cmp	w6, #0x0
  450e5c:	b.le	451084 <_obstack_memory_used@@Base+0xee94>
  450e60:	cmp	w12, #0x5f
  450e64:	b.eq	451128 <_obstack_memory_used@@Base+0xef38>  // b.none
  450e68:	cmp	x1, w7, sxtw
  450e6c:	b.ls	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.plast
  450e70:	cbz	w4, 4511b4 <_obstack_memory_used@@Base+0xefc4>
  450e74:	cmp	w9, #0x0
  450e78:	csel	w0, w9, wzr, ge  // ge = tcont
  450e7c:	sxtw	x0, w0
  450e80:	cmp	x0, #0x0
  450e84:	csinc	x2, x0, xzr, ne  // ne = any
  450e88:	cmp	x2, x1
  450e8c:	b.cs	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.hs, b.nlast
  450e90:	sxtw	x6, w6
  450e94:	add	x20, x20, x2
  450e98:	cbz	x21, 450f3c <_obstack_memory_used@@Base+0xed4c>
  450e9c:	cmp	w7, #0x0
  450ea0:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  450ea4:	b.ls	450efc <_obstack_memory_used@@Base+0xed0c>  // b.plast
  450ea8:	sxtw	x2, w9
  450eac:	str	w7, [sp, #136]
  450eb0:	str	x6, [sp, #144]
  450eb4:	sub	x2, x2, #0x1
  450eb8:	str	w4, [sp, #152]
  450ebc:	cmp	w12, #0x30
  450ec0:	str	x3, [sp, #160]
  450ec4:	add	x5, x21, x2
  450ec8:	b.eq	4514f4 <_obstack_memory_used@@Base+0xf304>  // b.none
  450ecc:	mov	x0, x21
  450ed0:	mov	w1, #0x20                  	// #32
  450ed4:	mov	x21, x5
  450ed8:	str	w13, [sp, #120]
  450edc:	str	w12, [sp, #128]
  450ee0:	bl	404410 <memset@plt>
  450ee4:	ldr	w13, [sp, #120]
  450ee8:	ldr	w12, [sp, #128]
  450eec:	ldr	w7, [sp, #136]
  450ef0:	ldr	w4, [sp, #152]
  450ef4:	ldr	x6, [sp, #144]
  450ef8:	ldr	x3, [sp, #160]
  450efc:	strb	w4, [x21], #1
  450f00:	mov	x0, x21
  450f04:	mov	x2, x6
  450f08:	add	x21, x21, x6
  450f0c:	mov	w1, #0x30                  	// #48
  450f10:	str	x6, [sp, #120]
  450f14:	str	w13, [sp, #128]
  450f18:	str	w12, [sp, #136]
  450f1c:	str	w7, [sp, #144]
  450f20:	str	x3, [sp, #152]
  450f24:	bl	404410 <memset@plt>
  450f28:	ldr	w13, [sp, #128]
  450f2c:	ldr	w12, [sp, #136]
  450f30:	ldr	w7, [sp, #144]
  450f34:	ldr	x6, [sp, #120]
  450f38:	ldr	x3, [sp, #152]
  450f3c:	add	x20, x20, x6
  450f40:	add	x5, sp, #0xdf
  450f44:	mov	x4, x19
  450f48:	sub	x1, x27, x20
  450f4c:	sub	x5, x5, x28
  450f50:	mov	x6, #0x0                   	// #0
  450f54:	mov	w9, #0x0                   	// #0
  450f58:	b	450994 <_obstack_memory_used@@Base+0xe7a4>
  450f5c:	cmp	w12, #0x2d
  450f60:	mov	w4, #0x2d                  	// #45
  450f64:	b.ne	450e44 <_obstack_memory_used@@Base+0xec54>  // b.any
  450f68:	cmp	w9, #0x0
  450f6c:	sub	x0, x27, x20
  450f70:	csel	w6, w9, wzr, ge  // ge = tcont
  450f74:	sxtw	x6, w6
  450f78:	cmp	x6, #0x0
  450f7c:	csinc	x4, x6, xzr, ne  // ne = any
  450f80:	cmp	x0, x4
  450f84:	b.ls	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.plast
  450f88:	cbz	x21, 450f9c <_obstack_memory_used@@Base+0xedac>
  450f8c:	cmp	w7, #0x0
  450f90:	ccmp	x6, #0x1, #0x0, eq  // eq = none
  450f94:	b.hi	450fb8 <_obstack_memory_used@@Base+0xedc8>  // b.pmore
  450f98:	strb	w12, [x21], #1
  450f9c:	add	x20, x20, x4
  450fa0:	add	x5, sp, #0xdf
  450fa4:	mov	x4, x19
  450fa8:	sub	x1, x27, x20
  450fac:	sub	x5, x5, x28
  450fb0:	mov	w12, #0x2d                  	// #45
  450fb4:	b	450994 <_obstack_memory_used@@Base+0xe7a4>
  450fb8:	sxtw	x2, w9
  450fbc:	mov	x0, x21
  450fc0:	sub	x2, x2, #0x1
  450fc4:	mov	w1, #0x20                  	// #32
  450fc8:	add	x21, x21, x2
  450fcc:	str	w9, [sp, #120]
  450fd0:	str	w13, [sp, #128]
  450fd4:	str	w7, [sp, #136]
  450fd8:	str	w12, [sp, #144]
  450fdc:	stp	x6, x4, [sp, #152]
  450fe0:	str	x3, [sp, #168]
  450fe4:	bl	404410 <memset@plt>
  450fe8:	ldr	w9, [sp, #120]
  450fec:	ldr	w13, [sp, #128]
  450ff0:	ldr	w7, [sp, #136]
  450ff4:	ldr	w12, [sp, #144]
  450ff8:	ldp	x6, x4, [sp, #152]
  450ffc:	ldr	x3, [sp, #168]
  451000:	b	450f98 <_obstack_memory_used@@Base+0xeda8>
  451004:	bl	403f70 <memcpy@plt>
  451008:	ldp	x5, x4, [sp, #120]
  45100c:	ldr	x3, [sp, #136]
  451010:	add	x21, x21, x5
  451014:	b	450a18 <_obstack_memory_used@@Base+0xe828>
  451018:	bl	403f70 <memcpy@plt>
  45101c:	add	x21, x21, x28
  451020:	ldp	x4, x7, [sp, #120]
  451024:	ldr	x3, [sp, #136]
  451028:	b	45011c <_obstack_memory_used@@Base+0xdf2c>
  45102c:	bl	403f70 <memcpy@plt>
  451030:	add	x21, x21, x19
  451034:	ldp	x4, x5, [sp, #120]
  451038:	ldr	x3, [sp, #136]
  45103c:	b	4502ec <_obstack_memory_used@@Base+0xe0fc>
  451040:	mov	x0, x21
  451044:	bl	44fe58 <_obstack_memory_used@@Base+0xdc68>
  451048:	add	x21, x21, x19
  45104c:	ldp	x4, x5, [sp, #120]
  451050:	ldr	x3, [sp, #136]
  451054:	b	4502ec <_obstack_memory_used@@Base+0xe0fc>
  451058:	mov	x20, #0x0                   	// #0
  45105c:	b	44ffb4 <_obstack_memory_used@@Base+0xddc4>
  451060:	mov	x0, x21
  451064:	mov	w1, w12
  451068:	mov	x21, x6
  45106c:	str	w13, [sp, #120]
  451070:	bl	404410 <memset@plt>
  451074:	ldr	w13, [sp, #120]
  451078:	ldp	x4, x5, [sp, #128]
  45107c:	ldr	x3, [sp, #152]
  451080:	b	4502bc <_obstack_memory_used@@Base+0xe0cc>
  451084:	cmp	w9, #0x0
  451088:	csel	w6, w9, wzr, ge  // ge = tcont
  45108c:	sxtw	x6, w6
  451090:	cmp	x6, #0x0
  451094:	csinc	x15, x6, xzr, ne  // ne = any
  451098:	cmp	x15, x1
  45109c:	b.cs	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.hs, b.nlast
  4510a0:	cbz	x21, 451118 <_obstack_memory_used@@Base+0xef28>
  4510a4:	cmp	w7, #0x0
  4510a8:	ccmp	x6, #0x1, #0x0, eq  // eq = none
  4510ac:	b.ls	451114 <_obstack_memory_used@@Base+0xef24>  // b.plast
  4510b0:	sxtw	x2, w9
  4510b4:	str	w7, [sp, #136]
  4510b8:	stp	x15, x6, [sp, #144]
  4510bc:	sub	x2, x2, #0x1
  4510c0:	cmp	w12, #0x30
  4510c4:	str	x5, [sp, #160]
  4510c8:	add	x16, x21, x2
  4510cc:	str	w4, [sp, #168]
  4510d0:	str	w9, [sp, #176]
  4510d4:	str	x3, [sp, #184]
  4510d8:	b.eq	4514a0 <_obstack_memory_used@@Base+0xf2b0>  // b.none
  4510dc:	mov	x0, x21
  4510e0:	mov	w1, #0x20                  	// #32
  4510e4:	mov	x21, x16
  4510e8:	str	w13, [sp, #120]
  4510ec:	str	w12, [sp, #128]
  4510f0:	bl	404410 <memset@plt>
  4510f4:	ldp	x15, x6, [sp, #144]
  4510f8:	ldr	w13, [sp, #120]
  4510fc:	ldr	w12, [sp, #128]
  451100:	ldr	w7, [sp, #136]
  451104:	ldr	w4, [sp, #168]
  451108:	ldr	w9, [sp, #176]
  45110c:	ldr	x5, [sp, #160]
  451110:	ldr	x3, [sp, #184]
  451114:	strb	w4, [x21], #1
  451118:	add	x20, x20, x15
  45111c:	mov	x4, x19
  451120:	sub	x1, x27, x20
  451124:	b	450994 <_obstack_memory_used@@Base+0xe7a4>
  451128:	cmp	x1, w6, sxtw
  45112c:	sxtw	x2, w6
  451130:	b.ls	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.plast
  451134:	cbz	x21, 451188 <_obstack_memory_used@@Base+0xef98>
  451138:	mov	x0, x21
  45113c:	mov	w1, #0x20                  	// #32
  451140:	add	x21, x21, x2
  451144:	str	x2, [sp, #120]
  451148:	str	w13, [sp, #128]
  45114c:	str	w12, [sp, #136]
  451150:	str	w7, [sp, #144]
  451154:	str	w4, [sp, #152]
  451158:	str	w6, [sp, #160]
  45115c:	str	w9, [sp, #168]
  451160:	str	x3, [sp, #176]
  451164:	bl	404410 <memset@plt>
  451168:	ldr	w13, [sp, #128]
  45116c:	ldr	w12, [sp, #136]
  451170:	ldr	w7, [sp, #144]
  451174:	ldr	w4, [sp, #152]
  451178:	ldr	w6, [sp, #160]
  45117c:	ldr	w9, [sp, #168]
  451180:	ldr	x2, [sp, #120]
  451184:	ldr	x3, [sp, #176]
  451188:	add	x20, x20, x2
  45118c:	cmp	w9, w6
  451190:	b.le	4512bc <_obstack_memory_used@@Base+0xf0cc>
  451194:	sub	w9, w9, w6
  451198:	sxtw	x6, w9
  45119c:	sub	x1, x27, x20
  4511a0:	cbnz	w4, 45122c <_obstack_memory_used@@Base+0xf03c>
  4511a4:	add	x5, sp, #0xdf
  4511a8:	mov	x4, x19
  4511ac:	sub	x5, x5, x28
  4511b0:	b	450994 <_obstack_memory_used@@Base+0xe7a4>
  4511b4:	sxtw	x6, w6
  4511b8:	cbz	x21, 450f3c <_obstack_memory_used@@Base+0xed4c>
  4511bc:	b	450f00 <_obstack_memory_used@@Base+0xed10>
  4511c0:	mov	x0, x21
  4511c4:	mov	w1, w12
  4511c8:	mov	x21, x6
  4511cc:	bl	404410 <memset@plt>
  4511d0:	ldr	w13, [sp, #120]
  4511d4:	ldp	x4, x5, [sp, #128]
  4511d8:	ldr	x3, [sp, #144]
  4511dc:	b	4509f0 <_obstack_memory_used@@Base+0xe800>
  4511e0:	cmp	x7, #0x3
  4511e4:	b.ne	45146c <_obstack_memory_used@@Base+0xf27c>  // b.any
  4511e8:	cbnz	w2, 451408 <_obstack_memory_used@@Base+0xf218>
  4511ec:	cbnz	w5, 450da4 <_obstack_memory_used@@Base+0xebb4>
  4511f0:	mov	x19, x4
  4511f4:	mov	w16, #0x1                   	// #1
  4511f8:	b	45045c <_obstack_memory_used@@Base+0xe26c>
  4511fc:	mov	w7, #0x0                   	// #0
  451200:	b	45046c <_obstack_memory_used@@Base+0xe27c>
  451204:	mov	x0, x21
  451208:	mov	w1, w12
  45120c:	mov	x21, x6
  451210:	bl	404410 <memset@plt>
  451214:	ldr	w13, [sp, #120]
  451218:	ldp	x5, x4, [sp, #128]
  45121c:	ldp	x7, x3, [sp, #144]
  451220:	b	4500f4 <_obstack_memory_used@@Base+0xdf04>
  451224:	mov	w12, #0x2b                  	// #43
  451228:	b	450f68 <_obstack_memory_used@@Base+0xed78>
  45122c:	cmp	x6, #0x0
  451230:	csinc	x5, x6, xzr, ne  // ne = any
  451234:	cmp	x5, x1
  451238:	b.cs	44ffc8 <_obstack_memory_used@@Base+0xddd8>  // b.hs, b.nlast
  45123c:	cbz	x21, 451250 <_obstack_memory_used@@Base+0xf060>
  451240:	cmp	w7, #0x0
  451244:	ccmp	x6, #0x1, #0x0, eq  // eq = none
  451248:	b.hi	451268 <_obstack_memory_used@@Base+0xf078>  // b.pmore
  45124c:	strb	w4, [x21], #1
  451250:	add	x20, x20, x5
  451254:	add	x5, sp, #0xdf
  451258:	mov	x4, x19
  45125c:	sub	x1, x27, x20
  451260:	sub	x5, x5, x28
  451264:	b	450994 <_obstack_memory_used@@Base+0xe7a4>
  451268:	sxtw	x2, w9
  45126c:	mov	x0, x21
  451270:	sub	x2, x2, #0x1
  451274:	mov	w1, #0x20                  	// #32
  451278:	add	x21, x21, x2
  45127c:	str	w9, [sp, #120]
  451280:	str	w13, [sp, #128]
  451284:	str	w12, [sp, #136]
  451288:	str	w7, [sp, #144]
  45128c:	stp	x5, x6, [sp, #152]
  451290:	str	w4, [sp, #168]
  451294:	str	x3, [sp, #176]
  451298:	bl	404410 <memset@plt>
  45129c:	ldr	w9, [sp, #120]
  4512a0:	ldr	w13, [sp, #128]
  4512a4:	ldr	w12, [sp, #136]
  4512a8:	ldr	w7, [sp, #144]
  4512ac:	ldr	w4, [sp, #168]
  4512b0:	ldp	x5, x6, [sp, #152]
  4512b4:	ldr	x3, [sp, #176]
  4512b8:	b	45124c <_obstack_memory_used@@Base+0xf05c>
  4512bc:	mov	x6, #0x0                   	// #0
  4512c0:	mov	w9, #0x0                   	// #0
  4512c4:	b	45119c <_obstack_memory_used@@Base+0xefac>
  4512c8:	mov	x0, x21
  4512cc:	mov	w1, w12
  4512d0:	mov	x21, x6
  4512d4:	bl	404410 <memset@plt>
  4512d8:	ldr	w13, [sp, #120]
  4512dc:	ldp	x5, x4, [sp, #128]
  4512e0:	ldp	x15, x3, [sp, #144]
  4512e4:	b	450b90 <_obstack_memory_used@@Base+0xe9a0>
  4512e8:	sub	w5, w5, #0x1
  4512ec:	mov	w1, #0x16d                 	// #365
  4512f0:	tst	x5, #0x3
  4512f4:	b.ne	45133c <_obstack_memory_used@@Base+0xf14c>  // b.any
  4512f8:	mov	w15, #0x5c29                	// #23593
  4512fc:	mov	w1, #0xb850                	// #47184
  451300:	movk	w1, #0x51e, lsl #16
  451304:	movk	w15, #0xc28f, lsl #16
  451308:	mov	w16, #0x5c28                	// #23592
  45130c:	madd	w15, w5, w15, w1
  451310:	movk	w16, #0x28f, lsl #16
  451314:	mov	w1, #0x16e                 	// #366
  451318:	ror	w15, w15, #2
  45131c:	cmp	w15, w16
  451320:	b.hi	45133c <_obstack_memory_used@@Base+0xf14c>  // b.pmore
  451324:	mov	w15, #0x190                 	// #400
  451328:	sdiv	w1, w5, w15
  45132c:	msub	w5, w1, w15, w5
  451330:	cmp	w5, #0x0
  451334:	cset	w1, eq  // eq = none
  451338:	add	w1, w1, #0x16d
  45133c:	add	w7, w7, w1
  451340:	mov	w1, #0x2493                	// #9363
  451344:	sub	w2, w7, w2
  451348:	movk	w1, #0x9249, lsl #16
  45134c:	add	w2, w2, #0x17e
  451350:	mov	w5, #0xffffffff            	// #-1
  451354:	smull	x1, w2, w1
  451358:	lsr	x1, x1, #32
  45135c:	add	w1, w2, w1
  451360:	asr	w1, w1, #2
  451364:	sub	w1, w1, w2, asr #31
  451368:	lsl	w15, w1, #3
  45136c:	sub	w1, w15, w1
  451370:	sub	w2, w2, w1
  451374:	sub	w1, w7, w2
  451378:	add	w1, w1, #0x3
  45137c:	b	4503ec <_obstack_memory_used@@Base+0xe1fc>
  451380:	cmp	w9, #0x8
  451384:	b.gt	451564 <_obstack_memory_used@@Base+0xf374>
  451388:	mov	w5, #0x6667                	// #26215
  45138c:	mov	w4, w9
  451390:	mov	w1, w23
  451394:	movk	w5, #0x6666, lsl #16
  451398:	smull	x2, w1, w5
  45139c:	add	w4, w4, #0x1
  4513a0:	cmp	w4, #0x9
  4513a4:	asr	x2, x2, #34
  4513a8:	sub	w1, w2, w1, asr #31
  4513ac:	b.ne	451398 <_obstack_memory_used@@Base+0xf1a8>  // b.any
  4513b0:	mov	w7, w9
  4513b4:	b	450450 <_obstack_memory_used@@Base+0xe260>
  4513b8:	mov	w2, #0x2493                	// #9363
  4513bc:	mov	w7, #0x2                   	// #2
  4513c0:	movk	w2, #0x9249, lsl #16
  4513c4:	smull	x2, w1, w2
  4513c8:	lsr	x2, x2, #32
  4513cc:	add	w2, w1, w2
  4513d0:	asr	w2, w2, #2
  4513d4:	sub	w1, w2, w1, asr #31
  4513d8:	add	w1, w1, #0x1
  4513dc:	b	450450 <_obstack_memory_used@@Base+0xe260>
  4513e0:	mov	w1, #0xfffff894            	// #-1900
  4513e4:	sub	w1, w1, w5
  4513e8:	cmp	w4, w1
  4513ec:	add	w1, w4, #0x76c
  4513f0:	add	w1, w1, w5
  4513f4:	cset	w15, lt  // lt = tstop
  4513f8:	mov	w5, #0x0                   	// #0
  4513fc:	mov	w16, #0x0                   	// #0
  451400:	mov	w7, #0x4                   	// #4
  451404:	b	45045c <_obstack_memory_used@@Base+0xe26c>
  451408:	mov	w16, #0x64                  	// #100
  45140c:	mov	w7, #0x2710                	// #10000
  451410:	mov	x19, x4
  451414:	mul	w5, w5, w16
  451418:	mov	w16, #0x1                   	// #1
  45141c:	madd	w1, w1, w7, w5
  451420:	mov	w7, #0x9                   	// #9
  451424:	mov	w5, #0x14                  	// #20
  451428:	add	w1, w1, w2
  45142c:	b	45045c <_obstack_memory_used@@Base+0xe26c>
  451430:	mov	w4, #0x0                   	// #0
  451434:	b	450e60 <_obstack_memory_used@@Base+0xec70>
  451438:	bl	403f70 <memcpy@plt>
  45143c:	ldr	x3, [sp, #128]
  451440:	b	45085c <_obstack_memory_used@@Base+0xe66c>
  451444:	bl	44fe58 <_obstack_memory_used@@Base+0xdc68>
  451448:	ldr	x3, [sp, #128]
  45144c:	b	45085c <_obstack_memory_used@@Base+0xe66c>
  451450:	mov	w2, #0x64                  	// #100
  451454:	mov	x19, x4
  451458:	mov	w16, #0x1                   	// #1
  45145c:	mov	w7, #0x5                   	// #5
  451460:	madd	w1, w1, w2, w5
  451464:	mov	w5, #0x0                   	// #0
  451468:	b	45045c <_obstack_memory_used@@Base+0xe26c>
  45146c:	ldrb	w0, [x4]
  451470:	mov	x5, x4
  451474:	b	450bf8 <_obstack_memory_used@@Base+0xea08>
  451478:	mov	x28, x5
  45147c:	mov	x4, x19
  451480:	mov	x5, x19
  451484:	b	4500a4 <_obstack_memory_used@@Base+0xdeb4>
  451488:	mov	x0, x21
  45148c:	mov	w1, w12
  451490:	mov	x21, x4
  451494:	bl	404410 <memset@plt>
  451498:	ldr	x3, [sp, #120]
  45149c:	b	450a78 <_obstack_memory_used@@Base+0xe888>
  4514a0:	mov	x0, x21
  4514a4:	mov	w1, w12
  4514a8:	mov	x21, x16
  4514ac:	str	w12, [sp, #120]
  4514b0:	str	w13, [sp, #128]
  4514b4:	bl	404410 <memset@plt>
  4514b8:	ldr	w12, [sp, #120]
  4514bc:	ldr	w13, [sp, #128]
  4514c0:	ldr	w7, [sp, #136]
  4514c4:	ldr	w4, [sp, #168]
  4514c8:	ldr	w9, [sp, #176]
  4514cc:	ldp	x15, x6, [sp, #144]
  4514d0:	ldr	x5, [sp, #160]
  4514d4:	ldr	x3, [sp, #184]
  4514d8:	b	451114 <_obstack_memory_used@@Base+0xef24>
  4514dc:	mov	x0, x21
  4514e0:	mov	w1, w12
  4514e4:	mov	x21, x4
  4514e8:	bl	404410 <memset@plt>
  4514ec:	ldr	x3, [sp, #120]
  4514f0:	b	4505b8 <_obstack_memory_used@@Base+0xe3c8>
  4514f4:	mov	x0, x21
  4514f8:	mov	w1, w12
  4514fc:	mov	x21, x5
  451500:	str	w12, [sp, #120]
  451504:	str	w13, [sp, #128]
  451508:	bl	404410 <memset@plt>
  45150c:	ldr	w12, [sp, #120]
  451510:	ldr	w13, [sp, #128]
  451514:	ldr	w7, [sp, #136]
  451518:	ldr	w4, [sp, #152]
  45151c:	ldr	x6, [sp, #144]
  451520:	ldr	x3, [sp, #160]
  451524:	b	450efc <_obstack_memory_used@@Base+0xed0c>
  451528:	mov	x0, x21
  45152c:	mov	w1, w12
  451530:	mov	x21, x6
  451534:	bl	404410 <memset@plt>
  451538:	ldr	w13, [sp, #128]
  45153c:	ldr	w4, [sp, #136]
  451540:	ldr	x3, [sp, #144]
  451544:	b	45083c <_obstack_memory_used@@Base+0xe64c>
  451548:	mov	x0, x21
  45154c:	mov	w1, w12
  451550:	bl	404410 <memset@plt>
  451554:	mov	x21, x28
  451558:	ldrb	w0, [x19]
  45155c:	ldp	x7, x3, [sp, #120]
  451560:	b	450c88 <_obstack_memory_used@@Base+0xea98>
  451564:	mov	w1, w23
  451568:	mov	w7, w9
  45156c:	b	450450 <_obstack_memory_used@@Base+0xe260>
  451570:	mov	w9, #0xffffffff            	// #-1
  451574:	b	45018c <_obstack_memory_used@@Base+0xdf9c>
  451578:	mov	w7, #0x0                   	// #0
  45157c:	b	450478 <_obstack_memory_used@@Base+0xe288>
  451580:	mov	x19, x5
  451584:	b	450068 <_obstack_memory_used@@Base+0xde78>
  451588:	stp	x29, x30, [sp, #-32]!
  45158c:	mov	x6, x4
  451590:	mov	w7, w5
  451594:	mov	x29, sp
  451598:	add	x5, sp, #0x1f
  45159c:	mov	w4, #0x0                   	// #0
  4515a0:	strb	wzr, [sp, #31]
  4515a4:	bl	44ff08 <_obstack_memory_used@@Base+0xdd18>
  4515a8:	ldp	x29, x30, [sp], #32
  4515ac:	ret
  4515b0:	stp	x29, x30, [sp, #-64]!
  4515b4:	mov	x29, sp
  4515b8:	str	x3, [sp, #56]
  4515bc:	mov	w3, #0x0                   	// #0
  4515c0:	tbnz	w2, #6, 4515d4 <_obstack_memory_used@@Base+0xf3e4>
  4515c4:	bl	404ab0 <openat@plt>
  4515c8:	bl	451600 <_obstack_memory_used@@Base+0xf410>
  4515cc:	ldp	x29, x30, [sp], #64
  4515d0:	ret
  4515d4:	mov	w3, #0xfffffff8            	// #-8
  4515d8:	stp	w3, wzr, [sp, #40]
  4515dc:	ldr	w3, [sp, #56]
  4515e0:	add	x4, sp, #0x30
  4515e4:	add	x5, sp, #0x40
  4515e8:	stp	x5, x5, [sp, #16]
  4515ec:	str	x4, [sp, #32]
  4515f0:	bl	404ab0 <openat@plt>
  4515f4:	bl	451600 <_obstack_memory_used@@Base+0xf410>
  4515f8:	ldp	x29, x30, [sp], #64
  4515fc:	ret
  451600:	stp	x29, x30, [sp, #-48]!
  451604:	cmp	w0, #0x2
  451608:	mov	x29, sp
  45160c:	stp	x19, x20, [sp, #16]
  451610:	mov	w19, w0
  451614:	b.ls	451628 <_obstack_memory_used@@Base+0xf438>  // b.plast
  451618:	mov	w0, w19
  45161c:	ldp	x19, x20, [sp, #16]
  451620:	ldp	x29, x30, [sp], #48
  451624:	ret
  451628:	str	x21, [sp, #32]
  45162c:	bl	452598 <_obstack_memory_used@@Base+0x103a8>
  451630:	mov	w21, w0
  451634:	bl	404ad0 <__errno_location@plt>
  451638:	mov	x20, x0
  45163c:	mov	w0, w19
  451640:	mov	w19, w21
  451644:	ldr	w21, [x20]
  451648:	bl	4045c0 <close@plt>
  45164c:	str	w21, [x20]
  451650:	mov	w0, w19
  451654:	ldp	x19, x20, [sp, #16]
  451658:	ldr	x21, [sp, #32]
  45165c:	ldp	x29, x30, [sp], #48
  451660:	ret
  451664:	nop
  451668:	stp	x29, x30, [sp, #-112]!
  45166c:	mov	x29, sp
  451670:	stp	x23, x24, [sp, #48]
  451674:	mov	x23, x1
  451678:	stp	x19, x20, [sp, #16]
  45167c:	mov	x20, x0
  451680:	ldp	x0, x1, [x1]
  451684:	stp	x0, x1, [sp, #80]
  451688:	ldp	x0, x1, [x23, #16]
  45168c:	stp	x21, x22, [sp, #32]
  451690:	ldr	w22, [x23, #24]
  451694:	stp	x25, x26, [sp, #64]
  451698:	stp	x0, x1, [sp, #96]
  45169c:	ldr	x21, [x23]
  4516a0:	cbz	x20, 4517b0 <_obstack_memory_used@@Base+0xf5c0>
  4516a4:	mov	x26, x20
  4516a8:	mov	x19, #0x0                   	// #0
  4516ac:	mov	x24, #0xffffffffffffffff    	// #-1
  4516b0:	ldr	x25, [sp, #88]
  4516b4:	b	4516d8 <_obstack_memory_used@@Base+0xf4e8>
  4516b8:	and	x1, x1, #0xfffffffffffffff8
  4516bc:	str	x1, [sp, #80]
  4516c0:	ldr	x0, [x2]
  4516c4:	bl	403ff0 <strlen@plt>
  4516c8:	adds	x19, x0, x19
  4516cc:	csel	x19, x19, x24, cc  // cc = lo, ul, last
  4516d0:	subs	x26, x26, #0x1
  4516d4:	b.eq	45171c <_obstack_memory_used@@Base+0xf52c>  // b.none
  4516d8:	ldr	w0, [sp, #104]
  4516dc:	ldr	x2, [sp, #80]
  4516e0:	add	w3, w0, #0x8
  4516e4:	add	x1, x2, #0xf
  4516e8:	tbz	w0, #31, 4516b8 <_obstack_memory_used@@Base+0xf4c8>
  4516ec:	str	w3, [sp, #104]
  4516f0:	add	x1, x2, #0xf
  4516f4:	cmp	w3, #0x0
  4516f8:	and	x1, x1, #0xfffffffffffffff8
  4516fc:	b.le	451798 <_obstack_memory_used@@Base+0xf5a8>
  451700:	str	x1, [sp, #80]
  451704:	ldr	x0, [x2]
  451708:	bl	403ff0 <strlen@plt>
  45170c:	adds	x19, x0, x19
  451710:	csel	x19, x19, x24, cc  // cc = lo, ul, last
  451714:	subs	x26, x26, #0x1
  451718:	b.ne	4516d8 <_obstack_memory_used@@Base+0xf4e8>  // b.any
  45171c:	mov	x0, #0x7fffffff            	// #2147483647
  451720:	cmp	x19, x0
  451724:	b.hi	4517e0 <_obstack_memory_used@@Base+0xf5f0>  // b.pmore
  451728:	add	x0, x19, #0x1
  45172c:	bl	440f48 <argp_parse@@Base+0xd060>
  451730:	mov	x25, x0
  451734:	mov	x24, x0
  451738:	b	451770 <_obstack_memory_used@@Base+0xf580>
  45173c:	mov	x1, x21
  451740:	and	x21, x2, #0xfffffffffffffff8
  451744:	ldr	x19, [x1]
  451748:	mov	x0, x19
  45174c:	bl	403ff0 <strlen@plt>
  451750:	mov	x1, x19
  451754:	mov	x19, x0
  451758:	mov	x2, x19
  45175c:	mov	x0, x24
  451760:	bl	403f70 <memcpy@plt>
  451764:	add	x24, x24, x19
  451768:	subs	x20, x20, #0x1
  45176c:	b.eq	4517c0 <_obstack_memory_used@@Base+0xf5d0>  // b.none
  451770:	add	x2, x21, #0xf
  451774:	add	w0, w22, #0x8
  451778:	tbz	w22, #31, 45173c <_obstack_memory_used@@Base+0xf54c>
  45177c:	add	x2, x21, #0xf
  451780:	cmp	w0, #0x0
  451784:	b.le	4517a0 <_obstack_memory_used@@Base+0xf5b0>
  451788:	mov	x1, x21
  45178c:	mov	w22, w0
  451790:	and	x21, x2, #0xfffffffffffffff8
  451794:	b	451744 <_obstack_memory_used@@Base+0xf554>
  451798:	add	x2, x25, w0, sxtw
  45179c:	b	4516c0 <_obstack_memory_used@@Base+0xf4d0>
  4517a0:	ldr	x1, [x23, #8]
  4517a4:	add	x1, x1, w22, sxtw
  4517a8:	mov	w22, w0
  4517ac:	b	451744 <_obstack_memory_used@@Base+0xf554>
  4517b0:	mov	x0, #0x1                   	// #1
  4517b4:	bl	440f48 <argp_parse@@Base+0xd060>
  4517b8:	mov	x24, x0
  4517bc:	mov	x25, x0
  4517c0:	strb	wzr, [x24]
  4517c4:	mov	x0, x25
  4517c8:	ldp	x19, x20, [sp, #16]
  4517cc:	ldp	x21, x22, [sp, #32]
  4517d0:	ldp	x23, x24, [sp, #48]
  4517d4:	ldp	x25, x26, [sp, #64]
  4517d8:	ldp	x29, x30, [sp], #112
  4517dc:	ret
  4517e0:	bl	404ad0 <__errno_location@plt>
  4517e4:	mov	x25, #0x0                   	// #0
  4517e8:	mov	w1, #0x4b                  	// #75
  4517ec:	str	w1, [x0]
  4517f0:	mov	x0, x25
  4517f4:	ldp	x19, x20, [sp, #16]
  4517f8:	ldp	x21, x22, [sp, #32]
  4517fc:	ldp	x23, x24, [sp, #48]
  451800:	ldp	x25, x26, [sp, #64]
  451804:	ldp	x29, x30, [sp], #112
  451808:	ret
  45180c:	nop
  451810:	mov	x2, x0
  451814:	stp	x29, x30, [sp, #-96]!
  451818:	mov	x4, x0
  45181c:	mov	x29, sp
  451820:	ldrb	w3, [x2]
  451824:	mov	x0, #0x0                   	// #0
  451828:	cbnz	w3, 451848 <_obstack_memory_used@@Base+0xf658>
  45182c:	b	4518a4 <_obstack_memory_used@@Base+0xf6b4>
  451830:	ldrb	w3, [x4, #1]
  451834:	cmp	w3, #0x73
  451838:	b.ne	451850 <_obstack_memory_used@@Base+0xf660>  // b.any
  45183c:	ldrb	w3, [x4, #2]!
  451840:	add	x0, x0, #0x1
  451844:	cbz	w3, 4518a4 <_obstack_memory_used@@Base+0xf6b4>
  451848:	cmp	w3, #0x25
  45184c:	b.eq	451830 <_obstack_memory_used@@Base+0xf640>  // b.none
  451850:	ldp	x6, x7, [x1]
  451854:	add	x3, sp, #0x10
  451858:	ldp	x4, x5, [x1, #16]
  45185c:	add	x0, sp, #0x38
  451860:	mov	w1, #0x1                   	// #1
  451864:	stp	x6, x7, [sp, #16]
  451868:	stp	x4, x5, [sp, #32]
  45186c:	stp	x6, x7, [sp, #64]
  451870:	stp	x4, x5, [sp, #80]
  451874:	bl	404350 <__vasprintf_chk@plt>
  451878:	tbnz	w0, #31, 451888 <_obstack_memory_used@@Base+0xf698>
  45187c:	ldr	x0, [sp, #56]
  451880:	ldp	x29, x30, [sp], #96
  451884:	ret
  451888:	bl	404ad0 <__errno_location@plt>
  45188c:	mov	x1, x0
  451890:	mov	x0, #0x0                   	// #0
  451894:	ldr	w1, [x1]
  451898:	cmp	w1, #0xc
  45189c:	b.ne	451880 <_obstack_memory_used@@Base+0xf690>  // b.any
  4518a0:	bl	40e7b0 <wcrtomb@plt+0x9b90>
  4518a4:	ldp	x4, x5, [x1]
  4518a8:	ldp	x2, x3, [x1, #16]
  4518ac:	add	x1, sp, #0x10
  4518b0:	stp	x4, x5, [sp, #16]
  4518b4:	stp	x2, x3, [sp, #32]
  4518b8:	bl	451668 <_obstack_memory_used@@Base+0xf478>
  4518bc:	ldp	x29, x30, [sp], #96
  4518c0:	ret
  4518c4:	nop
  4518c8:	ldp	w13, w8, [x1, #44]
  4518cc:	add	x11, x0, #0x8
  4518d0:	ldr	w12, [x1]
  4518d4:	cmp	w13, w8
  4518d8:	mov	w7, w13
  4518dc:	ccmp	w8, w12, #0x0, lt  // lt = tstop
  4518e0:	mov	w9, w12
  4518e4:	sxtw	x14, w8
  4518e8:	b.ge	451950 <_obstack_memory_used@@Base+0xf760>  // b.tcont
  4518ec:	nop
  4518f0:	sub	w10, w9, w8
  4518f4:	sub	w2, w8, w7
  4518f8:	cmp	w10, w2
  4518fc:	b.le	451960 <_obstack_memory_used@@Base+0xf770>
  451900:	sxtw	x3, w7
  451904:	sub	w9, w9, w2
  451908:	sub	w4, w2, #0x1
  45190c:	mov	x5, x3
  451910:	add	x4, x4, x3
  451914:	sxtw	x3, w9
  451918:	add	x2, x0, w7, sxtw #3
  45191c:	sub	x3, x3, x5
  451920:	add	x4, x11, x4, lsl #3
  451924:	nop
  451928:	ldr	x6, [x2, x3, lsl #3]
  45192c:	ldr	x5, [x2]
  451930:	str	x6, [x2]
  451934:	str	x5, [x2, x3, lsl #3]
  451938:	add	x2, x2, #0x8
  45193c:	cmp	x4, x2
  451940:	b.ne	451928 <_obstack_memory_used@@Base+0xf738>  // b.any
  451944:	cmp	w9, w8
  451948:	ccmp	w7, w8, #0x0, gt
  45194c:	b.lt	4518f0 <_obstack_memory_used@@Base+0xf700>  // b.tstop
  451950:	sub	w0, w12, w8
  451954:	add	w0, w0, w13
  451958:	stp	w0, w12, [x1, #44]
  45195c:	ret
  451960:	sxtw	x3, w7
  451964:	sub	w6, w10, #0x1
  451968:	add	x6, x6, x3
  45196c:	add	x2, x0, w7, sxtw #3
  451970:	sub	x3, x14, x3
  451974:	add	x6, x11, x6, lsl #3
  451978:	ldr	x5, [x2, x3, lsl #3]
  45197c:	ldr	x4, [x2]
  451980:	str	x5, [x2]
  451984:	str	x4, [x2, x3, lsl #3]
  451988:	add	x2, x2, #0x8
  45198c:	cmp	x2, x6
  451990:	b.ne	451978 <_obstack_memory_used@@Base+0xf788>  // b.any
  451994:	add	w7, w7, w10
  451998:	cmp	w9, w8
  45199c:	ccmp	w7, w8, #0x0, gt
  4519a0:	b.lt	4518f0 <_obstack_memory_used@@Base+0xf700>  // b.tstop
  4519a4:	b	451950 <_obstack_memory_used@@Base+0xf760>
  4519a8:	stp	x29, x30, [sp, #-176]!
  4519ac:	mov	x29, sp
  4519b0:	stp	x23, x24, [sp, #48]
  4519b4:	ldr	x23, [x6, #32]
  4519b8:	stp	x19, x20, [sp, #16]
  4519bc:	stp	x21, x22, [sp, #32]
  4519c0:	mov	x22, x23
  4519c4:	stp	x25, x26, [sp, #64]
  4519c8:	mov	x25, x6
  4519cc:	stp	x27, x28, [sp, #80]
  4519d0:	str	w0, [sp, #156]
  4519d4:	ldrb	w0, [x23]
  4519d8:	str	x3, [sp, #104]
  4519dc:	str	w5, [sp, #116]
  4519e0:	cmp	w0, #0x3d
  4519e4:	str	w7, [sp, #124]
  4519e8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4519ec:	stp	x4, x1, [sp, #128]
  4519f0:	str	x2, [sp, #144]
  4519f4:	str	w0, [sp, #152]
  4519f8:	b.eq	451d14 <_obstack_memory_used@@Base+0xfb24>  // b.none
  4519fc:	nop
  451a00:	ldrb	w0, [x22, #1]!
  451a04:	cmp	w0, #0x3d
  451a08:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  451a0c:	b.ne	451a00 <_obstack_memory_used@@Base+0xf810>  // b.any
  451a10:	sub	x21, x22, x23
  451a14:	ldr	x19, [sp, #104]
  451a18:	mov	x20, #0x0                   	// #0
  451a1c:	ldr	x24, [x19]
  451a20:	mov	x27, x24
  451a24:	cbnz	x24, 451a30 <_obstack_memory_used@@Base+0xf840>
  451a28:	b	451aec <_obstack_memory_used@@Base+0xf8fc>
  451a2c:	sxtw	x20, w0
  451a30:	mov	x1, x23
  451a34:	mov	x2, x21
  451a38:	mov	x0, x27
  451a3c:	bl	4043c0 <strncmp@plt>
  451a40:	mov	w1, w0
  451a44:	mov	x0, x27
  451a48:	cbnz	w1, 451a58 <_obstack_memory_used@@Base+0xf868>
  451a4c:	bl	403ff0 <strlen@plt>
  451a50:	cmp	x0, x21
  451a54:	b.eq	451b58 <_obstack_memory_used@@Base+0xf968>  // b.none
  451a58:	ldr	x27, [x19, #32]!
  451a5c:	add	w0, w20, #0x1
  451a60:	cbnz	x27, 451a2c <_obstack_memory_used@@Base+0xf83c>
  451a64:	ldr	x26, [sp, #104]
  451a68:	sxtw	x0, w0
  451a6c:	mov	x19, #0x0                   	// #0
  451a70:	mov	x28, #0x0                   	// #0
  451a74:	str	wzr, [sp, #120]
  451a78:	str	wzr, [sp, #164]
  451a7c:	str	x0, [sp, #168]
  451a80:	mov	w0, #0xffffffff            	// #-1
  451a84:	str	w0, [sp, #160]
  451a88:	mov	x0, x24
  451a8c:	mov	x2, x21
  451a90:	mov	x1, x23
  451a94:	bl	4043c0 <strncmp@plt>
  451a98:	cbnz	w0, 451ac8 <_obstack_memory_used@@Base+0xf8d8>
  451a9c:	cbz	x19, 451bfc <_obstack_memory_used@@Base+0xfa0c>
  451aa0:	ldr	w0, [sp, #116]
  451aa4:	cbz	w0, 451bb8 <_obstack_memory_used@@Base+0xf9c8>
  451aa8:	ldr	w0, [sp, #120]
  451aac:	cbnz	w0, 451ac8 <_obstack_memory_used@@Base+0xf8d8>
  451ab0:	ldr	w0, [sp, #124]
  451ab4:	cbz	w0, 451c14 <_obstack_memory_used@@Base+0xfa24>
  451ab8:	cbz	x27, 451d34 <_obstack_memory_used@@Base+0xfb44>
  451abc:	mov	w0, #0x1                   	// #1
  451ac0:	strb	w0, [x27, x28]
  451ac4:	nop
  451ac8:	ldr	x24, [x26, #32]!
  451acc:	add	x28, x28, #0x1
  451ad0:	cbnz	x24, 451a88 <_obstack_memory_used@@Base+0xf898>
  451ad4:	ldr	w0, [sp, #120]
  451ad8:	cmp	x27, #0x0
  451adc:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  451ae0:	b.ne	451c70 <_obstack_memory_used@@Base+0xfa80>  // b.any
  451ae4:	ldr	w20, [sp, #160]
  451ae8:	cbnz	x19, 451b58 <_obstack_memory_used@@Base+0xf968>
  451aec:	ldr	w0, [sp, #116]
  451af0:	cbz	w0, 451b1c <_obstack_memory_used@@Base+0xf92c>
  451af4:	ldrsw	x0, [x25]
  451af8:	ldr	x1, [sp, #136]
  451afc:	ldr	x0, [x1, x0, lsl #3]
  451b00:	ldrb	w0, [x0, #1]
  451b04:	cmp	w0, #0x2d
  451b08:	b.eq	451b1c <_obstack_memory_used@@Base+0xf92c>  // b.none
  451b0c:	ldr	w1, [sp, #152]
  451b10:	ldr	x0, [sp, #144]
  451b14:	bl	404870 <strchr@plt>
  451b18:	cbnz	x0, 451dac <_obstack_memory_used@@Base+0xfbbc>
  451b1c:	ldr	w0, [sp, #124]
  451b20:	cbnz	w0, 451c30 <_obstack_memory_used@@Base+0xfa40>
  451b24:	ldr	w1, [x25]
  451b28:	mov	w0, #0x3f                  	// #63
  451b2c:	str	wzr, [x25, #8]
  451b30:	add	w1, w1, #0x1
  451b34:	str	w1, [x25]
  451b38:	str	xzr, [x25, #32]
  451b3c:	ldp	x19, x20, [sp, #16]
  451b40:	ldp	x21, x22, [sp, #32]
  451b44:	ldp	x23, x24, [sp, #48]
  451b48:	ldp	x25, x26, [sp, #64]
  451b4c:	ldp	x27, x28, [sp, #80]
  451b50:	ldp	x29, x30, [sp], #176
  451b54:	ret
  451b58:	ldr	w0, [x25]
  451b5c:	ldr	w21, [x19, #8]
  451b60:	add	w1, w0, #0x1
  451b64:	str	w1, [x25]
  451b68:	str	xzr, [x25, #32]
  451b6c:	ldrb	w2, [x22]
  451b70:	cbnz	w2, 451bec <_obstack_memory_used@@Base+0xf9fc>
  451b74:	cmp	w21, #0x1
  451b78:	b.eq	451cf0 <_obstack_memory_used@@Base+0xfb00>  // b.none
  451b7c:	ldr	x0, [sp, #128]
  451b80:	cbz	x0, 451b88 <_obstack_memory_used@@Base+0xf998>
  451b84:	str	w20, [x0]
  451b88:	ldr	x1, [x19, #16]
  451b8c:	ldr	w0, [x19, #24]
  451b90:	cbz	x1, 451b9c <_obstack_memory_used@@Base+0xf9ac>
  451b94:	str	w0, [x1]
  451b98:	mov	w0, #0x0                   	// #0
  451b9c:	ldp	x19, x20, [sp, #16]
  451ba0:	ldp	x21, x22, [sp, #32]
  451ba4:	ldp	x23, x24, [sp, #48]
  451ba8:	ldp	x25, x26, [sp, #64]
  451bac:	ldp	x27, x28, [sp, #80]
  451bb0:	ldp	x29, x30, [sp], #176
  451bb4:	ret
  451bb8:	ldr	w1, [x19, #8]
  451bbc:	ldr	w0, [x26, #8]
  451bc0:	cmp	w1, w0
  451bc4:	b.ne	451aa8 <_obstack_memory_used@@Base+0xf8b8>  // b.any
  451bc8:	ldr	x1, [x19, #16]
  451bcc:	ldr	x0, [x26, #16]
  451bd0:	cmp	x1, x0
  451bd4:	b.ne	451aa8 <_obstack_memory_used@@Base+0xf8b8>  // b.any
  451bd8:	ldr	w1, [x19, #24]
  451bdc:	ldr	w0, [x26, #24]
  451be0:	cmp	w1, w0
  451be4:	b.ne	451aa8 <_obstack_memory_used@@Base+0xf8b8>  // b.any
  451be8:	b	451ac8 <_obstack_memory_used@@Base+0xf8d8>
  451bec:	cbz	w21, 451d1c <_obstack_memory_used@@Base+0xfb2c>
  451bf0:	add	x22, x22, #0x1
  451bf4:	str	x22, [x25, #16]
  451bf8:	b	451b7c <_obstack_memory_used@@Base+0xf98c>
  451bfc:	mov	x19, x26
  451c00:	str	w28, [sp, #160]
  451c04:	ldr	x24, [x26, #32]!
  451c08:	add	x28, x28, #0x1
  451c0c:	cbnz	x24, 451a88 <_obstack_memory_used@@Base+0xf898>
  451c10:	b	451ad4 <_obstack_memory_used@@Base+0xf8e4>
  451c14:	mov	w0, #0x1                   	// #1
  451c18:	str	w0, [sp, #120]
  451c1c:	cbnz	x27, 451abc <_obstack_memory_used@@Base+0xf8cc>
  451c20:	ldr	x24, [x26, #32]!
  451c24:	add	x28, x28, #0x1
  451c28:	cbnz	x24, 451a88 <_obstack_memory_used@@Base+0xf898>
  451c2c:	b	451ad4 <_obstack_memory_used@@Base+0xf8e4>
  451c30:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  451c34:	mov	w2, #0x5                   	// #5
  451c38:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  451c3c:	add	x1, x1, #0x888
  451c40:	ldr	x19, [x0, #1096]
  451c44:	mov	x0, #0x0                   	// #0
  451c48:	bl	4049c0 <dcgettext@plt>
  451c4c:	mov	x2, x0
  451c50:	ldr	x0, [sp, #136]
  451c54:	mov	w1, #0x1                   	// #1
  451c58:	ldr	x5, [x25, #32]
  451c5c:	ldr	x3, [x0]
  451c60:	mov	x0, x19
  451c64:	ldr	x4, [sp, #176]
  451c68:	bl	404700 <__fprintf_chk@plt>
  451c6c:	b	451b24 <_obstack_memory_used@@Base+0xf934>
  451c70:	ldr	w0, [sp, #124]
  451c74:	cbz	w0, 451cc0 <_obstack_memory_used@@Base+0xfad0>
  451c78:	ldr	w0, [sp, #120]
  451c7c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  451c80:	ldr	x19, [x21, #1096]
  451c84:	cbz	w0, 451de0 <_obstack_memory_used@@Base+0xfbf0>
  451c88:	mov	w2, #0x5                   	// #5
  451c8c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  451c90:	mov	x0, #0x0                   	// #0
  451c94:	add	x1, x1, #0x830
  451c98:	bl	4049c0 <dcgettext@plt>
  451c9c:	mov	x2, x0
  451ca0:	ldr	x1, [sp, #136]
  451ca4:	mov	x0, x19
  451ca8:	ldr	x5, [x25, #32]
  451cac:	ldr	x3, [x1]
  451cb0:	mov	w1, #0x1                   	// #1
  451cb4:	ldr	x4, [sp, #176]
  451cb8:	bl	404700 <__fprintf_chk@plt>
  451cbc:	ldr	x23, [x25, #32]
  451cc0:	ldr	w0, [sp, #164]
  451cc4:	cbnz	w0, 451da0 <_obstack_memory_used@@Base+0xfbb0>
  451cc8:	mov	x0, x23
  451ccc:	bl	403ff0 <strlen@plt>
  451cd0:	ldr	w1, [x25]
  451cd4:	add	x23, x23, x0
  451cd8:	mov	w0, #0x3f                  	// #63
  451cdc:	str	wzr, [x25, #8]
  451ce0:	add	w1, w1, #0x1
  451ce4:	str	w1, [x25]
  451ce8:	str	x23, [x25, #32]
  451cec:	b	451b9c <_obstack_memory_used@@Base+0xf9ac>
  451cf0:	ldr	w2, [sp, #156]
  451cf4:	cmp	w1, w2
  451cf8:	b.ge	451db4 <_obstack_memory_used@@Base+0xfbc4>  // b.tcont
  451cfc:	ldr	x2, [sp, #136]
  451d00:	add	w0, w0, #0x2
  451d04:	ldr	x1, [x2, w1, sxtw #3]
  451d08:	str	w0, [x25]
  451d0c:	str	x1, [x25, #16]
  451d10:	b	451b7c <_obstack_memory_used@@Base+0xf98c>
  451d14:	mov	x21, #0x0                   	// #0
  451d18:	b	451a14 <_obstack_memory_used@@Base+0xf824>
  451d1c:	ldr	w0, [sp, #124]
  451d20:	cbnz	w0, 451d60 <_obstack_memory_used@@Base+0xfb70>
  451d24:	ldr	w1, [x19, #24]
  451d28:	mov	w0, #0x3f                  	// #63
  451d2c:	str	w1, [x25, #8]
  451d30:	b	451b9c <_obstack_memory_used@@Base+0xf9ac>
  451d34:	ldr	x0, [sp, #168]
  451d38:	mov	x1, #0x1                   	// #1
  451d3c:	bl	4044c0 <calloc@plt>
  451d40:	mov	x27, x0
  451d44:	cbz	x0, 451ed0 <_obstack_memory_used@@Base+0xfce0>
  451d48:	mov	w0, #0x1                   	// #1
  451d4c:	str	w0, [sp, #164]
  451d50:	ldr	w0, [sp, #160]
  451d54:	mov	w1, #0x1                   	// #1
  451d58:	strb	w1, [x27, w0, sxtw]
  451d5c:	b	451abc <_obstack_memory_used@@Base+0xf8cc>
  451d60:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  451d64:	mov	w2, #0x5                   	// #5
  451d68:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  451d6c:	add	x1, x1, #0x8a8
  451d70:	ldr	x20, [x0, #1096]
  451d74:	mov	x0, #0x0                   	// #0
  451d78:	bl	4049c0 <dcgettext@plt>
  451d7c:	mov	x2, x0
  451d80:	ldr	x0, [sp, #136]
  451d84:	mov	w1, #0x1                   	// #1
  451d88:	ldr	x5, [x19]
  451d8c:	ldr	x3, [x0]
  451d90:	mov	x0, x20
  451d94:	ldr	x4, [sp, #176]
  451d98:	bl	404700 <__fprintf_chk@plt>
  451d9c:	b	451d24 <_obstack_memory_used@@Base+0xfb34>
  451da0:	mov	x0, x27
  451da4:	bl	4047b0 <free@plt>
  451da8:	b	451cc8 <_obstack_memory_used@@Base+0xfad8>
  451dac:	mov	w0, #0xffffffff            	// #-1
  451db0:	b	451b9c <_obstack_memory_used@@Base+0xf9ac>
  451db4:	ldr	w0, [sp, #124]
  451db8:	cbnz	w0, 451e90 <_obstack_memory_used@@Base+0xfca0>
  451dbc:	ldr	x2, [sp, #144]
  451dc0:	mov	w0, #0x3a                  	// #58
  451dc4:	ldr	w1, [x19, #24]
  451dc8:	str	w1, [x25, #8]
  451dcc:	mov	w1, #0x3f                  	// #63
  451dd0:	ldrb	w2, [x2]
  451dd4:	cmp	w2, w0
  451dd8:	csel	w0, w0, w1, eq  // eq = none
  451ddc:	b	451b9c <_obstack_memory_used@@Base+0xf9ac>
  451de0:	mov	x0, x19
  451de4:	bl	404090 <flockfile@plt>
  451de8:	mov	w2, #0x5                   	// #5
  451dec:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  451df0:	ldr	x19, [x21, #1096]
  451df4:	add	x1, x1, #0x850
  451df8:	mov	x0, #0x0                   	// #0
  451dfc:	bl	4049c0 <dcgettext@plt>
  451e00:	ldr	x1, [sp, #136]
  451e04:	mov	x2, x0
  451e08:	ldr	x5, [x25, #32]
  451e0c:	mov	x0, x19
  451e10:	ldr	x3, [x1]
  451e14:	add	x20, x20, #0x1
  451e18:	ldr	x4, [sp, #176]
  451e1c:	mov	w1, #0x1                   	// #1
  451e20:	ldr	x26, [sp, #104]
  451e24:	adrp	x22, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  451e28:	bl	404700 <__fprintf_chk@plt>
  451e2c:	mov	x19, x27
  451e30:	ldr	x0, [x21, #1096]
  451e34:	add	x20, x20, x27
  451e38:	add	x22, x22, #0x880
  451e3c:	b	451e4c <_obstack_memory_used@@Base+0xfc5c>
  451e40:	add	x26, x26, #0x20
  451e44:	cmp	x20, x19
  451e48:	b.eq	451e74 <_obstack_memory_used@@Base+0xfc84>  // b.none
  451e4c:	ldrb	w3, [x19]
  451e50:	add	x19, x19, #0x1
  451e54:	cbz	w3, 451e40 <_obstack_memory_used@@Base+0xfc50>
  451e58:	ldr	x4, [x26]
  451e5c:	mov	x2, x22
  451e60:	ldr	x3, [sp, #176]
  451e64:	mov	w1, #0x1                   	// #1
  451e68:	bl	404700 <__fprintf_chk@plt>
  451e6c:	ldr	x0, [x21, #1096]
  451e70:	b	451e40 <_obstack_memory_used@@Base+0xfc50>
  451e74:	mov	x1, x0
  451e78:	mov	w0, #0xa                   	// #10
  451e7c:	bl	404170 <fputc@plt>
  451e80:	ldr	x0, [x21, #1096]
  451e84:	bl	404330 <funlockfile@plt>
  451e88:	ldr	x23, [x25, #32]
  451e8c:	b	451cc0 <_obstack_memory_used@@Base+0xfad0>
  451e90:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  451e94:	mov	w2, #0x5                   	// #5
  451e98:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  451e9c:	add	x1, x1, #0x8d8
  451ea0:	ldr	x20, [x0, #1096]
  451ea4:	mov	x0, #0x0                   	// #0
  451ea8:	bl	4049c0 <dcgettext@plt>
  451eac:	mov	x2, x0
  451eb0:	ldr	x0, [sp, #136]
  451eb4:	mov	w1, w21
  451eb8:	ldr	x5, [x19]
  451ebc:	ldr	x3, [x0]
  451ec0:	mov	x0, x20
  451ec4:	ldr	x4, [sp, #176]
  451ec8:	bl	404700 <__fprintf_chk@plt>
  451ecc:	b	451dbc <_obstack_memory_used@@Base+0xfbcc>
  451ed0:	mov	w0, #0x1                   	// #1
  451ed4:	str	w0, [sp, #120]
  451ed8:	b	451ac8 <_obstack_memory_used@@Base+0xf8d8>
  451edc:	nop
  451ee0:	sub	sp, sp, #0x70
  451ee4:	cmp	w0, #0x0
  451ee8:	stp	x29, x30, [sp, #16]
  451eec:	add	x29, sp, #0x10
  451ef0:	stp	x25, x26, [sp, #80]
  451ef4:	ldr	w26, [x6, #4]
  451ef8:	b.le	4523b4 <_obstack_memory_used@@Base+0x101c4>
  451efc:	stp	x19, x20, [sp, #32]
  451f00:	mov	w20, w0
  451f04:	ldr	w0, [x6]
  451f08:	stp	x21, x22, [sp, #48]
  451f0c:	mov	x19, x6
  451f10:	mov	x25, x3
  451f14:	stp	x23, x24, [sp, #64]
  451f18:	mov	x22, x4
  451f1c:	mov	x23, x1
  451f20:	stp	x27, x28, [sp, #96]
  451f24:	mov	x24, x2
  451f28:	mov	w27, w5
  451f2c:	str	xzr, [x6, #16]
  451f30:	cbz	w0, 452120 <_obstack_memory_used@@Base+0xff30>
  451f34:	ldr	w1, [x6, #24]
  451f38:	cbnz	w1, 451f68 <_obstack_memory_used@@Base+0xfd78>
  451f3c:	str	xzr, [x19, #32]
  451f40:	stp	w0, w0, [x19, #44]
  451f44:	ldrb	w0, [x24]
  451f48:	cmp	w0, #0x2d
  451f4c:	b.eq	45202c <_obstack_memory_used@@Base+0xfe3c>  // b.none
  451f50:	cmp	w0, #0x2b
  451f54:	b.eq	452358 <_obstack_memory_used@@Base+0x10168>  // b.none
  451f58:	mov	x21, #0x0                   	// #0
  451f5c:	cbz	w7, 4522d0 <_obstack_memory_used@@Base+0x100e0>
  451f60:	str	wzr, [x19, #40]
  451f64:	b	45203c <_obstack_memory_used@@Base+0xfe4c>
  451f68:	ldrb	w0, [x2]
  451f6c:	mov	w1, #0xfd                  	// #253
  451f70:	ldr	x21, [x6, #32]
  451f74:	sub	w2, w0, #0x2b
  451f78:	tst	w2, w1
  451f7c:	b.ne	452048 <_obstack_memory_used@@Base+0xfe58>  // b.any
  451f80:	ldrb	w0, [x24, #1]
  451f84:	add	x24, x24, #0x1
  451f88:	cmp	w0, #0x3a
  451f8c:	csel	w26, w26, wzr, ne  // ne = any
  451f90:	cbnz	x21, 452054 <_obstack_memory_used@@Base+0xfe64>
  451f94:	nop
  451f98:	ldr	w0, [x19]
  451f9c:	ldr	w1, [x19, #48]
  451fa0:	cmp	w1, w0
  451fa4:	b.le	451fac <_obstack_memory_used@@Base+0xfdbc>
  451fa8:	str	w0, [x19, #48]
  451fac:	ldr	w1, [x19, #44]
  451fb0:	cmp	w0, w1
  451fb4:	b.ge	451fbc <_obstack_memory_used@@Base+0xfdcc>  // b.tcont
  451fb8:	str	w0, [x19, #44]
  451fbc:	ldr	w1, [x19, #40]
  451fc0:	cmp	w1, #0x1
  451fc4:	b.eq	45216c <_obstack_memory_used@@Base+0xff7c>  // b.none
  451fc8:	cmp	w20, w0
  451fcc:	b.eq	452144 <_obstack_memory_used@@Base+0xff54>  // b.none
  451fd0:	ldr	x21, [x23, w0, sxtw #3]
  451fd4:	ldrb	w1, [x21]
  451fd8:	cmp	w1, #0x2d
  451fdc:	b.ne	4520dc <_obstack_memory_used@@Base+0xfeec>  // b.any
  451fe0:	ldrb	w1, [x21, #1]
  451fe4:	cmp	w1, #0x2d
  451fe8:	b.ne	4520dc <_obstack_memory_used@@Base+0xfeec>  // b.any
  451fec:	ldrb	w1, [x21, #2]
  451ff0:	cbnz	w1, 4520dc <_obstack_memory_used@@Base+0xfeec>
  451ff4:	ldp	w1, w2, [x19, #44]
  451ff8:	add	w0, w0, #0x1
  451ffc:	str	w0, [x19]
  452000:	cmp	w1, w2
  452004:	b.eq	4523bc <_obstack_memory_used@@Base+0x101cc>  // b.none
  452008:	cmp	w0, w2
  45200c:	b.eq	452020 <_obstack_memory_used@@Base+0xfe30>  // b.none
  452010:	mov	x1, x19
  452014:	mov	x0, x23
  452018:	bl	4518c8 <_obstack_memory_used@@Base+0xf6d8>
  45201c:	ldr	w1, [x19, #44]
  452020:	str	w20, [x19]
  452024:	str	w20, [x19, #48]
  452028:	b	452148 <_obstack_memory_used@@Base+0xff58>
  45202c:	add	x24, x24, #0x1
  452030:	mov	w0, #0x2                   	// #2
  452034:	mov	x21, #0x0                   	// #0
  452038:	str	w0, [x19, #40]
  45203c:	mov	w0, #0x1                   	// #1
  452040:	str	w0, [x19, #24]
  452044:	ldrb	w0, [x24]
  452048:	cmp	w0, #0x3a
  45204c:	csel	w26, w26, wzr, ne  // ne = any
  452050:	cbz	x21, 451f98 <_obstack_memory_used@@Base+0xfda8>
  452054:	ldrb	w0, [x21]
  452058:	cbz	w0, 451f98 <_obstack_memory_used@@Base+0xfda8>
  45205c:	add	x28, x21, #0x1
  452060:	str	x28, [x19, #32]
  452064:	mov	x0, x24
  452068:	ldrb	w27, [x21]
  45206c:	mov	w1, w27
  452070:	bl	404870 <strchr@plt>
  452074:	ldrb	w1, [x21, #1]
  452078:	mov	x2, x0
  45207c:	mov	w0, w27
  452080:	cbnz	w1, 452090 <_obstack_memory_used@@Base+0xfea0>
  452084:	ldr	w1, [x19]
  452088:	add	w1, w1, #0x1
  45208c:	str	w1, [x19]
  452090:	sub	w1, w27, #0x3a
  452094:	cmp	x2, #0x0
  452098:	and	w1, w1, #0xff
  45209c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  4520a0:	b.ls	452368 <_obstack_memory_used@@Base+0x10178>  // b.plast
  4520a4:	ldrb	w3, [x2]
  4520a8:	ldrb	w1, [x2, #1]
  4520ac:	cmp	w3, #0x57
  4520b0:	b.eq	452260 <_obstack_memory_used@@Base+0x10070>  // b.none
  4520b4:	cmp	w1, #0x3a
  4520b8:	b.eq	4522f0 <_obstack_memory_used@@Base+0x10100>  // b.none
  4520bc:	ldp	x29, x30, [sp, #16]
  4520c0:	ldp	x19, x20, [sp, #32]
  4520c4:	ldp	x21, x22, [sp, #48]
  4520c8:	ldp	x23, x24, [sp, #64]
  4520cc:	ldp	x25, x26, [sp, #80]
  4520d0:	ldp	x27, x28, [sp, #96]
  4520d4:	add	sp, sp, #0x70
  4520d8:	ret
  4520dc:	ldrb	w1, [x21]
  4520e0:	cmp	w1, #0x2d
  4520e4:	b.eq	4521e0 <_obstack_memory_used@@Base+0xfff0>  // b.none
  4520e8:	ldr	w1, [x19, #40]
  4520ec:	cbz	w1, 4523a4 <_obstack_memory_used@@Base+0x101b4>
  4520f0:	add	w1, w0, #0x1
  4520f4:	mov	w0, #0x1                   	// #1
  4520f8:	ldp	x23, x24, [sp, #64]
  4520fc:	ldp	x27, x28, [sp, #96]
  452100:	str	w1, [x19]
  452104:	str	x21, [x19, #16]
  452108:	ldp	x19, x20, [sp, #32]
  45210c:	ldp	x21, x22, [sp, #48]
  452110:	ldp	x29, x30, [sp, #16]
  452114:	ldp	x25, x26, [sp, #80]
  452118:	add	sp, sp, #0x70
  45211c:	ret
  452120:	mov	w1, #0x1                   	// #1
  452124:	str	w1, [x6]
  452128:	mov	w0, w1
  45212c:	str	xzr, [x19, #32]
  452130:	stp	w0, w0, [x19, #44]
  452134:	ldrb	w0, [x24]
  452138:	cmp	w0, #0x2d
  45213c:	b.ne	451f50 <_obstack_memory_used@@Base+0xfd60>  // b.any
  452140:	b	45202c <_obstack_memory_used@@Base+0xfe3c>
  452144:	ldp	w1, w20, [x19, #44]
  452148:	cmp	w20, w1
  45214c:	b.eq	4523a4 <_obstack_memory_used@@Base+0x101b4>  // b.none
  452150:	mov	w0, #0xffffffff            	// #-1
  452154:	ldp	x21, x22, [sp, #48]
  452158:	ldp	x23, x24, [sp, #64]
  45215c:	ldp	x27, x28, [sp, #96]
  452160:	str	w1, [x19]
  452164:	ldp	x19, x20, [sp, #32]
  452168:	b	452110 <_obstack_memory_used@@Base+0xff20>
  45216c:	ldp	w1, w8, [x19, #44]
  452170:	cmp	w1, w8
  452174:	b.eq	452338 <_obstack_memory_used@@Base+0x10148>  // b.none
  452178:	cmp	w0, w8
  45217c:	b.eq	452190 <_obstack_memory_used@@Base+0xffa0>  // b.none
  452180:	mov	x1, x19
  452184:	mov	x0, x23
  452188:	bl	4518c8 <_obstack_memory_used@@Base+0xf6d8>
  45218c:	ldr	w8, [x19]
  452190:	cmp	w20, w8
  452194:	b.le	45234c <_obstack_memory_used@@Base+0x1015c>
  452198:	sxtw	x6, w8
  45219c:	b	4521b0 <_obstack_memory_used@@Base+0xffc0>
  4521a0:	add	w8, w2, #0x1
  4521a4:	str	w8, [x19]
  4521a8:	cmp	w20, w6
  4521ac:	b.le	45234c <_obstack_memory_used@@Base+0x1015c>
  4521b0:	ldr	x0, [x23, x6, lsl #3]
  4521b4:	mov	w2, w6
  4521b8:	mov	w8, w6
  4521bc:	add	x6, x6, #0x1
  4521c0:	ldrb	w1, [x0]
  4521c4:	cmp	w1, #0x2d
  4521c8:	b.ne	4521a0 <_obstack_memory_used@@Base+0xffb0>  // b.any
  4521cc:	ldrb	w0, [x0, #1]
  4521d0:	cbz	w0, 4521a0 <_obstack_memory_used@@Base+0xffb0>
  4521d4:	ldr	w0, [x19]
  4521d8:	str	w8, [x19, #48]
  4521dc:	b	451fc8 <_obstack_memory_used@@Base+0xfdd8>
  4521e0:	ldrb	w1, [x21, #1]
  4521e4:	cbz	w1, 4520e8 <_obstack_memory_used@@Base+0xfef8>
  4521e8:	cbz	x25, 452258 <_obstack_memory_used@@Base+0x10068>
  4521ec:	cmp	w1, #0x2d
  4521f0:	b.eq	452440 <_obstack_memory_used@@Base+0x10250>  // b.none
  4521f4:	cbz	w27, 452258 <_obstack_memory_used@@Base+0x10068>
  4521f8:	ldrb	w0, [x21, #2]
  4521fc:	cbnz	w0, 45220c <_obstack_memory_used@@Base+0x1001c>
  452200:	mov	x0, x24
  452204:	bl	404870 <strchr@plt>
  452208:	cbnz	x0, 452258 <_obstack_memory_used@@Base+0x10068>
  45220c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x14e10>
  452210:	add	x0, x0, #0xa60
  452214:	str	x0, [sp]
  452218:	add	x21, x21, #0x1
  45221c:	str	x21, [x19, #32]
  452220:	mov	w5, w27
  452224:	mov	w7, w26
  452228:	mov	x6, x19
  45222c:	mov	x4, x22
  452230:	mov	x3, x25
  452234:	mov	x2, x24
  452238:	mov	x1, x23
  45223c:	mov	w0, w20
  452240:	bl	4519a8 <_obstack_memory_used@@Base+0xf7b8>
  452244:	cmn	w0, #0x1
  452248:	b.ne	4520bc <_obstack_memory_used@@Base+0xfecc>  // b.any
  45224c:	ldrsw	x0, [x19]
  452250:	ldr	x21, [x23, x0, lsl #3]
  452254:	nop
  452258:	add	x21, x21, #0x1
  45225c:	b	45205c <_obstack_memory_used@@Base+0xfe6c>
  452260:	cmp	w1, #0x3b
  452264:	ccmp	x25, #0x0, #0x4, eq  // eq = none
  452268:	b.eq	4520b4 <_obstack_memory_used@@Base+0xfec4>  // b.none
  45226c:	ldrb	w0, [x21, #1]
  452270:	cbnz	w0, 452284 <_obstack_memory_used@@Base+0x10094>
  452274:	ldr	w0, [x19]
  452278:	cmp	w0, w20
  45227c:	b.eq	452478 <_obstack_memory_used@@Base+0x10288>  // b.none
  452280:	ldr	x28, [x23, w0, sxtw #3]
  452284:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  452288:	add	x0, x0, #0x950
  45228c:	mov	w7, w26
  452290:	mov	x6, x19
  452294:	mov	x4, x22
  452298:	mov	x3, x25
  45229c:	mov	x2, x24
  4522a0:	mov	x1, x23
  4522a4:	str	x0, [sp]
  4522a8:	mov	w0, w20
  4522ac:	mov	w5, #0x0                   	// #0
  4522b0:	str	xzr, [x19, #16]
  4522b4:	str	x28, [x19, #32]
  4522b8:	bl	4519a8 <_obstack_memory_used@@Base+0xf7b8>
  4522bc:	ldp	x19, x20, [sp, #32]
  4522c0:	ldp	x21, x22, [sp, #48]
  4522c4:	ldp	x23, x24, [sp, #64]
  4522c8:	ldp	x27, x28, [sp, #96]
  4522cc:	b	452110 <_obstack_memory_used@@Base+0xff20>
  4522d0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  4522d4:	add	x0, x0, #0x928
  4522d8:	bl	404af0 <getenv@plt>
  4522dc:	ldr	x21, [x19, #32]
  4522e0:	cbnz	x0, 451f60 <_obstack_memory_used@@Base+0xfd70>
  4522e4:	mov	w0, #0x1                   	// #1
  4522e8:	str	w0, [x19, #40]
  4522ec:	b	45203c <_obstack_memory_used@@Base+0xfe4c>
  4522f0:	ldrb	w1, [x2, #2]
  4522f4:	ldrb	w2, [x21, #1]
  4522f8:	cmp	w1, #0x3a
  4522fc:	b.eq	452400 <_obstack_memory_used@@Base+0x10210>  // b.none
  452300:	ldr	w1, [x19]
  452304:	cbnz	w2, 452394 <_obstack_memory_used@@Base+0x101a4>
  452308:	cmp	w20, w1
  45230c:	b.eq	452420 <_obstack_memory_used@@Base+0x10230>  // b.none
  452310:	ldr	x2, [x23, w1, sxtw #3]
  452314:	add	w1, w1, #0x1
  452318:	str	w1, [x19]
  45231c:	str	x2, [x19, #16]
  452320:	ldp	x21, x22, [sp, #48]
  452324:	ldp	x23, x24, [sp, #64]
  452328:	ldp	x27, x28, [sp, #96]
  45232c:	str	xzr, [x19, #32]
  452330:	ldp	x19, x20, [sp, #32]
  452334:	b	452110 <_obstack_memory_used@@Base+0xff20>
  452338:	cmp	w0, w8
  45233c:	b.eq	452190 <_obstack_memory_used@@Base+0xffa0>  // b.none
  452340:	mov	w8, w0
  452344:	str	w0, [x19, #44]
  452348:	b	452190 <_obstack_memory_used@@Base+0xffa0>
  45234c:	mov	w0, w8
  452350:	str	w8, [x19, #48]
  452354:	b	451fc8 <_obstack_memory_used@@Base+0xfdd8>
  452358:	add	x24, x24, #0x1
  45235c:	mov	x21, #0x0                   	// #0
  452360:	str	wzr, [x19, #40]
  452364:	b	45203c <_obstack_memory_used@@Base+0xfe4c>
  452368:	cbnz	w26, 4523c8 <_obstack_memory_used@@Base+0x101d8>
  45236c:	mov	w0, #0x3f                  	// #63
  452370:	ldp	x29, x30, [sp, #16]
  452374:	ldp	x21, x22, [sp, #48]
  452378:	ldp	x23, x24, [sp, #64]
  45237c:	str	w27, [x19, #8]
  452380:	ldp	x19, x20, [sp, #32]
  452384:	ldp	x25, x26, [sp, #80]
  452388:	ldp	x27, x28, [sp, #96]
  45238c:	add	sp, sp, #0x70
  452390:	ret
  452394:	add	w1, w1, #0x1
  452398:	str	w1, [x19]
  45239c:	str	x28, [x19, #16]
  4523a0:	b	452320 <_obstack_memory_used@@Base+0x10130>
  4523a4:	ldp	x19, x20, [sp, #32]
  4523a8:	ldp	x21, x22, [sp, #48]
  4523ac:	ldp	x23, x24, [sp, #64]
  4523b0:	ldp	x27, x28, [sp, #96]
  4523b4:	mov	w0, #0xffffffff            	// #-1
  4523b8:	b	452110 <_obstack_memory_used@@Base+0xff20>
  4523bc:	mov	w1, w0
  4523c0:	str	w0, [x19, #44]
  4523c4:	b	452020 <_obstack_memory_used@@Base+0xfe30>
  4523c8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4523cc:	mov	w2, #0x5                   	// #5
  4523d0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  4523d4:	add	x1, x1, #0x900
  4523d8:	ldr	x20, [x0, #1096]
  4523dc:	mov	x0, #0x0                   	// #0
  4523e0:	bl	4049c0 <dcgettext@plt>
  4523e4:	mov	x2, x0
  4523e8:	ldr	x3, [x23]
  4523ec:	mov	w4, w27
  4523f0:	mov	x0, x20
  4523f4:	mov	w1, #0x1                   	// #1
  4523f8:	bl	404700 <__fprintf_chk@plt>
  4523fc:	b	45236c <_obstack_memory_used@@Base+0x1017c>
  452400:	cbz	w2, 452418 <_obstack_memory_used@@Base+0x10228>
  452404:	ldr	w1, [x19]
  452408:	str	x28, [x19, #16]
  45240c:	add	w1, w1, #0x1
  452410:	str	w1, [x19]
  452414:	b	452320 <_obstack_memory_used@@Base+0x10130>
  452418:	str	xzr, [x19, #16]
  45241c:	b	452320 <_obstack_memory_used@@Base+0x10130>
  452420:	cbnz	w26, 4524a8 <_obstack_memory_used@@Base+0x102b8>
  452424:	str	w27, [x19, #8]
  452428:	mov	w1, #0x3a                  	// #58
  45242c:	mov	w0, #0x3f                  	// #63
  452430:	ldrb	w2, [x24]
  452434:	cmp	w2, w1
  452438:	csel	w0, w1, w0, eq  // eq = none
  45243c:	b	452320 <_obstack_memory_used@@Base+0x10130>
  452440:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x19e10>
  452444:	add	x0, x0, #0xd40
  452448:	str	x0, [sp]
  45244c:	add	x21, x21, #0x2
  452450:	mov	w7, w26
  452454:	mov	x6, x19
  452458:	mov	w5, w27
  45245c:	mov	x4, x22
  452460:	mov	x3, x25
  452464:	mov	x2, x24
  452468:	mov	x1, x23
  45246c:	mov	w0, w20
  452470:	str	x21, [x19, #32]
  452474:	b	4522b8 <_obstack_memory_used@@Base+0x100c8>
  452478:	cbnz	w26, 4524e0 <_obstack_memory_used@@Base+0x102f0>
  45247c:	ldp	x21, x22, [sp, #48]
  452480:	str	w27, [x19, #8]
  452484:	mov	w1, #0x3a                  	// #58
  452488:	mov	w0, #0x3f                  	// #63
  45248c:	ldrb	w2, [x24]
  452490:	ldp	x19, x20, [sp, #32]
  452494:	cmp	w2, w1
  452498:	csel	w0, w1, w0, eq  // eq = none
  45249c:	ldp	x23, x24, [sp, #64]
  4524a0:	ldp	x27, x28, [sp, #96]
  4524a4:	b	452110 <_obstack_memory_used@@Base+0xff20>
  4524a8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4524ac:	mov	w2, #0x5                   	// #5
  4524b0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  4524b4:	add	x1, x1, #0x920
  4524b8:	ldr	x20, [x0, #1096]
  4524bc:	mov	x0, #0x0                   	// #0
  4524c0:	bl	4049c0 <dcgettext@plt>
  4524c4:	mov	x2, x0
  4524c8:	ldr	x3, [x23]
  4524cc:	mov	w4, w27
  4524d0:	mov	x0, x20
  4524d4:	mov	w1, #0x1                   	// #1
  4524d8:	bl	404700 <__fprintf_chk@plt>
  4524dc:	b	452424 <_obstack_memory_used@@Base+0x10234>
  4524e0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x3fe10>
  4524e4:	mov	w2, #0x5                   	// #5
  4524e8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1ce10>
  4524ec:	add	x1, x1, #0x920
  4524f0:	ldr	x20, [x0, #1096]
  4524f4:	mov	x0, #0x0                   	// #0
  4524f8:	bl	4049c0 <dcgettext@plt>
  4524fc:	mov	x2, x0
  452500:	ldr	x3, [x23]
  452504:	mov	w4, w27
  452508:	mov	x0, x20
  45250c:	mov	w1, #0x1                   	// #1
  452510:	bl	404700 <__fprintf_chk@plt>
  452514:	b	45247c <_obstack_memory_used@@Base+0x1028c>
  452518:	stp	x29, x30, [sp, #-48]!
  45251c:	mov	w7, w6
  452520:	mov	x29, sp
  452524:	stp	x19, x20, [sp, #16]
  452528:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x3fe10>
  45252c:	stp	x21, x22, [sp, #32]
  452530:	add	x22, x20, #0x434
  452534:	ldr	w9, [x20, #1076]
  452538:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x3fe10>
  45253c:	add	x19, x21, #0xee8
  452540:	ldr	w8, [x22, #4]
  452544:	mov	x6, x19
  452548:	str	w9, [x21, #3816]
  45254c:	str	w8, [x19, #4]
  452550:	bl	451ee0 <_obstack_memory_used@@Base+0xfcf0>
  452554:	adrp	x2, 483000 <argp_program_version_hook@@Base+0x290>
  452558:	ldr	w4, [x21, #3816]
  45255c:	ldr	w1, [x19, #8]
  452560:	ldr	x3, [x19, #16]
  452564:	str	w4, [x20, #1076]
  452568:	str	x3, [x2, #1000]
  45256c:	str	w1, [x22, #8]
  452570:	ldp	x19, x20, [sp, #16]
  452574:	ldp	x21, x22, [sp, #32]
  452578:	ldp	x29, x30, [sp], #48
  45257c:	ret
  452580:	mov	w6, #0x1                   	// #1
  452584:	mov	w5, #0x0                   	// #0
  452588:	mov	x4, #0x0                   	// #0
  45258c:	mov	x3, #0x0                   	// #0
  452590:	b	452518 <_obstack_memory_used@@Base+0x10328>
  452594:	nop
  452598:	mov	w2, #0x3                   	// #3
  45259c:	mov	w1, #0x0                   	// #0
  4525a0:	b	441b80 <argp_parse@@Base+0xdc98>
  4525a4:	nop
  4525a8:	stp	x29, x30, [sp, #-48]!
  4525ac:	mov	x29, sp
  4525b0:	str	q0, [sp, #16]
  4525b4:	str	q1, [sp, #32]
  4525b8:	ldp	x2, x0, [sp, #16]
  4525bc:	ldp	x5, x3, [sp, #32]
  4525c0:	mrs	x10, fpcr
  4525c4:	lsr	x1, x0, #63
  4525c8:	ubfx	x6, x0, #0, #48
  4525cc:	and	w13, w1, #0xff
  4525d0:	mov	x14, x1
  4525d4:	ubfx	x7, x0, #48, #15
  4525d8:	cbz	w7, 4529f8 <_obstack_memory_used@@Base+0x10808>
  4525dc:	mov	w4, #0x7fff                	// #32767
  4525e0:	cmp	w7, w4
  4525e4:	b.eq	452a40 <_obstack_memory_used@@Base+0x10850>  // b.none
  4525e8:	and	x7, x7, #0xffff
  4525ec:	extr	x6, x6, x2, #61
  4525f0:	mov	x15, #0xffffffffffffc001    	// #-16383
  4525f4:	orr	x4, x6, #0x8000000000000
  4525f8:	add	x7, x7, x15
  4525fc:	lsl	x2, x2, #3
  452600:	mov	x1, #0x0                   	// #0
  452604:	mov	x16, #0x0                   	// #0
  452608:	mov	w0, #0x0                   	// #0
  45260c:	lsr	x8, x3, #63
  452610:	ubfx	x6, x3, #0, #48
  452614:	and	w15, w8, #0xff
  452618:	ubfx	x9, x3, #48, #15
  45261c:	cbz	w9, 4529b4 <_obstack_memory_used@@Base+0x107c4>
  452620:	mov	w11, #0x7fff                	// #32767
  452624:	cmp	w9, w11
  452628:	b.eq	4526ec <_obstack_memory_used@@Base+0x104fc>  // b.none
  45262c:	and	x9, x9, #0xffff
  452630:	extr	x6, x6, x5, #61
  452634:	mov	x12, #0xffffffffffffc001    	// #-16383
  452638:	orr	x6, x6, #0x8000000000000
  45263c:	add	x9, x9, x12
  452640:	lsl	x5, x5, #3
  452644:	sub	x7, x7, x9
  452648:	mov	x9, #0x0                   	// #0
  45264c:	eor	w11, w13, w15
  452650:	cmp	x1, #0x9
  452654:	and	x3, x11, #0xff
  452658:	mov	x12, x3
  45265c:	b.gt	45298c <_obstack_memory_used@@Base+0x1079c>
  452660:	cmp	x1, #0x7
  452664:	b.gt	452b4c <_obstack_memory_used@@Base+0x1095c>
  452668:	cmp	x1, #0x3
  45266c:	b.eq	452688 <_obstack_memory_used@@Base+0x10498>  // b.none
  452670:	b.le	45295c <_obstack_memory_used@@Base+0x1076c>
  452674:	cmp	x1, #0x5
  452678:	b.eq	45299c <_obstack_memory_used@@Base+0x107ac>  // b.none
  45267c:	b.le	452780 <_obstack_memory_used@@Base+0x10590>
  452680:	cmp	x1, #0x6
  452684:	b.eq	452750 <_obstack_memory_used@@Base+0x10560>  // b.none
  452688:	cmp	x9, #0x1
  45268c:	b.eq	452ad0 <_obstack_memory_used@@Base+0x108e0>  // b.none
  452690:	cbz	x9, 4526a4 <_obstack_memory_used@@Base+0x104b4>
  452694:	cmp	x9, #0x2
  452698:	b.eq	452cd4 <_obstack_memory_used@@Base+0x10ae4>  // b.none
  45269c:	cmp	x9, #0x3
  4526a0:	b.eq	452cbc <_obstack_memory_used@@Base+0x10acc>  // b.none
  4526a4:	mov	x1, #0x3fff                	// #16383
  4526a8:	mov	x12, x8
  4526ac:	add	x3, x7, x1
  4526b0:	cmp	x3, #0x0
  4526b4:	b.le	452b90 <_obstack_memory_used@@Base+0x109a0>
  4526b8:	tst	x5, #0x7
  4526bc:	b.ne	452b00 <_obstack_memory_used@@Base+0x10910>  // b.any
  4526c0:	and	w11, w12, #0x1
  4526c4:	tbz	x6, #52, 4526d0 <_obstack_memory_used@@Base+0x104e0>
  4526c8:	and	x6, x6, #0xffefffffffffffff
  4526cc:	add	x3, x7, #0x4, lsl #12
  4526d0:	mov	x1, #0x7ffe                	// #32766
  4526d4:	cmp	x3, x1
  4526d8:	b.gt	452c78 <_obstack_memory_used@@Base+0x10a88>
  4526dc:	and	w1, w3, #0x7fff
  4526e0:	extr	x2, x6, x5, #3
  4526e4:	ubfx	x6, x6, #3, #48
  4526e8:	b	45275c <_obstack_memory_used@@Base+0x1056c>
  4526ec:	mov	x9, #0xffffffffffff8001    	// #-32767
  4526f0:	orr	x3, x6, x5
  4526f4:	add	x7, x7, x9
  4526f8:	cbz	x3, 452a74 <_obstack_memory_used@@Base+0x10884>
  4526fc:	tst	x6, #0x800000000000
  452700:	orr	x1, x1, #0x3
  452704:	csinc	w0, w0, wzr, ne  // ne = any
  452708:	mov	x9, #0x3                   	// #3
  45270c:	eor	w11, w13, w15
  452710:	cmp	x1, #0x9
  452714:	and	x3, x11, #0xff
  452718:	mov	x12, x3
  45271c:	b.le	452660 <_obstack_memory_used@@Base+0x10470>
  452720:	cmp	x1, #0xf
  452724:	b.ne	45298c <_obstack_memory_used@@Base+0x1079c>  // b.any
  452728:	tbz	x4, #47, 452b38 <_obstack_memory_used@@Base+0x10948>
  45272c:	tbnz	x6, #47, 452b38 <_obstack_memory_used@@Base+0x10948>
  452730:	orr	x6, x6, #0x800000000000
  452734:	mov	w11, w15
  452738:	and	x6, x6, #0xffffffffffff
  45273c:	mov	x2, x5
  452740:	mov	w1, #0x7fff                	// #32767
  452744:	b	45275c <_obstack_memory_used@@Base+0x1056c>
  452748:	cmp	x1, #0x2
  45274c:	b.ne	452788 <_obstack_memory_used@@Base+0x10598>  // b.any
  452750:	mov	w1, #0x0                   	// #0
  452754:	mov	x6, #0x0                   	// #0
  452758:	mov	x2, #0x0                   	// #0
  45275c:	mov	x5, #0x0                   	// #0
  452760:	orr	w1, w1, w11, lsl #15
  452764:	bfxil	x5, x6, #0, #48
  452768:	fmov	d0, x2
  45276c:	bfi	x5, x1, #48, #16
  452770:	fmov	v0.d[1], x5
  452774:	cbnz	w0, 45297c <_obstack_memory_used@@Base+0x1078c>
  452778:	ldp	x29, x30, [sp], #48
  45277c:	ret
  452780:	cmp	x1, #0x4
  452784:	b.eq	452750 <_obstack_memory_used@@Base+0x10560>  // b.none
  452788:	cmp	x4, x6
  45278c:	b.ls	452ae4 <_obstack_memory_used@@Base+0x108f4>  // b.plast
  452790:	lsr	x3, x4, #1
  452794:	extr	x8, x4, x2, #1
  452798:	lsl	x2, x2, #63
  45279c:	ubfx	x14, x6, #20, #32
  4527a0:	extr	x9, x6, x5, #52
  4527a4:	lsl	x13, x5, #12
  4527a8:	and	x15, x9, #0xffffffff
  4527ac:	udiv	x5, x3, x14
  4527b0:	msub	x3, x5, x14, x3
  4527b4:	mul	x1, x15, x5
  4527b8:	extr	x3, x3, x8, #32
  4527bc:	cmp	x1, x3
  4527c0:	b.ls	4527d4 <_obstack_memory_used@@Base+0x105e4>  // b.plast
  4527c4:	adds	x3, x9, x3
  4527c8:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  4527cc:	b.hi	452db4 <_obstack_memory_used@@Base+0x10bc4>  // b.pmore
  4527d0:	sub	x5, x5, #0x1
  4527d4:	sub	x3, x3, x1
  4527d8:	mov	x4, x8
  4527dc:	udiv	x1, x3, x14
  4527e0:	msub	x3, x1, x14, x3
  4527e4:	mul	x6, x15, x1
  4527e8:	bfi	x4, x3, #32, #32
  4527ec:	cmp	x6, x4
  4527f0:	b.ls	452804 <_obstack_memory_used@@Base+0x10614>  // b.plast
  4527f4:	adds	x4, x9, x4
  4527f8:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  4527fc:	b.hi	452da8 <_obstack_memory_used@@Base+0x10bb8>  // b.pmore
  452800:	sub	x1, x1, #0x1
  452804:	orr	x8, x1, x5, lsl #32
  452808:	and	x17, x13, #0xffffffff
  45280c:	and	x1, x8, #0xffffffff
  452810:	lsr	x16, x13, #32
  452814:	lsr	x5, x8, #32
  452818:	sub	x4, x4, x6
  45281c:	mov	x18, #0x100000000           	// #4294967296
  452820:	mul	x3, x1, x17
  452824:	mul	x30, x5, x17
  452828:	madd	x6, x16, x1, x30
  45282c:	and	x1, x3, #0xffffffff
  452830:	mul	x5, x5, x16
  452834:	add	x3, x6, x3, lsr #32
  452838:	add	x6, x5, x18
  45283c:	cmp	x30, x3
  452840:	csel	x5, x6, x5, hi  // hi = pmore
  452844:	add	x1, x1, x3, lsl #32
  452848:	add	x5, x5, x3, lsr #32
  45284c:	cmp	x4, x5
  452850:	b.cc	452b5c <_obstack_memory_used@@Base+0x1096c>  // b.lo, b.ul, b.last
  452854:	ccmp	x2, x1, #0x2, eq  // eq = none
  452858:	mov	x6, x8
  45285c:	b.cc	452b5c <_obstack_memory_used@@Base+0x1096c>  // b.lo, b.ul, b.last
  452860:	subs	x8, x2, x1
  452864:	mov	x3, #0x3fff                	// #16383
  452868:	cmp	x2, x1
  45286c:	add	x3, x7, x3
  452870:	sbc	x4, x4, x5
  452874:	cmp	x9, x4
  452878:	b.eq	452dc0 <_obstack_memory_used@@Base+0x10bd0>  // b.none
  45287c:	udiv	x5, x4, x14
  452880:	msub	x4, x5, x14, x4
  452884:	mul	x2, x15, x5
  452888:	extr	x1, x4, x8, #32
  45288c:	cmp	x2, x1
  452890:	b.ls	4528a4 <_obstack_memory_used@@Base+0x106b4>  // b.plast
  452894:	adds	x1, x9, x1
  452898:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  45289c:	b.hi	452e78 <_obstack_memory_used@@Base+0x10c88>  // b.pmore
  4528a0:	sub	x5, x5, #0x1
  4528a4:	sub	x1, x1, x2
  4528a8:	udiv	x2, x1, x14
  4528ac:	msub	x1, x2, x14, x1
  4528b0:	mul	x15, x15, x2
  4528b4:	bfi	x8, x1, #32, #32
  4528b8:	mov	x1, x8
  4528bc:	cmp	x15, x8
  4528c0:	b.ls	4528d4 <_obstack_memory_used@@Base+0x106e4>  // b.plast
  4528c4:	adds	x1, x9, x8
  4528c8:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  4528cc:	b.hi	452e84 <_obstack_memory_used@@Base+0x10c94>  // b.pmore
  4528d0:	sub	x2, x2, #0x1
  4528d4:	orr	x5, x2, x5, lsl #32
  4528d8:	mov	x11, #0x100000000           	// #4294967296
  4528dc:	and	x4, x5, #0xffffffff
  4528e0:	sub	x1, x1, x15
  4528e4:	lsr	x14, x5, #32
  4528e8:	mul	x2, x17, x4
  4528ec:	mul	x17, x14, x17
  4528f0:	madd	x4, x16, x4, x17
  4528f4:	and	x8, x2, #0xffffffff
  4528f8:	mul	x16, x16, x14
  4528fc:	add	x2, x4, x2, lsr #32
  452900:	add	x4, x16, x11
  452904:	cmp	x17, x2
  452908:	csel	x16, x4, x16, hi  // hi = pmore
  45290c:	add	x4, x8, x2, lsl #32
  452910:	add	x16, x16, x2, lsr #32
  452914:	cmp	x1, x16
  452918:	b.cs	452cf8 <_obstack_memory_used@@Base+0x10b08>  // b.hs, b.nlast
  45291c:	adds	x2, x9, x1
  452920:	sub	x8, x5, #0x1
  452924:	mov	x1, x2
  452928:	b.cs	45293c <_obstack_memory_used@@Base+0x1074c>  // b.hs, b.nlast
  45292c:	cmp	x2, x16
  452930:	b.cc	452df8 <_obstack_memory_used@@Base+0x10c08>  // b.lo, b.ul, b.last
  452934:	ccmp	x13, x4, #0x2, eq  // eq = none
  452938:	b.cc	452df8 <_obstack_memory_used@@Base+0x10c08>  // b.lo, b.ul, b.last
  45293c:	cmp	x13, x4
  452940:	mov	x5, x8
  452944:	cset	w2, ne  // ne = any
  452948:	cmp	w2, #0x0
  45294c:	orr	x2, x5, #0x1
  452950:	ccmp	x1, x16, #0x0, eq  // eq = none
  452954:	csel	x5, x2, x5, ne  // ne = any
  452958:	b	4526b0 <_obstack_memory_used@@Base+0x104c0>
  45295c:	cmp	x1, #0x1
  452960:	b.ne	452748 <_obstack_memory_used@@Base+0x10558>  // b.any
  452964:	mov	x4, #0x0                   	// #0
  452968:	fmov	d0, x4
  45296c:	lsl	x3, x3, #63
  452970:	orr	w0, w0, #0x2
  452974:	orr	x5, x3, #0x7fff000000000000
  452978:	fmov	v0.d[1], x5
  45297c:	str	q0, [sp, #16]
  452980:	bl	453b20 <_obstack_memory_used@@Base+0x11930>
  452984:	ldr	q0, [sp, #16]
  452988:	b	452778 <_obstack_memory_used@@Base+0x10588>
  45298c:	cmp	x1, #0xb
  452990:	b.gt	452a60 <_obstack_memory_used@@Base+0x10870>
  452994:	cmp	x1, #0xa
  452998:	b.ne	452688 <_obstack_memory_used@@Base+0x10498>  // b.any
  45299c:	mov	w11, #0x0                   	// #0
  4529a0:	mov	x6, #0xffffffffffff        	// #281474976710655
  4529a4:	mov	x2, #0xffffffffffffffff    	// #-1
  4529a8:	mov	w0, #0x1                   	// #1
  4529ac:	mov	w1, #0x7fff                	// #32767
  4529b0:	b	45275c <_obstack_memory_used@@Base+0x1056c>
  4529b4:	orr	x3, x6, x5
  4529b8:	cbz	x3, 452aa0 <_obstack_memory_used@@Base+0x108b0>
  4529bc:	cbz	x6, 452c54 <_obstack_memory_used@@Base+0x10a64>
  4529c0:	clz	x3, x6
  4529c4:	sub	x9, x3, #0xf
  4529c8:	add	w12, w9, #0x3
  4529cc:	mov	w11, #0x3d                  	// #61
  4529d0:	sub	w9, w11, w9
  4529d4:	lsl	x6, x6, x12
  4529d8:	lsr	x9, x5, x9
  4529dc:	orr	x6, x9, x6
  4529e0:	lsl	x5, x5, x12
  4529e4:	add	x7, x3, x7
  4529e8:	mov	x11, #0x3fef                	// #16367
  4529ec:	mov	x9, #0x0                   	// #0
  4529f0:	add	x7, x7, x11
  4529f4:	b	45264c <_obstack_memory_used@@Base+0x1045c>
  4529f8:	orr	x4, x6, x2
  4529fc:	cbz	x4, 452a88 <_obstack_memory_used@@Base+0x10898>
  452a00:	cbz	x6, 452c30 <_obstack_memory_used@@Base+0x10a40>
  452a04:	clz	x0, x6
  452a08:	sub	x4, x0, #0xf
  452a0c:	add	w7, w4, #0x3
  452a10:	mov	w1, #0x3d                  	// #61
  452a14:	sub	w4, w1, w4
  452a18:	lsl	x6, x6, x7
  452a1c:	lsr	x4, x2, x4
  452a20:	orr	x4, x4, x6
  452a24:	lsl	x2, x2, x7
  452a28:	mov	x7, #0xffffffffffffc011    	// #-16367
  452a2c:	mov	x1, #0x0                   	// #0
  452a30:	sub	x7, x7, x0
  452a34:	mov	x16, #0x0                   	// #0
  452a38:	mov	w0, #0x0                   	// #0
  452a3c:	b	45260c <_obstack_memory_used@@Base+0x1041c>
  452a40:	orr	x4, x6, x2
  452a44:	cbnz	x4, 452ab4 <_obstack_memory_used@@Base+0x108c4>
  452a48:	mov	x2, #0x0                   	// #0
  452a4c:	mov	x1, #0x8                   	// #8
  452a50:	mov	x7, #0x7fff                	// #32767
  452a54:	mov	x16, #0x2                   	// #2
  452a58:	mov	w0, #0x0                   	// #0
  452a5c:	b	45260c <_obstack_memory_used@@Base+0x1041c>
  452a60:	mov	x6, x4
  452a64:	mov	x5, x2
  452a68:	mov	x8, x14
  452a6c:	mov	x9, x16
  452a70:	b	452688 <_obstack_memory_used@@Base+0x10498>
  452a74:	orr	x1, x1, #0x2
  452a78:	mov	x6, #0x0                   	// #0
  452a7c:	mov	x5, #0x0                   	// #0
  452a80:	mov	x9, #0x2                   	// #2
  452a84:	b	45270c <_obstack_memory_used@@Base+0x1051c>
  452a88:	mov	x2, #0x0                   	// #0
  452a8c:	mov	x1, #0x4                   	// #4
  452a90:	mov	x7, #0x0                   	// #0
  452a94:	mov	x16, #0x1                   	// #1
  452a98:	mov	w0, #0x0                   	// #0
  452a9c:	b	45260c <_obstack_memory_used@@Base+0x1041c>
  452aa0:	orr	x1, x1, #0x1
  452aa4:	mov	x6, #0x0                   	// #0
  452aa8:	mov	x5, #0x0                   	// #0
  452aac:	mov	x9, #0x1                   	// #1
  452ab0:	b	45264c <_obstack_memory_used@@Base+0x1045c>
  452ab4:	lsr	x0, x6, #47
  452ab8:	mov	x4, x6
  452abc:	eor	w0, w0, #0x1
  452ac0:	mov	x1, #0xc                   	// #12
  452ac4:	mov	x7, #0x7fff                	// #32767
  452ac8:	mov	x16, #0x3                   	// #3
  452acc:	b	45260c <_obstack_memory_used@@Base+0x1041c>
  452ad0:	mov	w11, w8
  452ad4:	mov	w1, #0x0                   	// #0
  452ad8:	mov	x6, #0x0                   	// #0
  452adc:	mov	x2, #0x0                   	// #0
  452ae0:	b	45275c <_obstack_memory_used@@Base+0x1056c>
  452ae4:	ccmp	x5, x2, #0x2, eq  // eq = none
  452ae8:	b.ls	452790 <_obstack_memory_used@@Base+0x105a0>  // b.plast
  452aec:	mov	x8, x2
  452af0:	sub	x7, x7, #0x1
  452af4:	mov	x3, x4
  452af8:	mov	x2, #0x0                   	// #0
  452afc:	b	45279c <_obstack_memory_used@@Base+0x105ac>
  452b00:	and	x1, x10, #0xc00000
  452b04:	orr	w0, w0, #0x10
  452b08:	cmp	x1, #0x400, lsl #12
  452b0c:	b.eq	452e60 <_obstack_memory_used@@Base+0x10c70>  // b.none
  452b10:	cmp	x1, #0x800, lsl #12
  452b14:	b.eq	452d74 <_obstack_memory_used@@Base+0x10b84>  // b.none
  452b18:	cbnz	x1, 4526c0 <_obstack_memory_used@@Base+0x104d0>
  452b1c:	and	x1, x5, #0xf
  452b20:	and	w11, w12, #0x1
  452b24:	cmp	x1, #0x4
  452b28:	b.eq	4526c4 <_obstack_memory_used@@Base+0x104d4>  // b.none
  452b2c:	adds	x5, x5, #0x4
  452b30:	cinc	x6, x6, cs  // cs = hs, nlast
  452b34:	b	4526c4 <_obstack_memory_used@@Base+0x104d4>
  452b38:	orr	x6, x4, #0x800000000000
  452b3c:	mov	w11, w13
  452b40:	and	x6, x6, #0xffffffffffff
  452b44:	mov	w1, #0x7fff                	// #32767
  452b48:	b	45275c <_obstack_memory_used@@Base+0x1056c>
  452b4c:	mov	w1, #0x7fff                	// #32767
  452b50:	mov	x6, #0x0                   	// #0
  452b54:	mov	x2, #0x0                   	// #0
  452b58:	b	45275c <_obstack_memory_used@@Base+0x1056c>
  452b5c:	adds	x3, x2, x13
  452b60:	sub	x6, x8, #0x1
  452b64:	adc	x4, x4, x9
  452b68:	cset	x18, cs  // cs = hs, nlast
  452b6c:	mov	x2, x3
  452b70:	cmp	x9, x4
  452b74:	b.cs	452ce8 <_obstack_memory_used@@Base+0x10af8>  // b.hs, b.nlast
  452b78:	cmp	x5, x4
  452b7c:	b.ls	452d10 <_obstack_memory_used@@Base+0x10b20>  // b.plast
  452b80:	adds	x2, x13, x3
  452b84:	sub	x6, x8, #0x2
  452b88:	adc	x4, x4, x9
  452b8c:	b	452860 <_obstack_memory_used@@Base+0x10670>
  452b90:	mov	x1, #0x1                   	// #1
  452b94:	sub	x1, x1, x3
  452b98:	cmp	x1, #0x74
  452b9c:	and	w11, w12, #0x1
  452ba0:	b.le	452bbc <_obstack_memory_used@@Base+0x109cc>
  452ba4:	orr	x2, x5, x6
  452ba8:	cbnz	x2, 452ddc <_obstack_memory_used@@Base+0x10bec>
  452bac:	orr	w0, w0, #0x8
  452bb0:	mov	w1, #0x0                   	// #0
  452bb4:	mov	x6, #0x0                   	// #0
  452bb8:	b	452ca0 <_obstack_memory_used@@Base+0x10ab0>
  452bbc:	cmp	x1, #0x3f
  452bc0:	b.le	452d1c <_obstack_memory_used@@Base+0x10b2c>
  452bc4:	mov	w2, #0x80                  	// #128
  452bc8:	sub	w2, w2, w1
  452bcc:	cmp	x1, #0x40
  452bd0:	sub	w1, w1, #0x40
  452bd4:	lsl	x2, x6, x2
  452bd8:	orr	x2, x5, x2
  452bdc:	csel	x5, x2, x5, ne  // ne = any
  452be0:	lsr	x6, x6, x1
  452be4:	cmp	x5, #0x0
  452be8:	cset	x2, ne  // ne = any
  452bec:	orr	x2, x2, x6
  452bf0:	ands	x6, x2, #0x7
  452bf4:	b.eq	452d50 <_obstack_memory_used@@Base+0x10b60>  // b.none
  452bf8:	mov	x6, #0x0                   	// #0
  452bfc:	and	x10, x10, #0xc00000
  452c00:	orr	w0, w0, #0x10
  452c04:	cmp	x10, #0x400, lsl #12
  452c08:	b.eq	452e9c <_obstack_memory_used@@Base+0x10cac>  // b.none
  452c0c:	cmp	x10, #0x800, lsl #12
  452c10:	b.eq	452eb0 <_obstack_memory_used@@Base+0x10cc0>  // b.none
  452c14:	cbz	x10, 452e18 <_obstack_memory_used@@Base+0x10c28>
  452c18:	tbnz	x6, #51, 452e30 <_obstack_memory_used@@Base+0x10c40>
  452c1c:	orr	w0, w0, #0x8
  452c20:	extr	x2, x6, x2, #3
  452c24:	mov	w1, #0x0                   	// #0
  452c28:	ubfx	x6, x6, #3, #48
  452c2c:	b	452ca0 <_obstack_memory_used@@Base+0x10ab0>
  452c30:	clz	x7, x2
  452c34:	add	x4, x7, #0x31
  452c38:	add	x0, x7, #0x40
  452c3c:	cmp	x4, #0x3c
  452c40:	b.le	452a0c <_obstack_memory_used@@Base+0x1081c>
  452c44:	sub	w4, w4, #0x3d
  452c48:	lsl	x4, x2, x4
  452c4c:	mov	x2, #0x0                   	// #0
  452c50:	b	452a28 <_obstack_memory_used@@Base+0x10838>
  452c54:	clz	x3, x5
  452c58:	add	x9, x3, #0x31
  452c5c:	add	x3, x3, #0x40
  452c60:	cmp	x9, #0x3c
  452c64:	b.le	4529c8 <_obstack_memory_used@@Base+0x107d8>
  452c68:	sub	w6, w9, #0x3d
  452c6c:	lsl	x6, x5, x6
  452c70:	mov	x5, #0x0                   	// #0
  452c74:	b	4529e4 <_obstack_memory_used@@Base+0x107f4>
  452c78:	and	x2, x10, #0xc00000
  452c7c:	cmp	x2, #0x400, lsl #12
  452c80:	b.eq	452e44 <_obstack_memory_used@@Base+0x10c54>  // b.none
  452c84:	cmp	x2, #0x800, lsl #12
  452c88:	b.eq	452d8c <_obstack_memory_used@@Base+0x10b9c>  // b.none
  452c8c:	cbz	x2, 452d68 <_obstack_memory_used@@Base+0x10b78>
  452c90:	mov	x6, #0xffffffffffff        	// #281474976710655
  452c94:	mov	x2, #0xffffffffffffffff    	// #-1
  452c98:	mov	w3, #0x14                  	// #20
  452c9c:	orr	w0, w0, w3
  452ca0:	mov	x5, #0x0                   	// #0
  452ca4:	orr	w1, w1, w11, lsl #15
  452ca8:	bfxil	x5, x6, #0, #48
  452cac:	fmov	d0, x2
  452cb0:	bfi	x5, x1, #48, #16
  452cb4:	fmov	v0.d[1], x5
  452cb8:	b	45297c <_obstack_memory_used@@Base+0x1078c>
  452cbc:	orr	x6, x6, #0x800000000000
  452cc0:	mov	w11, w8
  452cc4:	and	x6, x6, #0xffffffffffff
  452cc8:	mov	x2, x5
  452ccc:	mov	w1, #0x7fff                	// #32767
  452cd0:	b	45275c <_obstack_memory_used@@Base+0x1056c>
  452cd4:	mov	w11, w8
  452cd8:	mov	w1, #0x7fff                	// #32767
  452cdc:	mov	x6, #0x0                   	// #0
  452ce0:	mov	x2, #0x0                   	// #0
  452ce4:	b	45275c <_obstack_memory_used@@Base+0x1056c>
  452ce8:	cmp	x18, #0x0
  452cec:	ccmp	x9, x4, #0x0, eq  // eq = none
  452cf0:	b.ne	452860 <_obstack_memory_used@@Base+0x10670>  // b.any
  452cf4:	b	452b78 <_obstack_memory_used@@Base+0x10988>
  452cf8:	cmp	x4, #0x0
  452cfc:	cset	w2, ne  // ne = any
  452d00:	cmp	w2, #0x0
  452d04:	ccmp	x1, x16, #0x0, ne  // ne = any
  452d08:	b.ne	452948 <_obstack_memory_used@@Base+0x10758>  // b.any
  452d0c:	b	45291c <_obstack_memory_used@@Base+0x1072c>
  452d10:	ccmp	x1, x3, #0x0, eq  // eq = none
  452d14:	b.ls	452860 <_obstack_memory_used@@Base+0x10670>  // b.plast
  452d18:	b	452b80 <_obstack_memory_used@@Base+0x10990>
  452d1c:	mov	w2, #0x40                  	// #64
  452d20:	sub	w2, w2, w1
  452d24:	lsr	x4, x5, x1
  452d28:	lsl	x5, x5, x2
  452d2c:	cmp	x5, #0x0
  452d30:	cset	x3, ne  // ne = any
  452d34:	lsl	x2, x6, x2
  452d38:	orr	x2, x2, x4
  452d3c:	lsr	x6, x6, x1
  452d40:	orr	x2, x2, x3
  452d44:	tst	x2, #0x7
  452d48:	b.ne	452bfc <_obstack_memory_used@@Base+0x10a0c>  // b.any
  452d4c:	tbnz	x6, #51, 452ebc <_obstack_memory_used@@Base+0x10ccc>
  452d50:	mov	w1, #0x0                   	// #0
  452d54:	extr	x2, x6, x2, #3
  452d58:	ubfx	x6, x6, #3, #48
  452d5c:	tbz	w10, #11, 45275c <_obstack_memory_used@@Base+0x1056c>
  452d60:	orr	w0, w0, #0x8
  452d64:	b	452ca0 <_obstack_memory_used@@Base+0x10ab0>
  452d68:	mov	w1, #0x7fff                	// #32767
  452d6c:	mov	x6, #0x0                   	// #0
  452d70:	b	452c98 <_obstack_memory_used@@Base+0x10aa8>
  452d74:	mov	w11, #0x0                   	// #0
  452d78:	cbz	x12, 4526c4 <_obstack_memory_used@@Base+0x104d4>
  452d7c:	adds	x5, x5, #0x8
  452d80:	mov	w11, #0x1                   	// #1
  452d84:	cinc	x6, x6, cs  // cs = hs, nlast
  452d88:	b	4526c4 <_obstack_memory_used@@Base+0x104d4>
  452d8c:	cmp	x12, #0x0
  452d90:	mov	w2, #0x7fff                	// #32767
  452d94:	mov	x6, #0xffffffffffff        	// #281474976710655
  452d98:	csel	w1, w1, w2, eq  // eq = none
  452d9c:	csel	x6, x6, xzr, eq  // eq = none
  452da0:	csetm	x2, eq  // eq = none
  452da4:	b	452c98 <_obstack_memory_used@@Base+0x10aa8>
  452da8:	sub	x1, x1, #0x2
  452dac:	add	x4, x4, x9
  452db0:	b	452804 <_obstack_memory_used@@Base+0x10614>
  452db4:	sub	x5, x5, #0x2
  452db8:	add	x3, x3, x9
  452dbc:	b	4527d4 <_obstack_memory_used@@Base+0x105e4>
  452dc0:	cmp	x3, #0x0
  452dc4:	mov	x5, #0xffffffffffffffff    	// #-1
  452dc8:	b.gt	452b00 <_obstack_memory_used@@Base+0x10910>
  452dcc:	mov	x1, #0x1                   	// #1
  452dd0:	sub	x1, x1, x3
  452dd4:	cmp	x1, #0x74
  452dd8:	b.le	452bbc <_obstack_memory_used@@Base+0x109cc>
  452ddc:	and	x10, x10, #0xc00000
  452de0:	orr	w0, w0, #0x10
  452de4:	cmp	x10, #0x400, lsl #12
  452de8:	b.eq	452e90 <_obstack_memory_used@@Base+0x10ca0>  // b.none
  452dec:	cmp	x10, #0x800, lsl #12
  452df0:	csel	x2, x12, xzr, eq  // eq = none
  452df4:	b	452bac <_obstack_memory_used@@Base+0x109bc>
  452df8:	lsl	x8, x13, #1
  452dfc:	sub	x5, x5, #0x2
  452e00:	cmp	x13, x8
  452e04:	cinc	x1, x9, hi  // hi = pmore
  452e08:	cmp	x4, x8
  452e0c:	add	x1, x2, x1
  452e10:	cset	w2, ne  // ne = any
  452e14:	b	452948 <_obstack_memory_used@@Base+0x10758>
  452e18:	and	x1, x2, #0xf
  452e1c:	cmp	x1, #0x4
  452e20:	b.eq	452e2c <_obstack_memory_used@@Base+0x10c3c>  // b.none
  452e24:	adds	x2, x2, #0x4
  452e28:	cinc	x6, x6, cs  // cs = hs, nlast
  452e2c:	tbz	x6, #51, 452c1c <_obstack_memory_used@@Base+0x10a2c>
  452e30:	orr	w0, w0, #0x8
  452e34:	mov	w1, #0x1                   	// #1
  452e38:	mov	x6, #0x0                   	// #0
  452e3c:	mov	x2, #0x0                   	// #0
  452e40:	b	452ca0 <_obstack_memory_used@@Base+0x10ab0>
  452e44:	cmp	x12, #0x0
  452e48:	mov	w2, #0x7fff                	// #32767
  452e4c:	mov	x6, #0xffffffffffff        	// #281474976710655
  452e50:	csel	w1, w1, w2, ne  // ne = any
  452e54:	csel	x6, x6, xzr, ne  // ne = any
  452e58:	csetm	x2, ne  // ne = any
  452e5c:	b	452c98 <_obstack_memory_used@@Base+0x10aa8>
  452e60:	mov	w11, #0x1                   	// #1
  452e64:	cbnz	x12, 4526c4 <_obstack_memory_used@@Base+0x104d4>
  452e68:	adds	x5, x5, #0x8
  452e6c:	mov	w11, #0x0                   	// #0
  452e70:	cinc	x6, x6, cs  // cs = hs, nlast
  452e74:	b	4526c4 <_obstack_memory_used@@Base+0x104d4>
  452e78:	sub	x5, x5, #0x2
  452e7c:	add	x1, x1, x9
  452e80:	b	4528a4 <_obstack_memory_used@@Base+0x106b4>
  452e84:	sub	x2, x2, #0x2
  452e88:	add	x1, x1, x9
  452e8c:	b	4528d4 <_obstack_memory_used@@Base+0x106e4>
  452e90:	mov	x2, #0x1                   	// #1
  452e94:	sub	x2, x2, x12
  452e98:	b	452bac <_obstack_memory_used@@Base+0x109bc>
  452e9c:	cbnz	x12, 452e2c <_obstack_memory_used@@Base+0x10c3c>
  452ea0:	adds	x2, x2, #0x8
  452ea4:	cinc	x6, x6, cs  // cs = hs, nlast
  452ea8:	tbnz	x6, #51, 452e30 <_obstack_memory_used@@Base+0x10c40>
  452eac:	b	452c1c <_obstack_memory_used@@Base+0x10a2c>
  452eb0:	cbnz	x12, 452ea0 <_obstack_memory_used@@Base+0x10cb0>
  452eb4:	tbnz	x6, #51, 452e30 <_obstack_memory_used@@Base+0x10c40>
  452eb8:	b	452c1c <_obstack_memory_used@@Base+0x10a2c>
  452ebc:	orr	w0, w0, #0x10
  452ec0:	b	452e30 <_obstack_memory_used@@Base+0x10c40>
  452ec4:	nop
  452ec8:	stp	x29, x30, [sp, #-48]!
  452ecc:	mov	x29, sp
  452ed0:	str	q0, [sp, #16]
  452ed4:	str	q1, [sp, #32]
  452ed8:	ldp	x6, x1, [sp, #16]
  452edc:	ldp	x7, x0, [sp, #32]
  452ee0:	mrs	x2, fpcr
  452ee4:	ubfx	x4, x1, #48, #15
  452ee8:	lsr	x2, x1, #63
  452eec:	lsr	x3, x0, #63
  452ef0:	ubfx	x9, x0, #0, #48
  452ef4:	mov	x5, #0x7fff                	// #32767
  452ef8:	mov	x10, x6
  452efc:	cmp	x4, x5
  452f00:	and	w2, w2, #0xff
  452f04:	ubfx	x1, x1, #0, #48
  452f08:	and	w3, w3, #0xff
  452f0c:	ubfx	x0, x0, #48, #15
  452f10:	b.eq	452f44 <_obstack_memory_used@@Base+0x10d54>  // b.none
  452f14:	cmp	x0, x5
  452f18:	b.eq	452f30 <_obstack_memory_used@@Base+0x10d40>  // b.none
  452f1c:	cmp	x4, x0
  452f20:	mov	w0, #0x1                   	// #1
  452f24:	b.eq	452f5c <_obstack_memory_used@@Base+0x10d6c>  // b.none
  452f28:	ldp	x29, x30, [sp], #48
  452f2c:	ret
  452f30:	orr	x8, x9, x7
  452f34:	cbnz	x8, 452fc0 <_obstack_memory_used@@Base+0x10dd0>
  452f38:	mov	w0, #0x1                   	// #1
  452f3c:	ldp	x29, x30, [sp], #48
  452f40:	ret
  452f44:	orr	x5, x1, x6
  452f48:	cbnz	x5, 452f90 <_obstack_memory_used@@Base+0x10da0>
  452f4c:	cmp	x0, x4
  452f50:	b.ne	452f38 <_obstack_memory_used@@Base+0x10d48>  // b.any
  452f54:	orr	x8, x9, x7
  452f58:	cbnz	x8, 452fc0 <_obstack_memory_used@@Base+0x10dd0>
  452f5c:	cmp	x1, x9
  452f60:	mov	w0, #0x1                   	// #1
  452f64:	ccmp	x6, x7, #0x0, eq  // eq = none
  452f68:	b.ne	452f28 <_obstack_memory_used@@Base+0x10d38>  // b.any
  452f6c:	cmp	w2, w3
  452f70:	mov	w0, #0x0                   	// #0
  452f74:	b.eq	452f28 <_obstack_memory_used@@Base+0x10d38>  // b.none
  452f78:	mov	w0, #0x1                   	// #1
  452f7c:	cbnz	x4, 452f28 <_obstack_memory_used@@Base+0x10d38>
  452f80:	orr	x1, x1, x10
  452f84:	cmp	x1, #0x0
  452f88:	cset	w0, ne  // ne = any
  452f8c:	b	452f28 <_obstack_memory_used@@Base+0x10d38>
  452f90:	tst	x1, #0x800000000000
  452f94:	b.ne	452fac <_obstack_memory_used@@Base+0x10dbc>  // b.any
  452f98:	mov	w0, #0x1                   	// #1
  452f9c:	bl	453b20 <_obstack_memory_used@@Base+0x11930>
  452fa0:	mov	w0, #0x1                   	// #1
  452fa4:	ldp	x29, x30, [sp], #48
  452fa8:	ret
  452fac:	cmp	x0, x4
  452fb0:	mov	w0, #0x1                   	// #1
  452fb4:	b.ne	452f28 <_obstack_memory_used@@Base+0x10d38>  // b.any
  452fb8:	orr	x8, x9, x7
  452fbc:	cbz	x8, 452f28 <_obstack_memory_used@@Base+0x10d38>
  452fc0:	tst	x9, #0x800000000000
  452fc4:	b.eq	452f98 <_obstack_memory_used@@Base+0x10da8>  // b.none
  452fc8:	b	452f38 <_obstack_memory_used@@Base+0x10d48>
  452fcc:	nop
  452fd0:	stp	x29, x30, [sp, #-48]!
  452fd4:	mov	x29, sp
  452fd8:	str	q0, [sp, #16]
  452fdc:	str	q1, [sp, #32]
  452fe0:	ldp	x8, x1, [sp, #16]
  452fe4:	ldp	x9, x0, [sp, #32]
  452fe8:	mrs	x2, fpcr
  452fec:	ubfx	x4, x1, #48, #15
  452ff0:	ubfx	x10, x1, #0, #48
  452ff4:	lsr	x2, x1, #63
  452ff8:	mov	x5, #0x7fff                	// #32767
  452ffc:	mov	x6, x8
  453000:	cmp	x4, x5
  453004:	ubfx	x11, x0, #0, #48
  453008:	ubfx	x7, x0, #48, #15
  45300c:	lsr	x1, x0, #63
  453010:	mov	x3, x9
  453014:	b.eq	45304c <_obstack_memory_used@@Base+0x10e5c>  // b.none
  453018:	cmp	x7, x5
  45301c:	b.eq	45305c <_obstack_memory_used@@Base+0x10e6c>  // b.none
  453020:	cbnz	x4, 453088 <_obstack_memory_used@@Base+0x10e98>
  453024:	orr	x6, x10, x8
  453028:	cmp	x6, #0x0
  45302c:	cset	w0, eq  // eq = none
  453030:	cbnz	x7, 453074 <_obstack_memory_used@@Base+0x10e84>
  453034:	orr	x3, x11, x9
  453038:	cbnz	x3, 453074 <_obstack_memory_used@@Base+0x10e84>
  45303c:	mov	w0, #0x0                   	// #0
  453040:	cbnz	x6, 45309c <_obstack_memory_used@@Base+0x10eac>
  453044:	ldp	x29, x30, [sp], #48
  453048:	ret
  45304c:	orr	x0, x10, x8
  453050:	cbnz	x0, 4530b0 <_obstack_memory_used@@Base+0x10ec0>
  453054:	cmp	x7, x4
  453058:	b.ne	453088 <_obstack_memory_used@@Base+0x10e98>  // b.any
  45305c:	orr	x3, x11, x3
  453060:	cbnz	x3, 4530b0 <_obstack_memory_used@@Base+0x10ec0>
  453064:	cbnz	x4, 453094 <_obstack_memory_used@@Base+0x10ea4>
  453068:	orr	x6, x10, x6
  45306c:	cmp	x6, #0x0
  453070:	cset	w0, eq  // eq = none
  453074:	cbz	w0, 453094 <_obstack_memory_used@@Base+0x10ea4>
  453078:	cmp	x1, #0x0
  45307c:	csinv	w0, w0, wzr, ne  // ne = any
  453080:	ldp	x29, x30, [sp], #48
  453084:	ret
  453088:	cbnz	x7, 453094 <_obstack_memory_used@@Base+0x10ea4>
  45308c:	orr	x3, x11, x3
  453090:	cbz	x3, 45309c <_obstack_memory_used@@Base+0x10eac>
  453094:	cmp	x2, x1
  453098:	b.eq	4530c4 <_obstack_memory_used@@Base+0x10ed4>  // b.none
  45309c:	cmp	x2, #0x0
  4530a0:	mov	w0, #0xffffffff            	// #-1
  4530a4:	cneg	w0, w0, eq  // eq = none
  4530a8:	ldp	x29, x30, [sp], #48
  4530ac:	ret
  4530b0:	mov	w0, #0x1                   	// #1
  4530b4:	bl	453b20 <_obstack_memory_used@@Base+0x11930>
  4530b8:	mov	w0, #0x2                   	// #2
  4530bc:	ldp	x29, x30, [sp], #48
  4530c0:	ret
  4530c4:	cmp	x4, x7
  4530c8:	b.gt	45309c <_obstack_memory_used@@Base+0x10eac>
  4530cc:	b.lt	453100 <_obstack_memory_used@@Base+0x10f10>  // b.tstop
  4530d0:	cmp	x10, x11
  4530d4:	b.hi	45309c <_obstack_memory_used@@Base+0x10eac>  // b.pmore
  4530d8:	cset	w0, eq  // eq = none
  4530dc:	cmp	w0, #0x0
  4530e0:	ccmp	x8, x9, #0x0, ne  // ne = any
  4530e4:	b.hi	45309c <_obstack_memory_used@@Base+0x10eac>  // b.pmore
  4530e8:	cmp	x10, x11
  4530ec:	b.cc	453100 <_obstack_memory_used@@Base+0x10f10>  // b.lo, b.ul, b.last
  4530f0:	cmp	w0, #0x0
  4530f4:	mov	w0, #0x0                   	// #0
  4530f8:	ccmp	x8, x9, #0x2, ne  // ne = any
  4530fc:	b.cs	453044 <_obstack_memory_used@@Base+0x10e54>  // b.hs, b.nlast
  453100:	cmp	x2, #0x0
  453104:	mov	w0, #0x1                   	// #1
  453108:	cneg	w0, w0, eq  // eq = none
  45310c:	b	453044 <_obstack_memory_used@@Base+0x10e54>
  453110:	stp	x29, x30, [sp, #-80]!
  453114:	mov	x29, sp
  453118:	str	q0, [sp, #48]
  45311c:	str	q1, [sp, #64]
  453120:	ldp	x1, x0, [sp, #48]
  453124:	ldp	x6, x2, [sp, #64]
  453128:	mrs	x11, fpcr
  45312c:	lsr	x3, x0, #63
  453130:	ubfx	x7, x0, #0, #48
  453134:	and	w12, w3, #0xff
  453138:	mov	x14, x3
  45313c:	ubfx	x3, x0, #48, #15
  453140:	cbz	w3, 4534e8 <_obstack_memory_used@@Base+0x112f8>
  453144:	mov	w4, #0x7fff                	// #32767
  453148:	cmp	w3, w4
  45314c:	b.eq	45358c <_obstack_memory_used@@Base+0x1139c>  // b.none
  453150:	and	x3, x3, #0xffff
  453154:	extr	x4, x7, x1, #61
  453158:	mov	x18, #0xffffffffffffc001    	// #-16383
  45315c:	orr	x7, x4, #0x8000000000000
  453160:	add	x3, x3, x18
  453164:	lsl	x5, x1, #3
  453168:	mov	x16, #0x0                   	// #0
  45316c:	mov	x1, #0x0                   	// #0
  453170:	mov	w0, #0x0                   	// #0
  453174:	lsr	x8, x2, #63
  453178:	ubfx	x4, x2, #0, #48
  45317c:	and	w15, w8, #0xff
  453180:	mov	x13, x8
  453184:	ubfx	x9, x2, #48, #15
  453188:	cbz	w9, 453548 <_obstack_memory_used@@Base+0x11358>
  45318c:	mov	w8, #0x7fff                	// #32767
  453190:	cmp	w9, w8
  453194:	b.eq	453218 <_obstack_memory_used@@Base+0x11028>  // b.none
  453198:	and	x9, x9, #0xffff
  45319c:	mov	x17, #0xffffffffffffc001    	// #-16383
  4531a0:	add	x9, x9, x17
  4531a4:	extr	x2, x4, x6, #61
  4531a8:	add	x9, x9, x3
  4531ac:	lsl	x6, x6, #3
  4531b0:	orr	x4, x2, #0x8000000000000
  4531b4:	mov	x2, #0x0                   	// #0
  4531b8:	eor	w8, w12, w15
  4531bc:	cmp	x1, #0xa
  4531c0:	and	w10, w8, #0xff
  4531c4:	add	x3, x9, #0x1
  4531c8:	and	x8, x8, #0xff
  4531cc:	b.le	453250 <_obstack_memory_used@@Base+0x11060>
  4531d0:	cmp	x1, #0xb
  4531d4:	b.eq	4538e8 <_obstack_memory_used@@Base+0x116f8>  // b.none
  4531d8:	mov	w15, w12
  4531dc:	mov	x13, x14
  4531e0:	mov	w10, w15
  4531e4:	cmp	x16, #0x2
  4531e8:	b.eq	4535ac <_obstack_memory_used@@Base+0x113bc>  // b.none
  4531ec:	mov	x4, x7
  4531f0:	mov	x6, x5
  4531f4:	mov	x2, x16
  4531f8:	mov	x8, x13
  4531fc:	cmp	x2, #0x3
  453200:	b.ne	45326c <_obstack_memory_used@@Base+0x1107c>  // b.any
  453204:	orr	x4, x4, #0x800000000000
  453208:	mov	x5, x6
  45320c:	and	x4, x4, #0xffffffffffff
  453210:	mov	w1, #0x7fff                	// #32767
  453214:	b	453280 <_obstack_memory_used@@Base+0x11090>
  453218:	mov	x8, #0x7fff                	// #32767
  45321c:	orr	x2, x4, x6
  453220:	add	x9, x3, x8
  453224:	cbnz	x2, 4532a4 <_obstack_memory_used@@Base+0x110b4>
  453228:	eor	w8, w12, w15
  45322c:	orr	x1, x1, #0x2
  453230:	and	w10, w8, #0xff
  453234:	cmp	x1, #0xa
  453238:	add	x3, x3, #0x8, lsl #12
  45323c:	and	x8, x8, #0xff
  453240:	mov	x6, #0x0                   	// #0
  453244:	b.gt	45385c <_obstack_memory_used@@Base+0x1166c>
  453248:	mov	x4, #0x0                   	// #0
  45324c:	mov	x2, #0x2                   	// #2
  453250:	cmp	x1, #0x2
  453254:	b.gt	4532cc <_obstack_memory_used@@Base+0x110dc>
  453258:	sub	x1, x1, #0x1
  45325c:	cmp	x1, #0x1
  453260:	b.hi	453308 <_obstack_memory_used@@Base+0x11118>  // b.pmore
  453264:	cmp	x2, #0x2
  453268:	b.eq	4535ac <_obstack_memory_used@@Base+0x113bc>  // b.none
  45326c:	cmp	x2, #0x1
  453270:	b.ne	453468 <_obstack_memory_used@@Base+0x11278>  // b.any
  453274:	mov	w1, #0x0                   	// #0
  453278:	mov	x4, #0x0                   	// #0
  45327c:	mov	x5, #0x0                   	// #0
  453280:	mov	x3, #0x0                   	// #0
  453284:	orr	w1, w1, w10, lsl #15
  453288:	bfxil	x3, x4, #0, #48
  45328c:	fmov	d0, x5
  453290:	bfi	x3, x1, #48, #16
  453294:	fmov	v0.d[1], x3
  453298:	cbnz	w0, 4536d8 <_obstack_memory_used@@Base+0x114e8>
  45329c:	ldp	x29, x30, [sp], #80
  4532a0:	ret
  4532a4:	tst	x4, #0x800000000000
  4532a8:	eor	w8, w12, w15
  4532ac:	orr	x1, x1, #0x3
  4532b0:	csinc	w0, w0, wzr, ne  // ne = any
  4532b4:	and	w10, w8, #0xff
  4532b8:	add	x3, x3, #0x8, lsl #12
  4532bc:	cmp	x1, #0xa
  4532c0:	and	x8, x8, #0xff
  4532c4:	mov	x2, #0x3                   	// #3
  4532c8:	b.gt	4538dc <_obstack_memory_used@@Base+0x116ec>
  4532cc:	mov	x12, #0x1                   	// #1
  4532d0:	mov	x14, #0x530                 	// #1328
  4532d4:	lsl	x1, x12, x1
  4532d8:	tst	x1, x14
  4532dc:	b.ne	4534dc <_obstack_memory_used@@Base+0x112ec>  // b.any
  4532e0:	mov	x14, #0x240                 	// #576
  4532e4:	tst	x1, x14
  4532e8:	b.ne	4534c4 <_obstack_memory_used@@Base+0x112d4>  // b.any
  4532ec:	mov	x12, #0x88                  	// #136
  4532f0:	tst	x1, x12
  4532f4:	b.eq	453308 <_obstack_memory_used@@Base+0x11118>  // b.none
  4532f8:	mov	x7, x4
  4532fc:	mov	x5, x6
  453300:	mov	x16, x2
  453304:	b	4531e0 <_obstack_memory_used@@Base+0x10ff0>
  453308:	lsr	x13, x5, #32
  45330c:	and	x12, x6, #0xffffffff
  453310:	and	x15, x5, #0xffffffff
  453314:	lsr	x6, x6, #32
  453318:	and	x18, x4, #0xffffffff
  45331c:	lsr	x2, x4, #32
  453320:	mul	x4, x13, x12
  453324:	stp	x21, x22, [sp, #32]
  453328:	lsr	x22, x7, #32
  45332c:	and	x5, x7, #0xffffffff
  453330:	mul	x16, x12, x15
  453334:	madd	x7, x6, x15, x4
  453338:	stp	x19, x20, [sp, #16]
  45333c:	mul	x1, x13, x18
  453340:	mul	x17, x15, x18
  453344:	and	x30, x16, #0xffffffff
  453348:	madd	x15, x2, x15, x1
  45334c:	add	x16, x7, x16, lsr #32
  453350:	mul	x21, x22, x12
  453354:	cmp	x4, x16
  453358:	mul	x20, x22, x18
  45335c:	mov	x14, #0x100000000           	// #4294967296
  453360:	mul	x19, x13, x6
  453364:	add	x15, x15, x17, lsr #32
  453368:	mul	x12, x12, x5
  45336c:	and	x17, x17, #0xffffffff
  453370:	mul	x18, x5, x18
  453374:	add	x4, x19, x14
  453378:	madd	x7, x6, x5, x21
  45337c:	csel	x19, x4, x19, hi  // hi = pmore
  453380:	madd	x5, x2, x5, x20
  453384:	cmp	x1, x15
  453388:	mul	x13, x13, x2
  45338c:	add	x17, x17, x15, lsl #32
  453390:	mul	x6, x6, x22
  453394:	add	x7, x7, x12, lsr #32
  453398:	add	x5, x5, x18, lsr #32
  45339c:	add	x4, x13, x14
  4533a0:	mul	x2, x2, x22
  4533a4:	csel	x13, x4, x13, hi  // hi = pmore
  4533a8:	and	x1, x18, #0xffffffff
  4533ac:	cmp	x21, x7
  4533b0:	add	x4, x6, x14
  4533b4:	add	x30, x30, x16, lsl #32
  4533b8:	csel	x6, x4, x6, hi  // hi = pmore
  4533bc:	add	x13, x13, x15, lsr #32
  4533c0:	cmp	x20, x5
  4533c4:	add	x1, x1, x5, lsl #32
  4533c8:	add	x16, x17, x16, lsr #32
  4533cc:	add	x14, x2, x14
  4533d0:	csel	x2, x14, x2, hi  // hi = pmore
  4533d4:	add	x16, x19, x16
  4533d8:	adds	x1, x1, x13
  4533dc:	and	x12, x12, #0xffffffff
  4533e0:	cset	x13, cs  // cs = hs, nlast
  4533e4:	cmp	x16, x17
  4533e8:	cset	x4, cc  // cc = lo, ul, last
  4533ec:	add	x12, x12, x7, lsl #32
  4533f0:	adds	x1, x1, x4
  4533f4:	lsr	x5, x5, #32
  4533f8:	cset	x4, cs  // cs = hs, nlast
  4533fc:	cmp	x13, #0x0
  453400:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  453404:	add	x7, x6, x7, lsr #32
  453408:	cinc	x5, x5, ne  // ne = any
  45340c:	adds	x6, x16, x12
  453410:	cset	x4, cs  // cs = hs, nlast
  453414:	adds	x1, x1, x7
  453418:	cset	x7, cs  // cs = hs, nlast
  45341c:	adds	x4, x1, x4
  453420:	cset	x1, cs  // cs = hs, nlast
  453424:	cmp	x7, #0x0
  453428:	orr	x30, x30, x6, lsl #13
  45342c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  453430:	cinc	x1, x2, ne  // ne = any
  453434:	cmp	x30, #0x0
  453438:	add	x1, x1, x5
  45343c:	cset	x2, ne  // ne = any
  453440:	orr	x6, x2, x6, lsr #51
  453444:	orr	x6, x6, x4, lsl #13
  453448:	extr	x4, x1, x4, #51
  45344c:	tbz	x1, #39, 453760 <_obstack_memory_used@@Base+0x11570>
  453450:	ldp	x19, x20, [sp, #16]
  453454:	and	x1, x6, #0x1
  453458:	ldp	x21, x22, [sp, #32]
  45345c:	orr	x6, x1, x6, lsr #1
  453460:	orr	x6, x6, x4, lsl #63
  453464:	lsr	x4, x4, #1
  453468:	mov	x1, #0x3fff                	// #16383
  45346c:	add	x2, x3, x1
  453470:	cmp	x2, #0x0
  453474:	b.le	45360c <_obstack_memory_used@@Base+0x1141c>
  453478:	tst	x6, #0x7
  45347c:	b.eq	45349c <_obstack_memory_used@@Base+0x112ac>  // b.none
  453480:	and	x1, x11, #0xc00000
  453484:	orr	w0, w0, #0x10
  453488:	cmp	x1, #0x400, lsl #12
  45348c:	b.eq	453854 <_obstack_memory_used@@Base+0x11664>  // b.none
  453490:	cmp	x1, #0x800, lsl #12
  453494:	b.eq	4537fc <_obstack_memory_used@@Base+0x1160c>  // b.none
  453498:	cbz	x1, 4537e4 <_obstack_memory_used@@Base+0x115f4>
  45349c:	tbz	x4, #52, 4534a8 <_obstack_memory_used@@Base+0x112b8>
  4534a0:	and	x4, x4, #0xffefffffffffffff
  4534a4:	add	x2, x3, #0x4, lsl #12
  4534a8:	mov	x1, #0x7ffe                	// #32766
  4534ac:	cmp	x2, x1
  4534b0:	b.gt	453734 <_obstack_memory_used@@Base+0x11544>
  4534b4:	and	w1, w2, #0x7fff
  4534b8:	extr	x5, x4, x6, #3
  4534bc:	ubfx	x4, x4, #3, #48
  4534c0:	b	453280 <_obstack_memory_used@@Base+0x11090>
  4534c4:	mov	w0, w12
  4534c8:	mov	w10, #0x0                   	// #0
  4534cc:	mov	x4, #0xffffffffffff        	// #281474976710655
  4534d0:	mov	x5, #0xffffffffffffffff    	// #-1
  4534d4:	mov	w1, #0x7fff                	// #32767
  4534d8:	b	453280 <_obstack_memory_used@@Base+0x11090>
  4534dc:	mov	w15, w10
  4534e0:	mov	x13, x8
  4534e4:	b	4531e0 <_obstack_memory_used@@Base+0x10ff0>
  4534e8:	orr	x5, x7, x1
  4534ec:	cbz	x5, 4535f4 <_obstack_memory_used@@Base+0x11404>
  4534f0:	cbz	x7, 453710 <_obstack_memory_used@@Base+0x11520>
  4534f4:	clz	x0, x7
  4534f8:	sub	x4, x0, #0xf
  4534fc:	add	w5, w4, #0x3
  453500:	mov	w3, #0x3d                  	// #61
  453504:	sub	w3, w3, w4
  453508:	lsl	x4, x7, x5
  45350c:	lsr	x3, x1, x3
  453510:	orr	x7, x3, x4
  453514:	lsl	x5, x1, x5
  453518:	lsr	x8, x2, #63
  45351c:	mov	x3, #0xffffffffffffc011    	// #-16367
  453520:	ubfx	x4, x2, #0, #48
  453524:	sub	x3, x3, x0
  453528:	and	w15, w8, #0xff
  45352c:	mov	x13, x8
  453530:	ubfx	x9, x2, #48, #15
  453534:	mov	x1, #0x0                   	// #0
  453538:	mov	x16, #0x0                   	// #0
  45353c:	mov	w0, #0x0                   	// #0
  453540:	cbnz	w9, 45318c <_obstack_memory_used@@Base+0x10f9c>
  453544:	nop
  453548:	orr	x2, x4, x6
  45354c:	cbz	x2, 4535bc <_obstack_memory_used@@Base+0x113cc>
  453550:	cbz	x4, 4536ec <_obstack_memory_used@@Base+0x114fc>
  453554:	clz	x9, x4
  453558:	sub	x2, x9, #0xf
  45355c:	add	w10, w2, #0x3
  453560:	mov	w8, #0x3d                  	// #61
  453564:	sub	w8, w8, w2
  453568:	lsl	x2, x4, x10
  45356c:	lsr	x8, x6, x8
  453570:	orr	x4, x8, x2
  453574:	lsl	x6, x6, x10
  453578:	sub	x9, x3, x9
  45357c:	mov	x10, #0xffffffffffffc011    	// #-16367
  453580:	mov	x2, #0x0                   	// #0
  453584:	add	x9, x9, x10
  453588:	b	4531b8 <_obstack_memory_used@@Base+0x10fc8>
  45358c:	orr	x5, x7, x1
  453590:	cbnz	x5, 4535d4 <_obstack_memory_used@@Base+0x113e4>
  453594:	mov	x7, #0x0                   	// #0
  453598:	mov	x1, #0x8                   	// #8
  45359c:	mov	x3, #0x7fff                	// #32767
  4535a0:	mov	x16, #0x2                   	// #2
  4535a4:	mov	w0, #0x0                   	// #0
  4535a8:	b	453174 <_obstack_memory_used@@Base+0x10f84>
  4535ac:	mov	w1, #0x7fff                	// #32767
  4535b0:	mov	x4, #0x0                   	// #0
  4535b4:	mov	x5, #0x0                   	// #0
  4535b8:	b	453280 <_obstack_memory_used@@Base+0x11090>
  4535bc:	orr	x1, x1, #0x1
  4535c0:	mov	x9, x3
  4535c4:	mov	x4, #0x0                   	// #0
  4535c8:	mov	x6, #0x0                   	// #0
  4535cc:	mov	x2, #0x1                   	// #1
  4535d0:	b	4531b8 <_obstack_memory_used@@Base+0x10fc8>
  4535d4:	lsr	x0, x7, #47
  4535d8:	mov	x5, x1
  4535dc:	eor	x0, x0, #0x1
  4535e0:	mov	x1, #0xc                   	// #12
  4535e4:	and	w0, w0, #0x1
  4535e8:	mov	x3, #0x7fff                	// #32767
  4535ec:	mov	x16, #0x3                   	// #3
  4535f0:	b	453174 <_obstack_memory_used@@Base+0x10f84>
  4535f4:	mov	x7, #0x0                   	// #0
  4535f8:	mov	x1, #0x4                   	// #4
  4535fc:	mov	x3, #0x0                   	// #0
  453600:	mov	x16, #0x1                   	// #1
  453604:	mov	w0, #0x0                   	// #0
  453608:	b	453174 <_obstack_memory_used@@Base+0x10f84>
  45360c:	mov	x1, #0x1                   	// #1
  453610:	sub	x2, x1, x2
  453614:	cmp	x2, #0x74
  453618:	b.gt	453690 <_obstack_memory_used@@Base+0x114a0>
  45361c:	cmp	x2, #0x3f
  453620:	b.le	453770 <_obstack_memory_used@@Base+0x11580>
  453624:	mov	w1, #0x80                  	// #128
  453628:	sub	w1, w1, w2
  45362c:	cmp	x2, #0x40
  453630:	sub	w2, w2, #0x40
  453634:	lsl	x1, x4, x1
  453638:	orr	x1, x6, x1
  45363c:	csel	x6, x1, x6, ne  // ne = any
  453640:	lsr	x2, x4, x2
  453644:	cmp	x6, #0x0
  453648:	cset	x5, ne  // ne = any
  45364c:	orr	x5, x5, x2
  453650:	ands	x2, x5, #0x7
  453654:	b.eq	4537a4 <_obstack_memory_used@@Base+0x115b4>  // b.none
  453658:	mov	x2, #0x0                   	// #0
  45365c:	and	x11, x11, #0xc00000
  453660:	orr	w0, w0, #0x10
  453664:	cmp	x11, #0x400, lsl #12
  453668:	b.eq	4538b4 <_obstack_memory_used@@Base+0x116c4>  // b.none
  45366c:	cmp	x11, #0x800, lsl #12
  453670:	b.eq	4538c8 <_obstack_memory_used@@Base+0x116d8>  // b.none
  453674:	cbz	x11, 45380c <_obstack_memory_used@@Base+0x1161c>
  453678:	tbnz	x2, #51, 453824 <_obstack_memory_used@@Base+0x11634>
  45367c:	ubfx	x4, x2, #3, #48
  453680:	extr	x5, x2, x5, #3
  453684:	orr	w0, w0, #0x8
  453688:	mov	w1, #0x0                   	// #0
  45368c:	b	4536c0 <_obstack_memory_used@@Base+0x114d0>
  453690:	orr	x5, x6, x4
  453694:	cbz	x5, 4536b4 <_obstack_memory_used@@Base+0x114c4>
  453698:	and	x11, x11, #0xc00000
  45369c:	orr	w0, w0, #0x10
  4536a0:	cmp	x11, #0x400, lsl #12
  4536a4:	sub	x5, x1, x8
  4536a8:	b.eq	4536b4 <_obstack_memory_used@@Base+0x114c4>  // b.none
  4536ac:	cmp	x11, #0x800, lsl #12
  4536b0:	csel	x5, x8, xzr, eq  // eq = none
  4536b4:	orr	w0, w0, #0x8
  4536b8:	mov	w1, #0x0                   	// #0
  4536bc:	mov	x4, #0x0                   	// #0
  4536c0:	mov	x3, #0x0                   	// #0
  4536c4:	fmov	d0, x5
  4536c8:	bfxil	x3, x4, #0, #48
  4536cc:	bfi	x3, x1, #48, #15
  4536d0:	bfi	x3, x10, #63, #1
  4536d4:	fmov	v0.d[1], x3
  4536d8:	str	q0, [sp, #48]
  4536dc:	bl	453b20 <_obstack_memory_used@@Base+0x11930>
  4536e0:	ldr	q0, [sp, #48]
  4536e4:	ldp	x29, x30, [sp], #80
  4536e8:	ret
  4536ec:	clz	x9, x6
  4536f0:	add	x2, x9, #0x31
  4536f4:	add	x9, x9, #0x40
  4536f8:	cmp	x2, #0x3c
  4536fc:	b.le	45355c <_obstack_memory_used@@Base+0x1136c>
  453700:	sub	w2, w2, #0x3d
  453704:	lsl	x4, x6, x2
  453708:	mov	x6, #0x0                   	// #0
  45370c:	b	453578 <_obstack_memory_used@@Base+0x11388>
  453710:	clz	x3, x1
  453714:	add	x4, x3, #0x31
  453718:	add	x0, x3, #0x40
  45371c:	cmp	x4, #0x3c
  453720:	b.le	4534fc <_obstack_memory_used@@Base+0x1130c>
  453724:	sub	w4, w4, #0x3d
  453728:	mov	x5, #0x0                   	// #0
  45372c:	lsl	x7, x1, x4
  453730:	b	453518 <_obstack_memory_used@@Base+0x11328>
  453734:	and	x5, x11, #0xc00000
  453738:	cmp	x5, #0x400, lsl #12
  45373c:	b.eq	453838 <_obstack_memory_used@@Base+0x11648>  // b.none
  453740:	cmp	x5, #0x800, lsl #12
  453744:	b.eq	4537c8 <_obstack_memory_used@@Base+0x115d8>  // b.none
  453748:	cbz	x5, 4537bc <_obstack_memory_used@@Base+0x115cc>
  45374c:	mov	x4, #0xffffffffffff        	// #281474976710655
  453750:	mov	x5, #0xffffffffffffffff    	// #-1
  453754:	mov	w2, #0x14                  	// #20
  453758:	orr	w0, w0, w2
  45375c:	b	4536c0 <_obstack_memory_used@@Base+0x114d0>
  453760:	mov	x3, x9
  453764:	ldp	x19, x20, [sp, #16]
  453768:	ldp	x21, x22, [sp, #32]
  45376c:	b	453468 <_obstack_memory_used@@Base+0x11278>
  453770:	mov	w1, #0x40                  	// #64
  453774:	sub	w1, w1, w2
  453778:	lsr	x3, x6, x2
  45377c:	lsl	x6, x6, x1
  453780:	cmp	x6, #0x0
  453784:	lsl	x5, x4, x1
  453788:	cset	x1, ne  // ne = any
  45378c:	orr	x5, x5, x3
  453790:	lsr	x2, x4, x2
  453794:	orr	x5, x5, x1
  453798:	tst	x5, #0x7
  45379c:	b.ne	45365c <_obstack_memory_used@@Base+0x1146c>  // b.any
  4537a0:	tbnz	x2, #51, 4538d4 <_obstack_memory_used@@Base+0x116e4>
  4537a4:	ubfx	x4, x2, #3, #48
  4537a8:	extr	x5, x2, x5, #3
  4537ac:	mov	w1, #0x0                   	// #0
  4537b0:	tbz	w11, #11, 453280 <_obstack_memory_used@@Base+0x11090>
  4537b4:	orr	w0, w0, #0x8
  4537b8:	b	4536c0 <_obstack_memory_used@@Base+0x114d0>
  4537bc:	mov	w1, #0x7fff                	// #32767
  4537c0:	mov	x4, #0x0                   	// #0
  4537c4:	b	453754 <_obstack_memory_used@@Base+0x11564>
  4537c8:	cmp	x8, #0x0
  4537cc:	mov	w2, #0x7fff                	// #32767
  4537d0:	mov	x4, #0xffffffffffff        	// #281474976710655
  4537d4:	csel	w1, w1, w2, eq  // eq = none
  4537d8:	csel	x4, x4, xzr, eq  // eq = none
  4537dc:	csetm	x5, eq  // eq = none
  4537e0:	b	453754 <_obstack_memory_used@@Base+0x11564>
  4537e4:	and	x1, x6, #0xf
  4537e8:	cmp	x1, #0x4
  4537ec:	b.eq	45349c <_obstack_memory_used@@Base+0x112ac>  // b.none
  4537f0:	adds	x6, x6, #0x4
  4537f4:	cinc	x4, x4, cs  // cs = hs, nlast
  4537f8:	b	45349c <_obstack_memory_used@@Base+0x112ac>
  4537fc:	cbz	x8, 45349c <_obstack_memory_used@@Base+0x112ac>
  453800:	adds	x6, x6, #0x8
  453804:	cinc	x4, x4, cs  // cs = hs, nlast
  453808:	b	45349c <_obstack_memory_used@@Base+0x112ac>
  45380c:	and	x1, x5, #0xf
  453810:	cmp	x1, #0x4
  453814:	b.eq	453820 <_obstack_memory_used@@Base+0x11630>  // b.none
  453818:	adds	x5, x5, #0x4
  45381c:	cinc	x2, x2, cs  // cs = hs, nlast
  453820:	tbz	x2, #51, 45367c <_obstack_memory_used@@Base+0x1148c>
  453824:	orr	w0, w0, #0x8
  453828:	mov	w1, #0x1                   	// #1
  45382c:	mov	x4, #0x0                   	// #0
  453830:	mov	x5, #0x0                   	// #0
  453834:	b	4536c0 <_obstack_memory_used@@Base+0x114d0>
  453838:	cmp	x8, #0x0
  45383c:	mov	w2, #0x7fff                	// #32767
  453840:	mov	x4, #0xffffffffffff        	// #281474976710655
  453844:	csel	w1, w1, w2, ne  // ne = any
  453848:	csel	x4, x4, xzr, ne  // ne = any
  45384c:	csetm	x5, ne  // ne = any
  453850:	b	453754 <_obstack_memory_used@@Base+0x11564>
  453854:	cbnz	x8, 45349c <_obstack_memory_used@@Base+0x112ac>
  453858:	b	453800 <_obstack_memory_used@@Base+0x11610>
  45385c:	mov	x4, #0x2                   	// #2
  453860:	cmp	x1, #0xf
  453864:	b.ne	453888 <_obstack_memory_used@@Base+0x11698>  // b.any
  453868:	tbz	x7, #47, 4538a0 <_obstack_memory_used@@Base+0x116b0>
  45386c:	tbnz	x2, #47, 4538a0 <_obstack_memory_used@@Base+0x116b0>
  453870:	orr	x4, x2, #0x800000000000
  453874:	mov	w10, w15
  453878:	and	x4, x4, #0xffffffffffff
  45387c:	mov	x5, x6
  453880:	mov	w1, #0x7fff                	// #32767
  453884:	b	453280 <_obstack_memory_used@@Base+0x11090>
  453888:	cmp	x1, #0xb
  45388c:	b.ne	4531d8 <_obstack_memory_used@@Base+0x10fe8>  // b.any
  453890:	mov	x7, x2
  453894:	mov	x5, x6
  453898:	mov	x16, x4
  45389c:	b	4531e0 <_obstack_memory_used@@Base+0x10ff0>
  4538a0:	orr	x4, x7, #0x800000000000
  4538a4:	mov	w10, w12
  4538a8:	and	x4, x4, #0xffffffffffff
  4538ac:	mov	w1, #0x7fff                	// #32767
  4538b0:	b	453280 <_obstack_memory_used@@Base+0x11090>
  4538b4:	cbnz	x8, 453820 <_obstack_memory_used@@Base+0x11630>
  4538b8:	adds	x5, x5, #0x8
  4538bc:	cinc	x2, x2, cs  // cs = hs, nlast
  4538c0:	tbnz	x2, #51, 453824 <_obstack_memory_used@@Base+0x11634>
  4538c4:	b	45367c <_obstack_memory_used@@Base+0x1148c>
  4538c8:	cbnz	x8, 4538b8 <_obstack_memory_used@@Base+0x116c8>
  4538cc:	tbnz	x2, #51, 453824 <_obstack_memory_used@@Base+0x11634>
  4538d0:	b	45367c <_obstack_memory_used@@Base+0x1148c>
  4538d4:	orr	w0, w0, #0x10
  4538d8:	b	453824 <_obstack_memory_used@@Base+0x11634>
  4538dc:	mov	x2, x4
  4538e0:	mov	x4, #0x3                   	// #3
  4538e4:	b	453860 <_obstack_memory_used@@Base+0x11670>
  4538e8:	mov	w10, w15
  4538ec:	mov	x8, x13
  4538f0:	b	4531fc <_obstack_memory_used@@Base+0x1100c>
  4538f4:	nop
  4538f8:	cbz	w0, 45393c <_obstack_memory_used@@Base+0x1174c>
  4538fc:	mov	w0, w0
  453900:	mov	w1, #0x403e                	// #16446
  453904:	clz	x3, x0
  453908:	mov	w2, #0x402f                	// #16431
  45390c:	sub	w1, w1, w3
  453910:	mov	x3, #0x0                   	// #0
  453914:	sub	w2, w2, w1
  453918:	and	w1, w1, #0x7fff
  45391c:	lsl	x0, x0, x2
  453920:	and	x0, x0, #0xffffffffffff
  453924:	mov	x2, #0x0                   	// #0
  453928:	fmov	d0, x2
  45392c:	bfxil	x3, x0, #0, #48
  453930:	bfi	x3, x1, #48, #16
  453934:	fmov	v0.d[1], x3
  453938:	ret
  45393c:	mov	x0, #0x0                   	// #0
  453940:	mov	x3, #0x0                   	// #0
  453944:	bfxil	x3, x0, #0, #48
  453948:	mov	x2, #0x0                   	// #0
  45394c:	fmov	d0, x2
  453950:	mov	w1, #0x0                   	// #0
  453954:	bfi	x3, x1, #48, #16
  453958:	fmov	v0.d[1], x3
  45395c:	ret
  453960:	stp	x29, x30, [sp, #-48]!
  453964:	mov	x29, sp
  453968:	str	x19, [sp, #16]
  45396c:	str	q0, [sp, #32]
  453970:	ldr	x19, [sp, #32]
  453974:	ldr	x1, [sp, #40]
  453978:	mrs	x0, fpcr
  45397c:	ubfx	x3, x1, #48, #15
  453980:	mov	x2, x19
  453984:	mov	x4, #0x3ffe                	// #16382
  453988:	ubfx	x19, x1, #0, #48
  45398c:	cmp	x3, x4
  453990:	b.gt	4539bc <_obstack_memory_used@@Base+0x117cc>
  453994:	cbnz	x3, 4539a0 <_obstack_memory_used@@Base+0x117b0>
  453998:	orr	x19, x2, x19
  45399c:	cbz	x19, 4539ac <_obstack_memory_used@@Base+0x117bc>
  4539a0:	mov	w0, #0x10                  	// #16
  4539a4:	mov	x19, #0x0                   	// #0
  4539a8:	bl	453b20 <_obstack_memory_used@@Base+0x11930>
  4539ac:	mov	x0, x19
  4539b0:	ldr	x19, [sp, #16]
  4539b4:	ldp	x29, x30, [sp], #48
  4539b8:	ret
  4539bc:	lsr	x0, x1, #63
  4539c0:	mov	x4, #0x403f                	// #16447
  4539c4:	and	w0, w0, #0xff
  4539c8:	and	x5, x0, #0xff
  4539cc:	sub	x4, x4, x5
  4539d0:	cmp	x4, x3
  4539d4:	b.le	453a28 <_obstack_memory_used@@Base+0x11838>
  4539d8:	cbnz	x5, 453a3c <_obstack_memory_used@@Base+0x1184c>
  4539dc:	mov	x1, x3
  4539e0:	mov	x0, #0x406f                	// #16495
  4539e4:	sub	x3, x0, x3
  4539e8:	orr	x4, x19, #0x1000000000000
  4539ec:	cmp	x3, #0x3f
  4539f0:	b.gt	453a4c <_obstack_memory_used@@Base+0x1185c>
  4539f4:	mov	w3, #0xffffbfd1            	// #-16431
  4539f8:	add	w3, w1, w3
  4539fc:	sub	w1, w0, w1
  453a00:	lsl	x0, x2, x3
  453a04:	cmp	x0, #0x0
  453a08:	lsr	x19, x2, x1
  453a0c:	cset	w0, ne  // ne = any
  453a10:	lsl	x4, x4, x3
  453a14:	orr	x19, x19, x4
  453a18:	cbz	w0, 4539ac <_obstack_memory_used@@Base+0x117bc>
  453a1c:	mov	w0, #0x10                  	// #16
  453a20:	bl	453b20 <_obstack_memory_used@@Base+0x11930>
  453a24:	b	4539ac <_obstack_memory_used@@Base+0x117bc>
  453a28:	eor	w19, w0, #0x1
  453a2c:	mov	w0, #0x1                   	// #1
  453a30:	sbfx	x19, x19, #0, #1
  453a34:	bl	453b20 <_obstack_memory_used@@Base+0x11930>
  453a38:	b	4539ac <_obstack_memory_used@@Base+0x117bc>
  453a3c:	mov	w0, #0x1                   	// #1
  453a40:	mov	x19, #0x0                   	// #0
  453a44:	bl	453b20 <_obstack_memory_used@@Base+0x11930>
  453a48:	b	4539ac <_obstack_memory_used@@Base+0x117bc>
  453a4c:	mov	w0, #0xffffc011            	// #-16367
  453a50:	add	w5, w1, w0
  453a54:	mov	w0, #0x402f                	// #16431
  453a58:	cmp	x3, #0x40
  453a5c:	sub	w1, w0, w1
  453a60:	lsl	x0, x4, x5
  453a64:	orr	x0, x2, x0
  453a68:	csel	x2, x0, x2, ne  // ne = any
  453a6c:	lsr	x19, x4, x1
  453a70:	cmp	x2, #0x0
  453a74:	cset	w0, ne  // ne = any
  453a78:	b	453a18 <_obstack_memory_used@@Base+0x11828>
  453a7c:	nop
  453a80:	cbz	x0, 453ad4 <_obstack_memory_used@@Base+0x118e4>
  453a84:	clz	x2, x0
  453a88:	mov	w1, #0x403e                	// #16446
  453a8c:	sub	w1, w1, w2
  453a90:	mov	x2, #0x406f                	// #16495
  453a94:	and	w4, w1, #0x7fff
  453a98:	sub	x3, x2, w1, sxtw
  453a9c:	cmp	x3, #0x3f
  453aa0:	b.gt	453af4 <_obstack_memory_used@@Base+0x11904>
  453aa4:	sub	w2, w2, w1
  453aa8:	mov	w3, #0xffffbfd1            	// #-16431
  453aac:	add	w1, w1, w3
  453ab0:	mov	x3, #0x0                   	// #0
  453ab4:	lsr	x1, x0, x1
  453ab8:	and	x1, x1, #0xffffffffffff
  453abc:	lsl	x0, x0, x2
  453ac0:	fmov	d0, x0
  453ac4:	bfxil	x3, x1, #0, #48
  453ac8:	bfi	x3, x4, #48, #16
  453acc:	fmov	v0.d[1], x3
  453ad0:	ret
  453ad4:	mov	x1, #0x0                   	// #0
  453ad8:	mov	x3, #0x0                   	// #0
  453adc:	bfxil	x3, x1, #0, #48
  453ae0:	fmov	d0, x0
  453ae4:	mov	w4, #0x0                   	// #0
  453ae8:	bfi	x3, x4, #48, #16
  453aec:	fmov	v0.d[1], x3
  453af0:	ret
  453af4:	mov	w2, #0x402f                	// #16431
  453af8:	sub	w1, w2, w1
  453afc:	mov	x3, #0x0                   	// #0
  453b00:	lsl	x1, x0, x1
  453b04:	and	x1, x1, #0xffffffffffff
  453b08:	mov	x0, #0x0                   	// #0
  453b0c:	fmov	d0, x0
  453b10:	bfxil	x3, x1, #0, #48
  453b14:	bfi	x3, x4, #48, #16
  453b18:	fmov	v0.d[1], x3
  453b1c:	ret
  453b20:	tbz	w0, #0, 453b30 <_obstack_memory_used@@Base+0x11940>
  453b24:	movi	v1.2s, #0x0
  453b28:	fdiv	s0, s1, s1
  453b2c:	mrs	x1, fpsr
  453b30:	tbz	w0, #1, 453b44 <_obstack_memory_used@@Base+0x11954>
  453b34:	fmov	s1, #1.000000000000000000e+00
  453b38:	movi	v2.2s, #0x0
  453b3c:	fdiv	s0, s1, s2
  453b40:	mrs	x1, fpsr
  453b44:	tbz	w0, #2, 453b64 <_obstack_memory_used@@Base+0x11974>
  453b48:	mov	w2, #0xc5ae                	// #50606
  453b4c:	mov	w1, #0x7f7fffff            	// #2139095039
  453b50:	movk	w2, #0x749d, lsl #16
  453b54:	fmov	s1, w1
  453b58:	fmov	s2, w2
  453b5c:	fadd	s0, s1, s2
  453b60:	mrs	x1, fpsr
  453b64:	tbz	w0, #3, 453b74 <_obstack_memory_used@@Base+0x11984>
  453b68:	movi	v1.2s, #0x80, lsl #16
  453b6c:	fmul	s0, s1, s1
  453b70:	mrs	x1, fpsr
  453b74:	tbz	w0, #4, 453b8c <_obstack_memory_used@@Base+0x1199c>
  453b78:	mov	w0, #0x7f7fffff            	// #2139095039
  453b7c:	fmov	s2, #1.000000000000000000e+00
  453b80:	fmov	s1, w0
  453b84:	fsub	s0, s1, s2
  453b88:	mrs	x0, fpsr
  453b8c:	ret
  453b90:	stp	x29, x30, [sp, #-64]!
  453b94:	mov	x29, sp
  453b98:	stp	x19, x20, [sp, #16]
  453b9c:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x3be10>
  453ba0:	add	x20, x20, #0xde0
  453ba4:	stp	x21, x22, [sp, #32]
  453ba8:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x3be10>
  453bac:	add	x21, x21, #0xdd8
  453bb0:	sub	x20, x20, x21
  453bb4:	mov	w22, w0
  453bb8:	stp	x23, x24, [sp, #48]
  453bbc:	mov	x23, x1
  453bc0:	mov	x24, x2
  453bc4:	bl	403f28 <mbrtowc@plt-0x38>
  453bc8:	cmp	xzr, x20, asr #3
  453bcc:	b.eq	453bf8 <_obstack_memory_used@@Base+0x11a08>  // b.none
  453bd0:	asr	x20, x20, #3
  453bd4:	mov	x19, #0x0                   	// #0
  453bd8:	ldr	x3, [x21, x19, lsl #3]
  453bdc:	mov	x2, x24
  453be0:	add	x19, x19, #0x1
  453be4:	mov	x1, x23
  453be8:	mov	w0, w22
  453bec:	blr	x3
  453bf0:	cmp	x20, x19
  453bf4:	b.ne	453bd8 <_obstack_memory_used@@Base+0x119e8>  // b.any
  453bf8:	ldp	x19, x20, [sp, #16]
  453bfc:	ldp	x21, x22, [sp, #32]
  453c00:	ldp	x23, x24, [sp, #48]
  453c04:	ldp	x29, x30, [sp], #64
  453c08:	ret
  453c0c:	nop
  453c10:	ret

Disassembly of section .fini:

0000000000453c14 <.fini>:
  453c14:	stp	x29, x30, [sp, #-16]!
  453c18:	mov	x29, sp
  453c1c:	ldp	x29, x30, [sp], #16
  453c20:	ret
