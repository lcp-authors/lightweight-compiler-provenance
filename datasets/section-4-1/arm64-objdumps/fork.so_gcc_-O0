
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fork.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000008b0 <.init>:
 8b0:	stp	x29, x30, [sp, #-16]!
 8b4:	mov	x29, sp
 8b8:	bl	9e0 <fprintf@plt+0x10>
 8bc:	ldp	x29, x30, [sp], #16
 8c0:	ret

Disassembly of section .plt:

00000000000008d0 <memcpy@plt-0x20>:
 8d0:	stp	x16, x30, [sp, #-16]!
 8d4:	adrp	x16, 11000 <dl_load@@Base+0xffac>
 8d8:	ldr	x17, [x16, #4088]
 8dc:	add	x16, x16, #0xff8
 8e0:	br	x17
 8e4:	nop
 8e8:	nop
 8ec:	nop

00000000000008f0 <memcpy@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16]
 8f8:	add	x16, x16, #0x0
 8fc:	br	x17

0000000000000900 <strlen@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #8]
 908:	add	x16, x16, #0x8
 90c:	br	x17

0000000000000910 <exit@plt>:
 910:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 914:	ldr	x17, [x16, #16]
 918:	add	x16, x16, #0x10
 91c:	br	x17

0000000000000920 <__cxa_finalize@plt>:
 920:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 924:	ldr	x17, [x16, #24]
 928:	add	x16, x16, #0x18
 92c:	br	x17

0000000000000930 <fork@plt>:
 930:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 934:	ldr	x17, [x16, #32]
 938:	add	x16, x16, #0x20
 93c:	br	x17

0000000000000940 <getpid@plt>:
 940:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 944:	ldr	x17, [x16, #40]
 948:	add	x16, x16, #0x28
 94c:	br	x17

0000000000000950 <getppid@plt>:
 950:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 954:	ldr	x17, [x16, #48]
 958:	add	x16, x16, #0x30
 95c:	br	x17

0000000000000960 <memset@plt>:
 960:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 964:	ldr	x17, [x16, #56]
 968:	add	x16, x16, #0x38
 96c:	br	x17

0000000000000970 <__gmon_start__@plt>:
 970:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 974:	ldr	x17, [x16, #64]
 978:	add	x16, x16, #0x40
 97c:	br	x17

0000000000000980 <fwrite@plt>:
 980:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 984:	ldr	x17, [x16, #72]
 988:	add	x16, x16, #0x48
 98c:	br	x17

0000000000000990 <wait@plt>:
 990:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 994:	ldr	x17, [x16, #80]
 998:	add	x16, x16, #0x50
 99c:	br	x17

00000000000009a0 <__errno_location@plt>:
 9a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 9a4:	ldr	x17, [x16, #88]
 9a8:	add	x16, x16, #0x58
 9ac:	br	x17

00000000000009b0 <waitpid@plt>:
 9b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 9b4:	ldr	x17, [x16, #96]
 9b8:	add	x16, x16, #0x60
 9bc:	br	x17

00000000000009c0 <gettext@plt>:
 9c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 9c4:	ldr	x17, [x16, #104]
 9c8:	add	x16, x16, #0x68
 9cc:	br	x17

00000000000009d0 <fprintf@plt>:
 9d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 9d4:	ldr	x17, [x16, #112]
 9d8:	add	x16, x16, #0x70
 9dc:	br	x17

Disassembly of section .text:

00000000000009e0 <dl_load@@Base-0x674>:
     9e0:	adrp	x0, 11000 <dl_load@@Base+0xffac>
     9e4:	ldr	x0, [x0, #4056]
     9e8:	cbz	x0, 9f0 <fprintf@plt+0x20>
     9ec:	b	970 <__gmon_start__@plt>
     9f0:	ret
     9f4:	stp	x29, x30, [sp, #-32]!
     9f8:	mov	x29, sp
     9fc:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     a00:	add	x0, x0, #0x118
     a04:	str	x0, [sp, #24]
     a08:	ldr	x0, [sp, #24]
     a0c:	str	x0, [sp, #24]
     a10:	ldr	x1, [sp, #24]
     a14:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     a18:	add	x0, x0, #0x118
     a1c:	cmp	x1, x0
     a20:	b.eq	a58 <fprintf@plt+0x88>  // b.none
     a24:	adrp	x0, 11000 <dl_load@@Base+0xffac>
     a28:	ldr	x0, [x0, #4032]
     a2c:	str	x0, [sp, #16]
     a30:	ldr	x0, [sp, #16]
     a34:	str	x0, [sp, #16]
     a38:	ldr	x0, [sp, #16]
     a3c:	cmp	x0, #0x0
     a40:	b.eq	a5c <fprintf@plt+0x8c>  // b.none
     a44:	ldr	x1, [sp, #16]
     a48:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     a4c:	add	x0, x0, #0x118
     a50:	blr	x1
     a54:	b	a5c <fprintf@plt+0x8c>
     a58:	nop
     a5c:	ldp	x29, x30, [sp], #32
     a60:	ret
     a64:	stp	x29, x30, [sp, #-48]!
     a68:	mov	x29, sp
     a6c:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     a70:	add	x0, x0, #0x118
     a74:	str	x0, [sp, #40]
     a78:	ldr	x0, [sp, #40]
     a7c:	str	x0, [sp, #40]
     a80:	ldr	x1, [sp, #40]
     a84:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     a88:	add	x0, x0, #0x118
     a8c:	sub	x0, x1, x0
     a90:	asr	x0, x0, #3
     a94:	lsr	x1, x0, #63
     a98:	add	x0, x1, x0
     a9c:	asr	x0, x0, #1
     aa0:	str	x0, [sp, #32]
     aa4:	ldr	x0, [sp, #32]
     aa8:	cmp	x0, #0x0
     aac:	b.eq	ae8 <fprintf@plt+0x118>  // b.none
     ab0:	adrp	x0, 11000 <dl_load@@Base+0xffac>
     ab4:	ldr	x0, [x0, #4064]
     ab8:	str	x0, [sp, #24]
     abc:	ldr	x0, [sp, #24]
     ac0:	str	x0, [sp, #24]
     ac4:	ldr	x0, [sp, #24]
     ac8:	cmp	x0, #0x0
     acc:	b.eq	aec <fprintf@plt+0x11c>  // b.none
     ad0:	ldr	x2, [sp, #24]
     ad4:	ldr	x1, [sp, #32]
     ad8:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     adc:	add	x0, x0, #0x118
     ae0:	blr	x2
     ae4:	b	aec <fprintf@plt+0x11c>
     ae8:	nop
     aec:	ldp	x29, x30, [sp], #48
     af0:	ret
     af4:	stp	x29, x30, [sp, #-16]!
     af8:	mov	x29, sp
     afc:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     b00:	add	x0, x0, #0x118
     b04:	ldrb	w0, [x0]
     b08:	and	x0, x0, #0xff
     b0c:	cmp	x0, #0x0
     b10:	b.ne	b4c <fprintf@plt+0x17c>  // b.any
     b14:	adrp	x0, 11000 <dl_load@@Base+0xffac>
     b18:	ldr	x0, [x0, #4040]
     b1c:	cmp	x0, #0x0
     b20:	b.eq	b34 <fprintf@plt+0x164>  // b.none
     b24:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     b28:	add	x0, x0, #0x78
     b2c:	ldr	x0, [x0]
     b30:	bl	920 <__cxa_finalize@plt>
     b34:	bl	9f4 <fprintf@plt+0x24>
     b38:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     b3c:	add	x0, x0, #0x118
     b40:	mov	w1, #0x1                   	// #1
     b44:	strb	w1, [x0]
     b48:	b	b50 <fprintf@plt+0x180>
     b4c:	nop
     b50:	ldp	x29, x30, [sp], #16
     b54:	ret
     b58:	stp	x29, x30, [sp, #-16]!
     b5c:	mov	x29, sp
     b60:	bl	a64 <fprintf@plt+0x94>
     b64:	nop
     b68:	ldp	x29, x30, [sp], #16
     b6c:	ret
     b70:	stp	x29, x30, [sp, #-80]!
     b74:	mov	x29, sp
     b78:	str	x0, [sp, #56]
     b7c:	str	x1, [sp, #48]
     b80:	str	x2, [sp, #40]
     b84:	str	x3, [sp, #32]
     b88:	str	w4, [sp, #28]
     b8c:	str	x5, [sp, #16]
     b90:	str	w6, [sp, #24]
     b94:	str	xzr, [sp, #72]
     b98:	mov	x2, #0x20                  	// #32
     b9c:	mov	w1, #0x0                   	// #0
     ba0:	ldr	x0, [sp, #16]
     ba4:	bl	960 <memset@plt>
     ba8:	ldr	x0, [sp, #16]
     bac:	ldr	w1, [sp, #24]
     bb0:	str	w1, [x0]
     bb4:	ldr	x0, [sp, #16]
     bb8:	ldr	x1, [sp, #32]
     bbc:	str	x1, [x0, #16]
     bc0:	ldr	w0, [sp, #28]
     bc4:	cmp	w0, #0x0
     bc8:	b.eq	c4c <fprintf@plt+0x27c>  // b.none
     bcc:	ldr	x0, [sp, #56]
     bd0:	ldr	x1, [x0, #280]
     bd4:	ldr	x0, [sp, #32]
     bd8:	add	x0, x0, #0x1
     bdc:	blr	x1
     be0:	str	x0, [sp, #72]
     be4:	ldr	x0, [sp, #72]
     be8:	cmp	x0, #0x0
     bec:	b.ne	c1c <fprintf@plt+0x24c>  // b.any
     bf0:	ldr	x0, [sp, #56]
     bf4:	ldr	x4, [x0, #96]
     bf8:	ldr	x0, [sp, #32]
     bfc:	add	x0, x0, #0x1
     c00:	mov	x3, x0
     c04:	adrp	x0, 1000 <fprintf@plt+0x630>
     c08:	add	x2, x0, #0x320
     c0c:	adrp	x0, 1000 <fprintf@plt+0x630>
     c10:	add	x1, x0, #0x330
     c14:	ldr	x0, [sp, #48]
     c18:	blr	x4
     c1c:	ldr	x2, [sp, #32]
     c20:	ldr	x1, [sp, #40]
     c24:	ldr	x0, [sp, #72]
     c28:	bl	8f0 <memcpy@plt>
     c2c:	ldr	x1, [sp, #72]
     c30:	ldr	x0, [sp, #32]
     c34:	add	x0, x1, x0
     c38:	strb	wzr, [x0]
     c3c:	ldr	x0, [sp, #16]
     c40:	ldr	x1, [sp, #72]
     c44:	str	x1, [x0, #8]
     c48:	b	c58 <fprintf@plt+0x288>
     c4c:	ldr	x0, [sp, #16]
     c50:	ldr	x1, [sp, #40]
     c54:	str	x1, [x0, #8]
     c58:	ldr	x0, [sp, #16]
     c5c:	ldp	x29, x30, [sp], #80
     c60:	ret
     c64:	stp	x29, x30, [sp, #-64]!
     c68:	mov	x29, sp
     c6c:	str	x0, [sp, #56]
     c70:	str	x1, [sp, #48]
     c74:	str	x2, [sp, #40]
     c78:	str	x3, [sp, #32]
     c7c:	str	w4, [sp, #28]
     c80:	str	x5, [sp, #16]
     c84:	mov	w6, #0x2                   	// #2
     c88:	ldr	x5, [sp, #16]
     c8c:	ldr	w4, [sp, #28]
     c90:	ldr	x3, [sp, #32]
     c94:	ldr	x2, [sp, #40]
     c98:	ldr	x1, [sp, #48]
     c9c:	ldr	x0, [sp, #56]
     ca0:	bl	b70 <fprintf@plt+0x1a0>
     ca4:	ldp	x29, x30, [sp], #64
     ca8:	ret
     cac:	sub	sp, sp, #0x10
     cb0:	str	d0, [sp, #8]
     cb4:	str	x0, [sp]
     cb8:	ldr	x0, [sp]
     cbc:	mov	w1, #0x1                   	// #1
     cc0:	str	w1, [x0]
     cc4:	ldr	x0, [sp]
     cc8:	ldr	d0, [sp, #8]
     ccc:	str	d0, [x0, #8]
     cd0:	ldr	x0, [sp]
     cd4:	str	wzr, [x0, #16]
     cd8:	ldr	x0, [sp]
     cdc:	add	sp, sp, #0x10
     ce0:	ret
     ce4:	stp	x29, x30, [sp, #-144]!
     ce8:	mov	x29, sp
     cec:	stp	x19, x20, [sp, #16]
     cf0:	stp	x21, x22, [sp, #32]
     cf4:	str	x0, [sp, #72]
     cf8:	str	x1, [sp, #64]
     cfc:	str	d0, [sp, #56]
     d00:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     d04:	add	x0, x0, #0x120
     d08:	ldr	x0, [x0]
     d0c:	ldr	x19, [x0, #232]
     d10:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     d14:	add	x0, x0, #0x128
     d18:	ldr	x20, [x0]
     d1c:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     d20:	add	x0, x0, #0x120
     d24:	ldr	x21, [x0]
     d28:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     d2c:	add	x0, x0, #0x128
     d30:	ldr	x22, [x0]
     d34:	ldr	x0, [sp, #64]
     d38:	bl	900 <strlen@plt>
     d3c:	mov	x1, x0
     d40:	add	x0, sp, #0x70
     d44:	mov	x5, x0
     d48:	mov	w4, #0x1                   	// #1
     d4c:	mov	x3, x1
     d50:	ldr	x2, [sp, #64]
     d54:	mov	x1, x22
     d58:	mov	x0, x21
     d5c:	bl	c64 <fprintf@plt+0x294>
     d60:	mov	x21, x0
     d64:	add	x0, sp, #0x50
     d68:	ldr	d0, [sp, #56]
     d6c:	bl	cac <fprintf@plt+0x2dc>
     d70:	mov	x3, x0
     d74:	mov	x2, x21
     d78:	ldr	x1, [sp, #72]
     d7c:	mov	x0, x20
     d80:	blr	x19
     d84:	nop
     d88:	ldp	x19, x20, [sp, #16]
     d8c:	ldp	x21, x22, [sp, #32]
     d90:	ldp	x29, x30, [sp], #144
     d94:	ret
     d98:	stp	x29, x30, [sp, #-112]!
     d9c:	mov	x29, sp
     da0:	stp	x19, x20, [sp, #16]
     da4:	str	w0, [sp, #60]
     da8:	str	x1, [sp, #48]
     dac:	str	x2, [sp, #40]
     db0:	mov	w0, #0xffffffff            	// #-1
     db4:	str	w0, [sp, #108]
     db8:	bl	930 <fork@plt>
     dbc:	str	w0, [sp, #108]
     dc0:	ldr	w0, [sp, #108]
     dc4:	cmp	w0, #0x0
     dc8:	b.ge	e00 <fprintf@plt+0x430>  // b.tcont
     dcc:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     dd0:	add	x0, x0, #0x120
     dd4:	ldr	x0, [x0]
     dd8:	ldr	x19, [x0, #128]
     ddc:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     de0:	add	x0, x0, #0x128
     de4:	ldr	x20, [x0]
     de8:	bl	9a0 <__errno_location@plt>
     dec:	ldr	w0, [x0]
     df0:	mov	w1, w0
     df4:	mov	x0, x20
     df8:	blr	x19
     dfc:	b	ee8 <fprintf@plt+0x518>
     e00:	ldr	w0, [sp, #108]
     e04:	cmp	w0, #0x0
     e08:	b.ne	ee8 <fprintf@plt+0x518>  // b.any
     e0c:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     e10:	add	x0, x0, #0x120
     e14:	ldr	x0, [x0]
     e18:	ldr	x5, [x0, #168]
     e1c:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     e20:	add	x0, x0, #0x128
     e24:	ldr	x6, [x0]
     e28:	add	x0, sp, #0x48
     e2c:	mov	x4, x0
     e30:	mov	w3, #0x5                   	// #5
     e34:	adrp	x0, 1000 <fprintf@plt+0x630>
     e38:	add	x2, x0, #0x370
     e3c:	adrp	x0, 1000 <fprintf@plt+0x630>
     e40:	add	x1, x0, #0x380
     e44:	mov	x0, x6
     e48:	blr	x5
     e4c:	cmp	w0, #0x0
     e50:	b.eq	ee8 <fprintf@plt+0x518>  // b.none
     e54:	ldr	w0, [sp, #72]
     e58:	cmp	w0, #0x5
     e5c:	b.eq	eb0 <fprintf@plt+0x4e0>  // b.none
     e60:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     e64:	add	x0, x0, #0x120
     e68:	ldr	x0, [x0]
     e6c:	ldr	w0, [x0, #24]
     e70:	cmp	w0, #0x0
     e74:	b.eq	ee8 <fprintf@plt+0x518>  // b.none
     e78:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     e7c:	add	x0, x0, #0x120
     e80:	ldr	x0, [x0]
     e84:	ldr	x19, [x0, #112]
     e88:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     e8c:	add	x0, x0, #0x128
     e90:	ldr	x20, [x0]
     e94:	adrp	x0, 1000 <fprintf@plt+0x630>
     e98:	add	x0, x0, #0x388
     e9c:	bl	9c0 <gettext@plt>
     ea0:	mov	x1, x0
     ea4:	mov	x0, x20
     ea8:	blr	x19
     eac:	b	ee8 <fprintf@plt+0x518>
     eb0:	ldr	x19, [sp, #80]
     eb4:	bl	940 <getpid@plt>
     eb8:	scvtf	d0, w0
     ebc:	adrp	x0, 1000 <fprintf@plt+0x630>
     ec0:	add	x1, x0, #0x3a8
     ec4:	mov	x0, x19
     ec8:	bl	ce4 <fprintf@plt+0x314>
     ecc:	ldr	x19, [sp, #80]
     ed0:	bl	950 <getppid@plt>
     ed4:	scvtf	d0, w0
     ed8:	adrp	x0, 1000 <fprintf@plt+0x630>
     edc:	add	x1, x0, #0x3b0
     ee0:	mov	x0, x19
     ee4:	bl	ce4 <fprintf@plt+0x314>
     ee8:	ldr	w0, [sp, #108]
     eec:	scvtf	d0, w0
     ef0:	ldr	x0, [sp, #48]
     ef4:	bl	cac <fprintf@plt+0x2dc>
     ef8:	ldp	x19, x20, [sp, #16]
     efc:	ldp	x29, x30, [sp], #112
     f00:	ret
     f04:	stp	x29, x30, [sp, #-112]!
     f08:	mov	x29, sp
     f0c:	stp	x19, x20, [sp, #16]
     f10:	str	w0, [sp, #60]
     f14:	str	x1, [sp, #48]
     f18:	str	x2, [sp, #40]
     f1c:	mov	w0, #0xffffffff            	// #-1
     f20:	str	w0, [sp, #108]
     f24:	str	wzr, [sp, #104]
     f28:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     f2c:	add	x0, x0, #0x120
     f30:	ldr	x0, [x0]
     f34:	ldr	x4, [x0, #152]
     f38:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     f3c:	add	x0, x0, #0x128
     f40:	ldr	x0, [x0]
     f44:	add	x1, sp, #0x48
     f48:	mov	x3, x1
     f4c:	mov	w2, #0x1                   	// #1
     f50:	mov	x1, #0x0                   	// #0
     f54:	blr	x4
     f58:	cmp	w0, #0x0
     f5c:	b.eq	fbc <fprintf@plt+0x5ec>  // b.none
     f60:	mov	w0, #0x3                   	// #3
     f64:	str	w0, [sp, #104]
     f68:	ldr	d0, [sp, #80]
     f6c:	fcvtzs	w0, d0
     f70:	ldr	w2, [sp, #104]
     f74:	mov	x1, #0x0                   	// #0
     f78:	bl	9b0 <waitpid@plt>
     f7c:	str	w0, [sp, #108]
     f80:	ldr	w0, [sp, #108]
     f84:	cmp	w0, #0x0
     f88:	b.ge	fbc <fprintf@plt+0x5ec>  // b.tcont
     f8c:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     f90:	add	x0, x0, #0x120
     f94:	ldr	x0, [x0]
     f98:	ldr	x19, [x0, #128]
     f9c:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
     fa0:	add	x0, x0, #0x128
     fa4:	ldr	x20, [x0]
     fa8:	bl	9a0 <__errno_location@plt>
     fac:	ldr	w0, [x0]
     fb0:	mov	w1, w0
     fb4:	mov	x0, x20
     fb8:	blr	x19
     fbc:	ldr	w0, [sp, #108]
     fc0:	scvtf	d0, w0
     fc4:	ldr	x0, [sp, #48]
     fc8:	bl	cac <fprintf@plt+0x2dc>
     fcc:	ldp	x19, x20, [sp, #16]
     fd0:	ldp	x29, x30, [sp], #112
     fd4:	ret
     fd8:	stp	x29, x30, [sp, #-80]!
     fdc:	mov	x29, sp
     fe0:	stp	x19, x20, [sp, #16]
     fe4:	str	w0, [sp, #60]
     fe8:	str	x1, [sp, #48]
     fec:	str	x2, [sp, #40]
     ff0:	mov	x0, #0x0                   	// #0
     ff4:	bl	990 <wait@plt>
     ff8:	str	w0, [sp, #76]
     ffc:	ldr	w0, [sp, #76]
    1000:	cmp	w0, #0x0
    1004:	b.ge	1038 <fprintf@plt+0x668>  // b.tcont
    1008:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    100c:	add	x0, x0, #0x120
    1010:	ldr	x0, [x0]
    1014:	ldr	x19, [x0, #128]
    1018:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    101c:	add	x0, x0, #0x128
    1020:	ldr	x20, [x0]
    1024:	bl	9a0 <__errno_location@plt>
    1028:	ldr	w0, [x0]
    102c:	mov	w1, w0
    1030:	mov	x0, x20
    1034:	blr	x19
    1038:	ldr	w0, [sp, #76]
    103c:	scvtf	d0, w0
    1040:	ldr	x0, [sp, #48]
    1044:	bl	cac <fprintf@plt+0x2dc>
    1048:	ldp	x19, x20, [sp, #16]
    104c:	ldp	x29, x30, [sp], #80
    1050:	ret

0000000000001054 <dl_load@@Base>:
    1054:	stp	x29, x30, [sp, #-64]!
    1058:	mov	x29, sp
    105c:	str	x0, [sp, #24]
    1060:	str	x1, [sp, #16]
    1064:	str	wzr, [sp, #52]
    1068:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    106c:	add	x0, x0, #0x120
    1070:	ldr	x1, [sp, #24]
    1074:	str	x1, [x0]
    1078:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    107c:	add	x0, x0, #0x128
    1080:	ldr	x1, [sp, #16]
    1084:	str	x1, [x0]
    1088:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    108c:	add	x0, x0, #0x120
    1090:	ldr	x0, [x0]
    1094:	ldr	w0, [x0]
    1098:	cmp	w0, #0x2
    109c:	b.ne	10b8 <dl_load@@Base+0x64>  // b.any
    10a0:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    10a4:	add	x0, x0, #0x120
    10a8:	ldr	x0, [x0]
    10ac:	ldr	w0, [x0, #4]
    10b0:	cmp	w0, #0x0
    10b4:	b.ge	1130 <dl_load@@Base+0xdc>  // b.tcont
    10b8:	adrp	x0, 11000 <dl_load@@Base+0xffac>
    10bc:	ldr	x0, [x0, #4048]
    10c0:	ldr	x0, [x0]
    10c4:	mov	x3, x0
    10c8:	mov	x2, #0x22                  	// #34
    10cc:	mov	x1, #0x1                   	// #1
    10d0:	adrp	x0, 1000 <fprintf@plt+0x630>
    10d4:	add	x0, x0, #0x3d0
    10d8:	bl	980 <fwrite@plt>
    10dc:	adrp	x0, 11000 <dl_load@@Base+0xffac>
    10e0:	ldr	x0, [x0, #4048]
    10e4:	ldr	x6, [x0]
    10e8:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    10ec:	add	x0, x0, #0x120
    10f0:	ldr	x0, [x0]
    10f4:	ldr	w1, [x0]
    10f8:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    10fc:	add	x0, x0, #0x120
    1100:	ldr	x0, [x0]
    1104:	ldr	w0, [x0, #4]
    1108:	mov	w5, w0
    110c:	mov	w4, w1
    1110:	mov	w3, #0x0                   	// #0
    1114:	mov	w2, #0x2                   	// #2
    1118:	adrp	x0, 1000 <fprintf@plt+0x630>
    111c:	add	x1, x0, #0x3f8
    1120:	mov	x0, x6
    1124:	bl	9d0 <fprintf@plt>
    1128:	mov	w0, #0x1                   	// #1
    112c:	bl	910 <exit@plt>
    1130:	str	xzr, [sp, #56]
    1134:	mov	x0, #0x3                   	// #3
    1138:	str	x0, [sp, #40]
    113c:	b	1230 <dl_load@@Base+0x1dc>
    1140:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    1144:	add	x2, x0, #0x88
    1148:	ldr	x1, [sp, #56]
    114c:	mov	x0, x1
    1150:	lsl	x0, x0, #1
    1154:	add	x0, x0, x1
    1158:	lsl	x0, x0, #4
    115c:	add	x0, x2, x0
    1160:	ldr	x0, [x0]
    1164:	cmp	x0, #0x0
    1168:	b.eq	1244 <dl_load@@Base+0x1f0>  // b.none
    116c:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    1170:	add	x0, x0, #0x120
    1174:	ldr	x0, [x0]
    1178:	ldr	x3, [x0, #48]
    117c:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    1180:	add	x0, x0, #0x128
    1184:	ldr	x4, [x0]
    1188:	ldr	x1, [sp, #56]
    118c:	mov	x0, x1
    1190:	lsl	x0, x0, #1
    1194:	add	x0, x0, x1
    1198:	lsl	x0, x0, #4
    119c:	adrp	x1, 12000 <dl_load@@Base+0x10fac>
    11a0:	add	x1, x1, #0x88
    11a4:	add	x0, x0, x1
    11a8:	mov	x2, x0
    11ac:	adrp	x0, 1000 <fprintf@plt+0x630>
    11b0:	add	x1, x0, #0x380
    11b4:	mov	x0, x4
    11b8:	blr	x3
    11bc:	cmp	w0, #0x0
    11c0:	b.ne	1224 <dl_load@@Base+0x1d0>  // b.any
    11c4:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    11c8:	add	x0, x0, #0x120
    11cc:	ldr	x0, [x0]
    11d0:	ldr	x3, [x0, #104]
    11d4:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    11d8:	add	x0, x0, #0x128
    11dc:	ldr	x4, [x0]
    11e0:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    11e4:	add	x2, x0, #0x88
    11e8:	ldr	x1, [sp, #56]
    11ec:	mov	x0, x1
    11f0:	lsl	x0, x0, #1
    11f4:	add	x0, x0, x1
    11f8:	lsl	x0, x0, #4
    11fc:	add	x0, x2, x0
    1200:	ldr	x0, [x0]
    1204:	mov	x2, x0
    1208:	adrp	x0, 1000 <fprintf@plt+0x630>
    120c:	add	x1, x0, #0x430
    1210:	mov	x0, x4
    1214:	blr	x3
    1218:	ldr	w0, [sp, #52]
    121c:	add	w0, w0, #0x1
    1220:	str	w0, [sp, #52]
    1224:	ldr	x0, [sp, #56]
    1228:	add	x0, x0, #0x1
    122c:	str	x0, [sp, #56]
    1230:	ldr	x1, [sp, #56]
    1234:	ldr	x0, [sp, #40]
    1238:	cmp	x1, x0
    123c:	b.cc	1140 <dl_load@@Base+0xec>  // b.lo, b.ul, b.last
    1240:	b	1248 <dl_load@@Base+0x1f4>
    1244:	nop
    1248:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    124c:	add	x0, x0, #0x130
    1250:	ldr	x0, [x0]
    1254:	cmp	x0, #0x0
    1258:	b.eq	12ac <dl_load@@Base+0x258>  // b.none
    125c:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    1260:	add	x0, x0, #0x130
    1264:	ldr	x0, [x0]
    1268:	blr	x0
    126c:	cmp	w0, #0x0
    1270:	b.ne	12ac <dl_load@@Base+0x258>  // b.any
    1274:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    1278:	add	x0, x0, #0x120
    127c:	ldr	x0, [x0]
    1280:	ldr	x2, [x0, #104]
    1284:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    1288:	add	x0, x0, #0x128
    128c:	ldr	x3, [x0]
    1290:	adrp	x0, 1000 <fprintf@plt+0x630>
    1294:	add	x1, x0, #0x448
    1298:	mov	x0, x3
    129c:	blr	x2
    12a0:	ldr	w0, [sp, #52]
    12a4:	add	w0, w0, #0x1
    12a8:	str	w0, [sp, #52]
    12ac:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    12b0:	add	x0, x0, #0x80
    12b4:	ldr	x0, [x0]
    12b8:	cmp	x0, #0x0
    12bc:	b.eq	12f4 <dl_load@@Base+0x2a0>  // b.none
    12c0:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    12c4:	add	x0, x0, #0x120
    12c8:	ldr	x0, [x0]
    12cc:	ldr	x2, [x0, #88]
    12d0:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    12d4:	add	x0, x0, #0x128
    12d8:	ldr	x3, [x0]
    12dc:	adrp	x0, 12000 <dl_load@@Base+0x10fac>
    12e0:	add	x0, x0, #0x80
    12e4:	ldr	x0, [x0]
    12e8:	mov	x1, x0
    12ec:	mov	x0, x3
    12f0:	blr	x2
    12f4:	ldr	w0, [sp, #52]
    12f8:	cmp	w0, #0x0
    12fc:	cset	w0, eq  // eq = none
    1300:	and	w0, w0, #0xff
    1304:	ldp	x29, x30, [sp], #64
    1308:	ret

Disassembly of section .fini:

000000000000130c <.fini>:
    130c:	stp	x29, x30, [sp, #-16]!
    1310:	mov	x29, sp
    1314:	ldp	x29, x30, [sp], #16
    1318:	ret
