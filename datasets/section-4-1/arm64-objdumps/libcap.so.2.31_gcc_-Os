
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcap.so.2.31_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000019f8 <.init>:
    19f8:	stp	x29, x30, [sp, #-16]!
    19fc:	mov	x29, sp
    1a00:	bl	1db8 <cap_to_name@plt+0x88>
    1a04:	ldp	x29, x30, [sp], #16
    1a08:	ret

Disassembly of section .plt:

0000000000001a10 <removexattr@plt-0x20>:
    1a10:	stp	x16, x30, [sp, #-16]!
    1a14:	adrp	x16, 14000 <cap_set_nsowner@@Base+0x102ec>
    1a18:	ldr	x17, [x16, #4088]
    1a1c:	add	x16, x16, #0xff8
    1a20:	br	x17
    1a24:	nop
    1a28:	nop
    1a2c:	nop

0000000000001a30 <removexattr@plt>:
    1a30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a34:	ldr	x17, [x16]
    1a38:	add	x16, x16, #0x0
    1a3c:	br	x17

0000000000001a40 <setuid@plt>:
    1a40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #8]
    1a48:	add	x16, x16, #0x8
    1a4c:	br	x17

0000000000001a50 <strtoul@plt>:
    1a50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #16]
    1a58:	add	x16, x16, #0x10
    1a5c:	br	x17

0000000000001a60 <strlen@plt>:
    1a60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #24]
    1a68:	add	x16, x16, #0x18
    1a6c:	br	x17

0000000000001a70 <psx_load_syscalls@plt>:
    1a70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #32]
    1a78:	add	x16, x16, #0x20
    1a7c:	br	x17

0000000000001a80 <cap_get_secbits@plt>:
    1a80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #40]
    1a88:	add	x16, x16, #0x28
    1a8c:	br	x17

0000000000001a90 <cap_clear_flag@plt>:
    1a90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #48]
    1a98:	add	x16, x16, #0x30
    1a9c:	br	x17

0000000000001aa0 <cap_max_bits@plt>:
    1aa0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #56]
    1aa8:	add	x16, x16, #0x38
    1aac:	br	x17

0000000000001ab0 <_libcap_strdup@plt>:
    1ab0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #64]
    1ab8:	add	x16, x16, #0x40
    1abc:	br	x17

0000000000001ac0 <cap_get_ambient@plt>:
    1ac0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #72]
    1ac8:	add	x16, x16, #0x48
    1acc:	br	x17

0000000000001ad0 <__cxa_finalize@plt>:
    1ad0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #80]
    1ad8:	add	x16, x16, #0x50
    1adc:	br	x17

0000000000001ae0 <sprintf@plt>:
    1ae0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #88]
    1ae8:	add	x16, x16, #0x58
    1aec:	br	x17

0000000000001af0 <asprintf@plt>:
    1af0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #96]
    1af8:	add	x16, x16, #0x60
    1afc:	br	x17

0000000000001b00 <__ctype_tolower_loc@plt>:
    1b00:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #104]
    1b08:	add	x16, x16, #0x68
    1b0c:	br	x17

0000000000001b10 <capset@plt>:
    1b10:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #112]
    1b18:	add	x16, x16, #0x70
    1b1c:	br	x17

0000000000001b20 <malloc@plt>:
    1b20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #120]
    1b28:	add	x16, x16, #0x78
    1b2c:	br	x17

0000000000001b30 <cap_set_syscall@plt>:
    1b30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #128]
    1b38:	add	x16, x16, #0x80
    1b3c:	br	x17

0000000000001b40 <setxattr@plt>:
    1b40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #136]
    1b48:	add	x16, x16, #0x88
    1b4c:	br	x17

0000000000001b50 <cap_reset_ambient@plt>:
    1b50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #144]
    1b58:	add	x16, x16, #0x90
    1b5c:	br	x17

0000000000001b60 <cap_get_bound@plt>:
    1b60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #152]
    1b68:	add	x16, x16, #0x98
    1b6c:	br	x17

0000000000001b70 <memset@plt>:
    1b70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #160]
    1b78:	add	x16, x16, #0xa0
    1b7c:	br	x17

0000000000001b80 <calloc@plt>:
    1b80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #168]
    1b88:	add	x16, x16, #0xa8
    1b8c:	br	x17

0000000000001b90 <cap_set_proc@plt>:
    1b90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #176]
    1b98:	add	x16, x16, #0xb0
    1b9c:	br	x17

0000000000001ba0 <__gmon_start__@plt>:
    1ba0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #184]
    1ba8:	add	x16, x16, #0xb8
    1bac:	br	x17

0000000000001bb0 <fremovexattr@plt>:
    1bb0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #192]
    1bb8:	add	x16, x16, #0xc0
    1bbc:	br	x17

0000000000001bc0 <setgid@plt>:
    1bc0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #200]
    1bc8:	add	x16, x16, #0xc8
    1bcc:	br	x17

0000000000001bd0 <cap_init@plt>:
    1bd0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #208]
    1bd8:	add	x16, x16, #0xd0
    1bdc:	br	x17

0000000000001be0 <getxattr@plt>:
    1be0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #216]
    1be8:	add	x16, x16, #0xd8
    1bec:	br	x17

0000000000001bf0 <memcmp@plt>:
    1bf0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #224]
    1bf8:	add	x16, x16, #0xe0
    1bfc:	br	x17

0000000000001c00 <__ctype_b_loc@plt>:
    1c00:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #232]
    1c08:	add	x16, x16, #0xe8
    1c0c:	br	x17

0000000000001c10 <cap_get_proc@plt>:
    1c10:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #240]
    1c18:	add	x16, x16, #0xf0
    1c1c:	br	x17

0000000000001c20 <__lxstat64@plt>:
    1c20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #248]
    1c28:	add	x16, x16, #0xf8
    1c2c:	br	x17

0000000000001c30 <cap_drop_bound@plt>:
    1c30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #256]
    1c38:	add	x16, x16, #0x100
    1c3c:	br	x17

0000000000001c40 <free@plt>:
    1c40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #264]
    1c48:	add	x16, x16, #0x108
    1c4c:	br	x17

0000000000001c50 <__fxstat64@plt>:
    1c50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #272]
    1c58:	add	x16, x16, #0x110
    1c5c:	br	x17

0000000000001c60 <fgetxattr@plt>:
    1c60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #280]
    1c68:	add	x16, x16, #0x118
    1c6c:	br	x17

0000000000001c70 <setgroups@plt>:
    1c70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #288]
    1c78:	add	x16, x16, #0x120
    1c7c:	br	x17

0000000000001c80 <strcpy@plt>:
    1c80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #296]
    1c88:	add	x16, x16, #0x128
    1c8c:	br	x17

0000000000001c90 <fsetxattr@plt>:
    1c90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #304]
    1c98:	add	x16, x16, #0x130
    1c9c:	br	x17

0000000000001ca0 <capgetp@plt>:
    1ca0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #312]
    1ca8:	add	x16, x16, #0x138
    1cac:	br	x17

0000000000001cb0 <cap_free@plt>:
    1cb0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #320]
    1cb8:	add	x16, x16, #0x140
    1cbc:	br	x17

0000000000001cc0 <cap_set_flag@plt>:
    1cc0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #328]
    1cc8:	add	x16, x16, #0x148
    1ccc:	br	x17

0000000000001cd0 <cap_compare@plt>:
    1cd0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #336]
    1cd8:	add	x16, x16, #0x150
    1cdc:	br	x17

0000000000001ce0 <capget@plt>:
    1ce0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #344]
    1ce8:	add	x16, x16, #0x158
    1cec:	br	x17

0000000000001cf0 <cap_set_secbits@plt>:
    1cf0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #352]
    1cf8:	add	x16, x16, #0x160
    1cfc:	br	x17

0000000000001d00 <__errno_location@plt>:
    1d00:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #360]
    1d08:	add	x16, x16, #0x168
    1d0c:	br	x17

0000000000001d10 <prctl@plt>:
    1d10:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #368]
    1d18:	add	x16, x16, #0x170
    1d1c:	br	x17

0000000000001d20 <syscall@plt>:
    1d20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #376]
    1d28:	add	x16, x16, #0x178
    1d2c:	br	x17

0000000000001d30 <cap_to_name@plt>:
    1d30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #384]
    1d38:	add	x16, x16, #0x180
    1d3c:	br	x17

Disassembly of section .text:

0000000000001d40 <cap_max_bits@@Base-0x14c>:
    1d40:	stp	x29, x30, [sp, #-48]!
    1d44:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    1d48:	mov	x29, sp
    1d4c:	stp	x19, x20, [sp, #16]
    1d50:	ldr	w19, [x0, #732]
    1d54:	stp	x21, x22, [sp, #32]
    1d58:	cbnz	w19, 1da0 <cap_to_name@plt+0x70>
    1d5c:	mov	w22, #0x40                  	// #64
    1d60:	mov	x21, x0
    1d64:	mov	x1, #0x0                   	// #0
    1d68:	mov	x0, #0x0                   	// #0
    1d6c:	bl	1b30 <cap_set_syscall@plt>
    1d70:	add	w20, w19, w22
    1d74:	asr	w20, w20, #1
    1d78:	mov	w0, w20
    1d7c:	bl	1b60 <cap_get_bound@plt>
    1d80:	tbz	w0, #31, 1db0 <cap_to_name@plt+0x80>
    1d84:	sub	w22, w20, #0x1
    1d88:	cmp	w19, w22
    1d8c:	b.le	1d70 <cap_to_name@plt+0x40>
    1d90:	cmp	w19, #0x0
    1d94:	mov	w0, #0x26                  	// #38
    1d98:	csel	w19, w19, w0, ne  // ne = any
    1d9c:	str	w19, [x21, #732]
    1da0:	ldp	x19, x20, [sp, #16]
    1da4:	ldp	x21, x22, [sp, #32]
    1da8:	ldp	x29, x30, [sp], #48
    1dac:	ret
    1db0:	add	w19, w20, #0x1
    1db4:	b	1d88 <cap_to_name@plt+0x58>
    1db8:	adrp	x0, 14000 <cap_set_nsowner@@Base+0x102ec>
    1dbc:	ldr	x0, [x0, #4056]
    1dc0:	cbz	x0, 1dc8 <cap_to_name@plt+0x98>
    1dc4:	b	1ba0 <__gmon_start__@plt>
    1dc8:	ret
    1dcc:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    1dd0:	add	x0, x0, #0x2d8
    1dd4:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x112ec>
    1dd8:	add	x1, x1, #0x2d8
    1ddc:	cmp	x1, x0
    1de0:	b.eq	1df8 <cap_to_name@plt+0xc8>  // b.none
    1de4:	adrp	x1, 14000 <cap_set_nsowner@@Base+0x102ec>
    1de8:	ldr	x1, [x1, #4040]
    1dec:	cbz	x1, 1df8 <cap_to_name@plt+0xc8>
    1df0:	mov	x16, x1
    1df4:	br	x16
    1df8:	ret
    1dfc:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    1e00:	add	x0, x0, #0x2d8
    1e04:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x112ec>
    1e08:	add	x1, x1, #0x2d8
    1e0c:	sub	x1, x1, x0
    1e10:	mov	x2, #0x2                   	// #2
    1e14:	asr	x1, x1, #3
    1e18:	sdiv	x1, x1, x2
    1e1c:	cbz	x1, 1e34 <cap_to_name@plt+0x104>
    1e20:	adrp	x2, 14000 <cap_set_nsowner@@Base+0x102ec>
    1e24:	ldr	x2, [x2, #4064]
    1e28:	cbz	x2, 1e34 <cap_to_name@plt+0x104>
    1e2c:	mov	x16, x2
    1e30:	br	x16
    1e34:	ret
    1e38:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    1e3c:	ldrb	w1, [x0, #728]
    1e40:	cbnz	w1, 1e84 <cap_to_name@plt+0x154>
    1e44:	stp	x29, x30, [sp, #-32]!
    1e48:	mov	x29, sp
    1e4c:	str	x19, [sp, #16]
    1e50:	mov	x19, x0
    1e54:	adrp	x0, 14000 <cap_set_nsowner@@Base+0x102ec>
    1e58:	ldr	x0, [x0, #4048]
    1e5c:	cbz	x0, 1e6c <cap_to_name@plt+0x13c>
    1e60:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    1e64:	ldr	x0, [x0, #392]
    1e68:	bl	1ad0 <__cxa_finalize@plt>
    1e6c:	bl	1dcc <cap_to_name@plt+0x9c>
    1e70:	mov	w0, #0x1                   	// #1
    1e74:	strb	w0, [x19, #728]
    1e78:	ldr	x19, [sp, #16]
    1e7c:	ldp	x29, x30, [sp], #32
    1e80:	ret
    1e84:	ret
    1e88:	b	1dfc <cap_to_name@plt+0xcc>

0000000000001e8c <cap_max_bits@@Base>:
    1e8c:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    1e90:	ldr	w0, [x0, #732]
    1e94:	ret

0000000000001e98 <_libcap_strdup@@Base>:
    1e98:	stp	x29, x30, [sp, #-32]!
    1e9c:	mov	x29, sp
    1ea0:	stp	x19, x20, [sp, #16]
    1ea4:	cbnz	x0, 1ec8 <_libcap_strdup@@Base+0x30>
    1ea8:	bl	1d00 <__errno_location@plt>
    1eac:	mov	x19, #0x0                   	// #0
    1eb0:	mov	w1, #0x16                  	// #22
    1eb4:	str	w1, [x0]
    1eb8:	mov	x0, x19
    1ebc:	ldp	x19, x20, [sp, #16]
    1ec0:	ldp	x29, x30, [sp], #32
    1ec4:	ret
    1ec8:	mov	x20, x0
    1ecc:	bl	1a60 <strlen@plt>
    1ed0:	add	x0, x0, #0x5
    1ed4:	bl	1b20 <malloc@plt>
    1ed8:	mov	x19, x0
    1edc:	cbnz	x0, 1ef0 <_libcap_strdup@@Base+0x58>
    1ee0:	bl	1d00 <__errno_location@plt>
    1ee4:	mov	w1, #0xc                   	// #12
    1ee8:	str	w1, [x0]
    1eec:	b	1eb8 <_libcap_strdup@@Base+0x20>
    1ef0:	mov	w0, #0x95d0                	// #38352
    1ef4:	mov	x1, x20
    1ef8:	movk	w0, #0xca, lsl #16
    1efc:	str	w0, [x19], #4
    1f00:	mov	x0, x19
    1f04:	bl	1c80 <strcpy@plt>
    1f08:	b	1eb8 <_libcap_strdup@@Base+0x20>

0000000000001f0c <cap_free@@Base>:
    1f0c:	cbz	x0, 1f9c <cap_free@@Base+0x90>
    1f10:	stp	x29, x30, [sp, #-32]!
    1f14:	mov	w2, #0x90d0                	// #37072
    1f18:	movk	w2, #0xca, lsl #16
    1f1c:	mov	x29, sp
    1f20:	ldur	w1, [x0, #-4]
    1f24:	str	x19, [sp, #16]
    1f28:	mov	x19, x0
    1f2c:	cmp	w1, w2
    1f30:	b.ne	1f58 <cap_free@@Base+0x4c>  // b.any
    1f34:	sub	x0, x0, #0x4
    1f38:	str	xzr, [x0, #32]
    1f3c:	stp	xzr, xzr, [x0]
    1f40:	stp	xzr, xzr, [x0, #16]
    1f44:	bl	1c40 <free@plt>
    1f48:	mov	w0, #0x0                   	// #0
    1f4c:	ldr	x19, [sp, #16]
    1f50:	ldp	x29, x30, [sp], #32
    1f54:	ret
    1f58:	mov	w2, #0x95d0                	// #38352
    1f5c:	movk	w2, #0xca, lsl #16
    1f60:	cmp	w1, w2
    1f64:	b.ne	1f88 <cap_free@@Base+0x7c>  // b.any
    1f68:	bl	1a60 <strlen@plt>
    1f6c:	sub	x19, x19, #0x4
    1f70:	add	x2, x0, #0x4
    1f74:	mov	w1, #0x0                   	// #0
    1f78:	mov	x0, x19
    1f7c:	bl	1b70 <memset@plt>
    1f80:	mov	x0, x19
    1f84:	b	1f44 <cap_free@@Base+0x38>
    1f88:	bl	1d00 <__errno_location@plt>
    1f8c:	mov	w1, #0x16                  	// #22
    1f90:	str	w1, [x0]
    1f94:	mov	w0, #0xffffffff            	// #-1
    1f98:	b	1f4c <cap_free@@Base+0x40>
    1f9c:	mov	w0, #0x0                   	// #0
    1fa0:	ret

0000000000001fa4 <cap_init@@Base>:
    1fa4:	stp	x29, x30, [sp, #-32]!
    1fa8:	mov	x1, #0x28                  	// #40
    1fac:	mov	x0, #0x1                   	// #1
    1fb0:	mov	x29, sp
    1fb4:	stp	x19, x20, [sp, #16]
    1fb8:	bl	1b80 <calloc@plt>
    1fbc:	cbnz	x0, 1fe0 <cap_init@@Base+0x3c>
    1fc0:	bl	1d00 <__errno_location@plt>
    1fc4:	mov	w1, #0xc                   	// #12
    1fc8:	str	w1, [x0]
    1fcc:	mov	x19, #0x0                   	// #0
    1fd0:	mov	x0, x19
    1fd4:	ldp	x19, x20, [sp, #16]
    1fd8:	ldp	x29, x30, [sp], #32
    1fdc:	ret
    1fe0:	mov	x19, x0
    1fe4:	mov	x20, x0
    1fe8:	mov	x0, #0x90d0                	// #37072
    1fec:	mov	x1, #0x0                   	// #0
    1ff0:	movk	x0, #0xca, lsl #16
    1ff4:	movk	x0, #0x522, lsl #32
    1ff8:	movk	x0, #0x2008, lsl #48
    1ffc:	str	x0, [x19], #4
    2000:	mov	x0, x19
    2004:	bl	1ce0 <capget@plt>
    2008:	ldr	w0, [x20, #4]
    200c:	mov	w1, #0x1026                	// #4134
    2010:	movk	w1, #0x2007, lsl #16
    2014:	cmp	w0, w1
    2018:	b.eq	1fd0 <cap_init@@Base+0x2c>  // b.none
    201c:	mov	w1, #0x522                 	// #1314
    2020:	movk	w1, #0x2008, lsl #16
    2024:	cmp	w0, w1
    2028:	b.eq	1fd0 <cap_init@@Base+0x2c>  // b.none
    202c:	mov	w1, #0x330                 	// #816
    2030:	movk	w1, #0x1998, lsl #16
    2034:	cmp	w0, w1
    2038:	b.eq	1fd0 <cap_init@@Base+0x2c>  // b.none
    203c:	mov	x0, x19
    2040:	bl	1cb0 <cap_free@plt>
    2044:	b	1fcc <cap_init@@Base+0x28>

0000000000002048 <cap_dup@@Base>:
    2048:	stp	x29, x30, [sp, #-32]!
    204c:	mov	x29, sp
    2050:	str	x19, [sp, #16]
    2054:	cbz	x0, 2070 <cap_dup@@Base+0x28>
    2058:	mov	x19, x0
    205c:	mov	w0, #0x90d0                	// #37072
    2060:	movk	w0, #0xca, lsl #16
    2064:	ldur	w1, [x19, #-4]
    2068:	cmp	w1, w0
    206c:	b.eq	208c <cap_dup@@Base+0x44>  // b.none
    2070:	bl	1d00 <__errno_location@plt>
    2074:	mov	w1, #0x16                  	// #22
    2078:	str	w1, [x0]
    207c:	mov	x0, #0x0                   	// #0
    2080:	ldr	x19, [sp, #16]
    2084:	ldp	x29, x30, [sp], #32
    2088:	ret
    208c:	bl	1bd0 <cap_init@plt>
    2090:	cbz	x0, 2080 <cap_dup@@Base+0x38>
    2094:	ldp	x2, x3, [x19]
    2098:	stp	x2, x3, [x0]
    209c:	ldp	x2, x3, [x19, #16]
    20a0:	stp	x2, x3, [x0, #16]
    20a4:	ldr	w1, [x19, #32]
    20a8:	str	w1, [x0, #32]
    20ac:	b	2080 <cap_dup@@Base+0x38>
    20b0:	b	1d20 <syscall@plt>
    20b4:	b	1d20 <syscall@plt>
    20b8:	stp	x29, x30, [sp, #-16]!
    20bc:	adrp	x2, 15000 <cap_set_nsowner@@Base+0x112ec>
    20c0:	mov	x3, #0x0                   	// #0
    20c4:	mov	x29, sp
    20c8:	ldr	x4, [x2, #408]
    20cc:	mov	x2, x1
    20d0:	mov	x1, x0
    20d4:	mov	x0, #0xa7                  	// #167
    20d8:	blr	x4
    20dc:	ldp	x29, x30, [sp], #16
    20e0:	ret

00000000000020e4 <psx_load_syscalls@@Base>:
    20e4:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    20e8:	str	wzr, [x0, #400]
    20ec:	ret

00000000000020f0 <cap_set_syscall@@Base>:
    20f0:	adrp	x2, 15000 <cap_set_nsowner@@Base+0x112ec>
    20f4:	cbnz	x0, 2104 <cap_set_syscall@@Base+0x14>
    20f8:	add	x0, x2, #0x198
    20fc:	add	x1, x0, #0x8
    2100:	b	1a70 <psx_load_syscalls@plt>
    2104:	add	x3, x2, #0x198
    2108:	str	x0, [x2, #408]
    210c:	str	x1, [x3, #8]
    2110:	ret

0000000000002114 <cap_get_proc@@Base>:
    2114:	stp	x29, x30, [sp, #-32]!
    2118:	mov	x29, sp
    211c:	str	x19, [sp, #16]
    2120:	bl	1bd0 <cap_init@plt>
    2124:	mov	x19, x0
    2128:	cbz	x0, 2144 <cap_get_proc@@Base+0x30>
    212c:	add	x1, x0, #0x8
    2130:	bl	1ce0 <capget@plt>
    2134:	cbz	w0, 2144 <cap_get_proc@@Base+0x30>
    2138:	mov	x0, x19
    213c:	mov	x19, #0x0                   	// #0
    2140:	bl	1cb0 <cap_free@plt>
    2144:	mov	x0, x19
    2148:	ldr	x19, [sp, #16]
    214c:	ldp	x29, x30, [sp], #32
    2150:	ret

0000000000002154 <cap_set_proc@@Base>:
    2154:	stp	x29, x30, [sp, #-16]!
    2158:	mov	x29, sp
    215c:	cbz	x0, 2178 <cap_set_proc@@Base+0x24>
    2160:	mov	x1, x0
    2164:	mov	w0, #0x90d0                	// #37072
    2168:	movk	w0, #0xca, lsl #16
    216c:	ldur	w2, [x1, #-4]
    2170:	cmp	w2, w0
    2174:	b.eq	2190 <cap_set_proc@@Base+0x3c>  // b.none
    2178:	bl	1d00 <__errno_location@plt>
    217c:	mov	w1, #0x16                  	// #22
    2180:	str	w1, [x0]
    2184:	mov	w0, #0xffffffff            	// #-1
    2188:	ldp	x29, x30, [sp], #16
    218c:	ret
    2190:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    2194:	add	x2, x1, #0x8
    2198:	mov	x3, #0x0                   	// #0
    219c:	ldr	x4, [x0, #408]
    21a0:	mov	x0, #0x5b                  	// #91
    21a4:	blr	x4
    21a8:	b	2188 <cap_set_proc@@Base+0x34>

00000000000021ac <capgetp@@Base>:
    21ac:	stp	x29, x30, [sp, #-32]!
    21b0:	mov	x29, sp
    21b4:	str	x19, [sp, #16]
    21b8:	cbz	x1, 21d4 <capgetp@@Base+0x28>
    21bc:	mov	x19, x1
    21c0:	mov	w1, #0x90d0                	// #37072
    21c4:	movk	w1, #0xca, lsl #16
    21c8:	ldur	w2, [x19, #-4]
    21cc:	cmp	w2, w1
    21d0:	b.eq	21f0 <capgetp@@Base+0x44>  // b.none
    21d4:	bl	1d00 <__errno_location@plt>
    21d8:	mov	w1, #0x16                  	// #22
    21dc:	str	w1, [x0]
    21e0:	mov	w0, #0xffffffff            	// #-1
    21e4:	ldr	x19, [sp, #16]
    21e8:	ldp	x29, x30, [sp], #32
    21ec:	ret
    21f0:	str	w0, [x19, #4]
    21f4:	add	x1, x19, #0x8
    21f8:	mov	x0, x19
    21fc:	bl	1ce0 <capget@plt>
    2200:	str	wzr, [x19, #4]
    2204:	b	21e4 <capgetp@@Base+0x38>

0000000000002208 <cap_get_pid@@Base>:
    2208:	stp	x29, x30, [sp, #-48]!
    220c:	mov	x29, sp
    2210:	stp	x19, x20, [sp, #16]
    2214:	mov	w20, w0
    2218:	str	x21, [sp, #32]
    221c:	bl	1bd0 <cap_init@plt>
    2220:	mov	x19, x0
    2224:	cbz	x0, 2254 <cap_get_pid@@Base+0x4c>
    2228:	mov	x1, x0
    222c:	mov	w0, w20
    2230:	bl	1ca0 <capgetp@plt>
    2234:	cbz	w0, 2254 <cap_get_pid@@Base+0x4c>
    2238:	bl	1d00 <__errno_location@plt>
    223c:	mov	x20, x0
    2240:	mov	x0, x19
    2244:	mov	x19, #0x0                   	// #0
    2248:	ldr	w21, [x20]
    224c:	bl	1cb0 <cap_free@plt>
    2250:	str	w21, [x20]
    2254:	mov	x0, x19
    2258:	ldp	x19, x20, [sp, #16]
    225c:	ldr	x21, [sp, #32]
    2260:	ldp	x29, x30, [sp], #48
    2264:	ret

0000000000002268 <capsetp@@Base>:
    2268:	stp	x29, x30, [sp, #-32]!
    226c:	mov	x29, sp
    2270:	str	x19, [sp, #16]
    2274:	cbz	x1, 2290 <capsetp@@Base+0x28>
    2278:	mov	x19, x1
    227c:	mov	w1, #0x90d0                	// #37072
    2280:	movk	w1, #0xca, lsl #16
    2284:	ldur	w2, [x19, #-4]
    2288:	cmp	w2, w1
    228c:	b.eq	22ac <capsetp@@Base+0x44>  // b.none
    2290:	bl	1d00 <__errno_location@plt>
    2294:	mov	w1, #0x16                  	// #22
    2298:	str	w1, [x0]
    229c:	mov	w0, #0xffffffff            	// #-1
    22a0:	ldr	x19, [sp, #16]
    22a4:	ldp	x29, x30, [sp], #32
    22a8:	ret
    22ac:	str	w0, [x19, #4]
    22b0:	add	x1, x19, #0x8
    22b4:	mov	x0, x19
    22b8:	bl	1b10 <capset@plt>
    22bc:	mov	x1, #0x522                 	// #1314
    22c0:	movk	x1, #0x2008, lsl #16
    22c4:	str	x1, [x19]
    22c8:	b	22a0 <capsetp@@Base+0x38>

00000000000022cc <cap_get_bound@@Base>:
    22cc:	stp	x29, x30, [sp, #-32]!
    22d0:	sxtw	x1, w0
    22d4:	mov	x0, #0x17                  	// #23
    22d8:	mov	x29, sp
    22dc:	str	x19, [sp, #16]
    22e0:	bl	20b8 <cap_dup@@Base+0x70>
    22e4:	mov	w19, w0
    22e8:	tbz	w0, #31, 22fc <cap_get_bound@@Base+0x30>
    22ec:	neg	w19, w19
    22f0:	bl	1d00 <__errno_location@plt>
    22f4:	str	w19, [x0]
    22f8:	mov	w19, #0xffffffff            	// #-1
    22fc:	mov	w0, w19
    2300:	ldr	x19, [sp, #16]
    2304:	ldp	x29, x30, [sp], #32
    2308:	ret

000000000000230c <cap_drop_bound@@Base>:
    230c:	stp	x29, x30, [sp, #-32]!
    2310:	sxtw	x1, w0
    2314:	mov	x0, #0x18                  	// #24
    2318:	mov	x29, sp
    231c:	str	x19, [sp, #16]
    2320:	bl	20b8 <cap_dup@@Base+0x70>
    2324:	mov	w19, w0
    2328:	tbz	w0, #31, 233c <cap_drop_bound@@Base+0x30>
    232c:	neg	w19, w19
    2330:	bl	1d00 <__errno_location@plt>
    2334:	str	w19, [x0]
    2338:	mov	w19, #0xffffffff            	// #-1
    233c:	mov	w0, w19
    2340:	ldr	x19, [sp, #16]
    2344:	ldp	x29, x30, [sp], #32
    2348:	ret

000000000000234c <cap_get_ambient@@Base>:
    234c:	stp	x29, x30, [sp, #-32]!
    2350:	sxtw	x2, w0
    2354:	mov	x4, #0x0                   	// #0
    2358:	mov	x29, sp
    235c:	mov	x3, #0x0                   	// #0
    2360:	mov	x1, #0x1                   	// #1
    2364:	mov	w0, #0x2f                  	// #47
    2368:	str	x19, [sp, #16]
    236c:	bl	1d10 <prctl@plt>
    2370:	mov	w19, w0
    2374:	tbz	w0, #31, 2388 <cap_get_ambient@@Base+0x3c>
    2378:	neg	w19, w19
    237c:	bl	1d00 <__errno_location@plt>
    2380:	str	w19, [x0]
    2384:	mov	w19, #0xffffffff            	// #-1
    2388:	mov	w0, w19
    238c:	ldr	x19, [sp, #16]
    2390:	ldp	x29, x30, [sp], #32
    2394:	ret

0000000000002398 <cap_set_ambient@@Base>:
    2398:	stp	x29, x30, [sp, #-32]!
    239c:	mov	x29, sp
    23a0:	str	x19, [sp, #16]
    23a4:	cbz	w1, 23cc <cap_set_ambient@@Base+0x34>
    23a8:	cmp	w1, #0x1
    23ac:	b.eq	240c <cap_set_ambient@@Base+0x74>  // b.none
    23b0:	bl	1d00 <__errno_location@plt>
    23b4:	mov	w1, #0x16                  	// #22
    23b8:	str	w1, [x0]
    23bc:	mov	w0, #0xffffffff            	// #-1
    23c0:	ldr	x19, [sp, #16]
    23c4:	ldp	x29, x30, [sp], #32
    23c8:	ret
    23cc:	mov	x2, #0x3                   	// #3
    23d0:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x112ec>
    23d4:	sxtw	x3, w0
    23d8:	mov	x6, #0x0                   	// #0
    23dc:	mov	x5, #0x0                   	// #0
    23e0:	ldr	x7, [x1, #416]
    23e4:	mov	x4, #0x0                   	// #0
    23e8:	mov	x1, #0x2f                  	// #47
    23ec:	mov	x0, #0xa7                  	// #167
    23f0:	blr	x7
    23f4:	mov	x19, x0
    23f8:	tbz	w0, #31, 23c0 <cap_set_ambient@@Base+0x28>
    23fc:	neg	w19, w19
    2400:	bl	1d00 <__errno_location@plt>
    2404:	str	w19, [x0]
    2408:	b	23bc <cap_set_ambient@@Base+0x24>
    240c:	mov	x2, #0x2                   	// #2
    2410:	b	23d0 <cap_set_ambient@@Base+0x38>

0000000000002414 <cap_reset_ambient@@Base>:
    2414:	stp	x29, x30, [sp, #-48]!
    2418:	mov	x29, sp
    241c:	stp	x19, x20, [sp, #16]
    2420:	mov	w20, #0x0                   	// #0
    2424:	str	x21, [sp, #32]
    2428:	bl	1d00 <__errno_location@plt>
    242c:	ldr	w21, [x0]
    2430:	mov	x19, x0
    2434:	mov	w0, w20
    2438:	bl	1ac0 <cap_get_ambient@plt>
    243c:	cmn	w0, #0x1
    2440:	b.ne	245c <cap_reset_ambient@@Base+0x48>  // b.any
    2444:	mov	w0, #0x0                   	// #0
    2448:	str	w21, [x19]
    244c:	ldp	x19, x20, [sp, #16]
    2450:	ldr	x21, [sp, #32]
    2454:	ldp	x29, x30, [sp], #48
    2458:	ret
    245c:	add	w20, w20, #0x1
    2460:	cbz	w0, 2434 <cap_reset_ambient@@Base+0x20>
    2464:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    2468:	mov	x6, #0x0                   	// #0
    246c:	mov	x5, #0x0                   	// #0
    2470:	mov	x4, #0x0                   	// #0
    2474:	ldr	x7, [x0, #416]
    2478:	mov	x3, #0x0                   	// #0
    247c:	mov	x2, #0x4                   	// #4
    2480:	mov	x1, #0x2f                  	// #47
    2484:	mov	x0, #0xa7                  	// #167
    2488:	blr	x7
    248c:	tbz	w0, #31, 244c <cap_reset_ambient@@Base+0x38>
    2490:	neg	w1, w0
    2494:	mov	w0, #0xffffffff            	// #-1
    2498:	str	w1, [x19]
    249c:	b	244c <cap_reset_ambient@@Base+0x38>

00000000000024a0 <cap_get_secbits@@Base>:
    24a0:	mov	x2, #0x0                   	// #0
    24a4:	mov	x1, #0x0                   	// #0
    24a8:	mov	w0, #0x1b                  	// #27
    24ac:	b	1d10 <prctl@plt>

00000000000024b0 <cap_set_secbits@@Base>:
    24b0:	mov	w1, w0
    24b4:	mov	x0, #0x1c                  	// #28
    24b8:	b	20b8 <cap_dup@@Base+0x70>

00000000000024bc <cap_set_mode@@Base>:
    24bc:	stp	x29, x30, [sp, #-64]!
    24c0:	mov	x29, sp
    24c4:	str	x21, [sp, #32]
    24c8:	mov	w21, w0
    24cc:	mov	w0, #0x8                   	// #8
    24d0:	stp	x19, x20, [sp, #16]
    24d4:	str	w0, [sp, #56]
    24d8:	bl	1c10 <cap_get_proc@plt>
    24dc:	mov	w4, #0x1                   	// #1
    24e0:	add	x3, sp, #0x38
    24e4:	mov	w2, w4
    24e8:	mov	w1, #0x0                   	// #0
    24ec:	mov	x20, x0
    24f0:	bl	1cc0 <cap_set_flag@plt>
    24f4:	mov	w19, w0
    24f8:	mov	x0, x20
    24fc:	bl	1b90 <cap_set_proc@plt>
    2500:	orr	w19, w0, w19
    2504:	cbnz	w19, 2568 <cap_set_mode@@Base+0xac>
    2508:	cmp	w21, #0x2
    250c:	b.hi	259c <cap_set_mode@@Base+0xe0>  // b.pmore
    2510:	cbz	w21, 25a4 <cap_set_mode@@Base+0xe8>
    2514:	mov	x0, x20
    2518:	mov	w1, #0x2                   	// #2
    251c:	bl	1a90 <cap_clear_flag@plt>
    2520:	mov	w0, #0x0                   	// #0
    2524:	bl	1ac0 <cap_get_ambient@plt>
    2528:	tbnz	w0, #31, 25b8 <cap_set_mode@@Base+0xfc>
    252c:	bl	1b50 <cap_reset_ambient@plt>
    2530:	mov	w19, w0
    2534:	cbnz	w0, 2568 <cap_set_mode@@Base+0xac>
    2538:	mov	w0, #0xef                  	// #239
    253c:	bl	1cf0 <cap_set_secbits@plt>
    2540:	mov	w19, w0
    2544:	cmp	w21, #0x1
    2548:	b.ne	2568 <cap_set_mode@@Base+0xac>  // b.any
    254c:	mov	w21, #0x0                   	// #0
    2550:	mov	w0, w21
    2554:	bl	1b60 <cap_get_bound@plt>
    2558:	tbz	w0, #31, 25c0 <cap_set_mode@@Base+0x104>
    255c:	mov	x0, x20
    2560:	mov	w1, #0x1                   	// #1
    2564:	bl	1a90 <cap_clear_flag@plt>
    2568:	mov	w1, #0x0                   	// #0
    256c:	mov	x0, x20
    2570:	bl	1a90 <cap_clear_flag@plt>
    2574:	mov	x0, x20
    2578:	bl	1b90 <cap_set_proc@plt>
    257c:	orr	w19, w0, w19
    2580:	mov	x0, x20
    2584:	bl	1cb0 <cap_free@plt>
    2588:	mov	w0, w19
    258c:	ldp	x19, x20, [sp, #16]
    2590:	ldr	x21, [sp, #32]
    2594:	ldp	x29, x30, [sp], #64
    2598:	ret
    259c:	cmp	w21, #0x3
    25a0:	b.eq	2520 <cap_set_mode@@Base+0x64>  // b.none
    25a4:	bl	1d00 <__errno_location@plt>
    25a8:	mov	w19, #0xffffffff            	// #-1
    25ac:	mov	w1, #0x16                  	// #22
    25b0:	str	w1, [x0]
    25b4:	b	2568 <cap_set_mode@@Base+0xac>
    25b8:	mov	w0, #0x2f                  	// #47
    25bc:	b	253c <cap_set_mode@@Base+0x80>
    25c0:	mov	w0, w21
    25c4:	add	w21, w21, #0x1
    25c8:	bl	1c30 <cap_drop_bound@plt>
    25cc:	b	2550 <cap_set_mode@@Base+0x94>

00000000000025d0 <cap_get_mode@@Base>:
    25d0:	stp	x29, x30, [sp, #-48]!
    25d4:	mov	x29, sp
    25d8:	stp	x19, x20, [sp, #16]
    25dc:	stp	x21, x22, [sp, #32]
    25e0:	bl	1a80 <cap_get_secbits@plt>
    25e4:	mov	w21, w0
    25e8:	mov	w0, #0x2f                  	// #47
    25ec:	and	w0, w21, w0
    25f0:	cmp	w0, #0x2f
    25f4:	b.ne	2628 <cap_get_mode@@Base+0x58>  // b.any
    25f8:	bl	1d00 <__errno_location@plt>
    25fc:	ldr	w22, [x0]
    2600:	mov	x19, x0
    2604:	mov	w20, #0x0                   	// #0
    2608:	mov	w0, w20
    260c:	bl	1ac0 <cap_get_ambient@plt>
    2610:	cmn	w0, #0x1
    2614:	b.ne	2630 <cap_get_mode@@Base+0x60>  // b.any
    2618:	str	w22, [x19]
    261c:	cmp	w21, #0xef
    2620:	ccmp	w20, #0x0, #0x4, ne  // ne = any
    2624:	b.eq	263c <cap_get_mode@@Base+0x6c>  // b.none
    2628:	mov	w0, #0x0                   	// #0
    262c:	b	267c <cap_get_mode@@Base+0xac>
    2630:	cbnz	w0, 2628 <cap_get_mode@@Base+0x58>
    2634:	add	w20, w20, #0x1
    2638:	b	2608 <cap_get_mode@@Base+0x38>
    263c:	bl	1c10 <cap_get_proc@plt>
    2640:	mov	x20, x0
    2644:	bl	1bd0 <cap_init@plt>
    2648:	mov	x21, x0
    264c:	mov	x1, x20
    2650:	bl	1cd0 <cap_compare@plt>
    2654:	mov	w19, w0
    2658:	mov	x0, x21
    265c:	bl	1cb0 <cap_free@plt>
    2660:	mov	x0, x20
    2664:	and	w20, w19, #0x4
    2668:	bl	1cb0 <cap_free@plt>
    266c:	tbnz	w19, #2, 26a8 <cap_get_mode@@Base+0xd8>
    2670:	tst	x19, #0x3
    2674:	b.eq	268c <cap_get_mode@@Base+0xbc>  // b.none
    2678:	mov	w0, #0x2                   	// #2
    267c:	ldp	x19, x20, [sp, #16]
    2680:	ldp	x21, x22, [sp, #32]
    2684:	ldp	x29, x30, [sp], #48
    2688:	ret
    268c:	mov	w0, w20
    2690:	bl	1b60 <cap_get_bound@plt>
    2694:	cmn	w0, #0x1
    2698:	b.eq	26b0 <cap_get_mode@@Base+0xe0>  // b.none
    269c:	cbnz	w0, 2678 <cap_get_mode@@Base+0xa8>
    26a0:	add	w20, w20, #0x1
    26a4:	b	268c <cap_get_mode@@Base+0xbc>
    26a8:	mov	w0, #0x3                   	// #3
    26ac:	b	267c <cap_get_mode@@Base+0xac>
    26b0:	mov	w0, #0x1                   	// #1
    26b4:	b	267c <cap_get_mode@@Base+0xac>

00000000000026b8 <cap_setuid@@Base>:
    26b8:	stp	x29, x30, [sp, #-64]!
    26bc:	mov	x29, sp
    26c0:	stp	x21, x22, [sp, #32]
    26c4:	mov	w22, w0
    26c8:	mov	w0, #0x7                   	// #7
    26cc:	stp	x19, x20, [sp, #16]
    26d0:	str	w0, [sp, #56]
    26d4:	bl	1c10 <cap_get_proc@plt>
    26d8:	mov	w4, #0x1                   	// #1
    26dc:	add	x3, sp, #0x38
    26e0:	mov	w2, w4
    26e4:	mov	x20, x0
    26e8:	mov	w1, #0x0                   	// #0
    26ec:	bl	1cc0 <cap_set_flag@plt>
    26f0:	mov	x1, #0x1                   	// #1
    26f4:	mov	x0, #0x8                   	// #8
    26f8:	bl	20b8 <cap_dup@@Base+0x70>
    26fc:	mov	x0, x20
    2700:	bl	1b90 <cap_set_proc@plt>
    2704:	mov	w19, w0
    2708:	bl	1d00 <__errno_location@plt>
    270c:	mov	x21, x0
    2710:	cbnz	w19, 2750 <cap_setuid@@Base+0x98>
    2714:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    2718:	ldr	w0, [x0, #400]
    271c:	cbz	w0, 2794 <cap_setuid@@Base+0xdc>
    2720:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    2724:	mov	w1, w22
    2728:	mov	x3, #0x0                   	// #0
    272c:	mov	x2, #0x0                   	// #0
    2730:	ldr	x4, [x0, #408]
    2734:	mov	x0, #0x92                  	// #146
    2738:	blr	x4
    273c:	mov	w19, w0
    2740:	tbz	w0, #31, 2750 <cap_setuid@@Base+0x98>
    2744:	neg	w1, w0
    2748:	mov	w19, #0xffffffff            	// #-1
    274c:	str	w1, [x21]
    2750:	ldr	w22, [x21]
    2754:	mov	x1, #0x0                   	// #0
    2758:	mov	x0, #0x8                   	// #8
    275c:	bl	20b8 <cap_dup@@Base+0x70>
    2760:	mov	w1, #0x0                   	// #0
    2764:	mov	x0, x20
    2768:	bl	1a90 <cap_clear_flag@plt>
    276c:	mov	x0, x20
    2770:	bl	1b90 <cap_set_proc@plt>
    2774:	mov	x0, x20
    2778:	bl	1cb0 <cap_free@plt>
    277c:	mov	w0, w19
    2780:	ldp	x19, x20, [sp, #16]
    2784:	str	w22, [x21]
    2788:	ldp	x21, x22, [sp, #32]
    278c:	ldp	x29, x30, [sp], #64
    2790:	ret
    2794:	mov	w0, w22
    2798:	bl	1a40 <setuid@plt>
    279c:	mov	w19, w0
    27a0:	b	2750 <cap_setuid@@Base+0x98>

00000000000027a4 <cap_setgroups@@Base>:
    27a4:	stp	x29, x30, [sp, #-80]!
    27a8:	mov	x29, sp
    27ac:	stp	x23, x24, [sp, #48]
    27b0:	mov	w23, w0
    27b4:	mov	w0, #0x6                   	// #6
    27b8:	stp	x19, x20, [sp, #16]
    27bc:	stp	x21, x22, [sp, #32]
    27c0:	mov	x21, x1
    27c4:	mov	x22, x2
    27c8:	str	w0, [sp, #72]
    27cc:	bl	1c10 <cap_get_proc@plt>
    27d0:	mov	w4, #0x1                   	// #1
    27d4:	add	x3, sp, #0x48
    27d8:	mov	w2, w4
    27dc:	mov	w1, #0x0                   	// #0
    27e0:	mov	x20, x0
    27e4:	bl	1cc0 <cap_set_flag@plt>
    27e8:	mov	x0, x20
    27ec:	bl	1b90 <cap_set_proc@plt>
    27f0:	mov	w19, w0
    27f4:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x112ec>
    27f8:	ldr	w0, [x0, #400]
    27fc:	cbz	w0, 289c <cap_setgroups@@Base+0xf8>
    2800:	cbnz	w19, 2844 <cap_setgroups@@Base+0xa0>
    2804:	adrp	x24, 15000 <cap_set_nsowner@@Base+0x112ec>
    2808:	mov	w1, w23
    280c:	mov	x3, #0x0                   	// #0
    2810:	mov	x2, #0x0                   	// #0
    2814:	ldr	x4, [x24, #408]
    2818:	mov	x0, #0x90                  	// #144
    281c:	blr	x4
    2820:	mov	w19, w0
    2824:	cbnz	w0, 2844 <cap_setgroups@@Base+0xa0>
    2828:	ldr	x4, [x24, #408]
    282c:	mov	x2, x22
    2830:	mov	x1, x21
    2834:	mov	x3, #0x0                   	// #0
    2838:	mov	x0, #0x9f                  	// #159
    283c:	blr	x4
    2840:	mov	w19, w0
    2844:	tbz	w19, #31, 2858 <cap_setgroups@@Base+0xb4>
    2848:	neg	w19, w19
    284c:	bl	1d00 <__errno_location@plt>
    2850:	str	w19, [x0]
    2854:	mov	w19, #0xffffffff            	// #-1
    2858:	bl	1d00 <__errno_location@plt>
    285c:	mov	x21, x0
    2860:	mov	w1, #0x0                   	// #0
    2864:	mov	x0, x20
    2868:	ldr	w22, [x21]
    286c:	bl	1a90 <cap_clear_flag@plt>
    2870:	mov	x0, x20
    2874:	bl	1b90 <cap_set_proc@plt>
    2878:	mov	x0, x20
    287c:	bl	1cb0 <cap_free@plt>
    2880:	mov	w0, w19
    2884:	ldp	x19, x20, [sp, #16]
    2888:	ldp	x23, x24, [sp, #48]
    288c:	str	w22, [x21]
    2890:	ldp	x21, x22, [sp, #32]
    2894:	ldp	x29, x30, [sp], #80
    2898:	ret
    289c:	cbnz	w19, 2858 <cap_setgroups@@Base+0xb4>
    28a0:	mov	w0, w23
    28a4:	bl	1bc0 <setgid@plt>
    28a8:	mov	w19, w0
    28ac:	cbnz	w0, 2858 <cap_setgroups@@Base+0xb4>
    28b0:	mov	x1, x22
    28b4:	mov	x0, x21
    28b8:	bl	1c70 <setgroups@plt>
    28bc:	mov	w19, w0
    28c0:	b	2858 <cap_setgroups@@Base+0xb4>

00000000000028c4 <cap_size@@Base>:
    28c4:	mov	x0, #0x1d                  	// #29
    28c8:	ret

00000000000028cc <cap_copy_ext@@Base>:
    28cc:	cbz	x1, 28f0 <cap_copy_ext@@Base+0x24>
    28d0:	ldur	w4, [x1, #-4]
    28d4:	mov	w3, #0x90d0                	// #37072
    28d8:	movk	w3, #0xca, lsl #16
    28dc:	cmp	w4, w3
    28e0:	b.ne	28f0 <cap_copy_ext@@Base+0x24>  // b.any
    28e4:	cmp	x0, #0x0
    28e8:	ccmp	x2, #0x1c, #0x4, ne  // ne = any
    28ec:	b.gt	2910 <cap_copy_ext@@Base+0x44>
    28f0:	stp	x29, x30, [sp, #-16]!
    28f4:	mov	x29, sp
    28f8:	bl	1d00 <__errno_location@plt>
    28fc:	mov	w1, #0x16                  	// #22
    2900:	str	w1, [x0]
    2904:	mov	x0, #0xffffffffffffffff    	// #-1
    2908:	ldp	x29, x30, [sp], #16
    290c:	ret
    2910:	mov	w2, #0xc290                	// #49808
    2914:	add	x1, x1, #0x8
    2918:	movk	w2, #0x5101, lsl #16
    291c:	str	w2, [x0]
    2920:	mov	w2, #0x8                   	// #8
    2924:	strb	w2, [x0, #4]
    2928:	add	x2, x0, #0x5
    292c:	add	x0, x0, #0x8
    2930:	ldr	w3, [x1]
    2934:	add	x2, x2, #0x1
    2938:	sturb	w3, [x2, #-1]
    293c:	add	x1, x1, #0x4
    2940:	lsr	w4, w3, #8
    2944:	strb	w4, [x2, #2]
    2948:	lsr	w4, w3, #16
    294c:	lsr	w3, w3, #24
    2950:	strb	w4, [x2, #5]
    2954:	strb	w3, [x2, #8]
    2958:	ldr	w3, [x1, #8]
    295c:	strb	w3, [x2, #11]
    2960:	lsr	w4, w3, #8
    2964:	strb	w4, [x2, #14]
    2968:	lsr	w4, w3, #16
    296c:	lsr	w3, w3, #24
    2970:	strb	w4, [x2, #17]
    2974:	strb	w3, [x2, #20]
    2978:	cmp	x2, x0
    297c:	b.ne	2930 <cap_copy_ext@@Base+0x64>  // b.any
    2980:	mov	x0, #0x1d                  	// #29
    2984:	ret

0000000000002988 <cap_copy_int@@Base>:
    2988:	stp	x29, x30, [sp, #-32]!
    298c:	mov	x29, sp
    2990:	str	x19, [sp, #16]
    2994:	cbz	x0, 29b0 <cap_copy_int@@Base+0x28>
    2998:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    299c:	mov	x19, x0
    29a0:	add	x1, x1, #0xd50
    29a4:	mov	x2, #0x4                   	// #4
    29a8:	bl	1bf0 <memcmp@plt>
    29ac:	cbz	w0, 29cc <cap_copy_int@@Base+0x44>
    29b0:	bl	1d00 <__errno_location@plt>
    29b4:	mov	w1, #0x16                  	// #22
    29b8:	str	w1, [x0]
    29bc:	mov	x0, #0x0                   	// #0
    29c0:	ldr	x19, [sp, #16]
    29c4:	ldp	x29, x30, [sp], #32
    29c8:	ret
    29cc:	bl	1bd0 <cap_init@plt>
    29d0:	cbz	x0, 29c0 <cap_copy_int@@Base+0x38>
    29d4:	ldrb	w5, [x19, #4]
    29d8:	mov	x6, #0x0                   	// #0
    29dc:	add	x8, x0, x6, lsl #2
    29e0:	sxtw	x7, w6
    29e4:	mov	w1, #0x0                   	// #0
    29e8:	mov	w9, #0x0                   	// #0
    29ec:	b	29f4 <cap_copy_int@@Base+0x6c>
    29f0:	mov	w9, #0x1                   	// #1
    29f4:	cmp	w5, w1
    29f8:	b.eq	2a9c <cap_copy_int@@Base+0x114>  // b.none
    29fc:	sbfiz	x3, x1, #1, #32
    2a00:	add	w2, w1, #0x1
    2a04:	add	x3, x3, w1, sxtw
    2a08:	cmp	w5, w2
    2a0c:	add	x3, x19, x3
    2a10:	add	x3, x3, x7
    2a14:	ldrb	w4, [x3, #5]
    2a18:	b.eq	2aa4 <cap_copy_int@@Base+0x11c>  // b.none
    2a1c:	sbfiz	x10, x2, #1, #32
    2a20:	add	w3, w1, #0x2
    2a24:	add	x2, x10, w2, sxtw
    2a28:	cmp	w5, w3
    2a2c:	add	x2, x19, x2
    2a30:	add	x2, x2, x7
    2a34:	ldrb	w2, [x2, #5]
    2a38:	orr	w4, w4, w2, lsl #8
    2a3c:	b.eq	2aa4 <cap_copy_int@@Base+0x11c>  // b.none
    2a40:	sbfiz	x10, x3, #1, #32
    2a44:	add	w2, w1, #0x3
    2a48:	add	x3, x10, w3, sxtw
    2a4c:	cmp	w5, w2
    2a50:	add	x3, x19, x3
    2a54:	add	x3, x3, x7
    2a58:	ldrb	w3, [x3, #5]
    2a5c:	orr	w4, w4, w3, lsl #16
    2a60:	b.eq	2aa4 <cap_copy_int@@Base+0x11c>  // b.none
    2a64:	sbfiz	x3, x2, #1, #32
    2a68:	add	w1, w1, #0x4
    2a6c:	add	x2, x3, w2, sxtw
    2a70:	add	x2, x19, x2
    2a74:	add	x2, x2, x7
    2a78:	ldrb	w2, [x2, #5]
    2a7c:	orr	w4, w4, w2, lsl #24
    2a80:	str	w4, [x8, #8]
    2a84:	add	x8, x8, #0xc
    2a88:	cbz	w9, 29f0 <cap_copy_int@@Base+0x68>
    2a8c:	add	x6, x6, #0x1
    2a90:	cmp	x6, #0x3
    2a94:	b.ne	29dc <cap_copy_int@@Base+0x54>  // b.any
    2a98:	b	29c0 <cap_copy_int@@Base+0x38>
    2a9c:	mov	w4, #0x0                   	// #0
    2aa0:	b	2a80 <cap_copy_int@@Base+0xf8>
    2aa4:	mov	w1, w5
    2aa8:	b	2a80 <cap_copy_int@@Base+0xf8>

0000000000002aac <cap_get_flag@@Base>:
    2aac:	cmp	x3, #0x0
    2ab0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    2ab4:	b.eq	2b0c <cap_get_flag@@Base+0x60>  // b.none
    2ab8:	ldur	w5, [x0, #-4]
    2abc:	mov	w4, #0x90d0                	// #37072
    2ac0:	movk	w4, #0xca, lsl #16
    2ac4:	cmp	w5, w4
    2ac8:	b.ne	2b0c <cap_get_flag@@Base+0x60>  // b.any
    2acc:	cmp	w1, #0x3f
    2ad0:	ccmp	w2, #0x2, #0x2, ls  // ls = plast
    2ad4:	b.hi	2b0c <cap_get_flag@@Base+0x60>  // b.pmore
    2ad8:	asr	w4, w1, #5
    2adc:	sbfiz	x5, x4, #1, #32
    2ae0:	add	x4, x5, w4, sxtw
    2ae4:	add	x2, x4, w2, uxtw
    2ae8:	add	x2, x0, x2, lsl #2
    2aec:	mov	w0, #0x1                   	// #1
    2af0:	lsl	w1, w0, w1
    2af4:	ldr	w0, [x2, #8]
    2af8:	tst	w1, w0
    2afc:	cset	w0, ne  // ne = any
    2b00:	str	w0, [x3]
    2b04:	mov	w0, #0x0                   	// #0
    2b08:	ret
    2b0c:	stp	x29, x30, [sp, #-16]!
    2b10:	mov	x29, sp
    2b14:	bl	1d00 <__errno_location@plt>
    2b18:	mov	w1, #0x16                  	// #22
    2b1c:	str	w1, [x0]
    2b20:	mov	w0, #0xffffffff            	// #-1
    2b24:	ldp	x29, x30, [sp], #16
    2b28:	ret

0000000000002b2c <cap_set_flag@@Base>:
    2b2c:	cbz	x0, 2bb8 <cap_set_flag@@Base+0x8c>
    2b30:	ldur	w6, [x0, #-4]
    2b34:	mov	w5, #0x90d0                	// #37072
    2b38:	movk	w5, #0xca, lsl #16
    2b3c:	cmp	w6, w5
    2b40:	b.ne	2bb8 <cap_set_flag@@Base+0x8c>  // b.any
    2b44:	sub	w5, w2, #0x1
    2b48:	cmp	w5, #0x3e
    2b4c:	b.hi	2bb8 <cap_set_flag@@Base+0x8c>  // b.pmore
    2b50:	cmp	w1, #0x2
    2b54:	ccmp	w4, #0x1, #0x2, ls  // ls = plast
    2b58:	b.hi	2bb8 <cap_set_flag@@Base+0x8c>  // b.pmore
    2b5c:	mov	w1, w1
    2b60:	mov	x8, #0x0                   	// #0
    2b64:	mov	w9, #0x1                   	// #1
    2b68:	ldr	w7, [x3, x8, lsl #2]
    2b6c:	cmp	w7, #0x3f
    2b70:	b.hi	2ba4 <cap_set_flag@@Base+0x78>  // b.pmore
    2b74:	asr	w5, w7, #5
    2b78:	cmp	w4, #0x1
    2b7c:	lsl	w7, w9, w7
    2b80:	sbfiz	x6, x5, #1, #32
    2b84:	add	x5, x6, w5, sxtw
    2b88:	add	x5, x5, x1
    2b8c:	add	x5, x0, x5, lsl #2
    2b90:	ldr	w6, [x5, #8]
    2b94:	bic	w10, w6, w7
    2b98:	orr	w6, w6, w7
    2b9c:	csel	w6, w6, w10, eq  // eq = none
    2ba0:	str	w6, [x5, #8]
    2ba4:	add	x8, x8, #0x1
    2ba8:	cmp	w2, w8
    2bac:	b.gt	2b68 <cap_set_flag@@Base+0x3c>
    2bb0:	mov	w0, #0x0                   	// #0
    2bb4:	ret
    2bb8:	stp	x29, x30, [sp, #-16]!
    2bbc:	mov	x29, sp
    2bc0:	bl	1d00 <__errno_location@plt>
    2bc4:	mov	w1, #0x16                  	// #22
    2bc8:	str	w1, [x0]
    2bcc:	mov	w0, #0xffffffff            	// #-1
    2bd0:	ldp	x29, x30, [sp], #16
    2bd4:	ret

0000000000002bd8 <cap_clear@@Base>:
    2bd8:	cbz	x0, 2c00 <cap_clear@@Base+0x28>
    2bdc:	ldur	w2, [x0, #-4]
    2be0:	mov	w1, #0x90d0                	// #37072
    2be4:	movk	w1, #0xca, lsl #16
    2be8:	cmp	w2, w1
    2bec:	b.ne	2c00 <cap_clear@@Base+0x28>  // b.any
    2bf0:	stp	xzr, xzr, [x0, #8]
    2bf4:	str	xzr, [x0, #24]
    2bf8:	mov	w0, #0x0                   	// #0
    2bfc:	ret
    2c00:	stp	x29, x30, [sp, #-16]!
    2c04:	mov	x29, sp
    2c08:	bl	1d00 <__errno_location@plt>
    2c0c:	mov	w1, #0x16                  	// #22
    2c10:	str	w1, [x0]
    2c14:	mov	w0, #0xffffffff            	// #-1
    2c18:	ldp	x29, x30, [sp], #16
    2c1c:	ret

0000000000002c20 <cap_clear_flag@@Base>:
    2c20:	cmp	w1, #0x2
    2c24:	b.hi	2c54 <cap_clear_flag@@Base+0x34>  // b.pmore
    2c28:	cbz	x0, 2c54 <cap_clear_flag@@Base+0x34>
    2c2c:	ldur	w3, [x0, #-4]
    2c30:	mov	w2, #0x90d0                	// #37072
    2c34:	movk	w2, #0xca, lsl #16
    2c38:	cmp	w3, w2
    2c3c:	b.ne	2c54 <cap_clear_flag@@Base+0x34>  // b.any
    2c40:	add	x0, x0, w1, uxtw #2
    2c44:	str	wzr, [x0, #8]
    2c48:	str	wzr, [x0, #20]
    2c4c:	mov	w0, #0x0                   	// #0
    2c50:	ret
    2c54:	stp	x29, x30, [sp, #-16]!
    2c58:	mov	x29, sp
    2c5c:	bl	1d00 <__errno_location@plt>
    2c60:	mov	w1, #0x16                  	// #22
    2c64:	str	w1, [x0]
    2c68:	mov	w0, #0xffffffff            	// #-1
    2c6c:	ldp	x29, x30, [sp], #16
    2c70:	ret

0000000000002c74 <cap_compare@@Base>:
    2c74:	cbz	x0, 2c9c <cap_compare@@Base+0x28>
    2c78:	ldur	w2, [x0, #-4]
    2c7c:	mov	w3, #0x90d0                	// #37072
    2c80:	movk	w3, #0xca, lsl #16
    2c84:	cmp	w2, w3
    2c88:	b.ne	2c9c <cap_compare@@Base+0x28>  // b.any
    2c8c:	cbz	x1, 2c9c <cap_compare@@Base+0x28>
    2c90:	ldur	w3, [x1, #-4]
    2c94:	cmp	w3, w2
    2c98:	b.eq	2cbc <cap_compare@@Base+0x48>  // b.none
    2c9c:	stp	x29, x30, [sp, #-16]!
    2ca0:	mov	x29, sp
    2ca4:	bl	1d00 <__errno_location@plt>
    2ca8:	mov	w1, #0x16                  	// #22
    2cac:	str	w1, [x0]
    2cb0:	mov	w0, #0xffffffff            	// #-1
    2cb4:	ldp	x29, x30, [sp], #16
    2cb8:	ret
    2cbc:	ldp	w3, w5, [x0, #8]
    2cc0:	ldr	w2, [x1, #8]
    2cc4:	ldr	w6, [x0, #20]
    2cc8:	cmp	w3, w2
    2ccc:	ldr	w3, [x0, #16]
    2cd0:	ldr	w2, [x1, #16]
    2cd4:	cset	w4, ne  // ne = any
    2cd8:	cmp	w3, w2
    2cdc:	ldr	w2, [x1, #12]
    2ce0:	cset	w3, ne  // ne = any
    2ce4:	cmp	w5, w2
    2ce8:	ldr	w5, [x1, #20]
    2cec:	cset	w2, ne  // ne = any
    2cf0:	cmp	w6, w5
    2cf4:	cset	w5, ne  // ne = any
    2cf8:	orr	w3, w5, w3, lsl #2
    2cfc:	ldr	w5, [x0, #28]
    2d00:	orr	w3, w3, w4
    2d04:	ldr	w4, [x1, #28]
    2d08:	cmp	w5, w4
    2d0c:	cset	w4, ne  // ne = any
    2d10:	lsl	w4, w4, #2
    2d14:	orr	w2, w4, w2, lsl #1
    2d18:	orr	w2, w2, w3
    2d1c:	ldr	w3, [x0, #24]
    2d20:	ldr	w0, [x1, #24]
    2d24:	cmp	w3, w0
    2d28:	cset	w0, ne  // ne = any
    2d2c:	orr	w0, w2, w0, lsl #1
    2d30:	ret
    2d34:	mov	w2, w2
    2d38:	mov	w5, #0x3                   	// #3
    2d3c:	mov	w4, w3
    2d40:	umaddl	x3, w3, w5, x2
    2d44:	add	x0, x0, x3, lsl #2
    2d48:	sub	x4, x4, #0x1
    2d4c:	sub	x0, x0, #0xc
    2d50:	cmn	w4, #0x1
    2d54:	b.ne	2d5c <cap_compare@@Base+0xe8>  // b.any
    2d58:	ret
    2d5c:	ldr	w2, [x1, x4, lsl #2]
    2d60:	ldr	w3, [x0, #8]
    2d64:	bic	w2, w3, w2
    2d68:	str	w2, [x0, #8]
    2d6c:	b	2d48 <cap_compare@@Base+0xd4>
    2d70:	asr	w3, w1, #5
    2d74:	mov	w4, #0x1                   	// #1
    2d78:	lsl	w1, w4, w1
    2d7c:	mov	x5, x0
    2d80:	sxtw	x2, w3
    2d84:	mov	x3, #0xc                   	// #12
    2d88:	madd	x4, x2, x3, x0
    2d8c:	ldp	w0, w4, [x4, #8]
    2d90:	tst	w1, w0
    2d94:	cset	w0, ne  // ne = any
    2d98:	tst	w1, w4
    2d9c:	b.eq	2da4 <cap_compare@@Base+0x130>  // b.none
    2da0:	orr	w0, w0, #0x2
    2da4:	madd	x2, x2, x3, x5
    2da8:	ldr	w2, [x2, #16]
    2dac:	tst	w1, w2
    2db0:	b.eq	2db8 <cap_compare@@Base+0x144>  // b.none
    2db4:	orr	w0, w0, #0x4
    2db8:	ret
    2dbc:	stp	x29, x30, [sp, #-80]!
    2dc0:	mov	x29, sp
    2dc4:	stp	x21, x22, [sp, #32]
    2dc8:	mov	x21, x0
    2dcc:	mov	x22, x1
    2dd0:	stp	x19, x20, [sp, #16]
    2dd4:	mov	x19, #0x0                   	// #0
    2dd8:	stp	x23, x24, [sp, #48]
    2ddc:	str	x25, [sp, #64]
    2de0:	ldrb	w24, [x22, x19]
    2de4:	add	x20, x21, x19
    2de8:	ldrb	w25, [x21, x19]
    2dec:	ldrb	w23, [x21, x19]
    2df0:	cbz	w24, 2e14 <cap_compare@@Base+0x1a0>
    2df4:	bl	1b00 <__ctype_tolower_loc@plt>
    2df8:	add	x19, x19, #0x1
    2dfc:	ldr	x0, [x0]
    2e00:	ldr	w0, [x0, x23, lsl #2]
    2e04:	cmp	w0, w24
    2e08:	b.eq	2de0 <cap_compare@@Base+0x16c>  // b.none
    2e0c:	mov	x20, #0x0                   	// #0
    2e10:	b	2e2c <cap_compare@@Base+0x1b8>
    2e14:	bl	1c00 <__ctype_b_loc@plt>
    2e18:	ldr	x0, [x0]
    2e1c:	ldrh	w0, [x0, x23, lsl #1]
    2e20:	tbnz	w0, #3, 2e0c <cap_compare@@Base+0x198>
    2e24:	cmp	w25, #0x5f
    2e28:	csel	x20, x20, xzr, ne  // ne = any
    2e2c:	mov	x0, x20
    2e30:	ldp	x19, x20, [sp, #16]
    2e34:	ldp	x21, x22, [sp, #32]
    2e38:	ldp	x23, x24, [sp, #48]
    2e3c:	ldr	x25, [sp, #64]
    2e40:	ldp	x29, x30, [sp], #80
    2e44:	ret
    2e48:	stp	x29, x30, [sp, #-64]!
    2e4c:	mov	x29, sp
    2e50:	stp	x19, x20, [sp, #16]
    2e54:	mov	x20, x0
    2e58:	ldr	x19, [x0]
    2e5c:	stp	x21, x22, [sp, #32]
    2e60:	str	x19, [sp, #56]
    2e64:	bl	1c00 <__ctype_b_loc@plt>
    2e68:	ldr	x2, [x0]
    2e6c:	ldrb	w0, [x19]
    2e70:	ldrh	w0, [x2, x0, lsl #1]
    2e74:	tbz	w0, #11, 2f0c <cap_compare@@Base+0x298>
    2e78:	add	x1, sp, #0x38
    2e7c:	mov	x0, x19
    2e80:	mov	w2, #0x0                   	// #0
    2e84:	bl	1a50 <strtoul@plt>
    2e88:	cmp	x0, #0x3f
    2e8c:	b.ls	2ea4 <cap_compare@@Base+0x230>  // b.plast
    2e90:	mov	w0, #0xffffffff            	// #-1
    2e94:	ldp	x19, x20, [sp, #16]
    2e98:	ldp	x21, x22, [sp, #32]
    2e9c:	ldp	x29, x30, [sp], #64
    2ea0:	ret
    2ea4:	ldr	x1, [sp, #56]
    2ea8:	str	x1, [x20]
    2eac:	b	2e94 <cap_compare@@Base+0x220>
    2eb0:	ubfiz	x3, x0, #1, #8
    2eb4:	ldrh	w3, [x2, x3]
    2eb8:	tbnz	w3, #10, 2ec4 <cap_compare@@Base+0x250>
    2ebc:	cmp	w0, #0x5f
    2ec0:	b.ne	2ed0 <cap_compare@@Base+0x25c>  // b.any
    2ec4:	add	w1, w1, #0x1
    2ec8:	ldrb	w0, [x19, w1, uxtw]
    2ecc:	cbnz	w0, 2eb0 <cap_compare@@Base+0x23c>
    2ed0:	adrp	x21, 14000 <cap_set_nsowner@@Base+0x102ec>
    2ed4:	bl	1aa0 <cap_max_bits@plt>
    2ed8:	ldr	x22, [sp, #56]
    2edc:	sub	w19, w0, #0x1
    2ee0:	ldr	x21, [x21, #4032]
    2ee4:	cmn	w19, #0x1
    2ee8:	b.eq	2e90 <cap_compare@@Base+0x21c>  // b.none
    2eec:	ldr	x1, [x21, w19, uxtw #3]
    2ef0:	cbz	x1, 2f14 <cap_compare@@Base+0x2a0>
    2ef4:	mov	x0, x22
    2ef8:	bl	2dbc <cap_compare@@Base+0x148>
    2efc:	cbz	x0, 2f14 <cap_compare@@Base+0x2a0>
    2f00:	str	x0, [x20]
    2f04:	mov	w0, w19
    2f08:	b	2e94 <cap_compare@@Base+0x220>
    2f0c:	mov	w1, #0x0                   	// #0
    2f10:	b	2ec8 <cap_compare@@Base+0x254>
    2f14:	sub	w19, w19, #0x1
    2f18:	b	2ee4 <cap_compare@@Base+0x270>
    2f1c:	stp	x29, x30, [sp, #-32]!
    2f20:	mov	x29, sp
    2f24:	stp	x19, x20, [sp, #16]
    2f28:	mov	w19, w1
    2f2c:	mov	x20, x0
    2f30:	bl	1aa0 <cap_max_bits@plt>
    2f34:	negs	w1, w0
    2f38:	and	w1, w1, #0x1f
    2f3c:	and	w2, w0, #0x1f
    2f40:	csneg	w2, w2, w1, mi  // mi = first
    2f44:	mov	x1, #0x1                   	// #1
    2f48:	lsl	x1, x1, x2
    2f4c:	sub	w1, w1, #0x1
    2f50:	sub	w3, w19, #0x1
    2f54:	cbnz	w19, 2f64 <cap_compare@@Base+0x2f0>
    2f58:	ldp	x19, x20, [sp, #16]
    2f5c:	ldp	x29, x30, [sp], #32
    2f60:	ret
    2f64:	lsl	w2, w19, #5
    2f68:	cmp	w0, w19, lsl #5
    2f6c:	b.cs	2f88 <cap_compare@@Base+0x314>  // b.hs, b.nlast
    2f70:	sub	w2, w2, #0x20
    2f74:	cmp	w0, w2
    2f78:	csel	w2, w1, wzr, hi  // hi = pmore
    2f7c:	mov	w19, w3
    2f80:	str	w2, [x20, w3, uxtw #2]
    2f84:	b	2f50 <cap_compare@@Base+0x2dc>
    2f88:	mov	w2, #0xffffffff            	// #-1
    2f8c:	b	2f7c <cap_compare@@Base+0x308>

0000000000002f90 <cap_from_text@@Base>:
    2f90:	stp	x29, x30, [sp, #-128]!
    2f94:	mov	x29, sp
    2f98:	stp	x19, x20, [sp, #16]
    2f9c:	stp	x21, x22, [sp, #32]
    2fa0:	stp	x23, x24, [sp, #48]
    2fa4:	stp	x25, x26, [sp, #64]
    2fa8:	str	x27, [sp, #80]
    2fac:	str	x0, [sp, #104]
    2fb0:	cbnz	x0, 2fe4 <cap_from_text@@Base+0x54>
    2fb4:	mov	x19, x0
    2fb8:	bl	1d00 <__errno_location@plt>
    2fbc:	mov	w1, #0x16                  	// #22
    2fc0:	str	w1, [x0]
    2fc4:	mov	x0, x19
    2fc8:	ldp	x19, x20, [sp, #16]
    2fcc:	ldp	x21, x22, [sp, #32]
    2fd0:	ldp	x23, x24, [sp, #48]
    2fd4:	ldp	x25, x26, [sp, #64]
    2fd8:	ldr	x27, [sp, #80]
    2fdc:	ldp	x29, x30, [sp], #128
    2fe0:	ret
    2fe4:	bl	1bd0 <cap_init@plt>
    2fe8:	mov	x19, x0
    2fec:	cbz	x0, 2fc4 <cap_from_text@@Base+0x34>
    2ff0:	ldr	w0, [x0]
    2ff4:	mov	w1, #0x1026                	// #4134
    2ff8:	movk	w1, #0x2007, lsl #16
    2ffc:	cmp	w0, w1
    3000:	b.eq	3038 <cap_from_text@@Base+0xa8>  // b.none
    3004:	mov	w1, #0x522                 	// #1314
    3008:	movk	w1, #0x2008, lsl #16
    300c:	cmp	w0, w1
    3010:	b.eq	3038 <cap_from_text@@Base+0xa8>  // b.none
    3014:	mov	w1, #0x330                 	// #816
    3018:	movk	w1, #0x1998, lsl #16
    301c:	cmp	w0, w1
    3020:	b.eq	30ec <cap_from_text@@Base+0x15c>  // b.none
    3024:	bl	1d00 <__errno_location@plt>
    3028:	mov	x19, #0x0                   	// #0
    302c:	mov	w1, #0x16                  	// #22
    3030:	str	w1, [x0]
    3034:	b	2fc4 <cap_from_text@@Base+0x34>
    3038:	mov	w21, #0x2                   	// #2
    303c:	add	x20, sp, #0x78
    3040:	add	x24, sp, #0x68
    3044:	adrp	x23, 3000 <cap_from_text@@Base+0x70>
    3048:	str	xzr, [x20]
    304c:	bl	1c00 <__ctype_b_loc@plt>
    3050:	ldr	x3, [x0]
    3054:	mov	x22, x0
    3058:	ldr	x0, [sp, #104]
    305c:	ldrb	w2, [x0]
    3060:	ldrb	w1, [x0]
    3064:	ldrh	w2, [x3, x2, lsl #1]
    3068:	tbnz	w2, #13, 30f4 <cap_from_text@@Base+0x164>
    306c:	cbz	w1, 2fc4 <cap_from_text@@Base+0x34>
    3070:	tbnz	w2, #3, 307c <cap_from_text@@Base+0xec>
    3074:	cmp	w1, #0x5f
    3078:	b.ne	312c <cap_from_text@@Base+0x19c>  // b.any
    307c:	add	x25, x23, #0xd55
    3080:	mov	w26, #0x1                   	// #1
    3084:	ldr	x27, [sp, #104]
    3088:	mov	x1, x25
    308c:	mov	x0, x27
    3090:	bl	2dbc <cap_compare@@Base+0x148>
    3094:	cbz	x0, 3100 <cap_from_text@@Base+0x170>
    3098:	add	x27, x27, #0x3
    309c:	mov	w1, w21
    30a0:	mov	x0, x20
    30a4:	str	x27, [sp, #104]
    30a8:	bl	2f1c <cap_compare@@Base+0x2a8>
    30ac:	ldr	x0, [sp, #104]
    30b0:	mov	x1, x0
    30b4:	ldrb	w2, [x1], #1
    30b8:	cmp	w2, #0x2c
    30bc:	b.ne	3258 <cap_from_text@@Base+0x2c8>  // b.any
    30c0:	str	x1, [sp, #104]
    30c4:	ldr	x2, [x22]
    30c8:	ldrb	w1, [x0, #1]
    30cc:	ldrb	w0, [x0, #1]
    30d0:	ldrh	w0, [x2, x0, lsl #1]
    30d4:	tbnz	w0, #3, 3084 <cap_from_text@@Base+0xf4>
    30d8:	cmp	w1, #0x5f
    30dc:	b.eq	3084 <cap_from_text@@Base+0xf4>  // b.none
    30e0:	mov	x0, x19
    30e4:	bl	1cb0 <cap_free@plt>
    30e8:	b	3024 <cap_from_text@@Base+0x94>
    30ec:	mov	w21, #0x1                   	// #1
    30f0:	b	303c <cap_from_text@@Base+0xac>
    30f4:	add	x0, x0, #0x1
    30f8:	str	x0, [sp, #104]
    30fc:	b	3058 <cap_from_text@@Base+0xc8>
    3100:	mov	x0, x24
    3104:	bl	2e48 <cap_compare@@Base+0x1d4>
    3108:	cmn	w0, #0x1
    310c:	b.eq	30e0 <cap_from_text@@Base+0x150>  // b.none
    3110:	asr	w2, w0, #5
    3114:	lsl	w0, w26, w0
    3118:	sbfiz	x2, x2, #2, #32
    311c:	ldr	w1, [x20, x2]
    3120:	orr	w1, w0, w1
    3124:	str	w1, [x20, x2]
    3128:	b	30ac <cap_from_text@@Base+0x11c>
    312c:	cmp	w1, #0x2b
    3130:	mov	w0, #0x2d                  	// #45
    3134:	ccmp	w1, w0, #0x4, ne  // ne = any
    3138:	b.eq	30e0 <cap_from_text@@Base+0x150>  // b.none
    313c:	mov	w1, w21
    3140:	mov	x0, x20
    3144:	bl	2f1c <cap_compare@@Base+0x2a8>
    3148:	mov	w8, #0x0                   	// #0
    314c:	ldr	x0, [sp, #104]
    3150:	add	x1, x0, #0x1
    3154:	str	x1, [sp, #104]
    3158:	mov	w1, #0x2d                  	// #45
    315c:	ldrb	w6, [x0]
    3160:	cmp	w6, #0x3d
    3164:	b.ne	3260 <cap_from_text@@Base+0x2d0>  // b.any
    3168:	ldrb	w2, [x0, #1]
    316c:	cmp	w2, #0x2b
    3170:	ccmp	w2, w1, #0x4, ne  // ne = any
    3174:	b.ne	3198 <cap_from_text@@Base+0x208>  // b.any
    3178:	cbz	w8, 30e0 <cap_from_text@@Base+0x150>
    317c:	add	x1, x0, #0x2
    3180:	str	x1, [sp, #104]
    3184:	mov	w6, #0x50                  	// #80
    3188:	ldrb	w0, [x0, #1]
    318c:	cmp	w0, #0x2b
    3190:	mov	w0, #0x4d                  	// #77
    3194:	csel	w6, w6, w0, eq  // eq = none
    3198:	add	x10, x19, #0x8
    319c:	mov	w7, #0x0                   	// #0
    31a0:	mov	x9, #0xc                   	// #12
    31a4:	ldr	x1, [sp, #104]
    31a8:	ldrb	w0, [x1]
    31ac:	cbz	w0, 3280 <cap_from_text@@Base+0x2f0>
    31b0:	ldr	x2, [x22]
    31b4:	ubfiz	x0, x0, #1, #8
    31b8:	ldrh	w0, [x2, x0]
    31bc:	tbnz	w0, #13, 3280 <cap_from_text@@Base+0x2f0>
    31c0:	add	x0, x1, #0x1
    31c4:	str	x0, [sp, #104]
    31c8:	ldrb	w0, [x1]
    31cc:	cmp	w0, #0x69
    31d0:	b.eq	3270 <cap_from_text@@Base+0x2e0>  // b.none
    31d4:	cmp	w0, #0x70
    31d8:	b.eq	3278 <cap_from_text@@Base+0x2e8>  // b.none
    31dc:	cmp	w0, #0x65
    31e0:	b.ne	30e0 <cap_from_text@@Base+0x150>  // b.any
    31e4:	orr	w7, w7, #0x1
    31e8:	cmp	w6, #0x2d
    31ec:	b.eq	336c <cap_from_text@@Base+0x3dc>  // b.none
    31f0:	b.hi	3304 <cap_from_text@@Base+0x374>  // b.pmore
    31f4:	cmp	w6, #0x2b
    31f8:	b.eq	32c4 <cap_from_text@@Base+0x334>  // b.none
    31fc:	ldr	x0, [sp, #104]
    3200:	mov	w2, #0x2d                  	// #45
    3204:	ldrb	w1, [x0]
    3208:	cmp	w1, #0x2b
    320c:	ccmp	w1, w2, #0x4, ne  // ne = any
    3210:	b.ne	3238 <cap_from_text@@Base+0x2a8>  // b.any
    3214:	cbz	w8, 30e0 <cap_from_text@@Base+0x150>
    3218:	add	x1, x0, #0x1
    321c:	str	x1, [sp, #104]
    3220:	ldrb	w1, [x0, #1]
    3224:	ldrb	w6, [x0]
    3228:	ldr	x0, [x22]
    322c:	ldrh	w0, [x0, x1, lsl #1]
    3230:	tbz	w0, #10, 30e0 <cap_from_text@@Base+0x150>
    3234:	mov	w7, #0x0                   	// #0
    3238:	ldr	x0, [sp, #104]
    323c:	ldrb	w0, [x0]
    3240:	cbz	w0, 3048 <cap_from_text@@Base+0xb8>
    3244:	ldr	x1, [x22]
    3248:	ubfiz	x0, x0, #1, #8
    324c:	ldrh	w0, [x1, x0]
    3250:	tbz	w0, #13, 31a4 <cap_from_text@@Base+0x214>
    3254:	b	3048 <cap_from_text@@Base+0xb8>
    3258:	mov	w8, #0x1                   	// #1
    325c:	b	314c <cap_from_text@@Base+0x1bc>
    3260:	cmp	w6, #0x2b
    3264:	ccmp	w6, w1, #0x4, ne  // ne = any
    3268:	b.eq	3198 <cap_from_text@@Base+0x208>  // b.none
    326c:	b	30e0 <cap_from_text@@Base+0x150>
    3270:	orr	w7, w7, #0x4
    3274:	b	31e8 <cap_from_text@@Base+0x258>
    3278:	orr	w7, w7, #0x2
    327c:	b	31e8 <cap_from_text@@Base+0x258>
    3280:	cmp	w6, #0x3d
    3284:	b.ne	30e0 <cap_from_text@@Base+0x150>  // b.any
    3288:	mov	x1, x20
    328c:	mov	w3, w21
    3290:	mov	x0, x19
    3294:	mov	w2, #0x0                   	// #0
    3298:	bl	2d34 <cap_compare@@Base+0xc0>
    329c:	mov	w3, w21
    32a0:	mov	x0, x19
    32a4:	mov	w2, #0x1                   	// #1
    32a8:	bl	2d34 <cap_compare@@Base+0xc0>
    32ac:	mov	w3, w21
    32b0:	mov	x0, x19
    32b4:	mov	w2, #0x2                   	// #2
    32b8:	bl	2d34 <cap_compare@@Base+0xc0>
    32bc:	cmp	w6, #0x4d
    32c0:	b.eq	336c <cap_from_text@@Base+0x3dc>  // b.none
    32c4:	tbnz	w7, #0, 3324 <cap_from_text@@Base+0x394>
    32c8:	tbz	w7, #1, 32d4 <cap_from_text@@Base+0x344>
    32cc:	mov	w0, w21
    32d0:	cbnz	w0, 334c <cap_from_text@@Base+0x3bc>
    32d4:	tbz	w7, #2, 31fc <cap_from_text@@Base+0x26c>
    32d8:	mov	w0, w21
    32dc:	add	x2, x19, #0x10
    32e0:	sub	x0, x0, #0x1
    32e4:	cmn	w0, #0x1
    32e8:	b.eq	31fc <cap_from_text@@Base+0x26c>  // b.none
    32ec:	mul	x3, x0, x9
    32f0:	ldr	w4, [x20, x0, lsl #2]
    32f4:	ldr	w1, [x2, x3]
    32f8:	orr	w1, w1, w4
    32fc:	str	w1, [x2, x3]
    3300:	b	32e0 <cap_from_text@@Base+0x350>
    3304:	cmp	w6, #0x50
    3308:	b.eq	3288 <cap_from_text@@Base+0x2f8>  // b.none
    330c:	b.hi	31fc <cap_from_text@@Base+0x26c>  // b.pmore
    3310:	cmp	w6, #0x3d
    3314:	b.eq	3288 <cap_from_text@@Base+0x2f8>  // b.none
    3318:	cmp	w6, #0x4d
    331c:	b.ne	31fc <cap_from_text@@Base+0x26c>  // b.any
    3320:	b	3288 <cap_from_text@@Base+0x2f8>
    3324:	mov	w0, w21
    3328:	sub	x0, x0, #0x1
    332c:	cmn	w0, #0x1
    3330:	b.eq	32c8 <cap_from_text@@Base+0x338>  // b.none
    3334:	mul	x2, x0, x9
    3338:	ldr	w3, [x20, x0, lsl #2]
    333c:	ldr	w1, [x10, x2]
    3340:	orr	w1, w1, w3
    3344:	str	w1, [x10, x2]
    3348:	b	3328 <cap_from_text@@Base+0x398>
    334c:	mul	x2, x0, x9
    3350:	add	x3, x20, x0, lsl #2
    3354:	sub	x0, x0, #0x1
    3358:	ldur	w3, [x3, #-4]
    335c:	ldr	w1, [x19, x2]
    3360:	orr	w1, w1, w3
    3364:	str	w1, [x19, x2]
    3368:	b	32d0 <cap_from_text@@Base+0x340>
    336c:	tbz	w7, #0, 3384 <cap_from_text@@Base+0x3f4>
    3370:	mov	w3, w21
    3374:	mov	x1, x20
    3378:	mov	x0, x19
    337c:	mov	w2, #0x0                   	// #0
    3380:	bl	2d34 <cap_compare@@Base+0xc0>
    3384:	tbz	w7, #1, 339c <cap_from_text@@Base+0x40c>
    3388:	mov	w3, w21
    338c:	mov	x1, x20
    3390:	mov	x0, x19
    3394:	mov	w2, #0x1                   	// #1
    3398:	bl	2d34 <cap_compare@@Base+0xc0>
    339c:	tbz	w7, #2, 31fc <cap_from_text@@Base+0x26c>
    33a0:	mov	w3, w21
    33a4:	mov	x1, x20
    33a8:	mov	x0, x19
    33ac:	mov	w2, #0x2                   	// #2
    33b0:	bl	2d34 <cap_compare@@Base+0xc0>
    33b4:	b	31fc <cap_from_text@@Base+0x26c>

00000000000033b8 <cap_from_name@@Base>:
    33b8:	stp	x29, x30, [sp, #-48]!
    33bc:	mov	x29, sp
    33c0:	str	x19, [sp, #16]
    33c4:	mov	x19, x1
    33c8:	str	x0, [sp, #40]
    33cc:	add	x0, sp, #0x28
    33d0:	bl	2e48 <cap_compare@@Base+0x1d4>
    33d4:	tbnz	w0, #31, 33e0 <cap_from_name@@Base+0x28>
    33d8:	cbz	x19, 33e0 <cap_from_name@@Base+0x28>
    33dc:	str	w0, [x19]
    33e0:	asr	w0, w0, #31
    33e4:	ldr	x19, [sp, #16]
    33e8:	ldp	x29, x30, [sp], #48
    33ec:	ret

00000000000033f0 <cap_to_name@@Base>:
    33f0:	stp	x29, x30, [sp, #-48]!
    33f4:	mov	w2, w0
    33f8:	cmp	w0, #0x25
    33fc:	mov	x29, sp
    3400:	str	x19, [sp, #16]
    3404:	b.ls	343c <cap_to_name@@Base+0x4c>  // b.plast
    3408:	add	x0, sp, #0x28
    340c:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    3410:	add	x1, x1, #0xd59
    3414:	bl	1af0 <asprintf@plt>
    3418:	ldr	x0, [sp, #40]
    341c:	bl	1ab0 <_libcap_strdup@plt>
    3420:	mov	x19, x0
    3424:	ldr	x0, [sp, #40]
    3428:	bl	1c40 <free@plt>
    342c:	mov	x0, x19
    3430:	ldr	x19, [sp, #16]
    3434:	ldp	x29, x30, [sp], #48
    3438:	ret
    343c:	adrp	x0, 14000 <cap_set_nsowner@@Base+0x102ec>
    3440:	ldr	x0, [x0, #4032]
    3444:	ldr	x0, [x0, w2, sxtw #3]
    3448:	bl	1ab0 <_libcap_strdup@plt>
    344c:	mov	x19, x0
    3450:	b	342c <cap_to_name@@Base+0x3c>

0000000000003454 <cap_to_text@@Base>:
    3454:	sub	sp, sp, #0x650
    3458:	stp	x29, x30, [sp]
    345c:	mov	x29, sp
    3460:	stp	x19, x20, [sp, #16]
    3464:	stp	x21, x22, [sp, #32]
    3468:	stp	x23, x24, [sp, #48]
    346c:	stp	x25, x26, [sp, #64]
    3470:	stp	x27, x28, [sp, #80]
    3474:	str	x1, [sp, #104]
    3478:	cbz	x0, 3494 <cap_to_text@@Base+0x40>
    347c:	mov	x21, x0
    3480:	mov	w0, #0x90d0                	// #37072
    3484:	movk	w0, #0xca, lsl #16
    3488:	ldur	w1, [x21, #-4]
    348c:	cmp	w1, w0
    3490:	b.eq	34c4 <cap_to_text@@Base+0x70>  // b.none
    3494:	bl	1d00 <__errno_location@plt>
    3498:	mov	w1, #0x16                  	// #22
    349c:	str	w1, [x0]
    34a0:	mov	x0, #0x0                   	// #0
    34a4:	ldp	x29, x30, [sp]
    34a8:	ldp	x19, x20, [sp, #16]
    34ac:	ldp	x21, x22, [sp, #32]
    34b0:	ldp	x23, x24, [sp, #48]
    34b4:	ldp	x25, x26, [sp, #64]
    34b8:	ldp	x27, x28, [sp, #80]
    34bc:	add	sp, sp, #0x650
    34c0:	ret
    34c4:	stp	xzr, xzr, [sp, #136]
    34c8:	stp	xzr, xzr, [sp, #152]
    34cc:	bl	1aa0 <cap_max_bits@plt>
    34d0:	add	x7, sp, #0x88
    34d4:	mov	w22, w0
    34d8:	mov	w6, #0x0                   	// #0
    34dc:	cmp	w6, w22
    34e0:	b.ne	35b4 <cap_to_text@@Base+0x160>  // b.any
    34e4:	add	x1, sp, #0x88
    34e8:	mov	x0, #0x6                   	// #6
    34ec:	mov	w19, #0x7                   	// #7
    34f0:	cmn	x0, #0x1
    34f4:	b.ne	35d8 <cap_to_text@@Base+0x184>  // b.any
    34f8:	tst	x19, #0x1
    34fc:	adrp	x0, 3000 <cap_from_text@@Base+0x70>
    3500:	adrp	x2, 3000 <cap_from_text@@Base+0x70>
    3504:	add	x0, x0, #0xd69
    3508:	add	x2, x2, #0xebf
    350c:	adrp	x3, 3000 <cap_from_text@@Base+0x70>
    3510:	csel	x2, x2, x0, ne  // ne = any
    3514:	add	x3, x3, #0xd5c
    3518:	tst	x19, #0x4
    351c:	add	x20, sp, #0xa8
    3520:	csel	x3, x3, x0, ne  // ne = any
    3524:	tst	x19, #0x2
    3528:	adrp	x4, 3000 <cap_from_text@@Base+0x70>
    352c:	add	x4, x4, #0xf68
    3530:	csel	x4, x4, x0, ne  // ne = any
    3534:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    3538:	mov	x0, x20
    353c:	add	x1, x1, #0xd5e
    3540:	adrp	x25, 3000 <cap_from_text@@Base+0x70>
    3544:	bl	1ae0 <sprintf@plt>
    3548:	add	x26, sp, #0x88
    354c:	add	x24, x20, w0, sxtw
    3550:	add	x25, x25, #0xd66
    3554:	mov	x27, #0x7                   	// #7
    3558:	str	w27, [sp, #116]
    355c:	cmn	x27, #0x1
    3560:	str	w27, [sp, #124]
    3564:	b.ne	35f0 <cap_to_text@@Base+0x19c>  // b.any
    3568:	mov	w6, w22
    356c:	add	x7, sp, #0x88
    3570:	stp	xzr, xzr, [sp, #136]
    3574:	stp	xzr, xzr, [sp, #152]
    3578:	cmp	w6, #0x3f
    357c:	b.ls	3754 <cap_to_text@@Base+0x300>  // b.plast
    3580:	adrp	x25, 3000 <cap_from_text@@Base+0x70>
    3584:	add	x26, sp, #0x88
    3588:	add	x25, x25, #0xd66
    358c:	mov	x28, #0x7                   	// #7
    3590:	mov	w23, w28
    3594:	cbnz	x28, 3778 <cap_to_text@@Base+0x324>
    3598:	ldr	x0, [sp, #104]
    359c:	cbz	x0, 35a8 <cap_to_text@@Base+0x154>
    35a0:	sub	x5, x24, x20
    35a4:	str	x5, [x0]
    35a8:	mov	x0, x20
    35ac:	bl	1ab0 <_libcap_strdup@plt>
    35b0:	b	34a4 <cap_to_text@@Base+0x50>
    35b4:	mov	w1, w6
    35b8:	mov	x0, x21
    35bc:	bl	2d70 <cap_compare@@Base+0xfc>
    35c0:	sbfiz	x0, x0, #2, #32
    35c4:	add	w6, w6, #0x1
    35c8:	ldr	w1, [x7, x0]
    35cc:	add	w1, w1, #0x1
    35d0:	str	w1, [x7, x0]
    35d4:	b	34dc <cap_to_text@@Base+0x88>
    35d8:	ldr	w3, [x1, x0, lsl #2]
    35dc:	ldr	w2, [x1, w19, sxtw #2]
    35e0:	cmp	w3, w2
    35e4:	csel	w19, w19, w0, lt  // lt = tstop
    35e8:	sub	x0, x0, #0x1
    35ec:	b	34f0 <cap_to_text@@Base+0x9c>
    35f0:	str	w27, [sp, #120]
    35f4:	cmp	w19, w27
    35f8:	b.eq	374c <cap_to_text@@Base+0x2f8>  // b.none
    35fc:	ldr	w0, [x26, x27, lsl #2]
    3600:	cbz	w0, 374c <cap_to_text@@Base+0x2f8>
    3604:	mov	w0, #0x20                  	// #32
    3608:	mov	w28, #0x0                   	// #0
    360c:	strb	w0, [x24], #1
    3610:	cmp	w28, w22
    3614:	b.ne	36e4 <cap_to_text@@Base+0x290>  // b.any
    3618:	ldr	w0, [sp, #116]
    361c:	sub	x24, x24, #0x1
    3620:	bics	w1, w0, w19
    3624:	b.eq	3674 <cap_to_text@@Base+0x220>  // b.none
    3628:	tst	x1, #0x1
    362c:	adrp	x0, 3000 <cap_from_text@@Base+0x70>
    3630:	adrp	x2, 3000 <cap_from_text@@Base+0x70>
    3634:	add	x0, x0, #0xd69
    3638:	add	x2, x2, #0xebf
    363c:	adrp	x3, 3000 <cap_from_text@@Base+0x70>
    3640:	csel	x2, x2, x0, ne  // ne = any
    3644:	add	x3, x3, #0xd5c
    3648:	tst	x1, #0x4
    364c:	adrp	x4, 3000 <cap_from_text@@Base+0x70>
    3650:	csel	x3, x3, x0, ne  // ne = any
    3654:	tst	x1, #0x2
    3658:	add	x4, x4, #0xf68
    365c:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    3660:	csel	x4, x4, x0, ne  // ne = any
    3664:	add	x1, x1, #0xd6a
    3668:	mov	x0, x24
    366c:	bl	1ae0 <sprintf@plt>
    3670:	add	x24, x24, w0, sxtw
    3674:	ldr	w0, [sp, #124]
    3678:	bics	w23, w19, w0
    367c:	b.eq	36cc <cap_to_text@@Base+0x278>  // b.none
    3680:	tst	x23, #0x1
    3684:	adrp	x0, 3000 <cap_from_text@@Base+0x70>
    3688:	adrp	x2, 3000 <cap_from_text@@Base+0x70>
    368c:	add	x0, x0, #0xd69
    3690:	add	x2, x2, #0xebf
    3694:	adrp	x3, 3000 <cap_from_text@@Base+0x70>
    3698:	csel	x2, x2, x0, ne  // ne = any
    369c:	add	x3, x3, #0xd5c
    36a0:	tst	x23, #0x4
    36a4:	adrp	x4, 3000 <cap_from_text@@Base+0x70>
    36a8:	csel	x3, x3, x0, ne  // ne = any
    36ac:	tst	x23, #0x2
    36b0:	add	x4, x4, #0xf68
    36b4:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    36b8:	csel	x4, x4, x0, ne  // ne = any
    36bc:	add	x1, x1, #0xd72
    36c0:	mov	x0, x24
    36c4:	bl	1ae0 <sprintf@plt>
    36c8:	add	x24, x24, w0, sxtw
    36cc:	sub	x0, x24, x20
    36d0:	cmp	x0, #0x540
    36d4:	b.le	374c <cap_to_text@@Base+0x2f8>
    36d8:	bl	1d00 <__errno_location@plt>
    36dc:	mov	w1, #0x22                  	// #34
    36e0:	b	349c <cap_to_text@@Base+0x48>
    36e4:	mov	w1, w28
    36e8:	mov	x0, x21
    36ec:	bl	2d70 <cap_compare@@Base+0xfc>
    36f0:	ldr	w1, [sp, #120]
    36f4:	cmp	w0, w1
    36f8:	b.ne	3744 <cap_to_text@@Base+0x2f0>  // b.any
    36fc:	mov	w0, w28
    3700:	bl	1d30 <cap_to_name@plt>
    3704:	mov	x23, x0
    3708:	bl	1a60 <strlen@plt>
    370c:	sub	x1, x24, x20
    3710:	add	x1, x1, x0
    3714:	cmp	x1, #0x540
    3718:	b.ls	3728 <cap_to_text@@Base+0x2d4>  // b.plast
    371c:	mov	x0, x23
    3720:	bl	1cb0 <cap_free@plt>
    3724:	b	36d8 <cap_to_text@@Base+0x284>
    3728:	mov	x2, x23
    372c:	mov	x1, x25
    3730:	mov	x0, x24
    3734:	bl	1ae0 <sprintf@plt>
    3738:	add	x24, x24, w0, sxtw
    373c:	mov	x0, x23
    3740:	bl	1cb0 <cap_free@plt>
    3744:	add	w28, w28, #0x1
    3748:	b	3610 <cap_to_text@@Base+0x1bc>
    374c:	sub	x27, x27, #0x1
    3750:	b	3558 <cap_to_text@@Base+0x104>
    3754:	mov	w1, w6
    3758:	mov	x0, x21
    375c:	bl	2d70 <cap_compare@@Base+0xfc>
    3760:	sbfiz	x0, x0, #2, #32
    3764:	add	w6, w6, #0x1
    3768:	ldr	w1, [x7, x0]
    376c:	add	w1, w1, #0x1
    3770:	str	w1, [x7, x0]
    3774:	b	3578 <cap_to_text@@Base+0x124>
    3778:	ldr	w0, [x26, x28, lsl #2]
    377c:	cbz	w0, 37f0 <cap_to_text@@Base+0x39c>
    3780:	mov	w19, w22
    3784:	mov	w0, #0x20                  	// #32
    3788:	strb	w0, [x24], #1
    378c:	cmp	w19, #0x3f
    3790:	b.ls	37f8 <cap_to_text@@Base+0x3a4>  // b.plast
    3794:	tst	x23, #0x1
    3798:	adrp	x0, 3000 <cap_from_text@@Base+0x70>
    379c:	adrp	x2, 3000 <cap_from_text@@Base+0x70>
    37a0:	add	x0, x0, #0xd69
    37a4:	add	x2, x2, #0xebf
    37a8:	adrp	x3, 3000 <cap_from_text@@Base+0x70>
    37ac:	csel	x2, x2, x0, ne  // ne = any
    37b0:	add	x3, x3, #0xd5c
    37b4:	tst	x23, #0x4
    37b8:	sub	x19, x24, #0x1
    37bc:	csel	x3, x3, x0, ne  // ne = any
    37c0:	tst	x23, #0x2
    37c4:	adrp	x4, 3000 <cap_from_text@@Base+0x70>
    37c8:	add	x4, x4, #0xf68
    37cc:	csel	x4, x0, x4, eq  // eq = none
    37d0:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    37d4:	mov	x0, x19
    37d8:	add	x1, x1, #0xd6a
    37dc:	bl	1ae0 <sprintf@plt>
    37e0:	add	x24, x19, w0, sxtw
    37e4:	sub	x0, x24, x20
    37e8:	cmp	x0, #0x540
    37ec:	b.gt	36d8 <cap_to_text@@Base+0x284>
    37f0:	sub	x28, x28, #0x1
    37f4:	b	3590 <cap_to_text@@Base+0x13c>
    37f8:	mov	w1, w19
    37fc:	mov	x0, x21
    3800:	bl	2d70 <cap_compare@@Base+0xfc>
    3804:	cmp	w0, w28
    3808:	b.ne	3850 <cap_to_text@@Base+0x3fc>  // b.any
    380c:	mov	w0, w19
    3810:	bl	1d30 <cap_to_name@plt>
    3814:	mov	x27, x0
    3818:	bl	1a60 <strlen@plt>
    381c:	sub	x1, x24, x20
    3820:	add	x1, x1, x0
    3824:	cmp	x1, #0x540
    3828:	b.ls	3834 <cap_to_text@@Base+0x3e0>  // b.plast
    382c:	mov	x0, x27
    3830:	b	3720 <cap_to_text@@Base+0x2cc>
    3834:	mov	x2, x27
    3838:	mov	x1, x25
    383c:	mov	x0, x24
    3840:	bl	1ae0 <sprintf@plt>
    3844:	add	x24, x24, w0, sxtw
    3848:	mov	x0, x27
    384c:	bl	1cb0 <cap_free@plt>
    3850:	add	w19, w19, #0x1
    3854:	b	378c <cap_to_text@@Base+0x338>

0000000000003858 <cap_mode_name@@Base>:
    3858:	cmp	w0, #0x3
    385c:	b.hi	389c <cap_mode_name@@Base+0x44>  // b.pmore
    3860:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    3864:	add	x1, x1, #0xfc4
    3868:	ldrb	w0, [x1, w0, uxtw]
    386c:	adr	x1, 3878 <cap_mode_name@@Base+0x20>
    3870:	add	x0, x1, w0, sxtb #2
    3874:	br	x0
    3878:	adrp	x0, 3000 <cap_from_text@@Base+0x70>
    387c:	add	x0, x0, #0xd9a
    3880:	ret
    3884:	adrp	x0, 3000 <cap_from_text@@Base+0x70>
    3888:	add	x0, x0, #0xd89
    388c:	b	3880 <cap_mode_name@@Base+0x28>
    3890:	adrp	x0, 3000 <cap_from_text@@Base+0x70>
    3894:	add	x0, x0, #0xd90
    3898:	b	3880 <cap_mode_name@@Base+0x28>
    389c:	adrp	x0, 3000 <cap_from_text@@Base+0x70>
    38a0:	add	x0, x0, #0xd7a
    38a4:	b	3880 <cap_mode_name@@Base+0x28>
    38a8:	adrp	x0, 3000 <cap_from_text@@Base+0x70>
    38ac:	add	x0, x0, #0xd82
    38b0:	b	3880 <cap_mode_name@@Base+0x28>
    38b4:	mov	x3, x0
    38b8:	stp	x29, x30, [sp, #-16]!
    38bc:	mov	x0, x1
    38c0:	mov	x29, sp
    38c4:	ldr	w5, [x3]
    38c8:	mov	w4, #0x2000000             	// #33554432
    38cc:	and	w1, w5, #0xff000000
    38d0:	cmp	w1, w4
    38d4:	b.eq	390c <cap_mode_name@@Base+0xb4>  // b.none
    38d8:	mov	w4, #0x3000000             	// #50331648
    38dc:	cmp	w1, w4
    38e0:	b.eq	3918 <cap_mode_name@@Base+0xc0>  // b.none
    38e4:	mov	w4, #0x1000000             	// #16777216
    38e8:	cmp	w1, w4
    38ec:	b.ne	38fc <cap_mode_name@@Base+0xa4>  // b.any
    38f0:	sub	w2, w2, #0xc
    38f4:	mov	w4, #0x1                   	// #1
    38f8:	cbz	w2, 3928 <cap_mode_name@@Base+0xd0>
    38fc:	bl	1cb0 <cap_free@plt>
    3900:	mov	x0, #0x0                   	// #0
    3904:	ldp	x29, x30, [sp], #16
    3908:	ret
    390c:	sub	w2, w2, #0x14
    3910:	mov	w4, #0x2                   	// #2
    3914:	b	38f8 <cap_mode_name@@Base+0xa0>
    3918:	ldr	w1, [x3, #20]
    391c:	sub	w2, w2, #0x18
    3920:	str	w1, [x0, #32]
    3924:	b	3910 <cap_mode_name@@Base+0xb8>
    3928:	mov	x2, x3
    392c:	add	x1, x0, #0x8
    3930:	add	x7, x3, w4, uxtw #3
    3934:	and	w5, w5, #0x1
    3938:	ldr	w3, [x2, #8]
    393c:	str	w3, [x1, #8]
    3940:	ldr	w6, [x2, #4]
    3944:	str	w6, [x1, #4]
    3948:	cbz	w5, 3954 <cap_mode_name@@Base+0xfc>
    394c:	orr	w3, w3, w6
    3950:	str	w3, [x1]
    3954:	add	x2, x2, #0x8
    3958:	add	x1, x1, #0xc
    395c:	cmp	x2, x7
    3960:	b.ne	3938 <cap_mode_name@@Base+0xe0>  // b.any
    3964:	cmp	w4, #0x1
    3968:	b.ne	3904 <cap_mode_name@@Base+0xac>  // b.any
    396c:	stur	xzr, [x0, #20]
    3970:	str	wzr, [x0, #28]
    3974:	b	3904 <cap_mode_name@@Base+0xac>
    3978:	stp	x29, x30, [sp, #-16]!
    397c:	mov	x29, sp
    3980:	cbz	x1, 3998 <cap_mode_name@@Base+0x140>
    3984:	ldur	w4, [x1, #-4]
    3988:	mov	w3, #0x90d0                	// #37072
    398c:	movk	w3, #0xca, lsl #16
    3990:	cmp	w4, w3
    3994:	b.eq	39b0 <cap_mode_name@@Base+0x158>  // b.none
    3998:	bl	1d00 <__errno_location@plt>
    399c:	mov	w1, #0x16                  	// #22
    39a0:	str	w1, [x0]
    39a4:	mov	w0, #0xffffffff            	// #-1
    39a8:	ldp	x29, x30, [sp], #16
    39ac:	ret
    39b0:	ldr	w3, [x1]
    39b4:	mov	w4, #0x1026                	// #4134
    39b8:	movk	w4, #0x2007, lsl #16
    39bc:	cmp	w3, w4
    39c0:	b.eq	3a8c <cap_mode_name@@Base+0x234>  // b.none
    39c4:	mov	w4, #0x522                 	// #1314
    39c8:	movk	w4, #0x2008, lsl #16
    39cc:	cmp	w3, w4
    39d0:	b.eq	3a8c <cap_mode_name@@Base+0x234>  // b.none
    39d4:	mov	w4, #0x330                 	// #816
    39d8:	movk	w4, #0x1998, lsl #16
    39dc:	cmp	w3, w4
    39e0:	b.ne	3998 <cap_mode_name@@Base+0x140>  // b.any
    39e4:	mov	w3, #0xc                   	// #12
    39e8:	mov	w4, #0x1000000             	// #16777216
    39ec:	str	w3, [x2]
    39f0:	mov	w3, #0x1                   	// #1
    39f4:	ldr	w5, [x1, #32]
    39f8:	cbz	w5, 3a28 <cap_mode_name@@Base+0x1d0>
    39fc:	ldr	w4, [x1]
    3a00:	mov	w3, #0x521                 	// #1313
    3a04:	movk	w3, #0x2008, lsl #16
    3a08:	cmp	w4, w3
    3a0c:	b.ls	3998 <cap_mode_name@@Base+0x140>  // b.plast
    3a10:	mov	w3, #0x18                  	// #24
    3a14:	str	w3, [x2]
    3a18:	mov	w4, #0x3000000             	// #50331648
    3a1c:	mov	w3, #0x2                   	// #2
    3a20:	ldr	w2, [x1, #32]
    3a24:	str	w2, [x0, #20]
    3a28:	ldr	w5, [x1, #8]
    3a2c:	cmp	w3, #0x2
    3a30:	ldr	w2, [x1, #20]
    3a34:	b.ne	3aa8 <cap_mode_name@@Base+0x250>  // b.any
    3a38:	orr	w5, w5, w2
    3a3c:	add	x1, x1, #0x8
    3a40:	mov	x2, x0
    3a44:	add	x3, x0, w3, uxtw #3
    3a48:	ldr	w6, [x1, #4]
    3a4c:	str	w6, [x2, #4]
    3a50:	ldr	w7, [x1, #8]
    3a54:	str	w7, [x2, #8]
    3a58:	cbz	w5, 3a6c <cap_mode_name@@Base+0x214>
    3a5c:	ldr	w8, [x1]
    3a60:	orr	w6, w6, w7
    3a64:	bics	wzr, w6, w8
    3a68:	b.ne	3998 <cap_mode_name@@Base+0x140>  // b.any
    3a6c:	add	x2, x2, #0x8
    3a70:	add	x1, x1, #0xc
    3a74:	cmp	x2, x3
    3a78:	b.ne	3a48 <cap_mode_name@@Base+0x1f0>  // b.any
    3a7c:	cbnz	w5, 3aa0 <cap_mode_name@@Base+0x248>
    3a80:	str	w4, [x0]
    3a84:	mov	w0, #0x0                   	// #0
    3a88:	b	39a8 <cap_mode_name@@Base+0x150>
    3a8c:	mov	w3, #0x14                  	// #20
    3a90:	mov	w4, #0x2000000             	// #33554432
    3a94:	str	w3, [x2]
    3a98:	mov	w3, #0x2                   	// #2
    3a9c:	b	39f4 <cap_mode_name@@Base+0x19c>
    3aa0:	orr	w4, w4, #0x1
    3aa4:	b	3a80 <cap_mode_name@@Base+0x228>
    3aa8:	cbnz	w2, 3998 <cap_mode_name@@Base+0x140>
    3aac:	ldr	w2, [x1, #28]
    3ab0:	cbnz	w2, 3998 <cap_mode_name@@Base+0x140>
    3ab4:	ldr	w2, [x1, #24]
    3ab8:	mov	w3, #0x1                   	// #1
    3abc:	cbz	w2, 3a3c <cap_mode_name@@Base+0x1e4>
    3ac0:	b	3998 <cap_mode_name@@Base+0x140>

0000000000003ac4 <cap_get_fd@@Base>:
    3ac4:	stp	x29, x30, [sp, #-80]!
    3ac8:	mov	x29, sp
    3acc:	stp	x19, x20, [sp, #16]
    3ad0:	mov	w20, w0
    3ad4:	str	x21, [sp, #32]
    3ad8:	bl	1bd0 <cap_init@plt>
    3adc:	mov	x19, x0
    3ae0:	cbz	x0, 3b18 <cap_get_fd@@Base+0x54>
    3ae4:	add	x21, sp, #0x38
    3ae8:	mov	w0, w20
    3aec:	mov	x2, x21
    3af0:	mov	x3, #0x18                  	// #24
    3af4:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    3af8:	add	x1, x1, #0xfc8
    3afc:	bl	1c60 <fgetxattr@plt>
    3b00:	mov	x2, x0
    3b04:	cmp	w0, #0x3
    3b08:	b.gt	3b2c <cap_get_fd@@Base+0x68>
    3b0c:	mov	x0, x19
    3b10:	mov	x19, #0x0                   	// #0
    3b14:	bl	1cb0 <cap_free@plt>
    3b18:	mov	x0, x19
    3b1c:	ldp	x19, x20, [sp, #16]
    3b20:	ldr	x21, [sp, #32]
    3b24:	ldp	x29, x30, [sp], #80
    3b28:	ret
    3b2c:	mov	x1, x19
    3b30:	mov	x0, x21
    3b34:	bl	38b4 <cap_mode_name@@Base+0x5c>
    3b38:	mov	x19, x0
    3b3c:	b	3b18 <cap_get_fd@@Base+0x54>

0000000000003b40 <cap_get_file@@Base>:
    3b40:	stp	x29, x30, [sp, #-80]!
    3b44:	mov	x29, sp
    3b48:	stp	x19, x20, [sp, #16]
    3b4c:	mov	x20, x0
    3b50:	str	x21, [sp, #32]
    3b54:	bl	1bd0 <cap_init@plt>
    3b58:	mov	x19, x0
    3b5c:	cbz	x0, 3b94 <cap_get_file@@Base+0x54>
    3b60:	add	x21, sp, #0x38
    3b64:	mov	x0, x20
    3b68:	mov	x2, x21
    3b6c:	mov	x3, #0x18                  	// #24
    3b70:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    3b74:	add	x1, x1, #0xfc8
    3b78:	bl	1be0 <getxattr@plt>
    3b7c:	mov	x2, x0
    3b80:	cmp	w0, #0x3
    3b84:	b.gt	3ba8 <cap_get_file@@Base+0x68>
    3b88:	mov	x0, x19
    3b8c:	mov	x19, #0x0                   	// #0
    3b90:	bl	1cb0 <cap_free@plt>
    3b94:	mov	x0, x19
    3b98:	ldp	x19, x20, [sp, #16]
    3b9c:	ldr	x21, [sp, #32]
    3ba0:	ldp	x29, x30, [sp], #80
    3ba4:	ret
    3ba8:	mov	x1, x19
    3bac:	mov	x0, x21
    3bb0:	bl	38b4 <cap_mode_name@@Base+0x5c>
    3bb4:	mov	x19, x0
    3bb8:	b	3b94 <cap_get_file@@Base+0x54>

0000000000003bbc <cap_get_nsowner@@Base>:
    3bbc:	ldr	w0, [x0, #32]
    3bc0:	ret

0000000000003bc4 <cap_set_fd@@Base>:
    3bc4:	stp	x29, x30, [sp, #-208]!
    3bc8:	mov	x29, sp
    3bcc:	stp	x19, x20, [sp, #16]
    3bd0:	mov	x20, x1
    3bd4:	mov	w19, w0
    3bd8:	add	x1, sp, #0x50
    3bdc:	str	x21, [sp, #32]
    3be0:	bl	3d20 <cap_set_nsowner@@Base+0xc>
    3be4:	cbz	w0, 3bfc <cap_set_fd@@Base+0x38>
    3be8:	mov	w0, #0xffffffff            	// #-1
    3bec:	ldp	x19, x20, [sp, #16]
    3bf0:	ldr	x21, [sp, #32]
    3bf4:	ldp	x29, x30, [sp], #208
    3bf8:	ret
    3bfc:	ldr	w0, [sp, #96]
    3c00:	and	w0, w0, #0xf000
    3c04:	cmp	w0, #0x8, lsl #12
    3c08:	b.eq	3c1c <cap_set_fd@@Base+0x58>  // b.none
    3c0c:	bl	1d00 <__errno_location@plt>
    3c10:	mov	w1, #0x16                  	// #22
    3c14:	str	w1, [x0]
    3c18:	b	3be8 <cap_set_fd@@Base+0x24>
    3c1c:	cbnz	x20, 3c34 <cap_set_fd@@Base+0x70>
    3c20:	mov	w0, w19
    3c24:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    3c28:	add	x1, x1, #0xfc8
    3c2c:	bl	1bb0 <fremovexattr@plt>
    3c30:	b	3bec <cap_set_fd@@Base+0x28>
    3c34:	add	x21, sp, #0x38
    3c38:	add	x2, sp, #0x34
    3c3c:	mov	x1, x20
    3c40:	mov	x0, x21
    3c44:	bl	3978 <cap_mode_name@@Base+0x120>
    3c48:	cbnz	w0, 3be8 <cap_set_fd@@Base+0x24>
    3c4c:	ldrsw	x3, [sp, #52]
    3c50:	mov	x2, x21
    3c54:	mov	w0, w19
    3c58:	mov	w4, #0x0                   	// #0
    3c5c:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    3c60:	add	x1, x1, #0xfc8
    3c64:	bl	1c90 <fsetxattr@plt>
    3c68:	b	3bec <cap_set_fd@@Base+0x28>

0000000000003c6c <cap_set_file@@Base>:
    3c6c:	stp	x29, x30, [sp, #-208]!
    3c70:	mov	x29, sp
    3c74:	stp	x19, x20, [sp, #16]
    3c78:	mov	x20, x1
    3c7c:	mov	x19, x0
    3c80:	add	x1, sp, #0x50
    3c84:	str	x21, [sp, #32]
    3c88:	bl	3d30 <cap_set_nsowner@@Base+0x1c>
    3c8c:	cbz	w0, 3ca4 <cap_set_file@@Base+0x38>
    3c90:	mov	w0, #0xffffffff            	// #-1
    3c94:	ldp	x19, x20, [sp, #16]
    3c98:	ldr	x21, [sp, #32]
    3c9c:	ldp	x29, x30, [sp], #208
    3ca0:	ret
    3ca4:	ldr	w0, [sp, #96]
    3ca8:	and	w0, w0, #0xf000
    3cac:	cmp	w0, #0x8, lsl #12
    3cb0:	b.eq	3cc4 <cap_set_file@@Base+0x58>  // b.none
    3cb4:	bl	1d00 <__errno_location@plt>
    3cb8:	mov	w1, #0x16                  	// #22
    3cbc:	str	w1, [x0]
    3cc0:	b	3c90 <cap_set_file@@Base+0x24>
    3cc4:	cbnz	x20, 3cdc <cap_set_file@@Base+0x70>
    3cc8:	mov	x0, x19
    3ccc:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    3cd0:	add	x1, x1, #0xfc8
    3cd4:	bl	1a30 <removexattr@plt>
    3cd8:	b	3c94 <cap_set_file@@Base+0x28>
    3cdc:	add	x21, sp, #0x38
    3ce0:	add	x2, sp, #0x34
    3ce4:	mov	x1, x20
    3ce8:	mov	x0, x21
    3cec:	bl	3978 <cap_mode_name@@Base+0x120>
    3cf0:	cbnz	w0, 3c90 <cap_set_file@@Base+0x24>
    3cf4:	ldrsw	x3, [sp, #52]
    3cf8:	mov	x2, x21
    3cfc:	mov	x0, x19
    3d00:	mov	w4, #0x0                   	// #0
    3d04:	adrp	x1, 3000 <cap_from_text@@Base+0x70>
    3d08:	add	x1, x1, #0xfc8
    3d0c:	bl	1b40 <setxattr@plt>
    3d10:	b	3c94 <cap_set_file@@Base+0x28>

0000000000003d14 <cap_set_nsowner@@Base>:
    3d14:	str	w1, [x0, #32]
    3d18:	mov	w0, #0x0                   	// #0
    3d1c:	ret
    3d20:	mov	x2, x1
    3d24:	mov	w1, w0
    3d28:	mov	w0, #0x0                   	// #0
    3d2c:	b	1c50 <__fxstat64@plt>
    3d30:	mov	x2, x1
    3d34:	mov	x1, x0
    3d38:	mov	w0, #0x0                   	// #0
    3d3c:	b	1c20 <__lxstat64@plt>

Disassembly of section .fini:

0000000000003d40 <.fini>:
    3d40:	stp	x29, x30, [sp, #-16]!
    3d44:	mov	x29, sp
    3d48:	ldp	x29, x30, [sp], #16
    3d4c:	ret
