
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//zlib.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001c90 <.init>:
    1c90:	stp	x29, x30, [sp, #-16]!
    1c94:	mov	x29, sp
    1c98:	bl	2020 <PyThread_free_lock@plt+0x10>
    1c9c:	ldp	x29, x30, [sp], #16
    1ca0:	ret

Disassembly of section .plt:

0000000000001cb0 <memcpy@plt-0x20>:
    1cb0:	stp	x16, x30, [sp, #-16]!
    1cb4:	adrp	x16, 17000 <PyInit_zlib@@Base+0x120a4>
    1cb8:	ldr	x17, [x16, #4088]
    1cbc:	add	x16, x16, #0xff8
    1cc0:	br	x17
    1cc4:	nop
    1cc8:	nop
    1ccc:	nop

0000000000001cd0 <memcpy@plt>:
    1cd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16]
    1cd8:	add	x16, x16, #0x0
    1cdc:	br	x17

0000000000001ce0 <PyModule_AddIntConstant@plt>:
    1ce0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #8]
    1ce8:	add	x16, x16, #0x8
    1cec:	br	x17

0000000000001cf0 <_PyBytes_Resize@plt>:
    1cf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #16]
    1cf8:	add	x16, x16, #0x10
    1cfc:	br	x17

0000000000001d00 <inflate@plt>:
    1d00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #24]
    1d08:	add	x16, x16, #0x18
    1d0c:	br	x17

0000000000001d10 <PyEval_RestoreThread@plt>:
    1d10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #32]
    1d18:	add	x16, x16, #0x20
    1d1c:	br	x17

0000000000001d20 <PyBuffer_Release@plt>:
    1d20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #40]
    1d28:	add	x16, x16, #0x28
    1d2c:	br	x17

0000000000001d30 <__cxa_finalize@plt>:
    1d30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #48]
    1d38:	add	x16, x16, #0x30
    1d3c:	br	x17

0000000000001d40 <PyMem_RawMalloc@plt>:
    1d40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #56]
    1d48:	add	x16, x16, #0x38
    1d4c:	br	x17

0000000000001d50 <crc32@plt>:
    1d50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #64]
    1d58:	add	x16, x16, #0x40
    1d5c:	br	x17

0000000000001d60 <PyBuffer_IsContiguous@plt>:
    1d60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #72]
    1d68:	add	x16, x16, #0x48
    1d6c:	br	x17

0000000000001d70 <PyBytes_FromStringAndSize@plt>:
    1d70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #80]
    1d78:	add	x16, x16, #0x50
    1d7c:	br	x17

0000000000001d80 <_Py_Dealloc@plt>:
    1d80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #88]
    1d88:	add	x16, x16, #0x58
    1d8c:	br	x17

0000000000001d90 <PyErr_NoMemory@plt>:
    1d90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #96]
    1d98:	add	x16, x16, #0x60
    1d9c:	br	x17

0000000000001da0 <PyThread_acquire_lock@plt>:
    1da0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #104]
    1da8:	add	x16, x16, #0x68
    1dac:	br	x17

0000000000001db0 <_PyArg_UnpackKeywords@plt>:
    1db0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #112]
    1db8:	add	x16, x16, #0x70
    1dbc:	br	x17

0000000000001dc0 <PyErr_SetString@plt>:
    1dc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #120]
    1dc8:	add	x16, x16, #0x78
    1dcc:	br	x17

0000000000001dd0 <deflate@plt>:
    1dd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #128]
    1dd8:	add	x16, x16, #0x80
    1ddc:	br	x17

0000000000001de0 <_PyLong_FromNbIndexOrNbInt@plt>:
    1de0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #136]
    1de8:	add	x16, x16, #0x88
    1dec:	br	x17

0000000000001df0 <PyObject_Free@plt>:
    1df0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #144]
    1df8:	add	x16, x16, #0x90
    1dfc:	br	x17

0000000000001e00 <deflateInit2_@plt>:
    1e00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #152]
    1e08:	add	x16, x16, #0x98
    1e0c:	br	x17

0000000000001e10 <PyType_Ready@plt>:
    1e10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #160]
    1e18:	add	x16, x16, #0xa0
    1e1c:	br	x17

0000000000001e20 <PyLong_AsSsize_t@plt>:
    1e20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #168]
    1e28:	add	x16, x16, #0xa8
    1e2c:	br	x17

0000000000001e30 <_PyArg_BadArgument@plt>:
    1e30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #176]
    1e38:	add	x16, x16, #0xb0
    1e3c:	br	x17

0000000000001e40 <PyErr_NewException@plt>:
    1e40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #184]
    1e48:	add	x16, x16, #0xb8
    1e4c:	br	x17

0000000000001e50 <deflateInit_@plt>:
    1e50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #192]
    1e58:	add	x16, x16, #0xc0
    1e5c:	br	x17

0000000000001e60 <PyLong_AsUnsignedLongMask@plt>:
    1e60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #200]
    1e68:	add	x16, x16, #0xc8
    1e6c:	br	x17

0000000000001e70 <__gmon_start__@plt>:
    1e70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #208]
    1e78:	add	x16, x16, #0xd0
    1e7c:	br	x17

0000000000001e80 <_PyArg_CheckPositional@plt>:
    1e80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #216]
    1e88:	add	x16, x16, #0xd8
    1e8c:	br	x17

0000000000001e90 <inflateEnd@plt>:
    1e90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #224]
    1e98:	add	x16, x16, #0xe0
    1e9c:	br	x17

0000000000001ea0 <inflateCopy@plt>:
    1ea0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #232]
    1ea8:	add	x16, x16, #0xe8
    1eac:	br	x17

0000000000001eb0 <PyErr_Occurred@plt>:
    1eb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #240]
    1eb8:	add	x16, x16, #0xf0
    1ebc:	br	x17

0000000000001ec0 <PyModule_Create2@plt>:
    1ec0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #248]
    1ec8:	add	x16, x16, #0xf8
    1ecc:	br	x17

0000000000001ed0 <inflateSetDictionary@plt>:
    1ed0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #256]
    1ed8:	add	x16, x16, #0x100
    1edc:	br	x17

0000000000001ee0 <adler32@plt>:
    1ee0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #264]
    1ee8:	add	x16, x16, #0x108
    1eec:	br	x17

0000000000001ef0 <PyMem_RawFree@plt>:
    1ef0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #272]
    1ef8:	add	x16, x16, #0x110
    1efc:	br	x17

0000000000001f00 <PyThread_allocate_lock@plt>:
    1f00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #280]
    1f08:	add	x16, x16, #0x118
    1f0c:	br	x17

0000000000001f10 <deflateEnd@plt>:
    1f10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #288]
    1f18:	add	x16, x16, #0x120
    1f1c:	br	x17

0000000000001f20 <PyThread_release_lock@plt>:
    1f20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #296]
    1f28:	add	x16, x16, #0x128
    1f2c:	br	x17

0000000000001f30 <PyObject_GetBuffer@plt>:
    1f30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #304]
    1f38:	add	x16, x16, #0x130
    1f3c:	br	x17

0000000000001f40 <deflateCopy@plt>:
    1f40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #312]
    1f48:	add	x16, x16, #0x138
    1f4c:	br	x17

0000000000001f50 <PyLong_FromUnsignedLong@plt>:
    1f50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #320]
    1f58:	add	x16, x16, #0x140
    1f5c:	br	x17

0000000000001f60 <_PyObject_New@plt>:
    1f60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #328]
    1f68:	add	x16, x16, #0x148
    1f6c:	br	x17

0000000000001f70 <PyUnicode_FromString@plt>:
    1f70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #336]
    1f78:	add	x16, x16, #0x150
    1f7c:	br	x17

0000000000001f80 <inflateInit2_@plt>:
    1f80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #344]
    1f88:	add	x16, x16, #0x158
    1f8c:	br	x17

0000000000001f90 <PyModule_AddStringConstant@plt>:
    1f90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #352]
    1f98:	add	x16, x16, #0x160
    1f9c:	br	x17

0000000000001fa0 <PyEval_SaveThread@plt>:
    1fa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #360]
    1fa8:	add	x16, x16, #0x168
    1fac:	br	x17

0000000000001fb0 <PyModule_AddObject@plt>:
    1fb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #368]
    1fb8:	add	x16, x16, #0x170
    1fbc:	br	x17

0000000000001fc0 <zlibVersion@plt>:
    1fc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #376]
    1fc8:	add	x16, x16, #0x178
    1fcc:	br	x17

0000000000001fd0 <PyType_IsSubtype@plt>:
    1fd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #384]
    1fd8:	add	x16, x16, #0x180
    1fdc:	br	x17

0000000000001fe0 <PyErr_Format@plt>:
    1fe0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #392]
    1fe8:	add	x16, x16, #0x188
    1fec:	br	x17

0000000000001ff0 <_PyLong_AsInt@plt>:
    1ff0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #400]
    1ff8:	add	x16, x16, #0x190
    1ffc:	br	x17

0000000000002000 <deflateSetDictionary@plt>:
    2000:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #408]
    2008:	add	x16, x16, #0x198
    200c:	br	x17

0000000000002010 <PyThread_free_lock@plt>:
    2010:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #416]
    2018:	add	x16, x16, #0x1a0
    201c:	br	x17

Disassembly of section .text:

0000000000002020 <PyInit_zlib@@Base-0x2f3c>:
    2020:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    2024:	ldr	x0, [x0, #4048]
    2028:	cbz	x0, 2030 <PyThread_free_lock@plt+0x20>
    202c:	b	1e70 <__gmon_start__@plt>
    2030:	ret
    2034:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    2038:	add	x0, x0, #0x998
    203c:	adrp	x1, 18000 <PyInit_zlib@@Base+0x130a4>
    2040:	add	x1, x1, #0x998
    2044:	cmp	x0, x1
    2048:	b.eq	2074 <PyThread_free_lock@plt+0x64>  // b.none
    204c:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    2050:	ldr	x1, [x1, #4000]
    2054:	cbz	x1, 2074 <PyThread_free_lock@plt+0x64>
    2058:	stp	x29, x30, [sp, #-16]!
    205c:	mov	x29, sp
    2060:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    2064:	add	x0, x0, #0x998
    2068:	blr	x1
    206c:	ldp	x29, x30, [sp], #16
    2070:	ret
    2074:	ret
    2078:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    207c:	add	x0, x0, #0x998
    2080:	adrp	x1, 18000 <PyInit_zlib@@Base+0x130a4>
    2084:	add	x1, x1, #0x998
    2088:	sub	x0, x0, x1
    208c:	lsr	x1, x0, #63
    2090:	add	x0, x1, x0, asr #3
    2094:	cmp	xzr, x0, asr #1
    2098:	b.eq	20c8 <PyThread_free_lock@plt+0xb8>  // b.none
    209c:	asr	x1, x0, #1
    20a0:	adrp	x2, 17000 <PyInit_zlib@@Base+0x120a4>
    20a4:	ldr	x2, [x2, #4064]
    20a8:	cbz	x2, 20c8 <PyThread_free_lock@plt+0xb8>
    20ac:	stp	x29, x30, [sp, #-16]!
    20b0:	mov	x29, sp
    20b4:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    20b8:	add	x0, x0, #0x998
    20bc:	blr	x2
    20c0:	ldp	x29, x30, [sp], #16
    20c4:	ret
    20c8:	ret
    20cc:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    20d0:	ldrb	w0, [x0, #2456]
    20d4:	cbnz	w0, 2110 <PyThread_free_lock@plt+0x100>
    20d8:	stp	x29, x30, [sp, #-16]!
    20dc:	mov	x29, sp
    20e0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    20e4:	ldr	x0, [x0, #4016]
    20e8:	cbz	x0, 20f8 <PyThread_free_lock@plt+0xe8>
    20ec:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    20f0:	ldr	x0, [x0, #424]
    20f4:	bl	1d30 <__cxa_finalize@plt>
    20f8:	bl	2034 <PyThread_free_lock@plt+0x24>
    20fc:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    2100:	mov	w1, #0x1                   	// #1
    2104:	strb	w1, [x0, #2456]
    2108:	ldp	x29, x30, [sp], #16
    210c:	ret
    2110:	ret
    2114:	stp	x29, x30, [sp, #-16]!
    2118:	mov	x29, sp
    211c:	bl	2078 <PyThread_free_lock@plt+0x68>
    2120:	ldp	x29, x30, [sp], #16
    2124:	ret
    2128:	stp	x29, x30, [sp, #-16]!
    212c:	mov	x29, sp
    2130:	mov	x0, x1
    2134:	bl	1ef0 <PyMem_RawFree@plt>
    2138:	ldp	x29, x30, [sp], #16
    213c:	ret
    2140:	cbz	w2, 2158 <PyThread_free_lock@plt+0x148>
    2144:	mov	w3, w2
    2148:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    214c:	udiv	x0, x0, x3
    2150:	cmp	x0, w1, uxtw
    2154:	b.cc	2170 <PyThread_free_lock@plt+0x160>  // b.lo, b.ul, b.last
    2158:	stp	x29, x30, [sp, #-16]!
    215c:	mov	x29, sp
    2160:	umull	x0, w2, w1
    2164:	bl	1d40 <PyMem_RawMalloc@plt>
    2168:	ldp	x29, x30, [sp], #16
    216c:	ret
    2170:	mov	x0, #0x0                   	// #0
    2174:	ret
    2178:	stp	x29, x30, [sp, #-16]!
    217c:	mov	x29, sp
    2180:	mov	x3, x2
    2184:	cmn	w1, #0x6
    2188:	b.eq	21e8 <PyThread_free_lock@plt+0x1d8>  // b.none
    218c:	ldr	x4, [x0, #48]
    2190:	cbz	x4, 21b4 <PyThread_free_lock@plt+0x1a4>
    2194:	mov	w2, w1
    2198:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    219c:	add	x1, x1, #0x288
    21a0:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    21a4:	ldr	x0, [x0, #2464]
    21a8:	bl	1fe0 <PyErr_Format@plt>
    21ac:	ldp	x29, x30, [sp], #16
    21b0:	ret
    21b4:	cmn	w1, #0x3
    21b8:	b.eq	21f4 <PyThread_free_lock@plt+0x1e4>  // b.none
    21bc:	cmn	w1, #0x2
    21c0:	b.eq	2200 <PyThread_free_lock@plt+0x1f0>  // b.none
    21c4:	cmn	w1, #0x5
    21c8:	b.eq	220c <PyThread_free_lock@plt+0x1fc>  // b.none
    21cc:	mov	w2, w1
    21d0:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    21d4:	add	x1, x1, #0x278
    21d8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    21dc:	ldr	x0, [x0, #2464]
    21e0:	bl	1fe0 <PyErr_Format@plt>
    21e4:	b	21ac <PyThread_free_lock@plt+0x19c>
    21e8:	adrp	x4, 5000 <PyInit_zlib@@Base+0xa4>
    21ec:	add	x4, x4, #0x218
    21f0:	b	2194 <PyThread_free_lock@plt+0x184>
    21f4:	adrp	x4, 5000 <PyInit_zlib@@Base+0xa4>
    21f8:	add	x4, x4, #0x200
    21fc:	b	2194 <PyThread_free_lock@plt+0x184>
    2200:	adrp	x4, 5000 <PyInit_zlib@@Base+0xa4>
    2204:	add	x4, x4, #0x238
    2208:	b	2194 <PyThread_free_lock@plt+0x184>
    220c:	adrp	x4, 5000 <PyInit_zlib@@Base+0xa4>
    2210:	add	x4, x4, #0x258
    2214:	b	2194 <PyThread_free_lock@plt+0x184>
    2218:	stp	x29, x30, [sp, #-224]!
    221c:	mov	x29, sp
    2220:	stp	x19, x20, [sp, #16]
    2224:	mov	x20, x0
    2228:	mov	w2, #0x0                   	// #0
    222c:	add	x1, sp, #0x90
    2230:	ldr	x0, [x0, #152]
    2234:	bl	1f30 <PyObject_GetBuffer@plt>
    2238:	mov	w19, w0
    223c:	cmn	w0, #0x1
    2240:	b.eq	2270 <PyThread_free_lock@plt+0x260>  // b.none
    2244:	ldr	x2, [sp, #160]
    2248:	mov	x0, #0xffffffff            	// #4294967295
    224c:	cmp	x2, x0
    2250:	b.hi	2280 <PyThread_free_lock@plt+0x270>  // b.pmore
    2254:	ldr	x1, [sp, #144]
    2258:	add	x0, x20, #0x10
    225c:	bl	1ed0 <inflateSetDictionary@plt>
    2260:	mov	w19, w0
    2264:	add	x0, sp, #0x90
    2268:	bl	1d20 <PyBuffer_Release@plt>
    226c:	cbnz	w19, 22a8 <PyThread_free_lock@plt+0x298>
    2270:	mov	w0, w19
    2274:	ldp	x19, x20, [sp, #16]
    2278:	ldp	x29, x30, [sp], #224
    227c:	ret
    2280:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    2284:	add	x1, x1, #0x2a0
    2288:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    228c:	ldr	x0, [x0, #4056]
    2290:	ldr	x0, [x0]
    2294:	bl	1dc0 <PyErr_SetString@plt>
    2298:	add	x0, sp, #0x90
    229c:	bl	1d20 <PyBuffer_Release@plt>
    22a0:	mov	w19, #0xffffffff            	// #-1
    22a4:	b	2270 <PyThread_free_lock@plt+0x260>
    22a8:	ldp	x2, x3, [x20, #16]
    22ac:	stp	x2, x3, [sp, #32]
    22b0:	ldp	x2, x3, [x20, #32]
    22b4:	stp	x2, x3, [sp, #48]
    22b8:	ldp	x2, x3, [x20, #48]
    22bc:	stp	x2, x3, [sp, #64]
    22c0:	ldp	x2, x3, [x20, #64]
    22c4:	stp	x2, x3, [sp, #80]
    22c8:	ldp	x2, x3, [x20, #80]
    22cc:	stp	x2, x3, [sp, #96]
    22d0:	ldp	x2, x3, [x20, #96]
    22d4:	stp	x2, x3, [sp, #112]
    22d8:	ldp	x0, x1, [x20, #112]
    22dc:	stp	x0, x1, [sp, #128]
    22e0:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    22e4:	add	x2, x2, #0x2d0
    22e8:	mov	w1, w19
    22ec:	add	x0, sp, #0x20
    22f0:	bl	2178 <PyThread_free_lock@plt+0x168>
    22f4:	mov	w19, #0xffffffff            	// #-1
    22f8:	b	2270 <PyThread_free_lock@plt+0x260>
    22fc:	stp	x29, x30, [sp, #-32]!
    2300:	mov	x29, sp
    2304:	stp	x19, x20, [sp, #16]
    2308:	bl	1f60 <_PyObject_New@plt>
    230c:	mov	x19, x0
    2310:	cbz	x0, 2368 <PyThread_free_lock@plt+0x358>
    2314:	strb	wzr, [x0, #144]
    2318:	str	wzr, [x0, #148]
    231c:	str	xzr, [x0, #152]
    2320:	mov	x1, #0x0                   	// #0
    2324:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    2328:	add	x0, x0, #0x4d8
    232c:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    2330:	mov	x20, x0
    2334:	str	x0, [x19, #128]
    2338:	cbz	x0, 2378 <PyThread_free_lock@plt+0x368>
    233c:	mov	x1, #0x0                   	// #0
    2340:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    2344:	add	x0, x0, #0x4d8
    2348:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    234c:	mov	x20, x0
    2350:	str	x0, [x19, #136]
    2354:	cbz	x0, 23a0 <PyThread_free_lock@plt+0x390>
    2358:	bl	1f00 <PyThread_allocate_lock@plt>
    235c:	mov	x20, x0
    2360:	str	x0, [x19, #160]
    2364:	cbz	x0, 23c8 <PyThread_free_lock@plt+0x3b8>
    2368:	mov	x0, x19
    236c:	ldp	x19, x20, [sp, #16]
    2370:	ldp	x29, x30, [sp], #32
    2374:	ret
    2378:	ldr	x0, [x19]
    237c:	sub	x0, x0, #0x1
    2380:	str	x0, [x19]
    2384:	cbz	x0, 2390 <PyThread_free_lock@plt+0x380>
    2388:	mov	x19, x20
    238c:	b	2368 <PyThread_free_lock@plt+0x358>
    2390:	mov	x0, x19
    2394:	bl	1d80 <_Py_Dealloc@plt>
    2398:	mov	x19, x20
    239c:	b	2368 <PyThread_free_lock@plt+0x358>
    23a0:	ldr	x0, [x19]
    23a4:	sub	x0, x0, #0x1
    23a8:	str	x0, [x19]
    23ac:	cbz	x0, 23b8 <PyThread_free_lock@plt+0x3a8>
    23b0:	mov	x19, x20
    23b4:	b	2368 <PyThread_free_lock@plt+0x358>
    23b8:	mov	x0, x19
    23bc:	bl	1d80 <_Py_Dealloc@plt>
    23c0:	mov	x19, x20
    23c4:	b	2368 <PyThread_free_lock@plt+0x358>
    23c8:	ldr	x0, [x19]
    23cc:	sub	x0, x0, #0x1
    23d0:	str	x0, [x19]
    23d4:	cbz	x0, 23f8 <PyThread_free_lock@plt+0x3e8>
    23d8:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    23dc:	add	x1, x1, #0x2e8
    23e0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    23e4:	ldr	x0, [x0, #4024]
    23e8:	ldr	x0, [x0]
    23ec:	bl	1dc0 <PyErr_SetString@plt>
    23f0:	mov	x19, x20
    23f4:	b	2368 <PyThread_free_lock@plt+0x358>
    23f8:	mov	x0, x19
    23fc:	bl	1d80 <_Py_Dealloc@plt>
    2400:	b	23d8 <PyThread_free_lock@plt+0x3c8>
    2404:	sub	sp, sp, #0xc0
    2408:	stp	x29, x30, [sp, #16]
    240c:	add	x29, sp, #0x10
    2410:	stp	x19, x20, [sp, #32]
    2414:	stp	x21, x22, [sp, #48]
    2418:	mov	x20, x1
    241c:	mov	x1, x2
    2420:	cbz	x3, 25a0 <PyThread_free_lock@plt+0x590>
    2424:	ldr	x21, [x3, #16]
    2428:	add	x21, x2, x21
    242c:	add	x0, sp, #0xb0
    2430:	str	x0, [sp]
    2434:	mov	w7, #0x0                   	// #0
    2438:	mov	w6, #0x2                   	// #2
    243c:	mov	w5, #0x0                   	// #0
    2440:	adrp	x4, 18000 <PyInit_zlib@@Base+0x130a4>
    2444:	add	x4, x4, #0x1b0
    2448:	mov	x2, #0x0                   	// #0
    244c:	mov	x0, x20
    2450:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    2454:	mov	x20, x0
    2458:	cbz	x0, 26fc <PyThread_free_lock@plt+0x6ec>
    245c:	cbz	x21, 2704 <PyThread_free_lock@plt+0x6f4>
    2460:	ldr	x0, [x20]
    2464:	cbz	x0, 25ec <PyThread_free_lock@plt+0x5dc>
    2468:	ldr	x0, [x0, #8]
    246c:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    2470:	ldr	x1, [x1, #4008]
    2474:	cmp	x0, x1
    2478:	b.eq	25bc <PyThread_free_lock@plt+0x5ac>  // b.none
    247c:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    2480:	ldr	x1, [x1, #4008]
    2484:	bl	1fd0 <PyType_IsSubtype@plt>
    2488:	cbnz	w0, 25bc <PyThread_free_lock@plt+0x5ac>
    248c:	ldr	x0, [x20]
    2490:	bl	1ff0 <_PyLong_AsInt@plt>
    2494:	mov	w22, w0
    2498:	cmn	w0, #0x1
    249c:	b.eq	25dc <PyThread_free_lock@plt+0x5cc>  // b.none
    24a0:	cmp	x21, #0x1
    24a4:	b.eq	2708 <PyThread_free_lock@plt+0x6f8>  // b.none
    24a8:	ldr	x20, [x20, #8]
    24ac:	cbz	x20, 2708 <PyThread_free_lock@plt+0x6f8>
    24b0:	ldr	x0, [x20, #8]
    24b4:	ldr	x0, [x0, #160]
    24b8:	cbz	x0, 25f4 <PyThread_free_lock@plt+0x5e4>
    24bc:	ldr	x0, [x0]
    24c0:	cbz	x0, 25f4 <PyThread_free_lock@plt+0x5e4>
    24c4:	adrp	x1, 18000 <PyInit_zlib@@Base+0x130a4>
    24c8:	add	x1, x1, #0x1b0
    24cc:	add	x0, x1, #0x40
    24d0:	bl	22fc <PyThread_free_lock@plt+0x2ec>
    24d4:	mov	x19, x0
    24d8:	cbz	x0, 268c <PyThread_free_lock@plt+0x67c>
    24dc:	str	xzr, [x19, #96]
    24e0:	adrp	x0, 2000 <deflateSetDictionary@plt>
    24e4:	add	x0, x0, #0x140
    24e8:	str	x0, [x19, #80]
    24ec:	adrp	x0, 2000 <deflateSetDictionary@plt>
    24f0:	add	x0, x0, #0x128
    24f4:	str	x0, [x19, #88]
    24f8:	str	xzr, [x19, #16]
    24fc:	str	wzr, [x19, #24]
    2500:	ldr	x0, [x20]
    2504:	add	x0, x0, #0x1
    2508:	str	x0, [x20]
    250c:	str	x20, [x19, #152]
    2510:	mov	w3, #0x70                  	// #112
    2514:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    2518:	add	x2, x2, #0x358
    251c:	mov	w1, w22
    2520:	add	x0, x19, #0x10
    2524:	bl	1f80 <inflateInit2_@plt>
    2528:	mov	w1, w0
    252c:	cmn	w0, #0x2
    2530:	b.eq	2660 <PyThread_free_lock@plt+0x650>  // b.none
    2534:	cbz	w0, 2614 <PyThread_free_lock@plt+0x604>
    2538:	cmn	w0, #0x4
    253c:	b.eq	26b0 <PyThread_free_lock@plt+0x6a0>  // b.none
    2540:	ldp	x2, x3, [x19, #16]
    2544:	stp	x2, x3, [sp, #64]
    2548:	ldp	x2, x3, [x19, #32]
    254c:	stp	x2, x3, [sp, #80]
    2550:	ldp	x2, x3, [x19, #48]
    2554:	stp	x2, x3, [sp, #96]
    2558:	ldp	x2, x3, [x19, #64]
    255c:	stp	x2, x3, [sp, #112]
    2560:	ldp	x2, x3, [x19, #80]
    2564:	stp	x2, x3, [sp, #128]
    2568:	ldp	x2, x3, [x19, #96]
    256c:	stp	x2, x3, [sp, #144]
    2570:	ldp	x2, x3, [x19, #112]
    2574:	stp	x2, x3, [sp, #160]
    2578:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    257c:	add	x2, x2, #0x3b0
    2580:	add	x0, sp, #0x40
    2584:	bl	2178 <PyThread_free_lock@plt+0x168>
    2588:	ldr	x0, [x19]
    258c:	sub	x0, x0, #0x1
    2590:	str	x0, [x19]
    2594:	cbz	x0, 26ec <PyThread_free_lock@plt+0x6dc>
    2598:	mov	x19, #0x0                   	// #0
    259c:	b	268c <PyThread_free_lock@plt+0x67c>
    25a0:	cmp	x20, #0x0
    25a4:	ccmp	x2, #0x2, #0x2, ne  // ne = any
    25a8:	b.ls	25b4 <PyThread_free_lock@plt+0x5a4>  // b.plast
    25ac:	mov	x21, x2
    25b0:	b	242c <PyThread_free_lock@plt+0x41c>
    25b4:	mov	x21, x2
    25b8:	b	245c <PyThread_free_lock@plt+0x44c>
    25bc:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    25c0:	add	x1, x1, #0x300
    25c4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    25c8:	ldr	x0, [x0, #4040]
    25cc:	ldr	x0, [x0]
    25d0:	bl	1dc0 <PyErr_SetString@plt>
    25d4:	mov	x19, #0x0                   	// #0
    25d8:	b	268c <PyThread_free_lock@plt+0x67c>
    25dc:	bl	1eb0 <PyErr_Occurred@plt>
    25e0:	mov	x19, #0x0                   	// #0
    25e4:	cbz	x0, 24a0 <PyThread_free_lock@plt+0x490>
    25e8:	b	268c <PyThread_free_lock@plt+0x67c>
    25ec:	mov	w22, #0xf                   	// #15
    25f0:	b	24a8 <PyThread_free_lock@plt+0x498>
    25f4:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    25f8:	add	x1, x1, #0x328
    25fc:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    2600:	ldr	x0, [x0, #4040]
    2604:	ldr	x0, [x0]
    2608:	bl	1dc0 <PyErr_SetString@plt>
    260c:	mov	x19, #0x0                   	// #0
    2610:	b	268c <PyThread_free_lock@plt+0x67c>
    2614:	mov	w0, #0x1                   	// #1
    2618:	str	w0, [x19, #148]
    261c:	ldr	x0, [x19, #152]
    2620:	cmp	x0, #0x0
    2624:	ccmp	w22, #0x0, #0x0, ne  // ne = any
    2628:	b.ge	268c <PyThread_free_lock@plt+0x67c>  // b.tcont
    262c:	mov	x0, x19
    2630:	bl	2218 <PyThread_free_lock@plt+0x208>
    2634:	tbz	w0, #31, 268c <PyThread_free_lock@plt+0x67c>
    2638:	ldr	x0, [x19]
    263c:	sub	x0, x0, #0x1
    2640:	str	x0, [x19]
    2644:	cbz	x0, 2650 <PyThread_free_lock@plt+0x640>
    2648:	mov	x19, #0x0                   	// #0
    264c:	b	268c <PyThread_free_lock@plt+0x67c>
    2650:	mov	x0, x19
    2654:	bl	1d80 <_Py_Dealloc@plt>
    2658:	mov	x19, #0x0                   	// #0
    265c:	b	268c <PyThread_free_lock@plt+0x67c>
    2660:	ldr	x0, [x19]
    2664:	sub	x0, x0, #0x1
    2668:	str	x0, [x19]
    266c:	cbz	x0, 26a4 <PyThread_free_lock@plt+0x694>
    2670:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    2674:	add	x1, x1, #0x360
    2678:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    267c:	ldr	x0, [x0, #4032]
    2680:	ldr	x0, [x0]
    2684:	bl	1dc0 <PyErr_SetString@plt>
    2688:	mov	x19, #0x0                   	// #0
    268c:	mov	x0, x19
    2690:	ldp	x19, x20, [sp, #32]
    2694:	ldp	x21, x22, [sp, #48]
    2698:	ldp	x29, x30, [sp, #16]
    269c:	add	sp, sp, #0xc0
    26a0:	ret
    26a4:	mov	x0, x19
    26a8:	bl	1d80 <_Py_Dealloc@plt>
    26ac:	b	2670 <PyThread_free_lock@plt+0x660>
    26b0:	ldr	x0, [x19]
    26b4:	sub	x0, x0, #0x1
    26b8:	str	x0, [x19]
    26bc:	cbz	x0, 26e0 <PyThread_free_lock@plt+0x6d0>
    26c0:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    26c4:	add	x1, x1, #0x380
    26c8:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    26cc:	ldr	x0, [x0, #4024]
    26d0:	ldr	x0, [x0]
    26d4:	bl	1dc0 <PyErr_SetString@plt>
    26d8:	mov	x19, #0x0                   	// #0
    26dc:	b	268c <PyThread_free_lock@plt+0x67c>
    26e0:	mov	x0, x19
    26e4:	bl	1d80 <_Py_Dealloc@plt>
    26e8:	b	26c0 <PyThread_free_lock@plt+0x6b0>
    26ec:	mov	x0, x19
    26f0:	bl	1d80 <_Py_Dealloc@plt>
    26f4:	mov	x19, #0x0                   	// #0
    26f8:	b	268c <PyThread_free_lock@plt+0x67c>
    26fc:	mov	x19, x0
    2700:	b	268c <PyThread_free_lock@plt+0x67c>
    2704:	mov	w22, #0xf                   	// #15
    2708:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    270c:	add	x0, x0, #0x1b0
    2710:	add	x0, x0, #0x40
    2714:	bl	22fc <PyThread_free_lock@plt+0x2ec>
    2718:	mov	x19, x0
    271c:	cbz	x0, 268c <PyThread_free_lock@plt+0x67c>
    2720:	str	xzr, [x19, #96]
    2724:	adrp	x0, 2000 <deflateSetDictionary@plt>
    2728:	add	x0, x0, #0x140
    272c:	str	x0, [x19, #80]
    2730:	adrp	x0, 2000 <deflateSetDictionary@plt>
    2734:	add	x0, x0, #0x128
    2738:	str	x0, [x19, #88]
    273c:	str	xzr, [x19, #16]
    2740:	str	wzr, [x19, #24]
    2744:	b	2510 <PyThread_free_lock@plt+0x500>
    2748:	stp	x29, x30, [sp, #-48]!
    274c:	mov	x29, sp
    2750:	stp	x19, x20, [sp, #16]
    2754:	mov	x20, x1
    2758:	bl	1de0 <_PyLong_FromNbIndexOrNbInt@plt>
    275c:	cbz	x0, 27c4 <PyThread_free_lock@plt+0x7b4>
    2760:	str	x21, [sp, #32]
    2764:	mov	x19, x0
    2768:	bl	1e20 <PyLong_AsSsize_t@plt>
    276c:	mov	x21, x0
    2770:	ldr	x1, [x19]
    2774:	sub	x1, x1, #0x1
    2778:	str	x1, [x19]
    277c:	cbz	x1, 27a0 <PyThread_free_lock@plt+0x790>
    2780:	cmn	x21, #0x1
    2784:	b.eq	27ac <PyThread_free_lock@plt+0x79c>  // b.none
    2788:	str	x21, [x20]
    278c:	mov	w0, #0x1                   	// #1
    2790:	ldr	x21, [sp, #32]
    2794:	ldp	x19, x20, [sp, #16]
    2798:	ldp	x29, x30, [sp], #48
    279c:	ret
    27a0:	mov	x0, x19
    27a4:	bl	1d80 <_Py_Dealloc@plt>
    27a8:	b	2780 <PyThread_free_lock@plt+0x770>
    27ac:	bl	1eb0 <PyErr_Occurred@plt>
    27b0:	mov	x1, x0
    27b4:	mov	w0, #0x0                   	// #0
    27b8:	cbz	x1, 2788 <PyThread_free_lock@plt+0x778>
    27bc:	ldr	x21, [sp, #32]
    27c0:	b	2794 <PyThread_free_lock@plt+0x784>
    27c4:	mov	w0, #0x0                   	// #0
    27c8:	b	2794 <PyThread_free_lock@plt+0x784>
    27cc:	stp	x29, x30, [sp, #-48]!
    27d0:	mov	x29, sp
    27d4:	stp	x19, x20, [sp, #16]
    27d8:	stp	x21, x22, [sp, #32]
    27dc:	mov	x20, x0
    27e0:	mov	x21, x1
    27e4:	mov	x19, x2
    27e8:	ldr	x2, [x1]
    27ec:	cbz	x2, 2840 <PyThread_free_lock@plt+0x830>
    27f0:	add	x0, x2, #0x20
    27f4:	ldr	x2, [x20, #24]
    27f8:	sub	x2, x2, x0
    27fc:	cmp	x2, x19
    2800:	b.eq	285c <PyThread_free_lock@plt+0x84c>  // b.none
    2804:	sub	x3, x19, x2
    2808:	sub	w0, w19, w2
    280c:	mov	x1, #0xffffffff            	// #4294967295
    2810:	cmp	x3, x1
    2814:	csinv	w0, w0, wzr, ls  // ls = plast
    2818:	str	w0, [x20, #32]
    281c:	ldr	x1, [x21]
    2820:	add	x1, x1, #0x20
    2824:	add	x2, x1, x2
    2828:	str	x2, [x20, #24]
    282c:	mov	x0, x19
    2830:	ldp	x19, x20, [sp, #16]
    2834:	ldp	x21, x22, [sp, #32]
    2838:	ldp	x29, x30, [sp], #48
    283c:	ret
    2840:	mov	x1, x19
    2844:	mov	x0, #0x0                   	// #0
    2848:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    284c:	str	x0, [x21]
    2850:	cbz	x0, 288c <PyThread_free_lock@plt+0x87c>
    2854:	mov	x2, #0x0                   	// #0
    2858:	b	2804 <PyThread_free_lock@plt+0x7f4>
    285c:	cmp	x19, x3
    2860:	b.eq	2894 <PyThread_free_lock@plt+0x884>  // b.none
    2864:	lsl	x0, x19, #1
    2868:	cmp	x19, x3, asr #1
    286c:	csel	x22, x0, x3, le
    2870:	mov	x1, x22
    2874:	mov	x0, x21
    2878:	bl	1cf0 <_PyBytes_Resize@plt>
    287c:	tbnz	w0, #31, 289c <PyThread_free_lock@plt+0x88c>
    2880:	mov	x2, x19
    2884:	mov	x19, x22
    2888:	b	2804 <PyThread_free_lock@plt+0x7f4>
    288c:	mov	x0, #0xffffffffffffffff    	// #-1
    2890:	b	2830 <PyThread_free_lock@plt+0x820>
    2894:	mov	x0, #0xfffffffffffffffe    	// #-2
    2898:	b	2830 <PyThread_free_lock@plt+0x820>
    289c:	mov	x0, #0xffffffffffffffff    	// #-1
    28a0:	b	2830 <PyThread_free_lock@plt+0x820>
    28a4:	stp	x29, x30, [sp, #-32]!
    28a8:	mov	x29, sp
    28ac:	str	x19, [sp, #16]
    28b0:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
    28b4:	bl	27cc <PyThread_free_lock@plt+0x7bc>
    28b8:	mov	x19, x0
    28bc:	cmn	x0, #0x2
    28c0:	b.eq	28d4 <PyThread_free_lock@plt+0x8c4>  // b.none
    28c4:	mov	x0, x19
    28c8:	ldr	x19, [sp, #16]
    28cc:	ldp	x29, x30, [sp], #32
    28d0:	ret
    28d4:	bl	1d90 <PyErr_NoMemory@plt>
    28d8:	b	28c4 <PyThread_free_lock@plt+0x8b4>
    28dc:	sub	sp, sp, #0x1e0
    28e0:	stp	x29, x30, [sp, #16]
    28e4:	add	x29, sp, #0x10
    28e8:	stp	x19, x20, [sp, #32]
    28ec:	stp	x21, x22, [sp, #48]
    28f0:	mov	x19, x1
    28f4:	mov	x1, x2
    28f8:	cbz	x3, 29f4 <PyThread_free_lock@plt+0x9e4>
    28fc:	ldr	x21, [x3, #16]
    2900:	add	x21, x2, x21
    2904:	add	x0, sp, #0x210
    2908:	stp	xzr, xzr, [x0, #-152]
    290c:	stp	xzr, xzr, [x0, #-136]
    2910:	stp	xzr, xzr, [x0, #-120]
    2914:	stp	xzr, xzr, [x0, #-104]
    2918:	stp	xzr, xzr, [x0, #-88]
    291c:	mov	x0, #0x4000                	// #16384
    2920:	str	x0, [sp, #368]
    2924:	add	x0, sp, #0x1c8
    2928:	str	x0, [sp]
    292c:	mov	w7, #0x0                   	// #0
    2930:	mov	w6, #0x3                   	// #3
    2934:	mov	w5, #0x1                   	// #1
    2938:	adrp	x4, 18000 <PyInit_zlib@@Base+0x130a4>
    293c:	add	x4, x4, #0x1b0
    2940:	add	x4, x4, #0x1e0
    2944:	mov	x2, #0x0                   	// #0
    2948:	mov	x0, x19
    294c:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    2950:	mov	x19, x0
    2954:	mov	x20, x0
    2958:	cbz	x0, 2c60 <PyThread_free_lock@plt+0xc50>
    295c:	mov	w2, #0x0                   	// #0
    2960:	add	x1, sp, #0x178
    2964:	ldr	x0, [x19]
    2968:	bl	1f30 <PyObject_GetBuffer@plt>
    296c:	mov	x20, #0x0                   	// #0
    2970:	cbnz	w0, 2c60 <PyThread_free_lock@plt+0xc50>
    2974:	mov	w1, #0x43                  	// #67
    2978:	add	x0, sp, #0x178
    297c:	bl	1d60 <PyBuffer_IsContiguous@plt>
    2980:	cbz	w0, 2a34 <PyThread_free_lock@plt+0xa24>
    2984:	stp	x23, x24, [sp, #64]
    2988:	cmp	x21, #0x1
    298c:	b.eq	2a98 <PyThread_free_lock@plt+0xa88>  // b.none
    2990:	ldr	x0, [x19, #8]
    2994:	cbz	x0, 2a90 <PyThread_free_lock@plt+0xa80>
    2998:	ldr	x0, [x0, #8]
    299c:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    29a0:	ldr	x1, [x1, #4008]
    29a4:	cmp	x0, x1
    29a8:	b.eq	2a58 <PyThread_free_lock@plt+0xa48>  // b.none
    29ac:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    29b0:	ldr	x1, [x1, #4008]
    29b4:	bl	1fd0 <PyType_IsSubtype@plt>
    29b8:	cbnz	w0, 2a58 <PyThread_free_lock@plt+0xa48>
    29bc:	ldr	x0, [x19, #8]
    29c0:	bl	1ff0 <_PyLong_AsInt@plt>
    29c4:	mov	w23, w0
    29c8:	cmn	w0, #0x1
    29cc:	b.eq	2a7c <PyThread_free_lock@plt+0xa6c>  // b.none
    29d0:	cmp	x21, #0x2
    29d4:	b.eq	2a9c <PyThread_free_lock@plt+0xa8c>  // b.none
    29d8:	add	x1, sp, #0x170
    29dc:	ldr	x0, [x19, #16]
    29e0:	bl	2748 <PyThread_free_lock@plt+0x738>
    29e4:	cbnz	w0, 2a9c <PyThread_free_lock@plt+0xa8c>
    29e8:	mov	x20, #0x0                   	// #0
    29ec:	ldp	x23, x24, [sp, #64]
    29f0:	b	2c60 <PyThread_free_lock@plt+0xc50>
    29f4:	add	x0, sp, #0x210
    29f8:	stp	xzr, xzr, [x0, #-152]
    29fc:	stp	xzr, xzr, [x0, #-136]
    2a00:	stp	xzr, xzr, [x0, #-120]
    2a04:	stp	xzr, xzr, [x0, #-104]
    2a08:	stp	xzr, xzr, [x0, #-88]
    2a0c:	mov	x0, #0x4000                	// #16384
    2a10:	str	x0, [sp, #368]
    2a14:	sub	x0, x2, #0x1
    2a18:	cmp	x0, #0x2
    2a1c:	b.hi	2a2c <PyThread_free_lock@plt+0xa1c>  // b.pmore
    2a20:	mov	x21, x2
    2a24:	cbz	x19, 2924 <PyThread_free_lock@plt+0x914>
    2a28:	b	295c <PyThread_free_lock@plt+0x94c>
    2a2c:	mov	x21, x2
    2a30:	b	2924 <PyThread_free_lock@plt+0x914>
    2a34:	ldr	x3, [x19]
    2a38:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    2a3c:	add	x2, x2, #0x3d8
    2a40:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    2a44:	add	x1, x1, #0x3f0
    2a48:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    2a4c:	add	x0, x0, #0x400
    2a50:	bl	1e30 <_PyArg_BadArgument@plt>
    2a54:	b	2c60 <PyThread_free_lock@plt+0xc50>
    2a58:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    2a5c:	add	x1, x1, #0x300
    2a60:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    2a64:	ldr	x0, [x0, #4040]
    2a68:	ldr	x0, [x0]
    2a6c:	bl	1dc0 <PyErr_SetString@plt>
    2a70:	mov	x20, #0x0                   	// #0
    2a74:	ldp	x23, x24, [sp, #64]
    2a78:	b	2c60 <PyThread_free_lock@plt+0xc50>
    2a7c:	bl	1eb0 <PyErr_Occurred@plt>
    2a80:	mov	x20, #0x0                   	// #0
    2a84:	cbz	x0, 29d0 <PyThread_free_lock@plt+0x9c0>
    2a88:	ldp	x23, x24, [sp, #64]
    2a8c:	b	2c60 <PyThread_free_lock@plt+0xc50>
    2a90:	mov	w23, #0xf                   	// #15
    2a94:	b	29d8 <PyThread_free_lock@plt+0x9c8>
    2a98:	mov	w23, #0xf                   	// #15
    2a9c:	ldr	x19, [sp, #368]
    2aa0:	str	xzr, [sp, #248]
    2aa4:	tbnz	x19, #63, 2c04 <PyThread_free_lock@plt+0xbf4>
    2aa8:	cmp	x19, #0x0
    2aac:	csinc	x19, x19, xzr, ne  // ne = any
    2ab0:	ldr	x22, [sp, #392]
    2ab4:	str	xzr, [sp, #336]
    2ab8:	adrp	x1, 2000 <deflateSetDictionary@plt>
    2abc:	add	x1, x1, #0x140
    2ac0:	str	x1, [sp, #320]
    2ac4:	adrp	x1, 2000 <deflateSetDictionary@plt>
    2ac8:	add	x1, x1, #0x128
    2acc:	str	x1, [sp, #328]
    2ad0:	str	wzr, [sp, #264]
    2ad4:	ldr	x0, [sp, #376]
    2ad8:	str	x0, [sp, #256]
    2adc:	mov	w3, #0x70                  	// #112
    2ae0:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    2ae4:	add	x2, x2, #0x358
    2ae8:	mov	w1, w23
    2aec:	add	x0, sp, #0x100
    2af0:	bl	1f80 <inflateInit2_@plt>
    2af4:	mov	w20, w0
    2af8:	cmn	w0, #0x4
    2afc:	b.eq	2c28 <PyThread_free_lock@plt+0xc18>  // b.none
    2b00:	cbnz	w0, 2c88 <PyThread_free_lock@plt+0xc78>
    2b04:	stp	x25, x26, [sp, #80]
    2b08:	stp	x27, x28, [sp, #96]
    2b0c:	mov	x26, #0xffffffff            	// #4294967295
    2b10:	mov	w28, #0xffffffff            	// #-1
    2b14:	mov	x27, #0xffffffff00000001    	// #-4294967295
    2b18:	add	x25, sp, #0xf8
    2b1c:	add	x24, sp, #0x100
    2b20:	cmp	x22, x26
    2b24:	b.hi	2e44 <PyThread_free_lock@plt+0xe34>  // b.pmore
    2b28:	str	w22, [sp, #264]
    2b2c:	ands	x22, x22, #0xffffffff00000000
    2b30:	mov	w0, #0x4                   	// #4
    2b34:	csel	w23, w20, w0, ne  // ne = any
    2b38:	mov	x2, x19
    2b3c:	mov	x1, x25
    2b40:	mov	x0, x24
    2b44:	bl	28a4 <PyThread_free_lock@plt+0x894>
    2b48:	mov	x19, x0
    2b4c:	tbnz	x0, #63, 2ce0 <PyThread_free_lock@plt+0xcd0>
    2b50:	bl	1fa0 <PyEval_SaveThread@plt>
    2b54:	str	x0, [sp, #120]
    2b58:	mov	w1, w23
    2b5c:	mov	x0, x24
    2b60:	bl	1d00 <inflate@plt>
    2b64:	mov	w21, w0
    2b68:	ldr	x0, [sp, #120]
    2b6c:	bl	1d10 <PyEval_RestoreThread@plt>
    2b70:	cmn	w21, #0x4
    2b74:	b.eq	2d5c <PyThread_free_lock@plt+0xd4c>  // b.none
    2b78:	cmn	w21, #0x3
    2b7c:	b.lt	2cf4 <PyThread_free_lock@plt+0xce4>  // b.tstop
    2b80:	cmp	w21, #0x1
    2b84:	b.hi	2cfc <PyThread_free_lock@plt+0xcec>  // b.pmore
    2b88:	ldr	w0, [sp, #288]
    2b8c:	cbz	w0, 2b38 <PyThread_free_lock@plt+0xb28>
    2b90:	cmp	x22, #0x0
    2b94:	ccmp	w21, #0x1, #0x4, ne  // ne = any
    2b98:	b.ne	2b20 <PyThread_free_lock@plt+0xb10>  // b.any
    2b9c:	cmp	w21, #0x1
    2ba0:	b.eq	2d88 <PyThread_free_lock@plt+0xd78>  // b.none
    2ba4:	add	x0, sp, #0x100
    2ba8:	bl	1e90 <inflateEnd@plt>
    2bac:	ldp	x0, x1, [sp, #256]
    2bb0:	stp	x0, x1, [sp, #128]
    2bb4:	ldp	x0, x1, [sp, #272]
    2bb8:	stp	x0, x1, [sp, #144]
    2bbc:	ldp	x0, x1, [sp, #288]
    2bc0:	stp	x0, x1, [sp, #160]
    2bc4:	ldp	x0, x1, [sp, #304]
    2bc8:	stp	x0, x1, [sp, #176]
    2bcc:	ldp	x0, x1, [sp, #320]
    2bd0:	stp	x0, x1, [sp, #192]
    2bd4:	ldp	x0, x1, [sp, #336]
    2bd8:	stp	x0, x1, [sp, #208]
    2bdc:	ldp	x0, x1, [sp, #352]
    2be0:	stp	x0, x1, [sp, #224]
    2be4:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    2be8:	add	x2, x2, #0x480
    2bec:	mov	w1, w21
    2bf0:	add	x0, sp, #0x80
    2bf4:	bl	2178 <PyThread_free_lock@plt+0x168>
    2bf8:	ldp	x25, x26, [sp, #80]
    2bfc:	ldp	x27, x28, [sp, #96]
    2c00:	b	2c40 <PyThread_free_lock@plt+0xc30>
    2c04:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    2c08:	add	x1, x1, #0x410
    2c0c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    2c10:	ldr	x0, [x0, #4032]
    2c14:	ldr	x0, [x0]
    2c18:	bl	1dc0 <PyErr_SetString@plt>
    2c1c:	mov	x20, #0x0                   	// #0
    2c20:	ldp	x23, x24, [sp, #64]
    2c24:	b	2c60 <PyThread_free_lock@plt+0xc50>
    2c28:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    2c2c:	add	x1, x1, #0x430
    2c30:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    2c34:	ldr	x0, [x0, #4024]
    2c38:	ldr	x0, [x0]
    2c3c:	bl	1dc0 <PyErr_SetString@plt>
    2c40:	ldr	x20, [sp, #248]
    2c44:	cbz	x20, 2e3c <PyThread_free_lock@plt+0xe2c>
    2c48:	ldr	x0, [x20]
    2c4c:	sub	x0, x0, #0x1
    2c50:	str	x0, [x20]
    2c54:	cbz	x0, 2e28 <PyThread_free_lock@plt+0xe18>
    2c58:	mov	x20, #0x0                   	// #0
    2c5c:	ldp	x23, x24, [sp, #64]
    2c60:	ldr	x0, [sp, #384]
    2c64:	cbz	x0, 2c70 <PyThread_free_lock@plt+0xc60>
    2c68:	add	x0, sp, #0x178
    2c6c:	bl	1d20 <PyBuffer_Release@plt>
    2c70:	mov	x0, x20
    2c74:	ldp	x19, x20, [sp, #32]
    2c78:	ldp	x21, x22, [sp, #48]
    2c7c:	ldp	x29, x30, [sp, #16]
    2c80:	add	sp, sp, #0x1e0
    2c84:	ret
    2c88:	add	x0, sp, #0x100
    2c8c:	bl	1e90 <inflateEnd@plt>
    2c90:	ldp	x0, x1, [sp, #256]
    2c94:	stp	x0, x1, [sp, #128]
    2c98:	ldp	x0, x1, [sp, #272]
    2c9c:	stp	x0, x1, [sp, #144]
    2ca0:	ldp	x0, x1, [sp, #288]
    2ca4:	stp	x0, x1, [sp, #160]
    2ca8:	ldp	x0, x1, [sp, #304]
    2cac:	stp	x0, x1, [sp, #176]
    2cb0:	ldp	x0, x1, [sp, #320]
    2cb4:	stp	x0, x1, [sp, #192]
    2cb8:	ldp	x0, x1, [sp, #336]
    2cbc:	stp	x0, x1, [sp, #208]
    2cc0:	ldp	x0, x1, [sp, #352]
    2cc4:	stp	x0, x1, [sp, #224]
    2cc8:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    2ccc:	add	x2, x2, #0x458
    2cd0:	mov	w1, w20
    2cd4:	add	x0, sp, #0x80
    2cd8:	bl	2178 <PyThread_free_lock@plt+0x168>
    2cdc:	b	2c40 <PyThread_free_lock@plt+0xc30>
    2ce0:	add	x0, sp, #0x100
    2ce4:	bl	1e90 <inflateEnd@plt>
    2ce8:	ldp	x25, x26, [sp, #80]
    2cec:	ldp	x27, x28, [sp, #96]
    2cf0:	b	2c40 <PyThread_free_lock@plt+0xc30>
    2cf4:	cmn	w21, #0x5
    2cf8:	b.eq	2b88 <PyThread_free_lock@plt+0xb78>  // b.none
    2cfc:	add	x0, sp, #0x100
    2d00:	bl	1e90 <inflateEnd@plt>
    2d04:	ldp	x0, x1, [sp, #256]
    2d08:	stp	x0, x1, [sp, #128]
    2d0c:	ldp	x0, x1, [sp, #272]
    2d10:	stp	x0, x1, [sp, #144]
    2d14:	ldp	x0, x1, [sp, #288]
    2d18:	stp	x0, x1, [sp, #160]
    2d1c:	ldp	x0, x1, [sp, #304]
    2d20:	stp	x0, x1, [sp, #176]
    2d24:	ldp	x0, x1, [sp, #320]
    2d28:	stp	x0, x1, [sp, #192]
    2d2c:	ldp	x0, x1, [sp, #336]
    2d30:	stp	x0, x1, [sp, #208]
    2d34:	ldp	x0, x1, [sp, #352]
    2d38:	stp	x0, x1, [sp, #224]
    2d3c:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    2d40:	add	x2, x2, #0x480
    2d44:	mov	w1, w21
    2d48:	add	x0, sp, #0x80
    2d4c:	bl	2178 <PyThread_free_lock@plt+0x168>
    2d50:	ldp	x25, x26, [sp, #80]
    2d54:	ldp	x27, x28, [sp, #96]
    2d58:	b	2c40 <PyThread_free_lock@plt+0xc30>
    2d5c:	add	x0, sp, #0x100
    2d60:	bl	1e90 <inflateEnd@plt>
    2d64:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    2d68:	add	x1, x1, #0x430
    2d6c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    2d70:	ldr	x0, [x0, #4024]
    2d74:	ldr	x0, [x0]
    2d78:	bl	1dc0 <PyErr_SetString@plt>
    2d7c:	ldp	x25, x26, [sp, #80]
    2d80:	ldp	x27, x28, [sp, #96]
    2d84:	b	2c40 <PyThread_free_lock@plt+0xc30>
    2d88:	add	x0, sp, #0x100
    2d8c:	bl	1e90 <inflateEnd@plt>
    2d90:	mov	w1, w0
    2d94:	cbnz	w0, 2dc8 <PyThread_free_lock@plt+0xdb8>
    2d98:	ldr	x0, [sp, #248]
    2d9c:	add	x0, x0, #0x20
    2da0:	ldr	x1, [sp, #280]
    2da4:	sub	x1, x1, x0
    2da8:	add	x0, sp, #0xf8
    2dac:	bl	1cf0 <_PyBytes_Resize@plt>
    2db0:	tbnz	w0, #31, 2e1c <PyThread_free_lock@plt+0xe0c>
    2db4:	ldr	x20, [sp, #248]
    2db8:	ldp	x23, x24, [sp, #64]
    2dbc:	ldp	x25, x26, [sp, #80]
    2dc0:	ldp	x27, x28, [sp, #96]
    2dc4:	b	2c60 <PyThread_free_lock@plt+0xc50>
    2dc8:	ldp	x2, x3, [sp, #256]
    2dcc:	stp	x2, x3, [sp, #128]
    2dd0:	ldp	x2, x3, [sp, #272]
    2dd4:	stp	x2, x3, [sp, #144]
    2dd8:	ldp	x2, x3, [sp, #288]
    2ddc:	stp	x2, x3, [sp, #160]
    2de0:	ldp	x2, x3, [sp, #304]
    2de4:	stp	x2, x3, [sp, #176]
    2de8:	ldp	x2, x3, [sp, #320]
    2dec:	stp	x2, x3, [sp, #192]
    2df0:	ldp	x2, x3, [sp, #336]
    2df4:	stp	x2, x3, [sp, #208]
    2df8:	ldp	x2, x3, [sp, #352]
    2dfc:	stp	x2, x3, [sp, #224]
    2e00:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    2e04:	add	x2, x2, #0x4a0
    2e08:	add	x0, sp, #0x80
    2e0c:	bl	2178 <PyThread_free_lock@plt+0x168>
    2e10:	ldp	x25, x26, [sp, #80]
    2e14:	ldp	x27, x28, [sp, #96]
    2e18:	b	2c40 <PyThread_free_lock@plt+0xc30>
    2e1c:	ldp	x25, x26, [sp, #80]
    2e20:	ldp	x27, x28, [sp, #96]
    2e24:	b	2c40 <PyThread_free_lock@plt+0xc30>
    2e28:	mov	x0, x20
    2e2c:	bl	1d80 <_Py_Dealloc@plt>
    2e30:	mov	x20, #0x0                   	// #0
    2e34:	ldp	x23, x24, [sp, #64]
    2e38:	b	2c60 <PyThread_free_lock@plt+0xc50>
    2e3c:	ldp	x23, x24, [sp, #64]
    2e40:	b	2c60 <PyThread_free_lock@plt+0xc50>
    2e44:	str	w28, [sp, #264]
    2e48:	add	x22, x22, x27
    2e4c:	mov	w23, w20
    2e50:	b	2b38 <PyThread_free_lock@plt+0xb28>
    2e54:	stp	x29, x30, [sp, #-144]!
    2e58:	mov	x29, sp
    2e5c:	stp	x19, x20, [sp, #16]
    2e60:	stp	x21, x22, [sp, #32]
    2e64:	mov	x21, x1
    2e68:	mov	x19, x2
    2e6c:	stp	xzr, xzr, [sp, #64]
    2e70:	stp	xzr, xzr, [sp, #80]
    2e74:	stp	xzr, xzr, [sp, #96]
    2e78:	stp	xzr, xzr, [sp, #112]
    2e7c:	stp	xzr, xzr, [sp, #128]
    2e80:	sub	x0, x2, #0x1
    2e84:	cmp	x0, #0x1
    2e88:	b.ls	2ea8 <PyThread_free_lock@plt+0xe98>  // b.plast
    2e8c:	mov	x3, #0x2                   	// #2
    2e90:	mov	x2, #0x1                   	// #1
    2e94:	mov	x1, x19
    2e98:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    2e9c:	add	x0, x0, #0x4c0
    2ea0:	bl	1e80 <_PyArg_CheckPositional@plt>
    2ea4:	cbz	w0, 3038 <PyThread_free_lock@plt+0x1028>
    2ea8:	mov	w2, #0x0                   	// #0
    2eac:	add	x1, sp, #0x40
    2eb0:	ldr	x0, [x21]
    2eb4:	bl	1f30 <PyObject_GetBuffer@plt>
    2eb8:	mov	x20, #0x0                   	// #0
    2ebc:	cbnz	w0, 2fa0 <PyThread_free_lock@plt+0xf90>
    2ec0:	mov	w1, #0x43                  	// #67
    2ec4:	add	x0, sp, #0x40
    2ec8:	bl	1d60 <PyBuffer_IsContiguous@plt>
    2ecc:	cbz	w0, 2fc4 <PyThread_free_lock@plt+0xfb4>
    2ed0:	cmp	x19, #0x1
    2ed4:	b.le	3018 <PyThread_free_lock@plt+0x1008>
    2ed8:	ldr	x0, [x21, #8]
    2edc:	ldr	x0, [x0, #8]
    2ee0:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    2ee4:	ldr	x1, [x1, #4008]
    2ee8:	cmp	x0, x1
    2eec:	b.eq	2fe8 <PyThread_free_lock@plt+0xfd8>  // b.none
    2ef0:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    2ef4:	ldr	x1, [x1, #4008]
    2ef8:	bl	1fd0 <PyType_IsSubtype@plt>
    2efc:	cbnz	w0, 2fe8 <PyThread_free_lock@plt+0xfd8>
    2f00:	ldr	x0, [x21, #8]
    2f04:	bl	1e60 <PyLong_AsUnsignedLongMask@plt>
    2f08:	mov	w19, w0
    2f0c:	cmn	w0, #0x1
    2f10:	b.eq	3008 <PyThread_free_lock@plt+0xff8>  // b.none
    2f14:	ldr	x22, [sp, #80]
    2f18:	mov	x0, #0x1400                	// #5120
    2f1c:	cmp	x22, x0
    2f20:	b.le	3020 <PyThread_free_lock@plt+0x1010>
    2f24:	stp	x23, x24, [sp, #48]
    2f28:	ldr	x20, [sp, #64]
    2f2c:	bl	1fa0 <PyEval_SaveThread@plt>
    2f30:	mov	x24, x0
    2f34:	mov	x21, x22
    2f38:	mov	x0, #0xffffffff            	// #4294967295
    2f3c:	cmp	x22, x0
    2f40:	b.ls	2f74 <PyThread_free_lock@plt+0xf64>  // b.plast
    2f44:	mov	w23, #0xffffffff            	// #-1
    2f48:	mov	x22, x0
    2f4c:	mov	w2, w23
    2f50:	mov	x1, x20
    2f54:	mov	w0, w19
    2f58:	bl	1d50 <crc32@plt>
    2f5c:	mov	w19, w0
    2f60:	add	x20, x20, x22
    2f64:	sub	x21, x21, x22
    2f68:	cmp	x21, x22
    2f6c:	b.hi	2f4c <PyThread_free_lock@plt+0xf3c>  // b.pmore
    2f70:	mov	x22, x21
    2f74:	mov	w2, w22
    2f78:	mov	x1, x20
    2f7c:	mov	w0, w19
    2f80:	bl	1d50 <crc32@plt>
    2f84:	mov	w19, w0
    2f88:	mov	x0, x24
    2f8c:	bl	1d10 <PyEval_RestoreThread@plt>
    2f90:	ldp	x23, x24, [sp, #48]
    2f94:	mov	w0, w19
    2f98:	bl	1f50 <PyLong_FromUnsignedLong@plt>
    2f9c:	mov	x20, x0
    2fa0:	ldr	x0, [sp, #72]
    2fa4:	cbz	x0, 2fb0 <PyThread_free_lock@plt+0xfa0>
    2fa8:	add	x0, sp, #0x40
    2fac:	bl	1d20 <PyBuffer_Release@plt>
    2fb0:	mov	x0, x20
    2fb4:	ldp	x19, x20, [sp, #16]
    2fb8:	ldp	x21, x22, [sp, #32]
    2fbc:	ldp	x29, x30, [sp], #144
    2fc0:	ret
    2fc4:	ldr	x3, [x21]
    2fc8:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    2fcc:	add	x2, x2, #0x3d8
    2fd0:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    2fd4:	add	x1, x1, #0x3f0
    2fd8:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    2fdc:	add	x0, x0, #0x4c0
    2fe0:	bl	1e30 <_PyArg_BadArgument@plt>
    2fe4:	b	2fa0 <PyThread_free_lock@plt+0xf90>
    2fe8:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    2fec:	add	x1, x1, #0x300
    2ff0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    2ff4:	ldr	x0, [x0, #4040]
    2ff8:	ldr	x0, [x0]
    2ffc:	bl	1dc0 <PyErr_SetString@plt>
    3000:	mov	x20, #0x0                   	// #0
    3004:	b	2fa0 <PyThread_free_lock@plt+0xf90>
    3008:	bl	1eb0 <PyErr_Occurred@plt>
    300c:	mov	x20, #0x0                   	// #0
    3010:	cbz	x0, 2f14 <PyThread_free_lock@plt+0xf04>
    3014:	b	2fa0 <PyThread_free_lock@plt+0xf90>
    3018:	mov	w19, #0x0                   	// #0
    301c:	b	2f14 <PyThread_free_lock@plt+0xf04>
    3020:	mov	w2, w22
    3024:	ldr	x1, [sp, #64]
    3028:	mov	w0, w19
    302c:	bl	1d50 <crc32@plt>
    3030:	mov	w19, w0
    3034:	b	2f94 <PyThread_free_lock@plt+0xf84>
    3038:	mov	x20, #0x0                   	// #0
    303c:	b	2fa0 <PyThread_free_lock@plt+0xf90>
    3040:	sub	sp, sp, #0x150
    3044:	stp	x29, x30, [sp, #16]
    3048:	add	x29, sp, #0x10
    304c:	stp	x19, x20, [sp, #32]
    3050:	stp	x21, x22, [sp, #48]
    3054:	mov	x19, x1
    3058:	mov	x1, x2
    305c:	cbz	x3, 3118 <PyThread_free_lock@plt+0x1108>
    3060:	ldr	x21, [x3, #16]
    3064:	add	x21, x2, x21
    3068:	stp	xzr, xzr, [sp, #208]
    306c:	stp	xzr, xzr, [sp, #224]
    3070:	stp	xzr, xzr, [sp, #240]
    3074:	stp	xzr, xzr, [sp, #256]
    3078:	stp	xzr, xzr, [sp, #272]
    307c:	add	x0, sp, #0x120
    3080:	str	x0, [sp]
    3084:	mov	w7, #0x0                   	// #0
    3088:	mov	w6, #0x6                   	// #6
    308c:	mov	w5, #0x0                   	// #0
    3090:	adrp	x4, 18000 <PyInit_zlib@@Base+0x130a4>
    3094:	add	x4, x4, #0x1b0
    3098:	add	x4, x4, #0x220
    309c:	mov	x2, #0x0                   	// #0
    30a0:	mov	x0, x19
    30a4:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    30a8:	mov	x19, x0
    30ac:	cbz	x0, 3650 <PyThread_free_lock@plt+0x1640>
    30b0:	stp	x23, x24, [sp, #64]
    30b4:	stp	x25, x26, [sp, #80]
    30b8:	cbz	x21, 3440 <PyThread_free_lock@plt+0x1430>
    30bc:	ldr	x0, [x19]
    30c0:	cbz	x0, 3190 <PyThread_free_lock@plt+0x1180>
    30c4:	ldr	x0, [x0, #8]
    30c8:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    30cc:	ldr	x1, [x1, #4008]
    30d0:	cmp	x0, x1
    30d4:	b.eq	3150 <PyThread_free_lock@plt+0x1140>  // b.none
    30d8:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    30dc:	ldr	x1, [x1, #4008]
    30e0:	bl	1fd0 <PyType_IsSubtype@plt>
    30e4:	mov	w22, w0
    30e8:	cbnz	w0, 3150 <PyThread_free_lock@plt+0x1140>
    30ec:	ldr	x0, [x19]
    30f0:	bl	1ff0 <_PyLong_AsInt@plt>
    30f4:	mov	w23, w0
    30f8:	cmn	w0, #0x1
    30fc:	b.eq	3178 <PyThread_free_lock@plt+0x1168>  // b.none
    3100:	subs	x21, x21, #0x1
    3104:	b.ne	3194 <PyThread_free_lock@plt+0x1184>  // b.any
    3108:	mov	w25, #0x8                   	// #8
    310c:	mov	w26, #0xf                   	// #15
    3110:	mov	w24, w25
    3114:	b	3454 <PyThread_free_lock@plt+0x1444>
    3118:	stp	xzr, xzr, [sp, #208]
    311c:	stp	xzr, xzr, [sp, #224]
    3120:	stp	xzr, xzr, [sp, #240]
    3124:	stp	xzr, xzr, [sp, #256]
    3128:	stp	xzr, xzr, [sp, #272]
    312c:	cmp	x19, #0x0
    3130:	ccmp	x2, #0x6, #0x2, ne  // ne = any
    3134:	b.ls	3140 <PyThread_free_lock@plt+0x1130>  // b.plast
    3138:	mov	x21, x2
    313c:	b	307c <PyThread_free_lock@plt+0x106c>
    3140:	stp	x23, x24, [sp, #64]
    3144:	stp	x25, x26, [sp, #80]
    3148:	mov	x21, x2
    314c:	b	30b8 <PyThread_free_lock@plt+0x10a8>
    3150:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    3154:	add	x1, x1, #0x300
    3158:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    315c:	ldr	x0, [x0, #4040]
    3160:	ldr	x0, [x0]
    3164:	bl	1dc0 <PyErr_SetString@plt>
    3168:	mov	x20, #0x0                   	// #0
    316c:	ldp	x23, x24, [sp, #64]
    3170:	ldp	x25, x26, [sp, #80]
    3174:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3178:	bl	1eb0 <PyErr_Occurred@plt>
    317c:	mov	x20, #0x0                   	// #0
    3180:	cbz	x0, 3100 <PyThread_free_lock@plt+0x10f0>
    3184:	ldp	x23, x24, [sp, #64]
    3188:	ldp	x25, x26, [sp, #80]
    318c:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3190:	mov	w23, #0xffffffff            	// #-1
    3194:	ldr	x0, [x19, #8]
    3198:	cbz	x0, 322c <PyThread_free_lock@plt+0x121c>
    319c:	ldr	x0, [x0, #8]
    31a0:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    31a4:	ldr	x1, [x1, #4008]
    31a8:	cmp	x0, x1
    31ac:	b.eq	31ec <PyThread_free_lock@plt+0x11dc>  // b.none
    31b0:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    31b4:	ldr	x1, [x1, #4008]
    31b8:	bl	1fd0 <PyType_IsSubtype@plt>
    31bc:	mov	w22, w0
    31c0:	cbnz	w0, 31ec <PyThread_free_lock@plt+0x11dc>
    31c4:	ldr	x0, [x19, #8]
    31c8:	bl	1ff0 <_PyLong_AsInt@plt>
    31cc:	mov	w24, w0
    31d0:	cmn	w0, #0x1
    31d4:	b.eq	3214 <PyThread_free_lock@plt+0x1204>  // b.none
    31d8:	subs	x21, x21, #0x1
    31dc:	b.ne	3230 <PyThread_free_lock@plt+0x1220>  // b.any
    31e0:	mov	w25, #0x8                   	// #8
    31e4:	mov	w26, #0xf                   	// #15
    31e8:	b	3454 <PyThread_free_lock@plt+0x1444>
    31ec:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    31f0:	add	x1, x1, #0x300
    31f4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    31f8:	ldr	x0, [x0, #4040]
    31fc:	ldr	x0, [x0]
    3200:	bl	1dc0 <PyErr_SetString@plt>
    3204:	mov	x20, #0x0                   	// #0
    3208:	ldp	x23, x24, [sp, #64]
    320c:	ldp	x25, x26, [sp, #80]
    3210:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3214:	bl	1eb0 <PyErr_Occurred@plt>
    3218:	mov	x20, #0x0                   	// #0
    321c:	cbz	x0, 31d8 <PyThread_free_lock@plt+0x11c8>
    3220:	ldp	x23, x24, [sp, #64]
    3224:	ldp	x25, x26, [sp, #80]
    3228:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    322c:	mov	w24, #0x8                   	// #8
    3230:	ldr	x0, [x19, #16]
    3234:	cbz	x0, 32c4 <PyThread_free_lock@plt+0x12b4>
    3238:	ldr	x0, [x0, #8]
    323c:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    3240:	ldr	x1, [x1, #4008]
    3244:	cmp	x0, x1
    3248:	b.eq	3284 <PyThread_free_lock@plt+0x1274>  // b.none
    324c:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    3250:	ldr	x1, [x1, #4008]
    3254:	bl	1fd0 <PyType_IsSubtype@plt>
    3258:	mov	w22, w0
    325c:	cbnz	w0, 3284 <PyThread_free_lock@plt+0x1274>
    3260:	ldr	x0, [x19, #16]
    3264:	bl	1ff0 <_PyLong_AsInt@plt>
    3268:	mov	w26, w0
    326c:	cmn	w0, #0x1
    3270:	b.eq	32ac <PyThread_free_lock@plt+0x129c>  // b.none
    3274:	subs	x21, x21, #0x1
    3278:	b.ne	32c8 <PyThread_free_lock@plt+0x12b8>  // b.any
    327c:	mov	w25, #0x8                   	// #8
    3280:	b	3454 <PyThread_free_lock@plt+0x1444>
    3284:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    3288:	add	x1, x1, #0x300
    328c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    3290:	ldr	x0, [x0, #4040]
    3294:	ldr	x0, [x0]
    3298:	bl	1dc0 <PyErr_SetString@plt>
    329c:	mov	x20, #0x0                   	// #0
    32a0:	ldp	x23, x24, [sp, #64]
    32a4:	ldp	x25, x26, [sp, #80]
    32a8:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    32ac:	bl	1eb0 <PyErr_Occurred@plt>
    32b0:	mov	x20, #0x0                   	// #0
    32b4:	cbz	x0, 3274 <PyThread_free_lock@plt+0x1264>
    32b8:	ldp	x23, x24, [sp, #64]
    32bc:	ldp	x25, x26, [sp, #80]
    32c0:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    32c4:	mov	w26, #0xf                   	// #15
    32c8:	ldr	x0, [x19, #24]
    32cc:	cbz	x0, 3358 <PyThread_free_lock@plt+0x1348>
    32d0:	ldr	x0, [x0, #8]
    32d4:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    32d8:	ldr	x1, [x1, #4008]
    32dc:	cmp	x0, x1
    32e0:	b.eq	3318 <PyThread_free_lock@plt+0x1308>  // b.none
    32e4:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    32e8:	ldr	x1, [x1, #4008]
    32ec:	bl	1fd0 <PyType_IsSubtype@plt>
    32f0:	mov	w22, w0
    32f4:	cbnz	w0, 3318 <PyThread_free_lock@plt+0x1308>
    32f8:	ldr	x0, [x19, #24]
    32fc:	bl	1ff0 <_PyLong_AsInt@plt>
    3300:	mov	w25, w0
    3304:	cmn	w0, #0x1
    3308:	b.eq	3340 <PyThread_free_lock@plt+0x1330>  // b.none
    330c:	subs	x21, x21, #0x1
    3310:	b.ne	335c <PyThread_free_lock@plt+0x134c>  // b.any
    3314:	b	3454 <PyThread_free_lock@plt+0x1444>
    3318:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    331c:	add	x1, x1, #0x300
    3320:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    3324:	ldr	x0, [x0, #4040]
    3328:	ldr	x0, [x0]
    332c:	bl	1dc0 <PyErr_SetString@plt>
    3330:	mov	x20, #0x0                   	// #0
    3334:	ldp	x23, x24, [sp, #64]
    3338:	ldp	x25, x26, [sp, #80]
    333c:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3340:	bl	1eb0 <PyErr_Occurred@plt>
    3344:	mov	x20, #0x0                   	// #0
    3348:	cbz	x0, 330c <PyThread_free_lock@plt+0x12fc>
    334c:	ldp	x23, x24, [sp, #64]
    3350:	ldp	x25, x26, [sp, #80]
    3354:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3358:	mov	w25, #0x8                   	// #8
    335c:	ldr	x0, [x19, #32]
    3360:	cbz	x0, 3438 <PyThread_free_lock@plt+0x1428>
    3364:	ldr	x0, [x0, #8]
    3368:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    336c:	ldr	x1, [x1, #4008]
    3370:	cmp	x0, x1
    3374:	b.eq	33f8 <PyThread_free_lock@plt+0x13e8>  // b.none
    3378:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    337c:	ldr	x1, [x1, #4008]
    3380:	bl	1fd0 <PyType_IsSubtype@plt>
    3384:	cbnz	w0, 33f8 <PyThread_free_lock@plt+0x13e8>
    3388:	ldr	x0, [x19, #32]
    338c:	bl	1ff0 <_PyLong_AsInt@plt>
    3390:	mov	w22, w0
    3394:	cmn	w0, #0x1
    3398:	b.eq	3420 <PyThread_free_lock@plt+0x1410>  // b.none
    339c:	cmp	x21, #0x1
    33a0:	b.eq	3454 <PyThread_free_lock@plt+0x1444>  // b.none
    33a4:	mov	w2, #0x0                   	// #0
    33a8:	add	x1, sp, #0xd0
    33ac:	ldr	x0, [x19, #40]
    33b0:	bl	1f30 <PyObject_GetBuffer@plt>
    33b4:	mov	x20, #0x0                   	// #0
    33b8:	cbnz	w0, 3658 <PyThread_free_lock@plt+0x1648>
    33bc:	mov	w1, #0x43                  	// #67
    33c0:	add	x0, sp, #0xd0
    33c4:	bl	1d60 <PyBuffer_IsContiguous@plt>
    33c8:	cbnz	w0, 3454 <PyThread_free_lock@plt+0x1444>
    33cc:	ldr	x3, [x19, #40]
    33d0:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    33d4:	add	x2, x2, #0x3d8
    33d8:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    33dc:	add	x1, x1, #0x4c8
    33e0:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    33e4:	add	x0, x0, #0x4e0
    33e8:	bl	1e30 <_PyArg_BadArgument@plt>
    33ec:	ldp	x23, x24, [sp, #64]
    33f0:	ldp	x25, x26, [sp, #80]
    33f4:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    33f8:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    33fc:	add	x1, x1, #0x300
    3400:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    3404:	ldr	x0, [x0, #4040]
    3408:	ldr	x0, [x0]
    340c:	bl	1dc0 <PyErr_SetString@plt>
    3410:	mov	x20, #0x0                   	// #0
    3414:	ldp	x23, x24, [sp, #64]
    3418:	ldp	x25, x26, [sp, #80]
    341c:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3420:	bl	1eb0 <PyErr_Occurred@plt>
    3424:	mov	x20, #0x0                   	// #0
    3428:	cbz	x0, 339c <PyThread_free_lock@plt+0x138c>
    342c:	ldp	x23, x24, [sp, #64]
    3430:	ldp	x25, x26, [sp, #80]
    3434:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3438:	mov	w22, #0x0                   	// #0
    343c:	b	33a4 <PyThread_free_lock@plt+0x1394>
    3440:	mov	w22, #0x0                   	// #0
    3444:	mov	w25, #0x8                   	// #8
    3448:	mov	w26, #0xf                   	// #15
    344c:	mov	w24, w25
    3450:	mov	w23, #0xffffffff            	// #-1
    3454:	ldr	x0, [sp, #208]
    3458:	cbz	x0, 346c <PyThread_free_lock@plt+0x145c>
    345c:	ldr	x1, [sp, #224]
    3460:	mov	x0, #0xffffffff            	// #4294967295
    3464:	cmp	x1, x0
    3468:	b.hi	3538 <PyThread_free_lock@plt+0x1528>  // b.pmore
    346c:	adrp	x1, 18000 <PyInit_zlib@@Base+0x130a4>
    3470:	add	x1, x1, #0x1b0
    3474:	add	x0, x1, #0x260
    3478:	bl	22fc <PyThread_free_lock@plt+0x2ec>
    347c:	mov	x20, x0
    3480:	cbz	x0, 3664 <PyThread_free_lock@plt+0x1654>
    3484:	str	xzr, [x0, #96]
    3488:	adrp	x0, 2000 <deflateSetDictionary@plt>
    348c:	add	x0, x0, #0x140
    3490:	str	x0, [x20, #80]
    3494:	adrp	x0, 2000 <deflateSetDictionary@plt>
    3498:	add	x0, x0, #0x128
    349c:	str	x0, [x20, #88]
    34a0:	str	xzr, [x20, #16]
    34a4:	str	wzr, [x20, #24]
    34a8:	add	x19, x20, #0x10
    34ac:	mov	w7, #0x70                  	// #112
    34b0:	adrp	x6, 5000 <PyInit_zlib@@Base+0xa4>
    34b4:	add	x6, x6, #0x358
    34b8:	mov	w5, w22
    34bc:	mov	w4, w25
    34c0:	mov	w3, w26
    34c4:	mov	w2, w24
    34c8:	mov	w1, w23
    34cc:	mov	x0, x19
    34d0:	bl	1e00 <deflateInit2_@plt>
    34d4:	mov	w1, w0
    34d8:	cmn	w0, #0x2
    34dc:	b.eq	361c <PyThread_free_lock@plt+0x160c>  // b.none
    34e0:	cbz	w0, 3560 <PyThread_free_lock@plt+0x1550>
    34e4:	cmn	w0, #0x4
    34e8:	b.eq	35c0 <PyThread_free_lock@plt+0x15b0>  // b.none
    34ec:	ldp	x2, x3, [x20, #16]
    34f0:	stp	x2, x3, [sp, #96]
    34f4:	ldp	x2, x3, [x20, #32]
    34f8:	stp	x2, x3, [sp, #112]
    34fc:	ldp	x2, x3, [x20, #48]
    3500:	stp	x2, x3, [sp, #128]
    3504:	ldp	x2, x3, [x20, #64]
    3508:	stp	x2, x3, [sp, #144]
    350c:	ldp	x2, x3, [x20, #80]
    3510:	stp	x2, x3, [sp, #160]
    3514:	ldp	x2, x3, [x20, #96]
    3518:	stp	x2, x3, [sp, #176]
    351c:	ldp	x2, x3, [x20, #112]
    3520:	stp	x2, x3, [sp, #192]
    3524:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    3528:	add	x2, x2, #0x550
    352c:	add	x0, sp, #0x60
    3530:	bl	2178 <PyThread_free_lock@plt+0x168>
    3534:	b	35d8 <PyThread_free_lock@plt+0x15c8>
    3538:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    353c:	add	x1, x1, #0x2a0
    3540:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    3544:	ldr	x0, [x0, #4056]
    3548:	ldr	x0, [x0]
    354c:	bl	1dc0 <PyErr_SetString@plt>
    3550:	mov	x20, #0x0                   	// #0
    3554:	ldp	x23, x24, [sp, #64]
    3558:	ldp	x25, x26, [sp, #80]
    355c:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3560:	mov	w0, #0x1                   	// #1
    3564:	str	w0, [x20, #148]
    3568:	ldr	x1, [sp, #208]
    356c:	cbz	x1, 3670 <PyThread_free_lock@plt+0x1660>
    3570:	ldr	w2, [sp, #224]
    3574:	mov	x0, x19
    3578:	bl	2000 <deflateSetDictionary@plt>
    357c:	cmn	w0, #0x2
    3580:	b.eq	35a4 <PyThread_free_lock@plt+0x1594>  // b.none
    3584:	cbz	w0, 367c <PyThread_free_lock@plt+0x166c>
    3588:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    358c:	add	x1, x1, #0x508
    3590:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    3594:	ldr	x0, [x0, #4032]
    3598:	ldr	x0, [x0]
    359c:	bl	1dc0 <PyErr_SetString@plt>
    35a0:	b	35d8 <PyThread_free_lock@plt+0x15c8>
    35a4:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    35a8:	add	x1, x1, #0x4f0
    35ac:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    35b0:	ldr	x0, [x0, #4032]
    35b4:	ldr	x0, [x0]
    35b8:	bl	1dc0 <PyErr_SetString@plt>
    35bc:	b	35d8 <PyThread_free_lock@plt+0x15c8>
    35c0:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    35c4:	add	x1, x1, #0x520
    35c8:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    35cc:	ldr	x0, [x0, #4024]
    35d0:	ldr	x0, [x0]
    35d4:	bl	1dc0 <PyErr_SetString@plt>
    35d8:	ldr	x0, [x20]
    35dc:	sub	x0, x0, #0x1
    35e0:	str	x0, [x20]
    35e4:	cbz	x0, 3638 <PyThread_free_lock@plt+0x1628>
    35e8:	mov	x20, #0x0                   	// #0
    35ec:	ldp	x23, x24, [sp, #64]
    35f0:	ldp	x25, x26, [sp, #80]
    35f4:	ldr	x0, [sp, #216]
    35f8:	cbz	x0, 3604 <PyThread_free_lock@plt+0x15f4>
    35fc:	add	x0, sp, #0xd0
    3600:	bl	1d20 <PyBuffer_Release@plt>
    3604:	mov	x0, x20
    3608:	ldp	x19, x20, [sp, #32]
    360c:	ldp	x21, x22, [sp, #48]
    3610:	ldp	x29, x30, [sp, #16]
    3614:	add	sp, sp, #0x150
    3618:	ret
    361c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    3620:	add	x1, x1, #0x360
    3624:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    3628:	ldr	x0, [x0, #4032]
    362c:	ldr	x0, [x0]
    3630:	bl	1dc0 <PyErr_SetString@plt>
    3634:	b	35d8 <PyThread_free_lock@plt+0x15c8>
    3638:	mov	x0, x20
    363c:	bl	1d80 <_Py_Dealloc@plt>
    3640:	mov	x20, #0x0                   	// #0
    3644:	ldp	x23, x24, [sp, #64]
    3648:	ldp	x25, x26, [sp, #80]
    364c:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3650:	mov	x20, x0
    3654:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3658:	ldp	x23, x24, [sp, #64]
    365c:	ldp	x25, x26, [sp, #80]
    3660:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3664:	ldp	x23, x24, [sp, #64]
    3668:	ldp	x25, x26, [sp, #80]
    366c:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3670:	ldp	x23, x24, [sp, #64]
    3674:	ldp	x25, x26, [sp, #80]
    3678:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    367c:	ldp	x23, x24, [sp, #64]
    3680:	ldp	x25, x26, [sp, #80]
    3684:	b	35f4 <PyThread_free_lock@plt+0x15e4>
    3688:	stp	x29, x30, [sp, #-144]!
    368c:	mov	x29, sp
    3690:	stp	x19, x20, [sp, #16]
    3694:	stp	x21, x22, [sp, #32]
    3698:	mov	x21, x1
    369c:	mov	x19, x2
    36a0:	stp	xzr, xzr, [sp, #64]
    36a4:	stp	xzr, xzr, [sp, #80]
    36a8:	stp	xzr, xzr, [sp, #96]
    36ac:	stp	xzr, xzr, [sp, #112]
    36b0:	stp	xzr, xzr, [sp, #128]
    36b4:	sub	x0, x2, #0x1
    36b8:	cmp	x0, #0x1
    36bc:	b.ls	36dc <PyThread_free_lock@plt+0x16cc>  // b.plast
    36c0:	mov	x3, #0x2                   	// #2
    36c4:	mov	x2, #0x1                   	// #1
    36c8:	mov	x1, x19
    36cc:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    36d0:	add	x0, x0, #0x578
    36d4:	bl	1e80 <_PyArg_CheckPositional@plt>
    36d8:	cbz	w0, 386c <PyThread_free_lock@plt+0x185c>
    36dc:	mov	w2, #0x0                   	// #0
    36e0:	add	x1, sp, #0x40
    36e4:	ldr	x0, [x21]
    36e8:	bl	1f30 <PyObject_GetBuffer@plt>
    36ec:	mov	x20, #0x0                   	// #0
    36f0:	cbnz	w0, 37d4 <PyThread_free_lock@plt+0x17c4>
    36f4:	mov	w1, #0x43                  	// #67
    36f8:	add	x0, sp, #0x40
    36fc:	bl	1d60 <PyBuffer_IsContiguous@plt>
    3700:	cbz	w0, 37f8 <PyThread_free_lock@plt+0x17e8>
    3704:	cmp	x19, #0x1
    3708:	b.le	384c <PyThread_free_lock@plt+0x183c>
    370c:	ldr	x0, [x21, #8]
    3710:	ldr	x0, [x0, #8]
    3714:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    3718:	ldr	x1, [x1, #4008]
    371c:	cmp	x0, x1
    3720:	b.eq	381c <PyThread_free_lock@plt+0x180c>  // b.none
    3724:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    3728:	ldr	x1, [x1, #4008]
    372c:	bl	1fd0 <PyType_IsSubtype@plt>
    3730:	cbnz	w0, 381c <PyThread_free_lock@plt+0x180c>
    3734:	ldr	x0, [x21, #8]
    3738:	bl	1e60 <PyLong_AsUnsignedLongMask@plt>
    373c:	mov	w19, w0
    3740:	cmn	w0, #0x1
    3744:	b.eq	383c <PyThread_free_lock@plt+0x182c>  // b.none
    3748:	ldr	x22, [sp, #80]
    374c:	mov	x0, #0x1400                	// #5120
    3750:	cmp	x22, x0
    3754:	b.le	3854 <PyThread_free_lock@plt+0x1844>
    3758:	stp	x23, x24, [sp, #48]
    375c:	ldr	x20, [sp, #64]
    3760:	bl	1fa0 <PyEval_SaveThread@plt>
    3764:	mov	x24, x0
    3768:	mov	x21, x22
    376c:	mov	x0, #0xffffffff            	// #4294967295
    3770:	cmp	x22, x0
    3774:	b.ls	37a8 <PyThread_free_lock@plt+0x1798>  // b.plast
    3778:	mov	w23, #0xffffffff            	// #-1
    377c:	mov	x22, x0
    3780:	mov	w2, w23
    3784:	mov	x1, x20
    3788:	mov	w0, w19
    378c:	bl	1ee0 <adler32@plt>
    3790:	mov	w19, w0
    3794:	add	x20, x20, x22
    3798:	sub	x21, x21, x22
    379c:	cmp	x21, x22
    37a0:	b.hi	3780 <PyThread_free_lock@plt+0x1770>  // b.pmore
    37a4:	mov	x22, x21
    37a8:	mov	w2, w22
    37ac:	mov	x1, x20
    37b0:	mov	w0, w19
    37b4:	bl	1ee0 <adler32@plt>
    37b8:	mov	w19, w0
    37bc:	mov	x0, x24
    37c0:	bl	1d10 <PyEval_RestoreThread@plt>
    37c4:	ldp	x23, x24, [sp, #48]
    37c8:	mov	w0, w19
    37cc:	bl	1f50 <PyLong_FromUnsignedLong@plt>
    37d0:	mov	x20, x0
    37d4:	ldr	x0, [sp, #72]
    37d8:	cbz	x0, 37e4 <PyThread_free_lock@plt+0x17d4>
    37dc:	add	x0, sp, #0x40
    37e0:	bl	1d20 <PyBuffer_Release@plt>
    37e4:	mov	x0, x20
    37e8:	ldp	x19, x20, [sp, #16]
    37ec:	ldp	x21, x22, [sp, #32]
    37f0:	ldp	x29, x30, [sp], #144
    37f4:	ret
    37f8:	ldr	x3, [x21]
    37fc:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    3800:	add	x2, x2, #0x3d8
    3804:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    3808:	add	x1, x1, #0x3f0
    380c:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    3810:	add	x0, x0, #0x578
    3814:	bl	1e30 <_PyArg_BadArgument@plt>
    3818:	b	37d4 <PyThread_free_lock@plt+0x17c4>
    381c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    3820:	add	x1, x1, #0x300
    3824:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    3828:	ldr	x0, [x0, #4040]
    382c:	ldr	x0, [x0]
    3830:	bl	1dc0 <PyErr_SetString@plt>
    3834:	mov	x20, #0x0                   	// #0
    3838:	b	37d4 <PyThread_free_lock@plt+0x17c4>
    383c:	bl	1eb0 <PyErr_Occurred@plt>
    3840:	mov	x20, #0x0                   	// #0
    3844:	cbz	x0, 3748 <PyThread_free_lock@plt+0x1738>
    3848:	b	37d4 <PyThread_free_lock@plt+0x17c4>
    384c:	mov	w19, #0x1                   	// #1
    3850:	b	3748 <PyThread_free_lock@plt+0x1738>
    3854:	mov	w2, w22
    3858:	ldr	x1, [sp, #64]
    385c:	mov	w0, w19
    3860:	bl	1ee0 <adler32@plt>
    3864:	mov	w19, w0
    3868:	b	37c8 <PyThread_free_lock@plt+0x17b8>
    386c:	mov	x20, #0x0                   	// #0
    3870:	b	37d4 <PyThread_free_lock@plt+0x17c4>
    3874:	stp	x29, x30, [sp, #-160]!
    3878:	mov	x29, sp
    387c:	stp	x19, x20, [sp, #16]
    3880:	str	x21, [sp, #32]
    3884:	mov	x21, x0
    3888:	adrp	x1, 18000 <PyInit_zlib@@Base+0x130a4>
    388c:	add	x1, x1, #0x1b0
    3890:	add	x0, x1, #0x40
    3894:	bl	22fc <PyThread_free_lock@plt+0x2ec>
    3898:	mov	x19, x0
    389c:	cbz	x0, 3960 <PyThread_free_lock@plt+0x1950>
    38a0:	bl	1fa0 <PyEval_SaveThread@plt>
    38a4:	mov	x20, x0
    38a8:	mov	w1, #0x1                   	// #1
    38ac:	ldr	x0, [x21, #160]
    38b0:	bl	1da0 <PyThread_acquire_lock@plt>
    38b4:	mov	x0, x20
    38b8:	bl	1d10 <PyEval_RestoreThread@plt>
    38bc:	add	x1, x21, #0x10
    38c0:	add	x0, x19, #0x10
    38c4:	bl	1ea0 <inflateCopy@plt>
    38c8:	mov	w1, w0
    38cc:	cmn	w0, #0x2
    38d0:	b.eq	392c <PyThread_free_lock@plt+0x191c>  // b.none
    38d4:	cbz	w0, 3990 <PyThread_free_lock@plt+0x1980>
    38d8:	cmn	w0, #0x4
    38dc:	b.eq	3974 <PyThread_free_lock@plt+0x1964>  // b.none
    38e0:	ldp	x2, x3, [x21, #16]
    38e4:	stp	x2, x3, [sp, #48]
    38e8:	ldp	x2, x3, [x21, #32]
    38ec:	stp	x2, x3, [sp, #64]
    38f0:	ldp	x2, x3, [x21, #48]
    38f4:	stp	x2, x3, [sp, #80]
    38f8:	ldp	x2, x3, [x21, #64]
    38fc:	stp	x2, x3, [sp, #96]
    3900:	ldp	x2, x3, [x21, #80]
    3904:	stp	x2, x3, [sp, #112]
    3908:	ldp	x2, x3, [x21, #96]
    390c:	stp	x2, x3, [sp, #128]
    3910:	ldp	x2, x3, [x21, #112]
    3914:	stp	x2, x3, [sp, #144]
    3918:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    391c:	add	x2, x2, #0x5a0
    3920:	add	x0, sp, #0x30
    3924:	bl	2178 <PyThread_free_lock@plt+0x168>
    3928:	b	3944 <PyThread_free_lock@plt+0x1934>
    392c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    3930:	add	x1, x1, #0x580
    3934:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    3938:	ldr	x0, [x0, #4032]
    393c:	ldr	x0, [x0]
    3940:	bl	1dc0 <PyErr_SetString@plt>
    3944:	ldr	x0, [x21, #160]
    3948:	bl	1f20 <PyThread_release_lock@plt>
    394c:	ldr	x0, [x19]
    3950:	sub	x0, x0, #0x1
    3954:	str	x0, [x19]
    3958:	cbz	x0, 3a58 <PyThread_free_lock@plt+0x1a48>
    395c:	mov	x19, #0x0                   	// #0
    3960:	mov	x0, x19
    3964:	ldp	x19, x20, [sp, #16]
    3968:	ldr	x21, [sp, #32]
    396c:	ldp	x29, x30, [sp], #160
    3970:	ret
    3974:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    3978:	add	x1, x1, #0x380
    397c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    3980:	ldr	x0, [x0, #4024]
    3984:	ldr	x0, [x0]
    3988:	bl	1dc0 <PyErr_SetString@plt>
    398c:	b	3944 <PyThread_free_lock@plt+0x1934>
    3990:	ldr	x1, [x21, #128]
    3994:	ldr	x0, [x1]
    3998:	add	x0, x0, #0x1
    399c:	str	x0, [x1]
    39a0:	ldr	x0, [x19, #128]
    39a4:	ldr	x1, [x21, #128]
    39a8:	str	x1, [x19, #128]
    39ac:	cbz	x0, 39c0 <PyThread_free_lock@plt+0x19b0>
    39b0:	ldr	x1, [x0]
    39b4:	sub	x1, x1, #0x1
    39b8:	str	x1, [x0]
    39bc:	cbz	x1, 3a40 <PyThread_free_lock@plt+0x1a30>
    39c0:	ldr	x1, [x21, #136]
    39c4:	ldr	x0, [x1]
    39c8:	add	x0, x0, #0x1
    39cc:	str	x0, [x1]
    39d0:	ldr	x0, [x19, #136]
    39d4:	ldr	x1, [x21, #136]
    39d8:	str	x1, [x19, #136]
    39dc:	cbz	x0, 39f0 <PyThread_free_lock@plt+0x19e0>
    39e0:	ldr	x1, [x0]
    39e4:	sub	x1, x1, #0x1
    39e8:	str	x1, [x0]
    39ec:	cbz	x1, 3a48 <PyThread_free_lock@plt+0x1a38>
    39f0:	ldr	x0, [x21, #152]
    39f4:	cbz	x0, 3a04 <PyThread_free_lock@plt+0x19f4>
    39f8:	ldr	x1, [x0]
    39fc:	add	x1, x1, #0x1
    3a00:	str	x1, [x0]
    3a04:	ldr	x0, [x19, #152]
    3a08:	ldr	x1, [x21, #152]
    3a0c:	str	x1, [x19, #152]
    3a10:	cbz	x0, 3a24 <PyThread_free_lock@plt+0x1a14>
    3a14:	ldr	x1, [x0]
    3a18:	sub	x1, x1, #0x1
    3a1c:	str	x1, [x0]
    3a20:	cbz	x1, 3a50 <PyThread_free_lock@plt+0x1a40>
    3a24:	ldrb	w0, [x21, #144]
    3a28:	strb	w0, [x19, #144]
    3a2c:	mov	w0, #0x1                   	// #1
    3a30:	str	w0, [x19, #148]
    3a34:	ldr	x0, [x21, #160]
    3a38:	bl	1f20 <PyThread_release_lock@plt>
    3a3c:	b	3960 <PyThread_free_lock@plt+0x1950>
    3a40:	bl	1d80 <_Py_Dealloc@plt>
    3a44:	b	39c0 <PyThread_free_lock@plt+0x19b0>
    3a48:	bl	1d80 <_Py_Dealloc@plt>
    3a4c:	b	39f0 <PyThread_free_lock@plt+0x19e0>
    3a50:	bl	1d80 <_Py_Dealloc@plt>
    3a54:	b	3a24 <PyThread_free_lock@plt+0x1a14>
    3a58:	mov	x0, x19
    3a5c:	bl	1d80 <_Py_Dealloc@plt>
    3a60:	mov	x19, #0x0                   	// #0
    3a64:	b	3960 <PyThread_free_lock@plt+0x1950>
    3a68:	stp	x29, x30, [sp, #-16]!
    3a6c:	mov	x29, sp
    3a70:	bl	3874 <PyThread_free_lock@plt+0x1864>
    3a74:	ldp	x29, x30, [sp], #16
    3a78:	ret
    3a7c:	stp	x29, x30, [sp, #-16]!
    3a80:	mov	x29, sp
    3a84:	bl	3874 <PyThread_free_lock@plt+0x1864>
    3a88:	ldp	x29, x30, [sp], #16
    3a8c:	ret
    3a90:	stp	x29, x30, [sp, #-16]!
    3a94:	mov	x29, sp
    3a98:	bl	3874 <PyThread_free_lock@plt+0x1864>
    3a9c:	ldp	x29, x30, [sp], #16
    3aa0:	ret
    3aa4:	stp	x29, x30, [sp, #-208]!
    3aa8:	mov	x29, sp
    3aac:	stp	x19, x20, [sp, #16]
    3ab0:	stp	x21, x22, [sp, #32]
    3ab4:	mov	x19, x0
    3ab8:	mov	x21, x1
    3abc:	mov	x20, x2
    3ac0:	cmp	x2, #0x1
    3ac4:	b.hi	3b28 <PyThread_free_lock@plt+0x1b18>  // b.pmore
    3ac8:	stp	x23, x24, [sp, #48]
    3acc:	cmp	x20, #0x0
    3ad0:	b.le	3d44 <PyThread_free_lock@plt+0x1d34>
    3ad4:	ldr	x0, [x21]
    3ad8:	ldr	x0, [x0, #8]
    3adc:	adrp	x2, 17000 <PyInit_zlib@@Base+0x120a4>
    3ae0:	ldr	x2, [x2, #4008]
    3ae4:	cmp	x0, x2
    3ae8:	b.eq	3b4c <PyThread_free_lock@plt+0x1b3c>  // b.none
    3aec:	mov	x1, x2
    3af0:	bl	1fd0 <PyType_IsSubtype@plt>
    3af4:	cbnz	w0, 3b4c <PyThread_free_lock@plt+0x1b3c>
    3af8:	ldr	x0, [x21]
    3afc:	bl	1ff0 <_PyLong_AsInt@plt>
    3b00:	mov	w23, w0
    3b04:	cmn	w0, #0x1
    3b08:	b.eq	3b70 <PyThread_free_lock@plt+0x1b60>  // b.none
    3b0c:	str	xzr, [sp, #200]
    3b10:	cbnz	w0, 3b90 <PyThread_free_lock@plt+0x1b80>
    3b14:	mov	x1, #0x0                   	// #0
    3b18:	mov	x0, #0x0                   	// #0
    3b1c:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    3b20:	ldp	x23, x24, [sp, #48]
    3b24:	b	3bc8 <PyThread_free_lock@plt+0x1bb8>
    3b28:	mov	x3, #0x1                   	// #1
    3b2c:	mov	x2, #0x0                   	// #0
    3b30:	mov	x1, x20
    3b34:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    3b38:	add	x0, x0, #0x5c8
    3b3c:	bl	1e80 <_PyArg_CheckPositional@plt>
    3b40:	cbnz	w0, 3ac8 <PyThread_free_lock@plt+0x1ab8>
    3b44:	mov	x0, #0x0                   	// #0
    3b48:	b	3bc8 <PyThread_free_lock@plt+0x1bb8>
    3b4c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    3b50:	add	x1, x1, #0x300
    3b54:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    3b58:	ldr	x0, [x0, #4040]
    3b5c:	ldr	x0, [x0]
    3b60:	bl	1dc0 <PyErr_SetString@plt>
    3b64:	mov	x0, #0x0                   	// #0
    3b68:	ldp	x23, x24, [sp, #48]
    3b6c:	b	3bc8 <PyThread_free_lock@plt+0x1bb8>
    3b70:	bl	1eb0 <PyErr_Occurred@plt>
    3b74:	mov	x1, x0
    3b78:	mov	x0, #0x0                   	// #0
    3b7c:	cbnz	x1, 3b88 <PyThread_free_lock@plt+0x1b78>
    3b80:	str	x25, [sp, #64]
    3b84:	b	3d4c <PyThread_free_lock@plt+0x1d3c>
    3b88:	ldp	x23, x24, [sp, #48]
    3b8c:	b	3bc8 <PyThread_free_lock@plt+0x1bb8>
    3b90:	str	x25, [sp, #64]
    3b94:	b	3d50 <PyThread_free_lock@plt+0x1d40>
    3b98:	ldr	x0, [sp, #200]
    3b9c:	cbz	x0, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3ba0:	str	xzr, [sp, #200]
    3ba4:	ldr	x1, [x0]
    3ba8:	sub	x1, x1, #0x1
    3bac:	str	x1, [x0]
    3bb0:	cbz	x1, 3bd8 <PyThread_free_lock@plt+0x1bc8>
    3bb4:	ldr	x0, [x19, #160]
    3bb8:	bl	1f20 <PyThread_release_lock@plt>
    3bbc:	ldr	x0, [sp, #200]
    3bc0:	ldp	x23, x24, [sp, #48]
    3bc4:	ldr	x25, [sp, #64]
    3bc8:	ldp	x19, x20, [sp, #16]
    3bcc:	ldp	x21, x22, [sp, #32]
    3bd0:	ldp	x29, x30, [sp], #208
    3bd4:	ret
    3bd8:	bl	1d80 <_Py_Dealloc@plt>
    3bdc:	b	3bb4 <PyThread_free_lock@plt+0x1ba4>
    3be0:	ldp	x2, x3, [x19, #16]
    3be4:	stp	x2, x3, [sp, #80]
    3be8:	ldp	x2, x3, [x19, #32]
    3bec:	stp	x2, x3, [sp, #96]
    3bf0:	ldp	x2, x3, [x19, #48]
    3bf4:	stp	x2, x3, [sp, #112]
    3bf8:	ldp	x2, x3, [x19, #64]
    3bfc:	stp	x2, x3, [sp, #128]
    3c00:	ldp	x2, x3, [x19, #80]
    3c04:	stp	x2, x3, [sp, #144]
    3c08:	ldp	x2, x3, [x19, #96]
    3c0c:	stp	x2, x3, [sp, #160]
    3c10:	ldp	x0, x1, [x19, #112]
    3c14:	stp	x0, x1, [sp, #176]
    3c18:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    3c1c:	add	x2, x2, #0x5d0
    3c20:	mov	w1, #0xfffffffe            	// #-2
    3c24:	add	x0, sp, #0x50
    3c28:	bl	2178 <PyThread_free_lock@plt+0x168>
    3c2c:	ldr	x0, [sp, #200]
    3c30:	cbz	x0, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3c34:	str	xzr, [sp, #200]
    3c38:	ldr	x1, [x0]
    3c3c:	sub	x1, x1, #0x1
    3c40:	str	x1, [x0]
    3c44:	cbnz	x1, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3c48:	bl	1d80 <_Py_Dealloc@plt>
    3c4c:	b	3bb4 <PyThread_free_lock@plt+0x1ba4>
    3c50:	mov	x0, x24
    3c54:	bl	1f10 <deflateEnd@plt>
    3c58:	cbnz	w0, 3c64 <PyThread_free_lock@plt+0x1c54>
    3c5c:	str	wzr, [x19, #148]
    3c60:	b	3ddc <PyThread_free_lock@plt+0x1dcc>
    3c64:	ldp	x2, x3, [x19, #16]
    3c68:	stp	x2, x3, [sp, #80]
    3c6c:	ldp	x2, x3, [x19, #32]
    3c70:	stp	x2, x3, [sp, #96]
    3c74:	ldp	x2, x3, [x19, #48]
    3c78:	stp	x2, x3, [sp, #112]
    3c7c:	ldp	x2, x3, [x19, #64]
    3c80:	stp	x2, x3, [sp, #128]
    3c84:	ldp	x2, x3, [x19, #80]
    3c88:	stp	x2, x3, [sp, #144]
    3c8c:	ldp	x2, x3, [x19, #96]
    3c90:	stp	x2, x3, [sp, #160]
    3c94:	ldp	x2, x3, [x19, #112]
    3c98:	stp	x2, x3, [sp, #176]
    3c9c:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    3ca0:	add	x2, x2, #0x5e0
    3ca4:	mov	w1, w0
    3ca8:	add	x0, sp, #0x50
    3cac:	bl	2178 <PyThread_free_lock@plt+0x168>
    3cb0:	ldr	x0, [sp, #200]
    3cb4:	cbz	x0, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3cb8:	str	xzr, [sp, #200]
    3cbc:	ldr	x1, [x0]
    3cc0:	sub	x1, x1, #0x1
    3cc4:	str	x1, [x0]
    3cc8:	cbnz	x1, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3ccc:	bl	1d80 <_Py_Dealloc@plt>
    3cd0:	b	3bb4 <PyThread_free_lock@plt+0x1ba4>
    3cd4:	ldp	x2, x3, [x19, #16]
    3cd8:	stp	x2, x3, [sp, #80]
    3cdc:	ldp	x2, x3, [x19, #32]
    3ce0:	stp	x2, x3, [sp, #96]
    3ce4:	ldp	x2, x3, [x19, #48]
    3ce8:	stp	x2, x3, [sp, #112]
    3cec:	ldp	x2, x3, [x19, #64]
    3cf0:	stp	x2, x3, [sp, #128]
    3cf4:	ldp	x2, x3, [x19, #80]
    3cf8:	stp	x2, x3, [sp, #144]
    3cfc:	ldp	x2, x3, [x19, #96]
    3d00:	stp	x2, x3, [sp, #160]
    3d04:	ldp	x0, x1, [x19, #112]
    3d08:	stp	x0, x1, [sp, #176]
    3d0c:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    3d10:	add	x2, x2, #0x5d0
    3d14:	mov	w1, w21
    3d18:	add	x0, sp, #0x50
    3d1c:	bl	2178 <PyThread_free_lock@plt+0x168>
    3d20:	ldr	x0, [sp, #200]
    3d24:	cbz	x0, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3d28:	str	xzr, [sp, #200]
    3d2c:	ldr	x1, [x0]
    3d30:	sub	x1, x1, #0x1
    3d34:	str	x1, [x0]
    3d38:	cbnz	x1, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3d3c:	bl	1d80 <_Py_Dealloc@plt>
    3d40:	b	3bb4 <PyThread_free_lock@plt+0x1ba4>
    3d44:	str	x25, [sp, #64]
    3d48:	mov	w23, #0x4                   	// #4
    3d4c:	str	xzr, [sp, #200]
    3d50:	bl	1fa0 <PyEval_SaveThread@plt>
    3d54:	mov	x20, x0
    3d58:	mov	w1, #0x1                   	// #1
    3d5c:	ldr	x0, [x19, #160]
    3d60:	bl	1da0 <PyThread_acquire_lock@plt>
    3d64:	mov	x0, x20
    3d68:	bl	1d10 <PyEval_RestoreThread@plt>
    3d6c:	str	wzr, [x19, #24]
    3d70:	mov	x20, #0x4000                	// #16384
    3d74:	add	x24, x19, #0x10
    3d78:	add	x25, sp, #0xc8
    3d7c:	mov	x2, x20
    3d80:	mov	x1, x25
    3d84:	mov	x0, x24
    3d88:	bl	28a4 <PyThread_free_lock@plt+0x894>
    3d8c:	mov	x20, x0
    3d90:	tbnz	x0, #63, 3b98 <PyThread_free_lock@plt+0x1b88>
    3d94:	bl	1fa0 <PyEval_SaveThread@plt>
    3d98:	mov	x22, x0
    3d9c:	mov	w1, w23
    3da0:	mov	x0, x24
    3da4:	bl	1dd0 <deflate@plt>
    3da8:	mov	w21, w0
    3dac:	mov	x0, x22
    3db0:	bl	1d10 <PyEval_RestoreThread@plt>
    3db4:	cmn	w21, #0x2
    3db8:	b.eq	3be0 <PyThread_free_lock@plt+0x1bd0>  // b.none
    3dbc:	ldr	w0, [x19, #48]
    3dc0:	cbz	w0, 3d7c <PyThread_free_lock@plt+0x1d6c>
    3dc4:	cmp	w21, #0x1
    3dc8:	ccmp	w23, #0x4, #0x0, eq  // eq = none
    3dcc:	b.eq	3c50 <PyThread_free_lock@plt+0x1c40>  // b.none
    3dd0:	cmp	w21, #0x0
    3dd4:	ccmn	w21, #0x5, #0x4, ne  // ne = any
    3dd8:	b.ne	3cd4 <PyThread_free_lock@plt+0x1cc4>  // b.any
    3ddc:	ldr	x0, [sp, #200]
    3de0:	add	x0, x0, #0x20
    3de4:	ldr	x1, [x19, #40]
    3de8:	sub	x1, x1, x0
    3dec:	add	x0, sp, #0xc8
    3df0:	bl	1cf0 <_PyBytes_Resize@plt>
    3df4:	tbz	w0, #31, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3df8:	ldr	x0, [sp, #200]
    3dfc:	cbz	x0, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3e00:	str	xzr, [sp, #200]
    3e04:	ldr	x1, [x0]
    3e08:	sub	x1, x1, #0x1
    3e0c:	str	x1, [x0]
    3e10:	cbnz	x1, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3e14:	bl	1d80 <_Py_Dealloc@plt>
    3e18:	b	3bb4 <PyThread_free_lock@plt+0x1ba4>
    3e1c:	stp	x29, x30, [sp, #-64]!
    3e20:	mov	x29, sp
    3e24:	stp	x19, x20, [sp, #16]
    3e28:	mov	x19, x0
    3e2c:	mov	x20, x1
    3e30:	cmp	w2, #0x1
    3e34:	b.eq	3e94 <PyThread_free_lock@plt+0x1e84>  // b.none
    3e38:	ldr	w0, [x0, #24]
    3e3c:	cbnz	w0, 3e50 <PyThread_free_lock@plt+0x1e40>
    3e40:	ldr	x0, [x19, #136]
    3e44:	ldr	x1, [x0, #16]
    3e48:	mov	w0, #0x0                   	// #0
    3e4c:	cbz	x1, 3e88 <PyThread_free_lock@plt+0x1e78>
    3e50:	ldr	x0, [x19, #16]
    3e54:	ldr	x1, [x20]
    3e58:	ldr	x2, [x20, #16]
    3e5c:	add	x1, x1, x2
    3e60:	sub	x1, x1, x0
    3e64:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    3e68:	cbz	x0, 3f70 <PyThread_free_lock@plt+0x1f60>
    3e6c:	ldr	x2, [x19, #136]
    3e70:	str	x0, [x19, #136]
    3e74:	ldr	x1, [x2]
    3e78:	sub	x1, x1, #0x1
    3e7c:	str	x1, [x2]
    3e80:	mov	w0, #0x0                   	// #0
    3e84:	cbz	x1, 3f50 <PyThread_free_lock@plt+0x1f40>
    3e88:	ldp	x19, x20, [sp, #16]
    3e8c:	ldp	x29, x30, [sp], #64
    3e90:	ret
    3e94:	ldr	w0, [x0, #24]
    3e98:	cbz	w0, 3e40 <PyThread_free_lock@plt+0x1e30>
    3e9c:	stp	x21, x22, [sp, #32]
    3ea0:	stp	x23, x24, [sp, #48]
    3ea4:	ldr	x0, [x19, #128]
    3ea8:	ldr	x23, [x0, #16]
    3eac:	ldr	x21, [x1]
    3eb0:	ldr	x0, [x1, #16]
    3eb4:	add	x21, x21, x0
    3eb8:	ldr	x0, [x19, #16]
    3ebc:	sub	x21, x21, x0
    3ec0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    3ec4:	sub	x0, x0, x23
    3ec8:	cmp	x0, x21
    3ecc:	b.lt	3f34 <PyThread_free_lock@plt+0x1f24>  // b.tstop
    3ed0:	add	x1, x23, x21
    3ed4:	mov	x0, #0x0                   	// #0
    3ed8:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    3edc:	mov	x22, x0
    3ee0:	cbz	x0, 3f60 <PyThread_free_lock@plt+0x1f50>
    3ee4:	add	x24, x0, #0x20
    3ee8:	ldr	x1, [x19, #128]
    3eec:	mov	x2, x23
    3ef0:	add	x1, x1, #0x20
    3ef4:	mov	x0, x24
    3ef8:	bl	1cd0 <memcpy@plt>
    3efc:	mov	x2, x21
    3f00:	ldr	x1, [x19, #16]
    3f04:	add	x0, x24, x23
    3f08:	bl	1cd0 <memcpy@plt>
    3f0c:	ldr	x0, [x19, #128]
    3f10:	str	x22, [x19, #128]
    3f14:	ldr	x1, [x0]
    3f18:	sub	x1, x1, #0x1
    3f1c:	str	x1, [x0]
    3f20:	cbz	x1, 3f48 <PyThread_free_lock@plt+0x1f38>
    3f24:	str	wzr, [x19, #24]
    3f28:	ldp	x21, x22, [sp, #32]
    3f2c:	ldp	x23, x24, [sp, #48]
    3f30:	b	3e40 <PyThread_free_lock@plt+0x1e30>
    3f34:	bl	1d90 <PyErr_NoMemory@plt>
    3f38:	mov	w0, #0xffffffff            	// #-1
    3f3c:	ldp	x21, x22, [sp, #32]
    3f40:	ldp	x23, x24, [sp, #48]
    3f44:	b	3e88 <PyThread_free_lock@plt+0x1e78>
    3f48:	bl	1d80 <_Py_Dealloc@plt>
    3f4c:	b	3f24 <PyThread_free_lock@plt+0x1f14>
    3f50:	mov	x0, x2
    3f54:	bl	1d80 <_Py_Dealloc@plt>
    3f58:	mov	w0, #0x0                   	// #0
    3f5c:	b	3e88 <PyThread_free_lock@plt+0x1e78>
    3f60:	mov	w0, #0xffffffff            	// #-1
    3f64:	ldp	x21, x22, [sp, #32]
    3f68:	ldp	x23, x24, [sp, #48]
    3f6c:	b	3e88 <PyThread_free_lock@plt+0x1e78>
    3f70:	mov	w0, #0xffffffff            	// #-1
    3f74:	b	3e88 <PyThread_free_lock@plt+0x1e78>
    3f78:	stp	x29, x30, [sp, #-32]!
    3f7c:	mov	x29, sp
    3f80:	str	x19, [sp, #16]
    3f84:	mov	x19, x0
    3f88:	ldr	x0, [x0, #160]
    3f8c:	bl	2010 <PyThread_free_lock@plt>
    3f90:	ldr	x0, [x19, #128]
    3f94:	cbz	x0, 3fa8 <PyThread_free_lock@plt+0x1f98>
    3f98:	ldr	x1, [x0]
    3f9c:	sub	x1, x1, #0x1
    3fa0:	str	x1, [x0]
    3fa4:	cbz	x1, 3fec <PyThread_free_lock@plt+0x1fdc>
    3fa8:	ldr	x0, [x19, #136]
    3fac:	cbz	x0, 3fc0 <PyThread_free_lock@plt+0x1fb0>
    3fb0:	ldr	x1, [x0]
    3fb4:	sub	x1, x1, #0x1
    3fb8:	str	x1, [x0]
    3fbc:	cbz	x1, 3ff4 <PyThread_free_lock@plt+0x1fe4>
    3fc0:	ldr	x0, [x19, #152]
    3fc4:	cbz	x0, 3fd8 <PyThread_free_lock@plt+0x1fc8>
    3fc8:	ldr	x1, [x0]
    3fcc:	sub	x1, x1, #0x1
    3fd0:	str	x1, [x0]
    3fd4:	cbz	x1, 3ffc <PyThread_free_lock@plt+0x1fec>
    3fd8:	mov	x0, x19
    3fdc:	bl	1df0 <PyObject_Free@plt>
    3fe0:	ldr	x19, [sp, #16]
    3fe4:	ldp	x29, x30, [sp], #32
    3fe8:	ret
    3fec:	bl	1d80 <_Py_Dealloc@plt>
    3ff0:	b	3fa8 <PyThread_free_lock@plt+0x1f98>
    3ff4:	bl	1d80 <_Py_Dealloc@plt>
    3ff8:	b	3fc0 <PyThread_free_lock@plt+0x1fb0>
    3ffc:	bl	1d80 <_Py_Dealloc@plt>
    4000:	b	3fd8 <PyThread_free_lock@plt+0x1fc8>
    4004:	stp	x29, x30, [sp, #-32]!
    4008:	mov	x29, sp
    400c:	str	x19, [sp, #16]
    4010:	mov	x19, x0
    4014:	ldr	w0, [x0, #148]
    4018:	cbnz	w0, 4030 <PyThread_free_lock@plt+0x2020>
    401c:	mov	x0, x19
    4020:	bl	3f78 <PyThread_free_lock@plt+0x1f68>
    4024:	ldr	x19, [sp, #16]
    4028:	ldp	x29, x30, [sp], #32
    402c:	ret
    4030:	add	x0, x19, #0x10
    4034:	bl	1e90 <inflateEnd@plt>
    4038:	b	401c <PyThread_free_lock@plt+0x200c>
    403c:	stp	x29, x30, [sp, #-32]!
    4040:	mov	x29, sp
    4044:	str	x19, [sp, #16]
    4048:	mov	x19, x0
    404c:	ldr	w0, [x0, #148]
    4050:	cbnz	w0, 4068 <PyThread_free_lock@plt+0x2058>
    4054:	mov	x0, x19
    4058:	bl	3f78 <PyThread_free_lock@plt+0x1f68>
    405c:	ldr	x19, [sp, #16]
    4060:	ldp	x29, x30, [sp], #32
    4064:	ret
    4068:	add	x0, x19, #0x10
    406c:	bl	1f10 <deflateEnd@plt>
    4070:	b	4054 <PyThread_free_lock@plt+0x2044>
    4074:	stp	x29, x30, [sp, #-160]!
    4078:	mov	x29, sp
    407c:	stp	x19, x20, [sp, #16]
    4080:	str	x21, [sp, #32]
    4084:	mov	x21, x0
    4088:	adrp	x1, 18000 <PyInit_zlib@@Base+0x130a4>
    408c:	add	x1, x1, #0x1b0
    4090:	add	x0, x1, #0x260
    4094:	bl	22fc <PyThread_free_lock@plt+0x2ec>
    4098:	mov	x19, x0
    409c:	cbz	x0, 4160 <PyThread_free_lock@plt+0x2150>
    40a0:	bl	1fa0 <PyEval_SaveThread@plt>
    40a4:	mov	x20, x0
    40a8:	mov	w1, #0x1                   	// #1
    40ac:	ldr	x0, [x21, #160]
    40b0:	bl	1da0 <PyThread_acquire_lock@plt>
    40b4:	mov	x0, x20
    40b8:	bl	1d10 <PyEval_RestoreThread@plt>
    40bc:	add	x1, x21, #0x10
    40c0:	add	x0, x19, #0x10
    40c4:	bl	1f40 <deflateCopy@plt>
    40c8:	mov	w1, w0
    40cc:	cmn	w0, #0x2
    40d0:	b.eq	412c <PyThread_free_lock@plt+0x211c>  // b.none
    40d4:	cbz	w0, 4190 <PyThread_free_lock@plt+0x2180>
    40d8:	cmn	w0, #0x4
    40dc:	b.eq	4174 <PyThread_free_lock@plt+0x2164>  // b.none
    40e0:	ldp	x2, x3, [x21, #16]
    40e4:	stp	x2, x3, [sp, #48]
    40e8:	ldp	x2, x3, [x21, #32]
    40ec:	stp	x2, x3, [sp, #64]
    40f0:	ldp	x2, x3, [x21, #48]
    40f4:	stp	x2, x3, [sp, #80]
    40f8:	ldp	x2, x3, [x21, #64]
    40fc:	stp	x2, x3, [sp, #96]
    4100:	ldp	x2, x3, [x21, #80]
    4104:	stp	x2, x3, [sp, #112]
    4108:	ldp	x2, x3, [x21, #96]
    410c:	stp	x2, x3, [sp, #128]
    4110:	ldp	x2, x3, [x21, #112]
    4114:	stp	x2, x3, [sp, #144]
    4118:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    411c:	add	x2, x2, #0x600
    4120:	add	x0, sp, #0x30
    4124:	bl	2178 <PyThread_free_lock@plt+0x168>
    4128:	b	4144 <PyThread_free_lock@plt+0x2134>
    412c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4130:	add	x1, x1, #0x580
    4134:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    4138:	ldr	x0, [x0, #4032]
    413c:	ldr	x0, [x0]
    4140:	bl	1dc0 <PyErr_SetString@plt>
    4144:	ldr	x0, [x21, #160]
    4148:	bl	1f20 <PyThread_release_lock@plt>
    414c:	ldr	x0, [x19]
    4150:	sub	x0, x0, #0x1
    4154:	str	x0, [x19]
    4158:	cbz	x0, 4258 <PyThread_free_lock@plt+0x2248>
    415c:	mov	x19, #0x0                   	// #0
    4160:	mov	x0, x19
    4164:	ldp	x19, x20, [sp, #16]
    4168:	ldr	x21, [sp, #32]
    416c:	ldp	x29, x30, [sp], #160
    4170:	ret
    4174:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4178:	add	x1, x1, #0x520
    417c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    4180:	ldr	x0, [x0, #4024]
    4184:	ldr	x0, [x0]
    4188:	bl	1dc0 <PyErr_SetString@plt>
    418c:	b	4144 <PyThread_free_lock@plt+0x2134>
    4190:	ldr	x1, [x21, #128]
    4194:	ldr	x0, [x1]
    4198:	add	x0, x0, #0x1
    419c:	str	x0, [x1]
    41a0:	ldr	x0, [x19, #128]
    41a4:	ldr	x1, [x21, #128]
    41a8:	str	x1, [x19, #128]
    41ac:	cbz	x0, 41c0 <PyThread_free_lock@plt+0x21b0>
    41b0:	ldr	x1, [x0]
    41b4:	sub	x1, x1, #0x1
    41b8:	str	x1, [x0]
    41bc:	cbz	x1, 4240 <PyThread_free_lock@plt+0x2230>
    41c0:	ldr	x1, [x21, #136]
    41c4:	ldr	x0, [x1]
    41c8:	add	x0, x0, #0x1
    41cc:	str	x0, [x1]
    41d0:	ldr	x0, [x19, #136]
    41d4:	ldr	x1, [x21, #136]
    41d8:	str	x1, [x19, #136]
    41dc:	cbz	x0, 41f0 <PyThread_free_lock@plt+0x21e0>
    41e0:	ldr	x1, [x0]
    41e4:	sub	x1, x1, #0x1
    41e8:	str	x1, [x0]
    41ec:	cbz	x1, 4248 <PyThread_free_lock@plt+0x2238>
    41f0:	ldr	x0, [x21, #152]
    41f4:	cbz	x0, 4204 <PyThread_free_lock@plt+0x21f4>
    41f8:	ldr	x1, [x0]
    41fc:	add	x1, x1, #0x1
    4200:	str	x1, [x0]
    4204:	ldr	x0, [x19, #152]
    4208:	ldr	x1, [x21, #152]
    420c:	str	x1, [x19, #152]
    4210:	cbz	x0, 4224 <PyThread_free_lock@plt+0x2214>
    4214:	ldr	x1, [x0]
    4218:	sub	x1, x1, #0x1
    421c:	str	x1, [x0]
    4220:	cbz	x1, 4250 <PyThread_free_lock@plt+0x2240>
    4224:	ldrb	w0, [x21, #144]
    4228:	strb	w0, [x19, #144]
    422c:	mov	w0, #0x1                   	// #1
    4230:	str	w0, [x19, #148]
    4234:	ldr	x0, [x21, #160]
    4238:	bl	1f20 <PyThread_release_lock@plt>
    423c:	b	4160 <PyThread_free_lock@plt+0x2150>
    4240:	bl	1d80 <_Py_Dealloc@plt>
    4244:	b	41c0 <PyThread_free_lock@plt+0x21b0>
    4248:	bl	1d80 <_Py_Dealloc@plt>
    424c:	b	41f0 <PyThread_free_lock@plt+0x21e0>
    4250:	bl	1d80 <_Py_Dealloc@plt>
    4254:	b	4224 <PyThread_free_lock@plt+0x2214>
    4258:	mov	x0, x19
    425c:	bl	1d80 <_Py_Dealloc@plt>
    4260:	mov	x19, #0x0                   	// #0
    4264:	b	4160 <PyThread_free_lock@plt+0x2150>
    4268:	stp	x29, x30, [sp, #-16]!
    426c:	mov	x29, sp
    4270:	bl	4074 <PyThread_free_lock@plt+0x2064>
    4274:	ldp	x29, x30, [sp], #16
    4278:	ret
    427c:	stp	x29, x30, [sp, #-16]!
    4280:	mov	x29, sp
    4284:	bl	4074 <PyThread_free_lock@plt+0x2064>
    4288:	ldp	x29, x30, [sp], #16
    428c:	ret
    4290:	stp	x29, x30, [sp, #-16]!
    4294:	mov	x29, sp
    4298:	bl	4074 <PyThread_free_lock@plt+0x2064>
    429c:	ldp	x29, x30, [sp], #16
    42a0:	ret
    42a4:	sub	sp, sp, #0x160
    42a8:	stp	x29, x30, [sp, #16]
    42ac:	add	x29, sp, #0x10
    42b0:	stp	x19, x20, [sp, #32]
    42b4:	stp	x21, x22, [sp, #48]
    42b8:	stp	x23, x24, [sp, #64]
    42bc:	mov	x20, x0
    42c0:	mov	x21, x1
    42c4:	mov	x1, x2
    42c8:	cbz	x3, 43dc <PyThread_free_lock@plt+0x23cc>
    42cc:	ldr	x22, [x3, #16]
    42d0:	add	x22, x2, x22
    42d4:	stp	xzr, xzr, [sp, #256]
    42d8:	stp	xzr, xzr, [sp, #272]
    42dc:	stp	xzr, xzr, [sp, #288]
    42e0:	stp	xzr, xzr, [sp, #304]
    42e4:	stp	xzr, xzr, [sp, #320]
    42e8:	str	xzr, [sp, #248]
    42ec:	add	x0, sp, #0x150
    42f0:	str	x0, [sp]
    42f4:	mov	w7, #0x0                   	// #0
    42f8:	mov	w6, #0x2                   	// #2
    42fc:	mov	w5, #0x1                   	// #1
    4300:	adrp	x4, 18000 <PyInit_zlib@@Base+0x130a4>
    4304:	add	x4, x4, #0x1b0
    4308:	add	x4, x4, #0x400
    430c:	mov	x2, #0x0                   	// #0
    4310:	mov	x0, x21
    4314:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    4318:	mov	x21, x0
    431c:	mov	x23, x0
    4320:	cbz	x0, 4494 <PyThread_free_lock@plt+0x2484>
    4324:	mov	w2, #0x0                   	// #0
    4328:	add	x1, sp, #0x100
    432c:	ldr	x0, [x21]
    4330:	bl	1f30 <PyObject_GetBuffer@plt>
    4334:	mov	w19, w0
    4338:	mov	x23, #0x0                   	// #0
    433c:	cbnz	w0, 4494 <PyThread_free_lock@plt+0x2484>
    4340:	mov	w1, #0x43                  	// #67
    4344:	add	x0, sp, #0x100
    4348:	bl	1d60 <PyBuffer_IsContiguous@plt>
    434c:	cbz	w0, 4414 <PyThread_free_lock@plt+0x2404>
    4350:	cmp	x22, #0x1
    4354:	b.eq	4368 <PyThread_free_lock@plt+0x2358>  // b.none
    4358:	add	x1, sp, #0xf8
    435c:	ldr	x0, [x21, #8]
    4360:	bl	2748 <PyThread_free_lock@plt+0x738>
    4364:	cbz	w0, 45a8 <PyThread_free_lock@plt+0x2598>
    4368:	ldr	x23, [sp, #248]
    436c:	str	xzr, [sp, #240]
    4370:	tbnz	x23, #63, 4438 <PyThread_free_lock@plt+0x2428>
    4374:	stp	x25, x26, [sp, #80]
    4378:	stp	x27, x28, [sp, #96]
    437c:	cbz	x23, 4614 <PyThread_free_lock@plt+0x2604>
    4380:	ldr	x0, [sp, #256]
    4384:	str	x0, [x20, #16]
    4388:	ldr	x25, [sp, #272]
    438c:	str	x23, [sp, #120]
    4390:	mov	x0, #0x3fff                	// #16383
    4394:	cmp	x23, x0
    4398:	mov	x21, #0x4000                	// #16384
    439c:	csel	x21, x23, x21, le
    43a0:	bl	1fa0 <PyEval_SaveThread@plt>
    43a4:	mov	x22, x0
    43a8:	mov	w1, #0x1                   	// #1
    43ac:	ldr	x0, [x20, #160]
    43b0:	bl	1da0 <PyThread_acquire_lock@plt>
    43b4:	mov	x0, x22
    43b8:	bl	1d10 <PyEval_RestoreThread@plt>
    43bc:	add	x24, x20, #0x10
    43c0:	mov	x26, #0xffffffff            	// #4294967295
    43c4:	add	x28, sp, #0xf0
    43c8:	mov	w27, #0x2                   	// #2
    43cc:	cmp	x25, x26
    43d0:	csel	x22, x25, x26, ls  // ls = plast
    43d4:	str	w22, [x24, #8]
    43d8:	b	44dc <PyThread_free_lock@plt+0x24cc>
    43dc:	stp	xzr, xzr, [sp, #256]
    43e0:	stp	xzr, xzr, [sp, #272]
    43e4:	stp	xzr, xzr, [sp, #288]
    43e8:	stp	xzr, xzr, [sp, #304]
    43ec:	stp	xzr, xzr, [sp, #320]
    43f0:	str	xzr, [sp, #248]
    43f4:	sub	x0, x2, #0x1
    43f8:	cmp	x0, #0x1
    43fc:	b.hi	440c <PyThread_free_lock@plt+0x23fc>  // b.pmore
    4400:	mov	x22, x2
    4404:	cbz	x21, 42ec <PyThread_free_lock@plt+0x22dc>
    4408:	b	4324 <PyThread_free_lock@plt+0x2314>
    440c:	mov	x22, x2
    4410:	b	42ec <PyThread_free_lock@plt+0x22dc>
    4414:	ldr	x3, [x21]
    4418:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    441c:	add	x2, x2, #0x3d8
    4420:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4424:	add	x1, x1, #0x3f0
    4428:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    442c:	add	x0, x0, #0x400
    4430:	bl	1e30 <_PyArg_BadArgument@plt>
    4434:	b	4494 <PyThread_free_lock@plt+0x2484>
    4438:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    443c:	add	x1, x1, #0x628
    4440:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    4444:	ldr	x0, [x0, #4032]
    4448:	ldr	x0, [x0]
    444c:	bl	1dc0 <PyErr_SetString@plt>
    4450:	mov	x23, #0x0                   	// #0
    4454:	b	4494 <PyThread_free_lock@plt+0x2484>
    4458:	cmp	x23, #0x0
    445c:	b.gt	454c <PyThread_free_lock@plt+0x253c>
    4460:	bl	1d90 <PyErr_NoMemory@plt>
    4464:	ldr	x0, [sp, #240]
    4468:	cbz	x0, 4480 <PyThread_free_lock@plt+0x2470>
    446c:	str	xzr, [sp, #240]
    4470:	ldr	x1, [x0]
    4474:	sub	x1, x1, #0x1
    4478:	str	x1, [x0]
    447c:	cbz	x1, 45a0 <PyThread_free_lock@plt+0x2590>
    4480:	ldr	x0, [x20, #160]
    4484:	bl	1f20 <PyThread_release_lock@plt>
    4488:	ldr	x23, [sp, #240]
    448c:	ldp	x25, x26, [sp, #80]
    4490:	ldp	x27, x28, [sp, #96]
    4494:	ldr	x0, [sp, #264]
    4498:	cbz	x0, 44a4 <PyThread_free_lock@plt+0x2494>
    449c:	add	x0, sp, #0x100
    44a0:	bl	1d20 <PyBuffer_Release@plt>
    44a4:	mov	x0, x23
    44a8:	ldp	x19, x20, [sp, #32]
    44ac:	ldp	x21, x22, [sp, #48]
    44b0:	ldp	x23, x24, [sp, #64]
    44b4:	ldp	x29, x30, [sp, #16]
    44b8:	add	sp, sp, #0x160
    44bc:	ret
    44c0:	cmp	w19, #0x2
    44c4:	b.ne	454c <PyThread_free_lock@plt+0x253c>  // b.any
    44c8:	ldr	x0, [x20, #152]
    44cc:	cbz	x0, 45b0 <PyThread_free_lock@plt+0x25a0>
    44d0:	mov	x0, x20
    44d4:	bl	2218 <PyThread_free_lock@plt+0x208>
    44d8:	tbnz	w0, #31, 4464 <PyThread_free_lock@plt+0x2454>
    44dc:	ldr	x3, [sp, #120]
    44e0:	mov	x2, x21
    44e4:	mov	x1, x28
    44e8:	mov	x0, x24
    44ec:	bl	27cc <PyThread_free_lock@plt+0x7bc>
    44f0:	mov	x21, x0
    44f4:	cmn	x0, #0x2
    44f8:	b.eq	4458 <PyThread_free_lock@plt+0x2448>  // b.none
    44fc:	tbnz	x0, #63, 4464 <PyThread_free_lock@plt+0x2454>
    4500:	bl	1fa0 <PyEval_SaveThread@plt>
    4504:	str	x0, [sp, #112]
    4508:	mov	w1, w27
    450c:	mov	x0, x24
    4510:	bl	1d00 <inflate@plt>
    4514:	mov	w19, w0
    4518:	ldr	x0, [sp, #112]
    451c:	bl	1d10 <PyEval_RestoreThread@plt>
    4520:	cmn	w19, #0x5
    4524:	b.eq	4530 <PyThread_free_lock@plt+0x2520>  // b.none
    4528:	cmp	w19, #0x1
    452c:	b.hi	44c0 <PyThread_free_lock@plt+0x24b0>  // b.pmore
    4530:	ldr	w0, [x20, #48]
    4534:	cmp	w0, #0x0
    4538:	ccmp	w19, #0x2, #0x4, ne  // ne = any
    453c:	b.eq	44dc <PyThread_free_lock@plt+0x24cc>  // b.none
    4540:	subs	x25, x25, w22, uxtw
    4544:	ccmp	w19, #0x1, #0x4, ne  // ne = any
    4548:	b.ne	43cc <PyThread_free_lock@plt+0x23bc>  // b.any
    454c:	mov	w2, w19
    4550:	add	x1, sp, #0x100
    4554:	mov	x0, x20
    4558:	bl	3e1c <PyThread_free_lock@plt+0x1e0c>
    455c:	tbnz	w0, #31, 4464 <PyThread_free_lock@plt+0x2454>
    4560:	cmp	w19, #0x1
    4564:	b.ne	4574 <PyThread_free_lock@plt+0x2564>  // b.any
    4568:	mov	w0, #0x1                   	// #1
    456c:	strb	w0, [x20, #144]
    4570:	b	4580 <PyThread_free_lock@plt+0x2570>
    4574:	cmp	w19, #0x0
    4578:	ccmn	w19, #0x5, #0x4, ne  // ne = any
    457c:	b.ne	45c4 <PyThread_free_lock@plt+0x25b4>  // b.any
    4580:	ldr	x0, [sp, #240]
    4584:	add	x0, x0, #0x20
    4588:	ldr	x1, [x20, #40]
    458c:	sub	x1, x1, x0
    4590:	add	x0, sp, #0xf0
    4594:	bl	1cf0 <_PyBytes_Resize@plt>
    4598:	cbnz	w0, 4464 <PyThread_free_lock@plt+0x2454>
    459c:	b	4480 <PyThread_free_lock@plt+0x2470>
    45a0:	bl	1d80 <_Py_Dealloc@plt>
    45a4:	b	4480 <PyThread_free_lock@plt+0x2470>
    45a8:	mov	x23, #0x0                   	// #0
    45ac:	b	4494 <PyThread_free_lock@plt+0x2484>
    45b0:	mov	w2, #0x2                   	// #2
    45b4:	add	x1, sp, #0x100
    45b8:	mov	x0, x20
    45bc:	bl	3e1c <PyThread_free_lock@plt+0x1e0c>
    45c0:	tbnz	w0, #31, 4464 <PyThread_free_lock@plt+0x2454>
    45c4:	ldp	x2, x3, [x20, #16]
    45c8:	stp	x2, x3, [sp, #128]
    45cc:	ldp	x2, x3, [x20, #32]
    45d0:	stp	x2, x3, [sp, #144]
    45d4:	ldp	x2, x3, [x20, #48]
    45d8:	stp	x2, x3, [sp, #160]
    45dc:	ldp	x2, x3, [x20, #64]
    45e0:	stp	x2, x3, [sp, #176]
    45e4:	ldp	x2, x3, [x20, #80]
    45e8:	stp	x2, x3, [sp, #192]
    45ec:	ldp	x2, x3, [x20, #96]
    45f0:	stp	x2, x3, [sp, #208]
    45f4:	ldp	x0, x1, [x20, #112]
    45f8:	stp	x0, x1, [sp, #224]
    45fc:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    4600:	add	x2, x2, #0x480
    4604:	mov	w1, w19
    4608:	add	x0, sp, #0x80
    460c:	bl	2178 <PyThread_free_lock@plt+0x168>
    4610:	b	4464 <PyThread_free_lock@plt+0x2454>
    4614:	ldr	x0, [sp, #256]
    4618:	str	x0, [x20, #16]
    461c:	ldr	x25, [sp, #272]
    4620:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    4624:	str	x0, [sp, #120]
    4628:	mov	x21, #0x4000                	// #16384
    462c:	b	43a0 <PyThread_free_lock@plt+0x2390>
    4630:	stp	x29, x30, [sp, #-304]!
    4634:	mov	x29, sp
    4638:	stp	x19, x20, [sp, #16]
    463c:	stp	x21, x22, [sp, #32]
    4640:	mov	x19, x0
    4644:	mov	x21, x1
    4648:	mov	x20, x2
    464c:	mov	x0, #0x4000                	// #16384
    4650:	str	x0, [sp, #296]
    4654:	cmp	x2, #0x1
    4658:	b.hi	46fc <PyThread_free_lock@plt+0x26ec>  // b.pmore
    465c:	cmp	x2, #0x0
    4660:	b.le	48e4 <PyThread_free_lock@plt+0x28d4>
    4664:	add	x1, sp, #0x128
    4668:	ldr	x0, [x21]
    466c:	bl	2748 <PyThread_free_lock@plt+0x738>
    4670:	cbz	w0, 4860 <PyThread_free_lock@plt+0x2850>
    4674:	ldr	x21, [sp, #296]
    4678:	str	xzr, [sp, #208]
    467c:	cmp	x21, #0x0
    4680:	b.le	4724 <PyThread_free_lock@plt+0x2714>
    4684:	mov	w2, #0x0                   	// #0
    4688:	add	x1, sp, #0xd8
    468c:	ldr	x0, [x19, #136]
    4690:	bl	1f30 <PyObject_GetBuffer@plt>
    4694:	cmn	w0, #0x1
    4698:	b.eq	4850 <PyThread_free_lock@plt+0x2840>  // b.none
    469c:	stp	x23, x24, [sp, #48]
    46a0:	stp	x25, x26, [sp, #64]
    46a4:	stp	x27, x28, [sp, #80]
    46a8:	bl	1fa0 <PyEval_SaveThread@plt>
    46ac:	mov	x20, x0
    46b0:	mov	w1, #0x1                   	// #1
    46b4:	ldr	x0, [x19, #160]
    46b8:	bl	1da0 <PyThread_acquire_lock@plt>
    46bc:	mov	x0, x20
    46c0:	bl	1d10 <PyEval_RestoreThread@plt>
    46c4:	mov	x22, x19
    46c8:	ldr	x0, [sp, #216]
    46cc:	str	x0, [x22, #16]!
    46d0:	ldr	x24, [sp, #232]
    46d4:	mov	x27, #0xffffffff            	// #4294967295
    46d8:	mov	w28, #0xffffffff            	// #-1
    46dc:	add	x26, sp, #0xd0
    46e0:	cmp	x24, x27
    46e4:	b.hi	48f0 <PyThread_free_lock@plt+0x28e0>  // b.pmore
    46e8:	str	w24, [x22, #8]
    46ec:	ands	x24, x24, #0xffffffff00000000
    46f0:	cset	w25, eq  // eq = none
    46f4:	lsl	w25, w25, #2
    46f8:	b	4760 <PyThread_free_lock@plt+0x2750>
    46fc:	mov	x3, #0x1                   	// #1
    4700:	mov	x2, #0x0                   	// #0
    4704:	mov	x1, x20
    4708:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    470c:	add	x0, x0, #0x5c8
    4710:	bl	1e80 <_PyArg_CheckPositional@plt>
    4714:	cbz	w0, 4858 <PyThread_free_lock@plt+0x2848>
    4718:	cmp	x20, #0x0
    471c:	b.gt	4664 <PyThread_free_lock@plt+0x2654>
    4720:	b	4674 <PyThread_free_lock@plt+0x2664>
    4724:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4728:	add	x1, x1, #0x648
    472c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    4730:	ldr	x0, [x0, #4032]
    4734:	ldr	x0, [x0]
    4738:	bl	1dc0 <PyErr_SetString@plt>
    473c:	mov	x0, #0x0                   	// #0
    4740:	b	48d4 <PyThread_free_lock@plt+0x28c4>
    4744:	cmp	w20, #0x2
    4748:	b.ne	47c4 <PyThread_free_lock@plt+0x27b4>  // b.any
    474c:	ldr	x0, [x19, #152]
    4750:	cbz	x0, 4868 <PyThread_free_lock@plt+0x2858>
    4754:	mov	x0, x19
    4758:	bl	2218 <PyThread_free_lock@plt+0x208>
    475c:	tbnz	w0, #31, 4898 <PyThread_free_lock@plt+0x2888>
    4760:	mov	x2, x21
    4764:	mov	x1, x26
    4768:	mov	x0, x22
    476c:	bl	28a4 <PyThread_free_lock@plt+0x894>
    4770:	mov	x21, x0
    4774:	tbnz	x0, #63, 4898 <PyThread_free_lock@plt+0x2888>
    4778:	bl	1fa0 <PyEval_SaveThread@plt>
    477c:	mov	x23, x0
    4780:	mov	w1, w25
    4784:	mov	x0, x22
    4788:	bl	1d00 <inflate@plt>
    478c:	mov	w20, w0
    4790:	mov	x0, x23
    4794:	bl	1d10 <PyEval_RestoreThread@plt>
    4798:	cmn	w20, #0x5
    479c:	b.eq	47a8 <PyThread_free_lock@plt+0x2798>  // b.none
    47a0:	cmp	w20, #0x1
    47a4:	b.hi	4744 <PyThread_free_lock@plt+0x2734>  // b.pmore
    47a8:	ldr	w0, [x19, #48]
    47ac:	cmp	w0, #0x0
    47b0:	ccmp	w20, #0x2, #0x4, ne  // ne = any
    47b4:	b.eq	4760 <PyThread_free_lock@plt+0x2750>  // b.none
    47b8:	cmp	x24, #0x0
    47bc:	ccmp	w20, #0x1, #0x4, ne  // ne = any
    47c0:	b.ne	46e0 <PyThread_free_lock@plt+0x26d0>  // b.any
    47c4:	mov	w2, w20
    47c8:	add	x1, sp, #0xd8
    47cc:	mov	x0, x19
    47d0:	bl	3e1c <PyThread_free_lock@plt+0x1e0c>
    47d4:	tbnz	w0, #31, 4898 <PyThread_free_lock@plt+0x2888>
    47d8:	cmp	w20, #0x1
    47dc:	b.ne	487c <PyThread_free_lock@plt+0x286c>  // b.any
    47e0:	mov	w0, #0x1                   	// #1
    47e4:	strb	w0, [x19, #144]
    47e8:	str	wzr, [x19, #148]
    47ec:	mov	x0, x22
    47f0:	bl	1e90 <inflateEnd@plt>
    47f4:	cbz	w0, 487c <PyThread_free_lock@plt+0x286c>
    47f8:	ldp	x2, x3, [x19, #16]
    47fc:	stp	x2, x3, [sp, #96]
    4800:	ldp	x2, x3, [x19, #32]
    4804:	stp	x2, x3, [sp, #112]
    4808:	ldp	x2, x3, [x19, #48]
    480c:	stp	x2, x3, [sp, #128]
    4810:	ldp	x2, x3, [x19, #64]
    4814:	stp	x2, x3, [sp, #144]
    4818:	ldp	x2, x3, [x19, #80]
    481c:	stp	x2, x3, [sp, #160]
    4820:	ldp	x2, x3, [x19, #96]
    4824:	stp	x2, x3, [sp, #176]
    4828:	ldp	x2, x3, [x19, #112]
    482c:	stp	x2, x3, [sp, #192]
    4830:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    4834:	add	x2, x2, #0x4a0
    4838:	mov	w1, w0
    483c:	add	x0, sp, #0x60
    4840:	bl	2178 <PyThread_free_lock@plt+0x168>
    4844:	b	4898 <PyThread_free_lock@plt+0x2888>
    4848:	bl	1d80 <_Py_Dealloc@plt>
    484c:	b	48b4 <PyThread_free_lock@plt+0x28a4>
    4850:	mov	x0, #0x0                   	// #0
    4854:	b	48d4 <PyThread_free_lock@plt+0x28c4>
    4858:	mov	x0, #0x0                   	// #0
    485c:	b	48d4 <PyThread_free_lock@plt+0x28c4>
    4860:	mov	x0, #0x0                   	// #0
    4864:	b	48d4 <PyThread_free_lock@plt+0x28c4>
    4868:	mov	w2, #0x2                   	// #2
    486c:	add	x1, sp, #0xd8
    4870:	mov	x0, x19
    4874:	bl	3e1c <PyThread_free_lock@plt+0x1e0c>
    4878:	tbnz	w0, #31, 4898 <PyThread_free_lock@plt+0x2888>
    487c:	ldr	x0, [sp, #208]
    4880:	add	x0, x0, #0x20
    4884:	ldr	x1, [x19, #40]
    4888:	sub	x1, x1, x0
    488c:	add	x0, sp, #0xd0
    4890:	bl	1cf0 <_PyBytes_Resize@plt>
    4894:	cbz	w0, 48b4 <PyThread_free_lock@plt+0x28a4>
    4898:	ldr	x0, [sp, #208]
    489c:	cbz	x0, 48b4 <PyThread_free_lock@plt+0x28a4>
    48a0:	str	xzr, [sp, #208]
    48a4:	ldr	x1, [x0]
    48a8:	sub	x1, x1, #0x1
    48ac:	str	x1, [x0]
    48b0:	cbz	x1, 4848 <PyThread_free_lock@plt+0x2838>
    48b4:	add	x0, sp, #0xd8
    48b8:	bl	1d20 <PyBuffer_Release@plt>
    48bc:	ldr	x0, [x19, #160]
    48c0:	bl	1f20 <PyThread_release_lock@plt>
    48c4:	ldr	x0, [sp, #208]
    48c8:	ldp	x23, x24, [sp, #48]
    48cc:	ldp	x25, x26, [sp, #64]
    48d0:	ldp	x27, x28, [sp, #80]
    48d4:	ldp	x19, x20, [sp, #16]
    48d8:	ldp	x21, x22, [sp, #32]
    48dc:	ldp	x29, x30, [sp], #304
    48e0:	ret
    48e4:	str	xzr, [sp, #208]
    48e8:	mov	x21, #0x4000                	// #16384
    48ec:	b	4684 <PyThread_free_lock@plt+0x2674>
    48f0:	str	w28, [x22, #8]
    48f4:	mov	x0, #0xffffffff00000001    	// #-4294967295
    48f8:	add	x24, x24, x0
    48fc:	mov	w25, #0x0                   	// #0
    4900:	b	4760 <PyThread_free_lock@plt+0x2750>
    4904:	stp	x29, x30, [sp, #-304]!
    4908:	mov	x29, sp
    490c:	stp	x19, x20, [sp, #16]
    4910:	stp	x21, x22, [sp, #32]
    4914:	mov	x19, x0
    4918:	mov	x20, x1
    491c:	stp	xzr, xzr, [sp, #224]
    4920:	stp	xzr, xzr, [sp, #240]
    4924:	stp	xzr, xzr, [sp, #256]
    4928:	stp	xzr, xzr, [sp, #272]
    492c:	stp	xzr, xzr, [sp, #288]
    4930:	mov	w2, #0x0                   	// #0
    4934:	add	x1, sp, #0xe0
    4938:	mov	x0, x20
    493c:	bl	1f30 <PyObject_GetBuffer@plt>
    4940:	mov	x21, #0x0                   	// #0
    4944:	cbnz	w0, 4ac0 <PyThread_free_lock@plt+0x2ab0>
    4948:	mov	w1, #0x43                  	// #67
    494c:	add	x0, sp, #0xe0
    4950:	bl	1d60 <PyBuffer_IsContiguous@plt>
    4954:	cbz	w0, 4a1c <PyThread_free_lock@plt+0x2a0c>
    4958:	stp	x23, x24, [sp, #48]
    495c:	stp	x25, x26, [sp, #64]
    4960:	str	x27, [sp, #80]
    4964:	str	xzr, [sp, #216]
    4968:	ldr	x0, [sp, #224]
    496c:	str	x0, [x19, #16]
    4970:	ldr	x24, [sp, #240]
    4974:	bl	1fa0 <PyEval_SaveThread@plt>
    4978:	mov	x20, x0
    497c:	mov	w1, #0x1                   	// #1
    4980:	ldr	x0, [x19, #160]
    4984:	bl	1da0 <PyThread_acquire_lock@plt>
    4988:	mov	x0, x20
    498c:	bl	1d10 <PyEval_RestoreThread@plt>
    4990:	mov	x20, #0x4000                	// #16384
    4994:	add	x23, x19, #0x10
    4998:	mov	x25, #0xffffffff            	// #4294967295
    499c:	add	x27, sp, #0xd8
    49a0:	cmp	x24, x25
    49a4:	csel	x26, x24, x25, ls  // ls = plast
    49a8:	str	w26, [x23, #8]
    49ac:	mov	x2, x20
    49b0:	mov	x1, x27
    49b4:	mov	x0, x23
    49b8:	bl	28a4 <PyThread_free_lock@plt+0x894>
    49bc:	mov	x20, x0
    49c0:	tbnz	x0, #63, 4a8c <PyThread_free_lock@plt+0x2a7c>
    49c4:	bl	1fa0 <PyEval_SaveThread@plt>
    49c8:	mov	x22, x0
    49cc:	mov	w1, #0x0                   	// #0
    49d0:	mov	x0, x23
    49d4:	bl	1dd0 <deflate@plt>
    49d8:	mov	w21, w0
    49dc:	mov	x0, x22
    49e0:	bl	1d10 <PyEval_RestoreThread@plt>
    49e4:	cmn	w21, #0x2
    49e8:	b.eq	4a40 <PyThread_free_lock@plt+0x2a30>  // b.none
    49ec:	ldr	w0, [x19, #48]
    49f0:	cbz	w0, 49ac <PyThread_free_lock@plt+0x299c>
    49f4:	subs	x24, x24, w26, uxtw
    49f8:	b.ne	49a0 <PyThread_free_lock@plt+0x2990>  // b.any
    49fc:	ldr	x0, [sp, #216]
    4a00:	add	x0, x0, #0x20
    4a04:	ldr	x1, [x19, #40]
    4a08:	sub	x1, x1, x0
    4a0c:	add	x0, sp, #0xd8
    4a10:	bl	1cf0 <_PyBytes_Resize@plt>
    4a14:	cbnz	w0, 4a8c <PyThread_free_lock@plt+0x2a7c>
    4a18:	b	4aa8 <PyThread_free_lock@plt+0x2a98>
    4a1c:	mov	x3, x20
    4a20:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    4a24:	add	x2, x2, #0x3d8
    4a28:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4a2c:	add	x1, x1, #0x670
    4a30:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    4a34:	add	x0, x0, #0x680
    4a38:	bl	1e30 <_PyArg_BadArgument@plt>
    4a3c:	b	4ac0 <PyThread_free_lock@plt+0x2ab0>
    4a40:	ldp	x2, x3, [x19, #16]
    4a44:	stp	x2, x3, [sp, #96]
    4a48:	ldp	x2, x3, [x19, #32]
    4a4c:	stp	x2, x3, [sp, #112]
    4a50:	ldp	x2, x3, [x19, #48]
    4a54:	stp	x2, x3, [sp, #128]
    4a58:	ldp	x2, x3, [x19, #64]
    4a5c:	stp	x2, x3, [sp, #144]
    4a60:	ldp	x2, x3, [x19, #80]
    4a64:	stp	x2, x3, [sp, #160]
    4a68:	ldp	x2, x3, [x19, #96]
    4a6c:	stp	x2, x3, [sp, #176]
    4a70:	ldp	x0, x1, [x19, #112]
    4a74:	stp	x0, x1, [sp, #192]
    4a78:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    4a7c:	add	x2, x2, #0x690
    4a80:	mov	w1, #0xfffffffe            	// #-2
    4a84:	add	x0, sp, #0x60
    4a88:	bl	2178 <PyThread_free_lock@plt+0x168>
    4a8c:	ldr	x0, [sp, #216]
    4a90:	cbz	x0, 4aa8 <PyThread_free_lock@plt+0x2a98>
    4a94:	str	xzr, [sp, #216]
    4a98:	ldr	x1, [x0]
    4a9c:	sub	x1, x1, #0x1
    4aa0:	str	x1, [x0]
    4aa4:	cbz	x1, 4ae4 <PyThread_free_lock@plt+0x2ad4>
    4aa8:	ldr	x0, [x19, #160]
    4aac:	bl	1f20 <PyThread_release_lock@plt>
    4ab0:	ldr	x21, [sp, #216]
    4ab4:	ldp	x23, x24, [sp, #48]
    4ab8:	ldp	x25, x26, [sp, #64]
    4abc:	ldr	x27, [sp, #80]
    4ac0:	ldr	x0, [sp, #232]
    4ac4:	cbz	x0, 4ad0 <PyThread_free_lock@plt+0x2ac0>
    4ac8:	add	x0, sp, #0xe0
    4acc:	bl	1d20 <PyBuffer_Release@plt>
    4ad0:	mov	x0, x21
    4ad4:	ldp	x19, x20, [sp, #16]
    4ad8:	ldp	x21, x22, [sp, #32]
    4adc:	ldp	x29, x30, [sp], #304
    4ae0:	ret
    4ae4:	bl	1d80 <_Py_Dealloc@plt>
    4ae8:	b	4aa8 <PyThread_free_lock@plt+0x2a98>
    4aec:	sub	sp, sp, #0x1c0
    4af0:	stp	x29, x30, [sp, #16]
    4af4:	add	x29, sp, #0x10
    4af8:	stp	x19, x20, [sp, #32]
    4afc:	stp	x21, x22, [sp, #48]
    4b00:	mov	x19, x1
    4b04:	mov	x1, x2
    4b08:	cbz	x3, 4c84 <PyThread_free_lock@plt+0x2c74>
    4b0c:	ldr	x21, [x3, #16]
    4b10:	add	x21, x2, x21
    4b14:	stp	xzr, xzr, [sp, #352]
    4b18:	stp	xzr, xzr, [sp, #368]
    4b1c:	stp	xzr, xzr, [sp, #384]
    4b20:	stp	xzr, xzr, [sp, #400]
    4b24:	stp	xzr, xzr, [sp, #416]
    4b28:	add	x0, sp, #0x1b0
    4b2c:	str	x0, [sp]
    4b30:	mov	w7, #0x0                   	// #0
    4b34:	mov	w6, #0x2                   	// #2
    4b38:	mov	w5, #0x1                   	// #1
    4b3c:	adrp	x4, 18000 <PyInit_zlib@@Base+0x130a4>
    4b40:	add	x4, x4, #0x1b0
    4b44:	add	x4, x4, #0x440
    4b48:	mov	x2, #0x0                   	// #0
    4b4c:	mov	x0, x19
    4b50:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    4b54:	mov	x19, x0
    4b58:	mov	x20, x0
    4b5c:	cbz	x0, 4d54 <PyThread_free_lock@plt+0x2d44>
    4b60:	mov	w2, #0x0                   	// #0
    4b64:	add	x1, sp, #0x160
    4b68:	ldr	x0, [x19]
    4b6c:	bl	1f30 <PyObject_GetBuffer@plt>
    4b70:	mov	x20, #0x0                   	// #0
    4b74:	cbnz	w0, 4d54 <PyThread_free_lock@plt+0x2d44>
    4b78:	mov	w1, #0x43                  	// #67
    4b7c:	add	x0, sp, #0x160
    4b80:	bl	1d60 <PyBuffer_IsContiguous@plt>
    4b84:	cbz	w0, 4cb8 <PyThread_free_lock@plt+0x2ca8>
    4b88:	cmp	x21, #0x1
    4b8c:	b.eq	4d10 <PyThread_free_lock@plt+0x2d00>  // b.none
    4b90:	ldr	x0, [x19, #8]
    4b94:	ldr	x0, [x0, #8]
    4b98:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    4b9c:	ldr	x1, [x1, #4008]
    4ba0:	cmp	x0, x1
    4ba4:	b.eq	4cdc <PyThread_free_lock@plt+0x2ccc>  // b.none
    4ba8:	adrp	x1, 17000 <PyInit_zlib@@Base+0x120a4>
    4bac:	ldr	x1, [x1, #4008]
    4bb0:	bl	1fd0 <PyType_IsSubtype@plt>
    4bb4:	cbnz	w0, 4cdc <PyThread_free_lock@plt+0x2ccc>
    4bb8:	ldr	x0, [x19, #8]
    4bbc:	bl	1ff0 <_PyLong_AsInt@plt>
    4bc0:	mov	w19, w0
    4bc4:	cmn	w0, #0x1
    4bc8:	b.eq	4cfc <PyThread_free_lock@plt+0x2cec>  // b.none
    4bcc:	stp	x25, x26, [sp, #80]
    4bd0:	str	xzr, [sp, #232]
    4bd4:	ldr	x26, [sp, #368]
    4bd8:	str	xzr, [sp, #320]
    4bdc:	adrp	x0, 2000 <deflateSetDictionary@plt>
    4be0:	add	x0, x0, #0x140
    4be4:	str	x0, [sp, #304]
    4be8:	adrp	x0, 2000 <deflateSetDictionary@plt>
    4bec:	add	x0, x0, #0x128
    4bf0:	str	x0, [sp, #312]
    4bf4:	ldr	x0, [sp, #352]
    4bf8:	str	x0, [sp, #240]
    4bfc:	mov	w3, #0x70                  	// #112
    4c00:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    4c04:	add	x2, x2, #0x358
    4c08:	mov	w1, w19
    4c0c:	add	x0, sp, #0xf0
    4c10:	bl	1e50 <deflateInit_@plt>
    4c14:	mov	w22, w0
    4c18:	cmn	w0, #0x2
    4c1c:	b.eq	4d7c <PyThread_free_lock@plt+0x2d6c>  // b.none
    4c20:	cbz	w0, 4d94 <PyThread_free_lock@plt+0x2d84>
    4c24:	cmn	w0, #0x4
    4c28:	b.eq	4d1c <PyThread_free_lock@plt+0x2d0c>  // b.none
    4c2c:	add	x0, sp, #0xf0
    4c30:	bl	1f10 <deflateEnd@plt>
    4c34:	ldp	x0, x1, [sp, #240]
    4c38:	stp	x0, x1, [sp, #112]
    4c3c:	ldp	x0, x1, [sp, #256]
    4c40:	stp	x0, x1, [sp, #128]
    4c44:	ldp	x0, x1, [sp, #272]
    4c48:	stp	x0, x1, [sp, #144]
    4c4c:	ldp	x0, x1, [sp, #288]
    4c50:	stp	x0, x1, [sp, #160]
    4c54:	ldp	x0, x1, [sp, #304]
    4c58:	stp	x0, x1, [sp, #176]
    4c5c:	ldp	x0, x1, [sp, #320]
    4c60:	stp	x0, x1, [sp, #192]
    4c64:	ldp	x0, x1, [sp, #336]
    4c68:	stp	x0, x1, [sp, #208]
    4c6c:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    4c70:	add	x2, x2, #0x690
    4c74:	mov	w1, w22
    4c78:	add	x0, sp, #0x70
    4c7c:	bl	2178 <PyThread_free_lock@plt+0x168>
    4c80:	b	4d34 <PyThread_free_lock@plt+0x2d24>
    4c84:	stp	xzr, xzr, [sp, #352]
    4c88:	stp	xzr, xzr, [sp, #368]
    4c8c:	stp	xzr, xzr, [sp, #384]
    4c90:	stp	xzr, xzr, [sp, #400]
    4c94:	stp	xzr, xzr, [sp, #416]
    4c98:	sub	x0, x2, #0x1
    4c9c:	cmp	x0, #0x1
    4ca0:	b.hi	4cb0 <PyThread_free_lock@plt+0x2ca0>  // b.pmore
    4ca4:	mov	x21, x2
    4ca8:	cbz	x19, 4b28 <PyThread_free_lock@plt+0x2b18>
    4cac:	b	4b60 <PyThread_free_lock@plt+0x2b50>
    4cb0:	mov	x21, x2
    4cb4:	b	4b28 <PyThread_free_lock@plt+0x2b18>
    4cb8:	ldr	x3, [x19]
    4cbc:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    4cc0:	add	x2, x2, #0x3d8
    4cc4:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4cc8:	add	x1, x1, #0x3f0
    4ccc:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    4cd0:	add	x0, x0, #0x680
    4cd4:	bl	1e30 <_PyArg_BadArgument@plt>
    4cd8:	b	4d54 <PyThread_free_lock@plt+0x2d44>
    4cdc:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4ce0:	add	x1, x1, #0x300
    4ce4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    4ce8:	ldr	x0, [x0, #4040]
    4cec:	ldr	x0, [x0]
    4cf0:	bl	1dc0 <PyErr_SetString@plt>
    4cf4:	mov	x20, #0x0                   	// #0
    4cf8:	b	4d54 <PyThread_free_lock@plt+0x2d44>
    4cfc:	bl	1eb0 <PyErr_Occurred@plt>
    4d00:	mov	x20, #0x0                   	// #0
    4d04:	cbnz	x0, 4d54 <PyThread_free_lock@plt+0x2d44>
    4d08:	stp	x25, x26, [sp, #80]
    4d0c:	b	4bd0 <PyThread_free_lock@plt+0x2bc0>
    4d10:	stp	x25, x26, [sp, #80]
    4d14:	mov	w19, #0xffffffff            	// #-1
    4d18:	b	4bd0 <PyThread_free_lock@plt+0x2bc0>
    4d1c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4d20:	add	x1, x1, #0x6a8
    4d24:	adrp	x0, 17000 <PyInit_zlib@@Base+0x120a4>
    4d28:	ldr	x0, [x0, #4024]
    4d2c:	ldr	x0, [x0]
    4d30:	bl	1dc0 <PyErr_SetString@plt>
    4d34:	ldr	x20, [sp, #232]
    4d38:	cbz	x20, 4eb4 <PyThread_free_lock@plt+0x2ea4>
    4d3c:	ldr	x0, [x20]
    4d40:	sub	x0, x0, #0x1
    4d44:	str	x0, [x20]
    4d48:	cbz	x0, 4ea0 <PyThread_free_lock@plt+0x2e90>
    4d4c:	mov	x20, #0x0                   	// #0
    4d50:	ldp	x25, x26, [sp, #80]
    4d54:	ldr	x0, [sp, #360]
    4d58:	cbz	x0, 4d64 <PyThread_free_lock@plt+0x2d54>
    4d5c:	add	x0, sp, #0x160
    4d60:	bl	1d20 <PyBuffer_Release@plt>
    4d64:	mov	x0, x20
    4d68:	ldp	x19, x20, [sp, #32]
    4d6c:	ldp	x21, x22, [sp, #48]
    4d70:	ldp	x29, x30, [sp, #16]
    4d74:	add	sp, sp, #0x1c0
    4d78:	ret
    4d7c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4d80:	add	x1, x1, #0x6d0
    4d84:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    4d88:	ldr	x0, [x0, #2464]
    4d8c:	bl	1dc0 <PyErr_SetString@plt>
    4d90:	b	4d34 <PyThread_free_lock@plt+0x2d24>
    4d94:	stp	x23, x24, [sp, #64]
    4d98:	stp	x27, x28, [sp, #96]
    4d9c:	mov	x19, #0x4000                	// #16384
    4da0:	mov	x27, #0xffffffff            	// #4294967295
    4da4:	mov	w28, #0xffffffff            	// #-1
    4da8:	add	x25, sp, #0xe8
    4dac:	add	x23, sp, #0xf0
    4db0:	cmp	x26, x27
    4db4:	b.hi	4ebc <PyThread_free_lock@plt+0x2eac>  // b.pmore
    4db8:	str	w26, [sp, #248]
    4dbc:	ands	x26, x26, #0xffffffff00000000
    4dc0:	mov	w24, #0x4                   	// #4
    4dc4:	csel	w24, w22, w24, ne  // ne = any
    4dc8:	b	4ecc <PyThread_free_lock@plt+0x2ebc>
    4dcc:	add	x0, sp, #0xf0
    4dd0:	bl	1f10 <deflateEnd@plt>
    4dd4:	ldp	x23, x24, [sp, #64]
    4dd8:	ldp	x27, x28, [sp, #96]
    4ddc:	b	4d34 <PyThread_free_lock@plt+0x2d24>
    4de0:	add	x0, sp, #0xf0
    4de4:	bl	1f10 <deflateEnd@plt>
    4de8:	ldp	x0, x1, [sp, #240]
    4dec:	stp	x0, x1, [sp, #112]
    4df0:	ldp	x0, x1, [sp, #256]
    4df4:	stp	x0, x1, [sp, #128]
    4df8:	ldp	x0, x1, [sp, #272]
    4dfc:	stp	x0, x1, [sp, #144]
    4e00:	ldp	x0, x1, [sp, #288]
    4e04:	stp	x0, x1, [sp, #160]
    4e08:	ldp	x0, x1, [sp, #304]
    4e0c:	stp	x0, x1, [sp, #176]
    4e10:	ldp	x0, x1, [sp, #320]
    4e14:	stp	x0, x1, [sp, #192]
    4e18:	ldp	x0, x1, [sp, #336]
    4e1c:	stp	x0, x1, [sp, #208]
    4e20:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    4e24:	add	x2, x2, #0x690
    4e28:	mov	w1, #0xfffffffe            	// #-2
    4e2c:	add	x0, sp, #0x70
    4e30:	bl	2178 <PyThread_free_lock@plt+0x168>
    4e34:	ldp	x23, x24, [sp, #64]
    4e38:	ldp	x27, x28, [sp, #96]
    4e3c:	b	4d34 <PyThread_free_lock@plt+0x2d24>
    4e40:	ldp	x2, x3, [sp, #240]
    4e44:	stp	x2, x3, [sp, #112]
    4e48:	ldp	x2, x3, [sp, #256]
    4e4c:	stp	x2, x3, [sp, #128]
    4e50:	ldp	x2, x3, [sp, #272]
    4e54:	stp	x2, x3, [sp, #144]
    4e58:	ldp	x2, x3, [sp, #288]
    4e5c:	stp	x2, x3, [sp, #160]
    4e60:	ldp	x2, x3, [sp, #304]
    4e64:	stp	x2, x3, [sp, #176]
    4e68:	ldp	x2, x3, [sp, #320]
    4e6c:	stp	x2, x3, [sp, #192]
    4e70:	ldp	x2, x3, [sp, #336]
    4e74:	stp	x2, x3, [sp, #208]
    4e78:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    4e7c:	add	x2, x2, #0x5e0
    4e80:	add	x0, sp, #0x70
    4e84:	bl	2178 <PyThread_free_lock@plt+0x168>
    4e88:	ldp	x23, x24, [sp, #64]
    4e8c:	ldp	x27, x28, [sp, #96]
    4e90:	b	4d34 <PyThread_free_lock@plt+0x2d24>
    4e94:	ldp	x23, x24, [sp, #64]
    4e98:	ldp	x27, x28, [sp, #96]
    4e9c:	b	4d34 <PyThread_free_lock@plt+0x2d24>
    4ea0:	mov	x0, x20
    4ea4:	bl	1d80 <_Py_Dealloc@plt>
    4ea8:	mov	x20, #0x0                   	// #0
    4eac:	ldp	x25, x26, [sp, #80]
    4eb0:	b	4d54 <PyThread_free_lock@plt+0x2d44>
    4eb4:	ldp	x25, x26, [sp, #80]
    4eb8:	b	4d54 <PyThread_free_lock@plt+0x2d44>
    4ebc:	str	w28, [sp, #248]
    4ec0:	mov	x0, #0xffffffff00000001    	// #-4294967295
    4ec4:	add	x26, x26, x0
    4ec8:	mov	w24, w22
    4ecc:	mov	x2, x19
    4ed0:	mov	x1, x25
    4ed4:	mov	x0, x23
    4ed8:	bl	28a4 <PyThread_free_lock@plt+0x894>
    4edc:	mov	x19, x0
    4ee0:	tbnz	x0, #63, 4dcc <PyThread_free_lock@plt+0x2dbc>
    4ee4:	bl	1fa0 <PyEval_SaveThread@plt>
    4ee8:	mov	x21, x0
    4eec:	mov	w1, w24
    4ef0:	mov	x0, x23
    4ef4:	bl	1dd0 <deflate@plt>
    4ef8:	mov	w20, w0
    4efc:	mov	x0, x21
    4f00:	bl	1d10 <PyEval_RestoreThread@plt>
    4f04:	cmn	w20, #0x2
    4f08:	b.eq	4de0 <PyThread_free_lock@plt+0x2dd0>  // b.none
    4f0c:	ldr	w0, [sp, #272]
    4f10:	cbz	w0, 4ecc <PyThread_free_lock@plt+0x2ebc>
    4f14:	cmp	w24, #0x4
    4f18:	b.ne	4db0 <PyThread_free_lock@plt+0x2da0>  // b.any
    4f1c:	add	x0, sp, #0xf0
    4f20:	bl	1f10 <deflateEnd@plt>
    4f24:	mov	w1, w0
    4f28:	cbnz	w0, 4e40 <PyThread_free_lock@plt+0x2e30>
    4f2c:	ldr	x0, [sp, #232]
    4f30:	add	x0, x0, #0x20
    4f34:	ldr	x1, [sp, #264]
    4f38:	sub	x1, x1, x0
    4f3c:	add	x0, sp, #0xe8
    4f40:	bl	1cf0 <_PyBytes_Resize@plt>
    4f44:	tbnz	w0, #31, 4e94 <PyThread_free_lock@plt+0x2e84>
    4f48:	ldr	x20, [sp, #232]
    4f4c:	ldp	x23, x24, [sp, #64]
    4f50:	ldp	x25, x26, [sp, #80]
    4f54:	ldp	x27, x28, [sp, #96]
    4f58:	b	4d54 <PyThread_free_lock@plt+0x2d44>

0000000000004f5c <PyInit_zlib@@Base>:
    4f5c:	stp	x29, x30, [sp, #-32]!
    4f60:	mov	x29, sp
    4f64:	str	x19, [sp, #16]
    4f68:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    4f6c:	add	x0, x0, #0x1b0
    4f70:	add	x0, x0, #0x260
    4f74:	bl	1e10 <PyType_Ready@plt>
    4f78:	mov	x19, #0x0                   	// #0
    4f7c:	tbnz	w0, #31, 51dc <PyInit_zlib@@Base+0x280>
    4f80:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    4f84:	add	x0, x0, #0x1b0
    4f88:	add	x0, x0, #0x40
    4f8c:	bl	1e10 <PyType_Ready@plt>
    4f90:	tbnz	w0, #31, 51dc <PyInit_zlib@@Base+0x280>
    4f94:	mov	w1, #0x3f5                 	// #1013
    4f98:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    4f9c:	add	x0, x0, #0x1b0
    4fa0:	add	x0, x0, #0x480
    4fa4:	bl	1ec0 <PyModule_Create2@plt>
    4fa8:	mov	x19, x0
    4fac:	cbz	x0, 51dc <PyInit_zlib@@Base+0x280>
    4fb0:	mov	x2, #0x0                   	// #0
    4fb4:	mov	x1, #0x0                   	// #0
    4fb8:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    4fbc:	add	x0, x0, #0x6e8
    4fc0:	bl	1e40 <PyErr_NewException@plt>
    4fc4:	mov	x2, x0
    4fc8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x130a4>
    4fcc:	str	x2, [x0, #2464]
    4fd0:	cbz	x2, 4ff0 <PyInit_zlib@@Base+0x94>
    4fd4:	ldr	x0, [x2]
    4fd8:	add	x0, x0, #0x1
    4fdc:	str	x0, [x2]
    4fe0:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4fe4:	add	x1, x1, #0x6f8
    4fe8:	mov	x0, x19
    4fec:	bl	1fb0 <PyModule_AddObject@plt>
    4ff0:	mov	x2, #0xf                   	// #15
    4ff4:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    4ff8:	add	x1, x1, #0x700
    4ffc:	mov	x0, x19
    5000:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5004:	mov	x2, #0x8                   	// #8
    5008:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    500c:	add	x1, x1, #0x710
    5010:	mov	x0, x19
    5014:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5018:	mov	x2, #0x8                   	// #8
    501c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5020:	add	x1, x1, #0x720
    5024:	mov	x0, x19
    5028:	bl	1ce0 <PyModule_AddIntConstant@plt>
    502c:	mov	x2, #0x4000                	// #16384
    5030:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5034:	add	x1, x1, #0x730
    5038:	mov	x0, x19
    503c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5040:	mov	x2, #0x0                   	// #0
    5044:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5048:	add	x1, x1, #0x740
    504c:	mov	x0, x19
    5050:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5054:	mov	x2, #0x1                   	// #1
    5058:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    505c:	add	x1, x1, #0x758
    5060:	mov	x0, x19
    5064:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5068:	mov	x2, #0x9                   	// #9
    506c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5070:	add	x1, x1, #0x768
    5074:	mov	x0, x19
    5078:	bl	1ce0 <PyModule_AddIntConstant@plt>
    507c:	mov	x2, #0xffffffffffffffff    	// #-1
    5080:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5084:	add	x1, x1, #0x780
    5088:	mov	x0, x19
    508c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5090:	mov	x2, #0x1                   	// #1
    5094:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5098:	add	x1, x1, #0x798
    509c:	mov	x0, x19
    50a0:	bl	1ce0 <PyModule_AddIntConstant@plt>
    50a4:	mov	x2, #0x2                   	// #2
    50a8:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    50ac:	add	x1, x1, #0x7a8
    50b0:	mov	x0, x19
    50b4:	bl	1ce0 <PyModule_AddIntConstant@plt>
    50b8:	mov	x2, #0x3                   	// #3
    50bc:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    50c0:	add	x1, x1, #0x7b8
    50c4:	mov	x0, x19
    50c8:	bl	1ce0 <PyModule_AddIntConstant@plt>
    50cc:	mov	x2, #0x4                   	// #4
    50d0:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    50d4:	add	x1, x1, #0x7c0
    50d8:	mov	x0, x19
    50dc:	bl	1ce0 <PyModule_AddIntConstant@plt>
    50e0:	mov	x2, #0x0                   	// #0
    50e4:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    50e8:	add	x1, x1, #0x7c8
    50ec:	mov	x0, x19
    50f0:	bl	1ce0 <PyModule_AddIntConstant@plt>
    50f4:	mov	x2, #0x0                   	// #0
    50f8:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    50fc:	add	x1, x1, #0x7e0
    5100:	mov	x0, x19
    5104:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5108:	mov	x2, #0x1                   	// #1
    510c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5110:	add	x1, x1, #0x7f0
    5114:	mov	x0, x19
    5118:	bl	1ce0 <PyModule_AddIntConstant@plt>
    511c:	mov	x2, #0x2                   	// #2
    5120:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5124:	add	x1, x1, #0x800
    5128:	mov	x0, x19
    512c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5130:	mov	x2, #0x3                   	// #3
    5134:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5138:	add	x1, x1, #0x810
    513c:	mov	x0, x19
    5140:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5144:	mov	x2, #0x4                   	// #4
    5148:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    514c:	add	x1, x1, #0x820
    5150:	mov	x0, x19
    5154:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5158:	mov	x2, #0x5                   	// #5
    515c:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5160:	add	x1, x1, #0x830
    5164:	mov	x0, x19
    5168:	bl	1ce0 <PyModule_AddIntConstant@plt>
    516c:	mov	x2, #0x6                   	// #6
    5170:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5174:	add	x1, x1, #0x838
    5178:	mov	x0, x19
    517c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5180:	adrp	x0, 5000 <PyInit_zlib@@Base+0xa4>
    5184:	add	x0, x0, #0x358
    5188:	bl	1f70 <PyUnicode_FromString@plt>
    518c:	mov	x2, x0
    5190:	cbz	x0, 51a4 <PyInit_zlib@@Base+0x248>
    5194:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    5198:	add	x1, x1, #0x840
    519c:	mov	x0, x19
    51a0:	bl	1fb0 <PyModule_AddObject@plt>
    51a4:	bl	1fc0 <zlibVersion@plt>
    51a8:	bl	1f70 <PyUnicode_FromString@plt>
    51ac:	mov	x2, x0
    51b0:	cbz	x0, 51c4 <PyInit_zlib@@Base+0x268>
    51b4:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    51b8:	add	x1, x1, #0x850
    51bc:	mov	x0, x19
    51c0:	bl	1fb0 <PyModule_AddObject@plt>
    51c4:	adrp	x2, 5000 <PyInit_zlib@@Base+0xa4>
    51c8:	add	x2, x2, #0x868
    51cc:	adrp	x1, 5000 <PyInit_zlib@@Base+0xa4>
    51d0:	add	x1, x1, #0x870
    51d4:	mov	x0, x19
    51d8:	bl	1f90 <PyModule_AddStringConstant@plt>
    51dc:	mov	x0, x19
    51e0:	ldr	x19, [sp, #16]
    51e4:	ldp	x29, x30, [sp], #32
    51e8:	ret

Disassembly of section .fini:

00000000000051ec <.fini>:
    51ec:	stp	x29, x30, [sp, #-16]!
    51f0:	mov	x29, sp
    51f4:	ldp	x29, x30, [sp], #16
    51f8:	ret
