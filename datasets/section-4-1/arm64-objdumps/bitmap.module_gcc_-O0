
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//bitmap.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_tolower>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	cmp	w0, #0x40
  10:	b.le	2c <grub_tolower+0x2c>
  14:	ldr	w0, [sp, #12]
  18:	cmp	w0, #0x5a
  1c:	b.gt	2c <grub_tolower+0x2c>
  20:	ldr	w0, [sp, #12]
  24:	add	w0, w0, #0x20
  28:	b	30 <grub_tolower+0x30>
  2c:	ldr	w0, [sp, #12]
  30:	add	sp, sp, #0x10
  34:	ret

0000000000000038 <grub_strcasecmp>:
  38:	stp	x29, x30, [sp, #-48]!
  3c:	mov	x29, sp
  40:	str	x19, [sp, #16]
  44:	str	x0, [sp, #40]
  48:	str	x1, [sp, #32]
  4c:	b	8c <grub_strcasecmp+0x54>
  50:	ldr	x0, [sp, #40]
  54:	ldrb	w0, [x0]
  58:	bl	0 <grub_tolower>
  5c:	mov	w19, w0
  60:	ldr	x0, [sp, #32]
  64:	ldrb	w0, [x0]
  68:	bl	0 <grub_tolower>
  6c:	cmp	w19, w0
  70:	b.ne	b0 <grub_strcasecmp+0x78>  // b.any
  74:	ldr	x0, [sp, #40]
  78:	add	x0, x0, #0x1
  7c:	str	x0, [sp, #40]
  80:	ldr	x0, [sp, #32]
  84:	add	x0, x0, #0x1
  88:	str	x0, [sp, #32]
  8c:	ldr	x0, [sp, #40]
  90:	ldrb	w0, [x0]
  94:	cmp	w0, #0x0
  98:	b.eq	b4 <grub_strcasecmp+0x7c>  // b.none
  9c:	ldr	x0, [sp, #32]
  a0:	ldrb	w0, [x0]
  a4:	cmp	w0, #0x0
  a8:	b.ne	50 <grub_strcasecmp+0x18>  // b.any
  ac:	b	b4 <grub_strcasecmp+0x7c>
  b0:	nop
  b4:	ldr	x0, [sp, #40]
  b8:	ldrb	w0, [x0]
  bc:	bl	0 <grub_tolower>
  c0:	mov	w19, w0
  c4:	ldr	x0, [sp, #32]
  c8:	ldrb	w0, [x0]
  cc:	bl	0 <grub_tolower>
  d0:	sub	w0, w19, w0
  d4:	ldr	x19, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret

00000000000000e0 <grub_video_bitmap_reader_register>:
  e0:	sub	sp, sp, #0x10
  e4:	str	x0, [sp, #8]
  e8:	adrp	x0, 0 <grub_tolower>
  ec:	add	x0, x0, #0x0
  f0:	ldr	x0, [x0]
  f4:	ldr	x1, [x0]
  f8:	ldr	x0, [sp, #8]
  fc:	str	x1, [x0, #16]
 100:	adrp	x0, 0 <grub_tolower>
 104:	add	x0, x0, #0x0
 108:	ldr	x0, [x0]
 10c:	ldr	x1, [sp, #8]
 110:	str	x1, [x0]
 114:	nop
 118:	add	sp, sp, #0x10
 11c:	ret
	...

0000000000000128 <grub_video_bitmap_reader_unregister>:
 128:	sub	sp, sp, #0x20
 12c:	str	x0, [sp, #8]
 130:	adrp	x0, 0 <grub_tolower>
 134:	add	x0, x0, #0x0
 138:	ldr	x0, [x0]
 13c:	str	x0, [sp, #24]
 140:	ldr	x0, [sp, #24]
 144:	ldr	x0, [x0]
 148:	str	x0, [sp, #16]
 14c:	b	18c <grub_video_bitmap_reader_unregister+0x64>
 150:	ldr	x1, [sp, #16]
 154:	ldr	x0, [sp, #8]
 158:	cmp	x1, x0
 15c:	b.ne	174 <grub_video_bitmap_reader_unregister+0x4c>  // b.any
 160:	ldr	x0, [sp, #16]
 164:	ldr	x1, [x0, #16]
 168:	ldr	x0, [sp, #24]
 16c:	str	x1, [x0]
 170:	b	19c <grub_video_bitmap_reader_unregister+0x74>
 174:	ldr	x0, [sp, #16]
 178:	add	x0, x0, #0x10
 17c:	str	x0, [sp, #24]
 180:	ldr	x0, [sp, #16]
 184:	ldr	x0, [x0, #16]
 188:	str	x0, [sp, #16]
 18c:	ldr	x0, [sp, #16]
 190:	cmp	x0, #0x0
 194:	b.ne	150 <grub_video_bitmap_reader_unregister+0x28>  // b.any
 198:	nop
 19c:	nop
 1a0:	add	sp, sp, #0x20
 1a4:	ret
	...

00000000000001b0 <grub_video_bitmap_create>:
 1b0:	stp	x29, x30, [sp, #-80]!
 1b4:	mov	x29, sp
 1b8:	str	x19, [sp, #16]
 1bc:	str	x0, [sp, #56]
 1c0:	str	w1, [sp, #52]
 1c4:	str	w2, [sp, #48]
 1c8:	str	w3, [sp, #44]
 1cc:	ldr	x0, [sp, #56]
 1d0:	cmp	x0, #0x0
 1d4:	b.ne	1f0 <grub_video_bitmap_create+0x40>  // b.any
 1d8:	adrp	x0, 0 <grub_tolower>
 1dc:	add	x0, x0, #0x0
 1e0:	ldr	x1, [x0]
 1e4:	mov	w0, #0x26                  	// #38
 1e8:	bl	0 <grub_error>
 1ec:	b	508 <grub_video_bitmap_create+0x358>
 1f0:	ldr	x0, [sp, #56]
 1f4:	str	xzr, [x0]
 1f8:	ldr	w0, [sp, #52]
 1fc:	cmp	w0, #0x0
 200:	b.eq	210 <grub_video_bitmap_create+0x60>  // b.none
 204:	ldr	w0, [sp, #48]
 208:	cmp	w0, #0x0
 20c:	b.ne	228 <grub_video_bitmap_create+0x78>  // b.any
 210:	adrp	x0, 0 <grub_tolower>
 214:	add	x0, x0, #0x0
 218:	ldr	x1, [x0]
 21c:	mov	w0, #0x26                  	// #38
 220:	bl	0 <grub_error>
 224:	b	508 <grub_video_bitmap_create+0x358>
 228:	mov	x0, #0x58                  	// #88
 22c:	bl	0 <grub_malloc>
 230:	mov	x1, x0
 234:	ldr	x0, [sp, #56]
 238:	str	x1, [x0]
 23c:	ldr	x0, [sp, #56]
 240:	ldr	x0, [x0]
 244:	cmp	x0, #0x0
 248:	b.ne	260 <grub_video_bitmap_create+0xb0>  // b.any
 24c:	adrp	x0, 0 <grub_tolower>
 250:	add	x0, x0, #0x0
 254:	ldr	x0, [x0]
 258:	ldr	w0, [x0]
 25c:	b	508 <grub_video_bitmap_create+0x358>
 260:	ldr	x0, [sp, #56]
 264:	ldr	x0, [x0]
 268:	str	x0, [sp, #72]
 26c:	ldr	x0, [sp, #72]
 270:	ldr	w1, [sp, #52]
 274:	str	w1, [x0]
 278:	ldr	x0, [sp, #72]
 27c:	ldr	w1, [sp, #48]
 280:	str	w1, [x0, #4]
 284:	ldr	x0, [sp, #72]
 288:	ldr	w1, [sp, #44]
 28c:	str	w1, [x0, #32]
 290:	ldr	w0, [sp, #44]
 294:	cmp	w0, #0x8
 298:	b.eq	3dc <grub_video_bitmap_create+0x22c>  // b.none
 29c:	ldr	w0, [sp, #44]
 2a0:	cmp	w0, #0x8
 2a4:	b.hi	450 <grub_video_bitmap_create+0x2a0>  // b.pmore
 2a8:	ldr	w0, [sp, #44]
 2ac:	cmp	w0, #0x1
 2b0:	b.eq	2c4 <grub_video_bitmap_create+0x114>  // b.none
 2b4:	ldr	w0, [sp, #44]
 2b8:	cmp	w0, #0x4
 2bc:	b.eq	354 <grub_video_bitmap_create+0x1a4>  // b.none
 2c0:	b	450 <grub_video_bitmap_create+0x2a0>
 2c4:	ldr	x0, [sp, #72]
 2c8:	mov	w1, #0x21                  	// #33
 2cc:	str	w1, [x0, #8]
 2d0:	ldr	x0, [sp, #72]
 2d4:	mov	w1, #0x20                  	// #32
 2d8:	str	w1, [x0, #12]
 2dc:	ldr	x0, [sp, #72]
 2e0:	mov	w1, #0x4                   	// #4
 2e4:	str	w1, [x0, #16]
 2e8:	ldr	x0, [sp, #72]
 2ec:	mov	w1, #0x100                 	// #256
 2f0:	str	w1, [x0, #24]
 2f4:	ldr	x0, [sp, #72]
 2f8:	mov	w1, #0x8                   	// #8
 2fc:	str	w1, [x0, #36]
 300:	ldr	x0, [sp, #72]
 304:	str	wzr, [x0, #40]
 308:	ldr	x0, [sp, #72]
 30c:	mov	w1, #0x8                   	// #8
 310:	str	w1, [x0, #44]
 314:	ldr	x0, [sp, #72]
 318:	mov	w1, #0x8                   	// #8
 31c:	str	w1, [x0, #48]
 320:	ldr	x0, [sp, #72]
 324:	mov	w1, #0x8                   	// #8
 328:	str	w1, [x0, #52]
 32c:	ldr	x0, [sp, #72]
 330:	mov	w1, #0x10                  	// #16
 334:	str	w1, [x0, #56]
 338:	ldr	x0, [sp, #72]
 33c:	mov	w1, #0x8                   	// #8
 340:	str	w1, [x0, #60]
 344:	ldr	x0, [sp, #72]
 348:	mov	w1, #0x18                  	// #24
 34c:	str	w1, [x0, #64]
 350:	b	47c <grub_video_bitmap_create+0x2cc>
 354:	ldr	x0, [sp, #72]
 358:	mov	w1, #0x1                   	// #1
 35c:	str	w1, [x0, #8]
 360:	ldr	x0, [sp, #72]
 364:	mov	w1, #0x18                  	// #24
 368:	str	w1, [x0, #12]
 36c:	ldr	x0, [sp, #72]
 370:	mov	w1, #0x3                   	// #3
 374:	str	w1, [x0, #16]
 378:	ldr	x0, [sp, #72]
 37c:	mov	w1, #0x100                 	// #256
 380:	str	w1, [x0, #24]
 384:	ldr	x0, [sp, #72]
 388:	mov	w1, #0x8                   	// #8
 38c:	str	w1, [x0, #36]
 390:	ldr	x0, [sp, #72]
 394:	str	wzr, [x0, #40]
 398:	ldr	x0, [sp, #72]
 39c:	mov	w1, #0x8                   	// #8
 3a0:	str	w1, [x0, #44]
 3a4:	ldr	x0, [sp, #72]
 3a8:	mov	w1, #0x8                   	// #8
 3ac:	str	w1, [x0, #48]
 3b0:	ldr	x0, [sp, #72]
 3b4:	mov	w1, #0x8                   	// #8
 3b8:	str	w1, [x0, #52]
 3bc:	ldr	x0, [sp, #72]
 3c0:	mov	w1, #0x10                  	// #16
 3c4:	str	w1, [x0, #56]
 3c8:	ldr	x0, [sp, #72]
 3cc:	str	wzr, [x0, #60]
 3d0:	ldr	x0, [sp, #72]
 3d4:	str	wzr, [x0, #64]
 3d8:	b	47c <grub_video_bitmap_create+0x2cc>
 3dc:	ldr	x0, [sp, #72]
 3e0:	mov	w1, #0x2                   	// #2
 3e4:	str	w1, [x0, #8]
 3e8:	ldr	x0, [sp, #72]
 3ec:	mov	w1, #0x8                   	// #8
 3f0:	str	w1, [x0, #12]
 3f4:	ldr	x0, [sp, #72]
 3f8:	mov	w1, #0x1                   	// #1
 3fc:	str	w1, [x0, #16]
 400:	ldr	x0, [sp, #72]
 404:	mov	w1, #0x100                 	// #256
 408:	str	w1, [x0, #24]
 40c:	ldr	x0, [sp, #72]
 410:	str	wzr, [x0, #36]
 414:	ldr	x0, [sp, #72]
 418:	str	wzr, [x0, #40]
 41c:	ldr	x0, [sp, #72]
 420:	str	wzr, [x0, #44]
 424:	ldr	x0, [sp, #72]
 428:	str	wzr, [x0, #48]
 42c:	ldr	x0, [sp, #72]
 430:	str	wzr, [x0, #52]
 434:	ldr	x0, [sp, #72]
 438:	str	wzr, [x0, #56]
 43c:	ldr	x0, [sp, #72]
 440:	str	wzr, [x0, #60]
 444:	ldr	x0, [sp, #72]
 448:	str	wzr, [x0, #64]
 44c:	b	47c <grub_video_bitmap_create+0x2cc>
 450:	ldr	x0, [sp, #56]
 454:	ldr	x0, [x0]
 458:	bl	0 <grub_free>
 45c:	ldr	x0, [sp, #56]
 460:	str	xzr, [x0]
 464:	adrp	x0, 0 <grub_tolower>
 468:	add	x0, x0, #0x0
 46c:	ldr	x1, [x0]
 470:	mov	w0, #0x18                  	// #24
 474:	bl	0 <grub_error>
 478:	b	508 <grub_video_bitmap_create+0x358>
 47c:	ldr	x0, [sp, #72]
 480:	ldr	w1, [x0, #16]
 484:	ldr	w0, [sp, #52]
 488:	mul	w1, w1, w0
 48c:	ldr	x0, [sp, #72]
 490:	str	w1, [x0, #20]
 494:	ldr	x0, [sp, #72]
 498:	ldr	w1, [x0, #16]
 49c:	ldr	w0, [sp, #52]
 4a0:	mul	w0, w1, w0
 4a4:	ldr	w1, [sp, #48]
 4a8:	mul	w0, w1, w0
 4ac:	str	w0, [sp, #68]
 4b0:	ldr	w1, [sp, #68]
 4b4:	ldr	x0, [sp, #56]
 4b8:	ldr	x19, [x0]
 4bc:	mov	x0, x1
 4c0:	bl	0 <grub_zalloc>
 4c4:	str	x0, [x19, #80]
 4c8:	ldr	x0, [sp, #56]
 4cc:	ldr	x0, [x0]
 4d0:	ldr	x0, [x0, #80]
 4d4:	cmp	x0, #0x0
 4d8:	b.ne	504 <grub_video_bitmap_create+0x354>  // b.any
 4dc:	ldr	x0, [sp, #56]
 4e0:	ldr	x0, [x0]
 4e4:	bl	0 <grub_free>
 4e8:	ldr	x0, [sp, #56]
 4ec:	str	xzr, [x0]
 4f0:	adrp	x0, 0 <grub_tolower>
 4f4:	add	x0, x0, #0x0
 4f8:	ldr	x0, [x0]
 4fc:	ldr	w0, [x0]
 500:	b	508 <grub_video_bitmap_create+0x358>
 504:	mov	w0, #0x0                   	// #0
 508:	ldr	x19, [sp, #16]
 50c:	ldp	x29, x30, [sp], #80
 510:	ret
 514:	nop
	...

0000000000000530 <grub_video_bitmap_destroy>:
 530:	stp	x29, x30, [sp, #-32]!
 534:	mov	x29, sp
 538:	str	x0, [sp, #24]
 53c:	ldr	x0, [sp, #24]
 540:	cmp	x0, #0x0
 544:	b.ne	550 <grub_video_bitmap_destroy+0x20>  // b.any
 548:	mov	w0, #0x0                   	// #0
 54c:	b	568 <grub_video_bitmap_destroy+0x38>
 550:	ldr	x0, [sp, #24]
 554:	ldr	x0, [x0, #80]
 558:	bl	0 <grub_free>
 55c:	ldr	x0, [sp, #24]
 560:	bl	0 <grub_free>
 564:	mov	w0, #0x0                   	// #0
 568:	ldp	x29, x30, [sp], #32
 56c:	ret

0000000000000570 <match_extension>:
 570:	stp	x29, x30, [sp, #-48]!
 574:	mov	x29, sp
 578:	str	x0, [sp, #24]
 57c:	str	x1, [sp, #16]
 580:	ldr	x0, [sp, #24]
 584:	bl	0 <grub_strlen>
 588:	str	w0, [sp, #44]
 58c:	ldr	x0, [sp, #16]
 590:	bl	0 <grub_strlen>
 594:	str	w0, [sp, #40]
 598:	ldr	w0, [sp, #44]
 59c:	cmp	w0, #0x0
 5a0:	b.eq	5c0 <match_extension+0x50>  // b.none
 5a4:	ldr	w0, [sp, #40]
 5a8:	cmp	w0, #0x0
 5ac:	b.eq	5c0 <match_extension+0x50>  // b.none
 5b0:	ldr	w1, [sp, #40]
 5b4:	ldr	w0, [sp, #44]
 5b8:	cmp	w1, w0
 5bc:	b.le	5c8 <match_extension+0x58>
 5c0:	mov	w0, #0x0                   	// #0
 5c4:	b	5f8 <match_extension+0x88>
 5c8:	ldr	w1, [sp, #44]
 5cc:	ldr	w0, [sp, #40]
 5d0:	sub	w0, w1, w0
 5d4:	str	w0, [sp, #44]
 5d8:	ldrsw	x0, [sp, #44]
 5dc:	ldr	x1, [sp, #24]
 5e0:	add	x0, x1, x0
 5e4:	ldr	x1, [sp, #16]
 5e8:	bl	38 <grub_strcasecmp>
 5ec:	cmp	w0, #0x0
 5f0:	cset	w0, eq  // eq = none
 5f4:	and	w0, w0, #0xff
 5f8:	ldp	x29, x30, [sp], #48
 5fc:	ret

0000000000000600 <grub_video_bitmap_load>:
 600:	stp	x29, x30, [sp, #-48]!
 604:	mov	x29, sp
 608:	str	x0, [sp, #24]
 60c:	str	x1, [sp, #16]
 610:	adrp	x0, 0 <grub_tolower>
 614:	add	x0, x0, #0x0
 618:	ldr	x0, [x0]
 61c:	ldr	x0, [x0]
 620:	str	x0, [sp, #40]
 624:	ldr	x0, [sp, #24]
 628:	cmp	x0, #0x0
 62c:	b.ne	648 <grub_video_bitmap_load+0x48>  // b.any
 630:	adrp	x0, 0 <grub_tolower>
 634:	add	x0, x0, #0x0
 638:	ldr	x1, [x0]
 63c:	mov	w0, #0x26                  	// #38
 640:	bl	0 <grub_error>
 644:	b	6b8 <grub_video_bitmap_load+0xb8>
 648:	ldr	x0, [sp, #24]
 64c:	str	xzr, [x0]
 650:	b	694 <grub_video_bitmap_load+0x94>
 654:	ldr	x0, [sp, #40]
 658:	ldr	x0, [x0]
 65c:	mov	x1, x0
 660:	ldr	x0, [sp, #16]
 664:	bl	570 <match_extension>
 668:	cmp	w0, #0x0
 66c:	b.eq	688 <grub_video_bitmap_load+0x88>  // b.none
 670:	ldr	x0, [sp, #40]
 674:	ldr	x2, [x0, #8]
 678:	ldr	x1, [sp, #16]
 67c:	ldr	x0, [sp, #24]
 680:	blr	x2
 684:	b	6b8 <grub_video_bitmap_load+0xb8>
 688:	ldr	x0, [sp, #40]
 68c:	ldr	x0, [x0, #16]
 690:	str	x0, [sp, #40]
 694:	ldr	x0, [sp, #40]
 698:	cmp	x0, #0x0
 69c:	b.ne	654 <grub_video_bitmap_load+0x54>  // b.any
 6a0:	ldr	x2, [sp, #16]
 6a4:	adrp	x0, 0 <grub_tolower>
 6a8:	add	x0, x0, #0x0
 6ac:	ldr	x1, [x0]
 6b0:	mov	w0, #0x4                   	// #4
 6b4:	bl	0 <grub_error>
 6b8:	ldp	x29, x30, [sp], #48
 6bc:	ret
	...

00000000000006d8 <grub_video_bitmap_get_mode_info>:
 6d8:	sub	sp, sp, #0x10
 6dc:	str	x0, [sp, #8]
 6e0:	str	x1, [sp]
 6e4:	ldr	x0, [sp, #8]
 6e8:	cmp	x0, #0x0
 6ec:	b.eq	72c <grub_video_bitmap_get_mode_info+0x54>  // b.none
 6f0:	ldr	x0, [sp]
 6f4:	ldr	x1, [sp, #8]
 6f8:	ldp	x2, x3, [x1]
 6fc:	stp	x2, x3, [x0]
 700:	ldp	x2, x3, [x1, #16]
 704:	stp	x2, x3, [x0, #16]
 708:	ldp	x2, x3, [x1, #32]
 70c:	stp	x2, x3, [x0, #32]
 710:	ldp	x2, x3, [x1, #48]
 714:	stp	x2, x3, [x0, #48]
 718:	ldr	x2, [x1, #64]
 71c:	str	x2, [x0, #64]
 720:	ldr	w1, [x1, #72]
 724:	str	w1, [x0, #72]
 728:	b	730 <grub_video_bitmap_get_mode_info+0x58>
 72c:	nop
 730:	add	sp, sp, #0x10
 734:	ret

0000000000000738 <grub_video_bitmap_get_data>:
 738:	sub	sp, sp, #0x10
 73c:	str	x0, [sp, #8]
 740:	ldr	x0, [sp, #8]
 744:	cmp	x0, #0x0
 748:	b.ne	754 <grub_video_bitmap_get_data+0x1c>  // b.any
 74c:	mov	x0, #0x0                   	// #0
 750:	b	75c <grub_video_bitmap_get_data+0x24>
 754:	ldr	x0, [sp, #8]
 758:	ldr	x0, [x0, #80]
 75c:	add	sp, sp, #0x10
 760:	ret
