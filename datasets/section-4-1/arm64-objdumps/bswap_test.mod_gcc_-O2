
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//bswap_test.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x340>:
   0:	sub	sp, sp, #0x90
   4:	adrp	x5, 0 <grub_mod_init-0x340>
   8:	adrp	x4, 0 <grub_mod_init-0x340>
   c:	adrp	x2, 0 <grub_mod_init-0x340>
  10:	adrp	x1, 0 <grub_mod_init-0x340>
  14:	mov	x6, x0
  18:	stp	x29, x30, [sp, #16]
  1c:	add	x29, sp, #0x10
  20:	mov	w3, #0x4d                  	// #77
  24:	stp	x19, x20, [sp, #32]
  28:	mov	x19, x0
  2c:	ldr	x20, [x2]
  30:	stp	x21, x22, [sp, #48]
  34:	mov	x21, #0x1                   	// #1
  38:	ldr	x22, [x1]
  3c:	stp	x23, x24, [sp, #64]
  40:	mov	x2, x20
  44:	ldr	x24, [x4]
  48:	stp	x25, x26, [sp, #80]
  4c:	mov	x1, x22
  50:	ldr	x25, [x5]
  54:	str	x19, [sp]
  58:	stp	x27, x28, [sp, #96]
  5c:	rev	x27, x0
  60:	mov	x7, x27
  64:	mov	w0, #0x1                   	// #1
  68:	mov	x5, x25
  6c:	mov	x4, x24
  70:	stp	x19, x27, [sp, #128]
  74:	bl	0 <grub_test_assert_helper>
  78:	adrp	x1, 0 <grub_mod_init-0x340>
  7c:	adrp	x0, 0 <grub_mod_init-0x340>
  80:	ldr	x23, [x1]
  84:	ldr	x28, [x0]
  88:	add	x0, sp, #0x88
  8c:	sub	x1, x0, x21
  90:	add	x0, sp, #0x80
  94:	add	x0, x0, x21
  98:	mov	x7, x27
  9c:	add	x21, x21, #0x1
  a0:	mov	x6, x19
  a4:	ldrb	w1, [x1, #8]
  a8:	mov	x5, x23
  ac:	ldurb	w0, [x0, #-1]
  b0:	mov	x4, x28
  b4:	mov	x2, x20
  b8:	mov	w3, #0x53                  	// #83
  bc:	cmp	w1, w0
  c0:	mov	x1, x22
  c4:	cset	w0, eq  // eq = none
  c8:	bl	0 <grub_test_assert_helper>
  cc:	cmp	x21, #0x5
  d0:	b.ne	88 <grub_mod_init-0x2b8>  // b.any
  d4:	and	x28, x19, #0xffffffff
  d8:	str	x28, [sp]
  dc:	rev	w26, w19
  e0:	add	x27, x20, #0x8
  e4:	mov	w0, #0x1                   	// #1
  e8:	mov	x7, x26
  ec:	mov	x6, x28
  f0:	mov	x2, x27
  f4:	mov	x5, x25
  f8:	mov	x4, x24
  fc:	mov	x1, x22
 100:	mov	w3, #0x39                  	// #57
 104:	str	w19, [sp, #128]
 108:	mov	x21, #0x1                   	// #1
 10c:	str	w26, [sp, #136]
 110:	bl	0 <grub_test_assert_helper>
 114:	adrp	x0, 0 <grub_mod_init-0x340>
 118:	ldr	x0, [x0]
 11c:	str	x0, [sp, #120]
 120:	add	x0, sp, #0x88
 124:	mov	x7, x26
 128:	sub	x1, x0, x21
 12c:	add	x0, sp, #0x80
 130:	add	x0, x0, x21
 134:	mov	x6, x28
 138:	ldr	x4, [sp, #120]
 13c:	add	x21, x21, #0x1
 140:	ldrb	w1, [x1, #4]
 144:	mov	x5, x23
 148:	ldurb	w0, [x0, #-1]
 14c:	mov	x2, x27
 150:	mov	w3, #0x3f                  	// #63
 154:	cmp	w1, w0
 158:	mov	x1, x22
 15c:	cset	w0, eq  // eq = none
 160:	bl	0 <grub_test_assert_helper>
 164:	cmp	x21, #0x5
 168:	b.ne	120 <grub_mod_init-0x220>  // b.any
 16c:	ubfx	w0, w19, #8, #8
 170:	ubfiz	w3, w19, #8, #16
 174:	orr	w3, w3, w0
 178:	add	x21, x20, #0x10
 17c:	and	x27, x3, #0xffff
 180:	and	x26, x19, #0xffff
 184:	ubfx	x1, x3, #8, #8
 188:	ubfiz	w0, w3, #8, #8
 18c:	orr	w0, w0, w1
 190:	mov	x5, x25
 194:	cmp	w0, w19, uxth
 198:	and	x0, x0, #0xffff
 19c:	str	x0, [sp]
 1a0:	mov	x4, x24
 1a4:	mov	x7, x27
 1a8:	and	w20, w3, #0xffff
 1ac:	mov	x2, x21
 1b0:	mov	x6, x26
 1b4:	mov	x1, x22
 1b8:	cset	w0, eq  // eq = none
 1bc:	sxth	w24, w3
 1c0:	mov	w3, #0x25                  	// #37
 1c4:	bl	0 <grub_test_assert_helper>
 1c8:	and	w24, w24, #0xff
 1cc:	adrp	x0, 0 <grub_mod_init-0x340>
 1d0:	and	w1, w19, #0xff
 1d4:	cmp	w1, w20, lsr #8
 1d8:	and	w19, w19, #0xffff
 1dc:	ldr	x20, [x0]
 1e0:	mov	x7, x27
 1e4:	cset	w0, eq  // eq = none
 1e8:	mov	x6, x26
 1ec:	mov	x2, x21
 1f0:	mov	x4, x20
 1f4:	mov	x5, x23
 1f8:	mov	x1, x22
 1fc:	mov	w3, #0x2b                  	// #43
 200:	bl	0 <grub_test_assert_helper>
 204:	cmp	w24, w19, lsr #8
 208:	mov	x7, x27
 20c:	mov	x4, x20
 210:	mov	x6, x26
 214:	mov	x2, x21
 218:	mov	x5, x23
 21c:	mov	x1, x22
 220:	cset	w0, eq  // eq = none
 224:	ldp	x29, x30, [sp, #16]
 228:	mov	w3, #0x2b                  	// #43
 22c:	ldp	x19, x20, [sp, #32]
 230:	ldp	x21, x22, [sp, #48]
 234:	ldp	x23, x24, [sp, #64]
 238:	ldp	x25, x26, [sp, #80]
 23c:	ldp	x27, x28, [sp, #96]
 240:	add	sp, sp, #0x90
 244:	b	0 <grub_test_assert_helper>
	...
 288:	stp	x29, x30, [sp, #-48]!
 28c:	mov	x0, #0xffffffffffffffff    	// #-1
 290:	mov	x29, sp
 294:	stp	x19, x20, [sp, #16]
 298:	mov	x20, #0x9c40                	// #40000
 29c:	mov	x19, #0x7                   	// #7
 2a0:	stp	x21, x22, [sp, #32]
 2a4:	bl	0 <grub_mod_init-0x340>
 2a8:	mov	x0, #0x1                   	// #1
 2ac:	bl	0 <grub_mod_init-0x340>
 2b0:	mov	x22, #0x194                 	// #404
 2b4:	mov	x0, #0x2                   	// #2
 2b8:	bl	0 <grub_mod_init-0x340>
 2bc:	mov	x0, #0x0                   	// #0
 2c0:	bl	0 <grub_mod_init-0x340>
 2c4:	mov	x0, #0x708                 	// #1800
 2c8:	mov	x21, #0x1                   	// #1
 2cc:	movk	x0, #0x506, lsl #16
 2d0:	movk	x0, #0x304, lsl #32
 2d4:	movk	x0, #0x102, lsl #48
 2d8:	bl	0 <grub_mod_init-0x340>
 2dc:	nop
 2e0:	add	x0, x19, x19, lsl #1
 2e4:	add	x22, x22, x22, lsl #4
 2e8:	lsl	x1, x19, #3
 2ec:	add	x0, x19, x0, lsl #2
 2f0:	sub	x1, x1, x19
 2f4:	add	x0, x0, x22
 2f8:	add	x19, x19, x1, lsl #2
 2fc:	add	x1, x0, x0, lsl #1
 300:	lsl	x1, x1, #3
 304:	sub	x1, x1, x0
 308:	adds	x19, x1, x19
 30c:	csel	x19, x19, x21, ne  // ne = any
 310:	cmp	x0, #0x0
 314:	csel	x22, x0, x21, ne  // ne = any
 318:	mov	x0, x22
 31c:	bl	0 <grub_mod_init-0x340>
 320:	mov	x0, x19
 324:	bl	0 <grub_mod_init-0x340>
 328:	subs	x20, x20, #0x1
 32c:	b.ne	2e0 <grub_mod_init-0x60>  // b.any
 330:	ldp	x19, x20, [sp, #16]
 334:	ldp	x21, x22, [sp, #32]
 338:	ldp	x29, x30, [sp], #48
 33c:	ret

0000000000000340 <grub_mod_init>:
 340:	adrp	x1, 0 <grub_mod_init-0x340>
 344:	adrp	x0, 0 <grub_mod_init-0x340>
 348:	ldr	x1, [x1]
 34c:	ldr	x0, [x0]
 350:	b	0 <grub_test_register>
 354:	nop
	...

0000000000000368 <grub_mod_fini>:
 368:	adrp	x0, 0 <grub_mod_init-0x340>
 36c:	ldr	x0, [x0]
 370:	b	0 <grub_test_unregister>
 374:	nop
	...
