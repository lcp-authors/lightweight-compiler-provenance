
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_md4.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <md4_init>:
   0:	mov	w1, #0x2301                	// #8961
   4:	movk	w1, #0x6745, lsl #16
   8:	str	w1, [x0]
   c:	mov	w1, #0xab89                	// #43913
  10:	movk	w1, #0xefcd, lsl #16
  14:	str	w1, [x0, #4]
  18:	mov	w1, #0xdcfe                	// #56574
  1c:	movk	w1, #0x98ba, lsl #16
  20:	str	w1, [x0, #8]
  24:	mov	w1, #0x5476                	// #21622
  28:	movk	w1, #0x1032, lsl #16
  2c:	str	w1, [x0, #12]
  30:	str	wzr, [x0, #16]
  34:	str	wzr, [x0, #84]
  38:	ret

000000000000003c <md4_read>:
  3c:	add	x0, x0, #0x14
  40:	ret

0000000000000044 <transform>:
  44:	stp	x29, x30, [sp, #-144]!
  48:	mov	x29, sp
  4c:	stp	x19, x20, [sp, #16]
  50:	stp	x21, x22, [sp, #32]
  54:	stp	x23, x24, [sp, #48]
  58:	stp	x25, x26, [sp, #64]
  5c:	mov	x19, x0
  60:	ldr	w23, [x0]
  64:	ldr	w20, [x0, #4]
  68:	ldr	w21, [x0, #8]
  6c:	ldr	w22, [x0, #12]
  70:	mov	x2, #0x40                  	// #64
  74:	add	x0, sp, #0x50
  78:	bl	0 <grub_memmove>
  7c:	ldr	w26, [sp, #80]
  80:	eor	w2, w21, w22
  84:	and	w2, w2, w20
  88:	eor	w2, w2, w22
  8c:	add	w23, w26, w23
  90:	add	w2, w2, w23
  94:	ror	w2, w2, #29
  98:	ldr	w18, [sp, #84]
  9c:	eor	w1, w20, w21
  a0:	and	w1, w1, w2
  a4:	eor	w1, w1, w21
  a8:	add	w22, w18, w22
  ac:	add	w1, w1, w22
  b0:	ror	w1, w1, #25
  b4:	ldr	w22, [sp, #88]
  b8:	eor	w0, w20, w2
  bc:	and	w0, w0, w1
  c0:	eor	w0, w0, w20
  c4:	add	w21, w22, w21
  c8:	add	w0, w0, w21
  cc:	ror	w0, w0, #21
  d0:	ldr	w14, [sp, #92]
  d4:	eor	w8, w2, w1
  d8:	and	w8, w8, w0
  dc:	eor	w8, w8, w2
  e0:	add	w20, w14, w20
  e4:	add	w8, w8, w20
  e8:	ror	w8, w8, #13
  ec:	ldr	w24, [sp, #96]
  f0:	eor	w7, w1, w0
  f4:	and	w7, w7, w8
  f8:	eor	w7, w7, w1
  fc:	add	w2, w24, w2
 100:	add	w7, w7, w2
 104:	ror	w7, w7, #29
 108:	ldr	w16, [sp, #100]
 10c:	eor	w6, w0, w8
 110:	and	w6, w6, w7
 114:	eor	w6, w6, w0
 118:	add	w1, w16, w1
 11c:	add	w6, w6, w1
 120:	ror	w6, w6, #25
 124:	ldr	w20, [sp, #104]
 128:	eor	w5, w8, w7
 12c:	and	w5, w5, w6
 130:	eor	w5, w5, w8
 134:	add	w0, w20, w0
 138:	add	w5, w5, w0
 13c:	ror	w5, w5, #21
 140:	ldr	w12, [sp, #108]
 144:	eor	w4, w7, w6
 148:	and	w4, w4, w5
 14c:	eor	w4, w4, w7
 150:	add	w8, w12, w8
 154:	add	w4, w4, w8
 158:	ror	w4, w4, #13
 15c:	ldr	w25, [sp, #112]
 160:	eor	w3, w6, w5
 164:	and	w3, w3, w4
 168:	eor	w3, w3, w6
 16c:	add	w7, w25, w7
 170:	add	w3, w3, w7
 174:	ror	w3, w3, #29
 178:	ldr	w17, [sp, #116]
 17c:	eor	w2, w5, w4
 180:	and	w2, w2, w3
 184:	eor	w2, w2, w5
 188:	add	w6, w17, w6
 18c:	add	w2, w2, w6
 190:	ror	w2, w2, #25
 194:	ldr	w21, [sp, #120]
 198:	eor	w1, w4, w3
 19c:	and	w1, w1, w2
 1a0:	eor	w1, w1, w4
 1a4:	add	w5, w21, w5
 1a8:	add	w1, w1, w5
 1ac:	ror	w1, w1, #21
 1b0:	ldr	w13, [sp, #124]
 1b4:	eor	w0, w3, w2
 1b8:	and	w0, w0, w1
 1bc:	eor	w0, w0, w3
 1c0:	add	w4, w13, w4
 1c4:	add	w0, w0, w4
 1c8:	ror	w0, w0, #13
 1cc:	ldr	w23, [sp, #128]
 1d0:	eor	w5, w2, w1
 1d4:	and	w5, w5, w0
 1d8:	eor	w5, w5, w2
 1dc:	add	w3, w23, w3
 1e0:	add	w3, w5, w3
 1e4:	ror	w3, w3, #29
 1e8:	ldr	w15, [sp, #132]
 1ec:	eor	w8, w1, w0
 1f0:	and	w8, w8, w3
 1f4:	eor	w8, w8, w1
 1f8:	add	w2, w15, w2
 1fc:	add	w8, w8, w2
 200:	ror	w8, w8, #25
 204:	ldr	w30, [sp, #136]
 208:	eor	w7, w0, w3
 20c:	and	w7, w7, w8
 210:	eor	w7, w7, w0
 214:	add	w1, w30, w1
 218:	add	w7, w7, w1
 21c:	ror	w7, w7, #21
 220:	ldr	w11, [sp, #140]
 224:	eor	w6, w3, w8
 228:	and	w6, w6, w7
 22c:	eor	w6, w6, w3
 230:	add	w0, w11, w0
 234:	add	w6, w6, w0
 238:	ror	w6, w6, #13
 23c:	orr	w5, w8, w7
 240:	and	w5, w5, w6
 244:	and	w0, w8, w7
 248:	orr	w5, w5, w0
 24c:	add	w5, w5, w3
 250:	mov	w1, #0x7999                	// #31129
 254:	movk	w1, #0x5a82, lsl #16
 258:	add	w3, w26, w1
 25c:	add	w5, w5, w3
 260:	ror	w5, w5, #29
 264:	orr	w3, w7, w6
 268:	and	w3, w3, w5
 26c:	and	w0, w7, w6
 270:	orr	w3, w3, w0
 274:	add	w3, w3, w8
 278:	add	w8, w24, w1
 27c:	add	w3, w3, w8
 280:	ror	w3, w3, #27
 284:	orr	w2, w6, w5
 288:	and	w2, w2, w3
 28c:	and	w0, w6, w5
 290:	orr	w2, w2, w0
 294:	add	w2, w2, w7
 298:	add	w7, w25, w1
 29c:	add	w2, w2, w7
 2a0:	ror	w2, w2, #23
 2a4:	orr	w4, w5, w3
 2a8:	and	w4, w4, w2
 2ac:	and	w0, w5, w3
 2b0:	orr	w4, w4, w0
 2b4:	add	w4, w4, w6
 2b8:	add	w6, w23, w1
 2bc:	add	w4, w4, w6
 2c0:	ror	w4, w4, #19
 2c4:	orr	w10, w3, w2
 2c8:	and	w10, w10, w4
 2cc:	and	w0, w3, w2
 2d0:	orr	w10, w10, w0
 2d4:	add	w10, w10, w5
 2d8:	add	w5, w18, w1
 2dc:	add	w10, w10, w5
 2e0:	ror	w10, w10, #29
 2e4:	orr	w9, w2, w4
 2e8:	and	w9, w9, w10
 2ec:	and	w0, w2, w4
 2f0:	orr	w9, w9, w0
 2f4:	add	w9, w9, w3
 2f8:	add	w3, w16, w1
 2fc:	add	w9, w9, w3
 300:	ror	w9, w9, #27
 304:	orr	w0, w4, w10
 308:	and	w0, w0, w9
 30c:	and	w3, w4, w10
 310:	orr	w0, w0, w3
 314:	add	w0, w0, w2
 318:	add	w2, w17, w1
 31c:	add	w0, w0, w2
 320:	ror	w0, w0, #23
 324:	orr	w8, w10, w9
 328:	and	w8, w8, w0
 32c:	and	w2, w10, w9
 330:	orr	w8, w8, w2
 334:	add	w8, w8, w4
 338:	add	w4, w15, w1
 33c:	add	w8, w8, w4
 340:	ror	w8, w8, #19
 344:	orr	w7, w9, w0
 348:	and	w7, w7, w8
 34c:	and	w2, w9, w0
 350:	orr	w7, w7, w2
 354:	add	w7, w7, w10
 358:	add	w10, w22, w1
 35c:	add	w7, w7, w10
 360:	ror	w7, w7, #29
 364:	orr	w6, w0, w8
 368:	and	w6, w6, w7
 36c:	and	w2, w0, w8
 370:	orr	w6, w6, w2
 374:	add	w6, w6, w9
 378:	add	w9, w20, w1
 37c:	add	w6, w6, w9
 380:	ror	w6, w6, #27
 384:	orr	w5, w8, w7
 388:	and	w5, w5, w6
 38c:	and	w2, w8, w7
 390:	orr	w5, w5, w2
 394:	add	w5, w5, w0
 398:	add	w0, w21, w1
 39c:	add	w5, w5, w0
 3a0:	ror	w5, w5, #23
 3a4:	orr	w4, w7, w6
 3a8:	and	w4, w4, w5
 3ac:	and	w0, w7, w6
 3b0:	orr	w4, w4, w0
 3b4:	add	w4, w4, w8
 3b8:	add	w8, w30, w1
 3bc:	add	w4, w4, w8
 3c0:	ror	w4, w4, #19
 3c4:	orr	w3, w6, w5
 3c8:	and	w3, w3, w4
 3cc:	and	w0, w6, w5
 3d0:	orr	w3, w3, w0
 3d4:	add	w3, w3, w7
 3d8:	add	w7, w14, w1
 3dc:	add	w3, w3, w7
 3e0:	ror	w3, w3, #29
 3e4:	orr	w0, w5, w4
 3e8:	and	w0, w0, w3
 3ec:	and	w2, w5, w4
 3f0:	orr	w0, w0, w2
 3f4:	add	w6, w0, w6
 3f8:	add	w0, w12, w1
 3fc:	add	w6, w6, w0
 400:	ror	w6, w6, #27
 404:	orr	w0, w4, w3
 408:	and	w0, w0, w6
 40c:	and	w2, w4, w3
 410:	orr	w0, w0, w2
 414:	add	w5, w0, w5
 418:	add	w0, w13, w1
 41c:	add	w5, w5, w0
 420:	ror	w5, w5, #23
 424:	orr	w0, w3, w6
 428:	and	w0, w0, w5
 42c:	and	w2, w3, w6
 430:	orr	w0, w0, w2
 434:	add	w4, w0, w4
 438:	add	w1, w11, w1
 43c:	add	w1, w4, w1
 440:	ror	w1, w1, #19
 444:	eor	w0, w6, w5
 448:	eor	w0, w0, w1
 44c:	add	w3, w0, w3
 450:	mov	w2, #0xeba1                	// #60321
 454:	movk	w2, #0x6ed9, lsl #16
 458:	add	w26, w26, w2
 45c:	add	w3, w3, w26
 460:	ror	w3, w3, #29
 464:	eor	w0, w5, w1
 468:	eor	w0, w0, w3
 46c:	add	w6, w0, w6
 470:	add	w25, w25, w2
 474:	add	w6, w6, w25
 478:	ror	w25, w6, #23
 47c:	eor	w0, w1, w3
 480:	eor	w0, w0, w25
 484:	add	w5, w0, w5
 488:	add	w24, w24, w2
 48c:	add	w5, w5, w24
 490:	ror	w24, w5, #21
 494:	eor	w4, w3, w25
 498:	eor	w4, w4, w24
 49c:	add	w1, w4, w1
 4a0:	add	w23, w23, w2
 4a4:	add	w1, w1, w23
 4a8:	ror	w23, w1, #17
 4ac:	eor	w0, w25, w24
 4b0:	eor	w0, w0, w23
 4b4:	add	w3, w0, w3
 4b8:	add	w22, w22, w2
 4bc:	add	w22, w3, w22
 4c0:	ror	w0, w22, #29
 4c4:	eor	w6, w24, w23
 4c8:	eor	w6, w6, w0
 4cc:	add	w6, w6, w25
 4d0:	add	w21, w21, w2
 4d4:	add	w21, w6, w21
 4d8:	ror	w3, w21, #23
 4dc:	eor	w5, w23, w0
 4e0:	eor	w5, w5, w3
 4e4:	add	w5, w5, w24
 4e8:	add	w20, w20, w2
 4ec:	add	w20, w5, w20
 4f0:	ror	w4, w20, #21
 4f4:	eor	w1, w0, w3
 4f8:	eor	w1, w1, w4
 4fc:	add	w1, w1, w23
 500:	add	w30, w30, w2
 504:	add	w30, w1, w30
 508:	ror	w5, w30, #17
 50c:	eor	w22, w3, w4
 510:	eor	w22, w22, w5
 514:	add	w22, w22, w0
 518:	add	w18, w18, w2
 51c:	add	w18, w22, w18
 520:	ror	w6, w18, #29
 524:	eor	w21, w4, w5
 528:	eor	w21, w21, w6
 52c:	add	w21, w21, w3
 530:	add	w17, w17, w2
 534:	add	w17, w21, w17
 538:	ror	w1, w17, #23
 53c:	eor	w20, w5, w6
 540:	eor	w20, w20, w1
 544:	add	w20, w20, w4
 548:	add	w16, w16, w2
 54c:	add	w16, w20, w16
 550:	ror	w0, w16, #21
 554:	eor	w30, w6, w1
 558:	eor	w30, w30, w0
 55c:	add	w30, w30, w5
 560:	add	w15, w15, w2
 564:	add	w15, w30, w15
 568:	ror	w15, w15, #17
 56c:	eor	w18, w1, w0
 570:	eor	w18, w18, w15
 574:	add	w18, w18, w6
 578:	add	w14, w14, w2
 57c:	add	w14, w18, w14
 580:	ror	w14, w14, #29
 584:	eor	w17, w0, w15
 588:	eor	w17, w17, w14
 58c:	add	w17, w17, w1
 590:	add	w13, w13, w2
 594:	add	w13, w17, w13
 598:	ror	w13, w13, #23
 59c:	eor	w16, w15, w14
 5a0:	eor	w16, w16, w13
 5a4:	add	w16, w16, w0
 5a8:	add	w12, w12, w2
 5ac:	add	w12, w16, w12
 5b0:	ror	w12, w12, #21
 5b4:	eor	w0, w14, w13
 5b8:	eor	w0, w0, w12
 5bc:	add	w15, w0, w15
 5c0:	add	w2, w11, w2
 5c4:	add	w2, w15, w2
 5c8:	ldr	w0, [x19]
 5cc:	add	w14, w0, w14
 5d0:	str	w14, [x19]
 5d4:	ror	w2, w2, #17
 5d8:	ldr	w15, [x19, #4]
 5dc:	add	w2, w15, w2
 5e0:	str	w2, [x19, #4]
 5e4:	ldr	w0, [x19, #8]
 5e8:	add	w12, w0, w12
 5ec:	str	w12, [x19, #8]
 5f0:	ldr	w0, [x19, #12]
 5f4:	add	w13, w0, w13
 5f8:	str	w13, [x19, #12]
 5fc:	ldp	x19, x20, [sp, #16]
 600:	ldp	x21, x22, [sp, #32]
 604:	ldp	x23, x24, [sp, #48]
 608:	ldp	x25, x26, [sp, #64]
 60c:	ldp	x29, x30, [sp], #144
 610:	ret

0000000000000614 <md4_write>:
 614:	stp	x29, x30, [sp, #-48]!
 618:	mov	x29, sp
 61c:	stp	x19, x20, [sp, #16]
 620:	stp	x21, x22, [sp, #32]
 624:	mov	x19, x0
 628:	mov	x20, x1
 62c:	mov	x21, x2
 630:	ldr	w0, [x0, #84]
 634:	cmp	w0, #0x40
 638:	b.eq	684 <md4_write+0x70>  // b.none
 63c:	cbz	x1, 75c <md4_write+0x148>
 640:	cbz	w0, 6ac <md4_write+0x98>
 644:	cbz	x2, 670 <md4_write+0x5c>
 648:	ldr	w0, [x19, #84]
 64c:	cmp	w0, #0x3f
 650:	b.gt	6c4 <md4_write+0xb0>
 654:	add	w1, w0, #0x1
 658:	str	w1, [x19, #84]
 65c:	ldrb	w1, [x20], #1
 660:	add	x0, x19, w0, sxtw
 664:	strb	w1, [x0, #20]
 668:	subs	x21, x21, #0x1
 66c:	b.ne	648 <md4_write+0x34>  // b.any
 670:	mov	x2, #0x0                   	// #0
 674:	mov	x1, #0x0                   	// #0
 678:	mov	x0, x19
 67c:	bl	614 <md4_write>
 680:	b	75c <md4_write+0x148>
 684:	add	x1, x19, #0x14
 688:	mov	x0, x19
 68c:	bl	44 <transform>
 690:	mov	w0, #0x80                  	// #128
 694:	bl	0 <_gcry_burn_stack>
 698:	str	wzr, [x19, #84]
 69c:	ldr	w0, [x19, #16]
 6a0:	add	w0, w0, #0x1
 6a4:	str	w0, [x19, #16]
 6a8:	cbz	x20, 75c <md4_write+0x148>
 6ac:	mov	w0, #0x80                  	// #128
 6b0:	bl	0 <_gcry_burn_stack>
 6b4:	cmp	x21, #0x3f
 6b8:	b.hi	6ec <md4_write+0xd8>  // b.pmore
 6bc:	mov	x22, x20
 6c0:	b	728 <md4_write+0x114>
 6c4:	mov	x2, #0x0                   	// #0
 6c8:	mov	x1, #0x0                   	// #0
 6cc:	mov	x0, x19
 6d0:	bl	614 <md4_write>
 6d4:	cbz	x21, 75c <md4_write+0x148>
 6d8:	mov	w0, #0x80                  	// #128
 6dc:	bl	0 <_gcry_burn_stack>
 6e0:	mov	x22, x20
 6e4:	cmp	x21, #0x3f
 6e8:	b.ls	72c <md4_write+0x118>  // b.plast
 6ec:	sub	x22, x21, #0x40
 6f0:	and	x22, x22, #0xffffffffffffffc0
 6f4:	add	x22, x22, #0x40
 6f8:	add	x22, x20, x22
 6fc:	mov	x1, x20
 700:	mov	x0, x19
 704:	bl	44 <transform>
 708:	str	wzr, [x19, #84]
 70c:	ldr	w0, [x19, #16]
 710:	add	w0, w0, #0x1
 714:	str	w0, [x19, #16]
 718:	add	x20, x20, #0x40
 71c:	cmp	x20, x22
 720:	b.ne	6fc <md4_write+0xe8>  // b.any
 724:	and	x21, x21, #0x3f
 728:	cbz	x21, 75c <md4_write+0x148>
 72c:	mov	x1, x22
 730:	ldr	w0, [x19, #84]
 734:	cmp	w0, #0x3f
 738:	b.gt	75c <md4_write+0x148>
 73c:	add	w2, w0, #0x1
 740:	str	w2, [x19, #84]
 744:	ldrb	w2, [x1], #1
 748:	add	x0, x19, w0, sxtw
 74c:	strb	w2, [x0, #20]
 750:	sub	x0, x21, x1
 754:	cmn	x22, x0
 758:	b.ne	730 <md4_write+0x11c>  // b.any
 75c:	ldp	x19, x20, [sp, #16]
 760:	ldp	x21, x22, [sp, #32]
 764:	ldp	x29, x30, [sp], #48
 768:	ret

000000000000076c <md4_final>:
 76c:	stp	x29, x30, [sp, #-48]!
 770:	mov	x29, sp
 774:	stp	x19, x20, [sp, #16]
 778:	str	x21, [sp, #32]
 77c:	mov	x19, x0
 780:	mov	x2, #0x0                   	// #0
 784:	mov	x1, #0x0                   	// #0
 788:	bl	614 <md4_write>
 78c:	ldr	w0, [x19, #16]
 790:	lsl	w2, w0, #6
 794:	ldr	w1, [x19, #84]
 798:	add	w20, w1, w2
 79c:	cmp	w2, w20
 7a0:	cset	w2, hi  // hi = pmore
 7a4:	add	w0, w2, w0, lsr #26
 7a8:	lsl	w21, w20, #3
 7ac:	extr	w20, w0, w20, #29
 7b0:	cmp	w1, #0x37
 7b4:	b.gt	7f8 <md4_final+0x8c>
 7b8:	add	w0, w1, #0x1
 7bc:	str	w0, [x19, #84]
 7c0:	add	x1, x19, w1, sxtw
 7c4:	mov	w2, #0xffffff80            	// #-128
 7c8:	strb	w2, [x1, #20]
 7cc:	cmp	w0, #0x37
 7d0:	b.gt	854 <md4_final+0xe8>
 7d4:	sxtw	x0, w0
 7d8:	add	x1, x19, #0x14
 7dc:	strb	wzr, [x1, x0]
 7e0:	add	x0, x0, #0x1
 7e4:	cmp	w0, #0x37
 7e8:	b.le	7dc <md4_final+0x70>
 7ec:	mov	w0, #0x38                  	// #56
 7f0:	str	w0, [x19, #84]
 7f4:	b	854 <md4_final+0xe8>
 7f8:	add	w0, w1, #0x1
 7fc:	str	w0, [x19, #84]
 800:	add	x1, x19, w1, sxtw
 804:	mov	w2, #0xffffff80            	// #-128
 808:	strb	w2, [x1, #20]
 80c:	cmp	w0, #0x3f
 810:	b.gt	834 <md4_final+0xc8>
 814:	sxtw	x0, w0
 818:	add	x1, x19, #0x14
 81c:	strb	wzr, [x1, x0]
 820:	add	x0, x0, #0x1
 824:	cmp	w0, #0x3f
 828:	b.le	81c <md4_final+0xb0>
 82c:	mov	w0, #0x40                  	// #64
 830:	str	w0, [x19, #84]
 834:	mov	x2, #0x0                   	// #0
 838:	mov	x1, #0x0                   	// #0
 83c:	mov	x0, x19
 840:	bl	614 <md4_write>
 844:	mov	x2, #0x38                  	// #56
 848:	mov	w1, #0x0                   	// #0
 84c:	add	x0, x19, #0x14
 850:	bl	0 <grub_memset>
 854:	strb	w21, [x19, #76]
 858:	lsr	w0, w21, #8
 85c:	strb	w0, [x19, #77]
 860:	lsr	w0, w21, #16
 864:	strb	w0, [x19, #78]
 868:	lsr	w21, w21, #24
 86c:	strb	w21, [x19, #79]
 870:	strb	w20, [x19, #80]
 874:	lsr	w20, w20, #8
 878:	strb	w20, [x19, #81]
 87c:	strb	wzr, [x19, #82]
 880:	strb	wzr, [x19, #83]
 884:	add	x1, x19, #0x14
 888:	mov	x0, x19
 88c:	bl	44 <transform>
 890:	mov	w0, #0x80                  	// #128
 894:	bl	0 <_gcry_burn_stack>
 898:	ldr	w0, [x19]
 89c:	str	w0, [x19, #20]
 8a0:	ldr	w0, [x19, #4]
 8a4:	str	w0, [x19, #24]
 8a8:	ldr	w0, [x19, #8]
 8ac:	str	w0, [x19, #28]
 8b0:	ldr	w0, [x19, #12]
 8b4:	str	w0, [x19, #32]
 8b8:	ldp	x19, x20, [sp, #16]
 8bc:	ldr	x21, [sp, #32]
 8c0:	ldp	x29, x30, [sp], #48
 8c4:	ret

00000000000008c8 <grub_mod_init>:
 8c8:	stp	x29, x30, [sp, #-16]!
 8cc:	mov	x29, sp
 8d0:	adrp	x0, 0 <md4_init>
 8d4:	ldr	x0, [x0]
 8d8:	bl	0 <grub_md_register>
 8dc:	ldp	x29, x30, [sp], #16
 8e0:	ret
 8e4:	nop
	...

00000000000008f0 <grub_mod_fini>:
 8f0:	stp	x29, x30, [sp, #-16]!
 8f4:	mov	x29, sp
 8f8:	adrp	x0, 0 <md4_init>
 8fc:	ldr	x0, [x0]
 900:	bl	0 <grub_md_unregister>
 904:	ldp	x29, x30, [sp], #16
 908:	ret
 90c:	nop
	...
