
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fnmatch.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000720 <.init>:
 720:	stp	x29, x30, [sp, #-16]!
 724:	mov	x29, sp
 728:	bl	7f0 <fprintf@plt+0x10>
 72c:	ldp	x29, x30, [sp], #16
 730:	ret

Disassembly of section .plt:

0000000000000740 <memcpy@plt-0x20>:
 740:	stp	x16, x30, [sp, #-16]!
 744:	adrp	x16, 11000 <dl_load@@Base+0x1073c>
 748:	ldr	x17, [x16, #4088]
 74c:	add	x16, x16, #0xff8
 750:	br	x17
 754:	nop
 758:	nop
 75c:	nop

0000000000000760 <memcpy@plt>:
 760:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 764:	ldr	x17, [x16]
 768:	add	x16, x16, #0x0
 76c:	br	x17

0000000000000770 <strlen@plt>:
 770:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 774:	ldr	x17, [x16, #8]
 778:	add	x16, x16, #0x8
 77c:	br	x17

0000000000000780 <exit@plt>:
 780:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 784:	ldr	x17, [x16, #16]
 788:	add	x16, x16, #0x10
 78c:	br	x17

0000000000000790 <__cxa_finalize@plt>:
 790:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 794:	ldr	x17, [x16, #24]
 798:	add	x16, x16, #0x18
 79c:	br	x17

00000000000007a0 <__gmon_start__@plt>:
 7a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #32]
 7a8:	add	x16, x16, #0x20
 7ac:	br	x17

00000000000007b0 <fwrite@plt>:
 7b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #40]
 7b8:	add	x16, x16, #0x28
 7bc:	br	x17

00000000000007c0 <fnmatch@plt>:
 7c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #48]
 7c8:	add	x16, x16, #0x30
 7cc:	br	x17

00000000000007d0 <dcgettext@plt>:
 7d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #56]
 7d8:	add	x16, x16, #0x38
 7dc:	br	x17

00000000000007e0 <fprintf@plt>:
 7e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #64]
 7e8:	add	x16, x16, #0x40
 7ec:	br	x17

Disassembly of section .text:

00000000000007f0 <dl_load@@Base-0xd4>:
 7f0:	adrp	x0, 11000 <dl_load@@Base+0x1073c>
 7f4:	ldr	x0, [x0, #4056]
 7f8:	cbz	x0, 800 <fprintf@plt+0x20>
 7fc:	b	7a0 <__gmon_start__@plt>
 800:	ret
 804:	nop
 808:	adrp	x0, 12000 <dl_load@@Base+0x1173c>
 80c:	add	x0, x0, #0x80
 810:	adrp	x1, 12000 <dl_load@@Base+0x1173c>
 814:	add	x1, x1, #0x80
 818:	cmp	x1, x0
 81c:	b.eq	834 <fprintf@plt+0x54>  // b.none
 820:	adrp	x1, 11000 <dl_load@@Base+0x1073c>
 824:	ldr	x1, [x1, #4032]
 828:	cbz	x1, 834 <fprintf@plt+0x54>
 82c:	mov	x16, x1
 830:	br	x16
 834:	ret
 838:	adrp	x0, 12000 <dl_load@@Base+0x1173c>
 83c:	add	x0, x0, #0x80
 840:	adrp	x1, 12000 <dl_load@@Base+0x1173c>
 844:	add	x1, x1, #0x80
 848:	sub	x1, x1, x0
 84c:	lsr	x2, x1, #63
 850:	add	x1, x2, x1, asr #3
 854:	cmp	xzr, x1, asr #1
 858:	asr	x1, x1, #1
 85c:	b.eq	874 <fprintf@plt+0x94>  // b.none
 860:	adrp	x2, 11000 <dl_load@@Base+0x1073c>
 864:	ldr	x2, [x2, #4064]
 868:	cbz	x2, 874 <fprintf@plt+0x94>
 86c:	mov	x16, x2
 870:	br	x16
 874:	ret
 878:	stp	x29, x30, [sp, #-32]!
 87c:	mov	x29, sp
 880:	str	x19, [sp, #16]
 884:	adrp	x19, 12000 <dl_load@@Base+0x1173c>
 888:	ldrb	w0, [x19, #128]
 88c:	cbnz	w0, 8b4 <fprintf@plt+0xd4>
 890:	adrp	x0, 11000 <dl_load@@Base+0x1073c>
 894:	ldr	x0, [x0, #4040]
 898:	cbz	x0, 8a8 <fprintf@plt+0xc8>
 89c:	adrp	x0, 12000 <dl_load@@Base+0x1173c>
 8a0:	ldr	x0, [x0, #72]
 8a4:	bl	790 <__cxa_finalize@plt>
 8a8:	bl	808 <fprintf@plt+0x28>
 8ac:	mov	w0, #0x1                   	// #1
 8b0:	strb	w0, [x19, #128]
 8b4:	ldr	x19, [sp, #16]
 8b8:	ldp	x29, x30, [sp], #32
 8bc:	ret
 8c0:	b	838 <fprintf@plt+0x58>

00000000000008c4 <dl_load@@Base>:
 8c4:	stp	x29, x30, [sp, #-48]!
 8c8:	stp	x20, x19, [sp, #32]
 8cc:	adrp	x19, 12000 <dl_load@@Base+0x1173c>
 8d0:	adrp	x20, 12000 <dl_load@@Base+0x1173c>
 8d4:	str	x0, [x19, #136]
 8d8:	str	x1, [x20, #144]
 8dc:	ldr	w8, [x0]
 8e0:	str	x21, [sp, #16]
 8e4:	mov	x29, sp
 8e8:	cmp	w8, #0x2
 8ec:	b.ne	9ac <dl_load@@Base+0xe8>  // b.any
 8f0:	ldr	w8, [x0, #4]
 8f4:	tbnz	w8, #31, 9ac <dl_load@@Base+0xe8>
 8f8:	adrp	x21, 12000 <dl_load@@Base+0x1173c>
 8fc:	ldr	x8, [x21, #80]
 900:	cbz	x8, 928 <dl_load@@Base+0x64>
 904:	ldr	x8, [x19, #136]
 908:	ldr	x0, [x20, #144]
 90c:	adrp	x1, 0 <memcpy@plt-0x760>
 910:	adrp	x2, 12000 <dl_load@@Base+0x1173c>
 914:	ldr	x8, [x8, #48]
 918:	add	x1, x1, #0xe11
 91c:	add	x2, x2, #0x50
 920:	blr	x8
 924:	cbz	w0, 980 <dl_load@@Base+0xbc>
 928:	mov	w21, wzr
 92c:	bl	b28 <dl_load@@Base+0x264>
 930:	cbnz	w0, 950 <dl_load@@Base+0x8c>
 934:	ldr	x8, [x19, #136]
 938:	ldr	x0, [x20, #144]
 93c:	adrp	x1, 0 <memcpy@plt-0x760>
 940:	add	x1, x1, #0xe5f
 944:	ldr	x8, [x8, #104]
 948:	blr	x8
 94c:	mov	w21, #0x1                   	// #1
 950:	ldr	x8, [x19, #136]
 954:	ldr	x0, [x20, #144]
 958:	adrp	x1, 0 <memcpy@plt-0x760>
 95c:	add	x1, x1, #0xffe
 960:	ldr	x8, [x8, #88]
 964:	blr	x8
 968:	cmp	w21, #0x0
 96c:	ldp	x20, x19, [sp, #32]
 970:	ldr	x21, [sp, #16]
 974:	cset	w0, eq  // eq = none
 978:	ldp	x29, x30, [sp], #48
 97c:	ret
 980:	ldr	x8, [x19, #136]
 984:	ldr	x0, [x20, #144]
 988:	ldr	x2, [x21, #80]
 98c:	adrp	x1, 0 <memcpy@plt-0x760>
 990:	ldr	x8, [x8, #104]
 994:	add	x1, x1, #0xe45
 998:	blr	x8
 99c:	mov	w21, #0x1                   	// #1
 9a0:	bl	b28 <dl_load@@Base+0x264>
 9a4:	cbnz	w0, 950 <dl_load@@Base+0x8c>
 9a8:	b	934 <dl_load@@Base+0x70>
 9ac:	adrp	x20, 11000 <dl_load@@Base+0x1073c>
 9b0:	ldr	x20, [x20, #4048]
 9b4:	adrp	x0, 0 <memcpy@plt-0x760>
 9b8:	add	x0, x0, #0xdec
 9bc:	mov	w1, #0x25                  	// #37
 9c0:	ldr	x3, [x20]
 9c4:	mov	w2, #0x1                   	// #1
 9c8:	bl	7b0 <fwrite@plt>
 9cc:	ldr	x8, [x19, #136]
 9d0:	ldr	x0, [x20]
 9d4:	adrp	x1, 0 <memcpy@plt-0x760>
 9d8:	add	x1, x1, #0xe12
 9dc:	ldp	w4, w5, [x8]
 9e0:	mov	w2, #0x2                   	// #2
 9e4:	mov	w3, wzr
 9e8:	bl	7e0 <fprintf@plt>
 9ec:	mov	w0, #0x1                   	// #1
 9f0:	bl	780 <exit@plt>
 9f4:	sub	sp, sp, #0x90
 9f8:	fmov	d0, #-1.000000000000000000e+00
 9fc:	mov	x0, x1
 a00:	stp	x29, x30, [sp, #96]
 a04:	str	x21, [sp, #112]
 a08:	stp	x20, x19, [sp, #128]
 a0c:	add	x29, sp, #0x60
 a10:	mov	x19, x1
 a14:	bl	b14 <dl_load@@Base+0x250>
 a18:	adrp	x21, 12000 <dl_load@@Base+0x1173c>
 a1c:	ldr	x8, [x21, #136]
 a20:	adrp	x20, 12000 <dl_load@@Base+0x1173c>
 a24:	ldr	x0, [x20, #144]
 a28:	sub	x3, x29, #0x20
 a2c:	ldr	x8, [x8, #152]
 a30:	mov	w2, #0x2                   	// #2
 a34:	mov	x1, xzr
 a38:	blr	x8
 a3c:	ldr	x8, [x21, #136]
 a40:	cbz	w0, aa8 <dl_load@@Base+0x1e4>
 a44:	ldr	x8, [x8, #152]
 a48:	ldr	x0, [x20, #144]
 a4c:	add	x3, sp, #0x20
 a50:	mov	w1, #0x1                   	// #1
 a54:	mov	w2, #0x2                   	// #2
 a58:	blr	x8
 a5c:	ldr	x8, [x21, #136]
 a60:	cbz	w0, abc <dl_load@@Base+0x1f8>
 a64:	ldr	x8, [x8, #152]
 a68:	ldr	x0, [x20, #144]
 a6c:	mov	x3, sp
 a70:	mov	w1, #0x2                   	// #2
 a74:	mov	w2, #0x1                   	// #1
 a78:	blr	x8
 a7c:	cbz	w0, ad0 <dl_load@@Base+0x20c>
 a80:	ldr	d0, [sp, #8]
 a84:	ldur	x0, [x29, #-24]
 a88:	ldr	x1, [sp, #40]
 a8c:	fcvtzs	w8, d0
 a90:	and	w2, w8, #0x1f
 a94:	bl	7c0 <fnmatch@plt>
 a98:	scvtf	d0, w0
 a9c:	mov	x0, x19
 aa0:	bl	b14 <dl_load@@Base+0x250>
 aa4:	b	afc <dl_load@@Base+0x238>
 aa8:	ldr	x21, [x8, #104]
 aac:	ldr	x20, [x20, #144]
 ab0:	adrp	x1, 0 <memcpy@plt-0x760>
 ab4:	add	x1, x1, #0xe8f
 ab8:	b	ae4 <dl_load@@Base+0x220>
 abc:	ldr	x21, [x8, #104]
 ac0:	ldr	x20, [x20, #144]
 ac4:	adrp	x1, 0 <memcpy@plt-0x760>
 ac8:	add	x1, x1, #0xeb5
 acc:	b	ae4 <dl_load@@Base+0x220>
 ad0:	ldr	x8, [x21, #136]
 ad4:	ldr	x20, [x20, #144]
 ad8:	adrp	x1, 0 <memcpy@plt-0x760>
 adc:	add	x1, x1, #0xedc
 ae0:	ldr	x21, [x8, #104]
 ae4:	mov	w2, #0x5                   	// #5
 ae8:	mov	x0, xzr
 aec:	bl	7d0 <dcgettext@plt>
 af0:	mov	x1, x0
 af4:	mov	x0, x20
 af8:	blr	x21
 afc:	mov	x0, x19
 b00:	ldp	x20, x19, [sp, #128]
 b04:	ldr	x21, [sp, #112]
 b08:	ldp	x29, x30, [sp, #96]
 b0c:	add	sp, sp, #0x90
 b10:	ret
 b14:	mov	w8, #0x1                   	// #1
 b18:	str	d0, [x0, #8]
 b1c:	str	w8, [x0]
 b20:	str	wzr, [x0, #16]
 b24:	ret
 b28:	sub	sp, sp, #0xc0
 b2c:	stp	x24, x23, [sp, #144]
 b30:	adrp	x24, 12000 <dl_load@@Base+0x1173c>
 b34:	ldr	x8, [x24, #136]
 b38:	stp	x29, x30, [sp, #96]
 b3c:	stp	x28, x27, [sp, #112]
 b40:	stp	x26, x25, [sp, #128]
 b44:	stp	x22, x21, [sp, #160]
 b48:	stp	x20, x19, [sp, #176]
 b4c:	adrp	x25, 12000 <dl_load@@Base+0x1173c>
 b50:	ldr	x20, [x8, #176]
 b54:	ldr	x19, [x25, #144]
 b58:	fmov	d0, #1.000000000000000000e+00
 b5c:	add	x0, sp, #0x20
 b60:	add	x29, sp, #0x60
 b64:	bl	b14 <dl_load@@Base+0x250>
 b68:	adrp	x1, 0 <memcpy@plt-0x760>
 b6c:	adrp	x2, 0 <memcpy@plt-0x760>
 b70:	mov	x3, x0
 b74:	add	x1, x1, #0xe11
 b78:	add	x2, x2, #0xf02
 b7c:	mov	x0, x19
 b80:	blr	x20
 b84:	cbz	w0, b90 <dl_load@@Base+0x2cc>
 b88:	mov	w26, wzr
 b8c:	b	bc0 <dl_load@@Base+0x2fc>
 b90:	ldr	x8, [x24, #136]
 b94:	ldr	x19, [x25, #144]
 b98:	adrp	x1, 0 <memcpy@plt-0x760>
 b9c:	add	x1, x1, #0xf0e
 ba0:	ldr	x20, [x8, #104]
 ba4:	mov	w2, #0x5                   	// #5
 ba8:	mov	x0, xzr
 bac:	bl	7d0 <dcgettext@plt>
 bb0:	mov	x1, x0
 bb4:	mov	x0, x19
 bb8:	blr	x20
 bbc:	mov	w26, #0x1                   	// #1
 bc0:	ldr	x8, [x24, #136]
 bc4:	ldr	x0, [x25, #144]
 bc8:	ldr	x8, [x8, #248]
 bcc:	blr	x8
 bd0:	adrp	x21, 0 <memcpy@plt-0x760>
 bd4:	adrp	x28, 11000 <dl_load@@Base+0x1073c>
 bd8:	mov	x19, x0
 bdc:	mov	x27, xzr
 be0:	add	x21, x21, #0xf9a
 be4:	add	x28, x28, #0xd58
 be8:	b	bfc <dl_load@@Base+0x338>
 bec:	ldr	x21, [x23, #16]
 bf0:	add	x27, x27, #0x10
 bf4:	cmp	x27, #0x60
 bf8:	b.eq	c94 <dl_load@@Base+0x3d0>  // b.none
 bfc:	ldr	x22, [x24, #136]
 c00:	ldr	x23, [x25, #144]
 c04:	mov	x0, x21
 c08:	bl	770 <strlen@plt>
 c0c:	mov	x3, x0
 c10:	sub	x4, x29, #0x20
 c14:	mov	x0, x22
 c18:	mov	x1, x23
 c1c:	mov	x2, x21
 c20:	bl	d20 <dl_load@@Base+0x45c>
 c24:	add	x23, x28, x27
 c28:	ldr	s0, [x23, #8]
 c2c:	add	x0, sp, #0x20
 c30:	sxtl	v0.2d, v0.2s
 c34:	scvtf	d0, d0
 c38:	bl	b14 <dl_load@@Base+0x250>
 c3c:	ldr	x8, [x24, #136]
 c40:	ldr	x0, [x25, #144]
 c44:	sub	x2, x29, #0x20
 c48:	add	x3, sp, #0x20
 c4c:	ldr	x8, [x8, #232]
 c50:	mov	x1, x19
 c54:	blr	x8
 c58:	cbnz	w0, bec <dl_load@@Base+0x328>
 c5c:	ldr	x8, [x24, #136]
 c60:	ldr	x22, [x25, #144]
 c64:	adrp	x1, 0 <memcpy@plt-0x760>
 c68:	mov	w2, #0x5                   	// #5
 c6c:	ldr	x20, [x8, #104]
 c70:	mov	x0, xzr
 c74:	add	x1, x1, #0xf3f
 c78:	bl	7d0 <dcgettext@plt>
 c7c:	mov	x1, x0
 c80:	mov	x0, x22
 c84:	mov	x2, x21
 c88:	blr	x20
 c8c:	add	w26, w26, #0x1
 c90:	b	bec <dl_load@@Base+0x328>
 c94:	ldr	x8, [x24, #136]
 c98:	mov	w9, #0x5                   	// #5
 c9c:	str	x19, [sp, #8]
 ca0:	str	w9, [sp]
 ca4:	ldr	x8, [x8, #176]
 ca8:	ldr	x0, [x25, #144]
 cac:	adrp	x1, 0 <memcpy@plt-0x760>
 cb0:	adrp	x2, 0 <memcpy@plt-0x760>
 cb4:	add	x1, x1, #0xe11
 cb8:	add	x2, x2, #0xf6c
 cbc:	mov	x3, sp
 cc0:	blr	x8
 cc4:	cbnz	w0, cf8 <dl_load@@Base+0x434>
 cc8:	ldr	x8, [x24, #136]
 ccc:	ldr	x19, [x25, #144]
 cd0:	adrp	x1, 0 <memcpy@plt-0x760>
 cd4:	add	x1, x1, #0xf70
 cd8:	ldr	x20, [x8, #104]
 cdc:	mov	w2, #0x5                   	// #5
 ce0:	mov	x0, xzr
 ce4:	bl	7d0 <dcgettext@plt>
 ce8:	mov	x1, x0
 cec:	mov	x0, x19
 cf0:	blr	x20
 cf4:	add	w26, w26, #0x1
 cf8:	cmp	w26, #0x0
 cfc:	ldp	x20, x19, [sp, #176]
 d00:	ldp	x22, x21, [sp, #160]
 d04:	ldp	x24, x23, [sp, #144]
 d08:	ldp	x26, x25, [sp, #128]
 d0c:	ldp	x28, x27, [sp, #112]
 d10:	ldp	x29, x30, [sp, #96]
 d14:	cset	w0, eq  // eq = none
 d18:	add	sp, sp, #0xc0
 d1c:	ret
 d20:	stp	x29, x30, [sp, #-16]!
 d24:	mov	x29, sp
 d28:	bl	d34 <dl_load@@Base+0x470>
 d2c:	ldp	x29, x30, [sp], #16
 d30:	ret
 d34:	stp	x29, x30, [sp, #-80]!
 d38:	movi	v0.2d, #0x0
 d3c:	mov	w8, #0x2                   	// #2
 d40:	str	x25, [sp, #16]
 d44:	stp	x24, x23, [sp, #32]
 d48:	stp	x22, x21, [sp, #48]
 d4c:	stp	x20, x19, [sp, #64]
 d50:	stp	q0, q0, [x4]
 d54:	str	w8, [x4]
 d58:	str	x3, [x4, #16]
 d5c:	ldr	x8, [x0, #280]
 d60:	add	x25, x3, #0x1
 d64:	mov	x24, x0
 d68:	mov	x0, x25
 d6c:	mov	x29, sp
 d70:	mov	x19, x4
 d74:	mov	x20, x3
 d78:	mov	x21, x2
 d7c:	mov	x23, x1
 d80:	blr	x8
 d84:	mov	x22, x0
 d88:	cbnz	x0, dac <dl_load@@Base+0x4e8>
 d8c:	ldr	x8, [x24, #96]
 d90:	adrp	x1, 0 <memcpy@plt-0x760>
 d94:	adrp	x2, 0 <memcpy@plt-0x760>
 d98:	add	x1, x1, #0xfd2
 d9c:	add	x2, x2, #0xff0
 da0:	mov	x0, x23
 da4:	mov	x3, x25
 da8:	blr	x8
 dac:	mov	x0, x22
 db0:	mov	x1, x21
 db4:	mov	x2, x20
 db8:	bl	760 <memcpy@plt>
 dbc:	strb	wzr, [x22, x20]
 dc0:	str	x22, [x19, #8]
 dc4:	ldp	x20, x19, [sp, #64]
 dc8:	ldp	x22, x21, [sp, #48]
 dcc:	ldp	x24, x23, [sp, #32]
 dd0:	ldr	x25, [sp, #16]
 dd4:	ldp	x29, x30, [sp], #80
 dd8:	ret

Disassembly of section .fini:

0000000000000ddc <.fini>:
 ddc:	stp	x29, x30, [sp, #-16]!
 de0:	mov	x29, sp
 de4:	ldp	x29, x30, [sp], #16
 de8:	ret
