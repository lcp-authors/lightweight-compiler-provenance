
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_heapq.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000aa0 <.init>:
 aa0:	stp	x29, x30, [sp, #-16]!
 aa4:	mov	x29, sp
 aa8:	bl	b90 <PyModule_AddObject@plt+0x10>
 aac:	ldp	x29, x30, [sp], #16
 ab0:	ret

Disassembly of section .plt:

0000000000000ac0 <__cxa_finalize@plt-0x20>:
 ac0:	stp	x16, x30, [sp, #-16]!
 ac4:	adrp	x16, 13000 <PyInit__heapq@@Base+0x11630>
 ac8:	ldr	x17, [x16, #4088]
 acc:	add	x16, x16, #0xff8
 ad0:	br	x17
 ad4:	nop
 ad8:	nop
 adc:	nop

0000000000000ae0 <__cxa_finalize@plt>:
 ae0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 ae4:	ldr	x17, [x16]
 ae8:	add	x16, x16, #0x0
 aec:	br	x17

0000000000000af0 <PyList_SetSlice@plt>:
 af0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 af4:	ldr	x17, [x16, #8]
 af8:	add	x16, x16, #0x8
 afc:	br	x17

0000000000000b00 <_Py_Dealloc@plt>:
 b00:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b04:	ldr	x17, [x16, #16]
 b08:	add	x16, x16, #0x10
 b0c:	br	x17

0000000000000b10 <PyErr_SetString@plt>:
 b10:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b14:	ldr	x17, [x16, #24]
 b18:	add	x16, x16, #0x18
 b1c:	br	x17

0000000000000b20 <PyObject_RichCompareBool@plt>:
 b20:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b24:	ldr	x17, [x16, #32]
 b28:	add	x16, x16, #0x20
 b2c:	br	x17

0000000000000b30 <PyList_Append@plt>:
 b30:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b34:	ldr	x17, [x16, #40]
 b38:	add	x16, x16, #0x28
 b3c:	br	x17

0000000000000b40 <__gmon_start__@plt>:
 b40:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b44:	ldr	x17, [x16, #48]
 b48:	add	x16, x16, #0x30
 b4c:	br	x17

0000000000000b50 <_PyArg_CheckPositional@plt>:
 b50:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b54:	ldr	x17, [x16, #56]
 b58:	add	x16, x16, #0x38
 b5c:	br	x17

0000000000000b60 <PyModule_Create2@plt>:
 b60:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b64:	ldr	x17, [x16, #64]
 b68:	add	x16, x16, #0x40
 b6c:	br	x17

0000000000000b70 <PyUnicode_DecodeUTF8@plt>:
 b70:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b74:	ldr	x17, [x16, #72]
 b78:	add	x16, x16, #0x48
 b7c:	br	x17

0000000000000b80 <PyModule_AddObject@plt>:
 b80:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b84:	ldr	x17, [x16, #80]
 b88:	add	x16, x16, #0x50
 b8c:	br	x17

Disassembly of section .text:

0000000000000b90 <PyInit__heapq@@Base-0xe40>:
     b90:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
     b94:	ldr	x0, [x0, #4040]
     b98:	cbz	x0, ba0 <PyModule_AddObject@plt+0x20>
     b9c:	b	b40 <__gmon_start__@plt>
     ba0:	ret
     ba4:	nop
     ba8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12630>
     bac:	add	x0, x0, #0x1e8
     bb0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x12630>
     bb4:	add	x1, x1, #0x1e8
     bb8:	cmp	x1, x0
     bbc:	b.eq	bd4 <PyModule_AddObject@plt+0x54>  // b.none
     bc0:	adrp	x1, 13000 <PyInit__heapq@@Base+0x11630>
     bc4:	ldr	x1, [x1, #4008]
     bc8:	cbz	x1, bd4 <PyModule_AddObject@plt+0x54>
     bcc:	mov	x16, x1
     bd0:	br	x16
     bd4:	ret
     bd8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12630>
     bdc:	add	x0, x0, #0x1e8
     be0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x12630>
     be4:	add	x1, x1, #0x1e8
     be8:	sub	x1, x1, x0
     bec:	lsr	x2, x1, #63
     bf0:	add	x1, x2, x1, asr #3
     bf4:	cmp	xzr, x1, asr #1
     bf8:	asr	x1, x1, #1
     bfc:	b.eq	c14 <PyModule_AddObject@plt+0x94>  // b.none
     c00:	adrp	x2, 13000 <PyInit__heapq@@Base+0x11630>
     c04:	ldr	x2, [x2, #4064]
     c08:	cbz	x2, c14 <PyModule_AddObject@plt+0x94>
     c0c:	mov	x16, x2
     c10:	br	x16
     c14:	ret
     c18:	stp	x29, x30, [sp, #-32]!
     c1c:	mov	x29, sp
     c20:	str	x19, [sp, #16]
     c24:	adrp	x19, 14000 <PyInit__heapq@@Base+0x12630>
     c28:	ldrb	w0, [x19, #488]
     c2c:	cbnz	w0, c54 <PyModule_AddObject@plt+0xd4>
     c30:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
     c34:	ldr	x0, [x0, #4016]
     c38:	cbz	x0, c48 <PyModule_AddObject@plt+0xc8>
     c3c:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12630>
     c40:	ldr	x0, [x0, #88]
     c44:	bl	ae0 <__cxa_finalize@plt>
     c48:	bl	ba8 <PyModule_AddObject@plt+0x28>
     c4c:	mov	w0, #0x1                   	// #1
     c50:	strb	w0, [x19, #488]
     c54:	ldr	x19, [sp, #16]
     c58:	ldp	x29, x30, [sp], #32
     c5c:	ret
     c60:	b	bd8 <PyModule_AddObject@plt+0x58>
     c64:	nop
     c68:	stp	x29, x30, [sp, #-80]!
     c6c:	mov	x29, sp
     c70:	stp	x23, x24, [sp, #48]
     c74:	ldr	x24, [x0, #16]
     c78:	cmp	x24, x1
     c7c:	b.le	dec <PyModule_AddObject@plt+0x26c>
     c80:	stp	x21, x22, [sp, #32]
     c84:	cmp	x1, x24, asr #1
     c88:	mov	x22, x0
     c8c:	ldr	x2, [x0, #24]
     c90:	str	x25, [sp, #64]
     c94:	mov	x21, x1
     c98:	asr	x25, x24, #1
     c9c:	b.ge	dd4 <PyModule_AddObject@plt+0x254>  // b.tcont
     ca0:	mov	x23, x24
     ca4:	stp	x19, x20, [sp, #16]
     ca8:	mov	x20, x1
     cac:	b	cc8 <PyModule_AddObject@plt+0x148>
     cb0:	ldr	x3, [x2, x20, lsl #3]
     cb4:	str	x3, [x5]
     cb8:	str	x1, [x2, x20, lsl #3]
     cbc:	cmp	x19, x25
     cc0:	mov	x20, x19
     cc4:	b.ge	d30 <PyModule_AddObject@plt+0x1b0>  // b.tcont
     cc8:	lsl	x3, x20, #1
     ccc:	add	x19, x3, #0x1
     cd0:	add	x3, x3, #0x2
     cd4:	cmp	x3, x23
     cd8:	lsl	x4, x19, #3
     cdc:	add	x5, x2, x4
     ce0:	ldr	x1, [x2, x19, lsl #3]
     ce4:	b.ge	cb0 <PyModule_AddObject@plt+0x130>  // b.tcont
     ce8:	ldr	x0, [x2, x3, lsl #3]
     cec:	mov	w2, #0x0                   	// #0
     cf0:	bl	b20 <PyObject_RichCompareBool@plt>
     cf4:	tbnz	w0, #31, d98 <PyModule_AddObject@plt+0x218>
     cf8:	ldp	x24, x2, [x22, #16]
     cfc:	eor	w0, w0, #0x1
     d00:	add	x19, x19, x0
     d04:	lsl	x4, x19, #3
     d08:	cmp	x24, x23
     d0c:	b.ne	db4 <PyModule_AddObject@plt+0x234>  // b.any
     d10:	add	x5, x2, x4
     d14:	cmp	x19, x25
     d18:	ldr	x3, [x2, x20, lsl #3]
     d1c:	ldr	x1, [x2, x19, lsl #3]
     d20:	str	x3, [x5]
     d24:	str	x1, [x2, x20, lsl #3]
     d28:	mov	x20, x19
     d2c:	b.lt	cc8 <PyModule_AddObject@plt+0x148>  // b.tstop
     d30:	cmp	x19, x24
     d34:	b.ge	e0c <PyModule_AddObject@plt+0x28c>  // b.tcont
     d38:	mov	x3, x2
     d3c:	cmp	x19, x21
     d40:	ldr	x1, [x2, x4]
     d44:	b.gt	d78 <PyModule_AddObject@plt+0x1f8>
     d48:	b	dd0 <PyModule_AddObject@plt+0x250>
     d4c:	ldr	x1, [x22, #16]
     d50:	cmp	x24, x1
     d54:	b.ne	db4 <PyModule_AddObject@plt+0x234>  // b.any
     d58:	cbz	w0, dd0 <PyModule_AddObject@plt+0x250>
     d5c:	ldr	x3, [x22, #24]
     d60:	cmp	x21, x19
     d64:	ldr	x1, [x3, x20, lsl #3]
     d68:	ldr	x0, [x3, x23]
     d6c:	str	x1, [x3, x23]
     d70:	str	x0, [x3, x20, lsl #3]
     d74:	b.ge	dd0 <PyModule_AddObject@plt+0x250>  // b.tcont
     d78:	sub	x0, x19, #0x1
     d7c:	mov	x20, x19
     d80:	mov	w2, #0x0                   	// #0
     d84:	asr	x19, x0, #1
     d88:	lsl	x23, x19, #3
     d8c:	ldr	x0, [x3, x19, lsl #3]
     d90:	bl	b20 <PyObject_RichCompareBool@plt>
     d94:	tbz	w0, #31, d4c <PyModule_AddObject@plt+0x1cc>
     d98:	ldp	x19, x20, [sp, #16]
     d9c:	mov	w0, #0xffffffff            	// #-1
     da0:	ldp	x21, x22, [sp, #32]
     da4:	ldr	x25, [sp, #64]
     da8:	ldp	x23, x24, [sp, #48]
     dac:	ldp	x29, x30, [sp], #80
     db0:	ret
     db4:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
     db8:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     dbc:	add	x1, x1, #0xa58
     dc0:	ldr	x0, [x0, #4024]
     dc4:	ldr	x0, [x0]
     dc8:	bl	b10 <PyErr_SetString@plt>
     dcc:	b	d98 <PyModule_AddObject@plt+0x218>
     dd0:	ldp	x19, x20, [sp, #16]
     dd4:	mov	w0, #0x0                   	// #0
     dd8:	ldp	x21, x22, [sp, #32]
     ddc:	ldp	x23, x24, [sp, #48]
     de0:	ldr	x25, [sp, #64]
     de4:	ldp	x29, x30, [sp], #80
     de8:	ret
     dec:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
     df0:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     df4:	add	x1, x1, #0xa40
     df8:	ldr	x0, [x0, #4056]
     dfc:	ldr	x0, [x0]
     e00:	bl	b10 <PyErr_SetString@plt>
     e04:	mov	w0, #0xffffffff            	// #-1
     e08:	b	da8 <PyModule_AddObject@plt+0x228>
     e0c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
     e10:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     e14:	add	x1, x1, #0xa40
     e18:	ldr	x0, [x0, #4056]
     e1c:	b	dc4 <PyModule_AddObject@plt+0x244>
     e20:	stp	x29, x30, [sp, #-64]!
     e24:	mov	x29, sp
     e28:	stp	x23, x24, [sp, #48]
     e2c:	ldr	x24, [x0, #16]
     e30:	cmp	x24, x2
     e34:	b.le	f0c <PyModule_AddObject@plt+0x38c>
     e38:	ldr	x3, [x0, #24]
     e3c:	stp	x19, x20, [sp, #16]
     e40:	mov	x23, x1
     e44:	stp	x21, x22, [sp, #32]
     e48:	mov	x19, x2
     e4c:	mov	x22, x0
     e50:	cmp	x2, x1
     e54:	ldr	x0, [x3, x2, lsl #3]
     e58:	b.gt	e8c <PyModule_AddObject@plt+0x30c>
     e5c:	b	ec4 <PyModule_AddObject@plt+0x344>
     e60:	ldr	x1, [x22, #16]
     e64:	cmp	x1, x24
     e68:	b.ne	edc <PyModule_AddObject@plt+0x35c>  // b.any
     e6c:	cbz	w0, ec4 <PyModule_AddObject@plt+0x344>
     e70:	ldr	x3, [x22, #24]
     e74:	cmp	x23, x19
     e78:	ldr	x0, [x3, x20, lsl #3]
     e7c:	ldr	x1, [x3, x21]
     e80:	str	x0, [x3, x21]
     e84:	str	x1, [x3, x20, lsl #3]
     e88:	b.ge	ec4 <PyModule_AddObject@plt+0x344>  // b.tcont
     e8c:	sub	x1, x19, #0x1
     e90:	mov	x20, x19
     e94:	mov	w2, #0x0                   	// #0
     e98:	asr	x19, x1, #1
     e9c:	lsl	x21, x19, #3
     ea0:	ldr	x1, [x3, x19, lsl #3]
     ea4:	bl	b20 <PyObject_RichCompareBool@plt>
     ea8:	tbz	w0, #31, e60 <PyModule_AddObject@plt+0x2e0>
     eac:	ldp	x19, x20, [sp, #16]
     eb0:	mov	w0, #0xffffffff            	// #-1
     eb4:	ldp	x21, x22, [sp, #32]
     eb8:	ldp	x23, x24, [sp, #48]
     ebc:	ldp	x29, x30, [sp], #64
     ec0:	ret
     ec4:	mov	w0, #0x0                   	// #0
     ec8:	ldp	x19, x20, [sp, #16]
     ecc:	ldp	x21, x22, [sp, #32]
     ed0:	ldp	x23, x24, [sp, #48]
     ed4:	ldp	x29, x30, [sp], #64
     ed8:	ret
     edc:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
     ee0:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     ee4:	add	x1, x1, #0xa58
     ee8:	ldr	x0, [x0, #4024]
     eec:	ldr	x0, [x0]
     ef0:	bl	b10 <PyErr_SetString@plt>
     ef4:	mov	w0, #0xffffffff            	// #-1
     ef8:	ldp	x19, x20, [sp, #16]
     efc:	ldp	x21, x22, [sp, #32]
     f00:	ldp	x23, x24, [sp, #48]
     f04:	ldp	x29, x30, [sp], #64
     f08:	ret
     f0c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
     f10:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     f14:	add	x1, x1, #0xa40
     f18:	ldr	x0, [x0, #4056]
     f1c:	ldr	x0, [x0]
     f20:	bl	b10 <PyErr_SetString@plt>
     f24:	mov	w0, #0xffffffff            	// #-1
     f28:	b	eb8 <PyModule_AddObject@plt+0x338>
     f2c:	nop
     f30:	stp	x29, x30, [sp, #-64]!
     f34:	mov	x29, sp
     f38:	stp	x21, x22, [sp, #32]
     f3c:	ldr	x22, [x0, #16]
     f40:	cmp	x22, x1
     f44:	b.le	1058 <PyModule_AddObject@plt+0x4d8>
     f48:	stp	x19, x20, [sp, #16]
     f4c:	mov	x21, x1
     f50:	cmp	x1, x22, asr #1
     f54:	stp	x23, x24, [sp, #48]
     f58:	mov	x24, x0
     f5c:	asr	x23, x22, #1
     f60:	ldr	x3, [x0, #24]
     f64:	b.ge	1050 <PyModule_AddObject@plt+0x4d0>  // b.tcont
     f68:	mov	x20, x1
     f6c:	b	f88 <PyModule_AddObject@plt+0x408>
     f70:	ldr	x1, [x3, x20, lsl #3]
     f74:	str	x1, [x4]
     f78:	str	x0, [x3, x20, lsl #3]
     f7c:	cmp	x19, x23
     f80:	mov	x20, x19
     f84:	b.ge	fe8 <PyModule_AddObject@plt+0x468>  // b.tcont
     f88:	lsl	x2, x20, #1
     f8c:	add	x19, x2, #0x1
     f90:	add	x2, x2, #0x2
     f94:	cmp	x2, x22
     f98:	add	x4, x3, x19, lsl #3
     f9c:	ldr	x0, [x3, x19, lsl #3]
     fa0:	b.ge	f70 <PyModule_AddObject@plt+0x3f0>  // b.tcont
     fa4:	ldr	x1, [x3, x2, lsl #3]
     fa8:	mov	w2, #0x0                   	// #0
     fac:	bl	b20 <PyObject_RichCompareBool@plt>
     fb0:	tbnz	w0, #31, 1008 <PyModule_AddObject@plt+0x488>
     fb4:	ldp	x1, x3, [x24, #16]
     fb8:	eor	w0, w0, #0x1
     fbc:	add	x19, x19, x0
     fc0:	cmp	x1, x22
     fc4:	b.ne	1020 <PyModule_AddObject@plt+0x4a0>  // b.any
     fc8:	add	x4, x3, x19, lsl #3
     fcc:	cmp	x19, x23
     fd0:	ldr	x1, [x3, x20, lsl #3]
     fd4:	ldr	x0, [x3, x19, lsl #3]
     fd8:	str	x1, [x4]
     fdc:	str	x0, [x3, x20, lsl #3]
     fe0:	mov	x20, x19
     fe4:	b.lt	f88 <PyModule_AddObject@plt+0x408>  // b.tstop
     fe8:	mov	x2, x19
     fec:	mov	x1, x21
     ff0:	mov	x0, x24
     ff4:	ldp	x19, x20, [sp, #16]
     ff8:	ldp	x21, x22, [sp, #32]
     ffc:	ldp	x23, x24, [sp, #48]
    1000:	ldp	x29, x30, [sp], #64
    1004:	b	e20 <PyModule_AddObject@plt+0x2a0>
    1008:	ldp	x19, x20, [sp, #16]
    100c:	ldp	x23, x24, [sp, #48]
    1010:	mov	w0, #0xffffffff            	// #-1
    1014:	ldp	x21, x22, [sp, #32]
    1018:	ldp	x29, x30, [sp], #64
    101c:	ret
    1020:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    1024:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1028:	add	x1, x1, #0xa58
    102c:	ldr	x0, [x0, #4024]
    1030:	ldr	x0, [x0]
    1034:	bl	b10 <PyErr_SetString@plt>
    1038:	mov	w0, #0xffffffff            	// #-1
    103c:	ldp	x19, x20, [sp, #16]
    1040:	ldp	x21, x22, [sp, #32]
    1044:	ldp	x23, x24, [sp, #48]
    1048:	ldp	x29, x30, [sp], #64
    104c:	ret
    1050:	mov	x19, x1
    1054:	b	fe8 <PyModule_AddObject@plt+0x468>
    1058:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    105c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1060:	add	x1, x1, #0xa40
    1064:	ldr	x0, [x0, #4056]
    1068:	ldr	x0, [x0]
    106c:	bl	b10 <PyErr_SetString@plt>
    1070:	b	1010 <PyModule_AddObject@plt+0x490>
    1074:	nop
    1078:	stp	x29, x30, [sp, #-48]!
    107c:	mov	x29, sp
    1080:	ldr	x0, [x1, #8]
    1084:	stp	x19, x20, [sp, #16]
    1088:	ldr	x0, [x0, #168]
    108c:	tbz	w0, #25, 1180 <PyModule_AddObject@plt+0x600>
    1090:	ldr	x20, [x1, #16]
    1094:	mov	x19, x1
    1098:	cbz	x20, 1134 <PyModule_AddObject@plt+0x5b4>
    109c:	ldr	x4, [x19, #24]
    10a0:	str	x21, [sp, #32]
    10a4:	mov	x2, x20
    10a8:	sub	x1, x20, #0x1
    10ac:	mov	x0, x19
    10b0:	mov	x3, #0x0                   	// #0
    10b4:	add	x4, x4, x20, lsl #3
    10b8:	ldur	x21, [x4, #-8]
    10bc:	ldr	x4, [x21]
    10c0:	add	x4, x4, #0x1
    10c4:	str	x4, [x21]
    10c8:	bl	af0 <PyList_SetSlice@plt>
    10cc:	cbnz	w0, 115c <PyModule_AddObject@plt+0x5dc>
    10d0:	cmp	x20, #0x1
    10d4:	mov	x20, x21
    10d8:	b.eq	10f8 <PyModule_AddObject@plt+0x578>  // b.none
    10dc:	ldr	x2, [x19, #24]
    10e0:	mov	x0, x19
    10e4:	mov	x1, #0x0                   	// #0
    10e8:	ldr	x20, [x2]
    10ec:	str	x21, [x2]
    10f0:	bl	c68 <PyModule_AddObject@plt+0xe8>
    10f4:	cbnz	w0, 110c <PyModule_AddObject@plt+0x58c>
    10f8:	ldr	x21, [sp, #32]
    10fc:	mov	x0, x20
    1100:	ldp	x19, x20, [sp, #16]
    1104:	ldp	x29, x30, [sp], #48
    1108:	ret
    110c:	ldr	x0, [x20]
    1110:	sub	x0, x0, #0x1
    1114:	str	x0, [x20]
    1118:	cbz	x0, 11a0 <PyModule_AddObject@plt+0x620>
    111c:	mov	x20, #0x0                   	// #0
    1120:	mov	x0, x20
    1124:	ldp	x19, x20, [sp, #16]
    1128:	ldr	x21, [sp, #32]
    112c:	ldp	x29, x30, [sp], #48
    1130:	ret
    1134:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    1138:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    113c:	add	x1, x1, #0xa40
    1140:	ldr	x0, [x0, #4056]
    1144:	ldr	x0, [x0]
    1148:	bl	b10 <PyErr_SetString@plt>
    114c:	mov	x0, x20
    1150:	ldp	x19, x20, [sp, #16]
    1154:	ldp	x29, x30, [sp], #48
    1158:	ret
    115c:	ldr	x0, [x21]
    1160:	sub	x0, x0, #0x1
    1164:	str	x0, [x21]
    1168:	cbnz	x0, 111c <PyModule_AddObject@plt+0x59c>
    116c:	mov	x0, x21
    1170:	mov	x20, #0x0                   	// #0
    1174:	bl	b00 <_Py_Dealloc@plt>
    1178:	ldr	x21, [sp, #32]
    117c:	b	10fc <PyModule_AddObject@plt+0x57c>
    1180:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    1184:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1188:	mov	x20, #0x0                   	// #0
    118c:	add	x1, x1, #0xa80
    1190:	ldr	x0, [x0, #4032]
    1194:	ldr	x0, [x0]
    1198:	bl	b10 <PyErr_SetString@plt>
    119c:	b	10fc <PyModule_AddObject@plt+0x57c>
    11a0:	mov	x0, x20
    11a4:	mov	x20, #0x0                   	// #0
    11a8:	bl	b00 <_Py_Dealloc@plt>
    11ac:	ldr	x21, [sp, #32]
    11b0:	b	10fc <PyModule_AddObject@plt+0x57c>
    11b4:	nop
    11b8:	stp	x29, x30, [sp, #-64]!
    11bc:	mov	x29, sp
    11c0:	ldr	x0, [x1, #8]
    11c4:	ldr	x0, [x0, #168]
    11c8:	tbz	w0, #25, 12e4 <PyModule_AddObject@plt+0x764>
    11cc:	stp	x19, x20, [sp, #16]
    11d0:	mov	x19, x1
    11d4:	ldr	x1, [x1, #16]
    11d8:	cmp	x1, #0x9c4
    11dc:	asr	x20, x1, #1
    11e0:	b.gt	1240 <PyModule_AddObject@plt+0x6c0>
    11e4:	subs	x20, x20, #0x1
    11e8:	b.pl	11f8 <PyModule_AddObject@plt+0x678>  // b.nfrst
    11ec:	b	121c <PyModule_AddObject@plt+0x69c>
    11f0:	cmn	x20, #0x1
    11f4:	b.eq	121c <PyModule_AddObject@plt+0x69c>  // b.none
    11f8:	mov	x1, x20
    11fc:	mov	x0, x19
    1200:	sub	x20, x20, #0x1
    1204:	bl	f30 <PyModule_AddObject@plt+0x3b0>
    1208:	cbz	w0, 11f0 <PyModule_AddObject@plt+0x670>
    120c:	ldp	x19, x20, [sp, #16]
    1210:	mov	x0, #0x0                   	// #0
    1214:	ldp	x29, x30, [sp], #64
    1218:	ret
    121c:	adrp	x1, 13000 <PyInit__heapq@@Base+0x11630>
    1220:	ldp	x19, x20, [sp, #16]
    1224:	ldr	x1, [x1, #4048]
    1228:	mov	x0, x1
    122c:	ldr	x2, [x1]
    1230:	add	x2, x2, #0x1
    1234:	str	x2, [x1]
    1238:	ldp	x29, x30, [sp], #64
    123c:	ret
    1240:	add	x0, x20, #0x1
    1244:	stp	x21, x22, [sp, #32]
    1248:	mov	w22, #0x0                   	// #0
    124c:	stp	x23, x24, [sp, #48]
    1250:	asr	x0, x0, #1
    1254:	add	w22, w22, #0x1
    1258:	cmp	x0, #0x1
    125c:	b.ne	1250 <PyModule_AddObject@plt+0x6d0>  // b.any
    1260:	lsl	x22, x0, x22
    1264:	sub	x24, x22, #0x2
    1268:	cmp	x24, x1, asr #2
    126c:	asr	x1, x1, #2
    1270:	b.lt	12b0 <PyModule_AddObject@plt+0x730>  // b.tstop
    1274:	sub	x23, x1, #0x1
    1278:	mov	x21, x24
    127c:	b	1288 <PyModule_AddObject@plt+0x708>
    1280:	tbz	w21, #0, 12a4 <PyModule_AddObject@plt+0x724>
    1284:	asr	x21, x21, #1
    1288:	mov	x1, x21
    128c:	mov	x0, x19
    1290:	bl	f30 <PyModule_AddObject@plt+0x3b0>
    1294:	cbz	w0, 1280 <PyModule_AddObject@plt+0x700>
    1298:	ldp	x21, x22, [sp, #32]
    129c:	ldp	x23, x24, [sp, #48]
    12a0:	b	120c <PyModule_AddObject@plt+0x68c>
    12a4:	sub	x24, x24, #0x1
    12a8:	cmp	x24, x23
    12ac:	b.ne	1278 <PyModule_AddObject@plt+0x6f8>  // b.any
    12b0:	sub	x22, x22, #0x1
    12b4:	sub	x20, x20, #0x1
    12b8:	cmp	x22, x20
    12bc:	b.gt	1310 <PyModule_AddObject@plt+0x790>
    12c0:	mov	x21, x20
    12c4:	b	12d0 <PyModule_AddObject@plt+0x750>
    12c8:	tbz	w21, #0, 1304 <PyModule_AddObject@plt+0x784>
    12cc:	asr	x21, x21, #1
    12d0:	mov	x1, x21
    12d4:	mov	x0, x19
    12d8:	bl	f30 <PyModule_AddObject@plt+0x3b0>
    12dc:	cbz	w0, 12c8 <PyModule_AddObject@plt+0x748>
    12e0:	b	1298 <PyModule_AddObject@plt+0x718>
    12e4:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    12e8:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    12ec:	add	x1, x1, #0xa80
    12f0:	ldr	x0, [x0, #4032]
    12f4:	ldr	x0, [x0]
    12f8:	bl	b10 <PyErr_SetString@plt>
    12fc:	mov	x0, #0x0                   	// #0
    1300:	b	1214 <PyModule_AddObject@plt+0x694>
    1304:	sub	x20, x20, #0x1
    1308:	cmp	x22, x20
    130c:	b.le	12c0 <PyModule_AddObject@plt+0x740>
    1310:	adrp	x1, 13000 <PyInit__heapq@@Base+0x11630>
    1314:	ldp	x19, x20, [sp, #16]
    1318:	ldr	x1, [x1, #4048]
    131c:	ldp	x21, x22, [sp, #32]
    1320:	mov	x0, x1
    1324:	ldr	x2, [x1]
    1328:	ldp	x23, x24, [sp, #48]
    132c:	add	x2, x2, #0x1
    1330:	str	x2, [x1]
    1334:	b	1214 <PyModule_AddObject@plt+0x694>
    1338:	stp	x29, x30, [sp, #-32]!
    133c:	cmp	x2, #0x2
    1340:	mov	x29, sp
    1344:	str	x19, [sp, #16]
    1348:	mov	x19, x1
    134c:	b.eq	136c <PyModule_AddObject@plt+0x7ec>  // b.none
    1350:	mov	x1, x2
    1354:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1358:	mov	x3, #0x2                   	// #2
    135c:	add	x0, x0, #0xaa0
    1360:	mov	x2, x3
    1364:	bl	b50 <_PyArg_CheckPositional@plt>
    1368:	cbz	w0, 13c8 <PyModule_AddObject@plt+0x848>
    136c:	ldp	x0, x2, [x19]
    1370:	ldr	x1, [x0, #8]
    1374:	ldr	x1, [x1, #168]
    1378:	tbz	w1, #25, 13dc <PyModule_AddObject@plt+0x85c>
    137c:	ldr	x1, [x0, #16]
    1380:	cbz	x1, 13fc <PyModule_AddObject@plt+0x87c>
    1384:	ldr	x4, [x0, #24]
    1388:	mov	x1, #0x0                   	// #0
    138c:	ldr	x3, [x2]
    1390:	ldr	x19, [x4]
    1394:	add	x3, x3, #0x1
    1398:	str	x3, [x2]
    139c:	str	x2, [x4]
    13a0:	bl	f30 <PyModule_AddObject@plt+0x3b0>
    13a4:	cbnz	w0, 13b8 <PyModule_AddObject@plt+0x838>
    13a8:	mov	x0, x19
    13ac:	ldr	x19, [sp, #16]
    13b0:	ldp	x29, x30, [sp], #32
    13b4:	ret
    13b8:	ldr	x0, [x19]
    13bc:	sub	x0, x0, #0x1
    13c0:	str	x0, [x19]
    13c4:	cbz	x0, 141c <PyModule_AddObject@plt+0x89c>
    13c8:	mov	x19, #0x0                   	// #0
    13cc:	mov	x0, x19
    13d0:	ldr	x19, [sp, #16]
    13d4:	ldp	x29, x30, [sp], #32
    13d8:	ret
    13dc:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    13e0:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    13e4:	mov	x19, #0x0                   	// #0
    13e8:	add	x1, x1, #0xa80
    13ec:	ldr	x0, [x0, #4032]
    13f0:	ldr	x0, [x0]
    13f4:	bl	b10 <PyErr_SetString@plt>
    13f8:	b	13a8 <PyModule_AddObject@plt+0x828>
    13fc:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    1400:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1404:	mov	x19, #0x0                   	// #0
    1408:	add	x1, x1, #0xa40
    140c:	ldr	x0, [x0, #4056]
    1410:	ldr	x0, [x0]
    1414:	bl	b10 <PyErr_SetString@plt>
    1418:	b	13a8 <PyModule_AddObject@plt+0x828>
    141c:	mov	x0, x19
    1420:	mov	x19, #0x0                   	// #0
    1424:	bl	b00 <_Py_Dealloc@plt>
    1428:	b	13a8 <PyModule_AddObject@plt+0x828>
    142c:	nop
    1430:	stp	x29, x30, [sp, #-32]!
    1434:	cmp	x2, #0x2
    1438:	mov	x29, sp
    143c:	stp	x19, x20, [sp, #16]
    1440:	mov	x19, x1
    1444:	b.eq	1464 <PyModule_AddObject@plt+0x8e4>  // b.none
    1448:	mov	x1, x2
    144c:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1450:	mov	x3, #0x2                   	// #2
    1454:	add	x0, x0, #0xab0
    1458:	mov	x2, x3
    145c:	bl	b50 <_PyArg_CheckPositional@plt>
    1460:	cbz	w0, 150c <PyModule_AddObject@plt+0x98c>
    1464:	ldp	x20, x19, [x19]
    1468:	ldr	x0, [x20, #8]
    146c:	ldr	x0, [x0, #168]
    1470:	tbz	w0, #25, 1520 <PyModule_AddObject@plt+0x9a0>
    1474:	ldr	x0, [x20, #16]
    1478:	cbnz	x0, 1498 <PyModule_AddObject@plt+0x918>
    147c:	ldr	x0, [x19]
    1480:	add	x0, x0, #0x1
    1484:	str	x0, [x19]
    1488:	mov	x0, x19
    148c:	ldp	x19, x20, [sp, #16]
    1490:	ldp	x29, x30, [sp], #32
    1494:	ret
    1498:	ldr	x0, [x20, #24]
    149c:	mov	x1, x19
    14a0:	mov	w2, #0x0                   	// #0
    14a4:	ldr	x0, [x0]
    14a8:	bl	b20 <PyObject_RichCompareBool@plt>
    14ac:	cmp	w0, #0x0
    14b0:	b.lt	150c <PyModule_AddObject@plt+0x98c>  // b.tstop
    14b4:	b.eq	147c <PyModule_AddObject@plt+0x8fc>  // b.none
    14b8:	ldr	x0, [x20, #16]
    14bc:	cbz	x0, 1540 <PyModule_AddObject@plt+0x9c0>
    14c0:	ldr	x3, [x20, #24]
    14c4:	mov	x0, x20
    14c8:	ldr	x2, [x19]
    14cc:	mov	x1, #0x0                   	// #0
    14d0:	ldr	x4, [x3]
    14d4:	add	x2, x2, #0x1
    14d8:	str	x2, [x19]
    14dc:	str	x19, [x3]
    14e0:	mov	x19, x4
    14e4:	bl	f30 <PyModule_AddObject@plt+0x3b0>
    14e8:	cbz	w0, 1488 <PyModule_AddObject@plt+0x908>
    14ec:	ldr	x0, [x19]
    14f0:	sub	x0, x0, #0x1
    14f4:	str	x0, [x19]
    14f8:	cbnz	x0, 150c <PyModule_AddObject@plt+0x98c>
    14fc:	mov	x0, x19
    1500:	mov	x19, #0x0                   	// #0
    1504:	bl	b00 <_Py_Dealloc@plt>
    1508:	b	1488 <PyModule_AddObject@plt+0x908>
    150c:	mov	x19, #0x0                   	// #0
    1510:	mov	x0, x19
    1514:	ldp	x19, x20, [sp, #16]
    1518:	ldp	x29, x30, [sp], #32
    151c:	ret
    1520:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    1524:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1528:	mov	x19, #0x0                   	// #0
    152c:	add	x1, x1, #0xa80
    1530:	ldr	x0, [x0, #4032]
    1534:	ldr	x0, [x0]
    1538:	bl	b10 <PyErr_SetString@plt>
    153c:	b	1488 <PyModule_AddObject@plt+0x908>
    1540:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    1544:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1548:	mov	x19, #0x0                   	// #0
    154c:	add	x1, x1, #0xa40
    1550:	ldr	x0, [x0, #4056]
    1554:	ldr	x0, [x0]
    1558:	bl	b10 <PyErr_SetString@plt>
    155c:	b	1488 <PyModule_AddObject@plt+0x908>
    1560:	stp	x29, x30, [sp, #-32]!
    1564:	cmp	x2, #0x2
    1568:	mov	x29, sp
    156c:	stp	x19, x20, [sp, #16]
    1570:	mov	x19, x1
    1574:	b.eq	1594 <PyModule_AddObject@plt+0xa14>  // b.none
    1578:	mov	x1, x2
    157c:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1580:	mov	x3, #0x2                   	// #2
    1584:	add	x0, x0, #0xac0
    1588:	mov	x2, x3
    158c:	bl	b50 <_PyArg_CheckPositional@plt>
    1590:	cbz	w0, 1604 <PyModule_AddObject@plt+0xa84>
    1594:	ldp	x20, x1, [x19]
    1598:	ldr	x0, [x20, #8]
    159c:	ldr	x0, [x0, #168]
    15a0:	tbz	w0, #25, 15ec <PyModule_AddObject@plt+0xa6c>
    15a4:	mov	x0, x20
    15a8:	bl	b30 <PyList_Append@plt>
    15ac:	cbnz	w0, 1604 <PyModule_AddObject@plt+0xa84>
    15b0:	ldr	x2, [x20, #16]
    15b4:	mov	x0, x20
    15b8:	mov	x1, #0x0                   	// #0
    15bc:	sub	x2, x2, #0x1
    15c0:	bl	e20 <PyModule_AddObject@plt+0x2a0>
    15c4:	cbnz	w0, 1604 <PyModule_AddObject@plt+0xa84>
    15c8:	adrp	x1, 13000 <PyInit__heapq@@Base+0x11630>
    15cc:	ldp	x19, x20, [sp, #16]
    15d0:	ldr	x1, [x1, #4048]
    15d4:	mov	x0, x1
    15d8:	ldr	x2, [x1]
    15dc:	add	x2, x2, #0x1
    15e0:	str	x2, [x1]
    15e4:	ldp	x29, x30, [sp], #32
    15e8:	ret
    15ec:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    15f0:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    15f4:	add	x1, x1, #0xa80
    15f8:	ldr	x0, [x0, #4032]
    15fc:	ldr	x0, [x0]
    1600:	bl	b10 <PyErr_SetString@plt>
    1604:	mov	x0, #0x0                   	// #0
    1608:	ldp	x19, x20, [sp, #16]
    160c:	ldp	x29, x30, [sp], #32
    1610:	ret
    1614:	nop
    1618:	stp	x29, x30, [sp, #-32]!
    161c:	cmp	x2, #0x2
    1620:	mov	x29, sp
    1624:	str	x19, [sp, #16]
    1628:	mov	x19, x1
    162c:	b.eq	164c <PyModule_AddObject@plt+0xacc>  // b.none
    1630:	mov	x1, x2
    1634:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1638:	mov	x3, #0x2                   	// #2
    163c:	add	x0, x0, #0xad0
    1640:	mov	x2, x3
    1644:	bl	b50 <_PyArg_CheckPositional@plt>
    1648:	cbz	w0, 16a8 <PyModule_AddObject@plt+0xb28>
    164c:	ldp	x0, x2, [x19]
    1650:	ldr	x1, [x0, #8]
    1654:	ldr	x1, [x1, #168]
    1658:	tbz	w1, #25, 16bc <PyModule_AddObject@plt+0xb3c>
    165c:	ldr	x1, [x0, #16]
    1660:	cbz	x1, 16dc <PyModule_AddObject@plt+0xb5c>
    1664:	ldr	x4, [x0, #24]
    1668:	mov	x1, #0x0                   	// #0
    166c:	ldr	x3, [x2]
    1670:	ldr	x19, [x4]
    1674:	add	x3, x3, #0x1
    1678:	str	x3, [x2]
    167c:	str	x2, [x4]
    1680:	bl	c68 <PyModule_AddObject@plt+0xe8>
    1684:	cbnz	w0, 1698 <PyModule_AddObject@plt+0xb18>
    1688:	mov	x0, x19
    168c:	ldr	x19, [sp, #16]
    1690:	ldp	x29, x30, [sp], #32
    1694:	ret
    1698:	ldr	x0, [x19]
    169c:	sub	x0, x0, #0x1
    16a0:	str	x0, [x19]
    16a4:	cbz	x0, 16fc <PyModule_AddObject@plt+0xb7c>
    16a8:	mov	x19, #0x0                   	// #0
    16ac:	mov	x0, x19
    16b0:	ldr	x19, [sp, #16]
    16b4:	ldp	x29, x30, [sp], #32
    16b8:	ret
    16bc:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    16c0:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    16c4:	mov	x19, #0x0                   	// #0
    16c8:	add	x1, x1, #0xa80
    16cc:	ldr	x0, [x0, #4032]
    16d0:	ldr	x0, [x0]
    16d4:	bl	b10 <PyErr_SetString@plt>
    16d8:	b	1688 <PyModule_AddObject@plt+0xb08>
    16dc:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    16e0:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    16e4:	mov	x19, #0x0                   	// #0
    16e8:	add	x1, x1, #0xa40
    16ec:	ldr	x0, [x0, #4056]
    16f0:	ldr	x0, [x0]
    16f4:	bl	b10 <PyErr_SetString@plt>
    16f8:	b	1688 <PyModule_AddObject@plt+0xb08>
    16fc:	mov	x0, x19
    1700:	mov	x19, #0x0                   	// #0
    1704:	bl	b00 <_Py_Dealloc@plt>
    1708:	b	1688 <PyModule_AddObject@plt+0xb08>
    170c:	nop
    1710:	stp	x29, x30, [sp, #-64]!
    1714:	mov	x29, sp
    1718:	ldr	x0, [x1, #8]
    171c:	ldr	x0, [x0, #168]
    1720:	tbz	w0, #25, 183c <PyModule_AddObject@plt+0xcbc>
    1724:	stp	x19, x20, [sp, #16]
    1728:	mov	x19, x1
    172c:	ldr	x1, [x1, #16]
    1730:	cmp	x1, #0x9c4
    1734:	asr	x20, x1, #1
    1738:	b.gt	1798 <PyModule_AddObject@plt+0xc18>
    173c:	subs	x20, x20, #0x1
    1740:	b.pl	1750 <PyModule_AddObject@plt+0xbd0>  // b.nfrst
    1744:	b	1774 <PyModule_AddObject@plt+0xbf4>
    1748:	cmn	x20, #0x1
    174c:	b.eq	1774 <PyModule_AddObject@plt+0xbf4>  // b.none
    1750:	mov	x1, x20
    1754:	mov	x0, x19
    1758:	sub	x20, x20, #0x1
    175c:	bl	c68 <PyModule_AddObject@plt+0xe8>
    1760:	cbz	w0, 1748 <PyModule_AddObject@plt+0xbc8>
    1764:	ldp	x19, x20, [sp, #16]
    1768:	mov	x0, #0x0                   	// #0
    176c:	ldp	x29, x30, [sp], #64
    1770:	ret
    1774:	adrp	x1, 13000 <PyInit__heapq@@Base+0x11630>
    1778:	ldp	x19, x20, [sp, #16]
    177c:	ldr	x1, [x1, #4048]
    1780:	mov	x0, x1
    1784:	ldr	x2, [x1]
    1788:	add	x2, x2, #0x1
    178c:	str	x2, [x1]
    1790:	ldp	x29, x30, [sp], #64
    1794:	ret
    1798:	add	x0, x20, #0x1
    179c:	stp	x21, x22, [sp, #32]
    17a0:	mov	w22, #0x0                   	// #0
    17a4:	stp	x23, x24, [sp, #48]
    17a8:	asr	x0, x0, #1
    17ac:	add	w22, w22, #0x1
    17b0:	cmp	x0, #0x1
    17b4:	b.ne	17a8 <PyModule_AddObject@plt+0xc28>  // b.any
    17b8:	lsl	x22, x0, x22
    17bc:	sub	x24, x22, #0x2
    17c0:	cmp	x24, x1, asr #2
    17c4:	asr	x1, x1, #2
    17c8:	b.lt	1808 <PyModule_AddObject@plt+0xc88>  // b.tstop
    17cc:	sub	x23, x1, #0x1
    17d0:	mov	x21, x24
    17d4:	b	17e0 <PyModule_AddObject@plt+0xc60>
    17d8:	tbz	w21, #0, 17fc <PyModule_AddObject@plt+0xc7c>
    17dc:	asr	x21, x21, #1
    17e0:	mov	x1, x21
    17e4:	mov	x0, x19
    17e8:	bl	c68 <PyModule_AddObject@plt+0xe8>
    17ec:	cbz	w0, 17d8 <PyModule_AddObject@plt+0xc58>
    17f0:	ldp	x21, x22, [sp, #32]
    17f4:	ldp	x23, x24, [sp, #48]
    17f8:	b	1764 <PyModule_AddObject@plt+0xbe4>
    17fc:	sub	x24, x24, #0x1
    1800:	cmp	x24, x23
    1804:	b.ne	17d0 <PyModule_AddObject@plt+0xc50>  // b.any
    1808:	sub	x22, x22, #0x1
    180c:	sub	x20, x20, #0x1
    1810:	cmp	x22, x20
    1814:	b.gt	1868 <PyModule_AddObject@plt+0xce8>
    1818:	mov	x21, x20
    181c:	b	1828 <PyModule_AddObject@plt+0xca8>
    1820:	tbz	w21, #0, 185c <PyModule_AddObject@plt+0xcdc>
    1824:	asr	x21, x21, #1
    1828:	mov	x1, x21
    182c:	mov	x0, x19
    1830:	bl	c68 <PyModule_AddObject@plt+0xe8>
    1834:	cbz	w0, 1820 <PyModule_AddObject@plt+0xca0>
    1838:	b	17f0 <PyModule_AddObject@plt+0xc70>
    183c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    1840:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1844:	add	x1, x1, #0xa80
    1848:	ldr	x0, [x0, #4032]
    184c:	ldr	x0, [x0]
    1850:	bl	b10 <PyErr_SetString@plt>
    1854:	mov	x0, #0x0                   	// #0
    1858:	b	176c <PyModule_AddObject@plt+0xbec>
    185c:	sub	x20, x20, #0x1
    1860:	cmp	x22, x20
    1864:	b.le	1818 <PyModule_AddObject@plt+0xc98>
    1868:	adrp	x1, 13000 <PyInit__heapq@@Base+0x11630>
    186c:	ldp	x19, x20, [sp, #16]
    1870:	ldr	x1, [x1, #4048]
    1874:	ldp	x21, x22, [sp, #32]
    1878:	mov	x0, x1
    187c:	ldr	x2, [x1]
    1880:	ldp	x23, x24, [sp, #48]
    1884:	add	x2, x2, #0x1
    1888:	str	x2, [x1]
    188c:	b	176c <PyModule_AddObject@plt+0xbec>
    1890:	stp	x29, x30, [sp, #-48]!
    1894:	mov	x29, sp
    1898:	ldr	x0, [x1, #8]
    189c:	stp	x19, x20, [sp, #16]
    18a0:	ldr	x0, [x0, #168]
    18a4:	tbz	w0, #25, 1998 <PyModule_AddObject@plt+0xe18>
    18a8:	ldr	x20, [x1, #16]
    18ac:	mov	x19, x1
    18b0:	cbz	x20, 194c <PyModule_AddObject@plt+0xdcc>
    18b4:	ldr	x4, [x19, #24]
    18b8:	str	x21, [sp, #32]
    18bc:	mov	x2, x20
    18c0:	sub	x1, x20, #0x1
    18c4:	mov	x0, x19
    18c8:	mov	x3, #0x0                   	// #0
    18cc:	add	x4, x4, x20, lsl #3
    18d0:	ldur	x21, [x4, #-8]
    18d4:	ldr	x4, [x21]
    18d8:	add	x4, x4, #0x1
    18dc:	str	x4, [x21]
    18e0:	bl	af0 <PyList_SetSlice@plt>
    18e4:	cbnz	w0, 1974 <PyModule_AddObject@plt+0xdf4>
    18e8:	cmp	x20, #0x1
    18ec:	mov	x20, x21
    18f0:	b.eq	1910 <PyModule_AddObject@plt+0xd90>  // b.none
    18f4:	ldr	x2, [x19, #24]
    18f8:	mov	x0, x19
    18fc:	mov	x1, #0x0                   	// #0
    1900:	ldr	x20, [x2]
    1904:	str	x21, [x2]
    1908:	bl	f30 <PyModule_AddObject@plt+0x3b0>
    190c:	cbnz	w0, 1924 <PyModule_AddObject@plt+0xda4>
    1910:	ldr	x21, [sp, #32]
    1914:	mov	x0, x20
    1918:	ldp	x19, x20, [sp, #16]
    191c:	ldp	x29, x30, [sp], #48
    1920:	ret
    1924:	ldr	x0, [x20]
    1928:	sub	x0, x0, #0x1
    192c:	str	x0, [x20]
    1930:	cbz	x0, 19b8 <PyModule_AddObject@plt+0xe38>
    1934:	mov	x20, #0x0                   	// #0
    1938:	mov	x0, x20
    193c:	ldp	x19, x20, [sp, #16]
    1940:	ldr	x21, [sp, #32]
    1944:	ldp	x29, x30, [sp], #48
    1948:	ret
    194c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    1950:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1954:	add	x1, x1, #0xa40
    1958:	ldr	x0, [x0, #4056]
    195c:	ldr	x0, [x0]
    1960:	bl	b10 <PyErr_SetString@plt>
    1964:	mov	x0, x20
    1968:	ldp	x19, x20, [sp, #16]
    196c:	ldp	x29, x30, [sp], #48
    1970:	ret
    1974:	ldr	x0, [x21]
    1978:	sub	x0, x0, #0x1
    197c:	str	x0, [x21]
    1980:	cbnz	x0, 1934 <PyModule_AddObject@plt+0xdb4>
    1984:	mov	x0, x21
    1988:	mov	x20, #0x0                   	// #0
    198c:	bl	b00 <_Py_Dealloc@plt>
    1990:	ldr	x21, [sp, #32]
    1994:	b	1914 <PyModule_AddObject@plt+0xd94>
    1998:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11630>
    199c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    19a0:	mov	x20, #0x0                   	// #0
    19a4:	add	x1, x1, #0xa80
    19a8:	ldr	x0, [x0, #4032]
    19ac:	ldr	x0, [x0]
    19b0:	bl	b10 <PyErr_SetString@plt>
    19b4:	b	1914 <PyModule_AddObject@plt+0xd94>
    19b8:	mov	x0, x20
    19bc:	mov	x20, #0x0                   	// #0
    19c0:	bl	b00 <_Py_Dealloc@plt>
    19c4:	ldr	x21, [sp, #32]
    19c8:	b	1914 <PyModule_AddObject@plt+0xd94>
    19cc:	nop

00000000000019d0 <PyInit__heapq@@Base>:
    19d0:	stp	x29, x30, [sp, #-32]!
    19d4:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12630>
    19d8:	mov	w1, #0x3f5                 	// #1013
    19dc:	mov	x29, sp
    19e0:	add	x0, x0, #0x60
    19e4:	str	x19, [sp, #16]
    19e8:	bl	b60 <PyModule_Create2@plt>
    19ec:	mov	x19, x0
    19f0:	cbz	x0, 1a1c <PyInit__heapq@@Base+0x4c>
    19f4:	mov	x2, #0x0                   	// #0
    19f8:	mov	x1, #0x126f                	// #4719
    19fc:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1a00:	add	x0, x0, #0xb30
    1a04:	bl	b70 <PyUnicode_DecodeUTF8@plt>
    1a08:	mov	x2, x0
    1a0c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1a10:	mov	x0, x19
    1a14:	add	x1, x1, #0xae8
    1a18:	bl	b80 <PyModule_AddObject@plt>
    1a1c:	mov	x0, x19
    1a20:	ldr	x19, [sp, #16]
    1a24:	ldp	x29, x30, [sp], #32
    1a28:	ret

Disassembly of section .fini:

0000000000001a2c <.fini>:
    1a2c:	stp	x29, x30, [sp, #-16]!
    1a30:	mov	x29, sp
    1a34:	ldp	x29, x30, [sp], #16
    1a38:	ret
