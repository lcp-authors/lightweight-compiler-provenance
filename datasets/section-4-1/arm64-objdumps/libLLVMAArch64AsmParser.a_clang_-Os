In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMAArch64AsmParser.a_clang_-Os:

AArch64AsmParser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMInitializeAArch64AsmParser>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	str	x19, [sp, #16]
       8:	mov	x29, sp
       c:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
      10:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
      14:	add	x19, x19, #0x0
      18:	str	x19, [x0, #104]
      1c:	bl	0 <_ZN4llvm21getTheAArch64beTargetEv>
      20:	str	x19, [x0, #104]
      24:	bl	0 <_ZN4llvm17getTheARM64TargetEv>
      28:	str	x19, [x0, #104]
      2c:	bl	0 <_ZN4llvm20getTheARM64_32TargetEv>
      30:	str	x19, [x0, #104]
      34:	bl	0 <_ZN4llvm22getTheAArch64_32TargetEv>
      38:	str	x19, [x0, #104]
      3c:	ldr	x19, [sp, #16]
      40:	ldp	x29, x30, [sp], #32
      44:	ret

0000000000000048 <_ZN4llvm19RegisterMCAsmParserIN12_GLOBAL__N_116AArch64AsmParserEE9AllocatorERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE>:
      48:	sub	sp, sp, #0x60
      4c:	stp	x29, x30, [sp, #32]
      50:	str	x23, [sp, #48]
      54:	stp	x22, x21, [sp, #64]
      58:	stp	x20, x19, [sp, #80]
      5c:	add	x29, sp, #0x20
      60:	mov	x23, x0
      64:	mov	w0, #0xf8                  	// #248
      68:	mov	x21, x3
      6c:	mov	x22, x2
      70:	mov	x20, x1
      74:	bl	0 <_Znwm>
      78:	mov	x1, x21
      7c:	mov	x2, x23
      80:	mov	x3, x22
      84:	mov	x19, x0
      88:	bl	0 <_ZN4llvm17MCTargetAsmParserC2ERKNS_15MCTargetOptionsERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoE>
      8c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
      90:	add	x8, x8, #0x0
      94:	movi	v0.2d, #0x0
      98:	mov	x9, #0x1000000000          	// #68719476736
      9c:	mov	x0, x21
      a0:	str	x8, [x19]
      a4:	stp	q0, q0, [x19, #176]
      a8:	str	x9, [x19, #208]
      ac:	strh	wzr, [x19, #224]
      b0:	bl	0 <_ZNK4llvm15MCTargetOptions10getABINameEv>
      b4:	cmp	x1, #0x5
      b8:	mov	w8, wzr
      bc:	b.ne	e8 <_ZN4llvm19RegisterMCAsmParserIN12_GLOBAL__N_116AArch64AsmParserEE9AllocatorERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE+0xa0>  // b.any
      c0:	ldr	w8, [x0]
      c4:	ldrb	w9, [x0, #4]
      c8:	mov	w10, #0x6c69                	// #27753
      cc:	movk	w10, #0x3370, lsl #16
      d0:	mov	w11, #0x32                  	// #50
      d4:	eor	w8, w8, w10
      d8:	eor	w9, w9, w11
      dc:	orr	w8, w8, w9
      e0:	cmp	w8, #0x0
      e4:	cset	w8, eq  // eq = none
      e8:	mov	x0, x19
      ec:	mov	x1, x20
      f0:	strb	w8, [x19, #240]
      f4:	bl	0 <_ZN4llvm20MCAsmParserExtension10InitializeERNS_11MCAsmParserE>
      f8:	ldr	x0, [x19, #8]
      fc:	ldr	x8, [x0]
     100:	ldr	x8, [x8, #56]
     104:	blr	x8
     108:	ldr	x8, [x0, #16]
     10c:	cbnz	x8, 124 <_ZN4llvm19RegisterMCAsmParserIN12_GLOBAL__N_116AArch64AsmParserEE9AllocatorERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE+0xdc>
     110:	mov	x21, x0
     114:	mov	w0, #0x18                  	// #24
     118:	bl	0 <_Znwm>
     11c:	mov	x1, x21
     120:	bl	0 <_ZN4llvm21AArch64TargetStreamerC1ERNS_10MCStreamerE>
     124:	ldr	x8, [x20]
     128:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     12c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     130:	add	x1, x1, #0x0
     134:	ldr	x8, [x8, #24]
     138:	add	x3, x3, #0x0
     13c:	mov	w2, #0x6                   	// #6
     140:	mov	w4, #0x6                   	// #6
     144:	mov	x0, x20
     148:	blr	x8
     14c:	ldr	x8, [x20]
     150:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     154:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     158:	add	x1, x1, #0x0
     15c:	ldr	x8, [x8, #24]
     160:	add	x3, x3, #0x0
     164:	mov	w2, #0x5                   	// #5
     168:	mov	w4, #0x6                   	// #6
     16c:	mov	x0, x20
     170:	blr	x8
     174:	ldr	x8, [x20]
     178:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
     17c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     180:	add	x21, x21, #0x0
     184:	ldr	x8, [x8, #24]
     188:	add	x1, x1, #0x0
     18c:	mov	w2, #0x6                   	// #6
     190:	mov	w4, #0x6                   	// #6
     194:	mov	x0, x20
     198:	mov	x3, x21
     19c:	blr	x8
     1a0:	ldr	x8, [x20]
     1a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     1a8:	add	x1, x1, #0x0
     1ac:	mov	w2, #0x6                   	// #6
     1b0:	ldr	x8, [x8, #24]
     1b4:	mov	w4, #0x6                   	// #6
     1b8:	mov	x0, x20
     1bc:	mov	x3, x21
     1c0:	blr	x8
     1c4:	mov	x0, x19
     1c8:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
     1cc:	add	x0, x0, #0xb8
     1d0:	add	x8, sp, #0x8
     1d4:	bl	204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
     1d8:	ldr	x8, [sp, #24]
     1dc:	ldur	q0, [sp, #8]
     1e0:	mov	x0, x19
     1e4:	ldp	x22, x21, [sp, #64]
     1e8:	str	x8, [x19, #40]
     1ec:	stur	q0, [x19, #24]
     1f0:	ldp	x20, x19, [sp, #80]
     1f4:	ldr	x23, [sp, #48]
     1f8:	ldp	x29, x30, [sp, #32]
     1fc:	add	sp, sp, #0x60
     200:	ret

0000000000000204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>:
     204:	stp	xzr, xzr, [x8]
     208:	str	xzr, [x8, #16]
     20c:	ldr	x10, [x0, #8]
     210:	mov	x9, xzr
     214:	tbnz	x10, #60, 320 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x11c>
     218:	tbnz	x10, #61, 32c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x128>
     21c:	tbnz	x10, #62, 338 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x134>
     220:	tbnz	x10, #63, 344 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x140>
     224:	ldrb	w11, [x0, #16]
     228:	tbz	w11, #0, 234 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x30>
     22c:	orr	x9, x9, #0x200000000000000
     230:	str	x9, [x8]
     234:	tbz	x10, #54, 240 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3c>
     238:	orr	x9, x9, #0x400000000000000
     23c:	str	x9, [x8]
     240:	ldr	x11, [x0]
     244:	tbnz	x11, #43, 350 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x14c>
     248:	tbnz	x11, #51, 35c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x158>
     24c:	tbnz	x11, #42, 368 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x164>
     250:	tbnz	w11, #9, 374 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x170>
     254:	tbnz	w11, #22, 380 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x17c>
     258:	tbnz	x11, #49, 38c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x188>
     25c:	tbnz	x11, #61, 398 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x194>
     260:	tbnz	x11, #46, 3a4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1a0>
     264:	tbnz	w11, #25, 3b0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1ac>
     268:	tbnz	x10, #46, 3bc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1b8>
     26c:	tbnz	w11, #1, 3c8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1c4>
     270:	tbnz	w10, #27, 3d4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1d0>
     274:	tbnz	x11, #54, 3e0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1dc>
     278:	tbnz	x10, #44, 3ec <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1e8>
     27c:	tbnz	w11, #30, 3f8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1f4>
     280:	tbnz	x11, #63, 404 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x200>
     284:	tbnz	x11, #32, 410 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x20c>
     288:	tbnz	x11, #48, 41c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x218>
     28c:	tbnz	w11, #23, 428 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x224>
     290:	tbnz	w10, #30, 434 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x230>
     294:	tbnz	w10, #29, 440 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x23c>
     298:	tbnz	w10, #28, 44c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x248>
     29c:	tbnz	w11, #0, 458 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x254>
     2a0:	tbnz	w11, #27, 464 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x260>
     2a4:	tbnz	w11, #11, 470 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x26c>
     2a8:	tbnz	x11, #44, 47c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x278>
     2ac:	tbnz	x11, #60, 488 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x284>
     2b0:	tbnz	w10, #0, 494 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x290>
     2b4:	tbnz	x11, #35, 4a0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x29c>
     2b8:	tbnz	w11, #31, 4ac <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2a8>
     2bc:	tbnz	w10, #31, 4b8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2b4>
     2c0:	tbnz	x11, #36, 4c4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2c0>
     2c4:	tbnz	x10, #33, 4d0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2cc>
     2c8:	tbnz	x10, #34, 4dc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2d8>
     2cc:	tbnz	x10, #35, 4e8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2e4>
     2d0:	tbnz	x10, #38, 4f4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2f0>
     2d4:	tbnz	x10, #37, 500 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2fc>
     2d8:	tbnz	x10, #36, 50c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x308>
     2dc:	tbnz	x11, #62, 518 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x314>
     2e0:	tbnz	w11, #3, 524 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x320>
     2e4:	tbnz	x11, #33, 530 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x32c>
     2e8:	tbnz	w10, #26, 53c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x338>
     2ec:	tbnz	x11, #57, 548 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x344>
     2f0:	tbnz	w11, #12, 554 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x350>
     2f4:	tbnz	w11, #8, 560 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x35c>
     2f8:	tbnz	x11, #47, 56c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x368>
     2fc:	tbnz	x10, #45, 578 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x374>
     300:	tbnz	w11, #28, 584 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x380>
     304:	tbnz	x10, #47, 590 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x38c>
     308:	tbz	x11, #50, 59c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x398>
     30c:	tbnz	w11, #10, 5a8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3a4>
     310:	tbnz	x11, #52, 5b4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3b0>
     314:	tbnz	x11, #59, 5c0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3bc>
     318:	tbnz	x11, #53, 5cc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3c8>
     31c:	ret
     320:	mov	x9, #0x20000000000000      	// #9007199254740992
     324:	str	x9, [x8]
     328:	tbz	x10, #61, 21c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x18>
     32c:	orr	x9, x9, #0x40000000000000
     330:	str	x9, [x8]
     334:	tbz	x10, #62, 220 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1c>
     338:	orr	x9, x9, #0x80000000000000
     33c:	str	x9, [x8]
     340:	tbz	x10, #63, 224 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x20>
     344:	orr	x9, x9, #0x100000000000000
     348:	str	x9, [x8]
     34c:	b	224 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x20>
     350:	orr	x9, x9, #0x100000
     354:	str	x9, [x8]
     358:	tbz	x11, #51, 24c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x48>
     35c:	orr	x9, x9, #0x4000000
     360:	str	x9, [x8]
     364:	tbz	x11, #42, 250 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x4c>
     368:	orr	x9, x9, #0x80000
     36c:	str	x9, [x8]
     370:	tbz	w11, #9, 254 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x50>
     374:	orr	x9, x9, #0x20
     378:	str	x9, [x8]
     37c:	tbz	w11, #22, 258 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x54>
     380:	orr	x9, x9, #0x100
     384:	str	x9, [x8]
     388:	tbz	x11, #49, 25c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x58>
     38c:	orr	x9, x9, #0x2000000
     390:	str	x9, [x8]
     394:	tbz	x11, #61, 260 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x5c>
     398:	orr	x9, x9, #0x200000000
     39c:	str	x9, [x8]
     3a0:	tbz	x11, #46, 264 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x60>
     3a4:	orr	x9, x9, #0x400000
     3a8:	str	x9, [x8]
     3ac:	tbz	w11, #25, 268 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x64>
     3b0:	orr	x9, x9, #0x400
     3b4:	str	x9, [x8]
     3b8:	tbz	x10, #46, 26c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x68>
     3bc:	orr	x9, x9, #0x8000000000000
     3c0:	str	x9, [x8]
     3c4:	tbz	w11, #1, 270 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x6c>
     3c8:	orr	x9, x9, #0x2
     3cc:	str	x9, [x8]
     3d0:	tbz	w10, #27, 274 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x70>
     3d4:	orr	x9, x9, #0x4000000000
     3d8:	str	x9, [x8]
     3dc:	tbz	x11, #54, 278 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x74>
     3e0:	orr	x9, x9, #0x20000000
     3e4:	str	x9, [x8]
     3e8:	tbz	x10, #44, 27c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x78>
     3ec:	orr	x9, x9, #0x2000000000000
     3f0:	str	x9, [x8]
     3f4:	tbz	w11, #30, 280 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x7c>
     3f8:	orr	x9, x9, #0x2000
     3fc:	str	x9, [x8]
     400:	tbz	x11, #63, 284 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x80>
     404:	orr	x9, x9, #0x800000000
     408:	str	x9, [x8]
     40c:	tbz	x11, #32, 288 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x84>
     410:	orr	x9, x9, #0x8000
     414:	str	x9, [x8]
     418:	tbz	x11, #48, 28c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x88>
     41c:	orr	x9, x9, #0x1000000
     420:	str	x9, [x8]
     424:	tbz	w11, #23, 290 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x8c>
     428:	orr	x9, x9, #0x200
     42c:	str	x9, [x8]
     430:	tbz	w10, #30, 294 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x90>
     434:	orr	x9, x9, #0x20000000000
     438:	str	x9, [x8]
     43c:	tbz	w10, #29, 298 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x94>
     440:	orr	x9, x9, #0x10000000000
     444:	str	x9, [x8]
     448:	tbz	w10, #28, 29c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x98>
     44c:	orr	x9, x9, #0x8000000000
     450:	str	x9, [x8]
     454:	tbz	w11, #0, 2a0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x9c>
     458:	orr	x9, x9, #0x1
     45c:	str	x9, [x8]
     460:	tbz	w11, #27, 2a4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xa0>
     464:	orr	x9, x9, #0x800
     468:	str	x9, [x8]
     46c:	tbz	w11, #11, 2a8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xa4>
     470:	orr	x9, x9, #0x80
     474:	str	x9, [x8]
     478:	tbz	x11, #44, 2ac <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xa8>
     47c:	orr	x9, x9, #0x200000
     480:	str	x9, [x8]
     484:	tbz	x11, #60, 2b0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xac>
     488:	orr	x9, x9, #0x100000000
     48c:	str	x9, [x8]
     490:	tbz	w10, #0, 2b4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xb0>
     494:	orr	x9, x9, #0x1000000000
     498:	str	x9, [x8]
     49c:	tbz	x11, #35, 2b8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xb4>
     4a0:	orr	x9, x9, #0x20000
     4a4:	str	x9, [x8]
     4a8:	tbz	w11, #31, 2bc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xb8>
     4ac:	orr	x9, x9, #0x4000
     4b0:	str	x9, [x8]
     4b4:	tbz	w10, #31, 2c0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xbc>
     4b8:	orr	x9, x9, #0x40000000000
     4bc:	str	x9, [x8]
     4c0:	tbz	x11, #36, 2c4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xc0>
     4c4:	orr	x9, x9, #0x40000
     4c8:	str	x9, [x8]
     4cc:	tbz	x10, #33, 2c8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xc4>
     4d0:	orr	x9, x9, #0x80000000000
     4d4:	str	x9, [x8]
     4d8:	tbz	x10, #34, 2cc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xc8>
     4dc:	orr	x9, x9, #0x100000000000
     4e0:	str	x9, [x8]
     4e4:	tbz	x10, #35, 2d0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xcc>
     4e8:	orr	x9, x9, #0x200000000000
     4ec:	str	x9, [x8]
     4f0:	tbz	x10, #38, 2d4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xd0>
     4f4:	orr	x9, x9, #0x1000000000000
     4f8:	str	x9, [x8]
     4fc:	tbz	x10, #37, 2d8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xd4>
     500:	orr	x9, x9, #0x800000000000
     504:	str	x9, [x8]
     508:	tbz	x10, #36, 2dc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xd8>
     50c:	orr	x9, x9, #0x400000000000
     510:	str	x9, [x8]
     514:	tbz	x11, #62, 2e0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xdc>
     518:	orr	x9, x9, #0x400000000
     51c:	str	x9, [x8]
     520:	tbz	w11, #3, 2e4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xe0>
     524:	orr	x9, x9, #0x4
     528:	str	x9, [x8]
     52c:	tbz	x11, #33, 2e8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xe4>
     530:	orr	x9, x9, #0x10000
     534:	str	x9, [x8]
     538:	tbz	w10, #26, 2ec <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xe8>
     53c:	orr	x9, x9, #0x2000000000
     540:	str	x9, [x8]
     544:	tbz	x11, #57, 2f0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xec>
     548:	orr	x9, x9, #0x40000000
     54c:	str	x9, [x8]
     550:	tbz	w11, #12, 2f4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xf0>
     554:	orr	x9, x9, #0x10
     558:	str	x9, [x8]
     55c:	tbz	w11, #8, 2f8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xf4>
     560:	orr	x9, x9, #0x8
     564:	str	x9, [x8]
     568:	tbz	x11, #47, 2fc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xf8>
     56c:	orr	x9, x9, #0x800000
     570:	str	x9, [x8]
     574:	tbz	x10, #45, 300 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xfc>
     578:	orr	x9, x9, #0x4000000000000
     57c:	str	x9, [x8]
     580:	tbz	w11, #28, 304 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x100>
     584:	orr	x9, x9, #0x1000
     588:	str	x9, [x8]
     58c:	tbz	x10, #47, 308 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x104>
     590:	orr	x9, x9, #0x10000000000000
     594:	str	x9, [x8]
     598:	tbnz	x11, #50, 30c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x108>
     59c:	orr	x9, x9, #0x800000000000000
     5a0:	str	x9, [x8]
     5a4:	tbz	w11, #10, 310 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x10c>
     5a8:	orr	x9, x9, #0x40
     5ac:	str	x9, [x8]
     5b0:	tbz	x11, #52, 314 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x110>
     5b4:	orr	x9, x9, #0x8000000
     5b8:	str	x9, [x8]
     5bc:	tbz	x11, #59, 318 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x114>
     5c0:	orr	x9, x9, #0x80000000
     5c4:	str	x9, [x8]
     5c8:	tbz	x11, #53, 31c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x118>
     5cc:	orr	x9, x9, #0x10000000
     5d0:	str	x9, [x8]
     5d4:	ret

00000000000005d8 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev>:
     5d8:	stp	x29, x30, [sp, #-48]!
     5dc:	str	x21, [sp, #16]
     5e0:	stp	x20, x19, [sp, #32]
     5e4:	mov	x29, sp
     5e8:	ldr	w8, [x0, #204]
     5ec:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     5f0:	mov	x19, x0
     5f4:	add	x9, x9, #0x0
     5f8:	str	x9, [x0]
     5fc:	cbz	w8, 634 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x5c>
     600:	ldr	w8, [x19, #200]
     604:	cbz	w8, 634 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x5c>
     608:	mov	x20, xzr
     60c:	lsl	x21, x8, #3
     610:	ldr	x8, [x19, #192]
     614:	ldr	x0, [x8, x20]
     618:	cmn	x0, #0x8
     61c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     620:	b.eq	628 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x50>  // b.none
     624:	bl	0 <free>
     628:	add	x20, x20, #0x8
     62c:	cmp	x21, x20
     630:	b.ne	610 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x38>  // b.any
     634:	ldr	x0, [x19, #192]
     638:	bl	0 <free>
     63c:	mov	x0, x19
     640:	ldp	x20, x19, [sp, #32]
     644:	ldr	x21, [sp, #16]
     648:	ldp	x29, x30, [sp], #48
     64c:	b	0 <_ZN4llvm17MCTargetAsmParserD2Ev>

0000000000000650 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev>:
     650:	stp	x29, x30, [sp, #-48]!
     654:	str	x21, [sp, #16]
     658:	stp	x20, x19, [sp, #32]
     65c:	mov	x29, sp
     660:	ldr	w8, [x0, #204]
     664:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     668:	mov	x19, x0
     66c:	add	x9, x9, #0x0
     670:	str	x9, [x0]
     674:	cbz	w8, 6ac <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x5c>
     678:	ldr	w8, [x19, #200]
     67c:	cbz	w8, 6ac <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x5c>
     680:	mov	x20, xzr
     684:	lsl	x21, x8, #3
     688:	ldr	x8, [x19, #192]
     68c:	ldr	x0, [x8, x20]
     690:	cmn	x0, #0x8
     694:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     698:	b.eq	6a0 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x50>  // b.none
     69c:	bl	0 <free>
     6a0:	add	x20, x20, #0x8
     6a4:	cmp	x21, x20
     6a8:	b.ne	688 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x38>  // b.any
     6ac:	ldr	x0, [x19, #192]
     6b0:	bl	0 <free>
     6b4:	mov	x0, x19
     6b8:	bl	0 <_ZN4llvm17MCTargetAsmParserD2Ev>
     6bc:	mov	x0, x19
     6c0:	ldp	x20, x19, [sp, #32]
     6c4:	ldr	x21, [sp, #16]
     6c8:	ldp	x29, x30, [sp], #48
     6cc:	b	0 <_ZdlPv>

00000000000006d0 <_ZN12_GLOBAL__N_116AArch64AsmParser13ParseRegisterERjRN4llvm5SMLocES4_>:
     6d0:	stp	x29, x30, [sp, #-48]!
     6d4:	stp	x22, x21, [sp, #16]
     6d8:	stp	x20, x19, [sp, #32]
     6dc:	mov	x29, sp
     6e0:	mov	x21, x0
     6e4:	ldr	x0, [x0, #8]
     6e8:	mov	x19, x3
     6ec:	mov	x20, x2
     6f0:	mov	x22, x1
     6f4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     6f8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     6fc:	str	x0, [x20]
     700:	mov	x0, x21
     704:	mov	x1, x22
     708:	bl	6118 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
     70c:	ldr	x8, [x21, #8]
     710:	mov	w20, w0
     714:	mov	x0, x8
     718:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     71c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     720:	sub	x8, x0, #0x1
     724:	str	x8, [x19]
     728:	cmp	w20, #0x0
     72c:	ldp	x20, x19, [sp, #32]
     730:	ldp	x22, x21, [sp, #16]
     734:	cset	w0, ne  // ne = any
     738:	ldp	x29, x30, [sp], #48
     73c:	ret

0000000000000740 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE>:
     740:	stp	x29, x30, [sp, #-96]!
     744:	stp	x28, x27, [sp, #16]
     748:	stp	x26, x25, [sp, #32]
     74c:	stp	x24, x23, [sp, #48]
     750:	stp	x22, x21, [sp, #64]
     754:	stp	x20, x19, [sp, #80]
     758:	mov	x29, sp
     75c:	sub	sp, sp, #0x210
     760:	stp	x2, x3, [sp, #80]
     764:	mov	x28, x0
     768:	ldr	x8, [x28, #8]!
     76c:	mov	x27, x0
     770:	add	x23, sp, #0x50
     774:	add	x0, sp, #0x50
     778:	str	x8, [sp, #24]
     77c:	sub	x8, x29, #0x50
     780:	mov	x20, x5
     784:	mov	x26, x4
     788:	add	x22, x23, #0x8
     78c:	sub	x24, x29, #0x50
     790:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
     794:	ldur	q0, [x29, #-80]
     798:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     79c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     7a0:	add	x1, x1, #0x0
     7a4:	add	x3, x3, #0x0
     7a8:	add	x0, sp, #0x20
     7ac:	mov	w2, #0x3                   	// #3
     7b0:	mov	w4, #0x4                   	// #4
     7b4:	strb	wzr, [sp, #48]
     7b8:	str	q0, [sp, #32]
     7bc:	strb	wzr, [sp, #64]
     7c0:	bl	0 <LLVMInitializeAArch64AsmParser>
     7c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     7c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     7cc:	add	x1, x1, #0x0
     7d0:	add	x3, x3, #0x0
     7d4:	mov	w2, #0x3                   	// #3
     7d8:	mov	w4, #0x4                   	// #4
     7dc:	bl	0 <LLVMInitializeAArch64AsmParser>
     7e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     7e4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     7e8:	add	x1, x1, #0x0
     7ec:	add	x3, x3, #0x0
     7f0:	mov	w2, #0x3                   	// #3
     7f4:	mov	w4, #0x4                   	// #4
     7f8:	bl	0 <LLVMInitializeAArch64AsmParser>
     7fc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     800:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     804:	add	x1, x1, #0x0
     808:	add	x3, x3, #0x0
     80c:	mov	w2, #0x3                   	// #3
     810:	mov	w4, #0x4                   	// #4
     814:	bl	0 <LLVMInitializeAArch64AsmParser>
     818:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     81c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     820:	add	x1, x1, #0x0
     824:	add	x3, x3, #0x0
     828:	mov	w2, #0x3                   	// #3
     82c:	mov	w4, #0x4                   	// #4
     830:	bl	0 <LLVMInitializeAArch64AsmParser>
     834:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     838:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     83c:	add	x1, x1, #0x0
     840:	add	x3, x3, #0x0
     844:	mov	w2, #0x3                   	// #3
     848:	mov	w4, #0x4                   	// #4
     84c:	bl	0 <LLVMInitializeAArch64AsmParser>
     850:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     854:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     858:	add	x1, x1, #0x0
     85c:	add	x3, x3, #0x0
     860:	mov	w2, #0x3                   	// #3
     864:	mov	w4, #0x4                   	// #4
     868:	bl	0 <LLVMInitializeAArch64AsmParser>
     86c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     870:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     874:	add	x1, x1, #0x0
     878:	add	x3, x3, #0x0
     87c:	mov	w2, #0x3                   	// #3
     880:	mov	w4, #0x4                   	// #4
     884:	bl	0 <LLVMInitializeAArch64AsmParser>
     888:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     88c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     890:	add	x1, x1, #0x0
     894:	add	x3, x3, #0x0
     898:	mov	w2, #0x3                   	// #3
     89c:	mov	w4, #0x4                   	// #4
     8a0:	bl	0 <LLVMInitializeAArch64AsmParser>
     8a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     8a8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     8ac:	add	x1, x1, #0x0
     8b0:	add	x3, x3, #0x0
     8b4:	mov	w2, #0x3                   	// #3
     8b8:	mov	w4, #0x4                   	// #4
     8bc:	bl	0 <LLVMInitializeAArch64AsmParser>
     8c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     8c4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     8c8:	add	x1, x1, #0x0
     8cc:	add	x3, x3, #0x0
     8d0:	mov	w2, #0x3                   	// #3
     8d4:	mov	w4, #0x4                   	// #4
     8d8:	bl	0 <LLVMInitializeAArch64AsmParser>
     8dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     8e0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     8e4:	add	x1, x1, #0x0
     8e8:	add	x3, x3, #0x0
     8ec:	mov	w2, #0x3                   	// #3
     8f0:	mov	w4, #0x4                   	// #4
     8f4:	bl	0 <LLVMInitializeAArch64AsmParser>
     8f8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     8fc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     900:	add	x1, x1, #0x0
     904:	add	x3, x3, #0x0
     908:	mov	w2, #0x3                   	// #3
     90c:	mov	w4, #0x4                   	// #4
     910:	bl	0 <LLVMInitializeAArch64AsmParser>
     914:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     918:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     91c:	add	x1, x1, #0x0
     920:	add	x3, x3, #0x0
     924:	mov	w2, #0x3                   	// #3
     928:	mov	w4, #0x4                   	// #4
     92c:	bl	0 <LLVMInitializeAArch64AsmParser>
     930:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     934:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     938:	add	x1, x1, #0x0
     93c:	add	x3, x3, #0x0
     940:	mov	w2, #0x3                   	// #3
     944:	mov	w4, #0x4                   	// #4
     948:	bl	0 <LLVMInitializeAArch64AsmParser>
     94c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     950:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     954:	add	x1, x1, #0x0
     958:	add	x3, x3, #0x0
     95c:	mov	w2, #0x3                   	// #3
     960:	mov	w4, #0x4                   	// #4
     964:	bl	0 <LLVMInitializeAArch64AsmParser>
     968:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     96c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     970:	add	x1, x1, #0x0
     974:	add	x3, x3, #0x0
     978:	mov	w2, #0x3                   	// #3
     97c:	mov	w4, #0x4                   	// #4
     980:	bl	0 <LLVMInitializeAArch64AsmParser>
     984:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     988:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     98c:	add	x1, x1, #0x0
     990:	add	x3, x3, #0x0
     994:	mov	w2, #0x3                   	// #3
     998:	mov	w4, #0x4                   	// #4
     99c:	bl	0 <LLVMInitializeAArch64AsmParser>
     9a0:	ldrb	w8, [x0, #32]
     9a4:	add	x9, x0, #0x10
     9a8:	add	x10, x0, #0x18
     9ac:	ldur	x0, [x29, #-80]
     9b0:	cmp	w8, #0x0
     9b4:	csel	x8, x23, x9, eq  // eq = none
     9b8:	csel	x9, x22, x10, eq  // eq = none
     9bc:	ldr	x8, [x8]
     9c0:	ldr	x9, [x9]
     9c4:	add	x10, x24, #0x10
     9c8:	cmp	x0, x10
     9cc:	stp	x8, x9, [sp, #80]
     9d0:	b.eq	9d8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x298>  // b.none
     9d4:	bl	0 <_ZdlPv>
     9d8:	ldr	x0, [sp, #24]
     9dc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     9e0:	ldr	w8, [x0]
     9e4:	cmp	w8, #0x2
     9e8:	b.ne	a30 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2f0>  // b.any
     9ec:	ldr	x0, [sp, #24]
     9f0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     9f4:	ldr	w9, [x0]
     9f8:	mov	x8, x0
     9fc:	cmp	w9, #0x2
     a00:	b.ne	a0c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2cc>  // b.any
     a04:	ldp	x0, x1, [x8, #8]
     a08:	b	a14 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2d4>
     a0c:	mov	x0, x8
     a10:	bl	0 <LLVMInitializeAArch64AsmParser>
     a14:	cmp	x1, #0x4
     a18:	b.ne	a30 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2f0>  // b.any
     a1c:	ldr	w8, [x0]
     a20:	mov	w9, #0x722e                	// #29230
     a24:	movk	w9, #0x7165, lsl #16
     a28:	cmp	w8, w9
     a2c:	b.eq	d9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x65c>  // b.none
     a30:	ldp	x23, x24, [sp, #80]
     a34:	cbz	x24, a54 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x314>
     a38:	mov	w1, #0x2e                  	// #46
     a3c:	mov	x0, x23
     a40:	mov	x2, x24
     a44:	bl	0 <memchr>
     a48:	cbz	x0, a54 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x314>
     a4c:	sub	x22, x0, x23
     a50:	b	a58 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x318>
     a54:	mov	x22, #0xffffffffffffffff    	// #-1
     a58:	cmp	x24, x22
     a5c:	csel	x24, x24, x22, cc  // cc = lo, ul, last
     a60:	cmp	x24, #0x4
     a64:	b.eq	b30 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3f0>  // b.none
     a68:	cmp	x24, #0x3
     a6c:	b.eq	aac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x36c>  // b.none
     a70:	cmp	x24, #0x2
     a74:	b.ne	b48 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x408>  // b.any
     a78:	ldrh	w8, [x23]
     a7c:	mov	w9, #0x6369                	// #25449
     a80:	cmp	w8, w9
     a84:	b.eq	b04 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3c4>  // b.none
     a88:	ldrh	w8, [x23]
     a8c:	mov	w9, #0x6364                	// #25444
     a90:	cmp	w8, w9
     a94:	b.eq	b04 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3c4>  // b.none
     a98:	ldrh	w8, [x23]
     a9c:	mov	w9, #0x7461                	// #29793
     aa0:	cmp	w8, w9
     aa4:	b.ne	b48 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x408>  // b.any
     aa8:	b	b04 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3c4>
     aac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     ab0:	add	x1, x1, #0x0
     ab4:	mov	x0, x23
     ab8:	mov	x2, x24
     abc:	bl	0 <bcmp>
     ac0:	cbz	w0, b04 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3c4>
     ac4:	ldrh	w8, [x23]
     ac8:	ldrb	w9, [x23, #2]
     acc:	mov	w10, #0x7664                	// #30308
     ad0:	eor	w8, w8, w10
     ad4:	eor	w9, w9, #0x70
     ad8:	orr	w8, w8, w9
     adc:	tst	w8, #0xffff
     ae0:	b.eq	b04 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3c4>  // b.none
     ae4:	ldrh	w8, [x23]
     ae8:	ldrb	w9, [x23, #2]
     aec:	mov	w10, #0x7063                	// #28771
     af0:	eor	w8, w8, w10
     af4:	eor	w9, w9, #0x70
     af8:	orr	w8, w8, w9
     afc:	tst	w8, #0xffff
     b00:	b.ne	b48 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x408>  // b.any
     b04:	mov	w1, #0x2e                  	// #46
     b08:	mov	x0, x23
     b0c:	mov	x2, x24
     b10:	bl	0 <memchr>
     b14:	cbz	x0, c10 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x4d0>
     b18:	sub	x8, x0, x23
     b1c:	cmn	x8, #0x1
     b20:	b.eq	c10 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x4d0>  // b.none
     b24:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     b28:	add	x1, x1, #0x0
     b2c:	b	1b24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13e4>
     b30:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     b34:	add	x1, x1, #0x0
     b38:	mov	x0, x23
     b3c:	mov	x2, x24
     b40:	bl	0 <bcmp>
     b44:	cbz	w0, b04 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3c4>
     b48:	ldr	x0, [x28]
     b4c:	ldr	x8, [x0]
     b50:	ldr	x8, [x8, #48]
     b54:	blr	x8
     b58:	mov	x25, x0
     b5c:	mov	w0, #0x70                  	// #112
     b60:	bl	0 <_Znwm>
     b64:	mov	x8, x0
     b68:	mov	w9, #0x6                   	// #6
     b6c:	strb	wzr, [x8, #32]!
     b70:	str	w9, [x0, #48]
     b74:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b78:	add	x9, x9, #0x0
     b7c:	str	x9, [x0]
     b80:	str	x25, [x0, #104]
     b84:	stp	x26, x23, [x0, #64]
     b88:	str	w24, [x0, #80]
     b8c:	strb	wzr, [x0, #84]
     b90:	str	x26, [x0, #56]
     b94:	stp	x8, xzr, [x0, #16]
     b98:	str	x0, [sp, #32]
     b9c:	add	x1, sp, #0x20
     ba0:	mov	x0, x20
     ba4:	bl	0 <LLVMInitializeAArch64AsmParser>
     ba8:	ldr	x0, [sp, #32]
     bac:	cbz	x0, bbc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x47c>
     bb0:	ldr	x8, [x0]
     bb4:	ldr	x8, [x8, #8]
     bb8:	blr	x8
     bbc:	cmp	x24, #0x1
     bc0:	stp	x23, x24, [x27, #176]
     bc4:	b.ne	f68 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x828>  // b.any
     bc8:	cmn	x22, #0x1
     bcc:	b.eq	f68 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x828>  // b.none
     bd0:	ldrb	w8, [x23]
     bd4:	cmp	w8, #0x62
     bd8:	b.ne	f68 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x828>  // b.any
     bdc:	ldp	x23, x19, [sp, #80]
     be0:	add	x8, x22, #0x1
     be4:	cmp	x19, x22
     be8:	csinc	x21, x19, x22, ls  // ls = plast
     bec:	cmp	x19, x8
     bf0:	b.ls	e0c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x6cc>  // b.plast
     bf4:	add	x0, x23, x21
     bf8:	sub	x2, x19, x21
     bfc:	mov	w1, #0x2e                  	// #46
     c00:	bl	0 <memchr>
     c04:	cbz	x0, e0c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x6cc>
     c08:	sub	x22, x0, x23
     c0c:	b	e10 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x6d0>
     c10:	mov	x21, x27
     c14:	str	x23, [x21, #176]!
     c18:	ldur	x0, [x21, #-168]
     c1c:	str	x24, [x21, #8]
     c20:	ldr	x8, [x0]
     c24:	ldr	x8, [x8, #48]
     c28:	blr	x8
     c2c:	mov	x23, x0
     c30:	mov	w0, #0x70                  	// #112
     c34:	bl	0 <_Znwm>
     c38:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     c3c:	mov	x8, x0
     c40:	add	x9, x9, #0x0
     c44:	strb	wzr, [x8, #32]!
     c48:	str	x9, [x0]
     c4c:	mov	w9, #0x6                   	// #6
     c50:	str	w9, [x0, #48]
     c54:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     c58:	add	x9, x9, #0x0
     c5c:	stp	x26, x9, [x0, #64]
     c60:	mov	w9, #0x3                   	// #3
     c64:	str	x23, [x0, #104]
     c68:	str	w9, [x0, #80]
     c6c:	strb	wzr, [x0, #84]
     c70:	str	x26, [x0, #56]
     c74:	stp	x8, xzr, [x0, #16]
     c78:	str	x0, [sp, #32]
     c7c:	add	x1, sp, #0x20
     c80:	mov	x0, x20
     c84:	bl	0 <LLVMInitializeAArch64AsmParser>
     c88:	ldr	x0, [sp, #32]
     c8c:	cbz	x0, c9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x55c>
     c90:	ldr	x8, [x0]
     c94:	ldr	x8, [x8, #8]
     c98:	blr	x8
     c9c:	ldr	x23, [x27, #8]
     ca0:	mov	x0, x23
     ca4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     ca8:	ldp	x26, x25, [x0, #8]
     cac:	mov	x22, x0
     cb0:	stp	x26, x25, [x29, #-24]
     cb4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     cb8:	ldp	x8, x9, [x27, #176]
     cbc:	mov	x24, x0
     cc0:	cmp	x9, #0x4
     cc4:	b.eq	151c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xddc>  // b.none
     cc8:	cmp	x9, #0x3
     ccc:	b.eq	1408 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcc8>  // b.none
     cd0:	cmp	x9, #0x2
     cd4:	b.ne	1a9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x135c>  // b.any
     cd8:	ldrh	w9, [x8]
     cdc:	mov	w10, #0x6369                	// #25449
     ce0:	cmp	w9, w10
     ce4:	b.eq	16a0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xf60>  // b.none
     ce8:	ldrh	w9, [x8]
     cec:	mov	w10, #0x6364                	// #25444
     cf0:	cmp	w9, w10
     cf4:	b.eq	17ec <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x10ac>  // b.none
     cf8:	ldrh	w8, [x8]
     cfc:	mov	w9, #0x7461                	// #29793
     d00:	cmp	w8, w9
     d04:	b.ne	1a9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x135c>  // b.any
     d08:	mov	x0, x26
     d0c:	mov	x1, x25
     d10:	bl	0 <_ZN4llvm9AArch64AT14lookupATByNameENS_9StringRefE>
     d14:	cbz	x0, 1c50 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1510>
     d18:	mov	x25, x0
     d1c:	mov	x0, x27
     d20:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
     d24:	ldur	q0, [x0, #184]
     d28:	ldr	x8, [x0, #200]
     d2c:	sub	x1, x29, #0xf0
     d30:	mov	x0, x25
     d34:	stur	q0, [x29, #-240]
     d38:	stur	x8, [x29, #-224]
     d3c:	bl	0 <LLVMInitializeAArch64AsmParser>
     d40:	tbnz	w0, #0, 1828 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x10e8>
     d44:	ldr	x1, [x25]
     d48:	sub	x0, x29, #0x70
     d4c:	add	x2, sp, #0x80
     d50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_>
     d54:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     d58:	add	x3, x3, #0x0
     d5c:	sub	x0, x29, #0x70
     d60:	mov	w4, #0x3                   	// #3
     d64:	mov	x1, xzr
     d68:	mov	x2, xzr
     d6c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
     d70:	sub	x8, x29, #0x50
     d74:	add	x20, x8, #0x10
     d78:	stur	x20, [x29, #-80]
     d7c:	mov	x8, x0
     d80:	ldr	x9, [x8], #16
     d84:	cmp	x9, x8
     d88:	b.eq	1fc4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1884>  // b.none
     d8c:	stur	x9, [x29, #-80]
     d90:	ldr	x9, [x0, #16]
     d94:	stur	x9, [x29, #-64]
     d98:	b	1fcc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x188c>
     d9c:	ldp	x8, x9, [sp, #80]
     da0:	stp	x8, x9, [sp, #128]
     da4:	ldr	x0, [x27, #8]
     da8:	ldr	x8, [x0]
     dac:	ldr	x8, [x8, #136]
     db0:	blr	x8
     db4:	ldr	x0, [x27, #8]
     db8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     dbc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     dc0:	mov	x20, x0
     dc4:	sub	x1, x29, #0x30
     dc8:	mov	x0, x27
     dcc:	bl	6118 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
     dd0:	cbz	w0, 15c4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xe84>
     dd4:	sub	x1, x29, #0x30
     dd8:	sub	x2, x29, #0x50
     ddc:	mov	w3, #0x1                   	// #1
     de0:	mov	x0, x27
     de4:	stp	xzr, xzr, [x29, #-80]
     de8:	bl	952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
     dec:	cmp	w0, #0x2
     df0:	b.eq	1f9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x185c>  // b.none
     df4:	cbnz	w0, 1734 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xff4>
     df8:	ldur	x8, [x29, #-72]
     dfc:	cbz	x8, 189c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x115c>
     e00:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     e04:	add	x1, x1, #0x0
     e08:	b	1de0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16a0>
     e0c:	mov	x22, #0xffffffffffffffff    	// #-1
     e10:	cmp	x21, x22
     e14:	csel	x8, x22, x21, cc  // cc = lo, ul, last
     e18:	cmp	x19, x8
     e1c:	csel	x8, x19, x8, cc  // cc = lo, ul, last
     e20:	add	x23, x23, x21
     e24:	sub	x24, x8, x21
     e28:	mov	x0, x27
     e2c:	mov	x1, x23
     e30:	mov	x2, x24
     e34:	mov	x19, x26
     e38:	add	x26, x26, x21
     e3c:	bl	7c04 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE>
     e40:	cmp	w0, #0x10
     e44:	b.ne	e74 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x734>  // b.any
     e48:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     e4c:	add	x1, x1, #0x0
     e50:	add	x0, sp, #0x20
     e54:	bl	0 <LLVMInitializeAArch64AsmParser>
     e58:	ldr	x0, [x28]
     e5c:	add	x2, sp, #0x20
     e60:	mov	x1, x26
     e64:	mov	x3, xzr
     e68:	mov	x4, xzr
     e6c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
     e70:	b	1b6c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x142c>
     e74:	mov	w21, w0
     e78:	ldr	x0, [x28]
     e7c:	ldr	x8, [x0]
     e80:	ldr	x8, [x8, #48]
     e84:	blr	x8
     e88:	mov	x25, x0
     e8c:	mov	w0, #0x70                  	// #112
     e90:	bl	0 <_Znwm>
     e94:	mov	x8, x0
     e98:	mov	w9, #0x6                   	// #6
     e9c:	strb	wzr, [x8, #32]!
     ea0:	str	w9, [x0, #48]
     ea4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     ea8:	add	x9, x9, #0x0
     eac:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
     eb0:	stp	x26, x9, [x0, #64]
     eb4:	mov	w9, #0x1                   	// #1
     eb8:	add	x10, x10, #0x0
     ebc:	str	x25, [x0, #104]
     ec0:	str	x10, [x0]
     ec4:	str	w9, [x0, #80]
     ec8:	strb	w9, [x0, #84]
     ecc:	str	x26, [x0, #56]
     ed0:	stp	x8, xzr, [x0, #16]
     ed4:	str	x0, [sp, #32]
     ed8:	add	x1, sp, #0x20
     edc:	mov	x0, x20
     ee0:	bl	0 <LLVMInitializeAArch64AsmParser>
     ee4:	ldr	x0, [sp, #32]
     ee8:	cbz	x0, ef8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x7b8>
     eec:	ldr	x8, [x0]
     ef0:	ldr	x8, [x8, #8]
     ef4:	blr	x8
     ef8:	ldr	x0, [x28]
     efc:	ldr	x8, [x0]
     f00:	ldr	x8, [x8, #48]
     f04:	blr	x8
     f08:	mov	x26, x0
     f0c:	mov	w0, #0x70                  	// #112
     f10:	bl	0 <_Znwm>
     f14:	mov	x8, x0
     f18:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
     f1c:	mov	w9, #0x2                   	// #2
     f20:	strb	wzr, [x8, #32]!
     f24:	add	x10, x10, #0x0
     f28:	str	x10, [x0]
     f2c:	str	w9, [x0, #48]
     f30:	str	x26, [x0, #104]
     f34:	str	w21, [x0, #72]
     f38:	stp	x19, x19, [x0, #56]
     f3c:	stp	x8, xzr, [x0, #16]
     f40:	str	x0, [sp, #32]
     f44:	add	x1, sp, #0x20
     f48:	mov	x0, x20
     f4c:	mov	x26, x19
     f50:	bl	0 <LLVMInitializeAArch64AsmParser>
     f54:	ldr	x0, [sp, #32]
     f58:	cbz	x0, f68 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x828>
     f5c:	ldr	x8, [x0]
     f60:	ldr	x8, [x8, #8]
     f64:	blr	x8
     f68:	cmn	x22, #0x1
     f6c:	b.eq	1070 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x930>  // b.none
     f70:	add	x19, x26, #0x1
     f74:	mov	x23, x20
     f78:	str	x27, [sp, #16]
     f7c:	ldp	x25, x24, [sp, #80]
     f80:	add	x9, x22, #0x1
     f84:	cmp	x24, x22
     f88:	csinc	x8, x24, x22, ls  // ls = plast
     f8c:	cmp	x24, x9
     f90:	b.ls	fb0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x870>  // b.plast
     f94:	add	x0, x25, x8
     f98:	sub	x2, x24, x8
     f9c:	mov	w1, #0x2e                  	// #46
     fa0:	bl	0 <memchr>
     fa4:	cbz	x0, fb0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x870>
     fa8:	sub	x26, x0, x25
     fac:	b	fb4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x874>
     fb0:	mov	x26, #0xffffffffffffffff    	// #-1
     fb4:	ldr	x0, [x28]
     fb8:	cmp	x24, x22
     fbc:	csel	x27, x24, x22, cc  // cc = lo, ul, last
     fc0:	cmp	x27, x26
     fc4:	ldr	x8, [x0]
     fc8:	csel	x9, x26, x27, cc  // cc = lo, ul, last
     fcc:	cmp	x24, x9
     fd0:	csel	x9, x24, x9, cc  // cc = lo, ul, last
     fd4:	ldr	x8, [x8, #48]
     fd8:	mov	x21, x28
     fdc:	add	x28, x25, x27
     fe0:	sub	x24, x9, x27
     fe4:	add	x20, x19, x27
     fe8:	blr	x8
     fec:	mov	x22, x0
     ff0:	mov	w0, #0x70                  	// #112
     ff4:	bl	0 <_Znwm>
     ff8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     ffc:	mov	x8, x0
    1000:	add	x9, x9, #0x0
    1004:	strb	wzr, [x8, #32]!
    1008:	str	x9, [x0]
    100c:	mov	w9, #0x6                   	// #6
    1010:	str	w9, [x0, #48]
    1014:	mov	w9, #0x1                   	// #1
    1018:	str	x22, [x0, #104]
    101c:	stp	x20, x28, [x0, #64]
    1020:	str	w24, [x0, #80]
    1024:	strb	w9, [x0, #84]
    1028:	str	x20, [x0, #56]
    102c:	stp	x8, xzr, [x0, #16]
    1030:	str	x0, [sp, #32]
    1034:	add	x1, sp, #0x20
    1038:	mov	x0, x23
    103c:	mov	x20, x23
    1040:	bl	0 <LLVMInitializeAArch64AsmParser>
    1044:	ldr	x0, [sp, #32]
    1048:	cbz	x0, 1058 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x918>
    104c:	ldr	x8, [x0]
    1050:	ldr	x8, [x8, #8]
    1054:	blr	x8
    1058:	cmn	x26, #0x1
    105c:	mov	x22, x26
    1060:	mov	x28, x21
    1064:	b.ne	f7c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x83c>  // b.any
    1068:	add	x23, x25, x27
    106c:	ldr	x27, [sp, #16]
    1070:	cmp	x24, #0x6
    1074:	b.eq	116c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa2c>  // b.none
    1078:	cmp	x24, #0x5
    107c:	b.eq	10d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x994>  // b.none
    1080:	cmp	x24, #0x4
    1084:	b.ne	1194 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa54>  // b.any
    1088:	ldr	w8, [x23]
    108c:	mov	w9, #0x6363                	// #25443
    1090:	movk	w9, #0x706d, lsl #16
    1094:	cmp	w8, w9
    1098:	b.eq	11d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa90>  // b.none
    109c:	ldr	w8, [x23]
    10a0:	mov	w9, #0x7363                	// #29539
    10a4:	movk	w9, #0x6e69, lsl #16
    10a8:	add	w9, w9, #0x3f, lsl #12
    10ac:	cmp	w8, w9
    10b0:	b.eq	11d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa90>  // b.none
    10b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    10b8:	add	x1, x1, #0x0
    10bc:	mov	x0, x23
    10c0:	mov	x2, x24
    10c4:	bl	0 <bcmp>
    10c8:	cmp	w0, #0x0
    10cc:	cset	w25, ne  // ne = any
    10d0:	b	11d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa94>
    10d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    10d8:	add	x1, x1, #0x0
    10dc:	mov	x0, x23
    10e0:	mov	x2, x24
    10e4:	bl	0 <bcmp>
    10e8:	cbz	w0, 11a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa64>
    10ec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    10f0:	add	x1, x1, #0x0
    10f4:	mov	x0, x23
    10f8:	mov	x2, x24
    10fc:	bl	0 <bcmp>
    1100:	cbz	w0, 11a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa64>
    1104:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1108:	add	x1, x1, #0x0
    110c:	mov	x0, x23
    1110:	mov	x2, x24
    1114:	bl	0 <bcmp>
    1118:	cbz	w0, 11a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa64>
    111c:	ldr	w8, [x23]
    1120:	ldrb	w9, [x23, #4]
    1124:	mov	w10, #0x7363                	// #29539
    1128:	movk	w10, #0x6e69, lsl #16
    112c:	mov	w11, #0x76                  	// #118
    1130:	eor	w8, w8, w10
    1134:	eor	w9, w9, w11
    1138:	orr	w8, w8, w9
    113c:	cbz	w8, 11a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa64>
    1140:	ldr	w8, [x23]
    1144:	ldrb	w9, [x23, #4]
    1148:	mov	w10, #0x7363                	// #29539
    114c:	movk	w10, #0x656e, lsl #16
    1150:	mov	w11, #0x67                  	// #103
    1154:	eor	w8, w8, w10
    1158:	eor	w9, w9, w11
    115c:	orr	w8, w8, w9
    1160:	cmp	w8, #0x0
    1164:	cset	w25, ne  // ne = any
    1168:	b	11a8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa68>
    116c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1170:	add	x1, x1, #0x0
    1174:	mov	x0, x23
    1178:	mov	x2, x24
    117c:	bl	0 <bcmp>
    1180:	cmp	w0, #0x0
    1184:	str	wzr, [sp, #16]
    1188:	mov	w21, wzr
    118c:	cset	w25, ne  // ne = any
    1190:	b	122c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xaec>
    1194:	str	wzr, [sp, #16]
    1198:	mov	w21, wzr
    119c:	mov	w25, #0x1                   	// #1
    11a0:	b	122c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xaec>
    11a4:	mov	w25, wzr
    11a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    11ac:	add	x1, x1, #0x0
    11b0:	mov	x0, x23
    11b4:	mov	x2, x24
    11b8:	bl	0 <bcmp>
    11bc:	cmp	w0, #0x0
    11c0:	cset	w8, eq  // eq = none
    11c4:	mov	w21, wzr
    11c8:	str	w8, [sp, #16]
    11cc:	b	122c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xaec>
    11d0:	mov	w25, wzr
    11d4:	ldr	w8, [x23]
    11d8:	mov	w9, #0x7363                	// #29539
    11dc:	movk	w9, #0x7465, lsl #16
    11e0:	mov	w10, #0x6963                	// #26979
    11e4:	movk	w10, #0x636e, lsl #16
    11e8:	cmp	w8, w9
    11ec:	cset	w9, eq  // eq = none
    11f0:	cmp	w8, w10
    11f4:	str	w9, [sp, #16]
    11f8:	b.eq	1228 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xae8>  // b.none
    11fc:	ldr	w8, [x23]
    1200:	mov	w9, #0x6963                	// #26979
    1204:	movk	w9, #0x766e, lsl #16
    1208:	cmp	w8, w9
    120c:	b.eq	1228 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xae8>  // b.none
    1210:	ldr	w8, [x23]
    1214:	mov	w9, #0x6e63                	// #28259
    1218:	movk	w9, #0x6765, lsl #16
    121c:	cmp	w8, w9
    1220:	cset	w21, eq  // eq = none
    1224:	b	122c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xaec>
    1228:	mov	w21, #0x1                   	// #1
    122c:	ldr	x0, [x28]
    1230:	ldr	x8, [x0]
    1234:	ldr	x8, [x8, #40]
    1238:	blr	x8
    123c:	ldr	w8, [x0, #16]
    1240:	cbz	w8, 20b8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1978>
    1244:	ldr	x8, [x0, #8]
    1248:	ldr	w8, [x8]
    124c:	cmp	w8, #0x9
    1250:	b.eq	1b4c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x140c>  // b.none
    1254:	ldr	w8, [sp, #16]
    1258:	eor	w19, w21, #0x1
    125c:	mov	w26, #0x1                   	// #1
    1260:	orr	w22, w8, w21
    1264:	mov	w8, #0x3                   	// #3
    1268:	cmp	w8, #0x0
    126c:	cset	w10, eq  // eq = none
    1270:	subs	w21, w8, #0x1
    1274:	cset	w9, ne  // ne = any
    1278:	bic	w10, w10, w25
    127c:	mov	w2, #0x1                   	// #1
    1280:	tbnz	w10, #0, 129c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xb5c>
    1284:	orr	w9, w9, w19
    1288:	cbz	w9, 129c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xb5c>
    128c:	ldr	w9, [sp, #16]
    1290:	cmp	w8, #0x2
    1294:	cset	w8, eq  // eq = none
    1298:	and	w2, w9, w8
    129c:	mov	x0, x27
    12a0:	mov	x1, x20
    12a4:	mov	w3, w22
    12a8:	bl	7f0c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb>
    12ac:	tbnz	w0, #0, 1f9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x185c>
    12b0:	ldr	x0, [sp, #24]
    12b4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    12b8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    12bc:	ldr	x8, [x28]
    12c0:	mov	x23, x0
    12c4:	mov	w1, #0x14                  	// #20
    12c8:	mov	x0, x8
    12cc:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    12d0:	tbz	w0, #0, 1350 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc10>
    12d4:	ldr	x0, [x28]
    12d8:	ldr	x8, [x0]
    12dc:	ldr	x8, [x8, #48]
    12e0:	blr	x8
    12e4:	mov	x24, x0
    12e8:	mov	w0, #0x70                  	// #112
    12ec:	bl	0 <_Znwm>
    12f0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    12f4:	mov	x8, x0
    12f8:	add	x9, x9, #0x0
    12fc:	strb	wzr, [x8, #32]!
    1300:	str	x9, [x0]
    1304:	mov	w9, #0x6                   	// #6
    1308:	str	w9, [x0, #48]
    130c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    1310:	add	x9, x9, #0x0
    1314:	str	x24, [x0, #104]
    1318:	stp	x23, x9, [x0, #64]
    131c:	str	w26, [x0, #80]
    1320:	strb	wzr, [x0, #84]
    1324:	str	x23, [x0, #56]
    1328:	stp	x8, xzr, [x0, #16]
    132c:	str	x0, [sp, #32]
    1330:	add	x1, sp, #0x20
    1334:	mov	x0, x20
    1338:	bl	0 <LLVMInitializeAArch64AsmParser>
    133c:	ldr	x0, [sp, #32]
    1340:	cbz	x0, 1350 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc10>
    1344:	ldr	x8, [x0]
    1348:	ldr	x8, [x8, #8]
    134c:	blr	x8
    1350:	ldr	x0, [sp, #24]
    1354:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    1358:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    135c:	ldr	x8, [x28]
    1360:	mov	x23, x0
    1364:	mov	w1, #0x22                  	// #34
    1368:	mov	x0, x8
    136c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    1370:	tbz	w0, #0, 13f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcb0>
    1374:	ldr	x0, [x28]
    1378:	ldr	x8, [x0]
    137c:	ldr	x8, [x8, #48]
    1380:	blr	x8
    1384:	mov	x24, x0
    1388:	mov	w0, #0x70                  	// #112
    138c:	bl	0 <_Znwm>
    1390:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    1394:	mov	x8, x0
    1398:	add	x9, x9, #0x0
    139c:	strb	wzr, [x8, #32]!
    13a0:	str	x9, [x0]
    13a4:	mov	w9, #0x6                   	// #6
    13a8:	str	w9, [x0, #48]
    13ac:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    13b0:	add	x9, x9, #0x0
    13b4:	str	x24, [x0, #104]
    13b8:	stp	x23, x9, [x0, #64]
    13bc:	str	w26, [x0, #80]
    13c0:	strb	wzr, [x0, #84]
    13c4:	str	x23, [x0, #56]
    13c8:	stp	x8, xzr, [x0, #16]
    13cc:	str	x0, [sp, #32]
    13d0:	add	x1, sp, #0x20
    13d4:	mov	x0, x20
    13d8:	bl	0 <LLVMInitializeAArch64AsmParser>
    13dc:	ldr	x0, [sp, #32]
    13e0:	cbz	x0, 13f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcb0>
    13e4:	ldr	x8, [x0]
    13e8:	ldr	x8, [x8, #8]
    13ec:	blr	x8
    13f0:	ldr	x0, [x28]
    13f4:	mov	w1, #0x19                  	// #25
    13f8:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    13fc:	mov	w8, w21
    1400:	tbnz	w0, #0, 1268 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xb28>
    1404:	b	1b4c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x140c>
    1408:	ldrh	w9, [x8]
    140c:	ldrb	w10, [x8, #2]
    1410:	mov	w11, #0x6663                	// #26211
    1414:	eor	w9, w9, w11
    1418:	eor	w10, w10, #0x70
    141c:	orr	w9, w9, w10
    1420:	tst	w9, #0xffff
    1424:	b.eq	1468 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd28>  // b.none
    1428:	ldrh	w9, [x8]
    142c:	ldrb	w10, [x8, #2]
    1430:	mov	w11, #0x7664                	// #30308
    1434:	eor	w9, w9, w11
    1438:	eor	w10, w10, #0x70
    143c:	orr	w9, w9, w10
    1440:	tst	w9, #0xffff
    1444:	b.eq	1468 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd28>  // b.none
    1448:	ldrh	w9, [x8]
    144c:	ldrb	w8, [x8, #2]
    1450:	mov	w10, #0x7063                	// #28771
    1454:	eor	w9, w9, w10
    1458:	eor	w8, w8, #0x70
    145c:	orr	w8, w9, w8
    1460:	tst	w8, #0xffff
    1464:	b.ne	1a9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x135c>  // b.any
    1468:	mov	x0, x26
    146c:	mov	x1, x25
    1470:	bl	0 <_ZN4llvm12AArch64PRCTX17lookupPRCTXByNameENS_9StringRefE>
    1474:	cbz	x0, 176c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x102c>
    1478:	mov	x25, x0
    147c:	mov	x0, x27
    1480:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    1484:	ldur	q0, [x0, #184]
    1488:	ldr	x8, [x0, #200]
    148c:	add	x1, sp, #0xa0
    1490:	mov	x0, x25
    1494:	str	q0, [sp, #160]
    1498:	str	x8, [sp, #176]
    149c:	bl	0 <LLVMInitializeAArch64AsmParser>
    14a0:	tbz	w0, #0, 1778 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1038>
    14a4:	ldr	x8, [x27, #184]
    14a8:	cmp	x8, #0x3
    14ac:	b.ne	20d8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1998>  // b.any
    14b0:	ldr	x8, [x21]
    14b4:	mov	w11, #0x6663                	// #26211
    14b8:	ldrh	w9, [x8]
    14bc:	ldrb	w10, [x8, #2]
    14c0:	eor	w9, w9, w11
    14c4:	eor	w10, w10, #0x70
    14c8:	orr	w9, w9, w10
    14cc:	tst	w9, #0xffff
    14d0:	b.eq	18ec <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x11ac>  // b.none
    14d4:	ldrh	w9, [x8]
    14d8:	ldrb	w10, [x8, #2]
    14dc:	mov	w11, #0x7664                	// #30308
    14e0:	eor	w9, w9, w11
    14e4:	eor	w10, w10, #0x70
    14e8:	orr	w9, w9, w10
    14ec:	tst	w9, #0xffff
    14f0:	b.eq	1a80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1340>  // b.none
    14f4:	ldrh	w9, [x8]
    14f8:	ldrb	w8, [x8, #2]
    14fc:	mov	w10, #0x7063                	// #28771
    1500:	eor	w9, w9, w10
    1504:	eor	w8, w8, #0x70
    1508:	orr	w8, w9, w8
    150c:	tst	w8, #0xffff
    1510:	b.ne	20d8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1998>  // b.any
    1514:	mov	w1, #0x7                   	// #7
    1518:	b	1a84 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1344>
    151c:	ldr	w8, [x8]
    1520:	mov	w9, #0x6c74                	// #27764
    1524:	movk	w9, #0x6962, lsl #16
    1528:	cmp	w8, w9
    152c:	b.ne	1a9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x135c>  // b.any
    1530:	mov	x0, x26
    1534:	mov	x1, x25
    1538:	bl	0 <_ZN4llvm11AArch64TLBI16lookupTLBIByNameENS_9StringRefE>
    153c:	cbz	x0, 1884 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1144>
    1540:	mov	x25, x0
    1544:	mov	x0, x27
    1548:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    154c:	ldur	q0, [x0, #184]
    1550:	ldr	x8, [x0, #200]
    1554:	add	x1, sp, #0xe0
    1558:	mov	x0, x25
    155c:	str	q0, [sp, #224]
    1560:	str	x8, [sp, #240]
    1564:	bl	0 <LLVMInitializeAArch64AsmParser>
    1568:	tbnz	w0, #0, 1828 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x10e8>
    156c:	ldr	x1, [x25]
    1570:	sub	x0, x29, #0x70
    1574:	add	x2, sp, #0x80
    1578:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_>
    157c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    1580:	add	x3, x3, #0x0
    1584:	sub	x0, x29, #0x70
    1588:	mov	w4, #0x5                   	// #5
    158c:	mov	x1, xzr
    1590:	mov	x2, xzr
    1594:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
    1598:	sub	x8, x29, #0x50
    159c:	add	x20, x8, #0x10
    15a0:	stur	x20, [x29, #-80]
    15a4:	mov	x8, x0
    15a8:	ldr	x9, [x8], #16
    15ac:	cmp	x9, x8
    15b0:	b.eq	1c64 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1524>  // b.none
    15b4:	stur	x9, [x29, #-80]
    15b8:	ldr	x9, [x0, #16]
    15bc:	stur	x9, [x29, #-64]
    15c0:	b	1c6c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x152c>
    15c4:	mov	w22, wzr
    15c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    15cc:	add	x1, x1, #0x0
    15d0:	add	x0, sp, #0x20
    15d4:	bl	0 <LLVMInitializeAArch64AsmParser>
    15d8:	ldr	x0, [x28]
    15dc:	add	x2, sp, #0x20
    15e0:	mov	w1, #0x9                   	// #9
    15e4:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    15e8:	tbnz	w0, #0, 1f9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x185c>
    15ec:	ldp	x24, x23, [sp, #128]
    15f0:	ldur	w25, [x29, #-48]
    15f4:	add	x20, x27, #0xc0
    15f8:	mov	x0, x20
    15fc:	mov	x1, x24
    1600:	mov	x2, x23
    1604:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    1608:	ldr	x8, [x27, #192]
    160c:	mov	x19, x27
    1610:	mov	w21, w0
    1614:	add	x27, x8, w0, uxtw #3
    1618:	ldr	x8, [x27]
    161c:	cmn	x8, #0x8
    1620:	b.eq	1830 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x10f0>  // b.none
    1624:	cbz	x8, 1840 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1100>
    1628:	b	1630 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xef0>
    162c:	ldr	x8, [x27, #8]!
    1630:	cbz	x8, 162c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xeec>
    1634:	cmn	x8, #0x8
    1638:	b.eq	162c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xeec>  // b.none
    163c:	ldr	x8, [x27]
    1640:	ldr	w9, [x8, #8]
    1644:	cmp	w9, w22
    1648:	b.ne	1658 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xf18>  // b.any
    164c:	ldr	w8, [x8, #12]
    1650:	cmp	w8, w25
    1654:	b.eq	1f9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x185c>  // b.none
    1658:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    165c:	add	x1, x1, #0x0
    1660:	sub	x0, x29, #0x50
    1664:	add	x2, sp, #0x80
    1668:	bl	0 <LLVMInitializeAArch64AsmParser>
    166c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1670:	add	x1, x1, #0x0
    1674:	sub	x0, x29, #0x70
    1678:	bl	0 <LLVMInitializeAArch64AsmParser>
    167c:	ldurb	w8, [x29, #-64]
    1680:	cbz	w8, 18a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1164>
    1684:	ldurb	w9, [x29, #-96]
    1688:	cbz	w9, 18a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1164>
    168c:	cmp	w8, #0x1
    1690:	b.ne	1dbc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x167c>  // b.any
    1694:	ldur	q0, [x29, #-112]
    1698:	ldur	x8, [x29, #-96]
    169c:	b	1dcc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x168c>
    16a0:	mov	x0, x26
    16a4:	mov	x1, x25
    16a8:	bl	0 <_ZN4llvm9AArch64IC14lookupICByNameENS_9StringRefE>
    16ac:	cbz	x0, 1890 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1150>
    16b0:	mov	x25, x0
    16b4:	mov	x0, x27
    16b8:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    16bc:	ldur	q0, [x0, #184]
    16c0:	ldr	x8, [x0, #200]
    16c4:	sub	x1, x29, #0x30
    16c8:	mov	x0, x25
    16cc:	stur	q0, [x29, #-48]
    16d0:	stur	x8, [x29, #-32]
    16d4:	bl	0 <LLVMInitializeAArch64AsmParser>
    16d8:	tbnz	w0, #0, 1828 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x10e8>
    16dc:	ldr	x1, [x25]
    16e0:	sub	x0, x29, #0x70
    16e4:	add	x2, sp, #0x80
    16e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_>
    16ec:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    16f0:	add	x3, x3, #0x0
    16f4:	sub	x0, x29, #0x70
    16f8:	mov	w4, #0x3                   	// #3
    16fc:	mov	x1, xzr
    1700:	mov	x2, xzr
    1704:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
    1708:	sub	x8, x29, #0x50
    170c:	add	x20, x8, #0x10
    1710:	stur	x20, [x29, #-80]
    1714:	mov	x8, x0
    1718:	ldr	x9, [x8], #16
    171c:	cmp	x9, x8
    1720:	b.eq	1cb8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1578>  // b.none
    1724:	stur	x9, [x29, #-80]
    1728:	ldr	x9, [x0, #16]
    172c:	stur	x9, [x29, #-64]
    1730:	b	1cc0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1580>
    1734:	sub	x1, x29, #0x30
    1738:	sub	x2, x29, #0x50
    173c:	mov	w3, #0x2                   	// #2
    1740:	mov	x0, x27
    1744:	stp	xzr, xzr, [x29, #-80]
    1748:	bl	952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    174c:	cmp	w0, #0x2
    1750:	b.eq	1f9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x185c>  // b.none
    1754:	cbnz	w0, 18b4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1174>
    1758:	ldur	x8, [x29, #-72]
    175c:	cbz	x8, 1c5c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x151c>
    1760:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1764:	add	x1, x1, #0x0
    1768:	b	1de0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16a0>
    176c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1770:	add	x1, x1, #0x0
    1774:	b	1b24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13e4>
    1778:	sub	x8, x29, #0x70
    177c:	mov	x0, x21
    1780:	sub	x19, x29, #0x70
    1784:	bl	0 <_ZNK4llvm9StringRef5upperB5cxx11Ev>
    1788:	ldr	x1, [x25]
    178c:	add	x0, sp, #0x80
    1790:	add	x2, sp, #0x78
    1794:	add	x20, sp, #0x80
    1798:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_>
    179c:	ldp	x3, x4, [x29, #-112]
    17a0:	ldp	x1, x2, [sp, #128]
    17a4:	ldur	x9, [x29, #-96]
    17a8:	add	x19, x19, #0x10
    17ac:	cmp	x3, x19
    17b0:	mov	w10, #0xf                   	// #15
    17b4:	add	x8, x2, x4
    17b8:	csel	x9, x10, x9, eq  // eq = none
    17bc:	cmp	x8, x9
    17c0:	b.ls	17e0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x10a0>  // b.plast
    17c4:	ldr	x9, [sp, #144]
    17c8:	add	x10, x20, #0x10
    17cc:	cmp	x1, x10
    17d0:	mov	w10, #0xf                   	// #15
    17d4:	csel	x9, x10, x9, eq  // eq = none
    17d8:	cmp	x8, x9
    17dc:	b.ls	1958 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1218>  // b.plast
    17e0:	sub	x0, x29, #0x70
    17e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    17e8:	b	1968 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1228>
    17ec:	mov	x0, x26
    17f0:	mov	x1, x25
    17f4:	bl	0 <_ZN4llvm9AArch64DC14lookupDCByNameENS_9StringRefE>
    17f8:	cbz	x0, 18f4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x11b4>
    17fc:	mov	x25, x0
    1800:	mov	x0, x27
    1804:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    1808:	ldur	q0, [x0, #184]
    180c:	ldr	x8, [x0, #200]
    1810:	sub	x1, x29, #0xb0
    1814:	mov	x0, x25
    1818:	stur	q0, [x29, #-176]
    181c:	stur	x8, [x29, #-160]
    1820:	bl	0 <LLVMInitializeAArch64AsmParser>
    1824:	tbz	w0, #0, 1900 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x11c0>
    1828:	ldrh	w1, [x25, #8]
    182c:	b	1a8c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x134c>
    1830:	ldr	w8, [x19, #208]
    1834:	mov	x9, x19
    1838:	sub	w8, w8, #0x1
    183c:	str	w8, [x19, #208]
    1840:	stp	x22, x26, [sp, #16]
    1844:	add	x26, x23, #0x11
    1848:	mov	x0, x26
    184c:	str	x25, [sp, #8]
    1850:	bfi	x22, x25, #32, #32
    1854:	bl	0 <malloc>
    1858:	mov	x25, x0
    185c:	cbnz	x0, 1874 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1134>
    1860:	cbz	x26, 1e04 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16c4>
    1864:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    1868:	add	x0, x0, #0x0
    186c:	mov	w1, #0x1                   	// #1
    1870:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1874:	add	x26, x25, #0x10
    1878:	stp	x23, x22, [x25]
    187c:	cbnz	x23, 1e2c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16ec>
    1880:	b	1e3c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16fc>
    1884:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1888:	add	x1, x1, #0x0
    188c:	b	1b24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13e4>
    1890:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1894:	add	x1, x1, #0x0
    1898:	b	1b24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13e4>
    189c:	mov	w22, #0x1                   	// #1
    18a0:	b	15c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xe88>
    18a4:	mov	w8, #0x100                 	// #256
    18a8:	stp	xzr, xzr, [sp, #32]
    18ac:	strh	w8, [sp, #48]
    18b0:	b	1f7c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x183c>
    18b4:	sub	x1, x29, #0x30
    18b8:	sub	x2, x29, #0x50
    18bc:	mov	w3, #0x3                   	// #3
    18c0:	mov	x0, x27
    18c4:	stp	xzr, xzr, [x29, #-80]
    18c8:	bl	952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    18cc:	cmp	w0, #0x2
    18d0:	b.eq	1f9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x185c>  // b.none
    18d4:	cbnz	w0, 1dd8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1698>
    18d8:	ldur	x8, [x29, #-72]
    18dc:	cbz	x8, 20b0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1970>
    18e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    18e4:	add	x1, x1, #0x0
    18e8:	b	1de0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16a0>
    18ec:	mov	w1, #0x4                   	// #4
    18f0:	b	1a84 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1344>
    18f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    18f8:	add	x1, x1, #0x0
    18fc:	b	1b24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13e4>
    1900:	ldr	x1, [x25]
    1904:	sub	x0, x29, #0x70
    1908:	add	x2, sp, #0x80
    190c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_>
    1910:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    1914:	add	x3, x3, #0x0
    1918:	sub	x0, x29, #0x70
    191c:	mov	w4, #0x3                   	// #3
    1920:	mov	x1, xzr
    1924:	mov	x2, xzr
    1928:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
    192c:	sub	x8, x29, #0x50
    1930:	add	x20, x8, #0x10
    1934:	stur	x20, [x29, #-80]
    1938:	mov	x8, x0
    193c:	ldr	x9, [x8], #16
    1940:	cmp	x9, x8
    1944:	b.eq	1e94 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1754>  // b.none
    1948:	stur	x9, [x29, #-80]
    194c:	ldr	x9, [x0, #16]
    1950:	stur	x9, [x29, #-64]
    1954:	b	1e9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x175c>
    1958:	add	x0, sp, #0x80
    195c:	mov	x1, xzr
    1960:	mov	x2, xzr
    1964:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
    1968:	sub	x8, x29, #0x50
    196c:	add	x21, x8, #0x10
    1970:	stur	x21, [x29, #-80]
    1974:	mov	x8, x0
    1978:	ldr	x9, [x8], #16
    197c:	cmp	x9, x8
    1980:	b.eq	1994 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1254>  // b.none
    1984:	stur	x9, [x29, #-80]
    1988:	ldr	x9, [x0, #16]
    198c:	stur	x9, [x29, #-64]
    1990:	b	199c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x125c>
    1994:	ldr	q0, [x9]
    1998:	str	q0, [x21]
    199c:	ldr	x9, [x0, #8]
    19a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    19a4:	add	x1, x1, #0x0
    19a8:	stur	x9, [x29, #-72]
    19ac:	stp	x8, xzr, [x0]
    19b0:	strb	wzr, [x0, #16]
    19b4:	sub	x0, x29, #0x50
    19b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    19bc:	add	x8, sp, #0x20
    19c0:	add	x20, x8, #0x10
    19c4:	str	x20, [sp, #32]
    19c8:	mov	x8, x0
    19cc:	ldr	x9, [x8], #16
    19d0:	cmp	x9, x8
    19d4:	b.eq	19e8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x12a8>  // b.none
    19d8:	str	x9, [sp, #32]
    19dc:	ldr	x9, [x0, #16]
    19e0:	str	x9, [sp, #48]
    19e4:	b	19f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x12b0>
    19e8:	ldr	q0, [x9]
    19ec:	str	q0, [x20]
    19f0:	ldr	x9, [x0, #8]
    19f4:	str	x9, [sp, #40]
    19f8:	stp	x8, xzr, [x0]
    19fc:	strb	wzr, [x0, #16]
    1a00:	ldur	x0, [x29, #-80]
    1a04:	cmp	x0, x21
    1a08:	b.eq	1a10 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x12d0>  // b.none
    1a0c:	bl	0 <_ZdlPv>
    1a10:	ldr	x0, [sp, #128]
    1a14:	add	x8, sp, #0x80
    1a18:	add	x8, x8, #0x10
    1a1c:	cmp	x0, x8
    1a20:	b.eq	1a28 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x12e8>  // b.none
    1a24:	bl	0 <_ZdlPv>
    1a28:	ldur	x0, [x29, #-112]
    1a2c:	cmp	x0, x19
    1a30:	b.eq	1a38 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x12f8>  // b.none
    1a34:	bl	0 <_ZdlPv>
    1a38:	ldr	x8, [x25, #32]
    1a3c:	ldr	q0, [x25, #16]
    1a40:	add	x0, sp, #0x60
    1a44:	add	x1, sp, #0x20
    1a48:	str	x8, [sp, #112]
    1a4c:	str	q0, [sp, #96]
    1a50:	bl	993c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    1a54:	ldr	x1, [sp, #32]
    1a58:	sub	x0, x29, #0x50
    1a5c:	bl	0 <LLVMInitializeAArch64AsmParser>
    1a60:	ldr	x0, [x28]
    1a64:	sub	x1, x29, #0x50
    1a68:	mov	x2, xzr
    1a6c:	mov	x3, xzr
    1a70:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    1a74:	ldr	x8, [sp, #32]
    1a78:	cmp	x8, x20
    1a7c:	b	209c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x195c>
    1a80:	mov	w1, #0x5                   	// #5
    1a84:	ldrh	w8, [x25, #8]
    1a88:	bfi	w1, w8, #3, #29
    1a8c:	mov	x0, x27
    1a90:	mov	x2, x20
    1a94:	mov	x3, x24
    1a98:	bl	9ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE>
    1a9c:	ldr	x8, [x23]
    1aa0:	mov	x0, x23
    1aa4:	ldr	x8, [x8, #136]
    1aa8:	blr	x8
    1aac:	add	x8, sp, #0x20
    1ab0:	sub	x0, x29, #0x18
    1ab4:	add	x19, sp, #0x20
    1ab8:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    1abc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1ac0:	add	x1, x1, #0x0
    1ac4:	add	x0, sp, #0x20
    1ac8:	mov	w3, #0x3                   	// #3
    1acc:	mov	x2, xzr
    1ad0:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm>
    1ad4:	ldr	x8, [sp, #32]
    1ad8:	add	x9, x19, #0x10
    1adc:	mov	x23, x0
    1ae0:	cmp	x8, x9
    1ae4:	b.eq	1af0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13b0>  // b.none
    1ae8:	mov	x0, x8
    1aec:	bl	0 <_ZdlPv>
    1af0:	ldr	x0, [x28]
    1af4:	mov	w1, #0x19                  	// #25
    1af8:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    1afc:	tbz	w0, #0, 1b44 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1404>
    1b00:	ldr	w8, [x22]
    1b04:	cmp	w8, #0x2
    1b08:	b.ne	1b1c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13dc>  // b.any
    1b0c:	mov	x0, x27
    1b10:	mov	x1, x20
    1b14:	bl	9d48 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    1b18:	tbz	w0, #0, 1b94 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1454>
    1b1c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1b20:	add	x1, x1, #0x0
    1b24:	add	x0, sp, #0x20
    1b28:	bl	0 <LLVMInitializeAArch64AsmParser>
    1b2c:	ldr	x0, [x28]
    1b30:	add	x1, sp, #0x20
    1b34:	mov	x2, xzr
    1b38:	mov	x3, xzr
    1b3c:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    1b40:	b	1b6c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x142c>
    1b44:	cmn	x23, #0x1
    1b48:	b.eq	1b74 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1434>  // b.none
    1b4c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1b50:	add	x1, x1, #0x0
    1b54:	add	x0, sp, #0x20
    1b58:	bl	0 <LLVMInitializeAArch64AsmParser>
    1b5c:	ldr	x0, [x28]
    1b60:	add	x2, sp, #0x20
    1b64:	mov	w1, #0x9                   	// #9
    1b68:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    1b6c:	mov	w19, w0
    1b70:	b	1fa0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1860>
    1b74:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1b78:	add	x1, x1, #0x0
    1b7c:	sub	x0, x29, #0x50
    1b80:	mov	x2, x21
    1b84:	bl	0 <LLVMInitializeAArch64AsmParser>
    1b88:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1b8c:	add	x1, x1, #0x0
    1b90:	b	1bb8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1478>
    1b94:	cmn	x23, #0x1
    1b98:	b.eq	1b4c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x140c>  // b.none
    1b9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1ba0:	add	x1, x1, #0x0
    1ba4:	sub	x0, x29, #0x50
    1ba8:	mov	x2, x21
    1bac:	bl	0 <LLVMInitializeAArch64AsmParser>
    1bb0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1bb4:	add	x1, x1, #0x0
    1bb8:	sub	x0, x29, #0x70
    1bbc:	bl	0 <LLVMInitializeAArch64AsmParser>
    1bc0:	ldurb	w8, [x29, #-64]
    1bc4:	cbz	w8, 1be4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14a4>
    1bc8:	ldurb	w9, [x29, #-96]
    1bcc:	cbz	w9, 1be4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14a4>
    1bd0:	cmp	w8, #0x1
    1bd4:	b.ne	1bf4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14b4>  // b.any
    1bd8:	ldur	q0, [x29, #-112]
    1bdc:	ldur	x8, [x29, #-96]
    1be0:	b	1c04 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14c4>
    1be4:	mov	w8, #0x100                 	// #256
    1be8:	stp	xzr, xzr, [sp, #32]
    1bec:	strh	w8, [sp, #48]
    1bf0:	b	1b2c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13ec>
    1bf4:	cmp	w9, #0x1
    1bf8:	b.ne	1c10 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14d0>  // b.any
    1bfc:	ldur	q0, [x29, #-80]
    1c00:	ldur	x8, [x29, #-64]
    1c04:	str	q0, [sp, #32]
    1c08:	str	x8, [sp, #48]
    1c0c:	b	1b2c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13ec>
    1c10:	ldurb	w10, [x29, #-63]
    1c14:	ldur	x11, [x29, #-80]
    1c18:	ldurb	w14, [x29, #-95]
    1c1c:	ldur	x15, [x29, #-112]
    1c20:	mov	w12, #0x2                   	// #2
    1c24:	sub	x13, x29, #0x50
    1c28:	cmp	w10, #0x1
    1c2c:	sub	x16, x29, #0x70
    1c30:	csel	w2, w8, w12, eq  // eq = none
    1c34:	csel	x1, x11, x13, eq  // eq = none
    1c38:	cmp	w14, #0x1
    1c3c:	csel	w4, w9, w12, eq  // eq = none
    1c40:	csel	x3, x15, x16, eq  // eq = none
    1c44:	add	x0, sp, #0x20
    1c48:	bl	0 <LLVMInitializeAArch64AsmParser>
    1c4c:	b	1b2c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13ec>
    1c50:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1c54:	add	x1, x1, #0x0
    1c58:	b	1b24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13e4>
    1c5c:	mov	w22, #0x2                   	// #2
    1c60:	b	15c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xe88>
    1c64:	ldr	q0, [x9]
    1c68:	str	q0, [x20]
    1c6c:	ldr	x9, [x0, #8]
    1c70:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1c74:	add	x1, x1, #0x0
    1c78:	stur	x9, [x29, #-72]
    1c7c:	stp	x8, xzr, [x0]
    1c80:	strb	wzr, [x0, #16]
    1c84:	sub	x0, x29, #0x50
    1c88:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    1c8c:	add	x8, sp, #0x20
    1c90:	add	x19, x8, #0x10
    1c94:	str	x19, [sp, #32]
    1c98:	mov	x8, x0
    1c9c:	ldr	x9, [x8], #16
    1ca0:	cmp	x9, x8
    1ca4:	b.eq	1d0c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x15cc>  // b.none
    1ca8:	str	x9, [sp, #32]
    1cac:	ldr	x9, [x0, #16]
    1cb0:	str	x9, [sp, #48]
    1cb4:	b	1d14 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x15d4>
    1cb8:	ldr	q0, [x9]
    1cbc:	str	q0, [x20]
    1cc0:	ldr	x9, [x0, #8]
    1cc4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1cc8:	add	x1, x1, #0x0
    1ccc:	stur	x9, [x29, #-72]
    1cd0:	stp	x8, xzr, [x0]
    1cd4:	strb	wzr, [x0, #16]
    1cd8:	sub	x0, x29, #0x50
    1cdc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    1ce0:	add	x8, sp, #0x20
    1ce4:	add	x19, x8, #0x10
    1ce8:	str	x19, [sp, #32]
    1cec:	mov	x8, x0
    1cf0:	ldr	x9, [x8], #16
    1cf4:	cmp	x9, x8
    1cf8:	b.eq	1d64 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1624>  // b.none
    1cfc:	str	x9, [sp, #32]
    1d00:	ldr	x9, [x0, #16]
    1d04:	str	x9, [sp, #48]
    1d08:	b	1d6c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x162c>
    1d0c:	ldr	q0, [x9]
    1d10:	str	q0, [x19]
    1d14:	ldr	x9, [x0, #8]
    1d18:	str	x9, [sp, #40]
    1d1c:	stp	x8, xzr, [x0]
    1d20:	strb	wzr, [x0, #16]
    1d24:	ldur	x0, [x29, #-80]
    1d28:	cmp	x0, x20
    1d2c:	b.eq	1d34 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x15f4>  // b.none
    1d30:	bl	0 <_ZdlPv>
    1d34:	ldur	x0, [x29, #-112]
    1d38:	sub	x8, x29, #0x70
    1d3c:	add	x8, x8, #0x10
    1d40:	cmp	x0, x8
    1d44:	b.eq	1d4c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x160c>  // b.none
    1d48:	bl	0 <_ZdlPv>
    1d4c:	ldr	x8, [x25, #32]
    1d50:	ldr	q0, [x25, #16]
    1d54:	add	x0, sp, #0xc0
    1d58:	str	x8, [sp, #208]
    1d5c:	str	q0, [sp, #192]
    1d60:	b	206c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x192c>
    1d64:	ldr	q0, [x9]
    1d68:	str	q0, [x19]
    1d6c:	ldr	x9, [x0, #8]
    1d70:	str	x9, [sp, #40]
    1d74:	stp	x8, xzr, [x0]
    1d78:	strb	wzr, [x0, #16]
    1d7c:	ldur	x0, [x29, #-80]
    1d80:	cmp	x0, x20
    1d84:	b.eq	1d8c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x164c>  // b.none
    1d88:	bl	0 <_ZdlPv>
    1d8c:	ldur	x0, [x29, #-112]
    1d90:	sub	x8, x29, #0x70
    1d94:	add	x8, x8, #0x10
    1d98:	cmp	x0, x8
    1d9c:	b.eq	1da4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1664>  // b.none
    1da0:	bl	0 <_ZdlPv>
    1da4:	ldr	x8, [x25, #32]
    1da8:	ldr	q0, [x25, #16]
    1dac:	sub	x0, x29, #0x90
    1db0:	stur	x8, [x29, #-128]
    1db4:	stur	q0, [x29, #-144]
    1db8:	b	206c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x192c>
    1dbc:	cmp	w9, #0x1
    1dc0:	b.ne	1f40 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1800>  // b.any
    1dc4:	ldur	q0, [x29, #-80]
    1dc8:	ldur	x8, [x29, #-64]
    1dcc:	str	q0, [sp, #32]
    1dd0:	str	x8, [sp, #48]
    1dd4:	b	1f7c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x183c>
    1dd8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1ddc:	add	x1, x1, #0x0
    1de0:	add	x0, sp, #0x20
    1de4:	bl	0 <LLVMInitializeAArch64AsmParser>
    1de8:	ldr	x0, [x28]
    1dec:	add	x2, sp, #0x20
    1df0:	mov	x1, x20
    1df4:	mov	x3, xzr
    1df8:	mov	x4, xzr
    1dfc:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    1e00:	b	1f9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x185c>
    1e04:	mov	w0, #0x1                   	// #1
    1e08:	bl	0 <malloc>
    1e0c:	mov	x25, x0
    1e10:	cbnz	x0, 1e24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16e4>
    1e14:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    1e18:	add	x0, x0, #0x0
    1e1c:	mov	w1, #0x1                   	// #1
    1e20:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1e24:	stp	x23, x22, [x25]
    1e28:	add	x26, x25, #0x10
    1e2c:	mov	x0, x26
    1e30:	mov	x1, x24
    1e34:	mov	x2, x23
    1e38:	bl	0 <memcpy>
    1e3c:	strb	wzr, [x26, x23]
    1e40:	str	x25, [x27]
    1e44:	ldp	w8, w9, [x19, #204]
    1e48:	ldr	w10, [x19, #200]
    1e4c:	add	w8, w8, #0x1
    1e50:	add	w9, w9, w8
    1e54:	cmp	w9, w10
    1e58:	str	w8, [x19, #204]
    1e5c:	b.hi	20f8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x19b8>  // b.pmore
    1e60:	mov	x0, x20
    1e64:	mov	w1, w21
    1e68:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    1e6c:	ldr	x8, [x20]
    1e70:	ldp	x22, x26, [sp, #16]
    1e74:	ldr	x25, [sp, #8]
    1e78:	add	x27, x8, w0, uxtw #3
    1e7c:	ldr	x8, [x27]
    1e80:	cbz	x8, 1e8c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x174c>
    1e84:	cmn	x8, #0x8
    1e88:	b.ne	163c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xefc>  // b.any
    1e8c:	add	x27, x27, #0x8
    1e90:	b	1e7c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x173c>
    1e94:	ldr	q0, [x9]
    1e98:	str	q0, [x20]
    1e9c:	ldr	x9, [x0, #8]
    1ea0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1ea4:	add	x1, x1, #0x0
    1ea8:	stur	x9, [x29, #-72]
    1eac:	stp	x8, xzr, [x0]
    1eb0:	strb	wzr, [x0, #16]
    1eb4:	sub	x0, x29, #0x50
    1eb8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    1ebc:	add	x8, sp, #0x20
    1ec0:	add	x19, x8, #0x10
    1ec4:	str	x19, [sp, #32]
    1ec8:	mov	x8, x0
    1ecc:	ldr	x9, [x8], #16
    1ed0:	cmp	x9, x8
    1ed4:	b.eq	1ee8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17a8>  // b.none
    1ed8:	str	x9, [sp, #32]
    1edc:	ldr	x9, [x0, #16]
    1ee0:	str	x9, [sp, #48]
    1ee4:	b	1ef0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17b0>
    1ee8:	ldr	q0, [x9]
    1eec:	str	q0, [x19]
    1ef0:	ldr	x9, [x0, #8]
    1ef4:	str	x9, [sp, #40]
    1ef8:	stp	x8, xzr, [x0]
    1efc:	strb	wzr, [x0, #16]
    1f00:	ldur	x0, [x29, #-80]
    1f04:	cmp	x0, x20
    1f08:	b.eq	1f10 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17d0>  // b.none
    1f0c:	bl	0 <_ZdlPv>
    1f10:	ldur	x0, [x29, #-112]
    1f14:	sub	x8, x29, #0x70
    1f18:	add	x8, x8, #0x10
    1f1c:	cmp	x0, x8
    1f20:	b.eq	1f28 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17e8>  // b.none
    1f24:	bl	0 <_ZdlPv>
    1f28:	ldr	x8, [x25, #32]
    1f2c:	ldr	q0, [x25, #16]
    1f30:	sub	x0, x29, #0xd0
    1f34:	stur	x8, [x29, #-192]
    1f38:	stur	q0, [x29, #-208]
    1f3c:	b	206c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x192c>
    1f40:	ldurb	w10, [x29, #-63]
    1f44:	ldur	x11, [x29, #-80]
    1f48:	ldurb	w14, [x29, #-95]
    1f4c:	ldur	x15, [x29, #-112]
    1f50:	mov	w12, #0x2                   	// #2
    1f54:	sub	x13, x29, #0x50
    1f58:	cmp	w10, #0x1
    1f5c:	sub	x16, x29, #0x70
    1f60:	csel	w2, w8, w12, eq  // eq = none
    1f64:	csel	x1, x11, x13, eq  // eq = none
    1f68:	cmp	w14, #0x1
    1f6c:	csel	w4, w9, w12, eq  // eq = none
    1f70:	csel	x3, x15, x16, eq  // eq = none
    1f74:	add	x0, sp, #0x20
    1f78:	bl	0 <LLVMInitializeAArch64AsmParser>
    1f7c:	ldr	x0, [x28]
    1f80:	add	x2, sp, #0x20
    1f84:	mov	x1, x26
    1f88:	mov	x3, xzr
    1f8c:	ldr	x8, [x0]
    1f90:	mov	x4, xzr
    1f94:	ldr	x8, [x8, #120]
    1f98:	blr	x8
    1f9c:	mov	w19, #0x1                   	// #1
    1fa0:	and	w0, w19, #0x1
    1fa4:	add	sp, sp, #0x210
    1fa8:	ldp	x20, x19, [sp, #80]
    1fac:	ldp	x22, x21, [sp, #64]
    1fb0:	ldp	x24, x23, [sp, #48]
    1fb4:	ldp	x26, x25, [sp, #32]
    1fb8:	ldp	x28, x27, [sp, #16]
    1fbc:	ldp	x29, x30, [sp], #96
    1fc0:	ret
    1fc4:	ldr	q0, [x9]
    1fc8:	str	q0, [x20]
    1fcc:	ldr	x9, [x0, #8]
    1fd0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1fd4:	add	x1, x1, #0x0
    1fd8:	stur	x9, [x29, #-72]
    1fdc:	stp	x8, xzr, [x0]
    1fe0:	strb	wzr, [x0, #16]
    1fe4:	sub	x0, x29, #0x50
    1fe8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    1fec:	add	x8, sp, #0x20
    1ff0:	add	x19, x8, #0x10
    1ff4:	str	x19, [sp, #32]
    1ff8:	mov	x8, x0
    1ffc:	ldr	x9, [x8], #16
    2000:	cmp	x9, x8
    2004:	b.eq	2018 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x18d8>  // b.none
    2008:	str	x9, [sp, #32]
    200c:	ldr	x9, [x0, #16]
    2010:	str	x9, [sp, #48]
    2014:	b	2020 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x18e0>
    2018:	ldr	q0, [x9]
    201c:	str	q0, [x19]
    2020:	ldr	x9, [x0, #8]
    2024:	str	x9, [sp, #40]
    2028:	stp	x8, xzr, [x0]
    202c:	strb	wzr, [x0, #16]
    2030:	ldur	x0, [x29, #-80]
    2034:	cmp	x0, x20
    2038:	b.eq	2040 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1900>  // b.none
    203c:	bl	0 <_ZdlPv>
    2040:	ldur	x0, [x29, #-112]
    2044:	sub	x8, x29, #0x70
    2048:	add	x8, x8, #0x10
    204c:	cmp	x0, x8
    2050:	b.eq	2058 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1918>  // b.none
    2054:	bl	0 <_ZdlPv>
    2058:	ldr	x8, [x25, #32]
    205c:	ldr	q0, [x25, #16]
    2060:	add	x0, sp, #0x100
    2064:	str	x8, [sp, #272]
    2068:	str	q0, [sp, #256]
    206c:	add	x1, sp, #0x20
    2070:	bl	993c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    2074:	ldr	x1, [sp, #32]
    2078:	sub	x0, x29, #0x50
    207c:	bl	0 <LLVMInitializeAArch64AsmParser>
    2080:	ldr	x0, [x28]
    2084:	sub	x1, x29, #0x50
    2088:	mov	x2, xzr
    208c:	mov	x3, xzr
    2090:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    2094:	ldr	x8, [sp, #32]
    2098:	cmp	x8, x19
    209c:	mov	w19, w0
    20a0:	b.eq	1fa0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1860>  // b.none
    20a4:	mov	x0, x8
    20a8:	bl	0 <_ZdlPv>
    20ac:	b	1fa0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1860>
    20b0:	mov	w22, #0x3                   	// #3
    20b4:	b	15c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xe88>
    20b8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    20bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    20c0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    20c4:	add	x0, x0, #0x0
    20c8:	add	x1, x1, #0x0
    20cc:	add	x3, x3, #0x0
    20d0:	mov	w2, #0x99                  	// #153
    20d4:	bl	0 <__assert_fail>
    20d8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    20dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    20e0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    20e4:	add	x0, x0, #0x0
    20e8:	add	x1, x1, #0x0
    20ec:	add	x3, x3, #0x0
    20f0:	mov	w2, #0xb8d                 	// #2957
    20f4:	bl	0 <__assert_fail>
    20f8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    20fc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2100:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    2104:	add	x0, x0, #0x0
    2108:	add	x1, x1, #0x0
    210c:	add	x3, x3, #0x0
    2110:	mov	w2, #0x1bb                 	// #443
    2114:	bl	0 <__assert_fail>

0000000000002118 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE>:
    2118:	stp	x29, x30, [sp, #-96]!
    211c:	stp	x28, x27, [sp, #16]
    2120:	stp	x26, x25, [sp, #32]
    2124:	stp	x24, x23, [sp, #48]
    2128:	stp	x22, x21, [sp, #64]
    212c:	stp	x20, x19, [sp, #80]
    2130:	mov	x29, sp
    2134:	sub	sp, sp, #0x1a0
    2138:	mov	x24, x0
    213c:	mov	x19, x0
    2140:	ldr	x0, [x24, #8]!
    2144:	mov	x20, x1
    2148:	ldr	x8, [x0]
    214c:	ldr	x8, [x8, #48]
    2150:	blr	x8
    2154:	ldr	x8, [x0, #32]
    2158:	ldr	w9, [x20]
    215c:	ldr	w23, [x8, #704]
    2160:	cmp	w9, #0x2
    2164:	b.ne	2170 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x58>  // b.any
    2168:	ldp	x21, x22, [x20, #8]
    216c:	b	2180 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x68>
    2170:	mov	x0, x20
    2174:	bl	0 <LLVMInitializeAArch64AsmParser>
    2178:	mov	x21, x0
    217c:	mov	x22, x1
    2180:	mov	x0, x20
    2184:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    2188:	sub	x8, x22, #0x4
    218c:	mov	x20, x0
    2190:	cmp	x8, #0x10
    2194:	mov	w0, #0x1                   	// #1
    2198:	b.hi	3074 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf5c>  // b.pmore
    219c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    21a0:	add	x9, x9, #0x0
    21a4:	adr	x10, 21b4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x9c>
    21a8:	ldrh	w11, [x9, x8, lsl #1]
    21ac:	add	x10, x10, x11, lsl #2
    21b0:	br	x10
    21b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    21b8:	add	x1, x1, #0x0
    21bc:	mov	x0, x21
    21c0:	mov	x2, x22
    21c4:	bl	0 <bcmp>
    21c8:	cbz	w0, 2994 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x87c>
    21cc:	cbnz	w23, 256c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x454>
    21d0:	ldr	w8, [x21]
    21d4:	mov	w9, #0x6c2e                	// #27694
    21d8:	movk	w9, #0x686f, lsl #16
    21dc:	cmp	w8, w9
    21e0:	b.ne	256c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x454>  // b.any
    21e4:	mov	w8, #0x4                   	// #4
    21e8:	stp	x21, x8, [sp, #32]
    21ec:	ldr	x0, [x24]
    21f0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    21f4:	ldr	w19, [x0]
    21f8:	ldr	x0, [x24]
    21fc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2200:	ldr	w9, [x0]
    2204:	cmp	w19, #0x2
    2208:	b.ne	3094 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf7c>  // b.any
    220c:	mov	x8, x0
    2210:	cmp	w9, #0x2
    2214:	b.ne	30d0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xfb8>  // b.any
    2218:	ldp	x0, x1, [x8, #8]
    221c:	b	30d8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xfc0>
    2220:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2224:	add	x1, x1, #0x0
    2228:	mov	x0, x21
    222c:	mov	x2, x22
    2230:	bl	0 <bcmp>
    2234:	cbnz	w0, 256c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x454>
    2238:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    223c:	add	x1, x1, #0x0
    2240:	add	x0, sp, #0xc0
    2244:	bl	0 <LLVMInitializeAArch64AsmParser>
    2248:	ldr	x0, [x24]
    224c:	add	x2, sp, #0xc0
    2250:	mov	w1, #0x9                   	// #9
    2254:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2258:	tbnz	w0, #0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    225c:	ldr	x0, [x24]
    2260:	ldr	x8, [x0]
    2264:	ldr	x8, [x8, #56]
    2268:	blr	x8
    226c:	ldr	x8, [x0]
    2270:	ldr	x8, [x8, #600]
    2274:	b	2354 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x23c>
    2278:	ldr	w8, [x21]
    227c:	ldrb	w9, [x21, #4]
    2280:	mov	w10, #0x612e                	// #24878
    2284:	movk	w10, #0x6372, lsl #16
    2288:	mov	w11, #0x68                  	// #104
    228c:	eor	w8, w8, w10
    2290:	eor	w9, w9, w11
    2294:	orr	w8, w8, w9
    2298:	cbz	w8, 25b4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x49c>
    229c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    22a0:	add	x1, x1, #0x0
    22a4:	mov	x0, x21
    22a8:	mov	x2, x22
    22ac:	bl	0 <bcmp>
    22b0:	cbz	w0, 2574 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x45c>
    22b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    22b8:	add	x1, x1, #0x0
    22bc:	mov	x0, x21
    22c0:	mov	x2, x22
    22c4:	bl	0 <bcmp>
    22c8:	cbnz	w0, 256c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x454>
    22cc:	ldr	x0, [x24]
    22d0:	ldr	x8, [x0]
    22d4:	ldr	x8, [x8, #40]
    22d8:	blr	x8
    22dc:	ldr	w8, [x0, #16]
    22e0:	cbz	w8, 36c0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x15a8>
    22e4:	ldr	x8, [x0, #8]
    22e8:	ldr	w8, [x8]
    22ec:	cmp	w8, #0x9
    22f0:	b.ne	2f1c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe04>  // b.any
    22f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    22f8:	add	x1, x1, #0x0
    22fc:	b	2d68 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc50>
    2300:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2304:	add	x1, x1, #0x0
    2308:	mov	x0, x21
    230c:	mov	x2, x22
    2310:	bl	0 <bcmp>
    2314:	cbnz	w0, 256c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x454>
    2318:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    231c:	add	x1, x1, #0x0
    2320:	add	x0, sp, #0xc0
    2324:	bl	0 <LLVMInitializeAArch64AsmParser>
    2328:	ldr	x0, [x24]
    232c:	add	x2, sp, #0xc0
    2330:	mov	w1, #0x9                   	// #9
    2334:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2338:	tbnz	w0, #0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    233c:	ldr	x0, [x24]
    2340:	ldr	x8, [x0]
    2344:	ldr	x8, [x8, #56]
    2348:	blr	x8
    234c:	ldr	x8, [x0]
    2350:	ldr	x8, [x8, #920]
    2354:	blr	x8
    2358:	b	3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    235c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2360:	add	x1, x1, #0x0
    2364:	mov	x0, x21
    2368:	mov	x2, x22
    236c:	bl	0 <bcmp>
    2370:	cbz	w0, 2574 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x45c>
    2374:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2378:	add	x1, x1, #0x0
    237c:	mov	x0, x21
    2380:	mov	x2, x22
    2384:	bl	0 <bcmp>
    2388:	cbnz	w0, 256c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x454>
    238c:	ldr	x20, [x24]
    2390:	mov	x0, x20
    2394:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2398:	ldr	w8, [x0]
    239c:	cmp	w8, #0x2
    23a0:	b.ne	2d78 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc60>  // b.any
    23a4:	mov	x0, x20
    23a8:	add	x21, x19, #0xc0
    23ac:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    23b0:	ldr	w9, [x0]
    23b4:	mov	x8, x0
    23b8:	cmp	w9, #0x2
    23bc:	b.ne	2f48 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe30>  // b.any
    23c0:	ldp	x0, x1, [x8, #8]
    23c4:	b	2f50 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe38>
    23c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    23cc:	add	x1, x1, #0x0
    23d0:	mov	x0, x21
    23d4:	mov	x2, x22
    23d8:	bl	0 <bcmp>
    23dc:	cbnz	w0, 256c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x454>
    23e0:	stp	xzr, xzr, [x29, #-64]
    23e4:	ldr	x0, [x24]
    23e8:	sub	x1, x29, #0x40
    23ec:	ldr	x8, [x0]
    23f0:	ldr	x8, [x8, #144]
    23f4:	blr	x8
    23f8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    23fc:	mov	w21, w0
    2400:	add	x1, x1, #0x0
    2404:	add	x0, sp, #0xc0
    2408:	bl	0 <LLVMInitializeAArch64AsmParser>
    240c:	ldr	x0, [x24]
    2410:	and	w1, w21, #0x1
    2414:	add	x3, sp, #0xc0
    2418:	mov	x2, x20
    241c:	bl	0 <_ZN4llvm11MCAsmParser5checkEbNS_5SMLocERKNS_5TwineE>
    2420:	tbnz	w0, #0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2424:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2428:	add	x1, x1, #0x0
    242c:	sub	x0, x29, #0x20
    2430:	bl	0 <LLVMInitializeAArch64AsmParser>
    2434:	ldr	x0, [x24]
    2438:	sub	x2, x29, #0x20
    243c:	mov	w1, #0x9                   	// #9
    2440:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2444:	tbnz	w0, #0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2448:	ldr	x0, [x19, #8]
    244c:	ldr	x8, [x0]
    2450:	ldr	x8, [x8, #48]
    2454:	blr	x8
    2458:	mov	x20, x0
    245c:	add	x0, sp, #0xc0
    2460:	sub	x1, x29, #0x40
    2464:	add	x21, sp, #0xc0
    2468:	bl	0 <LLVMInitializeAArch64AsmParser>
    246c:	add	x1, sp, #0xc0
    2470:	mov	x0, x20
    2474:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
    2478:	ldr	x8, [x19, #8]
    247c:	mov	x20, x0
    2480:	ldr	x9, [x8]
    2484:	mov	x0, x8
    2488:	ldr	x9, [x9, #48]
    248c:	blr	x9
    2490:	mov	x2, x0
    2494:	mov	x0, x20
    2498:	mov	w1, wzr
    249c:	mov	x3, xzr
    24a0:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
    24a4:	ldr	x8, [x19, #8]
    24a8:	mov	x20, x0
    24ac:	ldr	x9, [x8]
    24b0:	mov	x0, x8
    24b4:	ldr	x9, [x9, #48]
    24b8:	blr	x9
    24bc:	mov	x2, x0
    24c0:	mov	w1, #0x8                   	// #8
    24c4:	mov	x0, x20
    24c8:	bl	0 <_ZN4llvm13AArch64MCExpr6createEPKNS_6MCExprENS0_11VariantKindERNS_9MCContextE>
    24cc:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    24d0:	ldr	d0, [x10]
    24d4:	add	x9, x0, #0x8
    24d8:	add	x8, x21, #0x10
    24dc:	cmp	x0, #0x0
    24e0:	add	x21, x21, #0x20
    24e4:	mov	w11, #0x11cc                	// #4556
    24e8:	mov	w10, #0x4                   	// #4
    24ec:	csel	x9, xzr, x9, eq  // eq = none
    24f0:	sub	x1, x29, #0x20
    24f4:	mov	x0, x8
    24f8:	stp	xzr, xzr, [sp, #192]
    24fc:	str	x21, [sp, #208]
    2500:	str	w11, [sp, #192]
    2504:	str	d0, [sp, #216]
    2508:	stp	x10, x9, [x29, #-32]
    250c:	bl	0 <LLVMInitializeAArch64AsmParser>
    2510:	ldr	x0, [x19, #8]
    2514:	ldr	x8, [x0]
    2518:	ldr	x8, [x8, #56]
    251c:	blr	x8
    2520:	mov	x20, x0
    2524:	mov	x0, x19
    2528:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    252c:	ldr	x8, [x20]
    2530:	mov	x2, x0
    2534:	add	x1, sp, #0xc0
    2538:	mov	x0, x20
    253c:	ldr	x8, [x8, #1080]
    2540:	blr	x8
    2544:	ldr	x0, [sp, #208]
    2548:	cmp	x0, x21
    254c:	b.ne	2ddc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcc4>  // b.any
    2550:	b	3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2554:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2558:	add	x1, x1, #0x0
    255c:	mov	x0, x21
    2560:	mov	x2, x22
    2564:	bl	0 <bcmp>
    2568:	cbz	w0, 2cbc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xba4>
    256c:	mov	w0, #0x1                   	// #1
    2570:	b	3074 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf5c>
    2574:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2578:	add	x1, x1, #0x0
    257c:	add	x0, sp, #0xc0
    2580:	bl	0 <LLVMInitializeAArch64AsmParser>
    2584:	ldr	x0, [x24]
    2588:	add	x2, sp, #0xc0
    258c:	mov	w1, #0x9                   	// #9
    2590:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2594:	tbnz	w0, #0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2598:	ldr	x0, [x24]
    259c:	ldr	x8, [x0]
    25a0:	ldr	x8, [x8, #56]
    25a4:	blr	x8
    25a8:	ldr	x0, [x0, #16]
    25ac:	bl	0 <_ZN4llvm21AArch64TargetStreamer23emitCurrentConstantPoolEv>
    25b0:	b	3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    25b4:	ldr	x0, [x24]
    25b8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    25bc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    25c0:	stp	xzr, xzr, [sp, #144]
    25c4:	ldr	x8, [x24]
    25c8:	mov	x20, x0
    25cc:	ldr	x9, [x8]
    25d0:	mov	x0, x8
    25d4:	ldr	x9, [x9, #152]
    25d8:	blr	x9
    25dc:	stp	x0, x1, [x29, #-64]
    25e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    25e4:	add	x1, x1, #0x0
    25e8:	sub	x0, x29, #0x40
    25ec:	mov	w2, #0x6                   	// #6
    25f0:	bl	0 <LLVMInitializeAArch64AsmParser>
    25f4:	mov	w8, #0x2b                  	// #43
    25f8:	stp	x0, x1, [x29, #-32]
    25fc:	strb	w8, [sp, #160]
    2600:	add	x8, sp, #0xc0
    2604:	sub	x0, x29, #0x20
    2608:	add	x1, sp, #0xa0
    260c:	mov	w2, #0x1                   	// #1
    2610:	bl	0 <LLVMInitializeAArch64AsmParser>
    2614:	ldr	q0, [sp, #208]
    2618:	ldp	x0, x1, [sp, #192]
    261c:	str	q0, [sp, #144]
    2620:	bl	0 <_ZN4llvm7AArch649parseArchENS_9StringRefE>
    2624:	cbz	w0, 2d60 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc48>
    2628:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    262c:	mov	w21, w0
    2630:	add	x1, x1, #0x0
    2634:	add	x0, sp, #0xc0
    2638:	add	x20, sp, #0xc0
    263c:	bl	0 <LLVMInitializeAArch64AsmParser>
    2640:	ldr	x0, [x24]
    2644:	add	x2, sp, #0xc0
    2648:	mov	w1, #0x9                   	// #9
    264c:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2650:	tbnz	w0, #0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2654:	sub	x1, x29, #0x20
    2658:	mov	w0, w21
    265c:	stp	xzr, xzr, [x29, #-32]
    2660:	stur	xzr, [x29, #-16]
    2664:	bl	0 <_ZN4llvm7AArch6415getArchFeaturesENS0_8ArchKindERSt6vectorINS_9StringRefESaIS3_EE>
    2668:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    266c:	add	x0, x0, #0x0
    2670:	mov	w1, #0x7                   	// #7
    2674:	mov	w2, w21
    2678:	bl	0 <_ZN4llvm7AArch6420getDefaultExtensionsENS_9StringRefENS0_8ArchKindE>
    267c:	sub	x1, x29, #0x20
    2680:	bl	0 <_ZN4llvm7AArch6420getExtensionFeaturesEjRSt6vectorINS_9StringRefESaIS2_EE>
    2684:	mov	x0, x19
    2688:	bl	0 <_ZN4llvm17MCTargetAsmParser7copySTIEv>
    268c:	ldp	x1, x2, [x29, #-32]
    2690:	str	x0, [sp, #16]
    2694:	sub	x0, x29, #0x40
    2698:	stp	xzr, xzr, [x29, #-56]
    269c:	stur	xzr, [x29, #-64]
    26a0:	bl	0 <LLVMInitializeAArch64AsmParser>
    26a4:	ldp	x22, x23, [x29, #-64]
    26a8:	add	x20, x20, #0x10
    26ac:	stp	x20, xzr, [sp, #192]
    26b0:	strb	wzr, [sp, #208]
    26b4:	cmp	x22, x23
    26b8:	b.eq	272c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x614>  // b.none
    26bc:	sub	x8, x23, x22
    26c0:	ldr	x9, [x22, #8]
    26c4:	sub	x10, x8, #0x20
    26c8:	lsr	x10, x10, #5
    26cc:	add	x10, x10, #0x1
    26d0:	mul	x9, x9, x10
    26d4:	add	x8, x9, x8, asr #5
    26d8:	sub	x1, x8, #0x1
    26dc:	add	x0, sp, #0xc0
    26e0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    26e4:	ldp	x1, x2, [x22]
    26e8:	add	x0, sp, #0xc0
    26ec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    26f0:	add	x24, x22, #0x20
    26f4:	cmp	x24, x23
    26f8:	b.eq	272c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x614>  // b.none
    26fc:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    2700:	add	x22, x22, #0x0
    2704:	add	x0, sp, #0xc0
    2708:	mov	w2, #0x1                   	// #1
    270c:	mov	x1, x22
    2710:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>
    2714:	ldp	x1, x2, [x24]
    2718:	add	x0, sp, #0xc0
    271c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2720:	add	x24, x24, #0x20
    2724:	cmp	x24, x23
    2728:	b.ne	2704 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x5ec>  // b.any
    272c:	ldp	x3, x4, [sp, #192]
    2730:	ldr	x0, [sp, #16]
    2734:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2738:	add	x1, x1, #0x0
    273c:	mov	w2, #0x7                   	// #7
    2740:	bl	0 <_ZN4llvm15MCSubtargetInfo18setDefaultFeaturesENS_9StringRefES1_>
    2744:	ldr	x0, [sp, #192]
    2748:	cmp	x0, x20
    274c:	b.eq	2754 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x63c>  // b.none
    2750:	bl	0 <_ZdlPv>
    2754:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2758:	ldr	d0, [x8]
    275c:	ldr	x8, [sp, #152]
    2760:	add	x9, sp, #0xc0
    2764:	add	x9, x9, #0x10
    2768:	str	x9, [sp, #192]
    276c:	str	d0, [sp, #200]
    2770:	cbz	x8, 278c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x674>
    2774:	add	x0, sp, #0x90
    2778:	add	x1, sp, #0xc0
    277c:	mov	w2, #0x2b                  	// #43
    2780:	mov	w3, #0xffffffff            	// #-1
    2784:	mov	w4, #0x1                   	// #1
    2788:	bl	0 <_ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EEcib>
    278c:	add	x1, sp, #0xc0
    2790:	mov	w0, w21
    2794:	add	x20, sp, #0xc0
    2798:	bl	edb0 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE>
    279c:	ldr	x8, [sp, #16]
    27a0:	ldr	x21, [sp, #192]
    27a4:	ldur	q0, [x8, #184]
    27a8:	ldr	x9, [x8, #200]
    27ac:	ldr	w8, [sp, #200]
    27b0:	str	q0, [sp, #112]
    27b4:	str	x9, [sp, #128]
    27b8:	cbz	w8, 2968 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x850>
    27bc:	add	x27, x19, #0x18
    27c0:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
    27c4:	add	x8, x21, x8, lsl #4
    27c8:	add	x28, sp, #0x40
    27cc:	add	x20, sp, #0xa0
    27d0:	add	x19, x19, #0x0
    27d4:	str	x8, [sp, #24]
    27d8:	ldr	q0, [x21]
    27dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    27e0:	add	x0, sp, #0x60
    27e4:	mov	w2, #0x2                   	// #2
    27e8:	add	x1, x1, #0x0
    27ec:	str	q0, [sp, #96]
    27f0:	bl	0 <_ZNK4llvm9StringRef16startswith_lowerES0_>
    27f4:	tbz	w0, #0, 281c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x704>
    27f8:	ldp	x9, x8, [sp, #96]
    27fc:	mov	w10, #0x2                   	// #2
    2800:	mov	w26, wzr
    2804:	cmp	x8, #0x2
    2808:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    280c:	add	x22, x9, x10
    2810:	sub	x23, x8, x10
    2814:	stp	x22, x23, [sp, #96]
    2818:	b	2824 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x70c>
    281c:	ldp	x22, x23, [sp, #96]
    2820:	mov	w26, #0x1                   	// #1
    2824:	adrp	x25, 0 <LLVMInitializeAArch64AsmParser>
    2828:	add	x25, x25, #0x0
    282c:	ldr	x24, [x25]
    2830:	cbz	x24, 2840 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x728>
    2834:	mov	x0, x24
    2838:	bl	0 <strlen>
    283c:	b	2844 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x72c>
    2840:	mov	x0, xzr
    2844:	cmp	x0, x23
    2848:	b.ne	2864 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x74c>  // b.any
    284c:	cbz	x23, 2874 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x75c>
    2850:	mov	x0, x24
    2854:	mov	x1, x22
    2858:	mov	x2, x23
    285c:	bl	0 <bcmp>
    2860:	cbz	w0, 2874 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x75c>
    2864:	add	x25, x25, #0x20
    2868:	cmp	x25, x19
    286c:	b.ne	282c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x714>  // b.any
    2870:	b	2950 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x838>
    2874:	ldr	x8, [x25, #8]
    2878:	cbnz	x8, 288c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x774>
    287c:	ldr	x8, [x25, #16]
    2880:	cbnz	x8, 288c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x774>
    2884:	ldr	x8, [x25, #24]
    2888:	cbz	x8, 36e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x15c8>
    288c:	mov	x8, xzr
    2890:	cbz	w26, 28f4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x7dc>
    2894:	ldr	q0, [sp, #112]
    2898:	ldr	x9, [sp, #128]
    289c:	str	q0, [sp, #64]
    28a0:	str	x9, [sp, #80]
    28a4:	ldr	x9, [x28, x8]
    28a8:	mvn	x9, x9
    28ac:	str	x9, [x28, x8]
    28b0:	add	x8, x8, #0x8
    28b4:	cmp	x8, #0x18
    28b8:	b.ne	28a4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x78c>  // b.any
    28bc:	ldr	q0, [sp, #64]
    28c0:	ldr	x9, [sp, #80]
    28c4:	mov	x8, xzr
    28c8:	str	q0, [sp, #160]
    28cc:	str	x9, [sp, #176]
    28d0:	add	x9, x25, x8
    28d4:	ldr	x10, [x20, x8]
    28d8:	ldr	x9, [x9, #8]
    28dc:	and	x9, x10, x9
    28e0:	str	x9, [x20, x8]
    28e4:	add	x8, x8, #0x8
    28e8:	cmp	x8, #0x18
    28ec:	b.ne	28d0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x7b8>  // b.any
    28f0:	b	2924 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x80c>
    28f4:	ldr	q0, [sp, #112]
    28f8:	ldr	x9, [sp, #128]
    28fc:	str	q0, [sp, #160]
    2900:	str	x9, [sp, #176]
    2904:	add	x9, x25, x8
    2908:	ldr	x10, [x20, x8]
    290c:	ldr	x9, [x9, #8]
    2910:	and	x9, x10, x9
    2914:	str	x9, [x20, x8]
    2918:	add	x8, x8, #0x8
    291c:	cmp	x8, #0x18
    2920:	b.ne	2904 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x7ec>  // b.any
    2924:	ldr	x0, [sp, #16]
    2928:	add	x8, sp, #0x20
    292c:	add	x1, sp, #0xa0
    2930:	bl	0 <_ZN4llvm15MCSubtargetInfo13ToggleFeatureERKNS_13FeatureBitsetE>
    2934:	add	x8, sp, #0x40
    2938:	add	x0, sp, #0x20
    293c:	bl	204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
    2940:	ldr	x8, [sp, #80]
    2944:	ldr	q0, [sp, #64]
    2948:	str	x8, [x27, #16]
    294c:	str	q0, [x27]
    2950:	ldr	x8, [sp, #24]
    2954:	add	x21, x21, #0x10
    2958:	cmp	x21, x8
    295c:	b.ne	27d8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x6c0>  // b.any
    2960:	ldr	x21, [sp, #192]
    2964:	add	x20, sp, #0xc0
    2968:	add	x8, x20, #0x10
    296c:	cmp	x21, x8
    2970:	b.eq	297c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x864>  // b.none
    2974:	mov	x0, x21
    2978:	bl	0 <free>
    297c:	sub	x0, x29, #0x40
    2980:	bl	0 <LLVMInitializeAArch64AsmParser>
    2984:	ldur	x0, [x29, #-32]
    2988:	cbz	x0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    298c:	bl	0 <_ZdlPv>
    2990:	b	3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2994:	ldr	x0, [x24]
    2998:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    299c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    29a0:	stp	xzr, xzr, [sp, #64]
    29a4:	ldr	x8, [x24]
    29a8:	mov	x21, x0
    29ac:	ldr	x9, [x8]
    29b0:	mov	x0, x8
    29b4:	ldr	x9, [x9, #152]
    29b8:	blr	x9
    29bc:	stp	x0, x1, [x29, #-64]
    29c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    29c4:	add	x1, x1, #0x0
    29c8:	sub	x0, x29, #0x40
    29cc:	mov	w2, #0x6                   	// #6
    29d0:	bl	0 <LLVMInitializeAArch64AsmParser>
    29d4:	mov	w8, #0x2b                  	// #43
    29d8:	stp	x0, x1, [x29, #-32]
    29dc:	strb	w8, [sp, #160]
    29e0:	add	x8, sp, #0xc0
    29e4:	sub	x0, x29, #0x20
    29e8:	add	x1, sp, #0xa0
    29ec:	mov	w2, #0x1                   	// #1
    29f0:	bl	0 <LLVMInitializeAArch64AsmParser>
    29f4:	ldr	q0, [sp, #208]
    29f8:	ldp	x23, x22, [sp, #192]
    29fc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2a00:	add	x1, x1, #0x0
    2a04:	add	x0, sp, #0xc0
    2a08:	str	q0, [sp, #64]
    2a0c:	add	x20, sp, #0xc0
    2a10:	bl	0 <LLVMInitializeAArch64AsmParser>
    2a14:	ldr	x0, [x24]
    2a18:	add	x2, sp, #0xc0
    2a1c:	mov	w1, #0x9                   	// #9
    2a20:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2a24:	tbnz	w0, #0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2a28:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2a2c:	ldr	d0, [x8]
    2a30:	ldr	x8, [sp, #72]
    2a34:	add	x9, x20, #0x10
    2a38:	str	x9, [sp, #192]
    2a3c:	str	d0, [sp, #200]
    2a40:	cbz	x8, 2a5c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x944>
    2a44:	add	x0, sp, #0x40
    2a48:	add	x1, sp, #0xc0
    2a4c:	mov	w2, #0x2b                  	// #43
    2a50:	mov	w3, #0xffffffff            	// #-1
    2a54:	mov	w4, #0x1                   	// #1
    2a58:	bl	0 <_ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EEcib>
    2a5c:	mov	x0, x19
    2a60:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    2a64:	mov	x1, x23
    2a68:	mov	x2, x22
    2a6c:	bl	0 <LLVMInitializeAArch64AsmParser>
    2a70:	tbz	w0, #0, 2da0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc88>
    2a74:	mov	x0, x19
    2a78:	str	x24, [sp, #8]
    2a7c:	bl	0 <_ZN4llvm17MCTargetAsmParser7copySTIEv>
    2a80:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    2a84:	add	x3, x3, #0x0
    2a88:	mov	x1, x23
    2a8c:	mov	x2, x22
    2a90:	mov	x4, xzr
    2a94:	mov	x20, x0
    2a98:	bl	0 <_ZN4llvm15MCSubtargetInfo18setDefaultFeaturesENS_9StringRefES1_>
    2a9c:	mov	x0, x23
    2aa0:	mov	x1, x22
    2aa4:	bl	0 <_ZN4llvm7AArch6414getCPUArchKindENS_9StringRefE>
    2aa8:	add	x1, sp, #0xc0
    2aac:	bl	edb0 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE>
    2ab0:	ldur	q0, [x20, #184]
    2ab4:	ldr	x8, [x20, #200]
    2ab8:	ldr	w9, [sp, #200]
    2abc:	str	x20, [sp, #16]
    2ac0:	str	q0, [sp, #112]
    2ac4:	str	x8, [sp, #128]
    2ac8:	cbz	w9, 2dc8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcb0>
    2acc:	ldr	x27, [sp, #192]
    2ad0:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    2ad4:	add	x8, x21, w22, sxtw
    2ad8:	add	x10, x19, #0x18
    2adc:	sub	x19, x29, #0x40
    2ae0:	sub	x21, x29, #0x20
    2ae4:	add	x20, x20, #0x0
    2ae8:	add	x9, x27, x9, lsl #4
    2aec:	str	x10, [sp]
    2af0:	str	x9, [sp, #24]
    2af4:	ldr	q0, [x27]
    2af8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2afc:	add	x0, sp, #0x20
    2b00:	mov	w2, #0x2                   	// #2
    2b04:	add	x1, x1, #0x0
    2b08:	str	q0, [sp, #32]
    2b0c:	add	x22, x8, #0x1
    2b10:	bl	0 <_ZNK4llvm9StringRef16startswith_lowerES0_>
    2b14:	tbz	w0, #0, 2b3c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa24>
    2b18:	ldp	x9, x8, [sp, #32]
    2b1c:	mov	w10, #0x2                   	// #2
    2b20:	mov	w26, wzr
    2b24:	cmp	x8, #0x2
    2b28:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    2b2c:	add	x23, x9, x10
    2b30:	sub	x24, x8, x10
    2b34:	stp	x23, x24, [sp, #32]
    2b38:	b	2b44 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa2c>
    2b3c:	ldp	x23, x24, [sp, #32]
    2b40:	mov	w26, #0x1                   	// #1
    2b44:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    2b48:	add	x28, x28, #0x0
    2b4c:	ldr	x25, [x28]
    2b50:	cbz	x25, 2b60 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa48>
    2b54:	mov	x0, x25
    2b58:	bl	0 <strlen>
    2b5c:	b	2b64 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa4c>
    2b60:	mov	x0, xzr
    2b64:	cmp	x0, x24
    2b68:	b.ne	2b84 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa6c>  // b.any
    2b6c:	cbz	x24, 2bc0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xaa8>
    2b70:	mov	x0, x25
    2b74:	mov	x1, x23
    2b78:	mov	x2, x24
    2b7c:	bl	0 <bcmp>
    2b80:	cbz	w0, 2bc0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xaa8>
    2b84:	add	x28, x28, #0x20
    2b88:	cmp	x28, x20
    2b8c:	b.ne	2b4c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa34>  // b.any
    2b90:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2b94:	sub	x0, x29, #0x20
    2b98:	add	x1, x1, #0x0
    2b9c:	bl	0 <LLVMInitializeAArch64AsmParser>
    2ba0:	ldr	x8, [sp, #8]
    2ba4:	sub	x2, x29, #0x20
    2ba8:	mov	x1, x22
    2bac:	mov	x3, xzr
    2bb0:	ldr	x0, [x8]
    2bb4:	mov	x4, xzr
    2bb8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    2bbc:	b	2ca0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xb88>
    2bc0:	ldr	x8, [x28, #8]
    2bc4:	cbnz	x8, 2bd8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xac0>
    2bc8:	ldr	x8, [x28, #16]
    2bcc:	cbnz	x8, 2bd8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xac0>
    2bd0:	ldr	x8, [x28, #24]
    2bd4:	cbz	x8, 36fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x15e4>
    2bd8:	mov	x8, xzr
    2bdc:	cbz	w26, 2c40 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xb28>
    2be0:	ldr	q0, [sp, #112]
    2be4:	ldr	x9, [sp, #128]
    2be8:	stur	q0, [x29, #-64]
    2bec:	stur	x9, [x29, #-48]
    2bf0:	ldr	x9, [x19, x8]
    2bf4:	mvn	x9, x9
    2bf8:	str	x9, [x19, x8]
    2bfc:	add	x8, x8, #0x8
    2c00:	cmp	x8, #0x18
    2c04:	b.ne	2bf0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xad8>  // b.any
    2c08:	ldur	q0, [x29, #-64]
    2c0c:	ldur	x9, [x29, #-48]
    2c10:	mov	x8, xzr
    2c14:	stur	q0, [x29, #-32]
    2c18:	stur	x9, [x29, #-16]
    2c1c:	add	x9, x28, x8
    2c20:	ldr	x10, [x21, x8]
    2c24:	ldr	x9, [x9, #8]
    2c28:	and	x9, x10, x9
    2c2c:	str	x9, [x21, x8]
    2c30:	add	x8, x8, #0x8
    2c34:	cmp	x8, #0x18
    2c38:	b.ne	2c1c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xb04>  // b.any
    2c3c:	b	2c70 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xb58>
    2c40:	ldr	q0, [sp, #112]
    2c44:	ldr	x9, [sp, #128]
    2c48:	stur	q0, [x29, #-32]
    2c4c:	stur	x9, [x29, #-16]
    2c50:	add	x9, x28, x8
    2c54:	ldr	x10, [x21, x8]
    2c58:	ldr	x9, [x9, #8]
    2c5c:	and	x9, x10, x9
    2c60:	str	x9, [x21, x8]
    2c64:	add	x8, x8, #0x8
    2c68:	cmp	x8, #0x18
    2c6c:	b.ne	2c50 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xb38>  // b.any
    2c70:	ldr	x0, [sp, #16]
    2c74:	add	x8, sp, #0xa0
    2c78:	sub	x1, x29, #0x20
    2c7c:	bl	0 <_ZN4llvm15MCSubtargetInfo13ToggleFeatureERKNS_13FeatureBitsetE>
    2c80:	sub	x8, x29, #0x40
    2c84:	add	x0, sp, #0xa0
    2c88:	bl	204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
    2c8c:	ldur	x8, [x29, #-48]
    2c90:	ldur	q0, [x29, #-64]
    2c94:	ldr	x9, [sp]
    2c98:	str	x8, [x9, #16]
    2c9c:	str	q0, [x9]
    2ca0:	ldrsw	x8, [sp, #40]
    2ca4:	ldr	x9, [sp, #24]
    2ca8:	add	x27, x27, #0x10
    2cac:	add	x8, x22, x8
    2cb0:	cmp	x27, x9
    2cb4:	b.ne	2af4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x9dc>  // b.any
    2cb8:	b	2dc8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcb0>
    2cbc:	ldr	x0, [x24]
    2cc0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2cc4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    2cc8:	ldr	x8, [x24]
    2ccc:	mov	x20, x0
    2cd0:	ldr	x9, [x8]
    2cd4:	mov	x0, x8
    2cd8:	ldr	x9, [x9, #152]
    2cdc:	blr	x9
    2ce0:	stp	x0, x1, [sp, #192]
    2ce4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2ce8:	add	x1, x1, #0x0
    2cec:	add	x0, sp, #0xc0
    2cf0:	mov	w2, #0x6                   	// #6
    2cf4:	bl	0 <LLVMInitializeAArch64AsmParser>
    2cf8:	stp	x0, x1, [sp, #160]
    2cfc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2d00:	add	x1, x1, #0x0
    2d04:	add	x0, sp, #0xc0
    2d08:	bl	0 <LLVMInitializeAArch64AsmParser>
    2d0c:	ldr	x0, [x24]
    2d10:	add	x2, sp, #0xc0
    2d14:	mov	w1, #0x9                   	// #9
    2d18:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2d1c:	tbnz	w0, #0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2d20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2d24:	add	x1, x1, #0x0
    2d28:	add	x0, sp, #0xa0
    2d2c:	mov	w2, #0x2                   	// #2
    2d30:	bl	0 <_ZNK4llvm9StringRef16startswith_lowerES0_>
    2d34:	mov	x26, x24
    2d38:	tbz	w0, #0, 2de4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xccc>
    2d3c:	ldp	x9, x8, [sp, #160]
    2d40:	mov	w10, #0x2                   	// #2
    2d44:	mov	w28, wzr
    2d48:	cmp	x8, #0x2
    2d4c:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    2d50:	add	x9, x9, x10
    2d54:	sub	x8, x8, x10
    2d58:	stp	x9, x8, [sp, #160]
    2d5c:	b	2de8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcd0>
    2d60:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2d64:	add	x1, x1, #0x0
    2d68:	add	x0, sp, #0xc0
    2d6c:	bl	0 <LLVMInitializeAArch64AsmParser>
    2d70:	ldr	x0, [x24]
    2d74:	b	2e70 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd58>
    2d78:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2d7c:	add	x1, x1, #0x0
    2d80:	add	x0, sp, #0xc0
    2d84:	bl	0 <LLVMInitializeAArch64AsmParser>
    2d88:	ldr	x0, [x24]
    2d8c:	add	x1, sp, #0xc0
    2d90:	mov	x2, xzr
    2d94:	mov	x3, xzr
    2d98:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    2d9c:	b	3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2da0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2da4:	add	x1, x1, #0x0
    2da8:	sub	x0, x29, #0x20
    2dac:	bl	0 <LLVMInitializeAArch64AsmParser>
    2db0:	ldr	x0, [x24]
    2db4:	sub	x2, x29, #0x20
    2db8:	mov	x1, x21
    2dbc:	mov	x3, xzr
    2dc0:	mov	x4, xzr
    2dc4:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    2dc8:	ldr	x0, [sp, #192]
    2dcc:	add	x8, sp, #0xc0
    2dd0:	add	x8, x8, #0x10
    2dd4:	cmp	x0, x8
    2dd8:	b.eq	3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>  // b.none
    2ddc:	bl	0 <free>
    2de0:	b	3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2de4:	mov	w28, #0x1                   	// #1
    2de8:	mov	x0, x19
    2dec:	bl	0 <_ZN4llvm17MCTargetAsmParser7copySTIEv>
    2df0:	ldr	x8, [x0, #200]
    2df4:	ldur	q0, [x0, #184]
    2df8:	ldp	x22, x23, [sp, #160]
    2dfc:	adrp	x27, 0 <LLVMInitializeAArch64AsmParser>
    2e00:	mov	x21, x0
    2e04:	mov	x25, xzr
    2e08:	add	x27, x27, #0x0
    2e0c:	str	x8, [sp, #128]
    2e10:	str	q0, [sp, #112]
    2e14:	ldr	x24, [x27, x25]
    2e18:	cbz	x24, 2e28 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd10>
    2e1c:	mov	x0, x24
    2e20:	bl	0 <strlen>
    2e24:	b	2e2c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd14>
    2e28:	mov	x0, xzr
    2e2c:	cmp	x0, x23
    2e30:	b.ne	2e4c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd34>  // b.any
    2e34:	cbz	x23, 2e88 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd70>
    2e38:	mov	x0, x24
    2e3c:	mov	x1, x22
    2e40:	mov	x2, x23
    2e44:	bl	0 <bcmp>
    2e48:	cbz	w0, 2e88 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd70>
    2e4c:	add	x25, x25, #0x20
    2e50:	cmp	x25, #0x340
    2e54:	b.ne	2e14 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcfc>  // b.any
    2e58:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2e5c:	add	x1, x1, #0x0
    2e60:	add	x0, sp, #0xc0
    2e64:	add	x2, sp, #0xa0
    2e68:	bl	0 <LLVMInitializeAArch64AsmParser>
    2e6c:	ldr	x0, [x26]
    2e70:	add	x2, sp, #0xc0
    2e74:	mov	x1, x20
    2e78:	mov	x3, xzr
    2e7c:	mov	x4, xzr
    2e80:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    2e84:	b	3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2e88:	add	x8, x27, x25
    2e8c:	ldr	x9, [x8, #8]
    2e90:	cbnz	x9, 2ea8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd90>
    2e94:	ldr	x8, [x8, #16]
    2e98:	cbnz	x8, 2ea8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd90>
    2e9c:	add	x8, x27, x25
    2ea0:	ldr	x8, [x8, #24]
    2ea4:	cbz	x8, 32c8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11b0>
    2ea8:	mov	x8, xzr
    2eac:	cbz	w28, 300c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xef4>
    2eb0:	ldr	x9, [sp, #128]
    2eb4:	ldr	q0, [sp, #112]
    2eb8:	stur	x9, [x29, #-16]
    2ebc:	sub	x9, x29, #0x20
    2ec0:	stur	q0, [x29, #-32]
    2ec4:	ldr	x10, [x9, x8]
    2ec8:	mvn	x10, x10
    2ecc:	str	x10, [x9, x8]
    2ed0:	add	x8, x8, #0x8
    2ed4:	cmp	x8, #0x18
    2ed8:	b.ne	2ec4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdac>  // b.any
    2edc:	ldur	x9, [x29, #-16]
    2ee0:	ldur	q0, [x29, #-32]
    2ee4:	mov	x8, xzr
    2ee8:	str	x9, [sp, #208]
    2eec:	add	x9, sp, #0xc0
    2ef0:	str	q0, [sp, #192]
    2ef4:	add	x10, x27, x8
    2ef8:	add	x10, x10, x25
    2efc:	ldr	x11, [x9, x8]
    2f00:	ldr	x10, [x10, #8]
    2f04:	and	x10, x11, x10
    2f08:	str	x10, [x9, x8]
    2f0c:	add	x8, x8, #0x8
    2f10:	cmp	x8, #0x18
    2f14:	b.ne	2ef4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xddc>  // b.any
    2f18:	b	3044 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf2c>
    2f1c:	stur	x19, [x29, #-32]
    2f20:	ldr	x0, [x19, #8]
    2f24:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2f28:	add	x1, x1, #0x0
    2f2c:	sub	x2, x29, #0x20
    2f30:	mov	w3, #0x1                   	// #1
    2f34:	bl	0 <_ZN4llvm11MCAsmParser9parseManyENS_12function_refIFbvEEEb>
    2f38:	tbz	w0, #0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2f3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2f40:	add	x1, x1, #0x0
    2f44:	b	2ff4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xedc>
    2f48:	mov	x0, x8
    2f4c:	bl	0 <LLVMInitializeAArch64AsmParser>
    2f50:	stp	x0, x1, [x29, #-32]
    2f54:	add	x8, sp, #0xc0
    2f58:	sub	x0, x29, #0x20
    2f5c:	add	x22, sp, #0xc0
    2f60:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    2f64:	ldp	x1, x2, [sp, #192]
    2f68:	mov	x0, x21
    2f6c:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    2f70:	cmn	w0, #0x1
    2f74:	b.eq	2fa4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe8c>  // b.none
    2f78:	ldr	w9, [x19, #200]
    2f7c:	sxtw	x8, w0
    2f80:	cmp	x8, x9
    2f84:	b.eq	2fa4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe8c>  // b.none
    2f88:	ldr	x9, [x21]
    2f8c:	mov	x0, x21
    2f90:	ldr	x19, [x9, x8, lsl #3]
    2f94:	mov	x1, x19
    2f98:	bl	0 <_ZN4llvm13StringMapImpl9RemoveKeyEPNS_18StringMapEntryBaseE>
    2f9c:	mov	x0, x19
    2fa0:	bl	0 <free>
    2fa4:	ldr	x0, [sp, #192]
    2fa8:	add	x8, x22, #0x10
    2fac:	cmp	x0, x8
    2fb0:	b.eq	2fb8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xea0>  // b.none
    2fb4:	bl	0 <_ZdlPv>
    2fb8:	ldr	x8, [x20]
    2fbc:	mov	x0, x20
    2fc0:	ldr	x8, [x8, #136]
    2fc4:	blr	x8
    2fc8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2fcc:	add	x1, x1, #0x0
    2fd0:	add	x0, sp, #0xc0
    2fd4:	bl	0 <LLVMInitializeAArch64AsmParser>
    2fd8:	ldr	x0, [x24]
    2fdc:	add	x2, sp, #0xc0
    2fe0:	mov	w1, #0x9                   	// #9
    2fe4:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2fe8:	tbz	w0, #0, 3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    2fec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2ff0:	add	x1, x1, #0x0
    2ff4:	add	x0, sp, #0xc0
    2ff8:	bl	0 <LLVMInitializeAArch64AsmParser>
    2ffc:	ldr	x0, [x24]
    3000:	add	x1, sp, #0xc0
    3004:	bl	0 <_ZN4llvm11MCAsmParser14addErrorSuffixERKNS_5TwineE>
    3008:	b	3070 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>
    300c:	ldr	x9, [sp, #128]
    3010:	ldr	q0, [sp, #112]
    3014:	str	x9, [sp, #208]
    3018:	add	x9, sp, #0xc0
    301c:	str	q0, [sp, #192]
    3020:	add	x10, x27, x8
    3024:	add	x10, x10, x25
    3028:	ldr	x11, [x9, x8]
    302c:	ldr	x10, [x10, #8]
    3030:	and	x10, x11, x10
    3034:	str	x10, [x9, x8]
    3038:	add	x8, x8, #0x8
    303c:	cmp	x8, #0x18
    3040:	b.ne	3020 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf08>  // b.any
    3044:	sub	x8, x29, #0x40
    3048:	add	x1, sp, #0xc0
    304c:	mov	x0, x21
    3050:	bl	0 <_ZN4llvm15MCSubtargetInfo13ToggleFeatureERKNS_13FeatureBitsetE>
    3054:	sub	x8, x29, #0x20
    3058:	sub	x0, x29, #0x40
    305c:	bl	204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
    3060:	ldur	x8, [x29, #-16]
    3064:	ldur	q0, [x29, #-32]
    3068:	str	x8, [x19, #40]
    306c:	stur	q0, [x19, #24]
    3070:	mov	w0, wzr
    3074:	add	sp, sp, #0x1a0
    3078:	ldp	x20, x19, [sp, #80]
    307c:	ldp	x22, x21, [sp, #64]
    3080:	ldp	x24, x23, [sp, #48]
    3084:	ldp	x26, x25, [sp, #32]
    3088:	ldp	x28, x27, [sp, #16]
    308c:	ldp	x29, x30, [sp], #96
    3090:	ret
    3094:	cmp	w9, #0x4
    3098:	b.ne	314c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1034>  // b.any
    309c:	ldr	x0, [x24]
    30a0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    30a4:	bl	0 <LLVMInitializeAArch64AsmParser>
    30a8:	mov	w8, #0xffffffff            	// #-1
    30ac:	mov	x19, x0
    30b0:	cmp	x0, x8
    30b4:	b.gt	3158 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1040>
    30b8:	sub	w8, w19, #0x1
    30bc:	cmp	w8, #0x8
    30c0:	b.cc	3158 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1040>  // b.lo, b.ul, b.last
    30c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    30c8:	add	x1, x1, #0x0
    30cc:	b	2d80 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc68>
    30d0:	mov	x0, x8
    30d4:	bl	0 <LLVMInitializeAArch64AsmParser>
    30d8:	sub	x8, x1, #0x7
    30dc:	cmp	x8, #0x6
    30e0:	b.hi	32bc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11a4>  // b.pmore
    30e4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    30e8:	add	x9, x9, #0x0
    30ec:	adr	x10, 30fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xfe4>
    30f0:	ldrb	w11, [x9, x8]
    30f4:	add	x10, x10, x11, lsl #2
    30f8:	br	x10
    30fc:	ldr	w9, [x0]
    3100:	ldur	w10, [x0, #3]
    3104:	mov	w8, #0x6441                	// #25665
    3108:	mov	w11, #0x4c70                	// #19568
    310c:	movk	w8, #0x7072, lsl #16
    3110:	movk	w11, #0x7264, lsl #16
    3114:	eor	w9, w9, w8
    3118:	eor	w10, w10, w11
    311c:	orr	w9, w9, w10
    3120:	cbz	w9, 32dc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11c4>
    3124:	ldr	w9, [x0]
    3128:	ldur	w10, [x0, #3]
    312c:	mov	w11, #0x4170                	// #16752
    3130:	movk	w11, #0x6464, lsl #16
    3134:	eor	w8, w9, w8
    3138:	eor	w9, w10, w11
    313c:	orr	w8, w8, w9
    3140:	cbnz	w8, 32bc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11a4>
    3144:	mov	w19, #0x7                   	// #7
    3148:	b	32e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11c8>
    314c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3150:	add	x1, x1, #0x0
    3154:	b	2d80 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc68>
    3158:	ldr	x0, [x24]
    315c:	ldr	x8, [x0]
    3160:	ldr	x8, [x8, #136]
    3164:	blr	x8
    3168:	cmp	w19, #0x8
    316c:	b.hi	318c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1074>  // b.pmore
    3170:	mov	w8, #0x1                   	// #1
    3174:	lsl	w8, w8, w19
    3178:	tst	w8, #0x78
    317c:	b.ne	331c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1204>  // b.any
    3180:	mov	w9, #0x186                 	// #390
    3184:	tst	w8, w9
    3188:	b.ne	32f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11d8>  // b.any
    318c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3190:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3194:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3198:	add	x0, x0, #0x0
    319c:	add	x1, x1, #0x0
    31a0:	add	x3, x3, #0x0
    31a4:	mov	w2, #0x14e5                	// #5349
    31a8:	bl	0 <__assert_fail>
    31ac:	ldr	x8, [x0]
    31b0:	ldrh	w9, [x0, #8]
    31b4:	mov	x10, #0x6441                	// #25665
    31b8:	movk	x10, #0x7072, lsl #16
    31bc:	movk	x10, #0x6441, lsl #32
    31c0:	movk	x10, #0x4c64, lsl #48
    31c4:	mov	w11, #0x7264                	// #29284
    31c8:	eor	x8, x8, x10
    31cc:	eor	x9, x9, x11
    31d0:	orr	x8, x8, x9
    31d4:	cbz	x8, 32d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11bc>
    31d8:	ldr	x8, [x0]
    31dc:	ldrh	w9, [x0, #8]
    31e0:	mov	x10, #0x6441                	// #25665
    31e4:	movk	x10, #0x7072, lsl #16
    31e8:	movk	x10, #0x6441, lsl #32
    31ec:	movk	x10, #0x5364, lsl #48
    31f0:	mov	w11, #0x7274                	// #29300
    31f4:	eor	x8, x8, x10
    31f8:	eor	x9, x9, x11
    31fc:	orr	x8, x8, x9
    3200:	cbz	x8, 3300 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11e8>
    3204:	ldr	x8, [x0]
    3208:	ldrh	w9, [x0, #8]
    320c:	mov	x10, #0x6441                	// #25665
    3210:	movk	x10, #0x7072, lsl #16
    3214:	movk	x10, #0x644c, lsl #32
    3218:	movk	x10, #0x4772, lsl #48
    321c:	mov	w11, #0x746f                	// #29807
    3220:	eor	x8, x8, x10
    3224:	eor	x9, x9, x11
    3228:	orr	x8, x8, x9
    322c:	cbnz	x8, 32bc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11a4>
    3230:	mov	w19, #0x8                   	// #8
    3234:	b	32e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11c8>
    3238:	ldr	x8, [x0]
    323c:	mov	x9, #0x6441                	// #25665
    3240:	movk	x9, #0x7072, lsl #16
    3244:	movk	x9, #0x6441, lsl #32
    3248:	movk	x9, #0x7072, lsl #48
    324c:	cmp	x8, x9
    3250:	b.ne	32bc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11a4>  // b.any
    3254:	mov	w19, #0x1                   	// #1
    3258:	b	32e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11c8>
    325c:	ldr	x9, [x0]
    3260:	ldur	x10, [x0, #5]
    3264:	mov	x8, #0x6441                	// #25665
    3268:	mov	x11, #0x7264                	// #29284
    326c:	movk	x8, #0x7072, lsl #16
    3270:	movk	x11, #0x6f47, lsl #16
    3274:	movk	x8, #0x644c, lsl #32
    3278:	movk	x11, #0x4c74, lsl #32
    327c:	movk	x8, #0x4772, lsl #48
    3280:	movk	x11, #0x7264, lsl #48
    3284:	eor	x9, x9, x8
    3288:	eor	x10, x10, x11
    328c:	orr	x9, x9, x10
    3290:	cbz	x9, 32f8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11e0>
    3294:	ldr	x9, [x0]
    3298:	ldur	x10, [x0, #5]
    329c:	mov	x11, #0x7264                	// #29284
    32a0:	movk	x11, #0x6f47, lsl #16
    32a4:	movk	x11, #0x5374, lsl #32
    32a8:	movk	x11, #0x7274, lsl #48
    32ac:	eor	x8, x9, x8
    32b0:	eor	x9, x10, x11
    32b4:	orr	x8, x8, x9
    32b8:	cbz	x8, 3308 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11f0>
    32bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    32c0:	add	x1, x1, #0x0
    32c4:	b	2d80 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc68>
    32c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    32cc:	add	x1, x1, #0x0
    32d0:	b	2e60 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd48>
    32d4:	mov	w19, #0x3                   	// #3
    32d8:	b	330c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11f4>
    32dc:	mov	w19, #0x2                   	// #2
    32e0:	ldr	x0, [x24]
    32e4:	ldr	x8, [x0]
    32e8:	ldr	x8, [x8, #136]
    32ec:	blr	x8
    32f0:	mov	w23, #0x2                   	// #2
    32f4:	b	3320 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1208>
    32f8:	mov	w19, #0x4                   	// #4
    32fc:	b	330c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11f4>
    3300:	mov	w19, #0x5                   	// #5
    3304:	b	330c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11f4>
    3308:	mov	w19, #0x6                   	// #6
    330c:	ldr	x0, [x24]
    3310:	ldr	x8, [x0]
    3314:	ldr	x8, [x8, #136]
    3318:	blr	x8
    331c:	mov	w23, #0x3                   	// #3
    3320:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3324:	ldr	d0, [x8]
    3328:	add	x8, sp, #0xc0
    332c:	add	x8, x8, #0x10
    3330:	str	x8, [sp, #192]
    3334:	str	d0, [sp, #200]
    3338:	stp	xzr, xzr, [sp, #144]
    333c:	ldr	x0, [x24]
    3340:	add	x1, sp, #0x90
    3344:	ldr	x8, [x0]
    3348:	ldr	x8, [x8, #144]
    334c:	blr	x8
    3350:	mov	x22, x24
    3354:	tbnz	w0, #0, 3518 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1400>
    3358:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    335c:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
    3360:	add	x20, x20, #0x0
    3364:	add	x27, sp, #0x70
    3368:	mov	w28, #0x100                 	// #256
    336c:	add	x21, x21, #0x0
    3370:	add	x24, sp, #0x40
    3374:	mov	w25, #0x2                   	// #2
    3378:	ldr	x0, [x22]
    337c:	mov	x26, x22
    3380:	ldr	x8, [x0]
    3384:	ldr	x8, [x8, #48]
    3388:	blr	x8
    338c:	mov	x22, x0
    3390:	sub	x0, x29, #0x20
    3394:	add	x1, sp, #0x90
    3398:	bl	0 <LLVMInitializeAArch64AsmParser>
    339c:	sub	x1, x29, #0x20
    33a0:	mov	x0, x22
    33a4:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
    33a8:	stur	x0, [x29, #-64]
    33ac:	add	x0, sp, #0xc0
    33b0:	sub	x1, x29, #0x40
    33b4:	bl	0 <LLVMInitializeAArch64AsmParser>
    33b8:	subs	w23, w23, #0x1
    33bc:	b.eq	3540 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1428>  // b.none
    33c0:	add	x0, sp, #0xa0
    33c4:	mov	x1, x20
    33c8:	bl	0 <LLVMInitializeAArch64AsmParser>
    33cc:	add	x0, sp, #0x70
    33d0:	add	x1, sp, #0x20
    33d4:	bl	0 <LLVMInitializeAArch64AsmParser>
    33d8:	ldrb	w8, [sp, #176]
    33dc:	cbz	w8, 33fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x12e4>
    33e0:	ldrb	w9, [sp, #128]
    33e4:	cbz	w9, 33fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x12e4>
    33e8:	cmp	w8, #0x1
    33ec:	b.ne	3408 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x12f0>  // b.any
    33f0:	ldr	q0, [sp, #112]
    33f4:	ldr	x8, [sp, #128]
    33f8:	b	3418 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1300>
    33fc:	stp	xzr, xzr, [x29, #-64]
    3400:	sturh	w28, [x29, #-48]
    3404:	b	3458 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1340>
    3408:	cmp	w9, #0x1
    340c:	b.ne	3424 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x130c>  // b.any
    3410:	ldr	q0, [sp, #160]
    3414:	ldr	x8, [sp, #176]
    3418:	stur	q0, [x29, #-64]
    341c:	stur	x8, [x29, #-48]
    3420:	b	3458 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1340>
    3424:	ldrb	w10, [sp, #177]
    3428:	ldr	x11, [sp, #160]
    342c:	ldrb	w12, [sp, #129]
    3430:	ldr	x13, [sp, #112]
    3434:	cmp	w10, #0x1
    3438:	csel	w2, w8, w25, eq  // eq = none
    343c:	add	x8, sp, #0xa0
    3440:	csel	x1, x11, x8, eq  // eq = none
    3444:	cmp	w12, #0x1
    3448:	csel	w4, w9, w25, eq  // eq = none
    344c:	csel	x3, x13, x27, eq  // eq = none
    3450:	sub	x0, x29, #0x40
    3454:	bl	0 <LLVMInitializeAArch64AsmParser>
    3458:	add	x0, sp, #0x40
    345c:	mov	x1, x21
    3460:	bl	0 <LLVMInitializeAArch64AsmParser>
    3464:	ldurb	w8, [x29, #-48]
    3468:	cbz	w8, 3488 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1370>
    346c:	ldrb	w9, [sp, #80]
    3470:	cbz	w9, 3488 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1370>
    3474:	cmp	w8, #0x1
    3478:	b.ne	3494 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x137c>  // b.any
    347c:	ldr	q0, [sp, #64]
    3480:	ldr	x8, [sp, #80]
    3484:	b	34a4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x138c>
    3488:	stp	xzr, xzr, [x29, #-32]
    348c:	sturh	w28, [x29, #-16]
    3490:	b	34e4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x13cc>
    3494:	cmp	w9, #0x1
    3498:	b.ne	34b0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1398>  // b.any
    349c:	ldur	q0, [x29, #-64]
    34a0:	ldur	x8, [x29, #-48]
    34a4:	stur	q0, [x29, #-32]
    34a8:	stur	x8, [x29, #-16]
    34ac:	b	34e4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x13cc>
    34b0:	ldurb	w10, [x29, #-47]
    34b4:	ldur	x11, [x29, #-64]
    34b8:	ldrb	w12, [sp, #81]
    34bc:	ldr	x13, [sp, #64]
    34c0:	cmp	w10, #0x1
    34c4:	csel	w2, w8, w25, eq  // eq = none
    34c8:	sub	x8, x29, #0x40
    34cc:	csel	x1, x11, x8, eq  // eq = none
    34d0:	cmp	w12, #0x1
    34d4:	csel	w4, w9, w25, eq  // eq = none
    34d8:	csel	x3, x13, x24, eq  // eq = none
    34dc:	sub	x0, x29, #0x20
    34e0:	bl	0 <LLVMInitializeAArch64AsmParser>
    34e4:	ldr	x0, [x26]
    34e8:	sub	x2, x29, #0x20
    34ec:	mov	w1, #0x19                  	// #25
    34f0:	mov	x22, x26
    34f4:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    34f8:	tbnz	w0, #0, 2dc8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcb0>
    34fc:	stp	xzr, xzr, [sp, #144]
    3500:	ldr	x0, [x22]
    3504:	add	x1, sp, #0x90
    3508:	ldr	x8, [x0]
    350c:	ldr	x8, [x8, #144]
    3510:	blr	x8
    3514:	tbz	w0, #0, 3378 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1260>
    3518:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    351c:	add	x1, x1, #0x0
    3520:	sub	x0, x29, #0x20
    3524:	bl	0 <LLVMInitializeAArch64AsmParser>
    3528:	ldr	x0, [x22]
    352c:	sub	x1, x29, #0x20
    3530:	mov	x2, xzr
    3534:	mov	x3, xzr
    3538:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    353c:	b	2dc8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcb0>
    3540:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3544:	add	x1, x1, #0x0
    3548:	add	x0, sp, #0xa0
    354c:	bl	0 <LLVMInitializeAArch64AsmParser>
    3550:	add	x0, sp, #0x70
    3554:	add	x1, sp, #0x20
    3558:	bl	0 <LLVMInitializeAArch64AsmParser>
    355c:	ldrb	w8, [sp, #176]
    3560:	cbz	w8, 3580 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1468>
    3564:	ldrb	w9, [sp, #128]
    3568:	cbz	w9, 3580 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1468>
    356c:	cmp	w8, #0x1
    3570:	b.ne	3590 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1478>  // b.any
    3574:	ldr	q0, [sp, #112]
    3578:	ldr	x8, [sp, #128]
    357c:	b	35a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1488>
    3580:	mov	w8, #0x100                 	// #256
    3584:	stp	xzr, xzr, [x29, #-64]
    3588:	sturh	w8, [x29, #-48]
    358c:	b	35e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x14d0>
    3590:	cmp	w9, #0x1
    3594:	b.ne	35ac <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1494>  // b.any
    3598:	ldr	q0, [sp, #160]
    359c:	ldr	x8, [sp, #176]
    35a0:	stur	q0, [x29, #-64]
    35a4:	stur	x8, [x29, #-48]
    35a8:	b	35e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x14d0>
    35ac:	ldrb	w10, [sp, #177]
    35b0:	ldr	x11, [sp, #160]
    35b4:	ldrb	w14, [sp, #129]
    35b8:	ldr	x15, [sp, #112]
    35bc:	mov	w12, #0x2                   	// #2
    35c0:	add	x13, sp, #0xa0
    35c4:	cmp	w10, #0x1
    35c8:	add	x16, sp, #0x70
    35cc:	csel	w2, w8, w12, eq  // eq = none
    35d0:	csel	x1, x11, x13, eq  // eq = none
    35d4:	cmp	w14, #0x1
    35d8:	csel	w4, w9, w12, eq  // eq = none
    35dc:	csel	x3, x15, x16, eq  // eq = none
    35e0:	sub	x0, x29, #0x40
    35e4:	bl	0 <LLVMInitializeAArch64AsmParser>
    35e8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    35ec:	add	x1, x1, #0x0
    35f0:	add	x0, sp, #0x40
    35f4:	bl	0 <LLVMInitializeAArch64AsmParser>
    35f8:	ldurb	w8, [x29, #-48]
    35fc:	cbz	w8, 361c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1504>
    3600:	ldrb	w9, [sp, #80]
    3604:	cbz	w9, 361c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1504>
    3608:	cmp	w8, #0x1
    360c:	b.ne	362c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1514>  // b.any
    3610:	ldr	q0, [sp, #64]
    3614:	ldr	x8, [sp, #80]
    3618:	b	363c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1524>
    361c:	mov	w8, #0x100                 	// #256
    3620:	stp	xzr, xzr, [x29, #-32]
    3624:	sturh	w8, [x29, #-16]
    3628:	b	3684 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x156c>
    362c:	cmp	w9, #0x1
    3630:	b.ne	3648 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1530>  // b.any
    3634:	ldur	q0, [x29, #-64]
    3638:	ldur	x8, [x29, #-48]
    363c:	stur	q0, [x29, #-32]
    3640:	stur	x8, [x29, #-16]
    3644:	b	3684 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x156c>
    3648:	ldurb	w10, [x29, #-47]
    364c:	ldur	x11, [x29, #-64]
    3650:	ldrb	w14, [sp, #81]
    3654:	ldr	x15, [sp, #64]
    3658:	mov	w12, #0x2                   	// #2
    365c:	sub	x13, x29, #0x40
    3660:	cmp	w10, #0x1
    3664:	add	x16, sp, #0x40
    3668:	csel	w2, w8, w12, eq  // eq = none
    366c:	csel	x1, x11, x13, eq  // eq = none
    3670:	cmp	w14, #0x1
    3674:	csel	w4, w9, w12, eq  // eq = none
    3678:	csel	x3, x15, x16, eq  // eq = none
    367c:	sub	x0, x29, #0x20
    3680:	bl	0 <LLVMInitializeAArch64AsmParser>
    3684:	ldr	x0, [x26]
    3688:	sub	x2, x29, #0x20
    368c:	mov	w1, #0x9                   	// #9
    3690:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    3694:	tbnz	w0, #0, 2dc8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcb0>
    3698:	ldr	x0, [x26]
    369c:	ldr	x8, [x0]
    36a0:	ldr	x8, [x8, #56]
    36a4:	blr	x8
    36a8:	ldr	x8, [x0]
    36ac:	add	x2, sp, #0xc0
    36b0:	mov	w1, w19
    36b4:	ldr	x8, [x8, #368]
    36b8:	blr	x8
    36bc:	b	2dc8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcb0>
    36c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    36c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    36c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    36cc:	add	x0, x0, #0x0
    36d0:	add	x1, x1, #0x0
    36d4:	add	x3, x3, #0x0
    36d8:	mov	w2, #0x99                  	// #153
    36dc:	bl	0 <__assert_fail>
    36e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    36e4:	add	x0, x0, #0x0
    36e8:	add	x8, sp, #0xa0
    36ec:	add	x1, sp, #0x60
    36f0:	bl	0 <LLVMInitializeAArch64AsmParser>
    36f4:	add	x0, sp, #0xa0
    36f8:	b	3714 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x15fc>
    36fc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3700:	add	x0, x0, #0x0
    3704:	sub	x8, x29, #0x20
    3708:	add	x1, sp, #0x20
    370c:	bl	0 <LLVMInitializeAArch64AsmParser>
    3710:	sub	x0, x29, #0x20
    3714:	mov	w1, #0x1                   	// #1
    3718:	bl	0 <_ZN4llvm18report_fatal_errorERKNS_5TwineEb>

000000000000371c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb>:
    371c:	str	d8, [sp, #-112]!
    3720:	stp	x29, x30, [sp, #16]
    3724:	stp	x28, x27, [sp, #32]
    3728:	stp	x26, x25, [sp, #48]
    372c:	stp	x24, x23, [sp, #64]
    3730:	stp	x22, x21, [sp, #80]
    3734:	stp	x20, x19, [sp, #96]
    3738:	mov	x29, sp
    373c:	sub	sp, sp, #0x1b0
    3740:	mov	x23, x3
    3744:	ldr	w8, [x23, #8]!
    3748:	cbz	w8, 5a58 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x233c>
    374c:	ldr	x8, [x3]
    3750:	mov	x19, x0
    3754:	mov	w24, w6
    3758:	mov	x21, x4
    375c:	ldr	x27, [x8]
    3760:	mov	x22, x3
    3764:	mov	x20, x1
    3768:	str	x5, [sp, #64]
    376c:	ldr	x8, [x27]
    3770:	mov	x0, x27
    3774:	ldr	x8, [x8, #32]
    3778:	blr	x8
    377c:	tbz	w0, #0, 5a78 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x235c>
    3780:	mov	x0, x27
    3784:	str	w24, [sp, #60]
    3788:	str	x21, [sp, #48]
    378c:	str	x20, [sp, #72]
    3790:	bl	a848 <_ZNK12_GLOBAL__N_114AArch64Operand8getTokenEv>
    3794:	ldr	w20, [x23]
    3798:	mov	x25, x0
    379c:	mov	x26, x1
    37a0:	cmp	w20, #0x4
    37a4:	b.ne	3898 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17c>  // b.any
    37a8:	cmp	x26, #0x3
    37ac:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    37b0:	ldrh	w8, [x25]
    37b4:	ldrb	w9, [x25, #2]
    37b8:	mov	w10, #0x736c                	// #29548
    37bc:	mov	w11, #0x6c                  	// #108
    37c0:	eor	w8, w8, w10
    37c4:	eor	w9, w9, w11
    37c8:	orr	w8, w8, w9
    37cc:	tst	w8, #0xffff
    37d0:	b.eq	38e0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c4>  // b.none
    37d4:	ldrh	w8, [x25]
    37d8:	ldrb	w9, [x25, #2]
    37dc:	mov	w10, #0x6662                	// #26210
    37e0:	mov	w11, #0x63                  	// #99
    37e4:	eor	w8, w8, w10
    37e8:	eor	w9, w9, w11
    37ec:	orr	w8, w8, w9
    37f0:	tst	w8, #0xffff
    37f4:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    37f8:	ldr	x8, [x22]
    37fc:	add	x0, sp, #0x70
    3800:	ldp	x21, x1, [x8, #8]
    3804:	bl	f06c <_ZN12_GLOBAL__N_114AArch64OperandC2ERKS0_>
    3808:	ldr	w8, [x22, #8]
    380c:	cmp	w8, #0x3
    3810:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    3814:	ldr	x8, [x22]
    3818:	sub	x0, x29, #0xa0
    381c:	ldr	x1, [x8, #24]
    3820:	bl	f06c <_ZN12_GLOBAL__N_114AArch64OperandC2ERKS0_>
    3824:	ldr	w8, [x21, #48]
    3828:	cmp	w8, #0x3
    382c:	b.ne	3848 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x12c>  // b.any
    3830:	ldr	w8, [x21, #76]
    3834:	cbnz	w8, 3848 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x12c>
    3838:	ldr	w8, [sp, #160]
    383c:	cbnz	w8, 3848 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x12c>
    3840:	ldur	w8, [x29, #-112]
    3844:	cbz	w8, 4a68 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x134c>
    3848:	mov	w24, wzr
    384c:	adrp	x8, 0 <_ZTVN4llvm18MCParsedAsmOperandE>
    3850:	ldur	x0, [x29, #-144]
    3854:	ldr	x8, [x8]
    3858:	add	x21, x8, #0x10
    385c:	sub	x8, x29, #0xa0
    3860:	add	x8, x8, #0x20
    3864:	cmp	x0, x8
    3868:	stur	x21, [x29, #-160]
    386c:	b.eq	3874 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x158>  // b.none
    3870:	bl	0 <_ZdlPv>
    3874:	ldr	x0, [sp, #128]
    3878:	add	x8, sp, #0x70
    387c:	add	x8, x8, #0x20
    3880:	str	x21, [sp, #112]
    3884:	cmp	x0, x8
    3888:	b.eq	3890 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x174>  // b.none
    388c:	bl	0 <_ZdlPv>
    3890:	cbnz	w24, 512c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a10>
    3894:	b	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    3898:	cmp	w20, #0x5
    389c:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    38a0:	cmp	x26, #0x5
    38a4:	b.eq	39b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29c>  // b.none
    38a8:	cmp	x26, #0x4
    38ac:	b.eq	3988 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x26c>  // b.none
    38b0:	cmp	x26, #0x3
    38b4:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    38b8:	ldrh	w8, [x25]
    38bc:	ldrb	w9, [x25, #2]
    38c0:	mov	w10, #0x6662                	// #26210
    38c4:	mov	w11, #0x69                  	// #105
    38c8:	eor	w8, w8, w10
    38cc:	eor	w9, w9, w11
    38d0:	orr	w8, w8, w9
    38d4:	tst	w8, #0xffff
    38d8:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    38dc:	b	3afc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x3e0>
    38e0:	ldr	x8, [x22]
    38e4:	ldr	x21, [x8, #16]
    38e8:	ldr	w9, [x21, #48]
    38ec:	cmp	w9, #0x3
    38f0:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    38f4:	ldr	w9, [x21, #76]
    38f8:	cbnz	w9, 3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    38fc:	ldr	x28, [x8, #24]
    3900:	ldr	x8, [x28]
    3904:	mov	x0, x28
    3908:	ldr	x8, [x8, #40]
    390c:	blr	x8
    3910:	tbz	w0, #0, 3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    3914:	ldr	w8, [x28, #48]
    3918:	cbnz	w8, 5c08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24ec>
    391c:	ldr	x8, [x28, #72]
    3920:	cbz	x8, 5be8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24cc>
    3924:	ldr	w9, [x8]
    3928:	cmp	w9, #0x1
    392c:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    3930:	ldr	x9, [x21]
    3934:	ldr	x24, [x8, #16]
    3938:	mov	x0, x21
    393c:	ldr	x8, [x9, #56]
    3940:	blr	x8
    3944:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    3948:	ldr	x8, [x8]
    394c:	mov	w9, w0
    3950:	lsr	x9, x9, #3
    3954:	ldrh	w10, [x8, #150]
    3958:	cmp	w9, w10
    395c:	b.cs	3be0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4c4>  // b.hs, b.nlast
    3960:	ldr	x8, [x8, #136]
    3964:	ldrb	w8, [x8, x9]
    3968:	and	w9, w0, #0x7
    396c:	lsr	w9, w8, w9
    3970:	neg	x8, x24
    3974:	tbz	w9, #0, 3be4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4c8>
    3978:	and	x8, x8, #0x1f
    397c:	str	x8, [sp, #40]
    3980:	mov	w8, #0x1f                  	// #31
    3984:	b	3bf0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4d4>
    3988:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    398c:	add	x1, x1, #0x0
    3990:	mov	x0, x25
    3994:	mov	x2, x26
    3998:	bl	0 <bcmp>
    399c:	cbz	w0, 3a18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2fc>
    39a0:	ldr	w8, [x25]
    39a4:	mov	w9, #0x6275                	// #25205
    39a8:	movk	w9, #0x7866, lsl #16
    39ac:	cmp	w8, w9
    39b0:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    39b4:	b	3a18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2fc>
    39b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    39bc:	add	x1, x1, #0x0
    39c0:	mov	x0, x25
    39c4:	mov	x2, x26
    39c8:	bl	0 <bcmp>
    39cc:	cbz	w0, 3afc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x3e0>
    39d0:	ldr	w8, [x25]
    39d4:	ldrb	w9, [x25, #4]
    39d8:	mov	w10, #0x6275                	// #25205
    39dc:	movk	w10, #0x6966, lsl #16
    39e0:	mov	w11, #0x7a                  	// #122
    39e4:	eor	w8, w8, w10
    39e8:	eor	w9, w9, w11
    39ec:	orr	w8, w8, w9
    39f0:	cbz	w8, 3afc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x3e0>
    39f4:	ldr	w8, [x25]
    39f8:	ldrb	w9, [x25, #4]
    39fc:	mov	w10, #0x6662                	// #26210
    3a00:	movk	w10, #0x6978, lsl #16
    3a04:	mov	w11, #0x6c                  	// #108
    3a08:	eor	w8, w8, w10
    3a0c:	eor	w9, w9, w11
    3a10:	orr	w8, w8, w9
    3a14:	cbnz	w8, 3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    3a18:	ldr	x8, [x22]
    3a1c:	ldr	x28, [x8, #8]
    3a20:	ldr	w9, [x28, #48]
    3a24:	cmp	w9, #0x3
    3a28:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    3a2c:	ldr	w9, [x28, #76]
    3a30:	cbnz	w9, 3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    3a34:	ldp	x24, x21, [x8, #24]
    3a38:	ldr	x8, [x24]
    3a3c:	mov	x0, x24
    3a40:	ldr	x8, [x8, #40]
    3a44:	blr	x8
    3a48:	tbz	w0, #0, 3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    3a4c:	ldr	x8, [x21]
    3a50:	mov	x0, x21
    3a54:	ldr	x8, [x8, #40]
    3a58:	blr	x8
    3a5c:	tbz	w0, #0, 3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    3a60:	ldr	w8, [x24, #48]
    3a64:	cbnz	w8, 5c08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24ec>
    3a68:	ldr	x8, [x24, #72]
    3a6c:	cbz	x8, 5be8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24cc>
    3a70:	ldr	w10, [x8]
    3a74:	ldr	w9, [x21, #48]
    3a78:	cmp	w10, #0x1
    3a7c:	csel	x8, x8, xzr, eq  // eq = none
    3a80:	cbnz	w9, 5c08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24ec>
    3a84:	ldr	x9, [x21, #72]
    3a88:	cbz	x9, 5be8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24cc>
    3a8c:	cmp	w10, #0x1
    3a90:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    3a94:	ldr	w10, [x9]
    3a98:	cmp	w10, #0x1
    3a9c:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    3aa0:	stp	x24, x21, [sp, #32]
    3aa4:	ldr	x10, [x28]
    3aa8:	ldr	x21, [x8, #16]
    3aac:	ldr	x24, [x9, #16]
    3ab0:	mov	x0, x28
    3ab4:	ldr	x8, [x10, #56]
    3ab8:	blr	x8
    3abc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    3ac0:	ldr	x8, [x8]
    3ac4:	mov	w9, w0
    3ac8:	lsr	x9, x9, #3
    3acc:	ldrh	w10, [x8, #502]
    3ad0:	cmp	w9, w10
    3ad4:	b.cs	51d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1abc>  // b.hs, b.nlast
    3ad8:	ldr	x8, [x8, #488]
    3adc:	mov	w10, #0x40                  	// #64
    3ae0:	ldrb	w8, [x8, x9]
    3ae4:	and	w9, w0, #0x7
    3ae8:	lsr	w8, w8, w9
    3aec:	tst	w8, #0x1
    3af0:	mov	w8, #0x20                  	// #32
    3af4:	csel	x8, x8, x10, eq  // eq = none
    3af8:	b	51dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ac0>
    3afc:	ldr	x8, [x22]
    3b00:	ldr	x28, [x8, #8]
    3b04:	ldr	w9, [x28, #48]
    3b08:	cmp	w9, #0x3
    3b0c:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    3b10:	ldr	w9, [x28, #76]
    3b14:	cbnz	w9, 3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    3b18:	ldp	x24, x21, [x8, #24]
    3b1c:	ldr	x8, [x24]
    3b20:	mov	x0, x24
    3b24:	ldr	x8, [x8, #40]
    3b28:	blr	x8
    3b2c:	tbz	w0, #0, 3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    3b30:	ldr	x8, [x21]
    3b34:	mov	x0, x21
    3b38:	ldr	x8, [x8, #40]
    3b3c:	blr	x8
    3b40:	tbz	w0, #0, 3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    3b44:	ldr	w8, [x24, #48]
    3b48:	cbnz	w8, 5c08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24ec>
    3b4c:	ldr	x8, [x24, #72]
    3b50:	cbz	x8, 5be8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24cc>
    3b54:	ldr	w10, [x8]
    3b58:	ldr	w9, [x21, #48]
    3b5c:	cmp	w10, #0x1
    3b60:	csel	x8, x8, xzr, eq  // eq = none
    3b64:	cbnz	w9, 5c08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24ec>
    3b68:	ldr	x9, [x21, #72]
    3b6c:	cbz	x9, 5be8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24cc>
    3b70:	cmp	w10, #0x1
    3b74:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    3b78:	ldr	w10, [x9]
    3b7c:	cmp	w10, #0x1
    3b80:	b.ne	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>  // b.any
    3b84:	stp	x21, x24, [sp, #32]
    3b88:	ldr	x10, [x28]
    3b8c:	ldr	x24, [x8, #16]
    3b90:	ldr	x21, [x9, #16]
    3b94:	mov	x0, x28
    3b98:	ldr	x8, [x10, #56]
    3b9c:	blr	x8
    3ba0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    3ba4:	ldr	x8, [x8]
    3ba8:	mov	w9, w0
    3bac:	lsr	x9, x9, #3
    3bb0:	ldrh	w10, [x8, #502]
    3bb4:	cmp	w9, w10
    3bb8:	b.cs	5174 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a58>  // b.hs, b.nlast
    3bbc:	ldr	x8, [x8, #488]
    3bc0:	mov	w10, #0x40                  	// #64
    3bc4:	ldrb	w8, [x8, x9]
    3bc8:	and	w9, w0, #0x7
    3bcc:	lsr	w8, w8, w9
    3bd0:	tst	w8, #0x1
    3bd4:	mov	w8, #0x20                  	// #32
    3bd8:	csel	x8, x8, x10, eq  // eq = none
    3bdc:	b	5178 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a5c>
    3be0:	neg	x8, x24
    3be4:	and	x8, x8, #0x3f
    3be8:	str	x8, [sp, #40]
    3bec:	mov	w8, #0x3f                  	// #63
    3bf0:	ldr	x0, [x19, #8]
    3bf4:	sub	x21, x8, x24
    3bf8:	ldr	x9, [x0]
    3bfc:	ldr	x9, [x9, #48]
    3c00:	blr	x9
    3c04:	mov	x1, x0
    3c08:	ldr	x0, [sp, #40]
    3c0c:	mov	w2, wzr
    3c10:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    3c14:	ldr	x8, [x19, #8]
    3c18:	str	x0, [sp, #40]
    3c1c:	ldr	x9, [x8]
    3c20:	mov	x0, x8
    3c24:	ldr	x9, [x9, #48]
    3c28:	blr	x9
    3c2c:	mov	x1, x0
    3c30:	mov	x0, x21
    3c34:	mov	w2, wzr
    3c38:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    3c3c:	ldr	x8, [x27]
    3c40:	str	x0, [sp, #32]
    3c44:	mov	x0, x27
    3c48:	ldr	x8, [x8, #72]
    3c4c:	blr	x8
    3c50:	ldr	x8, [x19, #8]
    3c54:	mov	x21, x0
    3c58:	ldr	x9, [x8]
    3c5c:	mov	x0, x8
    3c60:	ldr	x9, [x9, #48]
    3c64:	blr	x9
    3c68:	mov	x27, x0
    3c6c:	mov	w0, #0x70                  	// #112
    3c70:	bl	0 <_Znwm>
    3c74:	mov	x8, x0
    3c78:	mov	w9, #0x6                   	// #6
    3c7c:	strb	wzr, [x8, #32]!
    3c80:	str	w9, [x0, #48]
    3c84:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    3c88:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    3c8c:	add	x9, x9, #0x0
    3c90:	add	x10, x10, #0x0
    3c94:	stp	x21, x9, [x0, #64]
    3c98:	mov	w9, #0x4                   	// #4
    3c9c:	str	x27, [x0, #104]
    3ca0:	str	x10, [x0]
    3ca4:	str	w9, [x0, #80]
    3ca8:	strb	wzr, [x0, #84]
    3cac:	stp	x8, xzr, [x0, #16]
    3cb0:	str	x21, [x0, #56]
    3cb4:	ldr	w8, [x23]
    3cb8:	cbz	w8, 42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>
    3cbc:	ldr	x9, [x22]
    3cc0:	mov	x24, x10
    3cc4:	ldr	x8, [x9]
    3cc8:	str	x0, [x9]
    3ccc:	cbz	x8, 3ce0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5c4>
    3cd0:	ldr	x9, [x8]
    3cd4:	mov	x0, x8
    3cd8:	ldr	x9, [x9, #8]
    3cdc:	blr	x9
    3ce0:	ldr	x8, [x28]
    3ce4:	mov	x0, x28
    3ce8:	ldr	x8, [x8, #72]
    3cec:	blr	x8
    3cf0:	ldr	x8, [x28]
    3cf4:	str	x0, [sp, #24]
    3cf8:	mov	x0, x28
    3cfc:	ldr	x8, [x8, #80]
    3d00:	blr	x8
    3d04:	ldr	x8, [x19, #8]
    3d08:	mov	x27, x0
    3d0c:	ldr	x9, [x8]
    3d10:	mov	x0, x8
    3d14:	ldr	x9, [x9, #48]
    3d18:	blr	x9
    3d1c:	mov	x21, x0
    3d20:	mov	w0, #0x70                  	// #112
    3d24:	bl	0 <_Znwm>
    3d28:	ldr	x9, [sp, #32]
    3d2c:	mov	x8, x0
    3d30:	strb	wzr, [x8, #32]!
    3d34:	str	x24, [x0]
    3d38:	stp	x27, x9, [x0, #64]
    3d3c:	ldr	x9, [sp, #24]
    3d40:	str	wzr, [x0, #48]
    3d44:	str	x21, [x0, #104]
    3d48:	stp	x8, xzr, [x0, #16]
    3d4c:	str	x9, [x0, #56]
    3d50:	str	x0, [sp, #112]
    3d54:	add	x1, sp, #0x70
    3d58:	mov	x0, x22
    3d5c:	bl	0 <LLVMInitializeAArch64AsmParser>
    3d60:	ldr	x0, [sp, #112]
    3d64:	cbz	x0, 3d74 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x658>
    3d68:	ldr	x8, [x0]
    3d6c:	ldr	x8, [x8, #8]
    3d70:	blr	x8
    3d74:	ldr	x8, [x28]
    3d78:	mov	x0, x28
    3d7c:	ldr	x8, [x8, #72]
    3d80:	blr	x8
    3d84:	ldr	x8, [x28]
    3d88:	mov	x21, x0
    3d8c:	mov	x0, x28
    3d90:	ldr	x8, [x8, #80]
    3d94:	blr	x8
    3d98:	ldr	x8, [x19, #8]
    3d9c:	mov	x27, x0
    3da0:	ldr	x9, [x8]
    3da4:	mov	x0, x8
    3da8:	ldr	x9, [x9, #48]
    3dac:	blr	x9
    3db0:	mov	x28, x0
    3db4:	mov	w0, #0x70                  	// #112
    3db8:	bl	0 <_Znwm>
    3dbc:	ldr	x9, [sp, #40]
    3dc0:	mov	x8, x0
    3dc4:	strb	wzr, [x8, #32]!
    3dc8:	str	x24, [x0]
    3dcc:	str	wzr, [x0, #48]
    3dd0:	str	x28, [x0, #104]
    3dd4:	stp	x27, x9, [x0, #64]
    3dd8:	stp	x8, xzr, [x0, #16]
    3ddc:	str	x21, [x0, #56]
    3de0:	ldr	w8, [x23]
    3de4:	cmp	w8, #0x3
    3de8:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    3dec:	ldr	x9, [x22]
    3df0:	ldr	x8, [x9, #24]
    3df4:	str	x0, [x9, #24]
    3df8:	cbz	x8, 3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    3dfc:	ldr	x9, [x8]
    3e00:	mov	x0, x8
    3e04:	ldr	x9, [x9, #8]
    3e08:	blr	x9
    3e0c:	mov	x0, x19
    3e10:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    3e14:	cmp	w20, #0x4
    3e18:	b.ne	3f08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x7ec>  // b.any
    3e1c:	ldr	x8, [x0, #192]
    3e20:	tbz	x8, #58, 3f08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x7ec>
    3e24:	ldr	x28, [sp, #72]
    3e28:	cmp	x26, #0x4
    3e2c:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    3e30:	ldr	w8, [x25]
    3e34:	mov	w9, #0x6f6d                	// #28525
    3e38:	movk	w9, #0x6976, lsl #16
    3e3c:	cmp	w8, w9
    3e40:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    3e44:	ldr	w8, [x23]
    3e48:	cmp	w8, #0x1
    3e4c:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    3e50:	cmp	w8, #0x2
    3e54:	b.eq	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.none
    3e58:	cmp	w8, #0x3
    3e5c:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    3e60:	ldr	x8, [x22]
    3e64:	ldp	x25, x27, [x8, #8]
    3e68:	ldr	x26, [x8, #24]
    3e6c:	ldr	x9, [x25]
    3e70:	mov	x0, x25
    3e74:	ldr	x8, [x9, #32]
    3e78:	blr	x8
    3e7c:	tbz	w0, #0, 3eac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x790>
    3e80:	ldr	w8, [x27, #48]
    3e84:	cmp	w8, #0x3
    3e88:	b.ne	3eac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x790>  // b.any
    3e8c:	ldr	w8, [x27, #76]
    3e90:	cmp	w8, #0x1
    3e94:	b.ne	3eac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x790>  // b.any
    3e98:	ldr	x8, [x26]
    3e9c:	mov	x0, x26
    3ea0:	ldr	x8, [x8, #40]
    3ea4:	blr	x8
    3ea8:	tbnz	w0, #0, 3eec <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x7d0>
    3eac:	ldr	w8, [x25, #48]
    3eb0:	cmp	w8, #0x3
    3eb4:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    3eb8:	ldr	w8, [x25, #76]
    3ebc:	cmp	w8, #0x1
    3ec0:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    3ec4:	ldr	x8, [x27]
    3ec8:	mov	x0, x27
    3ecc:	ldr	x8, [x8, #32]
    3ed0:	blr	x8
    3ed4:	tbz	w0, #0, 421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    3ed8:	ldr	x8, [x26]
    3edc:	mov	x0, x26
    3ee0:	ldr	x8, [x8, #40]
    3ee4:	blr	x8
    3ee8:	tbz	w0, #0, 421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    3eec:	ldr	x8, [x25]
    3ef0:	mov	x0, x25
    3ef4:	ldr	x8, [x8, #32]
    3ef8:	blr	x8
    3efc:	tbz	w0, #0, 4810 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10f4>
    3f00:	mov	x0, x25
    3f04:	b	4814 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10f8>
    3f08:	ldr	x28, [sp, #72]
    3f0c:	cmp	w20, #0x3
    3f10:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    3f14:	cmp	x26, #0x4
    3f18:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    3f1c:	ldr	w9, [x25]
    3f20:	mov	w8, #0x7873                	// #30835
    3f24:	movk	w8, #0x7774, lsl #16
    3f28:	cmp	w9, w8
    3f2c:	b.eq	4130 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa14>  // b.none
    3f30:	ldr	w9, [x25]
    3f34:	add	w8, w8, #0x2
    3f38:	cmp	w9, w8
    3f3c:	b.eq	4130 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa14>  // b.none
    3f40:	ldr	w9, [x25]
    3f44:	mov	w8, #0x7873                	// #30835
    3f48:	movk	w8, #0x6274, lsl #16
    3f4c:	cmp	w9, w8
    3f50:	b.eq	40cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x9b0>  // b.none
    3f54:	ldr	w10, [x25]
    3f58:	mov	w9, #0x7873                	// #30835
    3f5c:	movk	w9, #0x6874, lsl #16
    3f60:	cmp	w10, w9
    3f64:	b.eq	40cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x9b0>  // b.none
    3f68:	ldr	w10, [x25]
    3f6c:	add	w8, w8, #0x2
    3f70:	cmp	w10, w8
    3f74:	b.eq	3f88 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x86c>  // b.none
    3f78:	ldr	w8, [x25]
    3f7c:	add	w9, w9, #0x2
    3f80:	cmp	w8, w9
    3f84:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    3f88:	ldr	w8, [x23]
    3f8c:	cmp	w8, #0x1
    3f90:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    3f94:	ldr	x8, [x22]
    3f98:	ldr	x0, [x8, #8]
    3f9c:	ldr	w8, [x0, #48]
    3fa0:	cmp	w8, #0x3
    3fa4:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    3fa8:	ldr	w8, [x0, #76]
    3fac:	cbnz	w8, 421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    3fb0:	ldr	x8, [x0]
    3fb4:	ldr	x8, [x8, #56]
    3fb8:	blr	x8
    3fbc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    3fc0:	ldr	x8, [x8]
    3fc4:	mov	w9, w0
    3fc8:	lsr	x9, x9, #3
    3fcc:	ldrh	w10, [x8, #502]
    3fd0:	cmp	w9, w10
    3fd4:	b.cs	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.hs, b.nlast
    3fd8:	ldr	x8, [x8, #488]
    3fdc:	ldrb	w8, [x8, x9]
    3fe0:	and	w9, w0, #0x7
    3fe4:	lsr	w8, w8, w9
    3fe8:	tbz	w8, #0, 421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    3fec:	ldr	w8, [x23]
    3ff0:	cmp	w8, #0x1
    3ff4:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    3ff8:	ldr	x8, [x22]
    3ffc:	ldr	x21, [x8, #8]
    4000:	ldr	w8, [x21, #48]
    4004:	cmp	w8, #0x3
    4008:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    400c:	ldr	w8, [x21, #76]
    4010:	cbnz	w8, 421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    4014:	ldr	x8, [x21]
    4018:	mov	x0, x21
    401c:	ldr	x8, [x8, #56]
    4020:	blr	x8
    4024:	bl	f27c <_ZN4llvmL15getWRegFromXRegEj>
    4028:	ldr	x8, [x21]
    402c:	mov	w25, w0
    4030:	mov	x0, x21
    4034:	ldr	x8, [x8, #72]
    4038:	blr	x8
    403c:	ldr	x8, [x21]
    4040:	mov	x26, x0
    4044:	mov	x0, x21
    4048:	ldr	x8, [x8, #80]
    404c:	blr	x8
    4050:	ldr	x8, [x19, #8]
    4054:	mov	x21, x0
    4058:	ldr	x9, [x8]
    405c:	mov	x0, x8
    4060:	ldr	x9, [x9, #48]
    4064:	blr	x9
    4068:	mov	x27, x0
    406c:	mov	w0, #0x70                  	// #112
    4070:	bl	0 <_Znwm>
    4074:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4078:	mov	x8, x0
    407c:	add	x9, x9, #0x0
    4080:	strb	wzr, [x8, #32]!
    4084:	str	x9, [x0]
    4088:	mov	w9, #0x3                   	// #3
    408c:	str	w9, [x0, #48]
    4090:	str	x27, [x0, #104]
    4094:	str	w25, [x0, #72]
    4098:	stur	xzr, [x0, #89]
    409c:	stur	xzr, [x0, #84]
    40a0:	stur	xzr, [x0, #76]
    40a4:	stp	x8, xzr, [x0, #16]
    40a8:	stp	x26, x21, [x0, #56]
    40ac:	ldr	w8, [x23]
    40b0:	cmp	w8, #0x1
    40b4:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    40b8:	ldr	x9, [x22]
    40bc:	ldr	x8, [x9, #8]
    40c0:	str	x0, [x9, #8]
    40c4:	cbnz	x8, 420c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xaf0>
    40c8:	b	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    40cc:	ldr	w8, [x23]
    40d0:	cmp	w8, #0x1
    40d4:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    40d8:	ldr	x8, [x22]
    40dc:	ldr	x0, [x8, #8]
    40e0:	ldr	w8, [x0, #48]
    40e4:	cmp	w8, #0x3
    40e8:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    40ec:	ldr	w8, [x0, #76]
    40f0:	cbnz	w8, 421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    40f4:	ldr	x8, [x0]
    40f8:	ldr	x8, [x8, #56]
    40fc:	blr	x8
    4100:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    4104:	ldr	x8, [x8]
    4108:	mov	w9, w0
    410c:	lsr	x9, x9, #3
    4110:	ldrh	w10, [x8, #502]
    4114:	cmp	w9, w10
    4118:	b.cs	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.hs, b.nlast
    411c:	ldr	x8, [x8, #488]
    4120:	ldrb	w8, [x8, x9]
    4124:	and	w9, w0, #0x7
    4128:	lsr	w8, w8, w9
    412c:	tbz	w8, #0, 421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    4130:	ldr	w8, [x23]
    4134:	cmp	w8, #0x2
    4138:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    413c:	ldr	x8, [x22]
    4140:	ldr	x21, [x8, #16]
    4144:	ldr	w8, [x21, #48]
    4148:	cmp	w8, #0x3
    414c:	b.ne	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.any
    4150:	ldr	w8, [x21, #76]
    4154:	cbnz	w8, 421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    4158:	ldr	x8, [x21]
    415c:	mov	x0, x21
    4160:	ldr	x8, [x8, #56]
    4164:	blr	x8
    4168:	bl	f144 <_ZN4llvmL15getXRegFromWRegEj>
    416c:	ldr	x8, [x21]
    4170:	mov	w25, w0
    4174:	mov	x0, x21
    4178:	ldr	x8, [x8, #72]
    417c:	blr	x8
    4180:	ldr	x8, [x21]
    4184:	mov	x26, x0
    4188:	mov	x0, x21
    418c:	ldr	x8, [x8, #80]
    4190:	blr	x8
    4194:	ldr	x8, [x19, #8]
    4198:	mov	x21, x0
    419c:	ldr	x9, [x8]
    41a0:	mov	x0, x8
    41a4:	ldr	x9, [x9, #48]
    41a8:	blr	x9
    41ac:	mov	x27, x0
    41b0:	mov	w0, #0x70                  	// #112
    41b4:	bl	0 <_Znwm>
    41b8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    41bc:	mov	x8, x0
    41c0:	add	x9, x9, #0x0
    41c4:	strb	wzr, [x8, #32]!
    41c8:	str	x9, [x0]
    41cc:	mov	w9, #0x3                   	// #3
    41d0:	str	w9, [x0, #48]
    41d4:	str	x27, [x0, #104]
    41d8:	str	w25, [x0, #72]
    41dc:	stur	xzr, [x0, #89]
    41e0:	stur	xzr, [x0, #84]
    41e4:	stur	xzr, [x0, #76]
    41e8:	stp	x8, xzr, [x0, #16]
    41ec:	stp	x26, x21, [x0, #56]
    41f0:	ldr	w8, [x23]
    41f4:	cmp	w8, #0x2
    41f8:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    41fc:	ldr	x9, [x22]
    4200:	ldr	x8, [x9, #16]
    4204:	str	x0, [x9, #16]
    4208:	cbz	x8, 421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    420c:	ldr	x9, [x8]
    4210:	mov	x0, x8
    4214:	ldr	x9, [x9, #8]
    4218:	blr	x9
    421c:	add	x25, sp, #0x70
    4220:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    4224:	ldr	d8, [x8]
    4228:	add	x8, x25, #0x20
    422c:	str	x8, [sp, #128]
    4230:	ldr	w8, [sp, #60]
    4234:	ldr	x26, [sp, #64]
    4238:	add	x2, sp, #0x70
    423c:	add	x4, sp, #0x50
    4240:	and	w21, w8, #0x1
    4244:	mov	w6, #0x1                   	// #1
    4248:	mov	x0, x19
    424c:	mov	x1, x22
    4250:	mov	x3, x26
    4254:	mov	w5, w21
    4258:	stp	xzr, xzr, [sp, #112]
    425c:	stp	xzr, xzr, [sp, #80]
    4260:	str	d8, [sp, #136]
    4264:	str	xzr, [sp, #96]
    4268:	bl	f3c8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj>
    426c:	cmp	w0, #0x4
    4270:	b.ne	4398 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xc7c>  // b.any
    4274:	sub	x8, x29, #0xa0
    4278:	add	x8, x8, #0x10
    427c:	stur	x8, [x29, #-160]
    4280:	stur	d8, [x29, #-152]
    4284:	ldr	w8, [x23]
    4288:	cmp	w8, #0x2
    428c:	b.cc	42fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbe0>  // b.lo, b.ul, b.last
    4290:	mov	w9, #0x2                   	// #2
    4294:	sub	x20, x9, x8
    4298:	mov	w21, #0x1                   	// #1
    429c:	ldr	x8, [x22]
    42a0:	ldr	x0, [x8, x21, lsl #3]
    42a4:	ldr	x8, [x0]
    42a8:	ldr	x8, [x8, #72]
    42ac:	blr	x8
    42b0:	stur	x0, [x29, #-32]
    42b4:	sub	x0, x29, #0xa0
    42b8:	sub	x1, x29, #0x20
    42bc:	bl	0 <LLVMInitializeAArch64AsmParser>
    42c0:	add	x8, x20, x21
    42c4:	cmp	x8, #0x1
    42c8:	b.eq	42fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbe0>  // b.none
    42cc:	ldr	w8, [x23]
    42d0:	add	x21, x21, #0x1
    42d4:	cmp	x21, x8
    42d8:	b.cc	429c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb80>  // b.lo, b.ul, b.last
    42dc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    42e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    42e4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    42e8:	add	x0, x0, #0x0
    42ec:	add	x1, x1, #0x0
    42f0:	add	x3, x3, #0x0
    42f4:	mov	w2, #0x95                  	// #149
    42f8:	bl	0 <__assert_fail>
    42fc:	ldr	x0, [x19, #8]
    4300:	ldr	x8, [x0]
    4304:	ldr	x8, [x8, #48]
    4308:	blr	x8
    430c:	ldr	x9, [x19, #168]
    4310:	ldr	w8, [sp, #112]
    4314:	ldr	w10, [x9, #24]
    4318:	cmp	w10, w8
    431c:	b.ls	5ad4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x23b8>  // b.plast
    4320:	ldr	x13, [x9]
    4324:	ldr	x22, [x0, #24]
    4328:	ldrb	w15, [x19, #224]
    432c:	ldrb	w11, [x19, #225]
    4330:	add	x14, x13, x8, lsl #6
    4334:	ldp	w9, w12, [x19, #228]
    4338:	ldr	w10, [x19, #236]
    433c:	ldr	x16, [x14, #16]!
    4340:	sub	w17, w8, #0xae1
    4344:	cmp	w17, #0x4
    4348:	b.cc	4420 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd04>  // b.lo, b.ul, b.last
    434c:	sub	w17, w8, #0xae5
    4350:	cmp	w17, #0x4
    4354:	b.cs	4548 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe2c>  // b.hs, b.nlast
    4358:	ands	w16, w16, #0x7
    435c:	b.eq	5b2c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2410>  // b.none
    4360:	ldr	w17, [sp, #136]
    4364:	cbz	w17, 5a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x237c>
    4368:	ldr	x18, [sp, #128]
    436c:	ldrb	w0, [x18]
    4370:	cmp	w0, #0x1
    4374:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4378:	cmp	w17, #0x1
    437c:	b.ls	5a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x237c>  // b.plast
    4380:	ldrb	w17, [x18, #16]
    4384:	cmp	w17, #0x1
    4388:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    438c:	ldr	w17, [x18, #8]
    4390:	ldr	w1, [x18, #24]
    4394:	b	445c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd40>
    4398:	ldr	q0, [sp, #80]
    439c:	ldr	x8, [sp, #96]
    43a0:	ldr	x20, [x26]
    43a4:	mov	w24, w0
    43a8:	add	x2, sp, #0x70
    43ac:	add	x4, sp, #0x50
    43b0:	mov	x0, x19
    43b4:	mov	x1, x22
    43b8:	mov	x3, x26
    43bc:	mov	w5, w21
    43c0:	mov	w6, wzr
    43c4:	stur	q0, [x29, #-160]
    43c8:	stur	x8, [x29, #-144]
    43cc:	bl	f3c8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj>
    43d0:	mov	w21, w0
    43d4:	cbz	w0, 44a0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd84>
    43d8:	sub	w8, w21, #0x7
    43dc:	cmp	w8, #0x8d
    43e0:	b.cs	46ec <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfd0>  // b.hs, b.nlast
    43e4:	ldr	x8, [x26]
    43e8:	ldr	w9, [x23]
    43ec:	cmp	x8, x9
    43f0:	b.cs	4514 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xdf8>  // b.hs, b.nlast
    43f4:	ldr	x9, [x22]
    43f8:	ldr	x0, [x9, x8, lsl #3]
    43fc:	ldr	x8, [x0]
    4400:	ldr	x8, [x8, #72]
    4404:	blr	x8
    4408:	ldr	x3, [x26]
    440c:	cmp	x0, #0x0
    4410:	csel	x1, x28, x0, eq  // eq = none
    4414:	mov	x0, x19
    4418:	mov	w2, w21
    441c:	b	4800 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10e4>
    4420:	ands	w16, w16, #0x7
    4424:	b.eq	5b4c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2430>  // b.none
    4428:	ldr	w17, [sp, #136]
    442c:	cbz	w17, 5a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x237c>
    4430:	ldr	x18, [sp, #128]
    4434:	ldrb	w0, [x18]
    4438:	cmp	w0, #0x1
    443c:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4440:	cmp	w17, #0x2
    4444:	b.ls	5a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x237c>  // b.plast
    4448:	ldrb	w17, [x18, #32]
    444c:	cmp	w17, #0x1
    4450:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4454:	ldr	w17, [x18, #8]
    4458:	ldr	w1, [x18, #40]
    445c:	mov	w0, #0x1                   	// #1
    4460:	mov	w18, #0x100                 	// #256
    4464:	bfi	x18, x16, #32, #32
    4468:	mov	w16, w17
    446c:	orr	x17, x18, x0
    4470:	bfi	x16, x1, #32, #32
    4474:	stp	x17, x16, [x19, #224]
    4478:	cbz	w15, 4b30 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1414>
    447c:	cmp	w8, #0x1b7
    4480:	b.eq	4fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c0>  // b.none
    4484:	cmp	w8, #0x7be
    4488:	b.eq	4fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c0>  // b.none
    448c:	ldr	x16, [x14]
    4490:	tbnz	w16, #3, 4578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe5c>
    4494:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4498:	add	x1, x1, #0x0
    449c:	b	46b0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf94>
    44a0:	ldr	x8, [x26]
    44a4:	cmp	x8, #0x1
    44a8:	b.ne	4710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xff4>  // b.any
    44ac:	ldr	w8, [x23]
    44b0:	cmp	w8, #0x2
    44b4:	b.cc	4710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xff4>  // b.lo, b.ul, b.last
    44b8:	ldr	x8, [x22]
    44bc:	ldr	x0, [x8, #8]
    44c0:	ldr	x8, [x0]
    44c4:	ldr	x8, [x8, #32]
    44c8:	blr	x8
    44cc:	tbz	w0, #0, 4710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xff4>
    44d0:	ldr	w8, [x23]
    44d4:	cmp	w8, #0x1
    44d8:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    44dc:	ldr	x8, [x22]
    44e0:	ldr	x8, [x8, #8]
    44e4:	ldr	w9, [x8, #48]
    44e8:	cmp	w9, #0x6
    44ec:	b.ne	5bc8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24ac>  // b.any
    44f0:	ldrb	w8, [x8, #84]
    44f4:	cbz	w8, 4710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xff4>
    44f8:	str	x20, [x26]
    44fc:	ldur	q0, [x29, #-160]
    4500:	ldur	x8, [x29, #-144]
    4504:	mov	w21, w24
    4508:	str	q0, [sp, #80]
    450c:	str	x8, [sp, #96]
    4510:	b	43d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcbc>
    4514:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4518:	add	x1, x1, #0x0
    451c:	sub	x0, x29, #0xa0
    4520:	bl	0 <LLVMInitializeAArch64AsmParser>
    4524:	ldr	w8, [x23]
    4528:	cbz	w8, 5b6c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2450>
    452c:	ldr	x9, [x22]
    4530:	add	x8, x9, x8, lsl #3
    4534:	ldur	x0, [x8, #-8]
    4538:	ldr	x8, [x0]
    453c:	ldr	x8, [x8, #80]
    4540:	blr	x8
    4544:	b	47c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10a4>
    4548:	cmp	w8, #0xae9
    454c:	b.ne	46c8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfac>  // b.any
    4550:	ldr	w16, [sp, #136]
    4554:	cbz	w16, 5a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x237c>
    4558:	ldr	x16, [sp, #128]
    455c:	ldrb	w17, [x16]
    4560:	cmp	w17, #0x1
    4564:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4568:	ldr	w17, [x16, #8]
    456c:	mov	x18, xzr
    4570:	mov	w0, #0x1                   	// #1
    4574:	b	46d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfb4>
    4578:	ldr	w15, [sp, #136]
    457c:	cbz	w15, 5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>
    4580:	ldr	x14, [sp, #128]
    4584:	ldrb	w17, [x14]
    4588:	cmp	w17, #0x1
    458c:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4590:	ldr	w17, [x14, #8]
    4594:	cmp	w17, w12
    4598:	b.ne	46d4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfb8>  // b.any
    459c:	cmp	w15, #0x2
    45a0:	b.cc	4648 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf2c>  // b.lo, b.ul, b.last
    45a4:	add	x1, x13, x8, lsl #6
    45a8:	sub	w13, w12, #0xf5
    45ac:	add	x17, x14, #0x18
    45b0:	mov	w18, #0x1                   	// #1
    45b4:	add	x0, x1, #0x2
    45b8:	add	x1, x1, #0x28
    45bc:	mov	w2, #0xc                   	// #12
    45c0:	ldurb	w3, [x17, #-8]
    45c4:	cmp	w3, #0x1
    45c8:	b.ne	4634 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf18>  // b.any
    45cc:	ldrh	w3, [x0]
    45d0:	cmp	x18, x3
    45d4:	b.cs	45e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xec8>  // b.hs, b.nlast
    45d8:	ldr	x3, [x1]
    45dc:	ldrb	w3, [x3, x2]
    45e0:	tbnz	w3, #0, 4634 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf18>
    45e4:	cmp	w13, #0x20
    45e8:	b.cs	5ba8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x248c>  // b.hs, b.nlast
    45ec:	ldr	w3, [x17]
    45f0:	cmp	w12, w3
    45f4:	b.eq	4964 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1248>  // b.none
    45f8:	add	w4, w3, #0x7c
    45fc:	cmp	w4, w12
    4600:	b.eq	4964 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1248>  // b.none
    4604:	add	w4, w3, #0xcc
    4608:	cmp	w4, w12
    460c:	b.eq	4964 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1248>  // b.none
    4610:	add	w4, w3, #0x5c
    4614:	cmp	w4, w12
    4618:	b.eq	4964 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1248>  // b.none
    461c:	add	w4, w3, #0xec
    4620:	cmp	w4, w12
    4624:	b.eq	4964 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1248>  // b.none
    4628:	add	w3, w3, #0xac
    462c:	cmp	w3, w12
    4630:	b.eq	4964 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1248>  // b.none
    4634:	add	x18, x18, #0x1
    4638:	add	x2, x2, #0x8
    463c:	cmp	x15, x18
    4640:	add	x17, x17, #0x10
    4644:	b.ne	45c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xea4>  // b.any
    4648:	cbz	w11, 4b30 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1414>
    464c:	cmp	w15, #0x2
    4650:	b.cc	46a8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf8c>  // b.lo, b.ul, b.last
    4654:	adrp	x11, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    4658:	ldr	x11, [x11]
    465c:	add	x17, x14, #0x18
    4660:	ldr	x12, [x11, #72]
    4664:	ldrh	w13, [x11, #86]
    4668:	mov	w11, #0x1                   	// #1
    466c:	ldurb	w18, [x17, #-8]
    4670:	cmp	w18, #0x1
    4674:	b.ne	4698 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf7c>  // b.any
    4678:	ldr	w18, [x17]
    467c:	lsr	x0, x18, #3
    4680:	cmp	w0, w13
    4684:	b.cs	4698 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf7c>  // b.hs, b.nlast
    4688:	ldrb	w0, [x12, x0]
    468c:	and	w18, w18, #0x7
    4690:	lsr	w18, w0, w18
    4694:	tbnz	w18, #0, 4af4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13d8>
    4698:	add	x11, x11, #0x1
    469c:	cmp	x15, x11
    46a0:	add	x17, x17, #0x10
    46a4:	b.ne	466c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf50>  // b.any
    46a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    46ac:	add	x1, x1, #0x0
    46b0:	sub	x0, x29, #0x20
    46b4:	bl	0 <LLVMInitializeAArch64AsmParser>
    46b8:	ldr	x0, [x19, #8]
    46bc:	sub	x2, x29, #0x20
    46c0:	mov	x1, x28
    46c4:	b	4fc4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18a8>
    46c8:	mov	x18, xzr
    46cc:	mov	x0, xzr
    46d0:	b	4464 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd48>
    46d4:	ldur	w8, [x29, #-152]
    46d8:	cbz	w8, 5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>
    46dc:	ldur	x8, [x29, #-160]
    46e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    46e4:	add	x1, x1, #0x0
    46e8:	b	4fac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1890>
    46ec:	cmp	w21, #0x4
    46f0:	b.hi	5af4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x23d8>  // b.pmore
    46f4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    46f8:	mov	w8, w21
    46fc:	add	x9, x9, #0x0
    4700:	adr	x10, 4274 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb58>
    4704:	ldrh	w11, [x9, x8, lsl #1]
    4708:	add	x10, x10, x11, lsl #2
    470c:	br	x10
    4710:	ldr	x8, [x26]
    4714:	cmn	x8, #0x1
    4718:	b.eq	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.none
    471c:	ldr	w9, [x23]
    4720:	cmp	x8, x9
    4724:	b.cs	47a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1088>  // b.hs, b.nlast
    4728:	ldr	x9, [x22]
    472c:	ldr	x0, [x9, x8, lsl #3]
    4730:	ldr	x8, [x0]
    4734:	ldr	x8, [x8, #72]
    4738:	blr	x8
    473c:	ldr	x8, [x26]
    4740:	ldr	w9, [x22, #8]
    4744:	cmp	x0, #0x0
    4748:	csel	x20, x28, x0, eq  // eq = none
    474c:	cmp	x8, x9
    4750:	b.cs	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.hs, b.nlast
    4754:	ldr	x9, [x22]
    4758:	ldr	x0, [x9, x8, lsl #3]
    475c:	ldr	x8, [x0]
    4760:	ldr	x8, [x8, #32]
    4764:	blr	x8
    4768:	ldr	x3, [x26]
    476c:	tbz	w0, #0, 47f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10d8>
    4770:	ldr	w8, [x23]
    4774:	cmp	x3, x8
    4778:	b.cs	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.hs, b.nlast
    477c:	ldr	x8, [x22]
    4780:	ldr	x8, [x8, x3, lsl #3]
    4784:	ldr	w9, [x8, #48]
    4788:	cmp	w9, #0x6
    478c:	b.ne	5bc8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24ac>  // b.any
    4790:	ldrb	w8, [x8, #84]
    4794:	cmp	w8, #0x0
    4798:	mov	w8, #0x6                   	// #6
    479c:	csel	w2, wzr, w8, eq  // eq = none
    47a0:	b	47f8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10dc>
    47a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    47a8:	add	x1, x1, #0x0
    47ac:	sub	x0, x29, #0xa0
    47b0:	bl	0 <LLVMInitializeAArch64AsmParser>
    47b4:	ldr	x0, [x19, #8]
    47b8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    47bc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    47c0:	cmp	x28, #0x0
    47c4:	cset	w8, ne  // ne = any
    47c8:	cmp	x0, #0x0
    47cc:	cset	w9, ne  // ne = any
    47d0:	cmp	w8, w9
    47d4:	b.ne	5b0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x23f0>  // b.any
    47d8:	mov	x4, x0
    47dc:	ldr	x0, [x19, #8]
    47e0:	sub	x2, x29, #0xa0
    47e4:	mov	x1, x28
    47e8:	mov	x3, x28
    47ec:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    47f0:	b	4808 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10ec>
    47f4:	mov	w2, wzr
    47f8:	mov	x0, x19
    47fc:	mov	x1, x20
    4800:	mov	x4, x22
    4804:	bl	ffbc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE>
    4808:	mov	w28, w0
    480c:	b	5114 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19f8>
    4810:	mov	x0, x27
    4814:	bl	a848 <_ZNK12_GLOBAL__N_114AArch64Operand8getTokenEv>
    4818:	stp	x0, x1, [x29, #-160]
    481c:	add	x8, sp, #0x70
    4820:	sub	x0, x29, #0xa0
    4824:	add	x20, sp, #0x70
    4828:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    482c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4830:	add	x1, x1, #0x0
    4834:	add	x0, sp, #0x70
    4838:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    483c:	cbz	w0, 4858 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x113c>
    4840:	ldr	x0, [sp, #112]
    4844:	add	x8, x20, #0x10
    4848:	cmp	x0, x8
    484c:	b.eq	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>  // b.none
    4850:	bl	0 <_ZdlPv>
    4854:	b	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    4858:	ldr	w8, [x26, #48]
    485c:	cbnz	w8, 5c08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24ec>
    4860:	ldr	x8, [x26, #72]
    4864:	cbz	x8, 5be8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24cc>
    4868:	ldr	w9, [x8]
    486c:	cmp	w9, #0x1
    4870:	b.ne	5c44 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2528>  // b.any
    4874:	ldr	x0, [sp, #112]
    4878:	ldr	x20, [x8, #16]
    487c:	add	x8, sp, #0x70
    4880:	add	x8, x8, #0x10
    4884:	cmp	x0, x8
    4888:	b.eq	4890 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1174>  // b.none
    488c:	bl	0 <_ZdlPv>
    4890:	cbnz	x20, 421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    4894:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4898:	add	x1, x1, #0x0
    489c:	add	x0, sp, #0x70
    48a0:	bl	0 <LLVMInitializeAArch64AsmParser>
    48a4:	ldr	x0, [x19, #8]
    48a8:	add	x2, sp, #0x70
    48ac:	mov	x1, x28
    48b0:	mov	x3, xzr
    48b4:	ldr	x8, [x0]
    48b8:	mov	x4, xzr
    48bc:	ldr	x8, [x8, #120]
    48c0:	blr	x8
    48c4:	ldr	x8, [x25]
    48c8:	mov	x0, x25
    48cc:	ldr	x8, [x8, #32]
    48d0:	blr	x8
    48d4:	ldr	x8, [x19, #8]
    48d8:	mov	w21, w0
    48dc:	ldr	x9, [x8]
    48e0:	mov	x0, x8
    48e4:	ldr	x9, [x9, #48]
    48e8:	blr	x9
    48ec:	mov	x25, x0
    48f0:	mov	w0, #0x70                  	// #112
    48f4:	bl	0 <_Znwm>
    48f8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    48fc:	mov	x8, x0
    4900:	add	x9, x9, #0x0
    4904:	strb	wzr, [x8, #32]!
    4908:	str	x9, [x0]
    490c:	mov	w9, #0x6                   	// #6
    4910:	str	w9, [x0, #48]
    4914:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4918:	add	x9, x9, #0x0
    491c:	stp	x28, x9, [x0, #64]
    4920:	mov	w9, #0x4                   	// #4
    4924:	str	x25, [x0, #104]
    4928:	str	w9, [x0, #80]
    492c:	strb	wzr, [x0, #84]
    4930:	stp	x8, xzr, [x0, #16]
    4934:	str	x28, [x0, #56]
    4938:	ldr	w8, [x23]
    493c:	tst	w21, #0x1
    4940:	mov	w9, #0x1                   	// #1
    4944:	cinc	x9, x9, eq  // eq = none
    4948:	cmp	x9, x8
    494c:	b.cs	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.hs, b.nlast
    4950:	ldr	x10, [x22]
    4954:	ldr	x8, [x10, x9, lsl #3]
    4958:	str	x0, [x10, x9, lsl #3]
    495c:	cbnz	x8, 420c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xaf0>
    4960:	b	421c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb00>
    4964:	ldur	w8, [x29, #-152]
    4968:	cbz	w8, 5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>
    496c:	ldur	x8, [x29, #-160]
    4970:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4974:	add	x1, x1, #0x0
    4978:	b	4fac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1890>
    497c:	ldr	x3, [x26]
    4980:	mov	w2, #0x3                   	// #3
    4984:	mov	x0, x19
    4988:	mov	x1, x28
    498c:	b	4800 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10e4>
    4990:	ldr	x8, [sp, #80]
    4994:	cbnz	x8, 49a8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x128c>
    4998:	ldr	x8, [sp, #88]
    499c:	cbnz	x8, 49a8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x128c>
    49a0:	ldr	x8, [sp, #96]
    49a4:	cbz	x8, 5c64 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2548>
    49a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    49ac:	sub	x8, x29, #0xa0
    49b0:	add	x1, x1, #0x0
    49b4:	add	x20, x8, #0x10
    49b8:	add	x2, x1, #0x15
    49bc:	sub	x0, x29, #0xa0
    49c0:	stur	x20, [x29, #-160]
    49c4:	bl	0 <LLVMInitializeAArch64AsmParser>
    49c8:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
    49cc:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    49d0:	adrp	x26, 0 <LLVMInitializeAArch64AsmParser>
    49d4:	mov	x22, xzr
    49d8:	add	x23, sp, #0x50
    49dc:	add	x21, x21, #0x0
    49e0:	add	x24, x24, #0x0
    49e4:	add	x26, x26, #0x0
    49e8:	ubfx	x8, x22, #6, #26
    49ec:	ldr	x8, [x23, w8, uxtw #3]
    49f0:	lsr	x8, x8, x22
    49f4:	tbz	w8, #0, 4a1c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1300>
    49f8:	sub	x0, x29, #0xa0
    49fc:	mov	x1, x21
    4a00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    4a04:	cmp	w22, #0x3b
    4a08:	mov	x1, x24
    4a0c:	b.hi	4a14 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x12f8>  // b.pmore
    4a10:	ldr	x1, [x26, x22, lsl #3]
    4a14:	sub	x0, x29, #0xa0
    4a18:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    4a1c:	add	x22, x22, #0x1
    4a20:	cmp	w22, #0xc0
    4a24:	b.ne	49e8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x12cc>  // b.any
    4a28:	sub	x0, x29, #0x20
    4a2c:	sub	x1, x29, #0xa0
    4a30:	bl	0 <LLVMInitializeAArch64AsmParser>
    4a34:	ldr	x0, [x19, #8]
    4a38:	sub	x2, x29, #0x20
    4a3c:	mov	x1, x28
    4a40:	mov	x3, xzr
    4a44:	mov	x4, xzr
    4a48:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    4a4c:	ldur	x8, [x29, #-160]
    4a50:	mov	w28, w0
    4a54:	cmp	x8, x20
    4a58:	b.eq	5114 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19f8>  // b.none
    4a5c:	mov	x0, x8
    4a60:	bl	0 <_ZdlPv>
    4a64:	b	5114 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19f8>
    4a68:	ldr	x9, [sp, #184]
    4a6c:	cbz	x9, 5be8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24cc>
    4a70:	ldr	w10, [x9]
    4a74:	ldur	x8, [x29, #-88]
    4a78:	cmp	w10, #0x1
    4a7c:	csel	x9, x9, xzr, eq  // eq = none
    4a80:	cbz	x8, 5be8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24cc>
    4a84:	cmp	w10, #0x1
    4a88:	mov	w24, wzr
    4a8c:	b.ne	384c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x130>  // b.any
    4a90:	ldr	w10, [x8]
    4a94:	cmp	w10, #0x1
    4a98:	b.ne	384c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x130>  // b.any
    4a9c:	ldr	x10, [x21]
    4aa0:	ldr	x28, [x8, #16]
    4aa4:	ldr	x24, [x9, #16]
    4aa8:	mov	x0, x21
    4aac:	ldr	x8, [x10, #56]
    4ab0:	blr	x8
    4ab4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    4ab8:	ldr	x8, [x8]
    4abc:	mov	w9, w0
    4ac0:	lsr	x9, x9, #3
    4ac4:	ldrh	w10, [x8, #502]
    4ac8:	cmp	w9, w10
    4acc:	b.cs	5330 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c14>  // b.hs, b.nlast
    4ad0:	ldr	x8, [x8, #488]
    4ad4:	mov	w10, #0x40                  	// #64
    4ad8:	ldrb	w8, [x8, x9]
    4adc:	and	w9, w0, #0x7
    4ae0:	lsr	w8, w8, w9
    4ae4:	tst	w8, #0x1
    4ae8:	mov	w8, #0x20                  	// #32
    4aec:	csel	x9, x8, x10, eq  // eq = none
    4af0:	b	5334 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c18>
    4af4:	ands	x12, x16, #0x7
    4af8:	b.eq	46a8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf8c>  // b.none
    4afc:	cmp	w15, w11
    4b00:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4b04:	and	x11, x11, #0xffffffff
    4b08:	lsl	x13, x11, #4
    4b0c:	ldrb	w13, [x14, x13]
    4b10:	cmp	w13, #0x1
    4b14:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4b18:	add	x11, x14, x11, lsl #4
    4b1c:	ldr	w11, [x11, #8]
    4b20:	cmp	w11, w10
    4b24:	b.ne	5324 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c08>  // b.any
    4b28:	cmp	x12, x9
    4b2c:	b.ne	53dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1cc0>  // b.any
    4b30:	sub	w9, w8, #0x9a6
    4b34:	cmp	w9, #0x5e
    4b38:	b.hi	4bb0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1494>  // b.pmore
    4b3c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    4b40:	add	x10, x10, #0x0
    4b44:	adr	x11, 4b54 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1438>
    4b48:	ldrh	w12, [x10, x9, lsl #1]
    4b4c:	add	x11, x11, x12, lsl #2
    4b50:	br	x11
    4b54:	ldr	w9, [sp, #136]
    4b58:	cmp	w9, #0x1
    4b5c:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4b60:	ldr	x8, [sp, #128]
    4b64:	ldrb	w10, [x8, #16]
    4b68:	cmp	w10, #0x1
    4b6c:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4b70:	cmp	w9, #0x2
    4b74:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4b78:	ldrb	w9, [x8, #32]
    4b7c:	cmp	w9, #0x1
    4b80:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4b84:	ldr	w1, [x8, #24]
    4b88:	ldr	w2, [x8, #40]
    4b8c:	mov	x0, x22
    4b90:	bl	0 <LLVMInitializeAArch64AsmParser>
    4b94:	tbz	w0, #0, 4fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c0>
    4b98:	ldur	w8, [x29, #-152]
    4b9c:	cbz	w8, 5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>
    4ba0:	ldur	x8, [x29, #-160]
    4ba4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4ba8:	add	x1, x1, #0x0
    4bac:	b	4fac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1890>
    4bb0:	mov	w9, #0xffffef3b            	// #-4293
    4bb4:	add	w9, w8, w9
    4bb8:	cmp	w9, #0x2f
    4bbc:	b.hi	4c4c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1530>  // b.pmore
    4bc0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    4bc4:	add	x10, x10, #0x0
    4bc8:	adr	x11, 4bd8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x14bc>
    4bcc:	ldrh	w12, [x10, x9, lsl #1]
    4bd0:	add	x11, x11, x12, lsl #2
    4bd4:	br	x11
    4bd8:	ldr	w9, [sp, #136]
    4bdc:	cmp	w9, #0x1
    4be0:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4be4:	ldr	x8, [sp, #128]
    4be8:	ldrb	w10, [x8, #16]
    4bec:	cmp	w10, #0x1
    4bf0:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4bf4:	cmp	w9, #0x2
    4bf8:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4bfc:	ldrb	w10, [x8, #32]
    4c00:	cmp	w10, #0x1
    4c04:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4c08:	cmp	w9, #0x3
    4c0c:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4c10:	ldrb	w9, [x8, #48]
    4c14:	cmp	w9, #0x1
    4c18:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4c1c:	ldr	w23, [x8, #56]
    4c20:	ldr	w1, [x8, #24]
    4c24:	ldr	w21, [x8, #40]
    4c28:	mov	x0, x22
    4c2c:	mov	x2, x23
    4c30:	bl	0 <LLVMInitializeAArch64AsmParser>
    4c34:	tbz	w0, #0, 4e20 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1704>
    4c38:	ldur	w8, [x29, #-152]
    4c3c:	cbz	w8, 5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>
    4c40:	ldur	x8, [x29, #-160]
    4c44:	ldr	x21, [x8]
    4c48:	b	4e48 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x172c>
    4c4c:	mov	w9, #0xffffef03            	// #-4349
    4c50:	add	w9, w8, w9
    4c54:	cmp	w9, #0x32
    4c58:	b.hi	4fe0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c4>  // b.pmore
    4c5c:	mov	w10, #0x1                   	// #1
    4c60:	mov	w11, #0x63                  	// #99
    4c64:	lsl	x10, x10, x9
    4c68:	movk	w11, #0x630, lsl #16
    4c6c:	tst	x10, x11
    4c70:	b.eq	4d0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>  // b.none
    4c74:	ldr	w9, [sp, #136]
    4c78:	cmp	w9, #0x1
    4c7c:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4c80:	ldr	x8, [sp, #128]
    4c84:	ldrb	w10, [x8, #16]
    4c88:	cmp	w10, #0x1
    4c8c:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4c90:	cmp	w9, #0x2
    4c94:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4c98:	ldrb	w9, [x8, #32]
    4c9c:	cmp	w9, #0x1
    4ca0:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4ca4:	ldr	w1, [x8, #24]
    4ca8:	ldr	w2, [x8, #40]
    4cac:	mov	x0, x22
    4cb0:	bl	0 <LLVMInitializeAArch64AsmParser>
    4cb4:	tbz	w0, #0, 4fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c0>
    4cb8:	ldur	w8, [x29, #-152]
    4cbc:	cbz	w8, 5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>
    4cc0:	ldur	x8, [x29, #-160]
    4cc4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4cc8:	add	x1, x1, #0x0
    4ccc:	b	4fac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1890>
    4cd0:	ldr	w9, [sp, #136]
    4cd4:	cmp	w9, #0x1
    4cd8:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4cdc:	ldr	x8, [sp, #128]
    4ce0:	ldrb	w10, [x8, #16]
    4ce4:	cmp	w10, #0x1
    4ce8:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4cec:	cmp	w9, #0x2
    4cf0:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4cf4:	ldrb	w9, [x8, #32]
    4cf8:	cmp	w9, #0x1
    4cfc:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4d00:	ldr	w9, [x8, #24]
    4d04:	ldr	w8, [x8, #40]
    4d08:	b	4ebc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17a0>
    4d0c:	mov	w10, #0x1                   	// #1
    4d10:	lsl	x10, x10, x9
    4d14:	tst	x10, #0x7800000000000
    4d18:	b.eq	4ee4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17c8>  // b.none
    4d1c:	ldr	w9, [sp, #136]
    4d20:	cbz	w9, 5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>
    4d24:	ldr	x8, [sp, #128]
    4d28:	ldrb	w10, [x8]
    4d2c:	cmp	w10, #0x1
    4d30:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4d34:	cmp	w9, #0x1
    4d38:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4d3c:	ldrb	w10, [x8, #16]
    4d40:	cmp	w10, #0x1
    4d44:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4d48:	cmp	w9, #0x2
    4d4c:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4d50:	ldrb	w9, [x8, #32]
    4d54:	cmp	w9, #0x1
    4d58:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4d5c:	ldr	w23, [x8, #8]
    4d60:	ldr	w2, [x8, #24]
    4d64:	ldr	w21, [x8, #40]
    4d68:	mov	x0, x22
    4d6c:	mov	x1, x23
    4d70:	bl	0 <LLVMInitializeAArch64AsmParser>
    4d74:	tbnz	w0, #0, 4d94 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1678>
    4d78:	mov	x0, x22
    4d7c:	mov	x1, x23
    4d80:	mov	x2, x21
    4d84:	bl	0 <LLVMInitializeAArch64AsmParser>
    4d88:	cmp	w21, #0x5
    4d8c:	b.eq	4fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c0>  // b.none
    4d90:	tbz	w0, #0, 4fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c0>
    4d94:	ldur	w8, [x29, #-152]
    4d98:	cbz	w8, 5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>
    4d9c:	ldur	x8, [x29, #-160]
    4da0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4da4:	add	x1, x1, #0x0
    4da8:	b	4fac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1890>
    4dac:	ldr	w9, [sp, #136]
    4db0:	cmp	w9, #0x1
    4db4:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4db8:	ldr	x8, [sp, #128]
    4dbc:	ldrb	w10, [x8, #16]
    4dc0:	cmp	w10, #0x1
    4dc4:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4dc8:	cmp	w9, #0x2
    4dcc:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4dd0:	ldrb	w10, [x8, #32]
    4dd4:	cmp	w10, #0x1
    4dd8:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4ddc:	cmp	w9, #0x3
    4de0:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4de4:	ldrb	w9, [x8, #48]
    4de8:	cmp	w9, #0x1
    4dec:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4df0:	ldr	w23, [x8, #56]
    4df4:	ldr	w1, [x8, #24]
    4df8:	ldr	w21, [x8, #40]
    4dfc:	mov	x0, x22
    4e00:	mov	x2, x23
    4e04:	bl	0 <LLVMInitializeAArch64AsmParser>
    4e08:	tbz	w0, #0, 4e54 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1738>
    4e0c:	ldur	w8, [x29, #-152]
    4e10:	cbz	w8, 5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>
    4e14:	ldur	x8, [x29, #-160]
    4e18:	ldr	x21, [x8]
    4e1c:	b	4e7c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1760>
    4e20:	mov	x0, x22
    4e24:	mov	x1, x21
    4e28:	mov	x2, x23
    4e2c:	bl	0 <LLVMInitializeAArch64AsmParser>
    4e30:	tbz	w0, #0, 4fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c0>
    4e34:	ldur	w8, [x29, #-152]
    4e38:	cmp	w8, #0x1
    4e3c:	b.ls	5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>  // b.plast
    4e40:	ldur	x8, [x29, #-160]
    4e44:	ldr	x21, [x8, #8]
    4e48:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4e4c:	add	x1, x1, #0x0
    4e50:	b	4fb0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1894>
    4e54:	mov	x0, x22
    4e58:	mov	x1, x21
    4e5c:	mov	x2, x23
    4e60:	bl	0 <LLVMInitializeAArch64AsmParser>
    4e64:	tbz	w0, #0, 4e88 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x176c>
    4e68:	ldur	w8, [x29, #-152]
    4e6c:	cmp	w8, #0x1
    4e70:	b.ls	5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>  // b.plast
    4e74:	ldur	x8, [x29, #-160]
    4e78:	ldr	x21, [x8, #8]
    4e7c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4e80:	add	x1, x1, #0x0
    4e84:	b	4fb0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1894>
    4e88:	ldr	w9, [sp, #136]
    4e8c:	cbz	w9, 5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>
    4e90:	ldr	x8, [sp, #128]
    4e94:	ldrb	w10, [x8]
    4e98:	cmp	w10, #0x1
    4e9c:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4ea0:	cmp	w9, #0x1
    4ea4:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4ea8:	ldrb	w9, [x8, #16]
    4eac:	cmp	w9, #0x1
    4eb0:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4eb4:	ldr	w9, [x8, #8]
    4eb8:	ldr	w8, [x8, #24]
    4ebc:	cmp	w9, w8
    4ec0:	b.ne	4fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c0>  // b.any
    4ec4:	ldur	w8, [x29, #-152]
    4ec8:	cmp	w8, #0x1
    4ecc:	b.ls	5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>  // b.plast
    4ed0:	ldur	x8, [x29, #-160]
    4ed4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4ed8:	add	x1, x1, #0x0
    4edc:	ldr	x21, [x8, #8]
    4ee0:	b	4fb0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1894>
    4ee4:	mov	w10, #0x1                   	// #1
    4ee8:	lsl	x9, x10, x9
    4eec:	tst	x9, #0x600000000000
    4ef0:	b.eq	4fe0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c4>  // b.none
    4ef4:	ldr	w9, [sp, #136]
    4ef8:	cbz	w9, 5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>
    4efc:	ldr	x8, [sp, #128]
    4f00:	ldrb	w10, [x8]
    4f04:	cmp	w10, #0x1
    4f08:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4f0c:	cmp	w9, #0x1
    4f10:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4f14:	ldrb	w10, [x8, #16]
    4f18:	cmp	w10, #0x1
    4f1c:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4f20:	cmp	w9, #0x2
    4f24:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4f28:	ldrb	w10, [x8, #32]
    4f2c:	cmp	w10, #0x1
    4f30:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4f34:	cmp	w9, #0x3
    4f38:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    4f3c:	ldrb	w9, [x8, #48]
    4f40:	cmp	w9, #0x1
    4f44:	b.ne	5a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x231c>  // b.any
    4f48:	ldr	w21, [x8, #8]
    4f4c:	ldr	w2, [x8, #24]
    4f50:	ldr	w24, [x8, #40]
    4f54:	ldr	w23, [x8, #56]
    4f58:	mov	x0, x22
    4f5c:	mov	x1, x21
    4f60:	bl	0 <LLVMInitializeAArch64AsmParser>
    4f64:	tbnz	w0, #0, 4f98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x187c>
    4f68:	mov	x0, x22
    4f6c:	mov	x1, x21
    4f70:	mov	x2, x24
    4f74:	bl	0 <LLVMInitializeAArch64AsmParser>
    4f78:	tbnz	w0, #0, 4f98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x187c>
    4f7c:	mov	x0, x22
    4f80:	mov	x1, x21
    4f84:	mov	x2, x23
    4f88:	bl	0 <LLVMInitializeAArch64AsmParser>
    4f8c:	cmp	w23, #0x5
    4f90:	b.eq	4fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c0>  // b.none
    4f94:	tbz	w0, #0, 4fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c0>
    4f98:	ldur	w8, [x29, #-152]
    4f9c:	cbz	w8, 5b8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2470>
    4fa0:	ldur	x8, [x29, #-160]
    4fa4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4fa8:	add	x1, x1, #0x0
    4fac:	ldr	x21, [x8]
    4fb0:	sub	x0, x29, #0x20
    4fb4:	bl	0 <LLVMInitializeAArch64AsmParser>
    4fb8:	ldr	x0, [x19, #8]
    4fbc:	sub	x2, x29, #0x20
    4fc0:	mov	x1, x21
    4fc4:	mov	x3, xzr
    4fc8:	mov	x4, xzr
    4fcc:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    4fd0:	tbz	w0, #0, 50d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19b4>
    4fd4:	mov	w28, #0x1                   	// #1
    4fd8:	b	50fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19e0>
    4fdc:	ldr	w8, [sp, #112]
    4fe0:	sub	w9, w8, #0xf2
    4fe4:	cmp	w9, #0x13
    4fe8:	b.ls	5014 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18f8>  // b.plast
    4fec:	mov	w9, #0xffffeeb1            	// #-4431
    4ff0:	add	w8, w8, w9
    4ff4:	cmp	w8, #0xd
    4ff8:	b.hi	50d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19b4>  // b.pmore
    4ffc:	mov	w9, #0x1                   	// #1
    5000:	lsl	w8, w9, w8
    5004:	mov	w9, #0x2211                	// #8721
    5008:	tst	w8, w9
    500c:	b.ne	502c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1910>  // b.any
    5010:	b	50d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19b4>
    5014:	mov	w10, #0x1                   	// #1
    5018:	lsl	w9, w10, w9
    501c:	mov	w10, #0x8011                	// #32785
    5020:	movk	w10, #0x8, lsl #16
    5024:	tst	w9, w10
    5028:	b.eq	4fec <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18d0>  // b.none
    502c:	ldr	w8, [sp, #136]
    5030:	cmp	w8, #0x2
    5034:	b.ls	5ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x239c>  // b.plast
    5038:	ldr	x8, [sp, #128]
    503c:	ldrb	w9, [x8, #32]
    5040:	cmp	w9, #0x4
    5044:	b.ne	50d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19b4>  // b.any
    5048:	ldr	x0, [x8, #40]
    504c:	add	x1, x29, #0xc
    5050:	add	x2, x29, #0x8
    5054:	sub	x3, x29, #0x28
    5058:	bl	e958 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
    505c:	tbz	w0, #0, 50d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19b4>
    5060:	ldrh	w8, [x29, #8]
    5064:	orr	w8, w8, #0x2
    5068:	cmp	w8, #0x16
    506c:	b.ne	507c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1960>  // b.any
    5070:	ldr	w8, [sp, #112]
    5074:	cmp	w8, #0x105
    5078:	b.eq	50d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19b4>  // b.none
    507c:	ldr	w8, [x29, #12]
    5080:	cmp	w8, #0x39
    5084:	b.hi	50a0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1984>  // b.pmore
    5088:	mov	w9, #0x1                   	// #1
    508c:	mov	x10, #0x3a000000000         	// #3985729650688
    5090:	lsl	x9, x9, x8
    5094:	movk	x10, #0x2a0, lsl #48
    5098:	tst	x9, x10
    509c:	b.ne	50c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19a4>  // b.any
    50a0:	sub	w8, w8, #0x121
    50a4:	cmp	w8, #0x6
    50a8:	b.hi	5154 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a38>  // b.pmore
    50ac:	mov	w9, #0x1                   	// #1
    50b0:	lsl	w8, w9, w8
    50b4:	mov	w9, #0x51                  	// #81
    50b8:	tst	w8, w9
    50bc:	b.eq	5154 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a38>  // b.none
    50c0:	ldr	w8, [sp, #112]
    50c4:	orr	w8, w8, #0x4
    50c8:	cmp	w8, #0x105
    50cc:	b.ne	5154 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a38>  // b.any
    50d0:	mov	x0, x19
    50d4:	str	x28, [sp, #120]
    50d8:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    50dc:	ldr	x9, [sp, #48]
    50e0:	mov	x2, x0
    50e4:	add	x1, sp, #0x70
    50e8:	ldr	x8, [x9]
    50ec:	mov	x0, x9
    50f0:	ldr	x8, [x8, #1080]
    50f4:	blr	x8
    50f8:	mov	w28, wzr
    50fc:	ldur	x0, [x29, #-160]
    5100:	sub	x8, x29, #0xa0
    5104:	add	x8, x8, #0x10
    5108:	cmp	x0, x8
    510c:	b.eq	5114 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19f8>  // b.none
    5110:	bl	0 <free>
    5114:	ldr	x0, [sp, #128]
    5118:	add	x8, x25, #0x10
    511c:	add	x8, x8, #0x10
    5120:	cmp	x0, x8
    5124:	b.eq	512c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a10>  // b.none
    5128:	bl	0 <free>
    512c:	and	w0, w28, #0x1
    5130:	add	sp, sp, #0x1b0
    5134:	ldp	x20, x19, [sp, #96]
    5138:	ldp	x22, x21, [sp, #80]
    513c:	ldp	x24, x23, [sp, #64]
    5140:	ldp	x26, x25, [sp, #48]
    5144:	ldp	x28, x27, [sp, #32]
    5148:	ldp	x29, x30, [sp, #16]
    514c:	ldr	d8, [sp], #112
    5150:	ret
    5154:	ldur	w8, [x29, #-152]
    5158:	cbz	w8, 5c28 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x250c>
    515c:	ldur	x9, [x29, #-160]
    5160:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5164:	add	x1, x1, #0x0
    5168:	add	x8, x9, x8, lsl #3
    516c:	ldur	x21, [x8, #-8]
    5170:	b	4fb0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1894>
    5174:	mov	w8, #0x20                  	// #32
    5178:	cmp	x24, x8
    517c:	b.cs	51d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ab4>  // b.hs, b.nlast
    5180:	sub	x21, x21, #0x1
    5184:	cmp	x21, x8
    5188:	b.cs	5390 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c74>  // b.hs, b.nlast
    518c:	cmp	x8, #0x20
    5190:	mov	w8, #0x3f                  	// #63
    5194:	mov	w10, #0x1f                  	// #31
    5198:	neg	x9, x24
    519c:	csel	x8, x10, x8, eq  // eq = none
    51a0:	and	x28, x8, x9
    51a4:	sub	x8, x28, #0x1
    51a8:	cmp	x8, x21
    51ac:	b.cs	5420 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1d04>  // b.hs, b.nlast
    51b0:	ldr	x0, [sp, #32]
    51b4:	ldr	x8, [x0]
    51b8:	ldr	x8, [x8, #72]
    51bc:	blr	x8
    51c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    51c4:	mov	x20, x0
    51c8:	add	x1, x1, #0x0
    51cc:	b	53b4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c98>
    51d0:	ldr	x0, [sp, #40]
    51d4:	b	5308 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1bec>
    51d8:	mov	w8, #0x20                  	// #32
    51dc:	cmp	x21, x8
    51e0:	b.cs	5304 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1be8>  // b.hs, b.nlast
    51e4:	sub	x9, x24, #0x1
    51e8:	cmp	x9, x8
    51ec:	b.cs	5398 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c7c>  // b.hs, b.nlast
    51f0:	adds	x21, x9, x21
    51f4:	b.cs	5644 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f28>  // b.hs, b.nlast
    51f8:	cmp	x21, x8
    51fc:	b.cs	5644 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f28>  // b.hs, b.nlast
    5200:	ldr	x0, [x19, #8]
    5204:	ldr	x8, [x0]
    5208:	ldr	x8, [x8, #48]
    520c:	blr	x8
    5210:	mov	x1, x0
    5214:	mov	x0, x21
    5218:	mov	w2, wzr
    521c:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5220:	ldr	x21, [sp, #40]
    5224:	str	x0, [sp, #32]
    5228:	ldr	x8, [x21]
    522c:	mov	x0, x21
    5230:	ldr	x8, [x8, #72]
    5234:	blr	x8
    5238:	ldr	x8, [x21]
    523c:	str	x0, [sp, #24]
    5240:	mov	x0, x21
    5244:	ldr	x8, [x8, #80]
    5248:	blr	x8
    524c:	ldr	x8, [x19, #8]
    5250:	mov	x21, x0
    5254:	ldr	x9, [x8]
    5258:	mov	x0, x8
    525c:	ldr	x9, [x9, #48]
    5260:	blr	x9
    5264:	mov	x28, x0
    5268:	mov	w0, #0x70                  	// #112
    526c:	bl	0 <_Znwm>
    5270:	mov	x8, x0
    5274:	strb	wzr, [x8, #32]!
    5278:	ldr	x9, [sp, #32]
    527c:	stp	x8, xzr, [x0, #16]
    5280:	ldr	x8, [sp, #24]
    5284:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    5288:	add	x24, x24, #0x0
    528c:	str	x24, [x0]
    5290:	str	wzr, [x0, #48]
    5294:	str	x28, [x0, #104]
    5298:	stp	x21, x9, [x0, #64]
    529c:	str	x8, [x0, #56]
    52a0:	ldr	w8, [x23]
    52a4:	cmp	w8, #0x4
    52a8:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    52ac:	ldr	x9, [x22]
    52b0:	ldr	x8, [x9, #32]
    52b4:	str	x0, [x9, #32]
    52b8:	cbz	x8, 52cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1bb0>
    52bc:	ldr	x9, [x8]
    52c0:	mov	x0, x8
    52c4:	ldr	x9, [x9, #8]
    52c8:	blr	x9
    52cc:	cmp	x26, #0x4
    52d0:	b.eq	591c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2200>  // b.none
    52d4:	cmp	x26, #0x5
    52d8:	b.ne	5c84 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2568>  // b.any
    52dc:	ldr	w8, [x25]
    52e0:	ldrb	w9, [x25, #4]
    52e4:	mov	w10, #0x6662                	// #26210
    52e8:	movk	w10, #0x6978, lsl #16
    52ec:	mov	w11, #0x6c                  	// #108
    52f0:	eor	w8, w8, w10
    52f4:	eor	w9, w9, w11
    52f8:	orr	w8, w8, w9
    52fc:	cbz	w8, 55e8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ecc>
    5300:	b	5c84 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2568>
    5304:	ldr	x0, [sp, #32]
    5308:	ldr	x8, [x0]
    530c:	ldr	x8, [x8, #72]
    5310:	blr	x8
    5314:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5318:	mov	x20, x0
    531c:	add	x1, x1, #0x0
    5320:	b	53b4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c98>
    5324:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5328:	add	x1, x1, #0x0
    532c:	b	46b0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf94>
    5330:	mov	w9, #0x20                  	// #32
    5334:	cmp	x24, x9
    5338:	b.cs	5380 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c64>  // b.hs, b.nlast
    533c:	sub	x21, x28, #0x1
    5340:	cmp	x21, x9
    5344:	b.cs	53e8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ccc>  // b.hs, b.nlast
    5348:	neg	x8, x24
    534c:	mov	x24, x9
    5350:	cmp	x9, #0x20
    5354:	mov	w9, #0x3f                  	// #63
    5358:	mov	w10, #0x1f                  	// #31
    535c:	csel	x9, x10, x9, eq  // eq = none
    5360:	and	x28, x9, x8
    5364:	sub	x8, x28, #0x1
    5368:	cmp	x8, x21
    536c:	b.cs	5664 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f48>  // b.hs, b.nlast
    5370:	ldur	x21, [x29, #-104]
    5374:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5378:	add	x1, x1, #0x0
    537c:	b	53f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1cd8>
    5380:	ldr	x21, [sp, #168]
    5384:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5388:	add	x1, x1, #0x0
    538c:	b	53f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1cd8>
    5390:	ldr	x0, [sp, #32]
    5394:	b	539c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c80>
    5398:	ldr	x0, [sp, #40]
    539c:	ldr	x8, [x0]
    53a0:	ldr	x8, [x8, #72]
    53a4:	blr	x8
    53a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    53ac:	mov	x20, x0
    53b0:	add	x1, x1, #0x0
    53b4:	add	x0, sp, #0x70
    53b8:	bl	0 <LLVMInitializeAArch64AsmParser>
    53bc:	ldr	x0, [x19, #8]
    53c0:	add	x2, sp, #0x70
    53c4:	mov	x1, x20
    53c8:	mov	x3, xzr
    53cc:	mov	x4, xzr
    53d0:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    53d4:	mov	w28, w0
    53d8:	b	512c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a10>
    53dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    53e0:	add	x1, x1, #0x0
    53e4:	b	46b0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf94>
    53e8:	ldur	x21, [x29, #-104]
    53ec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    53f0:	add	x1, x1, #0x0
    53f4:	sub	x0, x29, #0x20
    53f8:	bl	0 <LLVMInitializeAArch64AsmParser>
    53fc:	ldr	x0, [x19, #8]
    5400:	sub	x2, x29, #0x20
    5404:	mov	x1, x21
    5408:	mov	x3, xzr
    540c:	mov	x4, xzr
    5410:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    5414:	mov	w28, w0
    5418:	mov	w24, #0x1                   	// #1
    541c:	b	384c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x130>
    5420:	ldr	x0, [x19, #8]
    5424:	ldr	x8, [x0]
    5428:	ldr	x8, [x8, #48]
    542c:	blr	x8
    5430:	mov	x1, x0
    5434:	mov	x0, x28
    5438:	mov	w2, wzr
    543c:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5440:	ldr	x8, [x19, #8]
    5444:	str	x0, [sp, #16]
    5448:	ldr	x9, [x8]
    544c:	mov	x0, x8
    5450:	ldr	x9, [x9, #48]
    5454:	blr	x9
    5458:	mov	x1, x0
    545c:	mov	x0, x21
    5460:	mov	w2, wzr
    5464:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5468:	ldr	x21, [sp, #40]
    546c:	str	x0, [sp, #24]
    5470:	ldr	x8, [x21]
    5474:	mov	x0, x21
    5478:	ldr	x8, [x8, #72]
    547c:	blr	x8
    5480:	ldr	x8, [x21]
    5484:	str	x0, [sp, #8]
    5488:	mov	x0, x21
    548c:	ldr	x8, [x8, #80]
    5490:	blr	x8
    5494:	ldr	x8, [x19, #8]
    5498:	mov	x28, x0
    549c:	ldr	x9, [x8]
    54a0:	mov	x0, x8
    54a4:	ldr	x9, [x9, #48]
    54a8:	blr	x9
    54ac:	mov	x21, x0
    54b0:	mov	w0, #0x70                  	// #112
    54b4:	bl	0 <_Znwm>
    54b8:	mov	x8, x0
    54bc:	strb	wzr, [x8, #32]!
    54c0:	ldr	x9, [sp, #16]
    54c4:	stp	x8, xzr, [x0, #16]
    54c8:	ldr	x8, [sp, #8]
    54cc:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    54d0:	add	x24, x24, #0x0
    54d4:	str	x24, [x0]
    54d8:	str	wzr, [x0, #48]
    54dc:	str	x21, [x0, #104]
    54e0:	stp	x28, x9, [x0, #64]
    54e4:	str	x8, [x0, #56]
    54e8:	ldr	w8, [x23]
    54ec:	cmp	w8, #0x3
    54f0:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    54f4:	ldr	x9, [x22]
    54f8:	ldr	x21, [sp, #32]
    54fc:	ldr	x8, [x9, #24]
    5500:	str	x0, [x9, #24]
    5504:	cbz	x8, 5518 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1dfc>
    5508:	ldr	x9, [x8]
    550c:	mov	x0, x8
    5510:	ldr	x9, [x9, #8]
    5514:	blr	x9
    5518:	ldr	x8, [x21]
    551c:	mov	x0, x21
    5520:	ldr	x8, [x8, #72]
    5524:	blr	x8
    5528:	ldr	x8, [x21]
    552c:	str	x0, [sp, #40]
    5530:	mov	x0, x21
    5534:	ldr	x8, [x8, #80]
    5538:	blr	x8
    553c:	ldr	x8, [x19, #8]
    5540:	mov	x28, x0
    5544:	ldr	x9, [x8]
    5548:	mov	x0, x8
    554c:	ldr	x9, [x9, #48]
    5550:	blr	x9
    5554:	mov	x21, x0
    5558:	mov	w0, #0x70                  	// #112
    555c:	bl	0 <_Znwm>
    5560:	mov	x8, x0
    5564:	strb	wzr, [x8, #32]!
    5568:	ldr	x9, [sp, #24]
    556c:	stp	x8, xzr, [x0, #16]
    5570:	ldr	x8, [sp, #40]
    5574:	str	x24, [x0]
    5578:	str	wzr, [x0, #48]
    557c:	str	x21, [x0, #104]
    5580:	stp	x28, x9, [x0, #64]
    5584:	str	x8, [x0, #56]
    5588:	ldr	w8, [x23]
    558c:	cmp	w8, #0x4
    5590:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    5594:	ldr	x9, [x22]
    5598:	ldr	x8, [x9, #32]
    559c:	str	x0, [x9, #32]
    55a0:	cbz	x8, 55b4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1e98>
    55a4:	ldr	x9, [x8]
    55a8:	mov	x0, x8
    55ac:	ldr	x9, [x9, #8]
    55b0:	blr	x9
    55b4:	cmp	x26, #0x5
    55b8:	b.eq	58c8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x21ac>  // b.none
    55bc:	cmp	x26, #0x3
    55c0:	b.ne	5904 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x21e8>  // b.any
    55c4:	ldrh	w8, [x25]
    55c8:	ldrb	w9, [x25, #2]
    55cc:	mov	w10, #0x6662                	// #26210
    55d0:	mov	w11, #0x69                  	// #105
    55d4:	eor	w8, w8, w10
    55d8:	eor	w9, w9, w11
    55dc:	orr	w8, w8, w9
    55e0:	tst	w8, #0xffff
    55e4:	b.ne	5904 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x21e8>  // b.any
    55e8:	ldr	x8, [x27]
    55ec:	mov	x0, x27
    55f0:	ldr	x8, [x8, #72]
    55f4:	blr	x8
    55f8:	ldr	x8, [x19, #8]
    55fc:	mov	x21, x0
    5600:	ldr	x9, [x8]
    5604:	mov	x0, x8
    5608:	ldr	x9, [x9, #48]
    560c:	blr	x9
    5610:	mov	x27, x0
    5614:	mov	w0, #0x70                  	// #112
    5618:	bl	0 <_Znwm>
    561c:	mov	x8, x0
    5620:	mov	w9, #0x6                   	// #6
    5624:	strb	wzr, [x8, #32]!
    5628:	str	w9, [x0, #48]
    562c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5630:	add	x9, x9, #0x0
    5634:	mov	w10, #0x3                   	// #3
    5638:	str	x24, [x0]
    563c:	str	x27, [x0, #104]
    5640:	b	59f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x22d8>
    5644:	ldr	x0, [sp, #40]
    5648:	ldr	x8, [x0]
    564c:	ldr	x8, [x8, #72]
    5650:	blr	x8
    5654:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5658:	mov	x20, x0
    565c:	add	x1, x1, #0x0
    5660:	b	53b4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c98>
    5664:	ldr	x0, [x19, #8]
    5668:	ldr	x8, [x0]
    566c:	ldr	x8, [x8, #48]
    5670:	blr	x8
    5674:	mov	x1, x0
    5678:	mov	x0, x28
    567c:	mov	w2, wzr
    5680:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5684:	ldr	x8, [x19, #8]
    5688:	mov	x28, x0
    568c:	ldr	x9, [x8]
    5690:	mov	x0, x8
    5694:	ldr	x9, [x9, #48]
    5698:	blr	x9
    569c:	mov	x1, x0
    56a0:	mov	x0, x21
    56a4:	mov	w2, wzr
    56a8:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    56ac:	ldr	x8, [x27]
    56b0:	str	x0, [sp, #40]
    56b4:	mov	x0, x27
    56b8:	ldr	x8, [x8, #72]
    56bc:	blr	x8
    56c0:	ldr	x8, [x19, #8]
    56c4:	mov	x21, x0
    56c8:	ldr	x9, [x8]
    56cc:	mov	x0, x8
    56d0:	ldr	x9, [x9, #48]
    56d4:	blr	x9
    56d8:	mov	x27, x0
    56dc:	mov	w0, #0x70                  	// #112
    56e0:	bl	0 <_Znwm>
    56e4:	mov	x8, x0
    56e8:	mov	w9, #0x6                   	// #6
    56ec:	strb	wzr, [x8, #32]!
    56f0:	str	w9, [x0, #48]
    56f4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    56f8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    56fc:	add	x9, x9, #0x0
    5700:	add	x10, x10, #0x0
    5704:	stp	x21, x9, [x0, #64]
    5708:	mov	w9, #0x3                   	// #3
    570c:	str	x27, [x0, #104]
    5710:	str	x10, [x0]
    5714:	str	w9, [x0, #80]
    5718:	strb	wzr, [x0, #84]
    571c:	stp	x8, xzr, [x0, #16]
    5720:	str	x21, [x0, #56]
    5724:	ldr	w8, [x23]
    5728:	cbz	w8, 42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>
    572c:	ldr	x9, [x22]
    5730:	ldr	x8, [x9]
    5734:	str	x0, [x9]
    5738:	cbz	x8, 574c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2030>
    573c:	ldr	x9, [x8]
    5740:	mov	x0, x8
    5744:	ldr	x9, [x9, #8]
    5748:	blr	x9
    574c:	ldr	x0, [x19, #8]
    5750:	cmp	x24, #0x20
    5754:	mov	w9, #0x7                   	// #7
    5758:	cinc	w24, w9, ne  // ne = any
    575c:	ldr	x8, [x0]
    5760:	ldr	x8, [x8, #48]
    5764:	blr	x8
    5768:	mov	x21, x0
    576c:	mov	w0, #0x70                  	// #112
    5770:	bl	0 <_Znwm>
    5774:	mov	x8, x0
    5778:	mov	w9, #0x3                   	// #3
    577c:	strb	wzr, [x8, #32]!
    5780:	str	w9, [x0, #48]
    5784:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5788:	add	x9, x9, #0x0
    578c:	str	x9, [x0]
    5790:	str	x21, [x0, #104]
    5794:	str	w24, [x0, #72]
    5798:	stp	xzr, xzr, [x0, #56]
    579c:	stur	xzr, [x0, #84]
    57a0:	stur	xzr, [x0, #76]
    57a4:	stp	x8, xzr, [x0, #16]
    57a8:	stur	xzr, [x0, #89]
    57ac:	ldr	w8, [x23]
    57b0:	cmp	w8, #0x2
    57b4:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    57b8:	ldr	x9, [x22]
    57bc:	ldr	x8, [x9, #16]
    57c0:	str	x0, [x9, #16]
    57c4:	cbz	x8, 57d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x20bc>
    57c8:	ldr	x9, [x8]
    57cc:	mov	x0, x8
    57d0:	ldr	x9, [x9, #8]
    57d4:	blr	x9
    57d8:	ldr	x0, [x19, #8]
    57dc:	ldp	x24, x27, [sp, #168]
    57e0:	ldr	x8, [x0]
    57e4:	ldr	x8, [x8, #48]
    57e8:	blr	x8
    57ec:	mov	x21, x0
    57f0:	mov	w0, #0x70                  	// #112
    57f4:	bl	0 <_Znwm>
    57f8:	mov	x8, x0
    57fc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5800:	strb	wzr, [x8, #32]!
    5804:	add	x9, x9, #0x0
    5808:	str	x9, [x0]
    580c:	str	wzr, [x0, #48]
    5810:	str	x21, [x0, #104]
    5814:	stp	x27, x28, [x0, #64]
    5818:	stp	x8, xzr, [x0, #16]
    581c:	str	x24, [x0, #56]
    5820:	ldr	w8, [x23]
    5824:	cmp	w8, #0x3
    5828:	b.ls	42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>  // b.plast
    582c:	ldr	x9, [x22]
    5830:	ldr	x8, [x9, #24]
    5834:	str	x0, [x9, #24]
    5838:	cbz	x8, 584c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2130>
    583c:	ldr	x9, [x8]
    5840:	mov	x0, x8
    5844:	ldr	x9, [x9, #8]
    5848:	blr	x9
    584c:	ldr	x0, [x19, #8]
    5850:	ldp	x24, x28, [x29, #-104]
    5854:	ldr	x8, [x0]
    5858:	ldr	x8, [x8, #48]
    585c:	blr	x8
    5860:	mov	x27, x0
    5864:	mov	w0, #0x70                  	// #112
    5868:	bl	0 <_Znwm>
    586c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5870:	mov	x8, x0
    5874:	add	x9, x9, #0x0
    5878:	strb	wzr, [x8, #32]!
    587c:	str	x9, [x0]
    5880:	ldr	x9, [sp, #40]
    5884:	str	wzr, [x0, #48]
    5888:	str	x27, [x0, #104]
    588c:	str	x24, [x0, #56]
    5890:	stp	x28, x9, [x0, #64]
    5894:	stp	x8, xzr, [x0, #16]
    5898:	ldp	w8, w9, [x22, #8]
    589c:	mov	x21, x0
    58a0:	cmp	w8, w9
    58a4:	b.cs	5a24 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2308>  // b.hs, b.nlast
    58a8:	ldr	x10, [x22]
    58ac:	cmp	w8, w9
    58b0:	str	x21, [x10, w8, uxtw #3]
    58b4:	b.cs	5c9c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2580>  // b.hs, b.nlast
    58b8:	mov	w24, wzr
    58bc:	add	w8, w8, #0x1
    58c0:	str	w8, [x23]
    58c4:	b	384c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x130>
    58c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    58cc:	add	x1, x1, #0x0
    58d0:	mov	x0, x25
    58d4:	mov	x2, x26
    58d8:	bl	0 <bcmp>
    58dc:	cbz	w0, 599c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2280>
    58e0:	ldr	w8, [x25]
    58e4:	ldrb	w9, [x25, #4]
    58e8:	mov	w10, #0x6275                	// #25205
    58ec:	movk	w10, #0x6966, lsl #16
    58f0:	mov	w11, #0x7a                  	// #122
    58f4:	eor	w8, w8, w10
    58f8:	eor	w9, w9, w11
    58fc:	orr	w8, w8, w9
    5900:	cbz	w8, 5948 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x222c>
    5904:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5908:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    590c:	add	x0, x0, #0x0
    5910:	add	x1, x1, #0x0
    5914:	mov	w2, #0x122a                	// #4650
    5918:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    591c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5920:	add	x1, x1, #0x0
    5924:	mov	x0, x25
    5928:	mov	x2, x26
    592c:	bl	0 <bcmp>
    5930:	cbz	w0, 599c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2280>
    5934:	ldr	w8, [x25]
    5938:	mov	w9, #0x6275                	// #25205
    593c:	movk	w9, #0x7866, lsl #16
    5940:	cmp	w8, w9
    5944:	b.ne	5c84 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2568>  // b.any
    5948:	ldr	x8, [x27]
    594c:	mov	x0, x27
    5950:	ldr	x8, [x8, #72]
    5954:	blr	x8
    5958:	ldr	x8, [x19, #8]
    595c:	mov	x21, x0
    5960:	ldr	x9, [x8]
    5964:	mov	x0, x8
    5968:	ldr	x9, [x9, #48]
    596c:	blr	x9
    5970:	mov	x27, x0
    5974:	mov	w0, #0x70                  	// #112
    5978:	bl	0 <_Znwm>
    597c:	mov	x8, x0
    5980:	mov	w9, #0x6                   	// #6
    5984:	strb	wzr, [x8, #32]!
    5988:	str	w9, [x0, #48]
    598c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5990:	str	x24, [x0]
    5994:	add	x9, x9, #0x0
    5998:	b	59ec <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x22d0>
    599c:	ldr	x8, [x27]
    59a0:	mov	x0, x27
    59a4:	ldr	x8, [x8, #72]
    59a8:	blr	x8
    59ac:	ldr	x8, [x19, #8]
    59b0:	mov	x21, x0
    59b4:	ldr	x9, [x8]
    59b8:	mov	x0, x8
    59bc:	ldr	x9, [x9, #48]
    59c0:	blr	x9
    59c4:	mov	x27, x0
    59c8:	mov	w0, #0x70                  	// #112
    59cc:	bl	0 <_Znwm>
    59d0:	mov	x8, x0
    59d4:	mov	w9, #0x6                   	// #6
    59d8:	strb	wzr, [x8, #32]!
    59dc:	str	w9, [x0, #48]
    59e0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    59e4:	add	x9, x9, #0x0
    59e8:	str	x24, [x0]
    59ec:	str	x27, [x0, #104]
    59f0:	mov	w10, #0x4                   	// #4
    59f4:	stp	x21, x9, [x0, #64]
    59f8:	str	w10, [x0, #80]
    59fc:	strb	wzr, [x0, #84]
    5a00:	stp	x8, xzr, [x0, #16]
    5a04:	str	x21, [x0, #56]
    5a08:	ldr	w8, [x23]
    5a0c:	cbz	w8, 42dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbc0>
    5a10:	ldr	x9, [x22]
    5a14:	ldr	x8, [x9]
    5a18:	str	x0, [x9]
    5a1c:	cbnz	x8, 3dfc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6e0>
    5a20:	b	3e0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6f0>
    5a24:	mov	x0, x22
    5a28:	mov	x1, xzr
    5a2c:	bl	0 <LLVMInitializeAArch64AsmParser>
    5a30:	ldp	w8, w9, [x22, #8]
    5a34:	b	58a8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x218c>
    5a38:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5a3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5a40:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5a44:	add	x0, x0, #0x0
    5a48:	add	x1, x1, #0x0
    5a4c:	add	x3, x3, #0x0
    5a50:	mov	w2, #0x41                  	// #65
    5a54:	bl	0 <__assert_fail>
    5a58:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5a5c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5a60:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5a64:	add	x0, x0, #0x0
    5a68:	add	x1, x1, #0x0
    5a6c:	add	x3, x3, #0x0
    5a70:	mov	w2, #0x1194                	// #4500
    5a74:	bl	0 <__assert_fail>
    5a78:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5a7c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5a80:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5a84:	add	x0, x0, #0x0
    5a88:	add	x1, x1, #0x0
    5a8c:	add	x3, x3, #0x0
    5a90:	mov	w2, #0x1196                	// #4502
    5a94:	bl	0 <__assert_fail>
    5a98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5a9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5aa0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5aa4:	add	x0, x0, #0x0
    5aa8:	add	x1, x1, #0x0
    5aac:	add	x3, x3, #0x0
    5ab0:	mov	w2, #0x99                  	// #153
    5ab4:	bl	0 <__assert_fail>
    5ab8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5abc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5ac0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5ac4:	add	x0, x0, #0x0
    5ac8:	add	x1, x1, #0x0
    5acc:	add	x3, x3, #0x0
    5ad0:	b	42f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbd8>
    5ad4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5ad8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5adc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5ae0:	add	x0, x0, #0x0
    5ae4:	add	x1, x1, #0x0
    5ae8:	add	x3, x3, #0x0
    5aec:	mov	w2, #0x2d                  	// #45
    5af0:	bl	0 <__assert_fail>
    5af4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5af8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5afc:	add	x0, x0, #0x0
    5b00:	add	x1, x1, #0x0
    5b04:	mov	w2, #0x139a                	// #5018
    5b08:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5b0c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5b10:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5b14:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5b18:	add	x0, x0, #0x0
    5b1c:	add	x1, x1, #0x0
    5b20:	add	x3, x3, #0x0
    5b24:	mov	w2, #0x38                  	// #56
    5b28:	bl	0 <__assert_fail>
    5b2c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5b30:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5b34:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5b38:	add	x0, x0, #0x0
    5b3c:	add	x1, x1, #0x0
    5b40:	add	x3, x3, #0x0
    5b44:	mov	w2, #0x71                  	// #113
    5b48:	bl	0 <__assert_fail>
    5b4c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5b50:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5b54:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5b58:	add	x0, x0, #0x0
    5b5c:	add	x1, x1, #0x0
    5b60:	add	x3, x3, #0x0
    5b64:	mov	w2, #0x65                  	// #101
    5b68:	bl	0 <__assert_fail>
    5b6c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5b70:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5b74:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5b78:	add	x0, x0, #0x0
    5b7c:	add	x1, x1, #0x0
    5b80:	add	x3, x3, #0x0
    5b84:	mov	w2, #0xa7                  	// #167
    5b88:	bl	0 <__assert_fail>
    5b8c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5b90:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5b94:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5b98:	add	x0, x0, #0x0
    5b9c:	add	x1, x1, #0x0
    5ba0:	add	x3, x3, #0x0
    5ba4:	b	42f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbd8>
    5ba8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5bac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5bb0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5bb4:	add	x0, x0, #0x0
    5bb8:	add	x1, x1, #0x0
    5bbc:	add	x3, x3, #0x0
    5bc0:	mov	w2, #0xf2a                 	// #3882
    5bc4:	bl	0 <__assert_fail>
    5bc8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5bcc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5bd0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5bd4:	add	x0, x0, #0x0
    5bd8:	add	x1, x1, #0x0
    5bdc:	add	x3, x3, #0x0
    5be0:	mov	w2, #0x1ef                 	// #495
    5be4:	bl	0 <__assert_fail>
    5be8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5bec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5bf0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5bf4:	add	x0, x0, #0x0
    5bf8:	add	x1, x1, #0x0
    5bfc:	add	x3, x3, #0x0
    5c00:	mov	w2, #0x69                  	// #105
    5c04:	bl	0 <__assert_fail>
    5c08:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5c0c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5c10:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5c14:	add	x0, x0, #0x0
    5c18:	add	x1, x1, #0x0
    5c1c:	add	x3, x3, #0x0
    5c20:	mov	w2, #0x1f4                 	// #500
    5c24:	bl	0 <__assert_fail>
    5c28:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5c2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5c30:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5c34:	add	x0, x0, #0x0
    5c38:	add	x1, x1, #0x0
    5c3c:	add	x3, x3, #0x0
    5c40:	b	5b84 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2468>
    5c44:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5c48:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5c4c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5c50:	add	x0, x0, #0x0
    5c54:	add	x1, x1, #0x0
    5c58:	add	x3, x3, #0x0
    5c5c:	mov	w2, #0x108                 	// #264
    5c60:	bl	0 <__assert_fail>
    5c64:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5c68:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5c6c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5c70:	add	x0, x0, #0x0
    5c74:	add	x1, x1, #0x0
    5c78:	add	x3, x3, #0x0
    5c7c:	mov	w2, #0x12df                	// #4831
    5c80:	bl	0 <__assert_fail>
    5c84:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5c88:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5c8c:	add	x0, x0, #0x0
    5c90:	add	x1, x1, #0x0
    5c94:	mov	w2, #0x1260                	// #4704
    5c98:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5c9c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5ca0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5ca4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5ca8:	add	x0, x0, #0x0
    5cac:	add	x1, x1, #0x0
    5cb0:	add	x3, x3, #0x0
    5cb4:	mov	w2, #0x43                  	// #67
    5cb8:	bl	0 <__assert_fail>

0000000000005cbc <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj>:
    5cbc:	stp	x29, x30, [sp, #-32]!
    5cc0:	stp	x20, x19, [sp, #16]
    5cc4:	mov	x29, sp
    5cc8:	sub	w20, w2, #0x13
    5ccc:	cmp	w20, #0x16
    5cd0:	b.hi	5d38 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x7c>  // b.pmore
    5cd4:	mov	w8, #0x20eb                	// #8427
    5cd8:	movk	w8, #0x5f, lsl #16
    5cdc:	lsr	w8, w8, w20
    5ce0:	tbz	w8, #0, 5d38 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x7c>
    5ce4:	ldr	x8, [x1]
    5ce8:	mov	x0, x1
    5cec:	mov	x19, x1
    5cf0:	ldr	x8, [x8, #40]
    5cf4:	blr	x8
    5cf8:	tbz	w0, #0, 5d38 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x7c>
    5cfc:	ldr	w8, [x19, #48]
    5d00:	cbnz	w8, 5d48 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x8c>
    5d04:	ldr	x8, [x19, #72]
    5d08:	cbz	x8, 5d68 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0xac>
    5d0c:	ldr	w9, [x8]
    5d10:	cmp	w9, #0x1
    5d14:	b.ne	5d38 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x7c>  // b.any
    5d18:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5d1c:	add	x9, x9, #0x0
    5d20:	ldr	x9, [x9, w20, sxtw #3]
    5d24:	ldr	x8, [x8, #16]
    5d28:	cmp	x8, x9
    5d2c:	cset	w8, eq  // eq = none
    5d30:	lsl	w0, w8, #2
    5d34:	b	5d3c <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x80>
    5d38:	mov	w0, wzr
    5d3c:	ldp	x20, x19, [sp, #16]
    5d40:	ldp	x29, x30, [sp], #32
    5d44:	ret
    5d48:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5d4c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5d50:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5d54:	add	x0, x0, #0x0
    5d58:	add	x1, x1, #0x0
    5d5c:	add	x3, x3, #0x0
    5d60:	mov	w2, #0x1f4                 	// #500
    5d64:	bl	0 <__assert_fail>
    5d68:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5d6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5d70:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5d74:	add	x0, x0, #0x0
    5d78:	add	x1, x1, #0x0
    5d7c:	add	x3, x3, #0x0
    5d80:	mov	w2, #0x69                  	// #105
    5d84:	bl	0 <__assert_fail>

0000000000005d88 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    5d88:	stp	x29, x30, [sp, #-64]!
    5d8c:	stp	x24, x23, [sp, #16]
    5d90:	stp	x22, x21, [sp, #32]
    5d94:	stp	x20, x19, [sp, #48]
    5d98:	mov	x29, sp
    5d9c:	cmp	w1, #0x68d
    5da0:	b.cs	5f84 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1fc>  // b.hs, b.nlast
    5da4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    5da8:	add	x8, x8, #0x0
    5dac:	mov	w9, #0xd                   	// #13
    5db0:	umaddl	x20, w1, w9, x8
    5db4:	ldrb	w8, [x20]
    5db8:	cbz	w8, 5f38 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b0>
    5dbc:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
    5dc0:	mov	x19, x2
    5dc4:	mov	w21, wzr
    5dc8:	add	x22, x2, #0x8
    5dcc:	add	x23, x23, #0x0
    5dd0:	and	w8, w8, #0xff
    5dd4:	sub	w8, w8, #0x1
    5dd8:	cmp	w8, #0x67
    5ddc:	b.hi	5f6c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e4>  // b.pmore
    5de0:	adr	x9, 5df4 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x6c>
    5de4:	ldrb	w10, [x23, x8]
    5de8:	add	x9, x9, x10, lsl #2
    5dec:	mov	w24, #0x1                   	// #1
    5df0:	br	x9
    5df4:	ldrb	w9, [x20, #1]
    5df8:	ldr	w8, [x22]
    5dfc:	cmp	x8, x9
    5e00:	b.ls	5f4c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    5e04:	ldr	x10, [x19]
    5e08:	ldr	x9, [x10, x9, lsl #3]
    5e0c:	str	w21, [x9, #8]
    5e10:	ldrb	w9, [x20, #1]
    5e14:	cmp	x8, x9
    5e18:	b.ls	5f4c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    5e1c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5e20:	add	x8, x10, x9, lsl #3
    5e24:	add	x1, x1, #0x0
    5e28:	mov	w2, #0x1                   	// #1
    5e2c:	b	5ea8 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x120>
    5e30:	ldrb	w9, [x20, #1]
    5e34:	ldr	w8, [x22]
    5e38:	cmp	x8, x9
    5e3c:	b.ls	5f4c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    5e40:	ldr	x10, [x19]
    5e44:	ldr	x9, [x10, x9, lsl #3]
    5e48:	str	w21, [x9, #8]
    5e4c:	ldrb	w9, [x20, #1]
    5e50:	cmp	x8, x9
    5e54:	b.ls	5f4c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    5e58:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5e5c:	add	x8, x10, x9, lsl #3
    5e60:	add	x1, x1, #0x0
    5e64:	mov	w24, #0x1                   	// #1
    5e68:	mov	w2, #0x1                   	// #1
    5e6c:	b	5eac <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x124>
    5e70:	ldrb	w9, [x20, #1]
    5e74:	ldr	w8, [x22]
    5e78:	cmp	x8, x9
    5e7c:	b.ls	5f4c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    5e80:	ldr	x10, [x19]
    5e84:	ldr	x9, [x10, x9, lsl #3]
    5e88:	str	w21, [x9, #8]
    5e8c:	ldrb	w9, [x20, #1]
    5e90:	cmp	x8, x9
    5e94:	b.ls	5f4c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    5e98:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5e9c:	mov	x2, xzr
    5ea0:	add	x8, x10, x9, lsl #3
    5ea4:	add	x1, x1, #0x0
    5ea8:	mov	w24, #0x1                   	// #1
    5eac:	ldr	x0, [x8]
    5eb0:	bl	0 <LLVMInitializeAArch64AsmParser>
    5eb4:	ldrb	w8, [x20, #2]!
    5eb8:	add	w21, w21, w24
    5ebc:	cbnz	w8, 5dd0 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x48>
    5ec0:	b	5f38 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b0>
    5ec4:	ldrb	w9, [x20, #1]
    5ec8:	ldr	w8, [x22]
    5ecc:	cmp	x8, x9
    5ed0:	b.ls	5f4c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    5ed4:	ldr	x10, [x19]
    5ed8:	ldr	x9, [x10, x9, lsl #3]
    5edc:	str	w21, [x9, #8]
    5ee0:	ldrb	w9, [x20, #1]
    5ee4:	cmp	x8, x9
    5ee8:	b.ls	5f4c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    5eec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5ef0:	add	x8, x10, x9, lsl #3
    5ef4:	add	x1, x1, #0x0
    5ef8:	mov	w24, #0x2                   	// #2
    5efc:	b	5e68 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xe0>
    5f00:	ldrb	w9, [x20, #1]
    5f04:	ldr	w8, [x22]
    5f08:	cmp	x8, x9
    5f0c:	b.ls	5f4c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    5f10:	ldr	x10, [x19]
    5f14:	ldr	x9, [x10, x9, lsl #3]
    5f18:	str	w21, [x9, #8]
    5f1c:	ldrb	w9, [x20, #1]
    5f20:	cmp	x8, x9
    5f24:	b.ls	5f4c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    5f28:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5f2c:	add	x8, x10, x9, lsl #3
    5f30:	add	x1, x1, #0x0
    5f34:	b	5e28 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xa0>
    5f38:	ldp	x20, x19, [sp, #48]
    5f3c:	ldp	x22, x21, [sp, #32]
    5f40:	ldp	x24, x23, [sp, #16]
    5f44:	ldp	x29, x30, [sp], #64
    5f48:	ret
    5f4c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5f50:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5f54:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5f58:	add	x0, x0, #0x0
    5f5c:	add	x1, x1, #0x0
    5f60:	add	x3, x3, #0x0
    5f64:	mov	w2, #0x99                  	// #153
    5f68:	bl	0 <__assert_fail>
    5f6c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5f70:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5f74:	add	x0, x0, #0x0
    5f78:	add	x1, x1, #0x0
    5f7c:	mov	w2, #0x1a94                	// #6804
    5f80:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5f84:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    5f88:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5f8c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    5f90:	add	x0, x0, #0x0
    5f94:	add	x1, x1, #0x0
    5f98:	add	x3, x3, #0x0
    5f9c:	mov	w2, #0x1a8f                	// #6799
    5fa0:	bl	0 <__assert_fail>

0000000000005fa4 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_>:
    5fa4:	stp	x29, x30, [sp, #-32]!
    5fa8:	stp	x20, x19, [sp, #16]
    5fac:	mov	x29, sp
    5fb0:	ldr	w8, [x1, #48]
    5fb4:	cmp	w8, #0x3
    5fb8:	b.ne	60f8 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x154>  // b.any
    5fbc:	ldr	w8, [x1, #84]
    5fc0:	mov	x19, x2
    5fc4:	mov	x20, x1
    5fc8:	cbnz	w8, 5fe0 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x3c>
    5fcc:	ldr	w9, [x19, #48]
    5fd0:	cmp	w9, #0x3
    5fd4:	b.ne	60f8 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x154>  // b.any
    5fd8:	ldr	w9, [x19, #84]
    5fdc:	cbz	w9, 6080 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0xdc>
    5fe0:	ldr	w9, [x20, #76]
    5fe4:	cbnz	w9, 60d8 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x134>
    5fe8:	ldr	w9, [x19, #48]
    5fec:	cmp	w9, #0x3
    5ff0:	b.ne	60d8 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x134>  // b.any
    5ff4:	ldr	w9, [x19, #76]
    5ff8:	cbnz	w9, 60d8 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x134>
    5ffc:	cmp	w8, #0x2
    6000:	b.eq	6024 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x80>  // b.none
    6004:	cmp	w8, #0x1
    6008:	b.ne	6054 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0xb0>  // b.any
    600c:	ldr	x8, [x20]
    6010:	mov	x0, x20
    6014:	ldr	x8, [x8, #56]
    6018:	blr	x8
    601c:	bl	f144 <_ZN4llvmL15getXRegFromWRegEj>
    6020:	b	6038 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x94>
    6024:	ldr	x8, [x20]
    6028:	mov	x0, x20
    602c:	ldr	x8, [x8, #56]
    6030:	blr	x8
    6034:	bl	f27c <_ZN4llvmL15getWRegFromXRegEj>
    6038:	ldr	x8, [x19]
    603c:	mov	w20, w0
    6040:	mov	x0, x19
    6044:	ldr	x8, [x8, #56]
    6048:	blr	x8
    604c:	cmp	w20, w0
    6050:	b	60c0 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x11c>
    6054:	ldr	w8, [x19, #84]
    6058:	cmp	w8, #0x2
    605c:	b.eq	6094 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0xf0>  // b.none
    6060:	cmp	w8, #0x1
    6064:	b.ne	60d0 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x12c>  // b.any
    6068:	ldr	x8, [x19]
    606c:	mov	x0, x19
    6070:	ldr	x8, [x8, #56]
    6074:	blr	x8
    6078:	bl	f144 <_ZN4llvmL15getXRegFromWRegEj>
    607c:	b	60a8 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x104>
    6080:	mov	x1, x20
    6084:	mov	x2, x19
    6088:	ldp	x20, x19, [sp, #16]
    608c:	ldp	x29, x30, [sp], #32
    6090:	b	0 <LLVMInitializeAArch64AsmParser>
    6094:	ldr	x8, [x19]
    6098:	mov	x0, x19
    609c:	ldr	x8, [x8, #56]
    60a0:	blr	x8
    60a4:	bl	f27c <_ZN4llvmL15getWRegFromXRegEj>
    60a8:	ldr	x8, [x20]
    60ac:	mov	w19, w0
    60b0:	mov	x0, x20
    60b4:	ldr	x8, [x8, #56]
    60b8:	blr	x8
    60bc:	cmp	w19, w0
    60c0:	cset	w0, eq  // eq = none
    60c4:	ldp	x20, x19, [sp, #16]
    60c8:	ldp	x29, x30, [sp], #32
    60cc:	ret
    60d0:	mov	w0, wzr
    60d4:	b	60c4 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x120>
    60d8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    60dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    60e0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    60e4:	add	x0, x0, #0x0
    60e8:	add	x1, x1, #0x0
    60ec:	add	x3, x3, #0x0
    60f0:	mov	w2, #0xe92                 	// #3730
    60f4:	bl	0 <__assert_fail>
    60f8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    60fc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6100:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6104:	add	x0, x0, #0x0
    6108:	add	x1, x1, #0x0
    610c:	add	x3, x3, #0x0
    6110:	mov	w2, #0x221                 	// #545
    6114:	bl	0 <__assert_fail>

0000000000006118 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>:
    6118:	sub	sp, sp, #0x60
    611c:	stp	x29, x30, [sp, #48]
    6120:	stp	x22, x21, [sp, #64]
    6124:	stp	x20, x19, [sp, #80]
    6128:	add	x29, sp, #0x30
    612c:	ldr	x19, [x0, #8]
    6130:	mov	x21, x0
    6134:	mov	x20, x1
    6138:	mov	x0, x19
    613c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    6140:	ldr	w8, [x0]
    6144:	cmp	w8, #0x2
    6148:	b.ne	6194 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj+0x7c>  // b.any
    614c:	ldur	q0, [x0, #8]
    6150:	add	x8, sp, #0x10
    6154:	mov	x0, sp
    6158:	add	x22, sp, #0x10
    615c:	str	q0, [sp]
    6160:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    6164:	ldp	x1, x2, [sp, #16]
    6168:	mov	x0, x21
    616c:	mov	w3, wzr
    6170:	bl	61cc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    6174:	cbz	w0, 619c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj+0x84>
    6178:	str	w0, [x20]
    617c:	ldr	x8, [x19]
    6180:	mov	x0, x19
    6184:	ldr	x8, [x8, #136]
    6188:	blr	x8
    618c:	mov	w19, wzr
    6190:	b	61a0 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj+0x88>
    6194:	mov	w19, #0x1                   	// #1
    6198:	b	61b4 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj+0x9c>
    619c:	mov	w19, #0x1                   	// #1
    61a0:	ldr	x0, [sp, #16]
    61a4:	add	x8, x22, #0x10
    61a8:	cmp	x0, x8
    61ac:	b.eq	61b4 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj+0x9c>  // b.none
    61b0:	bl	0 <_ZdlPv>
    61b4:	mov	w0, w19
    61b8:	ldp	x20, x19, [sp, #80]
    61bc:	ldp	x22, x21, [sp, #64]
    61c0:	ldp	x29, x30, [sp, #48]
    61c4:	add	sp, sp, #0x60
    61c8:	ret

00000000000061cc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>:
    61cc:	sub	sp, sp, #0x80
    61d0:	stp	x29, x30, [sp, #80]
    61d4:	stp	x22, x21, [sp, #96]
    61d8:	stp	x20, x19, [sp, #112]
    61dc:	add	x29, sp, #0x50
    61e0:	mov	x20, x0
    61e4:	sub	x8, x29, #0x20
    61e8:	mov	x0, sp
    61ec:	mov	w19, w3
    61f0:	stp	x1, x2, [sp, #32]
    61f4:	stp	x1, x2, [sp]
    61f8:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    61fc:	ldp	x0, x8, [x29, #-32]
    6200:	cmp	x8, #0x3
    6204:	b.eq	62bc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xf0>  // b.none
    6208:	cmp	x8, #0x2
    620c:	b.ne	6594 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3c8>  // b.any
    6210:	ldrh	w8, [x0]
    6214:	mov	w9, #0x307a                	// #12410
    6218:	cmp	w8, w9
    621c:	b.eq	659c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3d0>  // b.none
    6220:	ldrh	w8, [x0]
    6224:	mov	w9, #0x317a                	// #12666
    6228:	cmp	w8, w9
    622c:	b.eq	65b4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3e8>  // b.none
    6230:	ldrh	w8, [x0]
    6234:	mov	w9, #0x327a                	// #12922
    6238:	cmp	w8, w9
    623c:	b.eq	65cc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x400>  // b.none
    6240:	ldrh	w8, [x0]
    6244:	mov	w9, #0x337a                	// #13178
    6248:	cmp	w8, w9
    624c:	b.eq	65e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x418>  // b.none
    6250:	ldrh	w8, [x0]
    6254:	mov	w9, #0x347a                	// #13434
    6258:	cmp	w8, w9
    625c:	b.eq	65fc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x430>  // b.none
    6260:	ldrh	w8, [x0]
    6264:	mov	w9, #0x357a                	// #13690
    6268:	cmp	w8, w9
    626c:	b.eq	6614 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x448>  // b.none
    6270:	ldrh	w8, [x0]
    6274:	mov	w9, #0x367a                	// #13946
    6278:	cmp	w8, w9
    627c:	b.eq	662c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x460>  // b.none
    6280:	ldrh	w8, [x0]
    6284:	mov	w9, #0x377a                	// #14202
    6288:	cmp	w8, w9
    628c:	b.eq	6644 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x478>  // b.none
    6290:	ldrh	w8, [x0]
    6294:	mov	w9, #0x387a                	// #14458
    6298:	cmp	w8, w9
    629c:	b.eq	665c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x490>  // b.none
    62a0:	ldrh	w8, [x0]
    62a4:	mov	w9, #0x397a                	// #14714
    62a8:	mov	w21, wzr
    62ac:	cmp	w8, w9
    62b0:	b.ne	6710 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x544>  // b.any
    62b4:	mov	w8, #0xfe                  	// #254
    62b8:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    62bc:	ldrh	w9, [x0]
    62c0:	ldrb	w10, [x0, #2]
    62c4:	mov	w8, #0x317a                	// #12666
    62c8:	eor	w9, w9, w8
    62cc:	eor	w10, w10, #0x30
    62d0:	orr	w9, w9, w10
    62d4:	tst	w9, #0xffff
    62d8:	b.eq	65a8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3dc>  // b.none
    62dc:	ldrh	w9, [x0]
    62e0:	ldrb	w10, [x0, #2]
    62e4:	mov	w11, #0x31                  	// #49
    62e8:	eor	w8, w9, w8
    62ec:	eor	w9, w10, w11
    62f0:	orr	w8, w8, w9
    62f4:	tst	w8, #0xffff
    62f8:	b.eq	65c0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3f4>  // b.none
    62fc:	ldrh	w9, [x0]
    6300:	ldrb	w10, [x0, #2]
    6304:	mov	w8, #0x317a                	// #12666
    6308:	mov	w11, #0x32                  	// #50
    630c:	eor	w9, w9, w8
    6310:	eor	w10, w10, w11
    6314:	orr	w9, w9, w10
    6318:	tst	w9, #0xffff
    631c:	b.eq	65d8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x40c>  // b.none
    6320:	ldrh	w9, [x0]
    6324:	ldrb	w10, [x0, #2]
    6328:	mov	w11, #0x33                  	// #51
    632c:	eor	w8, w9, w8
    6330:	eor	w9, w10, w11
    6334:	orr	w8, w8, w9
    6338:	tst	w8, #0xffff
    633c:	b.eq	65f0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x424>  // b.none
    6340:	ldrh	w9, [x0]
    6344:	ldrb	w10, [x0, #2]
    6348:	mov	w8, #0x317a                	// #12666
    634c:	mov	w11, #0x34                  	// #52
    6350:	eor	w9, w9, w8
    6354:	eor	w10, w10, w11
    6358:	orr	w9, w9, w10
    635c:	tst	w9, #0xffff
    6360:	b.eq	6608 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x43c>  // b.none
    6364:	ldrh	w9, [x0]
    6368:	ldrb	w10, [x0, #2]
    636c:	mov	w11, #0x35                  	// #53
    6370:	eor	w8, w9, w8
    6374:	eor	w9, w10, w11
    6378:	orr	w8, w8, w9
    637c:	tst	w8, #0xffff
    6380:	b.eq	6620 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x454>  // b.none
    6384:	ldrh	w9, [x0]
    6388:	ldrb	w10, [x0, #2]
    638c:	mov	w8, #0x317a                	// #12666
    6390:	mov	w11, #0x36                  	// #54
    6394:	eor	w9, w9, w8
    6398:	eor	w10, w10, w11
    639c:	orr	w9, w9, w10
    63a0:	tst	w9, #0xffff
    63a4:	b.eq	6638 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x46c>  // b.none
    63a8:	ldrh	w9, [x0]
    63ac:	ldrb	w10, [x0, #2]
    63b0:	mov	w11, #0x37                  	// #55
    63b4:	eor	w8, w9, w8
    63b8:	eor	w9, w10, w11
    63bc:	orr	w8, w8, w9
    63c0:	tst	w8, #0xffff
    63c4:	b.eq	6650 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x484>  // b.none
    63c8:	ldrh	w9, [x0]
    63cc:	ldrb	w10, [x0, #2]
    63d0:	mov	w8, #0x317a                	// #12666
    63d4:	eor	w9, w9, w8
    63d8:	eor	w10, w10, #0x38
    63dc:	orr	w9, w9, w10
    63e0:	tst	w9, #0xffff
    63e4:	b.eq	6668 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x49c>  // b.none
    63e8:	ldrh	w9, [x0]
    63ec:	ldrb	w10, [x0, #2]
    63f0:	mov	w11, #0x39                  	// #57
    63f4:	eor	w8, w9, w8
    63f8:	eor	w9, w10, w11
    63fc:	orr	w8, w8, w9
    6400:	tst	w8, #0xffff
    6404:	b.eq	6674 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4a8>  // b.none
    6408:	ldrh	w9, [x0]
    640c:	ldrb	w10, [x0, #2]
    6410:	mov	w8, #0x327a                	// #12922
    6414:	eor	w9, w9, w8
    6418:	eor	w10, w10, #0x30
    641c:	orr	w9, w9, w10
    6420:	tst	w9, #0xffff
    6424:	b.eq	6680 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4b4>  // b.none
    6428:	ldrh	w9, [x0]
    642c:	ldrb	w10, [x0, #2]
    6430:	mov	w11, #0x31                  	// #49
    6434:	eor	w8, w9, w8
    6438:	eor	w9, w10, w11
    643c:	orr	w8, w8, w9
    6440:	tst	w8, #0xffff
    6444:	b.eq	668c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4c0>  // b.none
    6448:	ldrh	w9, [x0]
    644c:	ldrb	w10, [x0, #2]
    6450:	mov	w8, #0x327a                	// #12922
    6454:	mov	w11, #0x32                  	// #50
    6458:	eor	w9, w9, w8
    645c:	eor	w10, w10, w11
    6460:	orr	w9, w9, w10
    6464:	tst	w9, #0xffff
    6468:	b.eq	6698 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4cc>  // b.none
    646c:	ldrh	w9, [x0]
    6470:	ldrb	w10, [x0, #2]
    6474:	mov	w11, #0x33                  	// #51
    6478:	eor	w8, w9, w8
    647c:	eor	w9, w10, w11
    6480:	orr	w8, w8, w9
    6484:	tst	w8, #0xffff
    6488:	b.eq	66a4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4d8>  // b.none
    648c:	ldrh	w9, [x0]
    6490:	ldrb	w10, [x0, #2]
    6494:	mov	w8, #0x327a                	// #12922
    6498:	mov	w11, #0x34                  	// #52
    649c:	eor	w9, w9, w8
    64a0:	eor	w10, w10, w11
    64a4:	orr	w9, w9, w10
    64a8:	tst	w9, #0xffff
    64ac:	b.eq	66b0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4e4>  // b.none
    64b0:	ldrh	w9, [x0]
    64b4:	ldrb	w10, [x0, #2]
    64b8:	mov	w11, #0x35                  	// #53
    64bc:	eor	w8, w9, w8
    64c0:	eor	w9, w10, w11
    64c4:	orr	w8, w8, w9
    64c8:	tst	w8, #0xffff
    64cc:	b.eq	66bc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4f0>  // b.none
    64d0:	ldrh	w9, [x0]
    64d4:	ldrb	w10, [x0, #2]
    64d8:	mov	w8, #0x327a                	// #12922
    64dc:	mov	w11, #0x36                  	// #54
    64e0:	eor	w9, w9, w8
    64e4:	eor	w10, w10, w11
    64e8:	orr	w9, w9, w10
    64ec:	tst	w9, #0xffff
    64f0:	b.eq	66c8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4fc>  // b.none
    64f4:	ldrh	w9, [x0]
    64f8:	ldrb	w10, [x0, #2]
    64fc:	mov	w11, #0x37                  	// #55
    6500:	eor	w8, w9, w8
    6504:	eor	w9, w10, w11
    6508:	orr	w8, w8, w9
    650c:	tst	w8, #0xffff
    6510:	b.eq	66d4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x508>  // b.none
    6514:	ldrh	w9, [x0]
    6518:	ldrb	w10, [x0, #2]
    651c:	mov	w8, #0x327a                	// #12922
    6520:	eor	w9, w9, w8
    6524:	eor	w10, w10, #0x38
    6528:	orr	w9, w9, w10
    652c:	tst	w9, #0xffff
    6530:	b.eq	66e0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x514>  // b.none
    6534:	ldrh	w9, [x0]
    6538:	ldrb	w10, [x0, #2]
    653c:	mov	w11, #0x39                  	// #57
    6540:	eor	w8, w9, w8
    6544:	eor	w9, w10, w11
    6548:	orr	w8, w8, w9
    654c:	tst	w8, #0xffff
    6550:	b.eq	66ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x520>  // b.none
    6554:	ldrh	w9, [x0]
    6558:	ldrb	w10, [x0, #2]
    655c:	mov	w8, #0x337a                	// #13178
    6560:	eor	w9, w9, w8
    6564:	eor	w10, w10, #0x30
    6568:	orr	w9, w9, w10
    656c:	tst	w9, #0xffff
    6570:	b.eq	66f8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x52c>  // b.none
    6574:	ldrh	w9, [x0]
    6578:	ldrb	w10, [x0, #2]
    657c:	mov	w11, #0x31                  	// #49
    6580:	eor	w8, w9, w8
    6584:	eor	w9, w10, w11
    6588:	orr	w8, w8, w9
    658c:	tst	w8, #0xffff
    6590:	b.eq	6704 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x538>  // b.none
    6594:	mov	w21, wzr
    6598:	b	6710 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x544>
    659c:	mov	w21, wzr
    65a0:	mov	w8, #0xf5                  	// #245
    65a4:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    65a8:	mov	w21, wzr
    65ac:	mov	w8, #0xff                  	// #255
    65b0:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    65b4:	mov	w21, wzr
    65b8:	mov	w8, #0xf6                  	// #246
    65bc:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    65c0:	mov	w8, wzr
    65c4:	mov	w21, #0x100                 	// #256
    65c8:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    65cc:	mov	w21, wzr
    65d0:	mov	w8, #0xf7                  	// #247
    65d4:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    65d8:	mov	w21, #0x100                 	// #256
    65dc:	mov	w8, #0x1                   	// #1
    65e0:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    65e4:	mov	w21, wzr
    65e8:	mov	w8, #0xf8                  	// #248
    65ec:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    65f0:	mov	w21, #0x100                 	// #256
    65f4:	mov	w8, #0x2                   	// #2
    65f8:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    65fc:	mov	w21, wzr
    6600:	mov	w8, #0xf9                  	// #249
    6604:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6608:	mov	w21, #0x100                 	// #256
    660c:	mov	w8, #0x3                   	// #3
    6610:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6614:	mov	w21, wzr
    6618:	mov	w8, #0xfa                  	// #250
    661c:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6620:	mov	w21, #0x100                 	// #256
    6624:	mov	w8, #0x4                   	// #4
    6628:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    662c:	mov	w21, wzr
    6630:	mov	w8, #0xfb                  	// #251
    6634:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6638:	mov	w21, #0x100                 	// #256
    663c:	mov	w8, #0x5                   	// #5
    6640:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6644:	mov	w21, wzr
    6648:	mov	w8, #0xfc                  	// #252
    664c:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6650:	mov	w21, #0x100                 	// #256
    6654:	mov	w8, #0x6                   	// #6
    6658:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    665c:	mov	w21, wzr
    6660:	mov	w8, #0xfd                  	// #253
    6664:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6668:	mov	w21, #0x100                 	// #256
    666c:	mov	w8, #0x7                   	// #7
    6670:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6674:	mov	w21, #0x100                 	// #256
    6678:	mov	w8, #0x8                   	// #8
    667c:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6680:	mov	w21, #0x100                 	// #256
    6684:	mov	w8, #0x9                   	// #9
    6688:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    668c:	mov	w21, #0x100                 	// #256
    6690:	mov	w8, #0xa                   	// #10
    6694:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6698:	mov	w21, #0x100                 	// #256
    669c:	mov	w8, #0xb                   	// #11
    66a0:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    66a4:	mov	w21, #0x100                 	// #256
    66a8:	mov	w8, #0xc                   	// #12
    66ac:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    66b0:	mov	w21, #0x100                 	// #256
    66b4:	mov	w8, #0xd                   	// #13
    66b8:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    66bc:	mov	w21, #0x100                 	// #256
    66c0:	mov	w8, #0xe                   	// #14
    66c4:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    66c8:	mov	w21, #0x100                 	// #256
    66cc:	mov	w8, #0xf                   	// #15
    66d0:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    66d4:	mov	w21, #0x100                 	// #256
    66d8:	mov	w8, #0x10                  	// #16
    66dc:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    66e0:	mov	w21, #0x100                 	// #256
    66e4:	mov	w8, #0x11                  	// #17
    66e8:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    66ec:	mov	w21, #0x100                 	// #256
    66f0:	mov	w8, #0x12                  	// #18
    66f4:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    66f8:	mov	w21, #0x100                 	// #256
    66fc:	mov	w8, #0x13                  	// #19
    6700:	b	670c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6704:	mov	w21, #0x100                 	// #256
    6708:	mov	w8, #0x14                  	// #20
    670c:	orr	w21, w21, w8
    6710:	sub	x8, x29, #0x20
    6714:	add	x8, x8, #0x10
    6718:	cmp	x0, x8
    671c:	b.eq	6724 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x558>  // b.none
    6720:	bl	0 <_ZdlPv>
    6724:	cbz	w21, 6730 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x564>
    6728:	cmp	w19, #0x2
    672c:	b	6e24 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc58>
    6730:	ldp	x8, x9, [sp, #32]
    6734:	mov	x0, sp
    6738:	stp	x8, x9, [sp]
    673c:	sub	x8, x29, #0x20
    6740:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    6744:	ldp	x0, x8, [x29, #-32]
    6748:	cmp	x8, #0x3
    674c:	b.eq	6800 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x634>  // b.none
    6750:	cmp	x8, #0x2
    6754:	b.ne	68c8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6fc>  // b.any
    6758:	ldrh	w8, [x0]
    675c:	mov	w9, #0x3070                	// #12400
    6760:	cmp	w8, w9
    6764:	b.eq	68d0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x704>  // b.none
    6768:	ldrh	w8, [x0]
    676c:	mov	w9, #0x3170                	// #12656
    6770:	cmp	w8, w9
    6774:	b.eq	68e0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x714>  // b.none
    6778:	ldrh	w8, [x0]
    677c:	mov	w9, #0x3270                	// #12912
    6780:	cmp	w8, w9
    6784:	b.eq	68f0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x724>  // b.none
    6788:	ldrh	w8, [x0]
    678c:	mov	w9, #0x3370                	// #13168
    6790:	cmp	w8, w9
    6794:	b.eq	6900 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x734>  // b.none
    6798:	ldrh	w8, [x0]
    679c:	mov	w9, #0x3470                	// #13424
    67a0:	cmp	w8, w9
    67a4:	b.eq	6910 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x744>  // b.none
    67a8:	ldrh	w8, [x0]
    67ac:	mov	w9, #0x3570                	// #13680
    67b0:	cmp	w8, w9
    67b4:	b.eq	6920 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x754>  // b.none
    67b8:	ldrh	w8, [x0]
    67bc:	mov	w9, #0x3670                	// #13936
    67c0:	cmp	w8, w9
    67c4:	b.eq	6930 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x764>  // b.none
    67c8:	ldrh	w8, [x0]
    67cc:	mov	w9, #0x3770                	// #14192
    67d0:	cmp	w8, w9
    67d4:	b.eq	6938 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x76c>  // b.none
    67d8:	ldrh	w8, [x0]
    67dc:	mov	w9, #0x3870                	// #14448
    67e0:	cmp	w8, w9
    67e4:	b.eq	6940 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x774>  // b.none
    67e8:	ldrh	w8, [x0]
    67ec:	mov	w9, #0x3970                	// #14704
    67f0:	cmp	w8, w9
    67f4:	b.ne	68c8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6fc>  // b.any
    67f8:	mov	w21, #0x72                  	// #114
    67fc:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    6800:	ldrh	w9, [x0]
    6804:	ldrb	w10, [x0, #2]
    6808:	mov	w8, #0x3170                	// #12656
    680c:	eor	w9, w9, w8
    6810:	eor	w10, w10, #0x30
    6814:	orr	w9, w9, w10
    6818:	tst	w9, #0xffff
    681c:	b.eq	68d8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>  // b.none
    6820:	ldrh	w9, [x0]
    6824:	ldrb	w10, [x0, #2]
    6828:	mov	w11, #0x31                  	// #49
    682c:	eor	w8, w9, w8
    6830:	eor	w9, w10, w11
    6834:	orr	w8, w8, w9
    6838:	tst	w8, #0xffff
    683c:	b.eq	68e8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x71c>  // b.none
    6840:	ldrh	w9, [x0]
    6844:	ldrb	w10, [x0, #2]
    6848:	mov	w8, #0x3170                	// #12656
    684c:	mov	w11, #0x32                  	// #50
    6850:	eor	w9, w9, w8
    6854:	eor	w10, w10, w11
    6858:	orr	w9, w9, w10
    685c:	tst	w9, #0xffff
    6860:	b.eq	68f8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x72c>  // b.none
    6864:	ldrh	w9, [x0]
    6868:	ldrb	w10, [x0, #2]
    686c:	mov	w11, #0x33                  	// #51
    6870:	eor	w8, w9, w8
    6874:	eor	w9, w10, w11
    6878:	orr	w8, w8, w9
    687c:	tst	w8, #0xffff
    6880:	b.eq	6908 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x73c>  // b.none
    6884:	ldrh	w9, [x0]
    6888:	ldrb	w10, [x0, #2]
    688c:	mov	w8, #0x3170                	// #12656
    6890:	mov	w11, #0x34                  	// #52
    6894:	eor	w9, w9, w8
    6898:	eor	w10, w10, w11
    689c:	orr	w9, w9, w10
    68a0:	tst	w9, #0xffff
    68a4:	b.eq	6918 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x74c>  // b.none
    68a8:	ldrh	w9, [x0]
    68ac:	ldrb	w10, [x0, #2]
    68b0:	mov	w11, #0x35                  	// #53
    68b4:	eor	w8, w9, w8
    68b8:	eor	w9, w10, w11
    68bc:	orr	w8, w8, w9
    68c0:	tst	w8, #0xffff
    68c4:	b.eq	6928 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x75c>  // b.none
    68c8:	mov	w21, wzr
    68cc:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    68d0:	mov	w21, #0x69                  	// #105
    68d4:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    68d8:	mov	w21, #0x73                  	// #115
    68dc:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    68e0:	mov	w21, #0x6a                  	// #106
    68e4:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    68e8:	mov	w21, #0x74                  	// #116
    68ec:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    68f0:	mov	w21, #0x6b                  	// #107
    68f4:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    68f8:	mov	w21, #0x75                  	// #117
    68fc:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    6900:	mov	w21, #0x6c                  	// #108
    6904:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    6908:	mov	w21, #0x76                  	// #118
    690c:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    6910:	mov	w21, #0x6d                  	// #109
    6914:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    6918:	mov	w21, #0x77                  	// #119
    691c:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    6920:	mov	w21, #0x6e                  	// #110
    6924:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    6928:	mov	w21, #0x78                  	// #120
    692c:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    6930:	mov	w21, #0x6f                  	// #111
    6934:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    6938:	mov	w21, #0x70                  	// #112
    693c:	b	6944 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>
    6940:	mov	w21, #0x71                  	// #113
    6944:	sub	x8, x29, #0x20
    6948:	add	x8, x8, #0x10
    694c:	cmp	x0, x8
    6950:	b.eq	6958 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x78c>  // b.none
    6954:	bl	0 <_ZdlPv>
    6958:	cbz	w21, 6964 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x798>
    695c:	cmp	w19, #0x3
    6960:	b	6e24 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc58>
    6964:	ldp	x8, x9, [sp, #32]
    6968:	mov	x0, sp
    696c:	stp	x8, x9, [sp]
    6970:	sub	x8, x29, #0x20
    6974:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    6978:	ldp	x0, x8, [x29, #-32]
    697c:	cmp	x8, #0x3
    6980:	b.eq	6a34 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x868>  // b.none
    6984:	cmp	x8, #0x2
    6988:	b.ne	6a2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x860>  // b.any
    698c:	ldrh	w8, [x0]
    6990:	mov	w9, #0x3076                	// #12406
    6994:	cmp	w8, w9
    6998:	b.eq	6d14 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb48>  // b.none
    699c:	ldrh	w8, [x0]
    69a0:	mov	w9, #0x3176                	// #12662
    69a4:	cmp	w8, w9
    69a8:	b.eq	6d24 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb58>  // b.none
    69ac:	ldrh	w8, [x0]
    69b0:	mov	w9, #0x3276                	// #12918
    69b4:	cmp	w8, w9
    69b8:	b.eq	6d34 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb68>  // b.none
    69bc:	ldrh	w8, [x0]
    69c0:	mov	w9, #0x3376                	// #13174
    69c4:	cmp	w8, w9
    69c8:	b.eq	6d44 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb78>  // b.none
    69cc:	ldrh	w8, [x0]
    69d0:	mov	w9, #0x3476                	// #13430
    69d4:	cmp	w8, w9
    69d8:	b.eq	6d54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb88>  // b.none
    69dc:	ldrh	w8, [x0]
    69e0:	mov	w9, #0x3576                	// #13686
    69e4:	cmp	w8, w9
    69e8:	b.eq	6d64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb98>  // b.none
    69ec:	ldrh	w8, [x0]
    69f0:	mov	w9, #0x3676                	// #13942
    69f4:	cmp	w8, w9
    69f8:	b.eq	6d74 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xba8>  // b.none
    69fc:	ldrh	w8, [x0]
    6a00:	mov	w9, #0x3776                	// #14198
    6a04:	cmp	w8, w9
    6a08:	b.eq	6d84 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbb8>  // b.none
    6a0c:	ldrh	w8, [x0]
    6a10:	mov	w9, #0x3876                	// #14454
    6a14:	cmp	w8, w9
    6a18:	b.eq	6d94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbc8>  // b.none
    6a1c:	ldrh	w8, [x0]
    6a20:	mov	w9, #0x3976                	// #14710
    6a24:	cmp	w8, w9
    6a28:	b.eq	6da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbd8>  // b.none
    6a2c:	mov	w21, wzr
    6a30:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6a34:	ldrh	w9, [x0]
    6a38:	ldrb	w10, [x0, #2]
    6a3c:	mov	w8, #0x3176                	// #12662
    6a40:	eor	w9, w9, w8
    6a44:	eor	w10, w10, #0x30
    6a48:	orr	w9, w9, w10
    6a4c:	tst	w9, #0xffff
    6a50:	b.eq	6d1c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb50>  // b.none
    6a54:	ldrh	w9, [x0]
    6a58:	ldrb	w10, [x0, #2]
    6a5c:	mov	w11, #0x31                  	// #49
    6a60:	eor	w8, w9, w8
    6a64:	eor	w9, w10, w11
    6a68:	orr	w8, w8, w9
    6a6c:	tst	w8, #0xffff
    6a70:	b.eq	6d2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb60>  // b.none
    6a74:	ldrh	w9, [x0]
    6a78:	ldrb	w10, [x0, #2]
    6a7c:	mov	w8, #0x3176                	// #12662
    6a80:	mov	w11, #0x32                  	// #50
    6a84:	eor	w9, w9, w8
    6a88:	eor	w10, w10, w11
    6a8c:	orr	w9, w9, w10
    6a90:	tst	w9, #0xffff
    6a94:	b.eq	6d3c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb70>  // b.none
    6a98:	ldrh	w9, [x0]
    6a9c:	ldrb	w10, [x0, #2]
    6aa0:	mov	w11, #0x33                  	// #51
    6aa4:	eor	w8, w9, w8
    6aa8:	eor	w9, w10, w11
    6aac:	orr	w8, w8, w9
    6ab0:	tst	w8, #0xffff
    6ab4:	b.eq	6d4c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb80>  // b.none
    6ab8:	ldrh	w9, [x0]
    6abc:	ldrb	w10, [x0, #2]
    6ac0:	mov	w8, #0x3176                	// #12662
    6ac4:	mov	w11, #0x34                  	// #52
    6ac8:	eor	w9, w9, w8
    6acc:	eor	w10, w10, w11
    6ad0:	orr	w9, w9, w10
    6ad4:	tst	w9, #0xffff
    6ad8:	b.eq	6d5c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb90>  // b.none
    6adc:	ldrh	w9, [x0]
    6ae0:	ldrb	w10, [x0, #2]
    6ae4:	mov	w11, #0x35                  	// #53
    6ae8:	eor	w8, w9, w8
    6aec:	eor	w9, w10, w11
    6af0:	orr	w8, w8, w9
    6af4:	tst	w8, #0xffff
    6af8:	b.eq	6d6c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xba0>  // b.none
    6afc:	ldrh	w9, [x0]
    6b00:	ldrb	w10, [x0, #2]
    6b04:	mov	w8, #0x3176                	// #12662
    6b08:	mov	w11, #0x36                  	// #54
    6b0c:	eor	w9, w9, w8
    6b10:	eor	w10, w10, w11
    6b14:	orr	w9, w9, w10
    6b18:	tst	w9, #0xffff
    6b1c:	b.eq	6d7c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbb0>  // b.none
    6b20:	ldrh	w9, [x0]
    6b24:	ldrb	w10, [x0, #2]
    6b28:	mov	w11, #0x37                  	// #55
    6b2c:	eor	w8, w9, w8
    6b30:	eor	w9, w10, w11
    6b34:	orr	w8, w8, w9
    6b38:	tst	w8, #0xffff
    6b3c:	b.eq	6d8c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbc0>  // b.none
    6b40:	ldrh	w9, [x0]
    6b44:	ldrb	w10, [x0, #2]
    6b48:	mov	w8, #0x3176                	// #12662
    6b4c:	eor	w9, w9, w8
    6b50:	eor	w10, w10, #0x38
    6b54:	orr	w9, w9, w10
    6b58:	tst	w9, #0xffff
    6b5c:	b.eq	6d9c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbd0>  // b.none
    6b60:	ldrh	w9, [x0]
    6b64:	ldrb	w10, [x0, #2]
    6b68:	mov	w11, #0x39                  	// #57
    6b6c:	eor	w8, w9, w8
    6b70:	eor	w9, w10, w11
    6b74:	orr	w8, w8, w9
    6b78:	tst	w8, #0xffff
    6b7c:	b.eq	6dac <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbe0>  // b.none
    6b80:	ldrh	w9, [x0]
    6b84:	ldrb	w10, [x0, #2]
    6b88:	mov	w8, #0x3276                	// #12918
    6b8c:	eor	w9, w9, w8
    6b90:	eor	w10, w10, #0x30
    6b94:	orr	w9, w9, w10
    6b98:	tst	w9, #0xffff
    6b9c:	b.eq	6db4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbe8>  // b.none
    6ba0:	ldrh	w9, [x0]
    6ba4:	ldrb	w10, [x0, #2]
    6ba8:	mov	w11, #0x31                  	// #49
    6bac:	eor	w8, w9, w8
    6bb0:	eor	w9, w10, w11
    6bb4:	orr	w8, w8, w9
    6bb8:	tst	w8, #0xffff
    6bbc:	b.eq	6dbc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbf0>  // b.none
    6bc0:	ldrh	w9, [x0]
    6bc4:	ldrb	w10, [x0, #2]
    6bc8:	mov	w8, #0x3276                	// #12918
    6bcc:	mov	w11, #0x32                  	// #50
    6bd0:	eor	w9, w9, w8
    6bd4:	eor	w10, w10, w11
    6bd8:	orr	w9, w9, w10
    6bdc:	tst	w9, #0xffff
    6be0:	b.eq	6dc4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbf8>  // b.none
    6be4:	ldrh	w9, [x0]
    6be8:	ldrb	w10, [x0, #2]
    6bec:	mov	w11, #0x33                  	// #51
    6bf0:	eor	w8, w9, w8
    6bf4:	eor	w9, w10, w11
    6bf8:	orr	w8, w8, w9
    6bfc:	tst	w8, #0xffff
    6c00:	b.eq	6dcc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc00>  // b.none
    6c04:	ldrh	w9, [x0]
    6c08:	ldrb	w10, [x0, #2]
    6c0c:	mov	w8, #0x3276                	// #12918
    6c10:	mov	w11, #0x34                  	// #52
    6c14:	eor	w9, w9, w8
    6c18:	eor	w10, w10, w11
    6c1c:	orr	w9, w9, w10
    6c20:	tst	w9, #0xffff
    6c24:	b.eq	6dd4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc08>  // b.none
    6c28:	ldrh	w9, [x0]
    6c2c:	ldrb	w10, [x0, #2]
    6c30:	mov	w11, #0x35                  	// #53
    6c34:	eor	w8, w9, w8
    6c38:	eor	w9, w10, w11
    6c3c:	orr	w8, w8, w9
    6c40:	tst	w8, #0xffff
    6c44:	b.eq	6ddc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc10>  // b.none
    6c48:	ldrh	w9, [x0]
    6c4c:	ldrb	w10, [x0, #2]
    6c50:	mov	w8, #0x3276                	// #12918
    6c54:	mov	w11, #0x36                  	// #54
    6c58:	eor	w9, w9, w8
    6c5c:	eor	w10, w10, w11
    6c60:	orr	w9, w9, w10
    6c64:	tst	w9, #0xffff
    6c68:	b.eq	6de4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc18>  // b.none
    6c6c:	ldrh	w9, [x0]
    6c70:	ldrb	w10, [x0, #2]
    6c74:	mov	w11, #0x37                  	// #55
    6c78:	eor	w8, w9, w8
    6c7c:	eor	w9, w10, w11
    6c80:	orr	w8, w8, w9
    6c84:	tst	w8, #0xffff
    6c88:	b.eq	6dec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc20>  // b.none
    6c8c:	ldrh	w9, [x0]
    6c90:	ldrb	w10, [x0, #2]
    6c94:	mov	w8, #0x3276                	// #12918
    6c98:	eor	w9, w9, w8
    6c9c:	eor	w10, w10, #0x38
    6ca0:	orr	w9, w9, w10
    6ca4:	tst	w9, #0xffff
    6ca8:	b.eq	6df4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc28>  // b.none
    6cac:	ldrh	w9, [x0]
    6cb0:	ldrb	w10, [x0, #2]
    6cb4:	mov	w11, #0x39                  	// #57
    6cb8:	eor	w8, w9, w8
    6cbc:	eor	w9, w10, w11
    6cc0:	orr	w8, w8, w9
    6cc4:	tst	w8, #0xffff
    6cc8:	b.eq	6dfc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc30>  // b.none
    6ccc:	ldrh	w9, [x0]
    6cd0:	ldrb	w10, [x0, #2]
    6cd4:	mov	w8, #0x3376                	// #13174
    6cd8:	eor	w9, w9, w8
    6cdc:	eor	w10, w10, #0x30
    6ce0:	orr	w9, w9, w10
    6ce4:	tst	w9, #0xffff
    6ce8:	b.eq	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>  // b.none
    6cec:	ldrh	w9, [x0]
    6cf0:	ldrb	w10, [x0, #2]
    6cf4:	mov	w11, #0x31                  	// #49
    6cf8:	eor	w8, w9, w8
    6cfc:	eor	w9, w10, w11
    6d00:	orr	w8, w8, w9
    6d04:	tst	w8, #0xffff
    6d08:	b.ne	6a2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x860>  // b.any
    6d0c:	mov	w21, #0x98                  	// #152
    6d10:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d14:	mov	w21, #0x79                  	// #121
    6d18:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d1c:	mov	w21, #0x83                  	// #131
    6d20:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d24:	mov	w21, #0x7a                  	// #122
    6d28:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d2c:	mov	w21, #0x84                  	// #132
    6d30:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d34:	mov	w21, #0x7b                  	// #123
    6d38:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d3c:	mov	w21, #0x85                  	// #133
    6d40:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d44:	mov	w21, #0x7c                  	// #124
    6d48:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d4c:	mov	w21, #0x86                  	// #134
    6d50:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d54:	mov	w21, #0x7d                  	// #125
    6d58:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d5c:	mov	w21, #0x87                  	// #135
    6d60:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d64:	mov	w21, #0x7e                  	// #126
    6d68:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d6c:	mov	w21, #0x88                  	// #136
    6d70:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d74:	mov	w21, #0x7f                  	// #127
    6d78:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d7c:	mov	w21, #0x89                  	// #137
    6d80:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d84:	mov	w21, #0x80                  	// #128
    6d88:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d8c:	mov	w21, #0x8a                  	// #138
    6d90:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d94:	mov	w21, #0x81                  	// #129
    6d98:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6d9c:	mov	w21, #0x8b                  	// #139
    6da0:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6da4:	mov	w21, #0x82                  	// #130
    6da8:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6dac:	mov	w21, #0x8c                  	// #140
    6db0:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6db4:	mov	w21, #0x8d                  	// #141
    6db8:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6dbc:	mov	w21, #0x8e                  	// #142
    6dc0:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6dc4:	mov	w21, #0x8f                  	// #143
    6dc8:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6dcc:	mov	w21, #0x90                  	// #144
    6dd0:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6dd4:	mov	w21, #0x91                  	// #145
    6dd8:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6ddc:	mov	w21, #0x92                  	// #146
    6de0:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6de4:	mov	w21, #0x93                  	// #147
    6de8:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6dec:	mov	w21, #0x94                  	// #148
    6df0:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6df4:	mov	w21, #0x95                  	// #149
    6df8:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6dfc:	mov	w21, #0x96                  	// #150
    6e00:	b	6e08 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc3c>
    6e04:	mov	w21, #0x97                  	// #151
    6e08:	sub	x8, x29, #0x20
    6e0c:	add	x8, x8, #0x10
    6e10:	cmp	x0, x8
    6e14:	b.eq	6e1c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc50>  // b.none
    6e18:	bl	0 <_ZdlPv>
    6e1c:	cbz	w21, 6e3c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc70>
    6e20:	cmp	w19, #0x1
    6e24:	csel	w0, w21, wzr, eq  // eq = none
    6e28:	ldp	x20, x19, [sp, #112]
    6e2c:	ldp	x22, x21, [sp, #96]
    6e30:	ldp	x29, x30, [sp, #80]
    6e34:	add	sp, sp, #0x80
    6e38:	ret
    6e3c:	ldr	x8, [sp, #40]
    6e40:	sub	x9, x8, #0x2
    6e44:	cmp	x9, #0x4
    6e48:	b.hi	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.pmore
    6e4c:	ldr	x8, [sp, #32]
    6e50:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    6e54:	add	x10, x10, #0x0
    6e58:	adr	x11, 6e68 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc9c>
    6e5c:	ldrb	w12, [x10, x9]
    6e60:	add	x11, x11, x12, lsl #2
    6e64:	br	x11
    6e68:	ldrb	w9, [x8]
    6e6c:	cmp	w9, #0x6f
    6e70:	b.le	7014 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xe48>
    6e74:	sub	w9, w9, #0x70
    6e78:	cmp	w9, #0xa
    6e7c:	b.hi	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.pmore
    6e80:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    6e84:	add	x10, x10, #0x0
    6e88:	adr	x11, 6e98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xccc>
    6e8c:	ldrh	w12, [x10, x9, lsl #1]
    6e90:	add	x11, x11, x12, lsl #2
    6e94:	br	x11
    6e98:	ldrb	w8, [x8, #1]
    6e9c:	sub	w8, w8, #0x30
    6ea0:	cmp	w8, #0xa
    6ea4:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    6ea8:	and	w8, w8, #0xff
    6eac:	add	w8, w8, #0x69
    6eb0:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    6eb4:	ldrb	w9, [x8]
    6eb8:	sub	w9, w9, #0x62
    6ebc:	cmp	w9, #0x18
    6ec0:	b.hi	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.pmore
    6ec4:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    6ec8:	add	x10, x10, #0x0
    6ecc:	adr	x11, 6edc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd10>
    6ed0:	ldrh	w12, [x10, x9, lsl #1]
    6ed4:	add	x11, x11, x12, lsl #2
    6ed8:	br	x11
    6edc:	ldrb	w9, [x8, #1]
    6ee0:	cmp	w9, #0x33
    6ee4:	b.eq	7590 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x13c4>  // b.none
    6ee8:	cmp	w9, #0x32
    6eec:	b.eq	75b0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x13e4>  // b.none
    6ef0:	cmp	w9, #0x31
    6ef4:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    6ef8:	ldrb	w8, [x8, #2]
    6efc:	sub	w8, w8, #0x30
    6f00:	cmp	w8, #0xa
    6f04:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    6f08:	and	w8, w8, #0xff
    6f0c:	add	w8, w8, #0x13
    6f10:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    6f14:	ldr	w8, [x8]
    6f18:	mov	w9, #0x7a6e                	// #31342
    6f1c:	movk	w9, #0x7663, lsl #16
    6f20:	cmp	w8, w9
    6f24:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    6f28:	mov	w8, #0x4                   	// #4
    6f2c:	cmp	w19, #0x0
    6f30:	csel	w0, w8, wzr, eq  // eq = none
    6f34:	b	6e28 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc5c>
    6f38:	ldrb	w9, [x8]
    6f3c:	cmp	w9, #0x7a
    6f40:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    6f44:	ldrb	w9, [x8, #1]
    6f48:	sub	w9, w9, #0x30
    6f4c:	cmp	w9, #0x9
    6f50:	b.hi	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.pmore
    6f54:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    6f58:	add	x10, x10, #0x0
    6f5c:	adr	x11, 6f6c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xda0>
    6f60:	ldrh	w12, [x10, x9, lsl #1]
    6f64:	add	x11, x11, x12, lsl #2
    6f68:	br	x11
    6f6c:	ldrh	w9, [x8, #2]
    6f70:	ldrb	w8, [x8, #4]
    6f74:	mov	w10, #0x685f                	// #26719
    6f78:	mov	w11, #0x69                  	// #105
    6f7c:	eor	w9, w9, w10
    6f80:	eor	w8, w8, w11
    6f84:	orr	w8, w9, w8
    6f88:	tst	w8, #0xffff
    6f8c:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    6f90:	mov	w8, #0x115                 	// #277
    6f94:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    6f98:	ldrb	w9, [x8]
    6f9c:	cmp	w9, #0x7a
    6fa0:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    6fa4:	ldrb	w9, [x8, #1]
    6fa8:	cmp	w9, #0x33
    6fac:	b.eq	7048 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xe7c>  // b.none
    6fb0:	cmp	w9, #0x32
    6fb4:	b.eq	7088 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xebc>  // b.none
    6fb8:	cmp	w9, #0x31
    6fbc:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    6fc0:	ldrb	w9, [x8, #2]
    6fc4:	sub	w9, w9, #0x30
    6fc8:	cmp	w9, #0x9
    6fcc:	b.hi	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.pmore
    6fd0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    6fd4:	add	x10, x10, #0x0
    6fd8:	adr	x11, 6fe8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xe1c>
    6fdc:	ldrh	w12, [x10, x9, lsl #1]
    6fe0:	add	x11, x11, x12, lsl #2
    6fe4:	br	x11
    6fe8:	ldurh	w9, [x8, #3]
    6fec:	ldrb	w8, [x8, #5]
    6ff0:	mov	w10, #0x685f                	// #26719
    6ff4:	mov	w11, #0x69                  	// #105
    6ff8:	eor	w9, w9, w10
    6ffc:	eor	w8, w8, w11
    7000:	orr	w8, w9, w8
    7004:	tst	w8, #0xffff
    7008:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    700c:	mov	w8, #0x11f                 	// #287
    7010:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7014:	cmp	w9, #0x62
    7018:	b.eq	7180 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xfb4>  // b.none
    701c:	cmp	w9, #0x64
    7020:	b.eq	719c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xfd0>  // b.none
    7024:	cmp	w9, #0x68
    7028:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    702c:	ldrb	w8, [x8, #1]
    7030:	sub	w8, w8, #0x30
    7034:	cmp	w8, #0xa
    7038:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    703c:	and	w8, w8, #0xff
    7040:	add	w8, w8, #0x49
    7044:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7048:	ldrb	w9, [x8, #2]
    704c:	cmp	w9, #0x31
    7050:	b.eq	7538 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x136c>  // b.none
    7054:	cmp	w9, #0x30
    7058:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    705c:	ldurh	w9, [x8, #3]
    7060:	ldrb	w8, [x8, #5]
    7064:	mov	w10, #0x685f                	// #26719
    7068:	mov	w11, #0x69                  	// #105
    706c:	eor	w9, w9, w10
    7070:	eor	w8, w8, w11
    7074:	orr	w8, w9, w8
    7078:	tst	w8, #0xffff
    707c:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7080:	mov	w8, #0x133                 	// #307
    7084:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7088:	ldrb	w9, [x8, #2]
    708c:	sub	w9, w9, #0x30
    7090:	cmp	w9, #0x9
    7094:	b.hi	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.pmore
    7098:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    709c:	add	x10, x10, #0x0
    70a0:	adr	x11, 70b0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xee4>
    70a4:	ldrh	w12, [x10, x9, lsl #1]
    70a8:	add	x11, x11, x12, lsl #2
    70ac:	br	x11
    70b0:	ldurh	w9, [x8, #3]
    70b4:	ldrb	w8, [x8, #5]
    70b8:	mov	w10, #0x685f                	// #26719
    70bc:	mov	w11, #0x69                  	// #105
    70c0:	eor	w9, w9, w10
    70c4:	eor	w8, w8, w11
    70c8:	orr	w8, w9, w8
    70cc:	tst	w8, #0xffff
    70d0:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    70d4:	mov	w8, #0x129                 	// #297
    70d8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    70dc:	ldrb	w8, [x8, #1]
    70e0:	sub	w8, w8, #0x30
    70e4:	cmp	w8, #0xa
    70e8:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    70ec:	and	w8, w8, #0xff
    70f0:	add	w8, w8, #0x79
    70f4:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    70f8:	ldrb	w9, [x8, #1]
    70fc:	sub	w8, w9, #0x30
    7100:	cmp	w8, #0x9
    7104:	b.hi	7730 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1564>  // b.pmore
    7108:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    710c:	add	x9, x9, #0x0
    7110:	adr	x10, 6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7114:	ldrh	w11, [x9, x8, lsl #1]
    7118:	add	x10, x10, x11, lsl #2
    711c:	mov	w8, #0x99                  	// #153
    7120:	br	x10
    7124:	mov	w8, #0x9a                  	// #154
    7128:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    712c:	ldrb	w8, [x8, #1]
    7130:	sub	w8, w8, #0x30
    7134:	cmp	w8, #0xa
    7138:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    713c:	and	w8, w8, #0xff
    7140:	add	w8, w8, #0xb9
    7144:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7148:	ldrb	w8, [x8, #1]
    714c:	sub	w8, w8, #0x30
    7150:	cmp	w8, #0xa
    7154:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    7158:	and	w8, w8, #0xff
    715c:	add	w8, w8, #0xd8
    7160:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7164:	ldrb	w8, [x8, #1]
    7168:	sub	w8, w8, #0x30
    716c:	cmp	w8, #0xa
    7170:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    7174:	and	w8, w8, #0xff
    7178:	add	w8, w8, #0xf5
    717c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7180:	ldrb	w8, [x8, #1]
    7184:	sub	w8, w8, #0x30
    7188:	cmp	w8, #0xa
    718c:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    7190:	and	w8, w8, #0xff
    7194:	add	w8, w8, #0x9
    7198:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    719c:	ldrb	w8, [x8, #1]
    71a0:	sub	w8, w8, #0x30
    71a4:	cmp	w8, #0xa
    71a8:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    71ac:	and	w8, w8, #0xff
    71b0:	add	w8, w8, #0x29
    71b4:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    71b8:	ldrb	w9, [x8, #1]
    71bc:	cmp	w9, #0x33
    71c0:	b.eq	75cc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1400>  // b.none
    71c4:	cmp	w9, #0x32
    71c8:	b.eq	75ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1420>  // b.none
    71cc:	cmp	w9, #0x31
    71d0:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    71d4:	ldrb	w8, [x8, #2]
    71d8:	sub	w8, w8, #0x30
    71dc:	cmp	w8, #0xa
    71e0:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    71e4:	and	w8, w8, #0xff
    71e8:	add	w8, w8, #0x33
    71ec:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    71f0:	ldurh	w8, [x8, #1]
    71f4:	mov	w9, #0x7266                	// #29286
    71f8:	cmp	w8, w9
    71fc:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7200:	mov	w8, #0x1                   	// #1
    7204:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7208:	ldrb	w9, [x8, #1]
    720c:	cmp	w9, #0x33
    7210:	b.eq	7608 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x143c>  // b.none
    7214:	cmp	w9, #0x32
    7218:	b.eq	7628 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x145c>  // b.none
    721c:	cmp	w9, #0x31
    7220:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7224:	ldrb	w8, [x8, #2]
    7228:	sub	w8, w8, #0x30
    722c:	cmp	w8, #0xa
    7230:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    7234:	and	w8, w8, #0xff
    7238:	add	w8, w8, #0x53
    723c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7240:	ldrb	w9, [x8, #1]
    7244:	cmp	w9, #0x31
    7248:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    724c:	ldrb	w8, [x8, #2]
    7250:	sub	w8, w8, #0x30
    7254:	cmp	w8, #0x6
    7258:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    725c:	and	w8, w8, #0xff
    7260:	add	w8, w8, #0x73
    7264:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7268:	ldrb	w9, [x8, #1]
    726c:	cmp	w9, #0x33
    7270:	b.eq	7644 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1478>  // b.none
    7274:	cmp	w9, #0x32
    7278:	b.eq	7664 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1498>  // b.none
    727c:	cmp	w9, #0x31
    7280:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7284:	ldrb	w8, [x8, #2]
    7288:	sub	w8, w8, #0x30
    728c:	cmp	w8, #0xa
    7290:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    7294:	and	w8, w8, #0xff
    7298:	add	w8, w8, #0x83
    729c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    72a0:	ldrb	w9, [x8, #1]
    72a4:	cmp	w9, #0x33
    72a8:	b.eq	7680 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14b4>  // b.none
    72ac:	cmp	w9, #0x32
    72b0:	b.eq	76a0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14d4>  // b.none
    72b4:	cmp	w9, #0x31
    72b8:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    72bc:	ldrb	w8, [x8, #2]
    72c0:	sub	w8, w8, #0x30
    72c4:	cmp	w8, #0xa
    72c8:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    72cc:	and	w8, w8, #0xff
    72d0:	add	w8, w8, #0xa3
    72d4:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    72d8:	ldrb	w9, [x8, #1]
    72dc:	cmp	w9, #0x32
    72e0:	b.le	7564 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1398>
    72e4:	cmp	w9, #0x33
    72e8:	b.eq	7740 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1574>  // b.none
    72ec:	cmp	w9, #0x73
    72f0:	b.eq	7754 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1588>  // b.none
    72f4:	cmp	w9, #0x7a
    72f8:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    72fc:	ldrb	w8, [x8, #2]
    7300:	cmp	w8, #0x72
    7304:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7308:	mov	w8, #0x7                   	// #7
    730c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7310:	ldrb	w9, [x8, #1]
    7314:	cmp	w9, #0x32
    7318:	b.gt	7514 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1348>
    731c:	cmp	w9, #0x31
    7320:	b.eq	7700 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1534>  // b.none
    7324:	cmp	w9, #0x32
    7328:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    732c:	ldrb	w8, [x8, #2]
    7330:	sub	w8, w8, #0x30
    7334:	cmp	w8, #0xa
    7338:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    733c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    7340:	sxtb	x8, w8
    7344:	add	x9, x9, #0x0
    7348:	ldr	w8, [x9, x8, lsl #2]
    734c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7350:	ldrb	w9, [x8, #1]
    7354:	cmp	w9, #0x33
    7358:	b.eq	76bc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14f0>  // b.none
    735c:	cmp	w9, #0x32
    7360:	b.eq	76e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1518>  // b.none
    7364:	cmp	w9, #0x31
    7368:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    736c:	ldrb	w8, [x8, #2]
    7370:	sub	w8, w8, #0x30
    7374:	cmp	w8, #0xa
    7378:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    737c:	and	w8, w8, #0xff
    7380:	add	w8, w8, #0xff
    7384:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7388:	ldrh	w9, [x8, #2]
    738c:	ldrb	w8, [x8, #4]
    7390:	mov	w10, #0x685f                	// #26719
    7394:	mov	w11, #0x69                  	// #105
    7398:	eor	w9, w9, w10
    739c:	eor	w8, w8, w11
    73a0:	orr	w8, w9, w8
    73a4:	tst	w8, #0xffff
    73a8:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    73ac:	mov	w8, #0x116                 	// #278
    73b0:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    73b4:	ldrh	w9, [x8, #2]
    73b8:	ldrb	w8, [x8, #4]
    73bc:	mov	w10, #0x685f                	// #26719
    73c0:	mov	w11, #0x69                  	// #105
    73c4:	eor	w9, w9, w10
    73c8:	eor	w8, w8, w11
    73cc:	orr	w8, w9, w8
    73d0:	tst	w8, #0xffff
    73d4:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    73d8:	mov	w8, #0x117                 	// #279
    73dc:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    73e0:	ldrh	w9, [x8, #2]
    73e4:	ldrb	w8, [x8, #4]
    73e8:	mov	w10, #0x685f                	// #26719
    73ec:	mov	w11, #0x69                  	// #105
    73f0:	eor	w9, w9, w10
    73f4:	eor	w8, w8, w11
    73f8:	orr	w8, w9, w8
    73fc:	tst	w8, #0xffff
    7400:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7404:	mov	w8, #0x118                 	// #280
    7408:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    740c:	ldrh	w9, [x8, #2]
    7410:	ldrb	w8, [x8, #4]
    7414:	mov	w10, #0x685f                	// #26719
    7418:	mov	w11, #0x69                  	// #105
    741c:	eor	w9, w9, w10
    7420:	eor	w8, w8, w11
    7424:	orr	w8, w9, w8
    7428:	tst	w8, #0xffff
    742c:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7430:	mov	w8, #0x119                 	// #281
    7434:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7438:	ldrh	w9, [x8, #2]
    743c:	ldrb	w8, [x8, #4]
    7440:	mov	w10, #0x685f                	// #26719
    7444:	mov	w11, #0x69                  	// #105
    7448:	eor	w9, w9, w10
    744c:	eor	w8, w8, w11
    7450:	orr	w8, w9, w8
    7454:	tst	w8, #0xffff
    7458:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    745c:	mov	w8, #0x11a                 	// #282
    7460:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7464:	ldrh	w9, [x8, #2]
    7468:	ldrb	w8, [x8, #4]
    746c:	mov	w10, #0x685f                	// #26719
    7470:	mov	w11, #0x69                  	// #105
    7474:	eor	w9, w9, w10
    7478:	eor	w8, w8, w11
    747c:	orr	w8, w9, w8
    7480:	tst	w8, #0xffff
    7484:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7488:	mov	w8, #0x11b                 	// #283
    748c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7490:	ldrh	w9, [x8, #2]
    7494:	ldrb	w8, [x8, #4]
    7498:	mov	w10, #0x685f                	// #26719
    749c:	mov	w11, #0x69                  	// #105
    74a0:	eor	w9, w9, w10
    74a4:	eor	w8, w8, w11
    74a8:	orr	w8, w9, w8
    74ac:	tst	w8, #0xffff
    74b0:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    74b4:	mov	w8, #0x11c                 	// #284
    74b8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    74bc:	ldrh	w9, [x8, #2]
    74c0:	ldrb	w8, [x8, #4]
    74c4:	mov	w10, #0x685f                	// #26719
    74c8:	mov	w11, #0x69                  	// #105
    74cc:	eor	w9, w9, w10
    74d0:	eor	w8, w8, w11
    74d4:	orr	w8, w9, w8
    74d8:	tst	w8, #0xffff
    74dc:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    74e0:	mov	w8, #0x11d                 	// #285
    74e4:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    74e8:	ldrh	w9, [x8, #2]
    74ec:	ldrb	w8, [x8, #4]
    74f0:	mov	w10, #0x685f                	// #26719
    74f4:	mov	w11, #0x69                  	// #105
    74f8:	eor	w9, w9, w10
    74fc:	eor	w8, w8, w11
    7500:	orr	w8, w9, w8
    7504:	tst	w8, #0xffff
    7508:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    750c:	mov	w8, #0x11e                 	// #286
    7510:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7514:	cmp	w9, #0x33
    7518:	b.eq	771c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1550>  // b.none
    751c:	cmp	w9, #0x7a
    7520:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7524:	ldrb	w8, [x8, #2]
    7528:	cmp	w8, #0x72
    752c:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7530:	mov	w8, #0x8                   	// #8
    7534:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7538:	ldurh	w9, [x8, #3]
    753c:	ldrb	w8, [x8, #5]
    7540:	mov	w10, #0x685f                	// #26719
    7544:	mov	w11, #0x69                  	// #105
    7548:	eor	w9, w9, w10
    754c:	eor	w8, w8, w11
    7550:	orr	w8, w9, w8
    7554:	tst	w8, #0xffff
    7558:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    755c:	mov	w8, #0x134                 	// #308
    7560:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7564:	cmp	w9, #0x31
    7568:	b.eq	7768 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x159c>  // b.none
    756c:	cmp	w9, #0x32
    7570:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7574:	ldrb	w8, [x8, #2]
    7578:	sub	w8, w8, #0x30
    757c:	cmp	w8, #0xa
    7580:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    7584:	and	w8, w8, #0xff
    7588:	add	w8, w8, #0xcd
    758c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7590:	ldrb	w9, [x8, #2]
    7594:	mov	w8, #0x28                  	// #40
    7598:	cmp	w9, #0x31
    759c:	csel	w8, w8, wzr, eq  // eq = none
    75a0:	cmp	w9, #0x30
    75a4:	b.ne	76dc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    75a8:	mov	w8, #0x27                  	// #39
    75ac:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    75b0:	ldrb	w8, [x8, #2]
    75b4:	sub	w8, w8, #0x30
    75b8:	cmp	w8, #0xa
    75bc:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    75c0:	and	w8, w8, #0xff
    75c4:	add	w8, w8, #0x1d
    75c8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    75cc:	ldrb	w9, [x8, #2]
    75d0:	mov	w8, #0x48                  	// #72
    75d4:	cmp	w9, #0x31
    75d8:	csel	w8, w8, wzr, eq  // eq = none
    75dc:	cmp	w9, #0x30
    75e0:	b.ne	76dc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    75e4:	mov	w8, #0x47                  	// #71
    75e8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    75ec:	ldrb	w8, [x8, #2]
    75f0:	sub	w8, w8, #0x30
    75f4:	cmp	w8, #0xa
    75f8:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    75fc:	and	w8, w8, #0xff
    7600:	add	w8, w8, #0x3d
    7604:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7608:	ldrb	w9, [x8, #2]
    760c:	mov	w8, #0x68                  	// #104
    7610:	cmp	w9, #0x31
    7614:	csel	w8, w8, wzr, eq  // eq = none
    7618:	cmp	w9, #0x30
    761c:	b.ne	76dc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    7620:	mov	w8, #0x67                  	// #103
    7624:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7628:	ldrb	w8, [x8, #2]
    762c:	sub	w8, w8, #0x30
    7630:	cmp	w8, #0xa
    7634:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    7638:	and	w8, w8, #0xff
    763c:	add	w8, w8, #0x5d
    7640:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7644:	ldrb	w9, [x8, #2]
    7648:	mov	w8, #0x98                  	// #152
    764c:	cmp	w9, #0x31
    7650:	csel	w8, w8, wzr, eq  // eq = none
    7654:	cmp	w9, #0x30
    7658:	b.ne	76dc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    765c:	mov	w8, #0x97                  	// #151
    7660:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7664:	ldrb	w8, [x8, #2]
    7668:	sub	w8, w8, #0x30
    766c:	cmp	w8, #0xa
    7670:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    7674:	and	w8, w8, #0xff
    7678:	add	w8, w8, #0x8d
    767c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7680:	ldrb	w9, [x8, #2]
    7684:	mov	w8, #0xb8                  	// #184
    7688:	cmp	w9, #0x31
    768c:	csel	w8, w8, wzr, eq  // eq = none
    7690:	cmp	w9, #0x30
    7694:	b.ne	76dc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    7698:	mov	w8, #0xb7                  	// #183
    769c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    76a0:	ldrb	w8, [x8, #2]
    76a4:	sub	w8, w8, #0x30
    76a8:	cmp	w8, #0xa
    76ac:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    76b0:	and	w8, w8, #0xff
    76b4:	add	w8, w8, #0xad
    76b8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    76bc:	ldrb	w9, [x8, #2]
    76c0:	mov	w8, #0x114                 	// #276
    76c4:	cmp	w9, #0x31
    76c8:	csel	w8, w8, wzr, eq  // eq = none
    76cc:	cmp	w9, #0x30
    76d0:	b.ne	76dc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    76d4:	mov	w8, #0x113                 	// #275
    76d8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    76dc:	cbnz	w8, 6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    76e0:	b	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>
    76e4:	ldrb	w8, [x8, #2]
    76e8:	sub	w8, w8, #0x30
    76ec:	cmp	w8, #0xa
    76f0:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    76f4:	and	w8, w8, #0xff
    76f8:	add	w8, w8, #0x109
    76fc:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7700:	ldrb	w8, [x8, #2]
    7704:	sub	w8, w8, #0x30
    7708:	cmp	w8, #0xa
    770c:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    7710:	and	w8, w8, #0xff
    7714:	add	w8, w8, #0xe2
    7718:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    771c:	ldrb	w8, [x8, #2]
    7720:	cmp	w8, #0x30
    7724:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7728:	mov	w8, #0x3                   	// #3
    772c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7730:	cmp	w9, #0x70
    7734:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7738:	mov	w8, #0x5                   	// #5
    773c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7740:	ldrb	w8, [x8, #2]
    7744:	cmp	w8, #0x30
    7748:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    774c:	mov	w8, #0xd7                  	// #215
    7750:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7754:	ldrb	w8, [x8, #2]
    7758:	cmp	w8, #0x70
    775c:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7760:	mov	w8, #0x6                   	// #6
    7764:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7768:	ldrb	w8, [x8, #2]
    776c:	sub	w8, w8, #0x30
    7770:	cmp	w8, #0xa
    7774:	b.cs	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.hs, b.nlast
    7778:	and	w8, w8, #0xff
    777c:	add	w8, w8, #0xc3
    7780:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7784:	ldurh	w9, [x8, #3]
    7788:	ldrb	w8, [x8, #5]
    778c:	mov	w10, #0x685f                	// #26719
    7790:	mov	w11, #0x69                  	// #105
    7794:	eor	w9, w9, w10
    7798:	eor	w8, w8, w11
    779c:	orr	w8, w9, w8
    77a0:	tst	w8, #0xffff
    77a4:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    77a8:	mov	w8, #0x120                 	// #288
    77ac:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    77b0:	ldurh	w9, [x8, #3]
    77b4:	ldrb	w8, [x8, #5]
    77b8:	mov	w10, #0x685f                	// #26719
    77bc:	mov	w11, #0x69                  	// #105
    77c0:	eor	w9, w9, w10
    77c4:	eor	w8, w8, w11
    77c8:	orr	w8, w9, w8
    77cc:	tst	w8, #0xffff
    77d0:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    77d4:	mov	w8, #0x121                 	// #289
    77d8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    77dc:	ldurh	w9, [x8, #3]
    77e0:	ldrb	w8, [x8, #5]
    77e4:	mov	w10, #0x685f                	// #26719
    77e8:	mov	w11, #0x69                  	// #105
    77ec:	eor	w9, w9, w10
    77f0:	eor	w8, w8, w11
    77f4:	orr	w8, w9, w8
    77f8:	tst	w8, #0xffff
    77fc:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7800:	mov	w8, #0x122                 	// #290
    7804:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7808:	ldurh	w9, [x8, #3]
    780c:	ldrb	w8, [x8, #5]
    7810:	mov	w10, #0x685f                	// #26719
    7814:	mov	w11, #0x69                  	// #105
    7818:	eor	w9, w9, w10
    781c:	eor	w8, w8, w11
    7820:	orr	w8, w9, w8
    7824:	tst	w8, #0xffff
    7828:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    782c:	mov	w8, #0x123                 	// #291
    7830:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7834:	ldurh	w9, [x8, #3]
    7838:	ldrb	w8, [x8, #5]
    783c:	mov	w10, #0x685f                	// #26719
    7840:	mov	w11, #0x69                  	// #105
    7844:	eor	w9, w9, w10
    7848:	eor	w8, w8, w11
    784c:	orr	w8, w9, w8
    7850:	tst	w8, #0xffff
    7854:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7858:	mov	w8, #0x124                 	// #292
    785c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7860:	ldurh	w9, [x8, #3]
    7864:	ldrb	w8, [x8, #5]
    7868:	mov	w10, #0x685f                	// #26719
    786c:	mov	w11, #0x69                  	// #105
    7870:	eor	w9, w9, w10
    7874:	eor	w8, w8, w11
    7878:	orr	w8, w9, w8
    787c:	tst	w8, #0xffff
    7880:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7884:	mov	w8, #0x125                 	// #293
    7888:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    788c:	ldurh	w9, [x8, #3]
    7890:	ldrb	w8, [x8, #5]
    7894:	mov	w10, #0x685f                	// #26719
    7898:	mov	w11, #0x69                  	// #105
    789c:	eor	w9, w9, w10
    78a0:	eor	w8, w8, w11
    78a4:	orr	w8, w9, w8
    78a8:	tst	w8, #0xffff
    78ac:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    78b0:	mov	w8, #0x126                 	// #294
    78b4:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    78b8:	ldurh	w9, [x8, #3]
    78bc:	ldrb	w8, [x8, #5]
    78c0:	mov	w10, #0x685f                	// #26719
    78c4:	mov	w11, #0x69                  	// #105
    78c8:	eor	w9, w9, w10
    78cc:	eor	w8, w8, w11
    78d0:	orr	w8, w9, w8
    78d4:	tst	w8, #0xffff
    78d8:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    78dc:	mov	w8, #0x127                 	// #295
    78e0:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    78e4:	ldurh	w9, [x8, #3]
    78e8:	ldrb	w8, [x8, #5]
    78ec:	mov	w10, #0x685f                	// #26719
    78f0:	mov	w11, #0x69                  	// #105
    78f4:	eor	w9, w9, w10
    78f8:	eor	w8, w8, w11
    78fc:	orr	w8, w9, w8
    7900:	tst	w8, #0xffff
    7904:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7908:	mov	w8, #0x128                 	// #296
    790c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7910:	ldurh	w9, [x8, #3]
    7914:	ldrb	w8, [x8, #5]
    7918:	mov	w10, #0x685f                	// #26719
    791c:	mov	w11, #0x69                  	// #105
    7920:	eor	w9, w9, w10
    7924:	eor	w8, w8, w11
    7928:	orr	w8, w9, w8
    792c:	tst	w8, #0xffff
    7930:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7934:	mov	w8, #0x12a                 	// #298
    7938:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    793c:	ldurh	w9, [x8, #3]
    7940:	ldrb	w8, [x8, #5]
    7944:	mov	w10, #0x685f                	// #26719
    7948:	mov	w11, #0x69                  	// #105
    794c:	eor	w9, w9, w10
    7950:	eor	w8, w8, w11
    7954:	orr	w8, w9, w8
    7958:	tst	w8, #0xffff
    795c:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7960:	mov	w8, #0x12b                 	// #299
    7964:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7968:	ldurh	w9, [x8, #3]
    796c:	ldrb	w8, [x8, #5]
    7970:	mov	w10, #0x685f                	// #26719
    7974:	mov	w11, #0x69                  	// #105
    7978:	eor	w9, w9, w10
    797c:	eor	w8, w8, w11
    7980:	orr	w8, w9, w8
    7984:	tst	w8, #0xffff
    7988:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    798c:	mov	w8, #0x12c                 	// #300
    7990:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7994:	ldurh	w9, [x8, #3]
    7998:	ldrb	w8, [x8, #5]
    799c:	mov	w10, #0x685f                	// #26719
    79a0:	mov	w11, #0x69                  	// #105
    79a4:	eor	w9, w9, w10
    79a8:	eor	w8, w8, w11
    79ac:	orr	w8, w9, w8
    79b0:	tst	w8, #0xffff
    79b4:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    79b8:	mov	w8, #0x12d                 	// #301
    79bc:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    79c0:	ldurh	w9, [x8, #3]
    79c4:	ldrb	w8, [x8, #5]
    79c8:	mov	w10, #0x685f                	// #26719
    79cc:	mov	w11, #0x69                  	// #105
    79d0:	eor	w9, w9, w10
    79d4:	eor	w8, w8, w11
    79d8:	orr	w8, w9, w8
    79dc:	tst	w8, #0xffff
    79e0:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    79e4:	mov	w8, #0x12e                 	// #302
    79e8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    79ec:	ldurh	w9, [x8, #3]
    79f0:	ldrb	w8, [x8, #5]
    79f4:	mov	w10, #0x685f                	// #26719
    79f8:	mov	w11, #0x69                  	// #105
    79fc:	eor	w9, w9, w10
    7a00:	eor	w8, w8, w11
    7a04:	orr	w8, w9, w8
    7a08:	tst	w8, #0xffff
    7a0c:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7a10:	mov	w8, #0x12f                 	// #303
    7a14:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7a18:	ldurh	w9, [x8, #3]
    7a1c:	ldrb	w8, [x8, #5]
    7a20:	mov	w10, #0x685f                	// #26719
    7a24:	mov	w11, #0x69                  	// #105
    7a28:	eor	w9, w9, w10
    7a2c:	eor	w8, w8, w11
    7a30:	orr	w8, w9, w8
    7a34:	tst	w8, #0xffff
    7a38:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7a3c:	mov	w8, #0x130                 	// #304
    7a40:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7a44:	ldurh	w9, [x8, #3]
    7a48:	ldrb	w8, [x8, #5]
    7a4c:	mov	w10, #0x685f                	// #26719
    7a50:	mov	w11, #0x69                  	// #105
    7a54:	eor	w9, w9, w10
    7a58:	eor	w8, w8, w11
    7a5c:	orr	w8, w9, w8
    7a60:	tst	w8, #0xffff
    7a64:	b.ne	7a94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18c8>  // b.any
    7a68:	mov	w8, #0x131                 	// #305
    7a6c:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7a70:	ldurh	w9, [x8, #3]
    7a74:	ldrb	w8, [x8, #5]
    7a78:	mov	w10, #0x685f                	// #26719
    7a7c:	mov	w11, #0x69                  	// #105
    7a80:	eor	w9, w9, w10
    7a84:	eor	w8, w8, w11
    7a88:	orr	w8, w9, w8
    7a8c:	tst	w8, #0xffff
    7a90:	b.eq	7bfc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1a30>  // b.none
    7a94:	sub	x8, x29, #0x20
    7a98:	add	x0, sp, #0x20
    7a9c:	sub	x21, x29, #0x20
    7aa0:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    7aa4:	ldur	q0, [x29, #-32]
    7aa8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7aac:	add	x1, x1, #0x0
    7ab0:	mov	x0, sp
    7ab4:	mov	w2, #0x2                   	// #2
    7ab8:	mov	w3, #0x2                   	// #2
    7abc:	strb	wzr, [sp, #16]
    7ac0:	str	q0, [sp]
    7ac4:	strb	wzr, [sp, #20]
    7ac8:	bl	0 <LLVMInitializeAArch64AsmParser>
    7acc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7ad0:	add	x1, x1, #0x0
    7ad4:	mov	w2, #0x2                   	// #2
    7ad8:	mov	w3, #0x3                   	// #3
    7adc:	bl	0 <LLVMInitializeAArch64AsmParser>
    7ae0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7ae4:	add	x1, x1, #0x0
    7ae8:	mov	w2, #0x3                   	// #3
    7aec:	mov	w3, #0x8                   	// #8
    7af0:	bl	0 <LLVMInitializeAArch64AsmParser>
    7af4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7af8:	add	x1, x1, #0x0
    7afc:	mov	w2, #0x3                   	// #3
    7b00:	mov	w3, #0x7                   	// #7
    7b04:	bl	0 <LLVMInitializeAArch64AsmParser>
    7b08:	ldrb	w8, [x0, #20]
    7b0c:	ldr	w9, [x0, #16]
    7b10:	ldur	x0, [x29, #-32]
    7b14:	add	x10, x21, #0x10
    7b18:	cmp	w8, #0x0
    7b1c:	csel	w21, wzr, w9, eq  // eq = none
    7b20:	cmp	x0, x10
    7b24:	b.eq	7b2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1960>  // b.none
    7b28:	bl	0 <_ZdlPv>
    7b2c:	cmp	w19, #0x0
    7b30:	csel	w0, w21, wzr, eq  // eq = none
    7b34:	cbnz	w21, 6e28 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc5c>
    7b38:	sub	x8, x29, #0x20
    7b3c:	add	x0, sp, #0x20
    7b40:	add	x21, x20, #0xc0
    7b44:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    7b48:	ldp	x1, x2, [x29, #-32]
    7b4c:	mov	x0, x21
    7b50:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    7b54:	ldr	x8, [x20, #192]
    7b58:	cmn	w0, #0x1
    7b5c:	b.eq	7b68 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x199c>  // b.none
    7b60:	sxtw	x9, w0
    7b64:	b	7b6c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19a0>
    7b68:	ldr	w9, [x20, #200]
    7b6c:	ldur	x0, [x29, #-32]
    7b70:	sub	x10, x29, #0x20
    7b74:	add	x10, x10, #0x10
    7b78:	add	x22, x8, x9, lsl #3
    7b7c:	cmp	x0, x10
    7b80:	b.eq	7b8c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19c0>  // b.none
    7b84:	bl	0 <_ZdlPv>
    7b88:	ldr	x8, [x21]
    7b8c:	ldr	w9, [x20, #200]
    7b90:	add	x8, x8, x9, lsl #3
    7b94:	cmp	x22, x8
    7b98:	b.eq	7bb4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e8>  // b.none
    7b9c:	ldr	x8, [x22]
    7ba0:	ldr	w9, [x8, #8]
    7ba4:	cmp	w9, w19
    7ba8:	b.ne	7bb4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e8>  // b.any
    7bac:	ldr	w0, [x8, #12]
    7bb0:	b	6e28 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc5c>
    7bb4:	mov	w0, wzr
    7bb8:	b	6e28 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc5c>
    7bbc:	mov	w8, #0x9b                  	// #155
    7bc0:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7bc4:	mov	w8, #0x9c                  	// #156
    7bc8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7bcc:	mov	w8, #0x9d                  	// #157
    7bd0:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7bd4:	mov	w8, #0x9e                  	// #158
    7bd8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7bdc:	mov	w8, #0x9f                  	// #159
    7be0:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7be4:	mov	w8, #0xa0                  	// #160
    7be8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7bec:	mov	w8, #0xa1                  	// #161
    7bf0:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7bf4:	mov	w8, #0xa2                  	// #162
    7bf8:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>
    7bfc:	mov	w8, #0x132                 	// #306
    7c00:	b	6f2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd60>

0000000000007c04 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE>:
    7c04:	sub	sp, sp, #0x70
    7c08:	stp	x29, x30, [sp, #80]
    7c0c:	stp	x20, x19, [sp, #96]
    7c10:	add	x29, sp, #0x50
    7c14:	mov	x19, x0
    7c18:	mov	x8, sp
    7c1c:	sub	x0, x29, #0x10
    7c20:	stp	x1, x2, [x29, #-16]
    7c24:	mov	x20, sp
    7c28:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    7c2c:	ldr	q0, [sp]
    7c30:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7c34:	add	x1, x1, #0x0
    7c38:	add	x0, sp, #0x20
    7c3c:	mov	w2, #0x2                   	// #2
    7c40:	mov	w3, wzr
    7c44:	strb	wzr, [sp, #48]
    7c48:	str	q0, [sp, #32]
    7c4c:	strb	wzr, [sp, #52]
    7c50:	bl	0 <LLVMInitializeAArch64AsmParser>
    7c54:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7c58:	add	x1, x1, #0x0
    7c5c:	mov	w2, #0x2                   	// #2
    7c60:	mov	w3, #0x1                   	// #1
    7c64:	bl	0 <LLVMInitializeAArch64AsmParser>
    7c68:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7c6c:	add	x1, x1, #0x0
    7c70:	mov	w2, #0x2                   	// #2
    7c74:	mov	w3, #0x2                   	// #2
    7c78:	bl	0 <LLVMInitializeAArch64AsmParser>
    7c7c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7c80:	add	x1, x1, #0x0
    7c84:	mov	w2, #0x2                   	// #2
    7c88:	mov	w3, #0x2                   	// #2
    7c8c:	bl	0 <LLVMInitializeAArch64AsmParser>
    7c90:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7c94:	add	x1, x1, #0x0
    7c98:	mov	w2, #0x2                   	// #2
    7c9c:	mov	w3, #0x3                   	// #3
    7ca0:	bl	0 <LLVMInitializeAArch64AsmParser>
    7ca4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7ca8:	add	x1, x1, #0x0
    7cac:	mov	w2, #0x2                   	// #2
    7cb0:	mov	w3, #0x3                   	// #3
    7cb4:	bl	0 <LLVMInitializeAArch64AsmParser>
    7cb8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7cbc:	add	x1, x1, #0x0
    7cc0:	mov	w2, #0x2                   	// #2
    7cc4:	mov	w3, #0x4                   	// #4
    7cc8:	bl	0 <LLVMInitializeAArch64AsmParser>
    7ccc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7cd0:	add	x1, x1, #0x0
    7cd4:	mov	w2, #0x2                   	// #2
    7cd8:	mov	w3, #0x5                   	// #5
    7cdc:	bl	0 <LLVMInitializeAArch64AsmParser>
    7ce0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7ce4:	add	x1, x1, #0x0
    7ce8:	mov	w2, #0x2                   	// #2
    7cec:	mov	w3, #0x6                   	// #6
    7cf0:	bl	0 <LLVMInitializeAArch64AsmParser>
    7cf4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7cf8:	add	x1, x1, #0x0
    7cfc:	mov	w2, #0x2                   	// #2
    7d00:	mov	w3, #0x7                   	// #7
    7d04:	bl	0 <LLVMInitializeAArch64AsmParser>
    7d08:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7d0c:	add	x1, x1, #0x0
    7d10:	mov	w2, #0x2                   	// #2
    7d14:	mov	w3, #0x8                   	// #8
    7d18:	bl	0 <LLVMInitializeAArch64AsmParser>
    7d1c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7d20:	add	x1, x1, #0x0
    7d24:	mov	w2, #0x2                   	// #2
    7d28:	mov	w3, #0x9                   	// #9
    7d2c:	bl	0 <LLVMInitializeAArch64AsmParser>
    7d30:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7d34:	add	x1, x1, #0x0
    7d38:	mov	w2, #0x2                   	// #2
    7d3c:	mov	w3, #0xa                   	// #10
    7d40:	bl	0 <LLVMInitializeAArch64AsmParser>
    7d44:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7d48:	add	x1, x1, #0x0
    7d4c:	mov	w2, #0x2                   	// #2
    7d50:	mov	w3, #0xb                   	// #11
    7d54:	bl	0 <LLVMInitializeAArch64AsmParser>
    7d58:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7d5c:	add	x1, x1, #0x0
    7d60:	mov	w2, #0x2                   	// #2
    7d64:	mov	w3, #0xc                   	// #12
    7d68:	bl	0 <LLVMInitializeAArch64AsmParser>
    7d6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7d70:	add	x1, x1, #0x0
    7d74:	mov	w2, #0x2                   	// #2
    7d78:	mov	w3, #0xd                   	// #13
    7d7c:	bl	0 <LLVMInitializeAArch64AsmParser>
    7d80:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7d84:	add	x1, x1, #0x0
    7d88:	mov	w2, #0x2                   	// #2
    7d8c:	mov	w3, #0xe                   	// #14
    7d90:	bl	0 <LLVMInitializeAArch64AsmParser>
    7d94:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7d98:	add	x1, x1, #0x0
    7d9c:	mov	w2, #0x2                   	// #2
    7da0:	mov	w3, #0xf                   	// #15
    7da4:	bl	0 <LLVMInitializeAArch64AsmParser>
    7da8:	ldrb	w8, [x0, #20]
    7dac:	ldr	w9, [x0, #16]
    7db0:	ldr	x0, [sp]
    7db4:	mov	w10, #0x10                  	// #16
    7db8:	add	x11, x20, #0x10
    7dbc:	cmp	w8, #0x0
    7dc0:	csel	w20, w10, w9, eq  // eq = none
    7dc4:	cmp	x0, x11
    7dc8:	b.eq	7dd0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x1cc>  // b.none
    7dcc:	bl	0 <_ZdlPv>
    7dd0:	cmp	w20, #0x10
    7dd4:	b.ne	7ef8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x2f4>  // b.any
    7dd8:	mov	x0, x19
    7ddc:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    7de0:	ldrb	w8, [x0, #196]
    7de4:	tbz	w8, #1, 7ef8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x2f4>
    7de8:	mov	x8, sp
    7dec:	sub	x0, x29, #0x10
    7df0:	mov	x19, sp
    7df4:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    7df8:	ldr	q0, [sp]
    7dfc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7e00:	add	x1, x1, #0x0
    7e04:	add	x0, sp, #0x20
    7e08:	mov	w2, #0x4                   	// #4
    7e0c:	mov	w3, wzr
    7e10:	strb	wzr, [sp, #48]
    7e14:	str	q0, [sp, #32]
    7e18:	strb	wzr, [sp, #52]
    7e1c:	bl	0 <LLVMInitializeAArch64AsmParser>
    7e20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7e24:	add	x1, x1, #0x0
    7e28:	mov	w2, #0x3                   	// #3
    7e2c:	mov	w3, #0x1                   	// #1
    7e30:	bl	0 <LLVMInitializeAArch64AsmParser>
    7e34:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7e38:	add	x1, x1, #0x0
    7e3c:	mov	w2, #0x5                   	// #5
    7e40:	mov	w3, #0x2                   	// #2
    7e44:	bl	0 <LLVMInitializeAArch64AsmParser>
    7e48:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7e4c:	add	x1, x1, #0x0
    7e50:	mov	w2, #0x4                   	// #4
    7e54:	mov	w3, #0x3                   	// #3
    7e58:	bl	0 <LLVMInitializeAArch64AsmParser>
    7e5c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7e60:	add	x1, x1, #0x0
    7e64:	mov	w2, #0x5                   	// #5
    7e68:	mov	w3, #0x4                   	// #4
    7e6c:	bl	0 <LLVMInitializeAArch64AsmParser>
    7e70:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7e74:	add	x1, x1, #0x0
    7e78:	mov	w2, #0x5                   	// #5
    7e7c:	mov	w3, #0x5                   	// #5
    7e80:	bl	0 <LLVMInitializeAArch64AsmParser>
    7e84:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7e88:	add	x1, x1, #0x0
    7e8c:	mov	w2, #0x5                   	// #5
    7e90:	mov	w3, #0x8                   	// #8
    7e94:	bl	0 <LLVMInitializeAArch64AsmParser>
    7e98:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7e9c:	add	x1, x1, #0x0
    7ea0:	mov	w2, #0x5                   	// #5
    7ea4:	mov	w3, #0x9                   	// #9
    7ea8:	bl	0 <LLVMInitializeAArch64AsmParser>
    7eac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7eb0:	add	x1, x1, #0x0
    7eb4:	mov	w2, #0x5                   	// #5
    7eb8:	mov	w3, #0xa                   	// #10
    7ebc:	bl	0 <LLVMInitializeAArch64AsmParser>
    7ec0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7ec4:	add	x1, x1, #0x0
    7ec8:	mov	w2, #0x5                   	// #5
    7ecc:	mov	w3, #0xb                   	// #11
    7ed0:	bl	0 <LLVMInitializeAArch64AsmParser>
    7ed4:	ldrb	w8, [x0, #20]
    7ed8:	ldr	w9, [x0, #16]
    7edc:	ldr	x0, [sp]
    7ee0:	add	x10, x19, #0x10
    7ee4:	cmp	w8, #0x0
    7ee8:	csel	w20, w20, w9, eq  // eq = none
    7eec:	cmp	x0, x10
    7ef0:	b.eq	7ef8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x2f4>  // b.none
    7ef4:	bl	0 <_ZdlPv>
    7ef8:	mov	w0, w20
    7efc:	ldp	x20, x19, [sp, #96]
    7f00:	ldp	x29, x30, [sp, #80]
    7f04:	add	sp, sp, #0x70
    7f08:	ret

0000000000007f0c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb>:
    7f0c:	sub	sp, sp, #0x120
    7f10:	stp	x29, x30, [sp, #192]
    7f14:	stp	x28, x27, [sp, #208]
    7f18:	stp	x26, x25, [sp, #224]
    7f1c:	stp	x24, x23, [sp, #240]
    7f20:	stp	x22, x21, [sp, #256]
    7f24:	stp	x20, x19, [sp, #272]
    7f28:	add	x29, sp, #0xc0
    7f2c:	stp	w3, w2, [sp, #24]
    7f30:	mov	x19, x0
    7f34:	ldr	x8, [x19, #8]!
    7f38:	adrp	x26, 0 <LLVMInitializeAArch64AsmParser>
    7f3c:	adrp	x27, 0 <LLVMInitializeAArch64AsmParser>
    7f40:	mov	x28, x1
    7f44:	str	x8, [sp, #48]
    7f48:	ldr	w8, [x1, #8]
    7f4c:	ldp	x24, x25, [x19, #168]
    7f50:	mov	x20, x0
    7f54:	add	x26, x26, #0x0
    7f58:	sub	w8, w8, #0x1
    7f5c:	mov	w21, #0x32c8                	// #13000
    7f60:	add	x27, x27, #0x0
    7f64:	str	w8, [sp, #32]
    7f68:	lsr	x23, x21, #1
    7f6c:	add	x22, x26, x23, lsl #3
    7f70:	ldrh	w8, [x22]
    7f74:	sub	x0, x29, #0x30
    7f78:	mov	x1, x24
    7f7c:	mov	x2, x25
    7f80:	add	x8, x27, x8
    7f84:	ldrb	w9, [x8], #1
    7f88:	stp	x8, x9, [x29, #-48]
    7f8c:	bl	0 <LLVMInitializeAArch64AsmParser>
    7f90:	cmn	w0, #0x1
    7f94:	b.eq	7fbc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb0>  // b.none
    7f98:	ldrh	w8, [x22]
    7f9c:	sub	x0, x29, #0x30
    7fa0:	add	x1, x27, x8
    7fa4:	ldrb	w2, [x1], #1
    7fa8:	stp	x24, x25, [x29, #-48]
    7fac:	bl	0 <LLVMInitializeAArch64AsmParser>
    7fb0:	cmn	w0, #0x1
    7fb4:	b.eq	7fc8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xbc>  // b.none
    7fb8:	b	7fdc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xd0>
    7fbc:	mvn	x8, x23
    7fc0:	add	x26, x22, #0x8
    7fc4:	add	x23, x21, x8
    7fc8:	cmp	x23, #0x0
    7fcc:	mov	x21, x23
    7fd0:	mov	x22, x26
    7fd4:	b.gt	7f68 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x5c>
    7fd8:	b	80b8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1ac>
    7fdc:	sub	x8, x22, x26
    7fe0:	cmp	x8, #0x1
    7fe4:	stp	x28, x20, [sp, #8]
    7fe8:	str	x19, [sp]
    7fec:	b.lt	8044 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x138>  // b.tstop
    7ff0:	lsr	x19, x8, #3
    7ff4:	mov	x23, x26
    7ff8:	lsr	x28, x19, #1
    7ffc:	add	x20, x23, x28, lsl #3
    8000:	ldrh	w8, [x20], #8
    8004:	sub	x0, x29, #0x30
    8008:	mov	x1, x24
    800c:	mov	x2, x25
    8010:	add	x8, x27, x8
    8014:	ldrb	w9, [x8], #1
    8018:	stp	x8, x9, [x29, #-48]
    801c:	bl	0 <LLVMInitializeAArch64AsmParser>
    8020:	mov	x8, #0xffffffffffffffff    	// #-1
    8024:	eor	x8, x8, x19, lsr #1
    8028:	cmn	w0, #0x1
    802c:	add	x8, x19, x8
    8030:	csel	x19, x8, x28, eq  // eq = none
    8034:	csel	x23, x20, x23, eq  // eq = none
    8038:	cmp	x19, #0x0
    803c:	b.gt	7ff8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xec>
    8040:	b	8048 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x13c>
    8044:	mov	x23, x26
    8048:	add	x8, x26, x21, lsl #3
    804c:	add	x22, x22, #0x8
    8050:	sub	x8, x8, x22
    8054:	cmp	x8, #0x1
    8058:	b.lt	80a8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x19c>  // b.tstop
    805c:	ldr	x28, [sp, #8]
    8060:	lsr	x19, x8, #3
    8064:	mov	x20, #0xffffffffffffffff    	// #-1
    8068:	lsr	x21, x19, #1
    806c:	add	x26, x22, x21, lsl #3
    8070:	ldrh	w8, [x26], #8
    8074:	sub	x0, x29, #0x30
    8078:	add	x1, x27, x8
    807c:	ldrb	w2, [x1], #1
    8080:	stp	x24, x25, [x29, #-48]
    8084:	bl	0 <LLVMInitializeAArch64AsmParser>
    8088:	eor	x8, x20, x19, lsr #1
    808c:	cmn	w0, #0x1
    8090:	add	x8, x19, x8
    8094:	csel	x19, x21, x8, eq  // eq = none
    8098:	csel	x22, x22, x26, eq  // eq = none
    809c:	cmp	x19, #0x0
    80a0:	b.gt	8068 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15c>
    80a4:	b	80ac <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a0>
    80a8:	ldr	x28, [sp, #8]
    80ac:	mov	x26, x23
    80b0:	ldr	x19, [sp]
    80b4:	ldr	x20, [sp, #16]
    80b8:	cmp	x26, x22
    80bc:	b.eq	8130 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x224>  // b.none
    80c0:	ldr	w9, [sp, #32]
    80c4:	mov	w8, #0x1                   	// #1
    80c8:	add	x23, x26, #0x4
    80cc:	lsl	w21, w8, w9
    80d0:	mov	x26, x23
    80d4:	ldrh	w8, [x26, #-4]!
    80d8:	add	x1, x27, x8
    80dc:	ldrb	w8, [x1], #1
    80e0:	cmp	x25, x8
    80e4:	b.ne	946c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1560>  // b.any
    80e8:	cbz	x25, 80fc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1f0>
    80ec:	mov	x0, x24
    80f0:	mov	x2, x25
    80f4:	bl	0 <bcmp>
    80f8:	cbnz	w0, 946c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1560>
    80fc:	ldrb	w8, [x26, #2]
    8100:	tst	w21, w8
    8104:	b.eq	8120 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x214>  // b.none
    8108:	ldrh	w2, [x23]
    810c:	mov	x0, x20
    8110:	mov	x1, x28
    8114:	bl	b97c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj>
    8118:	cmp	w0, #0x1
    811c:	b.ne	823c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x330>  // b.any
    8120:	add	x8, x26, #0x8
    8124:	cmp	x8, x22
    8128:	add	x23, x23, #0x8
    812c:	b.ne	80d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1c4>  // b.any
    8130:	ldr	x0, [x19]
    8134:	ldr	x8, [x0]
    8138:	ldr	x8, [x8, #40]
    813c:	blr	x8
    8140:	ldr	w8, [x0, #16]
    8144:	cbz	w8, 948c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1580>
    8148:	ldr	x8, [x0, #8]
    814c:	ldr	x25, [sp, #48]
    8150:	ldr	w8, [x8]
    8154:	cmp	w8, #0x12
    8158:	b.le	81d8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2cc>
    815c:	cmp	w8, #0x1a
    8160:	b.gt	824c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x340>
    8164:	cmp	w8, #0x13
    8168:	b.eq	8464 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x558>  // b.none
    816c:	cmp	w8, #0x15
    8170:	b.ne	81f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2e4>  // b.any
    8174:	ldr	x22, [x19]
    8178:	mov	x0, x22
    817c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8180:	ldr	w8, [x0]
    8184:	cmp	w8, #0x15
    8188:	b.ne	90f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e4>  // b.any
    818c:	stp	x20, x22, [x29, #-64]
    8190:	ldr	x0, [x20, #8]
    8194:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8198:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    819c:	mov	x21, x0
    81a0:	mov	x0, x22
    81a4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    81a8:	ldr	q0, [x0]
    81ac:	ldr	x8, [x0, #16]
    81b0:	add	x1, x0, #0x18
    81b4:	stur	q0, [x29, #-48]
    81b8:	stur	x8, [x29, #-32]
    81bc:	ldr	w8, [x0, #32]
    81c0:	cmp	w8, #0x40
    81c4:	stur	w8, [x29, #-16]
    81c8:	b.hi	88ac <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x9a0>  // b.pmore
    81cc:	ldr	x8, [x1]
    81d0:	stur	x8, [x29, #-24]
    81d4:	b	88b8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x9ac>
    81d8:	cmp	w8, #0x2
    81dc:	b.eq	8414 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x508>  // b.none
    81e0:	cmp	w8, #0x4
    81e4:	b.eq	825c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x350>  // b.none
    81e8:	cmp	w8, #0x6
    81ec:	b.eq	825c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x350>  // b.none
    81f0:	ldr	x0, [x20, #8]
    81f4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    81f8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    81fc:	mov	x21, x0
    8200:	add	x1, sp, #0x38
    8204:	mov	x0, x20
    8208:	bl	aa58 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    820c:	tbz	w0, #0, 85f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x6e8>
    8210:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    8214:	add	x1, x1, #0x0
    8218:	sub	x0, x29, #0x30
    821c:	bl	0 <LLVMInitializeAArch64AsmParser>
    8220:	ldr	x0, [x19]
    8224:	sub	x2, x29, #0x30
    8228:	mov	x1, x21
    822c:	mov	x3, xzr
    8230:	mov	x4, xzr
    8234:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    8238:	b	8584 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x678>
    823c:	cbz	w0, 8da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe9c>
    8240:	cmp	w0, #0x2
    8244:	b.ne	8130 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x224>  // b.any
    8248:	b	90f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e4>
    824c:	cmp	w8, #0x1b
    8250:	b.eq	8520 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x614>  // b.none
    8254:	cmp	w8, #0x25
    8258:	b.ne	81f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2e4>  // b.any
    825c:	ldr	x0, [x19]
    8260:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8264:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8268:	ldr	x8, [x19]
    826c:	mov	x22, x0
    8270:	mov	w1, #0x25                  	// #37
    8274:	mov	x0, x8
    8278:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    827c:	mov	x0, x25
    8280:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8284:	ldr	w8, [x0]
    8288:	cmp	w8, #0xd
    828c:	b.ne	82f8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3ec>  // b.any
    8290:	ldr	x8, [x25]
    8294:	mov	x0, x25
    8298:	mov	x21, x20
    829c:	mov	x20, x19
    82a0:	ldr	x8, [x8, #40]
    82a4:	blr	x8
    82a8:	sub	x8, x29, #0x30
    82ac:	mov	w1, #0x1                   	// #1
    82b0:	bl	0 <LLVMInitializeAArch64AsmParser>
    82b4:	ldur	w8, [x29, #-16]
    82b8:	ldur	w19, [x29, #-48]
    82bc:	cmp	w8, #0x41
    82c0:	b.cc	82d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3c4>  // b.lo, b.ul, b.last
    82c4:	ldur	x0, [x29, #-24]
    82c8:	cbz	x0, 82d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3c4>
    82cc:	bl	0 <_ZdaPv>
    82d0:	cmp	w19, #0x6
    82d4:	b.ne	82e8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3dc>  // b.any
    82d8:	ldr	x8, [x25]
    82dc:	mov	x0, x25
    82e0:	ldr	x8, [x8, #136]
    82e4:	blr	x8
    82e8:	mov	w24, #0x1                   	// #1
    82ec:	mov	x19, x20
    82f0:	mov	x20, x21
    82f4:	b	82fc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3f0>
    82f8:	mov	w24, wzr
    82fc:	mov	x0, x25
    8300:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8304:	ldr	w8, [x0]
    8308:	cmp	w8, #0x6
    830c:	b.ne	838c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x480>  // b.any
    8310:	mov	x23, x0
    8314:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    8318:	ldp	x2, x3, [x23, #8]
    831c:	mov	x1, x0
    8320:	sub	x0, x29, #0x30
    8324:	bl	0 <_ZN4llvm7APFloatC1ERKNS_12fltSemanticsENS_9StringRefE>
    8328:	add	x8, sp, #0x38
    832c:	sub	x0, x29, #0x30
    8330:	bl	0 <LLVMInitializeAArch64AsmParser>
    8334:	add	x0, sp, #0x38
    8338:	bl	0 <LLVMInitializeAArch64AsmParser>
    833c:	ldr	w8, [sp, #64]
    8340:	mov	x23, x0
    8344:	cmp	w8, #0x41
    8348:	b.cc	8358 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x44c>  // b.lo, b.ul, b.last
    834c:	ldr	x0, [sp, #56]
    8350:	cbz	x0, 8358 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x44c>
    8354:	bl	0 <_ZdaPv>
    8358:	ldp	x20, x2, [x20, #176]
    835c:	cmp	x2, #0x5
    8360:	b.eq	864c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x740>  // b.none
    8364:	cmp	x2, #0x4
    8368:	b.ne	8380 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x474>  // b.any
    836c:	ldr	w8, [x20]
    8370:	mov	w9, #0x6366                	// #25446
    8374:	movk	w9, #0x706d, lsl #16
    8378:	cmp	w8, w9
    837c:	b.eq	8728 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x81c>  // b.none
    8380:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    8384:	add	x1, x1, #0x0
    8388:	b	8740 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x834>
    838c:	sub	x1, x29, #0x30
    8390:	mov	x0, x20
    8394:	bl	aa58 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    8398:	tbnz	w0, #0, 90f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e4>
    839c:	ldr	x0, [x19]
    83a0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    83a4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    83a8:	ldr	x8, [x19]
    83ac:	ldur	x19, [x29, #-48]
    83b0:	sub	x21, x0, #0x1
    83b4:	ldr	x9, [x8]
    83b8:	mov	x0, x8
    83bc:	ldr	x9, [x9, #48]
    83c0:	blr	x9
    83c4:	mov	x20, x0
    83c8:	mov	w0, #0x70                  	// #112
    83cc:	bl	0 <_Znwm>
    83d0:	mov	x8, x0
    83d4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    83d8:	add	x9, x9, #0x0
    83dc:	strb	wzr, [x8, #32]!
    83e0:	str	x9, [x0]
    83e4:	str	wzr, [x0, #48]
    83e8:	str	x20, [x0, #104]
    83ec:	stp	x21, x19, [x0, #64]
    83f0:	str	x22, [x0, #56]
    83f4:	stp	x8, xzr, [x0, #16]
    83f8:	str	x0, [sp, #56]
    83fc:	add	x1, sp, #0x38
    8400:	mov	x0, x28
    8404:	bl	0 <LLVMInitializeAArch64AsmParser>
    8408:	ldr	x0, [sp, #56]
    840c:	cbnz	x0, 8d9c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe90>
    8410:	b	8da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe9c>
    8414:	ldr	w8, [sp, #28]
    8418:	tbz	w8, #0, 858c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x680>
    841c:	ldr	x23, [x19]
    8420:	mov	x0, x23
    8424:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8428:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    842c:	mov	x21, x0
    8430:	mov	x0, x23
    8434:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8438:	ldr	w8, [x0]
    843c:	cmp	w8, #0x2
    8440:	b.ne	94cc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15c0>  // b.any
    8444:	ldp	x1, x2, [x0, #8]
    8448:	mov	x0, x20
    844c:	bl	7c04 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE>
    8450:	cmp	w0, #0x10
    8454:	b.ne	8878 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x96c>  // b.any
    8458:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    845c:	add	x1, x1, #0x0
    8460:	b	8568 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x65c>
    8464:	mov	x0, x25
    8468:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    846c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8470:	ldr	x8, [x19]
    8474:	mov	x22, x0
    8478:	ldr	x9, [x8]
    847c:	mov	x0, x8
    8480:	ldr	x9, [x9, #48]
    8484:	blr	x9
    8488:	mov	x23, x0
    848c:	mov	w0, #0x70                  	// #112
    8490:	bl	0 <_Znwm>
    8494:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    8498:	mov	x8, x0
    849c:	add	x9, x9, #0x0
    84a0:	strb	wzr, [x8, #32]!
    84a4:	str	x9, [x0]
    84a8:	mov	w9, #0x6                   	// #6
    84ac:	str	w9, [x0, #48]
    84b0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    84b4:	add	x9, x9, #0x0
    84b8:	stp	x22, x9, [x0, #64]
    84bc:	mov	w9, #0x1                   	// #1
    84c0:	str	x23, [x0, #104]
    84c4:	str	w9, [x0, #80]
    84c8:	strb	wzr, [x0, #84]
    84cc:	str	x22, [x0, #56]
    84d0:	stp	x8, xzr, [x0, #16]
    84d4:	stur	x0, [x29, #-48]
    84d8:	sub	x1, x29, #0x30
    84dc:	mov	x0, x28
    84e0:	bl	0 <LLVMInitializeAArch64AsmParser>
    84e4:	ldur	x0, [x29, #-48]
    84e8:	cbz	x0, 84f8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x5ec>
    84ec:	ldr	x8, [x0]
    84f0:	ldr	x8, [x8, #8]
    84f4:	blr	x8
    84f8:	ldr	x8, [x25]
    84fc:	mov	x0, x25
    8500:	ldr	x8, [x8, #136]
    8504:	blr	x8
    8508:	mov	x0, x20
    850c:	mov	x1, x28
    8510:	mov	w2, wzr
    8514:	mov	w3, wzr
    8518:	bl	7f0c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb>
    851c:	b	8584 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x678>
    8520:	ldr	x0, [x20, #8]
    8524:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8528:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    852c:	ldr	x8, [x20, #184]
    8530:	cmp	x8, #0x3
    8534:	b.ne	8560 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x654>  // b.any
    8538:	ldr	x8, [x20, #176]
    853c:	mov	w10, #0x646c                	// #25708
    8540:	mov	w11, #0x72                  	// #114
    8544:	ldrh	w9, [x8]
    8548:	ldrb	w8, [x8, #2]
    854c:	eor	w9, w9, w10
    8550:	eor	w8, w8, w11
    8554:	orr	w8, w9, w8
    8558:	tst	w8, #0xffff
    855c:	b.eq	8920 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xa14>  // b.none
    8560:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    8564:	add	x1, x1, #0x0
    8568:	sub	x0, x29, #0x30
    856c:	bl	0 <LLVMInitializeAArch64AsmParser>
    8570:	ldr	x0, [x19]
    8574:	sub	x1, x29, #0x30
    8578:	mov	x2, xzr
    857c:	mov	x3, xzr
    8580:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    8584:	mov	w21, w0
    8588:	b	90f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e8>
    858c:	mov	x0, x20
    8590:	mov	x1, x28
    8594:	bl	9d48 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    8598:	tbz	w0, #0, 8da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe9c>
    859c:	ldr	x21, [x19]
    85a0:	mov	x26, x20
    85a4:	ldr	x8, [x21]
    85a8:	mov	x0, x21
    85ac:	ldr	x8, [x8, #40]
    85b0:	blr	x8
    85b4:	sub	x8, x29, #0x30
    85b8:	mov	w1, #0x1                   	// #1
    85bc:	bl	0 <LLVMInitializeAArch64AsmParser>
    85c0:	ldp	x8, x9, [x29, #-40]
    85c4:	mov	x20, x19
    85c8:	cmp	x9, #0x2
    85cc:	stp	x8, x9, [sp, #56]
    85d0:	b.ne	8a38 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb2c>  // b.any
    85d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    85d8:	add	x1, x1, #0x0
    85dc:	add	x0, sp, #0x38
    85e0:	mov	w2, #0x2                   	// #2
    85e4:	bl	0 <_ZNK4llvm9StringRef13compare_lowerES0_>
    85e8:	cmp	w0, #0x0
    85ec:	cset	w27, eq  // eq = none
    85f0:	b	8a3c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb30>
    85f4:	ldr	x0, [x19]
    85f8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    85fc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8600:	ldr	x8, [x19]
    8604:	ldr	x19, [sp, #56]
    8608:	sub	x22, x0, #0x1
    860c:	ldr	x9, [x8]
    8610:	mov	x0, x8
    8614:	ldr	x9, [x9, #48]
    8618:	blr	x9
    861c:	mov	x20, x0
    8620:	mov	w0, #0x70                  	// #112
    8624:	bl	0 <_Znwm>
    8628:	mov	x8, x0
    862c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    8630:	add	x9, x9, #0x0
    8634:	strb	wzr, [x8, #32]!
    8638:	str	x9, [x0]
    863c:	str	wzr, [x0, #48]
    8640:	str	x20, [x0, #104]
    8644:	str	x19, [x0, #72]
    8648:	b	8d7c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe70>
    864c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    8650:	add	x1, x1, #0x0
    8654:	mov	x0, x20
    8658:	bl	0 <bcmp>
    865c:	cbz	w0, 8728 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x81c>
    8660:	ldr	w8, [x20]
    8664:	ldrb	w9, [x20, #4]
    8668:	mov	w10, #0x6366                	// #25446
    866c:	movk	w10, #0x656d, lsl #16
    8670:	mov	w11, #0x71                  	// #113
    8674:	eor	w8, w8, w10
    8678:	eor	w9, w9, w11
    867c:	orr	w8, w8, w9
    8680:	cbz	w8, 8728 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x81c>
    8684:	ldr	w9, [x20]
    8688:	ldrb	w10, [x20, #4]
    868c:	mov	w8, #0x6366                	// #25446
    8690:	movk	w8, #0x676d, lsl #16
    8694:	mov	w11, #0x65                  	// #101
    8698:	eor	w9, w9, w8
    869c:	eor	w10, w10, w11
    86a0:	orr	w9, w9, w10
    86a4:	cbz	w9, 8728 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x81c>
    86a8:	ldr	w9, [x20]
    86ac:	ldrb	w10, [x20, #4]
    86b0:	mov	w11, #0x74                  	// #116
    86b4:	eor	w8, w9, w8
    86b8:	eor	w9, w10, w11
    86bc:	orr	w8, w8, w9
    86c0:	cbz	w8, 8728 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x81c>
    86c4:	ldr	w9, [x20]
    86c8:	ldrb	w10, [x20, #4]
    86cc:	mov	w8, #0x6366                	// #25446
    86d0:	movk	w8, #0x6c6d, lsl #16
    86d4:	mov	w11, #0x65                  	// #101
    86d8:	eor	w9, w9, w8
    86dc:	eor	w10, w10, w11
    86e0:	orr	w9, w9, w10
    86e4:	cbz	w9, 8728 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x81c>
    86e8:	ldr	w9, [x20]
    86ec:	ldrb	w10, [x20, #4]
    86f0:	mov	w11, #0x74                  	// #116
    86f4:	eor	w8, w9, w8
    86f8:	eor	w9, w10, w11
    86fc:	orr	w8, w8, w9
    8700:	cbz	w8, 8728 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x81c>
    8704:	ldr	w8, [x20]
    8708:	ldrb	w9, [x20, #4]
    870c:	mov	w10, #0x6366                	// #25446
    8710:	movk	w10, #0x6e6d, lsl #16
    8714:	mov	w11, #0x65                  	// #101
    8718:	eor	w8, w8, w10
    871c:	eor	w9, w9, w11
    8720:	orr	w8, w8, w9
    8724:	cbnz	w8, 8380 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x474>
    8728:	cmp	x23, #0x0
    872c:	cset	w8, eq  // eq = none
    8730:	bic	w8, w8, w24
    8734:	tbnz	w8, #0, 8764 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x858>
    8738:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    873c:	add	x1, x1, #0x0
    8740:	add	x0, sp, #0x38
    8744:	bl	0 <LLVMInitializeAArch64AsmParser>
    8748:	ldr	x0, [x19]
    874c:	add	x1, sp, #0x38
    8750:	mov	x2, xzr
    8754:	mov	x3, xzr
    8758:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    875c:	mov	w21, w0
    8760:	b	8868 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x95c>
    8764:	ldr	x8, [x25]
    8768:	mov	x0, x25
    876c:	ldr	x8, [x8, #136]
    8770:	blr	x8
    8774:	ldr	x0, [x19]
    8778:	ldr	x8, [x0]
    877c:	ldr	x8, [x8, #48]
    8780:	blr	x8
    8784:	mov	x20, x0
    8788:	mov	w0, #0x70                  	// #112
    878c:	bl	0 <_Znwm>
    8790:	mov	x8, x0
    8794:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
    8798:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    879c:	add	x21, x21, #0x0
    87a0:	mov	w23, #0x6                   	// #6
    87a4:	strb	wzr, [x8, #32]!
    87a8:	add	x9, x9, #0x0
    87ac:	mov	w24, #0x2                   	// #2
    87b0:	str	x20, [x0, #104]
    87b4:	stp	x22, x9, [x0, #64]
    87b8:	str	x21, [x0]
    87bc:	str	w23, [x0, #48]
    87c0:	str	w24, [x0, #80]
    87c4:	strb	wzr, [x0, #84]
    87c8:	str	x22, [x0, #56]
    87cc:	stp	x8, xzr, [x0, #16]
    87d0:	str	x0, [sp, #56]
    87d4:	add	x1, sp, #0x38
    87d8:	mov	x0, x28
    87dc:	bl	0 <LLVMInitializeAArch64AsmParser>
    87e0:	ldr	x0, [sp, #56]
    87e4:	cbz	x0, 87f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8e8>
    87e8:	ldr	x8, [x0]
    87ec:	ldr	x8, [x8, #8]
    87f0:	blr	x8
    87f4:	ldr	x0, [x19]
    87f8:	ldr	x8, [x0]
    87fc:	ldr	x8, [x8, #48]
    8800:	blr	x8
    8804:	mov	x20, x0
    8808:	mov	w0, #0x70                  	// #112
    880c:	bl	0 <_Znwm>
    8810:	mov	x8, x0
    8814:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    8818:	add	x9, x9, #0x0
    881c:	strb	wzr, [x8, #32]!
    8820:	str	x21, [x0]
    8824:	str	w23, [x0, #48]
    8828:	str	x20, [x0, #104]
    882c:	stp	x22, x9, [x0, #64]
    8830:	str	w24, [x0, #80]
    8834:	strb	wzr, [x0, #84]
    8838:	str	x22, [x0, #56]
    883c:	stp	x8, xzr, [x0, #16]
    8840:	str	x0, [sp, #56]
    8844:	add	x1, sp, #0x38
    8848:	mov	x0, x28
    884c:	bl	0 <LLVMInitializeAArch64AsmParser>
    8850:	ldr	x0, [sp, #56]
    8854:	cbz	x0, 8864 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x958>
    8858:	ldr	x8, [x0]
    885c:	ldr	x8, [x8, #8]
    8860:	blr	x8
    8864:	mov	w21, wzr
    8868:	sub	x8, x29, #0x30
    886c:	add	x0, x8, #0x8
    8870:	bl	0 <LLVMInitializeAArch64AsmParser>
    8874:	b	90f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e8>
    8878:	ldr	x8, [x23]
    887c:	mov	w20, w0
    8880:	mov	x0, x23
    8884:	ldr	x8, [x8, #136]
    8888:	blr	x8
    888c:	ldr	w8, [sp, #24]
    8890:	tbz	w8, #0, 8d28 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe1c>
    8894:	orr	w8, w20, #0x1
    8898:	cmp	w8, #0xf
    889c:	b.ne	8d24 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe18>  // b.any
    88a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    88a4:	add	x1, x1, #0x0
    88a8:	b	8568 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x65c>
    88ac:	sub	x8, x29, #0x30
    88b0:	add	x0, x8, #0x18
    88b4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    88b8:	ldr	x8, [x22]
    88bc:	mov	x0, x22
    88c0:	ldr	x8, [x8, #136]
    88c4:	blr	x8
    88c8:	stp	xzr, xzr, [x29, #-80]
    88cc:	ldr	x0, [x19]
    88d0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    88d4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    88d8:	mov	x3, x0
    88dc:	sub	x0, x29, #0x40
    88e0:	sub	x1, x29, #0x54
    88e4:	sub	x2, x29, #0x50
    88e8:	bl	ec80 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    88ec:	cbz	w0, 898c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xa80>
    88f0:	mov	w25, w0
    88f4:	cmp	w0, #0x1
    88f8:	b.ne	90d4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11c8>  // b.any
    88fc:	ldr	x8, [x22]
    8900:	mov	x0, x22
    8904:	ldr	x8, [x8, #40]
    8908:	blr	x8
    890c:	ldr	x1, [x0, #8]!
    8910:	sub	x2, x29, #0x30
    8914:	strb	wzr, [x0, #106]
    8918:	bl	0 <LLVMInitializeAArch64AsmParser>
    891c:	b	90d4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11c8>
    8920:	ldr	x8, [x25]
    8924:	mov	x22, x0
    8928:	mov	x0, x25
    892c:	ldr	x8, [x8, #136]
    8930:	blr	x8
    8934:	ldr	x0, [x19]
    8938:	sub	x1, x29, #0x40
    893c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    8940:	tbnz	w0, #0, 90f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e4>
    8944:	ldr	w8, [x28, #8]
    8948:	cmp	w8, #0x2
    894c:	b.cc	896c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xa60>  // b.lo, b.ul, b.last
    8950:	ldr	x8, [x28]
    8954:	ldr	x0, [x8, #8]
    8958:	ldr	w8, [x0, #48]
    895c:	cmp	w8, #0x3
    8960:	b.ne	896c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xa60>  // b.any
    8964:	ldr	w8, [x0, #76]
    8968:	cbz	w8, 9060 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1154>
    896c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    8970:	add	x1, x1, #0x0
    8974:	sub	x0, x29, #0x30
    8978:	bl	0 <LLVMInitializeAArch64AsmParser>
    897c:	ldr	x0, [x19]
    8980:	sub	x2, x29, #0x30
    8984:	mov	x1, x22
    8988:	b	822c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x320>
    898c:	ldr	x0, [x19]
    8990:	ldur	w27, [x29, #-84]
    8994:	mov	w1, #0xd                   	// #13
    8998:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    899c:	ldr	x8, [x19]
    89a0:	tbz	w0, #0, 8c18 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xd0c>
    89a4:	mov	x0, x8
    89a8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    89ac:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    89b0:	stp	xzr, xzr, [sp, #88]
    89b4:	ldr	x8, [x19]
    89b8:	mov	x22, x0
    89bc:	mov	x0, x8
    89c0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    89c4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    89c8:	mov	x3, x0
    89cc:	sub	x0, x29, #0x40
    89d0:	add	x1, sp, #0x54
    89d4:	add	x2, sp, #0x58
    89d8:	bl	ec80 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    89dc:	mov	w25, w0
    89e0:	cbnz	w0, 90d4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11c8>
    89e4:	ldur	x2, [x29, #-72]
    89e8:	ldr	x8, [sp, #96]
    89ec:	cmp	x2, x8
    89f0:	b.ne	8a08 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xafc>  // b.any
    89f4:	cbz	x2, 9034 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1128>
    89f8:	ldur	x0, [x29, #-80]
    89fc:	ldr	x1, [sp, #88]
    8a00:	bl	0 <bcmp>
    8a04:	cbz	w0, 9034 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1128>
    8a08:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    8a0c:	add	x1, x1, #0x0
    8a10:	add	x0, sp, #0x38
    8a14:	bl	0 <LLVMInitializeAArch64AsmParser>
    8a18:	ldr	x0, [x19]
    8a1c:	add	x2, sp, #0x38
    8a20:	mov	x1, x22
    8a24:	mov	x3, xzr
    8a28:	mov	x4, xzr
    8a2c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    8a30:	mov	w25, #0x2                   	// #2
    8a34:	b	90d4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11c8>
    8a38:	mov	w27, wzr
    8a3c:	ldur	w8, [x29, #-16]
    8a40:	mov	x19, x28
    8a44:	cmp	w8, #0x41
    8a48:	b.cc	8a58 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb4c>  // b.lo, b.ul, b.last
    8a4c:	ldur	x0, [x29, #-24]
    8a50:	cbz	x0, 8a58 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb4c>
    8a54:	bl	0 <_ZdaPv>
    8a58:	ldr	x8, [x21]
    8a5c:	mov	x0, x21
    8a60:	ldr	x8, [x8, #40]
    8a64:	blr	x8
    8a68:	sub	x8, x29, #0x30
    8a6c:	mov	w1, #0x1                   	// #1
    8a70:	bl	0 <LLVMInitializeAArch64AsmParser>
    8a74:	ldur	w8, [x29, #-16]
    8a78:	ldur	w28, [x29, #-48]
    8a7c:	cmp	w8, #0x41
    8a80:	b.cc	8a90 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb84>  // b.lo, b.ul, b.last
    8a84:	ldur	x0, [x29, #-24]
    8a88:	cbz	x0, 8a90 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb84>
    8a8c:	bl	0 <_ZdaPv>
    8a90:	mov	x0, x21
    8a94:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8a98:	ldp	x9, x8, [x0, #8]
    8a9c:	cmp	x8, #0x3
    8aa0:	stp	x9, x8, [x29, #-48]
    8aa4:	b.ne	8f74 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1068>  // b.any
    8aa8:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    8aac:	add	x22, x22, #0x0
    8ab0:	sub	x0, x29, #0x30
    8ab4:	mov	w2, #0x3                   	// #3
    8ab8:	mov	x1, x22
    8abc:	bl	0 <_ZNK4llvm9StringRef13compare_lowerES0_>
    8ac0:	cbnz	w0, 8f74 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1068>
    8ac4:	cmp	w28, #0x25
    8ac8:	cset	w8, eq  // eq = none
    8acc:	orr	w8, w27, w8
    8ad0:	tbz	w8, #0, 8f74 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1068>
    8ad4:	ldr	x0, [x20]
    8ad8:	mov	x23, x20
    8adc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8ae0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8ae4:	ldr	x8, [x20]
    8ae8:	mov	x23, x0
    8aec:	ldr	x9, [x8]
    8af0:	mov	x0, x8
    8af4:	ldr	x9, [x9, #48]
    8af8:	blr	x9
    8afc:	mov	x24, x0
    8b00:	mov	w0, #0x70                  	// #112
    8b04:	bl	0 <_Znwm>
    8b08:	mov	x8, x0
    8b0c:	mov	w9, #0x6                   	// #6
    8b10:	adrp	x25, 0 <LLVMInitializeAArch64AsmParser>
    8b14:	strb	wzr, [x8, #32]!
    8b18:	str	w9, [x0, #48]
    8b1c:	add	x25, x25, #0x0
    8b20:	mov	w9, #0x3                   	// #3
    8b24:	str	x24, [x0, #104]
    8b28:	str	x25, [x0]
    8b2c:	stp	x23, x22, [x0, #64]
    8b30:	str	w9, [x0, #80]
    8b34:	strb	wzr, [x0, #84]
    8b38:	str	x23, [x0, #56]
    8b3c:	stp	x8, xzr, [x0, #16]
    8b40:	stur	x0, [x29, #-48]
    8b44:	sub	x1, x29, #0x30
    8b48:	mov	x0, x19
    8b4c:	bl	0 <LLVMInitializeAArch64AsmParser>
    8b50:	ldur	x0, [x29, #-48]
    8b54:	cbz	x0, 8b64 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc58>
    8b58:	ldr	x8, [x0]
    8b5c:	ldr	x8, [x8, #8]
    8b60:	blr	x8
    8b64:	ldr	x8, [x21]
    8b68:	mov	x0, x21
    8b6c:	ldr	x8, [x8, #136]
    8b70:	blr	x8
    8b74:	cbz	w27, 8e58 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xf4c>
    8b78:	ldr	x0, [x20]
    8b7c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8b80:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8b84:	ldr	x8, [x20]
    8b88:	mov	x20, x0
    8b8c:	ldr	x9, [x8]
    8b90:	mov	x0, x8
    8b94:	ldr	x9, [x9, #48]
    8b98:	blr	x9
    8b9c:	mov	x22, x0
    8ba0:	mov	w0, #0x70                  	// #112
    8ba4:	bl	0 <_Znwm>
    8ba8:	mov	x8, x0
    8bac:	mov	w9, #0x6                   	// #6
    8bb0:	strb	wzr, [x8, #32]!
    8bb4:	str	w9, [x0, #48]
    8bb8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    8bbc:	add	x9, x9, #0x0
    8bc0:	mov	w10, #0x2                   	// #2
    8bc4:	str	x25, [x0]
    8bc8:	str	x22, [x0, #104]
    8bcc:	stp	x20, x9, [x0, #64]
    8bd0:	str	w10, [x0, #80]
    8bd4:	strb	wzr, [x0, #84]
    8bd8:	str	x20, [x0, #56]
    8bdc:	stp	x8, xzr, [x0, #16]
    8be0:	stur	x0, [x29, #-48]
    8be4:	sub	x1, x29, #0x30
    8be8:	mov	x0, x19
    8bec:	bl	0 <LLVMInitializeAArch64AsmParser>
    8bf0:	ldur	x0, [x29, #-48]
    8bf4:	cbz	x0, 8c04 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xcf8>
    8bf8:	ldr	x8, [x0]
    8bfc:	ldr	x8, [x8, #8]
    8c00:	blr	x8
    8c04:	ldr	x8, [x21]
    8c08:	mov	x0, x21
    8c0c:	ldr	x8, [x8, #136]
    8c10:	blr	x8
    8c14:	b	8da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe9c>
    8c18:	mov	w1, #0x19                  	// #25
    8c1c:	mov	x0, x8
    8c20:	str	x20, [sp, #16]
    8c24:	mov	x20, x28
    8c28:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    8c2c:	str	w27, [sp, #48]
    8c30:	tbz	w0, #0, 8db0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xea4>
    8c34:	ldp	x22, x23, [x29, #-80]
    8c38:	mov	w28, #0x1                   	// #1
    8c3c:	ldr	x0, [x19]
    8c40:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8c44:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8c48:	stp	xzr, xzr, [sp, #88]
    8c4c:	ldr	x8, [x19]
    8c50:	mov	x24, x0
    8c54:	mov	x0, x8
    8c58:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8c5c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8c60:	mov	x3, x0
    8c64:	sub	x0, x29, #0x40
    8c68:	add	x1, sp, #0x54
    8c6c:	add	x2, sp, #0x58
    8c70:	bl	ec80 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    8c74:	cbnz	w0, 902c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1120>
    8c78:	ldr	x8, [sp, #96]
    8c7c:	cmp	x23, x8
    8c80:	b.ne	8e10 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xf04>  // b.any
    8c84:	cbz	x23, 8c9c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xd90>
    8c88:	ldr	x1, [sp, #88]
    8c8c:	mov	x0, x22
    8c90:	mov	x2, x23
    8c94:	bl	0 <bcmp>
    8c98:	cbnz	w0, 8e10 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xf04>
    8c9c:	ldr	x0, [x19]
    8ca0:	ldr	x8, [x0]
    8ca4:	ldr	x8, [x8, #48]
    8ca8:	blr	x8
    8cac:	ldr	x8, [x0, #24]
    8cb0:	ldr	w25, [sp, #84]
    8cb4:	ldr	w9, [x8, #8]
    8cb8:	cmp	w9, w25
    8cbc:	b.ls	94ac <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15a0>  // b.plast
    8cc0:	ldr	x0, [x19]
    8cc4:	ldr	x8, [x8, #104]
    8cc8:	mov	x26, x19
    8ccc:	ldr	x9, [x0]
    8cd0:	ldrh	w19, [x8, x25, lsl #1]
    8cd4:	ldr	x8, [x9, #48]
    8cd8:	blr	x8
    8cdc:	ldr	x8, [x0, #24]
    8ce0:	ldr	w9, [x8, #8]
    8ce4:	cmp	w9, w27
    8ce8:	b.ls	94ac <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15a0>  // b.plast
    8cec:	ldr	x8, [x8, #104]
    8cf0:	ldrh	w8, [x8, w27, uxtw #1]
    8cf4:	add	w8, w8, #0x1
    8cf8:	and	w8, w8, #0x1f
    8cfc:	cmp	w19, w8
    8d00:	b.ne	90a0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1194>  // b.any
    8d04:	ldr	x0, [x26]
    8d08:	mov	w1, #0x19                  	// #25
    8d0c:	mov	x19, x26
    8d10:	add	w28, w28, #0x1
    8d14:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    8d18:	mov	w27, w25
    8d1c:	tbnz	w0, #0, 8c3c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xd30>
    8d20:	b	8db4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xea8>
    8d24:	eor	w20, w20, #0x1
    8d28:	ldr	x0, [x19]
    8d2c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8d30:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8d34:	ldr	x8, [x19]
    8d38:	mov	x22, x0
    8d3c:	ldr	x9, [x8]
    8d40:	mov	x0, x8
    8d44:	ldr	x9, [x9, #48]
    8d48:	blr	x9
    8d4c:	mov	x23, x0
    8d50:	mov	w0, #0x70                  	// #112
    8d54:	bl	0 <_Znwm>
    8d58:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    8d5c:	mov	x8, x0
    8d60:	add	x9, x9, #0x0
    8d64:	mov	w10, #0x2                   	// #2
    8d68:	strb	wzr, [x8, #32]!
    8d6c:	str	x9, [x0]
    8d70:	str	w10, [x0, #48]
    8d74:	str	x23, [x0, #104]
    8d78:	str	w20, [x0, #72]
    8d7c:	stp	x21, x22, [x0, #56]
    8d80:	stp	x8, xzr, [x0, #16]
    8d84:	stur	x0, [x29, #-48]
    8d88:	sub	x1, x29, #0x30
    8d8c:	mov	x0, x28
    8d90:	bl	0 <LLVMInitializeAArch64AsmParser>
    8d94:	ldur	x0, [x29, #-48]
    8d98:	cbz	x0, 8da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe9c>
    8d9c:	ldr	x8, [x0]
    8da0:	ldr	x8, [x8, #8]
    8da4:	blr	x8
    8da8:	mov	w21, wzr
    8dac:	b	90f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e8>
    8db0:	mov	w28, #0x1                   	// #1
    8db4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    8db8:	add	x1, x1, #0x0
    8dbc:	add	x0, sp, #0x38
    8dc0:	bl	0 <LLVMInitializeAArch64AsmParser>
    8dc4:	ldr	x0, [x19]
    8dc8:	add	x2, sp, #0x38
    8dcc:	mov	w1, #0x16                  	// #22
    8dd0:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    8dd4:	tbnz	w0, #0, 8e08 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xefc>
    8dd8:	cmp	w28, #0x5
    8ddc:	b.cc	8e28 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xf1c>  // b.lo, b.ul, b.last
    8de0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    8de4:	add	x1, x1, #0x0
    8de8:	add	x0, sp, #0x38
    8dec:	bl	0 <LLVMInitializeAArch64AsmParser>
    8df0:	ldr	x0, [x19]
    8df4:	add	x2, sp, #0x38
    8df8:	mov	x1, x21
    8dfc:	mov	x3, xzr
    8e00:	mov	x4, xzr
    8e04:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    8e08:	mov	w25, #0x1                   	// #1
    8e0c:	b	90cc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11c0>
    8e10:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    8e14:	add	x1, x1, #0x0
    8e18:	add	x0, sp, #0x38
    8e1c:	bl	0 <LLVMInitializeAArch64AsmParser>
    8e20:	ldr	x0, [x19]
    8e24:	b	90b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11a8>
    8e28:	ldur	x1, [x29, #-72]
    8e2c:	cbz	x1, 9130 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1224>
    8e30:	ldur	x0, [x29, #-80]
    8e34:	add	x8, sp, #0x38
    8e38:	mov	w2, #0x1                   	// #1
    8e3c:	bl	9654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    8e40:	ldrb	w8, [sp, #64]
    8e44:	ldr	w24, [sp, #48]
    8e48:	cbz	w8, 9134 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1228>
    8e4c:	ldr	d0, [sp, #56]
    8e50:	strb	wzr, [sp, #64]
    8e54:	b	9138 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x122c>
    8e58:	cmp	w28, #0x25
    8e5c:	b.ne	8f34 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1028>  // b.any
    8e60:	ldr	x8, [x21]
    8e64:	mov	x0, x21
    8e68:	ldr	x8, [x8, #136]
    8e6c:	blr	x8
    8e70:	ldr	x0, [x20]
    8e74:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8e78:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8e7c:	mov	x22, x0
    8e80:	sub	x1, x29, #0x30
    8e84:	mov	x0, x21
    8e88:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    8e8c:	tbnz	w0, #0, 8f34 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1028>
    8e90:	ldur	x8, [x29, #-48]
    8e94:	cbz	x8, 94ec <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15e0>
    8e98:	ldr	w9, [x8]
    8e9c:	cmp	w9, #0x1
    8ea0:	b.ne	8f34 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1028>  // b.any
    8ea4:	ldr	x0, [x20]
    8ea8:	mov	x21, x20
    8eac:	ldr	x20, [x8, #16]
    8eb0:	ldr	x9, [x0]
    8eb4:	ldr	x8, [x9, #48]
    8eb8:	blr	x8
    8ebc:	mov	x1, x0
    8ec0:	mov	x0, x20
    8ec4:	mov	w2, wzr
    8ec8:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    8ecc:	ldr	x8, [x21]
    8ed0:	mov	x20, x0
    8ed4:	mov	x0, x8
    8ed8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8edc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8ee0:	ldr	x8, [x21]
    8ee4:	mov	x21, x0
    8ee8:	ldr	x9, [x8]
    8eec:	mov	x0, x8
    8ef0:	ldr	x9, [x9, #48]
    8ef4:	blr	x9
    8ef8:	mov	x23, x0
    8efc:	mov	w0, #0x70                  	// #112
    8f00:	bl	0 <_Znwm>
    8f04:	mov	x8, x0
    8f08:	strb	wzr, [x8, #32]!
    8f0c:	str	x25, [x0]
    8f10:	str	wzr, [x0, #48]
    8f14:	str	x23, [x0, #104]
    8f18:	stp	x21, x20, [x0, #64]
    8f1c:	str	x22, [x0, #56]
    8f20:	stp	x8, xzr, [x0, #16]
    8f24:	str	x0, [sp, #56]
    8f28:	add	x1, sp, #0x38
    8f2c:	mov	x0, x19
    8f30:	b	8404 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x4f8>
    8f34:	ldr	x0, [x20]
    8f38:	mov	x22, x20
    8f3c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8f40:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8f44:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    8f48:	mov	x21, x0
    8f4c:	add	x1, x1, #0x0
    8f50:	sub	x0, x29, #0x30
    8f54:	bl	0 <LLVMInitializeAArch64AsmParser>
    8f58:	ldr	x0, [x20]
    8f5c:	sub	x2, x29, #0x30
    8f60:	mov	x1, x21
    8f64:	mov	x3, xzr
    8f68:	mov	x4, xzr
    8f6c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    8f70:	tbz	w0, #0, 8da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe9c>
    8f74:	mov	x0, x26
    8f78:	mov	x1, x19
    8f7c:	mov	x23, x19
    8f80:	bl	b4e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    8f84:	cmp	w0, #0x1
    8f88:	b.ne	9020 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1114>  // b.any
    8f8c:	ldr	x0, [x20]
    8f90:	mov	x19, x20
    8f94:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8f98:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8f9c:	ldr	x8, [x20]
    8fa0:	mov	x20, x0
    8fa4:	sub	x1, x29, #0x30
    8fa8:	mov	x0, x8
    8fac:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    8fb0:	tbnz	w0, #0, 90f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e4>
    8fb4:	ldr	x0, [x19]
    8fb8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8fbc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8fc0:	ldr	x8, [x19]
    8fc4:	ldur	x19, [x29, #-48]
    8fc8:	sub	x22, x0, #0x1
    8fcc:	ldr	x9, [x8]
    8fd0:	mov	x0, x8
    8fd4:	ldr	x9, [x9, #48]
    8fd8:	blr	x9
    8fdc:	mov	x21, x0
    8fe0:	mov	w0, #0x70                  	// #112
    8fe4:	bl	0 <_Znwm>
    8fe8:	mov	x8, x0
    8fec:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    8ff0:	add	x9, x9, #0x0
    8ff4:	strb	wzr, [x8, #32]!
    8ff8:	str	x9, [x0]
    8ffc:	str	wzr, [x0, #48]
    9000:	str	x21, [x0, #104]
    9004:	stp	x22, x19, [x0, #64]
    9008:	str	x20, [x0, #56]
    900c:	stp	x8, xzr, [x0, #16]
    9010:	str	x0, [sp, #56]
    9014:	add	x1, sp, #0x38
    9018:	mov	x0, x23
    901c:	b	8404 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x4f8>
    9020:	cmp	w0, #0x0
    9024:	cset	w21, ne  // ne = any
    9028:	b	90f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e8>
    902c:	mov	w25, w0
    9030:	b	90cc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11c0>
    9034:	ldr	w8, [sp, #84]
    9038:	add	w9, w8, #0x20
    903c:	cmp	w8, w27
    9040:	csel	w8, w8, w9, hi  // hi = pmore
    9044:	sub	w8, w8, w27
    9048:	sub	w9, w8, #0x1
    904c:	cmp	w9, #0x3
    9050:	b.cc	91d8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12cc>  // b.lo, b.ul, b.last
    9054:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9058:	add	x1, x1, #0x0
    905c:	b	8a10 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb04>
    9060:	ldr	x8, [x0]
    9064:	ldr	x8, [x8, #56]
    9068:	blr	x8
    906c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    9070:	ldr	x8, [x8]
    9074:	mov	w9, w0
    9078:	lsr	x9, x9, #3
    907c:	ldrh	w10, [x8, #502]
    9080:	cmp	w9, w10
    9084:	b.cs	91ec <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12e0>  // b.hs, b.nlast
    9088:	ldr	x8, [x8, #488]
    908c:	ldrb	w8, [x8, x9]
    9090:	and	w9, w0, #0x7
    9094:	lsr	w8, w8, w9
    9098:	and	w24, w8, #0x1
    909c:	b	91f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12e4>
    90a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    90a4:	add	x1, x1, #0x0
    90a8:	add	x0, sp, #0x38
    90ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    90b0:	ldr	x0, [x26]
    90b4:	add	x2, sp, #0x38
    90b8:	mov	x1, x24
    90bc:	mov	x3, xzr
    90c0:	mov	x4, xzr
    90c4:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    90c8:	mov	w25, #0x2                   	// #2
    90cc:	mov	x28, x20
    90d0:	ldr	x20, [sp, #16]
    90d4:	ldur	w8, [x29, #-16]
    90d8:	cmp	w8, #0x41
    90dc:	b.cc	90ec <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e0>  // b.lo, b.ul, b.last
    90e0:	ldur	x0, [x29, #-24]
    90e4:	cbz	x0, 90ec <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e0>
    90e8:	bl	0 <_ZdaPv>
    90ec:	cbz	w25, 9118 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x120c>
    90f0:	mov	w21, #0x1                   	// #1
    90f4:	and	w0, w21, #0x1
    90f8:	ldp	x20, x19, [sp, #272]
    90fc:	ldp	x22, x21, [sp, #256]
    9100:	ldp	x24, x23, [sp, #240]
    9104:	ldp	x26, x25, [sp, #224]
    9108:	ldp	x28, x27, [sp, #208]
    910c:	ldp	x29, x30, [sp, #192]
    9110:	add	sp, sp, #0x120
    9114:	ret
    9118:	mov	x0, x20
    911c:	mov	x1, x28
    9120:	bl	a8dc <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    9124:	cmp	w0, #0x2
    9128:	cset	w21, eq  // eq = none
    912c:	b	90f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e8>
    9130:	ldr	w24, [sp, #48]
    9134:	movi	v0.2d, #0x0
    9138:	str	q0, [sp, #32]
    913c:	ldr	x0, [x19]
    9140:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9144:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9148:	ldr	x8, [x19]
    914c:	mov	x22, x0
    9150:	ldr	x9, [x8]
    9154:	mov	x0, x8
    9158:	ldr	x9, [x9, #48]
    915c:	blr	x9
    9160:	mov	x23, x0
    9164:	mov	w0, #0x70                  	// #112
    9168:	bl	0 <_Znwm>
    916c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9170:	ldr	q0, [sp, #32]
    9174:	mov	x8, x0
    9178:	add	x9, x9, #0x0
    917c:	strb	wzr, [x8, #32]!
    9180:	str	x9, [x0]
    9184:	mov	w9, #0x4                   	// #4
    9188:	str	w9, [x0, #48]
    918c:	mov	w9, #0x1                   	// #1
    9190:	str	x23, [x0, #104]
    9194:	stp	w24, w28, [x0, #72]
    9198:	str	d0, [x0, #80]
    919c:	str	w9, [x0, #88]
    91a0:	stp	x21, x22, [x0, #56]
    91a4:	stp	x8, xzr, [x0, #16]
    91a8:	str	x0, [sp, #56]
    91ac:	add	x1, sp, #0x38
    91b0:	mov	x0, x20
    91b4:	mov	x28, x20
    91b8:	bl	0 <LLVMInitializeAArch64AsmParser>
    91bc:	ldr	x0, [sp, #56]
    91c0:	cbz	x0, 91d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12c4>
    91c4:	ldr	x8, [x0]
    91c8:	ldr	x8, [x8, #8]
    91cc:	blr	x8
    91d0:	mov	w25, wzr
    91d4:	b	90d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11c4>
    91d8:	str	w27, [sp, #48]
    91dc:	str	x20, [sp, #16]
    91e0:	mov	x20, x28
    91e4:	add	w28, w8, #0x1
    91e8:	b	8db4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xea8>
    91ec:	mov	w24, wzr
    91f0:	ldr	x0, [x19]
    91f4:	mov	x26, x19
    91f8:	ldr	x8, [x0]
    91fc:	ldr	x8, [x8, #48]
    9200:	blr	x8
    9204:	ldur	x8, [x29, #-64]
    9208:	cbz	x8, 94ec <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15e0>
    920c:	ldr	w9, [x8]
    9210:	mov	x20, x0
    9214:	sub	x23, x22, #0x1
    9218:	cmp	w9, #0x1
    921c:	b.ne	9408 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14fc>  // b.any
    9220:	ldr	x21, [x8, #16]
    9224:	cmp	w24, #0x0
    9228:	mov	w8, #0x10                  	// #16
    922c:	mov	w9, #0x30                  	// #48
    9230:	csel	w8, w9, w8, ne  // ne = any
    9234:	cmp	x21, #0x10, lsl #12
    9238:	b.cc	9274 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1368>  // b.lo, b.ul, b.last
    923c:	mov	w25, wzr
    9240:	mov	x9, x21
    9244:	rbit	x10, x9
    9248:	clz	x10, x10
    924c:	cmp	w10, #0x10
    9250:	b.cc	937c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1470>  // b.lo, b.ul, b.last
    9254:	lsr	x21, x9, #16
    9258:	lsr	x10, x9, #32
    925c:	add	w25, w25, #0x10
    9260:	mov	x9, x21
    9264:	cbnz	x10, 9244 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1338>
    9268:	cmp	w25, w8
    926c:	b.ls	9278 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x136c>  // b.plast
    9270:	b	9380 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1474>
    9274:	mov	w25, wzr
    9278:	mov	w0, #0x70                  	// #112
    927c:	bl	0 <_Znwm>
    9280:	mov	x8, x0
    9284:	mov	w9, #0x6                   	// #6
    9288:	strb	wzr, [x8, #32]!
    928c:	str	w9, [x0, #48]
    9290:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9294:	add	x9, x9, #0x0
    9298:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    929c:	stp	x22, x9, [x0, #64]
    92a0:	mov	w9, #0x4                   	// #4
    92a4:	add	x24, x24, #0x0
    92a8:	str	w9, [x0, #80]
    92ac:	str	x24, [x0]
    92b0:	str	x20, [x0, #104]
    92b4:	strb	wzr, [x0, #84]
    92b8:	stp	x8, xzr, [x0, #16]
    92bc:	str	x22, [x0, #56]
    92c0:	ldr	w8, [x28, #8]
    92c4:	cbz	w8, 950c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1600>
    92c8:	ldr	x9, [x28]
    92cc:	ldr	x8, [x9]
    92d0:	str	x0, [x9]
    92d4:	cbz	x8, 92e8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x13dc>
    92d8:	ldr	x9, [x8]
    92dc:	mov	x0, x8
    92e0:	ldr	x9, [x9, #8]
    92e4:	blr	x9
    92e8:	mov	x0, x21
    92ec:	mov	x1, x20
    92f0:	mov	w2, wzr
    92f4:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    92f8:	mov	x21, x0
    92fc:	mov	w0, #0x70                  	// #112
    9300:	bl	0 <_Znwm>
    9304:	mov	x8, x0
    9308:	strb	wzr, [x8, #32]!
    930c:	str	x24, [x0]
    9310:	str	wzr, [x0, #48]
    9314:	str	x20, [x0, #104]
    9318:	stp	x23, x21, [x0, #64]
    931c:	str	xzr, [x0, #56]
    9320:	stp	x8, xzr, [x0, #16]
    9324:	stur	x0, [x29, #-48]
    9328:	sub	x1, x29, #0x30
    932c:	mov	x0, x28
    9330:	bl	0 <LLVMInitializeAArch64AsmParser>
    9334:	ldur	x0, [x29, #-48]
    9338:	cbz	x0, 9348 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x143c>
    933c:	ldr	x8, [x0]
    9340:	ldr	x8, [x8, #8]
    9344:	blr	x8
    9348:	cbz	w25, 8da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe9c>
    934c:	mov	w0, #0x70                  	// #112
    9350:	bl	0 <_Znwm>
    9354:	mov	x8, x0
    9358:	mov	w9, #0xa                   	// #10
    935c:	strb	wzr, [x8, #32]!
    9360:	str	w9, [x0, #48]
    9364:	mov	w9, #0x1                   	// #1
    9368:	str	x24, [x0]
    936c:	str	x20, [x0, #104]
    9370:	stp	wzr, w25, [x0, #72]
    9374:	strb	w9, [x0, #80]
    9378:	b	9464 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1558>
    937c:	mov	x21, x9
    9380:	lsl	x9, x21, x25
    9384:	mov	w8, #0x40                  	// #64
    9388:	str	w8, [sp, #64]
    938c:	str	x9, [sp, #56]
    9390:	cbnz	w24, 9408 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14fc>
    9394:	clz	x9, x9
    9398:	sub	w8, w8, w9
    939c:	cmp	w8, #0x21
    93a0:	b.cc	93b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14a8>  // b.lo, b.ul, b.last
    93a4:	add	x0, sp, #0x38
    93a8:	bl	0 <LLVMInitializeAArch64AsmParser>
    93ac:	cmp	w0, #0x21
    93b0:	b.cs	93bc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14b0>  // b.hs, b.nlast
    93b4:	mov	w19, wzr
    93b8:	b	93ec <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14e0>
    93bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    93c0:	add	x1, x1, #0x0
    93c4:	sub	x0, x29, #0x30
    93c8:	bl	0 <LLVMInitializeAArch64AsmParser>
    93cc:	ldr	x0, [x26]
    93d0:	sub	x2, x29, #0x30
    93d4:	mov	x1, x22
    93d8:	mov	x3, xzr
    93dc:	mov	x4, xzr
    93e0:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    93e4:	mov	w21, w0
    93e8:	mov	w19, #0x1                   	// #1
    93ec:	ldr	w8, [sp, #64]
    93f0:	cmp	w8, #0x41
    93f4:	b.cc	9404 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14f8>  // b.lo, b.ul, b.last
    93f8:	ldr	x0, [sp, #56]
    93fc:	cbz	x0, 9404 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14f8>
    9400:	bl	0 <_ZdaPv>
    9404:	cbnz	w19, 90f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e8>
    9408:	ldr	x0, [x26]
    940c:	ldr	x8, [x0]
    9410:	ldr	x8, [x8, #56]
    9414:	blr	x8
    9418:	ldr	x0, [x0, #16]
    941c:	ldur	x1, [x29, #-64]
    9420:	cmp	w24, #0x0
    9424:	mov	w8, #0x4                   	// #4
    9428:	mov	w9, #0x8                   	// #8
    942c:	csel	w2, w9, w8, ne  // ne = any
    9430:	mov	x3, x22
    9434:	bl	0 <_ZN4llvm21AArch64TargetStreamer20addConstantPoolEntryEPKNS_6MCExprEjNS_5SMLocE>
    9438:	mov	x21, x0
    943c:	mov	w0, #0x70                  	// #112
    9440:	bl	0 <_Znwm>
    9444:	mov	x8, x0
    9448:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    944c:	add	x9, x9, #0x0
    9450:	strb	wzr, [x8, #32]!
    9454:	str	x9, [x0]
    9458:	str	wzr, [x0, #48]
    945c:	str	x20, [x0, #104]
    9460:	str	x21, [x0, #72]
    9464:	stp	xzr, x23, [x0, #56]
    9468:	b	8d80 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe74>
    946c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    9470:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9474:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    9478:	add	x0, x0, #0x0
    947c:	add	x1, x1, #0x0
    9480:	add	x3, x3, #0x0
    9484:	mov	w2, #0x9ff8                	// #40952
    9488:	bl	0 <__assert_fail>
    948c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    9490:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9494:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    9498:	add	x0, x0, #0x0
    949c:	add	x1, x1, #0x0
    94a0:	add	x3, x3, #0x0
    94a4:	mov	w2, #0x99                  	// #153
    94a8:	bl	0 <__assert_fail>
    94ac:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    94b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    94b4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    94b8:	add	x0, x0, #0x0
    94bc:	add	x1, x1, #0x0
    94c0:	add	x3, x3, #0x0
    94c4:	mov	w2, #0x224                 	// #548
    94c8:	bl	0 <__assert_fail>
    94cc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    94d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    94d4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    94d8:	add	x0, x0, #0x0
    94dc:	add	x1, x1, #0x0
    94e0:	add	x3, x3, #0x0
    94e4:	mov	w2, #0xa9d                 	// #2717
    94e8:	bl	0 <__assert_fail>
    94ec:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    94f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    94f4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    94f8:	add	x0, x0, #0x0
    94fc:	add	x1, x1, #0x0
    9500:	add	x3, x3, #0x0
    9504:	mov	w2, #0x69                  	// #105
    9508:	bl	0 <__assert_fail>
    950c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    9510:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9514:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    9518:	add	x0, x0, #0x0
    951c:	add	x1, x1, #0x0
    9520:	add	x3, x3, #0x0
    9524:	mov	w2, #0x95                  	// #149
    9528:	bl	0 <__assert_fail>

000000000000952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>:
    952c:	sub	sp, sp, #0x80
    9530:	stp	x29, x30, [sp, #32]
    9534:	stp	x28, x27, [sp, #48]
    9538:	stp	x26, x25, [sp, #64]
    953c:	stp	x24, x23, [sp, #80]
    9540:	stp	x22, x21, [sp, #96]
    9544:	stp	x20, x19, [sp, #112]
    9548:	add	x29, sp, #0x20
    954c:	ldr	x21, [x0, #8]
    9550:	mov	x19, x0
    9554:	mov	w22, w3
    9558:	mov	x23, x2
    955c:	mov	x0, x21
    9560:	mov	x20, x1
    9564:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9568:	ldr	w8, [x0]
    956c:	cmp	w8, #0x2
    9570:	b.ne	9604 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xd8>  // b.any
    9574:	ldp	x25, x24, [x0, #8]
    9578:	cbz	x24, 9598 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0x6c>
    957c:	mov	w1, #0x2e                  	// #46
    9580:	mov	x0, x25
    9584:	mov	x2, x24
    9588:	bl	0 <memchr>
    958c:	cbz	x0, 9598 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0x6c>
    9590:	sub	x28, x0, x25
    9594:	b	959c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0x70>
    9598:	mov	x28, #0xffffffffffffffff    	// #-1
    959c:	cmp	x24, x28
    95a0:	csel	x27, x24, x28, cc  // cc = lo, ul, last
    95a4:	mov	x0, x19
    95a8:	mov	x1, x25
    95ac:	mov	x2, x27
    95b0:	mov	w3, w22
    95b4:	bl	61cc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    95b8:	cbz	w0, 9604 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xd8>
    95bc:	mov	w26, w0
    95c0:	cmn	x28, #0x1
    95c4:	b.eq	95e8 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xbc>  // b.none
    95c8:	add	x0, x25, x27
    95cc:	sub	x1, x24, x27
    95d0:	add	x8, sp, #0x8
    95d4:	mov	w2, w22
    95d8:	stp	x0, x1, [x23]
    95dc:	bl	9654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    95e0:	ldrb	w8, [sp, #16]
    95e4:	cbz	w8, 9628 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xfc>
    95e8:	ldr	x8, [x21]
    95ec:	mov	x0, x21
    95f0:	ldr	x8, [x8, #136]
    95f4:	blr	x8
    95f8:	mov	w0, wzr
    95fc:	str	w26, [x20]
    9600:	b	9608 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xdc>
    9604:	mov	w0, #0x1                   	// #1
    9608:	ldp	x20, x19, [sp, #112]
    960c:	ldp	x22, x21, [sp, #96]
    9610:	ldp	x24, x23, [sp, #80]
    9614:	ldp	x26, x25, [sp, #64]
    9618:	ldp	x28, x27, [sp, #48]
    961c:	ldp	x29, x30, [sp, #32]
    9620:	add	sp, sp, #0x80
    9624:	ret
    9628:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    962c:	add	x1, x1, #0x0
    9630:	add	x0, sp, #0x8
    9634:	bl	0 <LLVMInitializeAArch64AsmParser>
    9638:	ldr	x0, [x19, #8]
    963c:	add	x1, sp, #0x8
    9640:	mov	x2, xzr
    9644:	mov	x3, xzr
    9648:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    964c:	mov	w0, #0x2                   	// #2
    9650:	b	9608 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xdc>

0000000000009654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>:
    9654:	sub	sp, sp, #0x80
    9658:	stp	x29, x30, [sp, #80]
    965c:	stp	x22, x21, [sp, #96]
    9660:	stp	x20, x19, [sp, #112]
    9664:	add	x29, sp, #0x50
    9668:	mov	x19, x8
    966c:	sub	w8, w2, #0x2
    9670:	cmp	w8, #0x2
    9674:	stp	x0, x1, [x29, #-16]
    9678:	b.cs	9714 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0xc0>  // b.hs, b.nlast
    967c:	mov	x8, sp
    9680:	sub	x0, x29, #0x10
    9684:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    9688:	ldr	q0, [sp]
    968c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9690:	add	x1, x1, #0x0
    9694:	add	x0, sp, #0x20
    9698:	mov	x2, xzr
    969c:	mov	x3, xzr
    96a0:	strb	wzr, [sp, #48]
    96a4:	str	q0, [sp, #32]
    96a8:	strb	wzr, [sp, #56]
    96ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    96b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    96b4:	add	x1, x1, #0x0
    96b8:	mov	w2, #0x2                   	// #2
    96bc:	mov	x3, #0x800000000           	// #34359738368
    96c0:	bl	0 <LLVMInitializeAArch64AsmParser>
    96c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    96c8:	add	x1, x1, #0x0
    96cc:	mov	w2, #0x2                   	// #2
    96d0:	mov	x3, #0x1000000000          	// #68719476736
    96d4:	bl	0 <LLVMInitializeAArch64AsmParser>
    96d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    96dc:	add	x1, x1, #0x0
    96e0:	mov	w2, #0x2                   	// #2
    96e4:	mov	x3, #0x2000000000          	// #137438953472
    96e8:	bl	0 <LLVMInitializeAArch64AsmParser>
    96ec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    96f0:	add	x1, x1, #0x0
    96f4:	mov	w2, #0x2                   	// #2
    96f8:	mov	x3, #0x4000000000          	// #274877906944
    96fc:	bl	0 <LLVMInitializeAArch64AsmParser>
    9700:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9704:	add	x1, x1, #0x0
    9708:	mov	w2, #0x2                   	// #2
    970c:	mov	x3, #0x8000000000          	// #549755813888
    9710:	b	98ac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x258>
    9714:	cmp	w2, #0x1
    9718:	b.ne	9924 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2d0>  // b.any
    971c:	mov	x8, sp
    9720:	sub	x0, x29, #0x10
    9724:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    9728:	ldr	q0, [sp]
    972c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9730:	add	x1, x1, #0x0
    9734:	add	x0, sp, #0x20
    9738:	mov	x2, xzr
    973c:	mov	x3, xzr
    9740:	strb	wzr, [sp, #48]
    9744:	str	q0, [sp, #32]
    9748:	strb	wzr, [sp, #56]
    974c:	bl	0 <LLVMInitializeAArch64AsmParser>
    9750:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9754:	mov	x3, #0x1                   	// #1
    9758:	add	x1, x1, #0x0
    975c:	mov	w2, #0x3                   	// #3
    9760:	movk	x3, #0x40, lsl #32
    9764:	mov	x21, #0x1                   	// #1
    9768:	movk	x21, #0x40, lsl #32
    976c:	bl	0 <LLVMInitializeAArch64AsmParser>
    9770:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9774:	mov	x3, #0x1                   	// #1
    9778:	add	x1, x1, #0x0
    977c:	mov	w2, #0x3                   	// #3
    9780:	movk	x3, #0x80, lsl #32
    9784:	bl	0 <LLVMInitializeAArch64AsmParser>
    9788:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    978c:	mov	x3, #0x2                   	// #2
    9790:	add	x1, x1, #0x0
    9794:	mov	w2, #0x3                   	// #3
    9798:	movk	x3, #0x10, lsl #32
    979c:	mov	x20, #0x2                   	// #2
    97a0:	movk	x20, #0x10, lsl #32
    97a4:	bl	0 <LLVMInitializeAArch64AsmParser>
    97a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    97ac:	mov	x3, #0x2                   	// #2
    97b0:	add	x1, x1, #0x0
    97b4:	mov	w2, #0x3                   	// #3
    97b8:	movk	x3, #0x20, lsl #32
    97bc:	mov	x22, #0x2                   	// #2
    97c0:	movk	x22, #0x20, lsl #32
    97c4:	bl	0 <LLVMInitializeAArch64AsmParser>
    97c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    97cc:	add	x3, x21, #0x1
    97d0:	add	x1, x1, #0x0
    97d4:	mov	w2, #0x3                   	// #3
    97d8:	bl	0 <LLVMInitializeAArch64AsmParser>
    97dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    97e0:	mov	x3, #0x4                   	// #4
    97e4:	add	x1, x1, #0x0
    97e8:	mov	w2, #0x3                   	// #3
    97ec:	movk	x3, #0x8, lsl #32
    97f0:	mov	x21, #0x4                   	// #4
    97f4:	movk	x21, #0x8, lsl #32
    97f8:	bl	0 <LLVMInitializeAArch64AsmParser>
    97fc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9800:	add	x3, x20, #0x2
    9804:	add	x1, x1, #0x0
    9808:	mov	w2, #0x3                   	// #3
    980c:	bl	0 <LLVMInitializeAArch64AsmParser>
    9810:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9814:	add	x3, x22, #0x2
    9818:	add	x1, x1, #0x0
    981c:	mov	w2, #0x3                   	// #3
    9820:	bl	0 <LLVMInitializeAArch64AsmParser>
    9824:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9828:	add	x1, x1, #0x0
    982c:	mov	w2, #0x3                   	// #3
    9830:	mov	x3, #0x800000008           	// #34359738376
    9834:	bl	0 <LLVMInitializeAArch64AsmParser>
    9838:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    983c:	add	x3, x20, #0x6
    9840:	add	x1, x1, #0x0
    9844:	mov	w2, #0x3                   	// #3
    9848:	bl	0 <LLVMInitializeAArch64AsmParser>
    984c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9850:	add	x3, x21, #0xc
    9854:	add	x1, x1, #0x0
    9858:	mov	w2, #0x4                   	// #4
    985c:	bl	0 <LLVMInitializeAArch64AsmParser>
    9860:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9864:	add	x1, x1, #0x0
    9868:	mov	w2, #0x2                   	// #2
    986c:	mov	x3, #0x800000000           	// #34359738368
    9870:	bl	0 <LLVMInitializeAArch64AsmParser>
    9874:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9878:	add	x1, x1, #0x0
    987c:	mov	w2, #0x2                   	// #2
    9880:	mov	x3, #0x1000000000          	// #68719476736
    9884:	bl	0 <LLVMInitializeAArch64AsmParser>
    9888:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    988c:	add	x1, x1, #0x0
    9890:	mov	w2, #0x2                   	// #2
    9894:	mov	x3, #0x2000000000          	// #137438953472
    9898:	bl	0 <LLVMInitializeAArch64AsmParser>
    989c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    98a0:	add	x1, x1, #0x0
    98a4:	mov	w2, #0x2                   	// #2
    98a8:	mov	x3, #0x4000000000          	// #274877906944
    98ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    98b0:	ldrb	w8, [x0, #24]
    98b4:	cbz	w8, 98c0 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x26c>
    98b8:	ldr	x20, [x0, #16]
    98bc:	b	98c4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x270>
    98c0:	mov	x20, #0xffffffffffffffff    	// #-1
    98c4:	ldrb	w8, [sp, #56]
    98c8:	cbz	w8, 98d0 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x27c>
    98cc:	strb	wzr, [sp, #56]
    98d0:	ldr	x0, [sp]
    98d4:	mov	x8, sp
    98d8:	add	x8, x8, #0x10
    98dc:	cmp	x0, x8
    98e0:	b.eq	98e8 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x294>  // b.none
    98e4:	bl	0 <_ZdlPv>
    98e8:	and	x8, x20, x20, lsr #32
    98ec:	mov	w9, #0xffffffff            	// #-1
    98f0:	cmp	x8, x9
    98f4:	b.ne	9904 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2b0>  // b.any
    98f8:	mov	w8, wzr
    98fc:	strb	wzr, [x19]
    9900:	b	990c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2b8>
    9904:	mov	w8, #0x1                   	// #1
    9908:	str	x20, [x19]
    990c:	strb	w8, [x19, #8]
    9910:	ldp	x20, x19, [sp, #112]
    9914:	ldp	x22, x21, [sp, #96]
    9918:	ldp	x29, x30, [sp, #80]
    991c:	add	sp, sp, #0x80
    9920:	ret
    9924:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    9928:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    992c:	add	x0, x0, #0x0
    9930:	add	x1, x1, #0x0
    9934:	mov	w2, #0x87d                 	// #2173
    9938:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000993c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
    993c:	stp	x29, x30, [sp, #-64]!
    9940:	str	x23, [sp, #16]
    9944:	stp	x22, x21, [sp, #32]
    9948:	stp	x20, x19, [sp, #48]
    994c:	mov	x29, sp
    9950:	ldr	x8, [x0, #8]
    9954:	mov	x19, x1
    9958:	tbnz	x8, #60, 9a08 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcc>
    995c:	tbnz	x8, #61, 9a14 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8>
    9960:	tbnz	x8, #62, 9a20 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe4>
    9964:	tbnz	x8, #63, 9a2c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf0>
    9968:	ldrb	w8, [x0, #16]
    996c:	tbnz	w8, #0, 9a38 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xfc>
    9970:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    9974:	add	x22, x22, #0x0
    9978:	mov	w23, #0x7                   	// #7
    997c:	mov	x20, x22
    9980:	str	x0, [x29, #24]
    9984:	add	x0, x29, #0x18
    9988:	mov	x1, x20
    998c:	bl	9fd8 <_ZN9__gnu_cxx5__ops10_Iter_predIZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3$_1EclIPK9ExtensionEEbT_>
    9990:	tbnz	w0, #0, 9a48 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10c>
    9994:	add	x21, x20, #0x20
    9998:	add	x0, x29, #0x18
    999c:	mov	x1, x21
    99a0:	bl	9fd8 <_ZN9__gnu_cxx5__ops10_Iter_predIZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3$_1EclIPK9ExtensionEEbT_>
    99a4:	tbnz	w0, #0, 9a44 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x108>
    99a8:	add	x21, x20, #0x40
    99ac:	add	x0, x29, #0x18
    99b0:	mov	x1, x21
    99b4:	bl	9fd8 <_ZN9__gnu_cxx5__ops10_Iter_predIZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3$_1EclIPK9ExtensionEEbT_>
    99b8:	tbnz	w0, #0, 9a44 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x108>
    99bc:	add	x21, x20, #0x60
    99c0:	add	x0, x29, #0x18
    99c4:	mov	x1, x21
    99c8:	bl	9fd8 <_ZN9__gnu_cxx5__ops10_Iter_predIZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3$_1EclIPK9ExtensionEEbT_>
    99cc:	tbnz	w0, #0, 9a44 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x108>
    99d0:	sub	x23, x23, #0x1
    99d4:	cmp	x23, #0x1
    99d8:	add	x20, x20, #0x80
    99dc:	b.hi	9984 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x48>  // b.pmore
    99e0:	sub	x8, x22, x20
    99e4:	add	x8, x8, #0x340
    99e8:	asr	x8, x8, #5
    99ec:	cmp	x8, #0x3
    99f0:	b.eq	9a60 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x124>  // b.none
    99f4:	cmp	x8, #0x2
    99f8:	b.eq	9a74 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x138>  // b.none
    99fc:	cmp	x8, #0x1
    9a00:	b.eq	9a88 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x14c>  // b.none
    9a04:	b	9a98 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x15c>
    9a08:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9a0c:	add	x1, x1, #0x0
    9a10:	b	9aa0 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x164>
    9a14:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9a18:	add	x1, x1, #0x0
    9a1c:	b	9aa0 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x164>
    9a20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9a24:	add	x1, x1, #0x0
    9a28:	b	9aa0 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x164>
    9a2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9a30:	add	x1, x1, #0x0
    9a34:	b	9aa0 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x164>
    9a38:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9a3c:	add	x1, x1, #0x0
    9a40:	b	9aa0 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x164>
    9a44:	mov	x20, x21
    9a48:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9a4c:	add	x8, x8, #0x0
    9a50:	cmp	x20, x8
    9a54:	b.eq	9a98 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x15c>  // b.none
    9a58:	ldr	x1, [x20]
    9a5c:	b	9aa0 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x164>
    9a60:	add	x0, x29, #0x18
    9a64:	mov	x1, x20
    9a68:	bl	9fd8 <_ZN9__gnu_cxx5__ops10_Iter_predIZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3$_1EclIPK9ExtensionEEbT_>
    9a6c:	tbnz	w0, #0, 9a48 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10c>
    9a70:	add	x20, x20, #0x20
    9a74:	add	x0, x29, #0x18
    9a78:	mov	x1, x20
    9a7c:	bl	9fd8 <_ZN9__gnu_cxx5__ops10_Iter_predIZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3$_1EclIPK9ExtensionEEbT_>
    9a80:	tbnz	w0, #0, 9a48 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10c>
    9a84:	add	x20, x20, #0x20
    9a88:	add	x0, x29, #0x18
    9a8c:	mov	x1, x20
    9a90:	bl	9fd8 <_ZN9__gnu_cxx5__ops10_Iter_predIZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3$_1EclIPK9ExtensionEEbT_>
    9a94:	tbnz	w0, #0, 9a48 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10c>
    9a98:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9a9c:	add	x1, x1, #0x0
    9aa0:	mov	x0, x19
    9aa4:	ldp	x20, x19, [sp, #48]
    9aa8:	ldp	x22, x21, [sp, #32]
    9aac:	ldr	x23, [sp, #16]
    9ab0:	ldp	x29, x30, [sp], #64
    9ab4:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>

0000000000009ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE>:
    9ab8:	sub	sp, sp, #0x70
    9abc:	stp	x29, x30, [sp, #16]
    9ac0:	stp	x28, x27, [sp, #32]
    9ac4:	stp	x26, x25, [sp, #48]
    9ac8:	stp	x24, x23, [sp, #64]
    9acc:	stp	x22, x21, [sp, #80]
    9ad0:	stp	x20, x19, [sp, #96]
    9ad4:	add	x29, sp, #0x10
    9ad8:	mov	x21, x0
    9adc:	ldr	x0, [x0, #8]
    9ae0:	and	w28, w1, #0xffff
    9ae4:	mov	x20, x3
    9ae8:	mov	x19, x2
    9aec:	ldr	x8, [x0]
    9af0:	mov	w22, w1
    9af4:	ubfx	w27, w28, #7, #4
    9af8:	ubfx	w23, w28, #11, #3
    9afc:	ldr	x8, [x8, #48]
    9b00:	blr	x8
    9b04:	mov	x1, x0
    9b08:	mov	x0, x23
    9b0c:	mov	w2, wzr
    9b10:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    9b14:	ldr	x8, [x21, #8]
    9b18:	mov	x23, x0
    9b1c:	mov	x0, x8
    9b20:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9b24:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9b28:	ldr	x8, [x21, #8]
    9b2c:	mov	x24, x0
    9b30:	ldr	x9, [x8]
    9b34:	mov	x0, x8
    9b38:	ldr	x9, [x9, #48]
    9b3c:	blr	x9
    9b40:	mov	x25, x0
    9b44:	mov	w0, #0x70                  	// #112
    9b48:	bl	0 <_Znwm>
    9b4c:	mov	x8, x0
    9b50:	adrp	x26, 0 <LLVMInitializeAArch64AsmParser>
    9b54:	add	x26, x26, #0x0
    9b58:	strb	wzr, [x8, #32]!
    9b5c:	str	x26, [x0]
    9b60:	str	wzr, [x0, #48]
    9b64:	str	x25, [x0, #104]
    9b68:	stp	x24, x23, [x0, #64]
    9b6c:	str	x20, [x0, #56]
    9b70:	stp	x8, xzr, [x0, #16]
    9b74:	str	x0, [sp, #8]
    9b78:	add	x1, sp, #0x8
    9b7c:	mov	x0, x19
    9b80:	bl	0 <LLVMInitializeAArch64AsmParser>
    9b84:	ldr	x0, [sp, #8]
    9b88:	cbz	x0, 9b98 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0xe0>
    9b8c:	ldr	x8, [x0]
    9b90:	ldr	x8, [x8, #8]
    9b94:	blr	x8
    9b98:	ldr	x0, [x21, #8]
    9b9c:	and	w22, w22, #0x7
    9ba0:	ubfx	w25, w28, #3, #4
    9ba4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9ba8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9bac:	ldr	x8, [x21, #8]
    9bb0:	mov	x23, x0
    9bb4:	ldr	x9, [x8]
    9bb8:	mov	x0, x8
    9bbc:	ldr	x9, [x9, #48]
    9bc0:	blr	x9
    9bc4:	mov	x24, x0
    9bc8:	mov	w0, #0x70                  	// #112
    9bcc:	bl	0 <_Znwm>
    9bd0:	mov	x8, x0
    9bd4:	mov	w28, #0x8                   	// #8
    9bd8:	strb	wzr, [x8, #32]!
    9bdc:	str	x26, [x0]
    9be0:	str	w28, [x0, #48]
    9be4:	str	x24, [x0, #104]
    9be8:	str	w27, [x0, #72]
    9bec:	stp	x20, x23, [x0, #56]
    9bf0:	stp	x8, xzr, [x0, #16]
    9bf4:	str	x0, [sp, #8]
    9bf8:	add	x1, sp, #0x8
    9bfc:	mov	x0, x19
    9c00:	bl	0 <LLVMInitializeAArch64AsmParser>
    9c04:	ldr	x0, [sp, #8]
    9c08:	cbz	x0, 9c18 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x160>
    9c0c:	ldr	x8, [x0]
    9c10:	ldr	x8, [x8, #8]
    9c14:	blr	x8
    9c18:	ldr	x0, [x21, #8]
    9c1c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9c20:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9c24:	ldr	x8, [x21, #8]
    9c28:	mov	x23, x0
    9c2c:	ldr	x9, [x8]
    9c30:	mov	x0, x8
    9c34:	ldr	x9, [x9, #48]
    9c38:	blr	x9
    9c3c:	mov	x24, x0
    9c40:	mov	w0, #0x70                  	// #112
    9c44:	bl	0 <_Znwm>
    9c48:	mov	x8, x0
    9c4c:	strb	wzr, [x8, #32]!
    9c50:	str	x26, [x0]
    9c54:	str	w28, [x0, #48]
    9c58:	str	x24, [x0, #104]
    9c5c:	str	w25, [x0, #72]
    9c60:	stp	x20, x23, [x0, #56]
    9c64:	stp	x8, xzr, [x0, #16]
    9c68:	str	x0, [sp, #8]
    9c6c:	add	x1, sp, #0x8
    9c70:	mov	x0, x19
    9c74:	bl	0 <LLVMInitializeAArch64AsmParser>
    9c78:	ldr	x0, [sp, #8]
    9c7c:	cbz	x0, 9c8c <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x1d4>
    9c80:	ldr	x8, [x0]
    9c84:	ldr	x8, [x8, #8]
    9c88:	blr	x8
    9c8c:	ldr	x0, [x21, #8]
    9c90:	ldr	x8, [x0]
    9c94:	ldr	x8, [x8, #48]
    9c98:	blr	x8
    9c9c:	mov	x1, x0
    9ca0:	mov	x0, x22
    9ca4:	mov	w2, wzr
    9ca8:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    9cac:	ldr	x8, [x21, #8]
    9cb0:	mov	x22, x0
    9cb4:	mov	x0, x8
    9cb8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9cbc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9cc0:	ldr	x8, [x21, #8]
    9cc4:	mov	x21, x0
    9cc8:	ldr	x9, [x8]
    9ccc:	mov	x0, x8
    9cd0:	ldr	x9, [x9, #48]
    9cd4:	blr	x9
    9cd8:	mov	x23, x0
    9cdc:	mov	w0, #0x70                  	// #112
    9ce0:	bl	0 <_Znwm>
    9ce4:	mov	x8, x0
    9ce8:	strb	wzr, [x8, #32]!
    9cec:	str	x26, [x0]
    9cf0:	str	wzr, [x0, #48]
    9cf4:	str	x23, [x0, #104]
    9cf8:	stp	x21, x22, [x0, #64]
    9cfc:	str	x20, [x0, #56]
    9d00:	stp	x8, xzr, [x0, #16]
    9d04:	str	x0, [sp, #8]
    9d08:	add	x1, sp, #0x8
    9d0c:	mov	x0, x19
    9d10:	bl	0 <LLVMInitializeAArch64AsmParser>
    9d14:	ldr	x0, [sp, #8]
    9d18:	cbz	x0, 9d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x270>
    9d1c:	ldr	x8, [x0]
    9d20:	ldr	x8, [x8, #8]
    9d24:	blr	x8
    9d28:	ldp	x20, x19, [sp, #96]
    9d2c:	ldp	x22, x21, [sp, #80]
    9d30:	ldp	x24, x23, [sp, #64]
    9d34:	ldp	x26, x25, [sp, #48]
    9d38:	ldp	x28, x27, [sp, #32]
    9d3c:	ldp	x29, x30, [sp, #16]
    9d40:	add	sp, sp, #0x70
    9d44:	ret

0000000000009d48 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    9d48:	sub	sp, sp, #0x90
    9d4c:	stp	x29, x30, [sp, #48]
    9d50:	stp	x28, x27, [sp, #64]
    9d54:	stp	x26, x25, [sp, #80]
    9d58:	stp	x24, x23, [sp, #96]
    9d5c:	stp	x22, x21, [sp, #112]
    9d60:	stp	x20, x19, [sp, #128]
    9d64:	add	x29, sp, #0x30
    9d68:	mov	x20, x0
    9d6c:	ldr	x0, [x0, #8]
    9d70:	mov	x19, x1
    9d74:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9d78:	ldr	w8, [x0]
    9d7c:	cmp	w8, #0x2
    9d80:	b.ne	9db0 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x68>  // b.any
    9d84:	ldr	x0, [x20, #8]
    9d88:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9d8c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9d90:	mov	x21, x0
    9d94:	sub	x1, x29, #0x14
    9d98:	sub	x2, x29, #0x10
    9d9c:	mov	w3, #0x1                   	// #1
    9da0:	mov	x0, x20
    9da4:	stp	xzr, xzr, [x29, #-16]
    9da8:	bl	952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    9dac:	cbz	w0, 9e8c <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x144>
    9db0:	ldr	x0, [x20, #8]
    9db4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9db8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9dbc:	mov	x22, x0
    9dc0:	add	x1, sp, #0x10
    9dc4:	mov	x0, x20
    9dc8:	bl	6118 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    9dcc:	mov	w21, w0
    9dd0:	cbnz	w0, 9e64 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x11c>
    9dd4:	ldr	x0, [x20, #8]
    9dd8:	ldr	w24, [sp, #16]
    9ddc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9de0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9de4:	ldr	x8, [x20, #8]
    9de8:	mov	x20, x0
    9dec:	ldr	x9, [x8]
    9df0:	mov	x0, x8
    9df4:	ldr	x9, [x9, #48]
    9df8:	blr	x9
    9dfc:	mov	x23, x0
    9e00:	mov	w0, #0x70                  	// #112
    9e04:	bl	0 <_Znwm>
    9e08:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9e0c:	mov	x8, x0
    9e10:	add	x9, x9, #0x0
    9e14:	strb	wzr, [x8, #32]!
    9e18:	str	x9, [x0]
    9e1c:	mov	w9, #0x3                   	// #3
    9e20:	str	w9, [x0, #48]
    9e24:	str	x23, [x0, #104]
    9e28:	str	w24, [x0, #72]
    9e2c:	stur	xzr, [x0, #84]
    9e30:	stur	xzr, [x0, #76]
    9e34:	stur	xzr, [x0, #89]
    9e38:	stp	x22, x20, [x0, #56]
    9e3c:	stp	x8, xzr, [x0, #16]
    9e40:	stur	x0, [x29, #-16]
    9e44:	sub	x1, x29, #0x10
    9e48:	mov	x0, x19
    9e4c:	bl	0 <LLVMInitializeAArch64AsmParser>
    9e50:	ldur	x0, [x29, #-16]
    9e54:	cbz	x0, 9e64 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x11c>
    9e58:	ldr	x8, [x0]
    9e5c:	ldr	x8, [x8, #8]
    9e60:	blr	x8
    9e64:	cmp	w21, #0x0
    9e68:	cset	w0, ne  // ne = any
    9e6c:	ldp	x20, x19, [sp, #128]
    9e70:	ldp	x22, x21, [sp, #112]
    9e74:	ldp	x24, x23, [sp, #96]
    9e78:	ldp	x26, x25, [sp, #80]
    9e7c:	ldp	x28, x27, [sp, #64]
    9e80:	ldp	x29, x30, [sp, #48]
    9e84:	add	sp, sp, #0x90
    9e88:	ret
    9e8c:	ldp	x23, x22, [x29, #-16]
    9e90:	add	x8, sp, #0x10
    9e94:	mov	w2, #0x1                   	// #1
    9e98:	mov	w27, #0x1                   	// #1
    9e9c:	mov	x0, x23
    9ea0:	mov	x1, x22
    9ea4:	bl	9654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    9ea8:	ldrb	w8, [sp, #24]
    9eac:	cbz	w8, 9db0 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x68>
    9eb0:	ldr	x0, [x20, #8]
    9eb4:	ldr	w28, [sp, #20]
    9eb8:	ldur	w26, [x29, #-20]
    9ebc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9ec0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9ec4:	ldr	x8, [x20, #8]
    9ec8:	mov	x24, x0
    9ecc:	ldr	x9, [x8]
    9ed0:	mov	x0, x8
    9ed4:	ldr	x9, [x9, #48]
    9ed8:	blr	x9
    9edc:	mov	x25, x0
    9ee0:	mov	w0, #0x70                  	// #112
    9ee4:	bl	0 <_Znwm>
    9ee8:	mov	x8, x0
    9eec:	mov	w9, #0x3                   	// #3
    9ef0:	strb	wzr, [x8, #32]!
    9ef4:	str	w9, [x0, #48]
    9ef8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9efc:	add	x9, x9, #0x0
    9f00:	str	x9, [x0]
    9f04:	str	x25, [x0, #104]
    9f08:	stp	w26, w27, [x0, #72]
    9f0c:	stur	xzr, [x0, #84]
    9f10:	stur	xzr, [x0, #89]
    9f14:	stp	x21, x24, [x0, #56]
    9f18:	str	w28, [x0, #80]
    9f1c:	stp	x8, xzr, [x0, #16]
    9f20:	str	x0, [sp, #8]
    9f24:	add	x1, sp, #0x8
    9f28:	mov	x0, x19
    9f2c:	bl	0 <LLVMInitializeAArch64AsmParser>
    9f30:	ldr	x0, [sp, #8]
    9f34:	cbz	x0, 9f44 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1fc>
    9f38:	ldr	x8, [x0]
    9f3c:	ldr	x8, [x8, #8]
    9f40:	blr	x8
    9f44:	cbz	x22, 9fbc <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x274>
    9f48:	ldr	x0, [x20, #8]
    9f4c:	ldr	x8, [x0]
    9f50:	ldr	x8, [x8, #48]
    9f54:	blr	x8
    9f58:	mov	x24, x0
    9f5c:	mov	w0, #0x70                  	// #112
    9f60:	bl	0 <_Znwm>
    9f64:	mov	x8, x0
    9f68:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    9f6c:	mov	w9, #0x6                   	// #6
    9f70:	strb	wzr, [x8, #32]!
    9f74:	add	x10, x10, #0x0
    9f78:	str	x10, [x0]
    9f7c:	str	w9, [x0, #48]
    9f80:	str	x24, [x0, #104]
    9f84:	stp	x21, x23, [x0, #64]
    9f88:	str	w22, [x0, #80]
    9f8c:	strb	wzr, [x0, #84]
    9f90:	str	x21, [x0, #56]
    9f94:	stp	x8, xzr, [x0, #16]
    9f98:	str	x0, [sp, #8]
    9f9c:	add	x1, sp, #0x8
    9fa0:	mov	x0, x19
    9fa4:	bl	0 <LLVMInitializeAArch64AsmParser>
    9fa8:	ldr	x0, [sp, #8]
    9fac:	cbz	x0, 9fbc <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x274>
    9fb0:	ldr	x8, [x0]
    9fb4:	ldr	x8, [x8, #8]
    9fb8:	blr	x8
    9fbc:	mov	x0, x20
    9fc0:	mov	x1, x19
    9fc4:	bl	a8dc <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    9fc8:	cmp	w0, #0x2
    9fcc:	b.eq	9db0 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x68>  // b.none
    9fd0:	mov	w0, wzr
    9fd4:	b	9e6c <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x124>

0000000000009fd8 <_ZN9__gnu_cxx5__ops10_Iter_predIZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3$_1EclIPK9ExtensionEEbT_>:
    9fd8:	sub	sp, sp, #0x40
    9fdc:	ldr	x9, [x0]
    9fe0:	mov	x8, xzr
    9fe4:	ldr	x10, [x9, #16]
    9fe8:	ldr	q0, [x9]
    9fec:	add	x9, x1, #0x8
    9ff0:	str	x10, [sp, #48]
    9ff4:	add	x10, sp, #0x20
    9ff8:	str	q0, [sp, #32]
    9ffc:	ldr	x11, [x9, x8]
    a000:	ldr	x12, [x10, x8]
    a004:	and	x11, x12, x11
    a008:	str	x11, [x10, x8]
    a00c:	add	x8, x8, #0x8
    a010:	cmp	x8, #0x18
    a014:	b.ne	9ffc <_ZN9__gnu_cxx5__ops10_Iter_predIZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3$_1EclIPK9ExtensionEEbT_+0x24>  // b.any
    a018:	ldp	x8, x9, [sp, #32]
    a01c:	ldr	x10, [sp, #48]
    a020:	orr	x8, x8, x9
    a024:	orr	x8, x8, x10
    a028:	cmp	x8, #0x0
    a02c:	cset	w0, ne  // ne = any
    a030:	add	sp, sp, #0x40
    a034:	ret

000000000000a038 <_ZN12_GLOBAL__N_114AArch64OperandD0Ev>:
    a038:	stp	x29, x30, [sp, #-32]!
    a03c:	str	x19, [sp, #16]
    a040:	mov	x29, sp
    a044:	adrp	x8, 0 <_ZTVN4llvm18MCParsedAsmOperandE>
    a048:	mov	x19, x0
    a04c:	ldr	x0, [x0, #16]
    a050:	ldr	x8, [x8]
    a054:	add	x9, x19, #0x20
    a058:	cmp	x0, x9
    a05c:	add	x8, x8, #0x10
    a060:	str	x8, [x19]
    a064:	b.eq	a06c <_ZN12_GLOBAL__N_114AArch64OperandD0Ev+0x34>  // b.none
    a068:	bl	0 <_ZdlPv>
    a06c:	mov	x0, x19
    a070:	ldr	x19, [sp, #16]
    a074:	ldp	x29, x30, [sp], #32
    a078:	b	0 <_ZdlPv>

000000000000a07c <_ZNK12_GLOBAL__N_114AArch64Operand7isTokenEv>:
    a07c:	ldr	w8, [x0, #48]
    a080:	cmp	w8, #0x6
    a084:	cset	w0, eq  // eq = none
    a088:	ret

000000000000a08c <_ZNK12_GLOBAL__N_114AArch64Operand5isImmEv>:
    a08c:	ldr	w8, [x0, #48]
    a090:	cmp	w8, #0x0
    a094:	cset	w0, eq  // eq = none
    a098:	ret

000000000000a09c <_ZNK12_GLOBAL__N_114AArch64Operand5isRegEv>:
    a09c:	ldr	w8, [x0, #48]
    a0a0:	cmp	w8, #0x3
    a0a4:	cset	w0, eq  // eq = none
    a0a8:	ret

000000000000a0ac <_ZNK12_GLOBAL__N_114AArch64Operand6getRegEv>:
    a0ac:	stp	x29, x30, [sp, #-16]!
    a0b0:	mov	x29, sp
    a0b4:	ldr	w8, [x0, #48]
    a0b8:	cmp	w8, #0x3
    a0bc:	b.ne	a0cc <_ZNK12_GLOBAL__N_114AArch64Operand6getRegEv+0x20>  // b.any
    a0c0:	ldr	w0, [x0, #72]
    a0c4:	ldp	x29, x30, [sp], #16
    a0c8:	ret
    a0cc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a0d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a0d4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a0d8:	add	x0, x0, #0x0
    a0dc:	add	x1, x1, #0x0
    a0e0:	add	x3, x3, #0x0
    a0e4:	mov	w2, #0x21c                 	// #540
    a0e8:	bl	0 <__assert_fail>

000000000000a0ec <_ZNK12_GLOBAL__N_114AArch64Operand5isMemEv>:
    a0ec:	mov	w0, wzr
    a0f0:	ret

000000000000a0f4 <_ZNK12_GLOBAL__N_114AArch64Operand11getStartLocEv>:
    a0f4:	ldr	x0, [x0, #56]
    a0f8:	ret

000000000000a0fc <_ZNK12_GLOBAL__N_114AArch64Operand9getEndLocEv>:
    a0fc:	ldr	x0, [x0, #64]
    a100:	ret

000000000000a104 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE>:
    a104:	sub	sp, sp, #0x60
    a108:	stp	x29, x30, [sp, #48]
    a10c:	stp	x22, x21, [sp, #64]
    a110:	stp	x20, x19, [sp, #80]
    a114:	add	x29, sp, #0x30
    a118:	ldr	w8, [x0, #48]
    a11c:	cmp	w8, #0xe
    a120:	b.hi	a5d4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x4d0>  // b.pmore
    a124:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    a128:	add	x9, x9, #0x0
    a12c:	adr	x10, a144 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x40>
    a130:	ldrb	w11, [x9, x8]
    a134:	add	x10, x10, x11, lsl #2
    a138:	mov	x20, x0
    a13c:	mov	x19, x1
    a140:	br	x10
    a144:	ldr	x1, [x20, #72]
    a148:	ldr	w2, [x20, #80]
    a14c:	b	a44c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x348>
    a150:	ldr	w21, [x20, #80]
    a154:	cbz	w21, a5e8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x4e4>
    a158:	ldr	x20, [x20, #72]
    a15c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a160:	add	x1, x1, #0x0
    a164:	mov	w2, #0x9                   	// #9
    a168:	b	a184 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x80>
    a16c:	ldr	w21, [x20, #80]
    a170:	cbz	w21, a628 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x524>
    a174:	ldr	x20, [x20, #72]
    a178:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a17c:	add	x1, x1, #0x0
    a180:	mov	w2, #0x7                   	// #7
    a184:	mov	x0, x19
    a188:	bl	0 <LLVMInitializeAArch64AsmParser>
    a18c:	mov	x1, x20
    a190:	mov	x2, x21
    a194:	bl	0 <LLVMInitializeAArch64AsmParser>
    a198:	b	a650 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x54c>
    a19c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a1a0:	add	x1, x1, #0x0
    a1a4:	mov	w2, #0x1                   	// #1
    a1a8:	mov	x0, x19
    a1ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    a1b0:	ldr	w8, [x20, #48]
    a1b4:	cmp	w8, #0x3
    a1b8:	b.eq	a4dc <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3d8>  // b.none
    a1bc:	cmp	w8, #0xa
    a1c0:	b.ne	a688 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x584>  // b.any
    a1c4:	add	x8, x20, #0x48
    a1c8:	b	a4e0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3dc>
    a1cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a1d0:	add	x1, x1, #0x0
    a1d4:	mov	w2, #0xa                   	// #10
    a1d8:	mov	x0, x19
    a1dc:	bl	0 <LLVMInitializeAArch64AsmParser>
    a1e0:	ldr	w8, [x20, #48]
    a1e4:	cmp	w8, #0x2
    a1e8:	b.ne	a6a0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x59c>  // b.any
    a1ec:	ldrsw	x1, [x20, #72]
    a1f0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    a1f4:	b	a650 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x54c>
    a1f8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a1fc:	add	x1, x1, #0x0
    a200:	mov	w2, #0x9                   	// #9
    a204:	mov	x0, x19
    a208:	bl	0 <LLVMInitializeAArch64AsmParser>
    a20c:	ldr	w8, [x20, #48]
    a210:	cmp	w8, #0x7
    a214:	b.ne	a6c0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x5bc>  // b.any
    a218:	ldr	x1, [x20, #72]
    a21c:	ldr	w2, [x20, #80]
    a220:	bl	0 <LLVMInitializeAArch64AsmParser>
    a224:	ldp	x9, x8, [x0, #16]
    a228:	cmp	x8, x9
    a22c:	b.cs	a4d4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3d0>  // b.hs, b.nlast
    a230:	add	x9, x8, #0x1
    a234:	mov	w10, #0x3e                  	// #62
    a238:	str	x9, [x0, #24]
    a23c:	b	a56c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x468>
    a240:	ldr	x0, [x20, #72]
    a244:	mov	x1, x19
    a248:	ldp	x20, x19, [sp, #80]
    a24c:	ldp	x22, x21, [sp, #64]
    a250:	ldp	x29, x30, [sp, #48]
    a254:	mov	x2, xzr
    a258:	mov	w3, wzr
    a25c:	add	sp, sp, #0x60
    a260:	b	0 <_ZNK4llvm6MCExpr5printERNS_11raw_ostreamEPKNS_9MCAsmInfoEb>
    a264:	ldr	w21, [x20, #80]
    a268:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a26c:	add	x1, x1, #0x0
    a270:	mov	w2, #0xc                   	// #12
    a274:	mov	x0, x19
    a278:	bl	0 <LLVMInitializeAArch64AsmParser>
    a27c:	ldr	w8, [x20, #48]
    a280:	cmp	w8, #0x1
    a284:	b.ne	a6e0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x5dc>  // b.any
    a288:	ldr	x0, [x20, #72]
    a28c:	mov	x1, x19
    a290:	mov	x2, xzr
    a294:	mov	w3, wzr
    a298:	bl	0 <_ZNK4llvm6MCExpr5printERNS_11raw_ostreamEPKNS_9MCAsmInfoEb>
    a29c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a2a0:	add	x1, x1, #0x0
    a2a4:	mov	w2, #0x7                   	// #7
    a2a8:	mov	x0, x19
    a2ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    a2b0:	and	x1, x21, #0x3f
    a2b4:	b	a64c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x548>
    a2b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a2bc:	add	x1, x1, #0x0
    a2c0:	mov	w2, #0xd                   	// #13
    a2c4:	mov	x0, x19
    a2c8:	bl	0 <LLVMInitializeAArch64AsmParser>
    a2cc:	ldr	w8, [x20, #48]
    a2d0:	cmp	w8, #0x5
    a2d4:	b.ne	a700 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x5fc>  // b.any
    a2d8:	ldr	w1, [x20, #72]
    a2dc:	b	a64c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x548>
    a2e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a2e4:	add	x1, x1, #0x0
    a2e8:	mov	w2, #0xa                   	// #10
    a2ec:	mov	x0, x19
    a2f0:	bl	0 <LLVMInitializeAArch64AsmParser>
    a2f4:	ldr	x8, [x20]
    a2f8:	mov	x21, x0
    a2fc:	mov	x0, x20
    a300:	ldr	x8, [x8, #56]
    a304:	blr	x8
    a308:	mov	w1, w0
    a30c:	mov	x0, x21
    a310:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    a314:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a318:	add	x1, x1, #0x0
    a31c:	mov	w2, #0x1                   	// #1
    a320:	bl	0 <LLVMInitializeAArch64AsmParser>
    a324:	ldr	w8, [x20, #48]
    a328:	cmp	w8, #0x3
    a32c:	b.eq	a590 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x48c>  // b.none
    a330:	cmp	w8, #0xa
    a334:	b.ne	a670 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x56c>  // b.any
    a338:	add	x8, x20, #0x4c
    a33c:	b	a594 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x490>
    a340:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a344:	add	x1, x1, #0x0
    a348:	mov	w2, #0x7                   	// #7
    a34c:	mov	x0, x19
    a350:	bl	0 <LLVMInitializeAArch64AsmParser>
    a354:	mov	x21, x0
    a358:	mov	x8, sp
    a35c:	mov	x0, x20
    a360:	mov	x22, sp
    a364:	bl	a7b8 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv>
    a368:	sub	x8, x29, #0x10
    a36c:	mov	x0, sp
    a370:	bl	0 <LLVMInitializeAArch64AsmParser>
    a374:	sub	x0, x29, #0x10
    a378:	bl	0 <LLVMInitializeAArch64AsmParser>
    a37c:	mov	x1, x0
    a380:	mov	x0, x21
    a384:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    a388:	ldur	w8, [x29, #-8]
    a38c:	cmp	w8, #0x41
    a390:	b.cc	a3a0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x29c>  // b.lo, b.ul, b.last
    a394:	ldur	x0, [x29, #-16]
    a398:	cbz	x0, a3a0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x29c>
    a39c:	bl	0 <_ZdaPv>
    a3a0:	add	x0, x22, #0x8
    a3a4:	bl	0 <LLVMInitializeAArch64AsmParser>
    a3a8:	ldr	w8, [x20, #48]
    a3ac:	cmp	w8, #0xb
    a3b0:	b.ne	a720 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x61c>  // b.any
    a3b4:	ldrb	w8, [x20, #80]
    a3b8:	cbnz	w8, a3d0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x2cc>
    a3bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a3c0:	add	x1, x1, #0x0
    a3c4:	mov	w2, #0xa                   	// #10
    a3c8:	mov	x0, x19
    a3cc:	bl	0 <LLVMInitializeAArch64AsmParser>
    a3d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a3d4:	add	x1, x1, #0x0
    a3d8:	mov	w2, #0x1                   	// #1
    a3dc:	mov	x0, x19
    a3e0:	bl	0 <LLVMInitializeAArch64AsmParser>
    a3e4:	b	a5d4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x4d0>
    a3e8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a3ec:	add	x1, x1, #0x0
    a3f0:	mov	w2, #0xc                   	// #12
    a3f4:	mov	x0, x19
    a3f8:	bl	0 <LLVMInitializeAArch64AsmParser>
    a3fc:	ldr	w8, [x20, #48]
    a400:	cmp	w8, #0x4
    a404:	b.ne	a740 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x63c>  // b.any
    a408:	ldr	w21, [x20, #76]
    a40c:	cbz	w21, a440 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x33c>
    a410:	ldr	w22, [x20, #72]
    a414:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    a418:	add	x20, x20, #0x0
    a41c:	mov	w1, w22
    a420:	mov	x0, x19
    a424:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    a428:	mov	w2, #0x1                   	// #1
    a42c:	mov	x1, x20
    a430:	bl	0 <LLVMInitializeAArch64AsmParser>
    a434:	subs	x21, x21, #0x1
    a438:	add	w22, w22, #0x1
    a43c:	b.ne	a41c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x318>  // b.any
    a440:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a444:	add	x1, x1, #0x0
    a448:	mov	w2, #0x1                   	// #1
    a44c:	mov	x0, x19
    a450:	b	a65c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x558>
    a454:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
    a458:	add	x21, x21, #0x0
    a45c:	mov	w2, #0x1                   	// #1
    a460:	mov	x0, x19
    a464:	mov	x1, x21
    a468:	bl	0 <LLVMInitializeAArch64AsmParser>
    a46c:	mov	x19, x0
    a470:	mov	x0, x20
    a474:	bl	a848 <_ZNK12_GLOBAL__N_114AArch64Operand8getTokenEv>
    a478:	mov	x2, x0
    a47c:	mov	x3, x1
    a480:	mov	x0, x19
    a484:	mov	x1, x2
    a488:	mov	x2, x3
    a48c:	bl	0 <LLVMInitializeAArch64AsmParser>
    a490:	mov	w2, #0x1                   	// #1
    a494:	mov	x1, x21
    a498:	b	a65c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x558>
    a49c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a4a0:	add	x1, x1, #0x0
    a4a4:	mov	w2, #0x1                   	// #1
    a4a8:	mov	x0, x19
    a4ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    a4b0:	ldr	w8, [x20, #48]
    a4b4:	cmp	w8, #0x8
    a4b8:	b.ne	a760 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x65c>  // b.any
    a4bc:	ldr	w1, [x20, #72]
    a4c0:	ldp	x20, x19, [sp, #80]
    a4c4:	ldp	x22, x21, [sp, #64]
    a4c8:	ldp	x29, x30, [sp, #48]
    a4cc:	add	sp, sp, #0x60
    a4d0:	b	0 <_ZN4llvm11raw_ostreamlsEm>
    a4d4:	mov	w1, #0x3e                  	// #62
    a4d8:	b	a57c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x478>
    a4dc:	add	x8, x20, #0x58
    a4e0:	ldrsw	x8, [x8]
    a4e4:	cmp	w8, #0xd
    a4e8:	b.cs	a780 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x67c>  // b.hs, b.nlast
    a4ec:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    a4f0:	add	x9, x9, #0x0
    a4f4:	ldr	x1, [x9, x8, lsl #3]
    a4f8:	bl	0 <LLVMInitializeAArch64AsmParser>
    a4fc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a500:	add	x1, x1, #0x0
    a504:	mov	w2, #0x2                   	// #2
    a508:	bl	0 <LLVMInitializeAArch64AsmParser>
    a50c:	ldr	w8, [x20, #48]
    a510:	cmp	w8, #0x3
    a514:	b.eq	a528 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x424>  // b.none
    a518:	cmp	w8, #0xa
    a51c:	b.ne	a670 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x56c>  // b.any
    a520:	add	x8, x20, #0x4c
    a524:	b	a52c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x428>
    a528:	add	x8, x20, #0x5c
    a52c:	ldr	w1, [x8]
    a530:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    a534:	mov	x0, x20
    a538:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
    a53c:	tbnz	w0, #0, a554 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x450>
    a540:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a544:	add	x1, x1, #0x0
    a548:	mov	w2, #0x5                   	// #5
    a54c:	mov	x0, x19
    a550:	bl	0 <LLVMInitializeAArch64AsmParser>
    a554:	ldp	x9, x8, [x19, #16]
    a558:	cmp	x8, x9
    a55c:	b.cs	a574 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x470>  // b.hs, b.nlast
    a560:	add	x9, x8, #0x1
    a564:	mov	w10, #0x3e                  	// #62
    a568:	str	x9, [x19, #24]
    a56c:	strb	w10, [x8]
    a570:	b	a5d4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x4d0>
    a574:	mov	w1, #0x3e                  	// #62
    a578:	mov	x0, x19
    a57c:	ldp	x20, x19, [sp, #80]
    a580:	ldp	x22, x21, [sp, #64]
    a584:	ldp	x29, x30, [sp, #48]
    a588:	add	sp, sp, #0x60
    a58c:	b	0 <_ZN4llvm11raw_ostream5writeEh>
    a590:	add	x8, x20, #0x5c
    a594:	ldr	w8, [x8]
    a598:	cbnz	w8, a5b4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x4b0>
    a59c:	mov	x0, x20
    a5a0:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
    a5a4:	tbz	w0, #0, a5d4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x4d0>
    a5a8:	ldr	w8, [x20, #48]
    a5ac:	cmp	w8, #0xe
    a5b0:	b.eq	a144 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x40>  // b.none
    a5b4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a5b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a5bc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a5c0:	add	x0, x0, #0x0
    a5c4:	add	x1, x1, #0x0
    a5c8:	add	x3, x3, #0x0
    a5cc:	mov	w2, #0x253                 	// #595
    a5d0:	bl	0 <__assert_fail>
    a5d4:	ldp	x20, x19, [sp, #80]
    a5d8:	ldp	x22, x21, [sp, #64]
    a5dc:	ldp	x29, x30, [sp, #48]
    a5e0:	add	sp, sp, #0x60
    a5e4:	ret
    a5e8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a5ec:	add	x1, x1, #0x0
    a5f0:	mov	w2, #0x12                  	// #18
    a5f4:	mov	x0, x19
    a5f8:	bl	0 <LLVMInitializeAArch64AsmParser>
    a5fc:	ldr	w8, [x20, #48]
    a600:	cmp	w8, #0xc
    a604:	b.eq	a648 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x544>  // b.none
    a608:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a60c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a610:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a614:	add	x0, x0, #0x0
    a618:	add	x1, x1, #0x0
    a61c:	add	x3, x3, #0x0
    a620:	mov	w2, #0x212                 	// #530
    a624:	bl	0 <__assert_fail>
    a628:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a62c:	add	x1, x1, #0x0
    a630:	mov	w2, #0x10                  	// #16
    a634:	mov	x0, x19
    a638:	bl	0 <LLVMInitializeAArch64AsmParser>
    a63c:	ldr	w8, [x20, #48]
    a640:	cmp	w8, #0x9
    a644:	b.ne	a798 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x694>  // b.any
    a648:	ldr	w1, [x20, #84]
    a64c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    a650:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a654:	add	x1, x1, #0x0
    a658:	mov	w2, #0x1                   	// #1
    a65c:	ldp	x20, x19, [sp, #80]
    a660:	ldp	x22, x21, [sp, #64]
    a664:	ldp	x29, x30, [sp, #48]
    a668:	add	sp, sp, #0x60
    a66c:	b	0 <LLVMInitializeAArch64AsmParser>
    a670:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a674:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a678:	add	x0, x0, #0x0
    a67c:	add	x1, x1, #0x0
    a680:	mov	w2, #0x269                 	// #617
    a684:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a688:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a68c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a690:	add	x0, x0, #0x0
    a694:	add	x1, x1, #0x0
    a698:	mov	w2, #0x261                 	// #609
    a69c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a6a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a6a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a6a8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a6ac:	add	x0, x0, #0x0
    a6b0:	add	x1, x1, #0x0
    a6b4:	add	x3, x3, #0x0
    a6b8:	mov	w2, #0x203                 	// #515
    a6bc:	bl	0 <__assert_fail>
    a6c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a6c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a6c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a6cc:	add	x0, x0, #0x0
    a6d0:	add	x1, x1, #0x0
    a6d4:	add	x3, x3, #0x0
    a6d8:	mov	w2, #0x235                 	// #565
    a6dc:	bl	0 <__assert_fail>
    a6e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a6e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a6e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a6ec:	add	x0, x0, #0x0
    a6f0:	add	x1, x1, #0x0
    a6f4:	add	x3, x3, #0x0
    a6f8:	mov	w2, #0x1f9                 	// #505
    a6fc:	bl	0 <__assert_fail>
    a700:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a704:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a708:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a70c:	add	x0, x0, #0x0
    a710:	add	x1, x1, #0x0
    a714:	add	x3, x3, #0x0
    a718:	mov	w2, #0x230                 	// #560
    a71c:	bl	0 <__assert_fail>
    a720:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a724:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a728:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a72c:	add	x0, x0, #0x0
    a730:	add	x1, x1, #0x0
    a734:	add	x3, x3, #0x0
    a738:	mov	w2, #0x20d                 	// #525
    a73c:	bl	0 <__assert_fail>
    a740:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a744:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a748:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a74c:	add	x0, x0, #0x0
    a750:	add	x1, x1, #0x0
    a754:	add	x3, x3, #0x0
    a758:	mov	w2, #0x226                 	// #550
    a75c:	bl	0 <__assert_fail>
    a760:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a764:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a768:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a76c:	add	x0, x0, #0x0
    a770:	add	x1, x1, #0x0
    a774:	add	x3, x3, #0x0
    a778:	mov	w2, #0x23a                 	// #570
    a77c:	bl	0 <__assert_fail>
    a780:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a784:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a788:	add	x0, x0, #0x0
    a78c:	add	x1, x1, #0x0
    a790:	mov	w2, #0x36                  	// #54
    a794:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a798:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a79c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a7a0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a7a4:	add	x0, x0, #0x0
    a7a8:	add	x1, x1, #0x0
    a7ac:	add	x3, x3, #0x0
    a7b0:	mov	w2, #0x23f                 	// #575
    a7b4:	bl	0 <__assert_fail>

000000000000a7b8 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv>:
    a7b8:	sub	sp, sp, #0x30
    a7bc:	stp	x29, x30, [sp, #16]
    a7c0:	stp	x20, x19, [sp, #32]
    a7c4:	add	x29, sp, #0x10
    a7c8:	ldr	w9, [x0, #48]
    a7cc:	cmp	w9, #0xb
    a7d0:	b.ne	a828 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv+0x70>  // b.any
    a7d4:	mov	x20, x0
    a7d8:	mov	x19, x8
    a7dc:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    a7e0:	ldr	x8, [x20, #72]
    a7e4:	mov	x1, x0
    a7e8:	mov	w9, #0x40                  	// #64
    a7ec:	add	x0, x19, #0x8
    a7f0:	mov	x2, sp
    a7f4:	str	w9, [sp, #8]
    a7f8:	str	x8, [sp]
    a7fc:	bl	0 <LLVMInitializeAArch64AsmParser>
    a800:	ldr	w8, [sp, #8]
    a804:	cmp	w8, #0x41
    a808:	b.cc	a818 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv+0x60>  // b.lo, b.ul, b.last
    a80c:	ldr	x0, [sp]
    a810:	cbz	x0, a818 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv+0x60>
    a814:	bl	0 <_ZdaPv>
    a818:	ldp	x20, x19, [sp, #32]
    a81c:	ldp	x29, x30, [sp, #16]
    a820:	add	sp, sp, #0x30
    a824:	ret
    a828:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a82c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a830:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a834:	add	x0, x0, #0x0
    a838:	add	x1, x1, #0x0
    a83c:	add	x3, x3, #0x0
    a840:	mov	w2, #0x208                 	// #520
    a844:	bl	0 <__assert_fail>

000000000000a848 <_ZNK12_GLOBAL__N_114AArch64Operand8getTokenEv>:
    a848:	stp	x29, x30, [sp, #-16]!
    a84c:	mov	x29, sp
    a850:	ldr	w8, [x0, #48]
    a854:	cmp	w8, #0x6
    a858:	b.ne	a870 <_ZNK12_GLOBAL__N_114AArch64Operand8getTokenEv+0x28>  // b.any
    a85c:	ldr	x8, [x0, #72]
    a860:	ldr	w1, [x0, #80]
    a864:	mov	x0, x8
    a868:	ldp	x29, x30, [sp], #16
    a86c:	ret
    a870:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a874:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a878:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a87c:	add	x0, x0, #0x0
    a880:	add	x1, x1, #0x0
    a884:	add	x3, x3, #0x0
    a888:	mov	w2, #0x1ea                 	// #490
    a88c:	bl	0 <__assert_fail>

000000000000a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>:
    a890:	stp	x29, x30, [sp, #-16]!
    a894:	mov	x29, sp
    a898:	ldr	w8, [x0, #48]
    a89c:	cmp	w8, #0x3
    a8a0:	b.eq	a8b4 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv+0x24>  // b.none
    a8a4:	cmp	w8, #0xa
    a8a8:	b.ne	a8c4 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv+0x34>  // b.any
    a8ac:	add	x8, x0, #0x50
    a8b0:	b	a8b8 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv+0x28>
    a8b4:	add	x8, x0, #0x60
    a8b8:	ldrb	w0, [x8]
    a8bc:	ldp	x29, x30, [sp], #16
    a8c0:	ret
    a8c4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a8c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a8cc:	add	x0, x0, #0x0
    a8d0:	add	x1, x1, #0x0
    a8d4:	mov	w2, #0x271                 	// #625
    a8d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000a8dc <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    a8dc:	sub	sp, sp, #0x60
    a8e0:	stp	x29, x30, [sp, #32]
    a8e4:	str	x23, [sp, #48]
    a8e8:	stp	x22, x21, [sp, #64]
    a8ec:	stp	x20, x19, [sp, #80]
    a8f0:	add	x29, sp, #0x20
    a8f4:	mov	x21, x0
    a8f8:	ldr	x0, [x0, #8]
    a8fc:	mov	x19, x1
    a900:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    a904:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    a908:	ldr	x8, [x21, #8]
    a90c:	mov	x20, x0
    a910:	mov	w1, #0x13                  	// #19
    a914:	mov	x0, x8
    a918:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    a91c:	tbz	w0, #0, a930 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x54>
    a920:	ldr	x0, [x21, #8]
    a924:	add	x1, x29, #0x18
    a928:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    a92c:	tbz	w0, #0, a94c <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x70>
    a930:	mov	w0, #0x1                   	// #1
    a934:	ldp	x20, x19, [sp, #80]
    a938:	ldp	x22, x21, [sp, #64]
    a93c:	ldr	x23, [sp, #48]
    a940:	ldp	x29, x30, [sp, #32]
    a944:	add	sp, sp, #0x60
    a948:	ret
    a94c:	ldr	x23, [x29, #24]
    a950:	cbz	x23, aa38 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x15c>
    a954:	ldr	w8, [x23]
    a958:	cmp	w8, #0x1
    a95c:	b.ne	aa0c <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x130>  // b.any
    a960:	ldr	x0, [x21, #8]
    a964:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    a968:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    a96c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a970:	mov	x22, x0
    a974:	add	x1, x1, #0x0
    a978:	add	x0, sp, #0x8
    a97c:	bl	0 <LLVMInitializeAArch64AsmParser>
    a980:	ldr	x0, [x21, #8]
    a984:	add	x2, sp, #0x8
    a988:	mov	w1, #0x14                  	// #20
    a98c:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    a990:	tbnz	w0, #0, aa30 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x154>
    a994:	ldr	x0, [x21, #8]
    a998:	ldr	x23, [x23, #16]
    a99c:	ldr	x8, [x0]
    a9a0:	ldr	x8, [x8, #48]
    a9a4:	blr	x8
    a9a8:	mov	x21, x0
    a9ac:	mov	w0, #0x70                  	// #112
    a9b0:	bl	0 <_Znwm>
    a9b4:	mov	x8, x0
    a9b8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    a9bc:	add	x9, x9, #0x0
    a9c0:	mov	w10, #0x5                   	// #5
    a9c4:	strb	wzr, [x8, #32]!
    a9c8:	str	x9, [x0]
    a9cc:	str	w10, [x0, #48]
    a9d0:	str	x21, [x0, #104]
    a9d4:	str	w23, [x0, #72]
    a9d8:	stp	x20, x22, [x0, #56]
    a9dc:	stp	x8, xzr, [x0, #16]
    a9e0:	str	x0, [sp, #8]
    a9e4:	add	x1, sp, #0x8
    a9e8:	mov	x0, x19
    a9ec:	bl	0 <LLVMInitializeAArch64AsmParser>
    a9f0:	ldr	x0, [sp, #8]
    a9f4:	cbz	x0, aa04 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x128>
    a9f8:	ldr	x8, [x0]
    a9fc:	ldr	x8, [x8, #8]
    aa00:	blr	x8
    aa04:	mov	w0, wzr
    aa08:	b	a934 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x58>
    aa0c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    aa10:	add	x1, x1, #0x0
    aa14:	add	x0, sp, #0x8
    aa18:	bl	0 <LLVMInitializeAArch64AsmParser>
    aa1c:	ldr	x0, [x21, #8]
    aa20:	add	x1, sp, #0x8
    aa24:	mov	x2, xzr
    aa28:	mov	x3, xzr
    aa2c:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    aa30:	mov	w0, #0x2                   	// #2
    aa34:	b	a934 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x58>
    aa38:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    aa3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    aa40:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    aa44:	add	x0, x0, #0x0
    aa48:	add	x1, x1, #0x0
    aa4c:	add	x3, x3, #0x0
    aa50:	mov	w2, #0x69                  	// #105
    aa54:	bl	0 <__assert_fail>

000000000000aa58 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>:
    aa58:	sub	sp, sp, #0x80
    aa5c:	stp	x29, x30, [sp, #64]
    aa60:	str	x23, [sp, #80]
    aa64:	stp	x22, x21, [sp, #96]
    aa68:	stp	x20, x19, [sp, #112]
    aa6c:	add	x29, sp, #0x40
    aa70:	ldr	x21, [x0, #8]
    aa74:	mov	x20, x0
    aa78:	mov	x19, x1
    aa7c:	mov	w1, #0xa                   	// #10
    aa80:	mov	x0, x21
    aa84:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    aa88:	tbz	w0, #0, aac0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x68>
    aa8c:	mov	x0, x21
    aa90:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    aa94:	ldr	w8, [x0]
    aa98:	cmp	w8, #0x2
    aa9c:	b.ne	aad0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x78>  // b.any
    aaa0:	mov	x0, x21
    aaa4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    aaa8:	ldr	w9, [x0]
    aaac:	mov	x8, x0
    aab0:	cmp	w9, #0x2
    aab4:	b.ne	ab14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xbc>  // b.any
    aab8:	ldp	x0, x1, [x8, #8]
    aabc:	b	ab1c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xc4>
    aac0:	ldr	x0, [x20, #8]
    aac4:	mov	x1, x19
    aac8:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    aacc:	b	aaf4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9c>
    aad0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    aad4:	add	x1, x1, #0x0
    aad8:	add	x0, sp, #0x20
    aadc:	bl	0 <LLVMInitializeAArch64AsmParser>
    aae0:	ldr	x0, [x20, #8]
    aae4:	add	x1, sp, #0x20
    aae8:	mov	x2, xzr
    aaec:	mov	x3, xzr
    aaf0:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    aaf4:	mov	w21, w0
    aaf8:	and	w0, w21, #0x1
    aafc:	ldp	x20, x19, [sp, #112]
    ab00:	ldp	x22, x21, [sp, #96]
    ab04:	ldr	x23, [sp, #80]
    ab08:	ldp	x29, x30, [sp, #64]
    ab0c:	add	sp, sp, #0x80
    ab10:	ret
    ab14:	mov	x0, x8
    ab18:	bl	0 <LLVMInitializeAArch64AsmParser>
    ab1c:	stp	x0, x1, [sp, #8]
    ab20:	add	x8, sp, #0x20
    ab24:	add	x0, sp, #0x8
    ab28:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    ab2c:	ldr	x8, [sp, #40]
    ab30:	sub	x9, x8, #0x3
    ab34:	cmp	x9, #0xb
    ab38:	b.hi	b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>  // b.pmore
    ab3c:	ldr	x8, [sp, #32]
    ab40:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    ab44:	add	x10, x10, #0x0
    ab48:	adr	x11, ab58 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x100>
    ab4c:	ldrh	w12, [x10, x9, lsl #1]
    ab50:	add	x11, x11, x12, lsl #2
    ab54:	br	x11
    ab58:	ldrh	w9, [x8]
    ab5c:	ldrb	w8, [x8, #2]
    ab60:	mov	w10, #0x6f67                	// #28519
    ab64:	mov	w11, #0x74                  	// #116
    ab68:	eor	w9, w9, w10
    ab6c:	eor	w8, w8, w11
    ab70:	orr	w8, w9, w8
    ab74:	tst	w8, #0xffff
    ab78:	b.ne	b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>  // b.any
    ab7c:	mov	w8, wzr
    ab80:	mov	w9, #0x14                  	// #20
    ab84:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    ab88:	ldr	w8, [x8]
    ab8c:	mov	w9, #0x5f6c                	// #24428
    ab90:	movk	w9, #0x3167, lsl #16
    ab94:	add	w9, w9, #0xca1, lsl #12
    ab98:	cmp	w8, w9
    ab9c:	b.ne	b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>  // b.any
    aba0:	mov	w8, #0x100                 	// #256
    aba4:	mov	w9, #0x21                  	// #33
    aba8:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    abac:	ldr	w10, [x8]
    abb0:	ldrh	w11, [x8, #4]
    abb4:	mov	w9, #0x6261                	// #25185
    abb8:	movk	w9, #0x5f73, lsl #16
    abbc:	mov	w12, #0x3367                	// #13159
    abc0:	eor	w10, w10, w9
    abc4:	eor	w11, w11, w12
    abc8:	orr	w10, w10, w11
    abcc:	cbz	w10, b2c4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x86c>
    abd0:	ldr	w10, [x8]
    abd4:	ldrh	w11, [x8, #4]
    abd8:	mov	w12, #0x3267                	// #12903
    abdc:	eor	w10, w10, w9
    abe0:	eor	w11, w11, w12
    abe4:	orr	w10, w10, w11
    abe8:	cbz	w10, b324 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8cc>
    abec:	ldr	w10, [x8]
    abf0:	ldrh	w11, [x8, #4]
    abf4:	mov	w12, #0x3167                	// #12647
    abf8:	eor	w10, w10, w9
    abfc:	eor	w11, w11, w12
    ac00:	orr	w10, w10, w11
    ac04:	cbz	w10, b37c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x924>
    ac08:	ldr	w10, [x8]
    ac0c:	ldrh	w8, [x8, #4]
    ac10:	mov	w11, #0x3067                	// #12391
    ac14:	eor	w9, w10, w9
    ac18:	eor	w8, w8, w11
    ac1c:	orr	w8, w9, w8
    ac20:	cbnz	w8, b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>
    ac24:	b	b3a4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x94c>
    ac28:	ldr	w10, [x8]
    ac2c:	ldur	w11, [x8, #3]
    ac30:	mov	w9, #0x7270                	// #29296
    ac34:	mov	w12, #0x5f6c                	// #24428
    ac38:	movk	w9, #0x6c65, lsl #16
    ac3c:	movk	w12, #0x3367, lsl #16
    ac40:	eor	w10, w10, w9
    ac44:	eor	w11, w11, w12
    ac48:	orr	w10, w10, w11
    ac4c:	cbz	w10, b2d0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x878>
    ac50:	ldr	w10, [x8]
    ac54:	ldur	w11, [x8, #3]
    ac58:	mov	w12, #0x5f6c                	// #24428
    ac5c:	movk	w12, #0x3267, lsl #16
    ac60:	eor	w10, w10, w9
    ac64:	eor	w11, w11, w12
    ac68:	orr	w10, w10, w11
    ac6c:	cbz	w10, b330 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8d8>
    ac70:	ldr	w10, [x8]
    ac74:	ldur	w11, [x8, #3]
    ac78:	mov	w12, #0x5f6c                	// #24428
    ac7c:	movk	w12, #0x3167, lsl #16
    ac80:	eor	w10, w10, w9
    ac84:	eor	w11, w11, w12
    ac88:	orr	w10, w10, w11
    ac8c:	cbz	w10, b388 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x930>
    ac90:	ldr	w10, [x8]
    ac94:	ldur	w11, [x8, #3]
    ac98:	mov	w12, #0x5f6c                	// #24428
    ac9c:	movk	w12, #0x3067, lsl #16
    aca0:	eor	w9, w10, w9
    aca4:	eor	w10, w11, w12
    aca8:	orr	w9, w9, w10
    acac:	cbz	w9, b3bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x964>
    acb0:	ldr	w9, [x8]
    acb4:	ldur	w8, [x8, #3]
    acb8:	mov	w10, #0x6c74                	// #27764
    acbc:	mov	w11, #0x6564                	// #25956
    acc0:	movk	w10, #0x6473, lsl #16
    acc4:	movk	w11, #0x6373, lsl #16
    acc8:	eor	w9, w9, w10
    accc:	eor	w8, w8, w11
    acd0:	orr	w8, w9, w8
    acd4:	cbnz	w8, b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>
    acd8:	mov	w9, #0x18                  	// #24
    acdc:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    ace0:	ldr	x9, [x8]
    ace4:	mov	x10, #0x6261                	// #25185
    ace8:	movk	x10, #0x5f73, lsl #16
    acec:	movk	x10, #0x3267, lsl #32
    acf0:	movk	x10, #0x735f, lsl #48
    acf4:	cmp	x9, x10
    acf8:	b.eq	b2dc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x884>  // b.none
    acfc:	ldr	x9, [x8]
    ad00:	mov	x10, #0x6261                	// #25185
    ad04:	movk	x10, #0x5f73, lsl #16
    ad08:	movk	x10, #0x3167, lsl #32
    ad0c:	movk	x10, #0x735f, lsl #48
    ad10:	cmp	x9, x10
    ad14:	b.eq	b33c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8e4>  // b.none
    ad18:	ldr	x9, [x8]
    ad1c:	mov	x10, #0x6261                	// #25185
    ad20:	movk	x10, #0x5f73, lsl #16
    ad24:	movk	x10, #0x3067, lsl #32
    ad28:	movk	x10, #0x735f, lsl #48
    ad2c:	cmp	x9, x10
    ad30:	b.eq	b394 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x93c>  // b.none
    ad34:	ldr	x9, [x8]
    ad38:	mov	x10, #0x7074                	// #28788
    ad3c:	movk	x10, #0x6572, lsl #16
    ad40:	movk	x10, #0x5f6c, lsl #32
    ad44:	movk	x10, #0x3267, lsl #48
    ad48:	cmp	x9, x10
    ad4c:	b.eq	b3c8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x970>  // b.none
    ad50:	ldr	x9, [x8]
    ad54:	mov	x10, #0x7074                	// #28788
    ad58:	movk	x10, #0x6572, lsl #16
    ad5c:	movk	x10, #0x5f6c, lsl #32
    ad60:	movk	x10, #0x3167, lsl #48
    ad64:	cmp	x9, x10
    ad68:	b.eq	b3f4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x99c>  // b.none
    ad6c:	ldr	x9, [x8]
    ad70:	mov	x10, #0x7074                	// #28788
    ad74:	movk	x10, #0x6572, lsl #16
    ad78:	movk	x10, #0x5f6c, lsl #32
    ad7c:	movk	x10, #0x3067, lsl #48
    ad80:	cmp	x9, x10
    ad84:	b.eq	b420 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9c8>  // b.none
    ad88:	ldr	x9, [x8]
    ad8c:	mov	x10, #0x6f67                	// #28519
    ad90:	movk	x10, #0x5f74, lsl #16
    ad94:	movk	x10, #0x6f6c, lsl #32
    ad98:	movk	x10, #0x3231, lsl #48
    ad9c:	cmp	x9, x10
    ada0:	b.eq	b438 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e0>  // b.none
    ada4:	ldr	x8, [x8]
    ada8:	mov	x9, #0x6f67                	// #28519
    adac:	movk	x9, #0x7474, lsl #16
    adb0:	movk	x9, #0x7270, lsl #32
    adb4:	movk	x9, #0x6c65, lsl #48
    adb8:	cmp	x8, x9
    adbc:	b.ne	b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>  // b.any
    adc0:	mov	w8, wzr
    adc4:	mov	w9, #0x16                  	// #22
    adc8:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    adcc:	ldr	x9, [x8]
    add0:	ldrb	w10, [x8, #8]
    add4:	mov	x11, #0x6261                	// #25185
    add8:	movk	x11, #0x5f73, lsl #16
    addc:	movk	x11, #0x3267, lsl #32
    ade0:	movk	x11, #0x6e5f, lsl #48
    ade4:	mov	w12, #0x63                  	// #99
    ade8:	eor	x9, x9, x11
    adec:	eor	x10, x10, x12
    adf0:	orr	x9, x9, x10
    adf4:	cbz	x9, b2e8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x890>
    adf8:	ldr	x9, [x8]
    adfc:	ldrb	w10, [x8, #8]
    ae00:	mov	x11, #0x6261                	// #25185
    ae04:	movk	x11, #0x5f73, lsl #16
    ae08:	movk	x11, #0x3167, lsl #32
    ae0c:	movk	x11, #0x6e5f, lsl #48
    ae10:	mov	w12, #0x63                  	// #99
    ae14:	eor	x9, x9, x11
    ae18:	eor	x10, x10, x12
    ae1c:	orr	x9, x9, x10
    ae20:	cbz	x9, b348 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8f0>
    ae24:	ldr	x9, [x8]
    ae28:	ldrb	w10, [x8, #8]
    ae2c:	mov	x11, #0x6261                	// #25185
    ae30:	movk	x11, #0x5f73, lsl #16
    ae34:	movk	x11, #0x3067, lsl #32
    ae38:	movk	x11, #0x6e5f, lsl #48
    ae3c:	mov	w12, #0x63                  	// #99
    ae40:	eor	x9, x9, x11
    ae44:	eor	x10, x10, x12
    ae48:	orr	x9, x9, x10
    ae4c:	cbz	x9, b3a0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x948>
    ae50:	ldr	x10, [x8]
    ae54:	ldrb	w11, [x8, #8]
    ae58:	mov	x9, #0x7464                	// #29796
    ae5c:	movk	x9, #0x7270, lsl #16
    ae60:	movk	x9, #0x6c65, lsl #32
    ae64:	movk	x9, #0x675f, lsl #48
    ae68:	mov	w12, #0x32                  	// #50
    ae6c:	eor	x10, x10, x9
    ae70:	eor	x11, x11, x12
    ae74:	orr	x10, x10, x11
    ae78:	cbz	x10, b3d4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x97c>
    ae7c:	ldr	x10, [x8]
    ae80:	ldrb	w11, [x8, #8]
    ae84:	mov	w12, #0x31                  	// #49
    ae88:	eor	x10, x10, x9
    ae8c:	eor	x11, x11, x12
    ae90:	orr	x10, x10, x11
    ae94:	cbz	x10, b400 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9a8>
    ae98:	ldr	x10, [x8]
    ae9c:	ldrb	w8, [x8, #8]
    aea0:	eor	x9, x10, x9
    aea4:	eor	x8, x8, #0x30
    aea8:	orr	x8, x9, x8
    aeac:	cbnz	x8, b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>
    aeb0:	b	b368 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x910>
    aeb4:	ldr	x9, [x8]
    aeb8:	ldrh	w10, [x8, #8]
    aebc:	mov	x11, #0x7270                	// #29296
    aec0:	movk	x11, #0x6c65, lsl #16
    aec4:	movk	x11, #0x675f, lsl #32
    aec8:	movk	x11, #0x5f32, lsl #48
    aecc:	mov	w12, #0x636e                	// #25454
    aed0:	eor	x9, x9, x11
    aed4:	eor	x10, x10, x12
    aed8:	orr	x9, x9, x10
    aedc:	cbz	x9, b2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x898>
    aee0:	ldr	x9, [x8]
    aee4:	ldrh	w10, [x8, #8]
    aee8:	mov	x11, #0x7270                	// #29296
    aeec:	movk	x11, #0x6c65, lsl #16
    aef0:	movk	x11, #0x675f, lsl #32
    aef4:	movk	x11, #0x5f31, lsl #48
    aef8:	mov	w12, #0x636e                	// #25454
    aefc:	eor	x9, x9, x11
    af00:	eor	x10, x10, x12
    af04:	orr	x9, x9, x10
    af08:	cbz	x9, b350 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8f8>
    af0c:	ldr	x9, [x8]
    af10:	ldrh	w10, [x8, #8]
    af14:	mov	x11, #0x7270                	// #29296
    af18:	movk	x11, #0x6c65, lsl #16
    af1c:	movk	x11, #0x675f, lsl #32
    af20:	movk	x11, #0x5f30, lsl #48
    af24:	mov	w12, #0x636e                	// #25454
    af28:	eor	x9, x9, x11
    af2c:	eor	x10, x10, x12
    af30:	orr	x9, x9, x10
    af34:	cbz	x9, b3ac <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x954>
    af38:	ldr	x9, [x8]
    af3c:	ldrh	w10, [x8, #8]
    af40:	mov	x11, #0x6770                	// #26480
    af44:	movk	x11, #0x685f, lsl #16
    af48:	movk	x11, #0x3269, lsl #32
    af4c:	movk	x11, #0x5f31, lsl #48
    af50:	mov	w12, #0x636e                	// #25454
    af54:	eor	x9, x9, x11
    af58:	eor	x10, x10, x12
    af5c:	orr	x9, x9, x10
    af60:	cbz	x9, b3e0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x988>
    af64:	ldr	x9, [x8]
    af68:	ldrh	w10, [x8, #8]
    af6c:	mov	x11, #0x7074                	// #28788
    af70:	movk	x11, #0x6572, lsl #16
    af74:	movk	x11, #0x5f6c, lsl #32
    af78:	movk	x11, #0x6968, lsl #48
    af7c:	mov	w12, #0x3231                	// #12849
    af80:	eor	x9, x9, x11
    af84:	eor	x10, x10, x12
    af88:	orr	x9, x9, x10
    af8c:	cbz	x9, b408 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9b0>
    af90:	ldr	x9, [x8]
    af94:	ldrh	w8, [x8, #8]
    af98:	mov	x10, #0x7074                	// #28788
    af9c:	movk	x10, #0x6572, lsl #16
    afa0:	movk	x10, #0x5f6c, lsl #32
    afa4:	movk	x10, #0x6f6c, lsl #48
    afa8:	mov	w11, #0x3231                	// #12849
    afac:	eor	x9, x9, x10
    afb0:	eor	x8, x8, x11
    afb4:	orr	x8, x9, x8
    afb8:	cbnz	x8, b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>
    afbc:	b	b314 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8bc>
    afc0:	ldr	x10, [x8]
    afc4:	ldur	x11, [x8, #3]
    afc8:	mov	x9, #0x6572                	// #25970
    afcc:	mov	x12, #0x7464                	// #29796
    afd0:	movk	x9, #0x5f6c, lsl #16
    afd4:	movk	x12, #0x7270, lsl #16
    afd8:	movk	x9, #0x6968, lsl #32
    afdc:	movk	x12, #0x6c65, lsl #32
    afe0:	movk	x9, #0x3231, lsl #48
    afe4:	movk	x12, #0x685f, lsl #48
    afe8:	eor	x10, x10, x12
    afec:	eor	x11, x11, x9
    aff0:	orr	x10, x10, x11
    aff4:	cbz	x10, b2f8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8a0>
    aff8:	ldr	x11, [x8]
    affc:	ldur	x12, [x8, #3]
    b000:	mov	x10, #0x6572                	// #25970
    b004:	mov	x13, #0x7464                	// #29796
    b008:	movk	x10, #0x5f6c, lsl #16
    b00c:	movk	x13, #0x7270, lsl #16
    b010:	movk	x10, #0x6f6c, lsl #32
    b014:	movk	x13, #0x6c65, lsl #32
    b018:	movk	x10, #0x3231, lsl #48
    b01c:	movk	x13, #0x6c5f, lsl #48
    b020:	eor	x11, x11, x13
    b024:	eor	x12, x12, x10
    b028:	orr	x11, x11, x12
    b02c:	cbz	x11, b358 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x900>
    b030:	ldr	x12, [x8]
    b034:	ldur	x13, [x8, #3]
    b038:	mov	x11, #0x7074                	// #28788
    b03c:	mov	x14, #0x6c65                	// #27749
    b040:	movk	x11, #0x6572, lsl #16
    b044:	movk	x14, #0x675f, lsl #16
    b048:	movk	x11, #0x5f6c, lsl #32
    b04c:	movk	x14, #0x5f31, lsl #32
    b050:	movk	x11, #0x3167, lsl #48
    b054:	movk	x14, #0x636e, lsl #48
    b058:	eor	x12, x12, x11
    b05c:	eor	x13, x13, x14
    b060:	orr	x12, x12, x13
    b064:	cbz	x12, b3b4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x95c>
    b068:	ldr	x12, [x8]
    b06c:	ldur	x13, [x8, #3]
    b070:	mov	x14, #0x7074                	// #28788
    b074:	mov	x15, #0x6c65                	// #27749
    b078:	movk	x14, #0x6572, lsl #16
    b07c:	movk	x15, #0x675f, lsl #16
    b080:	movk	x14, #0x5f6c, lsl #32
    b084:	movk	x15, #0x5f30, lsl #32
    b088:	movk	x14, #0x3067, lsl #48
    b08c:	movk	x15, #0x636e, lsl #48
    b090:	eor	x12, x12, x14
    b094:	eor	x13, x13, x15
    b098:	orr	x12, x12, x13
    b09c:	cbz	x12, b3ec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x994>
    b0a0:	ldr	x12, [x8]
    b0a4:	ldur	x13, [x8, #3]
    b0a8:	mov	x14, #0x6f67                	// #28519
    b0ac:	movk	x14, #0x7474, lsl #16
    b0b0:	movk	x14, #0x7270, lsl #32
    b0b4:	movk	x14, #0x6c65, lsl #48
    b0b8:	eor	x12, x12, x14
    b0bc:	eor	x11, x13, x11
    b0c0:	orr	x11, x12, x11
    b0c4:	cbz	x11, b414 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9bc>
    b0c8:	ldr	x11, [x8]
    b0cc:	ldur	x12, [x8, #3]
    b0d0:	mov	x13, #0x6573                	// #25971
    b0d4:	movk	x13, #0x7263, lsl #16
    b0d8:	movk	x13, #0x6c65, lsl #32
    b0dc:	movk	x13, #0x6c5f, lsl #48
    b0e0:	eor	x11, x11, x13
    b0e4:	eor	x10, x12, x10
    b0e8:	orr	x10, x11, x10
    b0ec:	cbz	x10, b42c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9d4>
    b0f0:	ldr	x10, [x8]
    b0f4:	ldur	x8, [x8, #3]
    b0f8:	mov	x11, #0x6573                	// #25971
    b0fc:	movk	x11, #0x7263, lsl #16
    b100:	movk	x11, #0x6c65, lsl #32
    b104:	movk	x11, #0x685f, lsl #48
    b108:	eor	x10, x10, x11
    b10c:	eor	x8, x8, x9
    b110:	orr	x8, x10, x8
    b114:	cbnz	x8, b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>
    b118:	mov	w9, #0x39                  	// #57
    b11c:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b120:	mov	x9, #0x7464                	// #29796
    b124:	ldr	x11, [x8]
    b128:	ldr	w12, [x8, #8]
    b12c:	movk	x9, #0x7270, lsl #16
    b130:	mov	w10, #0x5f30                	// #24368
    b134:	movk	x9, #0x6c65, lsl #32
    b138:	movk	w10, #0x636e, lsl #16
    b13c:	movk	x9, #0x675f, lsl #48
    b140:	orr	x13, x10, #0x1
    b144:	eor	x11, x11, x9
    b148:	eor	x12, x12, x13
    b14c:	orr	x11, x11, x12
    b150:	cbz	x11, b304 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8ac>
    b154:	ldr	x11, [x8]
    b158:	ldr	w12, [x8, #8]
    b15c:	eor	x9, x11, x9
    b160:	eor	x10, x12, x10
    b164:	orr	x9, x9, x10
    b168:	cbz	x9, b364 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x90c>
    b16c:	ldr	x9, [x8]
    b170:	ldr	w8, [x8, #8]
    b174:	mov	x10, #0x6c74                	// #27764
    b178:	movk	x10, #0x6473, lsl #16
    b17c:	movk	x10, #0x7365, lsl #32
    b180:	mov	w11, #0x6f6c                	// #28524
    b184:	movk	x10, #0x5f63, lsl #48
    b188:	movk	w11, #0x3231, lsl #16
    b18c:	eor	x9, x9, x10
    b190:	eor	x8, x8, x11
    b194:	orr	x8, x9, x8
    b198:	cbnz	x8, b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>
    b19c:	mov	w9, #0x28                  	// #40
    b1a0:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b1a4:	ldr	x9, [x8]
    b1a8:	ldur	x10, [x8, #5]
    b1ac:	mov	x11, #0x7074                	// #28788
    b1b0:	mov	x12, #0x6c5f                	// #27743
    b1b4:	movk	x11, #0x6572, lsl #16
    b1b8:	movk	x12, #0x316f, lsl #16
    b1bc:	movk	x11, #0x5f6c, lsl #32
    b1c0:	movk	x12, #0x5f32, lsl #32
    b1c4:	movk	x11, #0x6f6c, lsl #48
    b1c8:	movk	x12, #0x636e, lsl #48
    b1cc:	eor	x9, x9, x11
    b1d0:	eor	x10, x10, x12
    b1d4:	orr	x9, x9, x10
    b1d8:	cbz	x9, b310 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8b8>
    b1dc:	ldr	x9, [x8]
    b1e0:	ldur	x8, [x8, #5]
    b1e4:	mov	x10, #0x6f67                	// #28519
    b1e8:	mov	x11, #0x6572                	// #25970
    b1ec:	movk	x10, #0x7474, lsl #16
    b1f0:	movk	x11, #0x5f6c, lsl #16
    b1f4:	movk	x10, #0x7270, lsl #32
    b1f8:	movk	x11, #0x6f6c, lsl #32
    b1fc:	movk	x10, #0x6c65, lsl #48
    b200:	movk	x11, #0x3231, lsl #48
    b204:	eor	x9, x9, x10
    b208:	eor	x8, x8, x11
    b20c:	orr	x8, x9, x8
    b210:	cbnz	x8, b290 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x838>
    b214:	mov	w8, #0x100                 	// #256
    b218:	mov	w9, #0x26                  	// #38
    b21c:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b220:	ldr	x9, [x8]
    b224:	ldur	x10, [x8, #6]
    b228:	mov	x11, #0x7464                	// #29796
    b22c:	mov	x12, #0x6c5f                	// #27743
    b230:	movk	x11, #0x7270, lsl #16
    b234:	movk	x12, #0x316f, lsl #16
    b238:	movk	x11, #0x6c65, lsl #32
    b23c:	movk	x12, #0x5f32, lsl #32
    b240:	movk	x11, #0x6c5f, lsl #48
    b244:	movk	x12, #0x636e, lsl #48
    b248:	eor	x9, x9, x11
    b24c:	eor	x10, x10, x12
    b250:	orr	x9, x9, x10
    b254:	cbz	x9, b31c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8c4>
    b258:	ldr	x9, [x8]
    b25c:	ldur	x8, [x8, #6]
    b260:	mov	x10, #0x6f67                	// #28519
    b264:	mov	x11, #0x6c65                	// #27749
    b268:	movk	x10, #0x7474, lsl #16
    b26c:	movk	x11, #0x675f, lsl #16
    b270:	movk	x10, #0x7270, lsl #32
    b274:	movk	x11, #0x5f30, lsl #32
    b278:	movk	x10, #0x6c65, lsl #48
    b27c:	movk	x11, #0x636e, lsl #48
    b280:	eor	x9, x9, x10
    b284:	eor	x8, x8, x11
    b288:	orr	x8, x9, x8
    b28c:	cbz	x8, b370 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x918>
    b290:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b294:	add	x1, x1, #0x0
    b298:	add	x0, sp, #0x8
    b29c:	bl	0 <LLVMInitializeAArch64AsmParser>
    b2a0:	ldr	x0, [x20, #8]
    b2a4:	add	x1, sp, #0x8
    b2a8:	mov	x2, xzr
    b2ac:	mov	x3, xzr
    b2b0:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    b2b4:	mov	w21, w0
    b2b8:	mov	w23, wzr
    b2bc:	mov	w22, #0xfff                 	// #4095
    b2c0:	b	b47c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xa24>
    b2c4:	mov	w8, wzr
    b2c8:	mov	w9, #0x71                  	// #113
    b2cc:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b2d0:	mov	w8, wzr
    b2d4:	mov	w9, #0x73                  	// #115
    b2d8:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b2dc:	mov	w8, wzr
    b2e0:	mov	w9, #0x62                  	// #98
    b2e4:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b2e8:	mov	w8, #0x100                 	// #256
    b2ec:	b	b328 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8d0>
    b2f0:	mov	w8, #0x100                 	// #256
    b2f4:	b	b334 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8dc>
    b2f8:	mov	w8, wzr
    b2fc:	mov	w9, #0x35                  	// #53
    b300:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b304:	mov	w8, #0x100                 	// #256
    b308:	mov	w9, #0x55                  	// #85
    b30c:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b310:	mov	w8, #0x100                 	// #256
    b314:	mov	w9, #0x27                  	// #39
    b318:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b31c:	mov	w8, #0x100                 	// #256
    b320:	b	b35c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x904>
    b324:	mov	w8, wzr
    b328:	mov	w9, #0x61                  	// #97
    b32c:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b330:	mov	w8, wzr
    b334:	mov	w9, #0x63                  	// #99
    b338:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b33c:	mov	w8, wzr
    b340:	mov	w9, #0x52                  	// #82
    b344:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b348:	mov	w8, #0x100                 	// #256
    b34c:	b	b380 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x928>
    b350:	mov	w8, #0x100                 	// #256
    b354:	b	b38c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x934>
    b358:	mov	w8, wzr
    b35c:	mov	w9, #0x25                  	// #37
    b360:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b364:	mov	w8, #0x100                 	// #256
    b368:	mov	w9, #0x45                  	// #69
    b36c:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b370:	mov	w8, #0x100                 	// #256
    b374:	mov	w9, #0x46                  	// #70
    b378:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b37c:	mov	w8, wzr
    b380:	mov	w9, #0x51                  	// #81
    b384:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b388:	mov	w8, wzr
    b38c:	mov	w9, #0x53                  	// #83
    b390:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b394:	mov	w8, wzr
    b398:	mov	w9, #0x42                  	// #66
    b39c:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b3a0:	mov	w8, #0x100                 	// #256
    b3a4:	mov	w9, #0x41                  	// #65
    b3a8:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b3ac:	mov	w8, #0x100                 	// #256
    b3b0:	b	b3c0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x968>
    b3b4:	mov	w8, #0x100                 	// #256
    b3b8:	b	b3f8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9a0>
    b3bc:	mov	w8, wzr
    b3c0:	mov	w9, #0x43                  	// #67
    b3c4:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b3c8:	mov	w8, wzr
    b3cc:	mov	w9, #0x67                  	// #103
    b3d0:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b3d4:	mov	w8, wzr
    b3d8:	mov	w9, #0x65                  	// #101
    b3dc:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b3e0:	mov	w8, #0x100                 	// #256
    b3e4:	mov	w9, #0x11                  	// #17
    b3e8:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b3ec:	mov	w8, #0x100                 	// #256
    b3f0:	b	b424 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9cc>
    b3f4:	mov	w8, wzr
    b3f8:	mov	w9, #0x57                  	// #87
    b3fc:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b400:	mov	w8, wzr
    b404:	b	b308 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8b0>
    b408:	mov	w8, wzr
    b40c:	mov	w9, #0x37                  	// #55
    b410:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b414:	mov	w8, wzr
    b418:	mov	w9, #0x56                  	// #86
    b41c:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b420:	mov	w8, wzr
    b424:	mov	w9, #0x47                  	// #71
    b428:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b42c:	mov	w8, wzr
    b430:	mov	w9, #0x29                  	// #41
    b434:	b	b440 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x9e8>
    b438:	mov	w8, #0x100                 	// #256
    b43c:	mov	w9, #0x24                  	// #36
    b440:	ldr	x10, [x21]
    b444:	mov	x0, x21
    b448:	orr	w22, w8, w9
    b44c:	ldr	x10, [x10, #136]
    b450:	blr	x10
    b454:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b458:	add	x1, x1, #0x0
    b45c:	add	x0, sp, #0x8
    b460:	bl	0 <LLVMInitializeAArch64AsmParser>
    b464:	ldr	x0, [x20, #8]
    b468:	add	x2, sp, #0x8
    b46c:	mov	w1, #0xa                   	// #10
    b470:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    b474:	eor	w23, w0, #0x1
    b478:	mov	w21, #0x1                   	// #1
    b47c:	ldr	x0, [sp, #32]
    b480:	add	x8, sp, #0x20
    b484:	add	x8, x8, #0x10
    b488:	cmp	x0, x8
    b48c:	b.eq	b494 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xa3c>  // b.none
    b490:	bl	0 <_ZdlPv>
    b494:	tbz	w23, #0, aaf8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xa0>
    b498:	ldr	x0, [x20, #8]
    b49c:	mov	x1, x19
    b4a0:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    b4a4:	mov	w21, w0
    b4a8:	tbnz	w0, #0, aaf8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xa0>
    b4ac:	ldr	x0, [x20, #8]
    b4b0:	ldr	x20, [x19]
    b4b4:	ldr	x8, [x0]
    b4b8:	ldr	x8, [x8, #48]
    b4bc:	blr	x8
    b4c0:	mov	x2, x0
    b4c4:	mov	x0, x20
    b4c8:	mov	w1, w22
    b4cc:	bl	0 <_ZN4llvm13AArch64MCExpr6createEPKNS_6MCExprENS0_11VariantKindERNS_9MCContextE>
    b4d0:	add	x8, x0, #0x8
    b4d4:	cmp	x0, #0x0
    b4d8:	mov	w21, wzr
    b4dc:	csel	x8, xzr, x8, eq  // eq = none
    b4e0:	str	x8, [x19]
    b4e4:	b	aaf8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xa0>

000000000000b4e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    b4e8:	sub	sp, sp, #0x90
    b4ec:	stp	x29, x30, [sp, #80]
    b4f0:	stp	x24, x23, [sp, #96]
    b4f4:	stp	x22, x21, [sp, #112]
    b4f8:	stp	x20, x19, [sp, #128]
    b4fc:	add	x29, sp, #0x50
    b500:	ldr	x21, [x0, #8]
    b504:	mov	x20, x0
    b508:	mov	x19, x1
    b50c:	mov	x0, x21
    b510:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b514:	ldur	q0, [x0, #8]
    b518:	mov	x22, x0
    b51c:	sub	x8, x29, #0x20
    b520:	add	x0, sp, #0x10
    b524:	str	q0, [sp, #16]
    b528:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    b52c:	ldp	x8, x9, [x29, #-32]
    b530:	cmp	x9, #0x4
    b534:	b.eq	b5f4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x10c>  // b.none
    b538:	cmp	x9, #0x3
    b53c:	b.ne	b5ec <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x104>  // b.any
    b540:	ldrh	w10, [x8]
    b544:	ldrb	w11, [x8, #2]
    b548:	mov	w9, #0x736c                	// #29548
    b54c:	mov	w12, #0x6c                  	// #108
    b550:	eor	w10, w10, w9
    b554:	eor	w11, w11, w12
    b558:	orr	w10, w10, w11
    b55c:	tst	w10, #0xffff
    b560:	b.eq	b68c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1a4>  // b.none
    b564:	ldrh	w11, [x8]
    b568:	ldrb	w12, [x8, #2]
    b56c:	mov	w10, #0x72                  	// #114
    b570:	eor	w9, w11, w9
    b574:	eor	w11, w12, w10
    b578:	orr	w9, w9, w11
    b57c:	tst	w9, #0xffff
    b580:	b.eq	b69c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b4>  // b.none
    b584:	ldrh	w9, [x8]
    b588:	ldrb	w11, [x8, #2]
    b58c:	mov	w12, #0x7361                	// #29537
    b590:	eor	w9, w9, w12
    b594:	eor	w10, w11, w10
    b598:	orr	w9, w9, w10
    b59c:	tst	w9, #0xffff
    b5a0:	b.eq	b6ac <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.none
    b5a4:	ldrh	w9, [x8]
    b5a8:	ldrb	w10, [x8, #2]
    b5ac:	mov	w11, #0x6f72                	// #28530
    b5b0:	mov	w12, #0x72                  	// #114
    b5b4:	eor	w9, w9, w11
    b5b8:	eor	w10, w10, w12
    b5bc:	orr	w9, w9, w10
    b5c0:	tst	w9, #0xffff
    b5c4:	b.eq	b6bc <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d4>  // b.none
    b5c8:	ldrh	w9, [x8]
    b5cc:	ldrb	w8, [x8, #2]
    b5d0:	mov	w10, #0x736d                	// #29549
    b5d4:	mov	w11, #0x6c                  	// #108
    b5d8:	eor	w9, w9, w10
    b5dc:	eor	w8, w8, w11
    b5e0:	orr	w8, w9, w8
    b5e4:	tst	w8, #0xffff
    b5e8:	b.eq	b6cc <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e4>  // b.none
    b5ec:	mov	w19, #0x1                   	// #1
    b5f0:	b	b908 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x420>
    b5f4:	ldr	w10, [x8]
    b5f8:	mov	w9, #0x7873                	// #30835
    b5fc:	movk	w9, #0x6274, lsl #16
    b600:	add	w11, w9, #0x2
    b604:	cmp	w10, w11
    b608:	b.eq	b694 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1ac>  // b.none
    b60c:	ldr	w11, [x8]
    b610:	mov	w10, #0x7873                	// #30835
    b614:	movk	w10, #0x6874, lsl #16
    b618:	add	w12, w10, #0x2
    b61c:	cmp	w11, w12
    b620:	b.eq	b6a4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1bc>  // b.none
    b624:	ldr	w12, [x8]
    b628:	mov	w11, #0x7873                	// #30835
    b62c:	movk	w11, #0x7774, lsl #16
    b630:	add	w13, w11, #0x2
    b634:	cmp	w12, w13
    b638:	b.eq	b6b4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1cc>  // b.none
    b63c:	ldr	w13, [x8]
    b640:	mov	w12, #0x7873                	// #30835
    b644:	movk	w12, #0x7874, lsl #16
    b648:	add	w14, w12, #0x2
    b64c:	cmp	w13, w14
    b650:	b.eq	b6c4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1dc>  // b.none
    b654:	ldr	w13, [x8]
    b658:	cmp	w13, w9
    b65c:	b.eq	b6d4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1ec>  // b.none
    b660:	ldr	w9, [x8]
    b664:	cmp	w9, w10
    b668:	b.eq	b6dc <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f4>  // b.none
    b66c:	ldr	w9, [x8]
    b670:	cmp	w9, w11
    b674:	b.eq	b6e4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1fc>  // b.none
    b678:	ldr	w8, [x8]
    b67c:	cmp	w8, w12
    b680:	b.ne	b5ec <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x104>  // b.any
    b684:	mov	w24, #0xc                   	// #12
    b688:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b68c:	mov	w24, wzr
    b690:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b694:	mov	w24, #0x5                   	// #5
    b698:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b69c:	mov	w24, #0x1                   	// #1
    b6a0:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b6a4:	mov	w24, #0x6                   	// #6
    b6a8:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b6ac:	mov	w24, #0x2                   	// #2
    b6b0:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b6b4:	mov	w24, #0x7                   	// #7
    b6b8:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b6bc:	mov	w24, #0x3                   	// #3
    b6c0:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b6c4:	mov	w24, #0x8                   	// #8
    b6c8:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b6cc:	mov	w24, #0x4                   	// #4
    b6d0:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b6d4:	mov	w24, #0x9                   	// #9
    b6d8:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b6dc:	mov	w24, #0xa                   	// #10
    b6e0:	b	b6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    b6e4:	mov	w24, #0xb                   	// #11
    b6e8:	mov	x0, x22
    b6ec:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b6f0:	ldr	x8, [x21]
    b6f4:	mov	x22, x0
    b6f8:	mov	x0, x21
    b6fc:	ldr	x8, [x8, #136]
    b700:	blr	x8
    b704:	ldr	x0, [x20, #8]
    b708:	mov	w1, #0x25                  	// #37
    b70c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    b710:	tbnz	w0, #0, b73c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x254>
    b714:	ldr	x0, [x20, #8]
    b718:	ldr	x8, [x0]
    b71c:	ldr	x8, [x8, #40]
    b720:	blr	x8
    b724:	ldr	w8, [x0, #16]
    b728:	cbz	w8, b93c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x454>
    b72c:	ldr	x8, [x0, #8]
    b730:	ldr	w8, [x8]
    b734:	cmp	w8, #0x4
    b738:	b.ne	b814 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x32c>  // b.any
    b73c:	mov	x0, x21
    b740:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b744:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b748:	mov	x23, x0
    b74c:	mov	x0, x21
    b750:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b754:	ldr	w8, [x0]
    b758:	cmp	w8, #0x4
    b75c:	b.eq	b788 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2a0>  // b.none
    b760:	mov	x0, x21
    b764:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b768:	ldr	w8, [x0]
    b76c:	cmp	w8, #0x11
    b770:	b.eq	b788 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2a0>  // b.none
    b774:	mov	x0, x21
    b778:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b77c:	ldr	w8, [x0]
    b780:	cmp	w8, #0x2
    b784:	b.ne	b8dc <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3f4>  // b.any
    b788:	ldr	x0, [x20, #8]
    b78c:	add	x1, sp, #0x8
    b790:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    b794:	tbnz	w0, #0, b904 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x41c>
    b798:	ldr	x21, [sp, #8]
    b79c:	cbz	x21, b95c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x474>
    b7a0:	ldr	w8, [x21]
    b7a4:	cmp	w8, #0x1
    b7a8:	b.ne	b844 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x35c>  // b.any
    b7ac:	ldr	x0, [x20, #8]
    b7b0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b7b4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b7b8:	ldr	x8, [x20, #8]
    b7bc:	ldr	x21, [x21, #16]
    b7c0:	sub	x23, x0, #0x1
    b7c4:	ldr	x9, [x8]
    b7c8:	mov	x0, x8
    b7cc:	ldr	x9, [x9, #48]
    b7d0:	blr	x9
    b7d4:	mov	x20, x0
    b7d8:	mov	w0, #0x70                  	// #112
    b7dc:	bl	0 <_Znwm>
    b7e0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b7e4:	mov	x8, x0
    b7e8:	add	x9, x9, #0x0
    b7ec:	strb	wzr, [x8, #32]!
    b7f0:	str	x9, [x0]
    b7f4:	mov	w9, #0xa                   	// #10
    b7f8:	str	w9, [x0, #48]
    b7fc:	mov	w9, #0x1                   	// #1
    b800:	str	x20, [x0, #104]
    b804:	stp	w24, w21, [x0, #72]
    b808:	strb	w9, [x0, #80]
    b80c:	stp	x22, x23, [x0, #56]
    b810:	b	b8ac <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3c4>
    b814:	cmp	w24, #0x4
    b818:	b.hi	b850 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x368>  // b.pmore
    b81c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b820:	add	x1, x1, #0x0
    b824:	add	x0, sp, #0x10
    b828:	bl	0 <LLVMInitializeAArch64AsmParser>
    b82c:	ldr	x0, [x20, #8]
    b830:	add	x1, sp, #0x10
    b834:	mov	x2, xzr
    b838:	mov	x3, xzr
    b83c:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    b840:	b	b904 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x41c>
    b844:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b848:	add	x1, x1, #0x0
    b84c:	b	b8e4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3fc>
    b850:	ldr	x0, [x20, #8]
    b854:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b858:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b85c:	ldr	x8, [x20, #8]
    b860:	sub	x21, x0, #0x1
    b864:	ldr	x9, [x8]
    b868:	mov	x0, x8
    b86c:	ldr	x9, [x9, #48]
    b870:	blr	x9
    b874:	mov	x20, x0
    b878:	mov	w0, #0x70                  	// #112
    b87c:	bl	0 <_Znwm>
    b880:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b884:	mov	x8, x0
    b888:	add	x9, x9, #0x0
    b88c:	strb	wzr, [x8, #32]!
    b890:	str	x9, [x0]
    b894:	mov	w9, #0xa                   	// #10
    b898:	str	w9, [x0, #48]
    b89c:	str	x20, [x0, #104]
    b8a0:	stp	w24, wzr, [x0, #72]
    b8a4:	strb	wzr, [x0, #80]
    b8a8:	stp	x22, x21, [x0, #56]
    b8ac:	stp	x8, xzr, [x0, #16]
    b8b0:	str	x0, [sp, #16]
    b8b4:	add	x1, sp, #0x10
    b8b8:	mov	x0, x19
    b8bc:	bl	0 <LLVMInitializeAArch64AsmParser>
    b8c0:	ldr	x0, [sp, #16]
    b8c4:	cbz	x0, b8d4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3ec>
    b8c8:	ldr	x8, [x0]
    b8cc:	ldr	x8, [x8, #8]
    b8d0:	blr	x8
    b8d4:	mov	w19, wzr
    b8d8:	b	b908 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x420>
    b8dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b8e0:	add	x1, x1, #0x0
    b8e4:	add	x0, sp, #0x10
    b8e8:	bl	0 <LLVMInitializeAArch64AsmParser>
    b8ec:	ldr	x0, [x20, #8]
    b8f0:	add	x2, sp, #0x10
    b8f4:	mov	x1, x23
    b8f8:	mov	x3, xzr
    b8fc:	mov	x4, xzr
    b900:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    b904:	mov	w19, #0x2                   	// #2
    b908:	ldur	x0, [x29, #-32]
    b90c:	sub	x8, x29, #0x20
    b910:	add	x8, x8, #0x10
    b914:	cmp	x0, x8
    b918:	b.eq	b920 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x438>  // b.none
    b91c:	bl	0 <_ZdlPv>
    b920:	mov	w0, w19
    b924:	ldp	x20, x19, [sp, #128]
    b928:	ldp	x22, x21, [sp, #112]
    b92c:	ldp	x24, x23, [sp, #96]
    b930:	ldp	x29, x30, [sp, #80]
    b934:	add	sp, sp, #0x90
    b938:	ret
    b93c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    b940:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b944:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    b948:	add	x0, x0, #0x0
    b94c:	add	x1, x1, #0x0
    b950:	add	x3, x3, #0x0
    b954:	mov	w2, #0x99                  	// #153
    b958:	bl	0 <__assert_fail>
    b95c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    b960:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b964:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    b968:	add	x0, x0, #0x0
    b96c:	add	x1, x1, #0x0
    b970:	add	x3, x3, #0x0
    b974:	mov	w2, #0x69                  	// #105
    b978:	bl	0 <__assert_fail>

000000000000b97c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj>:
    b97c:	sub	sp, sp, #0xe0
    b980:	stp	x29, x30, [sp, #144]
    b984:	stp	x26, x25, [sp, #160]
    b988:	stp	x24, x23, [sp, #176]
    b98c:	stp	x22, x21, [sp, #192]
    b990:	stp	x20, x19, [sp, #208]
    b994:	add	x29, sp, #0x90
    b998:	sub	w8, w2, #0x174
    b99c:	mov	x19, x1
    b9a0:	mov	x20, x0
    b9a4:	cmp	w8, #0x53
    b9a8:	mov	w21, #0x1                   	// #1
    b9ac:	b.hi	b9ec <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x70>  // b.pmore
    b9b0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b9b4:	add	x9, x9, #0x0
    b9b8:	adr	x10, b9c8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x4c>
    b9bc:	ldrh	w11, [x9, x8, lsl #1]
    b9c0:	add	x10, x10, x11, lsl #2
    b9c4:	br	x10
    b9c8:	mov	x0, x20
    b9cc:	mov	x1, x19
    b9d0:	ldp	x20, x19, [sp, #208]
    b9d4:	ldp	x22, x21, [sp, #192]
    b9d8:	ldp	x24, x23, [sp, #176]
    b9dc:	ldp	x26, x25, [sp, #160]
    b9e0:	ldp	x29, x30, [sp, #144]
    b9e4:	add	sp, sp, #0xe0
    b9e8:	b	dd48 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
    b9ec:	sub	w8, w2, #0xaf
    b9f0:	cmp	w8, #0x44
    b9f4:	b.hi	ba58 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xdc>  // b.pmore
    b9f8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b9fc:	add	x9, x9, #0x0
    ba00:	adr	x10, ba10 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x94>
    ba04:	ldrh	w11, [x9, x8, lsl #1]
    ba08:	add	x10, x10, x11, lsl #2
    ba0c:	br	x10
    ba10:	mov	x0, x20
    ba14:	mov	x1, x19
    ba18:	ldp	x20, x19, [sp, #208]
    ba1c:	ldp	x22, x21, [sp, #192]
    ba20:	ldp	x24, x23, [sp, #176]
    ba24:	ldp	x26, x25, [sp, #160]
    ba28:	ldp	x29, x30, [sp, #144]
    ba2c:	add	sp, sp, #0xe0
    ba30:	b	d6b0 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    ba34:	mov	x0, x20
    ba38:	mov	x1, x19
    ba3c:	ldp	x20, x19, [sp, #208]
    ba40:	ldp	x22, x21, [sp, #192]
    ba44:	ldp	x24, x23, [sp, #176]
    ba48:	ldp	x26, x25, [sp, #160]
    ba4c:	ldp	x29, x30, [sp, #144]
    ba50:	add	sp, sp, #0xe0
    ba54:	b	e140 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb>
    ba58:	sub	w8, w2, #0x108
    ba5c:	cmp	w8, #0x1b
    ba60:	b.hi	cdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1444>  // b.pmore
    ba64:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ba68:	add	x9, x9, #0x0
    ba6c:	adr	x10, ba7c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100>
    ba70:	ldrh	w11, [x9, x8, lsl #1]
    ba74:	add	x10, x10, x11, lsl #2
    ba78:	br	x10
    ba7c:	mov	x0, x20
    ba80:	mov	x1, x19
    ba84:	ldp	x20, x19, [sp, #208]
    ba88:	ldp	x22, x21, [sp, #192]
    ba8c:	ldp	x24, x23, [sp, #176]
    ba90:	ldp	x26, x25, [sp, #160]
    ba94:	ldp	x29, x30, [sp, #144]
    ba98:	add	sp, sp, #0xe0
    ba9c:	b	cf5c <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    baa0:	mov	x0, x20
    baa4:	mov	x1, x19
    baa8:	ldp	x20, x19, [sp, #208]
    baac:	ldp	x22, x21, [sp, #192]
    bab0:	ldp	x24, x23, [sp, #176]
    bab4:	ldp	x26, x25, [sp, #160]
    bab8:	ldp	x29, x30, [sp, #144]
    babc:	add	sp, sp, #0xe0
    bac0:	b	e00c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
    bac4:	mov	x0, x20
    bac8:	mov	x1, x19
    bacc:	ldp	x20, x19, [sp, #208]
    bad0:	ldp	x22, x21, [sp, #192]
    bad4:	ldp	x24, x23, [sp, #176]
    bad8:	ldp	x26, x25, [sp, #160]
    badc:	ldp	x29, x30, [sp, #144]
    bae0:	add	sp, sp, #0xe0
    bae4:	b	d268 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE>
    bae8:	mov	x0, x20
    baec:	mov	x1, x19
    baf0:	ldp	x20, x19, [sp, #208]
    baf4:	ldp	x22, x21, [sp, #192]
    baf8:	ldp	x24, x23, [sp, #176]
    bafc:	ldp	x26, x25, [sp, #160]
    bb00:	ldp	x29, x30, [sp, #144]
    bb04:	add	sp, sp, #0xe0
    bb08:	b	d4e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    bb0c:	mov	x0, x20
    bb10:	mov	x1, x19
    bb14:	ldp	x20, x19, [sp, #208]
    bb18:	ldp	x22, x21, [sp, #192]
    bb1c:	ldp	x24, x23, [sp, #176]
    bb20:	ldp	x26, x25, [sp, #160]
    bb24:	ldp	x29, x30, [sp, #144]
    bb28:	add	sp, sp, #0xe0
    bb2c:	b	e5e4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
    bb30:	mov	x0, x20
    bb34:	mov	x1, x19
    bb38:	ldp	x20, x19, [sp, #208]
    bb3c:	ldp	x22, x21, [sp, #192]
    bb40:	ldp	x24, x23, [sp, #176]
    bb44:	ldp	x26, x25, [sp, #160]
    bb48:	ldp	x29, x30, [sp, #144]
    bb4c:	add	sp, sp, #0xe0
    bb50:	b	da30 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    bb54:	ldr	x0, [x20, #8]
    bb58:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bb5c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    bb60:	mov	x22, x0
    bb64:	sub	x1, x29, #0x20
    bb68:	sub	x2, x29, #0x40
    bb6c:	mov	w3, #0x2                   	// #2
    bb70:	mov	x0, x20
    bb74:	stp	xzr, xzr, [x29, #-64]
    bb78:	bl	952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    bb7c:	mov	w21, w0
    bb80:	cbnz	w0, cdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1444>
    bb84:	ldp	x0, x1, [x29, #-64]
    bb88:	add	x8, sp, #0x30
    bb8c:	mov	w2, #0x2                   	// #2
    bb90:	mov	w23, #0x2                   	// #2
    bb94:	bl	9654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    bb98:	ldrb	w8, [sp, #56]
    bb9c:	cbz	w8, c5b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc34>
    bba0:	ldr	x0, [x20, #8]
    bba4:	ldr	w24, [sp, #52]
    bba8:	ldur	w25, [x29, #-32]
    bbac:	ldr	x8, [x0]
    bbb0:	ldr	x8, [x8, #48]
    bbb4:	blr	x8
    bbb8:	mov	x21, x0
    bbbc:	mov	w0, #0x70                  	// #112
    bbc0:	bl	0 <_Znwm>
    bbc4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bbc8:	mov	x8, x0
    bbcc:	add	x9, x9, #0x0
    bbd0:	strb	wzr, [x8, #32]!
    bbd4:	str	x9, [x0]
    bbd8:	mov	w9, #0x3                   	// #3
    bbdc:	str	w9, [x0, #48]
    bbe0:	str	x21, [x0, #104]
    bbe4:	stp	w25, w23, [x0, #72]
    bbe8:	stur	xzr, [x0, #84]
    bbec:	stur	xzr, [x0, #89]
    bbf0:	stp	x22, x22, [x0, #56]
    bbf4:	str	w24, [x0, #80]
    bbf8:	stp	x8, xzr, [x0, #16]
    bbfc:	str	x0, [sp, #16]
    bc00:	add	x1, sp, #0x10
    bc04:	mov	x0, x19
    bc08:	bl	0 <LLVMInitializeAArch64AsmParser>
    bc0c:	ldr	x0, [sp, #16]
    bc10:	cbz	x0, bc20 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x2a4>
    bc14:	ldr	x8, [x0]
    bc18:	ldr	x8, [x8, #8]
    bc1c:	blr	x8
    bc20:	mov	x0, x20
    bc24:	mov	x1, x19
    bc28:	bl	a8dc <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    bc2c:	cmp	w0, #0x2
    bc30:	cset	w8, eq  // eq = none
    bc34:	lsl	w21, w8, #1
    bc38:	strb	wzr, [sp, #56]
    bc3c:	b	cdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1444>
    bc40:	ldr	x22, [x20, #8]
    bc44:	mov	x0, x22
    bc48:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bc4c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    bc50:	mov	x21, x0
    bc54:	mov	x0, x22
    bc58:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bc5c:	ldr	w8, [x0]
    bc60:	cmp	w8, #0x2
    bc64:	b.ne	c1a4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x828>  // b.any
    bc68:	mov	x23, x0
    bc6c:	ldr	x0, [x0, #8]
    bc70:	ldr	x1, [x23, #16]
    bc74:	bl	0 <_ZN4llvm14AArch64PSBHint15lookupPSBByNameENS_9StringRefE>
    bc78:	cbz	x0, c1a4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x828>
    bc7c:	ldr	x8, [x22]
    bc80:	mov	x24, x0
    bc84:	mov	x0, x22
    bc88:	ldr	x8, [x8, #136]
    bc8c:	blr	x8
    bc90:	ldr	x0, [x20, #8]
    bc94:	ldrh	w22, [x24, #8]
    bc98:	ldp	x24, x23, [x23, #8]
    bc9c:	ldr	x8, [x0]
    bca0:	ldr	x8, [x8, #48]
    bca4:	blr	x8
    bca8:	mov	x20, x0
    bcac:	mov	w0, #0x70                  	// #112
    bcb0:	bl	0 <_Znwm>
    bcb4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bcb8:	mov	x8, x0
    bcbc:	add	x9, x9, #0x0
    bcc0:	strb	wzr, [x8, #32]!
    bcc4:	str	x9, [x0]
    bcc8:	mov	w9, #0xd                   	// #13
    bccc:	str	w9, [x0, #48]
    bcd0:	str	x20, [x0, #104]
    bcd4:	str	x24, [x0, #72]
    bcd8:	str	w22, [x0, #84]
    bcdc:	b	cd8c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1410>
    bce0:	ldr	x0, [x20, #8]
    bce4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bce8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    bcec:	mov	x22, x0
    bcf0:	add	x1, sp, #0x10
    bcf4:	mov	x0, x20
    bcf8:	bl	6118 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    bcfc:	mov	w21, w0
    bd00:	cbnz	w0, cdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1444>
    bd04:	ldr	x0, [x20, #8]
    bd08:	mov	w1, #0x19                  	// #25
    bd0c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    bd10:	tbz	w0, #0, c7e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe64>
    bd14:	ldr	x0, [x20, #8]
    bd18:	mov	w1, #0x25                  	// #37
    bd1c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    bd20:	ldr	x0, [x20, #8]
    bd24:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bd28:	ldr	w8, [x0]
    bd2c:	cmp	w8, #0x4
    bd30:	b.ne	bd60 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x3e4>  // b.any
    bd34:	ldr	x0, [x20, #8]
    bd38:	add	x1, sp, #0x30
    bd3c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    bd40:	tbnz	w0, #0, bd60 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x3e4>
    bd44:	ldr	x8, [sp, #48]
    bd48:	cbz	x8, ceec <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1570>
    bd4c:	ldr	w9, [x8]
    bd50:	cmp	w9, #0x1
    bd54:	b.ne	bd60 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x3e4>  // b.any
    bd58:	ldr	x8, [x8, #16]
    bd5c:	cbz	x8, c7e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe64>
    bd60:	ldr	x0, [x20, #8]
    bd64:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bd68:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    bd6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bd70:	mov	x19, x0
    bd74:	add	x1, x1, #0x0
    bd78:	sub	x0, x29, #0x40
    bd7c:	bl	0 <LLVMInitializeAArch64AsmParser>
    bd80:	ldr	x0, [x20, #8]
    bd84:	sub	x2, x29, #0x40
    bd88:	mov	x1, x19
    bd8c:	b	c6a4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd28>
    bd90:	ldr	x22, [x20, #8]
    bd94:	mov	x0, x22
    bd98:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bd9c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    bda0:	mov	x21, x0
    bda4:	mov	x0, x22
    bda8:	str	xzr, [sp, #48]
    bdac:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bdb0:	ldr	w8, [x0]
    bdb4:	cmp	w8, #0x25
    bdb8:	b.ne	bdcc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x450>  // b.any
    bdbc:	ldr	x8, [x22]
    bdc0:	mov	x0, x22
    bdc4:	ldr	x8, [x8, #136]
    bdc8:	blr	x8
    bdcc:	add	x1, sp, #0x30
    bdd0:	mov	x0, x20
    bdd4:	bl	aa58 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    bdd8:	tbnz	w0, #0, c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>
    bddc:	ldr	x0, [sp, #48]
    bde0:	sub	x1, x29, #0x20
    bde4:	sub	x2, x29, #0x8
    bde8:	add	x3, sp, #0x10
    bdec:	bl	e958 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
    bdf0:	tbz	w0, #0, c018 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x69c>
    bdf4:	ldurh	w9, [x29, #-8]
    bdf8:	ldur	w8, [x29, #-32]
    bdfc:	cbnz	w9, ca24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x10a8>
    be00:	cmp	w8, #0xfff
    be04:	b.ne	ca24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x10a8>  // b.any
    be08:	ldr	x0, [x20, #8]
    be0c:	ldr	x22, [sp, #48]
    be10:	ldr	x8, [x0]
    be14:	ldr	x8, [x8, #48]
    be18:	blr	x8
    be1c:	mov	x2, x0
    be20:	mov	w1, #0x11                  	// #17
    be24:	b	c000 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x684>
    be28:	ldr	x22, [x20, #8]
    be2c:	mov	x0, x22
    be30:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    be34:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    be38:	mov	x21, x0
    be3c:	mov	x0, x22
    be40:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    be44:	ldr	w8, [x0]
    be48:	cmp	w8, #0x2
    be4c:	b.ne	c1a4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x828>  // b.any
    be50:	mov	x23, x0
    be54:	ldr	x0, [x0, #8]
    be58:	ldr	x1, [x23, #16]
    be5c:	bl	0 <_ZN4llvm14AArch64BTIHint15lookupBTIByNameENS_9StringRefE>
    be60:	cbz	x0, c1a4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x828>
    be64:	ldr	x8, [x22]
    be68:	mov	x24, x0
    be6c:	mov	x0, x22
    be70:	ldr	x8, [x8, #136]
    be74:	blr	x8
    be78:	ldr	x0, [x20, #8]
    be7c:	ldrh	w22, [x24, #8]
    be80:	ldp	x24, x23, [x23, #8]
    be84:	ldr	x8, [x0]
    be88:	ldr	x8, [x8, #48]
    be8c:	blr	x8
    be90:	mov	x20, x0
    be94:	mov	w0, #0x70                  	// #112
    be98:	bl	0 <_Znwm>
    be9c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bea0:	mov	x8, x0
    bea4:	add	x9, x9, #0x0
    bea8:	strb	wzr, [x8, #32]!
    beac:	str	x9, [x0]
    beb0:	mov	w9, #0xe                   	// #14
    beb4:	str	w9, [x0, #48]
    beb8:	lsl	w9, w22, #1
    bebc:	orr	w9, w9, #0x20
    bec0:	str	x20, [x0, #104]
    bec4:	stp	x21, x24, [x0, #64]
    bec8:	str	x21, [x0, #56]
    becc:	stp	x8, xzr, [x0, #16]
    bed0:	stp	w23, w9, [x0, #80]
    bed4:	b	cd98 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x141c>
    bed8:	ldr	x0, [x20, #8]
    bedc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bee0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    bee4:	mov	x22, x0
    bee8:	add	x1, sp, #0x30
    beec:	mov	x0, x20
    bef0:	bl	6118 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    bef4:	mov	w21, w0
    bef8:	cbnz	w0, cdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1444>
    befc:	ldr	x0, [x20, #8]
    bf00:	ldr	w24, [sp, #48]
    bf04:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bf08:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    bf0c:	ldr	x8, [x20, #8]
    bf10:	mov	x20, x0
    bf14:	ldr	x9, [x8]
    bf18:	mov	x0, x8
    bf1c:	ldr	x9, [x9, #48]
    bf20:	blr	x9
    bf24:	mov	x23, x0
    bf28:	mov	w0, #0x70                  	// #112
    bf2c:	bl	0 <_Znwm>
    bf30:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bf34:	mov	x8, x0
    bf38:	add	x9, x9, #0x0
    bf3c:	strb	wzr, [x8, #32]!
    bf40:	str	x9, [x0]
    bf44:	mov	w9, #0x3                   	// #3
    bf48:	str	w9, [x0, #48]
    bf4c:	mov	w9, #0x2                   	// #2
    bf50:	str	x23, [x0, #104]
    bf54:	b	c22c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x8b0>
    bf58:	ldr	x0, [x20, #8]
    bf5c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bf60:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    bf64:	str	xzr, [sp, #48]
    bf68:	ldr	x8, [x20, #8]
    bf6c:	mov	x21, x0
    bf70:	mov	x0, x8
    bf74:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bf78:	ldr	w8, [x0]
    bf7c:	cmp	w8, #0x13
    bf80:	b.eq	c5b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc34>  // b.none
    bf84:	ldr	x0, [x20, #8]
    bf88:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    bf8c:	ldr	w8, [x0]
    bf90:	cmp	w8, #0x25
    bf94:	b.ne	bfa8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x62c>  // b.any
    bf98:	ldr	x0, [x20, #8]
    bf9c:	ldr	x8, [x0]
    bfa0:	ldr	x8, [x8, #136]
    bfa4:	blr	x8
    bfa8:	add	x1, sp, #0x30
    bfac:	mov	x0, x20
    bfb0:	bl	aa58 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    bfb4:	tbnz	w0, #0, c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>
    bfb8:	ldr	x0, [sp, #48]
    bfbc:	sub	x1, x29, #0x20
    bfc0:	sub	x2, x29, #0x8
    bfc4:	add	x3, sp, #0x10
    bfc8:	bl	e958 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
    bfcc:	tbz	w0, #0, c018 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x69c>
    bfd0:	ldurh	w8, [x29, #-8]
    bfd4:	cbnz	w8, caac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1130>
    bfd8:	ldur	w8, [x29, #-32]
    bfdc:	cmp	w8, #0xfff
    bfe0:	b.ne	caac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1130>  // b.any
    bfe4:	ldr	x0, [x20, #8]
    bfe8:	ldr	x22, [sp, #48]
    bfec:	ldr	x8, [x0]
    bff0:	ldr	x8, [x8, #48]
    bff4:	blr	x8
    bff8:	mov	x2, x0
    bffc:	mov	w1, #0x1                   	// #1
    c000:	mov	x0, x22
    c004:	bl	0 <_ZN4llvm13AArch64MCExpr6createEPKNS_6MCExprENS0_11VariantKindERNS_9MCContextE>
    c008:	add	x8, x0, #0x8
    c00c:	cmp	x0, #0x0
    c010:	csel	x8, xzr, x8, eq  // eq = none
    c014:	str	x8, [sp, #48]
    c018:	ldr	x0, [x20, #8]
    c01c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c020:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c024:	ldr	x8, [x20, #8]
    c028:	ldr	x22, [sp, #48]
    c02c:	sub	x23, x0, #0x1
    c030:	ldr	x9, [x8]
    c034:	mov	x0, x8
    c038:	ldr	x9, [x9, #48]
    c03c:	blr	x9
    c040:	mov	x20, x0
    c044:	mov	w0, #0x70                  	// #112
    c048:	bl	0 <_Znwm>
    c04c:	mov	x8, x0
    c050:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c054:	add	x9, x9, #0x0
    c058:	strb	wzr, [x8, #32]!
    c05c:	str	x9, [x0]
    c060:	str	wzr, [x0, #48]
    c064:	str	x20, [x0, #104]
    c068:	stp	x23, x22, [x0, #64]
    c06c:	str	x21, [x0, #56]
    c070:	b	cd94 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1418>
    c074:	ldr	x21, [x20, #8]
    c078:	mov	x0, x21
    c07c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c080:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c084:	ldr	x8, [x20, #8]
    c088:	mov	x22, x0
    c08c:	mov	w1, #0x25                  	// #37
    c090:	mov	x0, x8
    c094:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    c098:	ldr	x8, [x20, #8]
    c09c:	mov	w23, w0
    c0a0:	mov	w1, #0xd                   	// #13
    c0a4:	mov	x0, x8
    c0a8:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    c0ac:	mov	w24, w0
    c0b0:	mov	x0, x21
    c0b4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c0b8:	ldr	w8, [x0]
    c0bc:	mov	x25, x0
    c0c0:	cmp	w8, #0x4
    c0c4:	b.eq	c490 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb14>  // b.none
    c0c8:	cmp	w8, #0x6
    c0cc:	b.eq	c4b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb34>  // b.none
    c0d0:	tbz	w23, #0, c5b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc34>
    c0d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c0d8:	add	x1, x1, #0x0
    c0dc:	b	c96c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xff0>
    c0e0:	ldr	x21, [x20, #8]
    c0e4:	mov	x0, x21
    c0e8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c0ec:	ldr	x8, [x20, #184]
    c0f0:	mov	x22, x0
    c0f4:	cmp	x8, #0x3
    c0f8:	b.ne	c130 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x7b4>  // b.any
    c0fc:	ldr	x8, [x20, #176]
    c100:	mov	w10, #0x7374                	// #29556
    c104:	mov	w11, #0x62                  	// #98
    c108:	ldrh	w9, [x8]
    c10c:	ldrb	w8, [x8, #2]
    c110:	eor	w9, w9, w10
    c114:	eor	w8, w8, w11
    c118:	orr	w8, w9, w8
    c11c:	tst	w8, #0xffff
    c120:	b.ne	c130 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x7b4>  // b.any
    c124:	ldr	w8, [x22]
    c128:	cmp	w8, #0x2
    c12c:	b.ne	ce38 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14bc>  // b.any
    c130:	ldr	x0, [x20, #8]
    c134:	mov	w1, #0x25                  	// #37
    c138:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    c13c:	tbnz	w0, #0, c154 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x7d8>
    c140:	ldr	w8, [x22]
    c144:	cmp	w8, #0x2
    c148:	b.eq	c990 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1014>  // b.none
    c14c:	cmp	w8, #0x4
    c150:	b.ne	c1a4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x828>  // b.any
    c154:	ldr	x0, [x20, #8]
    c158:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c15c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c160:	ldr	x8, [x20, #8]
    c164:	mov	x21, x0
    c168:	add	x1, sp, #0x30
    c16c:	mov	x0, x8
    c170:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    c174:	tbnz	w0, #0, c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>
    c178:	ldr	x22, [sp, #48]
    c17c:	cbz	x22, ceec <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1570>
    c180:	ldr	w8, [x22]
    c184:	cmp	w8, #0x1
    c188:	b.ne	ca18 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x109c>  // b.any
    c18c:	ldr	x0, [x22, #16]
    c190:	cmp	x0, #0x10
    c194:	b.cc	ca90 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1114>  // b.lo, b.ul, b.last
    c198:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c19c:	add	x1, x1, #0x0
    c1a0:	b	c690 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd14>
    c1a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c1a8:	add	x1, x1, #0x0
    c1ac:	b	c96c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xff0>
    c1b0:	ldr	x0, [x20, #8]
    c1b4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c1b8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c1bc:	mov	x22, x0
    c1c0:	add	x1, sp, #0x30
    c1c4:	mov	x0, x20
    c1c8:	bl	6118 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    c1cc:	mov	w21, w0
    c1d0:	cbnz	w0, cdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1444>
    c1d4:	ldr	x0, [x20, #8]
    c1d8:	ldr	w24, [sp, #48]
    c1dc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c1e0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c1e4:	ldr	x8, [x20, #8]
    c1e8:	mov	x20, x0
    c1ec:	ldr	x9, [x8]
    c1f0:	mov	x0, x8
    c1f4:	ldr	x9, [x9, #48]
    c1f8:	blr	x9
    c1fc:	mov	x23, x0
    c200:	mov	w0, #0x70                  	// #112
    c204:	bl	0 <_Znwm>
    c208:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c20c:	mov	x8, x0
    c210:	add	x9, x9, #0x0
    c214:	strb	wzr, [x8, #32]!
    c218:	str	x9, [x0]
    c21c:	mov	w9, #0x3                   	// #3
    c220:	str	w9, [x0, #48]
    c224:	str	x23, [x0, #104]
    c228:	mov	w9, #0x1                   	// #1
    c22c:	stp	w24, wzr, [x0, #72]
    c230:	stp	wzr, w9, [x0, #80]
    c234:	str	xzr, [x0, #88]
    c238:	strb	wzr, [x0, #96]
    c23c:	stp	x22, x20, [x0, #56]
    c240:	stp	x8, xzr, [x0, #16]
    c244:	stur	x0, [x29, #-64]
    c248:	sub	x1, x29, #0x40
    c24c:	mov	x0, x19
    c250:	bl	0 <LLVMInitializeAArch64AsmParser>
    c254:	ldur	x0, [x29, #-64]
    c258:	cbz	x0, cdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1444>
    c25c:	ldr	x8, [x0]
    c260:	ldr	x8, [x8, #8]
    c264:	blr	x8
    c268:	b	cdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1444>
    c26c:	ldr	x22, [x20, #8]
    c270:	mov	x0, x22
    c274:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c278:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c27c:	mov	x21, x0
    c280:	mov	x0, x22
    c284:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c288:	ldr	x8, [x20, #8]
    c28c:	mov	x23, x0
    c290:	mov	w1, #0x25                  	// #37
    c294:	mov	x0, x8
    c298:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    c29c:	tbnz	w0, #0, c2b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x938>
    c2a0:	ldr	w8, [x23]
    c2a4:	cmp	w8, #0x2
    c2a8:	b.eq	c8fc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf80>  // b.none
    c2ac:	cmp	w8, #0x4
    c2b0:	b.ne	c964 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfe8>  // b.any
    c2b4:	ldr	x0, [x20, #8]
    c2b8:	sub	x1, x29, #0x8
    c2bc:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    c2c0:	tbnz	w0, #0, c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>
    c2c4:	ldur	x8, [x29, #-8]
    c2c8:	cbz	x8, ceec <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1570>
    c2cc:	ldr	w9, [x8]
    c2d0:	cmp	w9, #0x1
    c2d4:	b.ne	c4f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb78>  // b.any
    c2d8:	ldr	x22, [x8, #16]
    c2dc:	cmp	w22, #0x20
    c2e0:	b.cc	ca50 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x10d4>  // b.lo, b.ul, b.last
    c2e4:	add	x8, sp, #0x10
    c2e8:	mov	w9, #0x3133                	// #12595
    c2ec:	b	c434 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xab8>
    c2f0:	ldr	x22, [x20, #8]
    c2f4:	mov	x0, x22
    c2f8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c2fc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c300:	mov	x21, x0
    c304:	mov	x0, x22
    c308:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c30c:	ldr	w8, [x0]
    c310:	cmp	w8, #0x2
    c314:	b.eq	c500 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb84>  // b.none
    c318:	cmp	w8, #0x25
    c31c:	b.ne	c5b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc34>  // b.any
    c320:	ldr	x8, [x22]
    c324:	mov	x0, x22
    c328:	ldr	x8, [x8, #136]
    c32c:	blr	x8
    c330:	ldr	x0, [x20, #8]
    c334:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c338:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c33c:	mov	x21, x0
    c340:	sub	x1, x29, #0x40
    c344:	mov	x0, x22
    c348:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    c34c:	tbnz	w0, #0, c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>
    c350:	ldur	x8, [x29, #-64]
    c354:	cbz	x8, ceec <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1570>
    c358:	ldr	w9, [x8]
    c35c:	cmp	w9, #0x1
    c360:	b.ne	c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>  // b.any
    c364:	ldr	x22, [x8, #16]
    c368:	b	c530 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xbb4>
    c36c:	ldr	x22, [x20, #8]
    c370:	mov	x0, x22
    c374:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c378:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c37c:	mov	x21, x0
    c380:	mov	x0, x22
    c384:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c388:	ldr	w8, [x0]
    c38c:	cmp	w8, #0x2
    c390:	b.ne	c688 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd0c>  // b.any
    c394:	mov	x0, x22
    c398:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c39c:	ldr	w9, [x0]
    c3a0:	mov	x8, x0
    c3a4:	cmp	w9, #0x2
    c3a8:	b.ne	c640 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xcc4>  // b.any
    c3ac:	ldp	x0, x1, [x8, #8]
    c3b0:	b	c648 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xccc>
    c3b4:	ldr	x22, [x20, #8]
    c3b8:	mov	x0, x22
    c3bc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c3c0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c3c4:	mov	x21, x0
    c3c8:	mov	x0, x22
    c3cc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c3d0:	ldr	x8, [x20, #8]
    c3d4:	mov	x23, x0
    c3d8:	mov	w1, #0x25                  	// #37
    c3dc:	mov	x0, x8
    c3e0:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    c3e4:	tbnz	w0, #0, c3fc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xa80>
    c3e8:	ldr	w8, [x23]
    c3ec:	cmp	w8, #0x2
    c3f0:	b.eq	c958 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfdc>  // b.none
    c3f4:	cmp	w8, #0x4
    c3f8:	b.ne	c964 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfe8>  // b.any
    c3fc:	ldr	x0, [x20, #8]
    c400:	sub	x1, x29, #0x8
    c404:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    c408:	tbnz	w0, #0, c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>
    c40c:	ldur	x8, [x29, #-8]
    c410:	cbz	x8, ceec <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1570>
    c414:	ldr	w9, [x8]
    c418:	cmp	w9, #0x1
    c41c:	b.ne	c4f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb78>  // b.any
    c420:	ldr	x22, [x8, #16]
    c424:	cmp	w22, #0x10
    c428:	b.cc	ca74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x10f8>  // b.lo, b.ul, b.last
    c42c:	add	x8, sp, #0x10
    c430:	mov	w9, #0x3531                	// #13617
    c434:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c438:	mov	w10, #0x2                   	// #2
    c43c:	add	x19, x8, #0x10
    c440:	add	x3, x3, #0x0
    c444:	add	x0, sp, #0x10
    c448:	mov	w4, #0x22                  	// #34
    c44c:	mov	x1, xzr
    c450:	mov	x2, xzr
    c454:	strh	w9, [sp, #32]
    c458:	stp	x19, x10, [sp, #16]
    c45c:	strb	wzr, [sp, #34]
    c460:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
    c464:	add	x8, sp, #0x30
    c468:	add	x21, x8, #0x10
    c46c:	str	x21, [sp, #48]
    c470:	mov	x8, x0
    c474:	ldr	x9, [x8], #16
    c478:	cmp	x9, x8
    c47c:	b.eq	cadc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1160>  // b.none
    c480:	str	x9, [sp, #48]
    c484:	ldr	x9, [x0, #16]
    c488:	str	x9, [sp, #64]
    c48c:	b	cae4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1168>
    c490:	ldr	x8, [x25, #16]
    c494:	cmp	x8, #0x2
    c498:	b.cc	c4b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb34>  // b.lo, b.ul, b.last
    c49c:	ldr	x8, [x25, #8]
    c4a0:	mov	w9, #0x7830                	// #30768
    c4a4:	ldrh	w8, [x8]
    c4a8:	cmp	w8, w9
    c4ac:	b.eq	cab8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x113c>  // b.none
    c4b0:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    c4b4:	sub	x8, x29, #0x40
    c4b8:	add	x23, x8, #0x8
    c4bc:	mov	x1, x0
    c4c0:	mov	x0, x23
    c4c4:	bl	0 <LLVMInitializeAArch64AsmParser>
    c4c8:	ldp	x1, x2, [x25, #8]
    c4cc:	add	x8, sp, #0x10
    c4d0:	sub	x0, x29, #0x40
    c4d4:	mov	w3, #0x3                   	// #3
    c4d8:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
    c4dc:	ldrb	w8, [sp, #24]
    c4e0:	and	w9, w8, #0xfffffffd
    c4e4:	strb	w9, [sp, #24]
    c4e8:	tbnz	w8, #0, c5b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc3c>
    c4ec:	mov	w8, #0x1                   	// #1
    c4f0:	b	c5c4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc48>
    c4f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c4f8:	add	x1, x1, #0x0
    c4fc:	b	c96c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xff0>
    c500:	ldp	x8, x1, [x0, #8]
    c504:	mov	x0, x8
    c508:	bl	0 <_ZN4llvm21AArch64SVEPredPattern22lookupSVEPREDPATByNameENS_9StringRefE>
    c50c:	cbz	x0, c5b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc34>
    c510:	ldr	x8, [x22]
    c514:	mov	x23, x0
    c518:	mov	x0, x22
    c51c:	ldr	x8, [x8, #136]
    c520:	blr	x8
    c524:	ldrh	w22, [x23, #8]
    c528:	cmp	x22, #0x20
    c52c:	b.cs	cf3c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x15c0>  // b.hs, b.nlast
    c530:	ldr	x0, [x20, #8]
    c534:	ldr	x8, [x0]
    c538:	ldr	x8, [x8, #48]
    c53c:	blr	x8
    c540:	mov	x1, x0
    c544:	mov	x0, x22
    c548:	mov	w2, wzr
    c54c:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    c550:	ldr	x8, [x20, #8]
    c554:	mov	x22, x0
    c558:	mov	x0, x8
    c55c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c560:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c564:	ldr	x8, [x20, #8]
    c568:	mov	x20, x0
    c56c:	ldr	x9, [x8]
    c570:	mov	x0, x8
    c574:	ldr	x9, [x9, #48]
    c578:	blr	x9
    c57c:	mov	x23, x0
    c580:	mov	w0, #0x70                  	// #112
    c584:	bl	0 <_Znwm>
    c588:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c58c:	mov	x8, x0
    c590:	add	x9, x9, #0x0
    c594:	strb	wzr, [x8, #32]!
    c598:	str	x9, [x0]
    c59c:	str	wzr, [x0, #48]
    c5a0:	str	x23, [x0, #104]
    c5a4:	str	x22, [x0, #72]
    c5a8:	stp	x21, x20, [x0, #56]
    c5ac:	b	cd94 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1418>
    c5b0:	mov	w21, #0x1                   	// #1
    c5b4:	b	cdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1444>
    c5b8:	ldr	x8, [sp, #16]
    c5bc:	str	xzr, [sp, #16]
    c5c0:	orr	x8, x8, #0x1
    c5c4:	tst	x8, #0xfffffffffffffffe
    c5c8:	and	x25, x8, #0xfffffffffffffffe
    c5cc:	cset	w9, ne  // ne = any
    c5d0:	orr	x9, x25, x9
    c5d4:	stur	x9, [x29, #-32]
    c5d8:	cbz	x25, c600 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc84>
    c5dc:	orr	x8, x8, #0x1
    c5e0:	add	x0, sp, #0x30
    c5e4:	sub	x1, x29, #0x8
    c5e8:	stur	xzr, [x29, #-32]
    c5ec:	str	x8, [sp, #48]
    c5f0:	bl	0 <LLVMInitializeAArch64AsmParser>
    c5f4:	ldr	x8, [sp, #48]
    c5f8:	cbnz	x8, cf34 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x15b8>
    c5fc:	ldur	x9, [x29, #-32]
    c600:	cbnz	x9, cf0c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1590>
    c604:	cbz	x25, c6b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd38>
    c608:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c60c:	add	x1, x1, #0x0
    c610:	add	x0, sp, #0x30
    c614:	bl	0 <LLVMInitializeAArch64AsmParser>
    c618:	ldr	x0, [x20, #8]
    c61c:	add	x1, sp, #0x30
    c620:	mov	x2, xzr
    c624:	mov	x3, xzr
    c628:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    c62c:	add	x0, sp, #0x10
    c630:	bl	0 <LLVMInitializeAArch64AsmParser>
    c634:	mov	x0, x23
    c638:	bl	0 <LLVMInitializeAArch64AsmParser>
    c63c:	b	c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>
    c640:	mov	x0, x8
    c644:	bl	0 <LLVMInitializeAArch64AsmParser>
    c648:	cbz	x1, cf14 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1598>
    c64c:	ldrb	w8, [x0]
    c650:	orr	w8, w8, #0x20
    c654:	cmp	w8, #0x63
    c658:	b.ne	c688 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd0c>  // b.any
    c65c:	add	x0, x0, #0x1
    c660:	sub	x1, x1, #0x1
    c664:	sub	x3, x29, #0x40
    c668:	mov	w2, #0xa                   	// #10
    c66c:	bl	0 <_ZN4llvm20getAsUnsignedIntegerENS_9StringRefEjRy>
    c670:	tbnz	w0, #0, c688 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd0c>
    c674:	ldur	x23, [x29, #-64]
    c678:	lsr	x8, x23, #32
    c67c:	cbnz	x8, c688 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd0c>
    c680:	cmp	w23, #0x10
    c684:	b.cc	cb9c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1220>  // b.lo, b.ul, b.last
    c688:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c68c:	add	x1, x1, #0x0
    c690:	sub	x0, x29, #0x40
    c694:	bl	0 <LLVMInitializeAArch64AsmParser>
    c698:	ldr	x0, [x20, #8]
    c69c:	sub	x2, x29, #0x40
    c6a0:	mov	x1, x21
    c6a4:	mov	x3, xzr
    c6a8:	mov	x4, xzr
    c6ac:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    c6b0:	b	c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>
    c6b4:	tbz	w24, #0, c6c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd44>
    c6b8:	sub	x0, x29, #0x40
    c6bc:	bl	0 <LLVMInitializeAArch64AsmParser>
    c6c0:	ldur	x24, [x29, #-56]
    c6c4:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
    c6c8:	ldur	x8, [x29, #-48]
    c6cc:	cmp	x0, x24
    c6d0:	sub	x9, x29, #0x40
    c6d4:	csel	x8, x8, x9, eq  // eq = none
    c6d8:	ldrb	w8, [x8, #28]
    c6dc:	and	w9, w8, #0x7
    c6e0:	cmp	w9, #0x3
    c6e4:	b.ne	c84c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xed0>  // b.any
    c6e8:	tbnz	w8, #3, c84c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xed0>
    c6ec:	ldr	x0, [x20, #8]
    c6f0:	ldr	x8, [x0]
    c6f4:	ldr	x8, [x8, #48]
    c6f8:	blr	x8
    c6fc:	mov	x24, x0
    c700:	mov	w0, #0x70                  	// #112
    c704:	bl	0 <_Znwm>
    c708:	mov	x8, x0
    c70c:	adrp	x25, 0 <LLVMInitializeAArch64AsmParser>
    c710:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c714:	add	x25, x25, #0x0
    c718:	mov	w26, #0x6                   	// #6
    c71c:	strb	wzr, [x8, #32]!
    c720:	str	x24, [x0, #104]
    c724:	add	x9, x9, #0x0
    c728:	mov	w24, #0x2                   	// #2
    c72c:	stp	x22, x9, [x0, #64]
    c730:	str	x25, [x0]
    c734:	str	w26, [x0, #48]
    c738:	str	w24, [x0, #80]
    c73c:	strb	wzr, [x0, #84]
    c740:	str	x22, [x0, #56]
    c744:	stp	x8, xzr, [x0, #16]
    c748:	str	x0, [sp, #48]
    c74c:	add	x1, sp, #0x30
    c750:	mov	x0, x19
    c754:	bl	0 <LLVMInitializeAArch64AsmParser>
    c758:	ldr	x0, [sp, #48]
    c75c:	cbz	x0, c76c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xdf0>
    c760:	ldr	x8, [x0]
    c764:	ldr	x8, [x8, #8]
    c768:	blr	x8
    c76c:	ldr	x0, [x20, #8]
    c770:	ldr	x8, [x0]
    c774:	ldr	x8, [x8, #48]
    c778:	blr	x8
    c77c:	mov	x20, x0
    c780:	mov	w0, #0x70                  	// #112
    c784:	bl	0 <_Znwm>
    c788:	mov	x8, x0
    c78c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c790:	add	x9, x9, #0x0
    c794:	strb	wzr, [x8, #32]!
    c798:	str	x25, [x0]
    c79c:	str	w26, [x0, #48]
    c7a0:	str	x20, [x0, #104]
    c7a4:	stp	x22, x9, [x0, #64]
    c7a8:	str	w24, [x0, #80]
    c7ac:	strb	wzr, [x0, #84]
    c7b0:	str	x22, [x0, #56]
    c7b4:	stp	x8, xzr, [x0, #16]
    c7b8:	str	x0, [sp, #48]
    c7bc:	add	x1, sp, #0x30
    c7c0:	mov	x0, x19
    c7c4:	bl	0 <LLVMInitializeAArch64AsmParser>
    c7c8:	ldr	x0, [sp, #48]
    c7cc:	cbz	x0, c8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf5c>
    c7d0:	ldr	x8, [x0]
    c7d4:	ldr	x8, [x8, #8]
    c7d8:	blr	x8
    c7dc:	b	c8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf5c>
    c7e0:	ldr	x0, [x20, #8]
    c7e4:	ldr	w23, [sp, #16]
    c7e8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c7ec:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c7f0:	ldr	x8, [x20, #8]
    c7f4:	mov	x20, x0
    c7f8:	ldr	x9, [x8]
    c7fc:	mov	x0, x8
    c800:	ldr	x9, [x9, #48]
    c804:	blr	x9
    c808:	mov	x21, x0
    c80c:	mov	w0, #0x70                  	// #112
    c810:	bl	0 <_Znwm>
    c814:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c818:	mov	x8, x0
    c81c:	add	x9, x9, #0x0
    c820:	strb	wzr, [x8, #32]!
    c824:	str	x9, [x0]
    c828:	mov	w9, #0x3                   	// #3
    c82c:	str	w9, [x0, #48]
    c830:	str	x21, [x0, #104]
    c834:	str	w23, [x0, #72]
    c838:	stur	xzr, [x0, #84]
    c83c:	stur	xzr, [x0, #76]
    c840:	stur	xzr, [x0, #89]
    c844:	stp	x22, x20, [x0, #56]
    c848:	b	cd94 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1418>
    c84c:	add	x8, sp, #0x30
    c850:	add	x24, x8, #0x8
    c854:	mov	x0, x24
    c858:	mov	x1, x23
    c85c:	bl	0 <LLVMInitializeAArch64AsmParser>
    c860:	add	x0, sp, #0x10
    c864:	bl	0 <LLVMInitializeAArch64AsmParser>
    c868:	ldr	x8, [x20, #8]
    c86c:	ldr	w10, [x0]
    c870:	ldr	x9, [x8]
    c874:	cmp	w10, #0x0
    c878:	mov	x0, x8
    c87c:	cset	w20, eq  // eq = none
    c880:	ldr	x9, [x9, #48]
    c884:	blr	x9
    c888:	mov	x3, x0
    c88c:	add	x8, sp, #0x8
    c890:	add	x0, sp, #0x30
    c894:	mov	w1, w20
    c898:	mov	x2, x22
    c89c:	bl	ea8c <_ZN12_GLOBAL__N_114AArch64Operand11CreateFPImmEN4llvm7APFloatEbNS1_5SMLocERNS1_9MCContextE>
    c8a0:	ldr	x8, [sp, #8]
    c8a4:	sub	x1, x29, #0x8
    c8a8:	mov	x0, x19
    c8ac:	str	xzr, [sp, #8]
    c8b0:	stur	x8, [x29, #-8]
    c8b4:	bl	0 <LLVMInitializeAArch64AsmParser>
    c8b8:	ldur	x0, [x29, #-8]
    c8bc:	cbz	x0, c8cc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf50>
    c8c0:	ldr	x8, [x0]
    c8c4:	ldr	x8, [x8, #8]
    c8c8:	blr	x8
    c8cc:	mov	x0, x24
    c8d0:	stur	xzr, [x29, #-8]
    c8d4:	bl	0 <LLVMInitializeAArch64AsmParser>
    c8d8:	add	x0, sp, #0x10
    c8dc:	bl	0 <LLVMInitializeAArch64AsmParser>
    c8e0:	mov	x0, x23
    c8e4:	bl	0 <LLVMInitializeAArch64AsmParser>
    c8e8:	ldr	x8, [x21]
    c8ec:	mov	x0, x21
    c8f0:	ldr	x8, [x8, #136]
    c8f4:	blr	x8
    c8f8:	b	cdbc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1440>
    c8fc:	ldp	x0, x1, [x23, #8]
    c900:	bl	0 <_ZN4llvm11AArch64PRFM16lookupPRFMByNameENS_9StringRefE>
    c904:	cbz	x0, c964 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfe8>
    c908:	ldr	x8, [x22]
    c90c:	ldrh	w24, [x0, #8]
    c910:	mov	x0, x22
    c914:	ldr	x8, [x8, #136]
    c918:	blr	x8
    c91c:	ldr	x0, [x20, #8]
    c920:	ldp	x22, x23, [x23, #8]
    c924:	ldr	x8, [x0]
    c928:	ldr	x8, [x8, #48]
    c92c:	blr	x8
    c930:	mov	x20, x0
    c934:	mov	w0, #0x70                  	// #112
    c938:	bl	0 <_Znwm>
    c93c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c940:	mov	x8, x0
    c944:	add	x9, x9, #0x0
    c948:	strb	wzr, [x8, #32]!
    c94c:	str	x9, [x0]
    c950:	mov	w9, #0x9                   	// #9
    c954:	b	cd7c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1400>
    c958:	ldp	x0, x1, [x23, #8]
    c95c:	bl	0 <_ZN4llvm14AArch64SVEPRFM19lookupSVEPRFMByNameENS_9StringRefE>
    c960:	cbnz	x0, c908 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf8c>
    c964:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c968:	add	x1, x1, #0x0
    c96c:	sub	x0, x29, #0x40
    c970:	bl	0 <LLVMInitializeAArch64AsmParser>
    c974:	ldr	x0, [x20, #8]
    c978:	sub	x1, x29, #0x40
    c97c:	mov	x2, xzr
    c980:	mov	x3, xzr
    c984:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    c988:	mov	w21, #0x2                   	// #2
    c98c:	b	cdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1444>
    c990:	ldp	x0, x1, [x22, #8]
    c994:	bl	0 <_ZN4llvm10AArch64TSB15lookupTSBByNameENS_9StringRefE>
    c998:	ldp	x8, x1, [x22, #8]
    c99c:	mov	x23, x0
    c9a0:	mov	x0, x8
    c9a4:	bl	0 <_ZN4llvm9AArch64DB14lookupDBByNameENS_9StringRefE>
    c9a8:	ldr	x8, [x20, #184]
    c9ac:	cmp	x8, #0x3
    c9b0:	b.ne	c9fc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1080>  // b.any
    c9b4:	ldr	x8, [x20, #176]
    c9b8:	mov	w12, #0x7369                	// #29545
    c9bc:	mov	w9, #0x62                  	// #98
    c9c0:	ldrh	w10, [x8]
    c9c4:	ldrb	w11, [x8, #2]
    c9c8:	eor	w10, w10, w12
    c9cc:	eor	w11, w11, w9
    c9d0:	orr	w10, w10, w11
    c9d4:	tst	w10, #0xffff
    c9d8:	b.eq	cd18 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x139c>  // b.none
    c9dc:	ldrh	w10, [x8]
    c9e0:	ldrb	w8, [x8, #2]
    c9e4:	mov	w11, #0x7374                	// #29556
    c9e8:	eor	w10, w10, w11
    c9ec:	eor	w8, w8, w9
    c9f0:	orr	w8, w10, w8
    c9f4:	tst	w8, #0xffff
    c9f8:	b.eq	ce2c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14b0>  // b.none
    c9fc:	cmp	x0, #0x0
    ca00:	cset	w8, ne  // ne = any
    ca04:	cbnz	x23, ce4c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14d0>
    ca08:	cbnz	x0, ce4c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14d0>
    ca0c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ca10:	add	x1, x1, #0x0
    ca14:	b	c96c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xff0>
    ca18:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ca1c:	add	x1, x1, #0x0
    ca20:	b	c690 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd14>
    ca24:	cmp	w9, #0x17
    ca28:	b.eq	ca3c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x10c0>  // b.none
    ca2c:	cmp	w9, #0x15
    ca30:	b.eq	c018 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x69c>  // b.none
    ca34:	cmp	w9, #0x13
    ca38:	b.ne	cdfc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1480>  // b.any
    ca3c:	ldr	x10, [sp, #16]
    ca40:	cbz	x10, cde0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1464>
    ca44:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ca48:	add	x1, x1, #0x0
    ca4c:	b	c690 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd14>
    ca50:	mov	w0, w22
    ca54:	bl	0 <_ZN4llvm11AArch64PRFM20lookupPRFMByEncodingEh>
    ca58:	cbz	x0, ca80 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1104>
    ca5c:	ldr	x23, [x0]
    ca60:	cbz	x23, cc04 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1288>
    ca64:	mov	x0, x23
    ca68:	bl	0 <strlen>
    ca6c:	mov	x24, x0
    ca70:	b	cc08 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x128c>
    ca74:	mov	w0, w22
    ca78:	bl	0 <_ZN4llvm14AArch64SVEPRFM23lookupSVEPRFMByEncodingEh>
    ca7c:	cbnz	x0, ca5c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x10e0>
    ca80:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
    ca84:	mov	x24, xzr
    ca88:	add	x23, x23, #0x0
    ca8c:	b	cc08 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x128c>
    ca90:	bl	0 <_ZN4llvm9AArch64DB18lookupDBByEncodingEh>
    ca94:	ldr	w24, [x22, #16]
    ca98:	cbz	x0, cd34 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x13b8>
    ca9c:	ldr	x22, [x0]
    caa0:	cbnz	x22, cd3c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x13c0>
    caa4:	mov	w23, wzr
    caa8:	b	cd48 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x13cc>
    caac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cab0:	add	x1, x1, #0x0
    cab4:	b	c690 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd14>
    cab8:	mov	x0, x25
    cabc:	bl	0 <LLVMInitializeAArch64AsmParser>
    cac0:	cmp	x0, #0x100
    cac4:	cset	w8, lt  // lt = tstop
    cac8:	bic	w8, w8, w24
    cacc:	tbnz	w8, #0, cc50 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x12d4>
    cad0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cad4:	add	x1, x1, #0x0
    cad8:	b	c96c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xff0>
    cadc:	ldr	q0, [x9]
    cae0:	str	q0, [x21]
    cae4:	ldr	x9, [x0, #8]
    cae8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    caec:	add	x1, x1, #0x0
    caf0:	str	x9, [sp, #56]
    caf4:	stp	x8, xzr, [x0]
    caf8:	strb	wzr, [x0, #16]
    cafc:	add	x0, sp, #0x30
    cb00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    cb04:	sub	x8, x29, #0x40
    cb08:	add	x22, x8, #0x10
    cb0c:	stur	x22, [x29, #-64]
    cb10:	mov	x8, x0
    cb14:	ldr	x9, [x8], #16
    cb18:	cmp	x9, x8
    cb1c:	b.eq	cb30 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x11b4>  // b.none
    cb20:	stur	x9, [x29, #-64]
    cb24:	ldr	x9, [x0, #16]
    cb28:	stur	x9, [x29, #-48]
    cb2c:	b	cb38 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x11bc>
    cb30:	ldr	q0, [x9]
    cb34:	str	q0, [x22]
    cb38:	ldr	x9, [x0, #8]
    cb3c:	sub	x1, x29, #0x40
    cb40:	stur	x9, [x29, #-56]
    cb44:	stp	x8, xzr, [x0]
    cb48:	strb	wzr, [x0, #16]
    cb4c:	sub	x0, x29, #0x20
    cb50:	bl	0 <LLVMInitializeAArch64AsmParser>
    cb54:	ldr	x0, [x20, #8]
    cb58:	sub	x1, x29, #0x20
    cb5c:	mov	x2, xzr
    cb60:	mov	x3, xzr
    cb64:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    cb68:	ldur	x0, [x29, #-64]
    cb6c:	cmp	x0, x22
    cb70:	b.eq	cb78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x11fc>  // b.none
    cb74:	bl	0 <_ZdlPv>
    cb78:	ldr	x0, [sp, #48]
    cb7c:	cmp	x0, x21
    cb80:	b.eq	cb88 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x120c>  // b.none
    cb84:	bl	0 <_ZdlPv>
    cb88:	ldr	x0, [sp, #16]
    cb8c:	cmp	x0, x19
    cb90:	b.eq	c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>  // b.none
    cb94:	bl	0 <_ZdlPv>
    cb98:	b	c988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x100c>
    cb9c:	ldr	x8, [x22]
    cba0:	mov	x0, x22
    cba4:	ldr	x8, [x8, #136]
    cba8:	blr	x8
    cbac:	ldr	x0, [x20, #8]
    cbb0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cbb4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    cbb8:	ldr	x8, [x20, #8]
    cbbc:	mov	x20, x0
    cbc0:	ldr	x9, [x8]
    cbc4:	mov	x0, x8
    cbc8:	ldr	x9, [x9, #48]
    cbcc:	blr	x9
    cbd0:	mov	x22, x0
    cbd4:	mov	w0, #0x70                  	// #112
    cbd8:	bl	0 <_Znwm>
    cbdc:	mov	x8, x0
    cbe0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    cbe4:	add	x9, x9, #0x0
    cbe8:	mov	w10, #0x8                   	// #8
    cbec:	strb	wzr, [x8, #32]!
    cbf0:	str	x9, [x0]
    cbf4:	str	w10, [x0, #48]
    cbf8:	str	x22, [x0, #104]
    cbfc:	str	w23, [x0, #72]
    cc00:	b	c5a8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc2c>
    cc04:	mov	x24, xzr
    cc08:	ldr	x0, [x20, #8]
    cc0c:	ldr	x8, [x0]
    cc10:	ldr	x8, [x8, #48]
    cc14:	blr	x8
    cc18:	mov	x20, x0
    cc1c:	mov	w0, #0x70                  	// #112
    cc20:	bl	0 <_Znwm>
    cc24:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    cc28:	mov	x8, x0
    cc2c:	add	x9, x9, #0x0
    cc30:	strb	wzr, [x8, #32]!
    cc34:	str	x9, [x0]
    cc38:	mov	w9, #0x9                   	// #9
    cc3c:	str	w9, [x0, #48]
    cc40:	str	x20, [x0, #104]
    cc44:	str	x23, [x0, #72]
    cc48:	stp	w24, w22, [x0, #80]
    cc4c:	b	cd90 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1414>
    cc50:	mov	x0, x25
    cc54:	bl	0 <LLVMInitializeAArch64AsmParser>
    cc58:	lsl	w9, w0, #24
    cc5c:	and	w11, w0, #0x40
    cc60:	and	w9, w9, #0x80000000
    cc64:	lsr	w11, w11, #6
    cc68:	lsr	w8, w0, #4
    cc6c:	bfi	w9, w11, #30, #1
    cc70:	sbfx	w10, w0, #6, #1
    cc74:	bfi	w9, w8, #23, #2
    cc78:	and	w10, w10, #0x3e000000
    cc7c:	bfi	w9, w0, #19, #4
    cc80:	orr	w8, w9, w10
    cc84:	eor	w8, w8, #0x40000000
    cc88:	fmov	s0, w8
    cc8c:	fcvt	d0, s0
    cc90:	sub	x0, x29, #0x40
    cc94:	sub	x23, x29, #0x40
    cc98:	bl	0 <LLVMInitializeAArch64AsmParser>
    cc9c:	add	x8, sp, #0x30
    cca0:	add	x24, x8, #0x8
    cca4:	add	x23, x23, #0x8
    cca8:	mov	x0, x24
    ccac:	mov	x1, x23
    ccb0:	bl	0 <LLVMInitializeAArch64AsmParser>
    ccb4:	ldr	x0, [x20, #8]
    ccb8:	ldr	x8, [x0]
    ccbc:	ldr	x8, [x8, #48]
    ccc0:	blr	x8
    ccc4:	mov	x3, x0
    ccc8:	sub	x8, x29, #0x20
    cccc:	add	x0, sp, #0x30
    ccd0:	mov	w1, #0x1                   	// #1
    ccd4:	mov	x2, x22
    ccd8:	bl	ea8c <_ZN12_GLOBAL__N_114AArch64Operand11CreateFPImmEN4llvm7APFloatEbNS1_5SMLocERNS1_9MCContextE>
    ccdc:	ldur	x8, [x29, #-32]
    cce0:	add	x1, sp, #0x10
    cce4:	mov	x0, x19
    cce8:	stur	xzr, [x29, #-32]
    ccec:	str	x8, [sp, #16]
    ccf0:	bl	0 <LLVMInitializeAArch64AsmParser>
    ccf4:	ldr	x0, [sp, #16]
    ccf8:	cbz	x0, cd08 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x138c>
    ccfc:	ldr	x8, [x0]
    cd00:	ldr	x8, [x8, #8]
    cd04:	blr	x8
    cd08:	mov	x0, x24
    cd0c:	str	xzr, [sp, #16]
    cd10:	bl	0 <LLVMInitializeAArch64AsmParser>
    cd14:	b	c8e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf64>
    cd18:	cbz	x0, cd28 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x13ac>
    cd1c:	ldrh	w10, [x0, #8]
    cd20:	cmp	w10, #0xf
    cd24:	b.eq	c9dc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1060>  // b.none
    cd28:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cd2c:	add	x1, x1, #0x0
    cd30:	b	c96c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xff0>
    cd34:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    cd38:	add	x22, x22, #0x0
    cd3c:	mov	x0, x22
    cd40:	bl	0 <strlen>
    cd44:	mov	x23, x0
    cd48:	ldr	x0, [x20, #8]
    cd4c:	ldr	x8, [x0]
    cd50:	ldr	x8, [x8, #48]
    cd54:	blr	x8
    cd58:	mov	x20, x0
    cd5c:	mov	w0, #0x70                  	// #112
    cd60:	bl	0 <_Znwm>
    cd64:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    cd68:	mov	x8, x0
    cd6c:	add	x9, x9, #0x0
    cd70:	strb	wzr, [x8, #32]!
    cd74:	str	x9, [x0]
    cd78:	mov	w9, #0xc                   	// #12
    cd7c:	str	w9, [x0, #48]
    cd80:	str	x20, [x0, #104]
    cd84:	str	x22, [x0, #72]
    cd88:	str	w24, [x0, #84]
    cd8c:	str	w23, [x0, #80]
    cd90:	stp	x21, x21, [x0, #56]
    cd94:	stp	x8, xzr, [x0, #16]
    cd98:	stur	x0, [x29, #-64]
    cd9c:	sub	x1, x29, #0x40
    cda0:	mov	x0, x19
    cda4:	bl	0 <LLVMInitializeAArch64AsmParser>
    cda8:	ldur	x0, [x29, #-64]
    cdac:	cbz	x0, cdbc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1440>
    cdb0:	ldr	x8, [x0]
    cdb4:	ldr	x8, [x8, #8]
    cdb8:	blr	x8
    cdbc:	mov	w21, wzr
    cdc0:	mov	w0, w21
    cdc4:	ldp	x20, x19, [sp, #208]
    cdc8:	ldp	x22, x21, [sp, #192]
    cdcc:	ldp	x24, x23, [sp, #176]
    cdd0:	ldp	x26, x25, [sp, #160]
    cdd4:	ldp	x29, x30, [sp, #144]
    cdd8:	add	sp, sp, #0xe0
    cddc:	ret
    cde0:	cmp	w9, #0x17
    cde4:	b.hi	cdfc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1480>  // b.pmore
    cde8:	mov	w10, #0x1                   	// #1
    cdec:	lsl	w9, w10, w9
    cdf0:	mov	w10, #0xa80000              	// #11010048
    cdf4:	tst	w9, w10
    cdf8:	b.ne	c018 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x69c>  // b.any
    cdfc:	cmp	w8, #0x18
    ce00:	b.hi	ce18 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x149c>  // b.pmore
    ce04:	mov	w9, #0x1                   	// #1
    ce08:	lsl	w9, w9, w8
    ce0c:	mov	w10, #0x1500000             	// #22020096
    ce10:	tst	w9, w10
    ce14:	b.ne	c018 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x69c>  // b.any
    ce18:	cmp	w8, #0x111
    ce1c:	b.eq	c018 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x69c>  // b.none
    ce20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ce24:	add	x1, x1, #0x0
    ce28:	b	c690 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd14>
    ce2c:	cbz	x23, ce38 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14bc>
    ce30:	ldrh	w8, [x23, #8]
    ce34:	cbz	w8, ce44 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14c8>
    ce38:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ce3c:	add	x1, x1, #0x0
    ce40:	b	c96c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xff0>
    ce44:	cmp	x0, #0x0
    ce48:	cset	w8, ne  // ne = any
    ce4c:	add	x9, x0, #0x8
    ce50:	add	x10, x23, #0x8
    ce54:	cmp	w8, #0x0
    ce58:	csel	x8, x9, x10, ne  // ne = any
    ce5c:	ldr	x0, [x20, #8]
    ce60:	ldp	x23, x24, [x22, #8]
    ce64:	ldrh	w25, [x8]
    ce68:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ce6c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ce70:	ldr	x8, [x20, #8]
    ce74:	mov	x20, x0
    ce78:	ldr	x9, [x8]
    ce7c:	mov	x0, x8
    ce80:	ldr	x9, [x9, #48]
    ce84:	blr	x9
    ce88:	mov	x22, x0
    ce8c:	mov	w0, #0x70                  	// #112
    ce90:	bl	0 <_Znwm>
    ce94:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ce98:	mov	x8, x0
    ce9c:	add	x9, x9, #0x0
    cea0:	strb	wzr, [x8, #32]!
    cea4:	str	x9, [x0]
    cea8:	mov	w9, #0xc                   	// #12
    ceac:	str	w9, [x0, #48]
    ceb0:	str	x22, [x0, #104]
    ceb4:	stp	x20, x23, [x0, #64]
    ceb8:	stp	w24, w25, [x0, #80]
    cebc:	str	x20, [x0, #56]
    cec0:	stp	x8, xzr, [x0, #16]
    cec4:	stur	x0, [x29, #-64]
    cec8:	sub	x1, x29, #0x40
    cecc:	mov	x0, x19
    ced0:	bl	0 <LLVMInitializeAArch64AsmParser>
    ced4:	ldur	x0, [x29, #-64]
    ced8:	cbz	x0, c8e8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf6c>
    cedc:	ldr	x8, [x0]
    cee0:	ldr	x8, [x8, #8]
    cee4:	blr	x8
    cee8:	b	c8e8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf6c>
    ceec:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    cef0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cef4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    cef8:	add	x0, x0, #0x0
    cefc:	add	x1, x1, #0x0
    cf00:	add	x3, x3, #0x0
    cf04:	mov	w2, #0x69                  	// #105
    cf08:	bl	0 <__assert_fail>
    cf0c:	sub	x0, x29, #0x20
    cf10:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    cf14:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    cf18:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cf1c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    cf20:	add	x0, x0, #0x0
    cf24:	add	x1, x1, #0x0
    cf28:	add	x3, x3, #0x0
    cf2c:	mov	w2, #0xfa                  	// #250
    cf30:	bl	0 <__assert_fail>
    cf34:	add	x0, sp, #0x30
    cf38:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    cf3c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    cf40:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cf44:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    cf48:	add	x0, x0, #0x0
    cf4c:	add	x1, x1, #0x0
    cf50:	add	x3, x3, #0x0
    cf54:	mov	w2, #0x1679                	// #5753
    cf58:	bl	0 <__assert_fail>

000000000000cf5c <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    cf5c:	sub	sp, sp, #0x60
    cf60:	stp	x29, x30, [sp, #32]
    cf64:	stp	x24, x23, [sp, #48]
    cf68:	stp	x22, x21, [sp, #64]
    cf6c:	stp	x20, x19, [sp, #80]
    cf70:	add	x29, sp, #0x20
    cf74:	ldr	x22, [x0, #8]
    cf78:	mov	x21, x0
    cf7c:	mov	x19, x1
    cf80:	mov	x0, x22
    cf84:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cf88:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    cf8c:	mov	x20, x0
    cf90:	mov	x0, x22
    cf94:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cf98:	ldr	w8, [x0]
    cf9c:	cmp	w8, #0x25
    cfa0:	b.ne	cfb8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x5c>  // b.any
    cfa4:	ldr	x8, [x22]
    cfa8:	mov	x0, x22
    cfac:	ldr	x8, [x8, #136]
    cfb0:	blr	x8
    cfb4:	b	cfcc <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x70>
    cfb8:	mov	x0, x22
    cfbc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cfc0:	ldr	w8, [x0]
    cfc4:	cmp	w8, #0x4
    cfc8:	b.ne	d038 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xdc>  // b.any
    cfcc:	sub	x1, x29, #0x8
    cfd0:	mov	x0, x21
    cfd4:	stur	xzr, [x29, #-8]
    cfd8:	bl	aa58 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    cfdc:	tbnz	w0, #0, d12c <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d0>
    cfe0:	mov	x0, x22
    cfe4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cfe8:	ldr	w8, [x0]
    cfec:	cmp	w8, #0x19
    cff0:	b.ne	d040 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xe4>  // b.any
    cff4:	ldr	x8, [x22]
    cff8:	mov	x0, x22
    cffc:	ldr	x8, [x8, #136]
    d000:	blr	x8
    d004:	mov	x0, x22
    d008:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d00c:	ldr	w8, [x0]
    d010:	cmp	w8, #0x2
    d014:	b.ne	d0f4 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x198>  // b.any
    d018:	mov	x0, x22
    d01c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d020:	ldr	w9, [x0]
    d024:	mov	x8, x0
    d028:	cmp	w9, #0x2
    d02c:	b.ne	d0c8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x16c>  // b.any
    d030:	ldp	x0, x1, [x8, #8]
    d034:	b	d0d0 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x174>
    d038:	mov	w0, #0x1                   	// #1
    d03c:	b	d130 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d4>
    d040:	mov	x0, x22
    d044:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d048:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d04c:	ldr	x8, [x21, #8]
    d050:	ldur	x23, [x29, #-8]
    d054:	mov	x21, x0
    d058:	ldr	x9, [x8]
    d05c:	mov	x0, x8
    d060:	ldr	x9, [x9, #48]
    d064:	blr	x9
    d068:	mov	x22, x0
    d06c:	mov	w0, #0x70                  	// #112
    d070:	bl	0 <_Znwm>
    d074:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d078:	mov	x8, x0
    d07c:	add	x9, x9, #0x0
    d080:	strb	wzr, [x8, #32]!
    d084:	str	x9, [x0]
    d088:	str	wzr, [x0, #48]
    d08c:	str	x22, [x0, #104]
    d090:	stp	x21, x23, [x0, #64]
    d094:	str	x20, [x0, #56]
    d098:	stp	x8, xzr, [x0, #16]
    d09c:	str	x0, [sp]
    d0a0:	mov	x1, sp
    d0a4:	mov	x0, x19
    d0a8:	bl	0 <LLVMInitializeAArch64AsmParser>
    d0ac:	ldr	x0, [sp]
    d0b0:	cbz	x0, d0c0 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x164>
    d0b4:	ldr	x8, [x0]
    d0b8:	ldr	x8, [x8, #8]
    d0bc:	blr	x8
    d0c0:	mov	w0, wzr
    d0c4:	b	d130 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d4>
    d0c8:	mov	x0, x8
    d0cc:	bl	0 <LLVMInitializeAArch64AsmParser>
    d0d0:	cmp	x1, #0x3
    d0d4:	stp	x0, x1, [sp]
    d0d8:	b.ne	d0f4 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x198>  // b.any
    d0dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d0e0:	add	x1, x1, #0x0
    d0e4:	mov	x0, sp
    d0e8:	mov	w2, #0x3                   	// #3
    d0ec:	bl	0 <_ZNK4llvm9StringRef13compare_lowerES0_>
    d0f0:	cbz	w0, d148 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1ec>
    d0f4:	mov	x0, x22
    d0f8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d0fc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d100:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d104:	mov	x19, x0
    d108:	add	x1, x1, #0x0
    d10c:	mov	x0, sp
    d110:	bl	0 <LLVMInitializeAArch64AsmParser>
    d114:	ldr	x0, [x21, #8]
    d118:	mov	x2, sp
    d11c:	mov	x1, x19
    d120:	mov	x3, xzr
    d124:	mov	x4, xzr
    d128:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    d12c:	mov	w0, #0x2                   	// #2
    d130:	ldp	x20, x19, [sp, #80]
    d134:	ldp	x22, x21, [sp, #64]
    d138:	ldp	x24, x23, [sp, #48]
    d13c:	ldp	x29, x30, [sp, #32]
    d140:	add	sp, sp, #0x60
    d144:	ret
    d148:	ldr	x8, [x22]
    d14c:	mov	x0, x22
    d150:	ldr	x8, [x8, #136]
    d154:	blr	x8
    d158:	ldr	x0, [x21, #8]
    d15c:	mov	w1, #0x25                  	// #37
    d160:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    d164:	mov	x0, x22
    d168:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d16c:	ldr	w23, [x0]
    d170:	mov	x0, x22
    d174:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d178:	cmp	w23, #0x4
    d17c:	b.ne	d0fc <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1a0>  // b.any
    d180:	bl	0 <LLVMInitializeAArch64AsmParser>
    d184:	tbnz	x0, #63, d1fc <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2a0>
    d188:	ldr	x8, [x22]
    d18c:	mov	x23, x0
    d190:	mov	x0, x22
    d194:	ldr	x8, [x8, #136]
    d198:	blr	x8
    d19c:	ldur	x24, [x29, #-8]
    d1a0:	mov	x0, x22
    d1a4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d1a8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d1ac:	mov	x22, x0
    d1b0:	cbnz	x23, d218 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2bc>
    d1b4:	cbz	x24, d218 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2bc>
    d1b8:	ldr	x0, [x21, #8]
    d1bc:	ldur	x23, [x29, #-8]
    d1c0:	ldr	x8, [x0]
    d1c4:	ldr	x8, [x8, #48]
    d1c8:	blr	x8
    d1cc:	mov	x21, x0
    d1d0:	mov	w0, #0x70                  	// #112
    d1d4:	bl	0 <_Znwm>
    d1d8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d1dc:	mov	x8, x0
    d1e0:	add	x9, x9, #0x0
    d1e4:	strb	wzr, [x8, #32]!
    d1e8:	str	x9, [x0]
    d1ec:	str	wzr, [x0, #48]
    d1f0:	str	x21, [x0, #104]
    d1f4:	str	x23, [x0, #72]
    d1f8:	b	d260 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x304>
    d1fc:	mov	x0, x22
    d200:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d204:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d208:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d20c:	mov	x19, x0
    d210:	add	x1, x1, #0x0
    d214:	b	d10c <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b0>
    d218:	ldr	x0, [x21, #8]
    d21c:	ldur	x24, [x29, #-8]
    d220:	ldr	x8, [x0]
    d224:	ldr	x8, [x8, #48]
    d228:	blr	x8
    d22c:	mov	x21, x0
    d230:	mov	w0, #0x70                  	// #112
    d234:	bl	0 <_Znwm>
    d238:	mov	x8, x0
    d23c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d240:	add	x9, x9, #0x0
    d244:	mov	w10, #0x1                   	// #1
    d248:	strb	wzr, [x8, #32]!
    d24c:	str	x9, [x0]
    d250:	str	w10, [x0, #48]
    d254:	str	x21, [x0, #104]
    d258:	str	x24, [x0, #72]
    d25c:	str	w23, [x0, #80]
    d260:	stp	x20, x22, [x0, #56]
    d264:	b	d098 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x13c>

000000000000d268 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE>:
    d268:	sub	sp, sp, #0x80
    d26c:	stp	x29, x30, [sp, #32]
    d270:	str	x27, [sp, #48]
    d274:	stp	x26, x25, [sp, #64]
    d278:	stp	x24, x23, [sp, #80]
    d27c:	stp	x22, x21, [sp, #96]
    d280:	stp	x20, x19, [sp, #112]
    d284:	add	x29, sp, #0x20
    d288:	mov	x22, x0
    d28c:	ldr	x0, [x0, #8]
    d290:	mov	x19, x1
    d294:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d298:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d29c:	mov	x20, x0
    d2a0:	add	x1, x29, #0x1c
    d2a4:	mov	x0, x22
    d2a8:	bl	6118 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    d2ac:	mov	w21, w0
    d2b0:	cbnz	w0, d48c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x224>
    d2b4:	ldr	x0, [x22, #8]
    d2b8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d2bc:	ldr	w8, [x0]
    d2c0:	cmp	w8, #0x19
    d2c4:	b.ne	d368 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x100>  // b.any
    d2c8:	ldr	x0, [x22, #8]
    d2cc:	ldr	x8, [x0]
    d2d0:	ldr	x8, [x8, #136]
    d2d4:	blr	x8
    d2d8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d2dc:	ldr	d0, [x8]
    d2e0:	add	x8, sp, #0x8
    d2e4:	add	x8, x8, #0x10
    d2e8:	add	x1, sp, #0x8
    d2ec:	mov	x0, x22
    d2f0:	str	x8, [sp, #8]
    d2f4:	str	d0, [sp, #16]
    d2f8:	bl	b4e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    d2fc:	mov	w21, w0
    d300:	cbnz	w0, d484 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x21c>
    d304:	ldr	w8, [sp, #16]
    d308:	cbz	w8, d4b0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x248>
    d30c:	ldr	x9, [sp, #8]
    d310:	ldr	w25, [x29, #28]
    d314:	add	x8, x9, x8, lsl #3
    d318:	ldur	x24, [x8, #-8]
    d31c:	ldr	x8, [x24]
    d320:	mov	x0, x24
    d324:	ldr	x8, [x8, #80]
    d328:	blr	x8
    d32c:	ldr	x8, [x22, #8]
    d330:	mov	x22, x0
    d334:	ldr	x9, [x8]
    d338:	mov	x0, x8
    d33c:	ldr	x9, [x9, #48]
    d340:	blr	x9
    d344:	ldr	w8, [x24, #48]
    d348:	mov	x23, x0
    d34c:	cmp	w8, #0x3
    d350:	b.eq	d400 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x198>  // b.none
    d354:	cmp	w8, #0xa
    d358:	b.ne	d4d0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x268>  // b.any
    d35c:	add	x8, x24, #0x48
    d360:	add	x9, x24, #0x4c
    d364:	b	d408 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x1a0>
    d368:	ldr	x0, [x22, #8]
    d36c:	ldr	w23, [x29, #28]
    d370:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d374:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d378:	ldr	x8, [x22, #8]
    d37c:	mov	x21, x0
    d380:	ldr	x9, [x8]
    d384:	mov	x0, x8
    d388:	ldr	x9, [x9, #48]
    d38c:	blr	x9
    d390:	mov	x22, x0
    d394:	mov	w0, #0x70                  	// #112
    d398:	bl	0 <_Znwm>
    d39c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d3a0:	mov	x8, x0
    d3a4:	add	x9, x9, #0x0
    d3a8:	strb	wzr, [x8, #32]!
    d3ac:	str	x9, [x0]
    d3b0:	mov	w9, #0x3                   	// #3
    d3b4:	str	w9, [x0, #48]
    d3b8:	str	x22, [x0, #104]
    d3bc:	str	w23, [x0, #72]
    d3c0:	stur	xzr, [x0, #84]
    d3c4:	stur	xzr, [x0, #76]
    d3c8:	stur	xzr, [x0, #89]
    d3cc:	stp	x20, x21, [x0, #56]
    d3d0:	stp	x8, xzr, [x0, #16]
    d3d4:	str	x0, [sp, #8]
    d3d8:	add	x1, sp, #0x8
    d3dc:	mov	x0, x19
    d3e0:	bl	0 <LLVMInitializeAArch64AsmParser>
    d3e4:	ldr	x0, [sp, #8]
    d3e8:	cbz	x0, d3f8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x190>
    d3ec:	ldr	x8, [x0]
    d3f0:	ldr	x8, [x8, #8]
    d3f4:	blr	x8
    d3f8:	mov	w21, wzr
    d3fc:	b	d48c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x224>
    d400:	add	x8, x24, #0x58
    d404:	add	x9, x24, #0x5c
    d408:	ldr	w26, [x8]
    d40c:	ldr	w27, [x9]
    d410:	mov	x0, x24
    d414:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
    d418:	mov	w24, w0
    d41c:	mov	w0, #0x70                  	// #112
    d420:	bl	0 <_Znwm>
    d424:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d428:	mov	x8, x0
    d42c:	add	x9, x9, #0x0
    d430:	strb	wzr, [x8, #32]!
    d434:	str	x9, [x0]
    d438:	mov	w9, #0x3                   	// #3
    d43c:	str	w9, [x0, #48]
    d440:	and	w9, w24, #0x1
    d444:	str	x23, [x0, #104]
    d448:	stp	w25, wzr, [x0, #72]
    d44c:	str	xzr, [x0, #80]
    d450:	stp	w26, w27, [x0, #88]
    d454:	strb	w9, [x0, #96]
    d458:	stp	x20, x22, [x0, #56]
    d45c:	stp	x8, xzr, [x0, #16]
    d460:	str	x0, [sp]
    d464:	mov	x1, sp
    d468:	mov	x0, x19
    d46c:	bl	0 <LLVMInitializeAArch64AsmParser>
    d470:	ldr	x0, [sp]
    d474:	cbz	x0, d484 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x21c>
    d478:	ldr	x8, [x0]
    d47c:	ldr	x8, [x8, #8]
    d480:	blr	x8
    d484:	add	x0, sp, #0x8
    d488:	bl	0 <LLVMInitializeAArch64AsmParser>
    d48c:	mov	w0, w21
    d490:	ldp	x20, x19, [sp, #112]
    d494:	ldp	x22, x21, [sp, #96]
    d498:	ldp	x24, x23, [sp, #80]
    d49c:	ldp	x26, x25, [sp, #64]
    d4a0:	ldr	x27, [sp, #48]
    d4a4:	ldp	x29, x30, [sp, #32]
    d4a8:	add	sp, sp, #0x80
    d4ac:	ret
    d4b0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    d4b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d4b8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d4bc:	add	x0, x0, #0x0
    d4c0:	add	x1, x1, #0x0
    d4c4:	add	x3, x3, #0x0
    d4c8:	mov	w2, #0xa7                  	// #167
    d4cc:	bl	0 <__assert_fail>
    d4d0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    d4d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d4d8:	add	x0, x0, #0x0
    d4dc:	add	x1, x1, #0x0
    d4e0:	mov	w2, #0x261                 	// #609
    d4e4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000d4e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    d4e8:	sub	sp, sp, #0xa0
    d4ec:	stp	x29, x30, [sp, #64]
    d4f0:	str	x27, [sp, #80]
    d4f4:	stp	x26, x25, [sp, #96]
    d4f8:	stp	x24, x23, [sp, #112]
    d4fc:	stp	x22, x21, [sp, #128]
    d500:	stp	x20, x19, [sp, #144]
    d504:	add	x29, sp, #0x40
    d508:	ldr	x19, [x0, #8]
    d50c:	mov	x21, x0
    d510:	mov	x20, x1
    d514:	mov	x0, x19
    d518:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d51c:	ldr	w8, [x0]
    d520:	cmp	w8, #0x2
    d524:	b.ne	d578 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x90>  // b.any
    d528:	mov	x22, x0
    d52c:	ldr	x0, [x0, #8]
    d530:	ldr	x1, [x22, #16]
    d534:	bl	0 <_ZN4llvm13AArch64SysReg18lookupSysRegByNameENS_9StringRefE>
    d538:	cbz	x0, d580 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x98>
    d53c:	mov	x23, x0
    d540:	mov	x0, x21
    d544:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    d548:	ldur	q0, [x0, #184]
    d54c:	ldr	x8, [x0, #200]
    d550:	add	x1, sp, #0x20
    d554:	mov	x0, x23
    d558:	str	q0, [sp, #32]
    d55c:	str	x8, [sp, #48]
    d560:	bl	0 <LLVMInitializeAArch64AsmParser>
    d564:	tbz	w0, #0, d580 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x98>
    d568:	ldrb	w8, [x23, #12]
    d56c:	cbz	w8, d594 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xac>
    d570:	ldr	w25, [x23, #8]
    d574:	b	d598 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xb0>
    d578:	mov	w0, #0x1                   	// #1
    d57c:	b	d690 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1a8>
    d580:	ldp	x0, x1, [x22, #8]
    d584:	bl	0 <_ZN4llvm13AArch64SysReg20parseGenericRegisterENS_9StringRefE>
    d588:	mov	w23, w0
    d58c:	mov	w25, w0
    d590:	b	d5ac <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xc4>
    d594:	mov	w25, #0xffffffff            	// #-1
    d598:	ldrb	w8, [x23, #13]
    d59c:	cbz	w8, d5a8 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xc0>
    d5a0:	ldr	w23, [x23, #8]
    d5a4:	b	d5ac <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xc4>
    d5a8:	mov	w23, #0xffffffff            	// #-1
    d5ac:	ldp	x0, x1, [x22, #8]
    d5b0:	bl	0 <_ZN4llvm13AArch64PState18lookupPStateByNameENS_9StringRefE>
    d5b4:	cbz	x0, d5ec <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x104>
    d5b8:	mov	x24, x0
    d5bc:	mov	x0, x21
    d5c0:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    d5c4:	ldur	q0, [x0, #184]
    d5c8:	ldr	x8, [x0, #200]
    d5cc:	mov	x1, sp
    d5d0:	mov	x0, x24
    d5d4:	str	q0, [sp]
    d5d8:	str	x8, [sp, #16]
    d5dc:	bl	0 <LLVMInitializeAArch64AsmParser>
    d5e0:	tbz	w0, #0, d5ec <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x104>
    d5e4:	ldrh	w24, [x24, #8]
    d5e8:	b	d5f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x108>
    d5ec:	mov	w24, #0xffffffff            	// #-1
    d5f0:	ldr	x0, [x21, #8]
    d5f4:	ldp	x26, x27, [x22, #8]
    d5f8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d5fc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d600:	ldr	x8, [x21, #8]
    d604:	mov	x21, x0
    d608:	ldr	x9, [x8]
    d60c:	mov	x0, x8
    d610:	ldr	x9, [x9, #48]
    d614:	blr	x9
    d618:	mov	x22, x0
    d61c:	mov	w0, #0x70                  	// #112
    d620:	bl	0 <_Znwm>
    d624:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d628:	mov	x8, x0
    d62c:	add	x9, x9, #0x0
    d630:	strb	wzr, [x8, #32]!
    d634:	str	x9, [x0]
    d638:	mov	w9, #0x7                   	// #7
    d63c:	str	w9, [x0, #48]
    d640:	str	x22, [x0, #104]
    d644:	stp	x21, x26, [x0, #64]
    d648:	stp	w27, w25, [x0, #80]
    d64c:	stp	w23, w24, [x0, #88]
    d650:	str	x21, [x0, #56]
    d654:	stp	x8, xzr, [x0, #16]
    d658:	str	x0, [x29, #24]
    d65c:	add	x1, x29, #0x18
    d660:	mov	x0, x20
    d664:	bl	0 <LLVMInitializeAArch64AsmParser>
    d668:	ldr	x0, [x29, #24]
    d66c:	cbz	x0, d67c <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x194>
    d670:	ldr	x8, [x0]
    d674:	ldr	x8, [x8, #8]
    d678:	blr	x8
    d67c:	ldr	x8, [x19]
    d680:	mov	x0, x19
    d684:	ldr	x8, [x8, #136]
    d688:	blr	x8
    d68c:	mov	w0, wzr
    d690:	ldp	x20, x19, [sp, #144]
    d694:	ldp	x22, x21, [sp, #128]
    d698:	ldp	x24, x23, [sp, #112]
    d69c:	ldp	x26, x25, [sp, #96]
    d6a0:	ldr	x27, [sp, #80]
    d6a4:	ldp	x29, x30, [sp, #64]
    d6a8:	add	sp, sp, #0xa0
    d6ac:	ret

000000000000d6b0 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    d6b0:	sub	sp, sp, #0xc0
    d6b4:	stp	x29, x30, [sp, #96]
    d6b8:	str	x27, [sp, #112]
    d6bc:	stp	x26, x25, [sp, #128]
    d6c0:	stp	x24, x23, [sp, #144]
    d6c4:	stp	x22, x21, [sp, #160]
    d6c8:	stp	x20, x19, [sp, #176]
    d6cc:	add	x29, sp, #0x60
    d6d0:	mov	x20, x0
    d6d4:	ldr	x0, [x0, #8]
    d6d8:	mov	x19, x1
    d6dc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d6e0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d6e4:	mov	x22, x0
    d6e8:	add	x1, x29, #0x1c
    d6ec:	sub	x2, x29, #0x10
    d6f0:	mov	w3, #0x3                   	// #3
    d6f4:	mov	x0, x20
    d6f8:	stp	xzr, xzr, [x29, #-16]
    d6fc:	bl	952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    d700:	mov	w21, w0
    d704:	cbnz	w0, d814 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x164>
    d708:	ldp	x0, x23, [x29, #-16]
    d70c:	sub	x8, x29, #0x20
    d710:	mov	w2, #0x3                   	// #3
    d714:	mov	w25, #0x3                   	// #3
    d718:	mov	x1, x23
    d71c:	bl	9654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    d720:	ldurb	w8, [x29, #-24]
    d724:	cbz	w8, d804 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x154>
    d728:	ldr	x0, [x20, #8]
    d72c:	ldur	w26, [x29, #-28]
    d730:	ldr	w27, [x29, #28]
    d734:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d738:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d73c:	ldr	x8, [x20, #8]
    d740:	mov	x21, x0
    d744:	ldr	x9, [x8]
    d748:	mov	x0, x8
    d74c:	ldr	x9, [x9, #48]
    d750:	blr	x9
    d754:	mov	x24, x0
    d758:	mov	w0, #0x70                  	// #112
    d75c:	bl	0 <_Znwm>
    d760:	mov	x8, x0
    d764:	strb	wzr, [x8, #32]!
    d768:	str	x24, [x0, #104]
    d76c:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    d770:	add	x24, x24, #0x0
    d774:	str	x24, [x0]
    d778:	str	w25, [x0, #48]
    d77c:	stp	w27, w25, [x0, #72]
    d780:	stur	xzr, [x0, #84]
    d784:	stur	xzr, [x0, #89]
    d788:	stp	x22, x21, [x0, #56]
    d78c:	str	w26, [x0, #80]
    d790:	stp	x8, xzr, [x0, #16]
    d794:	str	x0, [sp, #32]
    d798:	add	x1, sp, #0x20
    d79c:	mov	x0, x19
    d7a0:	bl	0 <LLVMInitializeAArch64AsmParser>
    d7a4:	ldr	x0, [sp, #32]
    d7a8:	cbz	x0, d7b8 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x108>
    d7ac:	ldr	x8, [x0]
    d7b0:	ldr	x8, [x8, #8]
    d7b4:	blr	x8
    d7b8:	ldr	x21, [x20, #8]
    d7bc:	mov	x0, x21
    d7c0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d7c4:	ldr	w8, [x0]
    d7c8:	cmp	w8, #0xf
    d7cc:	b.ne	d80c <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x15c>  // b.any
    d7d0:	cbz	x23, d838 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x188>
    d7d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d7d8:	add	x1, x1, #0x0
    d7dc:	add	x0, sp, #0x20
    d7e0:	bl	0 <LLVMInitializeAArch64AsmParser>
    d7e4:	ldr	x0, [x20, #8]
    d7e8:	add	x2, sp, #0x20
    d7ec:	mov	x1, x22
    d7f0:	mov	x3, xzr
    d7f4:	mov	x4, xzr
    d7f8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    d7fc:	mov	w21, #0x2                   	// #2
    d800:	b	d810 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x160>
    d804:	mov	w21, #0x1                   	// #1
    d808:	b	d814 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x164>
    d80c:	mov	w21, wzr
    d810:	sturb	wzr, [x29, #-24]
    d814:	mov	w0, w21
    d818:	ldp	x20, x19, [sp, #176]
    d81c:	ldp	x22, x21, [sp, #160]
    d820:	ldp	x24, x23, [sp, #144]
    d824:	ldp	x26, x25, [sp, #128]
    d828:	ldr	x27, [sp, #112]
    d82c:	ldp	x29, x30, [sp, #96]
    d830:	add	sp, sp, #0xc0
    d834:	ret
    d838:	ldr	x0, [x20, #8]
    d83c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d840:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d844:	ldr	x8, [x20, #8]
    d848:	mov	x22, x0
    d84c:	ldr	x9, [x8]
    d850:	mov	x0, x8
    d854:	ldr	x9, [x9, #48]
    d858:	blr	x9
    d85c:	mov	x23, x0
    d860:	mov	w0, #0x70                  	// #112
    d864:	bl	0 <_Znwm>
    d868:	mov	x8, x0
    d86c:	mov	w9, #0x6                   	// #6
    d870:	strb	wzr, [x8, #32]!
    d874:	str	w9, [x0, #48]
    d878:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d87c:	add	x9, x9, #0x0
    d880:	stp	x22, x9, [x0, #64]
    d884:	mov	w9, #0x1                   	// #1
    d888:	str	x23, [x0, #104]
    d88c:	str	x24, [x0]
    d890:	str	w9, [x0, #80]
    d894:	strb	wzr, [x0, #84]
    d898:	str	x22, [x0, #56]
    d89c:	stp	x8, xzr, [x0, #16]
    d8a0:	str	x0, [sp, #32]
    d8a4:	add	x1, sp, #0x20
    d8a8:	mov	x0, x19
    d8ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    d8b0:	ldr	x0, [sp, #32]
    d8b4:	cbz	x0, d8c4 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x214>
    d8b8:	ldr	x8, [x0]
    d8bc:	ldr	x8, [x8, #8]
    d8c0:	blr	x8
    d8c4:	ldr	x8, [x21]
    d8c8:	mov	x0, x21
    d8cc:	ldr	x8, [x8, #136]
    d8d0:	blr	x8
    d8d4:	mov	x0, x21
    d8d8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d8dc:	ldur	q0, [x0, #8]
    d8e0:	add	x8, sp, #0x20
    d8e4:	mov	x0, sp
    d8e8:	str	q0, [sp]
    d8ec:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    d8f0:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    d8f4:	add	x22, x22, #0x0
    d8f8:	add	x0, sp, #0x20
    d8fc:	mov	x1, x22
    d900:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    d904:	cbz	w0, d95c <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2ac>
    d908:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d90c:	add	x1, x1, #0x0
    d910:	add	x0, sp, #0x20
    d914:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    d918:	cbz	w0, d95c <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2ac>
    d91c:	ldr	x0, [x20, #8]
    d920:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d924:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d928:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d92c:	mov	x19, x0
    d930:	add	x1, x1, #0x0
    d934:	mov	x0, sp
    d938:	bl	0 <LLVMInitializeAArch64AsmParser>
    d93c:	ldr	x0, [x20, #8]
    d940:	mov	x2, sp
    d944:	mov	x1, x19
    d948:	mov	x3, xzr
    d94c:	mov	x4, xzr
    d950:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    d954:	mov	w21, #0x2                   	// #2
    d958:	b	da14 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x364>
    d95c:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
    d960:	add	x0, sp, #0x20
    d964:	mov	x1, x22
    d968:	add	x23, x23, #0x0
    d96c:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    d970:	ldr	x8, [x20, #8]
    d974:	cmp	w0, #0x0
    d978:	csel	x23, x22, x23, eq  // eq = none
    d97c:	mov	x0, x8
    d980:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d984:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d988:	ldr	x8, [x20, #8]
    d98c:	mov	x20, x0
    d990:	ldr	x9, [x8]
    d994:	mov	x0, x8
    d998:	ldr	x9, [x9, #48]
    d99c:	blr	x9
    d9a0:	mov	x22, x0
    d9a4:	mov	w0, #0x70                  	// #112
    d9a8:	bl	0 <_Znwm>
    d9ac:	mov	x8, x0
    d9b0:	mov	w9, #0x6                   	// #6
    d9b4:	strb	wzr, [x8, #32]!
    d9b8:	str	w9, [x0, #48]
    d9bc:	mov	w9, #0x1                   	// #1
    d9c0:	str	x24, [x0]
    d9c4:	str	x22, [x0, #104]
    d9c8:	stp	x20, x23, [x0, #64]
    d9cc:	str	w9, [x0, #80]
    d9d0:	strb	wzr, [x0, #84]
    d9d4:	str	x20, [x0, #56]
    d9d8:	stp	x8, xzr, [x0, #16]
    d9dc:	str	x0, [sp]
    d9e0:	mov	x1, sp
    d9e4:	mov	x0, x19
    d9e8:	bl	0 <LLVMInitializeAArch64AsmParser>
    d9ec:	ldr	x0, [sp]
    d9f0:	cbz	x0, da00 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x350>
    d9f4:	ldr	x8, [x0]
    d9f8:	ldr	x8, [x8, #8]
    d9fc:	blr	x8
    da00:	ldr	x8, [x21]
    da04:	mov	x0, x21
    da08:	ldr	x8, [x8, #136]
    da0c:	blr	x8
    da10:	mov	w21, wzr
    da14:	ldr	x0, [sp, #32]
    da18:	add	x8, sp, #0x20
    da1c:	add	x8, x8, #0x10
    da20:	cmp	x0, x8
    da24:	b.eq	d810 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x160>  // b.none
    da28:	bl	0 <_ZdlPv>
    da2c:	b	d810 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x160>

000000000000da30 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    da30:	sub	sp, sp, #0x80
    da34:	stp	x29, x30, [sp, #32]
    da38:	stp	x28, x27, [sp, #48]
    da3c:	stp	x26, x25, [sp, #64]
    da40:	stp	x24, x23, [sp, #80]
    da44:	stp	x22, x21, [sp, #96]
    da48:	stp	x20, x19, [sp, #112]
    da4c:	add	x29, sp, #0x20
    da50:	mov	x20, x0
    da54:	ldr	x0, [x0, #8]
    da58:	mov	x21, x1
    da5c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    da60:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    da64:	ldr	x8, [x20, #8]
    da68:	mov	x19, x0
    da6c:	mov	x0, x8
    da70:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    da74:	ldr	w8, [x0]
    da78:	cmp	w8, #0x2
    da7c:	b.ne	dac4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x94>  // b.any
    da80:	add	x1, sp, #0x4
    da84:	mov	x0, x20
    da88:	bl	6118 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    da8c:	cbnz	w0, dc20 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f0>
    da90:	adrp	x25, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    da94:	ldr	w22, [sp, #4]
    da98:	ldr	x25, [x25]
    da9c:	lsr	x8, x22, #3
    daa0:	ldrh	w9, [x25, #566]
    daa4:	cmp	w8, w9
    daa8:	b.cs	dad0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xa0>  // b.hs, b.nlast
    daac:	ldr	x9, [x25, #552]
    dab0:	and	w10, w22, #0x7
    dab4:	ldrb	w9, [x9, x8]
    dab8:	lsr	w9, w9, w10
    dabc:	and	w26, w9, #0x1
    dac0:	b	dad4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xa4>
    dac4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    dac8:	add	x1, x1, #0x0
    dacc:	b	dc00 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d0>
    dad0:	mov	w26, wzr
    dad4:	ldrh	w9, [x25, #214]
    dad8:	cmp	w8, w9
    dadc:	b.cs	daf8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xc8>  // b.hs, b.nlast
    dae0:	ldr	x9, [x25, #200]
    dae4:	ldrb	w8, [x9, x8]
    dae8:	and	w9, w22, #0x7
    daec:	lsr	w8, w8, w9
    daf0:	and	w27, w8, #0x1
    daf4:	b	dafc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xcc>
    daf8:	mov	w27, wzr
    dafc:	orr	w8, w26, w27
    db00:	tbz	w8, #0, dbf8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>
    db04:	ldr	x0, [x20, #8]
    db08:	ldr	x8, [x0]
    db0c:	ldr	x8, [x8, #48]
    db10:	blr	x8
    db14:	ldr	x23, [x0, #24]
    db18:	ldr	w8, [x23, #8]
    db1c:	cmp	w8, w22
    db20:	b.ls	dd28 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2f8>  // b.plast
    db24:	ldr	x8, [x23, #104]
    db28:	ldrh	w28, [x8, x22, lsl #1]
    db2c:	tbnz	w28, #0, dbf8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>
    db30:	ldr	x0, [x20, #8]
    db34:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    db38:	ldr	w8, [x0]
    db3c:	ldr	x0, [x20, #8]
    db40:	cmp	w8, #0x19
    db44:	b.ne	dc44 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x214>  // b.any
    db48:	ldr	x8, [x0]
    db4c:	ldr	x8, [x8, #136]
    db50:	blr	x8
    db54:	ldr	x0, [x20, #8]
    db58:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    db5c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    db60:	mov	x24, x0
    db64:	mov	x1, sp
    db68:	mov	x0, x20
    db6c:	bl	6118 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    db70:	cbnz	w0, dc20 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f0>
    db74:	ldr	w8, [sp]
    db78:	ldr	w9, [x23, #8]
    db7c:	cmp	w9, w8
    db80:	b.ls	dd28 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2f8>  // b.plast
    db84:	ldr	x9, [x23, #104]
    db88:	add	w10, w28, #0x1
    db8c:	ldrh	w9, [x9, x8, lsl #1]
    db90:	cmp	w10, w9
    db94:	b.ne	dc5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x22c>  // b.any
    db98:	cbz	w26, dbc0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x190>
    db9c:	ldrh	w10, [x25, #566]
    dba0:	lsr	x9, x8, #3
    dba4:	cmp	w9, w10
    dba8:	b.cs	dc5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x22c>  // b.hs, b.nlast
    dbac:	ldr	x10, [x25, #552]
    dbb0:	ldrb	w9, [x10, x9]
    dbb4:	and	w10, w8, #0x7
    dbb8:	lsr	w9, w9, w10
    dbbc:	tbz	w9, #0, dc5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x22c>
    dbc0:	cbz	w27, dbe8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b8>
    dbc4:	ldrh	w10, [x25, #214]
    dbc8:	lsr	x9, x8, #3
    dbcc:	cmp	w9, w10
    dbd0:	b.cs	dc5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x22c>  // b.hs, b.nlast
    dbd4:	ldr	x10, [x25, #200]
    dbd8:	and	w8, w8, #0x7
    dbdc:	ldrb	w9, [x10, x9]
    dbe0:	lsr	w8, w9, w8
    dbe4:	tbz	w8, #0, dc5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x22c>
    dbe8:	cbz	w26, dc7c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x24c>
    dbec:	add	x3, x25, #0x380
    dbf0:	mov	w2, #0x11                  	// #17
    dbf4:	b	dc84 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x254>
    dbf8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    dbfc:	add	x1, x1, #0x0
    dc00:	add	x0, sp, #0x8
    dc04:	bl	0 <LLVMInitializeAArch64AsmParser>
    dc08:	ldr	x0, [x20, #8]
    dc0c:	add	x2, sp, #0x8
    dc10:	mov	x1, x19
    dc14:	mov	x3, xzr
    dc18:	mov	x4, xzr
    dc1c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    dc20:	mov	w0, #0x2                   	// #2
    dc24:	ldp	x20, x19, [sp, #112]
    dc28:	ldp	x22, x21, [sp, #96]
    dc2c:	ldp	x24, x23, [sp, #80]
    dc30:	ldp	x26, x25, [sp, #64]
    dc34:	ldp	x28, x27, [sp, #48]
    dc38:	ldp	x29, x30, [sp, #32]
    dc3c:	add	sp, sp, #0x80
    dc40:	ret
    dc44:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dc48:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    dc4c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    dc50:	mov	x19, x0
    dc54:	add	x1, x1, #0x0
    dc58:	b	dc00 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d0>
    dc5c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    dc60:	add	x1, x1, #0x0
    dc64:	add	x0, sp, #0x8
    dc68:	bl	0 <LLVMInitializeAArch64AsmParser>
    dc6c:	ldr	x0, [x20, #8]
    dc70:	add	x2, sp, #0x8
    dc74:	mov	x1, x24
    dc78:	b	dc14 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e4>
    dc7c:	add	x3, x25, #0x180
    dc80:	mov	w2, #0x10                  	// #16
    dc84:	mov	x0, x23
    dc88:	mov	x1, x22
    dc8c:	bl	0 <_ZNK4llvm14MCRegisterInfo19getMatchingSuperRegENS_10MCRegisterEjPKNS_15MCRegisterClassE>
    dc90:	mov	x22, x0
    dc94:	ldr	x0, [x20, #8]
    dc98:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dc9c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    dca0:	ldr	x8, [x20, #8]
    dca4:	mov	x20, x0
    dca8:	ldr	x9, [x8]
    dcac:	mov	x0, x8
    dcb0:	ldr	x9, [x9, #48]
    dcb4:	blr	x9
    dcb8:	mov	x23, x0
    dcbc:	mov	w0, #0x70                  	// #112
    dcc0:	bl	0 <_Znwm>
    dcc4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    dcc8:	mov	x8, x0
    dccc:	add	x9, x9, #0x0
    dcd0:	strb	wzr, [x8, #32]!
    dcd4:	str	x9, [x0]
    dcd8:	mov	w9, #0x3                   	// #3
    dcdc:	str	w9, [x0, #48]
    dce0:	str	x23, [x0, #104]
    dce4:	str	w22, [x0, #72]
    dce8:	stur	xzr, [x0, #84]
    dcec:	stur	xzr, [x0, #76]
    dcf0:	stur	xzr, [x0, #89]
    dcf4:	stp	x19, x20, [x0, #56]
    dcf8:	stp	x8, xzr, [x0, #16]
    dcfc:	str	x0, [sp, #8]
    dd00:	add	x1, sp, #0x8
    dd04:	mov	x0, x21
    dd08:	bl	0 <LLVMInitializeAArch64AsmParser>
    dd0c:	ldr	x0, [sp, #8]
    dd10:	cbz	x0, dd20 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2f0>
    dd14:	ldr	x8, [x0]
    dd18:	ldr	x8, [x8, #8]
    dd1c:	blr	x8
    dd20:	mov	w0, wzr
    dd24:	b	dc24 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f4>
    dd28:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    dd2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    dd30:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    dd34:	add	x0, x0, #0x0
    dd38:	add	x1, x1, #0x0
    dd3c:	add	x3, x3, #0x0
    dd40:	mov	w2, #0x224                 	// #548
    dd44:	bl	0 <__assert_fail>

000000000000dd48 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
    dd48:	sub	sp, sp, #0xb0
    dd4c:	stp	x29, x30, [sp, #80]
    dd50:	stp	x28, x27, [sp, #96]
    dd54:	stp	x26, x25, [sp, #112]
    dd58:	stp	x24, x23, [sp, #128]
    dd5c:	stp	x22, x21, [sp, #144]
    dd60:	stp	x20, x19, [sp, #160]
    dd64:	add	x29, sp, #0x50
    dd68:	mov	x21, x0
    dd6c:	ldr	x0, [x0, #8]
    dd70:	mov	x19, x1
    dd74:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dd78:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    dd7c:	mov	x20, x0
    dd80:	sub	x1, x29, #0x4
    dd84:	sub	x2, x29, #0x18
    dd88:	mov	w3, #0x2                   	// #2
    dd8c:	mov	x0, x21
    dd90:	stp	xzr, xzr, [x29, #-24]
    dd94:	bl	952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    dd98:	mov	w22, w0
    dd9c:	cbnz	w0, dfb0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x268>
    dda0:	ldur	x1, [x29, #-16]
    dda4:	cbz	x1, de78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x130>
    dda8:	ldur	x0, [x29, #-24]
    ddac:	add	x8, sp, #0x28
    ddb0:	mov	w2, #0x2                   	// #2
    ddb4:	bl	9654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    ddb8:	ldrb	w8, [sp, #48]
    ddbc:	cbz	w8, de78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x130>
    ddc0:	ldr	x0, [x21, #8]
    ddc4:	ldr	w25, [sp, #44]
    ddc8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ddcc:	ldr	w8, [x0]
    ddd0:	cmp	w8, #0x19
    ddd4:	b.ne	de80 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138>  // b.any
    ddd8:	ldr	x0, [x21, #8]
    dddc:	ldr	x8, [x0]
    dde0:	ldr	x8, [x8, #136]
    dde4:	blr	x8
    dde8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ddec:	ldr	d0, [x8]
    ddf0:	add	x8, sp, #0x10
    ddf4:	add	x8, x8, #0x10
    ddf8:	add	x1, sp, #0x10
    ddfc:	mov	x0, x21
    de00:	str	x8, [sp, #16]
    de04:	str	d0, [sp, #24]
    de08:	bl	b4e8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    de0c:	mov	w22, w0
    de10:	cbnz	w0, dfa4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x25c>
    de14:	ldr	w8, [sp, #24]
    de18:	cbz	w8, dfd4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x28c>
    de1c:	ldr	x9, [sp, #16]
    de20:	ldur	w26, [x29, #-4]
    de24:	add	x8, x9, x8, lsl #3
    de28:	ldur	x24, [x8, #-8]
    de2c:	ldr	x8, [x24]
    de30:	mov	x0, x24
    de34:	ldr	x8, [x8, #80]
    de38:	blr	x8
    de3c:	ldr	x8, [x21, #8]
    de40:	mov	x21, x0
    de44:	ldr	x9, [x8]
    de48:	mov	x0, x8
    de4c:	ldr	x9, [x9, #48]
    de50:	blr	x9
    de54:	ldr	w8, [x24, #48]
    de58:	mov	x23, x0
    de5c:	cmp	w8, #0x3
    de60:	b.eq	df1c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d4>  // b.none
    de64:	cmp	w8, #0xa
    de68:	b.ne	dff4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2ac>  // b.any
    de6c:	add	x8, x24, #0x48
    de70:	add	x9, x24, #0x4c
    de74:	b	df24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1dc>
    de78:	mov	w22, #0x1                   	// #1
    de7c:	b	dfb0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x268>
    de80:	ldr	x0, [x21, #8]
    de84:	ldur	w23, [x29, #-4]
    de88:	ldr	x8, [x0]
    de8c:	ldr	x8, [x8, #48]
    de90:	blr	x8
    de94:	mov	x22, x0
    de98:	mov	w0, #0x70                  	// #112
    de9c:	bl	0 <_Znwm>
    dea0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    dea4:	mov	x8, x0
    dea8:	add	x9, x9, #0x0
    deac:	strb	wzr, [x8, #32]!
    deb0:	str	x9, [x0]
    deb4:	mov	w9, #0x3                   	// #3
    deb8:	str	w9, [x0, #48]
    debc:	mov	w9, #0x2                   	// #2
    dec0:	str	x22, [x0, #104]
    dec4:	stp	w23, w9, [x0, #72]
    dec8:	stur	xzr, [x0, #84]
    decc:	stur	xzr, [x0, #89]
    ded0:	stp	x20, x20, [x0, #56]
    ded4:	str	w25, [x0, #80]
    ded8:	stp	x8, xzr, [x0, #16]
    dedc:	str	x0, [sp, #16]
    dee0:	add	x1, sp, #0x10
    dee4:	mov	x0, x19
    dee8:	bl	0 <LLVMInitializeAArch64AsmParser>
    deec:	ldr	x0, [sp, #16]
    def0:	cbz	x0, df00 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b8>
    def4:	ldr	x8, [x0]
    def8:	ldr	x8, [x8, #8]
    defc:	blr	x8
    df00:	mov	x0, x21
    df04:	mov	x1, x19
    df08:	bl	a8dc <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    df0c:	cmp	w0, #0x2
    df10:	cset	w8, eq  // eq = none
    df14:	lsl	w22, w8, #1
    df18:	b	dfac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x264>
    df1c:	add	x8, x24, #0x58
    df20:	add	x9, x24, #0x5c
    df24:	ldr	w27, [x8]
    df28:	ldr	w28, [x9]
    df2c:	mov	x0, x24
    df30:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
    df34:	mov	w24, w0
    df38:	mov	w0, #0x70                  	// #112
    df3c:	bl	0 <_Znwm>
    df40:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    df44:	mov	x8, x0
    df48:	add	x9, x9, #0x0
    df4c:	strb	wzr, [x8, #32]!
    df50:	str	x9, [x0]
    df54:	mov	w9, #0x3                   	// #3
    df58:	str	w9, [x0, #48]
    df5c:	mov	w9, #0x2                   	// #2
    df60:	and	w10, w24, #0x1
    df64:	str	x23, [x0, #104]
    df68:	stp	w26, w9, [x0, #72]
    df6c:	stp	w27, w28, [x0, #88]
    df70:	strb	w10, [x0, #96]
    df74:	stp	x20, x21, [x0, #56]
    df78:	stp	w25, wzr, [x0, #80]
    df7c:	stp	x8, xzr, [x0, #16]
    df80:	str	x0, [sp, #8]
    df84:	add	x1, sp, #0x8
    df88:	mov	x0, x19
    df8c:	bl	0 <LLVMInitializeAArch64AsmParser>
    df90:	ldr	x0, [sp, #8]
    df94:	cbz	x0, dfa4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x25c>
    df98:	ldr	x8, [x0]
    df9c:	ldr	x8, [x8, #8]
    dfa0:	blr	x8
    dfa4:	add	x0, sp, #0x10
    dfa8:	bl	0 <LLVMInitializeAArch64AsmParser>
    dfac:	strb	wzr, [sp, #48]
    dfb0:	mov	w0, w22
    dfb4:	ldp	x20, x19, [sp, #160]
    dfb8:	ldp	x22, x21, [sp, #144]
    dfbc:	ldp	x24, x23, [sp, #128]
    dfc0:	ldp	x26, x25, [sp, #112]
    dfc4:	ldp	x28, x27, [sp, #96]
    dfc8:	ldp	x29, x30, [sp, #80]
    dfcc:	add	sp, sp, #0xb0
    dfd0:	ret
    dfd4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    dfd8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    dfdc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    dfe0:	add	x0, x0, #0x0
    dfe4:	add	x1, x1, #0x0
    dfe8:	add	x3, x3, #0x0
    dfec:	mov	w2, #0xa7                  	// #167
    dff0:	bl	0 <__assert_fail>
    dff4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    dff8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    dffc:	add	x0, x0, #0x0
    e000:	add	x1, x1, #0x0
    e004:	mov	w2, #0x261                 	// #609
    e008:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000e00c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
    e00c:	sub	sp, sp, #0x80
    e010:	stp	x29, x30, [sp, #48]
    e014:	str	x25, [sp, #64]
    e018:	stp	x24, x23, [sp, #80]
    e01c:	stp	x22, x21, [sp, #96]
    e020:	stp	x20, x19, [sp, #112]
    e024:	add	x29, sp, #0x30
    e028:	mov	x19, x0
    e02c:	ldr	x0, [x0, #8]
    e030:	mov	x20, x1
    e034:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e038:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e03c:	mov	x21, x0
    e040:	add	x1, x29, #0x1c
    e044:	sub	x2, x29, #0x10
    e048:	mov	w3, #0x2                   	// #2
    e04c:	mov	x0, x19
    e050:	stp	xzr, xzr, [x29, #-16]
    e054:	bl	952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    e058:	cbnz	w0, e124 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x118>
    e05c:	ldur	x1, [x29, #-8]
    e060:	cbz	x1, e120 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x114>
    e064:	ldur	x0, [x29, #-16]
    e068:	add	x8, sp, #0x10
    e06c:	mov	w2, #0x2                   	// #2
    e070:	mov	w23, #0x2                   	// #2
    e074:	bl	9654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    e078:	ldrb	w8, [sp, #24]
    e07c:	cbz	w8, e120 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x114>
    e080:	ldr	x0, [x19, #8]
    e084:	ldr	w24, [sp, #20]
    e088:	ldr	w25, [x29, #28]
    e08c:	ldr	x8, [x0]
    e090:	ldr	x8, [x8, #48]
    e094:	blr	x8
    e098:	mov	x22, x0
    e09c:	mov	w0, #0x70                  	// #112
    e0a0:	bl	0 <_Znwm>
    e0a4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e0a8:	mov	x8, x0
    e0ac:	add	x9, x9, #0x0
    e0b0:	strb	wzr, [x8, #32]!
    e0b4:	str	x9, [x0]
    e0b8:	mov	w9, #0x3                   	// #3
    e0bc:	str	w9, [x0, #48]
    e0c0:	str	x22, [x0, #104]
    e0c4:	stp	w25, w23, [x0, #72]
    e0c8:	stur	xzr, [x0, #84]
    e0cc:	stur	xzr, [x0, #89]
    e0d0:	stp	x21, x21, [x0, #56]
    e0d4:	str	w24, [x0, #80]
    e0d8:	stp	x8, xzr, [x0, #16]
    e0dc:	str	x0, [sp, #8]
    e0e0:	add	x1, sp, #0x8
    e0e4:	mov	x0, x20
    e0e8:	bl	0 <LLVMInitializeAArch64AsmParser>
    e0ec:	ldr	x0, [sp, #8]
    e0f0:	cbz	x0, e100 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xf4>
    e0f4:	ldr	x8, [x0]
    e0f8:	ldr	x8, [x8, #8]
    e0fc:	blr	x8
    e100:	mov	x0, x19
    e104:	mov	x1, x20
    e108:	bl	a8dc <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    e10c:	cmp	w0, #0x2
    e110:	cset	w8, eq  // eq = none
    e114:	lsl	w0, w8, #1
    e118:	strb	wzr, [sp, #24]
    e11c:	b	e124 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x118>
    e120:	mov	w0, #0x1                   	// #1
    e124:	ldp	x20, x19, [sp, #112]
    e128:	ldp	x22, x21, [sp, #96]
    e12c:	ldp	x24, x23, [sp, #80]
    e130:	ldr	x25, [sp, #64]
    e134:	ldp	x29, x30, [sp, #48]
    e138:	add	sp, sp, #0x80
    e13c:	ret

000000000000e140 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb>:
    e140:	sub	sp, sp, #0x100
    e144:	stp	x29, x30, [sp, #160]
    e148:	stp	x28, x27, [sp, #176]
    e14c:	stp	x26, x25, [sp, #192]
    e150:	stp	x24, x23, [sp, #208]
    e154:	stp	x22, x21, [sp, #224]
    e158:	stp	x20, x19, [sp, #240]
    e15c:	add	x29, sp, #0xa0
    e160:	ldr	x22, [x0, #8]
    e164:	mov	x19, x0
    e168:	mov	x20, x1
    e16c:	mov	x0, x22
    e170:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e174:	ldr	w8, [x0]
    e178:	cmp	w8, #0x15
    e17c:	b.ne	e1cc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x8c>  // b.any
    e180:	stp	x19, x22, [x29, #-16]
    e184:	ldr	x0, [x19, #8]
    e188:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e18c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e190:	mov	x21, x0
    e194:	mov	x0, x22
    e198:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e19c:	ldr	q0, [x0]
    e1a0:	ldr	x8, [x0, #16]
    e1a4:	add	x1, x0, #0x18
    e1a8:	stur	q0, [x29, #-64]
    e1ac:	stur	x8, [x29, #-48]
    e1b0:	ldr	w8, [x0, #32]
    e1b4:	cmp	w8, #0x40
    e1b8:	stur	w8, [x29, #-32]
    e1bc:	b.hi	e1d4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x94>  // b.pmore
    e1c0:	ldr	x8, [x1]
    e1c4:	stur	x8, [x29, #-40]
    e1c8:	b	e1e0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0xa0>
    e1cc:	mov	w25, #0x1                   	// #1
    e1d0:	b	e4f0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3b0>
    e1d4:	sub	x8, x29, #0x40
    e1d8:	add	x0, x8, #0x18
    e1dc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e1e0:	ldr	x8, [x22]
    e1e4:	mov	x0, x22
    e1e8:	ldr	x8, [x8, #136]
    e1ec:	blr	x8
    e1f0:	stp	xzr, xzr, [sp, #80]
    e1f4:	ldr	x0, [x19, #8]
    e1f8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e1fc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e200:	mov	x3, x0
    e204:	sub	x0, x29, #0x10
    e208:	add	x1, sp, #0x4c
    e20c:	add	x2, sp, #0x50
    e210:	mov	w4, wzr
    e214:	bl	eb40 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    e218:	cbz	w0, e24c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x10c>
    e21c:	mov	w25, w0
    e220:	cmp	w0, #0x1
    e224:	b.ne	e4d8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x398>  // b.any
    e228:	ldr	x8, [x22]
    e22c:	mov	x0, x22
    e230:	ldr	x8, [x8, #40]
    e234:	blr	x8
    e238:	ldr	x1, [x0, #8]!
    e23c:	sub	x2, x29, #0x40
    e240:	strb	wzr, [x0, #106]
    e244:	bl	0 <LLVMInitializeAArch64AsmParser>
    e248:	b	e4d8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x398>
    e24c:	ldr	x0, [x19, #8]
    e250:	ldr	w28, [sp, #76]
    e254:	mov	w1, #0xd                   	// #13
    e258:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    e25c:	ldr	x8, [x19, #8]
    e260:	tbz	w0, #0, e2ec <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x1ac>
    e264:	mov	x0, x8
    e268:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e26c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e270:	stp	xzr, xzr, [sp, #56]
    e274:	ldr	x8, [x19, #8]
    e278:	mov	x22, x0
    e27c:	mov	x0, x8
    e280:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e284:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e288:	mov	x3, x0
    e28c:	sub	x0, x29, #0x10
    e290:	add	x1, sp, #0x34
    e294:	add	x2, sp, #0x38
    e298:	mov	w4, #0x1                   	// #1
    e29c:	bl	eb40 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    e2a0:	mov	w25, w0
    e2a4:	cbnz	w0, e4d8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x398>
    e2a8:	ldr	x2, [sp, #88]
    e2ac:	ldr	x8, [sp, #64]
    e2b0:	cmp	x2, x8
    e2b4:	b.ne	e2cc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x18c>  // b.any
    e2b8:	cbz	x2, e480 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x340>
    e2bc:	ldr	x0, [sp, #80]
    e2c0:	ldr	x1, [sp, #56]
    e2c4:	bl	0 <bcmp>
    e2c8:	cbz	w0, e480 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x340>
    e2cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e2d0:	add	x1, x1, #0x0
    e2d4:	add	x0, sp, #0x18
    e2d8:	bl	0 <LLVMInitializeAArch64AsmParser>
    e2dc:	ldr	x0, [x19, #8]
    e2e0:	add	x2, sp, #0x18
    e2e4:	mov	x1, x22
    e2e8:	b	e4c8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x388>
    e2ec:	mov	w1, #0x19                  	// #25
    e2f0:	mov	x0, x8
    e2f4:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    e2f8:	str	w28, [sp, #20]
    e2fc:	tbz	w0, #0, e3ec <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2ac>
    e300:	ldp	x22, x23, [sp, #80]
    e304:	mov	w27, #0x1                   	// #1
    e308:	ldr	x0, [x19, #8]
    e30c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e310:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e314:	stp	xzr, xzr, [sp, #56]
    e318:	ldr	x8, [x19, #8]
    e31c:	mov	x24, x0
    e320:	mov	x0, x8
    e324:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e328:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e32c:	mov	x3, x0
    e330:	sub	x0, x29, #0x10
    e334:	add	x1, sp, #0x34
    e338:	add	x2, sp, #0x38
    e33c:	mov	w4, #0x1                   	// #1
    e340:	bl	eb40 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    e344:	cbnz	w0, e478 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x338>
    e348:	ldr	x8, [sp, #64]
    e34c:	cmp	x23, x8
    e350:	b.ne	e43c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2fc>  // b.any
    e354:	cbz	x23, e36c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x22c>
    e358:	ldr	x1, [sp, #56]
    e35c:	mov	x0, x22
    e360:	mov	x2, x23
    e364:	bl	0 <bcmp>
    e368:	cbnz	w0, e43c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2fc>
    e36c:	ldr	x0, [x19, #8]
    e370:	ldr	x8, [x0]
    e374:	ldr	x8, [x8, #48]
    e378:	blr	x8
    e37c:	ldr	x8, [x0, #24]
    e380:	ldr	w25, [sp, #52]
    e384:	ldr	w9, [x8, #8]
    e388:	cmp	w9, w25
    e38c:	b.ls	e5c4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x484>  // b.plast
    e390:	ldr	x0, [x19, #8]
    e394:	ldr	x8, [x8, #104]
    e398:	ldr	x9, [x0]
    e39c:	ldrh	w26, [x8, x25, lsl #1]
    e3a0:	ldr	x8, [x9, #48]
    e3a4:	blr	x8
    e3a8:	ldr	x8, [x0, #24]
    e3ac:	ldr	w9, [x8, #8]
    e3b0:	cmp	w9, w28
    e3b4:	b.ls	e5c4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x484>  // b.plast
    e3b8:	ldr	x8, [x8, #104]
    e3bc:	ldrh	w8, [x8, w28, uxtw #1]
    e3c0:	add	w8, w8, #0x1
    e3c4:	and	w8, w8, #0x1f
    e3c8:	cmp	w26, w8
    e3cc:	b.ne	e4ac <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x36c>  // b.any
    e3d0:	ldr	x0, [x19, #8]
    e3d4:	mov	w1, #0x19                  	// #25
    e3d8:	add	w27, w27, #0x1
    e3dc:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    e3e0:	mov	w28, w25
    e3e4:	tbnz	w0, #0, e308 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x1c8>
    e3e8:	b	e3f0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2b0>
    e3ec:	mov	w27, #0x1                   	// #1
    e3f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e3f4:	add	x1, x1, #0x0
    e3f8:	add	x0, sp, #0x18
    e3fc:	bl	0 <LLVMInitializeAArch64AsmParser>
    e400:	ldr	x0, [x19, #8]
    e404:	add	x2, sp, #0x18
    e408:	mov	w1, #0x16                  	// #22
    e40c:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    e410:	tbnz	w0, #0, e4d4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x394>
    e414:	cmp	w27, #0x5
    e418:	b.cc	e448 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x308>  // b.lo, b.ul, b.last
    e41c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e420:	add	x1, x1, #0x0
    e424:	add	x0, sp, #0x18
    e428:	bl	0 <LLVMInitializeAArch64AsmParser>
    e42c:	ldr	x0, [x19, #8]
    e430:	add	x2, sp, #0x18
    e434:	mov	x1, x21
    e438:	b	e4c8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x388>
    e43c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e440:	add	x1, x1, #0x0
    e444:	b	e4b4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x374>
    e448:	ldr	x1, [sp, #88]
    e44c:	cbz	x1, e514 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3d4>
    e450:	ldr	x0, [sp, #80]
    e454:	add	x8, sp, #0x18
    e458:	mov	w2, #0x2                   	// #2
    e45c:	bl	9654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    e460:	ldrb	w8, [sp, #32]
    e464:	ldr	w23, [sp, #20]
    e468:	cbz	w8, e518 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3d8>
    e46c:	ldr	d0, [sp, #24]
    e470:	strb	wzr, [sp, #32]
    e474:	b	e51c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3dc>
    e478:	mov	w25, w0
    e47c:	b	e4d8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x398>
    e480:	ldr	w8, [sp, #52]
    e484:	add	w9, w8, #0x20
    e488:	cmp	w8, w28
    e48c:	csel	w8, w8, w9, hi  // hi = pmore
    e490:	sub	w8, w8, w28
    e494:	sub	w9, w8, #0x1
    e498:	cmp	w9, #0x3
    e49c:	b.cc	e5b8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x478>  // b.lo, b.ul, b.last
    e4a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e4a4:	add	x1, x1, #0x0
    e4a8:	b	e2d4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x194>
    e4ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e4b0:	add	x1, x1, #0x0
    e4b4:	add	x0, sp, #0x18
    e4b8:	bl	0 <LLVMInitializeAArch64AsmParser>
    e4bc:	ldr	x0, [x19, #8]
    e4c0:	add	x2, sp, #0x18
    e4c4:	mov	x1, x24
    e4c8:	mov	x3, xzr
    e4cc:	mov	x4, xzr
    e4d0:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    e4d4:	mov	w25, #0x2                   	// #2
    e4d8:	ldur	w8, [x29, #-32]
    e4dc:	cmp	w8, #0x41
    e4e0:	b.cc	e4f0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3b0>  // b.lo, b.ul, b.last
    e4e4:	ldur	x0, [x29, #-40]
    e4e8:	cbz	x0, e4f0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3b0>
    e4ec:	bl	0 <_ZdaPv>
    e4f0:	mov	w0, w25
    e4f4:	ldp	x20, x19, [sp, #240]
    e4f8:	ldp	x22, x21, [sp, #224]
    e4fc:	ldp	x24, x23, [sp, #208]
    e500:	ldp	x26, x25, [sp, #192]
    e504:	ldp	x28, x27, [sp, #176]
    e508:	ldp	x29, x30, [sp, #160]
    e50c:	add	sp, sp, #0x100
    e510:	ret
    e514:	ldr	w23, [sp, #20]
    e518:	movi	v0.2d, #0x0
    e51c:	str	q0, [sp]
    e520:	ldr	x0, [x19, #8]
    e524:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e528:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e52c:	ldr	x8, [x19, #8]
    e530:	mov	x19, x0
    e534:	ldr	x9, [x8]
    e538:	mov	x0, x8
    e53c:	ldr	x9, [x9, #48]
    e540:	blr	x9
    e544:	mov	x22, x0
    e548:	mov	w0, #0x70                  	// #112
    e54c:	bl	0 <_Znwm>
    e550:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e554:	ldr	q0, [sp]
    e558:	mov	x8, x0
    e55c:	add	x9, x9, #0x0
    e560:	strb	wzr, [x8, #32]!
    e564:	str	x9, [x0]
    e568:	mov	w9, #0x4                   	// #4
    e56c:	str	w9, [x0, #48]
    e570:	mov	w9, #0x2                   	// #2
    e574:	str	x22, [x0, #104]
    e578:	stp	w23, w27, [x0, #72]
    e57c:	str	d0, [x0, #80]
    e580:	str	w9, [x0, #88]
    e584:	stp	x21, x19, [x0, #56]
    e588:	stp	x8, xzr, [x0, #16]
    e58c:	str	x0, [sp, #24]
    e590:	add	x1, sp, #0x18
    e594:	mov	x0, x20
    e598:	bl	0 <LLVMInitializeAArch64AsmParser>
    e59c:	ldr	x0, [sp, #24]
    e5a0:	cbz	x0, e5b0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x470>
    e5a4:	ldr	x8, [x0]
    e5a8:	ldr	x8, [x8, #8]
    e5ac:	blr	x8
    e5b0:	mov	w25, wzr
    e5b4:	b	e4d8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x398>
    e5b8:	str	w28, [sp, #20]
    e5bc:	add	w27, w8, #0x1
    e5c0:	b	e3f0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2b0>
    e5c4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    e5c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e5cc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    e5d0:	add	x0, x0, #0x0
    e5d4:	add	x1, x1, #0x0
    e5d8:	add	x3, x3, #0x0
    e5dc:	mov	w2, #0x224                 	// #548
    e5e0:	bl	0 <__assert_fail>

000000000000e5e4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
    e5e4:	sub	sp, sp, #0xe0
    e5e8:	stp	x29, x30, [sp, #144]
    e5ec:	str	x25, [sp, #160]
    e5f0:	stp	x24, x23, [sp, #176]
    e5f4:	stp	x22, x21, [sp, #192]
    e5f8:	stp	x20, x19, [sp, #208]
    e5fc:	add	x29, sp, #0x90
    e600:	ldr	x19, [x0, #8]
    e604:	mov	x21, x0
    e608:	mov	x20, x1
    e60c:	mov	x0, x19
    e610:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e614:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e618:	ldr	x8, [x21, #8]
    e61c:	mov	x22, x0
    e620:	mov	w1, #0x25                  	// #37
    e624:	mov	x0, x8
    e628:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    e62c:	ldr	x8, [x21, #8]
    e630:	mov	w23, w0
    e634:	mov	w1, #0xd                   	// #13
    e638:	mov	x0, x8
    e63c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    e640:	mov	w24, w0
    e644:	mov	x0, x19
    e648:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e64c:	ldr	w8, [x0]
    e650:	mov	x25, x0
    e654:	cmp	w8, #0x4
    e658:	b.eq	e690 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xac>  // b.none
    e65c:	cmp	w8, #0x6
    e660:	b.eq	e6b0 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xcc>  // b.none
    e664:	tbz	w23, #0, e83c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x258>
    e668:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e66c:	add	x1, x1, #0x0
    e670:	sub	x0, x29, #0x20
    e674:	bl	0 <LLVMInitializeAArch64AsmParser>
    e678:	ldr	x0, [x21, #8]
    e67c:	sub	x1, x29, #0x20
    e680:	mov	x2, xzr
    e684:	mov	x3, xzr
    e688:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    e68c:	b	e778 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x194>
    e690:	ldr	x8, [x25, #16]
    e694:	cmp	x8, #0x2
    e698:	b.cc	e6b0 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xcc>  // b.lo, b.ul, b.last
    e69c:	ldr	x8, [x25, #8]
    e6a0:	mov	w9, #0x7830                	// #30768
    e6a4:	ldrh	w8, [x8]
    e6a8:	cmp	w8, w9
    e6ac:	b.eq	e85c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x278>  // b.none
    e6b0:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    e6b4:	sub	x8, x29, #0x20
    e6b8:	add	x23, x8, #0x8
    e6bc:	mov	x1, x0
    e6c0:	mov	x0, x23
    e6c4:	bl	0 <LLVMInitializeAArch64AsmParser>
    e6c8:	ldp	x1, x2, [x25, #8]
    e6cc:	add	x8, sp, #0x40
    e6d0:	sub	x0, x29, #0x20
    e6d4:	mov	w3, #0x3                   	// #3
    e6d8:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
    e6dc:	ldrb	w8, [sp, #72]
    e6e0:	and	w9, w8, #0xfffffffd
    e6e4:	strb	w9, [sp, #72]
    e6e8:	tbnz	w8, #0, e6f4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x110>
    e6ec:	mov	w8, #0x1                   	// #1
    e6f0:	b	e700 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11c>
    e6f4:	ldr	x8, [sp, #64]
    e6f8:	str	xzr, [sp, #64]
    e6fc:	orr	x8, x8, #0x1
    e700:	tst	x8, #0xfffffffffffffffe
    e704:	and	x25, x8, #0xfffffffffffffffe
    e708:	cset	w9, ne  // ne = any
    e70c:	orr	x9, x25, x9
    e710:	str	x9, [x29, #24]
    e714:	cbz	x25, e73c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x158>
    e718:	orr	x8, x8, #0x1
    e71c:	add	x0, sp, #0x28
    e720:	add	x1, sp, #0x20
    e724:	str	xzr, [x29, #24]
    e728:	str	x8, [sp, #40]
    e72c:	bl	0 <LLVMInitializeAArch64AsmParser>
    e730:	ldr	x8, [sp, #40]
    e734:	cbnz	x8, e950 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x36c>
    e738:	ldr	x9, [x29, #24]
    e73c:	cbnz	x9, e948 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x364>
    e740:	cbz	x25, e780 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x19c>
    e744:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e748:	add	x1, x1, #0x0
    e74c:	add	x0, sp, #0x28
    e750:	bl	0 <LLVMInitializeAArch64AsmParser>
    e754:	ldr	x0, [x21, #8]
    e758:	add	x1, sp, #0x28
    e75c:	mov	x2, xzr
    e760:	mov	x3, xzr
    e764:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    e768:	add	x0, sp, #0x40
    e76c:	bl	0 <LLVMInitializeAArch64AsmParser>
    e770:	mov	x0, x23
    e774:	bl	0 <LLVMInitializeAArch64AsmParser>
    e778:	mov	w0, #0x2                   	// #2
    e77c:	b	e840 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x25c>
    e780:	tbz	w24, #0, e78c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a8>
    e784:	sub	x0, x29, #0x20
    e788:	bl	0 <LLVMInitializeAArch64AsmParser>
    e78c:	mov	x8, sp
    e790:	add	x24, x8, #0x8
    e794:	mov	x0, x24
    e798:	mov	x1, x23
    e79c:	bl	0 <LLVMInitializeAArch64AsmParser>
    e7a0:	add	x0, sp, #0x40
    e7a4:	bl	0 <LLVMInitializeAArch64AsmParser>
    e7a8:	ldr	x8, [x21, #8]
    e7ac:	ldr	w10, [x0]
    e7b0:	ldr	x9, [x8]
    e7b4:	cmp	w10, #0x0
    e7b8:	mov	x0, x8
    e7bc:	cset	w21, eq  // eq = none
    e7c0:	ldr	x9, [x9, #48]
    e7c4:	blr	x9
    e7c8:	mov	x3, x0
    e7cc:	add	x8, sp, #0x20
    e7d0:	mov	x0, sp
    e7d4:	mov	w1, w21
    e7d8:	mov	x2, x22
    e7dc:	bl	ea8c <_ZN12_GLOBAL__N_114AArch64Operand11CreateFPImmEN4llvm7APFloatEbNS1_5SMLocERNS1_9MCContextE>
    e7e0:	ldr	x8, [sp, #32]
    e7e4:	add	x1, sp, #0x28
    e7e8:	mov	x0, x20
    e7ec:	stp	xzr, x8, [sp, #32]
    e7f0:	bl	0 <LLVMInitializeAArch64AsmParser>
    e7f4:	ldr	x0, [sp, #40]
    e7f8:	cbz	x0, e808 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x224>
    e7fc:	ldr	x8, [x0]
    e800:	ldr	x8, [x8, #8]
    e804:	blr	x8
    e808:	mov	x0, x24
    e80c:	str	xzr, [sp, #40]
    e810:	bl	0 <LLVMInitializeAArch64AsmParser>
    e814:	add	x0, sp, #0x40
    e818:	bl	0 <LLVMInitializeAArch64AsmParser>
    e81c:	mov	x0, x23
    e820:	bl	0 <LLVMInitializeAArch64AsmParser>
    e824:	ldr	x8, [x19]
    e828:	mov	x0, x19
    e82c:	ldr	x8, [x8, #136]
    e830:	blr	x8
    e834:	mov	w0, wzr
    e838:	b	e840 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x25c>
    e83c:	mov	w0, #0x1                   	// #1
    e840:	ldp	x20, x19, [sp, #208]
    e844:	ldp	x22, x21, [sp, #192]
    e848:	ldp	x24, x23, [sp, #176]
    e84c:	ldr	x25, [sp, #160]
    e850:	ldp	x29, x30, [sp, #144]
    e854:	add	sp, sp, #0xe0
    e858:	ret
    e85c:	mov	x0, x25
    e860:	bl	0 <LLVMInitializeAArch64AsmParser>
    e864:	cmp	x0, #0x100
    e868:	cset	w8, lt  // lt = tstop
    e86c:	bic	w8, w8, w24
    e870:	tbnz	w8, #0, e880 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x29c>
    e874:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e878:	add	x1, x1, #0x0
    e87c:	b	e670 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x8c>
    e880:	mov	x0, x25
    e884:	bl	0 <LLVMInitializeAArch64AsmParser>
    e888:	lsl	w9, w0, #24
    e88c:	and	w11, w0, #0x40
    e890:	and	w9, w9, #0x80000000
    e894:	lsr	w11, w11, #6
    e898:	lsr	w8, w0, #4
    e89c:	bfi	w9, w11, #30, #1
    e8a0:	sbfx	w10, w0, #6, #1
    e8a4:	bfi	w9, w8, #23, #2
    e8a8:	and	w10, w10, #0x3e000000
    e8ac:	bfi	w9, w0, #19, #4
    e8b0:	orr	w8, w9, w10
    e8b4:	eor	w8, w8, #0x40000000
    e8b8:	fmov	s0, w8
    e8bc:	fcvt	d0, s0
    e8c0:	sub	x0, x29, #0x20
    e8c4:	sub	x23, x29, #0x20
    e8c8:	bl	0 <LLVMInitializeAArch64AsmParser>
    e8cc:	sub	x8, x29, #0x40
    e8d0:	add	x24, x8, #0x8
    e8d4:	add	x23, x23, #0x8
    e8d8:	mov	x0, x24
    e8dc:	mov	x1, x23
    e8e0:	bl	0 <LLVMInitializeAArch64AsmParser>
    e8e4:	ldr	x0, [x21, #8]
    e8e8:	ldr	x8, [x0]
    e8ec:	ldr	x8, [x8, #48]
    e8f0:	blr	x8
    e8f4:	mov	x3, x0
    e8f8:	add	x8, sp, #0x40
    e8fc:	sub	x0, x29, #0x40
    e900:	mov	w1, #0x1                   	// #1
    e904:	mov	x2, x22
    e908:	bl	ea8c <_ZN12_GLOBAL__N_114AArch64Operand11CreateFPImmEN4llvm7APFloatEbNS1_5SMLocERNS1_9MCContextE>
    e90c:	ldr	x8, [sp, #64]
    e910:	add	x1, sp, #0x28
    e914:	mov	x0, x20
    e918:	str	xzr, [sp, #64]
    e91c:	str	x8, [sp, #40]
    e920:	bl	0 <LLVMInitializeAArch64AsmParser>
    e924:	ldr	x0, [sp, #40]
    e928:	cbz	x0, e938 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x354>
    e92c:	ldr	x8, [x0]
    e930:	ldr	x8, [x8, #8]
    e934:	blr	x8
    e938:	mov	x0, x24
    e93c:	str	xzr, [sp, #40]
    e940:	bl	0 <LLVMInitializeAArch64AsmParser>
    e944:	b	e81c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x238>
    e948:	add	x0, x29, #0x18
    e94c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    e950:	add	x0, sp, #0x28
    e954:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000000e958 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>:
    e958:	sub	sp, sp, #0x50
    e95c:	stp	x29, x30, [sp, #32]
    e960:	str	x21, [sp, #48]
    e964:	stp	x20, x19, [sp, #64]
    e968:	add	x29, sp, #0x20
    e96c:	mov	w8, #0xfff                 	// #4095
    e970:	str	w8, [x1]
    e974:	strh	wzr, [x2]
    e978:	str	xzr, [x3]
    e97c:	cbz	x0, ea50 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xf8>
    e980:	ldr	w8, [x0]
    e984:	mov	x20, x3
    e988:	mov	x19, x2
    e98c:	mov	x21, x1
    e990:	cmp	w8, #0x4
    e994:	b.ne	e9ac <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0x54>  // b.any
    e998:	ldr	w8, [x0, #24]
    e99c:	str	w8, [x21]
    e9a0:	ldr	x0, [x0, #16]
    e9a4:	cbz	x0, ea6c <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0x114>
    e9a8:	ldr	w8, [x0]
    e9ac:	cmp	w8, #0x2
    e9b0:	b.ne	e9c4 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0x6c>  // b.any
    e9b4:	ldrh	w8, [x0, #16]
    e9b8:	mov	w0, #0x1                   	// #1
    e9bc:	strh	w8, [x19]
    e9c0:	b	ea0c <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xb4>
    e9c4:	mov	x1, sp
    e9c8:	mov	x2, xzr
    e9cc:	mov	x3, xzr
    e9d0:	stp	xzr, xzr, [sp]
    e9d4:	str	wzr, [sp, #24]
    e9d8:	str	xzr, [sp, #16]
    e9dc:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
    e9e0:	mov	w8, w0
    e9e4:	mov	w0, wzr
    e9e8:	tbz	w8, #0, ea0c <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xb4>
    e9ec:	ldr	x8, [sp, #8]
    e9f0:	cbnz	x8, ea08 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xb0>
    e9f4:	ldr	x9, [sp]
    e9f8:	ldr	w8, [x21]
    e9fc:	cbnz	x9, ea20 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xc8>
    ea00:	cmp	w8, #0xfff
    ea04:	b.ne	ea20 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xc8>  // b.any
    ea08:	mov	w0, wzr
    ea0c:	ldp	x20, x19, [sp, #64]
    ea10:	ldr	x21, [sp, #48]
    ea14:	ldp	x29, x30, [sp, #32]
    ea18:	add	sp, sp, #0x50
    ea1c:	ret
    ea20:	cbz	x9, ea2c <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xd4>
    ea24:	ldrh	w9, [x9, #16]
    ea28:	strh	w9, [x19]
    ea2c:	ldr	x9, [sp, #16]
    ea30:	cmp	w8, #0xfff
    ea34:	cset	w8, eq  // eq = none
    ea38:	str	x9, [x20]
    ea3c:	ldrh	w9, [x19]
    ea40:	cmp	w9, #0x0
    ea44:	cset	w9, eq  // eq = none
    ea48:	orr	w0, w8, w9
    ea4c:	b	ea0c <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xb4>
    ea50:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ea54:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ea58:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ea5c:	add	x0, x0, #0x0
    ea60:	add	x1, x1, #0x0
    ea64:	add	x3, x3, #0x0
    ea68:	b	ea84 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0x12c>
    ea6c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ea70:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ea74:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ea78:	add	x0, x0, #0x0
    ea7c:	add	x1, x1, #0x0
    ea80:	add	x3, x3, #0x0
    ea84:	mov	w2, #0x69                  	// #105
    ea88:	bl	0 <__assert_fail>

000000000000ea8c <_ZN12_GLOBAL__N_114AArch64Operand11CreateFPImmEN4llvm7APFloatEbNS1_5SMLocERNS1_9MCContextE>:
    ea8c:	sub	sp, sp, #0x50
    ea90:	stp	x29, x30, [sp, #16]
    ea94:	stp	x24, x23, [sp, #32]
    ea98:	stp	x22, x21, [sp, #48]
    ea9c:	stp	x20, x19, [sp, #64]
    eaa0:	add	x29, sp, #0x10
    eaa4:	mov	x22, x0
    eaa8:	mov	w0, #0x70                  	// #112
    eaac:	mov	x21, x3
    eab0:	mov	x19, x2
    eab4:	mov	x23, x8
    eab8:	and	w24, w1, #0x1
    eabc:	bl	0 <_Znwm>
    eac0:	mov	x8, x0
    eac4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    eac8:	add	x9, x9, #0x0
    eacc:	mov	w10, #0xb                   	// #11
    ead0:	strb	wzr, [x8, #32]!
    ead4:	mov	x20, x0
    ead8:	str	x9, [x0]
    eadc:	str	w10, [x0, #48]
    eae0:	stp	xzr, xzr, [x0, #56]
    eae4:	str	x21, [x0, #104]
    eae8:	stp	x8, xzr, [x0, #16]
    eaec:	str	x0, [x23]
    eaf0:	mov	x8, sp
    eaf4:	mov	x0, x22
    eaf8:	bl	0 <LLVMInitializeAArch64AsmParser>
    eafc:	mov	x0, sp
    eb00:	bl	0 <LLVMInitializeAArch64AsmParser>
    eb04:	ldr	w8, [sp, #8]
    eb08:	str	x0, [x20, #72]
    eb0c:	cmp	w8, #0x41
    eb10:	b.cc	eb20 <_ZN12_GLOBAL__N_114AArch64Operand11CreateFPImmEN4llvm7APFloatEbNS1_5SMLocERNS1_9MCContextE+0x94>  // b.lo, b.ul, b.last
    eb14:	ldr	x0, [sp]
    eb18:	cbz	x0, eb20 <_ZN12_GLOBAL__N_114AArch64Operand11CreateFPImmEN4llvm7APFloatEbNS1_5SMLocERNS1_9MCContextE+0x94>
    eb1c:	bl	0 <_ZdaPv>
    eb20:	strb	w24, [x20, #80]
    eb24:	stp	x19, x19, [x20, #56]
    eb28:	ldp	x20, x19, [sp, #64]
    eb2c:	ldp	x22, x21, [sp, #48]
    eb30:	ldp	x24, x23, [sp, #32]
    eb34:	ldp	x29, x30, [sp, #16]
    eb38:	add	sp, sp, #0x50
    eb3c:	ret

000000000000eb40 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>:
    eb40:	sub	sp, sp, #0x90
    eb44:	stp	x29, x30, [sp, #80]
    eb48:	str	x23, [sp, #96]
    eb4c:	stp	x22, x21, [sp, #112]
    eb50:	stp	x20, x19, [sp, #128]
    eb54:	add	x29, sp, #0x50
    eb58:	ldp	x20, x0, [x0]
    eb5c:	mov	w21, w4
    eb60:	mov	x19, x3
    eb64:	mov	x22, x2
    eb68:	mov	x23, x1
    eb6c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    eb70:	ldr	q0, [x0]
    eb74:	ldr	x8, [x0, #16]
    eb78:	add	x1, x0, #0x18
    eb7c:	str	q0, [sp, #32]
    eb80:	str	x8, [sp, #48]
    eb84:	ldr	w8, [x0, #32]
    eb88:	cmp	w8, #0x40
    eb8c:	str	w8, [sp, #64]
    eb90:	b.hi	eba0 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x60>  // b.pmore
    eb94:	ldr	x8, [x1]
    eb98:	str	x8, [sp, #56]
    eb9c:	b	ebac <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x6c>
    eba0:	add	x8, sp, #0x20
    eba4:	add	x0, x8, #0x18
    eba8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    ebac:	mov	w3, #0x2                   	// #2
    ebb0:	mov	x0, x20
    ebb4:	mov	x1, x23
    ebb8:	mov	x2, x22
    ebbc:	bl	952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    ebc0:	cbz	w0, ec18 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xd8>
    ebc4:	cmp	w0, #0x2
    ebc8:	b.eq	ebe8 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xa8>  // b.none
    ebcc:	ldr	w8, [sp, #32]
    ebd0:	cmp	w8, #0x2
    ebd4:	b.ne	ebe8 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xa8>  // b.any
    ebd8:	cmp	w0, #0x1
    ebdc:	mov	w22, #0x1                   	// #1
    ebe0:	b.ne	ec34 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xf4>  // b.any
    ebe4:	tbz	w21, #0, ec34 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xf4>
    ebe8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ebec:	add	x1, x1, #0x0
    ebf0:	add	x0, sp, #0x8
    ebf4:	bl	0 <LLVMInitializeAArch64AsmParser>
    ebf8:	ldr	x0, [x20, #8]
    ebfc:	add	x2, sp, #0x8
    ec00:	mov	x1, x19
    ec04:	mov	x3, xzr
    ec08:	mov	x4, xzr
    ec0c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    ec10:	mov	w22, #0x2                   	// #2
    ec14:	b	ec34 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xf4>
    ec18:	ldp	x0, x1, [x22]
    ec1c:	add	x8, sp, #0x8
    ec20:	mov	w2, #0x2                   	// #2
    ec24:	bl	9654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    ec28:	ldrb	w8, [sp, #16]
    ec2c:	cbz	w8, ec68 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x128>
    ec30:	mov	w22, wzr
    ec34:	ldr	w8, [sp, #64]
    ec38:	cmp	w8, #0x41
    ec3c:	b.cc	ec4c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x10c>  // b.lo, b.ul, b.last
    ec40:	ldr	x0, [sp, #56]
    ec44:	cbz	x0, ec4c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x10c>
    ec48:	bl	0 <_ZdaPv>
    ec4c:	mov	w0, w22
    ec50:	ldp	x20, x19, [sp, #128]
    ec54:	ldp	x22, x21, [sp, #112]
    ec58:	ldr	x23, [sp, #96]
    ec5c:	ldp	x29, x30, [sp, #80]
    ec60:	add	sp, sp, #0x90
    ec64:	ret
    ec68:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ec6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ec70:	add	x0, x0, #0x0
    ec74:	add	x1, x1, #0x0
    ec78:	mov	w2, #0xcfd                 	// #3325
    ec7c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000ec80 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>:
    ec80:	sub	sp, sp, #0x80
    ec84:	stp	x29, x30, [sp, #80]
    ec88:	stp	x22, x21, [sp, #96]
    ec8c:	stp	x20, x19, [sp, #112]
    ec90:	add	x29, sp, #0x50
    ec94:	ldp	x20, x0, [x0]
    ec98:	mov	x19, x3
    ec9c:	mov	x21, x2
    eca0:	mov	x22, x1
    eca4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    eca8:	ldr	q0, [x0]
    ecac:	ldr	x8, [x0, #16]
    ecb0:	add	x1, x0, #0x18
    ecb4:	str	q0, [sp, #32]
    ecb8:	str	x8, [sp, #48]
    ecbc:	ldr	w8, [x0, #32]
    ecc0:	cmp	w8, #0x40
    ecc4:	str	w8, [sp, #64]
    ecc8:	b.hi	ecd8 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x58>  // b.pmore
    eccc:	ldr	x8, [x1]
    ecd0:	str	x8, [sp, #56]
    ecd4:	b	ece4 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x64>
    ecd8:	add	x8, sp, #0x20
    ecdc:	add	x0, x8, #0x18
    ece0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    ece4:	mov	w3, #0x1                   	// #1
    ece8:	mov	x0, x20
    ecec:	mov	x1, x22
    ecf0:	mov	x2, x21
    ecf4:	bl	952c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    ecf8:	cbz	w0, ed1c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x9c>
    ecfc:	sub	w8, w0, #0x1
    ed00:	cmp	w8, #0x2
    ed04:	b.cc	ed3c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xbc>  // b.lo, b.ul, b.last
    ed08:	ldr	w8, [sp, #32]
    ed0c:	cmp	w8, #0x2
    ed10:	b.ne	ed3c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xbc>  // b.any
    ed14:	mov	w19, #0x1                   	// #1
    ed18:	b	ed68 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xe8>
    ed1c:	ldp	x0, x1, [x21]
    ed20:	add	x8, sp, #0x8
    ed24:	mov	w2, #0x1                   	// #1
    ed28:	bl	9654 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    ed2c:	ldrb	w8, [sp, #16]
    ed30:	cbz	w8, ed98 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x118>
    ed34:	mov	w19, wzr
    ed38:	b	ed68 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xe8>
    ed3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ed40:	add	x1, x1, #0x0
    ed44:	add	x0, sp, #0x8
    ed48:	bl	0 <LLVMInitializeAArch64AsmParser>
    ed4c:	ldr	x0, [x20, #8]
    ed50:	add	x2, sp, #0x8
    ed54:	mov	x1, x19
    ed58:	mov	x3, xzr
    ed5c:	mov	x4, xzr
    ed60:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    ed64:	mov	w19, #0x2                   	// #2
    ed68:	ldr	w8, [sp, #64]
    ed6c:	cmp	w8, #0x41
    ed70:	b.cc	ed80 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x100>  // b.lo, b.ul, b.last
    ed74:	ldr	x0, [sp, #56]
    ed78:	cbz	x0, ed80 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x100>
    ed7c:	bl	0 <_ZdaPv>
    ed80:	mov	w0, w19
    ed84:	ldp	x20, x19, [sp, #112]
    ed88:	ldp	x22, x21, [sp, #96]
    ed8c:	ldp	x29, x30, [sp, #80]
    ed90:	add	sp, sp, #0x80
    ed94:	ret
    ed98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ed9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    eda0:	add	x0, x0, #0x0
    eda4:	add	x1, x1, #0x0
    eda8:	mov	w2, #0xcfd                 	// #3325
    edac:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000edb0 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE>:
    edb0:	sub	sp, sp, #0x40
    edb4:	stp	x29, x30, [sp, #16]
    edb8:	stp	x22, x21, [sp, #32]
    edbc:	stp	x20, x19, [sp, #48]
    edc0:	add	x29, sp, #0x10
    edc4:	mov	w20, w0
    edc8:	ldr	x0, [x1]
    edcc:	ldr	w8, [x1, #8]
    edd0:	adrp	x2, 0 <LLVMInitializeAArch64AsmParser>
    edd4:	mov	x19, x1
    edd8:	add	x2, x2, #0x0
    eddc:	add	x1, x0, x8, lsl #4
    ede0:	bl	0 <LLVMInitializeAArch64AsmParser>
    ede4:	mov	x21, x0
    ede8:	ldr	x0, [x19]
    edec:	ldr	w8, [x19, #8]
    edf0:	adrp	x2, 0 <LLVMInitializeAArch64AsmParser>
    edf4:	add	x2, x2, #0x0
    edf8:	add	x22, x0, x8, lsl #4
    edfc:	mov	x1, x22
    ee00:	bl	0 <LLVMInitializeAArch64AsmParser>
    ee04:	cmp	x21, x22
    ee08:	b.ne	ee88 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0xd8>  // b.any
    ee0c:	ldr	x8, [x19]
    ee10:	ldr	w9, [x19, #8]
    ee14:	add	x8, x8, x9, lsl #4
    ee18:	cmp	x0, x8
    ee1c:	b.eq	ee88 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0xd8>  // b.none
    ee20:	sub	w8, w20, #0x5
    ee24:	cmp	w8, #0x2
    ee28:	b.cs	eefc <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x14c>  // b.hs, b.nlast
    ee2c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ee30:	add	x8, x8, #0x0
    ee34:	mov	w20, #0x3                   	// #3
    ee38:	mov	x1, sp
    ee3c:	mov	x0, x19
    ee40:	stp	x8, x20, [sp]
    ee44:	bl	0 <LLVMInitializeAArch64AsmParser>
    ee48:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ee4c:	add	x8, x8, #0x0
    ee50:	mov	w21, #0x4                   	// #4
    ee54:	mov	x1, sp
    ee58:	mov	x0, x19
    ee5c:	stp	x8, x21, [sp]
    ee60:	bl	0 <LLVMInitializeAArch64AsmParser>
    ee64:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ee68:	add	x8, x8, #0x0
    ee6c:	mov	x1, sp
    ee70:	mov	x0, x19
    ee74:	stp	x8, x21, [sp]
    ee78:	bl	0 <LLVMInitializeAArch64AsmParser>
    ee7c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ee80:	add	x8, x8, #0x0
    ee84:	b	eef4 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x144>
    ee88:	cmp	x21, x22
    ee8c:	b.eq	ef60 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1b0>  // b.none
    ee90:	sub	w8, w20, #0x5
    ee94:	cmp	w8, #0x2
    ee98:	b.cs	ef28 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x178>  // b.hs, b.nlast
    ee9c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    eea0:	add	x8, x8, #0x0
    eea4:	mov	w20, #0x5                   	// #5
    eea8:	mov	x1, sp
    eeac:	mov	x0, x19
    eeb0:	stp	x8, x20, [sp]
    eeb4:	bl	0 <LLVMInitializeAArch64AsmParser>
    eeb8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    eebc:	add	x8, x8, #0x0
    eec0:	mov	w21, #0x6                   	// #6
    eec4:	mov	x1, sp
    eec8:	mov	x0, x19
    eecc:	stp	x8, x21, [sp]
    eed0:	bl	0 <LLVMInitializeAArch64AsmParser>
    eed4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    eed8:	add	x8, x8, #0x0
    eedc:	mov	x1, sp
    eee0:	mov	x0, x19
    eee4:	stp	x8, x21, [sp]
    eee8:	bl	0 <LLVMInitializeAArch64AsmParser>
    eeec:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    eef0:	add	x8, x8, #0x0
    eef4:	stp	x8, x20, [sp]
    eef8:	b	ef54 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1a4>
    eefc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ef00:	add	x8, x8, #0x0
    ef04:	mov	w9, #0x4                   	// #4
    ef08:	mov	x1, sp
    ef0c:	mov	x0, x19
    ef10:	stp	x8, x9, [sp]
    ef14:	bl	0 <LLVMInitializeAArch64AsmParser>
    ef18:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ef1c:	add	x8, x8, #0x0
    ef20:	mov	w9, #0x3                   	// #3
    ef24:	b	ef50 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1a0>
    ef28:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ef2c:	add	x8, x8, #0x0
    ef30:	mov	w9, #0x6                   	// #6
    ef34:	mov	x1, sp
    ef38:	mov	x0, x19
    ef3c:	stp	x8, x9, [sp]
    ef40:	bl	0 <LLVMInitializeAArch64AsmParser>
    ef44:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ef48:	add	x8, x8, #0x0
    ef4c:	mov	w9, #0x5                   	// #5
    ef50:	stp	x8, x9, [sp]
    ef54:	mov	x1, sp
    ef58:	mov	x0, x19
    ef5c:	bl	0 <LLVMInitializeAArch64AsmParser>
    ef60:	ldp	x20, x19, [sp, #48]
    ef64:	ldp	x22, x21, [sp, #32]
    ef68:	ldp	x29, x30, [sp, #16]
    ef6c:	add	sp, sp, #0x40
    ef70:	ret

000000000000ef74 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl>:
    ef74:	sub	sp, sp, #0x50
    ef78:	stp	x29, x30, [sp, #32]
    ef7c:	stp	x22, x21, [sp, #48]
    ef80:	stp	x20, x19, [sp, #64]
    ef84:	add	x29, sp, #0x20
    ef88:	ldr	x21, [x0]
    ef8c:	ldr	x0, [x21, #8]
    ef90:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ef94:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ef98:	stur	xzr, [x29, #-8]
    ef9c:	ldr	x8, [x21, #8]
    efa0:	mov	x19, x0
    efa4:	sub	x1, x29, #0x8
    efa8:	mov	x0, x8
    efac:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    efb0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    efb4:	mov	w20, w0
    efb8:	add	x1, x1, #0x0
    efbc:	mov	x0, sp
    efc0:	bl	0 <LLVMInitializeAArch64AsmParser>
    efc4:	ldr	x0, [x21, #8]
    efc8:	and	w1, w20, #0x1
    efcc:	mov	x3, sp
    efd0:	mov	x2, x19
    efd4:	bl	0 <_ZN4llvm11MCAsmParser5checkEbNS_5SMLocERKNS_5TwineE>
    efd8:	tbnz	w0, #0, f028 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0xb4>
    efdc:	ldur	x8, [x29, #-8]
    efe0:	cbz	x8, eff4 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0x80>
    efe4:	ldr	w9, [x8]
    efe8:	cmp	w9, #0x1
    efec:	csel	x22, x8, xzr, eq  // eq = none
    eff0:	b	eff8 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0x84>
    eff4:	mov	x22, xzr
    eff8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    effc:	cmp	x22, #0x0
    f000:	add	x1, x1, #0x0
    f004:	mov	x0, sp
    f008:	cset	w20, eq  // eq = none
    f00c:	bl	0 <LLVMInitializeAArch64AsmParser>
    f010:	ldr	x0, [x21, #8]
    f014:	mov	x3, sp
    f018:	mov	w1, w20
    f01c:	mov	x2, x19
    f020:	bl	0 <_ZN4llvm11MCAsmParser5checkEbNS_5SMLocERKNS_5TwineE>
    f024:	tbz	w0, #0, f030 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0xbc>
    f028:	mov	w0, #0x1                   	// #1
    f02c:	b	f058 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0xe4>
    f030:	ldr	x0, [x21, #8]
    f034:	ldr	x8, [x0]
    f038:	ldr	x8, [x8, #56]
    f03c:	blr	x8
    f040:	ldr	x0, [x0, #16]
    f044:	ldr	w1, [x22, #16]
    f048:	ldr	x8, [x0]
    f04c:	ldr	x8, [x8, #80]
    f050:	blr	x8
    f054:	mov	w0, wzr
    f058:	ldp	x20, x19, [sp, #64]
    f05c:	ldp	x22, x21, [sp, #48]
    f060:	ldp	x29, x30, [sp, #32]
    f064:	add	sp, sp, #0x50
    f068:	ret

000000000000f06c <_ZN12_GLOBAL__N_114AArch64OperandC2ERKS0_>:
    f06c:	movi	v0.2d, #0x0
    f070:	mov	x8, x0
    f074:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f078:	str	xzr, [x0, #40]
    f07c:	add	x9, x9, #0x0
    f080:	stur	q0, [x0, #24]
    f084:	stur	q0, [x0, #8]
    f088:	strb	wzr, [x8, #32]!
    f08c:	str	x9, [x0]
    f090:	stp	x8, xzr, [x0, #16]
    f094:	stp	xzr, xzr, [x0, #56]
    f098:	ldr	x8, [x1, #104]
    f09c:	str	x8, [x0, #104]
    f0a0:	ldr	w8, [x1, #48]
    f0a4:	str	w8, [x0, #48]
    f0a8:	ldr	x9, [x1, #56]
    f0ac:	cmp	w8, #0xe
    f0b0:	str	x9, [x0, #56]
    f0b4:	ldr	x9, [x1, #64]
    f0b8:	str	x9, [x0, #64]
    f0bc:	b.hi	f140 <_ZN12_GLOBAL__N_114AArch64OperandC2ERKS0_+0xd4>  // b.pmore
    f0c0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f0c4:	add	x9, x9, #0x0
    f0c8:	adr	x10, f0d8 <_ZN12_GLOBAL__N_114AArch64OperandC2ERKS0_+0x6c>
    f0cc:	ldrb	w11, [x9, x8]
    f0d0:	add	x10, x10, x11, lsl #2
    f0d4:	br	x10
    f0d8:	ldur	q0, [x1, #72]
    f0dc:	stur	q0, [x0, #72]
    f0e0:	ret
    f0e4:	ldr	w8, [x1, #72]
    f0e8:	str	w8, [x0, #72]
    f0ec:	ret
    f0f0:	ldr	x8, [x1, #72]
    f0f4:	str	x8, [x0, #72]
    f0f8:	ret
    f0fc:	ldur	q0, [x1, #84]
    f100:	ldur	q1, [x1, #72]
    f104:	stur	q0, [x0, #84]
    f108:	stur	q1, [x0, #72]
    f10c:	ret
    f110:	ldr	w8, [x1, #88]
    f114:	ldur	q0, [x1, #72]
    f118:	str	w8, [x0, #88]
    f11c:	b	f0dc <_ZN12_GLOBAL__N_114AArch64OperandC2ERKS0_+0x70>
    f120:	ldr	x8, [x1, #88]
    f124:	ldur	q0, [x1, #72]
    f128:	str	x8, [x0, #88]
    f12c:	b	f0dc <_ZN12_GLOBAL__N_114AArch64OperandC2ERKS0_+0x70>
    f130:	ldr	w8, [x1, #80]
    f134:	ldr	x9, [x1, #72]
    f138:	str	w8, [x0, #80]
    f13c:	str	x9, [x0, #72]
    f140:	ret

000000000000f144 <_ZN4llvmL15getXRegFromWRegEj>:
    f144:	sub	w8, w0, #0xb9
    f148:	cmp	w8, #0x1e
    f14c:	b.hi	f174 <_ZN4llvmL15getXRegFromWRegEj+0x30>  // b.pmore
    f150:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f154:	add	x9, x9, #0x0
    f158:	adr	x10, f16c <_ZN4llvmL15getXRegFromWRegEj+0x28>
    f15c:	ldrb	w11, [x9, x8]
    f160:	add	x10, x10, x11, lsl #2
    f164:	mov	w0, #0xd8                  	// #216
    f168:	br	x10
    f16c:	mov	w0, #0xd9                  	// #217
    f170:	ret
    f174:	cmp	w0, #0x6
    f178:	b.eq	f26c <_ZN4llvmL15getXRegFromWRegEj+0x128>  // b.none
    f17c:	cmp	w0, #0x7
    f180:	b.ne	f270 <_ZN4llvmL15getXRegFromWRegEj+0x12c>  // b.any
    f184:	mov	w0, #0x8                   	// #8
    f188:	ret
    f18c:	mov	w0, #0xda                  	// #218
    f190:	ret
    f194:	mov	w0, #0xdb                  	// #219
    f198:	ret
    f19c:	mov	w0, #0xdc                  	// #220
    f1a0:	ret
    f1a4:	mov	w0, #0xdd                  	// #221
    f1a8:	ret
    f1ac:	mov	w0, #0xde                  	// #222
    f1b0:	ret
    f1b4:	mov	w0, #0xdf                  	// #223
    f1b8:	ret
    f1bc:	mov	w0, #0xe0                  	// #224
    f1c0:	ret
    f1c4:	mov	w0, #0xe1                  	// #225
    f1c8:	ret
    f1cc:	mov	w0, #0xe2                  	// #226
    f1d0:	ret
    f1d4:	mov	w0, #0xe3                  	// #227
    f1d8:	ret
    f1dc:	mov	w0, #0xe4                  	// #228
    f1e0:	ret
    f1e4:	mov	w0, #0xe5                  	// #229
    f1e8:	ret
    f1ec:	mov	w0, #0xe6                  	// #230
    f1f0:	ret
    f1f4:	mov	w0, #0xe7                  	// #231
    f1f8:	ret
    f1fc:	mov	w0, #0xe8                  	// #232
    f200:	ret
    f204:	mov	w0, #0xe9                  	// #233
    f208:	ret
    f20c:	mov	w0, #0xea                  	// #234
    f210:	ret
    f214:	mov	w0, #0xeb                  	// #235
    f218:	ret
    f21c:	mov	w0, #0xec                  	// #236
    f220:	ret
    f224:	mov	w0, #0xed                  	// #237
    f228:	ret
    f22c:	mov	w0, #0xee                  	// #238
    f230:	ret
    f234:	mov	w0, #0xef                  	// #239
    f238:	ret
    f23c:	mov	w0, #0xf0                  	// #240
    f240:	ret
    f244:	mov	w0, #0xf1                  	// #241
    f248:	ret
    f24c:	mov	w0, #0xf3                  	// #243
    f250:	ret
    f254:	mov	w0, #0xf4                  	// #244
    f258:	ret
    f25c:	mov	w0, #0x2                   	// #2
    f260:	ret
    f264:	mov	w0, #0x3                   	// #3
    f268:	ret
    f26c:	mov	w0, #0x5                   	// #5
    f270:	ret
    f274:	mov	w0, #0xf2                  	// #242
    f278:	ret

000000000000f27c <_ZN4llvmL15getWRegFromXRegEj>:
    f27c:	sub	w8, w0, #0xd8
    f280:	cmp	w8, #0x1c
    f284:	b.hi	f2ac <_ZN4llvmL15getWRegFromXRegEj+0x30>  // b.pmore
    f288:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f28c:	add	x9, x9, #0x0
    f290:	adr	x10, f2a4 <_ZN4llvmL15getWRegFromXRegEj+0x28>
    f294:	ldrb	w11, [x9, x8]
    f298:	add	x10, x10, x11, lsl #2
    f29c:	mov	w0, #0xb9                  	// #185
    f2a0:	br	x10
    f2a4:	mov	w0, #0xba                  	// #186
    f2a8:	ret
    f2ac:	sub	w8, w0, #0x2
    f2b0:	cmp	w8, #0x6
    f2b4:	b.hi	f3bc <_ZN4llvmL15getWRegFromXRegEj+0x140>  // b.pmore
    f2b8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f2bc:	add	x9, x9, #0x0
    f2c0:	adr	x10, f2d0 <_ZN4llvmL15getWRegFromXRegEj+0x54>
    f2c4:	ldrb	w11, [x9, x8]
    f2c8:	add	x10, x10, x11, lsl #2
    f2cc:	br	x10
    f2d0:	mov	w0, #0xd6                  	// #214
    f2d4:	ret
    f2d8:	mov	w0, #0xbb                  	// #187
    f2dc:	ret
    f2e0:	mov	w0, #0xbc                  	// #188
    f2e4:	ret
    f2e8:	mov	w0, #0xbd                  	// #189
    f2ec:	ret
    f2f0:	mov	w0, #0xbe                  	// #190
    f2f4:	ret
    f2f8:	mov	w0, #0xbf                  	// #191
    f2fc:	ret
    f300:	mov	w0, #0xc0                  	// #192
    f304:	ret
    f308:	mov	w0, #0xc1                  	// #193
    f30c:	ret
    f310:	mov	w0, #0xc2                  	// #194
    f314:	ret
    f318:	mov	w0, #0xc3                  	// #195
    f31c:	ret
    f320:	mov	w0, #0xc4                  	// #196
    f324:	ret
    f328:	mov	w0, #0xc5                  	// #197
    f32c:	ret
    f330:	mov	w0, #0xc6                  	// #198
    f334:	ret
    f338:	mov	w0, #0xc7                  	// #199
    f33c:	ret
    f340:	mov	w0, #0xc8                  	// #200
    f344:	ret
    f348:	mov	w0, #0xc9                  	// #201
    f34c:	ret
    f350:	mov	w0, #0xca                  	// #202
    f354:	ret
    f358:	mov	w0, #0xcb                  	// #203
    f35c:	ret
    f360:	mov	w0, #0xcc                  	// #204
    f364:	ret
    f368:	mov	w0, #0xcd                  	// #205
    f36c:	ret
    f370:	mov	w0, #0xce                  	// #206
    f374:	ret
    f378:	mov	w0, #0xcf                  	// #207
    f37c:	ret
    f380:	mov	w0, #0xd0                  	// #208
    f384:	ret
    f388:	mov	w0, #0xd1                  	// #209
    f38c:	ret
    f390:	mov	w0, #0xd2                  	// #210
    f394:	ret
    f398:	mov	w0, #0xd4                  	// #212
    f39c:	ret
    f3a0:	mov	w0, #0xd5                  	// #213
    f3a4:	ret
    f3a8:	mov	w0, #0xd7                  	// #215
    f3ac:	ret
    f3b0:	mov	w0, #0x6                   	// #6
    f3b4:	ret
    f3b8:	mov	w0, #0x7                   	// #7
    f3bc:	ret
    f3c0:	mov	w0, #0xd3                  	// #211
    f3c4:	ret

000000000000f3c8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj>:
    f3c8:	sub	sp, sp, #0x120
    f3cc:	stp	x29, x30, [sp, #192]
    f3d0:	stp	x28, x27, [sp, #208]
    f3d4:	stp	x26, x25, [sp, #224]
    f3d8:	stp	x24, x23, [sp, #240]
    f3dc:	stp	x22, x21, [sp, #256]
    f3e0:	stp	x20, x19, [sp, #272]
    f3e4:	add	x29, sp, #0xc0
    f3e8:	ldr	w8, [x1, #8]
    f3ec:	mov	x21, x3
    f3f0:	str	w5, [sp, #12]
    f3f4:	stur	x0, [x29, #-72]
    f3f8:	cmp	w8, #0xc
    f3fc:	b.cc	f410 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x48>  // b.lo, b.ul, b.last
    f400:	mov	w8, #0xb                   	// #11
    f404:	mov	w0, wzr
    f408:	str	x8, [x21]
    f40c:	b	fe9c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xad4>
    f410:	cbz	w8, ff84 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xbbc>
    f414:	ldr	x8, [x1]
    f418:	mov	w19, w6
    f41c:	mov	x28, x4
    f420:	mov	x22, x2
    f424:	ldr	x0, [x8]
    f428:	mov	x20, x1
    f42c:	bl	a848 <_ZNK12_GLOBAL__N_114AArch64Operand8getTokenEv>
    f430:	mov	x26, x0
    f434:	mov	x27, x1
    f438:	mov	x8, #0xffffffffffffffff    	// #-1
    f43c:	stp	x8, x8, [x28]
    f440:	str	x8, [x28, #16]
    f444:	str	x8, [x21]
    f448:	cbz	w19, f460 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x98>
    f44c:	cmp	w19, #0x1
    f450:	b.ne	ffa4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xbdc>  // b.any
    f454:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f458:	add	x9, x9, #0x0
    f45c:	b	f468 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa0>
    f460:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f464:	add	x9, x9, #0x0
    f468:	mov	w8, #0x2618                	// #9752
    f46c:	movk	w8, #0x3, lsl #16
    f470:	add	x8, x9, x8
    f474:	sub	x8, x8, x9
    f478:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    f47c:	str	x21, [sp, #16]
    f480:	cmp	x8, #0x1
    f484:	add	x24, x24, #0x0
    f488:	mov	x21, x9
    f48c:	str	x22, [sp, #40]
    f490:	str	x27, [sp, #80]
    f494:	b.lt	f534 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x16c>  // b.tstop
    f498:	mov	x9, #0x4925                	// #18725
    f49c:	movk	x9, #0x2492, lsl #16
    f4a0:	movk	x9, #0x9249, lsl #32
    f4a4:	lsr	x8, x8, #2
    f4a8:	movk	x9, #0x4924, lsl #48
    f4ac:	umulh	x8, x8, x9
    f4b0:	lsr	x19, x8, #1
    f4b4:	mov	w22, #0x1c                  	// #28
    f4b8:	lsr	x23, x19, #1
    f4bc:	mov	x25, x21
    f4c0:	madd	x21, x23, x22, x21
    f4c4:	ldrh	w8, [x21]
    f4c8:	sub	x0, x29, #0x20
    f4cc:	mov	x1, x26
    f4d0:	mov	x2, x27
    f4d4:	add	x8, x24, x8
    f4d8:	ldrb	w9, [x8], #1
    f4dc:	stp	x8, x9, [x29, #-32]
    f4e0:	bl	0 <LLVMInitializeAArch64AsmParser>
    f4e4:	cmn	w0, #0x1
    f4e8:	b.eq	f514 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x14c>  // b.none
    f4ec:	ldrh	w8, [x21]
    f4f0:	sub	x0, x29, #0x20
    f4f4:	add	x1, x24, x8
    f4f8:	ldrb	w2, [x1], #1
    f4fc:	stp	x26, x27, [x29, #-32]
    f500:	bl	0 <LLVMInitializeAArch64AsmParser>
    f504:	cmn	w0, #0x1
    f508:	b.ne	f53c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x174>  // b.any
    f50c:	mov	x21, x25
    f510:	b	f520 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x158>
    f514:	mvn	x8, x23
    f518:	add	x21, x21, #0x1c
    f51c:	add	x23, x19, x8
    f520:	cmp	x23, #0x0
    f524:	mov	x19, x23
    f528:	mov	x23, x21
    f52c:	b.gt	f4b8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf0>
    f530:	b	f66c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x2a4>
    f534:	mov	x23, x21
    f538:	b	f66c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x2a4>
    f53c:	sub	x8, x21, x25
    f540:	mov	x22, x25
    f544:	cmp	x8, #0x1
    f548:	str	x26, [sp, #64]
    f54c:	b.lt	f5c4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1fc>  // b.tstop
    f550:	mov	x9, #0x4925                	// #18725
    f554:	movk	x9, #0x2492, lsl #16
    f558:	movk	x9, #0x9249, lsl #32
    f55c:	ldr	x23, [sp, #80]
    f560:	lsr	x8, x8, #2
    f564:	movk	x9, #0x4924, lsl #48
    f568:	umulh	x8, x8, x9
    f56c:	lsr	x24, x8, #1
    f570:	lsr	x26, x24, #1
    f574:	mov	w8, #0x1c                  	// #28
    f578:	madd	x27, x26, x8, x22
    f57c:	ldrh	w8, [x27], #28
    f580:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f584:	add	x9, x9, #0x0
    f588:	sub	x0, x29, #0x20
    f58c:	add	x8, x9, x8
    f590:	ldrb	w9, [x8], #1
    f594:	ldr	x1, [sp, #64]
    f598:	mov	x2, x23
    f59c:	stp	x8, x9, [x29, #-32]
    f5a0:	bl	0 <LLVMInitializeAArch64AsmParser>
    f5a4:	mov	x8, #0xffffffffffffffff    	// #-1
    f5a8:	eor	x8, x8, x24, lsr #1
    f5ac:	cmn	w0, #0x1
    f5b0:	add	x8, x24, x8
    f5b4:	csel	x24, x8, x26, eq  // eq = none
    f5b8:	csel	x22, x27, x22, eq  // eq = none
    f5bc:	cmp	x24, #0x0
    f5c0:	b.gt	f570 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1a8>
    f5c4:	mov	w8, #0x1c                  	// #28
    f5c8:	madd	x8, x19, x8, x25
    f5cc:	add	x23, x21, #0x1c
    f5d0:	sub	x8, x8, x23
    f5d4:	cmp	x8, #0x1
    f5d8:	b.lt	f658 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x290>  // b.tstop
    f5dc:	mov	x9, #0x4925                	// #18725
    f5e0:	movk	x9, #0x2492, lsl #16
    f5e4:	movk	x9, #0x9249, lsl #32
    f5e8:	ldr	x26, [sp, #64]
    f5ec:	ldr	x27, [sp, #80]
    f5f0:	lsr	x8, x8, #2
    f5f4:	movk	x9, #0x4924, lsl #48
    f5f8:	umulh	x8, x8, x9
    f5fc:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
    f600:	lsr	x21, x8, #1
    f604:	add	x19, x19, #0x0
    f608:	lsr	x24, x21, #1
    f60c:	mov	w8, #0x1c                  	// #28
    f610:	madd	x25, x24, x8, x23
    f614:	ldrh	w8, [x25], #28
    f618:	sub	x0, x29, #0x20
    f61c:	add	x1, x19, x8
    f620:	ldrb	w2, [x1], #1
    f624:	stp	x26, x27, [x29, #-32]
    f628:	bl	0 <LLVMInitializeAArch64AsmParser>
    f62c:	mov	x8, #0xffffffffffffffff    	// #-1
    f630:	eor	x8, x8, x21, lsr #1
    f634:	cmn	w0, #0x1
    f638:	add	x8, x21, x8
    f63c:	csel	x21, x24, x8, eq  // eq = none
    f640:	csel	x23, x23, x25, eq  // eq = none
    f644:	cmp	x21, #0x0
    f648:	b.gt	f608 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x240>
    f64c:	mov	x21, x22
    f650:	mov	x24, x19
    f654:	b	f66c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x2a4>
    f658:	ldr	x26, [sp, #64]
    f65c:	ldr	x27, [sp, #80]
    f660:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    f664:	mov	x21, x22
    f668:	add	x24, x24, #0x0
    f66c:	adrp	x25, 0 <_ZN4llvm9DebugFlagE>
    f670:	ldr	x25, [x25]
    f674:	ldrb	w8, [x25]
    f678:	cbz	w8, f6ec <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x324>
    f67c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f680:	add	x0, x0, #0x0
    f684:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    f688:	tbz	w0, #0, f6ec <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x324>
    f68c:	bl	0 <_ZN4llvm4dbgsEv>
    f690:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f694:	add	x1, x1, #0x0
    f698:	mov	w2, #0x12                  	// #18
    f69c:	bl	0 <LLVMInitializeAArch64AsmParser>
    f6a0:	mov	x9, #0x6db7                	// #28087
    f6a4:	movk	x9, #0xb6db, lsl #16
    f6a8:	sub	x8, x23, x21
    f6ac:	movk	x9, #0xdb6d, lsl #32
    f6b0:	asr	x8, x8, #2
    f6b4:	movk	x9, #0x6db6, lsl #48
    f6b8:	mul	x1, x8, x9
    f6bc:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    f6c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f6c4:	add	x1, x1, #0x0
    f6c8:	mov	w2, #0x1a                  	// #26
    f6cc:	bl	0 <LLVMInitializeAArch64AsmParser>
    f6d0:	mov	x1, x26
    f6d4:	mov	x2, x27
    f6d8:	bl	0 <LLVMInitializeAArch64AsmParser>
    f6dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f6e0:	add	x1, x1, #0x0
    f6e4:	mov	w2, #0x2                   	// #2
    f6e8:	bl	0 <LLVMInitializeAArch64AsmParser>
    f6ec:	cmp	x21, x23
    f6f0:	b.eq	fe98 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xad0>  // b.none
    f6f4:	ldur	x8, [x29, #-72]
    f6f8:	stp	xzr, x26, [sp, #56]
    f6fc:	mov	w19, #0x18                  	// #24
    f700:	sub	x26, x29, #0x20
    f704:	add	x8, x8, #0x18
    f708:	sub	x22, x29, #0x40
    f70c:	str	wzr, [sp, #36]
    f710:	str	wzr, [sp, #52]
    f714:	stur	x8, [x29, #-88]
    f718:	str	x21, [sp]
    f71c:	str	x28, [sp, #24]
    f720:	str	x23, [sp, #72]
    f724:	ldur	x9, [x29, #-88]
    f728:	mov	x8, xzr
    f72c:	ldr	x10, [x9, #16]
    f730:	ldr	q0, [x9]
    f734:	ldrb	w9, [x21, #6]
    f738:	stur	x10, [x29, #-16]
    f73c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    f740:	add	x10, x10, #0x0
    f744:	madd	x10, x9, x19, x10
    f748:	stur	q0, [x29, #-32]
    f74c:	ldr	x11, [x10, x8]
    f750:	ldr	x12, [x26, x8]
    f754:	and	x11, x12, x11
    f758:	str	x11, [x26, x8]
    f75c:	add	x8, x8, #0x8
    f760:	cmp	x8, #0x18
    f764:	b.ne	f74c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x384>  // b.any
    f768:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    f76c:	add	x8, x8, #0x0
    f770:	madd	x13, x9, x19, x8
    f774:	ldp	x8, x9, [x29, #-32]
    f778:	ldp	x11, x12, [x13]
    f77c:	ldur	x10, [x29, #-16]
    f780:	str	x13, [sp, #96]
    f784:	ldr	x13, [x13, #16]
    f788:	eor	x8, x8, x11
    f78c:	eor	x9, x9, x12
    f790:	ldrb	w11, [x25]
    f794:	eor	x10, x10, x13
    f798:	orr	x8, x8, x9
    f79c:	orr	x8, x8, x10
    f7a0:	cmp	x8, #0x0
    f7a4:	cset	w8, ne  // ne = any
    f7a8:	str	x13, [sp, #88]
    f7ac:	stur	w8, [x29, #-76]
    f7b0:	cbz	w11, f820 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x458>
    f7b4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f7b8:	add	x0, x0, #0x0
    f7bc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    f7c0:	tbz	w0, #0, f820 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x458>
    f7c4:	bl	0 <_ZN4llvm4dbgsEv>
    f7c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f7cc:	mov	w2, #0x17                  	// #23
    f7d0:	add	x1, x1, #0x0
    f7d4:	bl	0 <LLVMInitializeAArch64AsmParser>
    f7d8:	ldur	x8, [x29, #-72]
    f7dc:	ldrh	w1, [x21, #2]
    f7e0:	mov	x24, x0
    f7e4:	ldr	x8, [x8, #168]
    f7e8:	mov	x0, x8
    f7ec:	bl	0 <LLVMInitializeAArch64AsmParser>
    f7f0:	mov	x2, x0
    f7f4:	mov	x3, x1
    f7f8:	mov	x0, x24
    f7fc:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    f800:	mov	x1, x2
    f804:	mov	x2, x3
    f808:	add	x24, x24, #0x0
    f80c:	bl	0 <LLVMInitializeAArch64AsmParser>
    f810:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f814:	mov	w2, #0x1                   	// #1
    f818:	add	x1, x1, #0x0
    f81c:	bl	0 <LLVMInitializeAArch64AsmParser>
    f820:	ldrh	w8, [x21]
    f824:	add	x1, x24, x8
    f828:	ldrb	w8, [x1], #1
    f82c:	cmp	x27, x8
    f830:	b.ne	ff64 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xb9c>  // b.any
    f834:	cbz	x27, f848 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x480>
    f838:	ldr	x0, [sp, #64]
    f83c:	mov	x2, x27
    f840:	bl	0 <bcmp>
    f844:	cbnz	w0, ff64 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xb9c>
    f848:	mov	w23, #0x1                   	// #1
    f84c:	mov	w28, #0x8                   	// #8
    f850:	ldrh	w24, [x21, x28]
    f854:	ldrb	w8, [x25]
    f858:	sxth	x27, w24
    f85c:	cbz	w8, f8bc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x4f4>
    f860:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f864:	add	x0, x0, #0x0
    f868:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    f86c:	tbz	w0, #0, f8b8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x4f0>
    f870:	and	w19, w27, #0xffff
    f874:	bl	0 <_ZN4llvm4dbgsEv>
    f878:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f87c:	mov	w2, #0x20                  	// #32
    f880:	add	x1, x1, #0x0
    f884:	bl	0 <LLVMInitializeAArch64AsmParser>
    f888:	cmp	w19, #0x1d5
    f88c:	b.cs	ff4c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xb84>  // b.hs, b.nlast
    f890:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    f894:	add	x8, x8, #0x0
    f898:	ldr	x1, [x8, x27, lsl #3]
    f89c:	bl	0 <LLVMInitializeAArch64AsmParser>
    f8a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f8a4:	mov	w2, #0x21                  	// #33
    f8a8:	add	x1, x1, #0x0
    f8ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    f8b0:	mov	w1, w23
    f8b4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    f8b8:	ldrb	w8, [x25]
    f8bc:	ldr	w9, [x20, #8]
    f8c0:	mov	w19, w23
    f8c4:	cmp	w9, w23
    f8c8:	b.ls	f940 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x578>  // b.plast
    f8cc:	cbz	w8, f968 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5a0>
    f8d0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f8d4:	add	x0, x0, #0x0
    f8d8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    f8dc:	tbz	w0, #0, f968 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5a0>
    f8e0:	bl	0 <_ZN4llvm4dbgsEv>
    f8e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f8e8:	mov	w2, #0x2                   	// #2
    f8ec:	add	x1, x1, #0x0
    f8f0:	bl	0 <LLVMInitializeAArch64AsmParser>
    f8f4:	ldr	w8, [x20, #8]
    f8f8:	cmp	w8, w23
    f8fc:	b.ls	ff84 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xbbc>  // b.plast
    f900:	ldr	x8, [x20]
    f904:	ldr	x25, [x8, x19, lsl #3]
    f908:	bl	0 <_ZN4llvm4dbgsEv>
    f90c:	ldr	x8, [x25]
    f910:	mov	x1, x0
    f914:	mov	x0, x25
    f918:	ldr	x8, [x8, #112]
    f91c:	blr	x8
    f920:	bl	0 <_ZN4llvm4dbgsEv>
    f924:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f928:	mov	w2, #0x3                   	// #3
    f92c:	add	x1, x1, #0x0
    f930:	bl	0 <LLVMInitializeAArch64AsmParser>
    f934:	adrp	x25, 0 <_ZN4llvm9DebugFlagE>
    f938:	ldr	x25, [x25]
    f93c:	b	f968 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5a0>
    f940:	cbz	w8, f968 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5a0>
    f944:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f948:	add	x0, x0, #0x0
    f94c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    f950:	tbz	w0, #0, f968 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5a0>
    f954:	bl	0 <_ZN4llvm4dbgsEv>
    f958:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f95c:	mov	w2, #0x2                   	// #2
    f960:	add	x1, x1, #0x0
    f964:	bl	0 <LLVMInitializeAArch64AsmParser>
    f968:	ldr	w8, [x20, #8]
    f96c:	cmp	w8, w23
    f970:	b.ls	fa80 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x6b8>  // b.plast
    f974:	ldr	x8, [x20]
    f978:	mov	w1, w24
    f97c:	ldr	x25, [x8, x19, lsl #3]
    f980:	mov	x0, x25
    f984:	bl	1152c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE>
    f988:	cmp	w0, #0x4
    f98c:	b.ne	f9c4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5fc>  // b.any
    f990:	adrp	x25, 0 <_ZN4llvm9DebugFlagE>
    f994:	ldr	x25, [x25]
    f998:	ldrb	w8, [x25]
    f99c:	cbz	w8, fa20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x658>
    f9a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f9a4:	add	x0, x0, #0x0
    f9a8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    f9ac:	tbz	w0, #0, fa20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x658>
    f9b0:	bl	0 <_ZN4llvm4dbgsEv>
    f9b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f9b8:	mov	w2, #0x24                  	// #36
    f9bc:	add	x1, x1, #0x0
    f9c0:	b	fa1c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x654>
    f9c4:	mov	w27, w0
    f9c8:	ldur	x0, [x29, #-72]
    f9cc:	mov	x1, x25
    f9d0:	mov	w2, w24
    f9d4:	ldr	x8, [x0]
    f9d8:	ldr	x8, [x8, #80]
    f9dc:	blr	x8
    f9e0:	adrp	x25, 0 <_ZN4llvm9DebugFlagE>
    f9e4:	ldr	x25, [x25]
    f9e8:	cbz	w0, fa3c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x674>
    f9ec:	cmp	w0, #0x4
    f9f0:	b.ne	fa34 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x66c>  // b.any
    f9f4:	ldrb	w8, [x25]
    f9f8:	cbz	w8, fa20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x658>
    f9fc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fa00:	add	x0, x0, #0x0
    fa04:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    fa08:	tbz	w0, #0, fa20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x658>
    fa0c:	bl	0 <_ZN4llvm4dbgsEv>
    fa10:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fa14:	mov	w2, #0x23                  	// #35
    fa18:	add	x1, x1, #0x0
    fa1c:	bl	0 <LLVMInitializeAArch64AsmParser>
    fa20:	add	w23, w23, #0x1
    fa24:	add	x28, x28, #0x2
    fa28:	cmp	x28, #0x1c
    fa2c:	b.ne	f850 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x488>  // b.any
    fa30:	b	fac0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x6f8>
    fa34:	ldur	w8, [x29, #-76]
    fa38:	cbz	w8, fdbc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9f4>
    fa3c:	cbnz	w27, fdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9f8>
    fa40:	mov	w1, #0x1                   	// #1
    fa44:	mov	w0, w24
    fa48:	bl	10ad4 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
    fa4c:	tbz	w0, #0, fd30 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x968>
    fa50:	ldrb	w8, [x25]
    fa54:	cbz	w8, fa24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x65c>
    fa58:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fa5c:	add	x0, x0, #0x0
    fa60:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    fa64:	tbz	w0, #0, fa24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x65c>
    fa68:	bl	0 <_ZN4llvm4dbgsEv>
    fa6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fa70:	mov	w2, #0x1a                  	// #26
    fa74:	add	x1, x1, #0x0
    fa78:	bl	0 <LLVMInitializeAArch64AsmParser>
    fa7c:	b	fa24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x65c>
    fa80:	ldrb	w8, [x25]
    fa84:	cbz	w8, faac <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x6e4>
    fa88:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fa8c:	add	x0, x0, #0x0
    fa90:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    fa94:	tbz	w0, #0, faac <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x6e4>
    fa98:	bl	0 <_ZN4llvm4dbgsEv>
    fa9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    faa0:	mov	w2, #0x22                  	// #34
    faa4:	add	x1, x1, #0x0
    faa8:	bl	0 <LLVMInitializeAArch64AsmParser>
    faac:	cbz	w27, fac0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x6f8>
    fab0:	mov	w1, #0x1                   	// #1
    fab4:	mov	w0, w24
    fab8:	bl	10ad4 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
    fabc:	tbz	w0, #0, fd24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x95c>
    fac0:	ldur	w8, [x29, #-76]
    fac4:	cbz	w8, fc54 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x88c>
    fac8:	ldur	x10, [x29, #-88]
    facc:	ldr	x28, [sp, #24]
    fad0:	ldr	x23, [sp, #72]
    fad4:	mov	x8, xzr
    fad8:	ldr	x9, [x10, #16]
    fadc:	ldr	q0, [x10]
    fae0:	stur	x9, [x29, #-48]
    fae4:	stur	q0, [x29, #-64]
    fae8:	ldr	x9, [x22, x8]
    faec:	mvn	x9, x9
    faf0:	str	x9, [x22, x8]
    faf4:	add	x8, x8, #0x8
    faf8:	cmp	x8, #0x18
    fafc:	b.ne	fae8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x720>  // b.any
    fb00:	ldr	x9, [sp, #96]
    fb04:	mov	x8, xzr
    fb08:	ldr	q0, [x9]
    fb0c:	ldr	x9, [sp, #88]
    fb10:	stur	q0, [x29, #-32]
    fb14:	stur	x9, [x29, #-16]
    fb18:	ldr	x9, [x22, x8]
    fb1c:	ldr	x10, [x26, x8]
    fb20:	and	x9, x10, x9
    fb24:	str	x9, [x26, x8]
    fb28:	add	x8, x8, #0x8
    fb2c:	cmp	x8, #0x18
    fb30:	b.ne	fb18 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x750>  // b.any
    fb34:	ldrb	w8, [x25]
    fb38:	ldr	x27, [sp, #80]
    fb3c:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    fb40:	add	x24, x24, #0x0
    fb44:	mov	w19, #0x18                  	// #24
    fb48:	cbz	w8, fbe0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x818>
    fb4c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fb50:	add	x0, x0, #0x0
    fb54:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    fb58:	tbz	w0, #0, fbe0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x818>
    fb5c:	bl	0 <_ZN4llvm4dbgsEv>
    fb60:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fb64:	mov	w2, #0x18                  	// #24
    fb68:	add	x1, x1, #0x0
    fb6c:	bl	0 <LLVMInitializeAArch64AsmParser>
    fb70:	mov	x24, xzr
    fb74:	ubfx	x8, x24, #6, #26
    fb78:	ldr	x8, [x26, x8, lsl #3]
    fb7c:	lsr	x8, x8, x24
    fb80:	tbz	w8, #0, fbb8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x7f0>
    fb84:	bl	0 <_ZN4llvm4dbgsEv>
    fb88:	ldp	x9, x8, [x0, #16]
    fb8c:	cmp	x8, x9
    fb90:	b.cs	fba8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x7e0>  // b.hs, b.nlast
    fb94:	add	x9, x8, #0x1
    fb98:	str	x9, [x0, #24]
    fb9c:	mov	w9, #0x20                  	// #32
    fba0:	strb	w9, [x8]
    fba4:	b	fbb0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x7e8>
    fba8:	mov	w1, #0x20                  	// #32
    fbac:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    fbb0:	mov	x1, x24
    fbb4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    fbb8:	add	x24, x24, #0x1
    fbbc:	cmp	x24, #0xc0
    fbc0:	b.ne	fb74 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x7ac>  // b.any
    fbc4:	bl	0 <_ZN4llvm4dbgsEv>
    fbc8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fbcc:	mov	w2, #0x1                   	// #1
    fbd0:	add	x1, x1, #0x0
    fbd4:	bl	0 <LLVMInitializeAArch64AsmParser>
    fbd8:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    fbdc:	add	x24, x24, #0x0
    fbe0:	mov	x9, xzr
    fbe4:	mov	x8, xzr
    fbe8:	ldr	d0, [x26, x9]
    fbec:	add	x9, x9, #0x8
    fbf0:	cmp	x9, #0x18
    fbf4:	cnt	v0.8b, v0.8b
    fbf8:	uaddlv	h0, v0.8b
    fbfc:	fmov	w10, s0
    fc00:	add	x8, x10, x8
    fc04:	b.ne	fbe8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x820>  // b.any
    fc08:	mov	x10, xzr
    fc0c:	mov	x9, xzr
    fc10:	ldr	d0, [x28, x10]
    fc14:	add	x10, x10, #0x8
    fc18:	cmp	x10, #0x18
    fc1c:	cnt	v0.8b, v0.8b
    fc20:	uaddlv	h0, v0.8b
    fc24:	fmov	w11, s0
    fc28:	add	x9, x11, x9
    fc2c:	b.ne	fc10 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x848>  // b.any
    fc30:	cmp	x8, x9
    fc34:	b.hi	fc48 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x880>  // b.pmore
    fc38:	ldur	x8, [x29, #-16]
    fc3c:	ldur	q0, [x29, #-32]
    fc40:	str	x8, [x28, #16]
    fc44:	str	q0, [x28]
    fc48:	mov	w8, #0x1                   	// #1
    fc4c:	str	w8, [sp, #36]
    fc50:	b	fe68 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xaa0>
    fc54:	ldr	x19, [sp, #40]
    fc58:	ldur	x0, [x29, #-72]
    fc5c:	mov	x2, x20
    fc60:	str	wzr, [x19, #24]
    fc64:	ldrh	w8, [x21, #2]
    fc68:	mov	x1, x19
    fc6c:	str	w8, [x19]
    fc70:	ldr	x8, [x0]
    fc74:	ldr	x8, [x8, #88]
    fc78:	blr	x8
    fc7c:	ldr	x23, [sp, #72]
    fc80:	cmp	w0, #0x4
    fc84:	str	w0, [sp, #52]
    fc88:	b.ne	fd38 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x970>  // b.any
    fc8c:	ldrh	w1, [x21, #4]
    fc90:	ldr	w8, [sp, #12]
    fc94:	tbnz	w8, #0, febc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xaf4>
    fc98:	ldr	x19, [sp, #40]
    fc9c:	ldrh	w2, [x21, #2]
    fca0:	mov	w0, w1
    fca4:	mov	x3, x20
    fca8:	mov	x1, x19
    fcac:	bl	15ffc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
    fcb0:	ldur	x0, [x29, #-72]
    fcb4:	mov	x1, x19
    fcb8:	ldr	x8, [x0]
    fcbc:	ldr	x8, [x8, #96]
    fcc0:	blr	x8
    fcc4:	cmp	w0, #0x4
    fcc8:	str	w0, [sp, #52]
    fccc:	b.eq	fef8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xb30>  // b.none
    fcd0:	ldrb	w8, [x25]
    fcd4:	cbz	w8, fd18 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x950>
    fcd8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fcdc:	add	x0, x0, #0x0
    fce0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    fce4:	tbz	w0, #0, fd18 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x950>
    fce8:	bl	0 <_ZN4llvm4dbgsEv>
    fcec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fcf0:	mov	w2, #0x2d                  	// #45
    fcf4:	add	x1, x1, #0x0
    fcf8:	bl	0 <LLVMInitializeAArch64AsmParser>
    fcfc:	ldr	w8, [sp, #52]
    fd00:	mov	w1, w8
    fd04:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    fd08:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fd0c:	mov	w2, #0x1                   	// #1
    fd10:	add	x1, x1, #0x0
    fd14:	bl	0 <LLVMInitializeAArch64AsmParser>
    fd18:	ldr	x8, [sp, #40]
    fd1c:	str	wzr, [x8, #24]
    fd20:	b	fda0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9d8>
    fd24:	ldr	x8, [sp, #16]
    fd28:	str	x19, [x8]
    fd2c:	b	fdc8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa00>
    fd30:	mov	w27, wzr
    fd34:	b	fdc0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9f8>
    fd38:	str	wzr, [x19, #24]
    fd3c:	ldrb	w8, [x25]
    fd40:	cbz	w8, fda0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9d8>
    fd44:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fd48:	add	x0, x0, #0x0
    fd4c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    fd50:	ldr	x27, [sp, #80]
    fd54:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    fd58:	add	x24, x24, #0x0
    fd5c:	mov	w19, #0x18                  	// #24
    fd60:	tbz	w0, #0, fe00 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa38>
    fd64:	bl	0 <_ZN4llvm4dbgsEv>
    fd68:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fd6c:	mov	w2, #0x33                  	// #51
    fd70:	add	x1, x1, #0x0
    fd74:	bl	0 <LLVMInitializeAArch64AsmParser>
    fd78:	ldr	w8, [sp, #52]
    fd7c:	mov	w1, w8
    fd80:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    fd84:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fd88:	mov	w2, #0x1                   	// #1
    fd8c:	mov	w8, #0x1                   	// #1
    fd90:	add	x1, x1, #0x0
    fd94:	str	x8, [sp, #56]
    fd98:	bl	0 <LLVMInitializeAArch64AsmParser>
    fd9c:	b	fe68 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xaa0>
    fda0:	ldr	x27, [sp, #80]
    fda4:	mov	w8, #0x1                   	// #1
    fda8:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    fdac:	str	x8, [sp, #56]
    fdb0:	add	x24, x24, #0x0
    fdb4:	mov	w19, #0x18                  	// #24
    fdb8:	b	fe68 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xaa0>
    fdbc:	mov	w27, w0
    fdc0:	ldr	x8, [sp, #56]
    fdc4:	tbz	w8, #0, fdd0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa08>
    fdc8:	ldr	x23, [sp, #72]
    fdcc:	b	fe2c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa64>
    fdd0:	ldr	x8, [sp]
    fdd4:	ldr	x23, [sp, #72]
    fdd8:	cmp	x21, x8
    fddc:	b.eq	fdf0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa28>  // b.none
    fde0:	ldr	x8, [sp, #16]
    fde4:	ldr	x8, [x8]
    fde8:	cmp	x8, x19
    fdec:	b.hi	fe2c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa64>  // b.pmore
    fdf0:	ldur	w8, [x29, #-76]
    fdf4:	cbz	w8, fe0c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa44>
    fdf8:	ldr	x9, [sp, #16]
    fdfc:	b	fe28 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa60>
    fe00:	mov	w8, #0x1                   	// #1
    fe04:	str	x8, [sp, #56]
    fe08:	b	fe68 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xaa0>
    fe0c:	ldr	x9, [sp, #16]
    fe10:	ldr	x8, [x9]
    fe14:	cmp	x8, x19
    fe18:	ldr	w8, [sp, #52]
    fe1c:	ccmp	w27, #0x0, #0x0, eq  // eq = none
    fe20:	csel	w8, w27, w8, ne  // ne = any
    fe24:	str	w8, [sp, #52]
    fe28:	str	x19, [x9]
    fe2c:	ldrb	w8, [x25]
    fe30:	mov	w19, #0x18                  	// #24
    fe34:	cbz	w8, fe5c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa94>
    fe38:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fe3c:	add	x0, x0, #0x0
    fe40:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    fe44:	tbz	w0, #0, fe5c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa94>
    fe48:	bl	0 <_ZN4llvm4dbgsEv>
    fe4c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fe50:	mov	w2, #0x41                  	// #65
    fe54:	add	x1, x1, #0x0
    fe58:	bl	0 <LLVMInitializeAArch64AsmParser>
    fe5c:	ldr	x27, [sp, #80]
    fe60:	adrp	x24, 0 <LLVMInitializeAArch64AsmParser>
    fe64:	add	x24, x24, #0x0
    fe68:	add	x21, x21, #0x1c
    fe6c:	cmp	x21, x23
    fe70:	b.ne	f724 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x35c>  // b.any
    fe74:	ldr	x8, [sp, #56]
    fe78:	ldr	w9, [sp, #36]
    fe7c:	ldr	w0, [sp, #52]
    fe80:	orn	w8, w8, w9
    fe84:	tbnz	w8, #0, fe9c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xad4>
    fe88:	ldr	x8, [sp, #16]
    fe8c:	mov	w0, #0x2                   	// #2
    fe90:	str	xzr, [x8]
    fe94:	b	fe9c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xad4>
    fe98:	mov	w0, #0x3                   	// #3
    fe9c:	ldp	x20, x19, [sp, #272]
    fea0:	ldp	x22, x21, [sp, #256]
    fea4:	ldp	x24, x23, [sp, #240]
    fea8:	ldp	x26, x25, [sp, #224]
    feac:	ldp	x28, x27, [sp, #208]
    feb0:	ldp	x29, x30, [sp, #192]
    feb4:	add	sp, sp, #0x120
    feb8:	ret
    febc:	ldur	x19, [x29, #-72]
    fec0:	mov	x2, x20
    fec4:	ldr	x8, [x19]
    fec8:	mov	x0, x19
    fecc:	ldr	x8, [x8, #104]
    fed0:	blr	x8
    fed4:	ldrh	w1, [x21, #4]
    fed8:	ldr	x3, [sp, #16]
    fedc:	mov	x0, x19
    fee0:	mov	x2, x20
    fee4:	bl	15e90 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm>
    fee8:	tst	w0, #0x1
    feec:	mov	w8, #0x4                   	// #4
    fef0:	csinc	w0, w8, wzr, ne  // ne = any
    fef4:	b	fe9c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xad4>
    fef8:	ldrh	w1, [x21, #4]
    fefc:	ldur	x0, [x29, #-72]
    ff00:	ldr	x3, [sp, #16]
    ff04:	mov	x2, x20
    ff08:	bl	15e90 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm>
    ff0c:	tbz	w0, #0, ff44 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xb7c>
    ff10:	ldrb	w8, [x25]
    ff14:	cbz	w8, ff3c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xb74>
    ff18:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ff1c:	add	x0, x0, #0x0
    ff20:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    ff24:	tbz	w0, #0, ff3c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xb74>
    ff28:	bl	0 <_ZN4llvm4dbgsEv>
    ff2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ff30:	add	x1, x1, #0x0
    ff34:	mov	w2, #0x35                  	// #53
    ff38:	bl	0 <LLVMInitializeAArch64AsmParser>
    ff3c:	mov	w0, #0x4                   	// #4
    ff40:	b	fe9c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xad4>
    ff44:	mov	w0, #0x1                   	// #1
    ff48:	b	fe9c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xad4>
    ff4c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ff50:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ff54:	add	x0, x0, #0x0
    ff58:	add	x1, x1, #0x0
    ff5c:	mov	w2, #0x3015                	// #12309
    ff60:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ff64:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ff68:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ff6c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ff70:	add	x0, x0, #0x0
    ff74:	add	x1, x1, #0x0
    ff78:	add	x3, x3, #0x0
    ff7c:	mov	w2, #0x6b8d                	// #27533
    ff80:	bl	0 <__assert_fail>
    ff84:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ff88:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ff8c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ff90:	add	x0, x0, #0x0
    ff94:	add	x1, x1, #0x0
    ff98:	add	x3, x3, #0x0
    ff9c:	mov	w2, #0x99                  	// #153
    ffa0:	bl	0 <__assert_fail>
    ffa4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ffa8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ffac:	add	x0, x0, #0x0
    ffb0:	add	x1, x1, #0x0
    ffb4:	mov	w2, #0x6b76                	// #27510
    ffb8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000ffbc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE>:
    ffbc:	sub	sp, sp, #0x130
    ffc0:	stp	x29, x30, [sp, #208]
    ffc4:	stp	x28, x27, [sp, #224]
    ffc8:	stp	x26, x25, [sp, #240]
    ffcc:	stp	x24, x23, [sp, #256]
    ffd0:	stp	x22, x21, [sp, #272]
    ffd4:	stp	x20, x19, [sp, #288]
    ffd8:	add	x29, sp, #0xd0
    ffdc:	cmp	w2, #0x93
    ffe0:	b.hi	10a64 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xaa8>  // b.pmore
    ffe4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ffe8:	mov	w8, w2
    ffec:	add	x9, x9, #0x0
    fff0:	adr	x10, 10008 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4c>
    fff4:	ldrh	w11, [x9, x8, lsl #1]
    fff8:	add	x10, x10, x11, lsl #2
    fffc:	mov	x19, x1
   10000:	mov	x20, x0
   10004:	br	x10
   10008:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1000c:	add	x1, x1, #0x0
   10010:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10014:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10018:	add	x1, x1, #0x0
   1001c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10020:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10024:	add	x1, x1, #0x0
   10028:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1002c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10030:	add	x1, x1, #0x0
   10034:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10038:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1003c:	add	x1, x1, #0x0
   10040:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10044:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10048:	add	x1, x1, #0x0
   1004c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10050:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10054:	add	x1, x1, #0x0
   10058:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1005c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10060:	add	x1, x1, #0x0
   10064:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10068:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1006c:	add	x1, x1, #0x0
   10070:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10074:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10078:	add	x1, x1, #0x0
   1007c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10080:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10084:	add	x1, x1, #0x0
   10088:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1008c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10090:	add	x1, x1, #0x0
   10094:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10098:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1009c:	add	x1, x1, #0x0
   100a0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   100a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   100a8:	add	x1, x1, #0x0
   100ac:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   100b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   100b4:	add	x1, x1, #0x0
   100b8:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   100bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   100c0:	add	x1, x1, #0x0
   100c4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   100c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   100cc:	add	x1, x1, #0x0
   100d0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   100d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   100d8:	add	x1, x1, #0x0
   100dc:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   100e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   100e4:	add	x1, x1, #0x0
   100e8:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   100ec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   100f0:	add	x1, x1, #0x0
   100f4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   100f8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   100fc:	add	x1, x1, #0x0
   10100:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10104:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10108:	add	x1, x1, #0x0
   1010c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10110:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10114:	add	x1, x1, #0x0
   10118:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1011c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10120:	add	x1, x1, #0x0
   10124:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10128:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1012c:	add	x1, x1, #0x0
   10130:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10134:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10138:	add	x1, x1, #0x0
   1013c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10140:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10144:	add	x1, x1, #0x0
   10148:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1014c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10150:	add	x1, x1, #0x0
   10154:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10158:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1015c:	add	x1, x1, #0x0
   10160:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10164:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10168:	add	x1, x1, #0x0
   1016c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10170:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10174:	add	x1, x1, #0x0
   10178:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1017c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10180:	add	x1, x1, #0x0
   10184:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10188:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1018c:	add	x1, x1, #0x0
   10190:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10194:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10198:	add	x1, x1, #0x0
   1019c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   101a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   101a4:	add	x1, x1, #0x0
   101a8:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   101ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   101b0:	add	x1, x1, #0x0
   101b4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   101b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   101bc:	add	x1, x1, #0x0
   101c0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   101c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   101c8:	add	x1, x1, #0x0
   101cc:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   101d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   101d4:	add	x1, x1, #0x0
   101d8:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   101dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   101e0:	add	x1, x1, #0x0
   101e4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   101e8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   101ec:	add	x1, x1, #0x0
   101f0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   101f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   101f8:	add	x1, x1, #0x0
   101fc:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10200:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10204:	add	x1, x1, #0x0
   10208:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1020c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10210:	add	x1, x1, #0x0
   10214:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10218:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1021c:	add	x1, x1, #0x0
   10220:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10224:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10228:	add	x1, x1, #0x0
   1022c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10230:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10234:	add	x1, x1, #0x0
   10238:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1023c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10240:	add	x1, x1, #0x0
   10244:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10248:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1024c:	add	x1, x1, #0x0
   10250:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10254:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10258:	add	x1, x1, #0x0
   1025c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10260:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10264:	add	x1, x1, #0x0
   10268:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1026c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10270:	add	x1, x1, #0x0
   10274:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10278:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1027c:	add	x1, x1, #0x0
   10280:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10284:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10288:	add	x1, x1, #0x0
   1028c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10290:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10294:	add	x1, x1, #0x0
   10298:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1029c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   102a0:	add	x1, x1, #0x0
   102a4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   102a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   102ac:	add	x1, x1, #0x0
   102b0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   102b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   102b8:	add	x1, x1, #0x0
   102bc:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   102c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   102c4:	add	x1, x1, #0x0
   102c8:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   102cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   102d0:	add	x1, x1, #0x0
   102d4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   102d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   102dc:	add	x1, x1, #0x0
   102e0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   102e4:	ldr	w8, [x4, #8]
   102e8:	cmp	x8, x3
   102ec:	b.ls	10a7c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xac0>  // b.plast
   102f0:	ldr	x8, [x4]
   102f4:	ldr	x8, [x8, x3, lsl #3]
   102f8:	ldr	w9, [x8, #48]
   102fc:	cmp	w9, #0x3
   10300:	b.ne	10a9c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xae0>  // b.any
   10304:	ldr	w8, [x8, #84]
   10308:	cbz	w8, 107f4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x838>
   1030c:	cmp	w8, #0x1
   10310:	b.eq	107e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x82c>  // b.none
   10314:	cmp	w8, #0x2
   10318:	b.ne	10abc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb00>  // b.any
   1031c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10320:	add	x1, x1, #0x0
   10324:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10328:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1032c:	add	x1, x1, #0x0
   10330:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10334:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10338:	add	x1, x1, #0x0
   1033c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10340:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10344:	add	x1, x1, #0x0
   10348:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1034c:	ldr	w8, [x4, #8]
   10350:	cbz	w8, 10a7c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xac0>
   10354:	ldr	x8, [x4]
   10358:	ldr	x0, [x8]
   1035c:	bl	a848 <_ZNK12_GLOBAL__N_114AArch64Operand8getTokenEv>
   10360:	ldr	x8, [x20, #160]
   10364:	mov	x21, x0
   10368:	mov	x23, x1
   1036c:	add	x0, x8, #0xb8
   10370:	add	x8, sp, #0x8
   10374:	bl	204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
   10378:	stp	x21, x23, [x29, #-24]
   1037c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10380:	adrp	x25, 0 <LLVMInitializeAArch64AsmParser>
   10384:	adrp	x27, 0 <LLVMInitializeAArch64AsmParser>
   10388:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
   1038c:	mov	x22, xzr
   10390:	add	x8, x8, #0x0
   10394:	add	x25, x25, #0x0
   10398:	mov	w26, #0x18                  	// #24
   1039c:	add	x27, x27, #0x0
   103a0:	sub	x28, x29, #0x50
   103a4:	add	x21, x21, #0x0
   103a8:	stp	xzr, xzr, [x29, #-48]
   103ac:	stur	xzr, [x29, #-32]
   103b0:	str	x8, [sp]
   103b4:	ldr	x10, [sp, #24]
   103b8:	ldrb	w9, [x25, #6]
   103bc:	ldur	q0, [sp, #8]
   103c0:	mov	x8, xzr
   103c4:	stur	x10, [x29, #-64]
   103c8:	madd	x10, x9, x26, x27
   103cc:	stur	q0, [x29, #-80]
   103d0:	ldr	x11, [x10, x8]
   103d4:	ldr	x12, [x28, x8]
   103d8:	and	x11, x12, x11
   103dc:	str	x11, [x28, x8]
   103e0:	add	x8, x8, #0x8
   103e4:	cmp	x8, #0x18
   103e8:	b.ne	103d0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x414>  // b.any
   103ec:	madd	x8, x9, x26, x27
   103f0:	ldp	x9, x10, [x29, #-80]
   103f4:	ldp	x12, x13, [x8]
   103f8:	ldur	x11, [x29, #-64]
   103fc:	ldr	x8, [x8, #16]
   10400:	eor	x9, x9, x12
   10404:	eor	x10, x10, x13
   10408:	eor	x8, x11, x8
   1040c:	orr	x9, x9, x10
   10410:	orr	x8, x9, x8
   10414:	cbnz	x8, 104a8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4ec>
   10418:	ldrh	w8, [x25]
   1041c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10420:	add	x9, x9, #0x0
   10424:	add	x24, x9, x8
   10428:	ldrb	w23, [x24], #1
   1042c:	cmp	x22, x23
   10430:	stp	x24, x23, [x29, #-80]
   10434:	b.ne	10450 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x494>  // b.any
   10438:	cbz	x22, 104a8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4ec>
   1043c:	ldr	x1, [sp]
   10440:	mov	x0, x24
   10444:	mov	x2, x22
   10448:	bl	0 <bcmp>
   1044c:	cbz	w0, 104a8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4ec>
   10450:	sub	x0, x29, #0x18
   10454:	mov	w4, #0x2                   	// #2
   10458:	mov	x1, x24
   1045c:	mov	x2, x23
   10460:	mov	w3, wzr
   10464:	bl	0 <_ZNK4llvm9StringRef13edit_distanceES0_bj>
   10468:	cmp	w0, #0x2
   1046c:	b.hi	104a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4e4>  // b.pmore
   10470:	ldp	x1, x8, [x29, #-40]
   10474:	cmp	x1, x8
   10478:	b.eq	10494 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4d8>  // b.none
   1047c:	ldur	q0, [x29, #-80]
   10480:	str	q0, [x1]
   10484:	ldur	x8, [x29, #-40]
   10488:	add	x8, x8, #0x10
   1048c:	stur	x8, [x29, #-40]
   10490:	b	104a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4e4>
   10494:	sub	x0, x29, #0x30
   10498:	sub	x2, x29, #0x50
   1049c:	bl	0 <LLVMInitializeAArch64AsmParser>
   104a0:	mov	x22, x23
   104a4:	str	x24, [sp]
   104a8:	add	x25, x25, #0x1c
   104ac:	cmp	x25, x21
   104b0:	b.cc	103b4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x3f8>  // b.lo, b.ul, b.last
   104b4:	ldp	x0, x8, [x29, #-48]
   104b8:	cmp	x0, x8
   104bc:	b.eq	107d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x818>  // b.none
   104c0:	sub	x8, x29, #0x50
   104c4:	mov	w9, #0x10                  	// #16
   104c8:	add	x22, x8, #0x10
   104cc:	sub	x0, x29, #0x50
   104d0:	add	x1, sp, #0x60
   104d4:	mov	x2, xzr
   104d8:	stur	x22, [x29, #-80]
   104dc:	str	x9, [sp, #96]
   104e0:	add	x23, sp, #0x60
   104e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
   104e8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   104ec:	add	x9, x9, #0x0
   104f0:	ldr	x8, [sp, #96]
   104f4:	ldr	q0, [x9]
   104f8:	stur	x0, [x29, #-80]
   104fc:	stur	x8, [x29, #-64]
   10500:	str	q0, [x0]
   10504:	ldur	x9, [x29, #-80]
   10508:	stur	x8, [x29, #-72]
   1050c:	strb	wzr, [x9, x8]
   10510:	ldp	x8, x9, [x29, #-48]
   10514:	sub	x9, x9, x8
   10518:	cmp	x9, #0x10
   1051c:	b.ne	10844 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x888>  // b.any
   10520:	mov	x24, xzr
   10524:	b	108f8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x93c>
   10528:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1052c:	add	x1, x1, #0x0
   10530:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10534:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10538:	add	x1, x1, #0x0
   1053c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10540:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10544:	add	x1, x1, #0x0
   10548:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1054c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10550:	add	x1, x1, #0x0
   10554:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10558:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1055c:	add	x1, x1, #0x0
   10560:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10564:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10568:	add	x1, x1, #0x0
   1056c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10570:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10574:	add	x1, x1, #0x0
   10578:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1057c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10580:	add	x1, x1, #0x0
   10584:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10588:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1058c:	add	x1, x1, #0x0
   10590:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10594:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10598:	add	x1, x1, #0x0
   1059c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   105a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   105a4:	add	x1, x1, #0x0
   105a8:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   105ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   105b0:	add	x1, x1, #0x0
   105b4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   105b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   105bc:	add	x1, x1, #0x0
   105c0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   105c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   105c8:	add	x1, x1, #0x0
   105cc:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   105d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   105d4:	add	x1, x1, #0x0
   105d8:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   105dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   105e0:	add	x1, x1, #0x0
   105e4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   105e8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   105ec:	add	x1, x1, #0x0
   105f0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   105f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   105f8:	add	x1, x1, #0x0
   105fc:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10600:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10604:	add	x1, x1, #0x0
   10608:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1060c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10610:	add	x1, x1, #0x0
   10614:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10618:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1061c:	add	x1, x1, #0x0
   10620:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10624:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10628:	add	x1, x1, #0x0
   1062c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10630:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10634:	add	x1, x1, #0x0
   10638:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1063c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10640:	add	x1, x1, #0x0
   10644:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10648:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1064c:	add	x1, x1, #0x0
   10650:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10654:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10658:	add	x1, x1, #0x0
   1065c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10660:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10664:	add	x1, x1, #0x0
   10668:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1066c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10670:	add	x1, x1, #0x0
   10674:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10678:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1067c:	add	x1, x1, #0x0
   10680:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10684:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10688:	add	x1, x1, #0x0
   1068c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10690:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10694:	add	x1, x1, #0x0
   10698:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1069c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   106a0:	add	x1, x1, #0x0
   106a4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   106a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   106ac:	add	x1, x1, #0x0
   106b0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   106b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   106b8:	add	x1, x1, #0x0
   106bc:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   106c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   106c4:	add	x1, x1, #0x0
   106c8:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   106cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   106d0:	add	x1, x1, #0x0
   106d4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   106d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   106dc:	add	x1, x1, #0x0
   106e0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   106e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   106e8:	add	x1, x1, #0x0
   106ec:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   106f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   106f4:	add	x1, x1, #0x0
   106f8:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   106fc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10700:	add	x1, x1, #0x0
   10704:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10708:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1070c:	add	x1, x1, #0x0
   10710:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10714:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10718:	add	x1, x1, #0x0
   1071c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10720:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10724:	add	x1, x1, #0x0
   10728:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1072c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10730:	add	x1, x1, #0x0
   10734:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10738:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1073c:	add	x1, x1, #0x0
   10740:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10744:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10748:	add	x1, x1, #0x0
   1074c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10750:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10754:	add	x1, x1, #0x0
   10758:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1075c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10760:	add	x1, x1, #0x0
   10764:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10768:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1076c:	add	x1, x1, #0x0
   10770:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10774:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10778:	add	x1, x1, #0x0
   1077c:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10780:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10784:	add	x1, x1, #0x0
   10788:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   1078c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10790:	add	x1, x1, #0x0
   10794:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   10798:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1079c:	add	x1, x1, #0x0
   107a0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   107a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   107a8:	add	x1, x1, #0x0
   107ac:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   107b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   107b4:	add	x1, x1, #0x0
   107b8:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   107bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   107c0:	add	x1, x1, #0x0
   107c4:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   107c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   107cc:	add	x1, x1, #0x0
   107d0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   107d4:	add	x8, sp, #0x20
   107d8:	add	x8, x8, #0x10
   107dc:	stp	x8, xzr, [sp, #32]
   107e0:	strb	wzr, [sp, #48]
   107e4:	b	109e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa2c>
   107e8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   107ec:	add	x1, x1, #0x0
   107f0:	b	107fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x840>
   107f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   107f8:	add	x1, x1, #0x0
   107fc:	sub	x0, x29, #0x50
   10800:	bl	0 <LLVMInitializeAArch64AsmParser>
   10804:	ldr	x0, [x20, #8]
   10808:	sub	x2, x29, #0x50
   1080c:	mov	x1, x19
   10810:	mov	x3, xzr
   10814:	mov	x4, xzr
   10818:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   1081c:	mov	w19, w0
   10820:	and	w0, w19, #0x1
   10824:	ldp	x20, x19, [sp, #288]
   10828:	ldp	x22, x21, [sp, #272]
   1082c:	ldp	x24, x23, [sp, #256]
   10830:	ldp	x26, x25, [sp, #240]
   10834:	ldp	x28, x27, [sp, #224]
   10838:	ldp	x29, x30, [sp, #208]
   1083c:	add	sp, sp, #0x130
   10840:	ret
   10844:	add	x9, sp, #0x40
   10848:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
   1084c:	mov	x24, xzr
   10850:	add	x25, x23, #0x10
   10854:	add	x26, x9, #0x10
   10858:	add	x21, x21, #0x0
   1085c:	add	x0, x8, x24, lsl #4
   10860:	add	x8, sp, #0x40
   10864:	bl	0 <LLVMInitializeAArch64AsmParser>
   10868:	add	x0, sp, #0x40
   1086c:	mov	x1, x21
   10870:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
   10874:	str	x25, [sp, #96]
   10878:	mov	x8, x0
   1087c:	ldr	x9, [x8], #16
   10880:	cmp	x9, x8
   10884:	b.eq	10898 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x8dc>  // b.none
   10888:	str	x9, [sp, #96]
   1088c:	ldr	x9, [x0, #16]
   10890:	str	x9, [sp, #112]
   10894:	b	108a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x8e4>
   10898:	ldr	q0, [x9]
   1089c:	str	q0, [x25]
   108a0:	ldr	x9, [x0, #8]
   108a4:	str	x9, [sp, #104]
   108a8:	stp	x8, xzr, [x0]
   108ac:	strb	wzr, [x0, #16]
   108b0:	ldp	x1, x2, [sp, #96]
   108b4:	sub	x0, x29, #0x50
   108b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   108bc:	ldr	x0, [sp, #96]
   108c0:	cmp	x0, x25
   108c4:	b.eq	108cc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x910>  // b.none
   108c8:	bl	0 <_ZdlPv>
   108cc:	ldr	x0, [sp, #64]
   108d0:	cmp	x0, x26
   108d4:	b.eq	108dc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x920>  // b.none
   108d8:	bl	0 <_ZdlPv>
   108dc:	ldp	x8, x9, [x29, #-48]
   108e0:	add	w24, w24, #0x1
   108e4:	sub	x9, x9, x8
   108e8:	asr	x9, x9, #4
   108ec:	sub	x9, x9, #0x1
   108f0:	cmp	x9, x24
   108f4:	b.hi	1085c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x8a0>  // b.pmore
   108f8:	add	x0, x8, x24, lsl #4
   108fc:	add	x8, sp, #0x40
   10900:	bl	0 <LLVMInitializeAArch64AsmParser>
   10904:	ldp	x3, x4, [x29, #-80]
   10908:	add	x0, sp, #0x40
   1090c:	mov	x1, xzr
   10910:	mov	x2, xzr
   10914:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
   10918:	add	x21, x23, #0x10
   1091c:	str	x21, [sp, #96]
   10920:	mov	x8, x0
   10924:	ldr	x9, [x8], #16
   10928:	cmp	x9, x8
   1092c:	b.eq	10940 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x984>  // b.none
   10930:	str	x9, [sp, #96]
   10934:	ldr	x9, [x0, #16]
   10938:	str	x9, [sp, #112]
   1093c:	b	10948 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x98c>
   10940:	ldr	q0, [x9]
   10944:	str	q0, [x21]
   10948:	ldr	x9, [x0, #8]
   1094c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10950:	add	x1, x1, #0x0
   10954:	str	x9, [sp, #104]
   10958:	stp	x8, xzr, [x0]
   1095c:	strb	wzr, [x0, #16]
   10960:	add	x0, sp, #0x60
   10964:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
   10968:	add	x8, sp, #0x20
   1096c:	add	x9, x8, #0x10
   10970:	str	x9, [sp, #32]
   10974:	mov	x8, x0
   10978:	ldr	x10, [x8], #16
   1097c:	cmp	x10, x8
   10980:	b.eq	10994 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x9d8>  // b.none
   10984:	str	x10, [sp, #32]
   10988:	ldr	x9, [x0, #16]
   1098c:	str	x9, [sp, #48]
   10990:	b	1099c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x9e0>
   10994:	ldr	q0, [x10]
   10998:	str	q0, [x9]
   1099c:	ldr	x9, [x0, #8]
   109a0:	str	x9, [sp, #40]
   109a4:	stp	x8, xzr, [x0]
   109a8:	strb	wzr, [x0, #16]
   109ac:	ldr	x0, [sp, #96]
   109b0:	cmp	x0, x21
   109b4:	b.eq	109bc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa00>  // b.none
   109b8:	bl	0 <_ZdlPv>
   109bc:	ldr	x0, [sp, #64]
   109c0:	add	x8, sp, #0x40
   109c4:	add	x8, x8, #0x10
   109c8:	cmp	x0, x8
   109cc:	b.eq	109d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa18>  // b.none
   109d0:	bl	0 <_ZdlPv>
   109d4:	ldur	x0, [x29, #-80]
   109d8:	cmp	x0, x22
   109dc:	b.eq	109e4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa28>  // b.none
   109e0:	bl	0 <_ZdlPv>
   109e4:	ldur	x0, [x29, #-48]
   109e8:	cbz	x0, 109f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa34>
   109ec:	bl	0 <_ZdlPv>
   109f0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   109f4:	add	x0, x0, #0x0
   109f8:	sub	x8, x29, #0x50
   109fc:	add	x1, sp, #0x20
   10a00:	sub	x22, x29, #0x50
   10a04:	add	x21, sp, #0x20
   10a08:	bl	0 <LLVMInitializeAArch64AsmParser>
   10a0c:	add	x0, sp, #0x60
   10a10:	sub	x1, x29, #0x50
   10a14:	bl	0 <LLVMInitializeAArch64AsmParser>
   10a18:	ldr	x0, [x20, #8]
   10a1c:	add	x2, sp, #0x60
   10a20:	mov	x1, x19
   10a24:	mov	x3, xzr
   10a28:	mov	x4, xzr
   10a2c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   10a30:	ldur	x8, [x29, #-80]
   10a34:	add	x9, x22, #0x10
   10a38:	mov	w19, w0
   10a3c:	cmp	x8, x9
   10a40:	b.eq	10a4c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa90>  // b.none
   10a44:	mov	x0, x8
   10a48:	bl	0 <_ZdlPv>
   10a4c:	ldr	x0, [sp, #32]
   10a50:	add	x8, x21, #0x10
   10a54:	cmp	x0, x8
   10a58:	b.eq	10820 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x864>  // b.none
   10a5c:	bl	0 <_ZdlPv>
   10a60:	b	10820 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x864>
   10a64:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10a68:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10a6c:	add	x0, x0, #0x0
   10a70:	add	x1, x1, #0x0
   10a74:	mov	w2, #0x1189                	// #4489
   10a78:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   10a7c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10a80:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10a84:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10a88:	add	x0, x0, #0x0
   10a8c:	add	x1, x1, #0x0
   10a90:	add	x3, x3, #0x0
   10a94:	mov	w2, #0x95                  	// #149
   10a98:	bl	0 <__assert_fail>
   10a9c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10aa0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10aa4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10aa8:	add	x0, x0, #0x0
   10aac:	add	x1, x1, #0x0
   10ab0:	add	x3, x3, #0x0
   10ab4:	mov	w2, #0x221                 	// #545
   10ab8:	bl	0 <__assert_fail>
   10abc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10ac0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10ac4:	add	x0, x0, #0x0
   10ac8:	add	x1, x1, #0x0
   10acc:	mov	w2, #0x105d                	// #4189
   10ad0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000010ad4 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>:
   10ad4:	cmp	w0, w1
   10ad8:	b.ne	10ae4 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x10>  // b.any
   10adc:	mov	w0, #0x1                   	// #1
   10ae0:	ret
   10ae4:	sub	w9, w0, #0x2
   10ae8:	mov	w8, w0
   10aec:	cmp	w9, #0xb7
   10af0:	mov	w0, wzr
   10af4:	b.hi	10b18 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x44>  // b.pmore
   10af8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10afc:	add	x8, x8, #0x0
   10b00:	adr	x10, 10b10 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x3c>
   10b04:	ldrh	w11, [x8, x9, lsl #1]
   10b08:	add	x10, x10, x11, lsl #2
   10b0c:	br	x10
   10b10:	cmp	w1, #0xac
   10b14:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b18:	sub	w8, w8, #0x117
   10b1c:	cmp	w8, #0x8
   10b20:	b.hi	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>  // b.pmore
   10b24:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10b28:	add	x9, x9, #0x0
   10b2c:	adr	x10, 10b3c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x68>
   10b30:	ldrh	w11, [x9, x8, lsl #1]
   10b34:	add	x10, x10, x11, lsl #2
   10b38:	br	x10
   10b3c:	cmp	w1, #0x120
   10b40:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b44:	cmp	w1, #0xa8
   10b48:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b4c:	cmp	w1, #0xa7
   10b50:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b54:	cmp	w1, #0xab
   10b58:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b5c:	cmp	w1, #0x92
   10b60:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b64:	cmp	w1, #0xaa
   10b68:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b6c:	cmp	w1, #0xa6
   10b70:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b74:	cmp	w1, #0xad
   10b78:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b7c:	cmp	w1, #0xae
   10b80:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b84:	cmp	w1, #0xba
   10b88:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10b8c:	cmp	w1, #0x2c
   10b90:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10b94:	cmp	w1, #0x2d
   10b98:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10b9c:	cmp	w1, #0x2e
   10ba0:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10ba4:	cmp	w1, #0x2f
   10ba8:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10bac:	cmp	w1, #0x30
   10bb0:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10bb4:	cmp	w1, #0x31
   10bb8:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10bbc:	cmp	w1, #0x32
   10bc0:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10bc4:	cmp	w1, #0x33
   10bc8:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10bcc:	cmp	w1, #0x34
   10bd0:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10bd4:	cmp	w1, #0x35
   10bd8:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10bdc:	cmp	w1, #0x36
   10be0:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10be4:	cmp	w1, #0x37
   10be8:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10bec:	cmp	w1, #0x38
   10bf0:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10bf4:	cmp	w1, #0x39
   10bf8:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10bfc:	cmp	w1, #0x3a
   10c00:	b	10c08 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x134>
   10c04:	cmp	w1, #0x3b
   10c08:	cset	w0, eq  // eq = none
   10c0c:	ret
   10c10:	sub	w8, w1, #0x63
   10c14:	cmp	w8, #0x30
   10c18:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10c1c:	mov	x9, #0x3                   	// #3
   10c20:	movk	x9, #0x4, lsl #16
   10c24:	b	110a0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x5cc>
   10c28:	cmp	w1, #0xad
   10c2c:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10c30:	cmp	w1, #0xa3
   10c34:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10c38:	b	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>
   10c3c:	cmp	w1, #0xae
   10c40:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10c44:	cmp	w1, #0xa5
   10c48:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10c4c:	b	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>
   10c50:	sub	w8, w1, #0x95
   10c54:	cmp	w8, #0x1a
   10c58:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10c5c:	mov	w9, #0x8011                	// #32785
   10c60:	movk	w9, #0x201, lsl #16
   10c64:	b	1128c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7b8>
   10c68:	sub	w8, w1, #0x5d
   10c6c:	cmp	w8, #0x36
   10c70:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10c74:	mov	x9, #0x20e1                	// #8417
   10c78:	movk	x9, #0x180, lsl #16
   10c7c:	movk	x9, #0x20, lsl #48
   10c80:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   10c84:	cmp	w1, #0x91
   10c88:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10c8c:	cmp	w1, #0x76
   10c90:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10c94:	b	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>
   10c98:	cmp	w1, #0x64
   10c9c:	mov	w0, wzr
   10ca0:	b.le	11384 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8b0>
   10ca4:	sub	w8, w1, #0x65
   10ca8:	cmp	w8, #0xd
   10cac:	b.hi	114a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x9d4>  // b.pmore
   10cb0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10cb4:	add	x9, x9, #0x0
   10cb8:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   10cbc:	ldrb	w11, [x9, x8]
   10cc0:	add	x10, x10, x11, lsl #2
   10cc4:	br	x10
   10cc8:	cmp	w1, #0x6d
   10ccc:	mov	w0, wzr
   10cd0:	b.gt	112b0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7dc>
   10cd4:	sub	w8, w1, #0x4e
   10cd8:	cmp	w8, #0x8
   10cdc:	b.hi	11514 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0xa40>  // b.pmore
   10ce0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10ce4:	add	x9, x9, #0x0
   10ce8:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   10cec:	ldrb	w11, [x9, x8]
   10cf0:	add	x10, x10, x11, lsl #2
   10cf4:	br	x10
   10cf8:	cmp	w1, #0x6f
   10cfc:	mov	w0, wzr
   10d00:	b.gt	112e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x814>
   10d04:	sub	w8, w1, #0x50
   10d08:	cmp	w8, #0x9
   10d0c:	b.hi	11520 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0xa4c>  // b.pmore
   10d10:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10d14:	add	x9, x9, #0x0
   10d18:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   10d1c:	ldrb	w11, [x9, x8]
   10d20:	add	x10, x10, x11, lsl #2
   10d24:	br	x10
   10d28:	cmp	w1, #0x7f
   10d2c:	mov	w0, wzr
   10d30:	b.gt	11460 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x98c>
   10d34:	sub	w8, w1, #0x65
   10d38:	cmp	w8, #0xd
   10d3c:	b.hi	11484 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x9b0>  // b.pmore
   10d40:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10d44:	add	x9, x9, #0x0
   10d48:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   10d4c:	ldrb	w11, [x9, x8]
   10d50:	add	x10, x10, x11, lsl #2
   10d54:	br	x10
   10d58:	cmp	w1, #0x7c
   10d5c:	mov	w0, wzr
   10d60:	b.gt	11320 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x84c>
   10d64:	cmp	w1, #0x54
   10d68:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10d6c:	cmp	w1, #0x55
   10d70:	b.ne	114e0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0xa0c>  // b.any
   10d74:	b	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   10d78:	cmp	w1, #0x6e
   10d7c:	mov	w0, wzr
   10d80:	b.le	113cc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8f8>
   10d84:	cmp	w1, #0x7d
   10d88:	b.gt	112d4 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x800>
   10d8c:	b	112c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7ec>
   10d90:	cmp	w1, #0x7f
   10d94:	mov	w0, wzr
   10d98:	b.gt	1133c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x868>
   10d9c:	cmp	w1, #0x57
   10da0:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10da4:	cmp	w1, #0x58
   10da8:	b.ne	114f4 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0xa20>  // b.any
   10dac:	b	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   10db0:	cmp	w1, #0x70
   10db4:	mov	w0, wzr
   10db8:	b.le	113e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x914>
   10dbc:	cmp	w1, #0x80
   10dc0:	b.gt	1130c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x838>
   10dc4:	b	112f8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x824>
   10dc8:	cmp	w1, #0x7f
   10dcc:	mov	w0, wzr
   10dd0:	b.gt	1143c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x968>
   10dd4:	sub	w8, w1, #0x65
   10dd8:	cmp	w8, #0xd
   10ddc:	b.hi	11500 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0xa2c>  // b.pmore
   10de0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10de4:	add	x9, x9, #0x0
   10de8:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   10dec:	ldrb	w11, [x9, x8]
   10df0:	add	x10, x10, x11, lsl #2
   10df4:	br	x10
   10df8:	cmp	w1, #0x83
   10dfc:	mov	w0, wzr
   10e00:	b.gt	11350 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x87c>
   10e04:	cmp	w1, #0x5b
   10e08:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10e0c:	cmp	w1, #0x5c
   10e10:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10e14:	cmp	w1, #0x73
   10e18:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10e1c:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   10e20:	cmp	w1, #0xab
   10e24:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10e28:	cmp	w1, #0x7d
   10e2c:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10e30:	b	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>
   10e34:	sub	w8, w1, #0x6e
   10e38:	cmp	w8, #0x3e
   10e3c:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10e40:	mov	x9, #0x8001                	// #32769
   10e44:	movk	x9, #0x1, lsl #16
   10e48:	b	11028 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x554>
   10e4c:	cmp	w1, #0x7c
   10e50:	mov	w0, wzr
   10e54:	b.le	11404 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x930>
   10e58:	cmp	w1, #0x7e
   10e5c:	b.gt	112dc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x808>
   10e60:	cmp	w1, #0x7d
   10e64:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10e68:	cmp	w1, #0x7e
   10e6c:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10e70:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   10e74:	cmp	w1, #0xac
   10e78:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10e7c:	cmp	w1, #0x80
   10e80:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10e84:	b	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>
   10e88:	sub	w8, w1, #0x70
   10e8c:	cmp	w8, #0x3d
   10e90:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10e94:	mov	x9, #0x1                   	// #1
   10e98:	movk	x9, #0x3, lsl #16
   10e9c:	b	11044 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x570>
   10ea0:	cmp	w1, #0x7f
   10ea4:	mov	w0, wzr
   10ea8:	b.le	11420 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x94c>
   10eac:	cmp	w1, #0x81
   10eb0:	b.gt	11314 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x840>
   10eb4:	cmp	w1, #0x80
   10eb8:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10ebc:	cmp	w1, #0x81
   10ec0:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10ec4:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   10ec8:	sub	w8, w1, #0x65
   10ecc:	cmp	w8, #0xd
   10ed0:	mov	w0, wzr
   10ed4:	b.hi	113a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8d4>  // b.pmore
   10ed8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10edc:	add	x9, x9, #0x0
   10ee0:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   10ee4:	ldrb	w11, [x9, x8]
   10ee8:	add	x10, x10, x11, lsl #2
   10eec:	br	x10
   10ef0:	cmp	w1, #0xaa
   10ef4:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10ef8:	cmp	w1, #0x84
   10efc:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10f00:	b	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>
   10f04:	sub	w8, w1, #0x73
   10f08:	cmp	w8, #0x38
   10f0c:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10f10:	mov	x9, #0x1                   	// #1
   10f14:	movk	x9, #0x6, lsl #16
   10f18:	movk	x9, #0x80, lsl #48
   10f1c:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   10f20:	sub	w8, w1, #0x62
   10f24:	cmp	w8, #0x31
   10f28:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10f2c:	mov	x9, #0x107                 	// #263
   10f30:	movk	x9, #0xc, lsl #16
   10f34:	b	11084 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x5b0>
   10f38:	sub	w8, w1, #0x98
   10f3c:	cmp	w8, #0x16
   10f40:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10f44:	mov	w9, #0xc01                 	// #3073
   10f48:	movk	w9, #0x20, lsl #16
   10f4c:	b	1128c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7b8>
   10f50:	sub	w8, w1, #0x94
   10f54:	cmp	w8, #0x1b
   10f58:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10f5c:	mov	w9, #0x2f                  	// #47
   10f60:	movk	w9, #0x403, lsl #16
   10f64:	b	1128c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7b8>
   10f68:	cmp	w1, #0x90
   10f6c:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   10f70:	cmp	w1, #0xa9
   10f74:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10f78:	cmp	w1, #0x93
   10f7c:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10f80:	b	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>
   10f84:	sub	w8, w1, #0x64
   10f88:	cmp	w8, #0x2f
   10f8c:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10f90:	mov	x9, #0x41                  	// #65
   10f94:	movk	x9, #0x3, lsl #16
   10f98:	b	110d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x5fc>
   10f9c:	sub	w8, w1, #0x64
   10fa0:	cmp	w8, #0x2f
   10fa4:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   10fa8:	mov	x9, #0x1                   	// #1
   10fac:	movk	x9, #0x2, lsl #16
   10fb0:	b	110d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x5fc>
   10fb4:	cmp	w1, #0x92
   10fb8:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10fbc:	cmp	w1, #0x75
   10fc0:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   10fc4:	b	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>
   10fc8:	sub	w8, w1, #0x68
   10fcc:	cmp	w8, #0xa
   10fd0:	mov	w0, wzr
   10fd4:	b.ls	1136c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x898>  // b.plast
   10fd8:	sub	w8, w1, #0x80
   10fdc:	cmp	w8, #0x3
   10fe0:	b.hi	114cc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x9f8>  // b.pmore
   10fe4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10fe8:	add	x9, x9, #0x0
   10fec:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   10ff0:	ldrb	w11, [x9, x8]
   10ff4:	add	x10, x10, x11, lsl #2
   10ff8:	br	x10
   10ffc:	sub	w8, w1, #0x6c
   11000:	cmp	w8, #0x3d
   11004:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11008:	mov	x9, #0x1e0000000           	// #8053063680
   1100c:	movk	x9, #0xe003
   11010:	b	11044 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x570>
   11014:	sub	w8, w1, #0x6e
   11018:	cmp	w8, #0x3e
   1101c:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11020:	mov	x9, #0x8003                	// #32771
   11024:	movk	x9, #0x3, lsl #16
   11028:	movk	x9, #0x2000, lsl #48
   1102c:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   11030:	sub	w8, w1, #0x70
   11034:	cmp	w8, #0x3d
   11038:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   1103c:	mov	x9, #0x3                   	// #3
   11040:	movk	x9, #0x7, lsl #16
   11044:	movk	x9, #0x1000, lsl #48
   11048:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   1104c:	sub	w8, w1, #0x71
   11050:	cmp	w8, #0x3c
   11054:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11058:	mov	x9, #0x3                   	// #3
   1105c:	movk	x9, #0x7, lsl #16
   11060:	movk	x9, #0x800, lsl #48
   11064:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   11068:	sub	w8, w1, #0x74
   1106c:	b	111ac <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6d8>
   11070:	sub	w8, w1, #0x77
   11074:	cmp	w8, #0x31
   11078:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   1107c:	mov	x9, #0x8003                	// #32771
   11080:	movk	x9, #0x3, lsl #16
   11084:	movk	x9, #0x1, lsl #48
   11088:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   1108c:	sub	w8, w1, #0x79
   11090:	cmp	w8, #0x30
   11094:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11098:	mov	x9, #0x3                   	// #3
   1109c:	movk	x9, #0x7, lsl #16
   110a0:	movk	x9, #0x8000, lsl #32
   110a4:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   110a8:	sub	w8, w1, #0x7a
   110ac:	cmp	w8, #0x2f
   110b0:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   110b4:	mov	x9, #0x3                   	// #3
   110b8:	movk	x9, #0x7, lsl #16
   110bc:	b	110d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x5fc>
   110c0:	sub	w8, w1, #0x7d
   110c4:	cmp	w8, #0x2f
   110c8:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   110cc:	mov	x9, #0x3                   	// #3
   110d0:	movk	x9, #0x4000, lsl #32
   110d4:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   110d8:	sub	w8, w1, #0x7e
   110dc:	cmp	w8, #0x2e
   110e0:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   110e4:	mov	x9, #0x3                   	// #3
   110e8:	movk	x9, #0x2000, lsl #32
   110ec:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   110f0:	sub	w8, w1, #0x80
   110f4:	cmp	w8, #0x2d
   110f8:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   110fc:	mov	x9, #0x3                   	// #3
   11100:	movk	x9, #0x1000, lsl #32
   11104:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   11108:	sub	w8, w1, #0x81
   1110c:	cmp	w8, #0x2c
   11110:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11114:	mov	x9, #0x3                   	// #3
   11118:	movk	x9, #0x800, lsl #32
   1111c:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   11120:	sub	w8, w1, #0x82
   11124:	cmp	w8, #0x2b
   11128:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   1112c:	mov	x9, #0x3                   	// #3
   11130:	movk	x9, #0x400, lsl #32
   11134:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   11138:	sub	w8, w1, #0x84
   1113c:	cmp	w8, #0x27
   11140:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11144:	mov	x9, #0x3                   	// #3
   11148:	movk	x9, #0x40, lsl #32
   1114c:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   11150:	cmp	w1, #0x91
   11154:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   11158:	sub	w8, w1, #0x86
   1115c:	cmp	w8, #0x22
   11160:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11164:	mov	x9, #0x3                   	// #3
   11168:	movk	x9, #0x2, lsl #32
   1116c:	b	11184 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x6b0>
   11170:	sub	w8, w1, #0x87
   11174:	cmp	w8, #0x21
   11178:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   1117c:	mov	x9, #0x3                   	// #3
   11180:	movk	x9, #0x1, lsl #32
   11184:	lsr	x8, x9, x8
   11188:	and	w0, w8, #0x1
   1118c:	ret
   11190:	sub	w8, w1, #0x89
   11194:	cmp	w8, #0x20
   11198:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   1119c:	mov	w9, #0x80000003            	// #-2147483645
   111a0:	lsr	w8, w9, w8
   111a4:	b	11290 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7bc>
   111a8:	sub	w8, w1, #0x8a
   111ac:	cmp	w8, #0x1f
   111b0:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   111b4:	mov	w9, #0x3                   	// #3
   111b8:	movk	w9, #0x4000, lsl #16
   111bc:	b	1128c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7b8>
   111c0:	sub	w8, w1, #0x8b
   111c4:	cmp	w8, #0x1e
   111c8:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   111cc:	mov	w9, #0x3                   	// #3
   111d0:	movk	w9, #0x2000, lsl #16
   111d4:	b	1128c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7b8>
   111d8:	sub	w8, w1, #0x8d
   111dc:	cmp	w8, #0x1a
   111e0:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   111e4:	mov	w9, #0x3                   	// #3
   111e8:	movk	w9, #0x200, lsl #16
   111ec:	b	1128c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7b8>
   111f0:	cmp	w1, #0x9d
   111f4:	b	111fc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x728>
   111f8:	cmp	w1, #0xa9
   111fc:	cset	w0, eq  // eq = none
   11200:	ret
   11204:	sub	w8, w1, #0x95
   11208:	cmp	w8, #0x1a
   1120c:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11210:	mov	w9, #0x8011                	// #32785
   11214:	movk	w9, #0x201, lsl #16
   11218:	orr	w9, w9, #0x6
   1121c:	b	1128c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7b8>
   11220:	sub	w8, w1, #0x99
   11224:	cmp	w8, #0x16
   11228:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   1122c:	mov	w9, #0xc01                 	// #3073
   11230:	movk	w9, #0x20, lsl #16
   11234:	add	w9, w9, #0xc00
   11238:	b	1128c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7b8>
   1123c:	sub	w8, w1, #0x97
   11240:	cmp	w8, #0x18
   11244:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11248:	mov	w9, #0x6005                	// #24581
   1124c:	movk	w9, #0x80, lsl #16
   11250:	b	1128c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7b8>
   11254:	cmp	w1, #0xae
   11258:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   1125c:	cmp	w1, #0xa4
   11260:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11264:	b	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>
   11268:	sub	w8, w1, #0xa2
   1126c:	cmp	w8, #0xc
   11270:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11274:	mov	w9, #0x803                 	// #2051
   11278:	b	1128c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7b8>
   1127c:	sub	w8, w1, #0xa4
   11280:	cmp	w8, #0xb
   11284:	b.cs	112a8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x7d4>  // b.hs, b.nlast
   11288:	mov	w9, #0x403                 	// #1027
   1128c:	lsr	w8, w9, w8
   11290:	and	w0, w8, #0x1
   11294:	ret
   11298:	cmp	w1, #0x120
   1129c:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   112a0:	cmp	w1, #0x11c
   112a4:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   112a8:	mov	w0, wzr
   112ac:	ret
   112b0:	cmp	w1, #0x7d
   112b4:	b.gt	112d4 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x800>
   112b8:	cmp	w1, #0x6e
   112bc:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   112c0:	cmp	w1, #0x6f
   112c4:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   112c8:	cmp	w1, #0x7d
   112cc:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   112d0:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   112d4:	cmp	w1, #0x7e
   112d8:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   112dc:	cmp	w1, #0x7f
   112e0:	b.ne	11330 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x85c>  // b.any
   112e4:	b	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   112e8:	cmp	w1, #0x80
   112ec:	b.gt	1130c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x838>
   112f0:	cmp	w1, #0x70
   112f4:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   112f8:	cmp	w1, #0x71
   112fc:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11300:	cmp	w1, #0x80
   11304:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11308:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   1130c:	cmp	w1, #0x81
   11310:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11314:	cmp	w1, #0x82
   11318:	b.ne	114cc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x9f8>  // b.any
   1131c:	b	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   11320:	cmp	w1, #0x7d
   11324:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11328:	cmp	w1, #0x7e
   1132c:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11330:	cmp	w1, #0xab
   11334:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11338:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   1133c:	cmp	w1, #0x80
   11340:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11344:	cmp	w1, #0x81
   11348:	b.ne	114cc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x9f8>  // b.any
   1134c:	b	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   11350:	cmp	w1, #0x84
   11354:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11358:	cmp	w1, #0x85
   1135c:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11360:	cmp	w1, #0xaa
   11364:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11368:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   1136c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11370:	add	x9, x9, #0x0
   11374:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   11378:	ldrb	w11, [x9, x8]
   1137c:	add	x10, x10, x11, lsl #2
   11380:	br	x10
   11384:	sub	w8, w1, #0x4c
   11388:	cmp	w8, #0xe
   1138c:	b.hi	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>  // b.pmore
   11390:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11394:	add	x9, x9, #0x0
   11398:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   1139c:	ldrb	w11, [x9, x8]
   113a0:	add	x10, x10, x11, lsl #2
   113a4:	br	x10
   113a8:	sub	w8, w1, #0x80
   113ac:	cmp	w8, #0x3
   113b0:	b.hi	114cc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x9f8>  // b.pmore
   113b4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   113b8:	add	x9, x9, #0x0
   113bc:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   113c0:	ldrb	w11, [x9, x8]
   113c4:	add	x10, x10, x11, lsl #2
   113c8:	br	x10
   113cc:	cmp	w1, #0x66
   113d0:	b.gt	114d8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0xa04>
   113d4:	cmp	w1, #0x55
   113d8:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   113dc:	cmp	w1, #0x56
   113e0:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   113e4:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   113e8:	cmp	w1, #0x67
   113ec:	b.gt	114ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0xa18>
   113f0:	cmp	w1, #0x58
   113f4:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   113f8:	cmp	w1, #0x59
   113fc:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11400:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   11404:	cmp	w1, #0x67
   11408:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   1140c:	cmp	w1, #0x6e
   11410:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11414:	cmp	w1, #0x6f
   11418:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   1141c:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   11420:	cmp	w1, #0x68
   11424:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11428:	cmp	w1, #0x70
   1142c:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11430:	cmp	w1, #0x71
   11434:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11438:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   1143c:	sub	w8, w1, #0x80
   11440:	cmp	w8, #0x3
   11444:	b.hi	114cc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x9f8>  // b.pmore
   11448:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1144c:	add	x9, x9, #0x0
   11450:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   11454:	ldrb	w11, [x9, x8]
   11458:	add	x10, x10, x11, lsl #2
   1145c:	br	x10
   11460:	sub	w8, w1, #0x80
   11464:	cmp	w8, #0x3
   11468:	b.hi	114cc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x9f8>  // b.pmore
   1146c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11470:	add	x9, x9, #0x0
   11474:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   11478:	ldrb	w11, [x9, x8]
   1147c:	add	x10, x10, x11, lsl #2
   11480:	br	x10
   11484:	sub	w8, w1, #0x51
   11488:	cmp	w8, #0x9
   1148c:	b.hi	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>  // b.pmore
   11490:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11494:	add	x9, x9, #0x0
   11498:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   1149c:	ldrb	w11, [x9, x8]
   114a0:	add	x10, x10, x11, lsl #2
   114a4:	br	x10
   114a8:	sub	w8, w1, #0x80
   114ac:	cmp	w8, #0x3
   114b0:	b.hi	114cc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x9f8>  // b.pmore
   114b4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   114b8:	add	x9, x9, #0x0
   114bc:	adr	x10, 10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   114c0:	ldrb	w11, [x9, x8]
   114c4:	add	x10, x10, x11, lsl #2
   114c8:	br	x10
   114cc:	cmp	w1, #0xac
   114d0:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   114d4:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   114d8:	cmp	w1, #0x67
   114dc:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   114e0:	cmp	w1, #0x6e
   114e4:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   114e8:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   114ec:	cmp	w1, #0x68
   114f0:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   114f4:	cmp	w1, #0x70
   114f8:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   114fc:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   11500:	cmp	w1, #0x59
   11504:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11508:	cmp	w1, #0x5a
   1150c:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11510:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   11514:	cmp	w1, #0x67
   11518:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   1151c:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>
   11520:	cmp	w1, #0x68
   11524:	b.eq	10adc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   11528:	b	10c0c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x138>

000000000001152c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE>:
   1152c:	sub	sp, sp, #0x70
   11530:	stp	x29, x30, [sp, #80]
   11534:	stp	x20, x19, [sp, #96]
   11538:	add	x29, sp, #0x50
   1153c:	cbz	w1, 115b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x8c>
   11540:	ldr	x8, [x0]
   11544:	mov	w20, w1
   11548:	mov	x19, x0
   1154c:	ldr	x8, [x8, #32]
   11550:	blr	x8
   11554:	cmp	w20, #0x42
   11558:	b.gt	115c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x94>
   1155c:	tbz	w0, #0, 115c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x94>
   11560:	mov	x0, x19
   11564:	bl	a848 <_ZNK12_GLOBAL__N_114AArch64Operand8getTokenEv>
   11568:	sub	x8, x1, #0x1
   1156c:	cmp	x8, #0x3
   11570:	b.hi	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.pmore
   11574:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11578:	add	x9, x9, #0x0
   1157c:	adr	x10, 1158c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60>
   11580:	ldrb	w11, [x9, x8]
   11584:	add	x10, x10, x11, lsl #2
   11588:	br	x10
   1158c:	ldrb	w8, [x0]
   11590:	cmp	w8, #0x5a
   11594:	b.le	116d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1ac>
   11598:	cmp	w8, #0x6c
   1159c:	b.gt	116f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1cc>
   115a0:	cmp	w8, #0x5b
   115a4:	b.eq	117c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x298>  // b.none
   115a8:	cmp	w8, #0x5d
   115ac:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   115b0:	mov	w0, #0x3e                  	// #62
   115b4:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   115b8:	mov	w0, wzr
   115bc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   115c0:	sub	w8, w20, #0xaf
   115c4:	cmp	w8, #0x124
   115c8:	b.hi	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.pmore
   115cc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   115d0:	add	x9, x9, #0x0
   115d4:	adr	x10, 115e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xb8>
   115d8:	ldrh	w11, [x9, x8, lsl #1]
   115dc:	add	x10, x10, x11, lsl #2
   115e0:	br	x10
   115e4:	mov	x0, x19
   115e8:	bl	179f8 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIiEEbv>
   115ec:	b	11964 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x438>
   115f0:	ldrb	w8, [x0]
   115f4:	cmp	w8, #0x6d
   115f8:	b.eq	1175c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x230>  // b.none
   115fc:	cmp	w8, #0x2e
   11600:	b.eq	11710 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1e4>  // b.none
   11604:	cmp	w8, #0x23
   11608:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   1160c:	ldrb	w8, [x0, #1]
   11610:	sub	w8, w8, #0x31
   11614:	cmp	w8, #0x5
   11618:	b.hi	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.pmore
   1161c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11620:	add	x9, x9, #0x0
   11624:	adr	x10, 11634 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x108>
   11628:	ldrb	w11, [x9, x8]
   1162c:	add	x10, x10, x11, lsl #2
   11630:	br	x10
   11634:	ldrb	w8, [x0, #2]
   11638:	sub	w8, w8, #0x30
   1163c:	cmp	w8, #0x7
   11640:	b.cs	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.hs, b.nlast
   11644:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11648:	sxtb	x8, w8
   1164c:	add	x9, x9, #0x0
   11650:	b	116d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1a4>
   11654:	ldrh	w8, [x0]
   11658:	ldrb	w9, [x0, #2]
   1165c:	mov	w10, #0x312e                	// #12590
   11660:	mov	w11, #0x36                  	// #54
   11664:	eor	w8, w8, w10
   11668:	eor	w9, w9, w11
   1166c:	orr	w8, w8, w9
   11670:	tst	w8, #0xffff
   11674:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   11678:	ldrb	w8, [x0, #3]
   1167c:	mov	w9, #0x2c                  	// #44
   11680:	cmp	w8, #0x62
   11684:	csel	w9, w9, wzr, eq  // eq = none
   11688:	cmp	w8, #0x42
   1168c:	mov	w8, #0x2                   	// #2
   11690:	csel	w0, w8, w9, eq  // eq = none
   11694:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11698:	ldrb	w8, [x0]
   1169c:	cmp	w8, #0x76
   116a0:	b.eq	117a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x27c>  // b.none
   116a4:	cmp	w8, #0x2e
   116a8:	b.eq	11774 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x248>  // b.none
   116ac:	cmp	w8, #0x23
   116b0:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   116b4:	ldrb	w8, [x0, #1]
   116b8:	sub	w8, w8, #0x30
   116bc:	cmp	w8, #0x9
   116c0:	b.cs	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.hs, b.nlast
   116c4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   116c8:	sxtb	x8, w8
   116cc:	add	x9, x9, #0x0
   116d0:	ldr	w0, [x9, x8, lsl #2]
   116d4:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   116d8:	cmp	w8, #0x21
   116dc:	b.eq	117bc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x290>  // b.none
   116e0:	cmp	w8, #0x2e
   116e4:	b.eq	117d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2a8>  // b.none
   116e8:	cmp	w8, #0x2f
   116ec:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   116f0:	mov	w0, #0x3c                  	// #60
   116f4:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   116f8:	cmp	w8, #0x6d
   116fc:	b.eq	117cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2a0>  // b.none
   11700:	cmp	w8, #0x7a
   11704:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   11708:	mov	w0, #0x42                  	// #66
   1170c:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11710:	ldrb	w8, [x0, #1]
   11714:	sub	w8, w8, #0x31
   11718:	cmp	w8, #0x7
   1171c:	b.hi	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.pmore
   11720:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11724:	add	x9, x9, #0x0
   11728:	adr	x10, 11738 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x20c>
   1172c:	ldrb	w11, [x9, x8]
   11730:	add	x10, x10, x11, lsl #2
   11734:	br	x10
   11738:	ldrb	w8, [x0, #2]
   1173c:	cmp	w8, #0x63
   11740:	b.gt	119ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x480>
   11744:	cmp	w8, #0x44
   11748:	b.eq	151a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c7c>  // b.none
   1174c:	cmp	w8, #0x51
   11750:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   11754:	mov	w0, #0x4                   	// #4
   11758:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   1175c:	ldurh	w8, [x0, #1]
   11760:	mov	w9, #0x6c75                	// #27765
   11764:	cmp	w8, w9
   11768:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   1176c:	mov	w0, #0x40                  	// #64
   11770:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11774:	ldrb	w8, [x0, #1]
   11778:	cmp	w8, #0x52
   1177c:	b.le	117dc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2b0>
   11780:	cmp	w8, #0x67
   11784:	b.gt	11804 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2d8>
   11788:	cmp	w8, #0x53
   1178c:	b.eq	11a40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x514>  // b.none
   11790:	cmp	w8, #0x62
   11794:	b.eq	11a28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4fc>  // b.none
   11798:	cmp	w8, #0x64
   1179c:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   117a0:	mov	w0, #0x38                  	// #56
   117a4:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   117a8:	ldrb	w8, [x0, #1]
   117ac:	cmp	w8, #0x6c
   117b0:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   117b4:	mov	w0, #0x41                  	// #65
   117b8:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   117bc:	mov	w0, #0x12                  	// #18
   117c0:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   117c4:	mov	w0, #0x3d                  	// #61
   117c8:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   117cc:	mov	w0, #0x3f                  	// #63
   117d0:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   117d4:	mov	w0, #0x2a                  	// #42
   117d8:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   117dc:	cmp	w8, #0x43
   117e0:	b.le	118a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x374>
   117e4:	cmp	w8, #0x44
   117e8:	b.eq	11a38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x50c>  // b.none
   117ec:	cmp	w8, #0x48
   117f0:	b.eq	11a20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4f4>  // b.none
   117f4:	cmp	w8, #0x51
   117f8:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   117fc:	mov	w0, #0x10                  	// #16
   11800:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11804:	cmp	w8, #0x68
   11808:	b.eq	11a48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x51c>  // b.none
   1180c:	cmp	w8, #0x71
   11810:	b.eq	11a30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x504>  // b.none
   11814:	cmp	w8, #0x73
   11818:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   1181c:	mov	w0, #0x3b                  	// #59
   11820:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11824:	ldrb	w8, [x0, #2]
   11828:	cmp	w8, #0x61
   1182c:	b.gt	1198c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x460>
   11830:	cmp	w8, #0x42
   11834:	b.eq	15374 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e48>  // b.none
   11838:	cmp	w8, #0x48
   1183c:	b.eq	15384 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e58>  // b.none
   11840:	cmp	w8, #0x53
   11844:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   11848:	mov	w0, #0xa                   	// #10
   1184c:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11850:	ldrb	w8, [x0, #2]
   11854:	cmp	w8, #0x63
   11858:	b.gt	119c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x498>
   1185c:	cmp	w8, #0x44
   11860:	b.eq	1538c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e60>  // b.none
   11864:	cmp	w8, #0x48
   11868:	b.eq	153a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e78>  // b.none
   1186c:	cmp	w8, #0x53
   11870:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   11874:	mov	w0, #0x7                   	// #7
   11878:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   1187c:	ldrb	w8, [x0, #2]
   11880:	cmp	w8, #0x61
   11884:	b.gt	119e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4b8>
   11888:	cmp	w8, #0x42
   1188c:	b.eq	151b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c8c>  // b.none
   11890:	cmp	w8, #0x48
   11894:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   11898:	mov	w0, #0xc                   	// #12
   1189c:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   118a0:	cmp	w8, #0x30
   118a4:	b.eq	11a18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4ec>  // b.none
   118a8:	cmp	w8, #0x42
   118ac:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   118b0:	mov	w0, #0xd                   	// #13
   118b4:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   118b8:	ldrb	w8, [x0, #2]
   118bc:	sub	w8, w8, #0x30
   118c0:	cmp	w8, #0x3
   118c4:	b.cs	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.hs, b.nlast
   118c8:	and	w8, w8, #0xff
   118cc:	add	w0, w8, #0x21
   118d0:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   118d4:	ldrb	w8, [x0, #2]
   118d8:	sub	w8, w8, #0x34
   118dc:	cmp	w8, #0x6
   118e0:	b.cs	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.hs, b.nlast
   118e4:	and	w8, w8, #0xff
   118e8:	add	w0, w8, #0x1a
   118ec:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   118f0:	ldrb	w8, [x0, #2]
   118f4:	cmp	w8, #0x38
   118f8:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   118fc:	mov	w0, #0x25                  	// #37
   11900:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11904:	ldrb	w8, [x0, #2]
   11908:	cmp	w8, #0x34
   1190c:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   11910:	mov	w0, #0x27                  	// #39
   11914:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11918:	ldr	w8, [x19, #48]
   1191c:	cmp	w8, #0x9
   11920:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11924:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   11928:	ldr	w8, [x19, #48]
   1192c:	cmp	w8, #0x4
   11930:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11934:	ldr	w8, [x19, #76]
   11938:	cmp	w8, #0x4
   1193c:	b.eq	14164 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c38>  // b.none
   11940:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11944:	mov	x0, x19
   11948:	bl	18310 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIaEEbv>
   1194c:	b	11964 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x438>
   11950:	mov	x0, x19
   11954:	bl	17ab8 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIlEEbv>
   11958:	b	11964 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x438>
   1195c:	mov	x0, x19
   11960:	bl	183cc <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIsEEbv>
   11964:	tst	w0, #0x1
   11968:	mov	w8, #0x91                  	// #145
   1196c:	mov	w9, #0x4                   	// #4
   11970:	csel	w0, w9, w8, ne  // ne = any
   11974:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   11978:	ldr	w8, [x19, #48]
   1197c:	cmp	w8, #0x3
   11980:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11984:	ldr	w8, [x19, #76]
   11988:	b	14170 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c44>
   1198c:	cmp	w8, #0x62
   11990:	b.eq	1537c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e50>  // b.none
   11994:	cmp	w8, #0x68
   11998:	b.eq	15394 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e68>  // b.none
   1199c:	cmp	w8, #0x73
   119a0:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   119a4:	mov	w0, #0x34                  	// #52
   119a8:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   119ac:	cmp	w8, #0x64
   119b0:	b.eq	151b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c84>  // b.none
   119b4:	cmp	w8, #0x71
   119b8:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   119bc:	mov	w0, #0x2e                  	// #46
   119c0:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   119c4:	cmp	w8, #0x64
   119c8:	b.eq	1539c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e70>  // b.none
   119cc:	cmp	w8, #0x68
   119d0:	b.eq	153ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e80>  // b.none
   119d4:	cmp	w8, #0x73
   119d8:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   119dc:	mov	w0, #0x31                  	// #49
   119e0:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   119e4:	cmp	w8, #0x62
   119e8:	b.eq	151c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c94>  // b.none
   119ec:	cmp	w8, #0x68
   119f0:	b.ne	119fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d0>  // b.any
   119f4:	mov	w0, #0x36                  	// #54
   119f8:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   119fc:	mov	w0, wzr
   11a00:	mov	w1, w20
   11a04:	bl	10ad4 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
   11a08:	tst	w0, #0x1
   11a0c:	mov	w8, #0x4                   	// #4
   11a10:	csel	w0, w8, wzr, ne  // ne = any
   11a14:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   11a18:	mov	w0, #0x2b                  	// #43
   11a1c:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11a20:	mov	w0, #0xf                   	// #15
   11a24:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11a28:	mov	w0, #0x37                  	// #55
   11a2c:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11a30:	mov	w0, #0x3a                  	// #58
   11a34:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11a38:	mov	w0, #0xe                   	// #14
   11a3c:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11a40:	mov	w0, #0x11                  	// #17
   11a44:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11a48:	mov	w0, #0x39                  	// #57
   11a4c:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   11a50:	ldr	w8, [x19, #48]
   11a54:	cmp	w8, #0x3
   11a58:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11a5c:	ldr	w8, [x19, #76]
   11a60:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11a64:	mov	x0, x19
   11a68:	bl	18878 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj19EEEbv>
   11a6c:	tbz	w0, #0, 15d70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4844>
   11a70:	ldr	w9, [x19, #48]
   11a74:	add	x8, x19, #0x48
   11a78:	cmp	w9, #0x3
   11a7c:	b.eq	15c40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4714>  // b.none
   11a80:	cmp	w9, #0xa
   11a84:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   11a88:	mov	x10, x8
   11a8c:	b	15c44 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4718>
   11a90:	ldr	w8, [x19, #48]
   11a94:	mov	w0, #0x93                  	// #147
   11a98:	cmp	w8, #0x7
   11a9c:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   11aa0:	ldr	w8, [x19, #88]
   11aa4:	b	11dd0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x8a4>
   11aa8:	ldr	w8, [x19, #48]
   11aac:	cmp	w8, #0xb
   11ab0:	b.ne	151c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c9c>  // b.any
   11ab4:	add	x8, sp, #0x20
   11ab8:	mov	x0, x19
   11abc:	add	x20, sp, #0x20
   11ac0:	bl	a7b8 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv>
   11ac4:	add	x8, sp, #0x10
   11ac8:	add	x0, sp, #0x20
   11acc:	bl	0 <LLVMInitializeAArch64AsmParser>
   11ad0:	add	x0, sp, #0x10
   11ad4:	bl	187a4 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE>
   11ad8:	ldr	w8, [sp, #24]
   11adc:	mov	w19, w0
   11ae0:	cmp	w8, #0x41
   11ae4:	b.cc	11af4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c8>  // b.lo, b.ul, b.last
   11ae8:	ldr	x0, [sp, #16]
   11aec:	cbz	x0, 11af4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c8>
   11af0:	bl	0 <_ZdaPv>
   11af4:	add	x0, x20, #0x8
   11af8:	bl	0 <LLVMInitializeAArch64AsmParser>
   11afc:	cmn	w19, #0x1
   11b00:	mov	w8, #0x4                   	// #4
   11b04:	mov	w9, #0xf                   	// #15
   11b08:	b	13b20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x25f4>
   11b0c:	ldr	w8, [x19, #48]
   11b10:	cmp	w8, #0x3
   11b14:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11b18:	ldr	w8, [x19, #76]
   11b1c:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11b20:	mov	x0, x19
   11b24:	bl	188e0 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj17EEEbv>
   11b28:	tbz	w0, #0, 15d88 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x485c>
   11b2c:	ldr	w9, [x19, #48]
   11b30:	add	x8, x19, #0x48
   11b34:	cmp	w9, #0x3
   11b38:	b.eq	15c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4738>  // b.none
   11b3c:	cmp	w9, #0xa
   11b40:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   11b44:	mov	x10, x8
   11b48:	b	15c68 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x473c>
   11b4c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11b50:	add	x8, x8, #0x0
   11b54:	b	11b60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x634>
   11b58:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11b5c:	add	x8, x8, #0x0
   11b60:	ldp	q0, q1, [x8]
   11b64:	ldr	x8, [x8, #32]
   11b68:	add	x1, sp, #0x20
   11b6c:	mov	w2, #0xa                   	// #10
   11b70:	stp	q0, q1, [sp, #32]
   11b74:	str	x8, [sp, #64]
   11b78:	b	148b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3384>
   11b7c:	ldr	x8, [x19]
   11b80:	mov	x0, x19
   11b84:	ldr	x8, [x8, #40]
   11b88:	blr	x8
   11b8c:	tbz	w0, #0, 151d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ca4>
   11b90:	ldr	w8, [x19, #48]
   11b94:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   11b98:	ldr	x8, [x19, #72]
   11b9c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   11ba0:	ldr	w9, [x8]
   11ba4:	mov	w0, #0x19                  	// #25
   11ba8:	cmp	w9, #0x1
   11bac:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   11bb0:	ldr	x8, [x8, #16]
   11bb4:	cmp	x8, #0x80
   11bb8:	b	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c18>
   11bbc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11bc0:	ldr	d0, [x8]
   11bc4:	add	x1, sp, #0x20
   11bc8:	mov	w2, #0x2                   	// #2
   11bcc:	str	d0, [sp, #32]
   11bd0:	b	148b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3384>
   11bd4:	ldr	x8, [x19]
   11bd8:	mov	x0, x19
   11bdc:	ldr	x8, [x8, #40]
   11be0:	blr	x8
   11be4:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11be8:	ldr	w8, [x19, #48]
   11bec:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   11bf0:	ldr	x8, [x19, #72]
   11bf4:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   11bf8:	ldr	w9, [x8]
   11bfc:	cmp	w9, #0x1
   11c00:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11c04:	ldr	x8, [x8, #16]
   11c08:	mov	x9, #0xff00000000000000    	// #-72057594037927936
   11c0c:	add	x9, x8, x9
   11c10:	lsr	x9, x9, #57
   11c14:	cmp	x9, #0x7f
   11c18:	b.cc	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.lo, b.ul, b.last
   11c1c:	and	x9, x8, #0xff000000000000
   11c20:	mov	x10, #0xff000000000000      	// #71776119061217280
   11c24:	cmp	x9, x10
   11c28:	b.eq	11c30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x704>  // b.none
   11c2c:	cbnz	x9, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11c30:	and	x9, x8, #0xff0000000000
   11c34:	mov	x10, #0xff0000000000        	// #280375465082880
   11c38:	cmp	x9, x10
   11c3c:	b.eq	11c44 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x718>  // b.none
   11c40:	cbnz	x9, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11c44:	and	x9, x8, #0xff00000000
   11c48:	mov	x10, #0xff00000000          	// #1095216660480
   11c4c:	cmp	x9, x10
   11c50:	b.eq	11c58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72c>  // b.none
   11c54:	cbnz	x9, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11c58:	ands	w9, w8, #0xff000000
   11c5c:	b.eq	11c6c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x740>  // b.none
   11c60:	mov	w10, #0xff000000            	// #-16777216
   11c64:	cmp	w9, w10
   11c68:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11c6c:	and	x9, x8, #0xff0000
   11c70:	cmp	x9, #0xff0, lsl #12
   11c74:	b.eq	11c7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x750>  // b.none
   11c78:	cbnz	x9, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11c7c:	and	w9, w8, #0xff00
   11c80:	mov	w10, #0xff00                	// #65280
   11c84:	cmp	w9, w10
   11c88:	b.eq	11c90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x764>  // b.none
   11c8c:	cbnz	w9, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11c90:	ands	w8, w8, #0xff
   11c94:	mov	w0, #0x4                   	// #4
   11c98:	b.eq	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.none
   11c9c:	cmp	w8, #0xff
   11ca0:	b.eq	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.none
   11ca4:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11ca8:	ldr	w8, [x19, #48]
   11cac:	cmp	w8, #0x3
   11cb0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11cb4:	ldr	w8, [x19, #76]
   11cb8:	cmp	w8, #0x3
   11cbc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11cc0:	mov	x0, x19
   11cc4:	bl	18c1c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj3EEEbv>
   11cc8:	tbz	w0, #0, 11cd8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7ac>
   11ccc:	ldr	w8, [x19, #80]
   11cd0:	cmp	w8, #0x10
   11cd4:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   11cd8:	mov	w0, #0x66                  	// #102
   11cdc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   11ce0:	ldr	w8, [x19, #48]
   11ce4:	cmp	w8, #0xa
   11ce8:	b.ne	159ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44c0>  // b.any
   11cec:	ldr	w8, [x19, #72]
   11cf0:	sub	w9, w8, #0x5
   11cf4:	cmp	w9, #0x8
   11cf8:	b.cs	159e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44bc>  // b.hs, b.nlast
   11cfc:	ldr	w9, [x19, #76]
   11d00:	cmp	w9, #0x4
   11d04:	b.hi	159ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44c0>  // b.pmore
   11d08:	cmp	w8, #0xb
   11d0c:	mov	w0, #0x47                  	// #71
   11d10:	b.eq	14e64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3938>  // b.none
   11d14:	cmp	w8, #0x7
   11d18:	b.eq	14e64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3938>  // b.none
   11d1c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   11d20:	ldr	x8, [x19]
   11d24:	mov	x0, x19
   11d28:	ldr	x8, [x8, #40]
   11d2c:	blr	x8
   11d30:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11d34:	ldr	w8, [x19, #48]
   11d38:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   11d3c:	ldr	x8, [x19, #72]
   11d40:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   11d44:	ldr	w9, [x8]
   11d48:	cmp	w9, #0x1
   11d4c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11d50:	ldr	x8, [x8, #16]
   11d54:	mov	w9, #0xf1                  	// #241
   11d58:	mov	w10, #0x2c                  	// #44
   11d5c:	add	x11, x8, #0x80
   11d60:	b	12dac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1880>
   11d64:	ldr	w8, [x19, #48]
   11d68:	cmp	w8, #0x5
   11d6c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11d70:	ldr	w8, [x19, #72]
   11d74:	mov	w9, #0x5d                  	// #93
   11d78:	b	1297c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1450>
   11d7c:	ldr	x8, [x19]
   11d80:	mov	x0, x19
   11d84:	ldr	x8, [x8, #40]
   11d88:	blr	x8
   11d8c:	tbz	w0, #0, 151d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3cac>
   11d90:	ldr	w8, [x19, #48]
   11d94:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   11d98:	ldr	x8, [x19, #72]
   11d9c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   11da0:	ldr	w9, [x8]
   11da4:	mov	w0, #0x23                  	// #35
   11da8:	cmp	w9, #0x1
   11dac:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   11db0:	ldr	x8, [x8, #16]
   11db4:	sub	x8, x8, #0x1
   11db8:	b	13fd8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2aac>
   11dbc:	ldr	w8, [x19, #48]
   11dc0:	mov	w0, #0x92                  	// #146
   11dc4:	cmp	w8, #0x7
   11dc8:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   11dcc:	ldr	w8, [x19, #84]
   11dd0:	cmn	w8, #0x1
   11dd4:	mov	w8, #0x4                   	// #4
   11dd8:	b	14fac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a80>
   11ddc:	ldr	x8, [x19]
   11de0:	mov	x0, x19
   11de4:	ldr	x8, [x8, #40]
   11de8:	blr	x8
   11dec:	tbz	w0, #0, 151e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3cb4>
   11df0:	ldr	w8, [x19, #48]
   11df4:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   11df8:	ldr	x8, [x19, #72]
   11dfc:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   11e00:	ldr	w9, [x8]
   11e04:	mov	w0, #0x1a                  	// #26
   11e08:	cmp	w9, #0x1
   11e0c:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   11e10:	ldr	x8, [x8, #16]
   11e14:	b	15030 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3b04>
   11e18:	ldr	w8, [x19, #48]
   11e1c:	cmp	w8, #0xa
   11e20:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11e24:	ldr	w8, [x19, #72]
   11e28:	cmp	w8, #0x4
   11e2c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11e30:	ldr	w8, [x19, #76]
   11e34:	mov	w0, #0x4                   	// #4
   11e38:	cmp	w8, #0x8
   11e3c:	b.eq	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.none
   11e40:	cmp	w8, #0x10
   11e44:	b.eq	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.none
   11e48:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11e4c:	ldr	x8, [x19]
   11e50:	mov	x0, x19
   11e54:	ldr	x8, [x8, #40]
   11e58:	blr	x8
   11e5c:	tbz	w0, #0, 151e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3cbc>
   11e60:	ldr	w8, [x19, #48]
   11e64:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   11e68:	ldr	x8, [x19, #72]
   11e6c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   11e70:	ldr	w9, [x8]
   11e74:	mov	w0, #0x44                  	// #68
   11e78:	cmp	w9, #0x1
   11e7c:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   11e80:	ldr	x8, [x8, #16]
   11e84:	cmp	x8, w8, sxtb
   11e88:	b	14f50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a24>
   11e8c:	ldr	x8, [x19]
   11e90:	mov	x0, x19
   11e94:	ldr	x8, [x8, #40]
   11e98:	blr	x8
   11e9c:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11ea0:	ldr	w8, [x19, #48]
   11ea4:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   11ea8:	ldr	x8, [x19, #72]
   11eac:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   11eb0:	ldr	w9, [x8]
   11eb4:	cmp	w9, #0x1
   11eb8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11ebc:	ldr	x8, [x8, #16]
   11ec0:	mov	w9, #0x3f9                 	// #1017
   11ec4:	mov	w10, #0x3f                  	// #63
   11ec8:	add	x11, x8, #0x200
   11ecc:	b	12234 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xd08>
   11ed0:	mov	x0, x19
   11ed4:	bl	17b5c <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv>
   11ed8:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11edc:	mov	x0, x19
   11ee0:	bl	18034 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi2EEEbv>
   11ee4:	tbnz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11ee8:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   11eec:	ldr	x8, [x19]
   11ef0:	mov	x0, x19
   11ef4:	ldr	x8, [x8, #40]
   11ef8:	blr	x8
   11efc:	tbz	w0, #0, 151f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3cc4>
   11f00:	ldr	w8, [x19, #48]
   11f04:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   11f08:	ldr	x8, [x19, #72]
   11f0c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   11f10:	ldr	w9, [x8]
   11f14:	mov	w0, #0x21                  	// #33
   11f18:	cmp	w9, #0x1
   11f1c:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   11f20:	ldr	x8, [x8, #16]
   11f24:	sub	x8, x8, #0x1
   11f28:	b	129f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x14cc>
   11f2c:	ldr	x8, [x19]
   11f30:	mov	x0, x19
   11f34:	ldr	x8, [x8, #40]
   11f38:	blr	x8
   11f3c:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11f40:	ldr	w8, [x19, #48]
   11f44:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   11f48:	ldr	x8, [x19, #72]
   11f4c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   11f50:	ldr	w9, [x8]
   11f54:	cmp	w9, #0x1
   11f58:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11f5c:	ldr	x8, [x8, #16]
   11f60:	mov	w9, #0xf9                  	// #249
   11f64:	mov	w10, #0x40                  	// #64
   11f68:	b	123fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xed0>
   11f6c:	ldr	w8, [x19, #48]
   11f70:	cmp	w8, #0x1
   11f74:	b.eq	11f8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xa60>  // b.none
   11f78:	ldr	x8, [x19]
   11f7c:	mov	x0, x19
   11f80:	ldr	x8, [x8, #40]
   11f84:	blr	x8
   11f88:	tbz	w0, #0, 159e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44b4>
   11f8c:	add	x8, sp, #0x20
   11f90:	mov	x0, x19
   11f94:	bl	186a4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   11f98:	ldrb	w8, [sp, #48]
   11f9c:	cbz	w8, 159e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44b4>
   11fa0:	ldr	x8, [sp, #32]
   11fa4:	mov	w9, #0xb                   	// #11
   11fa8:	cmn	x8, #0x1, lsl #12
   11fac:	mov	w8, #0x4                   	// #4
   11fb0:	csel	w0, w8, w9, hi  // hi = pmore
   11fb4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   11fb8:	mov	x0, x19
   11fbc:	bl	17b5c <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv>
   11fc0:	tst	w0, #0x1
   11fc4:	mov	w8, #0x45                  	// #69
   11fc8:	b	1196c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x440>
   11fcc:	ldr	x8, [x19]
   11fd0:	mov	x0, x19
   11fd4:	ldr	x8, [x8, #40]
   11fd8:	blr	x8
   11fdc:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   11fe0:	ldr	w8, [x19, #48]
   11fe4:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   11fe8:	ldr	x8, [x19, #72]
   11fec:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   11ff0:	ldr	w9, [x8]
   11ff4:	cmp	w9, #0x1
   11ff8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   11ffc:	ldr	x8, [x8, #16]
   12000:	mov	w9, #0x62                  	// #98
   12004:	cmp	x8, #0x20
   12008:	b	14b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x35dc>
   1200c:	ldr	w8, [x19, #48]
   12010:	cmp	w8, #0x5
   12014:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12018:	ldr	w8, [x19, #72]
   1201c:	mov	w9, #0x5f                  	// #95
   12020:	cmp	w8, #0x20
   12024:	b	14b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x35dc>
   12028:	ldr	x8, [x19]
   1202c:	mov	x0, x19
   12030:	ldr	x8, [x8, #40]
   12034:	blr	x8
   12038:	tbz	w0, #0, 151f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ccc>
   1203c:	ldr	w8, [x19, #48]
   12040:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   12044:	ldr	x8, [x19, #72]
   12048:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   1204c:	ldr	w9, [x8]
   12050:	mov	w0, #0x1d                  	// #29
   12054:	cmp	w9, #0x1
   12058:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   1205c:	b	14ca4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3778>
   12060:	ldr	w8, [x19, #48]
   12064:	cmp	w8, #0xa
   12068:	b.ne	159f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44cc>  // b.any
   1206c:	ldr	w8, [x19, #72]
   12070:	sub	w9, w8, #0x5
   12074:	cmp	w9, #0x8
   12078:	b.cs	159f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44c8>  // b.hs, b.nlast
   1207c:	ldr	w9, [x19, #76]
   12080:	cmp	w9, #0x4
   12084:	b.hi	159f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44cc>  // b.pmore
   12088:	cmp	w8, #0xb
   1208c:	mov	w0, #0x46                  	// #70
   12090:	b.eq	14c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x36fc>  // b.none
   12094:	cmp	w8, #0x7
   12098:	b.eq	14c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x36fc>  // b.none
   1209c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   120a0:	mov	x0, x19
   120a4:	bl	1795c <_ZNK12_GLOBAL__N_114AArch64Operand12isImmInRangeILi0ELi31EEEbv>
   120a8:	tbnz	w0, #0, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   120ac:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   120b0:	ldr	w8, [x19, #48]
   120b4:	cmp	w8, #0x4
   120b8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   120bc:	ldr	w8, [x19, #76]
   120c0:	cmp	w8, #0x3
   120c4:	b.eq	14164 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c38>  // b.none
   120c8:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   120cc:	ldr	w8, [x19, #48]
   120d0:	cmp	w8, #0x4
   120d4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   120d8:	ldr	w8, [x19, #76]
   120dc:	cmp	w8, #0x3
   120e0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   120e4:	ldr	w8, [x19, #88]
   120e8:	cmp	w8, #0x1
   120ec:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   120f0:	b	12a7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1550>
   120f4:	ldr	x8, [x19]
   120f8:	mov	x0, x19
   120fc:	ldr	x8, [x8, #40]
   12100:	blr	x8
   12104:	tbz	w0, #0, 15200 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3cd4>
   12108:	ldr	w8, [x19, #48]
   1210c:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   12110:	ldr	x8, [x19, #72]
   12114:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   12118:	ldr	w9, [x8]
   1211c:	mov	w0, #0x1b                  	// #27
   12120:	cmp	w9, #0x1
   12124:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   12128:	ldr	x8, [x8, #16]
   1212c:	cmp	x8, #0x100
   12130:	b	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c18>
   12134:	ldr	w8, [x19, #48]
   12138:	cmp	w8, #0xa
   1213c:	b.ne	15208 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3cdc>  // b.any
   12140:	ldr	w8, [x19, #72]
   12144:	mov	w0, #0x51                  	// #81
   12148:	cbnz	w8, 15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   1214c:	ldr	w8, [x19, #76]
   12150:	ror	w8, w8, #4
   12154:	cmp	w8, #0x4
   12158:	b	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c18>
   1215c:	ldr	w8, [x19, #48]
   12160:	cmp	w8, #0x4
   12164:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12168:	ldr	w8, [x19, #76]
   1216c:	cmp	w8, #0x4
   12170:	b.eq	12acc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x15a0>  // b.none
   12174:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12178:	ldr	w8, [x19, #48]
   1217c:	cmp	w8, #0x4
   12180:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12184:	ldr	w8, [x19, #76]
   12188:	cmp	w8, #0x1
   1218c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12190:	b	1470c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x31e0>
   12194:	ldr	w8, [x19, #48]
   12198:	cmp	w8, #0xa
   1219c:	b.ne	15a04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44d8>  // b.any
   121a0:	ldr	w8, [x19, #72]
   121a4:	sub	w9, w8, #0x5
   121a8:	cmp	w9, #0x8
   121ac:	b.cs	15a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44d4>  // b.hs, b.nlast
   121b0:	ldr	w9, [x19, #76]
   121b4:	cmp	w9, #0x4
   121b8:	b.hi	15a04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44d8>  // b.pmore
   121bc:	cmp	w8, #0xb
   121c0:	mov	w0, #0x4a                  	// #74
   121c4:	b.eq	14d20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37f4>  // b.none
   121c8:	cmp	w8, #0x7
   121cc:	b.eq	14d20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37f4>  // b.none
   121d0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   121d4:	ldr	w8, [x19, #48]
   121d8:	cmp	w8, #0xa
   121dc:	b.ne	122f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xdc4>  // b.any
   121e0:	ldr	w8, [x19, #72]
   121e4:	mov	w0, #0xa                   	// #10
   121e8:	cmp	w8, #0x3
   121ec:	b.ls	122e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xdb8>  // b.plast
   121f0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   121f4:	ldr	x8, [x19]
   121f8:	mov	x0, x19
   121fc:	ldr	x8, [x8, #40]
   12200:	blr	x8
   12204:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12208:	ldr	w8, [x19, #48]
   1220c:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   12210:	ldr	x8, [x19, #72]
   12214:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   12218:	ldr	w9, [x8]
   1221c:	cmp	w9, #0x1
   12220:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12224:	ldr	x8, [x8, #16]
   12228:	mov	w9, #0x1ff9                	// #8185
   1222c:	mov	w10, #0x3e                  	// #62
   12230:	add	x11, x8, #0x1, lsl #12
   12234:	tst	x8, #0x7
   12238:	b	132c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1d94>
   1223c:	ldr	w8, [x19, #48]
   12240:	cmp	w8, #0xa
   12244:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12248:	ldr	w8, [x19, #72]
   1224c:	cmp	w8, #0x5
   12250:	b.cc	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.lo, b.ul, b.last
   12254:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12258:	ldr	w8, [x19, #48]
   1225c:	cmp	w8, #0x4
   12260:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12264:	ldr	w8, [x19, #76]
   12268:	cmp	w8, #0x4
   1226c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12270:	b	12e00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x18d4>
   12274:	ldr	w8, [x19, #48]
   12278:	cmp	w8, #0x4
   1227c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12280:	ldr	w8, [x19, #76]
   12284:	cmp	w8, #0x4
   12288:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1228c:	b	14834 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3308>
   12290:	ldr	w8, [x19, #48]
   12294:	cmp	w8, #0x4
   12298:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1229c:	ldr	w8, [x19, #76]
   122a0:	cmp	w8, #0x2
   122a4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   122a8:	b	14164 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c38>
   122ac:	ldr	w8, [x19, #48]
   122b0:	cmp	w8, #0x4
   122b4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   122b8:	ldr	w8, [x19, #76]
   122bc:	cmp	w8, #0x1
   122c0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   122c4:	b	14164 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c38>
   122c8:	ldr	w8, [x19, #48]
   122cc:	cmp	w8, #0xa
   122d0:	b.ne	122f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xdc4>  // b.any
   122d4:	ldr	w8, [x19, #72]
   122d8:	mov	w0, #0xa                   	// #10
   122dc:	cmp	w8, #0x2
   122e0:	b.hi	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.pmore
   122e4:	ldr	w8, [x19, #76]
   122e8:	cmp	w8, #0x40
   122ec:	b	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c18>
   122f0:	mov	w0, #0xa                   	// #10
   122f4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   122f8:	ldr	w8, [x19, #48]
   122fc:	cmp	w8, #0x4
   12300:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12304:	ldr	w8, [x19, #76]
   12308:	cmp	w8, #0x3
   1230c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12310:	ldr	w8, [x19, #88]
   12314:	cmp	w8, #0x1
   12318:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1231c:	b	14078 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2b4c>
   12320:	mov	x0, x19
   12324:	bl	1819c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi8EEEbv>
   12328:	tst	w0, #0x1
   1232c:	mov	w8, #0x3d                  	// #61
   12330:	b	1196c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x440>
   12334:	mov	x0, x19
   12338:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   1233c:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12340:	ldr	w8, [x19, #48]
   12344:	cmp	w8, #0x3
   12348:	b.eq	153b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e88>  // b.none
   1234c:	cmp	w8, #0xa
   12350:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   12354:	add	x9, x19, #0x4c
   12358:	b	153b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e8c>
   1235c:	ldr	w8, [x19, #48]
   12360:	cmp	w8, #0x3
   12364:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12368:	ldr	w8, [x19, #76]
   1236c:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12370:	mov	x0, x19
   12374:	bl	18878 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj19EEEbv>
   12378:	tbz	w0, #0, 15d9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4870>
   1237c:	ldr	w9, [x19, #48]
   12380:	add	x8, x19, #0x48
   12384:	cmp	w9, #0x3
   12388:	b.eq	15c88 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x475c>  // b.none
   1238c:	cmp	w9, #0xa
   12390:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   12394:	mov	x10, x8
   12398:	b	15c8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4760>
   1239c:	ldr	w8, [x19, #48]
   123a0:	cmp	w8, #0xa
   123a4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   123a8:	ldr	w8, [x19, #72]
   123ac:	cmp	w8, #0x4
   123b0:	b.hi	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.pmore
   123b4:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   123b8:	ldr	w8, [x19, #76]
   123bc:	b	149a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3474>
   123c0:	ldr	x8, [x19]
   123c4:	mov	x0, x19
   123c8:	ldr	x8, [x8, #40]
   123cc:	blr	x8
   123d0:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   123d4:	ldr	w8, [x19, #48]
   123d8:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   123dc:	ldr	x8, [x19, #72]
   123e0:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   123e4:	ldr	w9, [x8]
   123e8:	cmp	w9, #0x1
   123ec:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   123f0:	ldr	x8, [x8, #16]
   123f4:	mov	w9, #0x1f9                 	// #505
   123f8:	mov	w10, #0x41                  	// #65
   123fc:	tst	x8, #0x7
   12400:	b	14b54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3628>
   12404:	ldr	w8, [x19, #48]
   12408:	cmp	w8, #0x4
   1240c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12410:	ldr	w8, [x19, #76]
   12414:	cmp	w8, #0x2
   12418:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1241c:	ldr	w8, [x19, #88]
   12420:	cmp	w8, #0x1
   12424:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12428:	b	12a7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1550>
   1242c:	ldr	w8, [x19, #48]
   12430:	cmp	w8, #0x4
   12434:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12438:	ldr	w8, [x19, #76]
   1243c:	cmp	w8, #0x1
   12440:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12444:	ldr	w8, [x19, #88]
   12448:	cmp	w8, #0x1
   1244c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12450:	b	12a7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1550>
   12454:	ldr	x8, [x19]
   12458:	mov	x0, x19
   1245c:	ldr	x8, [x8, #40]
   12460:	blr	x8
   12464:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12468:	ldr	w8, [x19, #48]
   1246c:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   12470:	ldr	x8, [x19, #72]
   12474:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   12478:	ldr	w9, [x8]
   1247c:	cmp	w9, #0x1
   12480:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12484:	ldr	x8, [x8, #16]
   12488:	mov	w9, #0x7d                  	// #125
   1248c:	mov	w10, #0x3b                  	// #59
   12490:	b	12a3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1510>
   12494:	mov	x0, x19
   12498:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   1249c:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   124a0:	ldr	w8, [x19, #48]
   124a4:	cmp	w8, #0x3
   124a8:	b.eq	153e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ebc>  // b.none
   124ac:	cmp	w8, #0xa
   124b0:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   124b4:	add	x9, x19, #0x4c
   124b8:	b	153ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ec0>
   124bc:	mov	x0, x19
   124c0:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   124c4:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   124c8:	ldr	w8, [x19, #48]
   124cc:	cmp	w8, #0x3
   124d0:	b.eq	1541c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ef0>  // b.none
   124d4:	cmp	w8, #0xa
   124d8:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   124dc:	add	x9, x19, #0x4c
   124e0:	b	15420 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ef4>
   124e4:	ldr	w8, [x19, #48]
   124e8:	cmp	w8, #0x4
   124ec:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   124f0:	ldr	w8, [x19, #76]
   124f4:	cmp	w8, #0x2
   124f8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   124fc:	ldr	w8, [x19, #88]
   12500:	cmp	w8, #0x1
   12504:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12508:	b	145ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3080>
   1250c:	ldr	w8, [x19, #48]
   12510:	cmp	w8, #0x3
   12514:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12518:	ldr	w8, [x19, #76]
   1251c:	cmp	w8, #0x3
   12520:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12524:	mov	x0, x19
   12528:	bl	18bb0 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj2EEEbv>
   1252c:	tbz	w0, #0, 1253c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1010>
   12530:	ldr	w8, [x19, #80]
   12534:	cmp	w8, #0x40
   12538:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   1253c:	mov	w0, #0x6a                  	// #106
   12540:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   12544:	ldr	x8, [x19]
   12548:	mov	x0, x19
   1254c:	ldr	x8, [x8, #40]
   12550:	blr	x8
   12554:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12558:	ldr	w8, [x19, #48]
   1255c:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   12560:	ldr	x8, [x19, #72]
   12564:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   12568:	ldr	w9, [x8]
   1256c:	cmp	w9, #0x1
   12570:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12574:	ldr	x8, [x8, #16]
   12578:	mov	w9, #0x1fd                 	// #509
   1257c:	mov	w10, #0x3a                  	// #58
   12580:	add	x11, x8, #0x100
   12584:	b	132bc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1d90>
   12588:	mov	x0, x19
   1258c:	bl	1795c <_ZNK12_GLOBAL__N_114AArch64Operand12isImmInRangeILi0ELi31EEEbv>
   12590:	tst	w0, #0x1
   12594:	mov	w8, #0x1c                  	// #28
   12598:	b	1196c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x440>
   1259c:	ldr	x8, [x19]
   125a0:	mov	x0, x19
   125a4:	ldr	x8, [x8, #40]
   125a8:	blr	x8
   125ac:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   125b0:	ldr	w8, [x19, #48]
   125b4:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   125b8:	ldr	x8, [x19, #72]
   125bc:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   125c0:	ldr	w9, [x8]
   125c4:	cmp	w9, #0x1
   125c8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   125cc:	ldr	x8, [x8, #16]
   125d0:	mov	w9, #0x7f1                 	// #2033
   125d4:	mov	w10, #0x2d                  	// #45
   125d8:	add	x11, x8, #0x400
   125dc:	b	12dac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1880>
   125e0:	ldr	w8, [x19, #48]
   125e4:	cmp	w8, #0x4
   125e8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   125ec:	ldr	w8, [x19, #76]
   125f0:	cmp	w8, #0x4
   125f4:	b.eq	142a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2d78>  // b.none
   125f8:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   125fc:	mov	x0, x19
   12600:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   12604:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12608:	ldr	w8, [x19, #48]
   1260c:	cmp	w8, #0x3
   12610:	b.eq	15444 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f18>  // b.none
   12614:	cmp	w8, #0xa
   12618:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   1261c:	add	x9, x19, #0x4c
   12620:	b	15448 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f1c>
   12624:	ldr	x8, [x19]
   12628:	mov	x0, x19
   1262c:	ldr	x8, [x8, #40]
   12630:	blr	x8
   12634:	tbz	w0, #0, 14fb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a88>
   12638:	ldr	x8, [x19, #72]
   1263c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   12640:	ldr	w9, [x8]
   12644:	mov	w0, #0x4                   	// #4
   12648:	cmp	w9, #0x1
   1264c:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   12650:	ldr	x8, [x8, #16]
   12654:	add	x8, x8, #0x100, lsl #12
   12658:	cmp	x8, #0x200, lsl #12
   1265c:	b	13cf4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x27c8>
   12660:	ldr	w8, [x19, #48]
   12664:	cmp	w8, #0x4
   12668:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1266c:	ldr	w8, [x19, #76]
   12670:	cmp	w8, #0x3
   12674:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12678:	ldr	w8, [x19, #88]
   1267c:	cmp	w8, #0x1
   12680:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12684:	b	145ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3080>
   12688:	ldr	w8, [x19, #48]
   1268c:	cmp	w8, #0x3
   12690:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12694:	ldr	w8, [x19, #76]
   12698:	cmp	w8, #0x1
   1269c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   126a0:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   126a4:	ldr	w8, [x19, #72]
   126a8:	ldr	x9, [x9]
   126ac:	lsr	x10, x8, #3
   126b0:	ldrh	w11, [x9, #1302]
   126b4:	cmp	w10, w11
   126b8:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   126bc:	ldr	x9, [x9, #1288]
   126c0:	b	14474 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2f48>
   126c4:	ldr	w8, [x19, #48]
   126c8:	cmp	w8, #0x4
   126cc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   126d0:	ldr	w8, [x19, #76]
   126d4:	cmp	w8, #0x2
   126d8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   126dc:	ldr	w8, [x19, #88]
   126e0:	cmp	w8, #0x1
   126e4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   126e8:	b	14840 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3314>
   126ec:	mov	x0, x19
   126f0:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   126f4:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   126f8:	ldr	w8, [x19, #48]
   126fc:	cmp	w8, #0x3
   12700:	b.eq	1546c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f40>  // b.none
   12704:	cmp	w8, #0xa
   12708:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   1270c:	add	x9, x19, #0x4c
   12710:	b	15470 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f44>
   12714:	ldr	w8, [x19, #48]
   12718:	cmp	w8, #0x4
   1271c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12720:	ldr	w8, [x19, #76]
   12724:	cmp	w8, #0x4
   12728:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1272c:	b	14664 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3138>
   12730:	ldr	w8, [x19, #48]
   12734:	cmp	w8, #0x3
   12738:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1273c:	ldr	w8, [x19, #76]
   12740:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12744:	mov	x0, x19
   12748:	bl	188e0 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj17EEEbv>
   1274c:	tbz	w0, #0, 15db0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4884>
   12750:	ldr	w9, [x19, #48]
   12754:	add	x8, x19, #0x48
   12758:	cmp	w9, #0x3
   1275c:	b.eq	15cac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4780>  // b.none
   12760:	cmp	w9, #0xa
   12764:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   12768:	mov	x10, x8
   1276c:	b	15cb0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4784>
   12770:	ldr	x8, [x19]
   12774:	mov	x0, x19
   12778:	ldr	x8, [x8, #40]
   1277c:	blr	x8
   12780:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12784:	ldr	w8, [x19, #48]
   12788:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   1278c:	ldr	x8, [x19, #72]
   12790:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   12794:	ldr	w9, [x8]
   12798:	cmp	w9, #0x1
   1279c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   127a0:	ldr	x8, [x8, #16]
   127a4:	mov	w9, #0x4                   	// #4
   127a8:	cmp	x8, #0x3e
   127ac:	and	x8, x8, #0x1
   127b0:	cset	w10, hi  // hi = pmore
   127b4:	orr	x8, x8, x10
   127b8:	cmp	x8, #0x1
   127bc:	mov	w8, #0x35                  	// #53
   127c0:	b	14eb0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3984>
   127c4:	mov	x0, x19
   127c8:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   127cc:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   127d0:	ldr	w8, [x19, #48]
   127d4:	cmp	w8, #0x3
   127d8:	b.eq	154a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f74>  // b.none
   127dc:	cmp	w8, #0xa
   127e0:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   127e4:	add	x9, x19, #0x4c
   127e8:	b	154a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f78>
   127ec:	mov	x0, x19
   127f0:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   127f4:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   127f8:	ldr	w8, [x19, #48]
   127fc:	cmp	w8, #0x3
   12800:	b.eq	154c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f9c>  // b.none
   12804:	cmp	w8, #0xa
   12808:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   1280c:	add	x9, x19, #0x4c
   12810:	b	154cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3fa0>
   12814:	ldr	w8, [x19, #48]
   12818:	cmp	w8, #0x3
   1281c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12820:	ldr	w8, [x19, #76]
   12824:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12828:	ldr	x8, [x19]
   1282c:	mov	x0, x19
   12830:	ldr	x8, [x8, #56]
   12834:	blr	x8
   12838:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1283c:	ldr	x8, [x8]
   12840:	mov	w9, w0
   12844:	lsr	x9, x9, #3
   12848:	ldrh	w10, [x8, #534]
   1284c:	cmp	w9, w10
   12850:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   12854:	ldr	x8, [x8, #520]
   12858:	b	14510 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2fe4>
   1285c:	ldr	x8, [x19]
   12860:	mov	x0, x19
   12864:	ldr	x8, [x8, #40]
   12868:	blr	x8
   1286c:	tbz	w0, #0, 15210 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ce4>
   12870:	ldr	w8, [x19, #48]
   12874:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   12878:	ldr	x8, [x19, #72]
   1287c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   12880:	ldr	w9, [x8]
   12884:	mov	w0, #0x18                  	// #24
   12888:	cmp	w9, #0x1
   1288c:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   12890:	ldr	x8, [x8, #16]
   12894:	cmp	x8, #0x2
   12898:	b	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c18>
   1289c:	ldr	w8, [x19, #48]
   128a0:	cmp	w8, #0x5
   128a4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   128a8:	ldr	w8, [x19, #72]
   128ac:	mov	w9, #0x5e                  	// #94
   128b0:	b	1486c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3340>
   128b4:	ldr	w8, [x19, #48]
   128b8:	cmp	w8, #0x7
   128bc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   128c0:	ldr	w8, [x19, #92]
   128c4:	mov	w0, #0x4                   	// #4
   128c8:	add	w8, w8, #0x1
   128cc:	cmp	w8, #0x1b
   128d0:	b.hi	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.pmore
   128d4:	mov	w9, #0x1                   	// #1
   128d8:	lsl	w8, w9, w8
   128dc:	mov	w9, #0x31                  	// #49
   128e0:	movk	w9, #0xc00, lsl #16
   128e4:	tst	w8, w9
   128e8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   128ec:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   128f0:	mov	x0, x19
   128f4:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   128f8:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   128fc:	ldr	w8, [x19, #48]
   12900:	cmp	w8, #0x3
   12904:	b.eq	154f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3fc4>  // b.none
   12908:	cmp	w8, #0xa
   1290c:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   12910:	add	x9, x19, #0x4c
   12914:	b	154f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3fc8>
   12918:	mov	x0, x19
   1291c:	bl	17b5c <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv>
   12920:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12924:	mov	x0, x19
   12928:	bl	1819c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi8EEEbv>
   1292c:	tbnz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12930:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   12934:	ldr	w8, [x19, #48]
   12938:	cmp	w8, #0x4
   1293c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12940:	ldr	w8, [x19, #76]
   12944:	cmp	w8, #0x1
   12948:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1294c:	ldr	w8, [x19, #88]
   12950:	cmp	w8, #0x2
   12954:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12958:	ldr	w8, [x19, #84]
   1295c:	cmp	w8, #0x8
   12960:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12964:	b	13f1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x29f0>
   12968:	ldr	w8, [x19, #48]
   1296c:	cmp	w8, #0x5
   12970:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12974:	ldr	w8, [x19, #72]
   12978:	mov	w9, #0x25                  	// #37
   1297c:	cmp	w8, #0x10
   12980:	b	14b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x35dc>
   12984:	ldr	w8, [x19, #48]
   12988:	cmp	w8, #0x3
   1298c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12990:	ldr	w8, [x19, #76]
   12994:	cmp	w8, #0x3
   12998:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1299c:	mov	x0, x19
   129a0:	bl	18bb0 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj2EEEbv>
   129a4:	tbz	w0, #0, 129b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1488>
   129a8:	ldr	w8, [x19, #80]
   129ac:	cmp	w8, #0x8
   129b0:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   129b4:	mov	w0, #0x69                  	// #105
   129b8:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   129bc:	ldr	x8, [x19]
   129c0:	mov	x0, x19
   129c4:	ldr	x8, [x8, #40]
   129c8:	blr	x8
   129cc:	tbz	w0, #0, 15218 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3cec>
   129d0:	ldr	w8, [x19, #48]
   129d4:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   129d8:	ldr	x8, [x19, #72]
   129dc:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   129e0:	ldr	w9, [x8]
   129e4:	mov	w0, #0x42                  	// #66
   129e8:	cmp	w9, #0x1
   129ec:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   129f0:	ldr	x8, [x8, #16]
   129f4:	add	x8, x8, #0x10
   129f8:	cmp	x8, #0x20
   129fc:	b	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c18>
   12a00:	ldr	x8, [x19]
   12a04:	mov	x0, x19
   12a08:	ldr	x8, [x8, #40]
   12a0c:	blr	x8
   12a10:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12a14:	ldr	w8, [x19, #48]
   12a18:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   12a1c:	ldr	x8, [x19, #72]
   12a20:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   12a24:	ldr	w9, [x8]
   12a28:	cmp	w9, #0x1
   12a2c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12a30:	ldr	x8, [x8, #16]
   12a34:	mov	w9, #0xfd                  	// #253
   12a38:	mov	w10, #0x3c                  	// #60
   12a3c:	tst	x8, #0x3
   12a40:	b	14b54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3628>
   12a44:	mov	x0, x19
   12a48:	bl	180e8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi4EEEbv>
   12a4c:	tst	w0, #0x1
   12a50:	mov	w8, #0x38                  	// #56
   12a54:	b	1196c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x440>
   12a58:	ldr	w8, [x19, #48]
   12a5c:	cmp	w8, #0x4
   12a60:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12a64:	ldr	w8, [x19, #76]
   12a68:	cmp	w8, #0x4
   12a6c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12a70:	ldr	w8, [x19, #88]
   12a74:	cmp	w8, #0x1
   12a78:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12a7c:	ldr	w8, [x19, #84]
   12a80:	cmp	w8, #0x8
   12a84:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12a88:	b	14084 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2b58>
   12a8c:	ldr	w8, [x19, #48]
   12a90:	cmp	w8, #0x4
   12a94:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12a98:	ldr	w8, [x19, #76]
   12a9c:	cmp	w8, #0x2
   12aa0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12aa4:	ldr	w8, [x19, #88]
   12aa8:	cmp	w8, #0x1
   12aac:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12ab0:	b	142b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2d84>
   12ab4:	ldr	w8, [x19, #48]
   12ab8:	cmp	w8, #0x4
   12abc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12ac0:	ldr	w8, [x19, #76]
   12ac4:	cmp	w8, #0x1
   12ac8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12acc:	ldr	w8, [x19, #88]
   12ad0:	cmp	w8, #0x1
   12ad4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12ad8:	b	13c98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x276c>
   12adc:	ldr	w8, [x19, #48]
   12ae0:	cmp	w8, #0x4
   12ae4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12ae8:	ldr	w8, [x19, #76]
   12aec:	cmp	w8, #0x2
   12af0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12af4:	ldr	w8, [x19, #88]
   12af8:	cmp	w8, #0x1
   12afc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12b00:	b	14078 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2b4c>
   12b04:	ldr	w8, [x19, #48]
   12b08:	cmp	w8, #0x4
   12b0c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12b10:	ldr	w8, [x19, #76]
   12b14:	cmp	w8, #0x2
   12b18:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12b1c:	ldr	w8, [x19, #88]
   12b20:	cmp	w8, #0x1
   12b24:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12b28:	b	14670 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3144>
   12b2c:	mov	x0, x19
   12b30:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   12b34:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12b38:	ldr	w8, [x19, #48]
   12b3c:	cmp	w8, #0x3
   12b40:	b.eq	15524 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ff8>  // b.none
   12b44:	cmp	w8, #0xa
   12b48:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   12b4c:	add	x9, x19, #0x4c
   12b50:	b	15528 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ffc>
   12b54:	mov	x0, x19
   12b58:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   12b5c:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12b60:	ldr	w8, [x19, #48]
   12b64:	cmp	w8, #0x3
   12b68:	b.eq	15534 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4008>  // b.none
   12b6c:	cmp	w8, #0xa
   12b70:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   12b74:	add	x9, x19, #0x4c
   12b78:	b	15538 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x400c>
   12b7c:	mov	x0, x19
   12b80:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   12b84:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12b88:	ldr	w8, [x19, #48]
   12b8c:	cmp	w8, #0x3
   12b90:	b.eq	15544 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4018>  // b.none
   12b94:	cmp	w8, #0xa
   12b98:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   12b9c:	add	x9, x19, #0x4c
   12ba0:	b	15548 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x401c>
   12ba4:	ldr	w8, [x19, #48]
   12ba8:	cmp	w8, #0x4
   12bac:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12bb0:	ldr	w8, [x19, #76]
   12bb4:	cmp	w8, #0x2
   12bb8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12bbc:	ldr	w8, [x19, #88]
   12bc0:	cmp	w8, #0x2
   12bc4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12bc8:	ldr	w8, [x19, #84]
   12bcc:	cmp	w8, #0x20
   12bd0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12bd4:	b	13f1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x29f0>
   12bd8:	ldr	w8, [x19, #48]
   12bdc:	cmp	w8, #0x3
   12be0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12be4:	ldr	w8, [x19, #76]
   12be8:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12bec:	b	12f6c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1a40>
   12bf0:	ldr	w8, [x19, #48]
   12bf4:	cmp	w8, #0x4
   12bf8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12bfc:	ldr	w8, [x19, #76]
   12c00:	cmp	w8, #0x2
   12c04:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12c08:	ldr	w8, [x19, #88]
   12c0c:	cmp	w8, #0x1
   12c10:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12c14:	b	130a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1b74>
   12c18:	ldr	w8, [x19, #48]
   12c1c:	cmp	w8, #0x3
   12c20:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12c24:	ldr	w8, [x19, #76]
   12c28:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12c2c:	ldr	x8, [x19]
   12c30:	mov	x0, x19
   12c34:	ldr	x8, [x8, #56]
   12c38:	blr	x8
   12c3c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   12c40:	ldr	x8, [x8]
   12c44:	mov	w9, w0
   12c48:	lsr	x9, x9, #3
   12c4c:	ldrh	w10, [x8, #54]
   12c50:	cmp	w9, w10
   12c54:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   12c58:	ldr	x8, [x8, #40]
   12c5c:	b	14510 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2fe4>
   12c60:	mov	x0, x19
   12c64:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   12c68:	cbz	w0, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   12c6c:	cmp	w0, #0x1
   12c70:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12c74:	mov	w0, #0x7d                  	// #125
   12c78:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   12c7c:	mov	x0, x19
   12c80:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   12c84:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12c88:	ldr	w8, [x19, #48]
   12c8c:	cmp	w8, #0x3
   12c90:	b.eq	15554 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4028>  // b.none
   12c94:	cmp	w8, #0xa
   12c98:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   12c9c:	add	x9, x19, #0x4c
   12ca0:	b	15558 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x402c>
   12ca4:	ldr	w8, [x19, #48]
   12ca8:	cmp	w8, #0x4
   12cac:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12cb0:	ldr	w8, [x19, #76]
   12cb4:	cmp	w8, #0x3
   12cb8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12cbc:	ldr	w8, [x19, #88]
   12cc0:	cmp	w8, #0x2
   12cc4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12cc8:	ldr	w8, [x19, #84]
   12ccc:	cmp	w8, #0x8
   12cd0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12cd4:	b	13f1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x29f0>
   12cd8:	ldr	w8, [x19, #48]
   12cdc:	cmp	w8, #0x4
   12ce0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12ce4:	ldr	w8, [x19, #76]
   12ce8:	cmp	w8, #0x2
   12cec:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12cf0:	ldr	w8, [x19, #88]
   12cf4:	cmp	w8, #0x2
   12cf8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12cfc:	ldr	w8, [x19, #84]
   12d00:	cmp	w8, #0x40
   12d04:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12d08:	b	13f1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x29f0>
   12d0c:	ldr	w8, [x19, #48]
   12d10:	cmp	w8, #0x4
   12d14:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12d18:	ldr	w8, [x19, #76]
   12d1c:	cmp	w8, #0x1
   12d20:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12d24:	b	134c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1f9c>
   12d28:	ldr	w8, [x19, #48]
   12d2c:	cmp	w8, #0x4
   12d30:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12d34:	ldr	w8, [x19, #76]
   12d38:	cmp	w8, #0x4
   12d3c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12d40:	b	145a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3074>
   12d44:	mov	x0, x19
   12d48:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   12d4c:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12d50:	ldr	w8, [x19, #48]
   12d54:	cmp	w8, #0x3
   12d58:	b.eq	15588 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x405c>  // b.none
   12d5c:	cmp	w8, #0xa
   12d60:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   12d64:	add	x9, x19, #0x4c
   12d68:	b	1558c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4060>
   12d6c:	ldr	x8, [x19]
   12d70:	mov	x0, x19
   12d74:	ldr	x8, [x8, #40]
   12d78:	blr	x8
   12d7c:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12d80:	ldr	w8, [x19, #48]
   12d84:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   12d88:	ldr	x8, [x19, #72]
   12d8c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   12d90:	ldr	w9, [x8]
   12d94:	cmp	w9, #0x1
   12d98:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12d9c:	ldr	x8, [x8, #16]
   12da0:	mov	w9, #0x1ff1                	// #8177
   12da4:	mov	w10, #0x2e                  	// #46
   12da8:	add	x11, x8, #0x1, lsl #12
   12dac:	tst	x8, #0xf
   12db0:	b	132c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1d94>
   12db4:	ldr	w8, [x19, #48]
   12db8:	cmp	w8, #0x4
   12dbc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12dc0:	ldr	w8, [x19, #76]
   12dc4:	cmp	w8, #0x3
   12dc8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12dcc:	ldr	w8, [x19, #88]
   12dd0:	cmp	w8, #0x2
   12dd4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12dd8:	ldr	w8, [x19, #84]
   12ddc:	cmp	w8, #0x10
   12de0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12de4:	b	13f1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x29f0>
   12de8:	ldr	w8, [x19, #48]
   12dec:	cmp	w8, #0x4
   12df0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12df4:	ldr	w8, [x19, #76]
   12df8:	cmp	w8, #0x1
   12dfc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12e00:	ldr	w8, [x19, #88]
   12e04:	cmp	w8, #0x1
   12e08:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12e0c:	b	130a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1b74>
   12e10:	ldr	w8, [x19, #48]
   12e14:	cmp	w8, #0x4
   12e18:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12e1c:	ldr	w8, [x19, #76]
   12e20:	cmp	w8, #0x3
   12e24:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12e28:	b	14b7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3650>
   12e2c:	mov	x0, x19
   12e30:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   12e34:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12e38:	ldr	w8, [x19, #48]
   12e3c:	cmp	w8, #0x3
   12e40:	b.eq	155bc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4090>  // b.none
   12e44:	cmp	w8, #0xa
   12e48:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   12e4c:	add	x9, x19, #0x4c
   12e50:	b	155c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4094>
   12e54:	ldr	w8, [x19, #48]
   12e58:	cmp	w8, #0x3
   12e5c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12e60:	ldr	w8, [x19, #76]
   12e64:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12e68:	ldr	x8, [x19]
   12e6c:	mov	x0, x19
   12e70:	ldr	x8, [x8, #56]
   12e74:	blr	x8
   12e78:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   12e7c:	ldr	x8, [x8]
   12e80:	mov	w9, w0
   12e84:	lsr	x9, x9, #3
   12e88:	ldrh	w10, [x8, #1238]
   12e8c:	cmp	w9, w10
   12e90:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   12e94:	ldr	x8, [x8, #1224]
   12e98:	b	14510 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2fe4>
   12e9c:	ldr	w8, [x19, #48]
   12ea0:	cmp	w8, #0x3
   12ea4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12ea8:	ldr	w8, [x19, #76]
   12eac:	cmp	w8, #0x3
   12eb0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12eb4:	mov	x0, x19
   12eb8:	bl	18bb0 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj2EEEbv>
   12ebc:	tbz	w0, #0, 12ecc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x19a0>
   12ec0:	ldr	w8, [x19, #80]
   12ec4:	cmp	w8, #0x10
   12ec8:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   12ecc:	mov	w0, #0x6b                  	// #107
   12ed0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   12ed4:	ldr	w8, [x19, #48]
   12ed8:	cmp	w8, #0x4
   12edc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12ee0:	ldr	w8, [x19, #76]
   12ee4:	cmp	w8, #0x3
   12ee8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12eec:	ldr	w8, [x19, #88]
   12ef0:	cmp	w8, #0x2
   12ef4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12ef8:	ldr	w8, [x19, #84]
   12efc:	cmp	w8, #0x20
   12f00:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12f04:	b	13eb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2988>
   12f08:	mov	x0, x19
   12f0c:	bl	179f8 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIiEEbv>
   12f10:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12f14:	mov	x0, x19
   12f18:	bl	17cf8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv>
   12f1c:	cbnz	w0, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   12f20:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12f24:	ldr	w8, [x19, #48]
   12f28:	cmp	w8, #0x7
   12f2c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12f30:	ldr	w8, [x19, #92]
   12f34:	cmp	w8, #0x1a
   12f38:	b.hi	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.pmore
   12f3c:	mov	w9, #0x1                   	// #1
   12f40:	lsl	w8, w9, w8
   12f44:	mov	w9, #0x18                  	// #24
   12f48:	movk	w9, #0x600, lsl #16
   12f4c:	tst	w8, w9
   12f50:	b.ne	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.any
   12f54:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12f58:	ldr	w8, [x19, #48]
   12f5c:	cmp	w8, #0x3
   12f60:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12f64:	ldr	w8, [x19, #76]
   12f68:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12f6c:	ldr	x8, [x19]
   12f70:	mov	x0, x19
   12f74:	ldr	x8, [x8, #56]
   12f78:	blr	x8
   12f7c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   12f80:	ldr	x8, [x8]
   12f84:	mov	w9, w0
   12f88:	lsr	x9, x9, #3
   12f8c:	ldrh	w10, [x8, #22]
   12f90:	cmp	w9, w10
   12f94:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   12f98:	ldr	x8, [x8, #8]
   12f9c:	b	14510 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2fe4>
   12fa0:	mov	x0, x19
   12fa4:	bl	18488 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1ELj2EEEN4llvm19DiagnosticPredicateEv>
   12fa8:	cbz	w0, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   12fac:	cmp	w0, #0x1
   12fb0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12fb4:	mov	w0, #0x5a                  	// #90
   12fb8:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   12fbc:	ldr	w8, [x19, #48]
   12fc0:	cmp	w8, #0x4
   12fc4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12fc8:	ldr	w8, [x19, #76]
   12fcc:	cmp	w8, #0x2
   12fd0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   12fd4:	b	14164 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c38>
   12fd8:	mov	x0, x19
   12fdc:	bl	17b5c <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv>
   12fe0:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12fe4:	mov	x0, x19
   12fe8:	bl	17f8c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi1EEEbv>
   12fec:	tbnz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   12ff0:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   12ff4:	ldr	w8, [x19, #48]
   12ff8:	cmp	w8, #0x3
   12ffc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13000:	ldr	w8, [x19, #76]
   13004:	cmp	w8, #0x2
   13008:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1300c:	mov	x0, x19
   13010:	bl	18fd4 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj41EEEbv>
   13014:	tbz	w0, #0, 13024 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1af8>
   13018:	ldr	w8, [x19, #80]
   1301c:	cmp	w8, #0x20
   13020:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   13024:	mov	w0, #0x8f                  	// #143
   13028:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   1302c:	ldr	w8, [x19, #48]
   13030:	cmp	w8, #0x4
   13034:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13038:	ldr	w8, [x19, #76]
   1303c:	cmp	w8, #0x3
   13040:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13044:	ldr	w8, [x19, #88]
   13048:	cmp	w8, #0x1
   1304c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13050:	b	13c98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x276c>
   13054:	mov	x0, x19
   13058:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   1305c:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13060:	ldr	w8, [x19, #48]
   13064:	cmp	w8, #0x3
   13068:	b.eq	155f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x40c4>  // b.none
   1306c:	cmp	w8, #0xa
   13070:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   13074:	add	x9, x19, #0x4c
   13078:	b	155f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x40c8>
   1307c:	ldr	w8, [x19, #48]
   13080:	cmp	w8, #0x4
   13084:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13088:	ldr	w8, [x19, #76]
   1308c:	cmp	w8, #0x3
   13090:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13094:	ldr	w8, [x19, #88]
   13098:	cmp	w8, #0x1
   1309c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   130a0:	ldr	w8, [x19, #84]
   130a4:	cmp	w8, #0x8
   130a8:	b.eq	1484c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3320>  // b.none
   130ac:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   130b0:	mov	x0, x19
   130b4:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   130b8:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   130bc:	ldr	w8, [x19, #48]
   130c0:	cmp	w8, #0x3
   130c4:	b.eq	15624 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x40f8>  // b.none
   130c8:	cmp	w8, #0xa
   130cc:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   130d0:	add	x9, x19, #0x4c
   130d4:	b	15628 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x40fc>
   130d8:	ldr	w8, [x19, #48]
   130dc:	cmp	w8, #0x3
   130e0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   130e4:	ldr	w8, [x19, #76]
   130e8:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   130ec:	ldr	x8, [x19]
   130f0:	mov	x0, x19
   130f4:	ldr	x8, [x8, #56]
   130f8:	blr	x8
   130fc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   13100:	ldr	x8, [x8]
   13104:	mov	w9, w0
   13108:	lsr	x9, x9, #3
   1310c:	ldrh	w10, [x8, #1238]
   13110:	cmp	w9, w10
   13114:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   13118:	ldr	x8, [x8, #1224]
   1311c:	b	14510 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2fe4>
   13120:	ldr	w8, [x19, #48]
   13124:	cmp	w8, #0x4
   13128:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1312c:	ldr	w8, [x19, #76]
   13130:	cmp	w8, #0x1
   13134:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13138:	ldr	w8, [x19, #88]
   1313c:	cmp	w8, #0x2
   13140:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13144:	ldr	w8, [x19, #84]
   13148:	cmp	w8, #0x40
   1314c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13150:	b	13f1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x29f0>
   13154:	ldr	w8, [x19, #48]
   13158:	cmp	w8, #0x4
   1315c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13160:	ldr	w8, [x19, #76]
   13164:	cmp	w8, #0x3
   13168:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1316c:	b	14664 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3138>
   13170:	ldr	w8, [x19, #48]
   13174:	cmp	w8, #0x3
   13178:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1317c:	ldr	w8, [x19, #76]
   13180:	cmp	w8, #0x2
   13184:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13188:	mov	x0, x19
   1318c:	bl	18f68 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj42EEEbv>
   13190:	tbz	w0, #0, 131a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1c74>
   13194:	ldr	w8, [x19, #80]
   13198:	cmp	w8, #0x8
   1319c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   131a0:	mov	w0, #0x8d                  	// #141
   131a4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   131a8:	ldr	x8, [x19]
   131ac:	mov	x0, x19
   131b0:	ldr	x8, [x8, #40]
   131b4:	blr	x8
   131b8:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   131bc:	ldr	w8, [x19, #48]
   131c0:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   131c4:	ldr	x8, [x19, #72]
   131c8:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   131cc:	ldr	w9, [x8]
   131d0:	cmp	w9, #0x1
   131d4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   131d8:	ldrh	w8, [x8, #18]
   131dc:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   131e0:	b	13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   131e4:	ldr	w8, [x19, #48]
   131e8:	cmp	w8, #0x3
   131ec:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   131f0:	ldr	w8, [x19, #76]
   131f4:	cmp	w8, #0x2
   131f8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   131fc:	mov	x0, x19
   13200:	bl	18efc <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv>
   13204:	tbz	w0, #0, 13214 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1ce8>
   13208:	ldr	w8, [x19, #80]
   1320c:	cmp	w8, #0x10
   13210:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   13214:	mov	w0, #0x6f                  	// #111
   13218:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   1321c:	ldr	w8, [x19, #48]
   13220:	cmp	w8, #0x3
   13224:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13228:	ldr	w8, [x19, #76]
   1322c:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13230:	mov	x0, x19
   13234:	bl	18878 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj19EEEbv>
   13238:	tbz	w0, #0, 15dc8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x489c>
   1323c:	ldr	w9, [x19, #48]
   13240:	add	x8, x19, #0x48
   13244:	cmp	w9, #0x3
   13248:	b.eq	15cd0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x47a4>  // b.none
   1324c:	cmp	w9, #0xa
   13250:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   13254:	mov	x10, x8
   13258:	b	15cd4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x47a8>
   1325c:	ldr	w8, [x19, #48]
   13260:	cmp	w8, #0xa
   13264:	b.ne	14a14 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x34e8>  // b.any
   13268:	ldr	w8, [x19, #72]
   1326c:	mov	w0, #0x9                   	// #9
   13270:	cmp	w8, #0x3
   13274:	b.ls	14a08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x34dc>  // b.plast
   13278:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   1327c:	ldr	x8, [x19]
   13280:	mov	x0, x19
   13284:	ldr	x8, [x8, #40]
   13288:	blr	x8
   1328c:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13290:	ldr	w8, [x19, #48]
   13294:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   13298:	ldr	x8, [x19, #72]
   1329c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   132a0:	ldr	w9, [x8]
   132a4:	cmp	w9, #0x1
   132a8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   132ac:	ldr	x8, [x8, #16]
   132b0:	mov	w9, #0x3d                  	// #61
   132b4:	mov	w10, #0x39                  	// #57
   132b8:	add	x11, x8, #0x20
   132bc:	tst	x8, #0x3
   132c0:	ccmp	x11, x9, #0x2, eq  // eq = none
   132c4:	b	14b58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x362c>
   132c8:	ldr	x8, [x19]
   132cc:	mov	x0, x19
   132d0:	ldr	x8, [x8, #40]
   132d4:	blr	x8
   132d8:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   132dc:	ldr	w8, [x19, #48]
   132e0:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   132e4:	ldr	x8, [x19, #72]
   132e8:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   132ec:	ldr	w9, [x8]
   132f0:	cmp	w9, #0x1
   132f4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   132f8:	ldr	x8, [x8, #16]
   132fc:	mov	x9, #0x4fa5                	// #20389
   13300:	movk	x9, #0xa4fa, lsl #16
   13304:	movk	x9, #0xfa4f, lsl #32
   13308:	mov	x10, #0x82d9                	// #33497
   1330c:	movk	x9, #0x4fa4, lsl #48
   13310:	movk	x10, #0xd82d, lsl #16
   13314:	movk	x10, #0x2d82, lsl #32
   13318:	mul	x9, x8, x9
   1331c:	movk	x10, #0x2d8, lsl #48
   13320:	ror	x9, x9, #1
   13324:	mov	w11, #0x10f                 	// #271
   13328:	cmp	x9, x10
   1332c:	mov	w12, #0xc                   	// #12
   13330:	ccmp	x8, x11, #0x2, cc  // cc = lo, ul, last
   13334:	mov	w8, #0x4                   	// #4
   13338:	csel	w0, w8, w12, cc  // cc = lo, ul, last
   1333c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13340:	ldr	w8, [x19, #48]
   13344:	cmp	w8, #0x3
   13348:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1334c:	ldr	w8, [x19, #76]
   13350:	cmp	w8, #0x3
   13354:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13358:	mov	x0, x19
   1335c:	bl	18c1c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj3EEEbv>
   13360:	tbz	w0, #0, 13370 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1e44>
   13364:	ldr	w8, [x19, #80]
   13368:	cmp	w8, #0x8
   1336c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   13370:	mov	w0, #0x64                  	// #100
   13374:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13378:	mov	x0, x19
   1337c:	bl	17cf8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv>
   13380:	cbz	w0, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   13384:	cmp	w0, #0x1
   13388:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1338c:	mov	w0, #0x57                  	// #87
   13390:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13394:	ldr	x8, [x19]
   13398:	mov	x0, x19
   1339c:	ldr	x8, [x8, #40]
   133a0:	blr	x8
   133a4:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   133a8:	ldr	w8, [x19, #48]
   133ac:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   133b0:	ldr	x8, [x19, #72]
   133b4:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   133b8:	ldr	w9, [x8]
   133bc:	cmp	w9, #0x1
   133c0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   133c4:	ldr	x8, [x8, #16]
   133c8:	mov	x9, #0x4fa5                	// #20389
   133cc:	movk	x9, #0xa4fa, lsl #16
   133d0:	movk	x9, #0xfa4f, lsl #32
   133d4:	mov	x11, #0xc16c                	// #49516
   133d8:	movk	x9, #0x4fa4, lsl #48
   133dc:	orr	x10, xzr, #0xfffffffffffffffe
   133e0:	movk	x11, #0x6c16, lsl #16
   133e4:	movk	x11, #0x16c1, lsl #32
   133e8:	madd	x9, x8, x9, x10
   133ec:	movk	x11, #0x16c, lsl #48
   133f0:	ror	x9, x9, #2
   133f4:	mov	w12, #0x10f                 	// #271
   133f8:	cmp	x9, x11
   133fc:	mov	w13, #0xd                   	// #13
   13400:	ccmp	x8, x12, #0x2, cc  // cc = lo, ul, last
   13404:	b	14e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x38f4>
   13408:	ldr	w8, [x19, #48]
   1340c:	cmp	w8, #0x4
   13410:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13414:	ldr	w8, [x19, #76]
   13418:	cmp	w8, #0x4
   1341c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13420:	b	134c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1f9c>
   13424:	ldr	x8, [x19]
   13428:	mov	x0, x19
   1342c:	ldr	x8, [x8, #40]
   13430:	blr	x8
   13434:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13438:	ldr	w8, [x19, #48]
   1343c:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   13440:	ldr	x8, [x19, #72]
   13444:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   13448:	ldr	w9, [x8]
   1344c:	cmp	w9, #0x1
   13450:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13454:	ldr	x8, [x8, #16]
   13458:	cmp	x8, #0x10, lsl #12
   1345c:	b.cc	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.lo, b.ul, b.last
   13460:	and	x9, x8, #0xffffffff0000ffff
   13464:	cbz	x9, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13468:	mov	w9, #0xffffffff            	// #-1
   1346c:	cmp	x9, w8, uxtw
   13470:	b.eq	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.none
   13474:	mvn	w8, w8
   13478:	b	13aa0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2574>
   1347c:	ldr	w8, [x19, #48]
   13480:	cmp	w8, #0x4
   13484:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13488:	ldr	w8, [x19, #76]
   1348c:	cmp	w8, #0x4
   13490:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13494:	ldr	w8, [x19, #88]
   13498:	cmp	w8, #0x1
   1349c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   134a0:	ldr	w8, [x19, #84]
   134a4:	cmp	w8, #0x10
   134a8:	b.eq	14084 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2b58>  // b.none
   134ac:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   134b0:	ldr	w8, [x19, #48]
   134b4:	cmp	w8, #0x4
   134b8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   134bc:	ldr	w8, [x19, #76]
   134c0:	cmp	w8, #0x3
   134c4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   134c8:	ldr	w8, [x19, #88]
   134cc:	cmp	w8, #0x1
   134d0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   134d4:	b	14044 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2b18>
   134d8:	mov	x0, x19
   134dc:	bl	184f8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv>
   134e0:	cbz	w0, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   134e4:	cmp	w0, #0x1
   134e8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   134ec:	mov	w0, #0x5c                  	// #92
   134f0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   134f4:	mov	x0, x19
   134f8:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   134fc:	cbz	w0, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   13500:	cmp	w0, #0x1
   13504:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13508:	mov	w0, #0x70                  	// #112
   1350c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13510:	ldr	x8, [x19]
   13514:	mov	x0, x19
   13518:	ldr	x8, [x8, #40]
   1351c:	blr	x8
   13520:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13524:	ldr	w8, [x19, #48]
   13528:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   1352c:	ldr	x8, [x19, #72]
   13530:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   13534:	ldr	w9, [x8]
   13538:	cmp	w9, #0x1
   1353c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13540:	ldr	x8, [x8, #16]
   13544:	cmp	x8, #0x10, lsl #12
   13548:	b.cc	13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>  // b.lo, b.ul, b.last
   1354c:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13550:	ldr	w8, [x19, #48]
   13554:	cmp	w8, #0x3
   13558:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1355c:	ldr	w8, [x19, #76]
   13560:	cmp	w8, #0x3
   13564:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13568:	mov	x0, x19
   1356c:	bl	18c1c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj3EEEbv>
   13570:	tbz	w0, #0, 13580 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2054>
   13574:	ldr	w8, [x19, #80]
   13578:	cmp	w8, #0x20
   1357c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   13580:	mov	w0, #0x67                  	// #103
   13584:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13588:	mov	x0, x19
   1358c:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   13590:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13594:	ldr	w8, [x19, #48]
   13598:	cmp	w8, #0x3
   1359c:	b.eq	15658 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x412c>  // b.none
   135a0:	cmp	w8, #0xa
   135a4:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   135a8:	add	x9, x19, #0x4c
   135ac:	b	1565c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4130>
   135b0:	ldr	x8, [x19]
   135b4:	mov	x0, x19
   135b8:	ldr	x8, [x8, #40]
   135bc:	blr	x8
   135c0:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   135c4:	ldr	w8, [x19, #48]
   135c8:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   135cc:	ldr	x8, [x19, #72]
   135d0:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   135d4:	ldr	w9, [x8]
   135d8:	cmp	w9, #0x1
   135dc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   135e0:	ldr	x8, [x8, #16]
   135e4:	mov	x9, #0xfffffffffffffff0    	// #-16
   135e8:	mov	w10, #0xffff                	// #65535
   135ec:	add	x9, x9, #0x10
   135f0:	lsl	x11, x10, x9
   135f4:	bics	xzr, x8, x11
   135f8:	b.eq	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.none
   135fc:	cmp	x9, #0x20
   13600:	b.ls	135ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x20c0>  // b.plast
   13604:	cmn	x8, #0x1
   13608:	b.eq	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.none
   1360c:	and	x8, x8, #0xffffffff0000ffff
   13610:	mov	x9, #0xffffffff0000ffff    	// #-4294901761
   13614:	b	13918 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x23ec>
   13618:	ldr	w8, [x19, #48]
   1361c:	cmp	w8, #0x4
   13620:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13624:	ldr	w8, [x19, #76]
   13628:	cmp	w8, #0x4
   1362c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13630:	ldr	w8, [x19, #88]
   13634:	cmp	w8, #0x2
   13638:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1363c:	ldr	w8, [x19, #84]
   13640:	cmp	w8, #0x8
   13644:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13648:	b	13eb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2988>
   1364c:	mov	x0, x19
   13650:	bl	17ab8 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIlEEbv>
   13654:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13658:	mov	x0, x19
   1365c:	bl	17de8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv>
   13660:	cbnz	w0, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   13664:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13668:	ldr	w8, [x19, #48]
   1366c:	cmp	w8, #0x3
   13670:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13674:	ldr	w8, [x19, #76]
   13678:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   1367c:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   13680:	ldr	w8, [x19, #72]
   13684:	ldr	x9, [x9]
   13688:	lsr	x10, x8, #3
   1368c:	ldrh	w11, [x9, #918]
   13690:	cmp	w10, w11
   13694:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   13698:	ldr	x9, [x9, #904]
   1369c:	b	14474 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2f48>
   136a0:	ldr	w8, [x19, #48]
   136a4:	cmp	w8, #0x4
   136a8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   136ac:	ldr	w8, [x19, #76]
   136b0:	cmp	w8, #0x1
   136b4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   136b8:	ldr	w8, [x19, #88]
   136bc:	cmp	w8, #0x2
   136c0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   136c4:	ldr	w8, [x19, #84]
   136c8:	cmp	w8, #0x20
   136cc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   136d0:	b	13f1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x29f0>
   136d4:	mov	x0, x19
   136d8:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   136dc:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   136e0:	ldr	w8, [x19, #48]
   136e4:	cmp	w8, #0x3
   136e8:	b.eq	15680 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4154>  // b.none
   136ec:	cmp	w8, #0xa
   136f0:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   136f4:	add	x9, x19, #0x4c
   136f8:	b	15684 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4158>
   136fc:	ldr	x8, [x19]
   13700:	mov	x0, x19
   13704:	ldr	x8, [x8, #40]
   13708:	blr	x8
   1370c:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13710:	ldr	w8, [x19, #48]
   13714:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   13718:	ldr	x8, [x19, #72]
   1371c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   13720:	ldr	w9, [x8]
   13724:	cmp	w9, #0x1
   13728:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1372c:	ldr	x8, [x8, #16]
   13730:	mov	x9, #0xfffffffffffffff0    	// #-16
   13734:	mov	w10, #0xffff                	// #65535
   13738:	add	x9, x9, #0x10
   1373c:	lsl	x11, x10, x9
   13740:	bics	xzr, x8, x11
   13744:	b.eq	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.none
   13748:	cmp	x9, #0x20
   1374c:	b.ls	13738 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x220c>  // b.plast
   13750:	mov	x9, #0xfffffffffffeffff    	// #-65537
   13754:	cmp	x8, x9
   13758:	b.hi	13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>  // b.pmore
   1375c:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13760:	ldr	w8, [x19, #48]
   13764:	cmp	w8, #0x3
   13768:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1376c:	ldr	w8, [x19, #76]
   13770:	cmp	w8, #0x2
   13774:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13778:	mov	x0, x19
   1377c:	bl	18f68 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj42EEEbv>
   13780:	tbz	w0, #0, 13790 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2264>
   13784:	ldr	w8, [x19, #80]
   13788:	cmp	w8, #0x20
   1378c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   13790:	mov	w0, #0x8c                  	// #140
   13794:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13798:	ldr	w8, [x19, #48]
   1379c:	cmp	w8, #0x3
   137a0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   137a4:	ldr	w8, [x19, #76]
   137a8:	cmp	w8, #0x2
   137ac:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   137b0:	mov	x0, x19
   137b4:	bl	18efc <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv>
   137b8:	tbz	w0, #0, 137c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x229c>
   137bc:	ldr	w8, [x19, #80]
   137c0:	cmp	w8, #0x80
   137c4:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   137c8:	mov	w0, #0x6e                  	// #110
   137cc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   137d0:	ldr	w8, [x19, #48]
   137d4:	cmp	w8, #0x3
   137d8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   137dc:	ldr	w8, [x19, #76]
   137e0:	cmp	w8, #0x2
   137e4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   137e8:	mov	x0, x19
   137ec:	bl	18f68 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj42EEEbv>
   137f0:	tbz	w0, #0, 13800 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x22d4>
   137f4:	ldr	w8, [x19, #80]
   137f8:	cmp	w8, #0x10
   137fc:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   13800:	mov	w0, #0x8b                  	// #139
   13804:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13808:	ldr	x8, [x19]
   1380c:	mov	x0, x19
   13810:	ldr	x8, [x8, #40]
   13814:	blr	x8
   13818:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   1381c:	ldr	w8, [x19, #48]
   13820:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   13824:	ldr	x8, [x19, #72]
   13828:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   1382c:	ldr	w9, [x8]
   13830:	cmp	w9, #0x1
   13834:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13838:	ldr	x8, [x8, #16]
   1383c:	cbz	x8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13840:	and	x8, x8, #0xffff0000ffffffff
   13844:	cbz	x8, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   13848:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   1384c:	ldr	x8, [x19]
   13850:	mov	x0, x19
   13854:	ldr	x8, [x8, #40]
   13858:	blr	x8
   1385c:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13860:	ldr	w8, [x19, #48]
   13864:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   13868:	ldr	x8, [x19, #72]
   1386c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   13870:	ldr	w9, [x8]
   13874:	cmp	w9, #0x1
   13878:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1387c:	ldr	x8, [x8, #16]
   13880:	mov	x9, #0xfffffffffffffff0    	// #-16
   13884:	mov	w10, #0xffff                	// #65535
   13888:	add	x9, x9, #0x10
   1388c:	lsl	x11, x10, x9
   13890:	bics	xzr, x8, x11
   13894:	b.eq	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.none
   13898:	cmp	x9, #0x20
   1389c:	b.ls	13888 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x235c>  // b.plast
   138a0:	cmn	x8, #0x1
   138a4:	b.eq	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.none
   138a8:	and	x8, x8, #0xffff0000ffffffff
   138ac:	mov	x9, #0xffff0000ffffffff    	// #-281470681743361
   138b0:	b	13918 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x23ec>
   138b4:	ldr	x8, [x19]
   138b8:	mov	x0, x19
   138bc:	ldr	x8, [x8, #40]
   138c0:	blr	x8
   138c4:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   138c8:	ldr	w8, [x19, #48]
   138cc:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   138d0:	ldr	x8, [x19, #72]
   138d4:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   138d8:	ldr	w9, [x8]
   138dc:	cmp	w9, #0x1
   138e0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   138e4:	ldr	x8, [x8, #16]
   138e8:	mov	x9, #0xfffffffffffffff0    	// #-16
   138ec:	mov	w10, #0xffff                	// #65535
   138f0:	add	x9, x9, #0x10
   138f4:	lsl	x11, x10, x9
   138f8:	bics	xzr, x8, x11
   138fc:	b.eq	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.none
   13900:	cmp	x9, #0x20
   13904:	b.ls	138f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x23c4>  // b.plast
   13908:	cmn	x8, #0x1
   1390c:	b.eq	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.none
   13910:	and	x8, x8, #0xffffffffffff
   13914:	mov	x9, #0xffffffffffff        	// #281474976710655
   13918:	cmp	x8, x9
   1391c:	b.eq	13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>  // b.none
   13920:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13924:	ldr	w8, [x19, #48]
   13928:	cmp	w8, #0x4
   1392c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13930:	ldr	w8, [x19, #76]
   13934:	cmp	w8, #0x4
   13938:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1393c:	ldr	w8, [x19, #88]
   13940:	cmp	w8, #0x2
   13944:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13948:	ldr	w8, [x19, #84]
   1394c:	cmp	w8, #0x10
   13950:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13954:	b	13eb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2988>
   13958:	mov	x0, x19
   1395c:	bl	183cc <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIsEEbv>
   13960:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13964:	mov	x0, x19
   13968:	bl	17bfc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv>
   1396c:	cbnz	w0, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   13970:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13974:	ldr	w8, [x19, #48]
   13978:	cmp	w8, #0x4
   1397c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13980:	ldr	w8, [x19, #76]
   13984:	cmp	w8, #0x3
   13988:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1398c:	ldr	w8, [x19, #88]
   13990:	cmp	w8, #0x2
   13994:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13998:	ldr	w8, [x19, #84]
   1399c:	cmp	w8, #0x40
   139a0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   139a4:	b	13eb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2988>
   139a8:	ldr	x8, [x19]
   139ac:	mov	x0, x19
   139b0:	ldr	x8, [x8, #40]
   139b4:	blr	x8
   139b8:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   139bc:	ldr	w8, [x19, #48]
   139c0:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   139c4:	ldr	x8, [x19, #72]
   139c8:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   139cc:	ldr	w9, [x8]
   139d0:	cmp	w9, #0x1
   139d4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   139d8:	ldr	x8, [x8, #16]
   139dc:	mvn	w9, w8
   139e0:	tst	x9, #0xffff0000
   139e4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   139e8:	and	x8, x8, #0xffffffff0000ffff
   139ec:	cbnz	x8, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   139f0:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   139f4:	ldr	w8, [x19, #48]
   139f8:	cmp	w8, #0xd
   139fc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13a00:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   13a04:	mov	x0, x19
   13a08:	bl	184c0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1ELj3EEEN4llvm19DiagnosticPredicateEv>
   13a0c:	cbz	w0, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   13a10:	cmp	w0, #0x1
   13a14:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13a18:	mov	w0, #0x5b                  	// #91
   13a1c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13a20:	ldr	x8, [x19]
   13a24:	mov	x0, x19
   13a28:	ldr	x8, [x8, #40]
   13a2c:	blr	x8
   13a30:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13a34:	ldr	w8, [x19, #48]
   13a38:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   13a3c:	ldr	x8, [x19, #72]
   13a40:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   13a44:	ldr	w9, [x8]
   13a48:	cmp	w9, #0x1
   13a4c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13a50:	ldr	x8, [x8, #16]
   13a54:	cbz	x8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13a58:	and	x8, x8, #0xffffffffffff
   13a5c:	cbz	x8, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   13a60:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13a64:	ldr	x8, [x19]
   13a68:	mov	x0, x19
   13a6c:	ldr	x8, [x8, #40]
   13a70:	blr	x8
   13a74:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13a78:	ldr	w8, [x19, #48]
   13a7c:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   13a80:	ldr	x8, [x19, #72]
   13a84:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   13a88:	ldr	w9, [x8]
   13a8c:	cmp	w9, #0x1
   13a90:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13a94:	ldr	x8, [x8, #16]
   13a98:	tst	x8, #0xffffffff
   13a9c:	b.eq	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.none
   13aa0:	and	x8, x8, #0xffff
   13aa4:	cbz	x8, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   13aa8:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13aac:	ldr	x8, [x19]
   13ab0:	mov	x0, x19
   13ab4:	ldr	x8, [x8, #40]
   13ab8:	blr	x8
   13abc:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13ac0:	ldr	w8, [x19, #48]
   13ac4:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   13ac8:	ldr	x8, [x19, #72]
   13acc:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   13ad0:	ldr	w9, [x8]
   13ad4:	cmp	w9, #0x1
   13ad8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13adc:	ldr	x8, [x8, #16]
   13ae0:	cbz	x8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13ae4:	and	x8, x8, #0xffffffff0000ffff
   13ae8:	cbz	x8, 13ebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2990>
   13aec:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13af0:	ldr	x8, [x19]
   13af4:	mov	x0, x19
   13af8:	ldr	x8, [x8, #40]
   13afc:	blr	x8
   13b00:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13b04:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   13b08:	mov	w1, #0x1                   	// #1
   13b0c:	mov	x0, x19
   13b10:	bl	18c88 <_ZNK12_GLOBAL__N_114AArch64Operand11isImmScaledILi6ELi1EEEN4llvm19DiagnosticPredicateEb>
   13b14:	cmp	w0, #0x0
   13b18:	mov	w8, #0x43                  	// #67
   13b1c:	mov	w9, #0x4                   	// #4
   13b20:	csel	w0, w9, w8, eq  // eq = none
   13b24:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13b28:	ldr	w8, [x19, #48]
   13b2c:	cmp	w8, #0x3
   13b30:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13b34:	ldr	w8, [x19, #76]
   13b38:	cmp	w8, #0x3
   13b3c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13b40:	mov	x0, x19
   13b44:	bl	18c1c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj3EEEbv>
   13b48:	tbz	w0, #0, 13b58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x262c>
   13b4c:	ldr	w8, [x19, #80]
   13b50:	cmp	w8, #0x40
   13b54:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   13b58:	mov	w0, #0x65                  	// #101
   13b5c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13b60:	mov	x0, x19
   13b64:	bl	18034 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi2EEEbv>
   13b68:	tst	w0, #0x1
   13b6c:	mov	w8, #0x33                  	// #51
   13b70:	b	1196c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x440>
   13b74:	mov	x0, x19
   13b78:	bl	17ed8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi16EEEbv>
   13b7c:	tst	w0, #0x1
   13b80:	mov	w8, #0x2b                  	// #43
   13b84:	b	1196c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x440>
   13b88:	ldr	w8, [x19, #48]
   13b8c:	cmp	w8, #0x3
   13b90:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13b94:	ldr	w8, [x19, #76]
   13b98:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13b9c:	ldr	x8, [x19]
   13ba0:	mov	x0, x19
   13ba4:	ldr	x8, [x8, #56]
   13ba8:	blr	x8
   13bac:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   13bb0:	ldr	x8, [x8]
   13bb4:	mov	w9, w0
   13bb8:	lsr	x9, x9, #3
   13bbc:	ldrh	w10, [x8, #534]
   13bc0:	cmp	w9, w10
   13bc4:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   13bc8:	ldr	x8, [x8, #520]
   13bcc:	b	14510 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2fe4>
   13bd0:	ldr	w8, [x19, #48]
   13bd4:	cmp	w8, #0x4
   13bd8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13bdc:	ldr	w8, [x19, #76]
   13be0:	cmp	w8, #0x1
   13be4:	b.eq	14b7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3650>  // b.none
   13be8:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13bec:	ldr	w8, [x19, #48]
   13bf0:	cmp	w8, #0x4
   13bf4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13bf8:	ldr	w8, [x19, #76]
   13bfc:	cmp	w8, #0x3
   13c00:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13c04:	b	14aa0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3574>
   13c08:	ldr	w8, [x19, #48]
   13c0c:	cmp	w8, #0x4
   13c10:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13c14:	ldr	w8, [x19, #76]
   13c18:	cmp	w8, #0x3
   13c1c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13c20:	b	142a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2d78>
   13c24:	mov	x0, x19
   13c28:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   13c2c:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13c30:	ldr	w8, [x19, #48]
   13c34:	cmp	w8, #0x3
   13c38:	b.eq	156a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4178>  // b.none
   13c3c:	cmp	w8, #0xa
   13c40:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   13c44:	add	x9, x19, #0x4c
   13c48:	b	156a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x417c>
   13c4c:	mov	x0, x19
   13c50:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   13c54:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13c58:	ldr	w8, [x19, #48]
   13c5c:	cmp	w8, #0x3
   13c60:	b.eq	156b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4188>  // b.none
   13c64:	cmp	w8, #0xa
   13c68:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   13c6c:	add	x9, x19, #0x4c
   13c70:	b	156b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x418c>
   13c74:	ldr	w8, [x19, #48]
   13c78:	cmp	w8, #0x4
   13c7c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13c80:	ldr	w8, [x19, #76]
   13c84:	cmp	w8, #0x2
   13c88:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13c8c:	ldr	w8, [x19, #88]
   13c90:	cmp	w8, #0x1
   13c94:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13c98:	ldr	w8, [x19, #84]
   13c9c:	cmp	w8, #0x40
   13ca0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13ca4:	ldr	w8, [x19, #80]
   13ca8:	b	14170 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c44>
   13cac:	ldr	x8, [x19]
   13cb0:	mov	x0, x19
   13cb4:	ldr	x8, [x8, #40]
   13cb8:	blr	x8
   13cbc:	tbz	w0, #0, 14fb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a88>
   13cc0:	ldr	x8, [x19, #72]
   13cc4:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   13cc8:	ldr	w9, [x8]
   13ccc:	mov	w0, #0x4                   	// #4
   13cd0:	cmp	w9, #0x1
   13cd4:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   13cd8:	ldr	x8, [x8, #16]
   13cdc:	mov	x9, #0x100000000           	// #4294967296
   13ce0:	mov	x10, #0x1ffff0000           	// #8589869056
   13ce4:	movk	x10, #0xf001
   13ce8:	tst	x8, #0xfff
   13cec:	add	x8, x8, x9
   13cf0:	ccmp	x8, x10, #0x2, eq  // eq = none
   13cf4:	mov	w8, #0x29                  	// #41
   13cf8:	csel	w0, w0, w8, cc  // cc = lo, ul, last
   13cfc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13d00:	ldr	w8, [x19, #48]
   13d04:	cmp	w8, #0x4
   13d08:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d0c:	ldr	w8, [x19, #76]
   13d10:	cmp	w8, #0x3
   13d14:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d18:	ldr	w8, [x19, #88]
   13d1c:	cmp	w8, #0x1
   13d20:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d24:	b	14840 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3314>
   13d28:	ldr	w8, [x19, #48]
   13d2c:	cmp	w8, #0x4
   13d30:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d34:	ldr	w8, [x19, #76]
   13d38:	cmp	w8, #0x2
   13d3c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d40:	ldr	w8, [x19, #88]
   13d44:	cmp	w8, #0x1
   13d48:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d4c:	b	14aac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3580>
   13d50:	ldr	w8, [x19, #48]
   13d54:	cmp	w8, #0x4
   13d58:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d5c:	ldr	w8, [x19, #76]
   13d60:	cmp	w8, #0x3
   13d64:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d68:	ldr	w8, [x19, #88]
   13d6c:	cmp	w8, #0x1
   13d70:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d74:	b	14718 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x31ec>
   13d78:	ldr	w8, [x19, #48]
   13d7c:	cmp	w8, #0x4
   13d80:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d84:	ldr	w8, [x19, #76]
   13d88:	cmp	w8, #0x2
   13d8c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d90:	ldr	w8, [x19, #88]
   13d94:	cmp	w8, #0x2
   13d98:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13d9c:	ldr	w8, [x19, #84]
   13da0:	cmp	w8, #0x8
   13da4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13da8:	b	13f1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x29f0>
   13dac:	ldr	w8, [x19, #48]
   13db0:	cmp	w8, #0x3
   13db4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13db8:	ldr	w8, [x19, #76]
   13dbc:	cmp	w8, #0x2
   13dc0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13dc4:	mov	x0, x19
   13dc8:	bl	18fd4 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj41EEEbv>
   13dcc:	tbz	w0, #0, 13ddc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x28b0>
   13dd0:	ldr	w8, [x19, #80]
   13dd4:	cmp	w8, #0x40
   13dd8:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   13ddc:	mov	w0, #0x90                  	// #144
   13de0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13de4:	ldr	w8, [x19, #48]
   13de8:	cmp	w8, #0x4
   13dec:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13df0:	ldr	w8, [x19, #76]
   13df4:	cmp	w8, #0x1
   13df8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13dfc:	ldr	w8, [x19, #88]
   13e00:	cmp	w8, #0x2
   13e04:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13e08:	ldr	w8, [x19, #84]
   13e0c:	cmp	w8, #0x10
   13e10:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13e14:	b	13f1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x29f0>
   13e18:	ldr	w8, [x19, #48]
   13e1c:	cmp	w8, #0x3
   13e20:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13e24:	ldr	w8, [x19, #76]
   13e28:	cmp	w8, #0x2
   13e2c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13e30:	mov	x0, x19
   13e34:	bl	18fd4 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj41EEEbv>
   13e38:	tbz	w0, #0, 13e48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x291c>
   13e3c:	ldr	w8, [x19, #80]
   13e40:	cmp	w8, #0x10
   13e44:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   13e48:	mov	w0, #0x8e                  	// #142
   13e4c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13e50:	ldr	w8, [x19, #48]
   13e54:	cmp	w8, #0x4
   13e58:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13e5c:	ldr	w8, [x19, #76]
   13e60:	cmp	w8, #0x4
   13e64:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13e68:	ldr	w8, [x19, #88]
   13e6c:	cmp	w8, #0x2
   13e70:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13e74:	ldr	w8, [x19, #84]
   13e78:	cmp	w8, #0x40
   13e7c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13e80:	b	13eb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2988>
   13e84:	ldr	w8, [x19, #48]
   13e88:	cmp	w8, #0x4
   13e8c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13e90:	ldr	w8, [x19, #76]
   13e94:	cmp	w8, #0x4
   13e98:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13e9c:	ldr	w8, [x19, #88]
   13ea0:	cmp	w8, #0x2
   13ea4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13ea8:	ldr	w8, [x19, #84]
   13eac:	cmp	w8, #0x20
   13eb0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13eb4:	ldr	w8, [x19, #80]
   13eb8:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13ebc:	mov	w0, #0x4                   	// #4
   13ec0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13ec4:	ldr	w8, [x19, #48]
   13ec8:	cmp	w8, #0x4
   13ecc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13ed0:	ldr	w8, [x19, #76]
   13ed4:	cmp	w8, #0x2
   13ed8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13edc:	ldr	w8, [x19, #88]
   13ee0:	cmp	w8, #0x1
   13ee4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13ee8:	b	14b88 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x365c>
   13eec:	ldr	w8, [x19, #48]
   13ef0:	cmp	w8, #0x4
   13ef4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13ef8:	ldr	w8, [x19, #76]
   13efc:	cmp	w8, #0x2
   13f00:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13f04:	ldr	w8, [x19, #88]
   13f08:	cmp	w8, #0x2
   13f0c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13f10:	ldr	w8, [x19, #84]
   13f14:	cmp	w8, #0x10
   13f18:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13f1c:	ldr	w8, [x19, #80]
   13f20:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   13f24:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   13f28:	ldr	x8, [x19]
   13f2c:	mov	x0, x19
   13f30:	ldr	x8, [x8, #40]
   13f34:	blr	x8
   13f38:	tbz	w0, #0, 15220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3cf4>
   13f3c:	ldr	w8, [x19, #48]
   13f40:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   13f44:	ldr	x8, [x19, #72]
   13f48:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   13f4c:	ldr	w10, [x8]
   13f50:	mov	w9, #0x1e                  	// #30
   13f54:	mov	w0, #0x1e                  	// #30
   13f58:	cmp	w10, #0x1
   13f5c:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   13f60:	ldr	x8, [x8, #16]
   13f64:	cmp	x8, #0x10, lsl #12
   13f68:	b	14b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x35dc>
   13f6c:	ldr	w8, [x19, #48]
   13f70:	cmp	w8, #0x3
   13f74:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13f78:	ldr	w8, [x19, #76]
   13f7c:	cmp	w8, #0x2
   13f80:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13f84:	mov	x0, x19
   13f88:	bl	18efc <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv>
   13f8c:	tbz	w0, #0, 13f98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2a6c>
   13f90:	ldr	w8, [x19, #80]
   13f94:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   13f98:	mov	w0, #0x6d                  	// #109
   13f9c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   13fa0:	ldr	x8, [x19]
   13fa4:	mov	x0, x19
   13fa8:	ldr	x8, [x8, #40]
   13fac:	blr	x8
   13fb0:	tbz	w0, #0, 15228 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3cfc>
   13fb4:	ldr	w8, [x19, #48]
   13fb8:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   13fbc:	ldr	x8, [x19, #72]
   13fc0:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   13fc4:	ldr	w9, [x8]
   13fc8:	mov	w0, #0x1f                  	// #31
   13fcc:	cmp	w9, #0x1
   13fd0:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   13fd4:	ldr	x8, [x8, #16]
   13fd8:	cmp	x8, #0x8
   13fdc:	b	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c18>
   13fe0:	ldr	w8, [x19, #48]
   13fe4:	cmp	w8, #0x4
   13fe8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13fec:	ldr	w8, [x19, #76]
   13ff0:	cmp	w8, #0x1
   13ff4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   13ff8:	b	14164 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c38>
   13ffc:	ldr	w8, [x19, #48]
   14000:	cmp	w8, #0x1
   14004:	b.ne	15230 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3d04>  // b.any
   14008:	ldr	w8, [x19, #80]
   1400c:	ldr	x0, [x19, #72]
   14010:	cbz	w8, 15944 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4418>
   14014:	cmp	w8, #0xc
   14018:	b.eq	15944 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4418>  // b.none
   1401c:	b	159e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44b4>
   14020:	ldr	w8, [x19, #48]
   14024:	cmp	w8, #0x4
   14028:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1402c:	ldr	w8, [x19, #76]
   14030:	cmp	w8, #0x2
   14034:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14038:	ldr	w8, [x19, #88]
   1403c:	cmp	w8, #0x1
   14040:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14044:	ldr	w8, [x19, #84]
   14048:	cmp	w8, #0x20
   1404c:	b.eq	14ab8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x358c>  // b.none
   14050:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14054:	ldr	w8, [x19, #48]
   14058:	cmp	w8, #0x4
   1405c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14060:	ldr	w8, [x19, #76]
   14064:	cmp	w8, #0x1
   14068:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1406c:	ldr	w8, [x19, #88]
   14070:	cmp	w8, #0x1
   14074:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14078:	ldr	w8, [x19, #84]
   1407c:	cmp	w8, #0x10
   14080:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14084:	ldr	w8, [x19, #80]
   14088:	b	148e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x33bc>
   1408c:	mov	x0, x19
   14090:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   14094:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14098:	ldr	w8, [x19, #48]
   1409c:	cmp	w8, #0x3
   140a0:	b.eq	156e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41bc>  // b.none
   140a4:	cmp	w8, #0xa
   140a8:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   140ac:	add	x9, x19, #0x4c
   140b0:	b	156ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41c0>
   140b4:	ldr	w8, [x19, #48]
   140b8:	cmp	w8, #0x3
   140bc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   140c0:	ldr	w8, [x19, #76]
   140c4:	cmp	w8, #0x2
   140c8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   140cc:	mov	x0, x19
   140d0:	bl	18efc <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv>
   140d4:	tbz	w0, #0, 140e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2bb8>
   140d8:	ldr	w8, [x19, #80]
   140dc:	cmp	w8, #0x8
   140e0:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   140e4:	mov	w0, #0x8a                  	// #138
   140e8:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   140ec:	mov	x0, x19
   140f0:	bl	17bfc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv>
   140f4:	cbz	w0, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   140f8:	cmp	w0, #0x1
   140fc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14100:	mov	w0, #0x56                  	// #86
   14104:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14108:	ldr	x8, [x19]
   1410c:	mov	x0, x19
   14110:	ldr	x8, [x8, #40]
   14114:	blr	x8
   14118:	tbz	w0, #0, 14cac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3780>
   1411c:	ldr	w8, [x19, #48]
   14120:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   14124:	ldr	x8, [x19, #72]
   14128:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   1412c:	ldr	w9, [x8]
   14130:	mov	w0, #0x1d                  	// #29
   14134:	cmp	w9, #0x1
   14138:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   1413c:	ldr	x8, [x8, #16]
   14140:	and	x8, x8, #0xffffffffffffffe0
   14144:	cmp	x8, #0x20
   14148:	b	14f50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a24>
   1414c:	ldr	w8, [x19, #48]
   14150:	cmp	w8, #0x4
   14154:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14158:	ldr	w8, [x19, #76]
   1415c:	cmp	w8, #0x3
   14160:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14164:	ldr	w8, [x19, #80]
   14168:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   1416c:	ldr	w8, [x19, #88]
   14170:	cmp	w8, #0x1
   14174:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14178:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   1417c:	ldr	w8, [x19, #48]
   14180:	cmp	w8, #0x3
   14184:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14188:	ldr	w8, [x19, #76]
   1418c:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14190:	ldr	x8, [x19]
   14194:	mov	x0, x19
   14198:	ldr	x8, [x8, #56]
   1419c:	blr	x8
   141a0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   141a4:	ldr	x8, [x8]
   141a8:	mov	w9, w0
   141ac:	lsr	x9, x9, #3
   141b0:	ldrh	w10, [x8, #54]
   141b4:	cmp	w9, w10
   141b8:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   141bc:	ldr	x8, [x8, #40]
   141c0:	b	14510 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2fe4>
   141c4:	ldr	w8, [x19, #48]
   141c8:	cmp	w8, #0x3
   141cc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   141d0:	ldr	w8, [x19, #76]
   141d4:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   141d8:	ldr	x8, [x19]
   141dc:	mov	x0, x19
   141e0:	ldr	x8, [x8, #56]
   141e4:	blr	x8
   141e8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   141ec:	ldr	x8, [x8]
   141f0:	mov	w9, w0
   141f4:	lsr	x9, x9, #3
   141f8:	ldrh	w10, [x8, #182]
   141fc:	cmp	w9, w10
   14200:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   14204:	ldr	x8, [x8, #168]
   14208:	b	14510 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2fe4>
   1420c:	ldr	x8, [x19]
   14210:	mov	x0, x19
   14214:	ldr	x8, [x8, #40]
   14218:	blr	x8
   1421c:	tbz	w0, #0, 14fb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a88>
   14220:	ldr	w8, [x19, #48]
   14224:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   14228:	ldr	x8, [x19, #72]
   1422c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   14230:	ldr	w9, [x8]
   14234:	mov	w0, #0x4                   	// #4
   14238:	cmp	w9, #0x1
   1423c:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   14240:	ldr	x8, [x8, #16]
   14244:	mov	w9, #0x8000000             	// #134217728
   14248:	mov	w10, #0xfffd                	// #65533
   1424c:	movk	w10, #0xfff, lsl #16
   14250:	and	x11, x8, #0x3
   14254:	add	x8, x8, x9
   14258:	cmp	x8, x10
   1425c:	ccmp	x11, #0x0, #0x0, cc  // cc = lo, ul, last
   14260:	b	14fa8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a7c>
   14264:	mov	x0, x19
   14268:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   1426c:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14270:	ldr	w8, [x19, #48]
   14274:	cmp	w8, #0x3
   14278:	b.eq	15790 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4264>  // b.none
   1427c:	cmp	w8, #0xa
   14280:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   14284:	add	x9, x19, #0x4c
   14288:	b	15794 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4268>
   1428c:	ldr	w8, [x19, #48]
   14290:	cmp	w8, #0x4
   14294:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14298:	ldr	w8, [x19, #76]
   1429c:	cmp	w8, #0x1
   142a0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   142a4:	ldr	w8, [x19, #88]
   142a8:	cmp	w8, #0x1
   142ac:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   142b0:	ldr	w8, [x19, #84]
   142b4:	cmp	w8, #0x40
   142b8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   142bc:	b	1467c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3150>
   142c0:	mov	x0, x19
   142c4:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   142c8:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   142cc:	ldr	w8, [x19, #48]
   142d0:	cmp	w8, #0x3
   142d4:	b.eq	157c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4298>  // b.none
   142d8:	cmp	w8, #0xa
   142dc:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   142e0:	add	x9, x19, #0x4c
   142e4:	b	157c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x429c>
   142e8:	mov	x0, x19
   142ec:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   142f0:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   142f4:	ldr	w8, [x19, #48]
   142f8:	cmp	w8, #0x3
   142fc:	b.eq	157f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x42cc>  // b.none
   14300:	cmp	w8, #0xa
   14304:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   14308:	add	x9, x19, #0x4c
   1430c:	b	157fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x42d0>
   14310:	ldr	w8, [x19, #48]
   14314:	cmp	w8, #0x4
   14318:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1431c:	ldr	w8, [x19, #76]
   14320:	cmp	w8, #0x2
   14324:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14328:	ldr	w8, [x19, #88]
   1432c:	cmp	w8, #0x1
   14330:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14334:	b	14718 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x31ec>
   14338:	ldr	w8, [x19, #48]
   1433c:	cmp	w8, #0x3
   14340:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14344:	ldr	w8, [x19, #76]
   14348:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   1434c:	ldr	x8, [x19]
   14350:	mov	x0, x19
   14354:	ldr	x8, [x8, #56]
   14358:	blr	x8
   1435c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   14360:	ldr	x8, [x8]
   14364:	mov	w9, w0
   14368:	lsr	x9, x9, #3
   1436c:	ldrh	w10, [x8, #182]
   14370:	cmp	w9, w10
   14374:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   14378:	ldr	x8, [x8, #168]
   1437c:	b	14510 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2fe4>
   14380:	ldr	w8, [x19, #48]
   14384:	cmp	w8, #0x5
   14388:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1438c:	ldr	w8, [x19, #72]
   14390:	mov	w9, #0x28                  	// #40
   14394:	cmp	w8, #0x1
   14398:	b	14eac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3980>
   1439c:	mov	x0, x19
   143a0:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   143a4:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   143a8:	ldr	w8, [x19, #48]
   143ac:	cmp	w8, #0x3
   143b0:	b.eq	1582c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4300>  // b.none
   143b4:	cmp	w8, #0xa
   143b8:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   143bc:	add	x9, x19, #0x4c
   143c0:	b	15830 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4304>
   143c4:	mov	x0, x19
   143c8:	bl	17b5c <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv>
   143cc:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   143d0:	mov	x0, x19
   143d4:	bl	180e8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi4EEEbv>
   143d8:	tbnz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   143dc:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   143e0:	ldr	w8, [x19, #48]
   143e4:	cmp	w8, #0x5
   143e8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   143ec:	ldr	w8, [x19, #72]
   143f0:	mov	w9, #0x24                  	// #36
   143f4:	cmp	w8, #0x2
   143f8:	b	14b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x35dc>
   143fc:	mov	x0, x19
   14400:	bl	182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>
   14404:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14408:	ldr	w8, [x19, #48]
   1440c:	cmp	w8, #0x3
   14410:	b.eq	15854 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4328>  // b.none
   14414:	cmp	w8, #0xa
   14418:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   1441c:	add	x9, x19, #0x4c
   14420:	b	15858 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x432c>
   14424:	ldr	w8, [x19, #48]
   14428:	cmp	w8, #0x4
   1442c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14430:	ldr	w8, [x19, #76]
   14434:	cmp	w8, #0x4
   14438:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1443c:	b	14aa0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3574>
   14440:	ldr	w8, [x19, #48]
   14444:	cmp	w8, #0x3
   14448:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1444c:	ldr	w8, [x19, #76]
   14450:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14454:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   14458:	ldr	w8, [x19, #72]
   1445c:	ldr	x9, [x9]
   14460:	lsr	x10, x8, #3
   14464:	ldrh	w11, [x9, #406]
   14468:	cmp	w10, w11
   1446c:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   14470:	ldr	x9, [x9, #392]
   14474:	and	w8, w8, #0x7
   14478:	ldrb	w9, [x9, x10]
   1447c:	b	1518c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c60>
   14480:	ldr	w8, [x19, #48]
   14484:	cmp	w8, #0x1
   14488:	b.ne	15258 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3d2c>  // b.any
   1448c:	add	x8, sp, #0x20
   14490:	mov	x0, x19
   14494:	bl	18d4c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   14498:	ldrb	w8, [sp, #48]
   1449c:	cbz	w8, 144c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2f98>
   144a0:	ldr	x8, [sp, #32]
   144a4:	ldr	w9, [sp, #40]
   144a8:	strb	wzr, [sp, #48]
   144ac:	lsl	x8, x8, x9
   144b0:	cmp	x8, #0x100
   144b4:	b.cc	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.lo, b.ul, b.last
   144b8:	and	x9, x8, #0xff00
   144bc:	cmp	x9, x8
   144c0:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   144c4:	mov	w0, #0x53                  	// #83
   144c8:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   144cc:	ldr	w8, [x19, #48]
   144d0:	cmp	w8, #0x3
   144d4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   144d8:	ldr	w8, [x19, #76]
   144dc:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   144e0:	ldr	x8, [x19]
   144e4:	mov	x0, x19
   144e8:	ldr	x8, [x8, #56]
   144ec:	blr	x8
   144f0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   144f4:	ldr	x8, [x8]
   144f8:	mov	w9, w0
   144fc:	lsr	x9, x9, #3
   14500:	ldrh	w10, [x8, #598]
   14504:	cmp	w9, w10
   14508:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   1450c:	ldr	x8, [x8, #584]
   14510:	ldrb	w8, [x8, x9]
   14514:	and	w9, w0, #0x7
   14518:	lsr	w8, w8, w9
   1451c:	tbnz	w8, #0, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   14520:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14524:	ldr	w8, [x19, #48]
   14528:	cmp	w8, #0x5
   1452c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14530:	ldr	w8, [x19, #72]
   14534:	mov	w9, #0x27                  	// #39
   14538:	b	14888 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x335c>
   1453c:	ldr	w8, [x19, #48]
   14540:	cmp	w8, #0x1
   14544:	b.ne	1528c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3d60>  // b.any
   14548:	add	x8, sp, #0x20
   1454c:	mov	x0, x19
   14550:	bl	18d4c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   14554:	ldrb	w8, [sp, #48]
   14558:	cbz	w8, 14580 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3054>
   1455c:	ldr	x8, [sp, #32]
   14560:	ldr	w9, [sp, #40]
   14564:	strb	wzr, [sp, #48]
   14568:	lsl	x8, x8, x9
   1456c:	cmp	x8, #0x100
   14570:	b.cc	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.lo, b.ul, b.last
   14574:	and	x9, x8, #0xff00
   14578:	cmp	x9, x8
   1457c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   14580:	mov	w0, #0x52                  	// #82
   14584:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14588:	ldr	w8, [x19, #48]
   1458c:	cmp	w8, #0x4
   14590:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14594:	ldr	w8, [x19, #76]
   14598:	cmp	w8, #0x1
   1459c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   145a0:	ldr	w8, [x19, #88]
   145a4:	cmp	w8, #0x1
   145a8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   145ac:	ldr	w8, [x19, #84]
   145b0:	cmp	w8, #0x40
   145b4:	b.eq	1484c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3320>  // b.none
   145b8:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   145bc:	mov	x0, x19
   145c0:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   145c4:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   145c8:	ldr	w8, [x19, #48]
   145cc:	cmp	w8, #0x3
   145d0:	b.eq	15888 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x435c>  // b.none
   145d4:	cmp	w8, #0xa
   145d8:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   145dc:	add	x9, x19, #0x4c
   145e0:	b	1588c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4360>
   145e4:	mov	x0, x19
   145e8:	bl	18250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>
   145ec:	cbnz	w0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   145f0:	ldr	w8, [x19, #48]
   145f4:	cmp	w8, #0x3
   145f8:	b.eq	158ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4380>  // b.none
   145fc:	cmp	w8, #0xa
   14600:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   14604:	add	x9, x19, #0x4c
   14608:	b	158b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4384>
   1460c:	ldr	w8, [x19, #48]
   14610:	cmp	w8, #0xa
   14614:	b.ne	15a10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44e4>  // b.any
   14618:	ldr	w9, [x19, #72]
   1461c:	sub	w8, w9, #0x5
   14620:	cmp	w8, #0x8
   14624:	b.cs	15a0c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44e0>  // b.hs, b.nlast
   14628:	ldr	w9, [x19, #76]
   1462c:	cmp	w9, #0x4
   14630:	b.hi	15a10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44e4>  // b.pmore
   14634:	cmp	w8, #0x7
   14638:	b.cs	15a10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44e4>  // b.hs, b.nlast
   1463c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14640:	add	x9, x9, #0x0
   14644:	ldr	w0, [x9, w8, sxtw #2]
   14648:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   1464c:	ldr	w8, [x19, #48]
   14650:	cmp	w8, #0x4
   14654:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14658:	ldr	w8, [x19, #76]
   1465c:	cmp	w8, #0x1
   14660:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14664:	ldr	w8, [x19, #88]
   14668:	cmp	w8, #0x1
   1466c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14670:	ldr	w8, [x19, #84]
   14674:	cmp	w8, #0x20
   14678:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1467c:	ldr	w8, [x19, #80]
   14680:	cmp	w8, #0x2
   14684:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   14688:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   1468c:	ldr	w8, [x19, #48]
   14690:	cmp	w8, #0x1
   14694:	b.ne	152c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3d94>  // b.any
   14698:	add	x8, sp, #0x20
   1469c:	mov	x0, x19
   146a0:	bl	18d4c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   146a4:	ldrb	w8, [sp, #48]
   146a8:	cbz	w8, 146d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x31a4>
   146ac:	ldr	w8, [sp, #40]
   146b0:	cbnz	w8, 146cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x31a0>
   146b4:	ldr	x8, [sp, #32]
   146b8:	cmp	x8, #0x100
   146bc:	b.cc	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.lo, b.ul, b.last
   146c0:	add	x8, x8, #0x80
   146c4:	cmp	x8, #0x100
   146c8:	b.cc	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.lo, b.ul, b.last
   146cc:	strb	wzr, [sp, #48]
   146d0:	mov	w0, #0x59                  	// #89
   146d4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   146d8:	mov	x0, x19
   146dc:	bl	17de8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv>
   146e0:	cbz	w0, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   146e4:	cmp	w0, #0x1
   146e8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   146ec:	mov	w0, #0x58                  	// #88
   146f0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   146f4:	ldr	w8, [x19, #48]
   146f8:	cmp	w8, #0x4
   146fc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14700:	ldr	w8, [x19, #76]
   14704:	cmp	w8, #0x4
   14708:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1470c:	ldr	w8, [x19, #88]
   14710:	cmp	w8, #0x1
   14714:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14718:	ldr	w8, [x19, #84]
   1471c:	cmp	w8, #0x20
   14720:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14724:	b	1484c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3320>
   14728:	ldr	w8, [x19, #48]
   1472c:	cmp	w8, #0x1
   14730:	b.ne	152f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3dc8>  // b.any
   14734:	add	x8, sp, #0x20
   14738:	mov	x0, x19
   1473c:	bl	18d4c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   14740:	ldrb	w8, [sp, #48]
   14744:	cbz	w8, 14760 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3234>
   14748:	ldr	w8, [sp, #40]
   1474c:	cbnz	w8, 1475c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3230>
   14750:	ldr	x8, [sp, #32]
   14754:	cmp	x8, #0x100
   14758:	b.cc	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.lo, b.ul, b.last
   1475c:	strb	wzr, [sp, #48]
   14760:	mov	w0, #0x55                  	// #85
   14764:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14768:	mov	x0, x19
   1476c:	bl	17f8c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi1EEEbv>
   14770:	tst	w0, #0x1
   14774:	mov	w8, #0x2a                  	// #42
   14778:	b	1196c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x440>
   1477c:	ldr	x8, [x19]
   14780:	mov	x0, x19
   14784:	ldr	x8, [x8, #40]
   14788:	blr	x8
   1478c:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14790:	ldr	w8, [x19, #48]
   14794:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   14798:	ldr	x8, [x19, #72]
   1479c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   147a0:	ldr	w9, [x8]
   147a4:	cmp	w9, #0x1
   147a8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   147ac:	ldr	x8, [x8, #16]
   147b0:	mov	w9, #0x4                   	// #4
   147b4:	cmp	x8, #0x7e
   147b8:	and	x8, x8, #0x1
   147bc:	cset	w10, hi  // hi = pmore
   147c0:	orr	x8, x8, x10
   147c4:	cmp	x8, #0x1
   147c8:	mov	w8, #0x36                  	// #54
   147cc:	b	14eb0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3984>
   147d0:	ldr	w8, [x19, #48]
   147d4:	cmp	w8, #0x1
   147d8:	b.ne	15328 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3dfc>  // b.any
   147dc:	add	x8, sp, #0x20
   147e0:	mov	x0, x19
   147e4:	bl	18d4c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   147e8:	ldrb	w8, [sp, #48]
   147ec:	cbz	w8, 14814 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x32e8>
   147f0:	ldr	x8, [sp, #32]
   147f4:	ldr	w9, [sp, #40]
   147f8:	strb	wzr, [sp, #48]
   147fc:	lsl	x8, x8, x9
   14800:	cmp	x8, #0x100
   14804:	b.cc	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.lo, b.ul, b.last
   14808:	and	x9, x8, #0xff00
   1480c:	cmp	x9, x8
   14810:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   14814:	mov	w0, #0x54                  	// #84
   14818:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   1481c:	ldr	w8, [x19, #48]
   14820:	cmp	w8, #0x4
   14824:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14828:	ldr	w8, [x19, #76]
   1482c:	cmp	w8, #0x1
   14830:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14834:	ldr	w8, [x19, #88]
   14838:	cmp	w8, #0x1
   1483c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14840:	ldr	w8, [x19, #84]
   14844:	cmp	w8, #0x10
   14848:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1484c:	ldr	w8, [x19, #80]
   14850:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14854:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   14858:	ldr	w8, [x19, #48]
   1485c:	cmp	w8, #0x5
   14860:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14864:	ldr	w8, [x19, #72]
   14868:	mov	w9, #0x26                  	// #38
   1486c:	cmp	w8, #0x4
   14870:	b	14b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x35dc>
   14874:	ldr	w8, [x19, #48]
   14878:	cmp	w8, #0x5
   1487c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14880:	ldr	w8, [x19, #72]
   14884:	mov	w9, #0x61                  	// #97
   14888:	cmp	w8, #0x8
   1488c:	b	14b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x35dc>
   14890:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   14894:	add	x8, x8, #0x0
   14898:	ldr	q0, [x8]
   1489c:	ldur	q1, [x8, #12]
   148a0:	add	x1, sp, #0x20
   148a4:	mov	w2, #0x7                   	// #7
   148a8:	str	q0, [sp, #32]
   148ac:	stur	q1, [sp, #44]
   148b0:	mov	x0, x19
   148b4:	bl	18ab8 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE>
   148b8:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   148bc:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   148c0:	ldr	w8, [x19, #48]
   148c4:	cmp	w8, #0xa
   148c8:	b.ne	1535c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e30>  // b.any
   148cc:	ldr	w8, [x19, #72]
   148d0:	mov	w0, #0x50                  	// #80
   148d4:	cbnz	w8, 15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   148d8:	ldr	w8, [x19, #76]
   148dc:	tst	w8, #0xffffffef
   148e0:	b	14f50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a24>
   148e4:	ldr	w8, [x19, #48]
   148e8:	cmp	w8, #0x8
   148ec:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   148f0:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   148f4:	ldr	w8, [x19, #48]
   148f8:	cmp	w8, #0xa
   148fc:	b.ne	15a1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44f0>  // b.any
   14900:	ldr	w8, [x19, #72]
   14904:	sub	w9, w8, #0x5
   14908:	cmp	w9, #0x8
   1490c:	b.cs	15a18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44ec>  // b.hs, b.nlast
   14910:	ldr	w9, [x19, #76]
   14914:	cmp	w9, #0x4
   14918:	b.hi	15a1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44f0>  // b.pmore
   1491c:	cmp	w8, #0xc
   14920:	mov	w0, #0x4e                  	// #78
   14924:	b.eq	1496c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3440>  // b.none
   14928:	cbz	w8, 1496c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3440>
   1492c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14930:	ldr	w8, [x19, #48]
   14934:	cmp	w8, #0xa
   14938:	b.ne	15a28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44fc>  // b.any
   1493c:	ldr	w8, [x19, #72]
   14940:	sub	w9, w8, #0x5
   14944:	cmp	w9, #0x8
   14948:	b.cs	15a24 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44f8>  // b.hs, b.nlast
   1494c:	ldr	w9, [x19, #76]
   14950:	cmp	w9, #0x4
   14954:	b.hi	15a28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44fc>  // b.pmore
   14958:	cmp	w8, #0xb
   1495c:	mov	w0, #0x49                  	// #73
   14960:	b.eq	1496c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3440>  // b.none
   14964:	cmp	w8, #0x7
   14968:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   1496c:	cmp	w9, #0x0
   14970:	ccmp	w9, #0x3, #0x4, ne  // ne = any
   14974:	b	14f50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a24>
   14978:	ldr	w8, [x19, #48]
   1497c:	cmp	w8, #0xa
   14980:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14984:	ldr	w8, [x19, #72]
   14988:	cmp	w8, #0x4
   1498c:	b.hi	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.pmore
   14990:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14994:	ldr	w8, [x19, #76]
   14998:	tst	w8, #0xfffffff7
   1499c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   149a0:	ror	w8, w8, #3
   149a4:	cmp	w8, #0x4
   149a8:	b.cc	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.lo, b.ul, b.last
   149ac:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   149b0:	ldr	w8, [x19, #48]
   149b4:	cmp	w8, #0x5
   149b8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   149bc:	ldr	w8, [x19, #72]
   149c0:	mov	w9, #0x60                  	// #96
   149c4:	cmp	w8, #0x40
   149c8:	b	14b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x35dc>
   149cc:	mov	w1, #0x1                   	// #1
   149d0:	mov	x0, x19
   149d4:	bl	18c88 <_ZNK12_GLOBAL__N_114AArch64Operand11isImmScaledILi6ELi1EEEN4llvm19DiagnosticPredicateEb>
   149d8:	cbz	w0, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   149dc:	cmp	w0, #0x1
   149e0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   149e4:	mov	w0, #0x31                  	// #49
   149e8:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   149ec:	ldr	w8, [x19, #48]
   149f0:	cmp	w8, #0xa
   149f4:	b.ne	14a14 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x34e8>  // b.any
   149f8:	ldr	w8, [x19, #72]
   149fc:	mov	w0, #0x9                   	// #9
   14a00:	cmp	w8, #0x2
   14a04:	b.hi	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.pmore
   14a08:	ldr	w8, [x19, #76]
   14a0c:	cmp	w8, #0x20
   14a10:	b	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c18>
   14a14:	mov	w0, #0x9                   	// #9
   14a18:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14a1c:	ldr	w8, [x19, #48]
   14a20:	cmp	w8, #0xa
   14a24:	b.ne	15a78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x454c>  // b.any
   14a28:	ldr	w8, [x19, #72]
   14a2c:	mov	w0, #0x7                   	// #7
   14a30:	sub	w9, w8, #0x5
   14a34:	cmp	w9, #0x8
   14a38:	b.cs	15a30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4504>  // b.hs, b.nlast
   14a3c:	ldr	w8, [x19, #76]
   14a40:	cmp	w8, #0x4
   14a44:	mov	w8, #0x4                   	// #4
   14a48:	csel	w0, w0, w8, hi  // hi = pmore
   14a4c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14a50:	ldr	w8, [x19, #48]
   14a54:	cmp	w8, #0x3
   14a58:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14a5c:	ldr	w8, [x19, #76]
   14a60:	cmp	w8, #0x3
   14a64:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14a68:	mov	x0, x19
   14a6c:	bl	18bb0 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj2EEEbv>
   14a70:	tbz	w0, #0, 14a80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3554>
   14a74:	ldr	w8, [x19, #80]
   14a78:	cmp	w8, #0x20
   14a7c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   14a80:	mov	w0, #0x6c                  	// #108
   14a84:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14a88:	ldr	w8, [x19, #48]
   14a8c:	cmp	w8, #0x4
   14a90:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14a94:	ldr	w8, [x19, #76]
   14a98:	cmp	w8, #0x1
   14a9c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14aa0:	ldr	w8, [x19, #88]
   14aa4:	cmp	w8, #0x1
   14aa8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14aac:	ldr	w8, [x19, #84]
   14ab0:	cmp	w8, #0x10
   14ab4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14ab8:	ldr	w8, [x19, #80]
   14abc:	cmp	w8, #0x4
   14ac0:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   14ac4:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14ac8:	ldr	x8, [x19]
   14acc:	mov	x0, x19
   14ad0:	ldr	x8, [x8, #40]
   14ad4:	blr	x8
   14ad8:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14adc:	ldr	w8, [x19, #48]
   14ae0:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   14ae4:	ldr	x8, [x19, #72]
   14ae8:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   14aec:	ldr	w9, [x8]
   14af0:	cmp	w9, #0x1
   14af4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14af8:	ldr	x8, [x8, #16]
   14afc:	mov	w9, #0x30                  	// #48
   14b00:	add	x8, x8, #0x8
   14b04:	cmp	x8, #0x10
   14b08:	mov	w8, #0x4                   	// #4
   14b0c:	csel	w0, w8, w9, cc  // cc = lo, ul, last
   14b10:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14b14:	ldr	x8, [x19]
   14b18:	mov	x0, x19
   14b1c:	ldr	x8, [x8, #40]
   14b20:	blr	x8
   14b24:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14b28:	ldr	w8, [x19, #48]
   14b2c:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   14b30:	ldr	x8, [x19, #72]
   14b34:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   14b38:	ldr	w9, [x8]
   14b3c:	cmp	w9, #0x1
   14b40:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14b44:	ldr	x8, [x8, #16]
   14b48:	mov	w9, #0x3f1                 	// #1009
   14b4c:	mov	w10, #0x2f                  	// #47
   14b50:	tst	x8, #0xf
   14b54:	ccmp	x8, x9, #0x2, eq  // eq = none
   14b58:	mov	w8, #0x4                   	// #4
   14b5c:	csel	w0, w8, w10, cc  // cc = lo, ul, last
   14b60:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14b64:	ldr	w8, [x19, #48]
   14b68:	cmp	w8, #0x4
   14b6c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14b70:	ldr	w8, [x19, #76]
   14b74:	cmp	w8, #0x4
   14b78:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14b7c:	ldr	w8, [x19, #88]
   14b80:	cmp	w8, #0x1
   14b84:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14b88:	ldr	w8, [x19, #84]
   14b8c:	cmp	w8, #0x8
   14b90:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14b94:	ldr	w8, [x19, #80]
   14b98:	cmp	w8, #0x10
   14b9c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   14ba0:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14ba4:	ldr	w8, [x19, #48]
   14ba8:	cmp	w8, #0xe
   14bac:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14bb0:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   14bb4:	mov	x0, x19
   14bb8:	bl	17b5c <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv>
   14bbc:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14bc0:	mov	x0, x19
   14bc4:	bl	17ed8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi16EEEbv>
   14bc8:	tbnz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14bcc:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   14bd0:	mov	x0, x19
   14bd4:	mov	w1, wzr
   14bd8:	bl	18c88 <_ZNK12_GLOBAL__N_114AArch64Operand11isImmScaledILi6ELi1EEEN4llvm19DiagnosticPredicateEb>
   14bdc:	cbz	w0, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   14be0:	cmp	w0, #0x1
   14be4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14be8:	mov	w0, #0x32                  	// #50
   14bec:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14bf0:	ldr	w8, [x19, #48]
   14bf4:	cmp	w8, #0xa
   14bf8:	b.ne	15a3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4510>  // b.any
   14bfc:	ldr	w8, [x19, #72]
   14c00:	sub	w9, w8, #0x5
   14c04:	cmp	w9, #0x8
   14c08:	b.cs	15a38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x450c>  // b.hs, b.nlast
   14c0c:	ldr	w9, [x19, #76]
   14c10:	cmp	w9, #0x4
   14c14:	b.hi	15a3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4510>  // b.pmore
   14c18:	cmp	w8, #0xc
   14c1c:	mov	w0, #0x4b                  	// #75
   14c20:	b.eq	14c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x36fc>  // b.none
   14c24:	cbnz	w8, 15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14c28:	tst	w9, #0xfffffffb
   14c2c:	b	14f50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a24>
   14c30:	ldr	w8, [x19, #48]
   14c34:	cmp	w8, #0xa
   14c38:	b.ne	15a48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x451c>  // b.any
   14c3c:	ldr	w8, [x19, #72]
   14c40:	sub	w9, w8, #0x5
   14c44:	cmp	w9, #0x8
   14c48:	b.cs	15a44 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4518>  // b.hs, b.nlast
   14c4c:	ldr	w9, [x19, #76]
   14c50:	cmp	w9, #0x4
   14c54:	b.hi	15a48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x451c>  // b.pmore
   14c58:	cmp	w8, #0xb
   14c5c:	mov	w0, #0x48                  	// #72
   14c60:	b.eq	14f4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a20>  // b.none
   14c64:	cmp	w8, #0x7
   14c68:	b.eq	14f4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a20>  // b.none
   14c6c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14c70:	ldr	x8, [x19]
   14c74:	mov	x0, x19
   14c78:	ldr	x8, [x8, #40]
   14c7c:	blr	x8
   14c80:	tbz	w0, #0, 14cac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3780>
   14c84:	ldr	w8, [x19, #48]
   14c88:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   14c8c:	ldr	x8, [x19, #72]
   14c90:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   14c94:	ldr	w9, [x8]
   14c98:	mov	w0, #0x1d                  	// #29
   14c9c:	cmp	w9, #0x1
   14ca0:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   14ca4:	ldr	x8, [x8, #16]
   14ca8:	b	15140 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c14>
   14cac:	mov	w0, #0x1d                  	// #29
   14cb0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14cb4:	ldr	w8, [x19, #48]
   14cb8:	cmp	w8, #0x3
   14cbc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14cc0:	ldr	w8, [x19, #76]
   14cc4:	cmp	w8, #0x3
   14cc8:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14ccc:	mov	x0, x19
   14cd0:	bl	18bb0 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj2EEEbv>
   14cd4:	tbz	w0, #0, 14ce0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37b4>
   14cd8:	ldr	w8, [x19, #80]
   14cdc:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   14ce0:	mov	w0, #0x68                  	// #104
   14ce4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14ce8:	ldr	w8, [x19, #48]
   14cec:	cmp	w8, #0xa
   14cf0:	b.ne	15a54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4528>  // b.any
   14cf4:	ldr	w8, [x19, #72]
   14cf8:	sub	w9, w8, #0x5
   14cfc:	cmp	w9, #0x8
   14d00:	b.cs	15a50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4524>  // b.hs, b.nlast
   14d04:	ldr	w9, [x19, #76]
   14d08:	cmp	w9, #0x4
   14d0c:	b.hi	15a54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4528>  // b.pmore
   14d10:	cmp	w8, #0xc
   14d14:	mov	w0, #0x4f                  	// #79
   14d18:	b.eq	14d20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37f4>  // b.none
   14d1c:	cbnz	w8, 15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14d20:	cmp	w9, #0x0
   14d24:	b	14f50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a24>
   14d28:	ldr	w8, [x19, #48]
   14d2c:	cmp	w8, #0x3
   14d30:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14d34:	ldr	w8, [x19, #76]
   14d38:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14d3c:	mov	x0, x19
   14d40:	bl	18878 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj19EEEbv>
   14d44:	tbz	w0, #0, 15de0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48b4>
   14d48:	ldr	w9, [x19, #48]
   14d4c:	add	x8, x19, #0x48
   14d50:	cmp	w9, #0x3
   14d54:	b.eq	15cf4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x47c8>  // b.none
   14d58:	cmp	w9, #0xa
   14d5c:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   14d60:	mov	x10, x8
   14d64:	b	15cf8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x47cc>
   14d68:	ldr	x8, [x19]
   14d6c:	mov	x0, x19
   14d70:	ldr	x8, [x8, #40]
   14d74:	blr	x8
   14d78:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14d7c:	ldr	w8, [x19, #48]
   14d80:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   14d84:	ldr	x8, [x19, #72]
   14d88:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   14d8c:	ldr	w9, [x8]
   14d90:	cmp	w9, #0x1
   14d94:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14d98:	ldr	x8, [x8, #16]
   14d9c:	mov	w9, #0x4                   	// #4
   14da0:	add	x10, x8, #0x10
   14da4:	cmp	x10, #0x1e
   14da8:	and	x8, x8, #0x1
   14dac:	cset	w10, hi  // hi = pmore
   14db0:	orr	x8, x8, x10
   14db4:	cmp	x8, #0x1
   14db8:	mov	w8, #0x34                  	// #52
   14dbc:	b	14eb0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3984>
   14dc0:	ldr	x8, [x19]
   14dc4:	mov	x0, x19
   14dc8:	ldr	x8, [x8, #40]
   14dcc:	blr	x8
   14dd0:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14dd4:	ldr	w8, [x19, #48]
   14dd8:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   14ddc:	ldr	x8, [x19, #72]
   14de0:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   14de4:	ldr	w9, [x8]
   14de8:	cmp	w9, #0x1
   14dec:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14df0:	ldr	x8, [x8, #16]
   14df4:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   14df8:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   14dfc:	movk	x9, #0xaaab
   14e00:	movk	x10, #0x2aaa, lsl #48
   14e04:	mov	x11, #0x5555555555555555    	// #6148914691236517205
   14e08:	add	x14, x8, #0x18
   14e0c:	madd	x8, x8, x9, x10
   14e10:	mov	w12, #0x2e                  	// #46
   14e14:	cmp	x8, x11
   14e18:	mov	w13, #0x37                  	// #55
   14e1c:	ccmp	x14, x12, #0x2, cc  // cc = lo, ul, last
   14e20:	mov	w8, #0x4                   	// #4
   14e24:	csel	w0, w8, w13, cc  // cc = lo, ul, last
   14e28:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14e2c:	ldr	w8, [x19, #48]
   14e30:	cmp	w8, #0xa
   14e34:	b.ne	15a60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4534>  // b.any
   14e38:	ldr	w8, [x19, #72]
   14e3c:	sub	w9, w8, #0x5
   14e40:	cmp	w9, #0x8
   14e44:	b.cs	15a5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4530>  // b.hs, b.nlast
   14e48:	ldr	w9, [x19, #76]
   14e4c:	cmp	w9, #0x4
   14e50:	b.hi	15a60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4534>  // b.pmore
   14e54:	cmp	w8, #0xc
   14e58:	mov	w0, #0x4c                  	// #76
   14e5c:	b.eq	14e64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3938>  // b.none
   14e60:	cbnz	w8, 15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14e64:	cmp	w9, #0x2
   14e68:	b	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c18>
   14e6c:	ldr	w8, [x19, #48]
   14e70:	cmp	w8, #0x3
   14e74:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14e78:	ldr	w8, [x19, #76]
   14e7c:	cmp	w8, #0x3
   14e80:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14e84:	mov	x0, x19
   14e88:	bl	18c1c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj3EEEbv>
   14e8c:	tbz	w0, #0, 14e98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x396c>
   14e90:	ldr	w8, [x19, #80]
   14e94:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   14e98:	mov	w0, #0x63                  	// #99
   14e9c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14ea0:	ldr	w8, [x19, #48]
   14ea4:	mov	w9, #0xe                   	// #14
   14ea8:	cmp	w8, #0x2
   14eac:	mov	w8, #0x4                   	// #4
   14eb0:	csel	w0, w8, w9, eq  // eq = none
   14eb4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14eb8:	ldr	x8, [x19]
   14ebc:	mov	x0, x19
   14ec0:	ldr	x8, [x8, #40]
   14ec4:	blr	x8
   14ec8:	tbz	w0, #0, 14fb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a88>
   14ecc:	ldr	w8, [x19, #48]
   14ed0:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   14ed4:	ldr	x8, [x19, #72]
   14ed8:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   14edc:	ldr	w9, [x8]
   14ee0:	mov	w0, #0x4                   	// #4
   14ee4:	cmp	w9, #0x1
   14ee8:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   14eec:	ldr	x8, [x8, #16]
   14ef0:	mov	w9, #0xfffd                	// #65533
   14ef4:	movk	w9, #0x1f, lsl #16
   14ef8:	and	x10, x8, #0x3
   14efc:	add	x8, x8, #0x100, lsl #12
   14f00:	cmp	x8, x9
   14f04:	ccmp	x10, #0x0, #0x0, cc  // cc = lo, ul, last
   14f08:	mov	w8, #0x29                  	// #41
   14f0c:	csel	w0, w0, w8, eq  // eq = none
   14f10:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14f14:	ldr	w8, [x19, #48]
   14f18:	cmp	w8, #0xa
   14f1c:	b.ne	15a6c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4540>  // b.any
   14f20:	ldr	w8, [x19, #72]
   14f24:	sub	w9, w8, #0x5
   14f28:	cmp	w9, #0x8
   14f2c:	b.cs	15a68 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x453c>  // b.hs, b.nlast
   14f30:	ldr	w9, [x19, #76]
   14f34:	cmp	w9, #0x4
   14f38:	b.hi	15a6c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4540>  // b.pmore
   14f3c:	cmp	w8, #0xc
   14f40:	mov	w0, #0x4d                  	// #77
   14f44:	b.eq	14f4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a20>  // b.none
   14f48:	cbnz	w8, 15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14f4c:	tst	w9, #0xfffffffd
   14f50:	mov	w8, #0x4                   	// #4
   14f54:	csel	w0, w8, w0, eq  // eq = none
   14f58:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14f5c:	ldr	x8, [x19]
   14f60:	mov	x0, x19
   14f64:	ldr	x8, [x8, #40]
   14f68:	blr	x8
   14f6c:	tbz	w0, #0, 14fb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a88>
   14f70:	ldr	w8, [x19, #48]
   14f74:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   14f78:	ldr	x8, [x19, #72]
   14f7c:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   14f80:	ldr	w9, [x8]
   14f84:	mov	w0, #0x4                   	// #4
   14f88:	cmp	w9, #0x1
   14f8c:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   14f90:	ldr	x8, [x8, #16]
   14f94:	mov	w9, #0xfffd                	// #65533
   14f98:	and	x10, x8, #0x3
   14f9c:	add	x8, x8, #0x8, lsl #12
   14fa0:	cmp	x8, x9
   14fa4:	ccmp	x10, #0x0, #0x0, cc  // cc = lo, ul, last
   14fa8:	mov	w8, #0x29                  	// #41
   14fac:	csel	w0, w0, w8, eq  // eq = none
   14fb0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14fb4:	mov	w0, #0x29                  	// #41
   14fb8:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   14fbc:	ldr	w8, [x19, #48]
   14fc0:	cmp	w8, #0x3
   14fc4:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   14fc8:	ldr	w8, [x19, #76]
   14fcc:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   14fd0:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   14fd4:	ldr	w8, [x19, #72]
   14fd8:	ldr	x9, [x9]
   14fdc:	lsr	x10, x8, #3
   14fe0:	ldrh	w11, [x9, #214]
   14fe4:	cmp	w10, w11
   14fe8:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   14fec:	ldr	x9, [x9, #200]
   14ff0:	b	15184 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c58>
   14ff4:	ldr	x8, [x19]
   14ff8:	mov	x0, x19
   14ffc:	ldr	x8, [x8, #40]
   15000:	blr	x8
   15004:	tbz	w0, #0, 15364 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e38>
   15008:	ldr	w8, [x19, #48]
   1500c:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   15010:	ldr	x8, [x19, #72]
   15014:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   15018:	ldr	w9, [x8]
   1501c:	mov	w0, #0x20                  	// #32
   15020:	cmp	w9, #0x1
   15024:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   15028:	ldr	x8, [x8, #16]
   1502c:	sub	x8, x8, #0x1
   15030:	cmp	x8, #0x10
   15034:	b	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c18>
   15038:	ldr	w8, [x19, #48]
   1503c:	cmp	w8, #0xa
   15040:	b.ne	15a78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x454c>  // b.any
   15044:	ldr	w8, [x19, #72]
   15048:	sub	w9, w8, #0x5
   1504c:	cmp	w9, #0x8
   15050:	b.cs	15a74 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4548>  // b.hs, b.nlast
   15054:	ldr	w9, [x19, #76]
   15058:	cmp	w9, #0x4
   1505c:	b.hi	15a78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x454c>  // b.pmore
   15060:	cmp	w8, #0xc
   15064:	mov	w0, #0x7                   	// #7
   15068:	b.hi	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.pmore
   1506c:	mov	w9, #0x1                   	// #1
   15070:	lsl	w8, w9, w8
   15074:	mov	w9, #0x1101                	// #4353
   15078:	tst	w8, w9
   1507c:	b.ne	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.any
   15080:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15084:	ldr	w8, [x19, #48]
   15088:	cmp	w8, #0x3
   1508c:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   15090:	ldr	w8, [x19, #76]
   15094:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   15098:	mov	x0, x19
   1509c:	bl	188e0 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj17EEEbv>
   150a0:	tbz	w0, #0, 15df8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48cc>
   150a4:	ldr	w9, [x19, #48]
   150a8:	add	x8, x19, #0x48
   150ac:	cmp	w9, #0x3
   150b0:	b.eq	15d18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x47ec>  // b.none
   150b4:	cmp	w9, #0xa
   150b8:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   150bc:	mov	x10, x8
   150c0:	b	15d1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x47f0>
   150c4:	ldr	w8, [x19, #48]
   150c8:	cmp	w8, #0x3
   150cc:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   150d0:	ldr	w8, [x19, #76]
   150d4:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   150d8:	mov	x0, x19
   150dc:	bl	188e0 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj17EEEbv>
   150e0:	tbz	w0, #0, 15e18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48ec>
   150e4:	ldr	w9, [x19, #48]
   150e8:	add	x8, x19, #0x48
   150ec:	cmp	w9, #0x3
   150f0:	b.eq	15d3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4810>  // b.none
   150f4:	cmp	w9, #0xa
   150f8:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   150fc:	mov	x10, x8
   15100:	b	15d40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4814>
   15104:	ldr	x8, [x19]
   15108:	mov	x0, x19
   1510c:	ldr	x8, [x8, #40]
   15110:	blr	x8
   15114:	tbz	w0, #0, 1536c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e40>
   15118:	ldr	w8, [x19, #48]
   1511c:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   15120:	ldr	x8, [x19, #72]
   15124:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   15128:	ldr	w9, [x8]
   1512c:	mov	w0, #0x22                  	// #34
   15130:	cmp	w9, #0x1
   15134:	b.ne	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>  // b.any
   15138:	ldr	x8, [x8, #16]
   1513c:	sub	x8, x8, #0x1
   15140:	cmp	x8, #0x40
   15144:	mov	w8, #0x4                   	// #4
   15148:	csel	w0, w8, w0, cc  // cc = lo, ul, last
   1514c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15150:	ldr	w8, [x19, #48]
   15154:	cmp	w8, #0x3
   15158:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   1515c:	ldr	w8, [x19, #76]
   15160:	cbnz	w8, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   15164:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15168:	ldr	w8, [x19, #72]
   1516c:	ldr	x9, [x9]
   15170:	lsr	x10, x8, #3
   15174:	ldrh	w11, [x9, #566]
   15178:	cmp	w10, w11
   1517c:	b.cs	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.hs, b.nlast
   15180:	ldr	x9, [x9, #552]
   15184:	ldrb	w9, [x9, x10]
   15188:	and	w8, w8, #0x7
   1518c:	lsr	w8, w9, w8
   15190:	tbnz	w8, #0, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15194:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   15198:	ldr	w8, [x19, #48]
   1519c:	cmp	w8, #0xc
   151a0:	b.ne	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>  // b.any
   151a4:	b	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   151a8:	mov	w0, #0x3                   	// #3
   151ac:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   151b0:	mov	w0, #0x2d                  	// #45
   151b4:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   151b8:	mov	w0, #0xb                   	// #11
   151bc:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   151c0:	mov	w0, #0x35                  	// #53
   151c4:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   151c8:	mov	w0, #0xf                   	// #15
   151cc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   151d0:	mov	w0, #0x19                  	// #25
   151d4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   151d8:	mov	w0, #0x23                  	// #35
   151dc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   151e0:	mov	w0, #0x1a                  	// #26
   151e4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   151e8:	mov	w0, #0x44                  	// #68
   151ec:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   151f0:	mov	w0, #0x21                  	// #33
   151f4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   151f8:	mov	w0, #0x1d                  	// #29
   151fc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15200:	mov	w0, #0x1b                  	// #27
   15204:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15208:	mov	w0, #0x51                  	// #81
   1520c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15210:	mov	w0, #0x18                  	// #24
   15214:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15218:	mov	w0, #0x42                  	// #66
   1521c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15220:	mov	w0, #0x1e                  	// #30
   15224:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15228:	mov	w0, #0x1f                  	// #31
   1522c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15230:	ldr	x8, [x19]
   15234:	mov	x0, x19
   15238:	ldr	x8, [x8, #40]
   1523c:	blr	x8
   15240:	tbz	w0, #0, 159e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44b4>
   15244:	ldr	w8, [x19, #48]
   15248:	cbz	w8, 15940 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4414>
   1524c:	cmp	w8, #0x1
   15250:	b.eq	14008 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2adc>  // b.none
   15254:	b	15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   15258:	ldr	x8, [x19]
   1525c:	mov	x0, x19
   15260:	ldr	x8, [x8, #40]
   15264:	blr	x8
   15268:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   1526c:	ldr	w8, [x19, #48]
   15270:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   15274:	ldr	x8, [x19, #72]
   15278:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   1527c:	ldr	w8, [x8]
   15280:	cmp	w8, #0x1
   15284:	b.eq	1448c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2f60>  // b.none
   15288:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   1528c:	ldr	x8, [x19]
   15290:	mov	x0, x19
   15294:	ldr	x8, [x8, #40]
   15298:	blr	x8
   1529c:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   152a0:	ldr	w8, [x19, #48]
   152a4:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   152a8:	ldr	x8, [x19, #72]
   152ac:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   152b0:	ldr	w8, [x8]
   152b4:	cmp	w8, #0x1
   152b8:	b.eq	14548 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x301c>  // b.none
   152bc:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   152c0:	ldr	x8, [x19]
   152c4:	mov	x0, x19
   152c8:	ldr	x8, [x8, #40]
   152cc:	blr	x8
   152d0:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   152d4:	ldr	w8, [x19, #48]
   152d8:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   152dc:	ldr	x8, [x19, #72]
   152e0:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   152e4:	ldr	w8, [x8]
   152e8:	cmp	w8, #0x1
   152ec:	b.eq	14698 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x316c>  // b.none
   152f0:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   152f4:	ldr	x8, [x19]
   152f8:	mov	x0, x19
   152fc:	ldr	x8, [x8, #40]
   15300:	blr	x8
   15304:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   15308:	ldr	w8, [x19, #48]
   1530c:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   15310:	ldr	x8, [x19, #72]
   15314:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   15318:	ldr	w8, [x8]
   1531c:	cmp	w8, #0x1
   15320:	b.eq	14734 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3208>  // b.none
   15324:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   15328:	ldr	x8, [x19]
   1532c:	mov	x0, x19
   15330:	ldr	x8, [x8, #40]
   15334:	blr	x8
   15338:	tbz	w0, #0, 15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   1533c:	ldr	w8, [x19, #48]
   15340:	cbnz	w8, 15e40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4914>
   15344:	ldr	x8, [x19, #72]
   15348:	cbz	x8, 15e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48f4>
   1534c:	ldr	w8, [x8]
   15350:	cmp	w8, #0x1
   15354:	b.eq	147dc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x32b0>  // b.none
   15358:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   1535c:	mov	w0, #0x50                  	// #80
   15360:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15364:	mov	w0, #0x20                  	// #32
   15368:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   1536c:	mov	w0, #0x22                  	// #34
   15370:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15374:	mov	w0, #0x8                   	// #8
   15378:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   1537c:	mov	w0, #0x32                  	// #50
   15380:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   15384:	mov	w0, #0x9                   	// #9
   15388:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   1538c:	mov	w0, #0x5                   	// #5
   15390:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   15394:	mov	w0, #0x33                  	// #51
   15398:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   1539c:	mov	w0, #0x2f                  	// #47
   153a0:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   153a4:	mov	w0, #0x6                   	// #6
   153a8:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   153ac:	mov	w0, #0x30                  	// #48
   153b0:	b	11a00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   153b4:	add	x9, x19, #0x5c
   153b8:	ldr	w9, [x9]
   153bc:	cmp	w9, #0x1
   153c0:	b.ne	153dc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3eb0>  // b.any
   153c4:	cmp	w8, #0x3
   153c8:	b.eq	15a80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4554>  // b.none
   153cc:	cmp	w8, #0xa
   153d0:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   153d4:	add	x8, x19, #0x48
   153d8:	b	15a84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4558>
   153dc:	mov	x0, x19
   153e0:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   153e4:	b	15a90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4564>
   153e8:	add	x9, x19, #0x5c
   153ec:	ldr	w9, [x9]
   153f0:	cmp	w9, #0x2
   153f4:	b.ne	15410 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ee4>  // b.any
   153f8:	cmp	w8, #0x3
   153fc:	b.eq	15a98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x456c>  // b.none
   15400:	cmp	w8, #0xa
   15404:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   15408:	add	x8, x19, #0x48
   1540c:	b	15a9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4570>
   15410:	mov	x0, x19
   15414:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   15418:	b	15aa8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x457c>
   1541c:	add	x9, x19, #0x5c
   15420:	ldr	w9, [x9]
   15424:	cmp	w9, #0x3
   15428:	b.ne	15abc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4590>  // b.any
   1542c:	cmp	w8, #0x3
   15430:	b.eq	15ab0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4584>  // b.none
   15434:	cmp	w8, #0xa
   15438:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   1543c:	add	x8, x19, #0x48
   15440:	b	15ab4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4588>
   15444:	add	x9, x19, #0x5c
   15448:	ldr	w9, [x9]
   1544c:	cmp	w9, #0x1
   15450:	b.ne	15ad0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45a4>  // b.any
   15454:	cmp	w8, #0x3
   15458:	b.eq	15ac4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4598>  // b.none
   1545c:	cmp	w8, #0xa
   15460:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   15464:	add	x8, x19, #0x48
   15468:	b	15ac8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x459c>
   1546c:	add	x9, x19, #0x5c
   15470:	ldr	w9, [x9]
   15474:	cmp	w9, #0x1
   15478:	b.ne	15494 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f68>  // b.any
   1547c:	cmp	w8, #0x3
   15480:	b.eq	15ad8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45ac>  // b.none
   15484:	cmp	w8, #0xa
   15488:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   1548c:	add	x8, x19, #0x48
   15490:	b	15adc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45b0>
   15494:	mov	x0, x19
   15498:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   1549c:	b	15ae8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45bc>
   154a0:	add	x9, x19, #0x5c
   154a4:	ldr	w9, [x9]
   154a8:	cmp	w9, #0x3
   154ac:	b.ne	15afc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45d0>  // b.any
   154b0:	cmp	w8, #0x3
   154b4:	b.eq	15af0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45c4>  // b.none
   154b8:	cmp	w8, #0xa
   154bc:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   154c0:	add	x8, x19, #0x48
   154c4:	b	15af4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45c8>
   154c8:	add	x9, x19, #0x5c
   154cc:	ldr	w9, [x9]
   154d0:	cmp	w9, #0x1
   154d4:	b.ne	15b10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45e4>  // b.any
   154d8:	cmp	w8, #0x3
   154dc:	b.eq	15b04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45d8>  // b.none
   154e0:	cmp	w8, #0xa
   154e4:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   154e8:	add	x8, x19, #0x48
   154ec:	b	15b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45dc>
   154f0:	add	x9, x19, #0x5c
   154f4:	ldr	w9, [x9]
   154f8:	cmp	w9, #0x2
   154fc:	b.ne	15518 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3fec>  // b.any
   15500:	cmp	w8, #0x3
   15504:	b.eq	15b18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45ec>  // b.none
   15508:	cmp	w8, #0xa
   1550c:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   15510:	add	x8, x19, #0x48
   15514:	b	15b1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45f0>
   15518:	mov	x0, x19
   1551c:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   15520:	b	15b28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x45fc>
   15524:	add	x9, x19, #0x5c
   15528:	ldr	w9, [x9]
   1552c:	cbnz	w9, 158f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43c4>
   15530:	b	155d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x40ac>
   15534:	add	x9, x19, #0x5c
   15538:	ldr	w9, [x9]
   1553c:	cbnz	w9, 15908 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43dc>
   15540:	b	15640 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4114>
   15544:	add	x9, x19, #0x5c
   15548:	ldr	w9, [x9]
   1554c:	cbnz	w9, 15920 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43f4>
   15550:	b	15778 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x424c>
   15554:	add	x9, x19, #0x5c
   15558:	ldr	w9, [x9]
   1555c:	cmp	w9, #0x1
   15560:	b.ne	1557c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4050>  // b.any
   15564:	cmp	w8, #0x3
   15568:	b.eq	15b30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4604>  // b.none
   1556c:	cmp	w8, #0xa
   15570:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   15574:	add	x8, x19, #0x48
   15578:	b	15b34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4608>
   1557c:	mov	x0, x19
   15580:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   15584:	b	15b40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4614>
   15588:	add	x9, x19, #0x5c
   1558c:	ldr	w9, [x9]
   15590:	cmp	w9, #0x2
   15594:	b.ne	155b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4084>  // b.any
   15598:	cmp	w8, #0x3
   1559c:	b.eq	15b48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x461c>  // b.none
   155a0:	cmp	w8, #0xa
   155a4:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   155a8:	add	x8, x19, #0x48
   155ac:	b	15b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4620>
   155b0:	mov	x0, x19
   155b4:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   155b8:	b	15b58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x462c>
   155bc:	add	x9, x19, #0x5c
   155c0:	ldr	w9, [x9]
   155c4:	cbz	w9, 155d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x40ac>
   155c8:	mov	x0, x19
   155cc:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   155d0:	tbz	w0, #0, 158f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43c4>
   155d4:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   155d8:	cmp	w8, #0x3
   155dc:	b.eq	158e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43b4>  // b.none
   155e0:	cmp	w8, #0xa
   155e4:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   155e8:	add	x8, x19, #0x48
   155ec:	b	158e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43b8>
   155f0:	add	x9, x19, #0x5c
   155f4:	ldr	w9, [x9]
   155f8:	cmp	w9, #0x3
   155fc:	b.ne	15618 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x40ec>  // b.any
   15600:	cmp	w8, #0x3
   15604:	b.eq	15b60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4634>  // b.none
   15608:	cmp	w8, #0xa
   1560c:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   15610:	add	x8, x19, #0x48
   15614:	b	15b64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4638>
   15618:	mov	x0, x19
   1561c:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   15620:	b	15b70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4644>
   15624:	add	x9, x19, #0x5c
   15628:	ldr	w9, [x9]
   1562c:	cbz	w9, 15640 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4114>
   15630:	mov	x0, x19
   15634:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   15638:	tbz	w0, #0, 15908 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43dc>
   1563c:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   15640:	cmp	w8, #0x3
   15644:	b.eq	158f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43cc>  // b.none
   15648:	cmp	w8, #0xa
   1564c:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   15650:	add	x8, x19, #0x48
   15654:	b	158fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43d0>
   15658:	add	x9, x19, #0x5c
   1565c:	ldr	w9, [x9]
   15660:	cmp	w9, #0x2
   15664:	b.ne	15b84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4658>  // b.any
   15668:	cmp	w8, #0x3
   1566c:	b.eq	15b78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x464c>  // b.none
   15670:	cmp	w8, #0xa
   15674:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   15678:	add	x8, x19, #0x48
   1567c:	b	15b7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4650>
   15680:	add	x9, x19, #0x5c
   15684:	ldr	w9, [x9]
   15688:	cbnz	w9, 15c24 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46f8>
   1568c:	cmp	w8, #0x3
   15690:	b.eq	15c18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46ec>  // b.none
   15694:	cmp	w8, #0xa
   15698:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   1569c:	add	x8, x19, #0x48
   156a0:	b	15c1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46f0>
   156a4:	add	x9, x19, #0x5c
   156a8:	ldr	w9, [x9]
   156ac:	cbnz	w9, 15938 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x440c>
   156b0:	b	156d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41a4>
   156b4:	add	x9, x19, #0x5c
   156b8:	ldr	w9, [x9]
   156bc:	cbz	w9, 156d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41a4>
   156c0:	mov	x0, x19
   156c4:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   156c8:	tbz	w0, #0, 15938 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x440c>
   156cc:	b	15700 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x41d4>
   156d0:	cmp	w8, #0x3
   156d4:	b.eq	15928 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43fc>  // b.none
   156d8:	cmp	w8, #0xa
   156dc:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   156e0:	add	x8, x19, #0x48
   156e4:	b	1592c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4400>
   156e8:	add	x9, x19, #0x5c
   156ec:	ldr	w9, [x9]
   156f0:	cbz	w9, 15778 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x424c>
   156f4:	mov	x0, x19
   156f8:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   156fc:	tbz	w0, #0, 15920 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43f4>
   15700:	ldr	x8, [x19]
   15704:	mov	x0, x19
   15708:	ldr	x8, [x8, #48]
   1570c:	blr	x8
   15710:	tbz	w0, #0, 15740 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4214>
   15714:	ldr	x8, [x19]
   15718:	mov	x0, x19
   1571c:	ldr	x8, [x8, #56]
   15720:	blr	x8
   15724:	sub	w8, w0, #0x2
   15728:	cmp	w8, #0x272
   1572c:	b.hi	15754 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4228>  // b.pmore
   15730:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   15734:	add	x9, x9, #0x0
   15738:	ldr	w0, [x9, w8, sxtw #2]
   1573c:	b	15758 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x422c>
   15740:	mov	w0, wzr
   15744:	ldp	x20, x19, [sp, #96]
   15748:	ldp	x29, x30, [sp, #80]
   1574c:	add	sp, sp, #0x70
   15750:	ret
   15754:	mov	w0, wzr
   15758:	mov	w1, w20
   1575c:	bl	10ad4 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
   15760:	ldp	x20, x19, [sp, #96]
   15764:	ldp	x29, x30, [sp, #80]
   15768:	tst	w0, #0x1
   1576c:	mov	w8, #0x4                   	// #4
   15770:	csel	w0, w8, wzr, ne  // ne = any
   15774:	b	1574c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4220>
   15778:	cmp	w8, #0x3
   1577c:	b.eq	15910 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43e4>  // b.none
   15780:	cmp	w8, #0xa
   15784:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   15788:	add	x8, x19, #0x48
   1578c:	b	15914 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43e8>
   15790:	add	x9, x19, #0x5c
   15794:	ldr	w9, [x9]
   15798:	cmp	w9, #0x3
   1579c:	b.ne	157b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x428c>  // b.any
   157a0:	cmp	w8, #0x3
   157a4:	b.eq	15b8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4660>  // b.none
   157a8:	cmp	w8, #0xa
   157ac:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   157b0:	add	x8, x19, #0x48
   157b4:	b	15b90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4664>
   157b8:	mov	x0, x19
   157bc:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   157c0:	b	15b9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4670>
   157c4:	add	x9, x19, #0x5c
   157c8:	ldr	w9, [x9]
   157cc:	cmp	w9, #0x3
   157d0:	b.ne	157ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x42c0>  // b.any
   157d4:	cmp	w8, #0x3
   157d8:	b.eq	15ba4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4678>  // b.none
   157dc:	cmp	w8, #0xa
   157e0:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   157e4:	add	x8, x19, #0x48
   157e8:	b	15ba8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x467c>
   157ec:	mov	x0, x19
   157f0:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   157f4:	b	15bb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4688>
   157f8:	add	x9, x19, #0x5c
   157fc:	ldr	w9, [x9]
   15800:	cmp	w9, #0x2
   15804:	b.ne	15820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x42f4>  // b.any
   15808:	cmp	w8, #0x3
   1580c:	b.eq	15bbc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4690>  // b.none
   15810:	cmp	w8, #0xa
   15814:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   15818:	add	x8, x19, #0x48
   1581c:	b	15bc0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4694>
   15820:	mov	x0, x19
   15824:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   15828:	b	15bcc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46a0>
   1582c:	add	x9, x19, #0x5c
   15830:	ldr	w9, [x9]
   15834:	cmp	w9, #0x2
   15838:	b.ne	15be0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46b4>  // b.any
   1583c:	cmp	w8, #0x3
   15840:	b.eq	15bd4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46a8>  // b.none
   15844:	cmp	w8, #0xa
   15848:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   1584c:	add	x8, x19, #0x48
   15850:	b	15bd8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46ac>
   15854:	add	x9, x19, #0x5c
   15858:	ldr	w9, [x9]
   1585c:	cmp	w9, #0x3
   15860:	b.ne	1587c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4350>  // b.any
   15864:	cmp	w8, #0x3
   15868:	b.eq	15be8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46bc>  // b.none
   1586c:	cmp	w8, #0xa
   15870:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   15874:	add	x8, x19, #0x48
   15878:	b	15bec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46c0>
   1587c:	mov	x0, x19
   15880:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   15884:	b	15bf8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46cc>
   15888:	add	x9, x19, #0x5c
   1588c:	ldr	w9, [x9]
   15890:	cbnz	w9, 15c38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x470c>
   15894:	cmp	w8, #0x3
   15898:	b.eq	15c2c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4700>  // b.none
   1589c:	cmp	w8, #0xa
   158a0:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   158a4:	add	x8, x19, #0x48
   158a8:	b	15c30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4704>
   158ac:	add	x9, x19, #0x5c
   158b0:	ldr	w9, [x9]
   158b4:	cmp	w9, #0x1
   158b8:	b.ne	158d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43a8>  // b.any
   158bc:	cmp	w8, #0x3
   158c0:	b.eq	15c00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46d4>  // b.none
   158c4:	cmp	w8, #0xa
   158c8:	b.ne	15e78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x494c>  // b.any
   158cc:	add	x8, x19, #0x48
   158d0:	b	15c04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46d8>
   158d4:	mov	x0, x19
   158d8:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   158dc:	b	15c10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x46e4>
   158e0:	add	x8, x19, #0x58
   158e4:	ldr	w8, [x8]
   158e8:	cmp	w8, #0x7
   158ec:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   158f0:	mov	w0, #0x89                  	// #137
   158f4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   158f8:	add	x8, x19, #0x58
   158fc:	ldr	w8, [x8]
   15900:	cmp	w8, #0x7
   15904:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15908:	mov	w0, #0x7c                  	// #124
   1590c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15910:	add	x8, x19, #0x58
   15914:	ldr	w8, [x8]
   15918:	cmp	w8, #0xb
   1591c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15920:	mov	w0, #0x85                  	// #133
   15924:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15928:	add	x8, x19, #0x58
   1592c:	ldr	w8, [x8]
   15930:	cmp	w8, #0xb
   15934:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15938:	mov	w0, #0x78                  	// #120
   1593c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15940:	ldr	x0, [x19, #72]
   15944:	add	x1, sp, #0xc
   15948:	add	x2, sp, #0x8
   1594c:	add	x3, sp, #0x10
   15950:	bl	e958 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
   15954:	tbz	w0, #0, 159c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4494>
   15958:	ldrh	w8, [sp, #8]
   1595c:	orr	w9, w8, #0x2
   15960:	cmp	w9, #0x16
   15964:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15968:	cmp	w8, #0x18
   1596c:	b.ne	15978 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x444c>  // b.any
   15970:	ldr	x8, [sp, #16]
   15974:	cbz	x8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15978:	ldr	w8, [sp, #12]
   1597c:	cmp	w8, #0x39
   15980:	b.hi	1599c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4470>  // b.pmore
   15984:	mov	w9, #0x1                   	// #1
   15988:	mov	x10, #0x3a000000000         	// #3985729650688
   1598c:	lsl	x9, x9, x8
   15990:	movk	x10, #0x2a0, lsl #48
   15994:	tst	x9, x10
   15998:	b.ne	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.any
   1599c:	sub	w8, w8, #0x121
   159a0:	cmp	w8, #0x6
   159a4:	b.hi	159e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44b4>  // b.pmore
   159a8:	mov	w9, #0x1                   	// #1
   159ac:	lsl	w8, w9, w8
   159b0:	mov	w9, #0x51                  	// #81
   159b4:	tst	w8, w9
   159b8:	b.ne	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.any
   159bc:	b	159e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x44b4>
   159c0:	add	x8, sp, #0x20
   159c4:	mov	x0, x19
   159c8:	bl	186a4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   159cc:	ldrb	w8, [sp, #48]
   159d0:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   159d4:	ldr	x8, [sp, #32]
   159d8:	cmp	x8, #0xfff
   159dc:	b.ls	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.plast
   159e0:	mov	w0, #0xb                   	// #11
   159e4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   159e8:	cbz	w8, 11cfc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7d0>
   159ec:	mov	w0, #0x47                  	// #71
   159f0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   159f4:	cbz	w8, 1207c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xb50>
   159f8:	mov	w0, #0x46                  	// #70
   159fc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a00:	cbz	w8, 121b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xc84>
   15a04:	mov	w0, #0x4a                  	// #74
   15a08:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a0c:	cbz	w9, 14628 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x30fc>
   15a10:	mov	w0, #0x8                   	// #8
   15a14:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a18:	cbz	w8, 14910 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x33e4>
   15a1c:	mov	w0, #0x4e                  	// #78
   15a20:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a24:	cbz	w8, 1494c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3420>
   15a28:	mov	w0, #0x49                  	// #73
   15a2c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a30:	cbz	w8, 14a3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3510>
   15a34:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a38:	cbz	w8, 14c0c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x36e0>
   15a3c:	mov	w0, #0x4b                  	// #75
   15a40:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a44:	cbz	w8, 14c4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3720>
   15a48:	mov	w0, #0x48                  	// #72
   15a4c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a50:	cbz	w8, 14d04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37d8>
   15a54:	mov	w0, #0x4f                  	// #79
   15a58:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a5c:	cbz	w8, 14e48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x391c>
   15a60:	mov	w0, #0x4c                  	// #76
   15a64:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a68:	cbz	w8, 14f30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a04>
   15a6c:	mov	w0, #0x4d                  	// #77
   15a70:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a74:	cbz	w8, 15054 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3b28>
   15a78:	mov	w0, #0x7                   	// #7
   15a7c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a80:	add	x8, x19, #0x58
   15a84:	ldr	w8, [x8]
   15a88:	cmp	w8, #0x7
   15a8c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15a90:	mov	w0, #0x79                  	// #121
   15a94:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15a98:	add	x8, x19, #0x58
   15a9c:	ldr	w8, [x8]
   15aa0:	cmp	w8, #0x7
   15aa4:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15aa8:	mov	w0, #0x7a                  	// #122
   15aac:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15ab0:	add	x8, x19, #0x58
   15ab4:	ldr	w8, [x8]
   15ab8:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15abc:	mov	w0, #0x73                  	// #115
   15ac0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15ac4:	add	x8, x19, #0x58
   15ac8:	ldr	w8, [x8]
   15acc:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15ad0:	mov	w0, #0x7e                  	// #126
   15ad4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15ad8:	add	x8, x19, #0x58
   15adc:	ldr	w8, [x8]
   15ae0:	cmp	w8, #0x7
   15ae4:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15ae8:	mov	w0, #0x86                  	// #134
   15aec:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15af0:	add	x8, x19, #0x58
   15af4:	ldr	w8, [x8]
   15af8:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15afc:	mov	w0, #0x80                  	// #128
   15b00:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15b04:	add	x8, x19, #0x58
   15b08:	ldr	w8, [x8]
   15b0c:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15b10:	mov	w0, #0x71                  	// #113
   15b14:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15b18:	add	x8, x19, #0x58
   15b1c:	ldr	w8, [x8]
   15b20:	cmp	w8, #0xb
   15b24:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15b28:	mov	w0, #0x76                  	// #118
   15b2c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15b30:	add	x8, x19, #0x58
   15b34:	ldr	w8, [x8]
   15b38:	cmp	w8, #0xb
   15b3c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15b40:	mov	w0, #0x82                  	// #130
   15b44:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15b48:	add	x8, x19, #0x58
   15b4c:	ldr	w8, [x8]
   15b50:	cmp	w8, #0x7
   15b54:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15b58:	mov	w0, #0x87                  	// #135
   15b5c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15b60:	add	x8, x19, #0x58
   15b64:	ldr	w8, [x8]
   15b68:	cmp	w8, #0x7
   15b6c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15b70:	mov	w0, #0x7b                  	// #123
   15b74:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15b78:	add	x8, x19, #0x58
   15b7c:	ldr	w8, [x8]
   15b80:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15b84:	mov	w0, #0x72                  	// #114
   15b88:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15b8c:	add	x8, x19, #0x58
   15b90:	ldr	w8, [x8]
   15b94:	cmp	w8, #0xb
   15b98:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15b9c:	mov	w0, #0x84                  	// #132
   15ba0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15ba4:	add	x8, x19, #0x58
   15ba8:	ldr	w8, [x8]
   15bac:	cmp	w8, #0xb
   15bb0:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15bb4:	mov	w0, #0x77                  	// #119
   15bb8:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15bbc:	add	x8, x19, #0x58
   15bc0:	ldr	w8, [x8]
   15bc4:	cmp	w8, #0xb
   15bc8:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15bcc:	mov	w0, #0x83                  	// #131
   15bd0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15bd4:	add	x8, x19, #0x58
   15bd8:	ldr	w8, [x8]
   15bdc:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15be0:	mov	w0, #0x7f                  	// #127
   15be4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15be8:	add	x8, x19, #0x58
   15bec:	ldr	w8, [x8]
   15bf0:	cmp	w8, #0x7
   15bf4:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15bf8:	mov	w0, #0x88                  	// #136
   15bfc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15c00:	add	x8, x19, #0x58
   15c04:	ldr	w8, [x8]
   15c08:	cmp	w8, #0xb
   15c0c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15c10:	mov	w0, #0x75                  	// #117
   15c14:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15c18:	add	x8, x19, #0x58
   15c1c:	ldr	w8, [x8]
   15c20:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15c24:	mov	w0, #0x81                  	// #129
   15c28:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15c2c:	add	x8, x19, #0x58
   15c30:	ldr	w8, [x8]
   15c34:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15c38:	mov	w0, #0x74                  	// #116
   15c3c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15c40:	add	x10, x19, #0x58
   15c44:	ldr	w10, [x10]
   15c48:	cbnz	w10, 15d70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4844>
   15c4c:	cmp	w9, #0x3
   15c50:	b.eq	15d60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4834>  // b.none
   15c54:	cmp	w9, #0xa
   15c58:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   15c5c:	add	x8, x8, #0x4
   15c60:	b	15d64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4838>
   15c64:	add	x10, x19, #0x58
   15c68:	ldr	w10, [x10]
   15c6c:	cbnz	w10, 15d88 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x485c>
   15c70:	cmp	w9, #0x3
   15c74:	b.eq	15d78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x484c>  // b.none
   15c78:	cmp	w9, #0xa
   15c7c:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   15c80:	add	x8, x8, #0x4
   15c84:	b	15d7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4850>
   15c88:	add	x10, x19, #0x58
   15c8c:	ldr	w10, [x10]
   15c90:	cbnz	w10, 15d9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4870>
   15c94:	cmp	w9, #0x3
   15c98:	b.eq	15d90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4864>  // b.none
   15c9c:	cmp	w9, #0xa
   15ca0:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   15ca4:	add	x8, x8, #0x4
   15ca8:	b	15d94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4868>
   15cac:	add	x10, x19, #0x58
   15cb0:	ldr	w10, [x10]
   15cb4:	cbnz	w10, 15db0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4884>
   15cb8:	cmp	w9, #0x3
   15cbc:	b.eq	15da4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4878>  // b.none
   15cc0:	cmp	w9, #0xa
   15cc4:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   15cc8:	add	x8, x8, #0x4
   15ccc:	b	15da8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x487c>
   15cd0:	add	x10, x19, #0x58
   15cd4:	ldr	w10, [x10]
   15cd8:	cbnz	w10, 15dc8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x489c>
   15cdc:	cmp	w9, #0x3
   15ce0:	b.eq	15db8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x488c>  // b.none
   15ce4:	cmp	w9, #0xa
   15ce8:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   15cec:	add	x8, x8, #0x4
   15cf0:	b	15dbc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4890>
   15cf4:	add	x10, x19, #0x58
   15cf8:	ldr	w10, [x10]
   15cfc:	cbnz	w10, 15de0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48b4>
   15d00:	cmp	w9, #0x3
   15d04:	b.eq	15dd0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48a4>  // b.none
   15d08:	cmp	w9, #0xa
   15d0c:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   15d10:	add	x8, x8, #0x4
   15d14:	b	15dd4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48a8>
   15d18:	add	x10, x19, #0x58
   15d1c:	ldr	w10, [x10]
   15d20:	cbnz	w10, 15df8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48cc>
   15d24:	cmp	w9, #0x3
   15d28:	b.eq	15de8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48bc>  // b.none
   15d2c:	cmp	w9, #0xa
   15d30:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   15d34:	add	x8, x8, #0x4
   15d38:	b	15dec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48c0>
   15d3c:	add	x10, x19, #0x58
   15d40:	ldr	w10, [x10]
   15d44:	cbnz	w10, 15e18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48ec>
   15d48:	cmp	w9, #0x3
   15d4c:	b.eq	15e00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48d4>  // b.none
   15d50:	cmp	w9, #0xa
   15d54:	b.ne	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4934>  // b.any
   15d58:	add	x8, x8, #0x4
   15d5c:	b	15e04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48d8>
   15d60:	add	x8, x19, #0x5c
   15d64:	ldr	w8, [x8]
   15d68:	cmp	w8, #0x3
   15d6c:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15d70:	mov	w0, #0x12                  	// #18
   15d74:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15d78:	add	x8, x19, #0x5c
   15d7c:	ldr	w8, [x8]
   15d80:	cmp	w8, #0x1
   15d84:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15d88:	mov	w0, #0x14                  	// #20
   15d8c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15d90:	add	x8, x19, #0x5c
   15d94:	ldr	w8, [x8]
   15d98:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15d9c:	mov	w0, #0x13                  	// #19
   15da0:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15da4:	add	x8, x19, #0x5c
   15da8:	ldr	w8, [x8]
   15dac:	cbz	w8, 15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>
   15db0:	mov	w0, #0x17                  	// #23
   15db4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15db8:	add	x8, x19, #0x5c
   15dbc:	ldr	w8, [x8]
   15dc0:	cmp	w8, #0x1
   15dc4:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15dc8:	mov	w0, #0x10                  	// #16
   15dcc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15dd0:	add	x8, x19, #0x5c
   15dd4:	ldr	w8, [x8]
   15dd8:	cmp	w8, #0x2
   15ddc:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15de0:	mov	w0, #0x11                  	// #17
   15de4:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15de8:	add	x8, x19, #0x5c
   15dec:	ldr	w8, [x8]
   15df0:	cmp	w8, #0x3
   15df4:	b.eq	15e10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48e4>  // b.none
   15df8:	mov	w0, #0x16                  	// #22
   15dfc:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15e00:	add	x8, x19, #0x5c
   15e04:	ldr	w8, [x8]
   15e08:	cmp	w8, #0x2
   15e0c:	b.ne	15e18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48ec>  // b.any
   15e10:	mov	w0, #0x4                   	// #4
   15e14:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15e18:	mov	w0, #0x15                  	// #21
   15e1c:	b	15744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4218>
   15e20:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   15e24:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   15e28:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   15e2c:	add	x0, x0, #0x0
   15e30:	add	x1, x1, #0x0
   15e34:	add	x3, x3, #0x0
   15e38:	mov	w2, #0x69                  	// #105
   15e3c:	bl	0 <__assert_fail>
   15e40:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   15e44:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   15e48:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   15e4c:	add	x0, x0, #0x0
   15e50:	add	x1, x1, #0x0
   15e54:	add	x3, x3, #0x0
   15e58:	mov	w2, #0x1f4                 	// #500
   15e5c:	bl	0 <__assert_fail>
   15e60:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   15e64:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   15e68:	add	x0, x0, #0x0
   15e6c:	add	x1, x1, #0x0
   15e70:	mov	w2, #0x269                 	// #617
   15e74:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   15e78:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   15e7c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   15e80:	add	x0, x0, #0x0
   15e84:	add	x1, x1, #0x0
   15e88:	mov	w2, #0x261                 	// #609
   15e8c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000015e90 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm>:
   15e90:	stp	x29, x30, [sp, #-80]!
   15e94:	stp	x26, x25, [sp, #16]
   15e98:	stp	x24, x23, [sp, #32]
   15e9c:	stp	x22, x21, [sp, #48]
   15ea0:	stp	x20, x19, [sp, #64]
   15ea4:	mov	x29, sp
   15ea8:	cmp	w1, #0x68d
   15eac:	b.cs	15fdc <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x14c>  // b.hs, b.nlast
   15eb0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   15eb4:	mov	w8, #0xd                   	// #13
   15eb8:	add	x9, x9, #0x0
   15ebc:	umaddl	x8, w1, w8, x9
   15ec0:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
   15ec4:	mov	x19, x3
   15ec8:	mov	x20, x2
   15ecc:	mov	x21, x0
   15ed0:	add	x22, x8, #0x1
   15ed4:	add	x23, x23, #0x0
   15ed8:	ldurb	w8, [x22, #-1]
   15edc:	cmp	w8, #0x2
   15ee0:	b.eq	15eec <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x5c>  // b.none
   15ee4:	cbnz	w8, 15f6c <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0xdc>
   15ee8:	b	15f74 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0xe4>
   15eec:	ldrb	w8, [x22]
   15ef0:	cmp	x8, #0xc
   15ef4:	b.cs	15f9c <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x10c>  // b.hs, b.nlast
   15ef8:	add	x8, x8, x8, lsl #1
   15efc:	add	x8, x23, x8
   15f00:	ldrb	w25, [x8, #1]
   15f04:	ldrb	w24, [x8, #2]
   15f08:	cmp	w25, w24
   15f0c:	b.eq	15f6c <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0xdc>  // b.none
   15f10:	ldr	w8, [x20, #8]
   15f14:	cmp	x8, x25
   15f18:	b.ls	15fbc <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x12c>  // b.plast
   15f1c:	cmp	x8, x24
   15f20:	b.ls	15fbc <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x12c>  // b.plast
   15f24:	ldr	x26, [x20]
   15f28:	ldr	x0, [x26, x25, lsl #3]
   15f2c:	ldr	x8, [x0]
   15f30:	ldr	x8, [x8, #48]
   15f34:	blr	x8
   15f38:	tbz	w0, #0, 15f6c <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0xdc>
   15f3c:	ldr	x0, [x26, x24, lsl #3]
   15f40:	ldr	x8, [x0]
   15f44:	ldr	x8, [x8, #48]
   15f48:	blr	x8
   15f4c:	tbz	w0, #0, 15f6c <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0xdc>
   15f50:	ldr	x8, [x21]
   15f54:	ldr	x1, [x26, x25, lsl #3]
   15f58:	ldr	x2, [x26, x24, lsl #3]
   15f5c:	mov	x0, x21
   15f60:	ldr	x8, [x8, #112]
   15f64:	blr	x8
   15f68:	tbz	w0, #0, 15f90 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x100>
   15f6c:	add	x22, x22, #0x2
   15f70:	b	15ed8 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x48>
   15f74:	mov	w0, #0x1                   	// #1
   15f78:	ldp	x20, x19, [sp, #64]
   15f7c:	ldp	x22, x21, [sp, #48]
   15f80:	ldp	x24, x23, [sp, #32]
   15f84:	ldp	x26, x25, [sp, #16]
   15f88:	ldp	x29, x30, [sp], #80
   15f8c:	ret
   15f90:	mov	w0, wzr
   15f94:	str	x24, [x19]
   15f98:	b	15f78 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0xe8>
   15f9c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   15fa0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   15fa4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   15fa8:	add	x0, x0, #0x0
   15fac:	add	x1, x1, #0x0
   15fb0:	add	x3, x3, #0x0
   15fb4:	mov	w2, #0x30a3                	// #12451
   15fb8:	bl	0 <__assert_fail>
   15fbc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   15fc0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   15fc4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   15fc8:	add	x0, x0, #0x0
   15fcc:	add	x1, x1, #0x0
   15fd0:	add	x3, x3, #0x0
   15fd4:	mov	w2, #0x99                  	// #153
   15fd8:	bl	0 <__assert_fail>
   15fdc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   15fe0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   15fe4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   15fe8:	add	x0, x0, #0x0
   15fec:	add	x1, x1, #0x0
   15ff0:	add	x3, x3, #0x0
   15ff4:	mov	w2, #0x309b                	// #12443
   15ff8:	bl	0 <__assert_fail>

0000000000015ffc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
   15ffc:	sub	sp, sp, #0xa0
   16000:	stp	x29, x30, [sp, #64]
   16004:	stp	x28, x27, [sp, #80]
   16008:	stp	x26, x25, [sp, #96]
   1600c:	stp	x24, x23, [sp, #112]
   16010:	stp	x22, x21, [sp, #128]
   16014:	stp	x20, x19, [sp, #144]
   16018:	add	x29, sp, #0x40
   1601c:	cmp	w0, #0x68d
   16020:	b.cs	1793c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1940>  // b.hs, b.nlast
   16024:	mov	w8, #0xd                   	// #13
   16028:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1602c:	umull	x8, w0, w8
   16030:	add	x9, x9, #0x0
   16034:	ldrb	w8, [x9, x8]
   16038:	mov	x20, x1
   1603c:	str	w2, [x1]
   16040:	cbz	w8, 17514 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1518>
   16044:	mov	w10, w0
   16048:	mov	w12, #0xd                   	// #13
   1604c:	mov	x11, sp
   16050:	madd	x9, x10, x12, x9
   16054:	adrp	x26, 0 <LLVMInitializeAArch64AsmParser>
   16058:	mov	x19, x3
   1605c:	add	x21, x20, #0x10
   16060:	add	x24, x3, #0x8
   16064:	add	x22, x11, #0x8
   16068:	add	x25, x9, #0x2
   1606c:	add	x26, x26, #0x0
   16070:	and	w8, w8, #0xff
   16074:	sub	w9, w8, #0x1
   16078:	cmp	w9, #0x67
   1607c:	b.hi	17534 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1538>  // b.pmore
   16080:	ldurb	w8, [x25, #-1]
   16084:	adr	x10, 16094 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x98>
   16088:	ldrh	w11, [x26, x9, lsl #1]
   1608c:	add	x10, x10, x11, lsl #2
   16090:	br	x10
   16094:	ldr	w9, [x24]
   16098:	cmp	w9, w8
   1609c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   160a0:	ldr	x9, [x19]
   160a4:	ldr	x0, [x9, x8, lsl #3]
   160a8:	ldr	x8, [x0]
   160ac:	ldr	x8, [x8, #56]
   160b0:	blr	x8
   160b4:	mov	w8, w0
   160b8:	b	17358 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x135c>
   160bc:	ldr	w9, [x24]
   160c0:	cmp	w9, w8
   160c4:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   160c8:	ldr	x9, [x19]
   160cc:	ldr	x8, [x9, x8, lsl #3]
   160d0:	ldr	w9, [x8, #48]
   160d4:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   160d8:	ldr	x1, [x8, #72]
   160dc:	cbz	x1, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   160e0:	ldr	w8, [x1]
   160e4:	cmp	w8, #0x1
   160e8:	b.ne	16f1c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xf20>  // b.any
   160ec:	ldr	x8, [x1, #16]
   160f0:	mov	w9, #0x2                   	// #2
   160f4:	b	16a74 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xa78>
   160f8:	ldr	w9, [x24]
   160fc:	cmp	w9, w8
   16100:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16104:	ldr	x9, [x19]
   16108:	ldr	x8, [x9, x8, lsl #3]
   1610c:	ldr	w8, [x8, #92]
   16110:	b	17384 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1388>
   16114:	ldr	w9, [x24]
   16118:	cmp	w9, w8
   1611c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16120:	ldr	x9, [x19]
   16124:	ldr	x8, [x9, x8, lsl #3]
   16128:	ldr	w9, [x8, #48]
   1612c:	cmp	w9, #0x4
   16130:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   16134:	ldr	w8, [x8, #72]
   16138:	b	17358 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x135c>
   1613c:	ldr	w9, [x24]
   16140:	cmp	w9, w8
   16144:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16148:	ldr	x9, [x19]
   1614c:	mov	x1, x20
   16150:	ldr	x0, [x9, x8, lsl #3]
   16154:	bl	19544 <_ZNK12_GLOBAL__N_114AArch64Operand14addImmOperandsERN4llvm6MCInstEj>
   16158:	b	1739c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13a0>
   1615c:	ldr	w9, [x24]
   16160:	cmp	w9, w8
   16164:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16168:	ldr	x9, [x19]
   1616c:	ldr	x8, [x9, x8, lsl #3]
   16170:	ldr	w9, [x8, #48]
   16174:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16178:	ldr	x8, [x8, #72]
   1617c:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16180:	ldr	w9, [x8]
   16184:	cmp	w9, #0x1
   16188:	b.eq	165f8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5fc>  // b.none
   1618c:	b	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>
   16190:	ldr	w9, [x24]
   16194:	cmp	w9, w8
   16198:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1619c:	ldr	x9, [x19]
   161a0:	ldr	x0, [x9, x8, lsl #3]
   161a4:	ldr	x8, [x0]
   161a8:	ldr	x8, [x8, #56]
   161ac:	blr	x8
   161b0:	add	w8, w0, #0xcc
   161b4:	b	17358 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x135c>
   161b8:	ldr	w9, [x24]
   161bc:	cmp	w9, w8
   161c0:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   161c4:	ldr	x9, [x19]
   161c8:	ldr	x8, [x9, x8, lsl #3]
   161cc:	ldr	w9, [x8, #48]
   161d0:	cmp	w9, #0x9
   161d4:	b.eq	1719c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11a0>  // b.none
   161d8:	b	17604 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1608>
   161dc:	ldr	w9, [x24]
   161e0:	cmp	w9, w8
   161e4:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   161e8:	ldr	x9, [x19]
   161ec:	ldr	x0, [x9, x8, lsl #3]
   161f0:	ldr	x8, [x0]
   161f4:	ldr	x8, [x8, #56]
   161f8:	blr	x8
   161fc:	add	w8, w0, #0x5c
   16200:	b	17358 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x135c>
   16204:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   16208:	ldr	q0, [x8]
   1620c:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   16210:	ldr	w9, [x24]
   16214:	cmp	w9, w8
   16218:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1621c:	ldr	x9, [x19]
   16220:	ldr	x8, [x9, x8, lsl #3]
   16224:	ldr	w9, [x8, #48]
   16228:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   1622c:	ldr	x8, [x8, #72]
   16230:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16234:	ldr	w9, [x8]
   16238:	cmp	w9, #0x1
   1623c:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16240:	ldr	w8, [x8, #20]
   16244:	b	17178 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x117c>
   16248:	ldr	w9, [x24]
   1624c:	cmp	w9, w8
   16250:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16254:	ldr	x9, [x19]
   16258:	ldr	x23, [x9, x8, lsl #3]
   1625c:	ldr	w8, [x23, #48]
   16260:	cmp	w8, #0x3
   16264:	b.eq	173e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13e8>  // b.none
   16268:	cmp	w8, #0xa
   1626c:	b.ne	175ec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15f0>  // b.any
   16270:	add	x8, x23, #0x48
   16274:	b	173e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13ec>
   16278:	ldr	w9, [x24]
   1627c:	cmp	w9, w8
   16280:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16284:	ldr	x9, [x19]
   16288:	ldr	x8, [x9, x8, lsl #3]
   1628c:	ldr	w9, [x8, #48]
   16290:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16294:	ldr	x8, [x8, #72]
   16298:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   1629c:	ldr	w9, [x8]
   162a0:	cmp	w9, #0x1
   162a4:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   162a8:	ldrh	w8, [x8, #22]
   162ac:	b	17384 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1388>
   162b0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   162b4:	ldr	q0, [x8]
   162b8:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   162bc:	ldr	w9, [x24]
   162c0:	cmp	w9, w8
   162c4:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   162c8:	ldr	x9, [x19]
   162cc:	ldr	x8, [x9, x8, lsl #3]
   162d0:	ldr	w9, [x8, #48]
   162d4:	cmp	w9, #0x4
   162d8:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   162dc:	ldr	w8, [x8, #72]
   162e0:	mov	w9, #0x1                   	// #1
   162e4:	add	w8, w8, #0xdc
   162e8:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   162ec:	ldr	w9, [x24]
   162f0:	cmp	w9, w8
   162f4:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   162f8:	ldr	x9, [x19]
   162fc:	ldr	x8, [x9, x8, lsl #3]
   16300:	ldr	w8, [x8, #88]
   16304:	b	17384 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1388>
   16308:	mov	w8, #0x2                   	// #2
   1630c:	dup	v0.2d, x8
   16310:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   16314:	ldr	w9, [x24]
   16318:	cmp	w9, w8
   1631c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16320:	ldr	x9, [x19]
   16324:	ldr	x8, [x9, x8, lsl #3]
   16328:	ldr	w9, [x8, #48]
   1632c:	cmp	w9, #0xc
   16330:	b.eq	1719c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11a0>  // b.none
   16334:	b	17624 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1628>
   16338:	ldr	w9, [x24]
   1633c:	cmp	w9, w8
   16340:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16344:	ldr	x9, [x19]
   16348:	ldr	x8, [x9, x8, lsl #3]
   1634c:	ldr	w9, [x8, #48]
   16350:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16354:	ldr	x8, [x8, #72]
   16358:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   1635c:	ldr	w9, [x8]
   16360:	cmp	w9, #0x1
   16364:	b.eq	16ec0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xec4>  // b.none
   16368:	b	172ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x12b0>
   1636c:	ldr	w9, [x24]
   16370:	cmp	w9, w8
   16374:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16378:	ldr	x9, [x19]
   1637c:	ldr	x23, [x9, x8, lsl #3]
   16380:	ldr	w8, [x23, #48]
   16384:	cmp	w8, #0x3
   16388:	b.eq	17440 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1444>  // b.none
   1638c:	cmp	w8, #0xa
   16390:	b.ne	175ec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15f0>  // b.any
   16394:	add	x8, x23, #0x48
   16398:	b	17444 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1448>
   1639c:	ldr	w9, [x24]
   163a0:	cmp	w9, w8
   163a4:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   163a8:	ldr	x9, [x19]
   163ac:	ldr	x8, [x9, x8, lsl #3]
   163b0:	ldr	w9, [x8, #48]
   163b4:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   163b8:	ldr	x8, [x8, #72]
   163bc:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   163c0:	ldr	w9, [x8]
   163c4:	cmp	w9, #0x1
   163c8:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   163cc:	ldr	x8, [x8, #16]
   163d0:	mov	w9, #0x2                   	// #2
   163d4:	mvn	x8, x8
   163d8:	lsr	x8, x8, #48
   163dc:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   163e0:	ldr	w9, [x24]
   163e4:	cmp	w9, w8
   163e8:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   163ec:	ldr	x9, [x19]
   163f0:	ldr	x8, [x9, x8, lsl #3]
   163f4:	ldr	w9, [x8, #48]
   163f8:	cmp	w9, #0x4
   163fc:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   16400:	ldr	w8, [x8, #72]
   16404:	mov	w9, #0x1                   	// #1
   16408:	sub	w8, w8, #0x50
   1640c:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   16410:	ldr	w9, [x24]
   16414:	cmp	w9, w8
   16418:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1641c:	ldr	x9, [x19]
   16420:	ldr	x8, [x9, x8, lsl #3]
   16424:	ldr	w9, [x8, #48]
   16428:	cmp	w9, #0x4
   1642c:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   16430:	ldr	w8, [x8, #72]
   16434:	mov	w9, #0x1                   	// #1
   16438:	add	w8, w8, #0x11c
   1643c:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   16440:	ldr	w9, [x24]
   16444:	cmp	w9, w8
   16448:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1644c:	ldr	x9, [x19]
   16450:	ldr	x8, [x9, x8, lsl #3]
   16454:	ldr	w9, [x8, #48]
   16458:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   1645c:	ldr	x8, [x8, #72]
   16460:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16464:	ldr	w9, [x8]
   16468:	cmp	w9, #0x1
   1646c:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16470:	ldrh	w8, [x8, #18]
   16474:	b	17178 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x117c>
   16478:	ldr	w9, [x24]
   1647c:	cmp	w9, w8
   16480:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16484:	ldr	x9, [x19]
   16488:	ldr	x8, [x9, x8, lsl #3]
   1648c:	ldr	w9, [x8, #48]
   16490:	cmp	w9, #0x5
   16494:	b.eq	17380 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1384>  // b.none
   16498:	b	17644 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1648>
   1649c:	ldr	w9, [x24]
   164a0:	cmp	w9, w8
   164a4:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   164a8:	ldr	x9, [x19]
   164ac:	ldr	x23, [x9, x8, lsl #3]
   164b0:	mov	x0, x23
   164b4:	bl	184f8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv>
   164b8:	cbz	w0, 16d64 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xd68>
   164bc:	b	17664 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1668>
   164c0:	ldr	w9, [x24]
   164c4:	cmp	w9, w8
   164c8:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   164cc:	ldr	x9, [x19]
   164d0:	ldr	x8, [x9, x8, lsl #3]
   164d4:	ldr	w9, [x8, #48]
   164d8:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   164dc:	ldr	x8, [x8, #72]
   164e0:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   164e4:	ldr	w9, [x8]
   164e8:	cmp	w9, #0x1
   164ec:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   164f0:	ldr	x8, [x8, #16]
   164f4:	mov	x9, #0x2d83                	// #11651
   164f8:	movk	x9, #0x82d8, lsl #16
   164fc:	movk	x9, #0xd82d, lsl #32
   16500:	movk	x9, #0x2d82, lsl #48
   16504:	sub	x8, x8, #0x5a
   16508:	smulh	x8, x8, x9
   1650c:	mov	w10, #0x2                   	// #2
   16510:	asr	x9, x8, #5
   16514:	b	16568 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x56c>
   16518:	ldr	w9, [x24]
   1651c:	cmp	w9, w8
   16520:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16524:	ldr	x9, [x19]
   16528:	ldr	x8, [x9, x8, lsl #3]
   1652c:	ldr	w9, [x8, #48]
   16530:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16534:	ldr	x8, [x8, #72]
   16538:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   1653c:	ldr	w9, [x8]
   16540:	cmp	w9, #0x1
   16544:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16548:	ldr	x8, [x8, #16]
   1654c:	mov	x9, #0x2d83                	// #11651
   16550:	movk	x9, #0x82d8, lsl #16
   16554:	movk	x9, #0xd82d, lsl #32
   16558:	movk	x9, #0x2d82, lsl #48
   1655c:	smulh	x8, x8, x9
   16560:	mov	w10, #0x2                   	// #2
   16564:	asr	x9, x8, #4
   16568:	add	x8, x9, x8, lsr #63
   1656c:	b	174ec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14f0>
   16570:	ldr	w9, [x24]
   16574:	cmp	w9, w8
   16578:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1657c:	ldr	x9, [x19]
   16580:	ldr	x8, [x9, x8, lsl #3]
   16584:	ldr	w9, [x8, #48]
   16588:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   1658c:	ldr	x8, [x8, #72]
   16590:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16594:	ldr	w9, [x8]
   16598:	cmp	w9, #0x1
   1659c:	b.ne	172ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x12b0>  // b.any
   165a0:	b	16630 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x634>
   165a4:	ldr	w9, [x24]
   165a8:	cmp	w9, w8
   165ac:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   165b0:	ldr	x9, [x19]
   165b4:	ldr	x8, [x9, x8, lsl #3]
   165b8:	ldr	w9, [x8, #48]
   165bc:	cmp	w9, #0xe
   165c0:	b.eq	1719c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11a0>  // b.none
   165c4:	b	17680 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1684>
   165c8:	ldr	w9, [x24]
   165cc:	cmp	w9, w8
   165d0:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   165d4:	ldr	x9, [x19]
   165d8:	ldr	x8, [x9, x8, lsl #3]
   165dc:	ldr	w9, [x8, #48]
   165e0:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   165e4:	ldr	x8, [x8, #72]
   165e8:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   165ec:	ldr	w9, [x8]
   165f0:	cmp	w9, #0x1
   165f4:	b.ne	172ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x12b0>  // b.any
   165f8:	ldr	x8, [x8, #16]
   165fc:	b	17384 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1388>
   16600:	ldr	w9, [x24]
   16604:	cmp	w9, w8
   16608:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1660c:	ldr	x9, [x19]
   16610:	ldr	x8, [x9, x8, lsl #3]
   16614:	ldr	w9, [x8, #48]
   16618:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   1661c:	ldr	x8, [x8, #72]
   16620:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16624:	ldr	w9, [x8]
   16628:	cmp	w9, #0x1
   1662c:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16630:	ldr	x8, [x8, #16]
   16634:	mov	w9, #0x2                   	// #2
   16638:	add	x10, x8, #0xf
   1663c:	cmp	x8, #0x0
   16640:	csel	x8, x10, x8, lt  // lt = tstop
   16644:	asr	x8, x8, #4
   16648:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   1664c:	ldr	w9, [x24]
   16650:	cmp	w9, w8
   16654:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16658:	ldr	x9, [x19]
   1665c:	ldr	x9, [x9, x8, lsl #3]
   16660:	ldr	w8, [x9, #48]
   16664:	cmp	w8, #0x3
   16668:	b.eq	1747c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1480>  // b.none
   1666c:	cmp	w8, #0xa
   16670:	b.ne	175ec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15f0>  // b.any
   16674:	ldr	w8, [x9, #72]
   16678:	mov	w10, #0x7                   	// #7
   1667c:	b	16960 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x964>
   16680:	ldr	w9, [x24]
   16684:	cmp	w9, w8
   16688:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1668c:	ldr	x9, [x19]
   16690:	ldr	x8, [x9, x8, lsl #3]
   16694:	ldr	w9, [x8, #48]
   16698:	cmp	w9, #0x4
   1669c:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   166a0:	ldr	w8, [x8, #72]
   166a4:	mov	w9, #0x1                   	// #1
   166a8:	add	w8, w8, #0x120
   166ac:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   166b0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   166b4:	ldr	q0, [x8]
   166b8:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   166bc:	ldr	w9, [x24]
   166c0:	cmp	w9, w8
   166c4:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   166c8:	ldr	x9, [x19]
   166cc:	ldr	x23, [x9, x8, lsl #3]
   166d0:	mov	x0, x23
   166d4:	bl	184c0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1ELj3EEEN4llvm19DiagnosticPredicateEv>
   166d8:	cbnz	w0, 176a0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x16a4>
   166dc:	mov	x0, x23
   166e0:	bl	19398 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>
   166e4:	b	16d6c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xd70>
   166e8:	ldr	w9, [x24]
   166ec:	cmp	w9, w8
   166f0:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   166f4:	ldr	x9, [x19]
   166f8:	ldr	x0, [x9, x8, lsl #3]
   166fc:	ldr	x8, [x0]
   16700:	ldr	x8, [x8, #56]
   16704:	blr	x8
   16708:	add	w8, w0, #0xac
   1670c:	b	17358 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x135c>
   16710:	ldr	w9, [x24]
   16714:	cmp	w9, w8
   16718:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1671c:	ldr	x9, [x19]
   16720:	ldr	x23, [x9, x8, lsl #3]
   16724:	mov	x8, sp
   16728:	mov	x0, x23
   1672c:	bl	186a4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   16730:	b	16818 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x81c>
   16734:	ldr	w9, [x24]
   16738:	cmp	w9, w8
   1673c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16740:	ldr	x9, [x19]
   16744:	ldr	x0, [x9, x8, lsl #3]
   16748:	ldr	x8, [x0]
   1674c:	ldr	x8, [x8, #56]
   16750:	blr	x8
   16754:	add	w8, w0, #0x7c
   16758:	b	17358 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x135c>
   1675c:	cmp	w8, #0xc
   16760:	b.cs	176bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x16c0>  // b.hs, b.nlast
   16764:	cmp	w8, #0xb
   16768:	b.eq	1739c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13a0>  // b.none
   1676c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   16770:	add	x8, x8, x8, lsl #1
   16774:	add	x9, x9, #0x0
   16778:	ldrb	w8, [x9, x8]
   1677c:	ldr	w9, [x20, #24]
   16780:	cmp	w9, w8
   16784:	b.ls	176dc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x16e0>  // b.plast
   16788:	ldr	x9, [x20, #16]
   1678c:	add	x1, x9, x8, lsl #4
   16790:	b	17394 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1398>
   16794:	ldr	w9, [x24]
   16798:	cmp	w9, w8
   1679c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   167a0:	ldr	x9, [x19]
   167a4:	ldr	x8, [x9, x8, lsl #3]
   167a8:	ldr	w9, [x8, #48]
   167ac:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   167b0:	ldr	x8, [x8, #72]
   167b4:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   167b8:	ldr	w9, [x8]
   167bc:	cmp	w9, #0x1
   167c0:	b.eq	17294 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1298>  // b.none
   167c4:	b	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>
   167c8:	ldr	w9, [x24]
   167cc:	cmp	w9, w8
   167d0:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   167d4:	ldr	x9, [x19]
   167d8:	ldr	x8, [x9, x8, lsl #3]
   167dc:	ldr	w9, [x8, #48]
   167e0:	cmp	w9, #0x4
   167e4:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   167e8:	ldr	w8, [x8, #72]
   167ec:	mov	w9, #0x1                   	// #1
   167f0:	add	w8, w8, #0x140
   167f4:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   167f8:	ldr	w9, [x24]
   167fc:	cmp	w9, w8
   16800:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16804:	ldr	x9, [x19]
   16808:	ldr	x23, [x9, x8, lsl #3]
   1680c:	mov	x8, sp
   16810:	mov	x0, x23
   16814:	bl	18d4c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   16818:	ldrb	w8, [sp, #16]
   1681c:	cbz	w8, 173a8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13ac>
   16820:	ldr	x8, [sp]
   16824:	mov	w23, #0x2                   	// #2
   16828:	sub	x1, x29, #0x10
   1682c:	mov	x0, x21
   16830:	stp	x23, x8, [x29, #-16]
   16834:	bl	0 <LLVMInitializeAArch64AsmParser>
   16838:	ldr	w8, [sp, #8]
   1683c:	sub	x1, x29, #0x10
   16840:	mov	x0, x21
   16844:	stp	x23, x8, [x29, #-16]
   16848:	bl	0 <LLVMInitializeAArch64AsmParser>
   1684c:	strb	wzr, [sp, #16]
   16850:	b	1739c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13a0>
   16854:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   16858:	ldr	q0, [x8]
   1685c:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   16860:	ldr	w9, [x24]
   16864:	cmp	w9, w8
   16868:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1686c:	ldr	x9, [x19]
   16870:	ldr	x8, [x9, x8, lsl #3]
   16874:	ldr	w9, [x8, #48]
   16878:	cmp	w9, #0x4
   1687c:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   16880:	ldr	w8, [x8, #72]
   16884:	mov	w9, #0x1                   	// #1
   16888:	add	w8, w8, #0x13c
   1688c:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   16890:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   16894:	ldr	q0, [x8]
   16898:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   1689c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   168a0:	ldr	q0, [x8]
   168a4:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   168a8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   168ac:	ldr	q0, [x8]
   168b0:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   168b4:	ldr	w9, [x24]
   168b8:	cmp	w9, w8
   168bc:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   168c0:	ldr	x9, [x19]
   168c4:	ldr	x8, [x9, x8, lsl #3]
   168c8:	ldr	w9, [x8, #48]
   168cc:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   168d0:	ldr	x8, [x8, #72]
   168d4:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   168d8:	ldr	w9, [x8]
   168dc:	cmp	w9, #0x1
   168e0:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   168e4:	ldr	x8, [x8, #16]
   168e8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   168ec:	movk	x9, #0x5556
   168f0:	mov	w10, #0x2                   	// #2
   168f4:	smulh	x8, x8, x9
   168f8:	add	x8, x8, x8, lsr #63
   168fc:	b	174ec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14f0>
   16900:	ldr	w9, [x24]
   16904:	cmp	w9, w8
   16908:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1690c:	ldr	x9, [x19]
   16910:	ldr	x8, [x9, x8, lsl #3]
   16914:	ldr	w9, [x8, #48]
   16918:	cmp	w9, #0xd
   1691c:	b.eq	1719c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11a0>  // b.none
   16920:	b	176fc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1700>
   16924:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   16928:	ldr	q0, [x8]
   1692c:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   16930:	ldr	w9, [x24]
   16934:	cmp	w9, w8
   16938:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1693c:	ldr	x9, [x19]
   16940:	ldr	x9, [x9, x8, lsl #3]
   16944:	ldr	w8, [x9, #48]
   16948:	cmp	w8, #0x3
   1694c:	b.eq	17488 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x148c>  // b.none
   16950:	cmp	w8, #0xa
   16954:	b.ne	175ec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15f0>  // b.any
   16958:	ldr	w8, [x9, #72]
   1695c:	mov	w10, #0x8                   	// #8
   16960:	cmp	w8, #0x0
   16964:	csel	w8, w10, w8, eq  // eq = none
   16968:	add	x9, x9, #0x4c
   1696c:	b	1749c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14a0>
   16970:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   16974:	ldr	q0, [x8]
   16978:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   1697c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   16980:	ldr	q0, [x8]
   16984:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   16988:	ldr	w9, [x24]
   1698c:	cmp	w9, w8
   16990:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16994:	ldr	x9, [x19]
   16998:	ldr	x8, [x9, x8, lsl #3]
   1699c:	ldr	w9, [x8, #48]
   169a0:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   169a4:	ldr	x8, [x8, #72]
   169a8:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   169ac:	ldr	w9, [x8]
   169b0:	cmp	w9, #0x1
   169b4:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   169b8:	ldr	w8, [x8, #16]
   169bc:	str	xzr, [sp]
   169c0:	mvn	w8, w8
   169c4:	and	x0, x8, #0xffff
   169c8:	b	16e54 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe58>
   169cc:	ldr	w9, [x24]
   169d0:	cmp	w9, w8
   169d4:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   169d8:	ldr	x9, [x19]
   169dc:	ldr	x8, [x9, x8, lsl #3]
   169e0:	ldr	w9, [x8, #48]
   169e4:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   169e8:	ldr	x8, [x8, #72]
   169ec:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   169f0:	ldr	w9, [x8]
   169f4:	cmp	w9, #0x1
   169f8:	b.eq	16a60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xa64>  // b.none
   169fc:	b	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>
   16a00:	ldr	w9, [x24]
   16a04:	cmp	w9, w8
   16a08:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16a0c:	ldr	x9, [x19]
   16a10:	ldr	x8, [x9, x8, lsl #3]
   16a14:	ldr	w9, [x8, #48]
   16a18:	cmp	w9, #0x4
   16a1c:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   16a20:	ldr	w8, [x8, #72]
   16a24:	mov	w9, #0x1                   	// #1
   16a28:	add	w8, w8, #0x160
   16a2c:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   16a30:	ldr	w9, [x24]
   16a34:	cmp	w9, w8
   16a38:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16a3c:	ldr	x9, [x19]
   16a40:	ldr	x8, [x9, x8, lsl #3]
   16a44:	ldr	w9, [x8, #48]
   16a48:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16a4c:	ldr	x8, [x8, #72]
   16a50:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16a54:	ldr	w9, [x8]
   16a58:	cmp	w9, #0x1
   16a5c:	b.ne	172ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x12b0>  // b.any
   16a60:	ldr	x8, [x8, #16]
   16a64:	mov	w9, #0x2                   	// #2
   16a68:	add	x10, x8, #0x3
   16a6c:	cmp	x8, #0x0
   16a70:	csel	x8, x10, x8, lt  // lt = tstop
   16a74:	asr	x8, x8, #2
   16a78:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   16a7c:	ldr	w9, [x24]
   16a80:	cmp	w9, w8
   16a84:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16a88:	ldr	x9, [x19]
   16a8c:	ldr	x8, [x9, x8, lsl #3]
   16a90:	ldr	w9, [x8, #48]
   16a94:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16a98:	ldr	x8, [x8, #72]
   16a9c:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16aa0:	ldr	w9, [x8]
   16aa4:	cmp	w9, #0x1
   16aa8:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16aac:	ldrh	w8, [x8, #20]
   16ab0:	b	17384 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1388>
   16ab4:	ldr	w9, [x24]
   16ab8:	cmp	w9, w8
   16abc:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16ac0:	ldr	x9, [x19]
   16ac4:	ldr	x23, [x9, x8, lsl #3]
   16ac8:	ldr	x8, [x23]
   16acc:	mov	x0, x23
   16ad0:	ldr	x8, [x8, #56]
   16ad4:	blr	x8
   16ad8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16adc:	ldr	x8, [x8]
   16ae0:	mov	w9, w0
   16ae4:	lsr	x9, x9, #3
   16ae8:	ldrh	w10, [x8, #1238]
   16aec:	cmp	w9, w10
   16af0:	b.cs	1771c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1720>  // b.hs, b.nlast
   16af4:	ldr	x8, [x8, #1224]
   16af8:	ldrb	w8, [x8, x9]
   16afc:	and	w9, w0, #0x7
   16b00:	lsr	w8, w8, w9
   16b04:	tbz	w8, #0, 1771c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1720>
   16b08:	ldr	x8, [x23]
   16b0c:	mov	x0, x23
   16b10:	b	160ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xb0>
   16b14:	ldr	w9, [x24]
   16b18:	cmp	w9, w8
   16b1c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16b20:	ldr	x9, [x19]
   16b24:	ldr	x9, [x9, x8, lsl #3]
   16b28:	ldr	w8, [x9, #48]
   16b2c:	cmp	w8, #0x3
   16b30:	b.eq	174bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14c0>  // b.none
   16b34:	cmp	w8, #0xa
   16b38:	b.ne	175ec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15f0>  // b.any
   16b3c:	add	x8, x9, #0x48
   16b40:	add	x9, x9, #0x4c
   16b44:	b	174c4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14c8>
   16b48:	ldr	w9, [x24]
   16b4c:	cmp	w9, w8
   16b50:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16b54:	ldr	x9, [x19]
   16b58:	ldr	x8, [x9, x8, lsl #3]
   16b5c:	ldr	w9, [x8, #48]
   16b60:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16b64:	ldr	x8, [x8, #72]
   16b68:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16b6c:	ldr	w9, [x8]
   16b70:	cmp	w9, #0x1
   16b74:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16b78:	ldr	w0, [x8, #16]
   16b7c:	str	xzr, [sp]
   16b80:	b	16fe4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xfe8>
   16b84:	ldr	w9, [x24]
   16b88:	cmp	w9, w8
   16b8c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16b90:	ldr	x9, [x19]
   16b94:	ldr	x8, [x9, x8, lsl #3]
   16b98:	ldr	w9, [x8, #48]
   16b9c:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16ba0:	ldr	x8, [x8, #72]
   16ba4:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16ba8:	ldr	w9, [x8]
   16bac:	cmp	w9, #0x1
   16bb0:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16bb4:	ldr	x0, [x8, #16]
   16bb8:	str	xzr, [sp]
   16bbc:	b	16ccc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xcd0>
   16bc0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   16bc4:	ldr	q0, [x8]
   16bc8:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   16bcc:	ldr	w9, [x24]
   16bd0:	cmp	w9, w8
   16bd4:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16bd8:	ldr	x9, [x19]
   16bdc:	ldr	x23, [x9, x8, lsl #3]
   16be0:	ldr	x8, [x23]
   16be4:	mov	x0, x23
   16be8:	ldr	x8, [x8, #56]
   16bec:	blr	x8
   16bf0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16bf4:	ldr	x8, [x8]
   16bf8:	mov	w9, w0
   16bfc:	lsr	x9, x9, #3
   16c00:	ldrh	w10, [x8, #1238]
   16c04:	cmp	w9, w10
   16c08:	b.cs	1773c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1740>  // b.hs, b.nlast
   16c0c:	ldr	x8, [x8, #1224]
   16c10:	ldrb	w8, [x8, x9]
   16c14:	and	w9, w0, #0x7
   16c18:	lsr	w8, w8, w9
   16c1c:	tbz	w8, #0, 1773c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1740>
   16c20:	ldr	x8, [x23]
   16c24:	mov	x0, x23
   16c28:	ldr	x8, [x8, #56]
   16c2c:	blr	x8
   16c30:	sub	w8, w0, #0x50
   16c34:	b	17358 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x135c>
   16c38:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   16c3c:	ldr	q0, [x8]
   16c40:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   16c44:	ldr	w9, [x24]
   16c48:	cmp	w9, w8
   16c4c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16c50:	ldr	x9, [x19]
   16c54:	ldr	x0, [x9, x8, lsl #3]
   16c58:	mov	x8, sp
   16c5c:	bl	186a4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   16c60:	ldrb	w8, [sp, #16]
   16c64:	cbz	w8, 1775c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1760>
   16c68:	ldr	x8, [sp]
   16c6c:	mov	w23, #0x2                   	// #2
   16c70:	sub	x1, x29, #0x10
   16c74:	mov	x0, x21
   16c78:	neg	x8, x8
   16c7c:	stp	x23, x8, [x29, #-16]
   16c80:	bl	0 <LLVMInitializeAArch64AsmParser>
   16c84:	ldr	w8, [sp, #8]
   16c88:	stur	x23, [x29, #-16]
   16c8c:	b	173dc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13e0>
   16c90:	ldr	w9, [x24]
   16c94:	cmp	w9, w8
   16c98:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16c9c:	ldr	x9, [x19]
   16ca0:	ldr	x8, [x9, x8, lsl #3]
   16ca4:	ldr	w9, [x8, #48]
   16ca8:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16cac:	ldr	x8, [x8, #72]
   16cb0:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16cb4:	ldr	w9, [x8]
   16cb8:	cmp	w9, #0x1
   16cbc:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16cc0:	ldr	x8, [x8, #16]
   16cc4:	str	xzr, [sp]
   16cc8:	mvn	x0, x8
   16ccc:	mov	x2, sp
   16cd0:	mov	w1, #0x40                  	// #64
   16cd4:	b	16fec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xff0>
   16cd8:	ldr	w9, [x24]
   16cdc:	cmp	w9, w8
   16ce0:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16ce4:	ldr	x9, [x19]
   16ce8:	ldr	x8, [x9, x8, lsl #3]
   16cec:	ldr	w9, [x8, #48]
   16cf0:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16cf4:	ldr	x8, [x8, #72]
   16cf8:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16cfc:	ldr	w9, [x8]
   16d00:	cmp	w9, #0x1
   16d04:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16d08:	ldr	w8, [x8, #16]
   16d0c:	str	xzr, [sp]
   16d10:	mvn	w8, w8
   16d14:	and	x0, x8, #0xff
   16d18:	b	16f78 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xf7c>
   16d1c:	ldr	w9, [x24]
   16d20:	cmp	w9, w8
   16d24:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16d28:	ldr	x9, [x19]
   16d2c:	ldr	x0, [x9, x8, lsl #3]
   16d30:	ldr	x8, [x0]
   16d34:	ldr	x8, [x8, #56]
   16d38:	blr	x8
   16d3c:	add	w8, w0, #0xec
   16d40:	b	17358 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x135c>
   16d44:	ldr	w9, [x24]
   16d48:	cmp	w9, w8
   16d4c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16d50:	ldr	x9, [x19]
   16d54:	ldr	x23, [x9, x8, lsl #3]
   16d58:	mov	x0, x23
   16d5c:	bl	18488 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1ELj2EEEN4llvm19DiagnosticPredicateEv>
   16d60:	cbnz	w0, 17774 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1778>
   16d64:	mov	x0, x23
   16d68:	bl	191ec <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   16d6c:	cmp	w0, #0x0
   16d70:	mov	w8, #0x2                   	// #2
   16d74:	cset	w9, eq  // eq = none
   16d78:	stp	x8, x9, [sp]
   16d7c:	b	17390 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1394>
   16d80:	ldr	w9, [x24]
   16d84:	cmp	w9, w8
   16d88:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16d8c:	ldr	x9, [x19]
   16d90:	ldr	x8, [x9, x8, lsl #3]
   16d94:	ldr	w9, [x8, #48]
   16d98:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16d9c:	ldr	x8, [x8, #72]
   16da0:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16da4:	ldr	w9, [x8]
   16da8:	cmp	w9, #0x1
   16dac:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16db0:	ldr	x8, [x8, #16]
   16db4:	mov	w9, #0x2                   	// #2
   16db8:	tst	x8, #0xff000000000000
   16dbc:	cset	w11, ne  // ne = any
   16dc0:	tst	x8, #0xff0000000000
   16dc4:	cset	w12, ne  // ne = any
   16dc8:	tst	x8, #0xff00000000
   16dcc:	cset	w13, ne  // ne = any
   16dd0:	tst	x8, #0xff000000
   16dd4:	cset	w14, ne  // ne = any
   16dd8:	tst	x8, #0xff0000
   16ddc:	bfi	x13, x12, #1, #1
   16de0:	cset	w12, ne  // ne = any
   16de4:	tst	x8, #0xff00
   16de8:	cset	w15, ne  // ne = any
   16dec:	tst	x8, #0xff
   16df0:	lsr	x10, x8, #56
   16df4:	cset	w8, ne  // ne = any
   16df8:	bfi	x12, x14, #1, #1
   16dfc:	cmp	x10, #0x0
   16e00:	bfi	x8, x15, #1, #1
   16e04:	cset	w10, ne  // ne = any
   16e08:	bfi	x8, x12, #2, #2
   16e0c:	bfi	x11, x10, #1, #1
   16e10:	bfi	x8, x13, #4, #2
   16e14:	orr	x8, x8, x11, lsl #6
   16e18:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   16e1c:	ldr	w9, [x24]
   16e20:	cmp	w9, w8
   16e24:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16e28:	ldr	x9, [x19]
   16e2c:	ldr	x8, [x9, x8, lsl #3]
   16e30:	ldr	w9, [x8, #48]
   16e34:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16e38:	ldr	x8, [x8, #72]
   16e3c:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16e40:	ldr	w9, [x8]
   16e44:	cmp	w9, #0x1
   16e48:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16e4c:	ldrh	w0, [x8, #16]
   16e50:	str	xzr, [sp]
   16e54:	mov	x2, sp
   16e58:	mov	w1, #0x10                  	// #16
   16e5c:	b	16fec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xff0>
   16e60:	ldr	w9, [x24]
   16e64:	cmp	w9, w8
   16e68:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16e6c:	ldr	x9, [x19]
   16e70:	ldr	x8, [x9, x8, lsl #3]
   16e74:	ldr	w9, [x8, #48]
   16e78:	cmp	w9, #0x4
   16e7c:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   16e80:	ldr	w8, [x8, #72]
   16e84:	mov	w9, #0x1                   	// #1
   16e88:	add	w8, w8, #0xbc
   16e8c:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   16e90:	ldr	w9, [x24]
   16e94:	cmp	w9, w8
   16e98:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16e9c:	ldr	x9, [x19]
   16ea0:	ldr	x8, [x9, x8, lsl #3]
   16ea4:	ldr	w9, [x8, #48]
   16ea8:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16eac:	ldr	x8, [x8, #72]
   16eb0:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16eb4:	ldr	w9, [x8]
   16eb8:	cmp	w9, #0x1
   16ebc:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16ec0:	ldr	x8, [x8, #16]
   16ec4:	mov	w9, #0x2                   	// #2
   16ec8:	add	x10, x8, #0x7
   16ecc:	cmp	x8, #0x0
   16ed0:	csel	x8, x10, x8, lt  // lt = tstop
   16ed4:	asr	x8, x8, #3
   16ed8:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   16edc:	ldr	w9, [x24]
   16ee0:	cmp	w9, w8
   16ee4:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16ee8:	ldr	x9, [x19]
   16eec:	ldr	x8, [x9, x8, lsl #3]
   16ef0:	ldr	w9, [x8, #48]
   16ef4:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16ef8:	ldr	x1, [x8, #72]
   16efc:	cbz	x1, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16f00:	ldr	w8, [x1]
   16f04:	cmp	w8, #0x1
   16f08:	b.ne	16f1c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xf20>  // b.any
   16f0c:	ldr	x8, [x1, #16]
   16f10:	mov	w9, #0x2                   	// #2
   16f14:	asr	x8, x8, #12
   16f18:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   16f1c:	mov	x0, x20
   16f20:	bl	19588 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>
   16f24:	b	1739c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13a0>
   16f28:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   16f2c:	ldr	q0, [x8]
   16f30:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   16f34:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   16f38:	ldr	q0, [x8]
   16f3c:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   16f40:	ldr	w9, [x24]
   16f44:	cmp	w9, w8
   16f48:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16f4c:	ldr	x9, [x19]
   16f50:	ldr	x8, [x9, x8, lsl #3]
   16f54:	ldr	w9, [x8, #48]
   16f58:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16f5c:	ldr	x8, [x8, #72]
   16f60:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16f64:	ldr	w9, [x8]
   16f68:	cmp	w9, #0x1
   16f6c:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16f70:	ldrb	w0, [x8, #16]
   16f74:	str	xzr, [sp]
   16f78:	mov	x2, sp
   16f7c:	mov	w1, #0x8                   	// #8
   16f80:	b	16fec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xff0>
   16f84:	ldr	w9, [x24]
   16f88:	cmp	w9, w8
   16f8c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16f90:	ldr	x9, [x19]
   16f94:	ldr	x8, [x9, x8, lsl #3]
   16f98:	ldr	w9, [x8, #48]
   16f9c:	cmp	w9, #0x2
   16fa0:	b.eq	17380 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1384>  // b.none
   16fa4:	b	17794 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1798>
   16fa8:	ldr	w9, [x24]
   16fac:	cmp	w9, w8
   16fb0:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   16fb4:	ldr	x9, [x19]
   16fb8:	ldr	x8, [x9, x8, lsl #3]
   16fbc:	ldr	w9, [x8, #48]
   16fc0:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   16fc4:	ldr	x8, [x8, #72]
   16fc8:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   16fcc:	ldr	w9, [x8]
   16fd0:	cmp	w9, #0x1
   16fd4:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   16fd8:	ldr	w8, [x8, #16]
   16fdc:	str	xzr, [sp]
   16fe0:	mvn	w0, w8
   16fe4:	mov	x2, sp
   16fe8:	mov	w1, #0x20                  	// #32
   16fec:	bl	18948 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   16ff0:	tbz	w0, #0, 177b4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17b8>
   16ff4:	ldr	x8, [sp]
   16ff8:	b	17384 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1388>
   16ffc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   17000:	ldr	q0, [x8]
   17004:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   17008:	ldr	w9, [x24]
   1700c:	cmp	w9, w8
   17010:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   17014:	ldr	x9, [x19]
   17018:	ldr	x8, [x9, x8, lsl #3]
   1701c:	ldr	w9, [x8, #48]
   17020:	cmp	w9, #0x4
   17024:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   17028:	ldr	w8, [x8, #72]
   1702c:	mov	w9, #0x1                   	// #1
   17030:	add	w8, w8, #0x15c
   17034:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   17038:	ldr	w9, [x24]
   1703c:	cmp	w9, w8
   17040:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   17044:	ldr	x9, [x19]
   17048:	ldr	x8, [x9, x8, lsl #3]
   1704c:	ldr	w9, [x8, #48]
   17050:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   17054:	ldr	x8, [x8, #72]
   17058:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   1705c:	ldr	w9, [x8]
   17060:	cmp	w9, #0x1
   17064:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   17068:	ldrh	w8, [x8, #16]
   1706c:	b	17384 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1388>
   17070:	ldr	w9, [x24]
   17074:	cmp	w9, w8
   17078:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1707c:	ldr	x9, [x19]
   17080:	ldr	x8, [x9, x8, lsl #3]
   17084:	ldr	w9, [x8, #48]
   17088:	cmp	w9, #0x4
   1708c:	b.ne	175cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>  // b.any
   17090:	ldr	w8, [x8, #72]
   17094:	mov	w9, #0x1                   	// #1
   17098:	add	w8, w8, #0xfc
   1709c:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   170a0:	ldr	w9, [x24]
   170a4:	cmp	w9, w8
   170a8:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   170ac:	ldr	x9, [x19]
   170b0:	ldr	x8, [x9, x8, lsl #3]
   170b4:	ldr	w9, [x8, #48]
   170b8:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   170bc:	ldr	x8, [x8, #72]
   170c0:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   170c4:	ldr	w9, [x8]
   170c8:	cmp	w9, #0x1
   170cc:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   170d0:	ldrh	w8, [x8, #18]
   170d4:	b	17384 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1388>
   170d8:	ldr	w9, [x24]
   170dc:	cmp	w9, w8
   170e0:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   170e4:	ldr	x9, [x19]
   170e8:	ldr	x0, [x9, x8, lsl #3]
   170ec:	mov	x8, sp
   170f0:	bl	a7b8 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv>
   170f4:	add	x8, sp, #0x20
   170f8:	mov	x0, sp
   170fc:	bl	0 <LLVMInitializeAArch64AsmParser>
   17100:	add	x0, sp, #0x20
   17104:	bl	187a4 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE>
   17108:	sxtw	x8, w0
   1710c:	mov	w9, #0x2                   	// #2
   17110:	sub	x1, x29, #0x10
   17114:	mov	x0, x21
   17118:	stp	x9, x8, [x29, #-16]
   1711c:	bl	0 <LLVMInitializeAArch64AsmParser>
   17120:	ldr	w8, [sp, #40]
   17124:	cmp	w8, #0x41
   17128:	b.cc	17138 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x113c>  // b.lo, b.ul, b.last
   1712c:	ldr	x0, [sp, #32]
   17130:	cbz	x0, 17138 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x113c>
   17134:	bl	0 <_ZdaPv>
   17138:	mov	x0, x22
   1713c:	bl	0 <LLVMInitializeAArch64AsmParser>
   17140:	b	1739c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13a0>
   17144:	ldr	w9, [x24]
   17148:	cmp	w9, w8
   1714c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   17150:	ldr	x9, [x19]
   17154:	ldr	x8, [x9, x8, lsl #3]
   17158:	ldr	w9, [x8, #48]
   1715c:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   17160:	ldr	x8, [x8, #72]
   17164:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   17168:	ldr	w9, [x8]
   1716c:	cmp	w9, #0x1
   17170:	b.ne	175ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15b0>  // b.any
   17174:	ldr	w8, [x8, #16]
   17178:	mvn	w8, w8
   1717c:	mov	w9, #0x2                   	// #2
   17180:	and	x8, x8, #0xffff
   17184:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   17188:	ldr	w9, [x24]
   1718c:	cmp	w9, w8
   17190:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   17194:	ldr	x9, [x19]
   17198:	ldr	x8, [x9, x8, lsl #3]
   1719c:	ldr	w8, [x8, #84]
   171a0:	b	17384 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1388>
   171a4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   171a8:	ldr	q0, [x8]
   171ac:	b	171b8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11bc>
   171b0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   171b4:	ldr	q0, [x8]
   171b8:	str	q0, [sp]
   171bc:	b	17390 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1394>
   171c0:	ldr	w9, [x24]
   171c4:	cmp	w9, w8
   171c8:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   171cc:	ldr	x9, [x19]
   171d0:	ldr	x23, [x9, x8, lsl #3]
   171d4:	ldr	x8, [x23]
   171d8:	mov	x0, x23
   171dc:	ldr	x8, [x8, #56]
   171e0:	blr	x8
   171e4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   171e8:	ldr	x8, [x8]
   171ec:	mov	w9, w0
   171f0:	lsr	x9, x9, #3
   171f4:	ldrh	w10, [x8, #566]
   171f8:	cmp	w9, w10
   171fc:	b.cs	177d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17d8>  // b.hs, b.nlast
   17200:	ldr	x8, [x8, #552]
   17204:	ldrb	w8, [x8, x9]
   17208:	and	w9, w0, #0x7
   1720c:	lsr	w8, w8, w9
   17210:	tbz	w8, #0, 177d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17d8>
   17214:	ldr	x8, [x23, #104]
   17218:	ldr	x27, [x8, #24]
   1721c:	ldr	w8, [x27, #32]
   17220:	cmp	w8, #0x6
   17224:	b.ls	17814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1818>  // b.plast
   17228:	ldr	x8, [x23]
   1722c:	ldr	x28, [x27, #24]
   17230:	mov	x0, x23
   17234:	ldr	x8, [x8, #56]
   17238:	blr	x8
   1723c:	ldr	w8, [x27, #8]
   17240:	cmp	w8, w0
   17244:	b.ls	17834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1838>  // b.plast
   17248:	ldr	x8, [x27, #104]
   1724c:	ldrh	w9, [x28, #212]
   17250:	ldrh	w8, [x8, w0, uxtw #1]
   17254:	cmp	w9, w8
   17258:	b.ls	17854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1858>  // b.plast
   1725c:	ldr	x9, [x28, #192]
   17260:	b	17354 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1358>
   17264:	ldr	w9, [x24]
   17268:	cmp	w9, w8
   1726c:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   17270:	ldr	x9, [x19]
   17274:	ldr	x8, [x9, x8, lsl #3]
   17278:	ldr	w9, [x8, #48]
   1727c:	cbnz	w9, 1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>
   17280:	ldr	x8, [x8, #72]
   17284:	cbz	x8, 1756c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1570>
   17288:	ldr	w9, [x8]
   1728c:	cmp	w9, #0x1
   17290:	b.ne	172ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x12b0>  // b.any
   17294:	ldr	x8, [x8, #16]
   17298:	mov	w9, #0x2                   	// #2
   1729c:	cmp	x8, #0x0
   172a0:	cinc	x8, x8, lt  // lt = tstop
   172a4:	asr	x8, x8, #1
   172a8:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   172ac:	mov	w9, #0x4                   	// #4
   172b0:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   172b4:	ldr	w9, [x24]
   172b8:	cmp	w9, w8
   172bc:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   172c0:	ldr	x9, [x19]
   172c4:	ldr	x23, [x9, x8, lsl #3]
   172c8:	ldr	x8, [x23]
   172cc:	mov	x0, x23
   172d0:	ldr	x8, [x8, #56]
   172d4:	blr	x8
   172d8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   172dc:	ldr	x8, [x8]
   172e0:	mov	w9, w0
   172e4:	lsr	x9, x9, #3
   172e8:	ldrh	w10, [x8, #214]
   172ec:	cmp	w9, w10
   172f0:	b.cs	177f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17f8>  // b.hs, b.nlast
   172f4:	ldr	x8, [x8, #200]
   172f8:	ldrb	w8, [x8, x9]
   172fc:	and	w9, w0, #0x7
   17300:	lsr	w8, w8, w9
   17304:	tbz	w8, #0, 177f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17f8>
   17308:	ldr	x8, [x23, #104]
   1730c:	ldr	x27, [x8, #24]
   17310:	ldr	w8, [x27, #32]
   17314:	cmp	w8, #0x11
   17318:	b.ls	17814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1818>  // b.plast
   1731c:	ldr	x8, [x23]
   17320:	ldr	x28, [x27, #24]
   17324:	mov	x0, x23
   17328:	ldr	x8, [x8, #56]
   1732c:	blr	x8
   17330:	ldr	w8, [x27, #8]
   17334:	cmp	w8, w0
   17338:	b.ls	17834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1838>  // b.plast
   1733c:	ldr	x8, [x27, #104]
   17340:	ldrh	w9, [x28, #564]
   17344:	ldrh	w8, [x8, w0, uxtw #1]
   17348:	cmp	w9, w8
   1734c:	b.ls	17854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1858>  // b.plast
   17350:	ldr	x9, [x28, #544]
   17354:	ldrh	w8, [x9, x8, lsl #1]
   17358:	mov	w9, #0x1                   	// #1
   1735c:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   17360:	ldr	w9, [x24]
   17364:	cmp	w9, w8
   17368:	b.ls	1754c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1550>  // b.plast
   1736c:	ldr	x9, [x19]
   17370:	ldr	x8, [x9, x8, lsl #3]
   17374:	ldr	w9, [x8, #48]
   17378:	cmp	w9, #0x8
   1737c:	b.ne	17874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1878>  // b.any
   17380:	ldr	w8, [x8, #72]
   17384:	mov	w9, #0x2                   	// #2
   17388:	str	x9, [sp]
   1738c:	str	x8, [sp, #8]
   17390:	mov	x1, sp
   17394:	mov	x0, x21
   17398:	bl	0 <LLVMInitializeAArch64AsmParser>
   1739c:	ldrb	w8, [x25], #2
   173a0:	cbnz	w8, 16070 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x74>
   173a4:	b	17514 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1518>
   173a8:	ldr	w8, [x23, #48]
   173ac:	cbz	w8, 174f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14f8>
   173b0:	cmp	w8, #0x1
   173b4:	b.ne	1758c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1590>  // b.any
   173b8:	ldr	x1, [x23, #72]
   173bc:	mov	x0, x20
   173c0:	bl	19588 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>
   173c4:	ldr	w8, [x23, #48]
   173c8:	cmp	w8, #0x1
   173cc:	b.ne	17894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1898>  // b.any
   173d0:	ldr	w8, [x23, #80]
   173d4:	mov	w9, #0x2                   	// #2
   173d8:	stur	x9, [x29, #-16]
   173dc:	stur	x8, [x29, #-8]
   173e0:	b	1750c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1510>
   173e4:	add	x8, x23, #0x58
   173e8:	ldr	w8, [x8]
   173ec:	mov	w9, #0x2                   	// #2
   173f0:	mov	x1, sp
   173f4:	mov	x0, x21
   173f8:	sub	w8, w8, #0xb
   173fc:	cmp	w8, #0x2
   17400:	cset	w8, cc  // cc = lo, ul, last
   17404:	stp	x9, x8, [sp]
   17408:	bl	0 <LLVMInitializeAArch64AsmParser>
   1740c:	ldr	w8, [x23, #48]
   17410:	cmp	w8, #0x3
   17414:	b.eq	17428 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x142c>  // b.none
   17418:	cmp	w8, #0xa
   1741c:	b.ne	178b4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x18b8>  // b.any
   17420:	add	x8, x23, #0x4c
   17424:	b	1742c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1430>
   17428:	add	x8, x23, #0x5c
   1742c:	ldr	w8, [x8]
   17430:	mov	w9, #0x2                   	// #2
   17434:	cmp	w8, #0x0
   17438:	cset	w8, ne  // ne = any
   1743c:	b	17388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x138c>
   17440:	add	x8, x23, #0x58
   17444:	ldr	w8, [x8]
   17448:	mov	w27, #0x2                   	// #2
   1744c:	mov	x1, sp
   17450:	mov	x0, x21
   17454:	sub	w8, w8, #0xb
   17458:	cmp	w8, #0x2
   1745c:	cset	w8, cc  // cc = lo, ul, last
   17460:	stp	x27, x8, [sp]
   17464:	bl	0 <LLVMInitializeAArch64AsmParser>
   17468:	mov	x0, x23
   1746c:	bl	a890 <_ZNK12_GLOBAL__N_114AArch64Operand20hasShiftExtendAmountEv>
   17470:	and	x8, x0, #0x1
   17474:	str	x27, [sp]
   17478:	b	1738c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1390>
   1747c:	ldr	w8, [x9, #88]
   17480:	mov	w10, #0x7                   	// #7
   17484:	b	17490 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1494>
   17488:	ldr	w8, [x9, #88]
   1748c:	mov	w10, #0x8                   	// #8
   17490:	cmp	w8, #0x0
   17494:	csel	w8, w10, w8, eq  // eq = none
   17498:	add	x9, x9, #0x5c
   1749c:	ldr	w9, [x9]
   174a0:	cmp	w9, #0x8
   174a4:	b.cs	178cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x18d0>  // b.hs, b.nlast
   174a8:	sub	w8, w8, #0x5
   174ac:	cmp	w8, #0x8
   174b0:	b.cs	178ec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x18f0>  // b.hs, b.nlast
   174b4:	lsl	w8, w8, #3
   174b8:	b	174e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14e8>
   174bc:	add	x8, x9, #0x58
   174c0:	add	x9, x9, #0x5c
   174c4:	ldr	w9, [x9]
   174c8:	cmp	w9, #0x40
   174cc:	b.cs	17904 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1908>  // b.hs, b.nlast
   174d0:	ldr	w8, [x8]
   174d4:	cmp	w8, #0x5
   174d8:	b.cs	17924 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1928>  // b.hs, b.nlast
   174dc:	and	x9, x9, #0x3f
   174e0:	lsl	w8, w8, #6
   174e4:	mov	w10, #0x2                   	// #2
   174e8:	orr	x8, x8, x9
   174ec:	str	x10, [sp]
   174f0:	b	1738c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1390>
   174f4:	ldr	x1, [x23, #72]
   174f8:	mov	x0, x20
   174fc:	bl	19588 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>
   17500:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   17504:	ldr	q0, [x8]
   17508:	stur	q0, [x29, #-16]
   1750c:	sub	x1, x29, #0x10
   17510:	b	17394 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1398>
   17514:	ldp	x20, x19, [sp, #144]
   17518:	ldp	x22, x21, [sp, #128]
   1751c:	ldp	x24, x23, [sp, #112]
   17520:	ldp	x26, x25, [sp, #96]
   17524:	ldp	x28, x27, [sp, #80]
   17528:	ldp	x29, x30, [sp, #64]
   1752c:	add	sp, sp, #0xa0
   17530:	ret
   17534:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17538:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1753c:	add	x0, x0, #0x0
   17540:	add	x1, x1, #0x0
   17544:	mov	w2, #0x1949                	// #6473
   17548:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1754c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17550:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17554:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17558:	add	x0, x0, #0x0
   1755c:	add	x1, x1, #0x0
   17560:	add	x3, x3, #0x0
   17564:	mov	w2, #0x99                  	// #153
   17568:	bl	0 <__assert_fail>
   1756c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17570:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17574:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17578:	add	x0, x0, #0x0
   1757c:	add	x1, x1, #0x0
   17580:	add	x3, x3, #0x0
   17584:	mov	w2, #0x69                  	// #105
   17588:	bl	0 <__assert_fail>
   1758c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17590:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17594:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17598:	add	x0, x0, #0x0
   1759c:	add	x1, x1, #0x0
   175a0:	add	x3, x3, #0x0
   175a4:	mov	w2, #0x1f4                 	// #500
   175a8:	bl	0 <__assert_fail>
   175ac:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   175b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   175b4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   175b8:	add	x0, x0, #0x0
   175bc:	add	x1, x1, #0x0
   175c0:	add	x3, x3, #0x0
   175c4:	mov	w2, #0x108                 	// #264
   175c8:	bl	0 <__assert_fail>
   175cc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   175d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   175d4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   175d8:	add	x0, x0, #0x0
   175dc:	add	x1, x1, #0x0
   175e0:	add	x3, x3, #0x0
   175e4:	mov	w2, #0x226                 	// #550
   175e8:	bl	0 <__assert_fail>
   175ec:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   175f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   175f4:	add	x0, x0, #0x0
   175f8:	add	x1, x1, #0x0
   175fc:	mov	w2, #0x261                 	// #609
   17600:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   17604:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17608:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1760c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17610:	add	x0, x0, #0x0
   17614:	add	x1, x1, #0x0
   17618:	add	x3, x3, #0x0
   1761c:	mov	w2, #0x23f                 	// #575
   17620:	bl	0 <__assert_fail>
   17624:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17628:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1762c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17630:	add	x0, x0, #0x0
   17634:	add	x1, x1, #0x0
   17638:	add	x3, x3, #0x0
   1763c:	mov	w2, #0x212                 	// #530
   17640:	bl	0 <__assert_fail>
   17644:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17648:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1764c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17650:	add	x0, x0, #0x0
   17654:	add	x1, x1, #0x0
   17658:	add	x3, x3, #0x0
   1765c:	mov	w2, #0x230                 	// #560
   17660:	bl	0 <__assert_fail>
   17664:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17668:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1766c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17670:	add	x0, x0, #0x0
   17674:	add	x1, x1, #0x0
   17678:	add	x3, x3, #0x0
   1767c:	b	1778c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1790>
   17680:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17684:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17688:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1768c:	add	x0, x0, #0x0
   17690:	add	x1, x1, #0x0
   17694:	add	x3, x3, #0x0
   17698:	mov	w2, #0x24e                 	// #590
   1769c:	bl	0 <__assert_fail>
   176a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   176a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   176a8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   176ac:	add	x0, x0, #0x0
   176b0:	add	x1, x1, #0x0
   176b4:	add	x3, x3, #0x0
   176b8:	b	1778c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1790>
   176bc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   176c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   176c4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   176c8:	add	x0, x0, #0x0
   176cc:	add	x1, x1, #0x0
   176d0:	add	x3, x3, #0x0
   176d4:	mov	w2, #0x1950                	// #6480
   176d8:	bl	0 <__assert_fail>
   176dc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   176e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   176e4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   176e8:	add	x0, x0, #0x0
   176ec:	add	x1, x1, #0x0
   176f0:	add	x3, x3, #0x0
   176f4:	mov	w2, #0x95                  	// #149
   176f8:	bl	0 <__assert_fail>
   176fc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17700:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17704:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17708:	add	x0, x0, #0x0
   1770c:	add	x1, x1, #0x0
   17710:	add	x3, x3, #0x0
   17714:	mov	w2, #0x244                 	// #580
   17718:	bl	0 <__assert_fail>
   1771c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17720:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17724:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17728:	add	x0, x0, #0x0
   1772c:	add	x1, x1, #0x0
   17730:	add	x3, x3, #0x0
   17734:	mov	w2, #0x5c7                 	// #1479
   17738:	bl	0 <__assert_fail>
   1773c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17740:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17744:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17748:	add	x0, x0, #0x0
   1774c:	add	x1, x1, #0x0
   17750:	add	x3, x3, #0x0
   17754:	mov	w2, #0x5c0                 	// #1472
   17758:	bl	0 <__assert_fail>
   1775c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17760:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17764:	add	x0, x0, #0x0
   17768:	add	x1, x1, #0x0
   1776c:	mov	w2, #0x617                 	// #1559
   17770:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   17774:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17778:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1777c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17780:	add	x0, x0, #0x0
   17784:	add	x1, x1, #0x0
   17788:	add	x3, x3, #0x0
   1778c:	mov	w2, #0x5f5                 	// #1525
   17790:	bl	0 <__assert_fail>
   17794:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17798:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1779c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   177a0:	add	x0, x0, #0x0
   177a4:	add	x1, x1, #0x0
   177a8:	add	x3, x3, #0x0
   177ac:	mov	w2, #0x203                 	// #515
   177b0:	bl	0 <__assert_fail>
   177b4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   177b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   177bc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   177c0:	add	x0, x0, #0x0
   177c4:	add	x1, x1, #0x0
   177c8:	add	x3, x3, #0x0
   177cc:	mov	w2, #0x11d                 	// #285
   177d0:	bl	0 <__assert_fail>
   177d4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   177d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   177dc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   177e0:	add	x0, x0, #0x0
   177e4:	add	x1, x1, #0x0
   177e8:	add	x3, x3, #0x0
   177ec:	mov	w2, #0x599                 	// #1433
   177f0:	bl	0 <__assert_fail>
   177f4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   177f8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   177fc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17800:	add	x0, x0, #0x0
   17804:	add	x1, x1, #0x0
   17808:	add	x3, x3, #0x0
   1780c:	mov	w2, #0x5a5                 	// #1445
   17810:	bl	0 <__assert_fail>
   17814:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17818:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1781c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17820:	add	x0, x0, #0x0
   17824:	add	x1, x1, #0x0
   17828:	add	x3, x3, #0x0
   1782c:	mov	w2, #0x219                 	// #537
   17830:	bl	0 <__assert_fail>
   17834:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17838:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1783c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17840:	add	x0, x0, #0x0
   17844:	add	x1, x1, #0x0
   17848:	add	x3, x3, #0x0
   1784c:	mov	w2, #0x224                 	// #548
   17850:	bl	0 <__assert_fail>
   17854:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17858:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1785c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17860:	add	x0, x0, #0x0
   17864:	add	x1, x1, #0x0
   17868:	add	x3, x3, #0x0
   1786c:	mov	w2, #0x3d                  	// #61
   17870:	bl	0 <__assert_fail>
   17874:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17878:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1787c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17880:	add	x0, x0, #0x0
   17884:	add	x1, x1, #0x0
   17888:	add	x3, x3, #0x0
   1788c:	mov	w2, #0x23a                 	// #570
   17890:	bl	0 <__assert_fail>
   17894:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17898:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1789c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   178a0:	add	x0, x0, #0x0
   178a4:	add	x1, x1, #0x0
   178a8:	add	x3, x3, #0x0
   178ac:	mov	w2, #0x1fe                 	// #510
   178b0:	bl	0 <__assert_fail>
   178b4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   178b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   178bc:	add	x0, x0, #0x0
   178c0:	add	x1, x1, #0x0
   178c4:	mov	w2, #0x269                 	// #617
   178c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   178cc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   178d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   178d4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   178d8:	add	x0, x0, #0x0
   178dc:	add	x1, x1, #0x0
   178e0:	add	x3, x3, #0x0
   178e4:	mov	w2, #0xac                  	// #172
   178e8:	bl	0 <__assert_fail>
   178ec:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   178f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   178f4:	add	x0, x0, #0x0
   178f8:	add	x1, x1, #0x0
   178fc:	mov	w2, #0x99                  	// #153
   17900:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   17904:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17908:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1790c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17910:	add	x0, x0, #0x0
   17914:	add	x1, x1, #0x0
   17918:	add	x3, x3, #0x0
   1791c:	mov	w2, #0x64                  	// #100
   17920:	bl	0 <__assert_fail>
   17924:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17928:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1792c:	add	x0, x0, #0x0
   17930:	add	x1, x1, #0x0
   17934:	mov	w2, #0x67                  	// #103
   17938:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1793c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17940:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17944:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17948:	add	x0, x0, #0x0
   1794c:	add	x1, x1, #0x0
   17950:	add	x3, x3, #0x0
   17954:	mov	w2, #0x1942                	// #6466
   17958:	bl	0 <__assert_fail>

000000000001795c <_ZNK12_GLOBAL__N_114AArch64Operand12isImmInRangeILi0ELi31EEEbv>:
   1795c:	stp	x29, x30, [sp, #-32]!
   17960:	str	x19, [sp, #16]
   17964:	mov	x29, sp
   17968:	ldr	x8, [x0]
   1796c:	mov	x19, x0
   17970:	ldr	x8, [x8, #40]
   17974:	blr	x8
   17978:	tbz	w0, #0, 179a8 <_ZNK12_GLOBAL__N_114AArch64Operand12isImmInRangeILi0ELi31EEEbv+0x4c>
   1797c:	ldr	w8, [x19, #48]
   17980:	cbnz	w8, 179b8 <_ZNK12_GLOBAL__N_114AArch64Operand12isImmInRangeILi0ELi31EEEbv+0x5c>
   17984:	ldr	x8, [x19, #72]
   17988:	cbz	x8, 179d8 <_ZNK12_GLOBAL__N_114AArch64Operand12isImmInRangeILi0ELi31EEEbv+0x7c>
   1798c:	ldr	w9, [x8]
   17990:	cmp	w9, #0x1
   17994:	b.ne	179a8 <_ZNK12_GLOBAL__N_114AArch64Operand12isImmInRangeILi0ELi31EEEbv+0x4c>  // b.any
   17998:	ldr	x8, [x8, #16]
   1799c:	cmp	x8, #0x20
   179a0:	cset	w0, cc  // cc = lo, ul, last
   179a4:	b	179ac <_ZNK12_GLOBAL__N_114AArch64Operand12isImmInRangeILi0ELi31EEEbv+0x50>
   179a8:	mov	w0, wzr
   179ac:	ldr	x19, [sp, #16]
   179b0:	ldp	x29, x30, [sp], #32
   179b4:	ret
   179b8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   179bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   179c0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   179c4:	add	x0, x0, #0x0
   179c8:	add	x1, x1, #0x0
   179cc:	add	x3, x3, #0x0
   179d0:	mov	w2, #0x1f4                 	// #500
   179d4:	bl	0 <__assert_fail>
   179d8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   179dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   179e0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   179e4:	add	x0, x0, #0x0
   179e8:	add	x1, x1, #0x0
   179ec:	add	x3, x3, #0x0
   179f0:	mov	w2, #0x69                  	// #105
   179f4:	bl	0 <__assert_fail>

00000000000179f8 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIiEEbv>:
   179f8:	stp	x29, x30, [sp, #-32]!
   179fc:	str	x19, [sp, #16]
   17a00:	mov	x29, sp
   17a04:	ldr	x8, [x0]
   17a08:	mov	x19, x0
   17a0c:	ldr	x8, [x8, #40]
   17a10:	blr	x8
   17a14:	tbz	w0, #0, 17a50 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIiEEbv+0x58>
   17a18:	ldr	w8, [x19, #48]
   17a1c:	cbnz	w8, 17a78 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIiEEbv+0x80>
   17a20:	ldr	x8, [x19, #72]
   17a24:	cbz	x8, 17a98 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIiEEbv+0xa0>
   17a28:	ldr	w9, [x8]
   17a2c:	cmp	w9, #0x1
   17a30:	b.ne	17a50 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIiEEbv+0x58>  // b.any
   17a34:	ldr	x8, [x8, #16]
   17a38:	lsr	x9, x8, #32
   17a3c:	cbz	x9, 17a64 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIiEEbv+0x6c>
   17a40:	mov	w9, #0x80000000            	// #-2147483648
   17a44:	add	x9, x8, x9
   17a48:	lsr	x9, x9, #32
   17a4c:	cbz	x9, 17a64 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIiEEbv+0x6c>
   17a50:	mov	w0, wzr
   17a54:	ldr	x19, [sp, #16]
   17a58:	and	w0, w0, #0x1
   17a5c:	ldp	x29, x30, [sp], #32
   17a60:	ret
   17a64:	and	x0, x8, #0xffffffff
   17a68:	add	x2, x29, #0x18
   17a6c:	mov	w1, #0x20                  	// #32
   17a70:	bl	18948 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   17a74:	b	17a54 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIiEEbv+0x5c>
   17a78:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17a7c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17a80:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17a84:	add	x0, x0, #0x0
   17a88:	add	x1, x1, #0x0
   17a8c:	add	x3, x3, #0x0
   17a90:	mov	w2, #0x1f4                 	// #500
   17a94:	bl	0 <__assert_fail>
   17a98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17a9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17aa0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17aa4:	add	x0, x0, #0x0
   17aa8:	add	x1, x1, #0x0
   17aac:	add	x3, x3, #0x0
   17ab0:	mov	w2, #0x69                  	// #105
   17ab4:	bl	0 <__assert_fail>

0000000000017ab8 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIlEEbv>:
   17ab8:	stp	x29, x30, [sp, #-32]!
   17abc:	str	x19, [sp, #16]
   17ac0:	mov	x29, sp
   17ac4:	ldr	x8, [x0]
   17ac8:	mov	x19, x0
   17acc:	ldr	x8, [x8, #40]
   17ad0:	blr	x8
   17ad4:	tbz	w0, #0, 17b08 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIlEEbv+0x50>
   17ad8:	ldr	w8, [x19, #48]
   17adc:	cbnz	w8, 17b1c <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIlEEbv+0x64>
   17ae0:	ldr	x8, [x19, #72]
   17ae4:	cbz	x8, 17b3c <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIlEEbv+0x84>
   17ae8:	ldr	w9, [x8]
   17aec:	cmp	w9, #0x1
   17af0:	b.ne	17b08 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIlEEbv+0x50>  // b.any
   17af4:	ldr	x0, [x8, #16]
   17af8:	add	x2, x29, #0x18
   17afc:	mov	w1, #0x40                  	// #64
   17b00:	bl	18948 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   17b04:	b	17b0c <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIlEEbv+0x54>
   17b08:	mov	w0, wzr
   17b0c:	ldr	x19, [sp, #16]
   17b10:	and	w0, w0, #0x1
   17b14:	ldp	x29, x30, [sp], #32
   17b18:	ret
   17b1c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17b20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17b24:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17b28:	add	x0, x0, #0x0
   17b2c:	add	x1, x1, #0x0
   17b30:	add	x3, x3, #0x0
   17b34:	mov	w2, #0x1f4                 	// #500
   17b38:	bl	0 <__assert_fail>
   17b3c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17b40:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17b44:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17b48:	add	x0, x0, #0x0
   17b4c:	add	x1, x1, #0x0
   17b50:	add	x3, x3, #0x0
   17b54:	mov	w2, #0x69                  	// #105
   17b58:	bl	0 <__assert_fail>

0000000000017b5c <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv>:
   17b5c:	stp	x29, x30, [sp, #-32]!
   17b60:	str	x19, [sp, #16]
   17b64:	mov	x29, sp
   17b68:	ldr	x8, [x0]
   17b6c:	mov	x19, x0
   17b70:	ldr	x8, [x8, #40]
   17b74:	blr	x8
   17b78:	tbz	w0, #0, 17bac <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv+0x50>
   17b7c:	ldr	w8, [x19, #48]
   17b80:	cbnz	w8, 17bbc <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv+0x60>
   17b84:	ldr	x8, [x19, #72]
   17b88:	cbz	x8, 17bdc <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv+0x80>
   17b8c:	ldr	w9, [x8]
   17b90:	cmp	w9, #0x1
   17b94:	b.ne	17bac <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv+0x50>  // b.any
   17b98:	ldr	x8, [x8, #16]
   17b9c:	add	x8, x8, #0x100
   17ba0:	cmp	x8, #0x200
   17ba4:	cset	w0, cc  // cc = lo, ul, last
   17ba8:	b	17bb0 <_ZNK12_GLOBAL__N_114AArch64Operand6isSImmILi9EEEbv+0x54>
   17bac:	mov	w0, wzr
   17bb0:	ldr	x19, [sp, #16]
   17bb4:	ldp	x29, x30, [sp], #32
   17bb8:	ret
   17bbc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17bc0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17bc4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17bc8:	add	x0, x0, #0x0
   17bcc:	add	x1, x1, #0x0
   17bd0:	add	x3, x3, #0x0
   17bd4:	mov	w2, #0x1f4                 	// #500
   17bd8:	bl	0 <__assert_fail>
   17bdc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17be0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17be4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17be8:	add	x0, x0, #0x0
   17bec:	add	x1, x1, #0x0
   17bf0:	add	x3, x3, #0x0
   17bf4:	mov	w2, #0x69                  	// #105
   17bf8:	bl	0 <__assert_fail>

0000000000017bfc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv>:
   17bfc:	sub	sp, sp, #0x40
   17c00:	stp	x29, x30, [sp, #32]
   17c04:	str	x19, [sp, #48]
   17c08:	add	x29, sp, #0x20
   17c0c:	ldr	w8, [x0, #48]
   17c10:	mov	x19, x0
   17c14:	cmp	w8, #0x1
   17c18:	b.ne	17c6c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0x70>  // b.any
   17c1c:	add	x8, sp, #0x8
   17c20:	mov	x0, x19
   17c24:	bl	18d4c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   17c28:	ldrb	w8, [sp, #24]
   17c2c:	cbz	w8, 17c64 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0x68>
   17c30:	ldr	x8, [sp, #8]
   17c34:	ldr	w9, [sp, #16]
   17c38:	strb	wzr, [sp, #24]
   17c3c:	lsl	x8, x8, x9
   17c40:	tst	x8, #0xffffffffffff00ff
   17c44:	b.eq	17ca4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xa8>  // b.none
   17c48:	add	x9, x8, #0x80
   17c4c:	cmp	x9, #0x100
   17c50:	b.cc	17ca4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xa8>  // b.lo, b.ul, b.last
   17c54:	and	w9, w8, #0xff00
   17c58:	sxth	x9, w9
   17c5c:	cmp	x8, x9
   17c60:	b.eq	17ca4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xa8>  // b.none
   17c64:	mov	w0, #0x1                   	// #1
   17c68:	b	17ca8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xac>
   17c6c:	ldr	x8, [x19]
   17c70:	mov	x0, x19
   17c74:	ldr	x8, [x8, #40]
   17c78:	blr	x8
   17c7c:	tbz	w0, #0, 17c9c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xa0>
   17c80:	ldr	w8, [x19, #48]
   17c84:	cbnz	w8, 17cb8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xbc>
   17c88:	ldr	x8, [x19, #72]
   17c8c:	cbz	x8, 17cd8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xdc>
   17c90:	ldr	w8, [x8]
   17c94:	cmp	w8, #0x1
   17c98:	b.eq	17c1c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0x20>  // b.none
   17c9c:	mov	w0, #0x2                   	// #2
   17ca0:	b	17ca8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xac>
   17ca4:	mov	x0, xzr
   17ca8:	ldr	x19, [sp, #48]
   17cac:	ldp	x29, x30, [sp, #32]
   17cb0:	add	sp, sp, #0x40
   17cb4:	ret
   17cb8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17cbc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17cc0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17cc4:	add	x0, x0, #0x0
   17cc8:	add	x1, x1, #0x0
   17ccc:	add	x3, x3, #0x0
   17cd0:	mov	w2, #0x1f4                 	// #500
   17cd4:	bl	0 <__assert_fail>
   17cd8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17cdc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17ce0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17ce4:	add	x0, x0, #0x0
   17ce8:	add	x1, x1, #0x0
   17cec:	add	x3, x3, #0x0
   17cf0:	mov	w2, #0x69                  	// #105
   17cf4:	bl	0 <__assert_fail>

0000000000017cf8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv>:
   17cf8:	sub	sp, sp, #0x40
   17cfc:	stp	x29, x30, [sp, #32]
   17d00:	str	x19, [sp, #48]
   17d04:	add	x29, sp, #0x20
   17d08:	ldr	w8, [x0, #48]
   17d0c:	mov	x19, x0
   17d10:	cmp	w8, #0x1
   17d14:	b.ne	17d5c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x64>  // b.any
   17d18:	add	x8, sp, #0x8
   17d1c:	mov	x0, x19
   17d20:	bl	18d4c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   17d24:	ldrb	w8, [sp, #24]
   17d28:	cbz	w8, 17d54 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x5c>
   17d2c:	ldr	x8, [sp, #8]
   17d30:	ldr	w9, [sp, #16]
   17d34:	strb	wzr, [sp, #24]
   17d38:	lsl	x8, x8, x9
   17d3c:	cmp	x8, w8, sxtb
   17d40:	b.eq	17d94 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x9c>  // b.none
   17d44:	sxth	x9, w8
   17d48:	and	x9, x9, #0xffffffffffffff00
   17d4c:	cmp	x9, x8
   17d50:	b.eq	17d94 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x9c>  // b.none
   17d54:	mov	w0, #0x1                   	// #1
   17d58:	b	17d98 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xa0>
   17d5c:	ldr	x8, [x19]
   17d60:	mov	x0, x19
   17d64:	ldr	x8, [x8, #40]
   17d68:	blr	x8
   17d6c:	tbz	w0, #0, 17d8c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x94>
   17d70:	ldr	w8, [x19, #48]
   17d74:	cbnz	w8, 17da8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xb0>
   17d78:	ldr	x8, [x19, #72]
   17d7c:	cbz	x8, 17dc8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xd0>
   17d80:	ldr	w8, [x8]
   17d84:	cmp	w8, #0x1
   17d88:	b.eq	17d18 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x20>  // b.none
   17d8c:	mov	w0, #0x2                   	// #2
   17d90:	b	17d98 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xa0>
   17d94:	mov	x0, xzr
   17d98:	ldr	x19, [sp, #48]
   17d9c:	ldp	x29, x30, [sp, #32]
   17da0:	add	sp, sp, #0x40
   17da4:	ret
   17da8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17dac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17db0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17db4:	add	x0, x0, #0x0
   17db8:	add	x1, x1, #0x0
   17dbc:	add	x3, x3, #0x0
   17dc0:	mov	w2, #0x1f4                 	// #500
   17dc4:	bl	0 <__assert_fail>
   17dc8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17dcc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17dd0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17dd4:	add	x0, x0, #0x0
   17dd8:	add	x1, x1, #0x0
   17ddc:	add	x3, x3, #0x0
   17de0:	mov	w2, #0x69                  	// #105
   17de4:	bl	0 <__assert_fail>

0000000000017de8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv>:
   17de8:	sub	sp, sp, #0x40
   17dec:	stp	x29, x30, [sp, #32]
   17df0:	str	x19, [sp, #48]
   17df4:	add	x29, sp, #0x20
   17df8:	ldr	w8, [x0, #48]
   17dfc:	mov	x19, x0
   17e00:	cmp	w8, #0x1
   17e04:	b.ne	17e4c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x64>  // b.any
   17e08:	add	x8, sp, #0x8
   17e0c:	mov	x0, x19
   17e10:	bl	18d4c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   17e14:	ldrb	w8, [sp, #24]
   17e18:	cbz	w8, 17e44 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x5c>
   17e1c:	ldr	x8, [sp, #8]
   17e20:	ldr	w9, [sp, #16]
   17e24:	strb	wzr, [sp, #24]
   17e28:	lsl	x8, x8, x9
   17e2c:	cmp	x8, w8, sxtb
   17e30:	b.eq	17e84 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x9c>  // b.none
   17e34:	sxth	x9, w8
   17e38:	and	x9, x9, #0xffffffffffffff00
   17e3c:	cmp	x9, x8
   17e40:	b.eq	17e84 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x9c>  // b.none
   17e44:	mov	w0, #0x1                   	// #1
   17e48:	b	17e88 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xa0>
   17e4c:	ldr	x8, [x19]
   17e50:	mov	x0, x19
   17e54:	ldr	x8, [x8, #40]
   17e58:	blr	x8
   17e5c:	tbz	w0, #0, 17e7c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x94>
   17e60:	ldr	w8, [x19, #48]
   17e64:	cbnz	w8, 17e98 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xb0>
   17e68:	ldr	x8, [x19, #72]
   17e6c:	cbz	x8, 17eb8 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xd0>
   17e70:	ldr	w8, [x8]
   17e74:	cmp	w8, #0x1
   17e78:	b.eq	17e08 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x20>  // b.none
   17e7c:	mov	w0, #0x2                   	// #2
   17e80:	b	17e88 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xa0>
   17e84:	mov	x0, xzr
   17e88:	ldr	x19, [sp, #48]
   17e8c:	ldp	x29, x30, [sp, #32]
   17e90:	add	sp, sp, #0x40
   17e94:	ret
   17e98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17e9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17ea0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17ea4:	add	x0, x0, #0x0
   17ea8:	add	x1, x1, #0x0
   17eac:	add	x3, x3, #0x0
   17eb0:	mov	w2, #0x1f4                 	// #500
   17eb4:	bl	0 <__assert_fail>
   17eb8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17ebc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17ec0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17ec4:	add	x0, x0, #0x0
   17ec8:	add	x1, x1, #0x0
   17ecc:	add	x3, x3, #0x0
   17ed0:	mov	w2, #0x69                  	// #105
   17ed4:	bl	0 <__assert_fail>

0000000000017ed8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi16EEEbv>:
   17ed8:	stp	x29, x30, [sp, #-32]!
   17edc:	str	x19, [sp, #16]
   17ee0:	mov	x29, sp
   17ee4:	ldr	x8, [x0]
   17ee8:	mov	x19, x0
   17eec:	ldr	x8, [x8, #40]
   17ef0:	blr	x8
   17ef4:	tbz	w0, #0, 17f30 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi16EEEbv+0x58>
   17ef8:	ldr	w8, [x19, #48]
   17efc:	cbnz	w8, 17f4c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi16EEEbv+0x74>
   17f00:	ldr	x0, [x19, #72]
   17f04:	cbz	x0, 17f6c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi16EEEbv+0x94>
   17f08:	ldr	w8, [x0]
   17f0c:	cmp	w8, #0x1
   17f10:	b.ne	17f40 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi16EEEbv+0x68>  // b.any
   17f14:	ldr	x8, [x0, #16]
   17f18:	tst	x8, #0x800000000000000f
   17f1c:	cset	w9, eq  // eq = none
   17f20:	cmp	x8, #0x10, lsl #12
   17f24:	cset	w8, lt  // lt = tstop
   17f28:	and	w0, w8, w9
   17f2c:	b	17f34 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi16EEEbv+0x5c>
   17f30:	mov	w0, wzr
   17f34:	ldr	x19, [sp, #16]
   17f38:	ldp	x29, x30, [sp], #32
   17f3c:	ret
   17f40:	ldr	x19, [sp, #16]
   17f44:	ldp	x29, x30, [sp], #32
   17f48:	b	18e4c <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   17f4c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17f50:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17f54:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17f58:	add	x0, x0, #0x0
   17f5c:	add	x1, x1, #0x0
   17f60:	add	x3, x3, #0x0
   17f64:	mov	w2, #0x1f4                 	// #500
   17f68:	bl	0 <__assert_fail>
   17f6c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17f70:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17f74:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   17f78:	add	x0, x0, #0x0
   17f7c:	add	x1, x1, #0x0
   17f80:	add	x3, x3, #0x0
   17f84:	mov	w2, #0x69                  	// #105
   17f88:	bl	0 <__assert_fail>

0000000000017f8c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi1EEEbv>:
   17f8c:	stp	x29, x30, [sp, #-32]!
   17f90:	str	x19, [sp, #16]
   17f94:	mov	x29, sp
   17f98:	ldr	x8, [x0]
   17f9c:	mov	x19, x0
   17fa0:	ldr	x8, [x8, #40]
   17fa4:	blr	x8
   17fa8:	tbz	w0, #0, 17fd8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi1EEEbv+0x4c>
   17fac:	ldr	w8, [x19, #48]
   17fb0:	cbnz	w8, 17ff4 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi1EEEbv+0x68>
   17fb4:	ldr	x0, [x19, #72]
   17fb8:	cbz	x0, 18014 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi1EEEbv+0x88>
   17fbc:	ldr	w8, [x0]
   17fc0:	cmp	w8, #0x1
   17fc4:	b.ne	17fe8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi1EEEbv+0x5c>  // b.any
   17fc8:	ldr	x8, [x0, #16]
   17fcc:	cmp	x8, #0x1, lsl #12
   17fd0:	cset	w0, cc  // cc = lo, ul, last
   17fd4:	b	17fdc <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi1EEEbv+0x50>
   17fd8:	mov	w0, wzr
   17fdc:	ldr	x19, [sp, #16]
   17fe0:	ldp	x29, x30, [sp], #32
   17fe4:	ret
   17fe8:	ldr	x19, [sp, #16]
   17fec:	ldp	x29, x30, [sp], #32
   17ff0:	b	18e4c <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   17ff4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   17ff8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   17ffc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18000:	add	x0, x0, #0x0
   18004:	add	x1, x1, #0x0
   18008:	add	x3, x3, #0x0
   1800c:	mov	w2, #0x1f4                 	// #500
   18010:	bl	0 <__assert_fail>
   18014:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18018:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1801c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18020:	add	x0, x0, #0x0
   18024:	add	x1, x1, #0x0
   18028:	add	x3, x3, #0x0
   1802c:	mov	w2, #0x69                  	// #105
   18030:	bl	0 <__assert_fail>

0000000000018034 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi2EEEbv>:
   18034:	stp	x29, x30, [sp, #-32]!
   18038:	str	x19, [sp, #16]
   1803c:	mov	x29, sp
   18040:	ldr	x8, [x0]
   18044:	mov	x19, x0
   18048:	ldr	x8, [x8, #40]
   1804c:	blr	x8
   18050:	tbz	w0, #0, 1808c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi2EEEbv+0x58>
   18054:	ldr	w8, [x19, #48]
   18058:	cbnz	w8, 180a8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi2EEEbv+0x74>
   1805c:	ldr	x0, [x19, #72]
   18060:	cbz	x0, 180c8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi2EEEbv+0x94>
   18064:	ldr	w8, [x0]
   18068:	cmp	w8, #0x1
   1806c:	b.ne	1809c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi2EEEbv+0x68>  // b.any
   18070:	ldr	x8, [x0, #16]
   18074:	tst	x8, #0x8000000000000001
   18078:	cset	w9, eq  // eq = none
   1807c:	cmp	x8, #0x2, lsl #12
   18080:	cset	w8, lt  // lt = tstop
   18084:	and	w0, w8, w9
   18088:	b	18090 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi2EEEbv+0x5c>
   1808c:	mov	w0, wzr
   18090:	ldr	x19, [sp, #16]
   18094:	ldp	x29, x30, [sp], #32
   18098:	ret
   1809c:	ldr	x19, [sp, #16]
   180a0:	ldp	x29, x30, [sp], #32
   180a4:	b	18e4c <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   180a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   180ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   180b0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   180b4:	add	x0, x0, #0x0
   180b8:	add	x1, x1, #0x0
   180bc:	add	x3, x3, #0x0
   180c0:	mov	w2, #0x1f4                 	// #500
   180c4:	bl	0 <__assert_fail>
   180c8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   180cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   180d0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   180d4:	add	x0, x0, #0x0
   180d8:	add	x1, x1, #0x0
   180dc:	add	x3, x3, #0x0
   180e0:	mov	w2, #0x69                  	// #105
   180e4:	bl	0 <__assert_fail>

00000000000180e8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi4EEEbv>:
   180e8:	stp	x29, x30, [sp, #-32]!
   180ec:	str	x19, [sp, #16]
   180f0:	mov	x29, sp
   180f4:	ldr	x8, [x0]
   180f8:	mov	x19, x0
   180fc:	ldr	x8, [x8, #40]
   18100:	blr	x8
   18104:	tbz	w0, #0, 18140 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi4EEEbv+0x58>
   18108:	ldr	w8, [x19, #48]
   1810c:	cbnz	w8, 1815c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi4EEEbv+0x74>
   18110:	ldr	x0, [x19, #72]
   18114:	cbz	x0, 1817c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi4EEEbv+0x94>
   18118:	ldr	w8, [x0]
   1811c:	cmp	w8, #0x1
   18120:	b.ne	18150 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi4EEEbv+0x68>  // b.any
   18124:	ldr	x8, [x0, #16]
   18128:	tst	x8, #0x8000000000000003
   1812c:	cset	w9, eq  // eq = none
   18130:	cmp	x8, #0x4, lsl #12
   18134:	cset	w8, lt  // lt = tstop
   18138:	and	w0, w8, w9
   1813c:	b	18144 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi4EEEbv+0x5c>
   18140:	mov	w0, wzr
   18144:	ldr	x19, [sp, #16]
   18148:	ldp	x29, x30, [sp], #32
   1814c:	ret
   18150:	ldr	x19, [sp, #16]
   18154:	ldp	x29, x30, [sp], #32
   18158:	b	18e4c <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   1815c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18160:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18164:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18168:	add	x0, x0, #0x0
   1816c:	add	x1, x1, #0x0
   18170:	add	x3, x3, #0x0
   18174:	mov	w2, #0x1f4                 	// #500
   18178:	bl	0 <__assert_fail>
   1817c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18180:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18184:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18188:	add	x0, x0, #0x0
   1818c:	add	x1, x1, #0x0
   18190:	add	x3, x3, #0x0
   18194:	mov	w2, #0x69                  	// #105
   18198:	bl	0 <__assert_fail>

000000000001819c <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi8EEEbv>:
   1819c:	stp	x29, x30, [sp, #-32]!
   181a0:	str	x19, [sp, #16]
   181a4:	mov	x29, sp
   181a8:	ldr	x8, [x0]
   181ac:	mov	x19, x0
   181b0:	ldr	x8, [x8, #40]
   181b4:	blr	x8
   181b8:	tbz	w0, #0, 181f4 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi8EEEbv+0x58>
   181bc:	ldr	w8, [x19, #48]
   181c0:	cbnz	w8, 18210 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi8EEEbv+0x74>
   181c4:	ldr	x0, [x19, #72]
   181c8:	cbz	x0, 18230 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi8EEEbv+0x94>
   181cc:	ldr	w8, [x0]
   181d0:	cmp	w8, #0x1
   181d4:	b.ne	18204 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi8EEEbv+0x68>  // b.any
   181d8:	ldr	x8, [x0, #16]
   181dc:	tst	x8, #0x8000000000000007
   181e0:	cset	w9, eq  // eq = none
   181e4:	cmp	x8, #0x8, lsl #12
   181e8:	cset	w8, lt  // lt = tstop
   181ec:	and	w0, w8, w9
   181f0:	b	181f8 <_ZNK12_GLOBAL__N_114AArch64Operand14isUImm12OffsetILi8EEEbv+0x5c>
   181f4:	mov	w0, wzr
   181f8:	ldr	x19, [sp, #16]
   181fc:	ldp	x29, x30, [sp], #32
   18200:	ret
   18204:	ldr	x19, [sp, #16]
   18208:	ldp	x29, x30, [sp], #32
   1820c:	b	18e4c <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   18210:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18214:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18218:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1821c:	add	x0, x0, #0x0
   18220:	add	x1, x1, #0x0
   18224:	add	x3, x3, #0x0
   18228:	mov	w2, #0x1f4                 	// #500
   1822c:	bl	0 <__assert_fail>
   18230:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18234:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18238:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1823c:	add	x0, x0, #0x0
   18240:	add	x1, x1, #0x0
   18244:	add	x3, x3, #0x0
   18248:	mov	w2, #0x69                  	// #105
   1824c:	bl	0 <__assert_fail>

0000000000018250 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv>:
   18250:	stp	x29, x30, [sp, #-32]!
   18254:	str	x19, [sp, #16]
   18258:	mov	x29, sp
   1825c:	ldr	w8, [x0, #48]
   18260:	cmp	w8, #0x3
   18264:	b.ne	18298 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv+0x48>  // b.any
   18268:	ldr	w8, [x0, #76]
   1826c:	mov	x19, x0
   18270:	cmp	w8, #0x2
   18274:	b.ne	18298 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv+0x48>  // b.any
   18278:	mov	x0, x19
   1827c:	bl	18efc <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv>
   18280:	tbz	w0, #0, 182a8 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv+0x58>
   18284:	ldr	w8, [x19, #80]
   18288:	cmp	w8, #0x20
   1828c:	b.ne	182a8 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv+0x58>  // b.any
   18290:	mov	x0, xzr
   18294:	b	1829c <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv+0x4c>
   18298:	mov	w0, #0x2                   	// #2
   1829c:	ldr	x19, [sp, #16]
   182a0:	ldp	x29, x30, [sp], #32
   182a4:	ret
   182a8:	mov	w0, #0x1                   	// #1
   182ac:	b	1829c <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi32ELj39EEEN4llvm19DiagnosticPredicateEv+0x4c>

00000000000182b0 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv>:
   182b0:	stp	x29, x30, [sp, #-32]!
   182b4:	str	x19, [sp, #16]
   182b8:	mov	x29, sp
   182bc:	ldr	w8, [x0, #48]
   182c0:	cmp	w8, #0x3
   182c4:	b.ne	182f8 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv+0x48>  // b.any
   182c8:	ldr	w8, [x0, #76]
   182cc:	mov	x19, x0
   182d0:	cmp	w8, #0x2
   182d4:	b.ne	182f8 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv+0x48>  // b.any
   182d8:	mov	x0, x19
   182dc:	bl	18efc <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv>
   182e0:	tbz	w0, #0, 18308 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv+0x58>
   182e4:	ldr	w8, [x19, #80]
   182e8:	cmp	w8, #0x40
   182ec:	b.ne	18308 <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv+0x58>  // b.any
   182f0:	mov	x0, xzr
   182f4:	b	182fc <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv+0x4c>
   182f8:	mov	w0, #0x2                   	// #2
   182fc:	ldr	x19, [sp, #16]
   18300:	ldp	x29, x30, [sp], #32
   18304:	ret
   18308:	mov	w0, #0x1                   	// #1
   1830c:	b	182fc <_ZNK12_GLOBAL__N_114AArch64Operand25isSVEDataVectorRegOfWidthILi64ELj39EEEN4llvm19DiagnosticPredicateEv+0x4c>

0000000000018310 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIaEEbv>:
   18310:	stp	x29, x30, [sp, #-32]!
   18314:	str	x19, [sp, #16]
   18318:	mov	x29, sp
   1831c:	ldr	x8, [x0]
   18320:	mov	x19, x0
   18324:	ldr	x8, [x8, #40]
   18328:	blr	x8
   1832c:	tbz	w0, #0, 18364 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIaEEbv+0x54>
   18330:	ldr	w8, [x19, #48]
   18334:	cbnz	w8, 1838c <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIaEEbv+0x7c>
   18338:	ldr	x8, [x19, #72]
   1833c:	cbz	x8, 183ac <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIaEEbv+0x9c>
   18340:	ldr	w9, [x8]
   18344:	cmp	w9, #0x1
   18348:	b.ne	18364 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIaEEbv+0x54>  // b.any
   1834c:	ldr	x8, [x8, #16]
   18350:	cmp	x8, #0x100
   18354:	b.cc	18378 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIaEEbv+0x68>  // b.lo, b.ul, b.last
   18358:	add	x9, x8, #0x80
   1835c:	cmp	x9, #0xff
   18360:	b.ls	18378 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIaEEbv+0x68>  // b.plast
   18364:	mov	w0, wzr
   18368:	ldr	x19, [sp, #16]
   1836c:	and	w0, w0, #0x1
   18370:	ldp	x29, x30, [sp], #32
   18374:	ret
   18378:	and	x0, x8, #0xff
   1837c:	add	x2, x29, #0x18
   18380:	mov	w1, #0x8                   	// #8
   18384:	bl	18948 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   18388:	b	18368 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIaEEbv+0x58>
   1838c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18390:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18394:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18398:	add	x0, x0, #0x0
   1839c:	add	x1, x1, #0x0
   183a0:	add	x3, x3, #0x0
   183a4:	mov	w2, #0x1f4                 	// #500
   183a8:	bl	0 <__assert_fail>
   183ac:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   183b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   183b4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   183b8:	add	x0, x0, #0x0
   183bc:	add	x1, x1, #0x0
   183c0:	add	x3, x3, #0x0
   183c4:	mov	w2, #0x69                  	// #105
   183c8:	bl	0 <__assert_fail>

00000000000183cc <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIsEEbv>:
   183cc:	stp	x29, x30, [sp, #-32]!
   183d0:	str	x19, [sp, #16]
   183d4:	mov	x29, sp
   183d8:	ldr	x8, [x0]
   183dc:	mov	x19, x0
   183e0:	ldr	x8, [x8, #40]
   183e4:	blr	x8
   183e8:	tbz	w0, #0, 18420 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIsEEbv+0x54>
   183ec:	ldr	w8, [x19, #48]
   183f0:	cbnz	w8, 18448 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIsEEbv+0x7c>
   183f4:	ldr	x8, [x19, #72]
   183f8:	cbz	x8, 18468 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIsEEbv+0x9c>
   183fc:	ldr	w9, [x8]
   18400:	cmp	w9, #0x1
   18404:	b.ne	18420 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIsEEbv+0x54>  // b.any
   18408:	ldr	x8, [x8, #16]
   1840c:	cmp	x8, #0x10, lsl #12
   18410:	b.cc	18434 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIsEEbv+0x68>  // b.lo, b.ul, b.last
   18414:	add	x9, x8, #0x8, lsl #12
   18418:	lsr	x9, x9, #16
   1841c:	cbz	x9, 18434 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIsEEbv+0x68>
   18420:	mov	w0, wzr
   18424:	ldr	x19, [sp, #16]
   18428:	and	w0, w0, #0x1
   1842c:	ldp	x29, x30, [sp], #32
   18430:	ret
   18434:	and	x0, x8, #0xffff
   18438:	add	x2, x29, #0x18
   1843c:	mov	w1, #0x10                  	// #16
   18440:	bl	18948 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   18444:	b	18424 <_ZNK12_GLOBAL__N_114AArch64Operand12isLogicalImmIsEEbv+0x58>
   18448:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1844c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18450:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18454:	add	x0, x0, #0x0
   18458:	add	x1, x1, #0x0
   1845c:	add	x3, x3, #0x0
   18460:	mov	w2, #0x1f4                 	// #500
   18464:	bl	0 <__assert_fail>
   18468:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1846c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18470:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18474:	add	x0, x0, #0x0
   18478:	add	x1, x1, #0x0
   1847c:	add	x3, x3, #0x0
   18480:	mov	w2, #0x69                  	// #105
   18484:	bl	0 <__assert_fail>

0000000000018488 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1ELj2EEEN4llvm19DiagnosticPredicateEv>:
   18488:	stp	x29, x30, [sp, #-32]!
   1848c:	str	x19, [sp, #16]
   18490:	mov	x29, sp
   18494:	mov	x19, x0
   18498:	bl	19040 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>
   1849c:	cbz	w0, 184b0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1ELj2EEEN4llvm19DiagnosticPredicateEv+0x28>
   184a0:	mov	x0, x19
   184a4:	bl	191ec <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   184a8:	and	x0, x0, #0xffffffff
   184ac:	b	184b4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1ELj2EEEN4llvm19DiagnosticPredicateEv+0x2c>
   184b0:	mov	x0, xzr
   184b4:	ldr	x19, [sp, #16]
   184b8:	ldp	x29, x30, [sp], #32
   184bc:	ret

00000000000184c0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1ELj3EEEN4llvm19DiagnosticPredicateEv>:
   184c0:	stp	x29, x30, [sp, #-32]!
   184c4:	str	x19, [sp, #16]
   184c8:	mov	x29, sp
   184cc:	mov	x19, x0
   184d0:	bl	19040 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>
   184d4:	cbz	w0, 184e8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1ELj3EEEN4llvm19DiagnosticPredicateEv+0x28>
   184d8:	mov	x0, x19
   184dc:	bl	19398 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>
   184e0:	and	x0, x0, #0xffffffff
   184e4:	b	184ec <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1ELj3EEEN4llvm19DiagnosticPredicateEv+0x2c>
   184e8:	mov	x0, xzr
   184ec:	ldr	x19, [sp, #16]
   184f0:	ldp	x29, x30, [sp], #32
   184f4:	ret

00000000000184f8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv>:
   184f8:	sub	sp, sp, #0x90
   184fc:	stp	x29, x30, [sp, #96]
   18500:	stp	x22, x21, [sp, #112]
   18504:	stp	x20, x19, [sp, #128]
   18508:	add	x29, sp, #0x60
   1850c:	ldr	w8, [x0, #48]
   18510:	mov	x19, x0
   18514:	cmp	w8, #0xb
   18518:	b.ne	18614 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x11c>  // b.any
   1851c:	ldrb	w8, [x19, #80]
   18520:	cbz	w8, 18614 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x11c>
   18524:	mov	w0, wzr
   18528:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   1852c:	cbz	x0, 18634 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x13c>
   18530:	mov	x21, x0
   18534:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   18538:	sub	x8, x29, #0x28
   1853c:	add	x20, x8, #0x8
   18540:	mov	x1, x0
   18544:	mov	x0, x20
   18548:	bl	0 <LLVMInitializeAArch64AsmParser>
   1854c:	ldr	x21, [x21, #16]
   18550:	cbz	x21, 18564 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x6c>
   18554:	mov	x0, x21
   18558:	bl	0 <strlen>
   1855c:	mov	x2, x0
   18560:	b	18568 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x70>
   18564:	mov	x2, xzr
   18568:	add	x8, sp, #0x28
   1856c:	sub	x0, x29, #0x28
   18570:	mov	w3, #0x3                   	// #3
   18574:	mov	x1, x21
   18578:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1857c:	ldrb	w8, [sp, #48]
   18580:	and	w9, w8, #0xfffffffd
   18584:	strb	w9, [sp, #48]
   18588:	tbnz	w8, #0, 18594 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x9c>
   1858c:	mov	w8, #0x1                   	// #1
   18590:	b	185a0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0xa8>
   18594:	ldr	x8, [sp, #40]
   18598:	str	xzr, [sp, #40]
   1859c:	orr	x8, x8, #0x1
   185a0:	tst	x8, #0xfffffffffffffffe
   185a4:	and	x9, x8, #0xfffffffffffffffe
   185a8:	cset	w10, ne  // ne = any
   185ac:	orr	x10, x9, x10
   185b0:	str	x10, [sp, #32]
   185b4:	cbnz	x9, 18654 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x15c>
   185b8:	add	x0, sp, #0x28
   185bc:	bl	0 <LLVMInitializeAArch64AsmParser>
   185c0:	ldr	x8, [sp, #32]
   185c4:	cbnz	x8, 18694 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x19c>
   185c8:	ldr	w8, [x0]
   185cc:	cbnz	w8, 1867c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x184>
   185d0:	mov	x8, sp
   185d4:	mov	x0, x19
   185d8:	mov	x22, sp
   185dc:	bl	a7b8 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv>
   185e0:	mov	x0, sp
   185e4:	sub	x1, x29, #0x28
   185e8:	bl	0 <LLVMInitializeAArch64AsmParser>
   185ec:	mov	w21, w0
   185f0:	add	x0, x22, #0x8
   185f4:	bl	0 <LLVMInitializeAArch64AsmParser>
   185f8:	add	x0, sp, #0x28
   185fc:	bl	0 <LLVMInitializeAArch64AsmParser>
   18600:	mov	x0, x20
   18604:	bl	0 <LLVMInitializeAArch64AsmParser>
   18608:	tbz	w21, #0, 18614 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x11c>
   1860c:	mov	x0, xzr
   18610:	b	18620 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x128>
   18614:	mov	x0, x19
   18618:	bl	191ec <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   1861c:	and	x0, x0, #0xffffffff
   18620:	ldp	x20, x19, [sp, #128]
   18624:	ldp	x22, x21, [sp, #112]
   18628:	ldp	x29, x30, [sp, #96]
   1862c:	add	sp, sp, #0x90
   18630:	ret
   18634:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18638:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1863c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18640:	add	x0, x0, #0x0
   18644:	add	x1, x1, #0x0
   18648:	add	x3, x3, #0x0
   1864c:	mov	w2, #0x4c4                 	// #1220
   18650:	bl	0 <__assert_fail>
   18654:	orr	x8, x8, #0x1
   18658:	mov	x0, sp
   1865c:	sub	x1, x29, #0x8
   18660:	str	xzr, [sp, #32]
   18664:	str	x8, [sp]
   18668:	bl	0 <LLVMInitializeAArch64AsmParser>
   1866c:	ldr	x8, [sp]
   18670:	cbnz	x8, 1869c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1a4>
   18674:	ldr	x8, [sp, #32]
   18678:	cbnz	x8, 18694 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x19c>
   1867c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18680:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18684:	add	x0, x0, #0x0
   18688:	add	x1, x1, #0x0
   1868c:	mov	w2, #0x4cb                 	// #1227
   18690:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   18694:	add	x0, sp, #0x20
   18698:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   1869c:	mov	x0, sp
   186a0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

00000000000186a4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>:
   186a4:	stp	x29, x30, [sp, #-32]!
   186a8:	stp	x20, x19, [sp, #16]
   186ac:	mov	x29, sp
   186b0:	ldr	w9, [x0, #48]
   186b4:	mov	x20, x0
   186b8:	mov	x19, x8
   186bc:	cmp	w9, #0x1
   186c0:	b.ne	186ec <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   186c4:	ldr	w8, [x20, #80]
   186c8:	cmp	w8, #0xc
   186cc:	b.ne	186ec <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   186d0:	ldr	x8, [x20, #72]
   186d4:	cbz	x8, 18764 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xc0>
   186d8:	ldr	w9, [x8]
   186dc:	cmp	w9, #0x1
   186e0:	b.ne	186ec <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   186e4:	ldr	x8, [x8, #16]
   186e8:	b	18734 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x90>
   186ec:	ldr	x8, [x20]
   186f0:	mov	x0, x20
   186f4:	ldr	x8, [x8, #40]
   186f8:	blr	x8
   186fc:	tbz	w0, #0, 18740 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x9c>
   18700:	ldr	w8, [x20, #48]
   18704:	cbnz	w8, 18784 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xe0>
   18708:	ldr	x8, [x20, #72]
   1870c:	cbz	x8, 18764 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xc0>
   18710:	ldr	w9, [x8]
   18714:	cmp	w9, #0x1
   18718:	b.ne	18740 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x9c>  // b.any
   1871c:	ldr	x8, [x8, #16]
   18720:	cbz	x8, 1874c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xa8>
   18724:	and	x9, x8, #0xfffffffffffff000
   18728:	cmp	x9, x8
   1872c:	b.ne	1874c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xa8>  // b.any
   18730:	asr	x8, x8, #12
   18734:	mov	w9, #0xc                   	// #12
   18738:	stp	x8, x9, [x19]
   1873c:	b	18750 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xac>
   18740:	mov	w8, wzr
   18744:	strb	wzr, [x19]
   18748:	b	18754 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xb0>
   1874c:	stp	x8, xzr, [x19]
   18750:	mov	w8, #0x1                   	// #1
   18754:	strb	w8, [x19, #16]
   18758:	ldp	x20, x19, [sp, #16]
   1875c:	ldp	x29, x30, [sp], #32
   18760:	ret
   18764:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18768:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1876c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18770:	add	x0, x0, #0x0
   18774:	add	x1, x1, #0x0
   18778:	add	x3, x3, #0x0
   1877c:	mov	w2, #0x69                  	// #105
   18780:	bl	0 <__assert_fail>
   18784:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18788:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1878c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18790:	add	x0, x0, #0x0
   18794:	add	x1, x1, #0x0
   18798:	add	x3, x3, #0x0
   1879c:	mov	w2, #0x1f4                 	// #500
   187a0:	bl	0 <__assert_fail>

00000000000187a4 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE>:
   187a4:	sub	sp, sp, #0x40
   187a8:	stp	x29, x30, [sp, #16]
   187ac:	stp	x22, x21, [sp, #32]
   187b0:	stp	x20, x19, [sp, #48]
   187b4:	add	x29, sp, #0x10
   187b8:	mov	x8, sp
   187bc:	mov	w1, #0x3f                  	// #63
   187c0:	mov	x20, x0
   187c4:	bl	0 <LLVMInitializeAArch64AsmParser>
   187c8:	mov	x0, sp
   187cc:	bl	0 <LLVMInitializeAArch64AsmParser>
   187d0:	ldr	w8, [sp, #8]
   187d4:	mov	x19, x0
   187d8:	cmp	w8, #0x41
   187dc:	b.cc	187ec <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x48>  // b.lo, b.ul, b.last
   187e0:	ldr	x0, [sp]
   187e4:	cbz	x0, 187ec <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x48>
   187e8:	bl	0 <_ZdaPv>
   187ec:	mov	x8, sp
   187f0:	mov	w1, #0x34                  	// #52
   187f4:	mov	x0, x20
   187f8:	bl	0 <LLVMInitializeAArch64AsmParser>
   187fc:	mov	x0, sp
   18800:	bl	0 <LLVMInitializeAArch64AsmParser>
   18804:	ldr	w8, [sp, #8]
   18808:	mov	x21, x0
   1880c:	and	x22, x0, #0x7ff
   18810:	cmp	w8, #0x41
   18814:	b.cc	18824 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x80>  // b.lo, b.ul, b.last
   18818:	ldr	x0, [sp]
   1881c:	cbz	x0, 18824 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x80>
   18820:	bl	0 <_ZdaPv>
   18824:	mov	x0, x20
   18828:	bl	0 <LLVMInitializeAArch64AsmParser>
   1882c:	sub	x9, x22, #0x3fc
   18830:	mov	x8, x0
   18834:	cmp	x9, #0x7
   18838:	mov	w0, #0xffffffff            	// #-1
   1883c:	b.hi	18864 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xc0>  // b.pmore
   18840:	and	x9, x8, #0xffffffffffff
   18844:	cbnz	x9, 18864 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xc0>
   18848:	lsl	w9, w21, #4
   1884c:	add	w9, w9, #0x40
   18850:	and	w9, w9, #0x70
   18854:	ubfx	x8, x8, #48, #4
   18858:	bfi	w9, w19, #7, #1
   1885c:	orr	w8, w9, w8
   18860:	eor	w0, w8, #0x40
   18864:	ldp	x20, x19, [sp, #48]
   18868:	ldp	x22, x21, [sp, #32]
   1886c:	ldp	x29, x30, [sp, #16]
   18870:	add	sp, sp, #0x40
   18874:	ret

0000000000018878 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj19EEEbv>:
   18878:	stp	x29, x30, [sp, #-16]!
   1887c:	mov	x29, sp
   18880:	ldr	w8, [x0, #48]
   18884:	cmp	w8, #0x3
   18888:	b.ne	188d4 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj19EEEbv+0x5c>  // b.any
   1888c:	ldr	w8, [x0, #76]
   18890:	cbnz	w8, 188d4 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj19EEEbv+0x5c>
   18894:	ldr	x8, [x0]
   18898:	ldr	x8, [x8, #56]
   1889c:	blr	x8
   188a0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   188a4:	ldr	x8, [x8]
   188a8:	mov	w9, w0
   188ac:	lsr	x9, x9, #3
   188b0:	ldrh	w10, [x8, #630]
   188b4:	cmp	w9, w10
   188b8:	b.cs	188d4 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj19EEEbv+0x5c>  // b.hs, b.nlast
   188bc:	ldr	x8, [x8, #616]
   188c0:	ldrb	w8, [x8, x9]
   188c4:	and	w9, w0, #0x7
   188c8:	lsr	w8, w8, w9
   188cc:	and	w0, w8, #0x1
   188d0:	b	188d8 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj19EEEbv+0x60>
   188d4:	mov	w0, wzr
   188d8:	ldp	x29, x30, [sp], #16
   188dc:	ret

00000000000188e0 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj17EEEbv>:
   188e0:	stp	x29, x30, [sp, #-16]!
   188e4:	mov	x29, sp
   188e8:	ldr	w8, [x0, #48]
   188ec:	cmp	w8, #0x3
   188f0:	b.ne	1893c <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj17EEEbv+0x5c>  // b.any
   188f4:	ldr	w8, [x0, #76]
   188f8:	cbnz	w8, 1893c <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj17EEEbv+0x5c>
   188fc:	ldr	x8, [x0]
   18900:	ldr	x8, [x8, #56]
   18904:	blr	x8
   18908:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1890c:	ldr	x8, [x8]
   18910:	mov	w9, w0
   18914:	lsr	x9, x9, #3
   18918:	ldrh	w10, [x8, #566]
   1891c:	cmp	w9, w10
   18920:	b.cs	1893c <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj17EEEbv+0x5c>  // b.hs, b.nlast
   18924:	ldr	x8, [x8, #552]
   18928:	ldrb	w8, [x8, x9]
   1892c:	and	w9, w0, #0x7
   18930:	lsr	w8, w8, w9
   18934:	and	w0, w8, #0x1
   18938:	b	18940 <_ZNK12_GLOBAL__N_114AArch64Operand7isGPR64ILj17EEEbv+0x60>
   1893c:	mov	w0, wzr
   18940:	ldp	x29, x30, [sp], #16
   18944:	ret

0000000000018948 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>:
   18948:	stp	x29, x30, [sp, #-16]!
   1894c:	mov	x29, sp
   18950:	add	x8, x0, #0x1
   18954:	cmp	x8, #0x2
   18958:	b.cc	18a10 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xc8>  // b.lo, b.ul, b.last
   1895c:	cmp	w1, #0x40
   18960:	b.ne	18a08 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xc0>  // b.any
   18964:	mov	x8, #0xffffffffffffffff    	// #-1
   18968:	lsr	w9, w1, #1
   1896c:	lsr	x12, x0, x9
   18970:	lsl	x11, x8, x9
   18974:	eor	x12, x12, x0
   18978:	and	w10, w1, #0xfffffffe
   1897c:	bics	xzr, x12, x11
   18980:	bic	x13, x12, x11
   18984:	csel	w1, w9, w10, eq  // eq = none
   18988:	cbnz	x13, 18994 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x4c>
   1898c:	cmp	w1, #0x2
   18990:	b.hi	18968 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x20>  // b.pmore
   18994:	neg	w8, w1
   18998:	mov	x9, #0xffffffffffffffff    	// #-1
   1899c:	lsr	x8, x9, x8
   189a0:	ands	x9, x8, x0
   189a4:	b.eq	189bc <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x74>  // b.none
   189a8:	sub	x10, x9, #0x1
   189ac:	orr	x10, x10, x9
   189b0:	add	x11, x10, #0x1
   189b4:	tst	x11, x10
   189b8:	b.eq	18a3c <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xf4>  // b.none
   189bc:	orn	x9, x0, x8
   189c0:	cmn	x9, #0x1
   189c4:	b.eq	18a10 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xc8>  // b.none
   189c8:	mov	x10, #0xfffffffffffffffe    	// #-2
   189cc:	mvn	x8, x9
   189d0:	sub	x9, x10, x9
   189d4:	orr	x9, x9, x8
   189d8:	add	x10, x9, #0x1
   189dc:	tst	x10, x9
   189e0:	b.ne	18a10 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xc8>  // b.any
   189e4:	clz	x9, x8
   189e8:	mov	w10, #0x40                  	// #64
   189ec:	rbit	x11, x8
   189f0:	sub	w8, w10, w9
   189f4:	clz	x10, x11
   189f8:	add	w10, w1, w10
   189fc:	add	w9, w10, w9
   18a00:	sub	w9, w9, #0x40
   18a04:	b	18a60 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x118>
   18a08:	lsr	x8, x0, x1
   18a0c:	cbz	x8, 18a20 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xd8>
   18a10:	mov	w8, wzr
   18a14:	mov	w0, w8
   18a18:	ldp	x29, x30, [sp], #16
   18a1c:	ret
   18a20:	neg	w8, w1
   18a24:	mov	x9, #0xffffffffffffffff    	// #-1
   18a28:	lsr	x8, x9, x8
   18a2c:	cmp	x8, x0
   18a30:	mov	w8, wzr
   18a34:	b.ne	18964 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x1c>  // b.any
   18a38:	b	18a14 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xcc>
   18a3c:	rbit	x8, x9
   18a40:	clz	x8, x8
   18a44:	lsr	x9, x9, x8
   18a48:	mvn	x10, x9
   18a4c:	cmn	x9, #0x1
   18a50:	rbit	x9, x10
   18a54:	clz	x9, x9
   18a58:	mov	w10, #0x40                  	// #64
   18a5c:	csel	w9, w10, w9, eq  // eq = none
   18a60:	subs	w8, w1, w8
   18a64:	b.ls	18a98 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x150>  // b.plast
   18a68:	sub	w10, w1, #0x1
   18a6c:	neg	w11, w1, lsl #1
   18a70:	sub	w9, w9, #0x1
   18a74:	mov	w12, #0x1000                	// #4096
   18a78:	and	w8, w8, w10
   18a7c:	orr	w9, w9, w11
   18a80:	bic	w10, w12, w9, lsl #6
   18a84:	bfi	w9, w8, #6, #26
   18a88:	orr	w8, w9, w10
   18a8c:	str	x8, [x2]
   18a90:	mov	w8, #0x1                   	// #1
   18a94:	b	18a14 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xcc>
   18a98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18a9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18aa0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18aa4:	add	x0, x0, #0x0
   18aa8:	add	x1, x1, #0x0
   18aac:	add	x3, x3, #0x0
   18ab0:	mov	w2, #0xff                  	// #255
   18ab4:	bl	0 <__assert_fail>

0000000000018ab8 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE>:
   18ab8:	sub	sp, sp, #0x40
   18abc:	stp	x29, x30, [sp, #16]
   18ac0:	str	x21, [sp, #32]
   18ac4:	stp	x20, x19, [sp, #48]
   18ac8:	add	x29, sp, #0x10
   18acc:	ldr	x8, [x0]
   18ad0:	mov	x19, x2
   18ad4:	mov	x21, x0
   18ad8:	mov	x20, x1
   18adc:	ldr	x8, [x8, #40]
   18ae0:	blr	x8
   18ae4:	tbz	w0, #0, 18b50 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x98>
   18ae8:	ldr	w8, [x21, #48]
   18aec:	cbnz	w8, 18b90 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0xd8>
   18af0:	ldr	x0, [x21, #72]
   18af4:	add	x1, x29, #0x1c
   18af8:	add	x2, x29, #0x18
   18afc:	add	x3, sp, #0x8
   18b00:	bl	e958 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
   18b04:	mov	w8, w0
   18b08:	mov	w0, wzr
   18b0c:	cbz	x19, 18b54 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x9c>
   18b10:	tbz	w8, #0, 18b54 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x9c>
   18b14:	ldrh	w8, [x29, #24]
   18b18:	cbnz	w8, 18b54 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x9c>
   18b1c:	ldr	w8, [x29, #28]
   18b20:	mov	x10, xzr
   18b24:	mov	w9, #0x1                   	// #1
   18b28:	cmp	x19, x10
   18b2c:	b.ls	18b70 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0xb8>  // b.plast
   18b30:	ldr	w10, [x20, x10, lsl #2]
   18b34:	cmp	w8, w10
   18b38:	b.eq	18b68 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0xb0>  // b.none
   18b3c:	add	w11, w9, #0x1
   18b40:	cmp	x19, w9, uxtw
   18b44:	mov	w10, w9
   18b48:	mov	w9, w11
   18b4c:	b.ne	18b28 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x70>  // b.any
   18b50:	mov	w0, wzr
   18b54:	ldp	x20, x19, [sp, #48]
   18b58:	ldr	x21, [sp, #32]
   18b5c:	ldp	x29, x30, [sp, #16]
   18b60:	add	sp, sp, #0x40
   18b64:	ret
   18b68:	mov	w0, #0x1                   	// #1
   18b6c:	b	18b54 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x9c>
   18b70:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18b74:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18b78:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18b7c:	add	x0, x0, #0x0
   18b80:	add	x1, x1, #0x0
   18b84:	add	x3, x3, #0x0
   18b88:	mov	w2, #0xfa                  	// #250
   18b8c:	bl	0 <__assert_fail>
   18b90:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18b94:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18b98:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18b9c:	add	x0, x0, #0x0
   18ba0:	add	x1, x1, #0x0
   18ba4:	add	x3, x3, #0x0
   18ba8:	mov	w2, #0x1f4                 	// #500
   18bac:	bl	0 <__assert_fail>

0000000000018bb0 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj2EEEbv>:
   18bb0:	stp	x29, x30, [sp, #-16]!
   18bb4:	mov	x29, sp
   18bb8:	ldr	w8, [x0, #48]
   18bbc:	cmp	w8, #0x3
   18bc0:	b.ne	18c10 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj2EEEbv+0x60>  // b.any
   18bc4:	ldr	w8, [x0, #76]
   18bc8:	cmp	w8, #0x3
   18bcc:	b.ne	18c10 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj2EEEbv+0x60>  // b.any
   18bd0:	ldr	x8, [x0]
   18bd4:	ldr	x8, [x8, #56]
   18bd8:	blr	x8
   18bdc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18be0:	ldr	x8, [x8]
   18be4:	mov	w9, w0
   18be8:	lsr	x9, x9, #3
   18bec:	ldrh	w10, [x8, #86]
   18bf0:	cmp	w9, w10
   18bf4:	b.cs	18c10 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj2EEEbv+0x60>  // b.hs, b.nlast
   18bf8:	ldr	x8, [x8, #72]
   18bfc:	ldrb	w8, [x8, x9]
   18c00:	and	w9, w0, #0x7
   18c04:	lsr	w8, w8, w9
   18c08:	and	w0, w8, #0x1
   18c0c:	b	18c14 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj2EEEbv+0x64>
   18c10:	mov	w0, wzr
   18c14:	ldp	x29, x30, [sp], #16
   18c18:	ret

0000000000018c1c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj3EEEbv>:
   18c1c:	stp	x29, x30, [sp, #-16]!
   18c20:	mov	x29, sp
   18c24:	ldr	w8, [x0, #48]
   18c28:	cmp	w8, #0x3
   18c2c:	b.ne	18c7c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj3EEEbv+0x60>  // b.any
   18c30:	ldr	w8, [x0, #76]
   18c34:	cmp	w8, #0x3
   18c38:	b.ne	18c7c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj3EEEbv+0x60>  // b.any
   18c3c:	ldr	x8, [x0]
   18c40:	ldr	x8, [x8, #56]
   18c44:	blr	x8
   18c48:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18c4c:	ldr	x8, [x8]
   18c50:	mov	w9, w0
   18c54:	lsr	x9, x9, #3
   18c58:	ldrh	w10, [x8, #118]
   18c5c:	cmp	w9, w10
   18c60:	b.cs	18c7c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj3EEEbv+0x60>  // b.hs, b.nlast
   18c64:	ldr	x8, [x8, #104]
   18c68:	ldrb	w8, [x8, x9]
   18c6c:	and	w9, w0, #0x7
   18c70:	lsr	w8, w8, w9
   18c74:	and	w0, w8, #0x1
   18c78:	b	18c80 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj3EEEbv+0x64>
   18c7c:	mov	w0, wzr
   18c80:	ldp	x29, x30, [sp], #16
   18c84:	ret

0000000000018c88 <_ZNK12_GLOBAL__N_114AArch64Operand11isImmScaledILi6ELi1EEEN4llvm19DiagnosticPredicateEb>:
   18c88:	stp	x29, x30, [sp, #-32]!
   18c8c:	stp	x20, x19, [sp, #16]
   18c90:	mov	x29, sp
   18c94:	ldr	x8, [x0]
   18c98:	mov	x20, x0
   18c9c:	mov	w19, w1
   18ca0:	ldr	x8, [x8, #40]
   18ca4:	blr	x8
   18ca8:	tbz	w0, #0, 18cfc <_ZNK12_GLOBAL__N_114AArch64Operand11isImmScaledILi6ELi1EEEN4llvm19DiagnosticPredicateEb+0x74>
   18cac:	ldr	w8, [x20, #48]
   18cb0:	cbnz	w8, 18d0c <_ZNK12_GLOBAL__N_114AArch64Operand11isImmScaledILi6ELi1EEEN4llvm19DiagnosticPredicateEb+0x84>
   18cb4:	ldr	x8, [x20, #72]
   18cb8:	cbz	x8, 18d2c <_ZNK12_GLOBAL__N_114AArch64Operand11isImmScaledILi6ELi1EEEN4llvm19DiagnosticPredicateEb+0xa4>
   18cbc:	ldr	w9, [x8]
   18cc0:	cmp	w9, #0x1
   18cc4:	b.ne	18cfc <_ZNK12_GLOBAL__N_114AArch64Operand11isImmScaledILi6ELi1EEEN4llvm19DiagnosticPredicateEb+0x74>  // b.any
   18cc8:	ldr	x8, [x8, #16]
   18ccc:	tst	w19, #0x1
   18cd0:	mov	w9, #0x3f                  	// #63
   18cd4:	mov	w10, #0x1f                  	// #31
   18cd8:	mov	x11, #0xffffffffffffffe0    	// #-32
   18cdc:	csel	x9, x10, x9, ne  // ne = any
   18ce0:	csel	x10, x11, xzr, ne  // ne = any
   18ce4:	cmp	x8, x10
   18ce8:	cset	w10, lt  // lt = tstop
   18cec:	cmp	x8, x9
   18cf0:	cset	w8, gt
   18cf4:	orr	w0, w10, w8
   18cf8:	b	18d00 <_ZNK12_GLOBAL__N_114AArch64Operand11isImmScaledILi6ELi1EEEN4llvm19DiagnosticPredicateEb+0x78>
   18cfc:	mov	w0, #0x2                   	// #2
   18d00:	ldp	x20, x19, [sp, #16]
   18d04:	ldp	x29, x30, [sp], #32
   18d08:	ret
   18d0c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18d10:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18d14:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18d18:	add	x0, x0, #0x0
   18d1c:	add	x1, x1, #0x0
   18d20:	add	x3, x3, #0x0
   18d24:	mov	w2, #0x1f4                 	// #500
   18d28:	bl	0 <__assert_fail>
   18d2c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18d30:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18d34:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18d38:	add	x0, x0, #0x0
   18d3c:	add	x1, x1, #0x0
   18d40:	add	x3, x3, #0x0
   18d44:	mov	w2, #0x69                  	// #105
   18d48:	bl	0 <__assert_fail>

0000000000018d4c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>:
   18d4c:	stp	x29, x30, [sp, #-32]!
   18d50:	stp	x20, x19, [sp, #16]
   18d54:	mov	x29, sp
   18d58:	ldr	w9, [x0, #48]
   18d5c:	mov	x20, x0
   18d60:	mov	x19, x8
   18d64:	cmp	w9, #0x1
   18d68:	b.ne	18d94 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   18d6c:	ldr	w8, [x20, #80]
   18d70:	cmp	w8, #0x8
   18d74:	b.ne	18d94 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   18d78:	ldr	x8, [x20, #72]
   18d7c:	cbz	x8, 18e0c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xc0>
   18d80:	ldr	w9, [x8]
   18d84:	cmp	w9, #0x1
   18d88:	b.ne	18d94 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   18d8c:	ldr	x8, [x8, #16]
   18d90:	b	18ddc <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x90>
   18d94:	ldr	x8, [x20]
   18d98:	mov	x0, x20
   18d9c:	ldr	x8, [x8, #40]
   18da0:	blr	x8
   18da4:	tbz	w0, #0, 18de8 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x9c>
   18da8:	ldr	w8, [x20, #48]
   18dac:	cbnz	w8, 18e2c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xe0>
   18db0:	ldr	x8, [x20, #72]
   18db4:	cbz	x8, 18e0c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xc0>
   18db8:	ldr	w9, [x8]
   18dbc:	cmp	w9, #0x1
   18dc0:	b.ne	18de8 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x9c>  // b.any
   18dc4:	ldr	x8, [x8, #16]
   18dc8:	cbz	x8, 18df4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xa8>
   18dcc:	and	x9, x8, #0xffffffffffffff00
   18dd0:	cmp	x9, x8
   18dd4:	b.ne	18df4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xa8>  // b.any
   18dd8:	asr	x8, x8, #8
   18ddc:	mov	w9, #0x8                   	// #8
   18de0:	stp	x8, x9, [x19]
   18de4:	b	18df8 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xac>
   18de8:	mov	w8, wzr
   18dec:	strb	wzr, [x19]
   18df0:	b	18dfc <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xb0>
   18df4:	stp	x8, xzr, [x19]
   18df8:	mov	w8, #0x1                   	// #1
   18dfc:	strb	w8, [x19, #16]
   18e00:	ldp	x20, x19, [sp, #16]
   18e04:	ldp	x29, x30, [sp], #32
   18e08:	ret
   18e0c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18e10:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18e14:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18e18:	add	x0, x0, #0x0
   18e1c:	add	x1, x1, #0x0
   18e20:	add	x3, x3, #0x0
   18e24:	mov	w2, #0x69                  	// #105
   18e28:	bl	0 <__assert_fail>
   18e2c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   18e30:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   18e34:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   18e38:	add	x0, x0, #0x0
   18e3c:	add	x1, x1, #0x0
   18e40:	add	x3, x3, #0x0
   18e44:	mov	w2, #0x1f4                 	// #500
   18e48:	bl	0 <__assert_fail>

0000000000018e4c <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>:
   18e4c:	sub	sp, sp, #0x20
   18e50:	stp	x29, x30, [sp, #16]
   18e54:	add	x29, sp, #0x10
   18e58:	sub	x1, x29, #0x4
   18e5c:	add	x2, sp, #0x8
   18e60:	mov	x3, sp
   18e64:	bl	e958 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
   18e68:	tbz	w0, #0, 18e78 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x2c>
   18e6c:	ldrh	w8, [sp, #8]
   18e70:	cmp	w8, #0x16
   18e74:	b.ne	18e88 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x3c>  // b.any
   18e78:	mov	w0, #0x1                   	// #1
   18e7c:	ldp	x29, x30, [sp, #16]
   18e80:	add	sp, sp, #0x20
   18e84:	ret
   18e88:	ldur	w9, [x29, #-4]
   18e8c:	mov	w0, #0x1                   	// #1
   18e90:	cmp	w9, #0x39
   18e94:	b.ls	18ed8 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x8c>  // b.plast
   18e98:	sub	w9, w9, #0x121
   18e9c:	cmp	w9, #0x6
   18ea0:	b.hi	18eb8 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x6c>  // b.pmore
   18ea4:	mov	w10, #0x1                   	// #1
   18ea8:	lsl	w9, w10, w9
   18eac:	mov	w10, #0x79                  	// #121
   18eb0:	tst	w9, w10
   18eb4:	b.ne	18e7c <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x30>  // b.any
   18eb8:	cmp	w8, #0x18
   18ebc:	b.eq	18ec8 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x7c>  // b.none
   18ec0:	cmp	w8, #0x14
   18ec4:	b.ne	18ef4 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0xa8>  // b.any
   18ec8:	ldr	x8, [sp]
   18ecc:	cmp	x8, #0x0
   18ed0:	cset	w0, eq  // eq = none
   18ed4:	b	18e7c <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x30>
   18ed8:	mov	w10, #0x1                   	// #1
   18edc:	mov	x11, #0x3a000000000         	// #3985729650688
   18ee0:	lsl	x10, x10, x9
   18ee4:	movk	x11, #0x200, lsl #48
   18ee8:	tst	x10, x11
   18eec:	b.ne	18e7c <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x30>  // b.any
   18ef0:	b	18e98 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x4c>
   18ef4:	mov	w0, wzr
   18ef8:	b	18e7c <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x30>

0000000000018efc <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv>:
   18efc:	stp	x29, x30, [sp, #-16]!
   18f00:	mov	x29, sp
   18f04:	ldr	w8, [x0, #48]
   18f08:	cmp	w8, #0x3
   18f0c:	b.ne	18f5c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv+0x60>  // b.any
   18f10:	ldr	w8, [x0, #76]
   18f14:	cmp	w8, #0x2
   18f18:	b.ne	18f5c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv+0x60>  // b.any
   18f1c:	ldr	x8, [x0]
   18f20:	ldr	x8, [x8, #56]
   18f24:	blr	x8
   18f28:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18f2c:	ldr	x8, [x8]
   18f30:	mov	w9, w0
   18f34:	lsr	x9, x9, #3
   18f38:	ldrh	w10, [x8, #1270]
   18f3c:	cmp	w9, w10
   18f40:	b.cs	18f5c <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv+0x60>  // b.hs, b.nlast
   18f44:	ldr	x8, [x8, #1256]
   18f48:	ldrb	w8, [x8, x9]
   18f4c:	and	w9, w0, #0x7
   18f50:	lsr	w8, w8, w9
   18f54:	and	w0, w8, #0x1
   18f58:	b	18f60 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj39EEEbv+0x64>
   18f5c:	mov	w0, wzr
   18f60:	ldp	x29, x30, [sp], #16
   18f64:	ret

0000000000018f68 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj42EEEbv>:
   18f68:	stp	x29, x30, [sp, #-16]!
   18f6c:	mov	x29, sp
   18f70:	ldr	w8, [x0, #48]
   18f74:	cmp	w8, #0x3
   18f78:	b.ne	18fc8 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj42EEEbv+0x60>  // b.any
   18f7c:	ldr	w8, [x0, #76]
   18f80:	cmp	w8, #0x2
   18f84:	b.ne	18fc8 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj42EEEbv+0x60>  // b.any
   18f88:	ldr	x8, [x0]
   18f8c:	ldr	x8, [x8, #56]
   18f90:	blr	x8
   18f94:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18f98:	ldr	x8, [x8]
   18f9c:	mov	w9, w0
   18fa0:	lsr	x9, x9, #3
   18fa4:	ldrh	w10, [x8, #1366]
   18fa8:	cmp	w9, w10
   18fac:	b.cs	18fc8 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj42EEEbv+0x60>  // b.hs, b.nlast
   18fb0:	ldr	x8, [x8, #1352]
   18fb4:	ldrb	w8, [x8, x9]
   18fb8:	and	w9, w0, #0x7
   18fbc:	lsr	w8, w8, w9
   18fc0:	and	w0, w8, #0x1
   18fc4:	b	18fcc <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj42EEEbv+0x64>
   18fc8:	mov	w0, wzr
   18fcc:	ldp	x29, x30, [sp], #16
   18fd0:	ret

0000000000018fd4 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj41EEEbv>:
   18fd4:	stp	x29, x30, [sp, #-16]!
   18fd8:	mov	x29, sp
   18fdc:	ldr	w8, [x0, #48]
   18fe0:	cmp	w8, #0x3
   18fe4:	b.ne	19034 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj41EEEbv+0x60>  // b.any
   18fe8:	ldr	w8, [x0, #76]
   18fec:	cmp	w8, #0x2
   18ff0:	b.ne	19034 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj41EEEbv+0x60>  // b.any
   18ff4:	ldr	x8, [x0]
   18ff8:	ldr	x8, [x8, #56]
   18ffc:	blr	x8
   19000:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   19004:	ldr	x8, [x8]
   19008:	mov	w9, w0
   1900c:	lsr	x9, x9, #3
   19010:	ldrh	w10, [x8, #1334]
   19014:	cmp	w9, w10
   19018:	b.cs	19034 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj41EEEbv+0x60>  // b.hs, b.nlast
   1901c:	ldr	x8, [x8, #1320]
   19020:	ldrb	w8, [x8, x9]
   19024:	and	w9, w0, #0x7
   19028:	lsr	w8, w8, w9
   1902c:	and	w0, w8, #0x1
   19030:	b	19038 <_ZNK12_GLOBAL__N_114AArch64Operand14isSVEVectorRegILj41EEEbv+0x64>
   19034:	mov	w0, wzr
   19038:	ldp	x29, x30, [sp], #16
   1903c:	ret

0000000000019040 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>:
   19040:	sub	sp, sp, #0x90
   19044:	stp	x29, x30, [sp, #96]
   19048:	str	x21, [sp, #112]
   1904c:	stp	x20, x19, [sp, #128]
   19050:	add	x29, sp, #0x60
   19054:	ldr	w8, [x0, #48]
   19058:	cmp	w8, #0xb
   1905c:	b.ne	190ac <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x6c>  // b.any
   19060:	ldrb	w8, [x0, #80]
   19064:	mov	x19, x0
   19068:	cbz	w8, 190b4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x74>
   1906c:	mov	w0, #0x1                   	// #1
   19070:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   19074:	cbz	x0, 1917c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x13c>
   19078:	mov	x21, x0
   1907c:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   19080:	sub	x8, x29, #0x20
   19084:	add	x20, x8, #0x8
   19088:	mov	x1, x0
   1908c:	mov	x0, x20
   19090:	bl	0 <LLVMInitializeAArch64AsmParser>
   19094:	ldr	x21, [x21, #16]
   19098:	cbz	x21, 190bc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x7c>
   1909c:	mov	x0, x21
   190a0:	bl	0 <strlen>
   190a4:	mov	x2, x0
   190a8:	b	190c0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x80>
   190ac:	mov	w0, #0x2                   	// #2
   190b0:	b	19168 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x128>
   190b4:	mov	w0, #0x1                   	// #1
   190b8:	b	19168 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x128>
   190bc:	mov	x2, xzr
   190c0:	add	x8, sp, #0x30
   190c4:	sub	x0, x29, #0x20
   190c8:	mov	w3, #0x3                   	// #3
   190cc:	mov	x1, x21
   190d0:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   190d4:	ldrb	w8, [sp, #56]
   190d8:	and	w9, w8, #0xfffffffd
   190dc:	strb	w9, [sp, #56]
   190e0:	tbnz	w8, #0, 190ec <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0xac>
   190e4:	mov	w8, #0x1                   	// #1
   190e8:	b	190f8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0xb8>
   190ec:	ldr	x8, [sp, #48]
   190f0:	str	xzr, [sp, #48]
   190f4:	orr	x8, x8, #0x1
   190f8:	tst	x8, #0xfffffffffffffffe
   190fc:	and	x9, x8, #0xfffffffffffffffe
   19100:	cset	w10, ne  // ne = any
   19104:	orr	x10, x9, x10
   19108:	str	x10, [sp, #40]
   1910c:	cbnz	x9, 1919c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x15c>
   19110:	add	x0, sp, #0x30
   19114:	bl	0 <LLVMInitializeAArch64AsmParser>
   19118:	ldr	x8, [sp, #40]
   1911c:	cbnz	x8, 191dc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x19c>
   19120:	ldr	w8, [x0]
   19124:	cbnz	w8, 191c4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x184>
   19128:	add	x8, sp, #0x8
   1912c:	mov	x0, x19
   19130:	add	x21, sp, #0x8
   19134:	bl	a7b8 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv>
   19138:	add	x0, sp, #0x8
   1913c:	sub	x1, x29, #0x20
   19140:	bl	0 <LLVMInitializeAArch64AsmParser>
   19144:	mov	w19, w0
   19148:	add	x0, x21, #0x8
   1914c:	bl	0 <LLVMInitializeAArch64AsmParser>
   19150:	add	x0, sp, #0x30
   19154:	bl	0 <LLVMInitializeAArch64AsmParser>
   19158:	mov	x0, x20
   1915c:	bl	0 <LLVMInitializeAArch64AsmParser>
   19160:	mvn	w8, w19
   19164:	and	x0, x8, #0x1
   19168:	ldp	x20, x19, [sp, #128]
   1916c:	ldr	x21, [sp, #112]
   19170:	ldp	x29, x30, [sp, #96]
   19174:	add	sp, sp, #0x90
   19178:	ret
   1917c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   19180:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   19184:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   19188:	add	x0, x0, #0x0
   1918c:	add	x1, x1, #0x0
   19190:	add	x3, x3, #0x0
   19194:	mov	w2, #0x4c4                 	// #1220
   19198:	bl	0 <__assert_fail>
   1919c:	orr	x8, x8, #0x1
   191a0:	add	x0, sp, #0x8
   191a4:	add	x1, x29, #0x18
   191a8:	str	xzr, [sp, #40]
   191ac:	str	x8, [sp, #8]
   191b0:	bl	0 <LLVMInitializeAArch64AsmParser>
   191b4:	ldr	x8, [sp, #8]
   191b8:	cbnz	x8, 191e4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x1a4>
   191bc:	ldr	x8, [sp, #40]
   191c0:	cbnz	x8, 191dc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x19c>
   191c4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   191c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   191cc:	add	x0, x0, #0x0
   191d0:	add	x1, x1, #0x0
   191d4:	mov	w2, #0x4cb                 	// #1227
   191d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   191dc:	add	x0, sp, #0x28
   191e0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   191e4:	add	x0, sp, #0x8
   191e8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

00000000000191ec <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>:
   191ec:	sub	sp, sp, #0x90
   191f0:	stp	x29, x30, [sp, #96]
   191f4:	str	x21, [sp, #112]
   191f8:	stp	x20, x19, [sp, #128]
   191fc:	add	x29, sp, #0x60
   19200:	ldr	w8, [x0, #48]
   19204:	cmp	w8, #0xb
   19208:	b.ne	19258 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x6c>  // b.any
   1920c:	ldrb	w8, [x0, #80]
   19210:	mov	x19, x0
   19214:	cbz	w8, 19260 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x74>
   19218:	mov	w0, #0x2                   	// #2
   1921c:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   19220:	cbz	x0, 19328 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x13c>
   19224:	mov	x21, x0
   19228:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1922c:	sub	x8, x29, #0x20
   19230:	add	x20, x8, #0x8
   19234:	mov	x1, x0
   19238:	mov	x0, x20
   1923c:	bl	0 <LLVMInitializeAArch64AsmParser>
   19240:	ldr	x21, [x21, #16]
   19244:	cbz	x21, 19268 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x7c>
   19248:	mov	x0, x21
   1924c:	bl	0 <strlen>
   19250:	mov	x2, x0
   19254:	b	1926c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x80>
   19258:	mov	w0, #0x2                   	// #2
   1925c:	b	19314 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x128>
   19260:	mov	w0, #0x1                   	// #1
   19264:	b	19314 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x128>
   19268:	mov	x2, xzr
   1926c:	add	x8, sp, #0x30
   19270:	sub	x0, x29, #0x20
   19274:	mov	w3, #0x3                   	// #3
   19278:	mov	x1, x21
   1927c:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   19280:	ldrb	w8, [sp, #56]
   19284:	and	w9, w8, #0xfffffffd
   19288:	strb	w9, [sp, #56]
   1928c:	tbnz	w8, #0, 19298 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0xac>
   19290:	mov	w8, #0x1                   	// #1
   19294:	b	192a4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0xb8>
   19298:	ldr	x8, [sp, #48]
   1929c:	str	xzr, [sp, #48]
   192a0:	orr	x8, x8, #0x1
   192a4:	tst	x8, #0xfffffffffffffffe
   192a8:	and	x9, x8, #0xfffffffffffffffe
   192ac:	cset	w10, ne  // ne = any
   192b0:	orr	x10, x9, x10
   192b4:	str	x10, [sp, #40]
   192b8:	cbnz	x9, 19348 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x15c>
   192bc:	add	x0, sp, #0x30
   192c0:	bl	0 <LLVMInitializeAArch64AsmParser>
   192c4:	ldr	x8, [sp, #40]
   192c8:	cbnz	x8, 19388 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x19c>
   192cc:	ldr	w8, [x0]
   192d0:	cbnz	w8, 19370 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x184>
   192d4:	add	x8, sp, #0x8
   192d8:	mov	x0, x19
   192dc:	add	x21, sp, #0x8
   192e0:	bl	a7b8 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv>
   192e4:	add	x0, sp, #0x8
   192e8:	sub	x1, x29, #0x20
   192ec:	bl	0 <LLVMInitializeAArch64AsmParser>
   192f0:	mov	w19, w0
   192f4:	add	x0, x21, #0x8
   192f8:	bl	0 <LLVMInitializeAArch64AsmParser>
   192fc:	add	x0, sp, #0x30
   19300:	bl	0 <LLVMInitializeAArch64AsmParser>
   19304:	mov	x0, x20
   19308:	bl	0 <LLVMInitializeAArch64AsmParser>
   1930c:	mvn	w8, w19
   19310:	and	x0, x8, #0x1
   19314:	ldp	x20, x19, [sp, #128]
   19318:	ldr	x21, [sp, #112]
   1931c:	ldp	x29, x30, [sp, #96]
   19320:	add	sp, sp, #0x90
   19324:	ret
   19328:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1932c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   19330:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   19334:	add	x0, x0, #0x0
   19338:	add	x1, x1, #0x0
   1933c:	add	x3, x3, #0x0
   19340:	mov	w2, #0x4c4                 	// #1220
   19344:	bl	0 <__assert_fail>
   19348:	orr	x8, x8, #0x1
   1934c:	add	x0, sp, #0x8
   19350:	add	x1, x29, #0x18
   19354:	str	xzr, [sp, #40]
   19358:	str	x8, [sp, #8]
   1935c:	bl	0 <LLVMInitializeAArch64AsmParser>
   19360:	ldr	x8, [sp, #8]
   19364:	cbnz	x8, 19390 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x1a4>
   19368:	ldr	x8, [sp, #40]
   1936c:	cbnz	x8, 19388 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x19c>
   19370:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   19374:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   19378:	add	x0, x0, #0x0
   1937c:	add	x1, x1, #0x0
   19380:	mov	w2, #0x4cb                 	// #1227
   19384:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   19388:	add	x0, sp, #0x28
   1938c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   19390:	add	x0, sp, #0x8
   19394:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000019398 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>:
   19398:	sub	sp, sp, #0x90
   1939c:	stp	x29, x30, [sp, #96]
   193a0:	str	x21, [sp, #112]
   193a4:	stp	x20, x19, [sp, #128]
   193a8:	add	x29, sp, #0x60
   193ac:	ldr	w8, [x0, #48]
   193b0:	cmp	w8, #0xb
   193b4:	b.ne	19404 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x6c>  // b.any
   193b8:	ldrb	w8, [x0, #80]
   193bc:	mov	x19, x0
   193c0:	cbz	w8, 1940c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x74>
   193c4:	mov	w0, #0x3                   	// #3
   193c8:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   193cc:	cbz	x0, 194d4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x13c>
   193d0:	mov	x21, x0
   193d4:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   193d8:	sub	x8, x29, #0x20
   193dc:	add	x20, x8, #0x8
   193e0:	mov	x1, x0
   193e4:	mov	x0, x20
   193e8:	bl	0 <LLVMInitializeAArch64AsmParser>
   193ec:	ldr	x21, [x21, #16]
   193f0:	cbz	x21, 19414 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x7c>
   193f4:	mov	x0, x21
   193f8:	bl	0 <strlen>
   193fc:	mov	x2, x0
   19400:	b	19418 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x80>
   19404:	mov	w0, #0x2                   	// #2
   19408:	b	194c0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x128>
   1940c:	mov	w0, #0x1                   	// #1
   19410:	b	194c0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x128>
   19414:	mov	x2, xzr
   19418:	add	x8, sp, #0x30
   1941c:	sub	x0, x29, #0x20
   19420:	mov	w3, #0x3                   	// #3
   19424:	mov	x1, x21
   19428:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1942c:	ldrb	w8, [sp, #56]
   19430:	and	w9, w8, #0xfffffffd
   19434:	strb	w9, [sp, #56]
   19438:	tbnz	w8, #0, 19444 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0xac>
   1943c:	mov	w8, #0x1                   	// #1
   19440:	b	19450 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0xb8>
   19444:	ldr	x8, [sp, #48]
   19448:	str	xzr, [sp, #48]
   1944c:	orr	x8, x8, #0x1
   19450:	tst	x8, #0xfffffffffffffffe
   19454:	and	x9, x8, #0xfffffffffffffffe
   19458:	cset	w10, ne  // ne = any
   1945c:	orr	x10, x9, x10
   19460:	str	x10, [sp, #40]
   19464:	cbnz	x9, 194f4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x15c>
   19468:	add	x0, sp, #0x30
   1946c:	bl	0 <LLVMInitializeAArch64AsmParser>
   19470:	ldr	x8, [sp, #40]
   19474:	cbnz	x8, 19534 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x19c>
   19478:	ldr	w8, [x0]
   1947c:	cbnz	w8, 1951c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x184>
   19480:	add	x8, sp, #0x8
   19484:	mov	x0, x19
   19488:	add	x21, sp, #0x8
   1948c:	bl	a7b8 <_ZNK12_GLOBAL__N_114AArch64Operand8getFPImmEv>
   19490:	add	x0, sp, #0x8
   19494:	sub	x1, x29, #0x20
   19498:	bl	0 <LLVMInitializeAArch64AsmParser>
   1949c:	mov	w19, w0
   194a0:	add	x0, x21, #0x8
   194a4:	bl	0 <LLVMInitializeAArch64AsmParser>
   194a8:	add	x0, sp, #0x30
   194ac:	bl	0 <LLVMInitializeAArch64AsmParser>
   194b0:	mov	x0, x20
   194b4:	bl	0 <LLVMInitializeAArch64AsmParser>
   194b8:	mvn	w8, w19
   194bc:	and	x0, x8, #0x1
   194c0:	ldp	x20, x19, [sp, #128]
   194c4:	ldr	x21, [sp, #112]
   194c8:	ldp	x29, x30, [sp, #96]
   194cc:	add	sp, sp, #0x90
   194d0:	ret
   194d4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   194d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   194dc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   194e0:	add	x0, x0, #0x0
   194e4:	add	x1, x1, #0x0
   194e8:	add	x3, x3, #0x0
   194ec:	mov	w2, #0x4c4                 	// #1220
   194f0:	bl	0 <__assert_fail>
   194f4:	orr	x8, x8, #0x1
   194f8:	add	x0, sp, #0x8
   194fc:	add	x1, x29, #0x18
   19500:	str	xzr, [sp, #40]
   19504:	str	x8, [sp, #8]
   19508:	bl	0 <LLVMInitializeAArch64AsmParser>
   1950c:	ldr	x8, [sp, #8]
   19510:	cbnz	x8, 1953c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x1a4>
   19514:	ldr	x8, [sp, #40]
   19518:	cbnz	x8, 19534 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x19c>
   1951c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   19520:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   19524:	add	x0, x0, #0x0
   19528:	add	x1, x1, #0x0
   1952c:	mov	w2, #0x4cb                 	// #1227
   19530:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   19534:	add	x0, sp, #0x28
   19538:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   1953c:	add	x0, sp, #0x8
   19540:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000019544 <_ZNK12_GLOBAL__N_114AArch64Operand14addImmOperandsERN4llvm6MCInstEj>:
   19544:	stp	x29, x30, [sp, #-16]!
   19548:	mov	x29, sp
   1954c:	ldr	w9, [x0, #48]
   19550:	cbnz	w9, 19568 <_ZNK12_GLOBAL__N_114AArch64Operand14addImmOperandsERN4llvm6MCInstEj+0x24>
   19554:	mov	x8, x1
   19558:	ldr	x1, [x0, #72]
   1955c:	mov	x0, x8
   19560:	ldp	x29, x30, [sp], #16
   19564:	b	19588 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>
   19568:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1956c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   19570:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   19574:	add	x0, x0, #0x0
   19578:	add	x1, x1, #0x0
   1957c:	add	x3, x3, #0x0
   19580:	mov	w2, #0x1f4                 	// #500
   19584:	bl	0 <__assert_fail>

0000000000019588 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>:
   19588:	sub	sp, sp, #0x20
   1958c:	stp	x29, x30, [sp, #16]
   19590:	add	x29, sp, #0x10
   19594:	cbz	x1, 195b4 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x2c>
   19598:	ldr	w8, [x1]
   1959c:	cmp	w8, #0x1
   195a0:	b.ne	195c4 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x3c>  // b.any
   195a4:	ldr	x8, [x1, #16]
   195a8:	mov	w9, #0x2                   	// #2
   195ac:	stp	x9, x8, [sp]
   195b0:	b	195cc <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x44>
   195b4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   195b8:	ldr	q0, [x8]
   195bc:	str	q0, [sp]
   195c0:	b	195cc <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x44>
   195c4:	mov	w8, #0x4                   	// #4
   195c8:	stp	x8, x1, [sp]
   195cc:	add	x0, x0, #0x10
   195d0:	mov	x1, sp
   195d4:	bl	0 <LLVMInitializeAArch64AsmParser>
   195d8:	ldp	x29, x30, [sp, #16]
   195dc:	add	sp, sp, #0x20
   195e0:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser16parsePrimaryExprERPKNS_6MCExprERNS_5SMLocE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser16parsePrimaryExprERPKNS_6MCExprERNS_5SMLocE>:
   0:	ldr	x0, [x0, #8]
   4:	ldr	x8, [x0]
   8:	ldr	x3, [x8, #184]
   c:	br	x3

Disassembly of section .text._ZN4llvm17MCTargetAsmParser16ParseInstructionERNS_20ParseInstructionInfoENS_9StringRefENS_8AsmTokenERNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS7_EEEE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser16ParseInstructionERNS_20ParseInstructionInfoENS_9StringRefENS_8AsmTokenERNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS7_EEEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x23, x0
  18:	mov	x0, x4
  1c:	mov	x19, x5
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x22, x1
  2c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
  30:	ldr	x8, [x23]
  34:	mov	x4, x0
  38:	mov	x0, x23
  3c:	mov	x1, x22
  40:	ldr	x6, [x8, #40]
  44:	mov	x2, x21
  48:	mov	x3, x20
  4c:	mov	x5, x19
  50:	ldp	x20, x19, [sp, #48]
  54:	ldp	x22, x21, [sp, #32]
  58:	ldr	x23, [sp, #16]
  5c:	ldp	x29, x30, [sp], #64
  60:	br	x6

Disassembly of section .text._ZN4llvm17MCTargetAsmParser28OmitRegisterFromClobberListsEj:

0000000000000000 <_ZN4llvm17MCTargetAsmParser28OmitRegisterFromClobberListsEj>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser30checkEarlyTargetMatchPredicateERNS_6MCInstERKNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS5_EEEE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser30checkEarlyTargetMatchPredicateERNS_6MCInstERKNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS5_EEEE>:
   0:	mov	w0, #0x4                   	// #4
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser25checkTargetMatchPredicateERNS_6MCInstE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser25checkTargetMatchPredicateERNS_6MCInstE>:
   0:	mov	w0, #0x4                   	// #4
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser20equalIsAsmAssignmentEv:

0000000000000000 <_ZN4llvm17MCTargetAsmParser20equalIsAsmAssignmentEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser7isLabelERNS_8AsmTokenE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser7isLabelERNS_8AsmTokenE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser22starIsStartOfStatementEv:

0000000000000000 <_ZN4llvm17MCTargetAsmParser22starIsStartOfStatementEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser19applyModifierToExprEPKNS_6MCExprENS_15MCSymbolRefExpr11VariantKindERNS_9MCContextE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser19applyModifierToExprEPKNS_6MCExprENS_15MCSymbolRefExpr11VariantKindERNS_9MCContextE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser17doBeforeLabelEmitEPNS_8MCSymbolE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser17doBeforeLabelEmitEPNS_8MCSymbolE>:
   0:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser13onLabelParsedEPNS_8MCSymbolE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser13onLabelParsedEPNS_8MCSymbolE>:
   0:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser24flushPendingInstructionsERNS_10MCStreamerE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser24flushPendingInstructionsERNS_10MCStreamerE>:
   0:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser21createTargetUnaryExprEPKNS_6MCExprENS_8AsmToken9TokenKindERNS_9MCContextE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser21createTargetUnaryExprEPKNS_6MCExprENS_8AsmToken9TokenKindERNS_9MCContextE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser11onEndOfFileEv:

0000000000000000 <_ZN4llvm17MCTargetAsmParser11onEndOfFileEv>:
   0:	ret

Disassembly of section .text._ZN4llvm12StringSwitchIjjE4CaseENS_13StringLiteralEj:

0000000000000000 <_ZN4llvm12StringSwitchIjjE4CaseENS_13StringLiteralEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w9, [x0, #20]
  10:	mov	x20, x0
  14:	cbnz	w9, 48 <_ZN4llvm12StringSwitchIjjE4CaseENS_13StringLiteralEj+0x48>
  18:	mov	x8, x2
  1c:	ldr	x2, [x20, #8]
  20:	cmp	x2, x8
  24:	b.ne	48 <_ZN4llvm12StringSwitchIjjE4CaseENS_13StringLiteralEj+0x48>  // b.any
  28:	mov	w19, w3
  2c:	cbz	x2, 3c <_ZN4llvm12StringSwitchIjjE4CaseENS_13StringLiteralEj+0x3c>
  30:	ldr	x0, [x20]
  34:	bl	0 <bcmp>
  38:	cbnz	w0, 48 <_ZN4llvm12StringSwitchIjjE4CaseENS_13StringLiteralEj+0x48>
  3c:	mov	w8, #0x1                   	// #1
  40:	strb	w8, [x20, #20]
  44:	str	w19, [x20, #16]
  48:	mov	x0, x20
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZN4llvm12StringSwitchINS_9StringRefES1_E4CaseENS_13StringLiteralES1_:

0000000000000000 <_ZN4llvm12StringSwitchINS_9StringRefES1_E4CaseENS_13StringLiteralES1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w9, [x0, #32]
  14:	mov	x20, x0
  18:	cbnz	w9, 50 <_ZN4llvm12StringSwitchINS_9StringRefES1_E4CaseENS_13StringLiteralES1_+0x50>
  1c:	mov	x8, x2
  20:	ldr	x2, [x20, #8]
  24:	cmp	x2, x8
  28:	b.ne	50 <_ZN4llvm12StringSwitchINS_9StringRefES1_E4CaseENS_13StringLiteralES1_+0x50>  // b.any
  2c:	mov	x19, x4
  30:	mov	x21, x3
  34:	cbz	x2, 44 <_ZN4llvm12StringSwitchINS_9StringRefES1_E4CaseENS_13StringLiteralES1_+0x44>
  38:	ldr	x0, [x20]
  3c:	bl	0 <bcmp>
  40:	cbnz	w0, 50 <_ZN4llvm12StringSwitchINS_9StringRefES1_E4CaseENS_13StringLiteralES1_+0x50>
  44:	mov	w8, #0x1                   	// #1
  48:	stp	x21, x19, [x20, #16]
  4c:	strb	w8, [x20, #32]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE9push_backEOS5_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE9push_backEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE9push_backEOS5_+0x4c>  // b.hs, b.nlast
  20:	ldr	x10, [x19]
  24:	ldr	x11, [x20]
  28:	cmp	w8, w9
  2c:	str	xzr, [x20]
  30:	str	x11, [x10, w8, uxtw #3]
  34:	b.cs	60 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE9push_backEOS5_+0x60>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	x0, x19
  50:	mov	x1, xzr
  54:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE9push_backEOS5_>
  58:	ldp	w8, w9, [x19, #8]
  5c:	b	20 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE9push_backEOS5_+0x20>
  60:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE9push_backEOS5_>
  64:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE9push_backEOS5_>
  68:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE9push_backEOS5_>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x43                  	// #67
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8AsmToken17getStringContentsEv:

0000000000000000 <_ZNK4llvm8AsmToken17getStringContentsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0]
   c:	cmp	w8, #0x3
  10:	b.ne	40 <_ZNK4llvm8AsmToken17getStringContentsEv+0x40>  // b.any
  14:	ldp	x9, x8, [x0, #8]
  18:	subs	x10, x8, #0x1
  1c:	cset	w11, cs  // cs = hs, nlast
  20:	cinc	x0, x9, cs  // cs = hs, nlast
  24:	cmp	x10, x11
  28:	csel	x9, x10, x11, hi  // hi = pmore
  2c:	cmp	x8, x9
  30:	csel	x8, x8, x9, cc  // cc = lo, ul, last
  34:	sub	x1, x8, x11
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8AsmToken17getStringContentsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8AsmToken17getStringContentsEv>
  48:	adrp	x3, 0 <_ZNK4llvm8AsmToken17getStringContentsEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x5b                  	// #91
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvmplEPKcRKNS_9StringRefE:

0000000000000000 <_ZN4llvmplEPKcRKNS_9StringRefE>:
   0:	mov	x2, x1
   4:	mov	x1, x0
   8:	mov	x0, x8
   c:	b	0 <_ZN4llvmplEPKcRKNS_9StringRefE>

Disassembly of section .text._ZN4llvm12StringSwitchISt4pairIiiES2_E4CaseENS_13StringLiteralES2_:

0000000000000000 <_ZN4llvm12StringSwitchISt4pairIiiES2_E4CaseENS_13StringLiteralES2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w9, [x0, #24]
  10:	mov	x19, x0
  14:	cbnz	w9, 48 <_ZN4llvm12StringSwitchISt4pairIiiES2_E4CaseENS_13StringLiteralES2_+0x48>
  18:	mov	x8, x2
  1c:	ldr	x2, [x19, #8]
  20:	cmp	x2, x8
  24:	b.ne	48 <_ZN4llvm12StringSwitchISt4pairIiiES2_E4CaseENS_13StringLiteralES2_+0x48>  // b.any
  28:	mov	x20, x3
  2c:	cbz	x2, 3c <_ZN4llvm12StringSwitchISt4pairIiiES2_E4CaseENS_13StringLiteralES2_+0x3c>
  30:	ldr	x0, [x19]
  34:	bl	0 <bcmp>
  38:	cbnz	w0, 48 <_ZN4llvm12StringSwitchISt4pairIiiES2_E4CaseENS_13StringLiteralES2_+0x48>
  3c:	mov	w8, #0x1                   	// #1
  40:	str	x20, [x19, #16]
  44:	strb	w8, [x19, #24]
  48:	mov	x0, x19
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_:

0000000000000000 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	stp	x1, x3, [x0]
   c:	strb	w2, [x0, #16]
  10:	strb	w4, [x0, #17]
  14:	bl	0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0xb8                  	// #184
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKcRKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC2EPKcRKNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x503                 	// #1283
   c:	strh	w8, [x0, #16]
  10:	stp	x1, x2, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2EPKcRKNS_9StringRefE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2EPKcRKNS_9StringRefE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKcRKNS_9StringRefE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKcRKNS_9StringRefE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKcRKNS_9StringRefE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x169                 	// #361
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8SysAlias12haveFeaturesENS_13FeatureBitsetE:

0000000000000000 <_ZNK4llvm8SysAlias12haveFeaturesENS_13FeatureBitsetE>:
   0:	sub	sp, sp, #0x20
   4:	ldr	x10, [x0, #32]
   8:	ldr	q0, [x0, #16]
   c:	mov	x9, xzr
  10:	add	x8, x0, #0x10
  14:	str	x10, [sp, #16]
  18:	mov	x10, sp
  1c:	str	q0, [sp]
  20:	ldr	x11, [x1, x9]
  24:	ldr	x12, [x10, x9]
  28:	and	x11, x12, x11
  2c:	str	x11, [x10, x9]
  30:	add	x9, x9, #0x8
  34:	cmp	x9, #0x18
  38:	b.ne	20 <_ZNK4llvm8SysAlias12haveFeaturesENS_13FeatureBitsetE+0x20>  // b.any
  3c:	ldp	x9, x10, [sp]
  40:	ldp	x11, x12, [x8]
  44:	ldr	x13, [sp, #16]
  48:	ldr	x8, [x8, #16]
  4c:	eor	x9, x9, x11
  50:	eor	x10, x10, x12
  54:	eor	x8, x13, x8
  58:	orr	x9, x9, x10
  5c:	orr	x8, x9, x8
  60:	cmp	x8, #0x0
  64:	cset	w0, eq  // eq = none
  68:	add	sp, sp, #0x20
  6c:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm18MCParsedAsmOperandD2Ev:

0000000000000000 <_ZN4llvm18MCParsedAsmOperandD2Ev>:
   0:	adrp	x9, 0 <_ZTVN4llvm18MCParsedAsmOperandE>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #16]
   c:	ldr	x9, [x9]
  10:	add	x10, x8, #0x20
  14:	cmp	x0, x10
  18:	add	x9, x9, #0x10
  1c:	str	x9, [x8]
  20:	b.eq	28 <_ZN4llvm18MCParsedAsmOperandD2Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZN4llvm18MCParsedAsmOperand10getSymNameEv:

0000000000000000 <_ZN4llvm18MCParsedAsmOperand10getSymNameEv>:
   0:	mov	x0, xzr
   4:	mov	x1, xzr
   8:	ret

Disassembly of section .text._ZN4llvm18MCParsedAsmOperand9getOpDeclEv:

0000000000000000 <_ZN4llvm18MCParsedAsmOperand9getOpDeclEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm18MCParsedAsmOperand13needAddressOfEv:

0000000000000000 <_ZNK4llvm18MCParsedAsmOperand13needAddressOfEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm18MCParsedAsmOperand15isOffsetOfLocalEv:

0000000000000000 <_ZNK4llvm18MCParsedAsmOperand15isOffsetOfLocalEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm18MCParsedAsmOperand14getOffsetOfLocEv:

0000000000000000 <_ZNK4llvm18MCParsedAsmOperand14getOffsetOfLocEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	cbz	x1, 28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  18:	mov	x0, x19
  1c:	bl	0 <strlen>
  20:	mov	x2, x0
  24:	b	2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  28:	mov	x2, xzr
  2c:	mov	x0, x20
  30:	mov	x1, x19
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm11raw_ostreamlsEPKc>

Disassembly of section .text._ZNK4llvm7APFloat14bitcastToAPIntEv:

0000000000000000 <_ZNK4llvm7APFloat14bitcastToAPIntEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x21, [x0, #8]
  14:	mov	x19, x0
  18:	mov	x20, x8
  1c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  20:	cmp	x0, x21
  24:	b.eq	40 <_ZNK4llvm7APFloat14bitcastToAPIntEv+0x40>  // b.none
  28:	add	x0, x19, #0x8
  2c:	mov	x8, x20
  30:	ldp	x20, x19, [sp, #32]
  34:	ldr	x21, [sp, #16]
  38:	ldp	x29, x30, [sp], #48
  3c:	b	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
  40:	add	x0, x19, #0x8
  44:	mov	x8, x20
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w20, [x0, #8]
  10:	mov	x19, x0
  14:	cmp	w20, #0x40
  18:	b.ls	34 <_ZNK4llvm5APInt12getZExtValueEv+0x34>  // b.plast
  1c:	mov	x0, x19
  20:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  24:	sub	w8, w20, w0
  28:	cmp	w8, #0x41
  2c:	b.cs	44 <_ZNK4llvm5APInt12getZExtValueEv+0x44>  // b.hs, b.nlast
  30:	ldr	x19, [x19]
  34:	ldr	x0, [x19]
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  48:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  4c:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x657                 	// #1623
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm5APInt15clearUnusedBitsEv:

0000000000000000 <_ZN4llvm5APInt15clearUnusedBitsEv>:
   0:	ldr	w9, [x0, #8]
   4:	mov	x8, #0xffffffffffffffff    	// #-1
   8:	neg	w10, w9
   c:	cmp	w9, #0x40
  10:	lsr	x8, x8, x10
  14:	b.hi	20 <_ZN4llvm5APInt15clearUnusedBitsEv+0x20>  // b.pmore
  18:	mov	x9, x0
  1c:	b	34 <_ZN4llvm5APInt15clearUnusedBitsEv+0x34>
  20:	ldr	x10, [x0]
  24:	add	x9, x9, #0x3f
  28:	lsr	x9, x9, #6
  2c:	sub	w9, w9, #0x1
  30:	add	x9, x10, w9, uxtw #3
  34:	ldr	x10, [x9]
  38:	and	x8, x10, x8
  3c:	str	x8, [x9]
  40:	ret

Disassembly of section .text._ZN4llvm7APFloat7StorageC2IJRKNS_5APIntEEEERKNS_12fltSemanticsEDpOT_:

0000000000000000 <_ZN4llvm7APFloat7StorageC2IJRKNS_5APIntEEEERKNS_12fltSemanticsEDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  20:	cmp	x0, x20
  24:	b.eq	44 <_ZN4llvm7APFloat7StorageC2IJRKNS_5APIntEEEERKNS_12fltSemanticsEDpOT_+0x44>  // b.none
  28:	mov	x0, x21
  2c:	mov	x1, x20
  30:	mov	x2, x19
  34:	ldp	x20, x19, [sp, #32]
  38:	ldr	x21, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	b	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
  44:	mov	x0, x21
  48:	mov	x1, x20
  4c:	mov	x2, x19
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	b	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>

Disassembly of section .text._ZN4llvm7APFloat7StorageD2Ev:

0000000000000000 <_ZN4llvm7APFloat7StorageD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  18:	cmp	x0, x20
  1c:	b.eq	30 <_ZN4llvm7APFloat7StorageD2Ev+0x30>  // b.none
  20:	mov	x0, x19
  24:	ldp	x20, x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
  30:	ldr	x1, [x19, #8]!
  34:	cbz	x1, 40 <_ZN4llvm7APFloat7StorageD2Ev+0x40>
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm7APFloat7StorageD2Ev>
  40:	str	xzr, [x19]
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_:

0000000000000000 <_ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_>:
   0:	cbz	x1, 4c <_ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_+0x4c>
   4:	stp	x29, x30, [sp, #-48]!
   8:	str	x21, [sp, #16]
   c:	stp	x20, x19, [sp, #32]
  10:	mov	x29, sp
  14:	mov	x19, x1
  18:	ldr	x8, [x19, #-8]!
  1c:	cbz	x8, 38 <_ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_+0x38>
  20:	sub	x20, x1, #0x18
  24:	lsl	x21, x8, #5
  28:	add	x0, x20, x21
  2c:	bl	0 <_ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_>
  30:	subs	x21, x21, #0x20
  34:	b.ne	28 <_ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_+0x28>  // b.any
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	b	0 <_ZdaPv>
  4c:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 114 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x114>
  c4:	lsl	x22, x8, #3
  c8:	mov	x9, x22
  cc:	mov	x10, x20
  d0:	ldr	x11, [x0]
  d4:	str	xzr, [x0], #8
  d8:	subs	x9, x9, #0x8
  dc:	str	x11, [x10], #8
  e0:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xd0>  // b.any
  e4:	ldr	x0, [x19]
  e8:	cbz	w8, 114 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x114>
  ec:	sub	x23, x0, #0x8
  f0:	ldr	x0, [x23, x22]
  f4:	cbz	x0, 104 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x104>
  f8:	ldr	x8, [x0]
  fc:	ldr	x8, [x8, #8]
 100:	blr	x8
 104:	str	xzr, [x23, x22]
 108:	subs	x22, x22, #0x8
 10c:	b.ne	f0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xf0>  // b.any
 110:	ldr	x0, [x19]
 114:	add	x8, x19, #0x10
 118:	cmp	x0, x8
 11c:	b.eq	124 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x124>  // b.none
 120:	bl	0 <free>
 124:	str	x20, [x19]
 128:	str	w21, [x19, #12]
 12c:	ldp	x20, x19, [sp, #48]
 130:	ldp	x22, x21, [sp, #32]
 134:	ldr	x23, [sp, #16]
 138:	ldp	x29, x30, [sp], #64
 13c:	ret

Disassembly of section .text._ZN4llvm12StringSwitchINS_9AArch64CC8CondCodeES2_E4CaseENS_13StringLiteralES2_:

0000000000000000 <_ZN4llvm12StringSwitchINS_9AArch64CC8CondCodeES2_E4CaseENS_13StringLiteralES2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w9, [x0, #20]
  10:	mov	x20, x0
  14:	cbnz	w9, 48 <_ZN4llvm12StringSwitchINS_9AArch64CC8CondCodeES2_E4CaseENS_13StringLiteralES2_+0x48>
  18:	mov	x8, x2
  1c:	ldr	x2, [x20, #8]
  20:	cmp	x2, x8
  24:	b.ne	48 <_ZN4llvm12StringSwitchINS_9AArch64CC8CondCodeES2_E4CaseENS_13StringLiteralES2_+0x48>  // b.any
  28:	mov	w19, w3
  2c:	cbz	x2, 3c <_ZN4llvm12StringSwitchINS_9AArch64CC8CondCodeES2_E4CaseENS_13StringLiteralES2_+0x3c>
  30:	ldr	x0, [x20]
  34:	bl	0 <bcmp>
  38:	cbnz	w0, 48 <_ZN4llvm12StringSwitchINS_9AArch64CC8CondCodeES2_E4CaseENS_13StringLiteralES2_+0x48>
  3c:	mov	w8, #0x1                   	// #1
  40:	strb	w8, [x20, #20]
  44:	str	w19, [x20, #16]
  48:	mov	x0, x20
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZN4llvm10MCAsmLexer7peekTokEb:

0000000000000000 <_ZN4llvm10MCAsmLexer7peekTokEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w9, #0x1                   	// #1
   c:	stp	xzr, xzr, [x8, #8]
  10:	str	w9, [x8, #32]
  14:	str	xzr, [x8, #24]
  18:	ldr	x9, [x0]
  1c:	and	w3, w1, #0x1
  20:	mov	w2, #0x1                   	// #1
  24:	mov	x1, x8
  28:	ldr	x9, [x9, #32]
  2c:	blr	x9
  30:	cmp	x0, #0x1
  34:	b.ne	40 <_ZN4llvm10MCAsmLexer7peekTokEb+0x40>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm10MCAsmLexer7peekTokEb>
  44:	adrp	x1, 0 <_ZN4llvm10MCAsmLexer7peekTokEb>
  48:	adrp	x3, 0 <_ZN4llvm10MCAsmLexer7peekTokEb>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x6f                  	// #111
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9StringRef7compareES0_:

0000000000000000 <_ZNK4llvm9StringRef7compareES0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0, #8]
  10:	mov	x19, x2
  14:	cmp	x2, x20
  18:	csel	x2, x2, x20, cc  // cc = lo, ul, last
  1c:	cbz	x2, 3c <_ZNK4llvm9StringRef7compareES0_+0x3c>
  20:	ldr	x0, [x0]
  24:	bl	0 <memcmp>
  28:	cmp	w0, #0x0
  2c:	mov	w9, #0x1                   	// #1
  30:	mov	w8, w0
  34:	cneg	w0, w9, lt  // lt = tstop
  38:	cbnz	w8, 54 <_ZNK4llvm9StringRef7compareES0_+0x54>
  3c:	cmp	x20, x19
  40:	b.ne	4c <_ZNK4llvm9StringRef7compareES0_+0x4c>  // b.any
  44:	mov	w0, wzr
  48:	b	54 <_ZNK4llvm9StringRef7compareES0_+0x54>
  4c:	mov	w8, #0xffffffff            	// #-1
  50:	cneg	w0, w8, cs  // cs = hs, nlast
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm8AsmToken9getIntValEv:

0000000000000000 <_ZNK4llvm8AsmToken9getIntValEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0]
   c:	cmp	w8, #0x4
  10:	b.ne	20 <_ZNK4llvm8AsmToken9getIntValEv+0x20>  // b.any
  14:	add	x0, x0, #0x18
  18:	ldp	x29, x30, [sp], #16
  1c:	b	0 <_ZNK4llvm8AsmToken9getIntValEv>
  20:	adrp	x0, 0 <_ZNK4llvm8AsmToken9getIntValEv>
  24:	adrp	x1, 0 <_ZNK4llvm8AsmToken9getIntValEv>
  28:	adrp	x3, 0 <_ZNK4llvm8AsmToken9getIntValEv>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0x74                  	// #116
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7APFloatC2Ed:

0000000000000000 <_ZN4llvm7APFloatC2Ed>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	str	x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	add	x19, x0, #0x8
  14:	add	x0, sp, #0x8
  18:	bl	0 <_ZN4llvm6detail9IEEEFloatC1Ed>
  1c:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
  20:	mov	x2, x0
  24:	add	x1, sp, #0x8
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm7APFloat7StorageC1ENS_6detail9IEEEFloatERKNS_12fltSemanticsE>
  30:	add	x0, sp, #0x8
  34:	bl	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
  38:	ldr	x19, [sp, #48]
  3c:	ldp	x29, x30, [sp, #32]
  40:	add	sp, sp, #0x40
  44:	ret

Disassembly of section .text._ZN4llvm7APFloat10changeSignEv:

0000000000000000 <_ZN4llvm7APFloat10changeSignEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0, #8]
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  18:	cmp	x0, x20
  1c:	b.eq	30 <_ZN4llvm7APFloat10changeSignEv+0x30>  // b.none
  20:	add	x0, x19, #0x8
  24:	ldp	x20, x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZN4llvm6detail9IEEEFloat10changeSignEv>
  30:	add	x0, x19, #0x8
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm6detail13DoubleAPFloat10changeSignEv>

Disassembly of section .text._ZN4llvm8ExpectedINS_11APFloatBase8opStatusEEdeEv:

0000000000000000 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	tbnz	w8, #1, 1c <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEEdeEv+0x1c>
  10:	tbnz	w8, #0, 20 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEEdeEv+0x20>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	bl	0 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEEdeEv>
  20:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEEdeEv>
  24:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEEdeEv>
  28:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEEdeEv>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0x272                 	// #626
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedINS_11APFloatBase8opStatusEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 40 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEED2Ev+0x40>
  18:	tbz	w8, #0, 34 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEED2Ev+0x34>
  1c:	ldr	x0, [x19]
  20:	cbz	x0, 30 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEED2Ev+0x30>
  24:	ldr	x8, [x0]
  28:	ldr	x8, [x8, #8]
  2c:	blr	x8
  30:	str	xzr, [x19]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm8ExpectedINS_11APFloatBase8opStatusEED2Ev>

Disassembly of section .text._ZNK4llvm5APInt12getSExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getSExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	cmp	w8, #0x40
  18:	b.hi	34 <_ZNK4llvm5APInt12getSExtValueEv+0x34>  // b.pmore
  1c:	cbz	w8, 58 <_ZNK4llvm5APInt12getSExtValueEv+0x58>
  20:	ldr	x9, [x19]
  24:	neg	x8, x8
  28:	lsl	x9, x9, x8
  2c:	asr	x0, x9, x8
  30:	b	4c <_ZNK4llvm5APInt12getSExtValueEv+0x4c>
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt12getSExtValueEv>
  3c:	cmp	w0, #0x41
  40:	b.cs	78 <_ZNK4llvm5APInt12getSExtValueEv+0x78>  // b.hs, b.nlast
  44:	ldr	x8, [x19]
  48:	ldr	x0, [x8]
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  5c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  60:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x307                 	// #775
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  7c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  80:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x663                 	// #1635
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt16getMinSignedBitsEv:

0000000000000000 <_ZNK4llvm5APInt16getMinSignedBitsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	sub	w1, w8, #0x1
  18:	bl	0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  1c:	ldr	w20, [x19, #8]
  20:	tbz	w0, #0, 30 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x30>
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  2c:	b	54 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x54>
  30:	cmp	w20, #0x40
  34:	b.hi	4c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x4c>  // b.pmore
  38:	ldr	x8, [x19]
  3c:	clz	x8, x8
  40:	add	w8, w20, w8
  44:	sub	w0, w8, #0x40
  48:	b	54 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x54>
  4c:	mov	x0, x19
  50:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  54:	sub	w8, w20, w0
  58:	ldp	x20, x19, [sp, #16]
  5c:	add	w0, w8, #0x1
  60:	ldp	x29, x30, [sp], #32
  64:	ret

Disassembly of section .text._ZNK4llvm5APInt16countLeadingOnesEv:

0000000000000000 <_ZNK4llvm5APInt16countLeadingOnesEv>:
   0:	ldr	w8, [x0, #8]
   4:	cmp	w8, #0x40
   8:	b.hi	30 <_ZNK4llvm5APInt16countLeadingOnesEv+0x30>  // b.pmore
   c:	ldr	x9, [x0]
  10:	neg	x8, x8
  14:	lsl	x8, x9, x8
  18:	mvn	x9, x8
  1c:	cmn	x8, #0x1
  20:	clz	x8, x9
  24:	mov	w9, #0x40                  	// #64
  28:	csel	w0, w9, w8, eq  // eq = none
  2c:	ret
  30:	b	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>

Disassembly of section .text._ZNK4llvm5APIntixEj:

0000000000000000 <_ZNK4llvm5APIntixEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	44 <_ZNK4llvm5APIntixEj+0x44>  // b.plast
  14:	mov	w9, #0x1                   	// #1
  18:	cmp	w8, #0x40
  1c:	lsl	x8, x9, x1
  20:	b.ls	30 <_ZNK4llvm5APIntixEj+0x30>  // b.plast
  24:	ldr	x9, [x0]
  28:	lsr	w10, w1, #6
  2c:	add	x0, x9, w10, uxtw #3
  30:	ldr	x9, [x0]
  34:	tst	x9, x8
  38:	cset	w0, ne  // ne = any
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APIntixEj>
  48:	adrp	x1, 0 <_ZNK4llvm5APIntixEj>
  4c:	adrp	x3, 0 <_ZNK4llvm5APIntixEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x472                 	// #1138
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7APFloat7StorageC2ERKS1_:

0000000000000000 <_ZN4llvm7APFloat7StorageC2ERKS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x21, [x1]
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  20:	cmp	x0, x21
  24:	b.eq	40 <_ZN4llvm7APFloat7StorageC2ERKS1_+0x40>  // b.none
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	ldp	x20, x19, [sp, #32]
  34:	ldr	x21, [sp, #16]
  38:	ldp	x29, x30, [sp], #48
  3c:	b	0 <_ZN4llvm6detail9IEEEFloatC1ERKS1_>
  40:	mov	x0, x20
  44:	mov	x1, x19
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKS1_>

Disassembly of section .text._ZN4llvm7APFloat7StorageC2IJEEERKNS_12fltSemanticsEDpOT_:

0000000000000000 <_ZN4llvm7APFloat7StorageC2IJEEERKNS_12fltSemanticsEDpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  18:	cmp	x0, x19
  1c:	b.eq	34 <_ZN4llvm7APFloat7StorageC2IJEEERKNS_12fltSemanticsEDpOT_+0x34>  // b.none
  20:	mov	x0, x20
  24:	mov	x1, x19
  28:	ldp	x20, x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
  34:	mov	x0, x20
  38:	mov	x1, x19
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>

Disassembly of section .text._ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_:

0000000000000000 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #96]
   8:	add	x29, sp, #0x60
   c:	ldr	x8, [x0]
  10:	orr	x8, x8, #0x1
  14:	str	x8, [sp]
  18:	str	xzr, [x0]
  1c:	add	x8, sp, #0x8
  20:	mov	x0, sp
  24:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  28:	ldr	x8, [sp, #8]
  2c:	tst	x8, #0xfffffffffffffffe
  30:	and	x9, x8, #0xfffffffffffffffe
  34:	cset	w8, ne  // ne = any
  38:	orr	x8, x9, x8
  3c:	str	x8, [sp, #8]
  40:	cbnz	x9, 5c <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0x5c>
  44:	cbnz	x8, cc <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xcc>
  48:	ldr	x8, [sp]
  4c:	cbnz	x8, d4 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xd4>
  50:	ldp	x29, x30, [sp, #96]
  54:	add	sp, sp, #0x70
  58:	ret
  5c:	sturb	wzr, [x29, #-16]
  60:	stp	xzr, xzr, [sp, #32]
  64:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
  68:	ldr	x10, [x10]
  6c:	sub	x8, x29, #0x20
  70:	mov	w9, #0x1                   	// #1
  74:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  78:	add	x11, x8, #0x10
  7c:	str	w9, [sp, #48]
  80:	add	x9, x10, #0x10
  84:	add	x1, x1, #0x0
  88:	add	x0, sp, #0x10
  8c:	stp	x11, xzr, [x29, #-32]
  90:	stp	x9, xzr, [sp, #16]
  94:	str	x8, [sp, #56]
  98:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  9c:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a0:	add	x1, x1, #0x0
  a4:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a8:	add	x1, sp, #0x8
  ac:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  b0:	add	x0, sp, #0x10
  b4:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  b8:	ldr	x0, [x0]
  bc:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  c0:	add	x1, x1, #0x0
  c4:	mov	w2, #0x2c9                 	// #713
  c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  cc:	add	x0, sp, #0x8
  d0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  d4:	mov	x0, sp
  d8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x8
  1c:	ldr	x8, [x0]
  20:	tst	x8, #0xfffffffffffffffe
  24:	and	x21, x8, #0xfffffffffffffffe
  28:	cset	w8, ne  // ne = any
  2c:	orr	x8, x21, x8
  30:	str	x8, [x0]
  34:	cbz	x21, 104 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x104>
  38:	str	xzr, [x0]
  3c:	ldr	x8, [x21]
  40:	mov	x20, x1
  44:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  48:	mov	x0, x21
  4c:	ldr	x8, [x8, #48]
  50:	ldr	x1, [x1]
  54:	blr	x8
  58:	tbz	w0, #0, 110 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x110>
  5c:	mov	w8, #0x1                   	// #1
  60:	str	x8, [x19]
  64:	ldp	x22, x8, [x21, #8]
  68:	cmp	x22, x8
  6c:	b.eq	140 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x140>  // b.none
  70:	sub	x23, x8, #0x8
  74:	mov	w8, #0x1                   	// #1
  78:	orr	x8, x8, #0x1
  7c:	stur	x8, [x29, #-8]
  80:	str	xzr, [x19]
  84:	ldr	x8, [x22]
  88:	str	xzr, [x22]
  8c:	add	x0, sp, #0x8
  90:	mov	x1, x20
  94:	str	x8, [sp, #8]
  98:	add	x8, sp, #0x10
  9c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  a0:	add	x8, x29, #0x18
  a4:	sub	x0, x29, #0x8
  a8:	add	x1, sp, #0x10
  ac:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  b0:	ldr	x8, [x19]
  b4:	cbnz	x8, 168 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x168>
  b8:	ldr	x8, [x29, #24]
  bc:	ldr	x9, [sp, #16]
  c0:	str	xzr, [x29, #24]
  c4:	orr	x8, x8, #0x1
  c8:	str	x8, [x19]
  cc:	cbnz	x9, 170 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x170>
  d0:	ldr	x0, [sp, #8]
  d4:	cbz	x0, e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  d8:	ldr	x8, [x0]
  dc:	ldr	x8, [x8, #8]
  e0:	blr	x8
  e4:	ldur	x8, [x29, #-8]
  e8:	str	xzr, [sp, #8]
  ec:	cbnz	x8, 178 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x178>
  f0:	cmp	x23, x22
  f4:	b.eq	140 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x140>  // b.none
  f8:	ldr	x8, [x19]
  fc:	add	x22, x22, #0x8
 100:	b	78 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x78>
 104:	mov	w8, #0x1                   	// #1
 108:	str	x8, [x19]
 10c:	b	150 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x150>
 110:	mov	x0, sp
 114:	mov	x8, x19
 118:	mov	x1, x20
 11c:	str	x21, [sp]
 120:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 124:	ldr	x0, [sp]
 128:	cbz	x0, 138 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x138>
 12c:	ldr	x8, [x0]
 130:	ldr	x8, [x8, #8]
 134:	blr	x8
 138:	str	xzr, [sp]
 13c:	b	150 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x150>
 140:	ldr	x8, [x21]
 144:	mov	x0, x21
 148:	ldr	x8, [x8, #8]
 14c:	blr	x8
 150:	ldp	x20, x19, [sp, #80]
 154:	ldp	x22, x21, [sp, #64]
 158:	ldr	x23, [sp, #48]
 15c:	ldp	x29, x30, [sp, #32]
 160:	add	sp, sp, #0x60
 164:	ret
 168:	mov	x0, x19
 16c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 170:	add	x0, sp, #0x10
 174:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 178:	sub	x0, x29, #0x8
 17c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	34 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x34>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	b	48 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x48>
  34:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  38:	add	x1, x1, #0x0
  3c:	mov	w2, #0x7                   	// #7
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x8
  1c:	ldr	x8, [x0]
  20:	mov	x21, x1
  24:	tst	x8, #0xfffffffffffffffe
  28:	and	x9, x8, #0xfffffffffffffffe
  2c:	cset	w8, ne  // ne = any
  30:	orr	x8, x9, x8
  34:	str	x8, [x0]
  38:	cbz	x9, 14c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x14c>
  3c:	ldr	x8, [x21]
  40:	mov	x20, x0
  44:	tst	x8, #0xfffffffffffffffe
  48:	and	x9, x8, #0xfffffffffffffffe
  4c:	cset	w8, ne  // ne = any
  50:	orr	x8, x9, x8
  54:	str	x8, [x21]
  58:	cbz	x9, 20c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x20c>
  5c:	ldr	x9, [x20]
  60:	ands	x0, x9, #0xfffffffffffffffe
  64:	b.eq	f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xf4>  // b.none
  68:	ldr	x8, [x0]
  6c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  70:	ldr	x8, [x8, #48]
  74:	ldr	x1, [x1]
  78:	blr	x8
  7c:	tbz	w0, #0, f0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xf0>
  80:	ldr	x8, [x21]
  84:	ldr	x9, [x20]
  88:	ands	x0, x8, #0xfffffffffffffffe
  8c:	and	x23, x9, #0xfffffffffffffffe
  90:	b.eq	1e0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1e0>  // b.none
  94:	ldr	x8, [x0]
  98:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  9c:	ldr	x8, [x8, #48]
  a0:	ldr	x1, [x1]
  a4:	blr	x8
  a8:	ldr	x8, [x21]
  ac:	and	x22, x8, #0xfffffffffffffffe
  b0:	tbz	w0, #0, 1e4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1e4>
  b4:	str	xzr, [x21]
  b8:	ldp	x21, x24, [x22, #8]
  bc:	cmp	x21, x24
  c0:	b.eq	e0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe0>  // b.none
  c4:	add	x23, x23, #0x8
  c8:	mov	x0, x23
  cc:	mov	x1, x21
  d0:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  d4:	add	x21, x21, #0x8
  d8:	cmp	x24, x21
  dc:	b.ne	c8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xc8>  // b.any
  e0:	cbz	x22, 20c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x20c>
  e4:	ldr	x8, [x22]
  e8:	mov	x0, x22
  ec:	b	204 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x204>
  f0:	ldr	x8, [x21]
  f4:	ands	x0, x8, #0xfffffffffffffffe
  f8:	b.eq	160 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x160>  // b.none
  fc:	ldr	x8, [x0]
 100:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 104:	ldr	x8, [x8, #48]
 108:	ldr	x1, [x1]
 10c:	blr	x8
 110:	tbz	w0, #0, 160 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x160>
 114:	ldr	x8, [x21]
 118:	sub	x2, x29, #0x8
 11c:	and	x0, x8, #0xfffffffffffffffe
 120:	ldr	x1, [x0, #8]!
 124:	ldr	x8, [x20]
 128:	and	x8, x8, #0xfffffffffffffffe
 12c:	stur	x8, [x29, #-8]
 130:	str	xzr, [x20]
 134:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 138:	ldur	x0, [x29, #-8]
 13c:	cbz	x0, 14c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x14c>
 140:	ldr	x8, [x0]
 144:	ldr	x8, [x8, #8]
 148:	blr	x8
 14c:	ldr	x8, [x21]
 150:	orr	x8, x8, #0x1
 154:	str	x8, [x19]
 158:	str	xzr, [x21]
 15c:	b	21c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x21c>
 160:	mov	w0, #0x20                  	// #32
 164:	bl	0 <_Znwm>
 168:	ldr	x8, [x20]
 16c:	add	x1, sp, #0x10
 170:	add	x2, sp, #0x8
 174:	mov	x22, x0
 178:	and	x8, x8, #0xfffffffffffffffe
 17c:	str	x8, [sp, #16]
 180:	str	xzr, [x20]
 184:	ldr	x8, [x21]
 188:	and	x8, x8, #0xfffffffffffffffe
 18c:	str	x8, [sp, #8]
 190:	str	xzr, [x21]
 194:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 198:	orr	x8, x22, #0x1
 19c:	sub	x0, x29, #0x8
 1a0:	stur	xzr, [x29, #-8]
 1a4:	str	x8, [x19]
 1a8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1ac:	ldr	x0, [sp, #8]
 1b0:	cbz	x0, 1c0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1c0>
 1b4:	ldr	x8, [x0]
 1b8:	ldr	x8, [x8, #8]
 1bc:	blr	x8
 1c0:	ldr	x0, [sp, #16]
 1c4:	str	xzr, [sp, #8]
 1c8:	cbz	x0, 1d8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1d8>
 1cc:	ldr	x8, [x0]
 1d0:	ldr	x8, [x8, #8]
 1d4:	blr	x8
 1d8:	str	xzr, [sp, #16]
 1dc:	b	21c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x21c>
 1e0:	mov	x22, xzr
 1e4:	add	x0, x23, #0x8
 1e8:	sub	x1, x29, #0x8
 1ec:	stur	x22, [x29, #-8]
 1f0:	str	xzr, [x21]
 1f4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1f8:	ldur	x0, [x29, #-8]
 1fc:	cbz	x0, 20c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x20c>
 200:	ldr	x8, [x0]
 204:	ldr	x8, [x8, #8]
 208:	blr	x8
 20c:	ldr	x8, [x20]
 210:	orr	x8, x8, #0x1
 214:	str	x8, [x19]
 218:	str	xzr, [x20]
 21c:	ldp	x20, x19, [sp, #80]
 220:	ldp	x22, x21, [sp, #64]
 224:	ldp	x24, x23, [sp, #48]
 228:	ldp	x29, x30, [sp, #32]
 22c:	add	sp, sp, #0x60
 230:	ret

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	ldr	x0, [x0]
  18:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  1c:	mov	x19, x8
  20:	ldr	x9, [x0]
  24:	ldr	x9, [x9, #48]
  28:	ldr	x1, [x1]
  2c:	blr	x9
  30:	ldr	x20, [x21]
  34:	str	xzr, [x21]
  38:	tbz	w0, #0, 80 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x80>
  3c:	ldr	x8, [x20]
  40:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  44:	mov	x0, x20
  48:	ldr	x8, [x8, #48]
  4c:	ldr	x1, [x1]
  50:	blr	x8
  54:	tbz	w0, #0, 98 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x98>
  58:	mov	w8, #0x1                   	// #1
  5c:	str	x8, [x19]
  60:	cbz	x20, 88 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x88>
  64:	ldr	x8, [x20]
  68:	mov	x0, x20
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldr	x1, [x8, #8]
  78:	ldp	x29, x30, [sp], #48
  7c:	br	x1
  80:	orr	x8, x20, #0x1
  84:	str	x8, [x19]
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  9c:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  a0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x329                 	// #809
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_:

0000000000000000 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZTVN4llvm9ErrorListE>
  14:	ldr	x8, [x8]
  18:	mov	x20, x0
  1c:	stp	xzr, xzr, [x0, #16]
  20:	mov	x19, x1
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0]
  2c:	str	xzr, [x20, #8]!
  30:	ldr	x0, [x1]
  34:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  38:	mov	x21, x2
  3c:	ldr	x8, [x0]
  40:	ldr	x8, [x8, #48]
  44:	ldr	x1, [x1]
  48:	blr	x8
  4c:	tbnz	w0, #0, 90 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0x90>
  50:	ldr	x0, [x21]
  54:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  58:	ldr	x8, [x0]
  5c:	ldr	x8, [x8, #48]
  60:	ldr	x1, [x1]
  64:	blr	x8
  68:	tbnz	w0, #0, 90 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0x90>
  6c:	mov	x0, x20
  70:	mov	x1, x19
  74:	bl	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  78:	mov	x0, x20
  7c:	mov	x1, x21
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	b	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  90:	adrp	x0, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  94:	adrp	x1, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  98:	adrp	x3, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x182                 	// #386
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm9ErrorListESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm9ErrorListESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 38 <_ZNSt10unique_ptrIN4llvm9ErrorListESt14default_deleteIS1_EED2Ev+0x38>
  18:	adrp	x8, 0 <_ZTVN4llvm9ErrorListE>
  1c:	ldr	x8, [x8]
  20:	mov	x0, x20
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0], #8
  2c:	bl	0 <_ZNSt10unique_ptrIN4llvm9ErrorListESt14default_deleteIS1_EED2Ev>
  30:	mov	x0, x20
  34:	bl	0 <_ZdlPv>
  38:	str	xzr, [x19]
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	ldp	x8, x9, [x0, #8]
   4:	mov	x2, x1
   8:	cmp	x8, x9
   c:	b.eq	2c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x2c>  // b.none
  10:	ldr	x9, [x2]
  14:	str	xzr, [x2]
  18:	str	x9, [x8]
  1c:	ldr	x8, [x0, #8]
  20:	add	x8, x8, #0x8
  24:	str	x8, [x0, #8]
  28:	ret
  2c:	mov	x1, x8
  30:	b	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  48:	ldr	x8, [x24]
  4c:	mov	x23, x0
  50:	subs	x9, x21, x22
  54:	str	xzr, [x24]
  58:	mov	x24, x0
  5c:	str	x8, [x0, x9]
  60:	b.eq	c4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc4>  // b.none
  64:	mov	x24, x23
  68:	mov	x26, x22
  6c:	ldr	x8, [x26]
  70:	str	xzr, [x26]
  74:	str	x8, [x24]
  78:	ldr	x0, [x26]
  7c:	cbz	x0, 8c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x8c>
  80:	ldr	x8, [x0]
  84:	ldr	x8, [x8, #8]
  88:	blr	x8
  8c:	str	xzr, [x26], #8
  90:	cmp	x21, x26
  94:	add	x24, x24, #0x8
  98:	b.ne	6c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x6c>  // b.any
  9c:	b	c4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc4>
  a0:	ldr	x8, [x21]
  a4:	str	xzr, [x21]
  a8:	str	x8, [x24]
  ac:	ldr	x0, [x21]
  b0:	cbz	x0, c0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc0>
  b4:	ldr	x8, [x0]
  b8:	ldr	x8, [x8, #8]
  bc:	blr	x8
  c0:	str	xzr, [x21], #8
  c4:	cmp	x25, x21
  c8:	add	x24, x24, #0x8
  cc:	b.ne	a0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa0>  // b.any
  d0:	cbz	x22, dc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xdc>
  d4:	mov	x0, x22
  d8:	bl	0 <_ZdlPv>
  dc:	add	x8, x23, x20, lsl #3
  e0:	stp	x23, x24, [x19]
  e4:	str	x8, [x19, #16]
  e8:	ldp	x20, x19, [sp, #64]
  ec:	ldp	x22, x21, [sp, #48]
  f0:	ldp	x24, x23, [sp, #32]
  f4:	ldp	x26, x25, [sp, #16]
  f8:	ldp	x29, x30, [sp], #80
  fc:	ret

Disassembly of section .text._ZNKSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  14:	sub	x10, x8, x9, asr #3
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #3
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #60
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x8, x9, [x0]
  10:	ldr	x10, [x0, #16]
  14:	mov	x19, x0
  18:	sub	x11, x1, x8
  1c:	cmp	x9, x10
  20:	asr	x20, x11, #3
  24:	b.eq	40 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x40>  // b.none
  28:	cmp	x9, x1
  2c:	b.eq	50 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x50>  // b.none
  30:	add	x1, x8, x20, lsl #3
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>
  3c:	b	68 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x68>
  40:	add	x1, x8, x20, lsl #3
  44:	mov	x0, x19
  48:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>
  4c:	b	68 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x68>
  50:	ldr	x8, [x2]
  54:	str	xzr, [x2]
  58:	str	x8, [x9]
  5c:	ldr	x8, [x19, #8]
  60:	add	x8, x8, #0x8
  64:	str	x8, [x19, #8]
  68:	ldr	x8, [x19]
  6c:	add	x0, x8, x20, lsl #3
  70:	ldp	x20, x19, [sp, #16]
  74:	ldp	x29, x30, [sp], #32
  78:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #8]
  14:	mov	x20, x2
  18:	mov	x19, x1
  1c:	ldur	x9, [x8, #-8]
  20:	stp	xzr, x9, [x8, #-8]
  24:	ldr	x8, [x0, #8]
  28:	add	x10, x8, #0x8
  2c:	sub	x8, x8, #0x8
  30:	sub	x9, x8, x1
  34:	cmp	x9, #0x1
  38:	str	x10, [x0, #8]
  3c:	b.lt	7c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_+0x7c>  // b.tstop
  40:	lsr	x9, x9, #3
  44:	add	x21, x9, #0x1
  48:	mov	x22, x8
  4c:	ldr	x9, [x22, #-8]!
  50:	str	xzr, [x22]
  54:	ldr	x0, [x8]
  58:	str	x9, [x8]
  5c:	cbz	x0, 6c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_+0x6c>
  60:	ldr	x8, [x0]
  64:	ldr	x8, [x8, #8]
  68:	blr	x8
  6c:	sub	x21, x21, #0x1
  70:	cmp	x21, #0x1
  74:	mov	x8, x22
  78:	b.gt	4c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_+0x4c>
  7c:	ldr	x8, [x20]
  80:	str	xzr, [x20]
  84:	ldr	x0, [x19]
  88:	str	x8, [x19]
  8c:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_+0xa8>
  90:	ldr	x8, [x0]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x22, x21, [sp, #16]
  9c:	ldr	x1, [x8, #8]
  a0:	ldp	x29, x30, [sp], #48
  a4:	br	x1
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldp	x22, x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	44 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev+0x44>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19]
  24:	cbz	x0, 34 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #8]
  30:	blr	x8
  34:	str	xzr, [x19], #8
  38:	cmp	x21, x19
  3c:	b.ne	20 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev+0x20>  // b.any
  40:	ldr	x19, [x20]
  44:	cbz	x19, 5c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev+0x5c>
  48:	mov	x0, x19
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZdlPv>
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldr	x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	mov	w2, #0x3a                  	// #58
  20:	bl	0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  24:	ldrb	w20, [x19, #8]
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	tbnz	w20, #0, 44 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x44>
  30:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  34:	add	x1, x1, #0x0
  38:	mov	w2, #0x83                  	// #131
  3c:	bl	0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  40:	bl	0 <abort>
  44:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x27                  	// #39
  50:	bl	0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  54:	ldrb	w8, [x19, #8]
  58:	tbnz	w8, #0, 7c <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x7c>
  5c:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  60:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  64:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x281                 	// #641
  78:	bl	0 <__assert_fail>
  7c:	ldr	x19, [x19]
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	ldr	x8, [x19]
  88:	mov	x1, x0
  8c:	mov	x0, x19
  90:	ldr	x8, [x8, #16]
  94:	blr	x8
  98:	bl	0 <abort>

Disassembly of section .text._ZN4llvm11SmallVectorISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELj1EED2Ev:

0000000000000000 <_ZN4llvm11SmallVectorISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELj1EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	ldr	w8, [x0, #8]
  18:	ldr	x0, [x0]
  1c:	cbz	w8, 4c <_ZN4llvm11SmallVectorISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELj1EED2Ev+0x4c>
  20:	lsl	x20, x8, #3
  24:	sub	x21, x0, #0x8
  28:	ldr	x0, [x21, x20]
  2c:	cbz	x0, 3c <_ZN4llvm11SmallVectorISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELj1EED2Ev+0x3c>
  30:	ldr	x8, [x0]
  34:	ldr	x8, [x8, #8]
  38:	blr	x8
  3c:	str	xzr, [x21, x20]
  40:	subs	x20, x20, #0x8
  44:	b.ne	28 <_ZN4llvm11SmallVectorISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELj1EED2Ev+0x28>  // b.any
  48:	ldr	x0, [x19]
  4c:	add	x8, x19, #0x10
  50:	cmp	x0, x8
  54:	b.eq	68 <_ZN4llvm11SmallVectorISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELj1EED2Ev+0x68>  // b.none
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <free>
  68:	ldp	x20, x19, [sp, #32]
  6c:	ldr	x21, [sp, #16]
  70:	ldp	x29, x30, [sp], #48
  74:	ret

Disassembly of section .text._ZNK4llvm13AArch64SysReg6SysReg12haveFeaturesENS_13FeatureBitsetE:

0000000000000000 <_ZNK4llvm13AArch64SysReg6SysReg12haveFeaturesENS_13FeatureBitsetE>:
   0:	sub	sp, sp, #0x20
   4:	ldr	x10, [x0, #32]
   8:	ldr	q0, [x0, #16]
   c:	mov	x9, xzr
  10:	add	x8, x0, #0x10
  14:	str	x10, [sp, #16]
  18:	mov	x10, sp
  1c:	str	q0, [sp]
  20:	ldr	x11, [x1, x9]
  24:	ldr	x12, [x10, x9]
  28:	and	x11, x12, x11
  2c:	str	x11, [x10, x9]
  30:	add	x9, x9, #0x8
  34:	cmp	x9, #0x18
  38:	b.ne	20 <_ZNK4llvm13AArch64SysReg6SysReg12haveFeaturesENS_13FeatureBitsetE+0x20>  // b.any
  3c:	ldp	x9, x10, [sp]
  40:	ldp	x11, x12, [x8]
  44:	ldr	x13, [sp, #16]
  48:	ldr	x8, [x8, #16]
  4c:	eor	x9, x9, x11
  50:	eor	x10, x10, x12
  54:	eor	x8, x13, x8
  58:	orr	x9, x9, x10
  5c:	orr	x8, x9, x8
  60:	cmp	x8, #0x0
  64:	cset	w0, eq  // eq = none
  68:	add	sp, sp, #0x20
  6c:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x104                 	// #260
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x11b                 	// #283
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0]
  18:	ldr	w9, [x0, #8]
  1c:	mov	w10, #0x28                  	// #40
  20:	mov	x21, x0
  24:	mov	x20, x2
  28:	umaddl	x10, w9, w10, x8
  2c:	cmp	x10, x1
  30:	b.eq	164 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x164>  // b.none
  34:	mov	x19, x1
  38:	cmp	x8, x1
  3c:	b.hi	19c <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x19c>  // b.pmore
  40:	cmp	x10, x19
  44:	b.cc	1bc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1bc>  // b.lo, b.ul, b.last
  48:	ldr	w10, [x21, #12]
  4c:	cmp	w9, w10
  50:	b.cc	70 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x70>  // b.lo, b.ul, b.last
  54:	mov	x0, x21
  58:	mov	x1, xzr
  5c:	sub	x19, x19, x8
  60:	bl	0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
  64:	ldr	x8, [x21]
  68:	ldr	w9, [x21, #8]
  6c:	add	x19, x8, x19
  70:	cbz	w9, 1dc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1dc>
  74:	mov	w10, #0x28                  	// #40
  78:	madd	x11, x9, x10, x8
  7c:	ldur	q0, [x11, #-40]
  80:	ldur	x12, [x11, #-24]
  84:	ldur	w13, [x11, #-8]
  88:	madd	x8, x9, x10, x8
  8c:	str	q0, [x11]
  90:	str	x12, [x11, #16]
  94:	str	w13, [x8, #32]
  98:	ldur	x9, [x11, #-16]
  9c:	str	x9, [x8, #24]
  a0:	stur	wzr, [x11, #-8]
  a4:	ldr	x9, [x21]
  a8:	ldr	w8, [x21, #8]
  ac:	umaddl	x10, w8, w10, x9
  b0:	sub	x10, x10, x19
  b4:	sub	x10, x10, #0x28
  b8:	cmp	x10, #0x1
  bc:	b.lt	110 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x110>  // b.tstop
  c0:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
  c4:	movk	x11, #0xcccd
  c8:	mov	w12, #0x28                  	// #40
  cc:	umulh	x10, x10, x11
  d0:	madd	x8, x8, x12, x9
  d4:	lsr	x9, x10, #5
  d8:	add	x22, x9, #0x1
  dc:	sub	x23, x8, #0x50
  e0:	ldr	q0, [x23]
  e4:	ldr	x8, [x23, #16]
  e8:	add	x0, x23, #0x40
  ec:	add	x1, x23, #0x18
  f0:	stur	q0, [x23, #40]
  f4:	str	x8, [x23, #56]
  f8:	bl	0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
  fc:	sub	x22, x22, #0x1
 100:	cmp	x22, #0x1
 104:	sub	x23, x23, #0x28
 108:	b.gt	e0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0xe0>
 10c:	ldr	w8, [x21, #8]
 110:	ldr	w9, [x21, #12]
 114:	cmp	w8, w9
 118:	b.cs	1fc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1fc>  // b.hs, b.nlast
 11c:	add	w8, w8, #0x1
 120:	cmp	x19, x20
 124:	str	w8, [x21, #8]
 128:	b.hi	144 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x144>  // b.pmore
 12c:	ldr	x9, [x21]
 130:	mov	w10, #0x28                  	// #40
 134:	umaddl	x8, w8, w10, x9
 138:	add	x9, x20, #0x28
 13c:	cmp	x8, x20
 140:	csel	x20, x9, x20, hi  // hi = pmore
 144:	ldr	x8, [x20, #16]
 148:	ldr	q0, [x20]
 14c:	add	x0, x19, #0x18
 150:	add	x1, x20, #0x18
 154:	str	x8, [x19, #16]
 158:	str	q0, [x19]
 15c:	bl	0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 160:	b	184 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x184>
 164:	mov	x0, x21
 168:	mov	x1, x20
 16c:	bl	0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 170:	ldr	x8, [x21]
 174:	ldr	w9, [x21, #8]
 178:	mov	w10, #0x28                  	// #40
 17c:	madd	x8, x9, x10, x8
 180:	sub	x19, x8, #0x28
 184:	mov	x0, x19
 188:	ldp	x20, x19, [sp, #48]
 18c:	ldp	x22, x21, [sp, #32]
 190:	ldr	x23, [sp, #16]
 194:	ldp	x29, x30, [sp], #64
 198:	ret
 19c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 1a0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 1a4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0x1f7                 	// #503
 1b8:	bl	0 <__assert_fail>
 1bc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 1c0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 1c4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 1c8:	add	x0, x0, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	add	x3, x3, #0x0
 1d4:	mov	w2, #0x1f8                 	// #504
 1d8:	bl	0 <__assert_fail>
 1dc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 1e0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 1e4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 1e8:	add	x0, x0, #0x0
 1ec:	add	x1, x1, #0x0
 1f0:	add	x3, x3, #0x0
 1f4:	mov	w2, #0xa7                  	// #167
 1f8:	bl	0 <__assert_fail>
 1fc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 200:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 204:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 208:	add	x0, x0, #0x0
 20c:	add	x1, x1, #0x0
 210:	add	x3, x3, #0x0
 214:	mov	w2, #0x43                  	// #67
 218:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	84 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_+0x84>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20, #16]
  28:	ldr	q0, [x20]
  2c:	mov	w11, #0x28                  	// #40
  30:	umaddl	x8, w8, w11, x9
  34:	str	x10, [x8, #16]
  38:	str	q0, [x8]
  3c:	ldr	w9, [x20, #32]
  40:	add	x0, x8, #0x18
  44:	add	x1, x20, #0x18
  48:	cmp	w9, #0x40
  4c:	str	w9, [x8, #32]
  50:	b.hi	60 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_+0x60>  // b.pmore
  54:	ldr	x8, [x1]
  58:	str	x8, [x0]
  5c:	b	64 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_+0x64>
  60:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  64:	ldp	w8, w9, [x19, #8]
  68:	cmp	w8, w9
  6c:	b.cs	98 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_+0x98>  // b.hs, b.nlast
  70:	add	w8, w8, #0x1
  74:	str	w8, [x19, #8]
  78:	ldp	x20, x19, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	ret
  84:	mov	x0, x19
  88:	mov	x1, xzr
  8c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_>
  90:	ldr	w8, [x19, #8]
  94:	b	20 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_+0x20>
  98:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_>
  9c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_>
  a0:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE9push_backERKS1_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x43                  	// #67
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  6c:	add	x8, x22, x22, lsl #2
  70:	lsl	x0, x8, #3
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xbc>
  80:	cbz	x22, 9c <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	w8, [x19, #8]
  c0:	ldr	x21, [x19]
  c4:	cbz	w8, 144 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x144>
  c8:	mov	w9, #0x28                  	// #40
  cc:	madd	x8, x8, x9, x21
  d0:	mov	x9, x20
  d4:	ldr	x10, [x21, #16]
  d8:	ldr	q0, [x21]
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9]
  e4:	ldr	w10, [x21, #32]
  e8:	str	w10, [x9, #32]
  ec:	ldr	x10, [x21, #24]
  f0:	str	x10, [x9, #24]
  f4:	str	wzr, [x21, #32]
  f8:	add	x21, x21, #0x28
  fc:	cmp	x21, x8
 100:	add	x9, x9, #0x28
 104:	b.ne	d4 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xd4>  // b.any
 108:	ldr	w8, [x19, #8]
 10c:	ldr	x21, [x19]
 110:	cbz	w8, 144 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x144>
 114:	add	x8, x8, x8, lsl #2
 118:	lsl	x23, x8, #3
 11c:	add	x8, x21, x23
 120:	ldur	w9, [x8, #-8]
 124:	cmp	w9, #0x41
 128:	b.cc	138 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x138>  // b.lo, b.ul, b.last
 12c:	ldur	x0, [x8, #-16]
 130:	cbz	x0, 138 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x138>
 134:	bl	0 <_ZdaPv>
 138:	subs	x23, x23, #0x28
 13c:	b.ne	11c <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x11c>  // b.any
 140:	ldr	x21, [x19]
 144:	add	x8, x19, #0x10
 148:	cmp	x21, x8
 14c:	b.eq	158 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x158>  // b.none
 150:	mov	x0, x21
 154:	bl	0 <free>
 158:	str	x20, [x19]
 15c:	str	w22, [x19, #12]
 160:	ldp	x20, x19, [sp, #48]
 164:	ldp	x22, x21, [sp, #32]
 168:	ldr	x23, [sp, #16]
 16c:	ldp	x29, x30, [sp], #64
 170:	ret

Disassembly of section .text._ZN4llvm5APIntaSEOS0_:

0000000000000000 <_ZN4llvm5APIntaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	cmp	x0, x1
  10:	b.eq	58 <_ZN4llvm5APIntaSEOS0_+0x58>  // b.none
  14:	ldr	w8, [x0, #8]
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	cmp	w8, #0x41
  24:	b.cc	34 <_ZN4llvm5APIntaSEOS0_+0x34>  // b.lo, b.ul, b.last
  28:	ldr	x0, [x19]
  2c:	cbz	x0, 34 <_ZN4llvm5APIntaSEOS0_+0x34>
  30:	bl	0 <_ZdaPv>
  34:	ldr	x8, [x20]
  38:	mov	x0, x19
  3c:	str	x8, [x19]
  40:	ldr	w8, [x20, #8]
  44:	str	w8, [x19, #8]
  48:	str	wzr, [x20, #8]
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	adrp	x0, 0 <_ZN4llvm5APIntaSEOS0_>
  5c:	adrp	x1, 0 <_ZN4llvm5APIntaSEOS0_>
  60:	adrp	x3, 0 <_ZN4llvm5APIntaSEOS0_>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x302                 	// #770
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5APIntaSERKS0_:

0000000000000000 <_ZN4llvm5APIntaSERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	cmp	w8, #0x40
  18:	b.hi	48 <_ZN4llvm5APIntaSERKS0_+0x48>  // b.pmore
  1c:	ldr	w8, [x1, #8]
  20:	cmp	w8, #0x40
  24:	b.hi	48 <_ZN4llvm5APIntaSERKS0_+0x48>  // b.pmore
  28:	ldr	x8, [x1]
  2c:	mov	x0, x19
  30:	str	x8, [x19]
  34:	ldr	w8, [x1, #8]
  38:	str	w8, [x19, #8]
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZN4llvm5APIntaSERKS0_>
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
  50:	mov	x0, x19
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm9StringRef4trimES0_:

0000000000000000 <_ZNK4llvm9StringRef4trimES0_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	str	x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x3, xzr
  18:	mov	x19, x2
  1c:	mov	x20, x1
  20:	mov	x21, x0
  24:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
  28:	ldp	x9, x8, [x21]
  2c:	mov	x1, x20
  30:	mov	x2, x19
  34:	cmp	x0, x8
  38:	csel	x10, x0, x8, cc  // cc = lo, ul, last
  3c:	add	x9, x9, x10
  40:	sub	x8, x8, x10
  44:	mov	x0, sp
  48:	stp	x9, x8, [sp]
  4c:	bl	0 <_ZNK4llvm9StringRef4trimES0_>
  50:	ldp	x20, x19, [sp, #48]
  54:	ldr	x21, [sp, #32]
  58:	ldp	x29, x30, [sp, #16]
  5c:	add	sp, sp, #0x40
  60:	ret

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x40>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19], #16
  24:	cmp	x0, x19
  28:	b.eq	30 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x30>  // b.none
  2c:	bl	0 <_ZdlPv>
  30:	add	x19, x19, #0x10
  34:	cmp	x19, x21
  38:	b.ne	20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x20>  // b.any
  3c:	ldr	x19, [x20]
  40:	cbz	x19, 58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x58>
  44:	mov	x0, x19
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZdlPv>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZNK4llvm9StringRef5rtrimES0_:

0000000000000000 <_ZNK4llvm9StringRef5rtrimES0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0, #8]
  10:	mov	x3, #0xffffffffffffffff    	// #-1
  14:	mov	x19, x0
  18:	bl	0 <_ZNK4llvm9StringRef16find_last_not_ofES0_m>
  1c:	ldr	x8, [x19, #8]
  20:	add	x9, x0, #0x1
  24:	cmp	x9, x8
  28:	csinc	x9, x8, x0, cs  // cs = hs, nlast
  2c:	sub	x9, x20, x9
  30:	subs	x1, x8, x9
  34:	b.cc	48 <_ZNK4llvm9StringRef5rtrimES0_+0x48>  // b.lo, b.ul, b.last
  38:	ldr	x0, [x19]
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	adrp	x0, 0 <_ZNK4llvm9StringRef5rtrimES0_>
  4c:	adrp	x1, 0 <_ZNK4llvm9StringRef5rtrimES0_>
  50:	adrp	x3, 0 <_ZNK4llvm9StringRef5rtrimES0_>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x28b                 	// #651
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9StringRef5splitES0_:

0000000000000000 <_ZNK4llvm9StringRef5splitES0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x3, xzr
  14:	mov	x20, x2
  18:	mov	x21, x0
  1c:	mov	x19, x8
  20:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
  24:	cmn	x0, #0x1
  28:	b.eq	58 <_ZNK4llvm9StringRef5splitES0_+0x58>  // b.none
  2c:	ldp	x9, x8, [x21]
  30:	add	x10, x0, x20
  34:	cmp	x8, x0
  38:	csel	x11, x8, x0, cc  // cc = lo, ul, last
  3c:	cmp	x8, x10
  40:	csel	x10, x8, x10, cc  // cc = lo, ul, last
  44:	stp	x9, x11, [x19]
  48:	add	x9, x9, x10
  4c:	sub	x8, x8, x10
  50:	stp	x9, x8, [x19, #16]
  54:	b	64 <_ZNK4llvm9StringRef5splitES0_+0x64>
  58:	ldr	q0, [x21]
  5c:	stp	xzr, xzr, [x19, #16]
  60:	str	q0, [x19]
  64:	ldp	x20, x19, [sp, #32]
  68:	ldr	x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x2, x1
  18:	asr	x23, x8, #4
  1c:	lsr	x8, x23, #58
  20:	cbnz	x8, 84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x84>
  24:	mov	x21, x1
  28:	mov	x1, x23
  2c:	mov	x19, x2
  30:	mov	x20, x0
  34:	bl	0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag>
  38:	mov	x22, x0
  3c:	add	x8, x0, x23, lsl #5
  40:	cmp	x21, x19
  44:	str	x0, [x20]
  48:	str	x8, [x20, #16]
  4c:	b.eq	6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x6c>  // b.none
  50:	mov	x8, x22
  54:	mov	x0, x21
  58:	bl	0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag>
  5c:	add	x21, x21, #0x10
  60:	cmp	x19, x21
  64:	add	x22, x22, #0x20
  68:	b.ne	50 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x50>  // b.any
  6c:	str	x22, [x20, #8]
  70:	ldp	x20, x19, [sp, #48]
  74:	ldp	x22, x21, [sp, #32]
  78:	ldr	x23, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag>
  88:	add	x0, x0, #0x0
  8c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #58
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #5
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNK4llvm9StringRef3strB5cxx11Ev:

0000000000000000 <_ZNK4llvm9StringRef3strB5cxx11Ev>:
   0:	ldr	x1, [x0]
   4:	cbz	x1, 20 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x20>
   8:	ldr	x9, [x0, #8]
   c:	add	x10, x8, #0x10
  10:	mov	x0, x8
  14:	str	x10, [x8]
  18:	add	x2, x1, x9
  1c:	b	0 <_ZNK4llvm9StringRef3strB5cxx11Ev>
  20:	mov	x9, x8
  24:	strb	wzr, [x9, #16]!
  28:	stp	x9, xzr, [x8]
  2c:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x10                  	// #16
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	sub	x8, x1, x0
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	cmp	x8, #0x40
  24:	str	x2, [sp, #8]
  28:	b.lt	94 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x94>  // b.tstop
  2c:	lsr	x8, x8, #6
  30:	add	x22, x8, #0x1
  34:	add	x0, sp, #0x8
  38:	mov	x1, x19
  3c:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  40:	tbnz	w0, #0, f4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf4>
  44:	add	x21, x19, #0x10
  48:	add	x0, sp, #0x8
  4c:	mov	x1, x21
  50:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  54:	tbnz	w0, #0, f0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf0>
  58:	add	x21, x19, #0x20
  5c:	add	x0, sp, #0x8
  60:	mov	x1, x21
  64:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  68:	tbnz	w0, #0, f0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf0>
  6c:	add	x21, x19, #0x30
  70:	add	x0, sp, #0x8
  74:	mov	x1, x21
  78:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  7c:	tbnz	w0, #0, f0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf0>
  80:	sub	x22, x22, #0x1
  84:	cmp	x22, #0x1
  88:	add	x19, x19, #0x40
  8c:	b.gt	34 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x34>
  90:	sub	x8, x20, x19
  94:	asr	x8, x8, #4
  98:	cmp	x8, #0x1
  9c:	b.eq	d8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xd8>  // b.none
  a0:	cmp	x8, #0x2
  a4:	b.eq	c4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xc4>  // b.none
  a8:	cmp	x8, #0x3
  ac:	b.ne	e8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xe8>  // b.any
  b0:	add	x0, sp, #0x8
  b4:	mov	x1, x19
  b8:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  bc:	tbnz	w0, #0, f4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf4>
  c0:	add	x19, x19, #0x10
  c4:	add	x0, sp, #0x8
  c8:	mov	x1, x19
  cc:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  d0:	tbnz	w0, #0, f4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf4>
  d4:	add	x19, x19, #0x10
  d8:	add	x0, sp, #0x8
  dc:	mov	x1, x19
  e0:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  e4:	tbnz	w0, #0, f4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf4>
  e8:	mov	x19, x20
  ec:	b	f4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf4>
  f0:	mov	x19, x21
  f4:	mov	x0, x19
  f8:	ldp	x20, x19, [sp, #48]
  fc:	ldp	x22, x21, [sp, #32]
 100:	ldp	x29, x30, [sp, #16]
 104:	add	sp, sp, #0x40
 108:	ret

Disassembly of section .text._ZN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEclIPN4llvm9StringRefEEEbT_:

0000000000000000 <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEclIPN4llvm9StringRefEEEbT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0]
  14:	ldp	x21, x19, [x1]
  18:	cbz	x20, 28 <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEclIPN4llvm9StringRefEEEbT_+0x28>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	b	2c <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEclIPN4llvm9StringRefEEEbT_+0x2c>
  28:	mov	x0, xzr
  2c:	cmp	x19, x0
  30:	b.ne	54 <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEclIPN4llvm9StringRefEEEbT_+0x54>  // b.any
  34:	cbz	x19, 5c <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEclIPN4llvm9StringRefEEEbT_+0x5c>
  38:	mov	x0, x21
  3c:	mov	x1, x20
  40:	mov	x2, x19
  44:	bl	0 <bcmp>
  48:	cmp	w0, #0x0
  4c:	cset	w0, eq  // eq = none
  50:	b	60 <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEclIPN4llvm9StringRefEEEbT_+0x60>
  54:	mov	w0, wzr
  58:	b	60 <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEclIPN4llvm9StringRefEEEbT_+0x60>
  5c:	mov	w0, #0x1                   	// #1
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

Disassembly of section .text._ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	sub	x8, x1, x0
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	cmp	x8, #0x40
  24:	str	x2, [sp, #8]
  28:	b.lt	94 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x94>  // b.tstop
  2c:	lsr	x8, x8, #6
  30:	add	x22, x8, #0x1
  34:	add	x0, sp, #0x8
  38:	mov	x1, x19
  3c:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  40:	tbnz	w0, #0, f4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf4>
  44:	add	x21, x19, #0x10
  48:	add	x0, sp, #0x8
  4c:	mov	x1, x21
  50:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  54:	tbnz	w0, #0, f0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf0>
  58:	add	x21, x19, #0x20
  5c:	add	x0, sp, #0x8
  60:	mov	x1, x21
  64:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  68:	tbnz	w0, #0, f0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf0>
  6c:	add	x21, x19, #0x30
  70:	add	x0, sp, #0x8
  74:	mov	x1, x21
  78:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  7c:	tbnz	w0, #0, f0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf0>
  80:	sub	x22, x22, #0x1
  84:	cmp	x22, #0x1
  88:	add	x19, x19, #0x40
  8c:	b.gt	34 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x34>
  90:	sub	x8, x20, x19
  94:	asr	x8, x8, #4
  98:	cmp	x8, #0x1
  9c:	b.eq	d8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xd8>  // b.none
  a0:	cmp	x8, #0x2
  a4:	b.eq	c4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xc4>  // b.none
  a8:	cmp	x8, #0x3
  ac:	b.ne	e8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xe8>  // b.any
  b0:	add	x0, sp, #0x8
  b4:	mov	x1, x19
  b8:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  bc:	tbnz	w0, #0, f4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf4>
  c0:	add	x19, x19, #0x10
  c4:	add	x0, sp, #0x8
  c8:	mov	x1, x19
  cc:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  d0:	tbnz	w0, #0, f4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf4>
  d4:	add	x19, x19, #0x10
  d8:	add	x0, sp, #0x8
  dc:	mov	x1, x19
  e0:	bl	0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag>
  e4:	tbnz	w0, #0, f4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf4>
  e8:	mov	x19, x20
  ec:	b	f4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf4>
  f0:	mov	x19, x21
  f4:	mov	x0, x19
  f8:	ldp	x20, x19, [sp, #48]
  fc:	ldp	x22, x21, [sp, #32]
 100:	ldp	x29, x30, [sp, #16]
 104:	add	sp, sp, #0x40
 108:	ret

Disassembly of section .text._ZN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEclIPN4llvm9StringRefEEEbT_:

0000000000000000 <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEclIPN4llvm9StringRefEEEbT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0]
  14:	ldp	x21, x19, [x1]
  18:	cbz	x20, 28 <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEclIPN4llvm9StringRefEEEbT_+0x28>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	b	2c <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEclIPN4llvm9StringRefEEEbT_+0x2c>
  28:	mov	x0, xzr
  2c:	cmp	x19, x0
  30:	b.ne	54 <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEclIPN4llvm9StringRefEEEbT_+0x54>  // b.any
  34:	cbz	x19, 5c <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEclIPN4llvm9StringRefEEEbT_+0x5c>
  38:	mov	x0, x21
  3c:	mov	x1, x20
  40:	mov	x2, x19
  44:	bl	0 <bcmp>
  48:	cmp	w0, #0x0
  4c:	cset	w0, eq  // eq = none
  50:	b	60 <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEclIPN4llvm9StringRefEEEbT_+0x60>
  54:	mov	w0, wzr
  58:	b	60 <_ZN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEclIPN4llvm9StringRefEEEbT_+0x60>
  5c:	mov	w0, #0x1                   	// #1
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

Disassembly of section .text._ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE:

0000000000000000 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x0
  14:	stp	x1, x2, [sp]
  18:	ldr	x0, [x0, #112]
  1c:	ldr	x8, [x19, #120]
  20:	mov	w20, #0x28                  	// #40
  24:	mov	x2, sp
  28:	madd	x1, x8, x20, x0
  2c:	bl	0 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE>
  30:	ldp	x8, x9, [x19, #112]
  34:	madd	x8, x9, x20, x8
  38:	cmp	x0, x8
  3c:	b.eq	84 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x84>  // b.none
  40:	ldr	x19, [x0]
  44:	cbz	x19, 58 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x58>
  48:	mov	x0, x19
  4c:	bl	0 <strlen>
  50:	mov	x2, x0
  54:	b	5c <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x5c>
  58:	mov	x2, xzr
  5c:	ldr	x8, [sp, #8]
  60:	cmp	x2, x8
  64:	b.ne	84 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x84>  // b.any
  68:	cbz	x2, 98 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x98>
  6c:	ldr	x1, [sp]
  70:	mov	x0, x19
  74:	bl	0 <bcmp>
  78:	cmp	w0, #0x0
  7c:	cset	w0, eq  // eq = none
  80:	b	88 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x88>
  84:	mov	w0, wzr
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldp	x29, x30, [sp, #16]
  90:	add	sp, sp, #0x30
  94:	ret
  98:	mov	w0, #0x1                   	// #1
  9c:	b	88 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x88>

Disassembly of section .text._ZSt13__lower_boundIPKN4llvm18SubtargetSubTypeKVENS0_9StringRefEN9__gnu_cxx5__ops14_Iter_less_valEET_S8_S8_RKT0_T1_:

0000000000000000 <_ZSt13__lower_boundIPKN4llvm18SubtargetSubTypeKVENS0_9StringRefEN9__gnu_cxx5__ops14_Iter_less_valEET_S8_S8_RKT0_T1_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	x8, x1, x0
  1c:	mov	x19, x0
  20:	cmp	x8, #0x1
  24:	b.lt	78 <_ZSt13__lower_boundIPKN4llvm18SubtargetSubTypeKVENS0_9StringRefEN9__gnu_cxx5__ops14_Iter_less_valEET_S8_S8_RKT0_T1_+0x78>  // b.tstop
  28:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
  2c:	movk	x9, #0xcccd
  30:	umulh	x8, x8, x9
  34:	mov	x20, x2
  38:	mov	w22, #0x28                  	// #40
  3c:	lsr	x23, x8, #5
  40:	mov	x24, #0xffffffffffffffff    	// #-1
  44:	ldp	x1, x2, [x20]
  48:	lsr	x25, x23, #1
  4c:	madd	x21, x25, x22, x19
  50:	mov	x0, x21
  54:	bl	0 <_ZSt13__lower_boundIPKN4llvm18SubtargetSubTypeKVENS0_9StringRefEN9__gnu_cxx5__ops14_Iter_less_valEET_S8_S8_RKT0_T1_>
  58:	eor	x9, x24, x23, lsr #1
  5c:	tst	w0, #0x1
  60:	add	x9, x23, x9
  64:	add	x8, x21, #0x28
  68:	csel	x23, x9, x25, ne  // ne = any
  6c:	csel	x19, x8, x19, ne  // ne = any
  70:	cmp	x23, #0x0
  74:	b.gt	44 <_ZSt13__lower_boundIPKN4llvm18SubtargetSubTypeKVENS0_9StringRefEN9__gnu_cxx5__ops14_Iter_less_valEET_S8_S8_RKT0_T1_+0x44>
  78:	mov	x0, x19
  7c:	ldp	x20, x19, [sp, #64]
  80:	ldp	x22, x21, [sp, #48]
  84:	ldp	x24, x23, [sp, #32]
  88:	ldr	x25, [sp, #16]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZNK4llvm18SubtargetSubTypeKVltENS_9StringRefE:

0000000000000000 <_ZNK4llvm18SubtargetSubTypeKVltENS_9StringRefE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	str	x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x21, [x0]
  18:	mov	x19, x2
  1c:	mov	x20, x1
  20:	cbz	x21, 30 <_ZNK4llvm18SubtargetSubTypeKVltENS_9StringRefE+0x30>
  24:	mov	x0, x21
  28:	bl	0 <strlen>
  2c:	b	34 <_ZNK4llvm18SubtargetSubTypeKVltENS_9StringRefE+0x34>
  30:	mov	x0, xzr
  34:	stp	x21, x0, [sp]
  38:	mov	x0, sp
  3c:	mov	x1, x20
  40:	mov	x2, x19
  44:	bl	0 <_ZNK4llvm18SubtargetSubTypeKVltENS_9StringRefE>
  48:	ldp	x20, x19, [sp, #48]
  4c:	ldr	x21, [sp, #32]
  50:	ldp	x29, x30, [sp, #16]
  54:	cmn	w0, #0x1
  58:	cset	w0, eq  // eq = none
  5c:	add	sp, sp, #0x40
  60:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC2ERKNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x105                 	// #261
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNS_9StringRefE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x121                 	// #289
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x10                  	// #16
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_8MCSymbolELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8MCSymbolELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_8MCSymbolELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8MCSymbolELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8MCSymbolELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8MCSymbolELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8MCSymbolELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8MCSymbolELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_5SMLocELb1EE9push_backERKS1_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_5SMLocELb1EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseINS_5SMLocELb1EE9push_backERKS1_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseINS_5SMLocELb1EE9push_backERKS1_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseINS_5SMLocELb1EE9push_backERKS1_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_5SMLocELb1EE9push_backERKS1_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_5SMLocELb1EE9push_backERKS1_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_5SMLocELb1EE9push_backERKS1_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm11MCInstrInfo7getNameEj:

0000000000000000 <_ZNK4llvm11MCInstrInfo7getNameEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	cmp	w8, w1
  14:	b.ls	4c <_ZNK4llvm11MCInstrInfo7getNameEj+0x4c>  // b.plast
  18:	ldp	x8, x9, [x0, #8]
  1c:	ldr	w8, [x8, w1, uxtw #2]
  20:	add	x19, x9, x8
  24:	cbz	x9, 38 <_ZNK4llvm11MCInstrInfo7getNameEj+0x38>
  28:	mov	x0, x19
  2c:	bl	0 <strlen>
  30:	mov	x1, x0
  34:	b	3c <_ZNK4llvm11MCInstrInfo7getNameEj+0x3c>
  38:	mov	x1, xzr
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo7getNameEj>
  50:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo7getNameEj>
  54:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo7getNameEj>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x33                  	// #51
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt4lshrEj:

0000000000000000 <_ZNK4llvm5APInt4lshrEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x8
  10:	ldr	w8, [x0, #8]
  14:	mov	w19, w1
  18:	mov	x1, x0
  1c:	cmp	w8, #0x40
  20:	str	w8, [x20, #8]
  24:	b.hi	34 <_ZNK4llvm5APInt4lshrEj+0x34>  // b.pmore
  28:	ldr	x8, [x1]
  2c:	str	x8, [x20]
  30:	b	3c <_ZNK4llvm5APInt4lshrEj+0x3c>
  34:	mov	x0, x20
  38:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  3c:	mov	x0, x20
  40:	mov	w1, w19
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <_ZNK4llvm5APInt4lshrEj>

Disassembly of section .text._ZN4llvm5APInt11lshrInPlaceEj:

0000000000000000 <_ZN4llvm5APInt11lshrInPlaceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.cc	48 <_ZN4llvm5APInt11lshrInPlaceEj+0x48>  // b.lo, b.ul, b.last
  14:	cmp	w8, #0x40
  18:	b.hi	2c <_ZN4llvm5APInt11lshrInPlaceEj+0x2c>  // b.pmore
  1c:	cmp	w8, w1
  20:	b.ne	34 <_ZN4llvm5APInt11lshrInPlaceEj+0x34>  // b.any
  24:	str	xzr, [x0]
  28:	b	40 <_ZN4llvm5APInt11lshrInPlaceEj+0x40>
  2c:	ldp	x29, x30, [sp], #16
  30:	b	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
  34:	ldr	x8, [x0]
  38:	lsr	x8, x8, x1
  3c:	str	x8, [x0]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm5APInt11lshrInPlaceEj>
  4c:	adrp	x1, 0 <_ZN4llvm5APInt11lshrInPlaceEj>
  50:	adrp	x3, 0 <_ZN4llvm5APInt11lshrInPlaceEj>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x3e3                 	// #995
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7APFloat14bitwiseIsEqualERKS0_:

0000000000000000 <_ZNK4llvm7APFloat14bitwiseIsEqualERKS0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x21, [x0, #8]
  14:	ldr	x8, [x1, #8]
  18:	cmp	x21, x8
  1c:	b.eq	34 <_ZNK4llvm7APFloat14bitwiseIsEqualERKS0_+0x34>  // b.none
  20:	ldp	x20, x19, [sp, #32]
  24:	ldr	x21, [sp, #16]
  28:	mov	w0, wzr
  2c:	ldp	x29, x30, [sp], #48
  30:	ret
  34:	mov	x19, x1
  38:	mov	x20, x0
  3c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  40:	cmp	x0, x21
  44:	b.eq	60 <_ZNK4llvm7APFloat14bitwiseIsEqualERKS0_+0x60>  // b.none
  48:	add	x0, x20, #0x8
  4c:	add	x1, x19, #0x8
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	b	0 <_ZNK4llvm6detail9IEEEFloat14bitwiseIsEqualERKS1_>
  60:	add	x0, x20, #0x8
  64:	add	x1, x19, #0x8
  68:	ldp	x20, x19, [sp, #32]
  6c:	ldr	x21, [sp, #16]
  70:	ldp	x29, x30, [sp], #48
  74:	b	0 <_ZNK4llvm6detail13DoubleAPFloat14bitwiseIsEqualERKS1_>

Disassembly of section .text._ZNK4llvm14MCRegisterInfo17isSuperRegisterEqENS_10MCRegisterES1_:

0000000000000000 <_ZNK4llvm14MCRegisterInfo17isSuperRegisterEqENS_10MCRegisterES1_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	str	x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x2
  14:	cmp	w1, w19
  18:	b.ne	24 <_ZNK4llvm14MCRegisterInfo17isSuperRegisterEqENS_10MCRegisterES1_+0x24>  // b.any
  1c:	mov	w0, #0x1                   	// #1
  20:	b	70 <_ZNK4llvm14MCRegisterInfo17isSuperRegisterEqENS_10MCRegisterES1_+0x70>
  24:	mov	x2, x0
  28:	and	x1, x1, #0xffffffff
  2c:	mov	x0, sp
  30:	mov	w3, wzr
  34:	bl	0 <_ZNK4llvm14MCRegisterInfo17isSuperRegisterEqENS_10MCRegisterES1_>
  38:	ldr	x9, [sp, #8]
  3c:	cbz	x9, 6c <_ZNK4llvm14MCRegisterInfo17isSuperRegisterEqENS_10MCRegisterES1_+0x6c>
  40:	ldrh	w8, [sp]
  44:	add	x9, x9, #0x2
  48:	cmp	w19, w8, uxth
  4c:	b.eq	1c <_ZNK4llvm14MCRegisterInfo17isSuperRegisterEqENS_10MCRegisterES1_+0x1c>  // b.none
  50:	str	x9, [sp, #8]
  54:	ldurh	w10, [x9, #-2]
  58:	add	x9, x9, #0x2
  5c:	add	w8, w10, w8
  60:	strh	w8, [sp]
  64:	cbnz	w10, 48 <_ZNK4llvm14MCRegisterInfo17isSuperRegisterEqENS_10MCRegisterES1_+0x48>
  68:	str	xzr, [sp, #8]
  6c:	mov	w0, wzr
  70:	ldr	x19, [sp, #32]
  74:	ldp	x29, x30, [sp, #16]
  78:	add	sp, sp, #0x30
  7c:	ret

Disassembly of section .text._ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb:

0000000000000000 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	strh	wzr, [x0]
  10:	str	xzr, [x0, #8]
  14:	ldr	w8, [x2, #8]
  18:	cmp	w8, w1
  1c:	b.ls	68 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x68>  // b.plast
  20:	ldr	x8, [x2]
  24:	and	x9, x1, #0xffffffff
  28:	mov	w11, #0x18                  	// #24
  2c:	ldr	x10, [x2, #48]
  30:	madd	x8, x9, x11, x8
  34:	ldr	w8, [x8, #8]
  38:	mov	x19, x0
  3c:	strh	w1, [x0]
  40:	add	x8, x10, x8, lsl #1
  44:	str	x8, [x0, #8]
  48:	tbnz	w3, #0, 5c <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x5c>
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  54:	cbnz	w0, 5c <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x5c>
  58:	str	xzr, [x19, #8]
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	adrp	x0, 0 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  6c:	adrp	x1, 0 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  70:	adrp	x3, 0 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x1b9                 	// #441
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv:

0000000000000000 <_ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	cbz	x8, 34 <_ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv+0x34>
  10:	add	x9, x8, #0x2
  14:	str	x9, [x0, #8]
  18:	ldrh	w8, [x8]
  1c:	ldrh	w9, [x0]
  20:	add	w9, w9, w8
  24:	strh	w9, [x0]
  28:	mov	x0, x8
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv>
  38:	adrp	x1, 0 <_ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv>
  3c:	adrp	x3, 0 <_ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0xd1                  	// #209
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x1
  14:	mov	x20, x0
  18:	mov	x21, x8
  1c:	bl	0 <strlen>
  20:	mov	x8, x21
  24:	strb	wzr, [x8, #16]!
  28:	stp	x8, xzr, [x21]
  2c:	ldr	x8, [x19, #8]
  30:	mov	x22, x0
  34:	add	x1, x8, x0
  38:	mov	x0, x21
  3c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
  40:	mov	x0, x21
  44:	mov	x1, x20
  48:	mov	x2, x22
  4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>
  50:	ldp	x1, x2, [x19]
  54:	mov	x0, x21
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldp	x22, x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>

Disassembly of section .text._ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  48:	ldr	q0, [x24]
  4c:	subs	x8, x21, x22
  50:	mov	x23, x0
  54:	str	q0, [x0, x8]
  58:	mov	x8, x0
  5c:	b.eq	7c <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x7c>  // b.none
  60:	mov	x8, x23
  64:	mov	x9, x22
  68:	ldr	q0, [x9], #16
  6c:	cmp	x21, x9
  70:	str	q0, [x8]
  74:	add	x8, x8, #0x10
  78:	b.ne	68 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x68>  // b.any
  7c:	cmp	x25, x21
  80:	add	x24, x8, #0x10
  84:	b.eq	9c <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x9c>  // b.none
  88:	ldr	q0, [x21], #16
  8c:	cmp	x25, x21
  90:	str	q0, [x24]
  94:	add	x24, x24, #0x10
  98:	b.ne	88 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x88>  // b.any
  9c:	cbz	x22, a8 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa8>
  a0:	mov	x0, x22
  a4:	bl	0 <_ZdlPv>
  a8:	add	x8, x23, x20, lsl #4
  ac:	stp	x23, x24, [x19]
  b0:	str	x8, [x19, #16]
  b4:	ldp	x20, x19, [sp, #64]
  b8:	ldp	x22, x21, [sp, #48]
  bc:	ldp	x24, x23, [sp, #32]
  c0:	ldr	x25, [sp, #16]
  c4:	ldp	x29, x30, [sp], #80
  c8:	ret

Disassembly of section .text._ZNKSt6vectorIN4llvm9StringRefESaIS1_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm9StringRefESaIS1_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  14:	sub	x10, x8, x9, asr #4
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIN4llvm9StringRefESaIS1_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #4
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #59
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIN4llvm9StringRefESaIS1_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm9StringRefESaIS1_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIN4llvm9StringRefESaIS1_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #59
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIN4llvm9StringRefESaIS1_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #4
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE:

0000000000000000 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	mov	x8, sp
  14:	mov	x19, x0
  18:	add	x20, x8, #0x10
  1c:	str	x20, [sp]
  20:	cbz	x1, 34 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x34>
  24:	add	x2, x1, x2
  28:	mov	x0, sp
  2c:	bl	0 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE>
  30:	b	3c <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x3c>
  34:	str	xzr, [sp, #8]
  38:	strb	wzr, [sp, #16]
  3c:	add	x0, x19, #0x10
  40:	mov	x1, sp
  44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
  48:	ldr	x0, [sp]
  4c:	cmp	x0, x20
  50:	b.eq	58 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x58>  // b.none
  54:	bl	0 <_ZdlPv>
  58:	ldp	x20, x19, [sp, #48]
  5c:	ldp	x29, x30, [sp, #32]
  60:	add	sp, sp, #0x40
  64:	ret

Disassembly of section .text._ZNK4llvm17MCTargetAsmParser9regsEqualERKNS_18MCParsedAsmOperandES3_:

0000000000000000 <_ZNK4llvm17MCTargetAsmParser9regsEqualERKNS_18MCParsedAsmOperandES3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x0, x1
  14:	mov	x20, x1
  18:	mov	x19, x2
  1c:	ldr	x8, [x8, #48]
  20:	blr	x8
  24:	tbz	w0, #0, 74 <_ZNK4llvm17MCTargetAsmParser9regsEqualERKNS_18MCParsedAsmOperandES3_+0x74>
  28:	ldr	x8, [x19]
  2c:	mov	x0, x19
  30:	ldr	x8, [x8, #48]
  34:	blr	x8
  38:	tbz	w0, #0, 74 <_ZNK4llvm17MCTargetAsmParser9regsEqualERKNS_18MCParsedAsmOperandES3_+0x74>
  3c:	ldr	x8, [x20]
  40:	mov	x0, x20
  44:	ldr	x8, [x8, #56]
  48:	blr	x8
  4c:	ldr	x8, [x19]
  50:	mov	w20, w0
  54:	mov	x0, x19
  58:	ldr	x8, [x8, #56]
  5c:	blr	x8
  60:	cmp	w20, w0
  64:	ldp	x20, x19, [sp, #16]
  68:	cset	w0, eq  // eq = none
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	adrp	x0, 0 <_ZNK4llvm17MCTargetAsmParser9regsEqualERKNS_18MCParsedAsmOperandES3_>
  78:	adrp	x1, 0 <_ZNK4llvm17MCTargetAsmParser9regsEqualERKNS_18MCParsedAsmOperandES3_>
  7c:	adrp	x3, 0 <_ZNK4llvm17MCTargetAsmParser9regsEqualERKNS_18MCParsedAsmOperandES3_>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x1c7                 	// #455
  90:	bl	0 <__assert_fail>
