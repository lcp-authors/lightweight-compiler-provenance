
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//resource.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001170 <.init>:
    1170:	stp	x29, x30, [sp, #-16]!
    1174:	mov	x29, sp
    1178:	bl	1350 <_PyLong_AsInt@plt+0x10>
    117c:	ldp	x29, x30, [sp], #16
    1180:	ret

Disassembly of section .plt:

0000000000001190 <PyModule_AddIntConstant@plt-0x20>:
    1190:	stp	x16, x30, [sp, #-16]!
    1194:	adrp	x16, 12000 <PyInit_resource@@Base+0x105b4>
    1198:	ldr	x17, [x16, #4088]
    119c:	add	x16, x16, #0xff8
    11a0:	br	x17
    11a4:	nop
    11a8:	nop
    11ac:	nop

00000000000011b0 <PyModule_AddIntConstant@plt>:
    11b0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    11b4:	ldr	x17, [x16]
    11b8:	add	x16, x16, #0x0
    11bc:	br	x17

00000000000011c0 <getrlimit64@plt>:
    11c0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    11c4:	ldr	x17, [x16, #8]
    11c8:	add	x16, x16, #0x8
    11cc:	br	x17

00000000000011d0 <PyErr_SetFromErrno@plt>:
    11d0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    11d4:	ldr	x17, [x16, #16]
    11d8:	add	x16, x16, #0x10
    11dc:	br	x17

00000000000011e0 <__cxa_finalize@plt>:
    11e0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    11e4:	ldr	x17, [x16, #24]
    11e8:	add	x16, x16, #0x18
    11ec:	br	x17

00000000000011f0 <PyStructSequence_New@plt>:
    11f0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    11f4:	ldr	x17, [x16, #32]
    11f8:	add	x16, x16, #0x20
    11fc:	br	x17

0000000000001200 <_Py_Dealloc@plt>:
    1200:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1204:	ldr	x17, [x16, #40]
    1208:	add	x16, x16, #0x28
    120c:	br	x17

0000000000001210 <PyErr_SetString@plt>:
    1210:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1214:	ldr	x17, [x16, #48]
    1218:	add	x16, x16, #0x30
    121c:	br	x17

0000000000001220 <PyFloat_FromDouble@plt>:
    1220:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1224:	ldr	x17, [x16, #56]
    1228:	add	x16, x16, #0x38
    122c:	br	x17

0000000000001230 <PyLong_FromLong@plt>:
    1230:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1234:	ldr	x17, [x16, #64]
    1238:	add	x16, x16, #0x40
    123c:	br	x17

0000000000001240 <getpagesize@plt>:
    1240:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1244:	ldr	x17, [x16, #72]
    1248:	add	x16, x16, #0x48
    124c:	br	x17

0000000000001250 <prlimit64@plt>:
    1250:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1254:	ldr	x17, [x16, #80]
    1258:	add	x16, x16, #0x50
    125c:	br	x17

0000000000001260 <__gmon_start__@plt>:
    1260:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1264:	ldr	x17, [x16, #88]
    1268:	add	x16, x16, #0x58
    126c:	br	x17

0000000000001270 <PyStructSequence_InitType2@plt>:
    1270:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1274:	ldr	x17, [x16, #96]
    1278:	add	x16, x16, #0x60
    127c:	br	x17

0000000000001280 <_PyArg_CheckPositional@plt>:
    1280:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1284:	ldr	x17, [x16, #104]
    1288:	add	x16, x16, #0x68
    128c:	br	x17

0000000000001290 <Py_BuildValue@plt>:
    1290:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1294:	ldr	x17, [x16, #112]
    1298:	add	x16, x16, #0x70
    129c:	br	x17

00000000000012a0 <PyErr_Occurred@plt>:
    12a0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12a4:	ldr	x17, [x16, #120]
    12a8:	add	x16, x16, #0x78
    12ac:	br	x17

00000000000012b0 <PyModule_Create2@plt>:
    12b0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12b4:	ldr	x17, [x16, #128]
    12b8:	add	x16, x16, #0x80
    12bc:	br	x17

00000000000012c0 <PyLong_AsLong@plt>:
    12c0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12c4:	ldr	x17, [x16, #136]
    12c8:	add	x16, x16, #0x88
    12cc:	br	x17

00000000000012d0 <getrusage@plt>:
    12d0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12d4:	ldr	x17, [x16, #144]
    12d8:	add	x16, x16, #0x90
    12dc:	br	x17

00000000000012e0 <setrlimit64@plt>:
    12e0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12e4:	ldr	x17, [x16, #152]
    12e8:	add	x16, x16, #0x98
    12ec:	br	x17

00000000000012f0 <PyArg_ParseTuple@plt>:
    12f0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12f4:	ldr	x17, [x16, #160]
    12f8:	add	x16, x16, #0xa0
    12fc:	br	x17

0000000000001300 <PyModule_AddObject@plt>:
    1300:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1304:	ldr	x17, [x16, #168]
    1308:	add	x16, x16, #0xa8
    130c:	br	x17

0000000000001310 <PySequence_Tuple@plt>:
    1310:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1314:	ldr	x17, [x16, #176]
    1318:	add	x16, x16, #0xb0
    131c:	br	x17

0000000000001320 <PyType_IsSubtype@plt>:
    1320:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1324:	ldr	x17, [x16, #184]
    1328:	add	x16, x16, #0xb8
    132c:	br	x17

0000000000001330 <__errno_location@plt>:
    1330:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1334:	ldr	x17, [x16, #192]
    1338:	add	x16, x16, #0xc0
    133c:	br	x17

0000000000001340 <_PyLong_AsInt@plt>:
    1340:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1344:	ldr	x17, [x16, #200]
    1348:	add	x16, x16, #0xc8
    134c:	br	x17

Disassembly of section .text:

0000000000001350 <PyInit_resource@@Base-0x6fc>:
    1350:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    1354:	ldr	x0, [x0, #4048]
    1358:	cbz	x0, 1360 <_PyLong_AsInt@plt+0x20>
    135c:	b	1260 <__gmon_start__@plt>
    1360:	ret
    1364:	adrp	x0, 13000 <PyInit_resource@@Base+0x115b4>
    1368:	add	x0, x0, #0x330
    136c:	adrp	x1, 13000 <PyInit_resource@@Base+0x115b4>
    1370:	add	x1, x1, #0x330
    1374:	cmp	x1, x0
    1378:	b.eq	1390 <_PyLong_AsInt@plt+0x50>  // b.none
    137c:	adrp	x1, 12000 <PyInit_resource@@Base+0x105b4>
    1380:	ldr	x1, [x1, #4000]
    1384:	cbz	x1, 1390 <_PyLong_AsInt@plt+0x50>
    1388:	mov	x16, x1
    138c:	br	x16
    1390:	ret
    1394:	adrp	x0, 13000 <PyInit_resource@@Base+0x115b4>
    1398:	add	x0, x0, #0x330
    139c:	adrp	x1, 13000 <PyInit_resource@@Base+0x115b4>
    13a0:	add	x1, x1, #0x330
    13a4:	sub	x1, x1, x0
    13a8:	mov	x2, #0x2                   	// #2
    13ac:	asr	x1, x1, #3
    13b0:	sdiv	x1, x1, x2
    13b4:	cbz	x1, 13cc <_PyLong_AsInt@plt+0x8c>
    13b8:	adrp	x2, 12000 <PyInit_resource@@Base+0x105b4>
    13bc:	ldr	x2, [x2, #4064]
    13c0:	cbz	x2, 13cc <_PyLong_AsInt@plt+0x8c>
    13c4:	mov	x16, x2
    13c8:	br	x16
    13cc:	ret
    13d0:	adrp	x0, 13000 <PyInit_resource@@Base+0x115b4>
    13d4:	ldrb	w1, [x0, #816]
    13d8:	cbnz	w1, 141c <_PyLong_AsInt@plt+0xdc>
    13dc:	stp	x29, x30, [sp, #-32]!
    13e0:	mov	x29, sp
    13e4:	str	x19, [sp, #16]
    13e8:	mov	x19, x0
    13ec:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    13f0:	ldr	x0, [x0, #4016]
    13f4:	cbz	x0, 1404 <_PyLong_AsInt@plt+0xc4>
    13f8:	adrp	x0, 13000 <PyInit_resource@@Base+0x115b4>
    13fc:	ldr	x0, [x0, #208]
    1400:	bl	11e0 <__cxa_finalize@plt>
    1404:	bl	1364 <_PyLong_AsInt@plt+0x24>
    1408:	mov	w0, #0x1                   	// #1
    140c:	strb	w0, [x19, #816]
    1410:	ldr	x19, [sp, #16]
    1414:	ldp	x29, x30, [sp], #32
    1418:	ret
    141c:	ret
    1420:	b	1394 <_PyLong_AsInt@plt+0x54>
    1424:	stp	x29, x30, [sp, #-32]!
    1428:	mov	x29, sp
    142c:	str	x19, [sp, #16]
    1430:	bl	1240 <getpagesize@plt>
    1434:	mov	w19, w0
    1438:	cmn	w0, #0x1
    143c:	b.eq	1450 <_PyLong_AsInt@plt+0x110>  // b.none
    1440:	sxtw	x0, w19
    1444:	ldr	x19, [sp, #16]
    1448:	ldp	x29, x30, [sp], #32
    144c:	b	1230 <PyLong_FromLong@plt>
    1450:	bl	12a0 <PyErr_Occurred@plt>
    1454:	cbz	x0, 1440 <_PyLong_AsInt@plt+0x100>
    1458:	mov	x0, #0x0                   	// #0
    145c:	ldr	x19, [sp, #16]
    1460:	ldp	x29, x30, [sp], #32
    1464:	ret
    1468:	ldr	x1, [x0]
    146c:	sub	x1, x1, #0x1
    1470:	str	x1, [x0]
    1474:	cbnz	x1, 147c <_PyLong_AsInt@plt+0x13c>
    1478:	b	1200 <_Py_Dealloc@plt>
    147c:	ret
    1480:	stp	x29, x30, [sp, #-48]!
    1484:	mov	x29, sp
    1488:	stp	x19, x20, [sp, #16]
    148c:	mov	x20, x1
    1490:	str	x21, [sp, #32]
    1494:	bl	1310 <PySequence_Tuple@plt>
    1498:	cbz	x0, 14cc <_PyLong_AsInt@plt+0x18c>
    149c:	mov	x19, x0
    14a0:	ldr	x0, [x0, #16]
    14a4:	cmp	x0, #0x2
    14a8:	b.eq	14d4 <_PyLong_AsInt@plt+0x194>  // b.none
    14ac:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    14b0:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    14b4:	add	x1, x1, #0xcb8
    14b8:	ldr	x0, [x0, #4024]
    14bc:	ldr	x0, [x0]
    14c0:	bl	1210 <PyErr_SetString@plt>
    14c4:	mov	x0, x19
    14c8:	bl	1468 <_PyLong_AsInt@plt+0x128>
    14cc:	mov	w0, #0xffffffff            	// #-1
    14d0:	b	1510 <_PyLong_AsInt@plt+0x1d0>
    14d4:	ldp	x0, x21, [x19, #24]
    14d8:	bl	12c0 <PyLong_AsLong@plt>
    14dc:	str	x0, [x20]
    14e0:	cmn	x0, #0x1
    14e4:	b.eq	1520 <_PyLong_AsInt@plt+0x1e0>  // b.none
    14e8:	mov	x0, x21
    14ec:	bl	12c0 <PyLong_AsLong@plt>
    14f0:	str	x0, [x20, #8]
    14f4:	cmn	x0, #0x1
    14f8:	b.ne	1504 <_PyLong_AsInt@plt+0x1c4>  // b.any
    14fc:	bl	12a0 <PyErr_Occurred@plt>
    1500:	cbnz	x0, 14c4 <_PyLong_AsInt@plt+0x184>
    1504:	mov	x0, x19
    1508:	bl	1468 <_PyLong_AsInt@plt+0x128>
    150c:	mov	w0, #0x0                   	// #0
    1510:	ldp	x19, x20, [sp, #16]
    1514:	ldr	x21, [sp, #32]
    1518:	ldp	x29, x30, [sp], #48
    151c:	ret
    1520:	bl	12a0 <PyErr_Occurred@plt>
    1524:	cbz	x0, 14e8 <_PyLong_AsInt@plt+0x1a8>
    1528:	b	14c4 <_PyLong_AsInt@plt+0x184>
    152c:	stp	x29, x30, [sp, #-48]!
    1530:	cmp	x2, #0x2
    1534:	mov	x29, sp
    1538:	stp	x19, x20, [sp, #16]
    153c:	mov	x20, x1
    1540:	b.ne	1578 <_PyLong_AsInt@plt+0x238>  // b.any
    1544:	ldr	x0, [x20]
    1548:	adrp	x1, 12000 <PyInit_resource@@Base+0x105b4>
    154c:	ldr	x1, [x1, #4008]
    1550:	ldr	x0, [x0, #8]
    1554:	cmp	x0, x1
    1558:	b.ne	159c <_PyLong_AsInt@plt+0x25c>  // b.any
    155c:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    1560:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1564:	add	x1, x1, #0xce1
    1568:	ldr	x0, [x0, #4032]
    156c:	ldr	x0, [x0]
    1570:	bl	1210 <PyErr_SetString@plt>
    1574:	b	1594 <_PyLong_AsInt@plt+0x254>
    1578:	mov	x1, x2
    157c:	mov	x3, #0x2                   	// #2
    1580:	adrp	x0, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1584:	mov	x2, x3
    1588:	add	x0, x0, #0xcd7
    158c:	bl	1280 <_PyArg_CheckPositional@plt>
    1590:	cbnz	w0, 1544 <_PyLong_AsInt@plt+0x204>
    1594:	mov	x0, #0x0                   	// #0
    1598:	b	1660 <_PyLong_AsInt@plt+0x320>
    159c:	bl	1320 <PyType_IsSubtype@plt>
    15a0:	cbnz	w0, 155c <_PyLong_AsInt@plt+0x21c>
    15a4:	ldr	x0, [x20]
    15a8:	bl	1340 <_PyLong_AsInt@plt>
    15ac:	mov	w19, w0
    15b0:	cmn	w0, #0x1
    15b4:	b.eq	15d8 <_PyLong_AsInt@plt+0x298>  // b.none
    15b8:	cmp	w19, #0xf
    15bc:	ldr	x0, [x20, #8]
    15c0:	b.ls	15e4 <_PyLong_AsInt@plt+0x2a4>  // b.plast
    15c4:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    15c8:	add	x1, x1, #0xd06
    15cc:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    15d0:	ldr	x0, [x0, #4024]
    15d4:	b	156c <_PyLong_AsInt@plt+0x22c>
    15d8:	bl	12a0 <PyErr_Occurred@plt>
    15dc:	cbz	x0, 15b8 <_PyLong_AsInt@plt+0x278>
    15e0:	b	1594 <_PyLong_AsInt@plt+0x254>
    15e4:	add	x20, sp, #0x20
    15e8:	mov	x1, x20
    15ec:	bl	1480 <_PyLong_AsInt@plt+0x140>
    15f0:	tbnz	w0, #31, 1594 <_PyLong_AsInt@plt+0x254>
    15f4:	mov	x1, x20
    15f8:	mov	w0, w19
    15fc:	bl	12e0 <setrlimit64@plt>
    1600:	cmn	w0, #0x1
    1604:	b.ne	164c <_PyLong_AsInt@plt+0x30c>  // b.any
    1608:	bl	1330 <__errno_location@plt>
    160c:	ldr	w0, [x0]
    1610:	cmp	w0, #0x16
    1614:	b.ne	1624 <_PyLong_AsInt@plt+0x2e4>  // b.any
    1618:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    161c:	add	x1, x1, #0xd21
    1620:	b	15cc <_PyLong_AsInt@plt+0x28c>
    1624:	cmp	w0, #0x1
    1628:	b.ne	1638 <_PyLong_AsInt@plt+0x2f8>  // b.any
    162c:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1630:	add	x1, x1, #0xd45
    1634:	b	15cc <_PyLong_AsInt@plt+0x28c>
    1638:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    163c:	ldr	x0, [x0, #4040]
    1640:	ldr	x0, [x0]
    1644:	bl	11d0 <PyErr_SetFromErrno@plt>
    1648:	b	1594 <_PyLong_AsInt@plt+0x254>
    164c:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    1650:	ldr	x0, [x0, #4056]
    1654:	ldr	x1, [x0]
    1658:	add	x1, x1, #0x1
    165c:	str	x1, [x0]
    1660:	ldp	x19, x20, [sp, #16]
    1664:	ldp	x29, x30, [sp], #48
    1668:	ret
    166c:	stp	x29, x30, [sp, #-96]!
    1670:	mov	x0, x1
    1674:	mov	x29, sp
    1678:	ldr	x1, [x1, #16]
    167c:	stp	x19, x20, [sp, #16]
    1680:	str	x21, [sp, #32]
    1684:	cmp	x1, #0x2
    1688:	str	xzr, [sp, #56]
    168c:	b.eq	16b4 <_PyLong_AsInt@plt+0x374>  // b.none
    1690:	cmp	x1, #0x3
    1694:	b.eq	16d4 <_PyLong_AsInt@plt+0x394>  // b.none
    1698:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    169c:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    16a0:	add	x1, x1, #0xd7f
    16a4:	ldr	x0, [x0, #4032]
    16a8:	ldr	x0, [x0]
    16ac:	bl	1210 <PyErr_SetString@plt>
    16b0:	b	16cc <_PyLong_AsInt@plt+0x38c>
    16b4:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    16b8:	add	x3, sp, #0x34
    16bc:	add	x2, sp, #0x30
    16c0:	add	x1, x1, #0xd68
    16c4:	bl	12f0 <PyArg_ParseTuple@plt>
    16c8:	cbnz	w0, 1714 <_PyLong_AsInt@plt+0x3d4>
    16cc:	mov	x0, #0x0                   	// #0
    16d0:	b	179c <_PyLong_AsInt@plt+0x45c>
    16d4:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    16d8:	add	x4, sp, #0x38
    16dc:	add	x3, sp, #0x34
    16e0:	add	x2, sp, #0x30
    16e4:	add	x1, x1, #0xd73
    16e8:	bl	12f0 <PyArg_ParseTuple@plt>
    16ec:	cbz	w0, 16cc <_PyLong_AsInt@plt+0x38c>
    16f0:	mov	w0, #0x1                   	// #1
    16f4:	ldp	w20, w19, [sp, #48]
    16f8:	cmp	w19, #0xf
    16fc:	b.ls	171c <_PyLong_AsInt@plt+0x3dc>  // b.plast
    1700:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1704:	add	x1, x1, #0xd06
    1708:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    170c:	ldr	x0, [x0, #4024]
    1710:	b	16a8 <_PyLong_AsInt@plt+0x368>
    1714:	mov	w0, #0x0                   	// #0
    1718:	b	16f4 <_PyLong_AsInt@plt+0x3b4>
    171c:	cbz	w0, 176c <_PyLong_AsInt@plt+0x42c>
    1720:	ldr	x0, [sp, #56]
    1724:	add	x21, sp, #0x50
    1728:	mov	x1, x21
    172c:	bl	1480 <_PyLong_AsInt@plt+0x140>
    1730:	tbnz	w0, #31, 16cc <_PyLong_AsInt@plt+0x38c>
    1734:	add	x3, sp, #0x40
    1738:	mov	x2, x21
    173c:	mov	w1, w19
    1740:	mov	w0, w20
    1744:	bl	1250 <prlimit64@plt>
    1748:	cmn	w0, #0x1
    174c:	b.ne	178c <_PyLong_AsInt@plt+0x44c>  // b.any
    1750:	bl	1330 <__errno_location@plt>
    1754:	ldr	w0, [x0]
    1758:	cmp	w0, #0x16
    175c:	b.ne	1778 <_PyLong_AsInt@plt+0x438>  // b.any
    1760:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1764:	add	x1, x1, #0xd21
    1768:	b	1708 <_PyLong_AsInt@plt+0x3c8>
    176c:	add	x3, sp, #0x40
    1770:	mov	x2, #0x0                   	// #0
    1774:	b	173c <_PyLong_AsInt@plt+0x3fc>
    1778:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    177c:	ldr	x0, [x0, #4040]
    1780:	ldr	x0, [x0]
    1784:	bl	11d0 <PyErr_SetFromErrno@plt>
    1788:	b	16cc <_PyLong_AsInt@plt+0x38c>
    178c:	ldp	x1, x2, [sp, #64]
    1790:	adrp	x0, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1794:	add	x0, x0, #0xdaa
    1798:	bl	1290 <Py_BuildValue@plt>
    179c:	ldp	x19, x20, [sp, #16]
    17a0:	ldr	x21, [sp, #32]
    17a4:	ldp	x29, x30, [sp], #96
    17a8:	ret
    17ac:	stp	x29, x30, [sp, #-176]!
    17b0:	mov	x29, sp
    17b4:	ldr	x0, [x1, #8]
    17b8:	str	x19, [sp, #16]
    17bc:	mov	x19, x1
    17c0:	adrp	x1, 12000 <PyInit_resource@@Base+0x105b4>
    17c4:	str	d8, [sp, #24]
    17c8:	ldr	x1, [x1, #4008]
    17cc:	cmp	x0, x1
    17d0:	b.ne	17f0 <_PyLong_AsInt@plt+0x4b0>  // b.any
    17d4:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    17d8:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    17dc:	add	x1, x1, #0xce1
    17e0:	ldr	x0, [x0, #4032]
    17e4:	ldr	x0, [x0]
    17e8:	bl	1210 <PyErr_SetString@plt>
    17ec:	b	1938 <_PyLong_AsInt@plt+0x5f8>
    17f0:	bl	1320 <PyType_IsSubtype@plt>
    17f4:	cbnz	w0, 17d4 <_PyLong_AsInt@plt+0x494>
    17f8:	mov	x0, x19
    17fc:	bl	1340 <_PyLong_AsInt@plt>
    1800:	mov	w19, w0
    1804:	cmn	w0, #0x1
    1808:	b.eq	1930 <_PyLong_AsInt@plt+0x5f0>  // b.none
    180c:	add	x1, sp, #0x20
    1810:	mov	w0, w19
    1814:	bl	12d0 <getrusage@plt>
    1818:	cmn	w0, #0x1
    181c:	b.eq	1950 <_PyLong_AsInt@plt+0x610>  // b.none
    1820:	adrp	x0, 13000 <PyInit_resource@@Base+0x115b4>
    1824:	add	x0, x0, #0x338
    1828:	bl	11f0 <PyStructSequence_New@plt>
    182c:	mov	x19, x0
    1830:	cbz	x0, 193c <_PyLong_AsInt@plt+0x5fc>
    1834:	ldp	d0, d2, [sp, #32]
    1838:	adrp	x0, 2000 <PyInit_resource@@Base+0x5b4>
    183c:	ldr	d8, [x0, #248]
    1840:	scvtf	d2, d2
    1844:	scvtf	d0, d0
    1848:	fmul	d2, d2, d8
    184c:	fadd	d0, d2, d0
    1850:	bl	1220 <PyFloat_FromDouble@plt>
    1854:	ldp	d0, d1, [sp, #48]
    1858:	str	x0, [x19, #24]
    185c:	scvtf	d1, d1
    1860:	scvtf	d0, d0
    1864:	fmul	d1, d1, d8
    1868:	fadd	d0, d1, d0
    186c:	bl	1220 <PyFloat_FromDouble@plt>
    1870:	str	x0, [x19, #32]
    1874:	ldr	x0, [sp, #64]
    1878:	bl	1230 <PyLong_FromLong@plt>
    187c:	str	x0, [x19, #40]
    1880:	ldr	x0, [sp, #72]
    1884:	bl	1230 <PyLong_FromLong@plt>
    1888:	str	x0, [x19, #48]
    188c:	ldr	x0, [sp, #80]
    1890:	bl	1230 <PyLong_FromLong@plt>
    1894:	str	x0, [x19, #56]
    1898:	ldr	x0, [sp, #88]
    189c:	bl	1230 <PyLong_FromLong@plt>
    18a0:	str	x0, [x19, #64]
    18a4:	ldr	x0, [sp, #96]
    18a8:	bl	1230 <PyLong_FromLong@plt>
    18ac:	str	x0, [x19, #72]
    18b0:	ldr	x0, [sp, #104]
    18b4:	bl	1230 <PyLong_FromLong@plt>
    18b8:	str	x0, [x19, #80]
    18bc:	ldr	x0, [sp, #112]
    18c0:	bl	1230 <PyLong_FromLong@plt>
    18c4:	str	x0, [x19, #88]
    18c8:	ldr	x0, [sp, #120]
    18cc:	bl	1230 <PyLong_FromLong@plt>
    18d0:	str	x0, [x19, #96]
    18d4:	ldr	x0, [sp, #128]
    18d8:	bl	1230 <PyLong_FromLong@plt>
    18dc:	str	x0, [x19, #104]
    18e0:	ldr	x0, [sp, #136]
    18e4:	bl	1230 <PyLong_FromLong@plt>
    18e8:	str	x0, [x19, #112]
    18ec:	ldr	x0, [sp, #144]
    18f0:	bl	1230 <PyLong_FromLong@plt>
    18f4:	str	x0, [x19, #120]
    18f8:	ldr	x0, [sp, #152]
    18fc:	bl	1230 <PyLong_FromLong@plt>
    1900:	str	x0, [x19, #128]
    1904:	ldr	x0, [sp, #160]
    1908:	bl	1230 <PyLong_FromLong@plt>
    190c:	str	x0, [x19, #136]
    1910:	ldr	x0, [sp, #168]
    1914:	bl	1230 <PyLong_FromLong@plt>
    1918:	str	x0, [x19, #144]
    191c:	bl	12a0 <PyErr_Occurred@plt>
    1920:	cbz	x0, 193c <_PyLong_AsInt@plt+0x5fc>
    1924:	mov	x0, x19
    1928:	bl	1468 <_PyLong_AsInt@plt+0x128>
    192c:	b	1938 <_PyLong_AsInt@plt+0x5f8>
    1930:	bl	12a0 <PyErr_Occurred@plt>
    1934:	cbz	x0, 180c <_PyLong_AsInt@plt+0x4cc>
    1938:	mov	x19, #0x0                   	// #0
    193c:	mov	x0, x19
    1940:	ldr	d8, [sp, #24]
    1944:	ldr	x19, [sp, #16]
    1948:	ldp	x29, x30, [sp], #176
    194c:	ret
    1950:	bl	1330 <__errno_location@plt>
    1954:	ldr	w0, [x0]
    1958:	cmp	w0, #0x16
    195c:	b.ne	1974 <_PyLong_AsInt@plt+0x634>  // b.any
    1960:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    1964:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1968:	add	x1, x1, #0xdad
    196c:	ldr	x0, [x0, #4024]
    1970:	b	17e4 <_PyLong_AsInt@plt+0x4a4>
    1974:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    1978:	ldr	x0, [x0, #4040]
    197c:	ldr	x0, [x0]
    1980:	bl	11d0 <PyErr_SetFromErrno@plt>
    1984:	b	1938 <_PyLong_AsInt@plt+0x5f8>
    1988:	stp	x29, x30, [sp, #-48]!
    198c:	mov	x29, sp
    1990:	ldr	x0, [x1, #8]
    1994:	str	x19, [sp, #16]
    1998:	mov	x19, x1
    199c:	adrp	x1, 12000 <PyInit_resource@@Base+0x105b4>
    19a0:	ldr	x1, [x1, #4008]
    19a4:	cmp	x0, x1
    19a8:	b.ne	19c8 <_PyLong_AsInt@plt+0x688>  // b.any
    19ac:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    19b0:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    19b4:	add	x1, x1, #0xce1
    19b8:	ldr	x0, [x0, #4032]
    19bc:	ldr	x0, [x0]
    19c0:	bl	1210 <PyErr_SetString@plt>
    19c4:	b	1a04 <_PyLong_AsInt@plt+0x6c4>
    19c8:	bl	1320 <PyType_IsSubtype@plt>
    19cc:	cbnz	w0, 19ac <_PyLong_AsInt@plt+0x66c>
    19d0:	mov	x0, x19
    19d4:	bl	1340 <_PyLong_AsInt@plt>
    19d8:	cmn	w0, #0x1
    19dc:	b.eq	19fc <_PyLong_AsInt@plt+0x6bc>  // b.none
    19e0:	cmp	w0, #0xf
    19e4:	b.ls	1a0c <_PyLong_AsInt@plt+0x6cc>  // b.plast
    19e8:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    19ec:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    19f0:	add	x1, x1, #0xd06
    19f4:	ldr	x0, [x0, #4024]
    19f8:	b	19bc <_PyLong_AsInt@plt+0x67c>
    19fc:	bl	12a0 <PyErr_Occurred@plt>
    1a00:	cbz	x0, 19e8 <_PyLong_AsInt@plt+0x6a8>
    1a04:	mov	x0, #0x0                   	// #0
    1a08:	b	1a40 <_PyLong_AsInt@plt+0x700>
    1a0c:	add	x1, sp, #0x20
    1a10:	bl	11c0 <getrlimit64@plt>
    1a14:	cmn	w0, #0x1
    1a18:	b.ne	1a30 <_PyLong_AsInt@plt+0x6f0>  // b.any
    1a1c:	adrp	x0, 12000 <PyInit_resource@@Base+0x105b4>
    1a20:	ldr	x0, [x0, #4040]
    1a24:	ldr	x0, [x0]
    1a28:	bl	11d0 <PyErr_SetFromErrno@plt>
    1a2c:	b	1a04 <_PyLong_AsInt@plt+0x6c4>
    1a30:	ldp	x1, x2, [sp, #32]
    1a34:	adrp	x0, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1a38:	add	x0, x0, #0xdaa
    1a3c:	bl	1290 <Py_BuildValue@plt>
    1a40:	ldr	x19, [sp, #16]
    1a44:	ldp	x29, x30, [sp], #48
    1a48:	ret

0000000000001a4c <PyInit_resource@@Base>:
    1a4c:	stp	x29, x30, [sp, #-48]!
    1a50:	mov	w1, #0x3f5                 	// #1013
    1a54:	mov	x29, sp
    1a58:	str	x21, [sp, #32]
    1a5c:	adrp	x21, 13000 <PyInit_resource@@Base+0x115b4>
    1a60:	add	x21, x21, #0xd8
    1a64:	stp	x19, x20, [sp, #16]
    1a68:	mov	x0, x21
    1a6c:	bl	12b0 <PyModule_Create2@plt>
    1a70:	cbnz	x0, 1a8c <PyInit_resource@@Base+0x40>
    1a74:	mov	x19, #0x0                   	// #0
    1a78:	mov	x0, x19
    1a7c:	ldp	x19, x20, [sp, #16]
    1a80:	ldr	x21, [sp, #32]
    1a84:	ldp	x29, x30, [sp], #48
    1a88:	ret
    1a8c:	adrp	x1, 12000 <PyInit_resource@@Base+0x105b4>
    1a90:	mov	x19, x0
    1a94:	adrp	x20, 13000 <PyInit_resource@@Base+0x115b4>
    1a98:	ldr	x1, [x1, #4040]
    1a9c:	ldr	x2, [x1]
    1aa0:	ldr	x1, [x2]
    1aa4:	add	x1, x1, #0x1
    1aa8:	str	x1, [x2]
    1aac:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1ab0:	add	x1, x1, #0xdc3
    1ab4:	bl	1300 <PyModule_AddObject@plt>
    1ab8:	add	x0, x20, #0x338
    1abc:	ldr	w1, [x0, #416]
    1ac0:	cbz	w1, 1c80 <PyInit_resource@@Base+0x234>
    1ac4:	ldr	x0, [x20, #824]
    1ac8:	add	x2, x20, #0x338
    1acc:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1ad0:	add	x1, x1, #0xf06
    1ad4:	add	x0, x0, #0x1
    1ad8:	str	x0, [x20, #824]
    1adc:	mov	x0, x19
    1ae0:	bl	1300 <PyModule_AddObject@plt>
    1ae4:	mov	x2, #0x0                   	// #0
    1ae8:	mov	x0, x19
    1aec:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1af0:	add	x1, x1, #0xdc9
    1af4:	bl	11b0 <PyModule_AddIntConstant@plt>
    1af8:	mov	x2, #0x1                   	// #1
    1afc:	mov	x0, x19
    1b00:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1b04:	add	x1, x1, #0xdd4
    1b08:	bl	11b0 <PyModule_AddIntConstant@plt>
    1b0c:	mov	x2, #0x2                   	// #2
    1b10:	mov	x0, x19
    1b14:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1b18:	add	x1, x1, #0xde1
    1b1c:	bl	11b0 <PyModule_AddIntConstant@plt>
    1b20:	mov	x2, #0x3                   	// #3
    1b24:	mov	x0, x19
    1b28:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1b2c:	add	x1, x1, #0xded
    1b30:	bl	11b0 <PyModule_AddIntConstant@plt>
    1b34:	mov	x2, #0x4                   	// #4
    1b38:	mov	x0, x19
    1b3c:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1b40:	add	x1, x1, #0xdfa
    1b44:	bl	11b0 <PyModule_AddIntConstant@plt>
    1b48:	mov	x2, #0x7                   	// #7
    1b4c:	mov	x0, x19
    1b50:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1b54:	add	x1, x1, #0xe06
    1b58:	bl	11b0 <PyModule_AddIntConstant@plt>
    1b5c:	mov	x2, #0x7                   	// #7
    1b60:	mov	x0, x19
    1b64:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1b68:	add	x1, x1, #0xe14
    1b6c:	bl	11b0 <PyModule_AddIntConstant@plt>
    1b70:	mov	x2, #0x9                   	// #9
    1b74:	mov	x0, x19
    1b78:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1b7c:	add	x1, x1, #0xe21
    1b80:	bl	11b0 <PyModule_AddIntConstant@plt>
    1b84:	mov	x2, #0x5                   	// #5
    1b88:	mov	x0, x19
    1b8c:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1b90:	add	x1, x1, #0xe2b
    1b94:	bl	11b0 <PyModule_AddIntConstant@plt>
    1b98:	mov	x2, #0x6                   	// #6
    1b9c:	mov	x0, x19
    1ba0:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1ba4:	add	x1, x1, #0xe36
    1ba8:	bl	11b0 <PyModule_AddIntConstant@plt>
    1bac:	mov	x2, #0x8                   	// #8
    1bb0:	mov	x0, x19
    1bb4:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1bb8:	add	x1, x1, #0xe43
    1bbc:	bl	11b0 <PyModule_AddIntConstant@plt>
    1bc0:	mov	x2, #0xc                   	// #12
    1bc4:	mov	x0, x19
    1bc8:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1bcc:	add	x1, x1, #0xe52
    1bd0:	bl	11b0 <PyModule_AddIntConstant@plt>
    1bd4:	mov	x2, #0xd                   	// #13
    1bd8:	mov	x0, x19
    1bdc:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1be0:	add	x1, x1, #0xe62
    1be4:	bl	11b0 <PyModule_AddIntConstant@plt>
    1be8:	mov	x2, #0xe                   	// #14
    1bec:	mov	x0, x19
    1bf0:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1bf4:	add	x1, x1, #0xe6e
    1bf8:	bl	11b0 <PyModule_AddIntConstant@plt>
    1bfc:	mov	x2, #0xf                   	// #15
    1c00:	mov	x0, x19
    1c04:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1c08:	add	x1, x1, #0xe7c
    1c0c:	bl	11b0 <PyModule_AddIntConstant@plt>
    1c10:	mov	x2, #0xb                   	// #11
    1c14:	mov	x0, x19
    1c18:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1c1c:	add	x1, x1, #0xe8a
    1c20:	bl	11b0 <PyModule_AddIntConstant@plt>
    1c24:	mov	x2, #0x0                   	// #0
    1c28:	mov	x0, x19
    1c2c:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1c30:	add	x1, x1, #0xe9c
    1c34:	bl	11b0 <PyModule_AddIntConstant@plt>
    1c38:	mov	x2, #0xffffffffffffffff    	// #-1
    1c3c:	mov	x0, x19
    1c40:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1c44:	add	x1, x1, #0xea8
    1c48:	bl	11b0 <PyModule_AddIntConstant@plt>
    1c4c:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1c50:	add	x1, x1, #0xeb8
    1c54:	mov	x2, #0x1                   	// #1
    1c58:	mov	x0, x19
    1c5c:	bl	11b0 <PyModule_AddIntConstant@plt>
    1c60:	mov	x0, #0xffffffffffffffff    	// #-1
    1c64:	bl	1230 <PyLong_FromLong@plt>
    1c68:	mov	x2, x0
    1c6c:	cbnz	x0, 1c90 <PyInit_resource@@Base+0x244>
    1c70:	add	x20, x20, #0x338
    1c74:	mov	w0, #0x1                   	// #1
    1c78:	str	w0, [x20, #416]
    1c7c:	b	1a78 <PyInit_resource@@Base+0x2c>
    1c80:	add	x1, x21, #0x68
    1c84:	bl	1270 <PyStructSequence_InitType2@plt>
    1c88:	tbz	w0, #31, 1ac4 <PyInit_resource@@Base+0x78>
    1c8c:	b	1a74 <PyInit_resource@@Base+0x28>
    1c90:	mov	x0, x19
    1c94:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1c98:	add	x1, x1, #0xec6
    1c9c:	bl	1300 <PyModule_AddObject@plt>
    1ca0:	b	1c70 <PyInit_resource@@Base+0x224>

Disassembly of section .fini:

0000000000001ca4 <.fini>:
    1ca4:	stp	x29, x30, [sp, #-16]!
    1ca8:	mov	x29, sp
    1cac:	ldp	x29, x30, [sp], #16
    1cb0:	ret
