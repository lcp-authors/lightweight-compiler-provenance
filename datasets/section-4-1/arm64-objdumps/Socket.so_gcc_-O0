
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Socket.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002da8 <_init>:
    2da8:	stp	x29, x30, [sp, #-16]!
    2dac:	mov	x29, sp
    2db0:	bl	3170 <call_weak_fn>
    2db4:	ldp	x29, x30, [sp], #16
    2db8:	ret

Disassembly of section .plt:

0000000000002dc0 <.plt>:
    2dc0:	stp	x16, x30, [sp, #-16]!
    2dc4:	adrp	x16, 1b000 <values_for_iv.21244+0x3d0>
    2dc8:	ldr	x17, [x16, #4088]
    2dcc:	add	x16, x16, #0xff8
    2dd0:	br	x17
    2dd4:	nop
    2dd8:	nop
    2ddc:	nop

0000000000002de0 <memcpy@plt>:
    2de0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2de4:	ldr	x17, [x16]
    2de8:	add	x16, x16, #0x0
    2dec:	br	x17

0000000000002df0 <gai_strerror@plt>:
    2df0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2df4:	ldr	x17, [x16, #8]
    2df8:	add	x16, x16, #0x8
    2dfc:	br	x17

0000000000002e00 <Perl_sv_2iv_flags@plt>:
    2e00:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2e04:	ldr	x17, [x16, #16]
    2e08:	add	x16, x16, #0x10
    2e0c:	br	x17

0000000000002e10 <freeaddrinfo@plt>:
    2e10:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2e14:	ldr	x17, [x16, #24]
    2e18:	add	x16, x16, #0x18
    2e1c:	br	x17

0000000000002e20 <strlen@plt>:
    2e20:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2e24:	ldr	x17, [x16, #32]
    2e28:	add	x16, x16, #0x20
    2e2c:	br	x17

0000000000002e30 <Perl_newRV_noinc@plt>:
    2e30:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2e34:	ldr	x17, [x16, #40]
    2e38:	add	x16, x16, #0x28
    2e3c:	br	x17

0000000000002e40 <Perl_sv_2uv_flags@plt>:
    2e40:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2e44:	ldr	x17, [x16, #48]
    2e48:	add	x16, x16, #0x30
    2e4c:	br	x17

0000000000002e50 <Perl_stack_grow@plt>:
    2e50:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2e54:	ldr	x17, [x16, #56]
    2e58:	add	x16, x16, #0x38
    2e5c:	br	x17

0000000000002e60 <htonl@plt>:
    2e60:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2e64:	ldr	x17, [x16, #64]
    2e68:	add	x16, x16, #0x40
    2e6c:	br	x17

0000000000002e70 <getnameinfo@plt>:
    2e70:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2e74:	ldr	x17, [x16, #72]
    2e78:	add	x16, x16, #0x48
    2e7c:	br	x17

0000000000002e80 <ntohl@plt>:
    2e80:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2e84:	ldr	x17, [x16, #80]
    2e88:	add	x16, x16, #0x50
    2e8c:	br	x17

0000000000002e90 <Perl_sv_utf8_downgrade@plt>:
    2e90:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2e94:	ldr	x17, [x16, #88]
    2e98:	add	x16, x16, #0x58
    2e9c:	br	x17

0000000000002ea0 <__cxa_finalize@plt>:
    2ea0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2ea4:	ldr	x17, [x16, #96]
    2ea8:	add	x16, x16, #0x60
    2eac:	br	x17

0000000000002eb0 <Perl_newCONSTSUB@plt>:
    2eb0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2eb4:	ldr	x17, [x16, #104]
    2eb8:	add	x16, x16, #0x68
    2ebc:	br	x17

0000000000002ec0 <Perl_warn_nocontext@plt>:
    2ec0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2ec4:	ldr	x17, [x16, #112]
    2ec8:	add	x16, x16, #0x70
    2ecc:	br	x17

0000000000002ed0 <Perl_newSV@plt>:
    2ed0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2ed4:	ldr	x17, [x16, #120]
    2ed8:	add	x16, x16, #0x78
    2edc:	br	x17

0000000000002ee0 <ntohs@plt>:
    2ee0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2ee4:	ldr	x17, [x16, #128]
    2ee8:	add	x16, x16, #0x80
    2eec:	br	x17

0000000000002ef0 <Perl_sv_upgrade@plt>:
    2ef0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2ef4:	ldr	x17, [x16, #136]
    2ef8:	add	x16, x16, #0x88
    2efc:	br	x17

0000000000002f00 <Perl_mro_method_changed_in@plt>:
    2f00:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2f04:	ldr	x17, [x16, #144]
    2f08:	add	x16, x16, #0x90
    2f0c:	br	x17

0000000000002f10 <Perl_sv_setpv@plt>:
    2f10:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2f14:	ldr	x17, [x16, #152]
    2f18:	add	x16, x16, #0x98
    2f1c:	br	x17

0000000000002f20 <Perl_sv_2pvbyte@plt>:
    2f20:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2f24:	ldr	x17, [x16, #160]
    2f28:	add	x16, x16, #0xa0
    2f2c:	br	x17

0000000000002f30 <memset@plt>:
    2f30:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2f34:	ldr	x17, [x16, #168]
    2f38:	add	x16, x16, #0xa8
    2f3c:	br	x17

0000000000002f40 <Perl_sv_2pv_flags@plt>:
    2f40:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2f44:	ldr	x17, [x16, #176]
    2f48:	add	x16, x16, #0xb0
    2f4c:	br	x17

0000000000002f50 <Perl_xs_boot_epilog@plt>:
    2f50:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2f54:	ldr	x17, [x16, #184]
    2f58:	add	x16, x16, #0xb8
    2f5c:	br	x17

0000000000002f60 <Perl_safesysmalloc@plt>:
    2f60:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2f64:	ldr	x17, [x16, #192]
    2f68:	add	x16, x16, #0xc0
    2f6c:	br	x17

0000000000002f70 <htons@plt>:
    2f70:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2f74:	ldr	x17, [x16, #200]
    2f78:	add	x16, x16, #0xc8
    2f7c:	br	x17

0000000000002f80 <__stack_chk_fail@plt>:
    2f80:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2f84:	ldr	x17, [x16, #208]
    2f88:	add	x16, x16, #0xd0
    2f8c:	br	x17

0000000000002f90 <__gmon_start__@plt>:
    2f90:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2f94:	ldr	x17, [x16, #216]
    2f98:	add	x16, x16, #0xd8
    2f9c:	br	x17

0000000000002fa0 <Perl_croak_xs_usage@plt>:
    2fa0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fa4:	ldr	x17, [x16, #224]
    2fa8:	add	x16, x16, #0xe0
    2fac:	br	x17

0000000000002fb0 <Perl_newSVpvn_flags@plt>:
    2fb0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fb4:	ldr	x17, [x16, #232]
    2fb8:	add	x16, x16, #0xe8
    2fbc:	br	x17

0000000000002fc0 <Perl_newSVpv@plt>:
    2fc0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fc4:	ldr	x17, [x16, #240]
    2fc8:	add	x16, x16, #0xf0
    2fcc:	br	x17

0000000000002fd0 <Perl_croak_nocontext@plt>:
    2fd0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fd4:	ldr	x17, [x16, #248]
    2fd8:	add	x16, x16, #0xf8
    2fdc:	br	x17

0000000000002fe0 <Perl_newXS@plt>:
    2fe0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fe4:	ldr	x17, [x16, #256]
    2fe8:	add	x16, x16, #0x100
    2fec:	br	x17

0000000000002ff0 <Perl_newXS_deffile@plt>:
    2ff0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2ff4:	ldr	x17, [x16, #264]
    2ff8:	add	x16, x16, #0x108
    2ffc:	br	x17

0000000000003000 <inet_pton@plt>:
    3000:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3004:	ldr	x17, [x16, #272]
    3008:	add	x16, x16, #0x110
    300c:	br	x17

0000000000003010 <Perl_sv_2mortal@plt>:
    3010:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3014:	ldr	x17, [x16, #280]
    3018:	add	x16, x16, #0x118
    301c:	br	x17

0000000000003020 <Perl_mg_get@plt>:
    3020:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3024:	ldr	x17, [x16, #288]
    3028:	add	x16, x16, #0x120
    302c:	br	x17

0000000000003030 <Perl_hv_common@plt>:
    3030:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3034:	ldr	x17, [x16, #296]
    3038:	add	x16, x16, #0x128
    303c:	br	x17

0000000000003040 <Perl_safesysfree@plt>:
    3040:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3044:	ldr	x17, [x16, #304]
    3048:	add	x16, x16, #0x130
    304c:	br	x17

0000000000003050 <Perl_croak_sv@plt>:
    3050:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3054:	ldr	x17, [x16, #312]
    3058:	add	x16, x16, #0x138
    305c:	br	x17

0000000000003060 <Perl_xs_handshake@plt>:
    3060:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3064:	ldr	x17, [x16, #320]
    3068:	add	x16, x16, #0x140
    306c:	br	x17

0000000000003070 <getaddrinfo@plt>:
    3070:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3074:	ldr	x17, [x16, #328]
    3078:	add	x16, x16, #0x148
    307c:	br	x17

0000000000003080 <Perl_hv_common_key_len@plt>:
    3080:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3084:	ldr	x17, [x16, #336]
    3088:	add	x16, x16, #0x150
    308c:	br	x17

0000000000003090 <Perl_sv_setpvn@plt>:
    3090:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16, #344]
    3098:	add	x16, x16, #0x158
    309c:	br	x17

00000000000030a0 <Perl_newSV_type@plt>:
    30a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #352]
    30a8:	add	x16, x16, #0x160
    30ac:	br	x17

00000000000030b0 <inet_aton@plt>:
    30b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #360]
    30b8:	add	x16, x16, #0x168
    30bc:	br	x17

00000000000030c0 <Perl_block_gimme@plt>:
    30c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #368]
    30c8:	add	x16, x16, #0x170
    30cc:	br	x17

00000000000030d0 <Perl_newSVpvf_nocontext@plt>:
    30d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #376]
    30d8:	add	x16, x16, #0x178
    30dc:	br	x17

00000000000030e0 <Perl_sv_free2@plt>:
    30e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #384]
    30e8:	add	x16, x16, #0x180
    30ec:	br	x17

00000000000030f0 <Perl_newSViv@plt>:
    30f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #392]
    30f8:	add	x16, x16, #0x188
    30fc:	br	x17

0000000000003100 <Perl_sv_setiv@plt>:
    3100:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #400]
    3108:	add	x16, x16, #0x190
    310c:	br	x17

0000000000003110 <Perl_newSVpvf@plt>:
    3110:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #408]
    3118:	add	x16, x16, #0x198
    311c:	br	x17

0000000000003120 <Perl_newSVpvn@plt>:
    3120:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #416]
    3128:	add	x16, x16, #0x1a0
    312c:	br	x17

0000000000003130 <Perl_sv_newmortal@plt>:
    3130:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #424]
    3138:	add	x16, x16, #0x1a8
    313c:	br	x17

0000000000003140 <inet_ntop@plt>:
    3140:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #432]
    3148:	add	x16, x16, #0x1b0
    314c:	br	x17

0000000000003150 <gethostbyname@plt>:
    3150:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #440]
    3158:	add	x16, x16, #0x1b8
    315c:	br	x17

0000000000003160 <Perl_get_hv@plt>:
    3160:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #448]
    3168:	add	x16, x16, #0x1c0
    316c:	br	x17

Disassembly of section .text:

0000000000003170 <call_weak_fn>:
    3170:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    3174:	ldr	x0, [x0, #4040]
    3178:	cbz	x0, 3180 <call_weak_fn+0x10>
    317c:	b	2f90 <__gmon_start__@plt>
    3180:	ret

0000000000003184 <deregister_tm_clones>:
    3184:	stp	x29, x30, [sp, #-32]!
    3188:	mov	x29, sp
    318c:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    3190:	add	x0, x0, #0x1d0
    3194:	str	x0, [sp, #24]
    3198:	ldr	x0, [sp, #24]
    319c:	str	x0, [sp, #24]
    31a0:	ldr	x1, [sp, #24]
    31a4:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    31a8:	add	x0, x0, #0x1d0
    31ac:	cmp	x1, x0
    31b0:	b.eq	31e8 <deregister_tm_clones+0x64>  // b.none
    31b4:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    31b8:	ldr	x0, [x0, #4024]
    31bc:	str	x0, [sp, #16]
    31c0:	ldr	x0, [sp, #16]
    31c4:	str	x0, [sp, #16]
    31c8:	ldr	x0, [sp, #16]
    31cc:	cmp	x0, #0x0
    31d0:	b.eq	31ec <deregister_tm_clones+0x68>  // b.none
    31d4:	ldr	x1, [sp, #16]
    31d8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    31dc:	add	x0, x0, #0x1d0
    31e0:	blr	x1
    31e4:	b	31ec <deregister_tm_clones+0x68>
    31e8:	nop
    31ec:	ldp	x29, x30, [sp], #32
    31f0:	ret

00000000000031f4 <register_tm_clones>:
    31f4:	stp	x29, x30, [sp, #-48]!
    31f8:	mov	x29, sp
    31fc:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    3200:	add	x0, x0, #0x1d0
    3204:	str	x0, [sp, #40]
    3208:	ldr	x0, [sp, #40]
    320c:	str	x0, [sp, #40]
    3210:	ldr	x1, [sp, #40]
    3214:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    3218:	add	x0, x0, #0x1d0
    321c:	sub	x0, x1, x0
    3220:	asr	x0, x0, #3
    3224:	lsr	x1, x0, #63
    3228:	add	x0, x1, x0
    322c:	asr	x0, x0, #1
    3230:	str	x0, [sp, #32]
    3234:	ldr	x0, [sp, #32]
    3238:	cmp	x0, #0x0
    323c:	b.eq	3278 <register_tm_clones+0x84>  // b.none
    3240:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    3244:	ldr	x0, [x0, #4064]
    3248:	str	x0, [sp, #24]
    324c:	ldr	x0, [sp, #24]
    3250:	str	x0, [sp, #24]
    3254:	ldr	x0, [sp, #24]
    3258:	cmp	x0, #0x0
    325c:	b.eq	327c <register_tm_clones+0x88>  // b.none
    3260:	ldr	x2, [sp, #24]
    3264:	ldr	x1, [sp, #32]
    3268:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    326c:	add	x0, x0, #0x1d0
    3270:	blr	x2
    3274:	b	327c <register_tm_clones+0x88>
    3278:	nop
    327c:	ldp	x29, x30, [sp], #48
    3280:	ret

0000000000003284 <__do_global_dtors_aux>:
    3284:	stp	x29, x30, [sp, #-16]!
    3288:	mov	x29, sp
    328c:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    3290:	add	x0, x0, #0x1d0
    3294:	ldrb	w0, [x0]
    3298:	and	x0, x0, #0xff
    329c:	cmp	x0, #0x0
    32a0:	b.ne	32dc <__do_global_dtors_aux+0x58>  // b.any
    32a4:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    32a8:	ldr	x0, [x0, #4032]
    32ac:	cmp	x0, #0x0
    32b0:	b.eq	32c4 <__do_global_dtors_aux+0x40>  // b.none
    32b4:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    32b8:	add	x0, x0, #0x1c8
    32bc:	ldr	x0, [x0]
    32c0:	bl	2ea0 <__cxa_finalize@plt>
    32c4:	bl	3184 <deregister_tm_clones>
    32c8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    32cc:	add	x0, x0, #0x1d0
    32d0:	mov	w1, #0x1                   	// #1
    32d4:	strb	w1, [x0]
    32d8:	b	32e0 <__do_global_dtors_aux+0x5c>
    32dc:	nop
    32e0:	ldp	x29, x30, [sp], #16
    32e4:	ret

00000000000032e8 <frame_dummy>:
    32e8:	stp	x29, x30, [sp, #-16]!
    32ec:	mov	x29, sp
    32f0:	bl	31f4 <register_tm_clones>
    32f4:	nop
    32f8:	ldp	x29, x30, [sp], #16
    32fc:	ret

0000000000003300 <S_POPMARK>:
    3300:	sub	sp, sp, #0x10
    3304:	str	x0, [sp, #8]
    3308:	ldr	x0, [sp, #8]
    330c:	ldr	x0, [x0, #120]
    3310:	sub	x2, x0, #0x4
    3314:	ldr	x1, [sp, #8]
    3318:	str	x2, [x1, #120]
    331c:	ldr	w0, [x0]
    3320:	add	sp, sp, #0x10
    3324:	ret

0000000000003328 <S_SvREFCNT_inc>:
    3328:	sub	sp, sp, #0x10
    332c:	str	x0, [sp, #8]
    3330:	ldr	x0, [sp, #8]
    3334:	cmp	x0, #0x0
    3338:	cset	w0, ne  // ne = any
    333c:	and	w0, w0, #0xff
    3340:	and	x0, x0, #0xff
    3344:	cmp	x0, #0x0
    3348:	b.eq	3360 <S_SvREFCNT_inc+0x38>  // b.none
    334c:	ldr	x0, [sp, #8]
    3350:	ldr	w0, [x0, #8]
    3354:	add	w1, w0, #0x1
    3358:	ldr	x0, [sp, #8]
    335c:	str	w1, [x0, #8]
    3360:	ldr	x0, [sp, #8]
    3364:	add	sp, sp, #0x10
    3368:	ret

000000000000336c <S_SvREFCNT_dec>:
    336c:	stp	x29, x30, [sp, #-48]!
    3370:	mov	x29, sp
    3374:	str	x0, [sp, #24]
    3378:	str	x1, [sp, #16]
    337c:	ldr	x0, [sp, #16]
    3380:	cmp	x0, #0x0
    3384:	cset	w0, ne  // ne = any
    3388:	and	w0, w0, #0xff
    338c:	and	x0, x0, #0xff
    3390:	cmp	x0, #0x0
    3394:	b.eq	33e4 <S_SvREFCNT_dec+0x78>  // b.none
    3398:	ldr	x0, [sp, #16]
    339c:	ldr	w0, [x0, #8]
    33a0:	str	w0, [sp, #44]
    33a4:	ldr	w0, [sp, #44]
    33a8:	cmp	w0, #0x1
    33ac:	cset	w0, hi  // hi = pmore
    33b0:	and	w0, w0, #0xff
    33b4:	and	x0, x0, #0xff
    33b8:	cmp	x0, #0x0
    33bc:	b.eq	33d4 <S_SvREFCNT_dec+0x68>  // b.none
    33c0:	ldr	w0, [sp, #44]
    33c4:	sub	w1, w0, #0x1
    33c8:	ldr	x0, [sp, #16]
    33cc:	str	w1, [x0, #8]
    33d0:	b	33e4 <S_SvREFCNT_dec+0x78>
    33d4:	ldr	w2, [sp, #44]
    33d8:	ldr	x1, [sp, #16]
    33dc:	ldr	x0, [sp, #24]
    33e0:	bl	30e0 <Perl_sv_free2@plt>
    33e4:	nop
    33e8:	ldp	x29, x30, [sp], #48
    33ec:	ret

00000000000033f0 <S_croak_memory_wrap>:
    33f0:	stp	x29, x30, [sp, #-16]!
    33f4:	mov	x29, sp
    33f8:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    33fc:	ldr	x1, [x0, #4056]
    3400:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3404:	add	x0, x0, #0x320
    3408:	bl	2fd0 <Perl_croak_nocontext@plt>

000000000000340c <not_here>:
    340c:	stp	x29, x30, [sp, #-32]!
    3410:	mov	x29, sp
    3414:	str	x0, [sp, #24]
    3418:	ldr	x1, [sp, #24]
    341c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3420:	add	x0, x0, #0x328
    3424:	bl	2fd0 <Perl_croak_nocontext@plt>

0000000000003428 <constant_add_symbol>:
    3428:	stp	x29, x30, [sp, #-80]!
    342c:	mov	x29, sp
    3430:	str	x0, [sp, #56]
    3434:	str	x1, [sp, #48]
    3438:	str	x2, [sp, #40]
    343c:	str	w3, [sp, #36]
    3440:	str	x4, [sp, #24]
    3444:	mov	w6, #0x0                   	// #0
    3448:	mov	x5, #0x0                   	// #0
    344c:	mov	w4, #0x10                  	// #16
    3450:	ldr	w3, [sp, #36]
    3454:	ldr	x2, [sp, #40]
    3458:	ldr	x1, [sp, #48]
    345c:	ldr	x0, [sp, #56]
    3460:	bl	3080 <Perl_hv_common_key_len@plt>
    3464:	str	x0, [sp, #64]
    3468:	ldr	x0, [sp, #64]
    346c:	cmp	x0, #0x0
    3470:	b.ne	3484 <constant_add_symbol+0x5c>  // b.any
    3474:	ldr	x1, [sp, #40]
    3478:	adrp	x0, 8000 <boot_Socket+0x4b0>
    347c:	add	x0, x0, #0x358
    3480:	bl	2fd0 <Perl_croak_nocontext@plt>
    3484:	ldr	x0, [sp, #64]
    3488:	ldr	x0, [x0, #16]
    348c:	str	x0, [sp, #72]
    3490:	ldr	x0, [sp, #72]
    3494:	ldr	w0, [x0, #12]
    3498:	and	w0, w0, #0xff00
    349c:	cmp	w0, #0x0
    34a0:	b.ne	34b8 <constant_add_symbol+0x90>  // b.any
    34a4:	ldr	x0, [sp, #72]
    34a8:	ldr	w0, [x0, #12]
    34ac:	and	w0, w0, #0xff
    34b0:	cmp	w0, #0x9
    34b4:	b.ne	34d0 <constant_add_symbol+0xa8>  // b.any
    34b8:	ldr	x3, [sp, #24]
    34bc:	ldr	x2, [sp, #40]
    34c0:	ldr	x1, [sp, #48]
    34c4:	ldr	x0, [sp, #56]
    34c8:	bl	2eb0 <Perl_newCONSTSUB@plt>
    34cc:	b	352c <constant_add_symbol+0x104>
    34d0:	ldr	x0, [sp, #72]
    34d4:	ldr	w0, [x0, #12]
    34d8:	and	w0, w0, #0xff
    34dc:	cmp	w0, #0x0
    34e0:	b.ne	34f4 <constant_add_symbol+0xcc>  // b.any
    34e4:	mov	w2, #0x1                   	// #1
    34e8:	ldr	x1, [sp, #72]
    34ec:	ldr	x0, [sp, #56]
    34f0:	bl	2ef0 <Perl_sv_upgrade@plt>
    34f4:	ldr	x0, [sp, #72]
    34f8:	ldr	x1, [sp, #24]
    34fc:	str	x1, [x0, #16]
    3500:	ldr	x0, [sp, #72]
    3504:	ldr	w0, [x0, #12]
    3508:	orr	w1, w0, #0x800
    350c:	ldr	x0, [sp, #72]
    3510:	str	w1, [x0, #12]
    3514:	ldr	x0, [sp, #24]
    3518:	ldr	w0, [x0, #12]
    351c:	orr	w1, w0, #0x8000000
    3520:	ldr	x0, [sp, #24]
    3524:	str	w1, [x0, #12]
    3528:	nop
    352c:	nop
    3530:	ldp	x29, x30, [sp], #80
    3534:	ret

0000000000003538 <get_missing_hash>:
    3538:	stp	x29, x30, [sp, #-64]!
    353c:	mov	x29, sp
    3540:	str	x0, [sp, #24]
    3544:	mov	w2, #0x2                   	// #2
    3548:	adrp	x0, 8000 <boot_Socket+0x4b0>
    354c:	add	x1, x0, #0x380
    3550:	ldr	x0, [sp, #24]
    3554:	bl	3160 <Perl_get_hv@plt>
    3558:	str	x0, [sp, #32]
    355c:	mov	w6, #0x0                   	// #0
    3560:	mov	x5, #0x0                   	// #0
    3564:	mov	w4, #0x30                  	// #48
    3568:	mov	w3, #0x6                   	// #6
    356c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3570:	add	x2, x0, #0x3a8
    3574:	ldr	x1, [sp, #32]
    3578:	ldr	x0, [sp, #24]
    357c:	bl	3080 <Perl_hv_common_key_len@plt>
    3580:	str	x0, [sp, #40]
    3584:	ldr	x0, [sp, #40]
    3588:	cmp	x0, #0x0
    358c:	b.ne	3598 <get_missing_hash+0x60>  // b.any
    3590:	mov	x0, #0x0                   	// #0
    3594:	b	3638 <get_missing_hash+0x100>
    3598:	ldr	x0, [sp, #40]
    359c:	ldr	x0, [x0]
    35a0:	ldr	w0, [x0, #12]
    35a4:	and	w0, w0, #0x800
    35a8:	cmp	w0, #0x0
    35ac:	b.eq	35c0 <get_missing_hash+0x88>  // b.none
    35b0:	ldr	x0, [sp, #40]
    35b4:	ldr	x0, [x0]
    35b8:	ldr	x0, [x0, #16]
    35bc:	b	3638 <get_missing_hash+0x100>
    35c0:	mov	w1, #0xc                   	// #12
    35c4:	ldr	x0, [sp, #24]
    35c8:	bl	30a0 <Perl_newSV_type@plt>
    35cc:	str	x0, [sp, #48]
    35d0:	ldr	x0, [sp, #48]
    35d4:	str	x0, [sp, #56]
    35d8:	ldr	x0, [sp, #40]
    35dc:	ldr	x0, [x0]
    35e0:	ldr	w0, [x0, #12]
    35e4:	and	w0, w0, #0xff
    35e8:	cmp	w0, #0x0
    35ec:	b.ne	3608 <get_missing_hash+0xd0>  // b.any
    35f0:	ldr	x0, [sp, #40]
    35f4:	ldr	x0, [x0]
    35f8:	mov	w2, #0x1                   	// #1
    35fc:	mov	x1, x0
    3600:	ldr	x0, [sp, #24]
    3604:	bl	2ef0 <Perl_sv_upgrade@plt>
    3608:	ldr	x0, [sp, #40]
    360c:	ldr	x0, [x0]
    3610:	ldr	x1, [sp, #56]
    3614:	str	x1, [x0, #16]
    3618:	ldr	x0, [sp, #40]
    361c:	ldr	x0, [x0]
    3620:	ldr	w1, [x0, #12]
    3624:	ldr	x0, [sp, #40]
    3628:	ldr	x0, [x0]
    362c:	orr	w1, w1, #0x800
    3630:	str	w1, [x0, #12]
    3634:	ldr	x0, [sp, #56]
    3638:	ldp	x29, x30, [sp], #64
    363c:	ret

0000000000003640 <err_to_SV>:
    3640:	stp	x29, x30, [sp, #-48]!
    3644:	mov	x29, sp
    3648:	str	x0, [sp, #24]
    364c:	str	w1, [sp, #20]
    3650:	ldr	x0, [sp, #24]
    3654:	bl	3130 <Perl_sv_newmortal@plt>
    3658:	str	x0, [sp, #32]
    365c:	ldr	x0, [sp, #32]
    3660:	ldr	w0, [x0, #12]
    3664:	and	w0, w0, #0xff
    3668:	cmp	w0, #0x5
    366c:	b.hi	3680 <err_to_SV+0x40>  // b.pmore
    3670:	mov	w2, #0x6                   	// #6
    3674:	ldr	x1, [sp, #32]
    3678:	ldr	x0, [sp, #24]
    367c:	bl	2ef0 <Perl_sv_upgrade@plt>
    3680:	ldr	w0, [sp, #20]
    3684:	cmp	w0, #0x0
    3688:	b.eq	36ac <err_to_SV+0x6c>  // b.none
    368c:	ldr	w0, [sp, #20]
    3690:	bl	2df0 <gai_strerror@plt>
    3694:	str	x0, [sp, #40]
    3698:	ldr	x2, [sp, #40]
    369c:	ldr	x1, [sp, #32]
    36a0:	ldr	x0, [sp, #24]
    36a4:	bl	2f10 <Perl_sv_setpv@plt>
    36a8:	b	36c0 <err_to_SV+0x80>
    36ac:	adrp	x0, 8000 <boot_Socket+0x4b0>
    36b0:	add	x2, x0, #0x7f0
    36b4:	ldr	x1, [sp, #32]
    36b8:	ldr	x0, [sp, #24]
    36bc:	bl	2f10 <Perl_sv_setpv@plt>
    36c0:	ldr	x0, [sp, #32]
    36c4:	ldr	x0, [x0]
    36c8:	ldrsw	x1, [sp, #20]
    36cc:	str	x1, [x0, #32]
    36d0:	ldr	x0, [sp, #32]
    36d4:	ldr	w1, [x0, #12]
    36d8:	mov	w0, #0x1100                	// #4352
    36dc:	orr	w1, w1, w0
    36e0:	ldr	x0, [sp, #32]
    36e4:	str	w1, [x0, #12]
    36e8:	ldr	x0, [sp, #32]
    36ec:	ldp	x29, x30, [sp], #48
    36f0:	ret

00000000000036f4 <xs_getaddrinfo>:
    36f4:	stp	x29, x30, [sp, #-240]!
    36f8:	mov	x29, sp
    36fc:	str	x0, [sp, #24]
    3700:	str	x1, [sp, #16]
    3704:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    3708:	ldr	x0, [x0, #4048]
    370c:	ldr	x1, [x0]
    3710:	str	x1, [sp, #232]
    3714:	mov	x1, #0x0                   	// #0
    3718:	ldr	x0, [sp, #24]
    371c:	ldr	x0, [x0]
    3720:	str	x0, [sp, #72]
    3724:	ldr	x0, [sp, #24]
    3728:	bl	3300 <S_POPMARK>
    372c:	str	w0, [sp, #44]
    3730:	ldr	x0, [sp, #24]
    3734:	ldr	x1, [x0, #24]
    3738:	ldr	w0, [sp, #44]
    373c:	add	w2, w0, #0x1
    3740:	str	w2, [sp, #44]
    3744:	sxtw	x0, w0
    3748:	lsl	x0, x0, #3
    374c:	add	x0, x1, x0
    3750:	str	x0, [sp, #128]
    3754:	ldr	x1, [sp, #72]
    3758:	ldr	x0, [sp, #128]
    375c:	sub	x0, x1, x0
    3760:	asr	x0, x0, #3
    3764:	str	w0, [sp, #48]
    3768:	str	xzr, [sp, #104]
    376c:	str	xzr, [sp, #112]
    3770:	ldr	w0, [sp, #48]
    3774:	cmp	w0, #0x3
    3778:	b.le	3788 <xs_getaddrinfo+0x94>
    377c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3780:	add	x0, x0, #0x7f8
    3784:	bl	2fd0 <Perl_croak_nocontext@plt>
    3788:	ldrsw	x0, [sp, #48]
    378c:	lsl	x0, x0, #3
    3790:	neg	x0, x0
    3794:	ldr	x1, [sp, #72]
    3798:	add	x0, x1, x0
    379c:	str	x0, [sp, #72]
    37a0:	ldr	w0, [sp, #48]
    37a4:	cmp	w0, #0x0
    37a8:	b.gt	37bc <xs_getaddrinfo+0xc8>
    37ac:	ldr	x0, [sp, #24]
    37b0:	add	x0, x0, #0x150
    37b4:	str	x0, [sp, #80]
    37b8:	b	37d8 <xs_getaddrinfo+0xe4>
    37bc:	ldr	x0, [sp, #24]
    37c0:	ldr	x1, [x0, #24]
    37c4:	ldrsw	x0, [sp, #44]
    37c8:	lsl	x0, x0, #3
    37cc:	add	x0, x1, x0
    37d0:	ldr	x0, [x0]
    37d4:	str	x0, [sp, #80]
    37d8:	ldr	w0, [sp, #48]
    37dc:	cmp	w0, #0x1
    37e0:	b.gt	37f4 <xs_getaddrinfo+0x100>
    37e4:	ldr	x0, [sp, #24]
    37e8:	add	x0, x0, #0x150
    37ec:	str	x0, [sp, #88]
    37f0:	b	3814 <xs_getaddrinfo+0x120>
    37f4:	ldr	x0, [sp, #24]
    37f8:	ldr	x1, [x0, #24]
    37fc:	ldrsw	x0, [sp, #44]
    3800:	add	x0, x0, #0x1
    3804:	lsl	x0, x0, #3
    3808:	add	x0, x1, x0
    380c:	ldr	x0, [x0]
    3810:	str	x0, [sp, #88]
    3814:	ldr	w0, [sp, #48]
    3818:	cmp	w0, #0x2
    381c:	b.gt	3828 <xs_getaddrinfo+0x134>
    3820:	str	xzr, [sp, #96]
    3824:	b	3848 <xs_getaddrinfo+0x154>
    3828:	ldr	x0, [sp, #24]
    382c:	ldr	x1, [x0, #24]
    3830:	ldrsw	x0, [sp, #44]
    3834:	add	x0, x0, #0x2
    3838:	lsl	x0, x0, #3
    383c:	add	x0, x1, x0
    3840:	ldr	x0, [x0]
    3844:	str	x0, [sp, #96]
    3848:	ldr	x0, [sp, #80]
    384c:	ldr	w0, [x0, #12]
    3850:	lsr	w0, w0, #21
    3854:	mov	w0, w0
    3858:	and	x0, x0, #0x1
    385c:	cmp	x0, #0x0
    3860:	b.eq	3878 <xs_getaddrinfo+0x184>  // b.none
    3864:	ldr	x1, [sp, #80]
    3868:	ldr	x0, [sp, #24]
    386c:	bl	3020 <Perl_mg_get@plt>
    3870:	cmp	w0, #0x0
    3874:	nop
    3878:	ldr	x0, [sp, #80]
    387c:	ldr	w0, [x0, #12]
    3880:	and	w0, w0, #0xff00
    3884:	cmp	w0, #0x0
    3888:	b.eq	38f0 <xs_getaddrinfo+0x1fc>  // b.none
    388c:	ldr	x0, [sp, #80]
    3890:	ldr	w1, [x0, #12]
    3894:	mov	w0, #0x400                 	// #1024
    3898:	movk	w0, #0x20, lsl #16
    389c:	and	w0, w1, w0
    38a0:	cmp	w0, #0x400
    38a4:	b.ne	38c4 <xs_getaddrinfo+0x1d0>  // b.any
    38a8:	ldr	x0, [sp, #80]
    38ac:	ldr	x0, [x0]
    38b0:	ldr	x0, [x0, #16]
    38b4:	str	x0, [sp, #56]
    38b8:	ldr	x0, [sp, #80]
    38bc:	ldr	x0, [x0, #16]
    38c0:	b	38dc <xs_getaddrinfo+0x1e8>
    38c4:	add	x0, sp, #0x38
    38c8:	mov	w3, #0x0                   	// #0
    38cc:	mov	x2, x0
    38d0:	ldr	x1, [sp, #80]
    38d4:	ldr	x0, [sp, #24]
    38d8:	bl	2f40 <Perl_sv_2pv_flags@plt>
    38dc:	str	x0, [sp, #104]
    38e0:	ldr	x0, [sp, #56]
    38e4:	cmp	x0, #0x0
    38e8:	b.ne	38f0 <xs_getaddrinfo+0x1fc>  // b.any
    38ec:	str	xzr, [sp, #104]
    38f0:	ldr	x0, [sp, #88]
    38f4:	ldr	w0, [x0, #12]
    38f8:	lsr	w0, w0, #21
    38fc:	mov	w0, w0
    3900:	and	x0, x0, #0x1
    3904:	cmp	x0, #0x0
    3908:	b.eq	3920 <xs_getaddrinfo+0x22c>  // b.none
    390c:	ldr	x1, [sp, #88]
    3910:	ldr	x0, [sp, #24]
    3914:	bl	3020 <Perl_mg_get@plt>
    3918:	cmp	w0, #0x0
    391c:	nop
    3920:	ldr	x0, [sp, #88]
    3924:	ldr	w0, [x0, #12]
    3928:	and	w0, w0, #0xff00
    392c:	cmp	w0, #0x0
    3930:	b.eq	3998 <xs_getaddrinfo+0x2a4>  // b.none
    3934:	ldr	x0, [sp, #88]
    3938:	ldr	w1, [x0, #12]
    393c:	mov	w0, #0x400                 	// #1024
    3940:	movk	w0, #0x20, lsl #16
    3944:	and	w0, w1, w0
    3948:	cmp	w0, #0x400
    394c:	b.ne	396c <xs_getaddrinfo+0x278>  // b.any
    3950:	ldr	x0, [sp, #88]
    3954:	ldr	x0, [x0]
    3958:	ldr	x0, [x0, #16]
    395c:	str	x0, [sp, #56]
    3960:	ldr	x0, [sp, #88]
    3964:	ldr	x0, [x0, #16]
    3968:	b	3984 <xs_getaddrinfo+0x290>
    396c:	add	x0, sp, #0x38
    3970:	mov	w3, #0x0                   	// #0
    3974:	mov	x2, x0
    3978:	ldr	x1, [sp, #88]
    397c:	ldr	x0, [sp, #24]
    3980:	bl	2f40 <Perl_sv_2pv_flags@plt>
    3984:	str	x0, [sp, #112]
    3988:	ldr	x0, [sp, #56]
    398c:	cmp	x0, #0x0
    3990:	b.ne	3998 <xs_getaddrinfo+0x2a4>  // b.any
    3994:	str	xzr, [sp, #112]
    3998:	add	x0, sp, #0xb8
    399c:	mov	x2, #0x30                  	// #48
    39a0:	mov	w1, #0x0                   	// #0
    39a4:	bl	2f30 <memset@plt>
    39a8:	str	wzr, [sp, #188]
    39ac:	ldr	x0, [sp, #96]
    39b0:	cmp	x0, #0x0
    39b4:	b.eq	3c80 <xs_getaddrinfo+0x58c>  // b.none
    39b8:	ldr	x0, [sp, #96]
    39bc:	ldr	w0, [x0, #12]
    39c0:	and	w0, w0, #0xff00
    39c4:	cmp	w0, #0x0
    39c8:	b.eq	3c80 <xs_getaddrinfo+0x58c>  // b.none
    39cc:	ldr	x0, [sp, #96]
    39d0:	ldr	w0, [x0, #12]
    39d4:	and	w0, w0, #0x800
    39d8:	cmp	w0, #0x0
    39dc:	b.eq	39f8 <xs_getaddrinfo+0x304>  // b.none
    39e0:	ldr	x0, [sp, #96]
    39e4:	ldr	x0, [x0, #16]
    39e8:	ldr	w0, [x0, #12]
    39ec:	and	w0, w0, #0xff
    39f0:	cmp	w0, #0xc
    39f4:	b.eq	3a04 <xs_getaddrinfo+0x310>  // b.none
    39f8:	adrp	x0, 8000 <boot_Socket+0x4b0>
    39fc:	add	x0, x0, #0x830
    3a00:	bl	2fd0 <Perl_croak_nocontext@plt>
    3a04:	ldr	x0, [sp, #96]
    3a08:	ldr	x0, [x0, #16]
    3a0c:	str	x0, [sp, #136]
    3a10:	mov	w6, #0x0                   	// #0
    3a14:	mov	x5, #0x0                   	// #0
    3a18:	mov	w4, #0x20                  	// #32
    3a1c:	mov	w3, #0x5                   	// #5
    3a20:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3a24:	add	x2, x0, #0x850
    3a28:	ldr	x1, [sp, #136]
    3a2c:	ldr	x0, [sp, #24]
    3a30:	bl	3080 <Perl_hv_common_key_len@plt>
    3a34:	str	x0, [sp, #144]
    3a38:	ldr	x0, [sp, #144]
    3a3c:	cmp	x0, #0x0
    3a40:	b.eq	3aac <xs_getaddrinfo+0x3b8>  // b.none
    3a44:	ldr	x0, [sp, #144]
    3a48:	ldr	x0, [x0]
    3a4c:	ldr	w0, [x0, #12]
    3a50:	and	w0, w0, #0xff00
    3a54:	cmp	w0, #0x0
    3a58:	b.eq	3aac <xs_getaddrinfo+0x3b8>  // b.none
    3a5c:	ldr	x0, [sp, #144]
    3a60:	ldr	x0, [x0]
    3a64:	ldr	w1, [x0, #12]
    3a68:	mov	w0, #0x100                 	// #256
    3a6c:	movk	w0, #0x20, lsl #16
    3a70:	and	w0, w1, w0
    3a74:	cmp	w0, #0x100
    3a78:	b.ne	3a90 <xs_getaddrinfo+0x39c>  // b.any
    3a7c:	ldr	x0, [sp, #144]
    3a80:	ldr	x0, [x0]
    3a84:	ldr	x0, [x0]
    3a88:	ldr	x0, [x0, #32]
    3a8c:	b	3aa8 <xs_getaddrinfo+0x3b4>
    3a90:	ldr	x0, [sp, #144]
    3a94:	ldr	x0, [x0]
    3a98:	mov	w2, #0x2                   	// #2
    3a9c:	mov	x1, x0
    3aa0:	ldr	x0, [sp, #24]
    3aa4:	bl	2e00 <Perl_sv_2iv_flags@plt>
    3aa8:	str	w0, [sp, #184]
    3aac:	mov	w6, #0x0                   	// #0
    3ab0:	mov	x5, #0x0                   	// #0
    3ab4:	mov	w4, #0x20                  	// #32
    3ab8:	mov	w3, #0x6                   	// #6
    3abc:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3ac0:	add	x2, x0, #0x858
    3ac4:	ldr	x1, [sp, #136]
    3ac8:	ldr	x0, [sp, #24]
    3acc:	bl	3080 <Perl_hv_common_key_len@plt>
    3ad0:	str	x0, [sp, #144]
    3ad4:	ldr	x0, [sp, #144]
    3ad8:	cmp	x0, #0x0
    3adc:	b.eq	3b48 <xs_getaddrinfo+0x454>  // b.none
    3ae0:	ldr	x0, [sp, #144]
    3ae4:	ldr	x0, [x0]
    3ae8:	ldr	w0, [x0, #12]
    3aec:	and	w0, w0, #0xff00
    3af0:	cmp	w0, #0x0
    3af4:	b.eq	3b48 <xs_getaddrinfo+0x454>  // b.none
    3af8:	ldr	x0, [sp, #144]
    3afc:	ldr	x0, [x0]
    3b00:	ldr	w1, [x0, #12]
    3b04:	mov	w0, #0x100                 	// #256
    3b08:	movk	w0, #0x20, lsl #16
    3b0c:	and	w0, w1, w0
    3b10:	cmp	w0, #0x100
    3b14:	b.ne	3b2c <xs_getaddrinfo+0x438>  // b.any
    3b18:	ldr	x0, [sp, #144]
    3b1c:	ldr	x0, [x0]
    3b20:	ldr	x0, [x0]
    3b24:	ldr	x0, [x0, #32]
    3b28:	b	3b44 <xs_getaddrinfo+0x450>
    3b2c:	ldr	x0, [sp, #144]
    3b30:	ldr	x0, [x0]
    3b34:	mov	w2, #0x2                   	// #2
    3b38:	mov	x1, x0
    3b3c:	ldr	x0, [sp, #24]
    3b40:	bl	2e00 <Perl_sv_2iv_flags@plt>
    3b44:	str	w0, [sp, #188]
    3b48:	mov	w6, #0x0                   	// #0
    3b4c:	mov	x5, #0x0                   	// #0
    3b50:	mov	w4, #0x20                  	// #32
    3b54:	mov	w3, #0x8                   	// #8
    3b58:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3b5c:	add	x2, x0, #0x860
    3b60:	ldr	x1, [sp, #136]
    3b64:	ldr	x0, [sp, #24]
    3b68:	bl	3080 <Perl_hv_common_key_len@plt>
    3b6c:	str	x0, [sp, #144]
    3b70:	ldr	x0, [sp, #144]
    3b74:	cmp	x0, #0x0
    3b78:	b.eq	3be4 <xs_getaddrinfo+0x4f0>  // b.none
    3b7c:	ldr	x0, [sp, #144]
    3b80:	ldr	x0, [x0]
    3b84:	ldr	w0, [x0, #12]
    3b88:	and	w0, w0, #0xff00
    3b8c:	cmp	w0, #0x0
    3b90:	b.eq	3be4 <xs_getaddrinfo+0x4f0>  // b.none
    3b94:	ldr	x0, [sp, #144]
    3b98:	ldr	x0, [x0]
    3b9c:	ldr	w1, [x0, #12]
    3ba0:	mov	w0, #0x100                 	// #256
    3ba4:	movk	w0, #0x20, lsl #16
    3ba8:	and	w0, w1, w0
    3bac:	cmp	w0, #0x100
    3bb0:	b.ne	3bc8 <xs_getaddrinfo+0x4d4>  // b.any
    3bb4:	ldr	x0, [sp, #144]
    3bb8:	ldr	x0, [x0]
    3bbc:	ldr	x0, [x0]
    3bc0:	ldr	x0, [x0, #32]
    3bc4:	b	3be0 <xs_getaddrinfo+0x4ec>
    3bc8:	ldr	x0, [sp, #144]
    3bcc:	ldr	x0, [x0]
    3bd0:	mov	w2, #0x2                   	// #2
    3bd4:	mov	x1, x0
    3bd8:	ldr	x0, [sp, #24]
    3bdc:	bl	2e00 <Perl_sv_2iv_flags@plt>
    3be0:	str	w0, [sp, #192]
    3be4:	mov	w6, #0x0                   	// #0
    3be8:	mov	x5, #0x0                   	// #0
    3bec:	mov	w4, #0x20                  	// #32
    3bf0:	mov	w3, #0x8                   	// #8
    3bf4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3bf8:	add	x2, x0, #0x870
    3bfc:	ldr	x1, [sp, #136]
    3c00:	ldr	x0, [sp, #24]
    3c04:	bl	3080 <Perl_hv_common_key_len@plt>
    3c08:	str	x0, [sp, #144]
    3c0c:	ldr	x0, [sp, #144]
    3c10:	cmp	x0, #0x0
    3c14:	b.eq	3c80 <xs_getaddrinfo+0x58c>  // b.none
    3c18:	ldr	x0, [sp, #144]
    3c1c:	ldr	x0, [x0]
    3c20:	ldr	w0, [x0, #12]
    3c24:	and	w0, w0, #0xff00
    3c28:	cmp	w0, #0x0
    3c2c:	b.eq	3c80 <xs_getaddrinfo+0x58c>  // b.none
    3c30:	ldr	x0, [sp, #144]
    3c34:	ldr	x0, [x0]
    3c38:	ldr	w1, [x0, #12]
    3c3c:	mov	w0, #0x100                 	// #256
    3c40:	movk	w0, #0x20, lsl #16
    3c44:	and	w0, w1, w0
    3c48:	cmp	w0, #0x100
    3c4c:	b.ne	3c64 <xs_getaddrinfo+0x570>  // b.any
    3c50:	ldr	x0, [sp, #144]
    3c54:	ldr	x0, [x0]
    3c58:	ldr	x0, [x0]
    3c5c:	ldr	x0, [x0, #32]
    3c60:	b	3c7c <xs_getaddrinfo+0x588>
    3c64:	ldr	x0, [sp, #144]
    3c68:	ldr	x0, [x0]
    3c6c:	mov	w2, #0x2                   	// #2
    3c70:	mov	x1, x0
    3c74:	ldr	x0, [sp, #24]
    3c78:	bl	2e00 <Perl_sv_2iv_flags@plt>
    3c7c:	str	w0, [sp, #196]
    3c80:	add	x1, sp, #0x40
    3c84:	add	x0, sp, #0xb8
    3c88:	mov	x3, x1
    3c8c:	mov	x2, x0
    3c90:	ldr	x1, [sp, #112]
    3c94:	ldr	x0, [sp, #104]
    3c98:	bl	3070 <getaddrinfo@plt>
    3c9c:	str	w0, [sp, #52]
    3ca0:	ldr	x0, [sp, #24]
    3ca4:	ldr	x1, [x0, #32]
    3ca8:	ldr	x0, [sp, #72]
    3cac:	sub	x0, x1, x0
    3cb0:	cmp	x0, #0x0
    3cb4:	cset	w0, le
    3cb8:	and	w0, w0, #0xff
    3cbc:	and	x0, x0, #0xff
    3cc0:	cmp	x0, #0x0
    3cc4:	b.eq	3ce0 <xs_getaddrinfo+0x5ec>  // b.none
    3cc8:	mov	x3, #0x1                   	// #1
    3ccc:	ldr	x2, [sp, #72]
    3cd0:	ldr	x1, [sp, #72]
    3cd4:	ldr	x0, [sp, #24]
    3cd8:	bl	2e50 <Perl_stack_grow@plt>
    3cdc:	str	x0, [sp, #72]
    3ce0:	ldr	x0, [sp, #72]
    3ce4:	add	x0, x0, #0x8
    3ce8:	str	x0, [sp, #72]
    3cec:	ldr	w1, [sp, #52]
    3cf0:	ldr	x0, [sp, #24]
    3cf4:	bl	3640 <err_to_SV>
    3cf8:	mov	x1, x0
    3cfc:	ldr	x0, [sp, #72]
    3d00:	str	x1, [x0]
    3d04:	ldr	w0, [sp, #52]
    3d08:	cmp	w0, #0x0
    3d0c:	b.eq	3d44 <xs_getaddrinfo+0x650>  // b.none
    3d10:	mov	x0, #0x1                   	// #1
    3d14:	str	x0, [sp, #176]
    3d18:	ldr	x0, [sp, #24]
    3d1c:	ldr	x1, [x0, #24]
    3d20:	ldrsw	x2, [sp, #44]
    3d24:	ldr	x0, [sp, #176]
    3d28:	add	x0, x2, x0
    3d2c:	lsl	x0, x0, #3
    3d30:	sub	x0, x0, #0x8
    3d34:	add	x1, x1, x0
    3d38:	ldr	x0, [sp, #24]
    3d3c:	str	x1, [x0]
    3d40:	b	3fbc <xs_getaddrinfo+0x8c8>
    3d44:	str	wzr, [sp, #40]
    3d48:	ldr	x0, [sp, #64]
    3d4c:	str	x0, [sp, #120]
    3d50:	b	3f6c <xs_getaddrinfo+0x878>
    3d54:	mov	w1, #0xc                   	// #12
    3d58:	ldr	x0, [sp, #24]
    3d5c:	bl	30a0 <Perl_newSV_type@plt>
    3d60:	str	x0, [sp, #160]
    3d64:	ldr	x0, [sp, #160]
    3d68:	str	x0, [sp, #168]
    3d6c:	ldr	x0, [sp, #120]
    3d70:	ldr	w0, [x0, #4]
    3d74:	sxtw	x0, w0
    3d78:	mov	x1, x0
    3d7c:	ldr	x0, [sp, #24]
    3d80:	bl	30f0 <Perl_newSViv@plt>
    3d84:	mov	w6, #0x0                   	// #0
    3d88:	mov	x5, x0
    3d8c:	mov	w4, #0x24                  	// #36
    3d90:	mov	w3, #0x6                   	// #6
    3d94:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3d98:	add	x2, x0, #0x858
    3d9c:	ldr	x1, [sp, #168]
    3da0:	ldr	x0, [sp, #24]
    3da4:	bl	3080 <Perl_hv_common_key_len@plt>
    3da8:	ldr	x0, [sp, #120]
    3dac:	ldr	w0, [x0, #8]
    3db0:	sxtw	x0, w0
    3db4:	mov	x1, x0
    3db8:	ldr	x0, [sp, #24]
    3dbc:	bl	30f0 <Perl_newSViv@plt>
    3dc0:	mov	w6, #0x0                   	// #0
    3dc4:	mov	x5, x0
    3dc8:	mov	w4, #0x24                  	// #36
    3dcc:	mov	w3, #0x8                   	// #8
    3dd0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3dd4:	add	x2, x0, #0x860
    3dd8:	ldr	x1, [sp, #168]
    3ddc:	ldr	x0, [sp, #24]
    3de0:	bl	3080 <Perl_hv_common_key_len@plt>
    3de4:	ldr	x0, [sp, #120]
    3de8:	ldr	w0, [x0, #12]
    3dec:	sxtw	x0, w0
    3df0:	mov	x1, x0
    3df4:	ldr	x0, [sp, #24]
    3df8:	bl	30f0 <Perl_newSViv@plt>
    3dfc:	mov	w6, #0x0                   	// #0
    3e00:	mov	x5, x0
    3e04:	mov	w4, #0x24                  	// #36
    3e08:	mov	w3, #0x8                   	// #8
    3e0c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3e10:	add	x2, x0, #0x870
    3e14:	ldr	x1, [sp, #168]
    3e18:	ldr	x0, [sp, #24]
    3e1c:	bl	3080 <Perl_hv_common_key_len@plt>
    3e20:	ldr	x0, [sp, #120]
    3e24:	ldr	x1, [x0, #24]
    3e28:	ldr	x0, [sp, #120]
    3e2c:	ldr	w0, [x0, #16]
    3e30:	mov	w0, w0
    3e34:	mov	x2, x0
    3e38:	ldr	x0, [sp, #24]
    3e3c:	bl	3120 <Perl_newSVpvn@plt>
    3e40:	mov	w6, #0x0                   	// #0
    3e44:	mov	x5, x0
    3e48:	mov	w4, #0x24                  	// #36
    3e4c:	mov	w3, #0x4                   	// #4
    3e50:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3e54:	add	x2, x0, #0x880
    3e58:	ldr	x1, [sp, #168]
    3e5c:	ldr	x0, [sp, #24]
    3e60:	bl	3080 <Perl_hv_common_key_len@plt>
    3e64:	ldr	x0, [sp, #120]
    3e68:	ldr	x0, [x0, #32]
    3e6c:	cmp	x0, #0x0
    3e70:	b.eq	3eb4 <xs_getaddrinfo+0x7c0>  // b.none
    3e74:	ldr	x0, [sp, #120]
    3e78:	ldr	x0, [x0, #32]
    3e7c:	mov	x2, #0x0                   	// #0
    3e80:	mov	x1, x0
    3e84:	ldr	x0, [sp, #24]
    3e88:	bl	2fc0 <Perl_newSVpv@plt>
    3e8c:	mov	w6, #0x0                   	// #0
    3e90:	mov	x5, x0
    3e94:	mov	w4, #0x24                  	// #36
    3e98:	mov	w3, #0x9                   	// #9
    3e9c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3ea0:	add	x2, x0, #0x888
    3ea4:	ldr	x1, [sp, #168]
    3ea8:	ldr	x0, [sp, #24]
    3eac:	bl	3080 <Perl_hv_common_key_len@plt>
    3eb0:	b	3ee4 <xs_getaddrinfo+0x7f0>
    3eb4:	mov	x1, #0x0                   	// #0
    3eb8:	ldr	x0, [sp, #24]
    3ebc:	bl	2ed0 <Perl_newSV@plt>
    3ec0:	mov	w6, #0x0                   	// #0
    3ec4:	mov	x5, x0
    3ec8:	mov	w4, #0x24                  	// #36
    3ecc:	mov	w3, #0x9                   	// #9
    3ed0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    3ed4:	add	x2, x0, #0x888
    3ed8:	ldr	x1, [sp, #168]
    3edc:	ldr	x0, [sp, #24]
    3ee0:	bl	3080 <Perl_hv_common_key_len@plt>
    3ee4:	ldr	x0, [sp, #24]
    3ee8:	ldr	x1, [x0, #32]
    3eec:	ldr	x0, [sp, #72]
    3ef0:	sub	x0, x1, x0
    3ef4:	cmp	x0, #0x0
    3ef8:	cset	w0, le
    3efc:	and	w0, w0, #0xff
    3f00:	and	x0, x0, #0xff
    3f04:	cmp	x0, #0x0
    3f08:	b.eq	3f24 <xs_getaddrinfo+0x830>  // b.none
    3f0c:	mov	x3, #0x1                   	// #1
    3f10:	ldr	x2, [sp, #72]
    3f14:	ldr	x1, [sp, #72]
    3f18:	ldr	x0, [sp, #24]
    3f1c:	bl	2e50 <Perl_stack_grow@plt>
    3f20:	str	x0, [sp, #72]
    3f24:	ldr	x1, [sp, #168]
    3f28:	ldr	x0, [sp, #24]
    3f2c:	bl	2e30 <Perl_newRV_noinc@plt>
    3f30:	mov	x1, x0
    3f34:	ldr	x0, [sp, #72]
    3f38:	add	x0, x0, #0x8
    3f3c:	str	x0, [sp, #72]
    3f40:	ldr	x0, [sp, #24]
    3f44:	bl	3010 <Perl_sv_2mortal@plt>
    3f48:	mov	x1, x0
    3f4c:	ldr	x0, [sp, #72]
    3f50:	str	x1, [x0]
    3f54:	ldr	w0, [sp, #40]
    3f58:	add	w0, w0, #0x1
    3f5c:	str	w0, [sp, #40]
    3f60:	ldr	x0, [sp, #120]
    3f64:	ldr	x0, [x0, #40]
    3f68:	str	x0, [sp, #120]
    3f6c:	ldr	x0, [sp, #120]
    3f70:	cmp	x0, #0x0
    3f74:	b.ne	3d54 <xs_getaddrinfo+0x660>  // b.any
    3f78:	ldr	x0, [sp, #64]
    3f7c:	bl	2e10 <freeaddrinfo@plt>
    3f80:	ldr	w0, [sp, #40]
    3f84:	add	w0, w0, #0x1
    3f88:	sxtw	x0, w0
    3f8c:	str	x0, [sp, #152]
    3f90:	ldr	x0, [sp, #24]
    3f94:	ldr	x1, [x0, #24]
    3f98:	ldrsw	x2, [sp, #44]
    3f9c:	ldr	x0, [sp, #152]
    3fa0:	add	x0, x2, x0
    3fa4:	lsl	x0, x0, #3
    3fa8:	sub	x0, x0, #0x8
    3fac:	add	x1, x1, x0
    3fb0:	ldr	x0, [sp, #24]
    3fb4:	str	x1, [x0]
    3fb8:	nop
    3fbc:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    3fc0:	ldr	x0, [x0, #4048]
    3fc4:	ldr	x1, [sp, #232]
    3fc8:	ldr	x0, [x0]
    3fcc:	eor	x0, x1, x0
    3fd0:	cmp	x0, #0x0
    3fd4:	b.eq	3fdc <xs_getaddrinfo+0x8e8>  // b.none
    3fd8:	bl	2f80 <__stack_chk_fail@plt>
    3fdc:	ldp	x29, x30, [sp], #240
    3fe0:	ret

0000000000003fe4 <xs_getnameinfo>:
    3fe4:	sub	sp, sp, #0x580
    3fe8:	stp	x29, x30, [sp]
    3fec:	mov	x29, sp
    3ff0:	str	x0, [sp, #24]
    3ff4:	str	x1, [sp, #16]
    3ff8:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    3ffc:	ldr	x0, [x0, #4048]
    4000:	ldr	x1, [x0]
    4004:	str	x1, [sp, #1400]
    4008:	mov	x1, #0x0                   	// #0
    400c:	ldr	x0, [sp, #24]
    4010:	ldr	x0, [x0]
    4014:	str	x0, [sp, #64]
    4018:	ldr	x0, [sp, #24]
    401c:	bl	3300 <S_POPMARK>
    4020:	str	w0, [sp, #44]
    4024:	ldr	x0, [sp, #24]
    4028:	ldr	x1, [x0, #24]
    402c:	ldr	w0, [sp, #44]
    4030:	add	w2, w0, #0x1
    4034:	str	w2, [sp, #44]
    4038:	sxtw	x0, w0
    403c:	lsl	x0, x0, #3
    4040:	add	x0, x1, x0
    4044:	str	x0, [sp, #72]
    4048:	ldr	x1, [sp, #64]
    404c:	ldr	x0, [sp, #72]
    4050:	sub	x0, x1, x0
    4054:	asr	x0, x0, #3
    4058:	str	w0, [sp, #48]
    405c:	ldr	w0, [sp, #48]
    4060:	cmp	w0, #0x0
    4064:	b.le	4074 <xs_getnameinfo+0x90>
    4068:	ldr	w0, [sp, #48]
    406c:	cmp	w0, #0x3
    4070:	b.le	4080 <xs_getnameinfo+0x9c>
    4074:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4078:	add	x0, x0, #0x898
    407c:	bl	2fd0 <Perl_croak_nocontext@plt>
    4080:	ldrsw	x0, [sp, #48]
    4084:	lsl	x0, x0, #3
    4088:	neg	x0, x0
    408c:	ldr	x1, [sp, #64]
    4090:	add	x0, x1, x0
    4094:	str	x0, [sp, #64]
    4098:	ldr	x0, [sp, #24]
    409c:	ldr	x1, [x0, #24]
    40a0:	ldrsw	x0, [sp, #44]
    40a4:	lsl	x0, x0, #3
    40a8:	add	x0, x1, x0
    40ac:	ldr	x0, [x0]
    40b0:	str	x0, [sp, #80]
    40b4:	ldr	x0, [sp, #80]
    40b8:	ldr	w0, [x0, #12]
    40bc:	lsr	w0, w0, #21
    40c0:	mov	w0, w0
    40c4:	and	x0, x0, #0x1
    40c8:	cmp	x0, #0x0
    40cc:	b.eq	40e4 <xs_getnameinfo+0x100>  // b.none
    40d0:	ldr	x1, [sp, #80]
    40d4:	ldr	x0, [sp, #24]
    40d8:	bl	3020 <Perl_mg_get@plt>
    40dc:	cmp	w0, #0x0
    40e0:	nop
    40e4:	ldr	w0, [sp, #48]
    40e8:	cmp	w0, #0x1
    40ec:	b.gt	40f8 <xs_getnameinfo+0x114>
    40f0:	str	wzr, [sp, #36]
    40f4:	b	4184 <xs_getnameinfo+0x1a0>
    40f8:	ldr	x0, [sp, #24]
    40fc:	ldr	x1, [x0, #24]
    4100:	ldrsw	x0, [sp, #44]
    4104:	add	x0, x0, #0x1
    4108:	lsl	x0, x0, #3
    410c:	add	x0, x1, x0
    4110:	ldr	x0, [x0]
    4114:	ldr	w1, [x0, #12]
    4118:	mov	w0, #0x100                 	// #256
    411c:	movk	w0, #0x20, lsl #16
    4120:	and	w0, w1, w0
    4124:	cmp	w0, #0x100
    4128:	b.ne	4154 <xs_getnameinfo+0x170>  // b.any
    412c:	ldr	x0, [sp, #24]
    4130:	ldr	x1, [x0, #24]
    4134:	ldrsw	x0, [sp, #44]
    4138:	add	x0, x0, #0x1
    413c:	lsl	x0, x0, #3
    4140:	add	x0, x1, x0
    4144:	ldr	x0, [x0]
    4148:	ldr	x0, [x0]
    414c:	ldr	x0, [x0, #32]
    4150:	b	4180 <xs_getnameinfo+0x19c>
    4154:	ldr	x0, [sp, #24]
    4158:	ldr	x1, [x0, #24]
    415c:	ldrsw	x0, [sp, #44]
    4160:	add	x0, x0, #0x1
    4164:	lsl	x0, x0, #3
    4168:	add	x0, x1, x0
    416c:	ldr	x0, [x0]
    4170:	mov	w2, #0x2                   	// #2
    4174:	mov	x1, x0
    4178:	ldr	x0, [sp, #24]
    417c:	bl	2e00 <Perl_sv_2iv_flags@plt>
    4180:	str	w0, [sp, #36]
    4184:	ldr	w0, [sp, #48]
    4188:	cmp	w0, #0x2
    418c:	b.gt	4198 <xs_getnameinfo+0x1b4>
    4190:	str	wzr, [sp, #40]
    4194:	b	4224 <xs_getnameinfo+0x240>
    4198:	ldr	x0, [sp, #24]
    419c:	ldr	x1, [x0, #24]
    41a0:	ldrsw	x0, [sp, #44]
    41a4:	add	x0, x0, #0x2
    41a8:	lsl	x0, x0, #3
    41ac:	add	x0, x1, x0
    41b0:	ldr	x0, [x0]
    41b4:	ldr	w1, [x0, #12]
    41b8:	mov	w0, #0x100                 	// #256
    41bc:	movk	w0, #0x20, lsl #16
    41c0:	and	w0, w1, w0
    41c4:	cmp	w0, #0x100
    41c8:	b.ne	41f4 <xs_getnameinfo+0x210>  // b.any
    41cc:	ldr	x0, [sp, #24]
    41d0:	ldr	x1, [x0, #24]
    41d4:	ldrsw	x0, [sp, #44]
    41d8:	add	x0, x0, #0x2
    41dc:	lsl	x0, x0, #3
    41e0:	add	x0, x1, x0
    41e4:	ldr	x0, [x0]
    41e8:	ldr	x0, [x0]
    41ec:	ldr	x0, [x0, #32]
    41f0:	b	4220 <xs_getnameinfo+0x23c>
    41f4:	ldr	x0, [sp, #24]
    41f8:	ldr	x1, [x0, #24]
    41fc:	ldrsw	x0, [sp, #44]
    4200:	add	x0, x0, #0x2
    4204:	lsl	x0, x0, #3
    4208:	add	x0, x1, x0
    420c:	ldr	x0, [x0]
    4210:	mov	w2, #0x2                   	// #2
    4214:	mov	x1, x0
    4218:	ldr	x0, [sp, #24]
    421c:	bl	2e00 <Perl_sv_2iv_flags@plt>
    4220:	str	w0, [sp, #40]
    4224:	ldr	w0, [sp, #40]
    4228:	and	w0, w0, #0x1
    422c:	cmp	w0, #0x0
    4230:	cset	w0, eq  // eq = none
    4234:	and	w0, w0, #0xff
    4238:	str	w0, [sp, #52]
    423c:	ldr	w0, [sp, #40]
    4240:	and	w0, w0, #0x2
    4244:	cmp	w0, #0x0
    4248:	cset	w0, eq  // eq = none
    424c:	and	w0, w0, #0xff
    4250:	str	w0, [sp, #56]
    4254:	ldr	x0, [sp, #80]
    4258:	ldr	w0, [x0, #12]
    425c:	and	w0, w0, #0x4000
    4260:	cmp	w0, #0x0
    4264:	b.ne	4274 <xs_getnameinfo+0x290>  // b.any
    4268:	adrp	x0, 8000 <boot_Socket+0x4b0>
    426c:	add	x0, x0, #0x8d0
    4270:	bl	2fd0 <Perl_croak_nocontext@plt>
    4274:	ldr	x0, [sp, #80]
    4278:	ldr	x0, [x0]
    427c:	ldr	x0, [x0, #16]
    4280:	str	x0, [sp, #88]
    4284:	ldr	x0, [sp, #88]
    4288:	bl	2f60 <Perl_safesysmalloc@plt>
    428c:	str	x0, [sp, #96]
    4290:	ldr	x0, [sp, #80]
    4294:	ldr	w1, [x0, #12]
    4298:	mov	w0, #0x400                 	// #1024
    429c:	movk	w0, #0x20, lsl #16
    42a0:	and	w0, w1, w0
    42a4:	cmp	w0, #0x400
    42a8:	b.ne	42b8 <xs_getnameinfo+0x2d4>  // b.any
    42ac:	ldr	x0, [sp, #80]
    42b0:	ldr	x0, [x0, #16]
    42b4:	b	42cc <xs_getnameinfo+0x2e8>
    42b8:	mov	w3, #0x2                   	// #2
    42bc:	mov	x2, #0x0                   	// #0
    42c0:	ldr	x1, [sp, #80]
    42c4:	ldr	x0, [sp, #24]
    42c8:	bl	2f40 <Perl_sv_2pv_flags@plt>
    42cc:	ldr	x2, [sp, #88]
    42d0:	mov	x1, x0
    42d4:	ldr	x0, [sp, #96]
    42d8:	bl	2de0 <memcpy@plt>
    42dc:	ldr	x0, [sp, #88]
    42e0:	mov	w7, w0
    42e4:	ldr	w0, [sp, #52]
    42e8:	cmp	w0, #0x0
    42ec:	b.eq	42f8 <xs_getnameinfo+0x314>  // b.none
    42f0:	add	x0, sp, #0x178
    42f4:	b	42fc <xs_getnameinfo+0x318>
    42f8:	mov	x0, #0x0                   	// #0
    42fc:	ldr	w1, [sp, #52]
    4300:	cmp	w1, #0x0
    4304:	b.eq	4310 <xs_getnameinfo+0x32c>  // b.none
    4308:	mov	w1, #0x400                 	// #1024
    430c:	b	4314 <xs_getnameinfo+0x330>
    4310:	mov	w1, #0x0                   	// #0
    4314:	ldr	w2, [sp, #56]
    4318:	cmp	w2, #0x0
    431c:	b.eq	4328 <xs_getnameinfo+0x344>  // b.none
    4320:	add	x2, sp, #0x78
    4324:	b	432c <xs_getnameinfo+0x348>
    4328:	mov	x2, #0x0                   	// #0
    432c:	ldr	w3, [sp, #56]
    4330:	cmp	w3, #0x0
    4334:	b.eq	4340 <xs_getnameinfo+0x35c>  // b.none
    4338:	mov	w3, #0x100                 	// #256
    433c:	b	4344 <xs_getnameinfo+0x360>
    4340:	mov	w3, #0x0                   	// #0
    4344:	ldr	w6, [sp, #36]
    4348:	mov	w5, w3
    434c:	mov	x4, x2
    4350:	mov	w3, w1
    4354:	mov	x2, x0
    4358:	mov	w1, w7
    435c:	ldr	x0, [sp, #96]
    4360:	bl	2e70 <getnameinfo@plt>
    4364:	str	w0, [sp, #60]
    4368:	ldr	x0, [sp, #96]
    436c:	bl	3040 <Perl_safesysfree@plt>
    4370:	ldr	x0, [sp, #24]
    4374:	ldr	x1, [x0, #32]
    4378:	ldr	x0, [sp, #64]
    437c:	sub	x0, x1, x0
    4380:	cmp	x0, #0x0
    4384:	cset	w0, le
    4388:	and	w0, w0, #0xff
    438c:	and	x0, x0, #0xff
    4390:	cmp	x0, #0x0
    4394:	b.eq	43b0 <xs_getnameinfo+0x3cc>  // b.none
    4398:	mov	x3, #0x1                   	// #1
    439c:	ldr	x2, [sp, #64]
    43a0:	ldr	x1, [sp, #64]
    43a4:	ldr	x0, [sp, #24]
    43a8:	bl	2e50 <Perl_stack_grow@plt>
    43ac:	str	x0, [sp, #64]
    43b0:	ldr	x0, [sp, #64]
    43b4:	add	x0, x0, #0x8
    43b8:	str	x0, [sp, #64]
    43bc:	ldr	w1, [sp, #60]
    43c0:	ldr	x0, [sp, #24]
    43c4:	bl	3640 <err_to_SV>
    43c8:	mov	x1, x0
    43cc:	ldr	x0, [sp, #64]
    43d0:	str	x1, [x0]
    43d4:	ldr	w0, [sp, #60]
    43d8:	cmp	w0, #0x0
    43dc:	b.eq	4414 <xs_getnameinfo+0x430>  // b.none
    43e0:	mov	x0, #0x1                   	// #1
    43e4:	str	x0, [sp, #112]
    43e8:	ldr	x0, [sp, #24]
    43ec:	ldr	x1, [x0, #24]
    43f0:	ldrsw	x2, [sp, #44]
    43f4:	ldr	x0, [sp, #112]
    43f8:	add	x0, x2, x0
    43fc:	lsl	x0, x0, #3
    4400:	sub	x0, x0, #0x8
    4404:	add	x1, x1, x0
    4408:	ldr	x0, [sp, #24]
    440c:	str	x1, [x0]
    4410:	b	4560 <xs_getnameinfo+0x57c>
    4414:	ldr	x0, [sp, #24]
    4418:	ldr	x1, [x0, #32]
    441c:	ldr	x0, [sp, #64]
    4420:	sub	x0, x1, x0
    4424:	cmp	x0, #0x0
    4428:	cset	w0, le
    442c:	and	w0, w0, #0xff
    4430:	and	x0, x0, #0xff
    4434:	cmp	x0, #0x0
    4438:	b.eq	4454 <xs_getnameinfo+0x470>  // b.none
    443c:	mov	x3, #0x1                   	// #1
    4440:	ldr	x2, [sp, #64]
    4444:	ldr	x1, [sp, #64]
    4448:	ldr	x0, [sp, #24]
    444c:	bl	2e50 <Perl_stack_grow@plt>
    4450:	str	x0, [sp, #64]
    4454:	ldr	w0, [sp, #52]
    4458:	cmp	w0, #0x0
    445c:	b.eq	4484 <xs_getnameinfo+0x4a0>  // b.none
    4460:	add	x0, sp, #0x178
    4464:	mov	x2, #0x0                   	// #0
    4468:	mov	x1, x0
    446c:	ldr	x0, [sp, #24]
    4470:	bl	2fc0 <Perl_newSVpv@plt>
    4474:	mov	x1, x0
    4478:	ldr	x0, [sp, #24]
    447c:	bl	3010 <Perl_sv_2mortal@plt>
    4480:	b	448c <xs_getnameinfo+0x4a8>
    4484:	ldr	x0, [sp, #24]
    4488:	add	x0, x0, #0x150
    448c:	ldr	x1, [sp, #64]
    4490:	add	x1, x1, #0x8
    4494:	str	x1, [sp, #64]
    4498:	ldr	x1, [sp, #64]
    449c:	str	x0, [x1]
    44a0:	ldr	x0, [sp, #24]
    44a4:	ldr	x1, [x0, #32]
    44a8:	ldr	x0, [sp, #64]
    44ac:	sub	x0, x1, x0
    44b0:	cmp	x0, #0x0
    44b4:	cset	w0, le
    44b8:	and	w0, w0, #0xff
    44bc:	and	x0, x0, #0xff
    44c0:	cmp	x0, #0x0
    44c4:	b.eq	44e0 <xs_getnameinfo+0x4fc>  // b.none
    44c8:	mov	x3, #0x1                   	// #1
    44cc:	ldr	x2, [sp, #64]
    44d0:	ldr	x1, [sp, #64]
    44d4:	ldr	x0, [sp, #24]
    44d8:	bl	2e50 <Perl_stack_grow@plt>
    44dc:	str	x0, [sp, #64]
    44e0:	ldr	w0, [sp, #56]
    44e4:	cmp	w0, #0x0
    44e8:	b.eq	4510 <xs_getnameinfo+0x52c>  // b.none
    44ec:	add	x0, sp, #0x78
    44f0:	mov	x2, #0x0                   	// #0
    44f4:	mov	x1, x0
    44f8:	ldr	x0, [sp, #24]
    44fc:	bl	2fc0 <Perl_newSVpv@plt>
    4500:	mov	x1, x0
    4504:	ldr	x0, [sp, #24]
    4508:	bl	3010 <Perl_sv_2mortal@plt>
    450c:	b	4518 <xs_getnameinfo+0x534>
    4510:	ldr	x0, [sp, #24]
    4514:	add	x0, x0, #0x150
    4518:	ldr	x1, [sp, #64]
    451c:	add	x1, x1, #0x8
    4520:	str	x1, [sp, #64]
    4524:	ldr	x1, [sp, #64]
    4528:	str	x0, [x1]
    452c:	mov	x0, #0x3                   	// #3
    4530:	str	x0, [sp, #104]
    4534:	ldr	x0, [sp, #24]
    4538:	ldr	x1, [x0, #24]
    453c:	ldrsw	x2, [sp, #44]
    4540:	ldr	x0, [sp, #104]
    4544:	add	x0, x2, x0
    4548:	lsl	x0, x0, #3
    454c:	sub	x0, x0, #0x8
    4550:	add	x1, x1, x0
    4554:	ldr	x0, [sp, #24]
    4558:	str	x1, [x0]
    455c:	nop
    4560:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    4564:	ldr	x0, [x0, #4048]
    4568:	ldr	x1, [sp, #1400]
    456c:	ldr	x0, [x0]
    4570:	eor	x0, x1, x0
    4574:	cmp	x0, #0x0
    4578:	b.eq	4580 <xs_getnameinfo+0x59c>  // b.none
    457c:	bl	2f80 <__stack_chk_fail@plt>
    4580:	ldp	x29, x30, [sp]
    4584:	add	sp, sp, #0x580
    4588:	ret

000000000000458c <XS_Socket_AUTOLOAD>:
    458c:	sub	sp, sp, #0x60
    4590:	stp	x29, x30, [sp, #16]
    4594:	add	x29, sp, #0x10
    4598:	str	x0, [sp, #40]
    459c:	str	x1, [sp, #32]
    45a0:	ldr	x0, [sp, #40]
    45a4:	ldr	x0, [x0]
    45a8:	str	x0, [sp, #64]
    45ac:	ldr	x0, [sp, #40]
    45b0:	bl	3300 <S_POPMARK>
    45b4:	str	w0, [sp, #48]
    45b8:	ldr	x0, [sp, #40]
    45bc:	ldr	x1, [x0, #24]
    45c0:	ldr	w0, [sp, #48]
    45c4:	add	w2, w0, #0x1
    45c8:	str	w2, [sp, #48]
    45cc:	sxtw	x0, w0
    45d0:	lsl	x0, x0, #3
    45d4:	add	x0, x1, x0
    45d8:	str	x0, [sp, #72]
    45dc:	ldr	x1, [sp, #64]
    45e0:	ldr	x0, [sp, #72]
    45e4:	sub	x0, x1, x0
    45e8:	asr	x0, x0, #3
    45ec:	str	w0, [sp, #52]
    45f0:	ldr	w0, [sp, #52]
    45f4:	cmp	w0, #0x0
    45f8:	b.eq	460c <XS_Socket_AUTOLOAD+0x80>  // b.none
    45fc:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4600:	add	x1, x0, #0x7f0
    4604:	ldr	x0, [sp, #32]
    4608:	bl	2fa0 <Perl_croak_xs_usage@plt>
    460c:	ldrsw	x0, [sp, #52]
    4610:	lsl	x0, x0, #3
    4614:	neg	x0, x0
    4618:	ldr	x1, [sp, #64]
    461c:	add	x0, x1, x0
    4620:	str	x0, [sp, #64]
    4624:	ldr	x0, [sp, #32]
    4628:	ldr	x1, [x0, #16]
    462c:	ldr	x0, [sp, #32]
    4630:	ldr	x0, [x0]
    4634:	ldr	x2, [x0, #16]
    4638:	ldr	x0, [sp, #32]
    463c:	ldr	w0, [x0, #12]
    4640:	and	w0, w0, #0x20000000
    4644:	orr	w0, w0, #0x80000
    4648:	mov	w3, w0
    464c:	ldr	x0, [sp, #40]
    4650:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    4654:	str	x0, [sp, #56]
    4658:	ldr	x0, [sp, #40]
    465c:	ldr	x0, [x0, #224]
    4660:	str	x0, [sp, #80]
    4664:	ldr	x0, [sp, #40]
    4668:	bl	3538 <get_missing_hash>
    466c:	str	x0, [sp, #88]
    4670:	str	wzr, [sp]
    4674:	mov	x7, #0x0                   	// #0
    4678:	mov	w6, #0x8                   	// #8
    467c:	mov	w5, #0x0                   	// #0
    4680:	mov	x4, #0x0                   	// #0
    4684:	mov	x3, #0x0                   	// #0
    4688:	ldr	x2, [sp, #56]
    468c:	ldr	x1, [sp, #88]
    4690:	ldr	x0, [sp, #40]
    4694:	bl	3030 <Perl_hv_common@plt>
    4698:	cmp	x0, #0x0
    469c:	b.eq	46d4 <XS_Socket_AUTOLOAD+0x148>  // b.none
    46a0:	ldr	x0, [sp, #80]
    46a4:	ldr	x1, [x0, #48]
    46a8:	ldr	x0, [sp, #80]
    46ac:	ldr	w0, [x0, #36]
    46b0:	mov	w0, w0
    46b4:	mov	x3, x0
    46b8:	mov	x2, x1
    46bc:	ldr	x1, [sp, #56]
    46c0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    46c4:	add	x0, x0, #0x8e8
    46c8:	bl	30d0 <Perl_newSVpvf_nocontext@plt>
    46cc:	str	x0, [sp, #56]
    46d0:	b	4704 <XS_Socket_AUTOLOAD+0x178>
    46d4:	ldr	x0, [sp, #80]
    46d8:	ldr	x1, [x0, #48]
    46dc:	ldr	x0, [sp, #80]
    46e0:	ldr	w0, [x0, #36]
    46e4:	mov	w0, w0
    46e8:	mov	x3, x0
    46ec:	mov	x2, x1
    46f0:	ldr	x1, [sp, #56]
    46f4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    46f8:	add	x0, x0, #0x930
    46fc:	bl	30d0 <Perl_newSVpvf_nocontext@plt>
    4700:	str	x0, [sp, #56]
    4704:	ldr	x1, [sp, #56]
    4708:	ldr	x0, [sp, #40]
    470c:	bl	3010 <Perl_sv_2mortal@plt>
    4710:	mov	x1, x0
    4714:	ldr	x0, [sp, #40]
    4718:	bl	3050 <Perl_croak_sv@plt>

000000000000471c <XS_Socket_inet_aton>:
    471c:	stp	x29, x30, [sp, #-128]!
    4720:	mov	x29, sp
    4724:	str	x19, [sp, #16]
    4728:	str	x0, [sp, #40]
    472c:	str	x1, [sp, #32]
    4730:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    4734:	ldr	x0, [x0, #4048]
    4738:	ldr	x1, [x0]
    473c:	str	x1, [sp, #120]
    4740:	mov	x1, #0x0                   	// #0
    4744:	ldr	x0, [sp, #40]
    4748:	ldr	x0, [x0]
    474c:	str	x0, [sp, #64]
    4750:	ldr	x0, [sp, #40]
    4754:	bl	3300 <S_POPMARK>
    4758:	str	w0, [sp, #56]
    475c:	ldr	x0, [sp, #40]
    4760:	ldr	x1, [x0, #24]
    4764:	ldr	w0, [sp, #56]
    4768:	add	w2, w0, #0x1
    476c:	str	w2, [sp, #56]
    4770:	sxtw	x0, w0
    4774:	lsl	x0, x0, #3
    4778:	add	x0, x1, x0
    477c:	str	x0, [sp, #72]
    4780:	ldr	x1, [sp, #64]
    4784:	ldr	x0, [sp, #72]
    4788:	sub	x0, x1, x0
    478c:	asr	x0, x0, #3
    4790:	str	w0, [sp, #60]
    4794:	ldr	w0, [sp, #60]
    4798:	cmp	w0, #0x1
    479c:	b.eq	47b0 <XS_Socket_inet_aton+0x94>  // b.none
    47a0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    47a4:	add	x1, x0, #0x960
    47a8:	ldr	x0, [sp, #32]
    47ac:	bl	2fa0 <Perl_croak_xs_usage@plt>
    47b0:	ldr	x0, [sp, #40]
    47b4:	ldr	x1, [x0, #24]
    47b8:	ldrsw	x0, [sp, #56]
    47bc:	lsl	x0, x0, #3
    47c0:	add	x0, x1, x0
    47c4:	ldr	x0, [x0]
    47c8:	ldr	w1, [x0, #12]
    47cc:	mov	w0, #0x400                 	// #1024
    47d0:	movk	w0, #0x20, lsl #16
    47d4:	and	w0, w1, w0
    47d8:	cmp	w0, #0x400
    47dc:	b.ne	4800 <XS_Socket_inet_aton+0xe4>  // b.any
    47e0:	ldr	x0, [sp, #40]
    47e4:	ldr	x1, [x0, #24]
    47e8:	ldrsw	x0, [sp, #56]
    47ec:	lsl	x0, x0, #3
    47f0:	add	x0, x1, x0
    47f4:	ldr	x0, [x0]
    47f8:	ldr	x0, [x0, #16]
    47fc:	b	482c <XS_Socket_inet_aton+0x110>
    4800:	ldr	x0, [sp, #40]
    4804:	ldr	x1, [x0, #24]
    4808:	ldrsw	x0, [sp, #56]
    480c:	lsl	x0, x0, #3
    4810:	add	x0, x1, x0
    4814:	ldr	x0, [x0]
    4818:	mov	w3, #0x2                   	// #2
    481c:	mov	x2, #0x0                   	// #0
    4820:	mov	x1, x0
    4824:	ldr	x0, [sp, #40]
    4828:	bl	2f40 <Perl_sv_2pv_flags@plt>
    482c:	str	x0, [sp, #80]
    4830:	ldr	x0, [sp, #80]
    4834:	ldrb	w0, [x0]
    4838:	cmp	w0, #0x0
    483c:	b.eq	48c8 <XS_Socket_inet_aton+0x1ac>  // b.none
    4840:	add	x0, sp, #0x30
    4844:	mov	x1, x0
    4848:	ldr	x0, [sp, #80]
    484c:	bl	30b0 <inet_aton@plt>
    4850:	cmp	w0, #0x0
    4854:	b.eq	48c8 <XS_Socket_inet_aton+0x1ac>  // b.none
    4858:	add	x0, sp, #0x30
    485c:	mov	x2, #0x4                   	// #4
    4860:	mov	x1, x0
    4864:	ldr	x0, [sp, #40]
    4868:	bl	3120 <Perl_newSVpvn@plt>
    486c:	mov	x2, x0
    4870:	ldr	x0, [sp, #40]
    4874:	ldr	x1, [x0, #24]
    4878:	ldrsw	x0, [sp, #56]
    487c:	lsl	x0, x0, #3
    4880:	add	x19, x1, x0
    4884:	mov	x1, x2
    4888:	ldr	x0, [sp, #40]
    488c:	bl	3010 <Perl_sv_2mortal@plt>
    4890:	str	x0, [x19]
    4894:	mov	x0, #0x1                   	// #1
    4898:	str	x0, [sp, #88]
    489c:	ldr	x0, [sp, #40]
    48a0:	ldr	x1, [x0, #24]
    48a4:	ldrsw	x2, [sp, #56]
    48a8:	ldr	x0, [sp, #88]
    48ac:	add	x0, x2, x0
    48b0:	lsl	x0, x0, #3
    48b4:	sub	x0, x0, #0x8
    48b8:	add	x1, x1, x0
    48bc:	ldr	x0, [sp, #40]
    48c0:	str	x1, [x0]
    48c4:	b	49d4 <XS_Socket_inet_aton+0x2b8>
    48c8:	ldr	x0, [sp, #80]
    48cc:	bl	3150 <gethostbyname@plt>
    48d0:	str	x0, [sp, #96]
    48d4:	ldr	x0, [sp, #96]
    48d8:	cmp	x0, #0x0
    48dc:	b.eq	4980 <XS_Socket_inet_aton+0x264>  // b.none
    48e0:	ldr	x0, [sp, #96]
    48e4:	ldr	w0, [x0, #16]
    48e8:	cmp	w0, #0x2
    48ec:	b.ne	4980 <XS_Socket_inet_aton+0x264>  // b.any
    48f0:	ldr	x0, [sp, #96]
    48f4:	ldr	w0, [x0, #20]
    48f8:	cmp	w0, #0x4
    48fc:	b.ne	4980 <XS_Socket_inet_aton+0x264>  // b.any
    4900:	ldr	x0, [sp, #96]
    4904:	ldr	x0, [x0, #24]
    4908:	ldr	x1, [x0]
    490c:	ldr	x0, [sp, #96]
    4910:	ldr	w0, [x0, #20]
    4914:	sxtw	x0, w0
    4918:	mov	x2, x0
    491c:	ldr	x0, [sp, #40]
    4920:	bl	3120 <Perl_newSVpvn@plt>
    4924:	mov	x2, x0
    4928:	ldr	x0, [sp, #40]
    492c:	ldr	x1, [x0, #24]
    4930:	ldrsw	x0, [sp, #56]
    4934:	lsl	x0, x0, #3
    4938:	add	x19, x1, x0
    493c:	mov	x1, x2
    4940:	ldr	x0, [sp, #40]
    4944:	bl	3010 <Perl_sv_2mortal@plt>
    4948:	str	x0, [x19]
    494c:	mov	x0, #0x1                   	// #1
    4950:	str	x0, [sp, #104]
    4954:	ldr	x0, [sp, #40]
    4958:	ldr	x1, [x0, #24]
    495c:	ldrsw	x2, [sp, #56]
    4960:	ldr	x0, [sp, #104]
    4964:	add	x0, x2, x0
    4968:	lsl	x0, x0, #3
    496c:	sub	x0, x0, #0x8
    4970:	add	x1, x1, x0
    4974:	ldr	x0, [sp, #40]
    4978:	str	x1, [x0]
    497c:	b	49d4 <XS_Socket_inet_aton+0x2b8>
    4980:	ldr	x0, [sp, #40]
    4984:	ldr	x1, [x0, #24]
    4988:	ldrsw	x0, [sp, #56]
    498c:	lsl	x0, x0, #3
    4990:	add	x0, x1, x0
    4994:	ldr	x1, [sp, #40]
    4998:	add	x1, x1, #0x150
    499c:	str	x1, [x0]
    49a0:	mov	x0, #0x1                   	// #1
    49a4:	str	x0, [sp, #112]
    49a8:	ldr	x0, [sp, #40]
    49ac:	ldr	x1, [x0, #24]
    49b0:	ldrsw	x2, [sp, #56]
    49b4:	ldr	x0, [sp, #112]
    49b8:	add	x0, x2, x0
    49bc:	lsl	x0, x0, #3
    49c0:	sub	x0, x0, #0x8
    49c4:	add	x1, x1, x0
    49c8:	ldr	x0, [sp, #40]
    49cc:	str	x1, [x0]
    49d0:	nop
    49d4:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    49d8:	ldr	x0, [x0, #4048]
    49dc:	ldr	x1, [sp, #120]
    49e0:	ldr	x0, [x0]
    49e4:	eor	x0, x1, x0
    49e8:	cmp	x0, #0x0
    49ec:	b.eq	49f4 <XS_Socket_inet_aton+0x2d8>  // b.none
    49f0:	bl	2f80 <__stack_chk_fail@plt>
    49f4:	ldr	x19, [sp, #16]
    49f8:	ldp	x29, x30, [sp], #128
    49fc:	ret

0000000000004a00 <XS_Socket_inet_ntoa>:
    4a00:	stp	x29, x30, [sp, #-128]!
    4a04:	mov	x29, sp
    4a08:	str	x19, [sp, #16]
    4a0c:	str	x0, [sp, #40]
    4a10:	str	x1, [sp, #32]
    4a14:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    4a18:	ldr	x0, [x0, #4048]
    4a1c:	ldr	x1, [x0]
    4a20:	str	x1, [sp, #120]
    4a24:	mov	x1, #0x0                   	// #0
    4a28:	ldr	x0, [sp, #40]
    4a2c:	ldr	x0, [x0]
    4a30:	str	x0, [sp, #80]
    4a34:	ldr	x0, [sp, #40]
    4a38:	bl	3300 <S_POPMARK>
    4a3c:	str	w0, [sp, #64]
    4a40:	ldr	x0, [sp, #40]
    4a44:	ldr	x1, [x0, #24]
    4a48:	ldr	w0, [sp, #64]
    4a4c:	add	w2, w0, #0x1
    4a50:	str	w2, [sp, #64]
    4a54:	sxtw	x0, w0
    4a58:	lsl	x0, x0, #3
    4a5c:	add	x0, x1, x0
    4a60:	str	x0, [sp, #88]
    4a64:	ldr	x1, [sp, #80]
    4a68:	ldr	x0, [sp, #88]
    4a6c:	sub	x0, x1, x0
    4a70:	asr	x0, x0, #3
    4a74:	str	w0, [sp, #68]
    4a78:	ldr	w0, [sp, #68]
    4a7c:	cmp	w0, #0x1
    4a80:	b.eq	4a94 <XS_Socket_inet_ntoa+0x94>  // b.none
    4a84:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4a88:	add	x1, x0, #0x968
    4a8c:	ldr	x0, [sp, #32]
    4a90:	bl	2fa0 <Perl_croak_xs_usage@plt>
    4a94:	ldr	x0, [sp, #40]
    4a98:	ldr	x1, [x0, #24]
    4a9c:	ldrsw	x0, [sp, #64]
    4aa0:	lsl	x0, x0, #3
    4aa4:	add	x0, x1, x0
    4aa8:	ldr	x0, [x0]
    4aac:	str	x0, [sp, #96]
    4ab0:	ldr	x0, [sp, #96]
    4ab4:	ldr	w0, [x0, #12]
    4ab8:	and	w0, w0, #0x20000000
    4abc:	cmp	w0, #0x0
    4ac0:	b.eq	4b1c <XS_Socket_inet_ntoa+0x11c>  // b.none
    4ac4:	ldr	x0, [sp, #40]
    4ac8:	ldr	x0, [x0, #224]
    4acc:	ldr	w0, [x0, #56]
    4ad0:	lsr	w0, w0, #3
    4ad4:	mov	w0, w0
    4ad8:	and	x0, x0, #0x1
    4adc:	cmp	x0, #0x0
    4ae0:	b.ne	4b1c <XS_Socket_inet_ntoa+0x11c>  // b.any
    4ae4:	mov	w2, #0x1                   	// #1
    4ae8:	ldr	x1, [sp, #96]
    4aec:	ldr	x0, [sp, #40]
    4af0:	bl	2e90 <Perl_sv_utf8_downgrade@plt>
    4af4:	and	w0, w0, #0xff
    4af8:	eor	w0, w0, #0x1
    4afc:	and	w0, w0, #0xff
    4b00:	cmp	w0, #0x0
    4b04:	b.eq	4b1c <XS_Socket_inet_ntoa+0x11c>  // b.none
    4b08:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4b0c:	add	x1, x0, #0x978
    4b10:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4b14:	add	x0, x0, #0x990
    4b18:	bl	2fd0 <Perl_croak_nocontext@plt>
    4b1c:	ldr	x0, [sp, #96]
    4b20:	ldr	w1, [x0, #12]
    4b24:	mov	w0, #0x400                 	// #1024
    4b28:	movk	w0, #0x2020, lsl #16
    4b2c:	and	w0, w1, w0
    4b30:	cmp	w0, #0x400
    4b34:	b.ne	4b54 <XS_Socket_inet_ntoa+0x154>  // b.any
    4b38:	ldr	x0, [sp, #96]
    4b3c:	ldr	x0, [x0]
    4b40:	ldr	x0, [x0, #16]
    4b44:	str	x0, [sp, #72]
    4b48:	ldr	x0, [sp, #96]
    4b4c:	ldr	x0, [x0, #16]
    4b50:	b	4b68 <XS_Socket_inet_ntoa+0x168>
    4b54:	add	x0, sp, #0x48
    4b58:	mov	x2, x0
    4b5c:	ldr	x1, [sp, #96]
    4b60:	ldr	x0, [sp, #40]
    4b64:	bl	2f20 <Perl_sv_2pvbyte@plt>
    4b68:	str	x0, [sp, #104]
    4b6c:	ldr	x0, [sp, #72]
    4b70:	cmp	x0, #0x4
    4b74:	b.eq	4b84 <XS_Socket_inet_ntoa+0x184>  // b.none
    4b78:	ldr	x0, [sp, #72]
    4b7c:	cmp	x0, #0x4
    4b80:	b.ne	4c94 <XS_Socket_inet_ntoa+0x294>  // b.any
    4b84:	ldr	x0, [sp, #104]
    4b88:	ldrb	w0, [x0]
    4b8c:	lsl	w1, w0, #24
    4b90:	ldr	x0, [sp, #104]
    4b94:	add	x0, x0, #0x1
    4b98:	ldrb	w0, [x0]
    4b9c:	lsl	w0, w0, #16
    4ba0:	orr	w1, w1, w0
    4ba4:	ldr	x0, [sp, #104]
    4ba8:	add	x0, x0, #0x2
    4bac:	ldrb	w0, [x0]
    4bb0:	lsl	w0, w0, #8
    4bb4:	orr	w0, w1, w0
    4bb8:	ldr	x1, [sp, #104]
    4bbc:	add	x1, x1, #0x3
    4bc0:	ldrb	w1, [x1]
    4bc4:	orr	w0, w0, w1
    4bc8:	str	w0, [sp, #56]
    4bcc:	ldr	w0, [sp, #56]
    4bd0:	lsr	w0, w0, #24
    4bd4:	mov	w6, w0
    4bd8:	ldr	w0, [sp, #56]
    4bdc:	lsr	w0, w0, #16
    4be0:	and	w1, w0, #0xff
    4be4:	ldr	w0, [sp, #56]
    4be8:	lsr	w0, w0, #8
    4bec:	and	w0, w0, #0xff
    4bf0:	ldr	w2, [sp, #56]
    4bf4:	and	w2, w2, #0xff
    4bf8:	mov	w5, w2
    4bfc:	mov	w4, w0
    4c00:	mov	w3, w1
    4c04:	mov	w2, w6
    4c08:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4c0c:	add	x1, x0, #0x9a8
    4c10:	ldr	x0, [sp, #40]
    4c14:	bl	3110 <Perl_newSVpvf@plt>
    4c18:	mov	x2, x0
    4c1c:	ldr	x0, [sp, #40]
    4c20:	ldr	x1, [x0, #24]
    4c24:	ldrsw	x0, [sp, #64]
    4c28:	lsl	x0, x0, #3
    4c2c:	add	x19, x1, x0
    4c30:	mov	x1, x2
    4c34:	ldr	x0, [sp, #40]
    4c38:	bl	3010 <Perl_sv_2mortal@plt>
    4c3c:	str	x0, [x19]
    4c40:	mov	x0, #0x1                   	// #1
    4c44:	str	x0, [sp, #112]
    4c48:	ldr	x0, [sp, #40]
    4c4c:	ldr	x1, [x0, #24]
    4c50:	ldrsw	x2, [sp, #64]
    4c54:	ldr	x0, [sp, #112]
    4c58:	add	x0, x2, x0
    4c5c:	lsl	x0, x0, #3
    4c60:	sub	x0, x0, #0x8
    4c64:	add	x1, x1, x0
    4c68:	ldr	x0, [sp, #40]
    4c6c:	str	x1, [x0]
    4c70:	nop
    4c74:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    4c78:	ldr	x0, [x0, #4048]
    4c7c:	ldr	x1, [sp, #120]
    4c80:	ldr	x0, [x0]
    4c84:	eor	x0, x1, x0
    4c88:	cmp	x0, #0x0
    4c8c:	b.eq	4cb8 <XS_Socket_inet_ntoa+0x2b8>  // b.none
    4c90:	b	4cb4 <XS_Socket_inet_ntoa+0x2b4>
    4c94:	ldr	x0, [sp, #72]
    4c98:	mov	x3, #0x4                   	// #4
    4c9c:	mov	x2, x0
    4ca0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4ca4:	add	x1, x0, #0x978
    4ca8:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4cac:	add	x0, x0, #0x9b8
    4cb0:	bl	2fd0 <Perl_croak_nocontext@plt>
    4cb4:	bl	2f80 <__stack_chk_fail@plt>
    4cb8:	ldr	x19, [sp, #16]
    4cbc:	ldp	x29, x30, [sp], #128
    4cc0:	ret

0000000000004cc4 <XS_Socket_sockaddr_family>:
    4cc4:	stp	x29, x30, [sp, #-112]!
    4cc8:	mov	x29, sp
    4ccc:	str	x19, [sp, #16]
    4cd0:	str	x0, [sp, #40]
    4cd4:	str	x1, [sp, #32]
    4cd8:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    4cdc:	ldr	x0, [x0, #4048]
    4ce0:	ldr	x1, [x0]
    4ce4:	str	x1, [sp, #104]
    4ce8:	mov	x1, #0x0                   	// #0
    4cec:	ldr	x0, [sp, #40]
    4cf0:	ldr	x0, [x0]
    4cf4:	str	x0, [sp, #64]
    4cf8:	ldr	x0, [sp, #40]
    4cfc:	bl	3300 <S_POPMARK>
    4d00:	str	w0, [sp, #48]
    4d04:	ldr	x0, [sp, #40]
    4d08:	ldr	x1, [x0, #24]
    4d0c:	ldr	w0, [sp, #48]
    4d10:	add	w2, w0, #0x1
    4d14:	str	w2, [sp, #48]
    4d18:	sxtw	x0, w0
    4d1c:	lsl	x0, x0, #3
    4d20:	add	x0, x1, x0
    4d24:	str	x0, [sp, #72]
    4d28:	ldr	x1, [sp, #64]
    4d2c:	ldr	x0, [sp, #72]
    4d30:	sub	x0, x1, x0
    4d34:	asr	x0, x0, #3
    4d38:	str	w0, [sp, #52]
    4d3c:	ldr	w0, [sp, #52]
    4d40:	cmp	w0, #0x1
    4d44:	b.eq	4d58 <XS_Socket_sockaddr_family+0x94>  // b.none
    4d48:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4d4c:	add	x1, x0, #0x9f0
    4d50:	ldr	x0, [sp, #32]
    4d54:	bl	2fa0 <Perl_croak_xs_usage@plt>
    4d58:	ldr	x0, [sp, #40]
    4d5c:	ldr	x1, [x0, #24]
    4d60:	ldrsw	x0, [sp, #48]
    4d64:	lsl	x0, x0, #3
    4d68:	add	x0, x1, x0
    4d6c:	ldr	x0, [x0]
    4d70:	str	x0, [sp, #80]
    4d74:	ldr	x0, [sp, #80]
    4d78:	ldr	w1, [x0, #12]
    4d7c:	mov	w0, #0x400                 	// #1024
    4d80:	movk	w0, #0x2020, lsl #16
    4d84:	and	w0, w1, w0
    4d88:	cmp	w0, #0x400
    4d8c:	b.ne	4dac <XS_Socket_sockaddr_family+0xe8>  // b.any
    4d90:	ldr	x0, [sp, #80]
    4d94:	ldr	x0, [x0]
    4d98:	ldr	x0, [x0, #16]
    4d9c:	str	x0, [sp, #56]
    4da0:	ldr	x0, [sp, #80]
    4da4:	ldr	x0, [x0, #16]
    4da8:	b	4dc0 <XS_Socket_sockaddr_family+0xfc>
    4dac:	add	x0, sp, #0x38
    4db0:	mov	x2, x0
    4db4:	ldr	x1, [sp, #80]
    4db8:	ldr	x0, [sp, #40]
    4dbc:	bl	2f20 <Perl_sv_2pvbyte@plt>
    4dc0:	str	x0, [sp, #88]
    4dc4:	ldr	x0, [sp, #56]
    4dc8:	cmp	x0, #0x1
    4dcc:	b.hi	4df0 <XS_Socket_sockaddr_family+0x12c>  // b.pmore
    4dd0:	ldr	x0, [sp, #56]
    4dd4:	mov	x3, #0x2                   	// #2
    4dd8:	mov	x2, x0
    4ddc:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4de0:	add	x1, x0, #0xa00
    4de4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4de8:	add	x0, x0, #0xa18
    4dec:	bl	2fd0 <Perl_croak_nocontext@plt>
    4df0:	ldr	x0, [sp, #88]
    4df4:	ldrh	w0, [x0]
    4df8:	and	x0, x0, #0xffff
    4dfc:	mov	x1, x0
    4e00:	ldr	x0, [sp, #40]
    4e04:	bl	30f0 <Perl_newSViv@plt>
    4e08:	mov	x2, x0
    4e0c:	ldr	x0, [sp, #40]
    4e10:	ldr	x1, [x0, #24]
    4e14:	ldrsw	x0, [sp, #48]
    4e18:	lsl	x0, x0, #3
    4e1c:	add	x19, x1, x0
    4e20:	mov	x1, x2
    4e24:	ldr	x0, [sp, #40]
    4e28:	bl	3010 <Perl_sv_2mortal@plt>
    4e2c:	str	x0, [x19]
    4e30:	mov	x0, #0x1                   	// #1
    4e34:	str	x0, [sp, #96]
    4e38:	ldr	x0, [sp, #40]
    4e3c:	ldr	x1, [x0, #24]
    4e40:	ldrsw	x2, [sp, #48]
    4e44:	ldr	x0, [sp, #96]
    4e48:	add	x0, x2, x0
    4e4c:	lsl	x0, x0, #3
    4e50:	sub	x0, x0, #0x8
    4e54:	add	x1, x1, x0
    4e58:	ldr	x0, [sp, #40]
    4e5c:	str	x1, [x0]
    4e60:	nop
    4e64:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    4e68:	ldr	x0, [x0, #4048]
    4e6c:	ldr	x1, [sp, #104]
    4e70:	ldr	x0, [x0]
    4e74:	eor	x0, x1, x0
    4e78:	cmp	x0, #0x0
    4e7c:	b.eq	4e84 <XS_Socket_sockaddr_family+0x1c0>  // b.none
    4e80:	bl	2f80 <__stack_chk_fail@plt>
    4e84:	ldr	x19, [sp, #16]
    4e88:	ldp	x29, x30, [sp], #112
    4e8c:	ret

0000000000004e90 <XS_Socket_pack_sockaddr_un>:
    4e90:	stp	x29, x30, [sp, #-240]!
    4e94:	mov	x29, sp
    4e98:	str	x19, [sp, #16]
    4e9c:	str	x0, [sp, #40]
    4ea0:	str	x1, [sp, #32]
    4ea4:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    4ea8:	ldr	x0, [x0, #4048]
    4eac:	ldr	x1, [x0]
    4eb0:	str	x1, [sp, #232]
    4eb4:	mov	x1, #0x0                   	// #0
    4eb8:	ldr	x0, [sp, #40]
    4ebc:	ldr	x0, [x0]
    4ec0:	str	x0, [sp, #80]
    4ec4:	ldr	x0, [sp, #40]
    4ec8:	bl	3300 <S_POPMARK>
    4ecc:	str	w0, [sp, #64]
    4ed0:	ldr	x0, [sp, #40]
    4ed4:	ldr	x1, [x0, #24]
    4ed8:	ldr	w0, [sp, #64]
    4edc:	add	w2, w0, #0x1
    4ee0:	str	w2, [sp, #64]
    4ee4:	sxtw	x0, w0
    4ee8:	lsl	x0, x0, #3
    4eec:	add	x0, x1, x0
    4ef0:	str	x0, [sp, #88]
    4ef4:	ldr	x1, [sp, #80]
    4ef8:	ldr	x0, [sp, #88]
    4efc:	sub	x0, x1, x0
    4f00:	asr	x0, x0, #3
    4f04:	str	w0, [sp, #68]
    4f08:	ldr	w0, [sp, #68]
    4f0c:	cmp	w0, #0x1
    4f10:	b.eq	4f24 <XS_Socket_pack_sockaddr_un+0x94>  // b.none
    4f14:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4f18:	add	x1, x0, #0xa58
    4f1c:	ldr	x0, [sp, #32]
    4f20:	bl	2fa0 <Perl_croak_xs_usage@plt>
    4f24:	ldr	x0, [sp, #40]
    4f28:	ldr	x1, [x0, #24]
    4f2c:	ldrsw	x0, [sp, #64]
    4f30:	lsl	x0, x0, #3
    4f34:	add	x0, x1, x0
    4f38:	ldr	x0, [x0]
    4f3c:	str	x0, [sp, #96]
    4f40:	ldr	x0, [sp, #96]
    4f44:	ldr	w0, [x0, #12]
    4f48:	and	w0, w0, #0xff00
    4f4c:	cmp	w0, #0x0
    4f50:	b.ne	4f68 <XS_Socket_pack_sockaddr_un+0xd8>  // b.any
    4f54:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4f58:	add	x1, x0, #0xa68
    4f5c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4f60:	add	x0, x0, #0xa88
    4f64:	bl	2fd0 <Perl_croak_nocontext@plt>
    4f68:	add	x0, sp, #0x78
    4f6c:	mov	x2, #0x6e                  	// #110
    4f70:	mov	w1, #0x0                   	// #0
    4f74:	bl	2f30 <memset@plt>
    4f78:	mov	w0, #0x1                   	// #1
    4f7c:	strh	w0, [sp, #120]
    4f80:	ldr	x0, [sp, #96]
    4f84:	ldr	w1, [x0, #12]
    4f88:	mov	w0, #0x400                 	// #1024
    4f8c:	movk	w0, #0x20, lsl #16
    4f90:	and	w0, w1, w0
    4f94:	cmp	w0, #0x400
    4f98:	b.ne	4fb8 <XS_Socket_pack_sockaddr_un+0x128>  // b.any
    4f9c:	ldr	x0, [sp, #96]
    4fa0:	ldr	x0, [x0]
    4fa4:	ldr	x0, [x0, #16]
    4fa8:	str	x0, [sp, #72]
    4fac:	ldr	x0, [sp, #96]
    4fb0:	ldr	x0, [x0, #16]
    4fb4:	b	4fd0 <XS_Socket_pack_sockaddr_un+0x140>
    4fb8:	add	x0, sp, #0x48
    4fbc:	mov	w3, #0x2                   	// #2
    4fc0:	mov	x2, x0
    4fc4:	ldr	x1, [sp, #96]
    4fc8:	ldr	x0, [sp, #40]
    4fcc:	bl	2f40 <Perl_sv_2pv_flags@plt>
    4fd0:	str	x0, [sp, #104]
    4fd4:	ldr	x0, [sp, #72]
    4fd8:	cmp	x0, #0x6c
    4fdc:	b.ls	5000 <XS_Socket_pack_sockaddr_un+0x170>  // b.plast
    4fe0:	ldr	x0, [sp, #72]
    4fe4:	mov	x2, #0x6c                  	// #108
    4fe8:	mov	x1, x0
    4fec:	adrp	x0, 8000 <boot_Socket+0x4b0>
    4ff0:	add	x0, x0, #0xaa0
    4ff4:	bl	2ec0 <Perl_warn_nocontext@plt>
    4ff8:	mov	x0, #0x6c                  	// #108
    4ffc:	str	x0, [sp, #72]
    5000:	ldr	x1, [sp, #72]
    5004:	add	x0, sp, #0x78
    5008:	add	x0, x0, #0x2
    500c:	mov	x2, x1
    5010:	ldr	x1, [sp, #104]
    5014:	bl	2de0 <memcpy@plt>
    5018:	ldr	x0, [sp, #72]
    501c:	cmp	x0, #0x1
    5020:	b.ls	5040 <XS_Socket_pack_sockaddr_un+0x1b0>  // b.plast
    5024:	ldrb	w0, [sp, #122]
    5028:	cmp	w0, #0x0
    502c:	b.ne	5040 <XS_Socket_pack_sockaddr_un+0x1b0>  // b.any
    5030:	ldr	x0, [sp, #72]
    5034:	add	w0, w0, #0x2
    5038:	str	w0, [sp, #60]
    503c:	b	5048 <XS_Socket_pack_sockaddr_un+0x1b8>
    5040:	mov	w0, #0x6e                  	// #110
    5044:	str	w0, [sp, #60]
    5048:	ldrsw	x1, [sp, #60]
    504c:	add	x0, sp, #0x78
    5050:	mov	x2, x1
    5054:	mov	x1, x0
    5058:	ldr	x0, [sp, #40]
    505c:	bl	3120 <Perl_newSVpvn@plt>
    5060:	mov	x2, x0
    5064:	ldr	x0, [sp, #40]
    5068:	ldr	x1, [x0, #24]
    506c:	ldrsw	x0, [sp, #64]
    5070:	lsl	x0, x0, #3
    5074:	add	x19, x1, x0
    5078:	mov	x1, x2
    507c:	ldr	x0, [sp, #40]
    5080:	bl	3010 <Perl_sv_2mortal@plt>
    5084:	str	x0, [x19]
    5088:	mov	x0, #0x1                   	// #1
    508c:	str	x0, [sp, #112]
    5090:	ldr	x0, [sp, #40]
    5094:	ldr	x1, [x0, #24]
    5098:	ldrsw	x2, [sp, #64]
    509c:	ldr	x0, [sp, #112]
    50a0:	add	x0, x2, x0
    50a4:	lsl	x0, x0, #3
    50a8:	sub	x0, x0, #0x8
    50ac:	add	x1, x1, x0
    50b0:	ldr	x0, [sp, #40]
    50b4:	str	x1, [x0]
    50b8:	nop
    50bc:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    50c0:	ldr	x0, [x0, #4048]
    50c4:	ldr	x1, [sp, #232]
    50c8:	ldr	x0, [x0]
    50cc:	eor	x0, x1, x0
    50d0:	cmp	x0, #0x0
    50d4:	b.eq	50dc <XS_Socket_pack_sockaddr_un+0x24c>  // b.none
    50d8:	bl	2f80 <__stack_chk_fail@plt>
    50dc:	ldr	x19, [sp, #16]
    50e0:	ldp	x29, x30, [sp], #240
    50e4:	ret

00000000000050e8 <XS_Socket_unpack_sockaddr_un>:
    50e8:	stp	x29, x30, [sp, #-240]!
    50ec:	mov	x29, sp
    50f0:	str	x19, [sp, #16]
    50f4:	str	x0, [sp, #40]
    50f8:	str	x1, [sp, #32]
    50fc:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    5100:	ldr	x0, [x0, #4048]
    5104:	ldr	x1, [x0]
    5108:	str	x1, [sp, #232]
    510c:	mov	x1, #0x0                   	// #0
    5110:	ldr	x0, [sp, #40]
    5114:	ldr	x0, [x0]
    5118:	str	x0, [sp, #80]
    511c:	ldr	x0, [sp, #40]
    5120:	bl	3300 <S_POPMARK>
    5124:	str	w0, [sp, #60]
    5128:	ldr	x0, [sp, #40]
    512c:	ldr	x1, [x0, #24]
    5130:	ldr	w0, [sp, #60]
    5134:	add	w2, w0, #0x1
    5138:	str	w2, [sp, #60]
    513c:	sxtw	x0, w0
    5140:	lsl	x0, x0, #3
    5144:	add	x0, x1, x0
    5148:	str	x0, [sp, #88]
    514c:	ldr	x1, [sp, #80]
    5150:	ldr	x0, [sp, #88]
    5154:	sub	x0, x1, x0
    5158:	asr	x0, x0, #3
    515c:	str	w0, [sp, #64]
    5160:	ldr	w0, [sp, #64]
    5164:	cmp	w0, #0x1
    5168:	b.eq	517c <XS_Socket_unpack_sockaddr_un+0x94>  // b.none
    516c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5170:	add	x1, x0, #0xaf8
    5174:	ldr	x0, [sp, #32]
    5178:	bl	2fa0 <Perl_croak_xs_usage@plt>
    517c:	ldr	x0, [sp, #40]
    5180:	ldr	x1, [x0, #24]
    5184:	ldrsw	x0, [sp, #60]
    5188:	lsl	x0, x0, #3
    518c:	add	x0, x1, x0
    5190:	ldr	x0, [x0]
    5194:	str	x0, [sp, #96]
    5198:	str	wzr, [sp, #56]
    519c:	ldr	x0, [sp, #96]
    51a0:	ldr	w0, [x0, #12]
    51a4:	and	w0, w0, #0xff00
    51a8:	cmp	w0, #0x0
    51ac:	b.ne	51c4 <XS_Socket_unpack_sockaddr_un+0xdc>  // b.any
    51b0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    51b4:	add	x1, x0, #0xb00
    51b8:	adrp	x0, 8000 <boot_Socket+0x4b0>
    51bc:	add	x0, x0, #0xb20
    51c0:	bl	2fd0 <Perl_croak_nocontext@plt>
    51c4:	ldr	x0, [sp, #96]
    51c8:	ldr	w1, [x0, #12]
    51cc:	mov	w0, #0x400                 	// #1024
    51d0:	movk	w0, #0x2020, lsl #16
    51d4:	and	w0, w1, w0
    51d8:	cmp	w0, #0x400
    51dc:	b.ne	51fc <XS_Socket_unpack_sockaddr_un+0x114>  // b.any
    51e0:	ldr	x0, [sp, #96]
    51e4:	ldr	x0, [x0]
    51e8:	ldr	x0, [x0, #16]
    51ec:	str	x0, [sp, #72]
    51f0:	ldr	x0, [sp, #96]
    51f4:	ldr	x0, [x0, #16]
    51f8:	b	5210 <XS_Socket_unpack_sockaddr_un+0x128>
    51fc:	add	x0, sp, #0x48
    5200:	mov	x2, x0
    5204:	ldr	x1, [sp, #96]
    5208:	ldr	x0, [sp, #40]
    520c:	bl	2f20 <Perl_sv_2pvbyte@plt>
    5210:	str	x0, [sp, #104]
    5214:	ldr	x0, [sp, #72]
    5218:	cmp	x0, #0x6d
    521c:	b.hi	5260 <XS_Socket_unpack_sockaddr_un+0x178>  // b.pmore
    5220:	ldr	x1, [sp, #72]
    5224:	add	x0, sp, #0x78
    5228:	mov	x2, x1
    522c:	ldr	x1, [sp, #104]
    5230:	bl	2de0 <memcpy@plt>
    5234:	ldr	x0, [sp, #72]
    5238:	add	x1, sp, #0x78
    523c:	add	x3, x1, x0
    5240:	ldr	x0, [sp, #72]
    5244:	mov	x1, #0x6e                  	// #110
    5248:	sub	x0, x1, x0
    524c:	mov	x2, x0
    5250:	mov	w1, #0x0                   	// #0
    5254:	mov	x0, x3
    5258:	bl	2f30 <memset@plt>
    525c:	b	52a8 <XS_Socket_unpack_sockaddr_un+0x1c0>
    5260:	ldr	x1, [sp, #104]
    5264:	add	x0, sp, #0x78
    5268:	ldp	x2, x3, [x1]
    526c:	stp	x2, x3, [x0]
    5270:	ldp	x2, x3, [x1, #16]
    5274:	stp	x2, x3, [x0, #16]
    5278:	ldp	x2, x3, [x1, #32]
    527c:	stp	x2, x3, [x0, #32]
    5280:	ldp	x2, x3, [x1, #48]
    5284:	stp	x2, x3, [x0, #48]
    5288:	ldp	x2, x3, [x1, #64]
    528c:	stp	x2, x3, [x0, #64]
    5290:	ldp	x2, x3, [x1, #80]
    5294:	stp	x2, x3, [x0, #80]
    5298:	ldr	x2, [x1, #96]
    529c:	str	x2, [x0, #96]
    52a0:	ldur	x1, [x1, #102]
    52a4:	stur	x1, [x0, #102]
    52a8:	ldrh	w0, [sp, #120]
    52ac:	cmp	w0, #0x1
    52b0:	b.eq	52d4 <XS_Socket_unpack_sockaddr_un+0x1ec>  // b.none
    52b4:	ldrh	w0, [sp, #120]
    52b8:	mov	w3, #0x1                   	// #1
    52bc:	mov	w2, w0
    52c0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    52c4:	add	x1, x0, #0xb00
    52c8:	adrp	x0, 8000 <boot_Socket+0x4b0>
    52cc:	add	x0, x0, #0xb40
    52d0:	bl	2fd0 <Perl_croak_nocontext@plt>
    52d4:	ldrb	w0, [sp, #122]
    52d8:	cmp	w0, #0x0
    52dc:	b.ne	52f0 <XS_Socket_unpack_sockaddr_un+0x208>  // b.any
    52e0:	ldr	x0, [sp, #72]
    52e4:	sub	w0, w0, #0x2
    52e8:	str	w0, [sp, #56]
    52ec:	b	532c <XS_Socket_unpack_sockaddr_un+0x244>
    52f0:	mov	w0, #0x6c                  	// #108
    52f4:	str	w0, [sp, #68]
    52f8:	b	5308 <XS_Socket_unpack_sockaddr_un+0x220>
    52fc:	ldr	w0, [sp, #56]
    5300:	add	w0, w0, #0x1
    5304:	str	w0, [sp, #56]
    5308:	ldr	w1, [sp, #56]
    530c:	ldr	w0, [sp, #68]
    5310:	cmp	w1, w0
    5314:	b.ge	532c <XS_Socket_unpack_sockaddr_un+0x244>  // b.tcont
    5318:	ldrsw	x0, [sp, #56]
    531c:	add	x1, sp, #0x7a
    5320:	ldrb	w0, [x1, x0]
    5324:	cmp	w0, #0x0
    5328:	b.ne	52fc <XS_Socket_unpack_sockaddr_un+0x214>  // b.any
    532c:	ldrsw	x1, [sp, #56]
    5330:	add	x0, sp, #0x78
    5334:	add	x0, x0, #0x2
    5338:	mov	x2, x1
    533c:	mov	x1, x0
    5340:	ldr	x0, [sp, #40]
    5344:	bl	3120 <Perl_newSVpvn@plt>
    5348:	mov	x2, x0
    534c:	ldr	x0, [sp, #40]
    5350:	ldr	x1, [x0, #24]
    5354:	ldrsw	x0, [sp, #60]
    5358:	lsl	x0, x0, #3
    535c:	add	x19, x1, x0
    5360:	mov	x1, x2
    5364:	ldr	x0, [sp, #40]
    5368:	bl	3010 <Perl_sv_2mortal@plt>
    536c:	str	x0, [x19]
    5370:	mov	x0, #0x1                   	// #1
    5374:	str	x0, [sp, #112]
    5378:	ldr	x0, [sp, #40]
    537c:	ldr	x1, [x0, #24]
    5380:	ldrsw	x2, [sp, #60]
    5384:	ldr	x0, [sp, #112]
    5388:	add	x0, x2, x0
    538c:	lsl	x0, x0, #3
    5390:	sub	x0, x0, #0x8
    5394:	add	x1, x1, x0
    5398:	ldr	x0, [sp, #40]
    539c:	str	x1, [x0]
    53a0:	nop
    53a4:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    53a8:	ldr	x0, [x0, #4048]
    53ac:	ldr	x1, [sp, #232]
    53b0:	ldr	x0, [x0]
    53b4:	eor	x0, x1, x0
    53b8:	cmp	x0, #0x0
    53bc:	b.eq	53c4 <XS_Socket_unpack_sockaddr_un+0x2dc>  // b.none
    53c0:	bl	2f80 <__stack_chk_fail@plt>
    53c4:	ldr	x19, [sp, #16]
    53c8:	ldp	x29, x30, [sp], #240
    53cc:	ret

00000000000053d0 <XS_Socket_pack_sockaddr_in>:
    53d0:	stp	x29, x30, [sp, #-160]!
    53d4:	mov	x29, sp
    53d8:	str	x19, [sp, #16]
    53dc:	str	x0, [sp, #40]
    53e0:	str	x1, [sp, #32]
    53e4:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    53e8:	ldr	x0, [x0, #4048]
    53ec:	ldr	x1, [x0]
    53f0:	str	x1, [sp, #152]
    53f4:	mov	x1, #0x0                   	// #0
    53f8:	ldr	x0, [sp, #40]
    53fc:	ldr	x0, [x0]
    5400:	str	x0, [sp, #88]
    5404:	ldr	x0, [sp, #40]
    5408:	bl	3300 <S_POPMARK>
    540c:	str	w0, [sp, #72]
    5410:	ldr	x0, [sp, #40]
    5414:	ldr	x1, [x0, #24]
    5418:	ldr	w0, [sp, #72]
    541c:	add	w2, w0, #0x1
    5420:	str	w2, [sp, #72]
    5424:	sxtw	x0, w0
    5428:	lsl	x0, x0, #3
    542c:	add	x0, x1, x0
    5430:	str	x0, [sp, #96]
    5434:	ldr	x1, [sp, #88]
    5438:	ldr	x0, [sp, #96]
    543c:	sub	x0, x1, x0
    5440:	asr	x0, x0, #3
    5444:	str	w0, [sp, #76]
    5448:	ldr	w0, [sp, #76]
    544c:	cmp	w0, #0x2
    5450:	b.eq	5464 <XS_Socket_pack_sockaddr_in+0x94>  // b.none
    5454:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5458:	add	x1, x0, #0xb70
    545c:	ldr	x0, [sp, #32]
    5460:	bl	2fa0 <Perl_croak_xs_usage@plt>
    5464:	ldr	x0, [sp, #40]
    5468:	ldr	x1, [x0, #24]
    546c:	ldrsw	x0, [sp, #72]
    5470:	lsl	x0, x0, #3
    5474:	add	x0, x1, x0
    5478:	ldr	x0, [x0]
    547c:	str	x0, [sp, #104]
    5480:	ldr	x0, [sp, #40]
    5484:	ldr	x1, [x0, #24]
    5488:	ldrsw	x0, [sp, #72]
    548c:	add	x0, x0, #0x1
    5490:	lsl	x0, x0, #3
    5494:	add	x0, x1, x0
    5498:	ldr	x0, [x0]
    549c:	str	x0, [sp, #112]
    54a0:	strh	wzr, [sp, #62]
    54a4:	ldr	x0, [sp, #104]
    54a8:	ldr	w0, [x0, #12]
    54ac:	and	w0, w0, #0xff00
    54b0:	cmp	w0, #0x0
    54b4:	b.eq	5508 <XS_Socket_pack_sockaddr_in+0x138>  // b.none
    54b8:	ldr	x0, [sp, #104]
    54bc:	ldr	w1, [x0, #12]
    54c0:	mov	w0, #0x100                 	// #256
    54c4:	movk	w0, #0x8020, lsl #16
    54c8:	and	w1, w1, w0
    54cc:	mov	w0, #0x100                 	// #256
    54d0:	movk	w0, #0x8000, lsl #16
    54d4:	cmp	w1, w0
    54d8:	b.ne	54f0 <XS_Socket_pack_sockaddr_in+0x120>  // b.any
    54dc:	ldr	x0, [sp, #104]
    54e0:	ldr	x0, [x0]
    54e4:	ldr	x0, [x0, #32]
    54e8:	and	w0, w0, #0xffff
    54ec:	b	5504 <XS_Socket_pack_sockaddr_in+0x134>
    54f0:	mov	w2, #0x2                   	// #2
    54f4:	ldr	x1, [sp, #104]
    54f8:	ldr	x0, [sp, #40]
    54fc:	bl	2e40 <Perl_sv_2uv_flags@plt>
    5500:	and	w0, w0, #0xffff
    5504:	strh	w0, [sp, #62]
    5508:	ldr	x0, [sp, #112]
    550c:	ldr	w0, [x0, #12]
    5510:	and	w0, w0, #0xff00
    5514:	cmp	w0, #0x0
    5518:	b.ne	5530 <XS_Socket_pack_sockaddr_in+0x160>  // b.any
    551c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5520:	add	x1, x0, #0xb88
    5524:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5528:	add	x0, x0, #0xb20
    552c:	bl	2fd0 <Perl_croak_nocontext@plt>
    5530:	ldr	x0, [sp, #112]
    5534:	ldr	w0, [x0, #12]
    5538:	and	w0, w0, #0x20000000
    553c:	cmp	w0, #0x0
    5540:	b.eq	559c <XS_Socket_pack_sockaddr_in+0x1cc>  // b.none
    5544:	ldr	x0, [sp, #40]
    5548:	ldr	x0, [x0, #224]
    554c:	ldr	w0, [x0, #56]
    5550:	lsr	w0, w0, #3
    5554:	mov	w0, w0
    5558:	and	x0, x0, #0x1
    555c:	cmp	x0, #0x0
    5560:	b.ne	559c <XS_Socket_pack_sockaddr_in+0x1cc>  // b.any
    5564:	mov	w2, #0x1                   	// #1
    5568:	ldr	x1, [sp, #112]
    556c:	ldr	x0, [sp, #40]
    5570:	bl	2e90 <Perl_sv_utf8_downgrade@plt>
    5574:	and	w0, w0, #0xff
    5578:	eor	w0, w0, #0x1
    557c:	and	w0, w0, #0xff
    5580:	cmp	w0, #0x0
    5584:	b.eq	559c <XS_Socket_pack_sockaddr_in+0x1cc>  // b.none
    5588:	adrp	x0, 8000 <boot_Socket+0x4b0>
    558c:	add	x1, x0, #0xb88
    5590:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5594:	add	x0, x0, #0x990
    5598:	bl	2fd0 <Perl_croak_nocontext@plt>
    559c:	ldr	x0, [sp, #112]
    55a0:	ldr	w1, [x0, #12]
    55a4:	mov	w0, #0x400                 	// #1024
    55a8:	movk	w0, #0x2020, lsl #16
    55ac:	and	w0, w1, w0
    55b0:	cmp	w0, #0x400
    55b4:	b.ne	55d4 <XS_Socket_pack_sockaddr_in+0x204>  // b.any
    55b8:	ldr	x0, [sp, #112]
    55bc:	ldr	x0, [x0]
    55c0:	ldr	x0, [x0, #16]
    55c4:	str	x0, [sp, #80]
    55c8:	ldr	x0, [sp, #112]
    55cc:	ldr	x0, [x0, #16]
    55d0:	b	55e8 <XS_Socket_pack_sockaddr_in+0x218>
    55d4:	add	x0, sp, #0x50
    55d8:	mov	x2, x0
    55dc:	ldr	x1, [sp, #112]
    55e0:	ldr	x0, [sp, #40]
    55e4:	bl	2f20 <Perl_sv_2pvbyte@plt>
    55e8:	str	x0, [sp, #120]
    55ec:	ldr	x0, [sp, #80]
    55f0:	cmp	x0, #0x4
    55f4:	b.eq	5604 <XS_Socket_pack_sockaddr_in+0x234>  // b.none
    55f8:	ldr	x0, [sp, #80]
    55fc:	cmp	x0, #0x4
    5600:	b.ne	5710 <XS_Socket_pack_sockaddr_in+0x340>  // b.any
    5604:	ldr	x0, [sp, #120]
    5608:	ldrb	w0, [x0]
    560c:	lsl	w1, w0, #24
    5610:	ldr	x0, [sp, #120]
    5614:	add	x0, x0, #0x1
    5618:	ldrb	w0, [x0]
    561c:	lsl	w0, w0, #16
    5620:	orr	w1, w1, w0
    5624:	ldr	x0, [sp, #120]
    5628:	add	x0, x0, #0x2
    562c:	ldrb	w0, [x0]
    5630:	lsl	w0, w0, #8
    5634:	orr	w0, w1, w0
    5638:	ldr	x1, [sp, #120]
    563c:	add	x1, x1, #0x3
    5640:	ldrb	w1, [x1]
    5644:	orr	w0, w0, w1
    5648:	str	w0, [sp, #64]
    564c:	add	x0, sp, #0x88
    5650:	mov	x2, #0x10                  	// #16
    5654:	mov	w1, #0x0                   	// #0
    5658:	bl	2f30 <memset@plt>
    565c:	mov	w0, #0x2                   	// #2
    5660:	strh	w0, [sp, #136]
    5664:	ldrh	w0, [sp, #62]
    5668:	bl	2f70 <htons@plt>
    566c:	and	w0, w0, #0xffff
    5670:	strh	w0, [sp, #138]
    5674:	ldr	w0, [sp, #64]
    5678:	bl	2e60 <htonl@plt>
    567c:	str	w0, [sp, #140]
    5680:	add	x0, sp, #0x88
    5684:	mov	x2, #0x10                  	// #16
    5688:	mov	x1, x0
    568c:	ldr	x0, [sp, #40]
    5690:	bl	3120 <Perl_newSVpvn@plt>
    5694:	mov	x2, x0
    5698:	ldr	x0, [sp, #40]
    569c:	ldr	x1, [x0, #24]
    56a0:	ldrsw	x0, [sp, #72]
    56a4:	lsl	x0, x0, #3
    56a8:	add	x19, x1, x0
    56ac:	mov	x1, x2
    56b0:	ldr	x0, [sp, #40]
    56b4:	bl	3010 <Perl_sv_2mortal@plt>
    56b8:	str	x0, [x19]
    56bc:	mov	x0, #0x1                   	// #1
    56c0:	str	x0, [sp, #128]
    56c4:	ldr	x0, [sp, #40]
    56c8:	ldr	x1, [x0, #24]
    56cc:	ldrsw	x2, [sp, #72]
    56d0:	ldr	x0, [sp, #128]
    56d4:	add	x0, x2, x0
    56d8:	lsl	x0, x0, #3
    56dc:	sub	x0, x0, #0x8
    56e0:	add	x1, x1, x0
    56e4:	ldr	x0, [sp, #40]
    56e8:	str	x1, [x0]
    56ec:	nop
    56f0:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    56f4:	ldr	x0, [x0, #4048]
    56f8:	ldr	x1, [sp, #152]
    56fc:	ldr	x0, [x0]
    5700:	eor	x0, x1, x0
    5704:	cmp	x0, #0x0
    5708:	b.eq	5734 <XS_Socket_pack_sockaddr_in+0x364>  // b.none
    570c:	b	5730 <XS_Socket_pack_sockaddr_in+0x360>
    5710:	ldr	x0, [sp, #80]
    5714:	mov	x3, #0x4                   	// #4
    5718:	mov	x2, x0
    571c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5720:	add	x1, x0, #0xb88
    5724:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5728:	add	x0, x0, #0x9b8
    572c:	bl	2fd0 <Perl_croak_nocontext@plt>
    5730:	bl	2f80 <__stack_chk_fail@plt>
    5734:	ldr	x19, [sp, #16]
    5738:	ldp	x29, x30, [sp], #160
    573c:	ret

0000000000005740 <XS_Socket_unpack_sockaddr_in>:
    5740:	stp	x29, x30, [sp, #-128]!
    5744:	mov	x29, sp
    5748:	str	x19, [sp, #16]
    574c:	str	x0, [sp, #40]
    5750:	str	x1, [sp, #32]
    5754:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    5758:	ldr	x0, [x0, #4048]
    575c:	ldr	x1, [x0]
    5760:	str	x1, [sp, #120]
    5764:	mov	x1, #0x0                   	// #0
    5768:	ldr	x0, [sp, #40]
    576c:	ldr	x0, [x0]
    5770:	str	x0, [sp, #64]
    5774:	ldr	x0, [sp, #40]
    5778:	bl	3300 <S_POPMARK>
    577c:	str	w0, [sp, #48]
    5780:	ldr	x0, [sp, #40]
    5784:	ldr	x1, [x0, #24]
    5788:	ldr	w0, [sp, #48]
    578c:	add	w2, w0, #0x1
    5790:	str	w2, [sp, #48]
    5794:	sxtw	x0, w0
    5798:	lsl	x0, x0, #3
    579c:	add	x0, x1, x0
    57a0:	str	x0, [sp, #72]
    57a4:	ldr	x1, [sp, #64]
    57a8:	ldr	x0, [sp, #72]
    57ac:	sub	x0, x1, x0
    57b0:	asr	x0, x0, #3
    57b4:	str	w0, [sp, #52]
    57b8:	ldr	w0, [sp, #52]
    57bc:	cmp	w0, #0x1
    57c0:	b.eq	57d4 <XS_Socket_unpack_sockaddr_in+0x94>  // b.none
    57c4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    57c8:	add	x1, x0, #0xba8
    57cc:	ldr	x0, [sp, #32]
    57d0:	bl	2fa0 <Perl_croak_xs_usage@plt>
    57d4:	ldrsw	x0, [sp, #52]
    57d8:	lsl	x0, x0, #3
    57dc:	neg	x0, x0
    57e0:	ldr	x1, [sp, #64]
    57e4:	add	x0, x1, x0
    57e8:	str	x0, [sp, #64]
    57ec:	ldr	x0, [sp, #40]
    57f0:	ldr	x1, [x0, #24]
    57f4:	ldrsw	x0, [sp, #48]
    57f8:	lsl	x0, x0, #3
    57fc:	add	x0, x1, x0
    5800:	ldr	x0, [x0]
    5804:	str	x0, [sp, #80]
    5808:	ldr	x0, [sp, #80]
    580c:	ldr	w0, [x0, #12]
    5810:	and	w0, w0, #0xff00
    5814:	cmp	w0, #0x0
    5818:	b.ne	5830 <XS_Socket_unpack_sockaddr_in+0xf0>  // b.any
    581c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5820:	add	x1, x0, #0xbb0
    5824:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5828:	add	x0, x0, #0xb20
    582c:	bl	2fd0 <Perl_croak_nocontext@plt>
    5830:	ldr	x0, [sp, #80]
    5834:	ldr	w1, [x0, #12]
    5838:	mov	w0, #0x400                 	// #1024
    583c:	movk	w0, #0x2020, lsl #16
    5840:	and	w0, w1, w0
    5844:	cmp	w0, #0x400
    5848:	b.ne	5868 <XS_Socket_unpack_sockaddr_in+0x128>  // b.any
    584c:	ldr	x0, [sp, #80]
    5850:	ldr	x0, [x0]
    5854:	ldr	x0, [x0, #16]
    5858:	str	x0, [sp, #56]
    585c:	ldr	x0, [sp, #80]
    5860:	ldr	x0, [x0, #16]
    5864:	b	587c <XS_Socket_unpack_sockaddr_in+0x13c>
    5868:	add	x0, sp, #0x38
    586c:	mov	x2, x0
    5870:	ldr	x1, [sp, #80]
    5874:	ldr	x0, [sp, #40]
    5878:	bl	2f20 <Perl_sv_2pvbyte@plt>
    587c:	str	x0, [sp, #88]
    5880:	ldr	x0, [sp, #56]
    5884:	cmp	x0, #0x10
    5888:	b.eq	58ac <XS_Socket_unpack_sockaddr_in+0x16c>  // b.none
    588c:	ldr	x0, [sp, #56]
    5890:	mov	x3, #0x10                  	// #16
    5894:	mov	x2, x0
    5898:	adrp	x0, 8000 <boot_Socket+0x4b0>
    589c:	add	x1, x0, #0xbb0
    58a0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    58a4:	add	x0, x0, #0x9b8
    58a8:	bl	2fd0 <Perl_croak_nocontext@plt>
    58ac:	ldr	x0, [sp, #88]
    58b0:	ldp	x0, x1, [x0]
    58b4:	stp	x0, x1, [sp, #104]
    58b8:	ldrh	w0, [sp, #104]
    58bc:	cmp	w0, #0x2
    58c0:	b.eq	58e4 <XS_Socket_unpack_sockaddr_in+0x1a4>  // b.none
    58c4:	ldrh	w0, [sp, #104]
    58c8:	mov	w3, #0x2                   	// #2
    58cc:	mov	w2, w0
    58d0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    58d4:	add	x1, x0, #0xbb0
    58d8:	adrp	x0, 8000 <boot_Socket+0x4b0>
    58dc:	add	x0, x0, #0xb40
    58e0:	bl	2fd0 <Perl_croak_nocontext@plt>
    58e4:	add	x0, sp, #0x68
    58e8:	add	x0, x0, #0x4
    58ec:	mov	x2, #0x4                   	// #4
    58f0:	mov	x1, x0
    58f4:	ldr	x0, [sp, #40]
    58f8:	bl	3120 <Perl_newSVpvn@plt>
    58fc:	str	x0, [sp, #96]
    5900:	ldr	x0, [sp, #40]
    5904:	ldr	x0, [x0, #8]
    5908:	ldrb	w0, [x0, #34]
    590c:	and	w0, w0, #0x3
    5910:	cmp	w0, #0x0
    5914:	b.eq	5938 <XS_Socket_unpack_sockaddr_in+0x1f8>  // b.none
    5918:	ldr	x0, [sp, #40]
    591c:	ldr	x0, [x0, #8]
    5920:	ldrb	w0, [x0, #34]
    5924:	and	w0, w0, #0x3
    5928:	cmp	w0, #0x3
    592c:	cset	w0, eq  // eq = none
    5930:	and	w0, w0, #0xff
    5934:	b	5950 <XS_Socket_unpack_sockaddr_in+0x210>
    5938:	ldr	x0, [sp, #40]
    593c:	bl	30c0 <Perl_block_gimme@plt>
    5940:	and	w0, w0, #0xff
    5944:	cmp	w0, #0x3
    5948:	cset	w0, eq  // eq = none
    594c:	and	w0, w0, #0xff
    5950:	cmp	w0, #0x0
    5954:	b.eq	5a08 <XS_Socket_unpack_sockaddr_in+0x2c8>  // b.none
    5958:	ldr	x0, [sp, #40]
    595c:	ldr	x1, [x0, #32]
    5960:	ldr	x0, [sp, #64]
    5964:	sub	x0, x1, x0
    5968:	cmp	x0, #0x8
    596c:	cset	w0, le
    5970:	and	w0, w0, #0xff
    5974:	and	x0, x0, #0xff
    5978:	cmp	x0, #0x0
    597c:	b.eq	5998 <XS_Socket_unpack_sockaddr_in+0x258>  // b.none
    5980:	mov	x3, #0x2                   	// #2
    5984:	ldr	x2, [sp, #64]
    5988:	ldr	x1, [sp, #64]
    598c:	ldr	x0, [sp, #40]
    5990:	bl	2e50 <Perl_stack_grow@plt>
    5994:	str	x0, [sp, #64]
    5998:	ldr	x0, [sp, #64]
    599c:	add	x0, x0, #0x8
    59a0:	str	x0, [sp, #64]
    59a4:	ldr	x0, [sp, #40]
    59a8:	bl	3130 <Perl_sv_newmortal@plt>
    59ac:	mov	x1, x0
    59b0:	ldr	x0, [sp, #64]
    59b4:	str	x1, [x0]
    59b8:	ldr	x0, [sp, #64]
    59bc:	ldr	x19, [x0]
    59c0:	ldrh	w0, [sp, #106]
    59c4:	bl	2ee0 <ntohs@plt>
    59c8:	and	w0, w0, #0xffff
    59cc:	and	x0, x0, #0xffff
    59d0:	mov	x2, x0
    59d4:	mov	x1, x19
    59d8:	ldr	x0, [sp, #40]
    59dc:	bl	3100 <Perl_sv_setiv@plt>
    59e0:	ldr	x0, [sp, #64]
    59e4:	add	x0, x0, #0x8
    59e8:	str	x0, [sp, #64]
    59ec:	ldr	x1, [sp, #96]
    59f0:	ldr	x0, [sp, #40]
    59f4:	bl	3010 <Perl_sv_2mortal@plt>
    59f8:	mov	x1, x0
    59fc:	ldr	x0, [sp, #64]
    5a00:	str	x1, [x0]
    5a04:	b	5a2c <XS_Socket_unpack_sockaddr_in+0x2ec>
    5a08:	ldr	x0, [sp, #64]
    5a0c:	add	x0, x0, #0x8
    5a10:	str	x0, [sp, #64]
    5a14:	ldr	x1, [sp, #96]
    5a18:	ldr	x0, [sp, #40]
    5a1c:	bl	3010 <Perl_sv_2mortal@plt>
    5a20:	mov	x1, x0
    5a24:	ldr	x0, [sp, #64]
    5a28:	str	x1, [x0]
    5a2c:	ldr	x0, [sp, #40]
    5a30:	ldr	x1, [sp, #64]
    5a34:	str	x1, [x0]
    5a38:	nop
    5a3c:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    5a40:	ldr	x0, [x0, #4048]
    5a44:	ldr	x1, [sp, #120]
    5a48:	ldr	x0, [x0]
    5a4c:	eor	x0, x1, x0
    5a50:	cmp	x0, #0x0
    5a54:	b.eq	5a5c <XS_Socket_unpack_sockaddr_in+0x31c>  // b.none
    5a58:	bl	2f80 <__stack_chk_fail@plt>
    5a5c:	ldr	x19, [sp, #16]
    5a60:	ldp	x29, x30, [sp], #128
    5a64:	ret

0000000000005a68 <XS_Socket_pack_sockaddr_in6>:
    5a68:	stp	x29, x30, [sp, #-176]!
    5a6c:	mov	x29, sp
    5a70:	str	x19, [sp, #16]
    5a74:	str	x0, [sp, #40]
    5a78:	str	x1, [sp, #32]
    5a7c:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    5a80:	ldr	x0, [x0, #4048]
    5a84:	ldr	x1, [x0]
    5a88:	str	x1, [sp, #168]
    5a8c:	mov	x1, #0x0                   	// #0
    5a90:	ldr	x0, [sp, #40]
    5a94:	ldr	x0, [x0]
    5a98:	str	x0, [sp, #88]
    5a9c:	ldr	x0, [sp, #40]
    5aa0:	bl	3300 <S_POPMARK>
    5aa4:	str	w0, [sp, #56]
    5aa8:	ldr	x0, [sp, #40]
    5aac:	ldr	x1, [x0, #24]
    5ab0:	ldr	w0, [sp, #56]
    5ab4:	add	w2, w0, #0x1
    5ab8:	str	w2, [sp, #56]
    5abc:	sxtw	x0, w0
    5ac0:	lsl	x0, x0, #3
    5ac4:	add	x0, x1, x0
    5ac8:	str	x0, [sp, #96]
    5acc:	ldr	x1, [sp, #88]
    5ad0:	ldr	x0, [sp, #96]
    5ad4:	sub	x0, x1, x0
    5ad8:	asr	x0, x0, #3
    5adc:	str	w0, [sp, #60]
    5ae0:	ldr	w0, [sp, #60]
    5ae4:	cmp	w0, #0x1
    5ae8:	b.le	5af8 <XS_Socket_pack_sockaddr_in6+0x90>
    5aec:	ldr	w0, [sp, #60]
    5af0:	cmp	w0, #0x4
    5af4:	b.le	5b08 <XS_Socket_pack_sockaddr_in6+0xa0>
    5af8:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5afc:	add	x1, x0, #0xbd0
    5b00:	ldr	x0, [sp, #32]
    5b04:	bl	2fa0 <Perl_croak_xs_usage@plt>
    5b08:	ldr	x0, [sp, #40]
    5b0c:	ldr	x1, [x0, #24]
    5b10:	ldrsw	x0, [sp, #56]
    5b14:	lsl	x0, x0, #3
    5b18:	add	x0, x1, x0
    5b1c:	ldr	x0, [x0]
    5b20:	str	x0, [sp, #104]
    5b24:	ldr	x0, [sp, #40]
    5b28:	ldr	x1, [x0, #24]
    5b2c:	ldrsw	x0, [sp, #56]
    5b30:	add	x0, x0, #0x1
    5b34:	lsl	x0, x0, #3
    5b38:	add	x0, x1, x0
    5b3c:	ldr	x0, [x0]
    5b40:	str	x0, [sp, #112]
    5b44:	ldr	w0, [sp, #60]
    5b48:	cmp	w0, #0x2
    5b4c:	b.gt	5b58 <XS_Socket_pack_sockaddr_in6+0xf0>
    5b50:	str	xzr, [sp, #72]
    5b54:	b	5bec <XS_Socket_pack_sockaddr_in6+0x184>
    5b58:	ldr	x0, [sp, #40]
    5b5c:	ldr	x1, [x0, #24]
    5b60:	ldrsw	x0, [sp, #56]
    5b64:	add	x0, x0, #0x2
    5b68:	lsl	x0, x0, #3
    5b6c:	add	x0, x1, x0
    5b70:	ldr	x0, [x0]
    5b74:	ldr	w1, [x0, #12]
    5b78:	mov	w0, #0x100                 	// #256
    5b7c:	movk	w0, #0x8020, lsl #16
    5b80:	and	w1, w1, w0
    5b84:	mov	w0, #0x100                 	// #256
    5b88:	movk	w0, #0x8000, lsl #16
    5b8c:	cmp	w1, w0
    5b90:	b.ne	5bbc <XS_Socket_pack_sockaddr_in6+0x154>  // b.any
    5b94:	ldr	x0, [sp, #40]
    5b98:	ldr	x1, [x0, #24]
    5b9c:	ldrsw	x0, [sp, #56]
    5ba0:	add	x0, x0, #0x2
    5ba4:	lsl	x0, x0, #3
    5ba8:	add	x0, x1, x0
    5bac:	ldr	x0, [x0]
    5bb0:	ldr	x0, [x0]
    5bb4:	ldr	x0, [x0, #32]
    5bb8:	b	5be8 <XS_Socket_pack_sockaddr_in6+0x180>
    5bbc:	ldr	x0, [sp, #40]
    5bc0:	ldr	x1, [x0, #24]
    5bc4:	ldrsw	x0, [sp, #56]
    5bc8:	add	x0, x0, #0x2
    5bcc:	lsl	x0, x0, #3
    5bd0:	add	x0, x1, x0
    5bd4:	ldr	x0, [x0]
    5bd8:	mov	w2, #0x2                   	// #2
    5bdc:	mov	x1, x0
    5be0:	ldr	x0, [sp, #40]
    5be4:	bl	2e40 <Perl_sv_2uv_flags@plt>
    5be8:	str	x0, [sp, #72]
    5bec:	ldr	w0, [sp, #60]
    5bf0:	cmp	w0, #0x3
    5bf4:	b.gt	5c00 <XS_Socket_pack_sockaddr_in6+0x198>
    5bf8:	str	xzr, [sp, #80]
    5bfc:	b	5c94 <XS_Socket_pack_sockaddr_in6+0x22c>
    5c00:	ldr	x0, [sp, #40]
    5c04:	ldr	x1, [x0, #24]
    5c08:	ldrsw	x0, [sp, #56]
    5c0c:	add	x0, x0, #0x3
    5c10:	lsl	x0, x0, #3
    5c14:	add	x0, x1, x0
    5c18:	ldr	x0, [x0]
    5c1c:	ldr	w1, [x0, #12]
    5c20:	mov	w0, #0x100                 	// #256
    5c24:	movk	w0, #0x8020, lsl #16
    5c28:	and	w1, w1, w0
    5c2c:	mov	w0, #0x100                 	// #256
    5c30:	movk	w0, #0x8000, lsl #16
    5c34:	cmp	w1, w0
    5c38:	b.ne	5c64 <XS_Socket_pack_sockaddr_in6+0x1fc>  // b.any
    5c3c:	ldr	x0, [sp, #40]
    5c40:	ldr	x1, [x0, #24]
    5c44:	ldrsw	x0, [sp, #56]
    5c48:	add	x0, x0, #0x3
    5c4c:	lsl	x0, x0, #3
    5c50:	add	x0, x1, x0
    5c54:	ldr	x0, [x0]
    5c58:	ldr	x0, [x0]
    5c5c:	ldr	x0, [x0, #32]
    5c60:	b	5c90 <XS_Socket_pack_sockaddr_in6+0x228>
    5c64:	ldr	x0, [sp, #40]
    5c68:	ldr	x1, [x0, #24]
    5c6c:	ldrsw	x0, [sp, #56]
    5c70:	add	x0, x0, #0x3
    5c74:	lsl	x0, x0, #3
    5c78:	add	x0, x1, x0
    5c7c:	ldr	x0, [x0]
    5c80:	mov	w2, #0x2                   	// #2
    5c84:	mov	x1, x0
    5c88:	ldr	x0, [sp, #40]
    5c8c:	bl	2e40 <Perl_sv_2uv_flags@plt>
    5c90:	str	x0, [sp, #80]
    5c94:	strh	wzr, [sp, #54]
    5c98:	ldr	x0, [sp, #104]
    5c9c:	ldr	w0, [x0, #12]
    5ca0:	and	w0, w0, #0xff00
    5ca4:	cmp	w0, #0x0
    5ca8:	b.eq	5cfc <XS_Socket_pack_sockaddr_in6+0x294>  // b.none
    5cac:	ldr	x0, [sp, #104]
    5cb0:	ldr	w1, [x0, #12]
    5cb4:	mov	w0, #0x100                 	// #256
    5cb8:	movk	w0, #0x8020, lsl #16
    5cbc:	and	w1, w1, w0
    5cc0:	mov	w0, #0x100                 	// #256
    5cc4:	movk	w0, #0x8000, lsl #16
    5cc8:	cmp	w1, w0
    5ccc:	b.ne	5ce4 <XS_Socket_pack_sockaddr_in6+0x27c>  // b.any
    5cd0:	ldr	x0, [sp, #104]
    5cd4:	ldr	x0, [x0]
    5cd8:	ldr	x0, [x0, #32]
    5cdc:	and	w0, w0, #0xffff
    5ce0:	b	5cf8 <XS_Socket_pack_sockaddr_in6+0x290>
    5ce4:	mov	w2, #0x2                   	// #2
    5ce8:	ldr	x1, [sp, #104]
    5cec:	ldr	x0, [sp, #40]
    5cf0:	bl	2e40 <Perl_sv_2uv_flags@plt>
    5cf4:	and	w0, w0, #0xffff
    5cf8:	strh	w0, [sp, #54]
    5cfc:	ldr	x0, [sp, #112]
    5d00:	ldr	w0, [x0, #12]
    5d04:	and	w0, w0, #0xff00
    5d08:	cmp	w0, #0x0
    5d0c:	b.ne	5d24 <XS_Socket_pack_sockaddr_in6+0x2bc>  // b.any
    5d10:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5d14:	add	x1, x0, #0xc00
    5d18:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5d1c:	add	x0, x0, #0xb20
    5d20:	bl	2fd0 <Perl_croak_nocontext@plt>
    5d24:	ldr	x0, [sp, #112]
    5d28:	ldr	w0, [x0, #12]
    5d2c:	and	w0, w0, #0x20000000
    5d30:	cmp	w0, #0x0
    5d34:	b.eq	5d90 <XS_Socket_pack_sockaddr_in6+0x328>  // b.none
    5d38:	ldr	x0, [sp, #40]
    5d3c:	ldr	x0, [x0, #224]
    5d40:	ldr	w0, [x0, #56]
    5d44:	lsr	w0, w0, #3
    5d48:	mov	w0, w0
    5d4c:	and	x0, x0, #0x1
    5d50:	cmp	x0, #0x0
    5d54:	b.ne	5d90 <XS_Socket_pack_sockaddr_in6+0x328>  // b.any
    5d58:	mov	w2, #0x1                   	// #1
    5d5c:	ldr	x1, [sp, #112]
    5d60:	ldr	x0, [sp, #40]
    5d64:	bl	2e90 <Perl_sv_utf8_downgrade@plt>
    5d68:	and	w0, w0, #0xff
    5d6c:	eor	w0, w0, #0x1
    5d70:	and	w0, w0, #0xff
    5d74:	cmp	w0, #0x0
    5d78:	b.eq	5d90 <XS_Socket_pack_sockaddr_in6+0x328>  // b.none
    5d7c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5d80:	add	x1, x0, #0xc00
    5d84:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5d88:	add	x0, x0, #0x990
    5d8c:	bl	2fd0 <Perl_croak_nocontext@plt>
    5d90:	ldr	x0, [sp, #112]
    5d94:	ldr	w1, [x0, #12]
    5d98:	mov	w0, #0x400                 	// #1024
    5d9c:	movk	w0, #0x2020, lsl #16
    5da0:	and	w0, w1, w0
    5da4:	cmp	w0, #0x400
    5da8:	b.ne	5dc8 <XS_Socket_pack_sockaddr_in6+0x360>  // b.any
    5dac:	ldr	x0, [sp, #112]
    5db0:	ldr	x0, [x0]
    5db4:	ldr	x0, [x0, #16]
    5db8:	str	x0, [sp, #64]
    5dbc:	ldr	x0, [sp, #112]
    5dc0:	ldr	x0, [x0, #16]
    5dc4:	b	5ddc <XS_Socket_pack_sockaddr_in6+0x374>
    5dc8:	add	x0, sp, #0x40
    5dcc:	mov	x2, x0
    5dd0:	ldr	x1, [sp, #112]
    5dd4:	ldr	x0, [sp, #40]
    5dd8:	bl	2f20 <Perl_sv_2pvbyte@plt>
    5ddc:	str	x0, [sp, #120]
    5de0:	ldr	x0, [sp, #64]
    5de4:	cmp	x0, #0x10
    5de8:	b.eq	5e0c <XS_Socket_pack_sockaddr_in6+0x3a4>  // b.none
    5dec:	ldr	x0, [sp, #64]
    5df0:	mov	x3, #0x10                  	// #16
    5df4:	mov	x2, x0
    5df8:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5dfc:	add	x1, x0, #0xc00
    5e00:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5e04:	add	x0, x0, #0xc20
    5e08:	bl	2fd0 <Perl_croak_nocontext@plt>
    5e0c:	add	x0, sp, #0x88
    5e10:	mov	x2, #0x1c                  	// #28
    5e14:	mov	w1, #0x0                   	// #0
    5e18:	bl	2f30 <memset@plt>
    5e1c:	mov	w0, #0xa                   	// #10
    5e20:	strh	w0, [sp, #136]
    5e24:	ldrh	w0, [sp, #54]
    5e28:	bl	2f70 <htons@plt>
    5e2c:	and	w0, w0, #0xffff
    5e30:	strh	w0, [sp, #138]
    5e34:	ldr	x0, [sp, #80]
    5e38:	bl	2e60 <htonl@plt>
    5e3c:	str	w0, [sp, #140]
    5e40:	ldr	x0, [sp, #120]
    5e44:	ldp	x0, x1, [x0]
    5e48:	stp	x0, x1, [sp, #144]
    5e4c:	ldr	x0, [sp, #72]
    5e50:	str	w0, [sp, #160]
    5e54:	add	x0, sp, #0x88
    5e58:	mov	x2, #0x1c                  	// #28
    5e5c:	mov	x1, x0
    5e60:	ldr	x0, [sp, #40]
    5e64:	bl	3120 <Perl_newSVpvn@plt>
    5e68:	mov	x2, x0
    5e6c:	ldr	x0, [sp, #40]
    5e70:	ldr	x1, [x0, #24]
    5e74:	ldrsw	x0, [sp, #56]
    5e78:	lsl	x0, x0, #3
    5e7c:	add	x19, x1, x0
    5e80:	mov	x1, x2
    5e84:	ldr	x0, [sp, #40]
    5e88:	bl	3010 <Perl_sv_2mortal@plt>
    5e8c:	str	x0, [x19]
    5e90:	mov	x0, #0x1                   	// #1
    5e94:	str	x0, [sp, #128]
    5e98:	ldr	x0, [sp, #40]
    5e9c:	ldr	x1, [x0, #24]
    5ea0:	ldrsw	x2, [sp, #56]
    5ea4:	ldr	x0, [sp, #128]
    5ea8:	add	x0, x2, x0
    5eac:	lsl	x0, x0, #3
    5eb0:	sub	x0, x0, #0x8
    5eb4:	add	x1, x1, x0
    5eb8:	ldr	x0, [sp, #40]
    5ebc:	str	x1, [x0]
    5ec0:	nop
    5ec4:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    5ec8:	ldr	x0, [x0, #4048]
    5ecc:	ldr	x1, [sp, #168]
    5ed0:	ldr	x0, [x0]
    5ed4:	eor	x0, x1, x0
    5ed8:	cmp	x0, #0x0
    5edc:	b.eq	5ee4 <XS_Socket_pack_sockaddr_in6+0x47c>  // b.none
    5ee0:	bl	2f80 <__stack_chk_fail@plt>
    5ee4:	ldr	x19, [sp, #16]
    5ee8:	ldp	x29, x30, [sp], #176
    5eec:	ret

0000000000005ef0 <XS_Socket_unpack_sockaddr_in6>:
    5ef0:	stp	x29, x30, [sp, #-144]!
    5ef4:	mov	x29, sp
    5ef8:	str	x19, [sp, #16]
    5efc:	str	x0, [sp, #40]
    5f00:	str	x1, [sp, #32]
    5f04:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    5f08:	ldr	x0, [x0, #4048]
    5f0c:	ldr	x1, [x0]
    5f10:	str	x1, [sp, #136]
    5f14:	mov	x1, #0x0                   	// #0
    5f18:	ldr	x0, [sp, #40]
    5f1c:	ldr	x0, [x0]
    5f20:	str	x0, [sp, #64]
    5f24:	ldr	x0, [sp, #40]
    5f28:	bl	3300 <S_POPMARK>
    5f2c:	str	w0, [sp, #48]
    5f30:	ldr	x0, [sp, #40]
    5f34:	ldr	x1, [x0, #24]
    5f38:	ldr	w0, [sp, #48]
    5f3c:	add	w2, w0, #0x1
    5f40:	str	w2, [sp, #48]
    5f44:	sxtw	x0, w0
    5f48:	lsl	x0, x0, #3
    5f4c:	add	x0, x1, x0
    5f50:	str	x0, [sp, #72]
    5f54:	ldr	x1, [sp, #64]
    5f58:	ldr	x0, [sp, #72]
    5f5c:	sub	x0, x1, x0
    5f60:	asr	x0, x0, #3
    5f64:	str	w0, [sp, #52]
    5f68:	ldr	w0, [sp, #52]
    5f6c:	cmp	w0, #0x1
    5f70:	b.eq	5f84 <XS_Socket_unpack_sockaddr_in6+0x94>  // b.none
    5f74:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5f78:	add	x1, x0, #0xc50
    5f7c:	ldr	x0, [sp, #32]
    5f80:	bl	2fa0 <Perl_croak_xs_usage@plt>
    5f84:	ldrsw	x0, [sp, #52]
    5f88:	lsl	x0, x0, #3
    5f8c:	neg	x0, x0
    5f90:	ldr	x1, [sp, #64]
    5f94:	add	x0, x1, x0
    5f98:	str	x0, [sp, #64]
    5f9c:	ldr	x0, [sp, #40]
    5fa0:	ldr	x1, [x0, #24]
    5fa4:	ldrsw	x0, [sp, #48]
    5fa8:	lsl	x0, x0, #3
    5fac:	add	x0, x1, x0
    5fb0:	ldr	x0, [x0]
    5fb4:	str	x0, [sp, #80]
    5fb8:	ldr	x0, [sp, #80]
    5fbc:	ldr	w0, [x0, #12]
    5fc0:	and	w0, w0, #0xff00
    5fc4:	cmp	w0, #0x0
    5fc8:	b.ne	5fe0 <XS_Socket_unpack_sockaddr_in6+0xf0>  // b.any
    5fcc:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5fd0:	add	x1, x0, #0xc58
    5fd4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    5fd8:	add	x0, x0, #0xb20
    5fdc:	bl	2fd0 <Perl_croak_nocontext@plt>
    5fe0:	ldr	x0, [sp, #80]
    5fe4:	ldr	w1, [x0, #12]
    5fe8:	mov	w0, #0x400                 	// #1024
    5fec:	movk	w0, #0x2020, lsl #16
    5ff0:	and	w0, w1, w0
    5ff4:	cmp	w0, #0x400
    5ff8:	b.ne	6018 <XS_Socket_unpack_sockaddr_in6+0x128>  // b.any
    5ffc:	ldr	x0, [sp, #80]
    6000:	ldr	x0, [x0]
    6004:	ldr	x0, [x0, #16]
    6008:	str	x0, [sp, #56]
    600c:	ldr	x0, [sp, #80]
    6010:	ldr	x0, [x0, #16]
    6014:	b	602c <XS_Socket_unpack_sockaddr_in6+0x13c>
    6018:	add	x0, sp, #0x38
    601c:	mov	x2, x0
    6020:	ldr	x1, [sp, #80]
    6024:	ldr	x0, [sp, #40]
    6028:	bl	2f20 <Perl_sv_2pvbyte@plt>
    602c:	str	x0, [sp, #88]
    6030:	ldr	x0, [sp, #56]
    6034:	cmp	x0, #0x1c
    6038:	b.eq	605c <XS_Socket_unpack_sockaddr_in6+0x16c>  // b.none
    603c:	ldr	x0, [sp, #56]
    6040:	mov	x3, #0x1c                  	// #28
    6044:	mov	x2, x0
    6048:	adrp	x0, 8000 <boot_Socket+0x4b0>
    604c:	add	x1, x0, #0xc58
    6050:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6054:	add	x0, x0, #0x9b8
    6058:	bl	2fd0 <Perl_croak_nocontext@plt>
    605c:	ldr	x1, [sp, #88]
    6060:	add	x0, sp, #0x68
    6064:	ldp	x2, x3, [x1]
    6068:	stp	x2, x3, [x0]
    606c:	ldr	x2, [x1, #16]
    6070:	str	x2, [x0, #16]
    6074:	ldr	w1, [x1, #24]
    6078:	str	w1, [x0, #24]
    607c:	ldrh	w0, [sp, #104]
    6080:	cmp	w0, #0xa
    6084:	b.eq	60a8 <XS_Socket_unpack_sockaddr_in6+0x1b8>  // b.none
    6088:	ldrh	w0, [sp, #104]
    608c:	mov	w3, #0xa                   	// #10
    6090:	mov	w2, w0
    6094:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6098:	add	x1, x0, #0xc58
    609c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    60a0:	add	x0, x0, #0xb40
    60a4:	bl	2fd0 <Perl_croak_nocontext@plt>
    60a8:	add	x0, sp, #0x68
    60ac:	add	x0, x0, #0x8
    60b0:	mov	x2, #0x10                  	// #16
    60b4:	mov	x1, x0
    60b8:	ldr	x0, [sp, #40]
    60bc:	bl	3120 <Perl_newSVpvn@plt>
    60c0:	str	x0, [sp, #96]
    60c4:	ldr	x0, [sp, #40]
    60c8:	ldr	x0, [x0, #8]
    60cc:	ldrb	w0, [x0, #34]
    60d0:	and	w0, w0, #0x3
    60d4:	cmp	w0, #0x0
    60d8:	b.eq	60fc <XS_Socket_unpack_sockaddr_in6+0x20c>  // b.none
    60dc:	ldr	x0, [sp, #40]
    60e0:	ldr	x0, [x0, #8]
    60e4:	ldrb	w0, [x0, #34]
    60e8:	and	w0, w0, #0x3
    60ec:	cmp	w0, #0x3
    60f0:	cset	w0, eq  // eq = none
    60f4:	and	w0, w0, #0xff
    60f8:	b	6114 <XS_Socket_unpack_sockaddr_in6+0x224>
    60fc:	ldr	x0, [sp, #40]
    6100:	bl	30c0 <Perl_block_gimme@plt>
    6104:	and	w0, w0, #0xff
    6108:	cmp	w0, #0x3
    610c:	cset	w0, eq  // eq = none
    6110:	and	w0, w0, #0xff
    6114:	cmp	w0, #0x0
    6118:	b.eq	6250 <XS_Socket_unpack_sockaddr_in6+0x360>  // b.none
    611c:	ldr	x0, [sp, #40]
    6120:	ldr	x1, [x0, #32]
    6124:	ldr	x0, [sp, #64]
    6128:	sub	x0, x1, x0
    612c:	cmp	x0, #0x18
    6130:	cset	w0, le
    6134:	and	w0, w0, #0xff
    6138:	and	x0, x0, #0xff
    613c:	cmp	x0, #0x0
    6140:	b.eq	615c <XS_Socket_unpack_sockaddr_in6+0x26c>  // b.none
    6144:	mov	x3, #0x4                   	// #4
    6148:	ldr	x2, [sp, #64]
    614c:	ldr	x1, [sp, #64]
    6150:	ldr	x0, [sp, #40]
    6154:	bl	2e50 <Perl_stack_grow@plt>
    6158:	str	x0, [sp, #64]
    615c:	ldr	x0, [sp, #64]
    6160:	add	x0, x0, #0x8
    6164:	str	x0, [sp, #64]
    6168:	ldr	x0, [sp, #40]
    616c:	bl	3130 <Perl_sv_newmortal@plt>
    6170:	mov	x1, x0
    6174:	ldr	x0, [sp, #64]
    6178:	str	x1, [x0]
    617c:	ldr	x0, [sp, #64]
    6180:	ldr	x19, [x0]
    6184:	ldrh	w0, [sp, #106]
    6188:	bl	2ee0 <ntohs@plt>
    618c:	and	w0, w0, #0xffff
    6190:	and	x0, x0, #0xffff
    6194:	mov	x2, x0
    6198:	mov	x1, x19
    619c:	ldr	x0, [sp, #40]
    61a0:	bl	3100 <Perl_sv_setiv@plt>
    61a4:	ldr	x0, [sp, #64]
    61a8:	add	x0, x0, #0x8
    61ac:	str	x0, [sp, #64]
    61b0:	ldr	x1, [sp, #96]
    61b4:	ldr	x0, [sp, #40]
    61b8:	bl	3010 <Perl_sv_2mortal@plt>
    61bc:	mov	x1, x0
    61c0:	ldr	x0, [sp, #64]
    61c4:	str	x1, [x0]
    61c8:	ldr	x0, [sp, #64]
    61cc:	add	x0, x0, #0x8
    61d0:	str	x0, [sp, #64]
    61d4:	ldr	x0, [sp, #40]
    61d8:	bl	3130 <Perl_sv_newmortal@plt>
    61dc:	mov	x1, x0
    61e0:	ldr	x0, [sp, #64]
    61e4:	str	x1, [x0]
    61e8:	ldr	x0, [sp, #64]
    61ec:	ldr	x0, [x0]
    61f0:	ldr	w1, [sp, #128]
    61f4:	mov	w1, w1
    61f8:	mov	x2, x1
    61fc:	mov	x1, x0
    6200:	ldr	x0, [sp, #40]
    6204:	bl	3100 <Perl_sv_setiv@plt>
    6208:	ldr	x0, [sp, #64]
    620c:	add	x0, x0, #0x8
    6210:	str	x0, [sp, #64]
    6214:	ldr	x0, [sp, #40]
    6218:	bl	3130 <Perl_sv_newmortal@plt>
    621c:	mov	x1, x0
    6220:	ldr	x0, [sp, #64]
    6224:	str	x1, [x0]
    6228:	ldr	x0, [sp, #64]
    622c:	ldr	x19, [x0]
    6230:	ldr	w0, [sp, #108]
    6234:	bl	2e80 <ntohl@plt>
    6238:	mov	w0, w0
    623c:	mov	x2, x0
    6240:	mov	x1, x19
    6244:	ldr	x0, [sp, #40]
    6248:	bl	3100 <Perl_sv_setiv@plt>
    624c:	b	6274 <XS_Socket_unpack_sockaddr_in6+0x384>
    6250:	ldr	x0, [sp, #64]
    6254:	add	x0, x0, #0x8
    6258:	str	x0, [sp, #64]
    625c:	ldr	x1, [sp, #96]
    6260:	ldr	x0, [sp, #40]
    6264:	bl	3010 <Perl_sv_2mortal@plt>
    6268:	mov	x1, x0
    626c:	ldr	x0, [sp, #64]
    6270:	str	x1, [x0]
    6274:	ldr	x0, [sp, #40]
    6278:	ldr	x1, [sp, #64]
    627c:	str	x1, [x0]
    6280:	nop
    6284:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    6288:	ldr	x0, [x0, #4048]
    628c:	ldr	x1, [sp, #136]
    6290:	ldr	x0, [x0]
    6294:	eor	x0, x1, x0
    6298:	cmp	x0, #0x0
    629c:	b.eq	62a4 <XS_Socket_unpack_sockaddr_in6+0x3b4>  // b.none
    62a0:	bl	2f80 <__stack_chk_fail@plt>
    62a4:	ldr	x19, [sp, #16]
    62a8:	ldp	x29, x30, [sp], #144
    62ac:	ret

00000000000062b0 <XS_Socket_inet_ntop>:
    62b0:	stp	x29, x30, [sp, #-192]!
    62b4:	mov	x29, sp
    62b8:	str	x19, [sp, #16]
    62bc:	str	x0, [sp, #40]
    62c0:	str	x1, [sp, #32]
    62c4:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    62c8:	ldr	x0, [x0, #4048]
    62cc:	ldr	x1, [x0]
    62d0:	str	x1, [sp, #184]
    62d4:	mov	x1, #0x0                   	// #0
    62d8:	ldr	x0, [sp, #40]
    62dc:	ldr	x0, [x0]
    62e0:	str	x0, [sp, #80]
    62e4:	ldr	x0, [sp, #40]
    62e8:	bl	3300 <S_POPMARK>
    62ec:	str	w0, [sp, #60]
    62f0:	ldr	x0, [sp, #40]
    62f4:	ldr	x1, [x0, #24]
    62f8:	ldr	w0, [sp, #60]
    62fc:	add	w2, w0, #0x1
    6300:	str	w2, [sp, #60]
    6304:	sxtw	x0, w0
    6308:	lsl	x0, x0, #3
    630c:	add	x0, x1, x0
    6310:	str	x0, [sp, #88]
    6314:	ldr	x1, [sp, #80]
    6318:	ldr	x0, [sp, #88]
    631c:	sub	x0, x1, x0
    6320:	asr	x0, x0, #3
    6324:	str	w0, [sp, #64]
    6328:	ldr	w0, [sp, #64]
    632c:	cmp	w0, #0x2
    6330:	b.eq	6344 <XS_Socket_inet_ntop+0x94>  // b.none
    6334:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6338:	add	x1, x0, #0xc78
    633c:	ldr	x0, [sp, #32]
    6340:	bl	2fa0 <Perl_croak_xs_usage@plt>
    6344:	ldr	x0, [sp, #40]
    6348:	ldr	x1, [x0, #24]
    634c:	ldrsw	x0, [sp, #60]
    6350:	lsl	x0, x0, #3
    6354:	add	x0, x1, x0
    6358:	ldr	x0, [x0]
    635c:	ldr	w1, [x0, #12]
    6360:	mov	w0, #0x100                 	// #256
    6364:	movk	w0, #0x20, lsl #16
    6368:	and	w0, w1, w0
    636c:	cmp	w0, #0x100
    6370:	b.ne	6398 <XS_Socket_inet_ntop+0xe8>  // b.any
    6374:	ldr	x0, [sp, #40]
    6378:	ldr	x1, [x0, #24]
    637c:	ldrsw	x0, [sp, #60]
    6380:	lsl	x0, x0, #3
    6384:	add	x0, x1, x0
    6388:	ldr	x0, [x0]
    638c:	ldr	x0, [x0]
    6390:	ldr	x0, [x0, #32]
    6394:	b	63c0 <XS_Socket_inet_ntop+0x110>
    6398:	ldr	x0, [sp, #40]
    639c:	ldr	x1, [x0, #24]
    63a0:	ldrsw	x0, [sp, #60]
    63a4:	lsl	x0, x0, #3
    63a8:	add	x0, x1, x0
    63ac:	ldr	x0, [x0]
    63b0:	mov	w2, #0x2                   	// #2
    63b4:	mov	x1, x0
    63b8:	ldr	x0, [sp, #40]
    63bc:	bl	2e00 <Perl_sv_2iv_flags@plt>
    63c0:	str	w0, [sp, #68]
    63c4:	ldr	x0, [sp, #40]
    63c8:	ldr	x1, [x0, #24]
    63cc:	ldrsw	x0, [sp, #60]
    63d0:	add	x0, x0, #0x1
    63d4:	lsl	x0, x0, #3
    63d8:	add	x0, x1, x0
    63dc:	ldr	x0, [x0]
    63e0:	str	x0, [sp, #96]
    63e4:	ldr	x0, [sp, #96]
    63e8:	ldr	w0, [x0, #12]
    63ec:	and	w0, w0, #0x20000000
    63f0:	cmp	w0, #0x0
    63f4:	b.eq	6450 <XS_Socket_inet_ntop+0x1a0>  // b.none
    63f8:	ldr	x0, [sp, #40]
    63fc:	ldr	x0, [x0, #224]
    6400:	ldr	w0, [x0, #56]
    6404:	lsr	w0, w0, #3
    6408:	mov	w0, w0
    640c:	and	x0, x0, #0x1
    6410:	cmp	x0, #0x0
    6414:	b.ne	6450 <XS_Socket_inet_ntop+0x1a0>  // b.any
    6418:	mov	w2, #0x1                   	// #1
    641c:	ldr	x1, [sp, #96]
    6420:	ldr	x0, [sp, #40]
    6424:	bl	2e90 <Perl_sv_utf8_downgrade@plt>
    6428:	and	w0, w0, #0xff
    642c:	eor	w0, w0, #0x1
    6430:	and	w0, w0, #0xff
    6434:	cmp	w0, #0x0
    6438:	b.eq	6450 <XS_Socket_inet_ntop+0x1a0>  // b.none
    643c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6440:	add	x1, x0, #0xc90
    6444:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6448:	add	x0, x0, #0x990
    644c:	bl	2fd0 <Perl_croak_nocontext@plt>
    6450:	ldr	x0, [sp, #96]
    6454:	ldr	w1, [x0, #12]
    6458:	mov	w0, #0x400                 	// #1024
    645c:	movk	w0, #0x20, lsl #16
    6460:	and	w0, w1, w0
    6464:	cmp	w0, #0x400
    6468:	b.ne	6488 <XS_Socket_inet_ntop+0x1d8>  // b.any
    646c:	ldr	x0, [sp, #96]
    6470:	ldr	x0, [x0]
    6474:	ldr	x0, [x0, #16]
    6478:	str	x0, [sp, #72]
    647c:	ldr	x0, [sp, #96]
    6480:	ldr	x0, [x0, #16]
    6484:	b	64a0 <XS_Socket_inet_ntop+0x1f0>
    6488:	add	x0, sp, #0x48
    648c:	mov	w3, #0x2                   	// #2
    6490:	mov	x2, x0
    6494:	ldr	x1, [sp, #96]
    6498:	ldr	x0, [sp, #40]
    649c:	bl	2f40 <Perl_sv_2pv_flags@plt>
    64a0:	str	x0, [sp, #104]
    64a4:	ldr	w0, [sp, #68]
    64a8:	cmp	w0, #0x2
    64ac:	b.eq	64c0 <XS_Socket_inet_ntop+0x210>  // b.none
    64b0:	ldr	w0, [sp, #68]
    64b4:	cmp	w0, #0xa
    64b8:	b.eq	64e0 <XS_Socket_inet_ntop+0x230>  // b.none
    64bc:	b	6500 <XS_Socket_inet_ntop+0x250>
    64c0:	ldr	x0, [sp, #72]
    64c4:	cmp	x0, #0x4
    64c8:	b.eq	6518 <XS_Socket_inet_ntop+0x268>  // b.none
    64cc:	ldr	x0, [sp, #72]
    64d0:	mov	x1, x0
    64d4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    64d8:	add	x0, x0, #0xca8
    64dc:	bl	2fd0 <Perl_croak_nocontext@plt>
    64e0:	ldr	x0, [sp, #72]
    64e4:	cmp	x0, #0x10
    64e8:	b.eq	6520 <XS_Socket_inet_ntop+0x270>  // b.none
    64ec:	ldr	x0, [sp, #72]
    64f0:	mov	x1, x0
    64f4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    64f8:	add	x0, x0, #0xcf8
    64fc:	bl	2fd0 <Perl_croak_nocontext@plt>
    6500:	ldr	w2, [sp, #68]
    6504:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6508:	add	x1, x0, #0xc90
    650c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6510:	add	x0, x0, #0xd48
    6514:	bl	2fd0 <Perl_croak_nocontext@plt>
    6518:	nop
    651c:	b	6524 <XS_Socket_inet_ntop+0x274>
    6520:	nop
    6524:	ldr	x0, [sp, #72]
    6528:	cmp	x0, #0xf
    652c:	b.hi	6570 <XS_Socket_inet_ntop+0x2c0>  // b.pmore
    6530:	ldr	x1, [sp, #72]
    6534:	add	x0, sp, #0x78
    6538:	mov	x2, x1
    653c:	ldr	x1, [sp, #104]
    6540:	bl	2de0 <memcpy@plt>
    6544:	ldr	x0, [sp, #72]
    6548:	add	x1, sp, #0x78
    654c:	add	x3, x1, x0
    6550:	ldr	x0, [sp, #72]
    6554:	mov	x1, #0x10                  	// #16
    6558:	sub	x0, x1, x0
    655c:	mov	x2, x0
    6560:	mov	w1, #0x0                   	// #0
    6564:	mov	x0, x3
    6568:	bl	2f30 <memset@plt>
    656c:	b	657c <XS_Socket_inet_ntop+0x2cc>
    6570:	ldr	x0, [sp, #104]
    6574:	ldp	x0, x1, [x0]
    6578:	stp	x0, x1, [sp, #120]
    657c:	add	x1, sp, #0x88
    6580:	add	x0, sp, #0x78
    6584:	mov	w3, #0x2e                  	// #46
    6588:	mov	x2, x1
    658c:	mov	x1, x0
    6590:	ldr	w0, [sp, #68]
    6594:	bl	3140 <inet_ntop@plt>
    6598:	add	x0, sp, #0x88
    659c:	bl	2e20 <strlen@plt>
    65a0:	mov	x1, x0
    65a4:	add	x0, sp, #0x88
    65a8:	mov	x2, x1
    65ac:	mov	x1, x0
    65b0:	ldr	x0, [sp, #40]
    65b4:	bl	3120 <Perl_newSVpvn@plt>
    65b8:	mov	x2, x0
    65bc:	ldr	x0, [sp, #40]
    65c0:	ldr	x1, [x0, #24]
    65c4:	ldrsw	x0, [sp, #60]
    65c8:	lsl	x0, x0, #3
    65cc:	add	x19, x1, x0
    65d0:	mov	x1, x2
    65d4:	ldr	x0, [sp, #40]
    65d8:	bl	3010 <Perl_sv_2mortal@plt>
    65dc:	str	x0, [x19]
    65e0:	mov	x0, #0x1                   	// #1
    65e4:	str	x0, [sp, #112]
    65e8:	ldr	x0, [sp, #40]
    65ec:	ldr	x1, [x0, #24]
    65f0:	ldrsw	x2, [sp, #60]
    65f4:	ldr	x0, [sp, #112]
    65f8:	add	x0, x2, x0
    65fc:	lsl	x0, x0, #3
    6600:	sub	x0, x0, #0x8
    6604:	add	x1, x1, x0
    6608:	ldr	x0, [sp, #40]
    660c:	str	x1, [x0]
    6610:	nop
    6614:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    6618:	ldr	x0, [x0, #4048]
    661c:	ldr	x1, [sp, #184]
    6620:	ldr	x0, [x0]
    6624:	eor	x0, x1, x0
    6628:	cmp	x0, #0x0
    662c:	b.eq	6634 <XS_Socket_inet_ntop+0x384>  // b.none
    6630:	bl	2f80 <__stack_chk_fail@plt>
    6634:	ldr	x19, [sp, #16]
    6638:	ldp	x29, x30, [sp], #192
    663c:	ret

0000000000006640 <XS_Socket_inet_pton>:
    6640:	stp	x29, x30, [sp, #-128]!
    6644:	mov	x29, sp
    6648:	str	x19, [sp, #16]
    664c:	str	x0, [sp, #40]
    6650:	str	x1, [sp, #32]
    6654:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    6658:	ldr	x0, [x0, #4048]
    665c:	ldr	x1, [x0]
    6660:	str	x1, [sp, #120]
    6664:	mov	x1, #0x0                   	// #0
    6668:	ldr	x0, [sp, #40]
    666c:	ldr	x0, [x0]
    6670:	str	x0, [sp, #72]
    6674:	ldr	x0, [sp, #40]
    6678:	bl	3300 <S_POPMARK>
    667c:	str	w0, [sp, #56]
    6680:	ldr	x0, [sp, #40]
    6684:	ldr	x1, [x0, #24]
    6688:	ldr	w0, [sp, #56]
    668c:	add	w2, w0, #0x1
    6690:	str	w2, [sp, #56]
    6694:	sxtw	x0, w0
    6698:	lsl	x0, x0, #3
    669c:	add	x0, x1, x0
    66a0:	str	x0, [sp, #80]
    66a4:	ldr	x1, [sp, #72]
    66a8:	ldr	x0, [sp, #80]
    66ac:	sub	x0, x1, x0
    66b0:	asr	x0, x0, #3
    66b4:	str	w0, [sp, #60]
    66b8:	ldr	w0, [sp, #60]
    66bc:	cmp	w0, #0x2
    66c0:	b.eq	66d4 <XS_Socket_inet_pton+0x94>  // b.none
    66c4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    66c8:	add	x1, x0, #0xd90
    66cc:	ldr	x0, [sp, #32]
    66d0:	bl	2fa0 <Perl_croak_xs_usage@plt>
    66d4:	ldr	x0, [sp, #40]
    66d8:	ldr	x1, [x0, #24]
    66dc:	ldrsw	x0, [sp, #56]
    66e0:	lsl	x0, x0, #3
    66e4:	add	x0, x1, x0
    66e8:	ldr	x0, [x0]
    66ec:	ldr	w1, [x0, #12]
    66f0:	mov	w0, #0x100                 	// #256
    66f4:	movk	w0, #0x20, lsl #16
    66f8:	and	w0, w1, w0
    66fc:	cmp	w0, #0x100
    6700:	b.ne	6728 <XS_Socket_inet_pton+0xe8>  // b.any
    6704:	ldr	x0, [sp, #40]
    6708:	ldr	x1, [x0, #24]
    670c:	ldrsw	x0, [sp, #56]
    6710:	lsl	x0, x0, #3
    6714:	add	x0, x1, x0
    6718:	ldr	x0, [x0]
    671c:	ldr	x0, [x0]
    6720:	ldr	x0, [x0, #32]
    6724:	b	6750 <XS_Socket_inet_pton+0x110>
    6728:	ldr	x0, [sp, #40]
    672c:	ldr	x1, [x0, #24]
    6730:	ldrsw	x0, [sp, #56]
    6734:	lsl	x0, x0, #3
    6738:	add	x0, x1, x0
    673c:	ldr	x0, [x0]
    6740:	mov	w2, #0x2                   	// #2
    6744:	mov	x1, x0
    6748:	ldr	x0, [sp, #40]
    674c:	bl	2e00 <Perl_sv_2iv_flags@plt>
    6750:	str	w0, [sp, #64]
    6754:	ldr	x0, [sp, #40]
    6758:	ldr	x1, [x0, #24]
    675c:	ldrsw	x0, [sp, #56]
    6760:	add	x0, x0, #0x1
    6764:	lsl	x0, x0, #3
    6768:	add	x0, x1, x0
    676c:	ldr	x0, [x0]
    6770:	ldr	w1, [x0, #12]
    6774:	mov	w0, #0x400                 	// #1024
    6778:	movk	w0, #0x20, lsl #16
    677c:	and	w0, w1, w0
    6780:	cmp	w0, #0x400
    6784:	b.ne	67ac <XS_Socket_inet_pton+0x16c>  // b.any
    6788:	ldr	x0, [sp, #40]
    678c:	ldr	x1, [x0, #24]
    6790:	ldrsw	x0, [sp, #56]
    6794:	add	x0, x0, #0x1
    6798:	lsl	x0, x0, #3
    679c:	add	x0, x1, x0
    67a0:	ldr	x0, [x0]
    67a4:	ldr	x0, [x0, #16]
    67a8:	b	67dc <XS_Socket_inet_pton+0x19c>
    67ac:	ldr	x0, [sp, #40]
    67b0:	ldr	x1, [x0, #24]
    67b4:	ldrsw	x0, [sp, #56]
    67b8:	add	x0, x0, #0x1
    67bc:	lsl	x0, x0, #3
    67c0:	add	x0, x1, x0
    67c4:	ldr	x0, [x0]
    67c8:	mov	w3, #0x2                   	// #2
    67cc:	mov	x2, #0x0                   	// #0
    67d0:	mov	x1, x0
    67d4:	ldr	x0, [sp, #40]
    67d8:	bl	2f40 <Perl_sv_2pv_flags@plt>
    67dc:	str	x0, [sp, #88]
    67e0:	str	wzr, [sp, #52]
    67e4:	ldr	w0, [sp, #64]
    67e8:	cmp	w0, #0x2
    67ec:	b.eq	6800 <XS_Socket_inet_pton+0x1c0>  // b.none
    67f0:	ldr	w0, [sp, #64]
    67f4:	cmp	w0, #0xa
    67f8:	b.eq	680c <XS_Socket_inet_pton+0x1cc>  // b.none
    67fc:	b	6818 <XS_Socket_inet_pton+0x1d8>
    6800:	mov	w0, #0x4                   	// #4
    6804:	str	w0, [sp, #52]
    6808:	b	6830 <XS_Socket_inet_pton+0x1f0>
    680c:	mov	w0, #0x10                  	// #16
    6810:	str	w0, [sp, #52]
    6814:	b	6830 <XS_Socket_inet_pton+0x1f0>
    6818:	ldr	w2, [sp, #64]
    681c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6820:	add	x1, x0, #0xda0
    6824:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6828:	add	x0, x0, #0xd48
    682c:	bl	2fd0 <Perl_croak_nocontext@plt>
    6830:	ldr	x0, [sp, #88]
    6834:	ldrb	w0, [x0]
    6838:	cmp	w0, #0x0
    683c:	b.eq	6864 <XS_Socket_inet_pton+0x224>  // b.none
    6840:	add	x0, sp, #0x68
    6844:	mov	x2, x0
    6848:	ldr	x1, [sp, #88]
    684c:	ldr	w0, [sp, #64]
    6850:	bl	3000 <inet_pton@plt>
    6854:	cmp	w0, #0x0
    6858:	b.eq	6864 <XS_Socket_inet_pton+0x224>  // b.none
    685c:	mov	w0, #0x1                   	// #1
    6860:	b	6868 <XS_Socket_inet_pton+0x228>
    6864:	mov	w0, #0x0                   	// #0
    6868:	str	w0, [sp, #68]
    686c:	ldr	x0, [sp, #40]
    6870:	ldr	x1, [x0, #24]
    6874:	ldrsw	x0, [sp, #56]
    6878:	lsl	x0, x0, #3
    687c:	add	x19, x1, x0
    6880:	ldr	x0, [sp, #40]
    6884:	bl	3130 <Perl_sv_newmortal@plt>
    6888:	str	x0, [x19]
    688c:	ldr	w0, [sp, #68]
    6890:	cmp	w0, #0x0
    6894:	b.eq	68cc <XS_Socket_inet_pton+0x28c>  // b.none
    6898:	ldr	x0, [sp, #40]
    689c:	ldr	x1, [x0, #24]
    68a0:	ldrsw	x0, [sp, #56]
    68a4:	lsl	x0, x0, #3
    68a8:	add	x0, x1, x0
    68ac:	ldr	x0, [x0]
    68b0:	ldrsw	x2, [sp, #52]
    68b4:	add	x1, sp, #0x68
    68b8:	mov	x3, x2
    68bc:	mov	x2, x1
    68c0:	mov	x1, x0
    68c4:	ldr	x0, [sp, #40]
    68c8:	bl	3090 <Perl_sv_setpvn@plt>
    68cc:	mov	x0, #0x1                   	// #1
    68d0:	str	x0, [sp, #96]
    68d4:	ldr	x0, [sp, #40]
    68d8:	ldr	x1, [x0, #24]
    68dc:	ldrsw	x2, [sp, #56]
    68e0:	ldr	x0, [sp, #96]
    68e4:	add	x0, x2, x0
    68e8:	lsl	x0, x0, #3
    68ec:	sub	x0, x0, #0x8
    68f0:	add	x1, x1, x0
    68f4:	ldr	x0, [sp, #40]
    68f8:	str	x1, [x0]
    68fc:	nop
    6900:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    6904:	ldr	x0, [x0, #4048]
    6908:	ldr	x1, [sp, #120]
    690c:	ldr	x0, [x0]
    6910:	eor	x0, x1, x0
    6914:	cmp	x0, #0x0
    6918:	b.eq	6920 <XS_Socket_inet_pton+0x2e0>  // b.none
    691c:	bl	2f80 <__stack_chk_fail@plt>
    6920:	ldr	x19, [sp, #16]
    6924:	ldp	x29, x30, [sp], #128
    6928:	ret

000000000000692c <XS_Socket_pack_ip_mreq>:
    692c:	stp	x29, x30, [sp, #-144]!
    6930:	mov	x29, sp
    6934:	str	x19, [sp, #16]
    6938:	str	x0, [sp, #40]
    693c:	str	x1, [sp, #32]
    6940:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    6944:	ldr	x0, [x0, #4048]
    6948:	ldr	x1, [x0]
    694c:	str	x1, [sp, #136]
    6950:	mov	x1, #0x0                   	// #0
    6954:	ldr	x0, [sp, #40]
    6958:	ldr	x0, [x0]
    695c:	str	x0, [sp, #88]
    6960:	ldr	x0, [sp, #40]
    6964:	bl	3300 <S_POPMARK>
    6968:	str	w0, [sp, #56]
    696c:	ldr	x0, [sp, #40]
    6970:	ldr	x1, [x0, #24]
    6974:	ldr	w0, [sp, #56]
    6978:	add	w2, w0, #0x1
    697c:	str	w2, [sp, #56]
    6980:	sxtw	x0, w0
    6984:	lsl	x0, x0, #3
    6988:	add	x0, x1, x0
    698c:	str	x0, [sp, #96]
    6990:	ldr	x1, [sp, #88]
    6994:	ldr	x0, [sp, #96]
    6998:	sub	x0, x1, x0
    699c:	asr	x0, x0, #3
    69a0:	str	w0, [sp, #60]
    69a4:	ldr	w0, [sp, #60]
    69a8:	cmp	w0, #0x0
    69ac:	b.le	69bc <XS_Socket_pack_ip_mreq+0x90>
    69b0:	ldr	w0, [sp, #60]
    69b4:	cmp	w0, #0x2
    69b8:	b.le	69cc <XS_Socket_pack_ip_mreq+0xa0>
    69bc:	adrp	x0, 8000 <boot_Socket+0x4b0>
    69c0:	add	x1, x0, #0xdb8
    69c4:	ldr	x0, [sp, #32]
    69c8:	bl	2fa0 <Perl_croak_xs_usage@plt>
    69cc:	ldr	x0, [sp, #40]
    69d0:	ldr	x1, [x0, #24]
    69d4:	ldrsw	x0, [sp, #56]
    69d8:	lsl	x0, x0, #3
    69dc:	add	x0, x1, x0
    69e0:	ldr	x0, [x0]
    69e4:	str	x0, [sp, #104]
    69e8:	ldr	w0, [sp, #60]
    69ec:	cmp	w0, #0x1
    69f0:	b.gt	6a04 <XS_Socket_pack_ip_mreq+0xd8>
    69f4:	ldr	x0, [sp, #40]
    69f8:	add	x0, x0, #0x150
    69fc:	str	x0, [sp, #80]
    6a00:	b	6a24 <XS_Socket_pack_ip_mreq+0xf8>
    6a04:	ldr	x0, [sp, #40]
    6a08:	ldr	x1, [x0, #24]
    6a0c:	ldrsw	x0, [sp, #56]
    6a10:	add	x0, x0, #0x1
    6a14:	lsl	x0, x0, #3
    6a18:	add	x0, x1, x0
    6a1c:	ldr	x0, [x0]
    6a20:	str	x0, [sp, #80]
    6a24:	ldr	x0, [sp, #104]
    6a28:	ldr	w0, [x0, #12]
    6a2c:	and	w0, w0, #0x20000000
    6a30:	cmp	w0, #0x0
    6a34:	b.eq	6a90 <XS_Socket_pack_ip_mreq+0x164>  // b.none
    6a38:	ldr	x0, [sp, #40]
    6a3c:	ldr	x0, [x0, #224]
    6a40:	ldr	w0, [x0, #56]
    6a44:	lsr	w0, w0, #3
    6a48:	mov	w0, w0
    6a4c:	and	x0, x0, #0x1
    6a50:	cmp	x0, #0x0
    6a54:	b.ne	6a90 <XS_Socket_pack_ip_mreq+0x164>  // b.any
    6a58:	mov	w2, #0x1                   	// #1
    6a5c:	ldr	x1, [sp, #104]
    6a60:	ldr	x0, [sp, #40]
    6a64:	bl	2e90 <Perl_sv_utf8_downgrade@plt>
    6a68:	and	w0, w0, #0xff
    6a6c:	eor	w0, w0, #0x1
    6a70:	and	w0, w0, #0xff
    6a74:	cmp	w0, #0x0
    6a78:	b.eq	6a90 <XS_Socket_pack_ip_mreq+0x164>  // b.none
    6a7c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6a80:	add	x1, x0, #0xde0
    6a84:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6a88:	add	x0, x0, #0x990
    6a8c:	bl	2fd0 <Perl_croak_nocontext@plt>
    6a90:	ldr	x0, [sp, #104]
    6a94:	ldr	w1, [x0, #12]
    6a98:	mov	w0, #0x400                 	// #1024
    6a9c:	movk	w0, #0x2020, lsl #16
    6aa0:	and	w0, w1, w0
    6aa4:	cmp	w0, #0x400
    6aa8:	b.ne	6ac8 <XS_Socket_pack_ip_mreq+0x19c>  // b.any
    6aac:	ldr	x0, [sp, #104]
    6ab0:	ldr	x0, [x0]
    6ab4:	ldr	x0, [x0, #16]
    6ab8:	str	x0, [sp, #72]
    6abc:	ldr	x0, [sp, #104]
    6ac0:	ldr	x0, [x0, #16]
    6ac4:	b	6adc <XS_Socket_pack_ip_mreq+0x1b0>
    6ac8:	add	x0, sp, #0x48
    6acc:	mov	x2, x0
    6ad0:	ldr	x1, [sp, #104]
    6ad4:	ldr	x0, [sp, #40]
    6ad8:	bl	2f20 <Perl_sv_2pvbyte@plt>
    6adc:	str	x0, [sp, #112]
    6ae0:	ldr	x0, [sp, #72]
    6ae4:	cmp	x0, #0x4
    6ae8:	b.eq	6b0c <XS_Socket_pack_ip_mreq+0x1e0>  // b.none
    6aec:	ldr	x0, [sp, #72]
    6af0:	mov	x3, #0x4                   	// #4
    6af4:	mov	x2, x0
    6af8:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6afc:	add	x1, x0, #0xde0
    6b00:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6b04:	add	x0, x0, #0xc20
    6b08:	bl	2fd0 <Perl_croak_nocontext@plt>
    6b0c:	add	x0, sp, #0x40
    6b10:	mov	x2, #0x8                   	// #8
    6b14:	mov	w1, #0x0                   	// #0
    6b18:	bl	2f30 <memset@plt>
    6b1c:	ldr	x0, [sp, #112]
    6b20:	ldr	w0, [x0]
    6b24:	str	w0, [sp, #64]
    6b28:	ldr	x0, [sp, #80]
    6b2c:	ldr	w0, [x0, #12]
    6b30:	and	w0, w0, #0xff00
    6b34:	cmp	w0, #0x0
    6b38:	b.eq	6c34 <XS_Socket_pack_ip_mreq+0x308>  // b.none
    6b3c:	ldr	x0, [sp, #80]
    6b40:	ldr	w0, [x0, #12]
    6b44:	and	w0, w0, #0x20000000
    6b48:	cmp	w0, #0x0
    6b4c:	b.eq	6ba8 <XS_Socket_pack_ip_mreq+0x27c>  // b.none
    6b50:	ldr	x0, [sp, #40]
    6b54:	ldr	x0, [x0, #224]
    6b58:	ldr	w0, [x0, #56]
    6b5c:	lsr	w0, w0, #3
    6b60:	mov	w0, w0
    6b64:	and	x0, x0, #0x1
    6b68:	cmp	x0, #0x0
    6b6c:	b.ne	6ba8 <XS_Socket_pack_ip_mreq+0x27c>  // b.any
    6b70:	mov	w2, #0x1                   	// #1
    6b74:	ldr	x1, [sp, #80]
    6b78:	ldr	x0, [sp, #40]
    6b7c:	bl	2e90 <Perl_sv_utf8_downgrade@plt>
    6b80:	and	w0, w0, #0xff
    6b84:	eor	w0, w0, #0x1
    6b88:	and	w0, w0, #0xff
    6b8c:	cmp	w0, #0x0
    6b90:	b.eq	6ba8 <XS_Socket_pack_ip_mreq+0x27c>  // b.none
    6b94:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6b98:	add	x1, x0, #0xde0
    6b9c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6ba0:	add	x0, x0, #0x990
    6ba4:	bl	2fd0 <Perl_croak_nocontext@plt>
    6ba8:	ldr	x0, [sp, #80]
    6bac:	ldr	w1, [x0, #12]
    6bb0:	mov	w0, #0x400                 	// #1024
    6bb4:	movk	w0, #0x2020, lsl #16
    6bb8:	and	w0, w1, w0
    6bbc:	cmp	w0, #0x400
    6bc0:	b.ne	6be0 <XS_Socket_pack_ip_mreq+0x2b4>  // b.any
    6bc4:	ldr	x0, [sp, #80]
    6bc8:	ldr	x0, [x0]
    6bcc:	ldr	x0, [x0, #16]
    6bd0:	str	x0, [sp, #72]
    6bd4:	ldr	x0, [sp, #80]
    6bd8:	ldr	x0, [x0, #16]
    6bdc:	b	6bf4 <XS_Socket_pack_ip_mreq+0x2c8>
    6be0:	add	x0, sp, #0x48
    6be4:	mov	x2, x0
    6be8:	ldr	x1, [sp, #80]
    6bec:	ldr	x0, [sp, #40]
    6bf0:	bl	2f20 <Perl_sv_2pvbyte@plt>
    6bf4:	str	x0, [sp, #120]
    6bf8:	ldr	x0, [sp, #72]
    6bfc:	cmp	x0, #0x4
    6c00:	b.eq	6c24 <XS_Socket_pack_ip_mreq+0x2f8>  // b.none
    6c04:	ldr	x0, [sp, #72]
    6c08:	mov	x3, #0x4                   	// #4
    6c0c:	mov	x2, x0
    6c10:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6c14:	add	x1, x0, #0xde0
    6c18:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6c1c:	add	x0, x0, #0xc20
    6c20:	bl	2fd0 <Perl_croak_nocontext@plt>
    6c24:	ldr	x0, [sp, #120]
    6c28:	ldr	w0, [x0]
    6c2c:	str	w0, [sp, #68]
    6c30:	b	6c38 <XS_Socket_pack_ip_mreq+0x30c>
    6c34:	str	wzr, [sp, #68]
    6c38:	add	x0, sp, #0x40
    6c3c:	mov	x2, #0x8                   	// #8
    6c40:	mov	x1, x0
    6c44:	ldr	x0, [sp, #40]
    6c48:	bl	3120 <Perl_newSVpvn@plt>
    6c4c:	mov	x2, x0
    6c50:	ldr	x0, [sp, #40]
    6c54:	ldr	x1, [x0, #24]
    6c58:	ldrsw	x0, [sp, #56]
    6c5c:	lsl	x0, x0, #3
    6c60:	add	x19, x1, x0
    6c64:	mov	x1, x2
    6c68:	ldr	x0, [sp, #40]
    6c6c:	bl	3010 <Perl_sv_2mortal@plt>
    6c70:	str	x0, [x19]
    6c74:	mov	x0, #0x1                   	// #1
    6c78:	str	x0, [sp, #128]
    6c7c:	ldr	x0, [sp, #40]
    6c80:	ldr	x1, [x0, #24]
    6c84:	ldrsw	x2, [sp, #56]
    6c88:	ldr	x0, [sp, #128]
    6c8c:	add	x0, x2, x0
    6c90:	lsl	x0, x0, #3
    6c94:	sub	x0, x0, #0x8
    6c98:	add	x1, x1, x0
    6c9c:	ldr	x0, [sp, #40]
    6ca0:	str	x1, [x0]
    6ca4:	nop
    6ca8:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    6cac:	ldr	x0, [x0, #4048]
    6cb0:	ldr	x1, [sp, #136]
    6cb4:	ldr	x0, [x0]
    6cb8:	eor	x0, x1, x0
    6cbc:	cmp	x0, #0x0
    6cc0:	b.eq	6cc8 <XS_Socket_pack_ip_mreq+0x39c>  // b.none
    6cc4:	bl	2f80 <__stack_chk_fail@plt>
    6cc8:	ldr	x19, [sp, #16]
    6ccc:	ldp	x29, x30, [sp], #144
    6cd0:	ret

0000000000006cd4 <XS_Socket_unpack_ip_mreq>:
    6cd4:	stp	x29, x30, [sp, #-96]!
    6cd8:	mov	x29, sp
    6cdc:	str	x0, [sp, #24]
    6ce0:	str	x1, [sp, #16]
    6ce4:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    6ce8:	ldr	x0, [x0, #4048]
    6cec:	ldr	x1, [x0]
    6cf0:	str	x1, [sp, #88]
    6cf4:	mov	x1, #0x0                   	// #0
    6cf8:	ldr	x0, [sp, #24]
    6cfc:	ldr	x0, [x0]
    6d00:	str	x0, [sp, #56]
    6d04:	ldr	x0, [sp, #24]
    6d08:	bl	3300 <S_POPMARK>
    6d0c:	str	w0, [sp, #32]
    6d10:	ldr	x0, [sp, #24]
    6d14:	ldr	x1, [x0, #24]
    6d18:	ldr	w0, [sp, #32]
    6d1c:	add	w2, w0, #0x1
    6d20:	str	w2, [sp, #32]
    6d24:	sxtw	x0, w0
    6d28:	lsl	x0, x0, #3
    6d2c:	add	x0, x1, x0
    6d30:	str	x0, [sp, #64]
    6d34:	ldr	x1, [sp, #56]
    6d38:	ldr	x0, [sp, #64]
    6d3c:	sub	x0, x1, x0
    6d40:	asr	x0, x0, #3
    6d44:	str	w0, [sp, #36]
    6d48:	ldr	w0, [sp, #36]
    6d4c:	cmp	w0, #0x1
    6d50:	b.eq	6d64 <XS_Socket_unpack_ip_mreq+0x90>  // b.none
    6d54:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6d58:	add	x1, x0, #0xdf8
    6d5c:	ldr	x0, [sp, #16]
    6d60:	bl	2fa0 <Perl_croak_xs_usage@plt>
    6d64:	ldrsw	x0, [sp, #36]
    6d68:	lsl	x0, x0, #3
    6d6c:	neg	x0, x0
    6d70:	ldr	x1, [sp, #56]
    6d74:	add	x0, x1, x0
    6d78:	str	x0, [sp, #56]
    6d7c:	ldr	x0, [sp, #24]
    6d80:	ldr	x1, [x0, #24]
    6d84:	ldrsw	x0, [sp, #32]
    6d88:	lsl	x0, x0, #3
    6d8c:	add	x0, x1, x0
    6d90:	ldr	x0, [x0]
    6d94:	str	x0, [sp, #72]
    6d98:	ldr	x0, [sp, #72]
    6d9c:	ldr	w1, [x0, #12]
    6da0:	mov	w0, #0x400                 	// #1024
    6da4:	movk	w0, #0x2020, lsl #16
    6da8:	and	w0, w1, w0
    6dac:	cmp	w0, #0x400
    6db0:	b.ne	6dd0 <XS_Socket_unpack_ip_mreq+0xfc>  // b.any
    6db4:	ldr	x0, [sp, #72]
    6db8:	ldr	x0, [x0]
    6dbc:	ldr	x0, [x0, #16]
    6dc0:	str	x0, [sp, #48]
    6dc4:	ldr	x0, [sp, #72]
    6dc8:	ldr	x0, [x0, #16]
    6dcc:	b	6de4 <XS_Socket_unpack_ip_mreq+0x110>
    6dd0:	add	x0, sp, #0x30
    6dd4:	mov	x2, x0
    6dd8:	ldr	x1, [sp, #72]
    6ddc:	ldr	x0, [sp, #24]
    6de0:	bl	2f20 <Perl_sv_2pvbyte@plt>
    6de4:	str	x0, [sp, #80]
    6de8:	ldr	x0, [sp, #48]
    6dec:	cmp	x0, #0x8
    6df0:	b.eq	6e14 <XS_Socket_unpack_ip_mreq+0x140>  // b.none
    6df4:	ldr	x0, [sp, #48]
    6df8:	mov	x3, #0x8                   	// #8
    6dfc:	mov	x2, x0
    6e00:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6e04:	add	x1, x0, #0xe00
    6e08:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6e0c:	add	x0, x0, #0x9b8
    6e10:	bl	2fd0 <Perl_croak_nocontext@plt>
    6e14:	ldr	x0, [sp, #80]
    6e18:	ldr	x0, [x0]
    6e1c:	str	x0, [sp, #40]
    6e20:	ldr	x0, [sp, #24]
    6e24:	ldr	x1, [x0, #32]
    6e28:	ldr	x0, [sp, #56]
    6e2c:	sub	x0, x1, x0
    6e30:	cmp	x0, #0x8
    6e34:	cset	w0, le
    6e38:	and	w0, w0, #0xff
    6e3c:	and	x0, x0, #0xff
    6e40:	cmp	x0, #0x0
    6e44:	b.eq	6e60 <XS_Socket_unpack_ip_mreq+0x18c>  // b.none
    6e48:	mov	x3, #0x2                   	// #2
    6e4c:	ldr	x2, [sp, #56]
    6e50:	ldr	x1, [sp, #56]
    6e54:	ldr	x0, [sp, #24]
    6e58:	bl	2e50 <Perl_stack_grow@plt>
    6e5c:	str	x0, [sp, #56]
    6e60:	ldr	x0, [sp, #56]
    6e64:	add	x0, x0, #0x8
    6e68:	str	x0, [sp, #56]
    6e6c:	add	x0, sp, #0x28
    6e70:	mov	w3, #0x80000               	// #524288
    6e74:	mov	x2, #0x4                   	// #4
    6e78:	mov	x1, x0
    6e7c:	ldr	x0, [sp, #24]
    6e80:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    6e84:	mov	x1, x0
    6e88:	ldr	x0, [sp, #56]
    6e8c:	str	x1, [x0]
    6e90:	ldr	x0, [sp, #56]
    6e94:	add	x0, x0, #0x8
    6e98:	str	x0, [sp, #56]
    6e9c:	add	x0, sp, #0x28
    6ea0:	add	x0, x0, #0x4
    6ea4:	mov	w3, #0x80000               	// #524288
    6ea8:	mov	x2, #0x4                   	// #4
    6eac:	mov	x1, x0
    6eb0:	ldr	x0, [sp, #24]
    6eb4:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    6eb8:	mov	x1, x0
    6ebc:	ldr	x0, [sp, #56]
    6ec0:	str	x1, [x0]
    6ec4:	ldr	x0, [sp, #24]
    6ec8:	ldr	x1, [sp, #56]
    6ecc:	str	x1, [x0]
    6ed0:	nop
    6ed4:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    6ed8:	ldr	x0, [x0, #4048]
    6edc:	ldr	x1, [sp, #88]
    6ee0:	ldr	x0, [x0]
    6ee4:	eor	x0, x1, x0
    6ee8:	cmp	x0, #0x0
    6eec:	b.eq	6ef4 <XS_Socket_unpack_ip_mreq+0x220>  // b.none
    6ef0:	bl	2f80 <__stack_chk_fail@plt>
    6ef4:	ldp	x29, x30, [sp], #96
    6ef8:	ret

0000000000006efc <XS_Socket_pack_ip_mreq_source>:
    6efc:	stp	x29, x30, [sp, #-160]!
    6f00:	mov	x29, sp
    6f04:	str	x19, [sp, #16]
    6f08:	str	x0, [sp, #40]
    6f0c:	str	x1, [sp, #32]
    6f10:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    6f14:	ldr	x0, [x0, #4048]
    6f18:	ldr	x1, [x0]
    6f1c:	str	x1, [sp, #152]
    6f20:	mov	x1, #0x0                   	// #0
    6f24:	ldr	x0, [sp, #40]
    6f28:	ldr	x0, [x0]
    6f2c:	str	x0, [sp, #72]
    6f30:	ldr	x0, [sp, #40]
    6f34:	bl	3300 <S_POPMARK>
    6f38:	str	w0, [sp, #48]
    6f3c:	ldr	x0, [sp, #40]
    6f40:	ldr	x1, [x0, #24]
    6f44:	ldr	w0, [sp, #48]
    6f48:	add	w2, w0, #0x1
    6f4c:	str	w2, [sp, #48]
    6f50:	sxtw	x0, w0
    6f54:	lsl	x0, x0, #3
    6f58:	add	x0, x1, x0
    6f5c:	str	x0, [sp, #80]
    6f60:	ldr	x1, [sp, #72]
    6f64:	ldr	x0, [sp, #80]
    6f68:	sub	x0, x1, x0
    6f6c:	asr	x0, x0, #3
    6f70:	str	w0, [sp, #52]
    6f74:	ldr	w0, [sp, #52]
    6f78:	cmp	w0, #0x1
    6f7c:	b.le	6f8c <XS_Socket_pack_ip_mreq_source+0x90>
    6f80:	ldr	w0, [sp, #52]
    6f84:	cmp	w0, #0x3
    6f88:	b.le	6f9c <XS_Socket_pack_ip_mreq_source+0xa0>
    6f8c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    6f90:	add	x1, x0, #0xe18
    6f94:	ldr	x0, [sp, #32]
    6f98:	bl	2fa0 <Perl_croak_xs_usage@plt>
    6f9c:	ldr	x0, [sp, #40]
    6fa0:	ldr	x1, [x0, #24]
    6fa4:	ldrsw	x0, [sp, #48]
    6fa8:	lsl	x0, x0, #3
    6fac:	add	x0, x1, x0
    6fb0:	ldr	x0, [x0]
    6fb4:	str	x0, [sp, #88]
    6fb8:	ldr	x0, [sp, #40]
    6fbc:	ldr	x1, [x0, #24]
    6fc0:	ldrsw	x0, [sp, #48]
    6fc4:	add	x0, x0, #0x1
    6fc8:	lsl	x0, x0, #3
    6fcc:	add	x0, x1, x0
    6fd0:	ldr	x0, [x0]
    6fd4:	str	x0, [sp, #96]
    6fd8:	ldr	w0, [sp, #52]
    6fdc:	cmp	w0, #0x2
    6fe0:	b.gt	6ff4 <XS_Socket_pack_ip_mreq_source+0xf8>
    6fe4:	ldr	x0, [sp, #40]
    6fe8:	add	x0, x0, #0x150
    6fec:	str	x0, [sp, #64]
    6ff0:	b	7014 <XS_Socket_pack_ip_mreq_source+0x118>
    6ff4:	ldr	x0, [sp, #40]
    6ff8:	ldr	x1, [x0, #24]
    6ffc:	ldrsw	x0, [sp, #48]
    7000:	add	x0, x0, #0x2
    7004:	lsl	x0, x0, #3
    7008:	add	x0, x1, x0
    700c:	ldr	x0, [x0]
    7010:	str	x0, [sp, #64]
    7014:	ldr	x0, [sp, #88]
    7018:	ldr	w0, [x0, #12]
    701c:	and	w0, w0, #0x20000000
    7020:	cmp	w0, #0x0
    7024:	b.eq	7080 <XS_Socket_pack_ip_mreq_source+0x184>  // b.none
    7028:	ldr	x0, [sp, #40]
    702c:	ldr	x0, [x0, #224]
    7030:	ldr	w0, [x0, #56]
    7034:	lsr	w0, w0, #3
    7038:	mov	w0, w0
    703c:	and	x0, x0, #0x1
    7040:	cmp	x0, #0x0
    7044:	b.ne	7080 <XS_Socket_pack_ip_mreq_source+0x184>  // b.any
    7048:	mov	w2, #0x1                   	// #1
    704c:	ldr	x1, [sp, #88]
    7050:	ldr	x0, [sp, #40]
    7054:	bl	2e90 <Perl_sv_utf8_downgrade@plt>
    7058:	and	w0, w0, #0xff
    705c:	eor	w0, w0, #0x1
    7060:	and	w0, w0, #0xff
    7064:	cmp	w0, #0x0
    7068:	b.eq	7080 <XS_Socket_pack_ip_mreq_source+0x184>  // b.none
    706c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7070:	add	x1, x0, #0xe48
    7074:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7078:	add	x0, x0, #0x990
    707c:	bl	2fd0 <Perl_croak_nocontext@plt>
    7080:	ldr	x0, [sp, #88]
    7084:	ldr	w1, [x0, #12]
    7088:	mov	w0, #0x400                 	// #1024
    708c:	movk	w0, #0x2020, lsl #16
    7090:	and	w0, w1, w0
    7094:	cmp	w0, #0x400
    7098:	b.ne	70b8 <XS_Socket_pack_ip_mreq_source+0x1bc>  // b.any
    709c:	ldr	x0, [sp, #88]
    70a0:	ldr	x0, [x0]
    70a4:	ldr	x0, [x0, #16]
    70a8:	str	x0, [sp, #56]
    70ac:	ldr	x0, [sp, #88]
    70b0:	ldr	x0, [x0, #16]
    70b4:	b	70cc <XS_Socket_pack_ip_mreq_source+0x1d0>
    70b8:	add	x0, sp, #0x38
    70bc:	mov	x2, x0
    70c0:	ldr	x1, [sp, #88]
    70c4:	ldr	x0, [sp, #40]
    70c8:	bl	2f20 <Perl_sv_2pvbyte@plt>
    70cc:	str	x0, [sp, #104]
    70d0:	ldr	x0, [sp, #56]
    70d4:	cmp	x0, #0x4
    70d8:	b.eq	70fc <XS_Socket_pack_ip_mreq_source+0x200>  // b.none
    70dc:	ldr	x0, [sp, #56]
    70e0:	mov	x3, #0x4                   	// #4
    70e4:	mov	x2, x0
    70e8:	adrp	x0, 8000 <boot_Socket+0x4b0>
    70ec:	add	x1, x0, #0xde0
    70f0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    70f4:	add	x0, x0, #0xc20
    70f8:	bl	2fd0 <Perl_croak_nocontext@plt>
    70fc:	ldr	x0, [sp, #96]
    7100:	ldr	w0, [x0, #12]
    7104:	and	w0, w0, #0x20000000
    7108:	cmp	w0, #0x0
    710c:	b.eq	7168 <XS_Socket_pack_ip_mreq_source+0x26c>  // b.none
    7110:	ldr	x0, [sp, #40]
    7114:	ldr	x0, [x0, #224]
    7118:	ldr	w0, [x0, #56]
    711c:	lsr	w0, w0, #3
    7120:	mov	w0, w0
    7124:	and	x0, x0, #0x1
    7128:	cmp	x0, #0x0
    712c:	b.ne	7168 <XS_Socket_pack_ip_mreq_source+0x26c>  // b.any
    7130:	mov	w2, #0x1                   	// #1
    7134:	ldr	x1, [sp, #96]
    7138:	ldr	x0, [sp, #40]
    713c:	bl	2e90 <Perl_sv_utf8_downgrade@plt>
    7140:	and	w0, w0, #0xff
    7144:	eor	w0, w0, #0x1
    7148:	and	w0, w0, #0xff
    714c:	cmp	w0, #0x0
    7150:	b.eq	7168 <XS_Socket_pack_ip_mreq_source+0x26c>  // b.none
    7154:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7158:	add	x1, x0, #0xe48
    715c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7160:	add	x0, x0, #0x990
    7164:	bl	2fd0 <Perl_croak_nocontext@plt>
    7168:	ldr	x0, [sp, #56]
    716c:	cmp	x0, #0x4
    7170:	b.eq	7194 <XS_Socket_pack_ip_mreq_source+0x298>  // b.none
    7174:	ldr	x0, [sp, #56]
    7178:	mov	x3, #0x4                   	// #4
    717c:	mov	x2, x0
    7180:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7184:	add	x1, x0, #0xde0
    7188:	adrp	x0, 8000 <boot_Socket+0x4b0>
    718c:	add	x0, x0, #0xc20
    7190:	bl	2fd0 <Perl_croak_nocontext@plt>
    7194:	ldr	x0, [sp, #96]
    7198:	ldr	w1, [x0, #12]
    719c:	mov	w0, #0x400                 	// #1024
    71a0:	movk	w0, #0x2020, lsl #16
    71a4:	and	w0, w1, w0
    71a8:	cmp	w0, #0x400
    71ac:	b.ne	71cc <XS_Socket_pack_ip_mreq_source+0x2d0>  // b.any
    71b0:	ldr	x0, [sp, #96]
    71b4:	ldr	x0, [x0]
    71b8:	ldr	x0, [x0, #16]
    71bc:	str	x0, [sp, #56]
    71c0:	ldr	x0, [sp, #96]
    71c4:	ldr	x0, [x0, #16]
    71c8:	b	71e0 <XS_Socket_pack_ip_mreq_source+0x2e4>
    71cc:	add	x0, sp, #0x38
    71d0:	mov	x2, x0
    71d4:	ldr	x1, [sp, #96]
    71d8:	ldr	x0, [sp, #40]
    71dc:	bl	2f20 <Perl_sv_2pvbyte@plt>
    71e0:	str	x0, [sp, #112]
    71e4:	add	x0, sp, #0x88
    71e8:	mov	x2, #0xc                   	// #12
    71ec:	mov	w1, #0x0                   	// #0
    71f0:	bl	2f30 <memset@plt>
    71f4:	ldr	x0, [sp, #104]
    71f8:	ldr	w0, [x0]
    71fc:	str	w0, [sp, #136]
    7200:	ldr	x0, [sp, #112]
    7204:	ldr	w0, [x0]
    7208:	str	w0, [sp, #144]
    720c:	ldr	x0, [sp, #64]
    7210:	ldr	w0, [x0, #12]
    7214:	and	w0, w0, #0xff00
    7218:	cmp	w0, #0x0
    721c:	b.eq	7318 <XS_Socket_pack_ip_mreq_source+0x41c>  // b.none
    7220:	ldr	x0, [sp, #64]
    7224:	ldr	w0, [x0, #12]
    7228:	and	w0, w0, #0x20000000
    722c:	cmp	w0, #0x0
    7230:	b.eq	728c <XS_Socket_pack_ip_mreq_source+0x390>  // b.none
    7234:	ldr	x0, [sp, #40]
    7238:	ldr	x0, [x0, #224]
    723c:	ldr	w0, [x0, #56]
    7240:	lsr	w0, w0, #3
    7244:	mov	w0, w0
    7248:	and	x0, x0, #0x1
    724c:	cmp	x0, #0x0
    7250:	b.ne	728c <XS_Socket_pack_ip_mreq_source+0x390>  // b.any
    7254:	mov	w2, #0x1                   	// #1
    7258:	ldr	x1, [sp, #64]
    725c:	ldr	x0, [sp, #40]
    7260:	bl	2e90 <Perl_sv_utf8_downgrade@plt>
    7264:	and	w0, w0, #0xff
    7268:	eor	w0, w0, #0x1
    726c:	and	w0, w0, #0xff
    7270:	cmp	w0, #0x0
    7274:	b.eq	728c <XS_Socket_pack_ip_mreq_source+0x390>  // b.none
    7278:	adrp	x0, 8000 <boot_Socket+0x4b0>
    727c:	add	x1, x0, #0xde0
    7280:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7284:	add	x0, x0, #0x990
    7288:	bl	2fd0 <Perl_croak_nocontext@plt>
    728c:	ldr	x0, [sp, #64]
    7290:	ldr	w1, [x0, #12]
    7294:	mov	w0, #0x400                 	// #1024
    7298:	movk	w0, #0x2020, lsl #16
    729c:	and	w0, w1, w0
    72a0:	cmp	w0, #0x400
    72a4:	b.ne	72c4 <XS_Socket_pack_ip_mreq_source+0x3c8>  // b.any
    72a8:	ldr	x0, [sp, #64]
    72ac:	ldr	x0, [x0]
    72b0:	ldr	x0, [x0, #16]
    72b4:	str	x0, [sp, #56]
    72b8:	ldr	x0, [sp, #64]
    72bc:	ldr	x0, [x0, #16]
    72c0:	b	72d8 <XS_Socket_pack_ip_mreq_source+0x3dc>
    72c4:	add	x0, sp, #0x38
    72c8:	mov	x2, x0
    72cc:	ldr	x1, [sp, #64]
    72d0:	ldr	x0, [sp, #40]
    72d4:	bl	2f20 <Perl_sv_2pvbyte@plt>
    72d8:	str	x0, [sp, #120]
    72dc:	ldr	x0, [sp, #56]
    72e0:	cmp	x0, #0x4
    72e4:	b.eq	7308 <XS_Socket_pack_ip_mreq_source+0x40c>  // b.none
    72e8:	ldr	x0, [sp, #56]
    72ec:	mov	x3, #0x4                   	// #4
    72f0:	mov	x2, x0
    72f4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    72f8:	add	x1, x0, #0xde0
    72fc:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7300:	add	x0, x0, #0xc20
    7304:	bl	2fd0 <Perl_croak_nocontext@plt>
    7308:	ldr	x0, [sp, #120]
    730c:	ldr	w0, [x0]
    7310:	str	w0, [sp, #140]
    7314:	b	731c <XS_Socket_pack_ip_mreq_source+0x420>
    7318:	str	wzr, [sp, #140]
    731c:	add	x0, sp, #0x88
    7320:	mov	x2, #0xc                   	// #12
    7324:	mov	x1, x0
    7328:	ldr	x0, [sp, #40]
    732c:	bl	3120 <Perl_newSVpvn@plt>
    7330:	mov	x2, x0
    7334:	ldr	x0, [sp, #40]
    7338:	ldr	x1, [x0, #24]
    733c:	ldrsw	x0, [sp, #48]
    7340:	lsl	x0, x0, #3
    7344:	add	x19, x1, x0
    7348:	mov	x1, x2
    734c:	ldr	x0, [sp, #40]
    7350:	bl	3010 <Perl_sv_2mortal@plt>
    7354:	str	x0, [x19]
    7358:	mov	x0, #0x1                   	// #1
    735c:	str	x0, [sp, #128]
    7360:	ldr	x0, [sp, #40]
    7364:	ldr	x1, [x0, #24]
    7368:	ldrsw	x2, [sp, #48]
    736c:	ldr	x0, [sp, #128]
    7370:	add	x0, x2, x0
    7374:	lsl	x0, x0, #3
    7378:	sub	x0, x0, #0x8
    737c:	add	x1, x1, x0
    7380:	ldr	x0, [sp, #40]
    7384:	str	x1, [x0]
    7388:	nop
    738c:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    7390:	ldr	x0, [x0, #4048]
    7394:	ldr	x1, [sp, #152]
    7398:	ldr	x0, [x0]
    739c:	eor	x0, x1, x0
    73a0:	cmp	x0, #0x0
    73a4:	b.eq	73ac <XS_Socket_pack_ip_mreq_source+0x4b0>  // b.none
    73a8:	bl	2f80 <__stack_chk_fail@plt>
    73ac:	ldr	x19, [sp, #16]
    73b0:	ldp	x29, x30, [sp], #160
    73b4:	ret

00000000000073b8 <XS_Socket_unpack_ip_mreq_source>:
    73b8:	stp	x29, x30, [sp, #-112]!
    73bc:	mov	x29, sp
    73c0:	str	x0, [sp, #24]
    73c4:	str	x1, [sp, #16]
    73c8:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    73cc:	ldr	x0, [x0, #4048]
    73d0:	ldr	x1, [x0]
    73d4:	str	x1, [sp, #104]
    73d8:	mov	x1, #0x0                   	// #0
    73dc:	ldr	x0, [sp, #24]
    73e0:	ldr	x0, [x0]
    73e4:	str	x0, [sp, #56]
    73e8:	ldr	x0, [sp, #24]
    73ec:	bl	3300 <S_POPMARK>
    73f0:	str	w0, [sp, #40]
    73f4:	ldr	x0, [sp, #24]
    73f8:	ldr	x1, [x0, #24]
    73fc:	ldr	w0, [sp, #40]
    7400:	add	w2, w0, #0x1
    7404:	str	w2, [sp, #40]
    7408:	sxtw	x0, w0
    740c:	lsl	x0, x0, #3
    7410:	add	x0, x1, x0
    7414:	str	x0, [sp, #64]
    7418:	ldr	x1, [sp, #56]
    741c:	ldr	x0, [sp, #64]
    7420:	sub	x0, x1, x0
    7424:	asr	x0, x0, #3
    7428:	str	w0, [sp, #44]
    742c:	ldr	w0, [sp, #44]
    7430:	cmp	w0, #0x1
    7434:	b.eq	7448 <XS_Socket_unpack_ip_mreq_source+0x90>  // b.none
    7438:	adrp	x0, 8000 <boot_Socket+0x4b0>
    743c:	add	x1, x0, #0xdf8
    7440:	ldr	x0, [sp, #16]
    7444:	bl	2fa0 <Perl_croak_xs_usage@plt>
    7448:	ldrsw	x0, [sp, #44]
    744c:	lsl	x0, x0, #3
    7450:	neg	x0, x0
    7454:	ldr	x1, [sp, #56]
    7458:	add	x0, x1, x0
    745c:	str	x0, [sp, #56]
    7460:	ldr	x0, [sp, #24]
    7464:	ldr	x1, [x0, #24]
    7468:	ldrsw	x0, [sp, #40]
    746c:	lsl	x0, x0, #3
    7470:	add	x0, x1, x0
    7474:	ldr	x0, [x0]
    7478:	str	x0, [sp, #72]
    747c:	ldr	x0, [sp, #72]
    7480:	ldr	w1, [x0, #12]
    7484:	mov	w0, #0x400                 	// #1024
    7488:	movk	w0, #0x2020, lsl #16
    748c:	and	w0, w1, w0
    7490:	cmp	w0, #0x400
    7494:	b.ne	74b4 <XS_Socket_unpack_ip_mreq_source+0xfc>  // b.any
    7498:	ldr	x0, [sp, #72]
    749c:	ldr	x0, [x0]
    74a0:	ldr	x0, [x0, #16]
    74a4:	str	x0, [sp, #48]
    74a8:	ldr	x0, [sp, #72]
    74ac:	ldr	x0, [x0, #16]
    74b0:	b	74c8 <XS_Socket_unpack_ip_mreq_source+0x110>
    74b4:	add	x0, sp, #0x30
    74b8:	mov	x2, x0
    74bc:	ldr	x1, [sp, #72]
    74c0:	ldr	x0, [sp, #24]
    74c4:	bl	2f20 <Perl_sv_2pvbyte@plt>
    74c8:	str	x0, [sp, #80]
    74cc:	ldr	x0, [sp, #48]
    74d0:	cmp	x0, #0xc
    74d4:	b.eq	74f8 <XS_Socket_unpack_ip_mreq_source+0x140>  // b.none
    74d8:	ldr	x0, [sp, #48]
    74dc:	mov	x3, #0xc                   	// #12
    74e0:	mov	x2, x0
    74e4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    74e8:	add	x1, x0, #0xe68
    74ec:	adrp	x0, 8000 <boot_Socket+0x4b0>
    74f0:	add	x0, x0, #0x9b8
    74f4:	bl	2fd0 <Perl_croak_nocontext@plt>
    74f8:	ldr	x1, [sp, #80]
    74fc:	add	x0, sp, #0x58
    7500:	ldr	x2, [x1]
    7504:	str	x2, [x0]
    7508:	ldr	w1, [x1, #8]
    750c:	str	w1, [x0, #8]
    7510:	ldr	x0, [sp, #24]
    7514:	ldr	x1, [x0, #32]
    7518:	ldr	x0, [sp, #56]
    751c:	sub	x0, x1, x0
    7520:	cmp	x0, #0x10
    7524:	cset	w0, le
    7528:	and	w0, w0, #0xff
    752c:	and	x0, x0, #0xff
    7530:	cmp	x0, #0x0
    7534:	b.eq	7550 <XS_Socket_unpack_ip_mreq_source+0x198>  // b.none
    7538:	mov	x3, #0x3                   	// #3
    753c:	ldr	x2, [sp, #56]
    7540:	ldr	x1, [sp, #56]
    7544:	ldr	x0, [sp, #24]
    7548:	bl	2e50 <Perl_stack_grow@plt>
    754c:	str	x0, [sp, #56]
    7550:	ldr	x0, [sp, #56]
    7554:	add	x0, x0, #0x8
    7558:	str	x0, [sp, #56]
    755c:	add	x0, sp, #0x58
    7560:	mov	w3, #0x80000               	// #524288
    7564:	mov	x2, #0x4                   	// #4
    7568:	mov	x1, x0
    756c:	ldr	x0, [sp, #24]
    7570:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    7574:	mov	x1, x0
    7578:	ldr	x0, [sp, #56]
    757c:	str	x1, [x0]
    7580:	ldr	x0, [sp, #56]
    7584:	add	x0, x0, #0x8
    7588:	str	x0, [sp, #56]
    758c:	add	x0, sp, #0x58
    7590:	add	x0, x0, #0x8
    7594:	mov	w3, #0x80000               	// #524288
    7598:	mov	x2, #0x4                   	// #4
    759c:	mov	x1, x0
    75a0:	ldr	x0, [sp, #24]
    75a4:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    75a8:	mov	x1, x0
    75ac:	ldr	x0, [sp, #56]
    75b0:	str	x1, [x0]
    75b4:	ldr	x0, [sp, #56]
    75b8:	add	x0, x0, #0x8
    75bc:	str	x0, [sp, #56]
    75c0:	add	x0, sp, #0x58
    75c4:	add	x0, x0, #0x4
    75c8:	mov	w3, #0x80000               	// #524288
    75cc:	mov	x2, #0x4                   	// #4
    75d0:	mov	x1, x0
    75d4:	ldr	x0, [sp, #24]
    75d8:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    75dc:	mov	x1, x0
    75e0:	ldr	x0, [sp, #56]
    75e4:	str	x1, [x0]
    75e8:	ldr	x0, [sp, #24]
    75ec:	ldr	x1, [sp, #56]
    75f0:	str	x1, [x0]
    75f4:	nop
    75f8:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    75fc:	ldr	x0, [x0, #4048]
    7600:	ldr	x1, [sp, #104]
    7604:	ldr	x0, [x0]
    7608:	eor	x0, x1, x0
    760c:	cmp	x0, #0x0
    7610:	b.eq	7618 <XS_Socket_unpack_ip_mreq_source+0x260>  // b.none
    7614:	bl	2f80 <__stack_chk_fail@plt>
    7618:	ldp	x29, x30, [sp], #112
    761c:	ret

0000000000007620 <XS_Socket_pack_ipv6_mreq>:
    7620:	stp	x29, x30, [sp, #-144]!
    7624:	mov	x29, sp
    7628:	str	x19, [sp, #16]
    762c:	str	x0, [sp, #40]
    7630:	str	x1, [sp, #32]
    7634:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    7638:	ldr	x0, [x0, #4048]
    763c:	ldr	x1, [x0]
    7640:	str	x1, [sp, #136]
    7644:	mov	x1, #0x0                   	// #0
    7648:	ldr	x0, [sp, #40]
    764c:	ldr	x0, [x0]
    7650:	str	x0, [sp, #72]
    7654:	ldr	x0, [sp, #40]
    7658:	bl	3300 <S_POPMARK>
    765c:	str	w0, [sp, #52]
    7660:	ldr	x0, [sp, #40]
    7664:	ldr	x1, [x0, #24]
    7668:	ldr	w0, [sp, #52]
    766c:	add	w2, w0, #0x1
    7670:	str	w2, [sp, #52]
    7674:	sxtw	x0, w0
    7678:	lsl	x0, x0, #3
    767c:	add	x0, x1, x0
    7680:	str	x0, [sp, #80]
    7684:	ldr	x1, [sp, #72]
    7688:	ldr	x0, [sp, #80]
    768c:	sub	x0, x1, x0
    7690:	asr	x0, x0, #3
    7694:	str	w0, [sp, #56]
    7698:	ldr	w0, [sp, #56]
    769c:	cmp	w0, #0x2
    76a0:	b.eq	76b4 <XS_Socket_pack_ipv6_mreq+0x94>  // b.none
    76a4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    76a8:	add	x1, x0, #0xe88
    76ac:	ldr	x0, [sp, #32]
    76b0:	bl	2fa0 <Perl_croak_xs_usage@plt>
    76b4:	ldr	x0, [sp, #40]
    76b8:	ldr	x1, [x0, #24]
    76bc:	ldrsw	x0, [sp, #52]
    76c0:	lsl	x0, x0, #3
    76c4:	add	x0, x1, x0
    76c8:	ldr	x0, [x0]
    76cc:	str	x0, [sp, #88]
    76d0:	ldr	x0, [sp, #40]
    76d4:	ldr	x1, [x0, #24]
    76d8:	ldrsw	x0, [sp, #52]
    76dc:	add	x0, x0, #0x1
    76e0:	lsl	x0, x0, #3
    76e4:	add	x0, x1, x0
    76e8:	ldr	x0, [x0]
    76ec:	ldr	w1, [x0, #12]
    76f0:	mov	w0, #0x100                 	// #256
    76f4:	movk	w0, #0x8020, lsl #16
    76f8:	and	w1, w1, w0
    76fc:	mov	w0, #0x100                 	// #256
    7700:	movk	w0, #0x8000, lsl #16
    7704:	cmp	w1, w0
    7708:	b.ne	7734 <XS_Socket_pack_ipv6_mreq+0x114>  // b.any
    770c:	ldr	x0, [sp, #40]
    7710:	ldr	x1, [x0, #24]
    7714:	ldrsw	x0, [sp, #52]
    7718:	add	x0, x0, #0x1
    771c:	lsl	x0, x0, #3
    7720:	add	x0, x1, x0
    7724:	ldr	x0, [x0]
    7728:	ldr	x0, [x0]
    772c:	ldr	x0, [x0, #32]
    7730:	b	7760 <XS_Socket_pack_ipv6_mreq+0x140>
    7734:	ldr	x0, [sp, #40]
    7738:	ldr	x1, [x0, #24]
    773c:	ldrsw	x0, [sp, #52]
    7740:	add	x0, x0, #0x1
    7744:	lsl	x0, x0, #3
    7748:	add	x0, x1, x0
    774c:	ldr	x0, [x0]
    7750:	mov	w2, #0x2                   	// #2
    7754:	mov	x1, x0
    7758:	ldr	x0, [sp, #40]
    775c:	bl	2e40 <Perl_sv_2uv_flags@plt>
    7760:	str	w0, [sp, #60]
    7764:	ldr	x0, [sp, #88]
    7768:	ldr	w0, [x0, #12]
    776c:	and	w0, w0, #0x20000000
    7770:	cmp	w0, #0x0
    7774:	b.eq	77d0 <XS_Socket_pack_ipv6_mreq+0x1b0>  // b.none
    7778:	ldr	x0, [sp, #40]
    777c:	ldr	x0, [x0, #224]
    7780:	ldr	w0, [x0, #56]
    7784:	lsr	w0, w0, #3
    7788:	mov	w0, w0
    778c:	and	x0, x0, #0x1
    7790:	cmp	x0, #0x0
    7794:	b.ne	77d0 <XS_Socket_pack_ipv6_mreq+0x1b0>  // b.any
    7798:	mov	w2, #0x1                   	// #1
    779c:	ldr	x1, [sp, #88]
    77a0:	ldr	x0, [sp, #40]
    77a4:	bl	2e90 <Perl_sv_utf8_downgrade@plt>
    77a8:	and	w0, w0, #0xff
    77ac:	eor	w0, w0, #0x1
    77b0:	and	w0, w0, #0xff
    77b4:	cmp	w0, #0x0
    77b8:	b.eq	77d0 <XS_Socket_pack_ipv6_mreq+0x1b0>  // b.none
    77bc:	adrp	x0, 8000 <boot_Socket+0x4b0>
    77c0:	add	x1, x0, #0xea0
    77c4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    77c8:	add	x0, x0, #0x990
    77cc:	bl	2fd0 <Perl_croak_nocontext@plt>
    77d0:	ldr	x0, [sp, #88]
    77d4:	ldr	w1, [x0, #12]
    77d8:	mov	w0, #0x400                 	// #1024
    77dc:	movk	w0, #0x2020, lsl #16
    77e0:	and	w0, w1, w0
    77e4:	cmp	w0, #0x400
    77e8:	b.ne	7808 <XS_Socket_pack_ipv6_mreq+0x1e8>  // b.any
    77ec:	ldr	x0, [sp, #88]
    77f0:	ldr	x0, [x0]
    77f4:	ldr	x0, [x0, #16]
    77f8:	str	x0, [sp, #64]
    77fc:	ldr	x0, [sp, #88]
    7800:	ldr	x0, [x0, #16]
    7804:	b	781c <XS_Socket_pack_ipv6_mreq+0x1fc>
    7808:	add	x0, sp, #0x40
    780c:	mov	x2, x0
    7810:	ldr	x1, [sp, #88]
    7814:	ldr	x0, [sp, #40]
    7818:	bl	2f20 <Perl_sv_2pvbyte@plt>
    781c:	str	x0, [sp, #96]
    7820:	ldr	x0, [sp, #64]
    7824:	cmp	x0, #0x10
    7828:	b.eq	784c <XS_Socket_pack_ipv6_mreq+0x22c>  // b.none
    782c:	ldr	x0, [sp, #64]
    7830:	mov	x3, #0x10                  	// #16
    7834:	mov	x2, x0
    7838:	adrp	x0, 8000 <boot_Socket+0x4b0>
    783c:	add	x1, x0, #0xea0
    7840:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7844:	add	x0, x0, #0xc20
    7848:	bl	2fd0 <Perl_croak_nocontext@plt>
    784c:	add	x0, sp, #0x70
    7850:	mov	x2, #0x14                  	// #20
    7854:	mov	w1, #0x0                   	// #0
    7858:	bl	2f30 <memset@plt>
    785c:	ldr	x0, [sp, #96]
    7860:	ldp	x0, x1, [x0]
    7864:	stp	x0, x1, [sp, #112]
    7868:	ldr	w0, [sp, #60]
    786c:	str	w0, [sp, #128]
    7870:	add	x0, sp, #0x70
    7874:	mov	x2, #0x14                  	// #20
    7878:	mov	x1, x0
    787c:	ldr	x0, [sp, #40]
    7880:	bl	3120 <Perl_newSVpvn@plt>
    7884:	mov	x2, x0
    7888:	ldr	x0, [sp, #40]
    788c:	ldr	x1, [x0, #24]
    7890:	ldrsw	x0, [sp, #52]
    7894:	lsl	x0, x0, #3
    7898:	add	x19, x1, x0
    789c:	mov	x1, x2
    78a0:	ldr	x0, [sp, #40]
    78a4:	bl	3010 <Perl_sv_2mortal@plt>
    78a8:	str	x0, [x19]
    78ac:	mov	x0, #0x1                   	// #1
    78b0:	str	x0, [sp, #104]
    78b4:	ldr	x0, [sp, #40]
    78b8:	ldr	x1, [x0, #24]
    78bc:	ldrsw	x2, [sp, #52]
    78c0:	ldr	x0, [sp, #104]
    78c4:	add	x0, x2, x0
    78c8:	lsl	x0, x0, #3
    78cc:	sub	x0, x0, #0x8
    78d0:	add	x1, x1, x0
    78d4:	ldr	x0, [sp, #40]
    78d8:	str	x1, [x0]
    78dc:	nop
    78e0:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    78e4:	ldr	x0, [x0, #4048]
    78e8:	ldr	x1, [sp, #136]
    78ec:	ldr	x0, [x0]
    78f0:	eor	x0, x1, x0
    78f4:	cmp	x0, #0x0
    78f8:	b.eq	7900 <XS_Socket_pack_ipv6_mreq+0x2e0>  // b.none
    78fc:	bl	2f80 <__stack_chk_fail@plt>
    7900:	ldr	x19, [sp, #16]
    7904:	ldp	x29, x30, [sp], #144
    7908:	ret

000000000000790c <XS_Socket_unpack_ipv6_mreq>:
    790c:	stp	x29, x30, [sp, #-112]!
    7910:	mov	x29, sp
    7914:	str	x0, [sp, #24]
    7918:	str	x1, [sp, #16]
    791c:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    7920:	ldr	x0, [x0, #4048]
    7924:	ldr	x1, [x0]
    7928:	str	x1, [sp, #104]
    792c:	mov	x1, #0x0                   	// #0
    7930:	ldr	x0, [sp, #24]
    7934:	ldr	x0, [x0]
    7938:	str	x0, [sp, #48]
    793c:	ldr	x0, [sp, #24]
    7940:	bl	3300 <S_POPMARK>
    7944:	str	w0, [sp, #32]
    7948:	ldr	x0, [sp, #24]
    794c:	ldr	x1, [x0, #24]
    7950:	ldr	w0, [sp, #32]
    7954:	add	w2, w0, #0x1
    7958:	str	w2, [sp, #32]
    795c:	sxtw	x0, w0
    7960:	lsl	x0, x0, #3
    7964:	add	x0, x1, x0
    7968:	str	x0, [sp, #56]
    796c:	ldr	x1, [sp, #48]
    7970:	ldr	x0, [sp, #56]
    7974:	sub	x0, x1, x0
    7978:	asr	x0, x0, #3
    797c:	str	w0, [sp, #36]
    7980:	ldr	w0, [sp, #36]
    7984:	cmp	w0, #0x1
    7988:	b.eq	799c <XS_Socket_unpack_ipv6_mreq+0x90>  // b.none
    798c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7990:	add	x1, x0, #0xdf8
    7994:	ldr	x0, [sp, #16]
    7998:	bl	2fa0 <Perl_croak_xs_usage@plt>
    799c:	ldrsw	x0, [sp, #36]
    79a0:	lsl	x0, x0, #3
    79a4:	neg	x0, x0
    79a8:	ldr	x1, [sp, #48]
    79ac:	add	x0, x1, x0
    79b0:	str	x0, [sp, #48]
    79b4:	ldr	x0, [sp, #24]
    79b8:	ldr	x1, [x0, #24]
    79bc:	ldrsw	x0, [sp, #32]
    79c0:	lsl	x0, x0, #3
    79c4:	add	x0, x1, x0
    79c8:	ldr	x0, [x0]
    79cc:	str	x0, [sp, #64]
    79d0:	ldr	x0, [sp, #64]
    79d4:	ldr	w1, [x0, #12]
    79d8:	mov	w0, #0x400                 	// #1024
    79dc:	movk	w0, #0x2020, lsl #16
    79e0:	and	w0, w1, w0
    79e4:	cmp	w0, #0x400
    79e8:	b.ne	7a08 <XS_Socket_unpack_ipv6_mreq+0xfc>  // b.any
    79ec:	ldr	x0, [sp, #64]
    79f0:	ldr	x0, [x0]
    79f4:	ldr	x0, [x0, #16]
    79f8:	str	x0, [sp, #40]
    79fc:	ldr	x0, [sp, #64]
    7a00:	ldr	x0, [x0, #16]
    7a04:	b	7a1c <XS_Socket_unpack_ipv6_mreq+0x110>
    7a08:	add	x0, sp, #0x28
    7a0c:	mov	x2, x0
    7a10:	ldr	x1, [sp, #64]
    7a14:	ldr	x0, [sp, #24]
    7a18:	bl	2f20 <Perl_sv_2pvbyte@plt>
    7a1c:	str	x0, [sp, #72]
    7a20:	ldr	x0, [sp, #40]
    7a24:	cmp	x0, #0x14
    7a28:	b.eq	7a4c <XS_Socket_unpack_ipv6_mreq+0x140>  // b.none
    7a2c:	ldr	x0, [sp, #40]
    7a30:	mov	x3, #0x14                  	// #20
    7a34:	mov	x2, x0
    7a38:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7a3c:	add	x1, x0, #0xeb8
    7a40:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7a44:	add	x0, x0, #0x9b8
    7a48:	bl	2fd0 <Perl_croak_nocontext@plt>
    7a4c:	ldr	x0, [sp, #72]
    7a50:	add	x2, sp, #0x50
    7a54:	mov	x3, x0
    7a58:	ldp	x0, x1, [x3]
    7a5c:	stp	x0, x1, [x2]
    7a60:	ldr	w0, [x3, #16]
    7a64:	str	w0, [x2, #16]
    7a68:	ldr	x0, [sp, #24]
    7a6c:	ldr	x1, [x0, #32]
    7a70:	ldr	x0, [sp, #48]
    7a74:	sub	x0, x1, x0
    7a78:	cmp	x0, #0x8
    7a7c:	cset	w0, le
    7a80:	and	w0, w0, #0xff
    7a84:	and	x0, x0, #0xff
    7a88:	cmp	x0, #0x0
    7a8c:	b.eq	7aa8 <XS_Socket_unpack_ipv6_mreq+0x19c>  // b.none
    7a90:	mov	x3, #0x2                   	// #2
    7a94:	ldr	x2, [sp, #48]
    7a98:	ldr	x1, [sp, #48]
    7a9c:	ldr	x0, [sp, #24]
    7aa0:	bl	2e50 <Perl_stack_grow@plt>
    7aa4:	str	x0, [sp, #48]
    7aa8:	ldr	x0, [sp, #48]
    7aac:	add	x0, x0, #0x8
    7ab0:	str	x0, [sp, #48]
    7ab4:	add	x0, sp, #0x50
    7ab8:	mov	w3, #0x80000               	// #524288
    7abc:	mov	x2, #0x10                  	// #16
    7ac0:	mov	x1, x0
    7ac4:	ldr	x0, [sp, #24]
    7ac8:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    7acc:	mov	x1, x0
    7ad0:	ldr	x0, [sp, #48]
    7ad4:	str	x1, [x0]
    7ad8:	ldr	x0, [sp, #48]
    7adc:	add	x0, x0, #0x8
    7ae0:	str	x0, [sp, #48]
    7ae4:	ldr	x0, [sp, #24]
    7ae8:	bl	3130 <Perl_sv_newmortal@plt>
    7aec:	mov	x1, x0
    7af0:	ldr	x0, [sp, #48]
    7af4:	str	x1, [x0]
    7af8:	ldr	x0, [sp, #48]
    7afc:	ldr	x0, [x0]
    7b00:	ldr	w1, [sp, #96]
    7b04:	mov	w1, w1
    7b08:	mov	x2, x1
    7b0c:	mov	x1, x0
    7b10:	ldr	x0, [sp, #24]
    7b14:	bl	3100 <Perl_sv_setiv@plt>
    7b18:	ldr	x0, [sp, #24]
    7b1c:	ldr	x1, [sp, #48]
    7b20:	str	x1, [x0]
    7b24:	nop
    7b28:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    7b2c:	ldr	x0, [x0, #4048]
    7b30:	ldr	x1, [sp, #104]
    7b34:	ldr	x0, [x0]
    7b38:	eor	x0, x1, x0
    7b3c:	cmp	x0, #0x0
    7b40:	b.eq	7b48 <XS_Socket_unpack_ipv6_mreq+0x23c>  // b.none
    7b44:	bl	2f80 <__stack_chk_fail@plt>
    7b48:	ldp	x29, x30, [sp], #112
    7b4c:	ret

0000000000007b50 <boot_Socket>:
    7b50:	sub	sp, sp, #0x150
    7b54:	stp	x29, x30, [sp, #16]
    7b58:	add	x29, sp, #0x10
    7b5c:	stp	x19, x20, [sp, #32]
    7b60:	str	x0, [sp, #56]
    7b64:	str	x1, [sp, #48]
    7b68:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    7b6c:	ldr	x0, [x0, #4048]
    7b70:	ldr	x1, [x0]
    7b74:	str	x1, [sp, #328]
    7b78:	mov	x1, #0x0                   	// #0
    7b7c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7b80:	add	x4, x0, #0xed8
    7b84:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7b88:	add	x3, x0, #0xee0
    7b8c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7b90:	add	x2, x0, #0xee8
    7b94:	ldr	x1, [sp, #56]
    7b98:	mov	w0, #0x5e7                 	// #1511
    7b9c:	movk	w0, #0xd30, lsl #16
    7ba0:	bl	3060 <Perl_xs_handshake@plt>
    7ba4:	str	w0, [sp, #80]
    7ba8:	ldr	x0, [sp, #56]
    7bac:	ldr	x1, [x0, #24]
    7bb0:	ldrsw	x0, [sp, #80]
    7bb4:	lsl	x0, x0, #3
    7bb8:	add	x0, x1, x0
    7bbc:	str	x0, [sp, #104]
    7bc0:	ldr	x0, [sp, #56]
    7bc4:	ldr	x0, [x0]
    7bc8:	str	x0, [sp, #112]
    7bcc:	ldr	x1, [sp, #112]
    7bd0:	ldr	x0, [sp, #104]
    7bd4:	sub	x0, x1, x0
    7bd8:	asr	x0, x0, #3
    7bdc:	str	w0, [sp, #84]
    7be0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7be4:	add	x0, x0, #0xee8
    7be8:	str	x0, [sp, #120]
    7bec:	adrp	x0, 4000 <xs_getnameinfo+0x1c>
    7bf0:	add	x2, x0, #0x58c
    7bf4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7bf8:	add	x1, x0, #0xef8
    7bfc:	ldr	x0, [sp, #56]
    7c00:	bl	2ff0 <Perl_newXS_deffile@plt>
    7c04:	adrp	x0, 4000 <xs_getnameinfo+0x1c>
    7c08:	add	x2, x0, #0x71c
    7c0c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7c10:	add	x1, x0, #0xf10
    7c14:	ldr	x0, [sp, #56]
    7c18:	bl	2ff0 <Perl_newXS_deffile@plt>
    7c1c:	adrp	x0, 4000 <xs_getnameinfo+0x1c>
    7c20:	add	x2, x0, #0xa00
    7c24:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7c28:	add	x1, x0, #0x978
    7c2c:	ldr	x0, [sp, #56]
    7c30:	bl	2ff0 <Perl_newXS_deffile@plt>
    7c34:	adrp	x0, 4000 <xs_getnameinfo+0x1c>
    7c38:	add	x2, x0, #0xcc4
    7c3c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7c40:	add	x1, x0, #0xa00
    7c44:	ldr	x0, [sp, #56]
    7c48:	bl	2ff0 <Perl_newXS_deffile@plt>
    7c4c:	adrp	x0, 4000 <xs_getnameinfo+0x1c>
    7c50:	add	x2, x0, #0xe90
    7c54:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7c58:	add	x1, x0, #0xa68
    7c5c:	ldr	x0, [sp, #56]
    7c60:	bl	2ff0 <Perl_newXS_deffile@plt>
    7c64:	adrp	x0, 5000 <XS_Socket_pack_sockaddr_un+0x170>
    7c68:	add	x2, x0, #0xe8
    7c6c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7c70:	add	x1, x0, #0xb00
    7c74:	ldr	x0, [sp, #56]
    7c78:	bl	2ff0 <Perl_newXS_deffile@plt>
    7c7c:	adrp	x0, 5000 <XS_Socket_pack_sockaddr_un+0x170>
    7c80:	add	x2, x0, #0x3d0
    7c84:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7c88:	add	x1, x0, #0xb88
    7c8c:	ldr	x0, [sp, #56]
    7c90:	bl	2ff0 <Perl_newXS_deffile@plt>
    7c94:	adrp	x0, 5000 <XS_Socket_pack_sockaddr_un+0x170>
    7c98:	add	x2, x0, #0x740
    7c9c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7ca0:	add	x1, x0, #0xbb0
    7ca4:	ldr	x0, [sp, #56]
    7ca8:	bl	2ff0 <Perl_newXS_deffile@plt>
    7cac:	adrp	x0, 5000 <XS_Socket_pack_sockaddr_un+0x170>
    7cb0:	add	x2, x0, #0xa68
    7cb4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7cb8:	add	x1, x0, #0xc00
    7cbc:	ldr	x0, [sp, #56]
    7cc0:	bl	2ff0 <Perl_newXS_deffile@plt>
    7cc4:	adrp	x0, 5000 <XS_Socket_pack_sockaddr_un+0x170>
    7cc8:	add	x2, x0, #0xef0
    7ccc:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7cd0:	add	x1, x0, #0xc58
    7cd4:	ldr	x0, [sp, #56]
    7cd8:	bl	2ff0 <Perl_newXS_deffile@plt>
    7cdc:	adrp	x0, 6000 <XS_Socket_unpack_sockaddr_in6+0x110>
    7ce0:	add	x2, x0, #0x2b0
    7ce4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7ce8:	add	x1, x0, #0xc90
    7cec:	ldr	x0, [sp, #56]
    7cf0:	bl	2ff0 <Perl_newXS_deffile@plt>
    7cf4:	adrp	x0, 6000 <XS_Socket_unpack_sockaddr_in6+0x110>
    7cf8:	add	x2, x0, #0x640
    7cfc:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7d00:	add	x1, x0, #0xda0
    7d04:	ldr	x0, [sp, #56]
    7d08:	bl	2ff0 <Perl_newXS_deffile@plt>
    7d0c:	adrp	x0, 6000 <XS_Socket_unpack_sockaddr_in6+0x110>
    7d10:	add	x2, x0, #0x92c
    7d14:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7d18:	add	x1, x0, #0xde0
    7d1c:	ldr	x0, [sp, #56]
    7d20:	bl	2ff0 <Perl_newXS_deffile@plt>
    7d24:	adrp	x0, 6000 <XS_Socket_unpack_sockaddr_in6+0x110>
    7d28:	add	x2, x0, #0xcd4
    7d2c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7d30:	add	x1, x0, #0xe00
    7d34:	ldr	x0, [sp, #56]
    7d38:	bl	2ff0 <Perl_newXS_deffile@plt>
    7d3c:	adrp	x0, 6000 <XS_Socket_unpack_sockaddr_in6+0x110>
    7d40:	add	x2, x0, #0xefc
    7d44:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7d48:	add	x1, x0, #0xe48
    7d4c:	ldr	x0, [sp, #56]
    7d50:	bl	2ff0 <Perl_newXS_deffile@plt>
    7d54:	adrp	x0, 7000 <XS_Socket_pack_ip_mreq_source+0x104>
    7d58:	add	x2, x0, #0x3b8
    7d5c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7d60:	add	x1, x0, #0xe68
    7d64:	ldr	x0, [sp, #56]
    7d68:	bl	2ff0 <Perl_newXS_deffile@plt>
    7d6c:	adrp	x0, 7000 <XS_Socket_pack_ip_mreq_source+0x104>
    7d70:	add	x2, x0, #0x620
    7d74:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7d78:	add	x1, x0, #0xea0
    7d7c:	ldr	x0, [sp, #56]
    7d80:	bl	2ff0 <Perl_newXS_deffile@plt>
    7d84:	adrp	x0, 7000 <XS_Socket_pack_ip_mreq_source+0x104>
    7d88:	add	x2, x0, #0x90c
    7d8c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7d90:	add	x1, x0, #0xeb8
    7d94:	ldr	x0, [sp, #56]
    7d98:	bl	2ff0 <Perl_newXS_deffile@plt>
    7d9c:	mov	w2, #0x1                   	// #1
    7da0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7da4:	add	x1, x0, #0xf28
    7da8:	ldr	x0, [sp, #56]
    7dac:	bl	3160 <Perl_get_hv@plt>
    7db0:	str	x0, [sp, #128]
    7db4:	adrp	x0, 1a000 <__FRAME_END__+0xfe78>
    7db8:	add	x0, x0, #0xc30
    7dbc:	str	x0, [sp, #88]
    7dc0:	b	7e0c <boot_Socket+0x2bc>
    7dc4:	ldr	x0, [sp, #88]
    7dc8:	ldr	x19, [x0]
    7dcc:	ldr	x0, [sp, #88]
    7dd0:	ldr	w20, [x0, #8]
    7dd4:	ldr	x0, [sp, #88]
    7dd8:	ldr	x0, [x0, #16]
    7ddc:	mov	x1, x0
    7de0:	ldr	x0, [sp, #56]
    7de4:	bl	30f0 <Perl_newSViv@plt>
    7de8:	mov	x4, x0
    7dec:	mov	w3, w20
    7df0:	mov	x2, x19
    7df4:	ldr	x1, [sp, #128]
    7df8:	ldr	x0, [sp, #56]
    7dfc:	bl	3428 <constant_add_symbol>
    7e00:	ldr	x0, [sp, #88]
    7e04:	add	x0, x0, #0x18
    7e08:	str	x0, [sp, #88]
    7e0c:	ldr	x0, [sp, #88]
    7e10:	ldr	x0, [x0]
    7e14:	cmp	x0, #0x0
    7e18:	b.ne	7dc4 <boot_Socket+0x274>  // b.any
    7e1c:	ldr	x0, [sp, #56]
    7e20:	bl	3538 <get_missing_hash>
    7e24:	str	x0, [sp, #136]
    7e28:	adrp	x0, 1a000 <__FRAME_END__+0xfe78>
    7e2c:	add	x0, x0, #0x6e0
    7e30:	str	x0, [sp, #96]
    7e34:	ldr	x0, [sp, #96]
    7e38:	ldr	x1, [x0]
    7e3c:	ldr	x0, [sp, #96]
    7e40:	ldr	w0, [x0, #8]
    7e44:	mov	w6, #0x0                   	// #0
    7e48:	mov	x5, #0x0                   	// #0
    7e4c:	mov	w4, #0x10                  	// #16
    7e50:	mov	w3, w0
    7e54:	mov	x2, x1
    7e58:	ldr	x1, [sp, #128]
    7e5c:	ldr	x0, [sp, #56]
    7e60:	bl	3080 <Perl_hv_common_key_len@plt>
    7e64:	str	x0, [sp, #144]
    7e68:	ldr	x0, [sp, #144]
    7e6c:	cmp	x0, #0x0
    7e70:	b.ne	7e8c <boot_Socket+0x33c>  // b.any
    7e74:	ldr	x0, [sp, #96]
    7e78:	ldr	x0, [x0]
    7e7c:	mov	x1, x0
    7e80:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7e84:	add	x0, x0, #0x358
    7e88:	bl	2fd0 <Perl_croak_nocontext@plt>
    7e8c:	ldr	x0, [sp, #144]
    7e90:	ldr	x0, [x0, #16]
    7e94:	str	x0, [sp, #152]
    7e98:	ldr	x0, [sp, #152]
    7e9c:	ldr	w0, [x0, #12]
    7ea0:	and	w0, w0, #0xff00
    7ea4:	cmp	w0, #0x0
    7ea8:	b.ne	7edc <boot_Socket+0x38c>  // b.any
    7eac:	ldr	x0, [sp, #152]
    7eb0:	ldr	w0, [x0, #12]
    7eb4:	and	w0, w0, #0xff
    7eb8:	cmp	w0, #0x9
    7ebc:	b.eq	7edc <boot_Socket+0x38c>  // b.none
    7ec0:	mov	x3, #0x0                   	// #0
    7ec4:	adrp	x0, 8000 <boot_Socket+0x4b0>
    7ec8:	add	x2, x0, #0x7f0
    7ecc:	ldr	x1, [sp, #152]
    7ed0:	ldr	x0, [sp, #56]
    7ed4:	bl	3090 <Perl_sv_setpvn@plt>
    7ed8:	b	7f98 <boot_Socket+0x448>
    7edc:	ldr	x0, [sp, #152]
    7ee0:	ldr	w0, [x0, #12]
    7ee4:	and	w0, w0, #0x400
    7ee8:	cmp	w0, #0x0
    7eec:	b.eq	7f04 <boot_Socket+0x3b4>  // b.none
    7ef0:	ldr	x0, [sp, #152]
    7ef4:	ldr	x0, [x0]
    7ef8:	ldr	x0, [x0, #16]
    7efc:	cmp	x0, #0x0
    7f00:	b.eq	7f98 <boot_Socket+0x448>  // b.none
    7f04:	ldr	x0, [sp, #96]
    7f08:	ldr	x1, [x0]
    7f0c:	ldr	x0, [sp, #56]
    7f10:	add	x0, x0, #0x138
    7f14:	mov	x3, x0
    7f18:	mov	x2, x1
    7f1c:	ldr	x1, [sp, #128]
    7f20:	ldr	x0, [sp, #56]
    7f24:	bl	2eb0 <Perl_newCONSTSUB@plt>
    7f28:	str	x0, [sp, #160]
    7f2c:	ldr	x0, [sp, #160]
    7f30:	ldr	x0, [x0]
    7f34:	str	x0, [sp, #168]
    7f38:	ldr	x0, [sp, #168]
    7f3c:	ldr	x0, [x0, #40]
    7f40:	str	x0, [sp, #176]
    7f44:	ldr	x0, [sp, #176]
    7f48:	mov	x1, x0
    7f4c:	ldr	x0, [sp, #56]
    7f50:	bl	336c <S_SvREFCNT_dec>
    7f54:	ldr	x0, [sp, #160]
    7f58:	ldr	x0, [x0]
    7f5c:	str	x0, [sp, #184]
    7f60:	ldr	x0, [sp, #184]
    7f64:	ldr	w1, [x0, #92]
    7f68:	and	w1, w1, #0xfffffffb
    7f6c:	str	w1, [x0, #92]
    7f70:	ldr	x0, [sp, #160]
    7f74:	ldr	x0, [x0]
    7f78:	str	x0, [sp, #192]
    7f7c:	ldr	x0, [sp, #192]
    7f80:	str	xzr, [x0, #48]
    7f84:	ldr	x0, [sp, #160]
    7f88:	ldr	x0, [x0]
    7f8c:	str	x0, [sp, #200]
    7f90:	ldr	x0, [sp, #200]
    7f94:	str	xzr, [x0, #40]
    7f98:	ldr	x0, [sp, #144]
    7f9c:	ldr	x0, [x0, #8]
    7fa0:	str	x0, [sp, #208]
    7fa4:	ldr	x0, [sp, #208]
    7fa8:	add	x2, x0, #0x8
    7fac:	ldr	x0, [sp, #208]
    7fb0:	ldr	w0, [x0, #4]
    7fb4:	sxtw	x3, w0
    7fb8:	ldr	x0, [sp, #208]
    7fbc:	add	x1, x0, #0x8
    7fc0:	ldr	x0, [sp, #208]
    7fc4:	ldr	w0, [x0, #4]
    7fc8:	sxtw	x0, w0
    7fcc:	add	x0, x0, #0x1
    7fd0:	add	x0, x1, x0
    7fd4:	ldrb	w0, [x0]
    7fd8:	mov	w4, w0
    7fdc:	ldr	x0, [sp, #56]
    7fe0:	add	x1, x0, #0x138
    7fe4:	ldr	x0, [sp, #208]
    7fe8:	ldr	w0, [x0]
    7fec:	str	w0, [sp]
    7ff0:	mov	x7, x1
    7ff4:	mov	w6, #0x4                   	// #4
    7ff8:	mov	w5, w4
    7ffc:	mov	x4, x3
    8000:	mov	x3, x2
    8004:	mov	x2, #0x0                   	// #0
    8008:	ldr	x1, [sp, #136]
    800c:	ldr	x0, [sp, #56]
    8010:	bl	3030 <Perl_hv_common@plt>
    8014:	cmp	x0, #0x0
    8018:	b.ne	8034 <boot_Socket+0x4e4>  // b.any
    801c:	ldr	x0, [sp, #96]
    8020:	ldr	x0, [x0]
    8024:	mov	x1, x0
    8028:	adrp	x0, 8000 <boot_Socket+0x4b0>
    802c:	add	x0, x0, #0xf38
    8030:	bl	2fd0 <Perl_croak_nocontext@plt>
    8034:	ldr	x0, [sp, #96]
    8038:	add	x0, x0, #0x10
    803c:	str	x0, [sp, #96]
    8040:	ldr	x0, [sp, #96]
    8044:	ldr	x0, [x0]
    8048:	cmp	x0, #0x0
    804c:	b.ne	7e34 <boot_Socket+0x2e4>  // b.any
    8050:	mov	w0, #0x0                   	// #0
    8054:	bl	2e60 <htonl@plt>
    8058:	str	w0, [sp, #72]
    805c:	add	x0, sp, #0x48
    8060:	mov	w3, #0x80000               	// #524288
    8064:	mov	x2, #0x4                   	// #4
    8068:	mov	x1, x0
    806c:	ldr	x0, [sp, #56]
    8070:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    8074:	str	x0, [sp, #216]
    8078:	ldr	x0, [sp, #216]
    807c:	str	x0, [sp, #224]
    8080:	ldr	x0, [sp, #224]
    8084:	bl	3328 <S_SvREFCNT_inc>
    8088:	mov	x4, x0
    808c:	mov	w3, #0xa                   	// #10
    8090:	adrp	x0, 8000 <boot_Socket+0x4b0>
    8094:	add	x2, x0, #0xf60
    8098:	ldr	x1, [sp, #128]
    809c:	ldr	x0, [sp, #56]
    80a0:	bl	3428 <constant_add_symbol>
    80a4:	mov	w0, #0x1                   	// #1
    80a8:	movk	w0, #0x7f00, lsl #16
    80ac:	bl	2e60 <htonl@plt>
    80b0:	str	w0, [sp, #72]
    80b4:	add	x0, sp, #0x48
    80b8:	mov	w3, #0x80000               	// #524288
    80bc:	mov	x2, #0x4                   	// #4
    80c0:	mov	x1, x0
    80c4:	ldr	x0, [sp, #56]
    80c8:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    80cc:	str	x0, [sp, #232]
    80d0:	ldr	x0, [sp, #232]
    80d4:	str	x0, [sp, #240]
    80d8:	ldr	x0, [sp, #240]
    80dc:	bl	3328 <S_SvREFCNT_inc>
    80e0:	mov	x4, x0
    80e4:	mov	w3, #0xf                   	// #15
    80e8:	adrp	x0, 8000 <boot_Socket+0x4b0>
    80ec:	add	x2, x0, #0xf70
    80f0:	ldr	x1, [sp, #128]
    80f4:	ldr	x0, [sp, #56]
    80f8:	bl	3428 <constant_add_symbol>
    80fc:	mov	w0, #0xffffffff            	// #-1
    8100:	bl	2e60 <htonl@plt>
    8104:	str	w0, [sp, #72]
    8108:	add	x0, sp, #0x48
    810c:	mov	w3, #0x80000               	// #524288
    8110:	mov	x2, #0x4                   	// #4
    8114:	mov	x1, x0
    8118:	ldr	x0, [sp, #56]
    811c:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    8120:	str	x0, [sp, #248]
    8124:	ldr	x0, [sp, #248]
    8128:	str	x0, [sp, #256]
    812c:	ldr	x0, [sp, #256]
    8130:	bl	3328 <S_SvREFCNT_inc>
    8134:	mov	x4, x0
    8138:	mov	w3, #0xb                   	// #11
    813c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    8140:	add	x2, x0, #0xf80
    8144:	ldr	x1, [sp, #128]
    8148:	ldr	x0, [sp, #56]
    814c:	bl	3428 <constant_add_symbol>
    8150:	mov	w0, #0xffffffff            	// #-1
    8154:	bl	2e60 <htonl@plt>
    8158:	str	w0, [sp, #72]
    815c:	add	x0, sp, #0x48
    8160:	mov	w3, #0x80000               	// #524288
    8164:	mov	x2, #0x4                   	// #4
    8168:	mov	x1, x0
    816c:	ldr	x0, [sp, #56]
    8170:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    8174:	str	x0, [sp, #264]
    8178:	ldr	x0, [sp, #264]
    817c:	str	x0, [sp, #272]
    8180:	ldr	x0, [sp, #272]
    8184:	bl	3328 <S_SvREFCNT_inc>
    8188:	mov	x4, x0
    818c:	mov	w3, #0x10                  	// #16
    8190:	adrp	x0, 8000 <boot_Socket+0x4b0>
    8194:	add	x2, x0, #0xf90
    8198:	ldr	x1, [sp, #128]
    819c:	ldr	x0, [sp, #56]
    81a0:	bl	3428 <constant_add_symbol>
    81a4:	add	x0, sp, #0x200
    81a8:	stp	xzr, xzr, [x0, #-200]
    81ac:	add	x0, sp, #0x138
    81b0:	mov	w3, #0x80000               	// #524288
    81b4:	mov	x2, #0x10                  	// #16
    81b8:	mov	x1, x0
    81bc:	ldr	x0, [sp, #56]
    81c0:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    81c4:	str	x0, [sp, #280]
    81c8:	ldr	x0, [sp, #280]
    81cc:	str	x0, [sp, #288]
    81d0:	ldr	x0, [sp, #288]
    81d4:	bl	3328 <S_SvREFCNT_inc>
    81d8:	mov	x4, x0
    81dc:	mov	w3, #0xb                   	// #11
    81e0:	adrp	x0, 8000 <boot_Socket+0x4b0>
    81e4:	add	x2, x0, #0xfa8
    81e8:	ldr	x1, [sp, #128]
    81ec:	ldr	x0, [sp, #56]
    81f0:	bl	3428 <constant_add_symbol>
    81f4:	strb	wzr, [sp, #312]
    81f8:	strb	wzr, [sp, #313]
    81fc:	strb	wzr, [sp, #314]
    8200:	strb	wzr, [sp, #315]
    8204:	strb	wzr, [sp, #316]
    8208:	strb	wzr, [sp, #317]
    820c:	strb	wzr, [sp, #318]
    8210:	strb	wzr, [sp, #319]
    8214:	strb	wzr, [sp, #320]
    8218:	strb	wzr, [sp, #321]
    821c:	strb	wzr, [sp, #322]
    8220:	strb	wzr, [sp, #323]
    8224:	strb	wzr, [sp, #324]
    8228:	strb	wzr, [sp, #325]
    822c:	strb	wzr, [sp, #326]
    8230:	mov	w0, #0x1                   	// #1
    8234:	strb	w0, [sp, #327]
    8238:	add	x0, sp, #0x138
    823c:	mov	w3, #0x80000               	// #524288
    8240:	mov	x2, #0x10                  	// #16
    8244:	mov	x1, x0
    8248:	ldr	x0, [sp, #56]
    824c:	bl	2fb0 <Perl_newSVpvn_flags@plt>
    8250:	str	x0, [sp, #296]
    8254:	ldr	x0, [sp, #296]
    8258:	str	x0, [sp, #304]
    825c:	ldr	x0, [sp, #304]
    8260:	bl	3328 <S_SvREFCNT_inc>
    8264:	mov	x4, x0
    8268:	mov	w3, #0x10                  	// #16
    826c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    8270:	add	x2, x0, #0xfb8
    8274:	ldr	x1, [sp, #128]
    8278:	ldr	x0, [sp, #56]
    827c:	bl	3428 <constant_add_symbol>
    8280:	ldr	x1, [sp, #128]
    8284:	ldr	x0, [sp, #56]
    8288:	bl	2f00 <Perl_mro_method_changed_in@plt>
    828c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    8290:	add	x3, x0, #0xfd0
    8294:	adrp	x0, 3000 <inet_pton@plt>
    8298:	add	x2, x0, #0x6f4
    829c:	adrp	x0, 8000 <boot_Socket+0x4b0>
    82a0:	add	x1, x0, #0xfe0
    82a4:	ldr	x0, [sp, #56]
    82a8:	bl	2fe0 <Perl_newXS@plt>
    82ac:	adrp	x0, 8000 <boot_Socket+0x4b0>
    82b0:	add	x3, x0, #0xfd0
    82b4:	adrp	x0, 3000 <inet_pton@plt>
    82b8:	add	x2, x0, #0xfe4
    82bc:	adrp	x0, 8000 <boot_Socket+0x4b0>
    82c0:	add	x1, x0, #0xff8
    82c4:	ldr	x0, [sp, #56]
    82c8:	bl	2fe0 <Perl_newXS@plt>
    82cc:	ldr	w1, [sp, #80]
    82d0:	ldr	x0, [sp, #56]
    82d4:	bl	2f50 <Perl_xs_boot_epilog@plt>
    82d8:	nop
    82dc:	adrp	x0, 1b000 <values_for_iv.21244+0x3d0>
    82e0:	ldr	x0, [x0, #4048]
    82e4:	ldr	x1, [sp, #328]
    82e8:	ldr	x0, [x0]
    82ec:	eor	x0, x1, x0
    82f0:	cmp	x0, #0x0
    82f4:	b.eq	82fc <boot_Socket+0x7ac>  // b.none
    82f8:	bl	2f80 <__stack_chk_fail@plt>
    82fc:	ldp	x19, x20, [sp, #32]
    8300:	ldp	x29, x30, [sp, #16]
    8304:	add	sp, sp, #0x150
    8308:	ret

Disassembly of section .fini:

000000000000830c <_fini>:
    830c:	stp	x29, x30, [sp, #-16]!
    8310:	mov	x29, sp
    8314:	ldp	x29, x30, [sp], #16
    8318:	ret
