In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgcov.a_clang_-O2:

_gcov_merge_add.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_add>:
   0:	cbz	w1, 44 <__gcov_merge_add+0x44>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	sub	w20, w1, #0x1
  14:	add	x20, x20, #0x1
  18:	mov	x19, x0
  1c:	add	x20, x0, x20, lsl #3
  20:	bl	0 <__gcov_read_counter>
  24:	ldr	x1, [x19]
  28:	add	x1, x1, x0
  2c:	str	x1, [x19], #8
  30:	cmp	x19, x20
  34:	b.ne	20 <__gcov_merge_add+0x20>  // b.any
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	ret

_gcov_merge_single.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_single>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	w22, #0xaaab                	// #43691
  10:	movk	w22, #0xaaaa, lsl #16
  14:	stp	x19, x20, [sp, #16]
  18:	umull	x22, w1, w22
  1c:	str	x23, [sp, #48]
  20:	lsr	x22, x22, #33
  24:	add	w23, w22, w22, lsl #1
  28:	subs	w23, w1, w23
  2c:	b.ne	d4 <__gcov_merge_single+0xd4>  // b.any
  30:	mov	x19, x0
  34:	cmp	w1, #0x2
  38:	b.hi	6c <__gcov_merge_single+0x6c>  // b.pmore
  3c:	b	b4 <__gcov_merge_single+0xb4>
  40:	cmp	x1, x20
  44:	b.ge	c8 <__gcov_merge_single+0xc8>  // b.tcont
  48:	sub	x20, x20, x1
  4c:	stp	x21, x20, [x19]
  50:	add	w23, w23, #0x1
  54:	ldr	x1, [x19, #16]
  58:	cmp	w22, w23
  5c:	add	x19, x19, #0x18
  60:	add	x0, x1, x0
  64:	stur	x0, [x19, #-8]
  68:	b.ls	b4 <__gcov_merge_single+0xb4>  // b.plast
  6c:	bl	0 <__gcov_read_counter>
  70:	mov	x21, x0
  74:	bl	0 <__gcov_read_counter>
  78:	mov	x20, x0
  7c:	bl	0 <__gcov_read_counter>
  80:	ldr	x1, [x19]
  84:	cmp	x1, x21
  88:	ldr	x1, [x19, #8]
  8c:	b.ne	40 <__gcov_merge_single+0x40>  // b.any
  90:	add	x20, x1, x20
  94:	str	x20, [x19, #8]
  98:	ldr	x1, [x19, #16]
  9c:	add	w23, w23, #0x1
  a0:	cmp	w22, w23
  a4:	add	x19, x19, #0x18
  a8:	add	x0, x1, x0
  ac:	stur	x0, [x19, #-8]
  b0:	b.hi	6c <__gcov_merge_single+0x6c>  // b.pmore
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x21, x22, [sp, #32]
  bc:	ldr	x23, [sp, #48]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	sub	x20, x1, x20
  cc:	str	x20, [x19, #8]
  d0:	b	50 <__gcov_merge_single+0x50>
  d4:	bl	0 <abort>

_gcov_merge_ior.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_ior>:
   0:	cbz	w1, 44 <__gcov_merge_ior+0x44>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	sub	w20, w1, #0x1
  14:	add	x20, x20, #0x1
  18:	mov	x19, x0
  1c:	add	x20, x0, x20, lsl #3
  20:	bl	0 <__gcov_read_counter>
  24:	ldr	x1, [x19]
  28:	orr	x1, x1, x0
  2c:	str	x1, [x19], #8
  30:	cmp	x19, x20
  34:	b.ne	20 <__gcov_merge_ior+0x20>  // b.any
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	ret

_gcov_merge_time_profile.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_time_profile>:
   0:	cbz	w1, 54 <__gcov_merge_time_profile+0x54>
   4:	stp	x29, x30, [sp, #-32]!
   8:	sub	w1, w1, #0x1
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	add	x20, x0, #0x8
  18:	mov	x19, x0
  1c:	add	x20, x20, w1, uxtw #3
  20:	bl	0 <__gcov_read_counter>
  24:	cbz	x0, 3c <__gcov_merge_time_profile+0x3c>
  28:	ldr	x1, [x19]
  2c:	cmp	x1, #0x0
  30:	ccmp	x1, x0, #0x0, ne  // ne = any
  34:	b.le	3c <__gcov_merge_time_profile+0x3c>
  38:	str	x0, [x19]
  3c:	add	x19, x19, #0x8
  40:	cmp	x19, x20
  44:	b.ne	20 <__gcov_merge_time_profile+0x20>  // b.any
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	ret

_gcov_merge_icall_topn.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_icall_topn>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	w2, #0x8e39                	// #36409
   8:	movk	w2, #0x38e3, lsl #16
   c:	mov	x29, sp
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x0
  18:	umull	x0, w1, w2
  1c:	stp	x19, x20, [sp, #16]
  20:	lsr	x0, x0, #33
  24:	stp	x21, x22, [sp, #32]
  28:	stp	x25, x26, [sp, #64]
  2c:	add	w0, w0, w0, lsl #3
  30:	cmp	w1, w0
  34:	stp	x27, x28, [sp, #80]
  38:	b.ne	154 <__gcov_merge_icall_topn+0x154>  // b.any
  3c:	mov	w22, w1
  40:	mov	w21, #0x0                   	// #0
  44:	cbz	w1, 120 <__gcov_merge_icall_topn+0x120>
  48:	sub	sp, sp, #0x80
  4c:	add	w26, w21, #0x1
  50:	mov	x19, sp
  54:	mov	x0, x19
  58:	add	x1, x19, #0x80
  5c:	add	x26, x23, x26, lsl #3
  60:	str	xzr, [x0], #8
  64:	cmp	x1, x0
  68:	b.ne	60 <__gcov_merge_icall_topn+0x60>  // b.any
  6c:	add	x27, x26, #0x8
  70:	add	x28, x19, #0x8
  74:	mov	x0, #0x0                   	// #0
  78:	ldr	x1, [x26, x0]
  7c:	str	x1, [x19, x0]
  80:	ldr	x1, [x27, x0]
  84:	str	x1, [x28, x0]
  88:	add	x0, x0, #0x10
  8c:	cmp	x0, #0x40
  90:	b.ne	78 <__gcov_merge_icall_topn+0x78>  // b.any
  94:	mov	w24, #0x4                   	// #4
  98:	mov	w25, #0x8                   	// #8
  9c:	bl	0 <__gcov_read_counter>
  a0:	bl	0 <__gcov_read_counter>
  a4:	mov	x20, x0
  a8:	bl	0 <__gcov_read_counter>
  ac:	cbz	w25, 140 <__gcov_merge_icall_topn+0x140>
  b0:	mov	w2, #0x0                   	// #0
  b4:	b	c4 <__gcov_merge_icall_topn+0xc4>
  b8:	add	w2, w2, #0x2
  bc:	cmp	w2, w25
  c0:	b.cs	140 <__gcov_merge_icall_topn+0x140>  // b.hs, b.nlast
  c4:	ldr	x3, [x19, w2, uxtw #3]
  c8:	cmp	x3, x20
  cc:	b.ne	b8 <__gcov_merge_icall_topn+0xb8>  // b.any
  d0:	add	w2, w2, #0x1
  d4:	ldr	x1, [x19, x2, lsl #3]
  d8:	add	x0, x1, x0
  dc:	str	x0, [x19, x2, lsl #3]
  e0:	subs	w24, w24, #0x1
  e4:	b.ne	a0 <__gcov_merge_icall_topn+0xa0>  // b.any
  e8:	mov	x0, x19
  ec:	mov	w1, w25
  f0:	bl	0 <__gcov_sort_n_vals>
  f4:	mov	x0, #0x0                   	// #0
  f8:	ldr	x1, [x19, x0]
  fc:	str	x1, [x26, x0]
 100:	ldr	x1, [x28, x0]
 104:	str	x1, [x27, x0]
 108:	add	x0, x0, #0x10
 10c:	cmp	x0, #0x40
 110:	b.ne	f8 <__gcov_merge_icall_topn+0xf8>  // b.any
 114:	add	w21, w21, #0x9
 118:	cmp	w22, w21
 11c:	b.hi	48 <__gcov_merge_icall_topn+0x48>  // b.pmore
 120:	mov	sp, x29
 124:	ldp	x19, x20, [sp, #16]
 128:	ldp	x21, x22, [sp, #32]
 12c:	ldp	x23, x24, [sp, #48]
 130:	ldp	x25, x26, [sp, #64]
 134:	ldp	x27, x28, [sp, #80]
 138:	ldp	x29, x30, [sp], #96
 13c:	ret
 140:	add	w1, w25, #0x1
 144:	str	x20, [x19, w25, uxtw #3]
 148:	add	w25, w25, #0x2
 14c:	str	x0, [x19, x1, lsl #3]
 150:	b	e0 <__gcov_merge_icall_topn+0xe0>
 154:	bl	0 <abort>

_gcov_interval_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_interval_profiler>:
   0:	subs	x1, x1, w2, sxtw
   4:	b.mi	34 <__gcov_interval_profiler+0x34>  // b.first
   8:	cmp	x1, w3, uxtw
   c:	mov	w3, w3
  10:	b.lt	24 <__gcov_interval_profiler+0x24>  // b.tstop
  14:	ldr	x1, [x0, x3, lsl #3]
  18:	add	x1, x1, #0x1
  1c:	str	x1, [x0, x3, lsl #3]
  20:	ret
  24:	ldr	x2, [x0, x1, lsl #3]
  28:	add	x2, x2, #0x1
  2c:	str	x2, [x0, x1, lsl #3]
  30:	ret
  34:	add	w3, w3, #0x1
  38:	ldr	x1, [x0, x3, lsl #3]
  3c:	add	x1, x1, #0x1
  40:	str	x1, [x0, x3, lsl #3]
  44:	ret

_gcov_interval_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_interval_profiler_atomic>:
   0:	subs	x1, x1, w2, sxtw
   4:	b.mi	44 <__gcov_interval_profiler_atomic+0x44>  // b.first
   8:	cmp	x1, w3, uxtw
   c:	mov	w3, w3
  10:	b.lt	2c <__gcov_interval_profiler_atomic+0x2c>  // b.tstop
  14:	add	x3, x0, x3, lsl #3
  18:	ldxr	x0, [x3]
  1c:	add	x0, x0, #0x1
  20:	stxr	w1, x0, [x3]
  24:	cbnz	w1, 18 <__gcov_interval_profiler_atomic+0x18>
  28:	ret
  2c:	add	x1, x0, x1, lsl #3
  30:	ldxr	x0, [x1]
  34:	add	x0, x0, #0x1
  38:	stxr	w2, x0, [x1]
  3c:	cbnz	w2, 30 <__gcov_interval_profiler_atomic+0x30>
  40:	ret
  44:	add	w1, w3, #0x1
  48:	add	x3, x0, x1, lsl #3
  4c:	ldxr	x0, [x3]
  50:	add	x0, x0, #0x1
  54:	stxr	w1, x0, [x3]
  58:	cbnz	w1, 4c <__gcov_interval_profiler_atomic+0x4c>
  5c:	ret

_gcov_pow2_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_pow2_profiler>:
   0:	cbz	x1, 10 <__gcov_pow2_profiler+0x10>
   4:	sub	x2, x1, #0x1
   8:	tst	x2, x1
   c:	b.eq	20 <__gcov_pow2_profiler+0x20>  // b.none
  10:	ldr	x1, [x0]
  14:	add	x1, x1, #0x1
  18:	str	x1, [x0]
  1c:	ret
  20:	ldr	x1, [x0, #8]
  24:	add	x1, x1, #0x1
  28:	str	x1, [x0, #8]
  2c:	ret

_gcov_pow2_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_pow2_profiler_atomic>:
   0:	cbz	x1, 10 <__gcov_pow2_profiler_atomic+0x10>
   4:	sub	x2, x1, #0x1
   8:	tst	x2, x1
   c:	b.eq	24 <__gcov_pow2_profiler_atomic+0x24>  // b.none
  10:	ldxr	x1, [x0]
  14:	add	x1, x1, #0x1
  18:	stxr	w2, x1, [x0]
  1c:	cbnz	w2, 10 <__gcov_pow2_profiler_atomic+0x10>
  20:	ret
  24:	add	x0, x0, #0x8
  28:	ldxr	x1, [x0]
  2c:	add	x1, x1, #0x1
  30:	stxr	w2, x1, [x0]
  34:	cbnz	w2, 28 <__gcov_pow2_profiler_atomic+0x28>
  38:	ret

_gcov_one_value_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_one_value_profiler>:
   0:	ldp	x3, x2, [x0]
   4:	cmp	x1, x3
   8:	b.eq	40 <__gcov_one_value_profiler+0x40>  // b.none
   c:	cbz	x2, 28 <__gcov_one_value_profiler+0x28>
  10:	ldr	x1, [x0, #16]
  14:	sub	x2, x2, #0x1
  18:	str	x2, [x0, #8]
  1c:	add	x1, x1, #0x1
  20:	str	x1, [x0, #16]
  24:	ret
  28:	mov	x2, #0x1                   	// #1
  2c:	stp	x1, x2, [x0]
  30:	ldr	x1, [x0, #16]
  34:	add	x1, x1, #0x1
  38:	str	x1, [x0, #16]
  3c:	ret
  40:	ldr	x1, [x0, #16]
  44:	add	x2, x2, #0x1
  48:	str	x2, [x0, #8]
  4c:	add	x1, x1, #0x1
  50:	str	x1, [x0, #16]
  54:	ret

_gcov_one_value_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_one_value_profiler_atomic>:
   0:	ldp	x3, x2, [x0]
   4:	cmp	x1, x3
   8:	b.eq	3c <__gcov_one_value_profiler_atomic+0x3c>  // b.none
   c:	cbnz	x2, 30 <__gcov_one_value_profiler_atomic+0x30>
  10:	mov	x2, #0x1                   	// #1
  14:	stp	x1, x2, [x0]
  18:	add	x0, x0, #0x10
  1c:	ldxr	x1, [x0]
  20:	add	x1, x1, #0x1
  24:	stxr	w2, x1, [x0]
  28:	cbnz	w2, 1c <__gcov_one_value_profiler_atomic+0x1c>
  2c:	ret
  30:	sub	x2, x2, #0x1
  34:	str	x2, [x0, #8]
  38:	b	18 <__gcov_one_value_profiler_atomic+0x18>
  3c:	add	x2, x2, #0x1
  40:	str	x2, [x0, #8]
  44:	b	18 <__gcov_one_value_profiler_atomic+0x18>

_gcov_average_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_average_profiler>:
   0:	ldp	x3, x2, [x0]
   4:	add	x3, x3, x1
   8:	add	x2, x2, #0x1
   c:	stp	x3, x2, [x0]
  10:	ret

_gcov_average_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_average_profiler_atomic>:
   0:	ldxr	x2, [x0]
   4:	add	x2, x2, x1
   8:	stxr	w3, x2, [x0]
   c:	cbnz	w3, 0 <__gcov_average_profiler_atomic>
  10:	add	x0, x0, #0x8
  14:	ldxr	x1, [x0]
  18:	add	x1, x1, #0x1
  1c:	stxr	w2, x1, [x0]
  20:	cbnz	w2, 14 <__gcov_average_profiler_atomic+0x14>
  24:	ret

_gcov_ior_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_ior_profiler>:
   0:	ldr	x2, [x0]
   4:	orr	x2, x2, x1
   8:	str	x2, [x0]
   c:	ret

_gcov_ior_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_ior_profiler_atomic>:
   0:	ldxr	x2, [x0]
   4:	orr	x2, x2, x1
   8:	stxr	w3, x2, [x0]
   c:	cbnz	w3, 0 <__gcov_ior_profiler_atomic>
  10:	ret

_gcov_indirect_call_profiler_v3.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_indirect_call_profiler_v3>:
   0:	mrs	x2, tpidr_el0
   4:	stp	x29, x30, [sp, #-16]!
   8:	mov	x3, x0
   c:	mov	x29, sp
  10:	adrp	x0, 0 <__gcov_indirect_call_profiler_v3>
  14:	ldr	x4, [x0]
  18:	add	x0, x0, #0x0
  1c:	blr	x4
  20:	add	x4, x2, x0
  24:	ldr	x0, [x2, x0]
  28:	cmp	x0, x1
  2c:	b.eq	4c <__gcov_indirect_call_profiler_v3+0x4c>  // b.none
  30:	adrp	x0, 0 <__gcov_indirect_call_profiler_v3>
  34:	ldr	x1, [x0]
  38:	add	x0, x0, #0x0
  3c:	blr	x1
  40:	str	xzr, [x2, x0]
  44:	ldp	x29, x30, [sp], #16
  48:	ret
  4c:	ldr	x0, [x4, #8]
  50:	ldp	x4, x1, [x0]
  54:	cmp	x3, x4
  58:	b.eq	90 <__gcov_indirect_call_profiler_v3+0x90>  // b.none
  5c:	cbnz	x1, 9c <__gcov_indirect_call_profiler_v3+0x9c>
  60:	mov	x1, #0x1                   	// #1
  64:	stp	x3, x1, [x0]
  68:	ldr	x1, [x0, #16]
  6c:	add	x1, x1, #0x1
  70:	str	x1, [x0, #16]
  74:	adrp	x0, 0 <__gcov_indirect_call_profiler_v3>
  78:	ldr	x1, [x0]
  7c:	add	x0, x0, #0x0
  80:	blr	x1
  84:	str	xzr, [x2, x0]
  88:	ldp	x29, x30, [sp], #16
  8c:	ret
  90:	add	x1, x1, #0x1
  94:	str	x1, [x0, #8]
  98:	b	68 <__gcov_indirect_call_profiler_v3+0x68>
  9c:	sub	x1, x1, #0x1
  a0:	str	x1, [x0, #8]
  a4:	b	68 <__gcov_indirect_call_profiler_v3+0x68>

_gcov_time_profiler.o:     file format elf64-littleaarch64


_gcov_indirect_call_topn_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_topn_value_profiler_body>:
   0:	add	x3, x0, #0x8
   4:	add	x6, x0, #0x48
   8:	mov	x2, x3
   c:	mov	w7, #0x0                   	// #0
  10:	ldp	x5, x4, [x2]
  14:	cmp	x5, x1
  18:	b.eq	fc <__gcov_topn_value_profiler_body+0xfc>  // b.none
  1c:	cbz	x4, c8 <__gcov_topn_value_profiler_body+0xc8>
  20:	ldr	x5, [x3, #8]
  24:	cmp	x5, x4
  28:	csel	x3, x3, x2, le
  2c:	add	x2, x2, #0x10
  30:	cmp	x6, x2
  34:	b.ne	10 <__gcov_topn_value_profiler_body+0x10>  // b.any
  38:	mov	x2, #0x1                   	// #1
  3c:	stp	x1, x2, [x3]
  40:	cbnz	w7, c4 <__gcov_topn_value_profiler_body+0xc4>
  44:	ldr	x1, [x0]
  48:	add	x1, x1, x2
  4c:	str	x1, [x0]
  50:	cmp	x1, #0xbb7
  54:	b.le	c4 <__gcov_topn_value_profiler_body+0xc4>
  58:	stp	x29, x30, [sp, #-16]!
  5c:	mov	x29, sp
  60:	sub	sp, sp, #0x10
  64:	str	xzr, [x0]
  68:	mov	x2, sp
  6c:	ldr	x4, [x0, #16]
  70:	str	xzr, [x2, #8]
  74:	cmp	x4, #0x0
  78:	b.gt	d4 <__gcov_topn_value_profiler_body+0xd4>
  7c:	ldr	x3, [x0, #32]
  80:	str	xzr, [x2]
  84:	mov	x1, x2
  88:	cmp	x3, #0x0
  8c:	b.gt	f0 <__gcov_topn_value_profiler_body+0xf0>
  90:	mov	x5, #0x0                   	// #0
  94:	mov	x1, #0x0                   	// #0
  98:	cmp	x1, x5
  9c:	csel	x1, x1, x5, le
  a0:	cmp	x1, x4
  a4:	b.le	ac <__gcov_topn_value_profiler_body+0xac>
  a8:	stp	xzr, xzr, [x0, #8]
  ac:	cmp	x1, x3
  b0:	b.le	b8 <__gcov_topn_value_profiler_body+0xb8>
  b4:	stp	xzr, xzr, [x0, #24]
  b8:	mov	sp, x29
  bc:	ldp	x29, x30, [sp], #16
  c0:	ret
  c4:	ret
  c8:	mov	x3, x2
  cc:	mov	w7, #0x1                   	// #1
  d0:	b	2c <__gcov_topn_value_profiler_body+0x2c>
  d4:	mov	x1, x2
  d8:	ldr	x3, [x0, #32]
  dc:	str	x4, [x1], #8
  e0:	cmp	x3, #0x0
  e4:	b.gt	f0 <__gcov_topn_value_profiler_body+0xf0>
  e8:	mov	x1, #0x0                   	// #0
  ec:	b	ac <__gcov_topn_value_profiler_body+0xac>
  f0:	str	x3, [x1]
  f4:	ldp	x5, x1, [x2]
  f8:	b	98 <__gcov_topn_value_profiler_body+0x98>
  fc:	add	x4, x4, #0x1
 100:	str	x4, [x2, #8]
 104:	ret

0000000000000108 <__gcov_indirect_call_topn_profiler>:
 108:	mrs	x2, tpidr_el0
 10c:	stp	x29, x30, [sp, #-16]!
 110:	mov	x3, x0
 114:	mov	x29, sp
 118:	adrp	x0, 0 <__gcov_topn_value_profiler_body>
 11c:	ldr	x4, [x0]
 120:	add	x0, x0, #0x0
 124:	blr	x4
 128:	add	x4, x2, x0
 12c:	ldr	x0, [x2, x0]
 130:	cmp	x0, x1
 134:	b.eq	140 <__gcov_indirect_call_topn_profiler+0x38>  // b.none
 138:	ldp	x29, x30, [sp], #16
 13c:	ret
 140:	ldp	x29, x30, [sp], #16
 144:	mov	x1, x3
 148:	ldr	x0, [x4, #8]
 14c:	b	0 <__gcov_topn_value_profiler_body>

_gcov_dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_dump_int>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x0, 0 <__gcov_master>
   8:	mov	w1, #0x322a                	// #12842
   c:	mov	x29, sp
  10:	ldr	x0, [x0]
  14:	movk	w1, #0x4139, lsl #16
  18:	ldr	w2, [x0]
  1c:	str	x19, [sp, #16]
  20:	adrp	x19, 0 <__gcov_root>
  24:	cmp	w2, w1
  28:	add	x19, x19, #0x0
  2c:	b.eq	4c <__gcov_dump_int+0x4c>  // b.none
  30:	mov	x0, x19
  34:	bl	0 <__gcov_dump_one>
  38:	ldr	x19, [x19, #16]
  3c:	cbnz	x19, 30 <__gcov_dump_int+0x30>
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	ldr	x19, [x0, #8]
  50:	cbnz	x19, 30 <__gcov_dump_int+0x30>
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

0000000000000060 <__gcov_dump>:
  60:	b	0 <__gcov_dump_int>

_gcov_flush.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_flush>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x19, 0 <__pthread_key_create>
  10:	ldr	x0, [x19]
  14:	cbz	x0, 24 <__gcov_flush+0x24>
  18:	adrp	x0, 0 <__gcov_flush>
  1c:	add	x0, x0, #0x0
  20:	bl	0 <pthread_mutex_lock>
  24:	bl	0 <__gcov_dump_int>
  28:	bl	0 <__gcov_reset_int>
  2c:	ldr	x19, [x19]
  30:	cbz	x19, 48 <__gcov_flush+0x48>
  34:	ldr	x19, [sp, #16]
  38:	adrp	x0, 0 <__gcov_flush>
  3c:	ldp	x29, x30, [sp], #32
  40:	add	x0, x0, #0x0
  44:	b	0 <pthread_mutex_unlock>
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

_gcov_fork.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_fork>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	bl	0 <__gcov_flush>
  10:	bl	0 <fork>
  14:	cmp	w0, #0x0
  18:	adrp	x1, 0 <__pthread_key_create>
  1c:	mov	w19, w0
  20:	ldr	x1, [x1]
  24:	ccmp	x1, #0x0, #0x4, eq  // eq = none
  28:	b.ne	3c <__gcov_fork+0x3c>  // b.any
  2c:	mov	w0, w19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	x1, #0x0                   	// #0
  40:	adrp	x0, 0 <__gcov_flush_mx>
  44:	add	x0, x0, #0x0
  48:	bl	0 <pthread_mutex_init>
  4c:	mov	w0, w19
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

_gcov_execl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execl>:
   0:	stp	x29, x30, [sp, #-272]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	q0, [x29, #96]
  18:	str	q1, [x29, #112]
  1c:	str	q2, [x29, #128]
  20:	str	q3, [x29, #144]
  24:	str	q4, [x29, #160]
  28:	str	q5, [x29, #176]
  2c:	str	q6, [x29, #192]
  30:	str	q7, [x29, #208]
  34:	stp	x2, x3, [x29, #224]
  38:	stp	x4, x5, [x29, #240]
  3c:	stp	x6, x7, [x29, #256]
  40:	bl	0 <__gcov_flush>
  44:	add	x2, x29, #0x110
  48:	stp	x2, x2, [x29, #32]
  4c:	add	x0, x29, #0xe0
  50:	mov	w1, #0xffffffd0            	// #-48
  54:	mov	w3, #0xffffff80            	// #-128
  58:	str	x0, [x29, #48]
  5c:	stp	w1, w3, [x29, #56]
  60:	add	x0, x29, #0x110
  64:	ldp	x6, x7, [x29, #32]
  68:	stp	x6, x7, [x29, #64]
  6c:	mov	w2, w1
  70:	ldp	x6, x7, [x29, #48]
  74:	mov	x4, x0
  78:	mov	w3, #0x2                   	// #2
  7c:	stp	x6, x7, [x29, #80]
  80:	b	98 <__gcov_execl+0x98>
  84:	mov	x5, x4
  88:	add	x4, x4, #0x8
  8c:	ldr	x5, [x5]
  90:	cbz	x5, b8 <__gcov_execl+0xb8>
  94:	add	w3, w3, #0x1
  98:	add	w6, w2, #0x8
  9c:	tbz	w2, #31, 84 <__gcov_execl+0x84>
  a0:	add	x5, x0, w2, sxtw
  a4:	cmp	w6, #0x0
  a8:	mov	w2, w6
  ac:	b.gt	84 <__gcov_execl+0x84>
  b0:	ldr	x5, [x5]
  b4:	cbnz	x5, 94 <__gcov_execl+0x94>
  b8:	ubfiz	x2, x3, #3, #32
  bc:	cmp	w3, #0x1
  c0:	add	x2, x2, #0xf
  c4:	and	x2, x2, #0xffffffff0
  c8:	sub	sp, sp, x2
  cc:	mov	x1, sp
  d0:	str	x20, [x1]
  d4:	b.ls	140 <__gcov_execl+0x140>  // b.plast
  d8:	ldr	w5, [x29, #88]
  dc:	mov	x2, #0x1                   	// #1
  e0:	ldr	x0, [x29, #72]
  e4:	b	108 <__gcov_execl+0x108>
  e8:	add	x6, x4, #0xf
  ec:	and	x6, x6, #0xfffffffffffffff8
  f0:	str	x6, [x29, #64]
  f4:	ldr	x4, [x4]
  f8:	str	x4, [x1, x2, lsl #3]
  fc:	add	x2, x2, #0x1
 100:	cmp	w3, w2
 104:	b.ls	140 <__gcov_execl+0x140>  // b.plast
 108:	add	w6, w5, #0x8
 10c:	ldr	x4, [x29, #64]
 110:	tbz	w5, #31, e8 <__gcov_execl+0xe8>
 114:	cmp	w6, #0x0
 118:	b.le	124 <__gcov_execl+0x124>
 11c:	mov	w5, w6
 120:	b	e8 <__gcov_execl+0xe8>
 124:	add	x4, x0, w5, sxtw
 128:	mov	w5, w6
 12c:	ldr	x4, [x4]
 130:	str	x4, [x1, x2, lsl #3]
 134:	add	x2, x2, #0x1
 138:	cmp	w3, w2
 13c:	b.hi	108 <__gcov_execl+0x108>  // b.pmore
 140:	mov	x0, x19
 144:	bl	0 <execv>
 148:	mov	sp, x29
 14c:	ldp	x19, x20, [sp, #16]
 150:	ldp	x29, x30, [sp], #272
 154:	ret

_gcov_execlp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execlp>:
   0:	stp	x29, x30, [sp, #-272]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	q0, [x29, #96]
  18:	str	q1, [x29, #112]
  1c:	str	q2, [x29, #128]
  20:	str	q3, [x29, #144]
  24:	str	q4, [x29, #160]
  28:	str	q5, [x29, #176]
  2c:	str	q6, [x29, #192]
  30:	str	q7, [x29, #208]
  34:	stp	x2, x3, [x29, #224]
  38:	stp	x4, x5, [x29, #240]
  3c:	stp	x6, x7, [x29, #256]
  40:	bl	0 <__gcov_flush>
  44:	add	x2, x29, #0x110
  48:	stp	x2, x2, [x29, #32]
  4c:	add	x0, x29, #0xe0
  50:	mov	w1, #0xffffffd0            	// #-48
  54:	mov	w3, #0xffffff80            	// #-128
  58:	str	x0, [x29, #48]
  5c:	stp	w1, w3, [x29, #56]
  60:	add	x0, x29, #0x110
  64:	ldp	x6, x7, [x29, #32]
  68:	stp	x6, x7, [x29, #64]
  6c:	mov	w2, w1
  70:	ldp	x6, x7, [x29, #48]
  74:	mov	x4, x0
  78:	mov	w3, #0x2                   	// #2
  7c:	stp	x6, x7, [x29, #80]
  80:	b	98 <__gcov_execlp+0x98>
  84:	mov	x5, x4
  88:	add	x4, x4, #0x8
  8c:	ldr	x5, [x5]
  90:	cbz	x5, b8 <__gcov_execlp+0xb8>
  94:	add	w3, w3, #0x1
  98:	add	w6, w2, #0x8
  9c:	tbz	w2, #31, 84 <__gcov_execlp+0x84>
  a0:	add	x5, x0, w2, sxtw
  a4:	cmp	w6, #0x0
  a8:	mov	w2, w6
  ac:	b.gt	84 <__gcov_execlp+0x84>
  b0:	ldr	x5, [x5]
  b4:	cbnz	x5, 94 <__gcov_execlp+0x94>
  b8:	ubfiz	x2, x3, #3, #32
  bc:	cmp	w3, #0x1
  c0:	add	x2, x2, #0xf
  c4:	and	x2, x2, #0xffffffff0
  c8:	sub	sp, sp, x2
  cc:	mov	x1, sp
  d0:	str	x20, [x1]
  d4:	b.ls	140 <__gcov_execlp+0x140>  // b.plast
  d8:	ldr	w5, [x29, #88]
  dc:	mov	x2, #0x1                   	// #1
  e0:	ldr	x0, [x29, #72]
  e4:	b	108 <__gcov_execlp+0x108>
  e8:	add	x6, x4, #0xf
  ec:	and	x6, x6, #0xfffffffffffffff8
  f0:	str	x6, [x29, #64]
  f4:	ldr	x4, [x4]
  f8:	str	x4, [x1, x2, lsl #3]
  fc:	add	x2, x2, #0x1
 100:	cmp	w3, w2
 104:	b.ls	140 <__gcov_execlp+0x140>  // b.plast
 108:	add	w6, w5, #0x8
 10c:	ldr	x4, [x29, #64]
 110:	tbz	w5, #31, e8 <__gcov_execlp+0xe8>
 114:	cmp	w6, #0x0
 118:	b.le	124 <__gcov_execlp+0x124>
 11c:	mov	w5, w6
 120:	b	e8 <__gcov_execlp+0xe8>
 124:	add	x4, x0, w5, sxtw
 128:	mov	w5, w6
 12c:	ldr	x4, [x4]
 130:	str	x4, [x1, x2, lsl #3]
 134:	add	x2, x2, #0x1
 138:	cmp	w3, w2
 13c:	b.hi	108 <__gcov_execlp+0x108>  // b.pmore
 140:	mov	x0, x19
 144:	bl	0 <execvp>
 148:	mov	sp, x29
 14c:	ldp	x19, x20, [sp, #16]
 150:	ldp	x29, x30, [sp], #272
 154:	ret

_gcov_execle.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execle>:
   0:	stp	x29, x30, [sp, #-272]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	q0, [x29, #96]
  18:	str	q1, [x29, #112]
  1c:	str	q2, [x29, #128]
  20:	str	q3, [x29, #144]
  24:	str	q4, [x29, #160]
  28:	str	q5, [x29, #176]
  2c:	str	q6, [x29, #192]
  30:	str	q7, [x29, #208]
  34:	stp	x2, x3, [x29, #224]
  38:	stp	x4, x5, [x29, #240]
  3c:	stp	x6, x7, [x29, #256]
  40:	bl	0 <__gcov_flush>
  44:	add	x2, x29, #0x110
  48:	stp	x2, x2, [x29, #32]
  4c:	add	x0, x29, #0xe0
  50:	mov	w1, #0xffffffd0            	// #-48
  54:	mov	w4, #0xffffff80            	// #-128
  58:	str	x0, [x29, #48]
  5c:	stp	w1, w4, [x29, #56]
  60:	add	x0, x29, #0x110
  64:	ldp	x4, x5, [x29, #32]
  68:	stp	x4, x5, [x29, #64]
  6c:	mov	w2, w1
  70:	ldp	x4, x5, [x29, #48]
  74:	mov	x3, x0
  78:	mov	w6, #0x2                   	// #2
  7c:	stp	x4, x5, [x29, #80]
  80:	b	98 <__gcov_execle+0x98>
  84:	mov	x4, x3
  88:	add	x3, x3, #0x8
  8c:	ldr	x4, [x4]
  90:	cbz	x4, b8 <__gcov_execle+0xb8>
  94:	add	w6, w6, #0x1
  98:	add	w5, w2, #0x8
  9c:	tbz	w2, #31, 84 <__gcov_execle+0x84>
  a0:	add	x4, x0, w2, sxtw
  a4:	cmp	w5, #0x0
  a8:	mov	w2, w5
  ac:	b.gt	84 <__gcov_execle+0x84>
  b0:	ldr	x4, [x4]
  b4:	cbnz	x4, 94 <__gcov_execle+0x94>
  b8:	ubfiz	x0, x6, #3, #32
  bc:	ldr	w10, [x29, #88]
  c0:	add	x0, x0, #0xf
  c4:	cmp	w6, #0x1
  c8:	and	x0, x0, #0xffffffff0
  cc:	sub	sp, sp, x0
  d0:	mov	x1, sp
  d4:	ldr	x5, [x29, #64]
  d8:	str	x20, [x1]
  dc:	b.ls	1b8 <__gcov_execle+0x1b8>  // b.plast
  e0:	mov	w4, w10
  e4:	mov	x3, #0x1                   	// #1
  e8:	mov	w0, #0x0                   	// #0
  ec:	ldr	x9, [x29, #72]
  f0:	b	114 <__gcov_execle+0x114>
  f4:	mov	x7, x5
  f8:	str	x2, [x29, #64]
  fc:	mov	x5, x2
 100:	ldr	x2, [x7]
 104:	str	x2, [x1, x3, lsl #3]
 108:	add	x3, x3, #0x1
 10c:	cmp	w6, w3
 110:	b.ls	158 <__gcov_execle+0x158>  // b.plast
 114:	add	x2, x5, #0xf
 118:	add	w8, w4, #0x8
 11c:	and	x2, x2, #0xfffffffffffffff8
 120:	tbz	w4, #31, f4 <__gcov_execle+0xf4>
 124:	add	x2, x5, #0xf
 128:	add	x7, x9, w4, sxtw
 12c:	and	x2, x2, #0xfffffffffffffff8
 130:	mov	w4, w8
 134:	cmp	w8, #0x0
 138:	mov	w0, #0x1                   	// #1
 13c:	b.gt	f4 <__gcov_execle+0xf4>
 140:	ldr	x2, [x7]
 144:	str	x2, [x1, x3, lsl #3]
 148:	add	x3, x3, #0x1
 14c:	cmp	w6, w3
 150:	b.hi	114 <__gcov_execle+0x114>  // b.pmore
 154:	nop
 158:	cmp	w0, #0x0
 15c:	csel	w4, w4, w10, ne  // ne = any
 160:	tbnz	w4, #31, 18c <__gcov_execle+0x18c>
 164:	add	x0, x5, #0xf
 168:	and	x0, x0, #0xfffffffffffffff8
 16c:	str	x0, [x29, #64]
 170:	mov	x0, x19
 174:	ldr	x2, [x5]
 178:	bl	0 <execve>
 17c:	mov	sp, x29
 180:	ldp	x19, x20, [sp, #16]
 184:	ldp	x29, x30, [sp], #272
 188:	ret
 18c:	cmn	w4, #0x7
 190:	b.ge	164 <__gcov_execle+0x164>  // b.tcont
 194:	ldr	x5, [x29, #72]
 198:	mov	x0, x19
 19c:	add	x5, x5, w4, sxtw
 1a0:	ldr	x2, [x5]
 1a4:	bl	0 <execve>
 1a8:	mov	sp, x29
 1ac:	ldp	x19, x20, [sp, #16]
 1b0:	ldp	x29, x30, [sp], #272
 1b4:	ret
 1b8:	mov	w4, w10
 1bc:	b	160 <__gcov_execle+0x160>

_gcov_execv.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	bl	0 <__gcov_flush>
  18:	mov	x1, x20
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <execv>

_gcov_execvp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execvp>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	bl	0 <__gcov_flush>
  18:	mov	x1, x20
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <execvp>

_gcov_execve.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execve>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x2
  1c:	bl	0 <__gcov_flush>
  20:	mov	x2, x21
  24:	mov	x1, x20
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldr	x21, [sp, #32]
  34:	ldp	x29, x30, [sp], #48
  38:	b	0 <execve>

_gcov_reset.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_reset_int>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x0, 0 <__gcov_master>
   8:	mov	w1, #0x322a                	// #12842
   c:	mov	x29, sp
  10:	ldr	x0, [x0]
  14:	stp	x21, x22, [sp, #32]
  18:	movk	w1, #0x4139, lsl #16
  1c:	adrp	x21, 0 <__gcov_root>
  20:	add	x21, x21, #0x0
  24:	ldr	w2, [x0]
  28:	cmp	w2, w1
  2c:	b.eq	f8 <__gcov_reset_int+0xf8>  // b.none
  30:	stp	x19, x20, [sp, #16]
  34:	nop
  38:	ldr	x19, [x21]
  3c:	cbz	x19, d4 <__gcov_reset_int+0xd4>
  40:	stp	x23, x24, [sp, #48]
  44:	nop
  48:	ldr	w0, [x19, #104]
  4c:	add	x24, x19, #0x68
  50:	mov	w22, #0x0                   	// #0
  54:	cbnz	w0, 68 <__gcov_reset_int+0x68>
  58:	b	c8 <__gcov_reset_int+0xc8>
  5c:	add	w22, w22, #0x1
  60:	cmp	w22, w0
  64:	b.cs	c8 <__gcov_reset_int+0xc8>  // b.hs, b.nlast
  68:	ldr	x1, [x19, #112]
  6c:	ldr	x20, [x1, w22, uxtw #3]
  70:	cbz	x20, 5c <__gcov_reset_int+0x5c>
  74:	ldr	x1, [x20]
  78:	cmp	x1, x19
  7c:	b.ne	5c <__gcov_reset_int+0x5c>  // b.any
  80:	add	x20, x20, #0x18
  84:	add	x23, x19, #0x20
  88:	ldr	x0, [x23]
  8c:	mov	w1, #0x0                   	// #0
  90:	add	x23, x23, #0x8
  94:	cbz	x0, ac <__gcov_reset_int+0xac>
  98:	ldr	x0, [x20, #8]
  9c:	add	x20, x20, #0x10
  a0:	ldur	w2, [x20, #-16]
  a4:	lsl	x2, x2, #3
  a8:	bl	0 <memset>
  ac:	cmp	x24, x23
  b0:	b.ne	88 <__gcov_reset_int+0x88>  // b.any
  b4:	ldr	w0, [x19, #104]
  b8:	add	w22, w22, #0x1
  bc:	cmp	w22, w0
  c0:	b.cc	68 <__gcov_reset_int+0x68>  // b.lo, b.ul, b.last
  c4:	nop
  c8:	ldr	x19, [x19, #8]
  cc:	cbnz	x19, 48 <__gcov_reset_int+0x48>
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldrb	w0, [x21, #8]
  d8:	and	w0, w0, #0xfffffffe
  dc:	strb	w0, [x21, #8]
  e0:	ldr	x21, [x21, #16]
  e4:	cbnz	x21, 38 <__gcov_reset_int+0x38>
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldp	x29, x30, [sp], #64
  f4:	ret
  f8:	ldr	x21, [x0, #8]
  fc:	cbnz	x21, 30 <__gcov_reset_int+0x30>
 100:	ldp	x21, x22, [sp, #32]
 104:	ldp	x29, x30, [sp], #64
 108:	ret
 10c:	nop

0000000000000110 <__gcov_reset>:
 110:	b	0 <__gcov_reset_int>

_gcov.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <gcov_write_block>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	lsl	w1, w0, #2
       8:	mov	x2, #0x1                   	// #1
       c:	mov	x29, sp
      10:	stp	x19, x20, [sp, #16]
      14:	adrp	x19, 1028 <gcov_do_dump+0x6b0>
      18:	mov	w20, w0
      1c:	str	x21, [sp, #32]
      20:	ldr	x21, [x19]
      24:	mov	x0, x21
      28:	ldr	x3, [x0], #32
      2c:	bl	0 <fwrite>
      30:	cmp	x0, #0x1
      34:	b.eq	40 <gcov_write_block+0x40>  // b.none
      38:	mov	w0, #0x1                   	// #1
      3c:	str	w0, [x21, #24]
      40:	ldr	x1, [x19]
      44:	ldr	x21, [sp, #32]
      48:	ldp	w2, w0, [x1, #8]
      4c:	add	w2, w2, w20
      50:	sub	w20, w0, w20
      54:	stp	w2, w20, [x1, #8]
      58:	ldp	x19, x20, [sp, #16]
      5c:	ldp	x29, x30, [sp], #48
      60:	ret
      64:	nop

0000000000000068 <gcov_write_words>:
      68:	stp	x29, x30, [sp, #-48]!
      6c:	mov	x29, sp
      70:	stp	x19, x20, [sp, #16]
      74:	adrp	x19, 1028 <gcov_do_dump+0x6b0>
      78:	mov	w20, w0
      7c:	str	x21, [sp, #32]
      80:	ldr	x21, [x19]
      84:	ldr	w1, [x21, #12]
      88:	cmp	w1, #0x3ff
      8c:	b.hi	b8 <gcov_write_words+0x50>  // b.pmore
      90:	ldr	x19, [x19]
      94:	add	w20, w20, w1
      98:	ubfiz	x0, x1, #2, #32
      9c:	ldr	x21, [sp, #32]
      a0:	str	w20, [x19, #12]
      a4:	add	x0, x0, #0x20
      a8:	add	x0, x19, x0
      ac:	ldp	x19, x20, [sp, #16]
      b0:	ldp	x29, x30, [sp], #48
      b4:	ret
      b8:	mov	w0, #0x400                 	// #1024
      bc:	bl	0 <gcov_write_block>
      c0:	ldr	w1, [x21, #12]
      c4:	cbz	w1, 90 <gcov_write_words+0x28>
      c8:	ldr	w0, [x21, #4128]
      cc:	str	w0, [x21, #32]
      d0:	b	90 <gcov_write_words+0x28>
      d4:	nop

00000000000000d8 <gcov_read_words>:
      d8:	stp	x29, x30, [sp, #-48]!
      dc:	mov	x29, sp
      e0:	stp	x19, x20, [sp, #16]
      e4:	adrp	x20, 1028 <gcov_do_dump+0x6b0>
      e8:	mov	w19, w0
      ec:	ldr	x1, [x20]
      f0:	ldp	w2, w4, [x1, #12]
      f4:	ldr	w0, [x1, #28]
      f8:	sub	w4, w4, w2
      fc:	cmp	w0, #0x0
     100:	b.le	190 <gcov_read_words+0xb8>
     104:	cmp	w4, w19
     108:	b.cs	16c <gcov_read_words+0x94>  // b.hs, b.nlast
     10c:	ldr	w0, [x1, #8]
     110:	str	x21, [sp, #32]
     114:	add	w0, w0, w2
     118:	str	w0, [x1, #8]
     11c:	cbz	w4, 12c <gcov_read_words+0x54>
     120:	add	x0, x1, #0x20
     124:	ldr	w0, [x0, w2, uxtw #2]
     128:	str	w0, [x1, #32]
     12c:	ldr	x21, [x20]
     130:	mov	x1, #0x1                   	// #1
     134:	mov	x2, #0x1000                	// #4096
     138:	mov	x0, x21
     13c:	stp	wzr, w4, [x21, #12]
     140:	ldr	x3, [x0], #32
     144:	add	x0, x0, w4, uxtw #2
     148:	bl	0 <fread>
     14c:	ldr	w1, [x21, #16]
     150:	lsr	x0, x0, #2
     154:	add	w1, w1, w0
     158:	str	w1, [x21, #16]
     15c:	cmp	w1, w19
     160:	b.cc	1a0 <gcov_read_words+0xc8>  // b.lo, b.ul, b.last
     164:	ldr	w2, [x21, #12]
     168:	ldr	x21, [sp, #32]
     16c:	ubfiz	x0, x2, #2, #32
     170:	ldr	x20, [x20]
     174:	add	x0, x0, #0x20
     178:	add	w19, w19, w2
     17c:	add	x0, x0, x20
     180:	str	w19, [x20, #12]
     184:	ldp	x19, x20, [sp, #16]
     188:	ldp	x29, x30, [sp], #48
     18c:	ret
     190:	mov	x0, #0x0                   	// #0
     194:	ldp	x19, x20, [sp, #16]
     198:	ldp	x29, x30, [sp], #48
     19c:	ret
     1a0:	ldr	w2, [x21, #20]
     1a4:	mov	x0, #0x0                   	// #0
     1a8:	add	w19, w19, w2
     1ac:	sub	w19, w19, w1
     1b0:	stp	wzr, w19, [x21, #16]
     1b4:	ldr	x21, [sp, #32]
     1b8:	b	184 <gcov_read_words+0xac>
     1bc:	nop

00000000000001c0 <free_fn_data>:
     1c0:	stp	x29, x30, [sp, #-64]!
     1c4:	mov	x29, sp
     1c8:	stp	x21, x22, [sp, #32]
     1cc:	cbz	x1, 244 <free_fn_data+0x84>
     1d0:	mov	x22, x1
     1d4:	ldr	x21, [x1]
     1d8:	cbz	w2, 22c <free_fn_data+0x6c>
     1dc:	stp	x19, x20, [sp, #16]
     1e0:	sub	w20, w2, #0x1
     1e4:	add	x1, x0, #0x28
     1e8:	add	x19, x0, #0x20
     1ec:	add	x20, x1, w20, uxtw #3
     1f0:	mov	w2, #0x0                   	// #0
     1f4:	str	x23, [sp, #48]
     1f8:	ldr	x3, [x19]
     1fc:	ubfiz	x0, x2, #4, #32
     200:	add	w23, w2, #0x1
     204:	add	x0, x22, x0
     208:	add	x19, x19, #0x8
     20c:	cbz	x3, 21c <free_fn_data+0x5c>
     210:	ldr	x0, [x0, #48]
     214:	bl	0 <free>
     218:	mov	w2, w23
     21c:	cmp	x19, x20
     220:	b.ne	1f8 <free_fn_data+0x38>  // b.any
     224:	ldp	x19, x20, [sp, #16]
     228:	ldr	x23, [sp, #48]
     22c:	mov	x0, x22
     230:	bl	0 <free>
     234:	mov	x0, x21
     238:	ldp	x21, x22, [sp, #32]
     23c:	ldp	x29, x30, [sp], #64
     240:	ret
     244:	mov	x21, #0x0                   	// #0
     248:	b	234 <free_fn_data+0x74>
     24c:	nop

0000000000000250 <gcov_version_string>:
     250:	stp	x29, x30, [sp, #-32]!
     254:	mov	x29, sp
     258:	str	x19, [sp, #16]
     25c:	mov	x19, x0
     260:	ldrb	w4, [x1]
     264:	sub	w4, w4, #0x41
     268:	and	w2, w4, #0xff
     26c:	cmp	w2, #0x19
     270:	b.hi	288 <gcov_version_string+0x38>  // b.pmore
     274:	ldrb	w5, [x1, #1]
     278:	sub	w5, w5, #0x30
     27c:	and	w2, w5, #0xff
     280:	cmp	w2, #0x9
     284:	b.ls	2b0 <gcov_version_string+0x60>  // b.plast
     288:	adrp	x0, 0 <gcov_write_block>
     28c:	add	x0, x0, #0x0
     290:	ldr	x1, [x0]
     294:	str	x1, [x19]
     298:	ldrh	w0, [x0, #8]
     29c:	strh	w0, [x19, #8]
     2a0:	mov	x0, x19
     2a4:	ldr	x19, [sp, #16]
     2a8:	ldp	x29, x30, [sp], #32
     2ac:	ret
     2b0:	ldrb	w3, [x1, #2]
     2b4:	sub	w3, w3, #0x30
     2b8:	and	w2, w3, #0xff
     2bc:	cmp	w2, #0x9
     2c0:	b.hi	288 <gcov_version_string+0x38>  // b.pmore
     2c4:	ldrb	w6, [x1, #3]
     2c8:	add	w2, w4, w4, lsl #2
     2cc:	adrp	x1, 0 <gcov_write_block>
     2d0:	adrp	x4, 0 <gcov_write_block>
     2d4:	cmp	w6, #0x2a
     2d8:	add	x1, x1, #0x0
     2dc:	add	x4, x4, #0x0
     2e0:	add	w2, w5, w2, lsl #1
     2e4:	csel	x4, x4, x1, eq  // eq = none
     2e8:	adrp	x1, 0 <gcov_write_block>
     2ec:	add	x1, x1, #0x0
     2f0:	bl	0 <sprintf>
     2f4:	b	2a0 <gcov_version_string+0x50>

00000000000002f8 <gcov_error>:
     2f8:	stp	x29, x30, [sp, #-304]!
     2fc:	mov	w9, #0xffffffc8            	// #-56
     300:	mov	w8, #0xffffff80            	// #-128
     304:	mov	x29, sp
     308:	stp	x21, x22, [sp, #32]
     30c:	adrp	x22, 8 <gcov_write_block+0x8>
     310:	add	x10, sp, #0xf0
     314:	ldr	x21, [x22]
     318:	str	q0, [sp, #112]
     31c:	str	q1, [sp, #128]
     320:	stp	x19, x20, [sp, #16]
     324:	mov	x19, x0
     328:	add	x0, sp, #0x130
     32c:	ldr	x20, [x21]
     330:	stp	x0, x0, [sp, #80]
     334:	str	x10, [sp, #96]
     338:	stp	w9, w8, [sp, #104]
     33c:	str	q2, [sp, #144]
     340:	str	q3, [sp, #160]
     344:	str	q4, [sp, #176]
     348:	str	q5, [sp, #192]
     34c:	str	q6, [sp, #208]
     350:	str	q7, [sp, #224]
     354:	stp	x1, x2, [sp, #248]
     358:	stp	x3, x4, [sp, #264]
     35c:	stp	x5, x6, [sp, #280]
     360:	str	x7, [sp, #296]
     364:	cbz	x20, 3b0 <gcov_error+0xb8>
     368:	ldp	x6, x7, [sp, #80]
     36c:	mov	x1, x19
     370:	ldp	x4, x5, [sp, #96]
     374:	add	x2, sp, #0x30
     378:	mov	x0, x20
     37c:	stp	x6, x7, [sp, #48]
     380:	stp	x4, x5, [sp, #64]
     384:	bl	0 <vfprintf>
     388:	mov	w19, w0
     38c:	adrp	x0, 0 <gcov_write_block>
     390:	add	x0, x0, #0x0
     394:	bl	0 <getenv>
     398:	cbnz	x0, 3f8 <gcov_error+0x100>
     39c:	mov	w0, w19
     3a0:	ldp	x19, x20, [sp, #16]
     3a4:	ldp	x21, x22, [sp, #32]
     3a8:	ldp	x29, x30, [sp], #304
     3ac:	ret
     3b0:	adrp	x0, 0 <gcov_write_block>
     3b4:	add	x0, x0, #0x0
     3b8:	bl	0 <getenv>
     3bc:	cbz	x0, 3f0 <gcov_error+0xf8>
     3c0:	adrp	x1, 0 <gcov_write_block>
     3c4:	add	x1, x1, #0x0
     3c8:	bl	0 <fopen>
     3cc:	mov	x20, x0
     3d0:	str	x0, [x21]
     3d4:	cbnz	x20, 368 <gcov_error+0x70>
     3d8:	adrp	x0, 0 <stderr>
     3dc:	ldr	x22, [x22]
     3e0:	ldr	x0, [x0]
     3e4:	ldr	x20, [x0]
     3e8:	str	x20, [x22]
     3ec:	b	368 <gcov_error+0x70>
     3f0:	ldr	x20, [x21]
     3f4:	b	3d4 <gcov_error+0xdc>
     3f8:	mov	x3, x20
     3fc:	mov	x2, #0x21                  	// #33
     400:	mov	x1, #0x1                   	// #1
     404:	adrp	x0, 0 <gcov_write_block>
     408:	add	x0, x0, #0x0
     40c:	bl	0 <fwrite>
     410:	mov	w0, #0x1                   	// #1
     414:	bl	0 <exit>

0000000000000418 <gcov_version.isra.0.part.0>:
     418:	stp	x29, x30, [sp, #-320]!
     41c:	mov	w3, #0x3941                	// #14657
     420:	rev	w1, w1
     424:	mov	x29, sp
     428:	movk	w3, #0x2a32, lsl #16
     42c:	stp	x19, x20, [sp, #16]
     430:	mov	x19, x2
     434:	stp	x21, x22, [sp, #32]
     438:	str	w1, [sp, #48]
     43c:	str	w3, [sp, #56]
     440:	cbz	x2, 49c <gcov_version.isra.0.part.0+0x84>
     444:	add	x22, sp, #0x38
     448:	add	x20, sp, #0x30
     44c:	mov	x1, x22
     450:	add	x0, sp, #0xc0
     454:	bl	250 <gcov_version_string>
     458:	mov	x21, x0
     45c:	mov	x1, x20
     460:	add	x0, sp, #0x40
     464:	bl	250 <gcov_version_string>
     468:	mov	x4, x0
     46c:	mov	x2, x21
     470:	mov	x5, x20
     474:	mov	x3, x22
     478:	mov	x1, x19
     47c:	adrp	x0, 0 <gcov_write_block>
     480:	add	x0, x0, #0x0
     484:	bl	2f8 <gcov_error>
     488:	mov	w0, #0x0                   	// #0
     48c:	ldp	x19, x20, [sp, #16]
     490:	ldp	x21, x22, [sp, #32]
     494:	ldp	x29, x30, [sp], #320
     498:	ret
     49c:	ldr	x19, [x0]
     4a0:	b	444 <gcov_version.isra.0.part.0+0x2c>
     4a4:	nop

00000000000004a8 <__gcov_rewrite>:
     4a8:	adrp	x3, 1028 <gcov_do_dump+0x6b0>
     4ac:	mov	w4, #0xffffffff            	// #-1
     4b0:	mov	w2, #0x0                   	// #0
     4b4:	mov	x1, #0x0                   	// #0
     4b8:	ldr	x3, [x3]
     4bc:	ldr	x0, [x3]
     4c0:	str	xzr, [x3, #8]
     4c4:	str	w4, [x3, #28]
     4c8:	b	0 <fseek>
     4cc:	nop

00000000000004d0 <__gcov_open>:
     4d0:	stp	x29, x30, [sp, #-80]!
     4d4:	mov	x29, sp
     4d8:	stp	x19, x20, [sp, #16]
     4dc:	adrp	x20, 1028 <gcov_do_dump+0x6b0>
     4e0:	mov	x19, x0
     4e4:	strh	wzr, [sp, #50]
     4e8:	stp	xzr, xzr, [sp, #56]
     4ec:	bl	0 <getpid>
     4f0:	mov	w5, w0
     4f4:	ldr	x3, [x20]
     4f8:	mov	x4, #0xffffffff00000000    	// #-4294967296
     4fc:	mov	w6, #0x1                   	// #1
     500:	mov	x0, x19
     504:	mov	w2, #0x1b6                 	// #438
     508:	mov	w1, #0x42                  	// #66
     50c:	stp	xzr, x4, [x3, #8]
     510:	str	wzr, [x3, #24]
     514:	strh	w6, [sp, #48]
     518:	str	w5, [sp, #72]
     51c:	bl	0 <open>
     520:	tbnz	w0, #31, 594 <__gcov_open+0xc4>
     524:	mov	w19, w0
     528:	str	x21, [sp, #32]
     52c:	add	x21, sp, #0x30
     530:	mov	x2, x21
     534:	mov	w0, w19
     538:	mov	w1, #0x7                   	// #7
     53c:	bl	0 <fcntl>
     540:	cbz	w0, 554 <__gcov_open+0x84>
     544:	bl	0 <__errno_location>
     548:	ldr	w0, [x0]
     54c:	cmp	w0, #0x4
     550:	b.eq	530 <__gcov_open+0x60>  // b.none
     554:	mov	w0, w19
     558:	adrp	x1, 0 <gcov_write_block>
     55c:	add	x1, x1, #0x0
     560:	bl	0 <fdopen>
     564:	ldr	x20, [x20]
     568:	str	x0, [x20]
     56c:	cbz	x0, 5a4 <__gcov_open+0xd4>
     570:	mov	w19, #0x1                   	// #1
     574:	mov	x1, #0x0                   	// #0
     578:	str	w19, [x20, #28]
     57c:	bl	0 <setbuf>
     580:	mov	w0, w19
     584:	ldp	x19, x20, [sp, #16]
     588:	ldr	x21, [sp, #32]
     58c:	ldp	x29, x30, [sp], #80
     590:	ret
     594:	mov	w0, #0x0                   	// #0
     598:	ldp	x19, x20, [sp, #16]
     59c:	ldp	x29, x30, [sp], #80
     5a0:	ret
     5a4:	mov	w0, w19
     5a8:	bl	0 <close>
     5ac:	mov	w0, #0x0                   	// #0
     5b0:	ldp	x19, x20, [sp, #16]
     5b4:	ldr	x21, [sp, #32]
     5b8:	ldp	x29, x30, [sp], #80
     5bc:	ret

00000000000005c0 <__gcov_close>:
     5c0:	stp	x29, x30, [sp, #-32]!
     5c4:	mov	x29, sp
     5c8:	stp	x19, x20, [sp, #16]
     5cc:	adrp	x19, 1028 <gcov_do_dump+0x6b0>
     5d0:	ldr	x20, [x19]
     5d4:	ldr	x0, [x20]
     5d8:	cbz	x0, 5f4 <__gcov_close+0x34>
     5dc:	ldr	w1, [x20, #12]
     5e0:	cbnz	w1, 60c <__gcov_close+0x4c>
     5e4:	bl	0 <fclose>
     5e8:	ldr	x0, [x19]
     5ec:	str	xzr, [x0]
     5f0:	str	wzr, [x0, #16]
     5f4:	ldr	x19, [x19]
     5f8:	str	wzr, [x19, #28]
     5fc:	ldr	w0, [x19, #24]
     600:	ldp	x19, x20, [sp, #16]
     604:	ldp	x29, x30, [sp], #32
     608:	ret
     60c:	ldr	w2, [x20, #28]
     610:	tbz	w2, #31, 5e4 <__gcov_close+0x24>
     614:	mov	w0, w1
     618:	bl	0 <gcov_write_block>
     61c:	ldr	x0, [x20]
     620:	b	5e4 <__gcov_close+0x24>
     624:	nop

0000000000000628 <__gcov_write_unsigned>:
     628:	stp	x29, x30, [sp, #-32]!
     62c:	mov	x29, sp
     630:	str	x19, [sp, #16]
     634:	mov	w19, w0
     638:	mov	w0, #0x1                   	// #1
     63c:	bl	68 <gcov_write_words>
     640:	str	w19, [x0]
     644:	ldr	x19, [sp, #16]
     648:	ldp	x29, x30, [sp], #32
     64c:	ret

0000000000000650 <__gcov_write_counter>:
     650:	stp	x29, x30, [sp, #-32]!
     654:	mov	x29, sp
     658:	str	x19, [sp, #16]
     65c:	mov	x19, x0
     660:	mov	w0, #0x2                   	// #2
     664:	bl	68 <gcov_write_words>
     668:	str	x19, [x0]
     66c:	ldr	x19, [sp, #16]
     670:	ldp	x29, x30, [sp], #32
     674:	ret

0000000000000678 <__gcov_write_tag_length>:
     678:	stp	x29, x30, [sp, #-32]!
     67c:	mov	x29, sp
     680:	stp	x19, x20, [sp, #16]
     684:	mov	w19, w1
     688:	mov	w20, w0
     68c:	mov	w0, #0x2                   	// #2
     690:	bl	68 <gcov_write_words>
     694:	stp	w20, w19, [x0]
     698:	ldp	x19, x20, [sp, #16]
     69c:	ldp	x29, x30, [sp], #32
     6a0:	ret
     6a4:	nop

00000000000006a8 <__gcov_write_summary>:
     6a8:	stp	x29, x30, [sp, #-32]!
     6ac:	mov	x29, sp
     6b0:	stp	x19, x20, [sp, #16]
     6b4:	mov	x19, x1
     6b8:	mov	w20, w0
     6bc:	mov	w0, #0x2                   	// #2
     6c0:	bl	68 <gcov_write_words>
     6c4:	mov	x1, x0
     6c8:	mov	w2, #0x2                   	// #2
     6cc:	mov	w0, #0x1                   	// #1
     6d0:	stp	w20, w2, [x1]
     6d4:	ldr	w20, [x19]
     6d8:	bl	68 <gcov_write_words>
     6dc:	mov	x1, x0
     6e0:	mov	w0, #0x1                   	// #1
     6e4:	ldr	x19, [x19, #8]
     6e8:	str	w20, [x1]
     6ec:	bl	68 <gcov_write_words>
     6f0:	str	w19, [x0]
     6f4:	ldp	x19, x20, [sp, #16]
     6f8:	ldp	x29, x30, [sp], #32
     6fc:	ret

0000000000000700 <__gcov_read_unsigned>:
     700:	stp	x29, x30, [sp, #-16]!
     704:	mov	w0, #0x1                   	// #1
     708:	mov	x29, sp
     70c:	bl	d8 <gcov_read_words>
     710:	cbz	x0, 720 <__gcov_read_unsigned+0x20>
     714:	ldr	w0, [x0]
     718:	ldp	x29, x30, [sp], #16
     71c:	ret
     720:	mov	w0, #0x0                   	// #0
     724:	ldp	x29, x30, [sp], #16
     728:	ret
     72c:	nop

0000000000000730 <__gcov_read_counter>:
     730:	stp	x29, x30, [sp, #-16]!
     734:	mov	w0, #0x2                   	// #2
     738:	mov	x29, sp
     73c:	bl	d8 <gcov_read_words>
     740:	cbz	x0, 750 <__gcov_read_counter+0x20>
     744:	ldp	x29, x30, [sp], #16
     748:	ldr	x0, [x0]
     74c:	ret
     750:	mov	x0, #0x0                   	// #0
     754:	ldp	x29, x30, [sp], #16
     758:	ret
     75c:	nop

0000000000000760 <mangle_path>:
     760:	stp	x29, x30, [sp, #-80]!
     764:	mov	x29, sp
     768:	stp	x19, x20, [sp, #16]
     76c:	stp	x21, x22, [sp, #32]
     770:	stp	x23, x24, [sp, #48]
     774:	mov	w23, #0x5e                  	// #94
     778:	mov	w24, #0x23                  	// #35
     77c:	str	x0, [sp, #72]
     780:	bl	0 <strlen>
     784:	add	x0, x0, #0x1
     788:	bl	0 <malloc>
     78c:	ldr	x1, [sp, #72]
     790:	mov	x22, x0
     794:	mov	x21, x0
     798:	ldrb	w2, [x1]
     79c:	cbz	w2, 7f0 <mangle_path+0x90>
     7a0:	mov	x20, x1
     7a4:	mov	w19, w2
     7a8:	b	7b4 <mangle_path+0x54>
     7ac:	ldrb	w19, [x20, #1]!
     7b0:	cbz	w19, 7bc <mangle_path+0x5c>
     7b4:	cmp	w19, #0x2f
     7b8:	b.ne	7ac <mangle_path+0x4c>  // b.any
     7bc:	cmp	w2, #0x2e
     7c0:	sub	x2, x20, x1
     7c4:	ccmp	x2, #0x2, #0x0, eq  // eq = none
     7c8:	b.eq	80c <mangle_path+0xac>  // b.none
     7cc:	mov	x0, x21
     7d0:	add	x21, x21, x2
     7d4:	bl	0 <memcpy>
     7d8:	mov	x1, x20
     7dc:	cbz	w19, 798 <mangle_path+0x38>
     7e0:	ldrb	w2, [x20, #1]
     7e4:	add	x1, x20, #0x1
     7e8:	strb	w24, [x21], #1
     7ec:	cbnz	w2, 7a0 <mangle_path+0x40>
     7f0:	strb	wzr, [x21]
     7f4:	mov	x0, x22
     7f8:	ldp	x19, x20, [sp, #16]
     7fc:	ldp	x21, x22, [sp, #32]
     800:	ldp	x23, x24, [sp, #48]
     804:	ldp	x29, x30, [sp], #80
     808:	ret
     80c:	ldrb	w0, [x1, #1]
     810:	cmp	w0, #0x2e
     814:	b.ne	7cc <mangle_path+0x6c>  // b.any
     818:	strb	w23, [x21], #1
     81c:	b	7d8 <mangle_path+0x78>

0000000000000820 <__gcov_read_summary>:
     820:	stp	x29, x30, [sp, #-32]!
     824:	mov	x29, sp
     828:	str	x19, [sp, #16]
     82c:	mov	x19, x0
     830:	mov	w0, #0x1                   	// #1
     834:	bl	d8 <gcov_read_words>
     838:	cbz	x0, 864 <__gcov_read_summary+0x44>
     83c:	ldr	w0, [x0]
     840:	str	w0, [x19]
     844:	mov	w0, #0x1                   	// #1
     848:	bl	d8 <gcov_read_words>
     84c:	cbz	x0, 878 <__gcov_read_summary+0x58>
     850:	ldr	w0, [x0]
     854:	str	x0, [x19, #8]
     858:	ldr	x19, [sp, #16]
     85c:	ldp	x29, x30, [sp], #32
     860:	ret
     864:	mov	w0, #0x0                   	// #0
     868:	str	w0, [x19]
     86c:	mov	w0, #0x1                   	// #1
     870:	bl	d8 <gcov_read_words>
     874:	cbnz	x0, 850 <__gcov_read_summary+0x30>
     878:	mov	x0, #0x0                   	// #0
     87c:	str	x0, [x19, #8]
     880:	ldr	x19, [sp, #16]
     884:	ldp	x29, x30, [sp], #32
     888:	ret
     88c:	nop

0000000000000890 <__gcov_seek>:
     890:	stp	x29, x30, [sp, #-32]!
     894:	mov	x29, sp
     898:	stp	x19, x20, [sp, #16]
     89c:	adrp	x19, 1028 <gcov_do_dump+0x6b0>
     8a0:	mov	w20, w0
     8a4:	ldr	x0, [x19]
     8a8:	ldr	w0, [x0, #12]
     8ac:	cbnz	w0, 8e0 <__gcov_seek+0x50>
     8b0:	ldr	x19, [x19]
     8b4:	lsl	w1, w20, #2
     8b8:	mov	w2, #0x0                   	// #0
     8bc:	ldr	x0, [x19]
     8c0:	bl	0 <fseek>
     8c4:	ldr	x0, [x19]
     8c8:	bl	0 <ftell>
     8cc:	asr	x0, x0, #2
     8d0:	str	w0, [x19, #8]
     8d4:	ldp	x19, x20, [sp, #16]
     8d8:	ldp	x29, x30, [sp], #32
     8dc:	ret
     8e0:	bl	0 <gcov_write_block>
     8e4:	b	8b0 <__gcov_seek+0x20>

00000000000008e8 <__gcov_sort_n_vals>:
     8e8:	cmp	w1, #0x2
     8ec:	b.le	970 <__gcov_sort_n_vals+0x88>
     8f0:	sub	w1, w1, #0x3
     8f4:	add	x8, x0, #0x10
     8f8:	and	w12, w1, #0xfffffffe
     8fc:	mov	w9, #0x0                   	// #0
     900:	ldp	x11, x6, [x8]
     904:	mov	w2, w9
     908:	mov	w10, w9
     90c:	orr	w7, w9, #0xfffffffe
     910:	mov	x1, x8
     914:	add	w9, w9, #0x2
     918:	ldur	x4, [x1, #-8]
     91c:	mov	x3, x1
     920:	sub	w2, w2, #0x2
     924:	add	x5, x1, #0x8
     928:	cmp	x6, x4
     92c:	b.le	95c <__gcov_sort_n_vals+0x74>
     930:	ldur	x5, [x1, #-16]
     934:	stp	x5, x4, [x1]
     938:	cmp	w2, w7
     93c:	sub	x1, x3, #0x10
     940:	b.ne	918 <__gcov_sort_n_vals+0x30>  // b.any
     944:	sxtw	x1, w2
     948:	add	x1, x1, #0x2
     94c:	lsl	x1, x1, #3
     950:	add	x5, x1, #0x8
     954:	add	x3, x0, x1
     958:	add	x5, x0, x5
     95c:	str	x11, [x3]
     960:	add	x8, x8, #0x10
     964:	str	x6, [x5]
     968:	cmp	w12, w10
     96c:	b.ne	900 <__gcov_sort_n_vals+0x18>  // b.any
     970:	ret
     974:	nop

0000000000000978 <gcov_do_dump>:
     978:	stp	x29, x30, [sp, #-224]!
     97c:	mov	x29, sp
     980:	stp	x19, x20, [sp, #16]
     984:	mov	x19, x0
     988:	stp	x21, x22, [sp, #32]
     98c:	mov	x22, x0
     990:	str	w1, [sp, #164]
     994:	cbz	x0, 9f4 <gcov_do_dump+0x7c>
     998:	mov	x7, x0
     99c:	mov	x19, #0x0                   	// #0
     9a0:	ldr	w5, [x7, #104]
     9a4:	cbz	w5, 9ec <gcov_do_dump+0x74>
     9a8:	ldr	x6, [x7, #112]
     9ac:	mov	x4, #0x0                   	// #0
     9b0:	ldr	x0, [x6, x4, lsl #3]
     9b4:	ldr	w2, [x0, #24]
     9b8:	cbz	w2, 9e0 <gcov_do_dump+0x68>
     9bc:	ldr	x3, [x0, #32]
     9c0:	mov	x0, #0x0                   	// #0
     9c4:	nop
     9c8:	ldr	x1, [x3, x0, lsl #3]
     9cc:	add	x0, x0, #0x1
     9d0:	cmp	x19, x1
     9d4:	csel	x19, x19, x1, ge  // ge = tcont
     9d8:	cmp	w2, w0
     9dc:	b.hi	9c8 <gcov_do_dump+0x50>  // b.pmore
     9e0:	add	x4, x4, #0x1
     9e4:	cmp	w5, w4
     9e8:	b.ne	9b0 <gcov_do_dump+0x38>  // b.any
     9ec:	ldr	x7, [x7, #8]
     9f0:	cbnz	x7, 9a0 <gcov_do_dump+0x28>
     9f4:	adrp	x0, 0 <gcov_write_block>
     9f8:	add	x0, x0, #0x0
     9fc:	bl	0 <getenv>
     a00:	cbz	x0, 14f0 <gcov_do_dump+0xb78>
     a04:	mov	x1, #0x0                   	// #0
     a08:	mov	w2, #0xa                   	// #10
     a0c:	bl	0 <strtol>
     a10:	mov	x1, x0
     a14:	cmp	w1, #0x0
     a18:	adrp	x0, 0 <gcov_write_block>
     a1c:	csel	w1, w1, wzr, ge  // ge = tcont
     a20:	add	x0, x0, #0x0
     a24:	str	w1, [sp, #120]
     a28:	bl	0 <getenv>
     a2c:	mov	x20, x0
     a30:	cbz	x0, 1524 <gcov_do_dump+0xbac>
     a34:	bl	0 <strlen>
     a38:	cbz	x0, 1524 <gcov_do_dump+0xbac>
     a3c:	sub	x21, x0, #0x1
     a40:	ldrb	w1, [x20, x21]
     a44:	cmp	w1, #0x2f
     a48:	b.eq	1520 <gcov_do_dump+0xba8>  // b.none
     a4c:	mov	x21, x0
     a50:	add	x0, x0, #0x1
     a54:	bl	0 <malloc>
     a58:	str	x0, [sp, #128]
     a5c:	mov	x1, x20
     a60:	mov	x2, x21
     a64:	bl	0 <memcpy>
     a68:	strb	wzr, [x0, x21]
     a6c:	cbz	x22, ca0 <gcov_do_dump+0x328>
     a70:	add	x0, sp, #0xd0
     a74:	stp	x23, x24, [sp, #48]
     a78:	stp	x25, x26, [sp, #64]
     a7c:	stp	x27, x28, [sp, #80]
     a80:	str	x0, [sp, #152]
     a84:	nop
     a88:	adrp	x1, 0 <gcov_write_block>
     a8c:	stp	xzr, xzr, [sp, #192]
     a90:	ldr	x0, [x22, #96]
     a94:	str	xzr, [x1]
     a98:	cbz	x0, aec <gcov_do_dump+0x174>
     a9c:	ldr	w3, [x22, #104]
     aa0:	cbz	w3, aec <gcov_do_dump+0x174>
     aa4:	add	x20, x22, #0x20
     aa8:	mov	x23, #0x0                   	// #0
     aac:	nop
     ab0:	ldr	x1, [x22, #112]
     ab4:	mov	x0, #0x0                   	// #0
     ab8:	ldr	x1, [x1, x23, lsl #3]
     abc:	add	x1, x1, #0x18
     ac0:	ldr	x2, [x20, x0, lsl #3]
     ac4:	cbz	x2, ad4 <gcov_do_dump+0x15c>
     ac8:	cmp	x0, #0x8
     acc:	b.eq	cb4 <gcov_do_dump+0x33c>  // b.none
     ad0:	add	x1, x1, #0x10
     ad4:	add	x0, x0, #0x1
     ad8:	cmp	x0, #0x9
     adc:	b.ne	ac0 <gcov_do_dump+0x148>  // b.any
     ae0:	add	x23, x23, #0x1
     ae4:	cmp	w3, w23
     ae8:	b.ne	ab0 <gcov_do_dump+0x138>  // b.any
     aec:	ldr	w0, [sp, #120]
     af0:	ldr	x21, [x22, #24]
     af4:	cbz	w0, b38 <gcov_do_dump+0x1c0>
     af8:	ldrb	w0, [x21]
     afc:	mov	x1, x21
     b00:	cmp	w0, #0x2f
     b04:	b.ne	b10 <gcov_do_dump+0x198>  // b.any
     b08:	ldrb	w0, [x21, #1]
     b0c:	add	x1, x21, #0x1
     b10:	ldr	w2, [sp, #120]
     b14:	cbz	w0, b38 <gcov_do_dump+0x1c0>
     b18:	cmp	w0, #0x2f
     b1c:	b.ne	b28 <gcov_do_dump+0x1b0>  // b.any
     b20:	sub	w2, w2, #0x1
     b24:	mov	x21, x1
     b28:	ldrb	w0, [x1, #1]!
     b2c:	cmp	w2, #0x0
     b30:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     b34:	b.ne	b18 <gcov_do_dump+0x1a0>  // b.any
     b38:	mov	x0, x21
     b3c:	bl	0 <strlen>
     b40:	ldr	x25, [sp, #128]
     b44:	mov	x20, x0
     b48:	cbz	x25, 10fc <gcov_do_dump+0x784>
     b4c:	mov	x0, x25
     b50:	bl	0 <strlen>
     b54:	add	x1, x20, #0x2
     b58:	mov	x23, x0
     b5c:	ldrb	w20, [x21]
     b60:	add	x0, x1, x0
     b64:	bl	0 <malloc>
     b68:	strb	wzr, [x0]
     b6c:	mov	x24, x0
     b70:	cbz	x23, b80 <gcov_do_dump+0x208>
     b74:	add	x2, x23, #0x1
     b78:	mov	x1, x25
     b7c:	bl	0 <memcpy>
     b80:	cmp	w20, #0x2f
     b84:	b.eq	b90 <gcov_do_dump+0x218>  // b.none
     b88:	mov	w0, #0x2f                  	// #47
     b8c:	strb	w0, [x24], #1
     b90:	mov	x1, x21
     b94:	mov	x0, x24
     b98:	bl	0 <strcat>
     b9c:	strb	wzr, [sp, #184]
     ba0:	ldrb	w1, [x24]
     ba4:	cbz	w1, 1124 <gcov_do_dump+0x7ac>
     ba8:	mov	x26, x24
     bac:	add	x0, sp, #0xb8
     bb0:	str	x0, [sp, #104]
     bb4:	adrp	x27, 0 <gcov_write_block>
     bb8:	mov	x25, x24
     bbc:	add	x27, x27, #0x0
     bc0:	ldrb	w20, [x26, #1]!
     bc4:	cmp	w1, #0x25
     bc8:	b.eq	bec <gcov_do_dump+0x274>  // b.none
     bcc:	nop
     bd0:	mov	x24, x26
     bd4:	mov	w1, w20
     bd8:	cbz	w1, bf0 <gcov_do_dump+0x278>
     bdc:	mov	x26, x24
     be0:	cmp	w1, #0x25
     be4:	ldrb	w20, [x26, #1]!
     be8:	b.ne	bd0 <gcov_do_dump+0x258>  // b.any
     bec:	cbnz	w20, d18 <gcov_do_dump+0x3a0>
     bf0:	mov	x0, x25
     bf4:	bl	4d0 <__gcov_open>
     bf8:	cbz	w0, 1020 <gcov_do_dump+0x6a8>
     bfc:	mov	w0, #0x1                   	// #1
     c00:	bl	d8 <gcov_read_words>
     c04:	cbz	x0, dec <gcov_do_dump+0x474>
     c08:	ldr	w0, [x0]
     c0c:	cbz	w0, dec <gcov_do_dump+0x474>
     c10:	mov	w1, #0x6461                	// #25697
     c14:	movk	w1, #0x6763, lsl #16
     c18:	cmp	w0, w1
     c1c:	b.eq	1164 <gcov_do_dump+0x7ec>  // b.none
     c20:	adrp	x0, 0 <gcov_write_block>
     c24:	mov	x1, x25
     c28:	add	x0, x0, #0x0
     c2c:	bl	2f8 <gcov_error>
     c30:	adrp	x0, 0 <gcov_write_block>
     c34:	ldr	x1, [x0]
     c38:	cbz	x1, c5c <gcov_do_dump+0x2e4>
     c3c:	nop
     c40:	mov	x0, x22
     c44:	mov	w2, #0x9                   	// #9
     c48:	bl	1c0 <free_fn_data>
     c4c:	mov	x1, x0
     c50:	adrp	x0, 0 <gcov_write_block>
     c54:	str	x1, [x0]
     c58:	cbnz	x1, c40 <gcov_do_dump+0x2c8>
     c5c:	bl	5c0 <__gcov_close>
     c60:	cmp	w0, #0x0
     c64:	cbz	w0, c84 <gcov_do_dump+0x30c>
     c68:	adrp	x0, 0 <gcov_write_block>
     c6c:	adrp	x1, 0 <gcov_write_block>
     c70:	add	x0, x0, #0x0
     c74:	add	x1, x1, #0x0
     c78:	csel	x0, x1, x0, lt  // lt = tstop
     c7c:	mov	x1, x25
     c80:	bl	2f8 <gcov_error>
     c84:	mov	x0, x25
     c88:	bl	0 <free>
     c8c:	ldr	x22, [x22, #8]
     c90:	cbnz	x22, a88 <gcov_do_dump+0x110>
     c94:	ldp	x23, x24, [sp, #48]
     c98:	ldp	x25, x26, [sp, #64]
     c9c:	ldp	x27, x28, [sp, #80]
     ca0:	ldp	x19, x20, [sp, #16]
     ca4:	ldp	x21, x22, [sp, #32]
     ca8:	ldr	x0, [sp, #128]
     cac:	ldp	x29, x30, [sp], #224
     cb0:	b	0 <free>
     cb4:	ldr	w21, [x1]
     cb8:	mov	w0, #0x8e39                	// #36409
     cbc:	movk	w0, #0x38e3, lsl #16
     cc0:	smull	x24, w21, w0
     cc4:	asr	x24, x24, #33
     cc8:	sub	w24, w24, w21, asr #31
     ccc:	add	w24, w24, w24, lsl #3
     cd0:	subs	w24, w21, w24
     cd4:	b.ne	16f0 <gcov_do_dump+0xd78>  // b.any
     cd8:	ldr	x25, [x1, #8]
     cdc:	cmp	w21, #0x0
     ce0:	add	x25, x25, #0x8
     ce4:	b.le	ae0 <gcov_do_dump+0x168>
     ce8:	mov	x0, x25
     cec:	add	w24, w24, #0x9
     cf0:	mov	w1, #0x8                   	// #8
     cf4:	bl	8e8 <__gcov_sort_n_vals>
     cf8:	cmp	w21, w24
     cfc:	add	x25, x25, #0x48
     d00:	b.gt	ce8 <gcov_do_dump+0x370>
     d04:	ldr	w3, [x22, #104]
     d08:	add	x23, x23, #0x1
     d0c:	cmp	w3, w23
     d10:	b.ne	ab0 <gcov_do_dump+0x138>  // b.any
     d14:	b	aec <gcov_do_dump+0x174>
     d18:	mov	x0, x25
     d1c:	bl	0 <strlen>
     d20:	cmp	w20, #0x70
     d24:	mov	x21, x0
     d28:	b.eq	dcc <gcov_do_dump+0x454>  // b.none
     d2c:	cmp	w20, #0x71
     d30:	b.ne	bf0 <gcov_do_dump+0x278>  // b.any
     d34:	ldrb	w0, [x24, #2]
     d38:	mov	x28, #0x0                   	// #0
     d3c:	cmp	w0, #0x7b
     d40:	b.eq	112c <gcov_do_dump+0x7b4>  // b.none
     d44:	sub	x1, x26, x25
     d48:	sub	x24, x24, x25
     d4c:	sub	w21, w21, w1
     d50:	mov	x0, x28
     d54:	and	x20, x24, #0xffffffff
     d58:	bl	0 <strlen>
     d5c:	mov	x23, x0
     d60:	add	w1, w24, #0x1
     d64:	add	w0, w21, w0
     d68:	add	w0, w1, w0
     d6c:	and	x23, x23, #0xffffffff
     d70:	bl	0 <malloc>
     d74:	mov	x24, x0
     d78:	mov	x2, x20
     d7c:	mov	x1, x25
     d80:	bl	0 <memcpy>
     d84:	add	x0, x0, x20
     d88:	mov	x1, x28
     d8c:	mov	x2, x23
     d90:	bl	0 <memcpy>
     d94:	add	x0, x0, x23
     d98:	mov	x1, x26
     d9c:	mov	w2, w21
     da0:	bl	0 <memcpy>
     da4:	mov	x1, x0
     da8:	add	x20, x20, x23
     dac:	mov	x0, x25
     db0:	mov	x25, x24
     db4:	add	x24, x24, x20
     db8:	strb	wzr, [x1, w21, uxtw]
     dbc:	bl	0 <free>
     dc0:	ldrb	w1, [x24, #1]!
     dc4:	cbnz	w1, bdc <gcov_do_dump+0x264>
     dc8:	b	bf0 <gcov_do_dump+0x278>
     dcc:	bl	0 <getpid>
     dd0:	add	x26, x24, #0x2
     dd4:	ldr	x28, [sp, #152]
     dd8:	mov	w2, w0
     ddc:	mov	x1, x27
     de0:	mov	x0, x28
     de4:	bl	0 <sprintf>
     de8:	b	d44 <gcov_do_dump+0x3cc>
     dec:	add	x0, sp, #0xc0
     df0:	str	x0, [sp, #136]
     df4:	adrp	x3, 1028 <gcov_do_dump+0x6b0>
     df8:	mov	w4, #0xffffffff            	// #-1
     dfc:	mov	w2, #0x0                   	// #0
     e00:	mov	x1, #0x0                   	// #0
     e04:	ldr	x3, [x3]
     e08:	ldr	x0, [x3]
     e0c:	str	xzr, [x3, #8]
     e10:	str	w4, [x3, #28]
     e14:	bl	0 <fseek>
     e18:	ldr	w0, [sp, #164]
     e1c:	cbnz	w0, e38 <gcov_do_dump+0x4c0>
     e20:	ldr	x1, [sp, #200]
     e24:	ldr	w0, [sp, #192]
     e28:	add	x1, x1, x19
     e2c:	str	x1, [sp, #200]
     e30:	add	w0, w0, #0x1
     e34:	str	w0, [sp, #192]
     e38:	mov	w0, #0x2                   	// #2
     e3c:	bl	68 <gcov_write_words>
     e40:	mov	x2, #0x6461                	// #25697
     e44:	mov	x1, x0
     e48:	movk	x2, #0x6763, lsl #16
     e4c:	mov	w0, #0x1                   	// #1
     e50:	movk	x2, #0x322a, lsl #32
     e54:	mov	w24, #0x0                   	// #0
     e58:	movk	x2, #0x4139, lsl #48
     e5c:	str	x2, [x1]
     e60:	ldr	w20, [x22, #16]
     e64:	bl	68 <gcov_write_words>
     e68:	mov	x2, x0
     e6c:	mov	w0, #0xa1000000            	// #-1593835520
     e70:	ldr	x1, [sp, #136]
     e74:	str	w20, [x2]
     e78:	bl	6a8 <__gcov_write_summary>
     e7c:	ldr	w0, [x22, #104]
     e80:	cbz	w0, ff4 <gcov_do_dump+0x67c>
     e84:	add	x27, x22, #0x20
     e88:	b	ec4 <gcov_do_dump+0x54c>
     e8c:	ldr	x0, [x22, #112]
     e90:	ldr	x20, [x0, w24, uxtw #3]
     e94:	cbz	x20, ea4 <gcov_do_dump+0x52c>
     e98:	ldr	x0, [x20]
     e9c:	cmp	x0, x22
     ea0:	b.eq	1004 <gcov_do_dump+0x68c>  // b.none
     ea4:	mov	w0, #0x2                   	// #2
     ea8:	bl	68 <gcov_write_words>
     eac:	mov	x1, #0x1000000             	// #16777216
     eb0:	str	x1, [x0]
     eb4:	ldr	w0, [x22, #104]
     eb8:	add	w24, w24, #0x1
     ebc:	cmp	w24, w0
     ec0:	b.eq	ff4 <gcov_do_dump+0x67c>  // b.none
     ec4:	adrp	x0, 0 <gcov_write_block>
     ec8:	ldr	x20, [x0]
     ecc:	cbz	x20, e8c <gcov_do_dump+0x514>
     ed0:	ldr	w0, [x20, #8]
     ed4:	cmp	w0, w24
     ed8:	b.ne	e8c <gcov_do_dump+0x514>  // b.any
     edc:	mov	w0, #0x2                   	// #2
     ee0:	bl	68 <gcov_write_words>
     ee4:	mov	w1, #0x1                   	// #1
     ee8:	add	x20, x20, #0x10
     eec:	str	w1, [sp, #104]
     ef0:	mov	x1, #0x1000000             	// #16777216
     ef4:	movk	x1, #0x3, lsl #32
     ef8:	str	x1, [x0]
     efc:	ldr	w2, [x20, #8]
     f00:	mov	w0, #0x1                   	// #1
     f04:	str	w2, [sp, #116]
     f08:	add	x23, x20, #0x18
     f0c:	mov	x21, #0x0                   	// #0
     f10:	bl	68 <gcov_write_words>
     f14:	mov	x1, x0
     f18:	ldr	w2, [sp, #116]
     f1c:	mov	w0, #0x1                   	// #1
     f20:	str	w2, [x1]
     f24:	ldr	w2, [x20, #12]
     f28:	str	w2, [sp, #116]
     f2c:	bl	68 <gcov_write_words>
     f30:	mov	x1, x0
     f34:	ldr	w2, [sp, #116]
     f38:	mov	w0, #0x1                   	// #1
     f3c:	str	w2, [x1]
     f40:	ldr	w20, [x20, #16]
     f44:	bl	68 <gcov_write_words>
     f48:	str	w20, [x0]
     f4c:	b	f5c <gcov_do_dump+0x5e4>
     f50:	add	x21, x21, #0x8
     f54:	cmp	x21, #0x48
     f58:	b.eq	fc0 <gcov_do_dump+0x648>  // b.none
     f5c:	ldr	x0, [x27, x21]
     f60:	cbz	x0, f50 <gcov_do_dump+0x5d8>
     f64:	ldr	w28, [x23]
     f68:	mov	w0, #0x2                   	// #2
     f6c:	bl	68 <gcov_write_words>
     f70:	sub	w20, w28, #0x1
     f74:	mov	w1, #0x1a10000             	// #27328512
     f78:	ldr	x26, [x23, #8]
     f7c:	add	w4, w1, w21, lsl #14
     f80:	lsl	w3, w28, #1
     f84:	ubfiz	x20, x20, #3, #32
     f88:	stp	w4, w3, [x0]
     f8c:	add	x20, x20, #0x8
     f90:	add	x20, x26, x20
     f94:	cbz	w28, fb0 <gcov_do_dump+0x638>
     f98:	ldr	x28, [x26], #8
     f9c:	mov	w0, #0x2                   	// #2
     fa0:	bl	68 <gcov_write_words>
     fa4:	str	x28, [x0]
     fa8:	cmp	x26, x20
     fac:	b.ne	f98 <gcov_do_dump+0x620>  // b.any
     fb0:	add	x21, x21, #0x8
     fb4:	add	x23, x23, #0x10
     fb8:	cmp	x21, #0x48
     fbc:	b.ne	f5c <gcov_do_dump+0x5e4>  // b.any
     fc0:	ldr	w0, [sp, #104]
     fc4:	cbz	w0, eb4 <gcov_do_dump+0x53c>
     fc8:	adrp	x0, 0 <gcov_write_block>
     fcc:	mov	w2, #0x9                   	// #9
     fd0:	add	w24, w24, #0x1
     fd4:	ldr	x1, [x0]
     fd8:	mov	x0, x22
     fdc:	bl	1c0 <free_fn_data>
     fe0:	adrp	x1, 0 <gcov_write_block>
     fe4:	str	x0, [x1]
     fe8:	ldr	w0, [x22, #104]
     fec:	cmp	w24, w0
     ff0:	b.ne	ec4 <gcov_do_dump+0x54c>  // b.any
     ff4:	mov	w0, #0x1                   	// #1
     ff8:	bl	68 <gcov_write_words>
     ffc:	str	wzr, [x0]
    1000:	b	c30 <gcov_do_dump+0x2b8>
    1004:	mov	w0, #0x2                   	// #2
    1008:	bl	68 <gcov_write_words>
    100c:	mov	x1, #0x1000000             	// #16777216
    1010:	str	wzr, [sp, #104]
    1014:	movk	x1, #0x3, lsl #32
    1018:	str	x1, [x0]
    101c:	b	efc <gcov_do_dump+0x584>
    1020:	ldrb	w21, [x25]
    1024:	mov	x23, x25
    1028:	cmp	w21, #0x2f
    102c:	b.ne	1038 <gcov_do_dump+0x6c0>  // b.any
    1030:	ldrb	w21, [x25, #1]
    1034:	add	x23, x25, #0x1
    1038:	mov	w20, #0x2f                  	// #47
    103c:	cbnz	w21, 104c <gcov_do_dump+0x6d4>
    1040:	b	1078 <gcov_do_dump+0x700>
    1044:	ldrb	w21, [x23, #1]!
    1048:	cbz	w21, 1078 <gcov_do_dump+0x700>
    104c:	cmp	w21, #0x2f
    1050:	b.ne	1044 <gcov_do_dump+0x6cc>  // b.any
    1054:	strb	wzr, [x23]
    1058:	mov	x0, x25
    105c:	mov	w1, #0x0                   	// #0
    1060:	bl	0 <access>
    1064:	cmn	w0, #0x1
    1068:	b.eq	10a4 <gcov_do_dump+0x72c>  // b.none
    106c:	strb	w20, [x23]
    1070:	ldrb	w21, [x23, #1]!
    1074:	cbnz	w21, 104c <gcov_do_dump+0x6d4>
    1078:	mov	x0, x25
    107c:	bl	4d0 <__gcov_open>
    1080:	cbnz	w0, bfc <gcov_do_dump+0x284>
    1084:	adrp	x0, 0 <stderr>
    1088:	mov	x2, x25
    108c:	adrp	x1, 0 <gcov_write_block>
    1090:	add	x1, x1, #0x0
    1094:	ldr	x0, [x0]
    1098:	ldr	x0, [x0]
    109c:	bl	0 <fprintf>
    10a0:	b	c84 <gcov_do_dump+0x30c>
    10a4:	mov	x0, x25
    10a8:	mov	w1, #0x1ed                 	// #493
    10ac:	bl	0 <mkdir>
    10b0:	cmn	w0, #0x1
    10b4:	b.ne	106c <gcov_do_dump+0x6f4>  // b.any
    10b8:	bl	0 <__errno_location>
    10bc:	ldr	w0, [x0]
    10c0:	cmp	w0, #0x11
    10c4:	b.eq	106c <gcov_do_dump+0x6f4>  // b.none
    10c8:	mov	x1, x25
    10cc:	adrp	x0, 0 <gcov_write_block>
    10d0:	add	x0, x0, #0x0
    10d4:	bl	2f8 <gcov_error>
    10d8:	adrp	x0, 0 <stderr>
    10dc:	strb	w21, [x23]
    10e0:	mov	x2, x25
    10e4:	adrp	x1, 0 <gcov_write_block>
    10e8:	ldr	x0, [x0]
    10ec:	add	x1, x1, #0x0
    10f0:	ldr	x0, [x0]
    10f4:	bl	0 <fprintf>
    10f8:	b	c84 <gcov_do_dump+0x30c>
    10fc:	add	x0, x0, #0x2
    1100:	bl	0 <malloc>
    1104:	mov	x24, x0
    1108:	strb	wzr, [x0]
    110c:	mov	x1, x21
    1110:	mov	x0, x24
    1114:	bl	0 <strcat>
    1118:	strb	wzr, [sp, #184]
    111c:	ldrb	w1, [x24]
    1120:	cbnz	w1, ba8 <gcov_do_dump+0x230>
    1124:	mov	x25, x24
    1128:	b	bf0 <gcov_do_dump+0x278>
    112c:	add	x20, x24, #0x3
    1130:	mov	w1, #0x7d                  	// #125
    1134:	mov	x0, x20
    1138:	bl	0 <strchr>
    113c:	cbz	x0, bf0 <gcov_do_dump+0x278>
    1140:	mov	x26, x0
    1144:	mov	x0, x20
    1148:	strb	wzr, [x26], #1
    114c:	bl	0 <getenv>
    1150:	mov	x28, x0
    1154:	cmp	x0, #0x0
    1158:	ldr	x0, [sp, #104]
    115c:	csel	x28, x0, x28, eq  // eq = none
    1160:	b	d44 <gcov_do_dump+0x3cc>
    1164:	mov	w0, #0x1                   	// #1
    1168:	bl	d8 <gcov_read_words>
    116c:	cbz	x0, 1648 <gcov_do_dump+0xcd0>
    1170:	ldr	w1, [x0]
    1174:	mov	w0, #0x322a                	// #12842
    1178:	movk	w0, #0x4139, lsl #16
    117c:	cmp	w1, w0
    1180:	b.eq	1194 <gcov_do_dump+0x81c>  // b.none
    1184:	mov	x2, x25
    1188:	add	x0, x22, #0x18
    118c:	bl	418 <gcov_version.isra.0.part.0>
    1190:	cbz	w0, c30 <gcov_do_dump+0x2b8>
    1194:	mov	w0, #0x1                   	// #1
    1198:	bl	d8 <gcov_read_words>
    119c:	cbz	x0, 1640 <gcov_do_dump+0xcc8>
    11a0:	ldr	w0, [x0]
    11a4:	ldr	w1, [x22, #16]
    11a8:	cmp	w1, w0
    11ac:	b.eq	11cc <gcov_do_dump+0x854>  // b.none
    11b0:	add	x2, sp, #0xc0
    11b4:	mov	x1, x25
    11b8:	adrp	x0, 0 <gcov_write_block>
    11bc:	add	x0, x0, #0x0
    11c0:	str	x2, [sp, #136]
    11c4:	bl	2f8 <gcov_error>
    11c8:	b	df4 <gcov_do_dump+0x47c>
    11cc:	mov	w0, #0x1                   	// #1
    11d0:	bl	d8 <gcov_read_words>
    11d4:	cbz	x0, 1650 <gcov_do_dump+0xcd8>
    11d8:	ldr	w1, [x0]
    11dc:	mov	w0, #0xa1000000            	// #-1593835520
    11e0:	cmp	w1, w0
    11e4:	b.ne	1650 <gcov_do_dump+0xcd8>  // b.any
    11e8:	mov	w0, #0x1                   	// #1
    11ec:	bl	d8 <gcov_read_words>
    11f0:	cbz	x0, 16f0 <gcov_do_dump+0xd78>
    11f4:	ldr	w0, [x0]
    11f8:	cbz	w0, 16f0 <gcov_do_dump+0xd78>
    11fc:	add	x0, sp, #0xc0
    1200:	str	x0, [sp, #136]
    1204:	bl	820 <__gcov_read_summary>
    1208:	mov	w0, #0x1                   	// #1
    120c:	bl	d8 <gcov_read_words>
    1210:	cbz	x0, 1670 <gcov_do_dump+0xcf8>
    1214:	ldr	w2, [x22, #104]
    1218:	ldr	w1, [x0]
    121c:	cbz	w2, 16d4 <gcov_do_dump+0xd5c>
    1220:	ldr	x0, [x22, #112]
    1224:	mov	w2, #0x1000000             	// #16777216
    1228:	cmp	w1, w2
    122c:	ldr	x20, [x0]
    1230:	b.ne	1678 <gcov_do_dump+0xd00>  // b.any
    1234:	adrp	x0, 0 <gcov_write_block>
    1238:	add	x0, x0, #0x0
    123c:	mov	x28, #0x0                   	// #0
    1240:	str	x0, [sp, #168]
    1244:	adrp	x0, 0 <gcov_write_block>
    1248:	add	x0, x0, #0x0
    124c:	str	x0, [sp, #144]
    1250:	mov	w0, #0x1                   	// #1
    1254:	bl	d8 <gcov_read_words>
    1258:	str	w28, [sp, #124]
    125c:	str	w28, [sp, #160]
    1260:	cbz	x0, 13f4 <gcov_do_dump+0xa7c>
    1264:	ldr	w0, [x0]
    1268:	cbz	w0, 13f4 <gcov_do_dump+0xa7c>
    126c:	cmp	w0, #0x3
    1270:	b.ne	1438 <gcov_do_dump+0xac0>  // b.any
    1274:	cbz	x20, 1284 <gcov_do_dump+0x90c>
    1278:	ldr	x0, [x20]
    127c:	cmp	x0, x22
    1280:	b.eq	154c <gcov_do_dump+0xbd4>  // b.none
    1284:	add	x0, x22, #0x60
    1288:	add	x3, x22, #0x18
    128c:	mov	w1, #0x0                   	// #0
    1290:	ldr	x2, [x0], #-8
    1294:	cmp	x2, #0x0
    1298:	cinc	w1, w1, ne  // ne = any
    129c:	cmp	x3, x0
    12a0:	b.ne	1290 <gcov_do_dump+0x918>  // b.any
    12a4:	lsl	w1, w1, #4
    12a8:	add	w0, w1, #0x38
    12ac:	str	w0, [sp, #116]
    12b0:	bl	0 <malloc>
    12b4:	mov	x24, x0
    12b8:	cbz	x0, 16bc <gcov_do_dump+0xd44>
    12bc:	ldr	w1, [sp, #160]
    12c0:	mov	w0, #0x1                   	// #1
    12c4:	str	xzr, [x24]
    12c8:	str	w1, [x24, #8]
    12cc:	bl	d8 <gcov_read_words>
    12d0:	cbz	x0, 14e8 <gcov_do_dump+0xb70>
    12d4:	ldr	w1, [x0]
    12d8:	str	w1, [x24, #24]
    12dc:	mov	w0, #0x1                   	// #1
    12e0:	bl	d8 <gcov_read_words>
    12e4:	cbz	x0, 14cc <gcov_do_dump+0xb54>
    12e8:	ldr	w1, [x0]
    12ec:	mov	w0, #0x1                   	// #1
    12f0:	str	w1, [x24, #28]
    12f4:	bl	d8 <gcov_read_words>
    12f8:	cbz	x0, 14e0 <gcov_do_dump+0xb68>
    12fc:	ldr	w0, [x0]
    1300:	add	x20, x22, #0x20
    1304:	mov	x23, #0x0                   	// #0
    1308:	mov	w27, #0x0                   	// #0
    130c:	str	w0, [x24, #32]
    1310:	b	1320 <gcov_do_dump+0x9a8>
    1314:	add	x23, x23, #0x1
    1318:	cmp	x23, #0x9
    131c:	b.eq	13e8 <gcov_do_dump+0xa70>  // b.none
    1320:	ldr	x0, [x20, x23, lsl #3]
    1324:	mov	w21, w23
    1328:	cbz	x0, 1314 <gcov_do_dump+0x99c>
    132c:	mov	w0, #0x1                   	// #1
    1330:	bl	d8 <gcov_read_words>
    1334:	cbz	x0, 1458 <gcov_do_dump+0xae0>
    1338:	ldr	w1, [x0]
    133c:	mov	w0, #0x1a10000             	// #27328512
    1340:	add	w0, w0, w23, lsl #17
    1344:	cmp	w1, w0
    1348:	b.ne	1458 <gcov_do_dump+0xae0>  // b.any
    134c:	mov	w0, #0x1                   	// #1
    1350:	bl	d8 <gcov_read_words>
    1354:	cbz	x0, 14bc <gcov_do_dump+0xb44>
    1358:	ldr	w2, [x0]
    135c:	lsr	w2, w2, #1
    1360:	lsl	w0, w2, #3
    1364:	str	w0, [sp, #116]
    1368:	lsl	w0, w2, #3
    136c:	str	w2, [sp, #104]
    1370:	bl	0 <malloc>
    1374:	mov	x26, x0
    1378:	cbz	x0, 16c0 <gcov_do_dump+0xd48>
    137c:	ldr	w2, [sp, #104]
    1380:	ubfiz	x0, x27, #4, #32
    1384:	add	x0, x24, x0
    1388:	sub	w21, w2, #0x1
    138c:	ubfiz	x21, x21, #3, #32
    1390:	str	w2, [x0, #40]
    1394:	str	x26, [x0, #48]
    1398:	add	x21, x21, #0x8
    139c:	add	x21, x26, x21
    13a0:	cbnz	w2, 13b8 <gcov_do_dump+0xa40>
    13a4:	b	13d8 <gcov_do_dump+0xa60>
    13a8:	ldr	x0, [x0]
    13ac:	stur	x0, [x26, #-8]
    13b0:	cmp	x26, x21
    13b4:	b.eq	13d8 <gcov_do_dump+0xa60>  // b.none
    13b8:	mov	w0, #0x2                   	// #2
    13bc:	add	x26, x26, #0x8
    13c0:	bl	d8 <gcov_read_words>
    13c4:	cbnz	x0, 13a8 <gcov_do_dump+0xa30>
    13c8:	mov	x0, #0x0                   	// #0
    13cc:	stur	x0, [x26, #-8]
    13d0:	cmp	x26, x21
    13d4:	b.ne	13b8 <gcov_do_dump+0xa40>  // b.any
    13d8:	add	x23, x23, #0x1
    13dc:	add	w27, w27, #0x1
    13e0:	cmp	x23, #0x9
    13e4:	b.ne	1320 <gcov_do_dump+0x9a8>  // b.any
    13e8:	ldr	x0, [sp, #144]
    13ec:	str	x24, [sp, #144]
    13f0:	str	x24, [x0]
    13f4:	mov	w0, #0x1                   	// #1
    13f8:	bl	d8 <gcov_read_words>
    13fc:	ldr	w1, [sp, #160]
    1400:	add	w3, w1, #0x1
    1404:	str	w3, [sp, #124]
    1408:	cbz	x0, 14a8 <gcov_do_dump+0xb30>
    140c:	ldr	w2, [x22, #104]
    1410:	ldr	w1, [x0]
    1414:	cmp	w2, w3
    1418:	b.eq	16d8 <gcov_do_dump+0xd60>  // b.none
    141c:	ldr	x2, [x22, #112]
    1420:	add	x0, x28, #0x1
    1424:	mov	w3, #0x1000000             	// #16777216
    1428:	mov	x28, x0
    142c:	cmp	w1, w3
    1430:	ldr	x20, [x2, x0, lsl #3]
    1434:	b.eq	1250 <gcov_do_dump+0x8d8>  // b.none
    1438:	adrp	x2, 0 <gcov_write_block>
    143c:	add	x2, x2, #0x0
    1440:	ldr	w3, [sp, #124]
    1444:	mov	x1, x25
    1448:	adrp	x0, 0 <gcov_write_block>
    144c:	add	x0, x0, #0x0
    1450:	bl	2f8 <gcov_error>
    1454:	b	c30 <gcov_do_dump+0x2b8>
    1458:	adrp	x3, 0 <gcov_write_block>
    145c:	add	x3, x3, #0x0
    1460:	str	w23, [sp, #116]
    1464:	ldr	w4, [sp, #116]
    1468:	mov	x1, x25
    146c:	ldr	w2, [sp, #160]
    1470:	ldr	x0, [sp, #168]
    1474:	bl	2f8 <gcov_error>
    1478:	mov	w2, w21
    147c:	mov	x1, x24
    1480:	mov	x0, x22
    1484:	bl	1c0 <free_fn_data>
    1488:	str	x0, [sp, #144]
    148c:	cbz	x0, 1438 <gcov_do_dump+0xac0>
    1490:	mov	w0, #0x1                   	// #1
    1494:	bl	d8 <gcov_read_words>
    1498:	ldr	w1, [sp, #160]
    149c:	add	w3, w1, #0x1
    14a0:	str	w3, [sp, #124]
    14a4:	cbnz	x0, 140c <gcov_do_dump+0xa94>
    14a8:	ldr	w0, [x22, #104]
    14ac:	ldr	w1, [sp, #124]
    14b0:	cmp	w1, w0
    14b4:	b.eq	df4 <gcov_do_dump+0x47c>  // b.none
    14b8:	b	1438 <gcov_do_dump+0xac0>
    14bc:	mov	x0, #0x0                   	// #0
    14c0:	mov	w2, #0x0                   	// #0
    14c4:	str	wzr, [sp, #116]
    14c8:	b	136c <gcov_do_dump+0x9f4>
    14cc:	mov	w1, #0x0                   	// #0
    14d0:	str	w1, [x24, #28]
    14d4:	mov	w0, #0x1                   	// #1
    14d8:	bl	d8 <gcov_read_words>
    14dc:	cbnz	x0, 12fc <gcov_do_dump+0x984>
    14e0:	mov	w0, #0x0                   	// #0
    14e4:	b	1300 <gcov_do_dump+0x988>
    14e8:	mov	w1, #0x0                   	// #0
    14ec:	b	12d8 <gcov_do_dump+0x960>
    14f0:	adrp	x0, 0 <gcov_write_block>
    14f4:	add	x0, x0, #0x0
    14f8:	bl	0 <getenv>
    14fc:	mov	x20, x0
    1500:	cbz	x0, 1540 <gcov_do_dump+0xbc8>
    1504:	bl	0 <strlen>
    1508:	cbz	x0, 1540 <gcov_do_dump+0xbc8>
    150c:	sub	x21, x0, #0x1
    1510:	str	wzr, [sp, #120]
    1514:	ldrb	w1, [x20, x21]
    1518:	cmp	w1, #0x2f
    151c:	b.ne	a4c <gcov_do_dump+0xd4>  // b.any
    1520:	cbnz	x21, a54 <gcov_do_dump+0xdc>
    1524:	ldr	w0, [sp, #120]
    1528:	cbz	w0, 1540 <gcov_do_dump+0xbc8>
    152c:	adrp	x20, 0 <gcov_write_block>
    1530:	mov	x0, #0x2                   	// #2
    1534:	add	x20, x20, #0x0
    1538:	mov	x21, #0x1                   	// #1
    153c:	b	a54 <gcov_do_dump+0xdc>
    1540:	str	wzr, [sp, #120]
    1544:	str	xzr, [sp, #128]
    1548:	b	a6c <gcov_do_dump+0xf4>
    154c:	mov	w0, #0x1                   	// #1
    1550:	bl	d8 <gcov_read_words>
    1554:	cbz	x0, 16b4 <gcov_do_dump+0xd3c>
    1558:	ldr	w0, [x0]
    155c:	ldr	w1, [x20, #8]
    1560:	cmp	w1, w0
    1564:	b.ne	1438 <gcov_do_dump+0xac0>  // b.any
    1568:	mov	w0, #0x1                   	// #1
    156c:	bl	d8 <gcov_read_words>
    1570:	cbz	x0, 16ac <gcov_do_dump+0xd34>
    1574:	ldr	w0, [x0]
    1578:	ldr	w1, [x20, #12]
    157c:	cmp	w1, w0
    1580:	b.ne	1438 <gcov_do_dump+0xac0>  // b.any
    1584:	mov	w0, #0x1                   	// #1
    1588:	bl	d8 <gcov_read_words>
    158c:	cbz	x0, 16a4 <gcov_do_dump+0xd2c>
    1590:	ldr	w0, [x0]
    1594:	ldr	w1, [x20, #16]
    1598:	cmp	w1, w0
    159c:	b.ne	1438 <gcov_do_dump+0xac0>  // b.any
    15a0:	add	x20, x20, #0x18
    15a4:	add	x23, x22, #0x20
    15a8:	mov	w21, #0x1a10000             	// #27328512
    15ac:	mov	w27, #0x1b30000             	// #28508160
    15b0:	ldr	x24, [x23]
    15b4:	cbz	x24, 15fc <gcov_do_dump+0xc84>
    15b8:	mov	w0, #0x1                   	// #1
    15bc:	bl	d8 <gcov_read_words>
    15c0:	mov	x1, x0
    15c4:	mov	w0, #0x1                   	// #1
    15c8:	cbz	x1, 1660 <gcov_do_dump+0xce8>
    15cc:	ldr	w26, [x1]
    15d0:	bl	d8 <gcov_read_words>
    15d4:	cbz	x0, 1638 <gcov_do_dump+0xcc0>
    15d8:	ldr	w0, [x0]
    15dc:	cmp	w26, w21
    15e0:	b.ne	1438 <gcov_do_dump+0xac0>  // b.any
    15e4:	ldr	w1, [x20]
    15e8:	cmp	w0, w1, lsl #1
    15ec:	b.ne	1438 <gcov_do_dump+0xac0>  // b.any
    15f0:	ldr	x0, [x20, #8]
    15f4:	add	x20, x20, #0x10
    15f8:	blr	x24
    15fc:	add	w21, w21, #0x20, lsl #12
    1600:	add	x23, x23, #0x8
    1604:	cmp	w21, w27
    1608:	b.ne	15b0 <gcov_do_dump+0xc38>  // b.any
    160c:	adrp	x0, 1028 <gcov_do_dump+0x6b0>
    1610:	ldr	x0, [x0]
    1614:	ldr	x1, [x0]
    1618:	cbz	x1, 1688 <gcov_do_dump+0xd10>
    161c:	ldr	w0, [x0, #24]
    1620:	cmp	w0, #0x0
    1624:	cbz	w0, 13f4 <gcov_do_dump+0xa7c>
    1628:	b.ge	1688 <gcov_do_dump+0xd10>  // b.tcont
    162c:	adrp	x2, 0 <gcov_write_block>
    1630:	add	x2, x2, #0x0
    1634:	b	1690 <gcov_do_dump+0xd18>
    1638:	mov	w0, #0x0                   	// #0
    163c:	b	15dc <gcov_do_dump+0xc64>
    1640:	mov	w0, #0x0                   	// #0
    1644:	b	11a4 <gcov_do_dump+0x82c>
    1648:	mov	w1, #0x0                   	// #0
    164c:	b	1184 <gcov_do_dump+0x80c>
    1650:	adrp	x2, 0 <gcov_write_block>
    1654:	add	x2, x2, #0x0
    1658:	str	wzr, [sp, #124]
    165c:	b	1440 <gcov_do_dump+0xac8>
    1660:	bl	d8 <gcov_read_words>
    1664:	cbz	x0, 1438 <gcov_do_dump+0xac0>
    1668:	mov	w26, #0x0                   	// #0
    166c:	b	15d8 <gcov_do_dump+0xc60>
    1670:	ldr	w0, [x22, #104]
    1674:	cbz	w0, df4 <gcov_do_dump+0x47c>
    1678:	adrp	x2, 0 <gcov_write_block>
    167c:	add	x2, x2, #0x0
    1680:	str	wzr, [sp, #124]
    1684:	b	1440 <gcov_do_dump+0xac8>
    1688:	adrp	x2, 0 <gcov_write_block>
    168c:	add	x2, x2, #0x0
    1690:	mov	x1, x25
    1694:	adrp	x0, 0 <gcov_write_block>
    1698:	add	x0, x0, #0x0
    169c:	bl	2f8 <gcov_error>
    16a0:	b	c30 <gcov_do_dump+0x2b8>
    16a4:	mov	w0, #0x0                   	// #0
    16a8:	b	1594 <gcov_do_dump+0xc1c>
    16ac:	mov	w0, #0x0                   	// #0
    16b0:	b	1578 <gcov_do_dump+0xc00>
    16b4:	mov	w0, #0x0                   	// #0
    16b8:	b	155c <gcov_do_dump+0xbe4>
    16bc:	mov	w21, #0xffffffff            	// #-1
    16c0:	ldr	w0, [sp, #116]
    16c4:	cbz	w0, 16e0 <gcov_do_dump+0xd68>
    16c8:	adrp	x3, 0 <gcov_write_block>
    16cc:	add	x3, x3, #0x0
    16d0:	b	1464 <gcov_do_dump+0xaec>
    16d4:	str	wzr, [sp, #124]
    16d8:	cbz	w1, df4 <gcov_do_dump+0x47c>
    16dc:	b	1438 <gcov_do_dump+0xac0>
    16e0:	adrp	x3, 0 <gcov_write_block>
    16e4:	add	x3, x3, #0x0
    16e8:	str	w21, [sp, #116]
    16ec:	b	1464 <gcov_do_dump+0xaec>
    16f0:	bl	0 <abort>
    16f4:	nop

00000000000016f8 <__gcov_dump_one>:
    16f8:	ldrb	w1, [x0, #8]
    16fc:	tbz	w1, #0, 1704 <__gcov_dump_one+0xc>
    1700:	ret
    1704:	stp	x29, x30, [sp, #-32]!
    1708:	ubfx	x1, x1, #1, #1
    170c:	mov	x29, sp
    1710:	str	x19, [sp, #16]
    1714:	mov	x19, x0
    1718:	ldr	x0, [x0]
    171c:	bl	978 <gcov_do_dump>
    1720:	ldrb	w0, [x19, #8]
    1724:	orr	w0, w0, #0x3
    1728:	strb	w0, [x19, #8]
    172c:	ldr	x19, [sp, #16]
    1730:	ldp	x29, x30, [sp], #32
    1734:	ret

0000000000001738 <__gcov_exit>:
    1738:	stp	x29, x30, [sp, #-32]!
    173c:	mov	x29, sp
    1740:	stp	x19, x20, [sp, #16]
    1744:	adrp	x19, 20 <gcov_write_block+0x20>
    1748:	add	x20, x19, #0x0
    174c:	ldrb	w1, [x20, #8]
    1750:	tbnz	w1, #0, 176c <__gcov_exit+0x34>
    1754:	ldr	x0, [x19]
    1758:	ubfx	x1, x1, #1, #1
    175c:	bl	978 <gcov_do_dump>
    1760:	ldrb	w0, [x20, #8]
    1764:	orr	w0, w0, #0x3
    1768:	strb	w0, [x20, #8]
    176c:	add	x0, x19, #0x0
    1770:	ldp	x2, x1, [x0, #16]
    1774:	cbz	x2, 1780 <__gcov_exit+0x48>
    1778:	str	x1, [x2, #24]
    177c:	ldr	x1, [x0, #24]
    1780:	cbz	x1, 17c0 <__gcov_exit+0x88>
    1784:	str	x2, [x1, #16]
    1788:	adrp	x19, 8 <gcov_write_block+0x8>
    178c:	ldr	x19, [x19]
    1790:	ldr	x0, [x19]
    1794:	cbz	x0, 17b4 <__gcov_exit+0x7c>
    1798:	adrp	x1, 0 <stderr>
    179c:	ldr	x1, [x1]
    17a0:	ldr	x1, [x1]
    17a4:	cmp	x0, x1
    17a8:	b.eq	17b4 <__gcov_exit+0x7c>  // b.none
    17ac:	bl	0 <fclose>
    17b0:	str	xzr, [x19]
    17b4:	ldp	x19, x20, [sp, #16]
    17b8:	ldp	x29, x30, [sp], #32
    17bc:	ret
    17c0:	adrp	x0, 0 <gcov_write_block>
    17c4:	ldr	x0, [x0]
    17c8:	str	x2, [x0, #8]
    17cc:	b	1788 <__gcov_exit+0x50>

00000000000017d0 <__gcov_init>:
    17d0:	ldr	w1, [x0]
    17d4:	cbz	w1, 1830 <__gcov_init+0x60>
    17d8:	stp	x29, x30, [sp, #-48]!
    17dc:	mov	x29, sp
    17e0:	stp	x19, x20, [sp, #16]
    17e4:	mov	x19, x0
    17e8:	ldr	w0, [x0, #104]
    17ec:	cbz	w0, 1824 <__gcov_init+0x54>
    17f0:	mov	w0, #0x322a                	// #12842
    17f4:	movk	w0, #0x4139, lsl #16
    17f8:	cmp	w1, w0
    17fc:	b.eq	1810 <__gcov_init+0x40>  // b.none
    1800:	add	x0, x19, #0x18
    1804:	mov	x2, #0x0                   	// #0
    1808:	bl	418 <gcov_version.isra.0.part.0>
    180c:	cbz	w0, 1824 <__gcov_init+0x54>
    1810:	adrp	x20, 20 <gcov_write_block+0x20>
    1814:	ldr	x0, [x20]
    1818:	cbz	x0, 1834 <__gcov_init+0x64>
    181c:	str	x19, [x20]
    1820:	str	x0, [x19, #8]
    1824:	ldp	x19, x20, [sp, #16]
    1828:	ldp	x29, x30, [sp], #48
    182c:	ret
    1830:	ret
    1834:	str	x21, [sp, #32]
    1838:	adrp	x21, 0 <gcov_write_block>
    183c:	mov	w2, #0x322a                	// #12842
    1840:	ldr	x1, [x21]
    1844:	movk	w2, #0x4139, lsl #16
    1848:	ldr	w1, [x1]
    184c:	cmp	w1, w2
    1850:	b.ne	1880 <__gcov_init+0xb0>  // b.any
    1854:	ldr	x1, [x21]
    1858:	add	x2, x20, #0x0
    185c:	ldr	x1, [x1, #8]
    1860:	str	x1, [x2, #16]
    1864:	cbz	x1, 186c <__gcov_init+0x9c>
    1868:	str	x2, [x1, #24]
    186c:	ldr	x21, [x21]
    1870:	add	x1, x20, #0x0
    1874:	str	x1, [x21, #8]
    1878:	ldr	x21, [sp, #32]
    187c:	b	181c <__gcov_init+0x4c>
    1880:	adrp	x2, 0 <gcov_write_block>
    1884:	mov	x0, #0x18                  	// #24
    1888:	add	x2, x2, #0x0
    188c:	bl	418 <gcov_version.isra.0.part.0>
    1890:	cbnz	w0, 18a0 <__gcov_init+0xd0>
    1894:	ldr	x0, [x20]
    1898:	ldr	x21, [sp, #32]
    189c:	b	181c <__gcov_init+0x4c>
    18a0:	ldr	x0, [x20]
    18a4:	b	1854 <__gcov_init+0x84>
