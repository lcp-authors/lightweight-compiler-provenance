
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//exfat.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1aa0>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x1, [sp, #24]
      10:	adrp	x0, 0 <grub_mod_init-0x1aa0>
      14:	add	x0, x0, #0x0
      18:	ldr	x0, [x0]
      1c:	bl	0 <grub_list_push>
      20:	nop
      24:	ldp	x29, x30, [sp], #32
      28:	ret
      2c:	nop
	...
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x0, [sp, #24]
      48:	bl	0 <grub_list_remove>
      4c:	nop
      50:	ldp	x29, x30, [sp], #32
      54:	ret
      58:	sub	sp, sp, #0x10
      5c:	str	w0, [sp, #12]
      60:	ldr	w0, [sp, #12]
      64:	cmp	w0, #0x40
      68:	b.le	84 <grub_mod_init-0x1a1c>
      6c:	ldr	w0, [sp, #12]
      70:	cmp	w0, #0x5a
      74:	b.gt	84 <grub_mod_init-0x1a1c>
      78:	ldr	w0, [sp, #12]
      7c:	add	w0, w0, #0x20
      80:	b	88 <grub_mod_init-0x1a18>
      84:	ldr	w0, [sp, #12]
      88:	add	sp, sp, #0x10
      8c:	ret
      90:	sub	sp, sp, #0x10
      94:	str	w0, [sp, #12]
      98:	ldr	w0, [sp, #12]
      9c:	cmp	w0, #0x60
      a0:	b.le	bc <grub_mod_init-0x19e4>
      a4:	ldr	w0, [sp, #12]
      a8:	cmp	w0, #0x7a
      ac:	b.gt	bc <grub_mod_init-0x19e4>
      b0:	ldr	w0, [sp, #12]
      b4:	sub	w0, w0, #0x20
      b8:	b	c0 <grub_mod_init-0x19e0>
      bc:	ldr	w0, [sp, #12]
      c0:	add	sp, sp, #0x10
      c4:	ret
      c8:	stp	x29, x30, [sp, #-48]!
      cc:	mov	x29, sp
      d0:	str	x19, [sp, #16]
      d4:	str	x0, [sp, #40]
      d8:	str	x1, [sp, #32]
      dc:	b	11c <grub_mod_init-0x1984>
      e0:	ldr	x0, [sp, #40]
      e4:	ldrb	w0, [x0]
      e8:	bl	58 <grub_mod_init-0x1a48>
      ec:	mov	w19, w0
      f0:	ldr	x0, [sp, #32]
      f4:	ldrb	w0, [x0]
      f8:	bl	58 <grub_mod_init-0x1a48>
      fc:	cmp	w19, w0
     100:	b.ne	140 <grub_mod_init-0x1960>  // b.any
     104:	ldr	x0, [sp, #40]
     108:	add	x0, x0, #0x1
     10c:	str	x0, [sp, #40]
     110:	ldr	x0, [sp, #32]
     114:	add	x0, x0, #0x1
     118:	str	x0, [sp, #32]
     11c:	ldr	x0, [sp, #40]
     120:	ldrb	w0, [x0]
     124:	cmp	w0, #0x0
     128:	b.eq	144 <grub_mod_init-0x195c>  // b.none
     12c:	ldr	x0, [sp, #32]
     130:	ldrb	w0, [x0]
     134:	cmp	w0, #0x0
     138:	b.ne	e0 <grub_mod_init-0x19c0>  // b.any
     13c:	b	144 <grub_mod_init-0x195c>
     140:	nop
     144:	ldr	x0, [sp, #40]
     148:	ldrb	w0, [x0]
     14c:	bl	58 <grub_mod_init-0x1a48>
     150:	mov	w19, w0
     154:	ldr	x0, [sp, #32]
     158:	ldrb	w0, [x0]
     15c:	bl	58 <grub_mod_init-0x1a48>
     160:	sub	w0, w19, w0
     164:	ldr	x19, [sp, #16]
     168:	ldp	x29, x30, [sp], #48
     16c:	ret
     170:	sub	sp, sp, #0x30
     174:	str	x0, [sp, #24]
     178:	str	x1, [sp, #16]
     17c:	str	x2, [sp, #8]
     180:	str	wzr, [sp, #44]
     184:	b	4d4 <grub_mod_init-0x15cc>
     188:	ldr	x0, [sp, #16]
     18c:	add	x1, x0, #0x2
     190:	str	x1, [sp, #16]
     194:	ldrh	w0, [x0]
     198:	str	w0, [sp, #40]
     19c:	ldr	w0, [sp, #44]
     1a0:	cmp	w0, #0x0
     1a4:	b.eq	2bc <grub_mod_init-0x17e4>  // b.none
     1a8:	ldr	w1, [sp, #40]
     1ac:	mov	w0, #0xdbff                	// #56319
     1b0:	cmp	w1, w0
     1b4:	b.ls	294 <grub_mod_init-0x180c>  // b.plast
     1b8:	ldr	w1, [sp, #40]
     1bc:	mov	w0, #0xdfff                	// #57343
     1c0:	cmp	w1, w0
     1c4:	b.hi	294 <grub_mod_init-0x180c>  // b.pmore
     1c8:	ldr	w1, [sp, #44]
     1cc:	mov	w0, #0xffff2800            	// #-55296
     1d0:	add	w0, w1, w0
     1d4:	lsl	w1, w0, #10
     1d8:	ldr	w0, [sp, #40]
     1dc:	add	w1, w1, w0
     1e0:	mov	w0, #0x2400                	// #9216
     1e4:	add	w0, w1, w0
     1e8:	str	w0, [sp, #40]
     1ec:	ldr	w0, [sp, #40]
     1f0:	lsr	w0, w0, #18
     1f4:	and	w1, w0, #0xff
     1f8:	ldr	x0, [sp, #24]
     1fc:	add	x2, x0, #0x1
     200:	str	x2, [sp, #24]
     204:	orr	w1, w1, #0xfffffff0
     208:	and	w1, w1, #0xff
     20c:	strb	w1, [x0]
     210:	ldr	w0, [sp, #40]
     214:	lsr	w0, w0, #12
     218:	and	w0, w0, #0xff
     21c:	and	w0, w0, #0x3f
     220:	and	w1, w0, #0xff
     224:	ldr	x0, [sp, #24]
     228:	add	x2, x0, #0x1
     22c:	str	x2, [sp, #24]
     230:	orr	w1, w1, #0xffffff80
     234:	and	w1, w1, #0xff
     238:	strb	w1, [x0]
     23c:	ldr	w0, [sp, #40]
     240:	lsr	w0, w0, #6
     244:	and	w0, w0, #0xff
     248:	and	w0, w0, #0x3f
     24c:	and	w1, w0, #0xff
     250:	ldr	x0, [sp, #24]
     254:	add	x2, x0, #0x1
     258:	str	x2, [sp, #24]
     25c:	orr	w1, w1, #0xffffff80
     260:	and	w1, w1, #0xff
     264:	strb	w1, [x0]
     268:	ldr	w0, [sp, #40]
     26c:	and	w0, w0, #0xff
     270:	and	w0, w0, #0x3f
     274:	and	w1, w0, #0xff
     278:	ldr	x0, [sp, #24]
     27c:	add	x2, x0, #0x1
     280:	str	x2, [sp, #24]
     284:	orr	w1, w1, #0xffffff80
     288:	and	w1, w1, #0xff
     28c:	strb	w1, [x0]
     290:	b	2b4 <grub_mod_init-0x17ec>
     294:	ldr	x0, [sp, #24]
     298:	add	x1, x0, #0x1
     29c:	str	x1, [sp, #24]
     2a0:	mov	w1, #0x3f                  	// #63
     2a4:	strb	w1, [x0]
     2a8:	ldr	x0, [sp, #16]
     2ac:	sub	x0, x0, #0x2
     2b0:	str	x0, [sp, #16]
     2b4:	str	wzr, [sp, #44]
     2b8:	b	4d4 <grub_mod_init-0x15cc>
     2bc:	ldr	w0, [sp, #40]
     2c0:	cmp	w0, #0x7f
     2c4:	b.hi	2e4 <grub_mod_init-0x17bc>  // b.pmore
     2c8:	ldr	x0, [sp, #24]
     2cc:	add	x1, x0, #0x1
     2d0:	str	x1, [sp, #24]
     2d4:	ldr	w1, [sp, #40]
     2d8:	and	w1, w1, #0xff
     2dc:	strb	w1, [x0]
     2e0:	b	4d4 <grub_mod_init-0x15cc>
     2e4:	ldr	w0, [sp, #40]
     2e8:	cmp	w0, #0x7ff
     2ec:	b.hi	340 <grub_mod_init-0x1760>  // b.pmore
     2f0:	ldr	w0, [sp, #40]
     2f4:	lsr	w0, w0, #6
     2f8:	and	w1, w0, #0xff
     2fc:	ldr	x0, [sp, #24]
     300:	add	x2, x0, #0x1
     304:	str	x2, [sp, #24]
     308:	orr	w1, w1, #0xffffffc0
     30c:	and	w1, w1, #0xff
     310:	strb	w1, [x0]
     314:	ldr	w0, [sp, #40]
     318:	and	w0, w0, #0xff
     31c:	and	w0, w0, #0x3f
     320:	and	w1, w0, #0xff
     324:	ldr	x0, [sp, #24]
     328:	add	x2, x0, #0x1
     32c:	str	x2, [sp, #24]
     330:	orr	w1, w1, #0xffffff80
     334:	and	w1, w1, #0xff
     338:	strb	w1, [x0]
     33c:	b	4d4 <grub_mod_init-0x15cc>
     340:	ldr	w1, [sp, #40]
     344:	mov	w0, #0xd7ff                	// #55295
     348:	cmp	w1, w0
     34c:	b.ls	36c <grub_mod_init-0x1734>  // b.plast
     350:	ldr	w1, [sp, #40]
     354:	mov	w0, #0xdbff                	// #56319
     358:	cmp	w1, w0
     35c:	b.hi	36c <grub_mod_init-0x1734>  // b.pmore
     360:	ldr	w0, [sp, #40]
     364:	str	w0, [sp, #44]
     368:	b	4d4 <grub_mod_init-0x15cc>
     36c:	ldr	w1, [sp, #40]
     370:	mov	w0, #0xdbff                	// #56319
     374:	cmp	w1, w0
     378:	b.ls	3a4 <grub_mod_init-0x16fc>  // b.plast
     37c:	ldr	w1, [sp, #40]
     380:	mov	w0, #0xdfff                	// #57343
     384:	cmp	w1, w0
     388:	b.hi	3a4 <grub_mod_init-0x16fc>  // b.pmore
     38c:	ldr	x0, [sp, #24]
     390:	add	x1, x0, #0x1
     394:	str	x1, [sp, #24]
     398:	mov	w1, #0x3f                  	// #63
     39c:	strb	w1, [x0]
     3a0:	b	4d4 <grub_mod_init-0x15cc>
     3a4:	ldr	w1, [sp, #40]
     3a8:	mov	w0, #0xffff                	// #65535
     3ac:	cmp	w1, w0
     3b0:	b.hi	430 <grub_mod_init-0x1670>  // b.pmore
     3b4:	ldr	w0, [sp, #40]
     3b8:	lsr	w0, w0, #12
     3bc:	and	w1, w0, #0xff
     3c0:	ldr	x0, [sp, #24]
     3c4:	add	x2, x0, #0x1
     3c8:	str	x2, [sp, #24]
     3cc:	orr	w1, w1, #0xffffffe0
     3d0:	and	w1, w1, #0xff
     3d4:	strb	w1, [x0]
     3d8:	ldr	w0, [sp, #40]
     3dc:	lsr	w0, w0, #6
     3e0:	and	w0, w0, #0xff
     3e4:	and	w0, w0, #0x3f
     3e8:	and	w1, w0, #0xff
     3ec:	ldr	x0, [sp, #24]
     3f0:	add	x2, x0, #0x1
     3f4:	str	x2, [sp, #24]
     3f8:	orr	w1, w1, #0xffffff80
     3fc:	and	w1, w1, #0xff
     400:	strb	w1, [x0]
     404:	ldr	w0, [sp, #40]
     408:	and	w0, w0, #0xff
     40c:	and	w0, w0, #0x3f
     410:	and	w1, w0, #0xff
     414:	ldr	x0, [sp, #24]
     418:	add	x2, x0, #0x1
     41c:	str	x2, [sp, #24]
     420:	orr	w1, w1, #0xffffff80
     424:	and	w1, w1, #0xff
     428:	strb	w1, [x0]
     42c:	b	4d4 <grub_mod_init-0x15cc>
     430:	ldr	w0, [sp, #40]
     434:	lsr	w0, w0, #18
     438:	and	w1, w0, #0xff
     43c:	ldr	x0, [sp, #24]
     440:	add	x2, x0, #0x1
     444:	str	x2, [sp, #24]
     448:	orr	w1, w1, #0xfffffff0
     44c:	and	w1, w1, #0xff
     450:	strb	w1, [x0]
     454:	ldr	w0, [sp, #40]
     458:	lsr	w0, w0, #12
     45c:	and	w0, w0, #0xff
     460:	and	w0, w0, #0x3f
     464:	and	w1, w0, #0xff
     468:	ldr	x0, [sp, #24]
     46c:	add	x2, x0, #0x1
     470:	str	x2, [sp, #24]
     474:	orr	w1, w1, #0xffffff80
     478:	and	w1, w1, #0xff
     47c:	strb	w1, [x0]
     480:	ldr	w0, [sp, #40]
     484:	lsr	w0, w0, #6
     488:	and	w0, w0, #0xff
     48c:	and	w0, w0, #0x3f
     490:	and	w1, w0, #0xff
     494:	ldr	x0, [sp, #24]
     498:	add	x2, x0, #0x1
     49c:	str	x2, [sp, #24]
     4a0:	orr	w1, w1, #0xffffff80
     4a4:	and	w1, w1, #0xff
     4a8:	strb	w1, [x0]
     4ac:	ldr	w0, [sp, #40]
     4b0:	and	w0, w0, #0xff
     4b4:	and	w0, w0, #0x3f
     4b8:	and	w1, w0, #0xff
     4bc:	ldr	x0, [sp, #24]
     4c0:	add	x2, x0, #0x1
     4c4:	str	x2, [sp, #24]
     4c8:	orr	w1, w1, #0xffffff80
     4cc:	and	w1, w1, #0xff
     4d0:	strb	w1, [x0]
     4d4:	ldr	x0, [sp, #8]
     4d8:	sub	x1, x0, #0x1
     4dc:	str	x1, [sp, #8]
     4e0:	cmp	x0, #0x0
     4e4:	b.ne	188 <grub_mod_init-0x1918>  // b.any
     4e8:	ldr	x0, [sp, #24]
     4ec:	add	sp, sp, #0x30
     4f0:	ret
     4f4:	stp	x29, x30, [sp, #-176]!
     4f8:	mov	x29, sp
     4fc:	str	x0, [sp, #24]
     500:	str	xzr, [sp, #168]
     504:	ldr	x0, [sp, #24]
     508:	cmp	x0, #0x0
     50c:	b.eq	7f0 <grub_mod_init-0x12b0>  // b.none
     510:	mov	x0, #0x2c                  	// #44
     514:	bl	0 <grub_malloc>
     518:	str	x0, [sp, #168]
     51c:	ldr	x0, [sp, #168]
     520:	cmp	x0, #0x0
     524:	b.eq	7f8 <grub_mod_init-0x12a8>  // b.none
     528:	add	x0, sp, #0x28
     52c:	mov	x4, x0
     530:	mov	x3, #0x78                  	// #120
     534:	mov	x2, #0x0                   	// #0
     538:	mov	x1, #0x0                   	// #0
     53c:	ldr	x0, [sp, #24]
     540:	bl	0 <grub_disk_read>
     544:	cmp	w0, #0x0
     548:	b.ne	800 <grub_mod_init-0x12a0>  // b.any
     54c:	add	x0, sp, #0x28
     550:	add	x3, x0, #0x3
     554:	mov	x2, #0x8                   	// #8
     558:	adrp	x0, 0 <grub_mod_init-0x1aa0>
     55c:	add	x0, x0, #0x0
     560:	ldr	x1, [x0]
     564:	mov	x0, x3
     568:	bl	0 <grub_memcmp>
     56c:	cmp	w0, #0x0
     570:	b.ne	808 <grub_mod_init-0x1298>  // b.any
     574:	ldrb	w0, [sp, #148]
     578:	mov	w1, w0
     57c:	ldr	x0, [sp, #168]
     580:	str	w1, [x0]
     584:	ldr	x0, [sp, #168]
     588:	ldr	w0, [x0]
     58c:	cmp	w0, #0x8
     590:	b.le	810 <grub_mod_init-0x1290>
     594:	ldr	x0, [sp, #168]
     598:	ldr	w0, [x0]
     59c:	cmp	w0, #0xf
     5a0:	b.gt	810 <grub_mod_init-0x1290>
     5a4:	ldr	x0, [sp, #168]
     5a8:	ldr	w0, [x0]
     5ac:	sub	w1, w0, #0x9
     5b0:	ldr	x0, [sp, #168]
     5b4:	str	w1, [x0]
     5b8:	ldrb	w0, [sp, #149]
     5bc:	mov	w1, w0
     5c0:	ldr	x0, [sp, #168]
     5c4:	str	w1, [x0, #24]
     5c8:	ldr	x0, [sp, #168]
     5cc:	ldr	w0, [x0, #24]
     5d0:	cmp	w0, #0x0
     5d4:	b.lt	818 <grub_mod_init-0x1288>  // b.tstop
     5d8:	ldr	x0, [sp, #168]
     5dc:	ldr	w0, [x0, #24]
     5e0:	cmp	w0, #0x19
     5e4:	b.gt	818 <grub_mod_init-0x1288>
     5e8:	ldr	x0, [sp, #168]
     5ec:	ldr	w1, [x0, #24]
     5f0:	ldr	x0, [sp, #168]
     5f4:	ldr	w0, [x0]
     5f8:	add	w1, w1, w0
     5fc:	ldr	x0, [sp, #168]
     600:	str	w1, [x0, #24]
     604:	ldr	w1, [sp, #120]
     608:	ldr	x0, [sp, #168]
     60c:	ldr	w0, [x0]
     610:	lsl	w1, w1, w0
     614:	ldr	x0, [sp, #168]
     618:	str	w1, [x0, #8]
     61c:	ldr	x0, [sp, #168]
     620:	ldr	w0, [x0, #8]
     624:	cmp	w0, #0x0
     628:	b.eq	820 <grub_mod_init-0x1280>  // b.none
     62c:	ldr	w1, [sp, #124]
     630:	ldr	x0, [sp, #168]
     634:	ldr	w0, [x0]
     638:	lsl	w1, w1, w0
     63c:	ldr	x0, [sp, #168]
     640:	str	w1, [x0, #12]
     644:	ldr	x0, [sp, #168]
     648:	ldr	w0, [x0, #12]
     64c:	cmp	w0, #0x0
     650:	b.eq	828 <grub_mod_init-0x1278>  // b.none
     654:	ldr	x1, [sp, #112]
     658:	ldr	x0, [sp, #168]
     65c:	ldr	w0, [x0]
     660:	lsl	x0, x1, x0
     664:	mov	w1, w0
     668:	ldr	x0, [sp, #168]
     66c:	str	w1, [x0, #4]
     670:	ldr	x0, [sp, #168]
     674:	ldr	w0, [x0, #4]
     678:	cmp	w0, #0x0
     67c:	b.eq	830 <grub_mod_init-0x1270>  // b.none
     680:	ldrb	w0, [sp, #150]
     684:	cmp	w0, #0x0
     688:	b.eq	838 <grub_mod_init-0x1268>  // b.none
     68c:	ldr	w1, [sp, #128]
     690:	ldr	x0, [sp, #168]
     694:	ldr	w0, [x0]
     698:	lsl	w1, w1, w0
     69c:	ldr	x0, [sp, #168]
     6a0:	str	w1, [x0, #32]
     6a4:	ldr	w1, [sp, #132]
     6a8:	ldr	x0, [sp, #168]
     6ac:	ldr	w0, [x0]
     6b0:	lsl	w1, w1, w0
     6b4:	ldr	x0, [sp, #168]
     6b8:	str	w1, [x0, #36]
     6bc:	ldr	x0, [sp, #168]
     6c0:	ldr	w0, [x0, #36]
     6c4:	cmp	w0, #0x2
     6c8:	b.ls	840 <grub_mod_init-0x1260>  // b.plast
     6cc:	ldr	w1, [sp, #136]
     6d0:	ldr	x0, [sp, #168]
     6d4:	str	w1, [x0, #20]
     6d8:	ldr	x0, [sp, #168]
     6dc:	mov	w1, #0x20                  	// #32
     6e0:	str	w1, [x0, #16]
     6e4:	ldr	x0, [sp, #168]
     6e8:	mov	w1, #0xffffffff            	// #-1
     6ec:	str	w1, [x0, #28]
     6f0:	ldrh	w0, [sp, #146]
     6f4:	and	w0, w0, #0x1
     6f8:	cmp	w0, #0x0
     6fc:	b.eq	728 <grub_mod_init-0x1378>  // b.none
     700:	ldrb	w0, [sp, #150]
     704:	cmp	w0, #0x1
     708:	b.ls	728 <grub_mod_init-0x1378>  // b.plast
     70c:	ldr	x0, [sp, #168]
     710:	ldr	w1, [x0, #8]
     714:	ldr	x0, [sp, #168]
     718:	ldr	w0, [x0, #12]
     71c:	add	w1, w1, w0
     720:	ldr	x0, [sp, #168]
     724:	str	w1, [x0, #8]
     728:	ldr	x0, [sp, #168]
     72c:	ldr	w1, [x0, #4]
     730:	ldr	x0, [sp, #168]
     734:	ldr	w0, [x0, #8]
     738:	cmp	w1, w0
     73c:	b.ls	848 <grub_mod_init-0x1258>  // b.plast
     740:	ldr	x0, [sp, #168]
     744:	ldr	w0, [x0, #8]
     748:	mov	w0, w0
     74c:	add	x1, sp, #0x24
     750:	mov	x4, x1
     754:	mov	x3, #0x4                   	// #4
     758:	mov	x2, #0x0                   	// #0
     75c:	mov	x1, x0
     760:	ldr	x0, [sp, #24]
     764:	bl	0 <grub_disk_read>
     768:	cmp	w0, #0x0
     76c:	b.ne	850 <grub_mod_init-0x1250>  // b.any
     770:	ldr	w0, [sp, #36]
     774:	str	w0, [sp, #36]
     778:	ldr	x0, [sp, #168]
     77c:	ldr	w0, [x0, #16]
     780:	cmp	w0, #0x20
     784:	b.ne	7a0 <grub_mod_init-0x1300>  // b.any
     788:	ldr	w0, [sp, #36]
     78c:	and	w0, w0, #0xfffffff
     790:	str	w0, [sp, #36]
     794:	mov	w0, #0xfffff00             	// #268435200
     798:	str	w0, [sp, #164]
     79c:	b	7dc <grub_mod_init-0x12c4>
     7a0:	ldr	x0, [sp, #168]
     7a4:	ldr	w0, [x0, #16]
     7a8:	cmp	w0, #0x10
     7ac:	b.ne	7c8 <grub_mod_init-0x12d8>  // b.any
     7b0:	ldr	w0, [sp, #36]
     7b4:	and	w0, w0, #0xffff
     7b8:	str	w0, [sp, #36]
     7bc:	mov	w0, #0xff00                	// #65280
     7c0:	str	w0, [sp, #164]
     7c4:	b	7dc <grub_mod_init-0x12c4>
     7c8:	ldr	w0, [sp, #36]
     7cc:	and	w0, w0, #0xfff
     7d0:	str	w0, [sp, #36]
     7d4:	mov	w0, #0xf00                 	// #3840
     7d8:	str	w0, [sp, #164]
     7dc:	ldr	w1, [sp, #140]
     7e0:	ldr	x0, [sp, #168]
     7e4:	str	w1, [x0, #40]
     7e8:	ldr	x0, [sp, #168]
     7ec:	b	874 <grub_mod_init-0x122c>
     7f0:	nop
     7f4:	b	854 <grub_mod_init-0x124c>
     7f8:	nop
     7fc:	b	854 <grub_mod_init-0x124c>
     800:	nop
     804:	b	854 <grub_mod_init-0x124c>
     808:	nop
     80c:	b	854 <grub_mod_init-0x124c>
     810:	nop
     814:	b	854 <grub_mod_init-0x124c>
     818:	nop
     81c:	b	854 <grub_mod_init-0x124c>
     820:	nop
     824:	b	854 <grub_mod_init-0x124c>
     828:	nop
     82c:	b	854 <grub_mod_init-0x124c>
     830:	nop
     834:	b	854 <grub_mod_init-0x124c>
     838:	nop
     83c:	b	854 <grub_mod_init-0x124c>
     840:	nop
     844:	b	854 <grub_mod_init-0x124c>
     848:	nop
     84c:	b	854 <grub_mod_init-0x124c>
     850:	nop
     854:	ldr	x0, [sp, #168]
     858:	bl	0 <grub_free>
     85c:	adrp	x0, 0 <grub_mod_init-0x1aa0>
     860:	add	x0, x0, #0x0
     864:	ldr	x1, [x0]
     868:	mov	w0, #0x9                   	// #9
     86c:	bl	0 <grub_error>
     870:	mov	x0, #0x0                   	// #0
     874:	ldp	x29, x30, [sp], #176
     878:	ret
     87c:	nop
	...
     890:	stp	x29, x30, [sp, #-128]!
     894:	mov	x29, sp
     898:	str	x0, [sp, #72]
     89c:	str	x1, [sp, #64]
     8a0:	str	x2, [sp, #56]
     8a4:	str	x3, [sp, #48]
     8a8:	str	x4, [sp, #40]
     8ac:	str	x5, [sp, #32]
     8b0:	str	x6, [sp, #24]
     8b4:	str	xzr, [sp, #104]
     8b8:	ldr	x0, [sp, #64]
     8bc:	ldr	w0, [x0, #44]
     8c0:	cmp	w0, #0x0
     8c4:	b.eq	970 <grub_mod_init-0x1130>  // b.none
     8c8:	ldr	x0, [sp, #64]
     8cc:	ldr	x0, [x0, #8]
     8d0:	ldr	w1, [x0, #32]
     8d4:	ldr	x0, [sp, #64]
     8d8:	ldr	w0, [x0, #32]
     8dc:	sub	w2, w0, #0x2
     8e0:	ldr	x0, [sp, #64]
     8e4:	ldr	x0, [x0, #8]
     8e8:	ldr	w0, [x0, #24]
     8ec:	lsl	w0, w2, w0
     8f0:	add	w0, w1, w0
     8f4:	mov	w0, w0
     8f8:	str	x0, [sp, #88]
     8fc:	ldr	x0, [sp, #72]
     900:	ldr	x1, [sp, #56]
     904:	str	x1, [x0, #48]
     908:	ldr	x0, [sp, #72]
     90c:	ldr	x1, [sp, #48]
     910:	str	x1, [x0, #56]
     914:	ldr	x0, [sp, #40]
     918:	lsr	x1, x0, #9
     91c:	ldr	x0, [sp, #88]
     920:	add	x1, x1, x0
     924:	ldr	x0, [sp, #40]
     928:	and	x0, x0, #0x1ff
     92c:	ldr	x4, [sp, #24]
     930:	ldr	x3, [sp, #32]
     934:	mov	x2, x0
     938:	ldr	x0, [sp, #72]
     93c:	bl	0 <grub_disk_read>
     940:	ldr	x0, [sp, #72]
     944:	str	xzr, [x0, #48]
     948:	adrp	x0, 0 <grub_mod_init-0x1aa0>
     94c:	add	x0, x0, #0x0
     950:	ldr	x0, [x0]
     954:	ldr	w0, [x0]
     958:	cmp	w0, #0x0
     95c:	b.eq	968 <grub_mod_init-0x1138>  // b.none
     960:	mov	x0, #0xffffffffffffffff    	// #-1
     964:	b	ce8 <grub_mod_init-0xdb8>
     968:	ldr	x0, [sp, #32]
     96c:	b	ce8 <grub_mod_init-0xdb8>
     970:	ldr	x0, [sp, #64]
     974:	ldr	x0, [x0, #8]
     978:	ldr	w0, [x0, #24]
     97c:	add	w0, w0, #0x9
     980:	str	w0, [sp, #96]
     984:	ldr	w0, [sp, #96]
     988:	ldr	x1, [sp, #40]
     98c:	lsr	x0, x1, x0
     990:	str	w0, [sp, #116]
     994:	ldr	w0, [sp, #96]
     998:	mov	x1, #0xffffffffffffffff    	// #-1
     99c:	lsl	x0, x1, x0
     9a0:	mvn	x0, x0
     9a4:	ldr	x1, [sp, #40]
     9a8:	and	x0, x1, x0
     9ac:	str	x0, [sp, #40]
     9b0:	ldr	x0, [sp, #64]
     9b4:	ldr	w0, [x0, #36]
     9b8:	ldr	w1, [sp, #116]
     9bc:	cmp	w1, w0
     9c0:	b.cs	cd8 <grub_mod_init-0xdc8>  // b.hs, b.nlast
     9c4:	ldr	x0, [sp, #64]
     9c8:	str	wzr, [x0, #36]
     9cc:	ldr	x0, [sp, #64]
     9d0:	ldr	w1, [x0, #32]
     9d4:	ldr	x0, [sp, #64]
     9d8:	str	w1, [x0, #40]
     9dc:	b	cd8 <grub_mod_init-0xdc8>
     9e0:	ldr	x0, [sp, #64]
     9e4:	ldr	x0, [x0, #8]
     9e8:	ldr	w0, [x0, #16]
     9ec:	cmp	w0, #0x10
     9f0:	b.eq	a10 <grub_mod_init-0x1090>  // b.none
     9f4:	cmp	w0, #0x20
     9f8:	b.ne	a24 <grub_mod_init-0x107c>  // b.any
     9fc:	ldr	x0, [sp, #64]
     a00:	ldr	w0, [x0, #40]
     a04:	lsl	w0, w0, #2
     a08:	str	w0, [sp, #100]
     a0c:	b	a44 <grub_mod_init-0x105c>
     a10:	ldr	x0, [sp, #64]
     a14:	ldr	w0, [x0, #40]
     a18:	lsl	w0, w0, #1
     a1c:	str	w0, [sp, #100]
     a20:	b	a44 <grub_mod_init-0x105c>
     a24:	ldr	x0, [sp, #64]
     a28:	ldr	w1, [x0, #40]
     a2c:	ldr	x0, [sp, #64]
     a30:	ldr	w0, [x0, #40]
     a34:	lsr	w0, w0, #1
     a38:	add	w0, w1, w0
     a3c:	str	w0, [sp, #100]
     a40:	nop
     a44:	ldr	x0, [sp, #64]
     a48:	ldr	x0, [x0, #8]
     a4c:	ldr	w0, [x0, #8]
     a50:	mov	w1, w0
     a54:	ldr	w2, [sp, #100]
     a58:	ldr	x0, [sp, #64]
     a5c:	ldr	x0, [x0, #8]
     a60:	ldr	w0, [x0, #16]
     a64:	add	w0, w0, #0x7
     a68:	asr	w0, w0, #3
     a6c:	sxtw	x0, w0
     a70:	add	x3, sp, #0x54
     a74:	mov	x4, x3
     a78:	mov	x3, x0
     a7c:	ldr	x0, [sp, #72]
     a80:	bl	0 <grub_disk_read>
     a84:	cmp	w0, #0x0
     a88:	b.eq	a94 <grub_mod_init-0x100c>  // b.none
     a8c:	mov	x0, #0xffffffffffffffff    	// #-1
     a90:	b	ce8 <grub_mod_init-0xdb8>
     a94:	ldr	w0, [sp, #84]
     a98:	str	w0, [sp, #84]
     a9c:	ldr	x0, [sp, #64]
     aa0:	ldr	x0, [x0, #8]
     aa4:	ldr	w0, [x0, #16]
     aa8:	cmp	w0, #0xc
     aac:	b.eq	ac8 <grub_mod_init-0xfd8>  // b.none
     ab0:	cmp	w0, #0x10
     ab4:	b.ne	af8 <grub_mod_init-0xfa8>  // b.any
     ab8:	ldr	w0, [sp, #84]
     abc:	and	w0, w0, #0xffff
     ac0:	str	w0, [sp, #84]
     ac4:	b	af8 <grub_mod_init-0xfa8>
     ac8:	ldr	x0, [sp, #64]
     acc:	ldr	w0, [x0, #40]
     ad0:	and	w0, w0, #0x1
     ad4:	cmp	w0, #0x0
     ad8:	b.eq	ae8 <grub_mod_init-0xfb8>  // b.none
     adc:	ldr	w0, [sp, #84]
     ae0:	lsr	w0, w0, #4
     ae4:	str	w0, [sp, #84]
     ae8:	ldr	w0, [sp, #84]
     aec:	and	w0, w0, #0xfff
     af0:	str	w0, [sp, #84]
     af4:	nop
     af8:	ldr	x0, [sp, #64]
     afc:	ldr	x0, [x0, #8]
     b00:	ldr	w0, [x0, #16]
     b04:	ldr	w1, [sp, #84]
     b08:	mov	w5, w1
     b0c:	mov	w4, w0
     b10:	adrp	x0, 0 <grub_mod_init-0x1aa0>
     b14:	add	x0, x0, #0x0
     b18:	ldr	x3, [x0]
     b1c:	adrp	x0, 0 <grub_mod_init-0x1aa0>
     b20:	add	x0, x0, #0x0
     b24:	ldr	x2, [x0]
     b28:	mov	w1, #0x228                 	// #552
     b2c:	adrp	x0, 0 <grub_mod_init-0x1aa0>
     b30:	add	x0, x0, #0x0
     b34:	ldr	x0, [x0]
     b38:	bl	0 <grub_real_dprintf>
     b3c:	ldr	x0, [sp, #64]
     b40:	ldr	x0, [x0, #8]
     b44:	ldr	w1, [x0, #28]
     b48:	ldr	w0, [sp, #84]
     b4c:	cmp	w1, w0
     b50:	b.hi	b5c <grub_mod_init-0xf44>  // b.pmore
     b54:	ldr	x0, [sp, #104]
     b58:	b	ce8 <grub_mod_init-0xdb8>
     b5c:	ldr	w0, [sp, #84]
     b60:	cmp	w0, #0x1
     b64:	b.ls	b80 <grub_mod_init-0xf20>  // b.plast
     b68:	ldr	x0, [sp, #64]
     b6c:	ldr	x0, [x0, #8]
     b70:	ldr	w1, [x0, #36]
     b74:	ldr	w0, [sp, #84]
     b78:	cmp	w1, w0
     b7c:	b.hi	ba4 <grub_mod_init-0xefc>  // b.pmore
     b80:	ldr	w0, [sp, #84]
     b84:	mov	w2, w0
     b88:	adrp	x0, 0 <grub_mod_init-0x1aa0>
     b8c:	add	x0, x0, #0x0
     b90:	ldr	x1, [x0]
     b94:	mov	w0, #0x9                   	// #9
     b98:	bl	0 <grub_error>
     b9c:	mov	x0, #0xffffffffffffffff    	// #-1
     ba0:	b	ce8 <grub_mod_init-0xdb8>
     ba4:	ldr	w1, [sp, #84]
     ba8:	ldr	x0, [sp, #64]
     bac:	str	w1, [x0, #40]
     bb0:	ldr	x0, [sp, #64]
     bb4:	ldr	w0, [x0, #36]
     bb8:	add	w1, w0, #0x1
     bbc:	ldr	x0, [sp, #64]
     bc0:	str	w1, [x0, #36]
     bc4:	ldr	x0, [sp, #64]
     bc8:	ldr	w0, [x0, #36]
     bcc:	ldr	w1, [sp, #116]
     bd0:	cmp	w1, w0
     bd4:	b.hi	9e0 <grub_mod_init-0x10c0>  // b.pmore
     bd8:	ldr	x0, [sp, #64]
     bdc:	ldr	x0, [x0, #8]
     be0:	ldr	w1, [x0, #32]
     be4:	ldr	x0, [sp, #64]
     be8:	ldr	w0, [x0, #40]
     bec:	sub	w2, w0, #0x2
     bf0:	ldr	x0, [sp, #64]
     bf4:	ldr	x0, [x0, #8]
     bf8:	ldr	w0, [x0, #24]
     bfc:	lsl	w0, w2, w0
     c00:	add	w0, w1, w0
     c04:	mov	w0, w0
     c08:	str	x0, [sp, #88]
     c0c:	ldr	w0, [sp, #96]
     c10:	mov	w1, #0x1                   	// #1
     c14:	lsl	w0, w1, w0
     c18:	sxtw	x1, w0
     c1c:	ldr	x0, [sp, #40]
     c20:	sub	x0, x1, x0
     c24:	str	x0, [sp, #120]
     c28:	ldr	x1, [sp, #120]
     c2c:	ldr	x0, [sp, #32]
     c30:	cmp	x1, x0
     c34:	b.ls	c40 <grub_mod_init-0xe60>  // b.plast
     c38:	ldr	x0, [sp, #32]
     c3c:	str	x0, [sp, #120]
     c40:	ldr	x0, [sp, #72]
     c44:	ldr	x1, [sp, #56]
     c48:	str	x1, [x0, #48]
     c4c:	ldr	x0, [sp, #72]
     c50:	ldr	x1, [sp, #48]
     c54:	str	x1, [x0, #56]
     c58:	ldr	x4, [sp, #24]
     c5c:	ldr	x3, [sp, #120]
     c60:	ldr	x2, [sp, #40]
     c64:	ldr	x1, [sp, #88]
     c68:	ldr	x0, [sp, #72]
     c6c:	bl	0 <grub_disk_read>
     c70:	ldr	x0, [sp, #72]
     c74:	str	xzr, [x0, #48]
     c78:	adrp	x0, 0 <grub_mod_init-0x1aa0>
     c7c:	add	x0, x0, #0x0
     c80:	ldr	x0, [x0]
     c84:	ldr	w0, [x0]
     c88:	cmp	w0, #0x0
     c8c:	b.eq	c98 <grub_mod_init-0xe08>  // b.none
     c90:	mov	x0, #0xffffffffffffffff    	// #-1
     c94:	b	ce8 <grub_mod_init-0xdb8>
     c98:	ldr	x1, [sp, #32]
     c9c:	ldr	x0, [sp, #120]
     ca0:	sub	x0, x1, x0
     ca4:	str	x0, [sp, #32]
     ca8:	ldr	x1, [sp, #24]
     cac:	ldr	x0, [sp, #120]
     cb0:	add	x0, x1, x0
     cb4:	str	x0, [sp, #24]
     cb8:	ldr	x1, [sp, #104]
     cbc:	ldr	x0, [sp, #120]
     cc0:	add	x0, x1, x0
     cc4:	str	x0, [sp, #104]
     cc8:	ldr	w0, [sp, #116]
     ccc:	add	w0, w0, #0x1
     cd0:	str	w0, [sp, #116]
     cd4:	str	xzr, [sp, #40]
     cd8:	ldr	x0, [sp, #32]
     cdc:	cmp	x0, #0x0
     ce0:	b.ne	bc4 <grub_mod_init-0xedc>  // b.any
     ce4:	ldr	x0, [sp, #104]
     ce8:	ldp	x29, x30, [sp], #128
     cec:	ret
	...
     d18:	stp	x29, x30, [sp, #-32]!
     d1c:	mov	x29, sp
     d20:	str	x0, [sp, #24]
     d24:	ldr	x0, [sp, #24]
     d28:	mov	x1, #0xffffffffffffffe0    	// #-32
     d2c:	str	x1, [x0, #48]
     d30:	mov	x0, #0x1e00                	// #7680
     d34:	bl	0 <grub_malloc>
     d38:	mov	x1, x0
     d3c:	ldr	x0, [sp, #24]
     d40:	str	x1, [x0, #40]
     d44:	mov	x0, #0x3c01                	// #15361
     d48:	bl	0 <grub_malloc>
     d4c:	mov	x1, x0
     d50:	ldr	x0, [sp, #24]
     d54:	str	x1, [x0, #32]
     d58:	ldr	x0, [sp, #24]
     d5c:	ldr	x0, [x0, #32]
     d60:	cmp	x0, #0x0
     d64:	b.eq	d78 <grub_mod_init-0xd28>  // b.none
     d68:	ldr	x0, [sp, #24]
     d6c:	ldr	x0, [x0, #40]
     d70:	cmp	x0, #0x0
     d74:	b.ne	da4 <grub_mod_init-0xcfc>  // b.any
     d78:	ldr	x0, [sp, #24]
     d7c:	ldr	x0, [x0, #32]
     d80:	bl	0 <grub_free>
     d84:	ldr	x0, [sp, #24]
     d88:	ldr	x0, [x0, #40]
     d8c:	bl	0 <grub_free>
     d90:	adrp	x0, 0 <grub_mod_init-0x1aa0>
     d94:	add	x0, x0, #0x0
     d98:	ldr	x0, [x0]
     d9c:	ldr	w0, [x0]
     da0:	b	da8 <grub_mod_init-0xcf8>
     da4:	mov	w0, #0x0                   	// #0
     da8:	ldp	x29, x30, [sp], #32
     dac:	ret
	...
     db8:	stp	x29, x30, [sp, #-32]!
     dbc:	mov	x29, sp
     dc0:	str	x0, [sp, #24]
     dc4:	ldr	x0, [sp, #24]
     dc8:	ldr	x0, [x0, #32]
     dcc:	bl	0 <grub_free>
     dd0:	ldr	x0, [sp, #24]
     dd4:	ldr	x0, [x0, #40]
     dd8:	bl	0 <grub_free>
     ddc:	nop
     de0:	ldp	x29, x30, [sp], #32
     de4:	ret
     de8:	stp	x29, x30, [sp, #-112]!
     dec:	mov	x29, sp
     df0:	str	x0, [sp, #24]
     df4:	str	x1, [sp, #16]
     df8:	ldr	x0, [sp, #16]
     dfc:	mov	x2, #0x20                  	// #32
     e00:	mov	w1, #0x0                   	// #0
     e04:	bl	0 <grub_memset>
     e08:	ldr	x0, [sp, #16]
     e0c:	ldr	x0, [x0, #48]
     e10:	add	x0, x0, #0x20
     e14:	mov	x1, x0
     e18:	ldr	x0, [sp, #16]
     e1c:	str	x1, [x0, #48]
     e20:	ldr	x0, [sp, #24]
     e24:	ldr	x7, [x0]
     e28:	ldr	x0, [sp, #16]
     e2c:	ldr	x0, [x0, #48]
     e30:	mov	x1, x0
     e34:	add	x0, sp, #0x20
     e38:	mov	x6, x0
     e3c:	mov	x5, #0x20                  	// #32
     e40:	mov	x4, x1
     e44:	mov	x3, #0x0                   	// #0
     e48:	mov	x2, #0x0                   	// #0
     e4c:	ldr	x1, [sp, #24]
     e50:	mov	x0, x7
     e54:	bl	890 <grub_mod_init-0x1210>
     e58:	cmp	x0, #0x20
     e5c:	b.ne	1138 <grub_mod_init-0x968>  // b.any
     e60:	ldrb	w0, [sp, #32]
     e64:	cmp	w0, #0x0
     e68:	b.eq	1140 <grub_mod_init-0x960>  // b.none
     e6c:	ldrb	w0, [sp, #32]
     e70:	sxtb	w0, w0
     e74:	cmp	w0, #0x0
     e78:	b.ge	1160 <grub_mod_init-0x940>  // b.tcont
     e7c:	ldrb	w0, [sp, #32]
     e80:	cmp	w0, #0x85
     e84:	b.ne	10dc <grub_mod_init-0x9c4>  // b.any
     e88:	str	wzr, [sp, #104]
     e8c:	ldrb	w0, [sp, #33]
     e90:	str	w0, [sp, #96]
     e94:	ldrh	w0, [sp, #36]
     e98:	mov	w1, w0
     e9c:	ldr	x0, [sp, #16]
     ea0:	str	w1, [x0]
     ea4:	ldr	x0, [sp, #16]
     ea8:	str	wzr, [x0, #24]
     eac:	str	wzr, [sp, #108]
     eb0:	b	1050 <grub_mod_init-0xa50>
     eb4:	ldr	x0, [sp, #16]
     eb8:	ldr	x0, [x0, #48]
     ebc:	add	x0, x0, #0x20
     ec0:	mov	x1, x0
     ec4:	ldr	x0, [sp, #16]
     ec8:	str	x1, [x0, #48]
     ecc:	ldr	x0, [sp, #24]
     ed0:	ldr	x7, [x0]
     ed4:	ldr	x0, [sp, #16]
     ed8:	ldr	x0, [x0, #48]
     edc:	mov	x1, x0
     ee0:	add	x0, sp, #0x40
     ee4:	mov	x6, x0
     ee8:	mov	x5, #0x20                  	// #32
     eec:	mov	x4, x1
     ef0:	mov	x3, #0x0                   	// #0
     ef4:	mov	x2, #0x0                   	// #0
     ef8:	ldr	x1, [sp, #24]
     efc:	mov	x0, x7
     f00:	bl	890 <grub_mod_init-0x1210>
     f04:	cmp	x0, #0x20
     f08:	b.ne	1064 <grub_mod_init-0xa3c>  // b.any
     f0c:	ldrb	w0, [sp, #64]
     f10:	sxtb	w0, w0
     f14:	cmp	w0, #0x0
     f18:	b.ge	1040 <grub_mod_init-0xa60>  // b.tcont
     f1c:	ldrb	w0, [sp, #64]
     f20:	and	w0, w0, #0x40
     f24:	cmp	w0, #0x0
     f28:	b.eq	106c <grub_mod_init-0xa34>  // b.none
     f2c:	ldrb	w0, [sp, #64]
     f30:	cmp	w0, #0xc0
     f34:	b.eq	f44 <grub_mod_init-0xb5c>  // b.none
     f38:	cmp	w0, #0xc1
     f3c:	b.eq	f98 <grub_mod_init-0xb08>  // b.none
     f40:	b	1008 <grub_mod_init-0xa98>
     f44:	ldr	w1, [sp, #84]
     f48:	ldr	x0, [sp, #16]
     f4c:	str	w1, [x0, #4]
     f50:	ldr	x1, [sp, #72]
     f54:	ldr	x0, [sp, #16]
     f58:	str	x1, [x0, #16]
     f5c:	ldr	x1, [sp, #88]
     f60:	ldr	x0, [sp, #16]
     f64:	str	x1, [x0, #8]
     f68:	ldr	x0, [sp, #16]
     f6c:	mov	w1, #0x1                   	// #1
     f70:	str	w1, [x0, #24]
     f74:	ldrb	w0, [sp, #65]
     f78:	and	w0, w0, #0x2
     f7c:	cmp	w0, #0x0
     f80:	cset	w0, ne  // ne = any
     f84:	and	w0, w0, #0xff
     f88:	mov	w1, w0
     f8c:	ldr	x0, [sp, #16]
     f90:	str	w1, [x0, #28]
     f94:	b	1044 <grub_mod_init-0xa5c>
     f98:	str	wzr, [sp, #100]
     f9c:	b	fec <grub_mod_init-0xab4>
     fa0:	ldr	x0, [sp, #16]
     fa4:	ldr	x2, [x0, #40]
     fa8:	ldr	w1, [sp, #104]
     fac:	mov	w0, w1
     fb0:	lsl	w0, w0, #4
     fb4:	sub	w1, w0, w1
     fb8:	ldr	w0, [sp, #100]
     fbc:	add	w0, w1, w0
     fc0:	mov	w0, w0
     fc4:	lsl	x0, x0, #1
     fc8:	add	x0, x2, x0
     fcc:	ldrsw	x1, [sp, #100]
     fd0:	lsl	x1, x1, #1
     fd4:	add	x2, sp, #0x42
     fd8:	ldrh	w1, [x2, x1]
     fdc:	strh	w1, [x0]
     fe0:	ldr	w0, [sp, #100]
     fe4:	add	w0, w0, #0x1
     fe8:	str	w0, [sp, #100]
     fec:	ldr	w0, [sp, #100]
     ff0:	cmp	w0, #0xe
     ff4:	b.le	fa0 <grub_mod_init-0xb00>
     ff8:	ldr	w0, [sp, #104]
     ffc:	add	w0, w0, #0x1
    1000:	str	w0, [sp, #104]
    1004:	b	1044 <grub_mod_init-0xa5c>
    1008:	ldrb	w0, [sp, #64]
    100c:	mov	w4, w0
    1010:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1014:	add	x0, x0, #0x0
    1018:	ldr	x3, [x0]
    101c:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1020:	add	x0, x0, #0x0
    1024:	ldr	x2, [x0]
    1028:	mov	w1, #0x2bd                 	// #701
    102c:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1030:	add	x0, x0, #0x0
    1034:	ldr	x0, [x0]
    1038:	bl	0 <grub_real_dprintf>
    103c:	b	1044 <grub_mod_init-0xa5c>
    1040:	nop
    1044:	ldr	w0, [sp, #108]
    1048:	add	w0, w0, #0x1
    104c:	str	w0, [sp, #108]
    1050:	ldr	w1, [sp, #108]
    1054:	ldr	w0, [sp, #96]
    1058:	cmp	w1, w0
    105c:	b.cc	eb4 <grub_mod_init-0xbec>  // b.lo, b.ul, b.last
    1060:	b	1070 <grub_mod_init-0xa30>
    1064:	nop
    1068:	b	1070 <grub_mod_init-0xa30>
    106c:	nop
    1070:	ldr	w1, [sp, #108]
    1074:	ldr	w0, [sp, #96]
    1078:	cmp	w1, w0
    107c:	b.eq	109c <grub_mod_init-0xa04>  // b.none
    1080:	ldr	x0, [sp, #16]
    1084:	ldr	x0, [x0, #48]
    1088:	sub	x0, x0, #0x20
    108c:	mov	x1, x0
    1090:	ldr	x0, [sp, #16]
    1094:	str	x1, [x0, #48]
    1098:	b	117c <grub_mod_init-0x924>
    109c:	ldr	x0, [sp, #16]
    10a0:	ldr	x3, [x0, #32]
    10a4:	ldr	x0, [sp, #16]
    10a8:	ldr	x4, [x0, #40]
    10ac:	ldr	w1, [sp, #104]
    10b0:	mov	w0, w1
    10b4:	lsl	w0, w0, #4
    10b8:	sub	w0, w0, w1
    10bc:	mov	w0, w0
    10c0:	mov	x2, x0
    10c4:	mov	x1, x4
    10c8:	mov	x0, x3
    10cc:	bl	170 <grub_mod_init-0x1930>
    10d0:	strb	wzr, [x0]
    10d4:	mov	w0, #0x0                   	// #0
    10d8:	b	1184 <grub_mod_init-0x91c>
    10dc:	ldrb	w0, [sp, #32]
    10e0:	cmp	w0, #0x81
    10e4:	b.eq	1168 <grub_mod_init-0x938>  // b.none
    10e8:	ldrb	w0, [sp, #32]
    10ec:	cmp	w0, #0x82
    10f0:	b.eq	1170 <grub_mod_init-0x930>  // b.none
    10f4:	ldrb	w0, [sp, #32]
    10f8:	cmp	w0, #0x83
    10fc:	b.eq	1178 <grub_mod_init-0x928>  // b.none
    1100:	ldrb	w0, [sp, #32]
    1104:	mov	w4, w0
    1108:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    110c:	add	x0, x0, #0x0
    1110:	ldr	x3, [x0]
    1114:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1118:	add	x0, x0, #0x0
    111c:	ldr	x2, [x0]
    1120:	mov	w1, #0x2d6                 	// #726
    1124:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1128:	add	x0, x0, #0x0
    112c:	ldr	x0, [x0]
    1130:	bl	0 <grub_real_dprintf>
    1134:	b	e08 <grub_mod_init-0xc98>
    1138:	nop
    113c:	b	1144 <grub_mod_init-0x95c>
    1140:	nop
    1144:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1148:	add	x0, x0, #0x0
    114c:	ldr	x0, [x0]
    1150:	ldr	w0, [x0]
    1154:	cmp	w0, #0x0
    1158:	b.ne	1184 <grub_mod_init-0x91c>  // b.any
    115c:	b	1180 <grub_mod_init-0x920>
    1160:	nop
    1164:	b	e08 <grub_mod_init-0xc98>
    1168:	nop
    116c:	b	e08 <grub_mod_init-0xc98>
    1170:	nop
    1174:	b	e08 <grub_mod_init-0xc98>
    1178:	nop
    117c:	b	e08 <grub_mod_init-0xc98>
    1180:	mov	w0, #0x2c                  	// #44
    1184:	ldp	x29, x30, [sp], #112
    1188:	ret
    118c:	nop
	...
    11b8:	stp	x29, x30, [sp, #-112]!
    11bc:	mov	x29, sp
    11c0:	str	x0, [sp, #40]
    11c4:	str	x1, [sp, #32]
    11c8:	str	x2, [sp, #24]
    11cc:	str	x3, [sp, #16]
    11d0:	add	x0, sp, #0x30
    11d4:	bl	d18 <grub_mod_init-0xd88>
    11d8:	str	w0, [sp, #108]
    11dc:	ldr	w0, [sp, #108]
    11e0:	cmp	w0, #0x0
    11e4:	b.eq	1308 <grub_mod_init-0x798>  // b.none
    11e8:	ldr	w0, [sp, #108]
    11ec:	b	1344 <grub_mod_init-0x75c>
    11f0:	ldr	w0, [sp, #72]
    11f4:	cmp	w0, #0x0
    11f8:	b.ne	1200 <grub_mod_init-0x8a0>  // b.any
    11fc:	b	1308 <grub_mod_init-0x798>
    1200:	ldr	x0, [sp, #80]
    1204:	mov	x1, x0
    1208:	ldr	x0, [sp, #32]
    120c:	bl	c8 <grub_mod_init-0x19d8>
    1210:	cmp	w0, #0x0
    1214:	b.ne	1308 <grub_mod_init-0x798>  // b.any
    1218:	mov	x0, #0x30                  	// #48
    121c:	bl	0 <grub_malloc>
    1220:	mov	x1, x0
    1224:	ldr	x0, [sp, #24]
    1228:	str	x1, [x0]
    122c:	ldr	x0, [sp, #24]
    1230:	ldr	x0, [x0]
    1234:	cmp	x0, #0x0
    1238:	b.ne	1250 <grub_mod_init-0x850>  // b.any
    123c:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1240:	add	x0, x0, #0x0
    1244:	ldr	x0, [x0]
    1248:	ldr	w0, [x0]
    124c:	b	1344 <grub_mod_init-0x75c>
    1250:	ldr	w1, [sp, #48]
    1254:	ldr	x0, [sp, #24]
    1258:	ldr	x0, [x0]
    125c:	and	w1, w1, #0xff
    1260:	strb	w1, [x0, #16]
    1264:	ldr	x0, [sp, #24]
    1268:	ldr	x0, [x0]
    126c:	ldr	x1, [sp, #56]
    1270:	str	x1, [x0, #24]
    1274:	ldr	x0, [sp, #24]
    1278:	ldr	x0, [x0]
    127c:	ldr	w1, [sp, #52]
    1280:	str	w1, [x0, #32]
    1284:	ldr	x0, [sp, #24]
    1288:	ldr	x0, [x0]
    128c:	ldr	w1, [sp, #76]
    1290:	str	w1, [x0, #44]
    1294:	ldr	x0, [sp, #24]
    1298:	ldr	x0, [x0]
    129c:	mov	w1, #0xffffffff            	// #-1
    12a0:	str	w1, [x0, #36]
    12a4:	ldr	x0, [sp, #24]
    12a8:	ldr	x0, [x0]
    12ac:	ldr	x1, [sp, #40]
    12b0:	ldr	x1, [x1, #8]
    12b4:	str	x1, [x0, #8]
    12b8:	ldr	x0, [sp, #24]
    12bc:	ldr	x0, [x0]
    12c0:	ldr	x1, [sp, #40]
    12c4:	ldr	x1, [x1]
    12c8:	str	x1, [x0]
    12cc:	ldr	x0, [sp, #24]
    12d0:	ldr	x0, [x0]
    12d4:	ldrb	w0, [x0, #16]
    12d8:	and	w0, w0, #0x10
    12dc:	cmp	w0, #0x0
    12e0:	b.eq	12ec <grub_mod_init-0x7b4>  // b.none
    12e4:	mov	w0, #0x2                   	// #2
    12e8:	b	12f0 <grub_mod_init-0x7b0>
    12ec:	mov	w0, #0x1                   	// #1
    12f0:	ldr	x1, [sp, #16]
    12f4:	str	w0, [x1]
    12f8:	add	x0, sp, #0x30
    12fc:	bl	db8 <grub_mod_init-0xce8>
    1300:	mov	w0, #0x0                   	// #0
    1304:	b	1344 <grub_mod_init-0x75c>
    1308:	add	x0, sp, #0x30
    130c:	mov	x1, x0
    1310:	ldr	x0, [sp, #40]
    1314:	bl	de8 <grub_mod_init-0xcb8>
    1318:	str	w0, [sp, #108]
    131c:	ldr	w0, [sp, #108]
    1320:	cmp	w0, #0x0
    1324:	b.eq	11f0 <grub_mod_init-0x8b0>  // b.none
    1328:	add	x0, sp, #0x30
    132c:	bl	db8 <grub_mod_init-0xce8>
    1330:	ldr	w0, [sp, #108]
    1334:	cmp	w0, #0x2c
    1338:	b.ne	1340 <grub_mod_init-0x760>  // b.any
    133c:	str	wzr, [sp, #108]
    1340:	ldr	w0, [sp, #108]
    1344:	ldp	x29, x30, [sp], #112
    1348:	ret
    134c:	nop
	...
    1358:	stp	x29, x30, [sp, #-208]!
    135c:	mov	x29, sp
    1360:	str	x0, [sp, #40]
    1364:	str	x1, [sp, #32]
    1368:	str	x2, [sp, #24]
    136c:	str	x3, [sp, #16]
    1370:	str	xzr, [sp, #200]
    1374:	ldr	x0, [sp, #40]
    1378:	ldr	x0, [x0]
    137c:	str	x0, [sp, #192]
    1380:	str	xzr, [sp, #176]
    1384:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1388:	add	x0, x0, #0x0
    138c:	ldr	x0, [x0]
    1390:	ldr	x0, [x0]
    1394:	bl	0 <grub_dl_ref>
    1398:	ldr	x0, [sp, #192]
    139c:	bl	4f4 <grub_mod_init-0x15ac>
    13a0:	str	x0, [sp, #200]
    13a4:	ldr	x0, [sp, #200]
    13a8:	cmp	x0, #0x0
    13ac:	b.eq	14e0 <grub_mod_init-0x5c0>  // b.none
    13b0:	ldr	x0, [sp, #192]
    13b4:	str	x0, [sp, #72]
    13b8:	ldr	x0, [sp, #200]
    13bc:	str	x0, [sp, #80]
    13c0:	mov	w0, #0x10                  	// #16
    13c4:	strb	w0, [sp, #88]
    13c8:	str	xzr, [sp, #96]
    13cc:	ldr	x0, [sp, #200]
    13d0:	ldr	w0, [x0, #20]
    13d4:	str	w0, [sp, #104]
    13d8:	mov	w0, #0xffffffff            	// #-1
    13dc:	str	w0, [sp, #108]
    13e0:	str	wzr, [sp, #112]
    13e4:	str	wzr, [sp, #116]
    13e8:	add	x2, sp, #0xb0
    13ec:	add	x1, sp, #0x48
    13f0:	mov	w5, #0x2                   	// #2
    13f4:	mov	x4, #0x0                   	// #0
    13f8:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    13fc:	add	x0, x0, #0x0
    1400:	ldr	x3, [x0]
    1404:	ldr	x0, [sp, #32]
    1408:	bl	0 <grub_fshelp_find_file_lookup>
    140c:	str	w0, [sp, #188]
    1410:	ldr	w0, [sp, #188]
    1414:	cmp	w0, #0x0
    1418:	b.ne	14e8 <grub_mod_init-0x5b8>  // b.any
    141c:	add	x0, sp, #0x78
    1420:	bl	d18 <grub_mod_init-0xd88>
    1424:	str	w0, [sp, #188]
    1428:	ldr	w0, [sp, #188]
    142c:	cmp	w0, #0x0
    1430:	b.ne	14f0 <grub_mod_init-0x5b0>  // b.any
    1434:	b	14a0 <grub_mod_init-0x600>
    1438:	add	x0, sp, #0x38
    143c:	mov	x2, #0x10                  	// #16
    1440:	mov	w1, #0x0                   	// #0
    1444:	bl	0 <grub_memset>
    1448:	ldr	w0, [sp, #120]
    144c:	and	w0, w0, #0x10
    1450:	cmp	w0, #0x0
    1454:	cset	w0, ne  // ne = any
    1458:	and	w1, w0, #0xff
    145c:	ldrb	w0, [sp, #56]
    1460:	bfxil	w0, w1, #0, #1
    1464:	strb	w0, [sp, #56]
    1468:	ldrb	w0, [sp, #56]
    146c:	orr	w0, w0, #0x4
    1470:	strb	w0, [sp, #56]
    1474:	ldr	w0, [sp, #144]
    1478:	cmp	w0, #0x0
    147c:	b.ne	1484 <grub_mod_init-0x61c>  // b.any
    1480:	b	14a0 <grub_mod_init-0x600>
    1484:	ldr	x0, [sp, #152]
    1488:	add	x1, sp, #0x38
    148c:	ldr	x3, [sp, #24]
    1490:	ldr	x2, [sp, #16]
    1494:	blr	x3
    1498:	cmp	w0, #0x0
    149c:	b.ne	14c0 <grub_mod_init-0x5e0>  // b.any
    14a0:	ldr	x0, [sp, #176]
    14a4:	add	x1, sp, #0x78
    14a8:	bl	de8 <grub_mod_init-0xcb8>
    14ac:	str	w0, [sp, #188]
    14b0:	ldr	w0, [sp, #188]
    14b4:	cmp	w0, #0x0
    14b8:	b.eq	1438 <grub_mod_init-0x668>  // b.none
    14bc:	b	14c4 <grub_mod_init-0x5dc>
    14c0:	nop
    14c4:	add	x0, sp, #0x78
    14c8:	bl	db8 <grub_mod_init-0xce8>
    14cc:	ldr	w0, [sp, #188]
    14d0:	cmp	w0, #0x2c
    14d4:	b.ne	14f8 <grub_mod_init-0x5a8>  // b.any
    14d8:	str	wzr, [sp, #188]
    14dc:	b	14fc <grub_mod_init-0x5a4>
    14e0:	nop
    14e4:	b	14fc <grub_mod_init-0x5a4>
    14e8:	nop
    14ec:	b	14fc <grub_mod_init-0x5a4>
    14f0:	nop
    14f4:	b	14fc <grub_mod_init-0x5a4>
    14f8:	nop
    14fc:	ldr	x1, [sp, #176]
    1500:	add	x0, sp, #0x48
    1504:	cmp	x1, x0
    1508:	b.eq	1514 <grub_mod_init-0x58c>  // b.none
    150c:	ldr	x0, [sp, #176]
    1510:	bl	0 <grub_free>
    1514:	ldr	x0, [sp, #200]
    1518:	bl	0 <grub_free>
    151c:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1520:	add	x0, x0, #0x0
    1524:	ldr	x0, [x0]
    1528:	ldr	x0, [x0]
    152c:	bl	0 <grub_dl_unref>
    1530:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1534:	add	x0, x0, #0x0
    1538:	ldr	x0, [x0]
    153c:	ldr	w0, [x0]
    1540:	ldp	x29, x30, [sp], #208
    1544:	ret
	...
    1560:	stp	x29, x30, [sp, #-112]!
    1564:	mov	x29, sp
    1568:	str	x0, [sp, #24]
    156c:	str	x1, [sp, #16]
    1570:	str	xzr, [sp, #104]
    1574:	str	xzr, [sp, #80]
    1578:	ldr	x0, [sp, #24]
    157c:	ldr	x0, [x0, #8]
    1580:	ldr	x0, [x0]
    1584:	str	x0, [sp, #96]
    1588:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    158c:	add	x0, x0, #0x0
    1590:	ldr	x0, [x0]
    1594:	ldr	x0, [x0]
    1598:	bl	0 <grub_dl_ref>
    159c:	ldr	x0, [sp, #96]
    15a0:	bl	4f4 <grub_mod_init-0x15ac>
    15a4:	str	x0, [sp, #104]
    15a8:	ldr	x0, [sp, #104]
    15ac:	cmp	x0, #0x0
    15b0:	b.eq	1644 <grub_mod_init-0x45c>  // b.none
    15b4:	ldr	x0, [sp, #96]
    15b8:	str	x0, [sp, #32]
    15bc:	ldr	x0, [sp, #104]
    15c0:	str	x0, [sp, #40]
    15c4:	mov	w0, #0x10                  	// #16
    15c8:	strb	w0, [sp, #48]
    15cc:	str	xzr, [sp, #56]
    15d0:	ldr	x0, [sp, #104]
    15d4:	ldr	w0, [x0, #20]
    15d8:	str	w0, [sp, #64]
    15dc:	mov	w0, #0xffffffff            	// #-1
    15e0:	str	w0, [sp, #68]
    15e4:	str	wzr, [sp, #72]
    15e8:	str	wzr, [sp, #76]
    15ec:	add	x2, sp, #0x50
    15f0:	add	x1, sp, #0x20
    15f4:	mov	w5, #0x1                   	// #1
    15f8:	mov	x4, #0x0                   	// #0
    15fc:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1600:	add	x0, x0, #0x0
    1604:	ldr	x3, [x0]
    1608:	ldr	x0, [sp, #16]
    160c:	bl	0 <grub_fshelp_find_file_lookup>
    1610:	str	w0, [sp, #92]
    1614:	ldr	w0, [sp, #92]
    1618:	cmp	w0, #0x0
    161c:	b.ne	164c <grub_mod_init-0x454>  // b.any
    1620:	ldr	x1, [sp, #80]
    1624:	ldr	x0, [sp, #24]
    1628:	str	x1, [x0, #80]
    162c:	ldr	x0, [sp, #80]
    1630:	ldr	x1, [x0, #24]
    1634:	ldr	x0, [sp, #24]
    1638:	str	x1, [x0, #64]
    163c:	mov	w0, #0x0                   	// #0
    1640:	b	1694 <grub_mod_init-0x40c>
    1644:	nop
    1648:	b	1650 <grub_mod_init-0x450>
    164c:	nop
    1650:	ldr	x1, [sp, #80]
    1654:	add	x0, sp, #0x20
    1658:	cmp	x1, x0
    165c:	b.eq	1668 <grub_mod_init-0x438>  // b.none
    1660:	ldr	x0, [sp, #80]
    1664:	bl	0 <grub_free>
    1668:	ldr	x0, [sp, #104]
    166c:	bl	0 <grub_free>
    1670:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1674:	add	x0, x0, #0x0
    1678:	ldr	x0, [x0]
    167c:	ldr	x0, [x0]
    1680:	bl	0 <grub_dl_unref>
    1684:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1688:	add	x0, x0, #0x0
    168c:	ldr	x0, [x0]
    1690:	ldr	w0, [x0]
    1694:	ldp	x29, x30, [sp], #112
    1698:	ret
    169c:	nop
	...
    16b8:	stp	x29, x30, [sp, #-48]!
    16bc:	mov	x29, sp
    16c0:	str	x0, [sp, #40]
    16c4:	str	x1, [sp, #32]
    16c8:	str	x2, [sp, #24]
    16cc:	ldr	x0, [sp, #40]
    16d0:	ldr	x0, [x0, #8]
    16d4:	ldr	x7, [x0]
    16d8:	ldr	x0, [sp, #40]
    16dc:	ldr	x1, [x0, #80]
    16e0:	ldr	x0, [sp, #40]
    16e4:	ldr	x2, [x0, #88]
    16e8:	ldr	x0, [sp, #40]
    16ec:	ldr	x3, [x0, #96]
    16f0:	ldr	x0, [sp, #40]
    16f4:	ldr	x0, [x0, #24]
    16f8:	ldr	x6, [sp, #32]
    16fc:	ldr	x5, [sp, #24]
    1700:	mov	x4, x0
    1704:	mov	x0, x7
    1708:	bl	890 <grub_mod_init-0x1210>
    170c:	ldp	x29, x30, [sp], #48
    1710:	ret
    1714:	stp	x29, x30, [sp, #-48]!
    1718:	mov	x29, sp
    171c:	str	x0, [sp, #24]
    1720:	ldr	x0, [sp, #24]
    1724:	ldr	x0, [x0, #80]
    1728:	str	x0, [sp, #40]
    172c:	ldr	x0, [sp, #40]
    1730:	ldr	x0, [x0, #8]
    1734:	bl	0 <grub_free>
    1738:	ldr	x0, [sp, #40]
    173c:	bl	0 <grub_free>
    1740:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1744:	add	x0, x0, #0x0
    1748:	ldr	x0, [x0]
    174c:	ldr	x0, [x0]
    1750:	bl	0 <grub_dl_unref>
    1754:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1758:	add	x0, x0, #0x0
    175c:	ldr	x0, [x0]
    1760:	ldr	w0, [x0]
    1764:	ldp	x29, x30, [sp], #48
    1768:	ret
    176c:	nop
	...
    1780:	stp	x29, x30, [sp, #-176]!
    1784:	mov	x29, sp
    1788:	str	x0, [sp, #24]
    178c:	str	x1, [sp, #16]
    1790:	mov	x0, #0xffffffffffffffe0    	// #-32
    1794:	str	x0, [sp, #168]
    1798:	ldr	x0, [sp, #24]
    179c:	ldr	x0, [x0]
    17a0:	str	x0, [sp, #144]
    17a4:	stp	xzr, xzr, [sp, #64]
    17a8:	stp	xzr, xzr, [sp, #80]
    17ac:	stp	xzr, xzr, [sp, #96]
    17b0:	ldr	x0, [sp, #144]
    17b4:	str	x0, [sp, #64]
    17b8:	mov	w0, #0x10                  	// #16
    17bc:	strb	w0, [sp, #80]
    17c0:	mov	w0, #0xffffffff            	// #-1
    17c4:	str	w0, [sp, #100]
    17c8:	ldr	x0, [sp, #144]
    17cc:	bl	4f4 <grub_mod_init-0x15ac>
    17d0:	str	x0, [sp, #72]
    17d4:	ldr	x0, [sp, #72]
    17d8:	cmp	x0, #0x0
    17dc:	b.ne	17f4 <grub_mod_init-0x2ac>  // b.any
    17e0:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    17e4:	add	x0, x0, #0x0
    17e8:	ldr	x0, [x0]
    17ec:	ldr	w0, [x0]
    17f0:	b	195c <grub_mod_init-0x144>
    17f4:	ldr	x0, [sp, #72]
    17f8:	ldr	w0, [x0, #20]
    17fc:	str	w0, [sp, #96]
    1800:	ldr	x0, [sp, #16]
    1804:	str	xzr, [x0]
    1808:	ldr	x0, [sp, #168]
    180c:	add	x0, x0, #0x20
    1810:	str	x0, [sp, #168]
    1814:	ldr	x1, [sp, #168]
    1818:	add	x2, sp, #0x70
    181c:	add	x0, sp, #0x40
    1820:	mov	x6, x2
    1824:	mov	x5, #0x20                  	// #32
    1828:	mov	x4, x1
    182c:	mov	x3, #0x0                   	// #0
    1830:	mov	x2, #0x0                   	// #0
    1834:	mov	x1, x0
    1838:	ldr	x0, [sp, #144]
    183c:	bl	890 <grub_mod_init-0x1210>
    1840:	cmp	x0, #0x20
    1844:	b.ne	1938 <grub_mod_init-0x168>  // b.any
    1848:	ldrb	w0, [sp, #112]
    184c:	cmp	w0, #0x0
    1850:	b.eq	1940 <grub_mod_init-0x160>  // b.none
    1854:	ldrb	w0, [sp, #112]
    1858:	sxtb	w0, w0
    185c:	cmp	w0, #0x0
    1860:	b.ge	1930 <grub_mod_init-0x170>  // b.tcont
    1864:	ldrb	w0, [sp, #112]
    1868:	cmp	w0, #0x83
    186c:	b.ne	1808 <grub_mod_init-0x298>  // b.any
    1870:	mov	x0, #0x3d                  	// #61
    1874:	bl	0 <grub_malloc>
    1878:	mov	x1, x0
    187c:	ldr	x0, [sp, #16]
    1880:	str	x1, [x0]
    1884:	ldr	x0, [sp, #16]
    1888:	ldr	x0, [x0]
    188c:	cmp	x0, #0x0
    1890:	b.ne	18b0 <grub_mod_init-0x1f0>  // b.any
    1894:	ldr	x0, [sp, #72]
    1898:	bl	0 <grub_free>
    189c:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    18a0:	add	x0, x0, #0x0
    18a4:	ldr	x0, [x0]
    18a8:	ldr	w0, [x0]
    18ac:	b	195c <grub_mod_init-0x144>
    18b0:	ldrb	w0, [sp, #113]
    18b4:	and	x0, x0, #0xff
    18b8:	str	x0, [sp, #160]
    18bc:	ldr	x0, [sp, #160]
    18c0:	cmp	x0, #0xf
    18c4:	b.ls	18d0 <grub_mod_init-0x1d0>  // b.plast
    18c8:	mov	x0, #0xf                   	// #15
    18cc:	str	x0, [sp, #160]
    18d0:	str	xzr, [sp, #152]
    18d4:	b	1904 <grub_mod_init-0x19c>
    18d8:	ldr	x0, [sp, #152]
    18dc:	lsl	x0, x0, #1
    18e0:	add	x1, sp, #0x72
    18e4:	ldrh	w2, [x1, x0]
    18e8:	ldr	x0, [sp, #152]
    18ec:	lsl	x0, x0, #1
    18f0:	add	x1, sp, #0x20
    18f4:	strh	w2, [x1, x0]
    18f8:	ldr	x0, [sp, #152]
    18fc:	add	x0, x0, #0x1
    1900:	str	x0, [sp, #152]
    1904:	ldr	x1, [sp, #152]
    1908:	ldr	x0, [sp, #160]
    190c:	cmp	x1, x0
    1910:	b.cc	18d8 <grub_mod_init-0x1c8>  // b.lo, b.ul, b.last
    1914:	ldr	x0, [sp, #16]
    1918:	ldr	x0, [x0]
    191c:	add	x1, sp, #0x20
    1920:	ldr	x2, [sp, #160]
    1924:	bl	170 <grub_mod_init-0x1930>
    1928:	strb	wzr, [x0]
    192c:	b	1808 <grub_mod_init-0x298>
    1930:	nop
    1934:	b	1808 <grub_mod_init-0x298>
    1938:	nop
    193c:	b	1944 <grub_mod_init-0x15c>
    1940:	nop
    1944:	ldr	x0, [sp, #72]
    1948:	bl	0 <grub_free>
    194c:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1950:	add	x0, x0, #0x0
    1954:	ldr	x0, [x0]
    1958:	ldr	w0, [x0]
    195c:	ldp	x29, x30, [sp], #176
    1960:	ret
    1964:	nop
	...
    1970:	stp	x29, x30, [sp, #-64]!
    1974:	mov	x29, sp
    1978:	str	x0, [sp, #24]
    197c:	str	x1, [sp, #16]
    1980:	ldr	x0, [sp, #24]
    1984:	ldr	x0, [x0]
    1988:	str	x0, [sp, #48]
    198c:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1990:	add	x0, x0, #0x0
    1994:	ldr	x0, [x0]
    1998:	ldr	x0, [x0]
    199c:	bl	0 <grub_dl_ref>
    19a0:	ldr	x0, [sp, #48]
    19a4:	bl	4f4 <grub_mod_init-0x15ac>
    19a8:	str	x0, [sp, #40]
    19ac:	ldr	x0, [sp, #40]
    19b0:	cmp	x0, #0x0
    19b4:	b.eq	1a4c <grub_mod_init-0x54>  // b.none
    19b8:	ldr	x0, [sp, #40]
    19bc:	ldr	w0, [x0, #40]
    19c0:	lsr	w0, w0, #16
    19c4:	and	w0, w0, #0xffff
    19c8:	mov	w1, w0
    19cc:	ldr	x0, [sp, #40]
    19d0:	ldr	w0, [x0, #40]
    19d4:	and	w0, w0, #0xffff
    19d8:	mov	w2, w0
    19dc:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    19e0:	add	x0, x0, #0x0
    19e4:	ldr	x0, [x0]
    19e8:	bl	0 <grub_xasprintf>
    19ec:	mov	x1, x0
    19f0:	ldr	x0, [sp, #16]
    19f4:	str	x1, [x0]
    19f8:	ldr	x0, [sp, #16]
    19fc:	ldr	x0, [x0]
    1a00:	str	x0, [sp, #56]
    1a04:	b	1a2c <grub_mod_init-0x74>
    1a08:	ldr	x0, [sp, #56]
    1a0c:	ldrb	w0, [x0]
    1a10:	bl	90 <grub_mod_init-0x1a10>
    1a14:	and	w1, w0, #0xff
    1a18:	ldr	x0, [sp, #56]
    1a1c:	strb	w1, [x0]
    1a20:	ldr	x0, [sp, #56]
    1a24:	add	x0, x0, #0x1
    1a28:	str	x0, [sp, #56]
    1a2c:	ldr	x0, [sp, #56]
    1a30:	cmp	x0, #0x0
    1a34:	b.eq	1a54 <grub_mod_init-0x4c>  // b.none
    1a38:	ldr	x0, [sp, #56]
    1a3c:	ldrb	w0, [x0]
    1a40:	cmp	w0, #0x0
    1a44:	b.ne	1a08 <grub_mod_init-0x98>  // b.any
    1a48:	b	1a54 <grub_mod_init-0x4c>
    1a4c:	ldr	x0, [sp, #16]
    1a50:	str	xzr, [x0]
    1a54:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1a58:	add	x0, x0, #0x0
    1a5c:	ldr	x0, [x0]
    1a60:	ldr	x0, [x0]
    1a64:	bl	0 <grub_dl_unref>
    1a68:	ldr	x0, [sp, #40]
    1a6c:	bl	0 <grub_free>
    1a70:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1a74:	add	x0, x0, #0x0
    1a78:	ldr	x0, [x0]
    1a7c:	ldr	w0, [x0]
    1a80:	ldp	x29, x30, [sp], #64
    1a84:	ret
	...

0000000000001aa0 <grub_mod_init>:
    1aa0:	stp	x29, x30, [sp, #-32]!
    1aa4:	mov	x29, sp
    1aa8:	str	x0, [sp, #24]
    1aac:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1ab0:	add	x0, x0, #0x0
    1ab4:	ldr	x0, [x0]
    1ab8:	bl	0 <grub_mod_init-0x1aa0>
    1abc:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1ac0:	add	x0, x0, #0x0
    1ac4:	ldr	x0, [x0]
    1ac8:	ldr	x1, [sp, #24]
    1acc:	str	x1, [x0]
    1ad0:	nop
    1ad4:	ldp	x29, x30, [sp], #32
    1ad8:	ret
    1adc:	nop
	...

0000000000001af0 <grub_mod_fini>:
    1af0:	stp	x29, x30, [sp, #-16]!
    1af4:	mov	x29, sp
    1af8:	adrp	x0, 0 <grub_mod_init-0x1aa0>
    1afc:	add	x0, x0, #0x0
    1b00:	ldr	x0, [x0]
    1b04:	bl	38 <grub_mod_init-0x1a68>
    1b08:	nop
    1b0c:	ldp	x29, x30, [sp], #16
    1b10:	ret
    1b14:	nop
	...
