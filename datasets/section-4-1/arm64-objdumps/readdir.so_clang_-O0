
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//readdir.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000858 <.init>:
 858:	stp	x29, x30, [sp, #-16]!
 85c:	mov	x29, sp
 860:	bl	970 <fprintf@plt+0x10>
 864:	ldp	x29, x30, [sp], #16
 868:	ret

Disassembly of section .plt:

0000000000000870 <exit@plt-0x20>:
 870:	stp	x16, x30, [sp, #-16]!
 874:	adrp	x16, 11000 <dl_load@@Base+0x105bc>
 878:	ldr	x17, [x16, #4088]
 87c:	add	x16, x16, #0xff8
 880:	br	x17
 884:	nop
 888:	nop
 88c:	nop

0000000000000890 <exit@plt>:
 890:	adrp	x16, 12000 <exit@GLIBC_2.17>
 894:	ldr	x17, [x16]
 898:	add	x16, x16, #0x0
 89c:	br	x17

00000000000008a0 <__cxa_finalize@plt>:
 8a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #8]
 8a8:	add	x16, x16, #0x8
 8ac:	br	x17

00000000000008b0 <sprintf@plt>:
 8b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #16]
 8b8:	add	x16, x16, #0x10
 8bc:	br	x17

00000000000008c0 <strcat@plt>:
 8c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #24]
 8c8:	add	x16, x16, #0x18
 8cc:	br	x17

00000000000008d0 <readdir@plt>:
 8d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #32]
 8d8:	add	x16, x16, #0x20
 8dc:	br	x17

00000000000008e0 <closedir@plt>:
 8e0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #40]
 8e8:	add	x16, x16, #0x28
 8ec:	br	x17

00000000000008f0 <strerror@plt>:
 8f0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #48]
 8f8:	add	x16, x16, #0x30
 8fc:	br	x17

0000000000000900 <__gmon_start__@plt>:
 900:	adrp	x16, 12000 <exit@GLIBC_2.17>
 904:	ldr	x17, [x16, #56]
 908:	add	x16, x16, #0x38
 90c:	br	x17

0000000000000910 <fdopendir@plt>:
 910:	adrp	x16, 12000 <exit@GLIBC_2.17>
 914:	ldr	x17, [x16, #64]
 918:	add	x16, x16, #0x40
 91c:	br	x17

0000000000000920 <strcpy@plt>:
 920:	adrp	x16, 12000 <exit@GLIBC_2.17>
 924:	ldr	x17, [x16, #72]
 928:	add	x16, x16, #0x48
 92c:	br	x17

0000000000000930 <__errno_location@plt>:
 930:	adrp	x16, 12000 <exit@GLIBC_2.17>
 934:	ldr	x17, [x16, #80]
 938:	add	x16, x16, #0x50
 93c:	br	x17

0000000000000940 <__xstat@plt>:
 940:	adrp	x16, 12000 <exit@GLIBC_2.17>
 944:	ldr	x17, [x16, #88]
 948:	add	x16, x16, #0x58
 94c:	br	x17

0000000000000950 <gettext@plt>:
 950:	adrp	x16, 12000 <exit@GLIBC_2.17>
 954:	ldr	x17, [x16, #96]
 958:	add	x16, x16, #0x60
 95c:	br	x17

0000000000000960 <fprintf@plt>:
 960:	adrp	x16, 12000 <exit@GLIBC_2.17>
 964:	ldr	x17, [x16, #104]
 968:	add	x16, x16, #0x68
 96c:	br	x17

Disassembly of section .text:

0000000000000970 <dl_load@@Base-0xd4>:
     970:	adrp	x0, 11000 <dl_load@@Base+0x105bc>
     974:	ldr	x0, [x0, #4056]
     978:	cbz	x0, 980 <fprintf@plt+0x20>
     97c:	b	900 <__gmon_start__@plt>
     980:	ret
     984:	nop
     988:	adrp	x0, 12000 <dl_load@@Base+0x115bc>
     98c:	add	x0, x0, #0xa8
     990:	adrp	x1, 12000 <dl_load@@Base+0x115bc>
     994:	add	x1, x1, #0xa8
     998:	cmp	x1, x0
     99c:	b.eq	9b4 <fprintf@plt+0x54>  // b.none
     9a0:	adrp	x1, 11000 <dl_load@@Base+0x105bc>
     9a4:	ldr	x1, [x1, #4032]
     9a8:	cbz	x1, 9b4 <fprintf@plt+0x54>
     9ac:	mov	x16, x1
     9b0:	br	x16
     9b4:	ret
     9b8:	adrp	x0, 12000 <dl_load@@Base+0x115bc>
     9bc:	add	x0, x0, #0xa8
     9c0:	adrp	x1, 12000 <dl_load@@Base+0x115bc>
     9c4:	add	x1, x1, #0xa8
     9c8:	sub	x1, x1, x0
     9cc:	lsr	x2, x1, #63
     9d0:	add	x1, x2, x1, asr #3
     9d4:	cmp	xzr, x1, asr #1
     9d8:	asr	x1, x1, #1
     9dc:	b.eq	9f4 <fprintf@plt+0x94>  // b.none
     9e0:	adrp	x2, 11000 <dl_load@@Base+0x105bc>
     9e4:	ldr	x2, [x2, #4064]
     9e8:	cbz	x2, 9f4 <fprintf@plt+0x94>
     9ec:	mov	x16, x2
     9f0:	br	x16
     9f4:	ret
     9f8:	stp	x29, x30, [sp, #-32]!
     9fc:	mov	x29, sp
     a00:	str	x19, [sp, #16]
     a04:	adrp	x19, 12000 <dl_load@@Base+0x115bc>
     a08:	ldrb	w0, [x19, #168]
     a0c:	cbnz	w0, a34 <fprintf@plt+0xd4>
     a10:	adrp	x0, 11000 <dl_load@@Base+0x105bc>
     a14:	ldr	x0, [x0, #4040]
     a18:	cbz	x0, a28 <fprintf@plt+0xc8>
     a1c:	adrp	x0, 12000 <dl_load@@Base+0x115bc>
     a20:	ldr	x0, [x0, #112]
     a24:	bl	8a0 <__cxa_finalize@plt>
     a28:	bl	988 <fprintf@plt+0x28>
     a2c:	mov	w0, #0x1                   	// #1
     a30:	strb	w0, [x19, #168]
     a34:	ldr	x19, [sp, #16]
     a38:	ldp	x29, x30, [sp], #32
     a3c:	ret
     a40:	b	9b8 <fprintf@plt+0x58>

0000000000000a44 <dl_load@@Base>:
     a44:	sub	sp, sp, #0x60
     a48:	stp	x29, x30, [sp, #80]
     a4c:	add	x29, sp, #0x50
     a50:	adrp	x8, 12000 <dl_load@@Base+0x115bc>
     a54:	add	x8, x8, #0xb0
     a58:	adrp	x9, 12000 <dl_load@@Base+0x115bc>
     a5c:	add	x9, x9, #0xb8
     a60:	adrp	x10, 12000 <dl_load@@Base+0x115bc>
     a64:	add	x10, x10, #0xc0
     a68:	stur	x0, [x29, #-8]
     a6c:	stur	x1, [x29, #-16]
     a70:	stur	wzr, [x29, #-36]
     a74:	ldur	x11, [x29, #-8]
     a78:	str	x11, [x8]
     a7c:	ldur	x11, [x29, #-16]
     a80:	str	x11, [x9]
     a84:	ldr	x11, [x8]
     a88:	ldr	w12, [x11]
     a8c:	cmp	w12, #0x2
     a90:	str	x8, [sp, #32]
     a94:	str	x9, [sp, #24]
     a98:	str	x10, [sp, #16]
     a9c:	b.ne	ab8 <dl_load@@Base+0x74>  // b.any
     aa0:	ldr	x8, [sp, #32]
     aa4:	ldr	x9, [x8]
     aa8:	ldr	w10, [x9, #4]
     aac:	cmp	w10, #0x0
     ab0:	cset	w10, ge  // ge = tcont
     ab4:	tbnz	w10, #0, b18 <dl_load@@Base+0xd4>
     ab8:	adrp	x8, 11000 <dl_load@@Base+0x105bc>
     abc:	ldr	x8, [x8, #4048]
     ac0:	ldr	x0, [x8]
     ac4:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     ac8:	add	x1, x1, #0x364
     acc:	str	x8, [sp, #8]
     ad0:	bl	960 <fprintf@plt>
     ad4:	ldr	x8, [sp, #8]
     ad8:	ldr	x9, [x8]
     adc:	ldr	x10, [sp, #32]
     ae0:	ldr	x11, [x10]
     ae4:	ldr	w4, [x11]
     ae8:	ldr	x11, [x10]
     aec:	ldr	w5, [x11, #4]
     af0:	mov	x0, x9
     af4:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     af8:	add	x1, x1, #0x38a
     afc:	mov	w2, #0x2                   	// #2
     b00:	mov	w12, wzr
     b04:	mov	w3, w12
     b08:	bl	960 <fprintf@plt>
     b0c:	mov	w12, #0x1                   	// #1
     b10:	mov	w0, w12
     b14:	bl	890 <exit@plt>
     b18:	stur	xzr, [x29, #-24]
     b1c:	mov	x8, #0x1                   	// #1
     b20:	stur	x8, [x29, #-32]
     b24:	ldur	x8, [x29, #-24]
     b28:	ldur	x9, [x29, #-32]
     b2c:	cmp	x8, x9
     b30:	b.cs	be0 <dl_load@@Base+0x19c>  // b.hs, b.nlast
     b34:	ldur	x8, [x29, #-24]
     b38:	mov	x9, #0x30                  	// #48
     b3c:	mul	x8, x9, x8
     b40:	ldr	x9, [sp, #16]
     b44:	add	x8, x9, x8
     b48:	ldr	x8, [x8]
     b4c:	cbnz	x8, b54 <dl_load@@Base+0x110>
     b50:	b	be0 <dl_load@@Base+0x19c>
     b54:	ldr	x8, [sp, #32]
     b58:	ldr	x9, [x8]
     b5c:	mov	x10, #0x30                  	// #48
     b60:	ldr	x9, [x9, #48]
     b64:	ldr	x11, [sp, #24]
     b68:	ldr	x0, [x11]
     b6c:	ldur	x12, [x29, #-24]
     b70:	mul	x10, x10, x12
     b74:	ldr	x12, [sp, #16]
     b78:	add	x2, x12, x10
     b7c:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     b80:	add	x1, x1, #0x389
     b84:	blr	x9
     b88:	cbnz	w0, bd0 <dl_load@@Base+0x18c>
     b8c:	ldr	x8, [sp, #32]
     b90:	ldr	x9, [x8]
     b94:	ldr	x9, [x9, #104]
     b98:	ldr	x10, [sp, #24]
     b9c:	ldr	x0, [x10]
     ba0:	ldur	x11, [x29, #-24]
     ba4:	mov	x12, #0x30                  	// #48
     ba8:	mul	x11, x12, x11
     bac:	ldr	x12, [sp, #16]
     bb0:	add	x11, x12, x11
     bb4:	ldr	x2, [x11]
     bb8:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     bbc:	add	x1, x1, #0x3bd
     bc0:	blr	x9
     bc4:	ldur	w13, [x29, #-36]
     bc8:	add	w13, w13, #0x1
     bcc:	stur	w13, [x29, #-36]
     bd0:	ldur	x8, [x29, #-24]
     bd4:	add	x8, x8, #0x1
     bd8:	stur	x8, [x29, #-24]
     bdc:	b	b24 <dl_load@@Base+0xe0>
     be0:	adrp	x8, 12000 <dl_load@@Base+0x115bc>
     be4:	add	x8, x8, #0x78
     be8:	ldr	x8, [x8]
     bec:	cbz	x8, c30 <dl_load@@Base+0x1ec>
     bf0:	adrp	x8, 12000 <dl_load@@Base+0x115bc>
     bf4:	add	x8, x8, #0x78
     bf8:	ldr	x8, [x8]
     bfc:	blr	x8
     c00:	cbnz	w0, c30 <dl_load@@Base+0x1ec>
     c04:	ldr	x8, [sp, #32]
     c08:	ldr	x9, [x8]
     c0c:	ldr	x9, [x9, #104]
     c10:	ldr	x10, [sp, #24]
     c14:	ldr	x0, [x10]
     c18:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     c1c:	add	x1, x1, #0x3d7
     c20:	blr	x9
     c24:	ldur	w11, [x29, #-36]
     c28:	add	w11, w11, #0x1
     c2c:	stur	w11, [x29, #-36]
     c30:	adrp	x8, 12000 <dl_load@@Base+0x115bc>
     c34:	add	x8, x8, #0x80
     c38:	ldr	x8, [x8]
     c3c:	cbz	x8, c64 <dl_load@@Base+0x220>
     c40:	ldr	x8, [sp, #32]
     c44:	ldr	x9, [x8]
     c48:	ldr	x9, [x9, #88]
     c4c:	ldr	x10, [sp, #24]
     c50:	ldr	x0, [x10]
     c54:	adrp	x11, 12000 <dl_load@@Base+0x115bc>
     c58:	add	x11, x11, #0x80
     c5c:	ldr	x1, [x11]
     c60:	blr	x9
     c64:	ldur	w8, [x29, #-36]
     c68:	cmp	w8, #0x0
     c6c:	cset	w8, eq  // eq = none
     c70:	and	w0, w8, #0x1
     c74:	ldp	x29, x30, [sp, #80]
     c78:	add	sp, sp, #0x60
     c7c:	ret
     c80:	sub	sp, sp, #0x20
     c84:	stp	x29, x30, [sp, #16]
     c88:	add	x29, sp, #0x10
     c8c:	adrp	x8, 12000 <dl_load@@Base+0x115bc>
     c90:	add	x8, x8, #0xb0
     c94:	adrp	x9, 12000 <dl_load@@Base+0x115bc>
     c98:	add	x9, x9, #0xb8
     c9c:	adrp	x1, 12000 <dl_load@@Base+0x115bc>
     ca0:	add	x1, x1, #0x88
     ca4:	mov	w0, #0x1                   	// #1
     ca8:	ldr	x8, [x8]
     cac:	ldr	x8, [x8, #56]
     cb0:	ldr	x9, [x9]
     cb4:	stur	w0, [x29, #-4]
     cb8:	mov	x0, x9
     cbc:	blr	x8
     cc0:	ldur	w0, [x29, #-4]
     cc4:	ldp	x29, x30, [sp, #16]
     cc8:	add	sp, sp, #0x20
     ccc:	ret
     cd0:	sub	sp, sp, #0x20
     cd4:	str	x0, [sp, #16]
     cd8:	ldr	x8, [sp, #16]
     cdc:	cbnz	x8, ce8 <dl_load@@Base+0x2a4>
     ce0:	str	wzr, [sp, #28]
     ce4:	b	d28 <dl_load@@Base+0x2e4>
     ce8:	ldr	x8, [sp, #16]
     cec:	ldr	w9, [x8, #8]
     cf0:	mov	w10, #0xffffffff            	// #-1
     cf4:	mov	w11, #0x0                   	// #0
     cf8:	cmp	w9, w10
     cfc:	str	w11, [sp, #12]
     d00:	b.eq	d1c <dl_load@@Base+0x2d8>  // b.none
     d04:	ldr	x8, [sp, #16]
     d08:	ldr	w9, [x8, #64]
     d0c:	and	w9, w9, #0xf000
     d10:	cmp	w9, #0x4, lsl #12
     d14:	cset	w9, eq  // eq = none
     d18:	str	w9, [sp, #12]
     d1c:	ldr	w8, [sp, #12]
     d20:	and	w8, w8, #0x1
     d24:	str	w8, [sp, #28]
     d28:	ldr	w0, [sp, #28]
     d2c:	add	sp, sp, #0x20
     d30:	ret
     d34:	sub	sp, sp, #0x80
     d38:	stp	x29, x30, [sp, #112]
     d3c:	add	x29, sp, #0x70
     d40:	adrp	x8, 12000 <dl_load@@Base+0x115bc>
     d44:	add	x8, x8, #0xb0
     d48:	adrp	x9, 12000 <dl_load@@Base+0x115bc>
     d4c:	add	x9, x9, #0xb8
     d50:	stur	x0, [x29, #-16]
     d54:	stur	x8, [x29, #-48]
     d58:	str	x9, [sp, #56]
     d5c:	bl	930 <__errno_location@plt>
     d60:	str	wzr, [x0]
     d64:	ldur	x8, [x29, #-16]
     d68:	ldr	w0, [x8, #8]
     d6c:	bl	910 <fdopendir@plt>
     d70:	stur	x0, [x29, #-24]
     d74:	ldur	x8, [x29, #-24]
     d78:	cbnz	x8, e0c <dl_load@@Base+0x3c8>
     d7c:	ldur	x8, [x29, #-48]
     d80:	ldr	x9, [x8]
     d84:	ldr	x9, [x9, #104]
     d88:	ldr	x10, [sp, #56]
     d8c:	ldr	x0, [x10]
     d90:	adrp	x11, 1000 <dl_load@@Base+0x5bc>
     d94:	add	x11, x11, #0x407
     d98:	str	x0, [sp, #48]
     d9c:	mov	x0, x11
     da0:	str	x9, [sp, #40]
     da4:	bl	950 <gettext@plt>
     da8:	str	x0, [sp, #32]
     dac:	bl	930 <__errno_location@plt>
     db0:	ldr	w0, [x0]
     db4:	bl	8f0 <strerror@plt>
     db8:	ldr	x8, [sp, #48]
     dbc:	str	x0, [sp, #24]
     dc0:	mov	x0, x8
     dc4:	ldr	x1, [sp, #32]
     dc8:	ldr	x2, [sp, #24]
     dcc:	ldr	x9, [sp, #40]
     dd0:	blr	x9
     dd4:	ldur	x8, [x29, #-48]
     dd8:	ldr	x9, [x8]
     ddc:	ldr	x9, [x9, #128]
     de0:	ldr	x10, [sp, #56]
     de4:	ldr	x0, [x10]
     de8:	str	x9, [sp, #16]
     dec:	str	x0, [sp, #8]
     df0:	bl	930 <__errno_location@plt>
     df4:	ldr	w1, [x0]
     df8:	ldr	x0, [sp, #8]
     dfc:	ldr	x8, [sp, #16]
     e00:	blr	x8
     e04:	stur	wzr, [x29, #-4]
     e08:	b	ee8 <dl_load@@Base+0x4a4>
     e0c:	ldur	x8, [x29, #-48]
     e10:	ldr	x9, [x8]
     e14:	ldr	x9, [x9, #280]
     e18:	mov	x0, #0x10                  	// #16
     e1c:	blr	x9
     e20:	stur	x0, [x29, #-32]
     e24:	cbnz	x0, e54 <dl_load@@Base+0x410>
     e28:	ldur	x8, [x29, #-48]
     e2c:	ldr	x9, [x8]
     e30:	ldr	x9, [x9, #96]
     e34:	ldr	x10, [sp, #56]
     e38:	ldr	x0, [x10]
     e3c:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     e40:	add	x1, x1, #0x439
     e44:	adrp	x2, 1000 <dl_load@@Base+0x5bc>
     e48:	add	x2, x2, #0x457
     e4c:	mov	x3, #0x10                  	// #16
     e50:	blr	x9
     e54:	ldur	x8, [x29, #-24]
     e58:	ldur	x9, [x29, #-32]
     e5c:	str	x8, [x9]
     e60:	mov	x8, #0x12f                 	// #303
     e64:	stur	x8, [x29, #-40]
     e68:	ldur	x8, [x29, #-48]
     e6c:	ldr	x9, [x8]
     e70:	ldr	x9, [x9, #280]
     e74:	ldur	x0, [x29, #-40]
     e78:	blr	x9
     e7c:	ldur	x8, [x29, #-32]
     e80:	str	x0, [x8, #8]
     e84:	cbnz	x0, eb4 <dl_load@@Base+0x470>
     e88:	ldur	x8, [x29, #-48]
     e8c:	ldr	x9, [x8]
     e90:	ldr	x9, [x9, #96]
     e94:	ldr	x10, [sp, #56]
     e98:	ldr	x0, [x10]
     e9c:	ldur	x3, [x29, #-40]
     ea0:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     ea4:	add	x1, x1, #0x439
     ea8:	adrp	x2, 1000 <dl_load@@Base+0x5bc>
     eac:	add	x2, x2, #0x457
     eb0:	blr	x9
     eb4:	ldur	x8, [x29, #-32]
     eb8:	ldur	x9, [x29, #-16]
     ebc:	str	x8, [x9, #16]
     ec0:	ldur	x8, [x29, #-16]
     ec4:	adrp	x9, 0 <exit@plt-0x890>
     ec8:	add	x9, x9, #0xef8
     ecc:	str	x9, [x8, #24]
     ed0:	ldur	x8, [x29, #-16]
     ed4:	adrp	x9, 1000 <dl_load@@Base+0x5bc>
     ed8:	add	x9, x9, #0x48
     edc:	str	x9, [x8, #40]
     ee0:	mov	w10, #0x1                   	// #1
     ee4:	stur	w10, [x29, #-4]
     ee8:	ldur	w0, [x29, #-4]
     eec:	ldp	x29, x30, [sp, #112]
     ef0:	add	sp, sp, #0x80
     ef4:	ret
     ef8:	sub	sp, sp, #0x80
     efc:	stp	x29, x30, [sp, #112]
     f00:	add	x29, sp, #0x70
     f04:	stur	x0, [x29, #-16]
     f08:	stur	x1, [x29, #-24]
     f0c:	stur	x2, [x29, #-32]
     f10:	stur	x3, [x29, #-40]
     f14:	stur	x4, [x29, #-48]
     f18:	str	x5, [sp, #56]
     f1c:	ldur	x8, [x29, #-16]
     f20:	cbz	x8, f38 <dl_load@@Base+0x4f4>
     f24:	ldur	x8, [x29, #-24]
     f28:	cbz	x8, f38 <dl_load@@Base+0x4f4>
     f2c:	ldur	x8, [x29, #-24]
     f30:	ldr	x8, [x8, #16]
     f34:	cbnz	x8, f44 <dl_load@@Base+0x500>
     f38:	mov	w8, #0xffffffff            	// #-1
     f3c:	stur	w8, [x29, #-4]
     f40:	b	1038 <dl_load@@Base+0x5f4>
     f44:	ldur	x8, [x29, #-24]
     f48:	ldr	x8, [x8, #16]
     f4c:	str	x8, [sp, #24]
     f50:	ldr	x8, [sp, #24]
     f54:	ldr	x8, [x8]
     f58:	str	x8, [sp, #48]
     f5c:	bl	930 <__errno_location@plt>
     f60:	str	wzr, [x0]
     f64:	ldr	x0, [sp, #48]
     f68:	bl	8d0 <readdir@plt>
     f6c:	str	x0, [sp, #40]
     f70:	ldr	x8, [sp, #40]
     f74:	cbnz	x8, f94 <dl_load@@Base+0x550>
     f78:	bl	930 <__errno_location@plt>
     f7c:	ldr	w8, [x0]
     f80:	ldur	x9, [x29, #-32]
     f84:	str	w8, [x9]
     f88:	mov	w8, #0xffffffff            	// #-1
     f8c:	stur	w8, [x29, #-4]
     f90:	b	1038 <dl_load@@Base+0x5f4>
     f94:	ldr	x0, [sp, #40]
     f98:	ldur	x8, [x29, #-24]
     f9c:	ldr	x1, [x8]
     fa0:	bl	10d8 <dl_load@@Base+0x694>
     fa4:	str	x0, [sp, #8]
     fa8:	ldr	x8, [sp, #24]
     fac:	ldr	x0, [x8, #8]
     fb0:	ldr	x2, [sp, #8]
     fb4:	ldr	x8, [sp, #40]
     fb8:	add	x3, x8, #0x13
     fbc:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     fc0:	add	x1, x1, #0x46b
     fc4:	bl	8b0 <sprintf@plt>
     fc8:	str	w0, [sp, #36]
     fcc:	ldr	x0, [sp, #40]
     fd0:	ldur	x8, [x29, #-24]
     fd4:	ldr	x1, [x8]
     fd8:	bl	10f4 <dl_load@@Base+0x6b0>
     fdc:	str	x0, [sp, #16]
     fe0:	ldr	x8, [sp, #24]
     fe4:	ldr	x8, [x8, #8]
     fe8:	ldrsw	x9, [sp, #36]
     fec:	add	x0, x8, x9
     ff0:	ldr	x2, [sp, #16]
     ff4:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     ff8:	add	x1, x1, #0x46f
     ffc:	bl	8b0 <sprintf@plt>
    1000:	ldr	w10, [sp, #36]
    1004:	add	w10, w10, w0
    1008:	str	w10, [sp, #36]
    100c:	ldr	x8, [sp, #24]
    1010:	ldr	x8, [x8, #8]
    1014:	ldur	x9, [x29, #-16]
    1018:	str	x8, [x9]
    101c:	ldur	x8, [x29, #-40]
    1020:	mov	x9, xzr
    1024:	str	x9, [x8]
    1028:	ldur	x8, [x29, #-48]
    102c:	str	xzr, [x8]
    1030:	ldr	w10, [sp, #36]
    1034:	stur	w10, [x29, #-4]
    1038:	ldur	w0, [x29, #-4]
    103c:	ldp	x29, x30, [sp, #112]
    1040:	add	sp, sp, #0x80
    1044:	ret
    1048:	sub	sp, sp, #0x30
    104c:	stp	x29, x30, [sp, #32]
    1050:	add	x29, sp, #0x20
    1054:	stur	x0, [x29, #-8]
    1058:	ldur	x8, [x29, #-8]
    105c:	cbz	x8, 106c <dl_load@@Base+0x628>
    1060:	ldur	x8, [x29, #-8]
    1064:	ldr	x8, [x8, #16]
    1068:	cbnz	x8, 1070 <dl_load@@Base+0x62c>
    106c:	b	10cc <dl_load@@Base+0x688>
    1070:	ldur	x8, [x29, #-8]
    1074:	ldr	x8, [x8, #16]
    1078:	str	x8, [sp, #16]
    107c:	ldr	x8, [sp, #16]
    1080:	ldr	x0, [x8]
    1084:	bl	8e0 <closedir@plt>
    1088:	adrp	x8, 12000 <dl_load@@Base+0x115bc>
    108c:	add	x8, x8, #0xb0
    1090:	ldr	x9, [x8]
    1094:	ldr	x9, [x9, #304]
    1098:	ldr	x10, [sp, #16]
    109c:	ldr	x10, [x10, #8]
    10a0:	mov	x0, x10
    10a4:	str	x8, [sp, #8]
    10a8:	blr	x9
    10ac:	ldr	x8, [sp, #8]
    10b0:	ldr	x9, [x8]
    10b4:	ldr	x9, [x9, #304]
    10b8:	ldr	x0, [sp, #16]
    10bc:	blr	x9
    10c0:	ldur	x8, [x29, #-8]
    10c4:	mov	w11, #0xffffffff            	// #-1
    10c8:	str	w11, [x8, #8]
    10cc:	ldp	x29, x30, [sp, #32]
    10d0:	add	sp, sp, #0x30
    10d4:	ret
    10d8:	sub	sp, sp, #0x10
    10dc:	str	x0, [sp, #8]
    10e0:	str	x1, [sp]
    10e4:	ldr	x8, [sp, #8]
    10e8:	ldr	x0, [x8]
    10ec:	add	sp, sp, #0x10
    10f0:	ret
    10f4:	stp	x29, x30, [sp, #-32]!
    10f8:	str	x28, [sp, #16]
    10fc:	mov	x29, sp
    1100:	sub	sp, sp, #0x1, lsl #12
    1104:	sub	sp, sp, #0xb0
    1108:	stur	x0, [x29, #-16]
    110c:	stur	x1, [x29, #-24]
    1110:	ldur	x8, [x29, #-16]
    1114:	ldrb	w9, [x8, #18]
    1118:	subs	w9, w9, #0x0
    111c:	mov	w8, w9
    1120:	ubfx	x8, x8, #0, #32
    1124:	cmp	x8, #0xc
    1128:	str	x8, [sp, #16]
    112c:	b.hi	11b8 <dl_load@@Base+0x774>  // b.pmore
    1130:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    1134:	add	x8, x8, #0x330
    1138:	ldr	x11, [sp, #16]
    113c:	ldrsw	x10, [x8, x11, lsl #2]
    1140:	add	x9, x8, x10
    1144:	br	x9
    1148:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    114c:	add	x8, x8, #0x473
    1150:	stur	x8, [x29, #-8]
    1154:	b	12f4 <dl_load@@Base+0x8b0>
    1158:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    115c:	add	x8, x8, #0x475
    1160:	stur	x8, [x29, #-8]
    1164:	b	12f4 <dl_load@@Base+0x8b0>
    1168:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    116c:	add	x8, x8, #0x3fd
    1170:	stur	x8, [x29, #-8]
    1174:	b	12f4 <dl_load@@Base+0x8b0>
    1178:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    117c:	add	x8, x8, #0x477
    1180:	stur	x8, [x29, #-8]
    1184:	b	12f4 <dl_load@@Base+0x8b0>
    1188:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    118c:	add	x8, x8, #0x479
    1190:	stur	x8, [x29, #-8]
    1194:	b	12f4 <dl_load@@Base+0x8b0>
    1198:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    119c:	add	x8, x8, #0x469
    11a0:	stur	x8, [x29, #-8]
    11a4:	b	12f4 <dl_load@@Base+0x8b0>
    11a8:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    11ac:	add	x8, x8, #0x437
    11b0:	stur	x8, [x29, #-8]
    11b4:	b	12f4 <dl_load@@Base+0x8b0>
    11b8:	ldur	x1, [x29, #-24]
    11bc:	add	x8, sp, #0x98
    11c0:	mov	x0, x8
    11c4:	str	x8, [sp, #8]
    11c8:	bl	920 <strcpy@plt>
    11cc:	ldr	x8, [sp, #8]
    11d0:	mov	x0, x8
    11d4:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
    11d8:	add	x1, x1, #0x47b
    11dc:	bl	8c0 <strcat@plt>
    11e0:	ldur	x8, [x29, #-16]
    11e4:	add	x1, x8, #0x13
    11e8:	ldr	x8, [sp, #8]
    11ec:	mov	x0, x8
    11f0:	bl	8c0 <strcat@plt>
    11f4:	ldr	x8, [sp, #8]
    11f8:	mov	x0, x8
    11fc:	add	x1, sp, #0x18
    1200:	bl	1310 <dl_load@@Base+0x8cc>
    1204:	cbnz	w0, 12e8 <dl_load@@Base+0x8a4>
    1208:	ldr	w8, [sp, #40]
    120c:	and	w8, w8, #0xf000
    1210:	cmp	w8, #0x6, lsl #12
    1214:	b.ne	1228 <dl_load@@Base+0x7e4>  // b.any
    1218:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    121c:	add	x8, x8, #0x473
    1220:	stur	x8, [x29, #-8]
    1224:	b	12f4 <dl_load@@Base+0x8b0>
    1228:	ldr	w8, [sp, #40]
    122c:	and	w8, w8, #0xf000
    1230:	cmp	w8, #0x2, lsl #12
    1234:	b.ne	1248 <dl_load@@Base+0x804>  // b.any
    1238:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    123c:	add	x8, x8, #0x475
    1240:	stur	x8, [x29, #-8]
    1244:	b	12f4 <dl_load@@Base+0x8b0>
    1248:	ldr	w8, [sp, #40]
    124c:	and	w8, w8, #0xf000
    1250:	cmp	w8, #0x4, lsl #12
    1254:	b.ne	1268 <dl_load@@Base+0x824>  // b.any
    1258:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    125c:	add	x8, x8, #0x3fd
    1260:	stur	x8, [x29, #-8]
    1264:	b	12f4 <dl_load@@Base+0x8b0>
    1268:	ldr	w8, [sp, #40]
    126c:	and	w8, w8, #0xf000
    1270:	cmp	w8, #0x1, lsl #12
    1274:	b.ne	1288 <dl_load@@Base+0x844>  // b.any
    1278:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    127c:	add	x8, x8, #0x477
    1280:	stur	x8, [x29, #-8]
    1284:	b	12f4 <dl_load@@Base+0x8b0>
    1288:	ldr	w8, [sp, #40]
    128c:	and	w8, w8, #0xf000
    1290:	cmp	w8, #0x8, lsl #12
    1294:	b.ne	12a8 <dl_load@@Base+0x864>  // b.any
    1298:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    129c:	add	x8, x8, #0x469
    12a0:	stur	x8, [x29, #-8]
    12a4:	b	12f4 <dl_load@@Base+0x8b0>
    12a8:	ldr	w8, [sp, #40]
    12ac:	and	w8, w8, #0xf000
    12b0:	cmp	w8, #0xa, lsl #12
    12b4:	b.ne	12c8 <dl_load@@Base+0x884>  // b.any
    12b8:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    12bc:	add	x8, x8, #0x479
    12c0:	stur	x8, [x29, #-8]
    12c4:	b	12f4 <dl_load@@Base+0x8b0>
    12c8:	ldr	w8, [sp, #40]
    12cc:	and	w8, w8, #0xf000
    12d0:	cmp	w8, #0xc, lsl #12
    12d4:	b.ne	12e8 <dl_load@@Base+0x8a4>  // b.any
    12d8:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    12dc:	add	x8, x8, #0x437
    12e0:	stur	x8, [x29, #-8]
    12e4:	b	12f4 <dl_load@@Base+0x8b0>
    12e8:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
    12ec:	add	x8, x8, #0x47d
    12f0:	stur	x8, [x29, #-8]
    12f4:	ldur	x0, [x29, #-8]
    12f8:	add	sp, sp, #0x1, lsl #12
    12fc:	add	sp, sp, #0xb0
    1300:	ldr	x28, [sp, #16]
    1304:	ldp	x29, x30, [sp], #32
    1308:	ret
    130c:	nop
    1310:	mov	x2, x1
    1314:	mov	x1, x0
    1318:	mov	w0, #0x0                   	// #0
    131c:	b	940 <__xstat@plt>

Disassembly of section .fini:

0000000000001320 <.fini>:
    1320:	stp	x29, x30, [sp, #-16]!
    1324:	mov	x29, sp
    1328:	ldp	x29, x30, [sp], #16
    132c:	ret
