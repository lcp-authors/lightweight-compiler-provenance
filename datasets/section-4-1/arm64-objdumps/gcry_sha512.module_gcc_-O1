
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_sha512.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <sha512_init>:
   0:	mov	x1, #0xc908                	// #51464
   4:	movk	x1, #0xf3bc, lsl #16
   8:	movk	x1, #0xe667, lsl #32
   c:	movk	x1, #0x6a09, lsl #48
  10:	str	x1, [x0]
  14:	mov	x1, #0xa73b                	// #42811
  18:	movk	x1, #0x84ca, lsl #16
  1c:	movk	x1, #0xae85, lsl #32
  20:	movk	x1, #0xbb67, lsl #48
  24:	str	x1, [x0, #8]
  28:	mov	x1, #0xf82b                	// #63531
  2c:	movk	x1, #0xfe94, lsl #16
  30:	movk	x1, #0xf372, lsl #32
  34:	movk	x1, #0x3c6e, lsl #48
  38:	str	x1, [x0, #16]
  3c:	mov	x1, #0x36f1                	// #14065
  40:	movk	x1, #0x5f1d, lsl #16
  44:	movk	x1, #0xf53a, lsl #32
  48:	movk	x1, #0xa54f, lsl #48
  4c:	str	x1, [x0, #24]
  50:	mov	x1, #0x82d1                	// #33489
  54:	movk	x1, #0xade6, lsl #16
  58:	movk	x1, #0x527f, lsl #32
  5c:	movk	x1, #0x510e, lsl #48
  60:	str	x1, [x0, #32]
  64:	mov	x1, #0x6c1f                	// #27679
  68:	movk	x1, #0x2b3e, lsl #16
  6c:	movk	x1, #0x688c, lsl #32
  70:	movk	x1, #0x9b05, lsl #48
  74:	str	x1, [x0, #40]
  78:	mov	x1, #0xbd6b                	// #48491
  7c:	movk	x1, #0xfb41, lsl #16
  80:	movk	x1, #0xd9ab, lsl #32
  84:	movk	x1, #0x1f83, lsl #48
  88:	str	x1, [x0, #48]
  8c:	mov	x1, #0x2179                	// #8569
  90:	movk	x1, #0x137e, lsl #16
  94:	movk	x1, #0xcd19, lsl #32
  98:	movk	x1, #0x5be0, lsl #48
  9c:	str	x1, [x0, #56]
  a0:	str	xzr, [x0, #64]
  a4:	str	wzr, [x0, #200]
  a8:	ret

00000000000000ac <sha384_init>:
  ac:	mov	x1, #0x9ed8                	// #40664
  b0:	movk	x1, #0xc105, lsl #16
  b4:	movk	x1, #0x9d5d, lsl #32
  b8:	movk	x1, #0xcbbb, lsl #48
  bc:	str	x1, [x0]
  c0:	mov	x1, #0xd507                	// #54535
  c4:	movk	x1, #0x367c, lsl #16
  c8:	movk	x1, #0x292a, lsl #32
  cc:	movk	x1, #0x629a, lsl #48
  d0:	str	x1, [x0, #8]
  d4:	mov	x1, #0xdd17                	// #56599
  d8:	movk	x1, #0x3070, lsl #16
  dc:	movk	x1, #0x15a, lsl #32
  e0:	movk	x1, #0x9159, lsl #48
  e4:	str	x1, [x0, #16]
  e8:	mov	x1, #0x5939                	// #22841
  ec:	movk	x1, #0xf70e, lsl #16
  f0:	movk	x1, #0xecd8, lsl #32
  f4:	movk	x1, #0x152f, lsl #48
  f8:	str	x1, [x0, #24]
  fc:	mov	x1, #0xb31                 	// #2865
 100:	movk	x1, #0xffc0, lsl #16
 104:	movk	x1, #0x2667, lsl #32
 108:	movk	x1, #0x6733, lsl #48
 10c:	str	x1, [x0, #32]
 110:	mov	x1, #0x1511                	// #5393
 114:	movk	x1, #0x6858, lsl #16
 118:	movk	x1, #0x4a87, lsl #32
 11c:	movk	x1, #0x8eb4, lsl #48
 120:	str	x1, [x0, #40]
 124:	mov	x1, #0x8fa7                	// #36775
 128:	movk	x1, #0x64f9, lsl #16
 12c:	movk	x1, #0x2e0d, lsl #32
 130:	movk	x1, #0xdb0c, lsl #48
 134:	str	x1, [x0, #48]
 138:	mov	x1, #0x4fa4                	// #20388
 13c:	movk	x1, #0xbefa, lsl #16
 140:	movk	x1, #0x481d, lsl #32
 144:	movk	x1, #0x47b5, lsl #48
 148:	str	x1, [x0, #56]
 14c:	str	xzr, [x0, #64]
 150:	str	wzr, [x0, #200]
 154:	ret

0000000000000158 <transform>:
 158:	sub	sp, sp, #0x2b0
 15c:	stp	x29, x30, [sp]
 160:	mov	x29, sp
 164:	stp	x19, x20, [sp, #16]
 168:	str	x21, [sp, #32]
 16c:	ldr	x14, [x0]
 170:	ldr	x13, [x0, #8]
 174:	ldr	x12, [x0, #16]
 178:	ldr	x11, [x0, #24]
 17c:	ldr	x10, [x0, #32]
 180:	ldr	x9, [x0, #40]
 184:	ldr	x8, [x0, #48]
 188:	ldr	x7, [x0, #56]
 18c:	add	x4, x1, #0x80
 190:	add	x2, sp, #0x30
 194:	ldrb	w3, [x1]
 198:	strb	w3, [x2, #7]
 19c:	ldrb	w3, [x1, #1]
 1a0:	strb	w3, [x2, #6]
 1a4:	ldrb	w3, [x1, #2]
 1a8:	strb	w3, [x2, #5]
 1ac:	ldrb	w3, [x1, #3]
 1b0:	strb	w3, [x2, #4]
 1b4:	ldrb	w3, [x1, #4]
 1b8:	strb	w3, [x2, #3]
 1bc:	ldrb	w3, [x1, #5]
 1c0:	strb	w3, [x2, #2]
 1c4:	ldrb	w3, [x1, #6]
 1c8:	strb	w3, [x2, #1]
 1cc:	add	x1, x1, #0x8
 1d0:	ldurb	w3, [x1, #-1]
 1d4:	strb	w3, [x2], #8
 1d8:	cmp	x4, x1
 1dc:	b.ne	194 <transform+0x3c>  // b.any
 1e0:	add	x6, sp, #0x30
 1e4:	add	x5, x6, #0x200
 1e8:	mov	x2, x6
 1ec:	ldr	x1, [x2, #112]
 1f0:	ldr	x3, [x2, #8]
 1f4:	ror	x4, x1, #61
 1f8:	eor	x4, x4, x1, ror #19
 1fc:	eor	x1, x4, x1, lsr #6
 200:	ror	x4, x3, #8
 204:	eor	x4, x4, x3, ror #1
 208:	eor	x3, x4, x3, lsr #7
 20c:	add	x1, x1, x3
 210:	ldr	x3, [x2, #72]
 214:	ldr	x4, [x2]
 218:	add	x3, x3, x4
 21c:	add	x1, x1, x3
 220:	str	x1, [x2, #128]
 224:	add	x2, x2, #0x8
 228:	cmp	x2, x5
 22c:	b.ne	1ec <transform+0x94>  // b.any
 230:	adrp	x1, 0 <sha512_init>
 234:	ldr	x30, [x1]
 238:	add	x19, x6, #0x280
 23c:	mov	x5, x7
 240:	mov	x4, x8
 244:	mov	x1, x9
 248:	mov	x15, x10
 24c:	mov	x16, x11
 250:	mov	x17, x12
 254:	mov	x2, x13
 258:	mov	x3, x14
 25c:	ror	x18, x15, #18
 260:	eor	x18, x18, x15, ror #14
 264:	eor	x18, x18, x15, ror #41
 268:	bic	x20, x4, x15
 26c:	and	x21, x15, x1
 270:	eor	x20, x20, x21
 274:	add	x18, x18, x20
 278:	ldr	x20, [x30]
 27c:	ldr	x21, [x6]
 280:	add	x20, x20, x21
 284:	add	x18, x18, x20
 288:	add	x5, x18, x5
 28c:	add	x20, x5, x16
 290:	ror	x16, x3, #34
 294:	eor	x16, x16, x3, ror #28
 298:	eor	x16, x16, x3, ror #39
 29c:	eor	x18, x2, x17
 2a0:	and	x18, x18, x3
 2a4:	and	x21, x2, x17
 2a8:	eor	x18, x18, x21
 2ac:	add	x16, x16, x18
 2b0:	add	x5, x16, x5
 2b4:	ror	x16, x20, #18
 2b8:	eor	x16, x16, x20, ror #14
 2bc:	eor	x16, x16, x20, ror #41
 2c0:	bic	x18, x1, x20
 2c4:	and	x21, x20, x15
 2c8:	eor	x18, x18, x21
 2cc:	add	x16, x16, x18
 2d0:	ldr	x18, [x30, #8]
 2d4:	ldr	x21, [x6, #8]
 2d8:	add	x18, x18, x21
 2dc:	add	x16, x16, x18
 2e0:	add	x4, x16, x4
 2e4:	add	x17, x4, x17
 2e8:	ror	x16, x5, #34
 2ec:	eor	x16, x16, x5, ror #28
 2f0:	eor	x16, x16, x5, ror #39
 2f4:	eor	x18, x3, x2
 2f8:	and	x18, x18, x5
 2fc:	and	x21, x3, x2
 300:	eor	x18, x18, x21
 304:	add	x16, x16, x18
 308:	add	x4, x16, x4
 30c:	ror	x16, x17, #18
 310:	eor	x16, x16, x17, ror #14
 314:	eor	x16, x16, x17, ror #41
 318:	bic	x18, x15, x17
 31c:	and	x21, x20, x17
 320:	eor	x18, x18, x21
 324:	add	x16, x16, x18
 328:	ldr	x18, [x30, #16]
 32c:	ldr	x21, [x6, #16]
 330:	add	x18, x18, x21
 334:	add	x16, x16, x18
 338:	add	x1, x16, x1
 33c:	add	x2, x1, x2
 340:	ror	x16, x4, #34
 344:	eor	x16, x16, x4, ror #28
 348:	eor	x16, x16, x4, ror #39
 34c:	eor	x18, x5, x3
 350:	and	x18, x18, x4
 354:	and	x21, x5, x3
 358:	eor	x18, x18, x21
 35c:	add	x16, x16, x18
 360:	add	x1, x16, x1
 364:	ror	x16, x2, #18
 368:	eor	x16, x16, x2, ror #14
 36c:	eor	x16, x16, x2, ror #41
 370:	bic	x18, x20, x2
 374:	and	x21, x17, x2
 378:	eor	x18, x18, x21
 37c:	add	x16, x16, x18
 380:	ldr	x18, [x30, #24]
 384:	ldr	x21, [x6, #24]
 388:	add	x18, x18, x21
 38c:	add	x16, x16, x18
 390:	add	x16, x16, x15
 394:	add	x3, x16, x3
 398:	ror	x15, x1, #34
 39c:	eor	x15, x15, x1, ror #28
 3a0:	eor	x15, x15, x1, ror #39
 3a4:	eor	x18, x5, x4
 3a8:	and	x18, x18, x1
 3ac:	and	x21, x5, x4
 3b0:	eor	x18, x18, x21
 3b4:	add	x15, x15, x18
 3b8:	add	x15, x15, x16
 3bc:	ror	x18, x3, #18
 3c0:	eor	x18, x18, x3, ror #14
 3c4:	eor	x18, x18, x3, ror #41
 3c8:	bic	x16, x17, x3
 3cc:	and	x21, x2, x3
 3d0:	eor	x16, x16, x21
 3d4:	add	x18, x18, x16
 3d8:	ldr	x16, [x30, #32]
 3dc:	ldr	x21, [x6, #32]
 3e0:	add	x16, x16, x21
 3e4:	add	x16, x18, x16
 3e8:	add	x16, x16, x20
 3ec:	add	x5, x5, x16
 3f0:	ror	x18, x15, #34
 3f4:	eor	x18, x18, x15, ror #28
 3f8:	eor	x18, x18, x15, ror #39
 3fc:	eor	x20, x4, x1
 400:	and	x20, x20, x15
 404:	and	x21, x4, x1
 408:	eor	x20, x20, x21
 40c:	add	x18, x18, x20
 410:	add	x16, x18, x16
 414:	ror	x18, x5, #18
 418:	eor	x18, x18, x5, ror #14
 41c:	eor	x18, x18, x5, ror #41
 420:	bic	x20, x2, x5
 424:	and	x21, x3, x5
 428:	eor	x20, x20, x21
 42c:	add	x18, x18, x20
 430:	ldr	x20, [x30, #40]
 434:	ldr	x21, [x6, #40]
 438:	add	x20, x20, x21
 43c:	add	x18, x18, x20
 440:	add	x18, x18, x17
 444:	add	x4, x4, x18
 448:	ror	x17, x16, #34
 44c:	eor	x17, x17, x16, ror #28
 450:	eor	x17, x17, x16, ror #39
 454:	eor	x20, x1, x15
 458:	and	x20, x20, x16
 45c:	and	x21, x1, x15
 460:	eor	x20, x20, x21
 464:	add	x17, x17, x20
 468:	add	x17, x17, x18
 46c:	ror	x18, x4, #18
 470:	eor	x18, x18, x4, ror #14
 474:	eor	x18, x18, x4, ror #41
 478:	bic	x20, x3, x4
 47c:	and	x21, x5, x4
 480:	eor	x20, x20, x21
 484:	add	x18, x18, x20
 488:	ldr	x20, [x30, #48]
 48c:	ldr	x21, [x6, #48]
 490:	add	x20, x20, x21
 494:	add	x18, x18, x20
 498:	add	x2, x18, x2
 49c:	add	x1, x1, x2
 4a0:	ror	x18, x17, #28
 4a4:	eor	x18, x18, x17, ror #34
 4a8:	eor	x18, x18, x17, ror #39
 4ac:	eor	x20, x15, x16
 4b0:	and	x20, x20, x17
 4b4:	and	x21, x15, x16
 4b8:	eor	x20, x20, x21
 4bc:	add	x18, x18, x20
 4c0:	add	x2, x18, x2
 4c4:	ror	x18, x1, #14
 4c8:	eor	x18, x18, x1, ror #18
 4cc:	eor	x18, x18, x1, ror #41
 4d0:	bic	x20, x5, x1
 4d4:	and	x21, x4, x1
 4d8:	eor	x20, x20, x21
 4dc:	add	x18, x18, x20
 4e0:	ldr	x20, [x30, #56]
 4e4:	ldr	x21, [x6, #56]
 4e8:	add	x20, x20, x21
 4ec:	add	x18, x18, x20
 4f0:	add	x3, x18, x3
 4f4:	add	x15, x15, x3
 4f8:	ror	x18, x2, #28
 4fc:	eor	x18, x18, x2, ror #34
 500:	eor	x18, x18, x2, ror #39
 504:	eor	x20, x16, x17
 508:	and	x20, x20, x2
 50c:	and	x21, x16, x17
 510:	eor	x20, x20, x21
 514:	add	x18, x18, x20
 518:	add	x3, x18, x3
 51c:	add	x30, x30, #0x40
 520:	add	x6, x6, #0x40
 524:	cmp	x6, x19
 528:	b.ne	25c <transform+0x104>  // b.any
 52c:	add	x3, x14, x3
 530:	str	x3, [x0]
 534:	add	x2, x13, x2
 538:	str	x2, [x0, #8]
 53c:	add	x12, x12, x17
 540:	str	x12, [x0, #16]
 544:	add	x11, x11, x16
 548:	str	x11, [x0, #24]
 54c:	add	x15, x10, x15
 550:	str	x15, [x0, #32]
 554:	add	x1, x9, x1
 558:	str	x1, [x0, #40]
 55c:	add	x4, x8, x4
 560:	str	x4, [x0, #48]
 564:	add	x5, x7, x5
 568:	str	x5, [x0, #56]
 56c:	ldp	x19, x20, [sp, #16]
 570:	ldr	x21, [sp, #32]
 574:	ldp	x29, x30, [sp]
 578:	add	sp, sp, #0x2b0
 57c:	ret
	...

0000000000000588 <sha512_read>:
 588:	add	x0, x0, #0x48
 58c:	ret

0000000000000590 <sha512_write>:
 590:	stp	x29, x30, [sp, #-48]!
 594:	mov	x29, sp
 598:	stp	x19, x20, [sp, #16]
 59c:	stp	x21, x22, [sp, #32]
 5a0:	mov	x19, x0
 5a4:	mov	x20, x1
 5a8:	mov	x21, x2
 5ac:	ldr	w0, [x0, #200]
 5b0:	cmp	w0, #0x80
 5b4:	b.eq	600 <sha512_write+0x70>  // b.none
 5b8:	cbz	x1, 6ac <sha512_write+0x11c>
 5bc:	cbz	w0, 628 <sha512_write+0x98>
 5c0:	cbz	x2, 5ec <sha512_write+0x5c>
 5c4:	ldr	w0, [x19, #200]
 5c8:	cmp	w0, #0x7f
 5cc:	b.gt	6bc <sha512_write+0x12c>
 5d0:	add	w1, w0, #0x1
 5d4:	str	w1, [x19, #200]
 5d8:	ldrb	w1, [x20], #1
 5dc:	add	x0, x19, w0, sxtw
 5e0:	strb	w1, [x0, #72]
 5e4:	subs	x21, x21, #0x1
 5e8:	b.ne	5c4 <sha512_write+0x34>  // b.any
 5ec:	mov	x2, #0x0                   	// #0
 5f0:	mov	x1, #0x0                   	// #0
 5f4:	mov	x0, x19
 5f8:	bl	590 <sha512_write>
 5fc:	b	6ac <sha512_write+0x11c>
 600:	add	x1, x19, #0x48
 604:	mov	x0, x19
 608:	bl	158 <transform>
 60c:	mov	w0, #0x300                 	// #768
 610:	bl	0 <_gcry_burn_stack>
 614:	str	wzr, [x19, #200]
 618:	ldr	x0, [x19, #64]
 61c:	add	x0, x0, #0x1
 620:	str	x0, [x19, #64]
 624:	cbz	x20, 6ac <sha512_write+0x11c>
 628:	mov	x22, x20
 62c:	cmp	x21, #0x7f
 630:	b.ls	670 <sha512_write+0xe0>  // b.plast
 634:	sub	x22, x21, #0x80
 638:	and	x22, x22, #0xffffffffffffff80
 63c:	add	x22, x22, #0x80
 640:	add	x22, x20, x22
 644:	mov	x1, x20
 648:	mov	x0, x19
 64c:	bl	158 <transform>
 650:	str	wzr, [x19, #200]
 654:	ldr	x0, [x19, #64]
 658:	add	x0, x0, #0x1
 65c:	str	x0, [x19, #64]
 660:	add	x20, x20, #0x80
 664:	cmp	x20, x22
 668:	b.ne	644 <sha512_write+0xb4>  // b.any
 66c:	and	x21, x21, #0x7f
 670:	mov	w0, #0x300                 	// #768
 674:	bl	0 <_gcry_burn_stack>
 678:	cbz	x21, 6ac <sha512_write+0x11c>
 67c:	mov	x1, x22
 680:	ldr	w0, [x19, #200]
 684:	cmp	w0, #0x7f
 688:	b.gt	6ac <sha512_write+0x11c>
 68c:	add	w2, w0, #0x1
 690:	str	w2, [x19, #200]
 694:	ldrb	w2, [x1], #1
 698:	add	x0, x19, w0, sxtw
 69c:	strb	w2, [x0, #72]
 6a0:	sub	x0, x21, x1
 6a4:	cmn	x22, x0
 6a8:	b.ne	680 <sha512_write+0xf0>  // b.any
 6ac:	ldp	x19, x20, [sp, #16]
 6b0:	ldp	x21, x22, [sp, #32]
 6b4:	ldp	x29, x30, [sp], #48
 6b8:	ret
 6bc:	mov	x2, #0x0                   	// #0
 6c0:	mov	x1, #0x0                   	// #0
 6c4:	mov	x0, x19
 6c8:	bl	590 <sha512_write>
 6cc:	cbz	x21, 6ac <sha512_write+0x11c>
 6d0:	cmp	x21, #0x7f
 6d4:	b.hi	634 <sha512_write+0xa4>  // b.pmore
 6d8:	mov	w0, #0x300                 	// #768
 6dc:	bl	0 <_gcry_burn_stack>
 6e0:	mov	x22, x20
 6e4:	b	67c <sha512_write+0xec>

00000000000006e8 <sha512_final>:
 6e8:	stp	x29, x30, [sp, #-48]!
 6ec:	mov	x29, sp
 6f0:	stp	x19, x20, [sp, #16]
 6f4:	str	x21, [sp, #32]
 6f8:	mov	x19, x0
 6fc:	mov	x2, #0x0                   	// #0
 700:	mov	x1, #0x0                   	// #0
 704:	bl	590 <sha512_write>
 708:	ldr	x0, [x19, #64]
 70c:	lsl	x2, x0, #7
 710:	ldr	w1, [x19, #200]
 714:	add	x21, x2, w1, sxtw
 718:	cmp	x2, x21
 71c:	cset	x2, hi  // hi = pmore
 720:	add	x0, x2, x0, lsr #57
 724:	lsl	x20, x21, #3
 728:	extr	x21, x0, x21, #61
 72c:	cmp	w1, #0x6f
 730:	b.gt	774 <sha512_final+0x8c>
 734:	add	w0, w1, #0x1
 738:	str	w0, [x19, #200]
 73c:	add	x1, x19, w1, sxtw
 740:	mov	w2, #0xffffff80            	// #-128
 744:	strb	w2, [x1, #72]
 748:	cmp	w0, #0x6f
 74c:	b.gt	7d0 <sha512_final+0xe8>
 750:	sxtw	x0, w0
 754:	add	x1, x19, #0x48
 758:	strb	wzr, [x1, x0]
 75c:	add	x0, x0, #0x1
 760:	cmp	w0, #0x6f
 764:	b.le	758 <sha512_final+0x70>
 768:	mov	w0, #0x70                  	// #112
 76c:	str	w0, [x19, #200]
 770:	b	7d0 <sha512_final+0xe8>
 774:	add	w0, w1, #0x1
 778:	str	w0, [x19, #200]
 77c:	add	x1, x19, w1, sxtw
 780:	mov	w2, #0xffffff80            	// #-128
 784:	strb	w2, [x1, #72]
 788:	cmp	w0, #0x7f
 78c:	b.gt	7b0 <sha512_final+0xc8>
 790:	sxtw	x0, w0
 794:	add	x1, x19, #0x48
 798:	strb	wzr, [x1, x0]
 79c:	add	x0, x0, #0x1
 7a0:	cmp	w0, #0x7f
 7a4:	b.le	798 <sha512_final+0xb0>
 7a8:	mov	w0, #0x80                  	// #128
 7ac:	str	w0, [x19, #200]
 7b0:	mov	x2, #0x0                   	// #0
 7b4:	mov	x1, #0x0                   	// #0
 7b8:	mov	x0, x19
 7bc:	bl	590 <sha512_write>
 7c0:	mov	x2, #0x70                  	// #112
 7c4:	mov	w1, #0x0                   	// #0
 7c8:	add	x0, x19, #0x48
 7cc:	bl	0 <grub_memset>
 7d0:	strb	wzr, [x19, #184]
 7d4:	strb	wzr, [x19, #185]
 7d8:	strb	wzr, [x19, #186]
 7dc:	strb	wzr, [x19, #187]
 7e0:	strb	wzr, [x19, #188]
 7e4:	strb	wzr, [x19, #189]
 7e8:	lsr	x0, x21, #8
 7ec:	strb	w0, [x19, #190]
 7f0:	strb	w21, [x19, #191]
 7f4:	lsr	x0, x20, #56
 7f8:	strb	w0, [x19, #192]
 7fc:	lsr	x0, x20, #48
 800:	strb	w0, [x19, #193]
 804:	lsr	x0, x20, #40
 808:	strb	w0, [x19, #194]
 80c:	lsr	x0, x20, #32
 810:	strb	w0, [x19, #195]
 814:	lsr	x0, x20, #24
 818:	strb	w0, [x19, #196]
 81c:	lsr	x0, x20, #16
 820:	strb	w0, [x19, #197]
 824:	lsr	x0, x20, #8
 828:	strb	w0, [x19, #198]
 82c:	strb	w20, [x19, #199]
 830:	add	x1, x19, #0x48
 834:	mov	x0, x19
 838:	bl	158 <transform>
 83c:	mov	w0, #0x300                 	// #768
 840:	bl	0 <_gcry_burn_stack>
 844:	ldr	x0, [x19]
 848:	lsr	x1, x0, #56
 84c:	strb	w1, [x19, #72]
 850:	lsr	x1, x0, #48
 854:	strb	w1, [x19, #73]
 858:	lsr	x1, x0, #40
 85c:	strb	w1, [x19, #74]
 860:	lsr	x1, x0, #32
 864:	strb	w1, [x19, #75]
 868:	lsr	x1, x0, #24
 86c:	strb	w1, [x19, #76]
 870:	lsr	x1, x0, #16
 874:	strb	w1, [x19, #77]
 878:	lsr	x1, x0, #8
 87c:	strb	w1, [x19, #78]
 880:	strb	w0, [x19, #79]
 884:	ldr	x0, [x19, #8]
 888:	lsr	x1, x0, #56
 88c:	strb	w1, [x19, #80]
 890:	lsr	x1, x0, #48
 894:	strb	w1, [x19, #81]
 898:	lsr	x1, x0, #40
 89c:	strb	w1, [x19, #82]
 8a0:	lsr	x1, x0, #32
 8a4:	strb	w1, [x19, #83]
 8a8:	lsr	x1, x0, #24
 8ac:	strb	w1, [x19, #84]
 8b0:	lsr	x1, x0, #16
 8b4:	strb	w1, [x19, #85]
 8b8:	lsr	x1, x0, #8
 8bc:	strb	w1, [x19, #86]
 8c0:	strb	w0, [x19, #87]
 8c4:	ldr	x0, [x19, #16]
 8c8:	lsr	x1, x0, #56
 8cc:	strb	w1, [x19, #88]
 8d0:	lsr	x1, x0, #48
 8d4:	strb	w1, [x19, #89]
 8d8:	lsr	x1, x0, #40
 8dc:	strb	w1, [x19, #90]
 8e0:	lsr	x1, x0, #32
 8e4:	strb	w1, [x19, #91]
 8e8:	lsr	x1, x0, #24
 8ec:	strb	w1, [x19, #92]
 8f0:	lsr	x1, x0, #16
 8f4:	strb	w1, [x19, #93]
 8f8:	lsr	x1, x0, #8
 8fc:	strb	w1, [x19, #94]
 900:	strb	w0, [x19, #95]
 904:	ldr	x0, [x19, #24]
 908:	lsr	x1, x0, #56
 90c:	strb	w1, [x19, #96]
 910:	lsr	x1, x0, #48
 914:	strb	w1, [x19, #97]
 918:	lsr	x1, x0, #40
 91c:	strb	w1, [x19, #98]
 920:	lsr	x1, x0, #32
 924:	strb	w1, [x19, #99]
 928:	lsr	x1, x0, #24
 92c:	strb	w1, [x19, #100]
 930:	lsr	x1, x0, #16
 934:	strb	w1, [x19, #101]
 938:	lsr	x1, x0, #8
 93c:	strb	w1, [x19, #102]
 940:	strb	w0, [x19, #103]
 944:	ldr	x0, [x19, #32]
 948:	lsr	x1, x0, #56
 94c:	strb	w1, [x19, #104]
 950:	lsr	x1, x0, #48
 954:	strb	w1, [x19, #105]
 958:	lsr	x1, x0, #40
 95c:	strb	w1, [x19, #106]
 960:	lsr	x1, x0, #32
 964:	strb	w1, [x19, #107]
 968:	lsr	x1, x0, #24
 96c:	strb	w1, [x19, #108]
 970:	lsr	x1, x0, #16
 974:	strb	w1, [x19, #109]
 978:	lsr	x1, x0, #8
 97c:	strb	w1, [x19, #110]
 980:	strb	w0, [x19, #111]
 984:	ldr	x0, [x19, #40]
 988:	lsr	x1, x0, #56
 98c:	strb	w1, [x19, #112]
 990:	lsr	x1, x0, #48
 994:	strb	w1, [x19, #113]
 998:	lsr	x1, x0, #40
 99c:	strb	w1, [x19, #114]
 9a0:	lsr	x1, x0, #32
 9a4:	strb	w1, [x19, #115]
 9a8:	lsr	x1, x0, #24
 9ac:	strb	w1, [x19, #116]
 9b0:	lsr	x1, x0, #16
 9b4:	strb	w1, [x19, #117]
 9b8:	lsr	x1, x0, #8
 9bc:	strb	w1, [x19, #118]
 9c0:	strb	w0, [x19, #119]
 9c4:	ldr	x0, [x19, #48]
 9c8:	lsr	x1, x0, #56
 9cc:	strb	w1, [x19, #120]
 9d0:	lsr	x1, x0, #48
 9d4:	strb	w1, [x19, #121]
 9d8:	lsr	x1, x0, #40
 9dc:	strb	w1, [x19, #122]
 9e0:	lsr	x1, x0, #32
 9e4:	strb	w1, [x19, #123]
 9e8:	lsr	x1, x0, #24
 9ec:	strb	w1, [x19, #124]
 9f0:	lsr	x1, x0, #16
 9f4:	strb	w1, [x19, #125]
 9f8:	lsr	x1, x0, #8
 9fc:	strb	w1, [x19, #126]
 a00:	strb	w0, [x19, #127]
 a04:	ldr	x0, [x19, #56]
 a08:	lsr	x1, x0, #56
 a0c:	strb	w1, [x19, #128]
 a10:	lsr	x1, x0, #48
 a14:	strb	w1, [x19, #129]
 a18:	lsr	x1, x0, #40
 a1c:	strb	w1, [x19, #130]
 a20:	lsr	x1, x0, #32
 a24:	strb	w1, [x19, #131]
 a28:	lsr	x1, x0, #24
 a2c:	strb	w1, [x19, #132]
 a30:	lsr	x1, x0, #16
 a34:	strb	w1, [x19, #133]
 a38:	lsr	x1, x0, #8
 a3c:	strb	w1, [x19, #134]
 a40:	strb	w0, [x19, #135]
 a44:	ldp	x19, x20, [sp, #16]
 a48:	ldr	x21, [sp, #32]
 a4c:	ldp	x29, x30, [sp], #48
 a50:	ret

0000000000000a54 <grub_mod_init>:
 a54:	stp	x29, x30, [sp, #-32]!
 a58:	mov	x29, sp
 a5c:	str	x19, [sp, #16]
 a60:	adrp	x0, 0 <sha512_init>
 a64:	ldr	x19, [x0]
 a68:	mov	x0, x19
 a6c:	bl	0 <grub_md_register>
 a70:	add	x0, x19, #0x60
 a74:	bl	0 <grub_md_register>
 a78:	ldr	x19, [sp, #16]
 a7c:	ldp	x29, x30, [sp], #32
 a80:	ret
 a84:	nop
	...

0000000000000a90 <grub_mod_fini>:
 a90:	stp	x29, x30, [sp, #-32]!
 a94:	mov	x29, sp
 a98:	str	x19, [sp, #16]
 a9c:	adrp	x0, 0 <sha512_init>
 aa0:	ldr	x19, [x0]
 aa4:	mov	x0, x19
 aa8:	bl	0 <grub_md_unregister>
 aac:	add	x0, x19, #0x60
 ab0:	bl	0 <grub_md_unregister>
 ab4:	ldr	x19, [sp, #16]
 ab8:	ldp	x29, x30, [sp], #32
 abc:	ret
	...
