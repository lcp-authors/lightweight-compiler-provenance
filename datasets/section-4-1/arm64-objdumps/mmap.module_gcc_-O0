
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mmap.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_efi_mmap_iterate>:
       0:	stp	x29, x30, [sp, #-96]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	x1, [sp, #32]
      10:	str	w2, [sp, #28]
      14:	str	xzr, [sp, #72]
      18:	str	xzr, [sp, #80]
      1c:	str	xzr, [sp, #64]
      20:	str	xzr, [sp, #56]
      24:	str	wzr, [sp, #52]
      28:	add	x3, sp, #0x34
      2c:	add	x2, sp, #0x38
      30:	add	x1, sp, #0x40
      34:	add	x0, sp, #0x48
      38:	mov	x4, x3
      3c:	mov	x3, x2
      40:	mov	x2, x1
      44:	ldr	x1, [sp, #80]
      48:	bl	0 <grub_efi_get_memory_map>
      4c:	cmp	w0, #0x0
      50:	b.ge	68 <grub_efi_mmap_iterate+0x68>  // b.tcont
      54:	adrp	x0, 0 <grub_efi_mmap_iterate>
      58:	add	x0, x0, #0x0
      5c:	ldr	x0, [x0]
      60:	ldr	w0, [x0]
      64:	b	448 <grub_efi_mmap_iterate+0x448>
      68:	ldr	x0, [sp, #72]
      6c:	bl	0 <grub_malloc>
      70:	str	x0, [sp, #80]
      74:	ldr	x0, [sp, #80]
      78:	cmp	x0, #0x0
      7c:	b.ne	94 <grub_efi_mmap_iterate+0x94>  // b.any
      80:	adrp	x0, 0 <grub_efi_mmap_iterate>
      84:	add	x0, x0, #0x0
      88:	ldr	x0, [x0]
      8c:	ldr	w0, [x0]
      90:	b	448 <grub_efi_mmap_iterate+0x448>
      94:	add	x3, sp, #0x34
      98:	add	x2, sp, #0x38
      9c:	add	x1, sp, #0x40
      a0:	add	x0, sp, #0x48
      a4:	mov	x4, x3
      a8:	mov	x3, x2
      ac:	mov	x2, x1
      b0:	ldr	x1, [sp, #80]
      b4:	bl	0 <grub_efi_get_memory_map>
      b8:	cmp	w0, #0x0
      bc:	b.gt	dc <grub_efi_mmap_iterate+0xdc>
      c0:	ldr	x0, [sp, #80]
      c4:	bl	0 <grub_free>
      c8:	adrp	x0, 0 <grub_efi_mmap_iterate>
      cc:	add	x0, x0, #0x0
      d0:	ldr	x0, [x0]
      d4:	ldr	w0, [x0]
      d8:	b	448 <grub_efi_mmap_iterate+0x448>
      dc:	ldr	x0, [sp, #80]
      e0:	str	x0, [sp, #88]
      e4:	b	42c <grub_efi_mmap_iterate+0x42c>
      e8:	ldr	x0, [sp, #88]
      ec:	ldr	x2, [x0, #8]
      f0:	ldr	x0, [sp, #88]
      f4:	ldr	x1, [x0, #8]
      f8:	ldr	x0, [sp, #88]
      fc:	ldr	x0, [x0, #24]
     100:	lsl	x0, x0, #12
     104:	add	x1, x1, x0
     108:	ldr	x0, [sp, #88]
     10c:	ldr	w0, [x0]
     110:	mov	w6, w0
     114:	mov	x5, x1
     118:	mov	x4, x2
     11c:	adrp	x0, 0 <grub_efi_mmap_iterate>
     120:	add	x0, x0, #0x0
     124:	ldr	x3, [x0]
     128:	adrp	x0, 0 <grub_efi_mmap_iterate>
     12c:	add	x0, x0, #0x0
     130:	ldr	x2, [x0]
     134:	mov	w1, #0x3f                  	// #63
     138:	adrp	x0, 0 <grub_efi_mmap_iterate>
     13c:	add	x0, x0, #0x0
     140:	ldr	x0, [x0]
     144:	bl	0 <grub_real_dprintf>
     148:	ldr	x0, [sp, #88]
     14c:	ldr	w0, [x0]
     150:	cmp	w0, #0xe
     154:	b.eq	3a0 <grub_efi_mmap_iterate+0x3a0>  // b.none
     158:	cmp	w0, #0xe
     15c:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     160:	cmp	w0, #0xd
     164:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     168:	cmp	w0, #0xb
     16c:	b.cs	2e0 <grub_efi_mmap_iterate+0x2e0>  // b.hs, b.nlast
     170:	cmp	w0, #0xa
     174:	b.eq	370 <grub_efi_mmap_iterate+0x370>  // b.none
     178:	cmp	w0, #0xa
     17c:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     180:	cmp	w0, #0x9
     184:	b.eq	340 <grub_efi_mmap_iterate+0x340>  // b.none
     188:	cmp	w0, #0x9
     18c:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     190:	cmp	w0, #0x8
     194:	b.eq	274 <grub_efi_mmap_iterate+0x274>  // b.none
     198:	cmp	w0, #0x8
     19c:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     1a0:	cmp	w0, #0x7
     1a4:	b.eq	310 <grub_efi_mmap_iterate+0x310>  // b.none
     1a8:	cmp	w0, #0x7
     1ac:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     1b0:	cmp	w0, #0x6
     1b4:	b.eq	2e0 <grub_efi_mmap_iterate+0x2e0>  // b.none
     1b8:	cmp	w0, #0x6
     1bc:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     1c0:	cmp	w0, #0x5
     1c4:	b.eq	244 <grub_efi_mmap_iterate+0x244>  // b.none
     1c8:	cmp	w0, #0x5
     1cc:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     1d0:	cmp	w0, #0x4
     1d4:	b.eq	2a4 <grub_efi_mmap_iterate+0x2a4>  // b.none
     1d8:	cmp	w0, #0x4
     1dc:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     1e0:	cmp	w0, #0x3
     1e4:	b.eq	208 <grub_efi_mmap_iterate+0x208>  // b.none
     1e8:	cmp	w0, #0x3
     1ec:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     1f0:	cmp	w0, #0x0
     1f4:	b.eq	2e0 <grub_efi_mmap_iterate+0x2e0>  // b.none
     1f8:	sub	w0, w0, #0x1
     1fc:	cmp	w0, #0x1
     200:	b.hi	3d0 <grub_efi_mmap_iterate+0x3d0>  // b.pmore
     204:	b	310 <grub_efi_mmap_iterate+0x310>
     208:	ldr	w0, [sp, #28]
     20c:	cmp	w0, #0x0
     210:	b.ne	244 <grub_efi_mmap_iterate+0x244>  // b.any
     214:	ldr	x0, [sp, #88]
     218:	ldr	x5, [x0, #8]
     21c:	ldr	x0, [sp, #88]
     220:	ldr	x0, [x0, #24]
     224:	lsl	x0, x0, #12
     228:	ldr	x4, [sp, #40]
     22c:	ldr	x3, [sp, #32]
     230:	mov	w2, #0x1                   	// #1
     234:	mov	x1, x0
     238:	mov	x0, x5
     23c:	blr	x4
     240:	b	41c <grub_efi_mmap_iterate+0x41c>
     244:	ldr	x0, [sp, #88]
     248:	ldr	x5, [x0, #8]
     24c:	ldr	x0, [sp, #88]
     250:	ldr	x0, [x0, #24]
     254:	lsl	x0, x0, #12
     258:	ldr	x4, [sp, #40]
     25c:	ldr	x3, [sp, #32]
     260:	mov	w2, #0x14                  	// #20
     264:	mov	x1, x0
     268:	mov	x0, x5
     26c:	blr	x4
     270:	b	41c <grub_efi_mmap_iterate+0x41c>
     274:	ldr	x0, [sp, #88]
     278:	ldr	x5, [x0, #8]
     27c:	ldr	x0, [sp, #88]
     280:	ldr	x0, [x0, #24]
     284:	lsl	x0, x0, #12
     288:	ldr	x4, [sp, #40]
     28c:	ldr	x3, [sp, #32]
     290:	mov	w2, #0x5                   	// #5
     294:	mov	x1, x0
     298:	mov	x0, x5
     29c:	blr	x4
     2a0:	b	41c <grub_efi_mmap_iterate+0x41c>
     2a4:	ldr	w0, [sp, #28]
     2a8:	cmp	w0, #0x0
     2ac:	b.ne	2e0 <grub_efi_mmap_iterate+0x2e0>  // b.any
     2b0:	ldr	x0, [sp, #88]
     2b4:	ldr	x5, [x0, #8]
     2b8:	ldr	x0, [sp, #88]
     2bc:	ldr	x0, [x0, #24]
     2c0:	lsl	x0, x0, #12
     2c4:	ldr	x4, [sp, #40]
     2c8:	ldr	x3, [sp, #32]
     2cc:	mov	w2, #0x1                   	// #1
     2d0:	mov	x1, x0
     2d4:	mov	x0, x5
     2d8:	blr	x4
     2dc:	b	41c <grub_efi_mmap_iterate+0x41c>
     2e0:	ldr	x0, [sp, #88]
     2e4:	ldr	x5, [x0, #8]
     2e8:	ldr	x0, [sp, #88]
     2ec:	ldr	x0, [x0, #24]
     2f0:	lsl	x0, x0, #12
     2f4:	ldr	x4, [sp, #40]
     2f8:	ldr	x3, [sp, #32]
     2fc:	mov	w2, #0x2                   	// #2
     300:	mov	x1, x0
     304:	mov	x0, x5
     308:	blr	x4
     30c:	b	41c <grub_efi_mmap_iterate+0x41c>
     310:	ldr	x0, [sp, #88]
     314:	ldr	x5, [x0, #8]
     318:	ldr	x0, [sp, #88]
     31c:	ldr	x0, [x0, #24]
     320:	lsl	x0, x0, #12
     324:	ldr	x4, [sp, #40]
     328:	ldr	x3, [sp, #32]
     32c:	mov	w2, #0x1                   	// #1
     330:	mov	x1, x0
     334:	mov	x0, x5
     338:	blr	x4
     33c:	b	41c <grub_efi_mmap_iterate+0x41c>
     340:	ldr	x0, [sp, #88]
     344:	ldr	x5, [x0, #8]
     348:	ldr	x0, [sp, #88]
     34c:	ldr	x0, [x0, #24]
     350:	lsl	x0, x0, #12
     354:	ldr	x4, [sp, #40]
     358:	ldr	x3, [sp, #32]
     35c:	mov	w2, #0x3                   	// #3
     360:	mov	x1, x0
     364:	mov	x0, x5
     368:	blr	x4
     36c:	b	41c <grub_efi_mmap_iterate+0x41c>
     370:	ldr	x0, [sp, #88]
     374:	ldr	x5, [x0, #8]
     378:	ldr	x0, [sp, #88]
     37c:	ldr	x0, [x0, #24]
     380:	lsl	x0, x0, #12
     384:	ldr	x4, [sp, #40]
     388:	ldr	x3, [sp, #32]
     38c:	mov	w2, #0x4                   	// #4
     390:	mov	x1, x0
     394:	mov	x0, x5
     398:	blr	x4
     39c:	b	41c <grub_efi_mmap_iterate+0x41c>
     3a0:	ldr	x0, [sp, #88]
     3a4:	ldr	x5, [x0, #8]
     3a8:	ldr	x0, [sp, #88]
     3ac:	ldr	x0, [x0, #24]
     3b0:	lsl	x0, x0, #12
     3b4:	ldr	x4, [sp, #40]
     3b8:	ldr	x3, [sp, #32]
     3bc:	mov	w2, #0x7                   	// #7
     3c0:	mov	x1, x0
     3c4:	mov	x0, x5
     3c8:	blr	x4
     3cc:	b	41c <grub_efi_mmap_iterate+0x41c>
     3d0:	ldr	x0, [sp, #88]
     3d4:	ldr	w0, [x0]
     3d8:	mov	w1, w0
     3dc:	adrp	x0, 0 <grub_efi_mmap_iterate>
     3e0:	add	x0, x0, #0x0
     3e4:	ldr	x0, [x0]
     3e8:	bl	0 <grub_printf>
     3ec:	ldr	x0, [sp, #88]
     3f0:	ldr	x5, [x0, #8]
     3f4:	ldr	x0, [sp, #88]
     3f8:	ldr	x0, [x0, #24]
     3fc:	lsl	x0, x0, #12
     400:	ldr	x4, [sp, #40]
     404:	ldr	x3, [sp, #32]
     408:	mov	w2, #0x2                   	// #2
     40c:	mov	x1, x0
     410:	mov	x0, x5
     414:	blr	x4
     418:	nop
     41c:	ldr	x0, [sp, #56]
     420:	ldr	x1, [sp, #88]
     424:	add	x0, x1, x0
     428:	str	x0, [sp, #88]
     42c:	ldr	x0, [sp, #72]
     430:	ldr	x1, [sp, #80]
     434:	add	x0, x1, x0
     438:	ldr	x1, [sp, #88]
     43c:	cmp	x1, x0
     440:	b.cc	e8 <grub_efi_mmap_iterate+0xe8>  // b.lo, b.ul, b.last
     444:	mov	w0, #0x0                   	// #0
     448:	ldp	x29, x30, [sp], #96
     44c:	ret
	...

0000000000000478 <grub_machine_mmap_iterate>:
     478:	stp	x29, x30, [sp, #-32]!
     47c:	mov	x29, sp
     480:	str	x0, [sp, #24]
     484:	str	x1, [sp, #16]
     488:	mov	w2, #0x0                   	// #0
     48c:	ldr	x1, [sp, #16]
     490:	ldr	x0, [sp, #24]
     494:	bl	0 <grub_efi_mmap_iterate>
     498:	ldp	x29, x30, [sp], #32
     49c:	ret

00000000000004a0 <make_efi_memtype>:
     4a0:	sub	sp, sp, #0x10
     4a4:	str	w0, [sp, #12]
     4a8:	ldr	w0, [sp, #12]
     4ac:	cmp	w0, #0x14
     4b0:	b.eq	554 <make_efi_memtype+0xb4>  // b.none
     4b4:	ldr	w0, [sp, #12]
     4b8:	cmp	w0, #0x14
     4bc:	b.gt	57c <make_efi_memtype+0xdc>
     4c0:	ldr	w0, [sp, #12]
     4c4:	cmp	w0, #0xc
     4c8:	b.eq	55c <make_efi_memtype+0xbc>  // b.none
     4cc:	ldr	w0, [sp, #12]
     4d0:	cmp	w0, #0xc
     4d4:	b.gt	57c <make_efi_memtype+0xdc>
     4d8:	ldr	w0, [sp, #12]
     4dc:	cmp	w0, #0x7
     4e0:	b.eq	55c <make_efi_memtype+0xbc>  // b.none
     4e4:	ldr	w0, [sp, #12]
     4e8:	cmp	w0, #0x7
     4ec:	b.gt	57c <make_efi_memtype+0xdc>
     4f0:	ldr	w0, [sp, #12]
     4f4:	cmp	w0, #0x4
     4f8:	b.eq	574 <make_efi_memtype+0xd4>  // b.none
     4fc:	ldr	w0, [sp, #12]
     500:	cmp	w0, #0x4
     504:	b.gt	57c <make_efi_memtype+0xdc>
     508:	ldr	w0, [sp, #12]
     50c:	cmp	w0, #0x3
     510:	b.eq	56c <make_efi_memtype+0xcc>  // b.none
     514:	ldr	w0, [sp, #12]
     518:	cmp	w0, #0x3
     51c:	b.gt	57c <make_efi_memtype+0xdc>
     520:	ldr	w0, [sp, #12]
     524:	cmp	w0, #0x2
     528:	b.eq	55c <make_efi_memtype+0xbc>  // b.none
     52c:	ldr	w0, [sp, #12]
     530:	cmp	w0, #0x2
     534:	b.gt	57c <make_efi_memtype+0xdc>
     538:	ldr	w0, [sp, #12]
     53c:	cmn	w0, #0x2
     540:	b.eq	55c <make_efi_memtype+0xbc>  // b.none
     544:	ldr	w0, [sp, #12]
     548:	cmp	w0, #0x1
     54c:	b.eq	564 <make_efi_memtype+0xc4>  // b.none
     550:	b	57c <make_efi_memtype+0xdc>
     554:	mov	w0, #0x5                   	// #5
     558:	b	580 <make_efi_memtype+0xe0>
     55c:	mov	w0, #0x8                   	// #8
     560:	b	580 <make_efi_memtype+0xe0>
     564:	mov	w0, #0x7                   	// #7
     568:	b	580 <make_efi_memtype+0xe0>
     56c:	mov	w0, #0x9                   	// #9
     570:	b	580 <make_efi_memtype+0xe0>
     574:	mov	w0, #0xa                   	// #10
     578:	b	580 <make_efi_memtype+0xe0>
     57c:	mov	w0, #0x8                   	// #8
     580:	add	sp, sp, #0x10
     584:	ret

0000000000000588 <grub_mmap_register>:
     588:	stp	x29, x30, [sp, #-112]!
     58c:	mov	x29, sp
     590:	str	x19, [sp, #16]
     594:	str	x0, [sp, #56]
     598:	str	x1, [sp, #48]
     59c:	str	w2, [sp, #44]
     5a0:	ldr	x1, [sp, #56]
     5a4:	ldr	x0, [sp, #48]
     5a8:	add	x0, x1, x0
     5ac:	str	x0, [sp, #104]
     5b0:	mov	x0, #0x20                  	// #32
     5b4:	bl	0 <grub_malloc>
     5b8:	str	x0, [sp, #96]
     5bc:	ldr	x0, [sp, #96]
     5c0:	cmp	x0, #0x0
     5c4:	b.ne	5d0 <grub_mmap_register+0x48>  // b.any
     5c8:	mov	w0, #0x0                   	// #0
     5cc:	b	714 <grub_mmap_register+0x18c>
     5d0:	adrp	x0, 0 <grub_efi_mmap_iterate>
     5d4:	add	x0, x0, #0x0
     5d8:	ldr	x0, [x0]
     5dc:	ldr	x0, [x0]
     5e0:	ldr	x0, [x0, #96]
     5e4:	str	x0, [sp, #88]
     5e8:	ldr	x0, [sp, #56]
     5ec:	and	x0, x0, #0xfffffffffffff000
     5f0:	str	x0, [sp, #64]
     5f4:	ldr	x0, [sp, #64]
     5f8:	ldr	x1, [sp, #104]
     5fc:	sub	x0, x1, x0
     600:	add	x0, x0, #0xfff
     604:	lsr	x0, x0, #12
     608:	str	x0, [sp, #80]
     60c:	ldr	x0, [sp, #88]
     610:	ldr	x2, [x0, #48]
     614:	ldr	x0, [sp, #64]
     618:	ldr	x1, [sp, #80]
     61c:	blr	x2
     620:	str	x0, [sp, #72]
     624:	ldr	x0, [sp, #72]
     628:	cmp	x0, #0x0
     62c:	b.eq	654 <grub_mmap_register+0xcc>  // b.none
     630:	ldr	x1, [sp, #72]
     634:	mov	x0, #0xe                   	// #14
     638:	movk	x0, #0x8000, lsl #48
     63c:	cmp	x1, x0
     640:	b.eq	654 <grub_mmap_register+0xcc>  // b.none
     644:	ldr	x0, [sp, #96]
     648:	bl	0 <grub_free>
     64c:	mov	w0, #0x0                   	// #0
     650:	b	714 <grub_mmap_register+0x18c>
     654:	ldr	x0, [sp, #88]
     658:	ldr	x19, [x0, #40]
     65c:	ldr	w0, [sp, #44]
     660:	bl	4a0 <make_efi_memtype>
     664:	mov	w1, w0
     668:	add	x0, sp, #0x40
     66c:	mov	x3, x0
     670:	ldr	x2, [sp, #80]
     674:	mov	w0, #0x2                   	// #2
     678:	blr	x19
     67c:	str	x0, [sp, #72]
     680:	ldr	x0, [sp, #72]
     684:	cmp	x0, #0x0
     688:	b.eq	69c <grub_mmap_register+0x114>  // b.none
     68c:	ldr	x0, [sp, #96]
     690:	bl	0 <grub_free>
     694:	mov	w0, #0x0                   	// #0
     698:	b	714 <grub_mmap_register+0x18c>
     69c:	adrp	x0, 0 <grub_efi_mmap_iterate>
     6a0:	add	x0, x0, #0x0
     6a4:	ldr	x0, [x0]
     6a8:	ldr	x1, [x0]
     6ac:	ldr	x0, [sp, #96]
     6b0:	str	x1, [x0]
     6b4:	adrp	x0, 0 <grub_efi_mmap_iterate>
     6b8:	add	x0, x0, #0x0
     6bc:	ldr	x0, [x0]
     6c0:	ldr	w0, [x0]
     6c4:	add	w2, w0, #0x1
     6c8:	adrp	x1, 0 <grub_efi_mmap_iterate>
     6cc:	add	x1, x1, #0x0
     6d0:	ldr	x1, [x1]
     6d4:	str	w2, [x1]
     6d8:	ldr	x1, [sp, #96]
     6dc:	str	w0, [x1, #24]
     6e0:	ldr	x1, [sp, #64]
     6e4:	ldr	x0, [sp, #96]
     6e8:	str	x1, [x0, #8]
     6ec:	ldr	x0, [sp, #96]
     6f0:	ldr	x1, [sp, #80]
     6f4:	str	x1, [x0, #16]
     6f8:	adrp	x0, 0 <grub_efi_mmap_iterate>
     6fc:	add	x0, x0, #0x0
     700:	ldr	x0, [x0]
     704:	ldr	x1, [sp, #96]
     708:	str	x1, [x0]
     70c:	ldr	x0, [sp, #96]
     710:	ldr	w0, [x0, #24]
     714:	ldr	x19, [sp, #16]
     718:	ldp	x29, x30, [sp], #112
     71c:	ret
	...

0000000000000738 <grub_mmap_unregister>:
     738:	stp	x29, x30, [sp, #-64]!
     73c:	mov	x29, sp
     740:	str	w0, [sp, #28]
     744:	adrp	x0, 0 <grub_efi_mmap_iterate>
     748:	add	x0, x0, #0x0
     74c:	ldr	x0, [x0]
     750:	ldr	x0, [x0]
     754:	ldr	x0, [x0, #96]
     758:	str	x0, [sp, #40]
     75c:	adrp	x0, 0 <grub_efi_mmap_iterate>
     760:	add	x0, x0, #0x0
     764:	ldr	x0, [x0]
     768:	ldr	x0, [x0]
     76c:	str	x0, [sp, #56]
     770:	str	xzr, [sp, #48]
     774:	b	80c <grub_mmap_unregister+0xd4>
     778:	ldr	x0, [sp, #56]
     77c:	ldr	w0, [x0, #24]
     780:	ldr	w1, [sp, #28]
     784:	cmp	w1, w0
     788:	b.ne	7f8 <grub_mmap_unregister+0xc0>  // b.any
     78c:	ldr	x0, [sp, #40]
     790:	ldr	x2, [x0, #48]
     794:	ldr	x0, [sp, #56]
     798:	ldr	x3, [x0, #8]
     79c:	ldr	x0, [sp, #56]
     7a0:	ldr	x0, [x0, #16]
     7a4:	mov	x1, x0
     7a8:	mov	x0, x3
     7ac:	blr	x2
     7b0:	ldr	x0, [sp, #48]
     7b4:	cmp	x0, #0x0
     7b8:	b.eq	7d0 <grub_mmap_unregister+0x98>  // b.none
     7bc:	ldr	x0, [sp, #56]
     7c0:	ldr	x1, [x0]
     7c4:	ldr	x0, [sp, #48]
     7c8:	str	x1, [x0]
     7cc:	b	7e8 <grub_mmap_unregister+0xb0>
     7d0:	ldr	x0, [sp, #56]
     7d4:	ldr	x1, [x0]
     7d8:	adrp	x0, 0 <grub_efi_mmap_iterate>
     7dc:	add	x0, x0, #0x0
     7e0:	ldr	x0, [x0]
     7e4:	str	x1, [x0]
     7e8:	ldr	x0, [sp, #56]
     7ec:	bl	0 <grub_free>
     7f0:	mov	w0, #0x0                   	// #0
     7f4:	b	830 <grub_mmap_unregister+0xf8>
     7f8:	ldr	x0, [sp, #56]
     7fc:	str	x0, [sp, #48]
     800:	ldr	x0, [sp, #56]
     804:	ldr	x0, [x0]
     808:	str	x0, [sp, #56]
     80c:	ldr	x0, [sp, #56]
     810:	cmp	x0, #0x0
     814:	b.ne	778 <grub_mmap_unregister+0x40>  // b.any
     818:	ldr	w2, [sp, #28]
     81c:	adrp	x0, 0 <grub_efi_mmap_iterate>
     820:	add	x0, x0, #0x0
     824:	ldr	x1, [x0]
     828:	mov	w0, #0x26                  	// #38
     82c:	bl	0 <grub_error>
     830:	ldp	x29, x30, [sp], #64
     834:	ret
	...

0000000000000850 <grub_mmap_malign_and_register>:
     850:	stp	x29, x30, [sp, #-112]!
     854:	mov	x29, sp
     858:	str	x19, [sp, #16]
     85c:	str	x0, [sp, #56]
     860:	str	x1, [sp, #48]
     864:	str	x2, [sp, #40]
     868:	str	w3, [sp, #36]
     86c:	str	w4, [sp, #32]
     870:	mov	x0, #0x20                  	// #32
     874:	bl	0 <grub_malloc>
     878:	str	x0, [sp, #104]
     87c:	ldr	x0, [sp, #104]
     880:	cmp	x0, #0x0
     884:	b.ne	890 <grub_mmap_malign_and_register+0x40>  // b.any
     888:	mov	x0, #0x0                   	// #0
     88c:	b	9f4 <grub_mmap_malign_and_register+0x1a4>
     890:	adrp	x0, 0 <grub_efi_mmap_iterate>
     894:	add	x0, x0, #0x0
     898:	ldr	x0, [x0]
     89c:	ldr	x0, [x0]
     8a0:	ldr	x0, [x0, #96]
     8a4:	str	x0, [sp, #96]
     8a8:	mov	x0, #0xffffffff            	// #4294967295
     8ac:	str	x0, [sp, #64]
     8b0:	str	wzr, [sp, #92]
     8b4:	ldr	x0, [sp, #48]
     8b8:	add	x0, x0, #0xfff
     8bc:	lsr	x0, x0, #12
     8c0:	str	x0, [sp, #80]
     8c4:	ldr	x0, [sp, #96]
     8c8:	ldr	x19, [x0, #40]
     8cc:	ldr	w0, [sp, #36]
     8d0:	bl	4a0 <make_efi_memtype>
     8d4:	mov	w1, w0
     8d8:	add	x0, sp, #0x40
     8dc:	mov	x3, x0
     8e0:	ldr	x2, [sp, #80]
     8e4:	ldr	w0, [sp, #92]
     8e8:	blr	x19
     8ec:	str	x0, [sp, #72]
     8f0:	ldr	x0, [sp, #72]
     8f4:	cmp	x0, #0x0
     8f8:	b.eq	90c <grub_mmap_malign_and_register+0xbc>  // b.none
     8fc:	ldr	x0, [sp, #104]
     900:	bl	0 <grub_free>
     904:	mov	x0, #0x0                   	// #0
     908:	b	9f4 <grub_mmap_malign_and_register+0x1a4>
     90c:	ldr	x0, [sp, #64]
     910:	cmp	x0, #0x0
     914:	b.ne	96c <grub_mmap_malign_and_register+0x11c>  // b.any
     918:	mov	x0, #0xffffffff            	// #4294967295
     91c:	str	x0, [sp, #64]
     920:	ldr	x0, [sp, #96]
     924:	ldr	x19, [x0, #40]
     928:	ldr	w0, [sp, #36]
     92c:	bl	4a0 <make_efi_memtype>
     930:	mov	w1, w0
     934:	add	x0, sp, #0x40
     938:	mov	x3, x0
     93c:	ldr	x2, [sp, #80]
     940:	ldr	w0, [sp, #92]
     944:	blr	x19
     948:	str	x0, [sp, #72]
     94c:	ldr	x1, [sp, #80]
     950:	mov	x0, #0x0                   	// #0
     954:	bl	0 <grub_efi_free_pages>
     958:	ldr	x0, [sp, #72]
     95c:	cmp	x0, #0x0
     960:	b.eq	96c <grub_mmap_malign_and_register+0x11c>  // b.none
     964:	mov	x0, #0x0                   	// #0
     968:	b	9f4 <grub_mmap_malign_and_register+0x1a4>
     96c:	adrp	x0, 0 <grub_efi_mmap_iterate>
     970:	add	x0, x0, #0x0
     974:	ldr	x0, [x0]
     978:	ldr	x1, [x0]
     97c:	ldr	x0, [sp, #104]
     980:	str	x1, [x0]
     984:	adrp	x0, 0 <grub_efi_mmap_iterate>
     988:	add	x0, x0, #0x0
     98c:	ldr	x0, [x0]
     990:	ldr	w0, [x0]
     994:	add	w2, w0, #0x1
     998:	adrp	x1, 0 <grub_efi_mmap_iterate>
     99c:	add	x1, x1, #0x0
     9a0:	ldr	x1, [x1]
     9a4:	str	w2, [x1]
     9a8:	ldr	x1, [sp, #104]
     9ac:	str	w0, [x1, #24]
     9b0:	ldr	x1, [sp, #64]
     9b4:	ldr	x0, [sp, #104]
     9b8:	str	x1, [x0, #8]
     9bc:	ldr	x0, [sp, #104]
     9c0:	ldr	x1, [sp, #80]
     9c4:	str	x1, [x0, #16]
     9c8:	adrp	x0, 0 <grub_efi_mmap_iterate>
     9cc:	add	x0, x0, #0x0
     9d0:	ldr	x0, [x0]
     9d4:	ldr	x1, [sp, #104]
     9d8:	str	x1, [x0]
     9dc:	ldr	x0, [sp, #104]
     9e0:	ldr	w1, [x0, #24]
     9e4:	ldr	x0, [sp, #40]
     9e8:	str	w1, [x0]
     9ec:	ldr	x0, [sp, #104]
     9f0:	ldr	x0, [x0, #8]
     9f4:	ldr	x19, [sp, #16]
     9f8:	ldp	x29, x30, [sp], #112
     9fc:	ret
	...

0000000000000a18 <grub_mmap_free_and_unregister>:
     a18:	stp	x29, x30, [sp, #-32]!
     a1c:	mov	x29, sp
     a20:	str	w0, [sp, #28]
     a24:	ldr	w0, [sp, #28]
     a28:	bl	738 <grub_mmap_unregister>
     a2c:	nop
     a30:	ldp	x29, x30, [sp], #32
     a34:	ret

0000000000000a38 <grub_register_command>:
     a38:	stp	x29, x30, [sp, #-48]!
     a3c:	mov	x29, sp
     a40:	str	x0, [sp, #40]
     a44:	str	x1, [sp, #32]
     a48:	str	x2, [sp, #24]
     a4c:	str	x3, [sp, #16]
     a50:	mov	w4, #0x0                   	// #0
     a54:	ldr	x3, [sp, #16]
     a58:	ldr	x2, [sp, #24]
     a5c:	ldr	x1, [sp, #32]
     a60:	ldr	x0, [sp, #40]
     a64:	bl	0 <grub_register_command_prio>
     a68:	ldp	x29, x30, [sp], #48
     a6c:	ret

0000000000000a70 <count_hook>:
     a70:	sub	sp, sp, #0x30
     a74:	str	x0, [sp, #24]
     a78:	str	x1, [sp, #16]
     a7c:	str	w2, [sp, #12]
     a80:	str	x3, [sp]
     a84:	ldr	x0, [sp]
     a88:	str	x0, [sp, #40]
     a8c:	ldr	x0, [sp, #40]
     a90:	ldr	w0, [x0]
     a94:	add	w1, w0, #0x1
     a98:	ldr	x0, [sp, #40]
     a9c:	str	w1, [x0]
     aa0:	mov	w0, #0x0                   	// #0
     aa4:	add	sp, sp, #0x30
     aa8:	ret

0000000000000aac <fill_hook>:
     aac:	stp	x29, x30, [sp, #-64]!
     ab0:	mov	x29, sp
     ab4:	str	x0, [sp, #40]
     ab8:	str	x1, [sp, #32]
     abc:	str	w2, [sp, #28]
     ac0:	str	x3, [sp, #16]
     ac4:	ldr	x0, [sp, #16]
     ac8:	str	x0, [sp, #56]
     acc:	ldr	w0, [sp, #28]
     ad0:	cmn	w0, #0x2
     ad4:	b.ne	b10 <fill_hook+0x64>  // b.any
     ad8:	ldr	w4, [sp, #28]
     adc:	adrp	x0, 0 <grub_efi_mmap_iterate>
     ae0:	add	x0, x0, #0x0
     ae4:	ldr	x3, [x0]
     ae8:	adrp	x0, 0 <grub_efi_mmap_iterate>
     aec:	add	x0, x0, #0x0
     af0:	ldr	x2, [x0]
     af4:	mov	w1, #0x51                  	// #81
     af8:	adrp	x0, 0 <grub_efi_mmap_iterate>
     afc:	add	x0, x0, #0x0
     b00:	ldr	x0, [x0]
     b04:	bl	0 <grub_real_dprintf>
     b08:	mov	w0, #0x2                   	// #2
     b0c:	str	w0, [sp, #28]
     b10:	ldr	x0, [sp, #56]
     b14:	ldr	x2, [x0]
     b18:	ldr	x0, [sp, #56]
     b1c:	ldr	w0, [x0, #8]
     b20:	sxtw	x1, w0
     b24:	mov	x0, x1
     b28:	lsl	x0, x0, #1
     b2c:	add	x0, x0, x1
     b30:	lsl	x0, x0, #3
     b34:	add	x0, x2, x0
     b38:	ldr	x1, [sp, #40]
     b3c:	str	x1, [x0]
     b40:	ldr	x0, [sp, #56]
     b44:	ldr	x2, [x0]
     b48:	ldr	x0, [sp, #56]
     b4c:	ldr	w0, [x0, #8]
     b50:	sxtw	x1, w0
     b54:	mov	x0, x1
     b58:	lsl	x0, x0, #1
     b5c:	add	x0, x0, x1
     b60:	lsl	x0, x0, #3
     b64:	add	x0, x2, x0
     b68:	str	wzr, [x0, #8]
     b6c:	ldr	x0, [sp, #56]
     b70:	ldr	x2, [x0]
     b74:	ldr	x0, [sp, #56]
     b78:	ldr	w0, [x0, #8]
     b7c:	sxtw	x1, w0
     b80:	mov	x0, x1
     b84:	lsl	x0, x0, #1
     b88:	add	x0, x0, x1
     b8c:	lsl	x0, x0, #3
     b90:	add	x0, x2, x0
     b94:	ldr	w1, [sp, #28]
     b98:	str	w1, [x0, #12]
     b9c:	ldr	x0, [sp, #56]
     ba0:	ldr	x2, [x0]
     ba4:	ldr	x0, [sp, #56]
     ba8:	ldr	w0, [x0, #8]
     bac:	sxtw	x1, w0
     bb0:	mov	x0, x1
     bb4:	lsl	x0, x0, #1
     bb8:	add	x0, x0, x1
     bbc:	lsl	x0, x0, #3
     bc0:	add	x0, x2, x0
     bc4:	str	wzr, [x0, #16]
     bc8:	ldr	x0, [sp, #56]
     bcc:	ldr	w0, [x0, #8]
     bd0:	add	w1, w0, #0x1
     bd4:	ldr	x0, [sp, #56]
     bd8:	str	w1, [x0, #8]
     bdc:	ldr	x0, [sp, #56]
     be0:	ldr	x2, [x0]
     be4:	ldr	x0, [sp, #56]
     be8:	ldr	w0, [x0, #8]
     bec:	sxtw	x1, w0
     bf0:	mov	x0, x1
     bf4:	lsl	x0, x0, #1
     bf8:	add	x0, x0, x1
     bfc:	lsl	x0, x0, #3
     c00:	add	x0, x2, x0
     c04:	ldr	x2, [sp, #40]
     c08:	ldr	x1, [sp, #32]
     c0c:	add	x1, x2, x1
     c10:	str	x1, [x0]
     c14:	ldr	x0, [sp, #56]
     c18:	ldr	x2, [x0]
     c1c:	ldr	x0, [sp, #56]
     c20:	ldr	w0, [x0, #8]
     c24:	sxtw	x1, w0
     c28:	mov	x0, x1
     c2c:	lsl	x0, x0, #1
     c30:	add	x0, x0, x1
     c34:	lsl	x0, x0, #3
     c38:	add	x0, x2, x0
     c3c:	mov	w1, #0x1                   	// #1
     c40:	str	w1, [x0, #8]
     c44:	ldr	x0, [sp, #56]
     c48:	ldr	x2, [x0]
     c4c:	ldr	x0, [sp, #56]
     c50:	ldr	w0, [x0, #8]
     c54:	sxtw	x1, w0
     c58:	mov	x0, x1
     c5c:	lsl	x0, x0, #1
     c60:	add	x0, x0, x1
     c64:	lsl	x0, x0, #3
     c68:	add	x0, x2, x0
     c6c:	ldr	w1, [sp, #28]
     c70:	str	w1, [x0, #12]
     c74:	ldr	x0, [sp, #56]
     c78:	ldr	x2, [x0]
     c7c:	ldr	x0, [sp, #56]
     c80:	ldr	w0, [x0, #8]
     c84:	sxtw	x1, w0
     c88:	mov	x0, x1
     c8c:	lsl	x0, x0, #1
     c90:	add	x0, x0, x1
     c94:	lsl	x0, x0, #3
     c98:	add	x0, x2, x0
     c9c:	str	wzr, [x0, #16]
     ca0:	ldr	x0, [sp, #56]
     ca4:	ldr	w0, [x0, #8]
     ca8:	add	w1, w0, #0x1
     cac:	ldr	x0, [sp, #56]
     cb0:	str	w1, [x0, #8]
     cb4:	mov	w0, #0x0                   	// #0
     cb8:	ldp	x29, x30, [sp], #64
     cbc:	ret
	...

0000000000000cd8 <grub_mmap_iterate>:
     cd8:	stp	x29, x30, [sp, #-160]!
     cdc:	mov	x29, sp
     ce0:	str	x0, [sp, #24]
     ce4:	str	x1, [sp, #16]
     ce8:	str	wzr, [sp, #44]
     cec:	add	x0, sp, #0x2c
     cf0:	mov	x1, x0
     cf4:	adrp	x0, 0 <grub_efi_mmap_iterate>
     cf8:	add	x0, x0, #0x0
     cfc:	ldr	x0, [x0]
     d00:	bl	478 <grub_machine_mmap_iterate>
     d04:	ldr	w0, [sp, #44]
     d08:	sxtw	x1, w0
     d0c:	mov	x0, x1
     d10:	lsl	x0, x0, #1
     d14:	add	x0, x0, x1
     d18:	lsl	x0, x0, #4
     d1c:	bl	0 <grub_malloc>
     d20:	str	x0, [sp, #72]
     d24:	adrp	x0, 0 <grub_efi_mmap_iterate>
     d28:	add	x0, x0, #0x0
     d2c:	ldr	x0, [x0]
     d30:	ldr	w0, [x0]
     d34:	sxtw	x0, w0
     d38:	lsl	x0, x0, #4
     d3c:	bl	0 <grub_zalloc>
     d40:	str	x0, [sp, #112]
     d44:	ldr	x0, [sp, #72]
     d48:	cmp	x0, #0x0
     d4c:	b.eq	d5c <grub_mmap_iterate+0x84>  // b.none
     d50:	ldr	x0, [sp, #112]
     d54:	cmp	x0, #0x0
     d58:	b.ne	d80 <grub_mmap_iterate+0xa8>  // b.any
     d5c:	ldr	x0, [sp, #72]
     d60:	bl	0 <grub_free>
     d64:	ldr	x0, [sp, #112]
     d68:	bl	0 <grub_free>
     d6c:	adrp	x0, 0 <grub_efi_mmap_iterate>
     d70:	add	x0, x0, #0x0
     d74:	ldr	x0, [x0]
     d78:	ldr	w0, [x0]
     d7c:	b	153c <grub_mmap_iterate+0x864>
     d80:	str	wzr, [sp, #80]
     d84:	add	x0, sp, #0x48
     d88:	mov	x1, x0
     d8c:	adrp	x0, 0 <grub_efi_mmap_iterate>
     d90:	add	x0, x0, #0x0
     d94:	ldr	x0, [x0]
     d98:	bl	478 <grub_machine_mmap_iterate>
     d9c:	mov	w0, #0x1                   	// #1
     da0:	str	w0, [sp, #152]
     da4:	b	f88 <grub_mmap_iterate+0x2b0>
     da8:	str	wzr, [sp, #152]
     dac:	str	wzr, [sp, #156]
     db0:	b	f70 <grub_mmap_iterate+0x298>
     db4:	ldr	x2, [sp, #72]
     db8:	ldrsw	x0, [sp, #156]
     dbc:	add	x1, x0, #0x1
     dc0:	mov	x0, x1
     dc4:	lsl	x0, x0, #1
     dc8:	add	x0, x0, x1
     dcc:	lsl	x0, x0, #3
     dd0:	add	x0, x2, x0
     dd4:	ldr	x2, [x0]
     dd8:	ldr	x3, [sp, #72]
     ddc:	ldrsw	x1, [sp, #156]
     de0:	mov	x0, x1
     de4:	lsl	x0, x0, #1
     de8:	add	x0, x0, x1
     dec:	lsl	x0, x0, #3
     df0:	add	x0, x3, x0
     df4:	ldr	x0, [x0]
     df8:	cmp	x2, x0
     dfc:	b.cc	ea0 <grub_mmap_iterate+0x1c8>  // b.lo, b.ul, b.last
     e00:	ldr	x2, [sp, #72]
     e04:	ldrsw	x0, [sp, #156]
     e08:	add	x1, x0, #0x1
     e0c:	mov	x0, x1
     e10:	lsl	x0, x0, #1
     e14:	add	x0, x0, x1
     e18:	lsl	x0, x0, #3
     e1c:	add	x0, x2, x0
     e20:	ldr	x2, [x0]
     e24:	ldr	x3, [sp, #72]
     e28:	ldrsw	x1, [sp, #156]
     e2c:	mov	x0, x1
     e30:	lsl	x0, x0, #1
     e34:	add	x0, x0, x1
     e38:	lsl	x0, x0, #3
     e3c:	add	x0, x3, x0
     e40:	ldr	x0, [x0]
     e44:	cmp	x2, x0
     e48:	b.ne	f64 <grub_mmap_iterate+0x28c>  // b.any
     e4c:	ldr	x2, [sp, #72]
     e50:	ldrsw	x0, [sp, #156]
     e54:	add	x1, x0, #0x1
     e58:	mov	x0, x1
     e5c:	lsl	x0, x0, #1
     e60:	add	x0, x0, x1
     e64:	lsl	x0, x0, #3
     e68:	add	x0, x2, x0
     e6c:	ldr	w0, [x0, #8]
     e70:	cmp	w0, #0x0
     e74:	b.ne	f64 <grub_mmap_iterate+0x28c>  // b.any
     e78:	ldr	x2, [sp, #72]
     e7c:	ldrsw	x1, [sp, #156]
     e80:	mov	x0, x1
     e84:	lsl	x0, x0, #1
     e88:	add	x0, x0, x1
     e8c:	lsl	x0, x0, #3
     e90:	add	x0, x2, x0
     e94:	ldr	w0, [x0, #8]
     e98:	cmp	w0, #0x1
     e9c:	b.ne	f64 <grub_mmap_iterate+0x28c>  // b.any
     ea0:	ldr	x2, [sp, #72]
     ea4:	ldrsw	x0, [sp, #156]
     ea8:	add	x1, x0, #0x1
     eac:	mov	x0, x1
     eb0:	lsl	x0, x0, #1
     eb4:	add	x0, x0, x1
     eb8:	lsl	x0, x0, #3
     ebc:	add	x0, x2, x0
     ec0:	add	x2, sp, #0x30
     ec4:	mov	x3, x0
     ec8:	ldp	x0, x1, [x3]
     ecc:	stp	x0, x1, [x2]
     ed0:	ldr	x0, [x3, #16]
     ed4:	str	x0, [x2, #16]
     ed8:	ldr	x2, [sp, #72]
     edc:	ldrsw	x1, [sp, #156]
     ee0:	mov	x0, x1
     ee4:	lsl	x0, x0, #1
     ee8:	add	x0, x0, x1
     eec:	lsl	x0, x0, #3
     ef0:	add	x3, x2, x0
     ef4:	ldr	x2, [sp, #72]
     ef8:	ldrsw	x0, [sp, #156]
     efc:	add	x1, x0, #0x1
     f00:	mov	x0, x1
     f04:	lsl	x0, x0, #1
     f08:	add	x0, x0, x1
     f0c:	lsl	x0, x0, #3
     f10:	add	x0, x2, x0
     f14:	mov	x2, x0
     f18:	ldp	x0, x1, [x3]
     f1c:	stp	x0, x1, [x2]
     f20:	ldr	x0, [x3, #16]
     f24:	str	x0, [x2, #16]
     f28:	ldr	x2, [sp, #72]
     f2c:	ldrsw	x1, [sp, #156]
     f30:	mov	x0, x1
     f34:	lsl	x0, x0, #1
     f38:	add	x0, x0, x1
     f3c:	lsl	x0, x0, #3
     f40:	add	x0, x2, x0
     f44:	mov	x3, x0
     f48:	add	x2, sp, #0x30
     f4c:	ldp	x0, x1, [x2]
     f50:	stp	x0, x1, [x3]
     f54:	ldr	x0, [x2, #16]
     f58:	str	x0, [x3, #16]
     f5c:	mov	w0, #0x1                   	// #1
     f60:	str	w0, [sp, #152]
     f64:	ldr	w0, [sp, #156]
     f68:	add	w0, w0, #0x1
     f6c:	str	w0, [sp, #156]
     f70:	ldr	w0, [sp, #44]
     f74:	lsl	w0, w0, #1
     f78:	sub	w0, w0, #0x1
     f7c:	ldr	w1, [sp, #156]
     f80:	cmp	w1, w0
     f84:	b.lt	db4 <grub_mmap_iterate+0xdc>  // b.tstop
     f88:	ldr	w0, [sp, #152]
     f8c:	cmp	w0, #0x0
     f90:	b.ne	da8 <grub_mmap_iterate+0xd0>  // b.any
     f94:	ldr	x0, [sp, #72]
     f98:	ldr	x0, [x0]
     f9c:	str	x0, [sp, #144]
     fa0:	ldr	x0, [sp, #72]
     fa4:	ldr	w0, [x0, #12]
     fa8:	str	w0, [sp, #140]
     fac:	str	wzr, [sp, #156]
     fb0:	b	151c <grub_mmap_iterate+0x844>
     fb4:	ldr	x2, [sp, #72]
     fb8:	ldrsw	x1, [sp, #156]
     fbc:	mov	x0, x1
     fc0:	lsl	x0, x0, #1
     fc4:	add	x0, x0, x1
     fc8:	lsl	x0, x0, #3
     fcc:	add	x0, x2, x0
     fd0:	ldr	w0, [x0, #8]
     fd4:	cmp	w0, #0x0
     fd8:	b.eq	121c <grub_mmap_iterate+0x544>  // b.none
     fdc:	ldr	x2, [sp, #72]
     fe0:	ldrsw	x1, [sp, #156]
     fe4:	mov	x0, x1
     fe8:	lsl	x0, x0, #1
     fec:	add	x0, x0, x1
     ff0:	lsl	x0, x0, #3
     ff4:	add	x0, x2, x0
     ff8:	ldr	w0, [x0, #16]
     ffc:	sxtw	x0, w0
    1000:	lsl	x0, x0, #4
    1004:	ldr	x1, [sp, #112]
    1008:	add	x0, x1, x0
    100c:	ldr	w0, [x0, #12]
    1010:	cmp	w0, #0x0
    1014:	b.eq	139c <grub_mmap_iterate+0x6c4>  // b.none
    1018:	ldr	x2, [sp, #72]
    101c:	ldrsw	x1, [sp, #156]
    1020:	mov	x0, x1
    1024:	lsl	x0, x0, #1
    1028:	add	x0, x0, x1
    102c:	lsl	x0, x0, #3
    1030:	add	x0, x2, x0
    1034:	ldr	w0, [x0, #16]
    1038:	sxtw	x0, w0
    103c:	lsl	x0, x0, #4
    1040:	ldr	x1, [sp, #112]
    1044:	add	x0, x1, x0
    1048:	ldr	w2, [x0, #8]
    104c:	ldr	x3, [sp, #72]
    1050:	ldrsw	x1, [sp, #156]
    1054:	mov	x0, x1
    1058:	lsl	x0, x0, #1
    105c:	add	x0, x0, x1
    1060:	lsl	x0, x0, #3
    1064:	add	x0, x3, x0
    1068:	ldr	w0, [x0, #12]
    106c:	cmp	w2, w0
    1070:	b.ne	1168 <grub_mmap_iterate+0x490>  // b.any
    1074:	ldr	x2, [sp, #72]
    1078:	ldrsw	x1, [sp, #156]
    107c:	mov	x0, x1
    1080:	lsl	x0, x0, #1
    1084:	add	x0, x0, x1
    1088:	lsl	x0, x0, #3
    108c:	add	x0, x2, x0
    1090:	ldr	w0, [x0, #16]
    1094:	sxtw	x0, w0
    1098:	lsl	x0, x0, #4
    109c:	ldr	x1, [sp, #112]
    10a0:	add	x0, x1, x0
    10a4:	ldr	x0, [x0]
    10a8:	cmp	x0, #0x0
    10ac:	b.eq	1130 <grub_mmap_iterate+0x458>  // b.none
    10b0:	ldr	x2, [sp, #72]
    10b4:	ldrsw	x1, [sp, #156]
    10b8:	mov	x0, x1
    10bc:	lsl	x0, x0, #1
    10c0:	add	x0, x0, x1
    10c4:	lsl	x0, x0, #3
    10c8:	add	x0, x2, x0
    10cc:	ldr	w0, [x0, #16]
    10d0:	sxtw	x0, w0
    10d4:	lsl	x0, x0, #4
    10d8:	ldr	x1, [sp, #112]
    10dc:	add	x0, x1, x0
    10e0:	ldr	x0, [x0]
    10e4:	str	x0, [sp, #88]
    10e8:	ldr	x2, [sp, #72]
    10ec:	ldrsw	x1, [sp, #156]
    10f0:	mov	x0, x1
    10f4:	lsl	x0, x0, #1
    10f8:	add	x0, x0, x1
    10fc:	lsl	x0, x0, #3
    1100:	add	x0, x2, x0
    1104:	ldr	w0, [x0, #16]
    1108:	sxtw	x0, w0
    110c:	lsl	x0, x0, #4
    1110:	ldr	x1, [sp, #112]
    1114:	add	x2, x1, x0
    1118:	ldr	x0, [sp, #88]
    111c:	ldp	x0, x1, [x0]
    1120:	stp	x0, x1, [x2]
    1124:	ldr	x0, [sp, #88]
    1128:	bl	0 <grub_free>
    112c:	b	139c <grub_mmap_iterate+0x6c4>
    1130:	ldr	x2, [sp, #72]
    1134:	ldrsw	x1, [sp, #156]
    1138:	mov	x0, x1
    113c:	lsl	x0, x0, #1
    1140:	add	x0, x0, x1
    1144:	lsl	x0, x0, #3
    1148:	add	x0, x2, x0
    114c:	ldr	w0, [x0, #16]
    1150:	sxtw	x0, w0
    1154:	lsl	x0, x0, #4
    1158:	ldr	x1, [sp, #112]
    115c:	add	x0, x1, x0
    1160:	str	wzr, [x0, #12]
    1164:	b	139c <grub_mmap_iterate+0x6c4>
    1168:	ldr	x2, [sp, #72]
    116c:	ldrsw	x1, [sp, #156]
    1170:	mov	x0, x1
    1174:	lsl	x0, x0, #1
    1178:	add	x0, x0, x1
    117c:	lsl	x0, x0, #3
    1180:	add	x0, x2, x0
    1184:	ldr	w0, [x0, #16]
    1188:	sxtw	x0, w0
    118c:	lsl	x0, x0, #4
    1190:	ldr	x1, [sp, #112]
    1194:	add	x0, x1, x0
    1198:	str	x0, [sp, #128]
    119c:	b	1208 <grub_mmap_iterate+0x530>
    11a0:	ldr	x0, [sp, #128]
    11a4:	ldr	x0, [x0]
    11a8:	ldr	w2, [x0, #8]
    11ac:	ldr	x3, [sp, #72]
    11b0:	ldrsw	x1, [sp, #156]
    11b4:	mov	x0, x1
    11b8:	lsl	x0, x0, #1
    11bc:	add	x0, x0, x1
    11c0:	lsl	x0, x0, #3
    11c4:	add	x0, x3, x0
    11c8:	ldr	w0, [x0, #12]
    11cc:	cmp	w2, w0
    11d0:	b.ne	11fc <grub_mmap_iterate+0x524>  // b.any
    11d4:	ldr	x0, [sp, #128]
    11d8:	ldr	x0, [x0]
    11dc:	str	x0, [sp, #96]
    11e0:	ldr	x0, [sp, #96]
    11e4:	ldr	x1, [x0]
    11e8:	ldr	x0, [sp, #128]
    11ec:	str	x1, [x0]
    11f0:	ldr	x0, [sp, #96]
    11f4:	bl	0 <grub_free>
    11f8:	b	139c <grub_mmap_iterate+0x6c4>
    11fc:	ldr	x0, [sp, #128]
    1200:	ldr	x0, [x0]
    1204:	str	x0, [sp, #128]
    1208:	ldr	x0, [sp, #128]
    120c:	ldr	x0, [x0]
    1210:	cmp	x0, #0x0
    1214:	b.ne	11a0 <grub_mmap_iterate+0x4c8>  // b.any
    1218:	b	139c <grub_mmap_iterate+0x6c4>
    121c:	ldr	x2, [sp, #72]
    1220:	ldrsw	x1, [sp, #156]
    1224:	mov	x0, x1
    1228:	lsl	x0, x0, #1
    122c:	add	x0, x0, x1
    1230:	lsl	x0, x0, #3
    1234:	add	x0, x2, x0
    1238:	ldr	w0, [x0, #16]
    123c:	sxtw	x0, w0
    1240:	lsl	x0, x0, #4
    1244:	ldr	x1, [sp, #112]
    1248:	add	x0, x1, x0
    124c:	ldr	w0, [x0, #12]
    1250:	cmp	w0, #0x0
    1254:	b.ne	12e8 <grub_mmap_iterate+0x610>  // b.any
    1258:	ldr	x2, [sp, #72]
    125c:	ldrsw	x1, [sp, #156]
    1260:	mov	x0, x1
    1264:	lsl	x0, x0, #1
    1268:	add	x0, x0, x1
    126c:	lsl	x0, x0, #3
    1270:	add	x0, x2, x0
    1274:	ldr	w0, [x0, #16]
    1278:	sxtw	x0, w0
    127c:	lsl	x0, x0, #4
    1280:	ldr	x1, [sp, #112]
    1284:	add	x0, x1, x0
    1288:	mov	w1, #0x1                   	// #1
    128c:	str	w1, [x0, #12]
    1290:	ldr	x2, [sp, #72]
    1294:	ldrsw	x1, [sp, #156]
    1298:	mov	x0, x1
    129c:	lsl	x0, x0, #1
    12a0:	add	x0, x0, x1
    12a4:	lsl	x0, x0, #3
    12a8:	add	x2, x2, x0
    12ac:	ldr	x3, [sp, #72]
    12b0:	ldrsw	x1, [sp, #156]
    12b4:	mov	x0, x1
    12b8:	lsl	x0, x0, #1
    12bc:	add	x0, x0, x1
    12c0:	lsl	x0, x0, #3
    12c4:	add	x0, x3, x0
    12c8:	ldr	w0, [x0, #16]
    12cc:	sxtw	x0, w0
    12d0:	lsl	x0, x0, #4
    12d4:	ldr	x1, [sp, #112]
    12d8:	add	x0, x1, x0
    12dc:	ldr	w1, [x2, #12]
    12e0:	str	w1, [x0, #8]
    12e4:	b	139c <grub_mmap_iterate+0x6c4>
    12e8:	mov	x0, #0x10                  	// #16
    12ec:	bl	0 <grub_malloc>
    12f0:	str	x0, [sp, #104]
    12f4:	ldr	x2, [sp, #72]
    12f8:	ldrsw	x1, [sp, #156]
    12fc:	mov	x0, x1
    1300:	lsl	x0, x0, #1
    1304:	add	x0, x0, x1
    1308:	lsl	x0, x0, #3
    130c:	add	x0, x2, x0
    1310:	ldr	w1, [x0, #12]
    1314:	ldr	x0, [sp, #104]
    1318:	str	w1, [x0, #8]
    131c:	ldr	x0, [sp, #104]
    1320:	mov	w1, #0x1                   	// #1
    1324:	str	w1, [x0, #12]
    1328:	ldr	x2, [sp, #72]
    132c:	ldrsw	x1, [sp, #156]
    1330:	mov	x0, x1
    1334:	lsl	x0, x0, #1
    1338:	add	x0, x0, x1
    133c:	lsl	x0, x0, #3
    1340:	add	x0, x2, x0
    1344:	ldr	w0, [x0, #16]
    1348:	sxtw	x0, w0
    134c:	lsl	x0, x0, #4
    1350:	ldr	x1, [sp, #112]
    1354:	add	x0, x1, x0
    1358:	ldr	x1, [x0]
    135c:	ldr	x0, [sp, #104]
    1360:	str	x1, [x0]
    1364:	ldr	x2, [sp, #72]
    1368:	ldrsw	x1, [sp, #156]
    136c:	mov	x0, x1
    1370:	lsl	x0, x0, #1
    1374:	add	x0, x0, x1
    1378:	lsl	x0, x0, #3
    137c:	add	x0, x2, x0
    1380:	ldr	w0, [x0, #16]
    1384:	sxtw	x0, w0
    1388:	lsl	x0, x0, #4
    138c:	ldr	x1, [sp, #112]
    1390:	add	x0, x1, x0
    1394:	ldr	x1, [sp, #104]
    1398:	str	x1, [x0]
    139c:	mov	w0, #0xffffffff            	// #-1
    13a0:	str	w0, [sp, #136]
    13a4:	adrp	x0, 0 <grub_efi_mmap_iterate>
    13a8:	add	x0, x0, #0x0
    13ac:	ldr	x0, [x0]
    13b0:	ldr	w0, [x0]
    13b4:	sub	w0, w0, #0x1
    13b8:	str	w0, [sp, #124]
    13bc:	b	1404 <grub_mmap_iterate+0x72c>
    13c0:	ldrsw	x0, [sp, #124]
    13c4:	lsl	x0, x0, #4
    13c8:	ldr	x1, [sp, #112]
    13cc:	add	x0, x1, x0
    13d0:	ldr	w0, [x0, #12]
    13d4:	cmp	w0, #0x0
    13d8:	b.eq	13f8 <grub_mmap_iterate+0x720>  // b.none
    13dc:	ldrsw	x0, [sp, #124]
    13e0:	lsl	x0, x0, #4
    13e4:	ldr	x1, [sp, #112]
    13e8:	add	x0, x1, x0
    13ec:	ldr	w0, [x0, #8]
    13f0:	str	w0, [sp, #136]
    13f4:	b	1410 <grub_mmap_iterate+0x738>
    13f8:	ldr	w0, [sp, #124]
    13fc:	sub	w0, w0, #0x1
    1400:	str	w0, [sp, #124]
    1404:	ldr	w0, [sp, #124]
    1408:	cmp	w0, #0x0
    140c:	b.ge	13c0 <grub_mmap_iterate+0x6e8>  // b.tcont
    1410:	ldr	w0, [sp, #136]
    1414:	cmn	w0, #0x1
    1418:	b.eq	142c <grub_mmap_iterate+0x754>  // b.none
    141c:	ldr	w1, [sp, #136]
    1420:	ldr	w0, [sp, #140]
    1424:	cmp	w1, w0
    1428:	b.eq	14c8 <grub_mmap_iterate+0x7f0>  // b.none
    142c:	ldr	x2, [sp, #72]
    1430:	ldrsw	x1, [sp, #156]
    1434:	mov	x0, x1
    1438:	lsl	x0, x0, #1
    143c:	add	x0, x0, x1
    1440:	lsl	x0, x0, #3
    1444:	add	x0, x2, x0
    1448:	ldr	x0, [x0]
    144c:	ldr	x1, [sp, #144]
    1450:	cmp	x1, x0
    1454:	b.eq	14c8 <grub_mmap_iterate+0x7f0>  // b.none
    1458:	ldr	w0, [sp, #140]
    145c:	cmn	w0, #0x1
    1460:	b.eq	14c8 <grub_mmap_iterate+0x7f0>  // b.none
    1464:	ldr	w0, [sp, #140]
    1468:	cmn	w0, #0x2
    146c:	b.eq	14c8 <grub_mmap_iterate+0x7f0>  // b.none
    1470:	ldr	x2, [sp, #72]
    1474:	ldrsw	x1, [sp, #156]
    1478:	mov	x0, x1
    147c:	lsl	x0, x0, #1
    1480:	add	x0, x0, x1
    1484:	lsl	x0, x0, #3
    1488:	add	x0, x2, x0
    148c:	ldr	x1, [x0]
    1490:	ldr	x0, [sp, #144]
    1494:	sub	x0, x1, x0
    1498:	ldr	x4, [sp, #24]
    149c:	ldr	x3, [sp, #16]
    14a0:	ldr	w2, [sp, #140]
    14a4:	mov	x1, x0
    14a8:	ldr	x0, [sp, #144]
    14ac:	blr	x4
    14b0:	cmp	w0, #0x0
    14b4:	b.eq	14c8 <grub_mmap_iterate+0x7f0>  // b.none
    14b8:	ldr	x0, [sp, #72]
    14bc:	bl	0 <grub_free>
    14c0:	mov	w0, #0x0                   	// #0
    14c4:	b	153c <grub_mmap_iterate+0x864>
    14c8:	ldr	w0, [sp, #136]
    14cc:	cmn	w0, #0x1
    14d0:	b.eq	14e4 <grub_mmap_iterate+0x80c>  // b.none
    14d4:	ldr	w1, [sp, #136]
    14d8:	ldr	w0, [sp, #140]
    14dc:	cmp	w1, w0
    14e0:	b.eq	1510 <grub_mmap_iterate+0x838>  // b.none
    14e4:	ldr	w0, [sp, #136]
    14e8:	str	w0, [sp, #140]
    14ec:	ldr	x2, [sp, #72]
    14f0:	ldrsw	x1, [sp, #156]
    14f4:	mov	x0, x1
    14f8:	lsl	x0, x0, #1
    14fc:	add	x0, x0, x1
    1500:	lsl	x0, x0, #3
    1504:	add	x0, x2, x0
    1508:	ldr	x0, [x0]
    150c:	str	x0, [sp, #144]
    1510:	ldr	w0, [sp, #156]
    1514:	add	w0, w0, #0x1
    1518:	str	w0, [sp, #156]
    151c:	ldr	w0, [sp, #44]
    1520:	lsl	w0, w0, #1
    1524:	ldr	w1, [sp, #156]
    1528:	cmp	w1, w0
    152c:	b.lt	fb4 <grub_mmap_iterate+0x2dc>  // b.tstop
    1530:	ldr	x0, [sp, #72]
    1534:	bl	0 <grub_free>
    1538:	mov	w0, #0x0                   	// #0
    153c:	ldp	x29, x30, [sp], #160
    1540:	ret
    1544:	nop
	...

0000000000001568 <fill_mask>:
    1568:	sub	sp, sp, #0x20
    156c:	str	x0, [sp, #8]
    1570:	str	x1, [sp]
    1574:	ldr	x0, [sp, #8]
    1578:	ldr	x1, [x0]
    157c:	ldr	x0, [sp, #8]
    1580:	ldr	x0, [x0, #8]
    1584:	and	x0, x1, x0
    1588:	str	x0, [sp, #16]
    158c:	str	wzr, [sp, #28]
    1590:	b	15bc <fill_mask+0x54>
    1594:	ldr	x0, [sp, #8]
    1598:	ldr	x1, [x0, #8]
    159c:	ldr	w0, [sp, #28]
    15a0:	lsr	x0, x1, x0
    15a4:	and	x0, x0, #0x1
    15a8:	cmp	x0, #0x0
    15ac:	b.ne	15cc <fill_mask+0x64>  // b.any
    15b0:	ldr	w0, [sp, #28]
    15b4:	add	w0, w0, #0x1
    15b8:	str	w0, [sp, #28]
    15bc:	ldr	w0, [sp, #28]
    15c0:	cmp	w0, #0x3f
    15c4:	b.le	1594 <fill_mask+0x2c>
    15c8:	b	15d0 <fill_mask+0x68>
    15cc:	nop
    15d0:	str	wzr, [sp, #24]
    15d4:	b	163c <fill_mask+0xd4>
    15d8:	ldr	x0, [sp, #8]
    15dc:	ldr	x1, [x0, #8]
    15e0:	ldr	w0, [sp, #28]
    15e4:	lsr	x0, x1, x0
    15e8:	and	x0, x0, #0x1
    15ec:	cmp	x0, #0x0
    15f0:	b.ne	1630 <fill_mask+0xc8>  // b.any
    15f4:	ldr	w0, [sp, #24]
    15f8:	ldr	x1, [sp]
    15fc:	lsr	x0, x1, x0
    1600:	and	x0, x0, #0x1
    1604:	cmp	x0, #0x0
    1608:	b.eq	1624 <fill_mask+0xbc>  // b.none
    160c:	ldr	w0, [sp, #28]
    1610:	mov	x1, #0x1                   	// #1
    1614:	lsl	x0, x1, x0
    1618:	ldr	x1, [sp, #16]
    161c:	orr	x0, x1, x0
    1620:	str	x0, [sp, #16]
    1624:	ldr	w0, [sp, #24]
    1628:	add	w0, w0, #0x1
    162c:	str	w0, [sp, #24]
    1630:	ldr	w0, [sp, #28]
    1634:	add	w0, w0, #0x1
    1638:	str	w0, [sp, #28]
    163c:	ldr	w0, [sp, #28]
    1640:	cmp	w0, #0x3f
    1644:	b.le	15d8 <fill_mask+0x70>
    1648:	ldr	x0, [sp, #16]
    164c:	add	sp, sp, #0x20
    1650:	ret

0000000000001654 <badram_iter>:
    1654:	stp	x29, x30, [sp, #-112]!
    1658:	mov	x29, sp
    165c:	str	x0, [sp, #40]
    1660:	str	x1, [sp, #32]
    1664:	str	w2, [sp, #28]
    1668:	str	x3, [sp, #16]
    166c:	ldr	x0, [sp, #16]
    1670:	str	x0, [sp, #64]
    1674:	ldr	x5, [sp, #32]
    1678:	ldr	x4, [sp, #40]
    167c:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1680:	add	x0, x0, #0x0
    1684:	ldr	x3, [x0]
    1688:	adrp	x0, 0 <grub_efi_mmap_iterate>
    168c:	add	x0, x0, #0x0
    1690:	ldr	x2, [x0]
    1694:	mov	w1, #0x17b                 	// #379
    1698:	adrp	x0, 0 <grub_efi_mmap_iterate>
    169c:	add	x0, x0, #0x0
    16a0:	ldr	x0, [x0]
    16a4:	bl	0 <grub_real_dprintf>
    16a8:	str	wzr, [sp, #84]
    16ac:	b	16bc <badram_iter+0x68>
    16b0:	ldr	w0, [sp, #84]
    16b4:	add	w0, w0, #0x1
    16b8:	str	w0, [sp, #84]
    16bc:	ldr	x0, [sp, #64]
    16c0:	ldr	x1, [x0, #8]
    16c4:	ldr	w0, [sp, #84]
    16c8:	lsr	x0, x1, x0
    16cc:	and	x0, x0, #0x1
    16d0:	cmp	x0, #0x0
    16d4:	b.eq	16b0 <badram_iter+0x5c>  // b.none
    16d8:	str	wzr, [sp, #80]
    16dc:	str	wzr, [sp, #76]
    16e0:	b	1718 <badram_iter+0xc4>
    16e4:	ldr	x0, [sp, #64]
    16e8:	ldr	x1, [x0, #8]
    16ec:	ldr	w0, [sp, #76]
    16f0:	lsr	x0, x1, x0
    16f4:	and	x0, x0, #0x1
    16f8:	cmp	x0, #0x0
    16fc:	b.ne	170c <badram_iter+0xb8>  // b.any
    1700:	ldr	w0, [sp, #80]
    1704:	add	w0, w0, #0x1
    1708:	str	w0, [sp, #80]
    170c:	ldr	w0, [sp, #76]
    1710:	add	w0, w0, #0x1
    1714:	str	w0, [sp, #76]
    1718:	ldr	w0, [sp, #76]
    171c:	cmp	w0, #0x3f
    1720:	b.le	16e4 <badram_iter+0x90>
    1724:	mov	x1, #0x0                   	// #0
    1728:	ldr	x0, [sp, #64]
    172c:	bl	1568 <fill_mask>
    1730:	mov	x1, x0
    1734:	ldr	x0, [sp, #40]
    1738:	cmp	x0, x1
    173c:	b.hi	1748 <badram_iter+0xf4>  // b.pmore
    1740:	str	xzr, [sp, #104]
    1744:	b	1824 <badram_iter+0x1d0>
    1748:	str	xzr, [sp, #96]
    174c:	mov	x0, #0xffffffffffffffff    	// #-1
    1750:	str	x0, [sp, #88]
    1754:	b	179c <badram_iter+0x148>
    1758:	ldr	x1, [sp, #96]
    175c:	ldr	x0, [sp, #88]
    1760:	add	x0, x1, x0
    1764:	lsr	x0, x0, #1
    1768:	str	x0, [sp, #56]
    176c:	ldr	x1, [sp, #56]
    1770:	ldr	x0, [sp, #64]
    1774:	bl	1568 <fill_mask>
    1778:	mov	x1, x0
    177c:	ldr	x0, [sp, #40]
    1780:	cmp	x0, x1
    1784:	b.hi	1794 <badram_iter+0x140>  // b.pmore
    1788:	ldr	x0, [sp, #56]
    178c:	str	x0, [sp, #88]
    1790:	b	179c <badram_iter+0x148>
    1794:	ldr	x0, [sp, #56]
    1798:	str	x0, [sp, #96]
    179c:	ldr	x1, [sp, #88]
    17a0:	ldr	x0, [sp, #96]
    17a4:	sub	x0, x1, x0
    17a8:	cmp	x0, #0x1
    17ac:	b.hi	1758 <badram_iter+0x104>  // b.pmore
    17b0:	ldr	x0, [sp, #88]
    17b4:	str	x0, [sp, #104]
    17b8:	b	1824 <badram_iter+0x1d0>
    17bc:	ldr	w0, [sp, #84]
    17c0:	mov	x1, #0x1                   	// #1
    17c4:	lsl	x0, x1, x0
    17c8:	mov	x5, x0
    17cc:	ldr	x4, [sp, #56]
    17d0:	adrp	x0, 0 <grub_efi_mmap_iterate>
    17d4:	add	x0, x0, #0x0
    17d8:	ldr	x3, [x0]
    17dc:	adrp	x0, 0 <grub_efi_mmap_iterate>
    17e0:	add	x0, x0, #0x0
    17e4:	ldr	x2, [x0]
    17e8:	mov	w1, #0x19f                 	// #415
    17ec:	adrp	x0, 0 <grub_efi_mmap_iterate>
    17f0:	add	x0, x0, #0x0
    17f4:	ldr	x0, [x0]
    17f8:	bl	0 <grub_real_dprintf>
    17fc:	ldr	w0, [sp, #84]
    1800:	mov	x1, #0x1                   	// #1
    1804:	lsl	x0, x1, x0
    1808:	mov	w2, #0xfffffffe            	// #-2
    180c:	mov	x1, x0
    1810:	ldr	x0, [sp, #56]
    1814:	bl	588 <grub_mmap_register>
    1818:	ldr	x0, [sp, #104]
    181c:	add	x0, x0, #0x1
    1820:	str	x0, [sp, #104]
    1824:	ldr	w1, [sp, #80]
    1828:	ldr	w0, [sp, #84]
    182c:	sub	w0, w1, w0
    1830:	mov	x1, #0x1                   	// #1
    1834:	lsl	x0, x1, x0
    1838:	ldr	x1, [sp, #104]
    183c:	cmp	x1, x0
    1840:	b.cs	186c <badram_iter+0x218>  // b.hs, b.nlast
    1844:	ldr	x1, [sp, #104]
    1848:	ldr	x0, [sp, #64]
    184c:	bl	1568 <fill_mask>
    1850:	str	x0, [sp, #56]
    1854:	ldr	x1, [sp, #40]
    1858:	ldr	x0, [sp, #32]
    185c:	add	x0, x1, x0
    1860:	ldr	x1, [sp, #56]
    1864:	cmp	x1, x0
    1868:	b.cc	17bc <badram_iter+0x168>  // b.lo, b.ul, b.last
    186c:	mov	w0, #0x0                   	// #0
    1870:	ldp	x29, x30, [sp], #112
    1874:	ret
	...

0000000000001898 <grub_cmd_badram>:
    1898:	stp	x29, x30, [sp, #-80]!
    189c:	mov	x29, sp
    18a0:	str	x0, [sp, #40]
    18a4:	str	w1, [sp, #36]
    18a8:	str	x2, [sp, #24]
    18ac:	ldr	w0, [sp, #36]
    18b0:	cmp	w0, #0x1
    18b4:	b.eq	18d0 <grub_cmd_badram+0x38>  // b.none
    18b8:	adrp	x0, 0 <grub_efi_mmap_iterate>
    18bc:	add	x0, x0, #0x0
    18c0:	ldr	x1, [x0]
    18c4:	mov	w0, #0x12                  	// #18
    18c8:	bl	0 <grub_error>
    18cc:	b	19fc <grub_cmd_badram+0x164>
    18d0:	adrp	x0, 0 <grub_efi_mmap_iterate>
    18d4:	add	x0, x0, #0x0
    18d8:	ldr	x3, [x0]
    18dc:	adrp	x0, 0 <grub_efi_mmap_iterate>
    18e0:	add	x0, x0, #0x0
    18e4:	ldr	x2, [x0]
    18e8:	mov	w1, #0x1b0                 	// #432
    18ec:	adrp	x0, 0 <grub_efi_mmap_iterate>
    18f0:	add	x0, x0, #0x0
    18f4:	ldr	x0, [x0]
    18f8:	bl	0 <grub_real_dprintf>
    18fc:	ldr	x0, [sp, #24]
    1900:	ldr	x0, [x0]
    1904:	str	x0, [sp, #72]
    1908:	ldr	x0, [sp, #72]
    190c:	add	x1, sp, #0x48
    1910:	mov	w2, #0x10                  	// #16
    1914:	bl	0 <grub_strtoull>
    1918:	str	x0, [sp, #56]
    191c:	ldr	x0, [sp, #72]
    1920:	ldrb	w0, [x0]
    1924:	cmp	w0, #0x2c
    1928:	b.ne	1938 <grub_cmd_badram+0xa0>  // b.any
    192c:	ldr	x0, [sp, #72]
    1930:	add	x0, x0, #0x1
    1934:	str	x0, [sp, #72]
    1938:	ldr	x0, [sp, #72]
    193c:	add	x1, sp, #0x48
    1940:	mov	w2, #0x10                  	// #16
    1944:	bl	0 <grub_strtoull>
    1948:	str	x0, [sp, #64]
    194c:	ldr	x0, [sp, #72]
    1950:	ldrb	w0, [x0]
    1954:	cmp	w0, #0x2c
    1958:	b.ne	1968 <grub_cmd_badram+0xd0>  // b.any
    195c:	ldr	x0, [sp, #72]
    1960:	add	x0, x0, #0x1
    1964:	str	x0, [sp, #72]
    1968:	adrp	x0, 0 <grub_efi_mmap_iterate>
    196c:	add	x0, x0, #0x0
    1970:	ldr	x0, [x0]
    1974:	ldr	w0, [x0]
    1978:	cmp	w0, #0xa
    197c:	b.ne	1998 <grub_cmd_badram+0x100>  // b.any
    1980:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1984:	add	x0, x0, #0x0
    1988:	ldr	x0, [x0]
    198c:	str	wzr, [x0]
    1990:	mov	w0, #0x0                   	// #0
    1994:	b	19fc <grub_cmd_badram+0x164>
    1998:	ldr	x0, [sp, #64]
    199c:	and	x0, x0, #0xfffffffffffffc00
    19a0:	str	x0, [sp, #64]
    19a4:	ldr	x0, [sp, #56]
    19a8:	ldr	x1, [sp, #64]
    19ac:	mov	x5, x1
    19b0:	mov	x4, x0
    19b4:	adrp	x0, 0 <grub_efi_mmap_iterate>
    19b8:	add	x0, x0, #0x0
    19bc:	ldr	x3, [x0]
    19c0:	adrp	x0, 0 <grub_efi_mmap_iterate>
    19c4:	add	x0, x0, #0x0
    19c8:	ldr	x2, [x0]
    19cc:	mov	w1, #0x1c8                 	// #456
    19d0:	adrp	x0, 0 <grub_efi_mmap_iterate>
    19d4:	add	x0, x0, #0x0
    19d8:	ldr	x0, [x0]
    19dc:	bl	0 <grub_real_dprintf>
    19e0:	add	x0, sp, #0x38
    19e4:	mov	x1, x0
    19e8:	adrp	x0, 0 <grub_efi_mmap_iterate>
    19ec:	add	x0, x0, #0x0
    19f0:	ldr	x0, [x0]
    19f4:	bl	cd8 <grub_mmap_iterate>
    19f8:	b	1908 <grub_cmd_badram+0x70>
    19fc:	ldp	x29, x30, [sp], #80
    1a00:	ret
    1a04:	nop
	...

0000000000001a40 <parsemem>:
    1a40:	stp	x29, x30, [sp, #-48]!
    1a44:	mov	x29, sp
    1a48:	str	x0, [sp, #24]
    1a4c:	add	x0, sp, #0x20
    1a50:	mov	w2, #0x0                   	// #0
    1a54:	mov	x1, x0
    1a58:	ldr	x0, [sp, #24]
    1a5c:	bl	0 <grub_strtoul>
    1a60:	str	x0, [sp, #40]
    1a64:	ldr	x0, [sp, #32]
    1a68:	ldrb	w0, [x0]
    1a6c:	cmp	w0, #0x54
    1a70:	b.eq	1ac0 <parsemem+0x80>  // b.none
    1a74:	cmp	w0, #0x54
    1a78:	b.gt	1acc <parsemem+0x8c>
    1a7c:	cmp	w0, #0x4d
    1a80:	b.eq	1aa8 <parsemem+0x68>  // b.none
    1a84:	cmp	w0, #0x4d
    1a88:	b.gt	1acc <parsemem+0x8c>
    1a8c:	cmp	w0, #0x47
    1a90:	b.eq	1ab4 <parsemem+0x74>  // b.none
    1a94:	cmp	w0, #0x4b
    1a98:	b.ne	1acc <parsemem+0x8c>  // b.any
    1a9c:	ldr	x0, [sp, #40]
    1aa0:	lsl	x0, x0, #10
    1aa4:	b	1ad0 <parsemem+0x90>
    1aa8:	ldr	x0, [sp, #40]
    1aac:	lsl	x0, x0, #20
    1ab0:	b	1ad0 <parsemem+0x90>
    1ab4:	ldr	x0, [sp, #40]
    1ab8:	lsl	x0, x0, #30
    1abc:	b	1ad0 <parsemem+0x90>
    1ac0:	ldr	x0, [sp, #40]
    1ac4:	lsl	x0, x0, #40
    1ac8:	b	1ad0 <parsemem+0x90>
    1acc:	ldr	x0, [sp, #40]
    1ad0:	ldp	x29, x30, [sp], #48
    1ad4:	ret

0000000000001ad8 <cutmem_iter>:
    1ad8:	stp	x29, x30, [sp, #-64]!
    1adc:	mov	x29, sp
    1ae0:	str	x0, [sp, #40]
    1ae4:	str	x1, [sp, #32]
    1ae8:	str	w2, [sp, #28]
    1aec:	str	x3, [sp, #16]
    1af0:	ldr	x0, [sp, #16]
    1af4:	str	x0, [sp, #48]
    1af8:	ldr	x1, [sp, #40]
    1afc:	ldr	x0, [sp, #32]
    1b00:	add	x0, x1, x0
    1b04:	str	x0, [sp, #56]
    1b08:	ldr	x0, [sp, #48]
    1b0c:	ldr	x0, [x0]
    1b10:	ldr	x1, [sp, #40]
    1b14:	cmp	x1, x0
    1b18:	b.hi	1b28 <cutmem_iter+0x50>  // b.pmore
    1b1c:	ldr	x0, [sp, #48]
    1b20:	ldr	x0, [x0]
    1b24:	str	x0, [sp, #40]
    1b28:	ldr	x0, [sp, #48]
    1b2c:	ldr	x0, [x0, #8]
    1b30:	ldr	x1, [sp, #56]
    1b34:	cmp	x1, x0
    1b38:	b.cc	1b48 <cutmem_iter+0x70>  // b.lo, b.ul, b.last
    1b3c:	ldr	x0, [sp, #48]
    1b40:	ldr	x0, [x0, #8]
    1b44:	str	x0, [sp, #56]
    1b48:	ldr	x1, [sp, #56]
    1b4c:	ldr	x0, [sp, #40]
    1b50:	cmp	x1, x0
    1b54:	b.hi	1b60 <cutmem_iter+0x88>  // b.pmore
    1b58:	mov	w0, #0x0                   	// #0
    1b5c:	b	1b80 <cutmem_iter+0xa8>
    1b60:	ldr	x1, [sp, #56]
    1b64:	ldr	x0, [sp, #40]
    1b68:	sub	x0, x1, x0
    1b6c:	mov	w2, #0xfffffffe            	// #-2
    1b70:	mov	x1, x0
    1b74:	ldr	x0, [sp, #40]
    1b78:	bl	588 <grub_mmap_register>
    1b7c:	mov	w0, #0x0                   	// #0
    1b80:	ldp	x29, x30, [sp], #64
    1b84:	ret

0000000000001b88 <grub_cmd_cutmem>:
    1b88:	stp	x29, x30, [sp, #-64]!
    1b8c:	mov	x29, sp
    1b90:	str	x0, [sp, #40]
    1b94:	str	w1, [sp, #36]
    1b98:	str	x2, [sp, #24]
    1b9c:	ldr	w0, [sp, #36]
    1ba0:	cmp	w0, #0x2
    1ba4:	b.eq	1bc0 <grub_cmd_cutmem+0x38>  // b.none
    1ba8:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1bac:	add	x0, x0, #0x0
    1bb0:	ldr	x1, [x0]
    1bb4:	mov	w0, #0x12                  	// #18
    1bb8:	bl	0 <grub_error>
    1bbc:	b	1c58 <grub_cmd_cutmem+0xd0>
    1bc0:	ldr	x0, [sp, #24]
    1bc4:	ldr	x0, [x0]
    1bc8:	bl	1a40 <parsemem>
    1bcc:	str	x0, [sp, #48]
    1bd0:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1bd4:	add	x0, x0, #0x0
    1bd8:	ldr	x0, [x0]
    1bdc:	ldr	w0, [x0]
    1be0:	cmp	w0, #0x0
    1be4:	b.eq	1bfc <grub_cmd_cutmem+0x74>  // b.none
    1be8:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1bec:	add	x0, x0, #0x0
    1bf0:	ldr	x0, [x0]
    1bf4:	ldr	w0, [x0]
    1bf8:	b	1c58 <grub_cmd_cutmem+0xd0>
    1bfc:	ldr	x0, [sp, #24]
    1c00:	add	x0, x0, #0x8
    1c04:	ldr	x0, [x0]
    1c08:	bl	1a40 <parsemem>
    1c0c:	str	x0, [sp, #56]
    1c10:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1c14:	add	x0, x0, #0x0
    1c18:	ldr	x0, [x0]
    1c1c:	ldr	w0, [x0]
    1c20:	cmp	w0, #0x0
    1c24:	b.eq	1c3c <grub_cmd_cutmem+0xb4>  // b.none
    1c28:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1c2c:	add	x0, x0, #0x0
    1c30:	ldr	x0, [x0]
    1c34:	ldr	w0, [x0]
    1c38:	b	1c58 <grub_cmd_cutmem+0xd0>
    1c3c:	add	x0, sp, #0x30
    1c40:	mov	x1, x0
    1c44:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1c48:	add	x0, x0, #0x0
    1c4c:	ldr	x0, [x0]
    1c50:	bl	cd8 <grub_mmap_iterate>
    1c54:	mov	w0, #0x0                   	// #0
    1c58:	ldp	x29, x30, [sp], #64
    1c5c:	ret
	...

0000000000001c78 <grub_mod_init>:
    1c78:	stp	x29, x30, [sp, #-32]!
    1c7c:	mov	x29, sp
    1c80:	str	x0, [sp, #24]
    1c84:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1c88:	add	x0, x0, #0x0
    1c8c:	ldr	x3, [x0]
    1c90:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1c94:	add	x0, x0, #0x0
    1c98:	ldr	x2, [x0]
    1c9c:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1ca0:	add	x0, x0, #0x0
    1ca4:	ldr	x1, [x0]
    1ca8:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1cac:	add	x0, x0, #0x0
    1cb0:	ldr	x0, [x0]
    1cb4:	bl	a38 <grub_register_command>
    1cb8:	mov	x1, x0
    1cbc:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1cc0:	add	x0, x0, #0x0
    1cc4:	ldr	x0, [x0]
    1cc8:	str	x1, [x0]
    1ccc:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1cd0:	add	x0, x0, #0x0
    1cd4:	ldr	x3, [x0]
    1cd8:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1cdc:	add	x0, x0, #0x0
    1ce0:	ldr	x2, [x0]
    1ce4:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1ce8:	add	x0, x0, #0x0
    1cec:	ldr	x1, [x0]
    1cf0:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1cf4:	add	x0, x0, #0x0
    1cf8:	ldr	x0, [x0]
    1cfc:	bl	a38 <grub_register_command>
    1d00:	mov	x1, x0
    1d04:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1d08:	add	x0, x0, #0x0
    1d0c:	ldr	x0, [x0]
    1d10:	str	x1, [x0]
    1d14:	nop
    1d18:	ldp	x29, x30, [sp], #32
    1d1c:	ret
	...

0000000000001d70 <grub_mod_fini>:
    1d70:	stp	x29, x30, [sp, #-16]!
    1d74:	mov	x29, sp
    1d78:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1d7c:	add	x0, x0, #0x0
    1d80:	ldr	x0, [x0]
    1d84:	ldr	x0, [x0]
    1d88:	bl	0 <grub_unregister_command>
    1d8c:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1d90:	add	x0, x0, #0x0
    1d94:	ldr	x0, [x0]
    1d98:	ldr	x0, [x0]
    1d9c:	bl	0 <grub_unregister_command>
    1da0:	nop
    1da4:	ldp	x29, x30, [sp], #16
    1da8:	ret
    1dac:	nop
	...
