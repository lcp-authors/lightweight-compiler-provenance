
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mtd_probe_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400920 <_init>:
  400920:	stp	x29, x30, [sp, #-16]!
  400924:	mov	x29, sp
  400928:	bl	400bec <call_weak_fn>
  40092c:	ldp	x29, x30, [sp], #16
  400930:	ret

Disassembly of section .plt:

0000000000400940 <.plt>:
  400940:	stp	x16, x30, [sp, #-16]!
  400944:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400948:	ldr	x17, [x16, #3944]
  40094c:	add	x16, x16, #0xf68
  400950:	br	x17
  400954:	nop
  400958:	nop
  40095c:	nop

0000000000400960 <__libc_start_main@plt>:
  400960:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400964:	ldr	x17, [x16, #3952]
  400968:	add	x16, x16, #0xf70
  40096c:	br	x17

0000000000400970 <lseek64@plt>:
  400970:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400974:	ldr	x17, [x16, #3960]
  400978:	add	x16, x16, #0xf78
  40097c:	br	x17

0000000000400980 <__gmon_start__@plt>:
  400980:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400984:	ldr	x17, [x16, #3968]
  400988:	add	x16, x16, #0xf80
  40098c:	br	x17

0000000000400990 <safe_close@plt>:
  400990:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400994:	ldr	x17, [x16, #3976]
  400998:	add	x16, x16, #0xf88
  40099c:	br	x17

00000000004009a0 <abort@plt>:
  4009a0:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  4009a4:	ldr	x17, [x16, #3984]
  4009a8:	add	x16, x16, #0xf90
  4009ac:	br	x17

00000000004009b0 <__errno_location@plt>:
  4009b0:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  4009b4:	ldr	x17, [x16, #3992]
  4009b8:	add	x16, x16, #0xf98
  4009bc:	br	x17

00000000004009c0 <read@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  4009c4:	ldr	x17, [x16, #4000]
  4009c8:	add	x16, x16, #0xfa0
  4009cc:	br	x17

00000000004009d0 <__stack_chk_fail@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  4009d4:	ldr	x17, [x16, #4008]
  4009d8:	add	x16, x16, #0xfa8
  4009dc:	br	x17

00000000004009e0 <malloc@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  4009e4:	ldr	x17, [x16, #4016]
  4009e8:	add	x16, x16, #0xfb0
  4009ec:	br	x17

00000000004009f0 <log_internal_realm@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  4009f4:	ldr	x17, [x16, #4024]
  4009f8:	add	x16, x16, #0xfb8
  4009fc:	br	x17

0000000000400a00 <ioctl@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400a04:	ldr	x17, [x16, #4032]
  400a08:	add	x16, x16, #0xfc0
  400a0c:	br	x17

0000000000400a10 <free@plt>:
  400a10:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400a14:	ldr	x17, [x16, #4040]
  400a18:	add	x16, x16, #0xfc8
  400a1c:	br	x17

0000000000400a20 <puts@plt>:
  400a20:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400a24:	ldr	x17, [x16, #4048]
  400a28:	add	x16, x16, #0xfd0
  400a2c:	br	x17

0000000000400a30 <open64@plt>:
  400a30:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400a34:	ldr	x17, [x16, #4056]
  400a38:	add	x16, x16, #0xfd8
  400a3c:	br	x17

0000000000400a40 <log_oom_internal@plt>:
  400a40:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400a44:	ldr	x17, [x16, #4064]
  400a48:	add	x16, x16, #0xfe0
  400a4c:	br	x17

0000000000400a50 <log_get_max_level_realm@plt>:
  400a50:	adrp	x16, 411000 <__FRAME_END__+0xfcd0>
  400a54:	ldr	x17, [x16, #4072]
  400a58:	add	x16, x16, #0xfe8
  400a5c:	br	x17

Disassembly of section .text:

0000000000400a60 <main>:
  400a60:	stp	x29, x30, [sp, #-96]!
  400a64:	cmp	w0, #0x2
  400a68:	mov	x29, sp
  400a6c:	stp	x19, x20, [sp, #16]
  400a70:	adrp	x19, 411000 <__FRAME_END__+0xfcd0>
  400a74:	add	x19, x19, #0xd20
  400a78:	ldr	x2, [x19]
  400a7c:	str	x2, [sp, #88]
  400a80:	mov	x2, #0x0                   	// #0
  400a84:	str	x21, [sp, #32]
  400a88:	b.eq	400acc <main+0x6c>  // b.none
  400a8c:	adrp	x0, 401000 <_fini+0xc>
  400a90:	mov	w20, #0xffffffff            	// #-1
  400a94:	add	x0, x0, #0x18
  400a98:	mov	w21, #0x1                   	// #1
  400a9c:	bl	400a20 <puts@plt>
  400aa0:	mov	w0, w20
  400aa4:	bl	400990 <safe_close@plt>
  400aa8:	ldr	x1, [sp, #88]
  400aac:	ldr	x0, [x19]
  400ab0:	eor	x0, x1, x0
  400ab4:	cbnz	x0, 400b98 <main+0x138>
  400ab8:	mov	w0, w21
  400abc:	ldp	x19, x20, [sp, #16]
  400ac0:	ldr	x21, [sp, #32]
  400ac4:	ldp	x29, x30, [sp], #96
  400ac8:	ret
  400acc:	ldr	x0, [x1, #8]
  400ad0:	mov	w1, #0x80000               	// #524288
  400ad4:	bl	400a30 <open64@plt>
  400ad8:	mov	w20, w0
  400adc:	tbnz	w0, #31, 400b08 <main+0xa8>
  400ae0:	mov	x1, #0x4d01                	// #19713
  400ae4:	add	x2, sp, #0x38
  400ae8:	movk	x1, #0x8020, lsl #16
  400aec:	bl	400a00 <ioctl@plt>
  400af0:	tbnz	w0, #31, 400b20 <main+0xc0>
  400af4:	add	x1, sp, #0x38
  400af8:	mov	w0, w20
  400afc:	bl	400ca8 <probe_smart_media>
  400b00:	lsr	w21, w0, #31
  400b04:	b	400aa0 <main+0x40>
  400b08:	mov	w0, #0x1                   	// #1
  400b0c:	bl	400a50 <log_get_max_level_realm@plt>
  400b10:	cmp	w0, #0x2
  400b14:	b.gt	400b64 <main+0x104>
  400b18:	mov	w21, #0x1                   	// #1
  400b1c:	b	400aa0 <main+0x40>
  400b20:	mov	w0, #0x1                   	// #1
  400b24:	bl	400a50 <log_get_max_level_realm@plt>
  400b28:	cmp	w0, #0x2
  400b2c:	b.le	400b18 <main+0xb8>
  400b30:	bl	4009b0 <__errno_location@plt>
  400b34:	ldr	w1, [x0]
  400b38:	adrp	x5, 401000 <_fini+0xc>
  400b3c:	adrp	x4, 401000 <_fini+0xc>
  400b40:	add	x5, x5, #0x78
  400b44:	add	x4, x4, #0xa0
  400b48:	adrp	x2, 401000 <_fini+0xc>
  400b4c:	mov	w3, #0x33                  	// #51
  400b50:	add	x2, x2, #0x53
  400b54:	mov	w21, #0x1                   	// #1
  400b58:	mov	w0, #0x403                 	// #1027
  400b5c:	bl	4009f0 <log_internal_realm@plt>
  400b60:	b	400aa0 <main+0x40>
  400b64:	bl	4009b0 <__errno_location@plt>
  400b68:	ldr	w1, [x0]
  400b6c:	adrp	x5, 401000 <_fini+0xc>
  400b70:	adrp	x4, 401000 <_fini+0xc>
  400b74:	add	x5, x5, #0x38
  400b78:	add	x4, x4, #0xa0
  400b7c:	adrp	x2, 401000 <_fini+0xc>
  400b80:	mov	w3, #0x2e                  	// #46
  400b84:	add	x2, x2, #0x53
  400b88:	mov	w21, #0x1                   	// #1
  400b8c:	mov	w0, #0x403                 	// #1027
  400b90:	bl	4009f0 <log_internal_realm@plt>
  400b94:	b	400aa0 <main+0x40>
  400b98:	bl	4009d0 <__stack_chk_fail@plt>

0000000000400b9c <_start>:
  400b9c:	mov	x29, #0x0                   	// #0
  400ba0:	mov	x30, #0x0                   	// #0
  400ba4:	mov	x5, x0
  400ba8:	ldr	x1, [sp]
  400bac:	add	x2, sp, #0x8
  400bb0:	mov	x6, sp
  400bb4:	movz	x0, #0x0, lsl #48
  400bb8:	movk	x0, #0x0, lsl #32
  400bbc:	movk	x0, #0x40, lsl #16
  400bc0:	movk	x0, #0xa60
  400bc4:	movz	x3, #0x0, lsl #48
  400bc8:	movk	x3, #0x0, lsl #32
  400bcc:	movk	x3, #0x40, lsl #16
  400bd0:	movk	x3, #0xf70
  400bd4:	movz	x4, #0x0, lsl #48
  400bd8:	movk	x4, #0x0, lsl #32
  400bdc:	movk	x4, #0x40, lsl #16
  400be0:	movk	x4, #0xff0
  400be4:	bl	400960 <__libc_start_main@plt>
  400be8:	bl	4009a0 <abort@plt>

0000000000400bec <call_weak_fn>:
  400bec:	adrp	x0, 411000 <__FRAME_END__+0xfcd0>
  400bf0:	ldr	x0, [x0, #4088]
  400bf4:	cbz	x0, 400bfc <call_weak_fn+0x10>
  400bf8:	b	400980 <__gmon_start__@plt>
  400bfc:	ret

0000000000400c00 <deregister_tm_clones>:
  400c00:	adrp	x0, 412000 <__TMC_END__>
  400c04:	add	x0, x0, #0x0
  400c08:	adrp	x1, 412000 <__TMC_END__>
  400c0c:	add	x1, x1, #0x0
  400c10:	cmp	x1, x0
  400c14:	b.eq	400c2c <deregister_tm_clones+0x2c>  // b.none
  400c18:	adrp	x1, 401000 <_fini+0xc>
  400c1c:	ldr	x1, [x1, #8]
  400c20:	cbz	x1, 400c2c <deregister_tm_clones+0x2c>
  400c24:	mov	x16, x1
  400c28:	br	x16
  400c2c:	ret

0000000000400c30 <register_tm_clones>:
  400c30:	adrp	x0, 412000 <__TMC_END__>
  400c34:	add	x0, x0, #0x0
  400c38:	adrp	x1, 412000 <__TMC_END__>
  400c3c:	add	x1, x1, #0x0
  400c40:	sub	x1, x1, x0
  400c44:	lsr	x2, x1, #63
  400c48:	add	x1, x2, x1, asr #3
  400c4c:	cmp	xzr, x1, asr #1
  400c50:	asr	x1, x1, #1
  400c54:	b.eq	400c6c <register_tm_clones+0x3c>  // b.none
  400c58:	adrp	x2, 401000 <_fini+0xc>
  400c5c:	ldr	x2, [x2, #16]
  400c60:	cbz	x2, 400c6c <register_tm_clones+0x3c>
  400c64:	mov	x16, x2
  400c68:	br	x16
  400c6c:	ret

0000000000400c70 <__do_global_dtors_aux>:
  400c70:	stp	x29, x30, [sp, #-32]!
  400c74:	mov	x29, sp
  400c78:	str	x19, [sp, #16]
  400c7c:	adrp	x19, 412000 <__TMC_END__>
  400c80:	ldrb	w0, [x19]
  400c84:	cbnz	w0, 400c94 <__do_global_dtors_aux+0x24>
  400c88:	bl	400c00 <deregister_tm_clones>
  400c8c:	mov	w0, #0x1                   	// #1
  400c90:	strb	w0, [x19]
  400c94:	ldr	x19, [sp, #16]
  400c98:	ldp	x29, x30, [sp], #32
  400c9c:	ret

0000000000400ca0 <frame_dummy>:
  400ca0:	b	400c30 <register_tm_clones>
  400ca4:	nop

0000000000400ca8 <probe_smart_media>:
  400ca8:	stp	x29, x30, [sp, #-64]!
  400cac:	mov	x29, sp
  400cb0:	stp	x19, x20, [sp, #16]
  400cb4:	mov	w20, w0
  400cb8:	mov	x19, x1
  400cbc:	mov	x0, #0x200                 	// #512
  400cc0:	stp	x21, x22, [sp, #32]
  400cc4:	bl	4009e0 <malloc@plt>
  400cc8:	mov	x21, x0
  400ccc:	cbz	x0, 400f4c <probe_smart_media+0x2a4>
  400cd0:	ldrb	w0, [x19]
  400cd4:	cmp	w0, #0x4
  400cd8:	b.ne	400d24 <probe_smart_media+0x7c>  // b.any
  400cdc:	str	x23, [sp, #48]
  400ce0:	ldr	w23, [x19, #16]
  400ce4:	sub	w0, w23, #0x100
  400ce8:	tst	w0, #0xfffffeff
  400cec:	b.eq	400d80 <probe_smart_media+0xd8>  // b.none
  400cf0:	mov	w0, #0x1                   	// #1
  400cf4:	bl	400a50 <log_get_max_level_realm@plt>
  400cf8:	cmp	w0, #0x6
  400cfc:	b.gt	400eb4 <probe_smart_media+0x20c>
  400d00:	ldr	x23, [sp, #48]
  400d04:	mov	w19, #0xffffffea            	// #-22
  400d08:	mov	x0, x21
  400d0c:	bl	400a10 <free@plt>
  400d10:	mov	w0, w19
  400d14:	ldp	x19, x20, [sp, #16]
  400d18:	ldp	x21, x22, [sp, #32]
  400d1c:	ldp	x29, x30, [sp], #64
  400d20:	ret
  400d24:	mov	w0, #0x1                   	// #1
  400d28:	bl	400a50 <log_get_max_level_realm@plt>
  400d2c:	cmp	w0, #0x6
  400d30:	b.le	400d04 <probe_smart_media+0x5c>
  400d34:	mov	w1, #0x16                  	// #22
  400d38:	adrp	x5, 401000 <_fini+0xc>
  400d3c:	adrp	x4, 401000 <_fini+0xc>
  400d40:	add	x5, x5, #0xd8
  400d44:	add	x4, x4, #0x160
  400d48:	adrp	x2, 401000 <_fini+0xc>
  400d4c:	add	x2, x2, #0xab
  400d50:	movk	w1, #0x4000, lsl #16
  400d54:	mov	w3, #0x35                  	// #53
  400d58:	mov	w0, #0x407                 	// #1031
  400d5c:	bl	4009f0 <log_internal_realm@plt>
  400d60:	mov	w19, w0
  400d64:	mov	x0, x21
  400d68:	bl	400a10 <free@plt>
  400d6c:	mov	w0, w19
  400d70:	ldp	x19, x20, [sp, #16]
  400d74:	ldp	x21, x22, [sp, #32]
  400d78:	ldp	x29, x30, [sp], #64
  400d7c:	ret
  400d80:	ldr	w0, [x19, #8]
  400d84:	lsr	w0, w0, #20
  400d88:	cmp	w0, #0x2
  400d8c:	b.ls	400e60 <probe_smart_media+0x1b8>  // b.plast
  400d90:	cmp	w0, #0x4
  400d94:	mov	w22, #0x18                  	// #24
  400d98:	mov	w0, #0xc                   	// #12
  400d9c:	csel	w22, w22, w0, ne  // ne = any
  400da0:	ldr	w0, [x19, #12]
  400da4:	mul	w22, w22, w0
  400da8:	cmp	w22, #0x0
  400dac:	b.le	400ef0 <probe_smart_media+0x248>
  400db0:	mov	w19, #0x0                   	// #0
  400db4:	b	400dc0 <probe_smart_media+0x118>
  400db8:	cmp	w22, w19
  400dbc:	b.le	400ef0 <probe_smart_media+0x248>
  400dc0:	mov	w2, w19
  400dc4:	mov	x1, #0x0                   	// #0
  400dc8:	mov	w0, w20
  400dcc:	bl	400970 <lseek64@plt>
  400dd0:	mov	x1, x21
  400dd4:	mov	w0, w20
  400dd8:	mov	x2, #0x200                 	// #512
  400ddc:	add	w19, w19, w23
  400de0:	bl	4009c0 <read@plt>
  400de4:	cmp	x0, #0x200
  400de8:	b.ne	400db8 <probe_smart_media+0x110>  // b.any
  400dec:	adrp	x0, 401000 <_fini+0xc>
  400df0:	add	x3, x0, #0x178
  400df4:	ldr	x2, [x21]
  400df8:	ldr	x1, [x0, #376]
  400dfc:	cmp	x2, x1
  400e00:	b.eq	400e74 <probe_smart_media+0x1cc>  // b.none
  400e04:	ldr	x0, [x0, #376]
  400e08:	add	x2, x21, #0x100
  400e0c:	ldr	x1, [x21, #256]
  400e10:	cmp	x1, x0
  400e14:	b.eq	400f38 <probe_smart_media+0x290>  // b.none
  400e18:	mov	w0, #0x1                   	// #1
  400e1c:	bl	400a50 <log_get_max_level_realm@plt>
  400e20:	cmp	w0, #0x6
  400e24:	b.le	400d00 <probe_smart_media+0x58>
  400e28:	mov	w1, #0x16                  	// #22
  400e2c:	adrp	x5, 401000 <_fini+0xc>
  400e30:	movk	w1, #0x4000, lsl #16
  400e34:	add	x5, x5, #0x128
  400e38:	adrp	x4, 401000 <_fini+0xc>
  400e3c:	adrp	x2, 401000 <_fini+0xc>
  400e40:	add	x4, x4, #0x160
  400e44:	add	x2, x2, #0xab
  400e48:	mov	w3, #0x5c                  	// #92
  400e4c:	mov	w0, #0x407                 	// #1031
  400e50:	bl	4009f0 <log_internal_realm@plt>
  400e54:	mov	w19, w0
  400e58:	ldr	x23, [sp, #48]
  400e5c:	b	400d08 <probe_smart_media+0x60>
  400e60:	cmp	w0, #0x0
  400e64:	mov	w22, #0x6                   	// #6
  400e68:	mov	w0, #0x18                  	// #24
  400e6c:	csel	w22, w22, w0, ne  // ne = any
  400e70:	b	400da0 <probe_smart_media+0xf8>
  400e74:	ldrh	w2, [x21, #8]
  400e78:	ldrh	w1, [x3, #8]
  400e7c:	cmp	w2, w1
  400e80:	b.ne	400e04 <probe_smart_media+0x15c>  // b.any
  400e84:	adrp	x0, 401000 <_fini+0xc>
  400e88:	add	x0, x0, #0x148
  400e8c:	bl	400a20 <puts@plt>
  400e90:	mov	w19, #0x0                   	// #0
  400e94:	mov	x0, x21
  400e98:	ldr	x23, [sp, #48]
  400e9c:	bl	400a10 <free@plt>
  400ea0:	mov	w0, w19
  400ea4:	ldp	x19, x20, [sp, #16]
  400ea8:	ldp	x21, x22, [sp, #32]
  400eac:	ldp	x29, x30, [sp], #64
  400eb0:	ret
  400eb4:	mov	w1, #0x16                  	// #22
  400eb8:	mov	w6, w23
  400ebc:	movk	w1, #0x4000, lsl #16
  400ec0:	adrp	x5, 401000 <_fini+0xc>
  400ec4:	adrp	x4, 401000 <_fini+0xc>
  400ec8:	add	x5, x5, #0xf8
  400ecc:	add	x4, x4, #0x160
  400ed0:	adrp	x2, 401000 <_fini+0xc>
  400ed4:	mov	w3, #0x3d                  	// #61
  400ed8:	add	x2, x2, #0xab
  400edc:	mov	w0, #0x407                 	// #1031
  400ee0:	bl	4009f0 <log_internal_realm@plt>
  400ee4:	mov	w19, w0
  400ee8:	ldr	x23, [sp, #48]
  400eec:	b	400d08 <probe_smart_media+0x60>
  400ef0:	mov	w0, #0x1                   	// #1
  400ef4:	bl	400a50 <log_get_max_level_realm@plt>
  400ef8:	cmp	w0, #0x6
  400efc:	b.le	400d00 <probe_smart_media+0x58>
  400f00:	mov	w1, #0x16                  	// #22
  400f04:	adrp	x5, 401000 <_fini+0xc>
  400f08:	movk	w1, #0x4000, lsl #16
  400f0c:	add	x5, x5, #0x118
  400f10:	adrp	x4, 401000 <_fini+0xc>
  400f14:	adrp	x2, 401000 <_fini+0xc>
  400f18:	add	x4, x4, #0x160
  400f1c:	add	x2, x2, #0xab
  400f20:	mov	w3, #0x57                  	// #87
  400f24:	mov	w0, #0x407                 	// #1031
  400f28:	bl	4009f0 <log_internal_realm@plt>
  400f2c:	mov	w19, w0
  400f30:	ldr	x23, [sp, #48]
  400f34:	b	400d08 <probe_smart_media+0x60>
  400f38:	ldrh	w1, [x2, #8]
  400f3c:	ldrh	w0, [x3, #8]
  400f40:	cmp	w1, w0
  400f44:	b.ne	400e18 <probe_smart_media+0x170>  // b.any
  400f48:	b	400e84 <probe_smart_media+0x1dc>
  400f4c:	adrp	x3, 401000 <_fini+0xc>
  400f50:	adrp	x1, 401000 <_fini+0xc>
  400f54:	add	x3, x3, #0x160
  400f58:	add	x1, x1, #0xab
  400f5c:	mov	w2, #0x32                  	// #50
  400f60:	mov	w0, #0x1                   	// #1
  400f64:	bl	400a40 <log_oom_internal@plt>
  400f68:	mov	w19, w0
  400f6c:	b	400d08 <probe_smart_media+0x60>

0000000000400f70 <__libc_csu_init>:
  400f70:	stp	x29, x30, [sp, #-64]!
  400f74:	mov	x29, sp
  400f78:	stp	x19, x20, [sp, #16]
  400f7c:	adrp	x20, 411000 <__FRAME_END__+0xfcd0>
  400f80:	add	x20, x20, #0xd18
  400f84:	stp	x21, x22, [sp, #32]
  400f88:	adrp	x21, 411000 <__FRAME_END__+0xfcd0>
  400f8c:	add	x21, x21, #0xd10
  400f90:	sub	x20, x20, x21
  400f94:	mov	w22, w0
  400f98:	stp	x23, x24, [sp, #48]
  400f9c:	mov	x23, x1
  400fa0:	mov	x24, x2
  400fa4:	bl	400920 <_init>
  400fa8:	cmp	xzr, x20, asr #3
  400fac:	b.eq	400fd8 <__libc_csu_init+0x68>  // b.none
  400fb0:	asr	x20, x20, #3
  400fb4:	mov	x19, #0x0                   	// #0
  400fb8:	ldr	x3, [x21, x19, lsl #3]
  400fbc:	mov	x2, x24
  400fc0:	add	x19, x19, #0x1
  400fc4:	mov	x1, x23
  400fc8:	mov	w0, w22
  400fcc:	blr	x3
  400fd0:	cmp	x20, x19
  400fd4:	b.ne	400fb8 <__libc_csu_init+0x48>  // b.any
  400fd8:	ldp	x19, x20, [sp, #16]
  400fdc:	ldp	x21, x22, [sp, #32]
  400fe0:	ldp	x23, x24, [sp, #48]
  400fe4:	ldp	x29, x30, [sp], #64
  400fe8:	ret
  400fec:	nop

0000000000400ff0 <__libc_csu_fini>:
  400ff0:	ret

Disassembly of section .fini:

0000000000400ff4 <_fini>:
  400ff4:	stp	x29, x30, [sp, #-16]!
  400ff8:	mov	x29, sp
  400ffc:	ldp	x29, x30, [sp], #16
  401000:	ret
