
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lsefisystab.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_cmd_lsefisystab>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	adrp	x0, 0 <grub_cmd_lsefisystab>
   8:	mov	x29, sp
   c:	ldr	x0, [x0]
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	ldr	x19, [x0]
  1c:	adrp	x0, 0 <grub_cmd_lsefisystab>
  20:	stp	x23, x24, [sp, #48]
  24:	mov	x1, x19
  28:	ldr	x0, [x0]
  2c:	stp	x25, x26, [sp, #64]
  30:	stp	x27, x28, [sp, #80]
  34:	bl	0 <grub_printf>
  38:	adrp	x0, 0 <grub_cmd_lsefisystab>
  3c:	ldr	w2, [x19, #8]
  40:	ldr	x1, [x19]
  44:	ldr	x0, [x0]
  48:	bl	0 <grub_printf>
  4c:	adrp	x0, 0 <grub_cmd_lsefisystab>
  50:	ldr	x0, [x0]
  54:	bl	0 <grub_printf>
  58:	ldr	x0, [x19, #24]
  5c:	mov	x20, x0
  60:	ldrh	w1, [x20]
  64:	cbnz	w1, a8 <grub_cmd_lsefisystab+0xa8>
  68:	sub	x0, x20, x0
  6c:	lsl	x0, x0, #1
  70:	add	x0, x0, #0x1
  74:	bl	0 <grub_malloc>
  78:	mov	x21, x0
  7c:	cbnz	x0, b0 <grub_cmd_lsefisystab+0xb0>
  80:	adrp	x0, 0 <grub_cmd_lsefisystab>
  84:	ldr	x0, [x0]
  88:	ldr	w0, [x0]
  8c:	ldp	x19, x20, [sp, #16]
  90:	ldp	x21, x22, [sp, #32]
  94:	ldp	x23, x24, [sp, #48]
  98:	ldp	x25, x26, [sp, #64]
  9c:	ldp	x27, x28, [sp, #80]
  a0:	ldp	x29, x30, [sp], #96
  a4:	ret
  a8:	add	x20, x20, #0x2
  ac:	b	60 <grub_cmd_lsefisystab+0x60>
  b0:	ldr	x5, [x19, #24]
  b4:	mov	x2, x0
  b8:	mov	w4, #0x0                   	// #0
  bc:	mov	w1, #0xffff2800            	// #-55296
  c0:	sub	x20, x20, x5
  c4:	mov	w7, #0xffff2400            	// #-56320
  c8:	mov	w8, #0x3f                  	// #63
  cc:	mov	w9, #0x2400                	// #9216
  d0:	asr	x20, x20, #1
  d4:	sub	x20, x20, #0x1
  d8:	cmn	x20, #0x1
  dc:	b.ne	14c <grub_cmd_lsefisystab+0x14c>  // b.any
  e0:	adrp	x0, 0 <grub_cmd_lsefisystab>
  e4:	mov	x1, x21
  e8:	strb	wzr, [x2]
  ec:	mov	w22, #0x0                   	// #0
  f0:	ldr	x0, [x0]
  f4:	adrp	x24, 0 <grub_cmd_lsefisystab>
  f8:	adrp	x25, 0 <grub_cmd_lsefisystab>
  fc:	adrp	x26, 0 <grub_cmd_lsefisystab>
 100:	adrp	x27, 0 <grub_cmd_lsefisystab>
 104:	bl	0 <grub_printf>
 108:	mov	x0, x21
 10c:	bl	0 <grub_free>
 110:	adrp	x0, 0 <grub_cmd_lsefisystab>
 114:	ldr	w1, [x19, #32]
 118:	ldr	x0, [x0]
 11c:	bl	0 <grub_printf>
 120:	adrp	x0, 0 <grub_cmd_lsefisystab>
 124:	ldr	x1, [x19, #104]
 128:	ldr	x0, [x0]
 12c:	bl	0 <grub_printf>
 130:	ldr	x20, [x19, #112]
 134:	add	x23, x20, #0x10
 138:	ldr	x0, [x19, #104]
 13c:	cmp	x0, w22, uxtw
 140:	b.hi	24c <grub_cmd_lsefisystab+0x24c>  // b.pmore
 144:	mov	w0, #0x0                   	// #0
 148:	b	8c <grub_cmd_lsefisystab+0x8c>
 14c:	mov	x0, x5
 150:	ldrh	w3, [x0], #2
 154:	cbz	w4, 1bc <grub_cmd_lsefisystab+0x1bc>
 158:	add	w6, w3, w7
 15c:	cmp	w6, #0x3ff
 160:	b.hi	1b0 <grub_cmd_lsefisystab+0x1b0>  // b.pmore
 164:	add	w4, w4, w1
 168:	add	x2, x2, #0x4
 16c:	add	w3, w3, w4, lsl #10
 170:	add	w3, w3, w9
 174:	lsr	w4, w3, #18
 178:	orr	w4, w4, #0xfffffff0
 17c:	sturb	w4, [x2, #-4]
 180:	ubfx	x4, x3, #12, #6
 184:	orr	w4, w4, #0xffffff80
 188:	sturb	w4, [x2, #-3]
 18c:	ubfx	x4, x3, #6, #6
 190:	and	w3, w3, #0x3f
 194:	orr	w4, w4, #0xffffff80
 198:	orr	w3, w3, #0xffffff80
 19c:	sturb	w4, [x2, #-2]
 1a0:	sturb	w3, [x2, #-1]
 1a4:	mov	w4, #0x0                   	// #0
 1a8:	mov	x5, x0
 1ac:	b	d4 <grub_cmd_lsefisystab+0xd4>
 1b0:	mov	x0, x5
 1b4:	strb	w8, [x2], #1
 1b8:	b	1a4 <grub_cmd_lsefisystab+0x1a4>
 1bc:	cmp	w3, #0x7f
 1c0:	b.hi	1cc <grub_cmd_lsefisystab+0x1cc>  // b.pmore
 1c4:	strb	w3, [x2], #1
 1c8:	b	1a8 <grub_cmd_lsefisystab+0x1a8>
 1cc:	cmp	w3, #0x7ff
 1d0:	b.hi	1f8 <grub_cmd_lsefisystab+0x1f8>  // b.pmore
 1d4:	mov	x5, x2
 1d8:	lsr	w6, w3, #6
 1dc:	orr	w6, w6, #0xffffffc0
 1e0:	and	w3, w3, #0x3f
 1e4:	orr	w3, w3, #0xffffff80
 1e8:	strb	w6, [x5], #2
 1ec:	strb	w3, [x2, #1]
 1f0:	mov	x2, x5
 1f4:	b	1a8 <grub_cmd_lsefisystab+0x1a8>
 1f8:	add	w5, w3, w1
 1fc:	cmp	w5, #0x3ff
 200:	b.ls	244 <grub_cmd_lsefisystab+0x244>  // b.plast
 204:	add	w5, w3, w7
 208:	cmp	w5, #0x3ff
 20c:	b.hi	218 <grub_cmd_lsefisystab+0x218>  // b.pmore
 210:	strb	w8, [x2], #1
 214:	b	1a8 <grub_cmd_lsefisystab+0x1a8>
 218:	lsr	w5, w3, #12
 21c:	add	x2, x2, #0x3
 220:	orr	w5, w5, #0xffffffe0
 224:	sturb	w5, [x2, #-3]
 228:	ubfx	x5, x3, #6, #6
 22c:	and	w3, w3, #0x3f
 230:	orr	w5, w5, #0xffffff80
 234:	orr	w3, w3, #0xffffff80
 238:	sturb	w5, [x2, #-2]
 23c:	sturb	w3, [x2, #-1]
 240:	b	1a8 <grub_cmd_lsefisystab+0x1a8>
 244:	mov	w4, w3
 248:	b	1a8 <grub_cmd_lsefisystab+0x1a8>
 24c:	ldr	x0, [x24]
 250:	mov	x21, x20
 254:	ldr	x1, [x20, #16]
 258:	bl	0 <grub_printf>
 25c:	ldrh	w3, [x20, #6]
 260:	ldrh	w2, [x20, #4]
 264:	ldr	w1, [x21], #8
 268:	ldr	x0, [x25]
 26c:	bl	0 <grub_printf>
 270:	ldrb	w1, [x21], #1
 274:	ldr	x0, [x26]
 278:	bl	0 <grub_printf>
 27c:	cmp	x23, x21
 280:	b.ne	270 <grub_cmd_lsefisystab+0x270>  // b.any
 284:	adrp	x0, 0 <grub_cmd_lsefisystab>
 288:	ldr	x21, [x0]
 28c:	add	x28, x21, #0x168
 290:	mov	x1, x20
 294:	mov	x0, x21
 298:	mov	x2, #0x10                  	// #16
 29c:	bl	0 <grub_memcmp>
 2a0:	cbnz	w0, 2b0 <grub_cmd_lsefisystab+0x2b0>
 2a4:	ldr	x0, [x27]
 2a8:	ldr	x1, [x21, #16]
 2ac:	bl	0 <grub_printf>
 2b0:	add	x21, x21, #0x18
 2b4:	cmp	x28, x21
 2b8:	b.ne	290 <grub_cmd_lsefisystab+0x290>  // b.any
 2bc:	adrp	x0, 0 <grub_cmd_lsefisystab>
 2c0:	add	x20, x20, #0x18
 2c4:	add	w22, w22, #0x1
 2c8:	add	x23, x23, #0x18
 2cc:	ldr	x0, [x0]
 2d0:	bl	0 <grub_printf>
 2d4:	b	138 <grub_cmd_lsefisystab+0x138>
	...

0000000000000348 <grub_mod_init>:
 348:	stp	x29, x30, [sp, #-16]!
 34c:	adrp	x0, 0 <grub_cmd_lsefisystab>
 350:	mov	w4, #0x0                   	// #0
 354:	mov	x29, sp
 358:	ldr	x3, [x0]
 35c:	adrp	x0, 0 <grub_cmd_lsefisystab>
 360:	ldr	x2, [x0]
 364:	adrp	x0, 0 <grub_cmd_lsefisystab>
 368:	ldr	x1, [x0]
 36c:	adrp	x0, 0 <grub_cmd_lsefisystab>
 370:	ldr	x0, [x0]
 374:	bl	0 <grub_register_command_prio>
 378:	adrp	x1, 0 <grub_cmd_lsefisystab>
 37c:	ldr	x1, [x1]
 380:	str	x0, [x1]
 384:	ldp	x29, x30, [sp], #16
 388:	ret
 38c:	nop
	...

00000000000003b8 <grub_mod_fini>:
 3b8:	adrp	x0, 0 <grub_cmd_lsefisystab>
 3bc:	ldr	x0, [x0]
 3c0:	ldr	x0, [x0]
 3c4:	b	0 <grub_unregister_command>
	...
