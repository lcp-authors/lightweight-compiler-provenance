
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ifconfig_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401a60 <.init>:
  401a60:	stp	x29, x30, [sp, #-16]!
  401a64:	mov	x29, sp
  401a68:	bl	4020d8 <ferror@plt+0x1e8>
  401a6c:	ldp	x29, x30, [sp], #16
  401a70:	ret

Disassembly of section .plt:

0000000000401a80 <memcpy@plt-0x20>:
  401a80:	stp	x16, x30, [sp, #-16]!
  401a84:	adrp	x16, 425000 <argp_error@@Base+0x183a0>
  401a88:	ldr	x17, [x16, #4088]
  401a8c:	add	x16, x16, #0xff8
  401a90:	br	x17
  401a94:	nop
  401a98:	nop
  401a9c:	nop

0000000000401aa0 <memcpy@plt>:
  401aa0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401aa4:	ldr	x17, [x16]
  401aa8:	add	x16, x16, #0x0
  401aac:	br	x17

0000000000401ab0 <memmove@plt>:
  401ab0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #8]
  401ab8:	add	x16, x16, #0x8
  401abc:	br	x17

0000000000401ac0 <gai_strerror@plt>:
  401ac0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #16]
  401ac8:	add	x16, x16, #0x10
  401acc:	br	x17

0000000000401ad0 <freeaddrinfo@plt>:
  401ad0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #24]
  401ad8:	add	x16, x16, #0x18
  401adc:	br	x17

0000000000401ae0 <fwrite_unlocked@plt>:
  401ae0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #32]
  401ae8:	add	x16, x16, #0x20
  401aec:	br	x17

0000000000401af0 <strtoul@plt>:
  401af0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #40]
  401af8:	add	x16, x16, #0x28
  401afc:	br	x17

0000000000401b00 <strlen@plt>:
  401b00:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #48]
  401b08:	add	x16, x16, #0x30
  401b0c:	br	x17

0000000000401b10 <fputs@plt>:
  401b10:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #56]
  401b18:	add	x16, x16, #0x38
  401b1c:	br	x17

0000000000401b20 <exit@plt>:
  401b20:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #64]
  401b28:	add	x16, x16, #0x40
  401b2c:	br	x17

0000000000401b30 <error@plt>:
  401b30:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #72]
  401b38:	add	x16, x16, #0x48
  401b3c:	br	x17

0000000000401b40 <flockfile@plt>:
  401b40:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #80]
  401b48:	add	x16, x16, #0x50
  401b4c:	br	x17

0000000000401b50 <getnameinfo@plt>:
  401b50:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #88]
  401b58:	add	x16, x16, #0x58
  401b5c:	br	x17

0000000000401b60 <putc@plt>:
  401b60:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #96]
  401b68:	add	x16, x16, #0x60
  401b6c:	br	x17

0000000000401b70 <fputc@plt>:
  401b70:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #104]
  401b78:	add	x16, x16, #0x68
  401b7c:	br	x17

0000000000401b80 <qsort@plt>:
  401b80:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #112]
  401b88:	add	x16, x16, #0x70
  401b8c:	br	x17

0000000000401b90 <inet_ntoa@plt>:
  401b90:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #120]
  401b98:	add	x16, x16, #0x78
  401b9c:	br	x17

0000000000401ba0 <__ctype_tolower_loc@plt>:
  401ba0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #128]
  401ba8:	add	x16, x16, #0x80
  401bac:	br	x17

0000000000401bb0 <fileno@plt>:
  401bb0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #136]
  401bb8:	add	x16, x16, #0x88
  401bbc:	br	x17

0000000000401bc0 <fclose@plt>:
  401bc0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #144]
  401bc8:	add	x16, x16, #0x90
  401bcc:	br	x17

0000000000401bd0 <fopen@plt>:
  401bd0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #152]
  401bd8:	add	x16, x16, #0x98
  401bdc:	br	x17

0000000000401be0 <malloc@plt>:
  401be0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #160]
  401be8:	add	x16, x16, #0xa0
  401bec:	br	x17

0000000000401bf0 <funlockfile@plt>:
  401bf0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #168]
  401bf8:	add	x16, x16, #0xa8
  401bfc:	br	x17

0000000000401c00 <strncmp@plt>:
  401c00:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #176]
  401c08:	add	x16, x16, #0xb0
  401c0c:	br	x17

0000000000401c10 <__libc_start_main@plt>:
  401c10:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #184]
  401c18:	add	x16, x16, #0xb8
  401c1c:	br	x17

0000000000401c20 <memset@plt>:
  401c20:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #192]
  401c28:	add	x16, x16, #0xc0
  401c2c:	br	x17

0000000000401c30 <sleep@plt>:
  401c30:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #200]
  401c38:	add	x16, x16, #0xc8
  401c3c:	br	x17

0000000000401c40 <strerror_r@plt>:
  401c40:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #208]
  401c48:	add	x16, x16, #0xd0
  401c4c:	br	x17

0000000000401c50 <calloc@plt>:
  401c50:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #216]
  401c58:	add	x16, x16, #0xd8
  401c5c:	br	x17

0000000000401c60 <strcasecmp@plt>:
  401c60:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #224]
  401c68:	add	x16, x16, #0xe0
  401c6c:	br	x17

0000000000401c70 <realloc@plt>:
  401c70:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #232]
  401c78:	add	x16, x16, #0xe8
  401c7c:	br	x17

0000000000401c80 <strdup@plt>:
  401c80:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #240]
  401c88:	add	x16, x16, #0xf0
  401c8c:	br	x17

0000000000401c90 <strerror@plt>:
  401c90:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #248]
  401c98:	add	x16, x16, #0xf8
  401c9c:	br	x17

0000000000401ca0 <close@plt>:
  401ca0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #256]
  401ca8:	add	x16, x16, #0x100
  401cac:	br	x17

0000000000401cb0 <strrchr@plt>:
  401cb0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401cb4:	ldr	x17, [x16, #264]
  401cb8:	add	x16, x16, #0x108
  401cbc:	br	x17

0000000000401cc0 <__gmon_start__@plt>:
  401cc0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401cc4:	ldr	x17, [x16, #272]
  401cc8:	add	x16, x16, #0x110
  401ccc:	br	x17

0000000000401cd0 <abort@plt>:
  401cd0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401cd4:	ldr	x17, [x16, #280]
  401cd8:	add	x16, x16, #0x118
  401cdc:	br	x17

0000000000401ce0 <__overflow@plt>:
  401ce0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ce4:	ldr	x17, [x16, #288]
  401ce8:	add	x16, x16, #0x120
  401cec:	br	x17

0000000000401cf0 <strcmp@plt>:
  401cf0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401cf4:	ldr	x17, [x16, #296]
  401cf8:	add	x16, x16, #0x128
  401cfc:	br	x17

0000000000401d00 <__ctype_b_loc@plt>:
  401d00:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401d04:	ldr	x17, [x16, #304]
  401d08:	add	x16, x16, #0x130
  401d0c:	br	x17

0000000000401d10 <strtol@plt>:
  401d10:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401d14:	ldr	x17, [x16, #312]
  401d18:	add	x16, x16, #0x138
  401d1c:	br	x17

0000000000401d20 <fread@plt>:
  401d20:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401d24:	ldr	x17, [x16, #320]
  401d28:	add	x16, x16, #0x140
  401d2c:	br	x17

0000000000401d30 <free@plt>:
  401d30:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401d34:	ldr	x17, [x16, #328]
  401d38:	add	x16, x16, #0x148
  401d3c:	br	x17

0000000000401d40 <mempcpy@plt>:
  401d40:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401d44:	ldr	x17, [x16, #336]
  401d48:	add	x16, x16, #0x150
  401d4c:	br	x17

0000000000401d50 <strncasecmp@plt>:
  401d50:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401d54:	ldr	x17, [x16, #344]
  401d58:	add	x16, x16, #0x158
  401d5c:	br	x17

0000000000401d60 <strndup@plt>:
  401d60:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401d64:	ldr	x17, [x16, #352]
  401d68:	add	x16, x16, #0x160
  401d6c:	br	x17

0000000000401d70 <strchr@plt>:
  401d70:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401d74:	ldr	x17, [x16, #360]
  401d78:	add	x16, x16, #0x168
  401d7c:	br	x17

0000000000401d80 <fwrite@plt>:
  401d80:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401d84:	ldr	x17, [x16, #368]
  401d88:	add	x16, x16, #0x170
  401d8c:	br	x17

0000000000401d90 <socket@plt>:
  401d90:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401d94:	ldr	x17, [x16, #376]
  401d98:	add	x16, x16, #0x178
  401d9c:	br	x17

0000000000401da0 <ftello@plt>:
  401da0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401da4:	ldr	x17, [x16, #384]
  401da8:	add	x16, x16, #0x180
  401dac:	br	x17

0000000000401db0 <strcpy@plt>:
  401db0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401db4:	ldr	x17, [x16, #392]
  401db8:	add	x16, x16, #0x188
  401dbc:	br	x17

0000000000401dc0 <getaddrinfo@plt>:
  401dc0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401dc4:	ldr	x17, [x16, #400]
  401dc8:	add	x16, x16, #0x190
  401dcc:	br	x17

0000000000401dd0 <memchr@plt>:
  401dd0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401dd4:	ldr	x17, [x16, #408]
  401dd8:	add	x16, x16, #0x198
  401ddc:	br	x17

0000000000401de0 <inet_aton@plt>:
  401de0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401de4:	ldr	x17, [x16, #416]
  401de8:	add	x16, x16, #0x1a0
  401dec:	br	x17

0000000000401df0 <__fxstat@plt>:
  401df0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401df4:	ldr	x17, [x16, #424]
  401df8:	add	x16, x16, #0x1a8
  401dfc:	br	x17

0000000000401e00 <if_nametoindex@plt>:
  401e00:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401e04:	ldr	x17, [x16, #432]
  401e08:	add	x16, x16, #0x1b0
  401e0c:	br	x17

0000000000401e10 <strchrnul@plt>:
  401e10:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401e14:	ldr	x17, [x16, #440]
  401e18:	add	x16, x16, #0x1b8
  401e1c:	br	x17

0000000000401e20 <strstr@plt>:
  401e20:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401e24:	ldr	x17, [x16, #448]
  401e28:	add	x16, x16, #0x1c0
  401e2c:	br	x17

0000000000401e30 <__isoc99_sscanf@plt>:
  401e30:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401e34:	ldr	x17, [x16, #456]
  401e38:	add	x16, x16, #0x1c8
  401e3c:	br	x17

0000000000401e40 <vsnprintf@plt>:
  401e40:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401e44:	ldr	x17, [x16, #464]
  401e48:	add	x16, x16, #0x1d0
  401e4c:	br	x17

0000000000401e50 <fputs_unlocked@plt>:
  401e50:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401e54:	ldr	x17, [x16, #472]
  401e58:	add	x16, x16, #0x1d8
  401e5c:	br	x17

0000000000401e60 <strncpy@plt>:
  401e60:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401e64:	ldr	x17, [x16, #480]
  401e68:	add	x16, x16, #0x1e0
  401e6c:	br	x17

0000000000401e70 <vfprintf@plt>:
  401e70:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401e74:	ldr	x17, [x16, #488]
  401e78:	add	x16, x16, #0x1e8
  401e7c:	br	x17

0000000000401e80 <printf@plt>:
  401e80:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401e84:	ldr	x17, [x16, #496]
  401e88:	add	x16, x16, #0x1f0
  401e8c:	br	x17

0000000000401e90 <__assert_fail@plt>:
  401e90:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401e94:	ldr	x17, [x16, #504]
  401e98:	add	x16, x16, #0x1f8
  401e9c:	br	x17

0000000000401ea0 <__errno_location@plt>:
  401ea0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ea4:	ldr	x17, [x16, #512]
  401ea8:	add	x16, x16, #0x200
  401eac:	br	x17

0000000000401eb0 <getenv@plt>:
  401eb0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401eb4:	ldr	x17, [x16, #520]
  401eb8:	add	x16, x16, #0x208
  401ebc:	br	x17

0000000000401ec0 <__getdelim@plt>:
  401ec0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ec4:	ldr	x17, [x16, #528]
  401ec8:	add	x16, x16, #0x210
  401ecc:	br	x17

0000000000401ed0 <fprintf@plt>:
  401ed0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ed4:	ldr	x17, [x16, #536]
  401ed8:	add	x16, x16, #0x218
  401edc:	br	x17

0000000000401ee0 <ioctl@plt>:
  401ee0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ee4:	ldr	x17, [x16, #544]
  401ee8:	add	x16, x16, #0x220
  401eec:	br	x17

0000000000401ef0 <ferror@plt>:
  401ef0:	adrp	x16, 426000 <memcpy@GLIBC_2.17>
  401ef4:	ldr	x17, [x16, #552]
  401ef8:	add	x16, x16, #0x228
  401efc:	br	x17

Disassembly of section .text:

0000000000401f00 <argp_parse@@Base-0x60a8>:
  401f00:	stp	x29, x30, [sp, #-96]!
  401f04:	mov	x29, sp
  401f08:	stp	x19, x20, [sp, #16]
  401f0c:	mov	w20, w0
  401f10:	mov	x19, x1
  401f14:	ldr	x0, [x1]
  401f18:	bl	408d38 <argp_parse@@Base+0xd90>
  401f1c:	mov	x1, x19
  401f20:	mov	w0, w20
  401f24:	bl	403c18 <ferror@plt+0x1d28>
  401f28:	mov	w2, #0x0                   	// #0
  401f2c:	mov	w1, #0x1                   	// #1
  401f30:	mov	w0, #0x2                   	// #2
  401f34:	bl	401d90 <socket@plt>
  401f38:	stp	x21, x22, [sp, #32]
  401f3c:	stp	x23, x24, [sp, #48]
  401f40:	tbnz	w0, #31, 40205c <ferror@plt+0x16c>
  401f44:	adrp	x21, 427000 <argp_error@@Base+0x1a3a0>
  401f48:	adrp	x20, 427000 <argp_error@@Base+0x1a3a0>
  401f4c:	mov	w23, w0
  401f50:	mov	w1, #0x58                  	// #88
  401f54:	ldr	x19, [x21, #1536]
  401f58:	stp	x27, x28, [sp, #80]
  401f5c:	ldr	w0, [x20, #1552]
  401f60:	smaddl	x0, w0, w1, x19
  401f64:	cmp	x19, x0
  401f68:	b.cs	402054 <ferror@plt+0x164>  // b.hs, b.nlast
  401f6c:	adrp	x24, 40e000 <argp_error@@Base+0x13a0>
  401f70:	add	x20, x20, #0x610
  401f74:	add	x24, x24, #0xad8
  401f78:	mov	w27, #0x0                   	// #0
  401f7c:	stp	x25, x26, [sp, #64]
  401f80:	adrp	x25, 427000 <argp_error@@Base+0x1a3a0>
  401f84:	adrp	x26, 427000 <argp_error@@Base+0x1a3a0>
  401f88:	add	x22, x25, #0x62c
  401f8c:	b	401fd0 <ferror@plt+0xe0>
  401f90:	ldr	x0, [x19]
  401f94:	bl	401e00 <if_nametoindex@plt>
  401f98:	cbz	w0, 401fb4 <ferror@plt+0xc4>
  401f9c:	add	w28, w27, #0x1
  401fa0:	cbnz	w27, 40201c <ferror@plt+0x12c>
  401fa4:	ldr	x1, [x19]
  401fa8:	mov	w27, w28
  401fac:	mov	x0, x24
  401fb0:	bl	401e80 <printf@plt>
  401fb4:	ldr	x0, [x21, #1536]
  401fb8:	mov	w2, #0x58                  	// #88
  401fbc:	ldr	w1, [x20]
  401fc0:	add	x19, x19, #0x58
  401fc4:	smaddl	x1, w1, w2, x0
  401fc8:	cmp	x19, x1
  401fcc:	b.cs	40202c <ferror@plt+0x13c>  // b.hs, b.nlast
  401fd0:	ldr	w0, [x22]
  401fd4:	cbnz	w0, 401f90 <ferror@plt+0xa0>
  401fd8:	mov	x1, x19
  401fdc:	mov	w0, w23
  401fe0:	bl	402d98 <ferror@plt+0xea8>
  401fe4:	mov	w27, w0
  401fe8:	cbz	w0, 401fb4 <ferror@plt+0xc4>
  401fec:	ldr	w0, [x22]
  401ff0:	cbnz	w0, 40203c <ferror@plt+0x14c>
  401ff4:	ldp	x25, x26, [sp, #64]
  401ff8:	mov	w0, w23
  401ffc:	bl	401ca0 <close@plt>
  402000:	mov	w0, w27
  402004:	ldp	x19, x20, [sp, #16]
  402008:	ldp	x21, x22, [sp, #32]
  40200c:	ldp	x23, x24, [sp, #48]
  402010:	ldp	x27, x28, [sp, #80]
  402014:	ldp	x29, x30, [sp], #96
  402018:	ret
  40201c:	ldr	x1, [x26, #1256]
  402020:	mov	w0, #0x20                  	// #32
  402024:	bl	401b60 <putc@plt>
  402028:	b	401fa4 <ferror@plt+0xb4>
  40202c:	ldr	w0, [x25, #1580]
  402030:	cmp	w0, #0x0
  402034:	ccmp	w27, #0x0, #0x4, ne  // ne = any
  402038:	b.eq	401ff4 <ferror@plt+0x104>  // b.none
  40203c:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  402040:	mov	w0, #0xa                   	// #10
  402044:	ldr	x1, [x1, #1256]
  402048:	bl	401b60 <putc@plt>
  40204c:	ldp	x25, x26, [sp, #64]
  402050:	b	401ff8 <ferror@plt+0x108>
  402054:	mov	w27, #0x0                   	// #0
  402058:	b	401ff8 <ferror@plt+0x108>
  40205c:	stp	x25, x26, [sp, #64]
  402060:	stp	x27, x28, [sp, #80]
  402064:	bl	401ea0 <__errno_location@plt>
  402068:	mov	x1, x0
  40206c:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402070:	add	x2, x2, #0x588
  402074:	mov	w0, #0x0                   	// #0
  402078:	ldr	w1, [x1]
  40207c:	bl	401b30 <error@plt>
  402080:	mov	w0, #0x1                   	// #1
  402084:	bl	401b20 <exit@plt>
  402088:	mov	x29, #0x0                   	// #0
  40208c:	mov	x30, #0x0                   	// #0
  402090:	mov	x5, x0
  402094:	ldr	x1, [sp]
  402098:	add	x2, sp, #0x8
  40209c:	mov	x6, sp
  4020a0:	movz	x0, #0x0, lsl #48
  4020a4:	movk	x0, #0x0, lsl #32
  4020a8:	movk	x0, #0x40, lsl #16
  4020ac:	movk	x0, #0x1f00
  4020b0:	movz	x3, #0x0, lsl #48
  4020b4:	movk	x3, #0x0, lsl #32
  4020b8:	movk	x3, #0x40, lsl #16
  4020bc:	movk	x3, #0xe4d8
  4020c0:	movz	x4, #0x0, lsl #48
  4020c4:	movk	x4, #0x0, lsl #32
  4020c8:	movk	x4, #0x40, lsl #16
  4020cc:	movk	x4, #0xe558
  4020d0:	bl	401c10 <__libc_start_main@plt>
  4020d4:	bl	401cd0 <abort@plt>
  4020d8:	adrp	x0, 425000 <argp_error@@Base+0x183a0>
  4020dc:	ldr	x0, [x0, #4064]
  4020e0:	cbz	x0, 4020e8 <ferror@plt+0x1f8>
  4020e4:	b	401cc0 <__gmon_start__@plt>
  4020e8:	ret
  4020ec:	nop
  4020f0:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  4020f4:	add	x0, x0, #0x4d8
  4020f8:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  4020fc:	add	x1, x1, #0x4d8
  402100:	cmp	x1, x0
  402104:	b.eq	40211c <ferror@plt+0x22c>  // b.none
  402108:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  40210c:	ldr	x1, [x1, #1400]
  402110:	cbz	x1, 40211c <ferror@plt+0x22c>
  402114:	mov	x16, x1
  402118:	br	x16
  40211c:	ret
  402120:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  402124:	add	x0, x0, #0x4d8
  402128:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  40212c:	add	x1, x1, #0x4d8
  402130:	sub	x1, x1, x0
  402134:	lsr	x2, x1, #63
  402138:	add	x1, x2, x1, asr #3
  40213c:	cmp	xzr, x1, asr #1
  402140:	asr	x1, x1, #1
  402144:	b.eq	40215c <ferror@plt+0x26c>  // b.none
  402148:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  40214c:	ldr	x2, [x2, #1408]
  402150:	cbz	x2, 40215c <ferror@plt+0x26c>
  402154:	mov	x16, x2
  402158:	br	x16
  40215c:	ret
  402160:	stp	x29, x30, [sp, #-32]!
  402164:	mov	x29, sp
  402168:	str	x19, [sp, #16]
  40216c:	adrp	x19, 427000 <argp_error@@Base+0x1a3a0>
  402170:	ldrb	w0, [x19, #1272]
  402174:	cbnz	w0, 402184 <ferror@plt+0x294>
  402178:	bl	4020f0 <ferror@plt+0x200>
  40217c:	mov	w0, #0x1                   	// #1
  402180:	strb	w0, [x19, #1272]
  402184:	ldr	x19, [sp, #16]
  402188:	ldp	x29, x30, [sp], #32
  40218c:	ret
  402190:	b	402120 <ferror@plt+0x230>
  402194:	nop
  402198:	ldr	x0, [x0]
  40219c:	ldr	x1, [x1]
  4021a0:	b	401cf0 <strcmp@plt>
  4021a4:	nop
  4021a8:	stp	x29, x30, [sp, #-96]!
  4021ac:	mov	x29, sp
  4021b0:	stp	x19, x20, [sp, #16]
  4021b4:	adrp	x20, 426000 <argp_error@@Base+0x193a0>
  4021b8:	stp	x25, x26, [sp, #64]
  4021bc:	mov	x26, x0
  4021c0:	ldr	x0, [x20, #576]
  4021c4:	stp	x21, x22, [sp, #32]
  4021c8:	stp	x23, x24, [sp, #48]
  4021cc:	add	x23, x20, #0x240
  4021d0:	cbz	x0, 4023d8 <ferror@plt+0x4e8>
  4021d4:	mov	x19, x23
  4021d8:	mov	x24, #0x0                   	// #0
  4021dc:	nop
  4021e0:	ldr	w1, [x19, #12]
  4021e4:	cbnz	w1, 4021f4 <ferror@plt+0x304>
  4021e8:	add	x24, x24, #0x1
  4021ec:	bl	401b00 <strlen@plt>
  4021f0:	add	x24, x0, x24
  4021f4:	ldr	x0, [x19, #16]!
  4021f8:	cbnz	x0, 4021e0 <ferror@plt+0x2f0>
  4021fc:	add	x0, x24, #0xa0
  402200:	bl	409530 <argp_parse@@Base+0x1588>
  402204:	ldr	x20, [x20, #576]
  402208:	mov	x22, x0
  40220c:	add	x21, x0, #0xa0
  402210:	cbz	x20, 4023f4 <ferror@plt+0x504>
  402214:	mov	x25, #0x0                   	// #0
  402218:	str	x27, [sp, #80]
  40221c:	mov	w27, #0x48                  	// #72
  402220:	b	40222c <ferror@plt+0x33c>
  402224:	ldr	x20, [x23, #16]!
  402228:	cbz	x20, 402298 <ferror@plt+0x3a8>
  40222c:	ldr	w0, [x23, #12]
  402230:	cbnz	w0, 402224 <ferror@plt+0x334>
  402234:	ldr	w0, [x23, #8]
  402238:	tst	w0, w27
  40223c:	b.ne	402224 <ferror@plt+0x334>  // b.any
  402240:	str	x21, [x22, x25, lsl #3]
  402244:	add	x25, x25, #0x1
  402248:	ldrb	w0, [x20]
  40224c:	cmp	w0, #0x4e
  402250:	b.ne	402264 <ferror@plt+0x374>  // b.any
  402254:	ldrb	w1, [x20, #1]
  402258:	add	x0, x20, #0x2
  40225c:	cmp	w1, #0x4f
  402260:	csel	x20, x0, x20, eq  // eq = none
  402264:	ldrb	w19, [x20]
  402268:	cbz	w19, 4023c8 <ferror@plt+0x4d8>
  40226c:	bl	401ba0 <__ctype_tolower_loc@plt>
  402270:	ldr	x1, [x0]
  402274:	mov	x2, x21
  402278:	ldr	w0, [x1, x19, lsl #2]
  40227c:	strb	w0, [x2], #1
  402280:	ldrb	w19, [x20, #1]!
  402284:	cbnz	w19, 402278 <ferror@plt+0x388>
  402288:	mov	x21, x2
  40228c:	strb	wzr, [x21], #1
  402290:	ldr	x20, [x23, #16]!
  402294:	cbnz	x20, 40222c <ferror@plt+0x33c>
  402298:	ldr	x27, [sp, #80]
  40229c:	add	x24, x24, x25, lsl #1
  4022a0:	adrp	x3, 402000 <ferror@plt+0x110>
  4022a4:	add	x24, x24, #0x24
  4022a8:	add	x3, x3, #0x198
  4022ac:	mov	x1, x25
  4022b0:	mov	x0, x22
  4022b4:	mov	x2, #0x8                   	// #8
  4022b8:	bl	401b80 <qsort@plt>
  4022bc:	cbz	x26, 4023b4 <ferror@plt+0x4c4>
  4022c0:	mov	x0, x26
  4022c4:	bl	401b00 <strlen@plt>
  4022c8:	add	x0, x0, x24
  4022cc:	bl	409530 <argp_parse@@Base+0x1588>
  4022d0:	mov	x1, x26
  4022d4:	mov	x23, x0
  4022d8:	bl	401db0 <strcpy@plt>
  4022dc:	mov	x0, x26
  4022e0:	bl	401b00 <strlen@plt>
  4022e4:	add	x20, x23, x0
  4022e8:	cbz	x25, 402370 <ferror@plt+0x480>
  4022ec:	sub	x24, x22, #0x8
  4022f0:	mov	x19, #0x0                   	// #0
  4022f4:	mov	w26, #0x202c                	// #8236
  4022f8:	cbz	x19, 40235c <ferror@plt+0x46c>
  4022fc:	ldr	x21, [x24, x19, lsl #3]
  402300:	mov	x0, x21
  402304:	bl	401b00 <strlen@plt>
  402308:	mov	x2, x0
  40230c:	mov	x0, x21
  402310:	ldr	x21, [x22, x19, lsl #3]
  402314:	mov	x1, x21
  402318:	bl	401c00 <strncmp@plt>
  40231c:	add	x2, x19, #0x1
  402320:	cbz	w0, 402364 <ferror@plt+0x474>
  402324:	mov	x1, x21
  402328:	mov	x0, x20
  40232c:	bl	401db0 <strcpy@plt>
  402330:	mov	x0, x21
  402334:	bl	401b00 <strlen@plt>
  402338:	add	x20, x20, x0
  40233c:	add	x2, x19, #0x1
  402340:	mov	x0, x20
  402344:	cmp	x2, x25
  402348:	b.cs	402364 <ferror@plt+0x474>  // b.hs, b.nlast
  40234c:	strh	w26, [x0], #2
  402350:	mov	x19, x2
  402354:	mov	x20, x0
  402358:	cbnz	x19, 4022fc <ferror@plt+0x40c>
  40235c:	ldr	x21, [x22]
  402360:	b	402324 <ferror@plt+0x434>
  402364:	mov	x19, x2
  402368:	cmp	x2, x25
  40236c:	b.ne	4022f8 <ferror@plt+0x408>  // b.any
  402370:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  402374:	add	x1, x1, #0x598
  402378:	mov	x0, x22
  40237c:	ldp	x2, x3, [x1]
  402380:	stp	x2, x3, [x20]
  402384:	ldr	w2, [x1, #32]
  402388:	ldp	x4, x5, [x1, #16]
  40238c:	stp	x4, x5, [x20, #16]
  402390:	str	w2, [x20, #32]
  402394:	bl	401d30 <free@plt>
  402398:	mov	x0, x23
  40239c:	ldp	x19, x20, [sp, #16]
  4023a0:	ldp	x21, x22, [sp, #32]
  4023a4:	ldp	x23, x24, [sp, #48]
  4023a8:	ldp	x25, x26, [sp, #64]
  4023ac:	ldp	x29, x30, [sp], #96
  4023b0:	ret
  4023b4:	mov	x0, x24
  4023b8:	bl	409530 <argp_parse@@Base+0x1588>
  4023bc:	mov	x20, x0
  4023c0:	mov	x23, x0
  4023c4:	b	4022e8 <ferror@plt+0x3f8>
  4023c8:	mov	x2, x21
  4023cc:	mov	x21, x2
  4023d0:	strb	wzr, [x21], #1
  4023d4:	b	402290 <ferror@plt+0x3a0>
  4023d8:	mov	x0, #0xa0                  	// #160
  4023dc:	bl	409530 <argp_parse@@Base+0x1588>
  4023e0:	ldr	x20, [x20, #576]
  4023e4:	mov	x22, x0
  4023e8:	add	x21, x0, #0xa0
  4023ec:	mov	x24, #0x0                   	// #0
  4023f0:	cbnz	x20, 402214 <ferror@plt+0x324>
  4023f4:	mov	x25, #0x0                   	// #0
  4023f8:	b	4022a0 <ferror@plt+0x3b0>
  4023fc:	nop
  402400:	stp	x29, x30, [sp, #-64]!
  402404:	mov	x29, sp
  402408:	stp	x19, x20, [sp, #16]
  40240c:	adrp	x19, 426000 <argp_error@@Base+0x193a0>
  402410:	ldr	x20, [x19, #576]
  402414:	cbz	x20, 402460 <ferror@plt+0x570>
  402418:	add	x19, x19, #0x240
  40241c:	stp	x21, x22, [sp, #32]
  402420:	mov	x22, x1
  402424:	b	402430 <ferror@plt+0x540>
  402428:	ldr	x20, [x19, #16]!
  40242c:	cbz	x20, 402470 <ferror@plt+0x580>
  402430:	ldr	w2, [x19, #8]
  402434:	cmp	w2, w0
  402438:	b.ne	402428 <ferror@plt+0x538>  // b.any
  40243c:	ldr	w2, [x19, #12]
  402440:	cbnz	w2, 402428 <ferror@plt+0x538>
  402444:	str	x23, [sp, #48]
  402448:	ldr	x23, [x19]
  40244c:	cbnz	x22, 4024a8 <ferror@plt+0x5b8>
  402450:	ldp	x21, x22, [sp, #32]
  402454:	cmp	x23, #0x0
  402458:	csel	x20, x20, x23, eq  // eq = none
  40245c:	ldr	x23, [sp, #48]
  402460:	mov	x0, x20
  402464:	ldp	x19, x20, [sp, #16]
  402468:	ldp	x29, x30, [sp], #64
  40246c:	ret
  402470:	mov	x0, x20
  402474:	ldp	x19, x20, [sp, #16]
  402478:	ldp	x21, x22, [sp, #32]
  40247c:	ldp	x29, x30, [sp], #64
  402480:	ret
  402484:	ldurb	w1, [x21, #-1]
  402488:	cmp	w1, #0x3a
  40248c:	b.ne	4024c0 <ferror@plt+0x5d0>  // b.any
  402490:	bl	401b00 <strlen@plt>
  402494:	ldrb	w0, [x21, x0]
  402498:	cmp	w0, #0x3a
  40249c:	b.ne	4024c0 <ferror@plt+0x5d0>  // b.any
  4024a0:	ldr	x23, [x19, #16]!
  4024a4:	cbz	x23, 4024c4 <ferror@plt+0x5d4>
  4024a8:	mov	x1, x23
  4024ac:	mov	x0, x22
  4024b0:	bl	401e20 <strstr@plt>
  4024b4:	mov	x21, x0
  4024b8:	mov	x0, x23
  4024bc:	cbnz	x21, 402484 <ferror@plt+0x594>
  4024c0:	mov	x20, x23
  4024c4:	mov	x0, x20
  4024c8:	ldp	x19, x20, [sp, #16]
  4024cc:	ldp	x21, x22, [sp, #32]
  4024d0:	ldr	x23, [sp, #48]
  4024d4:	ldp	x29, x30, [sp], #64
  4024d8:	ret
  4024dc:	nop
  4024e0:	stp	x29, x30, [sp, #-64]!
  4024e4:	cmp	x1, #0x1
  4024e8:	mov	x29, sp
  4024ec:	stp	x19, x20, [sp, #16]
  4024f0:	mov	x20, x1
  4024f4:	stp	x21, x22, [sp, #32]
  4024f8:	mov	x22, x2
  4024fc:	mov	x21, x0
  402500:	str	x23, [sp, #48]
  402504:	mov	w23, #0x0                   	// #0
  402508:	b.ls	402538 <ferror@plt+0x648>  // b.plast
  40250c:	ldrb	w1, [x0]
  402510:	cmp	w1, #0x2d
  402514:	b.eq	402588 <ferror@plt+0x698>  // b.none
  402518:	cmp	x20, #0x2
  40251c:	b.eq	402538 <ferror@plt+0x648>  // b.none
  402520:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  402524:	mov	x2, #0x2                   	// #2
  402528:	add	x1, x1, #0x5c0
  40252c:	bl	401d50 <strncasecmp@plt>
  402530:	cbz	w0, 402598 <ferror@plt+0x6a8>
  402534:	nop
  402538:	adrp	x0, 426000 <argp_error@@Base+0x193a0>
  40253c:	add	x19, x0, #0x240
  402540:	ldr	x0, [x0, #576]
  402544:	cbnz	x0, 402554 <ferror@plt+0x664>
  402548:	b	4025a8 <ferror@plt+0x6b8>
  40254c:	ldr	x0, [x19, #16]!
  402550:	cbz	x0, 402574 <ferror@plt+0x684>
  402554:	mov	x2, x20
  402558:	mov	x1, x21
  40255c:	bl	401d50 <strncasecmp@plt>
  402560:	cbnz	w0, 40254c <ferror@plt+0x65c>
  402564:	ldr	w0, [x19, #12]
  402568:	eor	w0, w0, w23
  40256c:	str	w0, [x22]
  402570:	ldr	w0, [x19, #8]
  402574:	ldp	x19, x20, [sp, #16]
  402578:	ldp	x21, x22, [sp, #32]
  40257c:	ldr	x23, [sp, #48]
  402580:	ldp	x29, x30, [sp], #64
  402584:	ret
  402588:	add	x21, x0, #0x1
  40258c:	sub	x20, x20, #0x1
  402590:	mov	w23, #0x1                   	// #1
  402594:	b	402538 <ferror@plt+0x648>
  402598:	add	x21, x21, #0x2
  40259c:	sub	x20, x20, #0x2
  4025a0:	mov	w23, #0x1                   	// #1
  4025a4:	b	402538 <ferror@plt+0x648>
  4025a8:	mov	w0, #0x0                   	// #0
  4025ac:	b	402574 <ferror@plt+0x684>
  4025b0:	stp	x29, x30, [sp, #-32]!
  4025b4:	mov	x29, sp
  4025b8:	stp	x19, x20, [sp, #16]
  4025bc:	mov	x20, x1
  4025c0:	mov	x19, x0
  4025c4:	bl	401b00 <strlen@plt>
  4025c8:	mov	x1, x0
  4025cc:	mov	x2, x20
  4025d0:	mov	x0, x19
  4025d4:	ldp	x19, x20, [sp, #16]
  4025d8:	ldp	x29, x30, [sp], #32
  4025dc:	b	4024e0 <ferror@plt+0x5f0>
  4025e0:	adrp	x3, 426000 <argp_error@@Base+0x193a0>
  4025e4:	add	x3, x3, #0x240
  4025e8:	subs	x2, x2, #0x1
  4025ec:	add	x3, x3, #0x150
  4025f0:	b.eq	402624 <ferror@plt+0x734>  // b.none
  4025f4:	nop
  4025f8:	ldr	w4, [x3]
  4025fc:	mov	x5, x1
  402600:	tst	w4, w0
  402604:	cbz	w4, 402624 <ferror@plt+0x734>
  402608:	b.eq	40262c <ferror@plt+0x73c>  // b.none
  40260c:	ldr	w1, [x3, #4]
  402610:	subs	x2, x2, #0x1
  402614:	strb	w1, [x5], #1
  402618:	add	x3, x3, #0x8
  40261c:	mov	x1, x5
  402620:	b.ne	4025f8 <ferror@plt+0x708>  // b.any
  402624:	strb	wzr, [x1]
  402628:	ret
  40262c:	add	x3, x3, #0x8
  402630:	b	4025f8 <ferror@plt+0x708>
  402634:	nop
  402638:	stp	x29, x30, [sp, #-96]!
  40263c:	mov	x29, sp
  402640:	stp	x21, x22, [sp, #32]
  402644:	cbz	w0, 40275c <ferror@plt+0x86c>
  402648:	mov	w22, #0x0                   	// #0
  40264c:	stp	x19, x20, [sp, #16]
  402650:	mov	w20, w0
  402654:	stp	x23, x24, [sp, #48]
  402658:	mov	w23, #0x1                   	// #1
  40265c:	mov	x24, x1
  402660:	mov	w19, w23
  402664:	stp	x25, x26, [sp, #64]
  402668:	adrp	x25, 40e000 <argp_error@@Base+0x13a0>
  40266c:	and	w26, w2, #0xff
  402670:	add	x25, x25, #0xad8
  402674:	str	x27, [sp, #80]
  402678:	adrp	x27, 427000 <argp_error@@Base+0x1a3a0>
  40267c:	b	402690 <ferror@plt+0x7a0>
  402680:	lsl	w19, w19, #1
  402684:	cmp	w20, #0x0
  402688:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  40268c:	b.eq	4026d8 <ferror@plt+0x7e8>  // b.none
  402690:	tst	w20, w19
  402694:	b.eq	402680 <ferror@plt+0x790>  // b.none
  402698:	mov	x1, x24
  40269c:	mov	w0, w19
  4026a0:	bl	402400 <ferror@plt+0x510>
  4026a4:	mov	x21, x0
  4026a8:	cbz	x0, 402680 <ferror@plt+0x790>
  4026ac:	bic	w20, w20, w19
  4026b0:	cbz	w23, 402728 <ferror@plt+0x838>
  4026b4:	mov	x1, x21
  4026b8:	mov	x0, x25
  4026bc:	bl	401e80 <printf@plt>
  4026c0:	lsl	w19, w19, #1
  4026c4:	cmp	w20, #0x0
  4026c8:	add	w22, w22, w0
  4026cc:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4026d0:	mov	w23, #0x0                   	// #0
  4026d4:	b.ne	402690 <ferror@plt+0x7a0>  // b.any
  4026d8:	cbz	w20, 40273c <ferror@plt+0x84c>
  4026dc:	cbnz	w23, 4026f4 <ferror@plt+0x804>
  4026e0:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  4026e4:	add	w22, w22, #0x1
  4026e8:	mov	w0, w26
  4026ec:	ldr	x1, [x1, #1256]
  4026f0:	bl	401b60 <putc@plt>
  4026f4:	mov	w1, w20
  4026f8:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  4026fc:	add	x0, x0, #0x5c8
  402700:	bl	401e80 <printf@plt>
  402704:	add	w22, w22, w0
  402708:	mov	w0, w22
  40270c:	ldp	x19, x20, [sp, #16]
  402710:	ldp	x21, x22, [sp, #32]
  402714:	ldp	x23, x24, [sp, #48]
  402718:	ldp	x25, x26, [sp, #64]
  40271c:	ldr	x27, [sp, #80]
  402720:	ldp	x29, x30, [sp], #96
  402724:	ret
  402728:	ldr	x1, [x27, #1256]
  40272c:	add	w22, w22, #0x1
  402730:	mov	w0, w26
  402734:	bl	401b60 <putc@plt>
  402738:	b	4026b4 <ferror@plt+0x7c4>
  40273c:	mov	w0, w22
  402740:	ldp	x19, x20, [sp, #16]
  402744:	ldp	x21, x22, [sp, #32]
  402748:	ldp	x23, x24, [sp, #48]
  40274c:	ldp	x25, x26, [sp, #64]
  402750:	ldr	x27, [sp, #80]
  402754:	ldp	x29, x30, [sp], #96
  402758:	ret
  40275c:	mov	w22, #0x0                   	// #0
  402760:	mov	w0, w22
  402764:	ldp	x21, x22, [sp, #32]
  402768:	ldp	x29, x30, [sp], #96
  40276c:	ret
  402770:	stp	x29, x30, [sp, #-144]!
  402774:	mov	w4, #0x2                   	// #2
  402778:	mov	x29, sp
  40277c:	stp	xzr, xzr, [sp, #96]
  402780:	add	x3, sp, #0x48
  402784:	stp	x19, x20, [sp, #16]
  402788:	mov	x20, x1
  40278c:	mov	x1, #0x0                   	// #0
  402790:	stp	x21, x22, [sp, #32]
  402794:	mov	x22, x2
  402798:	str	x23, [sp, #48]
  40279c:	mov	w23, w0
  4027a0:	mov	x0, x2
  4027a4:	add	x2, sp, #0x60
  4027a8:	str	w4, [sp, #100]
  4027ac:	stp	xzr, xzr, [sp, #112]
  4027b0:	stp	xzr, xzr, [sp, #128]
  4027b4:	bl	401dc0 <getaddrinfo@plt>
  4027b8:	cbnz	w0, 4028d0 <ferror@plt+0x9e0>
  4027bc:	ldr	x3, [sp, #72]
  4027c0:	cbnz	x3, 4027d0 <ferror@plt+0x8e0>
  4027c4:	b	4028e0 <ferror@plt+0x9f0>
  4027c8:	ldr	x3, [x3, #40]
  4027cc:	cbz	x3, 4028e0 <ferror@plt+0x9f0>
  4027d0:	ldr	w19, [x3, #4]
  4027d4:	cmp	w19, #0x2
  4027d8:	b.ne	4027c8 <ferror@plt+0x8d8>  // b.any
  4027dc:	ldr	w1, [x3, #16]
  4027e0:	add	x2, sp, #0x50
  4027e4:	ldr	x0, [x3, #24]
  4027e8:	mov	w6, #0x1                   	// #1
  4027ec:	mov	w5, #0x0                   	// #0
  4027f0:	mov	x4, #0x0                   	// #0
  4027f4:	mov	w3, #0x10                  	// #16
  4027f8:	bl	401b50 <getnameinfo@plt>
  4027fc:	mov	w21, w0
  402800:	ldr	x0, [sp, #72]
  402804:	bl	401ad0 <freeaddrinfo@plt>
  402808:	cbnz	w21, 4028a4 <ferror@plt+0x9b4>
  40280c:	strh	w19, [x20, #16]
  402810:	add	x1, x20, #0x14
  402814:	add	x0, sp, #0x50
  402818:	bl	401de0 <inet_aton@plt>
  40281c:	cbz	w0, 402888 <ferror@plt+0x998>
  402820:	mov	w0, w23
  402824:	mov	x2, x20
  402828:	mov	w1, #0x8916                	// #35094
  40282c:	bl	4097c0 <argp_parse@@Base+0x1818>
  402830:	tbnz	w0, #31, 402908 <ferror@plt+0xa18>
  402834:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  402838:	ldr	w0, [x0, #1576]
  40283c:	cbnz	w0, 402854 <ferror@plt+0x964>
  402840:	ldp	x19, x20, [sp, #16]
  402844:	ldp	x21, x22, [sp, #32]
  402848:	ldr	x23, [sp, #48]
  40284c:	ldp	x29, x30, [sp], #144
  402850:	ret
  402854:	ldr	w0, [x20, #20]
  402858:	bl	401b90 <inet_ntoa@plt>
  40285c:	mov	x2, x0
  402860:	mov	x1, x20
  402864:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  402868:	add	x0, x0, #0x6f8
  40286c:	bl	401e80 <printf@plt>
  402870:	mov	w0, #0x0                   	// #0
  402874:	ldp	x19, x20, [sp, #16]
  402878:	ldp	x21, x22, [sp, #32]
  40287c:	ldr	x23, [sp, #48]
  402880:	ldp	x29, x30, [sp], #144
  402884:	ret
  402888:	add	x3, sp, #0x50
  40288c:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402890:	mov	w1, #0x0                   	// #0
  402894:	add	x2, x2, #0x6b8
  402898:	bl	401b30 <error@plt>
  40289c:	mov	w0, #0xffffffff            	// #-1
  4028a0:	b	402840 <ferror@plt+0x950>
  4028a4:	mov	w0, w21
  4028a8:	bl	401ac0 <gai_strerror@plt>
  4028ac:	mov	x3, x22
  4028b0:	mov	x4, x0
  4028b4:	mov	w0, #0x0                   	// #0
  4028b8:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4028bc:	mov	w1, #0x0                   	// #0
  4028c0:	add	x2, x2, #0x6a0
  4028c4:	bl	401b30 <error@plt>
  4028c8:	mov	w0, #0xffffffff            	// #-1
  4028cc:	b	402840 <ferror@plt+0x950>
  4028d0:	bl	401ac0 <gai_strerror@plt>
  4028d4:	mov	x4, x0
  4028d8:	mov	x3, x22
  4028dc:	b	4028b4 <ferror@plt+0x9c4>
  4028e0:	mov	x3, x22
  4028e4:	mov	w1, #0x0                   	// #0
  4028e8:	mov	w0, #0x0                   	// #0
  4028ec:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4028f0:	add	x2, x2, #0x720
  4028f4:	bl	401b30 <error@plt>
  4028f8:	ldr	x0, [sp, #72]
  4028fc:	bl	401ad0 <freeaddrinfo@plt>
  402900:	mov	w0, #0xffffffff            	// #-1
  402904:	b	402840 <ferror@plt+0x950>
  402908:	bl	401ea0 <__errno_location@plt>
  40290c:	ldr	w1, [x0]
  402910:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  402914:	mov	w0, #0x0                   	// #0
  402918:	add	x3, x3, #0x6d8
  40291c:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402920:	add	x2, x2, #0x6e8
  402924:	bl	401b30 <error@plt>
  402928:	mov	w0, #0xffffffff            	// #-1
  40292c:	b	402840 <ferror@plt+0x950>
  402930:	stp	x29, x30, [sp, #-48]!
  402934:	mov	w3, #0x2                   	// #2
  402938:	mov	x29, sp
  40293c:	stp	x19, x20, [sp, #16]
  402940:	mov	x19, x1
  402944:	mov	x20, x2
  402948:	str	x21, [sp, #32]
  40294c:	add	x1, x1, #0x14
  402950:	strh	w3, [x19, #16]
  402954:	mov	w21, w0
  402958:	mov	x0, x2
  40295c:	bl	401de0 <inet_aton@plt>
  402960:	cbz	w0, 4029c4 <ferror@plt+0xad4>
  402964:	mov	w0, w21
  402968:	mov	x2, x19
  40296c:	mov	w1, #0x891c                	// #35100
  402970:	bl	4097c0 <argp_parse@@Base+0x1818>
  402974:	tbnz	w0, #31, 4029e0 <ferror@plt+0xaf0>
  402978:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40297c:	ldr	w0, [x0, #1576]
  402980:	cbnz	w0, 402994 <ferror@plt+0xaa4>
  402984:	ldp	x19, x20, [sp, #16]
  402988:	ldr	x21, [sp, #32]
  40298c:	ldp	x29, x30, [sp], #48
  402990:	ret
  402994:	ldr	w0, [x19, #20]
  402998:	bl	401b90 <inet_ntoa@plt>
  40299c:	mov	x2, x0
  4029a0:	mov	x1, x19
  4029a4:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  4029a8:	add	x0, x0, #0x758
  4029ac:	bl	401e80 <printf@plt>
  4029b0:	mov	w0, #0x0                   	// #0
  4029b4:	ldp	x19, x20, [sp, #16]
  4029b8:	ldr	x21, [sp, #32]
  4029bc:	ldp	x29, x30, [sp], #48
  4029c0:	ret
  4029c4:	mov	x3, x20
  4029c8:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4029cc:	mov	w1, #0x0                   	// #0
  4029d0:	add	x2, x2, #0x6b8
  4029d4:	bl	401b30 <error@plt>
  4029d8:	mov	w0, #0xffffffff            	// #-1
  4029dc:	b	402984 <ferror@plt+0xa94>
  4029e0:	bl	401ea0 <__errno_location@plt>
  4029e4:	ldr	w1, [x0]
  4029e8:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  4029ec:	mov	w0, #0x0                   	// #0
  4029f0:	add	x3, x3, #0x748
  4029f4:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4029f8:	add	x2, x2, #0x6e8
  4029fc:	bl	401b30 <error@plt>
  402a00:	mov	w0, #0xffffffff            	// #-1
  402a04:	b	402984 <ferror@plt+0xa94>
  402a08:	stp	x29, x30, [sp, #-48]!
  402a0c:	mov	w3, #0x2                   	// #2
  402a10:	mov	x29, sp
  402a14:	stp	x19, x20, [sp, #16]
  402a18:	mov	x19, x1
  402a1c:	mov	x20, x2
  402a20:	str	x21, [sp, #32]
  402a24:	add	x1, x1, #0x14
  402a28:	strh	w3, [x19, #16]
  402a2c:	mov	w21, w0
  402a30:	mov	x0, x2
  402a34:	bl	401de0 <inet_aton@plt>
  402a38:	cbz	w0, 402a9c <ferror@plt+0xbac>
  402a3c:	mov	w0, w21
  402a40:	mov	x2, x19
  402a44:	mov	w1, #0x8918                	// #35096
  402a48:	bl	4097c0 <argp_parse@@Base+0x1818>
  402a4c:	tbnz	w0, #31, 402ab8 <ferror@plt+0xbc8>
  402a50:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  402a54:	ldr	w0, [x0, #1576]
  402a58:	cbnz	w0, 402a6c <ferror@plt+0xb7c>
  402a5c:	ldp	x19, x20, [sp, #16]
  402a60:	ldr	x21, [sp, #32]
  402a64:	ldp	x29, x30, [sp], #48
  402a68:	ret
  402a6c:	ldr	w0, [x19, #20]
  402a70:	bl	401b90 <inet_ntoa@plt>
  402a74:	mov	x2, x0
  402a78:	mov	x1, x19
  402a7c:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  402a80:	add	x0, x0, #0x790
  402a84:	bl	401e80 <printf@plt>
  402a88:	mov	w0, #0x0                   	// #0
  402a8c:	ldp	x19, x20, [sp, #16]
  402a90:	ldr	x21, [sp, #32]
  402a94:	ldp	x29, x30, [sp], #48
  402a98:	ret
  402a9c:	mov	x3, x20
  402aa0:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402aa4:	mov	w1, #0x0                   	// #0
  402aa8:	add	x2, x2, #0x6b8
  402aac:	bl	401b30 <error@plt>
  402ab0:	mov	w0, #0xffffffff            	// #-1
  402ab4:	b	402a5c <ferror@plt+0xb6c>
  402ab8:	bl	401ea0 <__errno_location@plt>
  402abc:	ldr	w1, [x0]
  402ac0:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  402ac4:	mov	w0, #0x0                   	// #0
  402ac8:	add	x3, x3, #0x780
  402acc:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402ad0:	add	x2, x2, #0x6e8
  402ad4:	bl	401b30 <error@plt>
  402ad8:	mov	w0, #0xffffffff            	// #-1
  402adc:	b	402a5c <ferror@plt+0xb6c>
  402ae0:	stp	x29, x30, [sp, #-48]!
  402ae4:	mov	w3, #0x2                   	// #2
  402ae8:	mov	x29, sp
  402aec:	stp	x19, x20, [sp, #16]
  402af0:	mov	x19, x1
  402af4:	mov	x20, x2
  402af8:	str	x21, [sp, #32]
  402afc:	add	x1, x1, #0x14
  402b00:	strh	w3, [x19, #16]
  402b04:	mov	w21, w0
  402b08:	mov	x0, x2
  402b0c:	bl	401de0 <inet_aton@plt>
  402b10:	cbz	w0, 402b74 <ferror@plt+0xc84>
  402b14:	mov	w0, w21
  402b18:	mov	x2, x19
  402b1c:	mov	w1, #0x891a                	// #35098
  402b20:	bl	4097c0 <argp_parse@@Base+0x1818>
  402b24:	tbnz	w0, #31, 402b90 <ferror@plt+0xca0>
  402b28:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  402b2c:	ldr	w0, [x0, #1576]
  402b30:	cbnz	w0, 402b44 <ferror@plt+0xc54>
  402b34:	ldp	x19, x20, [sp, #16]
  402b38:	ldr	x21, [sp, #32]
  402b3c:	ldp	x29, x30, [sp], #48
  402b40:	ret
  402b44:	ldr	w0, [x19, #20]
  402b48:	bl	401b90 <inet_ntoa@plt>
  402b4c:	mov	x2, x0
  402b50:	mov	x1, x19
  402b54:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  402b58:	add	x0, x0, #0x7d0
  402b5c:	bl	401e80 <printf@plt>
  402b60:	mov	w0, #0x0                   	// #0
  402b64:	ldp	x19, x20, [sp, #16]
  402b68:	ldr	x21, [sp, #32]
  402b6c:	ldp	x29, x30, [sp], #48
  402b70:	ret
  402b74:	mov	x3, x20
  402b78:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402b7c:	mov	w1, #0x0                   	// #0
  402b80:	add	x2, x2, #0x6b8
  402b84:	bl	401b30 <error@plt>
  402b88:	mov	w0, #0xffffffff            	// #-1
  402b8c:	b	402b34 <ferror@plt+0xc44>
  402b90:	bl	401ea0 <__errno_location@plt>
  402b94:	ldr	w1, [x0]
  402b98:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  402b9c:	mov	w0, #0x0                   	// #0
  402ba0:	add	x3, x3, #0x7c0
  402ba4:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402ba8:	add	x2, x2, #0x6e8
  402bac:	bl	401b30 <error@plt>
  402bb0:	mov	w0, #0xffffffff            	// #-1
  402bb4:	b	402b34 <ferror@plt+0xc44>
  402bb8:	stp	x29, x30, [sp, #-32]!
  402bbc:	mov	w3, w2
  402bc0:	mov	x29, sp
  402bc4:	str	x19, [sp, #16]
  402bc8:	mov	x19, x1
  402bcc:	mov	x2, x19
  402bd0:	mov	w1, #0x8922                	// #35106
  402bd4:	str	w3, [x19, #16]
  402bd8:	bl	4097c0 <argp_parse@@Base+0x1818>
  402bdc:	tbnz	w0, #31, 402c1c <ferror@plt+0xd2c>
  402be0:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  402be4:	ldr	w0, [x0, #1576]
  402be8:	cbnz	w0, 402bf8 <ferror@plt+0xd08>
  402bec:	ldr	x19, [sp, #16]
  402bf0:	ldp	x29, x30, [sp], #32
  402bf4:	ret
  402bf8:	ldr	w2, [x19, #16]
  402bfc:	mov	x1, x19
  402c00:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  402c04:	add	x0, x0, #0x818
  402c08:	bl	401e80 <printf@plt>
  402c0c:	mov	w0, #0x0                   	// #0
  402c10:	ldr	x19, [sp, #16]
  402c14:	ldp	x29, x30, [sp], #32
  402c18:	ret
  402c1c:	bl	401ea0 <__errno_location@plt>
  402c20:	mov	x1, x0
  402c24:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402c28:	mov	w0, #0x0                   	// #0
  402c2c:	add	x2, x2, #0x800
  402c30:	ldr	w1, [x1]
  402c34:	bl	401b30 <error@plt>
  402c38:	mov	w0, #0xffffffff            	// #-1
  402c3c:	b	402bec <ferror@plt+0xcfc>
  402c40:	stp	x29, x30, [sp, #-32]!
  402c44:	mov	w3, w2
  402c48:	mov	x29, sp
  402c4c:	str	x19, [sp, #16]
  402c50:	mov	x19, x1
  402c54:	mov	x2, x19
  402c58:	mov	w1, #0x891e                	// #35102
  402c5c:	str	w3, [x19, #16]
  402c60:	bl	4097c0 <argp_parse@@Base+0x1818>
  402c64:	tbnz	w0, #31, 402ca4 <ferror@plt+0xdb4>
  402c68:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  402c6c:	ldr	w0, [x0, #1576]
  402c70:	cbnz	w0, 402c80 <ferror@plt+0xd90>
  402c74:	ldr	x19, [sp, #16]
  402c78:	ldp	x29, x30, [sp], #32
  402c7c:	ret
  402c80:	ldr	w2, [x19, #16]
  402c84:	mov	x1, x19
  402c88:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  402c8c:	add	x0, x0, #0x850
  402c90:	bl	401e80 <printf@plt>
  402c94:	mov	w0, #0x0                   	// #0
  402c98:	ldr	x19, [sp, #16]
  402c9c:	ldp	x29, x30, [sp], #32
  402ca0:	ret
  402ca4:	bl	401ea0 <__errno_location@plt>
  402ca8:	mov	x1, x0
  402cac:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402cb0:	mov	w0, #0x0                   	// #0
  402cb4:	add	x2, x2, #0x838
  402cb8:	ldr	w1, [x1]
  402cbc:	bl	401b30 <error@plt>
  402cc0:	mov	w0, #0xffffffff            	// #-1
  402cc4:	b	402c74 <ferror@plt+0xd84>
  402cc8:	stp	x29, x30, [sp, #-96]!
  402ccc:	mov	x29, sp
  402cd0:	stp	x19, x20, [sp, #16]
  402cd4:	mov	x19, x1
  402cd8:	mov	w20, w3
  402cdc:	ldp	x6, x7, [x1]
  402ce0:	stp	x21, x22, [sp, #32]
  402ce4:	mov	w21, w2
  402ce8:	ldp	x4, x5, [x1, #16]
  402cec:	mov	w22, w0
  402cf0:	ldr	x3, [x19, #32]
  402cf4:	add	x2, sp, #0x38
  402cf8:	mov	w1, #0x8913                	// #35091
  402cfc:	stp	x6, x7, [sp, #56]
  402d00:	stp	x4, x5, [sp, #72]
  402d04:	str	x3, [sp, #88]
  402d08:	bl	4097c0 <argp_parse@@Base+0x1818>
  402d0c:	tbnz	w0, #31, 402d4c <ferror@plt+0xe5c>
  402d10:	ldrh	w3, [sp, #72]
  402d14:	mov	w1, #0x8914                	// #35092
  402d18:	mov	w0, w22
  402d1c:	mov	x2, x19
  402d20:	orr	w21, w21, w3
  402d24:	bic	w20, w21, w20
  402d28:	strh	w20, [x19, #16]
  402d2c:	bl	4097c0 <argp_parse@@Base+0x1818>
  402d30:	mov	w1, w0
  402d34:	mov	w0, #0x0                   	// #0
  402d38:	tbnz	w1, #31, 402d70 <ferror@plt+0xe80>
  402d3c:	ldp	x19, x20, [sp, #16]
  402d40:	ldp	x21, x22, [sp, #32]
  402d44:	ldp	x29, x30, [sp], #96
  402d48:	ret
  402d4c:	bl	401ea0 <__errno_location@plt>
  402d50:	mov	x1, x0
  402d54:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402d58:	mov	w0, #0x0                   	// #0
  402d5c:	add	x2, x2, #0x878
  402d60:	ldr	w1, [x1]
  402d64:	bl	401b30 <error@plt>
  402d68:	mov	w0, #0xffffffff            	// #-1
  402d6c:	b	402d3c <ferror@plt+0xe4c>
  402d70:	bl	401ea0 <__errno_location@plt>
  402d74:	mov	x1, x0
  402d78:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  402d7c:	mov	w0, #0x0                   	// #0
  402d80:	add	x2, x2, #0x890
  402d84:	ldr	w1, [x1]
  402d88:	bl	401b30 <error@plt>
  402d8c:	mov	w0, #0xffffffff            	// #-1
  402d90:	b	402d3c <ferror@plt+0xe4c>
  402d94:	nop
  402d98:	stp	x29, x30, [sp, #-80]!
  402d9c:	mov	x2, #0x10                  	// #16
  402da0:	mov	x29, sp
  402da4:	stp	x19, x20, [sp, #16]
  402da8:	mov	x19, x1
  402dac:	mov	w20, w0
  402db0:	ldr	x1, [x1]
  402db4:	add	x0, sp, #0x28
  402db8:	stp	xzr, xzr, [sp, #40]
  402dbc:	stp	xzr, xzr, [sp, #56]
  402dc0:	str	xzr, [sp, #72]
  402dc4:	bl	401e60 <strncpy@plt>
  402dc8:	ldr	w0, [x19, #8]
  402dcc:	strb	wzr, [sp, #55]
  402dd0:	tbnz	w0, #3, 402e20 <ferror@plt+0xf30>
  402dd4:	tbnz	w0, #4, 402e40 <ferror@plt+0xf50>
  402dd8:	tbnz	w0, #5, 402e9c <ferror@plt+0xfac>
  402ddc:	tbnz	w0, #6, 402f00 <ferror@plt+0x1010>
  402de0:	tbnz	w0, #7, 402e60 <ferror@plt+0xf70>
  402de4:	tbnz	w0, #8, 402e7c <ferror@plt+0xf8c>
  402de8:	tbz	w0, #0, 402e00 <ferror@plt+0xf10>
  402dec:	ldr	x2, [x19, #16]
  402df0:	add	x1, sp, #0x28
  402df4:	mov	w0, w20
  402df8:	bl	4079e0 <ferror@plt+0x5af0>
  402dfc:	cbnz	w0, 402e14 <ferror@plt+0xf24>
  402e00:	ldr	x0, [x19, #80]
  402e04:	cbnz	x0, 402ebc <ferror@plt+0xfcc>
  402e08:	ldr	w1, [x19, #8]
  402e0c:	and	w0, w1, #0x2
  402e10:	tbnz	w1, #1, 402edc <ferror@plt+0xfec>
  402e14:	ldp	x19, x20, [sp, #16]
  402e18:	ldp	x29, x30, [sp], #80
  402e1c:	ret
  402e20:	ldr	x2, [x19, #40]
  402e24:	add	x1, sp, #0x28
  402e28:	mov	w0, w20
  402e2c:	bl	402770 <ferror@plt+0x880>
  402e30:	cbnz	w0, 402e14 <ferror@plt+0xf24>
  402e34:	ldr	w0, [x19, #8]
  402e38:	tbz	w0, #4, 402dd8 <ferror@plt+0xee8>
  402e3c:	nop
  402e40:	ldr	x2, [x19, #48]
  402e44:	add	x1, sp, #0x28
  402e48:	mov	w0, w20
  402e4c:	bl	402930 <ferror@plt+0xa40>
  402e50:	cbnz	w0, 402e14 <ferror@plt+0xf24>
  402e54:	ldr	w0, [x19, #8]
  402e58:	tbz	w0, #5, 402ddc <ferror@plt+0xeec>
  402e5c:	b	402e9c <ferror@plt+0xfac>
  402e60:	ldr	w2, [x19, #72]
  402e64:	add	x1, sp, #0x28
  402e68:	mov	w0, w20
  402e6c:	bl	402bb8 <ferror@plt+0xcc8>
  402e70:	cbnz	w0, 402e14 <ferror@plt+0xf24>
  402e74:	ldr	w0, [x19, #8]
  402e78:	tbz	w0, #8, 402de8 <ferror@plt+0xef8>
  402e7c:	ldr	w2, [x19, #76]
  402e80:	add	x1, sp, #0x28
  402e84:	mov	w0, w20
  402e88:	bl	402c40 <ferror@plt+0xd50>
  402e8c:	cbnz	w0, 402e14 <ferror@plt+0xf24>
  402e90:	ldr	w0, [x19, #8]
  402e94:	tbnz	w0, #0, 402dec <ferror@plt+0xefc>
  402e98:	b	402e00 <ferror@plt+0xf10>
  402e9c:	ldr	x2, [x19, #56]
  402ea0:	add	x1, sp, #0x28
  402ea4:	mov	w0, w20
  402ea8:	bl	402a08 <ferror@plt+0xb18>
  402eac:	cbnz	w0, 402e14 <ferror@plt+0xf24>
  402eb0:	ldr	w0, [x19, #8]
  402eb4:	tbz	w0, #6, 402de0 <ferror@plt+0xef0>
  402eb8:	b	402f00 <ferror@plt+0x1010>
  402ebc:	ldp	w2, w3, [x19, #80]
  402ec0:	add	x1, sp, #0x28
  402ec4:	mov	w0, w20
  402ec8:	bl	402cc8 <ferror@plt+0xdd8>
  402ecc:	cbz	w0, 402e08 <ferror@plt+0xf18>
  402ed0:	ldp	x19, x20, [sp, #16]
  402ed4:	ldp	x29, x30, [sp], #80
  402ed8:	ret
  402edc:	ldr	x1, [x19]
  402ee0:	add	x2, sp, #0x28
  402ee4:	ldr	x3, [x19, #24]
  402ee8:	mov	w0, w20
  402eec:	bl	405d38 <ferror@plt+0x3e48>
  402ef0:	mov	w0, #0x0                   	// #0
  402ef4:	ldp	x19, x20, [sp, #16]
  402ef8:	ldp	x29, x30, [sp], #80
  402efc:	ret
  402f00:	ldr	x2, [x19, #64]
  402f04:	add	x1, sp, #0x28
  402f08:	mov	w0, w20
  402f0c:	bl	402ae0 <ferror@plt+0xbf0>
  402f10:	cbnz	w0, 402e14 <ferror@plt+0xf24>
  402f14:	ldr	w0, [x19, #8]
  402f18:	tbz	w0, #7, 402de4 <ferror@plt+0xef4>
  402f1c:	b	402e60 <ferror@plt+0xf70>
  402f20:	ldr	x0, [x0]
  402f24:	ldr	x1, [x1]
  402f28:	b	401cf0 <strcmp@plt>
  402f2c:	nop
  402f30:	mov	w2, #0x4                   	// #4
  402f34:	movk	w2, #0x200, lsl #16
  402f38:	cmp	w0, w2
  402f3c:	b.eq	402f48 <ferror@plt+0x1058>  // b.none
  402f40:	mov	x0, x1
  402f44:	ret
  402f48:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  402f4c:	add	x0, x0, #0x8a8
  402f50:	b	4021a8 <ferror@plt+0x2b8>
  402f54:	nop
  402f58:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  402f5c:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  402f60:	ldr	w1, [x3, #1544]
  402f64:	ldr	w4, [x2, #1548]
  402f68:	orr	w1, w1, w0
  402f6c:	str	w1, [x3, #1544]
  402f70:	bic	w0, w4, w0
  402f74:	str	w0, [x2, #1548]
  402f78:	ret
  402f7c:	nop
  402f80:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  402f84:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  402f88:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  402f8c:	mov	w4, #0x2                   	// #2
  402f90:	ldr	w6, [x2, #1548]
  402f94:	ldr	w5, [x1, #1544]
  402f98:	ldp	w2, w1, [x0, #80]
  402f9c:	str	w4, [x0, #8]
  402fa0:	ldr	x3, [x3, #1560]
  402fa4:	orr	w2, w2, w6
  402fa8:	orr	w1, w1, w5
  402fac:	str	x3, [x0, #24]
  402fb0:	stp	w2, w1, [x0, #80]
  402fb4:	ret
  402fb8:	stp	x29, x30, [sp, #-32]!
  402fbc:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  402fc0:	mov	x29, sp
  402fc4:	stp	x19, x20, [sp, #16]
  402fc8:	mov	x20, x0
  402fcc:	ldr	x0, [x1, #1024]
  402fd0:	cbz	x0, 403000 <ferror@plt+0x1110>
  402fd4:	add	x19, x1, #0x400
  402fd8:	b	402fe4 <ferror@plt+0x10f4>
  402fdc:	ldr	x0, [x19, #24]!
  402fe0:	cbz	x0, 403000 <ferror@plt+0x1110>
  402fe4:	mov	x1, x20
  402fe8:	bl	401cf0 <strcmp@plt>
  402fec:	cbnz	w0, 402fdc <ferror@plt+0x10ec>
  402ff0:	mov	x0, x19
  402ff4:	ldp	x19, x20, [sp, #16]
  402ff8:	ldp	x29, x30, [sp], #32
  402ffc:	ret
  403000:	mov	x19, #0x0                   	// #0
  403004:	mov	x0, x19
  403008:	ldp	x19, x20, [sp, #16]
  40300c:	ldp	x29, x30, [sp], #32
  403010:	ret
  403014:	nop
  403018:	stp	x29, x30, [sp, #-48]!
  40301c:	mov	w2, #0x58                  	// #88
  403020:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  403024:	mov	x29, sp
  403028:	stp	x19, x20, [sp, #16]
  40302c:	adrp	x20, 427000 <argp_error@@Base+0x1a3a0>
  403030:	mov	x19, x0
  403034:	ldr	w1, [x20, #1552]
  403038:	stp	x21, x22, [sp, #32]
  40303c:	adrp	x21, 427000 <argp_error@@Base+0x1a3a0>
  403040:	add	w1, w1, #0x1
  403044:	ldr	x0, [x21, #1536]
  403048:	str	w1, [x20, #1552]
  40304c:	smull	x1, w1, w2
  403050:	mov	w22, #0x1                   	// #1
  403054:	str	w22, [x3, #1572]
  403058:	bl	401c70 <realloc@plt>
  40305c:	str	x0, [x21, #1536]
  403060:	mov	x8, x0
  403064:	cbz	x0, 4030c8 <ferror@plt+0x11d8>
  403068:	ldr	w9, [x20, #1552]
  40306c:	mov	w2, #0x58                  	// #88
  403070:	mov	x0, #0xffffffffffffffa8    	// #-88
  403074:	adrp	x1, 40f000 <argp_error@@Base+0x23a0>
  403078:	add	x1, x1, #0xe20
  40307c:	ldp	x21, x22, [sp, #32]
  403080:	smaddl	x9, w9, w2, x0
  403084:	ldp	x6, x7, [x1]
  403088:	add	x0, x8, x9
  40308c:	ldp	x4, x5, [x1, #16]
  403090:	stp	x6, x7, [x0]
  403094:	stp	x4, x5, [x0, #16]
  403098:	ldp	x2, x3, [x1, #32]
  40309c:	stp	x2, x3, [x0, #32]
  4030a0:	ldp	x6, x7, [x1, #48]
  4030a4:	stp	x6, x7, [x0, #48]
  4030a8:	ldp	x4, x5, [x1, #64]
  4030ac:	stp	x4, x5, [x0, #64]
  4030b0:	ldr	x1, [x1, #80]
  4030b4:	str	x1, [x0, #80]
  4030b8:	str	x19, [x8, x9]
  4030bc:	ldp	x19, x20, [sp, #16]
  4030c0:	ldp	x29, x30, [sp], #48
  4030c4:	ret
  4030c8:	bl	401ea0 <__errno_location@plt>
  4030cc:	mov	x1, x0
  4030d0:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4030d4:	mov	w0, w22
  4030d8:	add	x2, x2, #0x8c0
  4030dc:	ldr	w1, [x1]
  4030e0:	bl	401b30 <error@plt>
  4030e4:	ldr	x8, [x21, #1536]
  4030e8:	b	403068 <ferror@plt+0x1178>
  4030ec:	nop
  4030f0:	stp	x29, x30, [sp, #-32]!
  4030f4:	mov	x29, sp
  4030f8:	stp	x19, x20, [sp, #16]
  4030fc:	mov	x19, x0
  403100:	mov	x20, x1
  403104:	cbz	x0, 403164 <ferror@plt+0x1274>
  403108:	ldr	w0, [x19, #8]
  40310c:	tbnz	w0, #3, 403128 <ferror@plt+0x1238>
  403110:	orr	w0, w0, #0x8
  403114:	str	w0, [x19, #8]
  403118:	str	x20, [x19, #40]
  40311c:	ldp	x19, x20, [sp, #16]
  403120:	ldp	x29, x30, [sp], #32
  403124:	ret
  403128:	ldr	x4, [x19]
  40312c:	mov	w1, #0x0                   	// #0
  403130:	mov	w0, #0x1                   	// #1
  403134:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  403138:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  40313c:	add	x3, x3, #0x8f0
  403140:	add	x2, x2, #0x920
  403144:	bl	401b30 <error@plt>
  403148:	ldr	w0, [x19, #8]
  40314c:	str	x20, [x19, #40]
  403150:	orr	w0, w0, #0x8
  403154:	str	w0, [x19, #8]
  403158:	ldp	x19, x20, [sp, #16]
  40315c:	ldp	x29, x30, [sp], #32
  403160:	ret
  403164:	mov	x4, x1
  403168:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  40316c:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403170:	add	x3, x3, #0x8f0
  403174:	add	x2, x2, #0x8f8
  403178:	mov	w1, #0x0                   	// #0
  40317c:	mov	w0, #0x1                   	// #1
  403180:	bl	401b30 <error@plt>
  403184:	b	403108 <ferror@plt+0x1218>
  403188:	stp	x29, x30, [sp, #-32]!
  40318c:	mov	x29, sp
  403190:	stp	x19, x20, [sp, #16]
  403194:	mov	x19, x0
  403198:	mov	x20, x1
  40319c:	cbz	x0, 4031fc <ferror@plt+0x130c>
  4031a0:	ldr	w0, [x19, #8]
  4031a4:	tbnz	w0, #4, 4031c0 <ferror@plt+0x12d0>
  4031a8:	orr	w0, w0, #0x10
  4031ac:	str	w0, [x19, #8]
  4031b0:	str	x20, [x19, #48]
  4031b4:	ldp	x19, x20, [sp, #16]
  4031b8:	ldp	x29, x30, [sp], #32
  4031bc:	ret
  4031c0:	ldr	x4, [x19]
  4031c4:	mov	w1, #0x0                   	// #0
  4031c8:	mov	w0, #0x1                   	// #1
  4031cc:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  4031d0:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4031d4:	add	x3, x3, #0x948
  4031d8:	add	x2, x2, #0x920
  4031dc:	bl	401b30 <error@plt>
  4031e0:	ldr	w0, [x19, #8]
  4031e4:	str	x20, [x19, #48]
  4031e8:	orr	w0, w0, #0x10
  4031ec:	str	w0, [x19, #8]
  4031f0:	ldp	x19, x20, [sp, #16]
  4031f4:	ldp	x29, x30, [sp], #32
  4031f8:	ret
  4031fc:	mov	x4, x1
  403200:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  403204:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403208:	add	x3, x3, #0x948
  40320c:	add	x2, x2, #0x8f8
  403210:	mov	w1, #0x0                   	// #0
  403214:	mov	w0, #0x1                   	// #1
  403218:	bl	401b30 <error@plt>
  40321c:	b	4031a0 <ferror@plt+0x12b0>
  403220:	stp	x29, x30, [sp, #-32]!
  403224:	mov	x29, sp
  403228:	stp	x19, x20, [sp, #16]
  40322c:	mov	x19, x0
  403230:	mov	x20, x1
  403234:	cbz	x0, 403294 <ferror@plt+0x13a4>
  403238:	ldr	w0, [x19, #8]
  40323c:	tbnz	w0, #5, 403258 <ferror@plt+0x1368>
  403240:	orr	w0, w0, #0x20
  403244:	str	w0, [x19, #8]
  403248:	str	x20, [x19, #56]
  40324c:	ldp	x19, x20, [sp, #16]
  403250:	ldp	x29, x30, [sp], #32
  403254:	ret
  403258:	ldr	x4, [x19]
  40325c:	mov	w1, #0x0                   	// #0
  403260:	mov	w0, #0x1                   	// #1
  403264:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  403268:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  40326c:	add	x3, x3, #0x950
  403270:	add	x2, x2, #0x920
  403274:	bl	401b30 <error@plt>
  403278:	ldr	w0, [x19, #8]
  40327c:	str	x20, [x19, #56]
  403280:	orr	w0, w0, #0x20
  403284:	str	w0, [x19, #8]
  403288:	ldp	x19, x20, [sp, #16]
  40328c:	ldp	x29, x30, [sp], #32
  403290:	ret
  403294:	mov	x4, x1
  403298:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  40329c:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4032a0:	add	x3, x3, #0x950
  4032a4:	add	x2, x2, #0x8f8
  4032a8:	mov	w1, #0x0                   	// #0
  4032ac:	mov	w0, #0x1                   	// #1
  4032b0:	bl	401b30 <error@plt>
  4032b4:	b	403238 <ferror@plt+0x1348>
  4032b8:	stp	x29, x30, [sp, #-32]!
  4032bc:	mov	x29, sp
  4032c0:	stp	x19, x20, [sp, #16]
  4032c4:	mov	x19, x0
  4032c8:	mov	x20, x1
  4032cc:	cbz	x0, 40332c <ferror@plt+0x143c>
  4032d0:	ldr	w0, [x19, #8]
  4032d4:	tbnz	w0, #6, 4032f0 <ferror@plt+0x1400>
  4032d8:	orr	w0, w0, #0x40
  4032dc:	str	w0, [x19, #8]
  4032e0:	str	x20, [x19, #64]
  4032e4:	ldp	x19, x20, [sp, #16]
  4032e8:	ldp	x29, x30, [sp], #32
  4032ec:	ret
  4032f0:	ldr	x4, [x19]
  4032f4:	mov	w1, #0x0                   	// #0
  4032f8:	mov	w0, #0x1                   	// #1
  4032fc:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  403300:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403304:	add	x3, x3, #0x970
  403308:	add	x2, x2, #0x920
  40330c:	bl	401b30 <error@plt>
  403310:	ldr	w0, [x19, #8]
  403314:	str	x20, [x19, #64]
  403318:	orr	w0, w0, #0x40
  40331c:	str	w0, [x19, #8]
  403320:	ldp	x19, x20, [sp, #16]
  403324:	ldp	x29, x30, [sp], #32
  403328:	ret
  40332c:	mov	x4, x1
  403330:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  403334:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403338:	add	x3, x3, #0x970
  40333c:	add	x2, x2, #0x8f8
  403340:	mov	w1, #0x0                   	// #0
  403344:	mov	w0, #0x1                   	// #1
  403348:	bl	401b30 <error@plt>
  40334c:	b	4032d0 <ferror@plt+0x13e0>
  403350:	stp	x29, x30, [sp, #-48]!
  403354:	mov	x29, sp
  403358:	stp	x19, x20, [sp, #16]
  40335c:	mov	x19, x0
  403360:	mov	x20, x1
  403364:	cbz	x0, 4033f0 <ferror@plt+0x1500>
  403368:	ldr	w0, [x19, #8]
  40336c:	tbnz	w0, #7, 4033cc <ferror@plt+0x14dc>
  403370:	add	x1, sp, #0x28
  403374:	mov	x0, x20
  403378:	mov	w2, #0x0                   	// #0
  40337c:	bl	401d10 <strtol@plt>
  403380:	str	w0, [x19, #72]
  403384:	ldrb	w0, [x20]
  403388:	cbz	w0, 403398 <ferror@plt+0x14a8>
  40338c:	ldr	x0, [sp, #40]
  403390:	ldrb	w0, [x0]
  403394:	cbz	w0, 4033b4 <ferror@plt+0x14c4>
  403398:	ldr	x4, [x19]
  40339c:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4033a0:	mov	x3, x20
  4033a4:	add	x2, x2, #0x9c0
  4033a8:	mov	w1, #0x0                   	// #0
  4033ac:	mov	w0, #0x1                   	// #1
  4033b0:	bl	401b30 <error@plt>
  4033b4:	ldr	w0, [x19, #8]
  4033b8:	orr	w0, w0, #0x80
  4033bc:	str	w0, [x19, #8]
  4033c0:	ldp	x19, x20, [sp, #16]
  4033c4:	ldp	x29, x30, [sp], #48
  4033c8:	ret
  4033cc:	ldr	x4, [x19]
  4033d0:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  4033d4:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4033d8:	add	x3, x3, #0x988
  4033dc:	add	x2, x2, #0x920
  4033e0:	mov	w1, #0x0                   	// #0
  4033e4:	mov	w0, #0x1                   	// #1
  4033e8:	bl	401b30 <error@plt>
  4033ec:	b	403370 <ferror@plt+0x1480>
  4033f0:	mov	x4, x1
  4033f4:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  4033f8:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4033fc:	add	x3, x3, #0x988
  403400:	add	x2, x2, #0x998
  403404:	mov	w1, #0x0                   	// #0
  403408:	mov	w0, #0x1                   	// #1
  40340c:	bl	401b30 <error@plt>
  403410:	b	403368 <ferror@plt+0x1478>
  403414:	nop
  403418:	stp	x29, x30, [sp, #-48]!
  40341c:	mov	x29, sp
  403420:	stp	x19, x20, [sp, #16]
  403424:	mov	x19, x0
  403428:	mov	x20, x1
  40342c:	cbz	x0, 4034b8 <ferror@plt+0x15c8>
  403430:	ldr	w0, [x19, #8]
  403434:	tbnz	w0, #8, 403494 <ferror@plt+0x15a4>
  403438:	add	x1, sp, #0x28
  40343c:	mov	x0, x20
  403440:	mov	w2, #0x0                   	// #0
  403444:	bl	401d10 <strtol@plt>
  403448:	str	w0, [x19, #76]
  40344c:	ldrb	w0, [x20]
  403450:	cbz	w0, 403460 <ferror@plt+0x1570>
  403454:	ldr	x0, [sp, #40]
  403458:	ldrb	w0, [x0]
  40345c:	cbz	w0, 40347c <ferror@plt+0x158c>
  403460:	ldr	x4, [x19]
  403464:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403468:	mov	x3, x20
  40346c:	add	x2, x2, #0x9c0
  403470:	mov	w1, #0x0                   	// #0
  403474:	mov	w0, #0x1                   	// #1
  403478:	bl	401b30 <error@plt>
  40347c:	ldr	w0, [x19, #8]
  403480:	orr	w0, w0, #0x100
  403484:	str	w0, [x19, #8]
  403488:	ldp	x19, x20, [sp, #16]
  40348c:	ldp	x29, x30, [sp], #48
  403490:	ret
  403494:	ldr	x4, [x19]
  403498:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  40349c:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4034a0:	add	x3, x3, #0x9f8
  4034a4:	add	x2, x2, #0x920
  4034a8:	mov	w1, #0x0                   	// #0
  4034ac:	mov	w0, #0x1                   	// #1
  4034b0:	bl	401b30 <error@plt>
  4034b4:	b	403438 <ferror@plt+0x1548>
  4034b8:	mov	x4, x1
  4034bc:	adrp	x3, 40e000 <argp_error@@Base+0x13a0>
  4034c0:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  4034c4:	add	x3, x3, #0x9f8
  4034c8:	add	x2, x2, #0x998
  4034cc:	mov	w1, #0x0                   	// #0
  4034d0:	mov	w0, #0x1                   	// #1
  4034d4:	bl	401b30 <error@plt>
  4034d8:	b	403430 <ferror@plt+0x1540>
  4034dc:	nop
  4034e0:	stp	x29, x30, [sp, #-32]!
  4034e4:	mov	x29, sp
  4034e8:	stp	x19, x20, [sp, #16]
  4034ec:	mov	x19, x0
  4034f0:	mov	x20, x1
  4034f4:	cbz	x0, 403560 <ferror@plt+0x1670>
  4034f8:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  4034fc:	mov	x0, x20
  403500:	add	x1, x1, #0xa38
  403504:	bl	401c60 <strcasecmp@plt>
  403508:	cbnz	w0, 40352c <ferror@plt+0x163c>
  40350c:	mov	w0, #0x2                   	// #2
  403510:	strh	w0, [x19, #32]
  403514:	ldr	w0, [x19, #8]
  403518:	orr	w0, w0, #0x4
  40351c:	str	w0, [x19, #8]
  403520:	ldp	x19, x20, [sp, #16]
  403524:	ldp	x29, x30, [sp], #32
  403528:	ret
  40352c:	ldr	x4, [x19]
  403530:	mov	x3, x20
  403534:	mov	w1, #0x0                   	// #0
  403538:	mov	w0, #0x1                   	// #1
  40353c:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403540:	add	x2, x2, #0xa40
  403544:	bl	401b30 <error@plt>
  403548:	ldr	w0, [x19, #8]
  40354c:	orr	w0, w0, #0x4
  403550:	str	w0, [x19, #8]
  403554:	ldp	x19, x20, [sp, #16]
  403558:	ldp	x29, x30, [sp], #32
  40355c:	ret
  403560:	mov	x3, x1
  403564:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403568:	mov	w1, #0x0                   	// #0
  40356c:	add	x2, x2, #0xa08
  403570:	mov	w0, #0x1                   	// #1
  403574:	bl	401b30 <error@plt>
  403578:	b	4034f8 <ferror@plt+0x1608>
  40357c:	nop
  403580:	mov	w0, w1
  403584:	cbz	w2, 40358c <ferror@plt+0x169c>
  403588:	b	402f58 <ferror@plt+0x1068>
  40358c:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  403590:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  403594:	ldr	w1, [x3, #1548]
  403598:	ldr	w4, [x2, #1544]
  40359c:	orr	w1, w1, w0
  4035a0:	str	w1, [x3, #1548]
  4035a4:	bic	w0, w4, w0
  4035a8:	str	w0, [x2, #1544]
  4035ac:	ret
  4035b0:	ldrb	w0, [x1]
  4035b4:	cbz	w0, 4036bc <ferror@plt+0x17cc>
  4035b8:	stp	x29, x30, [sp, #-96]!
  4035bc:	mov	x29, sp
  4035c0:	stp	x19, x20, [sp, #16]
  4035c4:	stp	x21, x22, [sp, #32]
  4035c8:	mov	x21, x1
  4035cc:	stp	x23, x24, [sp, #48]
  4035d0:	adrp	x24, 427000 <argp_error@@Base+0x1a3a0>
  4035d4:	add	x24, x24, #0x60c
  4035d8:	str	x25, [sp, #64]
  4035dc:	adrp	x25, 40e000 <argp_error@@Base+0x13a0>
  4035e0:	add	x25, x25, #0xa80
  4035e4:	b	403600 <ferror@plt+0x1710>
  4035e8:	bl	402f58 <ferror@plt+0x1068>
  4035ec:	cmp	x19, #0x0
  4035f0:	cset	w0, ne  // ne = any
  4035f4:	cinc	x21, x23, ne  // ne = any
  4035f8:	ldrb	w0, [x23, w0, uxtw]
  4035fc:	cbz	w0, 403670 <ferror@plt+0x1780>
  403600:	mov	x0, x21
  403604:	mov	w1, #0x2c                  	// #44
  403608:	bl	401d70 <strchr@plt>
  40360c:	mov	x19, x0
  403610:	cbz	x0, 4036a8 <ferror@plt+0x17b8>
  403614:	sub	x22, x0, x21
  403618:	mov	x23, x0
  40361c:	add	x2, sp, #0x5c
  403620:	mov	x1, x22
  403624:	mov	x0, x21
  403628:	bl	4024e0 <ferror@plt+0x5f0>
  40362c:	mov	w20, w0
  403630:	cbz	w0, 403688 <ferror@plt+0x1798>
  403634:	ldr	w2, [sp, #92]
  403638:	mov	w0, w20
  40363c:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  403640:	cbnz	w2, 4035e8 <ferror@plt+0x16f8>
  403644:	ldr	w0, [x24]
  403648:	cmp	x19, #0x0
  40364c:	ldr	w2, [x1, #1544]
  403650:	cinc	x21, x23, ne  // ne = any
  403654:	bic	w2, w2, w20
  403658:	orr	w20, w0, w20
  40365c:	cset	w0, ne  // ne = any
  403660:	str	w2, [x1, #1544]
  403664:	str	w20, [x24]
  403668:	ldrb	w0, [x23, w0, uxtw]
  40366c:	cbnz	w0, 403600 <ferror@plt+0x1710>
  403670:	ldp	x19, x20, [sp, #16]
  403674:	ldp	x21, x22, [sp, #32]
  403678:	ldp	x23, x24, [sp, #48]
  40367c:	ldr	x25, [sp, #64]
  403680:	ldp	x29, x30, [sp], #96
  403684:	ret
  403688:	mov	x5, x21
  40368c:	mov	w4, w22
  403690:	mov	w3, w22
  403694:	mov	x2, x25
  403698:	mov	w1, #0x0                   	// #0
  40369c:	mov	w0, #0x1                   	// #1
  4036a0:	bl	401b30 <error@plt>
  4036a4:	b	403634 <ferror@plt+0x1744>
  4036a8:	mov	x0, x21
  4036ac:	bl	401b00 <strlen@plt>
  4036b0:	mov	x22, x0
  4036b4:	add	x23, x21, x0
  4036b8:	b	40361c <ferror@plt+0x172c>
  4036bc:	ret
  4036c0:	stp	x29, x30, [sp, #-16]!
  4036c4:	mov	x29, sp
  4036c8:	bl	403220 <ferror@plt+0x1330>
  4036cc:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  4036d0:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  4036d4:	ldp	x29, x30, [sp], #16
  4036d8:	ldr	w1, [x3, #1548]
  4036dc:	ldr	w0, [x2, #1544]
  4036e0:	orr	w1, w1, #0x10
  4036e4:	str	w1, [x3, #1548]
  4036e8:	and	w0, w0, #0xffffffef
  4036ec:	str	w0, [x2, #1544]
  4036f0:	ret
  4036f4:	nop
  4036f8:	stp	x29, x30, [sp, #-32]!
  4036fc:	mov	x29, sp
  403700:	stp	x19, x20, [sp, #16]
  403704:	mov	x20, x0
  403708:	cbz	x0, 403750 <ferror@plt+0x1860>
  40370c:	adrp	x0, 426000 <argp_error@@Base+0x193a0>
  403710:	add	x19, x0, #0x400
  403714:	ldr	x1, [x0, #1024]
  403718:	cbnz	x1, 403728 <ferror@plt+0x1838>
  40371c:	b	403734 <ferror@plt+0x1844>
  403720:	ldr	x1, [x19, #24]!
  403724:	cbz	x1, 403734 <ferror@plt+0x1844>
  403728:	mov	x0, x20
  40372c:	bl	401cf0 <strcmp@plt>
  403730:	cbnz	w0, 403720 <ferror@plt+0x1830>
  403734:	ldr	x0, [x19, #16]
  403738:	cbz	x0, 40376c <ferror@plt+0x187c>
  40373c:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  403740:	ldp	x19, x20, [sp, #16]
  403744:	str	x0, [x1, #1560]
  403748:	ldp	x29, x30, [sp], #32
  40374c:	ret
  403750:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  403754:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  403758:	add	x0, x0, #0xa98
  40375c:	ldr	x20, [x1, #1160]
  403760:	cmp	x20, #0x0
  403764:	csel	x20, x0, x20, eq  // eq = none
  403768:	b	40370c <ferror@plt+0x181c>
  40376c:	mov	x3, x20
  403770:	mov	w1, #0x0                   	// #0
  403774:	mov	w0, #0x1                   	// #1
  403778:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  40377c:	add	x2, x2, #0xaa0
  403780:	bl	401b30 <error@plt>
  403784:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  403788:	ldr	x0, [x19, #16]
  40378c:	str	x0, [x1, #1560]
  403790:	ldp	x19, x20, [sp, #16]
  403794:	ldp	x29, x30, [sp], #32
  403798:	ret
  40379c:	nop
  4037a0:	stp	x29, x30, [sp, #-64]!
  4037a4:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  4037a8:	add	x1, x1, #0x9f0
  4037ac:	mov	x29, sp
  4037b0:	stp	x19, x20, [sp, #16]
  4037b4:	mov	x19, x0
  4037b8:	stp	x21, x22, [sp, #32]
  4037bc:	stp	xzr, xzr, [sp, #48]
  4037c0:	bl	401bd0 <fopen@plt>
  4037c4:	mov	x22, x0
  4037c8:	cbz	x0, 403970 <ferror@plt+0x1a80>
  4037cc:	adrp	x21, 427000 <argp_error@@Base+0x1a3a0>
  4037d0:	add	x21, x21, #0x500
  4037d4:	adrp	x4, 401000 <memcpy@plt-0xaa0>
  4037d8:	adrp	x3, 401000 <memcpy@plt-0xaa0>
  4037dc:	mov	x0, x21
  4037e0:	add	x4, x4, #0xd30
  4037e4:	add	x3, x3, #0xbe0
  4037e8:	mov	x2, #0x0                   	// #0
  4037ec:	mov	x1, #0x0                   	// #0
  4037f0:	bl	409920 <_obstack_begin@@Base>
  4037f4:	nop
  4037f8:	mov	x3, x22
  4037fc:	add	x1, sp, #0x38
  403800:	add	x0, sp, #0x30
  403804:	mov	w2, #0xa                   	// #10
  403808:	bl	401ec0 <__getdelim@plt>
  40380c:	cmp	x0, #0x0
  403810:	b.le	4038a8 <ferror@plt+0x19b8>
  403814:	ldr	x20, [sp, #48]
  403818:	mov	x0, x20
  40381c:	bl	401b00 <strlen@plt>
  403820:	mov	x19, x0
  403824:	cbz	x0, 4037f8 <ferror@plt+0x1908>
  403828:	sub	x0, x0, #0x1
  40382c:	ldrb	w1, [x20, x0]
  403830:	cmp	w1, #0xa
  403834:	b.eq	403928 <ferror@plt+0x1a38>  // b.none
  403838:	add	x0, x20, x19
  40383c:	mov	x2, x20
  403840:	cmp	x2, x0
  403844:	b.eq	403864 <ferror@plt+0x1974>  // b.none
  403848:	ldrb	w1, [x2], #1
  40384c:	cmp	w1, #0x20
  403850:	b.eq	403840 <ferror@plt+0x1950>  // b.none
  403854:	cmp	w1, #0x23
  403858:	b.eq	4037f8 <ferror@plt+0x1908>  // b.none
  40385c:	cmp	w1, #0x9
  403860:	b.eq	403840 <ferror@plt+0x1950>  // b.none
  403864:	ldp	x0, x1, [x21, #24]
  403868:	sub	x1, x1, x0
  40386c:	cmp	x1, x19
  403870:	b.cc	403934 <ferror@plt+0x1a44>  // b.lo, b.ul, b.last
  403874:	mov	x1, x20
  403878:	mov	x2, x19
  40387c:	bl	401aa0 <memcpy@plt>
  403880:	ldr	x0, [x21, #24]
  403884:	mov	x3, x22
  403888:	add	x1, sp, #0x38
  40388c:	mov	w2, #0xa                   	// #10
  403890:	add	x0, x0, x19
  403894:	str	x0, [x21, #24]
  403898:	add	x0, sp, #0x30
  40389c:	bl	401ec0 <__getdelim@plt>
  4038a0:	cmp	x0, #0x0
  4038a4:	b.gt	403814 <ferror@plt+0x1924>
  4038a8:	ldr	x0, [sp, #48]
  4038ac:	bl	401d30 <free@plt>
  4038b0:	mov	x0, x22
  4038b4:	bl	401bc0 <fclose@plt>
  4038b8:	ldp	x0, x1, [x21, #24]
  4038bc:	cmp	x1, x0
  4038c0:	b.eq	40395c <ferror@plt+0x1a6c>  // b.none
  4038c4:	add	x1, x0, #0x1
  4038c8:	str	x1, [x21, #24]
  4038cc:	strb	wzr, [x0]
  4038d0:	ldp	x3, x2, [x21, #16]
  4038d4:	cmp	x2, x3
  4038d8:	b.eq	40394c <ferror@plt+0x1a5c>  // b.none
  4038dc:	ldr	x0, [x21, #48]
  4038e0:	ldr	x1, [x21, #8]
  4038e4:	add	x2, x2, x0
  4038e8:	ldr	x4, [x21, #32]
  4038ec:	bic	x0, x2, x0
  4038f0:	str	x0, [x21, #24]
  4038f4:	sub	x2, x0, x1
  4038f8:	sub	x1, x4, x1
  4038fc:	cmp	x2, x1
  403900:	b.ls	40390c <ferror@plt+0x1a1c>  // b.plast
  403904:	mov	x0, x4
  403908:	str	x4, [x21, #24]
  40390c:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  403910:	str	x0, [x21, #16]
  403914:	ldp	x19, x20, [sp, #16]
  403918:	str	x3, [x1, #1560]
  40391c:	ldp	x21, x22, [sp, #32]
  403920:	ldp	x29, x30, [sp], #64
  403924:	ret
  403928:	cbz	x0, 4037f8 <ferror@plt+0x1908>
  40392c:	mov	x19, x0
  403930:	b	403838 <ferror@plt+0x1948>
  403934:	mov	x0, x21
  403938:	mov	x1, x19
  40393c:	bl	409950 <_obstack_newchunk@@Base>
  403940:	ldr	x0, [x21, #24]
  403944:	ldr	x20, [sp, #48]
  403948:	b	403874 <ferror@plt+0x1984>
  40394c:	ldrb	w0, [x21, #80]
  403950:	orr	w0, w0, #0x2
  403954:	strb	w0, [x21, #80]
  403958:	b	4038dc <ferror@plt+0x19ec>
  40395c:	mov	x0, x21
  403960:	mov	x1, #0x1                   	// #1
  403964:	bl	409950 <_obstack_newchunk@@Base>
  403968:	ldr	x0, [x21, #24]
  40396c:	b	4038c4 <ferror@plt+0x19d4>
  403970:	bl	401ea0 <__errno_location@plt>
  403974:	mov	x1, x0
  403978:	mov	x3, x19
  40397c:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403980:	mov	w0, #0x1                   	// #1
  403984:	add	x2, x2, #0xac0
  403988:	ldr	w1, [x1]
  40398c:	bl	401b30 <error@plt>
  403990:	b	4037cc <ferror@plt+0x18dc>
  403994:	nop
  403998:	stp	x29, x30, [sp, #-32]!
  40399c:	mov	w3, w0
  4039a0:	cmp	w0, #0x6d
  4039a4:	mov	x29, sp
  4039a8:	str	x19, [sp, #16]
  4039ac:	mov	x19, x2
  4039b0:	ldr	x2, [x2, #40]
  4039b4:	ldr	x0, [x2]
  4039b8:	b.eq	403bd0 <ferror@plt+0x1ce0>  // b.none
  4039bc:	mov	x7, x1
  4039c0:	b.gt	403a64 <ferror@plt+0x1b74>
  4039c4:	cmp	w3, #0x61
  4039c8:	b.eq	403bdc <ferror@plt+0x1cec>  // b.none
  4039cc:	b.le	403a44 <ferror@plt+0x1b54>
  4039d0:	cmp	w3, #0x69
  4039d4:	b.eq	403b50 <ferror@plt+0x1c60>  // b.none
  4039d8:	b.le	403a04 <ferror@plt+0x1b14>
  4039dc:	cmp	w3, #0x6c
  4039e0:	b.ne	403b40 <ferror@plt+0x1c50>  // b.any
  4039e4:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  4039e8:	mov	w0, #0x0                   	// #0
  4039ec:	ldr	w1, [x2, #1580]
  4039f0:	add	w1, w1, #0x1
  4039f4:	str	w1, [x2, #1580]
  4039f8:	ldr	x19, [sp, #16]
  4039fc:	ldp	x29, x30, [sp], #32
  403a00:	ret
  403a04:	cmp	w3, #0x62
  403a08:	b.eq	403b0c <ferror@plt+0x1c1c>  // b.none
  403a0c:	cmp	w3, #0x64
  403a10:	b.ne	403b40 <ferror@plt+0x1c50>  // b.any
  403a14:	mov	x1, x7
  403a18:	bl	403220 <ferror@plt+0x1330>
  403a1c:	adrp	x4, 427000 <argp_error@@Base+0x1a3a0>
  403a20:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  403a24:	mov	w0, #0x0                   	// #0
  403a28:	ldr	w2, [x4, #1548]
  403a2c:	ldr	w1, [x3, #1544]
  403a30:	orr	w2, w2, #0x10
  403a34:	str	w2, [x4, #1548]
  403a38:	and	w1, w1, #0xffffffef
  403a3c:	str	w1, [x3, #1544]
  403a40:	b	4039f8 <ferror@plt+0x1b08>
  403a44:	cmp	w3, #0x46
  403a48:	b.eq	403b7c <ferror@plt+0x1c8c>  // b.none
  403a4c:	b.le	403a98 <ferror@plt+0x1ba8>
  403a50:	cmp	w3, #0x4d
  403a54:	b.ne	403b40 <ferror@plt+0x1c50>  // b.any
  403a58:	bl	403350 <ferror@plt+0x1460>
  403a5c:	mov	w0, #0x0                   	// #0
  403a60:	b	4039f8 <ferror@plt+0x1b08>
  403a64:	cmp	w3, #0x101
  403a68:	b.eq	403b88 <ferror@plt+0x1c98>  // b.none
  403a6c:	b.le	403ae4 <ferror@plt+0x1bf4>
  403a70:	cmp	w3, #0x103
  403a74:	b.eq	403ba8 <ferror@plt+0x1cb8>  // b.none
  403a78:	mov	w0, #0x3                   	// #3
  403a7c:	movk	w0, #0x100, lsl #16
  403a80:	cmp	w3, w0
  403a84:	b.ne	403aac <ferror@plt+0x1bbc>  // b.any
  403a88:	ldr	x1, [x19, #48]
  403a8c:	mov	w0, #0x0                   	// #0
  403a90:	str	x2, [x1]
  403a94:	b	4039f8 <ferror@plt+0x1b08>
  403a98:	cmp	w3, #0x41
  403a9c:	b.ne	403b04 <ferror@plt+0x1c14>  // b.any
  403aa0:	bl	4030f0 <ferror@plt+0x1200>
  403aa4:	mov	w0, #0x0                   	// #0
  403aa8:	b	4039f8 <ferror@plt+0x1b08>
  403aac:	cmp	w3, #0x102
  403ab0:	b.ne	403b40 <ferror@plt+0x1c50>  // b.any
  403ab4:	adrp	x4, 427000 <argp_error@@Base+0x1a3a0>
  403ab8:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  403abc:	mov	w6, #0x41                  	// #65
  403ac0:	mov	w5, #0xffffffbe            	// #-66
  403ac4:	ldr	w2, [x4, #1548]
  403ac8:	mov	w0, #0x0                   	// #0
  403acc:	ldr	w1, [x3, #1544]
  403ad0:	orr	w2, w2, w6
  403ad4:	str	w2, [x4, #1548]
  403ad8:	and	w1, w1, w5
  403adc:	str	w1, [x3, #1544]
  403ae0:	b	4039f8 <ferror@plt+0x1b08>
  403ae4:	cmp	w3, #0x76
  403ae8:	b.eq	403bb8 <ferror@plt+0x1cc8>  // b.none
  403aec:	b.le	403b1c <ferror@plt+0x1c2c>
  403af0:	cmp	w3, #0x100
  403af4:	b.ne	403b40 <ferror@plt+0x1c50>  // b.any
  403af8:	bl	403418 <ferror@plt+0x1528>
  403afc:	mov	w0, #0x0                   	// #0
  403b00:	b	4039f8 <ferror@plt+0x1b08>
  403b04:	cmp	w3, #0x42
  403b08:	b.ne	403b40 <ferror@plt+0x1c50>  // b.any
  403b0c:	mov	x1, x7
  403b10:	bl	4032b8 <ferror@plt+0x13c8>
  403b14:	mov	w0, #0x0                   	// #0
  403b18:	b	4039f8 <ferror@plt+0x1b08>
  403b1c:	cmp	w3, #0x70
  403b20:	b.eq	403a14 <ferror@plt+0x1b24>  // b.none
  403b24:	cmp	w3, #0x73
  403b28:	b.ne	403b40 <ferror@plt+0x1c50>  // b.any
  403b2c:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  403b30:	add	x0, x0, #0xae0
  403b34:	bl	4036f8 <ferror@plt+0x1808>
  403b38:	mov	w0, #0x0                   	// #0
  403b3c:	b	4039f8 <ferror@plt+0x1b08>
  403b40:	mov	w0, #0x7                   	// #7
  403b44:	ldr	x19, [sp, #16]
  403b48:	ldp	x29, x30, [sp], #32
  403b4c:	ret
  403b50:	cbz	x0, 403b60 <ferror@plt+0x1c70>
  403b54:	ldr	w1, [x0, #8]
  403b58:	cbnz	w1, 403b60 <ferror@plt+0x1c70>
  403b5c:	bl	402f80 <ferror@plt+0x1090>
  403b60:	mov	x0, x7
  403b64:	bl	403018 <ferror@plt+0x1128>
  403b68:	ldr	x1, [x19, #40]
  403b6c:	mov	x2, x0
  403b70:	mov	w0, #0x0                   	// #0
  403b74:	str	x2, [x1]
  403b78:	b	4039f8 <ferror@plt+0x1b08>
  403b7c:	bl	4035b0 <ferror@plt+0x16c0>
  403b80:	mov	w0, #0x0                   	// #0
  403b84:	b	4039f8 <ferror@plt+0x1b08>
  403b88:	cbz	x1, 403b98 <ferror@plt+0x1ca8>
  403b8c:	ldrb	w0, [x1]
  403b90:	cmp	w0, #0x40
  403b94:	b.eq	403bf0 <ferror@plt+0x1d00>  // b.none
  403b98:	mov	x0, x7
  403b9c:	bl	4036f8 <ferror@plt+0x1808>
  403ba0:	mov	w0, #0x0                   	// #0
  403ba4:	b	4039f8 <ferror@plt+0x1b08>
  403ba8:	mov	w0, #0x1                   	// #1
  403bac:	bl	402f58 <ferror@plt+0x1068>
  403bb0:	mov	w0, #0x0                   	// #0
  403bb4:	b	4039f8 <ferror@plt+0x1b08>
  403bb8:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  403bbc:	mov	w0, #0x0                   	// #0
  403bc0:	ldr	w1, [x2, #1576]
  403bc4:	add	w1, w1, #0x1
  403bc8:	str	w1, [x2, #1576]
  403bcc:	b	4039f8 <ferror@plt+0x1b08>
  403bd0:	bl	403188 <ferror@plt+0x1298>
  403bd4:	mov	w0, #0x0                   	// #0
  403bd8:	b	4039f8 <ferror@plt+0x1b08>
  403bdc:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  403be0:	mov	w2, #0x1                   	// #1
  403be4:	mov	w0, #0x0                   	// #0
  403be8:	str	w2, [x1, #1568]
  403bec:	b	4039f8 <ferror@plt+0x1b08>
  403bf0:	add	x0, x1, #0x1
  403bf4:	bl	4037a0 <ferror@plt+0x18b0>
  403bf8:	mov	w0, #0x0                   	// #0
  403bfc:	b	4039f8 <ferror@plt+0x1b08>
  403c00:	cbz	x0, 403c10 <ferror@plt+0x1d20>
  403c04:	ldr	w1, [x0, #8]
  403c08:	cbnz	w1, 403c10 <ferror@plt+0x1d20>
  403c0c:	b	402f80 <ferror@plt+0x1090>
  403c10:	ret
  403c14:	nop
  403c18:	stp	x29, x30, [sp, #-80]!
  403c1c:	mov	x29, sp
  403c20:	stp	x19, x20, [sp, #16]
  403c24:	adrp	x19, 427000 <argp_error@@Base+0x1a3a0>
  403c28:	adrp	x20, 426000 <argp_error@@Base+0x193a0>
  403c2c:	ldr	x2, [x19, #1536]
  403c30:	stp	x21, x22, [sp, #32]
  403c34:	mov	x22, x1
  403c38:	mov	w21, w0
  403c3c:	mov	x0, #0x0                   	// #0
  403c40:	str	x2, [sp, #72]
  403c44:	bl	4036f8 <ferror@plt+0x1808>
  403c48:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403c4c:	add	x2, x2, #0xae8
  403c50:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  403c54:	add	x20, x20, #0x400
  403c58:	add	x1, x20, #0x120
  403c5c:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  403c60:	str	x2, [x3, #1624]
  403c64:	add	x0, x0, #0xb00
  403c68:	bl	408c78 <argp_parse@@Base+0xcd0>
  403c6c:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  403c70:	add	x3, x3, #0x3c8
  403c74:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  403c78:	adrp	x6, 427000 <argp_error@@Base+0x1a3a0>
  403c7c:	add	x6, x6, #0x500
  403c80:	add	x0, x20, #0x130
  403c84:	ldp	x10, x11, [x3]
  403c88:	add	x7, x6, #0x58
  403c8c:	ldp	x8, x9, [x3, #16]
  403c90:	mov	x2, x22
  403c94:	ldr	x12, [x1, #1152]
  403c98:	add	x5, sp, #0x48
  403c9c:	mov	w1, w21
  403ca0:	add	x4, sp, #0x44
  403ca4:	mov	w3, #0x8                   	// #8
  403ca8:	str	x12, [x0, #16]
  403cac:	str	x7, [x0, #32]
  403cb0:	stp	x10, x11, [x6, #88]
  403cb4:	stp	x8, x9, [x6, #104]
  403cb8:	bl	407fa8 <argp_parse@@Base>
  403cbc:	ldr	x0, [sp, #72]
  403cc0:	cbz	x0, 403ccc <ferror@plt+0x1ddc>
  403cc4:	ldr	w1, [x0, #8]
  403cc8:	cbz	w1, 403cf0 <ferror@plt+0x1e00>
  403ccc:	ldr	w1, [sp, #68]
  403cd0:	cmp	w1, w21
  403cd4:	b.lt	403d00 <ferror@plt+0x1e10>  // b.tstop
  403cd8:	ldr	x0, [x19, #1536]
  403cdc:	cbz	x0, 403d30 <ferror@plt+0x1e40>
  403ce0:	ldp	x19, x20, [sp, #16]
  403ce4:	ldp	x21, x22, [sp, #32]
  403ce8:	ldp	x29, x30, [sp], #80
  403cec:	ret
  403cf0:	bl	402f80 <ferror@plt+0x1090>
  403cf4:	ldr	w1, [sp, #68]
  403cf8:	cmp	w1, w21
  403cfc:	b.ge	403cd8 <ferror@plt+0x1de8>  // b.tcont
  403d00:	add	x2, x22, w1, sxtw #3
  403d04:	add	x0, sp, #0x48
  403d08:	sub	w1, w21, w1
  403d0c:	bl	4075a0 <ferror@plt+0x56b0>
  403d10:	cbz	w0, 403e2c <ferror@plt+0x1f3c>
  403d14:	ldr	x0, [sp, #72]
  403d18:	cbz	x0, 403cd8 <ferror@plt+0x1de8>
  403d1c:	ldr	w1, [x0, #8]
  403d20:	cbnz	w1, 403cd8 <ferror@plt+0x1de8>
  403d24:	bl	402f80 <ferror@plt+0x1090>
  403d28:	ldr	x0, [x19, #1536]
  403d2c:	cbnz	x0, 403ce0 <ferror@plt+0x1df0>
  403d30:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  403d34:	str	x23, [sp, #48]
  403d38:	ldr	x0, [x0, #960]
  403d3c:	blr	x0
  403d40:	mov	x22, x0
  403d44:	cbz	x0, 403e44 <ferror@plt+0x1f54>
  403d48:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  403d4c:	adrp	x20, 40e000 <argp_error@@Base+0x13a0>
  403d50:	adrp	x21, 40f000 <argp_error@@Base+0x23a0>
  403d54:	add	x23, x0, #0x610
  403d58:	ldr	w13, [x0, #1552]
  403d5c:	add	x20, x20, #0x8c0
  403d60:	ldr	x12, [x19, #1536]
  403d64:	add	x21, x21, #0xe20
  403d68:	b	403de4 <ferror@plt+0x1ef4>
  403d6c:	str	w2, [x23]
  403d70:	bl	401c70 <realloc@plt>
  403d74:	str	x0, [x19, #1536]
  403d78:	mov	x12, x0
  403d7c:	cbz	x0, 403e5c <ferror@plt+0x1f6c>
  403d80:	ldr	w13, [x23]
  403d84:	mov	x1, #0xffffffffffffffa8    	// #-88
  403d88:	mov	w0, #0x58                  	// #88
  403d8c:	adrp	x15, 427000 <argp_error@@Base+0x1a3a0>
  403d90:	ldp	x8, x9, [x21]
  403d94:	add	x22, x22, #0x10
  403d98:	smaddl	x0, w13, w0, x1
  403d9c:	mov	w14, #0x2                   	// #2
  403da0:	ldp	x6, x7, [x21, #16]
  403da4:	add	x1, x12, x0
  403da8:	ldp	x4, x5, [x21, #32]
  403dac:	stp	x8, x9, [x1]
  403db0:	ldp	x2, x3, [x21, #48]
  403db4:	stp	x6, x7, [x1, #16]
  403db8:	ldp	x10, x11, [x21, #64]
  403dbc:	stp	x4, x5, [x1, #32]
  403dc0:	ldr	x8, [x21, #80]
  403dc4:	stp	x2, x3, [x1, #48]
  403dc8:	stp	x10, x11, [x1, #64]
  403dcc:	str	x8, [x1, #80]
  403dd0:	ldr	x2, [x15, #1560]
  403dd4:	ldur	x3, [x22, #-8]
  403dd8:	str	x3, [x12, x0]
  403ddc:	str	w14, [x1, #8]
  403de0:	str	x2, [x1, #24]
  403de4:	ldr	w3, [x22]
  403de8:	add	w2, w13, #0x1
  403dec:	mov	w1, #0x58                  	// #88
  403df0:	mov	x0, x12
  403df4:	smull	x1, w2, w1
  403df8:	cbnz	w3, 403d6c <ferror@plt+0x1e7c>
  403dfc:	ldr	x3, [x22, #8]
  403e00:	cbnz	x3, 403d6c <ferror@plt+0x1e7c>
  403e04:	sxtw	x1, w13
  403e08:	mov	x2, #0x58                  	// #88
  403e0c:	adrp	x3, 402000 <ferror@plt+0x110>
  403e10:	add	x3, x3, #0xf20
  403e14:	bl	401b80 <qsort@plt>
  403e18:	ldp	x19, x20, [sp, #16]
  403e1c:	ldp	x21, x22, [sp, #32]
  403e20:	ldr	x23, [sp, #48]
  403e24:	ldp	x29, x30, [sp], #80
  403e28:	ret
  403e2c:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403e30:	mov	w1, #0x0                   	// #0
  403e34:	add	x2, x2, #0xb10
  403e38:	mov	w0, #0x1                   	// #1
  403e3c:	bl	401b30 <error@plt>
  403e40:	b	403d14 <ferror@plt+0x1e24>
  403e44:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  403e48:	mov	w1, #0x0                   	// #0
  403e4c:	add	x2, x2, #0xb28
  403e50:	mov	w0, #0x1                   	// #1
  403e54:	bl	401b30 <error@plt>
  403e58:	b	403d48 <ferror@plt+0x1e58>
  403e5c:	bl	401ea0 <__errno_location@plt>
  403e60:	mov	x1, x0
  403e64:	mov	x2, x20
  403e68:	mov	w0, #0x1                   	// #1
  403e6c:	ldr	w1, [x1]
  403e70:	bl	401b30 <error@plt>
  403e74:	ldr	x12, [x19, #1536]
  403e78:	b	403d80 <ferror@plt+0x1e90>
  403e7c:	nop
  403e80:	ret
  403e84:	nop
  403e88:	stp	x29, x30, [sp, #-64]!
  403e8c:	mov	x29, sp
  403e90:	stp	x19, x20, [sp, #16]
  403e94:	mov	w19, w1
  403e98:	mov	x20, x2
  403e9c:	bl	401ea0 <__errno_location@plt>
  403ea0:	str	wzr, [x0]
  403ea4:	cmp	w19, #0x0
  403ea8:	b.gt	403f3c <ferror@plt+0x204c>
  403eac:	adrp	x0, 426000 <argp_error@@Base+0x193a0>
  403eb0:	ldr	x3, [x0, #2248]
  403eb4:	ldr	w2, [x3]
  403eb8:	cmp	w2, #0x0
  403ebc:	add	w19, w2, #0x7
  403ec0:	csel	w19, w19, w2, lt  // lt = tstop
  403ec4:	and	w19, w19, #0xfffffff8
  403ec8:	add	w19, w19, #0x8
  403ecc:	sxtw	x19, w19
  403ed0:	cmp	x19, w2, sxtw
  403ed4:	b.le	403f30 <ferror@plt+0x2040>
  403ed8:	adrp	x20, 426000 <argp_error@@Base+0x193a0>
  403edc:	add	x20, x20, #0x8c8
  403ee0:	stp	x21, x22, [sp, #32]
  403ee4:	adrp	x22, 427000 <argp_error@@Base+0x1a3a0>
  403ee8:	adrp	x21, 427000 <argp_error@@Base+0x1a3a0>
  403eec:	add	x22, x22, #0x640
  403ef0:	add	x21, x21, #0x630
  403ef4:	str	x23, [sp, #48]
  403ef8:	mov	w23, #0x1                   	// #1
  403efc:	nop
  403f00:	ldr	x1, [x22]
  403f04:	add	w2, w2, #0x1
  403f08:	str	w2, [x3]
  403f0c:	mov	w0, #0x20                  	// #32
  403f10:	bl	401b60 <putc@plt>
  403f14:	str	w23, [x21]
  403f18:	ldr	x3, [x20]
  403f1c:	ldr	w2, [x3]
  403f20:	cmp	x19, w2, sxtw
  403f24:	b.gt	403f00 <ferror@plt+0x2010>
  403f28:	ldp	x21, x22, [sp, #32]
  403f2c:	ldr	x23, [sp, #48]
  403f30:	ldp	x19, x20, [sp, #16]
  403f34:	ldp	x29, x30, [sp], #64
  403f38:	ret
  403f3c:	ldr	x0, [x20]
  403f40:	mov	w2, #0x0                   	// #0
  403f44:	mov	x1, #0x0                   	// #0
  403f48:	bl	401d10 <strtol@plt>
  403f4c:	mov	x19, x0
  403f50:	cmp	x0, #0x0
  403f54:	b.le	403eac <ferror@plt+0x1fbc>
  403f58:	adrp	x0, 426000 <argp_error@@Base+0x193a0>
  403f5c:	ldr	x3, [x0, #2248]
  403f60:	ldr	w2, [x3]
  403f64:	b	403ed0 <ferror@plt+0x1fe0>
  403f68:	stp	x29, x30, [sp, #-16]!
  403f6c:	cmp	w1, #0x0
  403f70:	mov	w0, #0x0                   	// #0
  403f74:	mov	x29, sp
  403f78:	b.gt	403f80 <ferror@plt+0x2090>
  403f7c:	bl	401b20 <exit@plt>
  403f80:	ldr	x0, [x2]
  403f84:	mov	x1, #0x0                   	// #0
  403f88:	mov	w2, #0x0                   	// #0
  403f8c:	bl	401af0 <strtoul@plt>
  403f90:	bl	401b20 <exit@plt>
  403f94:	nop
  403f98:	stp	x29, x30, [sp, #-32]!
  403f9c:	mov	x29, sp
  403fa0:	stp	x19, x20, [sp, #16]
  403fa4:	mov	x20, x0
  403fa8:	ldr	x0, [x0]
  403fac:	bl	401e00 <if_nametoindex@plt>
  403fb0:	mov	w19, w0
  403fb4:	cbz	w0, 403ff4 <ferror@plt+0x2104>
  403fb8:	mov	w1, w19
  403fbc:	adrp	x0, 40f000 <argp_error@@Base+0x23a0>
  403fc0:	add	x0, x0, #0xec8
  403fc4:	bl	401e80 <printf@plt>
  403fc8:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  403fcc:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  403fd0:	ldp	x19, x20, [sp, #16]
  403fd4:	mov	w4, #0x1                   	// #1
  403fd8:	ldr	x2, [x1, #2248]
  403fdc:	ldr	w1, [x2]
  403fe0:	add	w1, w1, w0
  403fe4:	str	w1, [x2]
  403fe8:	str	w4, [x3, #1584]
  403fec:	ldp	x29, x30, [sp], #32
  403ff0:	ret
  403ff4:	bl	401ea0 <__errno_location@plt>
  403ff8:	ldr	w1, [x0]
  403ffc:	ldr	x3, [x20]
  404000:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  404004:	mov	w0, #0x1                   	// #1
  404008:	add	x2, x2, #0xe98
  40400c:	bl	401b30 <error@plt>
  404010:	b	403fb8 <ferror@plt+0x20c8>
  404014:	nop
  404018:	stp	x29, x30, [sp, #-16]!
  40401c:	adrp	x2, 426000 <argp_error@@Base+0x193a0>
  404020:	and	w0, w1, #0xff
  404024:	mov	x29, sp
  404028:	cmp	w0, #0x9
  40402c:	ldr	x1, [x2, #2248]
  404030:	b.eq	404060 <ferror@plt+0x2170>  // b.none
  404034:	cmp	w0, #0xa
  404038:	b.ne	40409c <ferror@plt+0x21ac>  // b.any
  40403c:	str	wzr, [x1]
  404040:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  404044:	ldr	x1, [x1, #1600]
  404048:	bl	401b60 <putc@plt>
  40404c:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  404050:	mov	w1, #0x1                   	// #1
  404054:	ldp	x29, x30, [sp], #16
  404058:	str	w1, [x0, #1584]
  40405c:	ret
  404060:	ldr	w3, [x1]
  404064:	cmp	w3, #0x0
  404068:	add	w2, w3, #0x7
  40406c:	csel	w2, w2, w3, lt  // lt = tstop
  404070:	and	w2, w2, #0xfffffff8
  404074:	add	w2, w2, #0x8
  404078:	str	w2, [x1]
  40407c:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  404080:	ldr	x1, [x1, #1600]
  404084:	bl	401b60 <putc@plt>
  404088:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40408c:	mov	w1, #0x1                   	// #1
  404090:	ldp	x29, x30, [sp], #16
  404094:	str	w1, [x0, #1584]
  404098:	ret
  40409c:	ldr	w2, [x1]
  4040a0:	add	w2, w2, #0x1
  4040a4:	str	w2, [x1]
  4040a8:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  4040ac:	ldr	x1, [x1, #1600]
  4040b0:	bl	401b60 <putc@plt>
  4040b4:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  4040b8:	mov	w1, #0x1                   	// #1
  4040bc:	ldp	x29, x30, [sp], #16
  4040c0:	str	w1, [x0, #1584]
  4040c4:	ret
  4040c8:	mov	w1, #0xa                   	// #10
  4040cc:	b	404018 <ferror@plt+0x2128>
  4040d0:	mov	w1, #0x9                   	// #9
  4040d4:	b	404018 <ferror@plt+0x2128>
  4040d8:	cmp	w1, #0x0
  4040dc:	stp	x29, x30, [sp, #-48]!
  4040e0:	csel	x2, x0, x2, eq  // eq = none
  4040e4:	mov	x29, sp
  4040e8:	str	x21, [sp, #32]
  4040ec:	ldr	x21, [x2]
  4040f0:	stp	x19, x20, [sp, #16]
  4040f4:	mov	x20, x0
  4040f8:	mov	x0, x21
  4040fc:	bl	402fb8 <ferror@plt+0x10c8>
  404100:	mov	x19, x0
  404104:	cbz	x0, 404138 <ferror@plt+0x2248>
  404108:	ldr	x19, [x19, #8]
  40410c:	ldrb	w1, [x19]
  404110:	cbz	w1, 404128 <ferror@plt+0x2238>
  404114:	nop
  404118:	mov	x0, x20
  40411c:	bl	404018 <ferror@plt+0x2128>
  404120:	ldrb	w1, [x19, #1]!
  404124:	cbnz	w1, 404118 <ferror@plt+0x2228>
  404128:	ldp	x19, x20, [sp, #16]
  40412c:	ldr	x21, [sp, #32]
  404130:	ldp	x29, x30, [sp], #48
  404134:	ret
  404138:	bl	401ea0 <__errno_location@plt>
  40413c:	mov	x1, x0
  404140:	mov	x3, x21
  404144:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  404148:	mov	w0, #0x1                   	// #1
  40414c:	add	x2, x2, #0xed0
  404150:	ldr	w1, [x1]
  404154:	bl	401b30 <error@plt>
  404158:	b	404108 <ferror@plt+0x2218>
  40415c:	nop
  404160:	cmp	w1, #0x0
  404164:	stp	x29, x30, [sp, #-48]!
  404168:	csel	x2, x0, x2, eq  // eq = none
  40416c:	mov	x29, sp
  404170:	str	x21, [sp, #32]
  404174:	ldr	x21, [x2]
  404178:	stp	x19, x20, [sp, #16]
  40417c:	mov	x20, x0
  404180:	mov	x0, x21
  404184:	bl	402fb8 <ferror@plt+0x10c8>
  404188:	mov	x19, x0
  40418c:	cbz	x0, 4041c0 <ferror@plt+0x22d0>
  404190:	ldr	x19, [x19, #16]
  404194:	ldrb	w1, [x19]
  404198:	cbz	w1, 4041b0 <ferror@plt+0x22c0>
  40419c:	nop
  4041a0:	mov	x0, x20
  4041a4:	bl	404018 <ferror@plt+0x2128>
  4041a8:	ldrb	w1, [x19, #1]!
  4041ac:	cbnz	w1, 4041a0 <ferror@plt+0x22b0>
  4041b0:	ldp	x19, x20, [sp, #16]
  4041b4:	ldr	x21, [sp, #32]
  4041b8:	ldp	x29, x30, [sp], #48
  4041bc:	ret
  4041c0:	bl	401ea0 <__errno_location@plt>
  4041c4:	mov	x1, x0
  4041c8:	mov	x3, x21
  4041cc:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  4041d0:	mov	w0, #0x1                   	// #1
  4041d4:	add	x2, x2, #0xed0
  4041d8:	ldr	w1, [x1]
  4041dc:	bl	401b30 <error@plt>
  4041e0:	b	404190 <ferror@plt+0x22a0>
  4041e4:	nop
  4041e8:	stp	x29, x30, [sp, #-32]!
  4041ec:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  4041f0:	mov	x29, sp
  4041f4:	stp	x19, x20, [sp, #16]
  4041f8:	ldr	x19, [x1, #1472]
  4041fc:	ldrb	w1, [x19]
  404200:	cbz	w1, 404218 <ferror@plt+0x2328>
  404204:	mov	x20, x0
  404208:	mov	x0, x20
  40420c:	bl	404018 <ferror@plt+0x2128>
  404210:	ldrb	w1, [x19, #1]!
  404214:	cbnz	w1, 404208 <ferror@plt+0x2318>
  404218:	ldp	x19, x20, [sp, #16]
  40421c:	ldp	x29, x30, [sp], #32
  404220:	ret
  404224:	nop
  404228:	stp	x29, x30, [sp, #-32]!
  40422c:	mov	x29, sp
  404230:	stp	x19, x20, [sp, #16]
  404234:	ldr	x19, [x0]
  404238:	ldrb	w1, [x19]
  40423c:	cbz	w1, 404258 <ferror@plt+0x2368>
  404240:	mov	x20, x0
  404244:	nop
  404248:	mov	x0, x20
  40424c:	bl	404018 <ferror@plt+0x2128>
  404250:	ldrb	w1, [x19, #1]!
  404254:	cbnz	w1, 404248 <ferror@plt+0x2358>
  404258:	ldp	x19, x20, [sp, #16]
  40425c:	ldp	x29, x30, [sp], #32
  404260:	ret
  404264:	nop
  404268:	stp	x29, x30, [sp, #-32]!
  40426c:	mov	w1, #0x28                  	// #40
  404270:	mov	x29, sp
  404274:	stp	x19, x20, [sp, #16]
  404278:	adrp	x19, 40f000 <argp_error@@Base+0x23a0>
  40427c:	mov	x20, x0
  404280:	add	x19, x19, #0xee8
  404284:	nop
  404288:	mov	x0, x20
  40428c:	bl	404018 <ferror@plt+0x2128>
  404290:	ldrb	w1, [x19, #1]!
  404294:	cbnz	w1, 404288 <ferror@plt+0x2398>
  404298:	ldp	x19, x20, [sp, #16]
  40429c:	ldp	x29, x30, [sp], #32
  4042a0:	ret
  4042a4:	nop
  4042a8:	b	404268 <ferror@plt+0x2378>
  4042ac:	nop
  4042b0:	stp	x29, x30, [sp, #-32]!
  4042b4:	mov	w1, #0x28                  	// #40
  4042b8:	mov	x29, sp
  4042bc:	stp	x19, x20, [sp, #16]
  4042c0:	adrp	x19, 40f000 <argp_error@@Base+0x23a0>
  4042c4:	mov	x20, x0
  4042c8:	add	x19, x19, #0xef8
  4042cc:	nop
  4042d0:	mov	x0, x20
  4042d4:	bl	404018 <ferror@plt+0x2128>
  4042d8:	ldrb	w1, [x19, #1]!
  4042dc:	cbnz	w1, 4042d0 <ferror@plt+0x23e0>
  4042e0:	ldp	x19, x20, [sp, #16]
  4042e4:	ldp	x29, x30, [sp], #32
  4042e8:	ret
  4042ec:	nop
  4042f0:	stp	x29, x30, [sp, #-32]!
  4042f4:	mov	x29, sp
  4042f8:	stp	x19, x20, [sp, #16]
  4042fc:	mov	x19, x1
  404300:	ldrb	w1, [x1]
  404304:	cbz	w1, 404320 <ferror@plt+0x2430>
  404308:	mov	x20, x0
  40430c:	nop
  404310:	mov	x0, x20
  404314:	bl	404018 <ferror@plt+0x2128>
  404318:	ldrb	w1, [x19, #1]!
  40431c:	cbnz	w1, 404310 <ferror@plt+0x2420>
  404320:	ldp	x19, x20, [sp, #16]
  404324:	ldp	x29, x30, [sp], #32
  404328:	ret
  40432c:	nop
  404330:	stp	x29, x30, [sp, #-64]!
  404334:	cmp	w1, #0x0
  404338:	mov	w1, w3
  40433c:	mov	x29, sp
  404340:	b.le	404440 <ferror@plt+0x2550>
  404344:	stp	x19, x20, [sp, #16]
  404348:	adrp	x0, 40f000 <argp_error@@Base+0x23a0>
  40434c:	add	x0, x0, #0xec8
  404350:	ldr	x20, [x2]
  404354:	str	x21, [sp, #32]
  404358:	mov	x21, x2
  40435c:	ldrb	w2, [x20]
  404360:	cmp	w2, #0x25
  404364:	b.eq	40439c <ferror@plt+0x24ac>  // b.none
  404368:	ldp	x19, x20, [sp, #16]
  40436c:	ldr	x21, [sp, #32]
  404370:	bl	401e80 <printf@plt>
  404374:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  404378:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  40437c:	mov	w4, #0x1                   	// #1
  404380:	ldr	x2, [x1, #2248]
  404384:	ldr	w1, [x2]
  404388:	add	w1, w1, w0
  40438c:	str	w1, [x2]
  404390:	str	w4, [x3, #1584]
  404394:	ldp	x29, x30, [sp], #64
  404398:	ret
  40439c:	ldrb	w19, [x20, #1]
  4043a0:	cmp	w19, #0x23
  4043a4:	b.eq	40444c <ferror@plt+0x255c>  // b.none
  4043a8:	add	x20, x20, #0x1
  4043ac:	str	w1, [sp, #60]
  4043b0:	bl	401d00 <__ctype_b_loc@plt>
  4043b4:	ldr	w1, [sp, #60]
  4043b8:	ldr	x2, [x0]
  4043bc:	b	4043c4 <ferror@plt+0x24d4>
  4043c0:	ldrb	w19, [x20, #1]!
  4043c4:	ubfiz	x0, x19, #1, #8
  4043c8:	ldrh	w0, [x2, x0]
  4043cc:	tbnz	w0, #11, 4043c0 <ferror@plt+0x24d0>
  4043d0:	and	w0, w19, #0xffffffdf
  4043d4:	cmp	w0, #0x48
  4043d8:	b.ne	4043ec <ferror@plt+0x24fc>  // b.any
  4043dc:	ldrb	w0, [x20, #1]
  4043e0:	cbz	w0, 404464 <ferror@plt+0x2574>
  4043e4:	add	x20, x20, #0x1
  4043e8:	mov	w19, w0
  4043ec:	sub	w19, w19, #0x48
  4043f0:	and	w19, w19, #0xff
  4043f4:	cmp	w19, #0x30
  4043f8:	b.hi	404424 <ferror@plt+0x2534>  // b.pmore
  4043fc:	mov	x0, #0x1                   	// #1
  404400:	lsl	x0, x0, x19
  404404:	tst	x0, #0x8000000080
  404408:	b.ne	40447c <ferror@plt+0x258c>  // b.any
  40440c:	and	x4, x0, #0x1ffff
  404410:	and	x4, x4, #0xffffffffffff0001
  404414:	cbnz	x4, 404470 <ferror@plt+0x2580>
  404418:	and	x0, x0, #0x1ffff00000000
  40441c:	and	x0, x0, #0xffff0001ffffffff
  404420:	cbnz	x0, 404458 <ferror@plt+0x2568>
  404424:	mov	w0, #0x69                  	// #105
  404428:	strb	w0, [x20]
  40442c:	strb	wzr, [x20, #1]
  404430:	ldr	x0, [x21]
  404434:	ldp	x19, x20, [sp, #16]
  404438:	ldr	x21, [sp, #32]
  40443c:	b	404370 <ferror@plt+0x2480>
  404440:	adrp	x0, 40f000 <argp_error@@Base+0x23a0>
  404444:	add	x0, x0, #0xec8
  404448:	b	404370 <ferror@plt+0x2480>
  40444c:	ldrb	w19, [x20, #2]
  404450:	add	x20, x20, #0x2
  404454:	b	4043ac <ferror@plt+0x24bc>
  404458:	mov	w0, #0x78                  	// #120
  40445c:	strb	w0, [x20]
  404460:	b	40442c <ferror@plt+0x253c>
  404464:	sub	w19, w19, #0x48
  404468:	and	w19, w19, #0xff
  40446c:	b	4043fc <ferror@plt+0x250c>
  404470:	mov	w0, #0x58                  	// #88
  404474:	strb	w0, [x20]
  404478:	b	40442c <ferror@plt+0x253c>
  40447c:	mov	w0, #0x6f                  	// #111
  404480:	strb	w0, [x20]
  404484:	b	40442c <ferror@plt+0x253c>
  404488:	stp	x29, x30, [sp, #-48]!
  40448c:	mov	x29, sp
  404490:	stp	x19, x20, [sp, #16]
  404494:	mov	x19, x0
  404498:	mov	w20, w1
  40449c:	str	x21, [sp, #32]
  4044a0:	mov	x21, x2
  4044a4:	ldr	x2, [x0, #8]
  4044a8:	mov	w1, #0x8921                	// #35105
  4044ac:	ldr	w0, [x0, #16]
  4044b0:	bl	4097c0 <argp_parse@@Base+0x1818>
  4044b4:	tbnz	w0, #31, 4044dc <ferror@plt+0x25ec>
  4044b8:	ldr	x3, [x19, #8]
  4044bc:	mov	x2, x21
  4044c0:	mov	w1, w20
  4044c4:	mov	x0, x19
  4044c8:	ldp	x19, x20, [sp, #16]
  4044cc:	ldr	x21, [sp, #32]
  4044d0:	ldp	x29, x30, [sp], #48
  4044d4:	ldr	w3, [x3, #16]
  4044d8:	b	404330 <ferror@plt+0x2440>
  4044dc:	bl	401ea0 <__errno_location@plt>
  4044e0:	ldr	w1, [x0]
  4044e4:	ldr	x3, [x19, #8]
  4044e8:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  4044ec:	ldp	x19, x20, [sp, #16]
  4044f0:	add	x2, x2, #0xf08
  4044f4:	ldr	x21, [sp, #32]
  4044f8:	mov	w0, #0x1                   	// #1
  4044fc:	ldp	x29, x30, [sp], #48
  404500:	b	401b30 <error@plt>
  404504:	nop
  404508:	stp	x29, x30, [sp, #-48]!
  40450c:	mov	x29, sp
  404510:	stp	x19, x20, [sp, #16]
  404514:	mov	x19, x0
  404518:	mov	w20, w1
  40451c:	str	x21, [sp, #32]
  404520:	mov	x21, x2
  404524:	ldr	x2, [x0, #8]
  404528:	mov	w1, #0x891d                	// #35101
  40452c:	ldr	w0, [x0, #16]
  404530:	bl	4097c0 <argp_parse@@Base+0x1818>
  404534:	tbnz	w0, #31, 40455c <ferror@plt+0x266c>
  404538:	ldr	x3, [x19, #8]
  40453c:	mov	x2, x21
  404540:	mov	w1, w20
  404544:	mov	x0, x19
  404548:	ldp	x19, x20, [sp, #16]
  40454c:	ldr	x21, [sp, #32]
  404550:	ldp	x29, x30, [sp], #48
  404554:	ldr	w3, [x3, #16]
  404558:	b	404330 <ferror@plt+0x2440>
  40455c:	bl	401ea0 <__errno_location@plt>
  404560:	ldr	w1, [x0]
  404564:	ldr	x3, [x19, #8]
  404568:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  40456c:	ldp	x19, x20, [sp, #16]
  404570:	add	x2, x2, #0xf30
  404574:	ldr	x21, [sp, #32]
  404578:	mov	w0, #0x1                   	// #1
  40457c:	ldp	x29, x30, [sp], #48
  404580:	b	401b30 <error@plt>
  404584:	nop
  404588:	ldr	x3, [x0, #8]
  40458c:	ldrb	w3, [x3, #34]
  404590:	b	404330 <ferror@plt+0x2440>
  404594:	nop
  404598:	ldr	x3, [x0, #8]
  40459c:	ldrh	w3, [x3, #32]
  4045a0:	cmp	w3, #0xff
  4045a4:	b.hi	4045ac <ferror@plt+0x26bc>  // b.pmore
  4045a8:	b	4042b0 <ferror@plt+0x23c0>
  4045ac:	b	404330 <ferror@plt+0x2440>
  4045b0:	ldr	x3, [x0, #8]
  4045b4:	ldrb	w3, [x3, #35]
  4045b8:	cbnz	w3, 4045c0 <ferror@plt+0x26d0>
  4045bc:	b	4042b0 <ferror@plt+0x23c0>
  4045c0:	b	404330 <ferror@plt+0x2440>
  4045c4:	nop
  4045c8:	stp	x29, x30, [sp, #-48]!
  4045cc:	cmp	w1, #0x0
  4045d0:	mov	x1, x3
  4045d4:	mov	x29, sp
  4045d8:	b.le	4046b8 <ferror@plt+0x27c8>
  4045dc:	stp	x19, x20, [sp, #16]
  4045e0:	mov	x20, x2
  4045e4:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  4045e8:	ldr	x19, [x2]
  4045ec:	add	x0, x0, #0x440
  4045f0:	ldrb	w2, [x19]
  4045f4:	cmp	w2, #0x25
  4045f8:	b.eq	40462c <ferror@plt+0x273c>  // b.none
  4045fc:	ldp	x19, x20, [sp, #16]
  404600:	bl	401e80 <printf@plt>
  404604:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  404608:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  40460c:	mov	w4, #0x1                   	// #1
  404610:	ldr	x2, [x1, #2248]
  404614:	ldr	w1, [x2]
  404618:	add	w1, w1, w0
  40461c:	str	w1, [x2]
  404620:	str	w4, [x3, #1584]
  404624:	ldp	x29, x30, [sp], #48
  404628:	ret
  40462c:	str	x3, [sp, #40]
  404630:	bl	401d00 <__ctype_b_loc@plt>
  404634:	add	x19, x19, #0x1
  404638:	ldr	x3, [x0]
  40463c:	ldr	x1, [sp, #40]
  404640:	b	404648 <ferror@plt+0x2758>
  404644:	add	x19, x19, #0x1
  404648:	ldrb	w0, [x19]
  40464c:	ubfiz	x2, x0, #1, #8
  404650:	ldrh	w2, [x3, x2]
  404654:	tbnz	w2, #11, 404644 <ferror@plt+0x2754>
  404658:	cmp	w0, #0x23
  40465c:	b.eq	4046d0 <ferror@plt+0x27e0>  // b.none
  404660:	cmp	w0, #0x6c
  404664:	b.eq	4046c4 <ferror@plt+0x27d4>  // b.none
  404668:	sub	w0, w0, #0x48
  40466c:	and	w4, w0, #0xff
  404670:	cmp	w4, #0x30
  404674:	b.hi	4046a0 <ferror@plt+0x27b0>  // b.pmore
  404678:	mov	x0, #0x1                   	// #1
  40467c:	lsl	x0, x0, x4
  404680:	tst	x0, #0x8000000080
  404684:	b.ne	4046f4 <ferror@plt+0x2804>  // b.any
  404688:	and	x4, x0, #0x1ffff
  40468c:	and	x4, x4, #0xffffffffffff0001
  404690:	cbnz	x4, 4046e8 <ferror@plt+0x27f8>
  404694:	and	x0, x0, #0x1ffff00000000
  404698:	and	x0, x0, #0xffff0001ffffffff
  40469c:	cbnz	x0, 4046dc <ferror@plt+0x27ec>
  4046a0:	mov	w0, #0x69                  	// #105
  4046a4:	strb	w0, [x19]
  4046a8:	strb	wzr, [x19, #1]
  4046ac:	ldr	x0, [x20]
  4046b0:	ldp	x19, x20, [sp, #16]
  4046b4:	b	404600 <ferror@plt+0x2710>
  4046b8:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  4046bc:	add	x0, x0, #0x440
  4046c0:	b	404600 <ferror@plt+0x2710>
  4046c4:	ldrb	w0, [x19, #1]
  4046c8:	add	x19, x19, #0x1
  4046cc:	b	404668 <ferror@plt+0x2778>
  4046d0:	ldrb	w0, [x19, #1]
  4046d4:	add	x19, x19, #0x1
  4046d8:	b	404660 <ferror@plt+0x2770>
  4046dc:	mov	w0, #0x78                  	// #120
  4046e0:	strb	w0, [x19]
  4046e4:	b	4046a8 <ferror@plt+0x27b8>
  4046e8:	mov	w0, #0x58                  	// #88
  4046ec:	strb	w0, [x19]
  4046f0:	b	4046a8 <ferror@plt+0x27b8>
  4046f4:	mov	w0, #0x6f                  	// #111
  4046f8:	strb	w0, [x19]
  4046fc:	b	4046a8 <ferror@plt+0x27b8>
  404700:	ldr	x3, [x0, #8]
  404704:	ldr	x3, [x3, #16]
  404708:	cbnz	x3, 404710 <ferror@plt+0x2820>
  40470c:	b	4042b0 <ferror@plt+0x23c0>
  404710:	b	4045c8 <ferror@plt+0x26d8>
  404714:	nop
  404718:	ldr	x3, [x0, #8]
  40471c:	ldr	x3, [x3, #24]
  404720:	cbnz	x3, 404728 <ferror@plt+0x2838>
  404724:	b	4042b0 <ferror@plt+0x23c0>
  404728:	b	4045c8 <ferror@plt+0x26d8>
  40472c:	nop
  404730:	stp	x29, x30, [sp, #-96]!
  404734:	mov	x29, sp
  404738:	stp	x19, x20, [sp, #16]
  40473c:	mov	x20, x0
  404740:	ldr	w0, [x3, #4]
  404744:	stp	x21, x22, [sp, #32]
  404748:	mov	w22, w1
  40474c:	stp	x23, x24, [sp, #48]
  404750:	mov	x24, x3
  404754:	mov	x23, x2
  404758:	bl	401b90 <inet_ntoa@plt>
  40475c:	mov	x19, x0
  404760:	mov	w1, #0x2e                  	// #46
  404764:	bl	401d70 <strchr@plt>
  404768:	mov	x21, x0
  40476c:	mov	w2, #0x0                   	// #0
  404770:	mov	x0, x19
  404774:	mov	x1, #0x0                   	// #0
  404778:	strb	wzr, [x21], #1
  40477c:	bl	401d10 <strtol@plt>
  404780:	mov	x2, x0
  404784:	mov	w1, #0x2e                  	// #46
  404788:	mov	x0, x21
  40478c:	str	x2, [sp, #64]
  404790:	bl	401d70 <strchr@plt>
  404794:	mov	x19, x0
  404798:	mov	w2, #0x0                   	// #0
  40479c:	mov	x0, x21
  4047a0:	mov	x1, #0x0                   	// #0
  4047a4:	strb	wzr, [x19], #1
  4047a8:	bl	401d10 <strtol@plt>
  4047ac:	mov	x2, x0
  4047b0:	mov	w1, #0x2e                  	// #46
  4047b4:	mov	x0, x19
  4047b8:	str	x2, [sp, #72]
  4047bc:	bl	401d70 <strchr@plt>
  4047c0:	mov	x21, x0
  4047c4:	mov	w2, #0x0                   	// #0
  4047c8:	mov	x1, #0x0                   	// #0
  4047cc:	mov	x0, x19
  4047d0:	strb	wzr, [x21], #1
  4047d4:	bl	401d10 <strtol@plt>
  4047d8:	mov	x3, x0
  4047dc:	mov	w2, #0x0                   	// #0
  4047e0:	mov	x1, #0x0                   	// #0
  4047e4:	mov	x0, x21
  4047e8:	str	x3, [sp, #80]
  4047ec:	bl	401d10 <strtol@plt>
  4047f0:	mov	x1, x0
  4047f4:	ldr	w0, [x24, #4]
  4047f8:	str	x1, [sp, #88]
  4047fc:	bl	401b90 <inet_ntoa@plt>
  404800:	cmp	w22, #0x0
  404804:	b.gt	40483c <ferror@plt+0x294c>
  404808:	ldrb	w1, [x0]
  40480c:	mov	x19, x0
  404810:	cbz	w1, 404828 <ferror@plt+0x2938>
  404814:	nop
  404818:	mov	x0, x20
  40481c:	bl	404018 <ferror@plt+0x2128>
  404820:	ldrb	w1, [x19, #1]!
  404824:	cbnz	w1, 404818 <ferror@plt+0x2928>
  404828:	ldp	x19, x20, [sp, #16]
  40482c:	ldp	x21, x22, [sp, #32]
  404830:	ldp	x23, x24, [sp, #48]
  404834:	ldp	x29, x30, [sp], #96
  404838:	ret
  40483c:	ldr	x0, [x23]
  404840:	mov	w2, #0x0                   	// #0
  404844:	mov	x1, #0x0                   	// #0
  404848:	bl	401d10 <strtol@plt>
  40484c:	cmp	x0, #0x3
  404850:	b.hi	404828 <ferror@plt+0x2938>  // b.pmore
  404854:	add	x1, sp, #0x40
  404858:	add	x2, x23, #0x8
  40485c:	ldp	x23, x24, [sp, #48]
  404860:	ldr	x3, [x1, x0, lsl #3]
  404864:	sub	w1, w22, #0x1
  404868:	mov	x0, x20
  40486c:	ldp	x19, x20, [sp, #16]
  404870:	ldp	x21, x22, [sp, #32]
  404874:	ldp	x29, x30, [sp], #96
  404878:	b	404330 <ferror@plt+0x2440>
  40487c:	nop
  404880:	stp	x29, x30, [sp, #-48]!
  404884:	mov	x29, sp
  404888:	stp	x19, x20, [sp, #16]
  40488c:	mov	x19, x0
  404890:	mov	w20, w1
  404894:	str	x21, [sp, #32]
  404898:	mov	x21, x2
  40489c:	ldr	x2, [x0, #8]
  4048a0:	mov	w1, #0x8915                	// #35093
  4048a4:	ldr	w0, [x0, #16]
  4048a8:	bl	4097c0 <argp_parse@@Base+0x1818>
  4048ac:	tbnz	w0, #31, 4048d4 <ferror@plt+0x29e4>
  4048b0:	mov	x2, x21
  4048b4:	mov	w1, w20
  4048b8:	mov	x0, x19
  4048bc:	ldr	x3, [x19, #8]
  4048c0:	ldp	x19, x20, [sp, #16]
  4048c4:	add	x3, x3, #0x10
  4048c8:	ldr	x21, [sp, #32]
  4048cc:	ldp	x29, x30, [sp], #48
  4048d0:	b	404730 <ferror@plt+0x2840>
  4048d4:	bl	401ea0 <__errno_location@plt>
  4048d8:	ldr	w1, [x0]
  4048dc:	ldr	x3, [x19, #8]
  4048e0:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  4048e4:	ldp	x19, x20, [sp, #16]
  4048e8:	add	x2, x2, #0xf58
  4048ec:	ldr	x21, [sp, #32]
  4048f0:	mov	w0, #0x1                   	// #1
  4048f4:	ldp	x29, x30, [sp], #48
  4048f8:	b	401b30 <error@plt>
  4048fc:	nop
  404900:	stp	x29, x30, [sp, #-48]!
  404904:	mov	x29, sp
  404908:	stp	x19, x20, [sp, #16]
  40490c:	mov	x19, x0
  404910:	mov	w20, w1
  404914:	str	x21, [sp, #32]
  404918:	mov	x21, x2
  40491c:	ldr	x2, [x0, #8]
  404920:	mov	w1, #0x891b                	// #35099
  404924:	ldr	w0, [x0, #16]
  404928:	bl	4097c0 <argp_parse@@Base+0x1818>
  40492c:	tbnz	w0, #31, 404954 <ferror@plt+0x2a64>
  404930:	mov	x2, x21
  404934:	mov	w1, w20
  404938:	mov	x0, x19
  40493c:	ldr	x3, [x19, #8]
  404940:	ldp	x19, x20, [sp, #16]
  404944:	add	x3, x3, #0x10
  404948:	ldr	x21, [sp, #32]
  40494c:	ldp	x29, x30, [sp], #48
  404950:	b	404730 <ferror@plt+0x2840>
  404954:	bl	401ea0 <__errno_location@plt>
  404958:	ldr	w1, [x0]
  40495c:	ldr	x3, [x19, #8]
  404960:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  404964:	ldp	x19, x20, [sp, #16]
  404968:	add	x2, x2, #0xf80
  40496c:	ldr	x21, [sp, #32]
  404970:	mov	w0, #0x1                   	// #1
  404974:	ldp	x29, x30, [sp], #48
  404978:	b	401b30 <error@plt>
  40497c:	nop
  404980:	stp	x29, x30, [sp, #-48]!
  404984:	mov	x29, sp
  404988:	stp	x19, x20, [sp, #16]
  40498c:	mov	x19, x0
  404990:	mov	w20, w1
  404994:	str	x21, [sp, #32]
  404998:	mov	x21, x2
  40499c:	ldr	x2, [x0, #8]
  4049a0:	mov	w1, #0x8919                	// #35097
  4049a4:	ldr	w0, [x0, #16]
  4049a8:	bl	4097c0 <argp_parse@@Base+0x1818>
  4049ac:	tbnz	w0, #31, 4049d4 <ferror@plt+0x2ae4>
  4049b0:	mov	x2, x21
  4049b4:	mov	w1, w20
  4049b8:	mov	x0, x19
  4049bc:	ldr	x3, [x19, #8]
  4049c0:	ldp	x19, x20, [sp, #16]
  4049c4:	add	x3, x3, #0x10
  4049c8:	ldr	x21, [sp, #32]
  4049cc:	ldp	x29, x30, [sp], #48
  4049d0:	b	404730 <ferror@plt+0x2840>
  4049d4:	bl	401ea0 <__errno_location@plt>
  4049d8:	ldr	w1, [x0]
  4049dc:	ldr	x3, [x19, #8]
  4049e0:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  4049e4:	ldp	x19, x20, [sp, #16]
  4049e8:	add	x2, x2, #0xfb0
  4049ec:	ldr	x21, [sp, #32]
  4049f0:	mov	w0, #0x1                   	// #1
  4049f4:	ldp	x29, x30, [sp], #48
  4049f8:	b	401b30 <error@plt>
  4049fc:	nop
  404a00:	stp	x29, x30, [sp, #-48]!
  404a04:	mov	x29, sp
  404a08:	stp	x19, x20, [sp, #16]
  404a0c:	mov	x19, x0
  404a10:	mov	w20, w1
  404a14:	str	x21, [sp, #32]
  404a18:	mov	x21, x2
  404a1c:	ldr	x2, [x0, #8]
  404a20:	mov	w1, #0x8917                	// #35095
  404a24:	ldr	w0, [x0, #16]
  404a28:	bl	4097c0 <argp_parse@@Base+0x1818>
  404a2c:	tbnz	w0, #31, 404a54 <ferror@plt+0x2b64>
  404a30:	mov	x2, x21
  404a34:	mov	w1, w20
  404a38:	mov	x0, x19
  404a3c:	ldr	x3, [x19, #8]
  404a40:	ldp	x19, x20, [sp, #16]
  404a44:	add	x3, x3, #0x10
  404a48:	ldr	x21, [sp, #32]
  404a4c:	ldp	x29, x30, [sp], #48
  404a50:	b	404730 <ferror@plt+0x2840>
  404a54:	bl	401ea0 <__errno_location@plt>
  404a58:	ldr	w1, [x0]
  404a5c:	ldr	x3, [x19, #8]
  404a60:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  404a64:	ldp	x19, x20, [sp, #16]
  404a68:	add	x2, x2, #0xfe0
  404a6c:	ldr	x21, [sp, #32]
  404a70:	mov	w0, #0x1                   	// #1
  404a74:	ldp	x29, x30, [sp], #48
  404a78:	b	401b30 <error@plt>
  404a7c:	nop
  404a80:	cbz	w3, 404c24 <ferror@plt+0x2d34>
  404a84:	stp	x29, x30, [sp, #-96]!
  404a88:	mov	x29, sp
  404a8c:	stp	x19, x20, [sp, #16]
  404a90:	stp	x21, x22, [sp, #32]
  404a94:	mov	x22, x0
  404a98:	mov	w21, w3
  404a9c:	stp	x23, x24, [sp, #48]
  404aa0:	mov	w23, w1
  404aa4:	mov	x24, x2
  404aa8:	stp	x25, x26, [sp, #64]
  404aac:	adrp	x25, 427000 <argp_error@@Base+0x1a3a0>
  404ab0:	adrp	x26, 427000 <argp_error@@Base+0x1a3a0>
  404ab4:	add	x25, x25, #0x630
  404ab8:	stp	x27, x28, [sp, #80]
  404abc:	mov	w28, #0x1                   	// #1
  404ac0:	adrp	x27, 426000 <argp_error@@Base+0x193a0>
  404ac4:	mov	w19, w28
  404ac8:	b	404adc <ferror@plt+0x2bec>
  404acc:	lsl	w19, w19, #1
  404ad0:	cmp	w21, #0x0
  404ad4:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  404ad8:	b.eq	404b50 <ferror@plt+0x2c60>  // b.none
  404adc:	tst	w19, w21
  404ae0:	b.eq	404acc <ferror@plt+0x2bdc>  // b.none
  404ae4:	mov	w0, w19
  404ae8:	mov	x1, #0x0                   	// #0
  404aec:	bl	402400 <ferror@plt+0x510>
  404af0:	mov	x20, x0
  404af4:	cbz	x0, 404acc <ferror@plt+0x2bdc>
  404af8:	cbnz	w28, 404b20 <ferror@plt+0x2c30>
  404afc:	cmp	w23, #0x0
  404b00:	b.le	404bc8 <ferror@plt+0x2cd8>
  404b04:	ldr	x28, [x24]
  404b08:	ldrb	w1, [x28]
  404b0c:	cbz	w1, 404b20 <ferror@plt+0x2c30>
  404b10:	mov	x0, x22
  404b14:	bl	404018 <ferror@plt+0x2128>
  404b18:	ldrb	w1, [x28, #1]!
  404b1c:	cbnz	w1, 404b10 <ferror@plt+0x2c20>
  404b20:	ldrb	w1, [x20]
  404b24:	cbz	w1, 404b38 <ferror@plt+0x2c48>
  404b28:	mov	x0, x22
  404b2c:	bl	404018 <ferror@plt+0x2128>
  404b30:	ldrb	w1, [x20, #1]!
  404b34:	cbnz	w1, 404b28 <ferror@plt+0x2c38>
  404b38:	bic	w21, w21, w19
  404b3c:	lsl	w19, w19, #1
  404b40:	cmp	w21, #0x0
  404b44:	mov	w28, #0x0                   	// #0
  404b48:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  404b4c:	b.ne	404adc <ferror@plt+0x2bec>  // b.any
  404b50:	cbz	w21, 404bac <ferror@plt+0x2cbc>
  404b54:	cbnz	w28, 404b80 <ferror@plt+0x2c90>
  404b58:	cmp	w23, #0x0
  404b5c:	b.le	404bf0 <ferror@plt+0x2d00>
  404b60:	ldr	x19, [x24]
  404b64:	ldrb	w1, [x19]
  404b68:	cbz	w1, 404b80 <ferror@plt+0x2c90>
  404b6c:	nop
  404b70:	mov	x0, x22
  404b74:	bl	404018 <ferror@plt+0x2128>
  404b78:	ldrb	w1, [x19, #1]!
  404b7c:	cbnz	w1, 404b70 <ferror@plt+0x2c80>
  404b80:	mov	w3, w21
  404b84:	add	x2, x24, #0x8
  404b88:	sub	w1, w23, #0x1
  404b8c:	mov	x0, x22
  404b90:	ldp	x19, x20, [sp, #16]
  404b94:	ldp	x21, x22, [sp, #32]
  404b98:	ldp	x23, x24, [sp, #48]
  404b9c:	ldp	x25, x26, [sp, #64]
  404ba0:	ldp	x27, x28, [sp, #80]
  404ba4:	ldp	x29, x30, [sp], #96
  404ba8:	b	404330 <ferror@plt+0x2440>
  404bac:	ldp	x19, x20, [sp, #16]
  404bb0:	ldp	x21, x22, [sp, #32]
  404bb4:	ldp	x23, x24, [sp, #48]
  404bb8:	ldp	x25, x26, [sp, #64]
  404bbc:	ldp	x27, x28, [sp, #80]
  404bc0:	ldp	x29, x30, [sp], #96
  404bc4:	ret
  404bc8:	ldr	x3, [x27, #2248]
  404bcc:	mov	w0, #0x20                  	// #32
  404bd0:	ldr	x1, [x26, #1600]
  404bd4:	ldr	w2, [x3]
  404bd8:	add	w2, w2, #0x1
  404bdc:	str	w2, [x3]
  404be0:	bl	401b60 <putc@plt>
  404be4:	mov	w0, #0x1                   	// #1
  404be8:	str	w0, [x25]
  404bec:	b	404b20 <ferror@plt+0x2c30>
  404bf0:	adrp	x2, 426000 <argp_error@@Base+0x193a0>
  404bf4:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  404bf8:	mov	w0, #0x20                  	// #32
  404bfc:	ldr	x3, [x2, #2248]
  404c00:	ldr	x1, [x1, #1600]
  404c04:	ldr	w2, [x3]
  404c08:	add	w2, w2, #0x1
  404c0c:	str	w2, [x3]
  404c10:	bl	401b60 <putc@plt>
  404c14:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  404c18:	mov	w1, #0x1                   	// #1
  404c1c:	str	w1, [x0, #1584]
  404c20:	b	404b80 <ferror@plt+0x2c90>
  404c24:	ret
  404c28:	stp	x29, x30, [sp, #-48]!
  404c2c:	mov	x2, #0xf                   	// #15
  404c30:	mov	x29, sp
  404c34:	add	x1, sp, #0x20
  404c38:	stp	x19, x20, [sp, #16]
  404c3c:	mov	x20, x0
  404c40:	mov	w0, w3
  404c44:	bl	4025e0 <ferror@plt+0x6f0>
  404c48:	ldrb	w1, [sp, #32]
  404c4c:	cbz	w1, 404c68 <ferror@plt+0x2d78>
  404c50:	add	x19, sp, #0x20
  404c54:	nop
  404c58:	mov	x0, x20
  404c5c:	bl	404018 <ferror@plt+0x2128>
  404c60:	ldrb	w1, [x19, #1]!
  404c64:	cbnz	w1, 404c58 <ferror@plt+0x2d68>
  404c68:	ldp	x19, x20, [sp, #16]
  404c6c:	ldp	x29, x30, [sp], #48
  404c70:	ret
  404c74:	nop
  404c78:	stp	x29, x30, [sp, #-64]!
  404c7c:	mov	x29, sp
  404c80:	stp	x19, x20, [sp, #16]
  404c84:	mov	x19, x0
  404c88:	mov	w20, w1
  404c8c:	stp	x21, x22, [sp, #32]
  404c90:	mov	x21, x2
  404c94:	mov	w1, #0x8913                	// #35091
  404c98:	ldr	x2, [x0, #8]
  404c9c:	ldr	w0, [x0, #16]
  404ca0:	bl	4097c0 <argp_parse@@Base+0x1818>
  404ca4:	tbnz	w0, #31, 404d10 <ferror@plt+0x2e20>
  404ca8:	ldr	x0, [x19, #8]
  404cac:	str	x23, [sp, #48]
  404cb0:	cmp	w20, #0x0
  404cb4:	ldrh	w23, [x0, #16]
  404cb8:	b.le	404d80 <ferror@plt+0x2e90>
  404cbc:	ldr	x22, [x21]
  404cc0:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  404cc4:	add	x1, x1, #0x38
  404cc8:	mov	x0, x22
  404ccc:	bl	401cf0 <strcmp@plt>
  404cd0:	cbz	w0, 404d38 <ferror@plt+0x2e48>
  404cd4:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  404cd8:	mov	x0, x22
  404cdc:	add	x1, x1, #0xe48
  404ce0:	bl	401cf0 <strcmp@plt>
  404ce4:	cbz	w0, 404da4 <ferror@plt+0x2eb4>
  404ce8:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  404cec:	mov	x0, x22
  404cf0:	add	x1, x1, #0x40
  404cf4:	bl	401cf0 <strcmp@plt>
  404cf8:	cbz	w0, 404d5c <ferror@plt+0x2e6c>
  404cfc:	ldp	x19, x20, [sp, #16]
  404d00:	ldp	x21, x22, [sp, #32]
  404d04:	ldr	x23, [sp, #48]
  404d08:	ldp	x29, x30, [sp], #64
  404d0c:	ret
  404d10:	bl	401ea0 <__errno_location@plt>
  404d14:	ldr	w1, [x0]
  404d18:	ldr	x3, [x19, #8]
  404d1c:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  404d20:	ldp	x19, x20, [sp, #16]
  404d24:	add	x2, x2, #0x10
  404d28:	ldp	x21, x22, [sp, #32]
  404d2c:	mov	w0, #0x1                   	// #1
  404d30:	ldp	x29, x30, [sp], #64
  404d34:	b	401b30 <error@plt>
  404d38:	mov	w3, w23
  404d3c:	add	x2, x21, #0x8
  404d40:	sub	w1, w20, #0x1
  404d44:	mov	x0, x19
  404d48:	ldp	x19, x20, [sp, #16]
  404d4c:	ldp	x21, x22, [sp, #32]
  404d50:	ldr	x23, [sp, #48]
  404d54:	ldp	x29, x30, [sp], #64
  404d58:	b	404330 <ferror@plt+0x2440>
  404d5c:	mov	w3, w23
  404d60:	add	x2, x21, #0x8
  404d64:	sub	w1, w20, #0x1
  404d68:	mov	x0, x19
  404d6c:	ldp	x19, x20, [sp, #16]
  404d70:	ldp	x21, x22, [sp, #32]
  404d74:	ldr	x23, [sp, #48]
  404d78:	ldp	x29, x30, [sp], #64
  404d7c:	b	404a80 <ferror@plt+0x2b90>
  404d80:	mov	w3, w23
  404d84:	mov	x2, x21
  404d88:	mov	w1, w20
  404d8c:	mov	x0, x19
  404d90:	ldp	x19, x20, [sp, #16]
  404d94:	ldp	x21, x22, [sp, #32]
  404d98:	ldr	x23, [sp, #48]
  404d9c:	ldp	x29, x30, [sp], #64
  404da0:	b	404a80 <ferror@plt+0x2b90>
  404da4:	mov	w3, w23
  404da8:	add	x2, x21, #0x8
  404dac:	sub	w1, w20, #0x1
  404db0:	mov	x0, x19
  404db4:	ldp	x19, x20, [sp, #16]
  404db8:	ldp	x21, x22, [sp, #32]
  404dbc:	ldr	x23, [sp, #48]
  404dc0:	ldp	x29, x30, [sp], #64
  404dc4:	b	404c28 <ferror@plt+0x2d38>
  404dc8:	stp	x29, x30, [sp, #-64]!
  404dcc:	mov	x29, sp
  404dd0:	stp	x19, x20, [sp, #16]
  404dd4:	mov	x20, x0
  404dd8:	stp	x23, x24, [sp, #48]
  404ddc:	adrp	x23, 426000 <argp_error@@Base+0x193a0>
  404de0:	add	x19, x23, #0x8c8
  404de4:	stp	x21, x22, [sp, #32]
  404de8:	mov	x21, x1
  404dec:	ldr	x0, [x19, #8]
  404df0:	cbz	x0, 404e44 <ferror@plt+0x2f54>
  404df4:	mov	w22, w2
  404df8:	mov	x24, x3
  404dfc:	add	x19, x19, #0x8
  404e00:	b	404e0c <ferror@plt+0x2f1c>
  404e04:	ldr	x0, [x19, #16]!
  404e08:	cbz	x0, 404e44 <ferror@plt+0x2f54>
  404e0c:	mov	x1, x20
  404e10:	bl	401cf0 <strcmp@plt>
  404e14:	cbnz	w0, 404e04 <ferror@plt+0x2f14>
  404e18:	ldr	x3, [x19, #8]
  404e1c:	cbz	x3, 404ea0 <ferror@plt+0x2fb0>
  404e20:	mov	x2, x24
  404e24:	mov	w1, w22
  404e28:	mov	x0, x21
  404e2c:	mov	x16, x3
  404e30:	ldp	x19, x20, [sp, #16]
  404e34:	ldp	x21, x22, [sp, #32]
  404e38:	ldp	x23, x24, [sp, #48]
  404e3c:	ldp	x29, x30, [sp], #64
  404e40:	br	x16
  404e44:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  404e48:	add	x0, x0, #0x48
  404e4c:	bl	401e80 <printf@plt>
  404e50:	ldr	x2, [x23, #2248]
  404e54:	ldr	w1, [x2]
  404e58:	add	w1, w1, w0
  404e5c:	str	w1, [x2]
  404e60:	ldrb	w1, [x20]
  404e64:	cbz	w1, 404e78 <ferror@plt+0x2f88>
  404e68:	mov	x0, x21
  404e6c:	bl	404018 <ferror@plt+0x2128>
  404e70:	ldrb	w1, [x20, #1]!
  404e74:	cbnz	w1, 404e68 <ferror@plt+0x2f78>
  404e78:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  404e7c:	add	x0, x0, #0x680
  404e80:	bl	401e80 <printf@plt>
  404e84:	ldr	x2, [x23, #2248]
  404e88:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  404e8c:	mov	w4, #0x1                   	// #1
  404e90:	ldr	w1, [x2]
  404e94:	add	w1, w1, w0
  404e98:	str	w1, [x2]
  404e9c:	str	w4, [x3, #1584]
  404ea0:	ldp	x19, x20, [sp, #16]
  404ea4:	ldp	x21, x22, [sp, #32]
  404ea8:	ldp	x23, x24, [sp, #48]
  404eac:	ldp	x29, x30, [sp], #64
  404eb0:	ret
  404eb4:	nop
  404eb8:	stp	x29, x30, [sp, #-112]!
  404ebc:	mov	x29, sp
  404ec0:	stp	x19, x20, [sp, #16]
  404ec4:	mov	x20, x0
  404ec8:	ldr	x19, [x0, #24]
  404ecc:	stp	x21, x22, [sp, #32]
  404ed0:	ldr	w0, [x0, #32]
  404ed4:	stp	x23, x24, [sp, #48]
  404ed8:	add	w2, w0, #0x1
  404edc:	stp	x25, x26, [sp, #64]
  404ee0:	stp	x27, x28, [sp, #80]
  404ee4:	str	w2, [x20, #32]
  404ee8:	ldrb	w3, [x19]
  404eec:	cbz	w3, 404fa4 <ferror@plt+0x30b4>
  404ef0:	mov	w21, w1
  404ef4:	adrp	x22, 427000 <argp_error@@Base+0x1a3a0>
  404ef8:	adrp	x23, 426000 <argp_error@@Base+0x193a0>
  404efc:	add	x0, x22, #0x630
  404f00:	str	x0, [x29, #96]
  404f04:	nop
  404f08:	cmp	w3, #0x7d
  404f0c:	ccmp	w2, #0x1, #0x4, eq  // eq = none
  404f10:	b.gt	404fa0 <ferror@plt+0x30b0>
  404f14:	ldrb	w1, [x19]
  404f18:	cmp	w1, #0x24
  404f1c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  404f20:	b.ne	404f3c <ferror@plt+0x304c>  // b.any
  404f24:	b	404f64 <ferror@plt+0x3074>
  404f28:	ldrb	w1, [x19, #1]!
  404f2c:	cmp	w1, #0x24
  404f30:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  404f34:	b.eq	404f64 <ferror@plt+0x3074>  // b.none
  404f38:	ldr	w2, [x20, #32]
  404f3c:	cmp	w1, #0x7d
  404f40:	ccmp	w2, #0x1, #0x4, eq  // eq = none
  404f44:	b.gt	404fa0 <ferror@plt+0x30b0>
  404f48:	cbnz	w21, 404f28 <ferror@plt+0x3038>
  404f4c:	mov	x0, x20
  404f50:	bl	404018 <ferror@plt+0x2128>
  404f54:	ldrb	w1, [x19, #1]!
  404f58:	cmp	w1, #0x24
  404f5c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  404f60:	b.ne	404f38 <ferror@plt+0x3048>  // b.any
  404f64:	cmp	w1, #0x24
  404f68:	b.ne	4051bc <ferror@plt+0x32cc>  // b.any
  404f6c:	ldrb	w0, [x19, #1]
  404f70:	add	x25, x19, #0x2
  404f74:	cmp	w0, #0x7b
  404f78:	b.eq	404fe0 <ferror@plt+0x30f0>  // b.none
  404f7c:	cmp	w0, #0x7d
  404f80:	b.eq	404fcc <ferror@plt+0x30dc>  // b.none
  404f84:	cmp	w0, #0x24
  404f88:	b.eq	404fcc <ferror@plt+0x30dc>  // b.none
  404f8c:	cbz	w21, 405060 <ferror@plt+0x3170>
  404f90:	ldrb	w3, [x19, #2]
  404f94:	mov	x19, x25
  404f98:	ldr	w2, [x20, #32]
  404f9c:	cbnz	w3, 404f08 <ferror@plt+0x3018>
  404fa0:	sub	w0, w2, #0x1
  404fa4:	str	x19, [x20, #24]
  404fa8:	str	w0, [x20, #32]
  404fac:	mov	sp, x29
  404fb0:	ldp	x19, x20, [sp, #16]
  404fb4:	ldp	x21, x22, [sp, #32]
  404fb8:	ldp	x23, x24, [sp, #48]
  404fbc:	ldp	x25, x26, [sp, #64]
  404fc0:	ldp	x27, x28, [sp, #80]
  404fc4:	ldp	x29, x30, [sp], #112
  404fc8:	ret
  404fcc:	cbnz	w21, 404f90 <ferror@plt+0x30a0>
  404fd0:	mov	w1, w0
  404fd4:	mov	x0, x20
  404fd8:	bl	404018 <ferror@plt+0x2128>
  404fdc:	b	404f90 <ferror@plt+0x30a0>
  404fe0:	mov	x0, x25
  404fe4:	mov	w1, #0x7d                  	// #125
  404fe8:	bl	401d70 <strchr@plt>
  404fec:	mov	x26, x0
  404ff0:	cbz	x0, 40516c <ferror@plt+0x327c>
  404ff4:	sub	x27, x0, x25
  404ff8:	mov	x1, x25
  404ffc:	add	x0, x27, #0x10
  405000:	mov	x2, x27
  405004:	and	x0, x0, #0xfffffffffffffff0
  405008:	add	x19, x26, #0x1
  40500c:	sub	sp, sp, x0
  405010:	mov	x24, sp
  405014:	mov	x0, x24
  405018:	bl	401aa0 <memcpy@plt>
  40501c:	strb	wzr, [x24, x27]
  405020:	cbz	w21, 4050a0 <ferror@plt+0x31b0>
  405024:	str	x19, [x20, #24]
  405028:	ldrb	w3, [x19]
  40502c:	add	x2, x19, #0x1
  405030:	mov	x0, x20
  405034:	cmp	w3, #0x7b
  405038:	mov	w1, #0x1                   	// #1
  40503c:	b.ne	404f98 <ferror@plt+0x30a8>  // b.any
  405040:	str	x2, [x20, #24]
  405044:	bl	404eb8 <ferror@plt+0x2fc8>
  405048:	ldr	x19, [x20, #24]
  40504c:	ldrb	w3, [x19]
  405050:	cmp	w3, #0x7d
  405054:	b.ne	40502c <ferror@plt+0x313c>  // b.any
  405058:	add	x19, x19, #0x1
  40505c:	b	405024 <ferror@plt+0x3134>
  405060:	ldr	x3, [x23, #2248]
  405064:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  405068:	mov	w0, w1
  40506c:	ldr	x1, [x2, #1600]
  405070:	ldr	w2, [x3]
  405074:	add	w2, w2, #0x1
  405078:	str	w2, [x3]
  40507c:	bl	401b60 <putc@plt>
  405080:	ldr	x0, [x29, #96]
  405084:	mov	w1, #0x1                   	// #1
  405088:	str	w1, [x0]
  40508c:	ldrb	w0, [x19, #1]
  405090:	mov	w1, w0
  405094:	mov	x0, x20
  405098:	bl	404018 <ferror@plt+0x2128>
  40509c:	b	404f90 <ferror@plt+0x30a0>
  4050a0:	mov	x0, x26
  4050a4:	bl	401b00 <strlen@plt>
  4050a8:	lsr	x0, x0, #1
  4050ac:	ldrb	w1, [x26, #1]
  4050b0:	add	x0, x0, #0xf
  4050b4:	and	x0, x0, #0xfffffffffffffff0
  4050b8:	cmp	w1, #0x7b
  4050bc:	sub	sp, sp, x0
  4050c0:	mov	x27, sp
  4050c4:	b.ne	40519c <ferror@plt+0x32ac>  // b.any
  4050c8:	mov	x28, #0x0                   	// #0
  4050cc:	add	x25, x19, #0x1
  4050d0:	str	x25, [x20, #24]
  4050d4:	mov	w1, #0x1                   	// #1
  4050d8:	mov	x0, x20
  4050dc:	bl	404eb8 <ferror@plt+0x2fc8>
  4050e0:	str	w28, [x29, #108]
  4050e4:	ldr	x19, [x20, #24]
  4050e8:	add	w26, w28, #0x1
  4050ec:	sub	x22, x19, x25
  4050f0:	add	x0, x22, #0x1
  4050f4:	bl	409530 <argp_parse@@Base+0x1588>
  4050f8:	mov	x1, x25
  4050fc:	mov	x25, x0
  405100:	str	x0, [x27, x28, lsl #3]
  405104:	mov	x2, x22
  405108:	add	x28, x28, #0x1
  40510c:	bl	401aa0 <memcpy@plt>
  405110:	strb	wzr, [x25, x22]
  405114:	ldrb	w0, [x19]
  405118:	cmp	w0, #0x7d
  40511c:	b.ne	405128 <ferror@plt+0x3238>  // b.any
  405120:	ldrb	w0, [x19, #1]
  405124:	add	x19, x19, #0x1
  405128:	cmp	w0, #0x7b
  40512c:	b.eq	4050cc <ferror@plt+0x31dc>  // b.none
  405130:	ldrsw	x25, [x29, #108]
  405134:	mov	w2, w26
  405138:	mov	x0, x24
  40513c:	mov	x3, x27
  405140:	mov	x1, x20
  405144:	bl	404dc8 <ferror@plt+0x2ed8>
  405148:	str	x19, [x20, #24]
  40514c:	nop
  405150:	ldr	x0, [x27, x25, lsl #3]
  405154:	sub	x25, x25, #0x1
  405158:	bl	401d30 <free@plt>
  40515c:	cmn	w25, #0x1
  405160:	b.ne	405150 <ferror@plt+0x3260>  // b.any
  405164:	ldrb	w3, [x19]
  405168:	b	404f98 <ferror@plt+0x30a8>
  40516c:	ldrb	w1, [x19]
  405170:	mov	x21, x19
  405174:	cbz	w1, 405188 <ferror@plt+0x3298>
  405178:	mov	x0, x20
  40517c:	bl	404018 <ferror@plt+0x2128>
  405180:	ldrb	w1, [x21, #1]!
  405184:	cbnz	w1, 405178 <ferror@plt+0x3288>
  405188:	mov	x0, x19
  40518c:	bl	401b00 <strlen@plt>
  405190:	ldr	w2, [x20, #32]
  405194:	add	x19, x19, x0
  405198:	b	404fa0 <ferror@plt+0x30b0>
  40519c:	mov	x3, x27
  4051a0:	mov	x0, x24
  4051a4:	mov	x1, x20
  4051a8:	mov	w2, #0x0                   	// #0
  4051ac:	bl	404dc8 <ferror@plt+0x2ed8>
  4051b0:	str	x19, [x20, #24]
  4051b4:	ldrb	w3, [x26, #1]
  4051b8:	b	404f98 <ferror@plt+0x30a8>
  4051bc:	ldr	w0, [x20, #32]
  4051c0:	sub	w0, w0, #0x1
  4051c4:	b	404fa4 <ferror@plt+0x30b4>
  4051c8:	mov	x3, x1
  4051cc:	mov	w1, #0x0                   	// #0
  4051d0:	ldr	x2, [x3, w2, sxtw #3]
  4051d4:	str	x2, [x0, #24]
  4051d8:	b	404eb8 <ferror@plt+0x2fc8>
  4051dc:	nop
  4051e0:	cmp	w3, w1
  4051e4:	mov	x1, x2
  4051e8:	b.lt	4051f0 <ferror@plt+0x3300>  // b.tstop
  4051ec:	ret
  4051f0:	mov	w2, w3
  4051f4:	b	4051c8 <ferror@plt+0x32d8>
  4051f8:	cmp	w1, #0x0
  4051fc:	b.le	405248 <ferror@plt+0x3358>
  405200:	stp	x29, x30, [sp, #-48]!
  405204:	mov	x29, sp
  405208:	str	x21, [sp, #32]
  40520c:	mov	x21, x0
  405210:	ldr	x0, [x2]
  405214:	stp	x19, x20, [sp, #16]
  405218:	mov	w19, w1
  40521c:	mov	x20, x2
  405220:	bl	402fb8 <ferror@plt+0x10c8>
  405224:	cmp	x0, #0x0
  405228:	cset	w2, eq  // eq = none
  40522c:	add	w2, w2, #0x1
  405230:	cmp	w19, w2
  405234:	b.gt	40524c <ferror@plt+0x335c>
  405238:	ldp	x19, x20, [sp, #16]
  40523c:	ldr	x21, [sp, #32]
  405240:	ldp	x29, x30, [sp], #48
  405244:	ret
  405248:	ret
  40524c:	mov	x1, x20
  405250:	mov	x0, x21
  405254:	ldp	x19, x20, [sp, #16]
  405258:	ldr	x21, [sp, #32]
  40525c:	ldp	x29, x30, [sp], #48
  405260:	b	4051c8 <ferror@plt+0x32d8>
  405264:	nop
  405268:	mov	x3, x2
  40526c:	ldr	w2, [x0, #20]
  405270:	cmp	w2, #0x0
  405274:	cset	w2, eq  // eq = none
  405278:	cmp	w2, w1
  40527c:	b.lt	405284 <ferror@plt+0x3394>  // b.tstop
  405280:	ret
  405284:	mov	x1, x3
  405288:	b	4051c8 <ferror@plt+0x32d8>
  40528c:	nop
  405290:	stp	x29, x30, [sp, #-64]!
  405294:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  405298:	adrp	x4, 427000 <argp_error@@Base+0x1a3a0>
  40529c:	mov	x29, sp
  4052a0:	ldr	w3, [x3, #1568]
  4052a4:	ldr	w4, [x4, #1572]
  4052a8:	stp	x19, x20, [sp, #16]
  4052ac:	mov	x20, x0
  4052b0:	mov	w19, w1
  4052b4:	stp	x21, x22, [sp, #32]
  4052b8:	orr	w3, w3, w4
  4052bc:	mov	x21, x2
  4052c0:	mov	w2, #0x0                   	// #0
  4052c4:	cbz	w3, 4052fc <ferror@plt+0x340c>
  4052c8:	cmp	w19, w2
  4052cc:	b.gt	4052e0 <ferror@plt+0x33f0>
  4052d0:	ldp	x19, x20, [sp, #16]
  4052d4:	ldp	x21, x22, [sp, #32]
  4052d8:	ldp	x29, x30, [sp], #64
  4052dc:	ret
  4052e0:	mov	x1, x21
  4052e4:	mov	x0, x20
  4052e8:	bl	4051c8 <ferror@plt+0x32d8>
  4052ec:	ldp	x19, x20, [sp, #16]
  4052f0:	ldp	x21, x22, [sp, #32]
  4052f4:	ldp	x29, x30, [sp], #64
  4052f8:	ret
  4052fc:	add	x1, sp, #0x3c
  405300:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  405304:	add	x0, x0, #0x5d0
  405308:	str	wzr, [sp, #60]
  40530c:	bl	4025b0 <ferror@plt+0x6c0>
  405310:	mov	w22, w0
  405314:	cbnz	w0, 405320 <ferror@plt+0x3430>
  405318:	mov	w2, #0x1                   	// #1
  40531c:	b	4052c8 <ferror@plt+0x33d8>
  405320:	ldr	w0, [x20, #16]
  405324:	mov	w1, #0x8913                	// #35091
  405328:	ldr	x2, [x20, #8]
  40532c:	bl	4097c0 <argp_parse@@Base+0x1818>
  405330:	cbnz	w0, 405318 <ferror@plt+0x3428>
  405334:	ldr	x0, [x20, #8]
  405338:	ldrh	w0, [x0, #16]
  40533c:	tst	w0, w22
  405340:	cset	w2, eq  // eq = none
  405344:	b	4052c8 <ferror@plt+0x33d8>
  405348:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  40534c:	ldr	w4, [x3, #1576]
  405350:	mov	x3, x2
  405354:	cmp	w4, #0x0
  405358:	cset	w2, eq  // eq = none
  40535c:	cmp	w2, w1
  405360:	b.lt	405368 <ferror@plt+0x3478>  // b.tstop
  405364:	ret
  405368:	mov	x1, x3
  40536c:	b	4051c8 <ferror@plt+0x32d8>
  405370:	cmp	w1, #0x0
  405374:	b.le	4053e8 <ferror@plt+0x34f8>
  405378:	stp	x29, x30, [sp, #-64]!
  40537c:	mov	x29, sp
  405380:	stp	x21, x22, [sp, #32]
  405384:	mov	w21, w1
  405388:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  40538c:	add	x1, x1, #0x8c8
  405390:	mov	x22, x0
  405394:	stp	x19, x20, [sp, #16]
  405398:	add	x19, x1, #0x8
  40539c:	ldr	x0, [x1, #8]
  4053a0:	str	x23, [sp, #48]
  4053a4:	mov	x23, x2
  4053a8:	cbz	x0, 4053ec <ferror@plt+0x34fc>
  4053ac:	ldr	x20, [x2]
  4053b0:	b	4053bc <ferror@plt+0x34cc>
  4053b4:	ldr	x0, [x19, #16]!
  4053b8:	cbz	x0, 4053ec <ferror@plt+0x34fc>
  4053bc:	mov	x1, x20
  4053c0:	bl	401cf0 <strcmp@plt>
  4053c4:	cbnz	w0, 4053b4 <ferror@plt+0x34c4>
  4053c8:	mov	w2, #0x1                   	// #1
  4053cc:	cmp	w21, w2
  4053d0:	b.gt	4053f8 <ferror@plt+0x3508>
  4053d4:	ldp	x19, x20, [sp, #16]
  4053d8:	ldp	x21, x22, [sp, #32]
  4053dc:	ldr	x23, [sp, #48]
  4053e0:	ldp	x29, x30, [sp], #64
  4053e4:	ret
  4053e8:	ret
  4053ec:	mov	w2, #0x2                   	// #2
  4053f0:	cmp	w21, w2
  4053f4:	b.le	4053d4 <ferror@plt+0x34e4>
  4053f8:	mov	x1, x23
  4053fc:	mov	x0, x22
  405400:	ldp	x19, x20, [sp, #16]
  405404:	ldp	x21, x22, [sp, #32]
  405408:	ldr	x23, [sp, #48]
  40540c:	ldp	x29, x30, [sp], #64
  405410:	b	4051c8 <ferror@plt+0x32d8>
  405414:	nop
  405418:	stp	x29, x30, [sp, #-80]!
  40541c:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  405420:	cmp	w1, #0x0
  405424:	mov	x29, sp
  405428:	stp	x23, x24, [sp, #48]
  40542c:	adrp	x24, 427000 <argp_error@@Base+0x1a3a0>
  405430:	adrp	x23, 426000 <argp_error@@Base+0x193a0>
  405434:	ldr	x4, [x3, #1248]
  405438:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  40543c:	add	x3, x3, #0x634
  405440:	stp	x25, x26, [sp, #64]
  405444:	ldr	x26, [x24, #1600]
  405448:	str	x4, [x24, #1600]
  40544c:	ldr	x25, [x23, #2248]
  405450:	str	x3, [x23, #2248]
  405454:	b.le	405494 <ferror@plt+0x35a4>
  405458:	stp	x19, x20, [sp, #16]
  40545c:	mov	w20, w1
  405460:	mov	w19, #0x0                   	// #0
  405464:	stp	x21, x22, [sp, #32]
  405468:	mov	x21, x0
  40546c:	mov	x22, x2
  405470:	mov	w2, w19
  405474:	mov	x1, x22
  405478:	add	w19, w19, #0x1
  40547c:	mov	x0, x21
  405480:	bl	4051c8 <ferror@plt+0x32d8>
  405484:	cmp	w20, w19
  405488:	b.ne	405470 <ferror@plt+0x3580>  // b.any
  40548c:	ldp	x19, x20, [sp, #16]
  405490:	ldp	x21, x22, [sp, #32]
  405494:	str	x26, [x24, #1600]
  405498:	str	x25, [x23, #2248]
  40549c:	ldp	x23, x24, [sp, #48]
  4054a0:	ldp	x25, x26, [sp, #64]
  4054a4:	ldp	x29, x30, [sp], #80
  4054a8:	ret
  4054ac:	nop
  4054b0:	stp	x29, x30, [sp, #-48]!
  4054b4:	mov	x29, sp
  4054b8:	stp	x19, x20, [sp, #16]
  4054bc:	mov	x19, x0
  4054c0:	mov	w20, w1
  4054c4:	ldr	x0, [x0]
  4054c8:	str	x21, [sp, #32]
  4054cc:	mov	x21, x2
  4054d0:	bl	401e00 <if_nametoindex@plt>
  4054d4:	cmp	w0, #0x0
  4054d8:	cset	w2, eq  // eq = none
  4054dc:	cmp	w2, w20
  4054e0:	b.lt	4054f4 <ferror@plt+0x3604>  // b.tstop
  4054e4:	ldp	x19, x20, [sp, #16]
  4054e8:	ldr	x21, [sp, #32]
  4054ec:	ldp	x29, x30, [sp], #48
  4054f0:	ret
  4054f4:	mov	x1, x21
  4054f8:	mov	x0, x19
  4054fc:	ldp	x19, x20, [sp, #16]
  405500:	ldr	x21, [sp, #32]
  405504:	ldp	x29, x30, [sp], #48
  405508:	b	4051c8 <ferror@plt+0x32d8>
  40550c:	nop
  405510:	cmp	w1, #0x1
  405514:	b.gt	40551c <ferror@plt+0x362c>
  405518:	ret
  40551c:	mov	x1, x2
  405520:	mov	w2, #0x1                   	// #1
  405524:	b	4051c8 <ferror@plt+0x32d8>
  405528:	stp	x29, x30, [sp, #-48]!
  40552c:	mov	x29, sp
  405530:	stp	x19, x20, [sp, #16]
  405534:	mov	x19, x0
  405538:	mov	w20, w1
  40553c:	str	x21, [sp, #32]
  405540:	mov	x21, x2
  405544:	ldr	x2, [x0, #8]
  405548:	mov	w1, #0x8915                	// #35093
  40554c:	ldr	w0, [x0, #16]
  405550:	bl	4097c0 <argp_parse@@Base+0x1818>
  405554:	tbnz	w0, #31, 405570 <ferror@plt+0x3680>
  405558:	cmp	w20, #0x0
  40555c:	b.gt	40558c <ferror@plt+0x369c>
  405560:	ldp	x19, x20, [sp, #16]
  405564:	ldr	x21, [sp, #32]
  405568:	ldp	x29, x30, [sp], #48
  40556c:	ret
  405570:	mov	x2, x21
  405574:	mov	w1, w20
  405578:	mov	x0, x19
  40557c:	ldp	x19, x20, [sp, #16]
  405580:	ldr	x21, [sp, #32]
  405584:	ldp	x29, x30, [sp], #48
  405588:	b	405510 <ferror@plt+0x3620>
  40558c:	mov	x1, x21
  405590:	mov	x0, x19
  405594:	ldp	x19, x20, [sp, #16]
  405598:	mov	w2, #0x0                   	// #0
  40559c:	ldr	x21, [sp, #32]
  4055a0:	ldp	x29, x30, [sp], #48
  4055a4:	b	4051c8 <ferror@plt+0x32d8>
  4055a8:	stp	x29, x30, [sp, #-48]!
  4055ac:	mov	x29, sp
  4055b0:	stp	x19, x20, [sp, #16]
  4055b4:	mov	x19, x0
  4055b8:	mov	w20, w1
  4055bc:	str	x21, [sp, #32]
  4055c0:	mov	x21, x2
  4055c4:	ldr	x2, [x0, #8]
  4055c8:	mov	w1, #0x891b                	// #35099
  4055cc:	ldr	w0, [x0, #16]
  4055d0:	bl	4097c0 <argp_parse@@Base+0x1818>
  4055d4:	tbnz	w0, #31, 4055f0 <ferror@plt+0x3700>
  4055d8:	cmp	w20, #0x0
  4055dc:	b.gt	40560c <ferror@plt+0x371c>
  4055e0:	ldp	x19, x20, [sp, #16]
  4055e4:	ldr	x21, [sp, #32]
  4055e8:	ldp	x29, x30, [sp], #48
  4055ec:	ret
  4055f0:	mov	x2, x21
  4055f4:	mov	w1, w20
  4055f8:	mov	x0, x19
  4055fc:	ldp	x19, x20, [sp, #16]
  405600:	ldr	x21, [sp, #32]
  405604:	ldp	x29, x30, [sp], #48
  405608:	b	405510 <ferror@plt+0x3620>
  40560c:	mov	x1, x21
  405610:	mov	x0, x19
  405614:	ldp	x19, x20, [sp, #16]
  405618:	mov	w2, #0x0                   	// #0
  40561c:	ldr	x21, [sp, #32]
  405620:	ldp	x29, x30, [sp], #48
  405624:	b	4051c8 <ferror@plt+0x32d8>
  405628:	stp	x29, x30, [sp, #-80]!
  40562c:	mov	x29, sp
  405630:	stp	x19, x20, [sp, #16]
  405634:	mov	x19, x0
  405638:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  40563c:	add	x0, x0, #0x5d8
  405640:	stp	x21, x22, [sp, #32]
  405644:	mov	x22, x2
  405648:	ldr	x3, [x19, #8]
  40564c:	ldrsh	w21, [x3, #16]
  405650:	str	x23, [sp, #48]
  405654:	mov	w23, w1
  405658:	add	x1, sp, #0x4c
  40565c:	bl	4025b0 <ferror@plt+0x6c0>
  405660:	cbnz	w0, 405680 <ferror@plt+0x3790>
  405664:	cmp	w23, #0x1
  405668:	b.gt	4056d4 <ferror@plt+0x37e4>
  40566c:	ldp	x19, x20, [sp, #16]
  405670:	ldp	x21, x22, [sp, #32]
  405674:	ldr	x23, [sp, #48]
  405678:	ldp	x29, x30, [sp], #80
  40567c:	ret
  405680:	mov	w20, w0
  405684:	ldr	w0, [x19, #16]
  405688:	ldr	x2, [x19, #8]
  40568c:	mov	w1, #0x8913                	// #35091
  405690:	bl	4097c0 <argp_parse@@Base+0x1818>
  405694:	tbnz	w0, #31, 405664 <ferror@plt+0x3774>
  405698:	and	w21, w21, #0xffff
  40569c:	tst	w20, w21
  4056a0:	b.eq	405664 <ferror@plt+0x3774>  // b.none
  4056a4:	ldr	w0, [x19, #16]
  4056a8:	mov	w1, #0x8919                	// #35097
  4056ac:	ldr	x2, [x19, #8]
  4056b0:	bl	4097c0 <argp_parse@@Base+0x1818>
  4056b4:	tbnz	w0, #31, 405664 <ferror@plt+0x3774>
  4056b8:	cmp	w23, #0x0
  4056bc:	b.le	40566c <ferror@plt+0x377c>
  4056c0:	mov	x1, x22
  4056c4:	mov	x0, x19
  4056c8:	mov	w2, #0x0                   	// #0
  4056cc:	bl	4051c8 <ferror@plt+0x32d8>
  4056d0:	b	40566c <ferror@plt+0x377c>
  4056d4:	mov	x1, x22
  4056d8:	mov	x0, x19
  4056dc:	mov	w2, #0x1                   	// #1
  4056e0:	bl	4051c8 <ferror@plt+0x32d8>
  4056e4:	ldp	x19, x20, [sp, #16]
  4056e8:	ldp	x21, x22, [sp, #32]
  4056ec:	ldr	x23, [sp, #48]
  4056f0:	ldp	x29, x30, [sp], #80
  4056f4:	ret
  4056f8:	stp	x29, x30, [sp, #-80]!
  4056fc:	mov	x29, sp
  405700:	stp	x19, x20, [sp, #16]
  405704:	mov	x19, x0
  405708:	adrp	x0, 40e000 <argp_error@@Base+0x13a0>
  40570c:	add	x0, x0, #0x600
  405710:	stp	x21, x22, [sp, #32]
  405714:	mov	x22, x2
  405718:	ldr	x3, [x19, #8]
  40571c:	ldrsh	w21, [x3, #16]
  405720:	str	x23, [sp, #48]
  405724:	mov	w23, w1
  405728:	add	x1, sp, #0x4c
  40572c:	bl	4025b0 <ferror@plt+0x6c0>
  405730:	cbnz	w0, 405750 <ferror@plt+0x3860>
  405734:	cmp	w23, #0x1
  405738:	b.gt	4057a4 <ferror@plt+0x38b4>
  40573c:	ldp	x19, x20, [sp, #16]
  405740:	ldp	x21, x22, [sp, #32]
  405744:	ldr	x23, [sp, #48]
  405748:	ldp	x29, x30, [sp], #80
  40574c:	ret
  405750:	mov	w20, w0
  405754:	ldr	w0, [x19, #16]
  405758:	ldr	x2, [x19, #8]
  40575c:	mov	w1, #0x8913                	// #35091
  405760:	bl	4097c0 <argp_parse@@Base+0x1818>
  405764:	tbnz	w0, #31, 405734 <ferror@plt+0x3844>
  405768:	and	w21, w21, #0xffff
  40576c:	tst	w20, w21
  405770:	b.eq	405734 <ferror@plt+0x3844>  // b.none
  405774:	ldr	w0, [x19, #16]
  405778:	mov	w1, #0x8917                	// #35095
  40577c:	ldr	x2, [x19, #8]
  405780:	bl	4097c0 <argp_parse@@Base+0x1818>
  405784:	tbnz	w0, #31, 405734 <ferror@plt+0x3844>
  405788:	cmp	w23, #0x0
  40578c:	b.le	40573c <ferror@plt+0x384c>
  405790:	mov	x1, x22
  405794:	mov	x0, x19
  405798:	mov	w2, #0x0                   	// #0
  40579c:	bl	4051c8 <ferror@plt+0x32d8>
  4057a0:	b	40573c <ferror@plt+0x384c>
  4057a4:	mov	x1, x22
  4057a8:	mov	x0, x19
  4057ac:	mov	w2, #0x1                   	// #1
  4057b0:	bl	4051c8 <ferror@plt+0x32d8>
  4057b4:	ldp	x19, x20, [sp, #16]
  4057b8:	ldp	x21, x22, [sp, #32]
  4057bc:	ldr	x23, [sp, #48]
  4057c0:	ldp	x29, x30, [sp], #80
  4057c4:	ret
  4057c8:	stp	x29, x30, [sp, #-48]!
  4057cc:	mov	x29, sp
  4057d0:	stp	x19, x20, [sp, #16]
  4057d4:	mov	x19, x0
  4057d8:	mov	w20, w1
  4057dc:	str	x21, [sp, #32]
  4057e0:	mov	x21, x2
  4057e4:	ldr	x2, [x0, #8]
  4057e8:	mov	w1, #0x8921                	// #35105
  4057ec:	ldr	w0, [x0, #16]
  4057f0:	bl	4097c0 <argp_parse@@Base+0x1818>
  4057f4:	tbnz	w0, #31, 405810 <ferror@plt+0x3920>
  4057f8:	cmp	w20, #0x0
  4057fc:	b.gt	40582c <ferror@plt+0x393c>
  405800:	ldp	x19, x20, [sp, #16]
  405804:	ldr	x21, [sp, #32]
  405808:	ldp	x29, x30, [sp], #48
  40580c:	ret
  405810:	mov	x2, x21
  405814:	mov	w1, w20
  405818:	mov	x0, x19
  40581c:	ldp	x19, x20, [sp, #16]
  405820:	ldr	x21, [sp, #32]
  405824:	ldp	x29, x30, [sp], #48
  405828:	b	405510 <ferror@plt+0x3620>
  40582c:	mov	x1, x21
  405830:	mov	x0, x19
  405834:	ldp	x19, x20, [sp, #16]
  405838:	mov	w2, #0x0                   	// #0
  40583c:	ldr	x21, [sp, #32]
  405840:	ldp	x29, x30, [sp], #48
  405844:	b	4051c8 <ferror@plt+0x32d8>
  405848:	cmp	w1, #0x0
  40584c:	b.gt	405854 <ferror@plt+0x3964>
  405850:	ret
  405854:	mov	x1, x2
  405858:	mov	w2, #0x0                   	// #0
  40585c:	b	4051c8 <ferror@plt+0x32d8>
  405860:	stp	x29, x30, [sp, #-48]!
  405864:	mov	x29, sp
  405868:	stp	x19, x20, [sp, #16]
  40586c:	mov	x19, x0
  405870:	mov	w20, w1
  405874:	str	x21, [sp, #32]
  405878:	mov	x21, x2
  40587c:	ldr	x2, [x0, #8]
  405880:	mov	w1, #0x891d                	// #35101
  405884:	ldr	w0, [x0, #16]
  405888:	bl	4097c0 <argp_parse@@Base+0x1818>
  40588c:	tbnz	w0, #31, 4058bc <ferror@plt+0x39cc>
  405890:	ldr	x0, [x19, #8]
  405894:	ldr	w0, [x0, #16]
  405898:	cmp	w0, #0x0
  40589c:	b.le	4058bc <ferror@plt+0x39cc>
  4058a0:	mov	x2, x21
  4058a4:	mov	w1, w20
  4058a8:	mov	x0, x19
  4058ac:	ldp	x19, x20, [sp, #16]
  4058b0:	ldr	x21, [sp, #32]
  4058b4:	ldp	x29, x30, [sp], #48
  4058b8:	b	405848 <ferror@plt+0x3958>
  4058bc:	cmp	w20, #0x1
  4058c0:	b.gt	4058d4 <ferror@plt+0x39e4>
  4058c4:	ldp	x19, x20, [sp, #16]
  4058c8:	ldr	x21, [sp, #32]
  4058cc:	ldp	x29, x30, [sp], #48
  4058d0:	ret
  4058d4:	mov	x1, x21
  4058d8:	mov	x0, x19
  4058dc:	ldp	x19, x20, [sp, #16]
  4058e0:	mov	w2, #0x1                   	// #1
  4058e4:	ldr	x21, [sp, #32]
  4058e8:	ldp	x29, x30, [sp], #48
  4058ec:	b	4051c8 <ferror@plt+0x32d8>
  4058f0:	stp	x29, x30, [sp, #-48]!
  4058f4:	mov	x29, sp
  4058f8:	stp	x19, x20, [sp, #16]
  4058fc:	mov	x19, x0
  405900:	mov	w20, w1
  405904:	str	x21, [sp, #32]
  405908:	mov	x21, x2
  40590c:	ldr	x2, [x0, #8]
  405910:	mov	w1, #0x8913                	// #35091
  405914:	ldr	w0, [x0, #16]
  405918:	bl	4097c0 <argp_parse@@Base+0x1818>
  40591c:	tbnz	w0, #31, 405938 <ferror@plt+0x3a48>
  405920:	cmp	w20, #0x0
  405924:	b.gt	405954 <ferror@plt+0x3a64>
  405928:	ldp	x19, x20, [sp, #16]
  40592c:	ldr	x21, [sp, #32]
  405930:	ldp	x29, x30, [sp], #48
  405934:	ret
  405938:	mov	x2, x21
  40593c:	mov	w1, w20
  405940:	mov	x0, x19
  405944:	ldp	x19, x20, [sp, #16]
  405948:	ldr	x21, [sp, #32]
  40594c:	ldp	x29, x30, [sp], #48
  405950:	b	405510 <ferror@plt+0x3620>
  405954:	mov	x1, x21
  405958:	mov	x0, x19
  40595c:	ldp	x19, x20, [sp, #16]
  405960:	mov	w2, #0x0                   	// #0
  405964:	ldr	x21, [sp, #32]
  405968:	ldp	x29, x30, [sp], #48
  40596c:	b	4051c8 <ferror@plt+0x32d8>
  405970:	cmp	w1, #0x1
  405974:	b.gt	40597c <ferror@plt+0x3a8c>
  405978:	ret
  40597c:	mov	x1, x2
  405980:	mov	w2, #0x1                   	// #1
  405984:	b	4051c8 <ferror@plt+0x32d8>
  405988:	b	405970 <ferror@plt+0x3a80>
  40598c:	nop
  405990:	stp	x29, x30, [sp, #-48]!
  405994:	mov	x29, sp
  405998:	stp	x19, x20, [sp, #16]
  40599c:	mov	x19, x0
  4059a0:	mov	w20, w1
  4059a4:	str	x21, [sp, #32]
  4059a8:	mov	x21, x2
  4059ac:	ldr	x2, [x0, #8]
  4059b0:	mov	w1, #0x8970                	// #35184
  4059b4:	ldr	w0, [x0, #16]
  4059b8:	bl	4097c0 <argp_parse@@Base+0x1818>
  4059bc:	tbnz	w0, #31, 4059d8 <ferror@plt+0x3ae8>
  4059c0:	cmp	w20, #0x0
  4059c4:	b.gt	4059f4 <ferror@plt+0x3b04>
  4059c8:	ldp	x19, x20, [sp, #16]
  4059cc:	ldr	x21, [sp, #32]
  4059d0:	ldp	x29, x30, [sp], #48
  4059d4:	ret
  4059d8:	mov	x2, x21
  4059dc:	mov	w1, w20
  4059e0:	mov	x0, x19
  4059e4:	ldp	x19, x20, [sp, #16]
  4059e8:	ldr	x21, [sp, #32]
  4059ec:	ldp	x29, x30, [sp], #48
  4059f0:	b	405510 <ferror@plt+0x3620>
  4059f4:	mov	x1, x21
  4059f8:	mov	x0, x19
  4059fc:	ldp	x19, x20, [sp, #16]
  405a00:	mov	w2, #0x0                   	// #0
  405a04:	ldr	x21, [sp, #32]
  405a08:	ldp	x29, x30, [sp], #48
  405a0c:	b	4051c8 <ferror@plt+0x32d8>
  405a10:	ldr	x5, [x0, #8]
  405a14:	ldrb	w5, [x5, #34]
  405a18:	cbz	w5, 405a20 <ferror@plt+0x3b30>
  405a1c:	b	405848 <ferror@plt+0x3958>
  405a20:	cmp	w1, #0x1
  405a24:	b.gt	405a2c <ferror@plt+0x3b3c>
  405a28:	ret
  405a2c:	mov	x1, x2
  405a30:	mov	w2, #0x1                   	// #1
  405a34:	b	4051c8 <ferror@plt+0x32d8>
  405a38:	ldr	x5, [x0, #8]
  405a3c:	ldrh	w5, [x5, #32]
  405a40:	cmp	w5, #0xff
  405a44:	b.ls	405a4c <ferror@plt+0x3b5c>  // b.plast
  405a48:	b	405848 <ferror@plt+0x3958>
  405a4c:	cmp	w1, #0x1
  405a50:	b.gt	405a58 <ferror@plt+0x3b68>
  405a54:	ret
  405a58:	mov	x1, x2
  405a5c:	mov	w2, #0x1                   	// #1
  405a60:	b	4051c8 <ferror@plt+0x32d8>
  405a64:	nop
  405a68:	ldr	x5, [x0, #8]
  405a6c:	ldr	x5, [x5, #16]
  405a70:	cbz	x5, 405a78 <ferror@plt+0x3b88>
  405a74:	b	405848 <ferror@plt+0x3958>
  405a78:	cmp	w1, #0x1
  405a7c:	b.gt	405a84 <ferror@plt+0x3b94>
  405a80:	ret
  405a84:	mov	x1, x2
  405a88:	mov	w2, #0x1                   	// #1
  405a8c:	b	4051c8 <ferror@plt+0x32d8>
  405a90:	ldr	x5, [x0, #8]
  405a94:	ldr	x5, [x5, #24]
  405a98:	cbz	x5, 405aa0 <ferror@plt+0x3bb0>
  405a9c:	b	405848 <ferror@plt+0x3958>
  405aa0:	cmp	w1, #0x1
  405aa4:	b.gt	405aac <ferror@plt+0x3bbc>
  405aa8:	ret
  405aac:	mov	x1, x2
  405ab0:	mov	w2, #0x1                   	// #1
  405ab4:	b	4051c8 <ferror@plt+0x32d8>
  405ab8:	ldr	x5, [x0, #8]
  405abc:	ldrb	w5, [x5, #35]
  405ac0:	cbz	w5, 405ac8 <ferror@plt+0x3bd8>
  405ac4:	b	405848 <ferror@plt+0x3958>
  405ac8:	cmp	w1, #0x1
  405acc:	b.gt	405ad4 <ferror@plt+0x3be4>
  405ad0:	ret
  405ad4:	mov	x1, x2
  405ad8:	mov	w2, #0x1                   	// #1
  405adc:	b	4051c8 <ferror@plt+0x32d8>
  405ae0:	cbz	w1, 405b44 <ferror@plt+0x3c54>
  405ae4:	stp	x29, x30, [sp, #-48]!
  405ae8:	mov	x29, sp
  405aec:	stp	x19, x20, [sp, #16]
  405af0:	mov	x19, x0
  405af4:	adrp	x0, 426000 <argp_error@@Base+0x193a0>
  405af8:	add	x20, x0, #0x400
  405afc:	stp	x21, x22, [sp, #32]
  405b00:	mov	x21, x2
  405b04:	ldr	x0, [x0, #1024]
  405b08:	ldr	x22, [x19]
  405b0c:	cbz	x0, 405b30 <ferror@plt+0x3c40>
  405b10:	str	x0, [x19]
  405b14:	mov	w1, #0x0                   	// #0
  405b18:	mov	x0, x19
  405b1c:	ldr	x3, [x21]
  405b20:	str	x3, [x19, #24]
  405b24:	bl	404eb8 <ferror@plt+0x2fc8>
  405b28:	ldr	x0, [x20, #24]!
  405b2c:	cbnz	x0, 405b10 <ferror@plt+0x3c20>
  405b30:	str	x22, [x19]
  405b34:	ldp	x19, x20, [sp, #16]
  405b38:	ldp	x21, x22, [sp, #32]
  405b3c:	ldp	x29, x30, [sp], #48
  405b40:	ret
  405b44:	ret
  405b48:	cmp	w1, #0x1
  405b4c:	b.le	405bc0 <ferror@plt+0x3cd0>
  405b50:	stp	x29, x30, [sp, #-64]!
  405b54:	mov	x29, sp
  405b58:	stp	x21, x22, [sp, #32]
  405b5c:	mov	x21, x2
  405b60:	add	x1, sp, #0x38
  405b64:	stp	x19, x20, [sp, #16]
  405b68:	mov	x20, x0
  405b6c:	mov	w2, #0xa                   	// #10
  405b70:	ldr	x0, [x21]
  405b74:	bl	401af0 <strtoul@plt>
  405b78:	mov	x22, x0
  405b7c:	ldr	x1, [sp, #56]
  405b80:	ldrb	w0, [x1]
  405b84:	cbnz	w0, 405bc4 <ferror@plt+0x3cd4>
  405b88:	sub	w19, w22, #0x1
  405b8c:	cbz	w22, 405bb0 <ferror@plt+0x3cc0>
  405b90:	ldr	x0, [x21, #8]
  405b94:	str	x0, [x20, #24]
  405b98:	sub	w19, w19, #0x1
  405b9c:	mov	x0, x20
  405ba0:	mov	w1, #0x0                   	// #0
  405ba4:	bl	404eb8 <ferror@plt+0x2fc8>
  405ba8:	cmn	w19, #0x1
  405bac:	b.ne	405b90 <ferror@plt+0x3ca0>  // b.any
  405bb0:	ldp	x19, x20, [sp, #16]
  405bb4:	ldp	x21, x22, [sp, #32]
  405bb8:	ldp	x29, x30, [sp], #64
  405bbc:	ret
  405bc0:	ret
  405bc4:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  405bc8:	mov	w1, #0x0                   	// #0
  405bcc:	add	x2, x2, #0x50
  405bd0:	mov	w0, #0x1                   	// #1
  405bd4:	bl	401b30 <error@plt>
  405bd8:	b	405b88 <ferror@plt+0x3c98>
  405bdc:	nop
  405be0:	cmp	w1, #0x1
  405be4:	b.le	405cb0 <ferror@plt+0x3dc0>
  405be8:	stp	x29, x30, [sp, #-80]!
  405bec:	sub	w1, w1, #0x2
  405bf0:	mov	x29, sp
  405bf4:	stp	x21, x22, [sp, #32]
  405bf8:	mov	x21, x2
  405bfc:	add	x22, x2, w1, uxtw #3
  405c00:	stp	x19, x20, [sp, #16]
  405c04:	mov	x20, x0
  405c08:	mov	w1, #0x0                   	// #0
  405c0c:	stp	x23, x24, [sp, #48]
  405c10:	mov	x24, x2
  405c14:	str	x25, [sp, #64]
  405c18:	adrp	x25, 427000 <argp_error@@Base+0x1a3a0>
  405c1c:	ldr	x0, [x21, #8]
  405c20:	str	x0, [x20, #24]
  405c24:	ldr	w19, [x25, #1584]
  405c28:	mov	x0, x20
  405c2c:	str	wzr, [x25, #1584]
  405c30:	bl	404eb8 <ferror@plt+0x2fc8>
  405c34:	add	x23, x25, #0x630
  405c38:	cmp	x22, x21
  405c3c:	b.eq	405c68 <ferror@plt+0x3d78>  // b.none
  405c40:	ldr	w0, [x23]
  405c44:	cbnz	w0, 405c84 <ferror@plt+0x3d94>
  405c48:	add	x21, x21, #0x8
  405c4c:	ldr	x0, [x21, #8]
  405c50:	str	x0, [x20, #24]
  405c54:	mov	w1, #0x0                   	// #0
  405c58:	mov	x0, x20
  405c5c:	bl	404eb8 <ferror@plt+0x2fc8>
  405c60:	cmp	x22, x21
  405c64:	b.ne	405c40 <ferror@plt+0x3d50>  // b.any
  405c68:	str	w19, [x25, #1584]
  405c6c:	ldp	x19, x20, [sp, #16]
  405c70:	ldp	x21, x22, [sp, #32]
  405c74:	ldp	x23, x24, [sp, #48]
  405c78:	ldr	x25, [sp, #64]
  405c7c:	ldp	x29, x30, [sp], #80
  405c80:	ret
  405c84:	ldr	x19, [x24]
  405c88:	ldrb	w1, [x19]
  405c8c:	cbz	w1, 405ca0 <ferror@plt+0x3db0>
  405c90:	mov	x0, x20
  405c94:	bl	404018 <ferror@plt+0x2128>
  405c98:	ldrb	w1, [x19, #1]!
  405c9c:	cbnz	w1, 405c90 <ferror@plt+0x3da0>
  405ca0:	add	x21, x21, #0x8
  405ca4:	mov	w19, #0x1                   	// #1
  405ca8:	str	wzr, [x23]
  405cac:	b	405c4c <ferror@plt+0x3d5c>
  405cb0:	ret
  405cb4:	nop
  405cb8:	cmp	w1, #0x0
  405cbc:	b.le	405d30 <ferror@plt+0x3e40>
  405cc0:	stp	x29, x30, [sp, #-48]!
  405cc4:	sub	w1, w1, #0x1
  405cc8:	mov	x29, sp
  405ccc:	stp	x19, x20, [sp, #16]
  405cd0:	add	x20, x2, #0x8
  405cd4:	mov	x19, x2
  405cd8:	add	x20, x20, w1, uxtw #3
  405cdc:	str	x21, [sp, #32]
  405ce0:	mov	x21, x0
  405ce4:	b	405cf0 <ferror@plt+0x3e00>
  405ce8:	cmp	x19, x20
  405cec:	b.eq	405d20 <ferror@plt+0x3e30>  // b.none
  405cf0:	ldr	x0, [x19]
  405cf4:	add	x19, x19, #0x8
  405cf8:	bl	402fb8 <ferror@plt+0x10c8>
  405cfc:	cbz	x0, 405ce8 <ferror@plt+0x3df8>
  405d00:	ldr	x0, [x0, #16]
  405d04:	mov	w1, #0x0                   	// #0
  405d08:	ldp	x19, x20, [sp, #16]
  405d0c:	str	x0, [x21, #24]
  405d10:	mov	x0, x21
  405d14:	ldr	x21, [sp, #32]
  405d18:	ldp	x29, x30, [sp], #48
  405d1c:	b	404eb8 <ferror@plt+0x2fc8>
  405d20:	ldp	x19, x20, [sp, #16]
  405d24:	ldr	x21, [sp, #32]
  405d28:	ldp	x29, x30, [sp], #48
  405d2c:	ret
  405d30:	ret
  405d34:	nop
  405d38:	stp	x29, x30, [sp, #-64]!
  405d3c:	adrp	x6, 427000 <argp_error@@Base+0x1a3a0>
  405d40:	mov	w4, w0
  405d44:	mov	x29, sp
  405d48:	ldr	x7, [x6, #1600]
  405d4c:	mov	x5, x1
  405d50:	cbz	x7, 405d98 <ferror@plt+0x3ea8>
  405d54:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  405d58:	ldr	w1, [x0, #1432]
  405d5c:	cbnz	w1, 405d90 <ferror@plt+0x3ea0>
  405d60:	mov	w1, #0x1                   	// #1
  405d64:	str	w1, [x0, #1432]
  405d68:	str	w1, [sp, #44]
  405d6c:	add	x0, sp, #0x18
  405d70:	mov	w1, #0x0                   	// #0
  405d74:	stp	x5, x2, [sp, #24]
  405d78:	str	w4, [sp, #40]
  405d7c:	str	x3, [sp, #48]
  405d80:	str	wzr, [sp, #56]
  405d84:	bl	404eb8 <ferror@plt+0x2fc8>
  405d88:	ldp	x29, x30, [sp], #64
  405d8c:	ret
  405d90:	str	wzr, [sp, #44]
  405d94:	b	405d6c <ferror@plt+0x3e7c>
  405d98:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  405d9c:	ldr	x0, [x0, #1256]
  405da0:	str	x0, [x6, #1600]
  405da4:	b	405d54 <ferror@plt+0x3e64>
  405da8:	stp	x29, x30, [sp, #-16]!
  405dac:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  405db0:	add	x0, x0, #0x3a8
  405db4:	mov	x29, sp
  405db8:	ldrb	w4, [x1]
  405dbc:	ldrb	w3, [x1, #1]
  405dc0:	ldrb	w2, [x1, #2]
  405dc4:	ldrb	w1, [x1, #3]
  405dc8:	bl	401e80 <printf@plt>
  405dcc:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  405dd0:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  405dd4:	mov	w4, #0x1                   	// #1
  405dd8:	ldr	x2, [x1, #2248]
  405ddc:	ldr	w1, [x2]
  405de0:	add	w1, w1, w0
  405de4:	str	w1, [x2]
  405de8:	str	w4, [x3, #1584]
  405dec:	ldp	x29, x30, [sp], #16
  405df0:	ret
  405df4:	nop
  405df8:	stp	x29, x30, [sp, #-16]!
  405dfc:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  405e00:	add	x0, x0, #0x3c0
  405e04:	mov	x29, sp
  405e08:	ldrb	w5, [x1, #4]
  405e0c:	ldrb	w4, [x1, #3]
  405e10:	ldrb	w3, [x1, #2]
  405e14:	ldrb	w2, [x1, #1]
  405e18:	ldrb	w1, [x1]
  405e1c:	bl	401e80 <printf@plt>
  405e20:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  405e24:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  405e28:	mov	w4, #0x1                   	// #1
  405e2c:	ldr	x2, [x1, #2248]
  405e30:	ldr	w1, [x2]
  405e34:	add	w1, w1, w0
  405e38:	str	w1, [x2]
  405e3c:	str	w4, [x3, #1584]
  405e40:	ldp	x29, x30, [sp], #16
  405e44:	ret
  405e48:	stp	x29, x30, [sp, #-16]!
  405e4c:	adrp	x0, 40f000 <argp_error@@Base+0x23a0>
  405e50:	add	x0, x0, #0xec8
  405e54:	mov	x29, sp
  405e58:	ldrsh	w1, [x1]
  405e5c:	bl	401e80 <printf@plt>
  405e60:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  405e64:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  405e68:	mov	w4, #0x1                   	// #1
  405e6c:	ldr	x2, [x1, #2248]
  405e70:	ldr	w1, [x2]
  405e74:	add	w1, w1, w0
  405e78:	str	w1, [x2]
  405e7c:	str	w4, [x3, #1584]
  405e80:	ldp	x29, x30, [sp], #16
  405e84:	ret
  405e88:	stp	x29, x30, [sp, #-16]!
  405e8c:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  405e90:	add	x0, x0, #0x3d0
  405e94:	mov	x29, sp
  405e98:	ldrb	w1, [x1]
  405e9c:	bl	401e80 <printf@plt>
  405ea0:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  405ea4:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  405ea8:	mov	w4, #0x1                   	// #1
  405eac:	ldr	x2, [x1, #2248]
  405eb0:	ldr	w1, [x2]
  405eb4:	add	w1, w1, w0
  405eb8:	str	w1, [x2]
  405ebc:	str	w4, [x3, #1584]
  405ec0:	ldp	x29, x30, [sp], #16
  405ec4:	ret
  405ec8:	stp	x29, x30, [sp, #-16]!
  405ecc:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  405ed0:	add	x0, x0, #0x3d8
  405ed4:	mov	x29, sp
  405ed8:	ldrb	w6, [x1, #5]
  405edc:	ldrb	w5, [x1, #4]
  405ee0:	ldrb	w4, [x1, #3]
  405ee4:	ldrb	w3, [x1, #2]
  405ee8:	ldrb	w2, [x1, #1]
  405eec:	ldrb	w1, [x1]
  405ef0:	bl	401e80 <printf@plt>
  405ef4:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  405ef8:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  405efc:	mov	w4, #0x1                   	// #1
  405f00:	ldr	x2, [x1, #2248]
  405f04:	ldr	w1, [x2]
  405f08:	add	w1, w1, w0
  405f0c:	str	w1, [x2]
  405f10:	str	w4, [x3, #1584]
  405f14:	ldp	x29, x30, [sp], #16
  405f18:	ret
  405f1c:	nop
  405f20:	stp	x29, x30, [sp, #-48]!
  405f24:	mov	x29, sp
  405f28:	stp	x19, x20, [sp, #16]
  405f2c:	mov	x20, x0
  405f30:	mov	x19, x1
  405f34:	stp	x21, x22, [sp, #32]
  405f38:	mov	x21, x1
  405f3c:	add	x22, x1, #0x6
  405f40:	ldrb	w2, [x19]
  405f44:	mov	x0, x20
  405f48:	add	x19, x19, #0x1
  405f4c:	lsr	w2, w2, #1
  405f50:	mov	w1, w2
  405f54:	cmp	w2, #0x20
  405f58:	b.eq	405f68 <ferror@plt+0x4078>  // b.none
  405f5c:	bl	404018 <ferror@plt+0x2128>
  405f60:	cmp	x22, x19
  405f64:	b.ne	405f40 <ferror@plt+0x4050>  // b.any
  405f68:	ldrb	w1, [x21, #6]
  405f6c:	ubfx	x1, x1, #1, #4
  405f70:	cbnz	w1, 405f84 <ferror@plt+0x4094>
  405f74:	ldp	x19, x20, [sp, #16]
  405f78:	ldp	x21, x22, [sp, #32]
  405f7c:	ldp	x29, x30, [sp], #48
  405f80:	ret
  405f84:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  405f88:	add	x0, x0, #0x3f8
  405f8c:	bl	401e80 <printf@plt>
  405f90:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  405f94:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  405f98:	mov	w4, #0x1                   	// #1
  405f9c:	ldr	x2, [x1, #2248]
  405fa0:	ldp	x19, x20, [sp, #16]
  405fa4:	ldr	w1, [x2]
  405fa8:	ldp	x21, x22, [sp, #32]
  405fac:	add	w1, w1, w0
  405fb0:	str	w1, [x2]
  405fb4:	str	w4, [x3, #1584]
  405fb8:	ldp	x29, x30, [sp], #48
  405fbc:	ret
  405fc0:	sub	sp, sp, #0x60
  405fc4:	mov	x2, x1
  405fc8:	add	x8, x2, #0x60
  405fcc:	add	x9, x2, #0xa8
  405fd0:	add	x10, x2, #0x68
  405fd4:	add	x11, x2, #0xb0
  405fd8:	stp	x29, x30, [sp, #80]
  405fdc:	add	x12, x2, #0x48
  405fe0:	add	x29, sp, #0x50
  405fe4:	adrp	x3, 410000 <argp_error@@Base+0x33a0>
  405fe8:	add	x1, x3, #0x400
  405fec:	add	x4, x2, #0x18
  405ff0:	add	x3, x2, #0x38
  405ff4:	add	x5, x2, #0x28
  405ff8:	add	x6, x2, #0x50
  405ffc:	add	x7, x2, #0x58
  406000:	stp	x7, x6, [sp]
  406004:	add	x7, x2, #0x88
  406008:	add	x6, x2, #0x90
  40600c:	stp	x5, x4, [sp, #16]
  406010:	add	x5, x2, #0x40
  406014:	add	x4, x2, #0x30
  406018:	stp	x3, x12, [sp, #32]
  40601c:	add	x3, x2, #0x10
  406020:	add	x2, x2, #0x20
  406024:	stp	x11, x10, [sp, #48]
  406028:	stp	x9, x8, [sp, #64]
  40602c:	bl	401e30 <__isoc99_sscanf@plt>
  406030:	cmp	w0, #0x10
  406034:	cset	w0, eq  // eq = none
  406038:	ldp	x29, x30, [sp, #80]
  40603c:	add	sp, sp, #0x60
  406040:	ret
  406044:	nop
  406048:	sub	sp, sp, #0x60
  40604c:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  406050:	stp	x29, x30, [sp, #64]
  406054:	add	x29, sp, #0x40
  406058:	str	x19, [sp, #80]
  40605c:	mov	x19, x1
  406060:	add	x8, x19, #0x28
  406064:	add	x1, x2, #0x448
  406068:	add	x3, x19, #0x68
  40606c:	add	x2, x19, #0xa8
  406070:	add	x4, x19, #0xb0
  406074:	add	x5, x19, #0x48
  406078:	add	x6, x19, #0x38
  40607c:	add	x7, x19, #0x18
  406080:	stp	x8, x7, [sp]
  406084:	add	x7, x19, #0x88
  406088:	stp	x6, x5, [sp, #16]
  40608c:	add	x6, x19, #0x90
  406090:	add	x5, x19, #0x40
  406094:	stp	x4, x3, [sp, #32]
  406098:	add	x4, x19, #0x30
  40609c:	add	x3, x19, #0x10
  4060a0:	str	x2, [sp, #48]
  4060a4:	add	x2, x19, #0x20
  4060a8:	bl	401e30 <__isoc99_sscanf@plt>
  4060ac:	cmp	w0, #0xd
  4060b0:	cset	w0, eq  // eq = none
  4060b4:	ldp	x29, x30, [sp, #64]
  4060b8:	str	xzr, [x19, #80]
  4060bc:	ldr	x19, [sp, #80]
  4060c0:	add	sp, sp, #0x60
  4060c4:	ret
  4060c8:	sub	sp, sp, #0x50
  4060cc:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  4060d0:	stp	x29, x30, [sp, #48]
  4060d4:	add	x29, sp, #0x30
  4060d8:	str	x19, [sp, #64]
  4060dc:	mov	x19, x1
  4060e0:	add	x3, x19, #0x68
  4060e4:	add	x1, x2, #0x480
  4060e8:	add	x4, x19, #0xb0
  4060ec:	add	x2, x19, #0xa8
  4060f0:	add	x5, x19, #0x48
  4060f4:	add	x6, x19, #0x38
  4060f8:	stp	x6, x5, [sp]
  4060fc:	add	x7, x19, #0x18
  406100:	add	x6, x19, #0x88
  406104:	stp	x4, x3, [sp, #16]
  406108:	add	x5, x19, #0x90
  40610c:	add	x4, x19, #0x40
  406110:	str	x2, [sp, #32]
  406114:	add	x3, x19, #0x30
  406118:	add	x2, x19, #0x10
  40611c:	bl	401e30 <__isoc99_sscanf@plt>
  406120:	cmp	w0, #0xb
  406124:	cset	w0, eq  // eq = none
  406128:	ldp	x29, x30, [sp, #48]
  40612c:	stp	xzr, xzr, [x19, #32]
  406130:	str	xzr, [x19, #80]
  406134:	ldr	x19, [sp, #64]
  406138:	add	sp, sp, #0x50
  40613c:	ret
  406140:	stp	x29, x30, [sp, #-128]!
  406144:	mov	w1, #0x2                   	// #2
  406148:	mov	w2, #0x0                   	// #0
  40614c:	mov	x29, sp
  406150:	mov	w0, w1
  406154:	stp	x23, x24, [sp, #48]
  406158:	bl	401d90 <socket@plt>
  40615c:	tbnz	w0, #31, 406318 <ferror@plt+0x4428>
  406160:	add	x1, sp, #0x50
  406164:	stp	x19, x20, [sp, #16]
  406168:	stp	x21, x22, [sp, #32]
  40616c:	mov	w21, w0
  406170:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  406174:	add	x0, x0, #0x4b0
  406178:	bl	409088 <argp_parse@@Base+0x10e0>
  40617c:	mov	x20, x0
  406180:	cbz	x0, 406310 <ferror@plt+0x4420>
  406184:	ldr	x22, [sp, #80]
  406188:	mov	x19, #0x0                   	// #0
  40618c:	nop
  406190:	sub	x2, x0, x20
  406194:	mov	w1, #0x3a                  	// #58
  406198:	add	x0, x0, #0x1
  40619c:	sub	x2, x22, x2
  4061a0:	add	x19, x19, #0x1
  4061a4:	bl	401dd0 <memchr@plt>
  4061a8:	cbnz	x0, 406190 <ferror@plt+0x42a0>
  4061ac:	lsl	x0, x19, #4
  4061b0:	bl	401be0 <malloc@plt>
  4061b4:	mov	x23, x0
  4061b8:	cbz	x0, 406334 <ferror@plt+0x4444>
  4061bc:	mov	x2, x22
  4061c0:	mov	x0, x20
  4061c4:	mov	w1, #0x3a                  	// #58
  4061c8:	bl	401dd0 <memchr@plt>
  4061cc:	mov	x19, x0
  4061d0:	cbz	x0, 40632c <ferror@plt+0x443c>
  4061d4:	mov	x1, x19
  4061d8:	str	x25, [sp, #64]
  4061dc:	mov	x22, #0x1                   	// #1
  4061e0:	mov	x25, x23
  4061e4:	mov	w24, #0xffffffff            	// #-1
  4061e8:	strb	wzr, [x1], #-1
  4061ec:	ldurb	w0, [x19, #-1]
  4061f0:	cmp	w0, #0x20
  4061f4:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  4061f8:	b.eq	406298 <ferror@plt+0x43a8>  // b.none
  4061fc:	nop
  406200:	mov	x0, x1
  406204:	ldrb	w2, [x1, #-1]!
  406208:	cmp	w2, #0x20
  40620c:	ccmp	w2, #0xa, #0x4, ne  // ne = any
  406210:	b.ne	406200 <ferror@plt+0x4310>  // b.any
  406214:	bl	401c80 <strdup@plt>
  406218:	mov	x1, x0
  40621c:	str	w22, [x25]
  406220:	add	x0, sp, #0x58
  406224:	str	x1, [x25, #8]
  406228:	bl	401db0 <strcpy@plt>
  40622c:	str	w24, [sp, #104]
  406230:	add	x2, sp, #0x58
  406234:	mov	w0, w21
  406238:	mov	w1, #0x8933                	// #35123
  40623c:	bl	4097c0 <argp_parse@@Base+0x1818>
  406240:	tbnz	w0, #31, 40624c <ferror@plt+0x435c>
  406244:	ldr	w0, [sp, #104]
  406248:	str	w0, [x25]
  40624c:	ldr	x0, [x25, #8]
  406250:	cbz	x0, 4062a0 <ferror@plt+0x43b0>
  406254:	ldr	x3, [sp, #80]
  406258:	sub	x2, x19, x20
  40625c:	mov	x0, x19
  406260:	mov	w1, #0x3a                  	// #58
  406264:	sub	x2, x3, x2
  406268:	add	x25, x25, #0x10
  40626c:	bl	401dd0 <memchr@plt>
  406270:	mov	x19, x0
  406274:	add	x0, x22, #0x1
  406278:	cbz	x19, 4062e0 <ferror@plt+0x43f0>
  40627c:	mov	x1, x19
  406280:	mov	x22, x0
  406284:	strb	wzr, [x1], #-1
  406288:	ldurb	w0, [x19, #-1]
  40628c:	cmp	w0, #0x20
  406290:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  406294:	b.ne	406200 <ferror@plt+0x4310>  // b.any
  406298:	mov	x0, x19
  40629c:	b	406214 <ferror@plt+0x4324>
  4062a0:	bl	401ea0 <__errno_location@plt>
  4062a4:	mov	x19, x0
  4062a8:	mov	w0, w21
  4062ac:	mov	x23, #0x0                   	// #0
  4062b0:	ldr	w21, [x19]
  4062b4:	bl	401ca0 <close@plt>
  4062b8:	mov	x0, x20
  4062bc:	bl	401d30 <free@plt>
  4062c0:	ldr	x25, [sp, #64]
  4062c4:	str	w21, [x19]
  4062c8:	ldp	x19, x20, [sp, #16]
  4062cc:	ldp	x21, x22, [sp, #32]
  4062d0:	mov	x0, x23
  4062d4:	ldp	x23, x24, [sp, #48]
  4062d8:	ldp	x29, x30, [sp], #128
  4062dc:	ret
  4062e0:	ldr	x25, [sp, #64]
  4062e4:	add	x22, x23, x22, lsl #4
  4062e8:	str	wzr, [x22]
  4062ec:	mov	x0, x20
  4062f0:	str	xzr, [x22, #8]
  4062f4:	bl	401d30 <free@plt>
  4062f8:	mov	x0, x23
  4062fc:	ldp	x19, x20, [sp, #16]
  406300:	ldp	x21, x22, [sp, #32]
  406304:	ldp	x23, x24, [sp, #48]
  406308:	ldp	x29, x30, [sp], #128
  40630c:	ret
  406310:	ldp	x19, x20, [sp, #16]
  406314:	ldp	x21, x22, [sp, #32]
  406318:	mov	x23, #0x0                   	// #0
  40631c:	mov	x0, x23
  406320:	ldp	x23, x24, [sp, #48]
  406324:	ldp	x29, x30, [sp], #128
  406328:	ret
  40632c:	mov	x22, x23
  406330:	b	4062e8 <ferror@plt+0x43f8>
  406334:	bl	401ea0 <__errno_location@plt>
  406338:	mov	x19, x0
  40633c:	mov	w0, w21
  406340:	ldr	w21, [x19]
  406344:	bl	401ca0 <close@plt>
  406348:	mov	x0, x20
  40634c:	bl	401d30 <free@plt>
  406350:	str	w21, [x19]
  406354:	ldp	x19, x20, [sp, #16]
  406358:	ldp	x21, x22, [sp, #32]
  40635c:	b	4062d0 <ferror@plt+0x43e0>
  406360:	adrp	x1, 426000 <argp_error@@Base+0x193a0>
  406364:	mov	w2, w0
  406368:	add	x3, x1, #0xe20
  40636c:	ldr	x0, [x1, #3616]
  406370:	cbz	x0, 406390 <ferror@plt+0x44a0>
  406374:	mov	x0, x3
  406378:	b	406384 <ferror@plt+0x4494>
  40637c:	ldr	x1, [x0, #32]!
  406380:	cbz	x1, 406394 <ferror@plt+0x44a4>
  406384:	ldr	w1, [x0, #16]
  406388:	cmp	w1, w2
  40638c:	b.ne	40637c <ferror@plt+0x448c>  // b.any
  406390:	ret
  406394:	mov	x0, #0x0                   	// #0
  406398:	ret
  40639c:	nop
  4063a0:	stp	x29, x30, [sp, #-128]!
  4063a4:	mov	x29, sp
  4063a8:	stp	x23, x24, [sp, #48]
  4063ac:	adrp	x24, 427000 <argp_error@@Base+0x1a3a0>
  4063b0:	adrp	x23, 427000 <argp_error@@Base+0x1a3a0>
  4063b4:	stp	x19, x20, [sp, #16]
  4063b8:	mov	x20, x0
  4063bc:	ldr	w0, [x24, #1436]
  4063c0:	cbz	w0, 4063fc <ferror@plt+0x450c>
  4063c4:	ldr	x19, [x23, #1616]
  4063c8:	cbnz	x19, 4063d8 <ferror@plt+0x44e8>
  4063cc:	b	4063e8 <ferror@plt+0x44f8>
  4063d0:	ldr	x19, [x19]
  4063d4:	cbz	x19, 4063e8 <ferror@plt+0x44f8>
  4063d8:	ldr	x0, [x19, #8]
  4063dc:	mov	x1, x20
  4063e0:	bl	401cf0 <strcmp@plt>
  4063e4:	cbnz	w0, 4063d0 <ferror@plt+0x44e0>
  4063e8:	mov	x0, x19
  4063ec:	ldp	x19, x20, [sp, #16]
  4063f0:	ldp	x23, x24, [sp, #48]
  4063f4:	ldp	x29, x30, [sp], #128
  4063f8:	ret
  4063fc:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  406400:	add	x1, x1, #0x9f0
  406404:	stp	x21, x22, [sp, #32]
  406408:	stp	x25, x26, [sp, #64]
  40640c:	adrp	x26, 410000 <argp_error@@Base+0x33a0>
  406410:	add	x0, x26, #0x4b0
  406414:	stp	x0, xzr, [sp, #104]
  406418:	str	xzr, [sp, #120]
  40641c:	bl	401bd0 <fopen@plt>
  406420:	mov	x22, x0
  406424:	cbz	x0, 4065f4 <ferror@plt+0x4704>
  406428:	add	x1, sp, #0x78
  40642c:	add	x0, sp, #0x70
  406430:	mov	x3, x22
  406434:	mov	w2, #0xa                   	// #10
  406438:	bl	401ec0 <__getdelim@plt>
  40643c:	tbnz	x0, #63, 406560 <ferror@plt+0x4670>
  406440:	mov	x3, x22
  406444:	add	x1, sp, #0x78
  406448:	add	x0, sp, #0x70
  40644c:	mov	w2, #0xa                   	// #10
  406450:	bl	401ec0 <__getdelim@plt>
  406454:	tbnz	x0, #63, 406560 <ferror@plt+0x4670>
  406458:	ldr	x19, [sp, #112]
  40645c:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406460:	add	x1, x1, #0x4e0
  406464:	stp	x27, x28, [sp, #80]
  406468:	mov	x0, x19
  40646c:	mov	w27, #0x2                   	// #2
  406470:	bl	401e20 <strstr@plt>
  406474:	cbnz	x0, 406490 <ferror@plt+0x45a0>
  406478:	mov	x0, x19
  40647c:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406480:	add	x1, x1, #0x4f0
  406484:	bl	401e20 <strstr@plt>
  406488:	cmp	x0, #0x0
  40648c:	cset	w27, ne  // ne = any
  406490:	adrp	x25, 410000 <argp_error@@Base+0x33a0>
  406494:	add	x25, x25, #0xf48
  406498:	adrp	x23, 427000 <argp_error@@Base+0x1a3a0>
  40649c:	nop
  4064a0:	mov	x3, x22
  4064a4:	add	x1, sp, #0x78
  4064a8:	add	x0, sp, #0x70
  4064ac:	mov	w2, #0xa                   	// #10
  4064b0:	bl	401ec0 <__getdelim@plt>
  4064b4:	cmp	x0, #0x0
  4064b8:	b.le	4065dc <ferror@plt+0x46ec>
  4064bc:	mov	x0, #0xc8                  	// #200
  4064c0:	bl	4096a0 <argp_parse@@Base+0x16f8>
  4064c4:	ldr	x28, [sp, #112]
  4064c8:	mov	x21, x0
  4064cc:	ldrb	w19, [x28]
  4064d0:	cbz	w19, 4064f8 <ferror@plt+0x4608>
  4064d4:	nop
  4064d8:	tbnz	w19, #7, 4064f8 <ferror@plt+0x4608>
  4064dc:	bl	401d00 <__ctype_b_loc@plt>
  4064e0:	ubfiz	x19, x19, #1, #8
  4064e4:	ldr	x0, [x0]
  4064e8:	ldrh	w0, [x0, x19]
  4064ec:	tbz	w0, #13, 4064f8 <ferror@plt+0x4608>
  4064f0:	ldrb	w19, [x28, #1]!
  4064f4:	cbnz	w19, 4064d8 <ferror@plt+0x45e8>
  4064f8:	mov	x0, x28
  4064fc:	mov	w1, #0x3a                  	// #58
  406500:	bl	401d70 <strchr@plt>
  406504:	mov	x19, x0
  406508:	cbz	x0, 4065b4 <ferror@plt+0x46c4>
  40650c:	sub	x26, x0, x28
  406510:	add	x0, x26, #0x1
  406514:	bl	409530 <argp_parse@@Base+0x1588>
  406518:	mov	x1, x28
  40651c:	mov	x2, x26
  406520:	mov	x28, x0
  406524:	str	x0, [x21, #8]
  406528:	bl	401aa0 <memcpy@plt>
  40652c:	ldr	x3, [x25, w27, sxtw #3]
  406530:	strb	wzr, [x28, x26]
  406534:	add	x0, x19, #0x1
  406538:	mov	x1, x21
  40653c:	blr	x3
  406540:	cbz	w0, 4065b4 <ferror@plt+0x46c4>
  406544:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  406548:	str	xzr, [x21]
  40654c:	ldr	x1, [x0, #1608]
  406550:	cbz	x1, 4065a8 <ferror@plt+0x46b8>
  406554:	str	x21, [x1]
  406558:	str	x21, [x0, #1608]
  40655c:	b	4064a0 <ferror@plt+0x45b0>
  406560:	bl	401ea0 <__errno_location@plt>
  406564:	mov	x1, x0
  406568:	ldr	x3, [sp, #104]
  40656c:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  406570:	ldr	w1, [x1]
  406574:	add	x2, x2, #0x4d0
  406578:	mov	w0, #0x0                   	// #0
  40657c:	adrp	x23, 427000 <argp_error@@Base+0x1a3a0>
  406580:	bl	401b30 <error@plt>
  406584:	mov	x0, x22
  406588:	bl	401bc0 <fclose@plt>
  40658c:	ldr	x0, [sp, #112]
  406590:	bl	401d30 <free@plt>
  406594:	mov	w0, #0x1                   	// #1
  406598:	str	w0, [x24, #1436]
  40659c:	ldp	x21, x22, [sp, #32]
  4065a0:	ldp	x25, x26, [sp, #64]
  4065a4:	b	4063c4 <ferror@plt+0x44d4>
  4065a8:	str	x21, [x23, #1616]
  4065ac:	str	x21, [x0, #1608]
  4065b0:	b	4064a0 <ferror@plt+0x45b0>
  4065b4:	bl	401ea0 <__errno_location@plt>
  4065b8:	mov	x1, x0
  4065bc:	ldr	x3, [sp, #104]
  4065c0:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  4065c4:	ldr	w1, [x1]
  4065c8:	add	x2, x2, #0x4d0
  4065cc:	mov	w0, #0x0                   	// #0
  4065d0:	bl	401b30 <error@plt>
  4065d4:	mov	x0, x21
  4065d8:	bl	401d30 <free@plt>
  4065dc:	mov	x0, x22
  4065e0:	bl	401bc0 <fclose@plt>
  4065e4:	ldr	x0, [sp, #112]
  4065e8:	bl	401d30 <free@plt>
  4065ec:	ldp	x27, x28, [sp, #80]
  4065f0:	b	406594 <ferror@plt+0x46a4>
  4065f4:	bl	401ea0 <__errno_location@plt>
  4065f8:	mov	x1, x0
  4065fc:	ldr	x3, [sp, #104]
  406600:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  406604:	ldr	w1, [x1]
  406608:	add	x2, x2, #0x4c0
  40660c:	mov	w0, #0x0                   	// #0
  406610:	bl	401b30 <error@plt>
  406614:	b	406594 <ferror@plt+0x46a4>
  406618:	stp	x29, x30, [sp, #-48]!
  40661c:	mov	x29, sp
  406620:	stp	x19, x20, [sp, #16]
  406624:	mov	x19, x0
  406628:	mov	w20, w1
  40662c:	ldr	x0, [x0, #8]
  406630:	str	x21, [sp, #32]
  406634:	mov	x21, x2
  406638:	bl	4063a0 <ferror@plt+0x44b0>
  40663c:	cmp	x0, #0x0
  406640:	mov	x2, x21
  406644:	mov	w1, w20
  406648:	mov	x0, x19
  40664c:	cset	w3, eq  // eq = none
  406650:	ldp	x19, x20, [sp, #16]
  406654:	ldr	x21, [sp, #32]
  406658:	ldp	x29, x30, [sp], #48
  40665c:	b	4051e0 <ferror@plt+0x32f0>
  406660:	stp	x29, x30, [sp, #-48]!
  406664:	mov	x29, sp
  406668:	stp	x19, x20, [sp, #16]
  40666c:	mov	x19, x0
  406670:	mov	w20, w1
  406674:	ldr	x0, [x0, #8]
  406678:	str	x21, [sp, #32]
  40667c:	mov	x21, x2
  406680:	bl	4063a0 <ferror@plt+0x44b0>
  406684:	cbz	x0, 4066a8 <ferror@plt+0x47b8>
  406688:	mov	x2, x21
  40668c:	mov	w1, w20
  406690:	ldr	x3, [x0, #16]
  406694:	mov	x0, x19
  406698:	ldp	x19, x20, [sp, #16]
  40669c:	ldr	x21, [sp, #32]
  4066a0:	ldp	x29, x30, [sp], #48
  4066a4:	b	4045c8 <ferror@plt+0x26d8>
  4066a8:	mov	x0, x19
  4066ac:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  4066b0:	ldp	x19, x20, [sp, #16]
  4066b4:	add	x1, x1, #0x4f8
  4066b8:	ldr	x21, [sp, #32]
  4066bc:	ldp	x29, x30, [sp], #48
  4066c0:	b	4042f0 <ferror@plt+0x2400>
  4066c4:	nop
  4066c8:	stp	x29, x30, [sp, #-48]!
  4066cc:	mov	x29, sp
  4066d0:	stp	x19, x20, [sp, #16]
  4066d4:	mov	x19, x0
  4066d8:	mov	w20, w1
  4066dc:	ldr	x0, [x0, #8]
  4066e0:	str	x21, [sp, #32]
  4066e4:	mov	x21, x2
  4066e8:	bl	4063a0 <ferror@plt+0x44b0>
  4066ec:	cbz	x0, 406710 <ferror@plt+0x4820>
  4066f0:	mov	x2, x21
  4066f4:	mov	w1, w20
  4066f8:	ldr	x3, [x0, #24]
  4066fc:	mov	x0, x19
  406700:	ldp	x19, x20, [sp, #16]
  406704:	ldr	x21, [sp, #32]
  406708:	ldp	x29, x30, [sp], #48
  40670c:	b	4045c8 <ferror@plt+0x26d8>
  406710:	mov	x0, x19
  406714:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406718:	ldp	x19, x20, [sp, #16]
  40671c:	add	x1, x1, #0x510
  406720:	ldr	x21, [sp, #32]
  406724:	ldp	x29, x30, [sp], #48
  406728:	b	4042f0 <ferror@plt+0x2400>
  40672c:	nop
  406730:	stp	x29, x30, [sp, #-48]!
  406734:	mov	x29, sp
  406738:	stp	x19, x20, [sp, #16]
  40673c:	mov	x19, x0
  406740:	mov	w20, w1
  406744:	ldr	x0, [x0, #8]
  406748:	str	x21, [sp, #32]
  40674c:	mov	x21, x2
  406750:	bl	4063a0 <ferror@plt+0x44b0>
  406754:	cbz	x0, 406778 <ferror@plt+0x4888>
  406758:	mov	x2, x21
  40675c:	mov	w1, w20
  406760:	ldr	x3, [x0, #32]
  406764:	mov	x0, x19
  406768:	ldp	x19, x20, [sp, #16]
  40676c:	ldr	x21, [sp, #32]
  406770:	ldp	x29, x30, [sp], #48
  406774:	b	4045c8 <ferror@plt+0x26d8>
  406778:	mov	x0, x19
  40677c:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406780:	ldp	x19, x20, [sp, #16]
  406784:	add	x1, x1, #0x528
  406788:	ldr	x21, [sp, #32]
  40678c:	ldp	x29, x30, [sp], #48
  406790:	b	4042f0 <ferror@plt+0x2400>
  406794:	nop
  406798:	stp	x29, x30, [sp, #-48]!
  40679c:	mov	x29, sp
  4067a0:	stp	x19, x20, [sp, #16]
  4067a4:	mov	x19, x0
  4067a8:	mov	w20, w1
  4067ac:	ldr	x0, [x0, #8]
  4067b0:	str	x21, [sp, #32]
  4067b4:	mov	x21, x2
  4067b8:	bl	4063a0 <ferror@plt+0x44b0>
  4067bc:	cbz	x0, 4067e0 <ferror@plt+0x48f0>
  4067c0:	mov	x2, x21
  4067c4:	mov	w1, w20
  4067c8:	ldr	x21, [sp, #32]
  4067cc:	ldr	x3, [x0, #40]
  4067d0:	mov	x0, x19
  4067d4:	ldp	x19, x20, [sp, #16]
  4067d8:	ldp	x29, x30, [sp], #48
  4067dc:	b	4045c8 <ferror@plt+0x26d8>
  4067e0:	mov	x0, x19
  4067e4:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  4067e8:	ldp	x19, x20, [sp, #16]
  4067ec:	add	x1, x1, #0x540
  4067f0:	ldr	x21, [sp, #32]
  4067f4:	ldp	x29, x30, [sp], #48
  4067f8:	b	4042f0 <ferror@plt+0x2400>
  4067fc:	nop
  406800:	stp	x29, x30, [sp, #-48]!
  406804:	mov	x29, sp
  406808:	stp	x19, x20, [sp, #16]
  40680c:	mov	x19, x0
  406810:	mov	w20, w1
  406814:	ldr	x0, [x0, #8]
  406818:	str	x21, [sp, #32]
  40681c:	mov	x21, x2
  406820:	bl	4063a0 <ferror@plt+0x44b0>
  406824:	cbz	x0, 406848 <ferror@plt+0x4958>
  406828:	mov	x2, x21
  40682c:	mov	w1, w20
  406830:	ldr	x21, [sp, #32]
  406834:	ldr	x3, [x0, #48]
  406838:	mov	x0, x19
  40683c:	ldp	x19, x20, [sp, #16]
  406840:	ldp	x29, x30, [sp], #48
  406844:	b	4045c8 <ferror@plt+0x26d8>
  406848:	mov	x0, x19
  40684c:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406850:	ldp	x19, x20, [sp, #16]
  406854:	add	x1, x1, #0x558
  406858:	ldr	x21, [sp, #32]
  40685c:	ldp	x29, x30, [sp], #48
  406860:	b	4042f0 <ferror@plt+0x2400>
  406864:	nop
  406868:	stp	x29, x30, [sp, #-48]!
  40686c:	mov	x29, sp
  406870:	stp	x19, x20, [sp, #16]
  406874:	mov	x19, x0
  406878:	mov	w20, w1
  40687c:	ldr	x0, [x0, #8]
  406880:	str	x21, [sp, #32]
  406884:	mov	x21, x2
  406888:	bl	4063a0 <ferror@plt+0x44b0>
  40688c:	cbz	x0, 4068b0 <ferror@plt+0x49c0>
  406890:	mov	x2, x21
  406894:	mov	w1, w20
  406898:	ldr	x21, [sp, #32]
  40689c:	ldr	x3, [x0, #56]
  4068a0:	mov	x0, x19
  4068a4:	ldp	x19, x20, [sp, #16]
  4068a8:	ldp	x29, x30, [sp], #48
  4068ac:	b	4045c8 <ferror@plt+0x26d8>
  4068b0:	mov	x0, x19
  4068b4:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  4068b8:	ldp	x19, x20, [sp, #16]
  4068bc:	add	x1, x1, #0x570
  4068c0:	ldr	x21, [sp, #32]
  4068c4:	ldp	x29, x30, [sp], #48
  4068c8:	b	4042f0 <ferror@plt+0x2400>
  4068cc:	nop
  4068d0:	stp	x29, x30, [sp, #-48]!
  4068d4:	mov	x29, sp
  4068d8:	stp	x19, x20, [sp, #16]
  4068dc:	mov	x19, x0
  4068e0:	mov	w20, w1
  4068e4:	ldr	x0, [x0, #8]
  4068e8:	str	x21, [sp, #32]
  4068ec:	mov	x21, x2
  4068f0:	bl	4063a0 <ferror@plt+0x44b0>
  4068f4:	cbz	x0, 406918 <ferror@plt+0x4a28>
  4068f8:	mov	x2, x21
  4068fc:	mov	w1, w20
  406900:	ldr	x21, [sp, #32]
  406904:	ldr	x3, [x0, #64]
  406908:	mov	x0, x19
  40690c:	ldp	x19, x20, [sp, #16]
  406910:	ldp	x29, x30, [sp], #48
  406914:	b	4045c8 <ferror@plt+0x26d8>
  406918:	mov	x0, x19
  40691c:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406920:	ldp	x19, x20, [sp, #16]
  406924:	add	x1, x1, #0x588
  406928:	ldr	x21, [sp, #32]
  40692c:	ldp	x29, x30, [sp], #48
  406930:	b	4042f0 <ferror@plt+0x2400>
  406934:	nop
  406938:	stp	x29, x30, [sp, #-48]!
  40693c:	mov	x29, sp
  406940:	stp	x19, x20, [sp, #16]
  406944:	mov	x19, x0
  406948:	mov	w20, w1
  40694c:	ldr	x0, [x0, #8]
  406950:	str	x21, [sp, #32]
  406954:	mov	x21, x2
  406958:	bl	4063a0 <ferror@plt+0x44b0>
  40695c:	cbz	x0, 406980 <ferror@plt+0x4a90>
  406960:	mov	x2, x21
  406964:	mov	w1, w20
  406968:	ldr	x21, [sp, #32]
  40696c:	ldr	x3, [x0, #72]
  406970:	mov	x0, x19
  406974:	ldp	x19, x20, [sp, #16]
  406978:	ldp	x29, x30, [sp], #48
  40697c:	b	4045c8 <ferror@plt+0x26d8>
  406980:	mov	x0, x19
  406984:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406988:	ldp	x19, x20, [sp, #16]
  40698c:	add	x1, x1, #0x5a0
  406990:	ldr	x21, [sp, #32]
  406994:	ldp	x29, x30, [sp], #48
  406998:	b	4042f0 <ferror@plt+0x2400>
  40699c:	nop
  4069a0:	stp	x29, x30, [sp, #-48]!
  4069a4:	mov	x29, sp
  4069a8:	stp	x19, x20, [sp, #16]
  4069ac:	mov	x19, x0
  4069b0:	mov	w20, w1
  4069b4:	ldr	x0, [x0, #8]
  4069b8:	str	x21, [sp, #32]
  4069bc:	mov	x21, x2
  4069c0:	bl	4063a0 <ferror@plt+0x44b0>
  4069c4:	cbz	x0, 4069e8 <ferror@plt+0x4af8>
  4069c8:	mov	x2, x21
  4069cc:	mov	w1, w20
  4069d0:	ldr	x21, [sp, #32]
  4069d4:	ldr	x3, [x0, #80]
  4069d8:	mov	x0, x19
  4069dc:	ldp	x19, x20, [sp, #16]
  4069e0:	ldp	x29, x30, [sp], #48
  4069e4:	b	4045c8 <ferror@plt+0x26d8>
  4069e8:	mov	x0, x19
  4069ec:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  4069f0:	ldp	x19, x20, [sp, #16]
  4069f4:	add	x1, x1, #0x5b8
  4069f8:	ldr	x21, [sp, #32]
  4069fc:	ldp	x29, x30, [sp], #48
  406a00:	b	4042f0 <ferror@plt+0x2400>
  406a04:	nop
  406a08:	stp	x29, x30, [sp, #-48]!
  406a0c:	mov	x29, sp
  406a10:	stp	x19, x20, [sp, #16]
  406a14:	mov	x19, x0
  406a18:	mov	w20, w1
  406a1c:	ldr	x0, [x0, #8]
  406a20:	str	x21, [sp, #32]
  406a24:	mov	x21, x2
  406a28:	bl	4063a0 <ferror@plt+0x44b0>
  406a2c:	cbz	x0, 406a50 <ferror@plt+0x4b60>
  406a30:	mov	x2, x21
  406a34:	mov	w1, w20
  406a38:	ldr	x21, [sp, #32]
  406a3c:	ldr	x3, [x0, #88]
  406a40:	mov	x0, x19
  406a44:	ldp	x19, x20, [sp, #16]
  406a48:	ldp	x29, x30, [sp], #48
  406a4c:	b	4045c8 <ferror@plt+0x26d8>
  406a50:	mov	x0, x19
  406a54:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406a58:	ldp	x19, x20, [sp, #16]
  406a5c:	add	x1, x1, #0x5d0
  406a60:	ldr	x21, [sp, #32]
  406a64:	ldp	x29, x30, [sp], #48
  406a68:	b	4042f0 <ferror@plt+0x2400>
  406a6c:	nop
  406a70:	stp	x29, x30, [sp, #-48]!
  406a74:	mov	x29, sp
  406a78:	stp	x19, x20, [sp, #16]
  406a7c:	mov	x19, x0
  406a80:	mov	w20, w1
  406a84:	ldr	x0, [x0, #8]
  406a88:	str	x21, [sp, #32]
  406a8c:	mov	x21, x2
  406a90:	bl	4063a0 <ferror@plt+0x44b0>
  406a94:	cbz	x0, 406ab8 <ferror@plt+0x4bc8>
  406a98:	mov	x2, x21
  406a9c:	mov	w1, w20
  406aa0:	ldr	x21, [sp, #32]
  406aa4:	ldr	x3, [x0, #96]
  406aa8:	mov	x0, x19
  406aac:	ldp	x19, x20, [sp, #16]
  406ab0:	ldp	x29, x30, [sp], #48
  406ab4:	b	4045c8 <ferror@plt+0x26d8>
  406ab8:	mov	x0, x19
  406abc:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406ac0:	ldp	x19, x20, [sp, #16]
  406ac4:	add	x1, x1, #0x5e8
  406ac8:	ldr	x21, [sp, #32]
  406acc:	ldp	x29, x30, [sp], #48
  406ad0:	b	4042f0 <ferror@plt+0x2400>
  406ad4:	nop
  406ad8:	stp	x29, x30, [sp, #-48]!
  406adc:	mov	x29, sp
  406ae0:	stp	x19, x20, [sp, #16]
  406ae4:	mov	x19, x0
  406ae8:	mov	w20, w1
  406aec:	ldr	x0, [x0, #8]
  406af0:	str	x21, [sp, #32]
  406af4:	mov	x21, x2
  406af8:	bl	4063a0 <ferror@plt+0x44b0>
  406afc:	cbz	x0, 406b20 <ferror@plt+0x4c30>
  406b00:	mov	x2, x21
  406b04:	mov	w1, w20
  406b08:	ldr	x21, [sp, #32]
  406b0c:	ldr	x3, [x0, #104]
  406b10:	mov	x0, x19
  406b14:	ldp	x19, x20, [sp, #16]
  406b18:	ldp	x29, x30, [sp], #48
  406b1c:	b	4045c8 <ferror@plt+0x26d8>
  406b20:	mov	x0, x19
  406b24:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406b28:	ldp	x19, x20, [sp, #16]
  406b2c:	add	x1, x1, #0x600
  406b30:	ldr	x21, [sp, #32]
  406b34:	ldp	x29, x30, [sp], #48
  406b38:	b	4042f0 <ferror@plt+0x2400>
  406b3c:	nop
  406b40:	stp	x29, x30, [sp, #-48]!
  406b44:	mov	x29, sp
  406b48:	stp	x19, x20, [sp, #16]
  406b4c:	mov	x19, x0
  406b50:	mov	w20, w1
  406b54:	ldr	x0, [x0, #8]
  406b58:	str	x21, [sp, #32]
  406b5c:	mov	x21, x2
  406b60:	bl	4063a0 <ferror@plt+0x44b0>
  406b64:	cbz	x0, 406b88 <ferror@plt+0x4c98>
  406b68:	mov	x2, x21
  406b6c:	mov	w1, w20
  406b70:	ldr	x21, [sp, #32]
  406b74:	ldr	x3, [x0, #112]
  406b78:	mov	x0, x19
  406b7c:	ldp	x19, x20, [sp, #16]
  406b80:	ldp	x29, x30, [sp], #48
  406b84:	b	4045c8 <ferror@plt+0x26d8>
  406b88:	mov	x0, x19
  406b8c:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406b90:	ldp	x19, x20, [sp, #16]
  406b94:	add	x1, x1, #0x618
  406b98:	ldr	x21, [sp, #32]
  406b9c:	ldp	x29, x30, [sp], #48
  406ba0:	b	4042f0 <ferror@plt+0x2400>
  406ba4:	nop
  406ba8:	stp	x29, x30, [sp, #-48]!
  406bac:	mov	x29, sp
  406bb0:	stp	x19, x20, [sp, #16]
  406bb4:	mov	x19, x0
  406bb8:	mov	w20, w1
  406bbc:	ldr	x0, [x0, #8]
  406bc0:	str	x21, [sp, #32]
  406bc4:	mov	x21, x2
  406bc8:	bl	4063a0 <ferror@plt+0x44b0>
  406bcc:	cbz	x0, 406bf0 <ferror@plt+0x4d00>
  406bd0:	mov	x2, x21
  406bd4:	mov	w1, w20
  406bd8:	ldr	x21, [sp, #32]
  406bdc:	ldr	x3, [x0, #120]
  406be0:	mov	x0, x19
  406be4:	ldp	x19, x20, [sp, #16]
  406be8:	ldp	x29, x30, [sp], #48
  406bec:	b	4045c8 <ferror@plt+0x26d8>
  406bf0:	mov	x0, x19
  406bf4:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406bf8:	ldp	x19, x20, [sp, #16]
  406bfc:	add	x1, x1, #0x638
  406c00:	ldr	x21, [sp, #32]
  406c04:	ldp	x29, x30, [sp], #48
  406c08:	b	4042f0 <ferror@plt+0x2400>
  406c0c:	nop
  406c10:	stp	x29, x30, [sp, #-48]!
  406c14:	mov	x29, sp
  406c18:	stp	x19, x20, [sp, #16]
  406c1c:	mov	x19, x0
  406c20:	mov	w20, w1
  406c24:	ldr	x0, [x0, #8]
  406c28:	str	x21, [sp, #32]
  406c2c:	mov	x21, x2
  406c30:	bl	4063a0 <ferror@plt+0x44b0>
  406c34:	cbz	x0, 406c58 <ferror@plt+0x4d68>
  406c38:	mov	x2, x21
  406c3c:	mov	w1, w20
  406c40:	ldr	x21, [sp, #32]
  406c44:	ldr	x3, [x0, #128]
  406c48:	mov	x0, x19
  406c4c:	ldp	x19, x20, [sp, #16]
  406c50:	ldp	x29, x30, [sp], #48
  406c54:	b	4045c8 <ferror@plt+0x26d8>
  406c58:	mov	x0, x19
  406c5c:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406c60:	ldp	x19, x20, [sp, #16]
  406c64:	add	x1, x1, #0x658
  406c68:	ldr	x21, [sp, #32]
  406c6c:	ldp	x29, x30, [sp], #48
  406c70:	b	4042f0 <ferror@plt+0x2400>
  406c74:	nop
  406c78:	stp	x29, x30, [sp, #-48]!
  406c7c:	mov	x29, sp
  406c80:	stp	x19, x20, [sp, #16]
  406c84:	mov	x19, x0
  406c88:	mov	w20, w1
  406c8c:	ldr	x0, [x0, #8]
  406c90:	str	x21, [sp, #32]
  406c94:	mov	x21, x2
  406c98:	bl	4063a0 <ferror@plt+0x44b0>
  406c9c:	cbz	x0, 406cc0 <ferror@plt+0x4dd0>
  406ca0:	mov	x2, x21
  406ca4:	mov	w1, w20
  406ca8:	ldr	x21, [sp, #32]
  406cac:	ldr	x3, [x0, #136]
  406cb0:	mov	x0, x19
  406cb4:	ldp	x19, x20, [sp, #16]
  406cb8:	ldp	x29, x30, [sp], #48
  406cbc:	b	4045c8 <ferror@plt+0x26d8>
  406cc0:	mov	x0, x19
  406cc4:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406cc8:	ldp	x19, x20, [sp, #16]
  406ccc:	add	x1, x1, #0x670
  406cd0:	ldr	x21, [sp, #32]
  406cd4:	ldp	x29, x30, [sp], #48
  406cd8:	b	4042f0 <ferror@plt+0x2400>
  406cdc:	nop
  406ce0:	stp	x29, x30, [sp, #-48]!
  406ce4:	mov	x29, sp
  406ce8:	stp	x19, x20, [sp, #16]
  406cec:	mov	x19, x0
  406cf0:	mov	w20, w1
  406cf4:	ldr	x0, [x0, #8]
  406cf8:	str	x21, [sp, #32]
  406cfc:	mov	x21, x2
  406d00:	bl	4063a0 <ferror@plt+0x44b0>
  406d04:	cbz	x0, 406d28 <ferror@plt+0x4e38>
  406d08:	mov	x2, x21
  406d0c:	mov	w1, w20
  406d10:	ldr	x21, [sp, #32]
  406d14:	ldr	x3, [x0, #144]
  406d18:	mov	x0, x19
  406d1c:	ldp	x19, x20, [sp, #16]
  406d20:	ldp	x29, x30, [sp], #48
  406d24:	b	4045c8 <ferror@plt+0x26d8>
  406d28:	mov	x0, x19
  406d2c:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406d30:	ldp	x19, x20, [sp, #16]
  406d34:	add	x1, x1, #0x690
  406d38:	ldr	x21, [sp, #32]
  406d3c:	ldp	x29, x30, [sp], #48
  406d40:	b	4042f0 <ferror@plt+0x2400>
  406d44:	nop
  406d48:	stp	x29, x30, [sp, #-48]!
  406d4c:	mov	x29, sp
  406d50:	stp	x19, x20, [sp, #16]
  406d54:	mov	x19, x0
  406d58:	mov	w20, w1
  406d5c:	ldr	x0, [x0, #8]
  406d60:	str	x21, [sp, #32]
  406d64:	mov	x21, x2
  406d68:	bl	4063a0 <ferror@plt+0x44b0>
  406d6c:	cbz	x0, 406d90 <ferror@plt+0x4ea0>
  406d70:	mov	x2, x21
  406d74:	mov	w1, w20
  406d78:	ldr	x21, [sp, #32]
  406d7c:	ldr	x3, [x0, #152]
  406d80:	mov	x0, x19
  406d84:	ldp	x19, x20, [sp, #16]
  406d88:	ldp	x29, x30, [sp], #48
  406d8c:	b	4045c8 <ferror@plt+0x26d8>
  406d90:	mov	x0, x19
  406d94:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406d98:	ldp	x19, x20, [sp, #16]
  406d9c:	add	x1, x1, #0x6b0
  406da0:	ldr	x21, [sp, #32]
  406da4:	ldp	x29, x30, [sp], #48
  406da8:	b	4042f0 <ferror@plt+0x2400>
  406dac:	nop
  406db0:	stp	x29, x30, [sp, #-48]!
  406db4:	mov	x29, sp
  406db8:	stp	x19, x20, [sp, #16]
  406dbc:	mov	x19, x0
  406dc0:	mov	w20, w1
  406dc4:	ldr	x0, [x0, #8]
  406dc8:	str	x21, [sp, #32]
  406dcc:	mov	x21, x2
  406dd0:	bl	4063a0 <ferror@plt+0x44b0>
  406dd4:	cbz	x0, 406df8 <ferror@plt+0x4f08>
  406dd8:	mov	x2, x21
  406ddc:	mov	w1, w20
  406de0:	ldr	x21, [sp, #32]
  406de4:	ldr	x3, [x0, #160]
  406de8:	mov	x0, x19
  406dec:	ldp	x19, x20, [sp, #16]
  406df0:	ldp	x29, x30, [sp], #48
  406df4:	b	4045c8 <ferror@plt+0x26d8>
  406df8:	mov	x0, x19
  406dfc:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406e00:	ldp	x19, x20, [sp, #16]
  406e04:	add	x1, x1, #0x6d0
  406e08:	ldr	x21, [sp, #32]
  406e0c:	ldp	x29, x30, [sp], #48
  406e10:	b	4042f0 <ferror@plt+0x2400>
  406e14:	nop
  406e18:	stp	x29, x30, [sp, #-48]!
  406e1c:	mov	x29, sp
  406e20:	stp	x19, x20, [sp, #16]
  406e24:	mov	x19, x0
  406e28:	mov	w20, w1
  406e2c:	ldr	x0, [x0, #8]
  406e30:	str	x21, [sp, #32]
  406e34:	mov	x21, x2
  406e38:	bl	4063a0 <ferror@plt+0x44b0>
  406e3c:	cbz	x0, 406e60 <ferror@plt+0x4f70>
  406e40:	mov	x2, x21
  406e44:	mov	w1, w20
  406e48:	ldr	x21, [sp, #32]
  406e4c:	ldr	x3, [x0, #168]
  406e50:	mov	x0, x19
  406e54:	ldp	x19, x20, [sp, #16]
  406e58:	ldp	x29, x30, [sp], #48
  406e5c:	b	4045c8 <ferror@plt+0x26d8>
  406e60:	mov	x0, x19
  406e64:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406e68:	ldp	x19, x20, [sp, #16]
  406e6c:	add	x1, x1, #0x6f0
  406e70:	ldr	x21, [sp, #32]
  406e74:	ldp	x29, x30, [sp], #48
  406e78:	b	4042f0 <ferror@plt+0x2400>
  406e7c:	nop
  406e80:	stp	x29, x30, [sp, #-48]!
  406e84:	mov	x29, sp
  406e88:	stp	x19, x20, [sp, #16]
  406e8c:	mov	x19, x0
  406e90:	mov	w20, w1
  406e94:	ldr	x0, [x0, #8]
  406e98:	str	x21, [sp, #32]
  406e9c:	mov	x21, x2
  406ea0:	bl	4063a0 <ferror@plt+0x44b0>
  406ea4:	cbz	x0, 406ec8 <ferror@plt+0x4fd8>
  406ea8:	mov	x2, x21
  406eac:	mov	w1, w20
  406eb0:	ldr	x21, [sp, #32]
  406eb4:	ldr	x3, [x0, #176]
  406eb8:	mov	x0, x19
  406ebc:	ldp	x19, x20, [sp, #16]
  406ec0:	ldp	x29, x30, [sp], #48
  406ec4:	b	4045c8 <ferror@plt+0x26d8>
  406ec8:	mov	x0, x19
  406ecc:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406ed0:	ldp	x19, x20, [sp, #16]
  406ed4:	add	x1, x1, #0x710
  406ed8:	ldr	x21, [sp, #32]
  406edc:	ldp	x29, x30, [sp], #48
  406ee0:	b	4042f0 <ferror@plt+0x2400>
  406ee4:	nop
  406ee8:	stp	x29, x30, [sp, #-48]!
  406eec:	mov	x29, sp
  406ef0:	stp	x19, x20, [sp, #16]
  406ef4:	mov	x19, x0
  406ef8:	mov	w20, w1
  406efc:	ldr	x0, [x0, #8]
  406f00:	str	x21, [sp, #32]
  406f04:	mov	x21, x2
  406f08:	bl	4063a0 <ferror@plt+0x44b0>
  406f0c:	cbz	x0, 406f30 <ferror@plt+0x5040>
  406f10:	mov	x2, x21
  406f14:	mov	w1, w20
  406f18:	ldr	x21, [sp, #32]
  406f1c:	ldr	x3, [x0, #184]
  406f20:	mov	x0, x19
  406f24:	ldp	x19, x20, [sp, #16]
  406f28:	ldp	x29, x30, [sp], #48
  406f2c:	b	4045c8 <ferror@plt+0x26d8>
  406f30:	mov	x0, x19
  406f34:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406f38:	ldp	x19, x20, [sp, #16]
  406f3c:	add	x1, x1, #0x730
  406f40:	ldr	x21, [sp, #32]
  406f44:	ldp	x29, x30, [sp], #48
  406f48:	b	4042f0 <ferror@plt+0x2400>
  406f4c:	nop
  406f50:	stp	x29, x30, [sp, #-48]!
  406f54:	mov	x29, sp
  406f58:	stp	x19, x20, [sp, #16]
  406f5c:	mov	x19, x0
  406f60:	mov	w20, w1
  406f64:	ldr	x0, [x0, #8]
  406f68:	str	x21, [sp, #32]
  406f6c:	mov	x21, x2
  406f70:	bl	4063a0 <ferror@plt+0x44b0>
  406f74:	cbz	x0, 406f98 <ferror@plt+0x50a8>
  406f78:	mov	x2, x21
  406f7c:	mov	w1, w20
  406f80:	ldr	x21, [sp, #32]
  406f84:	ldr	x3, [x0, #192]
  406f88:	mov	x0, x19
  406f8c:	ldp	x19, x20, [sp, #16]
  406f90:	ldp	x29, x30, [sp], #48
  406f94:	b	4045c8 <ferror@plt+0x26d8>
  406f98:	mov	x0, x19
  406f9c:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  406fa0:	ldp	x19, x20, [sp, #16]
  406fa4:	add	x1, x1, #0x750
  406fa8:	ldr	x21, [sp, #32]
  406fac:	ldp	x29, x30, [sp], #48
  406fb0:	b	4042f0 <ferror@plt+0x2400>
  406fb4:	nop
  406fb8:	stp	x29, x30, [sp, #-48]!
  406fbc:	mov	x29, sp
  406fc0:	stp	x19, x20, [sp, #16]
  406fc4:	mov	x19, x0
  406fc8:	mov	w20, w1
  406fcc:	str	x21, [sp, #32]
  406fd0:	mov	x21, x2
  406fd4:	ldr	x2, [x0, #8]
  406fd8:	mov	w1, #0x8927                	// #35111
  406fdc:	ldr	w0, [x0, #16]
  406fe0:	bl	4097c0 <argp_parse@@Base+0x1818>
  406fe4:	tbnz	w0, #31, 407060 <ferror@plt+0x5170>
  406fe8:	adrp	x0, 426000 <argp_error@@Base+0x193a0>
  406fec:	add	x3, x0, #0xe20
  406ff0:	ldr	x1, [x19, #8]
  406ff4:	ldr	x0, [x0, #3616]
  406ff8:	ldrh	w5, [x1, #16]
  406ffc:	cbnz	x0, 40700c <ferror@plt+0x511c>
  407000:	b	407040 <ferror@plt+0x5150>
  407004:	ldr	x4, [x3, #32]!
  407008:	cbz	x4, 407040 <ferror@plt+0x5150>
  40700c:	ldr	w4, [x3, #16]
  407010:	cmp	w5, w4
  407014:	b.ne	407004 <ferror@plt+0x5114>  // b.any
  407018:	ldr	x0, [x3, #24]
  40701c:	mov	x2, x21
  407020:	mov	w1, w20
  407024:	cmp	x0, #0x0
  407028:	mov	x0, x19
  40702c:	ldp	x19, x20, [sp, #16]
  407030:	cset	w3, eq  // eq = none
  407034:	ldr	x21, [sp, #32]
  407038:	ldp	x29, x30, [sp], #48
  40703c:	b	4051e0 <ferror@plt+0x32f0>
  407040:	mov	x2, x21
  407044:	mov	w1, w20
  407048:	mov	x0, x19
  40704c:	mov	w3, #0x1                   	// #1
  407050:	ldp	x19, x20, [sp, #16]
  407054:	ldr	x21, [sp, #32]
  407058:	ldp	x29, x30, [sp], #48
  40705c:	b	4051e0 <ferror@plt+0x32f0>
  407060:	mov	x2, x21
  407064:	mov	w1, w20
  407068:	mov	x0, x19
  40706c:	mov	w3, #0x1                   	// #1
  407070:	bl	4051e0 <ferror@plt+0x32f0>
  407074:	b	406fe8 <ferror@plt+0x50f8>
  407078:	stp	x29, x30, [sp, #-32]!
  40707c:	mov	w1, #0x8927                	// #35111
  407080:	mov	x29, sp
  407084:	ldr	x2, [x0, #8]
  407088:	str	x19, [sp, #16]
  40708c:	mov	x19, x0
  407090:	ldr	w0, [x0, #16]
  407094:	bl	4097c0 <argp_parse@@Base+0x1818>
  407098:	tbnz	w0, #31, 407104 <ferror@plt+0x5214>
  40709c:	adrp	x0, 426000 <argp_error@@Base+0x193a0>
  4070a0:	add	x2, x0, #0xe20
  4070a4:	ldr	x1, [x19, #8]
  4070a8:	ldr	x0, [x0, #3616]
  4070ac:	ldrh	w4, [x1, #16]
  4070b0:	cbnz	x0, 4070c0 <ferror@plt+0x51d0>
  4070b4:	b	4070ec <ferror@plt+0x51fc>
  4070b8:	ldr	x3, [x2, #32]!
  4070bc:	cbz	x3, 4070ec <ferror@plt+0x51fc>
  4070c0:	ldr	w3, [x2, #16]
  4070c4:	cmp	w4, w3
  4070c8:	b.ne	4070b8 <ferror@plt+0x51c8>  // b.any
  4070cc:	ldr	x2, [x2, #24]
  4070d0:	cbz	x2, 4070ec <ferror@plt+0x51fc>
  4070d4:	mov	x0, x19
  4070d8:	add	x1, x1, #0x12
  4070dc:	ldr	x19, [sp, #16]
  4070e0:	mov	x16, x2
  4070e4:	ldp	x29, x30, [sp], #32
  4070e8:	br	x16
  4070ec:	mov	x0, x19
  4070f0:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  4070f4:	ldr	x19, [sp, #16]
  4070f8:	add	x1, x1, #0x798
  4070fc:	ldp	x29, x30, [sp], #32
  407100:	b	4042f0 <ferror@plt+0x2400>
  407104:	bl	401ea0 <__errno_location@plt>
  407108:	ldr	w1, [x0]
  40710c:	ldr	x3, [x19, #8]
  407110:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  407114:	ldr	x19, [sp, #16]
  407118:	add	x2, x2, #0x770
  40711c:	ldp	x29, x30, [sp], #32
  407120:	mov	w0, #0x1                   	// #1
  407124:	b	401b30 <error@plt>
  407128:	stp	x29, x30, [sp, #-48]!
  40712c:	mov	x29, sp
  407130:	stp	x19, x20, [sp, #16]
  407134:	mov	x19, x0
  407138:	mov	w20, w1
  40713c:	str	x21, [sp, #32]
  407140:	mov	x21, x2
  407144:	ldr	x2, [x0, #8]
  407148:	mov	w1, #0x8927                	// #35111
  40714c:	ldr	w0, [x0, #16]
  407150:	bl	4097c0 <argp_parse@@Base+0x1818>
  407154:	mov	x2, x21
  407158:	mov	w1, w20
  40715c:	tbnz	w0, #31, 407178 <ferror@plt+0x5288>
  407160:	mov	x0, x19
  407164:	mov	w3, #0x0                   	// #0
  407168:	ldp	x19, x20, [sp, #16]
  40716c:	ldr	x21, [sp, #32]
  407170:	ldp	x29, x30, [sp], #48
  407174:	b	4051e0 <ferror@plt+0x32f0>
  407178:	mov	x0, x19
  40717c:	mov	w3, #0x1                   	// #1
  407180:	ldp	x19, x20, [sp, #16]
  407184:	ldr	x21, [sp, #32]
  407188:	ldp	x29, x30, [sp], #48
  40718c:	b	4051e0 <ferror@plt+0x32f0>
  407190:	stp	x29, x30, [sp, #-32]!
  407194:	mov	w1, #0x8927                	// #35111
  407198:	mov	x29, sp
  40719c:	ldr	x2, [x0, #8]
  4071a0:	str	x19, [sp, #16]
  4071a4:	mov	x19, x0
  4071a8:	ldr	w0, [x0, #16]
  4071ac:	bl	4097c0 <argp_parse@@Base+0x1818>
  4071b0:	tbnz	w0, #31, 4071f8 <ferror@plt+0x5308>
  4071b4:	adrp	x0, 426000 <argp_error@@Base+0x193a0>
  4071b8:	add	x1, x0, #0xe20
  4071bc:	ldr	x2, [x19, #8]
  4071c0:	ldr	x0, [x0, #3616]
  4071c4:	ldrh	w3, [x2, #16]
  4071c8:	cbnz	x0, 4071d8 <ferror@plt+0x52e8>
  4071cc:	b	40721c <ferror@plt+0x532c>
  4071d0:	ldr	x2, [x1, #32]!
  4071d4:	cbz	x2, 40721c <ferror@plt+0x532c>
  4071d8:	ldr	w2, [x1, #16]
  4071dc:	cmp	w3, w2
  4071e0:	b.ne	4071d0 <ferror@plt+0x52e0>  // b.any
  4071e4:	mov	x0, x19
  4071e8:	ldr	x19, [sp, #16]
  4071ec:	ldp	x29, x30, [sp], #32
  4071f0:	ldr	x1, [x1, #8]
  4071f4:	b	4042f0 <ferror@plt+0x2400>
  4071f8:	bl	401ea0 <__errno_location@plt>
  4071fc:	ldr	w1, [x0]
  407200:	ldr	x3, [x19, #8]
  407204:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  407208:	ldr	x19, [sp, #16]
  40720c:	add	x2, x2, #0x770
  407210:	ldp	x29, x30, [sp], #32
  407214:	mov	w0, #0x1                   	// #1
  407218:	b	401b30 <error@plt>
  40721c:	mov	x0, x19
  407220:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  407224:	ldr	x19, [sp, #16]
  407228:	add	x1, x1, #0x7b0
  40722c:	ldp	x29, x30, [sp], #32
  407230:	b	4042f0 <ferror@plt+0x2400>
  407234:	nop
  407238:	stp	x29, x30, [sp, #-48]!
  40723c:	mov	x29, sp
  407240:	stp	x19, x20, [sp, #16]
  407244:	mov	x19, x0
  407248:	mov	w20, w1
  40724c:	str	x21, [sp, #32]
  407250:	mov	x21, x2
  407254:	ldr	x2, [x0, #8]
  407258:	mov	w1, #0x891d                	// #35101
  40725c:	ldr	w0, [x0, #16]
  407260:	bl	4097c0 <argp_parse@@Base+0x1818>
  407264:	mov	x2, x21
  407268:	mov	w1, w20
  40726c:	tbnz	w0, #31, 407288 <ferror@plt+0x5398>
  407270:	mov	x0, x19
  407274:	mov	w3, #0x0                   	// #0
  407278:	ldp	x19, x20, [sp, #16]
  40727c:	ldr	x21, [sp, #32]
  407280:	ldp	x29, x30, [sp], #48
  407284:	b	4051e0 <ferror@plt+0x32f0>
  407288:	mov	x0, x19
  40728c:	mov	w3, #0x1                   	// #1
  407290:	ldp	x19, x20, [sp, #16]
  407294:	ldr	x21, [sp, #32]
  407298:	ldp	x29, x30, [sp], #48
  40729c:	b	4051e0 <ferror@plt+0x32f0>
  4072a0:	stp	x29, x30, [sp, #-48]!
  4072a4:	mov	x29, sp
  4072a8:	stp	x19, x20, [sp, #16]
  4072ac:	mov	x19, x0
  4072b0:	mov	w20, w1
  4072b4:	str	x21, [sp, #32]
  4072b8:	mov	x21, x2
  4072bc:	ldr	x2, [x0, #8]
  4072c0:	mov	w1, #0x891d                	// #35101
  4072c4:	ldr	w0, [x0, #16]
  4072c8:	bl	4097c0 <argp_parse@@Base+0x1818>
  4072cc:	tbnz	w0, #31, 4072fc <ferror@plt+0x540c>
  4072d0:	ldr	x3, [x19, #8]
  4072d4:	mov	x2, x21
  4072d8:	mov	w1, w20
  4072dc:	mov	x0, x19
  4072e0:	ldp	x19, x20, [sp, #16]
  4072e4:	ldr	x21, [sp, #32]
  4072e8:	ldp	x29, x30, [sp], #48
  4072ec:	ldr	w3, [x3, #16]
  4072f0:	cmp	w3, #0x0
  4072f4:	csinc	w3, w3, wzr, ne  // ne = any
  4072f8:	b	404330 <ferror@plt+0x2440>
  4072fc:	bl	401ea0 <__errno_location@plt>
  407300:	ldr	w1, [x0]
  407304:	ldr	x3, [x19, #8]
  407308:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  40730c:	ldp	x19, x20, [sp, #16]
  407310:	add	x2, x2, #0xf30
  407314:	ldr	x21, [sp, #32]
  407318:	mov	w0, #0x1                   	// #1
  40731c:	ldp	x29, x30, [sp], #48
  407320:	b	401b30 <error@plt>
  407324:	nop
  407328:	stp	x29, x30, [sp, #-48]!
  40732c:	mov	x29, sp
  407330:	stp	x19, x20, [sp, #16]
  407334:	mov	x19, x0
  407338:	mov	w20, w1
  40733c:	str	x21, [sp, #32]
  407340:	mov	x21, x2
  407344:	ldr	x2, [x0, #8]
  407348:	mov	w1, #0x8942                	// #35138
  40734c:	ldr	w0, [x0, #16]
  407350:	bl	4097c0 <argp_parse@@Base+0x1818>
  407354:	tbnz	w0, #31, 407380 <ferror@plt+0x5490>
  407358:	ldr	x3, [x19, #8]
  40735c:	mov	x2, x21
  407360:	mov	w1, w20
  407364:	mov	x0, x19
  407368:	ldp	x19, x20, [sp, #16]
  40736c:	ldr	x21, [sp, #32]
  407370:	ldp	x29, x30, [sp], #48
  407374:	ldr	w3, [x3, #16]
  407378:	lsr	w3, w3, #31
  40737c:	b	4051e0 <ferror@plt+0x32f0>
  407380:	mov	x2, x21
  407384:	mov	w1, w20
  407388:	mov	x0, x19
  40738c:	mov	w3, #0x1                   	// #1
  407390:	ldp	x19, x20, [sp, #16]
  407394:	ldr	x21, [sp, #32]
  407398:	ldp	x29, x30, [sp], #48
  40739c:	b	4051e0 <ferror@plt+0x32f0>
  4073a0:	stp	x29, x30, [sp, #-48]!
  4073a4:	mov	x29, sp
  4073a8:	stp	x19, x20, [sp, #16]
  4073ac:	mov	x19, x0
  4073b0:	mov	w20, w1
  4073b4:	str	x21, [sp, #32]
  4073b8:	mov	x21, x2
  4073bc:	ldr	x2, [x0, #8]
  4073c0:	mov	w1, #0x8942                	// #35138
  4073c4:	ldr	w0, [x0, #16]
  4073c8:	bl	4097c0 <argp_parse@@Base+0x1818>
  4073cc:	tbnz	w0, #31, 4073f4 <ferror@plt+0x5504>
  4073d0:	ldr	x3, [x19, #8]
  4073d4:	mov	x2, x21
  4073d8:	mov	w1, w20
  4073dc:	mov	x0, x19
  4073e0:	ldp	x19, x20, [sp, #16]
  4073e4:	ldr	x21, [sp, #32]
  4073e8:	ldp	x29, x30, [sp], #48
  4073ec:	ldr	w3, [x3, #16]
  4073f0:	b	404330 <ferror@plt+0x2440>
  4073f4:	bl	401ea0 <__errno_location@plt>
  4073f8:	ldr	w1, [x0]
  4073fc:	ldr	x3, [x19, #8]
  407400:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  407404:	ldp	x19, x20, [sp, #16]
  407408:	add	x2, x2, #0x7c8
  40740c:	ldr	x21, [sp, #32]
  407410:	mov	w0, #0x1                   	// #1
  407414:	ldp	x29, x30, [sp], #48
  407418:	b	401b30 <error@plt>
  40741c:	nop
  407420:	stp	x29, x30, [sp, #-64]!
  407424:	mov	x29, sp
  407428:	stp	x19, x20, [sp, #16]
  40742c:	mov	x19, x0
  407430:	mov	x20, x1
  407434:	str	x21, [sp, #32]
  407438:	cbz	x0, 4074f4 <ferror@plt+0x5604>
  40743c:	ldr	w21, [x19, #8]
  407440:	tbz	w21, #0, 4074d4 <ferror@plt+0x55e4>
  407444:	ldr	x0, [x19, #16]
  407448:	ldr	w0, [x0]
  40744c:	tbnz	w0, #0, 4074b8 <ferror@plt+0x55c8>
  407450:	add	x1, sp, #0x38
  407454:	mov	x0, x20
  407458:	mov	w2, #0x0                   	// #0
  40745c:	bl	401d10 <strtol@plt>
  407460:	ldr	x1, [x19, #16]
  407464:	str	w0, [x1, #4]
  407468:	ldrb	w0, [x20]
  40746c:	cbz	w0, 40747c <ferror@plt+0x558c>
  407470:	ldr	x0, [sp, #56]
  407474:	ldrb	w0, [x0]
  407478:	cbz	w0, 40749c <ferror@plt+0x55ac>
  40747c:	ldr	x4, [x19]
  407480:	mov	w1, #0x0                   	// #0
  407484:	mov	x3, x20
  407488:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  40748c:	mov	w0, #0x1                   	// #1
  407490:	add	x2, x2, #0x880
  407494:	bl	401b30 <error@plt>
  407498:	ldr	x1, [x19, #16]
  40749c:	ldr	w0, [x1]
  4074a0:	ldp	x19, x20, [sp, #16]
  4074a4:	orr	w0, w0, #0x1
  4074a8:	ldr	x21, [sp, #32]
  4074ac:	str	w0, [x1]
  4074b0:	ldp	x29, x30, [sp], #64
  4074b4:	ret
  4074b8:	ldr	x3, [x19]
  4074bc:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  4074c0:	mov	w1, #0x0                   	// #0
  4074c4:	add	x2, x2, #0x850
  4074c8:	mov	w0, #0x1                   	// #1
  4074cc:	bl	401b30 <error@plt>
  4074d0:	b	407450 <ferror@plt+0x5560>
  4074d4:	mov	x0, #0x8                   	// #8
  4074d8:	bl	401be0 <malloc@plt>
  4074dc:	str	x0, [x19, #16]
  4074e0:	cbz	x0, 407510 <ferror@plt+0x5620>
  4074e4:	str	wzr, [x0]
  4074e8:	orr	w21, w21, #0x1
  4074ec:	str	w21, [x19, #8]
  4074f0:	b	407450 <ferror@plt+0x5560>
  4074f4:	mov	x3, x1
  4074f8:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  4074fc:	mov	w1, #0x0                   	// #0
  407500:	add	x2, x2, #0x7f0
  407504:	mov	w0, #0x1                   	// #1
  407508:	bl	401b30 <error@plt>
  40750c:	b	40743c <ferror@plt+0x554c>
  407510:	bl	401ea0 <__errno_location@plt>
  407514:	mov	x1, x0
  407518:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  40751c:	mov	w0, #0x1                   	// #1
  407520:	add	x2, x2, #0x818
  407524:	ldr	w1, [x1]
  407528:	bl	401b30 <error@plt>
  40752c:	ldr	w21, [x19, #8]
  407530:	ldr	x0, [x19, #16]
  407534:	b	4074e4 <ferror@plt+0x55f4>
  407538:	cmp	w0, #0x54
  40753c:	b.eq	407548 <ferror@plt+0x5658>  // b.none
  407540:	mov	w0, #0x7                   	// #7
  407544:	ret
  407548:	stp	x29, x30, [sp, #-16]!
  40754c:	mov	x29, sp
  407550:	ldr	x0, [x2, #40]
  407554:	ldr	x0, [x0]
  407558:	bl	407420 <ferror@plt+0x5530>
  40755c:	mov	w0, #0x0                   	// #0
  407560:	ldp	x29, x30, [sp], #16
  407564:	ret
  407568:	and	w1, w1, #0xff
  40756c:	cmp	w1, #0x54
  407570:	b.eq	40757c <ferror@plt+0x568c>  // b.none
  407574:	mov	w0, #0x0                   	// #0
  407578:	ret
  40757c:	stp	x29, x30, [sp, #-16]!
  407580:	mov	x1, x2
  407584:	mov	x29, sp
  407588:	ldr	x0, [x0]
  40758c:	bl	407420 <ferror@plt+0x5530>
  407590:	mov	w0, #0x1                   	// #1
  407594:	ldp	x29, x30, [sp], #16
  407598:	ret
  40759c:	nop
  4075a0:	stp	x29, x30, [sp, #-128]!
  4075a4:	mov	x29, sp
  4075a8:	stp	x23, x24, [sp, #48]
  4075ac:	mov	x23, x0
  4075b0:	ldr	x0, [x2]
  4075b4:	stp	x19, x20, [sp, #16]
  4075b8:	mov	w20, w1
  4075bc:	stp	x21, x22, [sp, #32]
  4075c0:	mov	x21, x2
  4075c4:	stp	x25, x26, [sp, #64]
  4075c8:	stp	x27, x28, [sp, #80]
  4075cc:	bl	403018 <ferror@plt+0x1128>
  4075d0:	cmp	w20, #0x1
  4075d4:	str	x0, [x23]
  4075d8:	b.le	4076c0 <ferror@plt+0x57d0>
  4075dc:	ldr	x22, [x21, #8]
  4075e0:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  4075e4:	add	x1, x1, #0xa38
  4075e8:	mov	x0, x22
  4075ec:	bl	401cf0 <strcmp@plt>
  4075f0:	cbz	w0, 407700 <ferror@plt+0x5810>
  4075f4:	mov	x0, x22
  4075f8:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  4075fc:	mov	w19, #0x1                   	// #1
  407600:	add	x1, x1, #0x8b8
  407604:	bl	401cf0 <strcmp@plt>
  407608:	cbz	w0, 4078e4 <ferror@plt+0x59f4>
  40760c:	adrp	x26, 40e000 <argp_error@@Base+0x13a0>
  407610:	adrp	x27, 40e000 <argp_error@@Base+0x13a0>
  407614:	adrp	x28, 410000 <argp_error@@Base+0x33a0>
  407618:	add	x26, x26, #0xca8
  40761c:	add	x0, x28, #0x8e8
  407620:	add	x27, x27, #0xc58
  407624:	str	x0, [sp, #104]
  407628:	b	40764c <ferror@plt+0x575c>
  40762c:	cmp	w20, w24
  407630:	b.le	407820 <ferror@plt+0x5930>
  407634:	ldr	x0, [x23]
  407638:	add	w19, w19, #0x2
  40763c:	ldr	x1, [x22, #8]
  407640:	bl	4032b8 <ferror@plt+0x13c8>
  407644:	cmp	w20, w19
  407648:	b.le	4076c0 <ferror@plt+0x57d0>
  40764c:	sxtw	x25, w19
  407650:	mov	x1, x26
  407654:	add	x22, x21, w19, sxtw #3
  407658:	add	w24, w19, #0x1
  40765c:	ldr	x28, [x21, x25, lsl #3]
  407660:	mov	x0, x28
  407664:	bl	401cf0 <strcmp@plt>
  407668:	cbz	w0, 40762c <ferror@plt+0x573c>
  40766c:	mov	x1, x27
  407670:	mov	x0, x28
  407674:	bl	401cf0 <strcmp@plt>
  407678:	cbz	w0, 4076e4 <ferror@plt+0x57f4>
  40767c:	ldr	x1, [sp, #104]
  407680:	mov	x0, x28
  407684:	bl	401cf0 <strcmp@plt>
  407688:	cbz	w0, 4076e4 <ferror@plt+0x57f4>
  40768c:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  407690:	mov	x0, x28
  407694:	add	x1, x1, #0x948
  407698:	bl	401cf0 <strcmp@plt>
  40769c:	cbnz	w0, 407710 <ferror@plt+0x5820>
  4076a0:	cmp	w20, w24
  4076a4:	b.le	407858 <ferror@plt+0x5968>
  4076a8:	ldr	x0, [x23]
  4076ac:	add	w19, w19, #0x2
  4076b0:	ldr	x1, [x22, #8]
  4076b4:	bl	403188 <ferror@plt+0x1298>
  4076b8:	cmp	w20, w19
  4076bc:	b.gt	40764c <ferror@plt+0x575c>
  4076c0:	mov	w4, #0x1                   	// #1
  4076c4:	mov	w0, w4
  4076c8:	ldp	x19, x20, [sp, #16]
  4076cc:	ldp	x21, x22, [sp, #32]
  4076d0:	ldp	x23, x24, [sp, #48]
  4076d4:	ldp	x25, x26, [sp, #64]
  4076d8:	ldp	x27, x28, [sp, #80]
  4076dc:	ldp	x29, x30, [sp], #128
  4076e0:	ret
  4076e4:	cmp	w20, w24
  4076e8:	b.le	4077e0 <ferror@plt+0x58f0>
  4076ec:	ldr	x0, [x23]
  4076f0:	add	w19, w19, #0x2
  4076f4:	ldr	x1, [x22, #8]
  4076f8:	bl	4036c0 <ferror@plt+0x17d0>
  4076fc:	b	407644 <ferror@plt+0x5754>
  407700:	cmp	w20, #0x2
  407704:	mov	w19, #0x2                   	// #2
  407708:	b.ne	40760c <ferror@plt+0x571c>  // b.any
  40770c:	b	4076c0 <ferror@plt+0x57d0>
  407710:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  407714:	mov	x0, x28
  407718:	add	x1, x1, #0xd20
  40771c:	bl	401cf0 <strcmp@plt>
  407720:	cbz	w0, 407754 <ferror@plt+0x5864>
  407724:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  407728:	mov	x0, x28
  40772c:	add	x1, x1, #0xcf8
  407730:	bl	401cf0 <strcmp@plt>
  407734:	cbnz	w0, 407890 <ferror@plt+0x59a0>
  407738:	cmp	w20, w24
  40773c:	b.le	407770 <ferror@plt+0x5880>
  407740:	ldr	x0, [x23]
  407744:	add	w19, w19, #0x2
  407748:	ldr	x1, [x22, #8]
  40774c:	bl	403350 <ferror@plt+0x1460>
  407750:	b	407644 <ferror@plt+0x5754>
  407754:	cmp	w20, w24
  407758:	b.le	4077a8 <ferror@plt+0x58b8>
  40775c:	ldr	x0, [x23]
  407760:	add	w19, w19, #0x2
  407764:	ldr	x1, [x22, #8]
  407768:	bl	403418 <ferror@plt+0x1528>
  40776c:	b	407644 <ferror@plt+0x5754>
  407770:	mov	w1, #0x0                   	// #0
  407774:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  407778:	add	x2, x2, #0x9b8
  40777c:	str	w0, [sp, #104]
  407780:	bl	401b30 <error@plt>
  407784:	ldr	w4, [sp, #104]
  407788:	ldp	x19, x20, [sp, #16]
  40778c:	mov	w0, w4
  407790:	ldp	x21, x22, [sp, #32]
  407794:	ldp	x23, x24, [sp, #48]
  407798:	ldp	x25, x26, [sp, #64]
  40779c:	ldp	x27, x28, [sp, #80]
  4077a0:	ldp	x29, x30, [sp], #128
  4077a4:	ret
  4077a8:	mov	w1, #0x0                   	// #0
  4077ac:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  4077b0:	add	x2, x2, #0x990
  4077b4:	str	w0, [sp, #104]
  4077b8:	bl	401b30 <error@plt>
  4077bc:	ldr	w4, [sp, #104]
  4077c0:	ldp	x19, x20, [sp, #16]
  4077c4:	mov	w0, w4
  4077c8:	ldp	x21, x22, [sp, #32]
  4077cc:	ldp	x23, x24, [sp, #48]
  4077d0:	ldp	x25, x26, [sp, #64]
  4077d4:	ldp	x27, x28, [sp, #80]
  4077d8:	ldp	x29, x30, [sp], #128
  4077dc:	ret
  4077e0:	mov	w4, #0x0                   	// #0
  4077e4:	mov	w1, #0x0                   	// #0
  4077e8:	mov	w0, #0x0                   	// #0
  4077ec:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  4077f0:	add	x2, x2, #0x930
  4077f4:	str	w4, [sp, #104]
  4077f8:	bl	401b30 <error@plt>
  4077fc:	ldr	w4, [sp, #104]
  407800:	ldp	x19, x20, [sp, #16]
  407804:	mov	w0, w4
  407808:	ldp	x21, x22, [sp, #32]
  40780c:	ldp	x23, x24, [sp, #48]
  407810:	ldp	x25, x26, [sp, #64]
  407814:	ldp	x27, x28, [sp, #80]
  407818:	ldp	x29, x30, [sp], #128
  40781c:	ret
  407820:	mov	w1, #0x0                   	// #0
  407824:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  407828:	add	x2, x2, #0x908
  40782c:	str	w0, [sp, #104]
  407830:	bl	401b30 <error@plt>
  407834:	ldr	w4, [sp, #104]
  407838:	ldp	x19, x20, [sp, #16]
  40783c:	mov	w0, w4
  407840:	ldp	x21, x22, [sp, #32]
  407844:	ldp	x23, x24, [sp, #48]
  407848:	ldp	x25, x26, [sp, #64]
  40784c:	ldp	x27, x28, [sp, #80]
  407850:	ldp	x29, x30, [sp], #128
  407854:	ret
  407858:	mov	w1, #0x0                   	// #0
  40785c:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  407860:	add	x2, x2, #0x968
  407864:	str	w0, [sp, #104]
  407868:	bl	401b30 <error@plt>
  40786c:	ldr	w4, [sp, #104]
  407870:	ldp	x19, x20, [sp, #16]
  407874:	mov	w0, w4
  407878:	ldp	x21, x22, [sp, #32]
  40787c:	ldp	x23, x24, [sp, #48]
  407880:	ldp	x25, x26, [sp, #64]
  407884:	ldp	x27, x28, [sp, #80]
  407888:	ldp	x29, x30, [sp], #128
  40788c:	ret
  407890:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  407894:	mov	x0, x28
  407898:	add	x1, x1, #0x8f8
  40789c:	bl	401cf0 <strcmp@plt>
  4078a0:	cbz	w0, 407904 <ferror@plt+0x5a14>
  4078a4:	ldrb	w0, [x28]
  4078a8:	cmp	w0, #0x75
  4078ac:	b.ne	407958 <ferror@plt+0x5a68>  // b.any
  4078b0:	ldrb	w0, [x28, #1]
  4078b4:	cmp	w0, #0x70
  4078b8:	b.ne	407958 <ferror@plt+0x5a68>  // b.any
  4078bc:	ldrb	w0, [x28, #2]
  4078c0:	cbnz	w0, 407958 <ferror@plt+0x5a68>
  4078c4:	ldr	x0, [x23]
  4078c8:	mov	w2, #0x0                   	// #0
  4078cc:	mov	w1, #0x41                  	// #65
  4078d0:	bl	403580 <ferror@plt+0x1690>
  4078d4:	cmp	w20, w24
  4078d8:	b.le	4076c0 <ferror@plt+0x57d0>
  4078dc:	mov	w19, w24
  4078e0:	b	40764c <ferror@plt+0x575c>
  4078e4:	mov	x3, x22
  4078e8:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  4078ec:	mov	w1, #0x0                   	// #0
  4078f0:	add	x2, x2, #0x8c0
  4078f4:	str	w0, [sp, #104]
  4078f8:	bl	401b30 <error@plt>
  4078fc:	ldr	w4, [sp, #104]
  407900:	b	4076c4 <ferror@plt+0x57d4>
  407904:	cmp	w20, w24
  407908:	b.le	407920 <ferror@plt+0x5a30>
  40790c:	ldr	x0, [x23]
  407910:	add	w19, w19, #0x2
  407914:	ldr	x1, [x22, #8]
  407918:	bl	407420 <ferror@plt+0x5530>
  40791c:	b	407644 <ferror@plt+0x5754>
  407920:	mov	w1, #0x0                   	// #0
  407924:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  407928:	add	x2, x2, #0x9e0
  40792c:	str	w0, [sp, #104]
  407930:	bl	401b30 <error@plt>
  407934:	ldr	w4, [sp, #104]
  407938:	ldp	x19, x20, [sp, #16]
  40793c:	mov	w0, w4
  407940:	ldp	x21, x22, [sp, #32]
  407944:	ldp	x23, x24, [sp, #48]
  407948:	ldp	x25, x26, [sp, #64]
  40794c:	ldp	x27, x28, [sp, #80]
  407950:	ldp	x29, x30, [sp], #128
  407954:	ret
  407958:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  40795c:	mov	x0, x28
  407960:	add	x1, x1, #0xdc8
  407964:	bl	401cf0 <strcmp@plt>
  407968:	cbnz	w0, 40798c <ferror@plt+0x5a9c>
  40796c:	ldr	x0, [x23]
  407970:	mov	w2, #0x1                   	// #1
  407974:	mov	w1, w2
  407978:	bl	403580 <ferror@plt+0x1690>
  40797c:	cmp	w20, w24
  407980:	b.le	4076c0 <ferror@plt+0x57d0>
  407984:	mov	w19, w24
  407988:	b	40764c <ferror@plt+0x575c>
  40798c:	add	x1, sp, #0x7c
  407990:	mov	x0, x28
  407994:	bl	4025b0 <ferror@plt+0x6c0>
  407998:	mov	w1, w0
  40799c:	mov	w0, #0xffffffb7            	// #-73
  4079a0:	tst	w1, w0
  4079a4:	b.eq	4079c4 <ferror@plt+0x5ad4>  // b.none
  4079a8:	ldr	w2, [sp, #124]
  4079ac:	ldr	x0, [x23]
  4079b0:	bl	403580 <ferror@plt+0x1690>
  4079b4:	cmp	w20, w24
  4079b8:	b.le	4076c0 <ferror@plt+0x57d0>
  4079bc:	mov	w19, w24
  4079c0:	b	40764c <ferror@plt+0x575c>
  4079c4:	ldr	x1, [x21, x25, lsl #3]
  4079c8:	ldr	x0, [x23]
  4079cc:	bl	4030f0 <ferror@plt+0x1200>
  4079d0:	cmp	w20, w24
  4079d4:	b.le	4076c0 <ferror@plt+0x57d0>
  4079d8:	mov	w19, w24
  4079dc:	b	40764c <ferror@plt+0x575c>
  4079e0:	stp	x29, x30, [sp, #-32]!
  4079e4:	mov	x29, sp
  4079e8:	str	x19, [sp, #16]
  4079ec:	mov	x19, x1
  4079f0:	ldr	w1, [x2]
  4079f4:	tbnz	w1, #0, 407a08 <ferror@plt+0x5b18>
  4079f8:	mov	w0, #0x0                   	// #0
  4079fc:	ldr	x19, [sp, #16]
  407a00:	ldp	x29, x30, [sp], #32
  407a04:	ret
  407a08:	ldr	w1, [x2, #4]
  407a0c:	mov	x2, x19
  407a10:	str	w1, [x19, #16]
  407a14:	mov	w1, #0x8943                	// #35139
  407a18:	bl	4097c0 <argp_parse@@Base+0x1818>
  407a1c:	tbnz	w0, #31, 407a50 <ferror@plt+0x5b60>
  407a20:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  407a24:	ldr	w0, [x0, #1576]
  407a28:	cbz	w0, 4079f8 <ferror@plt+0x5b08>
  407a2c:	ldr	w2, [x19, #16]
  407a30:	mov	x1, x19
  407a34:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  407a38:	add	x0, x0, #0xa28
  407a3c:	bl	401e80 <printf@plt>
  407a40:	mov	w0, #0x0                   	// #0
  407a44:	ldr	x19, [sp, #16]
  407a48:	ldp	x29, x30, [sp], #32
  407a4c:	ret
  407a50:	bl	401ea0 <__errno_location@plt>
  407a54:	mov	x1, x0
  407a58:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  407a5c:	mov	w0, #0x0                   	// #0
  407a60:	add	x2, x2, #0xa10
  407a64:	ldr	w1, [x1]
  407a68:	bl	401b30 <error@plt>
  407a6c:	b	407a20 <ferror@plt+0x5b30>
  407a70:	stp	x29, x30, [sp, #-32]!
  407a74:	mov	x29, sp
  407a78:	ldr	x2, [x0]
  407a7c:	stp	x19, x20, [sp, #16]
  407a80:	mov	x19, x1
  407a84:	ldr	x20, [x0, #32]
  407a88:	cbz	x2, 407b14 <ferror@plt+0x5c24>
  407a8c:	ldr	x1, [x1, #16]
  407a90:	mov	w0, #0x0                   	// #0
  407a94:	add	x1, x1, #0x1
  407a98:	str	x1, [x19, #16]
  407a9c:	nop
  407aa0:	ldr	w3, [x2, #8]
  407aa4:	add	x2, x2, #0x30
  407aa8:	cbnz	w3, 407ab4 <ferror@plt+0x5bc4>
  407aac:	ldur	x3, [x2, #-48]
  407ab0:	cbz	x3, 407abc <ferror@plt+0x5bcc>
  407ab4:	add	w0, w0, #0x1
  407ab8:	b	407aa0 <ferror@plt+0x5bb0>
  407abc:	ldur	x1, [x2, #-16]
  407ac0:	cbnz	x1, 407ab4 <ferror@plt+0x5bc4>
  407ac4:	ldur	w1, [x2, #-8]
  407ac8:	cbnz	w1, 407ab4 <ferror@plt+0x5bc4>
  407acc:	ldp	x3, x2, [x19]
  407ad0:	add	w1, w0, w0, lsl #1
  407ad4:	add	x0, x2, w0, sxtw
  407ad8:	add	x1, x3, w1, sxtw
  407adc:	stp	x1, x0, [x19]
  407ae0:	cbz	x20, 407b08 <ferror@plt+0x5c18>
  407ae4:	ldr	x0, [x20]
  407ae8:	cbz	x0, 407b08 <ferror@plt+0x5c18>
  407aec:	mov	x1, x19
  407af0:	bl	407a70 <ferror@plt+0x5b80>
  407af4:	ldr	x1, [x19, #24]
  407af8:	ldr	x0, [x20, #32]!
  407afc:	add	x1, x1, #0x1
  407b00:	str	x1, [x19, #24]
  407b04:	cbnz	x0, 407aec <ferror@plt+0x5bfc>
  407b08:	ldp	x19, x20, [sp, #16]
  407b0c:	ldp	x29, x30, [sp], #32
  407b10:	ret
  407b14:	ldr	x0, [x0, #8]
  407b18:	cbz	x0, 407ae0 <ferror@plt+0x5bf0>
  407b1c:	ldr	x0, [x1, #16]
  407b20:	add	x0, x0, #0x1
  407b24:	str	x0, [x1, #16]
  407b28:	b	407ae0 <ferror@plt+0x5bf0>
  407b2c:	nop
  407b30:	cmp	w0, #0x56
  407b34:	b.eq	407b40 <ferror@plt+0x5c50>  // b.none
  407b38:	mov	w0, #0x7                   	// #7
  407b3c:	ret
  407b40:	stp	x29, x30, [sp, #-32]!
  407b44:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  407b48:	mov	x29, sp
  407b4c:	str	x19, [sp, #16]
  407b50:	mov	x19, x2
  407b54:	ldr	x2, [x0, #1448]
  407b58:	cbz	x2, 407b84 <ferror@plt+0x5c94>
  407b5c:	ldr	x0, [x19, #80]
  407b60:	mov	x1, x19
  407b64:	blr	x2
  407b68:	ldr	w1, [x19, #28]
  407b6c:	mov	w0, #0x0                   	// #0
  407b70:	tbz	w1, #5, 407b80 <ferror@plt+0x5c90>
  407b74:	ldr	x19, [sp, #16]
  407b78:	ldp	x29, x30, [sp], #32
  407b7c:	ret
  407b80:	bl	401b20 <exit@plt>
  407b84:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  407b88:	ldr	x2, [x0, #1632]
  407b8c:	cbz	x2, 407ba4 <ferror@plt+0x5cb4>
  407b90:	ldr	x0, [x19, #80]
  407b94:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  407b98:	add	x1, x1, #0x2f0
  407b9c:	bl	401ed0 <fprintf@plt>
  407ba0:	b	407b68 <ferror@plt+0x5c78>
  407ba4:	mov	x0, x19
  407ba8:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  407bac:	adrp	x1, 40e000 <argp_error@@Base+0x13a0>
  407bb0:	add	x2, x2, #0xf60
  407bb4:	add	x1, x1, #0xad8
  407bb8:	bl	40cc60 <argp_error@@Base>
  407bbc:	b	407b68 <ferror@plt+0x5c78>
  407bc0:	stp	x29, x30, [sp, #-32]!
  407bc4:	cmn	w0, #0x2
  407bc8:	mov	x29, sp
  407bcc:	stp	x19, x20, [sp, #16]
  407bd0:	mov	x20, x1
  407bd4:	mov	x19, x2
  407bd8:	b.eq	407c40 <ferror@plt+0x5d50>  // b.none
  407bdc:	cmn	w0, #0x1
  407be0:	b.ge	407c14 <ferror@plt+0x5d24>  // b.tcont
  407be4:	cmn	w0, #0x4
  407be8:	b.eq	407c7c <ferror@plt+0x5d8c>  // b.none
  407bec:	cmn	w0, #0x3
  407bf0:	b.ne	407cec <ferror@plt+0x5dfc>  // b.any
  407bf4:	ldr	x1, [x19, #80]
  407bf8:	mov	x0, x2
  407bfc:	mov	w2, #0x201                 	// #513
  407c00:	bl	40cbc0 <argp_state_help@@Base>
  407c04:	mov	w0, #0x0                   	// #0
  407c08:	ldp	x19, x20, [sp, #16]
  407c0c:	ldp	x29, x30, [sp], #32
  407c10:	ret
  407c14:	cmp	w0, #0x3f
  407c18:	mov	w0, #0x7                   	// #7
  407c1c:	b.ne	407c08 <ferror@plt+0x5d18>  // b.any
  407c20:	ldr	x1, [x19, #80]
  407c24:	mov	x0, x2
  407c28:	mov	w2, #0x27a                 	// #634
  407c2c:	bl	40cbc0 <argp_state_help@@Base>
  407c30:	mov	w0, #0x0                   	// #0
  407c34:	ldp	x19, x20, [sp, #16]
  407c38:	ldp	x29, x30, [sp], #32
  407c3c:	ret
  407c40:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  407c44:	mov	x0, x20
  407c48:	str	x20, [x1, #1240]
  407c4c:	bl	408ca0 <argp_parse@@Base+0xcf8>
  407c50:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  407c54:	ldr	w1, [x19, #28]
  407c58:	str	x0, [x19, #64]
  407c5c:	str	x0, [x2, #1264]
  407c60:	and	w1, w1, #0x3
  407c64:	cmp	w1, #0x1
  407c68:	b.eq	407cdc <ferror@plt+0x5dec>  // b.none
  407c6c:	mov	w0, #0x0                   	// #0
  407c70:	ldp	x19, x20, [sp, #16]
  407c74:	ldp	x29, x30, [sp], #32
  407c78:	ret
  407c7c:	cmp	x1, #0x0
  407c80:	adrp	x19, 427000 <argp_error@@Base+0x1a3a0>
  407c84:	adrp	x0, 410000 <argp_error@@Base+0x33a0>
  407c88:	add	x0, x0, #0xf88
  407c8c:	csel	x0, x0, x1, eq  // eq = none
  407c90:	mov	w2, #0xa                   	// #10
  407c94:	mov	x1, #0x0                   	// #0
  407c98:	bl	401d10 <strtol@plt>
  407c9c:	str	w0, [x19, #1440]
  407ca0:	ldr	w0, [x19, #1440]
  407ca4:	sub	w1, w0, #0x1
  407ca8:	str	w1, [x19, #1440]
  407cac:	cmp	w0, #0x0
  407cb0:	b.le	407c6c <ferror@plt+0x5d7c>
  407cb4:	add	x19, x19, #0x5a0
  407cb8:	mov	w0, #0x1                   	// #1
  407cbc:	bl	401c30 <sleep@plt>
  407cc0:	ldr	w0, [x19]
  407cc4:	sub	w1, w0, #0x1
  407cc8:	str	w1, [x19]
  407ccc:	cmp	w0, #0x0
  407cd0:	b.gt	407cb8 <ferror@plt+0x5dc8>
  407cd4:	mov	w0, #0x0                   	// #0
  407cd8:	b	407c70 <ferror@plt+0x5d80>
  407cdc:	ldr	x1, [x19, #16]
  407ce0:	mov	w0, #0x0                   	// #0
  407ce4:	str	x20, [x1]
  407ce8:	b	407c08 <ferror@plt+0x5d18>
  407cec:	mov	w0, #0x7                   	// #7
  407cf0:	b	407c08 <ferror@plt+0x5d18>
  407cf4:	nop
  407cf8:	stp	x29, x30, [sp, #-128]!
  407cfc:	mov	x29, sp
  407d00:	stp	x19, x20, [sp, #16]
  407d04:	mov	x19, x4
  407d08:	ldr	x20, [x0]
  407d0c:	stp	x0, x1, [sp, #104]
  407d10:	ldr	x0, [x0, #32]
  407d14:	stp	x23, x24, [sp, #48]
  407d18:	mov	x24, x3
  407d1c:	str	x0, [sp, #96]
  407d20:	str	w2, [sp, #124]
  407d24:	cbz	x20, 407f80 <ferror@plt+0x6090>
  407d28:	ldr	x23, [x4, #8]
  407d2c:	stp	x27, x28, [sp, #80]
  407d30:	mov	x28, x20
  407d34:	stp	x21, x22, [sp, #32]
  407d38:	stp	x25, x26, [sp, #64]
  407d3c:	nop
  407d40:	ldr	w22, [x28, #8]
  407d44:	cbnz	w22, 407d50 <ferror@plt+0x5e60>
  407d48:	ldr	x0, [x28]
  407d4c:	cbz	x0, 407e98 <ferror@plt+0x5fa8>
  407d50:	ldr	w1, [x28, #24]
  407d54:	tbz	w1, #2, 407e78 <ferror@plt+0x5f88>
  407d58:	ldr	w0, [x20, #24]
  407d5c:	and	w21, w0, #0x8
  407d60:	tbnz	w0, #3, 407e70 <ferror@plt+0x5f80>
  407d64:	tbnz	w1, #3, 407dd4 <ferror@plt+0x5ee4>
  407d68:	sub	w0, w22, #0x1
  407d6c:	cmp	w0, #0xfe
  407d70:	b.hi	407dd4 <ferror@plt+0x5ee4>  // b.pmore
  407d74:	bl	401d00 <__ctype_b_loc@plt>
  407d78:	ldr	x0, [x0]
  407d7c:	ldrh	w0, [x0, w22, sxtw #1]
  407d80:	tbz	w0, #14, 407dd4 <ferror@plt+0x5ee4>
  407d84:	add	x0, x23, #0x1
  407d88:	str	x0, [x19, #8]
  407d8c:	strb	w22, [x23]
  407d90:	ldr	x0, [x20, #16]
  407d94:	cbz	x0, 407dc8 <ferror@plt+0x5ed8>
  407d98:	ldr	x0, [x19, #8]
  407d9c:	add	x1, x0, #0x1
  407da0:	str	x1, [x19, #8]
  407da4:	mov	w1, #0x3a                  	// #58
  407da8:	strb	w1, [x0]
  407dac:	ldr	w0, [x20, #24]
  407db0:	tbz	w0, #0, 407dc8 <ferror@plt+0x5ed8>
  407db4:	ldr	x0, [x19, #8]
  407db8:	add	x1, x0, #0x1
  407dbc:	str	x1, [x19, #8]
  407dc0:	mov	w1, #0x3a                  	// #58
  407dc4:	strb	w1, [x0]
  407dc8:	ldr	x0, [x19, #8]
  407dcc:	strb	wzr, [x0]
  407dd0:	ldr	x23, [x19, #8]
  407dd4:	ldr	x27, [x28]
  407dd8:	cbz	x27, 407e70 <ferror@plt+0x5f80>
  407ddc:	ldr	x25, [x19]
  407de0:	ldr	x22, [x25, #16]
  407de4:	ldr	x0, [x22]
  407de8:	cbz	x0, 407e04 <ferror@plt+0x5f14>
  407dec:	mov	x26, x22
  407df0:	mov	x1, x27
  407df4:	bl	401cf0 <strcmp@plt>
  407df8:	cbz	w0, 407e84 <ferror@plt+0x5f94>
  407dfc:	ldr	x0, [x26, #32]!
  407e00:	cbnz	x0, 407df0 <ferror@plt+0x5f00>
  407e04:	ldr	x3, [x19, #16]
  407e08:	ldr	x0, [x20, #16]
  407e0c:	str	x27, [x3]
  407e10:	cbz	x0, 407e20 <ferror@plt+0x5f30>
  407e14:	ldr	w21, [x20, #24]
  407e18:	and	w21, w21, #0x1
  407e1c:	add	w21, w21, #0x1
  407e20:	str	w21, [x3, #8]
  407e24:	str	xzr, [x3, #16]
  407e28:	ldr	w0, [x28, #8]
  407e2c:	cbnz	w0, 407e34 <ferror@plt+0x5f44>
  407e30:	ldr	w0, [x20, #8]
  407e34:	and	w1, w0, #0xffffff
  407e38:	mov	x2, #0x8e39                	// #36409
  407e3c:	ldr	x0, [x25, #80]
  407e40:	movk	x2, #0x38e3, lsl #16
  407e44:	movk	x2, #0xe38e, lsl #32
  407e48:	add	x4, x3, #0x20
  407e4c:	sub	x0, x24, x0
  407e50:	movk	x2, #0x8e38, lsl #48
  407e54:	asr	x0, x0, #3
  407e58:	mul	x0, x0, x2
  407e5c:	add	w0, w0, #0x1
  407e60:	add	w0, w1, w0, lsl #24
  407e64:	str	w0, [x3, #24]
  407e68:	str	x4, [x19, #16]
  407e6c:	str	xzr, [x3, #32]
  407e70:	add	x28, x28, #0x30
  407e74:	b	407d40 <ferror@plt+0x5e50>
  407e78:	mov	w0, w1
  407e7c:	mov	x20, x28
  407e80:	b	407d5c <ferror@plt+0x5e6c>
  407e84:	sub	x22, x26, x22
  407e88:	asr	x22, x22, #5
  407e8c:	tbnz	w22, #31, 407e04 <ferror@plt+0x5f14>
  407e90:	add	x28, x28, #0x30
  407e94:	b	407d40 <ferror@plt+0x5e50>
  407e98:	ldr	x0, [x28, #32]
  407e9c:	cbnz	x0, 407d50 <ferror@plt+0x5e60>
  407ea0:	ldr	w0, [x28, #40]
  407ea4:	cbnz	w0, 407d50 <ferror@plt+0x5e60>
  407ea8:	ldr	x0, [sp, #104]
  407eac:	ldp	x21, x22, [sp, #32]
  407eb0:	ldp	x25, x26, [sp, #64]
  407eb4:	ldp	x27, x28, [sp, #80]
  407eb8:	ldr	x0, [x0, #8]
  407ebc:	str	x0, [x24]
  407ec0:	ldr	x0, [sp, #104]
  407ec4:	str	x0, [x24, #8]
  407ec8:	ldr	x0, [sp, #112]
  407ecc:	str	x0, [x24, #32]
  407ed0:	ldr	w0, [sp, #124]
  407ed4:	str	w0, [x24, #40]
  407ed8:	ldr	x0, [sp, #96]
  407edc:	str	x23, [x24, #16]
  407ee0:	str	wzr, [x24, #24]
  407ee4:	stp	xzr, xzr, [x24, #48]
  407ee8:	str	xzr, [x24, #64]
  407eec:	cbz	x0, 407f2c <ferror@plt+0x603c>
  407ef0:	ldr	x0, [x0]
  407ef4:	cbz	x0, 407f9c <ferror@plt+0x60ac>
  407ef8:	mov	w0, #0x0                   	// #0
  407efc:	nop
  407f00:	add	w2, w0, #0x1
  407f04:	ldr	x3, [sp, #96]
  407f08:	ubfiz	x1, x2, #5, #32
  407f0c:	mov	x0, x2
  407f10:	ldr	x1, [x3, x1]
  407f14:	cbnz	x1, 407f00 <ferror@plt+0x6010>
  407f18:	lsl	x2, x2, #3
  407f1c:	ldr	x0, [x19, #24]
  407f20:	str	x0, [x24, #56]
  407f24:	add	x2, x0, x2
  407f28:	str	x2, [x19, #24]
  407f2c:	add	x3, x24, #0x48
  407f30:	ldr	x0, [sp, #96]
  407f34:	cbz	x0, 407f6c <ferror@plt+0x607c>
  407f38:	ldr	x0, [x0]
  407f3c:	cbz	x0, 407f6c <ferror@plt+0x607c>
  407f40:	mov	w20, #0x0                   	// #0
  407f44:	mov	w2, w20
  407f48:	mov	x1, x24
  407f4c:	mov	x4, x19
  407f50:	bl	407cf8 <ferror@plt+0x5e08>
  407f54:	ldr	x1, [sp, #96]
  407f58:	mov	x3, x0
  407f5c:	add	w20, w20, #0x1
  407f60:	ldr	x0, [x1, #32]!
  407f64:	str	x1, [sp, #96]
  407f68:	cbnz	x0, 407f44 <ferror@plt+0x6054>
  407f6c:	mov	x0, x3
  407f70:	ldp	x19, x20, [sp, #16]
  407f74:	ldp	x23, x24, [sp, #48]
  407f78:	ldp	x29, x30, [sp], #128
  407f7c:	ret
  407f80:	ldr	x0, [sp, #104]
  407f84:	ldr	x0, [x0, #8]
  407f88:	cbz	x0, 407f94 <ferror@plt+0x60a4>
  407f8c:	ldr	x23, [x4, #8]
  407f90:	b	407ebc <ferror@plt+0x5fcc>
  407f94:	mov	x24, #0x0                   	// #0
  407f98:	b	407f30 <ferror@plt+0x6040>
  407f9c:	mov	x2, #0x0                   	// #0
  407fa0:	b	407f1c <ferror@plt+0x602c>
  407fa4:	nop

0000000000407fa8 <argp_parse@@Base>:
  407fa8:	stp	x29, x30, [sp, #-448]!
  407fac:	mov	x29, sp
  407fb0:	stp	x19, x20, [sp, #16]
  407fb4:	mov	w20, w1
  407fb8:	stp	x21, x22, [sp, #32]
  407fbc:	mov	x22, x2
  407fc0:	stp	x23, x24, [sp, #48]
  407fc4:	mov	x24, x0
  407fc8:	stp	x25, x26, [sp, #64]
  407fcc:	mov	w25, w3
  407fd0:	mov	x26, x5
  407fd4:	stp	x27, x28, [sp, #80]
  407fd8:	str	x4, [x29, #104]
  407fdc:	tbnz	w25, #0, 407ff8 <argp_parse@@Base+0x50>
  407fe0:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  407fe4:	ldr	x1, [x0, #1240]
  407fe8:	cbz	x1, 4088a4 <argp_parse@@Base+0x8fc>
  407fec:	adrp	x19, 427000 <argp_error@@Base+0x1a3a0>
  407ff0:	ldr	x0, [x19, #1264]
  407ff4:	cbz	x0, 4088b8 <argp_parse@@Base+0x910>
  407ff8:	ands	w0, w25, #0x4
  407ffc:	str	w0, [x29, #100]
  408000:	cset	x0, eq  // eq = none
  408004:	tbz	w25, #4, 408038 <argp_parse@@Base+0x90>
  408008:	stp	x0, xzr, [x29, #112]
  40800c:	stp	xzr, xzr, [x29, #128]
  408010:	stp	xzr, xzr, [x29, #176]
  408014:	stp	xzr, xzr, [x29, #192]
  408018:	stp	xzr, xzr, [x29, #208]
  40801c:	str	xzr, [x29, #224]
  408020:	cbnz	x24, 4080d0 <argp_parse@@Base+0x128>
  408024:	mov	x28, #0x48                  	// #72
  408028:	mov	x19, #0x68                  	// #104
  40802c:	mov	x21, x28
  408030:	mov	x23, #0x0                   	// #0
  408034:	b	408100 <argp_parse@@Base+0x158>
  408038:	sub	sp, sp, #0x80
  40803c:	mov	x1, sp
  408040:	sub	sp, sp, #0x40
  408044:	mov	x2, sp
  408048:	mov	x3, x1
  40804c:	stp	xzr, xzr, [x1]
  408050:	stp	xzr, xzr, [x2, #32]
  408054:	stp	xzr, xzr, [x2]
  408058:	stp	xzr, xzr, [x1, #16]
  40805c:	stp	xzr, xzr, [x2, #16]
  408060:	stp	xzr, xzr, [x1, #32]
  408064:	str	x1, [x2, #32]
  408068:	stp	xzr, xzr, [x1, #48]
  40806c:	str	xzr, [x2, #48]
  408070:	stp	xzr, xzr, [x1, #64]
  408074:	stp	xzr, xzr, [x1, #80]
  408078:	stp	xzr, xzr, [x1, #96]
  40807c:	stp	xzr, xzr, [x1, #112]
  408080:	cbz	x24, 40808c <argp_parse@@Base+0xe4>
  408084:	add	x3, x1, #0x20
  408088:	str	x24, [x1]
  40808c:	adrp	x4, 427000 <argp_error@@Base+0x1a3a0>
  408090:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  408094:	add	x1, x1, #0x90
  408098:	str	x1, [x3]
  40809c:	ldr	x4, [x4, #1632]
  4080a0:	cbz	x4, 408ab8 <argp_parse@@Base+0xb10>
  4080a4:	add	x4, x3, #0x40
  4080a8:	add	x1, x1, #0x38
  4080ac:	str	x1, [x3, #32]
  4080b0:	mov	x24, x2
  4080b4:	str	xzr, [x4]
  4080b8:	stp	x0, xzr, [x29, #112]
  4080bc:	stp	xzr, xzr, [x29, #128]
  4080c0:	stp	xzr, xzr, [x29, #176]
  4080c4:	stp	xzr, xzr, [x29, #192]
  4080c8:	stp	xzr, xzr, [x29, #208]
  4080cc:	str	xzr, [x29, #224]
  4080d0:	mov	x0, x24
  4080d4:	add	x1, x29, #0x70
  4080d8:	bl	407a70 <ferror@plt+0x5b80>
  4080dc:	ldp	x3, x2, [x29, #128]
  4080e0:	ldp	x0, x19, [x29, #112]
  4080e4:	add	x3, x3, #0x1
  4080e8:	lsl	x23, x2, #3
  4080ec:	add	x3, x3, x3, lsl #3
  4080f0:	add	x19, x19, #0x1
  4080f4:	lsl	x21, x3, #3
  4080f8:	add	x28, x23, x21
  4080fc:	add	x19, x28, x19, lsl #5
  408100:	add	x0, x19, x0
  408104:	add	x0, x0, #0x1
  408108:	bl	401be0 <malloc@plt>
  40810c:	str	x0, [x29, #440]
  408110:	mov	x27, x0
  408114:	cbz	x0, 408bd8 <argp_parse@@Base+0xc30>
  408118:	mov	x0, #0x100000001           	// #4294967297
  40811c:	str	x0, [x29, #176]
  408120:	ldp	x6, x7, [x29, #192]
  408124:	add	x3, x27, x21
  408128:	ldp	x8, x9, [x29, #176]
  40812c:	add	x28, x27, x28
  408130:	ldp	x4, x5, [x29, #208]
  408134:	mov	x2, x23
  408138:	ldr	x12, [x29, #224]
  40813c:	add	x23, x27, x19
  408140:	add	x21, x29, #0xe8
  408144:	mov	x0, x3
  408148:	mov	w1, #0x0                   	// #0
  40814c:	stp	x23, x28, [x29, #240]
  408150:	stp	x8, x9, [x29, #256]
  408154:	stp	x6, x7, [x29, #272]
  408158:	stp	x4, x5, [x29, #288]
  40815c:	stp	x12, x27, [x29, #304]
  408160:	str	x3, [x29, #328]
  408164:	bl	401c20 <memset@plt>
  408168:	stp	x21, x23, [x29, #144]
  40816c:	stp	x28, x0, [x29, #160]
  408170:	tbnz	w25, #3, 4082a4 <argp_parse@@Base+0x2fc>
  408174:	mov	x0, x23
  408178:	ands	w1, w25, #0x4
  40817c:	cbz	w1, 408190 <argp_parse@@Base+0x1e8>
  408180:	add	x0, x23, #0x1
  408184:	mov	w1, #0x2b                  	// #43
  408188:	strb	w1, [x23]
  40818c:	str	x0, [x29, #152]
  408190:	ldr	x1, [x29, #160]
  408194:	strb	wzr, [x0]
  408198:	str	xzr, [x1]
  40819c:	str	x24, [x29, #232]
  4081a0:	cbz	x24, 4082c8 <argp_parse@@Base+0x320>
  4081a4:	ldr	x3, [x29, #312]
  4081a8:	add	x4, x29, #0x90
  4081ac:	mov	w2, #0x0                   	// #0
  4081b0:	mov	x1, #0x0                   	// #0
  4081b4:	mov	x0, x24
  4081b8:	bl	407cf8 <ferror@plt+0x5e08>
  4081bc:	stp	xzr, xzr, [x29, #352]
  4081c0:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  4081c4:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  4081c8:	mov	w4, #0x1                   	// #1
  4081cc:	ldr	x3, [x3, #1248]
  4081d0:	stp	xzr, xzr, [x21, #136]
  4081d4:	mov	x1, x22
  4081d8:	ldr	x2, [x2, #1256]
  4081dc:	str	w4, [x29, #336]
  4081e0:	stp	x3, x2, [x29, #416]
  4081e4:	str	x21, [x29, #432]
  4081e8:	ldr	x5, [x29, #232]
  4081ec:	stp	xzr, xzr, [x21, #152]
  4081f0:	ldr	x4, [x29, #312]
  4081f4:	stp	xzr, xzr, [x21, #168]
  4081f8:	str	x0, [x29, #320]
  4081fc:	cmp	x0, x4
  408200:	str	x5, [x29, #344]
  408204:	str	w20, [x29, #352]
  408208:	str	x22, [x29, #360]
  40820c:	str	w25, [x29, #372]
  408210:	b.ls	408314 <argp_parse@@Base+0x36c>  // b.plast
  408214:	mov	w24, #0x3                   	// #3
  408218:	add	x20, x4, #0x48
  40821c:	add	x25, x21, #0x70
  408220:	movk	w24, #0x100, lsl #16
  408224:	str	x26, [x4, #48]
  408228:	ldur	x3, [x20, #-40]
  40822c:	mov	x2, x25
  408230:	mov	w0, w24
  408234:	mov	x1, #0x0                   	// #0
  408238:	cbz	x3, 40824c <argp_parse@@Base+0x2a4>
  40823c:	ldur	w4, [x20, #-32]
  408240:	ldr	x3, [x3, #56]
  408244:	ldr	x3, [x3, x4, lsl #3]
  408248:	stur	x3, [x20, #-24]
  40824c:	ldur	x3, [x20, #-72]
  408250:	cbz	x3, 4084d8 <argp_parse@@Base+0x530>
  408254:	ldur	x4, [x20, #-8]
  408258:	ldur	w5, [x20, #-48]
  40825c:	str	x4, [x29, #400]
  408260:	ldur	x4, [x20, #-24]
  408264:	str	x4, [x29, #384]
  408268:	ldur	x4, [x20, #-16]
  40826c:	str	w5, [x29, #376]
  408270:	str	x4, [x29, #392]
  408274:	blr	x3
  408278:	mov	w19, w0
  40827c:	ldr	x1, [x29, #400]
  408280:	stur	x1, [x20, #-8]
  408284:	ldr	x3, [x29, #320]
  408288:	cmp	x3, x20
  40828c:	b.ls	408730 <argp_parse@@Base+0x788>  // b.plast
  408290:	cmp	w0, #0x0
  408294:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  408298:	b.ne	4084b4 <argp_parse@@Base+0x50c>  // b.any
  40829c:	add	x20, x20, #0x48
  4082a0:	b	408228 <argp_parse@@Base+0x280>
  4082a4:	mov	w1, #0x2d                  	// #45
  4082a8:	add	x0, x23, #0x1
  4082ac:	strb	w1, [x27, x19]
  4082b0:	ldr	x1, [x29, #160]
  4082b4:	str	x0, [x29, #152]
  4082b8:	strb	wzr, [x0]
  4082bc:	str	xzr, [x1]
  4082c0:	str	x24, [x29, #232]
  4082c4:	cbnz	x24, 4081a4 <argp_parse@@Base+0x1fc>
  4082c8:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  4082cc:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  4082d0:	stp	xzr, xzr, [x29, #352]
  4082d4:	mov	w4, #0x1                   	// #1
  4082d8:	ldr	x3, [x1, #1248]
  4082dc:	stp	xzr, xzr, [x21, #136]
  4082e0:	mov	x1, x22
  4082e4:	ldr	x2, [x2, #1256]
  4082e8:	str	w4, [x29, #336]
  4082ec:	stp	x3, x2, [x29, #416]
  4082f0:	str	x21, [x29, #432]
  4082f4:	ldr	x4, [x29, #312]
  4082f8:	stp	xzr, xzr, [x21, #152]
  4082fc:	stp	xzr, xzr, [x21, #168]
  408300:	str	x4, [x29, #320]
  408304:	str	xzr, [x29, #344]
  408308:	str	w20, [x29, #352]
  40830c:	str	x22, [x29, #360]
  408310:	str	w25, [x29, #372]
  408314:	tbz	w25, #1, 40851c <argp_parse@@Base+0x574>
  408318:	str	wzr, [x29, #260]
  40831c:	ldr	w19, [x29, #352]
  408320:	tbnz	w25, #0, 408890 <argp_parse@@Base+0x8e8>
  408324:	cmp	x22, x1
  408328:	b.eq	408530 <argp_parse@@Base+0x588>  // b.none
  40832c:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  408330:	ldr	x0, [x0, #1264]
  408334:	str	x0, [x29, #408]
  408338:	ldr	w2, [x29, #336]
  40833c:	mov	w24, #0x6                   	// #6
  408340:	ldr	w28, [x29, #368]
  408344:	mov	w0, w19
  408348:	add	x20, x21, #0x70
  40834c:	mov	w25, #0xffffffff            	// #-1
  408350:	movk	w24, #0x100, lsl #16
  408354:	ldr	w1, [x29, #380]
  408358:	cbz	w1, 408368 <argp_parse@@Base+0x3c0>
  40835c:	cmp	w28, w1
  408360:	b.ge	40836c <argp_parse@@Base+0x3c4>  // b.tcont
  408364:	str	wzr, [x29, #380]
  408368:	cbnz	w2, 408660 <argp_parse@@Base+0x6b8>
  40836c:	cmp	w0, w28
  408370:	b.le	4085c0 <argp_parse@@Base+0x618>
  408374:	ldr	w0, [x29, #372]
  408378:	tbnz	w0, #2, 408750 <argp_parse@@Base+0x7a8>
  40837c:	ldr	x0, [x29, #360]
  408380:	ldr	x22, [x0, w28, sxtw #3]
  408384:	str	x22, [x29, #272]
  408388:	ldp	x26, x3, [x29, #312]
  40838c:	str	w28, [x29, #368]
  408390:	cmp	x26, x3
  408394:	b.cs	4085b8 <argp_parse@@Base+0x610>  // b.hs, b.nlast
  408398:	mov	w5, w28
  40839c:	nop
  4083a0:	mov	x27, x26
  4083a4:	ldr	x4, [x27]
  4083a8:	add	w6, w5, #0x1
  4083ac:	str	w6, [x29, #368]
  4083b0:	mov	x2, x20
  4083b4:	mov	x1, x22
  4083b8:	mov	w0, #0x0                   	// #0
  4083bc:	cbz	x4, 4085a8 <argp_parse@@Base+0x600>
  4083c0:	ldr	x3, [x27, #64]
  4083c4:	ldr	w5, [x27, #24]
  4083c8:	str	x3, [x29, #400]
  4083cc:	ldr	x3, [x27, #48]
  4083d0:	str	x3, [x29, #384]
  4083d4:	ldr	x3, [x27, #56]
  4083d8:	str	w5, [x29, #376]
  4083dc:	str	x3, [x29, #392]
  4083e0:	blr	x4
  4083e4:	mov	w19, w0
  4083e8:	ldr	x1, [x29, #400]
  4083ec:	str	x1, [x27, #64]
  4083f0:	cmp	w0, #0x7
  4083f4:	b.eq	408544 <argp_parse@@Base+0x59c>  // b.none
  4083f8:	add	x26, x27, #0x48
  4083fc:	cbnz	w0, 4088e0 <argp_parse@@Base+0x938>
  408400:	ldr	w0, [x29, #352]
  408404:	ldr	w1, [x29, #368]
  408408:	cmp	w28, w1
  40840c:	b.ge	4086b4 <argp_parse@@Base+0x70c>  // b.tcont
  408410:	ldur	w3, [x26, #-48]
  408414:	sub	w4, w1, w28
  408418:	ldr	w2, [x29, #336]
  40841c:	mov	w28, w1
  408420:	add	w1, w3, w4
  408424:	stur	w1, [x26, #-48]
  408428:	b	408354 <argp_parse@@Base+0x3ac>
  40842c:	cmp	w0, #0x7
  408430:	b.eq	4087f0 <argp_parse@@Base+0x848>  // b.none
  408434:	ldr	x20, [x29, #320]
  408438:	sub	x20, x20, #0x48
  40843c:	cmp	x20, x4
  408440:	b.cc	4084a0 <argp_parse@@Base+0x4f8>  // b.lo, b.ul, b.last
  408444:	mov	w22, #0x7                   	// #7
  408448:	add	x21, x21, #0x70
  40844c:	movk	w22, #0x100, lsl #16
  408450:	ldr	x3, [x20]
  408454:	mov	x2, x21
  408458:	mov	w0, w22
  40845c:	mov	x1, #0x0                   	// #0
  408460:	cbz	x3, 408494 <argp_parse@@Base+0x4ec>
  408464:	ldr	x4, [x20, #64]
  408468:	ldr	w5, [x20, #24]
  40846c:	str	x4, [x29, #400]
  408470:	ldr	x4, [x20, #48]
  408474:	str	x4, [x29, #384]
  408478:	ldr	x4, [x20, #56]
  40847c:	str	w5, [x29, #376]
  408480:	str	x4, [x29, #392]
  408484:	blr	x3
  408488:	ldr	x0, [x29, #400]
  40848c:	str	x0, [x20, #64]
  408490:	ldr	x4, [x29, #312]
  408494:	sub	x20, x20, #0x48
  408498:	cmp	x20, x4
  40849c:	b.cs	408450 <argp_parse@@Base+0x4a8>  // b.hs, b.nlast
  4084a0:	cmp	w19, #0x7
  4084a4:	mov	w0, #0x16                  	// #22
  4084a8:	csel	w19, w19, w0, ne  // ne = any
  4084ac:	ldr	x0, [x29, #440]
  4084b0:	bl	401d30 <free@plt>
  4084b4:	mov	sp, x29
  4084b8:	mov	w0, w19
  4084bc:	ldp	x19, x20, [sp, #16]
  4084c0:	ldp	x21, x22, [sp, #32]
  4084c4:	ldp	x23, x24, [sp, #48]
  4084c8:	ldp	x25, x26, [sp, #64]
  4084cc:	ldp	x27, x28, [sp, #80]
  4084d0:	ldp	x29, x30, [sp], #448
  4084d4:	ret
  4084d8:	ldur	x3, [x20, #-64]
  4084dc:	ldr	x3, [x3, #32]
  4084e0:	cbz	x3, 408500 <argp_parse@@Base+0x558>
  4084e4:	ldr	x3, [x3]
  4084e8:	cbz	x3, 408500 <argp_parse@@Base+0x558>
  4084ec:	ldp	x4, x3, [x20, #-24]
  4084f0:	str	x4, [x3]
  4084f4:	ldur	x3, [x20, #-72]
  4084f8:	cbnz	x3, 408254 <argp_parse@@Base+0x2ac>
  4084fc:	nop
  408500:	ldr	x3, [x29, #320]
  408504:	cmp	x20, x3
  408508:	b.cc	40829c <argp_parse@@Base+0x2f4>  // b.lo, b.ul, b.last
  40850c:	ldr	w25, [x29, #372]
  408510:	ldr	x1, [x29, #360]
  408514:	nop
  408518:	tbnz	w25, #1, 408318 <argp_parse@@Base+0x370>
  40851c:	mov	w0, #0x1                   	// #1
  408520:	str	w0, [x29, #260]
  408524:	ldr	w19, [x29, #352]
  408528:	cmp	x22, x1
  40852c:	b.ne	40832c <argp_parse@@Base+0x384>  // b.any
  408530:	ldr	x0, [x22]
  408534:	cbz	x0, 40832c <argp_parse@@Base+0x384>
  408538:	bl	408ca0 <argp_parse@@Base+0xcf8>
  40853c:	str	x0, [x29, #408]
  408540:	b	408338 <argp_parse@@Base+0x390>
  408544:	mov	x26, x27
  408548:	ldr	w5, [x29, #368]
  40854c:	sub	w5, w5, #0x1
  408550:	ldr	x3, [x26], #72
  408554:	str	w5, [x29, #368]
  408558:	cbz	x3, 408be0 <argp_parse@@Base+0xc38>
  40855c:	ldp	x6, x5, [x27, #48]
  408560:	mov	x2, x20
  408564:	ldr	w7, [x27, #24]
  408568:	mov	w0, w24
  40856c:	ldr	x4, [x27, #64]
  408570:	str	w7, [x29, #376]
  408574:	stp	x6, x5, [x29, #384]
  408578:	mov	x1, #0x0                   	// #0
  40857c:	str	x4, [x29, #400]
  408580:	blr	x3
  408584:	mov	w19, w0
  408588:	ldr	x3, [x29, #320]
  40858c:	ldr	x0, [x29, #400]
  408590:	str	x0, [x27, #64]
  408594:	cmp	x3, x26
  408598:	ccmp	w19, #0x7, #0x0, hi  // hi = pmore
  40859c:	b.ne	408bec <argp_parse@@Base+0xc44>  // b.any
  4085a0:	ldr	w5, [x29, #368]
  4085a4:	b	4083a0 <argp_parse@@Base+0x3f8>
  4085a8:	add	x27, x27, #0x48
  4085ac:	str	w5, [x29, #368]
  4085b0:	cmp	x27, x3
  4085b4:	b.cc	4083a4 <argp_parse@@Base+0x3fc>  // b.lo, b.ul, b.last
  4085b8:	ldr	w0, [x29, #352]
  4085bc:	ldr	w28, [x29, #368]
  4085c0:	cmp	w0, w28
  4085c4:	b.ne	408750 <argp_parse@@Base+0x7a8>  // b.any
  4085c8:	ldp	x20, x3, [x29, #312]
  4085cc:	mov	x4, x20
  4085d0:	cmp	x20, x3
  4085d4:	b.cs	408ba8 <argp_parse@@Base+0xc00>  // b.hs, b.nlast
  4085d8:	mov	w22, #0x2                   	// #2
  4085dc:	add	x24, x21, #0x70
  4085e0:	mov	w19, #0x0                   	// #0
  4085e4:	movk	w22, #0x100, lsl #16
  4085e8:	b	408630 <argp_parse@@Base+0x688>
  4085ec:	ldur	x3, [x20, #-8]
  4085f0:	str	x3, [x29, #400]
  4085f4:	ldur	x3, [x20, #-24]
  4085f8:	str	x3, [x29, #384]
  4085fc:	ldur	x3, [x20, #-16]
  408600:	str	wzr, [x29, #376]
  408604:	str	x3, [x29, #392]
  408608:	blr	x4
  40860c:	mov	w19, w0
  408610:	ldr	x1, [x29, #400]
  408614:	stur	x1, [x20, #-8]
  408618:	ldr	x3, [x29, #320]
  40861c:	cmp	x20, x3
  408620:	b.cs	408ad8 <argp_parse@@Base+0xb30>  // b.hs, b.nlast
  408624:	cmp	w19, #0x0
  408628:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  40862c:	b.ne	4088c8 <argp_parse@@Base+0x920>  // b.any
  408630:	ldr	w4, [x20, #24]
  408634:	mov	x2, x24
  408638:	mov	w0, w22
  40863c:	add	x20, x20, #0x48
  408640:	mov	x1, #0x0                   	// #0
  408644:	cbnz	w4, 40861c <argp_parse@@Base+0x674>
  408648:	ldur	x4, [x20, #-72]
  40864c:	cbnz	x4, 4085ec <argp_parse@@Base+0x644>
  408650:	cmp	x20, x3
  408654:	b.cs	408bc4 <argp_parse@@Base+0xc1c>  // b.hs, b.nlast
  408658:	mov	w19, #0x7                   	// #7
  40865c:	b	408630 <argp_parse@@Base+0x688>
  408660:	ldr	w4, [x29, #372]
  408664:	str	w28, [x29, #256]
  408668:	str	w25, [x29, #264]
  40866c:	ldp	x2, x3, [x29, #240]
  408670:	ldr	x1, [x29, #360]
  408674:	tbz	w4, #6, 4086c8 <argp_parse@@Base+0x720>
  408678:	add	x5, x21, #0x18
  40867c:	mov	x4, #0x0                   	// #0
  408680:	bl	4097b0 <argp_parse@@Base+0x1808>
  408684:	ldr	w28, [x29, #256]
  408688:	str	w28, [x29, #368]
  40868c:	mov	w22, w0
  408690:	cmn	w22, #0x1
  408694:	b.eq	4086e8 <argp_parse@@Base+0x740>  // b.none
  408698:	cmp	w22, #0x3f
  40869c:	b.eq	408808 <argp_parse@@Base+0x860>  // b.none
  4086a0:	cmp	w22, #0x1
  4086a4:	b.ne	4089e0 <argp_parse@@Base+0xa38>  // b.any
  4086a8:	sub	w28, w28, #0x1
  4086ac:	ldr	x22, [x29, #272]
  4086b0:	b	408388 <argp_parse@@Base+0x3e0>
  4086b4:	mov	w28, w1
  4086b8:	mov	w1, #0x1                   	// #1
  4086bc:	mov	w2, w1
  4086c0:	str	w1, [x29, #336]
  4086c4:	b	408354 <argp_parse@@Base+0x3ac>
  4086c8:	add	x5, x21, #0x18
  4086cc:	mov	x4, #0x0                   	// #0
  4086d0:	bl	409790 <argp_parse@@Base+0x17e8>
  4086d4:	ldr	w28, [x29, #256]
  4086d8:	str	w28, [x29, #368]
  4086dc:	mov	w22, w0
  4086e0:	cmn	w22, #0x1
  4086e4:	b.ne	408698 <argp_parse@@Base+0x6f0>  // b.any
  4086e8:	str	wzr, [x29, #336]
  4086ec:	cmp	w28, #0x1
  4086f0:	b.le	408748 <argp_parse@@Base+0x7a0>
  4086f4:	mov	x0, #0xfffffffffffffff8    	// #-8
  4086f8:	ldr	x1, [x29, #360]
  4086fc:	add	x0, x0, w28, sxtw #3
  408700:	ldr	x0, [x1, x0]
  408704:	ldrb	w1, [x0]
  408708:	cmp	w1, #0x2d
  40870c:	b.ne	408748 <argp_parse@@Base+0x7a0>  // b.any
  408710:	ldrb	w1, [x0, #1]
  408714:	cmp	w1, #0x2d
  408718:	b.ne	408748 <argp_parse@@Base+0x7a0>  // b.any
  40871c:	ldrb	w0, [x0, #2]
  408720:	cbnz	w0, 408748 <argp_parse@@Base+0x7a0>
  408724:	ldr	w0, [x29, #352]
  408728:	str	w28, [x29, #380]
  40872c:	b	40836c <argp_parse@@Base+0x3c4>
  408730:	cmp	w0, #0x0
  408734:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  408738:	b.ne	4084b4 <argp_parse@@Base+0x50c>  // b.any
  40873c:	ldr	w25, [x29, #372]
  408740:	ldr	x1, [x29, #360]
  408744:	b	408518 <argp_parse@@Base+0x570>
  408748:	ldr	w0, [x29, #352]
  40874c:	b	40836c <argp_parse@@Base+0x3c4>
  408750:	ldr	x0, [x29, #104]
  408754:	cbz	x0, 40897c <argp_parse@@Base+0x9d4>
  408758:	ldp	x4, x3, [x29, #312]
  40875c:	str	w28, [x0]
  408760:	sub	x20, x3, #0x48
  408764:	cmp	x20, x4
  408768:	b.cc	408bbc <argp_parse@@Base+0xc14>  // b.lo, b.ul, b.last
  40876c:	mov	w22, #0x4                   	// #4
  408770:	add	x23, x21, #0x70
  408774:	movk	w22, #0x100, lsl #16
  408778:	ldr	x3, [x20], #-72
  40877c:	mov	x2, x23
  408780:	mov	w0, w22
  408784:	mov	x1, #0x0                   	// #0
  408788:	cbz	x3, 4087e8 <argp_parse@@Base+0x840>
  40878c:	ldr	x4, [x20, #136]
  408790:	ldr	w5, [x20, #96]
  408794:	str	x4, [x29, #400]
  408798:	ldr	x4, [x20, #120]
  40879c:	str	x4, [x29, #384]
  4087a0:	ldr	x4, [x20, #128]
  4087a4:	str	w5, [x29, #376]
  4087a8:	str	x4, [x29, #392]
  4087ac:	blr	x3
  4087b0:	mov	w19, w0
  4087b4:	ldr	x1, [x29, #400]
  4087b8:	str	x1, [x20, #136]
  4087bc:	ldr	x4, [x29, #312]
  4087c0:	cmp	x4, x20
  4087c4:	b.hi	40842c <argp_parse@@Base+0x484>  // b.pmore
  4087c8:	cmp	w0, #0x0
  4087cc:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  4087d0:	b.ne	408434 <argp_parse@@Base+0x48c>  // b.any
  4087d4:	ldr	x3, [x20], #-72
  4087d8:	mov	x2, x23
  4087dc:	mov	w0, w22
  4087e0:	mov	x1, #0x0                   	// #0
  4087e4:	cbnz	x3, 40878c <argp_parse@@Base+0x7e4>
  4087e8:	cmp	x4, x20
  4087ec:	b.ls	408778 <argp_parse@@Base+0x7d0>  // b.plast
  4087f0:	ldr	x20, [x29, #320]
  4087f4:	mov	w19, #0x0                   	// #0
  4087f8:	sub	x20, x20, #0x48
  4087fc:	cmp	x20, x4
  408800:	b.cs	408444 <argp_parse@@Base+0x49c>  // b.hs, b.nlast
  408804:	b	4084ac <argp_parse@@Base+0x504>
  408808:	ldr	w0, [x29, #264]
  40880c:	cmn	w0, #0x1
  408810:	b.ne	4088e8 <argp_parse@@Base+0x940>  // b.any
  408814:	ldr	x0, [x29, #240]
  408818:	mov	w1, w22
  40881c:	bl	401d70 <strchr@plt>
  408820:	cbz	x0, 4089b0 <argp_parse@@Base+0xa08>
  408824:	ldp	x26, x2, [x29, #312]
  408828:	cmp	x26, x2
  40882c:	b.cc	408840 <argp_parse@@Base+0x898>  // b.lo, b.ul, b.last
  408830:	b	4089b0 <argp_parse@@Base+0xa08>
  408834:	add	x26, x26, #0x48
  408838:	cmp	x26, x2
  40883c:	b.cs	4089b0 <argp_parse@@Base+0xa08>  // b.hs, b.nlast
  408840:	ldr	x1, [x26, #16]
  408844:	cmp	x0, x1
  408848:	b.cs	408834 <argp_parse@@Base+0x88c>  // b.hs, b.nlast
  40884c:	ldr	x3, [x26]
  408850:	cbz	x3, 4089b0 <argp_parse@@Base+0xa08>
  408854:	ldp	x6, x5, [x26, #48]
  408858:	mov	x2, x20
  40885c:	ldr	w7, [x26, #24]
  408860:	mov	w0, w22
  408864:	ldr	x4, [x26, #64]
  408868:	str	w7, [x29, #376]
  40886c:	ldr	x1, [x29, #272]
  408870:	stp	x6, x5, [x29, #384]
  408874:	mov	w27, #0x0                   	// #0
  408878:	str	x4, [x29, #400]
  40887c:	blr	x3
  408880:	mov	w19, w0
  408884:	ldr	x1, [x29, #400]
  408888:	str	x1, [x26, #64]
  40888c:	b	408a3c <argp_parse@@Base+0xa94>
  408890:	sub	x1, x1, #0x8
  408894:	add	w19, w19, #0x1
  408898:	str	w19, [x29, #352]
  40889c:	str	x1, [x29, #360]
  4088a0:	b	408324 <argp_parse@@Base+0x37c>
  4088a4:	adrp	x19, 427000 <argp_error@@Base+0x1a3a0>
  4088a8:	ldr	x1, [x2]
  4088ac:	str	x1, [x0, #1240]
  4088b0:	ldr	x0, [x19, #1264]
  4088b4:	cbnz	x0, 407ff8 <argp_parse@@Base+0x50>
  4088b8:	ldr	x0, [x22]
  4088bc:	bl	408ca0 <argp_parse@@Base+0xcf8>
  4088c0:	str	x0, [x19, #1264]
  4088c4:	b	407ff8 <argp_parse@@Base+0x50>
  4088c8:	ldr	x4, [x29, #312]
  4088cc:	sub	x3, x3, #0x48
  4088d0:	cmp	x4, x3
  4088d4:	b.ls	408b5c <argp_parse@@Base+0xbb4>  // b.plast
  4088d8:	ldr	x0, [x29, #104]
  4088dc:	cbnz	x0, 408b64 <argp_parse@@Base+0xbbc>
  4088e0:	cmp	w19, #0x7
  4088e4:	b.ne	4088fc <argp_parse@@Base+0x954>  // b.any
  4088e8:	ldr	x1, [x29, #416]
  4088ec:	mov	w19, #0x7                   	// #7
  4088f0:	add	x0, x21, #0x70
  4088f4:	mov	w2, #0x104                 	// #260
  4088f8:	bl	40cbc0 <argp_state_help@@Base>
  4088fc:	ldr	x3, [x29, #320]
  408900:	mov	x20, x3
  408904:	ldr	x22, [x29, #312]
  408908:	cmp	x3, x22
  40890c:	mov	x4, x22
  408910:	b.ls	408438 <argp_parse@@Base+0x490>  // b.plast
  408914:	mov	w23, #0x5                   	// #5
  408918:	add	x24, x21, #0x70
  40891c:	movk	w23, #0x100, lsl #16
  408920:	ldr	x4, [x22]
  408924:	mov	x2, x24
  408928:	mov	w0, w23
  40892c:	mov	x1, #0x0                   	// #0
  408930:	cbz	x4, 408964 <argp_parse@@Base+0x9bc>
  408934:	ldr	x3, [x22, #64]
  408938:	ldr	w5, [x22, #24]
  40893c:	str	x3, [x29, #400]
  408940:	ldr	x3, [x22, #48]
  408944:	str	x3, [x29, #384]
  408948:	ldr	x3, [x22, #56]
  40894c:	str	w5, [x29, #376]
  408950:	str	x3, [x29, #392]
  408954:	blr	x4
  408958:	ldr	x0, [x29, #400]
  40895c:	str	x0, [x22, #64]
  408960:	ldr	x3, [x29, #320]
  408964:	add	x22, x22, #0x48
  408968:	mov	x20, x3
  40896c:	cmp	x22, x3
  408970:	b.cc	408920 <argp_parse@@Base+0x978>  // b.lo, b.ul, b.last
  408974:	ldr	x4, [x29, #312]
  408978:	b	408438 <argp_parse@@Base+0x490>
  40897c:	ldr	w0, [x29, #372]
  408980:	ldr	x1, [x29, #416]
  408984:	tbnz	w0, #1, 4088ec <argp_parse@@Base+0x944>
  408988:	cbz	x1, 4088ec <argp_parse@@Base+0x944>
  40898c:	ldr	x2, [x29, #408]
  408990:	mov	x0, x1
  408994:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  408998:	add	x1, x1, #0xfb0
  40899c:	bl	401ed0 <fprintf@plt>
  4089a0:	ldr	x1, [x29, #416]
  4089a4:	b	4088ec <argp_parse@@Base+0x944>
  4089a8:	cbnz	w27, 408a58 <argp_parse@@Base+0xab0>
  4089ac:	nop
  4089b0:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  4089b4:	add	x3, x3, #0x90
  4089b8:	add	x0, x21, #0x70
  4089bc:	add	x3, x3, #0x70
  4089c0:	mov	w2, w22
  4089c4:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  4089c8:	add	x1, x1, #0xf98
  4089cc:	bl	40cc60 <argp_error@@Base>
  4089d0:	add	w0, w22, #0x1
  4089d4:	and	w0, w0, #0xfffffffd
  4089d8:	cbnz	w0, 4088e8 <argp_parse@@Base+0x940>
  4089dc:	b	4085b8 <argp_parse@@Base+0x610>
  4089e0:	cmp	wzr, w22, asr #24
  4089e4:	asr	w27, w22, #24
  4089e8:	b.eq	408814 <argp_parse@@Base+0x86c>  // b.none
  4089ec:	mov	x0, #0xffffffffffffffb8    	// #-72
  4089f0:	mov	w1, #0x48                  	// #72
  4089f4:	ldr	x2, [x29, #312]
  4089f8:	smaddl	x1, w27, w1, x0
  4089fc:	sbfx	x0, x22, #0, #24
  408a00:	add	x26, x2, x1
  408a04:	ldr	x3, [x2, x1]
  408a08:	cbz	x3, 408a58 <argp_parse@@Base+0xab0>
  408a0c:	ldp	x6, x5, [x26, #48]
  408a10:	mov	x2, x20
  408a14:	ldr	w7, [x26, #24]
  408a18:	ldr	x4, [x26, #64]
  408a1c:	str	w7, [x29, #376]
  408a20:	ldr	x1, [x29, #272]
  408a24:	stp	x6, x5, [x29, #384]
  408a28:	str	x4, [x29, #400]
  408a2c:	blr	x3
  408a30:	mov	w19, w0
  408a34:	ldr	x0, [x29, #400]
  408a38:	str	x0, [x26, #64]
  408a3c:	cmp	w19, #0x7
  408a40:	b.eq	4089a8 <argp_parse@@Base+0xa00>  // b.none
  408a44:	cbnz	w19, 4088e0 <argp_parse@@Base+0x938>
  408a48:	ldr	w2, [x29, #336]
  408a4c:	ldr	w0, [x29, #352]
  408a50:	ldr	w28, [x29, #368]
  408a54:	b	408354 <argp_parse@@Base+0x3ac>
  408a58:	ldr	x0, [x29, #248]
  408a5c:	ldr	w1, [x0, #24]
  408a60:	cmp	w22, w1
  408a64:	b.ne	408a78 <argp_parse@@Base+0xad0>  // b.any
  408a68:	b	408acc <argp_parse@@Base+0xb24>
  408a6c:	ldr	w1, [x0, #24]
  408a70:	cmp	w22, w1
  408a74:	b.eq	408acc <argp_parse@@Base+0xb24>  // b.none
  408a78:	ldr	x1, [x0]
  408a7c:	add	x0, x0, #0x20
  408a80:	cbnz	x1, 408a6c <argp_parse@@Base+0xac4>
  408a84:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  408a88:	add	x2, x2, #0xf90
  408a8c:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  408a90:	add	x3, x3, #0x90
  408a94:	add	x0, x21, #0x70
  408a98:	add	x3, x3, #0x70
  408a9c:	adrp	x1, 410000 <argp_error@@Base+0x33a0>
  408aa0:	add	x1, x1, #0xfa0
  408aa4:	bl	40cc60 <argp_error@@Base>
  408aa8:	add	w0, w22, #0x1
  408aac:	and	w0, w0, #0xfffffffd
  408ab0:	cbnz	w0, 4088e8 <argp_parse@@Base+0x940>
  408ab4:	b	4085b8 <argp_parse@@Base+0x610>
  408ab8:	adrp	x4, 427000 <argp_error@@Base+0x1a3a0>
  408abc:	ldr	x4, [x4, #1448]
  408ac0:	cbnz	x4, 4080a4 <argp_parse@@Base+0xfc>
  408ac4:	add	x4, x3, #0x20
  408ac8:	b	4080b0 <argp_parse@@Base+0x108>
  408acc:	ldr	x2, [x0]
  408ad0:	cbnz	x2, 408a8c <argp_parse@@Base+0xae4>
  408ad4:	b	408a84 <argp_parse@@Base+0xadc>
  408ad8:	ldr	x4, [x29, #312]
  408adc:	sub	x20, x3, #0x48
  408ae0:	cmp	x20, x4
  408ae4:	b.cc	408b9c <argp_parse@@Base+0xbf4>  // b.lo, b.ul, b.last
  408ae8:	cmp	w19, #0x0
  408aec:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  408af0:	b.ne	408b5c <argp_parse@@Base+0xbb4>  // b.any
  408af4:	mov	w22, #0x1                   	// #1
  408af8:	add	x24, x21, #0x70
  408afc:	movk	w22, #0x100, lsl #16
  408b00:	ldr	x3, [x20], #-72
  408b04:	mov	x2, x24
  408b08:	mov	w0, w22
  408b0c:	mov	x1, #0x0                   	// #0
  408b10:	cbz	x3, 408b7c <argp_parse@@Base+0xbd4>
  408b14:	ldr	x4, [x20, #136]
  408b18:	ldr	w5, [x20, #96]
  408b1c:	str	x4, [x29, #400]
  408b20:	ldr	x4, [x20, #120]
  408b24:	str	x4, [x29, #384]
  408b28:	ldr	x4, [x20, #128]
  408b2c:	str	w5, [x29, #376]
  408b30:	str	x4, [x29, #392]
  408b34:	blr	x3
  408b38:	mov	w19, w0
  408b3c:	ldr	x1, [x29, #400]
  408b40:	str	x1, [x20, #136]
  408b44:	ldr	x4, [x29, #312]
  408b48:	cmp	x4, x20
  408b4c:	b.hi	408b9c <argp_parse@@Base+0xbf4>  // b.pmore
  408b50:	cmp	w0, #0x0
  408b54:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  408b58:	b.eq	408b00 <argp_parse@@Base+0xb58>  // b.none
  408b5c:	ldr	x0, [x29, #104]
  408b60:	cbz	x0, 408b70 <argp_parse@@Base+0xbc8>
  408b64:	ldr	x1, [x29, #104]
  408b68:	ldr	w0, [x29, #368]
  408b6c:	str	w0, [x1]
  408b70:	cbnz	w19, 4088e0 <argp_parse@@Base+0x938>
  408b74:	ldr	x3, [x29, #320]
  408b78:	b	408760 <argp_parse@@Base+0x7b8>
  408b7c:	cmp	x4, x20
  408b80:	b.ls	408b00 <argp_parse@@Base+0xb58>  // b.plast
  408b84:	ldr	x3, [x29, #320]
  408b88:	ldr	x1, [x29, #104]
  408b8c:	cbz	x1, 408760 <argp_parse@@Base+0x7b8>
  408b90:	ldr	w0, [x29, #368]
  408b94:	str	w0, [x1]
  408b98:	b	408760 <argp_parse@@Base+0x7b8>
  408b9c:	cmp	w19, #0x7
  408ba0:	b.eq	408b84 <argp_parse@@Base+0xbdc>  // b.none
  408ba4:	b	408b5c <argp_parse@@Base+0xbb4>
  408ba8:	sub	x20, x3, #0x48
  408bac:	cmp	x4, x20
  408bb0:	b.ls	408af4 <argp_parse@@Base+0xb4c>  // b.plast
  408bb4:	ldr	x1, [x29, #104]
  408bb8:	cbnz	x1, 408b90 <argp_parse@@Base+0xbe8>
  408bbc:	mov	w19, #0x0                   	// #0
  408bc0:	b	4084ac <argp_parse@@Base+0x504>
  408bc4:	ldr	x4, [x29, #312]
  408bc8:	sub	x20, x3, #0x48
  408bcc:	cmp	x4, x20
  408bd0:	b.ls	408af4 <argp_parse@@Base+0xb4c>  // b.plast
  408bd4:	b	408b88 <argp_parse@@Base+0xbe0>
  408bd8:	mov	w19, #0xc                   	// #12
  408bdc:	b	4084b4 <argp_parse@@Base+0x50c>
  408be0:	mov	x27, x26
  408be4:	ldr	x3, [x29, #320]
  408be8:	b	4085b0 <argp_parse@@Base+0x608>
  408bec:	cbnz	w19, 408c00 <argp_parse@@Base+0xc58>
  408bf0:	ldr	w0, [x29, #352]
  408bf4:	str	w0, [x29, #368]
  408bf8:	mov	w1, w0
  408bfc:	b	408408 <argp_parse@@Base+0x460>
  408c00:	cmp	w19, #0x7
  408c04:	b.eq	4085b8 <argp_parse@@Base+0x610>  // b.none
  408c08:	b	408900 <argp_parse@@Base+0x958>
  408c0c:	nop
  408c10:	cbz	x1, 408c48 <argp_parse@@Base+0xca0>
  408c14:	ldr	x2, [x1, #88]
  408c18:	ldp	x1, x3, [x2, #80]
  408c1c:	cmp	x1, x3
  408c20:	b.cc	408c34 <argp_parse@@Base+0xc8c>  // b.lo, b.ul, b.last
  408c24:	b	408c48 <argp_parse@@Base+0xca0>
  408c28:	add	x1, x1, #0x48
  408c2c:	cmp	x1, x3
  408c30:	b.cs	408c48 <argp_parse@@Base+0xca0>  // b.hs, b.nlast
  408c34:	ldr	x2, [x1, #8]
  408c38:	cmp	x2, x0
  408c3c:	b.ne	408c28 <argp_parse@@Base+0xc80>  // b.any
  408c40:	ldr	x0, [x1, #48]
  408c44:	ret
  408c48:	mov	x0, #0x0                   	// #0
  408c4c:	ret
  408c50:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  408c54:	add	x5, x1, #0x5b0
  408c58:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  408c5c:	adrp	x2, 411000 <argp_error@@Base+0x43a0>
  408c60:	ldr	x4, [x1, #1456]
  408c64:	add	x3, x3, #0x288
  408c68:	ldr	x1, [x5, #8]
  408c6c:	add	x2, x2, #0x290
  408c70:	b	409370 <argp_parse@@Base+0x13c8>
  408c74:	nop
  408c78:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  408c7c:	add	x4, x3, #0x5b0
  408c80:	adrp	x5, 427000 <argp_error@@Base+0x1a3a0>
  408c84:	adrp	x2, 408000 <argp_parse@@Base+0x58>
  408c88:	str	x1, [x3, #1456]
  408c8c:	add	x2, x2, #0xc50
  408c90:	str	x2, [x5, #1448]
  408c94:	str	x0, [x4, #8]
  408c98:	ret
  408c9c:	nop
  408ca0:	ldrb	w1, [x0]
  408ca4:	cmp	w1, #0x2f
  408ca8:	b.ne	408cbc <argp_parse@@Base+0xd14>  // b.any
  408cac:	nop
  408cb0:	ldrb	w1, [x0, #1]!
  408cb4:	cmp	w1, #0x2f
  408cb8:	b.eq	408cb0 <argp_parse@@Base+0xd08>  // b.none
  408cbc:	cbz	w1, 408cf4 <argp_parse@@Base+0xd4c>
  408cc0:	mov	x2, x0
  408cc4:	mov	w3, #0x0                   	// #0
  408cc8:	b	408ce0 <argp_parse@@Base+0xd38>
  408ccc:	cbz	w3, 408cd8 <argp_parse@@Base+0xd30>
  408cd0:	mov	x0, x2
  408cd4:	mov	w3, #0x0                   	// #0
  408cd8:	ldrb	w1, [x2, #1]!
  408cdc:	cbz	w1, 408cf4 <argp_parse@@Base+0xd4c>
  408ce0:	cmp	w1, #0x2f
  408ce4:	b.ne	408ccc <argp_parse@@Base+0xd24>  // b.any
  408ce8:	ldrb	w1, [x2, #1]!
  408cec:	mov	w3, #0x1                   	// #1
  408cf0:	cbnz	w1, 408ce0 <argp_parse@@Base+0xd38>
  408cf4:	ret
  408cf8:	stp	x29, x30, [sp, #-32]!
  408cfc:	mov	x29, sp
  408d00:	str	x19, [sp, #16]
  408d04:	mov	x19, x0
  408d08:	bl	401b00 <strlen@plt>
  408d0c:	subs	x1, x0, #0x1
  408d10:	b.ls	408d20 <argp_parse@@Base+0xd78>  // b.plast
  408d14:	ldrb	w2, [x19, x1]
  408d18:	cmp	w2, #0x2f
  408d1c:	b.eq	408d2c <argp_parse@@Base+0xd84>  // b.none
  408d20:	ldr	x19, [sp, #16]
  408d24:	ldp	x29, x30, [sp], #32
  408d28:	ret
  408d2c:	mov	x0, x1
  408d30:	b	408d0c <argp_parse@@Base+0xd64>
  408d34:	nop
  408d38:	stp	x29, x30, [sp, #-48]!
  408d3c:	mov	x29, sp
  408d40:	stp	x19, x20, [sp, #16]
  408d44:	cbz	x0, 408e1c <argp_parse@@Base+0xe74>
  408d48:	mov	x19, x0
  408d4c:	mov	w1, #0x2f                  	// #47
  408d50:	bl	401cb0 <strrchr@plt>
  408d54:	mov	x20, x0
  408d58:	cbz	x0, 408dbc <argp_parse@@Base+0xe14>
  408d5c:	str	x21, [sp, #32]
  408d60:	add	x21, x0, #0x1
  408d64:	sub	x0, x21, x19
  408d68:	cmp	x0, #0x6
  408d6c:	b.le	408dd8 <argp_parse@@Base+0xe30>
  408d70:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  408d74:	sub	x0, x20, #0x6
  408d78:	add	x1, x1, #0x2d8
  408d7c:	mov	x2, #0x7                   	// #7
  408d80:	bl	401c00 <strncmp@plt>
  408d84:	cbnz	w0, 408dd8 <argp_parse@@Base+0xe30>
  408d88:	ldrb	w0, [x20, #1]
  408d8c:	cmp	w0, #0x6c
  408d90:	b.ne	408df8 <argp_parse@@Base+0xe50>  // b.any
  408d94:	ldrb	w0, [x21, #1]
  408d98:	cmp	w0, #0x74
  408d9c:	b.ne	408df8 <argp_parse@@Base+0xe50>  // b.any
  408da0:	ldrb	w0, [x21, #2]
  408da4:	cmp	w0, #0x2d
  408da8:	b.ne	408df8 <argp_parse@@Base+0xe50>  // b.any
  408dac:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  408db0:	add	x19, x20, #0x4
  408db4:	ldr	x21, [sp, #32]
  408db8:	str	x19, [x0, #1264]
  408dbc:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  408dc0:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  408dc4:	str	x19, [x1, #1472]
  408dc8:	str	x19, [x0, #1240]
  408dcc:	ldp	x19, x20, [sp, #16]
  408dd0:	ldp	x29, x30, [sp], #48
  408dd4:	ret
  408dd8:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  408ddc:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  408de0:	ldr	x21, [sp, #32]
  408de4:	str	x19, [x1, #1472]
  408de8:	str	x19, [x0, #1240]
  408dec:	ldp	x19, x20, [sp, #16]
  408df0:	ldp	x29, x30, [sp], #48
  408df4:	ret
  408df8:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  408dfc:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  408e00:	mov	x19, x21
  408e04:	str	x19, [x1, #1472]
  408e08:	str	x19, [x0, #1240]
  408e0c:	ldp	x19, x20, [sp, #16]
  408e10:	ldr	x21, [sp, #32]
  408e14:	ldp	x29, x30, [sp], #48
  408e18:	ret
  408e1c:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  408e20:	mov	x2, #0x37                  	// #55
  408e24:	mov	x1, #0x1                   	// #1
  408e28:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  408e2c:	ldr	x3, [x3, #1248]
  408e30:	add	x0, x0, #0x2a0
  408e34:	str	x21, [sp, #32]
  408e38:	bl	401d80 <fwrite@plt>
  408e3c:	bl	401cd0 <abort@plt>
  408e40:	stp	x29, x30, [sp, #-208]!
  408e44:	mov	x29, sp
  408e48:	stp	x19, x20, [sp, #16]
  408e4c:	mov	x20, x1
  408e50:	stp	x21, x22, [sp, #32]
  408e54:	mov	x21, x0
  408e58:	stp	x23, x24, [sp, #48]
  408e5c:	bl	401bb0 <fileno@plt>
  408e60:	add	x2, sp, #0x50
  408e64:	mov	w1, w0
  408e68:	mov	w0, #0x0                   	// #0
  408e6c:	bl	401df0 <__fxstat@plt>
  408e70:	tbnz	w0, #31, 408e84 <argp_parse@@Base+0xedc>
  408e74:	ldr	w0, [sp, #96]
  408e78:	and	w0, w0, #0xf000
  408e7c:	cmp	w0, #0x8, lsl #12
  408e80:	b.eq	408f94 <argp_parse@@Base+0xfec>  // b.none
  408e84:	mov	x19, #0x2000                	// #8192
  408e88:	mov	x0, x19
  408e8c:	bl	401be0 <malloc@plt>
  408e90:	mov	x24, x0
  408e94:	cbz	x0, 408f6c <argp_parse@@Base+0xfc4>
  408e98:	mov	x23, #0x0                   	// #0
  408e9c:	mov	x22, #0xffffffffffffffff    	// #-1
  408ea0:	str	x25, [sp, #64]
  408ea4:	b	408ec8 <argp_parse@@Base+0xf20>
  408ea8:	cmn	x19, #0x1
  408eac:	b.eq	408f84 <argp_parse@@Base+0xfdc>  // b.none
  408eb0:	cmp	x1, x19
  408eb4:	csel	x19, x4, x22, hi  // hi = pmore
  408eb8:	mov	x1, x19
  408ebc:	bl	401c70 <realloc@plt>
  408ec0:	cbz	x0, 408f48 <argp_parse@@Base+0xfa0>
  408ec4:	mov	x24, x0
  408ec8:	sub	x25, x19, x23
  408ecc:	mov	x3, x21
  408ed0:	add	x0, x24, x23
  408ed4:	mov	x1, #0x1                   	// #1
  408ed8:	mov	x2, x25
  408edc:	bl	401d20 <fread@plt>
  408ee0:	lsr	x3, x19, #1
  408ee4:	mvn	x1, x3
  408ee8:	add	x4, x19, x3
  408eec:	mov	x3, x0
  408ef0:	mov	x0, x24
  408ef4:	add	x23, x23, x3
  408ef8:	cmp	x25, x3
  408efc:	b.eq	408ea8 <argp_parse@@Base+0xf00>  // b.none
  408f00:	bl	401ea0 <__errno_location@plt>
  408f04:	mov	x22, x0
  408f08:	mov	x0, x21
  408f0c:	ldr	w21, [x22]
  408f10:	bl	401ef0 <ferror@plt>
  408f14:	cbnz	w0, 408f58 <argp_parse@@Base+0xfb0>
  408f18:	sub	x19, x19, #0x1
  408f1c:	cmp	x19, x23
  408f20:	b.hi	408fcc <argp_parse@@Base+0x1024>  // b.pmore
  408f24:	strb	wzr, [x24, x23]
  408f28:	mov	x0, x24
  408f2c:	ldr	x25, [sp, #64]
  408f30:	str	x23, [x20]
  408f34:	ldp	x19, x20, [sp, #16]
  408f38:	ldp	x21, x22, [sp, #32]
  408f3c:	ldp	x23, x24, [sp, #48]
  408f40:	ldp	x29, x30, [sp], #208
  408f44:	ret
  408f48:	bl	401ea0 <__errno_location@plt>
  408f4c:	ldr	w21, [x0]
  408f50:	mov	x22, x0
  408f54:	nop
  408f58:	mov	x0, x24
  408f5c:	mov	x24, #0x0                   	// #0
  408f60:	bl	401d30 <free@plt>
  408f64:	ldr	x25, [sp, #64]
  408f68:	str	w21, [x22]
  408f6c:	mov	x0, x24
  408f70:	ldp	x19, x20, [sp, #16]
  408f74:	ldp	x21, x22, [sp, #32]
  408f78:	ldp	x23, x24, [sp, #48]
  408f7c:	ldp	x29, x30, [sp], #208
  408f80:	ret
  408f84:	bl	401ea0 <__errno_location@plt>
  408f88:	mov	w21, #0xc                   	// #12
  408f8c:	mov	x22, x0
  408f90:	b	408f58 <argp_parse@@Base+0xfb0>
  408f94:	mov	x0, x21
  408f98:	bl	401da0 <ftello@plt>
  408f9c:	tbnz	x0, #63, 408e84 <argp_parse@@Base+0xedc>
  408fa0:	ldr	x2, [sp, #128]
  408fa4:	cmp	x2, x0
  408fa8:	b.le	408e84 <argp_parse@@Base+0xedc>
  408fac:	sub	x2, x2, x0
  408fb0:	adds	x19, x2, #0x1
  408fb4:	b.ne	408e88 <argp_parse@@Base+0xee0>  // b.any
  408fb8:	bl	401ea0 <__errno_location@plt>
  408fbc:	mov	x24, #0x0                   	// #0
  408fc0:	mov	w1, #0xc                   	// #12
  408fc4:	str	w1, [x0]
  408fc8:	b	408f6c <argp_parse@@Base+0xfc4>
  408fcc:	mov	x0, x24
  408fd0:	add	x1, x23, #0x1
  408fd4:	bl	401c70 <realloc@plt>
  408fd8:	cmp	x0, #0x0
  408fdc:	csel	x24, x24, x0, eq  // eq = none
  408fe0:	b	408f24 <argp_parse@@Base+0xf7c>
  408fe4:	nop
  408fe8:	stp	x29, x30, [sp, #-48]!
  408fec:	mov	x29, sp
  408ff0:	stp	x19, x20, [sp, #16]
  408ff4:	mov	x20, x1
  408ff8:	mov	x1, x2
  408ffc:	bl	401bd0 <fopen@plt>
  409000:	cbz	x0, 409044 <argp_parse@@Base+0x109c>
  409004:	mov	x1, x20
  409008:	mov	x19, x0
  40900c:	str	x21, [sp, #32]
  409010:	bl	408e40 <argp_parse@@Base+0xe98>
  409014:	mov	x20, x0
  409018:	bl	401ea0 <__errno_location@plt>
  40901c:	mov	x21, x0
  409020:	mov	x0, x19
  409024:	ldr	w19, [x21]
  409028:	bl	401bc0 <fclose@plt>
  40902c:	cbnz	w0, 409058 <argp_parse@@Base+0x10b0>
  409030:	mov	x0, x20
  409034:	ldp	x19, x20, [sp, #16]
  409038:	ldr	x21, [sp, #32]
  40903c:	ldp	x29, x30, [sp], #48
  409040:	ret
  409044:	mov	x20, #0x0                   	// #0
  409048:	mov	x0, x20
  40904c:	ldp	x19, x20, [sp, #16]
  409050:	ldp	x29, x30, [sp], #48
  409054:	ret
  409058:	cbz	x20, 409068 <argp_parse@@Base+0x10c0>
  40905c:	ldr	w19, [x21]
  409060:	mov	x0, x20
  409064:	bl	401d30 <free@plt>
  409068:	str	w19, [x21]
  40906c:	mov	x20, #0x0                   	// #0
  409070:	mov	x0, x20
  409074:	ldp	x19, x20, [sp, #16]
  409078:	ldr	x21, [sp, #32]
  40907c:	ldp	x29, x30, [sp], #48
  409080:	ret
  409084:	nop
  409088:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  40908c:	add	x2, x2, #0x9f0
  409090:	b	408fe8 <argp_parse@@Base+0x1040>
  409094:	nop
  409098:	adrp	x2, 411000 <argp_error@@Base+0x43a0>
  40909c:	add	x2, x2, #0x2e0
  4090a0:	b	408fe8 <argp_parse@@Base+0x1040>
  4090a4:	nop
  4090a8:	sub	sp, sp, #0x50
  4090ac:	stp	x29, x30, [sp, #32]
  4090b0:	add	x29, sp, #0x20
  4090b4:	stp	x19, x20, [sp, #48]
  4090b8:	mov	x20, x4
  4090bc:	mov	x19, x5
  4090c0:	str	x21, [sp, #64]
  4090c4:	mov	x21, x0
  4090c8:	cbz	x1, 409278 <argp_parse@@Base+0x12d0>
  4090cc:	mov	x4, x3
  4090d0:	mov	x3, x2
  4090d4:	mov	x2, x1
  4090d8:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  4090dc:	add	x1, x1, #0x2e8
  4090e0:	bl	401ed0 <fprintf@plt>
  4090e4:	mov	w3, #0x7df                 	// #2015
  4090e8:	mov	x0, x21
  4090ec:	adrp	x2, 411000 <argp_error@@Base+0x43a0>
  4090f0:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  4090f4:	add	x2, x2, #0x300
  4090f8:	add	x1, x1, #0x618
  4090fc:	bl	401ed0 <fprintf@plt>
  409100:	mov	x3, x21
  409104:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  409108:	mov	x2, #0xca                  	// #202
  40910c:	add	x0, x0, #0x308
  409110:	mov	x1, #0x1                   	// #1
  409114:	bl	401d80 <fwrite@plt>
  409118:	cmp	x19, #0x5
  40911c:	b.eq	409300 <argp_parse@@Base+0x1358>  // b.none
  409120:	b.ls	409180 <argp_parse@@Base+0x11d8>  // b.plast
  409124:	cmp	x19, #0x8
  409128:	b.eq	40932c <argp_parse@@Base+0x1384>  // b.none
  40912c:	b.ls	4091b8 <argp_parse@@Base+0x1210>  // b.plast
  409130:	cmp	x19, #0x9
  409134:	b.ne	409210 <argp_parse@@Base+0x1268>  // b.any
  409138:	ldp	x7, x8, [x20, #40]
  40913c:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  409140:	ldp	x2, x3, [x20]
  409144:	mov	x0, x21
  409148:	ldr	x4, [x20, #16]
  40914c:	add	x1, x1, #0x4f0
  409150:	ldp	x5, x6, [x20, #24]
  409154:	str	x8, [sp]
  409158:	ldr	x8, [x20, #56]
  40915c:	str	x8, [sp, #8]
  409160:	ldr	x8, [x20, #64]
  409164:	str	x8, [sp, #16]
  409168:	bl	401ed0 <fprintf@plt>
  40916c:	ldp	x29, x30, [sp, #32]
  409170:	ldp	x19, x20, [sp, #48]
  409174:	ldr	x21, [sp, #64]
  409178:	add	sp, sp, #0x50
  40917c:	ret
  409180:	cmp	x19, #0x3
  409184:	b.eq	409288 <argp_parse@@Base+0x12e0>  // b.none
  409188:	cmp	x19, #0x4
  40918c:	b.ne	409200 <argp_parse@@Base+0x1258>  // b.any
  409190:	ldp	x2, x3, [x20]
  409194:	mov	x0, x21
  409198:	ldp	x4, x5, [x20, #16]
  40919c:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  4091a0:	ldp	x29, x30, [sp, #32]
  4091a4:	add	x1, x1, #0x420
  4091a8:	ldp	x19, x20, [sp, #48]
  4091ac:	ldr	x21, [sp, #64]
  4091b0:	add	sp, sp, #0x50
  4091b4:	b	401ed0 <fprintf@plt>
  4091b8:	cmp	x19, #0x6
  4091bc:	b.eq	4092b0 <argp_parse@@Base+0x1308>  // b.none
  4091c0:	cmp	x19, #0x7
  4091c4:	b.ne	409210 <argp_parse@@Base+0x1268>  // b.any
  4091c8:	ldp	x2, x3, [x20]
  4091cc:	mov	x0, x21
  4091d0:	ldp	x4, x5, [x20, #16]
  4091d4:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  4091d8:	ldp	x6, x7, [x20, #32]
  4091dc:	add	x1, x1, #0x490
  4091e0:	ldr	x8, [x20, #48]
  4091e4:	str	x8, [sp]
  4091e8:	bl	401ed0 <fprintf@plt>
  4091ec:	ldp	x29, x30, [sp, #32]
  4091f0:	ldp	x19, x20, [sp, #48]
  4091f4:	ldr	x21, [sp, #64]
  4091f8:	add	sp, sp, #0x50
  4091fc:	ret
  409200:	cmp	x19, #0x2
  409204:	b.eq	4092dc <argp_parse@@Base+0x1334>  // b.none
  409208:	cmp	x19, #0x3
  40920c:	b.ne	409248 <argp_parse@@Base+0x12a0>  // b.any
  409210:	ldp	x7, x8, [x20, #40]
  409214:	mov	x0, x21
  409218:	ldp	x2, x3, [x20]
  40921c:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  409220:	ldr	x4, [x20, #16]
  409224:	add	x1, x1, #0x528
  409228:	ldp	x5, x6, [x20, #24]
  40922c:	str	x8, [sp]
  409230:	ldr	x8, [x20, #56]
  409234:	str	x8, [sp, #8]
  409238:	ldr	x8, [x20, #64]
  40923c:	str	x8, [sp, #16]
  409240:	bl	401ed0 <fprintf@plt>
  409244:	b	40916c <argp_parse@@Base+0x11c4>
  409248:	cbz	x19, 40936c <argp_parse@@Base+0x13c4>
  40924c:	cmp	x19, #0x1
  409250:	b.ne	409210 <argp_parse@@Base+0x1268>  // b.any
  409254:	ldr	x2, [x20]
  409258:	mov	x0, x21
  40925c:	ldp	x29, x30, [sp, #32]
  409260:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  409264:	ldp	x19, x20, [sp, #48]
  409268:	add	x1, x1, #0x3d8
  40926c:	ldr	x21, [sp, #64]
  409270:	add	sp, sp, #0x50
  409274:	b	401ed0 <fprintf@plt>
  409278:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40927c:	add	x1, x1, #0x2f8
  409280:	bl	401ed0 <fprintf@plt>
  409284:	b	4090e4 <argp_parse@@Base+0x113c>
  409288:	ldp	x2, x3, [x20]
  40928c:	mov	x0, x21
  409290:	ldr	x4, [x20, #16]
  409294:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  409298:	ldp	x29, x30, [sp, #32]
  40929c:	add	x1, x1, #0x400
  4092a0:	ldp	x19, x20, [sp, #48]
  4092a4:	ldr	x21, [sp, #64]
  4092a8:	add	sp, sp, #0x50
  4092ac:	b	401ed0 <fprintf@plt>
  4092b0:	ldp	x2, x3, [x20]
  4092b4:	mov	x0, x21
  4092b8:	ldp	x4, x5, [x20, #16]
  4092bc:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  4092c0:	ldp	x29, x30, [sp, #32]
  4092c4:	add	x1, x1, #0x468
  4092c8:	ldp	x6, x7, [x20, #32]
  4092cc:	ldp	x19, x20, [sp, #48]
  4092d0:	ldr	x21, [sp, #64]
  4092d4:	add	sp, sp, #0x50
  4092d8:	b	401ed0 <fprintf@plt>
  4092dc:	ldp	x2, x3, [x20]
  4092e0:	mov	x0, x21
  4092e4:	ldp	x29, x30, [sp, #32]
  4092e8:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  4092ec:	ldp	x19, x20, [sp, #48]
  4092f0:	add	x1, x1, #0x3e8
  4092f4:	ldr	x21, [sp, #64]
  4092f8:	add	sp, sp, #0x50
  4092fc:	b	401ed0 <fprintf@plt>
  409300:	ldp	x2, x3, [x20]
  409304:	mov	x0, x21
  409308:	ldp	x4, x5, [x20, #16]
  40930c:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  409310:	ldp	x29, x30, [sp, #32]
  409314:	add	x1, x1, #0x440
  409318:	ldr	x6, [x20, #32]
  40931c:	ldp	x19, x20, [sp, #48]
  409320:	ldr	x21, [sp, #64]
  409324:	add	sp, sp, #0x50
  409328:	b	401ed0 <fprintf@plt>
  40932c:	ldr	x8, [x20, #48]
  409330:	mov	x0, x21
  409334:	ldp	x2, x3, [x20]
  409338:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40933c:	ldp	x4, x5, [x20, #16]
  409340:	add	x1, x1, #0x4c0
  409344:	ldp	x6, x7, [x20, #32]
  409348:	str	x8, [sp]
  40934c:	ldr	x8, [x20, #56]
  409350:	str	x8, [sp, #8]
  409354:	bl	401ed0 <fprintf@plt>
  409358:	ldp	x29, x30, [sp, #32]
  40935c:	ldp	x19, x20, [sp, #48]
  409360:	ldr	x21, [sp, #64]
  409364:	add	sp, sp, #0x50
  409368:	ret
  40936c:	bl	401cd0 <abort@plt>
  409370:	ldr	x5, [x4]
  409374:	cbz	x5, 409390 <argp_parse@@Base+0x13e8>
  409378:	mov	x5, #0x0                   	// #0
  40937c:	nop
  409380:	add	x5, x5, #0x1
  409384:	ldr	x6, [x4, x5, lsl #3]
  409388:	cbnz	x6, 409380 <argp_parse@@Base+0x13d8>
  40938c:	b	4090a8 <argp_parse@@Base+0x1100>
  409390:	mov	x5, #0x0                   	// #0
  409394:	b	4090a8 <argp_parse@@Base+0x1100>
  409398:	stp	x29, x30, [sp, #-96]!
  40939c:	mov	x5, #0x0                   	// #0
  4093a0:	mov	x29, sp
  4093a4:	add	x8, sp, #0x10
  4093a8:	ldr	w7, [x4, #24]
  4093ac:	ldp	x6, x11, [x4]
  4093b0:	b	4093d8 <argp_parse@@Base+0x1430>
  4093b4:	mov	x4, x6
  4093b8:	add	x8, x8, #0x8
  4093bc:	and	x6, x10, #0xfffffffffffffff8
  4093c0:	ldr	x4, [x4]
  4093c4:	stur	x4, [x8, #-8]
  4093c8:	cbz	x4, 409408 <argp_parse@@Base+0x1460>
  4093cc:	add	x5, x5, #0x1
  4093d0:	cmp	x5, #0xa
  4093d4:	b.eq	409408 <argp_parse@@Base+0x1460>  // b.none
  4093d8:	add	x10, x6, #0xf
  4093dc:	add	w9, w7, #0x8
  4093e0:	tbz	w7, #31, 4093b4 <argp_parse@@Base+0x140c>
  4093e4:	add	x4, x11, w7, sxtw
  4093e8:	add	x10, x6, #0xf
  4093ec:	mov	w7, w9
  4093f0:	cmp	w9, #0x0
  4093f4:	b.gt	4093b4 <argp_parse@@Base+0x140c>
  4093f8:	ldr	x4, [x4]
  4093fc:	str	x4, [x8]
  409400:	add	x8, x8, #0x8
  409404:	cbnz	x4, 4093cc <argp_parse@@Base+0x1424>
  409408:	add	x4, sp, #0x10
  40940c:	bl	4090a8 <argp_parse@@Base+0x1100>
  409410:	ldp	x29, x30, [sp], #96
  409414:	ret
  409418:	stp	x29, x30, [sp, #-288]!
  40941c:	mov	w12, #0xffffffe0            	// #-32
  409420:	mov	w13, #0xffffff80            	// #-128
  409424:	mov	x29, sp
  409428:	add	x14, sp, #0x100
  40942c:	add	x11, sp, #0x120
  409430:	add	x9, sp, #0x30
  409434:	mov	w8, w12
  409438:	mov	x10, #0x0                   	// #0
  40943c:	stp	x11, x11, [sp, #16]
  409440:	str	x14, [sp, #32]
  409444:	stp	w12, w13, [sp, #40]
  409448:	str	q0, [sp, #128]
  40944c:	str	q1, [sp, #144]
  409450:	str	q2, [sp, #160]
  409454:	str	q3, [sp, #176]
  409458:	str	q4, [sp, #192]
  40945c:	str	q5, [sp, #208]
  409460:	str	q6, [sp, #224]
  409464:	str	q7, [sp, #240]
  409468:	stp	x4, x5, [sp, #256]
  40946c:	stp	x6, x7, [sp, #272]
  409470:	b	409498 <argp_parse@@Base+0x14f0>
  409474:	mov	x4, x11
  409478:	add	x9, x9, #0x8
  40947c:	add	x11, x11, #0x8
  409480:	ldr	x4, [x4]
  409484:	stur	x4, [x9, #-8]
  409488:	cbz	x4, 4094c4 <argp_parse@@Base+0x151c>
  40948c:	add	x10, x10, #0x1
  409490:	cmp	x10, #0xa
  409494:	b.eq	4094c4 <argp_parse@@Base+0x151c>  // b.none
  409498:	add	w5, w8, #0x8
  40949c:	tbz	w8, #31, 409474 <argp_parse@@Base+0x14cc>
  4094a0:	add	x4, sp, #0x120
  4094a4:	cmp	w5, #0x0
  4094a8:	add	x4, x4, w8, sxtw
  4094ac:	mov	w8, w5
  4094b0:	b.gt	409474 <argp_parse@@Base+0x14cc>
  4094b4:	ldr	x4, [x4]
  4094b8:	str	x4, [x9]
  4094bc:	add	x9, x9, #0x8
  4094c0:	cbnz	x4, 40948c <argp_parse@@Base+0x14e4>
  4094c4:	add	x4, sp, #0x30
  4094c8:	mov	x5, x10
  4094cc:	bl	4090a8 <argp_parse@@Base+0x1100>
  4094d0:	ldp	x29, x30, [sp], #288
  4094d4:	ret
  4094d8:	stp	x29, x30, [sp, #-16]!
  4094dc:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  4094e0:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  4094e4:	mov	x29, sp
  4094e8:	add	x1, x1, #0x568
  4094ec:	add	x0, x0, #0x580
  4094f0:	bl	401e80 <printf@plt>
  4094f4:	adrp	x2, 411000 <argp_error@@Base+0x43a0>
  4094f8:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  4094fc:	add	x2, x2, #0x598
  409500:	add	x1, x1, #0x290
  409504:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  409508:	add	x0, x0, #0x5c0
  40950c:	bl	401e80 <printf@plt>
  409510:	adrp	x1, 427000 <argp_error@@Base+0x1a3a0>
  409514:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  409518:	ldp	x29, x30, [sp], #16
  40951c:	add	x0, x0, #0x5d8
  409520:	ldr	x3, [x1, #1256]
  409524:	mov	x2, #0x3f                  	// #63
  409528:	mov	x1, #0x1                   	// #1
  40952c:	b	401d80 <fwrite@plt>
  409530:	stp	x29, x30, [sp, #-32]!
  409534:	mov	x29, sp
  409538:	str	x19, [sp, #16]
  40953c:	mov	x19, x0
  409540:	bl	401be0 <malloc@plt>
  409544:	cmp	x0, #0x0
  409548:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40954c:	b.ne	40955c <argp_parse@@Base+0x15b4>  // b.any
  409550:	ldr	x19, [sp, #16]
  409554:	ldp	x29, x30, [sp], #32
  409558:	ret
  40955c:	bl	409750 <argp_parse@@Base+0x17a8>
  409560:	umulh	x2, x0, x1
  409564:	cbnz	x2, 409570 <argp_parse@@Base+0x15c8>
  409568:	mul	x0, x0, x1
  40956c:	b	409530 <argp_parse@@Base+0x1588>
  409570:	stp	x29, x30, [sp, #-16]!
  409574:	mov	x29, sp
  409578:	bl	409750 <argp_parse@@Base+0x17a8>
  40957c:	nop
  409580:	b	409530 <argp_parse@@Base+0x1588>
  409584:	nop
  409588:	stp	x29, x30, [sp, #-32]!
  40958c:	cmp	x1, #0x0
  409590:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  409594:	mov	x29, sp
  409598:	b.ne	4095c0 <argp_parse@@Base+0x1618>  // b.any
  40959c:	str	x19, [sp, #16]
  4095a0:	mov	x19, x1
  4095a4:	bl	401c70 <realloc@plt>
  4095a8:	cmp	x0, #0x0
  4095ac:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4095b0:	b.ne	4095d0 <argp_parse@@Base+0x1628>  // b.any
  4095b4:	ldr	x19, [sp, #16]
  4095b8:	ldp	x29, x30, [sp], #32
  4095bc:	ret
  4095c0:	bl	401d30 <free@plt>
  4095c4:	mov	x0, #0x0                   	// #0
  4095c8:	ldp	x29, x30, [sp], #32
  4095cc:	ret
  4095d0:	bl	409750 <argp_parse@@Base+0x17a8>
  4095d4:	nop
  4095d8:	umulh	x3, x1, x2
  4095dc:	cbnz	x3, 4095e8 <argp_parse@@Base+0x1640>
  4095e0:	mul	x1, x1, x2
  4095e4:	b	409588 <argp_parse@@Base+0x15e0>
  4095e8:	stp	x29, x30, [sp, #-16]!
  4095ec:	mov	x29, sp
  4095f0:	bl	409750 <argp_parse@@Base+0x17a8>
  4095f4:	nop
  4095f8:	mov	x4, x1
  4095fc:	ldr	x3, [x1]
  409600:	cbz	x0, 409628 <argp_parse@@Base+0x1680>
  409604:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  409608:	udiv	x1, x1, x2
  40960c:	cmp	x1, x3
  409610:	b.ls	409648 <argp_parse@@Base+0x16a0>  // b.plast
  409614:	add	x1, x3, #0x1
  409618:	add	x3, x1, x3, lsr #1
  40961c:	mul	x1, x3, x2
  409620:	str	x3, [x4]
  409624:	b	409588 <argp_parse@@Base+0x15e0>
  409628:	cbnz	x3, 40961c <argp_parse@@Base+0x1674>
  40962c:	mov	x3, #0x80                  	// #128
  409630:	cmp	x2, x3
  409634:	udiv	x3, x3, x2
  409638:	cinc	x3, x3, hi  // hi = pmore
  40963c:	str	x3, [x4]
  409640:	mul	x1, x3, x2
  409644:	b	409588 <argp_parse@@Base+0x15e0>
  409648:	stp	x29, x30, [sp, #-16]!
  40964c:	mov	x29, sp
  409650:	bl	409750 <argp_parse@@Base+0x17a8>
  409654:	nop
  409658:	mov	x2, x1
  40965c:	ldr	x1, [x1]
  409660:	cbz	x0, 409680 <argp_parse@@Base+0x16d8>
  409664:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  409668:	cmp	x1, x3
  40966c:	b.cs	409694 <argp_parse@@Base+0x16ec>  // b.hs, b.nlast
  409670:	add	x3, x1, #0x1
  409674:	add	x1, x3, x1, lsr #1
  409678:	str	x1, [x2]
  40967c:	b	409588 <argp_parse@@Base+0x15e0>
  409680:	cmp	x1, #0x0
  409684:	mov	x3, #0x80                  	// #128
  409688:	csel	x1, x1, x3, ne  // ne = any
  40968c:	str	x1, [x2]
  409690:	b	409588 <argp_parse@@Base+0x15e0>
  409694:	stp	x29, x30, [sp, #-16]!
  409698:	mov	x29, sp
  40969c:	bl	409750 <argp_parse@@Base+0x17a8>
  4096a0:	stp	x29, x30, [sp, #-32]!
  4096a4:	mov	x29, sp
  4096a8:	str	x19, [sp, #16]
  4096ac:	mov	x19, x0
  4096b0:	bl	409530 <argp_parse@@Base+0x1588>
  4096b4:	mov	x2, x19
  4096b8:	mov	w1, #0x0                   	// #0
  4096bc:	ldr	x19, [sp, #16]
  4096c0:	ldp	x29, x30, [sp], #32
  4096c4:	b	401c20 <memset@plt>
  4096c8:	stp	x29, x30, [sp, #-16]!
  4096cc:	mov	x29, sp
  4096d0:	bl	401c50 <calloc@plt>
  4096d4:	cbz	x0, 4096e0 <argp_parse@@Base+0x1738>
  4096d8:	ldp	x29, x30, [sp], #16
  4096dc:	ret
  4096e0:	bl	409750 <argp_parse@@Base+0x17a8>
  4096e4:	nop
  4096e8:	stp	x29, x30, [sp, #-32]!
  4096ec:	mov	x29, sp
  4096f0:	stp	x19, x20, [sp, #16]
  4096f4:	mov	x19, x1
  4096f8:	mov	x20, x0
  4096fc:	mov	x0, x1
  409700:	bl	409530 <argp_parse@@Base+0x1588>
  409704:	mov	x2, x19
  409708:	mov	x1, x20
  40970c:	ldp	x19, x20, [sp, #16]
  409710:	ldp	x29, x30, [sp], #32
  409714:	b	401aa0 <memcpy@plt>
  409718:	stp	x29, x30, [sp, #-32]!
  40971c:	mov	x29, sp
  409720:	stp	x19, x20, [sp, #16]
  409724:	mov	x20, x0
  409728:	bl	401b00 <strlen@plt>
  40972c:	add	x19, x0, #0x1
  409730:	mov	x0, x19
  409734:	bl	409530 <argp_parse@@Base+0x1588>
  409738:	mov	x2, x19
  40973c:	mov	x1, x20
  409740:	ldp	x19, x20, [sp, #16]
  409744:	ldp	x29, x30, [sp], #32
  409748:	b	401aa0 <memcpy@plt>
  40974c:	nop
  409750:	stp	x29, x30, [sp, #-16]!
  409754:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  409758:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  40975c:	mov	x29, sp
  409760:	ldr	w0, [x0, #1216]
  409764:	add	x3, x3, #0x648
  409768:	adrp	x2, 40e000 <argp_error@@Base+0x13a0>
  40976c:	add	x2, x2, #0xad8
  409770:	mov	w1, #0x0                   	// #0
  409774:	bl	401b30 <error@plt>
  409778:	bl	401cd0 <abort@plt>
  40977c:	nop
  409780:	mov	w6, #0x0                   	// #0
  409784:	mov	w5, #0x0                   	// #0
  409788:	b	40dc30 <argp_error@@Base+0xfd0>
  40978c:	nop
  409790:	mov	x6, x5
  409794:	mov	w7, #0x0                   	// #0
  409798:	mov	w5, #0x0                   	// #0
  40979c:	b	40ced0 <argp_error@@Base+0x270>
  4097a0:	mov	w6, #0x0                   	// #0
  4097a4:	mov	w5, #0x1                   	// #1
  4097a8:	b	40dc30 <argp_error@@Base+0xfd0>
  4097ac:	nop
  4097b0:	mov	x6, x5
  4097b4:	mov	w7, #0x0                   	// #0
  4097b8:	mov	w5, #0x1                   	// #1
  4097bc:	b	40ced0 <argp_error@@Base+0x270>
  4097c0:	stp	x29, x30, [sp, #-64]!
  4097c4:	mov	w3, #0xfffffff8            	// #-8
  4097c8:	mov	w1, w1
  4097cc:	add	x4, sp, #0x30
  4097d0:	add	x5, sp, #0x40
  4097d4:	mov	x29, sp
  4097d8:	stp	x5, x5, [sp, #16]
  4097dc:	str	x4, [sp, #32]
  4097e0:	stp	w3, wzr, [sp, #40]
  4097e4:	str	x2, [sp, #56]
  4097e8:	bl	401ee0 <ioctl@plt>
  4097ec:	ldp	x29, x30, [sp], #64
  4097f0:	ret
  4097f4:	nop
  4097f8:	stp	x29, x30, [sp, #-16]!
  4097fc:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  409800:	adrp	x2, 411000 <argp_error@@Base+0x43a0>
  409804:	mov	x29, sp
  409808:	ldr	x0, [x0, #1248]
  40980c:	add	x2, x2, #0x648
  409810:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  409814:	add	x1, x1, #0x2f0
  409818:	bl	401ed0 <fprintf@plt>
  40981c:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  409820:	ldr	w0, [x0, #1216]
  409824:	bl	401b20 <exit@plt>
  409828:	mov	x2, x0
  40982c:	mov	x0, x1
  409830:	ldrb	w4, [x2, #80]
  409834:	ldr	x3, [x2, #56]
  409838:	tbz	w4, #0, 409848 <argp_parse@@Base+0x18a0>
  40983c:	ldr	x0, [x2, #72]
  409840:	mov	x16, x3
  409844:	br	x16
  409848:	mov	x16, x3
  40984c:	br	x16
  409850:	stp	x29, x30, [sp, #-48]!
  409854:	mov	x29, sp
  409858:	stp	x19, x20, [sp, #16]
  40985c:	mov	x19, x0
  409860:	stp	x21, x22, [sp, #32]
  409864:	cbz	x2, 4098dc <argp_parse@@Base+0x1934>
  409868:	sub	x22, x2, #0x1
  40986c:	neg	x21, x2
  409870:	cmp	x1, #0x0
  409874:	mov	x0, #0xfe0                 	// #4064
  409878:	csel	x1, x1, x0, ne  // ne = any
  40987c:	str	x1, [x19]
  409880:	str	x22, [x19, #48]
  409884:	mov	x0, x19
  409888:	bl	409828 <argp_parse@@Base+0x1880>
  40988c:	str	x0, [x19, #8]
  409890:	mov	x20, x0
  409894:	cbz	x0, 4098e8 <argp_parse@@Base+0x1940>
  409898:	add	x2, x20, #0x10
  40989c:	ldrb	w1, [x19, #80]
  4098a0:	ldr	x0, [x19]
  4098a4:	add	x2, x2, x22
  4098a8:	and	x2, x2, x21
  4098ac:	and	w1, w1, #0xfffffff9
  4098b0:	ldp	x21, x22, [sp, #32]
  4098b4:	stp	x2, x2, [x19, #16]
  4098b8:	add	x0, x20, x0
  4098bc:	str	x0, [x20]
  4098c0:	str	x0, [x19, #32]
  4098c4:	mov	w0, #0x1                   	// #1
  4098c8:	str	xzr, [x20, #8]
  4098cc:	strb	w1, [x19, #80]
  4098d0:	ldp	x19, x20, [sp, #16]
  4098d4:	ldp	x29, x30, [sp], #48
  4098d8:	ret
  4098dc:	mov	x21, #0xfffffffffffffff0    	// #-16
  4098e0:	mov	x22, #0xf                   	// #15
  4098e4:	b	409870 <argp_parse@@Base+0x18c8>
  4098e8:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  4098ec:	ldr	x0, [x0, #1168]
  4098f0:	blr	x0
  4098f4:	b	409898 <argp_parse@@Base+0x18f0>
  4098f8:	mov	x2, x0
  4098fc:	mov	x0, x1
  409900:	ldrb	w4, [x2, #80]
  409904:	ldr	x3, [x2, #64]
  409908:	tbz	w4, #0, 409918 <argp_parse@@Base+0x1970>
  40990c:	ldr	x0, [x2, #72]
  409910:	mov	x16, x3
  409914:	br	x16
  409918:	mov	x16, x3
  40991c:	br	x16

0000000000409920 <_obstack_begin@@Base>:
  409920:	ldrb	w6, [x0, #80]
  409924:	stp	x3, x4, [x0, #56]
  409928:	and	w6, w6, #0xfffffffe
  40992c:	strb	w6, [x0, #80]
  409930:	b	409850 <argp_parse@@Base+0x18a8>
  409934:	nop

0000000000409938 <_obstack_begin_1@@Base>:
  409938:	ldrb	w7, [x0, #80]
  40993c:	stp	x3, x4, [x0, #56]
  409940:	orr	w7, w7, #0x1
  409944:	str	x5, [x0, #72]
  409948:	strb	w7, [x0, #80]
  40994c:	b	409850 <argp_parse@@Base+0x18a8>

0000000000409950 <_obstack_newchunk@@Base>:
  409950:	stp	x29, x30, [sp, #-64]!
  409954:	mov	x29, sp
  409958:	stp	x19, x20, [sp, #16]
  40995c:	mov	x19, x0
  409960:	ldp	x2, x20, [x0, #16]
  409964:	stp	x21, x22, [sp, #32]
  409968:	ldr	x3, [x0, #48]
  40996c:	str	x23, [sp, #48]
  409970:	ldr	x23, [x0, #8]
  409974:	sub	x20, x20, x2
  409978:	adds	x1, x20, x1
  40997c:	cset	x4, cs  // cs = hs, nlast
  409980:	adds	x1, x3, x1
  409984:	cset	x2, cs  // cs = hs, nlast
  409988:	cmp	x4, #0x0
  40998c:	ccmp	x2, #0x0, #0x0, eq  // eq = none
  409990:	b.eq	4099b0 <_obstack_newchunk@@Base+0x60>  // b.none
  409994:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  409998:	ldr	x0, [x0, #1168]
  40999c:	blr	x0
  4099a0:	str	xzr, [x19, #8]
  4099a4:	mov	x0, #0x0                   	// #0
  4099a8:	str	x23, [x0, #8]
  4099ac:	brk	#0x3e8
  4099b0:	ldr	x3, [x0]
  4099b4:	lsr	x21, x20, #3
  4099b8:	add	x21, x21, #0x64
  4099bc:	cmp	x3, x1
  4099c0:	add	x21, x21, x1
  4099c4:	csel	x1, x3, x1, cs  // cs = hs, nlast
  4099c8:	cmp	x1, x21
  4099cc:	csel	x21, x1, x21, cs  // cs = hs, nlast
  4099d0:	mov	x1, x21
  4099d4:	bl	409828 <argp_parse@@Base+0x1880>
  4099d8:	mov	x22, x0
  4099dc:	cbz	x0, 409994 <_obstack_newchunk@@Base+0x44>
  4099e0:	str	x0, [x19, #8]
  4099e4:	add	x1, x0, x21
  4099e8:	ldr	x21, [x19, #48]
  4099ec:	str	x23, [x0, #8]
  4099f0:	str	x1, [x19, #32]
  4099f4:	mov	x2, x20
  4099f8:	str	x1, [x0], #16
  4099fc:	ldr	x1, [x19, #16]
  409a00:	add	x0, x0, x21
  409a04:	bic	x21, x0, x21
  409a08:	mov	x0, x21
  409a0c:	bl	401aa0 <memcpy@plt>
  409a10:	ldrb	w0, [x19, #80]
  409a14:	tbnz	w0, #1, 409a34 <_obstack_newchunk@@Base+0xe4>
  409a18:	ldr	x2, [x19, #48]
  409a1c:	add	x1, x23, #0x10
  409a20:	ldr	x0, [x19, #16]
  409a24:	add	x1, x1, x2
  409a28:	bic	x1, x1, x2
  409a2c:	cmp	x0, x1
  409a30:	b.eq	409a5c <_obstack_newchunk@@Base+0x10c>  // b.none
  409a34:	ldrb	w0, [x19, #80]
  409a38:	add	x20, x21, x20
  409a3c:	ldr	x23, [sp, #48]
  409a40:	and	w0, w0, #0xfffffffd
  409a44:	stp	x21, x20, [x19, #16]
  409a48:	strb	w0, [x19, #80]
  409a4c:	ldp	x19, x20, [sp, #16]
  409a50:	ldp	x21, x22, [sp, #32]
  409a54:	ldp	x29, x30, [sp], #64
  409a58:	ret
  409a5c:	ldr	x0, [x23, #8]
  409a60:	str	x0, [x22, #8]
  409a64:	mov	x1, x23
  409a68:	mov	x0, x19
  409a6c:	bl	4098f8 <argp_parse@@Base+0x1950>
  409a70:	b	409a34 <_obstack_newchunk@@Base+0xe4>
  409a74:	nop

0000000000409a78 <_obstack_allocated_p@@Base>:
  409a78:	ldr	x0, [x0, #8]
  409a7c:	cbz	x0, 409aa0 <_obstack_allocated_p@@Base+0x28>
  409a80:	cmp	x1, x0
  409a84:	b.ls	409a94 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  409a88:	ldr	x2, [x0]
  409a8c:	cmp	x2, x1
  409a90:	b.cs	409aa4 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  409a94:	ldr	x0, [x0, #8]
  409a98:	cbnz	x0, 409a80 <_obstack_allocated_p@@Base+0x8>
  409a9c:	mov	w0, #0x0                   	// #0
  409aa0:	ret
  409aa4:	mov	w0, #0x1                   	// #1
  409aa8:	ret
  409aac:	nop

0000000000409ab0 <_obstack_free@@Base>:
  409ab0:	stp	x29, x30, [sp, #-48]!
  409ab4:	mov	x29, sp
  409ab8:	str	x21, [sp, #32]
  409abc:	mov	x21, x1
  409ac0:	ldr	x1, [x0, #8]
  409ac4:	cbz	x1, 409b0c <_obstack_free@@Base+0x5c>
  409ac8:	stp	x19, x20, [sp, #16]
  409acc:	mov	x20, x0
  409ad0:	b	409ad8 <_obstack_free@@Base+0x28>
  409ad4:	mov	x1, x19
  409ad8:	cmp	x1, x21
  409adc:	b.cs	409aec <_obstack_free@@Base+0x3c>  // b.hs, b.nlast
  409ae0:	ldr	x0, [x1]
  409ae4:	cmp	x0, x21
  409ae8:	b.cs	409b1c <_obstack_free@@Base+0x6c>  // b.hs, b.nlast
  409aec:	mov	x0, x20
  409af0:	ldr	x19, [x1, #8]
  409af4:	bl	4098f8 <argp_parse@@Base+0x1950>
  409af8:	ldrb	w2, [x20, #80]
  409afc:	orr	w2, w2, #0x2
  409b00:	strb	w2, [x20, #80]
  409b04:	cbnz	x19, 409ad4 <_obstack_free@@Base+0x24>
  409b08:	ldp	x19, x20, [sp, #16]
  409b0c:	cbnz	x21, 409b34 <_obstack_free@@Base+0x84>
  409b10:	ldr	x21, [sp, #32]
  409b14:	ldp	x29, x30, [sp], #48
  409b18:	ret
  409b1c:	stp	x1, x21, [x20, #8]
  409b20:	stp	x21, x0, [x20, #24]
  409b24:	ldp	x19, x20, [sp, #16]
  409b28:	ldr	x21, [sp, #32]
  409b2c:	ldp	x29, x30, [sp], #48
  409b30:	ret
  409b34:	stp	x19, x20, [sp, #16]
  409b38:	bl	401cd0 <abort@plt>
  409b3c:	nop

0000000000409b40 <_obstack_memory_used@@Base>:
  409b40:	ldr	x1, [x0, #8]
  409b44:	mov	x0, #0x0                   	// #0
  409b48:	cbz	x1, 409b64 <_obstack_memory_used@@Base+0x24>
  409b4c:	nop
  409b50:	ldr	x2, [x1]
  409b54:	sub	x2, x2, x1
  409b58:	ldr	x1, [x1, #8]
  409b5c:	add	x0, x0, x2
  409b60:	cbnz	x1, 409b50 <_obstack_memory_used@@Base+0x10>
  409b64:	ret
  409b68:	stp	x29, x30, [sp, #-32]!
  409b6c:	mov	x29, sp
  409b70:	stp	x19, x20, [sp, #16]
  409b74:	mov	x20, x0
  409b78:	ldr	x19, [x0, #24]
  409b7c:	cbz	x19, 409b90 <_obstack_memory_used@@Base+0x50>
  409b80:	mov	x0, x19
  409b84:	ldr	x19, [x19, #40]
  409b88:	bl	401d30 <free@plt>
  409b8c:	cbnz	x19, 409b80 <_obstack_memory_used@@Base+0x40>
  409b90:	ldr	w0, [x20, #8]
  409b94:	cbnz	w0, 409ba8 <_obstack_memory_used@@Base+0x68>
  409b98:	mov	x0, x20
  409b9c:	ldp	x19, x20, [sp, #16]
  409ba0:	ldp	x29, x30, [sp], #32
  409ba4:	b	401d30 <free@plt>
  409ba8:	ldr	x0, [x20]
  409bac:	bl	401d30 <free@plt>
  409bb0:	ldr	x0, [x20, #16]
  409bb4:	bl	401d30 <free@plt>
  409bb8:	mov	x0, x20
  409bbc:	ldp	x19, x20, [sp, #16]
  409bc0:	ldp	x29, x30, [sp], #32
  409bc4:	b	401d30 <free@plt>
  409bc8:	ldr	x2, [x0, #16]
  409bcc:	cbz	x2, 409bd8 <_obstack_memory_used@@Base+0x98>
  409bd0:	mov	w0, #0x0                   	// #0
  409bd4:	ret
  409bd8:	ldr	x2, [x1, #16]
  409bdc:	cbnz	x2, 409bd0 <_obstack_memory_used@@Base+0x90>
  409be0:	ldr	w2, [x1, #24]
  409be4:	ldr	w1, [x0, #24]
  409be8:	orr	w1, w1, w2
  409bec:	tbnz	w1, #4, 409bd0 <_obstack_memory_used@@Base+0x90>
  409bf0:	ldr	x1, [x3]
  409bf4:	ldr	w0, [x0, #8]
  409bf8:	add	x2, x1, #0x1
  409bfc:	str	x2, [x3]
  409c00:	strb	w0, [x1]
  409c04:	b	409bd0 <_obstack_memory_used@@Base+0x90>
  409c08:	stp	x29, x30, [sp, #-32]!
  409c0c:	mov	x29, sp
  409c10:	str	x19, [sp, #16]
  409c14:	mov	x19, x0
  409c18:	bl	401d00 <__ctype_b_loc@plt>
  409c1c:	ldr	x5, [x0]
  409c20:	ldr	x1, [x19]
  409c24:	b	409c2c <_obstack_memory_used@@Base+0xec>
  409c28:	str	x1, [x19]
  409c2c:	ldrb	w4, [x1], #1
  409c30:	ubfiz	x0, x4, #1, #8
  409c34:	ldrh	w3, [x5, x0]
  409c38:	tbnz	w3, #13, 409c28 <_obstack_memory_used@@Base+0xe8>
  409c3c:	cmp	w4, #0x2d
  409c40:	cset	w0, ne  // ne = any
  409c44:	cbz	w4, 409c68 <_obstack_memory_used@@Base+0x128>
  409c48:	tbnz	w3, #3, 409c68 <_obstack_memory_used@@Base+0x128>
  409c4c:	nop
  409c50:	str	x1, [x19]
  409c54:	ldrb	w2, [x1], #1
  409c58:	ubfiz	x3, x2, #1, #8
  409c5c:	cbz	w2, 409c68 <_obstack_memory_used@@Base+0x128>
  409c60:	ldrh	w3, [x5, x3]
  409c64:	tbz	w3, #3, 409c50 <_obstack_memory_used@@Base+0x110>
  409c68:	ldr	x19, [sp, #16]
  409c6c:	ldp	x29, x30, [sp], #32
  409c70:	ret
  409c74:	nop
  409c78:	stp	x29, x30, [sp, #-64]!
  409c7c:	mov	x29, sp
  409c80:	stp	x21, x22, [sp, #32]
  409c84:	cbz	w1, 409d38 <_obstack_memory_used@@Base+0x1f8>
  409c88:	str	x23, [sp, #48]
  409c8c:	mov	x23, x2
  409c90:	sub	w2, w1, #0x1
  409c94:	mov	x21, x0
  409c98:	mov	w1, w2
  409c9c:	stp	x19, x20, [sp, #16]
  409ca0:	add	x1, x1, #0x1
  409ca4:	lsl	x22, x1, #3
  409ca8:	sub	x1, x22, x1
  409cac:	add	x22, x0, x1, lsl #3
  409cb0:	ldr	w0, [x21, #8]
  409cb4:	ldr	x19, [x21]
  409cb8:	sub	w20, w0, #0x1
  409cbc:	cbz	w0, 409cf8 <_obstack_memory_used@@Base+0x1b8>
  409cc0:	add	x20, x20, #0x1
  409cc4:	add	x20, x20, x20, lsl #1
  409cc8:	add	x20, x19, x20, lsl #4
  409ccc:	nop
  409cd0:	ldr	x0, [x19]
  409cd4:	cbz	x0, 409cec <_obstack_memory_used@@Base+0x1ac>
  409cd8:	ldr	w3, [x19, #24]
  409cdc:	mov	x1, x23
  409ce0:	tbnz	w3, #1, 409cec <_obstack_memory_used@@Base+0x1ac>
  409ce4:	bl	401cf0 <strcmp@plt>
  409ce8:	cbz	w0, 409d20 <_obstack_memory_used@@Base+0x1e0>
  409cec:	add	x19, x19, #0x30
  409cf0:	cmp	x19, x20
  409cf4:	b.ne	409cd0 <_obstack_memory_used@@Base+0x190>  // b.any
  409cf8:	add	x21, x21, #0x38
  409cfc:	cmp	x22, x21
  409d00:	b.ne	409cb0 <_obstack_memory_used@@Base+0x170>  // b.any
  409d04:	mov	x21, #0x0                   	// #0
  409d08:	mov	x0, x21
  409d0c:	ldp	x19, x20, [sp, #16]
  409d10:	ldp	x21, x22, [sp, #32]
  409d14:	ldr	x23, [sp, #48]
  409d18:	ldp	x29, x30, [sp], #64
  409d1c:	ret
  409d20:	ldp	x19, x20, [sp, #16]
  409d24:	ldr	x23, [sp, #48]
  409d28:	mov	x0, x21
  409d2c:	ldp	x21, x22, [sp, #32]
  409d30:	ldp	x29, x30, [sp], #64
  409d34:	ret
  409d38:	mov	x21, #0x0                   	// #0
  409d3c:	b	409d28 <_obstack_memory_used@@Base+0x1e8>
  409d40:	stp	x29, x30, [sp, #-32]!
  409d44:	mov	x29, sp
  409d48:	stp	x19, x20, [sp, #16]
  409d4c:	mov	x19, x1
  409d50:	mov	x20, #0x0                   	// #0
  409d54:	cbz	x0, 409d68 <_obstack_memory_used@@Base+0x228>
  409d58:	mov	w1, #0xa                   	// #10
  409d5c:	bl	401d70 <strchr@plt>
  409d60:	cmp	x0, #0x0
  409d64:	cset	x20, ne  // ne = any
  409d68:	cbz	x19, 409d8c <_obstack_memory_used@@Base+0x24c>
  409d6c:	ldr	x2, [x19]
  409d70:	cbz	x2, 409d8c <_obstack_memory_used@@Base+0x24c>
  409d74:	ldr	x0, [x2, #16]
  409d78:	ldr	x1, [x2, #32]
  409d7c:	bl	409d40 <_obstack_memory_used@@Base+0x200>
  409d80:	add	x20, x20, x0
  409d84:	ldr	x2, [x19, #32]!
  409d88:	cbnz	x2, 409d74 <_obstack_memory_used@@Base+0x234>
  409d8c:	mov	x0, x20
  409d90:	ldp	x19, x20, [sp, #16]
  409d94:	ldp	x29, x30, [sp], #32
  409d98:	ret
  409d9c:	nop
  409da0:	stp	x29, x30, [sp, #-48]!
  409da4:	mov	x29, sp
  409da8:	stp	x19, x20, [sp, #16]
  409dac:	mov	x19, x2
  409db0:	mov	w20, w1
  409db4:	mov	x1, x3
  409db8:	str	x21, [sp, #32]
  409dbc:	mov	x21, x0
  409dc0:	mov	x0, x2
  409dc4:	bl	408c10 <argp_parse@@Base+0xc68>
  409dc8:	mov	x2, x0
  409dcc:	mov	x1, x21
  409dd0:	mov	w0, w20
  409dd4:	ldr	x21, [sp, #32]
  409dd8:	ldr	x3, [x19, #40]
  409ddc:	ldp	x19, x20, [sp, #16]
  409de0:	mov	x16, x3
  409de4:	ldp	x29, x30, [sp], #48
  409de8:	br	x16
  409dec:	nop
  409df0:	stp	x29, x30, [sp, #-160]!
  409df4:	mov	x29, sp
  409df8:	stp	x21, x22, [sp, #32]
  409dfc:	mov	x22, x0
  409e00:	mov	x21, x1
  409e04:	mov	x0, #0x20                  	// #32
  409e08:	stp	x19, x20, [sp, #16]
  409e0c:	stp	x23, x24, [sp, #48]
  409e10:	stp	x25, x26, [sp, #64]
  409e14:	stp	x27, x28, [sp, #80]
  409e18:	ldr	x23, [x22]
  409e1c:	ldr	x20, [x22, #32]
  409e20:	bl	401be0 <malloc@plt>
  409e24:	cbz	x0, 40a350 <_obstack_memory_used@@Base+0x810>
  409e28:	str	wzr, [x0, #8]
  409e2c:	mov	x19, x0
  409e30:	str	xzr, [x0, #24]
  409e34:	cbz	x23, 40a020 <_obstack_memory_used@@Base+0x4e0>
  409e38:	ldr	w0, [x23, #24]
  409e3c:	tbnz	w0, #2, 40a330 <_obstack_memory_used@@Base+0x7f0>
  409e40:	mov	x24, x23
  409e44:	mov	w25, #0x0                   	// #0
  409e48:	mov	w27, #0x0                   	// #0
  409e4c:	nop
  409e50:	ldr	w0, [x24, #8]
  409e54:	cbnz	w0, 409e60 <_obstack_memory_used@@Base+0x320>
  409e58:	ldr	x0, [x24]
  409e5c:	cbz	x0, 409ea4 <_obstack_memory_used@@Base+0x364>
  409e60:	ldr	w0, [x24, #24]
  409e64:	tbnz	w0, #2, 409e70 <_obstack_memory_used@@Base+0x330>
  409e68:	add	w25, w25, #0x1
  409e6c:	str	w25, [x19, #8]
  409e70:	ldr	w0, [x24, #24]
  409e74:	tbnz	w0, #3, 409e9c <_obstack_memory_used@@Base+0x35c>
  409e78:	ldr	w26, [x24, #8]
  409e7c:	sub	w0, w26, #0x1
  409e80:	cmp	w0, #0xfe
  409e84:	b.hi	409e9c <_obstack_memory_used@@Base+0x35c>  // b.pmore
  409e88:	bl	401d00 <__ctype_b_loc@plt>
  409e8c:	ldr	x0, [x0]
  409e90:	ldrh	w0, [x0, w26, sxtw #1]
  409e94:	ubfx	x0, x0, #14, #1
  409e98:	add	w27, w27, w0
  409e9c:	add	x24, x24, #0x30
  409ea0:	b	409e50 <_obstack_memory_used@@Base+0x310>
  409ea4:	ldr	x0, [x24, #32]
  409ea8:	cbnz	x0, 409e60 <_obstack_memory_used@@Base+0x320>
  409eac:	ldr	w28, [x24, #40]
  409eb0:	cbnz	w28, 409e60 <_obstack_memory_used@@Base+0x320>
  409eb4:	mov	w0, #0x38                  	// #56
  409eb8:	umull	x0, w25, w0
  409ebc:	bl	401be0 <malloc@plt>
  409ec0:	mov	x24, x0
  409ec4:	str	x24, [x19]
  409ec8:	add	w0, w27, #0x1
  409ecc:	bl	401be0 <malloc@plt>
  409ed0:	str	x0, [x19, #16]
  409ed4:	cmp	x24, #0x0
  409ed8:	mov	x3, x0
  409edc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  409ee0:	b.eq	40a310 <_obstack_memory_used@@Base+0x7d0>  // b.none
  409ee4:	ldr	w2, [x23, #8]
  409ee8:	mov	x25, x0
  409eec:	ldr	w1, [x23, #40]
  409ef0:	cbnz	w2, 409fc0 <_obstack_memory_used@@Base+0x480>
  409ef4:	nop
  409ef8:	ldr	x0, [x23]
  409efc:	cbz	x0, 409ff0 <_obstack_memory_used@@Base+0x4b0>
  409f00:	str	x23, [x24]
  409f04:	str	wzr, [x24, #8]
  409f08:	str	x25, [x24, #16]
  409f0c:	cbnz	w1, 409fd0 <_obstack_memory_used@@Base+0x490>
  409f10:	ldr	x0, [x23]
  409f14:	cmp	x0, #0x0
  409f18:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  409f1c:	b.eq	40a008 <_obstack_memory_used@@Base+0x4c8>  // b.none
  409f20:	mov	w27, #0x1                   	// #1
  409f24:	str	w28, [x24, #24]
  409f28:	stp	x21, x22, [x24, #32]
  409f2c:	nop
  409f30:	str	w27, [x24, #8]
  409f34:	ldr	w0, [x23, #24]
  409f38:	tbnz	w0, #3, 409f90 <_obstack_memory_used@@Base+0x450>
  409f3c:	ldr	w26, [x23, #8]
  409f40:	sub	w0, w26, #0x1
  409f44:	cmp	w0, #0xfe
  409f48:	b.hi	409f90 <_obstack_memory_used@@Base+0x450>  // b.pmore
  409f4c:	str	x3, [sp, #96]
  409f50:	bl	401d00 <__ctype_b_loc@plt>
  409f54:	ldr	x0, [x0]
  409f58:	ldr	x3, [sp, #96]
  409f5c:	ldrh	w0, [x0, w26, sxtw #1]
  409f60:	tbz	w0, #14, 409f90 <_obstack_memory_used@@Base+0x450>
  409f64:	and	w26, w26, #0xff
  409f68:	cmp	x3, x25
  409f6c:	b.cs	40a010 <_obstack_memory_used@@Base+0x4d0>  // b.hs, b.nlast
  409f70:	mov	x1, x3
  409f74:	b	409f84 <_obstack_memory_used@@Base+0x444>
  409f78:	add	x1, x1, #0x1
  409f7c:	cmp	x1, x25
  409f80:	b.eq	40a010 <_obstack_memory_used@@Base+0x4d0>  // b.none
  409f84:	ldrb	w0, [x1]
  409f88:	cmp	w0, w26
  409f8c:	b.ne	409f78 <_obstack_memory_used@@Base+0x438>  // b.any
  409f90:	ldr	w0, [x23, #56]
  409f94:	add	x23, x23, #0x30
  409f98:	cbnz	w0, 409fa4 <_obstack_memory_used@@Base+0x464>
  409f9c:	ldr	x1, [x23]
  409fa0:	cbz	x1, 409fd8 <_obstack_memory_used@@Base+0x498>
  409fa4:	ldr	w1, [x23, #24]
  409fa8:	add	w27, w27, #0x1
  409fac:	tbnz	w1, #2, 409f30 <_obstack_memory_used@@Base+0x3f0>
  409fb0:	mov	w2, w0
  409fb4:	add	x24, x24, #0x38
  409fb8:	ldr	w1, [x23, #40]
  409fbc:	cbz	w2, 409ef8 <_obstack_memory_used@@Base+0x3b8>
  409fc0:	str	x23, [x24]
  409fc4:	str	wzr, [x24, #8]
  409fc8:	str	x25, [x24, #16]
  409fcc:	cbz	w1, 409f20 <_obstack_memory_used@@Base+0x3e0>
  409fd0:	mov	w28, w1
  409fd4:	b	409f20 <_obstack_memory_used@@Base+0x3e0>
  409fd8:	ldr	x1, [x23, #32]
  409fdc:	cbnz	x1, 409fa4 <_obstack_memory_used@@Base+0x464>
  409fe0:	ldr	w2, [x23, #40]
  409fe4:	cbnz	w2, 409fa4 <_obstack_memory_used@@Base+0x464>
  409fe8:	add	x24, x24, #0x38
  409fec:	b	409fb8 <_obstack_memory_used@@Base+0x478>
  409ff0:	ldr	x0, [x23, #32]
  409ff4:	cbz	x0, 40a018 <_obstack_memory_used@@Base+0x4d8>
  409ff8:	str	x23, [x24]
  409ffc:	str	wzr, [x24, #8]
  40a000:	str	x25, [x24, #16]
  40a004:	cbnz	w1, 409fd0 <_obstack_memory_used@@Base+0x490>
  40a008:	add	w28, w28, #0x1
  40a00c:	b	409f20 <_obstack_memory_used@@Base+0x3e0>
  40a010:	strb	w26, [x25], #1
  40a014:	b	409f90 <_obstack_memory_used@@Base+0x450>
  40a018:	cbnz	w1, 40a11c <_obstack_memory_used@@Base+0x5dc>
  40a01c:	strb	wzr, [x25]
  40a020:	cbz	x20, 40a0fc <_obstack_memory_used@@Base+0x5bc>
  40a024:	ldr	x24, [x20]
  40a028:	cbz	x24, 40a0fc <_obstack_memory_used@@Base+0x5bc>
  40a02c:	add	x0, x19, #0x18
  40a030:	str	x0, [sp, #152]
  40a034:	ldr	w25, [x20, #24]
  40a038:	ldr	x26, [x20, #16]
  40a03c:	cbnz	w25, 40a048 <_obstack_memory_used@@Base+0x508>
  40a040:	mov	x1, x21
  40a044:	cbz	x26, 40a090 <_obstack_memory_used@@Base+0x550>
  40a048:	ldr	x23, [x22, #32]
  40a04c:	mov	x0, #0x30                  	// #48
  40a050:	bl	401be0 <malloc@plt>
  40a054:	mov	x1, x0
  40a058:	sub	x23, x20, x23
  40a05c:	asr	x23, x23, #5
  40a060:	cbz	x0, 40a090 <_obstack_memory_used@@Base+0x550>
  40a064:	str	x26, [x1]
  40a068:	mov	w0, #0x0                   	// #0
  40a06c:	stp	w23, w25, [x1, #8]
  40a070:	stp	x21, x22, [x1, #16]
  40a074:	cbz	x21, 40a080 <_obstack_memory_used@@Base+0x540>
  40a078:	ldr	w0, [x21, #32]
  40a07c:	add	w0, w0, #0x1
  40a080:	ldr	x2, [x19, #24]
  40a084:	str	x1, [x19, #24]
  40a088:	str	w0, [x1, #32]
  40a08c:	str	x2, [x1, #40]
  40a090:	mov	x0, x24
  40a094:	bl	409df0 <_obstack_memory_used@@Base+0x2b0>
  40a098:	ldr	x1, [x19, #24]
  40a09c:	mov	x28, x0
  40a0a0:	cbz	x1, 40a308 <_obstack_memory_used@@Base+0x7c8>
  40a0a4:	nop
  40a0a8:	mov	x0, x1
  40a0ac:	ldr	x1, [x1, #40]
  40a0b0:	cbnz	x1, 40a0a8 <_obstack_memory_used@@Base+0x568>
  40a0b4:	add	x0, x0, #0x28
  40a0b8:	ldr	w23, [x28, #8]
  40a0bc:	ldr	x1, [x28, #24]
  40a0c0:	str	x1, [x0]
  40a0c4:	str	xzr, [x28, #24]
  40a0c8:	cbz	w23, 40a0ec <_obstack_memory_used@@Base+0x5ac>
  40a0cc:	ldr	w27, [x19, #8]
  40a0d0:	cbnz	w27, 40a12c <_obstack_memory_used@@Base+0x5ec>
  40a0d4:	ldr	x0, [x28]
  40a0d8:	str	x0, [x19]
  40a0dc:	ldr	x0, [x28, #16]
  40a0e0:	str	w23, [x19, #8]
  40a0e4:	str	x0, [x19, #16]
  40a0e8:	str	wzr, [x28, #8]
  40a0ec:	mov	x0, x28
  40a0f0:	bl	409b68 <_obstack_memory_used@@Base+0x28>
  40a0f4:	ldr	x24, [x20, #32]!
  40a0f8:	cbnz	x24, 40a034 <_obstack_memory_used@@Base+0x4f4>
  40a0fc:	mov	x0, x19
  40a100:	ldp	x19, x20, [sp, #16]
  40a104:	ldp	x21, x22, [sp, #32]
  40a108:	ldp	x23, x24, [sp, #48]
  40a10c:	ldp	x25, x26, [sp, #64]
  40a110:	ldp	x27, x28, [sp, #80]
  40a114:	ldp	x29, x30, [sp], #160
  40a118:	ret
  40a11c:	mov	w28, w1
  40a120:	str	x23, [x24]
  40a124:	str	x25, [x24, #16]
  40a128:	b	409f20 <_obstack_memory_used@@Base+0x3e0>
  40a12c:	add	w0, w23, w27
  40a130:	mov	w1, #0x38                  	// #56
  40a134:	str	w0, [sp, #140]
  40a138:	umull	x0, w0, w1
  40a13c:	bl	401be0 <malloc@plt>
  40a140:	str	x0, [sp, #128]
  40a144:	ldr	x25, [x19, #16]
  40a148:	mov	x0, x25
  40a14c:	bl	401b00 <strlen@plt>
  40a150:	ldr	x26, [x28, #16]
  40a154:	mov	w24, w0
  40a158:	str	x24, [sp, #96]
  40a15c:	mov	x0, x26
  40a160:	bl	401b00 <strlen@plt>
  40a164:	add	x0, x0, #0x1
  40a168:	add	x0, x0, x24
  40a16c:	bl	401be0 <malloc@plt>
  40a170:	ldr	x1, [sp, #128]
  40a174:	mov	x24, x0
  40a178:	cmp	x1, #0x0
  40a17c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  40a180:	b.eq	40a370 <_obstack_memory_used@@Base+0x830>  // b.none
  40a184:	mov	w0, #0x38                  	// #56
  40a188:	ldr	x1, [x19]
  40a18c:	umull	x2, w27, w0
  40a190:	ldr	x0, [sp, #128]
  40a194:	str	x1, [sp, #144]
  40a198:	sub	w27, w27, #0x1
  40a19c:	add	x27, x27, #0x1
  40a1a0:	bl	401d40 <mempcpy@plt>
  40a1a4:	mov	w1, #0x38                  	// #56
  40a1a8:	umull	x2, w23, w1
  40a1ac:	ldr	x1, [x28]
  40a1b0:	bl	401aa0 <memcpy@plt>
  40a1b4:	ldr	x2, [sp, #96]
  40a1b8:	mov	x1, x25
  40a1bc:	mov	x0, x24
  40a1c0:	bl	401aa0 <memcpy@plt>
  40a1c4:	ldr	x0, [sp, #128]
  40a1c8:	lsl	x3, x27, #3
  40a1cc:	sub	x27, x3, x27
  40a1d0:	mov	x2, x0
  40a1d4:	add	x27, x0, x27, lsl #3
  40a1d8:	ldr	x1, [x2, #16]
  40a1dc:	add	x2, x2, #0x38
  40a1e0:	sub	x1, x1, x25
  40a1e4:	add	x1, x24, x1
  40a1e8:	stur	x1, [x2, #-40]
  40a1ec:	cmp	x2, x27
  40a1f0:	b.ne	40a1d8 <_obstack_memory_used@@Base+0x698>  // b.any
  40a1f4:	ldr	x0, [sp, #96]
  40a1f8:	sub	w23, w23, #0x1
  40a1fc:	add	x1, x24, x0
  40a200:	add	x0, x23, #0x1
  40a204:	stp	x1, x1, [sp, #104]
  40a208:	lsl	x1, x0, #3
  40a20c:	sub	x0, x1, x0
  40a210:	add	x0, x27, x0, lsl #3
  40a214:	str	x0, [sp, #120]
  40a218:	ldr	w1, [x27, #8]
  40a21c:	ldr	x0, [sp, #104]
  40a220:	str	x0, [x27, #16]
  40a224:	ldr	x5, [x27]
  40a228:	cbz	w1, 40a288 <_obstack_memory_used@@Base+0x748>
  40a22c:	sub	w1, w1, #0x1
  40a230:	add	x1, x1, #0x1
  40a234:	add	x1, x1, x1, lsl #1
  40a238:	add	x25, x5, x1, lsl #4
  40a23c:	nop
  40a240:	ldr	w0, [x5, #24]
  40a244:	tbnz	w0, #3, 40a27c <_obstack_memory_used@@Base+0x73c>
  40a248:	ldr	w23, [x5, #8]
  40a24c:	sub	w0, w23, #0x1
  40a250:	cmp	w0, #0xfe
  40a254:	b.hi	40a27c <_obstack_memory_used@@Base+0x73c>  // b.pmore
  40a258:	str	x5, [sp, #96]
  40a25c:	bl	401d00 <__ctype_b_loc@plt>
  40a260:	ldr	x0, [x0]
  40a264:	ldrb	w6, [x26]
  40a268:	ldr	x5, [sp, #96]
  40a26c:	ldrh	w0, [x0, w23, sxtw #1]
  40a270:	tst	x0, #0x4000
  40a274:	ccmp	w6, w23, #0x0, ne  // ne = any
  40a278:	b.eq	40a2c8 <_obstack_memory_used@@Base+0x788>  // b.none
  40a27c:	add	x5, x5, #0x30
  40a280:	cmp	x25, x5
  40a284:	b.ne	40a240 <_obstack_memory_used@@Base+0x700>  // b.any
  40a288:	ldr	x0, [sp, #120]
  40a28c:	add	x27, x27, #0x38
  40a290:	cmp	x0, x27
  40a294:	b.ne	40a218 <_obstack_memory_used@@Base+0x6d8>  // b.any
  40a298:	ldr	x0, [sp, #104]
  40a29c:	strb	wzr, [x0]
  40a2a0:	ldr	x0, [sp, #144]
  40a2a4:	bl	401d30 <free@plt>
  40a2a8:	ldr	x0, [x19, #16]
  40a2ac:	bl	401d30 <free@plt>
  40a2b0:	str	x24, [x19, #16]
  40a2b4:	ldr	x0, [sp, #128]
  40a2b8:	str	x0, [x19]
  40a2bc:	ldr	w0, [sp, #140]
  40a2c0:	str	w0, [x19, #8]
  40a2c4:	b	40a0ec <_obstack_memory_used@@Base+0x5ac>
  40a2c8:	ldr	x0, [sp, #112]
  40a2cc:	cmp	x24, x0
  40a2d0:	b.cs	40a2f4 <_obstack_memory_used@@Base+0x7b4>  // b.hs, b.nlast
  40a2d4:	mov	x2, x24
  40a2d8:	ldrb	w0, [x2]
  40a2dc:	cmp	w0, w6
  40a2e0:	b.eq	40a300 <_obstack_memory_used@@Base+0x7c0>  // b.none
  40a2e4:	ldr	x0, [sp, #112]
  40a2e8:	add	x2, x2, #0x1
  40a2ec:	cmp	x0, x2
  40a2f0:	b.ne	40a2d8 <_obstack_memory_used@@Base+0x798>  // b.any
  40a2f4:	ldr	x23, [sp, #104]
  40a2f8:	strb	w6, [x23], #1
  40a2fc:	str	x23, [sp, #104]
  40a300:	add	x26, x26, #0x1
  40a304:	b	40a27c <_obstack_memory_used@@Base+0x73c>
  40a308:	ldr	x0, [sp, #152]
  40a30c:	b	40a0b8 <_obstack_memory_used@@Base+0x578>
  40a310:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  40a314:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40a318:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40a31c:	add	x3, x3, #0x9c8
  40a320:	add	x1, x1, #0x660
  40a324:	add	x0, x0, #0x688
  40a328:	mov	w2, #0x1d2                 	// #466
  40a32c:	bl	401e90 <__assert_fail@plt>
  40a330:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  40a334:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40a338:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40a33c:	add	x3, x3, #0x9c8
  40a340:	add	x1, x1, #0x660
  40a344:	add	x0, x0, #0x678
  40a348:	mov	w2, #0x1c4                 	// #452
  40a34c:	bl	401e90 <__assert_fail@plt>
  40a350:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  40a354:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40a358:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40a35c:	add	x3, x3, #0x9c8
  40a360:	add	x1, x1, #0x660
  40a364:	add	x0, x0, #0x670
  40a368:	mov	w2, #0x1ba                 	// #442
  40a36c:	bl	401e90 <__assert_fail@plt>
  40a370:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  40a374:	add	x3, x3, #0x9c8
  40a378:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40a37c:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40a380:	add	x3, x3, #0x10
  40a384:	add	x1, x1, #0x660
  40a388:	add	x0, x0, #0x6b0
  40a38c:	mov	w2, #0x372                 	// #882
  40a390:	bl	401e90 <__assert_fail@plt>
  40a394:	nop
  40a398:	stp	x29, x30, [sp, #-112]!
  40a39c:	mov	x29, sp
  40a3a0:	stp	x19, x20, [sp, #16]
  40a3a4:	ldr	w20, [x0, #8]
  40a3a8:	stp	x23, x24, [sp, #48]
  40a3ac:	stp	x25, x26, [sp, #64]
  40a3b0:	str	x1, [sp, #104]
  40a3b4:	ldr	x25, [x0]
  40a3b8:	ldr	x24, [x0, #16]
  40a3bc:	cbz	w20, 40a490 <_obstack_memory_used@@Base+0x950>
  40a3c0:	mov	x26, x2
  40a3c4:	mov	x19, x25
  40a3c8:	stp	x21, x22, [sp, #32]
  40a3cc:	stp	x27, x28, [sp, #80]
  40a3d0:	mov	x27, x3
  40a3d4:	b	40a414 <_obstack_memory_used@@Base+0x8d4>
  40a3d8:	ldr	w28, [x19, #8]
  40a3dc:	sub	w0, w28, #0x1
  40a3e0:	cmp	w0, #0xfe
  40a3e4:	b.hi	40a404 <_obstack_memory_used@@Base+0x8c4>  // b.pmore
  40a3e8:	bl	401d00 <__ctype_b_loc@plt>
  40a3ec:	ldr	x0, [x0]
  40a3f0:	ldrh	w0, [x0, w28, sxtw #1]
  40a3f4:	tbz	w0, #14, 40a404 <_obstack_memory_used@@Base+0x8c4>
  40a3f8:	ldrb	w0, [x24]
  40a3fc:	cmp	w0, w28
  40a400:	b.eq	40a458 <_obstack_memory_used@@Base+0x918>  // b.none
  40a404:	subs	w20, w20, #0x1
  40a408:	add	x19, x19, #0x30
  40a40c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  40a410:	b.eq	40a438 <_obstack_memory_used@@Base+0x8f8>  // b.none
  40a414:	ldr	w21, [x19, #24]
  40a418:	mov	w22, #0x1                   	// #1
  40a41c:	and	w23, w21, #0x8
  40a420:	tbz	w21, #3, 40a3d8 <_obstack_memory_used@@Base+0x898>
  40a424:	subs	w20, w20, #0x1
  40a428:	add	x19, x19, #0x30
  40a42c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  40a430:	mov	w23, #0x0                   	// #0
  40a434:	b.ne	40a414 <_obstack_memory_used@@Base+0x8d4>  // b.any
  40a438:	mov	w0, w23
  40a43c:	ldp	x19, x20, [sp, #16]
  40a440:	ldp	x21, x22, [sp, #32]
  40a444:	ldp	x23, x24, [sp, #48]
  40a448:	ldp	x25, x26, [sp, #64]
  40a44c:	ldp	x27, x28, [sp, #80]
  40a450:	ldp	x29, x30, [sp], #112
  40a454:	ret
  40a458:	tst	x21, #0x4
  40a45c:	mov	x3, x27
  40a460:	csel	x25, x25, x19, ne  // ne = any
  40a464:	mov	x2, x26
  40a468:	mov	x0, x19
  40a46c:	add	x24, x24, #0x1
  40a470:	mov	x1, x25
  40a474:	tbnz	w21, #1, 40a404 <_obstack_memory_used@@Base+0x8c4>
  40a478:	ldr	x4, [sp, #104]
  40a47c:	blr	x4
  40a480:	cmp	w0, #0x0
  40a484:	mov	w23, w0
  40a488:	cset	w22, eq  // eq = none
  40a48c:	b	40a404 <_obstack_memory_used@@Base+0x8c4>
  40a490:	mov	w23, #0x0                   	// #0
  40a494:	mov	w0, w23
  40a498:	ldp	x19, x20, [sp, #16]
  40a49c:	ldp	x23, x24, [sp, #48]
  40a4a0:	ldp	x25, x26, [sp, #64]
  40a4a4:	ldp	x29, x30, [sp], #112
  40a4a8:	ret
  40a4ac:	nop
  40a4b0:	stp	x29, x30, [sp, #-112]!
  40a4b4:	mov	x29, sp
  40a4b8:	stp	x19, x20, [sp, #16]
  40a4bc:	ldr	w19, [x0, #8]
  40a4c0:	stp	x21, x22, [sp, #32]
  40a4c4:	stp	x23, x24, [sp, #48]
  40a4c8:	stp	x25, x26, [sp, #64]
  40a4cc:	str	x27, [sp, #80]
  40a4d0:	cbz	w19, 40a640 <_obstack_memory_used@@Base+0xb00>
  40a4d4:	mov	x20, x0
  40a4d8:	mov	x21, x1
  40a4dc:	ldr	x0, [x0, #16]
  40a4e0:	sub	w19, w19, #0x1
  40a4e4:	adrp	x23, 409000 <argp_parse@@Base+0x1058>
  40a4e8:	add	x23, x23, #0xbc8
  40a4ec:	bl	401b00 <strlen@plt>
  40a4f0:	add	x1, x0, #0x10
  40a4f4:	add	x0, x19, #0x1
  40a4f8:	and	x1, x1, #0xfffffffffffffff0
  40a4fc:	ldr	x19, [x20]
  40a500:	lsl	x22, x0, #3
  40a504:	sub	x22, x22, x0
  40a508:	sub	sp, sp, x1
  40a50c:	mov	x24, sp
  40a510:	str	x24, [x29, #104]
  40a514:	add	x22, x19, x22, lsl #3
  40a518:	ldr	x2, [x19, #40]
  40a51c:	mov	x0, x19
  40a520:	add	x3, x29, #0x68
  40a524:	mov	x1, x23
  40a528:	add	x19, x19, #0x38
  40a52c:	ldr	x2, [x2, #48]
  40a530:	bl	40a398 <_obstack_memory_used@@Base+0x858>
  40a534:	cmp	x19, x22
  40a538:	b.ne	40a518 <_obstack_memory_used@@Base+0x9d8>  // b.any
  40a53c:	ldr	x0, [x29, #104]
  40a540:	cmp	x0, x24
  40a544:	b.hi	40a6a8 <_obstack_memory_used@@Base+0xb68>  // b.pmore
  40a548:	ldr	w0, [x20, #8]
  40a54c:	ldr	x19, [x20]
  40a550:	cbz	w0, 40a640 <_obstack_memory_used@@Base+0xb00>
  40a554:	sub	w0, w0, #0x1
  40a558:	adrp	x23, 40a000 <_obstack_memory_used@@Base+0x4c0>
  40a55c:	add	x0, x0, #0x1
  40a560:	add	x23, x23, #0xc68
  40a564:	lsl	x22, x0, #3
  40a568:	sub	x22, x22, x0
  40a56c:	add	x22, x19, x22, lsl #3
  40a570:	ldr	x2, [x19, #40]
  40a574:	mov	x0, x19
  40a578:	mov	x3, x21
  40a57c:	mov	x1, x23
  40a580:	add	x19, x19, #0x38
  40a584:	ldr	x2, [x2, #48]
  40a588:	bl	40a398 <_obstack_memory_used@@Base+0x858>
  40a58c:	cmp	x22, x19
  40a590:	b.ne	40a570 <_obstack_memory_used@@Base+0xa30>  // b.any
  40a594:	ldr	w0, [x20, #8]
  40a598:	ldr	x27, [x20]
  40a59c:	cbz	w0, 40a640 <_obstack_memory_used@@Base+0xb00>
  40a5a0:	sub	w0, w0, #0x1
  40a5a4:	adrp	x24, 411000 <argp_error@@Base+0x43a0>
  40a5a8:	add	x0, x0, #0x1
  40a5ac:	adrp	x23, 411000 <argp_error@@Base+0x43a0>
  40a5b0:	add	x24, x24, #0x6e8
  40a5b4:	add	x23, x23, #0x6d8
  40a5b8:	lsl	x22, x0, #3
  40a5bc:	sub	x0, x22, x0
  40a5c0:	add	x22, x27, x0, lsl #3
  40a5c4:	nop
  40a5c8:	ldr	w0, [x27, #8]
  40a5cc:	ldr	x26, [x27]
  40a5d0:	cbz	w0, 40a634 <_obstack_memory_used@@Base+0xaf4>
  40a5d4:	sub	w0, w0, #0x1
  40a5d8:	mov	x19, x26
  40a5dc:	add	x20, x0, #0x1
  40a5e0:	adrp	x25, 411000 <argp_error@@Base+0x43a0>
  40a5e4:	add	x20, x20, x20, lsl #1
  40a5e8:	add	x20, x26, x20, lsl #4
  40a5ec:	nop
  40a5f0:	ldr	x2, [x19]
  40a5f4:	cbz	x2, 40a628 <_obstack_memory_used@@Base+0xae8>
  40a5f8:	ldr	w0, [x19, #24]
  40a5fc:	tst	x0, #0x4
  40a600:	csel	x26, x26, x19, ne  // ne = any
  40a604:	tbnz	w0, #1, 40a628 <_obstack_memory_used@@Base+0xae8>
  40a608:	ldr	x3, [x19, #16]
  40a60c:	ldr	w1, [x26, #24]
  40a610:	orr	w1, w0, w1
  40a614:	and	w0, w0, #0x8
  40a618:	cbz	x3, 40a660 <_obstack_memory_used@@Base+0xb20>
  40a61c:	and	w4, w1, #0x10
  40a620:	orr	w0, w4, w0
  40a624:	cbz	w0, 40a684 <_obstack_memory_used@@Base+0xb44>
  40a628:	add	x19, x19, #0x30
  40a62c:	cmp	x20, x19
  40a630:	b.ne	40a5f0 <_obstack_memory_used@@Base+0xab0>  // b.any
  40a634:	add	x27, x27, #0x38
  40a638:	cmp	x22, x27
  40a63c:	b.ne	40a5c8 <_obstack_memory_used@@Base+0xa88>  // b.any
  40a640:	mov	sp, x29
  40a644:	ldp	x19, x20, [sp, #16]
  40a648:	ldp	x21, x22, [sp, #32]
  40a64c:	ldp	x23, x24, [sp, #48]
  40a650:	ldp	x25, x26, [sp, #64]
  40a654:	ldr	x27, [sp, #80]
  40a658:	ldp	x29, x30, [sp], #112
  40a65c:	ret
  40a660:	and	w3, w1, #0x10
  40a664:	orr	w0, w3, w0
  40a668:	ldr	x3, [x26, #16]
  40a66c:	cbnz	w0, 40a628 <_obstack_memory_used@@Base+0xae8>
  40a670:	cbnz	x3, 40a684 <_obstack_memory_used@@Base+0xb44>
  40a674:	add	x1, x25, #0x6f8
  40a678:	mov	x0, x21
  40a67c:	bl	40e3c8 <argp_error@@Base+0x1768>
  40a680:	b	40a628 <_obstack_memory_used@@Base+0xae8>
  40a684:	tbz	w1, #0, 40a698 <_obstack_memory_used@@Base+0xb58>
  40a688:	mov	x1, x23
  40a68c:	mov	x0, x21
  40a690:	bl	40e3c8 <argp_error@@Base+0x1768>
  40a694:	b	40a628 <_obstack_memory_used@@Base+0xae8>
  40a698:	mov	x1, x24
  40a69c:	mov	x0, x21
  40a6a0:	bl	40e3c8 <argp_error@@Base+0x1768>
  40a6a4:	b	40a628 <_obstack_memory_used@@Base+0xae8>
  40a6a8:	add	x1, x0, #0x1
  40a6ac:	str	x1, [x29, #104]
  40a6b0:	strb	wzr, [x0]
  40a6b4:	mov	x2, x24
  40a6b8:	mov	x0, x21
  40a6bc:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40a6c0:	add	x1, x1, #0x6d0
  40a6c4:	bl	40e3c8 <argp_error@@Base+0x1768>
  40a6c8:	b	40a548 <_obstack_memory_used@@Base+0xa08>
  40a6cc:	nop
  40a6d0:	stp	x29, x30, [sp, #-80]!
  40a6d4:	mov	x29, sp
  40a6d8:	ldr	x3, [x1, #32]
  40a6dc:	stp	x19, x20, [sp, #16]
  40a6e0:	ldr	w4, [x0, #24]
  40a6e4:	ldr	x2, [x0, #32]
  40a6e8:	stp	x21, x22, [sp, #32]
  40a6ec:	mov	x20, x1
  40a6f0:	mov	x21, x0
  40a6f4:	ldr	w1, [x1, #24]
  40a6f8:	cmp	x2, x3
  40a6fc:	b.eq	40a7f4 <_obstack_memory_used@@Base+0xcb4>  // b.none
  40a700:	cbz	x2, 40a790 <_obstack_memory_used@@Base+0xc50>
  40a704:	cbz	x3, 40a7b0 <_obstack_memory_used@@Base+0xc70>
  40a708:	ldr	w0, [x2, #32]
  40a70c:	ldr	w1, [x3, #32]
  40a710:	cmp	w0, w1
  40a714:	b.le	40a738 <_obstack_memory_used@@Base+0xbf8>
  40a718:	ldr	x2, [x2, #16]
  40a71c:	ldr	w0, [x2, #32]
  40a720:	cmp	w1, w0
  40a724:	b.lt	40a718 <_obstack_memory_used@@Base+0xbd8>  // b.tstop
  40a728:	cmp	w1, w0
  40a72c:	b.le	40a740 <_obstack_memory_used@@Base+0xc00>
  40a730:	ldr	x3, [x3, #16]
  40a734:	ldr	w1, [x3, #32]
  40a738:	cmp	w1, w0
  40a73c:	b.gt	40a730 <_obstack_memory_used@@Base+0xbf0>
  40a740:	mov	x0, x2
  40a744:	mov	x1, x3
  40a748:	ldr	x2, [x2, #16]
  40a74c:	ldr	x3, [x3, #16]
  40a750:	cmp	x2, x3
  40a754:	b.ne	40a740 <_obstack_memory_used@@Base+0xc00>  // b.any
  40a758:	ldr	w3, [x0, #12]
  40a75c:	ldr	w2, [x1, #12]
  40a760:	cmp	w3, w2
  40a764:	b.eq	40a824 <_obstack_memory_used@@Base+0xce4>  // b.none
  40a768:	mvn	w1, w2
  40a76c:	sub	w4, w3, w2
  40a770:	sub	w0, w2, w3
  40a774:	lsr	w1, w1, #31
  40a778:	cmp	w1, w3, lsr #31
  40a77c:	csel	w0, w0, w4, eq  // eq = none
  40a780:	ldp	x19, x20, [sp, #16]
  40a784:	ldp	x21, x22, [sp, #32]
  40a788:	ldp	x29, x30, [sp], #80
  40a78c:	ret
  40a790:	mov	x0, x3
  40a794:	ldr	x3, [x3, #16]
  40a798:	cbnz	x3, 40a790 <_obstack_memory_used@@Base+0xc50>
  40a79c:	ldr	w1, [x0, #12]
  40a7a0:	mov	w0, #0xffffffff            	// #-1
  40a7a4:	cmp	w4, w1
  40a7a8:	b.ne	40a7fc <_obstack_memory_used@@Base+0xcbc>  // b.any
  40a7ac:	b	40a780 <_obstack_memory_used@@Base+0xc40>
  40a7b0:	mov	x0, x2
  40a7b4:	ldr	x2, [x2, #16]
  40a7b8:	cbnz	x2, 40a7b0 <_obstack_memory_used@@Base+0xc70>
  40a7bc:	ldr	w2, [x0, #12]
  40a7c0:	mov	w0, #0x1                   	// #1
  40a7c4:	cmp	w1, w2
  40a7c8:	b.eq	40a780 <_obstack_memory_used@@Base+0xc40>  // b.none
  40a7cc:	mvn	w3, w1
  40a7d0:	sub	w0, w2, w1
  40a7d4:	sub	w1, w1, w2
  40a7d8:	lsr	w3, w3, #31
  40a7dc:	cmp	w3, w2, lsr #31
  40a7e0:	csel	w0, w1, w0, eq  // eq = none
  40a7e4:	ldp	x19, x20, [sp, #16]
  40a7e8:	ldp	x21, x22, [sp, #32]
  40a7ec:	ldp	x29, x30, [sp], #80
  40a7f0:	ret
  40a7f4:	cmp	w4, w1
  40a7f8:	b.eq	40a858 <_obstack_memory_used@@Base+0xd18>  // b.none
  40a7fc:	mvn	w2, w1
  40a800:	sub	w0, w4, w1
  40a804:	sub	w1, w1, w4
  40a808:	lsr	w2, w2, #31
  40a80c:	cmp	w2, w4, lsr #31
  40a810:	csel	w0, w1, w0, eq  // eq = none
  40a814:	ldp	x19, x20, [sp, #16]
  40a818:	ldp	x21, x22, [sp, #32]
  40a81c:	ldp	x29, x30, [sp], #80
  40a820:	ret
  40a824:	ldr	w0, [x0, #8]
  40a828:	ldr	w2, [x1, #8]
  40a82c:	subs	w0, w2, w0
  40a830:	b.ne	40a780 <_obstack_memory_used@@Base+0xc40>  // b.any
  40a834:	ldr	w1, [x20, #48]
  40a838:	mov	w0, #0xffffffff            	// #-1
  40a83c:	ldr	w2, [x21, #48]
  40a840:	ldp	x19, x20, [sp, #16]
  40a844:	cmp	w2, w1
  40a848:	cneg	w0, w0, cs  // cs = hs, nlast
  40a84c:	ldp	x21, x22, [sp, #32]
  40a850:	ldp	x29, x30, [sp], #80
  40a854:	ret
  40a858:	ldr	x2, [x0, #40]
  40a85c:	adrp	x19, 40a000 <_obstack_memory_used@@Base+0x4c0>
  40a860:	add	x19, x19, #0xb30
  40a864:	mov	x3, #0x0                   	// #0
  40a868:	mov	x1, x19
  40a86c:	stp	x23, x24, [sp, #48]
  40a870:	ldr	x2, [x2, #48]
  40a874:	bl	40a398 <_obstack_memory_used@@Base+0x858>
  40a878:	mov	w22, w0
  40a87c:	ldr	x2, [x20, #40]
  40a880:	mov	x1, x19
  40a884:	mov	x3, #0x0                   	// #0
  40a888:	mov	x0, x20
  40a88c:	ldr	x2, [x2, #48]
  40a890:	bl	40a398 <_obstack_memory_used@@Base+0x858>
  40a894:	mov	w24, w0
  40a898:	ldr	x1, [x20]
  40a89c:	ldr	x2, [x21]
  40a8a0:	ldr	w3, [x21, #8]
  40a8a4:	ldr	w23, [x1, #24]
  40a8a8:	ldr	w19, [x2, #24]
  40a8ac:	and	w23, w23, #0x8
  40a8b0:	and	w19, w19, #0x8
  40a8b4:	cbz	w3, 40a8e4 <_obstack_memory_used@@Base+0xda4>
  40a8b8:	sub	w3, w3, #0x1
  40a8bc:	add	x4, x3, #0x1
  40a8c0:	add	x4, x4, x4, lsl #1
  40a8c4:	add	x4, x2, x4, lsl #4
  40a8c8:	ldr	x3, [x2]
  40a8cc:	cbz	x3, 40a8d8 <_obstack_memory_used@@Base+0xd98>
  40a8d0:	ldr	w5, [x2, #24]
  40a8d4:	tbz	w5, #1, 40a8e8 <_obstack_memory_used@@Base+0xda8>
  40a8d8:	add	x2, x2, #0x30
  40a8dc:	cmp	x2, x4
  40a8e0:	b.ne	40a8c8 <_obstack_memory_used@@Base+0xd88>  // b.any
  40a8e4:	mov	x3, #0x0                   	// #0
  40a8e8:	ldr	w2, [x20, #8]
  40a8ec:	str	x3, [sp, #64]
  40a8f0:	cbz	w2, 40a97c <_obstack_memory_used@@Base+0xe3c>
  40a8f4:	sub	w2, w2, #0x1
  40a8f8:	add	x4, x2, #0x1
  40a8fc:	add	x4, x4, x4, lsl #1
  40a900:	add	x4, x1, x4, lsl #4
  40a904:	nop
  40a908:	ldr	x2, [x1]
  40a90c:	cbz	x2, 40a918 <_obstack_memory_used@@Base+0xdd8>
  40a910:	ldr	w5, [x1, #24]
  40a914:	tbz	w5, #1, 40a928 <_obstack_memory_used@@Base+0xde8>
  40a918:	add	x1, x1, #0x30
  40a91c:	cmp	x1, x4
  40a920:	b.ne	40a908 <_obstack_memory_used@@Base+0xdc8>  // b.any
  40a924:	mov	x2, #0x0                   	// #0
  40a928:	str	x2, [sp, #72]
  40a92c:	cbnz	w19, 40a958 <_obstack_memory_used@@Base+0xe18>
  40a930:	cbz	w23, 40a990 <_obstack_memory_used@@Base+0xe50>
  40a934:	cbz	x2, 40aa78 <_obstack_memory_used@@Base+0xf38>
  40a938:	add	x0, sp, #0x48
  40a93c:	bl	409c08 <_obstack_memory_used@@Base+0xc8>
  40a940:	mov	w23, w0
  40a944:	cmp	w23, w19
  40a948:	b.eq	40a990 <_obstack_memory_used@@Base+0xe50>  // b.none
  40a94c:	sub	w0, w19, w23
  40a950:	ldp	x23, x24, [sp, #48]
  40a954:	b	40a780 <_obstack_memory_used@@Base+0xc40>
  40a958:	cbz	x3, 40aa48 <_obstack_memory_used@@Base+0xf08>
  40a95c:	add	x0, sp, #0x40
  40a960:	bl	409c08 <_obstack_memory_used@@Base+0xc8>
  40a964:	mov	w19, w0
  40a968:	cbz	w23, 40a944 <_obstack_memory_used@@Base+0xe04>
  40a96c:	ldr	x0, [sp, #72]
  40a970:	mov	w23, #0x1                   	// #1
  40a974:	cbnz	x0, 40a938 <_obstack_memory_used@@Base+0xdf8>
  40a978:	b	40a944 <_obstack_memory_used@@Base+0xe04>
  40a97c:	str	xzr, [sp, #72]
  40a980:	cbz	w19, 40aa74 <_obstack_memory_used@@Base+0xf34>
  40a984:	cbnz	x3, 40a95c <_obstack_memory_used@@Base+0xe1c>
  40a988:	cbz	w23, 40aa4c <_obstack_memory_used@@Base+0xf0c>
  40a98c:	nop
  40a990:	orr	w0, w22, w24
  40a994:	and	w19, w22, #0xff
  40a998:	tst	w0, #0xff
  40a99c:	and	w22, w22, #0xff
  40a9a0:	b.ne	40a9d8 <_obstack_memory_used@@Base+0xe98>  // b.any
  40a9a4:	ldr	x0, [sp, #64]
  40a9a8:	cbz	x0, 40aa2c <_obstack_memory_used@@Base+0xeec>
  40a9ac:	ldr	x1, [sp, #72]
  40a9b0:	cbz	x1, 40aa58 <_obstack_memory_used@@Base+0xf18>
  40a9b4:	bl	401c60 <strcasecmp@plt>
  40a9b8:	cbnz	w0, 40aa24 <_obstack_memory_used@@Base+0xee4>
  40a9bc:	ldr	w1, [x20, #48]
  40a9c0:	mov	w0, #0x1                   	// #1
  40a9c4:	ldr	w2, [x21, #48]
  40a9c8:	ldp	x23, x24, [sp, #48]
  40a9cc:	cmp	w2, w1
  40a9d0:	cneg	w0, w0, cc  // cc = lo, ul, last
  40a9d4:	b	40a780 <_obstack_memory_used@@Base+0xc40>
  40a9d8:	cbnz	w22, 40a9e8 <_obstack_memory_used@@Base+0xea8>
  40a9dc:	ldr	x0, [sp, #64]
  40a9e0:	cbz	x0, 40aa30 <_obstack_memory_used@@Base+0xef0>
  40a9e4:	ldrb	w19, [x0]
  40a9e8:	ubfiz	x23, x19, #2, #8
  40a9ec:	tst	w24, #0xff
  40a9f0:	b.ne	40aa3c <_obstack_memory_used@@Base+0xefc>  // b.any
  40a9f4:	ldr	x0, [sp, #72]
  40a9f8:	cbz	x0, 40aa68 <_obstack_memory_used@@Base+0xf28>
  40a9fc:	ldrb	w22, [x0]
  40aa00:	ubfiz	x24, x22, #2, #8
  40aa04:	bl	401ba0 <__ctype_tolower_loc@plt>
  40aa08:	ldr	x0, [x0]
  40aa0c:	ldr	w2, [x0, x23]
  40aa10:	ldr	w0, [x0, x24]
  40aa14:	subs	w0, w2, w0
  40aa18:	b.ne	40aa24 <_obstack_memory_used@@Base+0xee4>  // b.any
  40aa1c:	subs	w0, w22, w19
  40aa20:	b.eq	40a9bc <_obstack_memory_used@@Base+0xe7c>  // b.none
  40aa24:	ldp	x23, x24, [sp, #48]
  40aa28:	b	40a780 <_obstack_memory_used@@Base+0xc40>
  40aa2c:	cbnz	w22, 40a9e8 <_obstack_memory_used@@Base+0xea8>
  40aa30:	mov	x23, #0x0                   	// #0
  40aa34:	mov	w19, #0x0                   	// #0
  40aa38:	b	40a9ec <_obstack_memory_used@@Base+0xeac>
  40aa3c:	and	w22, w24, #0xff
  40aa40:	ubfiz	x24, x24, #2, #8
  40aa44:	b	40aa04 <_obstack_memory_used@@Base+0xec4>
  40aa48:	cbnz	w23, 40aa84 <_obstack_memory_used@@Base+0xf44>
  40aa4c:	mov	w0, #0x1                   	// #1
  40aa50:	ldp	x23, x24, [sp, #48]
  40aa54:	b	40a780 <_obstack_memory_used@@Base+0xc40>
  40aa58:	cbz	w22, 40a9e4 <_obstack_memory_used@@Base+0xea4>
  40aa5c:	tst	w24, #0xff
  40aa60:	ubfiz	x23, x19, #2, #8
  40aa64:	b.ne	40aa3c <_obstack_memory_used@@Base+0xefc>  // b.any
  40aa68:	mov	x24, #0x0                   	// #0
  40aa6c:	mov	w22, #0x0                   	// #0
  40aa70:	b	40aa04 <_obstack_memory_used@@Base+0xec4>
  40aa74:	cbz	w23, 40a990 <_obstack_memory_used@@Base+0xe50>
  40aa78:	mov	w19, #0x0                   	// #0
  40aa7c:	mov	w23, #0x1                   	// #1
  40aa80:	b	40a94c <_obstack_memory_used@@Base+0xe0c>
  40aa84:	mov	w19, #0x1                   	// #1
  40aa88:	cbnz	x2, 40a938 <_obstack_memory_used@@Base+0xdf8>
  40aa8c:	b	40a990 <_obstack_memory_used@@Base+0xe50>
  40aa90:	stp	x29, x30, [sp, #-48]!
  40aa94:	mov	x29, sp
  40aa98:	stp	x19, x20, [sp, #16]
  40aa9c:	mov	w20, w1
  40aaa0:	mov	x19, x0
  40aaa4:	ldp	x3, x1, [x0, #48]
  40aaa8:	ldr	x2, [x0, #32]
  40aaac:	str	x21, [sp, #32]
  40aab0:	sub	x1, x1, x3
  40aab4:	cmp	x1, x2
  40aab8:	b.hi	40ab28 <_obstack_memory_used@@Base+0xfe8>  // b.pmore
  40aabc:	ldr	x0, [x19, #40]
  40aac0:	mov	w21, #0x20                  	// #32
  40aac4:	cmp	x0, #0x0
  40aac8:	csel	x0, x0, xzr, ge  // ge = tcont
  40aacc:	sub	w20, w20, w0
  40aad0:	cmp	w20, #0x0
  40aad4:	sub	w20, w20, #0x1
  40aad8:	b.le	40ab18 <_obstack_memory_used@@Base+0xfd8>
  40aadc:	nop
  40aae0:	ldp	x2, x3, [x19, #56]
  40aae4:	sub	w20, w20, #0x1
  40aae8:	mov	x0, x19
  40aaec:	mov	x1, #0x1                   	// #1
  40aaf0:	cmp	x2, x3
  40aaf4:	b.cc	40ab04 <_obstack_memory_used@@Base+0xfc4>  // b.lo, b.ul, b.last
  40aaf8:	bl	40e3a8 <argp_error@@Base+0x1748>
  40aafc:	cbz	w0, 40ab10 <_obstack_memory_used@@Base+0xfd0>
  40ab00:	ldr	x2, [x19, #56]
  40ab04:	add	x0, x2, #0x1
  40ab08:	str	x0, [x19, #56]
  40ab0c:	strb	w21, [x2]
  40ab10:	cmn	w20, #0x1
  40ab14:	b.ne	40aae0 <_obstack_memory_used@@Base+0xfa0>  // b.any
  40ab18:	ldp	x19, x20, [sp, #16]
  40ab1c:	ldr	x21, [sp, #32]
  40ab20:	ldp	x29, x30, [sp], #48
  40ab24:	ret
  40ab28:	bl	40dd30 <argp_error@@Base+0x10d0>
  40ab2c:	b	40aabc <_obstack_memory_used@@Base+0xf7c>
  40ab30:	ldr	w2, [x0, #24]
  40ab34:	tbnz	w2, #3, 40ab7c <_obstack_memory_used@@Base+0x103c>
  40ab38:	stp	x29, x30, [sp, #-32]!
  40ab3c:	mov	x1, x0
  40ab40:	and	w0, w2, #0x8
  40ab44:	mov	x29, sp
  40ab48:	str	x19, [sp, #16]
  40ab4c:	ldr	w19, [x1, #8]
  40ab50:	sub	w1, w19, #0x1
  40ab54:	cmp	w1, #0xfe
  40ab58:	b.hi	40ab70 <_obstack_memory_used@@Base+0x1030>  // b.pmore
  40ab5c:	bl	401d00 <__ctype_b_loc@plt>
  40ab60:	ldr	x0, [x0]
  40ab64:	ldrh	w0, [x0, w19, sxtw #1]
  40ab68:	tst	x0, #0x4000
  40ab6c:	csel	w0, wzr, w19, eq  // eq = none
  40ab70:	ldr	x19, [sp, #16]
  40ab74:	ldp	x29, x30, [sp], #32
  40ab78:	ret
  40ab7c:	mov	w0, #0x0                   	// #0
  40ab80:	ret
  40ab84:	nop
  40ab88:	stp	x29, x30, [sp, #-32]!
  40ab8c:	mov	x29, sp
  40ab90:	stp	x19, x20, [sp, #16]
  40ab94:	mov	x20, x1
  40ab98:	mov	x19, x0
  40ab9c:	ldp	x1, x2, [x0, #48]
  40aba0:	ldr	x3, [x0, #32]
  40aba4:	sub	x1, x2, x1
  40aba8:	cmp	x1, x3
  40abac:	b.hi	40ac58 <_obstack_memory_used@@Base+0x1118>  // b.pmore
  40abb0:	ldr	x0, [x19, #40]
  40abb4:	ldr	x1, [x19, #16]
  40abb8:	cmp	x0, #0x0
  40abbc:	csel	x0, x0, xzr, ge  // ge = tcont
  40abc0:	add	x0, x0, x20
  40abc4:	cmp	x0, x1
  40abc8:	ldr	x0, [x19, #64]
  40abcc:	b.cc	40abf4 <_obstack_memory_used@@Base+0x10b4>  // b.lo, b.ul, b.last
  40abd0:	cmp	x2, x0
  40abd4:	b.cs	40ac18 <_obstack_memory_used@@Base+0x10d8>  // b.hs, b.nlast
  40abd8:	add	x0, x2, #0x1
  40abdc:	str	x0, [x19, #56]
  40abe0:	mov	w0, #0xa                   	// #10
  40abe4:	strb	w0, [x2]
  40abe8:	ldp	x19, x20, [sp, #16]
  40abec:	ldp	x29, x30, [sp], #32
  40abf0:	ret
  40abf4:	cmp	x2, x0
  40abf8:	b.cs	40ac40 <_obstack_memory_used@@Base+0x1100>  // b.hs, b.nlast
  40abfc:	add	x0, x2, #0x1
  40ac00:	str	x0, [x19, #56]
  40ac04:	mov	w0, #0x20                  	// #32
  40ac08:	strb	w0, [x2]
  40ac0c:	ldp	x19, x20, [sp, #16]
  40ac10:	ldp	x29, x30, [sp], #32
  40ac14:	ret
  40ac18:	mov	x0, x19
  40ac1c:	mov	x1, #0x1                   	// #1
  40ac20:	bl	40e3a8 <argp_error@@Base+0x1748>
  40ac24:	cbz	w0, 40ac0c <_obstack_memory_used@@Base+0x10cc>
  40ac28:	ldr	x2, [x19, #56]
  40ac2c:	add	x0, x2, #0x1
  40ac30:	str	x0, [x19, #56]
  40ac34:	mov	w0, #0xa                   	// #10
  40ac38:	strb	w0, [x2]
  40ac3c:	b	40abe8 <_obstack_memory_used@@Base+0x10a8>
  40ac40:	mov	x0, x19
  40ac44:	mov	x1, #0x1                   	// #1
  40ac48:	bl	40e3a8 <argp_error@@Base+0x1748>
  40ac4c:	cbz	w0, 40ac0c <_obstack_memory_used@@Base+0x10cc>
  40ac50:	ldr	x2, [x19, #56]
  40ac54:	b	40abfc <_obstack_memory_used@@Base+0x10bc>
  40ac58:	bl	40dd30 <argp_error@@Base+0x10d0>
  40ac5c:	ldr	x2, [x19, #56]
  40ac60:	b	40abb0 <_obstack_memory_used@@Base+0x1070>
  40ac64:	nop
  40ac68:	stp	x29, x30, [sp, #-48]!
  40ac6c:	mov	x29, sp
  40ac70:	str	x21, [sp, #32]
  40ac74:	ldr	x21, [x0, #16]
  40ac78:	stp	x19, x20, [sp, #16]
  40ac7c:	mov	x19, x0
  40ac80:	mov	x20, x3
  40ac84:	cbz	x21, 40acc8 <_obstack_memory_used@@Base+0x1188>
  40ac88:	ldr	w1, [x1, #24]
  40ac8c:	ldr	w0, [x19, #24]
  40ac90:	orr	w0, w0, w1
  40ac94:	tbnz	w0, #4, 40acb4 <_obstack_memory_used@@Base+0x1174>
  40ac98:	tbz	w0, #0, 40ace4 <_obstack_memory_used@@Base+0x11a4>
  40ac9c:	ldr	w2, [x19, #8]
  40aca0:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40aca4:	mov	x3, x21
  40aca8:	mov	x0, x20
  40acac:	add	x1, x1, #0x700
  40acb0:	bl	40e3c8 <argp_error@@Base+0x1768>
  40acb4:	mov	w0, #0x0                   	// #0
  40acb8:	ldp	x19, x20, [sp, #16]
  40acbc:	ldr	x21, [sp, #32]
  40acc0:	ldp	x29, x30, [sp], #48
  40acc4:	ret
  40acc8:	ldr	x21, [x1, #16]
  40accc:	cbnz	x21, 40ac88 <_obstack_memory_used@@Base+0x1148>
  40acd0:	mov	w0, #0x0                   	// #0
  40acd4:	ldp	x19, x20, [sp, #16]
  40acd8:	ldr	x21, [sp, #32]
  40acdc:	ldp	x29, x30, [sp], #48
  40ace0:	ret
  40ace4:	mov	x0, x21
  40ace8:	bl	401b00 <strlen@plt>
  40acec:	mov	x1, x0
  40acf0:	mov	x0, x20
  40acf4:	add	x1, x1, #0x6
  40acf8:	bl	40ab88 <_obstack_memory_used@@Base+0x1048>
  40acfc:	ldr	w2, [x19, #8]
  40ad00:	mov	x3, x21
  40ad04:	mov	x0, x20
  40ad08:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40ad0c:	add	x1, x1, #0x710
  40ad10:	bl	40e3c8 <argp_error@@Base+0x1768>
  40ad14:	mov	w0, #0x0                   	// #0
  40ad18:	ldp	x19, x20, [sp, #16]
  40ad1c:	ldr	x21, [sp, #32]
  40ad20:	ldp	x29, x30, [sp], #48
  40ad24:	ret
  40ad28:	stp	x29, x30, [sp, #-112]!
  40ad2c:	mov	x29, sp
  40ad30:	stp	x21, x22, [sp, #32]
  40ad34:	mov	x21, x4
  40ad38:	stp	x23, x24, [sp, #48]
  40ad3c:	mov	x24, x1
  40ad40:	mov	x23, x2
  40ad44:	ldp	x22, x1, [x0, #32]
  40ad48:	stp	x27, x28, [sp, #80]
  40ad4c:	ldr	x2, [x2]
  40ad50:	stp	x19, x20, [sp, #16]
  40ad54:	mov	w20, w3
  40ad58:	ldr	x28, [x0, #16]
  40ad5c:	stp	x25, x26, [sp, #64]
  40ad60:	str	x2, [sp, #104]
  40ad64:	mov	x25, x28
  40ad68:	cbz	x1, 40ad88 <_obstack_memory_used@@Base+0x1248>
  40ad6c:	mov	w1, #0x6                   	// #6
  40ad70:	mov	x2, x0
  40ad74:	mov	x3, x24
  40ad78:	mov	x0, x28
  40ad7c:	movk	w1, #0x200, lsl #16
  40ad80:	bl	409da0 <_obstack_memory_used@@Base+0x260>
  40ad84:	mov	x25, x0
  40ad88:	cbz	x25, 40aee4 <_obstack_memory_used@@Base+0x13a4>
  40ad8c:	mov	x0, x25
  40ad90:	mov	w1, #0xa                   	// #10
  40ad94:	bl	401e10 <strchrnul@plt>
  40ad98:	mov	x19, x0
  40ad9c:	ldrb	w0, [x0]
  40ada0:	cbnz	w0, 40ae8c <_obstack_memory_used@@Base+0x134c>
  40ada4:	mov	x26, x25
  40ada8:	mov	w27, #0x0                   	// #0
  40adac:	add	x1, x19, #0x1
  40adb0:	mov	x0, x21
  40adb4:	sub	x1, x1, x26
  40adb8:	bl	40ab88 <_obstack_memory_used@@Base+0x1048>
  40adbc:	ldp	x0, x4, [x21, #56]
  40adc0:	sub	x2, x19, x26
  40adc4:	add	x1, x0, x2
  40adc8:	cmp	x4, x1
  40adcc:	b.cs	40adec <_obstack_memory_used@@Base+0x12ac>  // b.hs, b.nlast
  40add0:	mov	x1, x2
  40add4:	mov	x0, x21
  40add8:	str	x2, [sp, #96]
  40addc:	bl	40e3a8 <argp_error@@Base+0x1748>
  40ade0:	cbz	w0, 40ae08 <_obstack_memory_used@@Base+0x12c8>
  40ade4:	ldr	x0, [x21, #56]
  40ade8:	ldr	x2, [sp, #96]
  40adec:	mov	x1, x26
  40adf0:	str	x2, [sp, #96]
  40adf4:	bl	401aa0 <memcpy@plt>
  40adf8:	ldr	x0, [x21, #56]
  40adfc:	ldr	x2, [sp, #96]
  40ae00:	add	x2, x0, x2
  40ae04:	str	x2, [x21, #56]
  40ae08:	cmp	x28, x25
  40ae0c:	b.ne	40aed8 <_obstack_memory_used@@Base+0x1398>  // b.any
  40ae10:	cbz	x22, 40ae48 <_obstack_memory_used@@Base+0x1308>
  40ae14:	ldr	x0, [x22]
  40ae18:	cbz	x0, 40ae48 <_obstack_memory_used@@Base+0x1308>
  40ae1c:	nop
  40ae20:	mov	w3, w20
  40ae24:	mov	x1, x24
  40ae28:	mov	x4, x21
  40ae2c:	mov	x2, x23
  40ae30:	bl	40ad28 <_obstack_memory_used@@Base+0x11e8>
  40ae34:	mov	w1, w0
  40ae38:	ldr	x0, [x22, #32]!
  40ae3c:	cmp	w1, #0x0
  40ae40:	cset	w20, eq  // eq = none
  40ae44:	cbnz	x0, 40ae20 <_obstack_memory_used@@Base+0x12e0>
  40ae48:	cmp	w20, #0x0
  40ae4c:	ccmp	w27, #0x0, #0x4, ne  // ne = any
  40ae50:	b.eq	40aef8 <_obstack_memory_used@@Base+0x13b8>  // b.none
  40ae54:	ldrb	w0, [x19]
  40ae58:	ldr	x2, [sp, #104]
  40ae5c:	ldrb	w1, [x2]
  40ae60:	cbz	w0, 40af1c <_obstack_memory_used@@Base+0x13dc>
  40ae64:	add	w1, w1, #0x1
  40ae68:	mov	w0, #0x1                   	// #1
  40ae6c:	strb	w1, [x2]
  40ae70:	ldp	x19, x20, [sp, #16]
  40ae74:	ldp	x21, x22, [sp, #32]
  40ae78:	ldp	x23, x24, [sp, #48]
  40ae7c:	ldp	x25, x26, [sp, #64]
  40ae80:	ldp	x27, x28, [sp, #80]
  40ae84:	ldp	x29, x30, [sp], #112
  40ae88:	ret
  40ae8c:	ldr	x0, [sp, #104]
  40ae90:	ldrb	w0, [x0]
  40ae94:	str	w0, [sp, #96]
  40ae98:	cbz	w0, 40af48 <_obstack_memory_used@@Base+0x1408>
  40ae9c:	mov	w27, #0x0                   	// #0
  40aea0:	add	x26, x19, #0x1
  40aea4:	mov	w1, #0xa                   	// #10
  40aea8:	mov	x0, x26
  40aeac:	bl	401e10 <strchrnul@plt>
  40aeb0:	ldr	w1, [sp, #96]
  40aeb4:	add	w27, w27, #0x1
  40aeb8:	mov	x19, x0
  40aebc:	cmp	w27, w1
  40aec0:	b.ne	40aea0 <_obstack_memory_used@@Base+0x1360>  // b.any
  40aec4:	ldr	x0, [x23]
  40aec8:	mov	w27, #0x1                   	// #1
  40aecc:	add	x0, x0, #0x1
  40aed0:	str	x0, [x23]
  40aed4:	b	40adac <_obstack_memory_used@@Base+0x126c>
  40aed8:	mov	x0, x25
  40aedc:	bl	401d30 <free@plt>
  40aee0:	b	40ae10 <_obstack_memory_used@@Base+0x12d0>
  40aee4:	cbz	x22, 40aef8 <_obstack_memory_used@@Base+0x13b8>
  40aee8:	ldr	x0, [x22]
  40aeec:	mov	x19, #0x0                   	// #0
  40aef0:	mov	w27, #0x0                   	// #0
  40aef4:	cbnz	x0, 40ae20 <_obstack_memory_used@@Base+0x12e0>
  40aef8:	cmp	w20, #0x0
  40aefc:	cset	w0, eq  // eq = none
  40af00:	ldp	x19, x20, [sp, #16]
  40af04:	ldp	x21, x22, [sp, #32]
  40af08:	ldp	x23, x24, [sp, #48]
  40af0c:	ldp	x25, x26, [sp, #64]
  40af10:	ldp	x27, x28, [sp, #80]
  40af14:	ldp	x29, x30, [sp], #112
  40af18:	ret
  40af1c:	mov	w0, #0x0                   	// #0
  40af20:	cbz	w1, 40ae70 <_obstack_memory_used@@Base+0x1330>
  40af24:	ldr	x1, [sp, #104]
  40af28:	strb	wzr, [x1]
  40af2c:	ldp	x19, x20, [sp, #16]
  40af30:	ldp	x21, x22, [sp, #32]
  40af34:	ldp	x23, x24, [sp, #48]
  40af38:	ldp	x25, x26, [sp, #64]
  40af3c:	ldp	x27, x28, [sp, #80]
  40af40:	ldp	x29, x30, [sp], #112
  40af44:	ret
  40af48:	mov	x26, x25
  40af4c:	b	40aec4 <_obstack_memory_used@@Base+0x1384>
  40af50:	stp	x29, x30, [sp, #-96]!
  40af54:	mov	x4, x1
  40af58:	mov	x29, sp
  40af5c:	ldr	x1, [x1, #40]
  40af60:	stp	x19, x20, [sp, #16]
  40af64:	mov	x20, x2
  40af68:	stp	x23, x24, [sp, #48]
  40af6c:	mov	x19, x0
  40af70:	mov	x23, x0
  40af74:	str	x0, [sp, #88]
  40af78:	cbz	x1, 40af94 <_obstack_memory_used@@Base+0x1454>
  40af7c:	ldr	x3, [x20, #32]
  40af80:	mov	w1, #0x3                   	// #3
  40af84:	mov	x2, x4
  40af88:	movk	w1, #0x200, lsl #16
  40af8c:	bl	409da0 <_obstack_memory_used@@Base+0x260>
  40af90:	mov	x19, x0
  40af94:	cbz	x19, 40afac <_obstack_memory_used@@Base+0x146c>
  40af98:	ldrb	w1, [x19]
  40af9c:	ldr	x0, [x20, #16]
  40afa0:	cbnz	w1, 40afc8 <_obstack_memory_used@@Base+0x1488>
  40afa4:	mov	w1, #0x1                   	// #1
  40afa8:	str	w1, [x0, #8]
  40afac:	cmp	x23, x19
  40afb0:	b.eq	40b0a4 <_obstack_memory_used@@Base+0x1564>  // b.none
  40afb4:	mov	x0, x19
  40afb8:	ldp	x19, x20, [sp, #16]
  40afbc:	ldp	x23, x24, [sp, #48]
  40afc0:	ldp	x29, x30, [sp], #96
  40afc4:	b	401d30 <free@plt>
  40afc8:	ldr	x0, [x0]
  40afcc:	stp	x21, x22, [sp, #32]
  40afd0:	stp	x25, x26, [sp, #64]
  40afd4:	ldr	x21, [x20, #8]
  40afd8:	cbz	x0, 40b010 <_obstack_memory_used@@Base+0x14d0>
  40afdc:	ldp	x0, x1, [x21, #56]
  40afe0:	cmp	x0, x1
  40afe4:	b.cc	40affc <_obstack_memory_used@@Base+0x14bc>  // b.lo, b.ul, b.last
  40afe8:	mov	x0, x21
  40afec:	mov	x1, #0x1                   	// #1
  40aff0:	bl	40e3a8 <argp_error@@Base+0x1748>
  40aff4:	cbz	w0, 40b00c <_obstack_memory_used@@Base+0x14cc>
  40aff8:	ldr	x0, [x21, #56]
  40affc:	add	x1, x0, #0x1
  40b000:	str	x1, [x21, #56]
  40b004:	mov	w1, #0xa                   	// #10
  40b008:	strb	w1, [x0]
  40b00c:	ldr	x21, [x20, #8]
  40b010:	adrp	x24, 427000 <argp_error@@Base+0x1a3a0>
  40b014:	add	x24, x24, #0x498
  40b018:	mov	x0, x21
  40b01c:	ldr	w1, [x24, #24]
  40b020:	bl	40aa90 <_obstack_memory_used@@Base+0xf50>
  40b024:	ldrsw	x25, [x24, #24]
  40b028:	ldr	x21, [x20, #8]
  40b02c:	ldp	x0, x22, [x21, #48]
  40b030:	ldr	x1, [x21, #32]
  40b034:	sub	x0, x22, x0
  40b038:	cmp	x0, x1
  40b03c:	b.hi	40b12c <_obstack_memory_used@@Base+0x15ec>  // b.pmore
  40b040:	mov	x26, x21
  40b044:	str	x25, [x21, #8]
  40b048:	str	x25, [x26, #24]
  40b04c:	mov	x0, x19
  40b050:	bl	401b00 <strlen@plt>
  40b054:	mov	x24, x0
  40b058:	cbnz	x0, 40b0e0 <_obstack_memory_used@@Base+0x15a0>
  40b05c:	ldr	x0, [x21, #48]
  40b060:	mov	x24, x21
  40b064:	ldr	x1, [x21, #32]
  40b068:	sub	x0, x22, x0
  40b06c:	cmp	x0, x1
  40b070:	b.hi	40b0cc <_obstack_memory_used@@Base+0x158c>  // b.pmore
  40b074:	ldr	x0, [x24, #64]
  40b078:	str	xzr, [x21, #8]
  40b07c:	cmp	x0, x22
  40b080:	b.ls	40b0b4 <_obstack_memory_used@@Base+0x1574>  // b.plast
  40b084:	add	x0, x22, #0x1
  40b088:	str	x0, [x24, #56]
  40b08c:	mov	w0, #0xa                   	// #10
  40b090:	strb	w0, [x22]
  40b094:	ldr	x0, [x20, #16]
  40b098:	ldp	x21, x22, [sp, #32]
  40b09c:	ldp	x25, x26, [sp, #64]
  40b0a0:	b	40afa4 <_obstack_memory_used@@Base+0x1464>
  40b0a4:	ldp	x19, x20, [sp, #16]
  40b0a8:	ldp	x23, x24, [sp, #48]
  40b0ac:	ldp	x29, x30, [sp], #96
  40b0b0:	ret
  40b0b4:	mov	x0, x24
  40b0b8:	mov	x1, #0x1                   	// #1
  40b0bc:	bl	40e3a8 <argp_error@@Base+0x1748>
  40b0c0:	cbz	w0, 40b094 <_obstack_memory_used@@Base+0x1554>
  40b0c4:	ldr	x22, [x24, #56]
  40b0c8:	b	40b084 <_obstack_memory_used@@Base+0x1544>
  40b0cc:	mov	x0, x21
  40b0d0:	bl	40dd30 <argp_error@@Base+0x10d0>
  40b0d4:	ldr	x24, [x20, #8]
  40b0d8:	ldr	x22, [x24, #56]
  40b0dc:	b	40b074 <_obstack_memory_used@@Base+0x1534>
  40b0e0:	ldr	x1, [x21, #64]
  40b0e4:	add	x0, x22, x0
  40b0e8:	cmp	x1, x0
  40b0ec:	b.cs	40b104 <_obstack_memory_used@@Base+0x15c4>  // b.hs, b.nlast
  40b0f0:	mov	x1, x24
  40b0f4:	mov	x0, x21
  40b0f8:	bl	40e3a8 <argp_error@@Base+0x1748>
  40b0fc:	cbz	w0, 40b120 <_obstack_memory_used@@Base+0x15e0>
  40b100:	ldr	x22, [x21, #56]
  40b104:	mov	x0, x22
  40b108:	mov	x2, x24
  40b10c:	mov	x1, x19
  40b110:	bl	401aa0 <memcpy@plt>
  40b114:	ldr	x0, [x21, #56]
  40b118:	add	x0, x0, x24
  40b11c:	str	x0, [x21, #56]
  40b120:	ldr	x21, [x20, #8]
  40b124:	ldr	x22, [x21, #56]
  40b128:	b	40b05c <_obstack_memory_used@@Base+0x151c>
  40b12c:	mov	x0, x21
  40b130:	bl	40dd30 <argp_error@@Base+0x10d0>
  40b134:	ldr	x26, [x20, #8]
  40b138:	ldr	w24, [x24, #24]
  40b13c:	ldp	x0, x22, [x26, #48]
  40b140:	ldr	x1, [x26, #32]
  40b144:	str	x25, [x21, #8]
  40b148:	sub	x0, x22, x0
  40b14c:	cmp	x0, x1
  40b150:	b.ls	40b16c <_obstack_memory_used@@Base+0x162c>  // b.plast
  40b154:	mov	x0, x26
  40b158:	bl	40dd30 <argp_error@@Base+0x10d0>
  40b15c:	ldr	x21, [x20, #8]
  40b160:	sxtw	x25, w24
  40b164:	ldr	x22, [x21, #56]
  40b168:	b	40b048 <_obstack_memory_used@@Base+0x1508>
  40b16c:	sxtw	x25, w24
  40b170:	mov	x21, x26
  40b174:	b	40b048 <_obstack_memory_used@@Base+0x1508>
  40b178:	stp	x29, x30, [sp, #-64]!
  40b17c:	mov	x29, sp
  40b180:	stp	x19, x20, [sp, #16]
  40b184:	mov	w20, w0
  40b188:	ldr	w0, [x1, #24]
  40b18c:	stp	x21, x22, [sp, #32]
  40b190:	mov	x19, x1
  40b194:	ldr	x21, [x1, #8]
  40b198:	cbz	w0, 40b2a0 <_obstack_memory_used@@Base+0x1760>
  40b19c:	ldr	x1, [x1]
  40b1a0:	ldr	x0, [x19, #16]
  40b1a4:	ldr	x22, [x1, #32]
  40b1a8:	str	x23, [sp, #48]
  40b1ac:	ldr	x23, [x0]
  40b1b0:	ldr	w0, [x0, #8]
  40b1b4:	cmp	w0, #0x0
  40b1b8:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  40b1bc:	b.ne	40b254 <_obstack_memory_used@@Base+0x1714>  // b.any
  40b1c0:	cbz	x22, 40b234 <_obstack_memory_used@@Base+0x16f4>
  40b1c4:	ldr	x0, [x22]
  40b1c8:	cbz	x0, 40b234 <_obstack_memory_used@@Base+0x16f4>
  40b1cc:	ldrb	w1, [x0]
  40b1d0:	cbz	w1, 40b234 <_obstack_memory_used@@Base+0x16f4>
  40b1d4:	cbz	x23, 40b200 <_obstack_memory_used@@Base+0x16c0>
  40b1d8:	ldr	x1, [x23, #32]
  40b1dc:	cmp	x1, x22
  40b1e0:	b.eq	40b234 <_obstack_memory_used@@Base+0x16f4>  // b.none
  40b1e4:	cbz	x1, 40b200 <_obstack_memory_used@@Base+0x16c0>
  40b1e8:	ldr	x1, [x1, #16]
  40b1ec:	cmp	x1, #0x0
  40b1f0:	ccmp	x22, x1, #0x4, ne  // ne = any
  40b1f4:	b.ne	40b1e8 <_obstack_memory_used@@Base+0x16a8>  // b.any
  40b1f8:	cmp	x22, x1
  40b1fc:	b.eq	40b234 <_obstack_memory_used@@Base+0x16f4>  // b.none
  40b200:	ldr	x1, [x22, #24]
  40b204:	mov	x2, x19
  40b208:	ldr	x23, [x21, #24]
  40b20c:	bl	40af50 <_obstack_memory_used@@Base+0x1410>
  40b210:	ldr	x22, [x19, #8]
  40b214:	mov	x21, x22
  40b218:	ldp	x2, x0, [x22, #48]
  40b21c:	ldr	x1, [x22, #32]
  40b220:	sub	x0, x0, x2
  40b224:	cmp	x0, x1
  40b228:	b.hi	40b2f4 <_obstack_memory_used@@Base+0x17b4>  // b.pmore
  40b22c:	sxtw	x23, w23
  40b230:	str	x23, [x22, #24]
  40b234:	ldr	x23, [sp, #48]
  40b238:	str	wzr, [x19, #24]
  40b23c:	mov	w1, w20
  40b240:	mov	x0, x21
  40b244:	ldp	x19, x20, [sp, #16]
  40b248:	ldp	x21, x22, [sp, #32]
  40b24c:	ldp	x29, x30, [sp], #64
  40b250:	b	40aa90 <_obstack_memory_used@@Base+0xf50>
  40b254:	ldr	w1, [x1, #24]
  40b258:	ldr	w0, [x23, #24]
  40b25c:	cmp	w1, w0
  40b260:	b.eq	40b1c0 <_obstack_memory_used@@Base+0x1680>  // b.none
  40b264:	ldp	x0, x1, [x21, #56]
  40b268:	cmp	x0, x1
  40b26c:	b.cc	40b284 <_obstack_memory_used@@Base+0x1744>  // b.lo, b.ul, b.last
  40b270:	mov	x0, x21
  40b274:	mov	x1, #0x1                   	// #1
  40b278:	bl	40e3a8 <argp_error@@Base+0x1748>
  40b27c:	cbz	w0, 40b294 <_obstack_memory_used@@Base+0x1754>
  40b280:	ldr	x0, [x21, #56]
  40b284:	add	x1, x0, #0x1
  40b288:	str	x1, [x21, #56]
  40b28c:	mov	w1, #0xa                   	// #10
  40b290:	strb	w1, [x0]
  40b294:	ldr	x21, [x19, #8]
  40b298:	cbnz	x22, 40b1c4 <_obstack_memory_used@@Base+0x1684>
  40b29c:	b	40b234 <_obstack_memory_used@@Base+0x16f4>
  40b2a0:	ldp	x0, x2, [x21, #56]
  40b2a4:	add	x1, x0, #0x2
  40b2a8:	cmp	x2, x1
  40b2ac:	b.cs	40b2c4 <_obstack_memory_used@@Base+0x1784>  // b.hs, b.nlast
  40b2b0:	mov	x0, x21
  40b2b4:	mov	x1, #0x2                   	// #2
  40b2b8:	bl	40e3a8 <argp_error@@Base+0x1748>
  40b2bc:	cbz	w0, 40b2d8 <_obstack_memory_used@@Base+0x1798>
  40b2c0:	ldr	x0, [x21, #56]
  40b2c4:	mov	w1, #0x202c                	// #8236
  40b2c8:	strh	w1, [x0]
  40b2cc:	ldr	x0, [x21, #56]
  40b2d0:	add	x0, x0, #0x2
  40b2d4:	str	x0, [x21, #56]
  40b2d8:	ldr	x21, [x19, #8]
  40b2dc:	mov	w1, w20
  40b2e0:	ldp	x19, x20, [sp, #16]
  40b2e4:	mov	x0, x21
  40b2e8:	ldp	x21, x22, [sp, #32]
  40b2ec:	ldp	x29, x30, [sp], #64
  40b2f0:	b	40aa90 <_obstack_memory_used@@Base+0xf50>
  40b2f4:	mov	x0, x22
  40b2f8:	bl	40dd30 <argp_error@@Base+0x10d0>
  40b2fc:	ldr	x21, [x19, #8]
  40b300:	b	40b22c <_obstack_memory_used@@Base+0x16ec>
  40b304:	nop
  40b308:	stp	x29, x30, [sp, #-128]!
  40b30c:	mov	x29, sp
  40b310:	stp	x19, x20, [sp, #16]
  40b314:	stp	x27, x28, [sp, #80]
  40b318:	mov	x28, x5
  40b31c:	ldp	x27, x20, [x0, #24]
  40b320:	stp	x21, x22, [sp, #32]
  40b324:	mov	x22, x0
  40b328:	stp	x23, x24, [sp, #48]
  40b32c:	mov	w21, w2
  40b330:	mov	w23, w3
  40b334:	stp	x25, x26, [sp, #64]
  40b338:	mov	w25, w4
  40b33c:	mov	x26, x1
  40b340:	cbz	x27, 40b574 <_obstack_memory_used@@Base+0x1a34>
  40b344:	mov	x0, x27
  40b348:	mov	w1, #0xb                   	// #11
  40b34c:	bl	401d70 <strchr@plt>
  40b350:	mov	x24, x0
  40b354:	cbz	x0, 40b3a0 <_obstack_memory_used@@Base+0x1860>
  40b358:	cbz	w21, 40b584 <_obstack_memory_used@@Base+0x1a44>
  40b35c:	ldrb	w0, [x0, #1]
  40b360:	ldr	x4, [x22, #40]
  40b364:	cbz	w0, 40b3d0 <_obstack_memory_used@@Base+0x1890>
  40b368:	add	x3, x24, #0x1
  40b36c:	cbz	x4, 40b7bc <_obstack_memory_used@@Base+0x1c7c>
  40b370:	mov	x1, x26
  40b374:	mov	x0, x22
  40b378:	str	x3, [sp, #104]
  40b37c:	bl	408c10 <argp_parse@@Base+0xc68>
  40b380:	ldr	x3, [sp, #104]
  40b384:	mov	x24, x0
  40b388:	mov	w0, #0x2                   	// #2
  40b38c:	str	wzr, [sp, #116]
  40b390:	mov	x27, x3
  40b394:	movk	w0, #0x200, lsl #16
  40b398:	ldr	x3, [x22, #40]
  40b39c:	b	40b5b8 <_obstack_memory_used@@Base+0x1a78>
  40b3a0:	ldr	x4, [x22, #40]
  40b3a4:	cbnz	w21, 40b3d0 <_obstack_memory_used@@Base+0x1890>
  40b3a8:	str	wzr, [sp, #116]
  40b3ac:	cbz	x4, 40b810 <_obstack_memory_used@@Base+0x1cd0>
  40b3b0:	mov	x1, x26
  40b3b4:	mov	x0, x22
  40b3b8:	bl	408c10 <argp_parse@@Base+0xc68>
  40b3bc:	mov	x24, x0
  40b3c0:	mov	w0, #0x1                   	// #1
  40b3c4:	movk	w0, #0x200, lsl #16
  40b3c8:	ldr	x3, [x22, #40]
  40b3cc:	b	40b5b8 <_obstack_memory_used@@Base+0x1a78>
  40b3d0:	cbz	x4, 40b57c <_obstack_memory_used@@Base+0x1a3c>
  40b3d4:	mov	x1, x26
  40b3d8:	mov	x0, x22
  40b3dc:	bl	408c10 <argp_parse@@Base+0xc68>
  40b3e0:	mov	x24, x0
  40b3e4:	ldr	x3, [x22, #40]
  40b3e8:	mov	w0, #0x2                   	// #2
  40b3ec:	mov	x2, x24
  40b3f0:	mov	x27, #0x0                   	// #0
  40b3f4:	movk	w0, #0x200, lsl #16
  40b3f8:	mov	x1, x27
  40b3fc:	str	wzr, [sp, #116]
  40b400:	blr	x3
  40b404:	mov	x3, x0
  40b408:	cbz	x3, 40b81c <_obstack_memory_used@@Base+0x1cdc>
  40b40c:	ldr	x19, [x28, #56]
  40b410:	cbnz	w23, 40b708 <_obstack_memory_used@@Base+0x1bc8>
  40b414:	mov	x0, x3
  40b418:	str	x3, [sp, #104]
  40b41c:	bl	401b00 <strlen@plt>
  40b420:	mov	x2, x0
  40b424:	ldr	x3, [sp, #104]
  40b428:	cbnz	x0, 40b634 <_obstack_memory_used@@Base+0x1af4>
  40b42c:	ldr	x1, [x28, #48]
  40b430:	ldr	x0, [x28, #32]
  40b434:	sub	x19, x19, x1
  40b438:	cmp	x19, x0
  40b43c:	b.hi	40b6a4 <_obstack_memory_used@@Base+0x1b64>  // b.pmore
  40b440:	ldr	x0, [x28, #40]
  40b444:	ldr	x1, [x28, #8]
  40b448:	cmp	x0, #0x0
  40b44c:	csel	x0, x0, xzr, ge  // ge = tcont
  40b450:	cmp	x1, x0
  40b454:	b.cc	40b6cc <_obstack_memory_used@@Base+0x1b8c>  // b.lo, b.ul, b.last
  40b458:	cmp	x27, x3
  40b45c:	mov	w19, #0x1                   	// #1
  40b460:	b.eq	40b46c <_obstack_memory_used@@Base+0x192c>  // b.none
  40b464:	mov	x0, x3
  40b468:	bl	401d30 <free@plt>
  40b46c:	ldr	w0, [sp, #116]
  40b470:	cbz	w0, 40b47c <_obstack_memory_used@@Base+0x193c>
  40b474:	mov	x0, x27
  40b478:	bl	401d30 <free@plt>
  40b47c:	cbz	w21, 40b4f8 <_obstack_memory_used@@Base+0x19b8>
  40b480:	ldr	x4, [x22, #40]
  40b484:	cbz	x4, 40b4f8 <_obstack_memory_used@@Base+0x19b8>
  40b488:	mov	w0, #0x4                   	// #4
  40b48c:	mov	x2, x24
  40b490:	movk	w0, #0x200, lsl #16
  40b494:	mov	x1, #0x0                   	// #0
  40b498:	blr	x4
  40b49c:	mov	x22, x0
  40b4a0:	cbz	x0, 40b4f8 <_obstack_memory_used@@Base+0x19b8>
  40b4a4:	orr	w19, w23, w19
  40b4a8:	cbnz	w19, 40b794 <_obstack_memory_used@@Base+0x1c54>
  40b4ac:	mov	x0, x22
  40b4b0:	bl	401b00 <strlen@plt>
  40b4b4:	mov	x19, x0
  40b4b8:	cbnz	x0, 40b754 <_obstack_memory_used@@Base+0x1c14>
  40b4bc:	mov	x0, x22
  40b4c0:	bl	401d30 <free@plt>
  40b4c4:	ldp	x2, x0, [x28, #48]
  40b4c8:	ldr	x1, [x28, #32]
  40b4cc:	sub	x0, x0, x2
  40b4d0:	cmp	x0, x1
  40b4d4:	b.hi	40b748 <_obstack_memory_used@@Base+0x1c08>  // b.pmore
  40b4d8:	ldr	x0, [x28, #40]
  40b4dc:	ldr	x1, [x28, #8]
  40b4e0:	cmp	x0, #0x0
  40b4e4:	csel	x0, x0, xzr, ge  // ge = tcont
  40b4e8:	cmp	x1, x0
  40b4ec:	b.cc	40b610 <_obstack_memory_used@@Base+0x1ad0>  // b.lo, b.ul, b.last
  40b4f0:	mov	w19, #0x1                   	// #1
  40b4f4:	nop
  40b4f8:	cbz	x20, 40b554 <_obstack_memory_used@@Base+0x1a14>
  40b4fc:	ldr	x0, [x20]
  40b500:	cbz	x0, 40b554 <_obstack_memory_used@@Base+0x1a14>
  40b504:	eor	w2, w25, #0x1
  40b508:	eor	w1, w19, #0x1
  40b50c:	and	w22, w2, #0x1
  40b510:	orr	w1, w1, w2
  40b514:	tbz	w1, #0, 40b7b4 <_obstack_memory_used@@Base+0x1c74>
  40b518:	orr	w1, w23, w19
  40b51c:	mov	x5, x28
  40b520:	cmp	w1, #0x0
  40b524:	mov	w4, w25
  40b528:	cset	w3, ne  // ne = any
  40b52c:	mov	x1, x26
  40b530:	mov	w2, w21
  40b534:	bl	40b308 <_obstack_memory_used@@Base+0x17c8>
  40b538:	mov	w1, w0
  40b53c:	ldr	x0, [x20, #32]!
  40b540:	orr	w19, w19, w1
  40b544:	cmp	w19, #0x0
  40b548:	ccmp	w22, #0x0, #0x0, ne  // ne = any
  40b54c:	cbz	x0, 40b554 <_obstack_memory_used@@Base+0x1a14>
  40b550:	b.ne	40b518 <_obstack_memory_used@@Base+0x19d8>  // b.any
  40b554:	mov	w0, w19
  40b558:	ldp	x19, x20, [sp, #16]
  40b55c:	ldp	x21, x22, [sp, #32]
  40b560:	ldp	x23, x24, [sp, #48]
  40b564:	ldp	x25, x26, [sp, #64]
  40b568:	ldp	x27, x28, [sp, #80]
  40b56c:	ldp	x29, x30, [sp], #128
  40b570:	ret
  40b574:	ldr	x2, [x0, #40]
  40b578:	cbnz	x2, 40b5cc <_obstack_memory_used@@Base+0x1a8c>
  40b57c:	mov	w19, #0x0                   	// #0
  40b580:	b	40b4f8 <_obstack_memory_used@@Base+0x19b8>
  40b584:	subs	x1, x0, x27
  40b588:	b.ne	40b5ec <_obstack_memory_used@@Base+0x1aac>  // b.any
  40b58c:	ldr	x0, [x22, #40]
  40b590:	cbz	x0, 40b57c <_obstack_memory_used@@Base+0x1a3c>
  40b594:	mov	x1, x26
  40b598:	mov	x0, x22
  40b59c:	bl	408c10 <argp_parse@@Base+0xc68>
  40b5a0:	mov	x24, x0
  40b5a4:	ldr	x3, [x22, #40]
  40b5a8:	mov	w0, #0x1                   	// #1
  40b5ac:	mov	x27, #0x0                   	// #0
  40b5b0:	movk	w0, #0x200, lsl #16
  40b5b4:	str	wzr, [sp, #116]
  40b5b8:	mov	x2, x24
  40b5bc:	mov	x1, x27
  40b5c0:	blr	x3
  40b5c4:	mov	x3, x0
  40b5c8:	b	40b408 <_obstack_memory_used@@Base+0x18c8>
  40b5cc:	bl	408c10 <argp_parse@@Base+0xc68>
  40b5d0:	mov	x24, x0
  40b5d4:	mov	w0, #0x1                   	// #1
  40b5d8:	str	wzr, [sp, #116]
  40b5dc:	movk	w0, #0x200, lsl #16
  40b5e0:	add	w0, w21, w0
  40b5e4:	ldr	x3, [x22, #40]
  40b5e8:	b	40b5b8 <_obstack_memory_used@@Base+0x1a78>
  40b5ec:	mov	x0, x27
  40b5f0:	bl	401d60 <strndup@plt>
  40b5f4:	ldr	x4, [x22, #40]
  40b5f8:	mov	x27, x0
  40b5fc:	cmp	x0, #0x0
  40b600:	cbz	x4, 40b7fc <_obstack_memory_used@@Base+0x1cbc>
  40b604:	cset	w0, ne  // ne = any
  40b608:	str	w0, [sp, #116]
  40b60c:	b	40b3b0 <_obstack_memory_used@@Base+0x1870>
  40b610:	ldp	x0, x1, [x28, #56]
  40b614:	cmp	x0, x1
  40b618:	b.cs	40b7e4 <_obstack_memory_used@@Base+0x1ca4>  // b.hs, b.nlast
  40b61c:	add	x1, x0, #0x1
  40b620:	str	x1, [x28, #56]
  40b624:	mov	w19, #0x1                   	// #1
  40b628:	mov	w1, #0xa                   	// #10
  40b62c:	strb	w1, [x0]
  40b630:	b	40b4f8 <_obstack_memory_used@@Base+0x19b8>
  40b634:	ldr	x1, [x28, #64]
  40b638:	add	x0, x19, x0
  40b63c:	cmp	x1, x0
  40b640:	b.cs	40b668 <_obstack_memory_used@@Base+0x1b28>  // b.hs, b.nlast
  40b644:	mov	x1, x2
  40b648:	mov	x0, x28
  40b64c:	str	x2, [sp, #104]
  40b650:	str	x3, [sp, #120]
  40b654:	bl	40e3a8 <argp_error@@Base+0x1748>
  40b658:	ldr	x19, [x28, #56]
  40b65c:	ldr	x2, [sp, #104]
  40b660:	ldr	x3, [sp, #120]
  40b664:	cbz	w0, 40b42c <_obstack_memory_used@@Base+0x18ec>
  40b668:	mov	x1, x3
  40b66c:	mov	x0, x19
  40b670:	str	x3, [sp, #104]
  40b674:	str	x2, [sp, #120]
  40b678:	bl	401aa0 <memcpy@plt>
  40b67c:	ldr	x19, [x28, #56]
  40b680:	ldr	x2, [sp, #120]
  40b684:	ldr	x1, [x28, #48]
  40b688:	add	x19, x19, x2
  40b68c:	ldr	x0, [x28, #32]
  40b690:	str	x19, [x28, #56]
  40b694:	sub	x19, x19, x1
  40b698:	cmp	x19, x0
  40b69c:	ldr	x3, [sp, #104]
  40b6a0:	b.ls	40b440 <_obstack_memory_used@@Base+0x1900>  // b.plast
  40b6a4:	mov	x0, x28
  40b6a8:	str	x3, [sp, #104]
  40b6ac:	bl	40dd30 <argp_error@@Base+0x10d0>
  40b6b0:	ldr	x0, [x28, #40]
  40b6b4:	ldr	x1, [x28, #8]
  40b6b8:	cmp	x0, #0x0
  40b6bc:	csel	x0, x0, xzr, ge  // ge = tcont
  40b6c0:	cmp	x1, x0
  40b6c4:	ldr	x3, [sp, #104]
  40b6c8:	b.cs	40b458 <_obstack_memory_used@@Base+0x1918>  // b.hs, b.nlast
  40b6cc:	ldp	x0, x1, [x28, #56]
  40b6d0:	cmp	x0, x1
  40b6d4:	b.cc	40b6f4 <_obstack_memory_used@@Base+0x1bb4>  // b.lo, b.ul, b.last
  40b6d8:	mov	x0, x28
  40b6dc:	mov	x1, #0x1                   	// #1
  40b6e0:	str	x3, [sp, #104]
  40b6e4:	bl	40e3a8 <argp_error@@Base+0x1748>
  40b6e8:	ldr	x3, [sp, #104]
  40b6ec:	cbz	w0, 40b458 <_obstack_memory_used@@Base+0x1918>
  40b6f0:	ldr	x0, [x28, #56]
  40b6f4:	add	x1, x0, #0x1
  40b6f8:	str	x1, [x28, #56]
  40b6fc:	mov	w1, #0xa                   	// #10
  40b700:	strb	w1, [x0]
  40b704:	b	40b458 <_obstack_memory_used@@Base+0x1918>
  40b708:	ldr	x0, [x28, #64]
  40b70c:	cmp	x0, x19
  40b710:	b.hi	40b730 <_obstack_memory_used@@Base+0x1bf0>  // b.pmore
  40b714:	mov	x0, x28
  40b718:	mov	x1, #0x1                   	// #1
  40b71c:	str	x3, [sp, #104]
  40b720:	bl	40e3a8 <argp_error@@Base+0x1748>
  40b724:	ldr	x19, [x28, #56]
  40b728:	ldr	x3, [sp, #104]
  40b72c:	cbz	w0, 40b414 <_obstack_memory_used@@Base+0x18d4>
  40b730:	add	x0, x19, #0x1
  40b734:	str	x0, [x28, #56]
  40b738:	mov	w0, #0xa                   	// #10
  40b73c:	strb	w0, [x19]
  40b740:	ldr	x19, [x28, #56]
  40b744:	b	40b414 <_obstack_memory_used@@Base+0x18d4>
  40b748:	mov	x0, x28
  40b74c:	bl	40dd30 <argp_error@@Base+0x10d0>
  40b750:	b	40b4d8 <_obstack_memory_used@@Base+0x1998>
  40b754:	ldp	x0, x2, [x28, #56]
  40b758:	add	x1, x0, x19
  40b75c:	cmp	x2, x1
  40b760:	b.cs	40b778 <_obstack_memory_used@@Base+0x1c38>  // b.hs, b.nlast
  40b764:	mov	x1, x19
  40b768:	mov	x0, x28
  40b76c:	bl	40e3a8 <argp_error@@Base+0x1748>
  40b770:	cbz	w0, 40b4bc <_obstack_memory_used@@Base+0x197c>
  40b774:	ldr	x0, [x28, #56]
  40b778:	mov	x2, x19
  40b77c:	mov	x1, x22
  40b780:	bl	401aa0 <memcpy@plt>
  40b784:	ldr	x0, [x28, #56]
  40b788:	add	x0, x0, x19
  40b78c:	str	x0, [x28, #56]
  40b790:	b	40b4bc <_obstack_memory_used@@Base+0x197c>
  40b794:	ldp	x0, x1, [x28, #56]
  40b798:	cmp	x0, x1
  40b79c:	b.cs	40b7cc <_obstack_memory_used@@Base+0x1c8c>  // b.hs, b.nlast
  40b7a0:	add	x1, x0, #0x1
  40b7a4:	str	x1, [x28, #56]
  40b7a8:	mov	w1, #0xa                   	// #10
  40b7ac:	strb	w1, [x0]
  40b7b0:	b	40b4ac <_obstack_memory_used@@Base+0x196c>
  40b7b4:	mov	w19, #0x1                   	// #1
  40b7b8:	b	40b554 <_obstack_memory_used@@Base+0x1a14>
  40b7bc:	mov	x27, x3
  40b7c0:	mov	x24, #0x0                   	// #0
  40b7c4:	str	wzr, [sp, #116]
  40b7c8:	b	40b40c <_obstack_memory_used@@Base+0x18cc>
  40b7cc:	mov	x0, x28
  40b7d0:	mov	x1, #0x1                   	// #1
  40b7d4:	bl	40e3a8 <argp_error@@Base+0x1748>
  40b7d8:	cbz	w0, 40b4ac <_obstack_memory_used@@Base+0x196c>
  40b7dc:	ldr	x0, [x28, #56]
  40b7e0:	b	40b7a0 <_obstack_memory_used@@Base+0x1c60>
  40b7e4:	mov	x0, x28
  40b7e8:	mov	x1, #0x1                   	// #1
  40b7ec:	bl	40e3a8 <argp_error@@Base+0x1748>
  40b7f0:	cbz	w0, 40b4f0 <_obstack_memory_used@@Base+0x19b0>
  40b7f4:	ldr	x0, [x28, #56]
  40b7f8:	b	40b61c <_obstack_memory_used@@Base+0x1adc>
  40b7fc:	mov	x3, x0
  40b800:	mov	x24, #0x0                   	// #0
  40b804:	cset	w0, ne  // ne = any
  40b808:	str	w0, [sp, #116]
  40b80c:	b	40b408 <_obstack_memory_used@@Base+0x18c8>
  40b810:	mov	x3, x27
  40b814:	str	w21, [sp, #116]
  40b818:	b	40b40c <_obstack_memory_used@@Base+0x18cc>
  40b81c:	mov	w19, #0x0                   	// #0
  40b820:	b	40b46c <_obstack_memory_used@@Base+0x192c>
  40b824:	nop

000000000040b828 <argp_failure@@Base>:
  40b828:	stp	x29, x30, [sp, #-464]!
  40b82c:	mov	x29, sp
  40b830:	stp	x19, x20, [sp, #16]
  40b834:	mov	x20, x0
  40b838:	stp	x21, x22, [sp, #32]
  40b83c:	mov	w22, w2
  40b840:	mov	x21, x3
  40b844:	str	x23, [sp, #48]
  40b848:	mov	w23, w1
  40b84c:	str	q0, [sp, #304]
  40b850:	str	q1, [sp, #320]
  40b854:	str	q2, [sp, #336]
  40b858:	str	q3, [sp, #352]
  40b85c:	str	q4, [sp, #368]
  40b860:	str	q5, [sp, #384]
  40b864:	str	q6, [sp, #400]
  40b868:	str	q7, [sp, #416]
  40b86c:	stp	x4, x5, [sp, #432]
  40b870:	stp	x6, x7, [sp, #448]
  40b874:	cbz	x0, 40b9b4 <argp_failure@@Base+0x18c>
  40b878:	ldr	w0, [x0, #28]
  40b87c:	tbnz	w0, #1, 40b9a0 <argp_failure@@Base+0x178>
  40b880:	ldr	x19, [x20, #72]
  40b884:	cbz	x19, 40b9a0 <argp_failure@@Base+0x178>
  40b888:	mov	x0, x19
  40b88c:	bl	401b40 <flockfile@plt>
  40b890:	ldr	x0, [x20, #64]
  40b894:	mov	x1, x19
  40b898:	bl	401e50 <fputs_unlocked@plt>
  40b89c:	cbz	x21, 40b914 <argp_failure@@Base+0xec>
  40b8a0:	ldp	x0, x4, [x19, #40]
  40b8a4:	add	x3, sp, #0x1b0
  40b8a8:	add	x5, sp, #0x1d0
  40b8ac:	mov	w2, #0xffffffe0            	// #-32
  40b8b0:	mov	w1, #0xffffff80            	// #-128
  40b8b4:	stp	x5, x5, [sp, #104]
  40b8b8:	str	x3, [sp, #120]
  40b8bc:	stp	w2, w1, [sp, #128]
  40b8c0:	cmp	x0, x4
  40b8c4:	b.cs	40ba18 <argp_failure@@Base+0x1f0>  // b.hs, b.nlast
  40b8c8:	add	x1, x0, #0x1
  40b8cc:	str	x1, [x19, #40]
  40b8d0:	mov	w1, #0x3a                  	// #58
  40b8d4:	strb	w1, [x0]
  40b8d8:	ldp	x0, x1, [x19, #40]
  40b8dc:	cmp	x0, x1
  40b8e0:	b.cs	40ba08 <argp_failure@@Base+0x1e0>  // b.hs, b.nlast
  40b8e4:	add	x1, x0, #0x1
  40b8e8:	str	x1, [x19, #40]
  40b8ec:	mov	w1, #0x20                  	// #32
  40b8f0:	strb	w1, [x0]
  40b8f4:	ldp	x4, x5, [sp, #104]
  40b8f8:	mov	x1, x21
  40b8fc:	ldp	x6, x7, [sp, #120]
  40b900:	add	x2, sp, #0x40
  40b904:	mov	x0, x19
  40b908:	stp	x4, x5, [sp, #64]
  40b90c:	stp	x6, x7, [sp, #80]
  40b910:	bl	401e70 <vfprintf@plt>
  40b914:	ldp	x0, x1, [x19, #40]
  40b918:	cbz	w22, 40b970 <argp_failure@@Base+0x148>
  40b91c:	cmp	x0, x1
  40b920:	b.cs	40ba38 <argp_failure@@Base+0x210>  // b.hs, b.nlast
  40b924:	add	x1, x0, #0x1
  40b928:	str	x1, [x19, #40]
  40b92c:	mov	w1, #0x3a                  	// #58
  40b930:	strb	w1, [x0]
  40b934:	ldp	x0, x1, [x19, #40]
  40b938:	cmp	x0, x1
  40b93c:	b.cs	40ba28 <argp_failure@@Base+0x200>  // b.hs, b.nlast
  40b940:	add	x1, x0, #0x1
  40b944:	str	x1, [x19, #40]
  40b948:	mov	w1, #0x20                  	// #32
  40b94c:	strb	w1, [x0]
  40b950:	add	x1, sp, #0x68
  40b954:	mov	w0, w22
  40b958:	mov	x2, #0xc8                  	// #200
  40b95c:	bl	401c40 <strerror_r@plt>
  40b960:	cbz	x0, 40b9ec <argp_failure@@Base+0x1c4>
  40b964:	mov	x1, x19
  40b968:	bl	401b10 <fputs@plt>
  40b96c:	ldp	x0, x1, [x19, #40]
  40b970:	cmp	x1, x0
  40b974:	b.ls	40b9dc <argp_failure@@Base+0x1b4>  // b.plast
  40b978:	add	x1, x0, #0x1
  40b97c:	str	x1, [x19, #40]
  40b980:	mov	w1, #0xa                   	// #10
  40b984:	strb	w1, [x0]
  40b988:	mov	x0, x19
  40b98c:	bl	401bf0 <funlockfile@plt>
  40b990:	cbz	w23, 40b9a0 <argp_failure@@Base+0x178>
  40b994:	cbz	x20, 40b9d4 <argp_failure@@Base+0x1ac>
  40b998:	ldr	w0, [x20, #28]
  40b99c:	tbz	w0, #5, 40b9d4 <argp_failure@@Base+0x1ac>
  40b9a0:	ldp	x19, x20, [sp, #16]
  40b9a4:	ldp	x21, x22, [sp, #32]
  40b9a8:	ldr	x23, [sp, #48]
  40b9ac:	ldp	x29, x30, [sp], #464
  40b9b0:	ret
  40b9b4:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40b9b8:	ldr	x19, [x0, #1248]
  40b9bc:	cbz	x19, 40b9a0 <argp_failure@@Base+0x178>
  40b9c0:	mov	x0, x19
  40b9c4:	bl	401b40 <flockfile@plt>
  40b9c8:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40b9cc:	ldr	x0, [x0, #1264]
  40b9d0:	b	40b894 <argp_failure@@Base+0x6c>
  40b9d4:	mov	w0, w23
  40b9d8:	bl	401b20 <exit@plt>
  40b9dc:	mov	x0, x19
  40b9e0:	mov	w1, #0xa                   	// #10
  40b9e4:	bl	401ce0 <__overflow@plt>
  40b9e8:	b	40b988 <argp_failure@@Base+0x160>
  40b9ec:	mov	w0, w22
  40b9f0:	bl	401c90 <strerror@plt>
  40b9f4:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40b9f8:	cmp	x0, #0x0
  40b9fc:	add	x1, x1, #0x720
  40ba00:	csel	x0, x1, x0, eq  // eq = none
  40ba04:	b	40b964 <argp_failure@@Base+0x13c>
  40ba08:	mov	x0, x19
  40ba0c:	mov	w1, #0x20                  	// #32
  40ba10:	bl	401ce0 <__overflow@plt>
  40ba14:	b	40b8f4 <argp_failure@@Base+0xcc>
  40ba18:	mov	x0, x19
  40ba1c:	mov	w1, #0x3a                  	// #58
  40ba20:	bl	401ce0 <__overflow@plt>
  40ba24:	b	40b8d8 <argp_failure@@Base+0xb0>
  40ba28:	mov	x0, x19
  40ba2c:	mov	w1, #0x20                  	// #32
  40ba30:	bl	401ce0 <__overflow@plt>
  40ba34:	b	40b950 <argp_failure@@Base+0x128>
  40ba38:	mov	x0, x19
  40ba3c:	mov	w1, #0x3a                  	// #58
  40ba40:	bl	401ce0 <__overflow@plt>
  40ba44:	b	40b934 <argp_failure@@Base+0x10c>
  40ba48:	stp	x29, x30, [sp, #-240]!
  40ba4c:	mov	x29, sp
  40ba50:	stp	x19, x20, [sp, #16]
  40ba54:	stp	x21, x22, [sp, #32]
  40ba58:	stp	x23, x24, [sp, #48]
  40ba5c:	stp	x25, x26, [sp, #64]
  40ba60:	stp	x27, x28, [sp, #80]
  40ba64:	str	x2, [x29, #120]
  40ba68:	cbz	x2, 40be60 <argp_failure@@Base+0x638>
  40ba6c:	adrp	x19, 427000 <argp_error@@Base+0x1a3a0>
  40ba70:	add	x19, x19, #0x498
  40ba74:	mov	x26, x0
  40ba78:	mov	x24, x1
  40ba7c:	mov	x0, x2
  40ba80:	mov	w20, w3
  40ba84:	mov	x28, x4
  40ba88:	bl	401b40 <flockfile@plt>
  40ba8c:	ldr	w0, [x19, #36]
  40ba90:	cbz	w0, 40be80 <argp_failure@@Base+0x658>
  40ba94:	ldrsw	x2, [x19, #32]
  40ba98:	mov	x3, #0x0                   	// #0
  40ba9c:	ldr	x0, [x29, #120]
  40baa0:	mov	x1, #0x0                   	// #0
  40baa4:	bl	40dcb0 <argp_error@@Base+0x1050>
  40baa8:	mov	x25, x0
  40baac:	cbz	x0, 40c950 <argp_failure@@Base+0x1128>
  40bab0:	mov	w0, #0xb                   	// #11
  40bab4:	mov	x27, #0x0                   	// #0
  40bab8:	tst	w20, w0
  40babc:	b.ne	40c150 <argp_failure@@Base+0x928>  // b.any
  40bac0:	tst	x20, #0x3
  40bac4:	mov	w21, #0x0                   	// #0
  40bac8:	b.ne	40bfc8 <argp_failure@@Base+0x7a0>  // b.any
  40bacc:	tbnz	w20, #4, 40bf9c <argp_failure@@Base+0x774>
  40bad0:	and	w22, w20, #0x8
  40bad4:	tbnz	w20, #2, 40bf40 <argp_failure@@Base+0x718>
  40bad8:	cbz	w22, 40be1c <argp_failure@@Base+0x5f4>
  40badc:	ldr	w0, [x27, #8]
  40bae0:	cbz	w0, 40be1c <argp_failure@@Base+0x5f4>
  40bae4:	cbnz	w21, 40bf68 <argp_failure@@Base+0x740>
  40bae8:	ldr	x22, [x27]
  40baec:	stp	xzr, xzr, [x29, #184]
  40baf0:	sub	w0, w0, #0x1
  40baf4:	add	x0, x0, #0x1
  40baf8:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40bafc:	add	x1, x1, #0x8c0
  40bb00:	str	x1, [x29, #96]
  40bb04:	lsl	x1, x0, #3
  40bb08:	sub	x0, x1, x0
  40bb0c:	add	x0, x22, x0, lsl #3
  40bb10:	str	x0, [x29, #112]
  40bb14:	nop
  40bb18:	ldp	x0, x2, [x25, #48]
  40bb1c:	ldr	x4, [x25, #32]
  40bb20:	ldr	x28, [x22]
  40bb24:	sub	x2, x2, x0
  40bb28:	cmp	x2, x4
  40bb2c:	ldr	x23, [x22, #16]
  40bb30:	b.hi	40c748 <argp_failure@@Base+0xf20>  // b.pmore
  40bb34:	ldr	w0, [x28, #24]
  40bb38:	mov	w1, #0x1                   	// #1
  40bb3c:	ldr	x3, [x25, #8]
  40bb40:	str	x3, [x29, #144]
  40bb44:	ldr	x3, [x25, #24]
  40bb48:	str	xzr, [x25, #8]
  40bb4c:	str	x3, [x29, #136]
  40bb50:	and	w3, w0, #0x8
  40bb54:	str	w3, [x29, #132]
  40bb58:	add	x3, x29, #0xb8
  40bb5c:	stp	x22, x25, [x29, #200]
  40bb60:	str	x3, [x29, #216]
  40bb64:	str	w1, [x29, #224]
  40bb68:	str	x24, [x29, #232]
  40bb6c:	tbnz	w0, #3, 40c608 <argp_failure@@Base+0xde0>
  40bb70:	ldr	w0, [x22, #8]
  40bb74:	cbz	w0, 40bbac <argp_failure@@Base+0x384>
  40bb78:	sub	w1, w0, #0x1
  40bb7c:	mov	x0, x28
  40bb80:	add	x1, x1, #0x1
  40bb84:	add	x1, x1, x1, lsl #1
  40bb88:	add	x1, x28, x1, lsl #4
  40bb8c:	nop
  40bb90:	ldr	x6, [x0]
  40bb94:	cbz	x6, 40bba0 <argp_failure@@Base+0x378>
  40bb98:	ldr	w6, [x0, #24]
  40bb9c:	tbz	w6, #1, 40c790 <argp_failure@@Base+0xf68>
  40bba0:	add	x0, x0, #0x30
  40bba4:	cmp	x0, x1
  40bba8:	b.ne	40bb90 <argp_failure@@Base+0x368>  // b.any
  40bbac:	ldr	w1, [x19, #8]
  40bbb0:	cmp	x2, x4
  40bbb4:	b.hi	40c618 <argp_failure@@Base+0xdf0>  // b.pmore
  40bbb8:	ldr	w21, [x22, #8]
  40bbbc:	sxtw	x1, w1
  40bbc0:	str	x1, [x25, #24]
  40bbc4:	cbz	w21, 40bc48 <argp_failure@@Base+0x420>
  40bbc8:	sub	w21, w21, #0x1
  40bbcc:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40bbd0:	add	x21, x21, #0x1
  40bbd4:	add	x0, x0, #0x928
  40bbd8:	mov	x4, x28
  40bbdc:	str	x0, [x29, #104]
  40bbe0:	add	x21, x21, x21, lsl #1
  40bbe4:	add	x0, x28, x21, lsl #4
  40bbe8:	str	x0, [x29, #152]
  40bbec:	nop
  40bbf0:	ldr	w21, [x4, #24]
  40bbf4:	tbnz	w21, #3, 40bc38 <argp_failure@@Base+0x410>
  40bbf8:	ldr	w1, [x4, #8]
  40bbfc:	str	w1, [x29, #160]
  40bc00:	sub	w0, w1, #0x1
  40bc04:	cmp	w0, #0xfe
  40bc08:	b.hi	40bc38 <argp_failure@@Base+0x410>  // b.pmore
  40bc0c:	str	x4, [x29, #168]
  40bc10:	bl	401d00 <__ctype_b_loc@plt>
  40bc14:	ldr	w1, [x29, #160]
  40bc18:	ldr	x0, [x0]
  40bc1c:	ldr	x4, [x29, #168]
  40bc20:	ldrh	w0, [x0, w1, sxtw #1]
  40bc24:	tbz	w0, #14, 40bc38 <argp_failure@@Base+0x410>
  40bc28:	ldrb	w0, [x23]
  40bc2c:	cmp	w1, w0
  40bc30:	b.eq	40c2b4 <argp_failure@@Base+0xa8c>  // b.none
  40bc34:	nop
  40bc38:	ldr	x0, [x29, #152]
  40bc3c:	add	x4, x4, #0x30
  40bc40:	cmp	x4, x0
  40bc44:	b.ne	40bbf0 <argp_failure@@Base+0x3c8>  // b.any
  40bc48:	ldp	x4, x0, [x25, #48]
  40bc4c:	ldr	w2, [x28, #24]
  40bc50:	ldr	x1, [x25, #32]
  40bc54:	sub	x0, x0, x4
  40bc58:	tbz	w2, #3, 40c448 <argp_failure@@Base+0xc20>
  40bc5c:	ldr	w21, [x19, #16]
  40bc60:	cmp	x0, x1
  40bc64:	b.hi	40c7e8 <argp_failure@@Base+0xfc0>  // b.pmore
  40bc68:	ldr	w0, [x22, #8]
  40bc6c:	sxtw	x21, w21
  40bc70:	str	x21, [x25, #24]
  40bc74:	cbz	w0, 40bd38 <argp_failure@@Base+0x510>
  40bc78:	sub	w23, w0, #0x1
  40bc7c:	mov	x21, x28
  40bc80:	add	x23, x23, #0x1
  40bc84:	add	x23, x23, x23, lsl #1
  40bc88:	add	x23, x28, x23, lsl #4
  40bc8c:	b	40bc9c <argp_failure@@Base+0x474>
  40bc90:	add	x21, x21, #0x30
  40bc94:	cmp	x21, x23
  40bc98:	b.eq	40bd38 <argp_failure@@Base+0x510>  // b.none
  40bc9c:	ldr	x0, [x21]
  40bca0:	cbz	x0, 40bc90 <argp_failure@@Base+0x468>
  40bca4:	ldrb	w0, [x0]
  40bca8:	cbz	w0, 40bc90 <argp_failure@@Base+0x468>
  40bcac:	ldr	w0, [x21, #24]
  40bcb0:	tbnz	w0, #1, 40bc90 <argp_failure@@Base+0x468>
  40bcb4:	ldr	w0, [x19, #16]
  40bcb8:	add	x1, x29, #0xc8
  40bcbc:	bl	40b178 <_obstack_memory_used@@Base+0x1638>
  40bcc0:	ldr	x4, [x21]
  40bcc4:	str	x4, [x29, #168]
  40bcc8:	mov	x0, x4
  40bccc:	bl	401b00 <strlen@plt>
  40bcd0:	mov	x2, x0
  40bcd4:	ldr	x4, [x29, #168]
  40bcd8:	cbz	x0, 40bc90 <argp_failure@@Base+0x468>
  40bcdc:	ldp	x6, x8, [x25, #56]
  40bce0:	mov	x1, x0
  40bce4:	mov	x0, x25
  40bce8:	add	x7, x6, x2
  40bcec:	cmp	x8, x7
  40bcf0:	b.cs	40bd08 <argp_failure@@Base+0x4e0>  // b.hs, b.nlast
  40bcf4:	str	x2, [x29, #160]
  40bcf8:	bl	40e3a8 <argp_error@@Base+0x1748>
  40bcfc:	cbz	w0, 40bc90 <argp_failure@@Base+0x468>
  40bd00:	ldp	x2, x4, [x29, #160]
  40bd04:	ldr	x6, [x25, #56]
  40bd08:	mov	x1, x4
  40bd0c:	mov	x0, x6
  40bd10:	str	x2, [x29, #168]
  40bd14:	bl	401aa0 <memcpy@plt>
  40bd18:	add	x21, x21, #0x30
  40bd1c:	ldr	x0, [x25, #56]
  40bd20:	cmp	x21, x23
  40bd24:	ldr	x2, [x29, #168]
  40bd28:	add	x2, x0, x2
  40bd2c:	str	x2, [x25, #56]
  40bd30:	b.ne	40bc9c <argp_failure@@Base+0x474>  // b.any
  40bd34:	nop
  40bd38:	ldp	x2, x0, [x25, #48]
  40bd3c:	ldr	x1, [x25, #32]
  40bd40:	sub	x0, x0, x2
  40bd44:	cmp	x0, x1
  40bd48:	b.hi	40c760 <argp_failure@@Base+0xf38>  // b.pmore
  40bd4c:	ldr	w0, [x29, #224]
  40bd50:	ldr	w23, [x28, #8]
  40bd54:	str	xzr, [x25, #8]
  40bd58:	cbz	w0, 40c36c <argp_failure@@Base+0xb44>
  40bd5c:	ldr	w0, [x28, #24]
  40bd60:	tbnz	w0, #3, 40bd80 <argp_failure@@Base+0x558>
  40bd64:	sub	w0, w23, #0x1
  40bd68:	cmp	w0, #0xfe
  40bd6c:	b.hi	40bd80 <argp_failure@@Base+0x558>  // b.pmore
  40bd70:	bl	401d00 <__ctype_b_loc@plt>
  40bd74:	ldr	x0, [x0]
  40bd78:	ldrh	w0, [x0, w23, sxtw #1]
  40bd7c:	tbnz	w0, #14, 40bd88 <argp_failure@@Base+0x560>
  40bd80:	ldr	x0, [x28]
  40bd84:	cbz	x0, 40c828 <argp_failure@@Base+0x1000>
  40bd88:	ldp	x2, x0, [x25, #48]
  40bd8c:	ldr	x1, [x25, #32]
  40bd90:	ldrsw	x21, [x29, #144]
  40bd94:	sub	x0, x0, x2
  40bd98:	cmp	x0, x1
  40bd9c:	b.hi	40c5dc <argp_failure@@Base+0xdb4>  // b.pmore
  40bda0:	str	x21, [x25, #8]
  40bda4:	ldrsw	x28, [x29, #136]
  40bda8:	add	x22, x22, #0x38
  40bdac:	ldr	x0, [x29, #112]
  40bdb0:	str	x28, [x25, #24]
  40bdb4:	cmp	x22, x0
  40bdb8:	b.ne	40bb18 <argp_failure@@Base+0x2f0>  // b.any
  40bdbc:	ldr	w0, [x29, #196]
  40bdc0:	cbz	w0, 40be18 <argp_failure@@Base+0x5f0>
  40bdc4:	ldr	w0, [x19, #4]
  40bdc8:	cbz	w0, 40be18 <argp_failure@@Base+0x5f0>
  40bdcc:	ldr	x2, [x24]
  40bdd0:	adrp	x19, 411000 <argp_error@@Base+0x43a0>
  40bdd4:	ldr	x0, [x2, #40]
  40bdd8:	cbz	x0, 40ca90 <argp_failure@@Base+0x1268>
  40bddc:	add	x19, x19, #0x758
  40bde0:	mov	w1, #0x5                   	// #5
  40bde4:	mov	x0, x19
  40bde8:	mov	x3, x24
  40bdec:	movk	w1, #0x200, lsl #16
  40bdf0:	bl	409da0 <_obstack_memory_used@@Base+0x260>
  40bdf4:	mov	x21, x0
  40bdf8:	cbz	x0, 40be18 <argp_failure@@Base+0x5f0>
  40bdfc:	ldrb	w0, [x0]
  40be00:	cbnz	w0, 40ca98 <argp_failure@@Base+0x1270>
  40be04:	cmp	x21, x19
  40be08:	b.eq	40be18 <argp_failure@@Base+0x5f0>  // b.none
  40be0c:	mov	x0, x21
  40be10:	bl	401d30 <free@plt>
  40be14:	nop
  40be18:	mov	w21, #0x1                   	// #1
  40be1c:	tbnz	w20, #5, 40c1f8 <argp_failure@@Base+0x9d0>
  40be20:	tbz	w20, #6, 40be44 <argp_failure@@Base+0x61c>
  40be24:	adrp	x19, 427000 <argp_error@@Base+0x1a3a0>
  40be28:	ldr	x2, [x19, #1624]
  40be2c:	cbz	x2, 40be44 <argp_failure@@Base+0x61c>
  40be30:	cbnz	w21, 40c26c <argp_failure@@Base+0xa44>
  40be34:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40be38:	mov	x0, x25
  40be3c:	add	x1, x1, #0x950
  40be40:	bl	40e3c8 <argp_error@@Base+0x1768>
  40be44:	ldr	x0, [x29, #120]
  40be48:	bl	401bf0 <funlockfile@plt>
  40be4c:	cbz	x27, 40be58 <argp_failure@@Base+0x630>
  40be50:	mov	x0, x27
  40be54:	bl	409b68 <_obstack_memory_used@@Base+0x28>
  40be58:	mov	x0, x25
  40be5c:	bl	40e270 <argp_error@@Base+0x1610>
  40be60:	mov	sp, x29
  40be64:	ldp	x19, x20, [sp, #16]
  40be68:	ldp	x21, x22, [sp, #32]
  40be6c:	ldp	x23, x24, [sp, #48]
  40be70:	ldp	x25, x26, [sp, #64]
  40be74:	ldp	x27, x28, [sp, #80]
  40be78:	ldp	x29, x30, [sp], #240
  40be7c:	ret
  40be80:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40be84:	add	x0, x0, #0x7d0
  40be88:	bl	401eb0 <getenv@plt>
  40be8c:	mov	x25, x0
  40be90:	ldp	x0, x1, [x19, #16]
  40be94:	stp	x0, x1, [x29, #216]
  40be98:	ldp	x2, x3, [x19]
  40be9c:	stp	x2, x3, [x29, #200]
  40bea0:	ldr	x0, [x19, #32]
  40bea4:	str	x0, [x29, #232]
  40bea8:	cbz	x25, 40ba94 <argp_failure@@Base+0x26c>
  40beac:	ldrb	w21, [x25]
  40beb0:	cbz	w21, 40cb1c <argp_failure@@Base+0x12f4>
  40beb4:	bl	401d00 <__ctype_b_loc@plt>
  40beb8:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40bebc:	add	x1, x1, #0x9c8
  40bec0:	stp	x1, x0, [x29, #160]
  40bec4:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40bec8:	add	x0, x0, #0x738
  40becc:	str	x0, [x29, #144]
  40bed0:	ldr	x0, [x29, #168]
  40bed4:	ldr	x0, [x0]
  40bed8:	b	40bee0 <argp_failure@@Base+0x6b8>
  40bedc:	ldrb	w21, [x25, #1]!
  40bee0:	ubfiz	x1, x21, #1, #8
  40bee4:	ldrh	w1, [x0, x1]
  40bee8:	tbnz	w1, #13, 40bedc <argp_failure@@Base+0x6b4>
  40beec:	tbnz	w1, #10, 40c62c <argp_failure@@Base+0xe04>
  40bef0:	cbnz	w21, 40c974 <argp_failure@@Base+0x114c>
  40bef4:	ldr	x0, [x29, #160]
  40bef8:	adrp	x5, 411000 <argp_error@@Base+0x43a0>
  40befc:	ldr	w2, [x29, #232]
  40bf00:	add	x3, x29, #0xc8
  40bf04:	add	x5, x5, #0x748
  40bf08:	add	x0, x0, #0x20
  40bf0c:	nop
  40bf10:	add	x0, x0, #0x18
  40bf14:	cbz	x5, 40c88c <argp_failure@@Base+0x1064>
  40bf18:	ldr	w1, [x0, #8]
  40bf1c:	cbnz	w1, 40bf38 <argp_failure@@Base+0x710>
  40bf20:	ldr	x1, [x0, #16]
  40bf24:	cmp	x1, #0x20
  40bf28:	b.eq	40bf38 <argp_failure@@Base+0x710>  // b.none
  40bf2c:	ldr	w1, [x3, x1]
  40bf30:	cmp	w1, w2
  40bf34:	b.ge	40c290 <argp_failure@@Base+0xa68>  // b.tcont
  40bf38:	ldr	x5, [x0, #24]
  40bf3c:	b	40bf10 <argp_failure@@Base+0x6e8>
  40bf40:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40bf44:	mov	x3, x28
  40bf48:	add	x1, x1, #0x8f0
  40bf4c:	mov	x2, x28
  40bf50:	mov	x0, x25
  40bf54:	mov	w21, #0x1                   	// #1
  40bf58:	bl	40e3c8 <argp_error@@Base+0x1768>
  40bf5c:	cbz	w22, 40be1c <argp_failure@@Base+0x5f4>
  40bf60:	ldr	w0, [x27, #8]
  40bf64:	cbz	w0, 40be1c <argp_failure@@Base+0x5f4>
  40bf68:	ldp	x0, x1, [x25, #56]
  40bf6c:	cmp	x0, x1
  40bf70:	b.cs	40c9cc <argp_failure@@Base+0x11a4>  // b.hs, b.nlast
  40bf74:	add	x1, x0, #0x1
  40bf78:	str	x1, [x25, #56]
  40bf7c:	mov	w1, #0xa                   	// #10
  40bf80:	strb	w1, [x0]
  40bf84:	ldr	w0, [x27, #8]
  40bf88:	ldr	x22, [x27]
  40bf8c:	stp	xzr, xzr, [x29, #184]
  40bf90:	cbnz	w0, 40baf0 <argp_failure@@Base+0x2c8>
  40bf94:	mov	w21, #0x1                   	// #1
  40bf98:	b	40be1c <argp_failure@@Base+0x5f4>
  40bf9c:	mov	x5, x25
  40bfa0:	mov	x1, x24
  40bfa4:	mov	x0, x26
  40bfa8:	mov	w4, #0x1                   	// #1
  40bfac:	mov	w3, #0x0                   	// #0
  40bfb0:	mov	w2, #0x0                   	// #0
  40bfb4:	and	w22, w20, #0x8
  40bfb8:	bl	40b308 <_obstack_memory_used@@Base+0x17c8>
  40bfbc:	orr	w21, w21, w0
  40bfc0:	tbz	w20, #2, 40bad8 <argp_failure@@Base+0x2b0>
  40bfc4:	b	40bf40 <argp_failure@@Base+0x718>
  40bfc8:	ldr	x0, [x26, #16]
  40bfcc:	mov	w22, #0x1                   	// #1
  40bfd0:	ldr	x1, [x26, #32]
  40bfd4:	bl	409d40 <_obstack_memory_used@@Base+0x200>
  40bfd8:	mov	x2, x0
  40bfdc:	add	x0, x0, #0xf
  40bfe0:	mov	w1, #0x0                   	// #0
  40bfe4:	and	x0, x0, #0xfffffffffffffff0
  40bfe8:	sub	sp, sp, x0
  40bfec:	mov	x0, sp
  40bff0:	str	x0, [x29, #168]
  40bff4:	bl	401c20 <memset@plt>
  40bff8:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40bffc:	add	x0, x0, #0x8d8
  40c000:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40c004:	add	x1, x1, #0x8d0
  40c008:	stp	x0, x1, [x29, #152]
  40c00c:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40c010:	add	x0, x0, #0x8c8
  40c014:	str	x0, [x29, #144]
  40c018:	b	40c0d0 <argp_failure@@Base+0x8a8>
  40c01c:	ldr	x2, [x29, #144]
  40c020:	mov	x0, x25
  40c024:	ldr	x1, [x29, #160]
  40c028:	bl	40e3c8 <argp_error@@Base+0x1768>
  40c02c:	ldrsw	x23, [x19, #28]
  40c030:	ldp	x2, x0, [x25, #48]
  40c034:	ldr	x1, [x25, #32]
  40c038:	sub	x0, x0, x2
  40c03c:	cmp	x0, x1
  40c040:	b.hi	40c128 <argp_failure@@Base+0x900>  // b.pmore
  40c044:	ldr	x22, [x25, #8]
  40c048:	str	x23, [x25, #8]
  40c04c:	tbz	w20, #1, 40c13c <argp_failure@@Base+0x914>
  40c050:	ldr	w0, [x27, #8]
  40c054:	cbnz	w0, 40c840 <argp_failure@@Base+0x1018>
  40c058:	add	x2, x29, #0xc8
  40c05c:	mov	x1, x24
  40c060:	mov	x4, x25
  40c064:	mov	x0, x26
  40c068:	mov	w3, #0x1                   	// #1
  40c06c:	bl	40ad28 <_obstack_memory_used@@Base+0x11e8>
  40c070:	mov	w23, w0
  40c074:	ldp	x1, x0, [x25, #48]
  40c078:	ldr	x2, [x25, #32]
  40c07c:	sub	x1, x0, x1
  40c080:	cmp	x1, x2
  40c084:	b.hi	40c228 <argp_failure@@Base+0xa00>  // b.pmore
  40c088:	sxtw	x22, w22
  40c08c:	sxtw	x21, w21
  40c090:	str	x21, [x25, #24]
  40c094:	ldr	x1, [x25, #64]
  40c098:	str	x22, [x25, #8]
  40c09c:	cmp	x1, x0
  40c0a0:	b.hi	40c0b8 <argp_failure@@Base+0x890>  // b.pmore
  40c0a4:	mov	x0, x25
  40c0a8:	mov	x1, #0x1                   	// #1
  40c0ac:	bl	40e3a8 <argp_error@@Base+0x1748>
  40c0b0:	cbz	w0, 40c0c8 <argp_failure@@Base+0x8a0>
  40c0b4:	ldr	x0, [x25, #56]
  40c0b8:	add	x1, x0, #0x1
  40c0bc:	str	x1, [x25, #56]
  40c0c0:	mov	w1, #0xa                   	// #10
  40c0c4:	strb	w1, [x0]
  40c0c8:	mov	w22, #0x0                   	// #0
  40c0cc:	cbz	w23, 40c260 <argp_failure@@Base+0xa38>
  40c0d0:	ldp	x2, x0, [x25, #48]
  40c0d4:	ldr	x1, [x25, #32]
  40c0d8:	ldr	w21, [x19, #28]
  40c0dc:	sub	x0, x0, x2
  40c0e0:	cmp	x0, x1
  40c0e4:	b.hi	40c21c <argp_failure@@Base+0x9f4>  // b.pmore
  40c0e8:	sxtw	x0, w21
  40c0ec:	mov	x3, x28
  40c0f0:	ldr	x21, [x25, #24]
  40c0f4:	str	x0, [x25, #24]
  40c0f8:	ldr	x0, [x29, #168]
  40c0fc:	str	x0, [x29, #200]
  40c100:	cbnz	w22, 40c01c <argp_failure@@Base+0x7f4>
  40c104:	ldp	x2, x1, [x29, #152]
  40c108:	mov	x0, x25
  40c10c:	bl	40e3c8 <argp_error@@Base+0x1768>
  40c110:	ldrsw	x23, [x19, #28]
  40c114:	ldp	x2, x0, [x25, #48]
  40c118:	ldr	x1, [x25, #32]
  40c11c:	sub	x0, x0, x2
  40c120:	cmp	x0, x1
  40c124:	b.ls	40c044 <argp_failure@@Base+0x81c>  // b.plast
  40c128:	mov	x0, x25
  40c12c:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c130:	ldr	x22, [x25, #8]
  40c134:	str	x23, [x25, #8]
  40c138:	tbnz	w20, #1, 40c050 <argp_failure@@Base+0x828>
  40c13c:	orr	w20, w20, #0x2
  40c140:	mov	x1, x25
  40c144:	mov	x0, x27
  40c148:	bl	40a4b0 <_obstack_memory_used@@Base+0x970>
  40c14c:	b	40c058 <argp_failure@@Base+0x830>
  40c150:	mov	x1, #0x0                   	// #0
  40c154:	mov	x0, x26
  40c158:	bl	409df0 <_obstack_memory_used@@Base+0x2b0>
  40c15c:	ldr	w21, [x0, #8]
  40c160:	ldr	x22, [x0]
  40c164:	mov	x27, x0
  40c168:	adrp	x2, 40f000 <argp_error@@Base+0x23a0>
  40c16c:	mov	w1, w21
  40c170:	add	x2, x2, #0xd70
  40c174:	mov	x0, x22
  40c178:	bl	409c78 <_obstack_memory_used@@Base+0x138>
  40c17c:	cbz	x0, 40c18c <argp_failure@@Base+0x964>
  40c180:	mov	w1, #0xffffffff            	// #-1
  40c184:	str	w1, [x0, #24]
  40c188:	ldr	w21, [x27, #8]
  40c18c:	adrp	x2, 410000 <argp_error@@Base+0x33a0>
  40c190:	mov	w1, w21
  40c194:	add	x2, x2, #0xfd0
  40c198:	mov	x0, x22
  40c19c:	bl	409c78 <_obstack_memory_used@@Base+0x138>
  40c1a0:	cbz	x0, 40c1b0 <argp_failure@@Base+0x988>
  40c1a4:	mov	w1, #0xffffffff            	// #-1
  40c1a8:	str	w1, [x0, #24]
  40c1ac:	ldr	w21, [x27, #8]
  40c1b0:	cbz	w21, 40bac0 <argp_failure@@Base+0x298>
  40c1b4:	mov	x2, x22
  40c1b8:	mov	w1, #0x0                   	// #0
  40c1bc:	nop
  40c1c0:	str	w1, [x2, #48]
  40c1c4:	add	w1, w1, #0x1
  40c1c8:	cmp	w1, w21
  40c1cc:	add	x2, x2, #0x38
  40c1d0:	b.ne	40c1c0 <argp_failure@@Base+0x998>  // b.any
  40c1d4:	mov	x0, x22
  40c1d8:	adrp	x3, 40a000 <_obstack_memory_used@@Base+0x4c0>
  40c1dc:	mov	x2, #0x38                  	// #56
  40c1e0:	add	x3, x3, #0x6d0
  40c1e4:	bl	401b80 <qsort@plt>
  40c1e8:	mov	w21, #0x0                   	// #0
  40c1ec:	tst	x20, #0x3
  40c1f0:	b.eq	40bacc <argp_failure@@Base+0x2a4>  // b.none
  40c1f4:	b	40bfc8 <argp_failure@@Base+0x7a0>
  40c1f8:	mov	w3, w21
  40c1fc:	mov	x1, x24
  40c200:	mov	x0, x26
  40c204:	mov	x5, x25
  40c208:	mov	w4, #0x0                   	// #0
  40c20c:	mov	w2, #0x1                   	// #1
  40c210:	bl	40b308 <_obstack_memory_used@@Base+0x17c8>
  40c214:	orr	w21, w21, w0
  40c218:	b	40be20 <argp_failure@@Base+0x5f8>
  40c21c:	mov	x0, x25
  40c220:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c224:	b	40c0e8 <argp_failure@@Base+0x8c0>
  40c228:	mov	x0, x25
  40c22c:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c230:	ldp	x1, x0, [x25, #48]
  40c234:	sxtw	x21, w21
  40c238:	ldr	x2, [x25, #32]
  40c23c:	str	x21, [x25, #24]
  40c240:	sxtw	x22, w22
  40c244:	sub	x1, x0, x1
  40c248:	cmp	x1, x2
  40c24c:	b.ls	40c094 <argp_failure@@Base+0x86c>  // b.plast
  40c250:	mov	x0, x25
  40c254:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c258:	ldr	x0, [x25, #56]
  40c25c:	b	40c094 <argp_failure@@Base+0x86c>
  40c260:	mov	w21, #0x1                   	// #1
  40c264:	tbz	w20, #4, 40bad0 <argp_failure@@Base+0x2a8>
  40c268:	b	40bf9c <argp_failure@@Base+0x774>
  40c26c:	ldp	x0, x1, [x25, #56]
  40c270:	cmp	x0, x1
  40c274:	b.cs	40c9b4 <argp_failure@@Base+0x118c>  // b.hs, b.nlast
  40c278:	add	x1, x0, #0x1
  40c27c:	str	x1, [x25, #56]
  40c280:	mov	w1, #0xa                   	// #10
  40c284:	strb	w1, [x0]
  40c288:	ldr	x2, [x19, #1624]
  40c28c:	b	40be34 <argp_failure@@Base+0x60c>
  40c290:	mov	x0, x24
  40c294:	adrp	x4, 411000 <argp_error@@Base+0x43a0>
  40c298:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  40c29c:	add	x4, x4, #0x888
  40c2a0:	add	x3, x3, #0x890
  40c2a4:	mov	w2, #0x0                   	// #0
  40c2a8:	mov	w1, #0x0                   	// #0
  40c2ac:	bl	40b828 <argp_failure@@Base>
  40c2b0:	b	40ba94 <argp_failure@@Base+0x26c>
  40c2b4:	tbz	w21, #1, 40c2c0 <argp_failure@@Base+0xa98>
  40c2b8:	add	x23, x23, #0x1
  40c2bc:	b	40bc38 <argp_failure@@Base+0x410>
  40c2c0:	ldr	w0, [x19, #8]
  40c2c4:	add	x1, x29, #0xc8
  40c2c8:	bl	40b178 <_obstack_memory_used@@Base+0x1638>
  40c2cc:	ldp	x0, x1, [x25, #56]
  40c2d0:	ldr	x4, [x29, #168]
  40c2d4:	cmp	x0, x1
  40c2d8:	b.cc	40c2f4 <argp_failure@@Base+0xacc>  // b.lo, b.ul, b.last
  40c2dc:	mov	x0, x25
  40c2e0:	mov	x1, #0x1                   	// #1
  40c2e4:	bl	40e3a8 <argp_error@@Base+0x1748>
  40c2e8:	ldr	x4, [x29, #168]
  40c2ec:	cbz	w0, 40c304 <argp_failure@@Base+0xadc>
  40c2f0:	ldr	x0, [x25, #56]
  40c2f4:	add	x1, x0, #0x1
  40c2f8:	str	x1, [x25, #56]
  40c2fc:	mov	w1, #0x2d                  	// #45
  40c300:	strb	w1, [x0]
  40c304:	ldp	x0, x1, [x25, #56]
  40c308:	ldrb	w2, [x23]
  40c30c:	cmp	x0, x1
  40c310:	b.cc	40c338 <argp_failure@@Base+0xb10>  // b.lo, b.ul, b.last
  40c314:	mov	x0, x25
  40c318:	mov	x1, #0x1                   	// #1
  40c31c:	str	w2, [x29, #160]
  40c320:	str	x4, [x29, #168]
  40c324:	bl	40e3a8 <argp_error@@Base+0x1748>
  40c328:	ldr	x4, [x29, #168]
  40c32c:	cbz	w0, 40c344 <argp_failure@@Base+0xb1c>
  40c330:	ldr	w2, [x29, #160]
  40c334:	ldr	x0, [x25, #56]
  40c338:	add	x1, x0, #0x1
  40c33c:	str	x1, [x25, #56]
  40c340:	strb	w2, [x0]
  40c344:	ldr	w0, [x29, #132]
  40c348:	ldr	x2, [x28, #16]
  40c34c:	cbz	w0, 40c800 <argp_failure@@Base+0xfd8>
  40c350:	ldr	w0, [x19]
  40c354:	cbnz	w0, 40c800 <argp_failure@@Base+0xfd8>
  40c358:	cbz	x2, 40c2b8 <argp_failure@@Base+0xa90>
  40c35c:	mov	w0, #0x1                   	// #1
  40c360:	add	x23, x23, #0x1
  40c364:	str	w0, [x29, #196]
  40c368:	b	40bc38 <argp_failure@@Base+0x410>
  40c36c:	ldr	x2, [x22, #40]
  40c370:	ldr	x4, [x28, #32]
  40c374:	ldr	x0, [x2, #40]
  40c378:	mov	x21, x4
  40c37c:	cbz	x0, 40c39c <argp_failure@@Base+0xb74>
  40c380:	mov	x0, x4
  40c384:	mov	w1, w23
  40c388:	mov	x3, x24
  40c38c:	str	x4, [x29, #168]
  40c390:	bl	409da0 <_obstack_memory_used@@Base+0x260>
  40c394:	mov	x21, x0
  40c398:	ldr	x4, [x29, #168]
  40c39c:	cbz	x21, 40c578 <argp_failure@@Base+0xd50>
  40c3a0:	ldrb	w0, [x21]
  40c3a4:	cbz	w0, 40c568 <argp_failure@@Base+0xd40>
  40c3a8:	ldp	x2, x0, [x25, #48]
  40c3ac:	ldr	x1, [x25, #32]
  40c3b0:	sub	x0, x0, x2
  40c3b4:	cmp	x0, x1
  40c3b8:	b.hi	40c8d0 <argp_failure@@Base+0x10a8>  // b.pmore
  40c3bc:	ldr	x23, [x25, #40]
  40c3c0:	ldr	w1, [x19, #20]
  40c3c4:	cmp	x23, #0x0
  40c3c8:	csel	x23, x23, xzr, ge  // ge = tcont
  40c3cc:	sxtw	x3, w1
  40c3d0:	mov	w2, w1
  40c3d4:	str	x3, [x25, #8]
  40c3d8:	sxtw	x2, w2
  40c3dc:	str	x2, [x25, #24]
  40c3e0:	add	w0, w1, #0x3
  40c3e4:	cmp	w0, w23
  40c3e8:	b.cc	40c8b0 <argp_failure@@Base+0x1088>  // b.lo, b.ul, b.last
  40c3ec:	cmp	w1, w23
  40c3f0:	b.hi	40c4f4 <argp_failure@@Base+0xccc>  // b.pmore
  40c3f4:	ldp	x0, x2, [x25, #56]
  40c3f8:	add	x1, x0, #0x3
  40c3fc:	cmp	x2, x1
  40c400:	b.cs	40c420 <argp_failure@@Base+0xbf8>  // b.hs, b.nlast
  40c404:	mov	x0, x25
  40c408:	mov	x1, #0x3                   	// #3
  40c40c:	str	x4, [x29, #168]
  40c410:	bl	40e3a8 <argp_error@@Base+0x1748>
  40c414:	ldr	x4, [x29, #168]
  40c418:	cbz	w0, 40c504 <argp_failure@@Base+0xcdc>
  40c41c:	ldr	x0, [x25, #56]
  40c420:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40c424:	add	x1, x1, #0x948
  40c428:	ldrh	w2, [x1]
  40c42c:	ldrb	w1, [x1, #2]
  40c430:	strh	w2, [x0]
  40c434:	strb	w1, [x0, #2]
  40c438:	ldr	x0, [x25, #56]
  40c43c:	add	x0, x0, #0x3
  40c440:	str	x0, [x25, #56]
  40c444:	b	40c504 <argp_failure@@Base+0xcdc>
  40c448:	ldr	w21, [x19, #12]
  40c44c:	cmp	x0, x1
  40c450:	b.hi	40c7f4 <argp_failure@@Base+0xfcc>  // b.pmore
  40c454:	ldr	w0, [x22, #8]
  40c458:	sxtw	x21, w21
  40c45c:	str	x21, [x25, #24]
  40c460:	cbz	w0, 40bd38 <argp_failure@@Base+0x510>
  40c464:	sub	w23, w0, #0x1
  40c468:	adrp	x21, 411000 <argp_error@@Base+0x43a0>
  40c46c:	add	x23, x23, #0x1
  40c470:	add	x0, x21, #0x930
  40c474:	mov	x21, x28
  40c478:	str	x0, [x29, #168]
  40c47c:	add	x23, x23, x23, lsl #1
  40c480:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40c484:	add	x0, x0, #0x940
  40c488:	str	x0, [x29, #160]
  40c48c:	add	x23, x28, x23, lsl #4
  40c490:	b	40c4a0 <argp_failure@@Base+0xc78>
  40c494:	add	x21, x21, #0x30
  40c498:	cmp	x21, x23
  40c49c:	b.eq	40bd38 <argp_failure@@Base+0x510>  // b.none
  40c4a0:	ldr	x0, [x21]
  40c4a4:	cbz	x0, 40c494 <argp_failure@@Base+0xc6c>
  40c4a8:	ldr	w0, [x21, #24]
  40c4ac:	tbnz	w0, #1, 40c494 <argp_failure@@Base+0xc6c>
  40c4b0:	ldr	w0, [x19, #12]
  40c4b4:	add	x1, x29, #0xc8
  40c4b8:	bl	40b178 <_obstack_memory_used@@Base+0x1638>
  40c4bc:	ldr	x2, [x21]
  40c4c0:	mov	x0, x25
  40c4c4:	ldr	x1, [x29, #168]
  40c4c8:	bl	40e3c8 <argp_error@@Base+0x1768>
  40c4cc:	ldr	x2, [x28, #16]
  40c4d0:	cbz	x2, 40c494 <argp_failure@@Base+0xc6c>
  40c4d4:	ldr	w6, [x28, #24]
  40c4d8:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40c4dc:	mov	x0, x25
  40c4e0:	add	x1, x1, #0x938
  40c4e4:	tbnz	w6, #0, 40c4ec <argp_failure@@Base+0xcc4>
  40c4e8:	ldr	x1, [x29, #160]
  40c4ec:	bl	40e3c8 <argp_error@@Base+0x1768>
  40c4f0:	b	40c494 <argp_failure@@Base+0xc6c>
  40c4f4:	mov	x0, x25
  40c4f8:	str	x4, [x29, #168]
  40c4fc:	bl	40aa90 <_obstack_memory_used@@Base+0xf50>
  40c500:	ldr	x4, [x29, #168]
  40c504:	mov	x0, x21
  40c508:	str	x4, [x29, #168]
  40c50c:	bl	401b00 <strlen@plt>
  40c510:	mov	x23, x0
  40c514:	ldr	x4, [x29, #168]
  40c518:	cbz	x0, 40c568 <argp_failure@@Base+0xd40>
  40c51c:	ldp	x0, x2, [x25, #56]
  40c520:	add	x1, x0, x23
  40c524:	cmp	x2, x1
  40c528:	b.cs	40c544 <argp_failure@@Base+0xd1c>  // b.hs, b.nlast
  40c52c:	mov	x1, x23
  40c530:	mov	x0, x25
  40c534:	bl	40e3a8 <argp_error@@Base+0x1748>
  40c538:	ldr	x4, [x29, #168]
  40c53c:	cbz	w0, 40c568 <argp_failure@@Base+0xd40>
  40c540:	ldr	x0, [x25, #56]
  40c544:	mov	x2, x23
  40c548:	mov	x1, x21
  40c54c:	str	x4, [x29, #168]
  40c550:	bl	401aa0 <memcpy@plt>
  40c554:	ldr	x0, [x25, #56]
  40c558:	ldr	x4, [x29, #168]
  40c55c:	add	x0, x0, x23
  40c560:	str	x0, [x25, #56]
  40c564:	nop
  40c568:	cmp	x4, x21
  40c56c:	b.eq	40c578 <argp_failure@@Base+0xd50>  // b.none
  40c570:	mov	x0, x21
  40c574:	bl	401d30 <free@plt>
  40c578:	ldp	x1, x0, [x25, #48]
  40c57c:	ldr	x2, [x25, #32]
  40c580:	sub	x1, x0, x1
  40c584:	cmp	x1, x2
  40c588:	b.hi	40c7d8 <argp_failure@@Base+0xfb0>  // b.pmore
  40c58c:	ldr	x1, [x25, #64]
  40c590:	str	xzr, [x25, #8]
  40c594:	cmp	x1, x0
  40c598:	b.hi	40c5b0 <argp_failure@@Base+0xd88>  // b.pmore
  40c59c:	mov	x0, x25
  40c5a0:	mov	x1, #0x1                   	// #1
  40c5a4:	bl	40e3a8 <argp_error@@Base+0x1748>
  40c5a8:	cbz	w0, 40c5c0 <argp_failure@@Base+0xd98>
  40c5ac:	ldr	x0, [x25, #56]
  40c5b0:	add	x1, x0, #0x1
  40c5b4:	str	x1, [x25, #56]
  40c5b8:	mov	w1, #0xa                   	// #10
  40c5bc:	strb	w1, [x0]
  40c5c0:	str	x22, [x29, #184]
  40c5c4:	ldp	x2, x0, [x25, #48]
  40c5c8:	ldr	x1, [x25, #32]
  40c5cc:	ldrsw	x21, [x29, #144]
  40c5d0:	sub	x0, x0, x2
  40c5d4:	cmp	x0, x1
  40c5d8:	b.ls	40bda0 <argp_failure@@Base+0x578>  // b.plast
  40c5dc:	mov	x0, x25
  40c5e0:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c5e4:	ldp	x2, x0, [x25, #48]
  40c5e8:	str	x21, [x25, #8]
  40c5ec:	ldr	x1, [x25, #32]
  40c5f0:	sub	x0, x0, x2
  40c5f4:	cmp	x0, x1
  40c5f8:	b.ls	40bda4 <argp_failure@@Base+0x57c>  // b.plast
  40c5fc:	mov	x0, x25
  40c600:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c604:	b	40bda4 <argp_failure@@Base+0x57c>
  40c608:	str	wzr, [x29, #132]
  40c60c:	cmp	x2, x4
  40c610:	ldr	w1, [x19, #8]
  40c614:	b.ls	40bbb8 <argp_failure@@Base+0x390>  // b.plast
  40c618:	mov	x0, x25
  40c61c:	str	w1, [x29, #168]
  40c620:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c624:	ldr	w1, [x29, #168]
  40c628:	b	40bbb8 <argp_failure@@Base+0x390>
  40c62c:	cmp	w21, #0x2d
  40c630:	and	w1, w1, #0x8
  40c634:	mov	w2, #0x5f                  	// #95
  40c638:	ccmp	w21, w2, #0x4, ne  // ne = any
  40c63c:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  40c640:	b.eq	40cb0c <argp_failure@@Base+0x12e4>  // b.none
  40c644:	mov	x27, x25
  40c648:	mov	w4, #0x2d                  	// #45
  40c64c:	nop
  40c650:	ldrb	w1, [x27, #1]!
  40c654:	cmp	w1, #0x5f
  40c658:	ubfiz	x2, x1, #1, #8
  40c65c:	ccmp	w1, w4, #0x4, ne  // ne = any
  40c660:	ldrh	w2, [x0, x2]
  40c664:	and	w3, w2, #0x8
  40c668:	ccmp	w3, #0x0, #0x0, ne  // ne = any
  40c66c:	b.ne	40c650 <argp_failure@@Base+0xe28>  // b.any
  40c670:	sub	x22, x27, x25
  40c674:	tbz	w2, #13, 40c688 <argp_failure@@Base+0xe60>
  40c678:	ldrb	w1, [x27, #1]!
  40c67c:	ubfiz	x2, x1, #1, #8
  40c680:	ldrh	w2, [x0, x2]
  40c684:	tbnz	w2, #13, 40c678 <argp_failure@@Base+0xe50>
  40c688:	cmp	w1, #0x2c
  40c68c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40c690:	b.eq	40c79c <argp_failure@@Base+0xf74>  // b.none
  40c694:	cmp	w1, #0x3d
  40c698:	b.eq	40ca08 <argp_failure@@Base+0x11e0>  // b.none
  40c69c:	ldrb	w1, [x27]
  40c6a0:	ldrh	w1, [x0, x1, lsl #1]
  40c6a4:	str	wzr, [x29, #136]
  40c6a8:	str	wzr, [x29, #152]
  40c6ac:	tbnz	w1, #11, 40ca30 <argp_failure@@Base+0x1208>
  40c6b0:	ldr	x0, [x29, #160]
  40c6b4:	ldr	x23, [x29, #144]
  40c6b8:	add	x21, x0, #0x20
  40c6bc:	mov	x0, #0x8                   	// #8
  40c6c0:	b	40c6d4 <argp_failure@@Base+0xeac>
  40c6c4:	ldr	x23, [x21, #24]!
  40c6c8:	mov	x0, x23
  40c6cc:	cbz	x23, 40c76c <argp_failure@@Base+0xf44>
  40c6d0:	bl	401b00 <strlen@plt>
  40c6d4:	cmp	x22, x0
  40c6d8:	b.ne	40c6c4 <argp_failure@@Base+0xe9c>  // b.any
  40c6dc:	mov	x1, x23
  40c6e0:	mov	x2, x22
  40c6e4:	mov	x0, x25
  40c6e8:	bl	401c00 <strncmp@plt>
  40c6ec:	cbnz	w0, 40c6c4 <argp_failure@@Base+0xe9c>
  40c6f0:	ldr	w0, [x29, #136]
  40c6f4:	cbz	w0, 40c700 <argp_failure@@Base+0xed8>
  40c6f8:	ldr	w0, [x21, #8]
  40c6fc:	cbz	w0, 40c9e4 <argp_failure@@Base+0x11bc>
  40c700:	ldr	w0, [x29, #152]
  40c704:	tbnz	w0, #31, 40ca80 <argp_failure@@Base+0x1258>
  40c708:	ldr	x0, [x21, #16]
  40c70c:	add	x1, x29, #0xc8
  40c710:	ldr	w2, [x29, #152]
  40c714:	str	w2, [x1, x0]
  40c718:	ldr	x0, [x21]
  40c71c:	cbz	x0, 40c76c <argp_failure@@Base+0xf44>
  40c720:	ldrb	w21, [x27]
  40c724:	mov	x25, x27
  40c728:	cmp	w21, #0x2c
  40c72c:	b.eq	40c738 <argp_failure@@Base+0xf10>  // b.none
  40c730:	cbnz	w21, 40bed0 <argp_failure@@Base+0x6a8>
  40c734:	b	40bef4 <argp_failure@@Base+0x6cc>
  40c738:	ldrb	w21, [x27, #1]
  40c73c:	add	x25, x27, #0x1
  40c740:	cbnz	w21, 40bed0 <argp_failure@@Base+0x6a8>
  40c744:	b	40bef4 <argp_failure@@Base+0x6cc>
  40c748:	mov	x0, x25
  40c74c:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c750:	ldp	x0, x2, [x25, #48]
  40c754:	ldr	x4, [x25, #32]
  40c758:	sub	x2, x2, x0
  40c75c:	b	40bb34 <argp_failure@@Base+0x30c>
  40c760:	mov	x0, x25
  40c764:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c768:	b	40bd4c <argp_failure@@Base+0x524>
  40c76c:	mov	x5, x25
  40c770:	mov	w4, w22
  40c774:	mov	x0, x24
  40c778:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  40c77c:	mov	w2, #0x0                   	// #0
  40c780:	add	x3, x3, #0x840
  40c784:	mov	w1, #0x0                   	// #0
  40c788:	bl	40b828 <argp_failure@@Base>
  40c78c:	b	40c720 <argp_failure@@Base+0xef8>
  40c790:	mov	w0, #0x1                   	// #1
  40c794:	str	w0, [x29, #132]
  40c798:	b	40bbac <argp_failure@@Base+0x384>
  40c79c:	mov	w0, #0x1                   	// #1
  40c7a0:	str	w0, [x29, #136]
  40c7a4:	str	w0, [x29, #152]
  40c7a8:	cmp	w21, #0x6e
  40c7ac:	b.ne	40c6b0 <argp_failure@@Base+0xe88>  // b.any
  40c7b0:	ldrb	w0, [x25, #1]
  40c7b4:	cmp	w0, #0x6f
  40c7b8:	b.ne	40c6b0 <argp_failure@@Base+0xe88>  // b.any
  40c7bc:	ldrb	w0, [x25, #2]
  40c7c0:	cmp	w0, #0x2d
  40c7c4:	b.ne	40c6b0 <argp_failure@@Base+0xe88>  // b.any
  40c7c8:	add	x25, x25, #0x3
  40c7cc:	sub	x22, x22, #0x3
  40c7d0:	str	wzr, [x29, #152]
  40c7d4:	b	40c6b0 <argp_failure@@Base+0xe88>
  40c7d8:	mov	x0, x25
  40c7dc:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c7e0:	ldr	x0, [x25, #56]
  40c7e4:	b	40c58c <argp_failure@@Base+0xd64>
  40c7e8:	mov	x0, x25
  40c7ec:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c7f0:	b	40bc68 <argp_failure@@Base+0x440>
  40c7f4:	mov	x0, x25
  40c7f8:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c7fc:	b	40c454 <argp_failure@@Base+0xc2c>
  40c800:	cbz	x2, 40c2b8 <argp_failure@@Base+0xa90>
  40c804:	ldr	w0, [x28, #24]
  40c808:	str	x4, [x29, #168]
  40c80c:	tbz	w0, #0, 40c95c <argp_failure@@Base+0x1134>
  40c810:	ldr	x1, [x29, #104]
  40c814:	mov	x0, x25
  40c818:	add	x23, x23, #0x1
  40c81c:	bl	40e3c8 <argp_error@@Base+0x1768>
  40c820:	ldr	x4, [x29, #168]
  40c824:	b	40bc38 <argp_failure@@Base+0x410>
  40c828:	ldr	x0, [x28, #32]
  40c82c:	add	x2, x29, #0xc8
  40c830:	ldr	x1, [x22, #40]
  40c834:	bl	40af50 <_obstack_memory_used@@Base+0x1410>
  40c838:	str	x22, [x29, #184]
  40c83c:	b	40c5c4 <argp_failure@@Base+0xd9c>
  40c840:	ldp	x0, x2, [x25, #56]
  40c844:	add	x1, x0, #0xc
  40c848:	cmp	x2, x1
  40c84c:	b.cs	40c864 <argp_failure@@Base+0x103c>  // b.hs, b.nlast
  40c850:	mov	x0, x25
  40c854:	mov	x1, #0xc                   	// #12
  40c858:	bl	40e3a8 <argp_error@@Base+0x1748>
  40c85c:	cbz	w0, 40c058 <argp_failure@@Base+0x830>
  40c860:	ldr	x0, [x25, #56]
  40c864:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40c868:	add	x1, x1, #0x8e0
  40c86c:	ldr	x2, [x1]
  40c870:	str	x2, [x0]
  40c874:	ldr	w1, [x1, #8]
  40c878:	str	w1, [x0, #8]
  40c87c:	ldr	x0, [x25, #56]
  40c880:	add	x0, x0, #0xc
  40c884:	str	x0, [x25, #56]
  40c888:	b	40c058 <argp_failure@@Base+0x830>
  40c88c:	ldr	x0, [x29, #232]
  40c890:	str	x0, [x19, #32]
  40c894:	ldp	x4, x5, [x29, #200]
  40c898:	mov	w0, #0x1                   	// #1
  40c89c:	ldp	x2, x3, [x29, #216]
  40c8a0:	stp	x4, x5, [x19]
  40c8a4:	stp	x2, x3, [x19, #16]
  40c8a8:	str	w0, [x19, #36]
  40c8ac:	b	40ba94 <argp_failure@@Base+0x26c>
  40c8b0:	ldp	x0, x1, [x25, #56]
  40c8b4:	cmp	x0, x1
  40c8b8:	b.cs	40c994 <argp_failure@@Base+0x116c>  // b.hs, b.nlast
  40c8bc:	add	x1, x0, #0x1
  40c8c0:	str	x1, [x25, #56]
  40c8c4:	mov	w1, #0xa                   	// #10
  40c8c8:	strb	w1, [x0]
  40c8cc:	b	40c504 <argp_failure@@Base+0xcdc>
  40c8d0:	mov	x0, x25
  40c8d4:	str	x4, [x29, #168]
  40c8d8:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c8dc:	ldp	x2, x23, [x25, #32]
  40c8e0:	ldp	x3, x0, [x25, #48]
  40c8e4:	ldr	w1, [x19, #20]
  40c8e8:	ldr	x4, [x29, #168]
  40c8ec:	cmp	x23, #0x0
  40c8f0:	csel	x23, x23, xzr, ge  // ge = tcont
  40c8f4:	sub	x0, x0, x3
  40c8f8:	sxtw	x3, w1
  40c8fc:	cmp	x0, x2
  40c900:	b.ls	40c3d0 <argp_failure@@Base+0xba8>  // b.plast
  40c904:	mov	x0, x25
  40c908:	stp	x4, x3, [x29, #160]
  40c90c:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c910:	ldp	x2, x0, [x25, #48]
  40c914:	ldr	x1, [x25, #32]
  40c918:	ldp	x4, x3, [x29, #160]
  40c91c:	str	x3, [x25, #8]
  40c920:	sub	x0, x0, x2
  40c924:	ldr	w2, [x19, #20]
  40c928:	cmp	x0, x1
  40c92c:	b.ls	40cb70 <argp_failure@@Base+0x1348>  // b.plast
  40c930:	mov	x0, x25
  40c934:	str	w2, [x29, #160]
  40c938:	str	x4, [x29, #168]
  40c93c:	bl	40dd30 <argp_error@@Base+0x10d0>
  40c940:	ldr	w1, [x19, #20]
  40c944:	ldr	w2, [x29, #160]
  40c948:	ldr	x4, [x29, #168]
  40c94c:	b	40c3d8 <argp_failure@@Base+0xbb0>
  40c950:	ldr	x0, [x29, #120]
  40c954:	bl	401bf0 <funlockfile@plt>
  40c958:	b	40be60 <argp_failure@@Base+0x638>
  40c95c:	ldr	x1, [x29, #96]
  40c960:	mov	x0, x25
  40c964:	add	x23, x23, #0x1
  40c968:	bl	40e3c8 <argp_error@@Base+0x1768>
  40c96c:	ldr	x4, [x29, #168]
  40c970:	b	40bc38 <argp_failure@@Base+0x410>
  40c974:	mov	x4, x25
  40c978:	mov	x0, x24
  40c97c:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  40c980:	mov	w2, #0x0                   	// #0
  40c984:	add	x3, x3, #0x868
  40c988:	mov	w1, #0x0                   	// #0
  40c98c:	bl	40b828 <argp_failure@@Base>
  40c990:	b	40bef4 <argp_failure@@Base+0x6cc>
  40c994:	mov	x0, x25
  40c998:	mov	x1, #0x1                   	// #1
  40c99c:	str	x4, [x29, #168]
  40c9a0:	bl	40e3a8 <argp_error@@Base+0x1748>
  40c9a4:	ldr	x4, [x29, #168]
  40c9a8:	cbz	w0, 40c504 <argp_failure@@Base+0xcdc>
  40c9ac:	ldr	x0, [x25, #56]
  40c9b0:	b	40c8bc <argp_failure@@Base+0x1094>
  40c9b4:	mov	x0, x25
  40c9b8:	mov	x1, #0x1                   	// #1
  40c9bc:	bl	40e3a8 <argp_error@@Base+0x1748>
  40c9c0:	cbz	w0, 40c288 <argp_failure@@Base+0xa60>
  40c9c4:	ldr	x0, [x25, #56]
  40c9c8:	b	40c278 <argp_failure@@Base+0xa50>
  40c9cc:	mov	x0, x25
  40c9d0:	mov	x1, #0x1                   	// #1
  40c9d4:	bl	40e3a8 <argp_error@@Base+0x1748>
  40c9d8:	cbz	w0, 40bf84 <argp_failure@@Base+0x75c>
  40c9dc:	ldr	x0, [x25, #56]
  40c9e0:	b	40bf74 <argp_failure@@Base+0x74c>
  40c9e4:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  40c9e8:	mov	x5, x25
  40c9ec:	add	x3, x3, #0x7e0
  40c9f0:	mov	w4, w22
  40c9f4:	mov	x0, x24
  40c9f8:	mov	w2, #0x0                   	// #0
  40c9fc:	mov	w1, #0x0                   	// #0
  40ca00:	bl	40b828 <argp_failure@@Base>
  40ca04:	b	40c718 <argp_failure@@Base+0xef0>
  40ca08:	ldrb	w1, [x27, #1]
  40ca0c:	add	x6, x27, #0x1
  40ca10:	mov	x27, x6
  40ca14:	ldrh	w1, [x0, x1, lsl #1]
  40ca18:	tbz	w1, #13, 40c6a4 <argp_failure@@Base+0xe7c>
  40ca1c:	nop
  40ca20:	ldrb	w1, [x27, #1]!
  40ca24:	ldrh	w1, [x0, x1, lsl #1]
  40ca28:	tbnz	w1, #13, 40ca20 <argp_failure@@Base+0x11f8>
  40ca2c:	b	40c6a4 <argp_failure@@Base+0xe7c>
  40ca30:	mov	w2, #0xa                   	// #10
  40ca34:	mov	x1, #0x0                   	// #0
  40ca38:	mov	x0, x27
  40ca3c:	bl	401d10 <strtol@plt>
  40ca40:	ldr	x1, [x29, #168]
  40ca44:	str	w0, [x29, #152]
  40ca48:	ldrb	w2, [x27]
  40ca4c:	ldr	x1, [x1]
  40ca50:	ldrh	w0, [x1, x2, lsl #1]
  40ca54:	tbz	w0, #11, 40ca68 <argp_failure@@Base+0x1240>
  40ca58:	ldrb	w0, [x27, #1]!
  40ca5c:	ldrh	w0, [x1, x0, lsl #1]
  40ca60:	tbnz	w0, #11, 40ca58 <argp_failure@@Base+0x1230>
  40ca64:	nop
  40ca68:	tbz	w0, #13, 40ca78 <argp_failure@@Base+0x1250>
  40ca6c:	ldrb	w0, [x27, #1]!
  40ca70:	ldrh	w0, [x1, x0, lsl #1]
  40ca74:	b	40ca68 <argp_failure@@Base+0x1240>
  40ca78:	str	wzr, [x29, #136]
  40ca7c:	b	40c6b0 <argp_failure@@Base+0xe88>
  40ca80:	adrp	x3, 411000 <argp_error@@Base+0x43a0>
  40ca84:	mov	x5, x25
  40ca88:	add	x3, x3, #0x810
  40ca8c:	b	40c9f0 <argp_failure@@Base+0x11c8>
  40ca90:	add	x19, x19, #0x758
  40ca94:	mov	x21, x19
  40ca98:	ldp	x0, x1, [x25, #56]
  40ca9c:	cmp	x0, x1
  40caa0:	b.cc	40cab8 <argp_failure@@Base+0x1290>  // b.lo, b.ul, b.last
  40caa4:	mov	x0, x25
  40caa8:	mov	x1, #0x1                   	// #1
  40caac:	bl	40e3a8 <argp_error@@Base+0x1748>
  40cab0:	cbz	w0, 40cac8 <argp_failure@@Base+0x12a0>
  40cab4:	ldr	x0, [x25, #56]
  40cab8:	add	x1, x0, #0x1
  40cabc:	str	x1, [x25, #56]
  40cac0:	mov	w1, #0xa                   	// #10
  40cac4:	strb	w1, [x0]
  40cac8:	mov	x0, x21
  40cacc:	bl	401b00 <strlen@plt>
  40cad0:	mov	x22, x0
  40cad4:	ldp	x0, x1, [x25, #56]
  40cad8:	cbnz	x22, 40cb2c <argp_failure@@Base+0x1304>
  40cadc:	cmp	x0, x1
  40cae0:	b.cc	40caf8 <argp_failure@@Base+0x12d0>  // b.lo, b.ul, b.last
  40cae4:	mov	x0, x25
  40cae8:	mov	x1, #0x1                   	// #1
  40caec:	bl	40e3a8 <argp_error@@Base+0x1748>
  40caf0:	cbz	w0, 40be04 <argp_failure@@Base+0x5dc>
  40caf4:	ldr	x0, [x25, #56]
  40caf8:	add	x1, x0, #0x1
  40cafc:	str	x1, [x25, #56]
  40cb00:	mov	w1, #0xa                   	// #10
  40cb04:	strb	w1, [x0]
  40cb08:	b	40be04 <argp_failure@@Base+0x5dc>
  40cb0c:	mov	w1, w21
  40cb10:	mov	x27, x25
  40cb14:	mov	x22, #0x0                   	// #0
  40cb18:	b	40c688 <argp_failure@@Base+0xe60>
  40cb1c:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40cb20:	add	x0, x0, #0x9c8
  40cb24:	str	x0, [x29, #160]
  40cb28:	b	40bef4 <argp_failure@@Base+0x6cc>
  40cb2c:	add	x2, x0, x22
  40cb30:	cmp	x1, x2
  40cb34:	b.cs	40cb54 <argp_failure@@Base+0x132c>  // b.hs, b.nlast
  40cb38:	mov	x1, x22
  40cb3c:	mov	x0, x25
  40cb40:	bl	40e3a8 <argp_error@@Base+0x1748>
  40cb44:	cbnz	w0, 40cb50 <argp_failure@@Base+0x1328>
  40cb48:	ldp	x0, x1, [x25, #56]
  40cb4c:	b	40cadc <argp_failure@@Base+0x12b4>
  40cb50:	ldr	x0, [x25, #56]
  40cb54:	mov	x1, x21
  40cb58:	mov	x2, x22
  40cb5c:	bl	401aa0 <memcpy@plt>
  40cb60:	ldp	x0, x1, [x25, #56]
  40cb64:	add	x0, x0, x22
  40cb68:	str	x0, [x25, #56]
  40cb6c:	b	40cadc <argp_failure@@Base+0x12b4>
  40cb70:	mov	w1, w2
  40cb74:	b	40c3d8 <argp_failure@@Base+0xbb0>

000000000040cb78 <argp_help@@Base>:
  40cb78:	stp	x29, x30, [sp, #-112]!
  40cb7c:	mov	w6, w2
  40cb80:	mov	x4, x3
  40cb84:	add	x5, sp, #0x18
  40cb88:	mov	x29, sp
  40cb8c:	mov	x2, x1
  40cb90:	stp	xzr, xzr, [sp, #24]
  40cb94:	add	x1, sp, #0x10
  40cb98:	mov	w3, w6
  40cb9c:	stp	xzr, xzr, [x5, #16]
  40cba0:	stp	xzr, xzr, [x5, #32]
  40cba4:	stp	xzr, xzr, [x5, #48]
  40cba8:	stp	xzr, xzr, [x5, #64]
  40cbac:	str	xzr, [x5, #80]
  40cbb0:	str	x0, [sp, #16]
  40cbb4:	bl	40ba48 <argp_failure@@Base+0x220>
  40cbb8:	ldp	x29, x30, [sp], #112
  40cbbc:	ret

000000000040cbc0 <argp_state_help@@Base>:
  40cbc0:	stp	x29, x30, [sp, #-32]!
  40cbc4:	mov	x29, sp
  40cbc8:	stp	x19, x20, [sp, #16]
  40cbcc:	mov	w20, w2
  40cbd0:	cbz	x0, 40cc30 <argp_state_help@@Base+0x70>
  40cbd4:	ldr	w2, [x0, #28]
  40cbd8:	mov	x19, x0
  40cbdc:	tst	x2, #0x2
  40cbe0:	ccmp	x1, #0x0, #0x4, eq  // eq = none
  40cbe4:	b.ne	40cbf4 <argp_state_help@@Base+0x34>  // b.any
  40cbe8:	ldp	x19, x20, [sp, #16]
  40cbec:	ldp	x29, x30, [sp], #32
  40cbf0:	ret
  40cbf4:	tst	x2, #0x40
  40cbf8:	orr	w2, w20, #0x80
  40cbfc:	csel	w20, w2, w20, ne  // ne = any
  40cc00:	mov	x2, x1
  40cc04:	mov	x1, x0
  40cc08:	mov	w3, w20
  40cc0c:	ldr	x0, [x0]
  40cc10:	ldr	x4, [x19, #64]
  40cc14:	bl	40ba48 <argp_failure@@Base+0x220>
  40cc18:	ldr	w0, [x19, #28]
  40cc1c:	tbnz	w0, #5, 40cbe8 <argp_state_help@@Base+0x28>
  40cc20:	tbnz	w20, #8, 40cc50 <argp_state_help@@Base+0x90>
  40cc24:	tbz	w20, #9, 40cbe8 <argp_state_help@@Base+0x28>
  40cc28:	mov	w0, #0x0                   	// #0
  40cc2c:	bl	401b20 <exit@plt>
  40cc30:	cbz	x1, 40cbe8 <argp_state_help@@Base+0x28>
  40cc34:	adrp	x4, 427000 <argp_error@@Base+0x1a3a0>
  40cc38:	mov	x2, x1
  40cc3c:	mov	w3, w20
  40cc40:	mov	x1, #0x0                   	// #0
  40cc44:	ldr	x4, [x4, #1264]
  40cc48:	bl	40ba48 <argp_failure@@Base+0x220>
  40cc4c:	b	40cc20 <argp_state_help@@Base+0x60>
  40cc50:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40cc54:	ldr	w0, [x0, #1232]
  40cc58:	bl	401b20 <exit@plt>
  40cc5c:	nop

000000000040cc60 <argp_error@@Base>:
  40cc60:	stp	x29, x30, [sp, #-288]!
  40cc64:	mov	x29, sp
  40cc68:	stp	x19, x20, [sp, #16]
  40cc6c:	mov	x20, x0
  40cc70:	str	x21, [sp, #32]
  40cc74:	mov	x21, x1
  40cc78:	str	q0, [sp, #112]
  40cc7c:	str	q1, [sp, #128]
  40cc80:	str	q2, [sp, #144]
  40cc84:	str	q3, [sp, #160]
  40cc88:	str	q4, [sp, #176]
  40cc8c:	str	q5, [sp, #192]
  40cc90:	str	q6, [sp, #208]
  40cc94:	str	q7, [sp, #224]
  40cc98:	stp	x2, x3, [sp, #240]
  40cc9c:	stp	x4, x5, [sp, #256]
  40cca0:	stp	x6, x7, [sp, #272]
  40cca4:	cbz	x0, 40cd84 <argp_error@@Base+0x124>
  40cca8:	ldr	w0, [x0, #28]
  40ccac:	tbnz	w0, #1, 40cd74 <argp_error@@Base+0x114>
  40ccb0:	ldr	x19, [x20, #72]
  40ccb4:	cbz	x19, 40cd74 <argp_error@@Base+0x114>
  40ccb8:	mov	x0, x19
  40ccbc:	bl	401b40 <flockfile@plt>
  40ccc0:	mov	w0, #0xffffff80            	// #-128
  40ccc4:	mov	w1, #0xffffffd0            	// #-48
  40ccc8:	stp	w1, w0, [sp, #104]
  40cccc:	add	x2, sp, #0xf0
  40ccd0:	ldr	x0, [x20, #64]
  40ccd4:	add	x3, sp, #0x120
  40ccd8:	stp	x3, x3, [sp, #80]
  40ccdc:	str	x2, [sp, #96]
  40cce0:	mov	x1, x19
  40cce4:	bl	401e50 <fputs_unlocked@plt>
  40cce8:	ldp	x0, x1, [x19, #40]
  40ccec:	cmp	x0, x1
  40ccf0:	b.cs	40cdd0 <argp_error@@Base+0x170>  // b.hs, b.nlast
  40ccf4:	add	x1, x0, #0x1
  40ccf8:	str	x1, [x19, #40]
  40ccfc:	mov	w1, #0x3a                  	// #58
  40cd00:	strb	w1, [x0]
  40cd04:	ldp	x0, x1, [x19, #40]
  40cd08:	cmp	x0, x1
  40cd0c:	b.cs	40cde0 <argp_error@@Base+0x180>  // b.hs, b.nlast
  40cd10:	add	x1, x0, #0x1
  40cd14:	str	x1, [x19, #40]
  40cd18:	mov	w1, #0x20                  	// #32
  40cd1c:	strb	w1, [x0]
  40cd20:	ldp	x6, x7, [sp, #80]
  40cd24:	mov	x1, x21
  40cd28:	ldp	x4, x5, [sp, #96]
  40cd2c:	add	x2, sp, #0x30
  40cd30:	mov	x0, x19
  40cd34:	stp	x6, x7, [sp, #48]
  40cd38:	stp	x4, x5, [sp, #64]
  40cd3c:	bl	401e70 <vfprintf@plt>
  40cd40:	ldp	x0, x1, [x19, #40]
  40cd44:	cmp	x0, x1
  40cd48:	b.cs	40cdc0 <argp_error@@Base+0x160>  // b.hs, b.nlast
  40cd4c:	add	x1, x0, #0x1
  40cd50:	str	x1, [x19, #40]
  40cd54:	mov	w1, #0xa                   	// #10
  40cd58:	strb	w1, [x0]
  40cd5c:	mov	x1, x19
  40cd60:	mov	w2, #0x104                 	// #260
  40cd64:	mov	x0, x20
  40cd68:	bl	40cbc0 <argp_state_help@@Base>
  40cd6c:	mov	x0, x19
  40cd70:	bl	401bf0 <funlockfile@plt>
  40cd74:	ldp	x19, x20, [sp, #16]
  40cd78:	ldr	x21, [sp, #32]
  40cd7c:	ldp	x29, x30, [sp], #288
  40cd80:	ret
  40cd84:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40cd88:	ldr	x19, [x0, #1248]
  40cd8c:	cbz	x19, 40cd74 <argp_error@@Base+0x114>
  40cd90:	mov	x0, x19
  40cd94:	bl	401b40 <flockfile@plt>
  40cd98:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40cd9c:	add	x3, sp, #0xf0
  40cda0:	add	x4, sp, #0x120
  40cda4:	mov	w2, #0xffffffd0            	// #-48
  40cda8:	mov	w1, #0xffffff80            	// #-128
  40cdac:	stp	x4, x4, [sp, #80]
  40cdb0:	ldr	x0, [x0, #1264]
  40cdb4:	str	x3, [sp, #96]
  40cdb8:	stp	w2, w1, [sp, #104]
  40cdbc:	b	40cce0 <argp_error@@Base+0x80>
  40cdc0:	mov	x0, x19
  40cdc4:	mov	w1, #0xa                   	// #10
  40cdc8:	bl	401ce0 <__overflow@plt>
  40cdcc:	b	40cd5c <argp_error@@Base+0xfc>
  40cdd0:	mov	x0, x19
  40cdd4:	mov	w1, #0x3a                  	// #58
  40cdd8:	bl	401ce0 <__overflow@plt>
  40cddc:	b	40cd04 <argp_error@@Base+0xa4>
  40cde0:	mov	x0, x19
  40cde4:	mov	w1, #0x20                  	// #32
  40cde8:	bl	401ce0 <__overflow@plt>
  40cdec:	b	40cd20 <argp_error@@Base+0xc0>
  40cdf0:	ldp	w13, w8, [x1, #48]
  40cdf4:	add	x11, x0, #0x8
  40cdf8:	ldr	w12, [x1]
  40cdfc:	cmp	w13, w8
  40ce00:	mov	w7, w13
  40ce04:	ccmp	w8, w12, #0x0, lt  // lt = tstop
  40ce08:	mov	w9, w12
  40ce0c:	sxtw	x14, w8
  40ce10:	b.ge	40ce78 <argp_error@@Base+0x218>  // b.tcont
  40ce14:	nop
  40ce18:	sub	w10, w9, w8
  40ce1c:	sub	w2, w8, w7
  40ce20:	cmp	w10, w2
  40ce24:	b.le	40ce88 <argp_error@@Base+0x228>
  40ce28:	sxtw	x3, w7
  40ce2c:	sub	w9, w9, w2
  40ce30:	sub	w4, w2, #0x1
  40ce34:	mov	x5, x3
  40ce38:	add	x4, x4, x3
  40ce3c:	sxtw	x3, w9
  40ce40:	add	x2, x0, w7, sxtw #3
  40ce44:	sub	x3, x3, x5
  40ce48:	add	x4, x11, x4, lsl #3
  40ce4c:	nop
  40ce50:	ldr	x6, [x2, x3, lsl #3]
  40ce54:	ldr	x5, [x2]
  40ce58:	str	x6, [x2]
  40ce5c:	str	x5, [x2, x3, lsl #3]
  40ce60:	add	x2, x2, #0x8
  40ce64:	cmp	x4, x2
  40ce68:	b.ne	40ce50 <argp_error@@Base+0x1f0>  // b.any
  40ce6c:	cmp	w9, w8
  40ce70:	ccmp	w7, w8, #0x0, gt
  40ce74:	b.lt	40ce18 <argp_error@@Base+0x1b8>  // b.tstop
  40ce78:	sub	w0, w12, w8
  40ce7c:	add	w0, w0, w13
  40ce80:	stp	w0, w12, [x1, #48]
  40ce84:	ret
  40ce88:	sxtw	x3, w7
  40ce8c:	sub	w6, w10, #0x1
  40ce90:	add	x6, x6, x3
  40ce94:	add	x2, x0, w7, sxtw #3
  40ce98:	sub	x3, x14, x3
  40ce9c:	add	x6, x11, x6, lsl #3
  40cea0:	ldr	x5, [x2, x3, lsl #3]
  40cea4:	ldr	x4, [x2]
  40cea8:	str	x5, [x2]
  40ceac:	str	x4, [x2, x3, lsl #3]
  40ceb0:	add	x2, x2, #0x8
  40ceb4:	cmp	x2, x6
  40ceb8:	b.ne	40cea0 <argp_error@@Base+0x240>  // b.any
  40cebc:	add	w7, w7, w10
  40cec0:	cmp	w9, w8
  40cec4:	ccmp	w7, w8, #0x0, gt
  40cec8:	b.lt	40ce18 <argp_error@@Base+0x1b8>  // b.tstop
  40cecc:	b	40ce78 <argp_error@@Base+0x218>
  40ced0:	stp	x29, x30, [sp, #-160]!
  40ced4:	cmp	w0, #0x0
  40ced8:	mov	x29, sp
  40cedc:	stp	x19, x20, [sp, #16]
  40cee0:	mov	w19, w0
  40cee4:	ldr	w0, [x6, #4]
  40cee8:	stp	x23, x24, [sp, #48]
  40ceec:	str	x3, [sp, #96]
  40cef0:	stp	w0, w5, [sp, #112]
  40cef4:	str	x4, [sp, #128]
  40cef8:	b.le	40d6cc <argp_error@@Base+0xa6c>
  40cefc:	ldr	w0, [x6]
  40cf00:	mov	x20, x1
  40cf04:	str	xzr, [x6, #16]
  40cf08:	stp	x21, x22, [sp, #32]
  40cf0c:	mov	x22, x2
  40cf10:	stp	x27, x28, [sp, #80]
  40cf14:	mov	x28, x6
  40cf18:	cbnz	w0, 40d034 <argp_error@@Base+0x3d4>
  40cf1c:	mov	w1, #0x1                   	// #1
  40cf20:	mov	w0, w1
  40cf24:	str	w1, [x6]
  40cf28:	str	xzr, [x28, #32]
  40cf2c:	stp	w0, w0, [x28, #48]
  40cf30:	cbz	w7, 40d144 <argp_error@@Base+0x4e4>
  40cf34:	mov	w0, #0x1                   	// #1
  40cf38:	str	w0, [x28, #44]
  40cf3c:	mov	x4, #0x0                   	// #0
  40cf40:	ldrb	w0, [x22]
  40cf44:	cmp	w0, #0x2d
  40cf48:	b.eq	40d16c <argp_error@@Base+0x50c>  // b.none
  40cf4c:	cmp	w0, #0x2b
  40cf50:	b.eq	40d510 <argp_error@@Base+0x8b0>  // b.none
  40cf54:	str	wzr, [x28, #40]
  40cf58:	mov	w0, #0x1                   	// #1
  40cf5c:	str	w0, [x28, #24]
  40cf60:	ldrb	w0, [x22]
  40cf64:	cmp	w0, #0x3a
  40cf68:	ldr	w0, [sp, #112]
  40cf6c:	csel	w0, w0, wzr, ne  // ne = any
  40cf70:	str	w0, [sp, #112]
  40cf74:	cbz	x4, 40d070 <argp_error@@Base+0x410>
  40cf78:	ldrb	w0, [x4]
  40cf7c:	cbz	w0, 40d070 <argp_error@@Base+0x410>
  40cf80:	ldr	x0, [sp, #96]
  40cf84:	cbz	x0, 40cfc0 <argp_error@@Base+0x360>
  40cf88:	ldr	w21, [x28]
  40cf8c:	ldr	x0, [x20, w21, sxtw #3]
  40cf90:	ldrb	w1, [x0, #1]
  40cf94:	cmp	w1, #0x2d
  40cf98:	b.eq	40d388 <argp_error@@Base+0x728>  // b.none
  40cf9c:	ldr	w2, [sp, #116]
  40cfa0:	cbz	w2, 40cfc0 <argp_error@@Base+0x360>
  40cfa4:	ldrb	w0, [x0, #2]
  40cfa8:	cbnz	w0, 40d388 <argp_error@@Base+0x728>
  40cfac:	mov	x0, x22
  40cfb0:	str	x4, [sp, #104]
  40cfb4:	bl	401d70 <strchr@plt>
  40cfb8:	ldr	x4, [sp, #104]
  40cfbc:	cbz	x0, 40d388 <argp_error@@Base+0x728>
  40cfc0:	add	x21, x4, #0x1
  40cfc4:	str	x21, [x28, #32]
  40cfc8:	mov	x0, x22
  40cfcc:	str	x4, [sp, #104]
  40cfd0:	ldrb	w24, [x4]
  40cfd4:	mov	w1, w24
  40cfd8:	bl	401d70 <strchr@plt>
  40cfdc:	ldr	x4, [sp, #104]
  40cfe0:	mov	w23, w24
  40cfe4:	ldrb	w1, [x4, #1]
  40cfe8:	cbz	w1, 40d238 <argp_error@@Base+0x5d8>
  40cfec:	sub	w1, w24, #0x3a
  40cff0:	cmp	x0, #0x0
  40cff4:	and	w1, w1, #0xff
  40cff8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  40cffc:	b.ls	40d51c <argp_error@@Base+0x8bc>  // b.plast
  40d000:	ldrb	w2, [x0]
  40d004:	ldrb	w1, [x0, #1]
  40d008:	cmp	w2, #0x57
  40d00c:	b.eq	40d284 <argp_error@@Base+0x624>  // b.none
  40d010:	cmp	w1, #0x3a
  40d014:	b.eq	40d56c <argp_error@@Base+0x90c>  // b.none
  40d018:	mov	w0, w23
  40d01c:	ldp	x19, x20, [sp, #16]
  40d020:	ldp	x21, x22, [sp, #32]
  40d024:	ldp	x23, x24, [sp, #48]
  40d028:	ldp	x27, x28, [sp, #80]
  40d02c:	ldp	x29, x30, [sp], #160
  40d030:	ret
  40d034:	ldr	w1, [x6, #24]
  40d038:	cbz	w1, 40cf28 <argp_error@@Base+0x2c8>
  40d03c:	ldrb	w0, [x2]
  40d040:	mov	w1, #0xfd                  	// #253
  40d044:	ldr	x4, [x6, #32]
  40d048:	sub	w2, w0, #0x2b
  40d04c:	tst	w2, w1
  40d050:	b.ne	40cf64 <argp_error@@Base+0x304>  // b.any
  40d054:	ldrb	w0, [x22, #1]
  40d058:	add	x22, x22, #0x1
  40d05c:	cmp	w0, #0x3a
  40d060:	ldr	w0, [sp, #112]
  40d064:	csel	w0, w0, wzr, ne  // ne = any
  40d068:	str	w0, [sp, #112]
  40d06c:	cbnz	x4, 40cf78 <argp_error@@Base+0x318>
  40d070:	ldr	w0, [x28]
  40d074:	ldr	w1, [x28, #52]
  40d078:	cmp	w1, w0
  40d07c:	b.le	40d084 <argp_error@@Base+0x424>
  40d080:	str	w0, [x28, #52]
  40d084:	ldr	w1, [x28, #48]
  40d088:	cmp	w0, w1
  40d08c:	b.ge	40d094 <argp_error@@Base+0x434>  // b.tcont
  40d090:	str	w0, [x28, #48]
  40d094:	ldr	w1, [x28, #40]
  40d098:	cmp	w1, #0x1
  40d09c:	b.eq	40d19c <argp_error@@Base+0x53c>  // b.none
  40d0a0:	cmp	w19, w0
  40d0a4:	b.eq	40d17c <argp_error@@Base+0x51c>  // b.none
  40d0a8:	ldr	x4, [x20, w0, sxtw #3]
  40d0ac:	ldrb	w1, [x4]
  40d0b0:	cmp	w1, #0x2d
  40d0b4:	b.ne	40d104 <argp_error@@Base+0x4a4>  // b.any
  40d0b8:	ldrb	w1, [x4, #1]
  40d0bc:	cmp	w1, #0x2d
  40d0c0:	b.ne	40d104 <argp_error@@Base+0x4a4>  // b.any
  40d0c4:	ldrb	w1, [x4, #2]
  40d0c8:	cbnz	w1, 40d104 <argp_error@@Base+0x4a4>
  40d0cc:	ldp	w1, w2, [x28, #48]
  40d0d0:	add	w0, w0, #0x1
  40d0d4:	str	w0, [x28]
  40d0d8:	cmp	w1, w2
  40d0dc:	b.eq	40d6d4 <argp_error@@Base+0xa74>  // b.none
  40d0e0:	cmp	w0, w2
  40d0e4:	b.eq	40d0f8 <argp_error@@Base+0x498>  // b.none
  40d0e8:	mov	x1, x28
  40d0ec:	mov	x0, x20
  40d0f0:	bl	40cdf0 <argp_error@@Base+0x190>
  40d0f4:	ldr	w1, [x28, #48]
  40d0f8:	str	w19, [x28]
  40d0fc:	str	w19, [x28, #52]
  40d100:	b	40d180 <argp_error@@Base+0x520>
  40d104:	ldrb	w1, [x4]
  40d108:	cmp	w1, #0x2d
  40d10c:	b.eq	40d210 <argp_error@@Base+0x5b0>  // b.none
  40d110:	ldr	w1, [x28, #40]
  40d114:	cbz	w1, 40d6c4 <argp_error@@Base+0xa64>
  40d118:	add	w0, w0, #0x1
  40d11c:	mov	w23, #0x1                   	// #1
  40d120:	ldp	x21, x22, [sp, #32]
  40d124:	str	w0, [x28]
  40d128:	str	x4, [x28, #16]
  40d12c:	ldp	x27, x28, [sp, #80]
  40d130:	mov	w0, w23
  40d134:	ldp	x19, x20, [sp, #16]
  40d138:	ldp	x23, x24, [sp, #48]
  40d13c:	ldp	x29, x30, [sp], #160
  40d140:	ret
  40d144:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40d148:	add	x0, x0, #0xad8
  40d14c:	bl	401eb0 <getenv@plt>
  40d150:	cbz	x0, 40d25c <argp_error@@Base+0x5fc>
  40d154:	mov	w0, #0x1                   	// #1
  40d158:	str	w0, [x28, #44]
  40d15c:	ldr	x4, [x28, #32]
  40d160:	ldrb	w0, [x22]
  40d164:	cmp	w0, #0x2d
  40d168:	b.ne	40cf4c <argp_error@@Base+0x2ec>  // b.any
  40d16c:	mov	w0, #0x2                   	// #2
  40d170:	add	x22, x22, #0x1
  40d174:	str	w0, [x28, #40]
  40d178:	b	40cf58 <argp_error@@Base+0x2f8>
  40d17c:	ldp	w1, w19, [x28, #48]
  40d180:	cmp	w1, w19
  40d184:	b.eq	40d6c4 <argp_error@@Base+0xa64>  // b.none
  40d188:	mov	w23, #0xffffffff            	// #-1
  40d18c:	ldp	x21, x22, [sp, #32]
  40d190:	str	w1, [x28]
  40d194:	ldp	x27, x28, [sp, #80]
  40d198:	b	40d130 <argp_error@@Base+0x4d0>
  40d19c:	ldp	w2, w1, [x28, #48]
  40d1a0:	cmp	w2, w1
  40d1a4:	b.eq	40d248 <argp_error@@Base+0x5e8>  // b.none
  40d1a8:	cmp	w0, w1
  40d1ac:	b.eq	40d1c0 <argp_error@@Base+0x560>  // b.none
  40d1b0:	mov	x1, x28
  40d1b4:	mov	x0, x20
  40d1b8:	bl	40cdf0 <argp_error@@Base+0x190>
  40d1bc:	ldr	w1, [x28]
  40d1c0:	cmp	w19, w1
  40d1c4:	b.le	40d504 <argp_error@@Base+0x8a4>
  40d1c8:	sxtw	x0, w1
  40d1cc:	b	40d1e0 <argp_error@@Base+0x580>
  40d1d0:	add	w1, w4, #0x1
  40d1d4:	str	w1, [x28]
  40d1d8:	cmp	w19, w0
  40d1dc:	b.le	40d504 <argp_error@@Base+0x8a4>
  40d1e0:	ldr	x2, [x20, x0, lsl #3]
  40d1e4:	mov	w4, w0
  40d1e8:	mov	w1, w0
  40d1ec:	add	x0, x0, #0x1
  40d1f0:	ldrb	w3, [x2]
  40d1f4:	cmp	w3, #0x2d
  40d1f8:	b.ne	40d1d0 <argp_error@@Base+0x570>  // b.any
  40d1fc:	ldrb	w2, [x2, #1]
  40d200:	cbz	w2, 40d1d0 <argp_error@@Base+0x570>
  40d204:	ldr	w0, [x28]
  40d208:	str	w1, [x28, #52]
  40d20c:	b	40d0a0 <argp_error@@Base+0x440>
  40d210:	ldrb	w1, [x4, #1]
  40d214:	cbz	w1, 40d110 <argp_error@@Base+0x4b0>
  40d218:	ldr	x0, [sp, #96]
  40d21c:	cmp	w1, #0x2d
  40d220:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40d224:	cset	x0, ne  // ne = any
  40d228:	add	x0, x0, #0x1
  40d22c:	add	x4, x4, x0
  40d230:	str	x4, [x28, #32]
  40d234:	b	40cf80 <argp_error@@Base+0x320>
  40d238:	ldr	w1, [x28]
  40d23c:	add	w1, w1, #0x1
  40d240:	str	w1, [x28]
  40d244:	b	40cfec <argp_error@@Base+0x38c>
  40d248:	cmp	w0, w1
  40d24c:	b.eq	40d1c0 <argp_error@@Base+0x560>  // b.none
  40d250:	mov	w1, w0
  40d254:	str	w0, [x28, #48]
  40d258:	b	40d1c0 <argp_error@@Base+0x560>
  40d25c:	str	wzr, [x28, #44]
  40d260:	ldr	x4, [x28, #32]
  40d264:	ldrb	w0, [x22]
  40d268:	cmp	w0, #0x2d
  40d26c:	b.eq	40d16c <argp_error@@Base+0x50c>  // b.none
  40d270:	cmp	w0, #0x2b
  40d274:	b.eq	40d510 <argp_error@@Base+0x8b0>  // b.none
  40d278:	mov	w0, #0x1                   	// #1
  40d27c:	str	w0, [x28, #40]
  40d280:	b	40cf58 <argp_error@@Base+0x2f8>
  40d284:	cmp	w1, #0x3b
  40d288:	b.ne	40d010 <argp_error@@Base+0x3b0>  // b.any
  40d28c:	ldr	x0, [sp, #96]
  40d290:	cbz	x0, 40da58 <argp_error@@Base+0xdf8>
  40d294:	ldrb	w1, [x4, #1]
  40d298:	ldr	w0, [x28]
  40d29c:	cbnz	w1, 40d2ac <argp_error@@Base+0x64c>
  40d2a0:	cmp	w19, w0
  40d2a4:	b.eq	40da98 <argp_error@@Base+0xe38>  // b.none
  40d2a8:	ldr	x21, [x20, w0, sxtw #3]
  40d2ac:	add	w0, w0, #0x1
  40d2b0:	str	w0, [x28]
  40d2b4:	str	x21, [x28, #16]
  40d2b8:	str	x21, [x28, #32]
  40d2bc:	str	x21, [sp, #104]
  40d2c0:	ldrb	w23, [x21]
  40d2c4:	cmp	w23, #0x3d
  40d2c8:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  40d2cc:	b.eq	40d2e8 <argp_error@@Base+0x688>  // b.none
  40d2d0:	ldr	x0, [sp, #104]
  40d2d4:	ldrb	w23, [x0, #1]!
  40d2d8:	str	x0, [sp, #104]
  40d2dc:	cmp	w23, #0x3d
  40d2e0:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  40d2e4:	b.ne	40d2d0 <argp_error@@Base+0x670>  // b.any
  40d2e8:	ldr	x0, [sp, #96]
  40d2ec:	ldr	x27, [x0]
  40d2f0:	cbz	x27, 40da58 <argp_error@@Base+0xdf8>
  40d2f4:	ldr	x0, [sp, #104]
  40d2f8:	mov	w24, #0x0                   	// #0
  40d2fc:	stp	x25, x26, [sp, #64]
  40d300:	mov	x26, #0x0                   	// #0
  40d304:	sub	x25, x0, x21
  40d308:	sub	w0, w0, w21
  40d30c:	str	x0, [sp, #120]
  40d310:	stp	wzr, wzr, [sp, #136]
  40d314:	b	40d350 <argp_error@@Base+0x6f0>
  40d318:	ldr	w0, [sp, #116]
  40d31c:	cbnz	w0, 40d334 <argp_error@@Base+0x6d4>
  40d320:	ldr	x0, [sp, #96]
  40d324:	ldr	w1, [x26, #8]
  40d328:	ldr	w0, [x0, #8]
  40d32c:	cmp	w1, w0
  40d330:	b.eq	40d7fc <argp_error@@Base+0xb9c>  // b.none
  40d334:	mov	w0, #0x1                   	// #1
  40d338:	str	w0, [sp, #136]
  40d33c:	ldr	x0, [sp, #96]
  40d340:	add	w24, w24, #0x1
  40d344:	ldr	x27, [x0, #32]!
  40d348:	str	x0, [sp, #96]
  40d34c:	cbz	x27, 40d700 <argp_error@@Base+0xaa0>
  40d350:	mov	x2, x25
  40d354:	mov	x1, x21
  40d358:	mov	x0, x27
  40d35c:	bl	401c00 <strncmp@plt>
  40d360:	cbnz	w0, 40d33c <argp_error@@Base+0x6dc>
  40d364:	mov	x0, x27
  40d368:	bl	401b00 <strlen@plt>
  40d36c:	ldr	x1, [sp, #120]
  40d370:	cmp	x1, x0
  40d374:	b.eq	40d8d8 <argp_error@@Base+0xc78>  // b.none
  40d378:	cbnz	x26, 40d318 <argp_error@@Base+0x6b8>
  40d37c:	str	w24, [sp, #140]
  40d380:	ldr	x26, [sp, #96]
  40d384:	b	40d33c <argp_error@@Base+0x6dc>
  40d388:	stp	x25, x26, [sp, #64]
  40d38c:	mov	x25, x4
  40d390:	ldrb	w0, [x4]
  40d394:	cmp	w0, #0x3d
  40d398:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d39c:	b.eq	40d77c <argp_error@@Base+0xb1c>  // b.none
  40d3a0:	ldrb	w0, [x25, #1]!
  40d3a4:	cmp	w0, #0x3d
  40d3a8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d3ac:	b.ne	40d3a0 <argp_error@@Base+0x740>  // b.any
  40d3b0:	sub	x27, x25, x4
  40d3b4:	str	w27, [sp, #120]
  40d3b8:	ldr	x23, [sp, #96]
  40d3bc:	ldr	x26, [x23]
  40d3c0:	cbz	x26, 40d5fc <argp_error@@Base+0x99c>
  40d3c4:	mov	w0, #0xffffffff            	// #-1
  40d3c8:	and	x27, x27, #0xffffffff
  40d3cc:	mov	w24, #0x0                   	// #0
  40d3d0:	mov	x21, #0x0                   	// #0
  40d3d4:	str	xzr, [sp, #104]
  40d3d8:	stp	wzr, w0, [sp, #136]
  40d3dc:	b	40d428 <argp_error@@Base+0x7c8>
  40d3e0:	ldr	w1, [sp, #136]
  40d3e4:	cbnz	w1, 40d418 <argp_error@@Base+0x7b8>
  40d3e8:	ldr	w1, [sp, #116]
  40d3ec:	cbnz	w1, 40d400 <argp_error@@Base+0x7a0>
  40d3f0:	ldr	w1, [x0, #8]
  40d3f4:	ldr	w0, [x23, #8]
  40d3f8:	cmp	w1, w0
  40d3fc:	b.eq	40d538 <argp_error@@Base+0x8d8>  // b.none
  40d400:	mov	x0, #0x10                  	// #16
  40d404:	bl	401be0 <malloc@plt>
  40d408:	cbz	x0, 40dbfc <argp_error@@Base+0xf9c>
  40d40c:	stp	x23, x21, [x0]
  40d410:	mov	x21, x0
  40d414:	nop
  40d418:	add	w24, w24, #0x1
  40d41c:	ldr	x26, [x23, #32]!
  40d420:	cbz	x26, 40d470 <argp_error@@Base+0x810>
  40d424:	ldr	x4, [x28, #32]
  40d428:	mov	x1, x4
  40d42c:	mov	x2, x27
  40d430:	mov	x0, x26
  40d434:	bl	401c00 <strncmp@plt>
  40d438:	cbnz	w0, 40d418 <argp_error@@Base+0x7b8>
  40d43c:	mov	x0, x26
  40d440:	bl	401b00 <strlen@plt>
  40d444:	ldr	w1, [sp, #120]
  40d448:	cmp	w1, w0
  40d44c:	b.eq	40d5a0 <argp_error@@Base+0x940>  // b.none
  40d450:	ldr	x0, [sp, #104]
  40d454:	cbnz	x0, 40d3e0 <argp_error@@Base+0x780>
  40d458:	str	x23, [sp, #104]
  40d45c:	ldr	x26, [x23, #32]!
  40d460:	str	w24, [sp, #140]
  40d464:	add	w24, w24, #0x1
  40d468:	cbnz	x26, 40d424 <argp_error@@Base+0x7c4>
  40d46c:	nop
  40d470:	ldr	w0, [sp, #136]
  40d474:	cmp	x21, #0x0
  40d478:	cset	w1, ne  // ne = any
  40d47c:	cmp	w0, #0x0
  40d480:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  40d484:	b.ne	40d788 <argp_error@@Base+0xb28>  // b.any
  40d488:	ldr	x0, [sp, #104]
  40d48c:	ldr	w21, [x28]
  40d490:	cbz	x0, 40d5fc <argp_error@@Base+0x99c>
  40d494:	ldr	x1, [sp, #104]
  40d498:	add	w0, w21, #0x1
  40d49c:	ldr	w1, [x1, #8]
  40d4a0:	str	w0, [x28]
  40d4a4:	ldrb	w2, [x25]
  40d4a8:	cbz	w2, 40d5d8 <argp_error@@Base+0x978>
  40d4ac:	cbz	w1, 40d650 <argp_error@@Base+0x9f0>
  40d4b0:	add	x25, x25, #0x1
  40d4b4:	str	x25, [x28, #16]
  40d4b8:	ldr	x19, [x28, #32]
  40d4bc:	mov	x0, x19
  40d4c0:	bl	401b00 <strlen@plt>
  40d4c4:	add	x19, x19, x0
  40d4c8:	str	x19, [x28, #32]
  40d4cc:	ldr	x0, [sp, #128]
  40d4d0:	cbz	x0, 40d4dc <argp_error@@Base+0x87c>
  40d4d4:	ldr	w1, [sp, #140]
  40d4d8:	str	w1, [x0]
  40d4dc:	ldr	x1, [sp, #104]
  40d4e0:	ldr	x0, [x1, #16]
  40d4e4:	ldr	w23, [x1, #24]
  40d4e8:	cbz	x0, 40d750 <argp_error@@Base+0xaf0>
  40d4ec:	ldp	x21, x22, [sp, #32]
  40d4f0:	ldp	x25, x26, [sp, #64]
  40d4f4:	ldp	x27, x28, [sp, #80]
  40d4f8:	str	w23, [x0]
  40d4fc:	mov	w23, #0x0                   	// #0
  40d500:	b	40d130 <argp_error@@Base+0x4d0>
  40d504:	mov	w0, w1
  40d508:	str	w1, [x28, #52]
  40d50c:	b	40d0a0 <argp_error@@Base+0x440>
  40d510:	add	x22, x22, #0x1
  40d514:	str	wzr, [x28, #40]
  40d518:	b	40cf58 <argp_error@@Base+0x2f8>
  40d51c:	ldr	w0, [sp, #112]
  40d520:	cbnz	w0, 40d6e0 <argp_error@@Base+0xa80>
  40d524:	mov	w23, #0x3f                  	// #63
  40d528:	ldp	x21, x22, [sp, #32]
  40d52c:	str	w24, [x28, #8]
  40d530:	ldp	x27, x28, [sp, #80]
  40d534:	b	40d130 <argp_error@@Base+0x4d0>
  40d538:	ldr	x0, [sp, #104]
  40d53c:	ldr	x1, [x0, #16]
  40d540:	ldr	x0, [x23, #16]
  40d544:	cmp	x1, x0
  40d548:	b.ne	40d400 <argp_error@@Base+0x7a0>  // b.any
  40d54c:	ldr	x0, [sp, #104]
  40d550:	ldr	w1, [x0, #24]
  40d554:	ldr	w0, [x23, #24]
  40d558:	cmp	w1, w0
  40d55c:	b.ne	40d400 <argp_error@@Base+0x7a0>  // b.any
  40d560:	ldr	w0, [sp, #116]
  40d564:	str	w0, [sp, #136]
  40d568:	b	40d418 <argp_error@@Base+0x7b8>
  40d56c:	ldrb	w0, [x0, #2]
  40d570:	ldrb	w1, [x4, #1]
  40d574:	cmp	w0, #0x3a
  40d578:	b.eq	40d638 <argp_error@@Base+0x9d8>  // b.none
  40d57c:	ldr	w0, [x28]
  40d580:	cbz	w1, 40d760 <argp_error@@Base+0xb00>
  40d584:	add	w0, w0, #0x1
  40d588:	str	w0, [x28]
  40d58c:	str	x21, [x28, #16]
  40d590:	ldp	x21, x22, [sp, #32]
  40d594:	str	xzr, [x28, #32]
  40d598:	ldp	x27, x28, [sp, #80]
  40d59c:	b	40d130 <argp_error@@Base+0x4d0>
  40d5a0:	ldr	w0, [sp, #136]
  40d5a4:	cmp	w0, #0x0
  40d5a8:	ccmp	x21, #0x0, #0x0, eq  // eq = none
  40d5ac:	b.eq	40d5c8 <argp_error@@Base+0x968>  // b.none
  40d5b0:	cbz	x21, 40d5c8 <argp_error@@Base+0x968>
  40d5b4:	nop
  40d5b8:	mov	x0, x21
  40d5bc:	ldr	x21, [x21, #8]
  40d5c0:	bl	401d30 <free@plt>
  40d5c4:	cbnz	x21, 40d5b8 <argp_error@@Base+0x958>
  40d5c8:	ldr	w21, [x28]
  40d5cc:	str	x23, [sp, #104]
  40d5d0:	str	w24, [sp, #140]
  40d5d4:	b	40d494 <argp_error@@Base+0x834>
  40d5d8:	cmp	w1, #0x1
  40d5dc:	b.ne	40d4b8 <argp_error@@Base+0x858>  // b.any
  40d5e0:	cmp	w0, w19
  40d5e4:	b.ge	40d8e4 <argp_error@@Base+0xc84>  // b.tcont
  40d5e8:	ldr	x0, [x20, w0, sxtw #3]
  40d5ec:	add	w21, w21, #0x2
  40d5f0:	str	w21, [x28]
  40d5f4:	str	x0, [x28, #16]
  40d5f8:	b	40d4b8 <argp_error@@Base+0x858>
  40d5fc:	ldr	w0, [sp, #116]
  40d600:	cbz	w0, 40d838 <argp_error@@Base+0xbd8>
  40d604:	ldr	x23, [x20, w21, sxtw #3]
  40d608:	ldrb	w0, [x23, #1]
  40d60c:	cmp	w0, #0x2d
  40d610:	b.eq	40da04 <argp_error@@Base+0xda4>  // b.none
  40d614:	ldr	x4, [x28, #32]
  40d618:	mov	x0, x22
  40d61c:	str	x4, [sp, #104]
  40d620:	ldrb	w1, [x4]
  40d624:	bl	401d70 <strchr@plt>
  40d628:	ldr	x4, [sp, #104]
  40d62c:	cbz	x0, 40da6c <argp_error@@Base+0xe0c>
  40d630:	ldp	x25, x26, [sp, #64]
  40d634:	b	40cfc0 <argp_error@@Base+0x360>
  40d638:	cbz	w1, 40d830 <argp_error@@Base+0xbd0>
  40d63c:	ldr	w0, [x28]
  40d640:	str	x21, [x28, #16]
  40d644:	add	w0, w0, #0x1
  40d648:	str	w0, [x28]
  40d64c:	b	40d590 <argp_error@@Base+0x930>
  40d650:	ldr	w1, [sp, #112]
  40d654:	cbz	w1, 40d690 <argp_error@@Base+0xa30>
  40d658:	add	x0, x20, w0, sxtw #3
  40d65c:	adrp	x3, 427000 <argp_error@@Base+0x1a3a0>
  40d660:	ldr	x4, [sp, #104]
  40d664:	ldur	x1, [x0, #-8]
  40d668:	ldr	x0, [x3, #1248]
  40d66c:	ldrb	w3, [x1, #1]
  40d670:	ldr	x2, [x20]
  40d674:	cmp	w3, #0x2d
  40d678:	ldr	x4, [x4]
  40d67c:	b.eq	40db08 <argp_error@@Base+0xea8>  // b.none
  40d680:	ldrb	w3, [x1]
  40d684:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40d688:	add	x1, x1, #0xb70
  40d68c:	bl	401ed0 <fprintf@plt>
  40d690:	ldr	x19, [x28, #32]
  40d694:	mov	w23, #0x3f                  	// #63
  40d698:	mov	x0, x19
  40d69c:	bl	401b00 <strlen@plt>
  40d6a0:	ldr	x1, [sp, #104]
  40d6a4:	add	x19, x19, x0
  40d6a8:	ldp	x21, x22, [sp, #32]
  40d6ac:	ldr	w1, [x1, #24]
  40d6b0:	ldp	x25, x26, [sp, #64]
  40d6b4:	str	w1, [x28, #8]
  40d6b8:	str	x19, [x28, #32]
  40d6bc:	ldp	x27, x28, [sp, #80]
  40d6c0:	b	40d130 <argp_error@@Base+0x4d0>
  40d6c4:	ldp	x21, x22, [sp, #32]
  40d6c8:	ldp	x27, x28, [sp, #80]
  40d6cc:	mov	w23, #0xffffffff            	// #-1
  40d6d0:	b	40d130 <argp_error@@Base+0x4d0>
  40d6d4:	mov	w1, w0
  40d6d8:	str	w0, [x28, #48]
  40d6dc:	b	40d0f8 <argp_error@@Base+0x498>
  40d6e0:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40d6e4:	mov	w3, w24
  40d6e8:	ldr	x2, [x20]
  40d6ec:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40d6f0:	ldr	x0, [x0, #1248]
  40d6f4:	add	x1, x1, #0xc08
  40d6f8:	bl	401ed0 <fprintf@plt>
  40d6fc:	b	40d524 <argp_error@@Base+0x8c4>
  40d700:	ldr	w0, [sp, #136]
  40d704:	cbnz	w0, 40d9cc <argp_error@@Base+0xd6c>
  40d708:	cbz	x26, 40da54 <argp_error@@Base+0xdf4>
  40d70c:	ldr	w0, [x26, #8]
  40d710:	cbz	w23, 40d8a4 <argp_error@@Base+0xc44>
  40d714:	cbz	w0, 40db40 <argp_error@@Base+0xee0>
  40d718:	ldr	x0, [sp, #104]
  40d71c:	add	x27, x0, #0x1
  40d720:	str	x27, [x28, #16]
  40d724:	mov	x0, x21
  40d728:	bl	401b00 <strlen@plt>
  40d72c:	add	x21, x21, x0
  40d730:	str	x21, [x28, #32]
  40d734:	ldr	x0, [sp, #128]
  40d738:	cbz	x0, 40d744 <argp_error@@Base+0xae4>
  40d73c:	ldr	w1, [sp, #140]
  40d740:	str	w1, [x0]
  40d744:	ldr	x0, [x26, #16]
  40d748:	ldr	w23, [x26, #24]
  40d74c:	cbnz	x0, 40d4ec <argp_error@@Base+0x88c>
  40d750:	ldp	x21, x22, [sp, #32]
  40d754:	ldp	x25, x26, [sp, #64]
  40d758:	ldp	x27, x28, [sp, #80]
  40d75c:	b	40d130 <argp_error@@Base+0x4d0>
  40d760:	cmp	w19, w0
  40d764:	b.eq	40d8b4 <argp_error@@Base+0xc54>  // b.none
  40d768:	ldr	x1, [x20, w0, sxtw #3]
  40d76c:	add	w0, w0, #0x1
  40d770:	str	w0, [x28]
  40d774:	str	x1, [x28, #16]
  40d778:	b	40d590 <argp_error@@Base+0x930>
  40d77c:	mov	x27, #0x0                   	// #0
  40d780:	str	wzr, [sp, #120]
  40d784:	b	40d3b8 <argp_error@@Base+0x758>
  40d788:	ldr	w2, [sp, #112]
  40d78c:	cmp	w2, #0x0
  40d790:	cset	w2, ne  // ne = any
  40d794:	cmp	w2, #0x0
  40d798:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40d79c:	b.ne	40d92c <argp_error@@Base+0xccc>  // b.any
  40d7a0:	cmp	w2, #0x0
  40d7a4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d7a8:	b.ne	40da30 <argp_error@@Base+0xdd0>  // b.any
  40d7ac:	ldr	x19, [x28, #32]
  40d7b0:	mov	x0, x19
  40d7b4:	bl	401b00 <strlen@plt>
  40d7b8:	ldr	w1, [x28]
  40d7bc:	add	x19, x19, x0
  40d7c0:	str	wzr, [x28, #8]
  40d7c4:	add	w1, w1, #0x1
  40d7c8:	str	w1, [x28]
  40d7cc:	str	x19, [x28, #32]
  40d7d0:	cbz	x21, 40d7e8 <argp_error@@Base+0xb88>
  40d7d4:	nop
  40d7d8:	mov	x0, x21
  40d7dc:	ldr	x21, [x21, #8]
  40d7e0:	bl	401d30 <free@plt>
  40d7e4:	cbnz	x21, 40d7d8 <argp_error@@Base+0xb78>
  40d7e8:	mov	w23, #0x3f                  	// #63
  40d7ec:	ldp	x21, x22, [sp, #32]
  40d7f0:	ldp	x25, x26, [sp, #64]
  40d7f4:	ldp	x27, x28, [sp, #80]
  40d7f8:	b	40d130 <argp_error@@Base+0x4d0>
  40d7fc:	ldr	x0, [sp, #96]
  40d800:	ldr	x1, [x26, #16]
  40d804:	ldr	x0, [x0, #16]
  40d808:	cmp	x1, x0
  40d80c:	b.ne	40d334 <argp_error@@Base+0x6d4>  // b.any
  40d810:	ldr	x0, [sp, #96]
  40d814:	ldr	w1, [x26, #24]
  40d818:	ldr	w0, [x0, #24]
  40d81c:	cmp	w1, w0
  40d820:	ldr	w0, [sp, #136]
  40d824:	csinc	w0, w0, wzr, eq  // eq = none
  40d828:	str	w0, [sp, #136]
  40d82c:	b	40d33c <argp_error@@Base+0x6dc>
  40d830:	str	xzr, [x28, #16]
  40d834:	b	40d590 <argp_error@@Base+0x930>
  40d838:	ldr	w0, [sp, #112]
  40d83c:	cbz	w0, 40d878 <argp_error@@Base+0xc18>
  40d840:	ldr	x23, [x20, w21, sxtw #3]
  40d844:	ldr	x3, [x28, #32]
  40d848:	ldrb	w0, [x23, #1]
  40d84c:	mov	x4, x3
  40d850:	cmp	w0, #0x2d
  40d854:	b.eq	40da10 <argp_error@@Base+0xdb0>  // b.none
  40d858:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40d85c:	ldrb	w3, [x23]
  40d860:	ldr	x2, [x20]
  40d864:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40d868:	ldr	x0, [x0, #1248]
  40d86c:	add	x1, x1, #0xbe8
  40d870:	bl	401ed0 <fprintf@plt>
  40d874:	ldr	w21, [x28]
  40d878:	add	w21, w21, #0x1
  40d87c:	adrp	x0, 411000 <argp_error@@Base+0x43a0>
  40d880:	mov	w23, #0x3f                  	// #63
  40d884:	add	x0, x0, #0xc50
  40d888:	ldp	x25, x26, [sp, #64]
  40d88c:	str	w21, [x28]
  40d890:	str	wzr, [x28, #8]
  40d894:	str	x0, [x28, #32]
  40d898:	ldp	x21, x22, [sp, #32]
  40d89c:	ldp	x27, x28, [sp, #80]
  40d8a0:	b	40d130 <argp_error@@Base+0x4d0>
  40d8a4:	cmp	w0, #0x1
  40d8a8:	b.eq	40dac4 <argp_error@@Base+0xe64>  // b.none
  40d8ac:	str	xzr, [x28, #16]
  40d8b0:	b	40d724 <argp_error@@Base+0xac4>
  40d8b4:	ldr	w0, [sp, #112]
  40d8b8:	cbnz	w0, 40da78 <argp_error@@Base+0xe18>
  40d8bc:	str	w24, [x28, #8]
  40d8c0:	mov	w23, #0x3a                  	// #58
  40d8c4:	mov	w0, #0x3f                  	// #63
  40d8c8:	ldrb	w1, [x22]
  40d8cc:	cmp	w1, w23
  40d8d0:	csel	w23, w23, w0, eq  // eq = none
  40d8d4:	b	40d590 <argp_error@@Base+0x930>
  40d8d8:	str	w24, [sp, #140]
  40d8dc:	ldr	x26, [sp, #96]
  40d8e0:	b	40d70c <argp_error@@Base+0xaac>
  40d8e4:	ldr	w0, [sp, #112]
  40d8e8:	cbnz	w0, 40dae4 <argp_error@@Base+0xe84>
  40d8ec:	ldr	x19, [x28, #32]
  40d8f0:	mov	x0, x19
  40d8f4:	bl	401b00 <strlen@plt>
  40d8f8:	ldr	x1, [sp, #104]
  40d8fc:	add	x19, x19, x0
  40d900:	ldr	w1, [x1, #24]
  40d904:	str	w1, [x28, #8]
  40d908:	str	x19, [x28, #32]
  40d90c:	ldrb	w0, [x22]
  40d910:	cmp	w0, #0x3a
  40d914:	b.ne	40d7e8 <argp_error@@Base+0xb88>  // b.any
  40d918:	mov	w23, #0x3a                  	// #58
  40d91c:	ldp	x21, x22, [sp, #32]
  40d920:	ldp	x25, x26, [sp, #64]
  40d924:	ldp	x27, x28, [sp, #80]
  40d928:	b	40d130 <argp_error@@Base+0x4d0>
  40d92c:	ldrsw	x3, [x28]
  40d930:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40d934:	add	x22, x0, #0x4e0
  40d938:	add	x19, sp, #0x90
  40d93c:	ldr	x0, [x0, #1248]
  40d940:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40d944:	ldr	x3, [x20, x3, lsl #3]
  40d948:	add	x1, x1, #0xae8
  40d94c:	ldr	x2, [x20]
  40d950:	adrp	x20, 411000 <argp_error@@Base+0x43a0>
  40d954:	add	x20, x20, #0xb18
  40d958:	str	x21, [sp, #152]
  40d95c:	bl	401ed0 <fprintf@plt>
  40d960:	b	40d96c <argp_error@@Base+0xd0c>
  40d964:	ldr	x0, [x19]
  40d968:	str	x0, [sp, #104]
  40d96c:	ldr	x0, [sp, #104]
  40d970:	mov	x1, x20
  40d974:	ldr	x2, [x0]
  40d978:	ldr	x0, [x22]
  40d97c:	bl	401ed0 <fprintf@plt>
  40d980:	ldr	x19, [x19, #8]
  40d984:	cbnz	x19, 40d964 <argp_error@@Base+0xd04>
  40d988:	ldr	x1, [x22]
  40d98c:	mov	w0, #0xa                   	// #10
  40d990:	bl	401b70 <fputc@plt>
  40d994:	ldr	x19, [x28, #32]
  40d998:	mov	w23, #0x3f                  	// #63
  40d99c:	mov	x0, x19
  40d9a0:	bl	401b00 <strlen@plt>
  40d9a4:	ldr	w1, [x28]
  40d9a8:	add	x19, x19, x0
  40d9ac:	ldp	x21, x22, [sp, #32]
  40d9b0:	add	w1, w1, #0x1
  40d9b4:	ldp	x25, x26, [sp, #64]
  40d9b8:	str	w1, [x28]
  40d9bc:	str	wzr, [x28, #8]
  40d9c0:	str	x19, [x28, #32]
  40d9c4:	ldp	x27, x28, [sp, #80]
  40d9c8:	b	40d130 <argp_error@@Base+0x4d0>
  40d9cc:	ldr	w0, [sp, #112]
  40d9d0:	cbnz	w0, 40db1c <argp_error@@Base+0xebc>
  40d9d4:	mov	x0, x21
  40d9d8:	bl	401b00 <strlen@plt>
  40d9dc:	ldr	w1, [x28]
  40d9e0:	add	x21, x21, x0
  40d9e4:	mov	w23, #0x3f                  	// #63
  40d9e8:	add	w1, w1, #0x1
  40d9ec:	ldp	x25, x26, [sp, #64]
  40d9f0:	str	w1, [x28]
  40d9f4:	str	x21, [x28, #32]
  40d9f8:	ldp	x21, x22, [sp, #32]
  40d9fc:	ldp	x27, x28, [sp, #80]
  40da00:	b	40d130 <argp_error@@Base+0x4d0>
  40da04:	ldr	w0, [sp, #112]
  40da08:	cbz	w0, 40d878 <argp_error@@Base+0xc18>
  40da0c:	ldr	x3, [x28, #32]
  40da10:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40da14:	ldr	x2, [x20]
  40da18:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40da1c:	ldr	x0, [x0, #1248]
  40da20:	add	x1, x1, #0xbc8
  40da24:	bl	401ed0 <fprintf@plt>
  40da28:	ldr	w21, [x28]
  40da2c:	b	40d878 <argp_error@@Base+0xc18>
  40da30:	ldrsw	x3, [x28]
  40da34:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40da38:	ldr	x2, [x20]
  40da3c:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40da40:	ldr	x0, [x0, #1248]
  40da44:	add	x1, x1, #0xb20
  40da48:	ldr	x3, [x20, x3, lsl #3]
  40da4c:	bl	401ed0 <fprintf@plt>
  40da50:	b	40d994 <argp_error@@Base+0xd34>
  40da54:	ldp	x25, x26, [sp, #64]
  40da58:	mov	w23, #0x57                  	// #87
  40da5c:	ldp	x21, x22, [sp, #32]
  40da60:	str	xzr, [x28, #32]
  40da64:	ldp	x27, x28, [sp, #80]
  40da68:	b	40d130 <argp_error@@Base+0x4d0>
  40da6c:	ldr	w0, [sp, #112]
  40da70:	cbnz	w0, 40d858 <argp_error@@Base+0xbf8>
  40da74:	b	40d878 <argp_error@@Base+0xc18>
  40da78:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40da7c:	mov	w3, w24
  40da80:	ldr	x2, [x20]
  40da84:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40da88:	ldr	x0, [x0, #1248]
  40da8c:	add	x1, x1, #0xc28
  40da90:	bl	401ed0 <fprintf@plt>
  40da94:	b	40d8bc <argp_error@@Base+0xc5c>
  40da98:	ldr	w0, [sp, #112]
  40da9c:	cbnz	w0, 40db98 <argp_error@@Base+0xf38>
  40daa0:	str	w24, [x28, #8]
  40daa4:	mov	w23, #0x3a                  	// #58
  40daa8:	mov	w0, #0x3f                  	// #63
  40daac:	ldrb	w1, [x22]
  40dab0:	ldp	x21, x22, [sp, #32]
  40dab4:	cmp	w1, w23
  40dab8:	csel	w23, w23, w0, eq  // eq = none
  40dabc:	ldp	x27, x28, [sp, #80]
  40dac0:	b	40d130 <argp_error@@Base+0x4d0>
  40dac4:	ldr	w0, [x28]
  40dac8:	cmp	w0, w19
  40dacc:	b.ge	40db6c <argp_error@@Base+0xf0c>  // b.tcont
  40dad0:	ldr	x1, [x20, w0, sxtw #3]
  40dad4:	add	w0, w0, #0x1
  40dad8:	str	w0, [x28]
  40dadc:	str	x1, [x28, #16]
  40dae0:	b	40d724 <argp_error@@Base+0xac4>
  40dae4:	ldr	x3, [sp, #104]
  40dae8:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40daec:	ldr	x2, [x20]
  40daf0:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40daf4:	ldr	x0, [x0, #1248]
  40daf8:	add	x1, x1, #0xba0
  40dafc:	ldr	x3, [x3]
  40db00:	bl	401ed0 <fprintf@plt>
  40db04:	b	40d8ec <argp_error@@Base+0xc8c>
  40db08:	mov	x3, x4
  40db0c:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40db10:	add	x1, x1, #0xb40
  40db14:	bl	401ed0 <fprintf@plt>
  40db18:	b	40d690 <argp_error@@Base+0xa30>
  40db1c:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40db20:	mov	x3, x21
  40db24:	ldr	x2, [x20]
  40db28:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40db2c:	ldr	x0, [x0, #1248]
  40db30:	add	x1, x1, #0xc58
  40db34:	bl	401ed0 <fprintf@plt>
  40db38:	ldr	x21, [x28, #32]
  40db3c:	b	40d9d4 <argp_error@@Base+0xd74>
  40db40:	ldr	w0, [sp, #112]
  40db44:	cbnz	w0, 40dbb8 <argp_error@@Base+0xf58>
  40db48:	mov	x0, x21
  40db4c:	bl	401b00 <strlen@plt>
  40db50:	add	x21, x21, x0
  40db54:	mov	w23, #0x3f                  	// #63
  40db58:	ldp	x25, x26, [sp, #64]
  40db5c:	str	x21, [x28, #32]
  40db60:	ldp	x21, x22, [sp, #32]
  40db64:	ldp	x27, x28, [sp, #80]
  40db68:	b	40d130 <argp_error@@Base+0x4d0>
  40db6c:	ldr	w0, [sp, #112]
  40db70:	cbnz	w0, 40dbdc <argp_error@@Base+0xf7c>
  40db74:	ldr	x19, [x28, #32]
  40db78:	mov	x0, x19
  40db7c:	bl	401b00 <strlen@plt>
  40db80:	add	x19, x19, x0
  40db84:	str	x19, [x28, #32]
  40db88:	ldrb	w0, [x22]
  40db8c:	cmp	w0, #0x3a
  40db90:	b.ne	40d7e8 <argp_error@@Base+0xb88>  // b.any
  40db94:	b	40d918 <argp_error@@Base+0xcb8>
  40db98:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40db9c:	mov	w3, w24
  40dba0:	ldr	x2, [x20]
  40dba4:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40dba8:	ldr	x0, [x0, #1248]
  40dbac:	add	x1, x1, #0xc28
  40dbb0:	bl	401ed0 <fprintf@plt>
  40dbb4:	b	40daa0 <argp_error@@Base+0xe40>
  40dbb8:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40dbbc:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40dbc0:	ldr	x2, [x20]
  40dbc4:	add	x1, x1, #0xc80
  40dbc8:	ldr	x0, [x0, #1248]
  40dbcc:	ldr	x3, [x26]
  40dbd0:	bl	401ed0 <fprintf@plt>
  40dbd4:	ldr	x21, [x28, #32]
  40dbd8:	b	40db48 <argp_error@@Base+0xee8>
  40dbdc:	adrp	x0, 427000 <argp_error@@Base+0x1a3a0>
  40dbe0:	adrp	x1, 411000 <argp_error@@Base+0x43a0>
  40dbe4:	ldr	x2, [x20]
  40dbe8:	add	x1, x1, #0xcb0
  40dbec:	ldr	x0, [x0, #1248]
  40dbf0:	ldr	x3, [x26]
  40dbf4:	bl	401ed0 <fprintf@plt>
  40dbf8:	b	40db74 <argp_error@@Base+0xf14>
  40dbfc:	cbz	x21, 40dc24 <argp_error@@Base+0xfc4>
  40dc00:	ldr	x26, [x21, #8]
  40dc04:	mov	x0, x21
  40dc08:	bl	401d30 <free@plt>
  40dc0c:	mov	x21, x26
  40dc10:	cbnz	x26, 40dc00 <argp_error@@Base+0xfa0>
  40dc14:	mov	w0, #0x1                   	// #1
  40dc18:	mov	x21, #0x0                   	// #0
  40dc1c:	str	w0, [sp, #136]
  40dc20:	b	40d418 <argp_error@@Base+0x7b8>
  40dc24:	mov	w0, #0x1                   	// #1
  40dc28:	str	w0, [sp, #136]
  40dc2c:	b	40d418 <argp_error@@Base+0x7b8>
  40dc30:	stp	x29, x30, [sp, #-48]!
  40dc34:	mov	w7, w6
  40dc38:	mov	x29, sp
  40dc3c:	stp	x19, x20, [sp, #16]
  40dc40:	adrp	x20, 427000 <argp_error@@Base+0x1a3a0>
  40dc44:	stp	x21, x22, [sp, #32]
  40dc48:	add	x22, x20, #0x4c4
  40dc4c:	ldr	w9, [x20, #1220]
  40dc50:	adrp	x21, 427000 <argp_error@@Base+0x1a3a0>
  40dc54:	add	x19, x21, #0x5c8
  40dc58:	ldr	w8, [x22, #4]
  40dc5c:	mov	x6, x19
  40dc60:	str	w9, [x21, #1480]
  40dc64:	str	w8, [x19, #4]
  40dc68:	bl	40ced0 <argp_error@@Base+0x270>
  40dc6c:	adrp	x2, 427000 <argp_error@@Base+0x1a3a0>
  40dc70:	ldr	w4, [x21, #1480]
  40dc74:	ldr	w1, [x19, #8]
  40dc78:	ldr	x3, [x19, #16]
  40dc7c:	str	w4, [x20, #1220]
  40dc80:	str	x3, [x2, #1640]
  40dc84:	str	w1, [x22, #8]
  40dc88:	ldp	x19, x20, [sp, #16]
  40dc8c:	ldp	x21, x22, [sp, #32]
  40dc90:	ldp	x29, x30, [sp], #48
  40dc94:	ret
  40dc98:	mov	w6, #0x1                   	// #1
  40dc9c:	mov	w5, #0x0                   	// #0
  40dca0:	mov	x4, #0x0                   	// #0
  40dca4:	mov	x3, #0x0                   	// #0
  40dca8:	b	40dc30 <argp_error@@Base+0xfd0>
  40dcac:	nop
  40dcb0:	stp	x29, x30, [sp, #-64]!
  40dcb4:	mov	x29, sp
  40dcb8:	stp	x19, x20, [sp, #16]
  40dcbc:	mov	x20, x3
  40dcc0:	stp	x21, x22, [sp, #32]
  40dcc4:	mov	x22, x1
  40dcc8:	mov	x21, x2
  40dccc:	str	x23, [sp, #48]
  40dcd0:	mov	x23, x0
  40dcd4:	mov	x0, #0x48                  	// #72
  40dcd8:	bl	401be0 <malloc@plt>
  40dcdc:	mov	x19, x0
  40dce0:	cbz	x0, 40dd08 <argp_error@@Base+0x10a8>
  40dce4:	stp	x23, x22, [x19]
  40dce8:	mov	x0, #0xc8                  	// #200
  40dcec:	stp	x21, x20, [x19, #16]
  40dcf0:	stp	xzr, xzr, [x19, #32]
  40dcf4:	bl	401be0 <malloc@plt>
  40dcf8:	str	x0, [x19, #48]
  40dcfc:	cbz	x0, 40dd20 <argp_error@@Base+0x10c0>
  40dd00:	add	x1, x0, #0xc8
  40dd04:	stp	x0, x1, [x19, #56]
  40dd08:	mov	x0, x19
  40dd0c:	ldp	x19, x20, [sp, #16]
  40dd10:	ldp	x21, x22, [sp, #32]
  40dd14:	ldr	x23, [sp, #48]
  40dd18:	ldp	x29, x30, [sp], #64
  40dd1c:	ret
  40dd20:	mov	x0, x19
  40dd24:	mov	x19, #0x0                   	// #0
  40dd28:	bl	401d30 <free@plt>
  40dd2c:	b	40dd08 <argp_error@@Base+0x10a8>
  40dd30:	stp	x29, x30, [sp, #-96]!
  40dd34:	mov	x29, sp
  40dd38:	stp	x19, x20, [sp, #16]
  40dd3c:	mov	x20, x0
  40dd40:	ldr	x19, [x0, #32]
  40dd44:	stp	x23, x24, [sp, #48]
  40dd48:	ldr	x0, [x0, #48]
  40dd4c:	ldr	x23, [x20, #56]
  40dd50:	add	x19, x0, x19
  40dd54:	cmp	x23, x19
  40dd58:	b.ls	40dfd8 <argp_error@@Base+0x1378>  // b.plast
  40dd5c:	mov	w24, #0x20                  	// #32
  40dd60:	stp	x21, x22, [sp, #32]
  40dd64:	stp	x25, x26, [sp, #64]
  40dd68:	stp	x27, x28, [sp, #80]
  40dd6c:	b	40ddd4 <argp_error@@Base+0x1174>
  40dd70:	sub	x0, x25, x19
  40dd74:	add	x0, x0, x21
  40dd78:	cmp	x0, x26
  40dd7c:	b.lt	40dfb8 <argp_error@@Base+0x1358>  // b.tstop
  40dd80:	ldr	x28, [x20, #24]
  40dd84:	sub	x22, x26, #0x1
  40dd88:	tbz	x28, #63, 40de88 <argp_error@@Base+0x1228>
  40dd8c:	cmp	x23, x25
  40dd90:	b.ls	40e1b4 <argp_error@@Base+0x1554>  // b.plast
  40dd94:	sub	x21, x22, x21
  40dd98:	sub	x2, x23, x25
  40dd9c:	add	x0, x19, x21
  40dda0:	mov	x1, x25
  40dda4:	bl	401ab0 <memmove@plt>
  40dda8:	ldr	x0, [x20, #40]
  40ddac:	str	xzr, [x20, #40]
  40ddb0:	ldr	x2, [x20, #56]
  40ddb4:	sub	x22, x22, x0
  40ddb8:	add	x22, x19, x22
  40ddbc:	add	x19, x19, x26
  40ddc0:	sub	x22, x22, x25
  40ddc4:	sub	x23, x2, x22
  40ddc8:	str	x23, [x20, #56]
  40ddcc:	cmp	x19, x23
  40ddd0:	b.cs	40dfc8 <argp_error@@Base+0x1368>  // b.hs, b.nlast
  40ddd4:	ldr	x21, [x20, #40]
  40ddd8:	mov	x3, x21
  40dddc:	cbnz	x21, 40de38 <argp_error@@Base+0x11d8>
  40dde0:	ldr	x22, [x20, #8]
  40dde4:	cbz	x22, 40dff0 <argp_error@@Base+0x1390>
  40dde8:	ldr	x1, [x20, #64]
  40ddec:	add	x0, x23, x22
  40ddf0:	cmp	x1, x0
  40ddf4:	b.ls	40e150 <argp_error@@Base+0x14f0>  // b.plast
  40ddf8:	add	x3, x19, x22
  40ddfc:	sub	x2, x23, x19
  40de00:	mov	x1, x19
  40de04:	mov	x0, x3
  40de08:	bl	401ab0 <memmove@plt>
  40de0c:	mov	x3, x0
  40de10:	ldr	x1, [x20, #56]
  40de14:	mov	x0, x19
  40de18:	mov	x2, x22
  40de1c:	mov	x19, x3
  40de20:	add	x1, x1, x22
  40de24:	str	x1, [x20, #56]
  40de28:	mov	w1, #0x20                  	// #32
  40de2c:	bl	401c20 <memset@plt>
  40de30:	mov	x3, x22
  40de34:	str	x22, [x20, #40]
  40de38:	ldr	x23, [x20, #56]
  40de3c:	mov	x0, x19
  40de40:	mov	x21, x3
  40de44:	mov	w1, #0xa                   	// #10
  40de48:	sub	x27, x23, x19
  40de4c:	mov	x2, x27
  40de50:	bl	401dd0 <memchr@plt>
  40de54:	mov	x25, x0
  40de58:	tbz	x21, #63, 40de64 <argp_error@@Base+0x1204>
  40de5c:	mov	x21, #0x0                   	// #0
  40de60:	str	xzr, [x20, #40]
  40de64:	ldr	x26, [x20, #16]
  40de68:	cbnz	x25, 40dd70 <argp_error@@Base+0x1110>
  40de6c:	add	x0, x21, x27
  40de70:	cmp	x0, x26
  40de74:	b.cc	40e244 <argp_error@@Base+0x15e4>  // b.lo, b.ul, b.last
  40de78:	ldr	x28, [x20, #24]
  40de7c:	sub	x22, x26, #0x1
  40de80:	tbnz	x28, #63, 40e1b8 <argp_error@@Base+0x1558>
  40de84:	mov	x25, x23
  40de88:	add	x3, x22, #0x1
  40de8c:	sub	x21, x3, x21
  40de90:	adds	x22, x19, x21
  40de94:	b.cs	40e0b8 <argp_error@@Base+0x1458>  // b.hs, b.nlast
  40de98:	bl	401d00 <__ctype_b_loc@plt>
  40de9c:	mov	x21, x22
  40dea0:	ldr	x1, [x0]
  40dea4:	b	40deb4 <argp_error@@Base+0x1254>
  40dea8:	cmp	x19, x3
  40deac:	b.hi	40e0c0 <argp_error@@Base+0x1460>  // b.pmore
  40deb0:	mov	x21, x3
  40deb4:	ldrb	w0, [x21]
  40deb8:	sub	x3, x21, #0x1
  40debc:	ldrh	w0, [x1, x0, lsl #1]
  40dec0:	tbz	w0, #0, 40dea8 <argp_error@@Base+0x1248>
  40dec4:	add	x2, x21, #0x1
  40dec8:	cmp	x19, x2
  40decc:	b.cs	40e0d0 <argp_error@@Base+0x1470>  // b.hs, b.nlast
  40ded0:	cmp	x19, x21
  40ded4:	b.ls	40dee8 <argp_error@@Base+0x1288>  // b.plast
  40ded8:	b	40e1a8 <argp_error@@Base+0x1548>
  40dedc:	ldrb	w0, [x21]
  40dee0:	ldrh	w0, [x1, x0, lsl #1]
  40dee4:	tbz	w0, #0, 40def8 <argp_error@@Base+0x1298>
  40dee8:	mov	x22, x21
  40deec:	sub	x21, x21, #0x1
  40def0:	cmp	x19, x21
  40def4:	b.ls	40dedc <argp_error@@Base+0x127c>  // b.plast
  40def8:	mov	x21, x2
  40defc:	nop
  40df00:	add	x0, x27, #0x1
  40df04:	add	x0, x19, x0
  40df08:	cmp	x21, x0
  40df0c:	b.eq	40e010 <argp_error@@Base+0x13b0>  // b.none
  40df10:	add	x0, x22, #0x1
  40df14:	sub	x1, x21, x0
  40df18:	cmp	x1, x28
  40df1c:	b.ge	40e028 <argp_error@@Base+0x13c8>  // b.tcont
  40df20:	cmp	x23, x21
  40df24:	b.ls	40e020 <argp_error@@Base+0x13c0>  // b.plast
  40df28:	ldr	x1, [x20, #64]
  40df2c:	add	x28, x28, #0x1
  40df30:	sub	x1, x1, x23
  40df34:	cmp	x1, x28
  40df38:	b.gt	40e1f0 <argp_error@@Base+0x1590>
  40df3c:	ldr	x0, [x20, #48]
  40df40:	ldr	x3, [x20]
  40df44:	cmp	x0, x22
  40df48:	b.cs	40df5c <argp_error@@Base+0x12fc>  // b.hs, b.nlast
  40df4c:	sub	x2, x22, x0
  40df50:	mov	x1, #0x1                   	// #1
  40df54:	bl	401ae0 <fwrite_unlocked@plt>
  40df58:	ldr	x3, [x20]
  40df5c:	ldp	x0, x1, [x3, #40]
  40df60:	cmp	x0, x1
  40df64:	b.cs	40e234 <argp_error@@Base+0x15d4>  // b.hs, b.nlast
  40df68:	add	x1, x0, #0x1
  40df6c:	str	x1, [x3, #40]
  40df70:	mov	w1, #0xa                   	// #10
  40df74:	strb	w1, [x0]
  40df78:	ldr	x25, [x20, #48]
  40df7c:	sub	x19, x19, x25
  40df80:	sub	x1, x21, x25
  40df84:	add	x27, x27, x19
  40df88:	mov	x23, x1
  40df8c:	mov	x19, x25
  40df90:	b	40e03c <argp_error@@Base+0x13dc>
  40df94:	bl	401d00 <__ctype_b_loc@plt>
  40df98:	ldrb	w2, [x22]
  40df9c:	ldr	x1, [x0]
  40dfa0:	ldrh	w0, [x1, x2, lsl #1]
  40dfa4:	tbnz	w0, #0, 40e0e4 <argp_error@@Base+0x1484>
  40dfa8:	add	x22, x22, #0x1
  40dfac:	cmp	x22, x25
  40dfb0:	b.ne	40df94 <argp_error@@Base+0x1334>  // b.any
  40dfb4:	nop
  40dfb8:	str	xzr, [x20, #40]
  40dfbc:	add	x19, x25, #0x1
  40dfc0:	cmp	x19, x23
  40dfc4:	b.cc	40ddd4 <argp_error@@Base+0x1174>  // b.lo, b.ul, b.last
  40dfc8:	ldp	x21, x22, [sp, #32]
  40dfcc:	ldp	x25, x26, [sp, #64]
  40dfd0:	ldp	x27, x28, [sp, #80]
  40dfd4:	ldr	x0, [x20, #48]
  40dfd8:	sub	x2, x23, x0
  40dfdc:	ldp	x23, x24, [sp, #48]
  40dfe0:	str	x2, [x20, #32]
  40dfe4:	ldp	x19, x20, [sp, #16]
  40dfe8:	ldp	x29, x30, [sp], #96
  40dfec:	ret
  40dff0:	ldr	x23, [x20, #56]
  40dff4:	mov	x0, x19
  40dff8:	mov	w1, #0xa                   	// #10
  40dffc:	sub	x27, x23, x19
  40e000:	mov	x2, x27
  40e004:	bl	401dd0 <memchr@plt>
  40e008:	mov	x25, x0
  40e00c:	b	40de64 <argp_error@@Base+0x1204>
  40e010:	ldr	x0, [x20, #64]
  40e014:	sub	x0, x0, x22
  40e018:	cmp	x0, x28
  40e01c:	b.le	40df20 <argp_error@@Base+0x12c0>
  40e020:	add	x0, x22, #0x1
  40e024:	sub	x1, x21, x0
  40e028:	sub	x23, x21, x19
  40e02c:	mov	x25, x19
  40e030:	mov	x19, x0
  40e034:	mov	w0, #0xa                   	// #10
  40e038:	strb	w0, [x22]
  40e03c:	ldr	x0, [x20, #24]
  40e040:	cmp	x0, x1
  40e044:	b.le	40e068 <argp_error@@Base+0x1408>
  40e048:	add	x1, x27, #0x1
  40e04c:	add	x1, x25, x1
  40e050:	cmp	x21, x1
  40e054:	b.ne	40e0f8 <argp_error@@Base+0x1498>  // b.any
  40e058:	ldr	x1, [x20, #64]
  40e05c:	sub	x1, x1, x21
  40e060:	cmp	x0, x1
  40e064:	b.gt	40e0f8 <argp_error@@Base+0x1498>
  40e068:	cmp	x0, #0x0
  40e06c:	b.le	40e094 <argp_error@@Base+0x1434>
  40e070:	add	x1, x19, #0x1
  40e074:	mvn	x3, x19
  40e078:	sturb	w24, [x1, #-1]
  40e07c:	mov	x19, x1
  40e080:	add	x1, x1, #0x1
  40e084:	ldr	x0, [x20, #24]
  40e088:	add	x2, x3, x1
  40e08c:	cmp	x0, x2
  40e090:	b.gt	40e078 <argp_error@@Base+0x1418>
  40e094:	cmp	x19, x21
  40e098:	b.cc	40e18c <argp_error@@Base+0x152c>  // b.lo, b.ul, b.last
  40e09c:	sub	x2, x27, x23
  40e0a0:	cmp	x0, #0x0
  40e0a4:	add	x23, x19, x2
  40e0a8:	csinv	x0, x0, xzr, ne  // ne = any
  40e0ac:	str	x0, [x20, #40]
  40e0b0:	str	x23, [x20, #56]
  40e0b4:	b	40ddcc <argp_error@@Base+0x116c>
  40e0b8:	add	x21, x22, #0x1
  40e0bc:	nop
  40e0c0:	cmp	x19, x21
  40e0c4:	b.cs	40e0d0 <argp_error@@Base+0x1470>  // b.hs, b.nlast
  40e0c8:	mov	x22, x21
  40e0cc:	b	40df00 <argp_error@@Base+0x12a0>
  40e0d0:	cmp	x22, x25
  40e0d4:	b.cc	40dfa8 <argp_error@@Base+0x1348>  // b.lo, b.ul, b.last
  40e0d8:	b.eq	40dfb8 <argp_error@@Base+0x1358>  // b.none
  40e0dc:	bl	401d00 <__ctype_b_loc@plt>
  40e0e0:	ldr	x1, [x0]
  40e0e4:	mov	x21, x22
  40e0e8:	ldrb	w0, [x21, #1]!
  40e0ec:	ldrh	w0, [x1, x0, lsl #1]
  40e0f0:	tbnz	w0, #0, 40e0e8 <argp_error@@Base+0x1488>
  40e0f4:	b	40df00 <argp_error@@Base+0x12a0>
  40e0f8:	cmp	x0, #0x0
  40e0fc:	mov	x22, #0x0                   	// #0
  40e100:	b.le	40e094 <argp_error@@Base+0x1434>
  40e104:	ldr	x0, [x20]
  40e108:	ldp	x1, x2, [x0, #40]
  40e10c:	add	x3, x1, #0x1
  40e110:	cmp	x1, x2
  40e114:	b.cs	40e144 <argp_error@@Base+0x14e4>  // b.hs, b.nlast
  40e118:	str	x3, [x0, #40]
  40e11c:	strb	w24, [x1]
  40e120:	ldr	x0, [x20, #24]
  40e124:	add	x22, x22, #0x1
  40e128:	cmp	x0, x22
  40e12c:	b.le	40e094 <argp_error@@Base+0x1434>
  40e130:	ldr	x0, [x20]
  40e134:	ldp	x1, x2, [x0, #40]
  40e138:	add	x3, x1, #0x1
  40e13c:	cmp	x1, x2
  40e140:	b.cc	40e118 <argp_error@@Base+0x14b8>  // b.lo, b.ul, b.last
  40e144:	mov	w1, #0x20                  	// #32
  40e148:	bl	401ce0 <__overflow@plt>
  40e14c:	b	40e120 <argp_error@@Base+0x14c0>
  40e150:	mov	x21, #0x0                   	// #0
  40e154:	b	40e16c <argp_error@@Base+0x150c>
  40e158:	str	x3, [x0, #40]
  40e15c:	strb	w24, [x1]
  40e160:	add	x21, x21, #0x1
  40e164:	cmp	x22, x21
  40e168:	b.eq	40de30 <argp_error@@Base+0x11d0>  // b.none
  40e16c:	ldr	x0, [x20]
  40e170:	ldp	x1, x2, [x0, #40]
  40e174:	add	x3, x1, #0x1
  40e178:	cmp	x1, x2
  40e17c:	b.cc	40e158 <argp_error@@Base+0x14f8>  // b.lo, b.ul, b.last
  40e180:	mov	w1, #0x20                  	// #32
  40e184:	bl	401ce0 <__overflow@plt>
  40e188:	b	40e160 <argp_error@@Base+0x1500>
  40e18c:	add	x2, x25, x27
  40e190:	mov	x1, x21
  40e194:	sub	x2, x2, x21
  40e198:	mov	x0, x19
  40e19c:	bl	401ab0 <memmove@plt>
  40e1a0:	ldr	x0, [x20, #24]
  40e1a4:	b	40e09c <argp_error@@Base+0x143c>
  40e1a8:	mov	x22, x2
  40e1ac:	mov	x21, x2
  40e1b0:	b	40df00 <argp_error@@Base+0x12a0>
  40e1b4:	add	x0, x27, x21
  40e1b8:	sub	x2, x22, x0
  40e1bc:	ldp	x21, x22, [sp, #32]
  40e1c0:	add	x23, x23, x2
  40e1c4:	ldp	x25, x26, [sp, #64]
  40e1c8:	ldp	x27, x28, [sp, #80]
  40e1cc:	str	x0, [x20, #40]
  40e1d0:	ldr	x0, [x20, #48]
  40e1d4:	str	x23, [x20, #56]
  40e1d8:	sub	x2, x23, x0
  40e1dc:	ldp	x23, x24, [sp, #48]
  40e1e0:	str	x2, [x20, #32]
  40e1e4:	ldp	x19, x20, [sp, #16]
  40e1e8:	ldp	x29, x30, [sp], #96
  40e1ec:	ret
  40e1f0:	sub	x23, x23, x21
  40e1f4:	mov	x1, x21
  40e1f8:	mov	x2, x23
  40e1fc:	add	x0, x22, x28
  40e200:	bl	401ab0 <memmove@plt>
  40e204:	mov	x25, x19
  40e208:	ldr	x1, [x20, #24]
  40e20c:	mov	x0, x22
  40e210:	mov	w2, #0xa                   	// #10
  40e214:	add	x21, x1, #0x1
  40e218:	add	x21, x22, x21
  40e21c:	strb	w2, [x0], #1
  40e220:	add	x2, x21, x23
  40e224:	sub	x23, x21, x19
  40e228:	sub	x27, x2, x19
  40e22c:	mov	x19, x0
  40e230:	b	40e03c <argp_error@@Base+0x13dc>
  40e234:	mov	x0, x3
  40e238:	mov	w1, #0xa                   	// #10
  40e23c:	bl	401ce0 <__overflow@plt>
  40e240:	b	40df78 <argp_error@@Base+0x1318>
  40e244:	ldp	x21, x22, [sp, #32]
  40e248:	ldp	x25, x26, [sp, #64]
  40e24c:	ldp	x27, x28, [sp, #80]
  40e250:	str	x0, [x20, #40]
  40e254:	ldr	x0, [x20, #48]
  40e258:	sub	x2, x23, x0
  40e25c:	ldp	x23, x24, [sp, #48]
  40e260:	str	x2, [x20, #32]
  40e264:	ldp	x19, x20, [sp, #16]
  40e268:	ldp	x29, x30, [sp], #96
  40e26c:	ret
  40e270:	stp	x29, x30, [sp, #-32]!
  40e274:	mov	x29, sp
  40e278:	str	x19, [sp, #16]
  40e27c:	mov	x19, x0
  40e280:	bl	40dd30 <argp_error@@Base+0x10d0>
  40e284:	ldp	x0, x2, [x19, #48]
  40e288:	cmp	x2, x0
  40e28c:	b.ls	40e2a4 <argp_error@@Base+0x1644>  // b.plast
  40e290:	ldr	x3, [x19]
  40e294:	sub	x2, x2, x0
  40e298:	mov	x1, #0x1                   	// #1
  40e29c:	bl	401ae0 <fwrite_unlocked@plt>
  40e2a0:	ldr	x0, [x19, #48]
  40e2a4:	bl	401d30 <free@plt>
  40e2a8:	mov	x0, x19
  40e2ac:	ldr	x19, [sp, #16]
  40e2b0:	ldp	x29, x30, [sp], #32
  40e2b4:	b	401d30 <free@plt>
  40e2b8:	stp	x29, x30, [sp, #-32]!
  40e2bc:	mov	x29, sp
  40e2c0:	stp	x19, x20, [sp, #16]
  40e2c4:	mov	x19, x0
  40e2c8:	mov	x20, x1
  40e2cc:	bl	40dd30 <argp_error@@Base+0x10d0>
  40e2d0:	ldp	x0, x2, [x19, #48]
  40e2d4:	mov	x1, #0x1                   	// #1
  40e2d8:	ldr	x3, [x19]
  40e2dc:	sub	x2, x2, x0
  40e2e0:	bl	401ae0 <fwrite_unlocked@plt>
  40e2e4:	mov	x3, x0
  40e2e8:	ldp	x0, x2, [x19, #48]
  40e2ec:	sub	x1, x2, x0
  40e2f0:	cmp	x3, x1
  40e2f4:	b.ne	40e354 <argp_error@@Base+0x16f4>  // b.any
  40e2f8:	ldr	x2, [x19, #64]
  40e2fc:	str	xzr, [x19, #32]
  40e300:	str	x0, [x19, #56]
  40e304:	sub	x2, x2, x0
  40e308:	cmp	x2, x20
  40e30c:	b.cs	40e344 <argp_error@@Base+0x16e4>  // b.hs, b.nlast
  40e310:	adds	x20, x2, x20
  40e314:	b.cs	40e384 <argp_error@@Base+0x1724>  // b.hs, b.nlast
  40e318:	mov	x1, x20
  40e31c:	bl	401c70 <realloc@plt>
  40e320:	mov	x1, x0
  40e324:	cbz	x0, 40e384 <argp_error@@Base+0x1724>
  40e328:	add	x2, x0, x20
  40e32c:	stp	x1, x1, [x19, #48]
  40e330:	mov	w0, #0x1                   	// #1
  40e334:	str	x2, [x19, #64]
  40e338:	ldp	x19, x20, [sp, #16]
  40e33c:	ldp	x29, x30, [sp], #32
  40e340:	ret
  40e344:	mov	w0, #0x1                   	// #1
  40e348:	ldp	x19, x20, [sp, #16]
  40e34c:	ldp	x29, x30, [sp], #32
  40e350:	ret
  40e354:	ldr	x1, [x19, #32]
  40e358:	sub	x2, x2, x3
  40e35c:	str	x2, [x19, #56]
  40e360:	sub	x2, x2, x0
  40e364:	sub	x1, x1, x3
  40e368:	str	x1, [x19, #32]
  40e36c:	add	x1, x0, x3
  40e370:	bl	401ab0 <memmove@plt>
  40e374:	mov	w0, #0x0                   	// #0
  40e378:	ldp	x19, x20, [sp, #16]
  40e37c:	ldp	x29, x30, [sp], #32
  40e380:	ret
  40e384:	bl	401ea0 <__errno_location@plt>
  40e388:	mov	x1, x0
  40e38c:	mov	w2, #0xc                   	// #12
  40e390:	mov	w0, #0x0                   	// #0
  40e394:	ldp	x19, x20, [sp, #16]
  40e398:	str	w2, [x1]
  40e39c:	ldp	x29, x30, [sp], #32
  40e3a0:	ret
  40e3a4:	nop
  40e3a8:	ldp	x3, x2, [x0, #56]
  40e3ac:	sub	x2, x2, x3
  40e3b0:	cmp	x2, x1
  40e3b4:	b.cc	40e3c0 <argp_error@@Base+0x1760>  // b.lo, b.ul, b.last
  40e3b8:	mov	w0, #0x1                   	// #1
  40e3bc:	ret
  40e3c0:	b	40e2b8 <argp_error@@Base+0x1658>
  40e3c4:	nop
  40e3c8:	stp	x29, x30, [sp, #-304]!
  40e3cc:	mov	x29, sp
  40e3d0:	stp	x23, x24, [sp, #48]
  40e3d4:	mov	x24, x0
  40e3d8:	add	x23, sp, #0x100
  40e3dc:	str	q0, [sp, #128]
  40e3e0:	str	q1, [sp, #144]
  40e3e4:	str	q2, [sp, #160]
  40e3e8:	str	q3, [sp, #176]
  40e3ec:	str	q4, [sp, #192]
  40e3f0:	str	q5, [sp, #208]
  40e3f4:	str	q6, [sp, #224]
  40e3f8:	str	q7, [sp, #240]
  40e3fc:	stp	x2, x3, [sp, #256]
  40e400:	stp	x4, x5, [sp, #272]
  40e404:	stp	x6, x7, [sp, #288]
  40e408:	ldp	x0, x2, [x24, #56]
  40e40c:	stp	x19, x20, [sp, #16]
  40e410:	mov	x20, x1
  40e414:	stp	x21, x22, [sp, #32]
  40e418:	mov	x1, #0x96                  	// #150
  40e41c:	mov	w22, #0xffffffd0            	// #-48
  40e420:	mov	w21, #0xffffff80            	// #-128
  40e424:	sub	x3, x2, x0
  40e428:	cmp	x1, x3
  40e42c:	b.hi	40e4ac <argp_error@@Base+0x184c>  // b.pmore
  40e430:	add	x1, sp, #0x130
  40e434:	stp	x1, x1, [sp, #96]
  40e438:	sub	x19, x2, x0
  40e43c:	str	x23, [sp, #112]
  40e440:	mov	x2, x20
  40e444:	stp	w22, w21, [sp, #120]
  40e448:	mov	x1, x19
  40e44c:	ldp	x4, x5, [sp, #96]
  40e450:	stp	x4, x5, [sp, #64]
  40e454:	add	x3, sp, #0x40
  40e458:	ldp	x4, x5, [sp, #112]
  40e45c:	stp	x4, x5, [sp, #80]
  40e460:	bl	401e40 <vsnprintf@plt>
  40e464:	add	w1, w0, #0x1
  40e468:	cmp	x19, w0, sxtw
  40e46c:	sxtw	x2, w0
  40e470:	b.ls	40e498 <argp_error@@Base+0x1838>  // b.plast
  40e474:	ldr	x1, [x24, #56]
  40e478:	mov	x0, x2
  40e47c:	ldp	x19, x20, [sp, #16]
  40e480:	add	x2, x1, x2
  40e484:	str	x2, [x24, #56]
  40e488:	ldp	x21, x22, [sp, #32]
  40e48c:	ldp	x23, x24, [sp, #48]
  40e490:	ldp	x29, x30, [sp], #304
  40e494:	ret
  40e498:	ldp	x0, x2, [x24, #56]
  40e49c:	sxtw	x1, w1
  40e4a0:	sub	x3, x2, x0
  40e4a4:	cmp	x1, x3
  40e4a8:	b.ls	40e430 <argp_error@@Base+0x17d0>  // b.plast
  40e4ac:	mov	x0, x24
  40e4b0:	bl	40e2b8 <argp_error@@Base+0x1658>
  40e4b4:	cbz	w0, 40e4c0 <argp_error@@Base+0x1860>
  40e4b8:	ldp	x0, x2, [x24, #56]
  40e4bc:	b	40e430 <argp_error@@Base+0x17d0>
  40e4c0:	mov	x0, #0xffffffffffffffff    	// #-1
  40e4c4:	ldp	x19, x20, [sp, #16]
  40e4c8:	ldp	x21, x22, [sp, #32]
  40e4cc:	ldp	x23, x24, [sp, #48]
  40e4d0:	ldp	x29, x30, [sp], #304
  40e4d4:	ret
  40e4d8:	stp	x29, x30, [sp, #-64]!
  40e4dc:	mov	x29, sp
  40e4e0:	stp	x19, x20, [sp, #16]
  40e4e4:	adrp	x20, 425000 <argp_error@@Base+0x183a0>
  40e4e8:	add	x20, x20, #0xdf0
  40e4ec:	stp	x21, x22, [sp, #32]
  40e4f0:	adrp	x21, 425000 <argp_error@@Base+0x183a0>
  40e4f4:	add	x21, x21, #0xde8
  40e4f8:	sub	x20, x20, x21
  40e4fc:	mov	w22, w0
  40e500:	stp	x23, x24, [sp, #48]
  40e504:	mov	x23, x1
  40e508:	mov	x24, x2
  40e50c:	bl	401a60 <memcpy@plt-0x40>
  40e510:	cmp	xzr, x20, asr #3
  40e514:	b.eq	40e540 <argp_error@@Base+0x18e0>  // b.none
  40e518:	asr	x20, x20, #3
  40e51c:	mov	x19, #0x0                   	// #0
  40e520:	ldr	x3, [x21, x19, lsl #3]
  40e524:	mov	x2, x24
  40e528:	add	x19, x19, #0x1
  40e52c:	mov	x1, x23
  40e530:	mov	w0, w22
  40e534:	blr	x3
  40e538:	cmp	x20, x19
  40e53c:	b.ne	40e520 <argp_error@@Base+0x18c0>  // b.any
  40e540:	ldp	x19, x20, [sp, #16]
  40e544:	ldp	x21, x22, [sp, #32]
  40e548:	ldp	x23, x24, [sp, #48]
  40e54c:	ldp	x29, x30, [sp], #64
  40e550:	ret
  40e554:	nop
  40e558:	ret

Disassembly of section .fini:

000000000040e55c <.fini>:
  40e55c:	stp	x29, x30, [sp, #-16]!
  40e560:	mov	x29, sp
  40e564:	ldp	x29, x30, [sp], #16
  40e568:	ret
