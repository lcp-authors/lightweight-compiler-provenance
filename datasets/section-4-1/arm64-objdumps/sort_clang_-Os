
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sort_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402810 <.init>:
  402810:	stp	x29, x30, [sp, #-16]!
  402814:	mov	x29, sp
  402818:	bl	403030 <ferror@plt+0x60>
  40281c:	ldp	x29, x30, [sp], #16
  402820:	ret

Disassembly of section .plt:

0000000000402830 <mbrtowc@plt-0x20>:
  402830:	stp	x16, x30, [sp, #-16]!
  402834:	adrp	x16, 423000 <_obstack_memory_used@@Base+0x12ac0>
  402838:	ldr	x17, [x16, #4088]
  40283c:	add	x16, x16, #0xff8
  402840:	br	x17
  402844:	nop
  402848:	nop
  40284c:	nop

0000000000402850 <mbrtowc@plt>:
  402850:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16]
  402858:	add	x16, x16, #0x0
  40285c:	br	x17

0000000000402860 <memcpy@plt>:
  402860:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #8]
  402868:	add	x16, x16, #0x8
  40286c:	br	x17

0000000000402870 <memmove@plt>:
  402870:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #16]
  402878:	add	x16, x16, #0x10
  40287c:	br	x17

0000000000402880 <pthread_sigmask@plt>:
  402880:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #24]
  402888:	add	x16, x16, #0x18
  40288c:	br	x17

0000000000402890 <_exit@plt>:
  402890:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #32]
  402898:	add	x16, x16, #0x20
  40289c:	br	x17

00000000004028a0 <fwrite_unlocked@plt>:
  4028a0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #40]
  4028a8:	add	x16, x16, #0x28
  4028ac:	br	x17

00000000004028b0 <strtoul@plt>:
  4028b0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #48]
  4028b8:	add	x16, x16, #0x30
  4028bc:	br	x17

00000000004028c0 <strlen@plt>:
  4028c0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #56]
  4028c8:	add	x16, x16, #0x38
  4028cc:	br	x17

00000000004028d0 <fputs@plt>:
  4028d0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #64]
  4028d8:	add	x16, x16, #0x40
  4028dc:	br	x17

00000000004028e0 <exit@plt>:
  4028e0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #72]
  4028e8:	add	x16, x16, #0x48
  4028ec:	br	x17

00000000004028f0 <raise@plt>:
  4028f0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #80]
  4028f8:	add	x16, x16, #0x50
  4028fc:	br	x17

0000000000402900 <error@plt>:
  402900:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #88]
  402908:	add	x16, x16, #0x58
  40290c:	br	x17

0000000000402910 <sysinfo@plt>:
  402910:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #96]
  402918:	add	x16, x16, #0x60
  40291c:	br	x17

0000000000402920 <ferror_unlocked@plt>:
  402920:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #104]
  402928:	add	x16, x16, #0x68
  40292c:	br	x17

0000000000402930 <getuid@plt>:
  402930:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #112]
  402938:	add	x16, x16, #0x70
  40293c:	br	x17

0000000000402940 <pipe@plt>:
  402940:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #120]
  402948:	add	x16, x16, #0x78
  40294c:	br	x17

0000000000402950 <__cxa_atexit@plt>:
  402950:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #128]
  402958:	add	x16, x16, #0x80
  40295c:	br	x17

0000000000402960 <iswcntrl@plt>:
  402960:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #136]
  402968:	add	x16, x16, #0x88
  40296c:	br	x17

0000000000402970 <qsort@plt>:
  402970:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #144]
  402978:	add	x16, x16, #0x90
  40297c:	br	x17

0000000000402980 <setvbuf@plt>:
  402980:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #152]
  402988:	add	x16, x16, #0x98
  40298c:	br	x17

0000000000402990 <euidaccess@plt>:
  402990:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #160]
  402998:	add	x16, x16, #0xa0
  40299c:	br	x17

00000000004029a0 <fork@plt>:
  4029a0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #168]
  4029a8:	add	x16, x16, #0xa8
  4029ac:	br	x17

00000000004029b0 <lseek@plt>:
  4029b0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #176]
  4029b8:	add	x16, x16, #0xb0
  4029bc:	br	x17

00000000004029c0 <__fpending@plt>:
  4029c0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #184]
  4029c8:	add	x16, x16, #0xb8
  4029cc:	br	x17

00000000004029d0 <localeconv@plt>:
  4029d0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #192]
  4029d8:	add	x16, x16, #0xc0
  4029dc:	br	x17

00000000004029e0 <stpcpy@plt>:
  4029e0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #200]
  4029e8:	add	x16, x16, #0xc8
  4029ec:	br	x17

00000000004029f0 <fileno@plt>:
  4029f0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #208]
  4029f8:	add	x16, x16, #0xd0
  4029fc:	br	x17

0000000000402a00 <putc_unlocked@plt>:
  402a00:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #216]
  402a08:	add	x16, x16, #0xd8
  402a0c:	br	x17

0000000000402a10 <signal@plt>:
  402a10:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #224]
  402a18:	add	x16, x16, #0xe0
  402a1c:	br	x17

0000000000402a20 <fclose@plt>:
  402a20:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #232]
  402a28:	add	x16, x16, #0xe8
  402a2c:	br	x17

0000000000402a30 <getpid@plt>:
  402a30:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #240]
  402a38:	add	x16, x16, #0xf0
  402a3c:	br	x17

0000000000402a40 <nl_langinfo@plt>:
  402a40:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #248]
  402a48:	add	x16, x16, #0xf8
  402a4c:	br	x17

0000000000402a50 <fopen@plt>:
  402a50:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #256]
  402a58:	add	x16, x16, #0x100
  402a5c:	br	x17

0000000000402a60 <malloc@plt>:
  402a60:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #264]
  402a68:	add	x16, x16, #0x108
  402a6c:	br	x17

0000000000402a70 <toupper@plt>:
  402a70:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #272]
  402a78:	add	x16, x16, #0x110
  402a7c:	br	x17

0000000000402a80 <wcwidth@plt>:
  402a80:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #280]
  402a88:	add	x16, x16, #0x118
  402a8c:	br	x17

0000000000402a90 <open@plt>:
  402a90:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #288]
  402a98:	add	x16, x16, #0x120
  402a9c:	br	x17

0000000000402aa0 <getppid@plt>:
  402aa0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #296]
  402aa8:	add	x16, x16, #0x128
  402aac:	br	x17

0000000000402ab0 <sigemptyset@plt>:
  402ab0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #304]
  402ab8:	add	x16, x16, #0x130
  402abc:	br	x17

0000000000402ac0 <pthread_cond_signal@plt>:
  402ac0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #312]
  402ac8:	add	x16, x16, #0x138
  402acc:	br	x17

0000000000402ad0 <strncmp@plt>:
  402ad0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #320]
  402ad8:	add	x16, x16, #0x140
  402adc:	br	x17

0000000000402ae0 <bindtextdomain@plt>:
  402ae0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #328]
  402ae8:	add	x16, x16, #0x148
  402aec:	br	x17

0000000000402af0 <__libc_start_main@plt>:
  402af0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #336]
  402af8:	add	x16, x16, #0x150
  402afc:	br	x17

0000000000402b00 <fgetc@plt>:
  402b00:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #344]
  402b08:	add	x16, x16, #0x158
  402b0c:	br	x17

0000000000402b10 <__printf_chk@plt>:
  402b10:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #352]
  402b18:	add	x16, x16, #0x160
  402b1c:	br	x17

0000000000402b20 <memset@plt>:
  402b20:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #360]
  402b28:	add	x16, x16, #0x168
  402b2c:	br	x17

0000000000402b30 <fdopen@plt>:
  402b30:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #368]
  402b38:	add	x16, x16, #0x170
  402b3c:	br	x17

0000000000402b40 <gettimeofday@plt>:
  402b40:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #376]
  402b48:	add	x16, x16, #0x178
  402b4c:	br	x17

0000000000402b50 <putchar_unlocked@plt>:
  402b50:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #384]
  402b58:	add	x16, x16, #0x180
  402b5c:	br	x17

0000000000402b60 <calloc@plt>:
  402b60:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #392]
  402b68:	add	x16, x16, #0x188
  402b6c:	br	x17

0000000000402b70 <bcmp@plt>:
  402b70:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #400]
  402b78:	add	x16, x16, #0x190
  402b7c:	br	x17

0000000000402b80 <realloc@plt>:
  402b80:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #408]
  402b88:	add	x16, x16, #0x198
  402b8c:	br	x17

0000000000402b90 <pthread_mutex_init@plt>:
  402b90:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #416]
  402b98:	add	x16, x16, #0x1a0
  402b9c:	br	x17

0000000000402ba0 <close@plt>:
  402ba0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #424]
  402ba8:	add	x16, x16, #0x1a8
  402bac:	br	x17

0000000000402bb0 <sigaction@plt>:
  402bb0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #432]
  402bb8:	add	x16, x16, #0x1b0
  402bbc:	br	x17

0000000000402bc0 <strrchr@plt>:
  402bc0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #440]
  402bc8:	add	x16, x16, #0x1b8
  402bcc:	br	x17

0000000000402bd0 <pthread_create@plt>:
  402bd0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #448]
  402bd8:	add	x16, x16, #0x1c0
  402bdc:	br	x17

0000000000402be0 <__gmon_start__@plt>:
  402be0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #456]
  402be8:	add	x16, x16, #0x1c8
  402bec:	br	x17

0000000000402bf0 <write@plt>:
  402bf0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #464]
  402bf8:	add	x16, x16, #0x1d0
  402bfc:	br	x17

0000000000402c00 <strtoumax@plt>:
  402c00:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #472]
  402c08:	add	x16, x16, #0x1d8
  402c0c:	br	x17

0000000000402c10 <pthread_join@plt>:
  402c10:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #480]
  402c18:	add	x16, x16, #0x1e0
  402c1c:	br	x17

0000000000402c20 <abort@plt>:
  402c20:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #488]
  402c28:	add	x16, x16, #0x1e8
  402c2c:	br	x17

0000000000402c30 <mkostemp@plt>:
  402c30:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #496]
  402c38:	add	x16, x16, #0x1f0
  402c3c:	br	x17

0000000000402c40 <sched_getaffinity@plt>:
  402c40:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #504]
  402c48:	add	x16, x16, #0x1f8
  402c4c:	br	x17

0000000000402c50 <posix_fadvise@plt>:
  402c50:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #512]
  402c58:	add	x16, x16, #0x200
  402c5c:	br	x17

0000000000402c60 <mbsinit@plt>:
  402c60:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #520]
  402c68:	add	x16, x16, #0x208
  402c6c:	br	x17

0000000000402c70 <pipe2@plt>:
  402c70:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #528]
  402c78:	add	x16, x16, #0x210
  402c7c:	br	x17

0000000000402c80 <fread_unlocked@plt>:
  402c80:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #536]
  402c88:	add	x16, x16, #0x218
  402c8c:	br	x17

0000000000402c90 <memcmp@plt>:
  402c90:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #544]
  402c98:	add	x16, x16, #0x220
  402c9c:	br	x17

0000000000402ca0 <textdomain@plt>:
  402ca0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #552]
  402ca8:	add	x16, x16, #0x228
  402cac:	br	x17

0000000000402cb0 <getopt_long@plt>:
  402cb0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #560]
  402cb8:	add	x16, x16, #0x230
  402cbc:	br	x17

0000000000402cc0 <__fprintf_chk@plt>:
  402cc0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #568]
  402cc8:	add	x16, x16, #0x238
  402ccc:	br	x17

0000000000402cd0 <sigismember@plt>:
  402cd0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #576]
  402cd8:	add	x16, x16, #0x240
  402cdc:	br	x17

0000000000402ce0 <strcmp@plt>:
  402ce0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #584]
  402ce8:	add	x16, x16, #0x248
  402cec:	br	x17

0000000000402cf0 <__ctype_b_loc@plt>:
  402cf0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #592]
  402cf8:	add	x16, x16, #0x250
  402cfc:	br	x17

0000000000402d00 <strtol@plt>:
  402d00:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #600]
  402d08:	add	x16, x16, #0x258
  402d0c:	br	x17

0000000000402d10 <fseeko@plt>:
  402d10:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #608]
  402d18:	add	x16, x16, #0x260
  402d1c:	br	x17

0000000000402d20 <strtold@plt>:
  402d20:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #616]
  402d28:	add	x16, x16, #0x268
  402d2c:	br	x17

0000000000402d30 <free@plt>:
  402d30:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #624]
  402d38:	add	x16, x16, #0x270
  402d3c:	br	x17

0000000000402d40 <__ctype_get_mb_cur_max@plt>:
  402d40:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #632]
  402d48:	add	x16, x16, #0x278
  402d4c:	br	x17

0000000000402d50 <getgid@plt>:
  402d50:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #640]
  402d58:	add	x16, x16, #0x280
  402d5c:	br	x17

0000000000402d60 <pthread_cond_wait@plt>:
  402d60:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #648]
  402d68:	add	x16, x16, #0x288
  402d6c:	br	x17

0000000000402d70 <nanosleep@plt>:
  402d70:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #656]
  402d78:	add	x16, x16, #0x290
  402d7c:	br	x17

0000000000402d80 <__stpcpy_chk@plt>:
  402d80:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #664]
  402d88:	add	x16, x16, #0x298
  402d8c:	br	x17

0000000000402d90 <strchr@plt>:
  402d90:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #672]
  402d98:	add	x16, x16, #0x2a0
  402d9c:	br	x17

0000000000402da0 <feof_unlocked@plt>:
  402da0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #680]
  402da8:	add	x16, x16, #0x2a8
  402dac:	br	x17

0000000000402db0 <fflush_unlocked@plt>:
  402db0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #688]
  402db8:	add	x16, x16, #0x2b0
  402dbc:	br	x17

0000000000402dc0 <__sched_cpucount@plt>:
  402dc0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #696]
  402dc8:	add	x16, x16, #0x2b8
  402dcc:	br	x17

0000000000402dd0 <fcntl@plt>:
  402dd0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #704]
  402dd8:	add	x16, x16, #0x2c0
  402ddc:	br	x17

0000000000402de0 <strxfrm@plt>:
  402de0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #712]
  402de8:	add	x16, x16, #0x2c8
  402dec:	br	x17

0000000000402df0 <dcngettext@plt>:
  402df0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #720]
  402df8:	add	x16, x16, #0x2d0
  402dfc:	br	x17

0000000000402e00 <fflush@plt>:
  402e00:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #728]
  402e08:	add	x16, x16, #0x2d8
  402e0c:	br	x17

0000000000402e10 <pthread_cond_init@plt>:
  402e10:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #736]
  402e18:	add	x16, x16, #0x2e0
  402e1c:	br	x17

0000000000402e20 <getrlimit@plt>:
  402e20:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #744]
  402e28:	add	x16, x16, #0x2e8
  402e2c:	br	x17

0000000000402e30 <clearerr_unlocked@plt>:
  402e30:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #752]
  402e38:	add	x16, x16, #0x2f0
  402e3c:	br	x17

0000000000402e40 <__explicit_bzero_chk@plt>:
  402e40:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402e44:	ldr	x17, [x16, #760]
  402e48:	add	x16, x16, #0x2f8
  402e4c:	br	x17

0000000000402e50 <read@plt>:
  402e50:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402e54:	ldr	x17, [x16, #768]
  402e58:	add	x16, x16, #0x300
  402e5c:	br	x17

0000000000402e60 <memchr@plt>:
  402e60:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402e64:	ldr	x17, [x16, #776]
  402e68:	add	x16, x16, #0x308
  402e6c:	br	x17

0000000000402e70 <mkstemp@plt>:
  402e70:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402e74:	ldr	x17, [x16, #784]
  402e78:	add	x16, x16, #0x310
  402e7c:	br	x17

0000000000402e80 <sysconf@plt>:
  402e80:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402e84:	ldr	x17, [x16, #792]
  402e88:	add	x16, x16, #0x318
  402e8c:	br	x17

0000000000402e90 <fputc_unlocked@plt>:
  402e90:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402e94:	ldr	x17, [x16, #800]
  402e98:	add	x16, x16, #0x320
  402e9c:	br	x17

0000000000402ea0 <__fxstat@plt>:
  402ea0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ea4:	ldr	x17, [x16, #808]
  402ea8:	add	x16, x16, #0x328
  402eac:	br	x17

0000000000402eb0 <dcgettext@plt>:
  402eb0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402eb4:	ldr	x17, [x16, #816]
  402eb8:	add	x16, x16, #0x330
  402ebc:	br	x17

0000000000402ec0 <fputs_unlocked@plt>:
  402ec0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ec4:	ldr	x17, [x16, #824]
  402ec8:	add	x16, x16, #0x338
  402ecc:	br	x17

0000000000402ed0 <strcoll@plt>:
  402ed0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ed4:	ldr	x17, [x16, #832]
  402ed8:	add	x16, x16, #0x340
  402edc:	br	x17

0000000000402ee0 <__freading@plt>:
  402ee0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ee4:	ldr	x17, [x16, #840]
  402ee8:	add	x16, x16, #0x348
  402eec:	br	x17

0000000000402ef0 <ftruncate@plt>:
  402ef0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402ef4:	ldr	x17, [x16, #848]
  402ef8:	add	x16, x16, #0x350
  402efc:	br	x17

0000000000402f00 <dup2@plt>:
  402f00:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402f04:	ldr	x17, [x16, #856]
  402f08:	add	x16, x16, #0x358
  402f0c:	br	x17

0000000000402f10 <sigaddset@plt>:
  402f10:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402f14:	ldr	x17, [x16, #864]
  402f18:	add	x16, x16, #0x360
  402f1c:	br	x17

0000000000402f20 <iswprint@plt>:
  402f20:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402f24:	ldr	x17, [x16, #872]
  402f28:	add	x16, x16, #0x368
  402f2c:	br	x17

0000000000402f30 <__assert_fail@plt>:
  402f30:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402f34:	ldr	x17, [x16, #880]
  402f38:	add	x16, x16, #0x370
  402f3c:	br	x17

0000000000402f40 <__errno_location@plt>:
  402f40:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402f44:	ldr	x17, [x16, #888]
  402f48:	add	x16, x16, #0x378
  402f4c:	br	x17

0000000000402f50 <execlp@plt>:
  402f50:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402f54:	ldr	x17, [x16, #896]
  402f58:	add	x16, x16, #0x380
  402f5c:	br	x17

0000000000402f60 <getenv@plt>:
  402f60:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402f64:	ldr	x17, [x16, #904]
  402f68:	add	x16, x16, #0x388
  402f6c:	br	x17

0000000000402f70 <__xstat@plt>:
  402f70:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402f74:	ldr	x17, [x16, #912]
  402f78:	add	x16, x16, #0x390
  402f7c:	br	x17

0000000000402f80 <pthread_mutex_lock@plt>:
  402f80:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402f84:	ldr	x17, [x16, #920]
  402f88:	add	x16, x16, #0x398
  402f8c:	br	x17

0000000000402f90 <pthread_mutex_unlock@plt>:
  402f90:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402f94:	ldr	x17, [x16, #928]
  402f98:	add	x16, x16, #0x3a0
  402f9c:	br	x17

0000000000402fa0 <waitpid@plt>:
  402fa0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402fa4:	ldr	x17, [x16, #936]
  402fa8:	add	x16, x16, #0x3a8
  402fac:	br	x17

0000000000402fb0 <unlink@plt>:
  402fb0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402fb4:	ldr	x17, [x16, #944]
  402fb8:	add	x16, x16, #0x3b0
  402fbc:	br	x17

0000000000402fc0 <setlocale@plt>:
  402fc0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402fc4:	ldr	x17, [x16, #952]
  402fc8:	add	x16, x16, #0x3b8
  402fcc:	br	x17

0000000000402fd0 <ferror@plt>:
  402fd0:	adrp	x16, 424000 <mbrtowc@GLIBC_2.17>
  402fd4:	ldr	x17, [x16, #960]
  402fd8:	add	x16, x16, #0x3c0
  402fdc:	br	x17

Disassembly of section .text:

0000000000402fe0 <_obstack_begin@@Base-0xd248>:
  402fe0:	mov	x29, #0x0                   	// #0
  402fe4:	mov	x30, #0x0                   	// #0
  402fe8:	mov	x5, x0
  402fec:	ldr	x1, [sp]
  402ff0:	add	x2, sp, #0x8
  402ff4:	mov	x6, sp
  402ff8:	movz	x0, #0x0, lsl #48
  402ffc:	movk	x0, #0x0, lsl #32
  403000:	movk	x0, #0x40, lsl #16
  403004:	movk	x0, #0x34f0
  403008:	movz	x3, #0x0, lsl #48
  40300c:	movk	x3, #0x0, lsl #32
  403010:	movk	x3, #0x41, lsl #16
  403014:	movk	x3, #0x1040
  403018:	movz	x4, #0x0, lsl #48
  40301c:	movk	x4, #0x0, lsl #32
  403020:	movk	x4, #0x41, lsl #16
  403024:	movk	x4, #0x10c0
  403028:	bl	402af0 <__libc_start_main@plt>
  40302c:	bl	402c20 <abort@plt>
  403030:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x12ac0>
  403034:	ldr	x0, [x0, #4064]
  403038:	cbz	x0, 403040 <ferror@plt+0x70>
  40303c:	b	402be0 <__gmon_start__@plt>
  403040:	ret
  403044:	nop
  403048:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40304c:	add	x0, x0, #0x538
  403050:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403054:	add	x1, x1, #0x538
  403058:	cmp	x1, x0
  40305c:	b.eq	403074 <ferror@plt+0xa4>  // b.none
  403060:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  403064:	ldr	x1, [x1, #280]
  403068:	cbz	x1, 403074 <ferror@plt+0xa4>
  40306c:	mov	x16, x1
  403070:	br	x16
  403074:	ret
  403078:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40307c:	add	x0, x0, #0x538
  403080:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403084:	add	x1, x1, #0x538
  403088:	sub	x1, x1, x0
  40308c:	lsr	x2, x1, #63
  403090:	add	x1, x2, x1, asr #3
  403094:	cmp	xzr, x1, asr #1
  403098:	asr	x1, x1, #1
  40309c:	b.eq	4030b4 <ferror@plt+0xe4>  // b.none
  4030a0:	adrp	x2, 411000 <_obstack_memory_used@@Base+0xac0>
  4030a4:	ldr	x2, [x2, #288]
  4030a8:	cbz	x2, 4030b4 <ferror@plt+0xe4>
  4030ac:	mov	x16, x2
  4030b0:	br	x16
  4030b4:	ret
  4030b8:	stp	x29, x30, [sp, #-32]!
  4030bc:	mov	x29, sp
  4030c0:	str	x19, [sp, #16]
  4030c4:	adrp	x19, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4030c8:	ldrb	w0, [x19, #1392]
  4030cc:	cbnz	w0, 4030dc <ferror@plt+0x10c>
  4030d0:	bl	403048 <ferror@plt+0x78>
  4030d4:	mov	w0, #0x1                   	// #1
  4030d8:	strb	w0, [x19, #1392]
  4030dc:	ldr	x19, [sp, #16]
  4030e0:	ldp	x29, x30, [sp], #32
  4030e4:	ret
  4030e8:	b	403078 <ferror@plt+0xa8>
  4030ec:	sub	sp, sp, #0xa0
  4030f0:	stp	x20, x19, [sp, #144]
  4030f4:	mov	w19, w0
  4030f8:	stp	x29, x30, [sp, #112]
  4030fc:	stp	x22, x21, [sp, #128]
  403100:	add	x29, sp, #0x70
  403104:	cbnz	w0, 4034b4 <ferror@plt+0x4e4>
  403108:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  40310c:	add	x1, x1, #0x813
  403110:	mov	w2, #0x5                   	// #5
  403114:	mov	x0, xzr
  403118:	bl	402eb0 <dcgettext@plt>
  40311c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403120:	ldr	x2, [x8, #3024]
  403124:	mov	x1, x0
  403128:	mov	w0, #0x1                   	// #1
  40312c:	mov	x3, x2
  403130:	bl	402b10 <__printf_chk@plt>
  403134:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  403138:	add	x1, x1, #0x85a
  40313c:	mov	w2, #0x5                   	// #5
  403140:	mov	x0, xzr
  403144:	bl	402eb0 <dcgettext@plt>
  403148:	adrp	x22, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40314c:	ldr	x1, [x22, #1368]
  403150:	bl	402ec0 <fputs_unlocked@plt>
  403154:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403158:	add	x1, x1, #0xa2a
  40315c:	mov	w2, #0x5                   	// #5
  403160:	mov	x0, xzr
  403164:	bl	402eb0 <dcgettext@plt>
  403168:	ldr	x1, [x22, #1368]
  40316c:	bl	402ec0 <fputs_unlocked@plt>
  403170:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403174:	add	x1, x1, #0xa62
  403178:	mov	w2, #0x5                   	// #5
  40317c:	mov	x0, xzr
  403180:	bl	402eb0 <dcgettext@plt>
  403184:	ldr	x1, [x22, #1368]
  403188:	bl	402ec0 <fputs_unlocked@plt>
  40318c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  403190:	add	x1, x1, #0x899
  403194:	mov	w2, #0x5                   	// #5
  403198:	mov	x0, xzr
  40319c:	bl	402eb0 <dcgettext@plt>
  4031a0:	ldr	x1, [x22, #1368]
  4031a4:	bl	402ec0 <fputs_unlocked@plt>
  4031a8:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  4031ac:	add	x1, x1, #0x8ad
  4031b0:	mov	w2, #0x5                   	// #5
  4031b4:	mov	x0, xzr
  4031b8:	bl	402eb0 <dcgettext@plt>
  4031bc:	ldr	x1, [x22, #1368]
  4031c0:	bl	402ec0 <fputs_unlocked@plt>
  4031c4:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  4031c8:	add	x1, x1, #0x979
  4031cc:	mov	w2, #0x5                   	// #5
  4031d0:	mov	x0, xzr
  4031d4:	bl	402eb0 <dcgettext@plt>
  4031d8:	ldr	x1, [x22, #1368]
  4031dc:	bl	402ec0 <fputs_unlocked@plt>
  4031e0:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  4031e4:	add	x1, x1, #0xa4c
  4031e8:	mov	w2, #0x5                   	// #5
  4031ec:	mov	x0, xzr
  4031f0:	bl	402eb0 <dcgettext@plt>
  4031f4:	ldr	x1, [x22, #1368]
  4031f8:	bl	402ec0 <fputs_unlocked@plt>
  4031fc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  403200:	add	x1, x1, #0xa98
  403204:	mov	w2, #0x5                   	// #5
  403208:	mov	x0, xzr
  40320c:	bl	402eb0 <dcgettext@plt>
  403210:	ldr	x1, [x22, #1368]
  403214:	bl	402ec0 <fputs_unlocked@plt>
  403218:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  40321c:	add	x1, x1, #0xbaa
  403220:	mov	w2, #0x5                   	// #5
  403224:	mov	x0, xzr
  403228:	bl	402eb0 <dcgettext@plt>
  40322c:	ldr	x1, [x22, #1368]
  403230:	bl	402ec0 <fputs_unlocked@plt>
  403234:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  403238:	add	x1, x1, #0xcc0
  40323c:	mov	w2, #0x5                   	// #5
  403240:	mov	x0, xzr
  403244:	bl	402eb0 <dcgettext@plt>
  403248:	ldr	x1, [x22, #1368]
  40324c:	bl	402ec0 <fputs_unlocked@plt>
  403250:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  403254:	add	x1, x1, #0xcd1
  403258:	mov	w2, #0x5                   	// #5
  40325c:	mov	x0, xzr
  403260:	bl	402eb0 <dcgettext@plt>
  403264:	ldr	x1, [x22, #1368]
  403268:	bl	402ec0 <fputs_unlocked@plt>
  40326c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  403270:	add	x1, x1, #0xd47
  403274:	mov	w2, #0x5                   	// #5
  403278:	mov	x0, xzr
  40327c:	bl	402eb0 <dcgettext@plt>
  403280:	ldr	x1, [x22, #1368]
  403284:	bl	402ec0 <fputs_unlocked@plt>
  403288:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  40328c:	add	x1, x1, #0xe5c
  403290:	mov	w2, #0x5                   	// #5
  403294:	mov	x0, xzr
  403298:	bl	402eb0 <dcgettext@plt>
  40329c:	ldr	x1, [x22, #1368]
  4032a0:	bl	402ec0 <fputs_unlocked@plt>
  4032a4:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  4032a8:	add	x1, x1, #0xfb8
  4032ac:	mov	w2, #0x5                   	// #5
  4032b0:	mov	x0, xzr
  4032b4:	bl	402eb0 <dcgettext@plt>
  4032b8:	ldr	x1, [x22, #1368]
  4032bc:	bl	402ec0 <fputs_unlocked@plt>
  4032c0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4032c4:	add	x1, x1, #0x48
  4032c8:	mov	w2, #0x5                   	// #5
  4032cc:	mov	x0, xzr
  4032d0:	bl	402eb0 <dcgettext@plt>
  4032d4:	ldr	x1, [x22, #1368]
  4032d8:	bl	402ec0 <fputs_unlocked@plt>
  4032dc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4032e0:	add	x1, x1, #0x120
  4032e4:	mov	w2, #0x5                   	// #5
  4032e8:	mov	x0, xzr
  4032ec:	bl	402eb0 <dcgettext@plt>
  4032f0:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4032f4:	mov	x1, x0
  4032f8:	add	x2, x2, #0x2e5
  4032fc:	mov	w0, #0x1                   	// #1
  403300:	bl	402b10 <__printf_chk@plt>
  403304:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403308:	add	x1, x1, #0x2ea
  40330c:	mov	w2, #0x5                   	// #5
  403310:	mov	x0, xzr
  403314:	bl	402eb0 <dcgettext@plt>
  403318:	ldr	x1, [x22, #1368]
  40331c:	bl	402ec0 <fputs_unlocked@plt>
  403320:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403324:	add	x1, x1, #0x32a
  403328:	mov	w2, #0x5                   	// #5
  40332c:	mov	x0, xzr
  403330:	bl	402eb0 <dcgettext@plt>
  403334:	ldr	x1, [x22, #1368]
  403338:	bl	402ec0 <fputs_unlocked@plt>
  40333c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403340:	add	x1, x1, #0x357
  403344:	mov	w2, #0x5                   	// #5
  403348:	mov	x0, xzr
  40334c:	bl	402eb0 <dcgettext@plt>
  403350:	ldr	x1, [x22, #1368]
  403354:	bl	402ec0 <fputs_unlocked@plt>
  403358:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40335c:	add	x1, x1, #0x38d
  403360:	mov	w2, #0x5                   	// #5
  403364:	mov	x0, xzr
  403368:	bl	402eb0 <dcgettext@plt>
  40336c:	ldr	x1, [x22, #1368]
  403370:	bl	402ec0 <fputs_unlocked@plt>
  403374:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403378:	add	x1, x1, #0x5e9
  40337c:	mov	w2, #0x5                   	// #5
  403380:	mov	x0, xzr
  403384:	bl	402eb0 <dcgettext@plt>
  403388:	ldr	x1, [x22, #1368]
  40338c:	bl	402ec0 <fputs_unlocked@plt>
  403390:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  403394:	add	x1, x1, #0x670
  403398:	mov	x0, sp
  40339c:	mov	w2, #0x70                  	// #112
  4033a0:	mov	x21, sp
  4033a4:	bl	402860 <memcpy@plt>
  4033a8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4033ac:	adrp	x20, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4033b0:	add	x1, x1, #0xaad
  4033b4:	add	x20, x20, #0x764
  4033b8:	mov	x0, x20
  4033bc:	bl	402ce0 <strcmp@plt>
  4033c0:	cbz	w0, 4033cc <ferror@plt+0x3fc>
  4033c4:	ldr	x1, [x21, #16]!
  4033c8:	cbnz	x1, 4033b8 <ferror@plt+0x3e8>
  4033cc:	ldr	x8, [x21, #8]
  4033d0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4033d4:	add	x1, x1, #0xb0c
  4033d8:	mov	w2, #0x5                   	// #5
  4033dc:	cmp	x8, #0x0
  4033e0:	mov	x0, xzr
  4033e4:	csel	x21, x20, x8, eq  // eq = none
  4033e8:	bl	402eb0 <dcgettext@plt>
  4033ec:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4033f0:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4033f4:	mov	x1, x0
  4033f8:	add	x2, x2, #0x876
  4033fc:	add	x3, x3, #0xb23
  403400:	mov	w0, #0x1                   	// #1
  403404:	bl	402b10 <__printf_chk@plt>
  403408:	mov	w0, #0x5                   	// #5
  40340c:	mov	x1, xzr
  403410:	bl	402fc0 <setlocale@plt>
  403414:	cbz	x0, 403448 <ferror@plt+0x478>
  403418:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40341c:	add	x1, x1, #0xb4b
  403420:	mov	w2, #0x3                   	// #3
  403424:	bl	402ad0 <strncmp@plt>
  403428:	cbz	w0, 403448 <ferror@plt+0x478>
  40342c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403430:	add	x1, x1, #0xb4f
  403434:	mov	w2, #0x5                   	// #5
  403438:	mov	x0, xzr
  40343c:	bl	402eb0 <dcgettext@plt>
  403440:	ldr	x1, [x22, #1368]
  403444:	bl	402ec0 <fputs_unlocked@plt>
  403448:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40344c:	add	x1, x1, #0xb96
  403450:	mov	w2, #0x5                   	// #5
  403454:	mov	x0, xzr
  403458:	bl	402eb0 <dcgettext@plt>
  40345c:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403460:	mov	x1, x0
  403464:	add	x2, x2, #0xb23
  403468:	mov	w0, #0x1                   	// #1
  40346c:	mov	x3, x20
  403470:	bl	402b10 <__printf_chk@plt>
  403474:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403478:	add	x1, x1, #0xbb1
  40347c:	mov	w2, #0x5                   	// #5
  403480:	mov	x0, xzr
  403484:	bl	402eb0 <dcgettext@plt>
  403488:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40348c:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403490:	add	x8, x8, #0x708
  403494:	add	x9, x9, #0xac9
  403498:	cmp	x21, x20
  40349c:	mov	x1, x0
  4034a0:	csel	x3, x9, x8, eq  // eq = none
  4034a4:	mov	w0, #0x1                   	// #1
  4034a8:	mov	x2, x21
  4034ac:	bl	402b10 <__printf_chk@plt>
  4034b0:	b	4034e8 <ferror@plt+0x518>
  4034b4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4034b8:	ldr	x20, [x8, #1344]
  4034bc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xac0>
  4034c0:	add	x1, x1, #0x7ec
  4034c4:	mov	w2, #0x5                   	// #5
  4034c8:	mov	x0, xzr
  4034cc:	bl	402eb0 <dcgettext@plt>
  4034d0:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4034d4:	ldr	x3, [x8, #3024]
  4034d8:	mov	x2, x0
  4034dc:	mov	w1, #0x1                   	// #1
  4034e0:	mov	x0, x20
  4034e4:	bl	402cc0 <__fprintf_chk@plt>
  4034e8:	mov	w0, w19
  4034ec:	bl	4028e0 <exit@plt>
  4034f0:	str	d10, [sp, #-128]!
  4034f4:	stp	d9, d8, [sp, #16]
  4034f8:	stp	x29, x30, [sp, #32]
  4034fc:	stp	x28, x27, [sp, #48]
  403500:	stp	x26, x25, [sp, #64]
  403504:	stp	x24, x23, [sp, #80]
  403508:	stp	x22, x21, [sp, #96]
  40350c:	stp	x20, x19, [sp, #112]
  403510:	mov	x29, sp
  403514:	sub	sp, sp, #0x360
  403518:	mov	w25, w0
  40351c:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403520:	add	x0, x0, #0x6ce
  403524:	mov	x24, x1
  403528:	bl	402f60 <getenv@plt>
  40352c:	mov	x23, x0
  403530:	bl	40c308 <ferror@plt+0x9338>
  403534:	mov	w9, #0xf250                	// #62032
  403538:	ldr	x8, [x24]
  40353c:	movk	w9, #0xfffc, lsl #16
  403540:	add	w9, w0, w9
  403544:	cmp	w9, #0x2b8
  403548:	cset	w9, hi  // hi = pmore
  40354c:	mov	x0, x8
  403550:	str	w9, [x29, #8]
  403554:	bl	40c384 <ferror@plt+0x93b4>
  403558:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40355c:	add	x1, x1, #0x708
  403560:	mov	w0, #0x6                   	// #6
  403564:	bl	402fc0 <setlocale@plt>
  403568:	adrp	x19, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40356c:	add	x19, x19, #0x87a
  403570:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403574:	str	x0, [sp, #136]
  403578:	add	x1, x1, #0x6de
  40357c:	mov	x0, x19
  403580:	bl	402ae0 <bindtextdomain@plt>
  403584:	mov	x0, x19
  403588:	bl	402ca0 <textdomain@plt>
  40358c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403590:	mov	w9, #0x2                   	// #2
  403594:	mov	w0, #0x3                   	// #3
  403598:	str	w9, [x8, #1232]
  40359c:	bl	40ab0c <ferror@plt+0x7b3c>
  4035a0:	and	w8, w0, #0x1
  4035a4:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4035a8:	mov	w0, #0x2                   	// #2
  4035ac:	strb	w8, [x9, #1400]
  4035b0:	bl	40ab0c <ferror@plt+0x7b3c>
  4035b4:	and	w8, w0, #0x1
  4035b8:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4035bc:	strb	w8, [x9, #1404]
  4035c0:	bl	4029d0 <localeconv@plt>
  4035c4:	ldr	x9, [x0]
  4035c8:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4035cc:	ldrb	w10, [x9]
  4035d0:	str	w10, [x8, #1408]
  4035d4:	cbz	w10, 4035e0 <ferror@plt+0x610>
  4035d8:	ldrb	w9, [x9, #1]
  4035dc:	cbz	w9, 4035e8 <ferror@plt+0x618>
  4035e0:	mov	w9, #0x2e                  	// #46
  4035e4:	str	w9, [x8, #1408]
  4035e8:	ldr	x9, [x0, #8]
  4035ec:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4035f0:	ldrb	w10, [x9]
  4035f4:	str	w10, [x8, #1412]
  4035f8:	cbz	w10, 403604 <ferror@plt+0x634>
  4035fc:	ldrb	w9, [x9, #1]
  403600:	cbz	w9, 40360c <ferror@plt+0x63c>
  403604:	mov	w9, #0xffffffff            	// #-1
  403608:	str	w9, [x8, #1412]
  40360c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403610:	strb	wzr, [x8, #1416]
  403614:	bl	402cf0 <__ctype_b_loc@plt>
  403618:	adrp	x26, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40361c:	adrp	x27, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403620:	adrp	x21, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403624:	adrp	x22, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403628:	mov	x19, x0
  40362c:	mov	x20, xzr
  403630:	add	x26, x26, #0x640
  403634:	add	x27, x27, #0x740
  403638:	mov	w28, #0x1                   	// #1
  40363c:	add	x21, x21, #0x840
  403640:	add	x22, x22, #0x940
  403644:	ldr	x8, [x19]
  403648:	mov	w0, w20
  40364c:	ldrh	w8, [x8, x20, lsl #1]
  403650:	tst	w8, #0x1
  403654:	bic	w10, w28, w8, lsr #14
  403658:	cset	w11, eq  // eq = none
  40365c:	cmp	x20, #0xa
  403660:	and	w9, w8, #0x1
  403664:	strb	w10, [x27, x20]
  403668:	cset	w10, ne  // ne = any
  40366c:	cset	w12, eq  // eq = none
  403670:	tst	w8, #0x8
  403674:	orr	w8, w9, w12
  403678:	cset	w9, eq  // eq = none
  40367c:	and	w10, w10, w11
  403680:	strb	w8, [x26, x20]
  403684:	and	w8, w9, w10
  403688:	strb	w8, [x21, x20]
  40368c:	bl	402a70 <toupper@plt>
  403690:	strb	w0, [x22, x20]
  403694:	add	x20, x20, #0x1
  403698:	cmp	x20, #0x100
  40369c:	b.ne	403644 <ferror@plt+0x674>  // b.any
  4036a0:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4036a4:	ldrb	w8, [x8, #1404]
  4036a8:	cbz	w8, 403748 <ferror@plt+0x778>
  4036ac:	mov	w27, #0xe                   	// #14
  4036b0:	adrp	x28, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4036b4:	mov	x26, xzr
  4036b8:	movk	w27, #0x2, lsl #16
  4036bc:	add	x28, x28, #0x3f0
  4036c0:	add	w0, w26, w27
  4036c4:	bl	402a40 <nl_langinfo@plt>
  4036c8:	mov	x20, x0
  4036cc:	bl	4028c0 <strlen@plt>
  4036d0:	mov	x21, x0
  4036d4:	add	x0, x0, #0x1
  4036d8:	bl	40efac <ferror@plt+0xbfdc>
  4036dc:	add	x8, x28, x26, lsl #4
  4036e0:	add	x26, x26, #0x1
  4036e4:	str	x0, [x8]
  4036e8:	str	w26, [x8, #8]
  4036ec:	mov	x8, xzr
  4036f0:	cbz	x21, 403720 <ferror@plt+0x750>
  4036f4:	ldr	x10, [x19]
  4036f8:	ldrb	w9, [x20]
  4036fc:	ldrh	w10, [x10, x9, lsl #1]
  403700:	tbnz	w10, #0, 403714 <ferror@plt+0x744>
  403704:	ldrb	w9, [x22, x9]
  403708:	add	x10, x8, #0x1
  40370c:	strb	w9, [x0, x8]
  403710:	mov	x8, x10
  403714:	subs	x21, x21, #0x1
  403718:	add	x20, x20, #0x1
  40371c:	b.ne	4036f4 <ferror@plt+0x724>  // b.any
  403720:	cmp	x26, #0xc
  403724:	strb	wzr, [x0, x8]
  403728:	b.ne	4036c0 <ferror@plt+0x6f0>  // b.any
  40372c:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403730:	adrp	x3, 406000 <ferror@plt+0x3030>
  403734:	add	x0, x0, #0x3f0
  403738:	add	x3, x3, #0xbc
  40373c:	mov	w1, #0xc                   	// #12
  403740:	mov	w2, #0x10                  	// #16
  403744:	bl	402970 <qsort@plt>
  403748:	adrp	x19, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40374c:	add	x19, x19, #0x590
  403750:	mov	x0, x19
  403754:	bl	402ab0 <sigemptyset@plt>
  403758:	adrp	x21, 411000 <_obstack_memory_used@@Base+0xac0>
  40375c:	mov	x22, xzr
  403760:	add	x21, x21, #0x1d8
  403764:	ldr	w20, [x21, x22]
  403768:	add	x2, sp, #0x98
  40376c:	mov	x1, xzr
  403770:	mov	w0, w20
  403774:	bl	402bb0 <sigaction@plt>
  403778:	ldr	x8, [sp, #152]
  40377c:	cmp	x8, #0x1
  403780:	b.eq	403790 <ferror@plt+0x7c0>  // b.none
  403784:	mov	x0, x19
  403788:	mov	w1, w20
  40378c:	bl	402f10 <sigaddset@plt>
  403790:	add	x22, x22, #0x4
  403794:	cmp	x22, #0x2c
  403798:	b.ne	403764 <ferror@plt+0x794>  // b.any
  40379c:	adrp	x19, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4037a0:	adrp	x8, 405000 <ferror@plt+0x2030>
  4037a4:	add	x9, sp, #0x98
  4037a8:	add	x19, x19, #0x590
  4037ac:	add	x8, x8, #0x7c0
  4037b0:	add	x0, x9, #0x8
  4037b4:	mov	w2, #0x80                  	// #128
  4037b8:	mov	x1, x19
  4037bc:	str	x8, [sp, #152]
  4037c0:	bl	402860 <memcpy@plt>
  4037c4:	mov	x22, xzr
  4037c8:	str	wzr, [sp, #288]
  4037cc:	ldr	w20, [x21, x22]
  4037d0:	mov	x0, x19
  4037d4:	mov	w1, w20
  4037d8:	bl	402cd0 <sigismember@plt>
  4037dc:	cbz	w0, 4037f0 <ferror@plt+0x820>
  4037e0:	add	x1, sp, #0x98
  4037e4:	mov	w0, w20
  4037e8:	mov	x2, xzr
  4037ec:	bl	402bb0 <sigaction@plt>
  4037f0:	add	x22, x22, #0x4
  4037f4:	cmp	x22, #0x2c
  4037f8:	b.ne	4037cc <ferror@plt+0x7fc>  // b.any
  4037fc:	mov	w0, #0x11                  	// #17
  403800:	mov	x1, xzr
  403804:	bl	402a10 <signal@plt>
  403808:	adrp	x0, 405000 <ferror@plt+0x2030>
  40380c:	add	x0, x0, #0x814
  403810:	bl	4110c8 <_obstack_memory_used@@Base+0xb88>
  403814:	movi	v0.2d, #0x0
  403818:	mov	x9, #0xffffffffffffffff    	// #-1
  40381c:	add	x8, sp, #0x1b8
  403820:	stur	q0, [x8, #8]
  403824:	stur	q0, [x8, #24]
  403828:	stur	q0, [x8, #40]
  40382c:	stur	q0, [x8, #56]
  403830:	str	x9, [sp, #456]
  403834:	str	x9, [sp, #440]
  403838:	tbnz	w25, #31, 4053e4 <ferror@plt+0x2414>
  40383c:	cmp	x23, #0x0
  403840:	mov	w8, w25
  403844:	cset	w9, eq  // eq = none
  403848:	lsl	x0, x8, #3
  40384c:	str	w9, [sp, #112]
  403850:	bl	40efac <ferror@plt+0xbfdc>
  403854:	adrp	x9, 411000 <_obstack_memory_used@@Base+0xac0>
  403858:	ldr	q0, [x9, #304]
  40385c:	add	x8, sp, #0x200
  403860:	mov	x21, x0
  403864:	mov	x27, xzr
  403868:	mov	w28, wzr
  40386c:	mov	w19, wzr
  403870:	mov	w22, wzr
  403874:	adrp	x20, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403878:	add	x10, x8, #0x10
  40387c:	add	x9, x8, #0x8
  403880:	add	x8, x8, #0x18
  403884:	adrp	x26, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403888:	stp	xzr, xzr, [sp, #32]
  40388c:	str	xzr, [sp, #144]
  403890:	str	xzr, [sp, #80]
  403894:	str	x10, [sp, #120]
  403898:	str	q0, [sp, #96]
  40389c:	str	x9, [sp, #128]
  4038a0:	str	x8, [sp, #88]
  4038a4:	mov	w8, #0xffffffff            	// #-1
  4038a8:	cmn	w22, #0x1
  4038ac:	stur	w8, [x29, #-88]
  4038b0:	b.eq	4039fc <ferror@plt+0xa2c>  // b.none
  4038b4:	cbz	x23, 40390c <ferror@plt+0x93c>
  4038b8:	cbz	x27, 40390c <ferror@plt+0x93c>
  4038bc:	tst	w19, #0xff
  4038c0:	b.ne	4039fc <ferror@plt+0xa2c>  // b.any
  4038c4:	ldr	w8, [x29, #8]
  4038c8:	eor	w8, w8, #0x1
  4038cc:	tbnz	w8, #0, 4039fc <ferror@plt+0xa2c>
  4038d0:	ldrsw	x8, [x20, #1360]
  4038d4:	cmp	w8, w25
  4038d8:	b.eq	4039fc <ferror@plt+0xa2c>  // b.none
  4038dc:	ldr	x9, [x24, x8, lsl #3]
  4038e0:	ldrb	w10, [x9]
  4038e4:	cmp	w10, #0x2d
  4038e8:	b.ne	4039fc <ferror@plt+0xa2c>  // b.any
  4038ec:	ldrb	w10, [x9, #1]
  4038f0:	cmp	w10, #0x6f
  4038f4:	b.ne	4039fc <ferror@plt+0xa2c>  // b.any
  4038f8:	add	w8, w8, #0x1
  4038fc:	cmp	w8, w25
  403900:	b.ne	40390c <ferror@plt+0x93c>  // b.any
  403904:	ldrb	w8, [x9, #2]
  403908:	cbz	w8, 4039fc <ferror@plt+0xa2c>
  40390c:	adrp	x2, 411000 <_obstack_memory_used@@Base+0xac0>
  403910:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xac0>
  403914:	sub	x4, x29, #0x58
  403918:	mov	w0, w25
  40391c:	mov	x1, x24
  403920:	add	x2, x2, #0x204
  403924:	add	x3, x3, #0x228
  403928:	bl	402cb0 <getopt_long@plt>
  40392c:	sub	w8, w0, #0x43
  403930:	mov	w22, w0
  403934:	cmp	w8, #0x37
  403938:	b.hi	403974 <ferror@plt+0x9a4>  // b.pmore
  40393c:	adrp	x11, 411000 <_obstack_memory_used@@Base+0xac0>
  403940:	add	x11, x11, #0x14a
  403944:	adr	x9, 403958 <ferror@plt+0x988>
  403948:	ldrh	w10, [x11, x8, lsl #1]
  40394c:	add	x9, x9, x10, lsl #2
  403950:	mov	w8, #0x1                   	// #1
  403954:	br	x9
  403958:	add	x0, sp, #0x98
  40395c:	add	x1, sp, #0x1b8
  403960:	mov	w2, #0x2                   	// #2
  403964:	strb	w22, [sp, #152]
  403968:	strb	wzr, [sp, #153]
  40396c:	bl	405980 <ferror@plt+0x29b0>
  403970:	b	403a20 <ferror@plt+0xa50>
  403974:	sub	w8, w22, #0x100
  403978:	cmp	w8, #0x7
  40397c:	b.hi	4039d8 <ferror@plt+0xa08>  // b.pmore
  403980:	adrp	x11, 411000 <_obstack_memory_used@@Base+0xac0>
  403984:	add	x11, x11, #0x1ba
  403988:	adr	x9, 403998 <ferror@plt+0x9c8>
  40398c:	ldrb	w10, [x11, x8]
  403990:	add	x9, x9, x10, lsl #2
  403994:	br	x9
  403998:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40399c:	ldr	x1, [x8, #1352]
  4039a0:	cbz	x1, 404024 <ferror@plt+0x1054>
  4039a4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4039a8:	ldr	x5, [x8, #1224]
  4039ac:	adrp	x22, 411000 <_obstack_memory_used@@Base+0xac0>
  4039b0:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4039b4:	adrp	x2, 411000 <_obstack_memory_used@@Base+0xac0>
  4039b8:	add	x22, x22, #0x648
  4039bc:	mov	w4, #0x1                   	// #1
  4039c0:	add	x0, x0, #0x769
  4039c4:	add	x2, x2, #0x650
  4039c8:	mov	x3, x22
  4039cc:	bl	409774 <ferror@plt+0x67a4>
  4039d0:	ldrb	w22, [x22, x0]
  4039d4:	b	404028 <ferror@plt+0x1058>
  4039d8:	add	w8, w22, #0x3
  4039dc:	cmp	w8, #0x4
  4039e0:	b.hi	4056b0 <ferror@plt+0x26e0>  // b.pmore
  4039e4:	adrp	x11, 411000 <_obstack_memory_used@@Base+0xac0>
  4039e8:	add	x11, x11, #0x140
  4039ec:	adr	x9, 4039fc <ferror@plt+0xa2c>
  4039f0:	ldrh	w10, [x11, x8, lsl #1]
  4039f4:	add	x9, x9, x10, lsl #2
  4039f8:	br	x9
  4039fc:	ldrsw	x8, [x20, #1360]
  403a00:	cmp	w8, w25
  403a04:	b.ge	404150 <ferror@plt+0x1180>  // b.tcont
  403a08:	add	w9, w8, #0x1
  403a0c:	str	w9, [x20, #1360]
  403a10:	ldr	x8, [x24, x8, lsl #3]
  403a14:	add	x9, x27, #0x1
  403a18:	str	x8, [x21, x27, lsl #3]
  403a1c:	mov	x27, x9
  403a20:	mov	w8, w28
  403a24:	mov	w28, w8
  403a28:	b	4038a4 <ferror@plt+0x8d4>
  403a2c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403a30:	ldr	x8, [x8, #1352]
  403a34:	ldrb	w9, [x8]
  403a38:	cmp	w9, #0x2b
  403a3c:	b.ne	404074 <ferror@plt+0x10a4>  // b.any
  403a40:	ldrsw	x9, [x20, #1360]
  403a44:	mov	w22, w28
  403a48:	mov	w28, w19
  403a4c:	cmp	w9, w25
  403a50:	b.eq	403f7c <ferror@plt+0xfac>  // b.none
  403a54:	ldr	x9, [x24, x9, lsl #3]
  403a58:	ldrb	w10, [x9]
  403a5c:	cmp	w10, #0x2d
  403a60:	b.ne	403f7c <ferror@plt+0xfac>  // b.any
  403a64:	ldrb	w9, [x9, #1]
  403a68:	sub	w9, w9, #0x30
  403a6c:	cmp	w9, #0xa
  403a70:	cset	w19, cc  // cc = lo, ul, last
  403a74:	b	403f80 <ferror@plt+0xfb0>
  403a78:	ldursw	x8, [x29, #-88]
  403a7c:	add	x3, sp, #0x250
  403a80:	mov	w2, #0xa                   	// #10
  403a84:	mov	x1, xzr
  403a88:	str	x8, [sp, #56]
  403a8c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403a90:	ldr	x0, [x8, #1352]
  403a94:	mov	x4, xzr
  403a98:	mov	w22, w28
  403a9c:	str	x0, [sp, #72]
  403aa0:	bl	40f8c8 <ferror@plt+0xc8f8>
  403aa4:	mov	w28, w0
  403aa8:	add	x1, sp, #0x98
  403aac:	mov	w0, #0x7                   	// #7
  403ab0:	bl	402e20 <getrlimit@plt>
  403ab4:	ldr	w8, [sp, #152]
  403ab8:	cmp	w0, #0x0
  403abc:	mov	w9, #0x11                  	// #17
  403ac0:	sub	w8, w8, #0x3
  403ac4:	csel	w26, w8, w9, eq  // eq = none
  403ac8:	cbnz	w28, 4053e8 <ferror@plt+0x2418>
  403acc:	ldr	x8, [sp, #592]
  403ad0:	adrp	x10, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403ad4:	lsr	x9, x8, #32
  403ad8:	str	w8, [x10, #1000]
  403adc:	cbnz	x9, 4053f0 <ferror@plt+0x2420>
  403ae0:	cmp	w8, #0x1
  403ae4:	b.ls	405464 <ferror@plt+0x2494>  // b.plast
  403ae8:	cmp	w26, w8
  403aec:	b.cc	4053f0 <ferror@plt+0x2420>  // b.lo, b.ul, b.last
  403af0:	mov	w10, w22
  403af4:	mov	w22, #0x104                 	// #260
  403af8:	mov	w8, w10
  403afc:	b	404060 <ferror@plt+0x1090>
  403b00:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403b04:	mov	w9, #0x1                   	// #1
  403b08:	mov	w22, #0x102                 	// #258
  403b0c:	strb	w9, [x8, #1560]
  403b10:	b	403a20 <ferror@plt+0xa50>
  403b14:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403b18:	ldr	x0, [x8, #1352]
  403b1c:	bl	405b00 <ferror@plt+0x2b30>
  403b20:	mov	w22, #0x54                  	// #84
  403b24:	b	403a20 <ferror@plt+0xa50>
  403b28:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403b2c:	ldr	x8, [x8, #1352]
  403b30:	mov	w22, #0x103                 	// #259
  403b34:	str	x8, [sp, #144]
  403b38:	b	403a20 <ferror@plt+0xa50>
  403b3c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403b40:	mov	w26, w19
  403b44:	ldr	x19, [x8, #1352]
  403b48:	ldur	w22, [x29, #-88]
  403b4c:	adrp	x4, 413000 <_obstack_memory_used@@Base+0x2ac0>
  403b50:	add	x3, sp, #0x98
  403b54:	mov	w2, #0xa                   	// #10
  403b58:	mov	x0, x19
  403b5c:	mov	x1, xzr
  403b60:	add	x4, x4, #0x708
  403b64:	bl	40f438 <ferror@plt+0xc468>
  403b68:	cbz	w0, 403e04 <ferror@plt+0xe34>
  403b6c:	cmp	w0, #0x1
  403b70:	b.ne	4054ec <ferror@plt+0x251c>  // b.any
  403b74:	mov	x8, #0xffffffffffffffff    	// #-1
  403b78:	str	x8, [sp, #32]
  403b7c:	b	403e10 <ferror@plt+0xe40>
  403b80:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403b84:	ldr	x0, [x8, #1552]
  403b88:	mov	w26, w28
  403b8c:	mov	w28, w19
  403b90:	cbz	x0, 404044 <ferror@plt+0x1074>
  403b94:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403b98:	ldr	x19, [x8, #1352]
  403b9c:	mov	x1, x19
  403ba0:	bl	402ce0 <strcmp@plt>
  403ba4:	cbz	w0, 40404c <ferror@plt+0x107c>
  403ba8:	b	405504 <ferror@plt+0x2534>
  403bac:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403bb0:	mov	w26, w28
  403bb4:	mov	w28, w19
  403bb8:	ldr	x19, [x8, #1352]
  403bbc:	ldr	x0, [sp, #40]
  403bc0:	cbz	x0, 403bd0 <ferror@plt+0xc00>
  403bc4:	mov	x1, x19
  403bc8:	bl	402ce0 <strcmp@plt>
  403bcc:	cbnz	w0, 405510 <ferror@plt+0x2540>
  403bd0:	mov	w22, #0x105                 	// #261
  403bd4:	str	x19, [sp, #40]
  403bd8:	b	404058 <ferror@plt+0x1088>
  403bdc:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403be0:	mov	w26, w28
  403be4:	mov	w28, w19
  403be8:	ldr	x19, [x8, #1352]
  403bec:	ldr	x0, [sp, #80]
  403bf0:	cbz	x0, 403c00 <ferror@plt+0xc30>
  403bf4:	mov	x1, x19
  403bf8:	bl	402ce0 <strcmp@plt>
  403bfc:	cbnz	w0, 40551c <ferror@plt+0x254c>
  403c00:	mov	w22, #0x6f                  	// #111
  403c04:	str	x19, [sp, #80]
  403c08:	b	404058 <ferror@plt+0x1088>
  403c0c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403c10:	ldr	x1, [x8, #1352]
  403c14:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403c18:	ldr	x5, [x8, #1224]
  403c1c:	adrp	x22, 411000 <_obstack_memory_used@@Base+0xac0>
  403c20:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403c24:	adrp	x2, 411000 <_obstack_memory_used@@Base+0xac0>
  403c28:	add	x22, x22, #0x608
  403c2c:	mov	w4, #0x1                   	// #1
  403c30:	add	x0, x0, #0x762
  403c34:	add	x2, x2, #0x610
  403c38:	mov	x3, x22
  403c3c:	bl	409774 <ferror@plt+0x67a4>
  403c40:	ldrb	w22, [x22, x0]
  403c44:	b	403958 <ferror@plt+0x988>
  403c48:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403c4c:	mov	w9, #0x1                   	// #1
  403c50:	strb	w9, [x8, #1562]
  403c54:	mov	w22, #0x75                  	// #117
  403c58:	b	403a20 <ferror@plt+0xa50>
  403c5c:	ldr	w8, [x20, #1360]
  403c60:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403c64:	ldr	x9, [x9, #1352]
  403c68:	sub	w10, w8, #0x1
  403c6c:	ldr	x10, [x24, w10, sxtw #3]
  403c70:	cmp	x9, x10
  403c74:	b.ne	403c98 <ferror@plt+0xcc8>  // b.any
  403c78:	ldrb	w10, [x9], #1
  403c7c:	sub	w11, w10, #0x30
  403c80:	cmp	w11, #0xa
  403c84:	b.cc	403c78 <ferror@plt+0xca8>  // b.lo, b.ul, b.last
  403c88:	cmp	w10, #0x0
  403c8c:	cset	w9, ne  // ne = any
  403c90:	sub	w8, w8, w9
  403c94:	str	w8, [x20, #1360]
  403c98:	mov	w22, #0x79                  	// #121
  403c9c:	b	403a20 <ferror@plt+0xa50>
  403ca0:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403ca4:	mov	w9, #0x1                   	// #1
  403ca8:	strb	w9, [x8, #1561]
  403cac:	mov	w22, #0x73                  	// #115
  403cb0:	b	403a20 <ferror@plt+0xa50>
  403cb4:	mov	w8, #0x1                   	// #1
  403cb8:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403cbc:	strb	w8, [x9, #1563]
  403cc0:	mov	w22, #0x7a                  	// #122
  403cc4:	b	403a20 <ferror@plt+0xa50>
  403cc8:	ldur	w8, [x29, #-88]
  403ccc:	adrp	x4, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403cd0:	sub	x1, x29, #0xd8
  403cd4:	add	x3, sp, #0x98
  403cd8:	str	w8, [sp, #72]
  403cdc:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403ce0:	ldr	x22, [x8, #1352]
  403ce4:	mov	w2, #0xa                   	// #10
  403ce8:	add	x4, x4, #0xe71
  403cec:	mov	x0, x22
  403cf0:	bl	40f8c8 <ferror@plt+0xc8f8>
  403cf4:	cmp	w0, #0x2
  403cf8:	b.eq	403e20 <ferror@plt+0xe50>  // b.none
  403cfc:	cbnz	w0, 4055b0 <ferror@plt+0x25e0>
  403d00:	ldur	x8, [x29, #-216]
  403d04:	ldurb	w8, [x8, #-1]
  403d08:	sub	w8, w8, #0x30
  403d0c:	cmp	w8, #0x9
  403d10:	b.hi	403e84 <ferror@plt+0xeb4>  // b.pmore
  403d14:	ldr	x8, [sp, #152]
  403d18:	lsr	x9, x8, #54
  403d1c:	cbnz	x9, 4055ac <ferror@plt+0x25dc>
  403d20:	lsl	x8, x8, #10
  403d24:	b	403e80 <ferror@plt+0xeb0>
  403d28:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403d2c:	ldr	x0, [x8, #1352]
  403d30:	ldrb	w8, [x0]
  403d34:	cbz	w8, 405528 <ferror@plt+0x2558>
  403d38:	ldrb	w9, [x0, #1]
  403d3c:	cbz	w9, 403d54 <ferror@plt+0xd84>
  403d40:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403d44:	add	x1, x1, #0x84a
  403d48:	bl	402ce0 <strcmp@plt>
  403d4c:	cbnz	w0, 405534 <ferror@plt+0x2564>
  403d50:	mov	w8, wzr
  403d54:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403d58:	ldr	w9, [x9, #984]
  403d5c:	cmp	w9, #0x100
  403d60:	b.eq	403d6c <ferror@plt+0xd9c>  // b.none
  403d64:	cmp	w9, w8
  403d68:	b.ne	405560 <ferror@plt+0x2590>  // b.any
  403d6c:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403d70:	str	w8, [x9, #984]
  403d74:	mov	w22, #0x74                  	// #116
  403d78:	b	403a20 <ferror@plt+0xa50>
  403d7c:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403d80:	ldr	x0, [x9, #1352]
  403d84:	add	x8, sp, #0x1b8
  403d88:	movi	v0.2d, #0x0
  403d8c:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403d90:	stur	q0, [x8, #88]
  403d94:	stur	q0, [x8, #120]
  403d98:	stur	q0, [x8, #104]
  403d9c:	stur	q0, [x8, #72]
  403da0:	mov	x8, #0xffffffffffffffff    	// #-1
  403da4:	add	x1, sp, #0x200
  403da8:	add	x2, x2, #0x799
  403dac:	str	xzr, [sp, #576]
  403db0:	add	x22, sp, #0x1b8
  403db4:	str	x8, [sp, #528]
  403db8:	bl	4058a8 <ferror@plt+0x28d8>
  403dbc:	ldr	x9, [sp, #512]
  403dc0:	sub	x8, x9, #0x1
  403dc4:	str	x8, [sp, #512]
  403dc8:	cbz	x9, 4055c8 <ferror@plt+0x25f8>
  403dcc:	ldrb	w9, [x0]
  403dd0:	cmp	w9, #0x2e
  403dd4:	b.ne	403eb8 <ferror@plt+0xee8>  // b.any
  403dd8:	ldr	x1, [sp, #128]
  403ddc:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403de0:	add	x0, x0, #0x1
  403de4:	add	x2, x2, #0x72b
  403de8:	bl	4058a8 <ferror@plt+0x28d8>
  403dec:	ldr	x8, [sp, #520]
  403df0:	sub	x9, x8, #0x1
  403df4:	str	x9, [sp, #520]
  403df8:	cbz	x8, 40556c <ferror@plt+0x259c>
  403dfc:	ldr	x8, [sp, #512]
  403e00:	b	403ebc <ferror@plt+0xeec>
  403e04:	ldr	x8, [sp, #152]
  403e08:	str	x8, [sp, #32]
  403e0c:	cbz	x8, 405580 <ferror@plt+0x25b0>
  403e10:	mov	w22, #0x107                 	// #263
  403e14:	mov	w8, w28
  403e18:	mov	w19, w26
  403e1c:	b	404060 <ferror@plt+0x1090>
  403e20:	ldur	x8, [x29, #-216]
  403e24:	ldurb	w9, [x8, #-1]
  403e28:	sub	w9, w9, #0x30
  403e2c:	cmp	w9, #0x9
  403e30:	b.hi	4055a4 <ferror@plt+0x25d4>  // b.pmore
  403e34:	ldrb	w9, [x8, #1]
  403e38:	cbnz	w9, 4055a4 <ferror@plt+0x25d4>
  403e3c:	ldrb	w8, [x8]
  403e40:	cmp	w8, #0x62
  403e44:	b.eq	403e84 <ferror@plt+0xeb4>  // b.none
  403e48:	cmp	w8, #0x25
  403e4c:	b.ne	4055a4 <ferror@plt+0x25d4>  // b.any
  403e50:	bl	40c068 <ferror@plt+0x9098>
  403e54:	ldr	d1, [sp, #152]
  403e58:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  403e5c:	ucvtf	d1, d1
  403e60:	fmul	d0, d0, d1
  403e64:	fmov	d1, x8
  403e68:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  403e6c:	fdiv	d0, d0, d1
  403e70:	fmov	d1, x8
  403e74:	fcmp	d0, d1
  403e78:	b.pl	4055ac <ferror@plt+0x25dc>  // b.nfrst
  403e7c:	fcvtzu	x8, d0
  403e80:	str	x8, [sp, #152]
  403e84:	ldr	x8, [sp, #152]
  403e88:	ldr	x9, [x26, #1592]
  403e8c:	cmp	x8, x9
  403e90:	b.cc	403eb0 <ferror@plt+0xee0>  // b.lo, b.ul, b.last
  403e94:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403e98:	ldr	w9, [x9, #1000]
  403e9c:	add	x9, x9, x9, lsl #4
  403ea0:	lsl	x10, x9, #1
  403ea4:	cmp	x8, x9, lsl #1
  403ea8:	csel	x8, x8, x10, hi  // hi = pmore
  403eac:	str	x8, [x26, #1592]
  403eb0:	mov	w22, #0x53                  	// #83
  403eb4:	b	403a20 <ferror@plt+0xa50>
  403eb8:	ldr	x9, [sp, #520]
  403ebc:	orr	x8, x8, x9
  403ec0:	cbnz	x8, 403ecc <ferror@plt+0xefc>
  403ec4:	mov	x8, #0xffffffffffffffff    	// #-1
  403ec8:	str	x8, [sp, #512]
  403ecc:	add	x1, sp, #0x200
  403ed0:	mov	w2, wzr
  403ed4:	bl	405980 <ferror@plt+0x29b0>
  403ed8:	ldrb	w8, [x0]
  403edc:	cmp	w8, #0x2c
  403ee0:	b.ne	403f38 <ferror@plt+0xf68>  // b.any
  403ee4:	ldr	x1, [sp, #120]
  403ee8:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403eec:	add	x0, x0, #0x1
  403ef0:	add	x2, x2, #0x7e5
  403ef4:	bl	4058a8 <ferror@plt+0x28d8>
  403ef8:	ldr	x8, [sp, #528]
  403efc:	sub	x9, x8, #0x1
  403f00:	str	x9, [sp, #528]
  403f04:	cbz	x8, 4055c8 <ferror@plt+0x25f8>
  403f08:	ldrb	w8, [x0]
  403f0c:	cmp	w8, #0x2e
  403f10:	b.ne	403f28 <ferror@plt+0xf58>  // b.any
  403f14:	ldr	x1, [sp, #88]
  403f18:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  403f1c:	add	x0, x0, #0x1
  403f20:	add	x2, x2, #0x72b
  403f24:	bl	4058a8 <ferror@plt+0x28d8>
  403f28:	add	x1, sp, #0x200
  403f2c:	mov	w2, #0x1                   	// #1
  403f30:	bl	405980 <ferror@plt+0x29b0>
  403f34:	b	403f40 <ferror@plt+0xf70>
  403f38:	ldr	q0, [sp, #96]
  403f3c:	stur	q0, [x22, #88]
  403f40:	ldrb	w8, [x0]
  403f44:	cbnz	w8, 4055dc <ferror@plt+0x260c>
  403f48:	add	x0, sp, #0x200
  403f4c:	mov	w1, #0x48                  	// #72
  403f50:	bl	40f15c <ferror@plt+0xc18c>
  403f54:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  403f58:	add	x9, x9, #0x620
  403f5c:	ldr	x10, [x9]
  403f60:	mov	x8, x9
  403f64:	add	x9, x10, #0x40
  403f68:	cbnz	x10, 403f5c <ferror@plt+0xf8c>
  403f6c:	str	x0, [x8]
  403f70:	str	xzr, [x0, #64]
  403f74:	mov	w22, #0x6b                  	// #107
  403f78:	b	403a20 <ferror@plt+0xa50>
  403f7c:	mov	w19, wzr
  403f80:	ldr	w9, [sp, #112]
  403f84:	ldr	w10, [x29, #8]
  403f88:	and	w9, w19, w9
  403f8c:	orr	w9, w10, w9
  403f90:	tbz	w9, #0, 404068 <ferror@plt+0x1098>
  403f94:	add	x9, sp, #0x1b8
  403f98:	movi	v0.2d, #0x0
  403f9c:	stur	q0, [x9, #88]
  403fa0:	stur	q0, [x9, #120]
  403fa4:	stur	q0, [x9, #104]
  403fa8:	stur	q0, [x9, #72]
  403fac:	mov	x9, #0xffffffffffffffff    	// #-1
  403fb0:	add	x0, x8, #0x1
  403fb4:	add	x1, sp, #0x200
  403fb8:	mov	x2, xzr
  403fbc:	str	xzr, [sp, #576]
  403fc0:	str	x9, [sp, #528]
  403fc4:	bl	4058a8 <ferror@plt+0x28d8>
  403fc8:	cbz	x0, 403fe8 <ferror@plt+0x1018>
  403fcc:	ldrb	w8, [x0]
  403fd0:	cmp	w8, #0x2e
  403fd4:	b.ne	403fe8 <ferror@plt+0x1018>  // b.any
  403fd8:	ldr	x1, [sp, #128]
  403fdc:	add	x0, x0, #0x1
  403fe0:	mov	x2, xzr
  403fe4:	bl	4058a8 <ferror@plt+0x28d8>
  403fe8:	ldr	x8, [sp, #512]
  403fec:	ldr	x9, [sp, #520]
  403ff0:	orr	x8, x8, x9
  403ff4:	cbnz	x8, 404000 <ferror@plt+0x1030>
  403ff8:	mov	x8, #0xffffffffffffffff    	// #-1
  403ffc:	str	x8, [sp, #512]
  404000:	cbz	x0, 404018 <ferror@plt+0x1048>
  404004:	add	x1, sp, #0x200
  404008:	mov	w2, wzr
  40400c:	bl	405980 <ferror@plt+0x29b0>
  404010:	ldrb	w8, [x0]
  404014:	cbz	w8, 40408c <ferror@plt+0x10bc>
  404018:	mov	w8, #0x1                   	// #1
  40401c:	str	w8, [x29, #8]
  404020:	b	40406c <ferror@plt+0x109c>
  404024:	mov	w22, #0x63                  	// #99
  404028:	ands	w8, w19, #0xff
  40402c:	b.eq	404038 <ferror@plt+0x1068>  // b.none
  404030:	cmp	w22, w8
  404034:	b.ne	4055f0 <ferror@plt+0x2620>  // b.any
  404038:	mov	w8, w28
  40403c:	mov	w19, w22
  404040:	b	403a24 <ferror@plt+0xa54>
  404044:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404048:	ldr	x19, [x8, #1352]
  40404c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404050:	str	x19, [x8, #1552]
  404054:	mov	w22, #0x101                 	// #257
  404058:	mov	w8, w26
  40405c:	mov	w19, w28
  404060:	adrp	x26, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404064:	b	403a24 <ferror@plt+0xa54>
  404068:	str	wzr, [x29, #8]
  40406c:	mov	w19, w28
  404070:	mov	w28, w22
  404074:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404078:	ldr	x8, [x8, #1352]
  40407c:	mov	w22, #0x1                   	// #1
  404080:	str	x8, [x21, x27, lsl #3]
  404084:	add	x27, x27, #0x1
  404088:	b	403a20 <ferror@plt+0xa50>
  40408c:	cbz	w19, 404104 <ferror@plt+0x1134>
  404090:	ldrsw	x8, [x20, #1360]
  404094:	ldr	x1, [sp, #120]
  404098:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40409c:	add	x2, x2, #0x6f0
  4040a0:	add	w9, w8, #0x1
  4040a4:	str	w9, [x20, #1360]
  4040a8:	ldr	x19, [x24, x8, lsl #3]
  4040ac:	add	x0, x19, #0x1
  4040b0:	bl	4058a8 <ferror@plt+0x28d8>
  4040b4:	cbz	x0, 4055fc <ferror@plt+0x262c>
  4040b8:	ldrb	w8, [x0]
  4040bc:	cmp	w8, #0x2e
  4040c0:	b.ne	4040d8 <ferror@plt+0x1108>  // b.any
  4040c4:	ldr	x1, [sp, #88]
  4040c8:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4040cc:	add	x0, x0, #0x1
  4040d0:	add	x2, x2, #0x72b
  4040d4:	bl	4058a8 <ferror@plt+0x28d8>
  4040d8:	ldr	x8, [sp, #536]
  4040dc:	cbnz	x8, 4040f0 <ferror@plt+0x1120>
  4040e0:	ldr	x8, [sp, #528]
  4040e4:	cbz	x8, 4040f0 <ferror@plt+0x1120>
  4040e8:	sub	x8, x8, #0x1
  4040ec:	str	x8, [sp, #528]
  4040f0:	add	x1, sp, #0x200
  4040f4:	mov	w2, #0x1                   	// #1
  4040f8:	bl	405980 <ferror@plt+0x29b0>
  4040fc:	ldrb	w8, [x0]
  404100:	cbnz	w8, 40561c <ferror@plt+0x264c>
  404104:	mov	w8, #0x1                   	// #1
  404108:	add	x0, sp, #0x200
  40410c:	mov	w1, #0x48                  	// #72
  404110:	strb	w8, [sp, #569]
  404114:	bl	40f15c <ferror@plt+0xc18c>
  404118:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40411c:	add	x9, x9, #0x620
  404120:	ldr	x10, [x9]
  404124:	mov	x8, x9
  404128:	add	x9, x10, #0x40
  40412c:	cbnz	x10, 404120 <ferror@plt+0x1150>
  404130:	str	x0, [x8]
  404134:	mov	w8, #0x1                   	// #1
  404138:	str	xzr, [x0, #64]
  40413c:	str	w8, [x29, #8]
  404140:	mov	w8, w22
  404144:	mov	w22, #0x1                   	// #1
  404148:	mov	w19, w28
  40414c:	b	403a24 <ferror@plt+0xa54>
  404150:	ldr	x24, [sp, #144]
  404154:	cbz	x24, 404220 <ferror@plt+0x1250>
  404158:	cbnz	x27, 405644 <ferror@plt+0x2674>
  40415c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404160:	add	x1, x1, #0xc50
  404164:	mov	x0, x24
  404168:	mov	w23, w19
  40416c:	bl	405ba4 <ferror@plt+0x2bd4>
  404170:	mov	x19, x0
  404174:	add	x0, sp, #0x98
  404178:	bl	40e2dc <ferror@plt+0xb30c>
  40417c:	add	x1, sp, #0x98
  404180:	mov	x0, x19
  404184:	bl	40e398 <ferror@plt+0xb3c8>
  404188:	tbz	w0, #0, 4056b8 <ferror@plt+0x26e8>
  40418c:	mov	x0, x19
  404190:	mov	x1, x24
  404194:	bl	405be0 <ferror@plt+0x2c10>
  404198:	ldr	x8, [sp, #152]
  40419c:	cbz	x8, 4056c4 <ferror@plt+0x26f4>
  4041a0:	mov	x0, x21
  4041a4:	bl	402d30 <free@plt>
  4041a8:	ldp	x27, x21, [sp, #152]
  4041ac:	adrp	x20, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4041b0:	mov	x19, xzr
  4041b4:	add	x20, x20, #0xf28
  4041b8:	cmp	x27, x19
  4041bc:	b.eq	404224 <ferror@plt+0x1254>  // b.none
  4041c0:	ldr	x22, [x21, x19, lsl #3]
  4041c4:	mov	x1, x20
  4041c8:	mov	x0, x22
  4041cc:	bl	402ce0 <strcmp@plt>
  4041d0:	cbz	w0, 405310 <ferror@plt+0x2340>
  4041d4:	ldrb	w8, [x22]
  4041d8:	add	x19, x19, #0x1
  4041dc:	cbnz	w8, 4041b8 <ferror@plt+0x11e8>
  4041e0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4041e4:	add	x1, x1, #0x940
  4041e8:	mov	w2, #0x5                   	// #5
  4041ec:	mov	x0, xzr
  4041f0:	bl	402eb0 <dcgettext@plt>
  4041f4:	mov	x20, x0
  4041f8:	mov	w1, #0x3                   	// #3
  4041fc:	mov	w0, wzr
  404200:	mov	x2, x24
  404204:	bl	40d7b0 <ferror@plt+0xa7e0>
  404208:	mov	x3, x0
  40420c:	mov	w0, #0x2                   	// #2
  404210:	mov	w1, wzr
  404214:	mov	x2, x20
  404218:	mov	x4, x19
  40421c:	bl	402900 <error@plt>
  404220:	mov	w23, w19
  404224:	adrp	x24, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404228:	ldr	x19, [x24, #1568]
  40422c:	cbz	x19, 4042c8 <ferror@plt+0x12f8>
  404230:	mov	w25, wzr
  404234:	mov	x22, x19
  404238:	mov	x0, x22
  40423c:	bl	405c6c <ferror@plt+0x2c9c>
  404240:	tbz	w0, #0, 4042a0 <ferror@plt+0x12d0>
  404244:	ldrb	w8, [x22, #55]
  404248:	cbnz	w8, 4042a0 <ferror@plt+0x12d0>
  40424c:	add	x8, sp, #0xd9
  404250:	ldur	q0, [x8, #255]
  404254:	str	q0, [x22, #32]
  404258:	ldrb	w8, [sp, #488]
  40425c:	strb	w8, [x22, #48]
  404260:	ldrb	w8, [sp, #489]
  404264:	strb	w8, [x22, #49]
  404268:	ldrb	w8, [sp, #494]
  40426c:	strb	w8, [x22, #54]
  404270:	ldrb	w8, [sp, #490]
  404274:	strb	w8, [x22, #50]
  404278:	ldrb	w8, [sp, #492]
  40427c:	strb	w8, [x22, #52]
  404280:	ldrb	w8, [sp, #493]
  404284:	strb	w8, [x22, #53]
  404288:	ldrb	w8, [sp, #496]
  40428c:	strb	w8, [x22, #56]
  404290:	ldrb	w8, [sp, #491]
  404294:	strb	w8, [x22, #51]
  404298:	ldrb	w8, [sp, #495]
  40429c:	strb	w8, [x22, #55]
  4042a0:	ldrb	w8, [x22, #51]
  4042a4:	ldr	x22, [x22, #64]
  4042a8:	and	w9, w25, #0x1
  4042ac:	orr	w8, w8, w9
  4042b0:	cmp	w8, #0x0
  4042b4:	cset	w25, ne  // ne = any
  4042b8:	cbnz	x22, 404238 <ferror@plt+0x1268>
  4042bc:	cbz	x19, 4042cc <ferror@plt+0x12fc>
  4042c0:	mov	w20, wzr
  4042c4:	b	404328 <ferror@plt+0x1358>
  4042c8:	mov	w25, wzr
  4042cc:	add	x0, sp, #0x1b8
  4042d0:	bl	405c6c <ferror@plt+0x2c9c>
  4042d4:	tbz	w0, #0, 4042e0 <ferror@plt+0x1310>
  4042d8:	mov	w20, wzr
  4042dc:	b	404374 <ferror@plt+0x13a4>
  4042e0:	add	x0, sp, #0x1b8
  4042e4:	mov	w1, #0x48                  	// #72
  4042e8:	bl	40f15c <ferror@plt+0xc18c>
  4042ec:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4042f0:	add	x8, x8, #0x620
  4042f4:	ldr	x10, [x8]
  4042f8:	mov	x9, x8
  4042fc:	add	x8, x10, #0x40
  404300:	cbnz	x10, 4042f4 <ferror@plt+0x1324>
  404304:	str	x0, [x9]
  404308:	str	xzr, [x0, #64]
  40430c:	ldrb	w8, [sp, #491]
  404310:	ldr	x19, [x24, #1568]
  404314:	mov	w20, #0x1                   	// #1
  404318:	orr	w8, w8, w25
  40431c:	cmp	w8, #0x0
  404320:	cset	w25, ne  // ne = any
  404324:	cbz	x19, 404374 <ferror@plt+0x13a4>
  404328:	ldrb	w8, [x19, #50]
  40432c:	ldrb	w9, [x19, #52]
  404330:	ldrb	w10, [x19, #53]
  404334:	ldr	x13, [x19, #32]
  404338:	ldrb	w11, [x19, #56]
  40433c:	ldrb	w12, [x19, #51]
  404340:	add	w8, w9, w8
  404344:	ldrb	w9, [x19, #54]
  404348:	cmp	x13, #0x0
  40434c:	add	w8, w8, w10
  404350:	orr	w11, w12, w11
  404354:	add	w8, w8, w9
  404358:	cset	w9, ne  // ne = any
  40435c:	orr	w9, w9, w11
  404360:	add	w8, w9, w8
  404364:	cmp	w8, #0x2
  404368:	b.cs	405348 <ferror@plt+0x2378>  // b.hs, b.nlast
  40436c:	ldr	x19, [x19, #64]
  404370:	cbnz	x19, 404328 <ferror@plt+0x1358>
  404374:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404378:	ldrb	w8, [x8, #1560]
  40437c:	mov	w19, w23
  404380:	str	w23, [sp, #28]
  404384:	cmp	w8, #0x1
  404388:	b.ne	4049b0 <ferror@plt+0x19e0>  // b.any
  40438c:	ldr	x8, [sp, #80]
  404390:	cbnz	x8, 40562c <ferror@plt+0x265c>
  404394:	tst	w19, #0xff
  404398:	b.ne	40562c <ferror@plt+0x265c>  // b.any
  40439c:	ldr	x8, [sp, #136]
  4043a0:	cbz	x8, 4043b8 <ferror@plt+0x13e8>
  4043a4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4043a8:	add	x1, x1, #0x708
  4043ac:	mov	w0, #0x3                   	// #3
  4043b0:	bl	402fc0 <setlocale@plt>
  4043b4:	cbnz	x0, 4043e4 <ferror@plt+0x1414>
  4043b8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4043bc:	add	x1, x1, #0x977
  4043c0:	mov	w2, #0x5                   	// #5
  4043c4:	mov	x0, xzr
  4043c8:	bl	402eb0 <dcgettext@plt>
  4043cc:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4043d0:	mov	x3, x0
  4043d4:	add	x2, x2, #0x2aa
  4043d8:	mov	w0, wzr
  4043dc:	mov	w1, wzr
  4043e0:	bl	402900 <error@plt>
  4043e4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4043e8:	ldrb	w8, [x8, #1400]
  4043ec:	str	w20, [sp, #72]
  4043f0:	str	x27, [sp, #112]
  4043f4:	cbz	w8, 40443c <ferror@plt+0x146c>
  4043f8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4043fc:	add	x1, x1, #0x98c
  404400:	mov	w2, #0x5                   	// #5
  404404:	mov	x0, xzr
  404408:	bl	402eb0 <dcgettext@plt>
  40440c:	mov	w20, w19
  404410:	mov	x19, x0
  404414:	mov	w0, #0x3                   	// #3
  404418:	mov	x1, xzr
  40441c:	bl	402fc0 <setlocale@plt>
  404420:	bl	40d8f4 <ferror@plt+0xa924>
  404424:	mov	x3, x0
  404428:	mov	w0, wzr
  40442c:	mov	w1, wzr
  404430:	mov	x2, x19
  404434:	mov	w19, w20
  404438:	b	404464 <ferror@plt+0x1494>
  40443c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404440:	add	x1, x1, #0x9bb
  404444:	mov	w2, #0x5                   	// #5
  404448:	mov	x0, xzr
  40444c:	bl	402eb0 <dcgettext@plt>
  404450:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  404454:	mov	x3, x0
  404458:	add	x2, x2, #0x2aa
  40445c:	mov	w0, wzr
  404460:	mov	w1, wzr
  404464:	bl	402900 <error@plt>
  404468:	sub	x0, x29, #0xd8
  40446c:	add	x1, sp, #0x1b8
  404470:	mov	w2, #0x48                  	// #72
  404474:	bl	402860 <memcpy@plt>
  404478:	ldr	x27, [x24, #1568]
  40447c:	cbz	x27, 4048a8 <ferror@plt+0x18d8>
  404480:	ldur	x10, [x29, #-184]
  404484:	str	w25, [sp, #12]
  404488:	str	x21, [sp, #16]
  40448c:	ldurb	w24, [x29, #-166]
  404490:	str	x10, [sp, #136]
  404494:	ldur	x10, [x29, #-176]
  404498:	ldurb	w25, [x29, #-164]
  40449c:	ldurb	w22, [x29, #-163]
  4044a0:	ldurb	w26, [x29, #-165]
  4044a4:	str	x10, [sp, #120]
  4044a8:	ldurb	w10, [x29, #-168]
  4044ac:	ldurb	w21, [x29, #-160]
  4044b0:	ldurb	w23, [x29, #-161]
  4044b4:	ldr	w20, [sp, #72]
  4044b8:	str	w10, [x29, #8]
  4044bc:	ldurb	w10, [x29, #-167]
  4044c0:	sub	x8, x29, #0x58
  4044c4:	add	x9, sp, #0x250
  4044c8:	orr	x8, x8, #0x1
  4044cc:	str	w10, [sp, #144]
  4044d0:	ldurb	w10, [x29, #-162]
  4044d4:	mov	w19, #0x1                   	// #1
  4044d8:	str	x8, [sp, #56]
  4044dc:	orr	x8, x9, #0x3
  4044e0:	str	w10, [sp, #128]
  4044e4:	str	x8, [sp, #48]
  4044e8:	str	w28, [sp, #68]
  4044ec:	ldrb	w8, [x27, #57]
  4044f0:	cbz	w8, 404614 <ferror@plt+0x1644>
  4044f4:	ldr	x8, [x27]
  4044f8:	str	w24, [sp, #88]
  4044fc:	ldr	x24, [x27, #16]
  404500:	sub	x1, x29, #0x28
  404504:	cmn	x8, #0x1
  404508:	csel	x20, xzr, x8, eq  // eq = none
  40450c:	mov	w8, #0x2b                  	// #43
  404510:	mov	x0, x20
  404514:	str	w23, [sp, #96]
  404518:	sturh	w8, [x29, #-88]
  40451c:	bl	40bcd4 <ferror@plt+0x8d04>
  404520:	mov	x1, x0
  404524:	ldr	x0, [sp, #56]
  404528:	mov	w2, #0x2d                  	// #45
  40452c:	bl	402d80 <__stpcpy_chk@plt>
  404530:	mov	w8, #0x6b2d                	// #27437
  404534:	mov	x28, x0
  404538:	movk	w8, #0x20, lsl #16
  40453c:	add	x0, x20, #0x1
  404540:	sub	x1, x29, #0x28
  404544:	str	w8, [sp, #592]
  404548:	bl	40bcd4 <ferror@plt+0x8d04>
  40454c:	mov	x1, x0
  404550:	ldr	x0, [sp, #48]
  404554:	mov	w2, #0x2c                  	// #44
  404558:	bl	402d80 <__stpcpy_chk@plt>
  40455c:	ldr	x8, [x27, #16]
  404560:	cmn	x8, #0x1
  404564:	b.eq	4045bc <ferror@plt+0x15ec>  // b.none
  404568:	mov	x23, x0
  40456c:	mov	w8, #0x2d20                	// #11552
  404570:	add	x0, x24, #0x1
  404574:	sub	x1, x29, #0x28
  404578:	strh	w8, [x28]
  40457c:	strb	wzr, [x28, #2]!
  404580:	bl	40bcd4 <ferror@plt+0x8d04>
  404584:	mov	x1, x0
  404588:	mov	x0, x28
  40458c:	bl	4029e0 <stpcpy@plt>
  404590:	mov	w8, #0x2c                  	// #44
  404594:	strh	w8, [x23], #1
  404598:	ldr	x8, [x27, #24]
  40459c:	sub	x1, x29, #0x28
  4045a0:	cmn	x8, #0x1
  4045a4:	add	x8, x24, #0x2
  4045a8:	csinc	x0, x8, x24, eq  // eq = none
  4045ac:	bl	40bcd4 <ferror@plt+0x8d04>
  4045b0:	mov	x1, x0
  4045b4:	mov	x0, x23
  4045b8:	bl	4029e0 <stpcpy@plt>
  4045bc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4045c0:	mov	w2, #0x5                   	// #5
  4045c4:	mov	x0, xzr
  4045c8:	add	x1, x1, #0xf2a
  4045cc:	bl	402eb0 <dcgettext@plt>
  4045d0:	mov	x20, x0
  4045d4:	sub	x1, x29, #0x58
  4045d8:	mov	w0, wzr
  4045dc:	bl	40d8e4 <ferror@plt+0xa914>
  4045e0:	mov	x23, x0
  4045e4:	add	x1, sp, #0x250
  4045e8:	mov	w0, #0x1                   	// #1
  4045ec:	bl	40d8e4 <ferror@plt+0xa914>
  4045f0:	mov	x4, x0
  4045f4:	mov	w0, wzr
  4045f8:	mov	w1, wzr
  4045fc:	mov	x2, x20
  404600:	mov	x3, x23
  404604:	bl	402900 <error@plt>
  404608:	ldp	w28, w20, [sp, #68]
  40460c:	ldr	w23, [sp, #96]
  404610:	ldr	w24, [sp, #88]
  404614:	ldr	x8, [x27]
  404618:	cmn	x8, #0x1
  40461c:	b.eq	40465c <ferror@plt+0x168c>  // b.none
  404620:	ldr	x9, [x27, #16]
  404624:	cmp	x9, x8
  404628:	b.cs	40465c <ferror@plt+0x168c>  // b.hs, b.nlast
  40462c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404630:	mov	w2, #0x5                   	// #5
  404634:	mov	x0, xzr
  404638:	add	x1, x1, #0xf57
  40463c:	bl	402eb0 <dcgettext@plt>
  404640:	mov	x2, x0
  404644:	mov	w0, wzr
  404648:	mov	w1, wzr
  40464c:	mov	x3, x19
  404650:	bl	402900 <error@plt>
  404654:	mov	w8, #0x1                   	// #1
  404658:	b	404660 <ferror@plt+0x1690>
  40465c:	mov	w8, wzr
  404660:	ldrb	w9, [x27, #50]
  404664:	cbnz	w9, 404678 <ferror@plt+0x16a8>
  404668:	ldrb	w9, [x27, #52]
  40466c:	cbnz	w9, 404678 <ferror@plt+0x16a8>
  404670:	ldrb	w9, [x27, #53]
  404674:	cbz	w9, 4046ec <ferror@plt+0x171c>
  404678:	mov	w9, #0x1                   	// #1
  40467c:	ldr	x10, [x27, #16]
  404680:	cbz	x10, 404690 <ferror@plt+0x16c0>
  404684:	mov	w10, wzr
  404688:	tbz	w8, #0, 4046a0 <ferror@plt+0x16d0>
  40468c:	b	40472c <ferror@plt+0x175c>
  404690:	ldr	x10, [x27, #24]
  404694:	cmp	x10, #0x0
  404698:	cset	w10, ne  // ne = any
  40469c:	tbnz	w8, #0, 40472c <ferror@plt+0x175c>
  4046a0:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4046a4:	ldr	w8, [x8, #984]
  4046a8:	cmp	w8, #0x100
  4046ac:	cset	w8, ne  // ne = any
  4046b0:	orr	w8, w20, w8
  4046b4:	orr	w8, w10, w8
  4046b8:	tbnz	w8, #0, 40472c <ferror@plt+0x175c>
  4046bc:	ldrb	w8, [x27, #48]
  4046c0:	cmp	w8, #0x0
  4046c4:	cset	w10, ne  // ne = any
  4046c8:	orr	w9, w9, w10
  4046cc:	cmp	w9, #0x1
  4046d0:	b.ne	404704 <ferror@plt+0x1734>  // b.any
  4046d4:	cbz	w8, 4046fc <ferror@plt+0x172c>
  4046d8:	ldrb	w8, [x27, #49]
  4046dc:	cbnz	w8, 40472c <ferror@plt+0x175c>
  4046e0:	ldr	x8, [x27, #24]
  4046e4:	cbnz	x8, 404704 <ferror@plt+0x1734>
  4046e8:	b	40472c <ferror@plt+0x175c>
  4046ec:	ldrb	w9, [x27, #54]
  4046f0:	cmp	w9, #0x0
  4046f4:	cset	w9, ne  // ne = any
  4046f8:	b	40467c <ferror@plt+0x16ac>
  4046fc:	ldr	x8, [x27, #8]
  404700:	cbz	x8, 4046d8 <ferror@plt+0x1708>
  404704:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404708:	mov	w2, #0x5                   	// #5
  40470c:	mov	x0, xzr
  404710:	add	x1, x1, #0xf82
  404714:	bl	402eb0 <dcgettext@plt>
  404718:	mov	x2, x0
  40471c:	mov	w0, wzr
  404720:	mov	w1, wzr
  404724:	mov	x3, x19
  404728:	bl	402900 <error@plt>
  40472c:	tbnz	w20, #0, 404788 <ferror@plt+0x17b8>
  404730:	ldrb	w8, [x27, #50]
  404734:	cbnz	w8, 404748 <ferror@plt+0x1778>
  404738:	ldrb	w8, [x27, #52]
  40473c:	cbnz	w8, 404748 <ferror@plt+0x1778>
  404740:	ldrb	w8, [x27, #53]
  404744:	cbz	w8, 404788 <ferror@plt+0x17b8>
  404748:	ldr	x8, [x27]
  40474c:	ldr	x9, [x27, #16]
  404750:	adds	x8, x8, #0x1
  404754:	csinc	x8, x8, xzr, cc  // cc = lo, ul, last
  404758:	cmp	x9, x8
  40475c:	b.cc	404788 <ferror@plt+0x17b8>  // b.lo, b.ul, b.last
  404760:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404764:	mov	w2, #0x5                   	// #5
  404768:	mov	x0, xzr
  40476c:	add	x1, x1, #0xfca
  404770:	bl	402eb0 <dcgettext@plt>
  404774:	mov	x2, x0
  404778:	mov	w0, wzr
  40477c:	mov	w1, wzr
  404780:	mov	x3, x19
  404784:	bl	402900 <error@plt>
  404788:	ldr	x9, [sp, #136]
  40478c:	cbz	x9, 40479c <ferror@plt+0x17cc>
  404790:	ldr	x8, [x27, #32]
  404794:	cmp	x9, x8
  404798:	csel	x9, xzr, x9, eq  // eq = none
  40479c:	ldr	x10, [sp, #120]
  4047a0:	str	x9, [sp, #136]
  4047a4:	cbz	x10, 4047bc <ferror@plt+0x17ec>
  4047a8:	ldr	x8, [x27, #40]
  4047ac:	cmp	x10, x8
  4047b0:	csel	x10, xzr, x10, eq  // eq = none
  4047b4:	str	x10, [sp, #120]
  4047b8:	b	4047c0 <ferror@plt+0x17f0>
  4047bc:	str	xzr, [sp, #120]
  4047c0:	ldrb	w8, [x27, #48]
  4047c4:	ldr	w10, [x29, #8]
  4047c8:	ldrb	w9, [x27, #49]
  4047cc:	add	x19, x19, #0x1
  4047d0:	eor	w8, w8, #0x1
  4047d4:	and	w10, w8, w10
  4047d8:	str	w10, [x29, #8]
  4047dc:	ldr	w10, [sp, #144]
  4047e0:	eor	w9, w9, #0x1
  4047e4:	ldrb	w8, [x27, #54]
  4047e8:	and	w10, w9, w10
  4047ec:	str	w10, [sp, #144]
  4047f0:	ldr	w10, [sp, #128]
  4047f4:	eor	w8, w8, #0x1
  4047f8:	ldrb	w9, [x27, #50]
  4047fc:	and	w10, w8, w10
  404800:	ldrb	w8, [x27, #52]
  404804:	eor	w9, w9, #0x1
  404808:	and	w24, w9, w24
  40480c:	ldrb	w9, [x27, #53]
  404810:	eor	w8, w8, #0x1
  404814:	and	w25, w8, w25
  404818:	ldrb	w8, [x27, #51]
  40481c:	eor	w9, w9, #0x1
  404820:	and	w22, w9, w22
  404824:	ldrb	w9, [x27, #56]
  404828:	eor	w8, w8, #0x1
  40482c:	and	w26, w8, w26
  404830:	ldrb	w8, [x27, #55]
  404834:	ldr	x27, [x27, #64]
  404838:	eor	w9, w9, #0x1
  40483c:	and	w21, w9, w21
  404840:	eor	w8, w8, #0x1
  404844:	and	w23, w8, w23
  404848:	str	w10, [sp, #128]
  40484c:	cbnz	x27, 4044ec <ferror@plt+0x151c>
  404850:	ldr	x8, [sp, #136]
  404854:	sturb	w25, [x29, #-164]
  404858:	sturb	w21, [x29, #-160]
  40485c:	ldr	x21, [sp, #16]
  404860:	stur	x8, [x29, #-184]
  404864:	ldr	x8, [sp, #120]
  404868:	ldr	w19, [sp, #28]
  40486c:	ldr	w25, [sp, #12]
  404870:	sturb	w26, [x29, #-165]
  404874:	stur	x8, [x29, #-176]
  404878:	ldr	w8, [x29, #8]
  40487c:	sturb	w24, [x29, #-166]
  404880:	adrp	x26, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404884:	adrp	x24, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404888:	sturb	w8, [x29, #-168]
  40488c:	ldr	w8, [sp, #144]
  404890:	sturb	w22, [x29, #-163]
  404894:	sturb	w23, [x29, #-161]
  404898:	sturb	w8, [x29, #-167]
  40489c:	ldr	w8, [sp, #128]
  4048a0:	sturb	w8, [x29, #-162]
  4048a4:	b	4048ac <ferror@plt+0x18dc>
  4048a8:	ldurb	w23, [x29, #-161]
  4048ac:	sub	x0, x29, #0xd8
  4048b0:	bl	405c6c <ferror@plt+0x2c9c>
  4048b4:	ldr	x27, [sp, #112]
  4048b8:	tbz	w0, #0, 4048f4 <ferror@plt+0x1924>
  4048bc:	tst	w23, #0xff
  4048c0:	b.eq	4049b0 <ferror@plt+0x19e0>  // b.none
  4048c4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4048c8:	ldrb	w8, [x8, #1561]
  4048cc:	tbnz	w8, #0, 4048e0 <ferror@plt+0x1910>
  4048d0:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4048d4:	ldrb	w9, [x9, #1562]
  4048d8:	cmp	w9, #0x1
  4048dc:	b.ne	40497c <ferror@plt+0x19ac>  // b.any
  4048e0:	ldr	x9, [x24, #1568]
  4048e4:	cbz	x9, 40496c <ferror@plt+0x199c>
  4048e8:	tbz	w8, #0, 404900 <ferror@plt+0x1930>
  4048ec:	mov	w23, #0x1                   	// #1
  4048f0:	b	404910 <ferror@plt+0x1940>
  4048f4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4048f8:	ldrb	w8, [x8, #1561]
  4048fc:	tbnz	w8, #0, 404910 <ferror@plt+0x1940>
  404900:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404904:	ldrb	w8, [x8, #1562]
  404908:	tbnz	w8, #0, 404910 <ferror@plt+0x1940>
  40490c:	sturb	wzr, [x29, #-161]
  404910:	sub	x0, x29, #0xd8
  404914:	add	x1, sp, #0x250
  404918:	bl	40625c <ferror@plt+0x328c>
  40491c:	add	x0, sp, #0x250
  404920:	bl	4028c0 <strlen@plt>
  404924:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404928:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40492c:	mov	x3, x0
  404930:	add	x1, x1, #0xff7
  404934:	add	x2, x2, #0xf
  404938:	mov	w4, #0x5                   	// #5
  40493c:	mov	x0, xzr
  404940:	bl	402df0 <dcngettext@plt>
  404944:	mov	x2, x0
  404948:	add	x3, sp, #0x250
  40494c:	mov	w0, wzr
  404950:	mov	w1, wzr
  404954:	bl	402900 <error@plt>
  404958:	tst	w23, #0xff
  40495c:	sturb	w23, [x29, #-161]
  404960:	b.eq	4049b0 <ferror@plt+0x19e0>  // b.none
  404964:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404968:	ldrb	w8, [x8, #1561]
  40496c:	tbnz	w8, #0, 4049b0 <ferror@plt+0x19e0>
  404970:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404974:	ldrb	w8, [x8, #1562]
  404978:	b	404980 <ferror@plt+0x19b0>
  40497c:	mov	w8, wzr
  404980:	ldr	x9, [x24, #1568]
  404984:	cbz	x9, 4049b0 <ferror@plt+0x19e0>
  404988:	cbnz	w8, 4049b0 <ferror@plt+0x19e0>
  40498c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  404990:	add	x1, x1, #0x29
  404994:	mov	w2, #0x5                   	// #5
  404998:	mov	x0, xzr
  40499c:	bl	402eb0 <dcgettext@plt>
  4049a0:	mov	x2, x0
  4049a4:	mov	w0, wzr
  4049a8:	mov	w1, wzr
  4049ac:	bl	402900 <error@plt>
  4049b0:	ldrb	w8, [sp, #495]
  4049b4:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4049b8:	strb	w8, [x9, #1576]
  4049bc:	cbz	w25, 404a14 <ferror@plt+0x1a44>
  4049c0:	ldr	x0, [sp, #40]
  4049c4:	mov	w1, #0x10                  	// #16
  4049c8:	mov	w20, w19
  4049cc:	bl	40da44 <ferror@plt+0xaa74>
  4049d0:	cbz	x0, 40573c <ferror@plt+0x276c>
  4049d4:	sub	x1, x29, #0xd8
  4049d8:	mov	w2, #0x10                  	// #16
  4049dc:	mov	x19, x0
  4049e0:	bl	40dc84 <ferror@plt+0xacb4>
  4049e4:	mov	x0, x19
  4049e8:	bl	40ddd8 <ferror@plt+0xae08>
  4049ec:	cbnz	w0, 40574c <ferror@plt+0x277c>
  4049f0:	adrp	x19, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4049f4:	add	x19, x19, #0xae0
  4049f8:	mov	x0, x19
  4049fc:	bl	409968 <ferror@plt+0x6998>
  404a00:	sub	x0, x29, #0xd8
  404a04:	mov	w1, #0x10                  	// #16
  404a08:	mov	x2, x19
  404a0c:	bl	40a568 <ferror@plt+0x7598>
  404a10:	mov	w19, w20
  404a14:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404a18:	ldr	x8, [x8, #1584]
  404a1c:	cbz	x8, 404bd8 <ferror@plt+0x1c08>
  404a20:	cbz	x27, 404bfc <ferror@plt+0x1c2c>
  404a24:	ldr	x8, [x26, #1592]
  404a28:	cbz	x8, 404a48 <ferror@plt+0x1a78>
  404a2c:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404a30:	ldr	w9, [x9, #1000]
  404a34:	add	x9, x9, x9, lsl #4
  404a38:	lsl	x10, x9, #1
  404a3c:	cmp	x8, x9, lsl #1
  404a40:	csel	x8, x8, x10, hi  // hi = pmore
  404a44:	str	x8, [x26, #1592]
  404a48:	tst	w19, #0xff
  404a4c:	b.eq	404c24 <ferror@plt+0x1c54>  // b.none
  404a50:	cmp	x27, #0x2
  404a54:	b.cs	4056e8 <ferror@plt+0x2718>  // b.hs, b.nlast
  404a58:	ldr	x8, [sp, #80]
  404a5c:	cbnz	x8, 405728 <ferror@plt+0x2758>
  404a60:	ldr	x19, [x21]
  404a64:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404a68:	add	x1, x1, #0xc50
  404a6c:	mov	x0, x19
  404a70:	bl	405ba4 <ferror@plt+0x2bd4>
  404a74:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404a78:	ldr	x8, [x8, #1200]
  404a7c:	ldr	x9, [x26, #1592]
  404a80:	adrp	x10, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404a84:	ldr	x24, [x24, #1568]
  404a88:	ldrb	w23, [x10, #1562]
  404a8c:	cmp	x8, x9
  404a90:	mov	x20, x0
  404a94:	csel	x2, x8, x9, hi  // hi = pmore
  404a98:	sub	x0, x29, #0xd8
  404a9c:	mov	w1, #0x20                  	// #32
  404aa0:	bl	406334 <ferror@plt+0x3364>
  404aa4:	sub	x0, x29, #0xd8
  404aa8:	mov	x1, x20
  404aac:	mov	x2, x19
  404ab0:	str	xzr, [sp, #592]
  404ab4:	bl	406398 <ferror@plt+0x33c8>
  404ab8:	mov	x21, xzr
  404abc:	tbz	w0, #0, 404cec <ferror@plt+0x1d1c>
  404ac0:	mov	x22, xzr
  404ac4:	mov	x25, xzr
  404ac8:	eor	w26, w23, #0x1
  404acc:	str	x20, [x29, #8]
  404ad0:	ldp	x27, x8, [x29, #-200]
  404ad4:	ldur	x9, [x29, #-216]
  404ad8:	mov	x20, x25
  404adc:	add	x28, x9, x8
  404ae0:	cbz	x22, 404af8 <ferror@plt+0x1b28>
  404ae4:	sub	x1, x28, #0x20
  404ae8:	add	x0, sp, #0x250
  404aec:	bl	4066ec <ferror@plt+0x371c>
  404af0:	cmp	w0, w26
  404af4:	b.ge	405308 <ferror@plt+0x2338>  // b.tcont
  404af8:	mov	x25, x24
  404afc:	sub	x24, x28, x27, lsl #5
  404b00:	sub	x23, x28, #0x40
  404b04:	add	x0, x23, #0x20
  404b08:	cmp	x24, x0
  404b0c:	b.cs	404b28 <ferror@plt+0x1b58>  // b.hs, b.nlast
  404b10:	mov	x1, x23
  404b14:	bl	4066ec <ferror@plt+0x371c>
  404b18:	cmp	w0, w26
  404b1c:	sub	x23, x23, #0x20
  404b20:	b.lt	404b04 <ferror@plt+0x1b34>  // b.tstop
  404b24:	b	404cf4 <ferror@plt+0x1d24>
  404b28:	ldr	x2, [x23, #40]
  404b2c:	mov	x24, x25
  404b30:	mov	x25, x20
  404b34:	cmp	x22, x2
  404b38:	b.cs	404b54 <ferror@plt+0x1b84>  // b.hs, b.nlast
  404b3c:	ldr	x20, [x29, #8]
  404b40:	lsl	x22, x22, #1
  404b44:	cbz	x22, 404b5c <ferror@plt+0x1b8c>
  404b48:	cmp	x22, x2
  404b4c:	b.cc	404b40 <ferror@plt+0x1b70>  // b.lo, b.ul, b.last
  404b50:	b	404b60 <ferror@plt+0x1b90>
  404b54:	ldr	x20, [x29, #8]
  404b58:	b	404b7c <ferror@plt+0x1bac>
  404b5c:	mov	x22, x2
  404b60:	mov	x0, x21
  404b64:	bl	402d30 <free@plt>
  404b68:	mov	x0, x22
  404b6c:	bl	40efac <ferror@plt+0xbfdc>
  404b70:	str	x0, [sp, #592]
  404b74:	ldr	x2, [x23, #40]
  404b78:	mov	x21, x0
  404b7c:	ldr	x1, [x23, #32]
  404b80:	mov	x0, x21
  404b84:	add	x25, x27, x25
  404b88:	bl	402860 <memcpy@plt>
  404b8c:	ldr	x8, [x23, #40]
  404b90:	str	x8, [sp, #600]
  404b94:	cbz	x24, 404bbc <ferror@plt+0x1bec>
  404b98:	ldr	x8, [x23, #48]
  404b9c:	ldr	x9, [x23, #32]
  404ba0:	sub	x8, x8, x9
  404ba4:	add	x8, x21, x8
  404ba8:	str	x8, [sp, #608]
  404bac:	ldr	x8, [x23, #56]
  404bb0:	sub	x8, x8, x9
  404bb4:	add	x8, x21, x8
  404bb8:	str	x8, [sp, #616]
  404bbc:	sub	x0, x29, #0xd8
  404bc0:	mov	x1, x20
  404bc4:	mov	x2, x19
  404bc8:	bl	406398 <ferror@plt+0x33c8>
  404bcc:	mov	w23, wzr
  404bd0:	tbnz	w0, #0, 404ad0 <ferror@plt+0x1b00>
  404bd4:	b	4052c0 <ferror@plt+0x22f0>
  404bd8:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404bdc:	add	x0, x0, #0x9f0
  404be0:	bl	402f60 <getenv@plt>
  404be4:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404be8:	add	x8, x8, #0x2e5
  404bec:	cmp	x0, #0x0
  404bf0:	csel	x0, x8, x0, eq  // eq = none
  404bf4:	bl	405b00 <ferror@plt+0x2b30>
  404bf8:	cbnz	x27, 404a24 <ferror@plt+0x1a54>
  404bfc:	mov	x0, x21
  404c00:	bl	402d30 <free@plt>
  404c04:	mov	w0, #0x8                   	// #8
  404c08:	bl	40efac <ferror@plt+0xbfdc>
  404c0c:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404c10:	mov	x21, x0
  404c14:	add	x8, x8, #0xf28
  404c18:	mov	w27, #0x1                   	// #1
  404c1c:	str	x8, [x0]
  404c20:	b	404a24 <ferror@plt+0x1a54>
  404c24:	adrp	x19, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404c28:	add	x19, x19, #0xf28
  404c2c:	mov	x22, x27
  404c30:	mov	x23, x21
  404c34:	ldr	x20, [x21]
  404c38:	mov	x1, x19
  404c3c:	mov	x0, x20
  404c40:	bl	402ce0 <strcmp@plt>
  404c44:	cbz	w0, 404c58 <ferror@plt+0x1c88>
  404c48:	mov	w1, #0x4                   	// #4
  404c4c:	mov	x0, x20
  404c50:	bl	402990 <euidaccess@plt>
  404c54:	cbnz	w0, 4053ac <ferror@plt+0x23dc>
  404c58:	subs	x22, x22, #0x1
  404c5c:	add	x21, x21, #0x8
  404c60:	b.ne	404c34 <ferror@plt+0x1c64>  // b.any
  404c64:	ldr	x8, [sp, #80]
  404c68:	mov	x21, x23
  404c6c:	cbz	x8, 404ca8 <ferror@plt+0x1cd8>
  404c70:	ldr	x0, [sp, #80]
  404c74:	mov	w1, #0x41                  	// #65
  404c78:	movk	w1, #0x8, lsl #16
  404c7c:	mov	w2, #0x1b6                 	// #438
  404c80:	bl	402a90 <open@plt>
  404c84:	tbnz	w0, #31, 405784 <ferror@plt+0x27b4>
  404c88:	mov	w19, w0
  404c8c:	cmp	w0, #0x1
  404c90:	b.eq	404ca8 <ferror@plt+0x1cd8>  // b.none
  404c94:	mov	w1, #0x1                   	// #1
  404c98:	mov	w0, w19
  404c9c:	bl	402f00 <dup2@plt>
  404ca0:	mov	w0, w19
  404ca4:	bl	402ba0 <close@plt>
  404ca8:	tbz	w28, #0, 404d98 <ferror@plt+0x1dc8>
  404cac:	mov	w1, #0x10                  	// #16
  404cb0:	mov	x0, x27
  404cb4:	bl	40f130 <ferror@plt+0xc160>
  404cb8:	cbz	x27, 404cd8 <ferror@plt+0x1d08>
  404cbc:	mov	x8, xzr
  404cc0:	mov	x9, x0
  404cc4:	ldr	x10, [x21, x8, lsl #3]
  404cc8:	add	x8, x8, #0x1
  404ccc:	cmp	x8, x27
  404cd0:	str	x10, [x9], #16
  404cd4:	b.cc	404cc4 <ferror@plt+0x1cf4>  // b.lo, b.ul, b.last
  404cd8:	ldr	x3, [sp, #80]
  404cdc:	mov	x1, xzr
  404ce0:	mov	x2, x27
  404ce4:	bl	405ccc <ferror@plt+0x2cfc>
  404ce8:	b	40528c <ferror@plt+0x22bc>
  404cec:	mov	w23, wzr
  404cf0:	b	4052c0 <ferror@plt+0x22f0>
  404cf4:	add	x8, x23, #0x40
  404cf8:	ldr	w9, [sp, #28]
  404cfc:	and	w9, w9, #0xff
  404d00:	cmp	w9, #0x63
  404d04:	b.ne	4052b8 <ferror@plt+0x22e8>  // b.any
  404d08:	adrp	x27, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404d0c:	ldr	x22, [x27, #1344]
  404d10:	sub	x24, x8, #0x20
  404d14:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  404d18:	sub	x8, x28, x24
  404d1c:	add	x1, x1, #0x5c
  404d20:	mov	w2, #0x5                   	// #5
  404d24:	mov	x0, xzr
  404d28:	add	x23, x20, x8, asr #5
  404d2c:	bl	402eb0 <dcgettext@plt>
  404d30:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404d34:	ldr	x25, [x8, #3024]
  404d38:	mov	x26, x0
  404d3c:	sub	x1, x29, #0x28
  404d40:	mov	x0, x23
  404d44:	bl	40bcd4 <ferror@plt+0x8d04>
  404d48:	mov	x5, x0
  404d4c:	mov	w1, #0x1                   	// #1
  404d50:	mov	x0, x22
  404d54:	mov	x2, x26
  404d58:	mov	x3, x25
  404d5c:	mov	x4, x19
  404d60:	mov	w23, #0x1                   	// #1
  404d64:	bl	402cc0 <__fprintf_chk@plt>
  404d68:	ldr	x22, [x27, #1344]
  404d6c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  404d70:	add	x1, x1, #0x72
  404d74:	mov	w2, #0x5                   	// #5
  404d78:	mov	x0, xzr
  404d7c:	bl	402eb0 <dcgettext@plt>
  404d80:	mov	x2, x0
  404d84:	mov	x0, x24
  404d88:	mov	x1, x22
  404d8c:	bl	4071e4 <ferror@plt+0x4214>
  404d90:	ldr	x20, [x29, #8]
  404d94:	b	4052c0 <ferror@plt+0x22f0>
  404d98:	ldr	x10, [sp, #32]
  404d9c:	cbnz	x10, 404db4 <ferror@plt+0x1de4>
  404da0:	mov	w0, #0x2                   	// #2
  404da4:	bl	40bed0 <ferror@plt+0x8f00>
  404da8:	cmp	x0, #0x8
  404dac:	mov	w8, #0x8                   	// #8
  404db0:	csel	x10, x0, x8, cc  // cc = lo, ul, last
  404db4:	mov	x8, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  404db8:	movk	x8, #0xf0, lsl #48
  404dbc:	cmp	x10, x8
  404dc0:	sub	x9, x29, #0xd8
  404dc4:	csel	x20, x10, x8, cc  // cc = lo, ul, last
  404dc8:	ldr	x19, [sp, #80]
  404dcc:	add	x11, x9, #0x8
  404dd0:	add	x9, x9, #0x38
  404dd4:	lsl	x8, x20, #1
  404dd8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404ddc:	stp	x8, x9, [sp, #88]
  404de0:	add	x8, x20, x20, lsl #4
  404de4:	mov	x25, xzr
  404de8:	add	x1, x1, #0xc50
  404dec:	fmov	d9, #1.250000000000000000e-01
  404df0:	fmov	d10, #7.500000000000000000e-01
  404df4:	lsl	x8, x8, #4
  404df8:	str	xzr, [sp, #616]
  404dfc:	str	x8, [sp, #72]
  404e00:	stp	x11, x20, [sp, #120]
  404e04:	ldr	x28, [x21]
  404e08:	str	x27, [sp, #112]
  404e0c:	mov	x0, x28
  404e10:	bl	405ba4 <ferror@plt+0x2bd4>
  404e14:	cmp	x20, #0x2
  404e18:	mov	x23, x0
  404e1c:	b.cc	404e40 <ferror@plt+0x1e70>  // b.lo, b.ul, b.last
  404e20:	mov	x9, x20
  404e24:	mov	w10, #0x20                  	// #32
  404e28:	mov	w8, #0x1                   	// #1
  404e2c:	lsl	x8, x8, #1
  404e30:	cmp	x8, x9
  404e34:	add	x10, x10, #0x20
  404e38:	b.cc	404e2c <ferror@plt+0x1e5c>  // b.lo, b.ul, b.last
  404e3c:	b	404e44 <ferror@plt+0x1e74>
  404e40:	mov	w10, #0x30                  	// #48
  404e44:	ldr	x8, [sp, #616]
  404e48:	orr	x9, x10, #0x1
  404e4c:	stp	x10, x9, [sp, #136]
  404e50:	cbnz	x8, 405004 <ferror@plt+0x2034>
  404e54:	ldr	x8, [sp, #136]
  404e58:	str	x28, [x29, #8]
  404e5c:	mov	x22, xzr
  404e60:	orr	x28, x8, #0x2
  404e64:	cbz	x22, 404e90 <ferror@plt+0x1ec0>
  404e68:	ldr	x20, [x21, x22, lsl #3]
  404e6c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  404e70:	add	x1, x1, #0xf28
  404e74:	mov	x0, x20
  404e78:	bl	402ce0 <strcmp@plt>
  404e7c:	cbz	w0, 404e98 <ferror@plt+0x1ec8>
  404e80:	sub	x1, x29, #0xd8
  404e84:	mov	x0, x20
  404e88:	bl	4110d8 <_obstack_memory_used@@Base+0xb98>
  404e8c:	b	404ea0 <ferror@plt+0x1ed0>
  404e90:	mov	x0, x23
  404e94:	bl	4029f0 <fileno@plt>
  404e98:	sub	x1, x29, #0xd8
  404e9c:	bl	4110e8 <_obstack_memory_used@@Base+0xba8>
  404ea0:	cbnz	w0, 4053c8 <ferror@plt+0x23f8>
  404ea4:	ldur	w8, [x29, #-200]
  404ea8:	and	w8, w8, #0xf000
  404eac:	cmp	w8, #0x8, lsl #12
  404eb0:	b.ne	404ebc <ferror@plt+0x1eec>  // b.any
  404eb4:	ldur	x20, [x29, #-168]
  404eb8:	b	404ec8 <ferror@plt+0x1ef8>
  404ebc:	ldr	x8, [x26, #1592]
  404ec0:	cbnz	x8, 404fec <ferror@plt+0x201c>
  404ec4:	mov	w20, #0x20000               	// #131072
  404ec8:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404ecc:	ldr	x8, [x8, #3000]
  404ed0:	cbnz	x8, 404fb0 <ferror@plt+0x1fe0>
  404ed4:	ldr	x8, [x26, #1592]
  404ed8:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404edc:	str	x8, [x9, #3000]
  404ee0:	cbnz	x8, 404fb0 <ferror@plt+0x1fe0>
  404ee4:	sub	x1, x29, #0x58
  404ee8:	mov	w0, #0x2                   	// #2
  404eec:	mov	x24, x19
  404ef0:	mov	x19, x21
  404ef4:	bl	402e20 <getrlimit@plt>
  404ef8:	ldur	x8, [x29, #-88]
  404efc:	cmp	w0, #0x0
  404f00:	sub	x1, x29, #0x58
  404f04:	mov	w0, #0x9                   	// #9
  404f08:	csinv	x21, x8, xzr, eq  // eq = none
  404f0c:	bl	402e20 <getrlimit@plt>
  404f10:	ldur	x8, [x29, #-88]
  404f14:	sub	x1, x29, #0x58
  404f18:	cmp	x8, x21
  404f1c:	ccmp	w0, #0x0, #0x0, cc  // cc = lo, ul, last
  404f20:	csel	x8, x8, x21, eq  // eq = none
  404f24:	mov	w0, #0x5                   	// #5
  404f28:	lsr	x21, x8, #1
  404f2c:	bl	402e20 <getrlimit@plt>
  404f30:	cbnz	w0, 404f4c <ferror@plt+0x1f7c>
  404f34:	ldur	x8, [x29, #-88]
  404f38:	lsr	x9, x8, #4
  404f3c:	lsl	x9, x9, #4
  404f40:	sub	x8, x9, x8, lsr #4
  404f44:	cmp	x8, x21
  404f48:	csel	x21, x8, x21, cc  // cc = lo, ul, last
  404f4c:	bl	40c0e0 <ferror@plt+0x9110>
  404f50:	mov	v8.16b, v0.16b
  404f54:	bl	40c068 <ferror@plt+0x9098>
  404f58:	fmul	d1, d0, d9
  404f5c:	fmul	d0, d0, d10
  404f60:	fcmp	d8, d1
  404f64:	ucvtf	d2, x21
  404f68:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404f6c:	fcsel	d1, d8, d1, gt
  404f70:	ldr	w8, [x8, #1000]
  404f74:	fcvtzu	x9, d0
  404f78:	fcmp	d0, d2
  404f7c:	csel	x9, x9, x21, mi  // mi = first
  404f80:	ucvtf	d0, x9
  404f84:	fcvtzu	x10, d1
  404f88:	fcmp	d1, d0
  404f8c:	add	x8, x8, x8, lsl #4
  404f90:	csel	x9, x10, x9, mi  // mi = first
  404f94:	lsl	x10, x8, #1
  404f98:	cmp	x9, x8, lsl #1
  404f9c:	csel	x8, x9, x10, hi  // hi = pmore
  404fa0:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  404fa4:	mov	x21, x19
  404fa8:	mov	x19, x24
  404fac:	str	x8, [x9, #3000]
  404fb0:	ldr	x10, [sp, #144]
  404fb4:	orr	x9, xzr, #0x1
  404fb8:	madd	x9, x20, x10, x9
  404fbc:	udiv	x10, x9, x10
  404fc0:	cmp	x20, x10
  404fc4:	b.ne	404fec <ferror@plt+0x201c>  // b.any
  404fc8:	sub	x10, x8, x28
  404fcc:	cmp	x10, x9
  404fd0:	b.ls	404fec <ferror@plt+0x201c>  // b.plast
  404fd4:	ldr	x8, [sp, #112]
  404fd8:	add	x22, x22, #0x1
  404fdc:	add	x28, x9, x28
  404fe0:	cmp	x8, x22
  404fe4:	b.ne	404e64 <ferror@plt+0x1e94>  // b.any
  404fe8:	b	404ff0 <ferror@plt+0x2020>
  404fec:	mov	x28, x8
  404ff0:	ldr	x1, [sp, #136]
  404ff4:	add	x0, sp, #0x250
  404ff8:	mov	x2, x28
  404ffc:	bl	406334 <ferror@plt+0x3364>
  405000:	ldr	x28, [x29, #8]
  405004:	ldr	x8, [sp, #112]
  405008:	add	x21, x21, #0x8
  40500c:	strb	wzr, [sp, #640]
  405010:	str	x21, [sp, #16]
  405014:	sub	x8, x8, #0x1
  405018:	str	x8, [sp, #112]
  40501c:	add	x0, sp, #0x250
  405020:	mov	x1, x23
  405024:	mov	x2, x28
  405028:	bl	406398 <ferror@plt+0x33c8>
  40502c:	tbz	w0, #0, 4051e4 <ferror@plt+0x2214>
  405030:	ldrb	w8, [sp, #640]
  405034:	ldr	x20, [sp, #616]
  405038:	ldr	x9, [sp, #112]
  40503c:	cbz	x9, 405064 <ferror@plt+0x2094>
  405040:	cbz	w8, 405064 <ferror@plt+0x2094>
  405044:	ldr	x9, [sp, #600]
  405048:	ldr	x10, [sp, #608]
  40504c:	ldr	x12, [sp, #136]
  405050:	sub	x11, x20, x9
  405054:	msub	x10, x10, x12, x11
  405058:	ldr	x11, [sp, #144]
  40505c:	cmp	x11, x10
  405060:	b.cc	4051e0 <ferror@plt+0x2210>  // b.lo, b.ul, b.last
  405064:	ldr	x21, [sp, #592]
  405068:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40506c:	str	xzr, [x9, #2968]
  405070:	cbz	w8, 4050b8 <ferror@plt+0x20e8>
  405074:	ldr	x9, [sp, #112]
  405078:	ldr	x8, [sp, #624]
  40507c:	orr	x9, x25, x9
  405080:	orr	x8, x9, x8
  405084:	cbnz	x8, 4050b8 <ferror@plt+0x20e8>
  405088:	mov	x0, x23
  40508c:	mov	x1, x28
  405090:	str	x25, [x29, #8]
  405094:	bl	405be0 <ferror@plt+0x2c10>
  405098:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40509c:	mov	x0, x19
  4050a0:	add	x1, x1, #0x121
  4050a4:	bl	405ba4 <ferror@plt+0x2bd4>
  4050a8:	stur	x0, [x29, #-40]
  4050ac:	mov	w27, #0x1                   	// #1
  4050b0:	mov	x24, x19
  4050b4:	b	4050d4 <ferror@plt+0x2104>
  4050b8:	add	x25, x25, #0x1
  4050bc:	sub	x0, x29, #0x28
  4050c0:	mov	w1, wzr
  4050c4:	str	x25, [x29, #8]
  4050c8:	bl	408324 <ferror@plt+0x5354>
  4050cc:	mov	w27, wzr
  4050d0:	add	x24, x0, #0xd
  4050d4:	ldr	x22, [sp, #608]
  4050d8:	add	x25, x21, x20
  4050dc:	cmp	x22, #0x2
  4050e0:	b.cc	4051b4 <ferror@plt+0x21e4>  // b.lo, b.ul, b.last
  4050e4:	ldr	x1, [sp, #88]
  4050e8:	adrp	x0, 409000 <ferror@plt+0x6030>
  4050ec:	add	x0, x0, #0x174
  4050f0:	bl	40b99c <ferror@plt+0x89cc>
  4050f4:	stur	x0, [x29, #-216]
  4050f8:	ldr	x0, [sp, #120]
  4050fc:	mov	x1, xzr
  405100:	bl	402b90 <pthread_mutex_init@plt>
  405104:	ldr	x0, [sp, #96]
  405108:	mov	x1, xzr
  40510c:	bl	402e10 <pthread_cond_init@plt>
  405110:	ldr	x0, [sp, #72]
  405114:	bl	40efac <ferror@plt+0xbfdc>
  405118:	movi	v0.2d, #0x0
  40511c:	mov	x20, x0
  405120:	stp	q0, q0, [x0]
  405124:	stp	xzr, x22, [x0, #32]
  405128:	stp	x22, xzr, [x0, #48]
  40512c:	str	wzr, [x0, #80]
  405130:	strb	wzr, [x0, #84]
  405134:	add	x0, x0, #0x58
  405138:	mov	x1, xzr
  40513c:	bl	402b90 <pthread_mutex_init@plt>
  405140:	mov	w19, w27
  405144:	mov	x27, x21
  405148:	mov	x21, x23
  40514c:	mov	x23, x28
  405150:	ldr	x28, [sp, #128]
  405154:	add	x26, x20, #0x88
  405158:	mov	x0, x20
  40515c:	mov	x1, x26
  405160:	mov	x2, x25
  405164:	mov	x3, x28
  405168:	mov	x4, x22
  40516c:	mov	w5, wzr
  405170:	bl	4091a0 <ferror@plt+0x61d0>
  405174:	ldur	x20, [x29, #-40]
  405178:	mov	x1, x28
  40517c:	mov	x28, x23
  405180:	mov	x23, x21
  405184:	mov	x21, x27
  405188:	mov	w27, w19
  40518c:	ldr	x19, [sp, #80]
  405190:	sub	x4, x29, #0xd8
  405194:	mov	x0, x25
  405198:	mov	x2, x22
  40519c:	mov	x3, x26
  4051a0:	mov	x5, x20
  4051a4:	mov	x6, x24
  4051a8:	adrp	x26, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4051ac:	bl	408abc <ferror@plt+0x5aec>
  4051b0:	b	4051c8 <ferror@plt+0x21f8>
  4051b4:	ldur	x20, [x29, #-40]
  4051b8:	sub	x0, x25, #0x20
  4051bc:	mov	x2, x24
  4051c0:	mov	x1, x20
  4051c4:	bl	4090ec <ferror@plt+0x611c>
  4051c8:	mov	x0, x20
  4051cc:	mov	x1, x24
  4051d0:	bl	405be0 <ferror@plt+0x2c10>
  4051d4:	ldr	x25, [x29, #8]
  4051d8:	cbz	w27, 40501c <ferror@plt+0x204c>
  4051dc:	b	405260 <ferror@plt+0x2290>
  4051e0:	str	x9, [sp, #624]
  4051e4:	mov	x0, x23
  4051e8:	mov	x1, x28
  4051ec:	bl	405be0 <ferror@plt+0x2c10>
  4051f0:	ldr	x21, [sp, #16]
  4051f4:	ldr	x27, [sp, #112]
  4051f8:	ldr	x20, [sp, #128]
  4051fc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405200:	add	x1, x1, #0xc50
  405204:	cbnz	x27, 404e04 <ferror@plt+0x1e34>
  405208:	ldr	x0, [sp, #592]
  40520c:	mov	x20, x19
  405210:	bl	402d30 <free@plt>
  405214:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405218:	ldr	x19, [x8, #2624]
  40521c:	lsr	x8, x25, #59
  405220:	cbnz	x8, 4053e4 <ferror@plt+0x2414>
  405224:	lsl	x0, x25, #4
  405228:	bl	40efac <ferror@plt+0xbfdc>
  40522c:	mov	x21, x0
  405230:	cbz	x19, 40524c <ferror@plt+0x227c>
  405234:	add	x8, x21, #0x8
  405238:	add	x9, x19, #0xd
  40523c:	stp	x9, x19, [x8, #-8]
  405240:	ldr	x19, [x19]
  405244:	add	x8, x8, #0x10
  405248:	cbnz	x19, 405238 <ferror@plt+0x2268>
  40524c:	mov	x0, x21
  405250:	mov	x1, x25
  405254:	mov	x2, x25
  405258:	mov	x3, x20
  40525c:	bl	405ccc <ferror@plt+0x2cfc>
  405260:	mov	x0, x21
  405264:	bl	402d30 <free@plt>
  405268:	adrp	x19, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40526c:	ldr	w8, [x19, #2952]
  405270:	cmp	w8, #0x1
  405274:	b.lt	40528c <ferror@plt+0x22bc>  // b.tstop
  405278:	mov	w0, #0xffffffff            	// #-1
  40527c:	bl	408870 <ferror@plt+0x58a0>
  405280:	ldr	w8, [x19, #2952]
  405284:	cmp	w8, #0x0
  405288:	b.gt	405278 <ferror@plt+0x22a8>
  40528c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405290:	ldrb	w8, [x8, #1416]
  405294:	cmp	w8, #0x1
  405298:	b.ne	4052b0 <ferror@plt+0x22e0>  // b.any
  40529c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4052a0:	ldr	x0, [x8, #1376]
  4052a4:	bl	40fce0 <ferror@plt+0xcd10>
  4052a8:	cmn	w0, #0x1
  4052ac:	b.eq	4057a0 <ferror@plt+0x27d0>  // b.none
  4052b0:	mov	w23, wzr
  4052b4:	b	4052dc <ferror@plt+0x230c>
  4052b8:	ldr	x20, [x29, #8]
  4052bc:	mov	w23, #0x1                   	// #1
  4052c0:	mov	x0, x20
  4052c4:	mov	x1, x19
  4052c8:	bl	405be0 <ferror@plt+0x2c10>
  4052cc:	ldur	x0, [x29, #-216]
  4052d0:	bl	402d30 <free@plt>
  4052d4:	mov	x0, x21
  4052d8:	bl	402d30 <free@plt>
  4052dc:	mov	w0, w23
  4052e0:	add	sp, sp, #0x360
  4052e4:	ldp	x20, x19, [sp, #112]
  4052e8:	ldp	x22, x21, [sp, #96]
  4052ec:	ldp	x24, x23, [sp, #80]
  4052f0:	ldp	x26, x25, [sp, #64]
  4052f4:	ldp	x28, x27, [sp, #48]
  4052f8:	ldp	x29, x30, [sp, #32]
  4052fc:	ldp	d9, d8, [sp, #16]
  405300:	ldr	d10, [sp], #128
  405304:	ret
  405308:	mov	x8, x28
  40530c:	b	404cf8 <ferror@plt+0x1d28>
  405310:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405314:	add	x1, x1, #0x901
  405318:	mov	w2, #0x5                   	// #5
  40531c:	mov	x0, xzr
  405320:	bl	402eb0 <dcgettext@plt>
  405324:	ldr	x1, [x21, x19, lsl #3]
  405328:	mov	x19, x0
  40532c:	mov	w0, #0x4                   	// #4
  405330:	bl	40d5ec <ferror@plt+0xa61c>
  405334:	mov	x3, x0
  405338:	mov	w0, #0x2                   	// #2
  40533c:	mov	w1, wzr
  405340:	mov	x2, x19
  405344:	bl	402900 <error@plt>
  405348:	add	x1, sp, #0x250
  40534c:	mov	x0, x19
  405350:	strb	wzr, [x19, #55]
  405354:	strh	wzr, [x19, #48]
  405358:	bl	40625c <ferror@plt+0x328c>
  40535c:	add	x0, sp, #0x250
  405360:	bl	405ac8 <ferror@plt+0x2af8>
  405364:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405368:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40536c:	ldr	x0, [x8, #1368]
  405370:	ldr	x3, [x9, #1216]
  405374:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405378:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40537c:	adrp	x4, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405380:	adrp	x5, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405384:	add	x1, x1, #0x764
  405388:	add	x2, x2, #0x876
  40538c:	add	x4, x4, #0x884
  405390:	add	x5, x5, #0x891
  405394:	mov	x6, xzr
  405398:	bl	40eea0 <ferror@plt+0xbed0>
  40539c:	mov	w0, wzr
  4053a0:	bl	4028e0 <exit@plt>
  4053a4:	mov	w0, wzr
  4053a8:	bl	4030ec <ferror@plt+0x11c>
  4053ac:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4053b0:	add	x1, x1, #0x115
  4053b4:	mov	w2, #0x5                   	// #5
  4053b8:	mov	x0, xzr
  4053bc:	bl	402eb0 <dcgettext@plt>
  4053c0:	ldr	x1, [x21]
  4053c4:	bl	406054 <ferror@plt+0x3084>
  4053c8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4053cc:	add	x1, x1, #0x22b
  4053d0:	mov	w2, #0x5                   	// #5
  4053d4:	mov	x0, xzr
  4053d8:	bl	402eb0 <dcgettext@plt>
  4053dc:	ldr	x1, [x21, x22, lsl #3]
  4053e0:	bl	406054 <ferror@plt+0x3084>
  4053e4:	bl	40f1e8 <ferror@plt+0xc218>
  4053e8:	cmp	w28, #0x1
  4053ec:	b.ne	405768 <ferror@plt+0x2798>  // b.any
  4053f0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4053f4:	add	x1, x1, #0xe26
  4053f8:	mov	w2, #0x5                   	// #5
  4053fc:	mov	x0, xzr
  405400:	bl	402eb0 <dcgettext@plt>
  405404:	ldr	x8, [sp, #56]
  405408:	adrp	x9, 411000 <_obstack_memory_used@@Base+0xac0>
  40540c:	add	x9, x9, #0x228
  405410:	mov	x21, x0
  405414:	lsl	x8, x8, #5
  405418:	ldr	x0, [sp, #72]
  40541c:	ldr	x20, [x9, x8]
  405420:	bl	40d8f4 <ferror@plt+0xa924>
  405424:	mov	x4, x0
  405428:	mov	w0, wzr
  40542c:	mov	w1, wzr
  405430:	mov	x2, x21
  405434:	mov	x3, x20
  405438:	bl	402900 <error@plt>
  40543c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405440:	add	x1, x1, #0xe41
  405444:	mov	w2, #0x5                   	// #5
  405448:	mov	x0, xzr
  40544c:	bl	402eb0 <dcgettext@plt>
  405450:	mov	x19, x0
  405454:	sub	x1, x29, #0xd8
  405458:	mov	w0, w26
  40545c:	bl	40bc9c <ferror@plt+0x8ccc>
  405460:	b	4054d4 <ferror@plt+0x2504>
  405464:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405468:	add	x1, x1, #0xdef
  40546c:	mov	w2, #0x5                   	// #5
  405470:	mov	x0, xzr
  405474:	bl	402eb0 <dcgettext@plt>
  405478:	ldr	x8, [sp, #56]
  40547c:	adrp	x9, 411000 <_obstack_memory_used@@Base+0xac0>
  405480:	add	x9, x9, #0x228
  405484:	mov	x21, x0
  405488:	lsl	x8, x8, #5
  40548c:	ldr	x0, [sp, #72]
  405490:	ldr	x20, [x9, x8]
  405494:	bl	40d8f4 <ferror@plt+0xa924>
  405498:	mov	x4, x0
  40549c:	mov	w0, wzr
  4054a0:	mov	w1, wzr
  4054a4:	mov	x2, x21
  4054a8:	mov	x3, x20
  4054ac:	bl	402900 <error@plt>
  4054b0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4054b4:	add	x1, x1, #0xe08
  4054b8:	mov	w2, #0x5                   	// #5
  4054bc:	mov	x0, xzr
  4054c0:	bl	402eb0 <dcgettext@plt>
  4054c4:	mov	x19, x0
  4054c8:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4054cc:	add	x0, x0, #0xe24
  4054d0:	bl	40d8f4 <ferror@plt+0xa924>
  4054d4:	mov	x4, x0
  4054d8:	mov	w0, #0x2                   	// #2
  4054dc:	mov	w1, wzr
  4054e0:	mov	x2, x19
  4054e4:	mov	x3, x20
  4054e8:	bl	402900 <error@plt>
  4054ec:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xac0>
  4054f0:	add	x3, x3, #0x228
  4054f4:	mov	w2, #0x7                   	// #7
  4054f8:	mov	w1, w22
  4054fc:	mov	x4, x19
  405500:	bl	40f804 <ferror@plt+0xc834>
  405504:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405508:	add	x1, x1, #0x774
  40550c:	b	405588 <ferror@plt+0x25b8>
  405510:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405514:	add	x1, x1, #0x81e
  405518:	b	405588 <ferror@plt+0x25b8>
  40551c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405520:	add	x1, x1, #0x7fe
  405524:	b	405588 <ferror@plt+0x25b8>
  405528:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40552c:	add	x1, x1, #0x840
  405530:	b	405588 <ferror@plt+0x25b8>
  405534:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405538:	add	x1, x1, #0x84d
  40553c:	mov	w2, #0x5                   	// #5
  405540:	mov	x0, xzr
  405544:	bl	402eb0 <dcgettext@plt>
  405548:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40554c:	ldr	x8, [x8, #1352]
  405550:	mov	x19, x0
  405554:	mov	x0, x8
  405558:	bl	40d8f4 <ferror@plt+0xa924>
  40555c:	b	405334 <ferror@plt+0x2364>
  405560:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405564:	add	x1, x1, #0x864
  405568:	b	405588 <ferror@plt+0x25b8>
  40556c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405570:	ldr	x0, [x8, #1352]
  405574:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405578:	add	x1, x1, #0x7cc
  40557c:	bl	405a64 <ferror@plt+0x2a94>
  405580:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405584:	add	x1, x1, #0xe7e
  405588:	mov	w2, #0x5                   	// #5
  40558c:	mov	x0, xzr
  405590:	bl	402eb0 <dcgettext@plt>
  405594:	mov	x2, x0
  405598:	mov	w0, #0x2                   	// #2
  40559c:	mov	w1, wzr
  4055a0:	bl	402900 <error@plt>
  4055a4:	mov	w0, #0x2                   	// #2
  4055a8:	b	4055b0 <ferror@plt+0x25e0>
  4055ac:	mov	w0, #0x1                   	// #1
  4055b0:	ldr	w1, [sp, #72]
  4055b4:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xac0>
  4055b8:	add	x3, x3, #0x228
  4055bc:	mov	w2, #0x53                  	// #83
  4055c0:	mov	x4, x22
  4055c4:	bl	40f804 <ferror@plt+0xc834>
  4055c8:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4055cc:	ldr	x0, [x8, #1352]
  4055d0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4055d4:	add	x1, x1, #0x7b7
  4055d8:	bl	405a64 <ferror@plt+0x2a94>
  4055dc:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4055e0:	ldr	x0, [x8, #1352]
  4055e4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4055e8:	add	x1, x1, #0x744
  4055ec:	bl	405a64 <ferror@plt+0x2a94>
  4055f0:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4055f4:	add	x0, x0, #0x771
  4055f8:	bl	405ac8 <ferror@plt+0x2af8>
  4055fc:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  405600:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405604:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405608:	add	x0, x0, #0x2ab
  40560c:	add	x1, x1, #0x709
  405610:	add	x3, x3, #0x714
  405614:	mov	w2, #0x1112                	// #4370
  405618:	bl	402f30 <__assert_fail@plt>
  40561c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405620:	add	x1, x1, #0x744
  405624:	mov	x0, x19
  405628:	bl	405a64 <ferror@plt+0x2a94>
  40562c:	tst	w19, #0xff
  405630:	mov	w8, #0x6f                  	// #111
  405634:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405638:	csel	w8, w19, w8, ne  // ne = any
  40563c:	add	x0, x0, #0x3dc
  405640:	b	405734 <ferror@plt+0x2764>
  405644:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405648:	add	x1, x1, #0x89d
  40564c:	mov	w2, #0x5                   	// #5
  405650:	mov	x0, xzr
  405654:	bl	402eb0 <dcgettext@plt>
  405658:	ldr	x1, [x21]
  40565c:	mov	x19, x0
  405660:	mov	w0, #0x4                   	// #4
  405664:	bl	40d5ec <ferror@plt+0xa61c>
  405668:	mov	x3, x0
  40566c:	mov	w0, wzr
  405670:	mov	w1, wzr
  405674:	mov	x2, x19
  405678:	bl	402900 <error@plt>
  40567c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405680:	ldr	x19, [x8, #1344]
  405684:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405688:	add	x1, x1, #0x8ae
  40568c:	mov	w2, #0x5                   	// #5
  405690:	mov	x0, xzr
  405694:	bl	402eb0 <dcgettext@plt>
  405698:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40569c:	mov	x3, x0
  4056a0:	add	x2, x2, #0x62e
  4056a4:	mov	w1, #0x1                   	// #1
  4056a8:	mov	x0, x19
  4056ac:	bl	402cc0 <__fprintf_chk@plt>
  4056b0:	mov	w0, #0x2                   	// #2
  4056b4:	bl	4030ec <ferror@plt+0x11c>
  4056b8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4056bc:	add	x1, x1, #0x8e2
  4056c0:	b	4056cc <ferror@plt+0x26fc>
  4056c4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4056c8:	add	x1, x1, #0x966
  4056cc:	mov	w2, #0x5                   	// #5
  4056d0:	mov	x0, xzr
  4056d4:	bl	402eb0 <dcgettext@plt>
  4056d8:	mov	x19, x0
  4056dc:	mov	w0, #0x4                   	// #4
  4056e0:	mov	x1, x24
  4056e4:	b	405330 <ferror@plt+0x2360>
  4056e8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4056ec:	add	x1, x1, #0x9f7
  4056f0:	mov	w2, #0x5                   	// #5
  4056f4:	mov	x0, xzr
  4056f8:	bl	402eb0 <dcgettext@plt>
  4056fc:	ldr	x1, [x21, #8]
  405700:	mov	w20, w19
  405704:	mov	x19, x0
  405708:	mov	w0, #0x4                   	// #4
  40570c:	bl	40d5ec <ferror@plt+0xa61c>
  405710:	mov	x3, x0
  405714:	and	w4, w20, #0xff
  405718:	mov	w0, #0x2                   	// #2
  40571c:	mov	w1, wzr
  405720:	mov	x2, x19
  405724:	bl	402900 <error@plt>
  405728:	ldr	w8, [sp, #28]
  40572c:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405730:	add	x0, x0, #0x3ec
  405734:	strb	w8, [x0]
  405738:	bl	405ac8 <ferror@plt+0x2af8>
  40573c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405740:	add	x1, x1, #0xea1
  405744:	mov	w2, #0x5                   	// #5
  405748:	b	40575c <ferror@plt+0x278c>
  40574c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405750:	add	x1, x1, #0xa1d
  405754:	mov	w2, #0x5                   	// #5
  405758:	mov	x0, xzr
  40575c:	bl	402eb0 <dcgettext@plt>
  405760:	ldr	x1, [sp, #40]
  405764:	bl	406054 <ferror@plt+0x3084>
  405768:	ldr	x4, [sp, #72]
  40576c:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xac0>
  405770:	add	x3, x3, #0x228
  405774:	mov	w2, #0x4                   	// #4
  405778:	mov	w0, w28
  40577c:	ldr	x1, [sp, #56]
  405780:	bl	40f804 <ferror@plt+0xc834>
  405784:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405788:	add	x1, x1, #0xea1
  40578c:	mov	w2, #0x5                   	// #5
  405790:	mov	x0, xzr
  405794:	bl	402eb0 <dcgettext@plt>
  405798:	ldr	x1, [sp, #80]
  40579c:	bl	406054 <ferror@plt+0x3084>
  4057a0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4057a4:	add	x1, x1, #0xa1d
  4057a8:	mov	w2, #0x5                   	// #5
  4057ac:	mov	x0, xzr
  4057b0:	bl	402eb0 <dcgettext@plt>
  4057b4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4057b8:	add	x1, x1, #0xf28
  4057bc:	bl	406054 <ferror@plt+0x3084>
  4057c0:	stp	x29, x30, [sp, #-48]!
  4057c4:	str	x21, [sp, #16]
  4057c8:	stp	x20, x19, [sp, #32]
  4057cc:	adrp	x20, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4057d0:	ldr	x21, [x20, #2624]
  4057d4:	mov	w19, w0
  4057d8:	mov	x29, sp
  4057dc:	cbz	x21, 4057f0 <ferror@plt+0x2820>
  4057e0:	add	x0, x21, #0xd
  4057e4:	bl	402fb0 <unlink@plt>
  4057e8:	ldr	x21, [x21]
  4057ec:	cbnz	x21, 4057e0 <ferror@plt+0x2810>
  4057f0:	mov	w0, w19
  4057f4:	mov	x1, xzr
  4057f8:	str	xzr, [x20, #2624]
  4057fc:	bl	402a10 <signal@plt>
  405800:	mov	w0, w19
  405804:	ldp	x20, x19, [sp, #32]
  405808:	ldr	x21, [sp, #16]
  40580c:	ldp	x29, x30, [sp], #48
  405810:	b	4028f0 <raise@plt>
  405814:	sub	sp, sp, #0xc0
  405818:	stp	x29, x30, [sp, #144]
  40581c:	str	x21, [sp, #160]
  405820:	stp	x20, x19, [sp, #176]
  405824:	adrp	x20, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405828:	ldr	x8, [x20, #2624]
  40582c:	add	x29, sp, #0x90
  405830:	cbz	x8, 405890 <ferror@plt+0x28c0>
  405834:	add	x8, sp, #0x8
  405838:	add	x19, x8, #0x8
  40583c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405840:	add	x1, x1, #0x590
  405844:	mov	w0, wzr
  405848:	mov	x2, x19
  40584c:	bl	402880 <pthread_sigmask@plt>
  405850:	cmp	w0, #0x0
  405854:	cset	w8, eq  // eq = none
  405858:	strb	w8, [sp, #8]
  40585c:	ldr	x21, [x20, #2624]
  405860:	cbz	x21, 405878 <ferror@plt+0x28a8>
  405864:	add	x0, x21, #0xd
  405868:	bl	402fb0 <unlink@plt>
  40586c:	ldr	x21, [x21]
  405870:	cbnz	x21, 405864 <ferror@plt+0x2894>
  405874:	ldrb	w8, [sp, #8]
  405878:	str	xzr, [x20, #2624]
  40587c:	cbz	w8, 405890 <ferror@plt+0x28c0>
  405880:	mov	w0, #0x2                   	// #2
  405884:	mov	x1, x19
  405888:	mov	x2, xzr
  40588c:	bl	402880 <pthread_sigmask@plt>
  405890:	bl	409894 <ferror@plt+0x68c4>
  405894:	ldp	x20, x19, [sp, #176]
  405898:	ldr	x21, [sp, #160]
  40589c:	ldp	x29, x30, [sp, #144]
  4058a0:	add	sp, sp, #0xc0
  4058a4:	ret
  4058a8:	sub	sp, sp, #0x40
  4058ac:	stp	x29, x30, [sp, #16]
  4058b0:	add	x29, sp, #0x10
  4058b4:	adrp	x4, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4058b8:	str	x21, [sp, #32]
  4058bc:	stp	x20, x19, [sp, #48]
  4058c0:	mov	x20, x2
  4058c4:	mov	x21, x1
  4058c8:	add	x4, x4, #0x708
  4058cc:	add	x1, x29, #0x18
  4058d0:	add	x3, sp, #0x8
  4058d4:	mov	w2, #0xa                   	// #10
  4058d8:	mov	x19, x0
  4058dc:	bl	40f8c8 <ferror@plt+0xc8f8>
  4058e0:	cmp	w0, #0x4
  4058e4:	b.hi	405910 <ferror@plt+0x2940>  // b.pmore
  4058e8:	adrp	x9, 411000 <_obstack_memory_used@@Base+0xac0>
  4058ec:	mov	w8, w0
  4058f0:	add	x9, x9, #0x1c2
  4058f4:	adr	x10, 405908 <ferror@plt+0x2938>
  4058f8:	ldrb	w11, [x9, x8]
  4058fc:	add	x10, x10, x11, lsl #2
  405900:	mov	x8, #0xffffffffffffffff    	// #-1
  405904:	br	x10
  405908:	ldr	x8, [sp, #8]
  40590c:	str	x8, [x21]
  405910:	ldr	x0, [x29, #24]
  405914:	ldp	x20, x19, [sp, #48]
  405918:	ldr	x21, [sp, #32]
  40591c:	ldp	x29, x30, [sp, #16]
  405920:	add	sp, sp, #0x40
  405924:	ret
  405928:	cbnz	x20, 405934 <ferror@plt+0x2964>
  40592c:	mov	x0, xzr
  405930:	b	405914 <ferror@plt+0x2944>
  405934:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405938:	add	x1, x1, #0xd4c
  40593c:	mov	w2, #0x5                   	// #5
  405940:	mov	x0, xzr
  405944:	bl	402eb0 <dcgettext@plt>
  405948:	mov	x21, x0
  40594c:	mov	w2, #0x5                   	// #5
  405950:	mov	x0, xzr
  405954:	mov	x1, x20
  405958:	bl	402eb0 <dcgettext@plt>
  40595c:	mov	x20, x0
  405960:	mov	x0, x19
  405964:	bl	40d8f4 <ferror@plt+0xa924>
  405968:	mov	x4, x0
  40596c:	mov	w0, #0x2                   	// #2
  405970:	mov	w1, wzr
  405974:	mov	x2, x21
  405978:	mov	x3, x20
  40597c:	bl	402900 <error@plt>
  405980:	adrp	x11, 411000 <_obstack_memory_used@@Base+0xac0>
  405984:	adrp	x12, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405988:	adrp	x13, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40598c:	adrp	x14, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405990:	and	w8, w2, #0xfffffffd
  405994:	sub	w9, w2, #0x1
  405998:	mov	w10, #0x1                   	// #1
  40599c:	add	x11, x11, #0x1c7
  4059a0:	add	x12, x12, #0x840
  4059a4:	add	x13, x13, #0x940
  4059a8:	add	x14, x14, #0x740
  4059ac:	ldrb	w15, [x0]
  4059b0:	cmp	w15, #0x61
  4059b4:	b.le	4059ec <ferror@plt+0x2a1c>
  4059b8:	sub	w15, w15, #0x62
  4059bc:	cmp	w15, #0x10
  4059c0:	b.hi	405a60 <ferror@plt+0x2a90>  // b.pmore
  4059c4:	adr	x16, 4059d4 <ferror@plt+0x2a04>
  4059c8:	ldrb	w17, [x11, x15]
  4059cc:	add	x16, x16, x17, lsl #2
  4059d0:	br	x16
  4059d4:	cbnz	w8, 4059dc <ferror@plt+0x2a0c>
  4059d8:	strb	w10, [x1, #48]
  4059dc:	cmp	w9, #0x1
  4059e0:	b.hi	405a58 <ferror@plt+0x2a88>  // b.pmore
  4059e4:	strb	w10, [x1, #49]
  4059e8:	b	405a58 <ferror@plt+0x2a88>
  4059ec:	cmp	w15, #0x4d
  4059f0:	b.eq	405a4c <ferror@plt+0x2a7c>  // b.none
  4059f4:	cmp	w15, #0x52
  4059f8:	b.eq	405a54 <ferror@plt+0x2a84>  // b.none
  4059fc:	cmp	w15, #0x56
  405a00:	b.ne	405a60 <ferror@plt+0x2a90>  // b.any
  405a04:	strb	w10, [x1, #56]
  405a08:	b	405a58 <ferror@plt+0x2a88>
  405a0c:	str	x12, [x1, #32]
  405a10:	b	405a58 <ferror@plt+0x2a88>
  405a14:	str	x13, [x1, #40]
  405a18:	b	405a58 <ferror@plt+0x2a88>
  405a1c:	strb	w10, [x1, #52]
  405a20:	b	405a58 <ferror@plt+0x2a88>
  405a24:	strb	w10, [x1, #53]
  405a28:	b	405a58 <ferror@plt+0x2a88>
  405a2c:	ldr	x15, [x1, #32]
  405a30:	cbnz	x15, 405a58 <ferror@plt+0x2a88>
  405a34:	str	x14, [x1, #32]
  405a38:	b	405a58 <ferror@plt+0x2a88>
  405a3c:	strb	w10, [x1, #50]
  405a40:	b	405a58 <ferror@plt+0x2a88>
  405a44:	strb	w10, [x1, #55]
  405a48:	b	405a58 <ferror@plt+0x2a88>
  405a4c:	strb	w10, [x1, #54]
  405a50:	b	405a58 <ferror@plt+0x2a88>
  405a54:	strb	w10, [x1, #51]
  405a58:	add	x0, x0, #0x1
  405a5c:	b	4059ac <ferror@plt+0x29dc>
  405a60:	ret
  405a64:	stp	x29, x30, [sp, #-48]!
  405a68:	stp	x20, x19, [sp, #32]
  405a6c:	mov	x19, x1
  405a70:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405a74:	mov	x20, x0
  405a78:	add	x1, x1, #0xd6d
  405a7c:	mov	w2, #0x5                   	// #5
  405a80:	mov	x0, xzr
  405a84:	str	x21, [sp, #16]
  405a88:	mov	x29, sp
  405a8c:	bl	402eb0 <dcgettext@plt>
  405a90:	mov	x21, x0
  405a94:	mov	w2, #0x5                   	// #5
  405a98:	mov	x0, xzr
  405a9c:	mov	x1, x19
  405aa0:	bl	402eb0 <dcgettext@plt>
  405aa4:	mov	x19, x0
  405aa8:	mov	x0, x20
  405aac:	bl	40d8f4 <ferror@plt+0xa924>
  405ab0:	mov	x4, x0
  405ab4:	mov	w0, #0x2                   	// #2
  405ab8:	mov	w1, wzr
  405abc:	mov	x2, x21
  405ac0:	mov	x3, x19
  405ac4:	bl	402900 <error@plt>
  405ac8:	stp	x29, x30, [sp, #-32]!
  405acc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405ad0:	str	x19, [sp, #16]
  405ad4:	mov	x19, x0
  405ad8:	add	x1, x1, #0xdd0
  405adc:	mov	w2, #0x5                   	// #5
  405ae0:	mov	x0, xzr
  405ae4:	mov	x29, sp
  405ae8:	bl	402eb0 <dcgettext@plt>
  405aec:	mov	x2, x0
  405af0:	mov	w0, #0x2                   	// #2
  405af4:	mov	w1, wzr
  405af8:	mov	x3, x19
  405afc:	bl	402900 <error@plt>
  405b00:	stp	x29, x30, [sp, #-48]!
  405b04:	stp	x20, x19, [sp, #32]
  405b08:	adrp	x20, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405b0c:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405b10:	ldr	x8, [x20, #1584]
  405b14:	ldr	x10, [x9, #2632]
  405b18:	mov	x19, x0
  405b1c:	str	x21, [sp, #16]
  405b20:	mov	x29, sp
  405b24:	cmp	x8, x10
  405b28:	b.ne	405b54 <ferror@plt+0x2b84>  // b.any
  405b2c:	adrp	x21, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405b30:	ldr	x0, [x21, #2640]
  405b34:	cbz	x0, 405b60 <ferror@plt+0x2b90>
  405b38:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  405b3c:	movk	x10, #0xaaa, lsl #48
  405b40:	cmp	x8, x10
  405b44:	b.cs	405b6c <ferror@plt+0x2b9c>  // b.hs, b.nlast
  405b48:	add	x8, x8, x8, lsr #1
  405b4c:	add	x8, x8, #0x1
  405b50:	b	405b74 <ferror@plt+0x2ba4>
  405b54:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405b58:	ldr	x0, [x9, #2640]
  405b5c:	b	405b88 <ferror@plt+0x2bb8>
  405b60:	cbz	x8, 405b70 <ferror@plt+0x2ba0>
  405b64:	lsr	x10, x8, #60
  405b68:	cbz	x10, 405b74 <ferror@plt+0x2ba4>
  405b6c:	bl	40f1e8 <ferror@plt+0xc218>
  405b70:	mov	w8, #0x10                  	// #16
  405b74:	lsl	x1, x8, #3
  405b78:	str	x8, [x9, #2632]
  405b7c:	bl	40effc <ferror@plt+0xc02c>
  405b80:	ldr	x8, [x20, #1584]
  405b84:	str	x0, [x21, #2640]
  405b88:	add	x9, x8, #0x1
  405b8c:	str	x9, [x20, #1584]
  405b90:	str	x19, [x0, x8, lsl #3]
  405b94:	ldp	x20, x19, [sp, #32]
  405b98:	ldr	x21, [sp, #16]
  405b9c:	ldp	x29, x30, [sp], #48
  405ba0:	ret
  405ba4:	stp	x29, x30, [sp, #-32]!
  405ba8:	str	x19, [sp, #16]
  405bac:	mov	x29, sp
  405bb0:	mov	x19, x0
  405bb4:	bl	4060c8 <ferror@plt+0x30f8>
  405bb8:	cbz	x0, 405bc8 <ferror@plt+0x2bf8>
  405bbc:	ldr	x19, [sp, #16]
  405bc0:	ldp	x29, x30, [sp], #32
  405bc4:	ret
  405bc8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405bcc:	add	x1, x1, #0xea1
  405bd0:	mov	w2, #0x5                   	// #5
  405bd4:	bl	402eb0 <dcgettext@plt>
  405bd8:	mov	x1, x19
  405bdc:	bl	406054 <ferror@plt+0x3084>
  405be0:	stp	x29, x30, [sp, #-32]!
  405be4:	stp	x20, x19, [sp, #16]
  405be8:	mov	x29, sp
  405bec:	mov	x19, x1
  405bf0:	mov	x20, x0
  405bf4:	bl	4029f0 <fileno@plt>
  405bf8:	cmp	w0, #0x1
  405bfc:	b.eq	405c20 <ferror@plt+0x2c50>  // b.none
  405c00:	cbnz	w0, 405c38 <ferror@plt+0x2c68>
  405c04:	mov	x0, x20
  405c08:	bl	402da0 <feof_unlocked@plt>
  405c0c:	cbz	w0, 405c44 <ferror@plt+0x2c74>
  405c10:	mov	x0, x20
  405c14:	ldp	x20, x19, [sp, #16]
  405c18:	ldp	x29, x30, [sp], #32
  405c1c:	b	402e30 <clearerr_unlocked@plt>
  405c20:	mov	x0, x20
  405c24:	bl	402db0 <fflush_unlocked@plt>
  405c28:	cbz	w0, 405c44 <ferror@plt+0x2c74>
  405c2c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405c30:	add	x1, x1, #0xf19
  405c34:	b	405c58 <ferror@plt+0x2c88>
  405c38:	mov	x0, x20
  405c3c:	bl	40fce0 <ferror@plt+0xcd10>
  405c40:	cbnz	w0, 405c50 <ferror@plt+0x2c80>
  405c44:	ldp	x20, x19, [sp, #16]
  405c48:	ldp	x29, x30, [sp], #32
  405c4c:	ret
  405c50:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405c54:	add	x1, x1, #0xa1d
  405c58:	mov	w2, #0x5                   	// #5
  405c5c:	mov	x0, xzr
  405c60:	bl	402eb0 <dcgettext@plt>
  405c64:	mov	x1, x19
  405c68:	bl	406054 <ferror@plt+0x3084>
  405c6c:	ldr	x8, [x0, #32]
  405c70:	cbnz	x8, 405cb4 <ferror@plt+0x2ce4>
  405c74:	ldr	x8, [x0, #40]
  405c78:	cbnz	x8, 405cb4 <ferror@plt+0x2ce4>
  405c7c:	ldrb	w8, [x0, #48]
  405c80:	cbnz	w8, 405cb4 <ferror@plt+0x2ce4>
  405c84:	ldrb	w8, [x0, #49]
  405c88:	cbnz	w8, 405cb4 <ferror@plt+0x2ce4>
  405c8c:	ldrb	w8, [x0, #50]
  405c90:	cbnz	w8, 405cb4 <ferror@plt+0x2ce4>
  405c94:	ldrb	w8, [x0, #52]
  405c98:	cbnz	w8, 405cb4 <ferror@plt+0x2ce4>
  405c9c:	ldrb	w8, [x0, #53]
  405ca0:	cbnz	w8, 405cb4 <ferror@plt+0x2ce4>
  405ca4:	ldrb	w8, [x0, #54]
  405ca8:	cbnz	w8, 405cb4 <ferror@plt+0x2ce4>
  405cac:	ldrb	w8, [x0, #56]
  405cb0:	cbz	w8, 405cbc <ferror@plt+0x2cec>
  405cb4:	mov	w0, wzr
  405cb8:	ret
  405cbc:	ldrb	w8, [x0, #51]
  405cc0:	cmp	w8, #0x0
  405cc4:	cset	w0, eq  // eq = none
  405cc8:	ret
  405ccc:	sub	sp, sp, #0xf0
  405cd0:	stp	x29, x30, [sp, #144]
  405cd4:	stp	x28, x27, [sp, #160]
  405cd8:	stp	x26, x25, [sp, #176]
  405cdc:	stp	x24, x23, [sp, #192]
  405ce0:	stp	x22, x21, [sp, #208]
  405ce4:	stp	x20, x19, [sp, #224]
  405ce8:	adrp	x19, 424000 <_obstack_memory_used@@Base+0x13ac0>
  405cec:	ldr	w8, [x19, #1000]
  405cf0:	mov	x21, x2
  405cf4:	mov	x22, x1
  405cf8:	mov	x20, x0
  405cfc:	cmp	x8, x2
  405d00:	add	x29, sp, #0x90
  405d04:	str	x3, [sp]
  405d08:	b.cs	405e20 <ferror@plt+0x2e50>  // b.hs, b.nlast
  405d0c:	add	x26, x20, #0x8
  405d10:	cmp	x21, w8, uxtw
  405d14:	b.cs	405d2c <ferror@plt+0x2d5c>  // b.hs, b.nlast
  405d18:	mov	x27, xzr
  405d1c:	mov	x28, xzr
  405d20:	mov	w8, w8
  405d24:	mov	x9, x21
  405d28:	b	405d90 <ferror@plt+0x2dc0>
  405d2c:	mov	x28, xzr
  405d30:	mov	x27, xzr
  405d34:	mov	x25, x26
  405d38:	add	x0, sp, #0x10
  405d3c:	mov	w1, wzr
  405d40:	bl	408324 <ferror@plt+0x5354>
  405d44:	ldr	w2, [x19, #1000]
  405d48:	ldr	x3, [sp, #16]
  405d4c:	mov	x23, x0
  405d50:	add	x24, x23, #0xd
  405d54:	cmp	x22, x2
  405d58:	add	x0, x20, x28, lsl #4
  405d5c:	csel	x1, x22, x2, cc  // cc = lo, ul, last
  405d60:	mov	x4, x24
  405d64:	bl	407a94 <ferror@plt+0x4ac4>
  405d68:	subs	x8, x22, x0
  405d6c:	stp	x24, x23, [x25, #-8]
  405d70:	csel	x22, xzr, x8, cc  // cc = lo, ul, last
  405d74:	ldr	w8, [x19, #1000]
  405d78:	add	x28, x0, x28
  405d7c:	sub	x9, x21, x28
  405d80:	add	x27, x27, #0x1
  405d84:	cmp	x9, x8
  405d88:	add	x25, x25, #0x10
  405d8c:	b.cs	405d38 <ferror@plt+0x2d68>  // b.hs, b.nlast
  405d90:	udiv	x10, x27, x8
  405d94:	neg	x11, x27
  405d98:	madd	x10, x10, x8, x11
  405d9c:	add	x8, x8, x10
  405da0:	subs	x25, x9, x8
  405da4:	b.ls	405df4 <ferror@plt+0x2e24>  // b.plast
  405da8:	add	x0, sp, #0x10
  405dac:	mov	w1, wzr
  405db0:	add	x23, x25, #0x1
  405db4:	bl	408324 <ferror@plt+0x5354>
  405db8:	ldr	x3, [sp, #16]
  405dbc:	mov	x24, x0
  405dc0:	cmp	x22, x23
  405dc4:	csinc	x1, x22, x25, cc  // cc = lo, ul, last
  405dc8:	add	x25, x24, #0xd
  405dcc:	add	x0, x20, x28, lsl #4
  405dd0:	mov	x2, x23
  405dd4:	mov	x4, x25
  405dd8:	bl	407a94 <ferror@plt+0x4ac4>
  405ddc:	subs	x8, x22, x0
  405de0:	add	x9, x20, x27, lsl #4
  405de4:	add	x27, x27, #0x1
  405de8:	csel	x22, xzr, x8, cc  // cc = lo, ul, last
  405dec:	add	x28, x0, x28
  405df0:	stp	x25, x24, [x9]
  405df4:	sub	x8, x21, x28
  405df8:	add	x0, x20, x27, lsl #4
  405dfc:	add	x1, x20, x28, lsl #4
  405e00:	lsl	x2, x8, #4
  405e04:	bl	402870 <memmove@plt>
  405e08:	ldr	w8, [x19, #1000]
  405e0c:	add	x9, x27, x21
  405e10:	sub	x21, x9, x28
  405e14:	add	x22, x22, x27
  405e18:	cmp	x21, x8
  405e1c:	b.hi	405d10 <ferror@plt+0x2d40>  // b.pmore
  405e20:	cmp	x22, x21
  405e24:	b.cs	405f04 <ferror@plt+0x2f34>  // b.hs, b.nlast
  405e28:	adrp	x24, 412000 <_obstack_memory_used@@Base+0x1ac0>
  405e2c:	mov	x25, xzr
  405e30:	sub	x19, x21, x22
  405e34:	add	x23, x20, x22, lsl #4
  405e38:	add	x24, x24, #0xf28
  405e3c:	ldr	x26, [x23]
  405e40:	mov	x1, x24
  405e44:	mov	x0, x26
  405e48:	bl	402ce0 <strcmp@plt>
  405e4c:	ldr	x8, [sp]
  405e50:	mov	w27, w0
  405e54:	cbz	x8, 405ea4 <ferror@plt+0x2ed4>
  405e58:	ldr	x0, [sp]
  405e5c:	mov	x1, x26
  405e60:	bl	402ce0 <strcmp@plt>
  405e64:	cbz	w27, 405ea4 <ferror@plt+0x2ed4>
  405e68:	cbnz	w0, 405ea4 <ferror@plt+0x2ed4>
  405e6c:	cbnz	x25, 405e98 <ferror@plt+0x2ec8>
  405e70:	add	x0, sp, #0x8
  405e74:	mov	w1, wzr
  405e78:	bl	408324 <ferror@plt+0x5354>
  405e7c:	ldr	x3, [sp, #8]
  405e80:	mov	x25, x0
  405e84:	add	x4, x0, #0xd
  405e88:	mov	w2, #0x1                   	// #1
  405e8c:	mov	x0, x23
  405e90:	mov	x1, xzr
  405e94:	bl	407a94 <ferror@plt+0x4ac4>
  405e98:	add	x8, x25, #0xd
  405e9c:	stp	x8, x25, [x23]
  405ea0:	b	405ef8 <ferror@plt+0x2f28>
  405ea4:	bl	406200 <ferror@plt+0x3230>
  405ea8:	cbz	x0, 405f04 <ferror@plt+0x2f34>
  405eac:	mov	x26, x0
  405eb0:	cbz	w27, 405ec8 <ferror@plt+0x2ef8>
  405eb4:	ldr	x0, [x23]
  405eb8:	add	x1, sp, #0x10
  405ebc:	bl	4110d8 <_obstack_memory_used@@Base+0xb98>
  405ec0:	cbnz	w0, 405ef8 <ferror@plt+0x2f28>
  405ec4:	b	405ed8 <ferror@plt+0x2f08>
  405ec8:	add	x1, sp, #0x10
  405ecc:	mov	w0, wzr
  405ed0:	bl	4110e8 <_obstack_memory_used@@Base+0xba8>
  405ed4:	cbnz	w0, 405ef8 <ferror@plt+0x2f28>
  405ed8:	ldr	x8, [sp, #24]
  405edc:	ldr	x9, [x26, #8]
  405ee0:	cmp	x8, x9
  405ee4:	b.ne	405ef8 <ferror@plt+0x2f28>  // b.any
  405ee8:	ldr	x8, [sp, #16]
  405eec:	ldr	x9, [x26]
  405ef0:	cmp	x8, x9
  405ef4:	b.eq	405e6c <ferror@plt+0x2e9c>  // b.none
  405ef8:	subs	x19, x19, #0x1
  405efc:	add	x23, x23, #0x10
  405f00:	b.ne	405e3c <ferror@plt+0x2e6c>  // b.any
  405f04:	add	x23, x20, #0x10
  405f08:	add	x2, sp, #0x10
  405f0c:	mov	x0, x20
  405f10:	mov	x1, x21
  405f14:	bl	407b38 <ferror@plt+0x4b68>
  405f18:	mov	x25, x0
  405f1c:	cmp	x0, x21
  405f20:	b.ne	405f54 <ferror@plt+0x2f84>  // b.any
  405f24:	ldr	x0, [sp]
  405f28:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  405f2c:	add	x1, x1, #0x121
  405f30:	bl	4060c8 <ferror@plt+0x30f8>
  405f34:	cbnz	x0, 405fe0 <ferror@plt+0x3010>
  405f38:	bl	402f40 <__errno_location@plt>
  405f3c:	cmp	x21, #0x3
  405f40:	b.cc	406018 <ferror@plt+0x3048>  // b.lo, b.ul, b.last
  405f44:	ldr	w8, [x0]
  405f48:	cmp	w8, #0x18
  405f4c:	b.eq	405f5c <ferror@plt+0x2f8c>  // b.none
  405f50:	b	406018 <ferror@plt+0x3048>
  405f54:	cmp	x25, #0x2
  405f58:	b.ls	406034 <ferror@plt+0x3064>  // b.plast
  405f5c:	ldr	x27, [sp, #16]
  405f60:	add	x26, x20, x25, lsl #4
  405f64:	sub	x19, x27, #0x8
  405f68:	ldr	x0, [x19, x25, lsl #3]
  405f6c:	ldr	x1, [x26, #-16]!
  405f70:	sub	x25, x25, #0x1
  405f74:	bl	405be0 <ferror@plt+0x2c10>
  405f78:	cmp	x25, #0x2
  405f7c:	cset	w1, hi  // hi = pmore
  405f80:	add	x0, sp, #0x8
  405f84:	bl	408324 <ferror@plt+0x5354>
  405f88:	cbz	x0, 405f68 <ferror@plt+0x2f98>
  405f8c:	ldr	x3, [sp, #8]
  405f90:	cmp	x22, x25
  405f94:	csel	x19, x22, x25, cc  // cc = lo, ul, last
  405f98:	add	x24, x0, #0xd
  405f9c:	mov	x28, x0
  405fa0:	mov	x0, x20
  405fa4:	mov	x1, x19
  405fa8:	mov	x2, x25
  405fac:	mov	x4, x24
  405fb0:	mov	x5, x27
  405fb4:	bl	407d3c <ferror@plt+0x4d6c>
  405fb8:	sub	x21, x21, x25
  405fbc:	lsl	x2, x21, #4
  405fc0:	mov	x0, x23
  405fc4:	mov	x1, x26
  405fc8:	stp	x24, x28, [x20]
  405fcc:	bl	402870 <memmove@plt>
  405fd0:	sub	x8, x22, x19
  405fd4:	add	x22, x8, #0x1
  405fd8:	add	x21, x21, #0x1
  405fdc:	b	405f08 <ferror@plt+0x2f38>
  405fe0:	mov	x3, x0
  405fe4:	ldr	x5, [sp, #16]
  405fe8:	mov	x0, x20
  405fec:	mov	x1, x22
  405ff0:	mov	x2, x21
  405ff4:	ldr	x4, [sp]
  405ff8:	ldp	x20, x19, [sp, #224]
  405ffc:	ldp	x22, x21, [sp, #208]
  406000:	ldp	x24, x23, [sp, #192]
  406004:	ldp	x26, x25, [sp, #176]
  406008:	ldp	x28, x27, [sp, #160]
  40600c:	ldp	x29, x30, [sp, #144]
  406010:	add	sp, sp, #0xf0
  406014:	b	407d3c <ferror@plt+0x4d6c>
  406018:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40601c:	add	x1, x1, #0xea1
  406020:	mov	w2, #0x5                   	// #5
  406024:	mov	x0, xzr
  406028:	bl	402eb0 <dcgettext@plt>
  40602c:	ldr	x1, [sp]
  406030:	bl	406054 <ferror@plt+0x3084>
  406034:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  406038:	add	x1, x1, #0xea1
  40603c:	mov	w2, #0x5                   	// #5
  406040:	mov	x0, xzr
  406044:	bl	402eb0 <dcgettext@plt>
  406048:	lsl	x8, x25, #4
  40604c:	ldr	x1, [x20, x8]
  406050:	bl	406054 <ferror@plt+0x3084>
  406054:	stp	x29, x30, [sp, #-48]!
  406058:	str	x21, [sp, #16]
  40605c:	stp	x20, x19, [sp, #32]
  406060:	mov	x29, sp
  406064:	mov	x21, x1
  406068:	mov	x19, x0
  40606c:	bl	402f40 <__errno_location@plt>
  406070:	ldr	w20, [x0]
  406074:	cbnz	x21, 406090 <ferror@plt+0x30c0>
  406078:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40607c:	add	x1, x1, #0x23e
  406080:	mov	w2, #0x5                   	// #5
  406084:	mov	x0, xzr
  406088:	bl	402eb0 <dcgettext@plt>
  40608c:	mov	x21, x0
  406090:	mov	w1, #0x3                   	// #3
  406094:	mov	w0, wzr
  406098:	mov	x2, x21
  40609c:	bl	40d7b0 <ferror@plt+0xa7e0>
  4060a0:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4060a4:	mov	x4, x0
  4060a8:	add	x2, x2, #0x237
  4060ac:	mov	w0, #0x2                   	// #2
  4060b0:	mov	w1, w20
  4060b4:	mov	x3, x19
  4060b8:	bl	402900 <error@plt>
  4060bc:	ldr	x0, [x0]
  4060c0:	ldr	x1, [x1]
  4060c4:	b	402ce0 <strcmp@plt>
  4060c8:	stp	x29, x30, [sp, #-48]!
  4060cc:	stp	x20, x19, [sp, #32]
  4060d0:	ldrb	w8, [x1]
  4060d4:	mov	x19, x0
  4060d8:	str	x21, [sp, #16]
  4060dc:	mov	x29, sp
  4060e0:	cmp	w8, #0x77
  4060e4:	b.eq	406128 <ferror@plt+0x3158>  // b.none
  4060e8:	cmp	w8, #0x72
  4060ec:	b.ne	4061a4 <ferror@plt+0x31d4>  // b.any
  4060f0:	mov	x20, x1
  4060f4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4060f8:	add	x1, x1, #0xf28
  4060fc:	mov	x0, x19
  406100:	bl	402ce0 <strcmp@plt>
  406104:	cbz	w0, 406168 <ferror@plt+0x3198>
  406108:	mov	w1, #0x80000               	// #524288
  40610c:	mov	x0, x19
  406110:	bl	402a90 <open@plt>
  406114:	tbnz	w0, #31, 406180 <ferror@plt+0x31b0>
  406118:	mov	x1, x20
  40611c:	bl	402b30 <fdopen@plt>
  406120:	mov	x19, x0
  406124:	b	406184 <ferror@plt+0x31b4>
  406128:	cbz	x19, 40615c <ferror@plt+0x318c>
  40612c:	mov	w0, #0x1                   	// #1
  406130:	mov	x1, xzr
  406134:	bl	402ef0 <ftruncate@plt>
  406138:	cbz	w0, 40615c <ferror@plt+0x318c>
  40613c:	bl	402f40 <__errno_location@plt>
  406140:	ldr	w20, [x0]
  406144:	bl	406200 <ferror@plt+0x3230>
  406148:	cbz	x0, 4061c4 <ferror@plt+0x31f4>
  40614c:	ldr	w8, [x0, #16]
  406150:	and	w8, w8, #0xf000
  406154:	cmp	w8, #0x8, lsl #12
  406158:	b.eq	4061c4 <ferror@plt+0x31f4>  // b.none
  40615c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406160:	ldr	x19, [x8, #1368]
  406164:	b	406190 <ferror@plt+0x31c0>
  406168:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40616c:	ldr	x19, [x8, #1376]
  406170:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406174:	mov	w9, #0x1                   	// #1
  406178:	strb	w9, [x8, #1416]
  40617c:	b	406184 <ferror@plt+0x31b4>
  406180:	mov	x19, xzr
  406184:	mov	w1, #0x2                   	// #2
  406188:	mov	x0, x19
  40618c:	bl	40a734 <ferror@plt+0x7764>
  406190:	mov	x0, x19
  406194:	ldp	x20, x19, [sp, #32]
  406198:	ldr	x21, [sp, #16]
  40619c:	ldp	x29, x30, [sp], #48
  4061a0:	ret
  4061a4:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4061a8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4061ac:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4061b0:	add	x0, x0, #0xec2
  4061b4:	add	x1, x1, #0x709
  4061b8:	add	x3, x3, #0xeeb
  4061bc:	mov	w2, #0x3d6                 	// #982
  4061c0:	bl	402f30 <__assert_fail@plt>
  4061c4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  4061c8:	add	x1, x1, #0xead
  4061cc:	mov	w2, #0x5                   	// #5
  4061d0:	mov	x0, xzr
  4061d4:	bl	402eb0 <dcgettext@plt>
  4061d8:	mov	x21, x0
  4061dc:	mov	w1, #0x3                   	// #3
  4061e0:	mov	w0, wzr
  4061e4:	mov	x2, x19
  4061e8:	bl	40d7b0 <ferror@plt+0xa7e0>
  4061ec:	mov	x3, x0
  4061f0:	mov	w0, #0x2                   	// #2
  4061f4:	mov	w1, w20
  4061f8:	mov	x2, x21
  4061fc:	bl	402900 <error@plt>
  406200:	stp	x29, x30, [sp, #-32]!
  406204:	str	x19, [sp, #16]
  406208:	adrp	x19, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40620c:	ldr	w8, [x19, #2648]
  406210:	mov	x29, sp
  406214:	cbnz	w8, 406240 <ferror@plt+0x3270>
  406218:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40621c:	add	x1, x1, #0xa60
  406220:	mov	w0, #0x1                   	// #1
  406224:	bl	4110e8 <_obstack_memory_used@@Base+0xba8>
  406228:	cbz	w0, 406238 <ferror@plt+0x3268>
  40622c:	bl	402f40 <__errno_location@plt>
  406230:	ldr	w8, [x0]
  406234:	b	40623c <ferror@plt+0x326c>
  406238:	mov	w8, #0xffffffff            	// #-1
  40623c:	str	w8, [x19, #2648]
  406240:	ldr	x19, [sp, #16]
  406244:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406248:	add	x9, x9, #0xa60
  40624c:	cmp	w8, #0x0
  406250:	csel	x0, x9, xzr, lt  // lt = tstop
  406254:	ldp	x29, x30, [sp], #32
  406258:	ret
  40625c:	ldrb	w8, [x0, #48]
  406260:	cbnz	w8, 40626c <ferror@plt+0x329c>
  406264:	ldrb	w8, [x0, #49]
  406268:	cbz	w8, 406274 <ferror@plt+0x32a4>
  40626c:	mov	w8, #0x62                  	// #98
  406270:	strb	w8, [x1], #1
  406274:	ldr	x8, [x0, #32]
  406278:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40627c:	add	x9, x9, #0x840
  406280:	cmp	x8, x9
  406284:	b.ne	406290 <ferror@plt+0x32c0>  // b.any
  406288:	mov	w8, #0x64                  	// #100
  40628c:	strb	w8, [x1], #1
  406290:	ldr	x8, [x0, #40]
  406294:	cbz	x8, 4062a0 <ferror@plt+0x32d0>
  406298:	mov	w8, #0x66                  	// #102
  40629c:	strb	w8, [x1], #1
  4062a0:	ldrb	w8, [x0, #52]
  4062a4:	cbz	w8, 4062b0 <ferror@plt+0x32e0>
  4062a8:	mov	w8, #0x67                  	// #103
  4062ac:	strb	w8, [x1], #1
  4062b0:	ldrb	w8, [x0, #53]
  4062b4:	cbz	w8, 4062c0 <ferror@plt+0x32f0>
  4062b8:	mov	w8, #0x68                  	// #104
  4062bc:	strb	w8, [x1], #1
  4062c0:	ldr	x8, [x0, #32]
  4062c4:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4062c8:	add	x9, x9, #0x740
  4062cc:	cmp	x8, x9
  4062d0:	b.ne	4062dc <ferror@plt+0x330c>  // b.any
  4062d4:	mov	w8, #0x69                  	// #105
  4062d8:	strb	w8, [x1], #1
  4062dc:	ldrb	w8, [x0, #54]
  4062e0:	cbz	w8, 4062ec <ferror@plt+0x331c>
  4062e4:	mov	w8, #0x4d                  	// #77
  4062e8:	strb	w8, [x1], #1
  4062ec:	ldrb	w8, [x0, #50]
  4062f0:	cbz	w8, 4062fc <ferror@plt+0x332c>
  4062f4:	mov	w8, #0x6e                  	// #110
  4062f8:	strb	w8, [x1], #1
  4062fc:	ldrb	w8, [x0, #51]
  406300:	cbz	w8, 40630c <ferror@plt+0x333c>
  406304:	mov	w8, #0x52                  	// #82
  406308:	strb	w8, [x1], #1
  40630c:	ldrb	w8, [x0, #55]
  406310:	cbz	w8, 40631c <ferror@plt+0x334c>
  406314:	mov	w8, #0x72                  	// #114
  406318:	strb	w8, [x1], #1
  40631c:	ldrb	w8, [x0, #56]
  406320:	cbz	w8, 40632c <ferror@plt+0x335c>
  406324:	mov	w8, #0x56                  	// #86
  406328:	strb	w8, [x1], #1
  40632c:	strb	wzr, [x1]
  406330:	ret
  406334:	stp	x29, x30, [sp, #-48]!
  406338:	stp	x22, x21, [sp, #16]
  40633c:	stp	x20, x19, [sp, #32]
  406340:	mov	x20, x1
  406344:	mov	x19, x0
  406348:	add	x22, x1, #0x1
  40634c:	mov	x29, sp
  406350:	and	x8, x2, #0xffffffffffffffe0
  406354:	add	x21, x8, #0x20
  406358:	mov	x0, x21
  40635c:	bl	402a60 <malloc@plt>
  406360:	str	x0, [x19]
  406364:	cbnz	x0, 406378 <ferror@plt+0x33a8>
  406368:	lsr	x2, x21, #1
  40636c:	cmp	x2, x22
  406370:	b.hi	406350 <ferror@plt+0x3380>  // b.pmore
  406374:	bl	40f1e8 <ferror@plt+0xc218>
  406378:	stp	xzr, x20, [x19, #32]
  40637c:	stp	xzr, x21, [x19, #16]
  406380:	strb	wzr, [x19, #48]
  406384:	str	xzr, [x19, #8]
  406388:	ldp	x20, x19, [sp, #32]
  40638c:	ldp	x22, x21, [sp, #16]
  406390:	ldp	x29, x30, [sp], #48
  406394:	ret
  406398:	sub	sp, sp, #0x90
  40639c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4063a0:	ldrb	w8, [x8, #1563]
  4063a4:	stp	x29, x30, [sp, #48]
  4063a8:	stp	x28, x27, [sp, #64]
  4063ac:	stp	x26, x25, [sp, #80]
  4063b0:	stp	x24, x23, [sp, #96]
  4063b4:	stp	x22, x21, [sp, #112]
  4063b8:	stp	x20, x19, [sp, #128]
  4063bc:	mov	x11, x0
  4063c0:	ldrb	w9, [x11, #48]
  4063c4:	cmp	w8, #0x0
  4063c8:	mov	w8, #0xa                   	// #10
  4063cc:	mov	w0, wzr
  4063d0:	csel	w22, wzr, w8, ne  // ne = any
  4063d4:	add	x29, sp, #0x30
  4063d8:	cbnz	w9, 406690 <ferror@plt+0x36c0>
  4063dc:	str	x2, [sp]
  4063e0:	adrp	x10, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4063e4:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4063e8:	ldr	x8, [x11, #8]
  4063ec:	ldp	x2, x12, [x11, #32]
  4063f0:	ldr	x10, [x10, #1200]
  4063f4:	ldr	x23, [x9, #1568]
  4063f8:	mov	x19, x1
  4063fc:	cmp	x8, x2
  406400:	sub	x28, x10, #0x22
  406404:	stp	x11, x12, [x29, #-16]
  406408:	b.eq	406428 <ferror@plt+0x3458>  // b.none
  40640c:	ldr	x0, [x11]
  406410:	add	x8, x0, x8
  406414:	sub	x1, x8, x2
  406418:	bl	402870 <memmove@plt>
  40641c:	ldur	x11, [x29, #-16]
  406420:	ldr	x8, [x11, #32]
  406424:	stp	x8, xzr, [x11, #8]
  406428:	ldur	x9, [x29, #-8]
  40642c:	adrp	x20, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406430:	add	x20, x20, #0x640
  406434:	add	x9, x9, #0x1
  406438:	stp	x19, x9, [sp, #16]
  40643c:	ldr	x24, [x11]
  406440:	ldr	x25, [x11, #24]
  406444:	ldr	x9, [x11, #16]
  406448:	ldur	x10, [x29, #-8]
  40644c:	add	x12, x24, x8
  406450:	add	x8, x24, x25
  406454:	sub	x19, x8, x9, lsl #5
  406458:	msub	x10, x10, x9, x8
  40645c:	sub	x21, x10, x12
  406460:	cbz	x9, 406478 <ferror@plt+0x34a8>
  406464:	neg	x9, x9
  406468:	add	x8, x8, x9, lsl #5
  40646c:	ldr	x10, [x19]
  406470:	ldr	x8, [x8, #8]
  406474:	add	x24, x10, x8
  406478:	ldr	x9, [sp, #24]
  40647c:	cmp	x9, x21
  406480:	b.cs	406608 <ferror@plt+0x3638>  // b.hs, b.nlast
  406484:	ldr	x27, [sp, #16]
  406488:	sub	x8, x21, #0x1
  40648c:	udiv	x26, x8, x9
  406490:	mov	w1, #0x1                   	// #1
  406494:	mov	x0, x12
  406498:	mov	x2, x26
  40649c:	mov	x3, x27
  4064a0:	mov	x25, x12
  4064a4:	bl	402c80 <fread_unlocked@plt>
  4064a8:	mov	x9, x0
  4064ac:	cmp	x0, x26
  4064b0:	add	x26, x25, x0
  4064b4:	b.ne	4064c4 <ferror@plt+0x34f4>  // b.any
  4064b8:	mov	x0, x25
  4064bc:	mov	x27, x26
  4064c0:	b	40652c <ferror@plt+0x355c>
  4064c4:	mov	x0, x27
  4064c8:	str	x9, [sp, #8]
  4064cc:	bl	402920 <ferror_unlocked@plt>
  4064d0:	cbnz	w0, 4066cc <ferror@plt+0x36fc>
  4064d4:	mov	x0, x27
  4064d8:	bl	402da0 <feof_unlocked@plt>
  4064dc:	cbz	w0, 406520 <ferror@plt+0x3550>
  4064e0:	ldur	x9, [x29, #-16]
  4064e4:	ldr	x8, [x9]
  4064e8:	cmp	x8, x26
  4064ec:	mov	w8, #0x1                   	// #1
  4064f0:	strb	w8, [x9, #48]
  4064f4:	b.eq	40668c <ferror@plt+0x36bc>  // b.none
  4064f8:	ldr	x9, [sp, #8]
  4064fc:	cmp	x24, x26
  406500:	mov	x27, x24
  406504:	mov	x0, x25
  406508:	b.eq	40652c <ferror@plt+0x355c>  // b.none
  40650c:	ldurb	w8, [x26, #-1]
  406510:	cmp	w8, w22
  406514:	b.eq	4064bc <ferror@plt+0x34ec>  // b.none
  406518:	strb	w22, [x26], #1
  40651c:	b	4064bc <ferror@plt+0x34ec>
  406520:	ldr	x9, [sp, #8]
  406524:	mov	x27, x26
  406528:	mov	x0, x25
  40652c:	sub	x2, x27, x0
  406530:	mov	w1, w22
  406534:	sub	x21, x21, x9
  406538:	bl	402e60 <memchr@plt>
  40653c:	cbz	x0, 4065e4 <ferror@plt+0x3614>
  406540:	mov	x25, x19
  406544:	mov	x26, x0
  406548:	strb	wzr, [x26], #1
  40654c:	sub	x8, x26, x24
  406550:	str	x24, [x25, #-32]!
  406554:	cmp	x28, x8
  406558:	str	x8, [x25, #8]
  40655c:	csel	x28, x28, x8, hi  // hi = pmore
  406560:	ldur	x8, [x29, #-8]
  406564:	sub	x21, x21, x8
  406568:	cbz	x23, 4065c4 <ferror@plt+0x35f4>
  40656c:	ldr	x8, [x23, #16]
  406570:	cmn	x8, #0x1
  406574:	b.eq	406584 <ferror@plt+0x35b4>  // b.none
  406578:	mov	x0, x25
  40657c:	mov	x1, x23
  406580:	bl	407510 <ferror@plt+0x4540>
  406584:	stur	x0, [x19, #-8]
  406588:	ldr	x8, [x23]
  40658c:	cmn	x8, #0x1
  406590:	b.eq	4065a8 <ferror@plt+0x35d8>  // b.none
  406594:	mov	x0, x25
  406598:	mov	x1, x23
  40659c:	bl	40763c <ferror@plt+0x466c>
  4065a0:	mov	x24, x0
  4065a4:	b	4065c0 <ferror@plt+0x35f0>
  4065a8:	ldrb	w8, [x23, #48]
  4065ac:	cbz	w8, 4065c0 <ferror@plt+0x35f0>
  4065b0:	sub	x24, x24, #0x1
  4065b4:	ldrb	w8, [x24, #1]!
  4065b8:	ldrb	w8, [x20, x8]
  4065bc:	cbnz	w8, 4065b4 <ferror@plt+0x35e4>
  4065c0:	stur	x24, [x19, #-16]
  4065c4:	sub	x2, x27, x26
  4065c8:	mov	x0, x26
  4065cc:	mov	w1, w22
  4065d0:	bl	402e60 <memchr@plt>
  4065d4:	mov	x24, x26
  4065d8:	mov	x19, x25
  4065dc:	cbnz	x0, 406544 <ferror@plt+0x3574>
  4065e0:	b	4065ec <ferror@plt+0x361c>
  4065e4:	mov	x25, x19
  4065e8:	mov	x26, x24
  4065ec:	ldur	x11, [x29, #-16]
  4065f0:	mov	x12, x27
  4065f4:	mov	x19, x25
  4065f8:	mov	x24, x26
  4065fc:	ldrb	w8, [x11, #48]
  406600:	cbz	w8, 406478 <ferror@plt+0x34a8>
  406604:	b	406614 <ferror@plt+0x3644>
  406608:	mov	x27, x12
  40660c:	mov	x25, x19
  406610:	mov	x26, x24
  406614:	ldr	x0, [x11]
  406618:	ldr	x8, [x11, #24]
  40661c:	sub	x9, x27, x0
  406620:	add	x10, x0, x8
  406624:	subs	x10, x10, x25
  406628:	asr	x10, x10, #5
  40662c:	stp	x9, x10, [x11, #8]
  406630:	b.ne	4066b0 <ferror@plt+0x36e0>  // b.any
  406634:	lsr	x9, x8, #5
  406638:	cbz	x0, 406658 <ferror@plt+0x3688>
  40663c:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  406640:	movk	x10, #0x5540
  406644:	cmp	x8, x10
  406648:	b.cs	4066e8 <ferror@plt+0x3718>  // b.hs, b.nlast
  40664c:	add	x8, x9, x8, lsr #6
  406650:	add	x9, x8, #0x1
  406654:	b	406668 <ferror@plt+0x3698>
  406658:	cbz	x9, 406664 <ferror@plt+0x3694>
  40665c:	tbz	x8, #63, 406668 <ferror@plt+0x3698>
  406660:	b	4066e8 <ferror@plt+0x3718>
  406664:	mov	w9, #0x4                   	// #4
  406668:	lsl	x25, x9, #5
  40666c:	mov	x1, x25
  406670:	bl	40effc <ferror@plt+0xc02c>
  406674:	ldur	x11, [x29, #-16]
  406678:	mov	x24, x0
  40667c:	ldr	x8, [x11, #8]
  406680:	str	x0, [x11]
  406684:	str	x25, [x11, #24]
  406688:	b	406444 <ferror@plt+0x3474>
  40668c:	mov	w0, wzr
  406690:	ldp	x20, x19, [sp, #128]
  406694:	ldp	x22, x21, [sp, #112]
  406698:	ldp	x24, x23, [sp, #96]
  40669c:	ldp	x26, x25, [sp, #80]
  4066a0:	ldp	x28, x27, [sp, #64]
  4066a4:	ldp	x29, x30, [sp, #48]
  4066a8:	add	sp, sp, #0x90
  4066ac:	ret
  4066b0:	sub	x8, x27, x26
  4066b4:	add	x9, x28, #0x22
  4066b8:	str	x8, [x11, #32]
  4066bc:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4066c0:	mov	w0, #0x1                   	// #1
  4066c4:	str	x9, [x8, #1200]
  4066c8:	b	406690 <ferror@plt+0x36c0>
  4066cc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4066d0:	add	x1, x1, #0x81
  4066d4:	mov	w2, #0x5                   	// #5
  4066d8:	mov	x0, xzr
  4066dc:	bl	402eb0 <dcgettext@plt>
  4066e0:	ldr	x1, [sp]
  4066e4:	bl	406054 <ferror@plt+0x3084>
  4066e8:	bl	40f1e8 <ferror@plt+0xc218>
  4066ec:	stp	x29, x30, [sp, #-96]!
  4066f0:	stp	x28, x27, [sp, #16]
  4066f4:	stp	x26, x25, [sp, #32]
  4066f8:	stp	x24, x23, [sp, #48]
  4066fc:	stp	x22, x21, [sp, #64]
  406700:	stp	x20, x19, [sp, #80]
  406704:	mov	x29, sp
  406708:	sub	sp, sp, #0x2, lsl #12
  40670c:	sub	sp, sp, #0x150
  406710:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406714:	ldr	x21, [x8, #1568]
  406718:	mov	x24, x1
  40671c:	cbz	x21, 407138 <ferror@plt+0x4168>
  406720:	ldp	x26, x19, [x0, #16]
  406724:	stp	x0, x24, [sp, #136]
  406728:	add	x8, sp, #0x1, lsl #12
  40672c:	ldp	x28, x20, [x24, #16]
  406730:	add	x8, x8, #0x40
  406734:	add	x9, sp, #0x1, lsl #12
  406738:	add	x9, x9, #0x180
  40673c:	add	x8, x8, #0x9c
  406740:	adrp	x23, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406744:	str	x8, [sp, #40]
  406748:	add	x8, x9, #0x10
  40674c:	add	x23, x23, #0x640
  406750:	str	x8, [sp, #16]
  406754:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406758:	ldp	x22, x27, [x21, #32]
  40675c:	cmp	x26, x19
  406760:	ldrb	w10, [x8, #1400]
  406764:	csel	x9, x26, x19, hi  // hi = pmore
  406768:	cmp	x28, x20
  40676c:	csel	x8, x28, x20, hi  // hi = pmore
  406770:	sub	x19, x9, x26
  406774:	sub	x24, x8, x28
  406778:	cbnz	w10, 4067ac <ferror@plt+0x37dc>
  40677c:	ldrb	w10, [x21, #50]
  406780:	cbnz	w10, 4067ac <ferror@plt+0x37dc>
  406784:	ldrb	w10, [x21, #52]
  406788:	cbnz	w10, 4067ac <ferror@plt+0x37dc>
  40678c:	ldrb	w10, [x21, #53]
  406790:	cbnz	w10, 4067ac <ferror@plt+0x37dc>
  406794:	ldrb	w10, [x21, #54]
  406798:	cbnz	w10, 4067ac <ferror@plt+0x37dc>
  40679c:	ldrb	w10, [x21, #51]
  4067a0:	cbnz	w10, 4067ac <ferror@plt+0x37dc>
  4067a4:	ldrb	w10, [x21, #56]
  4067a8:	cbz	w10, 406f98 <ferror@plt+0x3fc8>
  4067ac:	orr	x10, x27, x22
  4067b0:	cmp	x10, #0x0
  4067b4:	cset	w11, ne  // ne = any
  4067b8:	str	w11, [sp, #156]
  4067bc:	cbz	x10, 4067dc <ferror@plt+0x380c>
  4067c0:	add	x8, x24, x19
  4067c4:	add	x0, x8, #0x2
  4067c8:	cmp	x0, #0xfa1
  4067cc:	b.cs	4067fc <ferror@plt+0x382c>  // b.hs, b.nlast
  4067d0:	str	xzr, [sp, #120]
  4067d4:	add	x25, sp, #0xa0
  4067d8:	b	406808 <ferror@plt+0x3838>
  4067dc:	ldrb	w10, [x9]
  4067e0:	strb	wzr, [x9]
  4067e4:	ldrb	w9, [x8]
  4067e8:	mov	x25, x26
  4067ec:	mov	x26, x28
  4067f0:	mov	x20, x19
  4067f4:	stp	w9, w10, [sp, #128]
  4067f8:	b	4068a8 <ferror@plt+0x38d8>
  4067fc:	bl	40efac <ferror@plt+0xbfdc>
  406800:	mov	x25, x0
  406804:	str	x0, [sp, #120]
  406808:	add	x8, x25, x19
  40680c:	add	x10, x8, #0x1
  406810:	mov	x20, xzr
  406814:	cbz	x19, 406854 <ferror@plt+0x3884>
  406818:	cbz	x22, 406828 <ferror@plt+0x3858>
  40681c:	ldrb	w8, [x26]
  406820:	ldrb	w8, [x22, x8]
  406824:	cbnz	w8, 406848 <ferror@plt+0x3878>
  406828:	mov	x8, x26
  40682c:	cbz	x27, 406838 <ferror@plt+0x3868>
  406830:	ldrb	w8, [x26]
  406834:	add	x8, x27, x8
  406838:	ldrb	w8, [x8]
  40683c:	add	x9, x20, #0x1
  406840:	strb	w8, [x25, x20]
  406844:	mov	x20, x9
  406848:	subs	x19, x19, #0x1
  40684c:	add	x26, x26, #0x1
  406850:	b.ne	406818 <ferror@plt+0x3848>  // b.any
  406854:	mov	x9, xzr
  406858:	mov	x26, x10
  40685c:	strb	wzr, [x25, x20]
  406860:	cbz	x24, 4068a0 <ferror@plt+0x38d0>
  406864:	cbz	x22, 406874 <ferror@plt+0x38a4>
  406868:	ldrb	w8, [x28]
  40686c:	ldrb	w8, [x22, x8]
  406870:	cbnz	w8, 406894 <ferror@plt+0x38c4>
  406874:	mov	x8, x28
  406878:	cbz	x27, 406884 <ferror@plt+0x38b4>
  40687c:	ldrb	w8, [x28]
  406880:	add	x8, x27, x8
  406884:	ldrb	w8, [x8]
  406888:	add	x10, x9, #0x1
  40688c:	strb	w8, [x26, x9]
  406890:	mov	x9, x10
  406894:	subs	x24, x24, #0x1
  406898:	add	x28, x28, #0x1
  40689c:	b.ne	406864 <ferror@plt+0x3894>  // b.any
  4068a0:	add	x8, x26, x9
  4068a4:	mov	x24, x9
  4068a8:	strb	wzr, [x8]
  4068ac:	ldrb	w8, [x21, #50]
  4068b0:	cbz	w8, 406954 <ferror@plt+0x3984>
  4068b4:	sub	x0, x25, #0x1
  4068b8:	ldrb	w8, [x0, #1]!
  4068bc:	ldrb	w8, [x23, x8]
  4068c0:	cbnz	w8, 4068b8 <ferror@plt+0x38e8>
  4068c4:	sub	x1, x26, #0x1
  4068c8:	ldrb	w8, [x1, #1]!
  4068cc:	ldrb	w8, [x23, x8]
  4068d0:	cbnz	w8, 4068c8 <ferror@plt+0x38f8>
  4068d4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4068d8:	ldr	w2, [x8, #1408]
  4068dc:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4068e0:	ldr	w3, [x8, #1412]
  4068e4:	bl	40e658 <ferror@plt+0xb688>
  4068e8:	mov	w22, w0
  4068ec:	ldr	w8, [sp, #156]
  4068f0:	cbz	w8, 406900 <ferror@plt+0x3930>
  4068f4:	ldr	x0, [sp, #120]
  4068f8:	bl	402d30 <free@plt>
  4068fc:	b	406910 <ferror@plt+0x3940>
  406900:	ldr	w8, [sp, #132]
  406904:	strb	w8, [x25, x20]
  406908:	ldr	w8, [sp, #128]
  40690c:	strb	w8, [x26, x24]
  406910:	cbnz	w22, 407104 <ferror@plt+0x4134>
  406914:	ldr	x21, [x21, #64]
  406918:	cbz	x21, 407114 <ferror@plt+0x4144>
  40691c:	ldr	x8, [x21, #16]
  406920:	cmn	x8, #0x1
  406924:	b.eq	4069b0 <ferror@plt+0x39e0>  // b.none
  406928:	ldr	x22, [sp, #136]
  40692c:	mov	x1, x21
  406930:	mov	x0, x22
  406934:	bl	407510 <ferror@plt+0x4540>
  406938:	ldr	x24, [sp, #144]
  40693c:	mov	x19, x0
  406940:	mov	x1, x21
  406944:	mov	x0, x24
  406948:	bl	407510 <ferror@plt+0x4540>
  40694c:	mov	x20, x0
  406950:	b	4069cc <ferror@plt+0x39fc>
  406954:	ldrb	w8, [x21, #52]
  406958:	cbz	w8, 406a58 <ferror@plt+0x3a88>
  40695c:	add	x1, sp, #0x1, lsl #12
  406960:	add	x1, x1, #0x180
  406964:	mov	x0, x25
  406968:	bl	402d20 <strtold@plt>
  40696c:	sub	x1, x29, #0x10
  406970:	mov	x0, x26
  406974:	str	q0, [sp, #96]
  406978:	bl	402d20 <strtold@plt>
  40697c:	ldr	x9, [sp, #4480]
  406980:	ldur	x8, [x29, #-16]
  406984:	cmp	x9, x25
  406988:	b.eq	406ab0 <ferror@plt+0x3ae0>  // b.none
  40698c:	cmp	x8, x26
  406990:	b.eq	406af8 <ferror@plt+0x3b28>  // b.none
  406994:	mov	v1.16b, v0.16b
  406998:	ldr	q0, [sp, #96]
  40699c:	str	q1, [sp, #80]
  4069a0:	bl	410dc0 <_obstack_memory_used@@Base+0x880>
  4069a4:	tbz	w0, #31, 406ae8 <ferror@plt+0x3b18>
  4069a8:	mov	w22, #0xffffffff            	// #-1
  4069ac:	b	4068ec <ferror@plt+0x391c>
  4069b0:	ldp	x22, x24, [sp, #136]
  4069b4:	ldp	x8, x9, [x22]
  4069b8:	ldp	x10, x11, [x24]
  4069bc:	add	x8, x8, x9
  4069c0:	add	x9, x10, x11
  4069c4:	sub	x19, x8, #0x1
  4069c8:	sub	x20, x9, #0x1
  4069cc:	ldr	x8, [x21]
  4069d0:	cmn	x8, #0x1
  4069d4:	b.eq	4069fc <ferror@plt+0x3a2c>  // b.none
  4069d8:	mov	x0, x22
  4069dc:	mov	x1, x21
  4069e0:	bl	40763c <ferror@plt+0x466c>
  4069e4:	mov	x26, x0
  4069e8:	mov	x0, x24
  4069ec:	mov	x1, x21
  4069f0:	bl	40763c <ferror@plt+0x466c>
  4069f4:	mov	x28, x0
  4069f8:	b	406754 <ferror@plt+0x3784>
  4069fc:	ldr	x26, [x22]
  406a00:	ldrb	w8, [x21, #48]
  406a04:	ldr	x28, [x24]
  406a08:	cbz	w8, 406754 <ferror@plt+0x3784>
  406a0c:	cmp	x26, x19
  406a10:	b.cs	406a30 <ferror@plt+0x3a60>  // b.hs, b.nlast
  406a14:	ldrb	w8, [x26]
  406a18:	ldrb	w8, [x23, x8]
  406a1c:	cbz	w8, 406a30 <ferror@plt+0x3a60>
  406a20:	add	x26, x26, #0x1
  406a24:	cmp	x19, x26
  406a28:	b.ne	406a14 <ferror@plt+0x3a44>  // b.any
  406a2c:	mov	x26, x19
  406a30:	cmp	x28, x20
  406a34:	b.cs	406754 <ferror@plt+0x3784>  // b.hs, b.nlast
  406a38:	ldrb	w8, [x28]
  406a3c:	ldrb	w8, [x23, x8]
  406a40:	cbz	w8, 406754 <ferror@plt+0x3784>
  406a44:	add	x28, x28, #0x1
  406a48:	cmp	x20, x28
  406a4c:	b.ne	406a38 <ferror@plt+0x3a68>  // b.any
  406a50:	mov	x28, x20
  406a54:	b	406754 <ferror@plt+0x3784>
  406a58:	ldrb	w8, [x21, #53]
  406a5c:	cbz	w8, 406abc <ferror@plt+0x3aec>
  406a60:	sub	x19, x25, #0x1
  406a64:	ldrb	w8, [x19, #1]!
  406a68:	ldrb	w8, [x23, x8]
  406a6c:	cbnz	w8, 406a64 <ferror@plt+0x3a94>
  406a70:	mov	x27, x26
  406a74:	sub	x22, x26, #0x1
  406a78:	ldrb	w8, [x22, #1]!
  406a7c:	ldrb	w8, [x23, x8]
  406a80:	cbnz	w8, 406a78 <ferror@plt+0x3aa8>
  406a84:	mov	x0, x19
  406a88:	bl	407824 <ferror@plt+0x4854>
  406a8c:	mov	w26, w0
  406a90:	mov	x0, x22
  406a94:	bl	407824 <ferror@plt+0x4854>
  406a98:	subs	w9, w26, w0
  406a9c:	b.eq	406b00 <ferror@plt+0x3b30>  // b.none
  406aa0:	ldr	w8, [sp, #156]
  406aa4:	mov	x26, x27
  406aa8:	mov	w22, w9
  406aac:	b	4068f0 <ferror@plt+0x3920>
  406ab0:	cmp	x8, x26
  406ab4:	csetm	w22, ne  // ne = any
  406ab8:	b	4068ec <ferror@plt+0x391c>
  406abc:	ldrb	w8, [x21, #54]
  406ac0:	cbz	w8, 406b40 <ferror@plt+0x3b70>
  406ac4:	mov	x0, x25
  406ac8:	mov	x1, xzr
  406acc:	bl	40777c <ferror@plt+0x47ac>
  406ad0:	mov	w19, w0
  406ad4:	mov	x0, x26
  406ad8:	mov	x1, xzr
  406adc:	bl	40777c <ferror@plt+0x47ac>
  406ae0:	sub	w22, w19, w0
  406ae4:	b	4068ec <ferror@plt+0x391c>
  406ae8:	ldp	q1, q0, [sp, #80]
  406aec:	bl	410c78 <_obstack_memory_used@@Base+0x738>
  406af0:	cmp	w0, #0x0
  406af4:	b.le	406b2c <ferror@plt+0x3b5c>
  406af8:	mov	w22, #0x1                   	// #1
  406afc:	b	4068ec <ferror@plt+0x391c>
  406b00:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406b04:	ldr	w2, [x8, #1408]
  406b08:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406b0c:	ldr	w3, [x8, #1412]
  406b10:	mov	x0, x19
  406b14:	mov	x1, x22
  406b18:	bl	40e658 <ferror@plt+0xb688>
  406b1c:	ldr	w8, [sp, #156]
  406b20:	mov	w22, w0
  406b24:	mov	x26, x27
  406b28:	b	4068f0 <ferror@plt+0x3920>
  406b2c:	ldp	q1, q0, [sp, #80]
  406b30:	bl	410b70 <_obstack_memory_used@@Base+0x630>
  406b34:	cbnz	w0, 406dc4 <ferror@plt+0x3df4>
  406b38:	mov	w22, wzr
  406b3c:	b	4068ec <ferror@plt+0x391c>
  406b40:	ldrb	w8, [x21, #51]
  406b44:	cbz	w8, 406e54 <ferror@plt+0x3e84>
  406b48:	ldr	x0, [sp, #40]
  406b4c:	adrp	x19, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406b50:	add	x19, x19, #0xae0
  406b54:	mov	w2, #0x9c                  	// #156
  406b58:	mov	x1, x19
  406b5c:	bl	402860 <memcpy@plt>
  406b60:	add	x0, sp, #0x1, lsl #12
  406b64:	add	x0, x0, #0x40
  406b68:	mov	w2, #0x9c                  	// #156
  406b6c:	mov	x1, x19
  406b70:	bl	402860 <memcpy@plt>
  406b74:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  406b78:	ldrb	w8, [x8, #1400]
  406b7c:	str	x26, [sp, #8]
  406b80:	cbz	w8, 406e6c <ferror@plt+0x3e9c>
  406b84:	add	x8, sp, #0x1, lsl #12
  406b88:	add	x8, x8, #0x1a0
  406b8c:	stp	x8, x26, [sp, #72]
  406b90:	add	x8, x25, x20
  406b94:	str	x8, [sp, #96]
  406b98:	add	x8, x26, x24
  406b9c:	str	x8, [sp, #64]
  406ba0:	add	x8, x24, x20
  406ba4:	add	x8, x8, x8, lsl #1
  406ba8:	add	x10, x8, #0x2
  406bac:	mov	w28, #0xfa0                 	// #4000
  406bb0:	mov	x27, x25
  406bb4:	str	xzr, [sp, #48]
  406bb8:	str	wzr, [sp, #36]
  406bbc:	str	x10, [sp, #24]
  406bc0:	cmp	x28, x10
  406bc4:	b.cs	406c0c <ferror@plt+0x3c3c>  // b.hs, b.nlast
  406bc8:	ldr	x0, [sp, #48]
  406bcc:	add	x8, x28, x28, lsl #1
  406bd0:	lsr	x9, x8, #1
  406bd4:	cmp	x10, x8, lsr #1
  406bd8:	csel	x19, x10, x9, hi  // hi = pmore
  406bdc:	bl	402d30 <free@plt>
  406be0:	mov	x0, x19
  406be4:	bl	402a60 <malloc@plt>
  406be8:	cmp	x0, #0x0
  406bec:	mov	w8, #0xfa0                 	// #4000
  406bf0:	csel	x28, x8, x19, eq  // eq = none
  406bf4:	add	x8, sp, #0x1, lsl #12
  406bf8:	add	x8, x8, #0x1a0
  406bfc:	mov	x26, x0
  406c00:	csel	x8, x8, x0, eq  // eq = none
  406c04:	str	x8, [sp, #72]
  406c08:	b	406c10 <ferror@plt+0x3c40>
  406c0c:	ldr	x26, [sp, #48]
  406c10:	ldr	x8, [sp, #96]
  406c14:	mov	x22, x27
  406c18:	cmp	x27, x8
  406c1c:	b.cs	406c38 <ferror@plt+0x3c68>  // b.hs, b.nlast
  406c20:	ldr	x0, [sp, #72]
  406c24:	mov	x1, x22
  406c28:	mov	x2, x28
  406c2c:	bl	407944 <ferror@plt+0x4974>
  406c30:	add	x19, x0, #0x1
  406c34:	b	406c3c <ferror@plt+0x3c6c>
  406c38:	mov	x19, xzr
  406c3c:	ldr	x1, [sp, #80]
  406c40:	ldr	x8, [sp, #64]
  406c44:	cmp	x1, x8
  406c48:	b.cs	406c6c <ferror@plt+0x3c9c>  // b.hs, b.nlast
  406c4c:	ldr	x8, [sp, #72]
  406c50:	subs	x9, x28, x19
  406c54:	csel	x2, xzr, x9, cc  // cc = lo, ul, last
  406c58:	add	x8, x8, x19
  406c5c:	csel	x0, x8, xzr, cs  // cs = hs, nlast
  406c60:	bl	407944 <ferror@plt+0x4974>
  406c64:	add	x8, x0, #0x1
  406c68:	b	406c70 <ferror@plt+0x3ca0>
  406c6c:	mov	x8, xzr
  406c70:	str	x8, [sp, #56]
  406c74:	add	x8, x8, x19
  406c78:	cmp	x8, x28
  406c7c:	b.hi	406c88 <ferror@plt+0x3cb8>  // b.pmore
  406c80:	cmp	x28, x19
  406c84:	b.cs	406cec <ferror@plt+0x3d1c>  // b.hs, b.nlast
  406c88:	add	x9, x8, x8, lsl #1
  406c8c:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  406c90:	lsr	x9, x9, #1
  406c94:	cmp	x8, x10
  406c98:	mov	x0, x26
  406c9c:	csel	x28, x9, x8, cc  // cc = lo, ul, last
  406ca0:	bl	402d30 <free@plt>
  406ca4:	mov	x0, x28
  406ca8:	bl	40efac <ferror@plt+0xbfdc>
  406cac:	ldr	x8, [sp, #96]
  406cb0:	mov	x26, x0
  406cb4:	cmp	x22, x8
  406cb8:	b.cs	406ccc <ferror@plt+0x3cfc>  // b.hs, b.nlast
  406cbc:	mov	x0, x26
  406cc0:	mov	x1, x22
  406cc4:	mov	x2, x19
  406cc8:	bl	402de0 <strxfrm@plt>
  406ccc:	ldr	x8, [sp, #64]
  406cd0:	ldr	x1, [sp, #80]
  406cd4:	cmp	x1, x8
  406cd8:	b.cs	406ce8 <ferror@plt+0x3d18>  // b.hs, b.nlast
  406cdc:	ldr	x2, [sp, #56]
  406ce0:	add	x0, x26, x19
  406ce4:	bl	402de0 <strxfrm@plt>
  406ce8:	str	x26, [sp, #72]
  406cec:	ldr	x8, [sp, #96]
  406cf0:	cmp	x22, x8
  406cf4:	b.cs	406d08 <ferror@plt+0x3d38>  // b.hs, b.nlast
  406cf8:	mov	x0, x22
  406cfc:	bl	4028c0 <strlen@plt>
  406d00:	add	x8, x0, x22
  406d04:	add	x22, x8, #0x1
  406d08:	ldr	x0, [sp, #80]
  406d0c:	ldr	x8, [sp, #64]
  406d10:	cmp	x0, x8
  406d14:	b.cs	406d28 <ferror@plt+0x3d58>  // b.hs, b.nlast
  406d18:	mov	x27, x0
  406d1c:	bl	4028c0 <strlen@plt>
  406d20:	add	x8, x0, x27
  406d24:	add	x0, x8, #0x1
  406d28:	ldr	x8, [sp, #96]
  406d2c:	str	x26, [sp, #48]
  406d30:	cmp	x22, x8
  406d34:	b.cc	406d44 <ferror@plt+0x3d74>  // b.lo, b.ul, b.last
  406d38:	ldr	x8, [sp, #64]
  406d3c:	cmp	x0, x8
  406d40:	b.cs	406e44 <ferror@plt+0x3e74>  // b.hs, b.nlast
  406d44:	ldr	x26, [sp, #72]
  406d48:	add	x2, sp, #0x1, lsl #12
  406d4c:	str	x0, [sp, #80]
  406d50:	add	x2, x2, #0x40
  406d54:	mov	x0, x26
  406d58:	mov	x1, x19
  406d5c:	mov	x27, x22
  406d60:	bl	40a568 <ferror@plt+0x7598>
  406d64:	ldr	x22, [sp, #56]
  406d68:	ldr	x2, [sp, #40]
  406d6c:	add	x26, x26, x19
  406d70:	mov	x0, x26
  406d74:	mov	x1, x22
  406d78:	bl	40a568 <ferror@plt+0x7598>
  406d7c:	ldr	w8, [sp, #36]
  406d80:	ldr	x10, [sp, #24]
  406d84:	cbnz	w8, 406bc0 <ferror@plt+0x3bf0>
  406d88:	ldr	x0, [sp, #72]
  406d8c:	cmp	x19, x22
  406d90:	cset	w8, cc  // cc = lo, ul, last
  406d94:	csel	x2, x19, x22, cc  // cc = lo, ul, last
  406d98:	mov	x1, x26
  406d9c:	str	w8, [sp, #36]
  406da0:	cset	w19, hi  // hi = pmore
  406da4:	bl	402c90 <memcmp@plt>
  406da8:	ldr	w8, [sp, #36]
  406dac:	ldr	x10, [sp, #24]
  406db0:	cmp	w0, #0x0
  406db4:	sub	w8, w19, w8
  406db8:	csel	w8, w8, w0, eq  // eq = none
  406dbc:	str	w8, [sp, #36]
  406dc0:	b	406bc0 <ferror@plt+0x3bf0>
  406dc4:	ldr	q0, [sp, #80]
  406dc8:	mov	v1.16b, v0.16b
  406dcc:	bl	410f00 <_obstack_memory_used@@Base+0x9c0>
  406dd0:	cbz	w0, 4069a8 <ferror@plt+0x39d8>
  406dd4:	ldr	q0, [sp, #96]
  406dd8:	mov	v1.16b, v0.16b
  406ddc:	bl	410f00 <_obstack_memory_used@@Base+0x9c0>
  406de0:	cbz	w0, 406af8 <ferror@plt+0x3b28>
  406de4:	mov	x0, x25
  406de8:	mov	x1, xzr
  406dec:	bl	402d20 <strtold@plt>
  406df0:	mov	x0, x26
  406df4:	mov	x1, xzr
  406df8:	str	q0, [sp, #4512]
  406dfc:	bl	402d20 <strtold@plt>
  406e00:	str	q0, [sp, #4160]
  406e04:	ldr	x8, [sp, #4512]
  406e08:	ldr	x9, [sp, #4160]
  406e0c:	rev	x8, x8
  406e10:	rev	x9, x9
  406e14:	cmp	x8, x9
  406e18:	b.ne	406e34 <ferror@plt+0x3e64>  // b.any
  406e1c:	ldr	x8, [sp, #4520]
  406e20:	ldr	x9, [sp, #4168]
  406e24:	rev	x8, x8
  406e28:	rev	x9, x9
  406e2c:	cmp	x8, x9
  406e30:	b.eq	406b38 <ferror@plt+0x3b68>  // b.none
  406e34:	cmp	x8, x9
  406e38:	mov	w8, #0xffffffff            	// #-1
  406e3c:	cneg	w22, w8, cs  // cs = hs, nlast
  406e40:	b	4068ec <ferror@plt+0x391c>
  406e44:	ldr	x27, [sp, #72]
  406e48:	ldr	x28, [sp, #56]
  406e4c:	add	x22, x27, x19
  406e50:	b	406e84 <ferror@plt+0x3eb4>
  406e54:	ldrb	w8, [x21, #56]
  406e58:	cbz	w8, 406f78 <ferror@plt+0x3fa8>
  406e5c:	mov	x0, x25
  406e60:	mov	x1, x26
  406e64:	bl	40a768 <ferror@plt+0x7798>
  406e68:	b	4068e8 <ferror@plt+0x3918>
  406e6c:	str	xzr, [sp, #48]
  406e70:	str	wzr, [sp, #36]
  406e74:	mov	x28, x24
  406e78:	mov	x22, x26
  406e7c:	mov	x19, x20
  406e80:	mov	x27, x25
  406e84:	add	x2, sp, #0x1, lsl #12
  406e88:	add	x2, x2, #0x40
  406e8c:	mov	x0, x27
  406e90:	mov	x1, x19
  406e94:	bl	40a568 <ferror@plt+0x7598>
  406e98:	add	x0, sp, #0x1, lsl #12
  406e9c:	add	x1, sp, #0x1, lsl #12
  406ea0:	add	x0, x0, #0x40
  406ea4:	add	x1, x1, #0x180
  406ea8:	bl	4099a8 <ferror@plt+0x69d8>
  406eac:	ldr	x26, [sp, #40]
  406eb0:	mov	x0, x22
  406eb4:	mov	x1, x28
  406eb8:	str	x28, [sp, #56]
  406ebc:	mov	x2, x26
  406ec0:	bl	40a568 <ferror@plt+0x7598>
  406ec4:	ldr	x1, [sp, #16]
  406ec8:	mov	x0, x26
  406ecc:	bl	4099a8 <ferror@plt+0x69d8>
  406ed0:	ldr	x8, [sp, #4480]
  406ed4:	ldr	x9, [sp, #4496]
  406ed8:	rev	x8, x8
  406edc:	rev	x9, x9
  406ee0:	cmp	x8, x9
  406ee4:	b.ne	406f0c <ferror@plt+0x3f3c>  // b.any
  406ee8:	ldr	x8, [sp, #4488]
  406eec:	ldr	x9, [sp, #4504]
  406ef0:	rev	x8, x8
  406ef4:	rev	x9, x9
  406ef8:	cmp	x8, x9
  406efc:	b.ne	406f0c <ferror@plt+0x3f3c>  // b.any
  406f00:	ldr	x26, [sp, #8]
  406f04:	mov	w8, wzr
  406f08:	b	406f1c <ferror@plt+0x3f4c>
  406f0c:	ldr	x26, [sp, #8]
  406f10:	cmp	x8, x9
  406f14:	mov	w8, #0xffffffff            	// #-1
  406f18:	cneg	w8, w8, cs  // cs = hs, nlast
  406f1c:	mov	w28, w8
  406f20:	cbnz	w8, 406f64 <ferror@plt+0x3f94>
  406f24:	ldr	w8, [sp, #36]
  406f28:	mov	w28, w8
  406f2c:	cbnz	w8, 406f64 <ferror@plt+0x3f94>
  406f30:	ldr	x8, [sp, #56]
  406f34:	mov	x0, x27
  406f38:	mov	x1, x22
  406f3c:	cmp	x19, x8
  406f40:	csel	x2, x19, x8, cc  // cc = lo, ul, last
  406f44:	bl	402c90 <memcmp@plt>
  406f48:	mov	w28, w0
  406f4c:	cbnz	w0, 406f64 <ferror@plt+0x3f94>
  406f50:	ldr	x8, [sp, #56]
  406f54:	cmp	x19, x8
  406f58:	cset	w8, cc  // cc = lo, ul, last
  406f5c:	cset	w9, hi  // hi = pmore
  406f60:	sub	w28, w9, w8
  406f64:	ldr	x0, [sp, #48]
  406f68:	bl	402d30 <free@plt>
  406f6c:	ldr	w8, [sp, #156]
  406f70:	mov	w22, w28
  406f74:	b	4068f0 <ferror@plt+0x3920>
  406f78:	cbz	x20, 407008 <ferror@plt+0x4038>
  406f7c:	cbz	x24, 406af8 <ferror@plt+0x3b28>
  406f80:	add	x1, x20, #0x1
  406f84:	add	x3, x24, #0x1
  406f88:	mov	x0, x25
  406f8c:	mov	x2, x26
  406f90:	bl	40f374 <ferror@plt+0xc3a4>
  406f94:	b	4068e8 <ferror@plt+0x3918>
  406f98:	cbz	x22, 407010 <ferror@plt+0x4040>
  406f9c:	cbz	x27, 40705c <ferror@plt+0x408c>
  406fa0:	cmp	x26, x9
  406fa4:	b.cs	406fbc <ferror@plt+0x3fec>  // b.hs, b.nlast
  406fa8:	ldrb	w10, [x26]
  406fac:	ldrb	w10, [x22, x10]
  406fb0:	cbz	w10, 406fc4 <ferror@plt+0x3ff4>
  406fb4:	add	x26, x26, #0x1
  406fb8:	b	406fa0 <ferror@plt+0x3fd0>
  406fbc:	mov	w10, wzr
  406fc0:	b	406fc8 <ferror@plt+0x3ff8>
  406fc4:	mov	w10, #0x1                   	// #1
  406fc8:	cmp	x28, x8
  406fcc:	b.cs	4070ac <ferror@plt+0x40dc>  // b.hs, b.nlast
  406fd0:	ldrb	w11, [x28]
  406fd4:	ldrb	w12, [x22, x11]
  406fd8:	cbz	w12, 406fe4 <ferror@plt+0x4014>
  406fdc:	add	x28, x28, #0x1
  406fe0:	b	406fc8 <ferror@plt+0x3ff8>
  406fe4:	cbz	w10, 4070a4 <ferror@plt+0x40d4>
  406fe8:	ldrb	w10, [x26]
  406fec:	ldrb	w11, [x27, x11]
  406ff0:	ldrb	w10, [x27, x10]
  406ff4:	subs	w10, w10, w11
  406ff8:	b.ne	4070f0 <ferror@plt+0x4120>  // b.any
  406ffc:	add	x26, x26, #0x1
  407000:	add	x28, x28, #0x1
  407004:	b	406fa0 <ferror@plt+0x3fd0>
  407008:	cmp	x24, #0x0
  40700c:	b	406ab4 <ferror@plt+0x3ae4>
  407010:	cbz	x19, 4070b8 <ferror@plt+0x40e8>
  407014:	cbz	x24, 4070f8 <ferror@plt+0x4128>
  407018:	cbz	x27, 4070c4 <ferror@plt+0x40f4>
  40701c:	cmp	x28, x8
  407020:	b.cs	4070dc <ferror@plt+0x410c>  // b.hs, b.nlast
  407024:	cmp	x26, x9
  407028:	b.cs	4070dc <ferror@plt+0x410c>  // b.hs, b.nlast
  40702c:	ldrb	w10, [x26], #1
  407030:	ldrb	w10, [x27, x10]
  407034:	ldrb	w11, [x28], #1
  407038:	ldrb	w11, [x27, x11]
  40703c:	subs	w22, w10, w11
  407040:	b.eq	40701c <ferror@plt+0x404c>  // b.none
  407044:	b	407104 <ferror@plt+0x4134>
  407048:	ldrb	w10, [x26]
  40704c:	subs	w10, w10, w11
  407050:	b.ne	4070f0 <ferror@plt+0x4120>  // b.any
  407054:	add	x26, x26, #0x1
  407058:	add	x28, x28, #0x1
  40705c:	cmp	x26, x9
  407060:	b.cs	407078 <ferror@plt+0x40a8>  // b.hs, b.nlast
  407064:	ldrb	w10, [x26]
  407068:	ldrb	w10, [x22, x10]
  40706c:	cbz	w10, 407080 <ferror@plt+0x40b0>
  407070:	add	x26, x26, #0x1
  407074:	b	40705c <ferror@plt+0x408c>
  407078:	mov	w10, wzr
  40707c:	b	407084 <ferror@plt+0x40b4>
  407080:	mov	w10, #0x1                   	// #1
  407084:	cmp	x28, x8
  407088:	b.cs	4070ac <ferror@plt+0x40dc>  // b.hs, b.nlast
  40708c:	ldrb	w11, [x28]
  407090:	ldrb	w12, [x22, x11]
  407094:	cbz	w12, 4070a0 <ferror@plt+0x40d0>
  407098:	add	x28, x28, #0x1
  40709c:	b	407084 <ferror@plt+0x40b4>
  4070a0:	cbnz	w10, 407048 <ferror@plt+0x4078>
  4070a4:	mov	w8, #0xffffffff            	// #-1
  4070a8:	b	4070b0 <ferror@plt+0x40e0>
  4070ac:	mov	w8, wzr
  4070b0:	add	w22, w8, w10
  4070b4:	b	406910 <ferror@plt+0x3940>
  4070b8:	cmp	x24, #0x0
  4070bc:	csetm	w22, ne  // ne = any
  4070c0:	b	406910 <ferror@plt+0x3940>
  4070c4:	cmp	x19, x24
  4070c8:	csel	x2, x19, x24, cc  // cc = lo, ul, last
  4070cc:	mov	x0, x26
  4070d0:	mov	x1, x28
  4070d4:	bl	402c90 <memcmp@plt>
  4070d8:	cbnz	w0, 407100 <ferror@plt+0x4130>
  4070dc:	cmp	x19, x24
  4070e0:	cset	w22, ne  // ne = any
  4070e4:	b.cs	406910 <ferror@plt+0x3940>  // b.hs, b.nlast
  4070e8:	mov	w22, #0xffffffff            	// #-1
  4070ec:	b	407104 <ferror@plt+0x4134>
  4070f0:	mov	w22, w10
  4070f4:	b	407104 <ferror@plt+0x4134>
  4070f8:	mov	w22, #0x1                   	// #1
  4070fc:	b	407104 <ferror@plt+0x4134>
  407100:	mov	w22, w0
  407104:	ldrb	w8, [x21, #55]
  407108:	cmp	w8, #0x0
  40710c:	cneg	w0, w22, ne  // ne = any
  407110:	cbnz	w0, 4071c0 <ferror@plt+0x41f0>
  407114:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407118:	ldrb	w8, [x8, #1562]
  40711c:	tbnz	w8, #0, 407130 <ferror@plt+0x4160>
  407120:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407124:	ldrb	w8, [x8, #1561]
  407128:	ldp	x0, x24, [sp, #136]
  40712c:	tbz	w8, #0, 407138 <ferror@plt+0x4168>
  407130:	mov	w0, wzr
  407134:	b	4071c0 <ferror@plt+0x41f0>
  407138:	ldr	x19, [x0, #8]
  40713c:	ldr	x20, [x24, #8]
  407140:	sub	x22, x19, #0x1
  407144:	sub	x21, x20, #0x1
  407148:	cbz	x22, 407174 <ferror@plt+0x41a4>
  40714c:	cbz	x21, 407180 <ferror@plt+0x41b0>
  407150:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407154:	ldrb	w8, [x8, #1400]
  407158:	ldr	x0, [x0]
  40715c:	ldr	x2, [x24]
  407160:	cbz	w8, 407188 <ferror@plt+0x41b8>
  407164:	mov	x1, x19
  407168:	mov	x3, x20
  40716c:	bl	40f374 <ferror@plt+0xc3a4>
  407170:	b	4071b0 <ferror@plt+0x41e0>
  407174:	cmp	x21, #0x0
  407178:	csetm	w0, ne  // ne = any
  40717c:	b	4071b0 <ferror@plt+0x41e0>
  407180:	mov	w0, #0x1                   	// #1
  407184:	b	4071b0 <ferror@plt+0x41e0>
  407188:	cmp	x22, x21
  40718c:	csel	x8, x22, x21, cc  // cc = lo, ul, last
  407190:	mov	x1, x2
  407194:	mov	x2, x8
  407198:	bl	402c90 <memcmp@plt>
  40719c:	cbnz	w0, 4071b0 <ferror@plt+0x41e0>
  4071a0:	cmp	x19, x20
  4071a4:	cset	w8, ne  // ne = any
  4071a8:	cmp	x22, x21
  4071ac:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  4071b0:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4071b4:	ldrb	w8, [x8, #1576]
  4071b8:	cmp	w8, #0x0
  4071bc:	cneg	w0, w0, ne  // ne = any
  4071c0:	add	sp, sp, #0x2, lsl #12
  4071c4:	add	sp, sp, #0x150
  4071c8:	ldp	x20, x19, [sp, #80]
  4071cc:	ldp	x22, x21, [sp, #64]
  4071d0:	ldp	x24, x23, [sp, #48]
  4071d4:	ldp	x26, x25, [sp, #32]
  4071d8:	ldp	x28, x27, [sp, #16]
  4071dc:	ldp	x29, x30, [sp], #96
  4071e0:	ret
  4071e4:	sub	sp, sp, #0x70
  4071e8:	stp	x29, x30, [sp, #16]
  4071ec:	stp	x28, x27, [sp, #32]
  4071f0:	stp	x26, x25, [sp, #48]
  4071f4:	stp	x24, x23, [sp, #64]
  4071f8:	stp	x22, x21, [sp, #80]
  4071fc:	stp	x20, x19, [sp, #96]
  407200:	ldp	x21, x23, [x0]
  407204:	mov	x22, x2
  407208:	mov	x20, x1
  40720c:	add	x29, sp, #0x10
  407210:	add	x24, x21, x23
  407214:	cbnz	x2, 407284 <ferror@plt+0x42b4>
  407218:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40721c:	ldrb	w8, [x8, #1560]
  407220:	cmp	w8, #0x1
  407224:	b.ne	407284 <ferror@plt+0x42b4>  // b.any
  407228:	mov	x19, x0
  40722c:	sub	x22, x23, #0x1
  407230:	mov	w23, #0xa                   	// #10
  407234:	mov	w25, #0x3e                  	// #62
  407238:	cmp	x21, x24
  40723c:	b.cs	4072dc <ferror@plt+0x430c>  // b.hs, b.nlast
  407240:	ldrb	w8, [x21], #1
  407244:	cmp	x22, #0x0
  407248:	mov	x1, x20
  40724c:	csel	w9, w23, w8, eq  // eq = none
  407250:	cmp	w8, #0x9
  407254:	csel	w0, w25, w9, eq  // eq = none
  407258:	bl	402e90 <fputc_unlocked@plt>
  40725c:	cmn	w0, #0x1
  407260:	sub	x22, x22, #0x1
  407264:	b.ne	407238 <ferror@plt+0x4268>  // b.any
  407268:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40726c:	add	x1, x1, #0xf4
  407270:	mov	w2, #0x5                   	// #5
  407274:	mov	x0, xzr
  407278:	bl	402eb0 <dcgettext@plt>
  40727c:	mov	x1, xzr
  407280:	bl	406054 <ferror@plt+0x3084>
  407284:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407288:	ldrb	w8, [x8, #1563]
  40728c:	mov	w1, #0x1                   	// #1
  407290:	mov	x0, x21
  407294:	mov	x2, x23
  407298:	cmp	w8, #0x0
  40729c:	mov	w8, #0xa                   	// #10
  4072a0:	csel	w8, wzr, w8, ne  // ne = any
  4072a4:	mov	x3, x20
  4072a8:	sturb	w8, [x24, #-1]
  4072ac:	bl	4028a0 <fwrite_unlocked@plt>
  4072b0:	cmp	x0, x23
  4072b4:	b.ne	4074f4 <ferror@plt+0x4524>  // b.any
  4072b8:	sturb	wzr, [x24, #-1]
  4072bc:	ldp	x20, x19, [sp, #96]
  4072c0:	ldp	x22, x21, [sp, #80]
  4072c4:	ldp	x24, x23, [sp, #64]
  4072c8:	ldp	x26, x25, [sp, #48]
  4072cc:	ldp	x28, x27, [sp, #32]
  4072d0:	ldp	x29, x30, [sp, #16]
  4072d4:	add	sp, sp, #0x70
  4072d8:	ret
  4072dc:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4072e0:	ldr	x21, [x8, #1568]
  4072e4:	adrp	x20, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4072e8:	adrp	x28, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4072ec:	add	x20, x20, #0x101
  4072f0:	adrp	x26, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4072f4:	adrp	x27, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4072f8:	add	x28, x28, #0x640
  4072fc:	ldp	x22, x8, [x19]
  407300:	add	x8, x22, x8
  407304:	sub	x23, x8, #0x1
  407308:	cbz	x21, 4073a4 <ferror@plt+0x43d4>
  40730c:	ldr	x25, [x21]
  407310:	mov	x24, x22
  407314:	cmn	x25, #0x1
  407318:	b.eq	40732c <ferror@plt+0x435c>  // b.none
  40731c:	mov	x0, x19
  407320:	mov	x1, x21
  407324:	bl	40763c <ferror@plt+0x466c>
  407328:	mov	x24, x0
  40732c:	ldr	x8, [x21, #16]
  407330:	cmn	x8, #0x1
  407334:	b.eq	407348 <ferror@plt+0x4378>  // b.none
  407338:	mov	x0, x19
  40733c:	mov	x1, x21
  407340:	bl	407510 <ferror@plt+0x4540>
  407344:	mov	x23, x0
  407348:	ldrb	w8, [x21, #48]
  40734c:	cbz	w8, 407358 <ferror@plt+0x4388>
  407350:	cmn	x25, #0x1
  407354:	b.eq	407378 <ferror@plt+0x43a8>  // b.none
  407358:	ldrb	w8, [x21, #54]
  40735c:	cbnz	w8, 407378 <ferror@plt+0x43a8>
  407360:	ldrb	w8, [x21, #50]
  407364:	cbnz	w8, 407378 <ferror@plt+0x43a8>
  407368:	ldrb	w8, [x21, #52]
  40736c:	cbnz	w8, 407378 <ferror@plt+0x43a8>
  407370:	ldrb	w8, [x21, #53]
  407374:	cbz	w8, 407460 <ferror@plt+0x4490>
  407378:	ldrb	w25, [x23]
  40737c:	sub	x24, x24, #0x1
  407380:	strb	wzr, [x23]
  407384:	ldrb	w8, [x24, #1]!
  407388:	ldrb	w8, [x28, x8]
  40738c:	cbnz	w8, 407384 <ferror@plt+0x43b4>
  407390:	cmp	x23, x24
  407394:	str	x24, [sp, #8]
  407398:	b.cs	4073ac <ferror@plt+0x43dc>  // b.hs, b.nlast
  40739c:	str	x23, [sp, #8]
  4073a0:	b	407458 <ferror@plt+0x4488>
  4073a4:	mov	x24, x22
  4073a8:	b	407460 <ferror@plt+0x4490>
  4073ac:	ldrb	w8, [x21, #54]
  4073b0:	cbz	w8, 4073c4 <ferror@plt+0x43f4>
  4073b4:	add	x1, sp, #0x8
  4073b8:	mov	x0, x24
  4073bc:	bl	40777c <ferror@plt+0x47ac>
  4073c0:	b	407458 <ferror@plt+0x4488>
  4073c4:	ldrb	w8, [x21, #52]
  4073c8:	cbz	w8, 4073dc <ferror@plt+0x440c>
  4073cc:	add	x1, sp, #0x8
  4073d0:	mov	x0, x24
  4073d4:	bl	402d20 <strtold@plt>
  4073d8:	b	407458 <ferror@plt+0x4488>
  4073dc:	ldrb	w8, [x21, #50]
  4073e0:	cbnz	w8, 4073ec <ferror@plt+0x441c>
  4073e4:	ldrb	w8, [x21, #53]
  4073e8:	cbz	w8, 40739c <ferror@plt+0x43cc>
  4073ec:	cmp	x24, x23
  4073f0:	b.cs	407404 <ferror@plt+0x4434>  // b.hs, b.nlast
  4073f4:	ldrb	w8, [x24]
  4073f8:	cmp	w8, #0x2d
  4073fc:	cset	w8, eq  // eq = none
  407400:	b	407408 <ferror@plt+0x4438>
  407404:	mov	x8, xzr
  407408:	add	x8, x24, x8
  40740c:	mov	x0, sp
  407410:	str	x8, [sp]
  407414:	bl	407888 <ferror@plt+0x48b8>
  407418:	and	w8, w0, #0xff
  40741c:	cmp	w8, #0x30
  407420:	b.cc	407458 <ferror@plt+0x4488>  // b.lo, b.ul, b.last
  407424:	ldrb	w9, [x21, #53]
  407428:	ldr	x8, [sp]
  40742c:	cbz	w9, 40744c <ferror@plt+0x447c>
  407430:	ldrb	w9, [x8]
  407434:	adrp	x10, 411000 <_obstack_memory_used@@Base+0xac0>
  407438:	add	x10, x10, #0x6e0
  40743c:	ldrb	w9, [x10, x9]
  407440:	cmp	w9, #0x0
  407444:	cset	w9, ne  // ne = any
  407448:	b	407450 <ferror@plt+0x4480>
  40744c:	mov	x9, xzr
  407450:	add	x8, x8, x9
  407454:	str	x8, [sp, #8]
  407458:	strb	w25, [x23]
  40745c:	ldr	x23, [sp, #8]
  407460:	mov	x0, x22
  407464:	mov	x1, x24
  407468:	bl	407a18 <ferror@plt+0x4a48>
  40746c:	mov	x25, x0
  407470:	mov	x0, x24
  407474:	mov	x1, x23
  407478:	bl	407a18 <ferror@plt+0x4a48>
  40747c:	mov	x22, x0
  407480:	cbz	x25, 407494 <ferror@plt+0x44c4>
  407484:	mov	w0, #0x20                  	// #32
  407488:	sub	x25, x25, #0x1
  40748c:	bl	402b50 <putchar_unlocked@plt>
  407490:	cbnz	x25, 407484 <ferror@plt+0x44b4>
  407494:	cbz	x22, 4074b8 <ferror@plt+0x44e8>
  407498:	mov	w0, #0x5f                  	// #95
  40749c:	bl	402b50 <putchar_unlocked@plt>
  4074a0:	subs	x22, x22, #0x1
  4074a4:	b.ne	407498 <ferror@plt+0x44c8>  // b.any
  4074a8:	mov	w0, #0xa                   	// #10
  4074ac:	bl	402b50 <putchar_unlocked@plt>
  4074b0:	cbnz	x21, 4074d8 <ferror@plt+0x4508>
  4074b4:	b	4072bc <ferror@plt+0x42ec>
  4074b8:	mov	w2, #0x5                   	// #5
  4074bc:	mov	x0, xzr
  4074c0:	mov	x1, x20
  4074c4:	bl	402eb0 <dcgettext@plt>
  4074c8:	mov	x1, x0
  4074cc:	mov	w0, #0x1                   	// #1
  4074d0:	bl	402b10 <__printf_chk@plt>
  4074d4:	cbz	x21, 4072bc <ferror@plt+0x42ec>
  4074d8:	ldr	x21, [x21, #64]
  4074dc:	cbnz	x21, 4072fc <ferror@plt+0x432c>
  4074e0:	ldrb	w8, [x26, #1562]
  4074e4:	tbnz	w8, #0, 4072bc <ferror@plt+0x42ec>
  4074e8:	ldrb	w8, [x27, #1561]
  4074ec:	tbz	w8, #0, 4072fc <ferror@plt+0x432c>
  4074f0:	b	4072bc <ferror@plt+0x42ec>
  4074f4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4074f8:	add	x1, x1, #0xf4
  4074fc:	mov	w2, #0x5                   	// #5
  407500:	mov	x0, xzr
  407504:	bl	402eb0 <dcgettext@plt>
  407508:	mov	x1, x22
  40750c:	bl	406054 <ferror@plt+0x3084>
  407510:	mov	x8, x0
  407514:	ldr	x0, [x0]
  407518:	ldr	x9, [x8, #8]
  40751c:	ldp	x10, x8, [x1, #16]
  407520:	adrp	x11, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407524:	ldr	w11, [x11, #984]
  407528:	add	x9, x0, x9
  40752c:	cmp	x8, #0x0
  407530:	cinc	x10, x10, eq  // eq = none
  407534:	cmp	w11, #0x100
  407538:	sub	x9, x9, #0x1
  40753c:	b.ne	4075ac <ferror@plt+0x45dc>  // b.any
  407540:	cmp	x0, x9
  407544:	b.cs	4075f4 <ferror@plt+0x4624>  // b.hs, b.nlast
  407548:	adrp	x11, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40754c:	add	x11, x11, #0x640
  407550:	cbz	x10, 4075f4 <ferror@plt+0x4624>
  407554:	cmp	x0, x9
  407558:	b.cs	407578 <ferror@plt+0x45a8>  // b.hs, b.nlast
  40755c:	ldrb	w12, [x0]
  407560:	ldrb	w12, [x11, x12]
  407564:	cbz	w12, 407578 <ferror@plt+0x45a8>
  407568:	add	x0, x0, #0x1
  40756c:	cmp	x9, x0
  407570:	b.ne	40755c <ferror@plt+0x458c>  // b.any
  407574:	b	4075f0 <ferror@plt+0x4620>
  407578:	cmp	x0, x9
  40757c:	b.cs	40759c <ferror@plt+0x45cc>  // b.hs, b.nlast
  407580:	ldrb	w12, [x0]
  407584:	ldrb	w12, [x11, x12]
  407588:	cbnz	w12, 40759c <ferror@plt+0x45cc>
  40758c:	add	x0, x0, #0x1
  407590:	cmp	x9, x0
  407594:	b.ne	407580 <ferror@plt+0x45b0>  // b.any
  407598:	b	4075f0 <ferror@plt+0x4620>
  40759c:	cmp	x0, x9
  4075a0:	sub	x10, x10, #0x1
  4075a4:	b.cc	407550 <ferror@plt+0x4580>  // b.lo, b.ul, b.last
  4075a8:	b	4075f4 <ferror@plt+0x4624>
  4075ac:	cmp	x0, x9
  4075b0:	b.cs	4075f4 <ferror@plt+0x4624>  // b.hs, b.nlast
  4075b4:	cbz	x10, 4075f4 <ferror@plt+0x4624>
  4075b8:	cmp	x0, x9
  4075bc:	sub	x10, x10, #0x1
  4075c0:	b.cs	4075ac <ferror@plt+0x45dc>  // b.hs, b.nlast
  4075c4:	ldrb	w12, [x0]
  4075c8:	cmp	w11, w12
  4075cc:	b.eq	4075e0 <ferror@plt+0x4610>  // b.none
  4075d0:	add	x0, x0, #0x1
  4075d4:	cmp	x9, x0
  4075d8:	b.ne	4075c4 <ferror@plt+0x45f4>  // b.any
  4075dc:	b	4075f0 <ferror@plt+0x4620>
  4075e0:	orr	x12, x10, x8
  4075e4:	cmp	x12, #0x0
  4075e8:	cinc	x0, x0, ne  // ne = any
  4075ec:	b	4075ac <ferror@plt+0x45dc>
  4075f0:	mov	x0, x9
  4075f4:	cbz	x8, 407638 <ferror@plt+0x4668>
  4075f8:	ldrb	w10, [x1, #49]
  4075fc:	cbz	w10, 40762c <ferror@plt+0x465c>
  407600:	cmp	x0, x9
  407604:	b.cs	40762c <ferror@plt+0x465c>  // b.hs, b.nlast
  407608:	adrp	x10, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40760c:	add	x10, x10, #0x640
  407610:	ldrb	w11, [x0]
  407614:	ldrb	w11, [x10, x11]
  407618:	cbz	w11, 40762c <ferror@plt+0x465c>
  40761c:	add	x0, x0, #0x1
  407620:	cmp	x9, x0
  407624:	b.ne	407610 <ferror@plt+0x4640>  // b.any
  407628:	mov	x0, x9
  40762c:	add	x8, x0, x8
  407630:	cmp	x9, x8
  407634:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  407638:	ret
  40763c:	ldp	x8, x13, [x0]
  407640:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407644:	ldr	w12, [x9, #984]
  407648:	ldp	x11, x10, [x1]
  40764c:	add	x9, x8, x13
  407650:	sub	x9, x9, #0x1
  407654:	cmp	w12, #0x100
  407658:	b.ne	4076c8 <ferror@plt+0x46f8>  // b.any
  40765c:	cmp	x8, x9
  407660:	b.cs	407738 <ferror@plt+0x4768>  // b.hs, b.nlast
  407664:	adrp	x12, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407668:	add	x12, x12, #0x640
  40766c:	cbz	x11, 407738 <ferror@plt+0x4768>
  407670:	cmp	x8, x9
  407674:	b.cs	407694 <ferror@plt+0x46c4>  // b.hs, b.nlast
  407678:	ldrb	w13, [x8]
  40767c:	ldrb	w13, [x12, x13]
  407680:	cbz	w13, 407694 <ferror@plt+0x46c4>
  407684:	add	x8, x8, #0x1
  407688:	cmp	x9, x8
  40768c:	b.ne	407678 <ferror@plt+0x46a8>  // b.any
  407690:	b	407768 <ferror@plt+0x4798>
  407694:	cmp	x8, x9
  407698:	b.cs	4076b8 <ferror@plt+0x46e8>  // b.hs, b.nlast
  40769c:	ldrb	w13, [x8]
  4076a0:	ldrb	w13, [x12, x13]
  4076a4:	cbnz	w13, 4076b8 <ferror@plt+0x46e8>
  4076a8:	add	x8, x8, #0x1
  4076ac:	cmp	x9, x8
  4076b0:	b.ne	40769c <ferror@plt+0x46cc>  // b.any
  4076b4:	b	407768 <ferror@plt+0x4798>
  4076b8:	cmp	x8, x9
  4076bc:	sub	x11, x11, #0x1
  4076c0:	b.cc	40766c <ferror@plt+0x469c>  // b.lo, b.ul, b.last
  4076c4:	b	407738 <ferror@plt+0x4768>
  4076c8:	cmp	x8, x9
  4076cc:	b.cs	407738 <ferror@plt+0x4768>  // b.hs, b.nlast
  4076d0:	add	x13, x13, x8
  4076d4:	sub	x13, x13, #0x2
  4076d8:	cbz	x11, 407738 <ferror@plt+0x4768>
  4076dc:	cmp	x8, x9
  4076e0:	sub	x11, x11, #0x1
  4076e4:	b.cs	407730 <ferror@plt+0x4760>  // b.hs, b.nlast
  4076e8:	ldrb	w14, [x8]
  4076ec:	cmp	w12, w14
  4076f0:	b.ne	4076fc <ferror@plt+0x472c>  // b.any
  4076f4:	mov	w14, #0x1                   	// #1
  4076f8:	b	407728 <ferror@plt+0x4758>
  4076fc:	cmp	x13, x8
  407700:	add	x14, x8, #0x1
  407704:	b.eq	40771c <ferror@plt+0x474c>  // b.none
  407708:	ldrb	w8, [x8, #1]
  40770c:	cmp	w12, w8
  407710:	mov	x8, x14
  407714:	b.ne	4076fc <ferror@plt+0x472c>  // b.any
  407718:	b	407720 <ferror@plt+0x4750>
  40771c:	mov	x8, x9
  407720:	cmp	x14, x9
  407724:	cset	w14, cc  // cc = lo, ul, last
  407728:	cmp	w14, #0x0
  40772c:	cinc	x8, x8, ne  // ne = any
  407730:	cmp	x8, x9
  407734:	b.cc	4076d8 <ferror@plt+0x4708>  // b.lo, b.ul, b.last
  407738:	ldrb	w11, [x1, #48]
  40773c:	cbz	w11, 40776c <ferror@plt+0x479c>
  407740:	cmp	x8, x9
  407744:	b.cs	40776c <ferror@plt+0x479c>  // b.hs, b.nlast
  407748:	adrp	x11, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40774c:	add	x11, x11, #0x640
  407750:	ldrb	w12, [x8]
  407754:	ldrb	w12, [x11, x12]
  407758:	cbz	w12, 40776c <ferror@plt+0x479c>
  40775c:	add	x8, x8, #0x1
  407760:	cmp	x9, x8
  407764:	b.ne	407750 <ferror@plt+0x4780>  // b.any
  407768:	mov	x8, x9
  40776c:	add	x8, x8, x10
  407770:	cmp	x9, x8
  407774:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  407778:	ret
  40777c:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407780:	sub	x8, x0, #0x1
  407784:	add	x9, x9, #0x640
  407788:	ldrb	w10, [x8, #1]!
  40778c:	ldrb	w10, [x9, x10]
  407790:	cbnz	w10, 407788 <ferror@plt+0x47b8>
  407794:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407798:	adrp	x12, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40779c:	mov	x10, xzr
  4077a0:	mov	w11, #0xc                   	// #12
  4077a4:	add	x9, x9, #0x3f0
  4077a8:	add	x12, x12, #0x940
  4077ac:	add	x13, x11, x10
  4077b0:	lsr	x13, x13, #1
  4077b4:	lsl	x14, x13, #4
  4077b8:	ldr	x15, [x9, x14]
  4077bc:	ldrb	w16, [x15]
  4077c0:	cbz	w16, 407810 <ferror@plt+0x4840>
  4077c4:	mov	x14, xzr
  4077c8:	add	x15, x15, #0x1
  4077cc:	ldrb	w17, [x8, x14]
  4077d0:	ldrb	w17, [x12, x17]
  4077d4:	cmp	w17, w16, uxtb
  4077d8:	b.cc	4077f0 <ferror@plt+0x4820>  // b.lo, b.ul, b.last
  4077dc:	b.hi	4077f8 <ferror@plt+0x4828>  // b.pmore
  4077e0:	ldrb	w16, [x15, x14]
  4077e4:	add	x14, x14, #0x1
  4077e8:	cbnz	w16, 4077cc <ferror@plt+0x47fc>
  4077ec:	b	40780c <ferror@plt+0x483c>
  4077f0:	mov	x11, x13
  4077f4:	b	4077fc <ferror@plt+0x482c>
  4077f8:	add	x10, x13, #0x1
  4077fc:	cmp	x10, x11
  407800:	b.cc	4077ac <ferror@plt+0x47dc>  // b.lo, b.ul, b.last
  407804:	mov	w0, wzr
  407808:	ret
  40780c:	add	x8, x8, x14
  407810:	cbz	x1, 407818 <ferror@plt+0x4848>
  407814:	str	x8, [x1]
  407818:	add	x8, x9, x13, lsl #4
  40781c:	ldr	w0, [x8, #8]
  407820:	ret
  407824:	stp	x29, x30, [sp, #-32]!
  407828:	str	x19, [sp, #16]
  40782c:	mov	x8, x0
  407830:	ldrb	w19, [x8], #1
  407834:	mov	x29, sp
  407838:	cmp	w19, #0x2d
  40783c:	csel	x8, x0, x8, ne  // ne = any
  407840:	add	x0, x29, #0x18
  407844:	str	x8, [x29, #24]
  407848:	bl	407888 <ferror@plt+0x48b8>
  40784c:	and	w8, w0, #0xff
  407850:	cmp	w8, #0x31
  407854:	b.cc	407878 <ferror@plt+0x48a8>  // b.lo, b.ul, b.last
  407858:	ldr	x8, [x29, #24]
  40785c:	adrp	x9, 411000 <_obstack_memory_used@@Base+0xac0>
  407860:	add	x9, x9, #0x6e0
  407864:	cmp	w19, #0x2d
  407868:	ldrb	w8, [x8]
  40786c:	ldrb	w8, [x9, x8]
  407870:	cneg	w0, w8, eq  // eq = none
  407874:	b	40787c <ferror@plt+0x48ac>
  407878:	mov	w0, wzr
  40787c:	ldr	x19, [sp, #16]
  407880:	ldp	x29, x30, [sp], #32
  407884:	ret
  407888:	ldr	x12, [x0]
  40788c:	mov	x9, x12
  407890:	ldrb	w11, [x9], #1
  407894:	sub	w8, w11, #0x30
  407898:	cmp	w8, #0x9
  40789c:	b.hi	4078e8 <ferror@plt+0x4918>  // b.pmore
  4078a0:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4078a4:	ldr	w13, [x8, #1412]
  4078a8:	mov	w8, wzr
  4078ac:	ldrb	w14, [x12, #1]
  4078b0:	and	w10, w8, #0xff
  4078b4:	cmp	w10, w11, uxtb
  4078b8:	csel	w8, w11, w8, cc  // cc = lo, ul, last
  4078bc:	add	x10, x12, #0x2
  4078c0:	cmp	w13, w14
  4078c4:	csel	x12, x10, x9, eq  // eq = none
  4078c8:	mov	x9, x12
  4078cc:	ldrb	w11, [x9], #1
  4078d0:	sub	w15, w11, #0x30
  4078d4:	cmp	w15, #0xa
  4078d8:	b.cc	4078ac <ferror@plt+0x48dc>  // b.lo, b.ul, b.last
  4078dc:	cmp	w13, w14
  4078e0:	b.ne	4078ec <ferror@plt+0x491c>  // b.any
  4078e4:	b	407934 <ferror@plt+0x4964>
  4078e8:	mov	w8, wzr
  4078ec:	adrp	x10, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4078f0:	ldr	w10, [x10, #1408]
  4078f4:	cmp	w10, w11
  4078f8:	b.ne	407930 <ferror@plt+0x4960>  // b.any
  4078fc:	ldrb	w11, [x9], #1
  407900:	sub	w10, w11, #0x30
  407904:	cmp	w10, #0x9
  407908:	mov	x10, x9
  40790c:	b.hi	407934 <ferror@plt+0x4964>  // b.pmore
  407910:	and	w9, w8, #0xff
  407914:	cmp	w9, w11, uxtb
  407918:	csel	w8, w11, w8, cc  // cc = lo, ul, last
  40791c:	ldrb	w11, [x10], #1
  407920:	sub	w9, w11, #0x30
  407924:	cmp	w9, #0xa
  407928:	b.cc	407910 <ferror@plt+0x4940>  // b.lo, b.ul, b.last
  40792c:	b	407934 <ferror@plt+0x4964>
  407930:	mov	x10, x9
  407934:	sub	x9, x10, #0x1
  407938:	str	x9, [x0]
  40793c:	mov	w0, w8
  407940:	ret
  407944:	stp	x29, x30, [sp, #-48]!
  407948:	stp	x22, x21, [sp, #16]
  40794c:	stp	x20, x19, [sp, #32]
  407950:	mov	x29, sp
  407954:	mov	x20, x2
  407958:	mov	x19, x1
  40795c:	mov	x21, x0
  407960:	bl	402f40 <__errno_location@plt>
  407964:	mov	x22, x0
  407968:	str	wzr, [x0]
  40796c:	mov	x0, x21
  407970:	mov	x1, x19
  407974:	mov	x2, x20
  407978:	bl	402de0 <strxfrm@plt>
  40797c:	ldr	w20, [x22]
  407980:	cbnz	w20, 407994 <ferror@plt+0x49c4>
  407984:	ldp	x20, x19, [sp, #32]
  407988:	ldp	x22, x21, [sp, #16]
  40798c:	ldp	x29, x30, [sp], #48
  407990:	ret
  407994:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  407998:	add	x1, x1, #0x8d
  40799c:	mov	w2, #0x5                   	// #5
  4079a0:	mov	x0, xzr
  4079a4:	bl	402eb0 <dcgettext@plt>
  4079a8:	mov	x2, x0
  4079ac:	mov	w0, wzr
  4079b0:	mov	w1, w20
  4079b4:	bl	402900 <error@plt>
  4079b8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4079bc:	add	x1, x1, #0xaa
  4079c0:	mov	w2, #0x5                   	// #5
  4079c4:	mov	x0, xzr
  4079c8:	bl	402eb0 <dcgettext@plt>
  4079cc:	mov	x2, x0
  4079d0:	mov	w0, wzr
  4079d4:	mov	w1, wzr
  4079d8:	bl	402900 <error@plt>
  4079dc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4079e0:	add	x1, x1, #0xd4
  4079e4:	mov	w2, #0x5                   	// #5
  4079e8:	mov	x0, xzr
  4079ec:	bl	402eb0 <dcgettext@plt>
  4079f0:	mov	x20, x0
  4079f4:	mov	w1, #0x8                   	// #8
  4079f8:	mov	w0, wzr
  4079fc:	mov	x2, x19
  407a00:	bl	40d554 <ferror@plt+0xa584>
  407a04:	mov	x3, x0
  407a08:	mov	w0, #0x2                   	// #2
  407a0c:	mov	w1, wzr
  407a10:	mov	x2, x20
  407a14:	bl	402900 <error@plt>
  407a18:	stp	x29, x30, [sp, #-32]!
  407a1c:	stp	x20, x19, [sp, #16]
  407a20:	mov	x19, x1
  407a24:	subs	x1, x1, x0
  407a28:	mov	w2, wzr
  407a2c:	mov	x29, sp
  407a30:	mov	x20, x0
  407a34:	bl	40bd3c <ferror@plt+0x8d6c>
  407a38:	cmp	x19, x20
  407a3c:	sxtw	x0, w0
  407a40:	b.ls	407a58 <ferror@plt+0x4a88>  // b.plast
  407a44:	ldrb	w8, [x20], #1
  407a48:	cmp	w8, #0x9
  407a4c:	cinc	x0, x0, eq  // eq = none
  407a50:	cmp	x19, x20
  407a54:	b.ne	407a44 <ferror@plt+0x4a74>  // b.any
  407a58:	ldp	x20, x19, [sp, #16]
  407a5c:	ldp	x29, x30, [sp], #32
  407a60:	ret
  407a64:	cmp	w0, w1
  407a68:	b.ne	407a70 <ferror@plt+0x4aa0>  // b.any
  407a6c:	ret
  407a70:	stp	x29, x30, [sp, #-32]!
  407a74:	str	x19, [sp, #16]
  407a78:	mov	x29, sp
  407a7c:	mov	w19, w0
  407a80:	bl	402f00 <dup2@plt>
  407a84:	mov	w0, w19
  407a88:	ldr	x19, [sp, #16]
  407a8c:	ldp	x29, x30, [sp], #32
  407a90:	b	402ba0 <close@plt>
  407a94:	sub	sp, sp, #0x50
  407a98:	stp	x24, x23, [sp, #32]
  407a9c:	mov	x24, x2
  407aa0:	mov	x23, x1
  407aa4:	add	x2, sp, #0x8
  407aa8:	mov	x1, x24
  407aac:	stp	x29, x30, [sp, #16]
  407ab0:	stp	x22, x21, [sp, #48]
  407ab4:	stp	x20, x19, [sp, #64]
  407ab8:	add	x29, sp, #0x10
  407abc:	mov	x21, x4
  407ac0:	mov	x22, x3
  407ac4:	mov	x19, x0
  407ac8:	bl	407b38 <ferror@plt+0x4b68>
  407acc:	mov	x20, x0
  407ad0:	cmp	x0, x24
  407ad4:	b.cs	407ae0 <ferror@plt+0x4b10>  // b.hs, b.nlast
  407ad8:	cmp	x20, #0x1
  407adc:	b.ls	407b18 <ferror@plt+0x4b48>  // b.plast
  407ae0:	ldr	x5, [sp, #8]
  407ae4:	mov	x0, x19
  407ae8:	mov	x1, x23
  407aec:	mov	x2, x20
  407af0:	mov	x3, x22
  407af4:	mov	x4, x21
  407af8:	bl	407d3c <ferror@plt+0x4d6c>
  407afc:	mov	x0, x20
  407b00:	ldp	x20, x19, [sp, #64]
  407b04:	ldp	x22, x21, [sp, #48]
  407b08:	ldp	x24, x23, [sp, #32]
  407b0c:	ldp	x29, x30, [sp, #16]
  407b10:	add	sp, sp, #0x50
  407b14:	ret
  407b18:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  407b1c:	add	x1, x1, #0xea1
  407b20:	mov	w2, #0x5                   	// #5
  407b24:	mov	x0, xzr
  407b28:	bl	402eb0 <dcgettext@plt>
  407b2c:	lsl	x8, x20, #4
  407b30:	ldr	x1, [x19, x8]
  407b34:	bl	406054 <ferror@plt+0x3084>
  407b38:	stp	x29, x30, [sp, #-96]!
  407b3c:	lsr	x8, x1, #60
  407b40:	str	x27, [sp, #16]
  407b44:	stp	x26, x25, [sp, #32]
  407b48:	stp	x24, x23, [sp, #48]
  407b4c:	stp	x22, x21, [sp, #64]
  407b50:	stp	x20, x19, [sp, #80]
  407b54:	mov	x29, sp
  407b58:	cbnz	x8, 407d38 <ferror@plt+0x4d68>
  407b5c:	mov	x22, x0
  407b60:	lsl	x0, x1, #3
  407b64:	mov	x20, x2
  407b68:	mov	x19, x1
  407b6c:	bl	40efac <ferror@plt+0xbfdc>
  407b70:	str	x0, [x20]
  407b74:	cbz	x19, 407c80 <ferror@plt+0x4cb0>
  407b78:	add	x26, x22, #0x8
  407b7c:	adrp	x22, 412000 <_obstack_memory_used@@Base+0x1ac0>
  407b80:	mov	x21, x0
  407b84:	mov	x20, xzr
  407b88:	add	x22, x22, #0xc50
  407b8c:	mov	w27, #0x18                  	// #24
  407b90:	ldr	x23, [x26]
  407b94:	cbz	x23, 407c28 <ferror@plt+0x4c58>
  407b98:	ldrb	w8, [x23, #12]
  407b9c:	cbz	w8, 407c28 <ferror@plt+0x4c58>
  407ba0:	cmp	w8, #0x1
  407ba4:	b.ne	407bb0 <ferror@plt+0x4be0>  // b.any
  407ba8:	ldr	w0, [x23, #8]
  407bac:	bl	408580 <ferror@plt+0x55b0>
  407bb0:	add	x0, x23, #0xd
  407bb4:	mov	w1, wzr
  407bb8:	bl	402a90 <open@plt>
  407bbc:	tbnz	w0, #31, 407c50 <ferror@plt+0x4c80>
  407bc0:	mov	w24, w0
  407bc4:	add	x0, x29, #0x18
  407bc8:	mov	w1, #0x9                   	// #9
  407bcc:	bl	4085d0 <ferror@plt+0x5600>
  407bd0:	cmn	w0, #0x1
  407bd4:	b.eq	407c58 <ferror@plt+0x4c88>  // b.none
  407bd8:	cbz	w0, 407cac <ferror@plt+0x4cdc>
  407bdc:	str	w0, [x23, #8]
  407be0:	mov	x0, x23
  407be4:	bl	408800 <ferror@plt+0x5830>
  407be8:	mov	w0, w24
  407bec:	bl	402ba0 <close@plt>
  407bf0:	ldr	w0, [x29, #28]
  407bf4:	bl	402ba0 <close@plt>
  407bf8:	ldr	w0, [x29, #24]
  407bfc:	mov	x1, x22
  407c00:	bl	402b30 <fdopen@plt>
  407c04:	cbnz	x0, 407c34 <ferror@plt+0x4c64>
  407c08:	bl	402f40 <__errno_location@plt>
  407c0c:	mov	x23, x0
  407c10:	ldr	w24, [x0]
  407c14:	ldr	w0, [x29, #24]
  407c18:	bl	402ba0 <close@plt>
  407c1c:	mov	x0, xzr
  407c20:	str	w24, [x23]
  407c24:	b	407c34 <ferror@plt+0x4c64>
  407c28:	ldur	x0, [x26, #-8]
  407c2c:	mov	x1, x22
  407c30:	bl	4060c8 <ferror@plt+0x30f8>
  407c34:	str	x0, [x21, x20, lsl #3]
  407c38:	cbz	x0, 407c8c <ferror@plt+0x4cbc>
  407c3c:	add	x20, x20, #0x1
  407c40:	cmp	x19, x20
  407c44:	add	x26, x26, #0x10
  407c48:	b.ne	407b90 <ferror@plt+0x4bc0>  // b.any
  407c4c:	b	407c88 <ferror@plt+0x4cb8>
  407c50:	mov	x0, xzr
  407c54:	b	407c34 <ferror@plt+0x4c64>
  407c58:	bl	402f40 <__errno_location@plt>
  407c5c:	ldr	w23, [x0]
  407c60:	cmp	w23, #0x18
  407c64:	b.ne	407cfc <ferror@plt+0x4d2c>  // b.any
  407c68:	mov	x25, x0
  407c6c:	mov	w0, w24
  407c70:	bl	402ba0 <close@plt>
  407c74:	mov	x0, xzr
  407c78:	str	w27, [x25]
  407c7c:	b	407c34 <ferror@plt+0x4c64>
  407c80:	mov	x20, xzr
  407c84:	b	407c8c <ferror@plt+0x4cbc>
  407c88:	and	x20, x19, #0xffffffff
  407c8c:	mov	x0, x20
  407c90:	ldp	x20, x19, [sp, #80]
  407c94:	ldp	x22, x21, [sp, #64]
  407c98:	ldp	x24, x23, [sp, #48]
  407c9c:	ldp	x26, x25, [sp, #32]
  407ca0:	ldr	x27, [sp, #16]
  407ca4:	ldp	x29, x30, [sp], #96
  407ca8:	ret
  407cac:	ldr	w0, [x29, #24]
  407cb0:	bl	402ba0 <close@plt>
  407cb4:	mov	w0, w24
  407cb8:	mov	w1, wzr
  407cbc:	bl	407a64 <ferror@plt+0x4a94>
  407cc0:	ldr	w0, [x29, #28]
  407cc4:	mov	w1, #0x1                   	// #1
  407cc8:	bl	407a64 <ferror@plt+0x4a94>
  407ccc:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407cd0:	ldr	x0, [x8, #1552]
  407cd4:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  407cd8:	add	x2, x2, #0x142
  407cdc:	mov	x3, xzr
  407ce0:	mov	x1, x0
  407ce4:	bl	402f50 <execlp@plt>
  407ce8:	bl	402f40 <__errno_location@plt>
  407cec:	ldr	w0, [x0]
  407cf0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  407cf4:	add	x1, x1, #0x145
  407cf8:	bl	408774 <ferror@plt+0x57a4>
  407cfc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  407d00:	add	x1, x1, #0x123
  407d04:	mov	w2, #0x5                   	// #5
  407d08:	mov	x0, xzr
  407d0c:	bl	402eb0 <dcgettext@plt>
  407d10:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407d14:	ldr	x1, [x8, #1552]
  407d18:	mov	x19, x0
  407d1c:	mov	w0, #0x4                   	// #4
  407d20:	bl	40d5ec <ferror@plt+0xa61c>
  407d24:	mov	x3, x0
  407d28:	mov	w0, #0x2                   	// #2
  407d2c:	mov	w1, w23
  407d30:	mov	x2, x19
  407d34:	bl	402900 <error@plt>
  407d38:	bl	40f1e8 <ferror@plt+0xc218>
  407d3c:	sub	sp, sp, #0xf0
  407d40:	mov	x8, #0x924a                	// #37450
  407d44:	movk	x8, #0x4924, lsl #16
  407d48:	movk	x8, #0x2492, lsl #32
  407d4c:	movk	x8, #0x249, lsl #48
  407d50:	stp	x29, x30, [sp, #144]
  407d54:	add	x29, sp, #0x90
  407d58:	cmp	x2, x8
  407d5c:	stp	x28, x27, [sp, #160]
  407d60:	stp	x26, x25, [sp, #176]
  407d64:	stp	x24, x23, [sp, #192]
  407d68:	stp	x22, x21, [sp, #208]
  407d6c:	stp	x20, x19, [sp, #224]
  407d70:	str	x3, [sp, #72]
  407d74:	stur	x1, [x29, #-56]
  407d78:	stur	x0, [x29, #-40]
  407d7c:	b.cs	408320 <ferror@plt+0x5350>  // b.hs, b.nlast
  407d80:	mov	w8, #0x38                  	// #56
  407d84:	mul	x0, x2, x8
  407d88:	mov	x23, x5
  407d8c:	mov	x27, x4
  407d90:	mov	x19, x2
  407d94:	bl	40efac <ferror@plt+0xbfdc>
  407d98:	lsl	x20, x19, #3
  407d9c:	mov	x28, x0
  407da0:	mov	x0, x20
  407da4:	bl	40efac <ferror@plt+0xbfdc>
  407da8:	mov	x22, x0
  407dac:	mov	x0, x20
  407db0:	bl	40efac <ferror@plt+0xbfdc>
  407db4:	stur	x0, [x29, #-48]
  407db8:	mov	x0, x20
  407dbc:	bl	40efac <ferror@plt+0xbfdc>
  407dc0:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407dc4:	ldr	x8, [x8, #1568]
  407dc8:	mov	x25, x0
  407dcc:	stur	xzr, [x29, #-32]
  407dd0:	str	x8, [sp, #40]
  407dd4:	cbz	x19, 4082cc <ferror@plt+0x52fc>
  407dd8:	add	x8, x23, #0x8
  407ddc:	str	x8, [sp, #64]
  407de0:	ldur	x8, [x29, #-40]
  407de4:	str	x27, [sp, #48]
  407de8:	mov	x21, xzr
  407dec:	mov	w24, #0x38                  	// #56
  407df0:	add	x8, x8, #0x10
  407df4:	adrp	x27, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407df8:	str	x8, [sp, #56]
  407dfc:	stur	x28, [x29, #-64]
  407e00:	ldr	x8, [x27, #1592]
  407e04:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407e08:	ldr	x9, [x9, #1200]
  407e0c:	madd	x20, x21, x24, x28
  407e10:	udiv	x8, x8, x19
  407e14:	mov	w1, #0x20                  	// #32
  407e18:	cmp	x9, x8
  407e1c:	csel	x2, x9, x8, hi  // hi = pmore
  407e20:	mov	x0, x20
  407e24:	bl	406334 <ferror@plt+0x3364>
  407e28:	ldur	x8, [x29, #-40]
  407e2c:	mov	x26, x28
  407e30:	ldr	x1, [x23, x21, lsl #3]
  407e34:	mov	x0, x20
  407e38:	add	x28, x8, x21, lsl #4
  407e3c:	ldr	x2, [x28]
  407e40:	bl	406398 <ferror@plt+0x33c8>
  407e44:	tbz	w0, #0, 407e78 <ferror@plt+0x4ea8>
  407e48:	madd	x9, x21, x24, x26
  407e4c:	ldr	x8, [x20]
  407e50:	ldp	x9, x10, [x9, #16]
  407e54:	mov	x28, x26
  407e58:	add	x8, x8, x10
  407e5c:	sub	x10, x8, #0x20
  407e60:	sub	x8, x8, x9, lsl #5
  407e64:	ldur	x9, [x29, #-48]
  407e68:	str	x10, [x22, x21, lsl #3]
  407e6c:	str	x8, [x9, x21, lsl #3]
  407e70:	add	x21, x21, #0x1
  407e74:	b	407eec <ferror@plt+0x4f1c>
  407e78:	ldr	x0, [x23, x21, lsl #3]
  407e7c:	ldr	x1, [x28]
  407e80:	bl	405be0 <ferror@plt+0x2c10>
  407e84:	ldur	x8, [x29, #-56]
  407e88:	cmp	x21, x8
  407e8c:	b.cs	407ea0 <ferror@plt+0x4ed0>  // b.hs, b.nlast
  407e90:	ldr	x0, [x28]
  407e94:	sub	x8, x8, #0x1
  407e98:	stur	x8, [x29, #-56]
  407e9c:	bl	4089a0 <ferror@plt+0x59d0>
  407ea0:	ldr	x0, [x20]
  407ea4:	ldur	x28, [x29, #-64]
  407ea8:	bl	402d30 <free@plt>
  407eac:	sub	x19, x19, #0x1
  407eb0:	cmp	x21, x19
  407eb4:	b.cs	407eec <ferror@plt+0x4f1c>  // b.hs, b.nlast
  407eb8:	ldp	x9, x8, [sp, #56]
  407ebc:	mov	x10, x19
  407ec0:	add	x8, x8, x21, lsl #3
  407ec4:	add	x9, x9, x21, lsl #4
  407ec8:	ldr	q0, [x9]
  407ecc:	sub	x10, x10, #0x1
  407ed0:	cmp	x21, x10
  407ed4:	stur	q0, [x9, #-16]
  407ed8:	ldr	x11, [x8]
  407edc:	add	x9, x9, #0x10
  407ee0:	stur	x11, [x8, #-8]
  407ee4:	add	x8, x8, #0x8
  407ee8:	b.ne	407ec8 <ferror@plt+0x4ef8>  // b.any
  407eec:	cmp	x21, x19
  407ef0:	b.cc	407e00 <ferror@plt+0x4e30>  // b.lo, b.ul, b.last
  407ef4:	ldr	x27, [sp, #48]
  407ef8:	cbz	x19, 4082cc <ferror@plt+0x52fc>
  407efc:	mov	x8, xzr
  407f00:	str	x8, [x25, x8, lsl #3]
  407f04:	add	x8, x8, #0x1
  407f08:	cmp	x19, x8
  407f0c:	b.ne	407f00 <ferror@plt+0x4f30>  // b.any
  407f10:	cmp	x19, #0x2
  407f14:	b.cc	407f54 <ferror@plt+0x4f84>  // b.lo, b.ul, b.last
  407f18:	mov	w20, #0x1                   	// #1
  407f1c:	sub	x21, x20, #0x1
  407f20:	ldr	x24, [x25, x21, lsl #3]
  407f24:	ldr	x26, [x25, x20, lsl #3]
  407f28:	ldr	x0, [x22, x24, lsl #3]
  407f2c:	ldr	x1, [x22, x26, lsl #3]
  407f30:	bl	4066ec <ferror@plt+0x371c>
  407f34:	cmp	w0, #0x1
  407f38:	b.lt	407f48 <ferror@plt+0x4f78>  // b.tstop
  407f3c:	str	x26, [x25, x21, lsl #3]
  407f40:	str	x24, [x25, x20, lsl #3]
  407f44:	mov	x20, xzr
  407f48:	add	x20, x20, #0x1
  407f4c:	cmp	x20, x19
  407f50:	b.cc	407f1c <ferror@plt+0x4f4c>  // b.lo, b.ul, b.last
  407f54:	cbz	x19, 4082cc <ferror@plt+0x52fc>
  407f58:	add	x8, x25, #0x8
  407f5c:	stp	x8, xzr, [sp, #56]
  407f60:	ldur	x8, [x29, #-48]
  407f64:	mov	x20, xzr
  407f68:	mov	w26, #0x38                  	// #56
  407f6c:	str	x23, [sp, #32]
  407f70:	add	x8, x8, #0x8
  407f74:	str	x8, [sp, #24]
  407f78:	add	x8, x22, #0x8
  407f7c:	str	x8, [sp, #16]
  407f80:	ldur	x8, [x29, #-40]
  407f84:	add	x8, x8, #0x10
  407f88:	str	x8, [sp, #8]
  407f8c:	add	x8, x23, #0x8
  407f90:	str	x8, [sp]
  407f94:	ldr	x24, [x25]
  407f98:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  407f9c:	ldrb	w8, [x8, #1562]
  407fa0:	ldr	x21, [x22, x24, lsl #3]
  407fa4:	cmp	w8, #0x1
  407fa8:	b.ne	407ff0 <ferror@plt+0x5020>  // b.any
  407fac:	ldr	x0, [sp, #64]
  407fb0:	cbz	x0, 407fd0 <ferror@plt+0x5000>
  407fb4:	mov	x1, x21
  407fb8:	bl	4066ec <ferror@plt+0x371c>
  407fbc:	cbz	w0, 40806c <ferror@plt+0x509c>
  407fc0:	ldr	x1, [sp, #72]
  407fc4:	sub	x0, x29, #0x20
  407fc8:	mov	x2, x27
  407fcc:	bl	4071e4 <ferror@plt+0x4214>
  407fd0:	ldr	x2, [x21, #8]
  407fd4:	cmp	x20, x2
  407fd8:	b.cs	408004 <ferror@plt+0x5034>  // b.hs, b.nlast
  407fdc:	cbz	x20, 40800c <ferror@plt+0x503c>
  407fe0:	lsl	x20, x20, #1
  407fe4:	cmp	x20, x2
  407fe8:	b.cc	407fdc <ferror@plt+0x500c>  // b.lo, b.ul, b.last
  407fec:	b	408010 <ferror@plt+0x5040>
  407ff0:	ldr	x1, [sp, #72]
  407ff4:	mov	x0, x21
  407ff8:	mov	x2, x27
  407ffc:	bl	4071e4 <ferror@plt+0x4214>
  408000:	b	40806c <ferror@plt+0x509c>
  408004:	ldur	x0, [x29, #-32]
  408008:	b	408028 <ferror@plt+0x5058>
  40800c:	mov	x20, x2
  408010:	ldur	x0, [x29, #-32]
  408014:	bl	402d30 <free@plt>
  408018:	mov	x0, x20
  40801c:	bl	40efac <ferror@plt+0xbfdc>
  408020:	stur	x0, [x29, #-32]
  408024:	ldr	x2, [x21, #8]
  408028:	stur	x2, [x29, #-24]
  40802c:	ldr	x1, [x21]
  408030:	bl	402860 <memcpy@plt>
  408034:	ldr	x8, [sp, #40]
  408038:	cbz	x8, 408064 <ferror@plt+0x5094>
  40803c:	ldr	x8, [x21, #16]
  408040:	ldr	x9, [x21]
  408044:	ldur	x10, [x29, #-32]
  408048:	sub	x8, x8, x9
  40804c:	add	x8, x10, x8
  408050:	stur	x8, [x29, #-16]
  408054:	ldr	x8, [x21, #24]
  408058:	sub	x8, x8, x9
  40805c:	add	x8, x10, x8
  408060:	stur	x8, [x29, #-8]
  408064:	sub	x8, x29, #0x20
  408068:	str	x8, [sp, #64]
  40806c:	ldur	x8, [x29, #-48]
  408070:	ldr	x8, [x8, x24, lsl #3]
  408074:	cmp	x8, x21
  408078:	b.cs	408088 <ferror@plt+0x50b8>  // b.hs, b.nlast
  40807c:	sub	x21, x21, #0x20
  408080:	str	x21, [x22, x24, lsl #3]
  408084:	b	4080cc <ferror@plt+0x50fc>
  408088:	ldur	x9, [x29, #-40]
  40808c:	lsl	x8, x24, #4
  408090:	ldr	x1, [x23, x24, lsl #3]
  408094:	madd	x21, x24, x26, x28
  408098:	ldr	x2, [x9, x8]
  40809c:	mov	x0, x21
  4080a0:	bl	406398 <ferror@plt+0x33c8>
  4080a4:	tbz	w0, #0, 408160 <ferror@plt+0x5190>
  4080a8:	madd	x9, x24, x26, x28
  4080ac:	ldr	x8, [x21]
  4080b0:	ldp	x9, x10, [x9, #16]
  4080b4:	add	x8, x8, x10
  4080b8:	sub	x21, x8, #0x20
  4080bc:	sub	x8, x8, x9, lsl #5
  4080c0:	ldur	x9, [x29, #-48]
  4080c4:	str	x21, [x22, x24, lsl #3]
  4080c8:	str	x8, [x9, x24, lsl #3]
  4080cc:	cmp	x19, #0x2
  4080d0:	b.cc	408158 <ferror@plt+0x5188>  // b.lo, b.ul, b.last
  4080d4:	mov	w27, #0x1                   	// #1
  4080d8:	mov	x28, x19
  4080dc:	mov	w26, #0x1                   	// #1
  4080e0:	ldr	x23, [x25, x27, lsl #3]
  4080e4:	mov	x0, x21
  4080e8:	ldr	x1, [x22, x23, lsl #3]
  4080ec:	bl	4066ec <ferror@plt+0x371c>
  4080f0:	tbnz	w0, #31, 408110 <ferror@plt+0x5140>
  4080f4:	cmp	w0, #0x0
  4080f8:	cset	w8, eq  // eq = none
  4080fc:	cmp	x24, x23
  408100:	cset	w9, cc  // cc = lo, ul, last
  408104:	tst	w9, w8
  408108:	csinc	x26, x26, x27, ne  // ne = any
  40810c:	csel	x27, x27, x28, ne  // ne = any
  408110:	add	x8, x27, x26
  408114:	mov	x28, x27
  408118:	cmp	x26, x27
  40811c:	lsr	x27, x8, #1
  408120:	b.cc	4080e0 <ferror@plt+0x5110>  // b.lo, b.ul, b.last
  408124:	subs	x8, x26, #0x1
  408128:	b.eq	408288 <ferror@plt+0x52b8>  // b.none
  40812c:	ldp	x27, x10, [sp, #48]
  408130:	ldr	x23, [sp, #32]
  408134:	ldur	x28, [x29, #-64]
  408138:	mov	x9, x8
  40813c:	mov	w26, #0x38                  	// #56
  408140:	ldr	x11, [x10]
  408144:	subs	x9, x9, #0x1
  408148:	stur	x11, [x10, #-8]
  40814c:	add	x10, x10, #0x8
  408150:	b.ne	408140 <ferror@plt+0x5170>  // b.any
  408154:	b	408298 <ferror@plt+0x52c8>
  408158:	mov	x8, xzr
  40815c:	b	408298 <ferror@plt+0x52c8>
  408160:	cmp	x19, #0x2
  408164:	b.cc	408194 <ferror@plt+0x51c4>  // b.lo, b.ul, b.last
  408168:	ldr	x9, [sp, #56]
  40816c:	sub	x8, x19, #0x1
  408170:	ldr	x10, [x9]
  408174:	cmp	x10, x24
  408178:	b.ls	408184 <ferror@plt+0x51b4>  // b.plast
  40817c:	sub	x10, x10, #0x1
  408180:	str	x10, [x9]
  408184:	ldr	x24, [x25]
  408188:	subs	x8, x8, #0x1
  40818c:	add	x9, x9, #0x8
  408190:	b.ne	408170 <ferror@plt+0x51a0>  // b.any
  408194:	ldur	x8, [x29, #-40]
  408198:	ldr	x0, [x23, x24, lsl #3]
  40819c:	sub	x21, x19, #0x1
  4081a0:	add	x26, x8, x24, lsl #4
  4081a4:	ldr	x1, [x26]
  4081a8:	bl	405be0 <ferror@plt+0x2c10>
  4081ac:	ldur	x8, [x29, #-56]
  4081b0:	cmp	x24, x8
  4081b4:	b.cs	4081c8 <ferror@plt+0x51f8>  // b.hs, b.nlast
  4081b8:	ldr	x0, [x26]
  4081bc:	sub	x8, x8, #0x1
  4081c0:	stur	x8, [x29, #-56]
  4081c4:	bl	4089a0 <ferror@plt+0x59d0>
  4081c8:	mov	w26, #0x38                  	// #56
  4081cc:	mul	x8, x24, x26
  4081d0:	ldr	x0, [x28, x8]
  4081d4:	bl	402d30 <free@plt>
  4081d8:	cmp	x24, x21
  4081dc:	b.cs	40825c <ferror@plt+0x528c>  // b.hs, b.nlast
  4081e0:	ldp	x9, x8, [sp, #16]
  4081e4:	ldp	x11, x10, [sp]
  4081e8:	mvn	x12, x24
  4081ec:	madd	x13, x24, x26, x28
  4081f0:	add	x8, x8, x24, lsl #3
  4081f4:	add	x9, x9, x24, lsl #3
  4081f8:	add	x10, x10, x24, lsl #4
  4081fc:	add	x11, x11, x24, lsl #3
  408200:	add	x12, x12, x19
  408204:	ldr	x14, [x11]
  408208:	subs	x12, x12, #0x1
  40820c:	stur	x14, [x11, #-8]
  408210:	ldr	q0, [x10]
  408214:	add	x11, x11, #0x8
  408218:	stur	q0, [x10, #-16]
  40821c:	ldur	q0, [x13, #56]
  408220:	ldur	q1, [x13, #72]
  408224:	ldr	x14, [x13, #104]
  408228:	ldr	x15, [x9]
  40822c:	add	x10, x10, #0x10
  408230:	stp	q0, q1, [x13]
  408234:	ldur	q0, [x13, #88]
  408238:	str	x14, [x13, #48]
  40823c:	ldr	x14, [x8]
  408240:	stur	x15, [x9, #-8]
  408244:	str	q0, [x13, #32]
  408248:	add	x13, x13, #0x38
  40824c:	stur	x14, [x8, #-8]
  408250:	add	x8, x8, #0x8
  408254:	add	x9, x9, #0x8
  408258:	b.ne	408204 <ferror@plt+0x5234>  // b.any
  40825c:	ldr	x9, [sp, #56]
  408260:	mov	x8, x21
  408264:	cbz	x21, 4082a0 <ferror@plt+0x52d0>
  408268:	ldr	x10, [x9]
  40826c:	subs	x8, x8, #0x1
  408270:	stur	x10, [x9, #-8]
  408274:	add	x9, x9, #0x8
  408278:	b.ne	408268 <ferror@plt+0x5298>  // b.any
  40827c:	mov	x19, x21
  408280:	cbnz	x19, 407f94 <ferror@plt+0x4fc4>
  408284:	b	4082a0 <ferror@plt+0x52d0>
  408288:	ldr	x23, [sp, #32]
  40828c:	ldr	x27, [sp, #48]
  408290:	ldur	x28, [x29, #-64]
  408294:	mov	w26, #0x38                  	// #56
  408298:	str	x24, [x25, x8, lsl #3]
  40829c:	cbnz	x19, 407f94 <ferror@plt+0x4fc4>
  4082a0:	ldr	x8, [sp, #64]
  4082a4:	cbz	x8, 4082cc <ferror@plt+0x52fc>
  4082a8:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4082ac:	ldrb	w8, [x8, #1562]
  4082b0:	cbz	w8, 4082cc <ferror@plt+0x52fc>
  4082b4:	ldr	x1, [sp, #72]
  4082b8:	sub	x0, x29, #0x20
  4082bc:	mov	x2, x27
  4082c0:	bl	4071e4 <ferror@plt+0x4214>
  4082c4:	ldur	x0, [x29, #-32]
  4082c8:	bl	402d30 <free@plt>
  4082cc:	ldr	x0, [sp, #72]
  4082d0:	mov	x1, x27
  4082d4:	bl	405be0 <ferror@plt+0x2c10>
  4082d8:	mov	x0, x23
  4082dc:	bl	402d30 <free@plt>
  4082e0:	mov	x0, x28
  4082e4:	bl	402d30 <free@plt>
  4082e8:	mov	x0, x25
  4082ec:	bl	402d30 <free@plt>
  4082f0:	ldur	x0, [x29, #-48]
  4082f4:	bl	402d30 <free@plt>
  4082f8:	mov	x0, x22
  4082fc:	bl	402d30 <free@plt>
  408300:	ldp	x20, x19, [sp, #224]
  408304:	ldp	x22, x21, [sp, #208]
  408308:	ldp	x24, x23, [sp, #192]
  40830c:	ldp	x26, x25, [sp, #176]
  408310:	ldp	x28, x27, [sp, #160]
  408314:	ldp	x29, x30, [sp, #144]
  408318:	add	sp, sp, #0xf0
  40831c:	ret
  408320:	bl	40f1e8 <ferror@plt+0xc218>
  408324:	sub	sp, sp, #0xf0
  408328:	stp	x26, x25, [sp, #176]
  40832c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408330:	adrp	x25, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408334:	ldr	x8, [x8, #2640]
  408338:	ldr	x9, [x25, #2960]
  40833c:	stp	x29, x30, [sp, #144]
  408340:	stp	x24, x23, [sp, #192]
  408344:	stp	x22, x21, [sp, #208]
  408348:	stp	x20, x19, [sp, #224]
  40834c:	ldr	x22, [x8, x9, lsl #3]
  408350:	mov	x21, x0
  408354:	str	x27, [sp, #160]
  408358:	add	x29, sp, #0x90
  40835c:	mov	x0, x22
  408360:	mov	w23, w1
  408364:	bl	4028c0 <strlen@plt>
  408368:	add	x8, x0, #0x20
  40836c:	mov	x24, x0
  408370:	and	x0, x8, #0xfffffffffffffff8
  408374:	bl	40efac <ferror@plt+0xbfdc>
  408378:	add	x20, x0, #0xd
  40837c:	mov	x19, x0
  408380:	mov	x0, x20
  408384:	mov	x1, x22
  408388:	mov	x2, x24
  40838c:	bl	402860 <memcpy@plt>
  408390:	adrp	x9, 411000 <_obstack_memory_used@@Base+0xac0>
  408394:	add	x9, x9, #0x7e0
  408398:	ldr	x9, [x9]
  40839c:	mov	w10, #0x5858                	// #22616
  4083a0:	add	x8, x20, x24
  4083a4:	movk	w10, #0x58, lsl #16
  4083a8:	str	w10, [x8, #8]
  4083ac:	str	x9, [x8]
  4083b0:	str	xzr, [x19]
  4083b4:	adrp	x10, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4083b8:	ldr	x8, [x25, #2960]
  4083bc:	ldr	x9, [x10, #1584]
  4083c0:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4083c4:	add	x1, x1, #0x590
  4083c8:	add	x10, x8, #0x1
  4083cc:	cmp	x10, x9
  4083d0:	add	x9, sp, #0x8
  4083d4:	add	x27, x9, #0x8
  4083d8:	csinc	x8, xzr, x8, eq  // eq = none
  4083dc:	mov	w0, wzr
  4083e0:	mov	x2, x27
  4083e4:	str	x8, [x25, #2960]
  4083e8:	bl	402880 <pthread_sigmask@plt>
  4083ec:	cmp	w0, #0x0
  4083f0:	cset	w8, eq  // eq = none
  4083f4:	mov	w1, #0x80000               	// #524288
  4083f8:	mov	x0, x20
  4083fc:	strb	w8, [sp, #8]
  408400:	bl	40e634 <ferror@plt+0xb664>
  408404:	mov	w24, w0
  408408:	tbnz	w0, #31, 40841c <ferror@plt+0x544c>
  40840c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408410:	ldr	x9, [x8, #1208]
  408414:	str	x19, [x9]
  408418:	str	x19, [x8, #1208]
  40841c:	bl	402f40 <__errno_location@plt>
  408420:	ldrb	w8, [sp, #8]
  408424:	ldr	w26, [x0]
  408428:	mov	x25, x0
  40842c:	cbz	w8, 408440 <ferror@plt+0x5470>
  408430:	mov	w0, #0x2                   	// #2
  408434:	mov	x1, x27
  408438:	mov	x2, xzr
  40843c:	bl	402880 <pthread_sigmask@plt>
  408440:	str	w26, [x25]
  408444:	tbnz	w24, #31, 408494 <ferror@plt+0x54c4>
  408448:	cbz	x19, 4084cc <ferror@plt+0x54fc>
  40844c:	adrp	x22, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408450:	ldr	x8, [x22, #1552]
  408454:	strb	wzr, [x19, #12]
  408458:	cbz	x8, 4084b4 <ferror@plt+0x54e4>
  40845c:	add	x0, sp, #0x8
  408460:	mov	w1, #0x4                   	// #4
  408464:	bl	4085d0 <ferror@plt+0x5600>
  408468:	cmp	w0, #0x1
  40846c:	str	w0, [x19, #8]
  408470:	b.lt	4084b0 <ferror@plt+0x54e0>  // b.tstop
  408474:	mov	w0, w24
  408478:	bl	402ba0 <close@plt>
  40847c:	ldr	w0, [sp, #8]
  408480:	bl	402ba0 <close@plt>
  408484:	ldr	w24, [sp, #12]
  408488:	mov	x0, x19
  40848c:	bl	408800 <ferror@plt+0x5830>
  408490:	b	4084b4 <ferror@plt+0x54e4>
  408494:	cmp	w26, #0x18
  408498:	b.ne	4084f0 <ferror@plt+0x5520>  // b.any
  40849c:	tbz	w23, #0, 4084f0 <ferror@plt+0x5520>
  4084a0:	mov	x0, x19
  4084a4:	bl	402d30 <free@plt>
  4084a8:	mov	x19, xzr
  4084ac:	b	4084cc <ferror@plt+0x54fc>
  4084b0:	cbz	w0, 408540 <ferror@plt+0x5570>
  4084b4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4084b8:	add	x1, x1, #0x121
  4084bc:	mov	w0, w24
  4084c0:	bl	402b30 <fdopen@plt>
  4084c4:	str	x0, [x21]
  4084c8:	cbz	x0, 408528 <ferror@plt+0x5558>
  4084cc:	mov	x0, x19
  4084d0:	ldp	x20, x19, [sp, #224]
  4084d4:	ldp	x22, x21, [sp, #208]
  4084d8:	ldp	x24, x23, [sp, #192]
  4084dc:	ldp	x26, x25, [sp, #176]
  4084e0:	ldr	x27, [sp, #160]
  4084e4:	ldp	x29, x30, [sp, #144]
  4084e8:	add	sp, sp, #0xf0
  4084ec:	ret
  4084f0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4084f4:	add	x1, x1, #0x208
  4084f8:	mov	w2, #0x5                   	// #5
  4084fc:	mov	x0, xzr
  408500:	bl	402eb0 <dcgettext@plt>
  408504:	mov	x19, x0
  408508:	mov	w0, #0x4                   	// #4
  40850c:	mov	x1, x22
  408510:	bl	40d5ec <ferror@plt+0xa61c>
  408514:	mov	x3, x0
  408518:	mov	w0, #0x2                   	// #2
  40851c:	mov	w1, w26
  408520:	mov	x2, x19
  408524:	bl	402900 <error@plt>
  408528:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40852c:	add	x1, x1, #0x1e9
  408530:	mov	w2, #0x5                   	// #5
  408534:	bl	402eb0 <dcgettext@plt>
  408538:	mov	x1, x20
  40853c:	bl	406054 <ferror@plt+0x3084>
  408540:	ldr	w0, [sp, #12]
  408544:	bl	402ba0 <close@plt>
  408548:	mov	w1, #0x1                   	// #1
  40854c:	mov	w0, w24
  408550:	bl	407a64 <ferror@plt+0x4a94>
  408554:	ldr	w0, [sp, #8]
  408558:	mov	w1, wzr
  40855c:	bl	407a64 <ferror@plt+0x4a94>
  408560:	ldr	x0, [x22, #1552]
  408564:	mov	x2, xzr
  408568:	mov	x1, x0
  40856c:	bl	402f50 <execlp@plt>
  408570:	ldr	w0, [x25]
  408574:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  408578:	add	x1, x1, #0x1c7
  40857c:	bl	408774 <ferror@plt+0x57a4>
  408580:	sub	sp, sp, #0x30
  408584:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408588:	ldr	x8, [x8, #2944]
  40858c:	str	x19, [sp, #32]
  408590:	mov	w19, w0
  408594:	str	w0, [sp, #8]
  408598:	mov	x1, sp
  40859c:	mov	x0, x8
  4085a0:	stp	x29, x30, [sp, #16]
  4085a4:	add	x29, sp, #0x10
  4085a8:	bl	40b8b4 <ferror@plt+0x88e4>
  4085ac:	cbz	x0, 4085c0 <ferror@plt+0x55f0>
  4085b0:	mov	w8, #0x2                   	// #2
  4085b4:	strb	w8, [x0, #12]
  4085b8:	mov	w0, w19
  4085bc:	bl	408870 <ferror@plt+0x58a0>
  4085c0:	ldr	x19, [sp, #32]
  4085c4:	ldp	x29, x30, [sp, #16]
  4085c8:	add	sp, sp, #0x30
  4085cc:	ret
  4085d0:	sub	sp, sp, #0x100
  4085d4:	stp	x20, x19, [sp, #240]
  4085d8:	mov	x20, x1
  4085dc:	mov	w1, #0x80000               	// #524288
  4085e0:	str	d8, [sp, #144]
  4085e4:	stp	x29, x30, [sp, #160]
  4085e8:	stp	x28, x27, [sp, #176]
  4085ec:	stp	x26, x25, [sp, #192]
  4085f0:	stp	x24, x23, [sp, #208]
  4085f4:	stp	x22, x21, [sp, #224]
  4085f8:	add	x29, sp, #0x90
  4085fc:	mov	x19, x0
  408600:	bl	40c164 <ferror@plt+0x9194>
  408604:	tbnz	w0, #31, 40870c <ferror@plt+0x573c>
  408608:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40860c:	ldr	w8, [x8, #1000]
  408610:	adrp	x25, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408614:	ldr	w9, [x25, #2952]
  408618:	add	w8, w8, #0x1
  40861c:	cmp	w8, w9
  408620:	b.cs	408644 <ferror@plt+0x5674>  // b.hs, b.nlast
  408624:	mov	w0, #0xffffffff            	// #-1
  408628:	bl	408870 <ferror@plt+0x58a0>
  40862c:	ldr	w8, [x25, #2952]
  408630:	cmp	w8, #0x1
  408634:	b.lt	408644 <ferror@plt+0x5674>  // b.tstop
  408638:	mov	w0, wzr
  40863c:	bl	408870 <ferror@plt+0x58a0>
  408640:	cbnz	w0, 40862c <ferror@plt+0x565c>
  408644:	cbz	x20, 408714 <ferror@plt+0x5744>
  408648:	add	x8, sp, #0x8
  40864c:	adrp	x22, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408650:	fmov	d8, #2.500000000000000000e-01
  408654:	add	x22, x22, #0x590
  408658:	add	x23, x8, #0x8
  40865c:	adrp	x26, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408660:	mov	w0, wzr
  408664:	mov	x1, x22
  408668:	mov	x2, x23
  40866c:	bl	402880 <pthread_sigmask@plt>
  408670:	cmp	w0, #0x0
  408674:	cset	w8, eq  // eq = none
  408678:	strb	w8, [sp, #8]
  40867c:	ldr	x28, [x26, #2624]
  408680:	str	xzr, [x26, #2624]
  408684:	bl	4029a0 <fork@plt>
  408688:	mov	w21, w0
  40868c:	bl	402f40 <__errno_location@plt>
  408690:	ldr	w27, [x0]
  408694:	mov	x24, x0
  408698:	cbz	w21, 4086a0 <ferror@plt+0x56d0>
  40869c:	str	x28, [x26, #2624]
  4086a0:	ldrb	w8, [sp, #8]
  4086a4:	cbz	w8, 4086b8 <ferror@plt+0x56e8>
  4086a8:	mov	w0, #0x2                   	// #2
  4086ac:	mov	x1, x23
  4086b0:	mov	x2, xzr
  4086b4:	bl	402880 <pthread_sigmask@plt>
  4086b8:	str	w27, [x24]
  4086bc:	tbz	w21, #31, 4086f4 <ferror@plt+0x5724>
  4086c0:	cmp	w27, #0xb
  4086c4:	b.ne	4086f4 <ferror@plt+0x5724>  // b.any
  4086c8:	mov	v0.16b, v8.16b
  4086cc:	sub	x20, x20, #0x1
  4086d0:	bl	40f3d8 <ferror@plt+0xc408>
  4086d4:	fadd	d8, d8, d8
  4086d8:	ldr	w8, [x25, #2952]
  4086dc:	cmp	w8, #0x1
  4086e0:	b.lt	4086f0 <ferror@plt+0x5720>  // b.tstop
  4086e4:	mov	w0, wzr
  4086e8:	bl	408870 <ferror@plt+0x58a0>
  4086ec:	cbnz	w0, 4086d8 <ferror@plt+0x5708>
  4086f0:	cbnz	x20, 408660 <ferror@plt+0x5690>
  4086f4:	tbnz	w21, #31, 40872c <ferror@plt+0x575c>
  4086f8:	cbz	w21, 408714 <ferror@plt+0x5744>
  4086fc:	ldr	w8, [x25, #2952]
  408700:	add	w8, w8, #0x1
  408704:	str	w8, [x25, #2952]
  408708:	b	40874c <ferror@plt+0x577c>
  40870c:	mov	w21, #0xffffffff            	// #-1
  408710:	b	40874c <ferror@plt+0x577c>
  408714:	mov	w0, wzr
  408718:	bl	402ba0 <close@plt>
  40871c:	mov	w0, #0x1                   	// #1
  408720:	bl	402ba0 <close@plt>
  408724:	mov	w21, wzr
  408728:	b	40874c <ferror@plt+0x577c>
  40872c:	bl	402f40 <__errno_location@plt>
  408730:	mov	x20, x0
  408734:	ldr	w22, [x0]
  408738:	ldr	w0, [x19]
  40873c:	bl	402ba0 <close@plt>
  408740:	ldr	w0, [x19, #4]
  408744:	bl	402ba0 <close@plt>
  408748:	str	w22, [x20]
  40874c:	mov	w0, w21
  408750:	ldp	x20, x19, [sp, #240]
  408754:	ldp	x22, x21, [sp, #224]
  408758:	ldp	x24, x23, [sp, #208]
  40875c:	ldp	x26, x25, [sp, #192]
  408760:	ldp	x28, x27, [sp, #176]
  408764:	ldp	x29, x30, [sp, #160]
  408768:	ldr	d8, [sp, #144]
  40876c:	add	sp, sp, #0x100
  408770:	ret
  408774:	sub	sp, sp, #0x30
  408778:	stp	x20, x19, [sp, #32]
  40877c:	mov	w19, w0
  408780:	mov	x0, x1
  408784:	stp	x29, x30, [sp, #16]
  408788:	add	x29, sp, #0x10
  40878c:	mov	x20, x1
  408790:	bl	4028c0 <strlen@plt>
  408794:	mov	x2, x0
  408798:	mov	w0, #0x2                   	// #2
  40879c:	mov	x1, x20
  4087a0:	bl	402bf0 <write@plt>
  4087a4:	cbz	w19, 4087e4 <ferror@plt+0x5814>
  4087a8:	add	x1, sp, #0x4
  4087ac:	mov	w0, w19
  4087b0:	bl	40bc04 <ferror@plt+0x8c34>
  4087b4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4087b8:	mov	x19, x0
  4087bc:	add	x1, x1, #0x1a3
  4087c0:	mov	w0, #0x2                   	// #2
  4087c4:	mov	w2, #0x8                   	// #8
  4087c8:	bl	402bf0 <write@plt>
  4087cc:	mov	x0, x19
  4087d0:	bl	4028c0 <strlen@plt>
  4087d4:	mov	x2, x0
  4087d8:	mov	w0, #0x2                   	// #2
  4087dc:	mov	x1, x19
  4087e0:	bl	402bf0 <write@plt>
  4087e4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4087e8:	add	x1, x1, #0x707
  4087ec:	mov	w0, #0x2                   	// #2
  4087f0:	mov	w2, #0x1                   	// #1
  4087f4:	bl	402bf0 <write@plt>
  4087f8:	mov	w0, #0x2                   	// #2
  4087fc:	bl	402890 <_exit@plt>
  408800:	stp	x29, x30, [sp, #-32]!
  408804:	stp	x20, x19, [sp, #16]
  408808:	adrp	x20, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40880c:	ldr	x8, [x20, #2944]
  408810:	mov	x19, x0
  408814:	mov	x29, sp
  408818:	cbnz	x8, 408848 <ferror@plt+0x5878>
  40881c:	adrp	x2, 408000 <ferror@plt+0x5030>
  408820:	adrp	x3, 408000 <ferror@plt+0x5030>
  408824:	add	x2, x2, #0x97c
  408828:	add	x3, x3, #0x98c
  40882c:	mov	w0, #0x2f                  	// #47
  408830:	mov	x1, xzr
  408834:	mov	x4, xzr
  408838:	bl	40afe4 <ferror@plt+0x8014>
  40883c:	mov	x8, x0
  408840:	str	x0, [x20, #2944]
  408844:	cbz	x0, 40886c <ferror@plt+0x589c>
  408848:	mov	w9, #0x1                   	// #1
  40884c:	mov	x0, x8
  408850:	mov	x1, x19
  408854:	strb	w9, [x19, #12]
  408858:	bl	40b87c <ferror@plt+0x88ac>
  40885c:	cbz	x0, 40886c <ferror@plt+0x589c>
  408860:	ldp	x20, x19, [sp, #16]
  408864:	ldp	x29, x30, [sp], #32
  408868:	ret
  40886c:	bl	40f1e8 <ferror@plt+0xc218>
  408870:	sub	sp, sp, #0x40
  408874:	cmp	w0, #0x0
  408878:	stp	x20, x19, [sp, #48]
  40887c:	mov	w20, w0
  408880:	cset	w2, eq  // eq = none
  408884:	csinv	w0, w0, wzr, ne  // ne = any
  408888:	add	x1, sp, #0xc
  40888c:	stp	x29, x30, [sp, #32]
  408890:	add	x29, sp, #0x20
  408894:	bl	402fa0 <waitpid@plt>
  408898:	tbnz	w0, #31, 4088fc <ferror@plt+0x592c>
  40889c:	mov	w19, w0
  4088a0:	cbz	w0, 4088e8 <ferror@plt+0x5918>
  4088a4:	cmp	w20, #0x0
  4088a8:	b.gt	4088cc <ferror@plt+0x58fc>
  4088ac:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4088b0:	ldr	x0, [x8, #2944]
  4088b4:	add	x1, sp, #0x10
  4088b8:	str	w19, [sp, #24]
  4088bc:	bl	40b8b4 <ferror@plt+0x88e4>
  4088c0:	cbz	x0, 4088e8 <ferror@plt+0x5918>
  4088c4:	mov	w8, #0x2                   	// #2
  4088c8:	strb	w8, [x0, #12]
  4088cc:	ldrh	w8, [sp, #12]
  4088d0:	tst	w8, #0xffffff7f
  4088d4:	b.ne	408940 <ferror@plt+0x5970>  // b.any
  4088d8:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4088dc:	ldr	w9, [x8, #2952]
  4088e0:	sub	w9, w9, #0x1
  4088e4:	str	w9, [x8, #2952]
  4088e8:	mov	w0, w19
  4088ec:	ldp	x20, x19, [sp, #48]
  4088f0:	ldp	x29, x30, [sp, #32]
  4088f4:	add	sp, sp, #0x40
  4088f8:	ret
  4088fc:	bl	402f40 <__errno_location@plt>
  408900:	ldr	w19, [x0]
  408904:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  408908:	add	x1, x1, #0x171
  40890c:	mov	w2, #0x5                   	// #5
  408910:	mov	x0, xzr
  408914:	bl	402eb0 <dcgettext@plt>
  408918:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40891c:	ldr	x1, [x8, #1552]
  408920:	mov	x20, x0
  408924:	mov	w0, #0x4                   	// #4
  408928:	bl	40d5ec <ferror@plt+0xa61c>
  40892c:	mov	x3, x0
  408930:	mov	w0, #0x2                   	// #2
  408934:	mov	w1, w19
  408938:	mov	x2, x20
  40893c:	bl	402900 <error@plt>
  408940:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  408944:	add	x1, x1, #0x185
  408948:	mov	w2, #0x5                   	// #5
  40894c:	mov	x0, xzr
  408950:	bl	402eb0 <dcgettext@plt>
  408954:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408958:	ldr	x1, [x8, #1552]
  40895c:	mov	x19, x0
  408960:	mov	w0, #0x4                   	// #4
  408964:	bl	40d5ec <ferror@plt+0xa61c>
  408968:	mov	x3, x0
  40896c:	mov	w0, #0x2                   	// #2
  408970:	mov	w1, wzr
  408974:	mov	x2, x19
  408978:	bl	402900 <error@plt>
  40897c:	ldrsw	x8, [x0, #8]
  408980:	udiv	x9, x8, x1
  408984:	msub	x0, x9, x1, x8
  408988:	ret
  40898c:	ldr	w8, [x0, #8]
  408990:	ldr	w9, [x1, #8]
  408994:	cmp	w8, w9
  408998:	cset	w0, eq  // eq = none
  40899c:	ret
  4089a0:	sub	sp, sp, #0xe0
  4089a4:	stp	x20, x19, [sp, #208]
  4089a8:	adrp	x19, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4089ac:	mov	x20, x0
  4089b0:	add	x19, x19, #0xa40
  4089b4:	stp	x29, x30, [sp, #144]
  4089b8:	str	x25, [sp, #160]
  4089bc:	stp	x24, x23, [sp, #176]
  4089c0:	stp	x22, x21, [sp, #192]
  4089c4:	add	x29, sp, #0x90
  4089c8:	mov	x24, x19
  4089cc:	ldr	x19, [x19]
  4089d0:	add	x8, x19, #0xd
  4089d4:	cmp	x8, x20
  4089d8:	b.ne	4089c8 <ferror@plt+0x59f8>  // b.any
  4089dc:	ldrb	w8, [x19, #12]
  4089e0:	cmp	w8, #0x1
  4089e4:	b.ne	4089f0 <ferror@plt+0x5a20>  // b.any
  4089e8:	ldr	w0, [x19, #8]
  4089ec:	bl	408580 <ferror@plt+0x55b0>
  4089f0:	ldr	x25, [x19]
  4089f4:	add	x8, sp, #0x8
  4089f8:	add	x22, x8, #0x8
  4089fc:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408a00:	add	x1, x1, #0x590
  408a04:	mov	w0, wzr
  408a08:	mov	x2, x22
  408a0c:	bl	402880 <pthread_sigmask@plt>
  408a10:	cmp	w0, #0x0
  408a14:	cset	w8, eq  // eq = none
  408a18:	mov	x0, x20
  408a1c:	strb	w8, [sp, #8]
  408a20:	bl	402fb0 <unlink@plt>
  408a24:	mov	w23, w0
  408a28:	bl	402f40 <__errno_location@plt>
  408a2c:	ldr	w21, [x0]
  408a30:	str	x25, [x24]
  408a34:	ldrb	w8, [sp, #8]
  408a38:	cbz	w8, 408a4c <ferror@plt+0x5a7c>
  408a3c:	mov	w0, #0x2                   	// #2
  408a40:	mov	x1, x22
  408a44:	mov	x2, xzr
  408a48:	bl	402880 <pthread_sigmask@plt>
  408a4c:	cbz	w23, 408a8c <ferror@plt+0x5abc>
  408a50:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  408a54:	add	x1, x1, #0x1ac
  408a58:	mov	w2, #0x5                   	// #5
  408a5c:	mov	x0, xzr
  408a60:	bl	402eb0 <dcgettext@plt>
  408a64:	mov	x22, x0
  408a68:	mov	w1, #0x3                   	// #3
  408a6c:	mov	w0, wzr
  408a70:	mov	x2, x20
  408a74:	bl	40d7b0 <ferror@plt+0xa7e0>
  408a78:	mov	x3, x0
  408a7c:	mov	w0, wzr
  408a80:	mov	w1, w21
  408a84:	mov	x2, x22
  408a88:	bl	402900 <error@plt>
  408a8c:	cbnz	x25, 408a98 <ferror@plt+0x5ac8>
  408a90:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  408a94:	str	x24, [x8, #1208]
  408a98:	mov	x0, x19
  408a9c:	bl	402d30 <free@plt>
  408aa0:	ldp	x20, x19, [sp, #208]
  408aa4:	ldp	x22, x21, [sp, #192]
  408aa8:	ldp	x24, x23, [sp, #176]
  408aac:	ldr	x25, [sp, #160]
  408ab0:	ldp	x29, x30, [sp, #144]
  408ab4:	add	sp, sp, #0xe0
  408ab8:	ret
  408abc:	sub	sp, sp, #0x110
  408ac0:	stp	x29, x30, [sp, #176]
  408ac4:	stp	x28, x27, [sp, #192]
  408ac8:	stp	x26, x25, [sp, #208]
  408acc:	stp	x24, x23, [sp, #224]
  408ad0:	stp	x22, x21, [sp, #240]
  408ad4:	stp	x20, x19, [sp, #256]
  408ad8:	add	x29, sp, #0xb0
  408adc:	lsr	x8, x1, #1
  408ae0:	ldp	x25, x26, [x3, #40]
  408ae4:	stp	x8, x2, [x29, #-64]
  408ae8:	stp	x5, x0, [x29, #-80]
  408aec:	ldr	x8, [x3, #64]
  408af0:	mov	x19, x4
  408af4:	mov	x23, x3
  408af8:	mov	x24, x0
  408afc:	cmp	x1, #0x2
  408b00:	str	x2, [sp, #32]
  408b04:	stp	x8, x4, [x29, #-48]
  408b08:	stp	x5, x6, [x29, #-32]
  408b0c:	str	x6, [sp, #72]
  408b10:	b.cc	408b48 <ferror@plt+0x5b78>  // b.lo, b.ul, b.last
  408b14:	add	x8, x26, x25
  408b18:	cmp	x8, #0x20, lsl #12
  408b1c:	b.cc	408b48 <ferror@plt+0x5b78>  // b.lo, b.ul, b.last
  408b20:	adrp	x2, 409000 <ferror@plt+0x6030>
  408b24:	mov	x27, x1
  408b28:	add	x2, x2, #0x298
  408b2c:	sub	x0, x29, #0x10
  408b30:	sub	x3, x29, #0x48
  408b34:	mov	x1, xzr
  408b38:	bl	402bd0 <pthread_create@plt>
  408b3c:	ldr	x25, [x23, #40]
  408b40:	cbz	w0, 4090bc <ferror@plt+0x60ec>
  408b44:	ldr	x26, [x23, #48]
  408b48:	ldr	x8, [sp, #32]
  408b4c:	cmp	x26, #0x2
  408b50:	sub	x27, x24, x8, lsl #5
  408b54:	b.cc	408b74 <ferror@plt+0x5ba4>  // b.lo, b.ul, b.last
  408b58:	lsl	x8, x25, #4
  408b5c:	and	x8, x8, #0xffffffffffffffe0
  408b60:	sub	x0, x24, x25, lsl #5
  408b64:	sub	x2, x27, x8
  408b68:	mov	x1, x26
  408b6c:	mov	w3, wzr
  408b70:	bl	4092c4 <ferror@plt+0x62f4>
  408b74:	cmp	x25, #0x2
  408b78:	b.cc	408b90 <ferror@plt+0x5bc0>  // b.lo, b.ul, b.last
  408b7c:	mov	x0, x24
  408b80:	mov	x1, x25
  408b84:	mov	x2, x27
  408b88:	mov	w3, wzr
  408b8c:	bl	4092c4 <ferror@plt+0x62f4>
  408b90:	sub	x8, x24, x25, lsl #5
  408b94:	sub	x9, x8, x26, lsl #5
  408b98:	mov	x0, x19
  408b9c:	mov	x1, x23
  408ba0:	stp	x24, x8, [x23]
  408ba4:	stp	x8, x9, [x23, #16]
  408ba8:	bl	409460 <ferror@plt+0x6490>
  408bac:	add	x23, x19, #0x8
  408bb0:	add	x24, x19, #0x38
  408bb4:	str	x19, [sp]
  408bb8:	str	x24, [sp, #16]
  408bbc:	mov	x0, x23
  408bc0:	bl	402f80 <pthread_mutex_lock@plt>
  408bc4:	ldr	x0, [x19]
  408bc8:	bl	40bb28 <ferror@plt+0x8b58>
  408bcc:	mov	x25, x0
  408bd0:	cbnz	x0, 408bf0 <ferror@plt+0x5c20>
  408bd4:	mov	x0, x24
  408bd8:	mov	x1, x23
  408bdc:	bl	402d60 <pthread_cond_wait@plt>
  408be0:	ldr	x0, [x19]
  408be4:	bl	40bb28 <ferror@plt+0x8b58>
  408be8:	cbz	x0, 408bd4 <ferror@plt+0x5c04>
  408bec:	mov	x25, x0
  408bf0:	mov	x0, x23
  408bf4:	bl	402f90 <pthread_mutex_unlock@plt>
  408bf8:	add	x20, x25, #0x58
  408bfc:	mov	x0, x20
  408c00:	bl	402f80 <pthread_mutex_lock@plt>
  408c04:	ldr	w9, [x25, #80]
  408c08:	strb	wzr, [x25, #84]
  408c0c:	cbz	w9, 409088 <ferror@plt+0x60b8>
  408c10:	ldr	x10, [sp, #32]
  408c14:	str	x20, [sp, #48]
  408c18:	ldp	x22, x26, [x25]
  408c1c:	lsl	w8, w9, #1
  408c20:	add	w8, w8, #0x2
  408c24:	lsr	x8, x10, x8
  408c28:	cmp	w9, #0x1
  408c2c:	add	x20, x8, #0x1
  408c30:	stp	x22, x26, [sp, #56]
  408c34:	b.ne	408cd4 <ferror@plt+0x5d04>  // b.any
  408c38:	ldr	x21, [x25, #16]
  408c3c:	cmp	x22, x21
  408c40:	b.eq	408d9c <ferror@plt+0x5dcc>  // b.none
  408c44:	ldr	x19, [x25, #24]
  408c48:	mov	x24, x26
  408c4c:	stp	x22, x26, [sp, #80]
  408c50:	str	x22, [sp, #40]
  408c54:	cmp	x26, x19
  408c58:	b.eq	408dc8 <ferror@plt+0x5df8>  // b.none
  408c5c:	cbz	x20, 408dd0 <ferror@plt+0x5e00>
  408c60:	sub	x28, x22, #0x20
  408c64:	sub	x27, x26, #0x20
  408c68:	mov	x0, x28
  408c6c:	mov	x1, x27
  408c70:	sub	x20, x20, #0x1
  408c74:	bl	4066ec <ferror@plt+0x371c>
  408c78:	cmp	w0, #0x0
  408c7c:	b.le	408ca4 <ferror@plt+0x5cd4>
  408c80:	ldur	x1, [x29, #-80]
  408c84:	ldr	x2, [sp, #72]
  408c88:	mov	x0, x27
  408c8c:	str	x27, [x25, #8]
  408c90:	bl	4090ec <ferror@plt+0x611c>
  408c94:	mov	x24, x27
  408c98:	mov	x26, x27
  408c9c:	str	x27, [sp, #88]
  408ca0:	b	408cc4 <ferror@plt+0x5cf4>
  408ca4:	ldur	x1, [x29, #-80]
  408ca8:	ldr	x2, [sp, #72]
  408cac:	mov	x0, x28
  408cb0:	str	x28, [x25]
  408cb4:	bl	4090ec <ferror@plt+0x611c>
  408cb8:	str	x28, [sp, #80]
  408cbc:	str	x28, [sp, #40]
  408cc0:	mov	x22, x28
  408cc4:	cmp	x22, x21
  408cc8:	b.ne	408c54 <ferror@plt+0x5c84>  // b.any
  408ccc:	mov	x22, x21
  408cd0:	b	408dd4 <ferror@plt+0x5e04>
  408cd4:	ldr	x9, [x25, #32]
  408cd8:	ldr	x10, [x25, #16]
  408cdc:	ldr	x28, [x9]
  408ce0:	cmp	x22, x10
  408ce4:	str	x9, [sp, #24]
  408ce8:	b.eq	408db4 <ferror@plt+0x5de4>  // b.none
  408cec:	ldr	x11, [x25, #24]
  408cf0:	str	x10, [sp, #8]
  408cf4:	cmp	x26, x11
  408cf8:	str	x11, [sp, #40]
  408cfc:	b.eq	408ee8 <ferror@plt+0x5f18>  // b.none
  408d00:	cbz	x20, 408ee4 <ferror@plt+0x5f14>
  408d04:	neg	x20, x8
  408d08:	sub	x8, x28, #0x20
  408d0c:	stp	x22, x26, [sp, #80]
  408d10:	mov	x27, x22
  408d14:	mov	x21, x26
  408d18:	sub	x22, x27, #0x20
  408d1c:	sub	x26, x21, #0x20
  408d20:	mov	x0, x22
  408d24:	mov	x1, x26
  408d28:	mov	x24, x10
  408d2c:	mov	x28, x8
  408d30:	bl	4066ec <ferror@plt+0x371c>
  408d34:	cmp	w0, #0x0
  408d38:	b.le	408d54 <ferror@plt+0x5d84>
  408d3c:	str	x26, [x25, #8]
  408d40:	ldp	q1, q0, [x26]
  408d44:	mov	x21, x26
  408d48:	stp	q1, q0, [x28]
  408d4c:	str	x26, [sp, #88]
  408d50:	b	408d68 <ferror@plt+0x5d98>
  408d54:	str	x22, [x25]
  408d58:	ldp	q1, q0, [x22]
  408d5c:	mov	x27, x22
  408d60:	stp	q1, q0, [x28]
  408d64:	str	x22, [sp, #80]
  408d68:	ldp	x22, x26, [sp, #56]
  408d6c:	mov	x10, x24
  408d70:	cmp	x27, x24
  408d74:	b.eq	408f24 <ferror@plt+0x5f54>  // b.none
  408d78:	ldr	x8, [sp, #40]
  408d7c:	cmp	x21, x8
  408d80:	b.eq	408f2c <ferror@plt+0x5f5c>  // b.none
  408d84:	add	x20, x20, #0x1
  408d88:	cmp	x20, #0x1
  408d8c:	sub	x8, x28, #0x20
  408d90:	b.ne	408d18 <ferror@plt+0x5d48>  // b.any
  408d94:	mov	x20, #0xffffffffffffffff    	// #-1
  408d98:	b	408f34 <ferror@plt+0x5f64>
  408d9c:	stp	x22, x26, [sp, #80]
  408da0:	mov	x21, x22
  408da4:	mov	x8, x26
  408da8:	str	x22, [sp, #40]
  408dac:	mov	x24, x26
  408db0:	b	408ddc <ferror@plt+0x5e0c>
  408db4:	stp	x22, x26, [sp, #80]
  408db8:	str	x22, [sp, #8]
  408dbc:	mov	x27, x22
  408dc0:	mov	x21, x26
  408dc4:	b	408f38 <ferror@plt+0x5f68>
  408dc8:	mov	x26, x19
  408dcc:	b	408dd4 <ferror@plt+0x5e04>
  408dd0:	mov	x20, #0xffffffffffffffff    	// #-1
  408dd4:	ldr	x19, [sp]
  408dd8:	ldr	x8, [sp, #64]
  408ddc:	ldr	x12, [x25, #48]
  408de0:	sub	x8, x8, x24
  408de4:	cmp	x12, x8, asr #5
  408de8:	b.ne	408e54 <ferror@plt+0x5e84>  // b.any
  408dec:	cmp	x22, x21
  408df0:	asr	x12, x8, #5
  408df4:	b.eq	408ef8 <ferror@plt+0x5f28>  // b.none
  408df8:	ldp	x26, x24, [sp, #64]
  408dfc:	cbz	x20, 408f08 <ferror@plt+0x5f38>
  408e00:	mov	x27, x12
  408e04:	add	x19, x21, #0x20
  408e08:	sub	x8, x20, #0x1
  408e0c:	ldur	x1, [x29, #-80]
  408e10:	mov	x21, x22
  408e14:	sub	x22, x22, #0x20
  408e18:	mov	x0, x22
  408e1c:	mov	x2, x24
  408e20:	mov	x20, x8
  408e24:	str	x22, [x25]
  408e28:	bl	4090ec <ferror@plt+0x611c>
  408e2c:	cmp	x19, x21
  408e30:	b.eq	408e3c <ferror@plt+0x5e6c>  // b.none
  408e34:	sub	x8, x20, #0x1
  408e38:	cbnz	x20, 408e0c <ferror@plt+0x5e3c>
  408e3c:	str	x22, [sp, #80]
  408e40:	ldr	x19, [sp]
  408e44:	ldr	x24, [sp, #16]
  408e48:	ldp	x20, x22, [sp, #48]
  408e4c:	ldr	x21, [sp, #88]
  408e50:	b	408ed4 <ferror@plt+0x5f04>
  408e54:	ldr	x22, [sp, #56]
  408e58:	ldr	x9, [sp, #40]
  408e5c:	ldr	x8, [x25, #40]
  408e60:	ldr	x24, [sp, #16]
  408e64:	sub	x9, x22, x9
  408e68:	cmp	x8, x9, asr #5
  408e6c:	b.ne	408edc <ferror@plt+0x5f0c>  // b.any
  408e70:	ldr	x22, [sp, #72]
  408e74:	ldr	x21, [sp, #88]
  408e78:	cbz	x20, 408f18 <ferror@plt+0x5f48>
  408e7c:	ldr	x8, [x25, #24]
  408e80:	cmp	x26, x8
  408e84:	b.eq	408f18 <ferror@plt+0x5f48>  // b.none
  408e88:	mov	x27, x12
  408e8c:	add	x19, x8, #0x20
  408e90:	sub	x8, x20, #0x1
  408e94:	ldur	x1, [x29, #-80]
  408e98:	mov	x21, x26
  408e9c:	sub	x26, x26, #0x20
  408ea0:	mov	x0, x26
  408ea4:	mov	x2, x22
  408ea8:	mov	x20, x8
  408eac:	str	x26, [x25, #8]
  408eb0:	bl	4090ec <ferror@plt+0x611c>
  408eb4:	cmp	x19, x21
  408eb8:	b.eq	408ec4 <ferror@plt+0x5ef4>  // b.none
  408ebc:	sub	x8, x20, #0x1
  408ec0:	cbnz	x20, 408e94 <ferror@plt+0x5ec4>
  408ec4:	mov	x21, x26
  408ec8:	ldr	x19, [sp]
  408ecc:	ldp	x20, x22, [sp, #48]
  408ed0:	ldr	x26, [sp, #64]
  408ed4:	mov	x12, x27
  408ed8:	b	408ffc <ferror@plt+0x602c>
  408edc:	ldr	x20, [sp, #48]
  408ee0:	b	408f00 <ferror@plt+0x5f30>
  408ee4:	mov	x20, #0xffffffffffffffff    	// #-1
  408ee8:	stp	x22, x26, [sp, #80]
  408eec:	mov	x21, x26
  408ef0:	mov	x27, x22
  408ef4:	b	408f34 <ferror@plt+0x5f64>
  408ef8:	ldr	x24, [sp, #16]
  408efc:	ldp	x20, x22, [sp, #48]
  408f00:	ldr	x26, [sp, #64]
  408f04:	b	408f10 <ferror@plt+0x5f40>
  408f08:	ldr	x24, [sp, #16]
  408f0c:	ldp	x20, x22, [sp, #48]
  408f10:	ldr	x21, [sp, #88]
  408f14:	b	408ffc <ferror@plt+0x602c>
  408f18:	ldp	x20, x22, [sp, #48]
  408f1c:	ldr	x26, [sp, #64]
  408f20:	b	408ffc <ferror@plt+0x602c>
  408f24:	ldr	x27, [sp, #8]
  408f28:	b	408f30 <ferror@plt+0x5f60>
  408f2c:	ldr	x21, [sp, #40]
  408f30:	neg	x20, x20
  408f34:	ldr	x24, [sp, #16]
  408f38:	ldr	x12, [x25, #48]
  408f3c:	sub	x8, x26, x21
  408f40:	cmp	x12, x8, asr #5
  408f44:	b.ne	408f94 <ferror@plt+0x5fc4>  // b.any
  408f48:	ldr	x8, [sp, #8]
  408f4c:	cmp	x27, x8
  408f50:	b.eq	408fec <ferror@plt+0x601c>  // b.none
  408f54:	ldr	x21, [sp, #88]
  408f58:	cbz	x20, 408f8c <ferror@plt+0x5fbc>
  408f5c:	add	x8, x10, #0x20
  408f60:	sub	x9, x20, #0x1
  408f64:	ldp	q1, q0, [x27, #-32]
  408f68:	cmp	x8, x27
  408f6c:	sub	x27, x27, #0x20
  408f70:	stp	q1, q0, [x28, #-32]!
  408f74:	b.eq	408f84 <ferror@plt+0x5fb4>  // b.none
  408f78:	mov	x10, x9
  408f7c:	sub	x9, x9, #0x1
  408f80:	cbnz	x10, 408f64 <ferror@plt+0x5f94>
  408f84:	str	x27, [x25]
  408f88:	str	x27, [sp, #80]
  408f8c:	ldr	x20, [sp, #48]
  408f90:	b	408ff4 <ferror@plt+0x6024>
  408f94:	ldr	x8, [x25, #40]
  408f98:	sub	x9, x22, x27
  408f9c:	cmp	x8, x9, asr #5
  408fa0:	b.ne	408fec <ferror@plt+0x601c>  // b.any
  408fa4:	ldr	x11, [sp, #24]
  408fa8:	cbz	x20, 40907c <ferror@plt+0x60ac>
  408fac:	ldr	x8, [x25, #24]
  408fb0:	cmp	x21, x8
  408fb4:	b.eq	40907c <ferror@plt+0x60ac>  // b.none
  408fb8:	add	x8, x8, #0x20
  408fbc:	sub	x9, x20, #0x1
  408fc0:	ldp	q1, q0, [x21, #-32]
  408fc4:	cmp	x8, x21
  408fc8:	sub	x21, x21, #0x20
  408fcc:	stp	q1, q0, [x28, #-32]!
  408fd0:	b.eq	408fe0 <ferror@plt+0x6010>  // b.none
  408fd4:	mov	x10, x9
  408fd8:	sub	x9, x9, #0x1
  408fdc:	cbnz	x10, 408fc0 <ferror@plt+0x5ff0>
  408fe0:	ldr	x20, [sp, #48]
  408fe4:	str	x21, [x25, #8]
  408fe8:	b	408ff8 <ferror@plt+0x6028>
  408fec:	ldr	x20, [sp, #48]
  408ff0:	ldr	x21, [sp, #88]
  408ff4:	ldr	x11, [sp, #24]
  408ff8:	str	x28, [x11]
  408ffc:	ldr	x9, [sp, #80]
  409000:	ldr	x8, [x25, #40]
  409004:	sub	x10, x26, x21
  409008:	sub	x10, x12, x10, asr #5
  40900c:	sub	x9, x22, x9
  409010:	sub	x8, x8, x9, asr #5
  409014:	mov	x0, x19
  409018:	mov	x1, x25
  40901c:	stp	x8, x10, [x25, #40]
  409020:	bl	4094b4 <ferror@plt+0x64e4>
  409024:	ldr	w8, [x25, #80]
  409028:	cmp	w8, #0x2
  40902c:	b.cc	409058 <ferror@plt+0x6088>  // b.lo, b.ul, b.last
  409030:	ldr	x8, [x25, #56]
  409034:	add	x0, x8, #0x58
  409038:	bl	402f80 <pthread_mutex_lock@plt>
  40903c:	ldr	x1, [x25, #56]
  409040:	mov	x0, x19
  409044:	bl	4094b4 <ferror@plt+0x64e4>
  409048:	ldr	x8, [x25, #56]
  40904c:	add	x0, x8, #0x58
  409050:	bl	402f90 <pthread_mutex_unlock@plt>
  409054:	b	409070 <ferror@plt+0x60a0>
  409058:	ldp	x8, x9, [x25, #40]
  40905c:	cmn	x8, x9
  409060:	b.ne	409070 <ferror@plt+0x60a0>  // b.any
  409064:	ldr	x1, [x25, #56]
  409068:	mov	x0, x19
  40906c:	bl	409460 <ferror@plt+0x6490>
  409070:	mov	x0, x20
  409074:	bl	402f90 <pthread_mutex_unlock@plt>
  409078:	b	408bbc <ferror@plt+0x5bec>
  40907c:	ldr	x20, [sp, #48]
  409080:	ldr	x21, [sp, #88]
  409084:	b	408ff8 <ferror@plt+0x6028>
  409088:	mov	x0, x20
  40908c:	bl	402f90 <pthread_mutex_unlock@plt>
  409090:	mov	x0, x19
  409094:	mov	x1, x25
  409098:	bl	409460 <ferror@plt+0x6490>
  40909c:	ldp	x20, x19, [sp, #256]
  4090a0:	ldp	x22, x21, [sp, #240]
  4090a4:	ldp	x24, x23, [sp, #224]
  4090a8:	ldp	x26, x25, [sp, #208]
  4090ac:	ldp	x28, x27, [sp, #192]
  4090b0:	ldp	x29, x30, [sp, #176]
  4090b4:	add	sp, sp, #0x110
  4090b8:	ret
  4090bc:	ldr	x3, [x23, #72]
  4090c0:	ldr	x2, [sp, #32]
  4090c4:	ldur	x5, [x29, #-80]
  4090c8:	ldr	x6, [sp, #72]
  4090cc:	sub	x1, x27, x27, lsr #1
  4090d0:	sub	x0, x24, x25, lsl #5
  4090d4:	mov	x4, x19
  4090d8:	bl	408abc <ferror@plt+0x5aec>
  4090dc:	ldur	x0, [x29, #-16]
  4090e0:	mov	x1, xzr
  4090e4:	bl	402c10 <pthread_join@plt>
  4090e8:	b	40909c <ferror@plt+0x60cc>
  4090ec:	stp	x29, x30, [sp, #-48]!
  4090f0:	stp	x20, x19, [sp, #32]
  4090f4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4090f8:	ldrb	w8, [x8, #1562]
  4090fc:	str	x21, [sp, #16]
  409100:	mov	x19, x2
  409104:	mov	x20, x1
  409108:	cmp	w8, #0x1
  40910c:	mov	x21, x0
  409110:	mov	x29, sp
  409114:	b.ne	409148 <ferror@plt+0x6178>  // b.any
  409118:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40911c:	ldr	x8, [x8, #2968]
  409120:	cbz	x8, 409138 <ferror@plt+0x6168>
  409124:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x13ac0>
  409128:	add	x1, x1, #0xb98
  40912c:	mov	x0, x21
  409130:	bl	4066ec <ferror@plt+0x371c>
  409134:	cbz	w0, 409164 <ferror@plt+0x6194>
  409138:	ldp	q1, q0, [x21]
  40913c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  409140:	add	x8, x8, #0xb98
  409144:	stp	q1, q0, [x8]
  409148:	mov	x0, x21
  40914c:	mov	x1, x20
  409150:	mov	x2, x19
  409154:	ldp	x20, x19, [sp, #32]
  409158:	ldr	x21, [sp, #16]
  40915c:	ldp	x29, x30, [sp], #48
  409160:	b	4071e4 <ferror@plt+0x4214>
  409164:	ldp	x20, x19, [sp, #32]
  409168:	ldr	x21, [sp, #16]
  40916c:	ldp	x29, x30, [sp], #48
  409170:	ret
  409174:	ldr	w8, [x0, #80]
  409178:	ldr	w9, [x1, #80]
  40917c:	cmp	w8, w9
  409180:	b.ne	409198 <ferror@plt+0x61c8>  // b.any
  409184:	ldp	x8, x9, [x0, #40]
  409188:	ldp	x10, x11, [x1, #40]
  40918c:	add	x8, x9, x8
  409190:	add	x9, x11, x10
  409194:	cmp	x8, x9
  409198:	cset	w0, cc  // cc = lo, ul, last
  40919c:	ret
  4091a0:	stp	x29, x30, [sp, #-96]!
  4091a4:	str	x27, [sp, #16]
  4091a8:	stp	x26, x25, [sp, #32]
  4091ac:	stp	x22, x21, [sp, #64]
  4091b0:	stp	x20, x19, [sp, #80]
  4091b4:	mov	x19, x4
  4091b8:	mov	x21, x3
  4091bc:	mov	x22, x2
  4091c0:	mov	x20, x1
  4091c4:	neg	x25, x4
  4091c8:	mov	w26, #0x30                  	// #48
  4091cc:	mov	w27, #0x28                  	// #40
  4091d0:	stp	x24, x23, [sp, #48]
  4091d4:	mov	x29, sp
  4091d8:	tst	w5, #0x1
  4091dc:	csel	x8, x27, x26, ne  // ne = any
  4091e0:	ldr	x8, [x0, x8]
  4091e4:	add	x9, x0, #0x10
  4091e8:	add	x10, x0, #0x18
  4091ec:	add	x23, x22, x25, lsl #5
  4091f0:	csel	x9, x9, x10, ne  // ne = any
  4091f4:	lsr	x10, x8, #1
  4091f8:	sub	x8, x8, x8, lsr #1
  4091fc:	sub	x22, x23, x10, lsl #5
  409200:	stp	x9, x10, [x20, #32]
  409204:	stp	x8, x0, [x20, #48]
  409208:	stp	x23, x22, [x20, #16]
  40920c:	stp	x23, x22, [x20]
  409210:	ldr	w8, [x0, #80]
  409214:	add	x0, x20, #0x58
  409218:	mov	x1, xzr
  40921c:	add	x24, x20, #0x88
  409220:	add	w8, w8, #0x1
  409224:	strb	wzr, [x20, #84]
  409228:	str	w8, [x20, #80]
  40922c:	bl	402b90 <pthread_mutex_init@plt>
  409230:	cmp	x21, #0x2
  409234:	b.cc	409274 <ferror@plt+0x62a4>  // b.lo, b.ul, b.last
  409238:	lsr	x3, x21, #1
  40923c:	mov	w5, #0x1                   	// #1
  409240:	mov	x0, x20
  409244:	mov	x1, x24
  409248:	mov	x2, x23
  40924c:	mov	x4, x19
  409250:	sub	x21, x21, x21, lsr #1
  409254:	str	x24, [x20, #64]
  409258:	bl	4091a0 <ferror@plt+0x61d0>
  40925c:	mov	x8, x0
  409260:	mov	w5, wzr
  409264:	str	x0, [x20, #72]
  409268:	mov	x0, x20
  40926c:	mov	x20, x8
  409270:	b	4091d8 <ferror@plt+0x6208>
  409274:	stp	xzr, xzr, [x20, #64]
  409278:	mov	x0, x24
  40927c:	ldp	x20, x19, [sp, #80]
  409280:	ldp	x22, x21, [sp, #64]
  409284:	ldp	x24, x23, [sp, #48]
  409288:	ldp	x26, x25, [sp, #32]
  40928c:	ldr	x27, [sp, #16]
  409290:	ldp	x29, x30, [sp], #96
  409294:	ret
  409298:	stp	x29, x30, [sp, #-16]!
  40929c:	ldp	x8, x1, [x0]
  4092a0:	ldp	x2, x3, [x0, #16]
  4092a4:	ldp	x4, x5, [x0, #32]
  4092a8:	ldr	x6, [x0, #48]
  4092ac:	mov	x0, x8
  4092b0:	mov	x29, sp
  4092b4:	bl	408abc <ferror@plt+0x5aec>
  4092b8:	mov	x0, xzr
  4092bc:	ldp	x29, x30, [sp], #16
  4092c0:	ret
  4092c4:	stp	x29, x30, [sp, #-80]!
  4092c8:	stp	x24, x23, [sp, #32]
  4092cc:	stp	x22, x21, [sp, #48]
  4092d0:	mov	w23, w3
  4092d4:	mov	x21, x2
  4092d8:	cmp	x1, #0x2
  4092dc:	mov	x22, x0
  4092e0:	str	x25, [sp, #16]
  4092e4:	stp	x20, x19, [sp, #64]
  4092e8:	mov	x29, sp
  4092ec:	b.ne	409340 <ferror@plt+0x6370>  // b.any
  4092f0:	sub	x19, x22, #0x20
  4092f4:	sub	x20, x22, #0x40
  4092f8:	mov	x0, x19
  4092fc:	mov	x1, x20
  409300:	bl	4066ec <ferror@plt+0x371c>
  409304:	tbz	w23, #0, 409390 <ferror@plt+0x63c0>
  409308:	cmp	w0, #0x0
  40930c:	mov	x8, #0xffffffffffffffc0    	// #-64
  409310:	mov	x9, #0xffffffffffffffe0    	// #-32
  409314:	csel	x8, x9, x8, gt
  409318:	cset	w9, gt
  40931c:	mvn	x9, x9
  409320:	add	x8, x22, x8
  409324:	add	x9, x22, x9, lsl #5
  409328:	ldp	q3, q0, [x8]
  40932c:	ldp	q2, q1, [x9]
  409330:	stur	q3, [x21, #-64]
  409334:	stp	q0, q2, [x21, #-48]
  409338:	stur	q1, [x21, #-16]
  40933c:	b	409448 <ferror@plt+0x6478>
  409340:	lsr	x19, x1, #1
  409344:	tst	w23, #0x1
  409348:	sub	x20, x1, x1, lsr #1
  40934c:	csneg	x8, xzr, x19, eq  // eq = none
  409350:	mov	x24, x1
  409354:	neg	x25, x1, lsr #1
  409358:	sub	x0, x22, x19, lsl #5
  40935c:	add	x2, x21, x8, lsl #5
  409360:	and	w3, w23, #0x1
  409364:	mov	x1, x20
  409368:	bl	4092c4 <ferror@plt+0x62f4>
  40936c:	cmp	x24, #0x4
  409370:	b.cc	4093b4 <ferror@plt+0x63e4>  // b.lo, b.ul, b.last
  409374:	mvn	w8, w23
  409378:	and	w3, w8, #0x1
  40937c:	mov	x0, x22
  409380:	mov	x1, x19
  409384:	mov	x2, x21
  409388:	bl	4092c4 <ferror@plt+0x62f4>
  40938c:	b	4093c0 <ferror@plt+0x63f0>
  409390:	cmp	w0, #0x1
  409394:	b.lt	409448 <ferror@plt+0x6478>  // b.tstop
  409398:	ldp	q1, q0, [x19]
  40939c:	ldp	q2, q3, [x20]
  4093a0:	stp	q1, q0, [x21, #-32]
  4093a4:	ldp	q1, q0, [x21, #-32]
  4093a8:	stp	q2, q3, [x19]
  4093ac:	stp	q1, q0, [x20]
  4093b0:	b	409448 <ferror@plt+0x6478>
  4093b4:	tbnz	w23, #0, 4093c0 <ferror@plt+0x63f0>
  4093b8:	ldp	q1, q0, [x22, #-32]
  4093bc:	stp	q1, q0, [x21, #-32]
  4093c0:	tst	w23, #0x1
  4093c4:	csel	x23, x21, x22, ne  // ne = any
  4093c8:	csel	x24, x22, x21, ne  // ne = any
  4093cc:	add	x25, x23, x25, lsl #5
  4093d0:	sub	x21, x24, #0x20
  4093d4:	sub	x22, x25, #0x20
  4093d8:	mov	x0, x21
  4093dc:	mov	x1, x22
  4093e0:	bl	4066ec <ferror@plt+0x371c>
  4093e4:	cmp	w0, #0x0
  4093e8:	sub	x23, x23, #0x20
  4093ec:	b.le	409408 <ferror@plt+0x6438>
  4093f0:	ldp	q1, q0, [x22]
  4093f4:	subs	x20, x20, #0x1
  4093f8:	mov	x25, x22
  4093fc:	stp	q1, q0, [x23]
  409400:	b.ne	4093d4 <ferror@plt+0x6404>  // b.any
  409404:	b	409420 <ferror@plt+0x6450>
  409408:	ldp	q1, q0, [x21]
  40940c:	subs	x19, x19, #0x1
  409410:	mov	x24, x21
  409414:	stp	q1, q0, [x23]
  409418:	b.ne	4093d0 <ferror@plt+0x6400>  // b.any
  40941c:	b	409448 <ferror@plt+0x6478>
  409420:	mov	x8, xzr
  409424:	mov	x9, #0xffffffffffffffe0    	// #-32
  409428:	add	x10, x24, x9
  40942c:	ldp	q0, q1, [x10]
  409430:	add	x8, x8, #0x1
  409434:	add	x10, x23, x9
  409438:	cmp	x19, x8
  40943c:	sub	x9, x9, #0x20
  409440:	stp	q0, q1, [x10]
  409444:	b.ne	409428 <ferror@plt+0x6458>  // b.any
  409448:	ldp	x20, x19, [sp, #64]
  40944c:	ldp	x22, x21, [sp, #48]
  409450:	ldp	x24, x23, [sp, #32]
  409454:	ldr	x25, [sp, #16]
  409458:	ldp	x29, x30, [sp], #80
  40945c:	ret
  409460:	stp	x29, x30, [sp, #-48]!
  409464:	str	x21, [sp, #16]
  409468:	add	x21, x0, #0x8
  40946c:	stp	x20, x19, [sp, #32]
  409470:	mov	x20, x0
  409474:	mov	x0, x21
  409478:	mov	x29, sp
  40947c:	mov	x19, x1
  409480:	bl	402f80 <pthread_mutex_lock@plt>
  409484:	ldr	x0, [x20], #56
  409488:	mov	x1, x19
  40948c:	bl	40ba3c <ferror@plt+0x8a6c>
  409490:	mov	w8, #0x1                   	// #1
  409494:	mov	x0, x20
  409498:	strb	w8, [x19, #84]
  40949c:	bl	402ac0 <pthread_cond_signal@plt>
  4094a0:	mov	x0, x21
  4094a4:	ldp	x20, x19, [sp, #32]
  4094a8:	ldr	x21, [sp, #16]
  4094ac:	ldp	x29, x30, [sp], #48
  4094b0:	b	402f90 <pthread_mutex_unlock@plt>
  4094b4:	ldrb	w8, [x1, #84]
  4094b8:	cbz	w8, 4094c0 <ferror@plt+0x64f0>
  4094bc:	ret
  4094c0:	ldp	x8, x10, [x1, #8]
  4094c4:	ldr	x11, [x1]
  4094c8:	ldr	x9, [x1, #24]
  4094cc:	cmp	x11, x10
  4094d0:	b.ne	4094e8 <ferror@plt+0x6518>  // b.any
  4094d4:	cmp	x8, x9
  4094d8:	b.eq	4094bc <ferror@plt+0x64ec>  // b.none
  4094dc:	ldr	x8, [x1, #40]
  4094e0:	cbnz	x8, 4094bc <ferror@plt+0x64ec>
  4094e4:	b	4094f8 <ferror@plt+0x6528>
  4094e8:	cmp	x8, x9
  4094ec:	b.ne	4094f8 <ferror@plt+0x6528>  // b.any
  4094f0:	ldr	x8, [x1, #48]
  4094f4:	cbnz	x8, 4094bc <ferror@plt+0x64ec>
  4094f8:	b	409460 <ferror@plt+0x6490>
  4094fc:	mov	w0, #0x1                   	// #1
  409500:	b	4030ec <ferror@plt+0x11c>
  409504:	stp	x29, x30, [sp, #-96]!
  409508:	stp	x28, x27, [sp, #16]
  40950c:	stp	x26, x25, [sp, #32]
  409510:	stp	x24, x23, [sp, #48]
  409514:	stp	x22, x21, [sp, #64]
  409518:	stp	x20, x19, [sp, #80]
  40951c:	mov	x29, sp
  409520:	mov	x19, x3
  409524:	mov	x20, x2
  409528:	mov	x24, x1
  40952c:	mov	x21, x0
  409530:	bl	4028c0 <strlen@plt>
  409534:	ldr	x25, [x24]
  409538:	cbz	x25, 4095c4 <ferror@plt+0x65f4>
  40953c:	mov	x22, x0
  409540:	mov	w26, wzr
  409544:	mov	x23, xzr
  409548:	add	x27, x24, #0x8
  40954c:	mov	x28, #0xffffffffffffffff    	// #-1
  409550:	mov	x24, x20
  409554:	mov	x0, x25
  409558:	mov	x1, x21
  40955c:	mov	x2, x22
  409560:	bl	402ad0 <strncmp@plt>
  409564:	cbnz	w0, 4095a4 <ferror@plt+0x65d4>
  409568:	mov	x0, x25
  40956c:	bl	4028c0 <strlen@plt>
  409570:	cmp	x0, x22
  409574:	b.eq	4095c8 <ferror@plt+0x65f8>  // b.none
  409578:	cmn	x28, #0x1
  40957c:	b.eq	4095a0 <ferror@plt+0x65d0>  // b.none
  409580:	cbz	x20, 409598 <ferror@plt+0x65c8>
  409584:	madd	x0, x28, x19, x20
  409588:	mov	x1, x24
  40958c:	mov	x2, x19
  409590:	bl	402b70 <bcmp@plt>
  409594:	cbz	w0, 4095a4 <ferror@plt+0x65d4>
  409598:	mov	w26, #0x1                   	// #1
  40959c:	b	4095a4 <ferror@plt+0x65d4>
  4095a0:	mov	x28, x23
  4095a4:	ldr	x25, [x27, x23, lsl #3]
  4095a8:	add	x23, x23, #0x1
  4095ac:	add	x24, x24, x19
  4095b0:	cbnz	x25, 409554 <ferror@plt+0x6584>
  4095b4:	tst	w26, #0x1
  4095b8:	mov	x8, #0xfffffffffffffffe    	// #-2
  4095bc:	csel	x0, x8, x28, ne  // ne = any
  4095c0:	b	4095cc <ferror@plt+0x65fc>
  4095c4:	mov	x23, #0xffffffffffffffff    	// #-1
  4095c8:	mov	x0, x23
  4095cc:	ldp	x20, x19, [sp, #80]
  4095d0:	ldp	x22, x21, [sp, #64]
  4095d4:	ldp	x24, x23, [sp, #48]
  4095d8:	ldp	x26, x25, [sp, #32]
  4095dc:	ldp	x28, x27, [sp, #16]
  4095e0:	ldp	x29, x30, [sp], #96
  4095e4:	ret
  4095e8:	stp	x29, x30, [sp, #-48]!
  4095ec:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4095f0:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4095f4:	add	x8, x8, #0x26e
  4095f8:	add	x9, x9, #0x253
  4095fc:	cmn	x2, #0x1
  409600:	stp	x20, x19, [sp, #32]
  409604:	mov	x19, x1
  409608:	mov	x20, x0
  40960c:	csel	x1, x9, x8, eq  // eq = none
  409610:	mov	w2, #0x5                   	// #5
  409614:	mov	x0, xzr
  409618:	str	x21, [sp, #16]
  40961c:	mov	x29, sp
  409620:	bl	402eb0 <dcgettext@plt>
  409624:	mov	x21, x0
  409628:	mov	w1, #0x8                   	// #8
  40962c:	mov	w0, wzr
  409630:	mov	x2, x19
  409634:	bl	40d554 <ferror@plt+0xa584>
  409638:	mov	x19, x0
  40963c:	mov	w0, #0x1                   	// #1
  409640:	mov	x1, x20
  409644:	bl	40d8e4 <ferror@plt+0xa914>
  409648:	mov	x2, x21
  40964c:	mov	x3, x19
  409650:	ldp	x20, x19, [sp, #32]
  409654:	ldr	x21, [sp, #16]
  409658:	mov	x4, x0
  40965c:	mov	w0, wzr
  409660:	mov	w1, wzr
  409664:	ldp	x29, x30, [sp], #48
  409668:	b	402900 <error@plt>
  40966c:	stp	x29, x30, [sp, #-96]!
  409670:	stp	x20, x19, [sp, #80]
  409674:	mov	x20, x1
  409678:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40967c:	stp	x22, x21, [sp, #64]
  409680:	mov	x19, x2
  409684:	mov	x21, x0
  409688:	add	x1, x1, #0x28b
  40968c:	mov	w2, #0x5                   	// #5
  409690:	mov	x0, xzr
  409694:	stp	x28, x27, [sp, #16]
  409698:	stp	x26, x25, [sp, #32]
  40969c:	stp	x24, x23, [sp, #48]
  4096a0:	mov	x29, sp
  4096a4:	bl	402eb0 <dcgettext@plt>
  4096a8:	adrp	x26, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4096ac:	ldr	x1, [x26, #1344]
  4096b0:	bl	402ec0 <fputs_unlocked@plt>
  4096b4:	ldr	x24, [x21]
  4096b8:	cbz	x24, 409750 <ferror@plt+0x6780>
  4096bc:	add	x28, x21, #0x8
  4096c0:	adrp	x21, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4096c4:	mov	x27, xzr
  4096c8:	mov	x23, xzr
  4096cc:	mov	x22, xzr
  4096d0:	add	x21, x21, #0x2a0
  4096d4:	cbz	x22, 409718 <ferror@plt+0x6748>
  4096d8:	add	x1, x20, x27
  4096dc:	mov	x0, x23
  4096e0:	mov	x2, x19
  4096e4:	bl	402b70 <bcmp@plt>
  4096e8:	mov	x25, x27
  4096ec:	cbnz	w0, 40971c <ferror@plt+0x674c>
  4096f0:	ldr	x25, [x26, #1344]
  4096f4:	mov	x0, x24
  4096f8:	bl	40d8f4 <ferror@plt+0xa924>
  4096fc:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  409700:	mov	x3, x0
  409704:	mov	w1, #0x1                   	// #1
  409708:	mov	x0, x25
  40970c:	add	x2, x2, #0x2a8
  409710:	bl	402cc0 <__fprintf_chk@plt>
  409714:	b	409740 <ferror@plt+0x6770>
  409718:	mov	x25, xzr
  40971c:	ldr	x23, [x26, #1344]
  409720:	mov	x0, x24
  409724:	bl	40d8f4 <ferror@plt+0xa924>
  409728:	mov	x3, x0
  40972c:	mov	w1, #0x1                   	// #1
  409730:	mov	x0, x23
  409734:	mov	x2, x21
  409738:	bl	402cc0 <__fprintf_chk@plt>
  40973c:	add	x23, x20, x25
  409740:	ldr	x24, [x28, x22, lsl #3]
  409744:	add	x22, x22, #0x1
  409748:	add	x27, x27, x19
  40974c:	cbnz	x24, 4096d4 <ferror@plt+0x6704>
  409750:	ldr	x1, [x26, #1344]
  409754:	ldp	x20, x19, [sp, #80]
  409758:	ldp	x22, x21, [sp, #64]
  40975c:	ldp	x24, x23, [sp, #48]
  409760:	ldp	x26, x25, [sp, #32]
  409764:	ldp	x28, x27, [sp, #16]
  409768:	mov	w0, #0xa                   	// #10
  40976c:	ldp	x29, x30, [sp], #96
  409770:	b	402a00 <putc_unlocked@plt>
  409774:	stp	x29, x30, [sp, #-64]!
  409778:	stp	x24, x23, [sp, #16]
  40977c:	stp	x22, x21, [sp, #32]
  409780:	mov	x21, x3
  409784:	mov	x22, x2
  409788:	mov	x23, x1
  40978c:	mov	x24, x0
  409790:	mov	x0, x1
  409794:	mov	x1, x2
  409798:	mov	x2, x3
  40979c:	mov	x3, x4
  4097a0:	stp	x20, x19, [sp, #48]
  4097a4:	mov	x29, sp
  4097a8:	mov	x19, x5
  4097ac:	mov	x20, x4
  4097b0:	bl	409504 <ferror@plt+0x6534>
  4097b4:	mov	x2, x0
  4097b8:	tbz	x0, #63, 4097e0 <ferror@plt+0x6810>
  4097bc:	mov	x0, x24
  4097c0:	mov	x1, x23
  4097c4:	bl	4095e8 <ferror@plt+0x6618>
  4097c8:	mov	x0, x22
  4097cc:	mov	x1, x21
  4097d0:	mov	x2, x20
  4097d4:	bl	40966c <ferror@plt+0x669c>
  4097d8:	blr	x19
  4097dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4097e0:	ldp	x20, x19, [sp, #48]
  4097e4:	ldp	x22, x21, [sp, #32]
  4097e8:	ldp	x24, x23, [sp, #16]
  4097ec:	mov	x0, x2
  4097f0:	ldp	x29, x30, [sp], #64
  4097f4:	ret
  4097f8:	stp	x29, x30, [sp, #-64]!
  4097fc:	stp	x22, x21, [sp, #32]
  409800:	stp	x20, x19, [sp, #48]
  409804:	ldr	x20, [x1]
  409808:	str	x23, [sp, #16]
  40980c:	mov	x29, sp
  409810:	cbz	x20, 409860 <ferror@plt+0x6890>
  409814:	mov	x22, x2
  409818:	mov	x23, x1
  40981c:	mov	x1, x2
  409820:	mov	x2, x3
  409824:	mov	x19, x3
  409828:	mov	x21, x0
  40982c:	bl	402b70 <bcmp@plt>
  409830:	cbz	w0, 409860 <ferror@plt+0x6890>
  409834:	add	x22, x22, x19
  409838:	add	x23, x23, #0x8
  40983c:	ldr	x20, [x23]
  409840:	cbz	x20, 409860 <ferror@plt+0x6890>
  409844:	mov	x0, x21
  409848:	mov	x1, x22
  40984c:	mov	x2, x19
  409850:	bl	402b70 <bcmp@plt>
  409854:	add	x22, x22, x19
  409858:	add	x23, x23, #0x8
  40985c:	cbnz	w0, 40983c <ferror@plt+0x686c>
  409860:	mov	x0, x20
  409864:	ldp	x20, x19, [sp, #48]
  409868:	ldp	x22, x21, [sp, #32]
  40986c:	ldr	x23, [sp, #16]
  409870:	ldp	x29, x30, [sp], #64
  409874:	ret
  409878:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40987c:	str	x0, [x8, #3008]
  409880:	ret
  409884:	and	w8, w0, #0x1
  409888:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40988c:	strb	w8, [x9, #3016]
  409890:	ret
  409894:	stp	x29, x30, [sp, #-48]!
  409898:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40989c:	ldr	x0, [x8, #1368]
  4098a0:	str	x21, [sp, #16]
  4098a4:	stp	x20, x19, [sp, #32]
  4098a8:	mov	x29, sp
  4098ac:	bl	410768 <_obstack_memory_used@@Base+0x228>
  4098b0:	cbz	w0, 4098d0 <ferror@plt+0x6900>
  4098b4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4098b8:	ldrb	w8, [x8, #3016]
  4098bc:	cbz	w8, 4098f0 <ferror@plt+0x6920>
  4098c0:	bl	402f40 <__errno_location@plt>
  4098c4:	ldr	w8, [x0]
  4098c8:	cmp	w8, #0x20
  4098cc:	b.ne	4098f0 <ferror@plt+0x6920>  // b.any
  4098d0:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4098d4:	ldr	x0, [x8, #1344]
  4098d8:	bl	410768 <_obstack_memory_used@@Base+0x228>
  4098dc:	cbnz	w0, 40995c <ferror@plt+0x698c>
  4098e0:	ldp	x20, x19, [sp, #32]
  4098e4:	ldr	x21, [sp, #16]
  4098e8:	ldp	x29, x30, [sp], #48
  4098ec:	ret
  4098f0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4098f4:	add	x1, x1, #0x2ad
  4098f8:	mov	w2, #0x5                   	// #5
  4098fc:	mov	x0, xzr
  409900:	bl	402eb0 <dcgettext@plt>
  409904:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  409908:	ldr	x21, [x8, #3008]
  40990c:	mov	x19, x0
  409910:	bl	402f40 <__errno_location@plt>
  409914:	ldr	w20, [x0]
  409918:	cbnz	x21, 409938 <ferror@plt+0x6968>
  40991c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  409920:	add	x2, x2, #0x2aa
  409924:	mov	w0, wzr
  409928:	mov	w1, w20
  40992c:	mov	x3, x19
  409930:	bl	402900 <error@plt>
  409934:	b	40995c <ferror@plt+0x698c>
  409938:	mov	x0, x21
  40993c:	bl	40d700 <ferror@plt+0xa730>
  409940:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  409944:	mov	x3, x0
  409948:	add	x2, x2, #0x237
  40994c:	mov	w0, wzr
  409950:	mov	w1, w20
  409954:	mov	x4, x19
  409958:	bl	402900 <error@plt>
  40995c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  409960:	ldr	w0, [x8, #1232]
  409964:	bl	402890 <_exit@plt>
  409968:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40996c:	ldr	q0, [x8, #704]
  409970:	str	xzr, [x0, #16]
  409974:	str	wzr, [x0, #24]
  409978:	str	q0, [x0]
  40997c:	ret
  409980:	ldr	w8, [x0]
  409984:	str	w8, [x1]
  409988:	ldr	w8, [x0, #4]
  40998c:	str	w8, [x1, #4]
  409990:	ldr	w8, [x0, #8]
  409994:	str	w8, [x1, #8]
  409998:	ldr	w8, [x0, #12]
  40999c:	mov	x0, x1
  4099a0:	str	w8, [x1, #12]
  4099a4:	ret
  4099a8:	stp	x29, x30, [sp, #-48]!
  4099ac:	stp	x22, x21, [sp, #16]
  4099b0:	stp	x20, x19, [sp, #32]
  4099b4:	ldr	w8, [x0, #24]
  4099b8:	ldr	w11, [x0, #16]
  4099bc:	mov	w9, #0x20                  	// #32
  4099c0:	mov	w10, #0x10                  	// #16
  4099c4:	cmp	w8, #0x38
  4099c8:	mov	x19, x1
  4099cc:	mov	x20, x0
  4099d0:	csel	x10, x10, x9, cc  // cc = lo, ul, last
  4099d4:	adds	w9, w11, w8
  4099d8:	mov	x29, sp
  4099dc:	str	w9, [x0, #16]
  4099e0:	b.cc	4099f0 <ferror@plt+0x6a20>  // b.lo, b.ul, b.last
  4099e4:	ldr	w11, [x20, #20]
  4099e8:	add	w11, w11, #0x1
  4099ec:	str	w11, [x20, #20]
  4099f0:	lsl	x22, x10, #2
  4099f4:	lsl	w11, w9, #3
  4099f8:	add	x21, x20, #0x1c
  4099fc:	sub	x12, x22, #0x8
  409a00:	str	w11, [x21, x12]
  409a04:	ldr	w11, [x20, #20]
  409a08:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  409a0c:	add	x10, x21, x10, lsl #2
  409a10:	add	x0, x21, x8
  409a14:	extr	w9, w11, w9, #29
  409a18:	sub	x2, x12, x8
  409a1c:	add	x1, x1, #0x2d0
  409a20:	stur	w9, [x10, #-4]
  409a24:	bl	402860 <memcpy@plt>
  409a28:	mov	x0, x21
  409a2c:	mov	x1, x22
  409a30:	mov	x2, x20
  409a34:	bl	409a50 <ferror@plt+0x6a80>
  409a38:	mov	x0, x20
  409a3c:	mov	x1, x19
  409a40:	ldp	x20, x19, [sp, #32]
  409a44:	ldp	x22, x21, [sp, #16]
  409a48:	ldp	x29, x30, [sp], #48
  409a4c:	b	409980 <ferror@plt+0x69b0>
  409a50:	stp	x29, x30, [sp, #-96]!
  409a54:	stp	x28, x27, [sp, #16]
  409a58:	stp	x26, x25, [sp, #32]
  409a5c:	stp	x24, x23, [sp, #48]
  409a60:	stp	x22, x21, [sp, #64]
  409a64:	stp	x20, x19, [sp, #80]
  409a68:	ldp	w10, w13, [x2, #16]
  409a6c:	ldp	w8, w9, [x2]
  409a70:	and	x12, x1, #0xfffffffffffffffc
  409a74:	lsr	x14, x1, #32
  409a78:	adds	w10, w10, w1
  409a7c:	str	w10, [x2, #16]
  409a80:	ldp	w11, w10, [x2, #8]
  409a84:	add	x12, x0, x12
  409a88:	cinc	w14, w14, cs  // cs = hs, nlast
  409a8c:	add	w13, w13, w14
  409a90:	cmp	x12, x0
  409a94:	str	w13, [x2, #20]
  409a98:	b.ls	40a450 <ferror@plt+0x7480>  // b.plast
  409a9c:	mov	w22, #0xd391                	// #54161
  409aa0:	movk	w22, #0xeb86, lsl #16
  409aa4:	ldp	w29, w25, [x0]
  409aa8:	bic	w4, w10, w9
  409aac:	and	w5, w11, w9
  409ab0:	orr	w4, w5, w4
  409ab4:	add	w4, w8, w4
  409ab8:	mov	w19, #0xa478                	// #42104
  409abc:	add	w4, w4, w29
  409ac0:	movk	w19, #0xd76a, lsl #16
  409ac4:	add	w4, w4, w19
  409ac8:	ror	w4, w4, #25
  409acc:	add	w4, w4, w9
  409ad0:	bic	w19, w11, w4
  409ad4:	and	w20, w9, w4
  409ad8:	add	w5, w10, w25
  409adc:	orr	w19, w20, w19
  409ae0:	add	w5, w5, w19
  409ae4:	mov	w19, #0xb756                	// #46934
  409ae8:	movk	w19, #0xe8c7, lsl #16
  409aec:	ldp	w23, w28, [x0, #8]
  409af0:	add	w5, w5, w19
  409af4:	ror	w5, w5, #20
  409af8:	add	w5, w5, w4
  409afc:	bic	w19, w9, w5
  409b00:	and	w20, w4, w5
  409b04:	add	w6, w11, w23
  409b08:	orr	w19, w20, w19
  409b0c:	add	w6, w6, w19
  409b10:	mov	w19, #0x70db                	// #28891
  409b14:	ldp	w24, w14, [x0, #16]
  409b18:	movk	w19, #0x2420, lsl #16
  409b1c:	add	w6, w6, w19
  409b20:	ror	w6, w6, #15
  409b24:	add	w6, w6, w5
  409b28:	add	w20, w24, w4
  409b2c:	bic	w4, w4, w6
  409b30:	and	w19, w5, w6
  409b34:	add	w7, w9, w28
  409b38:	orr	w4, w19, w4
  409b3c:	add	w4, w7, w4
  409b40:	mov	w7, #0xceee                	// #52974
  409b44:	movk	w7, #0xc1bd, lsl #16
  409b48:	add	w4, w4, w7
  409b4c:	ror	w4, w4, #10
  409b50:	add	w4, w4, w6
  409b54:	add	w19, w14, w5
  409b58:	bic	w5, w5, w4
  409b5c:	and	w7, w6, w4
  409b60:	orr	w5, w7, w5
  409b64:	add	w5, w20, w5
  409b68:	mov	w20, #0xfaf                 	// #4015
  409b6c:	ldp	w27, w17, [x0, #24]
  409b70:	movk	w20, #0xf57c, lsl #16
  409b74:	add	w5, w5, w20
  409b78:	ror	w5, w5, #25
  409b7c:	add	w5, w5, w4
  409b80:	add	w7, w27, w6
  409b84:	bic	w6, w6, w5
  409b88:	and	w20, w4, w5
  409b8c:	orr	w6, w20, w6
  409b90:	add	w6, w19, w6
  409b94:	mov	w19, #0xc62a                	// #50730
  409b98:	movk	w19, #0x4787, lsl #16
  409b9c:	add	w6, w6, w19
  409ba0:	ror	w6, w6, #20
  409ba4:	add	w6, w6, w5
  409ba8:	add	w20, w17, w4
  409bac:	bic	w4, w4, w6
  409bb0:	and	w19, w5, w6
  409bb4:	orr	w4, w19, w4
  409bb8:	add	w4, w7, w4
  409bbc:	mov	w7, #0x4613                	// #17939
  409bc0:	ldp	w13, w26, [x0, #32]
  409bc4:	movk	w7, #0xa830, lsl #16
  409bc8:	add	w4, w4, w7
  409bcc:	ror	w4, w4, #15
  409bd0:	add	w4, w4, w6
  409bd4:	add	w19, w13, w5
  409bd8:	bic	w5, w5, w4
  409bdc:	and	w7, w6, w4
  409be0:	orr	w5, w7, w5
  409be4:	add	w5, w20, w5
  409be8:	mov	w20, #0x9501                	// #38145
  409bec:	movk	w20, #0xfd46, lsl #16
  409bf0:	add	w5, w5, w20
  409bf4:	ror	w5, w5, #10
  409bf8:	add	w5, w5, w4
  409bfc:	add	w7, w26, w6
  409c00:	bic	w6, w6, w5
  409c04:	and	w20, w4, w5
  409c08:	orr	w6, w20, w6
  409c0c:	add	w6, w19, w6
  409c10:	mov	w19, #0x98d8                	// #39128
  409c14:	ldp	w16, w30, [x0, #40]
  409c18:	movk	w19, #0x6980, lsl #16
  409c1c:	add	w6, w6, w19
  409c20:	ror	w6, w6, #25
  409c24:	add	w6, w6, w5
  409c28:	add	w20, w16, w4
  409c2c:	bic	w4, w4, w6
  409c30:	and	w19, w5, w6
  409c34:	orr	w4, w19, w4
  409c38:	add	w4, w7, w4
  409c3c:	mov	w7, #0xf7af                	// #63407
  409c40:	movk	w7, #0x8b44, lsl #16
  409c44:	add	w4, w4, w7
  409c48:	ror	w4, w4, #20
  409c4c:	add	w4, w4, w6
  409c50:	add	w19, w30, w5
  409c54:	bic	w5, w5, w4
  409c58:	and	w7, w6, w4
  409c5c:	orr	w5, w7, w5
  409c60:	ldp	w1, w15, [x0, #48]
  409c64:	add	w5, w20, w5
  409c68:	mov	w20, #0xffff5bb1            	// #-42063
  409c6c:	add	w5, w5, w20
  409c70:	ror	w5, w5, #15
  409c74:	add	w5, w5, w4
  409c78:	add	w7, w1, w6
  409c7c:	bic	w6, w6, w5
  409c80:	and	w20, w4, w5
  409c84:	orr	w6, w20, w6
  409c88:	add	w6, w19, w6
  409c8c:	mov	w19, #0xd7be                	// #55230
  409c90:	movk	w19, #0x895c, lsl #16
  409c94:	add	w6, w6, w19
  409c98:	ror	w6, w6, #10
  409c9c:	add	w6, w6, w5
  409ca0:	add	w20, w15, w4
  409ca4:	bic	w4, w4, w6
  409ca8:	and	w19, w5, w6
  409cac:	orr	w4, w19, w4
  409cb0:	add	w4, w7, w4
  409cb4:	mov	w7, #0x1122                	// #4386
  409cb8:	ldp	w3, w18, [x0, #56]
  409cbc:	movk	w7, #0x6b90, lsl #16
  409cc0:	add	w4, w4, w7
  409cc4:	ror	w4, w4, #25
  409cc8:	add	w4, w4, w6
  409ccc:	add	w19, w3, w5
  409cd0:	bic	w5, w5, w4
  409cd4:	and	w7, w6, w4
  409cd8:	orr	w5, w7, w5
  409cdc:	add	w5, w20, w5
  409ce0:	mov	w20, #0x7193                	// #29075
  409ce4:	movk	w20, #0xfd98, lsl #16
  409ce8:	add	w5, w5, w20
  409cec:	ror	w5, w5, #20
  409cf0:	add	w5, w5, w4
  409cf4:	add	w7, w18, w6
  409cf8:	bic	w6, w6, w5
  409cfc:	and	w20, w4, w5
  409d00:	orr	w6, w20, w6
  409d04:	add	w6, w19, w6
  409d08:	mov	w19, #0x438e                	// #17294
  409d0c:	movk	w19, #0xa679, lsl #16
  409d10:	add	w6, w6, w19
  409d14:	ror	w6, w6, #15
  409d18:	add	w6, w6, w5
  409d1c:	add	w20, w25, w4
  409d20:	bic	w4, w4, w6
  409d24:	and	w19, w5, w6
  409d28:	orr	w4, w19, w4
  409d2c:	mov	w21, #0x821                 	// #2081
  409d30:	add	w4, w7, w4
  409d34:	movk	w21, #0x49b4, lsl #16
  409d38:	add	w4, w4, w21
  409d3c:	ror	w4, w4, #10
  409d40:	add	w4, w4, w6
  409d44:	add	w19, w27, w5
  409d48:	bic	w7, w6, w5
  409d4c:	and	w5, w4, w5
  409d50:	orr	w5, w5, w7
  409d54:	mov	w21, #0x2562                	// #9570
  409d58:	add	w5, w20, w5
  409d5c:	movk	w21, #0xf61e, lsl #16
  409d60:	add	w5, w5, w21
  409d64:	ror	w5, w5, #27
  409d68:	add	w5, w5, w4
  409d6c:	add	w7, w30, w6
  409d70:	bic	w20, w4, w6
  409d74:	and	w6, w5, w6
  409d78:	orr	w6, w6, w20
  409d7c:	mov	w21, #0xb340                	// #45888
  409d80:	add	w6, w19, w6
  409d84:	movk	w21, #0xc040, lsl #16
  409d88:	add	w6, w6, w21
  409d8c:	ror	w6, w6, #23
  409d90:	add	w6, w6, w5
  409d94:	add	w20, w29, w4
  409d98:	bic	w19, w5, w4
  409d9c:	and	w4, w6, w4
  409da0:	orr	w4, w4, w19
  409da4:	mov	w21, #0x5a51                	// #23121
  409da8:	add	w4, w7, w4
  409dac:	movk	w21, #0x265e, lsl #16
  409db0:	add	w4, w4, w21
  409db4:	ror	w4, w4, #18
  409db8:	add	w4, w4, w6
  409dbc:	add	w19, w14, w5
  409dc0:	bic	w7, w6, w5
  409dc4:	and	w5, w4, w5
  409dc8:	orr	w5, w5, w7
  409dcc:	mov	w21, #0xc7aa                	// #51114
  409dd0:	add	w5, w20, w5
  409dd4:	movk	w21, #0xe9b6, lsl #16
  409dd8:	add	w5, w5, w21
  409ddc:	ror	w5, w5, #12
  409de0:	add	w5, w5, w4
  409de4:	add	w7, w16, w6
  409de8:	bic	w20, w4, w6
  409dec:	and	w6, w5, w6
  409df0:	orr	w6, w6, w20
  409df4:	mov	w21, #0x105d                	// #4189
  409df8:	add	w6, w19, w6
  409dfc:	movk	w21, #0xd62f, lsl #16
  409e00:	add	w6, w6, w21
  409e04:	ror	w6, w6, #27
  409e08:	add	w6, w6, w5
  409e0c:	add	w20, w18, w4
  409e10:	bic	w19, w5, w4
  409e14:	and	w4, w6, w4
  409e18:	orr	w4, w4, w19
  409e1c:	mov	w21, #0x1453                	// #5203
  409e20:	add	w4, w7, w4
  409e24:	movk	w21, #0x244, lsl #16
  409e28:	add	w4, w4, w21
  409e2c:	ror	w4, w4, #23
  409e30:	add	w4, w4, w6
  409e34:	add	w19, w24, w5
  409e38:	bic	w7, w6, w5
  409e3c:	and	w5, w4, w5
  409e40:	orr	w5, w5, w7
  409e44:	mov	w21, #0xe681                	// #59009
  409e48:	add	w5, w20, w5
  409e4c:	movk	w21, #0xd8a1, lsl #16
  409e50:	add	w5, w5, w21
  409e54:	ror	w5, w5, #18
  409e58:	add	w5, w5, w4
  409e5c:	add	w7, w26, w6
  409e60:	bic	w20, w4, w6
  409e64:	and	w6, w5, w6
  409e68:	orr	w6, w6, w20
  409e6c:	mov	w21, #0xfbc8                	// #64456
  409e70:	add	w6, w19, w6
  409e74:	movk	w21, #0xe7d3, lsl #16
  409e78:	add	w6, w6, w21
  409e7c:	ror	w6, w6, #12
  409e80:	add	w6, w6, w5
  409e84:	add	w20, w3, w4
  409e88:	bic	w19, w5, w4
  409e8c:	and	w4, w6, w4
  409e90:	orr	w4, w4, w19
  409e94:	mov	w21, #0xcde6                	// #52710
  409e98:	add	w4, w7, w4
  409e9c:	movk	w21, #0x21e1, lsl #16
  409ea0:	add	w4, w4, w21
  409ea4:	ror	w4, w4, #27
  409ea8:	add	w4, w4, w6
  409eac:	add	w19, w28, w5
  409eb0:	bic	w7, w6, w5
  409eb4:	and	w5, w4, w5
  409eb8:	orr	w5, w5, w7
  409ebc:	mov	w21, #0x7d6                 	// #2006
  409ec0:	add	w5, w20, w5
  409ec4:	movk	w21, #0xc337, lsl #16
  409ec8:	add	w5, w5, w21
  409ecc:	ror	w5, w5, #23
  409ed0:	add	w5, w5, w4
  409ed4:	add	w7, w13, w6
  409ed8:	bic	w20, w4, w6
  409edc:	and	w6, w5, w6
  409ee0:	orr	w6, w6, w20
  409ee4:	mov	w21, #0xd87                 	// #3463
  409ee8:	add	w6, w19, w6
  409eec:	movk	w21, #0xf4d5, lsl #16
  409ef0:	add	w6, w6, w21
  409ef4:	ror	w6, w6, #18
  409ef8:	add	w6, w6, w5
  409efc:	add	w20, w15, w4
  409f00:	bic	w19, w5, w4
  409f04:	and	w4, w6, w4
  409f08:	orr	w4, w4, w19
  409f0c:	mov	w21, #0x14ed                	// #5357
  409f10:	add	w4, w7, w4
  409f14:	movk	w21, #0x455a, lsl #16
  409f18:	add	w4, w4, w21
  409f1c:	ror	w4, w4, #12
  409f20:	add	w4, w4, w6
  409f24:	add	w19, w23, w5
  409f28:	bic	w7, w6, w5
  409f2c:	and	w5, w4, w5
  409f30:	orr	w5, w5, w7
  409f34:	mov	w21, #0xe905                	// #59653
  409f38:	add	w5, w20, w5
  409f3c:	movk	w21, #0xa9e3, lsl #16
  409f40:	add	w5, w5, w21
  409f44:	ror	w5, w5, #27
  409f48:	add	w5, w5, w4
  409f4c:	add	w7, w17, w6
  409f50:	bic	w20, w4, w6
  409f54:	and	w6, w5, w6
  409f58:	orr	w6, w6, w20
  409f5c:	mov	w21, #0xa3f8                	// #41976
  409f60:	add	w6, w19, w6
  409f64:	movk	w21, #0xfcef, lsl #16
  409f68:	add	w6, w6, w21
  409f6c:	ror	w6, w6, #23
  409f70:	add	w6, w6, w5
  409f74:	add	w20, w1, w4
  409f78:	bic	w19, w5, w4
  409f7c:	and	w4, w6, w4
  409f80:	orr	w4, w4, w19
  409f84:	add	w4, w7, w4
  409f88:	mov	w7, #0x2d9                 	// #729
  409f8c:	movk	w7, #0x676f, lsl #16
  409f90:	add	w4, w4, w7
  409f94:	ror	w4, w4, #18
  409f98:	add	w4, w4, w6
  409f9c:	eor	w7, w4, w6
  409fa0:	and	w19, w7, w5
  409fa4:	eor	w19, w19, w6
  409fa8:	add	w19, w20, w19
  409fac:	mov	w20, #0x4c8a                	// #19594
  409fb0:	movk	w20, #0x8d2a, lsl #16
  409fb4:	add	w19, w19, w20
  409fb8:	ror	w19, w19, #12
  409fbc:	add	w19, w19, w4
  409fc0:	add	w5, w14, w5
  409fc4:	eor	w7, w7, w19
  409fc8:	mov	w20, #0x3942                	// #14658
  409fcc:	add	w5, w5, w7
  409fd0:	movk	w20, #0xfffa, lsl #16
  409fd4:	add	w5, w5, w20
  409fd8:	ror	w5, w5, #28
  409fdc:	add	w7, w30, w4
  409fe0:	eor	w4, w19, w4
  409fe4:	add	w5, w5, w19
  409fe8:	add	w6, w13, w6
  409fec:	eor	w4, w4, w5
  409ff0:	mov	w20, #0xf681                	// #63105
  409ff4:	add	w4, w6, w4
  409ff8:	movk	w20, #0x8771, lsl #16
  409ffc:	add	w4, w4, w20
  40a000:	ror	w4, w4, #21
  40a004:	add	w6, w3, w19
  40a008:	eor	w19, w5, w19
  40a00c:	add	w4, w4, w5
  40a010:	eor	w19, w19, w4
  40a014:	mov	w20, #0x6122                	// #24866
  40a018:	add	w7, w7, w19
  40a01c:	movk	w20, #0x6d9d, lsl #16
  40a020:	add	w7, w7, w20
  40a024:	ror	w7, w7, #16
  40a028:	add	w19, w25, w5
  40a02c:	eor	w5, w4, w5
  40a030:	add	w7, w7, w4
  40a034:	eor	w5, w5, w7
  40a038:	mov	w20, #0x380c                	// #14348
  40a03c:	add	w5, w6, w5
  40a040:	movk	w20, #0xfde5, lsl #16
  40a044:	add	w5, w5, w20
  40a048:	ror	w5, w5, #9
  40a04c:	add	w6, w24, w4
  40a050:	eor	w4, w7, w4
  40a054:	add	w5, w5, w7
  40a058:	eor	w4, w4, w5
  40a05c:	mov	w20, #0xea44                	// #59972
  40a060:	add	w4, w19, w4
  40a064:	movk	w20, #0xa4be, lsl #16
  40a068:	add	w4, w4, w20
  40a06c:	ror	w4, w4, #28
  40a070:	add	w19, w17, w7
  40a074:	eor	w7, w5, w7
  40a078:	add	w4, w4, w5
  40a07c:	eor	w7, w7, w4
  40a080:	mov	w20, #0xcfa9                	// #53161
  40a084:	add	w6, w6, w7
  40a088:	movk	w20, #0x4bde, lsl #16
  40a08c:	add	w6, w6, w20
  40a090:	ror	w6, w6, #21
  40a094:	add	w7, w16, w5
  40a098:	eor	w5, w4, w5
  40a09c:	add	w6, w6, w4
  40a0a0:	eor	w5, w5, w6
  40a0a4:	mov	w20, #0x4b60                	// #19296
  40a0a8:	add	w5, w19, w5
  40a0ac:	movk	w20, #0xf6bb, lsl #16
  40a0b0:	add	w5, w5, w20
  40a0b4:	ror	w5, w5, #16
  40a0b8:	add	w19, w15, w4
  40a0bc:	eor	w4, w6, w4
  40a0c0:	add	w5, w5, w6
  40a0c4:	eor	w4, w4, w5
  40a0c8:	mov	w20, #0xbc70                	// #48240
  40a0cc:	add	w4, w7, w4
  40a0d0:	movk	w20, #0xbebf, lsl #16
  40a0d4:	add	w4, w4, w20
  40a0d8:	ror	w4, w4, #9
  40a0dc:	add	w7, w29, w6
  40a0e0:	eor	w6, w5, w6
  40a0e4:	add	w4, w4, w5
  40a0e8:	eor	w6, w6, w4
  40a0ec:	mov	w20, #0x7ec6                	// #32454
  40a0f0:	add	w6, w19, w6
  40a0f4:	movk	w20, #0x289b, lsl #16
  40a0f8:	add	w6, w6, w20
  40a0fc:	ror	w6, w6, #28
  40a100:	add	w19, w28, w5
  40a104:	eor	w5, w4, w5
  40a108:	add	w6, w6, w4
  40a10c:	eor	w5, w5, w6
  40a110:	mov	w20, #0x27fa                	// #10234
  40a114:	add	w5, w7, w5
  40a118:	movk	w20, #0xeaa1, lsl #16
  40a11c:	add	w5, w5, w20
  40a120:	ror	w5, w5, #21
  40a124:	add	w7, w27, w4
  40a128:	eor	w4, w6, w4
  40a12c:	add	w5, w5, w6
  40a130:	eor	w4, w4, w5
  40a134:	mov	w20, #0x3085                	// #12421
  40a138:	add	w4, w19, w4
  40a13c:	movk	w20, #0xd4ef, lsl #16
  40a140:	add	w4, w4, w20
  40a144:	ror	w4, w4, #16
  40a148:	add	w19, w26, w6
  40a14c:	eor	w6, w5, w6
  40a150:	add	w4, w4, w5
  40a154:	eor	w6, w6, w4
  40a158:	mov	w20, #0x1d05                	// #7429
  40a15c:	add	w6, w7, w6
  40a160:	movk	w20, #0x488, lsl #16
  40a164:	add	w6, w6, w20
  40a168:	ror	w6, w6, #9
  40a16c:	add	w7, w1, w5
  40a170:	eor	w5, w4, w5
  40a174:	add	w6, w6, w4
  40a178:	eor	w5, w5, w6
  40a17c:	mov	w20, #0xd039                	// #53305
  40a180:	add	w5, w19, w5
  40a184:	movk	w20, #0xd9d4, lsl #16
  40a188:	add	w5, w5, w20
  40a18c:	ror	w5, w5, #28
  40a190:	add	w19, w18, w4
  40a194:	eor	w4, w6, w4
  40a198:	add	w5, w5, w6
  40a19c:	eor	w4, w4, w5
  40a1a0:	mov	w20, #0x99e5                	// #39397
  40a1a4:	add	w4, w7, w4
  40a1a8:	movk	w20, #0xe6db, lsl #16
  40a1ac:	add	w4, w4, w20
  40a1b0:	ror	w4, w4, #21
  40a1b4:	eor	w7, w5, w6
  40a1b8:	add	w4, w4, w5
  40a1bc:	eor	w7, w7, w4
  40a1c0:	mov	w20, #0x7cf8                	// #31992
  40a1c4:	add	w7, w19, w7
  40a1c8:	movk	w20, #0x1fa2, lsl #16
  40a1cc:	add	w7, w7, w20
  40a1d0:	ror	w7, w7, #16
  40a1d4:	add	w19, w29, w5
  40a1d8:	eor	w5, w4, w5
  40a1dc:	add	w7, w7, w4
  40a1e0:	add	w6, w23, w6
  40a1e4:	eor	w5, w5, w7
  40a1e8:	add	w5, w6, w5
  40a1ec:	mov	w6, #0x5665                	// #22117
  40a1f0:	movk	w6, #0xc4ac, lsl #16
  40a1f4:	add	w5, w5, w6
  40a1f8:	ror	w5, w5, #9
  40a1fc:	add	w5, w5, w7
  40a200:	add	w17, w17, w4
  40a204:	orn	w4, w5, w4
  40a208:	eor	w4, w4, w7
  40a20c:	mov	w6, #0x2244                	// #8772
  40a210:	add	w4, w19, w4
  40a214:	movk	w6, #0xf429, lsl #16
  40a218:	add	w4, w4, w6
  40a21c:	ror	w4, w4, #26
  40a220:	add	w4, w4, w5
  40a224:	orn	w6, w4, w7
  40a228:	eor	w6, w6, w5
  40a22c:	add	w17, w17, w6
  40a230:	mov	w6, #0xff97                	// #65431
  40a234:	movk	w6, #0x432a, lsl #16
  40a238:	add	w17, w17, w6
  40a23c:	ror	w17, w17, #22
  40a240:	add	w17, w17, w4
  40a244:	add	w14, w14, w5
  40a248:	orn	w5, w17, w5
  40a24c:	add	w3, w3, w7
  40a250:	eor	w5, w5, w4
  40a254:	add	w3, w3, w5
  40a258:	mov	w5, #0x23a7                	// #9127
  40a25c:	movk	w5, #0xab94, lsl #16
  40a260:	add	w3, w3, w5
  40a264:	ror	w3, w3, #17
  40a268:	add	w3, w3, w17
  40a26c:	add	w1, w1, w4
  40a270:	orn	w4, w3, w4
  40a274:	eor	w4, w4, w17
  40a278:	mov	w5, #0xa039                	// #41017
  40a27c:	add	w14, w14, w4
  40a280:	movk	w5, #0xfc93, lsl #16
  40a284:	add	w14, w14, w5
  40a288:	ror	w14, w14, #11
  40a28c:	add	w14, w14, w3
  40a290:	add	w4, w28, w17
  40a294:	orn	w17, w14, w17
  40a298:	eor	w17, w17, w3
  40a29c:	add	w17, w1, w17
  40a2a0:	mov	w1, #0x59c3                	// #22979
  40a2a4:	movk	w1, #0x655b, lsl #16
  40a2a8:	add	w17, w17, w1
  40a2ac:	ror	w17, w17, #26
  40a2b0:	add	w17, w17, w14
  40a2b4:	orn	w1, w17, w3
  40a2b8:	eor	w1, w1, w14
  40a2bc:	add	w1, w4, w1
  40a2c0:	mov	w4, #0xcc92                	// #52370
  40a2c4:	movk	w4, #0x8f0c, lsl #16
  40a2c8:	add	w1, w1, w4
  40a2cc:	ror	w1, w1, #22
  40a2d0:	add	w1, w1, w17
  40a2d4:	add	w16, w16, w3
  40a2d8:	add	w3, w25, w14
  40a2dc:	orn	w14, w1, w14
  40a2e0:	eor	w14, w14, w17
  40a2e4:	add	w14, w16, w14
  40a2e8:	mov	w16, #0xf47d                	// #62589
  40a2ec:	movk	w16, #0xffef, lsl #16
  40a2f0:	add	w14, w14, w16
  40a2f4:	ror	w14, w14, #17
  40a2f8:	add	w14, w14, w1
  40a2fc:	orn	w16, w14, w17
  40a300:	add	w13, w13, w17
  40a304:	eor	w16, w16, w1
  40a308:	add	w17, w18, w1
  40a30c:	mov	w18, #0x5dd1                	// #24017
  40a310:	add	w16, w3, w16
  40a314:	movk	w18, #0x8584, lsl #16
  40a318:	add	w16, w16, w18
  40a31c:	ror	w16, w16, #11
  40a320:	add	w16, w16, w14
  40a324:	orn	w18, w16, w1
  40a328:	eor	w18, w18, w14
  40a32c:	mov	w1, #0x7e4f                	// #32335
  40a330:	add	w13, w13, w18
  40a334:	movk	w1, #0x6fa8, lsl #16
  40a338:	add	w13, w13, w1
  40a33c:	ror	w13, w13, #26
  40a340:	add	w13, w13, w16
  40a344:	add	w18, w27, w14
  40a348:	orn	w14, w13, w14
  40a34c:	eor	w14, w14, w16
  40a350:	add	w14, w17, w14
  40a354:	mov	w17, #0xe6e0                	// #59104
  40a358:	movk	w17, #0xfe2c, lsl #16
  40a35c:	add	w14, w14, w17
  40a360:	ror	w14, w14, #22
  40a364:	add	w14, w14, w13
  40a368:	add	w15, w15, w16
  40a36c:	orn	w16, w14, w16
  40a370:	eor	w16, w16, w13
  40a374:	add	w16, w18, w16
  40a378:	mov	w18, #0x4314                	// #17172
  40a37c:	movk	w18, #0xa301, lsl #16
  40a380:	add	w16, w16, w18
  40a384:	ror	w16, w16, #17
  40a388:	add	w16, w16, w14
  40a38c:	add	w17, w24, w13
  40a390:	orn	w13, w16, w13
  40a394:	eor	w13, w13, w14
  40a398:	mov	w18, #0x11a1                	// #4513
  40a39c:	add	w13, w15, w13
  40a3a0:	movk	w18, #0x4e08, lsl #16
  40a3a4:	add	w13, w13, w18
  40a3a8:	ror	w13, w13, #11
  40a3ac:	add	w13, w13, w16
  40a3b0:	add	w15, w30, w14
  40a3b4:	orn	w14, w13, w14
  40a3b8:	eor	w14, w14, w16
  40a3bc:	mov	w18, #0x7e82                	// #32386
  40a3c0:	add	w14, w17, w14
  40a3c4:	movk	w18, #0xf753, lsl #16
  40a3c8:	add	w14, w14, w18
  40a3cc:	ror	w14, w14, #26
  40a3d0:	add	w14, w14, w13
  40a3d4:	add	w17, w23, w16
  40a3d8:	orn	w16, w14, w16
  40a3dc:	eor	w16, w16, w13
  40a3e0:	mov	w18, #0xf235                	// #62005
  40a3e4:	add	w15, w15, w16
  40a3e8:	movk	w18, #0xbd3a, lsl #16
  40a3ec:	add	w15, w15, w18
  40a3f0:	ror	w15, w15, #22
  40a3f4:	add	w15, w15, w14
  40a3f8:	add	w16, w26, w13
  40a3fc:	orn	w13, w15, w13
  40a400:	eor	w13, w13, w14
  40a404:	add	w13, w17, w13
  40a408:	mov	w17, #0xd2bb                	// #53947
  40a40c:	movk	w17, #0x2ad7, lsl #16
  40a410:	add	w13, w13, w17
  40a414:	ror	w13, w13, #17
  40a418:	add	w13, w13, w15
  40a41c:	add	w8, w14, w8
  40a420:	orn	w14, w13, w14
  40a424:	add	w9, w13, w9
  40a428:	add	w11, w13, w11
  40a42c:	eor	w13, w14, w15
  40a430:	add	w13, w16, w13
  40a434:	add	w13, w13, w22
  40a438:	ror	w13, w13, #11
  40a43c:	add	x0, x0, #0x40
  40a440:	add	w9, w9, w13
  40a444:	cmp	x0, x12
  40a448:	add	w10, w15, w10
  40a44c:	b.cc	409aa4 <ferror@plt+0x6ad4>  // b.lo, b.ul, b.last
  40a450:	stp	w8, w9, [x2]
  40a454:	stp	w11, w10, [x2, #8]
  40a458:	ldp	x20, x19, [sp, #80]
  40a45c:	ldp	x22, x21, [sp, #64]
  40a460:	ldp	x24, x23, [sp, #48]
  40a464:	ldp	x26, x25, [sp, #32]
  40a468:	ldp	x28, x27, [sp, #16]
  40a46c:	ldp	x29, x30, [sp], #96
  40a470:	ret
  40a474:	sub	sp, sp, #0xe0
  40a478:	stp	x22, x21, [sp, #192]
  40a47c:	mov	x21, x0
  40a480:	mov	w0, #0x8048                	// #32840
  40a484:	stp	x29, x30, [sp, #160]
  40a488:	str	x23, [sp, #176]
  40a48c:	stp	x20, x19, [sp, #208]
  40a490:	add	x29, sp, #0xa0
  40a494:	mov	x19, x1
  40a498:	bl	402a60 <malloc@plt>
  40a49c:	cbz	x0, 40a51c <ferror@plt+0x754c>
  40a4a0:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40a4a4:	ldr	q0, [x8, #704]
  40a4a8:	mov	x20, x0
  40a4ac:	mov	x22, xzr
  40a4b0:	mov	w23, #0x8000                	// #32768
  40a4b4:	str	xzr, [sp, #16]
  40a4b8:	str	wzr, [sp, #24]
  40a4bc:	str	q0, [sp]
  40a4c0:	mov	x0, x21
  40a4c4:	bl	402da0 <feof_unlocked@plt>
  40a4c8:	cbnz	w0, 40a524 <ferror@plt+0x7554>
  40a4cc:	add	x0, x20, x22
  40a4d0:	sub	x2, x23, x22
  40a4d4:	mov	w1, #0x1                   	// #1
  40a4d8:	mov	x3, x21
  40a4dc:	bl	402c80 <fread_unlocked@plt>
  40a4e0:	add	x22, x0, x22
  40a4e4:	cmp	x22, #0x8, lsl #12
  40a4e8:	b.ne	40a504 <ferror@plt+0x7534>  // b.any
  40a4ec:	mov	x2, sp
  40a4f0:	mov	w1, #0x8000                	// #32768
  40a4f4:	mov	x0, x20
  40a4f8:	bl	409a50 <ferror@plt+0x6a80>
  40a4fc:	mov	x22, xzr
  40a500:	b	40a4c0 <ferror@plt+0x74f0>
  40a504:	cbnz	x0, 40a4c0 <ferror@plt+0x74f0>
  40a508:	mov	x0, x21
  40a50c:	bl	402920 <ferror_unlocked@plt>
  40a510:	cbz	w0, 40a524 <ferror@plt+0x7554>
  40a514:	mov	x0, x20
  40a518:	bl	402d30 <free@plt>
  40a51c:	mov	w0, #0x1                   	// #1
  40a520:	b	40a550 <ferror@plt+0x7580>
  40a524:	cbz	x22, 40a538 <ferror@plt+0x7568>
  40a528:	mov	x2, sp
  40a52c:	mov	x0, x20
  40a530:	mov	x1, x22
  40a534:	bl	40a568 <ferror@plt+0x7598>
  40a538:	mov	x0, sp
  40a53c:	mov	x1, x19
  40a540:	bl	4099a8 <ferror@plt+0x69d8>
  40a544:	mov	x0, x20
  40a548:	bl	402d30 <free@plt>
  40a54c:	mov	w0, wzr
  40a550:	ldp	x20, x19, [sp, #208]
  40a554:	ldp	x22, x21, [sp, #192]
  40a558:	ldr	x23, [sp, #176]
  40a55c:	ldp	x29, x30, [sp, #160]
  40a560:	add	sp, sp, #0xe0
  40a564:	ret
  40a568:	stp	x29, x30, [sp, #-64]!
  40a56c:	stp	x24, x23, [sp, #16]
  40a570:	stp	x22, x21, [sp, #32]
  40a574:	stp	x20, x19, [sp, #48]
  40a578:	ldr	w24, [x2, #24]
  40a57c:	mov	x19, x2
  40a580:	mov	x20, x1
  40a584:	mov	x21, x0
  40a588:	mov	x29, sp
  40a58c:	cbz	w24, 40a600 <ferror@plt+0x7630>
  40a590:	mov	w8, #0x80                  	// #128
  40a594:	sub	x8, x8, x24
  40a598:	cmp	x8, x20
  40a59c:	add	x23, x19, #0x1c
  40a5a0:	csel	x22, x20, x8, hi  // hi = pmore
  40a5a4:	add	x0, x23, x24
  40a5a8:	mov	x1, x21
  40a5ac:	mov	x2, x22
  40a5b0:	bl	402860 <memcpy@plt>
  40a5b4:	ldr	w8, [x19, #24]
  40a5b8:	add	w8, w8, w22
  40a5bc:	cmp	w8, #0x41
  40a5c0:	str	w8, [x19, #24]
  40a5c4:	b.cc	40a5f8 <ferror@plt+0x7628>  // b.lo, b.ul, b.last
  40a5c8:	and	w1, w8, #0xffffffc0
  40a5cc:	mov	x0, x23
  40a5d0:	mov	x2, x19
  40a5d4:	bl	409a50 <ferror@plt+0x6a80>
  40a5d8:	ldr	w8, [x19, #24]
  40a5dc:	add	x9, x22, x24
  40a5e0:	and	x9, x9, #0xffffffffffffffc0
  40a5e4:	add	x1, x23, x9
  40a5e8:	and	x2, x8, #0x3f
  40a5ec:	mov	x0, x23
  40a5f0:	str	w2, [x19, #24]
  40a5f4:	bl	402860 <memcpy@plt>
  40a5f8:	add	x21, x21, x22
  40a5fc:	sub	x20, x20, x22
  40a600:	cmp	x20, #0x40
  40a604:	b.cc	40a678 <ferror@plt+0x76a8>  // b.lo, b.ul, b.last
  40a608:	tst	x21, #0x3
  40a60c:	b.eq	40a65c <ferror@plt+0x768c>  // b.none
  40a610:	subs	x8, x20, #0x41
  40a614:	b.cc	40a680 <ferror@plt+0x76b0>  // b.lo, b.ul, b.last
  40a618:	add	x22, x19, #0x1c
  40a61c:	and	x23, x8, #0xffffffffffffffc0
  40a620:	mov	x24, x20
  40a624:	ldp	q1, q0, [x21, #32]
  40a628:	ldp	q3, q2, [x21], #64
  40a62c:	mov	w1, #0x40                  	// #64
  40a630:	mov	x0, x22
  40a634:	mov	x2, x19
  40a638:	stp	q1, q0, [x22, #32]
  40a63c:	stp	q3, q2, [x22]
  40a640:	bl	409a50 <ferror@plt+0x6a80>
  40a644:	sub	x24, x24, #0x40
  40a648:	cmp	x24, #0x40
  40a64c:	b.hi	40a624 <ferror@plt+0x7654>  // b.pmore
  40a650:	sub	x8, x20, x23
  40a654:	sub	x20, x8, #0x40
  40a658:	b	40a684 <ferror@plt+0x76b4>
  40a65c:	and	x22, x20, #0xffffffffffffffc0
  40a660:	mov	x0, x21
  40a664:	mov	x1, x22
  40a668:	mov	x2, x19
  40a66c:	bl	409a50 <ferror@plt+0x6a80>
  40a670:	add	x21, x21, x22
  40a674:	and	x20, x20, #0x3f
  40a678:	cbnz	x20, 40a684 <ferror@plt+0x76b4>
  40a67c:	b	40a6d0 <ferror@plt+0x7700>
  40a680:	mov	w20, #0x40                  	// #64
  40a684:	ldr	w23, [x19, #24]
  40a688:	add	x22, x19, #0x1c
  40a68c:	mov	x1, x21
  40a690:	mov	x2, x20
  40a694:	add	x0, x22, x23
  40a698:	bl	402860 <memcpy@plt>
  40a69c:	add	x8, x20, x23
  40a6a0:	subs	x20, x8, #0x40
  40a6a4:	b.cc	40a6cc <ferror@plt+0x76fc>  // b.lo, b.ul, b.last
  40a6a8:	mov	w1, #0x40                  	// #64
  40a6ac:	mov	x0, x22
  40a6b0:	mov	x2, x19
  40a6b4:	bl	409a50 <ferror@plt+0x6a80>
  40a6b8:	add	x1, x19, #0x5c
  40a6bc:	mov	x0, x22
  40a6c0:	mov	x2, x20
  40a6c4:	bl	402860 <memcpy@plt>
  40a6c8:	mov	x8, x20
  40a6cc:	str	w8, [x19, #24]
  40a6d0:	ldp	x20, x19, [sp, #48]
  40a6d4:	ldp	x22, x21, [sp, #32]
  40a6d8:	ldp	x24, x23, [sp, #16]
  40a6dc:	ldp	x29, x30, [sp], #64
  40a6e0:	ret
  40a6e4:	sub	sp, sp, #0xc0
  40a6e8:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40a6ec:	ldr	q0, [x8, #704]
  40a6f0:	str	x19, [sp, #176]
  40a6f4:	mov	x19, x2
  40a6f8:	mov	x2, sp
  40a6fc:	stp	x29, x30, [sp, #160]
  40a700:	add	x29, sp, #0xa0
  40a704:	str	xzr, [sp, #16]
  40a708:	str	q0, [sp]
  40a70c:	str	wzr, [sp, #24]
  40a710:	bl	40a568 <ferror@plt+0x7598>
  40a714:	mov	x0, sp
  40a718:	mov	x1, x19
  40a71c:	bl	4099a8 <ferror@plt+0x69d8>
  40a720:	ldr	x19, [sp, #176]
  40a724:	ldp	x29, x30, [sp, #160]
  40a728:	add	sp, sp, #0xc0
  40a72c:	ret
  40a730:	b	402c50 <posix_fadvise@plt>
  40a734:	cbz	x0, 40a764 <ferror@plt+0x7794>
  40a738:	stp	x29, x30, [sp, #-32]!
  40a73c:	str	x19, [sp, #16]
  40a740:	mov	x29, sp
  40a744:	mov	w19, w1
  40a748:	bl	4029f0 <fileno@plt>
  40a74c:	mov	w3, w19
  40a750:	ldr	x19, [sp, #16]
  40a754:	mov	x1, xzr
  40a758:	mov	x2, xzr
  40a75c:	ldp	x29, x30, [sp], #32
  40a760:	b	402c50 <posix_fadvise@plt>
  40a764:	ret
  40a768:	sub	sp, sp, #0x50
  40a76c:	stp	x29, x30, [sp, #16]
  40a770:	stp	x24, x23, [sp, #32]
  40a774:	stp	x22, x21, [sp, #48]
  40a778:	stp	x20, x19, [sp, #64]
  40a77c:	add	x29, sp, #0x10
  40a780:	mov	x19, x1
  40a784:	mov	x21, x0
  40a788:	bl	402ce0 <strcmp@plt>
  40a78c:	cbz	w0, 40a834 <ferror@plt+0x7864>
  40a790:	ldrb	w23, [x21]
  40a794:	cbz	w23, 40a804 <ferror@plt+0x7834>
  40a798:	ldrb	w22, [x19]
  40a79c:	cbz	w22, 40a830 <ferror@plt+0x7860>
  40a7a0:	mov	w20, w0
  40a7a4:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40a7a8:	add	x0, x0, #0x311
  40a7ac:	mov	x1, x21
  40a7b0:	bl	402ce0 <strcmp@plt>
  40a7b4:	cbz	w0, 40a804 <ferror@plt+0x7834>
  40a7b8:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40a7bc:	add	x0, x0, #0x311
  40a7c0:	mov	x1, x19
  40a7c4:	bl	402ce0 <strcmp@plt>
  40a7c8:	cbz	w0, 40a830 <ferror@plt+0x7860>
  40a7cc:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40a7d0:	add	x0, x0, #0x310
  40a7d4:	mov	x1, x21
  40a7d8:	bl	402ce0 <strcmp@plt>
  40a7dc:	cbz	w0, 40a804 <ferror@plt+0x7834>
  40a7e0:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40a7e4:	add	x0, x0, #0x310
  40a7e8:	mov	x1, x19
  40a7ec:	bl	402ce0 <strcmp@plt>
  40a7f0:	cbz	w0, 40a830 <ferror@plt+0x7860>
  40a7f4:	cmp	w23, #0x2e
  40a7f8:	b.ne	40a80c <ferror@plt+0x783c>  // b.any
  40a7fc:	cmp	w22, #0x2e
  40a800:	b.eq	40a80c <ferror@plt+0x783c>  // b.none
  40a804:	mov	w0, #0xffffffff            	// #-1
  40a808:	b	40a834 <ferror@plt+0x7864>
  40a80c:	cmp	w23, #0x2e
  40a810:	b.ne	40a828 <ferror@plt+0x7858>  // b.any
  40a814:	cmp	w22, #0x2e
  40a818:	b.ne	40a84c <ferror@plt+0x787c>  // b.any
  40a81c:	add	x21, x21, #0x1
  40a820:	add	x19, x19, #0x1
  40a824:	b	40a84c <ferror@plt+0x787c>
  40a828:	cmp	w22, #0x2e
  40a82c:	b.ne	40a84c <ferror@plt+0x787c>  // b.any
  40a830:	mov	w0, #0x1                   	// #1
  40a834:	ldp	x20, x19, [sp, #64]
  40a838:	ldp	x22, x21, [sp, #48]
  40a83c:	ldp	x24, x23, [sp, #32]
  40a840:	ldp	x29, x30, [sp, #16]
  40a844:	add	sp, sp, #0x50
  40a848:	ret
  40a84c:	add	x0, sp, #0x8
  40a850:	stp	x19, x21, [sp]
  40a854:	bl	40aa4c <ferror@plt+0x7a7c>
  40a858:	mov	x22, x0
  40a85c:	mov	x0, sp
  40a860:	bl	40aa4c <ferror@plt+0x7a7c>
  40a864:	ldp	x24, x23, [sp]
  40a868:	cmp	x22, #0x0
  40a86c:	orr	x9, x22, x0
  40a870:	csel	x8, x22, x23, ne  // ne = any
  40a874:	cmp	x0, #0x0
  40a878:	sub	x22, x8, x21
  40a87c:	csel	x8, x0, x24, ne  // ne = any
  40a880:	sub	x8, x8, x19
  40a884:	cbz	x9, 40a8b0 <ferror@plt+0x78e0>
  40a888:	cmp	x22, x8
  40a88c:	b.ne	40a8b0 <ferror@plt+0x78e0>  // b.any
  40a890:	mov	x0, x21
  40a894:	mov	x1, x19
  40a898:	mov	x2, x22
  40a89c:	bl	402ad0 <strncmp@plt>
  40a8a0:	mov	x8, x22
  40a8a4:	cbnz	w0, 40a8b0 <ferror@plt+0x78e0>
  40a8a8:	sub	x22, x23, x21
  40a8ac:	sub	x8, x24, x19
  40a8b0:	mov	x9, xzr
  40a8b4:	mov	x11, xzr
  40a8b8:	mov	w10, #0x1                   	// #1
  40a8bc:	cmp	x9, x8
  40a8c0:	b.cc	40a8cc <ferror@plt+0x78fc>  // b.lo, b.ul, b.last
  40a8c4:	cmp	x11, x22
  40a8c8:	b.cs	40aa44 <ferror@plt+0x7a74>  // b.hs, b.nlast
  40a8cc:	cmp	x11, x22
  40a8d0:	b.cs	40a8e4 <ferror@plt+0x7914>  // b.hs, b.nlast
  40a8d4:	ldrb	w12, [x21, x11]
  40a8d8:	sub	w12, w12, #0x30
  40a8dc:	cmp	w12, #0x9
  40a8e0:	b.hi	40a8fc <ferror@plt+0x792c>  // b.pmore
  40a8e4:	cmp	x9, x8
  40a8e8:	b.cs	40a9a0 <ferror@plt+0x79d0>  // b.hs, b.nlast
  40a8ec:	ldrb	w12, [x19, x9]
  40a8f0:	sub	w12, w12, #0x30
  40a8f4:	cmp	w12, #0xa
  40a8f8:	b.cc	40a9a0 <ferror@plt+0x79d0>  // b.lo, b.ul, b.last
  40a8fc:	cmp	x22, x11
  40a900:	b.eq	40a914 <ferror@plt+0x7944>  // b.none
  40a904:	ldrb	w12, [x21, x11]
  40a908:	sub	w13, w12, #0x30
  40a90c:	cmp	w13, #0xa
  40a910:	b.cs	40a91c <ferror@plt+0x794c>  // b.hs, b.nlast
  40a914:	mov	w12, wzr
  40a918:	b	40a934 <ferror@plt+0x7964>
  40a91c:	sub	w13, w12, #0x41
  40a920:	cmp	w13, #0x39
  40a924:	b.hi	40a980 <ferror@plt+0x79b0>  // b.pmore
  40a928:	lsl	x13, x10, x13
  40a92c:	tst	x13, #0x3ffffff03ffffff
  40a930:	b.eq	40a980 <ferror@plt+0x79b0>  // b.none
  40a934:	cmp	x8, x9
  40a938:	b.eq	40a94c <ferror@plt+0x797c>  // b.none
  40a93c:	ldrb	w13, [x19, x9]
  40a940:	sub	w14, w13, #0x30
  40a944:	cmp	w14, #0xa
  40a948:	b.cs	40a954 <ferror@plt+0x7984>  // b.hs, b.nlast
  40a94c:	mov	w13, wzr
  40a950:	b	40a96c <ferror@plt+0x799c>
  40a954:	sub	w14, w13, #0x41
  40a958:	cmp	w14, #0x39
  40a95c:	b.hi	40a990 <ferror@plt+0x79c0>  // b.pmore
  40a960:	lsl	x14, x10, x14
  40a964:	tst	x14, #0x3ffffff03ffffff
  40a968:	b.eq	40a990 <ferror@plt+0x79c0>  // b.none
  40a96c:	subs	w0, w12, w13
  40a970:	b.ne	40aa40 <ferror@plt+0x7a70>  // b.any
  40a974:	add	x11, x11, #0x1
  40a978:	add	x9, x9, #0x1
  40a97c:	b	40a8cc <ferror@plt+0x78fc>
  40a980:	orr	w13, w12, #0x100
  40a984:	cmp	w12, #0x7e
  40a988:	csinv	w12, w13, wzr, ne  // ne = any
  40a98c:	b	40a934 <ferror@plt+0x7964>
  40a990:	orr	w14, w13, #0x100
  40a994:	cmp	w13, #0x7e
  40a998:	csinv	w13, w14, wzr, ne  // ne = any
  40a99c:	b	40a96c <ferror@plt+0x799c>
  40a9a0:	mov	x12, x11
  40a9a4:	ldrb	w13, [x21, x12]
  40a9a8:	add	x12, x12, #0x1
  40a9ac:	subs	w16, w13, #0x30
  40a9b0:	b.eq	40a9a4 <ferror@plt+0x79d4>  // b.none
  40a9b4:	sub	x11, x12, #0x1
  40a9b8:	ldrb	w15, [x19, x9]
  40a9bc:	add	x9, x9, #0x1
  40a9c0:	subs	w14, w15, #0x30
  40a9c4:	b.eq	40a9b8 <ferror@plt+0x79e8>  // b.none
  40a9c8:	cmp	w14, #0xa
  40a9cc:	cset	w14, cc  // cc = lo, ul, last
  40a9d0:	cmp	w16, #0x9
  40a9d4:	b.hi	40aa2c <ferror@plt+0x7a5c>  // b.pmore
  40a9d8:	mov	x11, xzr
  40a9dc:	mov	w0, wzr
  40a9e0:	add	x16, x21, x12
  40a9e4:	add	x17, x19, x9
  40a9e8:	tbz	w14, #0, 40a830 <ferror@plt+0x7860>
  40a9ec:	sub	w14, w13, w15
  40a9f0:	ldrb	w15, [x17, x11]
  40a9f4:	ldrb	w13, [x16, x11]
  40a9f8:	cmp	w0, #0x0
  40a9fc:	csel	w0, w14, w0, eq  // eq = none
  40aa00:	sub	w14, w15, #0x30
  40aa04:	sub	w18, w13, #0x30
  40aa08:	cmp	w14, #0xa
  40aa0c:	cset	w14, cc  // cc = lo, ul, last
  40aa10:	cmp	w18, #0xa
  40aa14:	add	x11, x11, #0x1
  40aa18:	b.cc	40a9e8 <ferror@plt+0x7a18>  // b.lo, b.ul, b.last
  40aa1c:	add	x12, x12, x11
  40aa20:	add	x9, x9, x11
  40aa24:	sub	x11, x12, #0x1
  40aa28:	b	40aa30 <ferror@plt+0x7a60>
  40aa2c:	mov	w0, wzr
  40aa30:	sub	x9, x9, #0x1
  40aa34:	tbnz	w14, #0, 40a804 <ferror@plt+0x7834>
  40aa38:	cbz	w0, 40a8bc <ferror@plt+0x78ec>
  40aa3c:	b	40a834 <ferror@plt+0x7864>
  40aa40:	b.ne	40a834 <ferror@plt+0x7864>  // b.any
  40aa44:	mov	w0, w20
  40aa48:	b	40a834 <ferror@plt+0x7864>
  40aa4c:	stp	x29, x30, [sp, #-48]!
  40aa50:	stp	x20, x19, [sp, #32]
  40aa54:	ldr	x8, [x0]
  40aa58:	str	x21, [sp, #16]
  40aa5c:	mov	x29, sp
  40aa60:	ldrb	w10, [x8]
  40aa64:	cbz	w10, 40aaf4 <ferror@plt+0x7b24>
  40aa68:	mov	x19, x0
  40aa6c:	mov	w9, wzr
  40aa70:	mov	x20, xzr
  40aa74:	mov	w21, #0x1                   	// #1
  40aa78:	tbz	w9, #0, 40aa9c <ferror@plt+0x7acc>
  40aa7c:	and	w10, w10, #0xff
  40aa80:	sub	w9, w10, #0x41
  40aa84:	cmp	w9, #0x39
  40aa88:	b.hi	40aae4 <ferror@plt+0x7b14>  // b.pmore
  40aa8c:	lsl	x9, x21, x9
  40aa90:	tst	x9, #0x3ffffff03ffffff
  40aa94:	b.ne	40aac4 <ferror@plt+0x7af4>  // b.any
  40aa98:	b	40aae4 <ferror@plt+0x7b14>
  40aa9c:	and	w0, w10, #0xff
  40aaa0:	cmp	w0, #0x2e
  40aaa4:	b.ne	40aab8 <ferror@plt+0x7ae8>  // b.any
  40aaa8:	cmp	x20, #0x0
  40aaac:	csel	x20, x8, x20, eq  // eq = none
  40aab0:	mov	w9, #0x1                   	// #1
  40aab4:	b	40aac8 <ferror@plt+0x7af8>
  40aab8:	bl	4105b4 <_obstack_memory_used@@Base+0x74>
  40aabc:	ldr	x8, [x19]
  40aac0:	tbz	w0, #0, 40aae0 <ferror@plt+0x7b10>
  40aac4:	mov	w9, wzr
  40aac8:	add	x11, x8, #0x1
  40aacc:	str	x11, [x19]
  40aad0:	ldrb	w10, [x8, #1]
  40aad4:	mov	x8, x11
  40aad8:	cbnz	w10, 40aa78 <ferror@plt+0x7aa8>
  40aadc:	b	40aaf8 <ferror@plt+0x7b28>
  40aae0:	ldrb	w10, [x8]
  40aae4:	mov	w9, wzr
  40aae8:	cmp	w10, #0x7e
  40aaec:	csel	x20, x20, xzr, eq  // eq = none
  40aaf0:	b	40aac8 <ferror@plt+0x7af8>
  40aaf4:	mov	x20, xzr
  40aaf8:	mov	x0, x20
  40aafc:	ldp	x20, x19, [sp, #32]
  40ab00:	ldr	x21, [sp, #16]
  40ab04:	ldp	x29, x30, [sp], #48
  40ab08:	ret
  40ab0c:	stp	x29, x30, [sp, #-32]!
  40ab10:	mov	x1, xzr
  40ab14:	str	x19, [sp, #16]
  40ab18:	mov	x29, sp
  40ab1c:	bl	402fc0 <setlocale@plt>
  40ab20:	cbz	x0, 40ab4c <ferror@plt+0x7b7c>
  40ab24:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40ab28:	add	x1, x1, #0xbee
  40ab2c:	mov	x19, x0
  40ab30:	bl	402ce0 <strcmp@plt>
  40ab34:	cbz	w0, 40ab54 <ferror@plt+0x7b84>
  40ab38:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ab3c:	add	x1, x1, #0x313
  40ab40:	mov	x0, x19
  40ab44:	bl	402ce0 <strcmp@plt>
  40ab48:	cbz	w0, 40ab54 <ferror@plt+0x7b84>
  40ab4c:	mov	w0, #0x1                   	// #1
  40ab50:	b	40ab58 <ferror@plt+0x7b88>
  40ab54:	mov	w0, wzr
  40ab58:	ldr	x19, [sp, #16]
  40ab5c:	ldp	x29, x30, [sp], #32
  40ab60:	ret
  40ab64:	ldr	x0, [x0, #16]
  40ab68:	ret
  40ab6c:	ldr	x0, [x0, #24]
  40ab70:	ret
  40ab74:	ldr	x0, [x0, #32]
  40ab78:	ret
  40ab7c:	ldp	x8, x9, [x0]
  40ab80:	cmp	x8, x9
  40ab84:	b.cs	40abc0 <ferror@plt+0x7bf0>  // b.hs, b.nlast
  40ab88:	mov	x0, xzr
  40ab8c:	ldr	x10, [x8]
  40ab90:	cbz	x10, 40abb0 <ferror@plt+0x7be0>
  40ab94:	mov	x10, xzr
  40ab98:	mov	x11, x8
  40ab9c:	ldr	x11, [x11, #8]
  40aba0:	add	x10, x10, #0x1
  40aba4:	cbnz	x11, 40ab9c <ferror@plt+0x7bcc>
  40aba8:	cmp	x10, x0
  40abac:	csel	x0, x10, x0, hi  // hi = pmore
  40abb0:	add	x8, x8, #0x10
  40abb4:	cmp	x8, x9
  40abb8:	b.cc	40ab8c <ferror@plt+0x7bbc>  // b.lo, b.ul, b.last
  40abbc:	ret
  40abc0:	mov	x0, xzr
  40abc4:	ret
  40abc8:	ldp	x9, x10, [x0]
  40abcc:	cmp	x9, x10
  40abd0:	b.cs	40ac08 <ferror@plt+0x7c38>  // b.hs, b.nlast
  40abd4:	mov	x8, xzr
  40abd8:	mov	x11, xzr
  40abdc:	ldr	x12, [x9]
  40abe0:	cbz	x12, 40abf8 <ferror@plt+0x7c28>
  40abe4:	mov	x12, x9
  40abe8:	ldr	x12, [x12, #8]
  40abec:	add	x8, x8, #0x1
  40abf0:	cbnz	x12, 40abe8 <ferror@plt+0x7c18>
  40abf4:	add	x11, x11, #0x1
  40abf8:	add	x9, x9, #0x10
  40abfc:	cmp	x9, x10
  40ac00:	b.cc	40abdc <ferror@plt+0x7c0c>  // b.lo, b.ul, b.last
  40ac04:	b	40ac10 <ferror@plt+0x7c40>
  40ac08:	mov	x11, xzr
  40ac0c:	mov	x8, xzr
  40ac10:	ldr	x9, [x0, #24]
  40ac14:	cmp	x11, x9
  40ac18:	b.ne	40ac30 <ferror@plt+0x7c60>  // b.any
  40ac1c:	ldr	x9, [x0, #32]
  40ac20:	cmp	x8, x9
  40ac24:	b.ne	40ac30 <ferror@plt+0x7c60>  // b.any
  40ac28:	mov	w0, #0x1                   	// #1
  40ac2c:	ret
  40ac30:	mov	w0, wzr
  40ac34:	ret
  40ac38:	stp	x29, x30, [sp, #-48]!
  40ac3c:	stp	x22, x21, [sp, #16]
  40ac40:	stp	x20, x19, [sp, #32]
  40ac44:	ldp	x8, x9, [x0]
  40ac48:	ldp	x20, x3, [x0, #24]
  40ac4c:	ldr	x22, [x0, #16]
  40ac50:	mov	x19, x1
  40ac54:	cmp	x8, x9
  40ac58:	mov	x21, xzr
  40ac5c:	mov	x29, sp
  40ac60:	b.cs	40ac94 <ferror@plt+0x7cc4>  // b.hs, b.nlast
  40ac64:	ldr	x10, [x8]
  40ac68:	cbz	x10, 40ac88 <ferror@plt+0x7cb8>
  40ac6c:	mov	x10, xzr
  40ac70:	mov	x11, x8
  40ac74:	ldr	x11, [x11, #8]
  40ac78:	add	x10, x10, #0x1
  40ac7c:	cbnz	x11, 40ac74 <ferror@plt+0x7ca4>
  40ac80:	cmp	x10, x21
  40ac84:	csel	x21, x10, x21, hi  // hi = pmore
  40ac88:	add	x8, x8, #0x10
  40ac8c:	cmp	x8, x9
  40ac90:	b.cc	40ac64 <ferror@plt+0x7c94>  // b.lo, b.ul, b.last
  40ac94:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ac98:	add	x2, x2, #0x328
  40ac9c:	mov	w1, #0x1                   	// #1
  40aca0:	mov	x0, x19
  40aca4:	bl	402cc0 <__fprintf_chk@plt>
  40aca8:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40acac:	add	x2, x2, #0x340
  40acb0:	mov	w1, #0x1                   	// #1
  40acb4:	mov	x0, x19
  40acb8:	mov	x3, x22
  40acbc:	bl	402cc0 <__fprintf_chk@plt>
  40acc0:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40acc4:	ucvtf	d0, x20
  40acc8:	fmov	d1, x8
  40accc:	fmul	d0, d0, d1
  40acd0:	ucvtf	d1, x22
  40acd4:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40acd8:	fdiv	d0, d0, d1
  40acdc:	add	x2, x2, #0x358
  40ace0:	mov	w1, #0x1                   	// #1
  40ace4:	mov	x0, x19
  40ace8:	mov	x3, x20
  40acec:	bl	402cc0 <__fprintf_chk@plt>
  40acf0:	mov	x0, x19
  40acf4:	mov	x3, x21
  40acf8:	ldp	x20, x19, [sp, #32]
  40acfc:	ldp	x22, x21, [sp, #16]
  40ad00:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ad04:	add	x2, x2, #0x379
  40ad08:	mov	w1, #0x1                   	// #1
  40ad0c:	ldp	x29, x30, [sp], #48
  40ad10:	b	402cc0 <__fprintf_chk@plt>
  40ad14:	stp	x29, x30, [sp, #-48]!
  40ad18:	stp	x20, x19, [sp, #32]
  40ad1c:	ldr	x8, [x0, #16]
  40ad20:	ldr	x9, [x0, #48]
  40ad24:	mov	x19, x0
  40ad28:	mov	x20, x1
  40ad2c:	mov	x0, x1
  40ad30:	mov	x1, x8
  40ad34:	str	x21, [sp, #16]
  40ad38:	mov	x29, sp
  40ad3c:	blr	x9
  40ad40:	ldr	x8, [x19, #16]
  40ad44:	cmp	x0, x8
  40ad48:	b.cs	40adb0 <ferror@plt+0x7de0>  // b.hs, b.nlast
  40ad4c:	ldr	x8, [x19]
  40ad50:	add	x21, x8, x0, lsl #4
  40ad54:	ldr	x1, [x21]
  40ad58:	mov	x0, xzr
  40ad5c:	cbz	x1, 40ada0 <ferror@plt+0x7dd0>
  40ad60:	cbz	x8, 40ada0 <ferror@plt+0x7dd0>
  40ad64:	cmp	x1, x20
  40ad68:	b.eq	40ad8c <ferror@plt+0x7dbc>  // b.none
  40ad6c:	ldr	x8, [x19, #56]
  40ad70:	mov	x0, x20
  40ad74:	blr	x8
  40ad78:	tbnz	w0, #0, 40ad94 <ferror@plt+0x7dc4>
  40ad7c:	ldr	x21, [x21, #8]
  40ad80:	cbz	x21, 40ad9c <ferror@plt+0x7dcc>
  40ad84:	ldr	x1, [x21]
  40ad88:	b	40ad64 <ferror@plt+0x7d94>
  40ad8c:	mov	x0, x20
  40ad90:	b	40ada0 <ferror@plt+0x7dd0>
  40ad94:	ldr	x0, [x21]
  40ad98:	b	40ada0 <ferror@plt+0x7dd0>
  40ad9c:	mov	x0, xzr
  40ada0:	ldp	x20, x19, [sp, #32]
  40ada4:	ldr	x21, [sp, #16]
  40ada8:	ldp	x29, x30, [sp], #48
  40adac:	ret
  40adb0:	bl	402c20 <abort@plt>
  40adb4:	stp	x29, x30, [sp, #-16]!
  40adb8:	ldr	x8, [x0, #32]
  40adbc:	mov	x29, sp
  40adc0:	cbz	x8, 40addc <ferror@plt+0x7e0c>
  40adc4:	ldp	x8, x9, [x0]
  40adc8:	cmp	x8, x9
  40adcc:	b.cs	40ade8 <ferror@plt+0x7e18>  // b.hs, b.nlast
  40add0:	ldr	x0, [x8], #16
  40add4:	cbz	x0, 40adc8 <ferror@plt+0x7df8>
  40add8:	b	40ade0 <ferror@plt+0x7e10>
  40addc:	mov	x0, xzr
  40ade0:	ldp	x29, x30, [sp], #16
  40ade4:	ret
  40ade8:	bl	402c20 <abort@plt>
  40adec:	stp	x29, x30, [sp, #-32]!
  40adf0:	stp	x20, x19, [sp, #16]
  40adf4:	ldr	x8, [x0, #16]
  40adf8:	ldr	x9, [x0, #48]
  40adfc:	mov	x19, x0
  40ae00:	mov	x20, x1
  40ae04:	mov	x0, x1
  40ae08:	mov	x1, x8
  40ae0c:	mov	x29, sp
  40ae10:	blr	x9
  40ae14:	ldr	x8, [x19, #16]
  40ae18:	cmp	x0, x8
  40ae1c:	b.cs	40ae78 <ferror@plt+0x7ea8>  // b.hs, b.nlast
  40ae20:	ldr	x8, [x19]
  40ae24:	add	x9, x8, x0, lsl #4
  40ae28:	ldp	x10, x9, [x9]
  40ae2c:	cmp	x10, x20
  40ae30:	b.eq	40ae3c <ferror@plt+0x7e6c>  // b.none
  40ae34:	cbnz	x9, 40ae28 <ferror@plt+0x7e58>
  40ae38:	b	40ae48 <ferror@plt+0x7e78>
  40ae3c:	cbz	x9, 40ae48 <ferror@plt+0x7e78>
  40ae40:	ldr	x0, [x9]
  40ae44:	b	40ae6c <ferror@plt+0x7e9c>
  40ae48:	ldr	x9, [x19, #8]
  40ae4c:	add	x8, x8, x0, lsl #4
  40ae50:	add	x8, x8, #0x10
  40ae54:	cmp	x8, x9
  40ae58:	b.cs	40ae68 <ferror@plt+0x7e98>  // b.hs, b.nlast
  40ae5c:	ldr	x0, [x8], #16
  40ae60:	cbz	x0, 40ae54 <ferror@plt+0x7e84>
  40ae64:	b	40ae6c <ferror@plt+0x7e9c>
  40ae68:	mov	x0, xzr
  40ae6c:	ldp	x20, x19, [sp, #16]
  40ae70:	ldp	x29, x30, [sp], #32
  40ae74:	ret
  40ae78:	bl	402c20 <abort@plt>
  40ae7c:	ldp	x9, x10, [x0]
  40ae80:	cmp	x9, x10
  40ae84:	b.cs	40aedc <ferror@plt+0x7f0c>  // b.hs, b.nlast
  40ae88:	mov	x11, xzr
  40ae8c:	ldr	x8, [x9]
  40ae90:	cbz	x8, 40aec4 <ferror@plt+0x7ef4>
  40ae94:	cbz	x9, 40aec4 <ferror@plt+0x7ef4>
  40ae98:	mov	x10, x9
  40ae9c:	cmp	x11, x2
  40aea0:	b.cs	40aee4 <ferror@plt+0x7f14>  // b.hs, b.nlast
  40aea4:	ldr	x8, [x10]
  40aea8:	str	x8, [x1, x11, lsl #3]
  40aeac:	ldr	x10, [x10, #8]
  40aeb0:	add	x8, x11, #0x1
  40aeb4:	mov	x11, x8
  40aeb8:	cbnz	x10, 40ae9c <ferror@plt+0x7ecc>
  40aebc:	ldr	x10, [x0, #8]
  40aec0:	b	40aec8 <ferror@plt+0x7ef8>
  40aec4:	mov	x8, x11
  40aec8:	add	x9, x9, #0x10
  40aecc:	cmp	x9, x10
  40aed0:	mov	x11, x8
  40aed4:	b.cc	40ae8c <ferror@plt+0x7ebc>  // b.lo, b.ul, b.last
  40aed8:	b	40aee8 <ferror@plt+0x7f18>
  40aedc:	mov	x8, xzr
  40aee0:	b	40aee8 <ferror@plt+0x7f18>
  40aee4:	mov	x8, x11
  40aee8:	mov	x0, x8
  40aeec:	ret
  40aef0:	stp	x29, x30, [sp, #-64]!
  40aef4:	stp	x24, x23, [sp, #16]
  40aef8:	stp	x22, x21, [sp, #32]
  40aefc:	stp	x20, x19, [sp, #48]
  40af00:	ldp	x23, x8, [x0]
  40af04:	mov	x29, sp
  40af08:	cmp	x23, x8
  40af0c:	b.cs	40af70 <ferror@plt+0x7fa0>  // b.hs, b.nlast
  40af10:	mov	x19, x2
  40af14:	mov	x20, x0
  40af18:	mov	x21, x1
  40af1c:	mov	x22, xzr
  40af20:	ldr	x0, [x23]
  40af24:	cbz	x0, 40af60 <ferror@plt+0x7f90>
  40af28:	cbz	x23, 40af60 <ferror@plt+0x7f90>
  40af2c:	mov	x1, x19
  40af30:	blr	x21
  40af34:	tbz	w0, #0, 40af74 <ferror@plt+0x7fa4>
  40af38:	mov	x24, x23
  40af3c:	ldr	x24, [x24, #8]
  40af40:	add	x22, x22, #0x1
  40af44:	cbz	x24, 40af5c <ferror@plt+0x7f8c>
  40af48:	ldr	x0, [x24]
  40af4c:	mov	x1, x19
  40af50:	blr	x21
  40af54:	tbnz	w0, #0, 40af3c <ferror@plt+0x7f6c>
  40af58:	b	40af74 <ferror@plt+0x7fa4>
  40af5c:	ldr	x8, [x20, #8]
  40af60:	add	x23, x23, #0x10
  40af64:	cmp	x23, x8
  40af68:	b.cc	40af20 <ferror@plt+0x7f50>  // b.lo, b.ul, b.last
  40af6c:	b	40af74 <ferror@plt+0x7fa4>
  40af70:	mov	x22, xzr
  40af74:	mov	x0, x22
  40af78:	ldp	x20, x19, [sp, #48]
  40af7c:	ldp	x22, x21, [sp, #32]
  40af80:	ldp	x24, x23, [sp, #16]
  40af84:	ldp	x29, x30, [sp], #64
  40af88:	ret
  40af8c:	ldrb	w9, [x0]
  40af90:	cbz	w9, 40afc0 <ferror@plt+0x7ff0>
  40af94:	mov	x8, x0
  40af98:	mov	x0, xzr
  40af9c:	add	x8, x8, #0x1
  40afa0:	lsl	x10, x0, #5
  40afa4:	sub	x10, x10, x0
  40afa8:	add	x10, x10, w9, uxtb
  40afac:	ldrb	w9, [x8], #1
  40afb0:	udiv	x11, x10, x1
  40afb4:	msub	x0, x11, x1, x10
  40afb8:	cbnz	w9, 40afa0 <ferror@plt+0x7fd0>
  40afbc:	ret
  40afc0:	mov	x0, xzr
  40afc4:	ret
  40afc8:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40afcc:	add	x8, x8, #0x394
  40afd0:	ldr	w9, [x8, #16]
  40afd4:	ldr	q0, [x8]
  40afd8:	str	w9, [x0, #16]
  40afdc:	str	q0, [x0]
  40afe0:	ret
  40afe4:	stp	x29, x30, [sp, #-64]!
  40afe8:	adrp	x8, 40b000 <ferror@plt+0x8030>
  40afec:	add	x8, x8, #0xb8
  40aff0:	cmp	x2, #0x0
  40aff4:	adrp	x9, 40b000 <ferror@plt+0x8030>
  40aff8:	stp	x24, x23, [sp, #16]
  40affc:	stp	x22, x21, [sp, #32]
  40b000:	mov	x21, x0
  40b004:	add	x9, x9, #0xc8
  40b008:	csel	x23, x8, x2, eq  // eq = none
  40b00c:	cmp	x3, #0x0
  40b010:	mov	w0, #0x50                  	// #80
  40b014:	stp	x20, x19, [sp, #48]
  40b018:	mov	x29, sp
  40b01c:	mov	x19, x4
  40b020:	mov	x22, x1
  40b024:	csel	x24, x9, x3, eq  // eq = none
  40b028:	bl	402a60 <malloc@plt>
  40b02c:	mov	x20, x0
  40b030:	cbz	x0, 40b0a0 <ferror@plt+0x80d0>
  40b034:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40b038:	add	x8, x8, #0x394
  40b03c:	cmp	x22, #0x0
  40b040:	csel	x22, x8, x22, eq  // eq = none
  40b044:	mov	x0, x20
  40b048:	str	x22, [x20, #40]
  40b04c:	bl	40b0d4 <ferror@plt+0x8104>
  40b050:	tbz	w0, #0, 40b094 <ferror@plt+0x80c4>
  40b054:	mov	x0, x21
  40b058:	mov	x1, x22
  40b05c:	bl	40b168 <ferror@plt+0x8198>
  40b060:	str	x0, [x20, #16]
  40b064:	cbz	x0, 40b094 <ferror@plt+0x80c4>
  40b068:	mov	w1, #0x10                  	// #16
  40b06c:	mov	x21, x0
  40b070:	bl	40fc94 <ferror@plt+0xccc4>
  40b074:	str	x0, [x20]
  40b078:	cbz	x0, 40b094 <ferror@plt+0x80c4>
  40b07c:	add	x8, x0, x21, lsl #4
  40b080:	stp	xzr, xzr, [x20, #24]
  40b084:	stp	x23, x24, [x20, #48]
  40b088:	str	x8, [x20, #8]
  40b08c:	stp	x19, xzr, [x20, #64]
  40b090:	b	40b0a0 <ferror@plt+0x80d0>
  40b094:	mov	x0, x20
  40b098:	bl	402d30 <free@plt>
  40b09c:	mov	x20, xzr
  40b0a0:	mov	x0, x20
  40b0a4:	ldp	x20, x19, [sp, #48]
  40b0a8:	ldp	x22, x21, [sp, #32]
  40b0ac:	ldp	x24, x23, [sp, #16]
  40b0b0:	ldp	x29, x30, [sp], #64
  40b0b4:	ret
  40b0b8:	ror	x8, x0, #3
  40b0bc:	udiv	x9, x8, x1
  40b0c0:	msub	x0, x9, x1, x8
  40b0c4:	ret
  40b0c8:	cmp	x0, x1
  40b0cc:	cset	w0, eq  // eq = none
  40b0d0:	ret
  40b0d4:	ldr	x8, [x0, #40]
  40b0d8:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40b0dc:	add	x9, x9, #0x394
  40b0e0:	cmp	x8, x9
  40b0e4:	b.eq	40b150 <ferror@plt+0x8180>  // b.none
  40b0e8:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40b0ec:	ldr	s0, [x8, #8]
  40b0f0:	ldr	s1, [x10, #796]
  40b0f4:	fcmp	s0, s1
  40b0f8:	b.le	40b158 <ferror@plt+0x8188>
  40b0fc:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40b100:	ldr	s2, [x10, #800]
  40b104:	fcmp	s0, s2
  40b108:	b.pl	40b158 <ferror@plt+0x8188>  // b.nfrst
  40b10c:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40b110:	ldr	s2, [x8, #12]
  40b114:	ldr	s3, [x10, #804]
  40b118:	fcmp	s2, s3
  40b11c:	b.le	40b158 <ferror@plt+0x8188>
  40b120:	ldr	s2, [x8]
  40b124:	fcmp	s2, #0.0
  40b128:	b.lt	40b158 <ferror@plt+0x8188>  // b.tstop
  40b12c:	fadd	s1, s2, s1
  40b130:	fcmp	s1, s0
  40b134:	b.pl	40b158 <ferror@plt+0x8188>  // b.nfrst
  40b138:	ldr	s0, [x8, #4]
  40b13c:	fmov	s2, #1.000000000000000000e+00
  40b140:	fcmp	s0, s2
  40b144:	b.hi	40b158 <ferror@plt+0x8188>  // b.pmore
  40b148:	fcmp	s1, s0
  40b14c:	b.pl	40b158 <ferror@plt+0x8188>  // b.nfrst
  40b150:	mov	w8, #0x1                   	// #1
  40b154:	b	40b160 <ferror@plt+0x8190>
  40b158:	mov	w8, wzr
  40b15c:	str	x9, [x0, #40]
  40b160:	mov	w0, w8
  40b164:	ret
  40b168:	ldrb	w8, [x1, #16]
  40b16c:	cbnz	w8, 40b190 <ferror@plt+0x81c0>
  40b170:	ldr	s0, [x1, #8]
  40b174:	ucvtf	s1, x0
  40b178:	mov	w8, #0x5f800000            	// #1602224128
  40b17c:	fdiv	s0, s1, s0
  40b180:	fmov	s1, w8
  40b184:	fcmp	s0, s1
  40b188:	b.ge	40b204 <ferror@plt+0x8234>  // b.tcont
  40b18c:	fcvtzu	x0, s0
  40b190:	cmp	x0, #0xa
  40b194:	mov	w8, #0xa                   	// #10
  40b198:	csel	x8, x0, x8, hi  // hi = pmore
  40b19c:	orr	x0, x8, #0x1
  40b1a0:	cmn	x0, #0x1
  40b1a4:	b.eq	40b204 <ferror@plt+0x8234>  // b.none
  40b1a8:	cmp	x0, #0xa
  40b1ac:	b.cc	40b1e4 <ferror@plt+0x8214>  // b.lo, b.ul, b.last
  40b1b0:	mov	w9, #0xc                   	// #12
  40b1b4:	mov	w10, #0x9                   	// #9
  40b1b8:	mov	w8, #0x3                   	// #3
  40b1bc:	udiv	x11, x0, x8
  40b1c0:	msub	x11, x11, x8, x0
  40b1c4:	cbz	x11, 40b1e8 <ferror@plt+0x8218>
  40b1c8:	add	x10, x10, x9
  40b1cc:	add	x10, x10, #0x4
  40b1d0:	add	x8, x8, #0x2
  40b1d4:	cmp	x10, x0
  40b1d8:	add	x9, x9, #0x8
  40b1dc:	b.cc	40b1bc <ferror@plt+0x81ec>  // b.lo, b.ul, b.last
  40b1e0:	b	40b1e8 <ferror@plt+0x8218>
  40b1e4:	mov	w8, #0x3                   	// #3
  40b1e8:	udiv	x9, x0, x8
  40b1ec:	msub	x8, x9, x8, x0
  40b1f0:	cbnz	x8, 40b1fc <ferror@plt+0x822c>
  40b1f4:	add	x0, x0, #0x2
  40b1f8:	b	40b1a0 <ferror@plt+0x81d0>
  40b1fc:	lsr	x8, x0, #60
  40b200:	cbz	x8, 40b208 <ferror@plt+0x8238>
  40b204:	mov	x0, xzr
  40b208:	ret
  40b20c:	stp	x29, x30, [sp, #-48]!
  40b210:	str	x21, [sp, #16]
  40b214:	stp	x20, x19, [sp, #32]
  40b218:	ldp	x20, x8, [x0]
  40b21c:	mov	x19, x0
  40b220:	mov	x29, sp
  40b224:	cmp	x20, x8
  40b228:	b.cs	40b298 <ferror@plt+0x82c8>  // b.hs, b.nlast
  40b22c:	ldr	x9, [x20]
  40b230:	cbz	x9, 40b290 <ferror@plt+0x82c0>
  40b234:	ldr	x8, [x19, #64]
  40b238:	ldr	x21, [x20, #8]
  40b23c:	cmp	x8, #0x0
  40b240:	cset	w9, ne  // ne = any
  40b244:	cbz	x21, 40b27c <ferror@plt+0x82ac>
  40b248:	tbz	w9, #0, 40b258 <ferror@plt+0x8288>
  40b24c:	ldr	x0, [x21]
  40b250:	blr	x8
  40b254:	ldr	x8, [x19, #64]
  40b258:	str	xzr, [x21]
  40b25c:	ldr	x9, [x19, #72]
  40b260:	ldr	x10, [x21, #8]
  40b264:	cmp	x8, #0x0
  40b268:	str	x9, [x21, #8]
  40b26c:	str	x21, [x19, #72]
  40b270:	cset	w9, ne  // ne = any
  40b274:	mov	x21, x10
  40b278:	cbnz	x10, 40b248 <ferror@plt+0x8278>
  40b27c:	cbz	w9, 40b288 <ferror@plt+0x82b8>
  40b280:	ldr	x0, [x20]
  40b284:	blr	x8
  40b288:	stp	xzr, xzr, [x20]
  40b28c:	ldr	x8, [x19, #8]
  40b290:	add	x20, x20, #0x10
  40b294:	b	40b224 <ferror@plt+0x8254>
  40b298:	stp	xzr, xzr, [x19, #24]
  40b29c:	ldp	x20, x19, [sp, #32]
  40b2a0:	ldr	x21, [sp, #16]
  40b2a4:	ldp	x29, x30, [sp], #48
  40b2a8:	ret
  40b2ac:	stp	x29, x30, [sp, #-48]!
  40b2b0:	stp	x20, x19, [sp, #32]
  40b2b4:	ldr	x8, [x0, #64]
  40b2b8:	mov	x19, x0
  40b2bc:	str	x21, [sp, #16]
  40b2c0:	mov	x29, sp
  40b2c4:	cbz	x8, 40b318 <ferror@plt+0x8348>
  40b2c8:	ldr	x8, [x19, #32]
  40b2cc:	cbz	x8, 40b318 <ferror@plt+0x8348>
  40b2d0:	ldp	x20, x8, [x19]
  40b2d4:	cmp	x20, x8
  40b2d8:	b.cs	40b318 <ferror@plt+0x8348>  // b.hs, b.nlast
  40b2dc:	ldr	x0, [x20]
  40b2e0:	cbz	x0, 40b310 <ferror@plt+0x8340>
  40b2e4:	cbz	x20, 40b310 <ferror@plt+0x8340>
  40b2e8:	ldr	x8, [x19, #64]
  40b2ec:	blr	x8
  40b2f0:	ldr	x21, [x20, #8]
  40b2f4:	cbz	x21, 40b30c <ferror@plt+0x833c>
  40b2f8:	ldr	x0, [x21]
  40b2fc:	ldr	x8, [x19, #64]
  40b300:	blr	x8
  40b304:	ldr	x21, [x21, #8]
  40b308:	cbnz	x21, 40b2f8 <ferror@plt+0x8328>
  40b30c:	ldr	x8, [x19, #8]
  40b310:	add	x20, x20, #0x10
  40b314:	b	40b2d4 <ferror@plt+0x8304>
  40b318:	ldp	x20, x8, [x19]
  40b31c:	cmp	x20, x8
  40b320:	b.cs	40b348 <ferror@plt+0x8378>  // b.hs, b.nlast
  40b324:	ldr	x0, [x20, #8]
  40b328:	cbz	x0, 40b340 <ferror@plt+0x8370>
  40b32c:	ldr	x21, [x0, #8]
  40b330:	bl	402d30 <free@plt>
  40b334:	mov	x0, x21
  40b338:	cbnz	x21, 40b32c <ferror@plt+0x835c>
  40b33c:	ldr	x8, [x19, #8]
  40b340:	add	x20, x20, #0x10
  40b344:	b	40b31c <ferror@plt+0x834c>
  40b348:	ldr	x0, [x19, #72]
  40b34c:	cbz	x0, 40b360 <ferror@plt+0x8390>
  40b350:	ldr	x20, [x0, #8]
  40b354:	bl	402d30 <free@plt>
  40b358:	mov	x0, x20
  40b35c:	cbnz	x20, 40b350 <ferror@plt+0x8380>
  40b360:	ldr	x0, [x19]
  40b364:	bl	402d30 <free@plt>
  40b368:	mov	x0, x19
  40b36c:	ldp	x20, x19, [sp, #32]
  40b370:	ldr	x21, [sp, #16]
  40b374:	ldp	x29, x30, [sp], #48
  40b378:	b	402d30 <free@plt>
  40b37c:	sub	sp, sp, #0x70
  40b380:	stp	x29, x30, [sp, #80]
  40b384:	stp	x20, x19, [sp, #96]
  40b388:	ldr	x8, [x0, #40]
  40b38c:	mov	x19, x0
  40b390:	mov	x0, x1
  40b394:	add	x29, sp, #0x50
  40b398:	mov	x1, x8
  40b39c:	bl	40b168 <ferror@plt+0x8198>
  40b3a0:	cbz	x0, 40b424 <ferror@plt+0x8454>
  40b3a4:	ldr	x8, [x19, #16]
  40b3a8:	mov	x20, x0
  40b3ac:	cmp	x0, x8
  40b3b0:	b.eq	40b420 <ferror@plt+0x8450>  // b.none
  40b3b4:	mov	w1, #0x10                  	// #16
  40b3b8:	mov	x0, x20
  40b3bc:	bl	40fc94 <ferror@plt+0xccc4>
  40b3c0:	str	x0, [sp]
  40b3c4:	cbz	x0, 40b424 <ferror@plt+0x8454>
  40b3c8:	add	x8, x0, x20, lsl #4
  40b3cc:	stp	x8, x20, [sp, #8]
  40b3d0:	stp	xzr, xzr, [sp, #24]
  40b3d4:	ldur	q0, [x19, #40]
  40b3d8:	mov	x0, sp
  40b3dc:	mov	x1, x19
  40b3e0:	mov	w2, wzr
  40b3e4:	stur	q0, [sp, #40]
  40b3e8:	ldur	q0, [x19, #56]
  40b3ec:	stur	q0, [sp, #56]
  40b3f0:	ldr	x8, [x19, #72]
  40b3f4:	str	x8, [sp, #72]
  40b3f8:	bl	40b478 <ferror@plt+0x84a8>
  40b3fc:	tbz	w0, #0, 40b434 <ferror@plt+0x8464>
  40b400:	ldr	x0, [x19]
  40b404:	bl	402d30 <free@plt>
  40b408:	ldr	q0, [sp]
  40b40c:	str	q0, [x19]
  40b410:	ldr	q0, [sp, #16]
  40b414:	str	q0, [x19, #16]
  40b418:	ldr	x8, [sp, #72]
  40b41c:	str	x8, [x19, #72]
  40b420:	mov	w0, #0x1                   	// #1
  40b424:	ldp	x20, x19, [sp, #96]
  40b428:	ldp	x29, x30, [sp, #80]
  40b42c:	add	sp, sp, #0x70
  40b430:	ret
  40b434:	ldr	x8, [sp, #72]
  40b438:	mov	x1, sp
  40b43c:	mov	w2, #0x1                   	// #1
  40b440:	mov	x0, x19
  40b444:	str	x8, [x19, #72]
  40b448:	bl	40b478 <ferror@plt+0x84a8>
  40b44c:	tbz	w0, #0, 40b474 <ferror@plt+0x84a4>
  40b450:	mov	x1, sp
  40b454:	mov	x0, x19
  40b458:	mov	w2, wzr
  40b45c:	bl	40b478 <ferror@plt+0x84a8>
  40b460:	tbz	w0, #0, 40b474 <ferror@plt+0x84a4>
  40b464:	ldr	x0, [sp]
  40b468:	bl	402d30 <free@plt>
  40b46c:	mov	w0, wzr
  40b470:	b	40b424 <ferror@plt+0x8454>
  40b474:	bl	402c20 <abort@plt>
  40b478:	stp	x29, x30, [sp, #-80]!
  40b47c:	stp	x26, x25, [sp, #16]
  40b480:	stp	x24, x23, [sp, #32]
  40b484:	stp	x22, x21, [sp, #48]
  40b488:	stp	x20, x19, [sp, #64]
  40b48c:	ldp	x24, x8, [x1]
  40b490:	mov	x29, sp
  40b494:	cmp	x24, x8
  40b498:	b.cs	40b5c8 <ferror@plt+0x85f8>  // b.hs, b.nlast
  40b49c:	mov	w19, w2
  40b4a0:	mov	x20, x1
  40b4a4:	mov	x21, x0
  40b4a8:	add	x25, x0, #0x48
  40b4ac:	ldr	x22, [x24]
  40b4b0:	cbz	x22, 40b5b8 <ferror@plt+0x85e8>
  40b4b4:	ldr	x23, [x24, #8]
  40b4b8:	cbz	x23, 40b528 <ferror@plt+0x8558>
  40b4bc:	ldr	x1, [x21, #16]
  40b4c0:	ldr	x22, [x23]
  40b4c4:	ldr	x8, [x21, #48]
  40b4c8:	mov	x0, x22
  40b4cc:	blr	x8
  40b4d0:	ldr	x1, [x21, #16]
  40b4d4:	cmp	x0, x1
  40b4d8:	b.cs	40b5e4 <ferror@plt+0x8614>  // b.hs, b.nlast
  40b4dc:	ldr	x8, [x21]
  40b4e0:	add	x9, x8, x0, lsl #4
  40b4e4:	ldr	x10, [x9]
  40b4e8:	ldr	x8, [x23, #8]
  40b4ec:	cbz	x10, 40b4f8 <ferror@plt+0x8528>
  40b4f0:	add	x9, x9, #0x8
  40b4f4:	b	40b510 <ferror@plt+0x8540>
  40b4f8:	str	x22, [x9]
  40b4fc:	ldr	x9, [x21, #24]
  40b500:	add	x9, x9, #0x1
  40b504:	str	x9, [x21, #24]
  40b508:	mov	x9, x25
  40b50c:	str	xzr, [x23]
  40b510:	ldr	x10, [x9]
  40b514:	str	x10, [x23, #8]
  40b518:	str	x23, [x9]
  40b51c:	mov	x23, x8
  40b520:	cbnz	x8, 40b4c0 <ferror@plt+0x84f0>
  40b524:	ldr	x22, [x24]
  40b528:	str	xzr, [x24, #8]
  40b52c:	tbnz	w19, #0, 40b5b8 <ferror@plt+0x85e8>
  40b530:	ldr	x8, [x21, #48]
  40b534:	ldr	x1, [x21, #16]
  40b538:	mov	x0, x22
  40b53c:	blr	x8
  40b540:	ldr	x8, [x21, #16]
  40b544:	cmp	x0, x8
  40b548:	b.cs	40b5e4 <ferror@plt+0x8614>  // b.hs, b.nlast
  40b54c:	ldr	x26, [x21]
  40b550:	mov	x23, x0
  40b554:	add	x8, x26, x0, lsl #4
  40b558:	ldr	x9, [x8]
  40b55c:	cbz	x9, 40b574 <ferror@plt+0x85a4>
  40b560:	ldr	x0, [x25]
  40b564:	cbz	x0, 40b588 <ferror@plt+0x85b8>
  40b568:	ldr	x8, [x0, #8]
  40b56c:	str	x8, [x25]
  40b570:	b	40b594 <ferror@plt+0x85c4>
  40b574:	str	x22, [x8]
  40b578:	ldr	x8, [x21, #24]
  40b57c:	add	x8, x8, #0x1
  40b580:	str	x8, [x21, #24]
  40b584:	b	40b5a8 <ferror@plt+0x85d8>
  40b588:	mov	w0, #0x10                  	// #16
  40b58c:	bl	402a60 <malloc@plt>
  40b590:	cbz	x0, 40b5cc <ferror@plt+0x85fc>
  40b594:	str	x22, [x0]
  40b598:	add	x8, x26, x23, lsl #4
  40b59c:	ldr	x9, [x8, #8]
  40b5a0:	str	x9, [x0, #8]
  40b5a4:	str	x0, [x8, #8]
  40b5a8:	str	xzr, [x24]
  40b5ac:	ldr	x8, [x20, #24]
  40b5b0:	sub	x8, x8, #0x1
  40b5b4:	str	x8, [x20, #24]
  40b5b8:	ldr	x8, [x20, #8]
  40b5bc:	add	x24, x24, #0x10
  40b5c0:	cmp	x24, x8
  40b5c4:	b.cc	40b4ac <ferror@plt+0x84dc>  // b.lo, b.ul, b.last
  40b5c8:	mov	w0, #0x1                   	// #1
  40b5cc:	ldp	x20, x19, [sp, #64]
  40b5d0:	ldp	x22, x21, [sp, #48]
  40b5d4:	ldp	x24, x23, [sp, #32]
  40b5d8:	ldp	x26, x25, [sp, #16]
  40b5dc:	ldp	x29, x30, [sp], #80
  40b5e0:	ret
  40b5e4:	bl	402c20 <abort@plt>
  40b5e8:	stp	x29, x30, [sp, #-48]!
  40b5ec:	str	x21, [sp, #16]
  40b5f0:	stp	x20, x19, [sp, #32]
  40b5f4:	mov	x29, sp
  40b5f8:	cbz	x1, 40b74c <ferror@plt+0x877c>
  40b5fc:	mov	x21, x2
  40b600:	add	x2, x29, #0x18
  40b604:	mov	w3, wzr
  40b608:	mov	x20, x1
  40b60c:	mov	x19, x0
  40b610:	bl	40b750 <ferror@plt+0x8780>
  40b614:	cbz	x0, 40b62c <ferror@plt+0x865c>
  40b618:	cbz	x21, 40b6e4 <ferror@plt+0x8714>
  40b61c:	mov	x8, x0
  40b620:	mov	w0, wzr
  40b624:	str	x8, [x21]
  40b628:	b	40b73c <ferror@plt+0x876c>
  40b62c:	ldr	x8, [x19, #40]
  40b630:	ldp	x10, x9, [x19, #16]
  40b634:	ldr	s0, [x8, #8]
  40b638:	ucvtf	s2, x10
  40b63c:	ucvtf	s1, x9
  40b640:	fmul	s0, s0, s2
  40b644:	fcmp	s0, s1
  40b648:	b.pl	40b6c4 <ferror@plt+0x86f4>  // b.nfrst
  40b64c:	mov	x0, x19
  40b650:	bl	40b0d4 <ferror@plt+0x8104>
  40b654:	ldr	x8, [x19, #40]
  40b658:	ldp	x10, x9, [x19, #16]
  40b65c:	ldr	s0, [x8, #8]
  40b660:	ucvtf	s1, x10
  40b664:	ucvtf	s2, x9
  40b668:	fmul	s3, s0, s1
  40b66c:	fcmp	s3, s2
  40b670:	b.pl	40b6c4 <ferror@plt+0x86f4>  // b.nfrst
  40b674:	ldr	s2, [x8, #12]
  40b678:	ldrb	w8, [x8, #16]
  40b67c:	fmul	s1, s2, s1
  40b680:	cmp	w8, #0x0
  40b684:	fmul	s0, s0, s1
  40b688:	mov	w8, #0x5f800000            	// #1602224128
  40b68c:	fcsel	s0, s0, s1, eq  // eq = none
  40b690:	fmov	s1, w8
  40b694:	fcmp	s0, s1
  40b698:	b.ge	40b738 <ferror@plt+0x8768>  // b.tcont
  40b69c:	fcvtzu	x1, s0
  40b6a0:	mov	x0, x19
  40b6a4:	bl	40b37c <ferror@plt+0x83ac>
  40b6a8:	tbz	w0, #0, 40b738 <ferror@plt+0x8768>
  40b6ac:	add	x2, x29, #0x18
  40b6b0:	mov	x0, x19
  40b6b4:	mov	x1, x20
  40b6b8:	mov	w3, wzr
  40b6bc:	bl	40b750 <ferror@plt+0x8780>
  40b6c0:	cbnz	x0, 40b74c <ferror@plt+0x877c>
  40b6c4:	ldr	x21, [x29, #24]
  40b6c8:	ldr	x8, [x21]
  40b6cc:	cbz	x8, 40b6ec <ferror@plt+0x871c>
  40b6d0:	ldr	x0, [x19, #72]
  40b6d4:	cbz	x0, 40b708 <ferror@plt+0x8738>
  40b6d8:	ldr	x8, [x0, #8]
  40b6dc:	str	x8, [x19, #72]
  40b6e0:	b	40b714 <ferror@plt+0x8744>
  40b6e4:	mov	w0, wzr
  40b6e8:	b	40b73c <ferror@plt+0x876c>
  40b6ec:	str	x20, [x21]
  40b6f0:	ldur	q0, [x19, #24]
  40b6f4:	mov	w0, #0x1                   	// #1
  40b6f8:	dup	v1.2d, x0
  40b6fc:	add	v0.2d, v0.2d, v1.2d
  40b700:	stur	q0, [x19, #24]
  40b704:	b	40b73c <ferror@plt+0x876c>
  40b708:	mov	w0, #0x10                  	// #16
  40b70c:	bl	402a60 <malloc@plt>
  40b710:	cbz	x0, 40b738 <ferror@plt+0x8768>
  40b714:	str	x20, [x0]
  40b718:	ldr	x8, [x21, #8]
  40b71c:	str	x8, [x0, #8]
  40b720:	str	x0, [x21, #8]
  40b724:	ldr	x8, [x19, #32]
  40b728:	mov	w0, #0x1                   	// #1
  40b72c:	add	x8, x8, #0x1
  40b730:	str	x8, [x19, #32]
  40b734:	b	40b73c <ferror@plt+0x876c>
  40b738:	mov	w0, #0xffffffff            	// #-1
  40b73c:	ldp	x20, x19, [sp, #32]
  40b740:	ldr	x21, [sp, #16]
  40b744:	ldp	x29, x30, [sp], #48
  40b748:	ret
  40b74c:	bl	402c20 <abort@plt>
  40b750:	stp	x29, x30, [sp, #-80]!
  40b754:	stp	x24, x23, [sp, #32]
  40b758:	stp	x22, x21, [sp, #48]
  40b75c:	stp	x20, x19, [sp, #64]
  40b760:	ldr	x8, [x0, #16]
  40b764:	ldr	x9, [x0, #48]
  40b768:	mov	x20, x0
  40b76c:	mov	x19, x1
  40b770:	mov	x0, x1
  40b774:	mov	x1, x8
  40b778:	str	x25, [sp, #16]
  40b77c:	mov	x29, sp
  40b780:	mov	w21, w3
  40b784:	mov	x23, x2
  40b788:	blr	x9
  40b78c:	ldr	x8, [x20, #16]
  40b790:	cmp	x0, x8
  40b794:	b.cs	40b878 <ferror@plt+0x88a8>  // b.hs, b.nlast
  40b798:	ldr	x25, [x20]
  40b79c:	mov	x22, x0
  40b7a0:	add	x24, x25, x0, lsl #4
  40b7a4:	str	x24, [x23]
  40b7a8:	ldr	x1, [x24]
  40b7ac:	cbz	x1, 40b820 <ferror@plt+0x8850>
  40b7b0:	cmp	x1, x19
  40b7b4:	b.eq	40b7cc <ferror@plt+0x87fc>  // b.none
  40b7b8:	ldr	x8, [x20, #56]
  40b7bc:	mov	x0, x19
  40b7c0:	blr	x8
  40b7c4:	tbz	w0, #0, 40b7e8 <ferror@plt+0x8818>
  40b7c8:	ldr	x19, [x24]
  40b7cc:	tbz	w21, #0, 40b85c <ferror@plt+0x888c>
  40b7d0:	add	x8, x25, x22, lsl #4
  40b7d4:	ldr	x8, [x8, #8]
  40b7d8:	cbz	x8, 40b828 <ferror@plt+0x8858>
  40b7dc:	ldr	q0, [x8]
  40b7e0:	str	q0, [x24]
  40b7e4:	b	40b84c <ferror@plt+0x887c>
  40b7e8:	add	x22, x25, x22, lsl #4
  40b7ec:	ldr	x9, [x22, #8]!
  40b7f0:	cbz	x9, 40b820 <ferror@plt+0x8850>
  40b7f4:	ldr	x1, [x9]
  40b7f8:	cmp	x1, x19
  40b7fc:	b.eq	40b830 <ferror@plt+0x8860>  // b.none
  40b800:	ldr	x8, [x20, #56]
  40b804:	mov	x0, x19
  40b808:	blr	x8
  40b80c:	ldr	x8, [x22]
  40b810:	tbnz	w0, #0, 40b83c <ferror@plt+0x886c>
  40b814:	ldr	x9, [x8, #8]!
  40b818:	mov	x22, x8
  40b81c:	cbnz	x9, 40b7f4 <ferror@plt+0x8824>
  40b820:	mov	x19, xzr
  40b824:	b	40b85c <ferror@plt+0x888c>
  40b828:	str	xzr, [x24]
  40b82c:	b	40b85c <ferror@plt+0x888c>
  40b830:	mov	x8, x9
  40b834:	tbnz	w21, #0, 40b844 <ferror@plt+0x8874>
  40b838:	b	40b85c <ferror@plt+0x888c>
  40b83c:	ldr	x19, [x8]
  40b840:	tbz	w21, #0, 40b85c <ferror@plt+0x888c>
  40b844:	ldr	x9, [x8, #8]
  40b848:	str	x9, [x22]
  40b84c:	str	xzr, [x8]
  40b850:	ldr	x9, [x20, #72]
  40b854:	str	x9, [x8, #8]
  40b858:	str	x8, [x20, #72]
  40b85c:	mov	x0, x19
  40b860:	ldp	x20, x19, [sp, #64]
  40b864:	ldp	x22, x21, [sp, #48]
  40b868:	ldp	x24, x23, [sp, #32]
  40b86c:	ldr	x25, [sp, #16]
  40b870:	ldp	x29, x30, [sp], #80
  40b874:	ret
  40b878:	bl	402c20 <abort@plt>
  40b87c:	stp	x29, x30, [sp, #-32]!
  40b880:	mov	x29, sp
  40b884:	add	x2, x29, #0x18
  40b888:	str	x19, [sp, #16]
  40b88c:	mov	x19, x1
  40b890:	bl	40b5e8 <ferror@plt+0x8618>
  40b894:	ldr	x8, [x29, #24]
  40b898:	cmp	w0, #0x0
  40b89c:	csel	x8, x8, x19, eq  // eq = none
  40b8a0:	ldr	x19, [sp, #16]
  40b8a4:	cmn	w0, #0x1
  40b8a8:	csel	x0, xzr, x8, eq  // eq = none
  40b8ac:	ldp	x29, x30, [sp], #32
  40b8b0:	ret
  40b8b4:	stp	x29, x30, [sp, #-48]!
  40b8b8:	mov	x29, sp
  40b8bc:	add	x2, x29, #0x18
  40b8c0:	mov	w3, #0x1                   	// #1
  40b8c4:	str	x21, [sp, #16]
  40b8c8:	stp	x20, x19, [sp, #32]
  40b8cc:	mov	x19, x0
  40b8d0:	bl	40b750 <ferror@plt+0x8780>
  40b8d4:	mov	x20, x0
  40b8d8:	cbz	x0, 40b988 <ferror@plt+0x89b8>
  40b8dc:	ldr	x8, [x19, #32]
  40b8e0:	sub	x8, x8, #0x1
  40b8e4:	str	x8, [x19, #32]
  40b8e8:	ldr	x8, [x29, #24]
  40b8ec:	ldr	x8, [x8]
  40b8f0:	cbnz	x8, 40b988 <ferror@plt+0x89b8>
  40b8f4:	ldp	x10, x8, [x19, #16]
  40b8f8:	ldr	x9, [x19, #40]
  40b8fc:	sub	x8, x8, #0x1
  40b900:	str	x8, [x19, #24]
  40b904:	ldr	s0, [x9]
  40b908:	ucvtf	s2, x10
  40b90c:	ucvtf	s1, x8
  40b910:	fmul	s0, s0, s2
  40b914:	fcmp	s0, s1
  40b918:	b.le	40b988 <ferror@plt+0x89b8>
  40b91c:	mov	x0, x19
  40b920:	bl	40b0d4 <ferror@plt+0x8104>
  40b924:	ldr	x8, [x19, #40]
  40b928:	ldp	x10, x9, [x19, #16]
  40b92c:	ldr	s1, [x8]
  40b930:	ucvtf	s0, x10
  40b934:	ucvtf	s2, x9
  40b938:	fmul	s1, s1, s0
  40b93c:	fcmp	s1, s2
  40b940:	b.le	40b988 <ferror@plt+0x89b8>
  40b944:	ldr	s1, [x8, #4]
  40b948:	ldrb	w9, [x8, #16]
  40b94c:	fmul	s0, s1, s0
  40b950:	cbnz	w9, 40b95c <ferror@plt+0x898c>
  40b954:	ldr	s1, [x8, #8]
  40b958:	fmul	s0, s0, s1
  40b95c:	fcvtzu	x1, s0
  40b960:	mov	x0, x19
  40b964:	bl	40b37c <ferror@plt+0x83ac>
  40b968:	tbnz	w0, #0, 40b988 <ferror@plt+0x89b8>
  40b96c:	ldr	x0, [x19, #72]
  40b970:	cbz	x0, 40b984 <ferror@plt+0x89b4>
  40b974:	ldr	x21, [x0, #8]
  40b978:	bl	402d30 <free@plt>
  40b97c:	mov	x0, x21
  40b980:	cbnz	x21, 40b974 <ferror@plt+0x89a4>
  40b984:	str	xzr, [x19, #72]
  40b988:	mov	x0, x20
  40b98c:	ldp	x20, x19, [sp, #32]
  40b990:	ldr	x21, [sp, #16]
  40b994:	ldp	x29, x30, [sp], #48
  40b998:	ret
  40b99c:	stp	x29, x30, [sp, #-48]!
  40b9a0:	stp	x20, x19, [sp, #32]
  40b9a4:	mov	x19, x0
  40b9a8:	mov	w0, #0x20                  	// #32
  40b9ac:	str	x21, [sp, #16]
  40b9b0:	mov	x29, sp
  40b9b4:	mov	x20, x1
  40b9b8:	bl	40efac <ferror@plt+0xbfdc>
  40b9bc:	cmp	x20, #0x0
  40b9c0:	csinc	x21, x20, xzr, ne  // ne = any
  40b9c4:	lsr	x8, x21, #60
  40b9c8:	cbnz	x8, 40ba08 <ferror@plt+0x8a38>
  40b9cc:	mov	x20, x0
  40b9d0:	lsl	x0, x21, #3
  40b9d4:	bl	40efac <ferror@plt+0xbfdc>
  40b9d8:	adrp	x8, 40b000 <ferror@plt+0x8030>
  40b9dc:	add	x8, x8, #0xa0c
  40b9e0:	cmp	x19, #0x0
  40b9e4:	csel	x8, x8, x19, eq  // eq = none
  40b9e8:	str	xzr, [x0]
  40b9ec:	stp	x0, x21, [x20]
  40b9f0:	stp	xzr, x8, [x20, #16]
  40b9f4:	mov	x0, x20
  40b9f8:	ldp	x20, x19, [sp, #32]
  40b9fc:	ldr	x21, [sp, #16]
  40ba00:	ldp	x29, x30, [sp], #48
  40ba04:	ret
  40ba08:	bl	40f1e8 <ferror@plt+0xc218>
  40ba0c:	mov	w0, wzr
  40ba10:	ret
  40ba14:	stp	x29, x30, [sp, #-32]!
  40ba18:	str	x19, [sp, #16]
  40ba1c:	mov	x19, x0
  40ba20:	ldr	x0, [x0]
  40ba24:	mov	x29, sp
  40ba28:	bl	402d30 <free@plt>
  40ba2c:	mov	x0, x19
  40ba30:	ldr	x19, [sp, #16]
  40ba34:	ldp	x29, x30, [sp], #32
  40ba38:	b	402d30 <free@plt>
  40ba3c:	stp	x29, x30, [sp, #-64]!
  40ba40:	str	x23, [sp, #16]
  40ba44:	stp	x22, x21, [sp, #32]
  40ba48:	stp	x20, x19, [sp, #48]
  40ba4c:	ldp	x8, x9, [x0, #8]
  40ba50:	mov	x19, x0
  40ba54:	mov	x20, x1
  40ba58:	mov	x29, sp
  40ba5c:	sub	x10, x8, #0x1
  40ba60:	cmp	x10, x9
  40ba64:	b.ls	40ba70 <ferror@plt+0x8aa0>  // b.plast
  40ba68:	ldr	x0, [x19]
  40ba6c:	b	40babc <ferror@plt+0x8aec>
  40ba70:	ldr	x0, [x19]
  40ba74:	cbz	x0, 40ba94 <ferror@plt+0x8ac4>
  40ba78:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40ba7c:	movk	x9, #0xaaa, lsl #48
  40ba80:	cmp	x8, x9
  40ba84:	b.cs	40baa0 <ferror@plt+0x8ad0>  // b.hs, b.nlast
  40ba88:	add	x8, x8, x8, lsr #1
  40ba8c:	add	x8, x8, #0x1
  40ba90:	b	40baa8 <ferror@plt+0x8ad8>
  40ba94:	cbz	x8, 40baa4 <ferror@plt+0x8ad4>
  40ba98:	lsr	x9, x8, #60
  40ba9c:	cbz	x9, 40baa8 <ferror@plt+0x8ad8>
  40baa0:	bl	40f1e8 <ferror@plt+0xc218>
  40baa4:	mov	w8, #0x10                  	// #16
  40baa8:	lsl	x1, x8, #3
  40baac:	str	x8, [x19, #8]
  40bab0:	bl	40effc <ferror@plt+0xc02c>
  40bab4:	ldr	x9, [x19, #16]
  40bab8:	str	x0, [x19]
  40babc:	add	x22, x9, #0x1
  40bac0:	str	x22, [x19, #16]
  40bac4:	str	x20, [x0, x22, lsl #3]
  40bac8:	ldr	x21, [x19]
  40bacc:	ldr	x20, [x21, x22, lsl #3]
  40bad0:	cbz	x9, 40bb08 <ferror@plt+0x8b38>
  40bad4:	ldr	x19, [x19, #24]
  40bad8:	lsr	x23, x22, #1
  40badc:	ldr	x0, [x21, x23, lsl #3]
  40bae0:	mov	x1, x20
  40bae4:	blr	x19
  40bae8:	cmp	w0, #0x0
  40baec:	b.gt	40bb0c <ferror@plt+0x8b3c>
  40baf0:	ldr	x8, [x21, x23, lsl #3]
  40baf4:	cmp	x23, #0x1
  40baf8:	str	x8, [x21, x22, lsl #3]
  40bafc:	mov	x22, x23
  40bb00:	b.ne	40bad8 <ferror@plt+0x8b08>  // b.any
  40bb04:	b	40bb0c <ferror@plt+0x8b3c>
  40bb08:	mov	w22, #0x1                   	// #1
  40bb0c:	str	x20, [x21, x22, lsl #3]
  40bb10:	ldp	x20, x19, [sp, #48]
  40bb14:	ldp	x22, x21, [sp, #32]
  40bb18:	ldr	x23, [sp, #16]
  40bb1c:	mov	w0, wzr
  40bb20:	ldp	x29, x30, [sp], #64
  40bb24:	ret
  40bb28:	stp	x29, x30, [sp, #-96]!
  40bb2c:	stp	x26, x25, [sp, #32]
  40bb30:	stp	x24, x23, [sp, #48]
  40bb34:	stp	x22, x21, [sp, #64]
  40bb38:	stp	x20, x19, [sp, #80]
  40bb3c:	ldr	x8, [x0, #16]
  40bb40:	str	x27, [sp, #16]
  40bb44:	mov	x29, sp
  40bb48:	cbz	x8, 40bbcc <ferror@plt+0x8bfc>
  40bb4c:	ldr	x9, [x0]
  40bb50:	sub	x22, x8, #0x1
  40bb54:	lsr	x23, x22, #1
  40bb58:	ldr	x19, [x9, #8]
  40bb5c:	str	x22, [x0, #16]
  40bb60:	ldr	x8, [x9, x8, lsl #3]
  40bb64:	str	x8, [x9, #8]
  40bb68:	ldr	x21, [x0]
  40bb6c:	ldr	x20, [x21, #8]
  40bb70:	cbz	x23, 40bbd4 <ferror@plt+0x8c04>
  40bb74:	ldr	x25, [x0, #24]
  40bb78:	mov	w26, #0x1                   	// #1
  40bb7c:	lsl	x24, x26, #1
  40bb80:	cmp	x24, x22
  40bb84:	b.cs	40bba0 <ferror@plt+0x8bd0>  // b.hs, b.nlast
  40bb88:	orr	x27, x24, #0x1
  40bb8c:	ldr	x0, [x21, x24, lsl #3]
  40bb90:	ldr	x1, [x21, x27, lsl #3]
  40bb94:	blr	x25
  40bb98:	cmp	w0, #0x0
  40bb9c:	csel	x24, x27, x24, lt  // lt = tstop
  40bba0:	ldr	x0, [x21, x24, lsl #3]
  40bba4:	mov	x1, x20
  40bba8:	blr	x25
  40bbac:	cmp	w0, #0x1
  40bbb0:	b.lt	40bbdc <ferror@plt+0x8c0c>  // b.tstop
  40bbb4:	ldr	x8, [x21, x24, lsl #3]
  40bbb8:	cmp	x24, x23
  40bbbc:	str	x8, [x21, x26, lsl #3]
  40bbc0:	mov	x26, x24
  40bbc4:	b.ls	40bb7c <ferror@plt+0x8bac>  // b.plast
  40bbc8:	b	40bbe0 <ferror@plt+0x8c10>
  40bbcc:	mov	x19, xzr
  40bbd0:	b	40bbe4 <ferror@plt+0x8c14>
  40bbd4:	mov	w24, #0x1                   	// #1
  40bbd8:	b	40bbe0 <ferror@plt+0x8c10>
  40bbdc:	mov	x24, x26
  40bbe0:	str	x20, [x21, x24, lsl #3]
  40bbe4:	mov	x0, x19
  40bbe8:	ldp	x20, x19, [sp, #80]
  40bbec:	ldp	x22, x21, [sp, #64]
  40bbf0:	ldp	x24, x23, [sp, #48]
  40bbf4:	ldp	x26, x25, [sp, #32]
  40bbf8:	ldr	x27, [sp, #16]
  40bbfc:	ldp	x29, x30, [sp], #96
  40bc00:	ret
  40bc04:	mov	w8, w0
  40bc08:	mov	x0, x1
  40bc0c:	strb	wzr, [x0, #11]!
  40bc10:	tbnz	w8, #31, 40bc50 <ferror@plt+0x8c80>
  40bc14:	mov	w9, #0x6667                	// #26215
  40bc18:	movk	w9, #0x6666, lsl #16
  40bc1c:	mov	w10, #0xa                   	// #10
  40bc20:	smull	x11, w8, w9
  40bc24:	lsr	x13, x11, #63
  40bc28:	asr	x11, x11, #34
  40bc2c:	add	w11, w11, w13
  40bc30:	add	w12, w8, #0x9
  40bc34:	msub	w8, w11, w10, w8
  40bc38:	add	w8, w8, #0x30
  40bc3c:	cmp	w12, #0x12
  40bc40:	strb	w8, [x0, #-1]!
  40bc44:	mov	w8, w11
  40bc48:	b.hi	40bc20 <ferror@plt+0x8c50>  // b.pmore
  40bc4c:	ret
  40bc50:	mov	w9, #0x6667                	// #26215
  40bc54:	add	x0, x1, #0xa
  40bc58:	movk	w9, #0x6666, lsl #16
  40bc5c:	mov	w10, #0xa                   	// #10
  40bc60:	smull	x11, w8, w9
  40bc64:	lsr	x13, x11, #63
  40bc68:	asr	x11, x11, #34
  40bc6c:	neg	w12, w8
  40bc70:	add	w11, w11, w13
  40bc74:	madd	w12, w11, w10, w12
  40bc78:	add	w8, w8, #0x9
  40bc7c:	add	w12, w12, #0x30
  40bc80:	cmp	w8, #0x12
  40bc84:	strb	w12, [x0], #-1
  40bc88:	mov	w8, w11
  40bc8c:	b.hi	40bc60 <ferror@plt+0x8c90>  // b.pmore
  40bc90:	mov	w8, #0x2d                  	// #45
  40bc94:	strb	w8, [x0]
  40bc98:	ret
  40bc9c:	mov	w8, #0xcccd                	// #52429
  40bca0:	movk	w8, #0xcccc, lsl #16
  40bca4:	strb	wzr, [x1, #10]!
  40bca8:	mov	w9, #0xa                   	// #10
  40bcac:	umull	x10, w0, w8
  40bcb0:	lsr	x10, x10, #35
  40bcb4:	msub	w11, w10, w9, w0
  40bcb8:	orr	w11, w11, #0x30
  40bcbc:	cmp	w0, #0x9
  40bcc0:	strb	w11, [x1, #-1]!
  40bcc4:	mov	w0, w10
  40bcc8:	b.hi	40bcac <ferror@plt+0x8cdc>  // b.pmore
  40bccc:	mov	x0, x1
  40bcd0:	ret
  40bcd4:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40bcd8:	movk	x8, #0xcccd
  40bcdc:	strb	wzr, [x1, #20]!
  40bce0:	mov	w9, #0xa                   	// #10
  40bce4:	umulh	x10, x0, x8
  40bce8:	lsr	x10, x10, #3
  40bcec:	msub	w11, w10, w9, w0
  40bcf0:	orr	w11, w11, #0x30
  40bcf4:	cmp	x0, #0x9
  40bcf8:	strb	w11, [x1, #-1]!
  40bcfc:	mov	x0, x10
  40bd00:	b.hi	40bce4 <ferror@plt+0x8d14>  // b.pmore
  40bd04:	mov	x0, x1
  40bd08:	ret
  40bd0c:	stp	x29, x30, [sp, #-32]!
  40bd10:	stp	x20, x19, [sp, #16]
  40bd14:	mov	x29, sp
  40bd18:	mov	w19, w1
  40bd1c:	mov	x20, x0
  40bd20:	bl	4028c0 <strlen@plt>
  40bd24:	mov	x1, x0
  40bd28:	mov	x0, x20
  40bd2c:	mov	w2, w19
  40bd30:	ldp	x20, x19, [sp, #16]
  40bd34:	ldp	x29, x30, [sp], #32
  40bd38:	b	40bd3c <ferror@plt+0x8d6c>
  40bd3c:	sub	sp, sp, #0x60
  40bd40:	stp	x29, x30, [sp, #16]
  40bd44:	str	x25, [sp, #32]
  40bd48:	stp	x24, x23, [sp, #48]
  40bd4c:	stp	x22, x21, [sp, #64]
  40bd50:	stp	x20, x19, [sp, #80]
  40bd54:	add	x29, sp, #0x10
  40bd58:	mov	w19, w2
  40bd5c:	mov	x21, x1
  40bd60:	mov	x20, x0
  40bd64:	add	x23, x0, x1
  40bd68:	bl	402d40 <__ctype_get_mb_cur_max@plt>
  40bd6c:	cmp	x0, #0x1
  40bd70:	b.ls	40be60 <ferror@plt+0x8e90>  // b.plast
  40bd74:	cmp	x21, #0x1
  40bd78:	b.lt	40bea4 <ferror@plt+0x8ed4>  // b.tstop
  40bd7c:	adrp	x25, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40bd80:	mov	w21, wzr
  40bd84:	mov	w24, #0x7fffffff            	// #2147483647
  40bd88:	add	x25, x25, #0x3a8
  40bd8c:	ldrb	w8, [x20]
  40bd90:	sub	w8, w8, #0x20
  40bd94:	cmp	w8, #0x5e
  40bd98:	b.hi	40bdc0 <ferror@plt+0x8df0>  // b.pmore
  40bd9c:	adr	x9, 40bdac <ferror@plt+0x8ddc>
  40bda0:	ldrb	w10, [x25, x8]
  40bda4:	add	x9, x9, x10, lsl #2
  40bda8:	br	x9
  40bdac:	add	x20, x20, #0x1
  40bdb0:	add	w21, w21, #0x1
  40bdb4:	cmp	x20, x23
  40bdb8:	b.cc	40bd8c <ferror@plt+0x8dbc>  // b.lo, b.ul, b.last
  40bdbc:	b	40beb0 <ferror@plt+0x8ee0>
  40bdc0:	str	xzr, [x29, #24]
  40bdc4:	sub	x2, x23, x20
  40bdc8:	sub	x0, x29, #0x4
  40bdcc:	add	x3, x29, #0x18
  40bdd0:	mov	x1, x20
  40bdd4:	bl	410104 <ferror@plt+0xd134>
  40bdd8:	cbz	x0, 40bdf4 <ferror@plt+0x8e24>
  40bddc:	mov	x22, x0
  40bde0:	cmn	x0, #0x2
  40bde4:	b.eq	40be48 <ferror@plt+0x8e78>  // b.none
  40bde8:	cmn	x22, #0x1
  40bdec:	b.ne	40bdf8 <ferror@plt+0x8e28>  // b.any
  40bdf0:	b	40be54 <ferror@plt+0x8e84>
  40bdf4:	mov	w22, #0x1                   	// #1
  40bdf8:	ldur	w0, [x29, #-4]
  40bdfc:	bl	402a80 <wcwidth@plt>
  40be00:	tbnz	w0, #31, 40be18 <ferror@plt+0x8e48>
  40be04:	sub	w8, w24, w21
  40be08:	cmp	w0, w8
  40be0c:	b.gt	40beac <ferror@plt+0x8edc>
  40be10:	add	w21, w0, w21
  40be14:	b	40be34 <ferror@plt+0x8e64>
  40be18:	tbnz	w19, #1, 40be58 <ferror@plt+0x8e88>
  40be1c:	ldur	w0, [x29, #-4]
  40be20:	bl	402960 <iswcntrl@plt>
  40be24:	cbnz	w0, 40be34 <ferror@plt+0x8e64>
  40be28:	cmp	w21, w24
  40be2c:	b.eq	40beac <ferror@plt+0x8edc>  // b.none
  40be30:	add	w21, w21, #0x1
  40be34:	add	x0, x29, #0x18
  40be38:	add	x20, x20, x22
  40be3c:	bl	402c60 <mbsinit@plt>
  40be40:	cbz	w0, 40bdc4 <ferror@plt+0x8df4>
  40be44:	b	40bdb4 <ferror@plt+0x8de4>
  40be48:	mov	x20, x23
  40be4c:	tbz	w19, #0, 40bdb0 <ferror@plt+0x8de0>
  40be50:	b	40be58 <ferror@plt+0x8e88>
  40be54:	tbz	w19, #0, 40bdac <ferror@plt+0x8ddc>
  40be58:	mov	w21, #0xffffffff            	// #-1
  40be5c:	b	40beb0 <ferror@plt+0x8ee0>
  40be60:	cmp	x21, #0x1
  40be64:	b.lt	40bea4 <ferror@plt+0x8ed4>  // b.tstop
  40be68:	bl	402cf0 <__ctype_b_loc@plt>
  40be6c:	ldr	x8, [x0]
  40be70:	mov	w21, wzr
  40be74:	ldrb	w9, [x20], #1
  40be78:	ldrh	w9, [x8, x9, lsl #1]
  40be7c:	tbnz	w9, #14, 40be88 <ferror@plt+0x8eb8>
  40be80:	tbnz	w19, #1, 40be58 <ferror@plt+0x8e88>
  40be84:	tbnz	w9, #1, 40be98 <ferror@plt+0x8ec8>
  40be88:	mov	w9, #0x7fffffff            	// #2147483647
  40be8c:	cmp	w21, w9
  40be90:	b.eq	40beac <ferror@plt+0x8edc>  // b.none
  40be94:	add	w21, w21, #0x1
  40be98:	cmp	x20, x23
  40be9c:	b.cc	40be74 <ferror@plt+0x8ea4>  // b.lo, b.ul, b.last
  40bea0:	b	40beb0 <ferror@plt+0x8ee0>
  40bea4:	mov	w21, wzr
  40bea8:	b	40beb0 <ferror@plt+0x8ee0>
  40beac:	mov	w21, #0x7fffffff            	// #2147483647
  40beb0:	mov	w0, w21
  40beb4:	ldp	x20, x19, [sp, #80]
  40beb8:	ldp	x22, x21, [sp, #64]
  40bebc:	ldp	x24, x23, [sp, #48]
  40bec0:	ldr	x25, [sp, #32]
  40bec4:	ldp	x29, x30, [sp, #16]
  40bec8:	add	sp, sp, #0x60
  40becc:	ret
  40bed0:	stp	x29, x30, [sp, #-32]!
  40bed4:	cmp	w0, #0x1
  40bed8:	stp	x20, x19, [sp, #16]
  40bedc:	mov	x29, sp
  40bee0:	b.eq	40bf28 <ferror@plt+0x8f58>  // b.none
  40bee4:	cmp	w0, #0x2
  40bee8:	b.ne	40bf48 <ferror@plt+0x8f78>  // b.any
  40beec:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40bef0:	add	x0, x0, #0x407
  40bef4:	bl	402f60 <getenv@plt>
  40bef8:	bl	40bf8c <ferror@plt+0x8fbc>
  40befc:	mov	x19, x0
  40bf00:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40bf04:	add	x0, x0, #0x417
  40bf08:	bl	402f60 <getenv@plt>
  40bf0c:	bl	40bf8c <ferror@plt+0x8fbc>
  40bf10:	cmp	x0, #0x0
  40bf14:	csinv	x20, x0, xzr, ne  // ne = any
  40bf18:	cmp	x19, x20
  40bf1c:	csel	x0, x19, x20, cc  // cc = lo, ul, last
  40bf20:	cbnz	x19, 40bf80 <ferror@plt+0x8fb0>
  40bf24:	b	40bf2c <ferror@plt+0x8f5c>
  40bf28:	mov	x20, #0xffffffffffffffff    	// #-1
  40bf2c:	bl	40c020 <ferror@plt+0x9050>
  40bf30:	cbnz	x0, 40bf78 <ferror@plt+0x8fa8>
  40bf34:	mov	w0, #0x54                  	// #84
  40bf38:	bl	402e80 <sysconf@plt>
  40bf3c:	cmp	x0, #0x0
  40bf40:	b.gt	40bf78 <ferror@plt+0x8fa8>
  40bf44:	b	40bf74 <ferror@plt+0x8fa4>
  40bf48:	mov	w0, #0x53                  	// #83
  40bf4c:	bl	402e80 <sysconf@plt>
  40bf50:	cmp	x0, #0x1
  40bf54:	b.ne	40bf60 <ferror@plt+0x8f90>  // b.any
  40bf58:	bl	40c020 <ferror@plt+0x9050>
  40bf5c:	cbz	x0, 40bf70 <ferror@plt+0x8fa0>
  40bf60:	cmp	x0, #0x0
  40bf64:	mov	x20, #0xffffffffffffffff    	// #-1
  40bf68:	b.gt	40bf78 <ferror@plt+0x8fa8>
  40bf6c:	b	40bf74 <ferror@plt+0x8fa4>
  40bf70:	mov	x20, #0xffffffffffffffff    	// #-1
  40bf74:	mov	w0, #0x1                   	// #1
  40bf78:	cmp	x0, x20
  40bf7c:	csel	x0, x0, x20, cc  // cc = lo, ul, last
  40bf80:	ldp	x20, x19, [sp, #16]
  40bf84:	ldp	x29, x30, [sp], #32
  40bf88:	ret
  40bf8c:	sub	sp, sp, #0x20
  40bf90:	stp	x29, x30, [sp, #16]
  40bf94:	add	x29, sp, #0x10
  40bf98:	cbz	x0, 40c014 <ferror@plt+0x9044>
  40bf9c:	ldrb	w8, [x0]
  40bfa0:	sub	w9, w8, #0x9
  40bfa4:	cmp	w9, #0x5
  40bfa8:	b.cs	40bfb4 <ferror@plt+0x8fe4>  // b.hs, b.nlast
  40bfac:	add	x0, x0, #0x1
  40bfb0:	b	40bf9c <ferror@plt+0x8fcc>
  40bfb4:	cmp	w8, #0x20
  40bfb8:	b.eq	40bfac <ferror@plt+0x8fdc>  // b.none
  40bfbc:	sub	w8, w8, #0x30
  40bfc0:	cmp	w8, #0x9
  40bfc4:	b.hi	40c010 <ferror@plt+0x9040>  // b.pmore
  40bfc8:	add	x1, sp, #0x8
  40bfcc:	mov	w2, #0xa                   	// #10
  40bfd0:	str	xzr, [sp, #8]
  40bfd4:	bl	4028b0 <strtoul@plt>
  40bfd8:	ldr	x8, [sp, #8]
  40bfdc:	cbz	x8, 40c010 <ferror@plt+0x9040>
  40bfe0:	ldrb	w9, [x8]
  40bfe4:	sub	w10, w9, #0x9
  40bfe8:	cmp	w10, #0x5
  40bfec:	b.cs	40bff8 <ferror@plt+0x9028>  // b.hs, b.nlast
  40bff0:	add	x8, x8, #0x1
  40bff4:	b	40bfe0 <ferror@plt+0x9010>
  40bff8:	cmp	w9, #0x20
  40bffc:	b.eq	40bff0 <ferror@plt+0x9020>  // b.none
  40c000:	cbz	w9, 40c014 <ferror@plt+0x9044>
  40c004:	cmp	w9, #0x2c
  40c008:	b.eq	40c014 <ferror@plt+0x9044>  // b.none
  40c00c:	str	x8, [sp, #8]
  40c010:	mov	x0, xzr
  40c014:	ldp	x29, x30, [sp, #16]
  40c018:	add	sp, sp, #0x20
  40c01c:	ret
  40c020:	sub	sp, sp, #0x90
  40c024:	mov	x2, sp
  40c028:	mov	w1, #0x80                  	// #128
  40c02c:	mov	w0, wzr
  40c030:	stp	x29, x30, [sp, #128]
  40c034:	add	x29, sp, #0x80
  40c038:	bl	402c40 <sched_getaffinity@plt>
  40c03c:	cbz	w0, 40c048 <ferror@plt+0x9078>
  40c040:	mov	x0, xzr
  40c044:	b	40c05c <ferror@plt+0x908c>
  40c048:	mov	x1, sp
  40c04c:	mov	w0, #0x80                  	// #128
  40c050:	bl	402dc0 <__sched_cpucount@plt>
  40c054:	cbz	w0, 40c040 <ferror@plt+0x9070>
  40c058:	sxtw	x0, w0
  40c05c:	ldp	x29, x30, [sp, #128]
  40c060:	add	sp, sp, #0x90
  40c064:	ret
  40c068:	sub	sp, sp, #0x90
  40c06c:	mov	w0, #0x55                  	// #85
  40c070:	stp	x29, x30, [sp, #112]
  40c074:	str	x19, [sp, #128]
  40c078:	add	x29, sp, #0x70
  40c07c:	bl	402e80 <sysconf@plt>
  40c080:	mov	x19, x0
  40c084:	mov	w0, #0x1e                  	// #30
  40c088:	bl	402e80 <sysconf@plt>
  40c08c:	orr	x8, x0, x19
  40c090:	tbnz	x8, #63, 40c0a4 <ferror@plt+0x90d4>
  40c094:	scvtf	d0, x0
  40c098:	scvtf	d1, x19
  40c09c:	fmul	d0, d1, d0
  40c0a0:	b	40c0d0 <ferror@plt+0x9100>
  40c0a4:	mov	x0, sp
  40c0a8:	bl	402910 <sysinfo@plt>
  40c0ac:	cbz	w0, 40c0bc <ferror@plt+0x90ec>
  40c0b0:	mov	x8, #0x4190000000000000    	// #4724276009111650304
  40c0b4:	fmov	d0, x8
  40c0b8:	b	40c0d0 <ferror@plt+0x9100>
  40c0bc:	ldr	d0, [sp, #32]
  40c0c0:	ldr	s1, [sp, #104]
  40c0c4:	ucvtf	d0, d0
  40c0c8:	ucvtf	d1, d1
  40c0cc:	fmul	d0, d0, d1
  40c0d0:	ldr	x19, [sp, #128]
  40c0d4:	ldp	x29, x30, [sp, #112]
  40c0d8:	add	sp, sp, #0x90
  40c0dc:	ret
  40c0e0:	sub	sp, sp, #0x90
  40c0e4:	mov	w0, #0x56                  	// #86
  40c0e8:	stp	x29, x30, [sp, #112]
  40c0ec:	str	x19, [sp, #128]
  40c0f0:	add	x29, sp, #0x70
  40c0f4:	bl	402e80 <sysconf@plt>
  40c0f8:	mov	x19, x0
  40c0fc:	mov	w0, #0x1e                  	// #30
  40c100:	bl	402e80 <sysconf@plt>
  40c104:	orr	x8, x0, x19
  40c108:	tbnz	x8, #63, 40c11c <ferror@plt+0x914c>
  40c10c:	scvtf	d0, x0
  40c110:	scvtf	d1, x19
  40c114:	fmul	d0, d1, d0
  40c118:	b	40c154 <ferror@plt+0x9184>
  40c11c:	mov	x0, sp
  40c120:	bl	402910 <sysinfo@plt>
  40c124:	cbz	w0, 40c134 <ferror@plt+0x9164>
  40c128:	bl	40c068 <ferror@plt+0x9098>
  40c12c:	fmov	d1, #2.500000000000000000e-01
  40c130:	b	40c150 <ferror@plt+0x9180>
  40c134:	ldr	d0, [sp, #40]
  40c138:	ldr	d1, [sp, #56]
  40c13c:	ldr	s2, [sp, #104]
  40c140:	ucvtf	d0, d0
  40c144:	ucvtf	d1, d1
  40c148:	fadd	d0, d0, d1
  40c14c:	ucvtf	d1, d2
  40c150:	fmul	d0, d0, d1
  40c154:	ldr	x19, [sp, #128]
  40c158:	ldp	x29, x30, [sp, #112]
  40c15c:	add	sp, sp, #0x90
  40c160:	ret
  40c164:	stp	x29, x30, [sp, #-64]!
  40c168:	str	x23, [sp, #16]
  40c16c:	stp	x22, x21, [sp, #32]
  40c170:	stp	x20, x19, [sp, #48]
  40c174:	adrp	x23, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c178:	ldr	w8, [x23, #3020]
  40c17c:	ldr	x22, [x0]
  40c180:	mov	x19, x0
  40c184:	mov	w20, w1
  40c188:	mov	x29, sp
  40c18c:	tbnz	w8, #31, 40c1bc <ferror@plt+0x91ec>
  40c190:	mov	x0, x19
  40c194:	mov	w1, w20
  40c198:	bl	402c70 <pipe2@plt>
  40c19c:	mov	w21, w0
  40c1a0:	tbz	w0, #31, 40c1e0 <ferror@plt+0x9210>
  40c1a4:	bl	402f40 <__errno_location@plt>
  40c1a8:	ldr	w8, [x0]
  40c1ac:	cmp	w8, #0x26
  40c1b0:	b.ne	40c1e0 <ferror@plt+0x9210>  // b.any
  40c1b4:	mov	w8, #0xffffffff            	// #-1
  40c1b8:	str	w8, [x23, #3020]
  40c1bc:	mov	w8, #0xf7ff                	// #63487
  40c1c0:	movk	w8, #0xfff7, lsl #16
  40c1c4:	tst	w20, w8
  40c1c8:	b.eq	40c200 <ferror@plt+0x9230>  // b.none
  40c1cc:	bl	402f40 <__errno_location@plt>
  40c1d0:	mov	w8, #0x16                  	// #22
  40c1d4:	str	w8, [x0]
  40c1d8:	mov	w21, #0xffffffff            	// #-1
  40c1dc:	b	40c1e8 <ferror@plt+0x9218>
  40c1e0:	mov	w8, #0x1                   	// #1
  40c1e4:	str	w8, [x23, #3020]
  40c1e8:	mov	w0, w21
  40c1ec:	ldp	x20, x19, [sp, #48]
  40c1f0:	ldp	x22, x21, [sp, #32]
  40c1f4:	ldr	x23, [sp, #16]
  40c1f8:	ldp	x29, x30, [sp], #64
  40c1fc:	ret
  40c200:	mov	x0, x19
  40c204:	bl	402940 <pipe@plt>
  40c208:	tbnz	w0, #31, 40c1d8 <ferror@plt+0x9208>
  40c20c:	tbnz	w20, #11, 40c21c <ferror@plt+0x924c>
  40c210:	tbnz	w20, #19, 40c280 <ferror@plt+0x92b0>
  40c214:	mov	w21, wzr
  40c218:	b	40c1e8 <ferror@plt+0x9218>
  40c21c:	ldr	w0, [x19, #4]
  40c220:	mov	w1, #0x3                   	// #3
  40c224:	mov	w2, wzr
  40c228:	bl	40fd74 <ferror@plt+0xcda4>
  40c22c:	tbnz	w0, #31, 40c2e0 <ferror@plt+0x9310>
  40c230:	ldr	w8, [x19, #4]
  40c234:	orr	w2, w0, #0x800
  40c238:	mov	w1, #0x4                   	// #4
  40c23c:	mov	w0, w8
  40c240:	bl	40fd74 <ferror@plt+0xcda4>
  40c244:	cmn	w0, #0x1
  40c248:	b.eq	40c2e0 <ferror@plt+0x9310>  // b.none
  40c24c:	ldr	w0, [x19]
  40c250:	mov	w1, #0x3                   	// #3
  40c254:	mov	w2, wzr
  40c258:	bl	40fd74 <ferror@plt+0xcda4>
  40c25c:	tbnz	w0, #31, 40c2e0 <ferror@plt+0x9310>
  40c260:	ldr	w8, [x19]
  40c264:	orr	w2, w0, #0x800
  40c268:	mov	w1, #0x4                   	// #4
  40c26c:	mov	w0, w8
  40c270:	bl	40fd74 <ferror@plt+0xcda4>
  40c274:	cmn	w0, #0x1
  40c278:	b.ne	40c210 <ferror@plt+0x9240>  // b.any
  40c27c:	b	40c2e0 <ferror@plt+0x9310>
  40c280:	ldr	w0, [x19, #4]
  40c284:	mov	w1, #0x1                   	// #1
  40c288:	mov	w2, wzr
  40c28c:	bl	40fd74 <ferror@plt+0xcda4>
  40c290:	tbnz	w0, #31, 40c2e0 <ferror@plt+0x9310>
  40c294:	ldr	w8, [x19, #4]
  40c298:	orr	w2, w0, #0x1
  40c29c:	mov	w1, #0x2                   	// #2
  40c2a0:	mov	w0, w8
  40c2a4:	bl	40fd74 <ferror@plt+0xcda4>
  40c2a8:	cmn	w0, #0x1
  40c2ac:	b.eq	40c2e0 <ferror@plt+0x9310>  // b.none
  40c2b0:	ldr	w0, [x19]
  40c2b4:	mov	w1, #0x1                   	// #1
  40c2b8:	mov	w2, wzr
  40c2bc:	bl	40fd74 <ferror@plt+0xcda4>
  40c2c0:	tbnz	w0, #31, 40c2e0 <ferror@plt+0x9310>
  40c2c4:	ldr	w8, [x19]
  40c2c8:	orr	w2, w0, #0x1
  40c2cc:	mov	w1, #0x2                   	// #2
  40c2d0:	mov	w0, w8
  40c2d4:	bl	40fd74 <ferror@plt+0xcda4>
  40c2d8:	cmn	w0, #0x1
  40c2dc:	b.ne	40c214 <ferror@plt+0x9244>  // b.any
  40c2e0:	bl	402f40 <__errno_location@plt>
  40c2e4:	mov	x20, x0
  40c2e8:	ldr	w21, [x0]
  40c2ec:	ldr	w0, [x19]
  40c2f0:	bl	402ba0 <close@plt>
  40c2f4:	ldr	w0, [x19, #4]
  40c2f8:	bl	402ba0 <close@plt>
  40c2fc:	str	x22, [x19]
  40c300:	str	w21, [x20]
  40c304:	b	40c1d8 <ferror@plt+0x9208>
  40c308:	stp	x29, x30, [sp, #-32]!
  40c30c:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40c310:	str	x19, [sp, #16]
  40c314:	mov	w19, #0x1069                	// #4201
  40c318:	add	x0, x0, #0x428
  40c31c:	mov	x29, sp
  40c320:	movk	w19, #0x3, lsl #16
  40c324:	bl	402f60 <getenv@plt>
  40c328:	cbz	x0, 40c374 <ferror@plt+0x93a4>
  40c32c:	ldrb	w8, [x0]
  40c330:	cbz	w8, 40c374 <ferror@plt+0x93a4>
  40c334:	add	x1, x29, #0x18
  40c338:	mov	w2, #0xa                   	// #10
  40c33c:	bl	402d00 <strtol@plt>
  40c340:	ldr	x8, [x29, #24]
  40c344:	ldrb	w8, [x8]
  40c348:	cbnz	w8, 40c374 <ferror@plt+0x93a4>
  40c34c:	mov	w8, #0x7ffffffe            	// #2147483646
  40c350:	cmp	x0, x8
  40c354:	b.gt	40c370 <ferror@plt+0x93a0>
  40c358:	mov	x8, #0xffffffff80000001    	// #-2147483647
  40c35c:	cmp	x0, x8
  40c360:	mov	x19, x0
  40c364:	b.ge	40c374 <ferror@plt+0x93a4>  // b.tcont
  40c368:	mov	x19, #0xffffffff80000000    	// #-2147483648
  40c36c:	b	40c374 <ferror@plt+0x93a4>
  40c370:	mov	w19, #0x7fffffff            	// #2147483647
  40c374:	mov	w0, w19
  40c378:	ldr	x19, [sp, #16]
  40c37c:	ldp	x29, x30, [sp], #32
  40c380:	ret
  40c384:	stp	x29, x30, [sp, #-32]!
  40c388:	stp	x20, x19, [sp, #16]
  40c38c:	mov	x29, sp
  40c390:	cbz	x0, 40c410 <ferror@plt+0x9440>
  40c394:	mov	w1, #0x2f                  	// #47
  40c398:	mov	x19, x0
  40c39c:	bl	402bc0 <strrchr@plt>
  40c3a0:	cmp	x0, #0x0
  40c3a4:	csinc	x20, x19, x0, eq  // eq = none
  40c3a8:	sub	x8, x20, x19
  40c3ac:	cmp	x8, #0x7
  40c3b0:	b.lt	40c3f4 <ferror@plt+0x9424>  // b.tstop
  40c3b4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40c3b8:	sub	x0, x20, #0x7
  40c3bc:	add	x1, x1, #0x470
  40c3c0:	mov	w2, #0x7                   	// #7
  40c3c4:	bl	402ad0 <strncmp@plt>
  40c3c8:	cbnz	w0, 40c3f4 <ferror@plt+0x9424>
  40c3cc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40c3d0:	add	x1, x1, #0x478
  40c3d4:	mov	w2, #0x3                   	// #3
  40c3d8:	mov	x0, x20
  40c3dc:	bl	402ad0 <strncmp@plt>
  40c3e0:	mov	x19, x20
  40c3e4:	cbnz	w0, 40c3f4 <ferror@plt+0x9424>
  40c3e8:	add	x19, x20, #0x3
  40c3ec:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c3f0:	str	x19, [x8, #1384]
  40c3f4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c3f8:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c3fc:	str	x19, [x8, #3024]
  40c400:	str	x19, [x9, #1336]
  40c404:	ldp	x20, x19, [sp, #16]
  40c408:	ldp	x29, x30, [sp], #32
  40c40c:	ret
  40c410:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c414:	ldr	x1, [x8, #1344]
  40c418:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40c41c:	add	x0, x0, #0x438
  40c420:	bl	4028d0 <fputs@plt>
  40c424:	bl	402c20 <abort@plt>
  40c428:	stp	x29, x30, [sp, #-48]!
  40c42c:	str	x21, [sp, #16]
  40c430:	stp	x20, x19, [sp, #32]
  40c434:	mov	x29, sp
  40c438:	mov	x19, x0
  40c43c:	bl	402f40 <__errno_location@plt>
  40c440:	ldr	w21, [x0]
  40c444:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c448:	add	x8, x8, #0xbd8
  40c44c:	cmp	x19, #0x0
  40c450:	mov	x20, x0
  40c454:	csel	x0, x8, x19, eq  // eq = none
  40c458:	mov	w1, #0x38                  	// #56
  40c45c:	bl	40f15c <ferror@plt+0xc18c>
  40c460:	str	w21, [x20]
  40c464:	ldp	x20, x19, [sp, #32]
  40c468:	ldr	x21, [sp, #16]
  40c46c:	ldp	x29, x30, [sp], #48
  40c470:	ret
  40c474:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c478:	add	x8, x8, #0xbd8
  40c47c:	cmp	x0, #0x0
  40c480:	csel	x8, x8, x0, eq  // eq = none
  40c484:	ldr	w0, [x8]
  40c488:	ret
  40c48c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c490:	add	x8, x8, #0xbd8
  40c494:	cmp	x0, #0x0
  40c498:	csel	x8, x8, x0, eq  // eq = none
  40c49c:	str	w1, [x8]
  40c4a0:	ret
  40c4a4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c4a8:	add	x8, x8, #0xbd8
  40c4ac:	cmp	x0, #0x0
  40c4b0:	ubfx	w9, w1, #5, #3
  40c4b4:	csel	x8, x8, x0, eq  // eq = none
  40c4b8:	add	x8, x8, w9, uxtw #2
  40c4bc:	ldr	w9, [x8, #8]
  40c4c0:	lsr	w10, w9, w1
  40c4c4:	and	w0, w10, #0x1
  40c4c8:	and	w10, w2, #0x1
  40c4cc:	eor	w10, w0, w10
  40c4d0:	lsl	w10, w10, w1
  40c4d4:	eor	w9, w10, w9
  40c4d8:	str	w9, [x8, #8]
  40c4dc:	ret
  40c4e0:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c4e4:	add	x8, x8, #0xbd8
  40c4e8:	cmp	x0, #0x0
  40c4ec:	csel	x8, x8, x0, eq  // eq = none
  40c4f0:	ldr	w0, [x8, #4]
  40c4f4:	str	w1, [x8, #4]
  40c4f8:	ret
  40c4fc:	stp	x29, x30, [sp, #-16]!
  40c500:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c504:	add	x8, x8, #0xbd8
  40c508:	cmp	x0, #0x0
  40c50c:	csel	x8, x8, x0, eq  // eq = none
  40c510:	mov	w9, #0xa                   	// #10
  40c514:	mov	x29, sp
  40c518:	str	w9, [x8]
  40c51c:	cbz	x1, 40c530 <ferror@plt+0x9560>
  40c520:	cbz	x2, 40c530 <ferror@plt+0x9560>
  40c524:	stp	x1, x2, [x8, #40]
  40c528:	ldp	x29, x30, [sp], #16
  40c52c:	ret
  40c530:	bl	402c20 <abort@plt>
  40c534:	sub	sp, sp, #0x60
  40c538:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40c53c:	add	x8, x8, #0xbd8
  40c540:	cmp	x4, #0x0
  40c544:	stp	x29, x30, [sp, #16]
  40c548:	str	x25, [sp, #32]
  40c54c:	stp	x24, x23, [sp, #48]
  40c550:	stp	x22, x21, [sp, #64]
  40c554:	stp	x20, x19, [sp, #80]
  40c558:	add	x29, sp, #0x10
  40c55c:	mov	x19, x3
  40c560:	mov	x20, x2
  40c564:	mov	x21, x1
  40c568:	mov	x22, x0
  40c56c:	csel	x24, x8, x4, eq  // eq = none
  40c570:	bl	402f40 <__errno_location@plt>
  40c574:	ldp	w4, w5, [x24]
  40c578:	ldp	x7, x8, [x24, #40]
  40c57c:	ldr	w25, [x0]
  40c580:	mov	x23, x0
  40c584:	add	x6, x24, #0x8
  40c588:	mov	x0, x22
  40c58c:	mov	x1, x21
  40c590:	mov	x2, x20
  40c594:	mov	x3, x19
  40c598:	str	x8, [sp]
  40c59c:	bl	40c5c0 <ferror@plt+0x95f0>
  40c5a0:	str	w25, [x23]
  40c5a4:	ldp	x20, x19, [sp, #80]
  40c5a8:	ldp	x22, x21, [sp, #64]
  40c5ac:	ldp	x24, x23, [sp, #48]
  40c5b0:	ldr	x25, [sp, #32]
  40c5b4:	ldp	x29, x30, [sp, #16]
  40c5b8:	add	sp, sp, #0x60
  40c5bc:	ret
  40c5c0:	sub	sp, sp, #0x120
  40c5c4:	stp	x29, x30, [sp, #192]
  40c5c8:	add	x29, sp, #0xc0
  40c5cc:	ldr	x8, [x29, #96]
  40c5d0:	stp	x28, x27, [sp, #208]
  40c5d4:	stp	x26, x25, [sp, #224]
  40c5d8:	stp	x24, x23, [sp, #240]
  40c5dc:	stp	x22, x21, [sp, #256]
  40c5e0:	stp	x20, x19, [sp, #272]
  40c5e4:	str	x7, [sp, #88]
  40c5e8:	stur	x6, [x29, #-40]
  40c5ec:	mov	w19, w5
  40c5f0:	mov	w22, w4
  40c5f4:	mov	x28, x3
  40c5f8:	mov	x20, x2
  40c5fc:	mov	x24, x1
  40c600:	stur	x8, [x29, #-88]
  40c604:	mov	x21, x0
  40c608:	bl	402d40 <__ctype_get_mb_cur_max@plt>
  40c60c:	mov	w4, w22
  40c610:	mov	w8, wzr
  40c614:	mov	w14, wzr
  40c618:	str	w19, [sp, #80]
  40c61c:	ubfx	w19, w19, #1, #1
  40c620:	add	x9, x20, #0x1
  40c624:	mov	w25, #0x1                   	// #1
  40c628:	str	x0, [sp, #48]
  40c62c:	str	xzr, [sp, #64]
  40c630:	stur	xzr, [x29, #-64]
  40c634:	stur	xzr, [x29, #-32]
  40c638:	str	wzr, [sp, #72]
  40c63c:	stur	x20, [x29, #-80]
  40c640:	str	x9, [sp, #96]
  40c644:	cmp	w4, #0xa
  40c648:	b.hi	40d1e0 <ferror@plt+0xa210>  // b.pmore
  40c64c:	adrp	x12, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40c650:	mov	w9, w4
  40c654:	add	x12, x12, #0x480
  40c658:	mov	x22, x24
  40c65c:	adr	x10, 40c67c <ferror@plt+0x96ac>
  40c660:	ldrb	w11, [x12, x9]
  40c664:	add	x10, x10, x11, lsl #2
  40c668:	ldur	x24, [x29, #-80]
  40c66c:	mov	x20, xzr
  40c670:	mov	w16, wzr
  40c674:	mov	w9, #0x1                   	// #1
  40c678:	br	x10
  40c67c:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40c680:	add	x0, x0, #0x5dc
  40c684:	mov	w1, w4
  40c688:	mov	w20, w4
  40c68c:	mov	w23, w14
  40c690:	bl	40d90c <ferror@plt+0xa93c>
  40c694:	str	x0, [sp, #88]
  40c698:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40c69c:	add	x0, x0, #0x7fc
  40c6a0:	mov	w1, w20
  40c6a4:	bl	40d90c <ferror@plt+0xa93c>
  40c6a8:	mov	w14, w23
  40c6ac:	mov	w4, w20
  40c6b0:	stur	x0, [x29, #-88]
  40c6b4:	tbnz	w19, #0, 40c6f4 <ferror@plt+0x9724>
  40c6b8:	ldr	x8, [sp, #88]
  40c6bc:	ldrb	w9, [x8]
  40c6c0:	cbz	w9, 40c6f4 <ferror@plt+0x9724>
  40c6c4:	mov	w27, w14
  40c6c8:	mov	w26, w4
  40c6cc:	mov	x10, xzr
  40c6d0:	add	x8, x8, #0x1
  40c6d4:	cmp	x10, x22
  40c6d8:	b.cs	40c6e0 <ferror@plt+0x9710>  // b.hs, b.nlast
  40c6dc:	strb	w9, [x21, x10]
  40c6e0:	ldrb	w9, [x8, x10]
  40c6e4:	add	x20, x10, #0x1
  40c6e8:	mov	x10, x20
  40c6ec:	cbnz	w9, 40c6d4 <ferror@plt+0x9704>
  40c6f0:	b	40c700 <ferror@plt+0x9730>
  40c6f4:	mov	w27, w14
  40c6f8:	mov	w26, w4
  40c6fc:	mov	x20, xzr
  40c700:	ldur	x23, [x29, #-88]
  40c704:	mov	x0, x23
  40c708:	bl	4028c0 <strlen@plt>
  40c70c:	stur	x0, [x29, #-32]
  40c710:	stur	x23, [x29, #-64]
  40c714:	mov	w9, #0x1                   	// #1
  40c718:	mov	w16, w19
  40c71c:	mov	w4, w26
  40c720:	mov	w14, w27
  40c724:	b	40c7a0 <ferror@plt+0x97d0>
  40c728:	mov	w8, #0x1                   	// #1
  40c72c:	b	40c77c <ferror@plt+0x97ac>
  40c730:	mov	w4, wzr
  40c734:	mov	x20, xzr
  40c738:	mov	w16, wzr
  40c73c:	mov	w9, w8
  40c740:	b	40c7a0 <ferror@plt+0x97d0>
  40c744:	tbnz	w19, #0, 40c77c <ferror@plt+0x97ac>
  40c748:	mov	w9, w8
  40c74c:	b	40d094 <ferror@plt+0xa0c4>
  40c750:	tbz	w19, #0, 40d05c <ferror@plt+0xa08c>
  40c754:	mov	w8, #0x1                   	// #1
  40c758:	stur	x8, [x29, #-32]
  40c75c:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40c760:	add	x8, x8, #0xee9
  40c764:	mov	x20, xzr
  40c768:	mov	w4, #0x5                   	// #5
  40c76c:	stur	x8, [x29, #-64]
  40c770:	mov	w9, #0x1                   	// #1
  40c774:	b	40c79c <ferror@plt+0x97cc>
  40c778:	tbz	w19, #0, 40d090 <ferror@plt+0xa0c0>
  40c77c:	mov	w9, #0x1                   	// #1
  40c780:	stur	x9, [x29, #-32]
  40c784:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40c788:	add	x9, x9, #0x7fc
  40c78c:	mov	x20, xzr
  40c790:	mov	w4, #0x2                   	// #2
  40c794:	stur	x9, [x29, #-64]
  40c798:	mov	w9, w8
  40c79c:	mov	w16, #0x1                   	// #1
  40c7a0:	mov	w15, w9
  40c7a4:	ldp	x8, x9, [x29, #-40]
  40c7a8:	eor	w17, w16, #0x1
  40c7ac:	stur	w17, [x29, #-68]
  40c7b0:	mov	x23, xzr
  40c7b4:	cmp	x8, #0x0
  40c7b8:	cset	w8, eq  // eq = none
  40c7bc:	cmp	x9, #0x0
  40c7c0:	cset	w9, ne  // ne = any
  40c7c4:	cmp	w4, #0x2
  40c7c8:	cset	w10, ne  // ne = any
  40c7cc:	and	w13, w10, w15
  40c7d0:	and	w12, w9, w16
  40c7d4:	orr	w10, w10, w17
  40c7d8:	and	w17, w9, w13
  40c7dc:	orr	w9, w13, w16
  40c7e0:	eor	w9, w9, #0x1
  40c7e4:	cset	w11, eq  // eq = none
  40c7e8:	orr	w8, w8, w9
  40c7ec:	and	w12, w15, w12
  40c7f0:	str	w10, [sp, #84]
  40c7f4:	and	w10, w11, w16
  40c7f8:	stur	w8, [x29, #-24]
  40c7fc:	eor	w8, w15, #0x1
  40c800:	str	w12, [sp, #56]
  40c804:	str	w10, [sp, #76]
  40c808:	stur	w15, [x29, #-72]
  40c80c:	str	w8, [sp, #60]
  40c810:	stp	w16, w4, [x29, #-48]
  40c814:	stur	w17, [x29, #-52]
  40c818:	cmn	x28, #0x1
  40c81c:	b.eq	40c82c <ferror@plt+0x985c>  // b.none
  40c820:	cmp	x23, x28
  40c824:	b.ne	40c834 <ferror@plt+0x9864>  // b.any
  40c828:	b	40cfec <ferror@plt+0xa01c>
  40c82c:	ldrb	w8, [x24, x23]
  40c830:	cbz	w8, 40cff4 <ferror@plt+0xa024>
  40c834:	cbz	w17, 40c874 <ferror@plt+0x98a4>
  40c838:	ldur	x8, [x29, #-32]
  40c83c:	cmp	x8, #0x2
  40c840:	add	x19, x23, x8
  40c844:	b.cc	40c86c <ferror@plt+0x989c>  // b.lo, b.ul, b.last
  40c848:	cmn	x28, #0x1
  40c84c:	b.ne	40c86c <ferror@plt+0x989c>  // b.any
  40c850:	mov	x0, x24
  40c854:	mov	w26, w14
  40c858:	bl	4028c0 <strlen@plt>
  40c85c:	ldp	w17, w16, [x29, #-52]
  40c860:	ldur	w4, [x29, #-44]
  40c864:	mov	w14, w26
  40c868:	mov	x28, x0
  40c86c:	cmp	x19, x28
  40c870:	b.ls	40c87c <ferror@plt+0x98ac>  // b.plast
  40c874:	mov	w27, wzr
  40c878:	b	40c8b4 <ferror@plt+0x98e4>
  40c87c:	ldur	x1, [x29, #-64]
  40c880:	ldur	x2, [x29, #-32]
  40c884:	add	x0, x24, x23
  40c888:	mov	w19, w14
  40c88c:	bl	402b70 <bcmp@plt>
  40c890:	ldur	w9, [x29, #-68]
  40c894:	cmp	w0, #0x0
  40c898:	cset	w8, ne  // ne = any
  40c89c:	cset	w27, eq  // eq = none
  40c8a0:	orr	w8, w8, w9
  40c8a4:	tbz	w8, #0, 40d0ec <ferror@plt+0xa11c>
  40c8a8:	ldp	w16, w4, [x29, #-48]
  40c8ac:	ldur	w17, [x29, #-52]
  40c8b0:	mov	w14, w19
  40c8b4:	ldrb	w19, [x24, x23]
  40c8b8:	cmp	w19, #0x7e
  40c8bc:	b.hi	40cad4 <ferror@plt+0x9b04>  // b.pmore
  40c8c0:	adrp	x13, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40c8c4:	add	x13, x13, #0x48b
  40c8c8:	adr	x12, 40c8ec <ferror@plt+0x991c>
  40c8cc:	ldrb	w9, [x13, x19]
  40c8d0:	add	x12, x12, x9, lsl #2
  40c8d4:	mov	w10, wzr
  40c8d8:	mov	w8, wzr
  40c8dc:	mov	w26, #0x1                   	// #1
  40c8e0:	mov	w11, #0x6e                  	// #110
  40c8e4:	mov	w9, #0x61                  	// #97
  40c8e8:	br	x12
  40c8ec:	ldur	w9, [x29, #-24]
  40c8f0:	tbnz	w9, #0, 40c910 <ferror@plt+0x9940>
  40c8f4:	ldur	x10, [x29, #-40]
  40c8f8:	lsr	w9, w19, #5
  40c8fc:	ldr	w9, [x10, w9, uxtw #2]
  40c900:	lsr	w9, w9, w19
  40c904:	tbz	w9, #0, 40c910 <ferror@plt+0x9940>
  40c908:	mov	w9, w19
  40c90c:	b	40c918 <ferror@plt+0x9948>
  40c910:	mov	w9, w19
  40c914:	cbz	w27, 40cb38 <ferror@plt+0x9b68>
  40c918:	tbnz	w16, #0, 40d0c4 <ferror@plt+0xa0f4>
  40c91c:	cmp	w4, #0x2
  40c920:	cset	w8, ne  // ne = any
  40c924:	orr	w8, w8, w14
  40c928:	tbnz	w8, #0, 40c96c <ferror@plt+0x999c>
  40c92c:	cmp	x20, x22
  40c930:	b.cs	40c93c <ferror@plt+0x996c>  // b.hs, b.nlast
  40c934:	mov	w8, #0x27                  	// #39
  40c938:	strb	w8, [x21, x20]
  40c93c:	add	x8, x20, #0x1
  40c940:	cmp	x8, x22
  40c944:	b.cs	40c950 <ferror@plt+0x9980>  // b.hs, b.nlast
  40c948:	mov	w10, #0x24                  	// #36
  40c94c:	strb	w10, [x21, x8]
  40c950:	add	x8, x20, #0x2
  40c954:	cmp	x8, x22
  40c958:	b.cs	40c964 <ferror@plt+0x9994>  // b.hs, b.nlast
  40c95c:	mov	w10, #0x27                  	// #39
  40c960:	strb	w10, [x21, x8]
  40c964:	add	x20, x20, #0x3
  40c968:	mov	w14, #0x1                   	// #1
  40c96c:	cmp	x20, x22
  40c970:	b.cs	40c97c <ferror@plt+0x99ac>  // b.hs, b.nlast
  40c974:	mov	w8, #0x5c                  	// #92
  40c978:	strb	w8, [x21, x20]
  40c97c:	add	x20, x20, #0x1
  40c980:	b	40cb70 <ferror@plt+0x9ba0>
  40c984:	cmp	x28, #0x1
  40c988:	b.eq	40c9ac <ferror@plt+0x99dc>  // b.none
  40c98c:	cmn	x28, #0x1
  40c990:	b.ne	40c9b0 <ferror@plt+0x99e0>  // b.any
  40c994:	ldrb	w8, [x24, #1]
  40c998:	cbz	w8, 40c9ac <ferror@plt+0x99dc>
  40c99c:	mov	w8, wzr
  40c9a0:	mov	w26, wzr
  40c9a4:	mov	x28, #0xffffffffffffffff    	// #-1
  40c9a8:	b	40c8ec <ferror@plt+0x991c>
  40c9ac:	cbz	x23, 40c9bc <ferror@plt+0x99ec>
  40c9b0:	mov	w8, wzr
  40c9b4:	mov	w26, wzr
  40c9b8:	b	40c8ec <ferror@plt+0x991c>
  40c9bc:	mov	w10, #0x1                   	// #1
  40c9c0:	cmp	w4, #0x2
  40c9c4:	b.ne	40c9cc <ferror@plt+0x99fc>  // b.any
  40c9c8:	tbnz	w16, #0, 40d0c4 <ferror@plt+0xa0f4>
  40c9cc:	mov	w8, wzr
  40c9d0:	mov	w26, w10
  40c9d4:	b	40c8ec <ferror@plt+0x991c>
  40c9d8:	cmp	w4, #0x2
  40c9dc:	b.ne	40cb20 <ferror@plt+0x9b50>  // b.any
  40c9e0:	tbz	w16, #0, 40cb2c <ferror@plt+0x9b5c>
  40c9e4:	b	40d0c4 <ferror@plt+0xa0f4>
  40c9e8:	mov	w9, #0x66                  	// #102
  40c9ec:	b	40cb8c <ferror@plt+0x9bbc>
  40c9f0:	mov	w11, #0x74                  	// #116
  40c9f4:	b	40ca04 <ferror@plt+0x9a34>
  40c9f8:	mov	w9, #0x62                  	// #98
  40c9fc:	b	40cb8c <ferror@plt+0x9bbc>
  40ca00:	mov	w11, #0x72                  	// #114
  40ca04:	ldr	w8, [sp, #84]
  40ca08:	mov	w9, w11
  40ca0c:	tbnz	w8, #0, 40cb8c <ferror@plt+0x9bbc>
  40ca10:	b	40d0c4 <ferror@plt+0xa0f4>
  40ca14:	ldur	w8, [x29, #-72]
  40ca18:	tbz	w8, #0, 40cba0 <ferror@plt+0x9bd0>
  40ca1c:	cmp	w4, #0x2
  40ca20:	tbnz	w16, #0, 40d1d4 <ferror@plt+0xa204>
  40ca24:	cset	w8, ne  // ne = any
  40ca28:	orr	w8, w8, w14
  40ca2c:	tbz	w8, #0, 40ced4 <ferror@plt+0x9f04>
  40ca30:	mov	x8, x20
  40ca34:	b	40cf14 <ferror@plt+0x9f44>
  40ca38:	cmp	w4, #0x5
  40ca3c:	b.eq	40ccc4 <ferror@plt+0x9cf4>  // b.none
  40ca40:	cmp	w4, #0x2
  40ca44:	b.ne	40cd74 <ferror@plt+0x9da4>  // b.any
  40ca48:	tbz	w16, #0, 40cd74 <ferror@plt+0x9da4>
  40ca4c:	b	40d0c4 <ferror@plt+0xa0f4>
  40ca50:	mov	w9, #0x76                  	// #118
  40ca54:	b	40cb8c <ferror@plt+0x9bbc>
  40ca58:	cmp	w4, #0x2
  40ca5c:	b.ne	40cbb0 <ferror@plt+0x9be0>  // b.any
  40ca60:	tbnz	w16, #0, 40d0c4 <ferror@plt+0xa0f4>
  40ca64:	ldr	x10, [sp, #64]
  40ca68:	cmp	x22, #0x0
  40ca6c:	cset	w8, eq  // eq = none
  40ca70:	cmp	x10, #0x0
  40ca74:	cset	w9, ne  // ne = any
  40ca78:	orr	w8, w9, w8
  40ca7c:	cmp	w8, #0x0
  40ca80:	csel	x10, x10, x22, ne  // ne = any
  40ca84:	csel	x22, x22, xzr, ne  // ne = any
  40ca88:	cmp	x20, x22
  40ca8c:	str	x10, [sp, #64]
  40ca90:	b.cs	40ca9c <ferror@plt+0x9acc>  // b.hs, b.nlast
  40ca94:	mov	w8, #0x27                  	// #39
  40ca98:	strb	w8, [x21, x20]
  40ca9c:	add	x8, x20, #0x1
  40caa0:	cmp	x8, x22
  40caa4:	b.cs	40cab0 <ferror@plt+0x9ae0>  // b.hs, b.nlast
  40caa8:	mov	w9, #0x5c                  	// #92
  40caac:	strb	w9, [x21, x8]
  40cab0:	add	x8, x20, #0x2
  40cab4:	cmp	x8, x22
  40cab8:	b.cs	40cac4 <ferror@plt+0x9af4>  // b.hs, b.nlast
  40cabc:	mov	w9, #0x27                  	// #39
  40cac0:	strb	w9, [x21, x8]
  40cac4:	mov	w14, wzr
  40cac8:	mov	w8, wzr
  40cacc:	add	x20, x20, #0x3
  40cad0:	b	40cbb4 <ferror@plt+0x9be4>
  40cad4:	ldr	x8, [sp, #48]
  40cad8:	str	w14, [sp, #28]
  40cadc:	cmp	x8, #0x1
  40cae0:	b.ne	40cbc8 <ferror@plt+0x9bf8>  // b.any
  40cae4:	bl	402cf0 <__ctype_b_loc@plt>
  40cae8:	ldr	x8, [x0]
  40caec:	mov	w11, #0x1                   	// #1
  40caf0:	ldrh	w8, [x8, x19, lsl #1]
  40caf4:	ubfx	w26, w8, #14, #1
  40caf8:	ldr	w8, [sp, #60]
  40cafc:	ldp	w16, w4, [x29, #-48]
  40cb00:	ldr	w14, [sp, #28]
  40cb04:	ldur	w17, [x29, #-52]
  40cb08:	cmp	x11, #0x1
  40cb0c:	orr	w8, w26, w8
  40cb10:	b.hi	40cd84 <ferror@plt+0x9db4>  // b.pmore
  40cb14:	tbz	w8, #0, 40cd84 <ferror@plt+0x9db4>
  40cb18:	mov	w8, wzr
  40cb1c:	b	40c8ec <ferror@plt+0x991c>
  40cb20:	ldr	w8, [sp, #56]
  40cb24:	mov	w9, #0x5c                  	// #92
  40cb28:	tbz	w8, #0, 40cb8c <ferror@plt+0x9bbc>
  40cb2c:	mov	w8, wzr
  40cb30:	mov	w26, wzr
  40cb34:	mov	w19, #0x5c                  	// #92
  40cb38:	tbnz	w8, #0, 40cb6c <ferror@plt+0x9b9c>
  40cb3c:	tbz	w14, #0, 40cb6c <ferror@plt+0x9b9c>
  40cb40:	cmp	x20, x22
  40cb44:	b.cs	40cb50 <ferror@plt+0x9b80>  // b.hs, b.nlast
  40cb48:	mov	w8, #0x27                  	// #39
  40cb4c:	strb	w8, [x21, x20]
  40cb50:	add	x8, x20, #0x1
  40cb54:	cmp	x8, x22
  40cb58:	b.cs	40cb64 <ferror@plt+0x9b94>  // b.hs, b.nlast
  40cb5c:	mov	w9, #0x27                  	// #39
  40cb60:	strb	w9, [x21, x8]
  40cb64:	mov	w14, wzr
  40cb68:	add	x20, x20, #0x2
  40cb6c:	mov	w9, w19
  40cb70:	cmp	x20, x22
  40cb74:	b.cs	40cb7c <ferror@plt+0x9bac>  // b.hs, b.nlast
  40cb78:	strb	w9, [x21, x20]
  40cb7c:	add	x20, x20, #0x1
  40cb80:	and	w25, w25, w26
  40cb84:	add	x23, x23, #0x1
  40cb88:	b	40c818 <ferror@plt+0x9848>
  40cb8c:	ldur	w10, [x29, #-72]
  40cb90:	mov	w8, wzr
  40cb94:	mov	w26, wzr
  40cb98:	tbz	w10, #0, 40c8ec <ferror@plt+0x991c>
  40cb9c:	b	40c918 <ferror@plt+0x9948>
  40cba0:	ldr	w8, [sp, #80]
  40cba4:	tbnz	w8, #0, 40cb84 <ferror@plt+0x9bb4>
  40cba8:	mov	w19, wzr
  40cbac:	b	40c9b0 <ferror@plt+0x99e0>
  40cbb0:	mov	w8, wzr
  40cbb4:	mov	w9, #0x1                   	// #1
  40cbb8:	mov	w19, #0x27                  	// #39
  40cbbc:	str	w9, [sp, #72]
  40cbc0:	mov	w26, #0x1                   	// #1
  40cbc4:	b	40c8ec <ferror@plt+0x991c>
  40cbc8:	cmn	x28, #0x1
  40cbcc:	stur	xzr, [x29, #-16]
  40cbd0:	b.ne	40cbe0 <ferror@plt+0x9c10>  // b.any
  40cbd4:	mov	x0, x24
  40cbd8:	bl	4028c0 <strlen@plt>
  40cbdc:	mov	x28, x0
  40cbe0:	ldr	x8, [sp, #96]
  40cbe4:	mov	x11, xzr
  40cbe8:	mov	w26, #0x1                   	// #1
  40cbec:	str	x21, [sp, #32]
  40cbf0:	add	x8, x8, x23
  40cbf4:	str	x8, [sp, #16]
  40cbf8:	add	x21, x11, x23
  40cbfc:	add	x1, x24, x21
  40cc00:	sub	x2, x28, x21
  40cc04:	sub	x0, x29, #0x14
  40cc08:	sub	x3, x29, #0x10
  40cc0c:	str	x11, [sp, #40]
  40cc10:	bl	410104 <ferror@plt+0xd134>
  40cc14:	cbz	x0, 40cfcc <ferror@plt+0x9ffc>
  40cc18:	mov	x24, x0
  40cc1c:	cmn	x0, #0x1
  40cc20:	b.eq	40cfc8 <ferror@plt+0x9ff8>  // b.none
  40cc24:	cmn	x24, #0x2
  40cc28:	b.eq	40cf8c <ferror@plt+0x9fbc>  // b.none
  40cc2c:	ldr	w9, [sp, #76]
  40cc30:	ldr	x21, [sp, #32]
  40cc34:	cmp	x24, #0x2
  40cc38:	cset	w8, cc  // cc = lo, ul, last
  40cc3c:	eor	w9, w9, #0x1
  40cc40:	mov	x12, #0x2b                  	// #43
  40cc44:	orr	w8, w9, w8
  40cc48:	mov	w11, #0x1                   	// #1
  40cc4c:	movk	x12, #0x2, lsl #32
  40cc50:	tbnz	w8, #0, 40cc8c <ferror@plt+0x9cbc>
  40cc54:	ldr	x9, [sp, #40]
  40cc58:	ldr	x10, [sp, #16]
  40cc5c:	sub	x8, x24, #0x1
  40cc60:	add	x9, x10, x9
  40cc64:	ldrb	w10, [x9]
  40cc68:	sub	w10, w10, #0x5b
  40cc6c:	cmp	w10, #0x21
  40cc70:	b.hi	40cc80 <ferror@plt+0x9cb0>  // b.pmore
  40cc74:	lsl	x10, x11, x10
  40cc78:	tst	x10, x12
  40cc7c:	b.ne	40d0f8 <ferror@plt+0xa128>  // b.any
  40cc80:	subs	x8, x8, #0x1
  40cc84:	add	x9, x9, #0x1
  40cc88:	b.ne	40cc64 <ferror@plt+0x9c94>  // b.any
  40cc8c:	ldur	w0, [x29, #-20]
  40cc90:	bl	402f20 <iswprint@plt>
  40cc94:	ldr	x21, [sp, #40]
  40cc98:	cmp	w0, #0x0
  40cc9c:	cset	w8, ne  // ne = any
  40cca0:	sub	x0, x29, #0x10
  40cca4:	and	w26, w26, w8
  40cca8:	add	x21, x24, x21
  40ccac:	bl	402c60 <mbsinit@plt>
  40ccb0:	mov	x11, x21
  40ccb4:	ldr	x21, [sp, #32]
  40ccb8:	ldur	x24, [x29, #-80]
  40ccbc:	cbz	w0, 40cbf8 <ferror@plt+0x9c28>
  40ccc0:	b	40caf8 <ferror@plt+0x9b28>
  40ccc4:	ldr	w8, [sp, #80]
  40ccc8:	tbz	w8, #2, 40cd74 <ferror@plt+0x9da4>
  40cccc:	add	x9, x23, #0x2
  40ccd0:	cmp	x9, x28
  40ccd4:	b.cs	40cd74 <ferror@plt+0x9da4>  // b.hs, b.nlast
  40ccd8:	add	x8, x23, x24
  40ccdc:	ldrb	w8, [x8, #1]
  40cce0:	cmp	w8, #0x3f
  40cce4:	b.ne	40cd74 <ferror@plt+0x9da4>  // b.any
  40cce8:	ldrb	w19, [x24, x9]
  40ccec:	mov	w8, wzr
  40ccf0:	cmp	w19, #0x3e
  40ccf4:	b.hi	40cfe0 <ferror@plt+0xa010>  // b.pmore
  40ccf8:	mov	w10, #0x1                   	// #1
  40ccfc:	mov	x11, #0xa38200000000        	// #179778741075968
  40cd00:	lsl	x10, x10, x19
  40cd04:	movk	x11, #0x7000, lsl #48
  40cd08:	tst	x10, x11
  40cd0c:	b.eq	40cfe0 <ferror@plt+0xa010>  // b.none
  40cd10:	tbnz	w16, #0, 40d0c4 <ferror@plt+0xa0f4>
  40cd14:	cmp	x20, x22
  40cd18:	b.cs	40cd24 <ferror@plt+0x9d54>  // b.hs, b.nlast
  40cd1c:	mov	w8, #0x3f                  	// #63
  40cd20:	strb	w8, [x21, x20]
  40cd24:	add	x8, x20, #0x1
  40cd28:	cmp	x8, x22
  40cd2c:	b.cs	40cd38 <ferror@plt+0x9d68>  // b.hs, b.nlast
  40cd30:	mov	w10, #0x22                  	// #34
  40cd34:	strb	w10, [x21, x8]
  40cd38:	add	x8, x20, #0x2
  40cd3c:	cmp	x8, x22
  40cd40:	b.cs	40cd4c <ferror@plt+0x9d7c>  // b.hs, b.nlast
  40cd44:	mov	w10, #0x22                  	// #34
  40cd48:	strb	w10, [x21, x8]
  40cd4c:	add	x8, x20, #0x3
  40cd50:	cmp	x8, x22
  40cd54:	b.cs	40cd60 <ferror@plt+0x9d90>  // b.hs, b.nlast
  40cd58:	mov	w10, #0x3f                  	// #63
  40cd5c:	strb	w10, [x21, x8]
  40cd60:	mov	w8, wzr
  40cd64:	mov	w26, wzr
  40cd68:	add	x20, x20, #0x4
  40cd6c:	mov	x23, x9
  40cd70:	b	40c8ec <ferror@plt+0x991c>
  40cd74:	mov	w8, wzr
  40cd78:	mov	w26, wzr
  40cd7c:	mov	w19, #0x3f                  	// #63
  40cd80:	b	40c8ec <ferror@plt+0x991c>
  40cd84:	mov	w10, wzr
  40cd88:	add	x9, x11, x23
  40cd8c:	tbz	w8, #0, 40cdec <ferror@plt+0x9e1c>
  40cd90:	b	40ce98 <ferror@plt+0x9ec8>
  40cd94:	and	w12, w10, #0x1
  40cd98:	orn	w12, w12, w14
  40cd9c:	tbnz	w12, #0, 40cdcc <ferror@plt+0x9dfc>
  40cda0:	cmp	x20, x22
  40cda4:	b.cs	40cdb0 <ferror@plt+0x9de0>  // b.hs, b.nlast
  40cda8:	mov	w12, #0x27                  	// #39
  40cdac:	strb	w12, [x21, x20]
  40cdb0:	add	x12, x20, #0x1
  40cdb4:	cmp	x12, x22
  40cdb8:	b.cs	40cdc4 <ferror@plt+0x9df4>  // b.hs, b.nlast
  40cdbc:	mov	w13, #0x27                  	// #39
  40cdc0:	strb	w13, [x21, x12]
  40cdc4:	mov	w14, wzr
  40cdc8:	add	x20, x20, #0x2
  40cdcc:	cmp	x20, x22
  40cdd0:	b.cs	40cdd8 <ferror@plt+0x9e08>  // b.hs, b.nlast
  40cdd4:	strb	w19, [x21, x20]
  40cdd8:	ldr	x12, [sp, #96]
  40cddc:	add	x20, x20, #0x1
  40cde0:	ldrb	w19, [x12, x23]
  40cde4:	mov	x23, x11
  40cde8:	tbnz	w8, #0, 40ce98 <ferror@plt+0x9ec8>
  40cdec:	tbnz	w16, #0, 40d0c4 <ferror@plt+0xa0f4>
  40cdf0:	cmp	w4, #0x2
  40cdf4:	cset	w10, ne  // ne = any
  40cdf8:	orr	w10, w10, w14
  40cdfc:	tbnz	w10, #0, 40ce40 <ferror@plt+0x9e70>
  40ce00:	cmp	x20, x22
  40ce04:	b.cs	40ce10 <ferror@plt+0x9e40>  // b.hs, b.nlast
  40ce08:	mov	w10, #0x27                  	// #39
  40ce0c:	strb	w10, [x21, x20]
  40ce10:	add	x10, x20, #0x1
  40ce14:	cmp	x10, x22
  40ce18:	b.cs	40ce24 <ferror@plt+0x9e54>  // b.hs, b.nlast
  40ce1c:	mov	w11, #0x24                  	// #36
  40ce20:	strb	w11, [x21, x10]
  40ce24:	add	x10, x20, #0x2
  40ce28:	cmp	x10, x22
  40ce2c:	b.cs	40ce38 <ferror@plt+0x9e68>  // b.hs, b.nlast
  40ce30:	mov	w11, #0x27                  	// #39
  40ce34:	strb	w11, [x21, x10]
  40ce38:	add	x20, x20, #0x3
  40ce3c:	mov	w14, #0x1                   	// #1
  40ce40:	cmp	x20, x22
  40ce44:	b.cs	40ce50 <ferror@plt+0x9e80>  // b.hs, b.nlast
  40ce48:	mov	w10, #0x5c                  	// #92
  40ce4c:	strb	w10, [x21, x20]
  40ce50:	add	x10, x20, #0x1
  40ce54:	cmp	x10, x22
  40ce58:	b.cs	40ce68 <ferror@plt+0x9e98>  // b.hs, b.nlast
  40ce5c:	mov	w11, #0x30                  	// #48
  40ce60:	bfxil	w11, w19, #6, #2
  40ce64:	strb	w11, [x21, x10]
  40ce68:	add	x10, x20, #0x2
  40ce6c:	cmp	x10, x22
  40ce70:	b.cs	40ce80 <ferror@plt+0x9eb0>  // b.hs, b.nlast
  40ce74:	mov	w11, #0x30                  	// #48
  40ce78:	bfxil	w11, w19, #3, #3
  40ce7c:	strb	w11, [x21, x10]
  40ce80:	mov	w11, #0x30                  	// #48
  40ce84:	bfxil	w11, w19, #0, #3
  40ce88:	add	x20, x20, #0x3
  40ce8c:	mov	w10, #0x1                   	// #1
  40ce90:	mov	w19, w11
  40ce94:	b	40cebc <ferror@plt+0x9eec>
  40ce98:	tbz	w27, #0, 40ceb8 <ferror@plt+0x9ee8>
  40ce9c:	cmp	x20, x22
  40cea0:	b.cs	40ceac <ferror@plt+0x9edc>  // b.hs, b.nlast
  40cea4:	mov	w11, #0x5c                  	// #92
  40cea8:	strb	w11, [x21, x20]
  40ceac:	mov	w27, wzr
  40ceb0:	add	x20, x20, #0x1
  40ceb4:	b	40cebc <ferror@plt+0x9eec>
  40ceb8:	mov	w27, wzr
  40cebc:	add	x11, x23, #0x1
  40cec0:	cmp	x9, x11
  40cec4:	b.hi	40cd94 <ferror@plt+0x9dc4>  // b.pmore
  40cec8:	and	w8, w10, #0x1
  40cecc:	tbz	w8, #0, 40cb3c <ferror@plt+0x9b6c>
  40ced0:	b	40cb6c <ferror@plt+0x9b9c>
  40ced4:	cmp	x20, x22
  40ced8:	b.cs	40cee4 <ferror@plt+0x9f14>  // b.hs, b.nlast
  40cedc:	mov	w8, #0x27                  	// #39
  40cee0:	strb	w8, [x21, x20]
  40cee4:	add	x8, x20, #0x1
  40cee8:	cmp	x8, x22
  40ceec:	b.cs	40cef8 <ferror@plt+0x9f28>  // b.hs, b.nlast
  40cef0:	mov	w9, #0x24                  	// #36
  40cef4:	strb	w9, [x21, x8]
  40cef8:	add	x8, x20, #0x2
  40cefc:	cmp	x8, x22
  40cf00:	b.cs	40cf0c <ferror@plt+0x9f3c>  // b.hs, b.nlast
  40cf04:	mov	w9, #0x27                  	// #39
  40cf08:	strb	w9, [x21, x8]
  40cf0c:	add	x8, x20, #0x3
  40cf10:	mov	w14, #0x1                   	// #1
  40cf14:	cmp	x8, x22
  40cf18:	b.cs	40cf24 <ferror@plt+0x9f54>  // b.hs, b.nlast
  40cf1c:	mov	w9, #0x5c                  	// #92
  40cf20:	strb	w9, [x21, x8]
  40cf24:	cmp	w4, #0x2
  40cf28:	add	x20, x8, #0x1
  40cf2c:	b.eq	40cf7c <ferror@plt+0x9fac>  // b.none
  40cf30:	add	x9, x23, #0x1
  40cf34:	cmp	x9, x28
  40cf38:	b.cs	40cf7c <ferror@plt+0x9fac>  // b.hs, b.nlast
  40cf3c:	ldrb	w9, [x24, x9]
  40cf40:	sub	w9, w9, #0x30
  40cf44:	cmp	w9, #0x9
  40cf48:	b.hi	40cf7c <ferror@plt+0x9fac>  // b.pmore
  40cf4c:	cmp	x20, x22
  40cf50:	b.cs	40cf5c <ferror@plt+0x9f8c>  // b.hs, b.nlast
  40cf54:	mov	w9, #0x30                  	// #48
  40cf58:	strb	w9, [x21, x20]
  40cf5c:	add	x9, x8, #0x2
  40cf60:	cmp	x9, x22
  40cf64:	b.cs	40cf70 <ferror@plt+0x9fa0>  // b.hs, b.nlast
  40cf68:	mov	w10, #0x30                  	// #48
  40cf6c:	strb	w10, [x21, x9]
  40cf70:	mov	w26, wzr
  40cf74:	add	x20, x8, #0x3
  40cf78:	b	40cf80 <ferror@plt+0x9fb0>
  40cf7c:	mov	w26, wzr
  40cf80:	mov	w8, #0x1                   	// #1
  40cf84:	mov	w19, #0x30                  	// #48
  40cf88:	b	40c8ec <ferror@plt+0x991c>
  40cf8c:	cmp	x28, x21
  40cf90:	b.ls	40cfc8 <ferror@plt+0x9ff8>  // b.plast
  40cf94:	ldur	x24, [x29, #-80]
  40cf98:	ldp	x21, x11, [sp, #32]
  40cf9c:	sub	x8, x28, x23
  40cfa0:	add	x9, x24, x23
  40cfa4:	ldrb	w10, [x9, x11]
  40cfa8:	cbz	w10, 40cfd8 <ferror@plt+0xa008>
  40cfac:	add	x11, x11, #0x1
  40cfb0:	add	x10, x23, x11
  40cfb4:	cmp	x10, x28
  40cfb8:	b.cc	40cfa4 <ferror@plt+0x9fd4>  // b.lo, b.ul, b.last
  40cfbc:	mov	w26, wzr
  40cfc0:	mov	x11, x8
  40cfc4:	b	40caf8 <ferror@plt+0x9b28>
  40cfc8:	mov	w26, wzr
  40cfcc:	ldp	x21, x11, [sp, #32]
  40cfd0:	ldur	x24, [x29, #-80]
  40cfd4:	b	40caf8 <ferror@plt+0x9b28>
  40cfd8:	mov	w26, wzr
  40cfdc:	b	40caf8 <ferror@plt+0x9b28>
  40cfe0:	mov	w19, #0x3f                  	// #63
  40cfe4:	mov	w26, w8
  40cfe8:	b	40c8ec <ferror@plt+0x991c>
  40cfec:	mov	x28, x23
  40cff0:	b	40cff8 <ferror@plt+0xa028>
  40cff4:	mov	x28, #0xffffffffffffffff    	// #-1
  40cff8:	cmp	w4, #0x2
  40cffc:	ldur	w10, [x29, #-72]
  40d000:	cset	w8, eq  // eq = none
  40d004:	cmp	x20, #0x0
  40d008:	cset	w9, eq  // eq = none
  40d00c:	and	w8, w8, w9
  40d010:	and	w8, w16, w8
  40d014:	tbnz	w8, #0, 40d0c8 <ferror@plt+0xa0f8>
  40d018:	cmp	w4, #0x2
  40d01c:	cset	w8, ne  // ne = any
  40d020:	orr	w8, w16, w8
  40d024:	tbnz	w8, #0, 40d194 <ferror@plt+0xa1c4>
  40d028:	ldr	w8, [sp, #72]
  40d02c:	eor	w8, w8, #0x1
  40d030:	tbnz	w8, #0, 40d194 <ferror@plt+0xa1c4>
  40d034:	tbnz	w25, #0, 40d164 <ferror@plt+0xa194>
  40d038:	ldr	x24, [sp, #64]
  40d03c:	mov	w19, wzr
  40d040:	cbz	x24, 40d190 <ferror@plt+0xa1c0>
  40d044:	mov	w4, #0x2                   	// #2
  40d048:	mov	w8, w10
  40d04c:	mov	w25, w19
  40d050:	mov	w16, w19
  40d054:	cbz	x22, 40c644 <ferror@plt+0x9674>
  40d058:	b	40d194 <ferror@plt+0xa1c4>
  40d05c:	mov	w16, wzr
  40d060:	cbz	x22, 40d06c <ferror@plt+0xa09c>
  40d064:	mov	w8, #0x22                  	// #34
  40d068:	strb	w8, [x21]
  40d06c:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40d070:	add	x8, x8, #0xee9
  40d074:	stur	x8, [x29, #-64]
  40d078:	mov	w8, #0x1                   	// #1
  40d07c:	mov	w20, #0x1                   	// #1
  40d080:	mov	w4, #0x5                   	// #5
  40d084:	stur	x8, [x29, #-32]
  40d088:	mov	w9, #0x1                   	// #1
  40d08c:	b	40c7a0 <ferror@plt+0x97d0>
  40d090:	mov	w9, #0x1                   	// #1
  40d094:	mov	w16, wzr
  40d098:	cbz	x22, 40d0a4 <ferror@plt+0xa0d4>
  40d09c:	mov	w8, #0x27                  	// #39
  40d0a0:	strb	w8, [x21]
  40d0a4:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40d0a8:	add	x8, x8, #0x7fc
  40d0ac:	stur	x8, [x29, #-64]
  40d0b0:	mov	w8, #0x1                   	// #1
  40d0b4:	mov	w4, #0x2                   	// #2
  40d0b8:	mov	w20, #0x1                   	// #1
  40d0bc:	stur	x8, [x29, #-32]
  40d0c0:	b	40c7a0 <ferror@plt+0x97d0>
  40d0c4:	ldur	w10, [x29, #-72]
  40d0c8:	tst	w10, #0x1
  40d0cc:	mov	w8, #0x2                   	// #2
  40d0d0:	mov	w9, #0x4                   	// #4
  40d0d4:	csel	w8, w9, w8, ne  // ne = any
  40d0d8:	cmp	w4, #0x2
  40d0dc:	b.ne	40d0e4 <ferror@plt+0xa114>  // b.any
  40d0e0:	mov	w4, w8
  40d0e4:	ldr	x7, [sp, #88]
  40d0e8:	b	40d114 <ferror@plt+0xa144>
  40d0ec:	ldr	x7, [sp, #88]
  40d0f0:	ldur	w4, [x29, #-44]
  40d0f4:	b	40d114 <ferror@plt+0xa144>
  40d0f8:	ldur	w8, [x29, #-72]
  40d0fc:	ldr	x7, [sp, #88]
  40d100:	ldur	x24, [x29, #-80]
  40d104:	mov	w9, #0x4                   	// #4
  40d108:	tst	w8, #0x1
  40d10c:	mov	w8, #0x2                   	// #2
  40d110:	csel	w4, w9, w8, ne  // ne = any
  40d114:	ldr	w8, [sp, #80]
  40d118:	mov	x0, x21
  40d11c:	mov	x1, x22
  40d120:	mov	x2, x24
  40d124:	and	w5, w8, #0xfffffffd
  40d128:	ldur	x8, [x29, #-88]
  40d12c:	mov	x3, x28
  40d130:	mov	x6, xzr
  40d134:	str	x8, [sp]
  40d138:	bl	40c5c0 <ferror@plt+0x95f0>
  40d13c:	mov	x20, x0
  40d140:	mov	x0, x20
  40d144:	ldp	x20, x19, [sp, #272]
  40d148:	ldp	x22, x21, [sp, #256]
  40d14c:	ldp	x24, x23, [sp, #240]
  40d150:	ldp	x26, x25, [sp, #224]
  40d154:	ldp	x28, x27, [sp, #208]
  40d158:	ldp	x29, x30, [sp, #192]
  40d15c:	add	sp, sp, #0x120
  40d160:	ret
  40d164:	ldur	x8, [x29, #-88]
  40d168:	ldr	x1, [sp, #64]
  40d16c:	ldur	x2, [x29, #-80]
  40d170:	ldr	w5, [sp, #80]
  40d174:	ldur	x6, [x29, #-40]
  40d178:	ldr	x7, [sp, #88]
  40d17c:	mov	w4, #0x5                   	// #5
  40d180:	str	x8, [sp]
  40d184:	mov	x0, x21
  40d188:	mov	x3, x28
  40d18c:	b	40d138 <ferror@plt+0xa168>
  40d190:	mov	w16, w19
  40d194:	ldur	x8, [x29, #-64]
  40d198:	cbz	x8, 40d1c4 <ferror@plt+0xa1f4>
  40d19c:	tbnz	w16, #0, 40d1c4 <ferror@plt+0xa1f4>
  40d1a0:	ldrb	w9, [x8]
  40d1a4:	cbz	w9, 40d1c4 <ferror@plt+0xa1f4>
  40d1a8:	add	x8, x8, #0x1
  40d1ac:	cmp	x20, x22
  40d1b0:	b.cs	40d1b8 <ferror@plt+0xa1e8>  // b.hs, b.nlast
  40d1b4:	strb	w9, [x21, x20]
  40d1b8:	ldrb	w9, [x8], #1
  40d1bc:	add	x20, x20, #0x1
  40d1c0:	cbnz	w9, 40d1ac <ferror@plt+0xa1dc>
  40d1c4:	cmp	x20, x22
  40d1c8:	b.cs	40d140 <ferror@plt+0xa170>  // b.hs, b.nlast
  40d1cc:	strb	wzr, [x21, x20]
  40d1d0:	b	40d140 <ferror@plt+0xa170>
  40d1d4:	b.ne	40d0e4 <ferror@plt+0xa114>  // b.any
  40d1d8:	mov	w4, #0x4                   	// #4
  40d1dc:	b	40d0e4 <ferror@plt+0xa114>
  40d1e0:	bl	402c20 <abort@plt>
  40d1e4:	mov	x3, x2
  40d1e8:	mov	x2, xzr
  40d1ec:	b	40d1f0 <ferror@plt+0xa220>
  40d1f0:	sub	sp, sp, #0x70
  40d1f4:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d1f8:	add	x8, x8, #0xbd8
  40d1fc:	cmp	x3, #0x0
  40d200:	stp	x29, x30, [sp, #16]
  40d204:	stp	x28, x27, [sp, #32]
  40d208:	stp	x26, x25, [sp, #48]
  40d20c:	stp	x24, x23, [sp, #64]
  40d210:	stp	x22, x21, [sp, #80]
  40d214:	stp	x20, x19, [sp, #96]
  40d218:	add	x29, sp, #0x10
  40d21c:	mov	x19, x2
  40d220:	mov	x22, x1
  40d224:	mov	x23, x0
  40d228:	csel	x21, x8, x3, eq  // eq = none
  40d22c:	bl	402f40 <__errno_location@plt>
  40d230:	ldp	w4, w8, [x21]
  40d234:	cmp	x19, #0x0
  40d238:	ldp	x7, x9, [x21, #40]
  40d23c:	ldr	w28, [x0]
  40d240:	cset	w10, eq  // eq = none
  40d244:	orr	w25, w8, w10
  40d248:	add	x26, x21, #0x8
  40d24c:	mov	x24, x0
  40d250:	mov	x0, xzr
  40d254:	mov	x1, xzr
  40d258:	mov	x2, x23
  40d25c:	mov	x3, x22
  40d260:	mov	w5, w25
  40d264:	mov	x6, x26
  40d268:	str	x9, [sp]
  40d26c:	bl	40c5c0 <ferror@plt+0x95f0>
  40d270:	add	x27, x0, #0x1
  40d274:	mov	x20, x0
  40d278:	mov	x0, x27
  40d27c:	bl	40efac <ferror@plt+0xbfdc>
  40d280:	ldr	w4, [x21]
  40d284:	ldp	x7, x8, [x21, #40]
  40d288:	mov	x1, x27
  40d28c:	mov	x2, x23
  40d290:	mov	x3, x22
  40d294:	mov	w5, w25
  40d298:	mov	x6, x26
  40d29c:	mov	x21, x0
  40d2a0:	str	x8, [sp]
  40d2a4:	bl	40c5c0 <ferror@plt+0x95f0>
  40d2a8:	str	w28, [x24]
  40d2ac:	cbz	x19, 40d2b4 <ferror@plt+0xa2e4>
  40d2b0:	str	x20, [x19]
  40d2b4:	mov	x0, x21
  40d2b8:	ldp	x20, x19, [sp, #96]
  40d2bc:	ldp	x22, x21, [sp, #80]
  40d2c0:	ldp	x24, x23, [sp, #64]
  40d2c4:	ldp	x26, x25, [sp, #48]
  40d2c8:	ldp	x28, x27, [sp, #32]
  40d2cc:	ldp	x29, x30, [sp, #16]
  40d2d0:	add	sp, sp, #0x70
  40d2d4:	ret
  40d2d8:	stp	x29, x30, [sp, #-64]!
  40d2dc:	stp	x20, x19, [sp, #48]
  40d2e0:	adrp	x20, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d2e4:	stp	x22, x21, [sp, #32]
  40d2e8:	ldr	w8, [x20, #1248]
  40d2ec:	adrp	x21, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d2f0:	ldr	x19, [x21, #1240]
  40d2f4:	str	x23, [sp, #16]
  40d2f8:	cmp	w8, #0x2
  40d2fc:	mov	x29, sp
  40d300:	b.lt	40d324 <ferror@plt+0xa354>  // b.tstop
  40d304:	add	x22, x19, #0x18
  40d308:	mov	w23, #0x1                   	// #1
  40d30c:	ldr	x0, [x22], #16
  40d310:	bl	402d30 <free@plt>
  40d314:	ldrsw	x8, [x20, #1248]
  40d318:	add	x23, x23, #0x1
  40d31c:	cmp	x23, x8
  40d320:	b.lt	40d30c <ferror@plt+0xa33c>  // b.tstop
  40d324:	ldr	x0, [x19, #8]
  40d328:	adrp	x23, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d32c:	add	x23, x23, #0xc10
  40d330:	adrp	x22, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d334:	cmp	x0, x23
  40d338:	add	x22, x22, #0x4e8
  40d33c:	b.eq	40d34c <ferror@plt+0xa37c>  // b.none
  40d340:	bl	402d30 <free@plt>
  40d344:	mov	w8, #0x100                 	// #256
  40d348:	stp	x8, x23, [x22]
  40d34c:	cmp	x19, x22
  40d350:	b.eq	40d360 <ferror@plt+0xa390>  // b.none
  40d354:	mov	x0, x19
  40d358:	bl	402d30 <free@plt>
  40d35c:	str	x22, [x21, #1240]
  40d360:	mov	w8, #0x1                   	// #1
  40d364:	str	w8, [x20, #1248]
  40d368:	ldp	x20, x19, [sp, #48]
  40d36c:	ldp	x22, x21, [sp, #32]
  40d370:	ldr	x23, [sp, #16]
  40d374:	ldp	x29, x30, [sp], #64
  40d378:	ret
  40d37c:	adrp	x3, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d380:	add	x3, x3, #0xbd8
  40d384:	mov	x2, #0xffffffffffffffff    	// #-1
  40d388:	b	40d38c <ferror@plt+0xa3bc>
  40d38c:	sub	sp, sp, #0x80
  40d390:	stp	x29, x30, [sp, #32]
  40d394:	add	x29, sp, #0x20
  40d398:	stp	x28, x27, [sp, #48]
  40d39c:	stp	x26, x25, [sp, #64]
  40d3a0:	stp	x24, x23, [sp, #80]
  40d3a4:	stp	x22, x21, [sp, #96]
  40d3a8:	stp	x20, x19, [sp, #112]
  40d3ac:	mov	x22, x3
  40d3b0:	stur	x2, [x29, #-8]
  40d3b4:	mov	x21, x1
  40d3b8:	mov	w23, w0
  40d3bc:	bl	402f40 <__errno_location@plt>
  40d3c0:	tbnz	w23, #31, 40d510 <ferror@plt+0xa540>
  40d3c4:	adrp	x25, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d3c8:	ldr	w8, [x25, #1248]
  40d3cc:	adrp	x28, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d3d0:	ldr	w20, [x0]
  40d3d4:	ldr	x27, [x28, #1240]
  40d3d8:	mov	x19, x0
  40d3dc:	cmp	w8, w23
  40d3e0:	b.gt	40d44c <ferror@plt+0xa47c>
  40d3e4:	mov	w8, #0x7fffffff            	// #2147483647
  40d3e8:	cmp	w23, w8
  40d3ec:	stur	w20, [x29, #-12]
  40d3f0:	b.eq	40d514 <ferror@plt+0xa544>  // b.none
  40d3f4:	adrp	x20, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d3f8:	add	x20, x20, #0x4e8
  40d3fc:	add	w26, w23, #0x1
  40d400:	cmp	x27, x20
  40d404:	csel	x0, xzr, x27, eq  // eq = none
  40d408:	sbfiz	x1, x26, #4, #32
  40d40c:	bl	40effc <ferror@plt+0xc02c>
  40d410:	mov	x24, x0
  40d414:	cmp	x27, x20
  40d418:	str	x0, [x28, #1240]
  40d41c:	b.ne	40d428 <ferror@plt+0xa458>  // b.any
  40d420:	ldr	q0, [x20]
  40d424:	str	q0, [x24]
  40d428:	ldrsw	x8, [x25, #1248]
  40d42c:	mov	w1, wzr
  40d430:	add	x0, x24, x8, lsl #4
  40d434:	sub	w8, w26, w8
  40d438:	sbfiz	x2, x8, #4, #32
  40d43c:	bl	402b20 <memset@plt>
  40d440:	ldur	w20, [x29, #-12]
  40d444:	mov	x27, x24
  40d448:	str	w26, [x25, #1248]
  40d44c:	add	x28, x27, w23, uxtw #4
  40d450:	mov	x27, x28
  40d454:	ldr	x26, [x28]
  40d458:	ldr	x23, [x27, #8]!
  40d45c:	ldp	w4, w8, [x22]
  40d460:	ldp	x7, x9, [x22, #40]
  40d464:	ldur	x3, [x29, #-8]
  40d468:	add	x24, x22, #0x8
  40d46c:	orr	w25, w8, #0x1
  40d470:	mov	x0, x23
  40d474:	mov	x1, x26
  40d478:	mov	x2, x21
  40d47c:	mov	w5, w25
  40d480:	mov	x6, x24
  40d484:	str	x9, [sp]
  40d488:	bl	40c5c0 <ferror@plt+0x95f0>
  40d48c:	cmp	x26, x0
  40d490:	b.hi	40d4e8 <ferror@plt+0xa518>  // b.pmore
  40d494:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d498:	add	x8, x8, #0xc10
  40d49c:	add	x26, x0, #0x1
  40d4a0:	cmp	x23, x8
  40d4a4:	str	x26, [x28]
  40d4a8:	b.eq	40d4b4 <ferror@plt+0xa4e4>  // b.none
  40d4ac:	mov	x0, x23
  40d4b0:	bl	402d30 <free@plt>
  40d4b4:	mov	x0, x26
  40d4b8:	bl	40efac <ferror@plt+0xbfdc>
  40d4bc:	str	x0, [x27]
  40d4c0:	ldr	w4, [x22]
  40d4c4:	ldp	x7, x8, [x22, #40]
  40d4c8:	ldur	x3, [x29, #-8]
  40d4cc:	mov	x1, x26
  40d4d0:	mov	x2, x21
  40d4d4:	mov	w5, w25
  40d4d8:	mov	x6, x24
  40d4dc:	mov	x23, x0
  40d4e0:	str	x8, [sp]
  40d4e4:	bl	40c5c0 <ferror@plt+0x95f0>
  40d4e8:	str	w20, [x19]
  40d4ec:	mov	x0, x23
  40d4f0:	ldp	x20, x19, [sp, #112]
  40d4f4:	ldp	x22, x21, [sp, #96]
  40d4f8:	ldp	x24, x23, [sp, #80]
  40d4fc:	ldp	x26, x25, [sp, #64]
  40d500:	ldp	x28, x27, [sp, #48]
  40d504:	ldp	x29, x30, [sp, #32]
  40d508:	add	sp, sp, #0x80
  40d50c:	ret
  40d510:	bl	402c20 <abort@plt>
  40d514:	bl	40f1e8 <ferror@plt+0xc218>
  40d518:	adrp	x3, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d51c:	add	x3, x3, #0xbd8
  40d520:	b	40d38c <ferror@plt+0xa3bc>
  40d524:	adrp	x3, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d528:	add	x3, x3, #0xbd8
  40d52c:	mov	x2, #0xffffffffffffffff    	// #-1
  40d530:	mov	x1, x0
  40d534:	mov	w0, wzr
  40d538:	b	40d38c <ferror@plt+0xa3bc>
  40d53c:	adrp	x3, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d540:	mov	x2, x1
  40d544:	add	x3, x3, #0xbd8
  40d548:	mov	x1, x0
  40d54c:	mov	w0, wzr
  40d550:	b	40d38c <ferror@plt+0xa3bc>
  40d554:	sub	sp, sp, #0x50
  40d558:	movi	v0.2d, #0x0
  40d55c:	cmp	w1, #0xa
  40d560:	stp	x29, x30, [sp, #64]
  40d564:	add	x29, sp, #0x40
  40d568:	str	xzr, [sp, #48]
  40d56c:	stp	q0, q0, [sp, #16]
  40d570:	str	q0, [sp]
  40d574:	b.eq	40d59c <ferror@plt+0xa5cc>  // b.none
  40d578:	mov	x8, x2
  40d57c:	str	w1, [sp]
  40d580:	mov	x3, sp
  40d584:	mov	x2, #0xffffffffffffffff    	// #-1
  40d588:	mov	x1, x8
  40d58c:	bl	40d38c <ferror@plt+0xa3bc>
  40d590:	ldp	x29, x30, [sp, #64]
  40d594:	add	sp, sp, #0x50
  40d598:	ret
  40d59c:	bl	402c20 <abort@plt>
  40d5a0:	sub	sp, sp, #0x50
  40d5a4:	movi	v0.2d, #0x0
  40d5a8:	cmp	w1, #0xa
  40d5ac:	stp	x29, x30, [sp, #64]
  40d5b0:	add	x29, sp, #0x40
  40d5b4:	str	xzr, [sp, #48]
  40d5b8:	stp	q0, q0, [sp, #16]
  40d5bc:	str	q0, [sp]
  40d5c0:	b.eq	40d5e8 <ferror@plt+0xa618>  // b.none
  40d5c4:	mov	x8, x3
  40d5c8:	str	w1, [sp]
  40d5cc:	mov	x3, sp
  40d5d0:	mov	x1, x2
  40d5d4:	mov	x2, x8
  40d5d8:	bl	40d38c <ferror@plt+0xa3bc>
  40d5dc:	ldp	x29, x30, [sp, #64]
  40d5e0:	add	sp, sp, #0x50
  40d5e4:	ret
  40d5e8:	bl	402c20 <abort@plt>
  40d5ec:	mov	x2, x1
  40d5f0:	mov	w1, w0
  40d5f4:	mov	w0, wzr
  40d5f8:	b	40d554 <ferror@plt+0xa584>
  40d5fc:	mov	x3, x2
  40d600:	mov	x2, x1
  40d604:	mov	w1, w0
  40d608:	mov	w0, wzr
  40d60c:	b	40d5a0 <ferror@plt+0xa5d0>
  40d610:	sub	sp, sp, #0x50
  40d614:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d618:	add	x9, x9, #0xbd8
  40d61c:	ldp	q0, q1, [x9]
  40d620:	ubfx	w10, w2, #5, #3
  40d624:	mov	x11, sp
  40d628:	mov	x8, x1
  40d62c:	stp	q0, q1, [sp]
  40d630:	ldr	q0, [x9, #32]
  40d634:	ldr	x9, [x9, #48]
  40d638:	mov	x1, x0
  40d63c:	mov	x3, sp
  40d640:	str	q0, [sp, #32]
  40d644:	str	x9, [sp, #48]
  40d648:	add	x9, x11, w10, uxtw #2
  40d64c:	ldr	w10, [x9, #8]
  40d650:	mov	w0, wzr
  40d654:	stp	x29, x30, [sp, #64]
  40d658:	add	x29, sp, #0x40
  40d65c:	lsr	w11, w10, w2
  40d660:	mvn	w11, w11
  40d664:	and	w11, w11, #0x1
  40d668:	lsl	w11, w11, w2
  40d66c:	eor	w10, w11, w10
  40d670:	mov	x2, x8
  40d674:	str	w10, [x9, #8]
  40d678:	bl	40d38c <ferror@plt+0xa3bc>
  40d67c:	ldp	x29, x30, [sp, #64]
  40d680:	add	sp, sp, #0x50
  40d684:	ret
  40d688:	sub	sp, sp, #0x50
  40d68c:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d690:	add	x9, x9, #0xbd8
  40d694:	ldp	q0, q1, [x9]
  40d698:	ubfx	w10, w1, #5, #3
  40d69c:	mov	x11, sp
  40d6a0:	mov	x8, x0
  40d6a4:	stp	q0, q1, [sp]
  40d6a8:	ldr	q0, [x9, #32]
  40d6ac:	ldr	x9, [x9, #48]
  40d6b0:	mov	x3, sp
  40d6b4:	mov	x2, #0xffffffffffffffff    	// #-1
  40d6b8:	str	q0, [sp, #32]
  40d6bc:	str	x9, [sp, #48]
  40d6c0:	add	x9, x11, w10, uxtw #2
  40d6c4:	ldr	w10, [x9, #8]
  40d6c8:	mov	w0, wzr
  40d6cc:	stp	x29, x30, [sp, #64]
  40d6d0:	add	x29, sp, #0x40
  40d6d4:	lsr	w11, w10, w1
  40d6d8:	mvn	w11, w11
  40d6dc:	and	w11, w11, #0x1
  40d6e0:	lsl	w11, w11, w1
  40d6e4:	eor	w10, w11, w10
  40d6e8:	mov	x1, x8
  40d6ec:	str	w10, [x9, #8]
  40d6f0:	bl	40d38c <ferror@plt+0xa3bc>
  40d6f4:	ldp	x29, x30, [sp, #64]
  40d6f8:	add	sp, sp, #0x50
  40d6fc:	ret
  40d700:	sub	sp, sp, #0x50
  40d704:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d708:	add	x8, x8, #0xbd8
  40d70c:	ldp	q0, q1, [x8]
  40d710:	ldr	q2, [x8, #32]
  40d714:	ldr	x8, [x8, #48]
  40d718:	mov	x1, x0
  40d71c:	stp	q0, q1, [sp]
  40d720:	ldr	w9, [sp, #12]
  40d724:	str	x8, [sp, #48]
  40d728:	mov	x3, sp
  40d72c:	mov	x2, #0xffffffffffffffff    	// #-1
  40d730:	orr	w8, w9, #0x4000000
  40d734:	mov	w0, wzr
  40d738:	stp	x29, x30, [sp, #64]
  40d73c:	add	x29, sp, #0x40
  40d740:	str	q2, [sp, #32]
  40d744:	str	w8, [sp, #12]
  40d748:	bl	40d38c <ferror@plt+0xa3bc>
  40d74c:	ldp	x29, x30, [sp, #64]
  40d750:	add	sp, sp, #0x50
  40d754:	ret
  40d758:	sub	sp, sp, #0x50
  40d75c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d760:	add	x8, x8, #0xbd8
  40d764:	ldp	q0, q1, [x8]
  40d768:	ldr	q2, [x8, #32]
  40d76c:	ldr	x8, [x8, #48]
  40d770:	mov	x2, x1
  40d774:	stp	q0, q1, [sp]
  40d778:	ldr	w9, [sp, #12]
  40d77c:	mov	x1, x0
  40d780:	str	x8, [sp, #48]
  40d784:	mov	x3, sp
  40d788:	orr	w8, w9, #0x4000000
  40d78c:	mov	w0, wzr
  40d790:	stp	x29, x30, [sp, #64]
  40d794:	add	x29, sp, #0x40
  40d798:	str	q2, [sp, #32]
  40d79c:	str	w8, [sp, #12]
  40d7a0:	bl	40d38c <ferror@plt+0xa3bc>
  40d7a4:	ldp	x29, x30, [sp, #64]
  40d7a8:	add	sp, sp, #0x50
  40d7ac:	ret
  40d7b0:	sub	sp, sp, #0x80
  40d7b4:	movi	v0.2d, #0x0
  40d7b8:	cmp	w1, #0xa
  40d7bc:	stp	x29, x30, [sp, #112]
  40d7c0:	add	x29, sp, #0x70
  40d7c4:	str	wzr, [sp, #48]
  40d7c8:	stp	q0, q0, [sp, #16]
  40d7cc:	str	q0, [sp]
  40d7d0:	b.eq	40d820 <ferror@plt+0xa850>  // b.none
  40d7d4:	ldp	q0, q1, [sp]
  40d7d8:	ldr	w9, [sp, #48]
  40d7dc:	ldr	q2, [sp, #32]
  40d7e0:	mov	x8, x2
  40d7e4:	stur	q0, [sp, #60]
  40d7e8:	ldr	w10, [sp, #68]
  40d7ec:	str	w1, [sp, #56]
  40d7f0:	str	w9, [sp, #108]
  40d7f4:	add	x3, sp, #0x38
  40d7f8:	orr	w9, w10, #0x4000000
  40d7fc:	mov	x2, #0xffffffffffffffff    	// #-1
  40d800:	mov	x1, x8
  40d804:	stur	q1, [sp, #76]
  40d808:	stur	q2, [sp, #92]
  40d80c:	str	w9, [sp, #68]
  40d810:	bl	40d38c <ferror@plt+0xa3bc>
  40d814:	ldp	x29, x30, [sp, #112]
  40d818:	add	sp, sp, #0x80
  40d81c:	ret
  40d820:	bl	402c20 <abort@plt>
  40d824:	mov	x4, #0xffffffffffffffff    	// #-1
  40d828:	b	40d82c <ferror@plt+0xa85c>
  40d82c:	sub	sp, sp, #0x50
  40d830:	adrp	x9, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d834:	add	x9, x9, #0xbd8
  40d838:	ldp	q0, q1, [x9]
  40d83c:	ldr	x10, [x9, #48]
  40d840:	stp	x29, x30, [sp, #64]
  40d844:	add	x29, sp, #0x40
  40d848:	stp	q0, q1, [sp]
  40d84c:	ldr	q0, [x9, #32]
  40d850:	mov	w9, #0xa                   	// #10
  40d854:	str	x10, [sp, #48]
  40d858:	str	w9, [sp]
  40d85c:	str	q0, [sp, #32]
  40d860:	cbz	x1, 40d88c <ferror@plt+0xa8bc>
  40d864:	cbz	x2, 40d88c <ferror@plt+0xa8bc>
  40d868:	mov	x8, x3
  40d86c:	stp	x1, x2, [sp, #40]
  40d870:	mov	x3, sp
  40d874:	mov	x1, x8
  40d878:	mov	x2, x4
  40d87c:	bl	40d38c <ferror@plt+0xa3bc>
  40d880:	ldp	x29, x30, [sp, #64]
  40d884:	add	sp, sp, #0x50
  40d888:	ret
  40d88c:	bl	402c20 <abort@plt>
  40d890:	mov	x3, x2
  40d894:	mov	x2, x1
  40d898:	mov	x4, #0xffffffffffffffff    	// #-1
  40d89c:	mov	x1, x0
  40d8a0:	mov	w0, wzr
  40d8a4:	b	40d82c <ferror@plt+0xa85c>
  40d8a8:	mov	x4, x3
  40d8ac:	mov	x3, x2
  40d8b0:	mov	x2, x1
  40d8b4:	mov	x1, x0
  40d8b8:	mov	w0, wzr
  40d8bc:	b	40d82c <ferror@plt+0xa85c>
  40d8c0:	adrp	x3, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d8c4:	add	x3, x3, #0x4f8
  40d8c8:	b	40d38c <ferror@plt+0xa3bc>
  40d8cc:	adrp	x3, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d8d0:	mov	x2, x1
  40d8d4:	add	x3, x3, #0x4f8
  40d8d8:	mov	x1, x0
  40d8dc:	mov	w0, wzr
  40d8e0:	b	40d38c <ferror@plt+0xa3bc>
  40d8e4:	adrp	x3, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d8e8:	add	x3, x3, #0x4f8
  40d8ec:	mov	x2, #0xffffffffffffffff    	// #-1
  40d8f0:	b	40d38c <ferror@plt+0xa3bc>
  40d8f4:	adrp	x3, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40d8f8:	add	x3, x3, #0x4f8
  40d8fc:	mov	x2, #0xffffffffffffffff    	// #-1
  40d900:	mov	x1, x0
  40d904:	mov	w0, wzr
  40d908:	b	40d38c <ferror@plt+0xa3bc>
  40d90c:	stp	x29, x30, [sp, #-32]!
  40d910:	stp	x20, x19, [sp, #16]
  40d914:	mov	x20, x0
  40d918:	mov	w19, w1
  40d91c:	mov	w2, #0x5                   	// #5
  40d920:	mov	x0, xzr
  40d924:	mov	x1, x20
  40d928:	mov	x29, sp
  40d92c:	bl	402eb0 <dcgettext@plt>
  40d930:	cmp	x0, x20
  40d934:	b.ne	40da18 <ferror@plt+0xaa48>  // b.any
  40d938:	bl	41098c <_obstack_memory_used@@Base+0x44c>
  40d93c:	ldrb	w8, [x0]
  40d940:	and	w8, w8, #0xffffffdf
  40d944:	cmp	w8, #0x47
  40d948:	b.eq	40d9ac <ferror@plt+0xa9dc>  // b.none
  40d94c:	cmp	w8, #0x55
  40d950:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d954:	ldrb	w8, [x0, #1]
  40d958:	and	w8, w8, #0xffffffdf
  40d95c:	cmp	w8, #0x54
  40d960:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d964:	ldrb	w8, [x0, #2]
  40d968:	and	w8, w8, #0xffffffdf
  40d96c:	cmp	w8, #0x46
  40d970:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d974:	ldrb	w8, [x0, #3]
  40d978:	cmp	w8, #0x2d
  40d97c:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d980:	ldrb	w8, [x0, #4]
  40d984:	cmp	w8, #0x38
  40d988:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d98c:	ldrb	w8, [x0, #5]
  40d990:	cbnz	w8, 40da00 <ferror@plt+0xaa30>
  40d994:	ldrb	w8, [x20]
  40d998:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40d99c:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40d9a0:	add	x9, x9, #0x5e2
  40d9a4:	add	x10, x10, #0x5de
  40d9a8:	b	40da38 <ferror@plt+0xaa68>
  40d9ac:	ldrb	w8, [x0, #1]
  40d9b0:	and	w8, w8, #0xffffffdf
  40d9b4:	cmp	w8, #0x42
  40d9b8:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d9bc:	ldrb	w8, [x0, #2]
  40d9c0:	cmp	w8, #0x31
  40d9c4:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d9c8:	ldrb	w8, [x0, #3]
  40d9cc:	cmp	w8, #0x38
  40d9d0:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d9d4:	ldrb	w8, [x0, #4]
  40d9d8:	cmp	w8, #0x30
  40d9dc:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d9e0:	ldrb	w8, [x0, #5]
  40d9e4:	cmp	w8, #0x33
  40d9e8:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d9ec:	ldrb	w8, [x0, #6]
  40d9f0:	cmp	w8, #0x30
  40d9f4:	b.ne	40da00 <ferror@plt+0xaa30>  // b.any
  40d9f8:	ldrb	w8, [x0, #7]
  40d9fc:	cbz	w8, 40da24 <ferror@plt+0xaa54>
  40da00:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40da04:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40da08:	add	x8, x8, #0x7fc
  40da0c:	add	x9, x9, #0xee9
  40da10:	cmp	w19, #0x9
  40da14:	csel	x0, x9, x8, eq  // eq = none
  40da18:	ldp	x20, x19, [sp, #16]
  40da1c:	ldp	x29, x30, [sp], #32
  40da20:	ret
  40da24:	ldrb	w8, [x20]
  40da28:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40da2c:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40da30:	add	x9, x9, #0x5ea
  40da34:	add	x10, x10, #0x5e6
  40da38:	cmp	w8, #0x60
  40da3c:	csel	x0, x10, x9, eq  // eq = none
  40da40:	b	40da18 <ferror@plt+0xaa48>
  40da44:	sub	sp, sp, #0x40
  40da48:	stp	x29, x30, [sp, #16]
  40da4c:	stp	x22, x21, [sp, #32]
  40da50:	stp	x20, x19, [sp, #48]
  40da54:	add	x29, sp, #0x10
  40da58:	cbz	x1, 40da88 <ferror@plt+0xaab8>
  40da5c:	mov	x21, x1
  40da60:	mov	x20, x0
  40da64:	cbz	x0, 40daa8 <ferror@plt+0xaad8>
  40da68:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40da6c:	add	x1, x1, #0x5ed
  40da70:	mov	x0, x20
  40da74:	bl	4108e0 <_obstack_memory_used@@Base+0x3a0>
  40da78:	mov	x22, x0
  40da7c:	cbnz	x0, 40daac <ferror@plt+0xaadc>
  40da80:	mov	x19, xzr
  40da84:	b	40dc5c <ferror@plt+0xac8c>
  40da88:	mov	w0, #0x1038                	// #4152
  40da8c:	bl	40efac <ferror@plt+0xbfdc>
  40da90:	adrp	x8, 40d000 <ferror@plt+0xa030>
  40da94:	add	x8, x8, #0xe24
  40da98:	mov	x19, x0
  40da9c:	stp	xzr, x8, [x0]
  40daa0:	str	xzr, [x0, #16]
  40daa4:	b	40dc5c <ferror@plt+0xac8c>
  40daa8:	mov	x22, xzr
  40daac:	mov	w0, #0x1038                	// #4152
  40dab0:	bl	40efac <ferror@plt+0xbfdc>
  40dab4:	adrp	x8, 40d000 <ferror@plt+0xa030>
  40dab8:	mov	x19, x0
  40dabc:	add	x8, x8, #0xe24
  40dac0:	stp	x22, x8, [x0]
  40dac4:	str	x20, [x0, #16]
  40dac8:	cbz	x22, 40daec <ferror@plt+0xab1c>
  40dacc:	cmp	x21, #0x1, lsl #12
  40dad0:	mov	w8, #0x1000                	// #4096
  40dad4:	add	x1, x19, #0x18
  40dad8:	csel	x3, x21, x8, cc  // cc = lo, ul, last
  40dadc:	mov	x0, x22
  40dae0:	mov	w2, wzr
  40dae4:	bl	402980 <setvbuf@plt>
  40dae8:	b	40dc5c <ferror@plt+0xac8c>
  40daec:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40daf0:	add	x0, x0, #0x60f
  40daf4:	mov	w1, wzr
  40daf8:	str	xzr, [x19, #24]
  40dafc:	add	x20, x19, #0x20
  40db00:	bl	402a90 <open@plt>
  40db04:	tbnz	w0, #31, 40db40 <ferror@plt+0xab70>
  40db08:	cmp	x21, #0x800
  40db0c:	mov	w8, #0x800                 	// #2048
  40db10:	csel	x2, x21, x8, cc  // cc = lo, ul, last
  40db14:	mov	x1, x20
  40db18:	mov	w22, w0
  40db1c:	bl	402e50 <read@plt>
  40db20:	mov	x21, x0
  40db24:	mov	w0, w22
  40db28:	bl	402ba0 <close@plt>
  40db2c:	cmp	x21, #0x1
  40db30:	b.lt	40db40 <ferror@plt+0xab70>  // b.tstop
  40db34:	cmp	x21, #0x7ff
  40db38:	b.ls	40db44 <ferror@plt+0xab74>  // b.plast
  40db3c:	b	40dc54 <ferror@plt+0xac84>
  40db40:	mov	x21, xzr
  40db44:	mov	w8, #0x800                 	// #2048
  40db48:	sub	x8, x8, x21
  40db4c:	cmp	x8, #0x10
  40db50:	mov	w9, #0x10                  	// #16
  40db54:	mov	x0, sp
  40db58:	mov	x1, xzr
  40db5c:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  40db60:	bl	402b40 <gettimeofday@plt>
  40db64:	add	x0, x20, x21
  40db68:	mov	x1, sp
  40db6c:	mov	x2, x22
  40db70:	bl	402860 <memcpy@plt>
  40db74:	add	x22, x22, x21
  40db78:	cmp	x22, #0x7ff
  40db7c:	b.hi	40dc54 <ferror@plt+0xac84>  // b.pmore
  40db80:	mov	w8, #0x800                 	// #2048
  40db84:	sub	x8, x8, x22
  40db88:	cmp	x8, #0x4
  40db8c:	mov	w9, #0x4                   	// #4
  40db90:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40db94:	bl	402a30 <getpid@plt>
  40db98:	str	w0, [sp]
  40db9c:	add	x0, x20, x22
  40dba0:	mov	x1, sp
  40dba4:	mov	x2, x21
  40dba8:	bl	402860 <memcpy@plt>
  40dbac:	add	x22, x21, x22
  40dbb0:	cmp	x22, #0x7ff
  40dbb4:	b.hi	40dc54 <ferror@plt+0xac84>  // b.pmore
  40dbb8:	mov	w8, #0x800                 	// #2048
  40dbbc:	sub	x8, x8, x22
  40dbc0:	cmp	x8, #0x4
  40dbc4:	mov	w9, #0x4                   	// #4
  40dbc8:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40dbcc:	bl	402aa0 <getppid@plt>
  40dbd0:	str	w0, [sp]
  40dbd4:	add	x0, x20, x22
  40dbd8:	mov	x1, sp
  40dbdc:	mov	x2, x21
  40dbe0:	bl	402860 <memcpy@plt>
  40dbe4:	add	x22, x21, x22
  40dbe8:	cmp	x22, #0x7ff
  40dbec:	b.hi	40dc54 <ferror@plt+0xac84>  // b.pmore
  40dbf0:	mov	w8, #0x800                 	// #2048
  40dbf4:	sub	x8, x8, x22
  40dbf8:	cmp	x8, #0x4
  40dbfc:	mov	w9, #0x4                   	// #4
  40dc00:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40dc04:	bl	402930 <getuid@plt>
  40dc08:	str	w0, [sp]
  40dc0c:	add	x0, x20, x22
  40dc10:	mov	x1, sp
  40dc14:	mov	x2, x21
  40dc18:	bl	402860 <memcpy@plt>
  40dc1c:	add	x22, x21, x22
  40dc20:	cmp	x22, #0x7ff
  40dc24:	b.hi	40dc54 <ferror@plt+0xac84>  // b.pmore
  40dc28:	mov	w8, #0x800                 	// #2048
  40dc2c:	sub	x8, x8, x22
  40dc30:	cmp	x8, #0x4
  40dc34:	mov	w9, #0x4                   	// #4
  40dc38:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40dc3c:	bl	402d50 <getgid@plt>
  40dc40:	str	w0, [sp]
  40dc44:	add	x0, x20, x22
  40dc48:	mov	x1, sp
  40dc4c:	mov	x2, x21
  40dc50:	bl	402860 <memcpy@plt>
  40dc54:	mov	x0, x20
  40dc58:	bl	40e0dc <ferror@plt+0xb10c>
  40dc5c:	mov	x0, x19
  40dc60:	ldp	x20, x19, [sp, #48]
  40dc64:	ldp	x22, x21, [sp, #32]
  40dc68:	ldp	x29, x30, [sp, #16]
  40dc6c:	add	sp, sp, #0x40
  40dc70:	ret
  40dc74:	str	x1, [x0, #8]
  40dc78:	ret
  40dc7c:	str	x1, [x0, #16]
  40dc80:	ret
  40dc84:	stp	x29, x30, [sp, #-80]!
  40dc88:	stp	x24, x23, [sp, #32]
  40dc8c:	stp	x22, x21, [sp, #48]
  40dc90:	stp	x20, x19, [sp, #64]
  40dc94:	ldr	x3, [x0]
  40dc98:	mov	x21, x2
  40dc9c:	mov	x19, x0
  40dca0:	mov	x20, x1
  40dca4:	str	x25, [sp, #16]
  40dca8:	mov	x29, sp
  40dcac:	cbz	x3, 40dd1c <ferror@plt+0xad4c>
  40dcb0:	mov	w1, #0x1                   	// #1
  40dcb4:	mov	x0, x20
  40dcb8:	mov	x2, x21
  40dcbc:	bl	402c80 <fread_unlocked@plt>
  40dcc0:	mov	x23, x0
  40dcc4:	bl	402f40 <__errno_location@plt>
  40dcc8:	subs	x21, x21, x23
  40dccc:	b.eq	40ddc0 <ferror@plt+0xadf0>  // b.none
  40dcd0:	mov	x22, x0
  40dcd4:	ldr	x0, [x19]
  40dcd8:	ldr	w24, [x22]
  40dcdc:	add	x20, x20, x23
  40dce0:	bl	402920 <ferror_unlocked@plt>
  40dce4:	cmp	w0, #0x0
  40dce8:	csel	w8, wzr, w24, eq  // eq = none
  40dcec:	str	w8, [x22]
  40dcf0:	ldp	x8, x0, [x19, #8]
  40dcf4:	blr	x8
  40dcf8:	ldr	x3, [x19]
  40dcfc:	mov	w1, #0x1                   	// #1
  40dd00:	mov	x0, x20
  40dd04:	mov	x2, x21
  40dd08:	bl	402c80 <fread_unlocked@plt>
  40dd0c:	mov	x23, x0
  40dd10:	subs	x21, x21, x0
  40dd14:	b.ne	40dcd4 <ferror@plt+0xad04>  // b.any
  40dd18:	b	40ddc0 <ferror@plt+0xadf0>
  40dd1c:	ldr	x24, [x19, #24]
  40dd20:	add	x22, x19, #0x838
  40dd24:	sub	x8, x22, x24
  40dd28:	cmp	x24, x21
  40dd2c:	add	x1, x8, #0x800
  40dd30:	b.cs	40dda0 <ferror@plt+0xadd0>  // b.hs, b.nlast
  40dd34:	add	x23, x19, #0x20
  40dd38:	mov	w25, #0x800                 	// #2048
  40dd3c:	mov	x0, x20
  40dd40:	mov	x2, x24
  40dd44:	bl	402860 <memcpy@plt>
  40dd48:	add	x20, x20, x24
  40dd4c:	tst	x20, #0x7
  40dd50:	sub	x21, x21, x24
  40dd54:	b.eq	40dd78 <ferror@plt+0xada8>  // b.none
  40dd58:	mov	x0, x23
  40dd5c:	mov	x1, x22
  40dd60:	bl	40de94 <ferror@plt+0xaec4>
  40dd64:	cmp	x21, #0x800
  40dd68:	mov	x1, x22
  40dd6c:	mov	w24, #0x800                 	// #2048
  40dd70:	b.hi	40dd3c <ferror@plt+0xad6c>  // b.pmore
  40dd74:	b	40dda8 <ferror@plt+0xadd8>
  40dd78:	cmp	x21, #0x800
  40dd7c:	b.cc	40dd58 <ferror@plt+0xad88>  // b.lo, b.ul, b.last
  40dd80:	mov	x0, x23
  40dd84:	mov	x1, x20
  40dd88:	bl	40de94 <ferror@plt+0xaec4>
  40dd8c:	subs	x21, x21, #0x800
  40dd90:	add	x20, x20, #0x800
  40dd94:	b.ne	40dd78 <ferror@plt+0xada8>  // b.any
  40dd98:	mov	x8, xzr
  40dd9c:	b	40ddbc <ferror@plt+0xadec>
  40dda0:	mov	x25, x24
  40dda4:	mov	x22, x1
  40dda8:	mov	x0, x20
  40ddac:	mov	x1, x22
  40ddb0:	mov	x2, x21
  40ddb4:	bl	402860 <memcpy@plt>
  40ddb8:	sub	x8, x25, x21
  40ddbc:	str	x8, [x19, #24]
  40ddc0:	ldp	x20, x19, [sp, #64]
  40ddc4:	ldp	x22, x21, [sp, #48]
  40ddc8:	ldp	x24, x23, [sp, #32]
  40ddcc:	ldr	x25, [sp, #16]
  40ddd0:	ldp	x29, x30, [sp], #80
  40ddd4:	ret
  40ddd8:	stp	x29, x30, [sp, #-32]!
  40dddc:	stp	x20, x19, [sp, #16]
  40dde0:	ldr	x19, [x0]
  40dde4:	mov	w1, #0x1038                	// #4152
  40dde8:	mov	x2, #0xffffffffffffffff    	// #-1
  40ddec:	mov	x29, sp
  40ddf0:	mov	x20, x0
  40ddf4:	bl	402e40 <__explicit_bzero_chk@plt>
  40ddf8:	mov	x0, x20
  40ddfc:	bl	402d30 <free@plt>
  40de00:	cbz	x19, 40de14 <ferror@plt+0xae44>
  40de04:	mov	x0, x19
  40de08:	ldp	x20, x19, [sp, #16]
  40de0c:	ldp	x29, x30, [sp], #32
  40de10:	b	40fce0 <ferror@plt+0xcd10>
  40de14:	ldp	x20, x19, [sp, #16]
  40de18:	mov	w0, wzr
  40de1c:	ldp	x29, x30, [sp], #32
  40de20:	ret
  40de24:	stp	x29, x30, [sp, #-48]!
  40de28:	stp	x22, x21, [sp, #16]
  40de2c:	stp	x20, x19, [sp, #32]
  40de30:	mov	x29, sp
  40de34:	cbz	x0, 40de90 <ferror@plt+0xaec0>
  40de38:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40de3c:	ldr	w20, [x8, #1232]
  40de40:	mov	x19, x0
  40de44:	bl	402f40 <__errno_location@plt>
  40de48:	ldr	w21, [x0]
  40de4c:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40de50:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40de54:	add	x8, x8, #0x600
  40de58:	add	x9, x9, #0x5f0
  40de5c:	cmp	w21, #0x0
  40de60:	csel	x1, x9, x8, eq  // eq = none
  40de64:	mov	w2, #0x5                   	// #5
  40de68:	mov	x0, xzr
  40de6c:	bl	402eb0 <dcgettext@plt>
  40de70:	mov	x22, x0
  40de74:	mov	x0, x19
  40de78:	bl	40d8f4 <ferror@plt+0xa924>
  40de7c:	mov	x3, x0
  40de80:	mov	w0, w20
  40de84:	mov	w1, w21
  40de88:	mov	x2, x22
  40de8c:	bl	402900 <error@plt>
  40de90:	bl	402c20 <abort@plt>
  40de94:	ldr	x9, [x0, #2064]
  40de98:	ldr	x10, [x0, #2056]
  40de9c:	ldr	x13, [x0, #2048]
  40dea0:	mov	x8, xzr
  40dea4:	add	x9, x9, #0x1
  40dea8:	add	x15, x9, x10
  40deac:	add	x10, x0, #0x400
  40deb0:	str	x9, [x0, #2064]
  40deb4:	add	x9, x0, x8
  40deb8:	ldr	x11, [x9]
  40debc:	ldr	x12, [x9, #1024]
  40dec0:	eon	x13, x13, x13, lsl #21
  40dec4:	and	x14, x11, #0x7f8
  40dec8:	ldr	x14, [x0, x14]
  40decc:	add	x12, x13, x12
  40ded0:	add	x13, x12, x15
  40ded4:	eor	x12, x12, x12, lsr #5
  40ded8:	add	x13, x13, x14
  40dedc:	str	x13, [x9]
  40dee0:	lsr	x13, x13, #8
  40dee4:	and	x13, x13, #0x7f8
  40dee8:	ldr	x13, [x0, x13]
  40deec:	add	x14, x1, x8
  40def0:	add	x8, x8, #0x20
  40def4:	add	x11, x13, x11
  40def8:	str	x11, [x14]
  40defc:	ldr	x13, [x9, #8]
  40df00:	ldr	x15, [x9, #1032]
  40df04:	and	x16, x13, #0x7f8
  40df08:	ldr	x16, [x0, x16]
  40df0c:	add	x12, x15, x12
  40df10:	add	x11, x12, x11
  40df14:	eor	x12, x12, x12, lsl #12
  40df18:	add	x11, x11, x16
  40df1c:	str	x11, [x9, #8]
  40df20:	lsr	x11, x11, #8
  40df24:	and	x11, x11, #0x7f8
  40df28:	ldr	x11, [x0, x11]
  40df2c:	add	x11, x11, x13
  40df30:	str	x11, [x14, #8]
  40df34:	ldr	x13, [x9, #16]
  40df38:	ldr	x15, [x9, #1040]
  40df3c:	and	x16, x13, #0x7f8
  40df40:	ldr	x16, [x0, x16]
  40df44:	add	x12, x15, x12
  40df48:	add	x11, x12, x11
  40df4c:	eor	x12, x12, x12, lsr #33
  40df50:	add	x11, x11, x16
  40df54:	str	x11, [x9, #16]
  40df58:	lsr	x11, x11, #8
  40df5c:	and	x11, x11, #0x7f8
  40df60:	ldr	x11, [x0, x11]
  40df64:	add	x11, x11, x13
  40df68:	str	x11, [x14, #16]
  40df6c:	ldr	x15, [x9, #24]
  40df70:	ldr	x13, [x9, #1048]
  40df74:	and	x16, x15, #0x7f8
  40df78:	ldr	x16, [x0, x16]
  40df7c:	add	x13, x13, x12
  40df80:	add	x11, x13, x11
  40df84:	add	x11, x11, x16
  40df88:	str	x11, [x9, #24]
  40df8c:	lsr	x9, x11, #8
  40df90:	and	x9, x9, #0x7f8
  40df94:	ldr	x11, [x0, x9]
  40df98:	add	x9, x0, x8
  40df9c:	cmp	x9, x10
  40dfa0:	add	x15, x11, x15
  40dfa4:	str	x15, [x14, #24]
  40dfa8:	b.cc	40deb4 <ferror@plt+0xaee4>  // b.lo, b.ul, b.last
  40dfac:	mov	x10, xzr
  40dfb0:	add	x11, x0, #0x800
  40dfb4:	add	x12, x1, x8
  40dfb8:	ldr	x16, [x9, x10]
  40dfbc:	add	x14, x9, x10
  40dfc0:	sub	x17, x14, #0x400
  40dfc4:	ldr	x17, [x17]
  40dfc8:	and	x18, x16, #0x7f8
  40dfcc:	ldr	x18, [x0, x18]
  40dfd0:	eon	x13, x13, x13, lsl #21
  40dfd4:	add	x13, x13, x17
  40dfd8:	add	x15, x13, x15
  40dfdc:	add	x15, x15, x18
  40dfe0:	str	x15, [x9, x10]
  40dfe4:	lsr	x15, x15, #8
  40dfe8:	and	x15, x15, #0x7f8
  40dfec:	ldr	x15, [x0, x15]
  40dff0:	add	x17, x0, x10
  40dff4:	add	x17, x17, x8
  40dff8:	sub	x18, x14, #0x3f8
  40dffc:	add	x15, x15, x16
  40e000:	str	x15, [x12, x10]
  40e004:	ldr	x16, [x17, #8]
  40e008:	ldr	x18, [x18]
  40e00c:	eor	x13, x13, x13, lsr #5
  40e010:	and	x2, x16, #0x7f8
  40e014:	ldr	x2, [x0, x2]
  40e018:	add	x13, x18, x13
  40e01c:	add	x15, x13, x15
  40e020:	add	x18, x1, x10
  40e024:	add	x15, x15, x2
  40e028:	str	x15, [x17, #8]
  40e02c:	lsr	x15, x15, #8
  40e030:	and	x15, x15, #0x7f8
  40e034:	ldr	x15, [x0, x15]
  40e038:	add	x18, x18, x8
  40e03c:	sub	x2, x14, #0x3f0
  40e040:	eor	x13, x13, x13, lsl #12
  40e044:	add	x15, x15, x16
  40e048:	str	x15, [x18, #8]
  40e04c:	ldr	x16, [x17, #16]
  40e050:	ldr	x2, [x2]
  40e054:	and	x3, x16, #0x7f8
  40e058:	ldr	x3, [x0, x3]
  40e05c:	add	x13, x2, x13
  40e060:	add	x15, x13, x15
  40e064:	eor	x13, x13, x13, lsr #33
  40e068:	add	x15, x15, x3
  40e06c:	str	x15, [x17, #16]
  40e070:	lsr	x15, x15, #8
  40e074:	and	x15, x15, #0x7f8
  40e078:	ldr	x15, [x0, x15]
  40e07c:	add	x15, x15, x16
  40e080:	str	x15, [x18, #16]
  40e084:	ldr	x16, [x17, #24]
  40e088:	sub	x18, x14, #0x3e8
  40e08c:	ldr	x18, [x18]
  40e090:	add	x14, x14, #0x20
  40e094:	and	x2, x16, #0x7f8
  40e098:	ldr	x2, [x0, x2]
  40e09c:	add	x13, x18, x13
  40e0a0:	add	x15, x13, x15
  40e0a4:	cmp	x14, x11
  40e0a8:	add	x15, x15, x2
  40e0ac:	str	x15, [x17, #24]
  40e0b0:	lsr	x15, x15, #8
  40e0b4:	and	x15, x15, #0x7f8
  40e0b8:	ldr	x15, [x0, x15]
  40e0bc:	add	x17, x12, x10
  40e0c0:	add	x10, x10, #0x20
  40e0c4:	add	x15, x15, x16
  40e0c8:	str	x15, [x17, #24]
  40e0cc:	b.cc	40dfb8 <ferror@plt+0xafe8>  // b.lo, b.ul, b.last
  40e0d0:	str	x13, [x0, #2048]
  40e0d4:	str	x15, [x0, #2056]
  40e0d8:	ret
  40e0dc:	mov	x11, #0x4b7c                	// #19324
  40e0e0:	mov	x12, #0xc862                	// #51298
  40e0e4:	mov	x15, #0x12a0                	// #4768
  40e0e8:	mov	x13, #0x5524                	// #21796
  40e0ec:	mov	x16, #0xe0ce                	// #57550
  40e0f0:	mov	x14, #0x9315                	// #37653
  40e0f4:	mov	x17, #0x89ed                	// #35309
  40e0f8:	mov	x8, #0xc0ab                	// #49323
  40e0fc:	movk	x11, #0xa288, lsl #16
  40e100:	movk	x12, #0xc73a, lsl #16
  40e104:	movk	x15, #0x3d47, lsl #16
  40e108:	movk	x13, #0x4a59, lsl #16
  40e10c:	movk	x16, #0x8355, lsl #16
  40e110:	movk	x14, #0xa5a0, lsl #16
  40e114:	movk	x17, #0xcbfc, lsl #16
  40e118:	movk	x8, #0x6c44, lsl #16
  40e11c:	movk	x11, #0x4677, lsl #32
  40e120:	movk	x12, #0xb322, lsl #32
  40e124:	movk	x15, #0xa505, lsl #32
  40e128:	movk	x13, #0x2e82, lsl #32
  40e12c:	movk	x16, #0x53db, lsl #32
  40e130:	movk	x14, #0x4a0f, lsl #32
  40e134:	movk	x17, #0x5bf2, lsl #32
  40e138:	movk	x8, #0x704f, lsl #32
  40e13c:	add	x9, x0, #0x20
  40e140:	movk	x11, #0x647c, lsl #48
  40e144:	movk	x12, #0xb9f8, lsl #48
  40e148:	movk	x15, #0x8c0e, lsl #48
  40e14c:	movk	x13, #0xb29b, lsl #48
  40e150:	movk	x16, #0x82f0, lsl #48
  40e154:	movk	x14, #0x48fe, lsl #48
  40e158:	movk	x17, #0xae98, lsl #48
  40e15c:	movk	x8, #0x98f5, lsl #48
  40e160:	mov	x10, #0xfffffffffffffff8    	// #-8
  40e164:	ldp	x18, x1, [x9, #-32]
  40e168:	add	x10, x10, #0x8
  40e16c:	cmp	x10, #0xf8
  40e170:	add	x11, x18, x11
  40e174:	ldp	x2, x18, [x9, #-16]
  40e178:	add	x12, x1, x12
  40e17c:	add	x15, x2, x15
  40e180:	ldp	x1, x2, [x9]
  40e184:	add	x13, x18, x13
  40e188:	add	x16, x1, x16
  40e18c:	ldp	x18, x1, [x9, #16]
  40e190:	add	x14, x2, x14
  40e194:	sub	x11, x11, x16
  40e198:	add	x8, x1, x8
  40e19c:	add	x17, x18, x17
  40e1a0:	eor	x14, x14, x8, lsr #9
  40e1a4:	add	x8, x8, x11
  40e1a8:	sub	x12, x12, x14
  40e1ac:	eor	x17, x17, x11, lsl #9
  40e1b0:	add	x11, x12, x11
  40e1b4:	sub	x15, x15, x17
  40e1b8:	eor	x8, x8, x12, lsr #23
  40e1bc:	add	x12, x12, x15
  40e1c0:	sub	x13, x13, x8
  40e1c4:	eor	x11, x11, x15, lsl #15
  40e1c8:	sub	x16, x16, x11
  40e1cc:	eor	x12, x12, x13, lsr #14
  40e1d0:	add	x15, x13, x15
  40e1d4:	add	x13, x13, x16
  40e1d8:	sub	x14, x14, x12
  40e1dc:	eor	x15, x15, x16, lsl #20
  40e1e0:	eor	x13, x13, x14, lsr #17
  40e1e4:	add	x16, x14, x16
  40e1e8:	sub	x17, x17, x15
  40e1ec:	sub	x8, x8, x13
  40e1f0:	add	x14, x14, x17
  40e1f4:	eor	x16, x16, x17, lsl #14
  40e1f8:	add	x17, x8, x17
  40e1fc:	stp	x11, x12, [x9, #-32]
  40e200:	stp	x15, x13, [x9, #-16]
  40e204:	stp	x16, x14, [x9]
  40e208:	stp	x17, x8, [x9, #16]
  40e20c:	add	x9, x9, #0x40
  40e210:	b.cc	40e164 <ferror@plt+0xb194>  // b.lo, b.ul, b.last
  40e214:	add	x9, x0, #0x20
  40e218:	mov	x10, #0xfffffffffffffff8    	// #-8
  40e21c:	ldp	x18, x1, [x9, #-32]
  40e220:	add	x10, x10, #0x8
  40e224:	cmp	x10, #0xf8
  40e228:	add	x11, x18, x11
  40e22c:	ldp	x2, x18, [x9, #-16]
  40e230:	add	x12, x1, x12
  40e234:	add	x15, x2, x15
  40e238:	ldp	x1, x2, [x9]
  40e23c:	add	x13, x18, x13
  40e240:	add	x16, x1, x16
  40e244:	ldp	x18, x1, [x9, #16]
  40e248:	add	x14, x2, x14
  40e24c:	sub	x11, x11, x16
  40e250:	add	x8, x1, x8
  40e254:	add	x17, x18, x17
  40e258:	eor	x14, x14, x8, lsr #9
  40e25c:	add	x8, x8, x11
  40e260:	sub	x12, x12, x14
  40e264:	eor	x17, x17, x11, lsl #9
  40e268:	add	x11, x12, x11
  40e26c:	sub	x15, x15, x17
  40e270:	eor	x8, x8, x12, lsr #23
  40e274:	add	x12, x12, x15
  40e278:	sub	x13, x13, x8
  40e27c:	eor	x11, x11, x15, lsl #15
  40e280:	sub	x16, x16, x11
  40e284:	eor	x12, x12, x13, lsr #14
  40e288:	add	x15, x13, x15
  40e28c:	add	x13, x13, x16
  40e290:	sub	x14, x14, x12
  40e294:	eor	x15, x15, x16, lsl #20
  40e298:	eor	x13, x13, x14, lsr #17
  40e29c:	add	x16, x14, x16
  40e2a0:	sub	x17, x17, x15
  40e2a4:	sub	x8, x8, x13
  40e2a8:	add	x14, x14, x17
  40e2ac:	eor	x16, x16, x17, lsl #14
  40e2b0:	add	x17, x8, x17
  40e2b4:	stp	x11, x12, [x9, #-32]
  40e2b8:	stp	x15, x13, [x9, #-16]
  40e2bc:	stp	x16, x14, [x9]
  40e2c0:	stp	x17, x8, [x9, #16]
  40e2c4:	add	x9, x9, #0x40
  40e2c8:	b.cc	40e21c <ferror@plt+0xb24c>  // b.lo, b.ul, b.last
  40e2cc:	movi	v0.2d, #0x0
  40e2d0:	str	xzr, [x0, #2064]
  40e2d4:	str	q0, [x0, #2048]
  40e2d8:	ret
  40e2dc:	stp	x29, x30, [sp, #-48]!
  40e2e0:	str	x21, [sp, #16]
  40e2e4:	stp	x20, x19, [sp, #32]
  40e2e8:	adrp	x20, 402000 <mbrtowc@plt-0x850>
  40e2ec:	adrp	x21, 402000 <mbrtowc@plt-0x850>
  40e2f0:	add	x20, x20, #0xa60
  40e2f4:	add	x21, x21, #0xd30
  40e2f8:	mov	x19, x0
  40e2fc:	add	x0, x0, #0x18
  40e300:	mov	x1, xzr
  40e304:	mov	x2, xzr
  40e308:	mov	x3, x20
  40e30c:	mov	x4, x21
  40e310:	mov	x29, sp
  40e314:	stp	xzr, xzr, [x19]
  40e318:	str	xzr, [x19, #16]
  40e31c:	bl	410228 <_obstack_begin@@Base>
  40e320:	add	x0, x19, #0x70
  40e324:	mov	x1, xzr
  40e328:	mov	x2, xzr
  40e32c:	mov	x3, x20
  40e330:	mov	x4, x21
  40e334:	bl	410228 <_obstack_begin@@Base>
  40e338:	add	x0, x19, #0xc8
  40e33c:	mov	x3, x20
  40e340:	mov	x4, x21
  40e344:	ldp	x20, x19, [sp, #32]
  40e348:	ldr	x21, [sp, #16]
  40e34c:	mov	x1, xzr
  40e350:	mov	x2, xzr
  40e354:	ldp	x29, x30, [sp], #48
  40e358:	b	410228 <_obstack_begin@@Base>
  40e35c:	stp	x29, x30, [sp, #-32]!
  40e360:	str	x19, [sp, #16]
  40e364:	mov	x19, x0
  40e368:	add	x0, x0, #0x18
  40e36c:	mov	x1, xzr
  40e370:	mov	x29, sp
  40e374:	bl	4104a8 <_obstack_free@@Base>
  40e378:	add	x0, x19, #0x70
  40e37c:	mov	x1, xzr
  40e380:	bl	4104a8 <_obstack_free@@Base>
  40e384:	add	x0, x19, #0xc8
  40e388:	ldr	x19, [sp, #16]
  40e38c:	mov	x1, xzr
  40e390:	ldp	x29, x30, [sp], #32
  40e394:	b	4104a8 <_obstack_free@@Base>
  40e398:	stp	x29, x30, [sp, #-48]!
  40e39c:	stp	x22, x21, [sp, #16]
  40e3a0:	stp	x20, x19, [sp, #32]
  40e3a4:	mov	x29, sp
  40e3a8:	mov	x20, x1
  40e3ac:	mov	x19, x0
  40e3b0:	bl	402b00 <fgetc@plt>
  40e3b4:	cmn	w0, #0x1
  40e3b8:	b.eq	40e40c <ferror@plt+0xb43c>  // b.none
  40e3bc:	mov	w22, w0
  40e3c0:	add	x21, x20, #0x18
  40e3c4:	ldp	x8, x9, [x20, #48]
  40e3c8:	cmp	x9, x8
  40e3cc:	b.ne	40e3e0 <ferror@plt+0xb410>  // b.any
  40e3d0:	mov	w1, #0x1                   	// #1
  40e3d4:	mov	x0, x21
  40e3d8:	bl	410330 <_obstack_newchunk@@Base>
  40e3dc:	ldr	x8, [x20, #48]
  40e3e0:	add	x9, x8, #0x1
  40e3e4:	str	x9, [x20, #48]
  40e3e8:	strb	w22, [x8]
  40e3ec:	cbnz	w22, 40e3f8 <ferror@plt+0xb428>
  40e3f0:	mov	x0, x20
  40e3f4:	bl	40e534 <ferror@plt+0xb564>
  40e3f8:	mov	x0, x19
  40e3fc:	bl	402b00 <fgetc@plt>
  40e400:	mov	w22, w0
  40e404:	cmn	w0, #0x1
  40e408:	b.ne	40e3c4 <ferror@plt+0xb3f4>  // b.any
  40e40c:	ldp	x9, x8, [x20, #40]
  40e410:	cmp	x8, x9
  40e414:	b.eq	40e448 <ferror@plt+0xb478>  // b.none
  40e418:	ldr	x9, [x20, #56]
  40e41c:	cmp	x9, x8
  40e420:	b.ne	40e434 <ferror@plt+0xb464>  // b.any
  40e424:	add	x0, x20, #0x18
  40e428:	mov	w1, #0x1                   	// #1
  40e42c:	bl	410330 <_obstack_newchunk@@Base>
  40e430:	ldr	x8, [x20, #48]
  40e434:	add	x9, x8, #0x1
  40e438:	mov	x0, x20
  40e43c:	str	x9, [x20, #48]
  40e440:	strb	wzr, [x8]
  40e444:	bl	40e534 <ferror@plt+0xb564>
  40e448:	ldp	x8, x9, [x20, #136]
  40e44c:	sub	x9, x9, x8
  40e450:	cmp	x9, #0x8
  40e454:	b.cs	40e468 <ferror@plt+0xb498>  // b.hs, b.nlast
  40e458:	add	x0, x20, #0x70
  40e45c:	mov	w1, #0x8                   	// #8
  40e460:	bl	410330 <_obstack_newchunk@@Base>
  40e464:	ldr	x8, [x20, #136]
  40e468:	str	xzr, [x8]
  40e46c:	ldp	x8, x9, [x20, #128]
  40e470:	add	x9, x9, #0x8
  40e474:	cmp	x9, x8
  40e478:	str	x9, [x20, #136]
  40e47c:	b.ne	40e48c <ferror@plt+0xb4bc>  // b.any
  40e480:	ldrb	w10, [x20, #192]
  40e484:	orr	w10, w10, #0x2
  40e488:	strb	w10, [x20, #192]
  40e48c:	ldr	x11, [x20, #160]
  40e490:	ldr	x12, [x20, #120]
  40e494:	ldr	x10, [x20, #144]
  40e498:	add	x9, x11, x9
  40e49c:	bic	x11, x9, x11
  40e4a0:	sub	x9, x11, x12
  40e4a4:	sub	x12, x10, x12
  40e4a8:	cmp	x9, x12
  40e4ac:	str	x11, [x20, #136]
  40e4b0:	b.ls	40e4bc <ferror@plt+0xb4ec>  // b.plast
  40e4b4:	mov	x11, x10
  40e4b8:	str	x10, [x20, #136]
  40e4bc:	ldp	x9, x10, [x20, #216]
  40e4c0:	str	x11, [x20, #128]
  40e4c4:	str	x8, [x20, #8]
  40e4c8:	cmp	x10, x9
  40e4cc:	b.ne	40e4dc <ferror@plt+0xb50c>  // b.any
  40e4d0:	ldrb	w8, [x20, #280]
  40e4d4:	orr	w8, w8, #0x2
  40e4d8:	strb	w8, [x20, #280]
  40e4dc:	ldr	x11, [x20, #248]
  40e4e0:	ldr	x12, [x20, #208]
  40e4e4:	ldr	x8, [x20, #232]
  40e4e8:	add	x10, x11, x10
  40e4ec:	bic	x10, x10, x11
  40e4f0:	sub	x11, x10, x12
  40e4f4:	sub	x12, x8, x12
  40e4f8:	cmp	x11, x12
  40e4fc:	str	x10, [x20, #224]
  40e500:	b.ls	40e50c <ferror@plt+0xb53c>  // b.plast
  40e504:	mov	x10, x8
  40e508:	str	x8, [x20, #224]
  40e50c:	mov	x0, x19
  40e510:	str	x10, [x20, #216]
  40e514:	str	x9, [x20, #16]
  40e518:	bl	402fd0 <ferror@plt>
  40e51c:	ldp	x20, x19, [sp, #32]
  40e520:	ldp	x22, x21, [sp, #16]
  40e524:	cmp	w0, #0x0
  40e528:	cset	w0, eq  // eq = none
  40e52c:	ldp	x29, x30, [sp], #48
  40e530:	ret
  40e534:	sub	sp, sp, #0x30
  40e538:	stp	x29, x30, [sp, #16]
  40e53c:	stp	x20, x19, [sp, #32]
  40e540:	ldp	x20, x8, [x0, #40]
  40e544:	mov	x19, x0
  40e548:	add	x29, sp, #0x10
  40e54c:	mvn	x9, x20
  40e550:	add	x9, x8, x9
  40e554:	cmp	x8, x20
  40e558:	str	x9, [sp, #8]
  40e55c:	b.ne	40e56c <ferror@plt+0xb59c>  // b.any
  40e560:	ldrb	w9, [x19, #104]
  40e564:	orr	w9, w9, #0x2
  40e568:	strb	w9, [x19, #104]
  40e56c:	ldr	x9, [x19, #72]
  40e570:	ldr	x11, [x19, #32]
  40e574:	ldr	x10, [x19, #56]
  40e578:	add	x8, x9, x8
  40e57c:	bic	x9, x8, x9
  40e580:	sub	x8, x9, x11
  40e584:	sub	x11, x10, x11
  40e588:	cmp	x8, x11
  40e58c:	str	x9, [x19, #48]
  40e590:	b.ls	40e59c <ferror@plt+0xb5cc>  // b.plast
  40e594:	mov	x9, x10
  40e598:	str	x10, [x19, #48]
  40e59c:	ldp	x8, x10, [x19, #136]
  40e5a0:	str	x9, [x19, #40]
  40e5a4:	sub	x10, x10, x8
  40e5a8:	cmp	x10, #0x8
  40e5ac:	b.cs	40e5c0 <ferror@plt+0xb5f0>  // b.hs, b.nlast
  40e5b0:	add	x0, x19, #0x70
  40e5b4:	mov	w1, #0x8                   	// #8
  40e5b8:	bl	410330 <_obstack_newchunk@@Base>
  40e5bc:	ldr	x8, [x19, #136]
  40e5c0:	str	x20, [x8]
  40e5c4:	ldp	x8, x10, [x19, #224]
  40e5c8:	ldr	x9, [x19, #136]
  40e5cc:	sub	x10, x10, x8
  40e5d0:	add	x9, x9, #0x8
  40e5d4:	cmp	x10, #0x7
  40e5d8:	str	x9, [x19, #136]
  40e5dc:	b.hi	40e5f0 <ferror@plt+0xb620>  // b.pmore
  40e5e0:	add	x0, x19, #0xc8
  40e5e4:	mov	w1, #0x8                   	// #8
  40e5e8:	bl	410330 <_obstack_newchunk@@Base>
  40e5ec:	ldr	x8, [x19, #224]
  40e5f0:	ldr	x9, [sp, #8]
  40e5f4:	str	x9, [x8]
  40e5f8:	ldr	x8, [x19, #224]
  40e5fc:	ldr	x9, [x19]
  40e600:	add	x8, x8, #0x8
  40e604:	add	x9, x9, #0x1
  40e608:	str	x8, [x19, #224]
  40e60c:	str	x9, [x19]
  40e610:	ldp	x20, x19, [sp, #32]
  40e614:	ldp	x29, x30, [sp, #16]
  40e618:	add	sp, sp, #0x30
  40e61c:	ret
  40e620:	stp	x29, x30, [sp, #-16]!
  40e624:	mov	x29, sp
  40e628:	bl	402e70 <mkstemp@plt>
  40e62c:	ldp	x29, x30, [sp], #16
  40e630:	b	40eac8 <ferror@plt+0xbaf8>
  40e634:	stp	x29, x30, [sp, #-32]!
  40e638:	str	x19, [sp, #16]
  40e63c:	mov	x29, sp
  40e640:	mov	w19, w1
  40e644:	bl	402c30 <mkostemp@plt>
  40e648:	mov	w1, w19
  40e64c:	ldr	x19, [sp, #16]
  40e650:	ldp	x29, x30, [sp], #32
  40e654:	b	410870 <_obstack_memory_used@@Base+0x330>
  40e658:	ldrb	w8, [x0]
  40e65c:	ldrb	w9, [x1]
  40e660:	cmp	w8, #0x2d
  40e664:	b.ne	40e730 <ferror@plt+0xb760>  // b.any
  40e668:	ldrb	w8, [x0, #1]!
  40e66c:	subs	w11, w8, #0x30
  40e670:	b.eq	40e668 <ferror@plt+0xb698>  // b.none
  40e674:	cmp	w8, w3
  40e678:	b.eq	40e668 <ferror@plt+0xb698>  // b.none
  40e67c:	cmp	w9, #0x2d
  40e680:	b.ne	40e858 <ferror@plt+0xb888>  // b.any
  40e684:	ldrb	w9, [x1, #1]!
  40e688:	cmp	w9, #0x30
  40e68c:	b.eq	40e684 <ferror@plt+0xb6b4>  // b.none
  40e690:	cmp	w9, w3
  40e694:	b.eq	40e684 <ferror@plt+0xb6b4>  // b.none
  40e698:	b	40e6b8 <ferror@plt+0xb6e8>
  40e69c:	ldrb	w8, [x0, #1]!
  40e6a0:	cmp	w8, w3
  40e6a4:	b.eq	40e69c <ferror@plt+0xb6cc>  // b.none
  40e6a8:	ldrb	w9, [x1, #1]!
  40e6ac:	cmp	w9, w3
  40e6b0:	b.eq	40e6a8 <ferror@plt+0xb6d8>  // b.none
  40e6b4:	sub	w11, w8, #0x30
  40e6b8:	cmp	w11, #0xa
  40e6bc:	cset	w10, cc  // cc = lo, ul, last
  40e6c0:	cmp	w11, #0x9
  40e6c4:	b.hi	40e6d0 <ferror@plt+0xb700>  // b.pmore
  40e6c8:	cmp	w9, w8
  40e6cc:	b.eq	40e69c <ferror@plt+0xb6cc>  // b.none
  40e6d0:	cmp	w8, w2
  40e6d4:	sub	w11, w9, #0x30
  40e6d8:	cset	w12, ne  // ne = any
  40e6dc:	cmp	w11, #0xa
  40e6e0:	cset	w13, cc  // cc = lo, ul, last
  40e6e4:	cmp	w9, w2
  40e6e8:	cset	w14, eq  // eq = none
  40e6ec:	eor	w10, w10, #0x1
  40e6f0:	and	w10, w14, w10
  40e6f4:	tbnz	w10, #0, 40e8a0 <ferror@plt+0xb8d0>
  40e6f8:	orr	w10, w13, w12
  40e6fc:	tbz	w10, #0, 40e8a0 <ferror@plt+0xb8d0>
  40e700:	sub	w10, w8, #0x30
  40e704:	cmp	w10, #0x9
  40e708:	b.hi	40e964 <ferror@plt+0xb994>  // b.pmore
  40e70c:	mov	x10, xzr
  40e710:	ldrb	w12, [x0, #1]!
  40e714:	cmp	w12, w3
  40e718:	b.eq	40e710 <ferror@plt+0xb740>  // b.none
  40e71c:	sub	w12, w12, #0x30
  40e720:	cmp	w12, #0xa
  40e724:	add	x10, x10, #0x1
  40e728:	b.cc	40e710 <ferror@plt+0xb740>  // b.lo, b.ul, b.last
  40e72c:	b	40e968 <ferror@plt+0xb998>
  40e730:	cmp	w9, #0x2d
  40e734:	b.ne	40e77c <ferror@plt+0xb7ac>  // b.any
  40e738:	ldrb	w9, [x1, #1]!
  40e73c:	cmp	w9, #0x30
  40e740:	b.eq	40e738 <ferror@plt+0xb768>  // b.none
  40e744:	cmp	w9, w3
  40e748:	b.eq	40e738 <ferror@plt+0xb768>  // b.none
  40e74c:	cmp	w9, w2
  40e750:	b.ne	40e768 <ferror@plt+0xb798>  // b.any
  40e754:	mov	w10, #0x1                   	// #1
  40e758:	ldrb	w9, [x1, x10]
  40e75c:	add	x10, x10, #0x1
  40e760:	cmp	w9, #0x30
  40e764:	b.eq	40e758 <ferror@plt+0xb788>  // b.none
  40e768:	sub	w9, w9, #0x30
  40e76c:	cmp	w9, #0xa
  40e770:	b.cs	40e840 <ferror@plt+0xb870>  // b.hs, b.nlast
  40e774:	mov	w0, #0x1                   	// #1
  40e778:	ret
  40e77c:	cmp	w8, #0x30
  40e780:	b.eq	40e78c <ferror@plt+0xb7bc>  // b.none
  40e784:	cmp	w8, w3
  40e788:	b.ne	40e798 <ferror@plt+0xb7c8>  // b.any
  40e78c:	ldrb	w8, [x0, #1]!
  40e790:	b	40e77c <ferror@plt+0xb7ac>
  40e794:	ldrb	w9, [x1, #1]!
  40e798:	cmp	w9, #0x30
  40e79c:	b.eq	40e794 <ferror@plt+0xb7c4>  // b.none
  40e7a0:	cmp	w9, w3
  40e7a4:	b.eq	40e794 <ferror@plt+0xb7c4>  // b.none
  40e7a8:	b	40e7c4 <ferror@plt+0xb7f4>
  40e7ac:	ldrb	w8, [x0, #1]!
  40e7b0:	cmp	w8, w3
  40e7b4:	b.eq	40e7ac <ferror@plt+0xb7dc>  // b.none
  40e7b8:	ldrb	w9, [x1, #1]!
  40e7bc:	cmp	w9, w3
  40e7c0:	b.eq	40e7b8 <ferror@plt+0xb7e8>  // b.none
  40e7c4:	sub	w11, w8, #0x30
  40e7c8:	cmp	w11, #0xa
  40e7cc:	cset	w10, cc  // cc = lo, ul, last
  40e7d0:	cmp	w11, #0x9
  40e7d4:	b.hi	40e7e0 <ferror@plt+0xb810>  // b.pmore
  40e7d8:	cmp	w8, w9
  40e7dc:	b.eq	40e7ac <ferror@plt+0xb7dc>  // b.none
  40e7e0:	cmp	w8, w2
  40e7e4:	sub	w11, w9, #0x30
  40e7e8:	cset	w12, ne  // ne = any
  40e7ec:	cmp	w11, #0xa
  40e7f0:	cset	w13, cc  // cc = lo, ul, last
  40e7f4:	cmp	w9, w2
  40e7f8:	cset	w14, eq  // eq = none
  40e7fc:	eor	w10, w10, #0x1
  40e800:	and	w10, w14, w10
  40e804:	tbnz	w10, #0, 40e8e0 <ferror@plt+0xb910>
  40e808:	orr	w10, w13, w12
  40e80c:	tbz	w10, #0, 40e8e0 <ferror@plt+0xb910>
  40e810:	sub	w10, w8, #0x30
  40e814:	cmp	w10, #0x9
  40e818:	b.hi	40e994 <ferror@plt+0xb9c4>  // b.pmore
  40e81c:	mov	x10, xzr
  40e820:	ldrb	w12, [x0, #1]!
  40e824:	cmp	w12, w3
  40e828:	b.eq	40e820 <ferror@plt+0xb850>  // b.none
  40e82c:	sub	w12, w12, #0x30
  40e830:	cmp	w12, #0xa
  40e834:	add	x10, x10, #0x1
  40e838:	b.cc	40e820 <ferror@plt+0xb850>  // b.lo, b.ul, b.last
  40e83c:	b	40e998 <ferror@plt+0xb9c8>
  40e840:	cmp	w8, #0x30
  40e844:	b.eq	40e850 <ferror@plt+0xb880>  // b.none
  40e848:	cmp	w8, w3
  40e84c:	b.ne	40e920 <ferror@plt+0xb950>  // b.any
  40e850:	ldrb	w8, [x0, #1]!
  40e854:	b	40e840 <ferror@plt+0xb870>
  40e858:	cmp	w8, w2
  40e85c:	b.ne	40e874 <ferror@plt+0xb8a4>  // b.any
  40e860:	mov	w10, #0x1                   	// #1
  40e864:	ldrb	w8, [x0, x10]
  40e868:	add	x10, x10, #0x1
  40e86c:	cmp	w8, #0x30
  40e870:	b.eq	40e864 <ferror@plt+0xb894>  // b.none
  40e874:	sub	w8, w8, #0x30
  40e878:	cmp	w8, #0xa
  40e87c:	b.cs	40e888 <ferror@plt+0xb8b8>  // b.hs, b.nlast
  40e880:	mov	w0, #0xffffffff            	// #-1
  40e884:	ret
  40e888:	cmp	w9, #0x30
  40e88c:	b.eq	40e898 <ferror@plt+0xb8c8>  // b.none
  40e890:	cmp	w9, w3
  40e894:	b.ne	40e940 <ferror@plt+0xb970>  // b.any
  40e898:	ldrb	w9, [x1, #1]!
  40e89c:	b	40e888 <ferror@plt+0xb8b8>
  40e8a0:	cmp	w9, w2, uxtb
  40e8a4:	b.ne	40e9c4 <ferror@plt+0xb9f4>  // b.any
  40e8a8:	add	x9, x1, #0x1
  40e8ac:	cmp	w8, w2, uxtb
  40e8b0:	b.ne	40ea78 <ferror@plt+0xbaa8>  // b.any
  40e8b4:	add	x8, x0, #0x1
  40e8b8:	ldrb	w10, [x9]
  40e8bc:	ldrb	w11, [x8]
  40e8c0:	subs	w0, w10, w11
  40e8c4:	sub	w10, w10, #0x30
  40e8c8:	b.ne	40ea5c <ferror@plt+0xba8c>  // b.any
  40e8cc:	add	x9, x9, #0x1
  40e8d0:	cmp	w10, #0xa
  40e8d4:	add	x8, x8, #0x1
  40e8d8:	b.cc	40e8b8 <ferror@plt+0xb8e8>  // b.lo, b.ul, b.last
  40e8dc:	b	40ea30 <ferror@plt+0xba60>
  40e8e0:	cmp	w8, w2, uxtb
  40e8e4:	b.ne	40e9e0 <ferror@plt+0xba10>  // b.any
  40e8e8:	cmp	w9, w8
  40e8ec:	b.ne	40ea48 <ferror@plt+0xba78>  // b.any
  40e8f0:	add	x9, x0, #0x1
  40e8f4:	add	x8, x1, #0x1
  40e8f8:	ldrb	w10, [x9]
  40e8fc:	ldrb	w11, [x8]
  40e900:	subs	w0, w10, w11
  40e904:	sub	w10, w10, #0x30
  40e908:	b.ne	40ea90 <ferror@plt+0xbac0>  // b.any
  40e90c:	add	x9, x9, #0x1
  40e910:	cmp	w10, #0xa
  40e914:	add	x8, x8, #0x1
  40e918:	b.cc	40e8f8 <ferror@plt+0xb928>  // b.lo, b.ul, b.last
  40e91c:	b	40ea30 <ferror@plt+0xba60>
  40e920:	cmp	w8, w2
  40e924:	b.ne	40e938 <ferror@plt+0xb968>  // b.any
  40e928:	add	x9, x0, #0x1
  40e92c:	ldrb	w8, [x9], #1
  40e930:	cmp	w8, #0x30
  40e934:	b.eq	40e92c <ferror@plt+0xb95c>  // b.none
  40e938:	sub	w8, w8, #0x30
  40e93c:	b	40ea84 <ferror@plt+0xbab4>
  40e940:	cmp	w9, w2
  40e944:	b.ne	40e958 <ferror@plt+0xb988>  // b.any
  40e948:	add	x8, x1, #0x1
  40e94c:	ldrb	w9, [x8], #1
  40e950:	cmp	w9, #0x30
  40e954:	b.eq	40e94c <ferror@plt+0xb97c>  // b.none
  40e958:	sub	w8, w9, #0x30
  40e95c:	cmp	w8, #0xa
  40e960:	b	40e9fc <ferror@plt+0xba2c>
  40e964:	mov	x10, xzr
  40e968:	cmp	w11, #0x9
  40e96c:	b.hi	40ea04 <ferror@plt+0xba34>  // b.pmore
  40e970:	mov	x11, xzr
  40e974:	ldrb	w12, [x1, #1]!
  40e978:	cmp	w12, w3
  40e97c:	b.eq	40e974 <ferror@plt+0xb9a4>  // b.none
  40e980:	sub	w12, w12, #0x30
  40e984:	cmp	w12, #0xa
  40e988:	add	x11, x11, #0x1
  40e98c:	b.cc	40e974 <ferror@plt+0xb9a4>  // b.lo, b.ul, b.last
  40e990:	b	40ea08 <ferror@plt+0xba38>
  40e994:	mov	x10, xzr
  40e998:	cmp	w11, #0x9
  40e99c:	b.hi	40ea18 <ferror@plt+0xba48>  // b.pmore
  40e9a0:	mov	x11, xzr
  40e9a4:	ldrb	w12, [x1, #1]!
  40e9a8:	cmp	w12, w3
  40e9ac:	b.eq	40e9a4 <ferror@plt+0xb9d4>  // b.none
  40e9b0:	sub	w12, w12, #0x30
  40e9b4:	cmp	w12, #0xa
  40e9b8:	add	x11, x11, #0x1
  40e9bc:	b.cc	40e9a4 <ferror@plt+0xb9d4>  // b.lo, b.ul, b.last
  40e9c0:	b	40ea1c <ferror@plt+0xba4c>
  40e9c4:	cmp	w8, w2, uxtb
  40e9c8:	b.ne	40eac0 <ferror@plt+0xbaf0>  // b.any
  40e9cc:	add	x8, x0, #0x1
  40e9d0:	ldrb	w9, [x8], #1
  40e9d4:	subs	w9, w9, #0x30
  40e9d8:	b.eq	40e9d0 <ferror@plt+0xba00>  // b.none
  40e9dc:	b	40e9f8 <ferror@plt+0xba28>
  40e9e0:	cmp	w9, w2, uxtb
  40e9e4:	b.ne	40eac0 <ferror@plt+0xbaf0>  // b.any
  40e9e8:	add	x8, x1, #0x1
  40e9ec:	ldrb	w9, [x8], #1
  40e9f0:	subs	w9, w9, #0x30
  40e9f4:	b.eq	40e9ec <ferror@plt+0xba1c>  // b.none
  40e9f8:	cmp	w9, #0xa
  40e9fc:	csetm	w0, cc  // cc = lo, ul, last
  40ea00:	ret
  40ea04:	mov	x11, xzr
  40ea08:	cmp	x10, x11
  40ea0c:	b.ne	40ea34 <ferror@plt+0xba64>  // b.any
  40ea10:	sub	w8, w9, w8
  40ea14:	b	40ea28 <ferror@plt+0xba58>
  40ea18:	mov	x11, xzr
  40ea1c:	cmp	x10, x11
  40ea20:	b.ne	40ea3c <ferror@plt+0xba6c>  // b.any
  40ea24:	sub	w8, w8, w9
  40ea28:	cmp	x10, #0x0
  40ea2c:	csel	w0, wzr, w8, eq  // eq = none
  40ea30:	ret
  40ea34:	mov	w8, #0x1                   	// #1
  40ea38:	b	40ea40 <ferror@plt+0xba70>
  40ea3c:	mov	w8, #0xffffffff            	// #-1
  40ea40:	cneg	w0, w8, cs  // cs = hs, nlast
  40ea44:	ret
  40ea48:	add	x9, x0, #0x1
  40ea4c:	ldrb	w8, [x9], #1
  40ea50:	subs	w8, w8, #0x30
  40ea54:	b.eq	40ea4c <ferror@plt+0xba7c>  // b.none
  40ea58:	b	40ea84 <ferror@plt+0xbab4>
  40ea5c:	cmp	w10, #0x9
  40ea60:	sub	w11, w11, #0x30
  40ea64:	b.hi	40ea70 <ferror@plt+0xbaa0>  // b.pmore
  40ea68:	cmp	w11, #0x9
  40ea6c:	b.ls	40ea30 <ferror@plt+0xba60>  // b.plast
  40ea70:	cmp	w10, #0xa
  40ea74:	b.cs	40eab8 <ferror@plt+0xbae8>  // b.hs, b.nlast
  40ea78:	ldrb	w8, [x9], #1
  40ea7c:	subs	w8, w8, #0x30
  40ea80:	b.eq	40ea78 <ferror@plt+0xbaa8>  // b.none
  40ea84:	cmp	w8, #0xa
  40ea88:	cset	w0, cc  // cc = lo, ul, last
  40ea8c:	ret
  40ea90:	cmp	w10, #0x9
  40ea94:	sub	w11, w11, #0x30
  40ea98:	b.hi	40eaa4 <ferror@plt+0xbad4>  // b.pmore
  40ea9c:	cmp	w11, #0x9
  40eaa0:	b.ls	40ea30 <ferror@plt+0xba60>  // b.plast
  40eaa4:	cmp	w10, #0xa
  40eaa8:	b.cc	40ea4c <ferror@plt+0xba7c>  // b.lo, b.ul, b.last
  40eaac:	cmp	w11, #0xa
  40eab0:	b.cc	40e9ec <ferror@plt+0xba1c>  // b.lo, b.ul, b.last
  40eab4:	b	40eac0 <ferror@plt+0xbaf0>
  40eab8:	cmp	w11, #0xa
  40eabc:	b.cc	40e9d0 <ferror@plt+0xba00>  // b.lo, b.ul, b.last
  40eac0:	mov	w0, wzr
  40eac4:	ret
  40eac8:	stp	x29, x30, [sp, #-48]!
  40eacc:	stp	x20, x19, [sp, #32]
  40ead0:	mov	w19, w0
  40ead4:	cmp	w0, #0x2
  40ead8:	stp	x22, x21, [sp, #16]
  40eadc:	mov	x29, sp
  40eae0:	b.hi	40eb10 <ferror@plt+0xbb40>  // b.pmore
  40eae4:	mov	w0, w19
  40eae8:	bl	410b64 <_obstack_memory_used@@Base+0x624>
  40eaec:	mov	w20, w0
  40eaf0:	bl	402f40 <__errno_location@plt>
  40eaf4:	ldr	w22, [x0]
  40eaf8:	mov	x21, x0
  40eafc:	mov	w0, w19
  40eb00:	bl	402ba0 <close@plt>
  40eb04:	str	w22, [x21]
  40eb08:	mov	w0, w20
  40eb0c:	b	40eb14 <ferror@plt+0xbb44>
  40eb10:	mov	w0, w19
  40eb14:	ldp	x20, x19, [sp, #32]
  40eb18:	ldp	x22, x21, [sp, #16]
  40eb1c:	ldp	x29, x30, [sp], #48
  40eb20:	ret
  40eb24:	sub	sp, sp, #0x50
  40eb28:	str	x21, [sp, #48]
  40eb2c:	stp	x20, x19, [sp, #64]
  40eb30:	mov	x21, x5
  40eb34:	mov	x20, x4
  40eb38:	mov	x5, x3
  40eb3c:	mov	x4, x2
  40eb40:	mov	x19, x0
  40eb44:	stp	x29, x30, [sp, #32]
  40eb48:	add	x29, sp, #0x20
  40eb4c:	cbz	x1, 40eb6c <ferror@plt+0xbb9c>
  40eb50:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40eb54:	mov	x3, x1
  40eb58:	add	x2, x2, #0x626
  40eb5c:	mov	w1, #0x1                   	// #1
  40eb60:	mov	x0, x19
  40eb64:	bl	402cc0 <__fprintf_chk@plt>
  40eb68:	b	40eb88 <ferror@plt+0xbbb8>
  40eb6c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40eb70:	add	x2, x2, #0x632
  40eb74:	mov	w1, #0x1                   	// #1
  40eb78:	mov	x0, x19
  40eb7c:	mov	x3, x4
  40eb80:	mov	x4, x5
  40eb84:	bl	402cc0 <__fprintf_chk@plt>
  40eb88:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40eb8c:	add	x1, x1, #0x639
  40eb90:	mov	w2, #0x5                   	// #5
  40eb94:	mov	x0, xzr
  40eb98:	bl	402eb0 <dcgettext@plt>
  40eb9c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40eba0:	mov	x3, x0
  40eba4:	add	x2, x2, #0x904
  40eba8:	mov	w1, #0x1                   	// #1
  40ebac:	mov	w4, #0x7e3                 	// #2019
  40ebb0:	mov	x0, x19
  40ebb4:	bl	402cc0 <__fprintf_chk@plt>
  40ebb8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ebbc:	add	x1, x1, #0x63d
  40ebc0:	mov	w2, #0x5                   	// #5
  40ebc4:	mov	x0, xzr
  40ebc8:	bl	402eb0 <dcgettext@plt>
  40ebcc:	mov	x1, x19
  40ebd0:	bl	402ec0 <fputs_unlocked@plt>
  40ebd4:	cmp	x21, #0x9
  40ebd8:	b.hi	40ec2c <ferror@plt+0xbc5c>  // b.pmore
  40ebdc:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ebe0:	add	x8, x8, #0x61c
  40ebe4:	adr	x9, 40ebf4 <ferror@plt+0xbc24>
  40ebe8:	ldrb	w10, [x8, x21]
  40ebec:	add	x9, x9, x10, lsl #2
  40ebf0:	br	x9
  40ebf4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ebf8:	add	x1, x1, #0x709
  40ebfc:	mov	w2, #0x5                   	// #5
  40ec00:	mov	x0, xzr
  40ec04:	bl	402eb0 <dcgettext@plt>
  40ec08:	ldr	x3, [x20]
  40ec0c:	mov	x2, x0
  40ec10:	mov	x0, x19
  40ec14:	ldp	x20, x19, [sp, #64]
  40ec18:	ldr	x21, [sp, #48]
  40ec1c:	ldp	x29, x30, [sp, #32]
  40ec20:	mov	w1, #0x1                   	// #1
  40ec24:	add	sp, sp, #0x50
  40ec28:	b	402cc0 <__fprintf_chk@plt>
  40ec2c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ec30:	add	x1, x1, #0x848
  40ec34:	b	40ed90 <ferror@plt+0xbdc0>
  40ec38:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ec3c:	add	x1, x1, #0x719
  40ec40:	mov	w2, #0x5                   	// #5
  40ec44:	mov	x0, xzr
  40ec48:	bl	402eb0 <dcgettext@plt>
  40ec4c:	ldp	x3, x4, [x20]
  40ec50:	mov	x2, x0
  40ec54:	mov	x0, x19
  40ec58:	ldp	x20, x19, [sp, #64]
  40ec5c:	ldr	x21, [sp, #48]
  40ec60:	ldp	x29, x30, [sp, #32]
  40ec64:	mov	w1, #0x1                   	// #1
  40ec68:	add	sp, sp, #0x50
  40ec6c:	b	402cc0 <__fprintf_chk@plt>
  40ec70:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ec74:	add	x1, x1, #0x730
  40ec78:	mov	w2, #0x5                   	// #5
  40ec7c:	mov	x0, xzr
  40ec80:	bl	402eb0 <dcgettext@plt>
  40ec84:	ldp	x3, x4, [x20]
  40ec88:	ldr	x5, [x20, #16]
  40ec8c:	mov	x2, x0
  40ec90:	mov	x0, x19
  40ec94:	ldp	x20, x19, [sp, #64]
  40ec98:	ldr	x21, [sp, #48]
  40ec9c:	ldp	x29, x30, [sp, #32]
  40eca0:	mov	w1, #0x1                   	// #1
  40eca4:	add	sp, sp, #0x50
  40eca8:	b	402cc0 <__fprintf_chk@plt>
  40ecac:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ecb0:	add	x1, x1, #0x74c
  40ecb4:	mov	w2, #0x5                   	// #5
  40ecb8:	mov	x0, xzr
  40ecbc:	bl	402eb0 <dcgettext@plt>
  40ecc0:	ldp	x3, x4, [x20]
  40ecc4:	ldp	x5, x6, [x20, #16]
  40ecc8:	mov	x2, x0
  40eccc:	mov	x0, x19
  40ecd0:	ldp	x20, x19, [sp, #64]
  40ecd4:	ldr	x21, [sp, #48]
  40ecd8:	ldp	x29, x30, [sp, #32]
  40ecdc:	mov	w1, #0x1                   	// #1
  40ece0:	add	sp, sp, #0x50
  40ece4:	b	402cc0 <__fprintf_chk@plt>
  40ece8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ecec:	add	x1, x1, #0x76c
  40ecf0:	mov	w2, #0x5                   	// #5
  40ecf4:	mov	x0, xzr
  40ecf8:	bl	402eb0 <dcgettext@plt>
  40ecfc:	ldp	x3, x4, [x20]
  40ed00:	ldp	x5, x6, [x20, #16]
  40ed04:	ldr	x7, [x20, #32]
  40ed08:	mov	x2, x0
  40ed0c:	mov	x0, x19
  40ed10:	ldp	x20, x19, [sp, #64]
  40ed14:	ldr	x21, [sp, #48]
  40ed18:	ldp	x29, x30, [sp, #32]
  40ed1c:	mov	w1, #0x1                   	// #1
  40ed20:	add	sp, sp, #0x50
  40ed24:	b	402cc0 <__fprintf_chk@plt>
  40ed28:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ed2c:	add	x1, x1, #0x790
  40ed30:	mov	w2, #0x5                   	// #5
  40ed34:	mov	x0, xzr
  40ed38:	bl	402eb0 <dcgettext@plt>
  40ed3c:	ldp	x3, x4, [x20]
  40ed40:	ldp	x5, x6, [x20, #16]
  40ed44:	ldp	x7, x8, [x20, #32]
  40ed48:	mov	x2, x0
  40ed4c:	b	40ed7c <ferror@plt+0xbdac>
  40ed50:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ed54:	add	x1, x1, #0x7b8
  40ed58:	mov	w2, #0x5                   	// #5
  40ed5c:	mov	x0, xzr
  40ed60:	bl	402eb0 <dcgettext@plt>
  40ed64:	ldr	x9, [x20, #48]
  40ed68:	ldp	x3, x4, [x20]
  40ed6c:	ldp	x5, x6, [x20, #16]
  40ed70:	ldp	x7, x8, [x20, #32]
  40ed74:	mov	x2, x0
  40ed78:	str	x9, [sp, #8]
  40ed7c:	mov	w1, #0x1                   	// #1
  40ed80:	str	x8, [sp]
  40ed84:	b	40edf4 <ferror@plt+0xbe24>
  40ed88:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ed8c:	add	x1, x1, #0x814
  40ed90:	mov	w2, #0x5                   	// #5
  40ed94:	mov	x0, xzr
  40ed98:	bl	402eb0 <dcgettext@plt>
  40ed9c:	ldp	x8, x9, [x20, #56]
  40eda0:	ldp	x3, x4, [x20]
  40eda4:	ldp	x5, x6, [x20, #16]
  40eda8:	ldr	x7, [x20, #32]
  40edac:	ldur	q0, [x20, #40]
  40edb0:	mov	x2, x0
  40edb4:	str	x9, [sp, #24]
  40edb8:	b	40ede8 <ferror@plt+0xbe18>
  40edbc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40edc0:	add	x1, x1, #0x7e4
  40edc4:	mov	w2, #0x5                   	// #5
  40edc8:	mov	x0, xzr
  40edcc:	bl	402eb0 <dcgettext@plt>
  40edd0:	ldp	x3, x4, [x20]
  40edd4:	ldp	x5, x6, [x20, #16]
  40edd8:	ldr	x7, [x20, #32]
  40eddc:	ldur	q0, [x20, #40]
  40ede0:	ldr	x8, [x20, #56]
  40ede4:	mov	x2, x0
  40ede8:	str	x8, [sp, #16]
  40edec:	mov	w1, #0x1                   	// #1
  40edf0:	str	q0, [sp]
  40edf4:	mov	x0, x19
  40edf8:	bl	402cc0 <__fprintf_chk@plt>
  40edfc:	ldp	x20, x19, [sp, #64]
  40ee00:	ldr	x21, [sp, #48]
  40ee04:	ldp	x29, x30, [sp, #32]
  40ee08:	add	sp, sp, #0x50
  40ee0c:	ret
  40ee10:	mov	x8, xzr
  40ee14:	ldr	x9, [x4, x8, lsl #3]
  40ee18:	add	x8, x8, #0x1
  40ee1c:	cbnz	x9, 40ee14 <ferror@plt+0xbe44>
  40ee20:	sub	x5, x8, #0x1
  40ee24:	b	40eb24 <ferror@plt+0xbb54>
  40ee28:	sub	sp, sp, #0x60
  40ee2c:	stp	x29, x30, [sp, #80]
  40ee30:	ldr	w8, [x4, #24]
  40ee34:	mov	x5, xzr
  40ee38:	mov	x9, sp
  40ee3c:	add	x29, sp, #0x50
  40ee40:	tbz	w8, #31, 40ee68 <ferror@plt+0xbe98>
  40ee44:	add	w11, w8, #0x8
  40ee48:	cmn	w8, #0x8
  40ee4c:	str	w11, [x4, #24]
  40ee50:	b.gt	40ee64 <ferror@plt+0xbe94>
  40ee54:	ldr	x10, [x4, #8]
  40ee58:	add	x10, x10, w8, sxtw
  40ee5c:	mov	w8, w11
  40ee60:	b	40ee74 <ferror@plt+0xbea4>
  40ee64:	mov	w8, w11
  40ee68:	ldr	x10, [x4]
  40ee6c:	add	x11, x10, #0x8
  40ee70:	str	x11, [x4]
  40ee74:	ldr	x10, [x10]
  40ee78:	str	x10, [x9, x5, lsl #3]
  40ee7c:	cbz	x10, 40ee8c <ferror@plt+0xbebc>
  40ee80:	add	x5, x5, #0x1
  40ee84:	cmp	x5, #0xa
  40ee88:	b.ne	40ee40 <ferror@plt+0xbe70>  // b.any
  40ee8c:	mov	x4, sp
  40ee90:	bl	40eb24 <ferror@plt+0xbb54>
  40ee94:	ldp	x29, x30, [sp, #80]
  40ee98:	add	sp, sp, #0x60
  40ee9c:	ret
  40eea0:	sub	sp, sp, #0xf0
  40eea4:	stp	x29, x30, [sp, #224]
  40eea8:	add	x29, sp, #0xe0
  40eeac:	mov	x8, #0xffffffffffffffe0    	// #-32
  40eeb0:	mov	x9, sp
  40eeb4:	sub	x10, x29, #0x60
  40eeb8:	movk	x8, #0xff80, lsl #32
  40eebc:	add	x11, x29, #0x10
  40eec0:	add	x9, x9, #0x80
  40eec4:	add	x10, x10, #0x20
  40eec8:	stp	x9, x8, [x29, #-16]
  40eecc:	stp	x11, x10, [x29, #-32]
  40eed0:	stp	x4, x5, [x29, #-96]
  40eed4:	stp	x6, x7, [x29, #-80]
  40eed8:	stp	q0, q1, [sp]
  40eedc:	ldp	q0, q1, [x29, #-32]
  40eee0:	sub	x4, x29, #0x40
  40eee4:	stp	q2, q3, [sp, #32]
  40eee8:	stp	q4, q5, [sp, #64]
  40eeec:	stp	q6, q7, [sp, #96]
  40eef0:	stp	q0, q1, [x29, #-64]
  40eef4:	bl	40ee28 <ferror@plt+0xbe58>
  40eef8:	ldp	x29, x30, [sp, #224]
  40eefc:	add	sp, sp, #0xf0
  40ef00:	ret
  40ef04:	stp	x29, x30, [sp, #-16]!
  40ef08:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ef0c:	add	x1, x1, #0x884
  40ef10:	mov	w2, #0x5                   	// #5
  40ef14:	mov	x0, xzr
  40ef18:	mov	x29, sp
  40ef1c:	bl	402eb0 <dcgettext@plt>
  40ef20:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ef24:	mov	x1, x0
  40ef28:	add	x2, x2, #0x899
  40ef2c:	mov	w0, #0x1                   	// #1
  40ef30:	bl	402b10 <__printf_chk@plt>
  40ef34:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ef38:	add	x1, x1, #0x8af
  40ef3c:	mov	w2, #0x5                   	// #5
  40ef40:	mov	x0, xzr
  40ef44:	bl	402eb0 <dcgettext@plt>
  40ef48:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40ef4c:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x1ac0>
  40ef50:	mov	x1, x0
  40ef54:	add	x2, x2, #0x876
  40ef58:	add	x3, x3, #0xb23
  40ef5c:	mov	w0, #0x1                   	// #1
  40ef60:	bl	402b10 <__printf_chk@plt>
  40ef64:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40ef68:	add	x1, x1, #0x8c3
  40ef6c:	mov	w2, #0x5                   	// #5
  40ef70:	mov	x0, xzr
  40ef74:	bl	402eb0 <dcgettext@plt>
  40ef78:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40ef7c:	ldr	x1, [x8, #1368]
  40ef80:	ldp	x29, x30, [sp], #16
  40ef84:	b	402ec0 <fputs_unlocked@plt>
  40ef88:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40ef8c:	udiv	x8, x8, x1
  40ef90:	cmp	x8, x0
  40ef94:	b.cc	40efa0 <ferror@plt+0xbfd0>  // b.lo, b.ul, b.last
  40ef98:	mul	x0, x1, x0
  40ef9c:	b	40efac <ferror@plt+0xbfdc>
  40efa0:	stp	x29, x30, [sp, #-16]!
  40efa4:	mov	x29, sp
  40efa8:	bl	40f1e8 <ferror@plt+0xc218>
  40efac:	stp	x29, x30, [sp, #-32]!
  40efb0:	str	x19, [sp, #16]
  40efb4:	mov	x29, sp
  40efb8:	mov	x19, x0
  40efbc:	bl	402a60 <malloc@plt>
  40efc0:	cbz	x19, 40efc8 <ferror@plt+0xbff8>
  40efc4:	cbz	x0, 40efd4 <ferror@plt+0xc004>
  40efc8:	ldr	x19, [sp, #16]
  40efcc:	ldp	x29, x30, [sp], #32
  40efd0:	ret
  40efd4:	bl	40f1e8 <ferror@plt+0xc218>
  40efd8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40efdc:	udiv	x8, x8, x2
  40efe0:	cmp	x8, x1
  40efe4:	b.cc	40eff0 <ferror@plt+0xc020>  // b.lo, b.ul, b.last
  40efe8:	mul	x1, x2, x1
  40efec:	b	40effc <ferror@plt+0xc02c>
  40eff0:	stp	x29, x30, [sp, #-16]!
  40eff4:	mov	x29, sp
  40eff8:	bl	40f1e8 <ferror@plt+0xc218>
  40effc:	stp	x29, x30, [sp, #-32]!
  40f000:	str	x19, [sp, #16]
  40f004:	mov	x19, x1
  40f008:	mov	x29, sp
  40f00c:	cbz	x0, 40f020 <ferror@plt+0xc050>
  40f010:	cbnz	x19, 40f020 <ferror@plt+0xc050>
  40f014:	bl	402d30 <free@plt>
  40f018:	mov	x0, xzr
  40f01c:	b	40f030 <ferror@plt+0xc060>
  40f020:	mov	x1, x19
  40f024:	bl	402b80 <realloc@plt>
  40f028:	cbz	x19, 40f030 <ferror@plt+0xc060>
  40f02c:	cbz	x0, 40f03c <ferror@plt+0xc06c>
  40f030:	ldr	x19, [sp, #16]
  40f034:	ldp	x29, x30, [sp], #32
  40f038:	ret
  40f03c:	bl	40f1e8 <ferror@plt+0xc218>
  40f040:	stp	x29, x30, [sp, #-16]!
  40f044:	ldr	x9, [x1]
  40f048:	mov	x29, sp
  40f04c:	cbz	x0, 40f070 <ferror@plt+0xc0a0>
  40f050:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  40f054:	movk	x8, #0x5554
  40f058:	udiv	x8, x8, x2
  40f05c:	cmp	x8, x9
  40f060:	b.ls	40f0a8 <ferror@plt+0xc0d8>  // b.plast
  40f064:	add	x8, x9, x9, lsr #1
  40f068:	add	x9, x8, #0x1
  40f06c:	b	40f094 <ferror@plt+0xc0c4>
  40f070:	cbnz	x9, 40f084 <ferror@plt+0xc0b4>
  40f074:	mov	w8, #0x80                  	// #128
  40f078:	udiv	x8, x8, x2
  40f07c:	cmp	x2, #0x80
  40f080:	cinc	x9, x8, hi  // hi = pmore
  40f084:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40f088:	udiv	x8, x8, x2
  40f08c:	cmp	x8, x9
  40f090:	b.cc	40f0a8 <ferror@plt+0xc0d8>  // b.lo, b.ul, b.last
  40f094:	mul	x8, x9, x2
  40f098:	str	x9, [x1]
  40f09c:	mov	x1, x8
  40f0a0:	ldp	x29, x30, [sp], #16
  40f0a4:	b	40effc <ferror@plt+0xc02c>
  40f0a8:	bl	40f1e8 <ferror@plt+0xc218>
  40f0ac:	b	40efac <ferror@plt+0xbfdc>
  40f0b0:	stp	x29, x30, [sp, #-16]!
  40f0b4:	ldr	x8, [x1]
  40f0b8:	mov	x29, sp
  40f0bc:	cbz	x0, 40f0dc <ferror@plt+0xc10c>
  40f0c0:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40f0c4:	movk	x9, #0x5554
  40f0c8:	cmp	x8, x9
  40f0cc:	b.cs	40f0e4 <ferror@plt+0xc114>  // b.hs, b.nlast
  40f0d0:	add	x8, x8, x8, lsr #1
  40f0d4:	add	x8, x8, #0x1
  40f0d8:	b	40f0ec <ferror@plt+0xc11c>
  40f0dc:	cbz	x8, 40f0e8 <ferror@plt+0xc118>
  40f0e0:	tbz	x8, #63, 40f0ec <ferror@plt+0xc11c>
  40f0e4:	bl	40f1e8 <ferror@plt+0xc218>
  40f0e8:	mov	w8, #0x80                  	// #128
  40f0ec:	str	x8, [x1]
  40f0f0:	mov	x1, x8
  40f0f4:	ldp	x29, x30, [sp], #16
  40f0f8:	b	40effc <ferror@plt+0xc02c>
  40f0fc:	stp	x29, x30, [sp, #-32]!
  40f100:	stp	x20, x19, [sp, #16]
  40f104:	mov	x29, sp
  40f108:	mov	x19, x0
  40f10c:	bl	40efac <ferror@plt+0xbfdc>
  40f110:	mov	w1, wzr
  40f114:	mov	x2, x19
  40f118:	mov	x20, x0
  40f11c:	bl	402b20 <memset@plt>
  40f120:	mov	x0, x20
  40f124:	ldp	x20, x19, [sp, #16]
  40f128:	ldp	x29, x30, [sp], #32
  40f12c:	ret
  40f130:	stp	x29, x30, [sp, #-16]!
  40f134:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40f138:	udiv	x8, x8, x1
  40f13c:	cmp	x8, x0
  40f140:	mov	x29, sp
  40f144:	b.cc	40f158 <ferror@plt+0xc188>  // b.lo, b.ul, b.last
  40f148:	bl	40fc94 <ferror@plt+0xccc4>
  40f14c:	cbz	x0, 40f158 <ferror@plt+0xc188>
  40f150:	ldp	x29, x30, [sp], #16
  40f154:	ret
  40f158:	bl	40f1e8 <ferror@plt+0xc218>
  40f15c:	stp	x29, x30, [sp, #-48]!
  40f160:	stp	x20, x19, [sp, #32]
  40f164:	mov	x20, x0
  40f168:	mov	x0, x1
  40f16c:	str	x21, [sp, #16]
  40f170:	mov	x29, sp
  40f174:	mov	x19, x1
  40f178:	bl	40efac <ferror@plt+0xbfdc>
  40f17c:	mov	x1, x20
  40f180:	mov	x2, x19
  40f184:	mov	x21, x0
  40f188:	bl	402860 <memcpy@plt>
  40f18c:	mov	x0, x21
  40f190:	ldp	x20, x19, [sp, #32]
  40f194:	ldr	x21, [sp, #16]
  40f198:	ldp	x29, x30, [sp], #48
  40f19c:	ret
  40f1a0:	stp	x29, x30, [sp, #-48]!
  40f1a4:	str	x21, [sp, #16]
  40f1a8:	stp	x20, x19, [sp, #32]
  40f1ac:	mov	x29, sp
  40f1b0:	mov	x19, x0
  40f1b4:	bl	4028c0 <strlen@plt>
  40f1b8:	add	x20, x0, #0x1
  40f1bc:	mov	x0, x20
  40f1c0:	bl	40efac <ferror@plt+0xbfdc>
  40f1c4:	mov	x1, x19
  40f1c8:	mov	x2, x20
  40f1cc:	mov	x21, x0
  40f1d0:	bl	402860 <memcpy@plt>
  40f1d4:	mov	x0, x21
  40f1d8:	ldp	x20, x19, [sp, #32]
  40f1dc:	ldr	x21, [sp, #16]
  40f1e0:	ldp	x29, x30, [sp], #48
  40f1e4:	ret
  40f1e8:	stp	x29, x30, [sp, #-32]!
  40f1ec:	str	x19, [sp, #16]
  40f1f0:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40f1f4:	ldr	w19, [x8, #1232]
  40f1f8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f1fc:	add	x1, x1, #0x933
  40f200:	mov	w2, #0x5                   	// #5
  40f204:	mov	x0, xzr
  40f208:	mov	x29, sp
  40f20c:	bl	402eb0 <dcgettext@plt>
  40f210:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f214:	mov	x3, x0
  40f218:	add	x2, x2, #0x2aa
  40f21c:	mov	w0, w19
  40f220:	mov	w1, wzr
  40f224:	bl	402900 <error@plt>
  40f228:	bl	402c20 <abort@plt>
  40f22c:	stp	x29, x30, [sp, #-64]!
  40f230:	str	x23, [sp, #16]
  40f234:	stp	x22, x21, [sp, #32]
  40f238:	stp	x20, x19, [sp, #48]
  40f23c:	mov	x29, sp
  40f240:	mov	x19, x3
  40f244:	mov	x20, x2
  40f248:	mov	x21, x1
  40f24c:	mov	x22, x0
  40f250:	bl	4109c8 <_obstack_memory_used@@Base+0x488>
  40f254:	mov	w23, w0
  40f258:	bl	402f40 <__errno_location@plt>
  40f25c:	ldr	w0, [x0]
  40f260:	cbz	w0, 40f278 <ferror@plt+0xc2a8>
  40f264:	mov	x1, x22
  40f268:	mov	x2, x21
  40f26c:	mov	x3, x20
  40f270:	mov	x4, x19
  40f274:	bl	40f290 <ferror@plt+0xc2c0>
  40f278:	mov	w0, w23
  40f27c:	ldp	x20, x19, [sp, #48]
  40f280:	ldp	x22, x21, [sp, #32]
  40f284:	ldr	x23, [sp, #16]
  40f288:	ldp	x29, x30, [sp], #64
  40f28c:	ret
  40f290:	stp	x29, x30, [sp, #-64]!
  40f294:	stp	x22, x21, [sp, #32]
  40f298:	mov	x22, x1
  40f29c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f2a0:	stp	x24, x23, [sp, #16]
  40f2a4:	mov	x21, x2
  40f2a8:	mov	w23, w0
  40f2ac:	add	x1, x1, #0x944
  40f2b0:	mov	w2, #0x5                   	// #5
  40f2b4:	mov	x0, xzr
  40f2b8:	stp	x20, x19, [sp, #48]
  40f2bc:	mov	x29, sp
  40f2c0:	mov	x19, x4
  40f2c4:	mov	x20, x3
  40f2c8:	bl	402eb0 <dcgettext@plt>
  40f2cc:	mov	x2, x0
  40f2d0:	mov	w0, wzr
  40f2d4:	mov	w1, w23
  40f2d8:	bl	402900 <error@plt>
  40f2dc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f2e0:	add	x1, x1, #0x95d
  40f2e4:	mov	w2, #0x5                   	// #5
  40f2e8:	mov	x0, xzr
  40f2ec:	bl	402eb0 <dcgettext@plt>
  40f2f0:	mov	x2, x0
  40f2f4:	mov	w0, wzr
  40f2f8:	mov	w1, wzr
  40f2fc:	bl	402900 <error@plt>
  40f300:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40f304:	ldr	w23, [x8, #1232]
  40f308:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f30c:	add	x1, x1, #0x988
  40f310:	mov	w2, #0x5                   	// #5
  40f314:	mov	x0, xzr
  40f318:	bl	402eb0 <dcgettext@plt>
  40f31c:	mov	x24, x0
  40f320:	mov	w1, #0x8                   	// #8
  40f324:	mov	w0, wzr
  40f328:	mov	x2, x22
  40f32c:	mov	x3, x21
  40f330:	bl	40d5a0 <ferror@plt+0xa5d0>
  40f334:	mov	x21, x0
  40f338:	mov	w0, #0x1                   	// #1
  40f33c:	mov	w1, #0x8                   	// #8
  40f340:	mov	x2, x20
  40f344:	mov	x3, x19
  40f348:	bl	40d5a0 <ferror@plt+0xa5d0>
  40f34c:	mov	x4, x0
  40f350:	mov	w0, w23
  40f354:	mov	x2, x24
  40f358:	mov	x3, x21
  40f35c:	ldp	x20, x19, [sp, #48]
  40f360:	ldp	x22, x21, [sp, #32]
  40f364:	ldp	x24, x23, [sp, #16]
  40f368:	mov	w1, wzr
  40f36c:	ldp	x29, x30, [sp], #64
  40f370:	b	402900 <error@plt>
  40f374:	stp	x29, x30, [sp, #-64]!
  40f378:	str	x23, [sp, #16]
  40f37c:	stp	x22, x21, [sp, #32]
  40f380:	stp	x20, x19, [sp, #48]
  40f384:	mov	x29, sp
  40f388:	mov	x21, x3
  40f38c:	mov	x19, x2
  40f390:	mov	x23, x1
  40f394:	mov	x20, x0
  40f398:	bl	410aec <_obstack_memory_used@@Base+0x5ac>
  40f39c:	mov	w22, w0
  40f3a0:	bl	402f40 <__errno_location@plt>
  40f3a4:	ldr	w0, [x0]
  40f3a8:	cbz	w0, 40f3c0 <ferror@plt+0xc3f0>
  40f3ac:	sub	x2, x23, #0x1
  40f3b0:	sub	x4, x21, #0x1
  40f3b4:	mov	x1, x20
  40f3b8:	mov	x3, x19
  40f3bc:	bl	40f290 <ferror@plt+0xc2c0>
  40f3c0:	mov	w0, w22
  40f3c4:	ldp	x20, x19, [sp, #48]
  40f3c8:	ldp	x22, x21, [sp, #32]
  40f3cc:	ldr	x23, [sp, #16]
  40f3d0:	ldp	x29, x30, [sp], #64
  40f3d4:	ret
  40f3d8:	sub	sp, sp, #0x30
  40f3dc:	stp	x29, x30, [sp, #16]
  40f3e0:	str	x19, [sp, #32]
  40f3e4:	add	x29, sp, #0x10
  40f3e8:	bl	4107e4 <_obstack_memory_used@@Base+0x2a4>
  40f3ec:	stp	x0, x1, [sp]
  40f3f0:	bl	402f40 <__errno_location@plt>
  40f3f4:	mov	x19, x0
  40f3f8:	str	wzr, [x0]
  40f3fc:	mov	x0, sp
  40f400:	mov	x1, xzr
  40f404:	bl	410174 <ferror@plt+0xd1a4>
  40f408:	cbz	w0, 40f428 <ferror@plt+0xc458>
  40f40c:	ldr	w8, [x19]
  40f410:	orr	w8, w8, #0x4
  40f414:	cmp	w8, #0x4
  40f418:	b.ne	40f424 <ferror@plt+0xc454>  // b.any
  40f41c:	str	wzr, [x19]
  40f420:	b	40f3fc <ferror@plt+0xc42c>
  40f424:	mov	w0, #0xffffffff            	// #-1
  40f428:	ldr	x19, [sp, #32]
  40f42c:	ldp	x29, x30, [sp, #16]
  40f430:	add	sp, sp, #0x30
  40f434:	ret
  40f438:	stp	x29, x30, [sp, #-80]!
  40f43c:	cmp	w2, #0x25
  40f440:	str	x25, [sp, #16]
  40f444:	stp	x24, x23, [sp, #32]
  40f448:	stp	x22, x21, [sp, #48]
  40f44c:	stp	x20, x19, [sp, #64]
  40f450:	mov	x29, sp
  40f454:	b.cs	40f7e4 <ferror@plt+0xc814>  // b.hs, b.nlast
  40f458:	mov	x23, x4
  40f45c:	mov	x19, x3
  40f460:	mov	w22, w2
  40f464:	mov	x21, x1
  40f468:	mov	x20, x0
  40f46c:	bl	402f40 <__errno_location@plt>
  40f470:	mov	x24, x0
  40f474:	str	wzr, [x0]
  40f478:	bl	402cf0 <__ctype_b_loc@plt>
  40f47c:	ldr	x8, [x0]
  40f480:	mov	x10, x20
  40f484:	ldrb	w9, [x10], #1
  40f488:	ldrh	w11, [x8, x9, lsl #1]
  40f48c:	tbnz	w11, #13, 40f484 <ferror@plt+0xc4b4>
  40f490:	cmp	x21, #0x0
  40f494:	add	x8, x29, #0x18
  40f498:	csel	x21, x8, x21, eq  // eq = none
  40f49c:	cmp	w9, #0x2d
  40f4a0:	b.ne	40f4ac <ferror@plt+0xc4dc>  // b.any
  40f4a4:	mov	w20, #0x4                   	// #4
  40f4a8:	b	40f7c8 <ferror@plt+0xc7f8>
  40f4ac:	mov	x0, x20
  40f4b0:	mov	x1, x21
  40f4b4:	mov	w2, w22
  40f4b8:	bl	4028b0 <strtoul@plt>
  40f4bc:	ldr	x25, [x21]
  40f4c0:	cmp	x25, x20
  40f4c4:	b.eq	40f4e8 <ferror@plt+0xc518>  // b.none
  40f4c8:	ldr	w20, [x24]
  40f4cc:	mov	x22, x0
  40f4d0:	cbz	w20, 40f4e0 <ferror@plt+0xc510>
  40f4d4:	cmp	w20, #0x22
  40f4d8:	b.ne	40f4a4 <ferror@plt+0xc4d4>  // b.any
  40f4dc:	mov	w20, #0x1                   	// #1
  40f4e0:	cbnz	x23, 40f508 <ferror@plt+0xc538>
  40f4e4:	b	40f7c4 <ferror@plt+0xc7f4>
  40f4e8:	cbz	x23, 40f4a4 <ferror@plt+0xc4d4>
  40f4ec:	ldrb	w1, [x20]
  40f4f0:	cbz	w1, 40f4a4 <ferror@plt+0xc4d4>
  40f4f4:	mov	x0, x23
  40f4f8:	bl	402d90 <strchr@plt>
  40f4fc:	cbz	x0, 40f4a4 <ferror@plt+0xc4d4>
  40f500:	mov	w20, wzr
  40f504:	mov	w22, #0x1                   	// #1
  40f508:	ldrb	w24, [x25]
  40f50c:	cbz	w24, 40f7c4 <ferror@plt+0xc7f4>
  40f510:	mov	x0, x23
  40f514:	mov	w1, w24
  40f518:	bl	402d90 <strchr@plt>
  40f51c:	cbz	x0, 40f748 <ferror@plt+0xc778>
  40f520:	sub	w10, w24, #0x45
  40f524:	mov	w8, #0x1                   	// #1
  40f528:	cmp	w10, #0x2f
  40f52c:	mov	w9, #0x400                 	// #1024
  40f530:	b.hi	40f5a4 <ferror@plt+0xc5d4>  // b.pmore
  40f534:	mov	w11, #0x1                   	// #1
  40f538:	lsl	x10, x11, x10
  40f53c:	mov	x11, #0x8945                	// #35141
  40f540:	movk	x11, #0x30, lsl #16
  40f544:	movk	x11, #0x8144, lsl #32
  40f548:	tst	x10, x11
  40f54c:	b.eq	40f5a4 <ferror@plt+0xc5d4>  // b.none
  40f550:	mov	w1, #0x30                  	// #48
  40f554:	mov	x0, x23
  40f558:	bl	402d90 <strchr@plt>
  40f55c:	cbz	x0, 40f590 <ferror@plt+0xc5c0>
  40f560:	ldrb	w8, [x25, #1]
  40f564:	cmp	w8, #0x42
  40f568:	b.eq	40f59c <ferror@plt+0xc5cc>  // b.none
  40f56c:	cmp	w8, #0x44
  40f570:	b.eq	40f59c <ferror@plt+0xc5cc>  // b.none
  40f574:	cmp	w8, #0x69
  40f578:	b.ne	40f590 <ferror@plt+0xc5c0>  // b.any
  40f57c:	ldrb	w8, [x25, #2]
  40f580:	mov	w9, #0x3                   	// #3
  40f584:	cmp	w8, #0x42
  40f588:	csinc	x8, x9, xzr, eq  // eq = none
  40f58c:	b	40f594 <ferror@plt+0xc5c4>
  40f590:	mov	w8, #0x1                   	// #1
  40f594:	mov	w9, #0x400                 	// #1024
  40f598:	b	40f5a4 <ferror@plt+0xc5d4>
  40f59c:	mov	w8, #0x2                   	// #2
  40f5a0:	mov	w9, #0x3e8                 	// #1000
  40f5a4:	cmp	w24, #0x59
  40f5a8:	b.gt	40f5dc <ferror@plt+0xc60c>
  40f5ac:	sub	w10, w24, #0x42
  40f5b0:	cmp	w10, #0xe
  40f5b4:	b.hi	40f618 <ferror@plt+0xc648>  // b.pmore
  40f5b8:	adrp	x11, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f5bc:	add	x11, x11, #0x9ad
  40f5c0:	adr	x12, 40f5d0 <ferror@plt+0xc600>
  40f5c4:	ldrb	w13, [x11, x10]
  40f5c8:	add	x12, x12, x13, lsl #2
  40f5cc:	br	x12
  40f5d0:	cmp	xzr, x22, lsr #54
  40f5d4:	lsl	x9, x22, #10
  40f5d8:	b	40f6b0 <ferror@plt+0xc6e0>
  40f5dc:	cmp	w24, #0x73
  40f5e0:	b.gt	40f654 <ferror@plt+0xc684>
  40f5e4:	sub	w10, w24, #0x62
  40f5e8:	cmp	w10, #0xb
  40f5ec:	b.hi	40f714 <ferror@plt+0xc744>  // b.pmore
  40f5f0:	adrp	x11, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f5f4:	add	x11, x11, #0x9bc
  40f5f8:	adr	x12, 40f60c <ferror@plt+0xc63c>
  40f5fc:	ldrb	w13, [x11, x10]
  40f600:	add	x12, x12, x13, lsl #2
  40f604:	mov	w10, wzr
  40f608:	br	x12
  40f60c:	cmp	xzr, x22, lsr #55
  40f610:	lsl	x9, x22, #9
  40f614:	b	40f6b0 <ferror@plt+0xc6e0>
  40f618:	cmp	w24, #0x54
  40f61c:	b.eq	40f6e8 <ferror@plt+0xc718>  // b.none
  40f620:	cmp	w24, #0x59
  40f624:	b.ne	40f748 <ferror@plt+0xc778>  // b.any
  40f628:	mov	w10, wzr
  40f62c:	mov	w11, #0xfffffff8            	// #-8
  40f630:	umulh	x12, x9, x22
  40f634:	cmp	xzr, x12
  40f638:	mul	x13, x22, x9
  40f63c:	cset	w12, ne  // ne = any
  40f640:	csinv	x22, x13, xzr, eq  // eq = none
  40f644:	adds	w11, w11, #0x1
  40f648:	orr	w10, w10, w12
  40f64c:	b.cc	40f630 <ferror@plt+0xc660>  // b.lo, b.ul, b.last
  40f650:	b	40f7a8 <ferror@plt+0xc7d8>
  40f654:	cmp	w24, #0x74
  40f658:	b.eq	40f6e8 <ferror@plt+0xc718>  // b.none
  40f65c:	cmp	w24, #0x77
  40f660:	b.ne	40f748 <ferror@plt+0xc778>  // b.any
  40f664:	cmn	x22, x22
  40f668:	lsl	x9, x22, #1
  40f66c:	cset	w10, cs  // cs = hs, nlast
  40f670:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  40f674:	b	40f7a8 <ferror@plt+0xc7d8>
  40f678:	mov	w10, wzr
  40f67c:	mov	w11, #0xfffffffd            	// #-3
  40f680:	umulh	x12, x9, x22
  40f684:	cmp	xzr, x12
  40f688:	mul	x13, x22, x9
  40f68c:	cset	w12, ne  // ne = any
  40f690:	csinv	x22, x13, xzr, eq  // eq = none
  40f694:	adds	w11, w11, #0x1
  40f698:	orr	w10, w10, w12
  40f69c:	b.cc	40f680 <ferror@plt+0xc6b0>  // b.lo, b.ul, b.last
  40f6a0:	b	40f7a8 <ferror@plt+0xc7d8>
  40f6a4:	umulh	x10, x9, x22
  40f6a8:	mul	x9, x22, x9
  40f6ac:	cmp	xzr, x10
  40f6b0:	cset	w10, ne  // ne = any
  40f6b4:	csinv	x22, x9, xzr, eq  // eq = none
  40f6b8:	b	40f7a8 <ferror@plt+0xc7d8>
  40f6bc:	mov	w10, wzr
  40f6c0:	mov	w11, #0xfffffffe            	// #-2
  40f6c4:	umulh	x12, x9, x22
  40f6c8:	cmp	xzr, x12
  40f6cc:	mul	x13, x22, x9
  40f6d0:	cset	w12, ne  // ne = any
  40f6d4:	csinv	x22, x13, xzr, eq  // eq = none
  40f6d8:	adds	w11, w11, #0x1
  40f6dc:	orr	w10, w10, w12
  40f6e0:	b.cc	40f6c4 <ferror@plt+0xc6f4>  // b.lo, b.ul, b.last
  40f6e4:	b	40f7a8 <ferror@plt+0xc7d8>
  40f6e8:	mov	w10, wzr
  40f6ec:	mov	w11, #0xfffffffc            	// #-4
  40f6f0:	umulh	x12, x9, x22
  40f6f4:	cmp	xzr, x12
  40f6f8:	mul	x13, x22, x9
  40f6fc:	cset	w12, ne  // ne = any
  40f700:	csinv	x22, x13, xzr, eq  // eq = none
  40f704:	adds	w11, w11, #0x1
  40f708:	orr	w10, w10, w12
  40f70c:	b.cc	40f6f0 <ferror@plt+0xc720>  // b.lo, b.ul, b.last
  40f710:	b	40f7a8 <ferror@plt+0xc7d8>
  40f714:	cmp	w24, #0x5a
  40f718:	b.ne	40f748 <ferror@plt+0xc778>  // b.any
  40f71c:	mov	w10, wzr
  40f720:	mov	w11, #0xfffffff9            	// #-7
  40f724:	umulh	x12, x9, x22
  40f728:	cmp	xzr, x12
  40f72c:	mul	x13, x22, x9
  40f730:	cset	w12, ne  // ne = any
  40f734:	csinv	x22, x13, xzr, eq  // eq = none
  40f738:	adds	w11, w11, #0x1
  40f73c:	orr	w10, w10, w12
  40f740:	b.cc	40f724 <ferror@plt+0xc754>  // b.lo, b.ul, b.last
  40f744:	b	40f7a8 <ferror@plt+0xc7d8>
  40f748:	str	x22, [x19]
  40f74c:	orr	w20, w20, #0x2
  40f750:	b	40f7c8 <ferror@plt+0xc7f8>
  40f754:	mov	w10, wzr
  40f758:	mov	w11, #0xfffffffa            	// #-6
  40f75c:	umulh	x12, x9, x22
  40f760:	cmp	xzr, x12
  40f764:	mul	x13, x22, x9
  40f768:	cset	w12, ne  // ne = any
  40f76c:	csinv	x22, x13, xzr, eq  // eq = none
  40f770:	adds	w11, w11, #0x1
  40f774:	orr	w10, w10, w12
  40f778:	b.cc	40f75c <ferror@plt+0xc78c>  // b.lo, b.ul, b.last
  40f77c:	b	40f7a8 <ferror@plt+0xc7d8>
  40f780:	mov	w10, wzr
  40f784:	mov	w11, #0xfffffffb            	// #-5
  40f788:	umulh	x12, x9, x22
  40f78c:	cmp	xzr, x12
  40f790:	mul	x13, x22, x9
  40f794:	cset	w12, ne  // ne = any
  40f798:	csinv	x22, x13, xzr, eq  // eq = none
  40f79c:	adds	w11, w11, #0x1
  40f7a0:	orr	w10, w10, w12
  40f7a4:	b.cc	40f788 <ferror@plt+0xc7b8>  // b.lo, b.ul, b.last
  40f7a8:	add	x9, x25, x8
  40f7ac:	str	x9, [x21]
  40f7b0:	ldrb	w8, [x25, x8]
  40f7b4:	orr	w9, w10, w20
  40f7b8:	orr	w10, w9, #0x2
  40f7bc:	cmp	w8, #0x0
  40f7c0:	csel	w20, w9, w10, eq  // eq = none
  40f7c4:	str	x22, [x19]
  40f7c8:	mov	w0, w20
  40f7cc:	ldp	x20, x19, [sp, #64]
  40f7d0:	ldp	x22, x21, [sp, #48]
  40f7d4:	ldp	x24, x23, [sp, #32]
  40f7d8:	ldr	x25, [sp, #16]
  40f7dc:	ldp	x29, x30, [sp], #80
  40f7e0:	ret
  40f7e4:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f7e8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f7ec:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f7f0:	add	x0, x0, #0x9c8
  40f7f4:	add	x1, x1, #0x9ee
  40f7f8:	add	x3, x3, #0x9fe
  40f7fc:	mov	w2, #0x54                  	// #84
  40f800:	bl	402f30 <__assert_fail@plt>
  40f804:	stp	x29, x30, [sp, #-16]!
  40f808:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40f80c:	ldr	w5, [x8, #1232]
  40f810:	mov	x29, sp
  40f814:	bl	40f81c <ferror@plt+0xc84c>
  40f818:	bl	402c20 <abort@plt>
  40f81c:	sub	sp, sp, #0x40
  40f820:	sub	w9, w0, #0x1
  40f824:	cmp	w9, #0x4
  40f828:	stp	x29, x30, [sp, #16]
  40f82c:	stp	x22, x21, [sp, #32]
  40f830:	stp	x20, x19, [sp, #48]
  40f834:	add	x29, sp, #0x10
  40f838:	b.cs	40f8c4 <ferror@plt+0xc8f4>  // b.hs, b.nlast
  40f83c:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f840:	add	x10, x10, #0xab0
  40f844:	mov	w8, w1
  40f848:	ldr	x1, [x10, w9, sxtw #3]
  40f84c:	mov	w20, w5
  40f850:	mov	x19, x4
  40f854:	sxtw	x9, w8
  40f858:	tbnz	w8, #31, 40f870 <ferror@plt+0xc8a0>
  40f85c:	lsl	x8, x9, #5
  40f860:	ldr	x21, [x3, x8]
  40f864:	adrp	x22, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f868:	add	x22, x22, #0xa4f
  40f86c:	b	40f888 <ferror@plt+0xc8b8>
  40f870:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40f874:	add	x8, x8, #0xa4f
  40f878:	sub	x21, x29, #0x4
  40f87c:	sturb	w2, [x29, #-4]
  40f880:	sub	x22, x8, x9
  40f884:	sturb	wzr, [x29, #-3]
  40f888:	mov	w2, #0x5                   	// #5
  40f88c:	mov	x0, xzr
  40f890:	bl	402eb0 <dcgettext@plt>
  40f894:	mov	x2, x0
  40f898:	mov	w0, w20
  40f89c:	mov	w1, wzr
  40f8a0:	mov	x3, x22
  40f8a4:	mov	x4, x21
  40f8a8:	mov	x5, x19
  40f8ac:	bl	402900 <error@plt>
  40f8b0:	ldp	x20, x19, [sp, #48]
  40f8b4:	ldp	x22, x21, [sp, #32]
  40f8b8:	ldp	x29, x30, [sp, #16]
  40f8bc:	add	sp, sp, #0x40
  40f8c0:	ret
  40f8c4:	bl	402c20 <abort@plt>
  40f8c8:	stp	x29, x30, [sp, #-80]!
  40f8cc:	cmp	w2, #0x25
  40f8d0:	str	x25, [sp, #16]
  40f8d4:	stp	x24, x23, [sp, #32]
  40f8d8:	stp	x22, x21, [sp, #48]
  40f8dc:	stp	x20, x19, [sp, #64]
  40f8e0:	mov	x29, sp
  40f8e4:	b.cs	40fc74 <ferror@plt+0xcca4>  // b.hs, b.nlast
  40f8e8:	mov	x23, x4
  40f8ec:	mov	x19, x3
  40f8f0:	mov	w22, w2
  40f8f4:	mov	x21, x1
  40f8f8:	mov	x20, x0
  40f8fc:	bl	402f40 <__errno_location@plt>
  40f900:	mov	x24, x0
  40f904:	str	wzr, [x0]
  40f908:	bl	402cf0 <__ctype_b_loc@plt>
  40f90c:	ldr	x8, [x0]
  40f910:	mov	x10, x20
  40f914:	ldrb	w9, [x10], #1
  40f918:	ldrh	w11, [x8, x9, lsl #1]
  40f91c:	tbnz	w11, #13, 40f914 <ferror@plt+0xc944>
  40f920:	cmp	x21, #0x0
  40f924:	add	x8, x29, #0x18
  40f928:	csel	x21, x8, x21, eq  // eq = none
  40f92c:	cmp	w9, #0x2d
  40f930:	b.ne	40f93c <ferror@plt+0xc96c>  // b.any
  40f934:	mov	w20, #0x4                   	// #4
  40f938:	b	40fc58 <ferror@plt+0xcc88>
  40f93c:	mov	x0, x20
  40f940:	mov	x1, x21
  40f944:	mov	w2, w22
  40f948:	bl	402c00 <strtoumax@plt>
  40f94c:	ldr	x25, [x21]
  40f950:	cmp	x25, x20
  40f954:	b.eq	40f978 <ferror@plt+0xc9a8>  // b.none
  40f958:	ldr	w20, [x24]
  40f95c:	mov	x22, x0
  40f960:	cbz	w20, 40f970 <ferror@plt+0xc9a0>
  40f964:	cmp	w20, #0x22
  40f968:	b.ne	40f934 <ferror@plt+0xc964>  // b.any
  40f96c:	mov	w20, #0x1                   	// #1
  40f970:	cbnz	x23, 40f998 <ferror@plt+0xc9c8>
  40f974:	b	40fc54 <ferror@plt+0xcc84>
  40f978:	cbz	x23, 40f934 <ferror@plt+0xc964>
  40f97c:	ldrb	w1, [x20]
  40f980:	cbz	w1, 40f934 <ferror@plt+0xc964>
  40f984:	mov	x0, x23
  40f988:	bl	402d90 <strchr@plt>
  40f98c:	cbz	x0, 40f934 <ferror@plt+0xc964>
  40f990:	mov	w20, wzr
  40f994:	mov	w22, #0x1                   	// #1
  40f998:	ldrb	w24, [x25]
  40f99c:	cbz	w24, 40fc54 <ferror@plt+0xcc84>
  40f9a0:	mov	x0, x23
  40f9a4:	mov	w1, w24
  40f9a8:	bl	402d90 <strchr@plt>
  40f9ac:	cbz	x0, 40fbd8 <ferror@plt+0xcc08>
  40f9b0:	sub	w10, w24, #0x45
  40f9b4:	mov	w8, #0x1                   	// #1
  40f9b8:	cmp	w10, #0x2f
  40f9bc:	mov	w9, #0x400                 	// #1024
  40f9c0:	b.hi	40fa34 <ferror@plt+0xca64>  // b.pmore
  40f9c4:	mov	w11, #0x1                   	// #1
  40f9c8:	lsl	x10, x11, x10
  40f9cc:	mov	x11, #0x8945                	// #35141
  40f9d0:	movk	x11, #0x30, lsl #16
  40f9d4:	movk	x11, #0x8144, lsl #32
  40f9d8:	tst	x10, x11
  40f9dc:	b.eq	40fa34 <ferror@plt+0xca64>  // b.none
  40f9e0:	mov	w1, #0x30                  	// #48
  40f9e4:	mov	x0, x23
  40f9e8:	bl	402d90 <strchr@plt>
  40f9ec:	cbz	x0, 40fa20 <ferror@plt+0xca50>
  40f9f0:	ldrb	w8, [x25, #1]
  40f9f4:	cmp	w8, #0x42
  40f9f8:	b.eq	40fa2c <ferror@plt+0xca5c>  // b.none
  40f9fc:	cmp	w8, #0x44
  40fa00:	b.eq	40fa2c <ferror@plt+0xca5c>  // b.none
  40fa04:	cmp	w8, #0x69
  40fa08:	b.ne	40fa20 <ferror@plt+0xca50>  // b.any
  40fa0c:	ldrb	w8, [x25, #2]
  40fa10:	mov	w9, #0x3                   	// #3
  40fa14:	cmp	w8, #0x42
  40fa18:	csinc	x8, x9, xzr, eq  // eq = none
  40fa1c:	b	40fa24 <ferror@plt+0xca54>
  40fa20:	mov	w8, #0x1                   	// #1
  40fa24:	mov	w9, #0x400                 	// #1024
  40fa28:	b	40fa34 <ferror@plt+0xca64>
  40fa2c:	mov	w8, #0x2                   	// #2
  40fa30:	mov	w9, #0x3e8                 	// #1000
  40fa34:	cmp	w24, #0x59
  40fa38:	b.gt	40fa6c <ferror@plt+0xca9c>
  40fa3c:	sub	w10, w24, #0x42
  40fa40:	cmp	w10, #0xe
  40fa44:	b.hi	40faa8 <ferror@plt+0xcad8>  // b.pmore
  40fa48:	adrp	x11, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40fa4c:	add	x11, x11, #0xad0
  40fa50:	adr	x12, 40fa60 <ferror@plt+0xca90>
  40fa54:	ldrb	w13, [x11, x10]
  40fa58:	add	x12, x12, x13, lsl #2
  40fa5c:	br	x12
  40fa60:	cmp	xzr, x22, lsr #54
  40fa64:	lsl	x9, x22, #10
  40fa68:	b	40fb40 <ferror@plt+0xcb70>
  40fa6c:	cmp	w24, #0x73
  40fa70:	b.gt	40fae4 <ferror@plt+0xcb14>
  40fa74:	sub	w10, w24, #0x62
  40fa78:	cmp	w10, #0xb
  40fa7c:	b.hi	40fba4 <ferror@plt+0xcbd4>  // b.pmore
  40fa80:	adrp	x11, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40fa84:	add	x11, x11, #0xadf
  40fa88:	adr	x12, 40fa9c <ferror@plt+0xcacc>
  40fa8c:	ldrb	w13, [x11, x10]
  40fa90:	add	x12, x12, x13, lsl #2
  40fa94:	mov	w10, wzr
  40fa98:	br	x12
  40fa9c:	cmp	xzr, x22, lsr #55
  40faa0:	lsl	x9, x22, #9
  40faa4:	b	40fb40 <ferror@plt+0xcb70>
  40faa8:	cmp	w24, #0x54
  40faac:	b.eq	40fb78 <ferror@plt+0xcba8>  // b.none
  40fab0:	cmp	w24, #0x59
  40fab4:	b.ne	40fbd8 <ferror@plt+0xcc08>  // b.any
  40fab8:	mov	w10, wzr
  40fabc:	mov	w11, #0xfffffff8            	// #-8
  40fac0:	umulh	x12, x9, x22
  40fac4:	cmp	xzr, x12
  40fac8:	mul	x13, x22, x9
  40facc:	cset	w12, ne  // ne = any
  40fad0:	csinv	x22, x13, xzr, eq  // eq = none
  40fad4:	adds	w11, w11, #0x1
  40fad8:	orr	w10, w10, w12
  40fadc:	b.cc	40fac0 <ferror@plt+0xcaf0>  // b.lo, b.ul, b.last
  40fae0:	b	40fc38 <ferror@plt+0xcc68>
  40fae4:	cmp	w24, #0x74
  40fae8:	b.eq	40fb78 <ferror@plt+0xcba8>  // b.none
  40faec:	cmp	w24, #0x77
  40faf0:	b.ne	40fbd8 <ferror@plt+0xcc08>  // b.any
  40faf4:	cmn	x22, x22
  40faf8:	lsl	x9, x22, #1
  40fafc:	cset	w10, cs  // cs = hs, nlast
  40fb00:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  40fb04:	b	40fc38 <ferror@plt+0xcc68>
  40fb08:	mov	w10, wzr
  40fb0c:	mov	w11, #0xfffffffd            	// #-3
  40fb10:	umulh	x12, x9, x22
  40fb14:	cmp	xzr, x12
  40fb18:	mul	x13, x22, x9
  40fb1c:	cset	w12, ne  // ne = any
  40fb20:	csinv	x22, x13, xzr, eq  // eq = none
  40fb24:	adds	w11, w11, #0x1
  40fb28:	orr	w10, w10, w12
  40fb2c:	b.cc	40fb10 <ferror@plt+0xcb40>  // b.lo, b.ul, b.last
  40fb30:	b	40fc38 <ferror@plt+0xcc68>
  40fb34:	umulh	x10, x9, x22
  40fb38:	mul	x9, x22, x9
  40fb3c:	cmp	xzr, x10
  40fb40:	cset	w10, ne  // ne = any
  40fb44:	csinv	x22, x9, xzr, eq  // eq = none
  40fb48:	b	40fc38 <ferror@plt+0xcc68>
  40fb4c:	mov	w10, wzr
  40fb50:	mov	w11, #0xfffffffe            	// #-2
  40fb54:	umulh	x12, x9, x22
  40fb58:	cmp	xzr, x12
  40fb5c:	mul	x13, x22, x9
  40fb60:	cset	w12, ne  // ne = any
  40fb64:	csinv	x22, x13, xzr, eq  // eq = none
  40fb68:	adds	w11, w11, #0x1
  40fb6c:	orr	w10, w10, w12
  40fb70:	b.cc	40fb54 <ferror@plt+0xcb84>  // b.lo, b.ul, b.last
  40fb74:	b	40fc38 <ferror@plt+0xcc68>
  40fb78:	mov	w10, wzr
  40fb7c:	mov	w11, #0xfffffffc            	// #-4
  40fb80:	umulh	x12, x9, x22
  40fb84:	cmp	xzr, x12
  40fb88:	mul	x13, x22, x9
  40fb8c:	cset	w12, ne  // ne = any
  40fb90:	csinv	x22, x13, xzr, eq  // eq = none
  40fb94:	adds	w11, w11, #0x1
  40fb98:	orr	w10, w10, w12
  40fb9c:	b.cc	40fb80 <ferror@plt+0xcbb0>  // b.lo, b.ul, b.last
  40fba0:	b	40fc38 <ferror@plt+0xcc68>
  40fba4:	cmp	w24, #0x5a
  40fba8:	b.ne	40fbd8 <ferror@plt+0xcc08>  // b.any
  40fbac:	mov	w10, wzr
  40fbb0:	mov	w11, #0xfffffff9            	// #-7
  40fbb4:	umulh	x12, x9, x22
  40fbb8:	cmp	xzr, x12
  40fbbc:	mul	x13, x22, x9
  40fbc0:	cset	w12, ne  // ne = any
  40fbc4:	csinv	x22, x13, xzr, eq  // eq = none
  40fbc8:	adds	w11, w11, #0x1
  40fbcc:	orr	w10, w10, w12
  40fbd0:	b.cc	40fbb4 <ferror@plt+0xcbe4>  // b.lo, b.ul, b.last
  40fbd4:	b	40fc38 <ferror@plt+0xcc68>
  40fbd8:	str	x22, [x19]
  40fbdc:	orr	w20, w20, #0x2
  40fbe0:	b	40fc58 <ferror@plt+0xcc88>
  40fbe4:	mov	w10, wzr
  40fbe8:	mov	w11, #0xfffffffa            	// #-6
  40fbec:	umulh	x12, x9, x22
  40fbf0:	cmp	xzr, x12
  40fbf4:	mul	x13, x22, x9
  40fbf8:	cset	w12, ne  // ne = any
  40fbfc:	csinv	x22, x13, xzr, eq  // eq = none
  40fc00:	adds	w11, w11, #0x1
  40fc04:	orr	w10, w10, w12
  40fc08:	b.cc	40fbec <ferror@plt+0xcc1c>  // b.lo, b.ul, b.last
  40fc0c:	b	40fc38 <ferror@plt+0xcc68>
  40fc10:	mov	w10, wzr
  40fc14:	mov	w11, #0xfffffffb            	// #-5
  40fc18:	umulh	x12, x9, x22
  40fc1c:	cmp	xzr, x12
  40fc20:	mul	x13, x22, x9
  40fc24:	cset	w12, ne  // ne = any
  40fc28:	csinv	x22, x13, xzr, eq  // eq = none
  40fc2c:	adds	w11, w11, #0x1
  40fc30:	orr	w10, w10, w12
  40fc34:	b.cc	40fc18 <ferror@plt+0xcc48>  // b.lo, b.ul, b.last
  40fc38:	add	x9, x25, x8
  40fc3c:	str	x9, [x21]
  40fc40:	ldrb	w8, [x25, x8]
  40fc44:	orr	w9, w10, w20
  40fc48:	orr	w10, w9, #0x2
  40fc4c:	cmp	w8, #0x0
  40fc50:	csel	w20, w9, w10, eq  // eq = none
  40fc54:	str	x22, [x19]
  40fc58:	mov	w0, w20
  40fc5c:	ldp	x20, x19, [sp, #64]
  40fc60:	ldp	x22, x21, [sp, #48]
  40fc64:	ldp	x24, x23, [sp, #32]
  40fc68:	ldr	x25, [sp, #16]
  40fc6c:	ldp	x29, x30, [sp], #80
  40fc70:	ret
  40fc74:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40fc78:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40fc7c:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x2ac0>
  40fc80:	add	x0, x0, #0x9c8
  40fc84:	add	x1, x1, #0x9ee
  40fc88:	add	x3, x3, #0xaeb
  40fc8c:	mov	w2, #0x54                  	// #84
  40fc90:	bl	402f30 <__assert_fail@plt>
  40fc94:	mov	x8, x1
  40fc98:	mov	w1, #0x1                   	// #1
  40fc9c:	mov	w9, #0x1                   	// #1
  40fca0:	cbz	x0, 40fcd8 <ferror@plt+0xcd08>
  40fca4:	cbz	x8, 40fcd8 <ferror@plt+0xcd08>
  40fca8:	umulh	x10, x8, x0
  40fcac:	mov	x1, x8
  40fcb0:	mov	x9, x0
  40fcb4:	cbz	x10, 40fcd8 <ferror@plt+0xcd08>
  40fcb8:	stp	x29, x30, [sp, #-16]!
  40fcbc:	mov	x29, sp
  40fcc0:	bl	402f40 <__errno_location@plt>
  40fcc4:	mov	w8, #0xc                   	// #12
  40fcc8:	str	w8, [x0]
  40fccc:	mov	x0, xzr
  40fcd0:	ldp	x29, x30, [sp], #16
  40fcd4:	ret
  40fcd8:	mov	x0, x9
  40fcdc:	b	402b60 <calloc@plt>
  40fce0:	stp	x29, x30, [sp, #-48]!
  40fce4:	str	x21, [sp, #16]
  40fce8:	stp	x20, x19, [sp, #32]
  40fcec:	mov	x29, sp
  40fcf0:	mov	x19, x0
  40fcf4:	bl	4029f0 <fileno@plt>
  40fcf8:	tbnz	w0, #31, 40fd60 <ferror@plt+0xcd90>
  40fcfc:	mov	x0, x19
  40fd00:	bl	402ee0 <__freading@plt>
  40fd04:	cbz	w0, 40fd24 <ferror@plt+0xcd54>
  40fd08:	mov	x0, x19
  40fd0c:	bl	4029f0 <fileno@plt>
  40fd10:	mov	w2, #0x1                   	// #1
  40fd14:	mov	x1, xzr
  40fd18:	bl	4029b0 <lseek@plt>
  40fd1c:	cmn	x0, #0x1
  40fd20:	b.eq	40fd60 <ferror@plt+0xcd90>  // b.none
  40fd24:	mov	x0, x19
  40fd28:	bl	410020 <ferror@plt+0xd050>
  40fd2c:	cbz	w0, 40fd60 <ferror@plt+0xcd90>
  40fd30:	bl	402f40 <__errno_location@plt>
  40fd34:	ldr	w21, [x0]
  40fd38:	mov	x20, x0
  40fd3c:	mov	x0, x19
  40fd40:	bl	402a20 <fclose@plt>
  40fd44:	cbz	w21, 40fd50 <ferror@plt+0xcd80>
  40fd48:	mov	w0, #0xffffffff            	// #-1
  40fd4c:	str	w21, [x20]
  40fd50:	ldp	x20, x19, [sp, #32]
  40fd54:	ldr	x21, [sp, #16]
  40fd58:	ldp	x29, x30, [sp], #48
  40fd5c:	ret
  40fd60:	mov	x0, x19
  40fd64:	ldp	x20, x19, [sp, #32]
  40fd68:	ldr	x21, [sp, #16]
  40fd6c:	ldp	x29, x30, [sp], #48
  40fd70:	b	402a20 <fclose@plt>
  40fd74:	sub	sp, sp, #0x100
  40fd78:	stp	x29, x30, [sp, #208]
  40fd7c:	add	x29, sp, #0xd0
  40fd80:	mov	x8, #0xffffffffffffffd0    	// #-48
  40fd84:	mov	x9, sp
  40fd88:	sub	x10, x29, #0x50
  40fd8c:	stp	x20, x19, [sp, #240]
  40fd90:	mov	w19, w0
  40fd94:	movk	x8, #0xff80, lsl #32
  40fd98:	add	x11, x29, #0x30
  40fd9c:	cmp	w1, #0xb
  40fda0:	add	x9, x9, #0x80
  40fda4:	add	x10, x10, #0x30
  40fda8:	stp	x22, x21, [sp, #224]
  40fdac:	stp	x2, x3, [x29, #-80]
  40fdb0:	stp	x4, x5, [x29, #-64]
  40fdb4:	stp	x6, x7, [x29, #-48]
  40fdb8:	stp	q1, q2, [sp, #16]
  40fdbc:	stp	q3, q4, [sp, #48]
  40fdc0:	str	q0, [sp]
  40fdc4:	stp	q5, q6, [sp, #80]
  40fdc8:	str	q7, [sp, #112]
  40fdcc:	stp	x9, x8, [x29, #-16]
  40fdd0:	stp	x11, x10, [x29, #-32]
  40fdd4:	b.hi	40fe20 <ferror@plt+0xce50>  // b.pmore
  40fdd8:	mov	w8, #0x1                   	// #1
  40fddc:	lsl	w8, w8, w1
  40fde0:	mov	w9, #0x514                 	// #1300
  40fde4:	tst	w8, w9
  40fde8:	b.ne	40fe58 <ferror@plt+0xce88>  // b.any
  40fdec:	mov	w9, #0xa0a                 	// #2570
  40fdf0:	tst	w8, w9
  40fdf4:	b.ne	40fe4c <ferror@plt+0xce7c>  // b.any
  40fdf8:	cbnz	w1, 40fe20 <ferror@plt+0xce50>
  40fdfc:	ldursw	x8, [x29, #-8]
  40fe00:	tbz	w8, #31, 40ff00 <ferror@plt+0xcf30>
  40fe04:	add	w9, w8, #0x8
  40fe08:	cmn	w8, #0x8
  40fe0c:	stur	w9, [x29, #-8]
  40fe10:	b.gt	40ff00 <ferror@plt+0xcf30>
  40fe14:	ldur	x9, [x29, #-24]
  40fe18:	add	x8, x9, x8
  40fe1c:	b	40ff0c <ferror@plt+0xcf3c>
  40fe20:	sub	w8, w1, #0x400
  40fe24:	cmp	w8, #0xa
  40fe28:	b.hi	40fedc <ferror@plt+0xcf0c>  // b.pmore
  40fe2c:	mov	w9, #0x1                   	// #1
  40fe30:	lsl	w9, w9, w8
  40fe34:	mov	w10, #0x285                 	// #645
  40fe38:	tst	w9, w10
  40fe3c:	b.ne	40fe58 <ferror@plt+0xce88>  // b.any
  40fe40:	mov	w10, #0x502                 	// #1282
  40fe44:	tst	w9, w10
  40fe48:	b.eq	40feb0 <ferror@plt+0xcee0>  // b.none
  40fe4c:	mov	w0, w19
  40fe50:	bl	402dd0 <fcntl@plt>
  40fe54:	b	40fe94 <ferror@plt+0xcec4>
  40fe58:	ldursw	x8, [x29, #-8]
  40fe5c:	tbz	w8, #31, 40fe7c <ferror@plt+0xceac>
  40fe60:	add	w9, w8, #0x8
  40fe64:	cmn	w8, #0x8
  40fe68:	stur	w9, [x29, #-8]
  40fe6c:	b.gt	40fe7c <ferror@plt+0xceac>
  40fe70:	ldur	x9, [x29, #-24]
  40fe74:	add	x8, x9, x8
  40fe78:	b	40fe88 <ferror@plt+0xceb8>
  40fe7c:	ldur	x8, [x29, #-32]
  40fe80:	add	x9, x8, #0x8
  40fe84:	stur	x9, [x29, #-32]
  40fe88:	ldr	w2, [x8]
  40fe8c:	mov	w0, w19
  40fe90:	bl	402dd0 <fcntl@plt>
  40fe94:	mov	w20, w0
  40fe98:	mov	w0, w20
  40fe9c:	ldp	x20, x19, [sp, #240]
  40fea0:	ldp	x22, x21, [sp, #224]
  40fea4:	ldp	x29, x30, [sp, #208]
  40fea8:	add	sp, sp, #0x100
  40feac:	ret
  40feb0:	cmp	w8, #0x6
  40feb4:	b.ne	40fedc <ferror@plt+0xcf0c>  // b.any
  40feb8:	ldursw	x8, [x29, #-8]
  40febc:	tbz	w8, #31, 40ff1c <ferror@plt+0xcf4c>
  40fec0:	add	w9, w8, #0x8
  40fec4:	cmn	w8, #0x8
  40fec8:	stur	w9, [x29, #-8]
  40fecc:	b.gt	40ff1c <ferror@plt+0xcf4c>
  40fed0:	ldur	x9, [x29, #-24]
  40fed4:	add	x8, x9, x8
  40fed8:	b	40ff28 <ferror@plt+0xcf58>
  40fedc:	ldursw	x8, [x29, #-8]
  40fee0:	tbz	w8, #31, 40ff88 <ferror@plt+0xcfb8>
  40fee4:	add	w9, w8, #0x8
  40fee8:	cmn	w8, #0x8
  40feec:	stur	w9, [x29, #-8]
  40fef0:	b.gt	40ff88 <ferror@plt+0xcfb8>
  40fef4:	ldur	x9, [x29, #-24]
  40fef8:	add	x8, x9, x8
  40fefc:	b	40ff94 <ferror@plt+0xcfc4>
  40ff00:	ldur	x8, [x29, #-32]
  40ff04:	add	x9, x8, #0x8
  40ff08:	stur	x9, [x29, #-32]
  40ff0c:	ldr	w2, [x8]
  40ff10:	mov	w0, w19
  40ff14:	mov	w1, wzr
  40ff18:	b	40fe90 <ferror@plt+0xcec0>
  40ff1c:	ldur	x8, [x29, #-32]
  40ff20:	add	x9, x8, #0x8
  40ff24:	stur	x9, [x29, #-32]
  40ff28:	adrp	x22, 424000 <_obstack_memory_used@@Base+0x13ac0>
  40ff2c:	ldr	w9, [x22, #3344]
  40ff30:	ldr	w21, [x8]
  40ff34:	tbnz	w9, #31, 40ffb0 <ferror@plt+0xcfe0>
  40ff38:	mov	w1, #0x406                 	// #1030
  40ff3c:	mov	w0, w19
  40ff40:	mov	w2, w21
  40ff44:	bl	402dd0 <fcntl@plt>
  40ff48:	mov	w20, w0
  40ff4c:	tbz	w0, #31, 40ffa4 <ferror@plt+0xcfd4>
  40ff50:	bl	402f40 <__errno_location@plt>
  40ff54:	ldr	w8, [x0]
  40ff58:	cmp	w8, #0x16
  40ff5c:	b.ne	40ffa4 <ferror@plt+0xcfd4>  // b.any
  40ff60:	mov	w0, w19
  40ff64:	mov	w1, wzr
  40ff68:	mov	w2, w21
  40ff6c:	bl	402dd0 <fcntl@plt>
  40ff70:	mov	w20, w0
  40ff74:	tbnz	w0, #31, 40fe98 <ferror@plt+0xcec8>
  40ff78:	mov	w8, #0xffffffff            	// #-1
  40ff7c:	str	w8, [x22, #3344]
  40ff80:	mov	w8, #0x1                   	// #1
  40ff84:	b	40ffd0 <ferror@plt+0xd000>
  40ff88:	ldur	x8, [x29, #-32]
  40ff8c:	add	x9, x8, #0x8
  40ff90:	stur	x9, [x29, #-32]
  40ff94:	ldr	x2, [x8]
  40ff98:	mov	w0, w19
  40ff9c:	bl	402dd0 <fcntl@plt>
  40ffa0:	b	40fe94 <ferror@plt+0xcec4>
  40ffa4:	mov	w8, #0x1                   	// #1
  40ffa8:	str	w8, [x22, #3344]
  40ffac:	b	40fe98 <ferror@plt+0xcec8>
  40ffb0:	mov	w0, w19
  40ffb4:	mov	w1, wzr
  40ffb8:	mov	w2, w21
  40ffbc:	bl	402dd0 <fcntl@plt>
  40ffc0:	ldr	w8, [x22, #3344]
  40ffc4:	mov	w20, w0
  40ffc8:	cmn	w8, #0x1
  40ffcc:	cset	w8, eq  // eq = none
  40ffd0:	cbz	w8, 40fe98 <ferror@plt+0xcec8>
  40ffd4:	tbnz	w20, #31, 40fe98 <ferror@plt+0xcec8>
  40ffd8:	mov	w1, #0x1                   	// #1
  40ffdc:	mov	w0, w20
  40ffe0:	bl	402dd0 <fcntl@plt>
  40ffe4:	tbnz	w0, #31, 410000 <ferror@plt+0xd030>
  40ffe8:	orr	w2, w0, #0x1
  40ffec:	mov	w1, #0x2                   	// #2
  40fff0:	mov	w0, w20
  40fff4:	bl	402dd0 <fcntl@plt>
  40fff8:	cmn	w0, #0x1
  40fffc:	b.ne	40fe98 <ferror@plt+0xcec8>  // b.any
  410000:	bl	402f40 <__errno_location@plt>
  410004:	ldr	w21, [x0]
  410008:	mov	x19, x0
  41000c:	mov	w0, w20
  410010:	bl	402ba0 <close@plt>
  410014:	str	w21, [x19]
  410018:	mov	w20, #0xffffffff            	// #-1
  41001c:	b	40fe98 <ferror@plt+0xcec8>
  410020:	stp	x29, x30, [sp, #-32]!
  410024:	str	x19, [sp, #16]
  410028:	mov	x19, x0
  41002c:	mov	x29, sp
  410030:	cbz	x0, 410058 <ferror@plt+0xd088>
  410034:	mov	x0, x19
  410038:	bl	402ee0 <__freading@plt>
  41003c:	cbz	w0, 410058 <ferror@plt+0xd088>
  410040:	ldrb	w8, [x19, #1]
  410044:	tbz	w8, #0, 410058 <ferror@plt+0xd088>
  410048:	mov	w2, #0x1                   	// #1
  41004c:	mov	x0, x19
  410050:	mov	x1, xzr
  410054:	bl	410068 <ferror@plt+0xd098>
  410058:	mov	x0, x19
  41005c:	ldr	x19, [sp, #16]
  410060:	ldp	x29, x30, [sp], #32
  410064:	b	402e00 <fflush@plt>
  410068:	stp	x29, x30, [sp, #-48]!
  41006c:	str	x21, [sp, #16]
  410070:	stp	x20, x19, [sp, #32]
  410074:	ldp	x9, x8, [x0, #8]
  410078:	mov	w20, w2
  41007c:	mov	x19, x0
  410080:	mov	x21, x1
  410084:	cmp	x8, x9
  410088:	mov	x29, sp
  41008c:	b.ne	4100a4 <ferror@plt+0xd0d4>  // b.any
  410090:	ldp	x9, x8, [x19, #32]
  410094:	cmp	x8, x9
  410098:	b.ne	4100a4 <ferror@plt+0xd0d4>  // b.any
  41009c:	ldr	x8, [x19, #72]
  4100a0:	cbz	x8, 4100c0 <ferror@plt+0xd0f0>
  4100a4:	mov	x0, x19
  4100a8:	mov	x1, x21
  4100ac:	mov	w2, w20
  4100b0:	ldp	x20, x19, [sp, #32]
  4100b4:	ldr	x21, [sp, #16]
  4100b8:	ldp	x29, x30, [sp], #48
  4100bc:	b	402d10 <fseeko@plt>
  4100c0:	mov	x0, x19
  4100c4:	bl	4029f0 <fileno@plt>
  4100c8:	mov	x1, x21
  4100cc:	mov	w2, w20
  4100d0:	bl	4029b0 <lseek@plt>
  4100d4:	cmn	x0, #0x1
  4100d8:	b.eq	4100f4 <ferror@plt+0xd124>  // b.none
  4100dc:	ldr	w9, [x19]
  4100e0:	mov	x8, x0
  4100e4:	mov	w0, wzr
  4100e8:	str	x8, [x19, #144]
  4100ec:	and	w9, w9, #0xffffffef
  4100f0:	str	w9, [x19]
  4100f4:	ldp	x20, x19, [sp, #32]
  4100f8:	ldr	x21, [sp, #16]
  4100fc:	ldp	x29, x30, [sp], #48
  410100:	ret
  410104:	sub	sp, sp, #0x40
  410108:	stp	x29, x30, [sp, #16]
  41010c:	add	x29, sp, #0x10
  410110:	cmp	x0, #0x0
  410114:	sub	x8, x29, #0x4
  410118:	stp	x20, x19, [sp, #48]
  41011c:	csel	x20, x8, x0, eq  // eq = none
  410120:	mov	x0, x20
  410124:	stp	x22, x21, [sp, #32]
  410128:	mov	x22, x2
  41012c:	mov	x19, x1
  410130:	bl	402850 <mbrtowc@plt>
  410134:	mov	x21, x0
  410138:	cbz	x22, 41015c <ferror@plt+0xd18c>
  41013c:	cmn	x21, #0x2
  410140:	b.cc	41015c <ferror@plt+0xd18c>  // b.lo, b.ul, b.last
  410144:	mov	w0, wzr
  410148:	bl	40ab0c <ferror@plt+0x7b3c>
  41014c:	tbnz	w0, #0, 41015c <ferror@plt+0xd18c>
  410150:	ldrb	w8, [x19]
  410154:	mov	w21, #0x1                   	// #1
  410158:	str	w8, [x20]
  41015c:	mov	x0, x21
  410160:	ldp	x20, x19, [sp, #48]
  410164:	ldp	x22, x21, [sp, #32]
  410168:	ldp	x29, x30, [sp, #16]
  41016c:	add	sp, sp, #0x40
  410170:	ret
  410174:	sub	sp, sp, #0x40
  410178:	stp	x29, x30, [sp, #16]
  41017c:	stp	x22, x21, [sp, #32]
  410180:	stp	x20, x19, [sp, #48]
  410184:	ldr	x8, [x0, #8]
  410188:	mov	w9, #0xca00                	// #51712
  41018c:	movk	w9, #0x3b9a, lsl #16
  410190:	add	x29, sp, #0x10
  410194:	cmp	x8, x9
  410198:	b.cc	4101b0 <ferror@plt+0xd1e0>  // b.lo, b.ul, b.last
  41019c:	bl	402f40 <__errno_location@plt>
  4101a0:	mov	w8, #0x16                  	// #22
  4101a4:	str	w8, [x0]
  4101a8:	mov	w0, #0xffffffff            	// #-1
  4101ac:	b	410214 <ferror@plt+0xd244>
  4101b0:	ldr	x20, [x0]
  4101b4:	mov	w21, #0xa400                	// #41984
  4101b8:	mov	x22, #0xffffffffffff5c00    	// #-41984
  4101bc:	mov	x19, x1
  4101c0:	movk	w21, #0x1f, lsl #16
  4101c4:	movk	x22, #0xffe0, lsl #16
  4101c8:	cmp	x20, x21
  4101cc:	str	x8, [sp, #8]
  4101d0:	b.le	410204 <ferror@plt+0xd234>
  4101d4:	mov	x0, sp
  4101d8:	mov	x1, x19
  4101dc:	str	x21, [sp]
  4101e0:	bl	402d70 <nanosleep@plt>
  4101e4:	mov	x8, xzr
  4101e8:	add	x20, x20, x22
  4101ec:	cbz	w0, 4101c8 <ferror@plt+0xd1f8>
  4101f0:	cbz	x19, 410214 <ferror@plt+0xd244>
  4101f4:	ldr	x8, [x19]
  4101f8:	add	x8, x8, x20
  4101fc:	str	x8, [x19]
  410200:	b	410214 <ferror@plt+0xd244>
  410204:	mov	x0, sp
  410208:	mov	x1, x19
  41020c:	str	x20, [sp]
  410210:	bl	402d70 <nanosleep@plt>
  410214:	ldp	x20, x19, [sp, #48]
  410218:	ldp	x22, x21, [sp, #32]
  41021c:	ldp	x29, x30, [sp, #16]
  410220:	add	sp, sp, #0x40
  410224:	ret

0000000000410228 <_obstack_begin@@Base>:
  410228:	stp	x29, x30, [sp, #-16]!
  41022c:	ldrb	w8, [x0, #80]
  410230:	mov	x29, sp
  410234:	stp	x3, x4, [x0, #56]
  410238:	and	w8, w8, #0xfe
  41023c:	strb	w8, [x0, #80]
  410240:	bl	410250 <_obstack_begin@@Base+0x28>
  410244:	mov	w0, #0x1                   	// #1
  410248:	ldp	x29, x30, [sp], #16
  41024c:	ret
  410250:	stp	x29, x30, [sp, #-48]!
  410254:	stp	x20, x19, [sp, #32]
  410258:	ldrb	w10, [x0, #80]
  41025c:	cmp	x2, #0x0
  410260:	mov	w8, #0x10                  	// #16
  410264:	mov	w9, #0xfe0                 	// #4064
  410268:	csel	x20, x8, x2, eq  // eq = none
  41026c:	cmp	x1, #0x0
  410270:	str	x21, [sp, #16]
  410274:	mov	x19, x0
  410278:	csel	x1, x9, x1, eq  // eq = none
  41027c:	sub	x21, x20, #0x1
  410280:	mov	x29, sp
  410284:	str	x1, [x0]
  410288:	str	x21, [x0, #48]
  41028c:	tbnz	w10, #0, 4102a0 <_obstack_begin@@Base+0x78>
  410290:	ldr	x8, [x19, #56]
  410294:	mov	x0, x1
  410298:	blr	x8
  41029c:	b	4102ac <_obstack_begin@@Base+0x84>
  4102a0:	ldr	x8, [x19, #56]
  4102a4:	ldr	x0, [x19, #72]
  4102a8:	blr	x8
  4102ac:	str	x0, [x19, #8]
  4102b0:	cbz	x0, 4102f8 <_obstack_begin@@Base+0xd0>
  4102b4:	ldr	x10, [x19]
  4102b8:	add	x8, x0, x21
  4102bc:	neg	x9, x20
  4102c0:	add	x8, x8, #0x10
  4102c4:	and	x8, x8, x9
  4102c8:	stp	x8, x8, [x19, #16]
  4102cc:	add	x8, x0, x10
  4102d0:	str	x8, [x0]
  4102d4:	str	x8, [x19, #32]
  4102d8:	str	xzr, [x0, #8]
  4102dc:	ldrb	w8, [x19, #80]
  4102e0:	ldr	x21, [sp, #16]
  4102e4:	and	w8, w8, #0xfffffff9
  4102e8:	strb	w8, [x19, #80]
  4102ec:	ldp	x20, x19, [sp, #32]
  4102f0:	ldp	x29, x30, [sp], #48
  4102f4:	ret
  4102f8:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4102fc:	ldr	x8, [x8, #1328]
  410300:	blr	x8

0000000000410304 <_obstack_begin_1@@Base>:
  410304:	stp	x29, x30, [sp, #-16]!
  410308:	ldrb	w8, [x0, #80]
  41030c:	mov	x29, sp
  410310:	stp	x3, x4, [x0, #56]
  410314:	str	x5, [x0, #72]
  410318:	orr	w8, w8, #0x1
  41031c:	strb	w8, [x0, #80]
  410320:	bl	410250 <_obstack_begin@@Base+0x28>
  410324:	mov	w0, #0x1                   	// #1
  410328:	ldp	x29, x30, [sp], #16
  41032c:	ret

0000000000410330 <_obstack_newchunk@@Base>:
  410330:	stp	x29, x30, [sp, #-64]!
  410334:	str	x23, [sp, #16]
  410338:	stp	x22, x21, [sp, #32]
  41033c:	stp	x20, x19, [sp, #48]
  410340:	ldp	x9, x8, [x0, #16]
  410344:	ldr	x10, [x0, #48]
  410348:	ldr	x11, [x0]
  41034c:	mov	x29, sp
  410350:	sub	x20, x8, x9
  410354:	adds	x8, x20, x1
  410358:	lsr	x9, x20, #3
  41035c:	cset	w12, cs  // cs = hs, nlast
  410360:	adds	x10, x8, x10
  410364:	add	x9, x9, #0x64
  410368:	cset	w8, cs  // cs = hs, nlast
  41036c:	adds	x9, x9, x10
  410370:	csel	x9, x10, x9, cs  // cs = hs, nlast
  410374:	cmp	x9, x11
  410378:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  41037c:	tbnz	w12, #0, 410468 <_obstack_newchunk@@Base+0x138>
  410380:	tbnz	w8, #0, 410468 <_obstack_newchunk@@Base+0x138>
  410384:	ldrb	w8, [x0, #80]
  410388:	ldr	x21, [x0, #8]
  41038c:	mov	x19, x0
  410390:	tbnz	w8, #0, 4103a4 <_obstack_newchunk@@Base+0x74>
  410394:	ldr	x8, [x19, #56]
  410398:	mov	x0, x23
  41039c:	blr	x8
  4103a0:	b	4103b4 <_obstack_newchunk@@Base+0x84>
  4103a4:	ldr	x8, [x19, #56]
  4103a8:	ldr	x0, [x19, #72]
  4103ac:	mov	x1, x23
  4103b0:	blr	x8
  4103b4:	mov	x22, x0
  4103b8:	cbz	x0, 410468 <_obstack_newchunk@@Base+0x138>
  4103bc:	add	x8, x22, x23
  4103c0:	str	x22, [x19, #8]
  4103c4:	str	x21, [x22, #8]
  4103c8:	str	x8, [x19, #32]
  4103cc:	str	x8, [x22]
  4103d0:	ldr	x8, [x19, #48]
  4103d4:	ldr	x1, [x19, #16]
  4103d8:	mov	x2, x20
  4103dc:	add	x9, x22, x8
  4103e0:	add	x9, x9, #0x10
  4103e4:	bic	x23, x9, x8
  4103e8:	mov	x0, x23
  4103ec:	bl	402860 <memcpy@plt>
  4103f0:	ldrb	w8, [x19, #80]
  4103f4:	tbnz	w8, #1, 410440 <_obstack_newchunk@@Base+0x110>
  4103f8:	ldr	x8, [x19, #48]
  4103fc:	ldr	x9, [x19, #16]
  410400:	add	x10, x21, x8
  410404:	add	x10, x10, #0x10
  410408:	bic	x8, x10, x8
  41040c:	cmp	x9, x8
  410410:	b.ne	410440 <_obstack_newchunk@@Base+0x110>  // b.any
  410414:	ldr	x8, [x21, #8]
  410418:	str	x8, [x22, #8]
  41041c:	ldrb	w8, [x19, #80]
  410420:	tbnz	w8, #0, 410434 <_obstack_newchunk@@Base+0x104>
  410424:	ldr	x8, [x19, #64]
  410428:	mov	x0, x21
  41042c:	blr	x8
  410430:	b	410440 <_obstack_newchunk@@Base+0x110>
  410434:	ldp	x8, x0, [x19, #64]
  410438:	mov	x1, x21
  41043c:	blr	x8
  410440:	ldrb	w8, [x19, #80]
  410444:	add	x9, x23, x20
  410448:	stp	x23, x9, [x19, #16]
  41044c:	ldr	x23, [sp, #16]
  410450:	and	w8, w8, #0xfffffffd
  410454:	strb	w8, [x19, #80]
  410458:	ldp	x20, x19, [sp, #48]
  41045c:	ldp	x22, x21, [sp, #32]
  410460:	ldp	x29, x30, [sp], #64
  410464:	ret
  410468:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  41046c:	ldr	x8, [x8, #1328]
  410470:	blr	x8

0000000000410474 <_obstack_allocated_p@@Base>:
  410474:	ldr	x8, [x0, #8]
  410478:	cbz	x8, 410498 <_obstack_allocated_p@@Base+0x24>
  41047c:	cmp	x8, x1
  410480:	b.cs	410490 <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  410484:	ldr	x9, [x8]
  410488:	cmp	x9, x1
  41048c:	b.cs	4104a0 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  410490:	ldr	x8, [x8, #8]
  410494:	cbnz	x8, 41047c <_obstack_allocated_p@@Base+0x8>
  410498:	mov	w0, wzr
  41049c:	ret
  4104a0:	mov	w0, #0x1                   	// #1
  4104a4:	ret

00000000004104a8 <_obstack_free@@Base>:
  4104a8:	stp	x29, x30, [sp, #-48]!
  4104ac:	stp	x20, x19, [sp, #32]
  4104b0:	ldr	x8, [x0, #8]
  4104b4:	mov	x20, x1
  4104b8:	str	x21, [sp, #16]
  4104bc:	mov	x29, sp
  4104c0:	cbz	x8, 410518 <_obstack_free@@Base+0x70>
  4104c4:	mov	x19, x0
  4104c8:	cmp	x8, x20
  4104cc:	b.cs	4104dc <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  4104d0:	ldr	x9, [x8]
  4104d4:	cmp	x9, x20
  4104d8:	b.cs	410520 <_obstack_free@@Base+0x78>  // b.hs, b.nlast
  4104dc:	ldrb	w9, [x19, #80]
  4104e0:	ldr	x21, [x8, #8]
  4104e4:	tbnz	w9, #0, 4104f8 <_obstack_free@@Base+0x50>
  4104e8:	ldr	x9, [x19, #64]
  4104ec:	mov	x0, x8
  4104f0:	blr	x9
  4104f4:	b	410504 <_obstack_free@@Base+0x5c>
  4104f8:	ldp	x9, x0, [x19, #64]
  4104fc:	mov	x1, x8
  410500:	blr	x9
  410504:	ldrb	w8, [x19, #80]
  410508:	orr	w8, w8, #0x2
  41050c:	strb	w8, [x19, #80]
  410510:	mov	x8, x21
  410514:	cbnz	x21, 4104c8 <_obstack_free@@Base+0x20>
  410518:	cbz	x20, 410530 <_obstack_free@@Base+0x88>
  41051c:	bl	402c20 <abort@plt>
  410520:	stp	x20, x20, [x19, #16]
  410524:	ldr	x9, [x8]
  410528:	str	x8, [x19, #8]
  41052c:	str	x9, [x19, #32]
  410530:	ldp	x20, x19, [sp, #32]
  410534:	ldr	x21, [sp, #16]
  410538:	ldp	x29, x30, [sp], #48
  41053c:	ret

0000000000410540 <_obstack_memory_used@@Base>:
  410540:	ldr	x8, [x0, #8]
  410544:	cbz	x8, 410560 <_obstack_memory_used@@Base+0x20>
  410548:	mov	x0, xzr
  41054c:	sub	x10, x0, x8
  410550:	ldp	x9, x8, [x8]
  410554:	add	x0, x10, x9
  410558:	cbnz	x8, 41054c <_obstack_memory_used@@Base+0xc>
  41055c:	ret
  410560:	mov	x0, xzr
  410564:	ret
  410568:	stp	x29, x30, [sp, #-32]!
  41056c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  410570:	str	x19, [sp, #16]
  410574:	ldr	x19, [x8, #1344]
  410578:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2ac0>
  41057c:	add	x1, x1, #0x933
  410580:	mov	w2, #0x5                   	// #5
  410584:	mov	x0, xzr
  410588:	mov	x29, sp
  41058c:	bl	402eb0 <dcgettext@plt>
  410590:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2ac0>
  410594:	mov	x3, x0
  410598:	add	x2, x2, #0x62e
  41059c:	mov	w1, #0x1                   	// #1
  4105a0:	mov	x0, x19
  4105a4:	bl	402cc0 <__fprintf_chk@plt>
  4105a8:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4105ac:	ldr	w0, [x8, #1232]
  4105b0:	bl	4028e0 <exit@plt>
  4105b4:	sub	w9, w0, #0x41
  4105b8:	mov	w8, w0
  4105bc:	cmp	w9, #0x39
  4105c0:	mov	w0, #0x1                   	// #1
  4105c4:	b.hi	4105dc <_obstack_memory_used@@Base+0x9c>  // b.pmore
  4105c8:	mov	w10, #0x1                   	// #1
  4105cc:	lsl	x9, x10, x9
  4105d0:	tst	x9, #0x3ffffff03ffffff
  4105d4:	b.eq	4105dc <_obstack_memory_used@@Base+0x9c>  // b.none
  4105d8:	ret
  4105dc:	sub	w8, w8, #0x30
  4105e0:	cmp	w8, #0xa
  4105e4:	b.cc	4105d8 <_obstack_memory_used@@Base+0x98>  // b.lo, b.ul, b.last
  4105e8:	mov	w0, wzr
  4105ec:	ret
  4105f0:	sub	w8, w0, #0x41
  4105f4:	cmp	w8, #0x39
  4105f8:	b.hi	41060c <_obstack_memory_used@@Base+0xcc>  // b.pmore
  4105fc:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  410600:	lsr	x8, x9, x8
  410604:	and	w0, w8, #0x1
  410608:	ret
  41060c:	mov	w0, wzr
  410610:	ret
  410614:	cmp	w0, #0x80
  410618:	cset	w0, cc  // cc = lo, ul, last
  41061c:	ret
  410620:	cmp	w0, #0x20
  410624:	cset	w8, eq  // eq = none
  410628:	cmp	w0, #0x9
  41062c:	cset	w9, eq  // eq = none
  410630:	orr	w0, w8, w9
  410634:	ret
  410638:	mov	w8, w0
  41063c:	cmp	w0, #0x20
  410640:	mov	w0, #0x1                   	// #1
  410644:	b.cs	41064c <_obstack_memory_used@@Base+0x10c>  // b.hs, b.nlast
  410648:	ret
  41064c:	cmp	w8, #0x7f
  410650:	b.eq	410648 <_obstack_memory_used@@Base+0x108>  // b.none
  410654:	mov	w0, wzr
  410658:	ret
  41065c:	sub	w8, w0, #0x30
  410660:	cmp	w8, #0xa
  410664:	cset	w0, cc  // cc = lo, ul, last
  410668:	ret
  41066c:	sub	w8, w0, #0x21
  410670:	cmp	w8, #0x5e
  410674:	cset	w0, cc  // cc = lo, ul, last
  410678:	ret
  41067c:	sub	w8, w0, #0x61
  410680:	cmp	w8, #0x1a
  410684:	cset	w0, cc  // cc = lo, ul, last
  410688:	ret
  41068c:	sub	w8, w0, #0x20
  410690:	cmp	w8, #0x5f
  410694:	cset	w0, cc  // cc = lo, ul, last
  410698:	ret
  41069c:	sub	w9, w0, #0x21
  4106a0:	mov	w8, w0
  4106a4:	cmp	w9, #0x3f
  4106a8:	mov	w0, #0x1                   	// #1
  4106ac:	b.hi	4106cc <_obstack_memory_used@@Base+0x18c>  // b.pmore
  4106b0:	mov	w10, #0x1                   	// #1
  4106b4:	lsl	x9, x10, x9
  4106b8:	mov	x10, #0xfc00000000007fff    	// #-288230376151678977
  4106bc:	movk	x10, #0xfe00, lsl #16
  4106c0:	tst	x9, x10
  4106c4:	b.eq	4106cc <_obstack_memory_used@@Base+0x18c>  // b.none
  4106c8:	ret
  4106cc:	sub	w8, w8, #0x7b
  4106d0:	cmp	w8, #0x4
  4106d4:	b.cc	4106c8 <_obstack_memory_used@@Base+0x188>  // b.lo, b.ul, b.last
  4106d8:	mov	w0, wzr
  4106dc:	ret
  4106e0:	sub	w8, w0, #0x9
  4106e4:	cmp	w8, #0x17
  4106e8:	b.hi	410700 <_obstack_memory_used@@Base+0x1c0>  // b.pmore
  4106ec:	mov	w9, #0x1f                  	// #31
  4106f0:	movk	w9, #0x80, lsl #16
  4106f4:	lsr	w8, w9, w8
  4106f8:	and	w0, w8, #0x1
  4106fc:	ret
  410700:	mov	w0, wzr
  410704:	ret
  410708:	sub	w8, w0, #0x41
  41070c:	cmp	w8, #0x1a
  410710:	cset	w0, cc  // cc = lo, ul, last
  410714:	ret
  410718:	sub	w8, w0, #0x30
  41071c:	cmp	w8, #0x36
  410720:	b.hi	410738 <_obstack_memory_used@@Base+0x1f8>  // b.pmore
  410724:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  410728:	movk	x9, #0x3ff
  41072c:	lsr	x8, x9, x8
  410730:	and	w0, w8, #0x1
  410734:	ret
  410738:	mov	w0, wzr
  41073c:	ret
  410740:	sub	w8, w0, #0x41
  410744:	add	w9, w0, #0x20
  410748:	cmp	w8, #0x1a
  41074c:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  410750:	ret
  410754:	sub	w8, w0, #0x61
  410758:	sub	w9, w0, #0x20
  41075c:	cmp	w8, #0x1a
  410760:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  410764:	ret
  410768:	stp	x29, x30, [sp, #-48]!
  41076c:	str	x21, [sp, #16]
  410770:	stp	x20, x19, [sp, #32]
  410774:	mov	x29, sp
  410778:	mov	x20, x0
  41077c:	bl	4029c0 <__fpending@plt>
  410780:	mov	x19, x0
  410784:	mov	x0, x20
  410788:	bl	402920 <ferror_unlocked@plt>
  41078c:	mov	w21, w0
  410790:	mov	x0, x20
  410794:	bl	40fce0 <ferror@plt+0xcd10>
  410798:	mov	w8, w0
  41079c:	cbz	w21, 4107b4 <_obstack_memory_used@@Base+0x274>
  4107a0:	cbnz	w8, 4107ac <_obstack_memory_used@@Base+0x26c>
  4107a4:	bl	402f40 <__errno_location@plt>
  4107a8:	str	wzr, [x0]
  4107ac:	mov	w0, #0xffffffff            	// #-1
  4107b0:	b	4107d4 <_obstack_memory_used@@Base+0x294>
  4107b4:	cmp	w8, #0x0
  4107b8:	csetm	w0, ne  // ne = any
  4107bc:	cbnz	x19, 4107d4 <_obstack_memory_used@@Base+0x294>
  4107c0:	cbz	w8, 4107d4 <_obstack_memory_used@@Base+0x294>
  4107c4:	bl	402f40 <__errno_location@plt>
  4107c8:	ldr	w8, [x0]
  4107cc:	cmp	w8, #0x9
  4107d0:	csetm	w0, ne  // ne = any
  4107d4:	ldp	x20, x19, [sp, #32]
  4107d8:	ldr	x21, [sp, #16]
  4107dc:	ldp	x29, x30, [sp], #48
  4107e0:	ret
  4107e4:	mov	x8, #0xc3e0000000000000    	// #-4332462841530417152
  4107e8:	fmov	d1, x8
  4107ec:	fcmp	d0, d1
  4107f0:	b.le	410858 <_obstack_memory_used@@Base+0x318>
  4107f4:	mov	x8, #0x43e0000000000000    	// #4890909195324358656
  4107f8:	fmov	d1, x8
  4107fc:	mov	w8, #0xca00                	// #51712
  410800:	fcmp	d0, d1
  410804:	movk	w8, #0x3b9a, lsl #16
  410808:	b.pl	410864 <_obstack_memory_used@@Base+0x324>  // b.nfrst
  41080c:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x2ac0>
  410810:	ldr	d1, [x9, #2880]
  410814:	fcvtzs	x9, d0
  410818:	scvtf	d2, x9
  41081c:	fsub	d0, d0, d2
  410820:	fmul	d0, d0, d1
  410824:	fcvtzs	x10, d0
  410828:	scvtf	d1, x10
  41082c:	fcmp	d0, d1
  410830:	cset	w11, gt
  410834:	add	x10, x11, x10
  410838:	sdiv	x11, x10, x8
  41083c:	msub	x10, x11, x8, x10
  410840:	add	x9, x11, x9
  410844:	add	x8, x10, x8
  410848:	cmp	x10, #0x0
  41084c:	add	x0, x9, x10, asr #63
  410850:	csel	x1, x8, x10, lt  // lt = tstop
  410854:	ret
  410858:	mov	x1, xzr
  41085c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  410860:	ret
  410864:	sub	x1, x8, #0x1
  410868:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  41086c:	ret
  410870:	stp	x29, x30, [sp, #-48]!
  410874:	stp	x20, x19, [sp, #32]
  410878:	mov	w19, w0
  41087c:	cmp	w0, #0x2
  410880:	stp	x22, x21, [sp, #16]
  410884:	mov	x29, sp
  410888:	b.hi	4108b8 <_obstack_memory_used@@Base+0x378>  // b.pmore
  41088c:	mov	w0, w19
  410890:	bl	4108cc <_obstack_memory_used@@Base+0x38c>
  410894:	mov	w20, w0
  410898:	bl	402f40 <__errno_location@plt>
  41089c:	ldr	w22, [x0]
  4108a0:	mov	x21, x0
  4108a4:	mov	w0, w19
  4108a8:	bl	402ba0 <close@plt>
  4108ac:	str	w22, [x21]
  4108b0:	mov	w0, w20
  4108b4:	b	4108bc <_obstack_memory_used@@Base+0x37c>
  4108b8:	mov	w0, w19
  4108bc:	ldp	x20, x19, [sp, #32]
  4108c0:	ldp	x22, x21, [sp, #16]
  4108c4:	ldp	x29, x30, [sp], #48
  4108c8:	ret
  4108cc:	lsl	w8, w1, #12
  4108d0:	mov	w9, #0x406                 	// #1030
  4108d4:	and	w1, w9, w8, asr #31
  4108d8:	mov	w2, #0x3                   	// #3
  4108dc:	b	40fd74 <ferror@plt+0xcda4>
  4108e0:	stp	x29, x30, [sp, #-48]!
  4108e4:	stp	x22, x21, [sp, #16]
  4108e8:	stp	x20, x19, [sp, #32]
  4108ec:	mov	x29, sp
  4108f0:	mov	x20, x1
  4108f4:	bl	402a50 <fopen@plt>
  4108f8:	mov	x19, x0
  4108fc:	cbz	x0, 410978 <_obstack_memory_used@@Base+0x438>
  410900:	mov	x0, x19
  410904:	bl	4029f0 <fileno@plt>
  410908:	cmp	w0, #0x2
  41090c:	b.hi	410978 <_obstack_memory_used@@Base+0x438>  // b.pmore
  410910:	bl	410b64 <_obstack_memory_used@@Base+0x624>
  410914:	tbnz	w0, #31, 41095c <_obstack_memory_used@@Base+0x41c>
  410918:	mov	w21, w0
  41091c:	mov	x0, x19
  410920:	bl	40fce0 <ferror@plt+0xcd10>
  410924:	cbnz	w0, 41093c <_obstack_memory_used@@Base+0x3fc>
  410928:	mov	w0, w21
  41092c:	mov	x1, x20
  410930:	bl	402b30 <fdopen@plt>
  410934:	mov	x19, x0
  410938:	cbnz	x0, 410978 <_obstack_memory_used@@Base+0x438>
  41093c:	bl	402f40 <__errno_location@plt>
  410940:	ldr	w22, [x0]
  410944:	mov	x20, x0
  410948:	mov	w0, w21
  41094c:	bl	402ba0 <close@plt>
  410950:	mov	x19, xzr
  410954:	str	w22, [x20]
  410958:	b	410978 <_obstack_memory_used@@Base+0x438>
  41095c:	bl	402f40 <__errno_location@plt>
  410960:	ldr	w21, [x0]
  410964:	mov	x20, x0
  410968:	mov	x0, x19
  41096c:	bl	40fce0 <ferror@plt+0xcd10>
  410970:	mov	x19, xzr
  410974:	str	w21, [x20]
  410978:	mov	x0, x19
  41097c:	ldp	x20, x19, [sp, #32]
  410980:	ldp	x22, x21, [sp, #16]
  410984:	ldp	x29, x30, [sp], #48
  410988:	ret
  41098c:	stp	x29, x30, [sp, #-16]!
  410990:	mov	w0, #0xe                   	// #14
  410994:	mov	x29, sp
  410998:	bl	402a40 <nl_langinfo@plt>
  41099c:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4109a0:	add	x8, x8, #0x708
  4109a4:	cmp	x0, #0x0
  4109a8:	csel	x8, x8, x0, eq  // eq = none
  4109ac:	ldrb	w9, [x8]
  4109b0:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x2ac0>
  4109b4:	add	x10, x10, #0xb48
  4109b8:	cmp	w9, #0x0
  4109bc:	csel	x0, x10, x8, eq  // eq = none
  4109c0:	ldp	x29, x30, [sp], #16
  4109c4:	ret
  4109c8:	stp	x29, x30, [sp, #-64]!
  4109cc:	stp	x22, x21, [sp, #32]
  4109d0:	stp	x20, x19, [sp, #48]
  4109d4:	mov	x19, x3
  4109d8:	mov	x20, x2
  4109dc:	mov	x21, x1
  4109e0:	cmp	x1, x3
  4109e4:	mov	x22, x0
  4109e8:	stp	x24, x23, [sp, #16]
  4109ec:	mov	x29, sp
  4109f0:	b.ne	410a08 <_obstack_memory_used@@Base+0x4c8>  // b.any
  4109f4:	mov	x0, x22
  4109f8:	mov	x1, x20
  4109fc:	mov	x2, x21
  410a00:	bl	402b70 <bcmp@plt>
  410a04:	cbz	w0, 410a38 <_obstack_memory_used@@Base+0x4f8>
  410a08:	ldrb	w23, [x22, x21]
  410a0c:	ldrb	w24, [x20, x19]
  410a10:	add	x1, x21, #0x1
  410a14:	add	x3, x19, #0x1
  410a18:	mov	x0, x22
  410a1c:	mov	x2, x20
  410a20:	strb	wzr, [x22, x21]
  410a24:	strb	wzr, [x20, x19]
  410a28:	bl	410a58 <_obstack_memory_used@@Base+0x518>
  410a2c:	strb	w23, [x22, x21]
  410a30:	strb	w24, [x20, x19]
  410a34:	b	410a44 <_obstack_memory_used@@Base+0x504>
  410a38:	bl	402f40 <__errno_location@plt>
  410a3c:	str	wzr, [x0]
  410a40:	mov	w0, wzr
  410a44:	ldp	x20, x19, [sp, #48]
  410a48:	ldp	x22, x21, [sp, #32]
  410a4c:	ldp	x24, x23, [sp, #16]
  410a50:	ldp	x29, x30, [sp], #64
  410a54:	ret
  410a58:	stp	x29, x30, [sp, #-64]!
  410a5c:	stp	x24, x23, [sp, #16]
  410a60:	stp	x22, x21, [sp, #32]
  410a64:	stp	x20, x19, [sp, #48]
  410a68:	mov	x29, sp
  410a6c:	mov	x19, x3
  410a70:	mov	x20, x2
  410a74:	mov	x21, x1
  410a78:	mov	x22, x0
  410a7c:	bl	402f40 <__errno_location@plt>
  410a80:	mov	x23, x0
  410a84:	mov	x0, x22
  410a88:	mov	x1, x20
  410a8c:	str	wzr, [x23]
  410a90:	bl	402ed0 <strcoll@plt>
  410a94:	cbnz	w0, 410ad8 <_obstack_memory_used@@Base+0x598>
  410a98:	mov	x0, x22
  410a9c:	bl	4028c0 <strlen@plt>
  410aa0:	add	x24, x0, #0x1
  410aa4:	mov	x0, x20
  410aa8:	bl	4028c0 <strlen@plt>
  410aac:	add	x8, x0, #0x1
  410ab0:	sub	x21, x21, x24
  410ab4:	sub	x19, x19, x8
  410ab8:	cbz	x21, 410ad0 <_obstack_memory_used@@Base+0x590>
  410abc:	add	x20, x20, x8
  410ac0:	add	x22, x22, x24
  410ac4:	cbnz	x19, 410a84 <_obstack_memory_used@@Base+0x544>
  410ac8:	mov	w0, #0x1                   	// #1
  410acc:	b	410ad8 <_obstack_memory_used@@Base+0x598>
  410ad0:	cmp	x19, #0x0
  410ad4:	csetm	w0, ne  // ne = any
  410ad8:	ldp	x20, x19, [sp, #48]
  410adc:	ldp	x22, x21, [sp, #32]
  410ae0:	ldp	x24, x23, [sp, #16]
  410ae4:	ldp	x29, x30, [sp], #64
  410ae8:	ret
  410aec:	stp	x29, x30, [sp, #-48]!
  410af0:	stp	x22, x21, [sp, #16]
  410af4:	stp	x20, x19, [sp, #32]
  410af8:	mov	x19, x3
  410afc:	mov	x20, x2
  410b00:	mov	x21, x1
  410b04:	cmp	x1, x3
  410b08:	mov	x22, x0
  410b0c:	mov	x29, sp
  410b10:	b.ne	410b28 <_obstack_memory_used@@Base+0x5e8>  // b.any
  410b14:	mov	x0, x22
  410b18:	mov	x1, x20
  410b1c:	mov	x2, x21
  410b20:	bl	402b70 <bcmp@plt>
  410b24:	cbz	w0, 410b48 <_obstack_memory_used@@Base+0x608>
  410b28:	mov	x0, x22
  410b2c:	mov	x1, x21
  410b30:	mov	x2, x20
  410b34:	mov	x3, x19
  410b38:	ldp	x20, x19, [sp, #32]
  410b3c:	ldp	x22, x21, [sp, #16]
  410b40:	ldp	x29, x30, [sp], #48
  410b44:	b	410a58 <_obstack_memory_used@@Base+0x518>
  410b48:	bl	402f40 <__errno_location@plt>
  410b4c:	str	wzr, [x0]
  410b50:	ldp	x20, x19, [sp, #32]
  410b54:	ldp	x22, x21, [sp, #16]
  410b58:	mov	w0, wzr
  410b5c:	ldp	x29, x30, [sp], #48
  410b60:	ret
  410b64:	mov	w2, #0x3                   	// #3
  410b68:	mov	w1, wzr
  410b6c:	b	40fd74 <ferror@plt+0xcda4>
  410b70:	stp	x29, x30, [sp, #-48]!
  410b74:	mov	x29, sp
  410b78:	str	q0, [sp, #16]
  410b7c:	str	q1, [sp, #32]
  410b80:	ldp	x6, x1, [sp, #16]
  410b84:	ldp	x7, x0, [sp, #32]
  410b88:	mrs	x2, fpcr
  410b8c:	ubfx	x4, x1, #48, #15
  410b90:	lsr	x2, x1, #63
  410b94:	lsr	x3, x0, #63
  410b98:	ubfx	x9, x0, #0, #48
  410b9c:	mov	x5, #0x7fff                	// #32767
  410ba0:	mov	x10, x6
  410ba4:	cmp	x4, x5
  410ba8:	and	w2, w2, #0xff
  410bac:	ubfx	x1, x1, #0, #48
  410bb0:	and	w3, w3, #0xff
  410bb4:	ubfx	x0, x0, #48, #15
  410bb8:	b.eq	410bec <_obstack_memory_used@@Base+0x6ac>  // b.none
  410bbc:	cmp	x0, x5
  410bc0:	b.eq	410bd8 <_obstack_memory_used@@Base+0x698>  // b.none
  410bc4:	cmp	x4, x0
  410bc8:	mov	w0, #0x1                   	// #1
  410bcc:	b.eq	410c04 <_obstack_memory_used@@Base+0x6c4>  // b.none
  410bd0:	ldp	x29, x30, [sp], #48
  410bd4:	ret
  410bd8:	orr	x8, x9, x7
  410bdc:	cbnz	x8, 410c68 <_obstack_memory_used@@Base+0x728>
  410be0:	mov	w0, #0x1                   	// #1
  410be4:	ldp	x29, x30, [sp], #48
  410be8:	ret
  410bec:	orr	x5, x1, x6
  410bf0:	cbnz	x5, 410c38 <_obstack_memory_used@@Base+0x6f8>
  410bf4:	cmp	x0, x4
  410bf8:	b.ne	410be0 <_obstack_memory_used@@Base+0x6a0>  // b.any
  410bfc:	orr	x8, x9, x7
  410c00:	cbnz	x8, 410c68 <_obstack_memory_used@@Base+0x728>
  410c04:	cmp	x1, x9
  410c08:	mov	w0, #0x1                   	// #1
  410c0c:	ccmp	x6, x7, #0x0, eq  // eq = none
  410c10:	b.ne	410bd0 <_obstack_memory_used@@Base+0x690>  // b.any
  410c14:	cmp	w2, w3
  410c18:	mov	w0, #0x0                   	// #0
  410c1c:	b.eq	410bd0 <_obstack_memory_used@@Base+0x690>  // b.none
  410c20:	mov	w0, #0x1                   	// #1
  410c24:	cbnz	x4, 410bd0 <_obstack_memory_used@@Base+0x690>
  410c28:	orr	x1, x1, x10
  410c2c:	cmp	x1, #0x0
  410c30:	cset	w0, ne  // ne = any
  410c34:	b	410bd0 <_obstack_memory_used@@Base+0x690>
  410c38:	tst	x1, #0x800000000000
  410c3c:	b.ne	410c54 <_obstack_memory_used@@Base+0x714>  // b.any
  410c40:	mov	w0, #0x1                   	// #1
  410c44:	bl	410fd0 <_obstack_memory_used@@Base+0xa90>
  410c48:	mov	w0, #0x1                   	// #1
  410c4c:	ldp	x29, x30, [sp], #48
  410c50:	ret
  410c54:	cmp	x0, x4
  410c58:	mov	w0, #0x1                   	// #1
  410c5c:	b.ne	410bd0 <_obstack_memory_used@@Base+0x690>  // b.any
  410c60:	orr	x8, x9, x7
  410c64:	cbz	x8, 410bd0 <_obstack_memory_used@@Base+0x690>
  410c68:	tst	x9, #0x800000000000
  410c6c:	b.eq	410c40 <_obstack_memory_used@@Base+0x700>  // b.none
  410c70:	b	410be0 <_obstack_memory_used@@Base+0x6a0>
  410c74:	nop
  410c78:	stp	x29, x30, [sp, #-48]!
  410c7c:	mov	x29, sp
  410c80:	str	q0, [sp, #16]
  410c84:	str	q1, [sp, #32]
  410c88:	ldp	x8, x1, [sp, #16]
  410c8c:	ldp	x9, x0, [sp, #32]
  410c90:	mrs	x2, fpcr
  410c94:	ubfx	x4, x1, #48, #15
  410c98:	ubfx	x10, x1, #0, #48
  410c9c:	lsr	x2, x1, #63
  410ca0:	mov	x7, #0x7fff                	// #32767
  410ca4:	mov	x5, x8
  410ca8:	cmp	x4, x7
  410cac:	ubfx	x11, x0, #0, #48
  410cb0:	ubfx	x6, x0, #48, #15
  410cb4:	lsr	x1, x0, #63
  410cb8:	mov	x3, x9
  410cbc:	b.eq	410cf8 <_obstack_memory_used@@Base+0x7b8>  // b.none
  410cc0:	cmp	x6, x7
  410cc4:	b.eq	410d08 <_obstack_memory_used@@Base+0x7c8>  // b.none
  410cc8:	cbnz	x4, 410d30 <_obstack_memory_used@@Base+0x7f0>
  410ccc:	orr	x5, x10, x8
  410cd0:	cmp	x5, #0x0
  410cd4:	cset	w0, eq  // eq = none
  410cd8:	cbnz	x6, 410ce4 <_obstack_memory_used@@Base+0x7a4>
  410cdc:	orr	x3, x11, x9
  410ce0:	cbz	x3, 410d50 <_obstack_memory_used@@Base+0x810>
  410ce4:	cbz	w0, 410d14 <_obstack_memory_used@@Base+0x7d4>
  410ce8:	cmp	x1, #0x0
  410cec:	csinv	w0, w0, wzr, ne  // ne = any
  410cf0:	ldp	x29, x30, [sp], #48
  410cf4:	ret
  410cf8:	orr	x0, x10, x8
  410cfc:	cbnz	x0, 410d5c <_obstack_memory_used@@Base+0x81c>
  410d00:	cmp	x6, x4
  410d04:	b.ne	410d30 <_obstack_memory_used@@Base+0x7f0>  // b.any
  410d08:	orr	x3, x11, x3
  410d0c:	cbnz	x3, 410d5c <_obstack_memory_used@@Base+0x81c>
  410d10:	cbz	x4, 410d40 <_obstack_memory_used@@Base+0x800>
  410d14:	cmp	x2, x1
  410d18:	b.eq	410d70 <_obstack_memory_used@@Base+0x830>  // b.none
  410d1c:	cmp	x2, #0x0
  410d20:	mov	w0, #0xffffffff            	// #-1
  410d24:	cneg	w0, w0, eq  // eq = none
  410d28:	ldp	x29, x30, [sp], #48
  410d2c:	ret
  410d30:	cbnz	x6, 410d14 <_obstack_memory_used@@Base+0x7d4>
  410d34:	orr	x3, x11, x3
  410d38:	cbnz	x3, 410d14 <_obstack_memory_used@@Base+0x7d4>
  410d3c:	b	410d1c <_obstack_memory_used@@Base+0x7dc>
  410d40:	orr	x5, x10, x5
  410d44:	cmp	x5, #0x0
  410d48:	cset	w0, eq  // eq = none
  410d4c:	b	410ce4 <_obstack_memory_used@@Base+0x7a4>
  410d50:	mov	w0, #0x0                   	// #0
  410d54:	cbz	x5, 410cf0 <_obstack_memory_used@@Base+0x7b0>
  410d58:	b	410d1c <_obstack_memory_used@@Base+0x7dc>
  410d5c:	mov	w0, #0x1                   	// #1
  410d60:	bl	410fd0 <_obstack_memory_used@@Base+0xa90>
  410d64:	mov	w0, #0xfffffffe            	// #-2
  410d68:	ldp	x29, x30, [sp], #48
  410d6c:	ret
  410d70:	cmp	x4, x6
  410d74:	b.gt	410d1c <_obstack_memory_used@@Base+0x7dc>
  410d78:	b.lt	410db0 <_obstack_memory_used@@Base+0x870>  // b.tstop
  410d7c:	cmp	x10, x11
  410d80:	b.hi	410d1c <_obstack_memory_used@@Base+0x7dc>  // b.pmore
  410d84:	cset	w0, eq  // eq = none
  410d88:	cmp	w0, #0x0
  410d8c:	ccmp	x8, x9, #0x0, ne  // ne = any
  410d90:	b.hi	410d1c <_obstack_memory_used@@Base+0x7dc>  // b.pmore
  410d94:	cmp	x10, x11
  410d98:	b.cc	410db0 <_obstack_memory_used@@Base+0x870>  // b.lo, b.ul, b.last
  410d9c:	cmp	w0, #0x0
  410da0:	mov	w0, #0x0                   	// #0
  410da4:	ccmp	x8, x9, #0x2, ne  // ne = any
  410da8:	b.cs	410cf0 <_obstack_memory_used@@Base+0x7b0>  // b.hs, b.nlast
  410dac:	nop
  410db0:	cmp	x2, #0x0
  410db4:	mov	w0, #0x1                   	// #1
  410db8:	cneg	w0, w0, eq  // eq = none
  410dbc:	b	410cf0 <_obstack_memory_used@@Base+0x7b0>
  410dc0:	stp	x29, x30, [sp, #-48]!
  410dc4:	mov	x29, sp
  410dc8:	str	q0, [sp, #16]
  410dcc:	str	q1, [sp, #32]
  410dd0:	ldp	x8, x1, [sp, #16]
  410dd4:	ldp	x9, x0, [sp, #32]
  410dd8:	mrs	x2, fpcr
  410ddc:	ubfx	x4, x1, #48, #15
  410de0:	ubfx	x10, x1, #0, #48
  410de4:	lsr	x2, x1, #63
  410de8:	mov	x5, #0x7fff                	// #32767
  410dec:	mov	x6, x8
  410df0:	cmp	x4, x5
  410df4:	ubfx	x11, x0, #0, #48
  410df8:	ubfx	x7, x0, #48, #15
  410dfc:	lsr	x1, x0, #63
  410e00:	mov	x3, x9
  410e04:	b.eq	410e3c <_obstack_memory_used@@Base+0x8fc>  // b.none
  410e08:	cmp	x7, x5
  410e0c:	b.eq	410e4c <_obstack_memory_used@@Base+0x90c>  // b.none
  410e10:	cbnz	x4, 410e78 <_obstack_memory_used@@Base+0x938>
  410e14:	orr	x6, x10, x8
  410e18:	cmp	x6, #0x0
  410e1c:	cset	w0, eq  // eq = none
  410e20:	cbnz	x7, 410e64 <_obstack_memory_used@@Base+0x924>
  410e24:	orr	x3, x11, x9
  410e28:	cbnz	x3, 410e64 <_obstack_memory_used@@Base+0x924>
  410e2c:	mov	w0, #0x0                   	// #0
  410e30:	cbnz	x6, 410e8c <_obstack_memory_used@@Base+0x94c>
  410e34:	ldp	x29, x30, [sp], #48
  410e38:	ret
  410e3c:	orr	x0, x10, x8
  410e40:	cbnz	x0, 410ea0 <_obstack_memory_used@@Base+0x960>
  410e44:	cmp	x7, x4
  410e48:	b.ne	410e78 <_obstack_memory_used@@Base+0x938>  // b.any
  410e4c:	orr	x3, x11, x3
  410e50:	cbnz	x3, 410ea0 <_obstack_memory_used@@Base+0x960>
  410e54:	cbnz	x4, 410e84 <_obstack_memory_used@@Base+0x944>
  410e58:	orr	x6, x10, x6
  410e5c:	cmp	x6, #0x0
  410e60:	cset	w0, eq  // eq = none
  410e64:	cbz	w0, 410e84 <_obstack_memory_used@@Base+0x944>
  410e68:	cmp	x1, #0x0
  410e6c:	csinv	w0, w0, wzr, ne  // ne = any
  410e70:	ldp	x29, x30, [sp], #48
  410e74:	ret
  410e78:	cbnz	x7, 410e84 <_obstack_memory_used@@Base+0x944>
  410e7c:	orr	x3, x11, x3
  410e80:	cbz	x3, 410e8c <_obstack_memory_used@@Base+0x94c>
  410e84:	cmp	x2, x1
  410e88:	b.eq	410eb4 <_obstack_memory_used@@Base+0x974>  // b.none
  410e8c:	cmp	x2, #0x0
  410e90:	mov	w0, #0xffffffff            	// #-1
  410e94:	cneg	w0, w0, eq  // eq = none
  410e98:	ldp	x29, x30, [sp], #48
  410e9c:	ret
  410ea0:	mov	w0, #0x1                   	// #1
  410ea4:	bl	410fd0 <_obstack_memory_used@@Base+0xa90>
  410ea8:	mov	w0, #0x2                   	// #2
  410eac:	ldp	x29, x30, [sp], #48
  410eb0:	ret
  410eb4:	cmp	x4, x7
  410eb8:	b.gt	410e8c <_obstack_memory_used@@Base+0x94c>
  410ebc:	b.lt	410ef0 <_obstack_memory_used@@Base+0x9b0>  // b.tstop
  410ec0:	cmp	x10, x11
  410ec4:	b.hi	410e8c <_obstack_memory_used@@Base+0x94c>  // b.pmore
  410ec8:	cset	w0, eq  // eq = none
  410ecc:	cmp	w0, #0x0
  410ed0:	ccmp	x8, x9, #0x0, ne  // ne = any
  410ed4:	b.hi	410e8c <_obstack_memory_used@@Base+0x94c>  // b.pmore
  410ed8:	cmp	x10, x11
  410edc:	b.cc	410ef0 <_obstack_memory_used@@Base+0x9b0>  // b.lo, b.ul, b.last
  410ee0:	cmp	w0, #0x0
  410ee4:	mov	w0, #0x0                   	// #0
  410ee8:	ccmp	x8, x9, #0x2, ne  // ne = any
  410eec:	b.cs	410e34 <_obstack_memory_used@@Base+0x8f4>  // b.hs, b.nlast
  410ef0:	cmp	x2, #0x0
  410ef4:	mov	w0, #0x1                   	// #1
  410ef8:	cneg	w0, w0, eq  // eq = none
  410efc:	b	410e34 <_obstack_memory_used@@Base+0x8f4>
  410f00:	stp	x29, x30, [sp, #-48]!
  410f04:	mov	x29, sp
  410f08:	str	q0, [sp, #16]
  410f0c:	str	q1, [sp, #32]
  410f10:	ldp	x3, x1, [sp, #16]
  410f14:	ldp	x2, x0, [sp, #32]
  410f18:	mrs	x4, fpcr
  410f1c:	ubfx	x5, x1, #48, #15
  410f20:	mov	x4, x3
  410f24:	mov	x3, x2
  410f28:	ubfx	x2, x1, #0, #48
  410f2c:	mov	x1, #0x7fff                	// #32767
  410f30:	ubfx	x7, x0, #0, #48
  410f34:	cmp	x5, x1
  410f38:	ubfx	x1, x0, #48, #15
  410f3c:	b.eq	410f58 <_obstack_memory_used@@Base+0xa18>  // b.none
  410f40:	mov	x6, #0x7fff                	// #32767
  410f44:	mov	w0, #0x0                   	// #0
  410f48:	cmp	x1, x6
  410f4c:	b.eq	410f7c <_obstack_memory_used@@Base+0xa3c>  // b.none
  410f50:	ldp	x29, x30, [sp], #48
  410f54:	ret
  410f58:	orr	x0, x4, x2
  410f5c:	cbz	x0, 410f40 <_obstack_memory_used@@Base+0xa00>
  410f60:	tst	x2, #0x800000000000
  410f64:	b.ne	410f9c <_obstack_memory_used@@Base+0xa5c>  // b.any
  410f68:	mov	w0, #0x1                   	// #1
  410f6c:	bl	410fd0 <_obstack_memory_used@@Base+0xa90>
  410f70:	mov	w0, #0x1                   	// #1
  410f74:	ldp	x29, x30, [sp], #48
  410f78:	ret
  410f7c:	orr	x3, x7, x3
  410f80:	cbz	x3, 410f50 <_obstack_memory_used@@Base+0xa10>
  410f84:	cmp	x5, x1
  410f88:	b.eq	410fb0 <_obstack_memory_used@@Base+0xa70>  // b.none
  410f8c:	tst	x7, #0x800000000000
  410f90:	mov	w0, #0x1                   	// #1
  410f94:	b.ne	410f50 <_obstack_memory_used@@Base+0xa10>  // b.any
  410f98:	b	410f68 <_obstack_memory_used@@Base+0xa28>
  410f9c:	cmp	x1, x5
  410fa0:	mov	w0, #0x1                   	// #1
  410fa4:	b.ne	410f50 <_obstack_memory_used@@Base+0xa10>  // b.any
  410fa8:	orr	x3, x7, x3
  410fac:	b	410fc0 <_obstack_memory_used@@Base+0xa80>
  410fb0:	orr	x4, x4, x2
  410fb4:	cbz	x4, 410f8c <_obstack_memory_used@@Base+0xa4c>
  410fb8:	tst	x2, #0x800000000000
  410fbc:	b.eq	410f68 <_obstack_memory_used@@Base+0xa28>  // b.none
  410fc0:	mov	w0, #0x1                   	// #1
  410fc4:	cbz	x3, 410f50 <_obstack_memory_used@@Base+0xa10>
  410fc8:	b	410f8c <_obstack_memory_used@@Base+0xa4c>
  410fcc:	nop
  410fd0:	tbz	w0, #0, 410fe0 <_obstack_memory_used@@Base+0xaa0>
  410fd4:	movi	v1.2s, #0x0
  410fd8:	fdiv	s0, s1, s1
  410fdc:	mrs	x1, fpsr
  410fe0:	tbz	w0, #1, 410ff4 <_obstack_memory_used@@Base+0xab4>
  410fe4:	fmov	s1, #1.000000000000000000e+00
  410fe8:	movi	v2.2s, #0x0
  410fec:	fdiv	s0, s1, s2
  410ff0:	mrs	x1, fpsr
  410ff4:	tbz	w0, #2, 411014 <_obstack_memory_used@@Base+0xad4>
  410ff8:	mov	w2, #0xc5ae                	// #50606
  410ffc:	mov	w1, #0x7f7fffff            	// #2139095039
  411000:	movk	w2, #0x749d, lsl #16
  411004:	fmov	s1, w1
  411008:	fmov	s2, w2
  41100c:	fadd	s0, s1, s2
  411010:	mrs	x1, fpsr
  411014:	tbz	w0, #3, 411024 <_obstack_memory_used@@Base+0xae4>
  411018:	movi	v1.2s, #0x80, lsl #16
  41101c:	fmul	s0, s1, s1
  411020:	mrs	x1, fpsr
  411024:	tbz	w0, #4, 41103c <_obstack_memory_used@@Base+0xafc>
  411028:	mov	w0, #0x7f7fffff            	// #2139095039
  41102c:	fmov	s2, #1.000000000000000000e+00
  411030:	fmov	s1, w0
  411034:	fsub	s0, s1, s2
  411038:	mrs	x0, fpsr
  41103c:	ret
  411040:	stp	x29, x30, [sp, #-64]!
  411044:	mov	x29, sp
  411048:	stp	x19, x20, [sp, #16]
  41104c:	adrp	x20, 423000 <_obstack_memory_used@@Base+0x12ac0>
  411050:	add	x20, x20, #0xde0
  411054:	stp	x21, x22, [sp, #32]
  411058:	adrp	x21, 423000 <_obstack_memory_used@@Base+0x12ac0>
  41105c:	add	x21, x21, #0xdd8
  411060:	sub	x20, x20, x21
  411064:	mov	w22, w0
  411068:	stp	x23, x24, [sp, #48]
  41106c:	mov	x23, x1
  411070:	mov	x24, x2
  411074:	bl	402810 <mbrtowc@plt-0x40>
  411078:	cmp	xzr, x20, asr #3
  41107c:	b.eq	4110a8 <_obstack_memory_used@@Base+0xb68>  // b.none
  411080:	asr	x20, x20, #3
  411084:	mov	x19, #0x0                   	// #0
  411088:	ldr	x3, [x21, x19, lsl #3]
  41108c:	mov	x2, x24
  411090:	add	x19, x19, #0x1
  411094:	mov	x1, x23
  411098:	mov	w0, w22
  41109c:	blr	x3
  4110a0:	cmp	x20, x19
  4110a4:	b.ne	411088 <_obstack_memory_used@@Base+0xb48>  // b.any
  4110a8:	ldp	x19, x20, [sp, #16]
  4110ac:	ldp	x21, x22, [sp, #32]
  4110b0:	ldp	x23, x24, [sp, #48]
  4110b4:	ldp	x29, x30, [sp], #64
  4110b8:	ret
  4110bc:	nop
  4110c0:	ret
  4110c4:	nop
  4110c8:	adrp	x2, 424000 <_obstack_memory_used@@Base+0x13ac0>
  4110cc:	mov	x1, #0x0                   	// #0
  4110d0:	ldr	x2, [x2, #976]
  4110d4:	b	402950 <__cxa_atexit@plt>
  4110d8:	mov	x2, x1
  4110dc:	mov	x1, x0
  4110e0:	mov	w0, #0x0                   	// #0
  4110e4:	b	402f70 <__xstat@plt>
  4110e8:	mov	x2, x1
  4110ec:	mov	w1, w0
  4110f0:	mov	w0, #0x0                   	// #0
  4110f4:	b	402ea0 <__fxstat@plt>

Disassembly of section .fini:

00000000004110f8 <.fini>:
  4110f8:	stp	x29, x30, [sp, #-16]!
  4110fc:	mov	x29, sp
  411100:	ldp	x29, x30, [sp], #16
  411104:	ret
