
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_arcfour.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <selftest>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

0000000000000008 <do_encrypt_stream>:
   8:	stp	x19, x20, [sp, #-64]!
   c:	stp	x21, x22, [sp, #16]
  10:	str	x0, [sp, #56]
  14:	str	x1, [sp, #48]
  18:	str	x2, [sp, #40]
  1c:	str	w3, [sp, #36]
  20:	ldr	x0, [sp, #56]
  24:	ldr	w20, [x0]
  28:	ldr	x0, [sp, #56]
  2c:	ldr	w21, [x0, #4]
  30:	ldr	x0, [sp, #56]
  34:	add	x19, x0, #0x8
  38:	b	e8 <do_encrypt_stream+0xe0>
  3c:	add	w20, w20, #0x1
  40:	and	w20, w20, #0xff
  44:	sxtw	x0, w20
  48:	add	x0, x19, x0
  4c:	ldrb	w0, [x0]
  50:	add	w21, w21, w0
  54:	and	w21, w21, #0xff
  58:	sxtw	x0, w20
  5c:	add	x0, x19, x0
  60:	ldrb	w0, [x0]
  64:	mov	w22, w0
  68:	sxtw	x0, w21
  6c:	add	x1, x19, x0
  70:	sxtw	x0, w20
  74:	add	x0, x19, x0
  78:	ldrb	w1, [x1]
  7c:	strb	w1, [x0]
  80:	sxtw	x0, w21
  84:	add	x0, x19, x0
  88:	and	w1, w22, #0xff
  8c:	strb	w1, [x0]
  90:	ldr	x0, [sp, #40]
  94:	add	x1, x0, #0x1
  98:	str	x1, [sp, #40]
  9c:	ldrb	w2, [x0]
  a0:	sxtw	x0, w20
  a4:	add	x0, x19, x0
  a8:	ldrb	w0, [x0]
  ac:	mov	w1, w0
  b0:	sxtw	x0, w21
  b4:	add	x0, x19, x0
  b8:	ldrb	w0, [x0]
  bc:	add	w0, w1, w0
  c0:	mov	w0, w0
  c4:	and	x0, x0, #0xff
  c8:	add	x0, x19, x0
  cc:	ldrb	w1, [x0]
  d0:	ldr	x0, [sp, #48]
  d4:	add	x3, x0, #0x1
  d8:	str	x3, [sp, #48]
  dc:	eor	w1, w2, w1
  e0:	and	w1, w1, #0xff
  e4:	strb	w1, [x0]
  e8:	ldr	w0, [sp, #36]
  ec:	sub	w1, w0, #0x1
  f0:	str	w1, [sp, #36]
  f4:	cmp	w0, #0x0
  f8:	b.ne	3c <do_encrypt_stream+0x34>  // b.any
  fc:	ldr	x0, [sp, #56]
 100:	str	w20, [x0]
 104:	ldr	x0, [sp, #56]
 108:	str	w21, [x0, #4]
 10c:	nop
 110:	ldp	x21, x22, [sp, #16]
 114:	ldp	x19, x20, [sp], #64
 118:	ret

000000000000011c <encrypt_stream>:
 11c:	stp	x29, x30, [sp, #-64]!
 120:	mov	x29, sp
 124:	str	x0, [sp, #40]
 128:	str	x1, [sp, #32]
 12c:	str	x2, [sp, #24]
 130:	str	w3, [sp, #20]
 134:	ldr	x0, [sp, #40]
 138:	str	x0, [sp, #56]
 13c:	ldr	w3, [sp, #20]
 140:	ldr	x2, [sp, #24]
 144:	ldr	x1, [sp, #32]
 148:	ldr	x0, [sp, #56]
 14c:	bl	8 <do_encrypt_stream>
 150:	mov	w0, #0x40                  	// #64
 154:	bl	0 <_gcry_burn_stack>
 158:	nop
 15c:	ldp	x29, x30, [sp], #64
 160:	ret

0000000000000164 <do_arcfour_setkey>:
 164:	stp	x29, x30, [sp, #-336]!
 168:	mov	x29, sp
 16c:	str	x0, [sp, #40]
 170:	str	x1, [sp, #32]
 174:	str	w2, [sp, #28]
 178:	ldr	x0, [sp, #40]
 17c:	str	x0, [sp, #320]
 180:	adrp	x0, 0 <selftest>
 184:	add	x0, x0, #0x0
 188:	ldr	x0, [x0]
 18c:	ldr	w0, [x0]
 190:	cmp	w0, #0x0
 194:	b.ne	200 <do_arcfour_setkey+0x9c>  // b.any
 198:	adrp	x0, 0 <selftest>
 19c:	add	x0, x0, #0x0
 1a0:	ldr	x0, [x0]
 1a4:	mov	w1, #0x1                   	// #1
 1a8:	str	w1, [x0]
 1ac:	bl	0 <selftest>
 1b0:	mov	x1, x0
 1b4:	adrp	x0, 0 <selftest>
 1b8:	add	x0, x0, #0x0
 1bc:	ldr	x0, [x0]
 1c0:	str	x1, [x0]
 1c4:	adrp	x0, 0 <selftest>
 1c8:	add	x0, x0, #0x0
 1cc:	ldr	x0, [x0]
 1d0:	ldr	x0, [x0]
 1d4:	cmp	x0, #0x0
 1d8:	b.eq	200 <do_arcfour_setkey+0x9c>  // b.none
 1dc:	adrp	x0, 0 <selftest>
 1e0:	add	x0, x0, #0x0
 1e4:	ldr	x0, [x0]
 1e8:	ldr	x0, [x0]
 1ec:	mov	x1, x0
 1f0:	adrp	x0, 0 <selftest>
 1f4:	add	x0, x0, #0x0
 1f8:	ldr	x0, [x0]
 1fc:	bl	0 <_gcry_log_error>
 200:	adrp	x0, 0 <selftest>
 204:	add	x0, x0, #0x0
 208:	ldr	x0, [x0]
 20c:	ldr	x0, [x0]
 210:	cmp	x0, #0x0
 214:	b.eq	220 <do_arcfour_setkey+0xbc>  // b.none
 218:	mov	w0, #0x1c                  	// #28
 21c:	b	3ac <do_arcfour_setkey+0x248>
 220:	ldr	w0, [sp, #28]
 224:	cmp	w0, #0x4
 228:	b.hi	234 <do_arcfour_setkey+0xd0>  // b.pmore
 22c:	mov	w0, #0xd                   	// #13
 230:	b	3ac <do_arcfour_setkey+0x248>
 234:	ldr	x0, [sp, #320]
 238:	str	wzr, [x0, #4]
 23c:	ldr	x0, [sp, #320]
 240:	ldr	w1, [x0, #4]
 244:	ldr	x0, [sp, #320]
 248:	str	w1, [x0]
 24c:	str	wzr, [sp, #332]
 250:	b	27c <do_arcfour_setkey+0x118>
 254:	ldr	w0, [sp, #332]
 258:	and	w2, w0, #0xff
 25c:	ldr	x1, [sp, #320]
 260:	ldrsw	x0, [sp, #332]
 264:	add	x0, x1, x0
 268:	mov	w1, w2
 26c:	strb	w1, [x0, #8]
 270:	ldr	w0, [sp, #332]
 274:	add	w0, w0, #0x1
 278:	str	w0, [sp, #332]
 27c:	ldr	w0, [sp, #332]
 280:	cmp	w0, #0xff
 284:	b.le	254 <do_arcfour_setkey+0xf0>
 288:	str	wzr, [sp, #332]
 28c:	b	2d0 <do_arcfour_setkey+0x16c>
 290:	ldr	w0, [sp, #332]
 294:	ldr	w1, [sp, #28]
 298:	udiv	w2, w0, w1
 29c:	ldr	w1, [sp, #28]
 2a0:	mul	w1, w2, w1
 2a4:	sub	w0, w0, w1
 2a8:	mov	w0, w0
 2ac:	ldr	x1, [sp, #32]
 2b0:	add	x0, x1, x0
 2b4:	ldrb	w2, [x0]
 2b8:	ldrsw	x0, [sp, #332]
 2bc:	add	x1, sp, #0x38
 2c0:	strb	w2, [x1, x0]
 2c4:	ldr	w0, [sp, #332]
 2c8:	add	w0, w0, #0x1
 2cc:	str	w0, [sp, #332]
 2d0:	ldr	w0, [sp, #332]
 2d4:	cmp	w0, #0xff
 2d8:	b.le	290 <do_arcfour_setkey+0x12c>
 2dc:	str	wzr, [sp, #328]
 2e0:	ldr	w0, [sp, #328]
 2e4:	str	w0, [sp, #332]
 2e8:	b	38c <do_arcfour_setkey+0x228>
 2ec:	ldr	x1, [sp, #320]
 2f0:	ldrsw	x0, [sp, #332]
 2f4:	add	x0, x1, x0
 2f8:	ldrb	w0, [x0, #8]
 2fc:	mov	w1, w0
 300:	ldr	w0, [sp, #328]
 304:	add	w0, w1, w0
 308:	ldrsw	x1, [sp, #332]
 30c:	add	x2, sp, #0x38
 310:	ldrb	w1, [x2, x1]
 314:	add	w0, w0, w1
 318:	negs	w1, w0
 31c:	and	w0, w0, #0xff
 320:	and	w1, w1, #0xff
 324:	csneg	w0, w0, w1, mi  // mi = first
 328:	str	w0, [sp, #328]
 32c:	ldr	x1, [sp, #320]
 330:	ldrsw	x0, [sp, #332]
 334:	add	x0, x1, x0
 338:	ldrb	w0, [x0, #8]
 33c:	str	w0, [sp, #316]
 340:	ldr	x1, [sp, #320]
 344:	ldrsw	x0, [sp, #328]
 348:	add	x0, x1, x0
 34c:	ldrb	w2, [x0, #8]
 350:	ldr	x1, [sp, #320]
 354:	ldrsw	x0, [sp, #332]
 358:	add	x0, x1, x0
 35c:	mov	w1, w2
 360:	strb	w1, [x0, #8]
 364:	ldr	w0, [sp, #316]
 368:	and	w2, w0, #0xff
 36c:	ldr	x1, [sp, #320]
 370:	ldrsw	x0, [sp, #328]
 374:	add	x0, x1, x0
 378:	mov	w1, w2
 37c:	strb	w1, [x0, #8]
 380:	ldr	w0, [sp, #332]
 384:	add	w0, w0, #0x1
 388:	str	w0, [sp, #332]
 38c:	ldr	w0, [sp, #332]
 390:	cmp	w0, #0xff
 394:	b.le	2ec <do_arcfour_setkey+0x188>
 398:	add	x0, sp, #0x38
 39c:	mov	x2, #0x100                 	// #256
 3a0:	mov	w1, #0x0                   	// #0
 3a4:	bl	0 <grub_memset>
 3a8:	mov	w0, #0x0                   	// #0
 3ac:	ldp	x29, x30, [sp], #336
 3b0:	ret
 3b4:	nop
	...

00000000000003d0 <arcfour_setkey>:
 3d0:	stp	x29, x30, [sp, #-64]!
 3d4:	mov	x29, sp
 3d8:	str	x0, [sp, #40]
 3dc:	str	x1, [sp, #32]
 3e0:	str	w2, [sp, #28]
 3e4:	ldr	x0, [sp, #40]
 3e8:	str	x0, [sp, #56]
 3ec:	ldr	w2, [sp, #28]
 3f0:	ldr	x1, [sp, #32]
 3f4:	ldr	x0, [sp, #56]
 3f8:	bl	164 <do_arcfour_setkey>
 3fc:	str	w0, [sp, #52]
 400:	mov	w0, #0x12c                 	// #300
 404:	bl	0 <_gcry_burn_stack>
 408:	ldr	w0, [sp, #52]
 40c:	ldp	x29, x30, [sp], #64
 410:	ret

0000000000000414 <grub_mod_init>:
 414:	stp	x29, x30, [sp, #-32]!
 418:	mov	x29, sp
 41c:	str	x0, [sp, #24]
 420:	adrp	x0, 0 <selftest>
 424:	add	x0, x0, #0x0
 428:	ldr	x0, [x0]
 42c:	bl	0 <grub_cipher_register>
 430:	nop
 434:	ldp	x29, x30, [sp], #32
 438:	ret
 43c:	nop
	...

0000000000000448 <grub_mod_fini>:
 448:	stp	x29, x30, [sp, #-16]!
 44c:	mov	x29, sp
 450:	adrp	x0, 0 <selftest>
 454:	add	x0, x0, #0x0
 458:	ldr	x0, [x0]
 45c:	bl	0 <grub_cipher_unregister>
 460:	nop
 464:	ldp	x29, x30, [sp], #16
 468:	ret
 46c:	nop
	...
