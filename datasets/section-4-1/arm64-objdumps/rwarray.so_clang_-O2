
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rwarray.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000800 <.init>:
 800:	stp	x29, x30, [sp, #-16]!
 804:	mov	x29, sp
 808:	bl	910 <fprintf@plt+0x10>
 80c:	ldp	x29, x30, [sp], #16
 810:	ret

Disassembly of section .plt:

0000000000000820 <memcpy@plt-0x20>:
 820:	stp	x16, x30, [sp, #-16]!
 824:	adrp	x16, 11000 <dl_load@@Base+0x1061c>
 828:	ldr	x17, [x16, #4088]
 82c:	add	x16, x16, #0xff8
 830:	br	x17
 834:	nop
 838:	nop
 83c:	nop

0000000000000840 <memcpy@plt>:
 840:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 844:	ldr	x17, [x16]
 848:	add	x16, x16, #0x0
 84c:	br	x17

0000000000000850 <fwrite_unlocked@plt>:
 850:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 854:	ldr	x17, [x16, #8]
 858:	add	x16, x16, #0x8
 85c:	br	x17

0000000000000860 <exit@plt>:
 860:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 864:	ldr	x17, [x16, #16]
 868:	add	x16, x16, #0x10
 86c:	br	x17

0000000000000870 <__cxa_finalize@plt>:
 870:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 874:	ldr	x17, [x16, #24]
 878:	add	x16, x16, #0x18
 87c:	br	x17

0000000000000880 <fclose@plt>:
 880:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 884:	ldr	x17, [x16, #32]
 888:	add	x16, x16, #0x20
 88c:	br	x17

0000000000000890 <fopen@plt>:
 890:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 894:	ldr	x17, [x16, #40]
 898:	add	x16, x16, #0x28
 89c:	br	x17

00000000000008a0 <__gmon_start__@plt>:
 8a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #48]
 8a8:	add	x16, x16, #0x30
 8ac:	br	x17

00000000000008b0 <fread@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #56]
 8b8:	add	x16, x16, #0x38
 8bc:	br	x17

00000000000008c0 <fwrite@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #64]
 8c8:	add	x16, x16, #0x40
 8cc:	br	x17

00000000000008d0 <dcgettext@plt>:
 8d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #72]
 8d8:	add	x16, x16, #0x48
 8dc:	br	x17

00000000000008e0 <__errno_location@plt>:
 8e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #80]
 8e8:	add	x16, x16, #0x50
 8ec:	br	x17

00000000000008f0 <unlink@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #88]
 8f8:	add	x16, x16, #0x58
 8fc:	br	x17

0000000000000900 <fprintf@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #96]
 908:	add	x16, x16, #0x60
 90c:	br	x17

Disassembly of section .text:

0000000000000910 <dl_load@@Base-0xd4>:
     910:	adrp	x0, 11000 <dl_load@@Base+0x1061c>
     914:	ldr	x0, [x0, #4056]
     918:	cbz	x0, 920 <fprintf@plt+0x20>
     91c:	b	8a0 <__gmon_start__@plt>
     920:	ret
     924:	nop
     928:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     92c:	add	x0, x0, #0xd0
     930:	adrp	x1, 12000 <dl_load@@Base+0x1161c>
     934:	add	x1, x1, #0xd0
     938:	cmp	x1, x0
     93c:	b.eq	954 <fprintf@plt+0x54>  // b.none
     940:	adrp	x1, 11000 <dl_load@@Base+0x1061c>
     944:	ldr	x1, [x1, #4032]
     948:	cbz	x1, 954 <fprintf@plt+0x54>
     94c:	mov	x16, x1
     950:	br	x16
     954:	ret
     958:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     95c:	add	x0, x0, #0xd0
     960:	adrp	x1, 12000 <dl_load@@Base+0x1161c>
     964:	add	x1, x1, #0xd0
     968:	sub	x1, x1, x0
     96c:	lsr	x2, x1, #63
     970:	add	x1, x2, x1, asr #3
     974:	cmp	xzr, x1, asr #1
     978:	asr	x1, x1, #1
     97c:	b.eq	994 <fprintf@plt+0x94>  // b.none
     980:	adrp	x2, 11000 <dl_load@@Base+0x1061c>
     984:	ldr	x2, [x2, #4064]
     988:	cbz	x2, 994 <fprintf@plt+0x94>
     98c:	mov	x16, x2
     990:	br	x16
     994:	ret
     998:	stp	x29, x30, [sp, #-32]!
     99c:	mov	x29, sp
     9a0:	str	x19, [sp, #16]
     9a4:	adrp	x19, 12000 <dl_load@@Base+0x1161c>
     9a8:	ldrb	w0, [x19, #208]
     9ac:	cbnz	w0, 9d4 <fprintf@plt+0xd4>
     9b0:	adrp	x0, 11000 <dl_load@@Base+0x1061c>
     9b4:	ldr	x0, [x0, #4040]
     9b8:	cbz	x0, 9c8 <fprintf@plt+0xc8>
     9bc:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     9c0:	ldr	x0, [x0, #104]
     9c4:	bl	870 <__cxa_finalize@plt>
     9c8:	bl	928 <fprintf@plt+0x28>
     9cc:	mov	w0, #0x1                   	// #1
     9d0:	strb	w0, [x19, #208]
     9d4:	ldr	x19, [sp, #16]
     9d8:	ldp	x29, x30, [sp], #32
     9dc:	ret
     9e0:	b	958 <fprintf@plt+0x58>

00000000000009e4 <dl_load@@Base>:
     9e4:	stp	x29, x30, [sp, #-48]!
     9e8:	stp	x20, x19, [sp, #32]
     9ec:	adrp	x19, 12000 <dl_load@@Base+0x1161c>
     9f0:	adrp	x20, 12000 <dl_load@@Base+0x1161c>
     9f4:	stp	x22, x21, [sp, #16]
     9f8:	str	x0, [x19, #216]
     9fc:	str	x1, [x20, #224]
     a00:	ldr	w8, [x0]
     a04:	mov	x29, sp
     a08:	cmp	w8, #0x2
     a0c:	b.ne	af8 <dl_load@@Base+0x114>  // b.any
     a10:	ldr	w8, [x0, #4]
     a14:	tbnz	w8, #31, af8 <dl_load@@Base+0x114>
     a18:	adrp	x21, 12000 <dl_load@@Base+0x1161c>
     a1c:	ldr	x8, [x21, #112]
     a20:	cbz	x8, a50 <dl_load@@Base+0x6c>
     a24:	ldr	x9, [x0, #48]
     a28:	adrp	x8, 1000 <dl_load@@Base+0x61c>
     a2c:	add	x8, x8, #0x76b
     a30:	adrp	x2, 12000 <dl_load@@Base+0x1161c>
     a34:	add	x2, x2, #0x70
     a38:	mov	x0, x1
     a3c:	mov	x1, x8
     a40:	blr	x9
     a44:	cbz	w0, a58 <dl_load@@Base+0x74>
     a48:	mov	w21, wzr
     a4c:	b	a78 <dl_load@@Base+0x94>
     a50:	mov	w21, wzr
     a54:	b	ac8 <dl_load@@Base+0xe4>
     a58:	ldr	x8, [x19, #216]
     a5c:	ldr	x0, [x20, #224]
     a60:	ldr	x2, [x21, #112]
     a64:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     a68:	ldr	x8, [x8, #104]
     a6c:	add	x1, x1, #0x79f
     a70:	blr	x8
     a74:	mov	w21, #0x1                   	// #1
     a78:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     a7c:	ldr	x8, [x22, #160]
     a80:	cbz	x8, ac8 <dl_load@@Base+0xe4>
     a84:	ldr	x8, [x19, #216]
     a88:	ldr	x0, [x20, #224]
     a8c:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     a90:	adrp	x2, 12000 <dl_load@@Base+0x1161c>
     a94:	ldr	x8, [x8, #48]
     a98:	add	x1, x1, #0x76b
     a9c:	add	x2, x2, #0xa0
     aa0:	blr	x8
     aa4:	cbnz	w0, ac8 <dl_load@@Base+0xe4>
     aa8:	ldr	x8, [x19, #216]
     aac:	ldr	x0, [x20, #224]
     ab0:	ldr	x2, [x22, #160]
     ab4:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     ab8:	ldr	x8, [x8, #104]
     abc:	add	x1, x1, #0x79f
     ac0:	blr	x8
     ac4:	mov	w21, #0x1                   	// #1
     ac8:	ldr	x8, [x19, #216]
     acc:	ldr	x0, [x20, #224]
     ad0:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     ad4:	add	x1, x1, #0x99e
     ad8:	ldr	x8, [x8, #88]
     adc:	blr	x8
     ae0:	cmp	w21, #0x0
     ae4:	ldp	x20, x19, [sp, #32]
     ae8:	ldp	x22, x21, [sp, #16]
     aec:	cset	w0, eq  // eq = none
     af0:	ldp	x29, x30, [sp], #48
     af4:	ret
     af8:	adrp	x20, 11000 <dl_load@@Base+0x1061c>
     afc:	ldr	x20, [x20, #4048]
     b00:	adrp	x0, 1000 <dl_load@@Base+0x61c>
     b04:	add	x0, x0, #0x746
     b08:	mov	w1, #0x25                  	// #37
     b0c:	ldr	x3, [x20]
     b10:	mov	w2, #0x1                   	// #1
     b14:	bl	8c0 <fwrite@plt>
     b18:	ldr	x8, [x19, #216]
     b1c:	ldr	x0, [x20]
     b20:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     b24:	add	x1, x1, #0x76c
     b28:	ldp	w4, w5, [x8]
     b2c:	mov	w2, #0x2                   	// #2
     b30:	mov	w3, wzr
     b34:	bl	900 <fprintf@plt>
     b38:	mov	w0, #0x1                   	// #1
     b3c:	bl	860 <exit@plt>
     b40:	sub	sp, sp, #0x80
     b44:	stp	x29, x30, [sp, #64]
     b48:	stp	x20, x19, [sp, #112]
     b4c:	add	x29, sp, #0x40
     b50:	mov	x19, x1
     b54:	mov	w8, #0x3                   	// #3
     b58:	mov	w9, #0x1                   	// #1
     b5c:	cmp	w0, #0x2
     b60:	str	x23, [sp, #80]
     b64:	stp	x22, x21, [sp, #96]
     b68:	stp	w9, w8, [x29, #24]
     b6c:	str	w9, [x1]
     b70:	str	xzr, [x1, #8]
     b74:	str	wzr, [x1, #16]
     b78:	b.lt	ce8 <dl_load@@Base+0x304>  // b.tstop
     b7c:	adrp	x21, 12000 <dl_load@@Base+0x1161c>
     b80:	ldr	x8, [x21, #216]
     b84:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     b88:	ldr	x0, [x22, #224]
     b8c:	add	x3, sp, #0x20
     b90:	ldr	x8, [x8, #152]
     b94:	mov	w2, #0x2                   	// #2
     b98:	mov	x1, xzr
     b9c:	blr	x8
     ba0:	cbz	w0, c6c <dl_load@@Base+0x288>
     ba4:	ldr	x8, [x21, #216]
     ba8:	ldr	x0, [x22, #224]
     bac:	mov	x3, sp
     bb0:	mov	w1, #0x1                   	// #1
     bb4:	ldr	x8, [x8, #152]
     bb8:	mov	w2, #0x5                   	// #5
     bbc:	blr	x8
     bc0:	cbz	w0, c80 <dl_load@@Base+0x29c>
     bc4:	ldr	x0, [sp, #40]
     bc8:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     bcc:	add	x1, x1, #0x814
     bd0:	bl	890 <fopen@plt>
     bd4:	mov	x20, x0
     bd8:	cbz	x0, cbc <dl_load@@Base+0x2d8>
     bdc:	adrp	x0, 1000 <dl_load@@Base+0x61c>
     be0:	add	x0, x0, #0x817
     be4:	mov	w1, #0x1                   	// #1
     be8:	mov	w2, #0x8                   	// #8
     bec:	mov	x3, x20
     bf0:	bl	850 <fwrite_unlocked@plt>
     bf4:	cmp	x0, #0x8
     bf8:	b.ne	cbc <dl_load@@Base+0x2d8>  // b.any
     bfc:	mov	w8, #0x3000000             	// #50331648
     c00:	add	x0, x29, #0x1c
     c04:	mov	w1, #0x1                   	// #1
     c08:	mov	w2, #0x4                   	// #4
     c0c:	mov	x3, x20
     c10:	str	w8, [x29, #28]
     c14:	bl	850 <fwrite_unlocked@plt>
     c18:	cmp	x0, #0x4
     c1c:	b.ne	cbc <dl_load@@Base+0x2d8>  // b.any
     c20:	mov	w8, #0x1000000             	// #16777216
     c24:	add	x0, x29, #0x18
     c28:	mov	w1, #0x1                   	// #1
     c2c:	mov	w2, #0x4                   	// #4
     c30:	mov	x3, x20
     c34:	str	w8, [x29, #24]
     c38:	bl	850 <fwrite_unlocked@plt>
     c3c:	cmp	x0, #0x4
     c40:	b.ne	cbc <dl_load@@Base+0x2d8>  // b.any
     c44:	ldr	x1, [sp, #8]
     c48:	mov	x0, x20
     c4c:	bl	f68 <dl_load@@Base+0x584>
     c50:	cbz	w0, cbc <dl_load@@Base+0x2d8>
     c54:	mov	w8, #0x1                   	// #1
     c58:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
     c5c:	str	w8, [x19]
     c60:	str	x9, [x19, #8]
     c64:	str	wzr, [x19, #16]
     c68:	b	ce0 <dl_load@@Base+0x2fc>
     c6c:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     c70:	ldr	x8, [x8, #4048]
     c74:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     c78:	add	x1, x1, #0x7c6
     c7c:	b	c90 <dl_load@@Base+0x2ac>
     c80:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     c84:	ldr	x8, [x8, #4048]
     c88:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     c8c:	add	x1, x1, #0x7ed
     c90:	ldr	x20, [x8]
     c94:	mov	w2, #0x5                   	// #5
     c98:	mov	x0, xzr
     c9c:	bl	8d0 <dcgettext@plt>
     ca0:	mov	x1, x0
     ca4:	mov	x0, x20
     ca8:	bl	900 <fprintf@plt>
     cac:	bl	8e0 <__errno_location@plt>
     cb0:	mov	x20, xzr
     cb4:	mov	w8, #0x16                  	// #22
     cb8:	str	w8, [x0]
     cbc:	ldr	x8, [x21, #216]
     cc0:	ldr	x21, [x22, #224]
     cc4:	ldr	x23, [x8, #128]
     cc8:	bl	8e0 <__errno_location@plt>
     ccc:	ldr	w1, [x0]
     cd0:	mov	x0, x21
     cd4:	blr	x23
     cd8:	ldr	x0, [sp, #40]
     cdc:	bl	8f0 <unlink@plt>
     ce0:	mov	x0, x20
     ce4:	bl	880 <fclose@plt>
     ce8:	mov	x0, x19
     cec:	ldp	x20, x19, [sp, #112]
     cf0:	ldp	x22, x21, [sp, #96]
     cf4:	ldr	x23, [sp, #80]
     cf8:	ldp	x29, x30, [sp, #64]
     cfc:	add	sp, sp, #0x80
     d00:	ret
     d04:	sub	sp, sp, #0xa0
     d08:	stp	x20, x19, [sp, #144]
     d0c:	mov	x19, x1
     d10:	mov	w8, #0x1                   	// #1
     d14:	cmp	w0, #0x2
     d18:	stp	x29, x30, [sp, #96]
     d1c:	str	x23, [sp, #112]
     d20:	stp	x22, x21, [sp, #128]
     d24:	add	x29, sp, #0x60
     d28:	str	xzr, [x1, #8]
     d2c:	str	w8, [x1]
     d30:	str	wzr, [x1, #16]
     d34:	b.lt	ec0 <dl_load@@Base+0x4dc>  // b.tstop
     d38:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     d3c:	ldr	x8, [x22, #216]
     d40:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
     d44:	ldr	x0, [x23, #224]
     d48:	sub	x3, x29, #0x20
     d4c:	ldr	x8, [x8, #152]
     d50:	mov	w2, #0x2                   	// #2
     d54:	mov	x1, xzr
     d58:	blr	x8
     d5c:	cbz	w0, edc <dl_load@@Base+0x4f8>
     d60:	ldr	x8, [x22, #216]
     d64:	ldr	x0, [x23, #224]
     d68:	add	x3, sp, #0x20
     d6c:	mov	w1, #0x1                   	// #1
     d70:	ldr	x8, [x8, #152]
     d74:	mov	w2, #0x5                   	// #5
     d78:	blr	x8
     d7c:	cbz	w0, ef0 <dl_load@@Base+0x50c>
     d80:	ldur	x0, [x29, #-24]
     d84:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     d88:	add	x1, x1, #0x8e2
     d8c:	bl	890 <fopen@plt>
     d90:	mov	x20, x0
     d94:	cbz	x0, e98 <dl_load@@Base+0x4b4>
     d98:	mov	x0, sp
     d9c:	mov	w1, #0x1                   	// #1
     da0:	mov	w2, #0x8                   	// #8
     da4:	mov	x3, x20
     da8:	stp	xzr, xzr, [sp]
     dac:	stur	xzr, [sp, #22]
     db0:	str	xzr, [sp, #16]
     db4:	bl	8b0 <fread@plt>
     db8:	cmp	x0, #0x8
     dbc:	b.ne	e8c <dl_load@@Base+0x4a8>  // b.any
     dc0:	ldr	x8, [sp]
     dc4:	mov	x10, #0x7761                	// #30561
     dc8:	ldrb	w9, [sp, #8]
     dcc:	movk	x10, #0x726b, lsl #16
     dd0:	movk	x10, #0x6c75, lsl #32
     dd4:	movk	x10, #0xa7a, lsl #48
     dd8:	eor	x8, x8, x10
     ddc:	orr	x8, x8, x9
     de0:	cbnz	x8, e8c <dl_load@@Base+0x4a8>
     de4:	add	x0, x29, #0x1c
     de8:	mov	w1, #0x1                   	// #1
     dec:	mov	w2, #0x4                   	// #4
     df0:	mov	x3, x20
     df4:	bl	8b0 <fread@plt>
     df8:	cmp	x0, #0x4
     dfc:	b.ne	e8c <dl_load@@Base+0x4a8>  // b.any
     e00:	ldr	w8, [x29, #28]
     e04:	mov	w9, #0x3000000             	// #50331648
     e08:	rev	w10, w8
     e0c:	cmp	w8, w9
     e10:	str	w10, [x29, #28]
     e14:	b.ne	e8c <dl_load@@Base+0x4a8>  // b.any
     e18:	add	x0, x29, #0x18
     e1c:	mov	w1, #0x1                   	// #1
     e20:	mov	w2, #0x4                   	// #4
     e24:	mov	x3, x20
     e28:	bl	8b0 <fread@plt>
     e2c:	cmp	x0, #0x4
     e30:	b.ne	e98 <dl_load@@Base+0x4b4>  // b.any
     e34:	ldr	w8, [x29, #24]
     e38:	mov	w9, #0x1000000             	// #16777216
     e3c:	rev	w10, w8
     e40:	cmp	w8, w9
     e44:	str	w10, [x29, #24]
     e48:	b.ne	e8c <dl_load@@Base+0x4a8>  // b.any
     e4c:	ldr	x8, [x22, #216]
     e50:	ldr	x0, [x23, #224]
     e54:	ldr	x1, [sp, #40]
     e58:	ldr	x8, [x8, #256]
     e5c:	blr	x8
     e60:	cbz	w0, f2c <dl_load@@Base+0x548>
     e64:	ldr	x1, [sp, #40]
     e68:	mov	x0, x20
     e6c:	bl	12c4 <dl_load@@Base+0x8e0>
     e70:	cbz	w0, e98 <dl_load@@Base+0x4b4>
     e74:	mov	w8, #0x1                   	// #1
     e78:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
     e7c:	str	w8, [x19]
     e80:	str	x9, [x19, #8]
     e84:	str	wzr, [x19, #16]
     e88:	b	eb8 <dl_load@@Base+0x4d4>
     e8c:	bl	8e0 <__errno_location@plt>
     e90:	mov	w8, #0x9                   	// #9
     e94:	str	w8, [x0]
     e98:	ldr	x8, [x22, #216]
     e9c:	ldr	x21, [x23, #224]
     ea0:	ldr	x22, [x8, #128]
     ea4:	bl	8e0 <__errno_location@plt>
     ea8:	ldr	w1, [x0]
     eac:	mov	x0, x21
     eb0:	blr	x22
     eb4:	cbz	x20, ec0 <dl_load@@Base+0x4dc>
     eb8:	mov	x0, x20
     ebc:	bl	880 <fclose@plt>
     ec0:	mov	x0, x19
     ec4:	ldp	x20, x19, [sp, #144]
     ec8:	ldp	x22, x21, [sp, #128]
     ecc:	ldr	x23, [sp, #112]
     ed0:	ldp	x29, x30, [sp, #96]
     ed4:	add	sp, sp, #0xa0
     ed8:	ret
     edc:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     ee0:	ldr	x8, [x8, #4048]
     ee4:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     ee8:	add	x1, x1, #0x896
     eec:	b	f00 <dl_load@@Base+0x51c>
     ef0:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     ef4:	ldr	x8, [x8, #4048]
     ef8:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     efc:	add	x1, x1, #0x8bc
     f00:	ldr	x20, [x8]
     f04:	mov	w2, #0x5                   	// #5
     f08:	mov	x0, xzr
     f0c:	bl	8d0 <dcgettext@plt>
     f10:	mov	x1, x0
     f14:	mov	x0, x20
     f18:	bl	900 <fprintf@plt>
     f1c:	bl	8e0 <__errno_location@plt>
     f20:	mov	x20, xzr
     f24:	mov	w8, #0x16                  	// #22
     f28:	b	e94 <dl_load@@Base+0x4b0>
     f2c:	bl	8e0 <__errno_location@plt>
     f30:	mov	w8, #0xc                   	// #12
     f34:	str	w8, [x0]
     f38:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     f3c:	ldr	x8, [x8, #4048]
     f40:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     f44:	add	x1, x1, #0x8e5
     f48:	mov	w2, #0x5                   	// #5
     f4c:	ldr	x21, [x8]
     f50:	mov	x0, xzr
     f54:	bl	8d0 <dcgettext@plt>
     f58:	mov	x1, x0
     f5c:	mov	x0, x21
     f60:	bl	900 <fprintf@plt>
     f64:	b	e98 <dl_load@@Base+0x4b4>
     f68:	sub	sp, sp, #0x70
     f6c:	stp	x24, x23, [sp, #64]
     f70:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
     f74:	ldr	x8, [x23, #216]
     f78:	stp	x29, x30, [sp, #16]
     f7c:	stp	x26, x25, [sp, #48]
     f80:	stp	x22, x21, [sp, #80]
     f84:	stp	x20, x19, [sp, #96]
     f88:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     f8c:	ldr	x9, [x8, #264]
     f90:	ldr	x8, [x22, #224]
     f94:	mov	x20, x0
     f98:	add	x2, sp, #0x8
     f9c:	mov	w3, #0x2                   	// #2
     fa0:	mov	x0, x8
     fa4:	mov	w4, wzr
     fa8:	str	x27, [sp, #32]
     fac:	add	x29, sp, #0x10
     fb0:	mov	x19, x1
     fb4:	blr	x9
     fb8:	cbz	w0, 10c0 <dl_load@@Base+0x6dc>
     fbc:	ldr	x8, [sp, #8]
     fc0:	add	x0, x29, #0x18
     fc4:	mov	w1, #0x1                   	// #1
     fc8:	mov	w2, #0x4                   	// #4
     fcc:	ldr	w8, [x8, #16]
     fd0:	mov	x3, x20
     fd4:	rev	w8, w8
     fd8:	str	w8, [x29, #24]
     fdc:	bl	8c0 <fwrite@plt>
     fe0:	cmp	x0, #0x4
     fe4:	b.ne	1100 <dl_load@@Base+0x71c>  // b.any
     fe8:	ldr	x21, [sp, #8]
     fec:	ldr	x8, [x21, #16]
     ff0:	cbz	x8, 1080 <dl_load@@Base+0x69c>
     ff4:	mov	x26, xzr
     ff8:	mov	w24, #0x1                   	// #1
     ffc:	mov	w25, #0x50                  	// #80
    1000:	madd	x27, x26, x25, x21
    1004:	ldr	w8, [x27, #56]!
    1008:	add	x0, x29, #0x1c
    100c:	mov	w1, #0x1                   	// #1
    1010:	mov	w2, #0x4                   	// #4
    1014:	rev	w8, w8
    1018:	mov	x3, x20
    101c:	str	w8, [x29, #28]
    1020:	bl	8c0 <fwrite@plt>
    1024:	cmp	x0, #0x4
    1028:	b.ne	10a4 <dl_load@@Base+0x6c0>  // b.any
    102c:	ldr	x2, [x27]
    1030:	cbz	x2, 1054 <dl_load@@Base+0x670>
    1034:	sub	x8, x27, #0x8
    1038:	ldr	x0, [x8]
    103c:	mov	w1, #0x1                   	// #1
    1040:	mov	x3, x20
    1044:	bl	8c0 <fwrite@plt>
    1048:	ldr	x8, [x27]
    104c:	cmp	x0, x8
    1050:	b.ne	10a4 <dl_load@@Base+0x6c0>  // b.any
    1054:	madd	x8, x26, x25, x21
    1058:	add	x1, x8, #0x48
    105c:	mov	x0, x20
    1060:	bl	1124 <dl_load@@Base+0x740>
    1064:	cbz	w0, 10a4 <dl_load@@Base+0x6c0>
    1068:	ldr	x21, [sp, #8]
    106c:	mov	w26, w24
    1070:	add	w24, w24, #0x1
    1074:	ldr	x8, [x21, #16]
    1078:	cmp	x8, x26
    107c:	b.hi	1000 <dl_load@@Base+0x61c>  // b.pmore
    1080:	ldr	x8, [x23, #216]
    1084:	ldr	x0, [x22, #224]
    1088:	mov	x1, x19
    108c:	mov	x2, x21
    1090:	ldr	x8, [x8, #272]
    1094:	blr	x8
    1098:	cbz	w0, 10d4 <dl_load@@Base+0x6f0>
    109c:	mov	w0, #0x1                   	// #1
    10a0:	b	1104 <dl_load@@Base+0x720>
    10a4:	ldr	x8, [x23, #216]
    10a8:	ldr	x0, [x22, #224]
    10ac:	ldr	x2, [sp, #8]
    10b0:	mov	x1, x19
    10b4:	ldr	x8, [x8, #272]
    10b8:	blr	x8
    10bc:	b	1100 <dl_load@@Base+0x71c>
    10c0:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    10c4:	ldr	x8, [x8, #4048]
    10c8:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    10cc:	add	x1, x1, #0x820
    10d0:	b	10e4 <dl_load@@Base+0x700>
    10d4:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    10d8:	ldr	x8, [x8, #4048]
    10dc:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    10e0:	add	x1, x1, #0x846
    10e4:	ldr	x19, [x8]
    10e8:	mov	w2, #0x5                   	// #5
    10ec:	mov	x0, xzr
    10f0:	bl	8d0 <dcgettext@plt>
    10f4:	mov	x1, x0
    10f8:	mov	x0, x19
    10fc:	bl	900 <fprintf@plt>
    1100:	mov	w0, wzr
    1104:	ldp	x20, x19, [sp, #96]
    1108:	ldp	x22, x21, [sp, #80]
    110c:	ldp	x24, x23, [sp, #64]
    1110:	ldp	x26, x25, [sp, #48]
    1114:	ldr	x27, [sp, #32]
    1118:	ldp	x29, x30, [sp, #16]
    111c:	add	sp, sp, #0x70
    1120:	ret
    1124:	sub	sp, sp, #0x40
    1128:	stp	x29, x30, [sp, #16]
    112c:	stp	x22, x21, [sp, #32]
    1130:	stp	x20, x19, [sp, #48]
    1134:	ldr	w8, [x1]
    1138:	mov	x20, x1
    113c:	mov	x19, x0
    1140:	add	x29, sp, #0x10
    1144:	cmp	w8, #0x5
    1148:	b.hi	1190 <dl_load@@Base+0x7ac>  // b.pmore
    114c:	adrp	x9, 1000 <dl_load@@Base+0x61c>
    1150:	add	x9, x9, #0x740
    1154:	adr	x10, 1164 <dl_load@@Base+0x780>
    1158:	ldrb	w11, [x9, x8]
    115c:	add	x10, x10, x11, lsl #2
    1160:	br	x10
    1164:	mov	w8, #0x5000000             	// #83886080
    1168:	stur	w8, [x29, #-4]
    116c:	b	11cc <dl_load@@Base+0x7e8>
    1170:	stur	wzr, [x29, #-4]
    1174:	b	11cc <dl_load@@Base+0x7e8>
    1178:	mov	w8, #0x3000000             	// #50331648
    117c:	stur	w8, [x29, #-4]
    1180:	b	11cc <dl_load@@Base+0x7e8>
    1184:	mov	w8, #0x4000000             	// #67108864
    1188:	stur	w8, [x29, #-4]
    118c:	b	11cc <dl_load@@Base+0x7e8>
    1190:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1194:	ldr	x8, [x8, #216]
    1198:	stur	wzr, [x29, #-4]
    119c:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    11a0:	ldr	x21, [x9, #224]
    11a4:	ldr	x22, [x8, #104]
    11a8:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    11ac:	add	x1, x1, #0x876
    11b0:	mov	w2, #0x5                   	// #5
    11b4:	mov	x0, xzr
    11b8:	bl	8d0 <dcgettext@plt>
    11bc:	ldr	w2, [x20]
    11c0:	mov	x1, x0
    11c4:	mov	x0, x21
    11c8:	blr	x22
    11cc:	sub	x0, x29, #0x4
    11d0:	mov	w1, #0x1                   	// #1
    11d4:	mov	w2, #0x4                   	// #4
    11d8:	mov	x3, x19
    11dc:	bl	8c0 <fwrite@plt>
    11e0:	cmp	x0, #0x4
    11e4:	b.ne	12ac <dl_load@@Base+0x8c8>  // b.any
    11e8:	ldr	w8, [x20, #16]
    11ec:	add	x0, sp, #0x8
    11f0:	mov	w1, #0x1                   	// #1
    11f4:	mov	w2, #0x4                   	// #4
    11f8:	rev	w8, w8
    11fc:	mov	x3, x19
    1200:	str	w8, [sp, #8]
    1204:	bl	8c0 <fwrite@plt>
    1208:	cmp	x0, #0x4
    120c:	b.ne	12ac <dl_load@@Base+0x8c8>  // b.any
    1210:	ldp	x0, x2, [x20, #8]
    1214:	mov	w1, #0x1                   	// #1
    1218:	mov	x3, x19
    121c:	bl	8c0 <fwrite@plt>
    1220:	ldr	x8, [x20, #16]
    1224:	cmp	x0, x8
    1228:	b.eq	1270 <dl_load@@Base+0x88c>  // b.none
    122c:	b	12ac <dl_load@@Base+0x8c8>
    1230:	mov	w8, #0x1000000             	// #16777216
    1234:	sub	x0, x29, #0x4
    1238:	mov	w1, #0x1                   	// #1
    123c:	mov	w2, #0x4                   	// #4
    1240:	mov	x3, x19
    1244:	stur	w8, [x29, #-4]
    1248:	bl	8c0 <fwrite@plt>
    124c:	cmp	x0, #0x4
    1250:	b.ne	12ac <dl_load@@Base+0x8c8>  // b.any
    1254:	add	x0, x20, #0x8
    1258:	mov	w1, #0x1                   	// #1
    125c:	mov	w2, #0x8                   	// #8
    1260:	mov	x3, x19
    1264:	bl	8c0 <fwrite@plt>
    1268:	cmp	x0, #0x8
    126c:	b.ne	12ac <dl_load@@Base+0x8c8>  // b.any
    1270:	mov	w0, #0x1                   	// #1
    1274:	b	12b0 <dl_load@@Base+0x8cc>
    1278:	mov	w8, #0x2000000             	// #33554432
    127c:	sub	x0, x29, #0x4
    1280:	mov	w1, #0x1                   	// #1
    1284:	mov	w2, #0x4                   	// #4
    1288:	mov	x3, x19
    128c:	stur	w8, [x29, #-4]
    1290:	bl	8c0 <fwrite@plt>
    1294:	cmp	x0, #0x4
    1298:	b.ne	12ac <dl_load@@Base+0x8c8>  // b.any
    129c:	ldr	x1, [x20, #8]
    12a0:	mov	x0, x19
    12a4:	bl	f68 <dl_load@@Base+0x584>
    12a8:	b	12b0 <dl_load@@Base+0x8cc>
    12ac:	mov	w0, wzr
    12b0:	ldp	x20, x19, [sp, #48]
    12b4:	ldp	x22, x21, [sp, #32]
    12b8:	ldp	x29, x30, [sp, #16]
    12bc:	add	sp, sp, #0x40
    12c0:	ret
    12c4:	sub	sp, sp, #0xe0
    12c8:	stp	x29, x30, [sp, #128]
    12cc:	stp	x20, x19, [sp, #208]
    12d0:	add	x29, sp, #0x80
    12d4:	mov	x20, x0
    12d8:	stp	x22, x21, [sp, #192]
    12dc:	mov	x22, x1
    12e0:	sub	x0, x29, #0x8
    12e4:	mov	w1, #0x1                   	// #1
    12e8:	mov	w2, #0x4                   	// #4
    12ec:	mov	x3, x20
    12f0:	stp	x28, x27, [sp, #144]
    12f4:	stp	x26, x25, [sp, #160]
    12f8:	stp	x24, x23, [sp, #176]
    12fc:	bl	8b0 <fread@plt>
    1300:	cmp	x0, #0x4
    1304:	b.ne	1540 <dl_load@@Base+0xb5c>  // b.any
    1308:	ldur	w8, [x29, #-8]
    130c:	mov	w19, wzr
    1310:	rev	w21, w8
    1314:	stur	w21, [x29, #-8]
    1318:	cbz	w8, 1508 <dl_load@@Base+0xb24>
    131c:	add	x8, sp, #0x20
    1320:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
    1324:	adrp	x25, 12000 <dl_load@@Base+0x1161c>
    1328:	adrp	x28, 12000 <dl_load@@Base+0x1161c>
    132c:	add	x9, x8, #0x10
    1330:	add	x24, x8, #0x30
    1334:	stp	x20, x9, [sp, #16]
    1338:	str	w21, [sp, #12]
    133c:	str	x24, [sp]
    1340:	sub	x0, x29, #0x4
    1344:	mov	w1, #0x1                   	// #1
    1348:	mov	w2, #0x4                   	// #4
    134c:	mov	x3, x20
    1350:	bl	8b0 <fread@plt>
    1354:	cmp	x0, #0x4
    1358:	b.ne	1508 <dl_load@@Base+0xb24>  // b.any
    135c:	ldur	w8, [x29, #-4]
    1360:	movi	v0.2d, #0x0
    1364:	stp	q0, q0, [sp, #32]
    1368:	stp	q0, q0, [sp, #64]
    136c:	rev	w27, w8
    1370:	stur	w27, [x29, #-4]
    1374:	str	q0, [sp, #96]
    1378:	cbz	w8, 13b4 <dl_load@@Base+0x9d0>
    137c:	ldr	x0, [x28, #232]
    1380:	cbz	x0, 13c0 <dl_load@@Base+0x9dc>
    1384:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1388:	ldr	w8, [x8, #240]
    138c:	cmp	w8, w27
    1390:	b.cs	1410 <dl_load@@Base+0xa2c>  // b.hs, b.nlast
    1394:	ldr	x8, [x23, #216]
    1398:	mov	w26, w27
    139c:	mov	x1, x26
    13a0:	ldr	x8, [x8, #296]
    13a4:	blr	x8
    13a8:	cbz	x0, 1508 <dl_load@@Base+0xb24>
    13ac:	str	x0, [x28, #232]
    13b0:	b	1404 <dl_load@@Base+0xa20>
    13b4:	ldr	x8, [sp, #24]
    13b8:	stp	q0, q0, [x8]
    13bc:	b	14cc <dl_load@@Base+0xae8>
    13c0:	ldr	x8, [x23, #216]
    13c4:	mov	w26, w27
    13c8:	mov	x0, x26
    13cc:	ldr	x8, [x8, #280]
    13d0:	blr	x8
    13d4:	str	x0, [x28, #232]
    13d8:	cbnz	x0, 1404 <dl_load@@Base+0xa20>
    13dc:	ldr	x8, [x23, #216]
    13e0:	ldr	x0, [x25, #224]
    13e4:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    13e8:	adrp	x2, 1000 <dl_load@@Base+0x61c>
    13ec:	ldr	x8, [x8, #96]
    13f0:	add	x1, x1, #0x929
    13f4:	add	x2, x2, #0x947
    13f8:	mov	w3, w27
    13fc:	blr	x8
    1400:	ldr	x0, [x28, #232]
    1404:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1408:	str	w27, [x8, #240]
    140c:	b	1414 <dl_load@@Base+0xa30>
    1410:	mov	w26, w27
    1414:	mov	w1, #0x1                   	// #1
    1418:	mov	x2, x26
    141c:	mov	x3, x20
    1420:	bl	8b0 <fread@plt>
    1424:	cmp	x0, x26
    1428:	b.ne	1508 <dl_load@@Base+0xb24>  // b.any
    142c:	ldr	x8, [sp, #24]
    1430:	ldr	x21, [x23, #216]
    1434:	movi	v0.2d, #0x0
    1438:	ldr	x23, [x25, #224]
    143c:	stp	q0, q0, [x8]
    1440:	mov	w8, #0x2                   	// #2
    1444:	str	w8, [sp, #48]
    1448:	str	x26, [sp, #64]
    144c:	ldr	x8, [x21, #280]
    1450:	ldr	x27, [x28, #232]
    1454:	mov	x20, x22
    1458:	mov	x22, x25
    145c:	add	x25, x26, #0x1
    1460:	mov	x0, x25
    1464:	mov	x24, x28
    1468:	blr	x8
    146c:	mov	x28, x0
    1470:	cbnz	x0, 1494 <dl_load@@Base+0xab0>
    1474:	ldr	x8, [x21, #96]
    1478:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    147c:	adrp	x2, 1000 <dl_load@@Base+0x61c>
    1480:	mov	x0, x23
    1484:	add	x1, x1, #0x929
    1488:	add	x2, x2, #0x951
    148c:	mov	x3, x25
    1490:	blr	x8
    1494:	mov	x0, x28
    1498:	mov	x1, x27
    149c:	mov	x2, x26
    14a0:	bl	840 <memcpy@plt>
    14a4:	strb	wzr, [x28, x26]
    14a8:	str	x28, [sp, #56]
    14ac:	mov	x8, x20
    14b0:	ldr	w21, [sp, #12]
    14b4:	ldr	x20, [sp, #16]
    14b8:	mov	x28, x24
    14bc:	ldr	x24, [sp]
    14c0:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
    14c4:	mov	x25, x22
    14c8:	mov	x22, x8
    14cc:	mov	x0, x20
    14d0:	mov	x1, x24
    14d4:	bl	1564 <dl_load@@Base+0xb80>
    14d8:	cbz	w0, 1508 <dl_load@@Base+0xb24>
    14dc:	ldr	x8, [x23, #216]
    14e0:	ldr	x0, [x25, #224]
    14e4:	ldr	x2, [sp, #24]
    14e8:	mov	x1, x22
    14ec:	ldr	x8, [x8, #232]
    14f0:	mov	x3, x24
    14f4:	blr	x8
    14f8:	cbz	w0, 1514 <dl_load@@Base+0xb30>
    14fc:	add	w19, w19, #0x1
    1500:	cmp	w19, w21
    1504:	b.cc	1340 <dl_load@@Base+0x95c>  // b.lo, b.ul, b.last
    1508:	cmp	w19, w21
    150c:	cset	w0, eq  // eq = none
    1510:	b	1544 <dl_load@@Base+0xb60>
    1514:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    1518:	ldr	x8, [x8, #4048]
    151c:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    1520:	add	x1, x1, #0x903
    1524:	mov	w2, #0x5                   	// #5
    1528:	ldr	x19, [x8]
    152c:	mov	x0, xzr
    1530:	bl	8d0 <dcgettext@plt>
    1534:	mov	x1, x0
    1538:	mov	x0, x19
    153c:	bl	900 <fprintf@plt>
    1540:	mov	w0, wzr
    1544:	ldp	x20, x19, [sp, #208]
    1548:	ldp	x22, x21, [sp, #192]
    154c:	ldp	x24, x23, [sp, #176]
    1550:	ldp	x26, x25, [sp, #160]
    1554:	ldp	x28, x27, [sp, #144]
    1558:	ldp	x29, x30, [sp, #128]
    155c:	add	sp, sp, #0xe0
    1560:	ret
    1564:	sub	sp, sp, #0x60
    1568:	stp	x29, x30, [sp, #16]
    156c:	stp	x20, x19, [sp, #80]
    1570:	add	x29, sp, #0x10
    1574:	mov	x20, x0
    1578:	mov	x19, x1
    157c:	add	x0, x29, #0x1c
    1580:	mov	w1, #0x1                   	// #1
    1584:	mov	w2, #0x4                   	// #4
    1588:	mov	x3, x20
    158c:	str	x25, [sp, #32]
    1590:	stp	x24, x23, [sp, #48]
    1594:	stp	x22, x21, [sp, #64]
    1598:	bl	8b0 <fread@plt>
    159c:	cmp	x0, #0x4
    15a0:	b.ne	170c <dl_load@@Base+0xd28>  // b.any
    15a4:	ldr	w8, [x29, #28]
    15a8:	rev	w21, w8
    15ac:	cmp	w21, #0x1
    15b0:	str	w21, [x29, #28]
    15b4:	b.eq	15fc <dl_load@@Base+0xc18>  // b.none
    15b8:	cmp	w21, #0x2
    15bc:	b.ne	162c <dl_load@@Base+0xc48>  // b.any
    15c0:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    15c4:	ldr	x8, [x8, #216]
    15c8:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    15cc:	ldr	x0, [x9, #224]
    15d0:	ldr	x8, [x8, #248]
    15d4:	blr	x8
    15d8:	mov	x21, x0
    15dc:	mov	x0, x20
    15e0:	mov	x1, x21
    15e4:	bl	12c4 <dl_load@@Base+0x8e0>
    15e8:	cbz	w0, 170c <dl_load@@Base+0xd28>
    15ec:	mov	w8, #0x5                   	// #5
    15f0:	str	x21, [x19, #8]
    15f4:	str	w8, [x19]
    15f8:	b	16f4 <dl_load@@Base+0xd10>
    15fc:	add	x0, sp, #0x8
    1600:	mov	w1, #0x1                   	// #1
    1604:	mov	w2, #0x8                   	// #8
    1608:	mov	x3, x20
    160c:	mov	w21, #0x1                   	// #1
    1610:	bl	8b0 <fread@plt>
    1614:	cmp	x0, #0x8
    1618:	b.ne	170c <dl_load@@Base+0xd28>  // b.any
    161c:	str	w21, [x19]
    1620:	ldr	x8, [sp, #8]
    1624:	str	x8, [x19, #8]
    1628:	b	1710 <dl_load@@Base+0xd2c>
    162c:	add	x0, sp, #0x8
    1630:	mov	w1, #0x1                   	// #1
    1634:	mov	w2, #0x4                   	// #4
    1638:	mov	x3, x20
    163c:	bl	8b0 <fread@plt>
    1640:	cmp	x0, #0x4
    1644:	b.ne	170c <dl_load@@Base+0xd28>  // b.any
    1648:	ldr	w8, [sp, #8]
    164c:	cmp	w21, #0x6
    1650:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
    1654:	rev	w24, w8
    1658:	str	w24, [sp, #8]
    165c:	b.cs	166c <dl_load@@Base+0xc88>  // b.hs, b.nlast
    1660:	mov	w8, #0x39                  	// #57
    1664:	lsr	w8, w8, w21
    1668:	tbnz	w8, #0, 16a8 <dl_load@@Base+0xcc4>
    166c:	ldr	x8, [x23, #216]
    1670:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    1674:	ldr	x22, [x9, #224]
    1678:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    167c:	ldr	x25, [x8, #104]
    1680:	add	x1, x1, #0x95f
    1684:	mov	w2, #0x5                   	// #5
    1688:	mov	x0, xzr
    168c:	bl	8d0 <dcgettext@plt>
    1690:	mov	x1, x0
    1694:	mov	x0, x22
    1698:	mov	w2, w21
    169c:	blr	x25
    16a0:	mov	w8, #0x2                   	// #2
    16a4:	b	16b4 <dl_load@@Base+0xcd0>
    16a8:	adrp	x8, 1000 <dl_load@@Base+0x61c>
    16ac:	add	x8, x8, #0x9c0
    16b0:	ldr	w8, [x8, w21, sxtw #2]
    16b4:	mov	w21, w24
    16b8:	str	w8, [x19]
    16bc:	str	x21, [x19, #16]
    16c0:	ldr	x8, [x23, #216]
    16c4:	add	w0, w24, #0x1
    16c8:	ldr	x8, [x8, #280]
    16cc:	blr	x8
    16d0:	mov	w1, #0x1                   	// #1
    16d4:	mov	x2, x21
    16d8:	mov	x3, x20
    16dc:	str	x0, [x19, #8]
    16e0:	bl	8b0 <fread@plt>
    16e4:	cmp	x0, x21
    16e8:	b.ne	16fc <dl_load@@Base+0xd18>  // b.any
    16ec:	ldr	x8, [x19, #8]
    16f0:	strb	wzr, [x8, x21]
    16f4:	mov	w21, #0x1                   	// #1
    16f8:	b	1710 <dl_load@@Base+0xd2c>
    16fc:	ldr	x8, [x23, #216]
    1700:	ldr	x0, [x19, #8]
    1704:	ldr	x8, [x8, #304]
    1708:	blr	x8
    170c:	mov	w21, wzr
    1710:	mov	w0, w21
    1714:	ldp	x20, x19, [sp, #80]
    1718:	ldp	x22, x21, [sp, #64]
    171c:	ldp	x24, x23, [sp, #48]
    1720:	ldr	x25, [sp, #32]
    1724:	ldp	x29, x30, [sp, #16]
    1728:	add	sp, sp, #0x60
    172c:	ret

Disassembly of section .fini:

0000000000001730 <.fini>:
    1730:	stp	x29, x30, [sp, #-16]!
    1734:	mov	x29, sp
    1738:	ldp	x29, x30, [sp], #16
    173c:	ret
