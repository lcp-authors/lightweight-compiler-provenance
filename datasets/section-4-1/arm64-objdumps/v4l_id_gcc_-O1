
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//v4l_id_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004008d0 <_init>:
  4008d0:	stp	x29, x30, [sp, #-16]!
  4008d4:	mov	x29, sp
  4008d8:	bl	400a20 <call_weak_fn>
  4008dc:	ldp	x29, x30, [sp], #16
  4008e0:	ret

Disassembly of section .plt:

00000000004008f0 <.plt>:
  4008f0:	stp	x16, x30, [sp, #-16]!
  4008f4:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  4008f8:	ldr	x17, [x16, #3976]
  4008fc:	add	x16, x16, #0xf88
  400900:	br	x17
  400904:	nop
  400908:	nop
  40090c:	nop

0000000000400910 <__libc_start_main@plt>:
  400910:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  400914:	ldr	x17, [x16, #3984]
  400918:	add	x16, x16, #0xf90
  40091c:	br	x17

0000000000400920 <__gmon_start__@plt>:
  400920:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  400924:	ldr	x17, [x16, #3992]
  400928:	add	x16, x16, #0xf98
  40092c:	br	x17

0000000000400930 <putchar@plt>:
  400930:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  400934:	ldr	x17, [x16, #4000]
  400938:	add	x16, x16, #0xfa0
  40093c:	br	x17

0000000000400940 <safe_close@plt>:
  400940:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  400944:	ldr	x17, [x16, #4008]
  400948:	add	x16, x16, #0xfa8
  40094c:	br	x17

0000000000400950 <getopt_long@plt>:
  400950:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  400954:	ldr	x17, [x16, #4016]
  400958:	add	x16, x16, #0xfb0
  40095c:	br	x17

0000000000400960 <log_assert_failed_unreachable_realm@plt>:
  400960:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  400964:	ldr	x17, [x16, #4024]
  400968:	add	x16, x16, #0xfb8
  40096c:	br	x17

0000000000400970 <abort@plt>:
  400970:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  400974:	ldr	x17, [x16, #4032]
  400978:	add	x16, x16, #0xfc0
  40097c:	br	x17

0000000000400980 <__stack_chk_fail@plt>:
  400980:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  400984:	ldr	x17, [x16, #4040]
  400988:	add	x16, x16, #0xfc8
  40098c:	br	x17

0000000000400990 <ioctl@plt>:
  400990:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  400994:	ldr	x17, [x16, #4048]
  400998:	add	x16, x16, #0xfd0
  40099c:	br	x17

00000000004009a0 <puts@plt>:
  4009a0:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  4009a4:	ldr	x17, [x16, #4056]
  4009a8:	add	x16, x16, #0xfd8
  4009ac:	br	x17

00000000004009b0 <printf@plt>:
  4009b0:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  4009b4:	ldr	x17, [x16, #4064]
  4009b8:	add	x16, x16, #0xfe0
  4009bc:	br	x17

00000000004009c0 <open64@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xff80>
  4009c4:	ldr	x17, [x16, #4072]
  4009c8:	add	x16, x16, #0xfe8
  4009cc:	br	x17

Disassembly of section .text:

00000000004009d0 <_start>:
  4009d0:	mov	x29, #0x0                   	// #0
  4009d4:	mov	x30, #0x0                   	// #0
  4009d8:	mov	x5, x0
  4009dc:	ldr	x1, [sp]
  4009e0:	add	x2, sp, #0x8
  4009e4:	mov	x6, sp
  4009e8:	movz	x0, #0x0, lsl #48
  4009ec:	movk	x0, #0x0, lsl #32
  4009f0:	movk	x0, #0x40, lsl #16
  4009f4:	movk	x0, #0xb20
  4009f8:	movz	x3, #0x0, lsl #48
  4009fc:	movk	x3, #0x0, lsl #32
  400a00:	movk	x3, #0x40, lsl #16
  400a04:	movk	x3, #0xd00
  400a08:	movz	x4, #0x0, lsl #48
  400a0c:	movk	x4, #0x0, lsl #32
  400a10:	movk	x4, #0x40, lsl #16
  400a14:	movk	x4, #0xd80
  400a18:	bl	400910 <__libc_start_main@plt>
  400a1c:	bl	400970 <abort@plt>

0000000000400a20 <call_weak_fn>:
  400a20:	adrp	x0, 411000 <__FRAME_END__+0xff80>
  400a24:	ldr	x0, [x0, #4088]
  400a28:	cbz	x0, 400a30 <call_weak_fn+0x10>
  400a2c:	b	400920 <__gmon_start__@plt>
  400a30:	ret

0000000000400a34 <deregister_tm_clones>:
  400a34:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400a38:	add	x0, x0, #0x0
  400a3c:	adrp	x1, 412000 <__progname@@GLIBC_2.17>
  400a40:	add	x1, x1, #0x0
  400a44:	cmp	x0, x1
  400a48:	b.eq	400a7c <deregister_tm_clones+0x48>  // b.none
  400a4c:	stp	x29, x30, [sp, #-32]!
  400a50:	mov	x29, sp
  400a54:	adrp	x0, 400000 <_init-0x8d0>
  400a58:	ldr	x0, [x0, #3480]
  400a5c:	str	x0, [sp, #24]
  400a60:	mov	x1, x0
  400a64:	cbz	x1, 400a74 <deregister_tm_clones+0x40>
  400a68:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400a6c:	add	x0, x0, #0x0
  400a70:	blr	x1
  400a74:	ldp	x29, x30, [sp], #32
  400a78:	ret
  400a7c:	ret

0000000000400a80 <register_tm_clones>:
  400a80:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400a84:	add	x0, x0, #0x0
  400a88:	adrp	x1, 412000 <__progname@@GLIBC_2.17>
  400a8c:	add	x1, x1, #0x0
  400a90:	sub	x0, x0, x1
  400a94:	lsr	x1, x0, #63
  400a98:	add	x0, x1, x0, asr #3
  400a9c:	cmp	xzr, x0, asr #1
  400aa0:	b.eq	400ad8 <register_tm_clones+0x58>  // b.none
  400aa4:	stp	x29, x30, [sp, #-32]!
  400aa8:	mov	x29, sp
  400aac:	asr	x1, x0, #1
  400ab0:	adrp	x0, 400000 <_init-0x8d0>
  400ab4:	ldr	x0, [x0, #3488]
  400ab8:	str	x0, [sp, #24]
  400abc:	mov	x2, x0
  400ac0:	cbz	x2, 400ad0 <register_tm_clones+0x50>
  400ac4:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400ac8:	add	x0, x0, #0x0
  400acc:	blr	x2
  400ad0:	ldp	x29, x30, [sp], #32
  400ad4:	ret
  400ad8:	ret

0000000000400adc <__do_global_dtors_aux>:
  400adc:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400ae0:	ldrb	w0, [x0, #12]
  400ae4:	cbnz	w0, 400b08 <__do_global_dtors_aux+0x2c>
  400ae8:	stp	x29, x30, [sp, #-16]!
  400aec:	mov	x29, sp
  400af0:	bl	400a34 <deregister_tm_clones>
  400af4:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400af8:	mov	w1, #0x1                   	// #1
  400afc:	strb	w1, [x0, #12]
  400b00:	ldp	x29, x30, [sp], #16
  400b04:	ret
  400b08:	ret

0000000000400b0c <frame_dummy>:
  400b0c:	stp	x29, x30, [sp, #-16]!
  400b10:	mov	x29, sp
  400b14:	bl	400a80 <register_tm_clones>
  400b18:	ldp	x29, x30, [sp], #16
  400b1c:	ret

0000000000400b20 <main>:
  400b20:	stp	x29, x30, [sp, #-160]!
  400b24:	mov	x29, sp
  400b28:	stp	x19, x20, [sp, #16]
  400b2c:	str	x21, [sp, #32]
  400b30:	mov	x19, x1
  400b34:	adrp	x2, 411000 <__FRAME_END__+0xff80>
  400b38:	ldr	x3, [x2, #3392]
  400b3c:	str	x3, [sp, #152]
  400b40:	mov	x3, #0x0                   	// #0
  400b44:	mov	x4, #0x0                   	// #0
  400b48:	adrp	x3, 400000 <_init-0x8d0>
  400b4c:	add	x3, x3, #0xee8
  400b50:	adrp	x2, 400000 <_init-0x8d0>
  400b54:	add	x2, x2, #0xda8
  400b58:	bl	400950 <getopt_long@plt>
  400b5c:	tbnz	w0, #31, 400be0 <main+0xc0>
  400b60:	cmp	w0, #0x3f
  400b64:	b.eq	400cdc <main+0x1bc>  // b.none
  400b68:	cmp	w0, #0x68
  400b6c:	b.ne	400bbc <main+0x9c>  // b.any
  400b70:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400b74:	ldr	x1, [x0]
  400b78:	adrp	x0, 400000 <_init-0x8d0>
  400b7c:	add	x0, x0, #0xdb0
  400b80:	bl	4009b0 <printf@plt>
  400b84:	mov	w19, #0xffffffff            	// #-1
  400b88:	mov	w21, #0x0                   	// #0
  400b8c:	mov	w0, w19
  400b90:	bl	400940 <safe_close@plt>
  400b94:	adrp	x1, 411000 <__FRAME_END__+0xff80>
  400b98:	ldr	x0, [sp, #152]
  400b9c:	ldr	x1, [x1, #3392]
  400ba0:	eor	x1, x0, x1
  400ba4:	cbnz	x1, 400cfc <main+0x1dc>
  400ba8:	mov	w0, w21
  400bac:	ldp	x19, x20, [sp, #16]
  400bb0:	ldr	x21, [sp, #32]
  400bb4:	ldp	x29, x30, [sp], #160
  400bb8:	ret
  400bbc:	adrp	x4, 400000 <_init-0x8d0>
  400bc0:	add	x4, x4, #0xee0
  400bc4:	mov	w3, #0x37                  	// #55
  400bc8:	adrp	x2, 400000 <_init-0x8d0>
  400bcc:	add	x2, x2, #0xe13
  400bd0:	adrp	x1, 400000 <_init-0x8d0>
  400bd4:	add	x1, x1, #0xe30
  400bd8:	mov	w0, #0x1                   	// #1
  400bdc:	bl	400960 <log_assert_failed_unreachable_realm@plt>
  400be0:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400be4:	ldrsw	x0, [x0, #8]
  400be8:	ldr	x0, [x19, x0, lsl #3]
  400bec:	cbz	x0, 400ce8 <main+0x1c8>
  400bf0:	mov	w1, #0x0                   	// #0
  400bf4:	bl	4009c0 <open64@plt>
  400bf8:	mov	w19, w0
  400bfc:	tbnz	w0, #31, 400cf4 <main+0x1d4>
  400c00:	add	x2, sp, #0x30
  400c04:	mov	x1, #0x5600                	// #22016
  400c08:	movk	x1, #0x8068, lsl #16
  400c0c:	bl	400990 <ioctl@plt>
  400c10:	mov	w21, w0
  400c14:	cbz	w0, 400c20 <main+0x100>
  400c18:	mov	w21, #0x0                   	// #0
  400c1c:	b	400b8c <main+0x6c>
  400c20:	adrp	x0, 400000 <_init-0x8d0>
  400c24:	add	x0, x0, #0xe48
  400c28:	bl	4009a0 <puts@plt>
  400c2c:	add	x1, sp, #0x40
  400c30:	adrp	x0, 400000 <_init-0x8d0>
  400c34:	add	x0, x0, #0xe60
  400c38:	bl	4009b0 <printf@plt>
  400c3c:	adrp	x0, 400000 <_init-0x8d0>
  400c40:	add	x0, x0, #0xe78
  400c44:	bl	4009b0 <printf@plt>
  400c48:	ldr	w20, [sp, #132]
  400c4c:	tbnz	w20, #31, 400c94 <main+0x174>
  400c50:	tbnz	w20, #0, 400c58 <main+0x138>
  400c54:	tbz	w20, #12, 400c64 <main+0x144>
  400c58:	adrp	x0, 400000 <_init-0x8d0>
  400c5c:	add	x0, x0, #0xe90
  400c60:	bl	4009b0 <printf@plt>
  400c64:	tbnz	w20, #1, 400c6c <main+0x14c>
  400c68:	tbz	w20, #13, 400c78 <main+0x158>
  400c6c:	adrp	x0, 400000 <_init-0x8d0>
  400c70:	add	x0, x0, #0xea0
  400c74:	bl	4009b0 <printf@plt>
  400c78:	tbnz	w20, #2, 400c9c <main+0x17c>
  400c7c:	tbnz	w20, #17, 400cac <main+0x18c>
  400c80:	tbnz	w20, #16, 400cbc <main+0x19c>
  400c84:	tbnz	w20, #18, 400ccc <main+0x1ac>
  400c88:	mov	w0, #0xa                   	// #10
  400c8c:	bl	400930 <putchar@plt>
  400c90:	b	400b8c <main+0x6c>
  400c94:	ldr	w20, [sp, #136]
  400c98:	b	400c50 <main+0x130>
  400c9c:	adrp	x0, 400000 <_init-0x8d0>
  400ca0:	add	x0, x0, #0xeb0
  400ca4:	bl	4009b0 <printf@plt>
  400ca8:	b	400c7c <main+0x15c>
  400cac:	adrp	x0, 400000 <_init-0x8d0>
  400cb0:	add	x0, x0, #0xec0
  400cb4:	bl	4009b0 <printf@plt>
  400cb8:	b	400c80 <main+0x160>
  400cbc:	adrp	x0, 400000 <_init-0x8d0>
  400cc0:	add	x0, x0, #0xec8
  400cc4:	bl	4009b0 <printf@plt>
  400cc8:	b	400c84 <main+0x164>
  400ccc:	adrp	x0, 400000 <_init-0x8d0>
  400cd0:	add	x0, x0, #0xed0
  400cd4:	bl	4009b0 <printf@plt>
  400cd8:	b	400c88 <main+0x168>
  400cdc:	mov	w19, #0xffffffff            	// #-1
  400ce0:	mov	w21, #0xffffffea            	// #-22
  400ce4:	b	400b8c <main+0x6c>
  400ce8:	mov	w19, #0xffffffff            	// #-1
  400cec:	mov	w21, #0x2                   	// #2
  400cf0:	b	400b8c <main+0x6c>
  400cf4:	mov	w21, #0x3                   	// #3
  400cf8:	b	400b8c <main+0x6c>
  400cfc:	bl	400980 <__stack_chk_fail@plt>

0000000000400d00 <__libc_csu_init>:
  400d00:	stp	x29, x30, [sp, #-64]!
  400d04:	mov	x29, sp
  400d08:	stp	x19, x20, [sp, #16]
  400d0c:	adrp	x20, 411000 <__FRAME_END__+0xff80>
  400d10:	add	x20, x20, #0xd38
  400d14:	stp	x21, x22, [sp, #32]
  400d18:	adrp	x21, 411000 <__FRAME_END__+0xff80>
  400d1c:	add	x21, x21, #0xd30
  400d20:	sub	x20, x20, x21
  400d24:	mov	w22, w0
  400d28:	stp	x23, x24, [sp, #48]
  400d2c:	mov	x23, x1
  400d30:	mov	x24, x2
  400d34:	bl	4008d0 <_init>
  400d38:	cmp	xzr, x20, asr #3
  400d3c:	b.eq	400d68 <__libc_csu_init+0x68>  // b.none
  400d40:	asr	x20, x20, #3
  400d44:	mov	x19, #0x0                   	// #0
  400d48:	ldr	x3, [x21, x19, lsl #3]
  400d4c:	mov	x2, x24
  400d50:	add	x19, x19, #0x1
  400d54:	mov	x1, x23
  400d58:	mov	w0, w22
  400d5c:	blr	x3
  400d60:	cmp	x20, x19
  400d64:	b.ne	400d48 <__libc_csu_init+0x48>  // b.any
  400d68:	ldp	x19, x20, [sp, #16]
  400d6c:	ldp	x21, x22, [sp, #32]
  400d70:	ldp	x23, x24, [sp, #48]
  400d74:	ldp	x29, x30, [sp], #64
  400d78:	ret
  400d7c:	nop

0000000000400d80 <__libc_csu_fini>:
  400d80:	ret

Disassembly of section .fini:

0000000000400d84 <_fini>:
  400d84:	stp	x29, x30, [sp, #-16]!
  400d88:	mov	x29, sp
  400d8c:	ldp	x29, x30, [sp], #16
  400d90:	ret
