
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcap.so.2.31_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000019f8 <.init>:
    19f8:	stp	x29, x30, [sp, #-16]!
    19fc:	mov	x29, sp
    1a00:	bl	1d40 <cap_to_name@plt+0x10>
    1a04:	ldp	x29, x30, [sp], #16
    1a08:	ret

Disassembly of section .plt:

0000000000001a10 <removexattr@plt-0x20>:
    1a10:	stp	x16, x30, [sp, #-16]!
    1a14:	adrp	x16, 15000 <cap_set_nsowner@@Base+0x10e0c>
    1a18:	ldr	x17, [x16, #4088]
    1a1c:	add	x16, x16, #0xff8
    1a20:	br	x17
    1a24:	nop
    1a28:	nop
    1a2c:	nop

0000000000001a30 <removexattr@plt>:
    1a30:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1a34:	ldr	x17, [x16]
    1a38:	add	x16, x16, #0x0
    1a3c:	br	x17

0000000000001a40 <setuid@plt>:
    1a40:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #8]
    1a48:	add	x16, x16, #0x8
    1a4c:	br	x17

0000000000001a50 <strtoul@plt>:
    1a50:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #16]
    1a58:	add	x16, x16, #0x10
    1a5c:	br	x17

0000000000001a60 <strlen@plt>:
    1a60:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #24]
    1a68:	add	x16, x16, #0x18
    1a6c:	br	x17

0000000000001a70 <psx_load_syscalls@plt>:
    1a70:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #32]
    1a78:	add	x16, x16, #0x20
    1a7c:	br	x17

0000000000001a80 <cap_get_secbits@plt>:
    1a80:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #40]
    1a88:	add	x16, x16, #0x28
    1a8c:	br	x17

0000000000001a90 <cap_clear_flag@plt>:
    1a90:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #48]
    1a98:	add	x16, x16, #0x30
    1a9c:	br	x17

0000000000001aa0 <cap_max_bits@plt>:
    1aa0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #56]
    1aa8:	add	x16, x16, #0x38
    1aac:	br	x17

0000000000001ab0 <_libcap_strdup@plt>:
    1ab0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #64]
    1ab8:	add	x16, x16, #0x40
    1abc:	br	x17

0000000000001ac0 <cap_get_ambient@plt>:
    1ac0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #72]
    1ac8:	add	x16, x16, #0x48
    1acc:	br	x17

0000000000001ad0 <__cxa_finalize@plt>:
    1ad0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #80]
    1ad8:	add	x16, x16, #0x50
    1adc:	br	x17

0000000000001ae0 <sprintf@plt>:
    1ae0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #88]
    1ae8:	add	x16, x16, #0x58
    1aec:	br	x17

0000000000001af0 <asprintf@plt>:
    1af0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #96]
    1af8:	add	x16, x16, #0x60
    1afc:	br	x17

0000000000001b00 <__ctype_tolower_loc@plt>:
    1b00:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #104]
    1b08:	add	x16, x16, #0x68
    1b0c:	br	x17

0000000000001b10 <capset@plt>:
    1b10:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #112]
    1b18:	add	x16, x16, #0x70
    1b1c:	br	x17

0000000000001b20 <malloc@plt>:
    1b20:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #120]
    1b28:	add	x16, x16, #0x78
    1b2c:	br	x17

0000000000001b30 <cap_set_syscall@plt>:
    1b30:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #128]
    1b38:	add	x16, x16, #0x80
    1b3c:	br	x17

0000000000001b40 <setxattr@plt>:
    1b40:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #136]
    1b48:	add	x16, x16, #0x88
    1b4c:	br	x17

0000000000001b50 <cap_reset_ambient@plt>:
    1b50:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #144]
    1b58:	add	x16, x16, #0x90
    1b5c:	br	x17

0000000000001b60 <cap_get_bound@plt>:
    1b60:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #152]
    1b68:	add	x16, x16, #0x98
    1b6c:	br	x17

0000000000001b70 <memset@plt>:
    1b70:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #160]
    1b78:	add	x16, x16, #0xa0
    1b7c:	br	x17

0000000000001b80 <calloc@plt>:
    1b80:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #168]
    1b88:	add	x16, x16, #0xa8
    1b8c:	br	x17

0000000000001b90 <cap_set_proc@plt>:
    1b90:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #176]
    1b98:	add	x16, x16, #0xb0
    1b9c:	br	x17

0000000000001ba0 <__gmon_start__@plt>:
    1ba0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #184]
    1ba8:	add	x16, x16, #0xb8
    1bac:	br	x17

0000000000001bb0 <fremovexattr@plt>:
    1bb0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #192]
    1bb8:	add	x16, x16, #0xc0
    1bbc:	br	x17

0000000000001bc0 <setgid@plt>:
    1bc0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #200]
    1bc8:	add	x16, x16, #0xc8
    1bcc:	br	x17

0000000000001bd0 <cap_init@plt>:
    1bd0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #208]
    1bd8:	add	x16, x16, #0xd0
    1bdc:	br	x17

0000000000001be0 <getxattr@plt>:
    1be0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #216]
    1be8:	add	x16, x16, #0xd8
    1bec:	br	x17

0000000000001bf0 <memcmp@plt>:
    1bf0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #224]
    1bf8:	add	x16, x16, #0xe0
    1bfc:	br	x17

0000000000001c00 <__ctype_b_loc@plt>:
    1c00:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #232]
    1c08:	add	x16, x16, #0xe8
    1c0c:	br	x17

0000000000001c10 <cap_get_proc@plt>:
    1c10:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #240]
    1c18:	add	x16, x16, #0xf0
    1c1c:	br	x17

0000000000001c20 <__lxstat64@plt>:
    1c20:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #248]
    1c28:	add	x16, x16, #0xf8
    1c2c:	br	x17

0000000000001c30 <cap_drop_bound@plt>:
    1c30:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #256]
    1c38:	add	x16, x16, #0x100
    1c3c:	br	x17

0000000000001c40 <free@plt>:
    1c40:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #264]
    1c48:	add	x16, x16, #0x108
    1c4c:	br	x17

0000000000001c50 <__fxstat64@plt>:
    1c50:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #272]
    1c58:	add	x16, x16, #0x110
    1c5c:	br	x17

0000000000001c60 <fgetxattr@plt>:
    1c60:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #280]
    1c68:	add	x16, x16, #0x118
    1c6c:	br	x17

0000000000001c70 <setgroups@plt>:
    1c70:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #288]
    1c78:	add	x16, x16, #0x120
    1c7c:	br	x17

0000000000001c80 <strcpy@plt>:
    1c80:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #296]
    1c88:	add	x16, x16, #0x128
    1c8c:	br	x17

0000000000001c90 <fsetxattr@plt>:
    1c90:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #304]
    1c98:	add	x16, x16, #0x130
    1c9c:	br	x17

0000000000001ca0 <capgetp@plt>:
    1ca0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #312]
    1ca8:	add	x16, x16, #0x138
    1cac:	br	x17

0000000000001cb0 <cap_free@plt>:
    1cb0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #320]
    1cb8:	add	x16, x16, #0x140
    1cbc:	br	x17

0000000000001cc0 <cap_set_flag@plt>:
    1cc0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #328]
    1cc8:	add	x16, x16, #0x148
    1ccc:	br	x17

0000000000001cd0 <cap_compare@plt>:
    1cd0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #336]
    1cd8:	add	x16, x16, #0x150
    1cdc:	br	x17

0000000000001ce0 <capget@plt>:
    1ce0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #344]
    1ce8:	add	x16, x16, #0x158
    1cec:	br	x17

0000000000001cf0 <cap_set_secbits@plt>:
    1cf0:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #352]
    1cf8:	add	x16, x16, #0x160
    1cfc:	br	x17

0000000000001d00 <__errno_location@plt>:
    1d00:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #360]
    1d08:	add	x16, x16, #0x168
    1d0c:	br	x17

0000000000001d10 <prctl@plt>:
    1d10:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #368]
    1d18:	add	x16, x16, #0x170
    1d1c:	br	x17

0000000000001d20 <syscall@plt>:
    1d20:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #376]
    1d28:	add	x16, x16, #0x178
    1d2c:	br	x17

0000000000001d30 <cap_to_name@plt>:
    1d30:	adrp	x16, 16000 <removexattr@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #384]
    1d38:	add	x16, x16, #0x180
    1d3c:	br	x17

Disassembly of section .text:

0000000000001d40 <cap_max_bits@@Base-0x18c>:
    1d40:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10e0c>
    1d44:	ldr	x0, [x0, #4056]
    1d48:	cbz	x0, 1d50 <cap_to_name@plt+0x20>
    1d4c:	b	1ba0 <__gmon_start__@plt>
    1d50:	ret
    1d54:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1d58:	add	x0, x0, #0x2d8
    1d5c:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1d60:	add	x1, x1, #0x2d8
    1d64:	cmp	x0, x1
    1d68:	b.eq	1d94 <cap_to_name@plt+0x64>  // b.none
    1d6c:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x10e0c>
    1d70:	ldr	x1, [x1, #4040]
    1d74:	cbz	x1, 1d94 <cap_to_name@plt+0x64>
    1d78:	stp	x29, x30, [sp, #-16]!
    1d7c:	mov	x29, sp
    1d80:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1d84:	add	x0, x0, #0x2d8
    1d88:	blr	x1
    1d8c:	ldp	x29, x30, [sp], #16
    1d90:	ret
    1d94:	ret
    1d98:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1d9c:	add	x0, x0, #0x2d8
    1da0:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1da4:	add	x1, x1, #0x2d8
    1da8:	sub	x0, x0, x1
    1dac:	lsr	x1, x0, #63
    1db0:	add	x0, x1, x0, asr #3
    1db4:	cmp	xzr, x0, asr #1
    1db8:	b.eq	1de8 <cap_to_name@plt+0xb8>  // b.none
    1dbc:	asr	x1, x0, #1
    1dc0:	adrp	x2, 15000 <cap_set_nsowner@@Base+0x10e0c>
    1dc4:	ldr	x2, [x2, #4064]
    1dc8:	cbz	x2, 1de8 <cap_to_name@plt+0xb8>
    1dcc:	stp	x29, x30, [sp, #-16]!
    1dd0:	mov	x29, sp
    1dd4:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1dd8:	add	x0, x0, #0x2d8
    1ddc:	blr	x2
    1de0:	ldp	x29, x30, [sp], #16
    1de4:	ret
    1de8:	ret
    1dec:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1df0:	ldrb	w0, [x0, #728]
    1df4:	cbnz	w0, 1e30 <cap_to_name@plt+0x100>
    1df8:	stp	x29, x30, [sp, #-16]!
    1dfc:	mov	x29, sp
    1e00:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10e0c>
    1e04:	ldr	x0, [x0, #4048]
    1e08:	cbz	x0, 1e18 <cap_to_name@plt+0xe8>
    1e0c:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1e10:	ldr	x0, [x0, #392]
    1e14:	bl	1ad0 <__cxa_finalize@plt>
    1e18:	bl	1d54 <cap_to_name@plt+0x24>
    1e1c:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1e20:	mov	w1, #0x1                   	// #1
    1e24:	strb	w1, [x0, #728]
    1e28:	ldp	x29, x30, [sp], #16
    1e2c:	ret
    1e30:	ret
    1e34:	stp	x29, x30, [sp, #-16]!
    1e38:	mov	x29, sp
    1e3c:	bl	1d98 <cap_to_name@plt+0x68>
    1e40:	ldp	x29, x30, [sp], #16
    1e44:	ret
    1e48:	stp	x29, x30, [sp, #-48]!
    1e4c:	mov	x29, sp
    1e50:	stp	x19, x20, [sp, #16]
    1e54:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1e58:	ldr	w20, [x0, #732]
    1e5c:	cbz	w20, 1e6c <cap_to_name@plt+0x13c>
    1e60:	ldp	x19, x20, [sp, #16]
    1e64:	ldp	x29, x30, [sp], #48
    1e68:	ret
    1e6c:	str	x21, [sp, #32]
    1e70:	mov	x1, #0x0                   	// #0
    1e74:	mov	x0, #0x0                   	// #0
    1e78:	bl	1b30 <cap_set_syscall@plt>
    1e7c:	mov	w21, #0x40                  	// #64
    1e80:	b	1e90 <cap_to_name@plt+0x160>
    1e84:	sub	w21, w19, #0x1
    1e88:	cmp	w21, w20
    1e8c:	b.lt	1eb0 <cap_to_name@plt+0x180>  // b.tstop
    1e90:	add	w0, w20, w21
    1e94:	add	w0, w0, w0, lsr #31
    1e98:	asr	w19, w0, #1
    1e9c:	mov	w0, w19
    1ea0:	bl	1b60 <cap_get_bound@plt>
    1ea4:	tbnz	w0, #31, 1e84 <cap_to_name@plt+0x154>
    1ea8:	add	w20, w19, #0x1
    1eac:	b	1e88 <cap_to_name@plt+0x158>
    1eb0:	cmp	w20, #0x0
    1eb4:	mov	w0, #0x26                  	// #38
    1eb8:	csel	w20, w20, w0, ne  // ne = any
    1ebc:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1ec0:	str	w20, [x0, #732]
    1ec4:	ldr	x21, [sp, #32]
    1ec8:	b	1e60 <cap_to_name@plt+0x130>

0000000000001ecc <cap_max_bits@@Base>:
    1ecc:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    1ed0:	ldr	w0, [x0, #732]
    1ed4:	ret

0000000000001ed8 <_libcap_strdup@@Base>:
    1ed8:	stp	x29, x30, [sp, #-32]!
    1edc:	mov	x29, sp
    1ee0:	stp	x19, x20, [sp, #16]
    1ee4:	mov	x20, x0
    1ee8:	cbz	x0, 1f28 <_libcap_strdup@@Base+0x50>
    1eec:	bl	1a60 <strlen@plt>
    1ef0:	add	x0, x0, #0x5
    1ef4:	bl	1b20 <malloc@plt>
    1ef8:	mov	x19, x0
    1efc:	cbz	x0, 1f3c <_libcap_strdup@@Base+0x64>
    1f00:	mov	w0, #0x95d0                	// #38352
    1f04:	movk	w0, #0xca, lsl #16
    1f08:	str	w0, [x19], #4
    1f0c:	mov	x1, x20
    1f10:	mov	x0, x19
    1f14:	bl	1c80 <strcpy@plt>
    1f18:	mov	x0, x19
    1f1c:	ldp	x19, x20, [sp, #16]
    1f20:	ldp	x29, x30, [sp], #32
    1f24:	ret
    1f28:	bl	1d00 <__errno_location@plt>
    1f2c:	mov	w1, #0x16                  	// #22
    1f30:	str	w1, [x0]
    1f34:	mov	x19, x20
    1f38:	b	1f18 <_libcap_strdup@@Base+0x40>
    1f3c:	bl	1d00 <__errno_location@plt>
    1f40:	mov	w1, #0xc                   	// #12
    1f44:	str	w1, [x0]
    1f48:	b	1f18 <_libcap_strdup@@Base+0x40>

0000000000001f4c <cap_free@@Base>:
    1f4c:	cbz	x0, 1fe8 <cap_free@@Base+0x9c>
    1f50:	stp	x29, x30, [sp, #-32]!
    1f54:	mov	x29, sp
    1f58:	str	x19, [sp, #16]
    1f5c:	mov	x19, x0
    1f60:	ldur	w0, [x0, #-4]
    1f64:	mov	w1, #0x90d0                	// #37072
    1f68:	movk	w1, #0xca, lsl #16
    1f6c:	cmp	w0, w1
    1f70:	b.eq	1fb8 <cap_free@@Base+0x6c>  // b.none
    1f74:	mov	w1, #0x95d0                	// #38352
    1f78:	movk	w1, #0xca, lsl #16
    1f7c:	cmp	w0, w1
    1f80:	b.ne	1fd4 <cap_free@@Base+0x88>  // b.any
    1f84:	mov	x0, x19
    1f88:	bl	1a60 <strlen@plt>
    1f8c:	sub	x19, x19, #0x4
    1f90:	add	x2, x0, #0x4
    1f94:	mov	w1, #0x0                   	// #0
    1f98:	mov	x0, x19
    1f9c:	bl	1b70 <memset@plt>
    1fa0:	mov	x0, x19
    1fa4:	bl	1c40 <free@plt>
    1fa8:	mov	w0, #0x0                   	// #0
    1fac:	ldr	x19, [sp, #16]
    1fb0:	ldp	x29, x30, [sp], #32
    1fb4:	ret
    1fb8:	sub	x0, x19, #0x4
    1fbc:	stp	xzr, xzr, [x0]
    1fc0:	stp	xzr, xzr, [x0, #16]
    1fc4:	str	xzr, [x0, #32]
    1fc8:	bl	1c40 <free@plt>
    1fcc:	mov	w0, #0x0                   	// #0
    1fd0:	b	1fac <cap_free@@Base+0x60>
    1fd4:	bl	1d00 <__errno_location@plt>
    1fd8:	mov	w1, #0x16                  	// #22
    1fdc:	str	w1, [x0]
    1fe0:	mov	w0, #0xffffffff            	// #-1
    1fe4:	b	1fac <cap_free@@Base+0x60>
    1fe8:	mov	w0, #0x0                   	// #0
    1fec:	ret

0000000000001ff0 <cap_init@@Base>:
    1ff0:	stp	x29, x30, [sp, #-32]!
    1ff4:	mov	x29, sp
    1ff8:	stp	x19, x20, [sp, #16]
    1ffc:	mov	x1, #0x28                  	// #40
    2000:	mov	x0, #0x1                   	// #1
    2004:	bl	1b80 <calloc@plt>
    2008:	mov	x19, x0
    200c:	cbz	x0, 2088 <cap_init@@Base+0x98>
    2010:	mov	x20, x0
    2014:	mov	w0, #0x90d0                	// #37072
    2018:	movk	w0, #0xca, lsl #16
    201c:	str	w0, [x20], #4
    2020:	mov	w0, #0x522                 	// #1314
    2024:	movk	w0, #0x2008, lsl #16
    2028:	str	w0, [x19, #4]
    202c:	mov	x1, #0x0                   	// #0
    2030:	mov	x0, x20
    2034:	bl	1ce0 <capget@plt>
    2038:	ldr	w0, [x19, #4]
    203c:	mov	w1, #0x1026                	// #4134
    2040:	movk	w1, #0x2007, lsl #16
    2044:	cmp	w0, w1
    2048:	b.eq	2078 <cap_init@@Base+0x88>  // b.none
    204c:	mov	w1, #0x522                 	// #1314
    2050:	movk	w1, #0x2008, lsl #16
    2054:	cmp	w0, w1
    2058:	b.eq	2078 <cap_init@@Base+0x88>  // b.none
    205c:	mov	w1, #0x330                 	// #816
    2060:	movk	w1, #0x1998, lsl #16
    2064:	cmp	w0, w1
    2068:	b.eq	2078 <cap_init@@Base+0x88>  // b.none
    206c:	mov	x0, x20
    2070:	bl	1cb0 <cap_free@plt>
    2074:	mov	x20, #0x0                   	// #0
    2078:	mov	x0, x20
    207c:	ldp	x19, x20, [sp, #16]
    2080:	ldp	x29, x30, [sp], #32
    2084:	ret
    2088:	bl	1d00 <__errno_location@plt>
    208c:	mov	w1, #0xc                   	// #12
    2090:	str	w1, [x0]
    2094:	mov	x20, x19
    2098:	b	2078 <cap_init@@Base+0x88>

000000000000209c <cap_dup@@Base>:
    209c:	stp	x29, x30, [sp, #-32]!
    20a0:	mov	x29, sp
    20a4:	cbz	x0, 20f0 <cap_dup@@Base+0x54>
    20a8:	str	x19, [sp, #16]
    20ac:	mov	x19, x0
    20b0:	ldur	w1, [x0, #-4]
    20b4:	mov	w0, #0x90d0                	// #37072
    20b8:	movk	w0, #0xca, lsl #16
    20bc:	cmp	w1, w0
    20c0:	b.ne	20ec <cap_dup@@Base+0x50>  // b.any
    20c4:	bl	1bd0 <cap_init@plt>
    20c8:	cbz	x0, 2108 <cap_dup@@Base+0x6c>
    20cc:	ldp	x2, x3, [x19]
    20d0:	stp	x2, x3, [x0]
    20d4:	ldp	x2, x3, [x19, #16]
    20d8:	stp	x2, x3, [x0, #16]
    20dc:	ldr	w1, [x19, #32]
    20e0:	str	w1, [x0, #32]
    20e4:	ldr	x19, [sp, #16]
    20e8:	b	2100 <cap_dup@@Base+0x64>
    20ec:	ldr	x19, [sp, #16]
    20f0:	bl	1d00 <__errno_location@plt>
    20f4:	mov	w1, #0x16                  	// #22
    20f8:	str	w1, [x0]
    20fc:	mov	x0, #0x0                   	// #0
    2100:	ldp	x29, x30, [sp], #32
    2104:	ret
    2108:	ldr	x19, [sp, #16]
    210c:	b	2100 <cap_dup@@Base+0x64>
    2110:	stp	x29, x30, [sp, #-16]!
    2114:	mov	x29, sp
    2118:	adrp	x3, 16000 <cap_set_nsowner@@Base+0x11e0c>
    211c:	ldr	x4, [x3, #408]
    2120:	mov	x3, x2
    2124:	mov	x2, x1
    2128:	mov	x1, x0
    212c:	mov	x0, #0xa7                  	// #167
    2130:	blr	x4
    2134:	ldp	x29, x30, [sp], #16
    2138:	ret
    213c:	stp	x29, x30, [sp, #-16]!
    2140:	mov	x29, sp
    2144:	bl	1d20 <syscall@plt>
    2148:	ldp	x29, x30, [sp], #16
    214c:	ret
    2150:	stp	x29, x30, [sp, #-16]!
    2154:	mov	x29, sp
    2158:	bl	1d20 <syscall@plt>
    215c:	ldp	x29, x30, [sp], #16
    2160:	ret

0000000000002164 <psx_load_syscalls@@Base>:
    2164:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    2168:	str	wzr, [x0, #400]
    216c:	ret

0000000000002170 <cap_set_syscall@@Base>:
    2170:	cbz	x0, 2188 <cap_set_syscall@@Base+0x18>
    2174:	adrp	x2, 16000 <cap_set_nsowner@@Base+0x11e0c>
    2178:	add	x3, x2, #0x198
    217c:	str	x0, [x2, #408]
    2180:	str	x1, [x3, #8]
    2184:	ret
    2188:	stp	x29, x30, [sp, #-16]!
    218c:	mov	x29, sp
    2190:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    2194:	add	x0, x0, #0x198
    2198:	add	x1, x0, #0x8
    219c:	bl	1a70 <psx_load_syscalls@plt>
    21a0:	ldp	x29, x30, [sp], #16
    21a4:	ret

00000000000021a8 <cap_get_proc@@Base>:
    21a8:	stp	x29, x30, [sp, #-32]!
    21ac:	mov	x29, sp
    21b0:	str	x19, [sp, #16]
    21b4:	bl	1bd0 <cap_init@plt>
    21b8:	mov	x19, x0
    21bc:	cbz	x0, 21cc <cap_get_proc@@Base+0x24>
    21c0:	add	x1, x0, #0x8
    21c4:	bl	1ce0 <capget@plt>
    21c8:	cbnz	w0, 21dc <cap_get_proc@@Base+0x34>
    21cc:	mov	x0, x19
    21d0:	ldr	x19, [sp, #16]
    21d4:	ldp	x29, x30, [sp], #32
    21d8:	ret
    21dc:	mov	x0, x19
    21e0:	bl	1cb0 <cap_free@plt>
    21e4:	mov	x19, #0x0                   	// #0
    21e8:	b	21cc <cap_get_proc@@Base+0x24>

00000000000021ec <cap_set_proc@@Base>:
    21ec:	stp	x29, x30, [sp, #-16]!
    21f0:	mov	x29, sp
    21f4:	cbz	x0, 2230 <cap_set_proc@@Base+0x44>
    21f8:	mov	x1, x0
    21fc:	ldur	w2, [x0, #-4]
    2200:	mov	w0, #0x90d0                	// #37072
    2204:	movk	w0, #0xca, lsl #16
    2208:	cmp	w2, w0
    220c:	b.ne	2230 <cap_set_proc@@Base+0x44>  // b.any
    2210:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    2214:	ldr	x4, [x0, #408]
    2218:	mov	x3, #0x0                   	// #0
    221c:	add	x2, x1, #0x8
    2220:	mov	x0, #0x5b                  	// #91
    2224:	blr	x4
    2228:	ldp	x29, x30, [sp], #16
    222c:	ret
    2230:	bl	1d00 <__errno_location@plt>
    2234:	mov	w1, #0x16                  	// #22
    2238:	str	w1, [x0]
    223c:	mov	w0, #0xffffffff            	// #-1
    2240:	b	2228 <cap_set_proc@@Base+0x3c>

0000000000002244 <capgetp@@Base>:
    2244:	stp	x29, x30, [sp, #-32]!
    2248:	mov	x29, sp
    224c:	cbz	x1, 2290 <capgetp@@Base+0x4c>
    2250:	str	x19, [sp, #16]
    2254:	mov	x19, x1
    2258:	ldur	w2, [x1, #-4]
    225c:	mov	w1, #0x90d0                	// #37072
    2260:	movk	w1, #0xca, lsl #16
    2264:	cmp	w2, w1
    2268:	b.ne	228c <capgetp@@Base+0x48>  // b.any
    226c:	str	w0, [x19, #4]
    2270:	add	x1, x19, #0x8
    2274:	mov	x0, x19
    2278:	bl	1ce0 <capget@plt>
    227c:	str	wzr, [x19, #4]
    2280:	ldr	x19, [sp, #16]
    2284:	ldp	x29, x30, [sp], #32
    2288:	ret
    228c:	ldr	x19, [sp, #16]
    2290:	bl	1d00 <__errno_location@plt>
    2294:	mov	w1, #0x16                  	// #22
    2298:	str	w1, [x0]
    229c:	mov	w0, #0xffffffff            	// #-1
    22a0:	b	2284 <capgetp@@Base+0x40>

00000000000022a4 <cap_get_pid@@Base>:
    22a4:	stp	x29, x30, [sp, #-48]!
    22a8:	mov	x29, sp
    22ac:	stp	x19, x20, [sp, #16]
    22b0:	mov	w20, w0
    22b4:	bl	1bd0 <cap_init@plt>
    22b8:	mov	x19, x0
    22bc:	cbz	x0, 22d0 <cap_get_pid@@Base+0x2c>
    22c0:	mov	x1, x0
    22c4:	mov	w0, w20
    22c8:	bl	1ca0 <capgetp@plt>
    22cc:	cbnz	w0, 22e0 <cap_get_pid@@Base+0x3c>
    22d0:	mov	x0, x19
    22d4:	ldp	x19, x20, [sp, #16]
    22d8:	ldp	x29, x30, [sp], #48
    22dc:	ret
    22e0:	str	x21, [sp, #32]
    22e4:	bl	1d00 <__errno_location@plt>
    22e8:	mov	x20, x0
    22ec:	ldr	w21, [x0]
    22f0:	mov	x0, x19
    22f4:	bl	1cb0 <cap_free@plt>
    22f8:	str	w21, [x20]
    22fc:	mov	x19, #0x0                   	// #0
    2300:	ldr	x21, [sp, #32]
    2304:	b	22d0 <cap_get_pid@@Base+0x2c>

0000000000002308 <capsetp@@Base>:
    2308:	stp	x29, x30, [sp, #-32]!
    230c:	mov	x29, sp
    2310:	cbz	x1, 2360 <capsetp@@Base+0x58>
    2314:	str	x19, [sp, #16]
    2318:	mov	x19, x1
    231c:	ldur	w2, [x1, #-4]
    2320:	mov	w1, #0x90d0                	// #37072
    2324:	movk	w1, #0xca, lsl #16
    2328:	cmp	w2, w1
    232c:	b.ne	235c <capsetp@@Base+0x54>  // b.any
    2330:	str	w0, [x19, #4]
    2334:	add	x1, x19, #0x8
    2338:	mov	x0, x19
    233c:	bl	1b10 <capset@plt>
    2340:	mov	w1, #0x522                 	// #1314
    2344:	movk	w1, #0x2008, lsl #16
    2348:	str	w1, [x19]
    234c:	str	wzr, [x19, #4]
    2350:	ldr	x19, [sp, #16]
    2354:	ldp	x29, x30, [sp], #32
    2358:	ret
    235c:	ldr	x19, [sp, #16]
    2360:	bl	1d00 <__errno_location@plt>
    2364:	mov	w1, #0x16                  	// #22
    2368:	str	w1, [x0]
    236c:	mov	w0, #0xffffffff            	// #-1
    2370:	b	2354 <capsetp@@Base+0x4c>

0000000000002374 <cap_get_bound@@Base>:
    2374:	stp	x29, x30, [sp, #-32]!
    2378:	mov	x29, sp
    237c:	str	x19, [sp, #16]
    2380:	mov	x2, #0x0                   	// #0
    2384:	sxtw	x1, w0
    2388:	mov	x0, #0x17                  	// #23
    238c:	bl	2110 <cap_dup@@Base+0x74>
    2390:	mov	w19, w0
    2394:	tbnz	w0, #31, 23a8 <cap_get_bound@@Base+0x34>
    2398:	mov	w0, w19
    239c:	ldr	x19, [sp, #16]
    23a0:	ldp	x29, x30, [sp], #32
    23a4:	ret
    23a8:	bl	1d00 <__errno_location@plt>
    23ac:	neg	w19, w19
    23b0:	str	w19, [x0]
    23b4:	mov	w19, #0xffffffff            	// #-1
    23b8:	b	2398 <cap_get_bound@@Base+0x24>

00000000000023bc <cap_drop_bound@@Base>:
    23bc:	stp	x29, x30, [sp, #-32]!
    23c0:	mov	x29, sp
    23c4:	str	x19, [sp, #16]
    23c8:	mov	x2, #0x0                   	// #0
    23cc:	sxtw	x1, w0
    23d0:	mov	x0, #0x18                  	// #24
    23d4:	bl	2110 <cap_dup@@Base+0x74>
    23d8:	mov	w19, w0
    23dc:	tbnz	w0, #31, 23f0 <cap_drop_bound@@Base+0x34>
    23e0:	mov	w0, w19
    23e4:	ldr	x19, [sp, #16]
    23e8:	ldp	x29, x30, [sp], #32
    23ec:	ret
    23f0:	bl	1d00 <__errno_location@plt>
    23f4:	neg	w19, w19
    23f8:	str	w19, [x0]
    23fc:	mov	w19, #0xffffffff            	// #-1
    2400:	b	23e0 <cap_drop_bound@@Base+0x24>

0000000000002404 <cap_get_ambient@@Base>:
    2404:	stp	x29, x30, [sp, #-32]!
    2408:	mov	x29, sp
    240c:	str	x19, [sp, #16]
    2410:	mov	x4, #0x0                   	// #0
    2414:	mov	x3, #0x0                   	// #0
    2418:	sxtw	x2, w0
    241c:	mov	x1, #0x1                   	// #1
    2420:	mov	w0, #0x2f                  	// #47
    2424:	bl	1d10 <prctl@plt>
    2428:	mov	w19, w0
    242c:	tbnz	w0, #31, 2440 <cap_get_ambient@@Base+0x3c>
    2430:	mov	w0, w19
    2434:	ldr	x19, [sp, #16]
    2438:	ldp	x29, x30, [sp], #32
    243c:	ret
    2440:	bl	1d00 <__errno_location@plt>
    2444:	neg	w19, w19
    2448:	str	w19, [x0]
    244c:	mov	w19, #0xffffffff            	// #-1
    2450:	b	2430 <cap_get_ambient@@Base+0x2c>

0000000000002454 <cap_set_ambient@@Base>:
    2454:	stp	x29, x30, [sp, #-32]!
    2458:	mov	x29, sp
    245c:	cbz	w1, 247c <cap_set_ambient@@Base+0x28>
    2460:	cmp	w1, #0x1
    2464:	b.eq	2488 <cap_set_ambient@@Base+0x34>  // b.none
    2468:	bl	1d00 <__errno_location@plt>
    246c:	mov	w1, #0x16                  	// #22
    2470:	str	w1, [x0]
    2474:	mov	w0, #0xffffffff            	// #-1
    2478:	b	24c4 <cap_set_ambient@@Base+0x70>
    247c:	str	x19, [sp, #16]
    2480:	mov	w2, #0x3                   	// #3
    2484:	b	2490 <cap_set_ambient@@Base+0x3c>
    2488:	str	x19, [sp, #16]
    248c:	mov	w2, #0x2                   	// #2
    2490:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11e0c>
    2494:	ldr	x7, [x1, #416]
    2498:	mov	x6, #0x0                   	// #0
    249c:	mov	x5, #0x0                   	// #0
    24a0:	mov	x4, #0x0                   	// #0
    24a4:	sxtw	x3, w0
    24a8:	sxtw	x2, w2
    24ac:	mov	x1, #0x2f                  	// #47
    24b0:	mov	x0, #0xa7                  	// #167
    24b4:	blr	x7
    24b8:	mov	x19, x0
    24bc:	tbnz	w0, #31, 24cc <cap_set_ambient@@Base+0x78>
    24c0:	ldr	x19, [sp, #16]
    24c4:	ldp	x29, x30, [sp], #32
    24c8:	ret
    24cc:	bl	1d00 <__errno_location@plt>
    24d0:	neg	w19, w19
    24d4:	str	w19, [x0]
    24d8:	mov	w0, #0xffffffff            	// #-1
    24dc:	ldr	x19, [sp, #16]
    24e0:	b	24c4 <cap_set_ambient@@Base+0x70>

00000000000024e4 <cap_reset_ambient@@Base>:
    24e4:	stp	x29, x30, [sp, #-48]!
    24e8:	mov	x29, sp
    24ec:	stp	x19, x20, [sp, #16]
    24f0:	str	x21, [sp, #32]
    24f4:	bl	1d00 <__errno_location@plt>
    24f8:	mov	x20, x0
    24fc:	ldr	w21, [x0]
    2500:	mov	w19, #0x0                   	// #0
    2504:	mov	w0, w19
    2508:	bl	1ac0 <cap_get_ambient@plt>
    250c:	cmn	w0, #0x1
    2510:	b.eq	2558 <cap_reset_ambient@@Base+0x74>  // b.none
    2514:	add	w19, w19, #0x1
    2518:	cbz	w0, 2504 <cap_reset_ambient@@Base+0x20>
    251c:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    2520:	ldr	x7, [x0, #416]
    2524:	mov	x6, #0x0                   	// #0
    2528:	mov	x5, #0x0                   	// #0
    252c:	mov	x4, #0x0                   	// #0
    2530:	mov	x3, #0x0                   	// #0
    2534:	mov	x2, #0x4                   	// #4
    2538:	mov	x1, #0x2f                  	// #47
    253c:	mov	x0, #0xa7                  	// #167
    2540:	blr	x7
    2544:	tbnz	w0, #31, 2564 <cap_reset_ambient@@Base+0x80>
    2548:	ldp	x19, x20, [sp, #16]
    254c:	ldr	x21, [sp, #32]
    2550:	ldp	x29, x30, [sp], #48
    2554:	ret
    2558:	str	w21, [x20]
    255c:	mov	w0, #0x0                   	// #0
    2560:	b	2548 <cap_reset_ambient@@Base+0x64>
    2564:	neg	w1, w0
    2568:	str	w1, [x20]
    256c:	mov	w0, #0xffffffff            	// #-1
    2570:	b	2548 <cap_reset_ambient@@Base+0x64>

0000000000002574 <cap_get_secbits@@Base>:
    2574:	stp	x29, x30, [sp, #-16]!
    2578:	mov	x29, sp
    257c:	mov	x2, #0x0                   	// #0
    2580:	mov	x1, #0x0                   	// #0
    2584:	mov	w0, #0x1b                  	// #27
    2588:	bl	1d10 <prctl@plt>
    258c:	ldp	x29, x30, [sp], #16
    2590:	ret

0000000000002594 <cap_set_secbits@@Base>:
    2594:	stp	x29, x30, [sp, #-16]!
    2598:	mov	x29, sp
    259c:	mov	x2, #0x0                   	// #0
    25a0:	mov	w1, w0
    25a4:	mov	x0, #0x1c                  	// #28
    25a8:	bl	2110 <cap_dup@@Base+0x74>
    25ac:	ldp	x29, x30, [sp], #16
    25b0:	ret

00000000000025b4 <cap_set_mode@@Base>:
    25b4:	stp	x29, x30, [sp, #-64]!
    25b8:	mov	x29, sp
    25bc:	stp	x19, x20, [sp, #16]
    25c0:	str	x21, [sp, #32]
    25c4:	mov	w21, w0
    25c8:	mov	w0, #0x8                   	// #8
    25cc:	str	w0, [sp, #56]
    25d0:	bl	1c10 <cap_get_proc@plt>
    25d4:	mov	x19, x0
    25d8:	mov	w4, #0x1                   	// #1
    25dc:	add	x3, sp, #0x38
    25e0:	mov	w2, w4
    25e4:	mov	w1, #0x0                   	// #0
    25e8:	bl	1cc0 <cap_set_flag@plt>
    25ec:	mov	w20, w0
    25f0:	mov	x0, x19
    25f4:	bl	1b90 <cap_set_proc@plt>
    25f8:	orr	w20, w0, w20
    25fc:	cbnz	w20, 2658 <cap_set_mode@@Base+0xa4>
    2600:	cmp	w21, #0x2
    2604:	b.ls	2644 <cap_set_mode@@Base+0x90>  // b.plast
    2608:	cmp	w21, #0x3
    260c:	b.ne	2648 <cap_set_mode@@Base+0x94>  // b.any
    2610:	mov	w0, #0x0                   	// #0
    2614:	bl	1ac0 <cap_get_ambient@plt>
    2618:	tbnz	w0, #31, 26d4 <cap_set_mode@@Base+0x120>
    261c:	bl	1b50 <cap_reset_ambient@plt>
    2620:	mov	w20, w0
    2624:	mov	w0, #0xef                  	// #239
    2628:	cbnz	w20, 2658 <cap_set_mode@@Base+0xa4>
    262c:	bl	1cf0 <cap_set_secbits@plt>
    2630:	mov	w20, w0
    2634:	cmp	w21, #0x1
    2638:	b.ne	2658 <cap_set_mode@@Base+0xa4>  // b.any
    263c:	mov	w21, #0x0                   	// #0
    2640:	b	26b8 <cap_set_mode@@Base+0x104>
    2644:	cbnz	w21, 268c <cap_set_mode@@Base+0xd8>
    2648:	bl	1d00 <__errno_location@plt>
    264c:	mov	w1, #0x16                  	// #22
    2650:	str	w1, [x0]
    2654:	mov	w20, #0xffffffff            	// #-1
    2658:	mov	w1, #0x0                   	// #0
    265c:	mov	x0, x19
    2660:	bl	1a90 <cap_clear_flag@plt>
    2664:	mov	x0, x19
    2668:	bl	1b90 <cap_set_proc@plt>
    266c:	orr	w20, w0, w20
    2670:	mov	x0, x19
    2674:	bl	1cb0 <cap_free@plt>
    2678:	mov	w0, w20
    267c:	ldp	x19, x20, [sp, #16]
    2680:	ldr	x21, [sp, #32]
    2684:	ldp	x29, x30, [sp], #64
    2688:	ret
    268c:	mov	w1, #0x2                   	// #2
    2690:	mov	x0, x19
    2694:	bl	1a90 <cap_clear_flag@plt>
    2698:	mov	w0, #0x0                   	// #0
    269c:	bl	1ac0 <cap_get_ambient@plt>
    26a0:	tbz	w0, #31, 261c <cap_set_mode@@Base+0x68>
    26a4:	mov	w0, #0x2f                  	// #47
    26a8:	b	262c <cap_set_mode@@Base+0x78>
    26ac:	mov	w0, w21
    26b0:	bl	1c30 <cap_drop_bound@plt>
    26b4:	add	w21, w21, #0x1
    26b8:	mov	w0, w21
    26bc:	bl	1b60 <cap_get_bound@plt>
    26c0:	tbz	w0, #31, 26ac <cap_set_mode@@Base+0xf8>
    26c4:	mov	w1, #0x1                   	// #1
    26c8:	mov	x0, x19
    26cc:	bl	1a90 <cap_clear_flag@plt>
    26d0:	b	2658 <cap_set_mode@@Base+0xa4>
    26d4:	mov	w0, #0x2f                  	// #47
    26d8:	bl	1cf0 <cap_set_secbits@plt>
    26dc:	mov	w20, w0
    26e0:	b	2658 <cap_set_mode@@Base+0xa4>

00000000000026e4 <cap_get_mode@@Base>:
    26e4:	stp	x29, x30, [sp, #-48]!
    26e8:	mov	x29, sp
    26ec:	stp	x19, x20, [sp, #16]
    26f0:	bl	1a80 <cap_get_secbits@plt>
    26f4:	mov	w20, w0
    26f8:	mov	w1, #0x2f                  	// #47
    26fc:	and	w1, w0, w1
    2700:	mov	w0, #0x0                   	// #0
    2704:	cmp	w1, #0x2f
    2708:	b.ne	27c0 <cap_get_mode@@Base+0xdc>  // b.any
    270c:	stp	x21, x22, [sp, #32]
    2710:	bl	1d00 <__errno_location@plt>
    2714:	mov	x21, x0
    2718:	ldr	w22, [x0]
    271c:	mov	w19, #0x0                   	// #0
    2720:	b	27a4 <cap_get_mode@@Base+0xc0>
    2724:	str	w22, [x21]
    2728:	cmp	w20, #0xef
    272c:	mov	w0, #0x0                   	// #0
    2730:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    2734:	b.ne	2798 <cap_get_mode@@Base+0xb4>  // b.any
    2738:	bl	1c10 <cap_get_proc@plt>
    273c:	mov	x19, x0
    2740:	bl	1bd0 <cap_init@plt>
    2744:	mov	x21, x0
    2748:	mov	x1, x19
    274c:	bl	1cd0 <cap_compare@plt>
    2750:	mov	w20, w0
    2754:	mov	x0, x21
    2758:	bl	1cb0 <cap_free@plt>
    275c:	mov	x0, x19
    2760:	bl	1cb0 <cap_free@plt>
    2764:	mov	w0, #0x3                   	// #3
    2768:	and	w19, w20, #0x4
    276c:	tbnz	w20, #2, 27e4 <cap_get_mode@@Base+0x100>
    2770:	mov	w0, #0x2                   	// #2
    2774:	tst	x20, #0x3
    2778:	b.ne	27ec <cap_get_mode@@Base+0x108>  // b.any
    277c:	mov	w0, w19
    2780:	bl	1b60 <cap_get_bound@plt>
    2784:	cmn	w0, #0x1
    2788:	b.eq	27cc <cap_get_mode@@Base+0xe8>  // b.none
    278c:	cbnz	w0, 27d8 <cap_get_mode@@Base+0xf4>
    2790:	add	w19, w19, #0x1
    2794:	b	277c <cap_get_mode@@Base+0x98>
    2798:	ldp	x21, x22, [sp, #32]
    279c:	b	27c0 <cap_get_mode@@Base+0xdc>
    27a0:	add	w19, w19, #0x1
    27a4:	mov	w0, w19
    27a8:	bl	1ac0 <cap_get_ambient@plt>
    27ac:	cmn	w0, #0x1
    27b0:	b.eq	2724 <cap_get_mode@@Base+0x40>  // b.none
    27b4:	cbz	w0, 27a0 <cap_get_mode@@Base+0xbc>
    27b8:	mov	w0, #0x0                   	// #0
    27bc:	ldp	x21, x22, [sp, #32]
    27c0:	ldp	x19, x20, [sp, #16]
    27c4:	ldp	x29, x30, [sp], #48
    27c8:	ret
    27cc:	mov	w0, #0x1                   	// #1
    27d0:	ldp	x21, x22, [sp, #32]
    27d4:	b	27c0 <cap_get_mode@@Base+0xdc>
    27d8:	mov	w0, #0x2                   	// #2
    27dc:	ldp	x21, x22, [sp, #32]
    27e0:	b	27c0 <cap_get_mode@@Base+0xdc>
    27e4:	ldp	x21, x22, [sp, #32]
    27e8:	b	27c0 <cap_get_mode@@Base+0xdc>
    27ec:	ldp	x21, x22, [sp, #32]
    27f0:	b	27c0 <cap_get_mode@@Base+0xdc>

00000000000027f4 <cap_setuid@@Base>:
    27f4:	stp	x29, x30, [sp, #-64]!
    27f8:	mov	x29, sp
    27fc:	stp	x19, x20, [sp, #16]
    2800:	stp	x21, x22, [sp, #32]
    2804:	mov	w21, w0
    2808:	mov	w0, #0x7                   	// #7
    280c:	str	w0, [sp, #56]
    2810:	bl	1c10 <cap_get_proc@plt>
    2814:	mov	x19, x0
    2818:	mov	w4, #0x1                   	// #1
    281c:	add	x3, sp, #0x38
    2820:	mov	w2, w4
    2824:	mov	w1, #0x0                   	// #0
    2828:	bl	1cc0 <cap_set_flag@plt>
    282c:	mov	x2, #0x0                   	// #0
    2830:	mov	x1, #0x1                   	// #1
    2834:	mov	x0, #0x8                   	// #8
    2838:	bl	2110 <cap_dup@@Base+0x74>
    283c:	mov	x0, x19
    2840:	bl	1b90 <cap_set_proc@plt>
    2844:	mov	w20, w0
    2848:	cbnz	w0, 2880 <cap_setuid@@Base+0x8c>
    284c:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    2850:	ldr	w0, [x0, #400]
    2854:	cbz	w0, 28e4 <cap_setuid@@Base+0xf0>
    2858:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    285c:	ldr	x4, [x0, #408]
    2860:	mov	x3, #0x0                   	// #0
    2864:	mov	x2, #0x0                   	// #0
    2868:	mov	w1, w21
    286c:	mov	x0, #0x92                  	// #146
    2870:	blr	x4
    2874:	mov	x21, x0
    2878:	mov	w20, w0
    287c:	tbnz	w0, #31, 28d0 <cap_setuid@@Base+0xdc>
    2880:	bl	1d00 <__errno_location@plt>
    2884:	mov	x21, x0
    2888:	ldr	w22, [x0]
    288c:	mov	x2, #0x0                   	// #0
    2890:	mov	x1, #0x0                   	// #0
    2894:	mov	x0, #0x8                   	// #8
    2898:	bl	2110 <cap_dup@@Base+0x74>
    289c:	mov	w1, #0x0                   	// #0
    28a0:	mov	x0, x19
    28a4:	bl	1a90 <cap_clear_flag@plt>
    28a8:	mov	x0, x19
    28ac:	bl	1b90 <cap_set_proc@plt>
    28b0:	mov	x0, x19
    28b4:	bl	1cb0 <cap_free@plt>
    28b8:	str	w22, [x21]
    28bc:	mov	w0, w20
    28c0:	ldp	x19, x20, [sp, #16]
    28c4:	ldp	x21, x22, [sp, #32]
    28c8:	ldp	x29, x30, [sp], #64
    28cc:	ret
    28d0:	bl	1d00 <__errno_location@plt>
    28d4:	neg	w21, w21
    28d8:	str	w21, [x0]
    28dc:	mov	w20, #0xffffffff            	// #-1
    28e0:	b	2880 <cap_setuid@@Base+0x8c>
    28e4:	mov	w0, w21
    28e8:	bl	1a40 <setuid@plt>
    28ec:	mov	w20, w0
    28f0:	b	2880 <cap_setuid@@Base+0x8c>

00000000000028f4 <cap_setgroups@@Base>:
    28f4:	stp	x29, x30, [sp, #-80]!
    28f8:	mov	x29, sp
    28fc:	stp	x19, x20, [sp, #16]
    2900:	stp	x21, x22, [sp, #32]
    2904:	str	x23, [sp, #48]
    2908:	mov	w21, w0
    290c:	mov	x20, x1
    2910:	mov	x23, x2
    2914:	mov	w1, #0x6                   	// #6
    2918:	str	w1, [sp, #72]
    291c:	bl	1c10 <cap_get_proc@plt>
    2920:	mov	x22, x0
    2924:	mov	w4, #0x1                   	// #1
    2928:	add	x3, sp, #0x48
    292c:	mov	w2, w4
    2930:	mov	w1, #0x0                   	// #0
    2934:	bl	1cc0 <cap_set_flag@plt>
    2938:	mov	x0, x22
    293c:	bl	1b90 <cap_set_proc@plt>
    2940:	mov	w19, w0
    2944:	adrp	x3, 16000 <cap_set_nsowner@@Base+0x11e0c>
    2948:	ldr	w3, [x3, #400]
    294c:	cbz	w3, 29f4 <cap_setgroups@@Base+0x100>
    2950:	cbnz	w0, 2998 <cap_setgroups@@Base+0xa4>
    2954:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    2958:	ldr	x4, [x0, #408]
    295c:	mov	x3, #0x0                   	// #0
    2960:	mov	x2, #0x0                   	// #0
    2964:	mov	w1, w21
    2968:	mov	x0, #0x90                  	// #144
    296c:	blr	x4
    2970:	mov	w19, w0
    2974:	cbnz	w0, 2998 <cap_setgroups@@Base+0xa4>
    2978:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e0c>
    297c:	ldr	x4, [x0, #408]
    2980:	mov	x3, #0x0                   	// #0
    2984:	mov	x2, x23
    2988:	mov	x1, x20
    298c:	mov	x0, #0x9f                  	// #159
    2990:	blr	x4
    2994:	mov	w19, w0
    2998:	tbnz	w19, #31, 29e0 <cap_setgroups@@Base+0xec>
    299c:	bl	1d00 <__errno_location@plt>
    29a0:	mov	x20, x0
    29a4:	ldr	w21, [x0]
    29a8:	mov	w1, #0x0                   	// #0
    29ac:	mov	x0, x22
    29b0:	bl	1a90 <cap_clear_flag@plt>
    29b4:	mov	x0, x22
    29b8:	bl	1b90 <cap_set_proc@plt>
    29bc:	mov	x0, x22
    29c0:	bl	1cb0 <cap_free@plt>
    29c4:	str	w21, [x20]
    29c8:	mov	w0, w19
    29cc:	ldp	x19, x20, [sp, #16]
    29d0:	ldp	x21, x22, [sp, #32]
    29d4:	ldr	x23, [sp, #48]
    29d8:	ldp	x29, x30, [sp], #80
    29dc:	ret
    29e0:	bl	1d00 <__errno_location@plt>
    29e4:	neg	w19, w19
    29e8:	str	w19, [x0]
    29ec:	mov	w19, #0xffffffff            	// #-1
    29f0:	b	299c <cap_setgroups@@Base+0xa8>
    29f4:	cbnz	w0, 299c <cap_setgroups@@Base+0xa8>
    29f8:	mov	w0, w21
    29fc:	bl	1bc0 <setgid@plt>
    2a00:	mov	w19, w0
    2a04:	cbnz	w0, 299c <cap_setgroups@@Base+0xa8>
    2a08:	mov	x1, x23
    2a0c:	mov	x0, x20
    2a10:	bl	1c70 <setgroups@plt>
    2a14:	mov	w19, w0
    2a18:	b	299c <cap_setgroups@@Base+0xa8>

0000000000002a1c <cap_size@@Base>:
    2a1c:	mov	x0, #0x1d                  	// #29
    2a20:	ret

0000000000002a24 <cap_copy_ext@@Base>:
    2a24:	cbz	x1, 2ac0 <cap_copy_ext@@Base+0x9c>
    2a28:	ldur	w4, [x1, #-4]
    2a2c:	mov	w3, #0x90d0                	// #37072
    2a30:	movk	w3, #0xca, lsl #16
    2a34:	cmp	w4, w3
    2a38:	b.ne	2ac0 <cap_copy_ext@@Base+0x9c>  // b.any
    2a3c:	cmp	x0, #0x0
    2a40:	ccmp	x2, #0x1c, #0x4, ne  // ne = any
    2a44:	b.le	2ac0 <cap_copy_ext@@Base+0x9c>
    2a48:	mov	w2, #0xc290                	// #49808
    2a4c:	movk	w2, #0x5101, lsl #16
    2a50:	str	w2, [x0]
    2a54:	mov	w2, #0x8                   	// #8
    2a58:	strb	w2, [x0, #4]
    2a5c:	add	x2, x1, #0x8
    2a60:	add	x1, x0, #0x5
    2a64:	add	x3, x0, #0x8
    2a68:	ldr	w0, [x2]
    2a6c:	strb	w0, [x1]
    2a70:	lsr	w4, w0, #8
    2a74:	strb	w4, [x1, #3]
    2a78:	lsr	w4, w0, #16
    2a7c:	strb	w4, [x1, #6]
    2a80:	lsr	w0, w0, #24
    2a84:	strb	w0, [x1, #9]
    2a88:	ldr	w0, [x2, #12]
    2a8c:	strb	w0, [x1, #12]
    2a90:	lsr	w4, w0, #8
    2a94:	strb	w4, [x1, #15]
    2a98:	lsr	w4, w0, #16
    2a9c:	strb	w4, [x1, #18]
    2aa0:	lsr	w0, w0, #24
    2aa4:	strb	w0, [x1, #21]
    2aa8:	add	x2, x2, #0x4
    2aac:	add	x1, x1, #0x1
    2ab0:	cmp	x1, x3
    2ab4:	b.ne	2a68 <cap_copy_ext@@Base+0x44>  // b.any
    2ab8:	mov	x0, #0x1d                  	// #29
    2abc:	ret
    2ac0:	stp	x29, x30, [sp, #-16]!
    2ac4:	mov	x29, sp
    2ac8:	bl	1d00 <__errno_location@plt>
    2acc:	mov	w1, #0x16                  	// #22
    2ad0:	str	w1, [x0]
    2ad4:	mov	x0, #0xffffffffffffffff    	// #-1
    2ad8:	ldp	x29, x30, [sp], #16
    2adc:	ret

0000000000002ae0 <cap_copy_int@@Base>:
    2ae0:	stp	x29, x30, [sp, #-32]!
    2ae4:	mov	x29, sp
    2ae8:	cbz	x0, 2b28 <cap_copy_int@@Base+0x48>
    2aec:	stp	x19, x20, [sp, #16]
    2af0:	mov	x19, x0
    2af4:	mov	x2, #0x4                   	// #4
    2af8:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    2afc:	add	x1, x1, #0x210
    2b00:	bl	1bf0 <memcmp@plt>
    2b04:	mov	w20, w0
    2b08:	cbnz	w0, 2b24 <cap_copy_int@@Base+0x44>
    2b0c:	bl	1bd0 <cap_init@plt>
    2b10:	cbz	x0, 2c10 <cap_copy_int@@Base+0x130>
    2b14:	ldrb	w7, [x19, #4]
    2b18:	mov	x10, x0
    2b1c:	mov	w9, w20
    2b20:	b	2bfc <cap_copy_int@@Base+0x11c>
    2b24:	ldp	x19, x20, [sp, #16]
    2b28:	bl	1d00 <__errno_location@plt>
    2b2c:	mov	w1, #0x16                  	// #22
    2b30:	str	w1, [x0]
    2b34:	mov	x0, #0x0                   	// #0
    2b38:	b	2c1c <cap_copy_int@@Base+0x13c>
    2b3c:	add	w1, w3, #0x1
    2b40:	sbfiz	x2, x3, #1, #32
    2b44:	add	x2, x2, w3, sxtw
    2b48:	add	x2, x19, x2
    2b4c:	add	x2, x2, x8
    2b50:	ldrb	w4, [x2, #5]
    2b54:	cmp	w7, w1
    2b58:	b.eq	2bdc <cap_copy_int@@Base+0xfc>  // b.none
    2b5c:	add	w2, w3, #0x2
    2b60:	sbfiz	x11, x1, #1, #32
    2b64:	add	x1, x11, w1, sxtw
    2b68:	add	x1, x19, x1
    2b6c:	add	x1, x1, x8
    2b70:	ldrb	w1, [x1, #5]
    2b74:	orr	w4, w4, w1, lsl #8
    2b78:	cmp	w7, w2
    2b7c:	b.eq	2bdc <cap_copy_int@@Base+0xfc>  // b.none
    2b80:	add	w1, w3, #0x3
    2b84:	sbfiz	x11, x2, #1, #32
    2b88:	add	x2, x11, w2, sxtw
    2b8c:	add	x2, x19, x2
    2b90:	add	x2, x2, x8
    2b94:	ldrb	w2, [x2, #5]
    2b98:	orr	w4, w4, w2, lsl #16
    2b9c:	cmp	w7, w1
    2ba0:	b.eq	2be4 <cap_copy_int@@Base+0x104>  // b.none
    2ba4:	add	w3, w3, #0x4
    2ba8:	sbfiz	x2, x1, #1, #32
    2bac:	add	x1, x2, w1, sxtw
    2bb0:	add	x1, x19, x1
    2bb4:	add	x1, x1, x8
    2bb8:	ldrb	w1, [x1, #5]
    2bbc:	orr	w4, w4, w1, lsl #24
    2bc0:	str	w4, [x6, #8]
    2bc4:	add	x6, x6, #0xc
    2bc8:	subs	w5, w5, #0x1
    2bcc:	b.eq	2bec <cap_copy_int@@Base+0x10c>  // b.none
    2bd0:	cmp	w7, w3
    2bd4:	b.ne	2b3c <cap_copy_int@@Base+0x5c>  // b.any
    2bd8:	mov	w4, #0x0                   	// #0
    2bdc:	mov	w3, w7
    2be0:	b	2bc0 <cap_copy_int@@Base+0xe0>
    2be4:	mov	w3, w1
    2be8:	b	2bc0 <cap_copy_int@@Base+0xe0>
    2bec:	add	w9, w9, #0x1
    2bf0:	add	x10, x10, #0x4
    2bf4:	cmp	w9, #0x3
    2bf8:	b.eq	2c18 <cap_copy_int@@Base+0x138>  // b.none
    2bfc:	mov	x6, x10
    2c00:	mov	w3, w20
    2c04:	mov	w5, #0x2                   	// #2
    2c08:	sxtw	x8, w9
    2c0c:	b	2bd0 <cap_copy_int@@Base+0xf0>
    2c10:	ldp	x19, x20, [sp, #16]
    2c14:	b	2c1c <cap_copy_int@@Base+0x13c>
    2c18:	ldp	x19, x20, [sp, #16]
    2c1c:	ldp	x29, x30, [sp], #32
    2c20:	ret

0000000000002c24 <cap_get_flag@@Base>:
    2c24:	cmp	x3, #0x0
    2c28:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    2c2c:	b.eq	2c84 <cap_get_flag@@Base+0x60>  // b.none
    2c30:	ldur	w5, [x0, #-4]
    2c34:	mov	w4, #0x90d0                	// #37072
    2c38:	movk	w4, #0xca, lsl #16
    2c3c:	cmp	w5, w4
    2c40:	b.ne	2c84 <cap_get_flag@@Base+0x60>  // b.any
    2c44:	cmp	w1, #0x3f
    2c48:	ccmp	w2, #0x2, #0x2, ls  // ls = plast
    2c4c:	b.hi	2c84 <cap_get_flag@@Base+0x60>  // b.pmore
    2c50:	asr	w4, w1, #5
    2c54:	sbfiz	x5, x4, #1, #32
    2c58:	add	x4, x5, w4, sxtw
    2c5c:	add	x2, x4, w2, uxtw
    2c60:	add	x2, x0, x2, lsl #2
    2c64:	mov	w0, #0x1                   	// #1
    2c68:	lsl	w1, w0, w1
    2c6c:	ldr	w0, [x2, #8]
    2c70:	tst	w1, w0
    2c74:	cset	w0, ne  // ne = any
    2c78:	str	w0, [x3]
    2c7c:	mov	w0, #0x0                   	// #0
    2c80:	ret
    2c84:	stp	x29, x30, [sp, #-16]!
    2c88:	mov	x29, sp
    2c8c:	bl	1d00 <__errno_location@plt>
    2c90:	mov	w1, #0x16                  	// #22
    2c94:	str	w1, [x0]
    2c98:	mov	w0, #0xffffffff            	// #-1
    2c9c:	ldp	x29, x30, [sp], #16
    2ca0:	ret

0000000000002ca4 <cap_set_flag@@Base>:
    2ca4:	cbz	x0, 2d58 <cap_set_flag@@Base+0xb4>
    2ca8:	ldur	w6, [x0, #-4]
    2cac:	mov	w5, #0x90d0                	// #37072
    2cb0:	movk	w5, #0xca, lsl #16
    2cb4:	cmp	w6, w5
    2cb8:	b.ne	2d58 <cap_set_flag@@Base+0xb4>  // b.any
    2cbc:	sub	w5, w2, #0x1
    2cc0:	cmp	w5, #0x3e
    2cc4:	b.hi	2d58 <cap_set_flag@@Base+0xb4>  // b.pmore
    2cc8:	cmp	w1, #0x2
    2ccc:	ccmp	w4, #0x1, #0x2, ls  // ls = plast
    2cd0:	b.hi	2d58 <cap_set_flag@@Base+0xb4>  // b.pmore
    2cd4:	mov	x5, #0x0                   	// #0
    2cd8:	mov	w7, w1
    2cdc:	mov	w9, #0x1                   	// #1
    2ce0:	b	2d14 <cap_set_flag@@Base+0x70>
    2ce4:	asr	w6, w1, #5
    2ce8:	sbfiz	x8, x6, #1, #32
    2cec:	add	x6, x8, w6, sxtw
    2cf0:	add	x6, x6, x7
    2cf4:	add	x6, x0, x6, lsl #2
    2cf8:	lsl	w1, w9, w1
    2cfc:	ldr	w8, [x6, #8]
    2d00:	bic	w1, w8, w1
    2d04:	str	w1, [x6, #8]
    2d08:	add	x5, x5, #0x1
    2d0c:	cmp	w2, w5
    2d10:	b.le	2d50 <cap_set_flag@@Base+0xac>
    2d14:	ldr	w1, [x3, x5, lsl #2]
    2d18:	cmp	w1, #0x3f
    2d1c:	b.hi	2d08 <cap_set_flag@@Base+0x64>  // b.pmore
    2d20:	cmp	w4, #0x1
    2d24:	b.ne	2ce4 <cap_set_flag@@Base+0x40>  // b.any
    2d28:	asr	w6, w1, #5
    2d2c:	sbfiz	x8, x6, #1, #32
    2d30:	add	x6, x8, w6, sxtw
    2d34:	add	x6, x6, x7
    2d38:	add	x6, x0, x6, lsl #2
    2d3c:	lsl	w1, w9, w1
    2d40:	ldr	w8, [x6, #8]
    2d44:	orr	w1, w1, w8
    2d48:	str	w1, [x6, #8]
    2d4c:	b	2d08 <cap_set_flag@@Base+0x64>
    2d50:	mov	w0, #0x0                   	// #0
    2d54:	ret
    2d58:	stp	x29, x30, [sp, #-16]!
    2d5c:	mov	x29, sp
    2d60:	bl	1d00 <__errno_location@plt>
    2d64:	mov	w1, #0x16                  	// #22
    2d68:	str	w1, [x0]
    2d6c:	mov	w0, #0xffffffff            	// #-1
    2d70:	ldp	x29, x30, [sp], #16
    2d74:	ret

0000000000002d78 <cap_clear@@Base>:
    2d78:	cbz	x0, 2da0 <cap_clear@@Base+0x28>
    2d7c:	ldur	w2, [x0, #-4]
    2d80:	mov	w1, #0x90d0                	// #37072
    2d84:	movk	w1, #0xca, lsl #16
    2d88:	cmp	w2, w1
    2d8c:	b.ne	2da0 <cap_clear@@Base+0x28>  // b.any
    2d90:	stp	xzr, xzr, [x0, #8]
    2d94:	str	xzr, [x0, #24]
    2d98:	mov	w0, #0x0                   	// #0
    2d9c:	ret
    2da0:	stp	x29, x30, [sp, #-16]!
    2da4:	mov	x29, sp
    2da8:	bl	1d00 <__errno_location@plt>
    2dac:	mov	w1, #0x16                  	// #22
    2db0:	str	w1, [x0]
    2db4:	mov	w0, #0xffffffff            	// #-1
    2db8:	ldp	x29, x30, [sp], #16
    2dbc:	ret

0000000000002dc0 <cap_clear_flag@@Base>:
    2dc0:	cmp	x0, #0x0
    2dc4:	ccmp	w1, #0x2, #0x2, ne  // ne = any
    2dc8:	b.hi	2df4 <cap_clear_flag@@Base+0x34>  // b.pmore
    2dcc:	ldur	w3, [x0, #-4]
    2dd0:	mov	w2, #0x90d0                	// #37072
    2dd4:	movk	w2, #0xca, lsl #16
    2dd8:	cmp	w3, w2
    2ddc:	b.ne	2df4 <cap_clear_flag@@Base+0x34>  // b.any
    2de0:	add	x2, x0, w1, uxtw #2
    2de4:	str	wzr, [x2, #8]
    2de8:	str	wzr, [x2, #20]
    2dec:	mov	w0, #0x0                   	// #0
    2df0:	ret
    2df4:	stp	x29, x30, [sp, #-16]!
    2df8:	mov	x29, sp
    2dfc:	bl	1d00 <__errno_location@plt>
    2e00:	mov	w1, #0x16                  	// #22
    2e04:	str	w1, [x0]
    2e08:	mov	w0, #0xffffffff            	// #-1
    2e0c:	ldp	x29, x30, [sp], #16
    2e10:	ret

0000000000002e14 <cap_compare@@Base>:
    2e14:	cbz	x0, 2eb8 <cap_compare@@Base+0xa4>
    2e18:	ldur	w3, [x0, #-4]
    2e1c:	cmp	x1, #0x0
    2e20:	mov	w2, #0x90d0                	// #37072
    2e24:	movk	w2, #0xca, lsl #16
    2e28:	ccmp	w3, w2, #0x0, ne  // ne = any
    2e2c:	b.ne	2eb8 <cap_compare@@Base+0xa4>  // b.any
    2e30:	ldur	w3, [x1, #-4]
    2e34:	cmp	w3, w2
    2e38:	b.ne	2eb8 <cap_compare@@Base+0xa4>  // b.any
    2e3c:	ldr	w3, [x0, #8]
    2e40:	ldr	w2, [x1, #8]
    2e44:	cmp	w3, w2
    2e48:	cset	w4, ne  // ne = any
    2e4c:	ldr	w3, [x0, #16]
    2e50:	ldr	w2, [x1, #16]
    2e54:	cmp	w3, w2
    2e58:	cset	w3, ne  // ne = any
    2e5c:	ldr	w5, [x0, #12]
    2e60:	ldr	w2, [x1, #12]
    2e64:	cmp	w5, w2
    2e68:	cset	w2, ne  // ne = any
    2e6c:	ldr	w6, [x0, #20]
    2e70:	ldr	w5, [x1, #20]
    2e74:	cmp	w6, w5
    2e78:	cset	w5, ne  // ne = any
    2e7c:	orr	w3, w5, w3, lsl #2
    2e80:	orr	w3, w3, w4
    2e84:	ldr	w5, [x0, #28]
    2e88:	ldr	w4, [x1, #28]
    2e8c:	cmp	w5, w4
    2e90:	cset	w4, ne  // ne = any
    2e94:	lsl	w4, w4, #2
    2e98:	orr	w2, w4, w2, lsl #1
    2e9c:	orr	w2, w2, w3
    2ea0:	ldr	w3, [x0, #24]
    2ea4:	ldr	w0, [x1, #24]
    2ea8:	cmp	w3, w0
    2eac:	cset	w0, ne  // ne = any
    2eb0:	orr	w0, w2, w0, lsl #1
    2eb4:	ret
    2eb8:	stp	x29, x30, [sp, #-16]!
    2ebc:	mov	x29, sp
    2ec0:	bl	1d00 <__errno_location@plt>
    2ec4:	mov	w1, #0x16                  	// #22
    2ec8:	str	w1, [x0]
    2ecc:	mov	w0, #0xffffffff            	// #-1
    2ed0:	ldp	x29, x30, [sp], #16
    2ed4:	ret
    2ed8:	cbz	w3, 2f14 <cap_compare@@Base+0x100>
    2edc:	sub	w4, w3, #0x1
    2ee0:	sxtw	x4, w4
    2ee4:	sbfiz	x5, x3, #1, #32
    2ee8:	add	x3, x5, w3, sxtw
    2eec:	add	x2, x3, w2, uxtw
    2ef0:	add	x0, x0, x2, lsl #2
    2ef4:	ldr	w2, [x1, x4, lsl #2]
    2ef8:	ldur	w3, [x0, #-4]
    2efc:	bic	w2, w3, w2
    2f00:	stur	w2, [x0, #-4]
    2f04:	sub	x4, x4, #0x1
    2f08:	sub	x0, x0, #0xc
    2f0c:	cmn	w4, #0x1
    2f10:	b.ne	2ef4 <cap_compare@@Base+0xe0>  // b.any
    2f14:	ret
    2f18:	asr	w2, w1, #5
    2f1c:	mov	w3, #0x1                   	// #1
    2f20:	lsl	w1, w3, w1
    2f24:	sxtw	x5, w2
    2f28:	sbfiz	x3, x2, #1, #32
    2f2c:	add	x4, x3, x5
    2f30:	add	x4, x0, x4, lsl #2
    2f34:	ldr	w4, [x4, #8]
    2f38:	tst	w1, w4
    2f3c:	cset	w4, ne  // ne = any
    2f40:	add	x3, x3, x5
    2f44:	add	x3, x0, x3, lsl #2
    2f48:	ldr	w5, [x3, #12]
    2f4c:	orr	w3, w4, #0x2
    2f50:	tst	w1, w5
    2f54:	csel	w4, w3, w4, ne  // ne = any
    2f58:	sbfiz	x3, x2, #1, #32
    2f5c:	add	x2, x3, w2, sxtw
    2f60:	add	x2, x0, x2, lsl #2
    2f64:	ldr	w2, [x2, #16]
    2f68:	orr	w0, w4, #0x4
    2f6c:	tst	w1, w2
    2f70:	csel	w0, w0, w4, ne  // ne = any
    2f74:	ret
    2f78:	stp	x29, x30, [sp, #-48]!
    2f7c:	mov	x29, sp
    2f80:	stp	x19, x20, [sp, #16]
    2f84:	str	x21, [sp, #32]
    2f88:	mov	x19, x0
    2f8c:	ldrb	w20, [x1]
    2f90:	cbz	w20, 2fbc <cap_compare@@Base+0x1a8>
    2f94:	mov	x21, x1
    2f98:	bl	1b00 <__ctype_tolower_loc@plt>
    2f9c:	ldr	x1, [x0]
    2fa0:	ldrb	w0, [x19]
    2fa4:	ldr	w0, [x1, x0, lsl #2]
    2fa8:	cmp	w0, w20
    2fac:	b.ne	2ff8 <cap_compare@@Base+0x1e4>  // b.any
    2fb0:	add	x19, x19, #0x1
    2fb4:	ldrb	w20, [x21, #1]!
    2fb8:	cbnz	w20, 2fa0 <cap_compare@@Base+0x18c>
    2fbc:	mov	x21, x19
    2fc0:	bl	1c00 <__ctype_b_loc@plt>
    2fc4:	ldrb	w1, [x21]
    2fc8:	and	x2, x1, #0xff
    2fcc:	ldr	x0, [x0]
    2fd0:	ldrh	w0, [x0, x2, lsl #1]
    2fd4:	and	w0, w0, #0x8
    2fd8:	cmp	w1, #0x5f
    2fdc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    2fe0:	csel	x21, x21, xzr, eq  // eq = none
    2fe4:	mov	x0, x21
    2fe8:	ldp	x19, x20, [sp, #16]
    2fec:	ldr	x21, [sp, #32]
    2ff0:	ldp	x29, x30, [sp], #48
    2ff4:	ret
    2ff8:	mov	x21, #0x0                   	// #0
    2ffc:	cbnz	w20, 2fe4 <cap_compare@@Base+0x1d0>
    3000:	mov	x21, x19
    3004:	b	2fc0 <cap_compare@@Base+0x1ac>
    3008:	stp	x29, x30, [sp, #-80]!
    300c:	mov	x29, sp
    3010:	stp	x19, x20, [sp, #16]
    3014:	stp	x21, x22, [sp, #32]
    3018:	mov	x21, x0
    301c:	ldr	x19, [x0]
    3020:	str	x19, [sp, #72]
    3024:	bl	1c00 <__ctype_b_loc@plt>
    3028:	ldr	x3, [x0]
    302c:	ldrb	w1, [x19]
    3030:	and	x0, x1, #0xff
    3034:	ldrh	w0, [x3, x0, lsl #1]
    3038:	tbnz	w0, #11, 3094 <cap_compare@@Base+0x280>
    303c:	mov	w0, w1
    3040:	mov	w2, #0x0                   	// #0
    3044:	cbz	w1, 3070 <cap_compare@@Base+0x25c>
    3048:	and	x1, x1, #0xff
    304c:	ldrh	w1, [x3, x1, lsl #1]
    3050:	and	w1, w1, #0x400
    3054:	cmp	w0, #0x5f
    3058:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    305c:	b.eq	3070 <cap_compare@@Base+0x25c>  // b.none
    3060:	add	w2, w2, #0x1
    3064:	ldrb	w1, [x19, w2, uxtw]
    3068:	mov	w0, w1
    306c:	cbnz	w1, 3048 <cap_compare@@Base+0x234>
    3070:	bl	1aa0 <cap_max_bits@plt>
    3074:	sub	w20, w0, #0x1
    3078:	cbz	w0, 3118 <cap_compare@@Base+0x304>
    307c:	str	x23, [sp, #48]
    3080:	ldr	x23, [sp, #72]
    3084:	adrp	x22, 15000 <cap_set_nsowner@@Base+0x10e0c>
    3088:	ldr	x22, [x22, #4032]
    308c:	add	x19, x22, w20, uxtw #3
    3090:	b	30d4 <cap_compare@@Base+0x2c0>
    3094:	mov	w2, #0x0                   	// #0
    3098:	add	x1, sp, #0x48
    309c:	mov	x0, x19
    30a0:	bl	1a50 <strtoul@plt>
    30a4:	mov	x20, x0
    30a8:	cmp	x0, #0x3f
    30ac:	b.hi	3110 <cap_compare@@Base+0x2fc>  // b.pmore
    30b0:	ldr	x0, [sp, #72]
    30b4:	str	x0, [x21]
    30b8:	mov	w0, w20
    30bc:	b	3100 <cap_compare@@Base+0x2ec>
    30c0:	sub	w20, w20, #0x1
    30c4:	sub	x0, x19, #0x8
    30c8:	cmp	x19, x22
    30cc:	b.eq	30f8 <cap_compare@@Base+0x2e4>  // b.none
    30d0:	mov	x19, x0
    30d4:	ldr	x1, [x19]
    30d8:	cbz	x1, 30c0 <cap_compare@@Base+0x2ac>
    30dc:	mov	x0, x23
    30e0:	bl	2f78 <cap_compare@@Base+0x164>
    30e4:	cbz	x0, 30c0 <cap_compare@@Base+0x2ac>
    30e8:	str	x0, [x21]
    30ec:	mov	w0, w20
    30f0:	ldr	x23, [sp, #48]
    30f4:	b	3100 <cap_compare@@Base+0x2ec>
    30f8:	mov	w0, #0xffffffff            	// #-1
    30fc:	ldr	x23, [sp, #48]
    3100:	ldp	x19, x20, [sp, #16]
    3104:	ldp	x21, x22, [sp, #32]
    3108:	ldp	x29, x30, [sp], #80
    310c:	ret
    3110:	mov	w0, #0xffffffff            	// #-1
    3114:	b	3100 <cap_compare@@Base+0x2ec>
    3118:	mov	w0, #0xffffffff            	// #-1
    311c:	b	3100 <cap_compare@@Base+0x2ec>
    3120:	stp	x29, x30, [sp, #-48]!
    3124:	mov	x29, sp
    3128:	stp	x19, x20, [sp, #16]
    312c:	str	x21, [sp, #32]
    3130:	mov	x21, x0
    3134:	mov	w20, w1
    3138:	mov	w19, w2
    313c:	bl	1aa0 <cap_max_bits@plt>
    3140:	cbz	w19, 31b4 <cap_compare@@Base+0x3a0>
    3144:	sub	w5, w19, #0x1
    3148:	negs	w2, w0
    314c:	and	w7, w0, #0x1f
    3150:	and	w2, w2, #0x1f
    3154:	csneg	w1, w7, w2, mi  // mi = first
    3158:	mov	x7, #0x1                   	// #1
    315c:	lsl	x7, x7, x1
    3160:	sub	w7, w7, #0x1
    3164:	lsl	w3, w19, #5
    3168:	add	x5, x21, w5, uxtw #2
    316c:	mov	x1, x21
    3170:	mov	w6, #0xffffffff            	// #-1
    3174:	mov	w8, #0x0                   	// #0
    3178:	b	3198 <cap_compare@@Base+0x384>
    317c:	and	w2, w2, w20
    3180:	mov	x4, x5
    3184:	str	w2, [x4], #-4
    3188:	sub	w3, w3, #0x20
    318c:	cmp	x5, x1
    3190:	b.eq	31b4 <cap_compare@@Base+0x3a0>  // b.none
    3194:	mov	x5, x4
    3198:	mov	w2, w6
    319c:	cmp	w0, w3
    31a0:	b.cs	317c <cap_compare@@Base+0x368>  // b.hs, b.nlast
    31a4:	sub	w2, w3, #0x20
    31a8:	cmp	w0, w2
    31ac:	csel	w2, w7, w8, hi  // hi = pmore
    31b0:	b	317c <cap_compare@@Base+0x368>
    31b4:	ldp	x19, x20, [sp, #16]
    31b8:	ldr	x21, [sp, #32]
    31bc:	ldp	x29, x30, [sp], #48
    31c0:	ret

00000000000031c4 <cap_from_text@@Base>:
    31c4:	stp	x29, x30, [sp, #-144]!
    31c8:	mov	x29, sp
    31cc:	stp	x19, x20, [sp, #16]
    31d0:	str	x0, [sp, #120]
    31d4:	cbz	x0, 3234 <cap_from_text@@Base+0x70>
    31d8:	bl	1bd0 <cap_init@plt>
    31dc:	mov	x20, x0
    31e0:	cbz	x0, 35d8 <cap_from_text@@Base+0x414>
    31e4:	stp	x21, x22, [sp, #32]
    31e8:	ldr	w0, [x0]
    31ec:	mov	w1, #0x1026                	// #4134
    31f0:	movk	w1, #0x2007, lsl #16
    31f4:	cmp	w0, w1
    31f8:	b.eq	3288 <cap_from_text@@Base+0xc4>  // b.none
    31fc:	mov	w1, #0x522                 	// #1314
    3200:	movk	w1, #0x2008, lsl #16
    3204:	cmp	w0, w1
    3208:	b.eq	3298 <cap_from_text@@Base+0xd4>  // b.none
    320c:	mov	w1, #0x330                 	// #816
    3210:	movk	w1, #0x1998, lsl #16
    3214:	cmp	w0, w1
    3218:	b.eq	3248 <cap_from_text@@Base+0x84>  // b.none
    321c:	bl	1d00 <__errno_location@plt>
    3220:	mov	w1, #0x16                  	// #22
    3224:	str	w1, [x0]
    3228:	mov	x20, #0x0                   	// #0
    322c:	ldp	x21, x22, [sp, #32]
    3230:	b	35d8 <cap_from_text@@Base+0x414>
    3234:	mov	x20, x0
    3238:	bl	1d00 <__errno_location@plt>
    323c:	mov	w1, #0x16                  	// #22
    3240:	str	w1, [x0]
    3244:	b	35d8 <cap_from_text@@Base+0x414>
    3248:	stp	x25, x26, [sp, #64]
    324c:	stp	x27, x28, [sp, #80]
    3250:	mov	w22, #0x1                   	// #1
    3254:	sbfiz	x0, x22, #1, #32
    3258:	add	x0, x0, w22, sxtw
    325c:	add	x0, x20, x0, lsl #2
    3260:	str	x0, [sp, #104]
    3264:	adrp	x28, 4000 <cap_get_fd@@Base+0x54>
    3268:	add	x26, sp, #0x78
    326c:	sub	w0, w22, #0x2
    3270:	str	w0, [sp, #116]
    3274:	str	xzr, [sp, #136]
    3278:	bl	1c00 <__ctype_b_loc@plt>
    327c:	mov	x21, x0
    3280:	ldr	x3, [x0]
    3284:	b	32b8 <cap_from_text@@Base+0xf4>
    3288:	stp	x25, x26, [sp, #64]
    328c:	stp	x27, x28, [sp, #80]
    3290:	mov	w22, #0x2                   	// #2
    3294:	b	3254 <cap_from_text@@Base+0x90>
    3298:	stp	x25, x26, [sp, #64]
    329c:	stp	x27, x28, [sp, #80]
    32a0:	mov	w22, #0x2                   	// #2
    32a4:	b	3254 <cap_from_text@@Base+0x90>
    32a8:	ldp	x23, x24, [sp, #48]
    32ac:	b	3274 <cap_from_text@@Base+0xb0>
    32b0:	add	x0, x0, #0x1
    32b4:	str	x0, [sp, #120]
    32b8:	ldr	x0, [sp, #120]
    32bc:	ldrb	w1, [x0]
    32c0:	and	x2, x1, #0xff
    32c4:	ldrh	w2, [x3, x2, lsl #1]
    32c8:	tbnz	w2, #13, 32b0 <cap_from_text@@Base+0xec>
    32cc:	cbz	w1, 36fc <cap_from_text@@Base+0x538>
    32d0:	and	w2, w2, #0x8
    32d4:	cmp	w1, #0x5f
    32d8:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    32dc:	b.ne	3308 <cap_from_text@@Base+0x144>  // b.any
    32e0:	sub	w1, w1, #0x2b
    32e4:	and	w1, w1, #0xfffffffd
    32e8:	tst	w1, #0xff
    32ec:	b.eq	35b4 <cap_from_text@@Base+0x3f0>  // b.none
    32f0:	mov	w2, w22
    32f4:	mov	w1, #0xffffffff            	// #-1
    32f8:	add	x0, sp, #0x88
    32fc:	bl	3120 <cap_compare@@Base+0x30c>
    3300:	mov	w25, #0x0                   	// #0
    3304:	b	33c0 <cap_from_text@@Base+0x1fc>
    3308:	stp	x23, x24, [sp, #48]
    330c:	add	x24, x28, #0x218
    3310:	add	x23, sp, #0x88
    3314:	mov	w27, #0x1                   	// #1
    3318:	mov	w25, #0xffffffff            	// #-1
    331c:	b	3380 <cap_from_text@@Base+0x1bc>
    3320:	mov	x0, x26
    3324:	bl	3008 <cap_compare@@Base+0x1f4>
    3328:	cmn	w0, #0x1
    332c:	b.eq	36e4 <cap_from_text@@Base+0x520>  // b.none
    3330:	asr	w1, w0, #5
    3334:	sxtw	x1, w1
    3338:	lsl	w0, w27, w0
    333c:	ldr	w2, [x23, x1, lsl #2]
    3340:	orr	w0, w0, w2
    3344:	str	w0, [x23, x1, lsl #2]
    3348:	ldr	x0, [sp, #120]
    334c:	ldrb	w1, [x0]
    3350:	cmp	w1, #0x2c
    3354:	b.ne	33b8 <cap_from_text@@Base+0x1f4>  // b.any
    3358:	ldr	x2, [x21]
    335c:	add	x1, x0, #0x1
    3360:	str	x1, [sp, #120]
    3364:	ldrb	w1, [x0, #1]
    3368:	and	x0, x1, #0xff
    336c:	ldrh	w0, [x2, x0, lsl #1]
    3370:	and	w0, w0, #0x8
    3374:	cmp	w1, #0x5f
    3378:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    337c:	b.eq	33b0 <cap_from_text@@Base+0x1ec>  // b.none
    3380:	ldr	x19, [sp, #120]
    3384:	mov	x1, x24
    3388:	mov	x0, x19
    338c:	bl	2f78 <cap_compare@@Base+0x164>
    3390:	cbz	x0, 3320 <cap_from_text@@Base+0x15c>
    3394:	add	x19, x19, #0x3
    3398:	str	x19, [sp, #120]
    339c:	mov	w2, w22
    33a0:	mov	w1, w25
    33a4:	mov	x0, x23
    33a8:	bl	3120 <cap_compare@@Base+0x30c>
    33ac:	b	3348 <cap_from_text@@Base+0x184>
    33b0:	ldp	x23, x24, [sp, #48]
    33b4:	b	35b4 <cap_from_text@@Base+0x3f0>
    33b8:	mov	w25, #0x1                   	// #1
    33bc:	ldp	x23, x24, [sp, #48]
    33c0:	ldr	x0, [sp, #120]
    33c4:	add	x1, x0, #0x1
    33c8:	str	x1, [sp, #120]
    33cc:	ldrb	w19, [x0]
    33d0:	cmp	w19, #0x3d
    33d4:	b.eq	3404 <cap_from_text@@Base+0x240>  // b.none
    33d8:	and	w0, w19, #0xffffffef
    33dc:	and	w0, w0, #0xff
    33e0:	cmp	w0, #0x2d
    33e4:	mov	w0, #0x2b                  	// #43
    33e8:	ccmp	w19, w0, #0x4, ne  // ne = any
    33ec:	b.ne	35b4 <cap_from_text@@Base+0x3f0>  // b.any
    33f0:	stp	x23, x24, [sp, #48]
    33f4:	mov	w23, #0x0                   	// #0
    33f8:	add	x24, sp, #0x88
    33fc:	mov	w27, #0x1                   	// #1
    3400:	b	3570 <cap_from_text@@Base+0x3ac>
    3404:	ldrb	w1, [x0, #1]
    3408:	sub	w1, w1, #0x2b
    340c:	and	w1, w1, #0xfffffffd
    3410:	tst	w1, #0xff
    3414:	b.ne	3440 <cap_from_text@@Base+0x27c>  // b.any
    3418:	cbz	w25, 35b4 <cap_from_text@@Base+0x3f0>
    341c:	stp	x23, x24, [sp, #48]
    3420:	add	x1, x0, #0x2
    3424:	str	x1, [sp, #120]
    3428:	ldrb	w0, [x0, #1]
    342c:	cmp	w0, #0x2b
    3430:	mov	w19, #0x50                  	// #80
    3434:	mov	w0, #0x4d                  	// #77
    3438:	csel	w19, w19, w0, eq  // eq = none
    343c:	b	33f4 <cap_from_text@@Base+0x230>
    3440:	stp	x23, x24, [sp, #48]
    3444:	b	33f4 <cap_from_text@@Base+0x230>
    3448:	orr	w23, w23, #0x1
    344c:	cmp	w19, #0x2d
    3450:	b.eq	362c <cap_from_text@@Base+0x468>  // b.none
    3454:	b.hi	34fc <cap_from_text@@Base+0x338>  // b.pmore
    3458:	cmp	w19, #0x2b
    345c:	b.ne	3518 <cap_from_text@@Base+0x354>  // b.any
    3460:	tbnz	w23, #0, 3650 <cap_from_text@@Base+0x48c>
    3464:	tbnz	w23, #1, 3680 <cap_from_text@@Base+0x4bc>
    3468:	tbz	w23, #2, 3518 <cap_from_text@@Base+0x354>
    346c:	ldrsw	x1, [sp, #116]
    3470:	ldr	x0, [sp, #104]
    3474:	add	x3, x24, x1, lsl #2
    3478:	ldr	w2, [x0, #4]
    347c:	ldr	w3, [x3, #4]
    3480:	orr	w2, w2, w3
    3484:	str	w2, [x0, #4]
    3488:	sub	x1, x1, #0x1
    348c:	sub	x0, x0, #0xc
    3490:	cmn	w1, #0x2
    3494:	b.ne	3474 <cap_from_text@@Base+0x2b0>  // b.any
    3498:	b	3518 <cap_from_text@@Base+0x354>
    349c:	orr	w23, w23, #0x4
    34a0:	b	344c <cap_from_text@@Base+0x288>
    34a4:	orr	w23, w23, #0x2
    34a8:	b	344c <cap_from_text@@Base+0x288>
    34ac:	cmp	w19, #0x3d
    34b0:	b.ne	34f4 <cap_from_text@@Base+0x330>  // b.any
    34b4:	mov	w3, w22
    34b8:	mov	w2, #0x0                   	// #0
    34bc:	mov	x1, x24
    34c0:	mov	x0, x20
    34c4:	bl	2ed8 <cap_compare@@Base+0xc4>
    34c8:	mov	w3, w22
    34cc:	mov	w2, w27
    34d0:	mov	x1, x24
    34d4:	mov	x0, x20
    34d8:	bl	2ed8 <cap_compare@@Base+0xc4>
    34dc:	mov	w3, w22
    34e0:	mov	w2, #0x2                   	// #2
    34e4:	mov	x1, x24
    34e8:	mov	x0, x20
    34ec:	bl	2ed8 <cap_compare@@Base+0xc4>
    34f0:	b	3460 <cap_from_text@@Base+0x29c>
    34f4:	ldp	x23, x24, [sp, #48]
    34f8:	b	35b4 <cap_from_text@@Base+0x3f0>
    34fc:	cmp	w19, #0x50
    3500:	b.eq	34b4 <cap_from_text@@Base+0x2f0>  // b.none
    3504:	b.hi	3518 <cap_from_text@@Base+0x354>  // b.pmore
    3508:	sub	w0, w19, #0x3d
    350c:	and	w0, w0, #0xffffffef
    3510:	tst	w0, #0xff
    3514:	b.eq	35e8 <cap_from_text@@Base+0x424>  // b.none
    3518:	ldr	x1, [sp, #120]
    351c:	ldrb	w0, [x1]
    3520:	sub	w0, w0, #0x2b
    3524:	and	w0, w0, #0xfffffffd
    3528:	tst	w0, #0xff
    352c:	b.ne	3554 <cap_from_text@@Base+0x390>  // b.any
    3530:	cbz	w25, 36ec <cap_from_text@@Base+0x528>
    3534:	add	x0, x1, #0x1
    3538:	str	x0, [sp, #120]
    353c:	ldrb	w19, [x1]
    3540:	ldrb	w1, [x1, #1]
    3544:	ldr	x0, [x21]
    3548:	ldrh	w0, [x0, x1, lsl #1]
    354c:	tbz	w0, #10, 36f4 <cap_from_text@@Base+0x530>
    3550:	mov	w23, #0x0                   	// #0
    3554:	ldr	x0, [sp, #120]
    3558:	ldrb	w0, [x0]
    355c:	cbz	w0, 32a8 <cap_from_text@@Base+0xe4>
    3560:	and	x0, x0, #0xff
    3564:	ldr	x1, [x21]
    3568:	ldrh	w0, [x1, x0, lsl #1]
    356c:	tbnz	w0, #13, 36dc <cap_from_text@@Base+0x518>
    3570:	ldr	x1, [sp, #120]
    3574:	ldrb	w0, [x1]
    3578:	cbz	w0, 34ac <cap_from_text@@Base+0x2e8>
    357c:	and	x0, x0, #0xff
    3580:	ldr	x2, [x21]
    3584:	ldrh	w0, [x2, x0, lsl #1]
    3588:	tbnz	w0, #13, 34ac <cap_from_text@@Base+0x2e8>
    358c:	add	x0, x1, #0x1
    3590:	str	x0, [sp, #120]
    3594:	ldrb	w0, [x1]
    3598:	cmp	w0, #0x69
    359c:	b.eq	349c <cap_from_text@@Base+0x2d8>  // b.none
    35a0:	cmp	w0, #0x70
    35a4:	b.eq	34a4 <cap_from_text@@Base+0x2e0>  // b.none
    35a8:	cmp	w0, #0x65
    35ac:	b.eq	3448 <cap_from_text@@Base+0x284>  // b.none
    35b0:	ldp	x23, x24, [sp, #48]
    35b4:	mov	x0, x20
    35b8:	bl	1cb0 <cap_free@plt>
    35bc:	bl	1d00 <__errno_location@plt>
    35c0:	mov	w1, #0x16                  	// #22
    35c4:	str	w1, [x0]
    35c8:	mov	x20, #0x0                   	// #0
    35cc:	ldp	x21, x22, [sp, #32]
    35d0:	ldp	x25, x26, [sp, #64]
    35d4:	ldp	x27, x28, [sp, #80]
    35d8:	mov	x0, x20
    35dc:	ldp	x19, x20, [sp, #16]
    35e0:	ldp	x29, x30, [sp], #144
    35e4:	ret
    35e8:	mov	w3, w22
    35ec:	mov	w2, #0x0                   	// #0
    35f0:	mov	x1, x24
    35f4:	mov	x0, x20
    35f8:	bl	2ed8 <cap_compare@@Base+0xc4>
    35fc:	mov	w3, w22
    3600:	mov	w2, w27
    3604:	mov	x1, x24
    3608:	mov	x0, x20
    360c:	bl	2ed8 <cap_compare@@Base+0xc4>
    3610:	mov	w3, w22
    3614:	mov	w2, #0x2                   	// #2
    3618:	mov	x1, x24
    361c:	mov	x0, x20
    3620:	bl	2ed8 <cap_compare@@Base+0xc4>
    3624:	cmp	w19, #0x4d
    3628:	b.ne	3460 <cap_from_text@@Base+0x29c>  // b.any
    362c:	tbnz	w23, #0, 36ac <cap_from_text@@Base+0x4e8>
    3630:	tbnz	w23, #1, 36c4 <cap_from_text@@Base+0x500>
    3634:	tbz	w23, #2, 3518 <cap_from_text@@Base+0x354>
    3638:	mov	w3, w22
    363c:	mov	w2, #0x2                   	// #2
    3640:	mov	x1, x24
    3644:	mov	x0, x20
    3648:	bl	2ed8 <cap_compare@@Base+0xc4>
    364c:	b	3518 <cap_from_text@@Base+0x354>
    3650:	ldrsw	x1, [sp, #116]
    3654:	ldr	x0, [sp, #104]
    3658:	add	x3, x24, x1, lsl #2
    365c:	ldur	w2, [x0, #-4]
    3660:	ldr	w3, [x3, #4]
    3664:	orr	w2, w2, w3
    3668:	stur	w2, [x0, #-4]
    366c:	sub	x1, x1, #0x1
    3670:	sub	x0, x0, #0xc
    3674:	cmn	w1, #0x2
    3678:	b.ne	3658 <cap_from_text@@Base+0x494>  // b.any
    367c:	b	3464 <cap_from_text@@Base+0x2a0>
    3680:	ldrsw	x0, [sp, #116]
    3684:	ldr	x2, [sp, #104]
    3688:	add	x3, x24, x0, lsl #2
    368c:	ldr	w1, [x2]
    3690:	ldr	w3, [x3, #4]
    3694:	orr	w1, w1, w3
    3698:	str	w1, [x2], #-12
    369c:	sub	x0, x0, #0x1
    36a0:	cmn	w0, #0x2
    36a4:	b.ne	3688 <cap_from_text@@Base+0x4c4>  // b.any
    36a8:	b	3468 <cap_from_text@@Base+0x2a4>
    36ac:	mov	w3, w22
    36b0:	mov	w2, #0x0                   	// #0
    36b4:	mov	x1, x24
    36b8:	mov	x0, x20
    36bc:	bl	2ed8 <cap_compare@@Base+0xc4>
    36c0:	b	3630 <cap_from_text@@Base+0x46c>
    36c4:	mov	w3, w22
    36c8:	mov	w2, w27
    36cc:	mov	x1, x24
    36d0:	mov	x0, x20
    36d4:	bl	2ed8 <cap_compare@@Base+0xc4>
    36d8:	b	3634 <cap_from_text@@Base+0x470>
    36dc:	ldp	x23, x24, [sp, #48]
    36e0:	b	3274 <cap_from_text@@Base+0xb0>
    36e4:	ldp	x23, x24, [sp, #48]
    36e8:	b	35b4 <cap_from_text@@Base+0x3f0>
    36ec:	ldp	x23, x24, [sp, #48]
    36f0:	b	35b4 <cap_from_text@@Base+0x3f0>
    36f4:	ldp	x23, x24, [sp, #48]
    36f8:	b	35b4 <cap_from_text@@Base+0x3f0>
    36fc:	ldp	x21, x22, [sp, #32]
    3700:	ldp	x25, x26, [sp, #64]
    3704:	ldp	x27, x28, [sp, #80]
    3708:	b	35d8 <cap_from_text@@Base+0x414>

000000000000370c <cap_from_name@@Base>:
    370c:	stp	x29, x30, [sp, #-48]!
    3710:	mov	x29, sp
    3714:	str	x19, [sp, #16]
    3718:	str	x0, [sp, #40]
    371c:	mov	x19, x1
    3720:	add	x0, sp, #0x28
    3724:	bl	3008 <cap_compare@@Base+0x1f4>
    3728:	cmp	x19, #0x0
    372c:	ccmp	w0, #0x0, #0x1, ne  // ne = any
    3730:	b.ge	3744 <cap_from_name@@Base+0x38>  // b.tcont
    3734:	asr	w0, w0, #31
    3738:	ldr	x19, [sp, #16]
    373c:	ldp	x29, x30, [sp], #48
    3740:	ret
    3744:	str	w0, [x19]
    3748:	b	3734 <cap_from_name@@Base+0x28>

000000000000374c <cap_to_name@@Base>:
    374c:	stp	x29, x30, [sp, #-48]!
    3750:	mov	x29, sp
    3754:	str	x19, [sp, #16]
    3758:	mov	w2, w0
    375c:	cmp	w0, #0x25
    3760:	b.ls	3798 <cap_to_name@@Base+0x4c>  // b.plast
    3764:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    3768:	add	x1, x1, #0x220
    376c:	add	x0, sp, #0x28
    3770:	bl	1af0 <asprintf@plt>
    3774:	ldr	x0, [sp, #40]
    3778:	bl	1ab0 <_libcap_strdup@plt>
    377c:	mov	x19, x0
    3780:	ldr	x0, [sp, #40]
    3784:	bl	1c40 <free@plt>
    3788:	mov	x0, x19
    378c:	ldr	x19, [sp, #16]
    3790:	ldp	x29, x30, [sp], #48
    3794:	ret
    3798:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10e0c>
    379c:	ldr	x0, [x0, #4032]
    37a0:	ldr	x0, [x0, w2, sxtw #3]
    37a4:	bl	1ab0 <_libcap_strdup@plt>
    37a8:	mov	x19, x0
    37ac:	b	3788 <cap_to_name@@Base+0x3c>

00000000000037b0 <cap_to_text@@Base>:
    37b0:	sub	sp, sp, #0x640
    37b4:	stp	x29, x30, [sp]
    37b8:	mov	x29, sp
    37bc:	str	x1, [sp, #104]
    37c0:	cbz	x0, 38d0 <cap_to_text@@Base+0x120>
    37c4:	stp	x19, x20, [sp, #16]
    37c8:	mov	x20, x0
    37cc:	ldur	w1, [x0, #-4]
    37d0:	mov	w0, #0x90d0                	// #37072
    37d4:	movk	w0, #0xca, lsl #16
    37d8:	cmp	w1, w0
    37dc:	b.ne	38cc <cap_to_text@@Base+0x11c>  // b.any
    37e0:	stp	x21, x22, [sp, #32]
    37e4:	stp	x23, x24, [sp, #48]
    37e8:	stp	x25, x26, [sp, #64]
    37ec:	stp	x27, x28, [sp, #80]
    37f0:	stp	xzr, xzr, [sp, #120]
    37f4:	stp	xzr, xzr, [sp, #136]
    37f8:	bl	1aa0 <cap_max_bits@plt>
    37fc:	mov	w22, w0
    3800:	cbz	w0, 3834 <cap_to_text@@Base+0x84>
    3804:	mov	w19, #0x0                   	// #0
    3808:	add	x21, sp, #0x78
    380c:	mov	w1, w19
    3810:	mov	x0, x20
    3814:	bl	2f18 <cap_compare@@Base+0x104>
    3818:	sxtw	x0, w0
    381c:	ldr	w1, [x21, x0, lsl #2]
    3820:	add	w1, w1, #0x1
    3824:	str	w1, [x21, x0, lsl #2]
    3828:	add	w19, w19, #0x1
    382c:	cmp	w19, w22
    3830:	b.ne	380c <cap_to_text@@Base+0x5c>  // b.any
    3834:	add	x1, sp, #0x90
    3838:	mov	w0, #0x6                   	// #6
    383c:	mov	w24, #0x7                   	// #7
    3840:	add	x4, sp, #0x78
    3844:	ldr	w3, [x1], #-4
    3848:	ldr	w2, [x4, w24, sxtw #2]
    384c:	cmp	w3, w2
    3850:	csel	w24, w24, w0, lt  // lt = tstop
    3854:	sub	w0, w0, #0x1
    3858:	cmn	w0, #0x1
    385c:	b.ne	3844 <cap_to_text@@Base+0x94>  // b.any
    3860:	adrp	x2, 4000 <cap_get_fd@@Base+0x54>
    3864:	add	x0, x2, #0x448
    3868:	adrp	x2, 4000 <cap_get_fd@@Base+0x54>
    386c:	add	x2, x2, #0x490
    3870:	tst	x24, #0x1
    3874:	csel	x2, x2, x0, ne  // ne = any
    3878:	adrp	x3, 4000 <cap_get_fd@@Base+0x54>
    387c:	add	x3, x3, #0x228
    3880:	tst	x24, #0x4
    3884:	csel	x3, x3, x0, ne  // ne = any
    3888:	adrp	x0, 4000 <cap_get_fd@@Base+0x54>
    388c:	add	x0, x0, #0x448
    3890:	adrp	x4, 4000 <cap_get_fd@@Base+0x54>
    3894:	add	x4, x4, #0x230
    3898:	tst	x24, #0x2
    389c:	add	x21, sp, #0x98
    38a0:	csel	x4, x4, x0, ne  // ne = any
    38a4:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    38a8:	add	x1, x1, #0x238
    38ac:	mov	x0, x21
    38b0:	bl	1ae0 <sprintf@plt>
    38b4:	add	x21, x21, w0, sxtw
    38b8:	mov	x23, #0x7                   	// #7
    38bc:	add	x28, sp, #0x98
    38c0:	adrp	x27, 4000 <cap_get_fd@@Base+0x54>
    38c4:	add	x27, x27, #0x240
    38c8:	b	3a68 <cap_to_text@@Base+0x2b8>
    38cc:	ldp	x19, x20, [sp, #16]
    38d0:	bl	1d00 <__errno_location@plt>
    38d4:	mov	w1, #0x16                  	// #22
    38d8:	str	w1, [x0]
    38dc:	mov	x0, #0x0                   	// #0
    38e0:	ldp	x29, x30, [sp]
    38e4:	add	sp, sp, #0x640
    38e8:	ret
    38ec:	mov	x0, x26
    38f0:	bl	1cb0 <cap_free@plt>
    38f4:	bl	1d00 <__errno_location@plt>
    38f8:	mov	w1, #0x22                  	// #34
    38fc:	str	w1, [x0]
    3900:	mov	x0, #0x0                   	// #0
    3904:	ldp	x19, x20, [sp, #16]
    3908:	ldp	x21, x22, [sp, #32]
    390c:	ldp	x23, x24, [sp, #48]
    3910:	ldp	x25, x26, [sp, #64]
    3914:	ldp	x27, x28, [sp, #80]
    3918:	b	38e0 <cap_to_text@@Base+0x130>
    391c:	add	w19, w19, #0x1
    3920:	cmp	w19, w22
    3924:	b.eq	397c <cap_to_text@@Base+0x1cc>  // b.none
    3928:	mov	w1, w19
    392c:	mov	x0, x20
    3930:	bl	2f18 <cap_compare@@Base+0x104>
    3934:	cmp	w0, w25
    3938:	b.ne	391c <cap_to_text@@Base+0x16c>  // b.any
    393c:	mov	w0, w19
    3940:	bl	1d30 <cap_to_name@plt>
    3944:	mov	x26, x0
    3948:	bl	1a60 <strlen@plt>
    394c:	sub	x1, x21, x28
    3950:	add	x1, x1, x0
    3954:	cmp	x1, #0x540
    3958:	b.hi	38ec <cap_to_text@@Base+0x13c>  // b.pmore
    395c:	mov	x2, x26
    3960:	mov	x1, x27
    3964:	mov	x0, x21
    3968:	bl	1ae0 <sprintf@plt>
    396c:	add	x21, x21, w0, sxtw
    3970:	mov	x0, x26
    3974:	bl	1cb0 <cap_free@plt>
    3978:	b	391c <cap_to_text@@Base+0x16c>
    397c:	sub	x21, x21, #0x1
    3980:	ldr	w0, [sp, #100]
    3984:	bics	w0, w0, w24
    3988:	b.eq	39e8 <cap_to_text@@Base+0x238>  // b.none
    398c:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    3990:	add	x1, x1, #0x448
    3994:	adrp	x2, 4000 <cap_get_fd@@Base+0x54>
    3998:	add	x2, x2, #0x490
    399c:	tst	x0, #0x1
    39a0:	csel	x2, x2, x1, ne  // ne = any
    39a4:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    39a8:	add	x1, x1, #0x448
    39ac:	adrp	x3, 4000 <cap_get_fd@@Base+0x54>
    39b0:	add	x3, x3, #0x228
    39b4:	tst	x0, #0x4
    39b8:	csel	x3, x3, x1, ne  // ne = any
    39bc:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    39c0:	add	x1, x1, #0x448
    39c4:	adrp	x4, 4000 <cap_get_fd@@Base+0x54>
    39c8:	add	x4, x4, #0x230
    39cc:	tst	x0, #0x2
    39d0:	csel	x4, x4, x1, ne  // ne = any
    39d4:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    39d8:	add	x1, x1, #0x248
    39dc:	mov	x0, x21
    39e0:	bl	1ae0 <sprintf@plt>
    39e4:	add	x21, x21, w0, sxtw
    39e8:	ldr	w0, [sp, #96]
    39ec:	bics	w0, w24, w0
    39f0:	b.eq	3a50 <cap_to_text@@Base+0x2a0>  // b.none
    39f4:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    39f8:	add	x1, x1, #0x448
    39fc:	adrp	x2, 4000 <cap_get_fd@@Base+0x54>
    3a00:	add	x2, x2, #0x490
    3a04:	tst	x0, #0x1
    3a08:	csel	x2, x2, x1, ne  // ne = any
    3a0c:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    3a10:	add	x1, x1, #0x448
    3a14:	adrp	x3, 4000 <cap_get_fd@@Base+0x54>
    3a18:	add	x3, x3, #0x228
    3a1c:	tst	x0, #0x4
    3a20:	csel	x3, x3, x1, ne  // ne = any
    3a24:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    3a28:	add	x1, x1, #0x448
    3a2c:	adrp	x4, 4000 <cap_get_fd@@Base+0x54>
    3a30:	add	x4, x4, #0x230
    3a34:	tst	x0, #0x2
    3a38:	csel	x4, x4, x1, ne  // ne = any
    3a3c:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    3a40:	add	x1, x1, #0x250
    3a44:	mov	x0, x21
    3a48:	bl	1ae0 <sprintf@plt>
    3a4c:	add	x21, x21, w0, sxtw
    3a50:	sub	x0, x21, x28
    3a54:	cmp	x0, #0x540
    3a58:	b.gt	3a9c <cap_to_text@@Base+0x2ec>
    3a5c:	sub	x23, x23, #0x1
    3a60:	cmn	x23, #0x1
    3a64:	b.eq	3ac4 <cap_to_text@@Base+0x314>  // b.none
    3a68:	str	w23, [sp, #96]
    3a6c:	str	w23, [sp, #100]
    3a70:	mov	w25, w23
    3a74:	cmp	w24, w23
    3a78:	b.eq	3a5c <cap_to_text@@Base+0x2ac>  // b.none
    3a7c:	add	x0, sp, #0x78
    3a80:	ldr	w0, [x0, x23, lsl #2]
    3a84:	cbz	w0, 3a5c <cap_to_text@@Base+0x2ac>
    3a88:	mov	w0, #0x20                  	// #32
    3a8c:	strb	w0, [x21], #1
    3a90:	cbz	w22, 397c <cap_to_text@@Base+0x1cc>
    3a94:	mov	w19, #0x0                   	// #0
    3a98:	b	3928 <cap_to_text@@Base+0x178>
    3a9c:	bl	1d00 <__errno_location@plt>
    3aa0:	mov	w1, #0x22                  	// #34
    3aa4:	str	w1, [x0]
    3aa8:	mov	x0, #0x0                   	// #0
    3aac:	ldp	x19, x20, [sp, #16]
    3ab0:	ldp	x21, x22, [sp, #32]
    3ab4:	ldp	x23, x24, [sp, #48]
    3ab8:	ldp	x25, x26, [sp, #64]
    3abc:	ldp	x27, x28, [sp, #80]
    3ac0:	b	38e0 <cap_to_text@@Base+0x130>
    3ac4:	stp	xzr, xzr, [sp, #120]
    3ac8:	stp	xzr, xzr, [sp, #136]
    3acc:	cmp	w22, #0x3f
    3ad0:	b.hi	3b04 <cap_to_text@@Base+0x354>  // b.pmore
    3ad4:	mov	w19, w22
    3ad8:	add	x23, sp, #0x78
    3adc:	mov	w1, w19
    3ae0:	mov	x0, x20
    3ae4:	bl	2f18 <cap_compare@@Base+0x104>
    3ae8:	sxtw	x0, w0
    3aec:	ldr	w1, [x23, x0, lsl #2]
    3af0:	add	w1, w1, #0x1
    3af4:	str	w1, [x23, x0, lsl #2]
    3af8:	add	w19, w19, #0x1
    3afc:	cmp	w19, #0x40
    3b00:	b.ne	3adc <cap_to_text@@Base+0x32c>  // b.any
    3b04:	add	x25, sp, #0x78
    3b08:	mov	w24, #0x7                   	// #7
    3b0c:	add	x27, sp, #0x98
    3b10:	adrp	x26, 4000 <cap_get_fd@@Base+0x54>
    3b14:	add	x26, x26, #0x240
    3b18:	b	3c0c <cap_to_text@@Base+0x45c>
    3b1c:	mov	x0, x28
    3b20:	bl	1cb0 <cap_free@plt>
    3b24:	bl	1d00 <__errno_location@plt>
    3b28:	mov	w1, #0x22                  	// #34
    3b2c:	str	w1, [x0]
    3b30:	mov	x0, #0x0                   	// #0
    3b34:	ldp	x19, x20, [sp, #16]
    3b38:	ldp	x21, x22, [sp, #32]
    3b3c:	ldp	x23, x24, [sp, #48]
    3b40:	ldp	x25, x26, [sp, #64]
    3b44:	ldp	x27, x28, [sp, #80]
    3b48:	b	38e0 <cap_to_text@@Base+0x130>
    3b4c:	add	w19, w19, #0x1
    3b50:	cmp	w19, #0x40
    3b54:	b.eq	3bac <cap_to_text@@Base+0x3fc>  // b.none
    3b58:	mov	w1, w19
    3b5c:	mov	x0, x20
    3b60:	bl	2f18 <cap_compare@@Base+0x104>
    3b64:	cmp	w0, w23
    3b68:	b.ne	3b4c <cap_to_text@@Base+0x39c>  // b.any
    3b6c:	mov	w0, w19
    3b70:	bl	1d30 <cap_to_name@plt>
    3b74:	mov	x28, x0
    3b78:	bl	1a60 <strlen@plt>
    3b7c:	sub	x1, x21, x27
    3b80:	add	x1, x1, x0
    3b84:	cmp	x1, #0x540
    3b88:	b.hi	3b1c <cap_to_text@@Base+0x36c>  // b.pmore
    3b8c:	mov	x2, x28
    3b90:	mov	x1, x26
    3b94:	mov	x0, x21
    3b98:	bl	1ae0 <sprintf@plt>
    3b9c:	add	x21, x21, w0, sxtw
    3ba0:	mov	x0, x28
    3ba4:	bl	1cb0 <cap_free@plt>
    3ba8:	b	3b4c <cap_to_text@@Base+0x39c>
    3bac:	sub	x21, x21, #0x1
    3bb0:	adrp	x2, 4000 <cap_get_fd@@Base+0x54>
    3bb4:	add	x0, x2, #0x448
    3bb8:	adrp	x2, 4000 <cap_get_fd@@Base+0x54>
    3bbc:	add	x2, x2, #0x490
    3bc0:	tst	x23, #0x1
    3bc4:	csel	x2, x2, x0, ne  // ne = any
    3bc8:	adrp	x3, 4000 <cap_get_fd@@Base+0x54>
    3bcc:	add	x3, x3, #0x228
    3bd0:	tst	x23, #0x4
    3bd4:	csel	x3, x3, x0, ne  // ne = any
    3bd8:	tbnz	w23, #1, 3c8c <cap_to_text@@Base+0x4dc>
    3bdc:	mov	x4, x0
    3be0:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    3be4:	add	x1, x1, #0x248
    3be8:	mov	x0, x21
    3bec:	bl	1ae0 <sprintf@plt>
    3bf0:	add	x21, x21, w0, sxtw
    3bf4:	sub	x0, x21, x27
    3bf8:	cmp	x0, #0x540
    3bfc:	b.gt	3c30 <cap_to_text@@Base+0x480>
    3c00:	sub	x25, x25, #0x4
    3c04:	subs	w24, w24, #0x1
    3c08:	b.eq	3c58 <cap_to_text@@Base+0x4a8>  // b.none
    3c0c:	mov	w23, w24
    3c10:	ldr	w0, [x25, #28]
    3c14:	cbz	w0, 3c00 <cap_to_text@@Base+0x450>
    3c18:	mov	w0, #0x20                  	// #32
    3c1c:	strb	w0, [x21], #1
    3c20:	cmp	w22, #0x3f
    3c24:	b.hi	3bac <cap_to_text@@Base+0x3fc>  // b.pmore
    3c28:	mov	w19, w22
    3c2c:	b	3b58 <cap_to_text@@Base+0x3a8>
    3c30:	bl	1d00 <__errno_location@plt>
    3c34:	mov	w1, #0x22                  	// #34
    3c38:	str	w1, [x0]
    3c3c:	mov	x0, #0x0                   	// #0
    3c40:	ldp	x19, x20, [sp, #16]
    3c44:	ldp	x21, x22, [sp, #32]
    3c48:	ldp	x23, x24, [sp, #48]
    3c4c:	ldp	x25, x26, [sp, #64]
    3c50:	ldp	x27, x28, [sp, #80]
    3c54:	b	38e0 <cap_to_text@@Base+0x130>
    3c58:	ldr	x1, [sp, #104]
    3c5c:	cbz	x1, 3c6c <cap_to_text@@Base+0x4bc>
    3c60:	add	x0, sp, #0x98
    3c64:	sub	x21, x21, x0
    3c68:	str	x21, [x1]
    3c6c:	add	x0, sp, #0x98
    3c70:	bl	1ab0 <_libcap_strdup@plt>
    3c74:	ldp	x19, x20, [sp, #16]
    3c78:	ldp	x21, x22, [sp, #32]
    3c7c:	ldp	x23, x24, [sp, #48]
    3c80:	ldp	x25, x26, [sp, #64]
    3c84:	ldp	x27, x28, [sp, #80]
    3c88:	b	38e0 <cap_to_text@@Base+0x130>
    3c8c:	adrp	x4, 4000 <cap_get_fd@@Base+0x54>
    3c90:	add	x4, x4, #0x230
    3c94:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    3c98:	add	x1, x1, #0x248
    3c9c:	mov	x0, x21
    3ca0:	bl	1ae0 <sprintf@plt>
    3ca4:	add	x21, x21, w0, sxtw
    3ca8:	sub	x0, x21, x27
    3cac:	cmp	x0, #0x540
    3cb0:	b.gt	3c30 <cap_to_text@@Base+0x480>
    3cb4:	sub	w24, w24, #0x1
    3cb8:	sub	x25, x25, #0x4
    3cbc:	b	3c0c <cap_to_text@@Base+0x45c>

0000000000003cc0 <cap_mode_name@@Base>:
    3cc0:	cmp	w0, #0x2
    3cc4:	b.eq	3d08 <cap_mode_name@@Base+0x48>  // b.none
    3cc8:	cmp	w0, #0x2
    3ccc:	b.hi	3cec <cap_mode_name@@Base+0x2c>  // b.pmore
    3cd0:	adrp	x2, 4000 <cap_get_fd@@Base+0x54>
    3cd4:	add	x2, x2, #0x268
    3cd8:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    3cdc:	add	x1, x1, #0x260
    3ce0:	cmp	w0, #0x0
    3ce4:	csel	x0, x1, x2, ne  // ne = any
    3ce8:	ret
    3cec:	adrp	x2, 4000 <cap_get_fd@@Base+0x54>
    3cf0:	add	x2, x2, #0x288
    3cf4:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    3cf8:	add	x1, x1, #0x258
    3cfc:	cmp	w0, #0x3
    3d00:	csel	x0, x1, x2, ne  // ne = any
    3d04:	b	3ce8 <cap_mode_name@@Base+0x28>
    3d08:	adrp	x0, 4000 <cap_get_fd@@Base+0x54>
    3d0c:	add	x0, x0, #0x278
    3d10:	b	3ce8 <cap_mode_name@@Base+0x28>
    3d14:	stp	x29, x30, [sp, #-16]!
    3d18:	mov	x29, sp
    3d1c:	mov	x3, x0
    3d20:	mov	x0, x1
    3d24:	ldr	w4, [x3]
    3d28:	and	w1, w4, #0xff000000
    3d2c:	mov	w5, #0x2000000             	// #33554432
    3d30:	cmp	w1, w5
    3d34:	b.eq	3d80 <cap_mode_name@@Base+0xc0>  // b.none
    3d38:	mov	w5, #0x3000000             	// #50331648
    3d3c:	cmp	w1, w5
    3d40:	b.eq	3d8c <cap_mode_name@@Base+0xcc>  // b.none
    3d44:	mov	w5, #0x1000000             	// #16777216
    3d48:	cmp	w1, w5
    3d4c:	b.eq	3d5c <cap_mode_name@@Base+0x9c>  // b.none
    3d50:	bl	1cb0 <cap_free@plt>
    3d54:	mov	x0, #0x0                   	// #0
    3d58:	b	3df0 <cap_mode_name@@Base+0x130>
    3d5c:	sub	w2, w2, #0xc
    3d60:	mov	w7, #0x1                   	// #1
    3d64:	cbnz	w2, 3da0 <cap_mode_name@@Base+0xe0>
    3d68:	mov	x1, x3
    3d6c:	add	x2, x0, #0x8
    3d70:	ubfiz	x5, x7, #3, #2
    3d74:	add	x3, x3, x5
    3d78:	and	w5, w4, #0x1
    3d7c:	b	3dbc <cap_mode_name@@Base+0xfc>
    3d80:	sub	w2, w2, #0x14
    3d84:	mov	w7, #0x2                   	// #2
    3d88:	b	3d64 <cap_mode_name@@Base+0xa4>
    3d8c:	sub	w2, w2, #0x18
    3d90:	ldr	w1, [x3, #20]
    3d94:	str	w1, [x0, #32]
    3d98:	mov	w7, #0x2                   	// #2
    3d9c:	b	3d64 <cap_mode_name@@Base+0xa4>
    3da0:	bl	1cb0 <cap_free@plt>
    3da4:	mov	x0, #0x0                   	// #0
    3da8:	b	3df0 <cap_mode_name@@Base+0x130>
    3dac:	add	x1, x1, #0x8
    3db0:	add	x2, x2, #0xc
    3db4:	cmp	x1, x3
    3db8:	b.eq	3ddc <cap_mode_name@@Base+0x11c>  // b.none
    3dbc:	ldr	w4, [x1, #8]
    3dc0:	str	w4, [x2, #8]
    3dc4:	ldr	w6, [x1, #4]
    3dc8:	str	w6, [x2, #4]
    3dcc:	cbz	w5, 3dac <cap_mode_name@@Base+0xec>
    3dd0:	orr	w4, w4, w6
    3dd4:	str	w4, [x2]
    3dd8:	b	3dac <cap_mode_name@@Base+0xec>
    3ddc:	cmp	w7, #0x1
    3de0:	b.hi	3df0 <cap_mode_name@@Base+0x130>  // b.pmore
    3de4:	str	wzr, [x0, #20]
    3de8:	str	wzr, [x0, #24]
    3dec:	str	wzr, [x0, #28]
    3df0:	ldp	x29, x30, [sp], #16
    3df4:	ret
    3df8:	stp	x29, x30, [sp, #-16]!
    3dfc:	mov	x29, sp
    3e00:	cbz	x1, 3e60 <cap_mode_name@@Base+0x1a0>
    3e04:	ldur	w4, [x1, #-4]
    3e08:	mov	w3, #0x90d0                	// #37072
    3e0c:	movk	w3, #0xca, lsl #16
    3e10:	cmp	w4, w3
    3e14:	b.ne	3e60 <cap_mode_name@@Base+0x1a0>  // b.any
    3e18:	ldr	w3, [x1]
    3e1c:	mov	w4, #0x1026                	// #4134
    3e20:	movk	w4, #0x2007, lsl #16
    3e24:	cmp	w3, w4
    3e28:	b.eq	3ebc <cap_mode_name@@Base+0x1fc>  // b.none
    3e2c:	mov	w4, #0x522                 	// #1314
    3e30:	movk	w4, #0x2008, lsl #16
    3e34:	cmp	w3, w4
    3e38:	b.eq	3ebc <cap_mode_name@@Base+0x1fc>  // b.none
    3e3c:	mov	w4, #0x330                 	// #816
    3e40:	movk	w4, #0x1998, lsl #16
    3e44:	cmp	w3, w4
    3e48:	b.eq	3e74 <cap_mode_name@@Base+0x1b4>  // b.none
    3e4c:	bl	1d00 <__errno_location@plt>
    3e50:	mov	w1, #0x16                  	// #22
    3e54:	str	w1, [x0]
    3e58:	mov	w0, #0xffffffff            	// #-1
    3e5c:	b	3f2c <cap_mode_name@@Base+0x26c>
    3e60:	bl	1d00 <__errno_location@plt>
    3e64:	mov	w1, #0x16                  	// #22
    3e68:	str	w1, [x0]
    3e6c:	mov	w0, #0xffffffff            	// #-1
    3e70:	b	3f2c <cap_mode_name@@Base+0x26c>
    3e74:	mov	w3, #0xc                   	// #12
    3e78:	str	w3, [x2]
    3e7c:	ldr	w3, [x1, #32]
    3e80:	cbnz	w3, 3ecc <cap_mode_name@@Base+0x20c>
    3e84:	ldr	w3, [x1, #8]
    3e88:	ldr	w2, [x1, #20]
    3e8c:	cbnz	w2, 3f1c <cap_mode_name@@Base+0x25c>
    3e90:	ldr	w2, [x1, #28]
    3e94:	cbnz	w2, 3f1c <cap_mode_name@@Base+0x25c>
    3e98:	ldr	w2, [x1, #24]
    3e9c:	mov	w4, #0x1                   	// #1
    3ea0:	mov	w6, #0x1000000             	// #16777216
    3ea4:	cbnz	w2, 3f1c <cap_mode_name@@Base+0x25c>
    3ea8:	add	x1, x1, #0x8
    3eac:	mov	x2, x0
    3eb0:	ubfiz	x4, x4, #3, #2
    3eb4:	add	x4, x4, x0
    3eb8:	b	3f44 <cap_mode_name@@Base+0x284>
    3ebc:	mov	w3, #0x14                  	// #20
    3ec0:	str	w3, [x2]
    3ec4:	ldr	w3, [x1, #32]
    3ec8:	cbz	w3, 3fa0 <cap_mode_name@@Base+0x2e0>
    3ecc:	ldr	w4, [x1]
    3ed0:	mov	w3, #0x521                 	// #1313
    3ed4:	movk	w3, #0x2008, lsl #16
    3ed8:	cmp	w4, w3
    3edc:	b.ls	3f08 <cap_mode_name@@Base+0x248>  // b.plast
    3ee0:	mov	w3, #0x18                  	// #24
    3ee4:	str	w3, [x2]
    3ee8:	ldr	w2, [x1, #32]
    3eec:	str	w2, [x0, #20]
    3ef0:	ldr	w3, [x1, #8]
    3ef4:	mov	w6, #0x3000000             	// #50331648
    3ef8:	ldr	w2, [x1, #20]
    3efc:	orr	w3, w3, w2
    3f00:	mov	w4, #0x2                   	// #2
    3f04:	b	3ea8 <cap_mode_name@@Base+0x1e8>
    3f08:	bl	1d00 <__errno_location@plt>
    3f0c:	mov	w1, #0x16                  	// #22
    3f10:	str	w1, [x0]
    3f14:	mov	w0, #0xffffffff            	// #-1
    3f18:	b	3f2c <cap_mode_name@@Base+0x26c>
    3f1c:	bl	1d00 <__errno_location@plt>
    3f20:	mov	w1, #0x16                  	// #22
    3f24:	str	w1, [x0]
    3f28:	mov	w0, #0xffffffff            	// #-1
    3f2c:	ldp	x29, x30, [sp], #16
    3f30:	ret
    3f34:	add	x1, x1, #0xc
    3f38:	add	x2, x2, #0x8
    3f3c:	cmp	x2, x4
    3f40:	b.eq	3f80 <cap_mode_name@@Base+0x2c0>  // b.none
    3f44:	ldr	w5, [x1, #4]
    3f48:	str	w5, [x2, #4]
    3f4c:	ldr	w5, [x1, #8]
    3f50:	str	w5, [x2, #8]
    3f54:	cbz	w3, 3f34 <cap_mode_name@@Base+0x274>
    3f58:	ldr	w7, [x1]
    3f5c:	ldr	w8, [x1, #4]
    3f60:	orr	w5, w5, w8
    3f64:	bics	wzr, w5, w7
    3f68:	b.eq	3f34 <cap_mode_name@@Base+0x274>  // b.none
    3f6c:	bl	1d00 <__errno_location@plt>
    3f70:	mov	w1, #0x16                  	// #22
    3f74:	str	w1, [x0]
    3f78:	mov	w0, #0xffffffff            	// #-1
    3f7c:	b	3f2c <cap_mode_name@@Base+0x26c>
    3f80:	cbnz	w3, 3f90 <cap_mode_name@@Base+0x2d0>
    3f84:	str	w6, [x0]
    3f88:	mov	w0, #0x0                   	// #0
    3f8c:	b	3f2c <cap_mode_name@@Base+0x26c>
    3f90:	orr	w6, w6, #0x1
    3f94:	str	w6, [x0]
    3f98:	mov	w0, #0x0                   	// #0
    3f9c:	b	3f2c <cap_mode_name@@Base+0x26c>
    3fa0:	ldr	w3, [x1, #8]
    3fa4:	mov	w6, #0x2000000             	// #33554432
    3fa8:	b	3ef8 <cap_mode_name@@Base+0x238>

0000000000003fac <cap_get_fd@@Base>:
    3fac:	stp	x29, x30, [sp, #-64]!
    3fb0:	mov	x29, sp
    3fb4:	stp	x19, x20, [sp, #16]
    3fb8:	mov	w20, w0
    3fbc:	bl	1bd0 <cap_init@plt>
    3fc0:	mov	x19, x0
    3fc4:	cbz	x0, 3ff4 <cap_get_fd@@Base+0x48>
    3fc8:	mov	x3, #0x18                  	// #24
    3fcc:	add	x2, sp, #0x28
    3fd0:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    3fd4:	add	x1, x1, #0x540
    3fd8:	mov	w0, w20
    3fdc:	bl	1c60 <fgetxattr@plt>
    3fe0:	cmp	w0, #0x3
    3fe4:	b.gt	4004 <cap_get_fd@@Base+0x58>
    3fe8:	mov	x0, x19
    3fec:	bl	1cb0 <cap_free@plt>
    3ff0:	mov	x19, #0x0                   	// #0
    3ff4:	mov	x0, x19
    3ff8:	ldp	x19, x20, [sp, #16]
    3ffc:	ldp	x29, x30, [sp], #64
    4000:	ret
    4004:	mov	w2, w0
    4008:	mov	x1, x19
    400c:	add	x0, sp, #0x28
    4010:	bl	3d14 <cap_mode_name@@Base+0x54>
    4014:	mov	x19, x0
    4018:	b	3ff4 <cap_get_fd@@Base+0x48>

000000000000401c <cap_get_file@@Base>:
    401c:	stp	x29, x30, [sp, #-64]!
    4020:	mov	x29, sp
    4024:	stp	x19, x20, [sp, #16]
    4028:	mov	x20, x0
    402c:	bl	1bd0 <cap_init@plt>
    4030:	mov	x19, x0
    4034:	cbz	x0, 4064 <cap_get_file@@Base+0x48>
    4038:	mov	x3, #0x18                  	// #24
    403c:	add	x2, sp, #0x28
    4040:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    4044:	add	x1, x1, #0x540
    4048:	mov	x0, x20
    404c:	bl	1be0 <getxattr@plt>
    4050:	cmp	w0, #0x3
    4054:	b.gt	4074 <cap_get_file@@Base+0x58>
    4058:	mov	x0, x19
    405c:	bl	1cb0 <cap_free@plt>
    4060:	mov	x19, #0x0                   	// #0
    4064:	mov	x0, x19
    4068:	ldp	x19, x20, [sp, #16]
    406c:	ldp	x29, x30, [sp], #64
    4070:	ret
    4074:	mov	w2, w0
    4078:	mov	x1, x19
    407c:	add	x0, sp, #0x28
    4080:	bl	3d14 <cap_mode_name@@Base+0x54>
    4084:	mov	x19, x0
    4088:	b	4064 <cap_get_file@@Base+0x48>

000000000000408c <cap_get_nsowner@@Base>:
    408c:	ldr	w0, [x0, #32]
    4090:	ret

0000000000004094 <cap_set_fd@@Base>:
    4094:	stp	x29, x30, [sp, #-192]!
    4098:	mov	x29, sp
    409c:	stp	x19, x20, [sp, #16]
    40a0:	mov	w19, w0
    40a4:	mov	x20, x1
    40a8:	add	x2, sp, #0x20
    40ac:	mov	w1, w0
    40b0:	mov	w0, #0x0                   	// #0
    40b4:	bl	1c50 <__fxstat64@plt>
    40b8:	cbnz	w0, 4134 <cap_set_fd@@Base+0xa0>
    40bc:	ldr	w0, [sp, #48]
    40c0:	and	w0, w0, #0xf000
    40c4:	cmp	w0, #0x8, lsl #12
    40c8:	b.ne	410c <cap_set_fd@@Base+0x78>  // b.any
    40cc:	cbz	x20, 4120 <cap_set_fd@@Base+0x8c>
    40d0:	add	x2, sp, #0xa4
    40d4:	mov	x1, x20
    40d8:	add	x0, sp, #0xa8
    40dc:	bl	3df8 <cap_mode_name@@Base+0x138>
    40e0:	cbnz	w0, 413c <cap_set_fd@@Base+0xa8>
    40e4:	mov	w4, #0x0                   	// #0
    40e8:	ldrsw	x3, [sp, #164]
    40ec:	add	x2, sp, #0xa8
    40f0:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    40f4:	add	x1, x1, #0x540
    40f8:	mov	w0, w19
    40fc:	bl	1c90 <fsetxattr@plt>
    4100:	ldp	x19, x20, [sp, #16]
    4104:	ldp	x29, x30, [sp], #192
    4108:	ret
    410c:	bl	1d00 <__errno_location@plt>
    4110:	mov	w1, #0x16                  	// #22
    4114:	str	w1, [x0]
    4118:	mov	w0, #0xffffffff            	// #-1
    411c:	b	4100 <cap_set_fd@@Base+0x6c>
    4120:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    4124:	add	x1, x1, #0x540
    4128:	mov	w0, w19
    412c:	bl	1bb0 <fremovexattr@plt>
    4130:	b	4100 <cap_set_fd@@Base+0x6c>
    4134:	mov	w0, #0xffffffff            	// #-1
    4138:	b	4100 <cap_set_fd@@Base+0x6c>
    413c:	mov	w0, #0xffffffff            	// #-1
    4140:	b	4100 <cap_set_fd@@Base+0x6c>

0000000000004144 <cap_set_file@@Base>:
    4144:	stp	x29, x30, [sp, #-192]!
    4148:	mov	x29, sp
    414c:	stp	x19, x20, [sp, #16]
    4150:	mov	x19, x0
    4154:	mov	x20, x1
    4158:	add	x2, sp, #0x20
    415c:	mov	x1, x0
    4160:	mov	w0, #0x0                   	// #0
    4164:	bl	1c20 <__lxstat64@plt>
    4168:	cbnz	w0, 41e4 <cap_set_file@@Base+0xa0>
    416c:	ldr	w0, [sp, #48]
    4170:	and	w0, w0, #0xf000
    4174:	cmp	w0, #0x8, lsl #12
    4178:	b.ne	41bc <cap_set_file@@Base+0x78>  // b.any
    417c:	cbz	x20, 41d0 <cap_set_file@@Base+0x8c>
    4180:	add	x2, sp, #0xa4
    4184:	mov	x1, x20
    4188:	add	x0, sp, #0xa8
    418c:	bl	3df8 <cap_mode_name@@Base+0x138>
    4190:	cbnz	w0, 41ec <cap_set_file@@Base+0xa8>
    4194:	mov	w4, #0x0                   	// #0
    4198:	ldrsw	x3, [sp, #164]
    419c:	add	x2, sp, #0xa8
    41a0:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    41a4:	add	x1, x1, #0x540
    41a8:	mov	x0, x19
    41ac:	bl	1b40 <setxattr@plt>
    41b0:	ldp	x19, x20, [sp, #16]
    41b4:	ldp	x29, x30, [sp], #192
    41b8:	ret
    41bc:	bl	1d00 <__errno_location@plt>
    41c0:	mov	w1, #0x16                  	// #22
    41c4:	str	w1, [x0]
    41c8:	mov	w0, #0xffffffff            	// #-1
    41cc:	b	41b0 <cap_set_file@@Base+0x6c>
    41d0:	adrp	x1, 4000 <cap_get_fd@@Base+0x54>
    41d4:	add	x1, x1, #0x540
    41d8:	mov	x0, x19
    41dc:	bl	1a30 <removexattr@plt>
    41e0:	b	41b0 <cap_set_file@@Base+0x6c>
    41e4:	mov	w0, #0xffffffff            	// #-1
    41e8:	b	41b0 <cap_set_file@@Base+0x6c>
    41ec:	mov	w0, #0xffffffff            	// #-1
    41f0:	b	41b0 <cap_set_file@@Base+0x6c>

00000000000041f4 <cap_set_nsowner@@Base>:
    41f4:	str	w1, [x0, #32]
    41f8:	mov	w0, #0x0                   	// #0
    41fc:	ret

Disassembly of section .fini:

0000000000004200 <.fini>:
    4200:	stp	x29, x30, [sp, #-16]!
    4204:	mov	x29, sp
    4208:	ldp	x29, x30, [sp], #16
    420c:	ret
