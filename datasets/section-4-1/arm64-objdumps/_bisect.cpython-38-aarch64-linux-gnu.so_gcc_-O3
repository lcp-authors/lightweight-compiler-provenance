
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bisect.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b30 <.init>:
 b30:	stp	x29, x30, [sp, #-16]!
 b34:	mov	x29, sp
 b38:	bl	c30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x10>
 b3c:	ldp	x29, x30, [sp], #16
 b40:	ret

Disassembly of section .plt:

0000000000000b50 <PyList_Insert@plt-0x20>:
 b50:	stp	x16, x30, [sp, #-16]!
 b54:	adrp	x16, 11000 <PyInit__bisect@@Base+0xfc38>
 b58:	ldr	x17, [x16, #4088]
 b5c:	add	x16, x16, #0xff8
 b60:	br	x17
 b64:	nop
 b68:	nop
 b6c:	nop

0000000000000b70 <PyList_Insert@plt>:
 b70:	adrp	x16, 12000 <PyList_Insert>
 b74:	ldr	x17, [x16]
 b78:	add	x16, x16, #0x0
 b7c:	br	x17

0000000000000b80 <__cxa_finalize@plt>:
 b80:	adrp	x16, 12000 <PyList_Insert>
 b84:	ldr	x17, [x16, #8]
 b88:	add	x16, x16, #0x8
 b8c:	br	x17

0000000000000b90 <_Py_Dealloc@plt>:
 b90:	adrp	x16, 12000 <PyList_Insert>
 b94:	ldr	x17, [x16, #16]
 b98:	add	x16, x16, #0x10
 b9c:	br	x17

0000000000000ba0 <PyErr_SetString@plt>:
 ba0:	adrp	x16, 12000 <PyList_Insert>
 ba4:	ldr	x17, [x16, #24]
 ba8:	add	x16, x16, #0x18
 bac:	br	x17

0000000000000bb0 <PySequence_GetItem@plt>:
 bb0:	adrp	x16, 12000 <PyList_Insert>
 bb4:	ldr	x17, [x16, #32]
 bb8:	add	x16, x16, #0x20
 bbc:	br	x17

0000000000000bc0 <PyLong_FromSsize_t@plt>:
 bc0:	adrp	x16, 12000 <PyList_Insert>
 bc4:	ldr	x17, [x16, #40]
 bc8:	add	x16, x16, #0x28
 bcc:	br	x17

0000000000000bd0 <PyObject_RichCompareBool@plt>:
 bd0:	adrp	x16, 12000 <PyList_Insert>
 bd4:	ldr	x17, [x16, #48]
 bd8:	add	x16, x16, #0x30
 bdc:	br	x17

0000000000000be0 <PySequence_Size@plt>:
 be0:	adrp	x16, 12000 <PyList_Insert>
 be4:	ldr	x17, [x16, #56]
 be8:	add	x16, x16, #0x38
 bec:	br	x17

0000000000000bf0 <__gmon_start__@plt>:
 bf0:	adrp	x16, 12000 <PyList_Insert>
 bf4:	ldr	x17, [x16, #64]
 bf8:	add	x16, x16, #0x40
 bfc:	br	x17

0000000000000c00 <PyModule_Create2@plt>:
 c00:	adrp	x16, 12000 <PyList_Insert>
 c04:	ldr	x17, [x16, #72]
 c08:	add	x16, x16, #0x48
 c0c:	br	x17

0000000000000c10 <_PyObject_CallMethodId_SizeT@plt>:
 c10:	adrp	x16, 12000 <PyList_Insert>
 c14:	ldr	x17, [x16, #80]
 c18:	add	x16, x16, #0x50
 c1c:	br	x17

0000000000000c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
 c20:	adrp	x16, 12000 <PyList_Insert>
 c24:	ldr	x17, [x16, #88]
 c28:	add	x16, x16, #0x58
 c2c:	br	x17

Disassembly of section .text:

0000000000000c30 <PyInit__bisect@@Base-0x798>:
     c30:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
     c34:	ldr	x0, [x0, #4040]
     c38:	cbz	x0, c40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x20>
     c3c:	b	bf0 <__gmon_start__@plt>
     c40:	ret
     c44:	nop
     c48:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c38>
     c4c:	add	x0, x0, #0x240
     c50:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c38>
     c54:	add	x1, x1, #0x240
     c58:	cmp	x1, x0
     c5c:	b.eq	c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>  // b.none
     c60:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc38>
     c64:	ldr	x1, [x1, #4016]
     c68:	cbz	x1, c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>
     c6c:	mov	x16, x1
     c70:	br	x16
     c74:	ret
     c78:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c38>
     c7c:	add	x0, x0, #0x240
     c80:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c38>
     c84:	add	x1, x1, #0x240
     c88:	sub	x1, x1, x0
     c8c:	lsr	x2, x1, #63
     c90:	add	x1, x2, x1, asr #3
     c94:	cmp	xzr, x1, asr #1
     c98:	asr	x1, x1, #1
     c9c:	b.eq	cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>  // b.none
     ca0:	adrp	x2, 11000 <PyInit__bisect@@Base+0xfc38>
     ca4:	ldr	x2, [x2, #4056]
     ca8:	cbz	x2, cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>
     cac:	mov	x16, x2
     cb0:	br	x16
     cb4:	ret
     cb8:	stp	x29, x30, [sp, #-32]!
     cbc:	mov	x29, sp
     cc0:	str	x19, [sp, #16]
     cc4:	adrp	x19, 12000 <PyInit__bisect@@Base+0x10c38>
     cc8:	ldrb	w0, [x19, #576]
     ccc:	cbnz	w0, cf4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xd4>
     cd0:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
     cd4:	ldr	x0, [x0, #4024]
     cd8:	cbz	x0, ce8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xc8>
     cdc:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c38>
     ce0:	ldr	x0, [x0, #96]
     ce4:	bl	b80 <__cxa_finalize@plt>
     ce8:	bl	c48 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x28>
     cec:	mov	w0, #0x1                   	// #1
     cf0:	strb	w0, [x19, #576]
     cf4:	ldr	x19, [sp, #16]
     cf8:	ldp	x29, x30, [sp], #32
     cfc:	ret
     d00:	b	c78 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x58>
     d04:	nop
     d08:	stp	x29, x30, [sp, #-112]!
     d0c:	mov	x0, #0xffffffffffffffff    	// #-1
     d10:	mov	x29, sp
     d14:	stp	x21, x22, [sp, #32]
     d18:	stp	x23, x24, [sp, #48]
     d1c:	str	x25, [sp, #64]
     d20:	stp	xzr, x0, [sp, #96]
     d24:	mov	x0, x1
     d28:	mov	x1, x2
     d2c:	cbz	x2, ea8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x288>
     d30:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c38>
     d34:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     d38:	add	x3, x3, #0x70
     d3c:	add	x2, x2, #0x3f0
     d40:	add	x7, sp, #0x68
     d44:	add	x6, sp, #0x60
     d48:	add	x5, sp, #0x58
     d4c:	add	x4, sp, #0x50
     d50:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     d54:	cbz	w0, e64 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x244>
     d58:	ldp	x21, x22, [sp, #96]
     d5c:	ldp	x24, x25, [sp, #80]
     d60:	tbnz	x21, #63, e4c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x22c>
     d64:	cmn	x22, #0x1
     d68:	b.eq	ec0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2a0>  // b.none
     d6c:	cmp	x21, x22
     d70:	b.ge	dd8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1b8>  // b.tcont
     d74:	stp	x19, x20, [sp, #16]
     d78:	add	x19, x21, x22
     d7c:	mov	x0, x24
     d80:	lsr	x19, x19, #1
     d84:	mov	x1, x19
     d88:	bl	bb0 <PySequence_GetItem@plt>
     d8c:	mov	x20, x0
     d90:	mov	w2, #0x0                   	// #0
     d94:	mov	x0, x25
     d98:	mov	x1, x20
     d9c:	cbz	x20, ea0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x280>
     da0:	bl	bd0 <PyObject_RichCompareBool@plt>
     da4:	mov	w23, w0
     da8:	ldr	x1, [x20]
     dac:	sub	x1, x1, #0x1
     db0:	str	x1, [x20]
     db4:	cbz	x1, e8c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x26c>
     db8:	cmp	w23, #0x0
     dbc:	b.lt	ea0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x280>  // b.tstop
     dc0:	b.ne	e7c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x25c>  // b.any
     dc4:	add	x21, x19, #0x1
     dc8:	cmp	x21, x22
     dcc:	b.lt	d78 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x158>  // b.tstop
     dd0:	tbnz	x21, #63, ea0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x280>
     dd4:	ldp	x19, x20, [sp, #16]
     dd8:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc38>
     ddc:	ldp	x0, x4, [sp, #80]
     de0:	ldr	x1, [x1, #4064]
     de4:	ldr	x2, [x0, #8]
     de8:	cmp	x2, x1
     dec:	b.eq	ed4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2b4>  // b.none
     df0:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c38>
     df4:	add	x1, x1, #0x70
     df8:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     dfc:	mov	x3, x21
     e00:	add	x1, x1, #0x28
     e04:	add	x2, x2, #0x420
     e08:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
     e0c:	cbz	x0, e64 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x244>
     e10:	ldr	x2, [x0]
     e14:	sub	x2, x2, #0x1
     e18:	str	x2, [x0]
     e1c:	cbz	x2, ee8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2c8>
     e20:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc38>
     e24:	ldp	x21, x22, [sp, #32]
     e28:	ldr	x1, [x1, #4048]
     e2c:	ldp	x23, x24, [sp, #48]
     e30:	mov	x0, x1
     e34:	ldr	x2, [x1]
     e38:	ldr	x25, [sp, #64]
     e3c:	add	x2, x2, #0x1
     e40:	str	x2, [x1]
     e44:	ldp	x29, x30, [sp], #112
     e48:	ret
     e4c:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
     e50:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     e54:	add	x1, x1, #0x408
     e58:	ldr	x0, [x0, #4032]
     e5c:	ldr	x0, [x0]
     e60:	bl	ba0 <PyErr_SetString@plt>
     e64:	mov	x0, #0x0                   	// #0
     e68:	ldp	x21, x22, [sp, #32]
     e6c:	ldp	x23, x24, [sp, #48]
     e70:	ldr	x25, [sp, #64]
     e74:	ldp	x29, x30, [sp], #112
     e78:	ret
     e7c:	cmp	x19, x21
     e80:	b.le	dd4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1b4>
     e84:	mov	x22, x19
     e88:	b	d78 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x158>
     e8c:	mov	x0, x20
     e90:	bl	b90 <_Py_Dealloc@plt>
     e94:	cmp	w23, #0x0
     e98:	b.ge	dc0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1a0>  // b.tcont
     e9c:	nop
     ea0:	ldp	x19, x20, [sp, #16]
     ea4:	b	e64 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x244>
     ea8:	ldr	x2, [x0, #16]
     eac:	cmp	x2, #0x2
     eb0:	b.ne	d30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x110>  // b.any
     eb4:	ldp	x24, x25, [x0, #24]
     eb8:	mov	x21, #0x0                   	// #0
     ebc:	stp	x24, x25, [sp, #80]
     ec0:	mov	x0, x24
     ec4:	bl	be0 <PySequence_Size@plt>
     ec8:	mov	x22, x0
     ecc:	tbz	x0, #63, d6c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x14c>
     ed0:	b	e64 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x244>
     ed4:	mov	x2, x4
     ed8:	mov	x1, x21
     edc:	bl	b70 <PyList_Insert@plt>
     ee0:	tbz	w0, #31, e20 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x200>
     ee4:	b	e64 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x244>
     ee8:	bl	b90 <_Py_Dealloc@plt>
     eec:	b	e20 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x200>
     ef0:	stp	x29, x30, [sp, #-112]!
     ef4:	mov	x0, #0xffffffffffffffff    	// #-1
     ef8:	mov	x29, sp
     efc:	stp	x19, x20, [sp, #16]
     f00:	stp	x21, x22, [sp, #32]
     f04:	stp	x23, x24, [sp, #48]
     f08:	str	x25, [sp, #64]
     f0c:	stp	xzr, x0, [sp, #96]
     f10:	mov	x0, x1
     f14:	mov	x1, x2
     f18:	cbz	x2, 1088 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x468>
     f1c:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c38>
     f20:	add	x3, x3, #0x70
     f24:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     f28:	add	x3, x3, #0x40
     f2c:	add	x7, sp, #0x68
     f30:	add	x2, x2, #0x428
     f34:	add	x6, sp, #0x60
     f38:	add	x5, sp, #0x58
     f3c:	add	x4, sp, #0x50
     f40:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     f44:	cbz	w0, 1050 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x430>
     f48:	ldp	x20, x22, [sp, #96]
     f4c:	ldp	x24, x25, [sp, #80]
     f50:	tbnz	x20, #63, 1038 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x418>
     f54:	cmn	x22, #0x1
     f58:	b.eq	10a0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x480>  // b.none
     f5c:	cmp	x20, x22
     f60:	b.ge	fc0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3a0>  // b.tcont
     f64:	nop
     f68:	add	x19, x20, x22
     f6c:	mov	x0, x24
     f70:	lsr	x19, x19, #1
     f74:	mov	x1, x19
     f78:	bl	bb0 <PySequence_GetItem@plt>
     f7c:	mov	x1, x25
     f80:	mov	x21, x0
     f84:	mov	w2, #0x0                   	// #0
     f88:	cbz	x0, 1050 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x430>
     f8c:	bl	bd0 <PyObject_RichCompareBool@plt>
     f90:	mov	w23, w0
     f94:	ldr	x1, [x21]
     f98:	sub	x1, x1, #0x1
     f9c:	str	x1, [x21]
     fa0:	cbz	x1, 107c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x45c>
     fa4:	cmp	w23, #0x0
     fa8:	b.lt	1050 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x430>  // b.tstop
     fac:	b.eq	106c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x44c>  // b.none
     fb0:	add	x20, x19, #0x1
     fb4:	cmp	x20, x22
     fb8:	b.lt	f68 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x348>  // b.tstop
     fbc:	tbnz	x20, #63, 1050 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x430>
     fc0:	ldp	x0, x4, [sp, #80]
     fc4:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc38>
     fc8:	ldr	x1, [x1, #4064]
     fcc:	ldr	x2, [x0, #8]
     fd0:	cmp	x2, x1
     fd4:	b.eq	10b4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x494>  // b.none
     fd8:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c38>
     fdc:	add	x1, x1, #0x70
     fe0:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     fe4:	mov	x3, x20
     fe8:	add	x1, x1, #0x28
     fec:	add	x2, x2, #0x420
     ff0:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
     ff4:	cbz	x0, 1050 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x430>
     ff8:	ldr	x2, [x0]
     ffc:	sub	x2, x2, #0x1
    1000:	str	x2, [x0]
    1004:	cbz	x2, 10c8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4a8>
    1008:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc38>
    100c:	ldp	x19, x20, [sp, #16]
    1010:	ldr	x1, [x1, #4048]
    1014:	ldp	x21, x22, [sp, #32]
    1018:	mov	x0, x1
    101c:	ldr	x2, [x1]
    1020:	ldp	x23, x24, [sp, #48]
    1024:	add	x2, x2, #0x1
    1028:	str	x2, [x1]
    102c:	ldr	x25, [sp, #64]
    1030:	ldp	x29, x30, [sp], #112
    1034:	ret
    1038:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
    103c:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1040:	add	x1, x1, #0x408
    1044:	ldr	x0, [x0, #4032]
    1048:	ldr	x0, [x0]
    104c:	bl	ba0 <PyErr_SetString@plt>
    1050:	mov	x0, #0x0                   	// #0
    1054:	ldp	x19, x20, [sp, #16]
    1058:	ldp	x21, x22, [sp, #32]
    105c:	ldp	x23, x24, [sp, #48]
    1060:	ldr	x25, [sp, #64]
    1064:	ldp	x29, x30, [sp], #112
    1068:	ret
    106c:	cmp	x19, x20
    1070:	b.le	fc0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3a0>
    1074:	mov	x22, x19
    1078:	b	f68 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x348>
    107c:	mov	x0, x21
    1080:	bl	b90 <_Py_Dealloc@plt>
    1084:	b	fa4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x384>
    1088:	ldr	x2, [x0, #16]
    108c:	cmp	x2, #0x2
    1090:	b.ne	f1c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2fc>  // b.any
    1094:	ldp	x24, x25, [x0, #24]
    1098:	mov	x20, #0x0                   	// #0
    109c:	stp	x24, x25, [sp, #80]
    10a0:	mov	x0, x24
    10a4:	bl	be0 <PySequence_Size@plt>
    10a8:	mov	x22, x0
    10ac:	tbz	x0, #63, f5c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x33c>
    10b0:	b	1050 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x430>
    10b4:	mov	x2, x4
    10b8:	mov	x1, x20
    10bc:	bl	b70 <PyList_Insert@plt>
    10c0:	tbz	w0, #31, 1008 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e8>
    10c4:	b	1050 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x430>
    10c8:	bl	b90 <_Py_Dealloc@plt>
    10cc:	b	1008 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e8>
    10d0:	stp	x29, x30, [sp, #-112]!
    10d4:	mov	x0, #0xffffffffffffffff    	// #-1
    10d8:	mov	x29, sp
    10dc:	stp	x21, x22, [sp, #32]
    10e0:	stp	x23, x24, [sp, #48]
    10e4:	str	x25, [sp, #64]
    10e8:	stp	xzr, x0, [sp, #96]
    10ec:	mov	x0, x1
    10f0:	mov	x1, x2
    10f4:	cbz	x2, 1204 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5e4>
    10f8:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c38>
    10fc:	add	x3, x3, #0x70
    1100:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1104:	add	x3, x3, #0x70
    1108:	add	x7, sp, #0x68
    110c:	add	x2, x2, #0x440
    1110:	add	x6, sp, #0x60
    1114:	add	x5, sp, #0x58
    1118:	add	x4, sp, #0x50
    111c:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    1120:	cbz	w0, 11dc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5bc>
    1124:	ldp	x21, x22, [sp, #96]
    1128:	ldp	x24, x25, [sp, #80]
    112c:	tbnz	x21, #63, 1230 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x610>
    1130:	cmn	x22, #0x1
    1134:	b.eq	121c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5fc>  // b.none
    1138:	cmp	x21, x22
    113c:	b.ge	11a8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x588>  // b.tcont
    1140:	stp	x19, x20, [sp, #16]
    1144:	nop
    1148:	add	x19, x21, x22
    114c:	mov	x0, x24
    1150:	lsr	x19, x19, #1
    1154:	mov	x1, x19
    1158:	bl	bb0 <PySequence_GetItem@plt>
    115c:	mov	x20, x0
    1160:	mov	w2, #0x0                   	// #0
    1164:	mov	x0, x25
    1168:	mov	x1, x20
    116c:	cbz	x20, 11d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5b8>
    1170:	bl	bd0 <PyObject_RichCompareBool@plt>
    1174:	mov	w23, w0
    1178:	ldr	x1, [x20]
    117c:	sub	x1, x1, #0x1
    1180:	str	x1, [x20]
    1184:	cbz	x1, 11c4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5a4>
    1188:	cmp	w23, #0x0
    118c:	b.lt	11d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5b8>  // b.tstop
    1190:	b.ne	11f4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5d4>  // b.any
    1194:	add	x21, x19, #0x1
    1198:	cmp	x21, x22
    119c:	b.lt	1148 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x528>  // b.tstop
    11a0:	tbnz	x21, #63, 11d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5b8>
    11a4:	ldp	x19, x20, [sp, #16]
    11a8:	mov	x0, x21
    11ac:	bl	bc0 <PyLong_FromSsize_t@plt>
    11b0:	ldp	x21, x22, [sp, #32]
    11b4:	ldp	x23, x24, [sp, #48]
    11b8:	ldr	x25, [sp, #64]
    11bc:	ldp	x29, x30, [sp], #112
    11c0:	ret
    11c4:	mov	x0, x20
    11c8:	bl	b90 <_Py_Dealloc@plt>
    11cc:	cmp	w23, #0x0
    11d0:	b.ge	1190 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x570>  // b.tcont
    11d4:	nop
    11d8:	ldp	x19, x20, [sp, #16]
    11dc:	mov	x0, #0x0                   	// #0
    11e0:	ldp	x21, x22, [sp, #32]
    11e4:	ldp	x23, x24, [sp, #48]
    11e8:	ldr	x25, [sp, #64]
    11ec:	ldp	x29, x30, [sp], #112
    11f0:	ret
    11f4:	cmp	x19, x21
    11f8:	b.le	11a4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x584>
    11fc:	mov	x22, x19
    1200:	b	1148 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x528>
    1204:	ldr	x2, [x0, #16]
    1208:	cmp	x2, #0x2
    120c:	b.ne	10f8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4d8>  // b.any
    1210:	ldp	x24, x25, [x0, #24]
    1214:	mov	x21, #0x0                   	// #0
    1218:	stp	x24, x25, [sp, #80]
    121c:	mov	x0, x24
    1220:	bl	be0 <PySequence_Size@plt>
    1224:	mov	x22, x0
    1228:	tbz	x0, #63, 1138 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x518>
    122c:	b	11dc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5bc>
    1230:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
    1234:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1238:	add	x1, x1, #0x408
    123c:	ldr	x0, [x0, #4032]
    1240:	ldr	x0, [x0]
    1244:	bl	ba0 <PyErr_SetString@plt>
    1248:	b	11dc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5bc>
    124c:	nop
    1250:	stp	x29, x30, [sp, #-112]!
    1254:	mov	x0, #0xffffffffffffffff    	// #-1
    1258:	mov	x29, sp
    125c:	stp	x19, x20, [sp, #16]
    1260:	stp	x21, x22, [sp, #32]
    1264:	stp	x23, x24, [sp, #48]
    1268:	str	x25, [sp, #64]
    126c:	stp	xzr, x0, [sp, #96]
    1270:	mov	x0, x1
    1274:	mov	x1, x2
    1278:	cbz	x2, 137c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x75c>
    127c:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c38>
    1280:	add	x3, x3, #0x70
    1284:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1288:	add	x3, x3, #0xa0
    128c:	add	x7, sp, #0x68
    1290:	add	x2, x2, #0x458
    1294:	add	x6, sp, #0x60
    1298:	add	x5, sp, #0x58
    129c:	add	x4, sp, #0x50
    12a0:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    12a4:	cbz	w0, 1350 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x730>
    12a8:	ldp	x20, x22, [sp, #96]
    12ac:	ldp	x24, x25, [sp, #80]
    12b0:	tbnz	x20, #63, 13a8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x788>
    12b4:	cmn	x22, #0x1
    12b8:	b.eq	1394 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x774>  // b.none
    12bc:	cmp	x20, x22
    12c0:	b.ge	1320 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x700>  // b.tcont
    12c4:	nop
    12c8:	add	x19, x20, x22
    12cc:	mov	x0, x24
    12d0:	lsr	x19, x19, #1
    12d4:	mov	x1, x19
    12d8:	bl	bb0 <PySequence_GetItem@plt>
    12dc:	mov	x1, x25
    12e0:	mov	x21, x0
    12e4:	mov	w2, #0x0                   	// #0
    12e8:	cbz	x0, 1350 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x730>
    12ec:	bl	bd0 <PyObject_RichCompareBool@plt>
    12f0:	mov	w23, w0
    12f4:	ldr	x1, [x21]
    12f8:	sub	x1, x1, #0x1
    12fc:	str	x1, [x21]
    1300:	cbz	x1, 1340 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x720>
    1304:	cmp	w23, #0x0
    1308:	b.lt	1350 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x730>  // b.tstop
    130c:	b.eq	136c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x74c>  // b.none
    1310:	add	x20, x19, #0x1
    1314:	cmp	x20, x22
    1318:	b.lt	12c8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6a8>  // b.tstop
    131c:	tbnz	x20, #63, 1350 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x730>
    1320:	mov	x0, x20
    1324:	bl	bc0 <PyLong_FromSsize_t@plt>
    1328:	ldp	x19, x20, [sp, #16]
    132c:	ldp	x21, x22, [sp, #32]
    1330:	ldp	x23, x24, [sp, #48]
    1334:	ldr	x25, [sp, #64]
    1338:	ldp	x29, x30, [sp], #112
    133c:	ret
    1340:	mov	x0, x21
    1344:	bl	b90 <_Py_Dealloc@plt>
    1348:	cmp	w23, #0x0
    134c:	b.ge	130c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6ec>  // b.tcont
    1350:	mov	x0, #0x0                   	// #0
    1354:	ldp	x19, x20, [sp, #16]
    1358:	ldp	x21, x22, [sp, #32]
    135c:	ldp	x23, x24, [sp, #48]
    1360:	ldr	x25, [sp, #64]
    1364:	ldp	x29, x30, [sp], #112
    1368:	ret
    136c:	cmp	x19, x20
    1370:	b.le	1320 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x700>
    1374:	mov	x22, x19
    1378:	b	12c8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6a8>
    137c:	ldr	x2, [x0, #16]
    1380:	cmp	x2, #0x2
    1384:	b.ne	127c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x65c>  // b.any
    1388:	ldp	x24, x25, [x0, #24]
    138c:	mov	x20, #0x0                   	// #0
    1390:	stp	x24, x25, [sp, #80]
    1394:	mov	x0, x24
    1398:	bl	be0 <PySequence_Size@plt>
    139c:	mov	x22, x0
    13a0:	tbz	x0, #63, 12bc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x69c>
    13a4:	b	1350 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x730>
    13a8:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
    13ac:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    13b0:	add	x1, x1, #0x408
    13b4:	ldr	x0, [x0, #4032]
    13b8:	ldr	x0, [x0]
    13bc:	bl	ba0 <PyErr_SetString@plt>
    13c0:	b	1350 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x730>
    13c4:	nop

00000000000013c8 <PyInit__bisect@@Base>:
    13c8:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c38>
    13cc:	add	x0, x0, #0x70
    13d0:	add	x0, x0, #0xc8
    13d4:	mov	w1, #0x3f5                 	// #1013
    13d8:	b	c00 <PyModule_Create2@plt>

Disassembly of section .fini:

00000000000013dc <.fini>:
    13dc:	stp	x29, x30, [sp, #-16]!
    13e0:	mov	x29, sp
    13e4:	ldp	x29, x30, [sp], #16
    13e8:	ret
