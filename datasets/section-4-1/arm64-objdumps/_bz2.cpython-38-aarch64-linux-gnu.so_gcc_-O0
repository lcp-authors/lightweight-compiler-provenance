
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bz2.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001648 <.init>:
    1648:	stp	x29, x30, [sp, #-16]!
    164c:	mov	x29, sp
    1650:	bl	1940 <PyThread_free_lock@plt+0x10>
    1654:	ldp	x29, x30, [sp], #16
    1658:	ret

Disassembly of section .plt:

0000000000001660 <memcpy@plt-0x20>:
    1660:	stp	x16, x30, [sp, #-16]!
    1664:	adrp	x16, 14000 <PyInit__bz2@@Base+0x10e00>
    1668:	ldr	x17, [x16, #4088]
    166c:	add	x16, x16, #0xff8
    1670:	br	x17
    1674:	nop
    1678:	nop
    167c:	nop

0000000000001680 <memcpy@plt>:
    1680:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1684:	ldr	x17, [x16]
    1688:	add	x16, x16, #0x0
    168c:	br	x17

0000000000001690 <memmove@plt>:
    1690:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1694:	ldr	x17, [x16, #8]
    1698:	add	x16, x16, #0x8
    169c:	br	x17

00000000000016a0 <_PyBytes_Resize@plt>:
    16a0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    16a4:	ldr	x17, [x16, #16]
    16a8:	add	x16, x16, #0x10
    16ac:	br	x17

00000000000016b0 <PyEval_RestoreThread@plt>:
    16b0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    16b4:	ldr	x17, [x16, #24]
    16b8:	add	x16, x16, #0x18
    16bc:	br	x17

00000000000016c0 <PyMem_Free@plt>:
    16c0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    16c4:	ldr	x17, [x16, #32]
    16c8:	add	x16, x16, #0x20
    16cc:	br	x17

00000000000016d0 <PyBuffer_Release@plt>:
    16d0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    16d4:	ldr	x17, [x16, #40]
    16d8:	add	x16, x16, #0x28
    16dc:	br	x17

00000000000016e0 <__cxa_finalize@plt>:
    16e0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    16e4:	ldr	x17, [x16, #48]
    16e8:	add	x16, x16, #0x30
    16ec:	br	x17

00000000000016f0 <PyMem_RawMalloc@plt>:
    16f0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    16f4:	ldr	x17, [x16, #56]
    16f8:	add	x16, x16, #0x38
    16fc:	br	x17

0000000000001700 <PyBuffer_IsContiguous@plt>:
    1700:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1704:	ldr	x17, [x16, #64]
    1708:	add	x16, x16, #0x40
    170c:	br	x17

0000000000001710 <PyBytes_FromStringAndSize@plt>:
    1710:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1714:	ldr	x17, [x16, #72]
    1718:	add	x16, x16, #0x48
    171c:	br	x17

0000000000001720 <_Py_Dealloc@plt>:
    1720:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1724:	ldr	x17, [x16, #80]
    1728:	add	x16, x16, #0x50
    172c:	br	x17

0000000000001730 <PyErr_NoMemory@plt>:
    1730:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1734:	ldr	x17, [x16, #88]
    1738:	add	x16, x16, #0x58
    173c:	br	x17

0000000000001740 <PyThread_acquire_lock@plt>:
    1740:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1744:	ldr	x17, [x16, #96]
    1748:	add	x16, x16, #0x60
    174c:	br	x17

0000000000001750 <_PyArg_UnpackKeywords@plt>:
    1750:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1754:	ldr	x17, [x16, #104]
    1758:	add	x16, x16, #0x68
    175c:	br	x17

0000000000001760 <PyErr_SetString@plt>:
    1760:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1764:	ldr	x17, [x16, #112]
    1768:	add	x16, x16, #0x70
    176c:	br	x17

0000000000001770 <BZ2_bzDecompressInit@plt>:
    1770:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1774:	ldr	x17, [x16, #120]
    1778:	add	x16, x16, #0x78
    177c:	br	x17

0000000000001780 <BZ2_bzDecompressEnd@plt>:
    1780:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1784:	ldr	x17, [x16, #128]
    1788:	add	x16, x16, #0x80
    178c:	br	x17

0000000000001790 <PyMem_Realloc@plt>:
    1790:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1794:	ldr	x17, [x16, #136]
    1798:	add	x16, x16, #0x88
    179c:	br	x17

00000000000017a0 <PyErr_SetNone@plt>:
    17a0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    17a4:	ldr	x17, [x16, #144]
    17a8:	add	x16, x16, #0x90
    17ac:	br	x17

00000000000017b0 <BZ2_bzCompressInit@plt>:
    17b0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    17b4:	ldr	x17, [x16, #152]
    17b8:	add	x16, x16, #0x98
    17bc:	br	x17

00000000000017c0 <PyType_Ready@plt>:
    17c0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    17c4:	ldr	x17, [x16, #160]
    17c8:	add	x16, x16, #0xa0
    17cc:	br	x17

00000000000017d0 <PyLong_AsSsize_t@plt>:
    17d0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    17d4:	ldr	x17, [x16, #168]
    17d8:	add	x16, x16, #0xa8
    17dc:	br	x17

00000000000017e0 <_PyArg_BadArgument@plt>:
    17e0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    17e4:	ldr	x17, [x16, #176]
    17e8:	add	x16, x16, #0xb0
    17ec:	br	x17

00000000000017f0 <BZ2_bzCompressEnd@plt>:
    17f0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    17f4:	ldr	x17, [x16, #184]
    17f8:	add	x16, x16, #0xb8
    17fc:	br	x17

0000000000001800 <_PyArg_NoPositional@plt>:
    1800:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1804:	ldr	x17, [x16, #192]
    1808:	add	x16, x16, #0xc0
    180c:	br	x17

0000000000001810 <__gmon_start__@plt>:
    1810:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1814:	ldr	x17, [x16, #200]
    1818:	add	x16, x16, #0xc8
    181c:	br	x17

0000000000001820 <_PyArg_CheckPositional@plt>:
    1820:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1824:	ldr	x17, [x16, #208]
    1828:	add	x16, x16, #0xd0
    182c:	br	x17

0000000000001830 <PyErr_Occurred@plt>:
    1830:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1834:	ldr	x17, [x16, #216]
    1838:	add	x16, x16, #0xd8
    183c:	br	x17

0000000000001840 <PyModule_Create2@plt>:
    1840:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1844:	ldr	x17, [x16, #224]
    1848:	add	x16, x16, #0xe0
    184c:	br	x17

0000000000001850 <BZ2_bzCompress@plt>:
    1850:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1854:	ldr	x17, [x16, #232]
    1858:	add	x16, x16, #0xe8
    185c:	br	x17

0000000000001860 <PyMem_RawFree@plt>:
    1860:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1864:	ldr	x17, [x16, #240]
    1868:	add	x16, x16, #0xf0
    186c:	br	x17

0000000000001870 <PyThread_allocate_lock@plt>:
    1870:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1874:	ldr	x17, [x16, #248]
    1878:	add	x16, x16, #0xf8
    187c:	br	x17

0000000000001880 <BZ2_bzDecompress@plt>:
    1880:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1884:	ldr	x17, [x16, #256]
    1888:	add	x16, x16, #0x100
    188c:	br	x17

0000000000001890 <PyThread_release_lock@plt>:
    1890:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1894:	ldr	x17, [x16, #264]
    1898:	add	x16, x16, #0x108
    189c:	br	x17

00000000000018a0 <PyObject_GetBuffer@plt>:
    18a0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    18a4:	ldr	x17, [x16, #272]
    18a8:	add	x16, x16, #0x110
    18ac:	br	x17

00000000000018b0 <PyEval_SaveThread@plt>:
    18b0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    18b4:	ldr	x17, [x16, #280]
    18b8:	add	x16, x16, #0x118
    18bc:	br	x17

00000000000018c0 <PyModule_AddObject@plt>:
    18c0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    18c4:	ldr	x17, [x16, #288]
    18c8:	add	x16, x16, #0x120
    18cc:	br	x17

00000000000018d0 <PyType_IsSubtype@plt>:
    18d0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    18d4:	ldr	x17, [x16, #296]
    18d8:	add	x16, x16, #0x128
    18dc:	br	x17

00000000000018e0 <PyErr_Format@plt>:
    18e0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    18e4:	ldr	x17, [x16, #304]
    18e8:	add	x16, x16, #0x130
    18ec:	br	x17

00000000000018f0 <PyNumber_Index@plt>:
    18f0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    18f4:	ldr	x17, [x16, #312]
    18f8:	add	x16, x16, #0x138
    18fc:	br	x17

0000000000001900 <_PyArg_NoKeywords@plt>:
    1900:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1904:	ldr	x17, [x16, #320]
    1908:	add	x16, x16, #0x140
    190c:	br	x17

0000000000001910 <_PyLong_AsInt@plt>:
    1910:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1914:	ldr	x17, [x16, #328]
    1918:	add	x16, x16, #0x148
    191c:	br	x17

0000000000001920 <PyMem_Malloc@plt>:
    1920:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1924:	ldr	x17, [x16, #336]
    1928:	add	x16, x16, #0x150
    192c:	br	x17

0000000000001930 <PyThread_free_lock@plt>:
    1930:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1934:	ldr	x17, [x16, #344]
    1938:	add	x16, x16, #0x158
    193c:	br	x17

Disassembly of section .text:

0000000000001940 <PyInit__bz2@@Base-0x18c0>:
    1940:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1944:	ldr	x0, [x0, #4040]
    1948:	cbz	x0, 1950 <PyThread_free_lock@plt+0x20>
    194c:	b	1810 <__gmon_start__@plt>
    1950:	ret
    1954:	stp	x29, x30, [sp, #-32]!
    1958:	mov	x29, sp
    195c:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    1960:	add	x0, x0, #0x690
    1964:	str	x0, [sp, #24]
    1968:	ldr	x0, [sp, #24]
    196c:	str	x0, [sp, #24]
    1970:	ldr	x1, [sp, #24]
    1974:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    1978:	add	x0, x0, #0x690
    197c:	cmp	x1, x0
    1980:	b.eq	19b8 <PyThread_free_lock@plt+0x88>  // b.none
    1984:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1988:	ldr	x0, [x0, #3976]
    198c:	str	x0, [sp, #16]
    1990:	ldr	x0, [sp, #16]
    1994:	str	x0, [sp, #16]
    1998:	ldr	x0, [sp, #16]
    199c:	cmp	x0, #0x0
    19a0:	b.eq	19bc <PyThread_free_lock@plt+0x8c>  // b.none
    19a4:	ldr	x1, [sp, #16]
    19a8:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    19ac:	add	x0, x0, #0x690
    19b0:	blr	x1
    19b4:	b	19bc <PyThread_free_lock@plt+0x8c>
    19b8:	nop
    19bc:	ldp	x29, x30, [sp], #32
    19c0:	ret
    19c4:	stp	x29, x30, [sp, #-48]!
    19c8:	mov	x29, sp
    19cc:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    19d0:	add	x0, x0, #0x690
    19d4:	str	x0, [sp, #40]
    19d8:	ldr	x0, [sp, #40]
    19dc:	str	x0, [sp, #40]
    19e0:	ldr	x1, [sp, #40]
    19e4:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    19e8:	add	x0, x0, #0x690
    19ec:	sub	x0, x1, x0
    19f0:	asr	x0, x0, #3
    19f4:	lsr	x1, x0, #63
    19f8:	add	x0, x1, x0
    19fc:	asr	x0, x0, #1
    1a00:	str	x0, [sp, #32]
    1a04:	ldr	x0, [sp, #32]
    1a08:	cmp	x0, #0x0
    1a0c:	b.eq	1a48 <PyThread_free_lock@plt+0x118>  // b.none
    1a10:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1a14:	ldr	x0, [x0, #4064]
    1a18:	str	x0, [sp, #24]
    1a1c:	ldr	x0, [sp, #24]
    1a20:	str	x0, [sp, #24]
    1a24:	ldr	x0, [sp, #24]
    1a28:	cmp	x0, #0x0
    1a2c:	b.eq	1a4c <PyThread_free_lock@plt+0x11c>  // b.none
    1a30:	ldr	x2, [sp, #24]
    1a34:	ldr	x1, [sp, #32]
    1a38:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    1a3c:	add	x0, x0, #0x690
    1a40:	blr	x2
    1a44:	b	1a4c <PyThread_free_lock@plt+0x11c>
    1a48:	nop
    1a4c:	ldp	x29, x30, [sp], #48
    1a50:	ret
    1a54:	stp	x29, x30, [sp, #-16]!
    1a58:	mov	x29, sp
    1a5c:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    1a60:	add	x0, x0, #0x690
    1a64:	ldrb	w0, [x0]
    1a68:	and	x0, x0, #0xff
    1a6c:	cmp	x0, #0x0
    1a70:	b.ne	1aac <PyThread_free_lock@plt+0x17c>  // b.any
    1a74:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1a78:	ldr	x0, [x0, #3992]
    1a7c:	cmp	x0, #0x0
    1a80:	b.eq	1a94 <PyThread_free_lock@plt+0x164>  // b.none
    1a84:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    1a88:	add	x0, x0, #0x160
    1a8c:	ldr	x0, [x0]
    1a90:	bl	16e0 <__cxa_finalize@plt>
    1a94:	bl	1954 <PyThread_free_lock@plt+0x24>
    1a98:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    1a9c:	add	x0, x0, #0x690
    1aa0:	mov	w1, #0x1                   	// #1
    1aa4:	strb	w1, [x0]
    1aa8:	b	1ab0 <PyThread_free_lock@plt+0x180>
    1aac:	nop
    1ab0:	ldp	x29, x30, [sp], #16
    1ab4:	ret
    1ab8:	stp	x29, x30, [sp, #-16]!
    1abc:	mov	x29, sp
    1ac0:	bl	19c4 <PyThread_free_lock@plt+0x94>
    1ac4:	nop
    1ac8:	ldp	x29, x30, [sp], #16
    1acc:	ret
    1ad0:	sub	sp, sp, #0x10
    1ad4:	str	x0, [sp, #8]
    1ad8:	ldr	x0, [sp, #8]
    1adc:	ldr	x0, [x0]
    1ae0:	add	x1, x0, #0x1
    1ae4:	ldr	x0, [sp, #8]
    1ae8:	str	x1, [x0]
    1aec:	nop
    1af0:	add	sp, sp, #0x10
    1af4:	ret
    1af8:	stp	x29, x30, [sp, #-48]!
    1afc:	mov	x29, sp
    1b00:	str	x0, [sp, #40]
    1b04:	str	w1, [sp, #36]
    1b08:	str	x2, [sp, #24]
    1b0c:	ldr	x0, [sp, #24]
    1b10:	ldr	x0, [x0]
    1b14:	sub	x1, x0, #0x1
    1b18:	ldr	x0, [sp, #24]
    1b1c:	str	x1, [x0]
    1b20:	ldr	x0, [sp, #24]
    1b24:	ldr	x0, [x0]
    1b28:	cmp	x0, #0x0
    1b2c:	b.ne	1b38 <PyThread_free_lock@plt+0x208>  // b.any
    1b30:	ldr	x0, [sp, #24]
    1b34:	bl	1720 <_Py_Dealloc@plt>
    1b38:	nop
    1b3c:	ldp	x29, x30, [sp], #48
    1b40:	ret
    1b44:	stp	x29, x30, [sp, #-32]!
    1b48:	mov	x29, sp
    1b4c:	str	x0, [sp, #24]
    1b50:	ldr	x0, [sp, #24]
    1b54:	cmp	x0, #0x0
    1b58:	b.eq	1b70 <PyThread_free_lock@plt+0x240>  // b.none
    1b5c:	ldr	x2, [sp, #24]
    1b60:	mov	w1, #0x21d                 	// #541
    1b64:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    1b68:	add	x0, x0, #0x2d0
    1b6c:	bl	1af8 <PyThread_free_lock@plt+0x1c8>
    1b70:	nop
    1b74:	ldp	x29, x30, [sp], #32
    1b78:	ret
    1b7c:	stp	x29, x30, [sp, #-32]!
    1b80:	mov	x29, sp
    1b84:	str	w0, [sp, #28]
    1b88:	ldr	w0, [sp, #28]
    1b8c:	cmp	w0, #0x4
    1b90:	b.gt	1d20 <PyThread_free_lock@plt+0x3f0>
    1b94:	ldr	w0, [sp, #28]
    1b98:	cmp	w0, #0x0
    1b9c:	b.ge	1c34 <PyThread_free_lock@plt+0x304>  // b.tcont
    1ba0:	ldr	w0, [sp, #28]
    1ba4:	cmn	w0, #0x1
    1ba8:	b.eq	1cfc <PyThread_free_lock@plt+0x3cc>  // b.none
    1bac:	ldr	w0, [sp, #28]
    1bb0:	cmp	w0, #0x0
    1bb4:	b.ge	1d20 <PyThread_free_lock@plt+0x3f0>  // b.tcont
    1bb8:	ldr	w0, [sp, #28]
    1bbc:	cmn	w0, #0x2
    1bc0:	b.eq	1c60 <PyThread_free_lock@plt+0x330>  // b.none
    1bc4:	ldr	w0, [sp, #28]
    1bc8:	cmn	w0, #0x2
    1bcc:	b.gt	1d20 <PyThread_free_lock@plt+0x3f0>
    1bd0:	ldr	w0, [sp, #28]
    1bd4:	cmn	w0, #0x3
    1bd8:	b.eq	1c84 <PyThread_free_lock@plt+0x354>  // b.none
    1bdc:	ldr	w0, [sp, #28]
    1be0:	cmn	w0, #0x3
    1be4:	b.gt	1d20 <PyThread_free_lock@plt+0x3f0>
    1be8:	ldr	w0, [sp, #28]
    1bec:	cmn	w0, #0x4
    1bf0:	b.gt	1d20 <PyThread_free_lock@plt+0x3f0>
    1bf4:	ldr	w0, [sp, #28]
    1bf8:	cmn	w0, #0x5
    1bfc:	b.ge	1c90 <PyThread_free_lock@plt+0x360>  // b.tcont
    1c00:	ldr	w0, [sp, #28]
    1c04:	cmn	w0, #0x6
    1c08:	b.eq	1cb4 <PyThread_free_lock@plt+0x384>  // b.none
    1c0c:	ldr	w0, [sp, #28]
    1c10:	cmn	w0, #0x6
    1c14:	b.gt	1d20 <PyThread_free_lock@plt+0x3f0>
    1c18:	ldr	w0, [sp, #28]
    1c1c:	cmn	w0, #0x9
    1c20:	b.eq	1c3c <PyThread_free_lock@plt+0x30c>  // b.none
    1c24:	ldr	w0, [sp, #28]
    1c28:	cmn	w0, #0x7
    1c2c:	b.eq	1cd8 <PyThread_free_lock@plt+0x3a8>  // b.none
    1c30:	b	1d20 <PyThread_free_lock@plt+0x3f0>
    1c34:	mov	w0, #0x0                   	// #0
    1c38:	b	1d44 <PyThread_free_lock@plt+0x414>
    1c3c:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1c40:	ldr	x0, [x0, #3968]
    1c44:	ldr	x2, [x0]
    1c48:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    1c4c:	add	x1, x0, #0x318
    1c50:	mov	x0, x2
    1c54:	bl	1760 <PyErr_SetString@plt>
    1c58:	mov	w0, #0x1                   	// #1
    1c5c:	b	1d44 <PyThread_free_lock@plt+0x414>
    1c60:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1c64:	ldr	x0, [x0, #4016]
    1c68:	ldr	x2, [x0]
    1c6c:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    1c70:	add	x1, x0, #0x340
    1c74:	mov	x0, x2
    1c78:	bl	1760 <PyErr_SetString@plt>
    1c7c:	mov	w0, #0x1                   	// #1
    1c80:	b	1d44 <PyThread_free_lock@plt+0x414>
    1c84:	bl	1730 <PyErr_NoMemory@plt>
    1c88:	mov	w0, #0x1                   	// #1
    1c8c:	b	1d44 <PyThread_free_lock@plt+0x414>
    1c90:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1c94:	ldr	x0, [x0, #4032]
    1c98:	ldr	x2, [x0]
    1c9c:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    1ca0:	add	x1, x0, #0x378
    1ca4:	mov	x0, x2
    1ca8:	bl	1760 <PyErr_SetString@plt>
    1cac:	mov	w0, #0x1                   	// #1
    1cb0:	b	1d44 <PyThread_free_lock@plt+0x414>
    1cb4:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1cb8:	ldr	x0, [x0, #4032]
    1cbc:	ldr	x2, [x0]
    1cc0:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    1cc4:	add	x1, x0, #0x390
    1cc8:	mov	x0, x2
    1ccc:	bl	1760 <PyErr_SetString@plt>
    1cd0:	mov	w0, #0x1                   	// #1
    1cd4:	b	1d44 <PyThread_free_lock@plt+0x414>
    1cd8:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1cdc:	ldr	x0, [x0, #4056]
    1ce0:	ldr	x2, [x0]
    1ce4:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    1ce8:	add	x1, x0, #0x3a8
    1cec:	mov	x0, x2
    1cf0:	bl	1760 <PyErr_SetString@plt>
    1cf4:	mov	w0, #0x1                   	// #1
    1cf8:	b	1d44 <PyThread_free_lock@plt+0x414>
    1cfc:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1d00:	ldr	x0, [x0, #4000]
    1d04:	ldr	x2, [x0]
    1d08:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    1d0c:	add	x1, x0, #0x3f0
    1d10:	mov	x0, x2
    1d14:	bl	1760 <PyErr_SetString@plt>
    1d18:	mov	w0, #0x1                   	// #1
    1d1c:	b	1d44 <PyThread_free_lock@plt+0x414>
    1d20:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1d24:	ldr	x0, [x0, #4032]
    1d28:	ldr	x3, [x0]
    1d2c:	ldr	w2, [sp, #28]
    1d30:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    1d34:	add	x1, x0, #0x430
    1d38:	mov	x0, x3
    1d3c:	bl	18e0 <PyErr_Format@plt>
    1d40:	mov	w0, #0x1                   	// #1
    1d44:	ldp	x29, x30, [sp], #32
    1d48:	ret
    1d4c:	stp	x29, x30, [sp, #-48]!
    1d50:	mov	x29, sp
    1d54:	str	x0, [sp, #24]
    1d58:	str	x1, [sp, #16]
    1d5c:	ldr	x0, [sp, #24]
    1d60:	ldr	x0, [x0]
    1d64:	ldr	x0, [x0, #16]
    1d68:	str	x0, [sp, #32]
    1d6c:	ldr	x0, [sp, #32]
    1d70:	lsr	x1, x0, #3
    1d74:	ldr	x0, [sp, #32]
    1d78:	add	x0, x1, x0
    1d7c:	add	x0, x0, #0x6
    1d80:	str	x0, [sp, #40]
    1d84:	ldr	x0, [sp, #16]
    1d88:	cmp	x0, #0x0
    1d8c:	b.le	1da8 <PyThread_free_lock@plt+0x478>
    1d90:	ldr	x0, [sp, #16]
    1d94:	ldr	x1, [sp, #40]
    1d98:	cmp	x1, x0
    1d9c:	b.ls	1da8 <PyThread_free_lock@plt+0x478>  // b.plast
    1da0:	ldr	x0, [sp, #16]
    1da4:	str	x0, [sp, #40]
    1da8:	ldr	x1, [sp, #40]
    1dac:	ldr	x0, [sp, #32]
    1db0:	cmp	x1, x0
    1db4:	b.ls	1dcc <PyThread_free_lock@plt+0x49c>  // b.plast
    1db8:	ldr	x0, [sp, #40]
    1dbc:	mov	x1, x0
    1dc0:	ldr	x0, [sp, #24]
    1dc4:	bl	16a0 <_PyBytes_Resize@plt>
    1dc8:	b	1dec <PyThread_free_lock@plt+0x4bc>
    1dcc:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    1dd0:	ldr	x0, [x0, #4048]
    1dd4:	ldr	x2, [x0]
    1dd8:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    1ddc:	add	x1, x0, #0x458
    1de0:	mov	x0, x2
    1de4:	bl	1760 <PyErr_SetString@plt>
    1de8:	mov	w0, #0xffffffff            	// #-1
    1dec:	ldp	x29, x30, [sp], #48
    1df0:	ret
    1df4:	stp	x29, x30, [sp, #-96]!
    1df8:	mov	x29, sp
    1dfc:	str	x0, [sp, #40]
    1e00:	str	x1, [sp, #32]
    1e04:	str	x2, [sp, #24]
    1e08:	str	w3, [sp, #20]
    1e0c:	str	xzr, [sp, #88]
    1e10:	mov	x1, #0x2000                	// #8192
    1e14:	mov	x0, #0x0                   	// #0
    1e18:	bl	1710 <PyBytes_FromStringAndSize@plt>
    1e1c:	str	x0, [sp, #48]
    1e20:	ldr	x0, [sp, #48]
    1e24:	cmp	x0, #0x0
    1e28:	b.ne	1e34 <PyThread_free_lock@plt+0x504>  // b.any
    1e2c:	mov	x0, #0x0                   	// #0
    1e30:	b	204c <PyThread_free_lock@plt+0x71c>
    1e34:	ldr	x0, [sp, #40]
    1e38:	ldr	x1, [sp, #32]
    1e3c:	str	x1, [x0, #16]
    1e40:	ldr	x0, [sp, #40]
    1e44:	str	wzr, [x0, #24]
    1e48:	ldr	x0, [sp, #48]
    1e4c:	add	x1, x0, #0x20
    1e50:	ldr	x0, [sp, #40]
    1e54:	str	x1, [x0, #40]
    1e58:	ldr	x0, [sp, #40]
    1e5c:	mov	w1, #0x2000                	// #8192
    1e60:	str	w1, [x0, #48]
    1e64:	ldr	x0, [sp, #40]
    1e68:	ldr	w0, [x0, #24]
    1e6c:	cmp	w0, #0x0
    1e70:	b.ne	1ebc <PyThread_free_lock@plt+0x58c>  // b.any
    1e74:	ldr	x0, [sp, #24]
    1e78:	cmp	x0, #0x0
    1e7c:	b.eq	1ebc <PyThread_free_lock@plt+0x58c>  // b.none
    1e80:	ldr	x1, [sp, #24]
    1e84:	mov	x0, #0xffffffff            	// #4294967295
    1e88:	cmp	x1, x0
    1e8c:	b.hi	1e98 <PyThread_free_lock@plt+0x568>  // b.pmore
    1e90:	ldr	x0, [sp, #24]
    1e94:	b	1e9c <PyThread_free_lock@plt+0x56c>
    1e98:	mov	w0, #0xffffffff            	// #-1
    1e9c:	ldr	x1, [sp, #40]
    1ea0:	str	w0, [x1, #24]
    1ea4:	ldr	x0, [sp, #40]
    1ea8:	ldr	w0, [x0, #24]
    1eac:	mov	w0, w0
    1eb0:	ldr	x1, [sp, #24]
    1eb4:	sub	x0, x1, x0
    1eb8:	str	x0, [sp, #24]
    1ebc:	ldr	w0, [sp, #20]
    1ec0:	cmp	w0, #0x0
    1ec4:	b.ne	1ed8 <PyThread_free_lock@plt+0x5a8>  // b.any
    1ec8:	ldr	x0, [sp, #40]
    1ecc:	ldr	w0, [x0, #24]
    1ed0:	cmp	w0, #0x0
    1ed4:	b.eq	1ff0 <PyThread_free_lock@plt+0x6c0>  // b.none
    1ed8:	ldr	x0, [sp, #40]
    1edc:	ldr	w0, [x0, #48]
    1ee0:	cmp	w0, #0x0
    1ee4:	b.ne	1f74 <PyThread_free_lock@plt+0x644>  // b.any
    1ee8:	ldr	x0, [sp, #48]
    1eec:	ldr	x0, [x0, #16]
    1ef0:	mov	x1, x0
    1ef4:	ldr	x0, [sp, #88]
    1ef8:	sub	x0, x1, x0
    1efc:	str	x0, [sp, #80]
    1f00:	ldr	x0, [sp, #80]
    1f04:	cmp	x0, #0x0
    1f08:	b.ne	1f50 <PyThread_free_lock@plt+0x620>  // b.any
    1f0c:	add	x0, sp, #0x30
    1f10:	mov	x1, #0xffffffffffffffff    	// #-1
    1f14:	bl	1d4c <PyThread_free_lock@plt+0x41c>
    1f18:	cmp	w0, #0x0
    1f1c:	b.lt	202c <PyThread_free_lock@plt+0x6fc>  // b.tstop
    1f20:	ldr	x0, [sp, #48]
    1f24:	add	x1, x0, #0x20
    1f28:	ldr	x0, [sp, #88]
    1f2c:	add	x1, x1, x0
    1f30:	ldr	x0, [sp, #40]
    1f34:	str	x1, [x0, #40]
    1f38:	ldr	x0, [sp, #48]
    1f3c:	ldr	x0, [x0, #16]
    1f40:	mov	x1, x0
    1f44:	ldr	x0, [sp, #88]
    1f48:	sub	x0, x1, x0
    1f4c:	str	x0, [sp, #80]
    1f50:	ldr	x1, [sp, #80]
    1f54:	mov	x0, #0xffffffff            	// #4294967295
    1f58:	cmp	x1, x0
    1f5c:	b.hi	1f68 <PyThread_free_lock@plt+0x638>  // b.pmore
    1f60:	ldr	x0, [sp, #80]
    1f64:	b	1f6c <PyThread_free_lock@plt+0x63c>
    1f68:	mov	w0, #0xffffffff            	// #-1
    1f6c:	ldr	x1, [sp, #40]
    1f70:	str	w0, [x1, #48]
    1f74:	bl	18b0 <PyEval_SaveThread@plt>
    1f78:	str	x0, [sp, #72]
    1f7c:	ldr	x0, [sp, #40]
    1f80:	ldr	x0, [x0, #40]
    1f84:	str	x0, [sp, #64]
    1f88:	ldr	x0, [sp, #40]
    1f8c:	add	x0, x0, #0x10
    1f90:	ldr	w1, [sp, #20]
    1f94:	bl	1850 <BZ2_bzCompress@plt>
    1f98:	str	w0, [sp, #60]
    1f9c:	ldr	x0, [sp, #40]
    1fa0:	ldr	x1, [x0, #40]
    1fa4:	ldr	x0, [sp, #64]
    1fa8:	sub	x0, x1, x0
    1fac:	mov	x1, x0
    1fb0:	ldr	x0, [sp, #88]
    1fb4:	add	x0, x0, x1
    1fb8:	str	x0, [sp, #88]
    1fbc:	ldr	x0, [sp, #72]
    1fc0:	bl	16b0 <PyEval_RestoreThread@plt>
    1fc4:	ldr	w0, [sp, #60]
    1fc8:	bl	1b7c <PyThread_free_lock@plt+0x24c>
    1fcc:	cmp	w0, #0x0
    1fd0:	b.ne	2034 <PyThread_free_lock@plt+0x704>  // b.any
    1fd4:	ldr	w0, [sp, #20]
    1fd8:	cmp	w0, #0x2
    1fdc:	b.ne	1e64 <PyThread_free_lock@plt+0x534>  // b.any
    1fe0:	ldr	w0, [sp, #60]
    1fe4:	cmp	w0, #0x4
    1fe8:	b.eq	1ff8 <PyThread_free_lock@plt+0x6c8>  // b.none
    1fec:	b	1e64 <PyThread_free_lock@plt+0x534>
    1ff0:	nop
    1ff4:	b	1ffc <PyThread_free_lock@plt+0x6cc>
    1ff8:	nop
    1ffc:	ldr	x0, [sp, #48]
    2000:	ldr	x1, [x0, #16]
    2004:	ldr	x0, [sp, #88]
    2008:	cmp	x1, x0
    200c:	b.eq	2024 <PyThread_free_lock@plt+0x6f4>  // b.none
    2010:	ldr	x1, [sp, #88]
    2014:	add	x0, sp, #0x30
    2018:	bl	16a0 <_PyBytes_Resize@plt>
    201c:	cmp	w0, #0x0
    2020:	b.lt	203c <PyThread_free_lock@plt+0x70c>  // b.tstop
    2024:	ldr	x0, [sp, #48]
    2028:	b	204c <PyThread_free_lock@plt+0x71c>
    202c:	nop
    2030:	b	2040 <PyThread_free_lock@plt+0x710>
    2034:	nop
    2038:	b	2040 <PyThread_free_lock@plt+0x710>
    203c:	nop
    2040:	ldr	x0, [sp, #48]
    2044:	bl	1b44 <PyThread_free_lock@plt+0x214>
    2048:	mov	x0, #0x0                   	// #0
    204c:	ldp	x29, x30, [sp], #96
    2050:	ret
    2054:	stp	x29, x30, [sp, #-128]!
    2058:	mov	x29, sp
    205c:	str	x0, [sp, #24]
    2060:	str	x1, [sp, #16]
    2064:	str	xzr, [sp, #120]
    2068:	stp	xzr, xzr, [sp, #40]
    206c:	stp	xzr, xzr, [sp, #56]
    2070:	stp	xzr, xzr, [sp, #72]
    2074:	stp	xzr, xzr, [sp, #88]
    2078:	stp	xzr, xzr, [sp, #104]
    207c:	add	x0, sp, #0x28
    2080:	mov	w2, #0x0                   	// #0
    2084:	mov	x1, x0
    2088:	ldr	x0, [sp, #16]
    208c:	bl	18a0 <PyObject_GetBuffer@plt>
    2090:	cmp	w0, #0x0
    2094:	b.ne	20e8 <PyThread_free_lock@plt+0x7b8>  // b.any
    2098:	add	x0, sp, #0x28
    209c:	mov	w1, #0x43                  	// #67
    20a0:	bl	1700 <PyBuffer_IsContiguous@plt>
    20a4:	cmp	w0, #0x0
    20a8:	b.ne	20d0 <PyThread_free_lock@plt+0x7a0>  // b.any
    20ac:	ldr	x3, [sp, #16]
    20b0:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    20b4:	add	x2, x0, #0x588
    20b8:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    20bc:	add	x1, x0, #0x5a0
    20c0:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    20c4:	add	x0, x0, #0x5b0
    20c8:	bl	17e0 <_PyArg_BadArgument@plt>
    20cc:	b	20ec <PyThread_free_lock@plt+0x7bc>
    20d0:	add	x0, sp, #0x28
    20d4:	mov	x1, x0
    20d8:	ldr	x0, [sp, #24]
    20dc:	bl	25e0 <PyThread_free_lock@plt+0xcb0>
    20e0:	str	x0, [sp, #120]
    20e4:	b	20ec <PyThread_free_lock@plt+0x7bc>
    20e8:	nop
    20ec:	ldr	x0, [sp, #48]
    20f0:	cmp	x0, #0x0
    20f4:	b.eq	2100 <PyThread_free_lock@plt+0x7d0>  // b.none
    20f8:	add	x0, sp, #0x28
    20fc:	bl	16d0 <PyBuffer_Release@plt>
    2100:	ldr	x0, [sp, #120]
    2104:	ldp	x29, x30, [sp], #128
    2108:	ret
    210c:	stp	x29, x30, [sp, #-32]!
    2110:	mov	x29, sp
    2114:	str	x0, [sp, #24]
    2118:	str	x1, [sp, #16]
    211c:	ldr	x0, [sp, #24]
    2120:	bl	2698 <PyThread_free_lock@plt+0xd68>
    2124:	ldp	x29, x30, [sp], #32
    2128:	ret
    212c:	stp	x29, x30, [sp, #-64]!
    2130:	mov	x29, sp
    2134:	str	x0, [sp, #40]
    2138:	str	x1, [sp, #32]
    213c:	str	x2, [sp, #24]
    2140:	mov	w0, #0xffffffff            	// #-1
    2144:	str	w0, [sp, #60]
    2148:	mov	w0, #0x9                   	// #9
    214c:	str	w0, [sp, #56]
    2150:	ldr	x0, [sp, #40]
    2154:	ldr	x1, [x0, #8]
    2158:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    215c:	add	x0, x0, #0x168
    2160:	cmp	x1, x0
    2164:	b.ne	218c <PyThread_free_lock@plt+0x85c>  // b.any
    2168:	ldr	x0, [sp, #24]
    216c:	cmp	x0, #0x0
    2170:	b.eq	218c <PyThread_free_lock@plt+0x85c>  // b.none
    2174:	ldr	x1, [sp, #24]
    2178:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    217c:	add	x0, x0, #0x760
    2180:	bl	1900 <_PyArg_NoKeywords@plt>
    2184:	cmp	w0, #0x0
    2188:	b.eq	2290 <PyThread_free_lock@plt+0x960>  // b.none
    218c:	ldr	x0, [sp, #32]
    2190:	ldr	x0, [x0, #16]
    2194:	cmp	x0, #0x0
    2198:	b.lt	21ac <PyThread_free_lock@plt+0x87c>  // b.tstop
    219c:	ldr	x0, [sp, #32]
    21a0:	ldr	x0, [x0, #16]
    21a4:	cmp	x0, #0x1
    21a8:	b.le	21d4 <PyThread_free_lock@plt+0x8a4>
    21ac:	ldr	x0, [sp, #32]
    21b0:	ldr	x0, [x0, #16]
    21b4:	mov	x3, #0x1                   	// #1
    21b8:	mov	x2, #0x0                   	// #0
    21bc:	mov	x1, x0
    21c0:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    21c4:	add	x0, x0, #0x760
    21c8:	bl	1820 <_PyArg_CheckPositional@plt>
    21cc:	cmp	w0, #0x0
    21d0:	b.eq	2298 <PyThread_free_lock@plt+0x968>  // b.none
    21d4:	ldr	x0, [sp, #32]
    21d8:	ldr	x0, [x0, #16]
    21dc:	cmp	x0, #0x0
    21e0:	b.le	2270 <PyThread_free_lock@plt+0x940>
    21e4:	ldr	x0, [sp, #32]
    21e8:	ldr	x0, [x0, #24]
    21ec:	ldr	x1, [x0, #8]
    21f0:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    21f4:	ldr	x0, [x0, #3984]
    21f8:	cmp	x1, x0
    21fc:	b.eq	2224 <PyThread_free_lock@plt+0x8f4>  // b.none
    2200:	ldr	x0, [sp, #32]
    2204:	ldr	x0, [x0, #24]
    2208:	ldr	x2, [x0, #8]
    220c:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    2210:	ldr	x1, [x0, #3984]
    2214:	mov	x0, x2
    2218:	bl	18d0 <PyType_IsSubtype@plt>
    221c:	cmp	w0, #0x0
    2220:	b.eq	2244 <PyThread_free_lock@plt+0x914>  // b.none
    2224:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    2228:	ldr	x0, [x0, #4024]
    222c:	ldr	x2, [x0]
    2230:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    2234:	add	x1, x0, #0x770
    2238:	mov	x0, x2
    223c:	bl	1760 <PyErr_SetString@plt>
    2240:	b	22a4 <PyThread_free_lock@plt+0x974>
    2244:	ldr	x0, [sp, #32]
    2248:	ldr	x0, [x0, #24]
    224c:	bl	1910 <_PyLong_AsInt@plt>
    2250:	str	w0, [sp, #56]
    2254:	ldr	w0, [sp, #56]
    2258:	cmn	w0, #0x1
    225c:	b.ne	2278 <PyThread_free_lock@plt+0x948>  // b.any
    2260:	bl	1830 <PyErr_Occurred@plt>
    2264:	cmp	x0, #0x0
    2268:	b.ne	22a0 <PyThread_free_lock@plt+0x970>  // b.any
    226c:	b	2278 <PyThread_free_lock@plt+0x948>
    2270:	nop
    2274:	b	227c <PyThread_free_lock@plt+0x94c>
    2278:	nop
    227c:	ldr	w1, [sp, #56]
    2280:	ldr	x0, [sp, #40]
    2284:	bl	27e8 <PyThread_free_lock@plt+0xeb8>
    2288:	str	w0, [sp, #60]
    228c:	b	22a4 <PyThread_free_lock@plt+0x974>
    2290:	nop
    2294:	b	22a4 <PyThread_free_lock@plt+0x974>
    2298:	nop
    229c:	b	22a4 <PyThread_free_lock@plt+0x974>
    22a0:	nop
    22a4:	ldr	w0, [sp, #60]
    22a8:	ldp	x29, x30, [sp], #64
    22ac:	ret
    22b0:	sub	sp, sp, #0xd0
    22b4:	stp	x29, x30, [sp, #16]
    22b8:	add	x29, sp, #0x10
    22bc:	str	x0, [sp, #56]
    22c0:	str	x1, [sp, #48]
    22c4:	str	x2, [sp, #40]
    22c8:	str	x3, [sp, #32]
    22cc:	str	xzr, [sp, #200]
    22d0:	ldr	x0, [sp, #32]
    22d4:	cmp	x0, #0x0
    22d8:	b.eq	22e8 <PyThread_free_lock@plt+0x9b8>  // b.none
    22dc:	ldr	x0, [sp, #32]
    22e0:	ldr	x0, [x0, #16]
    22e4:	b	22ec <PyThread_free_lock@plt+0x9bc>
    22e8:	mov	x0, #0x0                   	// #0
    22ec:	ldr	x1, [sp, #40]
    22f0:	add	x0, x0, x1
    22f4:	sub	x0, x0, #0x1
    22f8:	str	x0, [sp, #176]
    22fc:	stp	xzr, xzr, [sp, #72]
    2300:	stp	xzr, xzr, [sp, #88]
    2304:	stp	xzr, xzr, [sp, #104]
    2308:	stp	xzr, xzr, [sp, #120]
    230c:	stp	xzr, xzr, [sp, #136]
    2310:	mov	x0, #0xffffffffffffffff    	// #-1
    2314:	str	x0, [sp, #192]
    2318:	ldr	x0, [sp, #32]
    231c:	cmp	x0, #0x0
    2320:	b.ne	2348 <PyThread_free_lock@plt+0xa18>  // b.any
    2324:	ldr	x0, [sp, #40]
    2328:	cmp	x0, #0x0
    232c:	b.le	2348 <PyThread_free_lock@plt+0xa18>
    2330:	ldr	x0, [sp, #40]
    2334:	cmp	x0, #0x2
    2338:	b.gt	2348 <PyThread_free_lock@plt+0xa18>
    233c:	ldr	x0, [sp, #48]
    2340:	cmp	x0, #0x0
    2344:	b.ne	237c <PyThread_free_lock@plt+0xa4c>  // b.any
    2348:	add	x0, sp, #0x98
    234c:	str	x0, [sp]
    2350:	mov	w7, #0x0                   	// #0
    2354:	mov	w6, #0x2                   	// #2
    2358:	mov	w5, #0x1                   	// #1
    235c:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    2360:	add	x4, x0, #0x650
    2364:	ldr	x3, [sp, #32]
    2368:	mov	x2, #0x0                   	// #0
    236c:	ldr	x1, [sp, #40]
    2370:	ldr	x0, [sp, #48]
    2374:	bl	1750 <_PyArg_UnpackKeywords@plt>
    2378:	b	2380 <PyThread_free_lock@plt+0xa50>
    237c:	ldr	x0, [sp, #48]
    2380:	str	x0, [sp, #48]
    2384:	ldr	x0, [sp, #48]
    2388:	cmp	x0, #0x0
    238c:	b.eq	24ec <PyThread_free_lock@plt+0xbbc>  // b.none
    2390:	ldr	x0, [sp, #48]
    2394:	ldr	x0, [x0]
    2398:	add	x1, sp, #0x48
    239c:	mov	w2, #0x0                   	// #0
    23a0:	bl	18a0 <PyObject_GetBuffer@plt>
    23a4:	cmp	w0, #0x0
    23a8:	b.ne	24f4 <PyThread_free_lock@plt+0xbc4>  // b.any
    23ac:	add	x0, sp, #0x48
    23b0:	mov	w1, #0x43                  	// #67
    23b4:	bl	1700 <PyBuffer_IsContiguous@plt>
    23b8:	cmp	w0, #0x0
    23bc:	b.ne	23ec <PyThread_free_lock@plt+0xabc>  // b.any
    23c0:	ldr	x0, [sp, #48]
    23c4:	ldr	x0, [x0]
    23c8:	mov	x3, x0
    23cc:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    23d0:	add	x2, x0, #0x588
    23d4:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    23d8:	add	x1, x0, #0xaa0
    23dc:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    23e0:	add	x0, x0, #0xab0
    23e4:	bl	17e0 <_PyArg_BadArgument@plt>
    23e8:	b	2500 <PyThread_free_lock@plt+0xbd0>
    23ec:	ldr	x0, [sp, #176]
    23f0:	cmp	x0, #0x0
    23f4:	b.eq	24cc <PyThread_free_lock@plt+0xb9c>  // b.none
    23f8:	ldr	x0, [sp, #48]
    23fc:	add	x0, x0, #0x8
    2400:	ldr	x0, [x0]
    2404:	ldr	x1, [x0, #8]
    2408:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    240c:	ldr	x0, [x0, #3984]
    2410:	cmp	x1, x0
    2414:	b.eq	2440 <PyThread_free_lock@plt+0xb10>  // b.none
    2418:	ldr	x0, [sp, #48]
    241c:	add	x0, x0, #0x8
    2420:	ldr	x0, [x0]
    2424:	ldr	x2, [x0, #8]
    2428:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    242c:	ldr	x1, [x0, #3984]
    2430:	mov	x0, x2
    2434:	bl	18d0 <PyType_IsSubtype@plt>
    2438:	cmp	w0, #0x0
    243c:	b.eq	2460 <PyThread_free_lock@plt+0xb30>  // b.none
    2440:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    2444:	ldr	x0, [x0, #4024]
    2448:	ldr	x2, [x0]
    244c:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    2450:	add	x1, x0, #0x770
    2454:	mov	x0, x2
    2458:	bl	1760 <PyErr_SetString@plt>
    245c:	b	2500 <PyThread_free_lock@plt+0xbd0>
    2460:	mov	x0, #0xffffffffffffffff    	// #-1
    2464:	str	x0, [sp, #184]
    2468:	ldr	x0, [sp, #48]
    246c:	add	x0, x0, #0x8
    2470:	ldr	x0, [x0]
    2474:	bl	18f0 <PyNumber_Index@plt>
    2478:	str	x0, [sp, #168]
    247c:	ldr	x0, [sp, #168]
    2480:	cmp	x0, #0x0
    2484:	b.eq	24a8 <PyThread_free_lock@plt+0xb78>  // b.none
    2488:	ldr	x0, [sp, #168]
    248c:	bl	17d0 <PyLong_AsSsize_t@plt>
    2490:	str	x0, [sp, #184]
    2494:	ldr	x2, [sp, #168]
    2498:	mov	w1, #0xaf                  	// #175
    249c:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    24a0:	add	x0, x0, #0xac0
    24a4:	bl	1af8 <PyThread_free_lock@plt+0x1c8>
    24a8:	ldr	x0, [sp, #184]
    24ac:	cmn	x0, #0x1
    24b0:	b.ne	24c0 <PyThread_free_lock@plt+0xb90>  // b.any
    24b4:	bl	1830 <PyErr_Occurred@plt>
    24b8:	cmp	x0, #0x0
    24bc:	b.ne	24fc <PyThread_free_lock@plt+0xbcc>  // b.any
    24c0:	ldr	x0, [sp, #184]
    24c4:	str	x0, [sp, #192]
    24c8:	b	24d0 <PyThread_free_lock@plt+0xba0>
    24cc:	nop
    24d0:	add	x0, sp, #0x48
    24d4:	ldr	x2, [sp, #192]
    24d8:	mov	x1, x0
    24dc:	ldr	x0, [sp, #56]
    24e0:	bl	2f44 <PyThread_free_lock@plt+0x1614>
    24e4:	str	x0, [sp, #200]
    24e8:	b	2500 <PyThread_free_lock@plt+0xbd0>
    24ec:	nop
    24f0:	b	2500 <PyThread_free_lock@plt+0xbd0>
    24f4:	nop
    24f8:	b	2500 <PyThread_free_lock@plt+0xbd0>
    24fc:	nop
    2500:	ldr	x0, [sp, #80]
    2504:	cmp	x0, #0x0
    2508:	b.eq	2514 <PyThread_free_lock@plt+0xbe4>  // b.none
    250c:	add	x0, sp, #0x48
    2510:	bl	16d0 <PyBuffer_Release@plt>
    2514:	ldr	x0, [sp, #200]
    2518:	ldp	x29, x30, [sp, #16]
    251c:	add	sp, sp, #0xd0
    2520:	ret
    2524:	stp	x29, x30, [sp, #-64]!
    2528:	mov	x29, sp
    252c:	str	x0, [sp, #40]
    2530:	str	x1, [sp, #32]
    2534:	str	x2, [sp, #24]
    2538:	mov	w0, #0xffffffff            	// #-1
    253c:	str	w0, [sp, #60]
    2540:	ldr	x0, [sp, #40]
    2544:	ldr	x1, [x0, #8]
    2548:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    254c:	add	x0, x0, #0x308
    2550:	cmp	x1, x0
    2554:	b.ne	257c <PyThread_free_lock@plt+0xc4c>  // b.any
    2558:	ldr	x0, [sp, #32]
    255c:	cmp	x0, #0x0
    2560:	b.eq	257c <PyThread_free_lock@plt+0xc4c>  // b.none
    2564:	ldr	x1, [sp, #32]
    2568:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    256c:	add	x0, x0, #0xb98
    2570:	bl	1800 <_PyArg_NoPositional@plt>
    2574:	cmp	w0, #0x0
    2578:	b.eq	25c8 <PyThread_free_lock@plt+0xc98>  // b.none
    257c:	ldr	x0, [sp, #40]
    2580:	ldr	x1, [x0, #8]
    2584:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    2588:	add	x0, x0, #0x308
    258c:	cmp	x1, x0
    2590:	b.ne	25b8 <PyThread_free_lock@plt+0xc88>  // b.any
    2594:	ldr	x0, [sp, #24]
    2598:	cmp	x0, #0x0
    259c:	b.eq	25b8 <PyThread_free_lock@plt+0xc88>  // b.none
    25a0:	ldr	x1, [sp, #24]
    25a4:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    25a8:	add	x0, x0, #0xb98
    25ac:	bl	1900 <_PyArg_NoKeywords@plt>
    25b0:	cmp	w0, #0x0
    25b4:	b.eq	25d0 <PyThread_free_lock@plt+0xca0>  // b.none
    25b8:	ldr	x0, [sp, #40]
    25bc:	bl	3000 <PyThread_free_lock@plt+0x16d0>
    25c0:	str	w0, [sp, #60]
    25c4:	b	25d4 <PyThread_free_lock@plt+0xca4>
    25c8:	nop
    25cc:	b	25d4 <PyThread_free_lock@plt+0xca4>
    25d0:	nop
    25d4:	ldr	w0, [sp, #60]
    25d8:	ldp	x29, x30, [sp], #64
    25dc:	ret
    25e0:	stp	x29, x30, [sp, #-48]!
    25e4:	mov	x29, sp
    25e8:	str	x0, [sp, #24]
    25ec:	str	x1, [sp, #16]
    25f0:	str	xzr, [sp, #40]
    25f4:	ldr	x0, [sp, #24]
    25f8:	ldr	x0, [x0, #104]
    25fc:	mov	w1, #0x0                   	// #0
    2600:	bl	1740 <PyThread_acquire_lock@plt>
    2604:	cmp	w0, #0x0
    2608:	b.ne	262c <PyThread_free_lock@plt+0xcfc>  // b.any
    260c:	bl	18b0 <PyEval_SaveThread@plt>
    2610:	str	x0, [sp, #32]
    2614:	ldr	x0, [sp, #24]
    2618:	ldr	x0, [x0, #104]
    261c:	mov	w1, #0x1                   	// #1
    2620:	bl	1740 <PyThread_acquire_lock@plt>
    2624:	ldr	x0, [sp, #32]
    2628:	bl	16b0 <PyEval_RestoreThread@plt>
    262c:	ldr	x0, [sp, #24]
    2630:	ldr	w0, [x0, #96]
    2634:	cmp	w0, #0x0
    2638:	b.eq	265c <PyThread_free_lock@plt+0xd2c>  // b.none
    263c:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    2640:	ldr	x0, [x0, #4016]
    2644:	ldr	x2, [x0]
    2648:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    264c:	add	x1, x0, #0xba8
    2650:	mov	x0, x2
    2654:	bl	1760 <PyErr_SetString@plt>
    2658:	b	2680 <PyThread_free_lock@plt+0xd50>
    265c:	ldr	x0, [sp, #16]
    2660:	ldr	x1, [x0]
    2664:	ldr	x0, [sp, #16]
    2668:	ldr	x0, [x0, #16]
    266c:	mov	w3, #0x0                   	// #0
    2670:	mov	x2, x0
    2674:	ldr	x0, [sp, #24]
    2678:	bl	1df4 <PyThread_free_lock@plt+0x4c4>
    267c:	str	x0, [sp, #40]
    2680:	ldr	x0, [sp, #24]
    2684:	ldr	x0, [x0, #104]
    2688:	bl	1890 <PyThread_release_lock@plt>
    268c:	ldr	x0, [sp, #40]
    2690:	ldp	x29, x30, [sp], #48
    2694:	ret
    2698:	stp	x29, x30, [sp, #-48]!
    269c:	mov	x29, sp
    26a0:	str	x0, [sp, #24]
    26a4:	str	xzr, [sp, #40]
    26a8:	ldr	x0, [sp, #24]
    26ac:	ldr	x0, [x0, #104]
    26b0:	mov	w1, #0x0                   	// #0
    26b4:	bl	1740 <PyThread_acquire_lock@plt>
    26b8:	cmp	w0, #0x0
    26bc:	b.ne	26e0 <PyThread_free_lock@plt+0xdb0>  // b.any
    26c0:	bl	18b0 <PyEval_SaveThread@plt>
    26c4:	str	x0, [sp, #32]
    26c8:	ldr	x0, [sp, #24]
    26cc:	ldr	x0, [x0, #104]
    26d0:	mov	w1, #0x1                   	// #1
    26d4:	bl	1740 <PyThread_acquire_lock@plt>
    26d8:	ldr	x0, [sp, #32]
    26dc:	bl	16b0 <PyEval_RestoreThread@plt>
    26e0:	ldr	x0, [sp, #24]
    26e4:	ldr	w0, [x0, #96]
    26e8:	cmp	w0, #0x0
    26ec:	b.eq	2710 <PyThread_free_lock@plt+0xde0>  // b.none
    26f0:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    26f4:	ldr	x0, [x0, #4016]
    26f8:	ldr	x2, [x0]
    26fc:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    2700:	add	x1, x0, #0xbc8
    2704:	mov	x0, x2
    2708:	bl	1760 <PyErr_SetString@plt>
    270c:	b	2734 <PyThread_free_lock@plt+0xe04>
    2710:	ldr	x0, [sp, #24]
    2714:	mov	w1, #0x1                   	// #1
    2718:	str	w1, [x0, #96]
    271c:	mov	w3, #0x2                   	// #2
    2720:	mov	x2, #0x0                   	// #0
    2724:	mov	x1, #0x0                   	// #0
    2728:	ldr	x0, [sp, #24]
    272c:	bl	1df4 <PyThread_free_lock@plt+0x4c4>
    2730:	str	x0, [sp, #40]
    2734:	ldr	x0, [sp, #24]
    2738:	ldr	x0, [x0, #104]
    273c:	bl	1890 <PyThread_release_lock@plt>
    2740:	ldr	x0, [sp, #40]
    2744:	ldp	x29, x30, [sp], #48
    2748:	ret
    274c:	stp	x29, x30, [sp, #-32]!
    2750:	mov	x29, sp
    2754:	str	x0, [sp, #24]
    2758:	str	w1, [sp, #20]
    275c:	str	w2, [sp, #16]
    2760:	ldr	w0, [sp, #20]
    2764:	cmp	w0, #0x0
    2768:	b.lt	2778 <PyThread_free_lock@plt+0xe48>  // b.tstop
    276c:	ldr	w0, [sp, #16]
    2770:	cmp	w0, #0x0
    2774:	b.ge	2780 <PyThread_free_lock@plt+0xe50>  // b.tcont
    2778:	mov	x0, #0x0                   	// #0
    277c:	b	27bc <PyThread_free_lock@plt+0xe8c>
    2780:	ldr	w0, [sp, #16]
    2784:	cmp	w0, #0x0
    2788:	b.eq	27ac <PyThread_free_lock@plt+0xe7c>  // b.none
    278c:	ldrsw	x1, [sp, #20]
    2790:	ldrsw	x0, [sp, #16]
    2794:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    2798:	udiv	x0, x2, x0
    279c:	cmp	x1, x0
    27a0:	b.ls	27ac <PyThread_free_lock@plt+0xe7c>  // b.plast
    27a4:	mov	x0, #0x0                   	// #0
    27a8:	b	27bc <PyThread_free_lock@plt+0xe8c>
    27ac:	ldrsw	x1, [sp, #20]
    27b0:	ldrsw	x0, [sp, #16]
    27b4:	mul	x0, x1, x0
    27b8:	bl	16f0 <PyMem_RawMalloc@plt>
    27bc:	ldp	x29, x30, [sp], #32
    27c0:	ret
    27c4:	stp	x29, x30, [sp, #-32]!
    27c8:	mov	x29, sp
    27cc:	str	x0, [sp, #24]
    27d0:	str	x1, [sp, #16]
    27d4:	ldr	x0, [sp, #16]
    27d8:	bl	1860 <PyMem_RawFree@plt>
    27dc:	nop
    27e0:	ldp	x29, x30, [sp], #32
    27e4:	ret
    27e8:	stp	x29, x30, [sp, #-48]!
    27ec:	mov	x29, sp
    27f0:	str	x0, [sp, #24]
    27f4:	str	w1, [sp, #20]
    27f8:	ldr	w0, [sp, #20]
    27fc:	cmp	w0, #0x0
    2800:	b.le	2810 <PyThread_free_lock@plt+0xee0>
    2804:	ldr	w0, [sp, #20]
    2808:	cmp	w0, #0x9
    280c:	b.le	2834 <PyThread_free_lock@plt+0xf04>
    2810:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    2814:	ldr	x0, [x0, #4016]
    2818:	ldr	x2, [x0]
    281c:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    2820:	add	x1, x0, #0xbe8
    2824:	mov	x0, x2
    2828:	bl	1760 <PyErr_SetString@plt>
    282c:	mov	w0, #0xffffffff            	// #-1
    2830:	b	28f0 <PyThread_free_lock@plt+0xfc0>
    2834:	bl	1870 <PyThread_allocate_lock@plt>
    2838:	mov	x1, x0
    283c:	ldr	x0, [sp, #24]
    2840:	str	x1, [x0, #104]
    2844:	ldr	x0, [sp, #24]
    2848:	ldr	x0, [x0, #104]
    284c:	cmp	x0, #0x0
    2850:	b.ne	2878 <PyThread_free_lock@plt+0xf48>  // b.any
    2854:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    2858:	ldr	x0, [x0, #4008]
    285c:	ldr	x2, [x0]
    2860:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    2864:	add	x1, x0, #0xc10
    2868:	mov	x0, x2
    286c:	bl	1760 <PyErr_SetString@plt>
    2870:	mov	w0, #0xffffffff            	// #-1
    2874:	b	28f0 <PyThread_free_lock@plt+0xfc0>
    2878:	ldr	x0, [sp, #24]
    287c:	str	xzr, [x0, #88]
    2880:	ldr	x0, [sp, #24]
    2884:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2888:	add	x1, x1, #0x74c
    288c:	str	x1, [x0, #72]
    2890:	ldr	x0, [sp, #24]
    2894:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2898:	add	x1, x1, #0x7c4
    289c:	str	x1, [x0, #80]
    28a0:	ldr	x0, [sp, #24]
    28a4:	add	x0, x0, #0x10
    28a8:	mov	w3, #0x0                   	// #0
    28ac:	mov	w2, #0x0                   	// #0
    28b0:	ldr	w1, [sp, #20]
    28b4:	bl	17b0 <BZ2_bzCompressInit@plt>
    28b8:	str	w0, [sp, #44]
    28bc:	ldr	w0, [sp, #44]
    28c0:	bl	1b7c <PyThread_free_lock@plt+0x24c>
    28c4:	cmp	w0, #0x0
    28c8:	b.ne	28d4 <PyThread_free_lock@plt+0xfa4>  // b.any
    28cc:	mov	w0, #0x0                   	// #0
    28d0:	b	28f0 <PyThread_free_lock@plt+0xfc0>
    28d4:	nop
    28d8:	ldr	x0, [sp, #24]
    28dc:	ldr	x0, [x0, #104]
    28e0:	bl	1930 <PyThread_free_lock@plt>
    28e4:	ldr	x0, [sp, #24]
    28e8:	str	xzr, [x0, #104]
    28ec:	mov	w0, #0xffffffff            	// #-1
    28f0:	ldp	x29, x30, [sp], #48
    28f4:	ret
    28f8:	stp	x29, x30, [sp, #-32]!
    28fc:	mov	x29, sp
    2900:	str	x0, [sp, #24]
    2904:	ldr	x0, [sp, #24]
    2908:	add	x0, x0, #0x10
    290c:	bl	17f0 <BZ2_bzCompressEnd@plt>
    2910:	ldr	x0, [sp, #24]
    2914:	ldr	x0, [x0, #104]
    2918:	cmp	x0, #0x0
    291c:	b.eq	292c <PyThread_free_lock@plt+0xffc>  // b.none
    2920:	ldr	x0, [sp, #24]
    2924:	ldr	x0, [x0, #104]
    2928:	bl	1930 <PyThread_free_lock@plt>
    292c:	ldr	x0, [sp, #24]
    2930:	ldr	x0, [x0, #8]
    2934:	ldr	x1, [x0, #320]
    2938:	ldr	x0, [sp, #24]
    293c:	blr	x1
    2940:	nop
    2944:	ldp	x29, x30, [sp], #32
    2948:	ret
    294c:	stp	x29, x30, [sp, #-80]!
    2950:	mov	x29, sp
    2954:	str	x0, [sp, #24]
    2958:	str	x1, [sp, #16]
    295c:	str	xzr, [sp, #72]
    2960:	ldr	x0, [sp, #24]
    2964:	add	x0, x0, #0x10
    2968:	str	x0, [sp, #64]
    296c:	ldr	x0, [sp, #16]
    2970:	cmp	x0, #0x0
    2974:	b.lt	2988 <PyThread_free_lock@plt+0x1058>  // b.tstop
    2978:	ldr	x1, [sp, #16]
    297c:	mov	x0, #0x1fff                	// #8191
    2980:	cmp	x1, x0
    2984:	b.le	299c <PyThread_free_lock@plt+0x106c>
    2988:	mov	x1, #0x2000                	// #8192
    298c:	mov	x0, #0x0                   	// #0
    2990:	bl	1710 <PyBytes_FromStringAndSize@plt>
    2994:	str	x0, [sp, #32]
    2998:	b	29ac <PyThread_free_lock@plt+0x107c>
    299c:	ldr	x1, [sp, #16]
    29a0:	mov	x0, #0x0                   	// #0
    29a4:	bl	1710 <PyBytes_FromStringAndSize@plt>
    29a8:	str	x0, [sp, #32]
    29ac:	ldr	x0, [sp, #32]
    29b0:	cmp	x0, #0x0
    29b4:	b.ne	29c0 <PyThread_free_lock@plt+0x1090>  // b.any
    29b8:	mov	x0, #0x0                   	// #0
    29bc:	b	2ba4 <PyThread_free_lock@plt+0x1274>
    29c0:	ldr	x0, [sp, #32]
    29c4:	add	x1, x0, #0x20
    29c8:	ldr	x0, [sp, #64]
    29cc:	str	x1, [x0, #24]
    29d0:	ldr	x0, [sp, #32]
    29d4:	ldr	x1, [x0, #16]
    29d8:	ldr	x0, [sp, #72]
    29dc:	sub	x0, x1, x0
    29e0:	str	x0, [sp, #56]
    29e4:	ldr	x1, [sp, #56]
    29e8:	mov	x0, #0xffffffff            	// #4294967295
    29ec:	cmp	x1, x0
    29f0:	b.hi	29fc <PyThread_free_lock@plt+0x10cc>  // b.pmore
    29f4:	ldr	x0, [sp, #56]
    29f8:	b	2a00 <PyThread_free_lock@plt+0x10d0>
    29fc:	mov	w0, #0xffffffff            	// #-1
    2a00:	ldr	x1, [sp, #64]
    2a04:	str	w0, [x1, #32]
    2a08:	ldr	x0, [sp, #24]
    2a0c:	ldr	x1, [x0, #136]
    2a10:	mov	x0, #0xffffffff            	// #4294967295
    2a14:	cmp	x1, x0
    2a18:	b.hi	2a28 <PyThread_free_lock@plt+0x10f8>  // b.pmore
    2a1c:	ldr	x0, [sp, #24]
    2a20:	ldr	x0, [x0, #136]
    2a24:	b	2a2c <PyThread_free_lock@plt+0x10fc>
    2a28:	mov	w0, #0xffffffff            	// #-1
    2a2c:	ldr	x1, [sp, #64]
    2a30:	str	w0, [x1, #8]
    2a34:	ldr	x0, [sp, #24]
    2a38:	ldr	x1, [x0, #136]
    2a3c:	ldr	x0, [sp, #64]
    2a40:	ldr	w0, [x0, #8]
    2a44:	mov	w0, w0
    2a48:	sub	x1, x1, x0
    2a4c:	ldr	x0, [sp, #24]
    2a50:	str	x1, [x0, #136]
    2a54:	bl	18b0 <PyEval_SaveThread@plt>
    2a58:	str	x0, [sp, #48]
    2a5c:	ldr	x0, [sp, #64]
    2a60:	bl	1880 <BZ2_bzDecompress@plt>
    2a64:	str	w0, [sp, #44]
    2a68:	ldr	x0, [sp, #64]
    2a6c:	ldr	x1, [x0, #24]
    2a70:	ldr	x0, [sp, #32]
    2a74:	add	x0, x0, #0x20
    2a78:	sub	x0, x1, x0
    2a7c:	str	x0, [sp, #72]
    2a80:	ldr	x0, [sp, #24]
    2a84:	ldr	x1, [x0, #136]
    2a88:	ldr	x0, [sp, #64]
    2a8c:	ldr	w0, [x0, #8]
    2a90:	mov	w0, w0
    2a94:	add	x1, x1, x0
    2a98:	ldr	x0, [sp, #24]
    2a9c:	str	x1, [x0, #136]
    2aa0:	ldr	x0, [sp, #48]
    2aa4:	bl	16b0 <PyEval_RestoreThread@plt>
    2aa8:	ldr	w0, [sp, #44]
    2aac:	bl	1b7c <PyThread_free_lock@plt+0x24c>
    2ab0:	cmp	w0, #0x0
    2ab4:	b.ne	2b84 <PyThread_free_lock@plt+0x1254>  // b.any
    2ab8:	ldr	w0, [sp, #44]
    2abc:	cmp	w0, #0x4
    2ac0:	b.ne	2ad4 <PyThread_free_lock@plt+0x11a4>  // b.any
    2ac4:	ldr	x0, [sp, #24]
    2ac8:	mov	w1, #0x1                   	// #1
    2acc:	strb	w1, [x0, #96]
    2ad0:	b	2b54 <PyThread_free_lock@plt+0x1224>
    2ad4:	ldr	x0, [sp, #24]
    2ad8:	ldr	x0, [x0, #136]
    2adc:	cmp	x0, #0x0
    2ae0:	b.eq	2b48 <PyThread_free_lock@plt+0x1218>  // b.none
    2ae4:	ldr	x0, [sp, #64]
    2ae8:	ldr	w0, [x0, #32]
    2aec:	cmp	w0, #0x0
    2af0:	b.ne	29d0 <PyThread_free_lock@plt+0x10a0>  // b.any
    2af4:	ldr	x1, [sp, #72]
    2af8:	ldr	x0, [sp, #16]
    2afc:	cmp	x1, x0
    2b00:	b.eq	2b50 <PyThread_free_lock@plt+0x1220>  // b.none
    2b04:	ldr	x0, [sp, #32]
    2b08:	ldr	x0, [x0, #16]
    2b0c:	ldr	x1, [sp, #72]
    2b10:	cmp	x1, x0
    2b14:	b.ne	2b2c <PyThread_free_lock@plt+0x11fc>  // b.any
    2b18:	add	x0, sp, #0x20
    2b1c:	ldr	x1, [sp, #16]
    2b20:	bl	1d4c <PyThread_free_lock@plt+0x41c>
    2b24:	cmn	w0, #0x1
    2b28:	b.eq	2b8c <PyThread_free_lock@plt+0x125c>  // b.none
    2b2c:	ldr	x0, [sp, #32]
    2b30:	add	x1, x0, #0x20
    2b34:	ldr	x0, [sp, #72]
    2b38:	add	x1, x1, x0
    2b3c:	ldr	x0, [sp, #64]
    2b40:	str	x1, [x0, #24]
    2b44:	b	29d0 <PyThread_free_lock@plt+0x10a0>
    2b48:	nop
    2b4c:	b	2b54 <PyThread_free_lock@plt+0x1224>
    2b50:	nop
    2b54:	ldr	x0, [sp, #32]
    2b58:	ldr	x0, [x0, #16]
    2b5c:	ldr	x1, [sp, #72]
    2b60:	cmp	x1, x0
    2b64:	b.eq	2b7c <PyThread_free_lock@plt+0x124c>  // b.none
    2b68:	add	x0, sp, #0x20
    2b6c:	ldr	x1, [sp, #72]
    2b70:	bl	16a0 <_PyBytes_Resize@plt>
    2b74:	cmn	w0, #0x1
    2b78:	b.eq	2b94 <PyThread_free_lock@plt+0x1264>  // b.none
    2b7c:	ldr	x0, [sp, #32]
    2b80:	b	2ba4 <PyThread_free_lock@plt+0x1274>
    2b84:	nop
    2b88:	b	2b98 <PyThread_free_lock@plt+0x1268>
    2b8c:	nop
    2b90:	b	2b98 <PyThread_free_lock@plt+0x1268>
    2b94:	nop
    2b98:	ldr	x0, [sp, #32]
    2b9c:	bl	1b44 <PyThread_free_lock@plt+0x214>
    2ba0:	mov	x0, #0x0                   	// #0
    2ba4:	ldp	x29, x30, [sp], #80
    2ba8:	ret
    2bac:	stp	x29, x30, [sp, #-128]!
    2bb0:	mov	x29, sp
    2bb4:	str	x0, [sp, #40]
    2bb8:	str	x1, [sp, #32]
    2bbc:	str	x2, [sp, #24]
    2bc0:	str	x3, [sp, #16]
    2bc4:	ldr	x0, [sp, #40]
    2bc8:	add	x0, x0, #0x10
    2bcc:	str	x0, [sp, #112]
    2bd0:	ldr	x0, [sp, #112]
    2bd4:	ldr	x0, [x0]
    2bd8:	cmp	x0, #0x0
    2bdc:	b.eq	2d60 <PyThread_free_lock@plt+0x1430>  // b.none
    2be0:	ldr	x0, [sp, #40]
    2be4:	ldr	x1, [x0, #120]
    2be8:	ldr	x0, [sp, #40]
    2bec:	ldr	x0, [x0, #128]
    2bf0:	add	x1, x1, x0
    2bf4:	ldr	x0, [sp, #112]
    2bf8:	ldr	x2, [x0]
    2bfc:	ldr	x0, [sp, #40]
    2c00:	ldr	x0, [x0, #136]
    2c04:	add	x0, x2, x0
    2c08:	sub	x0, x1, x0
    2c0c:	str	x0, [sp, #104]
    2c10:	ldr	x0, [sp, #40]
    2c14:	ldr	x1, [x0, #128]
    2c18:	ldr	x0, [sp, #40]
    2c1c:	ldr	x0, [x0, #136]
    2c20:	sub	x0, x1, x0
    2c24:	str	x0, [sp, #96]
    2c28:	ldr	x1, [sp, #96]
    2c2c:	ldr	x0, [sp, #24]
    2c30:	cmp	x1, x0
    2c34:	b.cs	2cd8 <PyThread_free_lock@plt+0x13a8>  // b.hs, b.nlast
    2c38:	ldr	x0, [sp, #112]
    2c3c:	ldr	x1, [x0]
    2c40:	ldr	x0, [sp, #40]
    2c44:	ldr	x0, [x0, #120]
    2c48:	sub	x0, x1, x0
    2c4c:	str	x0, [sp, #88]
    2c50:	ldr	x0, [sp, #40]
    2c54:	ldr	x1, [x0, #128]
    2c58:	ldr	x0, [sp, #24]
    2c5c:	add	x1, x1, x0
    2c60:	ldr	x0, [sp, #104]
    2c64:	sub	x0, x1, x0
    2c68:	str	x0, [sp, #80]
    2c6c:	ldr	x0, [sp, #40]
    2c70:	ldr	x0, [x0, #120]
    2c74:	ldr	x1, [sp, #80]
    2c78:	bl	1790 <PyMem_Realloc@plt>
    2c7c:	str	x0, [sp, #72]
    2c80:	ldr	x0, [sp, #72]
    2c84:	cmp	x0, #0x0
    2c88:	b.ne	2ca4 <PyThread_free_lock@plt+0x1374>  // b.any
    2c8c:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    2c90:	ldr	x0, [x0, #4008]
    2c94:	ldr	x0, [x0]
    2c98:	bl	17a0 <PyErr_SetNone@plt>
    2c9c:	mov	x0, #0x0                   	// #0
    2ca0:	b	2f3c <PyThread_free_lock@plt+0x160c>
    2ca4:	ldr	x0, [sp, #40]
    2ca8:	ldr	x1, [sp, #72]
    2cac:	str	x1, [x0, #120]
    2cb0:	ldr	x0, [sp, #40]
    2cb4:	ldr	x1, [sp, #80]
    2cb8:	str	x1, [x0, #128]
    2cbc:	ldr	x0, [sp, #40]
    2cc0:	ldr	x1, [x0, #120]
    2cc4:	ldr	x0, [sp, #88]
    2cc8:	add	x1, x1, x0
    2ccc:	ldr	x0, [sp, #112]
    2cd0:	str	x1, [x0]
    2cd4:	b	2d1c <PyThread_free_lock@plt+0x13ec>
    2cd8:	ldr	x1, [sp, #104]
    2cdc:	ldr	x0, [sp, #24]
    2ce0:	cmp	x1, x0
    2ce4:	b.cs	2d1c <PyThread_free_lock@plt+0x13ec>  // b.hs, b.nlast
    2ce8:	ldr	x0, [sp, #40]
    2cec:	ldr	x3, [x0, #120]
    2cf0:	ldr	x0, [sp, #112]
    2cf4:	ldr	x1, [x0]
    2cf8:	ldr	x0, [sp, #40]
    2cfc:	ldr	x0, [x0, #136]
    2d00:	mov	x2, x0
    2d04:	mov	x0, x3
    2d08:	bl	1690 <memmove@plt>
    2d0c:	ldr	x0, [sp, #40]
    2d10:	ldr	x1, [x0, #120]
    2d14:	ldr	x0, [sp, #112]
    2d18:	str	x1, [x0]
    2d1c:	ldr	x0, [sp, #112]
    2d20:	ldr	x1, [x0]
    2d24:	ldr	x0, [sp, #40]
    2d28:	ldr	x0, [x0, #136]
    2d2c:	add	x0, x1, x0
    2d30:	ldr	x2, [sp, #24]
    2d34:	ldr	x1, [sp, #32]
    2d38:	bl	1680 <memcpy@plt>
    2d3c:	ldr	x0, [sp, #40]
    2d40:	ldr	x1, [x0, #136]
    2d44:	ldr	x0, [sp, #24]
    2d48:	add	x1, x1, x0
    2d4c:	ldr	x0, [sp, #40]
    2d50:	str	x1, [x0, #136]
    2d54:	mov	w0, #0x1                   	// #1
    2d58:	strb	w0, [sp, #127]
    2d5c:	b	2d7c <PyThread_free_lock@plt+0x144c>
    2d60:	ldr	x0, [sp, #112]
    2d64:	ldr	x1, [sp, #32]
    2d68:	str	x1, [x0]
    2d6c:	ldr	x0, [sp, #40]
    2d70:	ldr	x1, [sp, #24]
    2d74:	str	x1, [x0, #136]
    2d78:	strb	wzr, [sp, #127]
    2d7c:	ldr	x1, [sp, #16]
    2d80:	ldr	x0, [sp, #40]
    2d84:	bl	294c <PyThread_free_lock@plt+0x101c>
    2d88:	str	x0, [sp, #64]
    2d8c:	ldr	x0, [sp, #64]
    2d90:	cmp	x0, #0x0
    2d94:	b.ne	2da8 <PyThread_free_lock@plt+0x1478>  // b.any
    2d98:	ldr	x0, [sp, #112]
    2d9c:	str	xzr, [x0]
    2da0:	mov	x0, #0x0                   	// #0
    2da4:	b	2f3c <PyThread_free_lock@plt+0x160c>
    2da8:	ldr	x0, [sp, #40]
    2dac:	ldrb	w0, [x0, #96]
    2db0:	cmp	w0, #0x0
    2db4:	b.eq	2e20 <PyThread_free_lock@plt+0x14f0>  // b.none
    2db8:	ldr	x0, [sp, #40]
    2dbc:	strb	wzr, [x0, #112]
    2dc0:	ldr	x0, [sp, #40]
    2dc4:	ldr	x0, [x0, #136]
    2dc8:	cmp	x0, #0x0
    2dcc:	b.eq	2f28 <PyThread_free_lock@plt+0x15f8>  // b.none
    2dd0:	ldr	x0, [sp, #40]
    2dd4:	ldr	x0, [x0, #104]
    2dd8:	str	x0, [sp, #56]
    2ddc:	ldr	x0, [sp, #112]
    2de0:	ldr	x2, [x0]
    2de4:	ldr	x0, [sp, #40]
    2de8:	ldr	x0, [x0, #136]
    2dec:	mov	x1, x0
    2df0:	mov	x0, x2
    2df4:	bl	1710 <PyBytes_FromStringAndSize@plt>
    2df8:	mov	x1, x0
    2dfc:	ldr	x0, [sp, #40]
    2e00:	str	x1, [x0, #104]
    2e04:	ldr	x0, [sp, #56]
    2e08:	bl	1b44 <PyThread_free_lock@plt+0x214>
    2e0c:	ldr	x0, [sp, #40]
    2e10:	ldr	x0, [x0, #104]
    2e14:	cmp	x0, #0x0
    2e18:	b.ne	2f28 <PyThread_free_lock@plt+0x15f8>  // b.any
    2e1c:	b	2f30 <PyThread_free_lock@plt+0x1600>
    2e20:	ldr	x0, [sp, #40]
    2e24:	ldr	x0, [x0, #136]
    2e28:	cmp	x0, #0x0
    2e2c:	b.ne	2e48 <PyThread_free_lock@plt+0x1518>  // b.any
    2e30:	ldr	x0, [sp, #112]
    2e34:	str	xzr, [x0]
    2e38:	ldr	x0, [sp, #40]
    2e3c:	mov	w1, #0x1                   	// #1
    2e40:	strb	w1, [x0, #112]
    2e44:	b	2f28 <PyThread_free_lock@plt+0x15f8>
    2e48:	ldr	x0, [sp, #40]
    2e4c:	strb	wzr, [x0, #112]
    2e50:	ldrb	w0, [sp, #127]
    2e54:	cmp	w0, #0x0
    2e58:	b.ne	2f28 <PyThread_free_lock@plt+0x15f8>  // b.any
    2e5c:	ldr	x0, [sp, #40]
    2e60:	ldr	x0, [x0, #120]
    2e64:	cmp	x0, #0x0
    2e68:	b.eq	2e98 <PyThread_free_lock@plt+0x1568>  // b.none
    2e6c:	ldr	x0, [sp, #40]
    2e70:	ldr	x1, [x0, #128]
    2e74:	ldr	x0, [sp, #40]
    2e78:	ldr	x0, [x0, #136]
    2e7c:	cmp	x1, x0
    2e80:	b.cs	2e98 <PyThread_free_lock@plt+0x1568>  // b.hs, b.nlast
    2e84:	ldr	x0, [sp, #40]
    2e88:	ldr	x0, [x0, #120]
    2e8c:	bl	16c0 <PyMem_Free@plt>
    2e90:	ldr	x0, [sp, #40]
    2e94:	str	xzr, [x0, #120]
    2e98:	ldr	x0, [sp, #40]
    2e9c:	ldr	x0, [x0, #120]
    2ea0:	cmp	x0, #0x0
    2ea4:	b.ne	2ef4 <PyThread_free_lock@plt+0x15c4>  // b.any
    2ea8:	ldr	x0, [sp, #40]
    2eac:	ldr	x0, [x0, #136]
    2eb0:	bl	1920 <PyMem_Malloc@plt>
    2eb4:	mov	x1, x0
    2eb8:	ldr	x0, [sp, #40]
    2ebc:	str	x1, [x0, #120]
    2ec0:	ldr	x0, [sp, #40]
    2ec4:	ldr	x0, [x0, #120]
    2ec8:	cmp	x0, #0x0
    2ecc:	b.ne	2ee4 <PyThread_free_lock@plt+0x15b4>  // b.any
    2ed0:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    2ed4:	ldr	x0, [x0, #4008]
    2ed8:	ldr	x0, [x0]
    2edc:	bl	17a0 <PyErr_SetNone@plt>
    2ee0:	b	2f30 <PyThread_free_lock@plt+0x1600>
    2ee4:	ldr	x0, [sp, #40]
    2ee8:	ldr	x1, [x0, #136]
    2eec:	ldr	x0, [sp, #40]
    2ef0:	str	x1, [x0, #128]
    2ef4:	ldr	x0, [sp, #40]
    2ef8:	ldr	x3, [x0, #120]
    2efc:	ldr	x0, [sp, #112]
    2f00:	ldr	x1, [x0]
    2f04:	ldr	x0, [sp, #40]
    2f08:	ldr	x0, [x0, #136]
    2f0c:	mov	x2, x0
    2f10:	mov	x0, x3
    2f14:	bl	1680 <memcpy@plt>
    2f18:	ldr	x0, [sp, #40]
    2f1c:	ldr	x1, [x0, #120]
    2f20:	ldr	x0, [sp, #112]
    2f24:	str	x1, [x0]
    2f28:	ldr	x0, [sp, #64]
    2f2c:	b	2f3c <PyThread_free_lock@plt+0x160c>
    2f30:	ldr	x0, [sp, #64]
    2f34:	bl	1b44 <PyThread_free_lock@plt+0x214>
    2f38:	mov	x0, #0x0                   	// #0
    2f3c:	ldp	x29, x30, [sp], #128
    2f40:	ret
    2f44:	stp	x29, x30, [sp, #-64]!
    2f48:	mov	x29, sp
    2f4c:	str	x0, [sp, #40]
    2f50:	str	x1, [sp, #32]
    2f54:	str	x2, [sp, #24]
    2f58:	str	xzr, [sp, #56]
    2f5c:	ldr	x0, [sp, #40]
    2f60:	ldr	x0, [x0, #144]
    2f64:	mov	w1, #0x0                   	// #0
    2f68:	bl	1740 <PyThread_acquire_lock@plt>
    2f6c:	cmp	w0, #0x0
    2f70:	b.ne	2f94 <PyThread_free_lock@plt+0x1664>  // b.any
    2f74:	bl	18b0 <PyEval_SaveThread@plt>
    2f78:	str	x0, [sp, #48]
    2f7c:	ldr	x0, [sp, #40]
    2f80:	ldr	x0, [x0, #144]
    2f84:	mov	w1, #0x1                   	// #1
    2f88:	bl	1740 <PyThread_acquire_lock@plt>
    2f8c:	ldr	x0, [sp, #48]
    2f90:	bl	16b0 <PyEval_RestoreThread@plt>
    2f94:	ldr	x0, [sp, #40]
    2f98:	ldrb	w0, [x0, #96]
    2f9c:	cmp	w0, #0x0
    2fa0:	b.eq	2fc4 <PyThread_free_lock@plt+0x1694>  // b.none
    2fa4:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    2fa8:	ldr	x0, [x0, #4056]
    2fac:	ldr	x2, [x0]
    2fb0:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    2fb4:	add	x1, x0, #0xc30
    2fb8:	mov	x0, x2
    2fbc:	bl	1760 <PyErr_SetString@plt>
    2fc0:	b	2fe8 <PyThread_free_lock@plt+0x16b8>
    2fc4:	ldr	x0, [sp, #32]
    2fc8:	ldr	x1, [x0]
    2fcc:	ldr	x0, [sp, #32]
    2fd0:	ldr	x0, [x0, #16]
    2fd4:	ldr	x3, [sp, #24]
    2fd8:	mov	x2, x0
    2fdc:	ldr	x0, [sp, #40]
    2fe0:	bl	2bac <PyThread_free_lock@plt+0x127c>
    2fe4:	str	x0, [sp, #56]
    2fe8:	ldr	x0, [sp, #40]
    2fec:	ldr	x0, [x0, #144]
    2ff0:	bl	1890 <PyThread_release_lock@plt>
    2ff4:	ldr	x0, [sp, #56]
    2ff8:	ldp	x29, x30, [sp], #64
    2ffc:	ret
    3000:	stp	x29, x30, [sp, #-64]!
    3004:	mov	x29, sp
    3008:	str	x0, [sp, #24]
    300c:	bl	1870 <PyThread_allocate_lock@plt>
    3010:	str	x0, [sp, #56]
    3014:	ldr	x0, [sp, #56]
    3018:	cmp	x0, #0x0
    301c:	b.ne	3044 <PyThread_free_lock@plt+0x1714>  // b.any
    3020:	adrp	x0, 14000 <PyInit__bz2@@Base+0x10e00>
    3024:	ldr	x0, [x0, #4008]
    3028:	ldr	x2, [x0]
    302c:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    3030:	add	x1, x0, #0xc10
    3034:	mov	x0, x2
    3038:	bl	1760 <PyErr_SetString@plt>
    303c:	mov	w0, #0xffffffff            	// #-1
    3040:	b	3154 <PyThread_free_lock@plt+0x1824>
    3044:	ldr	x0, [sp, #24]
    3048:	ldr	x0, [x0, #144]
    304c:	cmp	x0, #0x0
    3050:	b.eq	3060 <PyThread_free_lock@plt+0x1730>  // b.none
    3054:	ldr	x0, [sp, #24]
    3058:	ldr	x0, [x0, #144]
    305c:	bl	1930 <PyThread_free_lock@plt>
    3060:	ldr	x0, [sp, #24]
    3064:	ldr	x1, [sp, #56]
    3068:	str	x1, [x0, #144]
    306c:	ldr	x0, [sp, #24]
    3070:	mov	w1, #0x1                   	// #1
    3074:	strb	w1, [x0, #112]
    3078:	ldr	x0, [sp, #24]
    307c:	str	xzr, [x0, #136]
    3080:	ldr	x0, [sp, #24]
    3084:	str	xzr, [x0, #120]
    3088:	ldr	x0, [sp, #24]
    308c:	str	xzr, [x0, #128]
    3090:	ldr	x0, [sp, #24]
    3094:	ldr	x0, [x0, #104]
    3098:	str	x0, [sp, #48]
    309c:	mov	x1, #0x0                   	// #0
    30a0:	mov	x0, #0x0                   	// #0
    30a4:	bl	1710 <PyBytes_FromStringAndSize@plt>
    30a8:	mov	x1, x0
    30ac:	ldr	x0, [sp, #24]
    30b0:	str	x1, [x0, #104]
    30b4:	ldr	x0, [sp, #48]
    30b8:	bl	1b44 <PyThread_free_lock@plt+0x214>
    30bc:	ldr	x0, [sp, #24]
    30c0:	ldr	x0, [x0, #104]
    30c4:	cmp	x0, #0x0
    30c8:	b.eq	30fc <PyThread_free_lock@plt+0x17cc>  // b.none
    30cc:	ldr	x0, [sp, #24]
    30d0:	add	x0, x0, #0x10
    30d4:	mov	w2, #0x0                   	// #0
    30d8:	mov	w1, #0x0                   	// #0
    30dc:	bl	1770 <BZ2_bzDecompressInit@plt>
    30e0:	str	w0, [sp, #44]
    30e4:	ldr	w0, [sp, #44]
    30e8:	bl	1b7c <PyThread_free_lock@plt+0x24c>
    30ec:	cmp	w0, #0x0
    30f0:	b.ne	3104 <PyThread_free_lock@plt+0x17d4>  // b.any
    30f4:	mov	w0, #0x0                   	// #0
    30f8:	b	3154 <PyThread_free_lock@plt+0x1824>
    30fc:	nop
    3100:	b	3108 <PyThread_free_lock@plt+0x17d8>
    3104:	nop
    3108:	ldr	x0, [sp, #24]
    310c:	ldr	x0, [x0, #104]
    3110:	str	x0, [sp, #32]
    3114:	ldr	x0, [sp, #32]
    3118:	cmp	x0, #0x0
    311c:	b.eq	313c <PyThread_free_lock@plt+0x180c>  // b.none
    3120:	ldr	x0, [sp, #24]
    3124:	str	xzr, [x0, #104]
    3128:	ldr	x2, [sp, #32]
    312c:	mov	w1, #0x285                 	// #645
    3130:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    3134:	add	x0, x0, #0xc50
    3138:	bl	1af8 <PyThread_free_lock@plt+0x1c8>
    313c:	ldr	x0, [sp, #24]
    3140:	ldr	x0, [x0, #144]
    3144:	bl	1930 <PyThread_free_lock@plt>
    3148:	ldr	x0, [sp, #24]
    314c:	str	xzr, [x0, #144]
    3150:	mov	w0, #0xffffffff            	// #-1
    3154:	ldp	x29, x30, [sp], #64
    3158:	ret
    315c:	stp	x29, x30, [sp, #-48]!
    3160:	mov	x29, sp
    3164:	str	x0, [sp, #24]
    3168:	ldr	x0, [sp, #24]
    316c:	ldr	x0, [x0, #120]
    3170:	cmp	x0, #0x0
    3174:	b.eq	3184 <PyThread_free_lock@plt+0x1854>  // b.none
    3178:	ldr	x0, [sp, #24]
    317c:	ldr	x0, [x0, #120]
    3180:	bl	16c0 <PyMem_Free@plt>
    3184:	ldr	x0, [sp, #24]
    3188:	add	x0, x0, #0x10
    318c:	bl	1780 <BZ2_bzDecompressEnd@plt>
    3190:	ldr	x0, [sp, #24]
    3194:	ldr	x0, [x0, #104]
    3198:	str	x0, [sp, #40]
    319c:	ldr	x0, [sp, #40]
    31a0:	cmp	x0, #0x0
    31a4:	b.eq	31c4 <PyThread_free_lock@plt+0x1894>  // b.none
    31a8:	ldr	x0, [sp, #24]
    31ac:	str	xzr, [x0, #104]
    31b0:	ldr	x2, [sp, #40]
    31b4:	mov	w1, #0x291                 	// #657
    31b8:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    31bc:	add	x0, x0, #0xc50
    31c0:	bl	1af8 <PyThread_free_lock@plt+0x1c8>
    31c4:	ldr	x0, [sp, #24]
    31c8:	ldr	x0, [x0, #144]
    31cc:	cmp	x0, #0x0
    31d0:	b.eq	31e0 <PyThread_free_lock@plt+0x18b0>  // b.none
    31d4:	ldr	x0, [sp, #24]
    31d8:	ldr	x0, [x0, #144]
    31dc:	bl	1930 <PyThread_free_lock@plt>
    31e0:	ldr	x0, [sp, #24]
    31e4:	ldr	x0, [x0, #8]
    31e8:	ldr	x1, [x0, #320]
    31ec:	ldr	x0, [sp, #24]
    31f0:	blr	x1
    31f4:	nop
    31f8:	ldp	x29, x30, [sp], #48
    31fc:	ret

0000000000003200 <PyInit__bz2@@Base>:
    3200:	stp	x29, x30, [sp, #-32]!
    3204:	mov	x29, sp
    3208:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    320c:	add	x0, x0, #0x168
    3210:	bl	17c0 <PyType_Ready@plt>
    3214:	cmp	w0, #0x0
    3218:	b.ge	3224 <PyInit__bz2@@Base+0x24>  // b.tcont
    321c:	mov	x0, #0x0                   	// #0
    3220:	b	32b4 <PyInit__bz2@@Base+0xb4>
    3224:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    3228:	add	x0, x0, #0x308
    322c:	bl	17c0 <PyType_Ready@plt>
    3230:	cmp	w0, #0x0
    3234:	b.ge	3240 <PyInit__bz2@@Base+0x40>  // b.tcont
    3238:	mov	x0, #0x0                   	// #0
    323c:	b	32b4 <PyInit__bz2@@Base+0xb4>
    3240:	mov	w1, #0x3f5                 	// #1013
    3244:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    3248:	add	x0, x0, #0x5e8
    324c:	bl	1840 <PyModule_Create2@plt>
    3250:	str	x0, [sp, #24]
    3254:	ldr	x0, [sp, #24]
    3258:	cmp	x0, #0x0
    325c:	b.ne	3268 <PyInit__bz2@@Base+0x68>  // b.any
    3260:	mov	x0, #0x0                   	// #0
    3264:	b	32b4 <PyInit__bz2@@Base+0xb4>
    3268:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    326c:	add	x0, x0, #0x168
    3270:	bl	1ad0 <PyThread_free_lock@plt+0x1a0>
    3274:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    3278:	add	x2, x0, #0x168
    327c:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    3280:	add	x1, x0, #0x760
    3284:	ldr	x0, [sp, #24]
    3288:	bl	18c0 <PyModule_AddObject@plt>
    328c:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    3290:	add	x0, x0, #0x308
    3294:	bl	1ad0 <PyThread_free_lock@plt+0x1a0>
    3298:	adrp	x0, 15000 <PyInit__bz2@@Base+0x11e00>
    329c:	add	x2, x0, #0x308
    32a0:	adrp	x0, 3000 <PyThread_free_lock@plt+0x16d0>
    32a4:	add	x1, x0, #0xb98
    32a8:	ldr	x0, [sp, #24]
    32ac:	bl	18c0 <PyModule_AddObject@plt>
    32b0:	ldr	x0, [sp, #24]
    32b4:	ldp	x29, x30, [sp], #32
    32b8:	ret

Disassembly of section .fini:

00000000000032bc <.fini>:
    32bc:	stp	x29, x30, [sp, #-16]!
    32c0:	mov	x29, sp
    32c4:	ldp	x29, x30, [sp], #16
    32c8:	ret
