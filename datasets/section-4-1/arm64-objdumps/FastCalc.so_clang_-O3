
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//FastCalc.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c08 <.init>:
 c08:	stp	x29, x30, [sp, #-16]!
 c0c:	mov	x29, sp
 c10:	bl	e00 <Perl_av_extend@plt+0x10>
 c14:	ldp	x29, x30, [sp], #16
 c18:	ret

Disassembly of section .plt:

0000000000000c20 <Perl_sv_2iv_flags@plt-0x20>:
 c20:	stp	x16, x30, [sp, #-16]!
 c24:	adrp	x16, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
 c28:	ldr	x17, [x16, #4088]
 c2c:	add	x16, x16, #0xff8
 c30:	br	x17
 c34:	nop
 c38:	nop
 c3c:	nop

0000000000000c40 <Perl_sv_2iv_flags@plt>:
 c40:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c44:	ldr	x17, [x16]
 c48:	add	x16, x16, #0x0
 c4c:	br	x17

0000000000000c50 <Perl_sv_setnv@plt>:
 c50:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c54:	ldr	x17, [x16, #8]
 c58:	add	x16, x16, #0x8
 c5c:	br	x17

0000000000000c60 <Perl_newRV_noinc@plt>:
 c60:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c64:	ldr	x17, [x16, #16]
 c68:	add	x16, x16, #0x10
 c6c:	br	x17

0000000000000c70 <Perl_sv_2uv_flags@plt>:
 c70:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c74:	ldr	x17, [x16, #24]
 c78:	add	x16, x16, #0x18
 c7c:	br	x17

0000000000000c80 <__cxa_finalize@plt>:
 c80:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c84:	ldr	x17, [x16, #32]
 c88:	add	x16, x16, #0x20
 c8c:	br	x17

0000000000000c90 <Perl_av_len@plt>:
 c90:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c94:	ldr	x17, [x16, #40]
 c98:	add	x16, x16, #0x28
 c9c:	br	x17

0000000000000ca0 <Perl_av_store@plt>:
 ca0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 ca4:	ldr	x17, [x16, #48]
 ca8:	add	x16, x16, #0x30
 cac:	br	x17

0000000000000cb0 <Perl_newSVnv@plt>:
 cb0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cb4:	ldr	x17, [x16, #56]
 cb8:	add	x16, x16, #0x38
 cbc:	br	x17

0000000000000cc0 <Perl_sv_2pv_flags@plt>:
 cc0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cc4:	ldr	x17, [x16, #64]
 cc8:	add	x16, x16, #0x40
 ccc:	br	x17

0000000000000cd0 <Perl_xs_boot_epilog@plt>:
 cd0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cd4:	ldr	x17, [x16, #72]
 cd8:	add	x16, x16, #0x48
 cdc:	br	x17

0000000000000ce0 <__stack_chk_fail@plt>:
 ce0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 ce4:	ldr	x17, [x16, #80]
 ce8:	add	x16, x16, #0x50
 cec:	br	x17

0000000000000cf0 <__gmon_start__@plt>:
 cf0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cf4:	ldr	x17, [x16, #88]
 cf8:	add	x16, x16, #0x58
 cfc:	br	x17

0000000000000d00 <Perl_croak_xs_usage@plt>:
 d00:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d04:	ldr	x17, [x16, #96]
 d08:	add	x16, x16, #0x60
 d0c:	br	x17

0000000000000d10 <Perl_sv_2nv_flags@plt>:
 d10:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d14:	ldr	x17, [x16, #104]
 d18:	add	x16, x16, #0x68
 d1c:	br	x17

0000000000000d20 <Perl_av_push@plt>:
 d20:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d24:	ldr	x17, [x16, #112]
 d28:	add	x16, x16, #0x70
 d2c:	br	x17

0000000000000d30 <Perl_av_pop@plt>:
 d30:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d34:	ldr	x17, [x16, #120]
 d38:	add	x16, x16, #0x78
 d3c:	br	x17

0000000000000d40 <Perl_croak_nocontext@plt>:
 d40:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d44:	ldr	x17, [x16, #128]
 d48:	add	x16, x16, #0x80
 d4c:	br	x17

0000000000000d50 <Perl_newXS_deffile@plt>:
 d50:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d54:	ldr	x17, [x16, #136]
 d58:	add	x16, x16, #0x88
 d5c:	br	x17

0000000000000d60 <Perl_sv_2mortal@plt>:
 d60:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d64:	ldr	x17, [x16, #144]
 d68:	add	x16, x16, #0x90
 d6c:	br	x17

0000000000000d70 <Perl_newSVuv@plt>:
 d70:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d74:	ldr	x17, [x16, #152]
 d78:	add	x16, x16, #0x98
 d7c:	br	x17

0000000000000d80 <Perl_xs_handshake@plt>:
 d80:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d84:	ldr	x17, [x16, #160]
 d88:	add	x16, x16, #0xa0
 d8c:	br	x17

0000000000000d90 <Perl_av_fetch@plt>:
 d90:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d94:	ldr	x17, [x16, #168]
 d98:	add	x16, x16, #0xa8
 d9c:	br	x17

0000000000000da0 <Perl_newRV@plt>:
 da0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 da4:	ldr	x17, [x16, #176]
 da8:	add	x16, x16, #0xb0
 dac:	br	x17

0000000000000db0 <Perl_newSV_type@plt>:
 db0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 db4:	ldr	x17, [x16, #184]
 db8:	add	x16, x16, #0xb8
 dbc:	br	x17

0000000000000dc0 <Perl_newSViv@plt>:
 dc0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 dc4:	ldr	x17, [x16, #192]
 dc8:	add	x16, x16, #0xc0
 dcc:	br	x17

0000000000000dd0 <Perl_sv_setiv@plt>:
 dd0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 dd4:	ldr	x17, [x16, #200]
 dd8:	add	x16, x16, #0xc8
 ddc:	br	x17

0000000000000de0 <Perl_newSVpvn@plt>:
 de0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 de4:	ldr	x17, [x16, #208]
 de8:	add	x16, x16, #0xd0
 dec:	br	x17

0000000000000df0 <Perl_av_extend@plt>:
 df0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 df4:	ldr	x17, [x16, #216]
 df8:	add	x16, x16, #0xd8
 dfc:	br	x17

Disassembly of section .text:

0000000000000e00 <boot_Math__BigInt__FastCalc@@Base-0xd4>:
     e00:	adrp	x0, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
     e04:	ldr	x0, [x0, #4048]
     e08:	cbz	x0, e10 <Perl_av_extend@plt+0x20>
     e0c:	b	cf0 <__gmon_start__@plt>
     e10:	ret
     e14:	nop
     e18:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e1c:	add	x0, x0, #0xe8
     e20:	adrp	x1, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e24:	add	x1, x1, #0xe8
     e28:	cmp	x1, x0
     e2c:	b.eq	e44 <Perl_av_extend@plt+0x54>  // b.none
     e30:	adrp	x1, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
     e34:	ldr	x1, [x1, #4032]
     e38:	cbz	x1, e44 <Perl_av_extend@plt+0x54>
     e3c:	mov	x16, x1
     e40:	br	x16
     e44:	ret
     e48:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e4c:	add	x0, x0, #0xe8
     e50:	adrp	x1, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e54:	add	x1, x1, #0xe8
     e58:	sub	x1, x1, x0
     e5c:	lsr	x2, x1, #63
     e60:	add	x1, x2, x1, asr #3
     e64:	cmp	xzr, x1, asr #1
     e68:	asr	x1, x1, #1
     e6c:	b.eq	e84 <Perl_av_extend@plt+0x94>  // b.none
     e70:	adrp	x2, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
     e74:	ldr	x2, [x2, #4064]
     e78:	cbz	x2, e84 <Perl_av_extend@plt+0x94>
     e7c:	mov	x16, x2
     e80:	br	x16
     e84:	ret
     e88:	stp	x29, x30, [sp, #-32]!
     e8c:	mov	x29, sp
     e90:	str	x19, [sp, #16]
     e94:	adrp	x19, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e98:	ldrb	w0, [x19, #232]
     e9c:	cbnz	w0, ec4 <Perl_av_extend@plt+0xd4>
     ea0:	adrp	x0, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
     ea4:	ldr	x0, [x0, #4040]
     ea8:	cbz	x0, eb8 <Perl_av_extend@plt+0xc8>
     eac:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     eb0:	ldr	x0, [x0, #224]
     eb4:	bl	c80 <__cxa_finalize@plt>
     eb8:	bl	e18 <Perl_av_extend@plt+0x28>
     ebc:	mov	w0, #0x1                   	// #1
     ec0:	strb	w0, [x19, #232]
     ec4:	ldr	x19, [sp, #16]
     ec8:	ldp	x29, x30, [sp], #32
     ecc:	ret
     ed0:	b	e48 <Perl_av_extend@plt+0x58>

0000000000000ed4 <boot_Math__BigInt__FastCalc@@Base>:
     ed4:	stp	x29, x30, [sp, #-80]!
     ed8:	stp	x20, x19, [sp, #64]
     edc:	mov	x19, x0
     ee0:	adrp	x2, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     ee4:	adrp	x3, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     ee8:	adrp	x4, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     eec:	mov	w0, #0x6e7                 	// #1767
     ef0:	add	x2, x2, #0x178
     ef4:	add	x3, x3, #0x183
     ef8:	add	x4, x4, #0x18b
     efc:	movk	w0, #0xd30, lsl #16
     f00:	mov	x1, x19
     f04:	str	x25, [sp, #16]
     f08:	stp	x24, x23, [sp, #32]
     f0c:	stp	x22, x21, [sp, #48]
     f10:	mov	x29, sp
     f14:	bl	d80 <Perl_xs_handshake@plt>
     f18:	ldr	x8, [x19, #24]
     f1c:	ldr	x9, [x19]
     f20:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f24:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f28:	add	x8, x8, w0, sxtw #3
     f2c:	mov	w20, w0
     f30:	sub	x8, x9, x8
     f34:	add	x1, x1, #0x192
     f38:	add	x2, x2, #0x1d4
     f3c:	mov	x0, x19
     f40:	lsr	x22, x8, #3
     f44:	bl	d50 <Perl_newXS_deffile@plt>
     f48:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f4c:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f50:	add	x1, x1, #0x1af
     f54:	add	x2, x2, #0x3f8
     f58:	mov	x0, x19
     f5c:	bl	d50 <Perl_newXS_deffile@plt>
     f60:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f64:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f68:	add	x1, x1, #0x1cd
     f6c:	add	x2, x2, #0x578
     f70:	mov	x0, x19
     f74:	bl	d50 <Perl_newXS_deffile@plt>
     f78:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f7c:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f80:	add	x1, x1, #0x1f3
     f84:	add	x2, x2, #0x6d8
     f88:	mov	x0, x19
     f8c:	bl	d50 <Perl_newXS_deffile@plt>
     f90:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f94:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f98:	add	x1, x1, #0x210
     f9c:	add	x2, x2, #0x8b8
     fa0:	mov	x0, x19
     fa4:	bl	d50 <Perl_newXS_deffile@plt>
     fa8:	adrp	x21, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     fac:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     fb0:	add	x21, x21, #0xa9c
     fb4:	add	x1, x1, #0x22d
     fb8:	mov	x0, x19
     fbc:	mov	x2, x21
     fc0:	bl	d50 <Perl_newXS_deffile@plt>
     fc4:	ldr	x8, [x0]
     fc8:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     fcc:	mov	w23, #0x1                   	// #1
     fd0:	add	x1, x1, #0x24a
     fd4:	mov	x0, x19
     fd8:	mov	x2, x21
     fdc:	str	w23, [x8, #40]
     fe0:	bl	d50 <Perl_newXS_deffile@plt>
     fe4:	ldr	x8, [x0]
     fe8:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     fec:	mov	w24, #0xa                   	// #10
     ff0:	add	x1, x1, #0x267
     ff4:	mov	x0, x19
     ff8:	mov	x2, x21
     ffc:	str	w24, [x8, #40]
    1000:	bl	d50 <Perl_newXS_deffile@plt>
    1004:	ldr	x8, [x0]
    1008:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    100c:	mov	w25, #0x2                   	// #2
    1010:	add	x1, x1, #0x284
    1014:	mov	x0, x19
    1018:	mov	x2, x21
    101c:	str	w25, [x8, #40]
    1020:	bl	d50 <Perl_newXS_deffile@plt>
    1024:	ldr	x8, [x0]
    1028:	adrp	x21, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
    102c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1030:	add	x21, x21, #0xb64
    1034:	add	x1, x1, #0x2a2
    1038:	mov	x0, x19
    103c:	mov	x2, x21
    1040:	str	wzr, [x8, #40]
    1044:	bl	d50 <Perl_newXS_deffile@plt>
    1048:	ldr	x8, [x0]
    104c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1050:	add	x1, x1, #0x2c3
    1054:	mov	x0, x19
    1058:	mov	x2, x21
    105c:	str	wzr, [x8, #40]
    1060:	bl	d50 <Perl_newXS_deffile@plt>
    1064:	ldr	x8, [x0]
    1068:	adrp	x21, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
    106c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1070:	add	x21, x21, #0xc54
    1074:	add	x1, x1, #0x2e3
    1078:	mov	x0, x19
    107c:	mov	x2, x21
    1080:	str	w23, [x8, #40]
    1084:	bl	d50 <Perl_newXS_deffile@plt>
    1088:	ldr	x8, [x0]
    108c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1090:	add	x1, x1, #0x303
    1094:	mov	x0, x19
    1098:	mov	x2, x21
    109c:	str	w23, [x8, #40]
    10a0:	bl	d50 <Perl_newXS_deffile@plt>
    10a4:	ldr	x8, [x0]
    10a8:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    10ac:	add	x1, x1, #0x323
    10b0:	mov	x0, x19
    10b4:	mov	x2, x21
    10b8:	str	w24, [x8, #40]
    10bc:	bl	d50 <Perl_newXS_deffile@plt>
    10c0:	ldr	x8, [x0]
    10c4:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    10c8:	add	x1, x1, #0x343
    10cc:	mov	x0, x19
    10d0:	mov	x2, x21
    10d4:	str	w25, [x8, #40]
    10d8:	bl	d50 <Perl_newXS_deffile@plt>
    10dc:	ldr	x8, [x0]
    10e0:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    10e4:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
    10e8:	add	x1, x1, #0x364
    10ec:	add	x2, x2, #0xd60
    10f0:	mov	x0, x19
    10f4:	str	wzr, [x8, #40]
    10f8:	bl	d50 <Perl_newXS_deffile@plt>
    10fc:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1100:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
    1104:	add	x1, x1, #0x381
    1108:	add	x2, x2, #0xea8
    110c:	mov	x0, x19
    1110:	bl	d50 <Perl_newXS_deffile@plt>
    1114:	cmp	w22, #0x3
    1118:	b.le	11c8 <boot_Math__BigInt__FastCalc@@Base+0x2f4>
    111c:	ldr	x8, [x19, #24]
    1120:	sxtw	x20, w20
    1124:	mov	w21, #0x100                 	// #256
    1128:	movk	w21, #0x20, lsl #16
    112c:	add	x9, x8, x20, lsl #3
    1130:	ldr	x1, [x9, #16]
    1134:	ldr	w9, [x1, #12]
    1138:	and	w9, w9, w21
    113c:	cmp	w9, #0x100
    1140:	b.ne	1150 <boot_Math__BigInt__FastCalc@@Base+0x27c>  // b.any
    1144:	ldr	x9, [x1]
    1148:	ldr	x0, [x9, #32]
    114c:	b	1160 <boot_Math__BigInt__FastCalc@@Base+0x28c>
    1150:	mov	w2, #0x2                   	// #2
    1154:	mov	x0, x19
    1158:	bl	c40 <Perl_sv_2iv_flags@plt>
    115c:	ldr	x8, [x19, #24]
    1160:	scvtf	d0, x0
    1164:	adrp	x9, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1168:	str	d0, [x9, #240]
    116c:	add	x8, x8, x20, lsl #3
    1170:	ldr	x1, [x8, #24]
    1174:	add	w9, w21, #0x100
    1178:	ldr	w8, [x1, #12]
    117c:	and	w8, w8, w9
    1180:	cmp	w8, #0x200
    1184:	b.ne	1194 <boot_Math__BigInt__FastCalc@@Base+0x2c0>  // b.any
    1188:	ldr	x8, [x1]
    118c:	ldr	d0, [x8, #40]
    1190:	b	11a0 <boot_Math__BigInt__FastCalc@@Base+0x2cc>
    1194:	mov	w2, #0x2                   	// #2
    1198:	mov	x0, x19
    119c:	bl	d10 <Perl_sv_2nv_flags@plt>
    11a0:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    11a4:	str	d0, [x8, #248]
    11a8:	mov	x0, x19
    11ac:	mov	w1, w20
    11b0:	ldp	x20, x19, [sp, #64]
    11b4:	ldp	x22, x21, [sp, #48]
    11b8:	ldp	x24, x23, [sp, #32]
    11bc:	ldr	x25, [sp, #16]
    11c0:	ldp	x29, x30, [sp], #80
    11c4:	b	cd0 <Perl_xs_boot_epilog@plt>
    11c8:	adrp	x0, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    11cc:	add	x0, x0, #0x39f
    11d0:	bl	d40 <Perl_croak_nocontext@plt>
    11d4:	sub	sp, sp, #0x50
    11d8:	stp	x29, x30, [sp, #16]
    11dc:	str	x23, [sp, #32]
    11e0:	stp	x22, x21, [sp, #48]
    11e4:	stp	x20, x19, [sp, #64]
    11e8:	adrp	x8, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    11ec:	ldr	x8, [x8, #4056]
    11f0:	add	x29, sp, #0x10
    11f4:	ldr	x8, [x8]
    11f8:	str	x8, [sp, #8]
    11fc:	ldr	x8, [x0, #120]
    1200:	ldr	x10, [x0]
    1204:	sub	x9, x8, #0x4
    1208:	str	x9, [x0, #120]
    120c:	ldr	w8, [x8]
    1210:	ldr	x9, [x0, #24]
    1214:	add	x11, x9, x8, lsl #3
    1218:	sub	x10, x10, x11
    121c:	and	x10, x10, #0x7fffffff8
    1220:	cmp	x10, #0x10
    1224:	b.ne	13e4 <boot_Math__BigInt__FastCalc@@Base+0x510>  // b.any
    1228:	add	w10, w8, #0x2
    122c:	ldr	x21, [x9, w10, sxtw #3]
    1230:	mov	w23, #0x100                 	// #256
    1234:	mov	w1, #0xb                   	// #11
    1238:	mov	x19, x0
    123c:	add	w22, w8, #0x1
    1240:	movk	w23, #0x8000, lsl #16
    1244:	bl	db0 <Perl_newSV_type@plt>
    1248:	ldr	w8, [x21, #12]
    124c:	mov	x20, x0
    1250:	bics	wzr, w23, w8
    1254:	b.ne	12b8 <boot_Math__BigInt__FastCalc@@Base+0x3e4>  // b.any
    1258:	add	w9, w23, #0x200, lsl #12
    125c:	and	w8, w8, w9
    1260:	cmp	w8, w23
    1264:	b.ne	1274 <boot_Math__BigInt__FastCalc@@Base+0x3a0>  // b.any
    1268:	ldr	x8, [x21]
    126c:	ldr	x0, [x8, #32]
    1270:	b	1284 <boot_Math__BigInt__FastCalc@@Base+0x3b0>
    1274:	mov	w2, #0x2                   	// #2
    1278:	mov	x0, x19
    127c:	mov	x1, x21
    1280:	bl	c70 <Perl_sv_2uv_flags@plt>
    1284:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1288:	ldr	d0, [x8, #248]
    128c:	ldr	w8, [x21, #12]
    1290:	ucvtf	d1, x0
    1294:	fcmp	d0, d1
    1298:	b.le	12b8 <boot_Math__BigInt__FastCalc@@Base+0x3e4>
    129c:	add	w9, w23, #0x200, lsl #12
    12a0:	and	w8, w8, w9
    12a4:	cmp	w8, w23
    12a8:	b.ne	1354 <boot_Math__BigInt__FastCalc@@Base+0x480>  // b.any
    12ac:	ldr	x8, [x21]
    12b0:	ldr	x1, [x8, #32]
    12b4:	b	1368 <boot_Math__BigInt__FastCalc@@Base+0x494>
    12b8:	mov	w9, #0x400                 	// #1024
    12bc:	movk	w9, #0x20, lsl #16
    12c0:	and	w8, w8, w9
    12c4:	cmp	w8, #0x400
    12c8:	b.ne	12e4 <boot_Math__BigInt__FastCalc@@Base+0x410>  // b.any
    12cc:	ldr	x8, [x21]
    12d0:	ldr	x8, [x8, #16]
    12d4:	str	x8, [sp]
    12d8:	ldr	x0, [x21, #16]
    12dc:	cbnz	x8, 1300 <boot_Math__BigInt__FastCalc@@Base+0x42c>
    12e0:	b	1380 <boot_Math__BigInt__FastCalc@@Base+0x4ac>
    12e4:	mov	x2, sp
    12e8:	mov	w3, #0x2                   	// #2
    12ec:	mov	x0, x19
    12f0:	mov	x1, x21
    12f4:	bl	cc0 <Perl_sv_2pv_flags@plt>
    12f8:	ldr	x8, [sp]
    12fc:	cbz	x8, 1380 <boot_Math__BigInt__FastCalc@@Base+0x4ac>
    1300:	add	x21, x0, x8
    1304:	adrp	x23, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1308:	b	1310 <boot_Math__BigInt__FastCalc@@Base+0x43c>
    130c:	cbz	x8, 1380 <boot_Math__BigInt__FastCalc@@Base+0x4ac>
    1310:	ldr	d0, [x23, #240]
    1314:	fcvtzu	x9, d0
    1318:	cmp	x8, x9
    131c:	csel	x2, x8, x9, cc  // cc = lo, ul, last
    1320:	sub	x21, x21, x2
    1324:	sub	x8, x8, x2
    1328:	str	x8, [sp]
    132c:	cbz	x2, 130c <boot_Math__BigInt__FastCalc@@Base+0x438>
    1330:	mov	x0, x19
    1334:	mov	x1, x21
    1338:	bl	de0 <Perl_newSVpvn@plt>
    133c:	mov	x2, x0
    1340:	mov	x0, x19
    1344:	mov	x1, x20
    1348:	bl	d20 <Perl_av_push@plt>
    134c:	ldr	x8, [sp]
    1350:	b	130c <boot_Math__BigInt__FastCalc@@Base+0x438>
    1354:	mov	w2, #0x2                   	// #2
    1358:	mov	x0, x19
    135c:	mov	x1, x21
    1360:	bl	c70 <Perl_sv_2uv_flags@plt>
    1364:	mov	x1, x0
    1368:	mov	x0, x19
    136c:	bl	d70 <Perl_newSVuv@plt>
    1370:	mov	x2, x0
    1374:	mov	x0, x19
    1378:	mov	x1, x20
    137c:	bl	d20 <Perl_av_push@plt>
    1380:	mov	x0, x19
    1384:	mov	x1, x20
    1388:	bl	c60 <Perl_newRV_noinc@plt>
    138c:	mov	x1, x0
    1390:	mov	x0, x19
    1394:	bl	d60 <Perl_sv_2mortal@plt>
    1398:	ldr	x8, [x19, #24]
    139c:	sbfiz	x9, x22, #3, #32
    13a0:	str	x0, [x8, x9]
    13a4:	ldr	x8, [x19, #24]
    13a8:	add	x8, x8, x9
    13ac:	str	x8, [x19]
    13b0:	adrp	x9, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    13b4:	ldr	x8, [sp, #8]
    13b8:	ldr	x9, [x9, #4056]
    13bc:	ldr	x9, [x9]
    13c0:	cmp	x9, x8
    13c4:	b.ne	13e0 <boot_Math__BigInt__FastCalc@@Base+0x50c>  // b.any
    13c8:	ldp	x20, x19, [sp, #64]
    13cc:	ldp	x22, x21, [sp, #48]
    13d0:	ldr	x23, [sp, #32]
    13d4:	ldp	x29, x30, [sp, #16]
    13d8:	add	sp, sp, #0x50
    13dc:	ret
    13e0:	bl	ce0 <__stack_chk_fail@plt>
    13e4:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    13e8:	add	x8, x8, #0x3e5
    13ec:	mov	x0, x1
    13f0:	mov	x1, x8
    13f4:	bl	d00 <Perl_croak_xs_usage@plt>
    13f8:	stp	x29, x30, [sp, #-80]!
    13fc:	stp	x24, x23, [sp, #32]
    1400:	stp	x22, x21, [sp, #48]
    1404:	stp	x20, x19, [sp, #64]
    1408:	ldr	x8, [x0, #120]
    140c:	ldr	x10, [x0]
    1410:	str	x25, [sp, #16]
    1414:	mov	x29, sp
    1418:	sub	x9, x8, #0x4
    141c:	str	x9, [x0, #120]
    1420:	ldr	w8, [x8]
    1424:	ldr	x9, [x0, #24]
    1428:	add	x11, x9, x8, lsl #3
    142c:	sub	x10, x10, x11
    1430:	and	x10, x10, #0x7fffffff8
    1434:	cmp	x10, #0x10
    1438:	b.ne	1564 <boot_Math__BigInt__FastCalc@@Base+0x690>  // b.any
    143c:	add	w10, w8, #0x2
    1440:	ldr	x9, [x9, w10, sxtw #3]
    1444:	mov	x19, x0
    1448:	add	w23, w8, #0x1
    144c:	ldr	x20, [x9, #16]
    1450:	mov	x1, x20
    1454:	bl	c90 <Perl_av_len@plt>
    1458:	mov	x21, x0
    145c:	mov	w1, #0xb                   	// #11
    1460:	mov	x0, x19
    1464:	bl	db0 <Perl_newSV_type@plt>
    1468:	mov	x1, x0
    146c:	mov	x0, x19
    1470:	bl	d60 <Perl_sv_2mortal@plt>
    1474:	mov	x22, x0
    1478:	mov	x0, x19
    147c:	mov	x1, x22
    1480:	mov	x2, x21
    1484:	bl	df0 <Perl_av_extend@plt>
    1488:	tbnz	x21, #63, 151c <boot_Math__BigInt__FastCalc@@Base+0x648>
    148c:	mov	w24, #0x200                 	// #512
    1490:	movk	w24, #0x20, lsl #16
    1494:	b	14d0 <boot_Math__BigInt__FastCalc@@Base+0x5fc>
    1498:	ldr	x1, [x0]
    149c:	mov	w2, #0x2                   	// #2
    14a0:	mov	x0, x19
    14a4:	bl	d10 <Perl_sv_2nv_flags@plt>
    14a8:	mov	x0, x19
    14ac:	bl	cb0 <Perl_newSVnv@plt>
    14b0:	mov	x3, x0
    14b4:	mov	x0, x19
    14b8:	mov	x1, x22
    14bc:	mov	x2, x21
    14c0:	bl	ca0 <Perl_av_store@plt>
    14c4:	cmp	x21, #0x0
    14c8:	sub	x21, x21, #0x1
    14cc:	b.le	151c <boot_Math__BigInt__FastCalc@@Base+0x648>
    14d0:	mov	x0, x19
    14d4:	mov	x1, x20
    14d8:	mov	x2, x21
    14dc:	mov	w3, wzr
    14e0:	bl	d90 <Perl_av_fetch@plt>
    14e4:	ldr	x8, [x0]
    14e8:	mov	x0, x19
    14ec:	mov	x1, x20
    14f0:	mov	x2, x21
    14f4:	ldr	w8, [x8, #12]
    14f8:	mov	w3, wzr
    14fc:	and	w25, w8, w24
    1500:	bl	d90 <Perl_av_fetch@plt>
    1504:	cmp	w25, #0x200
    1508:	b.ne	1498 <boot_Math__BigInt__FastCalc@@Base+0x5c4>  // b.any
    150c:	ldr	x8, [x0]
    1510:	ldr	x8, [x8]
    1514:	ldr	d0, [x8, #40]
    1518:	b	14a8 <boot_Math__BigInt__FastCalc@@Base+0x5d4>
    151c:	mov	x0, x19
    1520:	mov	x1, x22
    1524:	bl	da0 <Perl_newRV@plt>
    1528:	mov	x1, x0
    152c:	mov	x0, x19
    1530:	bl	d60 <Perl_sv_2mortal@plt>
    1534:	ldr	x8, [x19, #24]
    1538:	sbfiz	x9, x23, #3, #32
    153c:	ldr	x25, [sp, #16]
    1540:	str	x0, [x8, x9]
    1544:	ldr	x8, [x19, #24]
    1548:	add	x8, x8, x9
    154c:	str	x8, [x19]
    1550:	ldp	x20, x19, [sp, #64]
    1554:	ldp	x22, x21, [sp, #48]
    1558:	ldp	x24, x23, [sp, #32]
    155c:	ldp	x29, x30, [sp], #80
    1560:	ret
    1564:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1568:	add	x8, x8, #0x3e5
    156c:	mov	x0, x1
    1570:	mov	x1, x8
    1574:	bl	d00 <Perl_croak_xs_usage@plt>
    1578:	stp	x29, x30, [sp, #-64]!
    157c:	stp	x24, x23, [sp, #16]
    1580:	stp	x22, x21, [sp, #32]
    1584:	stp	x20, x19, [sp, #48]
    1588:	ldr	x8, [x0, #120]
    158c:	ldr	x10, [x0]
    1590:	mov	x29, sp
    1594:	sub	x9, x8, #0x4
    1598:	str	x9, [x0, #120]
    159c:	ldrsw	x9, [x8]
    15a0:	ldr	x8, [x0, #24]
    15a4:	add	x11, x8, x9, lsl #3
    15a8:	sub	x10, x10, x11
    15ac:	and	x10, x10, #0x7fffffff8
    15b0:	cmp	x10, #0x8
    15b4:	b.ne	16c4 <boot_Math__BigInt__FastCalc@@Base+0x7f0>  // b.any
    15b8:	add	x23, x9, #0x1
    15bc:	lsl	x22, x23, #3
    15c0:	ldr	x24, [x8, x22]
    15c4:	mov	x19, x0
    15c8:	ldr	x20, [x24, #16]
    15cc:	mov	x1, x20
    15d0:	bl	c90 <Perl_av_len@plt>
    15d4:	ldr	x8, [x19, #24]
    15d8:	cmn	x0, #0x1
    15dc:	str	x24, [x8, x22]
    15e0:	b.eq	1688 <boot_Math__BigInt__FastCalc@@Base+0x7b4>  // b.none
    15e4:	mov	x21, x0
    15e8:	cbz	x0, 16a4 <boot_Math__BigInt__FastCalc@@Base+0x7d0>
    15ec:	cmp	x21, #0x1
    15f0:	b.lt	16a4 <boot_Math__BigInt__FastCalc@@Base+0x7d0>  // b.tstop
    15f4:	mov	w24, #0x200                 	// #512
    15f8:	movk	w24, #0x20, lsl #16
    15fc:	mov	x22, x21
    1600:	mov	x0, x19
    1604:	mov	x1, x20
    1608:	mov	x2, x22
    160c:	mov	w3, wzr
    1610:	bl	d90 <Perl_av_fetch@plt>
    1614:	ldr	x1, [x0]
    1618:	ldr	w8, [x1, #12]
    161c:	and	w8, w8, w24
    1620:	cmp	w8, #0x200
    1624:	b.ne	163c <boot_Math__BigInt__FastCalc@@Base+0x768>  // b.any
    1628:	ldr	x8, [x1]
    162c:	ldr	d0, [x8, #40]
    1630:	fcmp	d0, #0.0
    1634:	b.eq	1650 <boot_Math__BigInt__FastCalc@@Base+0x77c>  // b.none
    1638:	b	1658 <boot_Math__BigInt__FastCalc@@Base+0x784>
    163c:	mov	w2, #0x2                   	// #2
    1640:	mov	x0, x19
    1644:	bl	d10 <Perl_sv_2nv_flags@plt>
    1648:	fcmp	d0, #0.0
    164c:	b.ne	1658 <boot_Math__BigInt__FastCalc@@Base+0x784>  // b.any
    1650:	subs	x22, x22, #0x1
    1654:	b.gt	1600 <boot_Math__BigInt__FastCalc@@Base+0x72c>
    1658:	subs	x8, x21, x22
    165c:	b.le	16a4 <boot_Math__BigInt__FastCalc@@Base+0x7d0>
    1660:	cmp	x8, #0x1
    1664:	b.lt	16a4 <boot_Math__BigInt__FastCalc@@Base+0x7d0>  // b.tstop
    1668:	add	x21, x8, #0x1
    166c:	mov	x0, x19
    1670:	mov	x1, x20
    1674:	bl	d30 <Perl_av_pop@plt>
    1678:	sub	x21, x21, #0x1
    167c:	cmp	x21, #0x1
    1680:	b.gt	166c <boot_Math__BigInt__FastCalc@@Base+0x798>
    1684:	b	16a4 <boot_Math__BigInt__FastCalc@@Base+0x7d0>
    1688:	mov	x0, x19
    168c:	mov	x1, xzr
    1690:	bl	dc0 <Perl_newSViv@plt>
    1694:	mov	x2, x0
    1698:	mov	x0, x19
    169c:	mov	x1, x20
    16a0:	bl	d20 <Perl_av_push@plt>
    16a4:	ldr	x8, [x19, #24]
    16a8:	add	x8, x8, x23, lsl #3
    16ac:	str	x8, [x19]
    16b0:	ldp	x20, x19, [sp, #48]
    16b4:	ldp	x22, x21, [sp, #32]
    16b8:	ldp	x24, x23, [sp, #16]
    16bc:	ldp	x29, x30, [sp], #64
    16c0:	ret
    16c4:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    16c8:	add	x8, x8, #0x3ec
    16cc:	mov	x0, x1
    16d0:	mov	x1, x8
    16d4:	bl	d00 <Perl_croak_xs_usage@plt>
    16d8:	stp	d9, d8, [sp, #-96]!
    16dc:	stp	x29, x30, [sp, #16]
    16e0:	stp	x26, x25, [sp, #32]
    16e4:	stp	x24, x23, [sp, #48]
    16e8:	stp	x22, x21, [sp, #64]
    16ec:	stp	x20, x19, [sp, #80]
    16f0:	ldr	x8, [x0, #120]
    16f4:	ldr	x10, [x0]
    16f8:	mov	x29, sp
    16fc:	sub	x9, x8, #0x4
    1700:	str	x9, [x0, #120]
    1704:	ldr	w8, [x8]
    1708:	ldr	x9, [x0, #24]
    170c:	add	x11, x9, x8, lsl #3
    1710:	sub	x10, x10, x11
    1714:	and	x10, x10, #0x7fffffff8
    1718:	cmp	x10, #0x10
    171c:	b.ne	18a4 <boot_Math__BigInt__FastCalc@@Base+0x9d0>  // b.any
    1720:	add	w10, w8, #0x2
    1724:	ldr	x22, [x9, w10, sxtw #3]
    1728:	mov	x19, x0
    172c:	add	w23, w8, #0x1
    1730:	ldr	x20, [x22, #16]
    1734:	mov	x1, x20
    1738:	bl	c90 <Perl_av_len@plt>
    173c:	ldr	x8, [x19, #24]
    1740:	sxtw	x24, w23
    1744:	str	x22, [x8, w23, sxtw #3]
    1748:	tbnz	x0, #63, 187c <boot_Math__BigInt__FastCalc@@Base+0x9a8>
    174c:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1750:	ldr	d0, [x8, #248]
    1754:	fmov	d9, #-1.000000000000000000e+00
    1758:	mov	w25, #0x200                 	// #512
    175c:	mov	x21, x0
    1760:	mov	x22, xzr
    1764:	movk	w25, #0x20, lsl #16
    1768:	fadd	d8, d0, d9
    176c:	add	x26, x0, #0x1
    1770:	mov	x0, x19
    1774:	mov	x1, x20
    1778:	mov	x2, x22
    177c:	mov	w3, wzr
    1780:	bl	d90 <Perl_av_fetch@plt>
    1784:	ldr	x23, [x0]
    1788:	ldr	w8, [x23, #12]
    178c:	and	w8, w8, w25
    1790:	cmp	w8, #0x200
    1794:	b.ne	17a4 <boot_Math__BigInt__FastCalc@@Base+0x8d0>  // b.any
    1798:	ldr	x8, [x23]
    179c:	ldr	d0, [x8, #40]
    17a0:	b	17b4 <boot_Math__BigInt__FastCalc@@Base+0x8e0>
    17a4:	mov	w2, #0x2                   	// #2
    17a8:	mov	x0, x19
    17ac:	mov	x1, x23
    17b0:	bl	d10 <Perl_sv_2nv_flags@plt>
    17b4:	fadd	d0, d0, d9
    17b8:	mov	x0, x19
    17bc:	mov	x1, x23
    17c0:	bl	c50 <Perl_sv_setnv@plt>
    17c4:	ldr	w8, [x23, #12]
    17c8:	and	w8, w8, w25
    17cc:	cmp	w8, #0x200
    17d0:	b.ne	17e8 <boot_Math__BigInt__FastCalc@@Base+0x914>  // b.any
    17d4:	ldr	x8, [x23]
    17d8:	ldr	d0, [x8, #40]
    17dc:	fcmp	d0, #0.0
    17e0:	b.lt	1800 <boot_Math__BigInt__FastCalc@@Base+0x92c>  // b.tstop
    17e4:	b	181c <boot_Math__BigInt__FastCalc@@Base+0x948>
    17e8:	mov	w2, #0x2                   	// #2
    17ec:	mov	x0, x19
    17f0:	mov	x1, x23
    17f4:	bl	d10 <Perl_sv_2nv_flags@plt>
    17f8:	fcmp	d0, #0.0
    17fc:	b.ge	181c <boot_Math__BigInt__FastCalc@@Base+0x948>  // b.tcont
    1800:	mov	x0, x19
    1804:	mov	x1, x23
    1808:	mov	v0.16b, v8.16b
    180c:	bl	c50 <Perl_sv_setnv@plt>
    1810:	add	x22, x22, #0x1
    1814:	cmp	x26, x22
    1818:	b.ne	1770 <boot_Math__BigInt__FastCalc@@Base+0x89c>  // b.any
    181c:	cmp	x21, #0x1
    1820:	b.lt	187c <boot_Math__BigInt__FastCalc@@Base+0x9a8>  // b.tstop
    1824:	mov	x0, x19
    1828:	mov	x1, x20
    182c:	mov	x2, x21
    1830:	mov	w3, wzr
    1834:	bl	d90 <Perl_av_fetch@plt>
    1838:	ldr	x1, [x0]
    183c:	sub	w9, w25, #0x100
    1840:	ldr	w8, [x1, #12]
    1844:	and	w8, w8, w9
    1848:	cmp	w8, #0x100
    184c:	b.ne	1860 <boot_Math__BigInt__FastCalc@@Base+0x98c>  // b.any
    1850:	ldr	x8, [x1]
    1854:	ldr	x0, [x8, #32]
    1858:	cbnz	x0, 187c <boot_Math__BigInt__FastCalc@@Base+0x9a8>
    185c:	b	1870 <boot_Math__BigInt__FastCalc@@Base+0x99c>
    1860:	mov	w2, #0x2                   	// #2
    1864:	mov	x0, x19
    1868:	bl	c40 <Perl_sv_2iv_flags@plt>
    186c:	cbnz	x0, 187c <boot_Math__BigInt__FastCalc@@Base+0x9a8>
    1870:	mov	x0, x19
    1874:	mov	x1, x20
    1878:	bl	d30 <Perl_av_pop@plt>
    187c:	ldr	x8, [x19, #24]
    1880:	add	x8, x8, x24, lsl #3
    1884:	str	x8, [x19]
    1888:	ldp	x20, x19, [sp, #80]
    188c:	ldp	x22, x21, [sp, #64]
    1890:	ldp	x24, x23, [sp, #48]
    1894:	ldp	x26, x25, [sp, #32]
    1898:	ldp	x29, x30, [sp, #16]
    189c:	ldp	d9, d8, [sp], #96
    18a0:	ret
    18a4:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    18a8:	add	x8, x8, #0x3e5
    18ac:	mov	x0, x1
    18b0:	mov	x1, x8
    18b4:	bl	d00 <Perl_croak_xs_usage@plt>
    18b8:	stp	d9, d8, [sp, #-96]!
    18bc:	stp	x29, x30, [sp, #16]
    18c0:	stp	x26, x25, [sp, #32]
    18c4:	stp	x24, x23, [sp, #48]
    18c8:	stp	x22, x21, [sp, #64]
    18cc:	stp	x20, x19, [sp, #80]
    18d0:	ldr	x8, [x0, #120]
    18d4:	ldr	x10, [x0]
    18d8:	mov	x29, sp
    18dc:	sub	x9, x8, #0x4
    18e0:	str	x9, [x0, #120]
    18e4:	ldr	w8, [x8]
    18e8:	ldr	x9, [x0, #24]
    18ec:	add	x11, x9, x8, lsl #3
    18f0:	sub	x10, x10, x11
    18f4:	and	x10, x10, #0x7fffffff8
    18f8:	cmp	x10, #0x10
    18fc:	b.ne	1a88 <boot_Math__BigInt__FastCalc@@Base+0xbb4>  // b.any
    1900:	add	w10, w8, #0x2
    1904:	ldr	x22, [x9, w10, sxtw #3]
    1908:	mov	w25, #0x200                 	// #512
    190c:	mov	x19, x0
    1910:	movk	w25, #0x20, lsl #16
    1914:	ldr	x20, [x22, #16]
    1918:	add	w23, w8, #0x1
    191c:	mov	x1, x20
    1920:	bl	c90 <Perl_av_len@plt>
    1924:	ldr	x8, [x19, #24]
    1928:	mov	x21, x0
    192c:	sxtw	x24, w23
    1930:	str	x22, [x8, w23, sxtw #3]
    1934:	tbnz	x0, #63, 19f8 <boot_Math__BigInt__FastCalc@@Base+0xb24>
    1938:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    193c:	ldr	d8, [x8, #248]
    1940:	mov	x22, xzr
    1944:	add	x26, x21, #0x1
    1948:	fmov	d9, #1.000000000000000000e+00
    194c:	mov	x0, x19
    1950:	mov	x1, x20
    1954:	mov	x2, x22
    1958:	mov	w3, wzr
    195c:	bl	d90 <Perl_av_fetch@plt>
    1960:	ldr	x23, [x0]
    1964:	ldr	w8, [x23, #12]
    1968:	and	w8, w8, w25
    196c:	cmp	w8, #0x200
    1970:	b.ne	1980 <boot_Math__BigInt__FastCalc@@Base+0xaac>  // b.any
    1974:	ldr	x8, [x23]
    1978:	ldr	d0, [x8, #40]
    197c:	b	1990 <boot_Math__BigInt__FastCalc@@Base+0xabc>
    1980:	mov	w2, #0x2                   	// #2
    1984:	mov	x0, x19
    1988:	mov	x1, x23
    198c:	bl	d10 <Perl_sv_2nv_flags@plt>
    1990:	fadd	d0, d0, d9
    1994:	mov	x0, x19
    1998:	mov	x1, x23
    199c:	bl	c50 <Perl_sv_setnv@plt>
    19a0:	ldr	w8, [x23, #12]
    19a4:	and	w8, w8, w25
    19a8:	cmp	w8, #0x200
    19ac:	b.ne	19c4 <boot_Math__BigInt__FastCalc@@Base+0xaf0>  // b.any
    19b0:	ldr	x8, [x23]
    19b4:	ldr	d0, [x8, #40]
    19b8:	fcmp	d0, d8
    19bc:	b.pl	19dc <boot_Math__BigInt__FastCalc@@Base+0xb08>  // b.nfrst
    19c0:	b	1a60 <boot_Math__BigInt__FastCalc@@Base+0xb8c>
    19c4:	mov	w2, #0x2                   	// #2
    19c8:	mov	x0, x19
    19cc:	mov	x1, x23
    19d0:	bl	d10 <Perl_sv_2nv_flags@plt>
    19d4:	fcmp	d0, d8
    19d8:	b.mi	1a60 <boot_Math__BigInt__FastCalc@@Base+0xb8c>  // b.first
    19dc:	mov	x0, x19
    19e0:	mov	x1, x23
    19e4:	mov	x2, xzr
    19e8:	bl	dd0 <Perl_sv_setiv@plt>
    19ec:	add	x22, x22, #0x1
    19f0:	cmp	x26, x22
    19f4:	b.ne	194c <boot_Math__BigInt__FastCalc@@Base+0xa78>  // b.any
    19f8:	mov	x0, x19
    19fc:	mov	x1, x20
    1a00:	mov	x2, x21
    1a04:	mov	w3, wzr
    1a08:	bl	d90 <Perl_av_fetch@plt>
    1a0c:	ldr	x1, [x0]
    1a10:	sub	w9, w25, #0x100
    1a14:	ldr	w8, [x1, #12]
    1a18:	and	w8, w8, w9
    1a1c:	cmp	w8, #0x100
    1a20:	b.ne	1a34 <boot_Math__BigInt__FastCalc@@Base+0xb60>  // b.any
    1a24:	ldr	x8, [x1]
    1a28:	ldr	x0, [x8, #32]
    1a2c:	cbnz	x0, 1a60 <boot_Math__BigInt__FastCalc@@Base+0xb8c>
    1a30:	b	1a44 <boot_Math__BigInt__FastCalc@@Base+0xb70>
    1a34:	mov	w2, #0x2                   	// #2
    1a38:	mov	x0, x19
    1a3c:	bl	c40 <Perl_sv_2iv_flags@plt>
    1a40:	cbnz	x0, 1a60 <boot_Math__BigInt__FastCalc@@Base+0xb8c>
    1a44:	mov	w1, #0x1                   	// #1
    1a48:	mov	x0, x19
    1a4c:	bl	dc0 <Perl_newSViv@plt>
    1a50:	mov	x2, x0
    1a54:	mov	x0, x19
    1a58:	mov	x1, x20
    1a5c:	bl	d20 <Perl_av_push@plt>
    1a60:	ldr	x8, [x19, #24]
    1a64:	add	x8, x8, x24, lsl #3
    1a68:	str	x8, [x19]
    1a6c:	ldp	x20, x19, [sp, #80]
    1a70:	ldp	x22, x21, [sp, #64]
    1a74:	ldp	x24, x23, [sp, #48]
    1a78:	ldp	x26, x25, [sp, #32]
    1a7c:	ldp	x29, x30, [sp, #16]
    1a80:	ldp	d9, d8, [sp], #96
    1a84:	ret
    1a88:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1a8c:	add	x8, x8, #0x3e5
    1a90:	mov	x0, x1
    1a94:	mov	x1, x8
    1a98:	bl	d00 <Perl_croak_xs_usage@plt>
    1a9c:	stp	x29, x30, [sp, #-48]!
    1aa0:	stp	x22, x21, [sp, #16]
    1aa4:	stp	x20, x19, [sp, #32]
    1aa8:	ldr	x8, [x0, #120]
    1aac:	ldr	x10, [x0]
    1ab0:	mov	x29, sp
    1ab4:	sub	x9, x8, #0x4
    1ab8:	str	x9, [x0, #120]
    1abc:	ldrsw	x8, [x8]
    1ac0:	ldr	x9, [x0, #24]
    1ac4:	add	x9, x9, x8, lsl #3
    1ac8:	sub	x9, x10, x9
    1acc:	and	x9, x9, #0x7fffffff8
    1ad0:	cmp	x9, #0x8
    1ad4:	b.ne	1b50 <boot_Math__BigInt__FastCalc@@Base+0xc7c>  // b.any
    1ad8:	ldr	x9, [x1]
    1adc:	mov	w1, #0xb                   	// #11
    1ae0:	mov	x19, x0
    1ae4:	lsl	x22, x8, #3
    1ae8:	ldrsw	x20, [x9, #40]
    1aec:	bl	db0 <Perl_newSV_type@plt>
    1af0:	mov	x21, x0
    1af4:	mov	x0, x19
    1af8:	mov	x1, x20
    1afc:	bl	dc0 <Perl_newSViv@plt>
    1b00:	mov	x2, x0
    1b04:	mov	x0, x19
    1b08:	mov	x1, x21
    1b0c:	bl	d20 <Perl_av_push@plt>
    1b10:	mov	x0, x19
    1b14:	mov	x1, x21
    1b18:	bl	c60 <Perl_newRV_noinc@plt>
    1b1c:	mov	x1, x0
    1b20:	mov	x0, x19
    1b24:	bl	d60 <Perl_sv_2mortal@plt>
    1b28:	ldr	x8, [x19, #24]
    1b2c:	add	x9, x22, #0x8
    1b30:	str	x0, [x8, x9]
    1b34:	ldr	x8, [x19, #24]
    1b38:	add	x8, x8, x9
    1b3c:	str	x8, [x19]
    1b40:	ldp	x20, x19, [sp, #32]
    1b44:	ldp	x22, x21, [sp, #16]
    1b48:	ldp	x29, x30, [sp], #48
    1b4c:	ret
    1b50:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1b54:	add	x8, x8, #0x3ee
    1b58:	mov	x0, x1
    1b5c:	mov	x1, x8
    1b60:	bl	d00 <Perl_croak_xs_usage@plt>
    1b64:	stp	x29, x30, [sp, #-48]!
    1b68:	stp	x20, x19, [sp, #32]
    1b6c:	ldr	x8, [x0, #120]
    1b70:	ldr	x10, [x0]
    1b74:	str	x21, [sp, #16]
    1b78:	mov	x29, sp
    1b7c:	sub	x9, x8, #0x4
    1b80:	str	x9, [x0, #120]
    1b84:	ldr	w8, [x8]
    1b88:	ldr	x9, [x0, #24]
    1b8c:	add	x11, x9, x8, lsl #3
    1b90:	sub	x10, x10, x11
    1b94:	and	x10, x10, #0x7fffffff8
    1b98:	cmp	x10, #0x10
    1b9c:	b.ne	1c40 <boot_Math__BigInt__FastCalc@@Base+0xd6c>  // b.any
    1ba0:	add	w11, w8, #0x2
    1ba4:	ldr	x9, [x9, w11, sxtw #3]
    1ba8:	ldr	x10, [x1]
    1bac:	mov	x2, xzr
    1bb0:	mov	w3, wzr
    1bb4:	ldr	x1, [x9, #16]
    1bb8:	ldrsw	x21, [x10, #40]
    1bbc:	mov	x19, x0
    1bc0:	add	w20, w8, #0x1
    1bc4:	bl	d90 <Perl_av_fetch@plt>
    1bc8:	ldr	x1, [x0]
    1bcc:	mov	w9, #0x100                 	// #256
    1bd0:	movk	w9, #0x20, lsl #16
    1bd4:	ldr	w8, [x1, #12]
    1bd8:	and	w8, w8, w9
    1bdc:	cmp	w8, #0x100
    1be0:	b.ne	1bf0 <boot_Math__BigInt__FastCalc@@Base+0xd1c>  // b.any
    1be4:	ldr	x8, [x1]
    1be8:	ldr	x0, [x8, #32]
    1bec:	b	1bfc <boot_Math__BigInt__FastCalc@@Base+0xd28>
    1bf0:	mov	w2, #0x2                   	// #2
    1bf4:	mov	x0, x19
    1bf8:	bl	c40 <Perl_sv_2iv_flags@plt>
    1bfc:	and	x8, x0, #0x1
    1c00:	add	x9, x19, #0x138
    1c04:	add	x10, x19, #0x168
    1c08:	cmp	x8, x21
    1c0c:	csel	x1, x9, x10, eq  // eq = none
    1c10:	mov	x0, x19
    1c14:	bl	d60 <Perl_sv_2mortal@plt>
    1c18:	ldr	x8, [x19, #24]
    1c1c:	sbfiz	x9, x20, #3, #32
    1c20:	ldr	x21, [sp, #16]
    1c24:	str	x0, [x8, x9]
    1c28:	ldr	x8, [x19, #24]
    1c2c:	add	x8, x8, x9
    1c30:	str	x8, [x19]
    1c34:	ldp	x20, x19, [sp, #32]
    1c38:	ldp	x29, x30, [sp], #48
    1c3c:	ret
    1c40:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1c44:	add	x8, x8, #0x3e5
    1c48:	mov	x0, x1
    1c4c:	mov	x1, x8
    1c50:	bl	d00 <Perl_croak_xs_usage@plt>
    1c54:	stp	x29, x30, [sp, #-48]!
    1c58:	stp	x22, x21, [sp, #16]
    1c5c:	stp	x20, x19, [sp, #32]
    1c60:	ldr	x8, [x0, #120]
    1c64:	ldr	x10, [x0]
    1c68:	mov	x29, sp
    1c6c:	sub	x9, x8, #0x4
    1c70:	str	x9, [x0, #120]
    1c74:	ldrsw	x8, [x8]
    1c78:	ldr	x9, [x0, #24]
    1c7c:	add	x9, x9, x8, lsl #3
    1c80:	sub	x10, x10, x9
    1c84:	and	x10, x10, #0x7fffffff8
    1c88:	cmp	x10, #0x10
    1c8c:	b.ne	1d4c <boot_Math__BigInt__FastCalc@@Base+0xe78>  // b.any
    1c90:	ldr	x9, [x9, #16]
    1c94:	ldr	x10, [x1]
    1c98:	mov	x19, x0
    1c9c:	add	x21, x8, #0x1
    1ca0:	ldr	x20, [x9, #16]
    1ca4:	ldrsw	x22, [x10, #40]
    1ca8:	mov	x1, x20
    1cac:	bl	c90 <Perl_av_len@plt>
    1cb0:	cbz	x0, 1cc8 <boot_Math__BigInt__FastCalc@@Base+0xdf4>
    1cb4:	ldr	x9, [x19, #24]
    1cb8:	add	x8, x19, #0x168
    1cbc:	mov	x10, x21
    1cc0:	add	x9, x9, x21, lsl #3
    1cc4:	b	1d2c <boot_Math__BigInt__FastCalc@@Base+0xe58>
    1cc8:	mov	x0, x19
    1ccc:	mov	x1, x20
    1cd0:	mov	x2, xzr
    1cd4:	mov	w3, wzr
    1cd8:	bl	d90 <Perl_av_fetch@plt>
    1cdc:	ldr	x1, [x0]
    1ce0:	mov	w9, #0x100                 	// #256
    1ce4:	movk	w9, #0x20, lsl #16
    1ce8:	ldr	w8, [x1, #12]
    1cec:	and	w8, w8, w9
    1cf0:	cmp	w8, #0x100
    1cf4:	b.ne	1d04 <boot_Math__BigInt__FastCalc@@Base+0xe30>  // b.any
    1cf8:	ldr	x8, [x1]
    1cfc:	ldr	x0, [x8, #32]
    1d00:	b	1d10 <boot_Math__BigInt__FastCalc@@Base+0xe3c>
    1d04:	mov	w2, #0x2                   	// #2
    1d08:	mov	x0, x19
    1d0c:	bl	c40 <Perl_sv_2iv_flags@plt>
    1d10:	ldr	x11, [x19, #24]
    1d14:	add	x8, x19, #0x138
    1d18:	add	x9, x19, #0x168
    1d1c:	cmp	x0, x22
    1d20:	csel	x8, x8, x9, eq  // eq = none
    1d24:	sxtw	x10, w21
    1d28:	add	x9, x11, w21, sxtw #3
    1d2c:	str	x8, [x9]
    1d30:	ldr	x8, [x19, #24]
    1d34:	add	x8, x8, x10, lsl #3
    1d38:	str	x8, [x19]
    1d3c:	ldp	x20, x19, [sp, #32]
    1d40:	ldp	x22, x21, [sp, #16]
    1d44:	ldp	x29, x30, [sp], #48
    1d48:	ret
    1d4c:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1d50:	add	x8, x8, #0x3e5
    1d54:	mov	x0, x1
    1d58:	mov	x1, x8
    1d5c:	bl	d00 <Perl_croak_xs_usage@plt>
    1d60:	sub	sp, sp, #0x40
    1d64:	stp	x29, x30, [sp, #16]
    1d68:	stp	x22, x21, [sp, #32]
    1d6c:	stp	x20, x19, [sp, #48]
    1d70:	adrp	x8, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    1d74:	ldr	x8, [x8, #4056]
    1d78:	add	x29, sp, #0x10
    1d7c:	ldr	x8, [x8]
    1d80:	str	x8, [sp, #8]
    1d84:	ldr	x8, [x0, #120]
    1d88:	ldr	x10, [x0]
    1d8c:	sub	x9, x8, #0x4
    1d90:	str	x9, [x0, #120]
    1d94:	ldr	w8, [x8]
    1d98:	ldr	x9, [x0, #24]
    1d9c:	add	x11, x9, x8, lsl #3
    1da0:	sub	x10, x10, x11
    1da4:	and	x10, x10, #0x7fffffff8
    1da8:	cmp	x10, #0x10
    1dac:	b.ne	1e94 <boot_Math__BigInt__FastCalc@@Base+0xfc0>  // b.any
    1db0:	add	w10, w8, #0x2
    1db4:	ldr	x9, [x9, w10, sxtw #3]
    1db8:	mov	x19, x0
    1dbc:	add	w22, w8, #0x1
    1dc0:	ldr	x21, [x9, #16]
    1dc4:	mov	x1, x21
    1dc8:	bl	c90 <Perl_av_len@plt>
    1dcc:	mov	x20, x0
    1dd0:	mov	x0, x19
    1dd4:	mov	x1, x21
    1dd8:	mov	x2, x20
    1ddc:	mov	w3, wzr
    1de0:	bl	d90 <Perl_av_fetch@plt>
    1de4:	ldr	x1, [x0]
    1de8:	mov	w9, #0x400                 	// #1024
    1dec:	movk	w9, #0x20, lsl #16
    1df0:	ldr	w8, [x1, #12]
    1df4:	and	w8, w8, w9
    1df8:	cmp	w8, #0x400
    1dfc:	b.ne	1e10 <boot_Math__BigInt__FastCalc@@Base+0xf3c>  // b.any
    1e00:	ldr	x8, [x1]
    1e04:	ldr	x8, [x8, #16]
    1e08:	str	x8, [sp]
    1e0c:	b	1e24 <boot_Math__BigInt__FastCalc@@Base+0xf50>
    1e10:	mov	x2, sp
    1e14:	mov	w3, #0x2                   	// #2
    1e18:	mov	x0, x19
    1e1c:	bl	cc0 <Perl_sv_2pv_flags@plt>
    1e20:	ldr	x8, [sp]
    1e24:	adrp	x9, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1e28:	ldr	d0, [x9, #240]
    1e2c:	mov	x0, x19
    1e30:	fcvtzs	x9, d0
    1e34:	madd	x1, x20, x9, x8
    1e38:	str	x1, [sp]
    1e3c:	bl	dc0 <Perl_newSViv@plt>
    1e40:	mov	x1, x0
    1e44:	mov	x0, x19
    1e48:	bl	d60 <Perl_sv_2mortal@plt>
    1e4c:	ldr	x8, [x19, #24]
    1e50:	sbfiz	x9, x22, #3, #32
    1e54:	str	x0, [x8, x9]
    1e58:	ldr	x8, [x19, #24]
    1e5c:	add	x8, x8, x9
    1e60:	str	x8, [x19]
    1e64:	adrp	x9, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    1e68:	ldr	x8, [sp, #8]
    1e6c:	ldr	x9, [x9, #4056]
    1e70:	ldr	x9, [x9]
    1e74:	cmp	x9, x8
    1e78:	b.ne	1e90 <boot_Math__BigInt__FastCalc@@Base+0xfbc>  // b.any
    1e7c:	ldp	x20, x19, [sp, #48]
    1e80:	ldp	x22, x21, [sp, #32]
    1e84:	ldp	x29, x30, [sp, #16]
    1e88:	add	sp, sp, #0x40
    1e8c:	ret
    1e90:	bl	ce0 <__stack_chk_fail@plt>
    1e94:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1e98:	add	x8, x8, #0x3e5
    1e9c:	mov	x0, x1
    1ea0:	mov	x1, x8
    1ea4:	bl	d00 <Perl_croak_xs_usage@plt>
    1ea8:	sub	sp, sp, #0x80
    1eac:	str	d8, [sp, #32]
    1eb0:	stp	x29, x30, [sp, #48]
    1eb4:	stp	x26, x25, [sp, #64]
    1eb8:	stp	x24, x23, [sp, #80]
    1ebc:	stp	x22, x21, [sp, #96]
    1ec0:	stp	x20, x19, [sp, #112]
    1ec4:	adrp	x8, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    1ec8:	ldr	x8, [x8, #4056]
    1ecc:	add	x29, sp, #0x20
    1ed0:	ldr	x8, [x8]
    1ed4:	stur	x8, [x29, #-8]
    1ed8:	ldr	x8, [x0, #120]
    1edc:	ldr	x10, [x0]
    1ee0:	sub	x9, x8, #0x4
    1ee4:	str	x9, [x0, #120]
    1ee8:	ldr	w8, [x8]
    1eec:	ldr	x9, [x0, #24]
    1ef0:	add	x11, x9, x8, lsl #3
    1ef4:	sub	x10, x10, x11
    1ef8:	and	x10, x10, #0x7fffffff8
    1efc:	cmp	x10, #0x18
    1f00:	b.ne	2154 <boot_Math__BigInt__FastCalc@@Base+0x1280>  // b.any
    1f04:	add	w10, w8, #0x2
    1f08:	ldr	x10, [x9, w10, sxtw #3]
    1f0c:	add	w11, w8, #0x3
    1f10:	ldr	x9, [x9, w11, sxtw #3]
    1f14:	mov	x19, x0
    1f18:	ldr	x20, [x10, #16]
    1f1c:	add	w25, w8, #0x1
    1f20:	ldr	x21, [x9, #16]
    1f24:	mov	x1, x20
    1f28:	bl	c90 <Perl_av_len@plt>
    1f2c:	mov	x22, x0
    1f30:	mov	x0, x19
    1f34:	mov	x1, x21
    1f38:	bl	c90 <Perl_av_len@plt>
    1f3c:	sub	x8, x22, x0
    1f40:	cmp	x8, #0x1
    1f44:	b.lt	1fb0 <boot_Math__BigInt__FastCalc@@Base+0x10dc>  // b.tstop
    1f48:	mov	w1, #0x1                   	// #1
    1f4c:	mov	x0, x19
    1f50:	bl	dc0 <Perl_newSViv@plt>
    1f54:	mov	x1, x0
    1f58:	mov	x0, x19
    1f5c:	bl	d60 <Perl_sv_2mortal@plt>
    1f60:	ldr	x8, [x19, #24]
    1f64:	sbfiz	x9, x25, #3, #32
    1f68:	str	x0, [x8, x9]
    1f6c:	ldr	x8, [x19, #24]
    1f70:	add	x8, x8, x9
    1f74:	str	x8, [x19]
    1f78:	adrp	x9, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    1f7c:	ldur	x8, [x29, #-8]
    1f80:	ldr	x9, [x9, #4056]
    1f84:	ldr	x9, [x9]
    1f88:	cmp	x9, x8
    1f8c:	b.ne	2150 <boot_Math__BigInt__FastCalc@@Base+0x127c>  // b.any
    1f90:	ldp	x20, x19, [sp, #112]
    1f94:	ldp	x22, x21, [sp, #96]
    1f98:	ldp	x24, x23, [sp, #80]
    1f9c:	ldp	x26, x25, [sp, #64]
    1fa0:	ldp	x29, x30, [sp, #48]
    1fa4:	ldr	d8, [sp, #32]
    1fa8:	add	sp, sp, #0x80
    1fac:	ret
    1fb0:	tbnz	x8, #63, 213c <boot_Math__BigInt__FastCalc@@Base+0x1268>
    1fb4:	mov	w26, #0x200                 	// #512
    1fb8:	mov	x0, x19
    1fbc:	mov	x1, x20
    1fc0:	mov	x2, x22
    1fc4:	mov	w3, wzr
    1fc8:	movk	w26, #0x20, lsl #16
    1fcc:	bl	d90 <Perl_av_fetch@plt>
    1fd0:	ldr	x24, [x0]
    1fd4:	mov	x0, x19
    1fd8:	mov	x1, x21
    1fdc:	mov	x2, x22
    1fe0:	mov	w3, wzr
    1fe4:	bl	d90 <Perl_av_fetch@plt>
    1fe8:	ldr	w8, [x24, #12]
    1fec:	ldr	x23, [x0]
    1ff0:	add	w9, w26, #0x200
    1ff4:	and	w8, w8, w9
    1ff8:	cmp	w8, #0x400
    1ffc:	b.ne	2010 <boot_Math__BigInt__FastCalc@@Base+0x113c>  // b.any
    2000:	ldr	x8, [x24]
    2004:	ldr	x8, [x8, #16]
    2008:	str	x8, [sp, #16]
    200c:	b	2024 <boot_Math__BigInt__FastCalc@@Base+0x1150>
    2010:	add	x2, sp, #0x10
    2014:	mov	w3, #0x2                   	// #2
    2018:	mov	x0, x19
    201c:	mov	x1, x24
    2020:	bl	cc0 <Perl_sv_2pv_flags@plt>
    2024:	ldr	w8, [x23, #12]
    2028:	add	w9, w26, #0x200
    202c:	and	w8, w8, w9
    2030:	cmp	w8, #0x400
    2034:	b.ne	2058 <boot_Math__BigInt__FastCalc@@Base+0x1184>  // b.any
    2038:	ldr	x8, [x23]
    203c:	ldr	x8, [x8, #16]
    2040:	str	x8, [sp, #8]
    2044:	ldr	x9, [sp, #16]
    2048:	sub	x8, x9, x8
    204c:	cmp	x8, #0x1
    2050:	b.ge	1f48 <boot_Math__BigInt__FastCalc@@Base+0x1074>  // b.tcont
    2054:	b	207c <boot_Math__BigInt__FastCalc@@Base+0x11a8>
    2058:	add	x2, sp, #0x8
    205c:	mov	w3, #0x2                   	// #2
    2060:	mov	x0, x19
    2064:	mov	x1, x23
    2068:	bl	cc0 <Perl_sv_2pv_flags@plt>
    206c:	ldp	x8, x9, [sp, #8]
    2070:	sub	x8, x9, x8
    2074:	cmp	x8, #0x1
    2078:	b.ge	1f48 <boot_Math__BigInt__FastCalc@@Base+0x1074>  // b.tcont
    207c:	tbnz	x8, #63, 213c <boot_Math__BigInt__FastCalc@@Base+0x1268>
    2080:	tbnz	x22, #63, 2144 <boot_Math__BigInt__FastCalc@@Base+0x1270>
    2084:	mov	x0, x19
    2088:	mov	x1, x20
    208c:	mov	x2, x22
    2090:	mov	w3, wzr
    2094:	bl	d90 <Perl_av_fetch@plt>
    2098:	ldr	x24, [x0]
    209c:	mov	x0, x19
    20a0:	mov	x1, x21
    20a4:	mov	x2, x22
    20a8:	mov	w3, wzr
    20ac:	bl	d90 <Perl_av_fetch@plt>
    20b0:	ldr	w8, [x24, #12]
    20b4:	ldr	x23, [x0]
    20b8:	and	w8, w8, w26
    20bc:	cmp	w8, #0x200
    20c0:	b.ne	20f0 <boot_Math__BigInt__FastCalc@@Base+0x121c>  // b.any
    20c4:	ldr	x8, [x24]
    20c8:	ldr	d8, [x8, #40]
    20cc:	ldr	w8, [x23, #12]
    20d0:	and	w8, w8, w26
    20d4:	cmp	w8, #0x200
    20d8:	b.eq	2114 <boot_Math__BigInt__FastCalc@@Base+0x1240>  // b.none
    20dc:	mov	w2, #0x2                   	// #2
    20e0:	mov	x0, x19
    20e4:	mov	x1, x23
    20e8:	bl	d10 <Perl_sv_2nv_flags@plt>
    20ec:	b	211c <boot_Math__BigInt__FastCalc@@Base+0x1248>
    20f0:	mov	w2, #0x2                   	// #2
    20f4:	mov	x0, x19
    20f8:	mov	x1, x24
    20fc:	bl	d10 <Perl_sv_2nv_flags@plt>
    2100:	mov	v8.16b, v0.16b
    2104:	ldr	w8, [x23, #12]
    2108:	and	w8, w8, w26
    210c:	cmp	w8, #0x200
    2110:	b.ne	20dc <boot_Math__BigInt__FastCalc@@Base+0x1208>  // b.any
    2114:	ldr	x8, [x23]
    2118:	ldr	d0, [x8, #40]
    211c:	fsub	d0, d8, d0
    2120:	fcmp	d0, #0.0
    2124:	b.ne	2130 <boot_Math__BigInt__FastCalc@@Base+0x125c>  // b.any
    2128:	subs	x22, x22, #0x1
    212c:	b.ge	2084 <boot_Math__BigInt__FastCalc@@Base+0x11b0>  // b.tcont
    2130:	fcmp	d0, #0.0
    2134:	b.gt	1f48 <boot_Math__BigInt__FastCalc@@Base+0x1074>
    2138:	b.pl	2144 <boot_Math__BigInt__FastCalc@@Base+0x1270>  // b.nfrst
    213c:	mov	x1, #0xffffffffffffffff    	// #-1
    2140:	b	1f4c <boot_Math__BigInt__FastCalc@@Base+0x1078>
    2144:	mov	x0, x19
    2148:	mov	x1, xzr
    214c:	b	1f50 <boot_Math__BigInt__FastCalc@@Base+0x107c>
    2150:	bl	ce0 <__stack_chk_fail@plt>
    2154:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    2158:	add	x8, x8, #0x3f4
    215c:	mov	x0, x1
    2160:	mov	x1, x8
    2164:	bl	d00 <Perl_croak_xs_usage@plt>

Disassembly of section .fini:

0000000000002168 <.fini>:
    2168:	stp	x29, x30, [sp, #-16]!
    216c:	mov	x29, sp
    2170:	ldp	x29, x30, [sp], #16
    2174:	ret
