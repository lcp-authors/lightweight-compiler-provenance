
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libubsan.so.1.0.0_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000063c8 <.init>:
    63c8:	stp	x29, x30, [sp, #-16]!
    63cc:	mov	x29, sp
    63d0:	bl	6b20 <__asan_backtrace_open@plt+0x10>
    63d4:	ldp	x29, x30, [sp], #16
    63d8:	ret

Disassembly of section .plt:

00000000000063e0 <_Unwind_Backtrace@plt-0x20>:
    63e0:	stp	x16, x30, [sp, #-16]!
    63e4:	adrp	x16, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    63e8:	ldr	x17, [x16, #4088]
    63ec:	add	x16, x16, #0xff8
    63f0:	br	x17
    63f4:	nop
    63f8:	nop
    63fc:	nop

0000000000006400 <_Unwind_Backtrace@plt>:
    6400:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6404:	ldr	x17, [x16]
    6408:	add	x16, x16, #0x0
    640c:	br	x17

0000000000006410 <__fxstat@plt>:
    6410:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6414:	ldr	x17, [x16, #8]
    6418:	add	x16, x16, #0x8
    641c:	br	x17

0000000000006420 <__sanitizer_report_error_summary@plt>:
    6420:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6424:	ldr	x17, [x16, #16]
    6428:	add	x16, x16, #0x10
    642c:	br	x17

0000000000006430 <OnPrint@plt>:
    6430:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6434:	ldr	x17, [x16, #24]
    6438:	add	x16, x16, #0x18
    643c:	br	x17

0000000000006440 <__asan_cplus_demangle_init_info@plt>:
    6440:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6444:	ldr	x17, [x16, #32]
    6448:	add	x16, x16, #0x20
    644c:	br	x17

0000000000006450 <memcpy@plt>:
    6450:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6454:	ldr	x17, [x16, #40]
    6458:	add	x16, x16, #0x28
    645c:	br	x17

0000000000006460 <__asan_backtrace_qsort@plt>:
    6460:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6464:	ldr	x17, [x16, #48]
    6468:	add	x16, x16, #0x30
    646c:	br	x17

0000000000006470 <readlink@plt>:
    6470:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6474:	ldr	x17, [x16, #56]
    6478:	add	x16, x16, #0x38
    647c:	br	x17

0000000000006480 <shm_open@plt>:
    6480:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6484:	ldr	x17, [x16, #64]
    6488:	add	x16, x16, #0x40
    648c:	br	x17

0000000000006490 <sched_getaffinity@plt>:
    6490:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6494:	ldr	x17, [x16, #72]
    6498:	add	x16, x16, #0x48
    649c:	br	x17

00000000000064a0 <__asan_backtrace_pcinfo@plt>:
    64a0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    64a4:	ldr	x17, [x16, #80]
    64a8:	add	x16, x16, #0x50
    64ac:	br	x17

00000000000064b0 <execv@plt>:
    64b0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    64b4:	ldr	x17, [x16, #88]
    64b8:	add	x16, x16, #0x58
    64bc:	br	x17

00000000000064c0 <pipe@plt>:
    64c0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    64c4:	ldr	x17, [x16, #96]
    64c8:	add	x16, x16, #0x60
    64cc:	br	x17

00000000000064d0 <__sanitizer_get_module_and_offset_for_pc@plt>:
    64d0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    64d4:	ldr	x17, [x16, #104]
    64d8:	add	x16, x16, #0x68
    64dc:	br	x17

00000000000064e0 <__asan_cplus_demangle_type@plt>:
    64e0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    64e4:	ldr	x17, [x16, #112]
    64e8:	add	x16, x16, #0x70
    64ec:	br	x17

00000000000064f0 <__asan_backtrace_release_view@plt>:
    64f0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    64f4:	ldr	x17, [x16, #120]
    64f8:	add	x16, x16, #0x78
    64fc:	br	x17

0000000000006500 <__asan_backtrace_dwarf_add@plt>:
    6500:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6504:	ldr	x17, [x16, #128]
    6508:	add	x16, x16, #0x80
    650c:	br	x17

0000000000006510 <dlvsym@plt>:
    6510:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6514:	ldr	x17, [x16, #136]
    6518:	add	x16, x16, #0x88
    651c:	br	x17

0000000000006520 <pthread_getattr_np@plt>:
    6520:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6524:	ldr	x17, [x16, #144]
    6528:	add	x16, x16, #0x90
    652c:	br	x17

0000000000006530 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>:
    6530:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6534:	ldr	x17, [x16, #152]
    6538:	add	x16, x16, #0x98
    653c:	br	x17

0000000000006540 <__sanitizer_symbolize_demangle@plt>:
    6540:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6544:	ldr	x17, [x16, #160]
    6548:	add	x16, x16, #0xa0
    654c:	br	x17

0000000000006550 <__asan_cplus_demangle_fill_name@plt>:
    6550:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6554:	ldr	x17, [x16, #168]
    6558:	add	x16, x16, #0xa8
    655c:	br	x17

0000000000006560 <__asan_internal_memcpy@plt>:
    6560:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6564:	ldr	x17, [x16, #176]
    6568:	add	x16, x16, #0xb0
    656c:	br	x17

0000000000006570 <__asan_internal_strlen@plt>:
    6570:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6574:	ldr	x17, [x16, #184]
    6578:	add	x16, x16, #0xb8
    657c:	br	x17

0000000000006580 <open@plt>:
    6580:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6584:	ldr	x17, [x16, #192]
    6588:	add	x16, x16, #0xc0
    658c:	br	x17

0000000000006590 <pthread_attr_init@plt>:
    6590:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6594:	ldr	x17, [x16, #200]
    6598:	add	x16, x16, #0xc8
    659c:	br	x17

00000000000065a0 <real_pthread_attr_getstack@plt>:
    65a0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    65a4:	ldr	x17, [x16, #208]
    65a8:	add	x16, x16, #0xd0
    65ac:	br	x17

00000000000065b0 <sleep@plt>:
    65b0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    65b4:	ldr	x17, [x16, #216]
    65b8:	add	x16, x16, #0xd8
    65bc:	br	x17

00000000000065c0 <dlsym@plt>:
    65c0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    65c4:	ldr	x17, [x16, #224]
    65c8:	add	x16, x16, #0xe0
    65cc:	br	x17

00000000000065d0 <__asan_backtrace_vector_grow@plt>:
    65d0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    65d4:	ldr	x17, [x16, #232]
    65d8:	add	x16, x16, #0xe8
    65dc:	br	x17

00000000000065e0 <__asan_backtrace_syminfo@plt>:
    65e0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    65e4:	ldr	x17, [x16, #240]
    65e8:	add	x16, x16, #0xf0
    65ec:	br	x17

00000000000065f0 <__asan_internal_memset@plt>:
    65f0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    65f4:	ldr	x17, [x16, #248]
    65f8:	add	x16, x16, #0xf8
    65fc:	br	x17

0000000000006600 <free@plt>:
    6600:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6604:	ldr	x17, [x16, #256]
    6608:	add	x16, x16, #0x100
    660c:	br	x17

0000000000006610 <__sanitizer_symbolize_data@plt>:
    6610:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6614:	ldr	x17, [x16, #264]
    6618:	add	x16, x16, #0x108
    661c:	br	x17

0000000000006620 <isatty@plt>:
    6620:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6624:	ldr	x17, [x16, #272]
    6628:	add	x16, x16, #0x110
    662c:	br	x17

0000000000006630 <dlerror@plt>:
    6630:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6634:	ldr	x17, [x16, #280]
    6638:	add	x16, x16, #0x118
    663c:	br	x17

0000000000006640 <__cxa_finalize@plt>:
    6640:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6644:	ldr	x17, [x16, #288]
    6648:	add	x16, x16, #0x120
    664c:	br	x17

0000000000006650 <realloc@plt>:
    6650:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6654:	ldr	x17, [x16, #296]
    6658:	add	x16, x16, #0x128
    665c:	br	x17

0000000000006660 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@plt>:
    6660:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6664:	ldr	x17, [x16, #304]
    6668:	add	x16, x16, #0x130
    666c:	br	x17

0000000000006670 <__asan_backtrace_alloc@plt>:
    6670:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6674:	ldr	x17, [x16, #312]
    6678:	add	x16, x16, #0x138
    667c:	br	x17

0000000000006680 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    6680:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6684:	ldr	x17, [x16, #320]
    6688:	add	x16, x16, #0x140
    668c:	br	x17

0000000000006690 <getrusage@plt>:
    6690:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6694:	ldr	x17, [x16, #328]
    6698:	add	x16, x16, #0x148
    669c:	br	x17

00000000000066a0 <pthread_attr_destroy@plt>:
    66a0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    66a4:	ldr	x17, [x16, #336]
    66a8:	add	x16, x16, #0x150
    66ac:	br	x17

00000000000066b0 <sprintf@plt>:
    66b0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    66b4:	ldr	x17, [x16, #344]
    66b8:	add	x16, x16, #0x158
    66bc:	br	x17

00000000000066c0 <__asan_backtrace_vector_release@plt>:
    66c0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    66c4:	ldr	x17, [x16, #352]
    66c8:	add	x16, x16, #0x160
    66cc:	br	x17

00000000000066d0 <__ashrti3@plt>:
    66d0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    66d4:	ldr	x17, [x16, #360]
    66d8:	add	x16, x16, #0x168
    66dc:	br	x17

00000000000066e0 <real_clock_gettime@plt>:
    66e0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    66e4:	ldr	x17, [x16, #368]
    66e8:	add	x16, x16, #0x170
    66ec:	br	x17

00000000000066f0 <__cxa_demangle@plt>:
    66f0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    66f4:	ldr	x17, [x16, #376]
    66f8:	add	x16, x16, #0x178
    66fc:	br	x17

0000000000006700 <__sanitizer_symbolize_code@plt>:
    6700:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6704:	ldr	x17, [x16, #384]
    6708:	add	x16, x16, #0x180
    670c:	br	x17

0000000000006710 <dl_iterate_phdr@plt>:
    6710:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6714:	ldr	x17, [x16, #392]
    6718:	add	x16, x16, #0x188
    671c:	br	x17

0000000000006720 <__sanitizer_dump_coverage@plt>:
    6720:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6724:	ldr	x17, [x16, #400]
    6728:	add	x16, x16, #0x190
    672c:	br	x17

0000000000006730 <clock_gettime@plt>:
    6730:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6734:	ldr	x17, [x16, #408]
    6738:	add	x16, x16, #0x198
    673c:	br	x17

0000000000006740 <getpid@plt>:
    6740:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6744:	ldr	x17, [x16, #416]
    6748:	add	x16, x16, #0x1a0
    674c:	br	x17

0000000000006750 <__sanitizer_symbolize_flush@plt>:
    6750:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6754:	ldr	x17, [x16, #424]
    6758:	add	x16, x16, #0x1a8
    675c:	br	x17

0000000000006760 <__asan_backtrace_create_state@plt>:
    6760:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6764:	ldr	x17, [x16, #432]
    6768:	add	x16, x16, #0x1b0
    676c:	br	x17

0000000000006770 <mmap@plt>:
    6770:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6774:	ldr	x17, [x16, #440]
    6778:	add	x16, x16, #0x1b8
    677c:	br	x17

0000000000006780 <munmap@plt>:
    6780:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6784:	ldr	x17, [x16, #448]
    6788:	add	x16, x16, #0x1c0
    678c:	br	x17

0000000000006790 <__asan_cplus_demangle_print_callback@plt>:
    6790:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6794:	ldr	x17, [x16, #456]
    6798:	add	x16, x16, #0x1c8
    679c:	br	x17

00000000000067a0 <__ubsan_on_report@plt>:
    67a0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    67a4:	ldr	x17, [x16, #464]
    67a8:	add	x16, x16, #0x1d0
    67ac:	br	x17

00000000000067b0 <__dynamic_cast@plt>:
    67b0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    67b4:	ldr	x17, [x16, #472]
    67b8:	add	x16, x16, #0x1d8
    67bc:	br	x17

00000000000067c0 <__cxa_atexit@plt>:
    67c0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    67c4:	ldr	x17, [x16, #480]
    67c8:	add	x16, x16, #0x1e0
    67cc:	br	x17

00000000000067d0 <snprintf@plt>:
    67d0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    67d4:	ldr	x17, [x16, #488]
    67d8:	add	x16, x16, #0x1e8
    67dc:	br	x17

00000000000067e0 <pthread_attr_getstack@plt>:
    67e0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    67e4:	ldr	x17, [x16, #496]
    67e8:	add	x16, x16, #0x1f0
    67ec:	br	x17

00000000000067f0 <pthread_attr_setstacksize@plt>:
    67f0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    67f4:	ldr	x17, [x16, #504]
    67f8:	add	x16, x16, #0x1f8
    67fc:	br	x17

0000000000006800 <_Unwind_GetIP@plt>:
    6800:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6804:	ldr	x17, [x16, #512]
    6808:	add	x16, x16, #0x200
    680c:	br	x17

0000000000006810 <madvise@plt>:
    6810:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6814:	ldr	x17, [x16, #520]
    6818:	add	x16, x16, #0x208
    681c:	br	x17

0000000000006820 <usleep@plt>:
    6820:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6824:	ldr	x17, [x16, #528]
    6828:	add	x16, x16, #0x210
    682c:	br	x17

0000000000006830 <shm_unlink@plt>:
    6830:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6834:	ldr	x17, [x16, #536]
    6838:	add	x16, x16, #0x218
    683c:	br	x17

0000000000006840 <__sched_cpucount@plt>:
    6840:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6844:	ldr	x17, [x16, #544]
    6848:	add	x16, x16, #0x220
    684c:	br	x17

0000000000006850 <strrchr@plt>:
    6850:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6854:	ldr	x17, [x16, #552]
    6858:	add	x16, x16, #0x228
    685c:	br	x17

0000000000006860 <__errno_location@plt>:
    6860:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6864:	ldr	x17, [x16, #560]
    6868:	add	x16, x16, #0x230
    686c:	br	x17

0000000000006870 <sched_yield@plt>:
    6870:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6874:	ldr	x17, [x16, #568]
    6878:	add	x16, x16, #0x238
    687c:	br	x17

0000000000006880 <__asan_backtrace_get_view@plt>:
    6880:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6884:	ldr	x17, [x16, #576]
    6888:	add	x16, x16, #0x240
    688c:	br	x17

0000000000006890 <syslog@plt>:
    6890:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6894:	ldr	x17, [x16, #584]
    6898:	add	x16, x16, #0x248
    689c:	br	x17

00000000000068a0 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    68a0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    68a4:	ldr	x17, [x16, #592]
    68a8:	add	x16, x16, #0x250
    68ac:	br	x17

00000000000068b0 <__asan_cplus_demangle_fill_extended_operator@plt>:
    68b0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    68b4:	ldr	x17, [x16, #600]
    68b8:	add	x16, x16, #0x258
    68bc:	br	x17

00000000000068c0 <__asan_internal_strcmp@plt>:
    68c0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    68c4:	ldr	x17, [x16, #608]
    68c8:	add	x16, x16, #0x260
    68cc:	br	x17

00000000000068d0 <__asan_internal_strnlen@plt>:
    68d0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    68d4:	ldr	x17, [x16, #616]
    68d8:	add	x16, x16, #0x268
    68dc:	br	x17

00000000000068e0 <close@plt>:
    68e0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    68e4:	ldr	x17, [x16, #624]
    68e8:	add	x16, x16, #0x270
    68ec:	br	x17

00000000000068f0 <__extenddftf2@plt>:
    68f0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    68f4:	ldr	x17, [x16, #632]
    68f8:	add	x16, x16, #0x278
    68fc:	br	x17

0000000000006900 <__asan_internal_strncmp@plt>:
    6900:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6904:	ldr	x17, [x16, #640]
    6908:	add	x16, x16, #0x280
    690c:	br	x17

0000000000006910 <__ubsan_handle_cfi_bad_type@plt>:
    6910:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6914:	ldr	x17, [x16, #648]
    6918:	add	x16, x16, #0x288
    691c:	br	x17

0000000000006920 <__asan_cplus_demangle_fill_ctor@plt>:
    6920:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6924:	ldr	x17, [x16, #656]
    6928:	add	x16, x16, #0x290
    692c:	br	x17

0000000000006930 <setrlimit@plt>:
    6930:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6934:	ldr	x17, [x16, #664]
    6938:	add	x16, x16, #0x298
    693c:	br	x17

0000000000006940 <getauxval@plt>:
    6940:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6944:	ldr	x17, [x16, #672]
    6948:	add	x16, x16, #0x2a0
    694c:	br	x17

0000000000006950 <__asan_backtrace_free@plt>:
    6950:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6954:	ldr	x17, [x16, #680]
    6958:	add	x16, x16, #0x2a8
    695c:	br	x17

0000000000006960 <__lxstat@plt>:
    6960:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6964:	ldr	x17, [x16, #688]
    6968:	add	x16, x16, #0x2b0
    696c:	br	x17

0000000000006970 <__ashlti3@plt>:
    6970:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6974:	ldr	x17, [x16, #696]
    6978:	add	x16, x16, #0x2b8
    697c:	br	x17

0000000000006980 <abort@plt>:
    6980:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6984:	ldr	x17, [x16, #704]
    6988:	add	x16, x16, #0x2c0
    698c:	br	x17

0000000000006990 <bsearch@plt>:
    6990:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6994:	ldr	x17, [x16, #712]
    6998:	add	x16, x16, #0x2c8
    699c:	br	x17

00000000000069a0 <getenv@plt>:
    69a0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    69a4:	ldr	x17, [x16, #720]
    69a8:	add	x16, x16, #0x2d0
    69ac:	br	x17

00000000000069b0 <__asan_backtrace_initialize@plt>:
    69b0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16, #728]
    69b8:	add	x16, x16, #0x2d8
    69bc:	br	x17

00000000000069c0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    69c0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #736]
    69c8:	add	x16, x16, #0x2e0
    69cc:	br	x17

00000000000069d0 <__asan_internal_memcmp@plt>:
    69d0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #744]
    69d8:	add	x16, x16, #0x2e8
    69dc:	br	x17

00000000000069e0 <sysconf@plt>:
    69e0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #752]
    69e8:	add	x16, x16, #0x2f0
    69ec:	br	x17

00000000000069f0 <__extendsftf2@plt>:
    69f0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #760]
    69f8:	add	x16, x16, #0x2f8
    69fc:	br	x17

0000000000006a00 <pthread_self@plt>:
    6a00:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #768]
    6a08:	add	x16, x16, #0x300
    6a0c:	br	x17

0000000000006a10 <getuid@plt>:
    6a10:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #776]
    6a18:	add	x16, x16, #0x308
    6a1c:	br	x17

0000000000006a20 <getpagesize@plt>:
    6a20:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #784]
    6a28:	add	x16, x16, #0x310
    6a2c:	br	x17

0000000000006a30 <__asan_backtrace_vector_finish@plt>:
    6a30:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #792]
    6a38:	add	x16, x16, #0x318
    6a3c:	br	x17

0000000000006a40 <__asan_backtrace_close@plt>:
    6a40:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6a44:	ldr	x17, [x16, #800]
    6a48:	add	x16, x16, #0x320
    6a4c:	br	x17

0000000000006a50 <__asan_cplus_demangle_mangled_name@plt>:
    6a50:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6a54:	ldr	x17, [x16, #808]
    6a58:	add	x16, x16, #0x328
    6a5c:	br	x17

0000000000006a60 <__ubsan_default_options@plt>:
    6a60:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6a64:	ldr	x17, [x16, #816]
    6a68:	add	x16, x16, #0x330
    6a6c:	br	x17

0000000000006a70 <getrlimit@plt>:
    6a70:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6a74:	ldr	x17, [x16, #824]
    6a78:	add	x16, x16, #0x338
    6a7c:	br	x17

0000000000006a80 <sigaltstack@plt>:
    6a80:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6a84:	ldr	x17, [x16, #832]
    6a88:	add	x16, x16, #0x340
    6a8c:	br	x17

0000000000006a90 <fcntl@plt>:
    6a90:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6a94:	ldr	x17, [x16, #840]
    6a98:	add	x16, x16, #0x348
    6a9c:	br	x17

0000000000006aa0 <__gmon_start__@plt>:
    6aa0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6aa4:	ldr	x17, [x16, #848]
    6aa8:	add	x16, x16, #0x350
    6aac:	br	x17

0000000000006ab0 <sigaction@plt>:
    6ab0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6ab4:	ldr	x17, [x16, #856]
    6ab8:	add	x16, x16, #0x358
    6abc:	br	x17

0000000000006ac0 <__sanitizer_set_report_path@plt>:
    6ac0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6ac4:	ldr	x17, [x16, #864]
    6ac8:	add	x16, x16, #0x360
    6acc:	br	x17

0000000000006ad0 <__asan_cplus_demangle_v3_callback@plt>:
    6ad0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6ad4:	ldr	x17, [x16, #872]
    6ad8:	add	x16, x16, #0x368
    6adc:	br	x17

0000000000006ae0 <__sanitizer_print_memory_profile@plt>:
    6ae0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6ae4:	ldr	x17, [x16, #880]
    6ae8:	add	x16, x16, #0x370
    6aec:	br	x17

0000000000006af0 <__asan_cplus_demangle_fill_dtor@plt>:
    6af0:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6af4:	ldr	x17, [x16, #888]
    6af8:	add	x16, x16, #0x378
    6afc:	br	x17

0000000000006b00 <__sancov_default_options@plt>:
    6b00:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6b04:	ldr	x17, [x16, #896]
    6b08:	add	x16, x16, #0x380
    6b0c:	br	x17

0000000000006b10 <__asan_backtrace_open@plt>:
    6b10:	adrp	x16, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6b14:	ldr	x17, [x16, #904]
    6b18:	add	x16, x16, #0x388
    6b1c:	br	x17

Disassembly of section .text:

0000000000006b20 <__ubsan_default_options@@Base-0x1534>:
    6b20:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    6b24:	ldr	x0, [x0, #4032]
    6b28:	cbz	x0, 6b30 <__asan_backtrace_open@plt+0x20>
    6b2c:	b	6aa0 <__gmon_start__@plt>
    6b30:	ret
    6b34:	adrp	x0, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6b38:	add	x0, x0, #0xd80
    6b3c:	adrp	x1, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6b40:	add	x1, x1, #0xd80
    6b44:	cmp	x1, x0
    6b48:	b.eq	6b60 <__asan_backtrace_open@plt+0x50>  // b.none
    6b4c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    6b50:	ldr	x1, [x1, #4000]
    6b54:	cbz	x1, 6b60 <__asan_backtrace_open@plt+0x50>
    6b58:	mov	x16, x1
    6b5c:	br	x16
    6b60:	ret
    6b64:	adrp	x0, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6b68:	add	x0, x0, #0xd80
    6b6c:	adrp	x1, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6b70:	add	x1, x1, #0xd80
    6b74:	sub	x1, x1, x0
    6b78:	mov	x2, #0x2                   	// #2
    6b7c:	asr	x1, x1, #3
    6b80:	sdiv	x1, x1, x2
    6b84:	cbz	x1, 6b9c <__asan_backtrace_open@plt+0x8c>
    6b88:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    6b8c:	ldr	x2, [x2, #4040]
    6b90:	cbz	x2, 6b9c <__asan_backtrace_open@plt+0x8c>
    6b94:	mov	x16, x2
    6b98:	br	x16
    6b9c:	ret
    6ba0:	adrp	x0, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6ba4:	ldrb	w1, [x0, #3456]
    6ba8:	cbnz	w1, 6bec <__asan_backtrace_open@plt+0xdc>
    6bac:	stp	x29, x30, [sp, #-32]!
    6bb0:	mov	x29, sp
    6bb4:	str	x19, [sp, #16]
    6bb8:	mov	x19, x0
    6bbc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    6bc0:	ldr	x0, [x0, #3864]
    6bc4:	cbz	x0, 6bd4 <__asan_backtrace_open@plt+0xc4>
    6bc8:	adrp	x0, 4e000 <_Unwind_Backtrace@GCC_3.3>
    6bcc:	ldr	x0, [x0, #912]
    6bd0:	bl	6640 <__cxa_finalize@plt>
    6bd4:	bl	6b34 <__asan_backtrace_open@plt+0x24>
    6bd8:	mov	w0, #0x1                   	// #1
    6bdc:	strb	w0, [x19, #3456]
    6be0:	ldr	x19, [sp, #16]
    6be4:	ldp	x29, x30, [sp], #32
    6be8:	ret
    6bec:	ret
    6bf0:	b	6b64 <__asan_backtrace_open@plt+0x54>
    6bf4:	cmp	w0, #0x19
    6bf8:	b.hi	6d34 <__asan_backtrace_open@plt+0x224>  // b.pmore
    6bfc:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c00:	add	x1, x1, #0x884
    6c04:	ldrb	w0, [x1, w0, uxtw]
    6c08:	adr	x1, 6c14 <__asan_backtrace_open@plt+0x104>
    6c0c:	add	x0, x1, w0, sxtb #2
    6c10:	br	x0
    6c14:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c18:	add	x0, x0, #0x6df
    6c1c:	ret
    6c20:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c24:	add	x0, x0, #0x509
    6c28:	ret
    6c2c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c30:	add	x0, x0, #0x520
    6c34:	ret
    6c38:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c3c:	add	x0, x0, #0x53b
    6c40:	ret
    6c44:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c48:	add	x0, x0, #0x539
    6c4c:	ret
    6c50:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c54:	add	x0, x0, #0x553
    6c58:	ret
    6c5c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c60:	add	x0, x0, #0x56a
    6c64:	ret
    6c68:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c6c:	add	x0, x0, #0x57f
    6c70:	ret
    6c74:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c78:	add	x0, x0, #0x593
    6c7c:	ret
    6c80:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c84:	add	x0, x0, #0x5b8
    6c88:	ret
    6c8c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c90:	add	x0, x0, #0x5db
    6c94:	ret
    6c98:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6c9c:	add	x0, x0, #0x5ee
    6ca0:	ret
    6ca4:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6ca8:	add	x0, x0, #0x605
    6cac:	ret
    6cb0:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6cb4:	add	x0, x0, #0x619
    6cb8:	ret
    6cbc:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6cc0:	add	x0, x0, #0x62a
    6cc4:	ret
    6cc8:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6ccc:	add	x0, x0, #0x639
    6cd0:	ret
    6cd4:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6cd8:	add	x0, x0, #0x650
    6cdc:	ret
    6ce0:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6ce4:	add	x0, x0, #0x664
    6ce8:	ret
    6cec:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6cf0:	add	x0, x0, #0x676
    6cf4:	ret
    6cf8:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6cfc:	add	x0, x0, #0x688
    6d00:	ret
    6d04:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6d08:	add	x0, x0, #0x69f
    6d0c:	ret
    6d10:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6d14:	add	x0, x0, #0x6b3
    6d18:	ret
    6d1c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6d20:	add	x0, x0, #0x6c9
    6d24:	ret
    6d28:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6d2c:	add	x0, x0, #0x4d8
    6d30:	ret
    6d34:	str	x30, [sp, #-16]!
    6d38:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6d3c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6d40:	add	x2, x2, #0x6f0
    6d44:	add	x0, x0, #0x715
    6d48:	mov	x4, #0x0                   	// #0
    6d4c:	mov	x3, #0x0                   	// #0
    6d50:	mov	w1, #0x39                  	// #57
    6d54:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    6d58:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6d5c:	add	x0, x0, #0x4e5
    6d60:	ret
    6d64:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6d68:	add	x0, x0, #0x4f8
    6d6c:	ret
    6d70:	mov	w5, w2
    6d74:	lsr	x4, x2, #32
    6d78:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6d7c:	lsr	x2, x3, #32
    6d80:	add	x1, x1, #0x742
    6d84:	b	16a9c <OnPrint@@Base+0x390>
    6d88:	stp	x19, x20, [sp, #-96]!
    6d8c:	mov	x19, x0
    6d90:	mov	x20, x1
    6d94:	stp	x21, x22, [sp, #16]
    6d98:	adrp	x22, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6d9c:	mov	x21, x2
    6da0:	add	x22, x22, #0x8a0
    6da4:	stp	x23, x24, [sp, #32]
    6da8:	adrp	x23, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6dac:	add	x23, x23, #0x76b
    6db0:	stp	x25, x30, [sp, #48]
    6db4:	add	x25, sp, #0x40
    6db8:	ldrb	w2, [x20]
    6dbc:	cbz	w2, 6eb0 <__asan_backtrace_open@plt+0x3a0>
    6dc0:	add	x24, x20, #0x1
    6dc4:	cmp	w2, #0x25
    6dc8:	b.eq	6de8 <__asan_backtrace_open@plt+0x2d8>  // b.none
    6dcc:	mov	x24, x20
    6dd0:	mov	x0, x19
    6dd4:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6dd8:	add	x1, x1, #0x755
    6ddc:	bl	16a9c <OnPrint@@Base+0x390>
    6de0:	add	x20, x24, #0x1
    6de4:	b	6db8 <__asan_backtrace_open@plt+0x2a8>
    6de8:	ldrb	w0, [x20, #1]
    6dec:	ubfiz	x0, x0, #5, #8
    6df0:	sub	x0, x0, #0x600
    6df4:	add	x20, x21, x0
    6df8:	ldr	w0, [x21, x0]
    6dfc:	cmp	w0, #0x5
    6e00:	b.hi	6de0 <__asan_backtrace_open@plt+0x2d0>  // b.pmore
    6e04:	ldrb	w0, [x22, w0, uxtw]
    6e08:	adr	x1, 6e14 <__asan_backtrace_open@plt+0x304>
    6e0c:	add	x0, x1, w0, sxtb #2
    6e10:	br	x0
    6e14:	ldr	x2, [x20, #16]
    6e18:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6e1c:	add	x1, x1, #0x85d
    6e20:	b	6e3c <__asan_backtrace_open@plt+0x32c>
    6e24:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
    6e28:	ldr	x1, [x20, #16]
    6e2c:	bl	1b648 <__sanitizer_symbolize_global@@Base+0x3060>
    6e30:	mov	x2, x0
    6e34:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6e38:	add	x1, x1, #0x758
    6e3c:	mov	x0, x19
    6e40:	bl	16a9c <OnPrint@@Base+0x390>
    6e44:	b	6de0 <__asan_backtrace_open@plt+0x2d0>
    6e48:	ldp	x2, x3, [x20, #16]
    6e4c:	cmp	x2, #0x0
    6e50:	cinc	x0, x3, lt  // lt = tstop
    6e54:	cbnz	x0, 6e78 <__asan_backtrace_open@plt+0x368>
    6e58:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6e5c:	add	x1, x1, #0x75d
    6e60:	b	6e3c <__asan_backtrace_open@plt+0x32c>
    6e64:	ldp	x2, x3, [x20, #16]
    6e68:	cbnz	x3, 6e78 <__asan_backtrace_open@plt+0x368>
    6e6c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6e70:	add	x1, x1, #0x762
    6e74:	b	6e3c <__asan_backtrace_open@plt+0x32c>
    6e78:	mov	x0, x19
    6e7c:	bl	6d70 <__asan_backtrace_open@plt+0x260>
    6e80:	b	6de0 <__asan_backtrace_open@plt+0x2d0>
    6e84:	ldr	q0, [x20, #16]
    6e88:	mov	x0, x25
    6e8c:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    6e90:	mov	x1, #0x20                  	// #32
    6e94:	add	x2, x2, #0x767
    6e98:	bl	67d0 <snprintf@plt>
    6e9c:	mov	x2, x25
    6ea0:	b	6e18 <__asan_backtrace_open@plt+0x308>
    6ea4:	mov	x1, x23
    6ea8:	ldr	x2, [x20, #16]
    6eac:	b	6e3c <__asan_backtrace_open@plt+0x32c>
    6eb0:	ldp	x21, x22, [sp, #16]
    6eb4:	ldp	x23, x24, [sp, #32]
    6eb8:	ldp	x25, x30, [sp, #48]
    6ebc:	ldp	x19, x20, [sp], #96
    6ec0:	ret
    6ec4:	stp	x19, x20, [sp, #-240]!
    6ec8:	mov	x20, #0x0                   	// #0
    6ecc:	mov	x19, #0x0                   	// #0
    6ed0:	stp	x27, x28, [sp, #64]
    6ed4:	mov	x27, x0
    6ed8:	mov	w0, #0x58                  	// #88
    6edc:	stp	x25, x26, [sp, #48]
    6ee0:	add	x28, x1, #0x28
    6ee4:	umull	x26, w2, w0
    6ee8:	stp	x21, x22, [sp, #16]
    6eec:	mov	x21, x1
    6ef0:	add	x22, sp, #0x78
    6ef4:	stp	x23, x24, [sp, #32]
    6ef8:	add	x23, sp, #0xa0
    6efc:	add	x24, sp, #0xc8
    6f00:	str	x30, [sp, #80]
    6f04:	cmp	x20, x26
    6f08:	b.eq	6fa4 <__asan_backtrace_open@plt+0x494>  // b.none
    6f0c:	add	x2, x28, x20
    6f10:	add	x25, x21, x20
    6f14:	ldp	x0, x1, [x2]
    6f18:	stp	x0, x1, [x22]
    6f1c:	ldp	x0, x1, [x2, #16]
    6f20:	stp	x0, x1, [x22, #16]
    6f24:	ldr	x0, [x2, #32]
    6f28:	str	x0, [x22, #32]
    6f2c:	mov	x0, x22
    6f30:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    6f34:	cmp	x0, x27
    6f38:	b.ls	6f44 <__asan_backtrace_open@plt+0x434>  // b.plast
    6f3c:	cbnz	x19, 6f4c <__asan_backtrace_open@plt+0x43c>
    6f40:	mov	x19, x25
    6f44:	add	x20, x20, #0x58
    6f48:	b	6f04 <__asan_backtrace_open@plt+0x3f4>
    6f4c:	ldp	x0, x1, [x19]
    6f50:	stp	x0, x1, [x23]
    6f54:	ldp	x0, x1, [x19, #16]
    6f58:	stp	x0, x1, [x23, #16]
    6f5c:	ldr	x0, [x19, #32]
    6f60:	str	x0, [x23, #32]
    6f64:	mov	x0, x23
    6f68:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    6f6c:	mov	x1, x0
    6f70:	ldp	x2, x3, [x25]
    6f74:	stp	x2, x3, [x24]
    6f78:	ldp	x2, x3, [x25, #16]
    6f7c:	stp	x2, x3, [x24, #16]
    6f80:	ldr	x0, [x25, #32]
    6f84:	str	x0, [x24, #32]
    6f88:	mov	x0, x24
    6f8c:	str	x1, [sp, #104]
    6f90:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    6f94:	ldr	x1, [sp, #104]
    6f98:	cmp	x1, x0
    6f9c:	b.hi	6f40 <__asan_backtrace_open@plt+0x430>  // b.pmore
    6fa0:	b	6f44 <__asan_backtrace_open@plt+0x434>
    6fa4:	mov	x0, x19
    6fa8:	ldp	x21, x22, [sp, #16]
    6fac:	ldp	x23, x24, [sp, #32]
    6fb0:	ldp	x25, x26, [sp, #48]
    6fb4:	ldp	x27, x28, [sp, #64]
    6fb8:	ldr	x30, [sp, #80]
    6fbc:	ldp	x19, x20, [sp], #240
    6fc0:	ret
    6fc4:	stp	x19, x20, [sp, #-80]!
    6fc8:	mov	x19, x0
    6fcc:	mov	x20, x1
    6fd0:	stp	x21, x22, [sp, #16]
    6fd4:	mov	x21, x2
    6fd8:	mov	x22, x3
    6fdc:	stp	x23, x24, [sp, #32]
    6fe0:	mov	x23, x4
    6fe4:	ands	w24, w5, #0xff
    6fe8:	str	x30, [sp, #48]
    6fec:	stp	xzr, xzr, [sp, #64]
    6ff0:	b.eq	7004 <__asan_backtrace_open@plt+0x4f4>  // b.none
    6ff4:	add	x2, sp, #0x48
    6ff8:	add	x1, sp, #0x40
    6ffc:	mov	w0, #0x0                   	// #0
    7000:	bl	13fb0 <__sanitizer_set_report_fd@@Base+0x3710>
    7004:	ldp	x5, x6, [sp, #64]
    7008:	mov	w7, w24
    700c:	mov	x4, x23
    7010:	mov	x3, x22
    7014:	mov	x2, x21
    7018:	mov	w1, w20
    701c:	mov	x0, x19
    7020:	bl	181f0 <OnPrint@@Base+0x1ae4>
    7024:	ldp	x21, x22, [sp, #16]
    7028:	ldp	x23, x24, [sp, #32]
    702c:	ldr	x30, [sp, #48]
    7030:	ldp	x19, x20, [sp], #80
    7034:	ret
    7038:	mov	x2, x0
    703c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    7040:	ldr	x0, [x0, #3816]
    7044:	ldrb	w0, [x0, #1]
    7048:	cbz	w0, 7098 <__asan_backtrace_open@plt+0x588>
    704c:	sub	sp, sp, #0x830
    7050:	mov	x3, x1
    7054:	add	x0, sp, #0x28
    7058:	mov	x4, #0x0                   	// #0
    705c:	mov	x1, #0x100                 	// #256
    7060:	stp	x0, xzr, [sp, #24]
    7064:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    7068:	ldr	x0, [x0, #4056]
    706c:	stp	x19, x30, [sp]
    7070:	add	x19, sp, #0x18
    7074:	str	xzr, [sp, #2088]
    7078:	ldrb	w5, [x0, #33]
    707c:	mov	x0, x19
    7080:	bl	6fc4 <__asan_backtrace_open@plt+0x4b4>
    7084:	mov	x0, x19
    7088:	bl	182d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
    708c:	ldp	x19, x30, [sp]
    7090:	add	sp, sp, #0x830
    7094:	ret
    7098:	ret
    709c:	stp	x19, x30, [sp, #-16]!
    70a0:	mov	x19, x0
    70a4:	bl	b6f0 <__ubsan_handle_cfi_bad_type@@Base+0x4f0>
    70a8:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
    70ac:	mov	x1, x19
    70b0:	ldp	x19, x30, [sp], #16
    70b4:	b	1b89c <__sanitizer_symbolize_global@@Base+0x32b4>
    70b8:	str	x30, [sp, #-80]!
    70bc:	add	x1, x1, #0x4
    70c0:	str	wzr, [sp, #48]
    70c4:	str	x1, [sp, #64]
    70c8:	add	x1, sp, #0x10
    70cc:	ldp	x2, x3, [sp, #48]
    70d0:	stp	x2, x3, [sp, #16]
    70d4:	ldp	x2, x3, [sp, #64]
    70d8:	stp	x2, x3, [sp, #32]
    70dc:	bl	7e0c <__asan_backtrace_open@plt+0x12fc>
    70e0:	ldr	x30, [sp], #80
    70e4:	ret
    70e8:	stp	x19, x20, [sp, #-96]!
    70ec:	mov	x19, x0
    70f0:	ldr	x3, [x1]
    70f4:	add	x20, sp, #0x20
    70f8:	ldrh	w2, [x3]
    70fc:	str	x30, [sp, #16]
    7100:	cbnz	w2, 7154 <__asan_backtrace_open@plt+0x644>
    7104:	ldrh	w0, [x3, #2]
    7108:	tbz	w0, #0, 7144 <__asan_backtrace_open@plt+0x634>
    710c:	mov	x0, x1
    7110:	bl	bc94 <__ubsan_get_current_report_data@@Base+0x4cc>
    7114:	mov	w2, #0x3                   	// #3
    7118:	str	w2, [sp, #64]
    711c:	ldp	x2, x3, [sp, #64]
    7120:	stp	x2, x3, [sp, #32]
    7124:	stp	x0, x1, [sp, #48]
    7128:	mov	x1, x20
    712c:	mov	x0, x19
    7130:	bl	7e0c <__asan_backtrace_open@plt+0x12fc>
    7134:	mov	x0, x19
    7138:	ldr	x30, [sp, #16]
    713c:	ldp	x19, x20, [sp], #96
    7140:	ret
    7144:	mov	x0, x1
    7148:	bl	bd60 <__ubsan_get_current_report_data@@Base+0x598>
    714c:	mov	w2, #0x2                   	// #2
    7150:	b	7118 <__asan_backtrace_open@plt+0x608>
    7154:	cmp	w2, #0x1
    7158:	b.ne	7180 <__asan_backtrace_open@plt+0x670>  // b.any
    715c:	mov	x0, x1
    7160:	bl	be5c <__ubsan_get_current_report_data@@Base+0x694>
    7164:	mov	w0, #0x4                   	// #4
    7168:	str	w0, [sp, #64]
    716c:	str	q0, [sp, #80]
    7170:	ldp	x0, x1, [sp, #64]
    7174:	stp	x0, x1, [sp, #32]
    7178:	ldp	x0, x1, [sp, #80]
    717c:	b	7124 <__asan_backtrace_open@plt+0x614>
    7180:	str	wzr, [sp, #64]
    7184:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7188:	add	x1, x1, #0x76e
    718c:	str	x1, [sp, #80]
    7190:	ldp	x2, x3, [sp, #64]
    7194:	stp	x2, x3, [sp, #32]
    7198:	mov	x1, x20
    719c:	ldp	x2, x3, [sp, #80]
    71a0:	stp	x2, x3, [sp, #48]
    71a4:	b	7130 <__asan_backtrace_open@plt+0x620>
    71a8:	b	b6f0 <__ubsan_handle_cfi_bad_type@@Base+0x4f0>
    71ac:	stp	x19, x20, [sp, #-48]!
    71b0:	mov	x19, x0
    71b4:	mov	x20, x2
    71b8:	stp	x21, x22, [sp, #16]
    71bc:	mov	x21, x1
    71c0:	mov	w22, w3
    71c4:	str	x30, [sp, #32]
    71c8:	bl	b6f0 <__ubsan_handle_cfi_bad_type@@Base+0x4f0>
    71cc:	add	x0, x19, #0x1
    71d0:	bl	18790 <__sanitizer_symbolize_global@@Base+0x1a8>
    71d4:	ldp	x0, x1, [x21]
    71d8:	stp	x0, x1, [x19, #8]
    71dc:	ldp	x2, x3, [x20]
    71e0:	stp	x2, x3, [x19, #32]
    71e4:	ldr	x0, [x21, #16]
    71e8:	ldp	x2, x3, [x20, #16]
    71ec:	stp	x2, x3, [x19, #48]
    71f0:	ldr	x1, [x20, #32]
    71f4:	ldr	x30, [sp, #32]
    71f8:	str	x0, [x19, #24]
    71fc:	str	x1, [x19, #64]
    7200:	str	w22, [x19, #72]
    7204:	ldp	x21, x22, [sp, #16]
    7208:	ldp	x19, x20, [sp], #48
    720c:	ret
    7210:	stp	x19, x20, [sp, #-176]!
    7214:	mov	x19, x0
    7218:	ldr	x1, [x0, #24]
    721c:	stp	x21, x22, [sp, #16]
    7220:	adrp	x21, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    7224:	ldr	x0, [x0, #16]
    7228:	stp	x23, x24, [sp, #32]
    722c:	str	x30, [sp, #48]
    7230:	bl	7038 <__asan_backtrace_open@plt+0x528>
    7234:	ldr	x1, [x19, #64]
    7238:	str	x1, [sp, #104]
    723c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    7240:	ldr	w0, [x19, #72]
    7244:	ldp	x2, x3, [x19, #32]
    7248:	stp	x2, x3, [sp, #72]
    724c:	ldr	x1, [x1, #4056]
    7250:	ldp	x2, x3, [x19, #48]
    7254:	stp	x2, x3, [sp, #88]
    7258:	ldrb	w1, [x1, #60]
    725c:	cbz	w1, 72dc <__asan_backtrace_open@plt+0x7cc>
    7260:	ldr	x1, [x21, #3816]
    7264:	ldrb	w1, [x1, #16]
    7268:	cmp	w1, #0x0
    726c:	csel	w0, w0, wzr, ne  // ne = any
    7270:	bl	6bf4 <__asan_backtrace_open@plt+0xe4>
    7274:	mov	x20, x0
    7278:	ldr	w0, [sp, #72]
    727c:	cmp	w0, #0x1
    7280:	b.ne	72ec <__asan_backtrace_open@plt+0x7dc>  // b.any
    7284:	add	x0, sp, #0x48
    7288:	bl	7d64 <__asan_backtrace_open@plt+0x1254>
    728c:	mov	x22, x0
    7290:	mov	x24, x1
    7294:	cbz	x0, 7318 <__asan_backtrace_open@plt+0x808>
    7298:	add	x23, sp, #0x70
    729c:	mov	x0, x23
    72a0:	bl	1aa20 <__sanitizer_symbolize_global@@Base+0x2438>
    72a4:	mov	x0, x22
    72a8:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
    72ac:	stp	x0, x24, [sp, #160]
    72b0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    72b4:	add	x0, x0, #0x6df
    72b8:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
    72bc:	str	x0, [sp, #144]
    72c0:	bl	b668 <__ubsan_handle_cfi_bad_type@@Base+0x468>
    72c4:	mov	x2, x0
    72c8:	mov	x1, x23
    72cc:	mov	x0, x20
    72d0:	bl	18878 <__sanitizer_symbolize_global@@Base+0x290>
    72d4:	mov	x0, x23
    72d8:	bl	1aa44 <__sanitizer_symbolize_global@@Base+0x245c>
    72dc:	ldr	x21, [x21, #3816]
    72e0:	ldrb	w0, [x21]
    72e4:	cbz	w0, 732c <__asan_backtrace_open@plt+0x81c>
    72e8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    72ec:	cmp	w0, #0x3
    72f0:	b.ne	7318 <__asan_backtrace_open@plt+0x808>  // b.any
    72f4:	add	x0, sp, #0x48
    72f8:	bl	7dd4 <__asan_backtrace_open@plt+0x12c4>
    72fc:	mov	x22, x0
    7300:	bl	b668 <__ubsan_handle_cfi_bad_type@@Base+0x468>
    7304:	add	x1, x22, #0x8
    7308:	mov	x2, x0
    730c:	mov	x0, x20
    7310:	bl	18878 <__sanitizer_symbolize_global@@Base+0x290>
    7314:	b	72dc <__asan_backtrace_open@plt+0x7cc>
    7318:	bl	b668 <__ubsan_handle_cfi_bad_type@@Base+0x468>
    731c:	mov	x1, x0
    7320:	mov	x0, x20
    7324:	bl	e390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
    7328:	b	72dc <__asan_backtrace_open@plt+0x7cc>
    732c:	add	x0, x19, #0x1
    7330:	bl	18824 <__sanitizer_symbolize_global@@Base+0x23c>
    7334:	ldp	x21, x22, [sp, #16]
    7338:	ldp	x23, x24, [sp, #32]
    733c:	ldr	x30, [sp, #48]
    7340:	ldp	x19, x20, [sp], #176
    7344:	ret
    7348:	stp	x19, x20, [sp, #-32]!
    734c:	adrp	x20, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    7350:	ldr	x4, [x20, #3520]
    7354:	str	x30, [sp, #16]
    7358:	cbz	x4, 7378 <__asan_backtrace_open@plt+0x868>
    735c:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7360:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7364:	add	x2, x2, #0x778
    7368:	add	x0, x0, #0x715
    736c:	mov	x3, #0x0                   	// #0
    7370:	mov	w1, #0x18d                 	// #397
    7374:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    7378:	add	x19, x20, #0xdc0
    737c:	mov	w2, #0x1b                  	// #27
    7380:	add	x19, x19, #0x40
    7384:	adrp	x1, 4e000 <_Unwind_Backtrace@GCC_3.3>
    7388:	mov	x0, x19
    738c:	add	x1, x1, #0x398
    7390:	bl	1a780 <__sanitizer_symbolize_global@@Base+0x2198>
    7394:	str	x19, [x20, #3520]
    7398:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    739c:	ldr	x30, [sp, #16]
    73a0:	ldr	x0, [x0, #3816]
    73a4:	ldr	x1, [x0, #8]
    73a8:	mov	x0, x19
    73ac:	ldp	x19, x20, [sp], #32
    73b0:	b	1a7e8 <__sanitizer_symbolize_global@@Base+0x2200>
    73b4:	stp	x19, x30, [sp, #-32]!
    73b8:	mov	x19, x0
    73bc:	bl	b6f0 <__ubsan_handle_cfi_bad_type@@Base+0x4f0>
    73c0:	adrp	x0, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    73c4:	ldr	x0, [x0, #3520]
    73c8:	cbnz	x0, 73ec <__asan_backtrace_open@plt+0x8dc>
    73cc:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    73d0:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    73d4:	add	x2, x2, #0x79b
    73d8:	add	x0, x0, #0x715
    73dc:	mov	x4, #0x0                   	// #0
    73e0:	mov	x3, #0x0                   	// #0
    73e4:	mov	w1, #0x195                 	// #405
    73e8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    73ec:	add	x3, sp, #0x18
    73f0:	mov	x1, x19
    73f4:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    73f8:	add	x2, x2, #0x8c8
    73fc:	bl	1a374 <__sanitizer_symbolize_global@@Base+0x1d8c>
    7400:	ldp	x19, x30, [sp], #32
    7404:	ret
    7408:	stp	x19, x20, [sp, #-96]!
    740c:	adrp	x20, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    7410:	mov	w19, w0
    7414:	stp	x21, x22, [sp, #16]
    7418:	mov	x21, x1
    741c:	mov	x22, x2
    7420:	stp	x23, x24, [sp, #32]
    7424:	str	x30, [sp, #48]
    7428:	bl	b6f0 <__ubsan_handle_cfi_bad_type@@Base+0x4f0>
    742c:	ldr	x0, [x20, #3520]
    7430:	cbnz	x0, 7454 <__asan_backtrace_open@plt+0x944>
    7434:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7438:	add	x2, x2, #0x79b
    743c:	mov	x4, #0x0                   	// #0
    7440:	mov	x3, #0x0                   	// #0
    7444:	mov	w1, #0x19c                 	// #412
    7448:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    744c:	add	x0, x0, #0x715
    7450:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    7454:	cmp	w19, #0x19
    7458:	b.hi	761c <__asan_backtrace_open@plt+0xb0c>  // b.pmore
    745c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7460:	add	x1, x1, #0x8a8
    7464:	ldrb	w1, [x1, w19, uxtw]
    7468:	adr	x2, 7474 <__asan_backtrace_open@plt+0x964>
    746c:	add	x1, x2, w1, sxtb #2
    7470:	br	x1
    7474:	adrp	x19, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    7478:	add	x19, x19, #0x295
    747c:	mov	x1, x19
    7480:	bl	1a2dc <__sanitizer_symbolize_global@@Base+0x1cf4>
    7484:	ands	w23, w0, #0xff
    7488:	b.eq	7668 <__asan_backtrace_open@plt+0xb58>  // b.none
    748c:	str	xzr, [sp, #72]
    7490:	add	x24, sp, #0x48
    7494:	cbnz	x22, 764c <__asan_backtrace_open@plt+0xb3c>
    7498:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
    749c:	str	xzr, [sp, #80]
    74a0:	add	x3, sp, #0x58
    74a4:	add	x2, sp, #0x50
    74a8:	mov	x1, x21
    74ac:	bl	1b81c <__sanitizer_symbolize_global@@Base+0x3234>
    74b0:	tst	w0, #0xff
    74b4:	b.ne	7680 <__asan_backtrace_open@plt+0xb70>  // b.any
    74b8:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
    74bc:	mov	x1, x21
    74c0:	bl	1b89c <__sanitizer_symbolize_global@@Base+0x32b4>
    74c4:	mov	x21, x0
    74c8:	mov	x3, x24
    74cc:	ldr	x0, [x20, #3520]
    74d0:	mov	x2, x19
    74d4:	ldr	x1, [x21, #40]
    74d8:	bl	1a374 <__sanitizer_symbolize_global@@Base+0x1d8c>
    74dc:	ands	w23, w0, #0xff
    74e0:	b.ne	74fc <__asan_backtrace_open@plt+0x9ec>  // b.any
    74e4:	ldr	x0, [x20, #3520]
    74e8:	mov	x3, x24
    74ec:	ldr	x1, [x21, #56]
    74f0:	mov	x2, x19
    74f4:	bl	1a374 <__sanitizer_symbolize_global@@Base+0x1d8c>
    74f8:	and	w23, w0, #0xff
    74fc:	mov	x0, x21
    7500:	bl	1ab00 <__sanitizer_symbolize_global@@Base+0x2518>
    7504:	b	7668 <__asan_backtrace_open@plt+0xb58>
    7508:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    750c:	add	x19, x19, #0xd32
    7510:	b	747c <__asan_backtrace_open@plt+0x96c>
    7514:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7518:	add	x19, x19, #0x52d
    751c:	b	747c <__asan_backtrace_open@plt+0x96c>
    7520:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7524:	add	x19, x19, #0x53b
    7528:	b	747c <__asan_backtrace_open@plt+0x96c>
    752c:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7530:	add	x19, x19, #0x539
    7534:	b	747c <__asan_backtrace_open@plt+0x96c>
    7538:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    753c:	add	x19, x19, #0x553
    7540:	b	747c <__asan_backtrace_open@plt+0x96c>
    7544:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7548:	add	x19, x19, #0x56a
    754c:	b	747c <__asan_backtrace_open@plt+0x96c>
    7550:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7554:	add	x19, x19, #0x57f
    7558:	b	747c <__asan_backtrace_open@plt+0x96c>
    755c:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7560:	add	x19, x19, #0x593
    7564:	b	747c <__asan_backtrace_open@plt+0x96c>
    7568:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    756c:	add	x19, x19, #0x5b8
    7570:	b	747c <__asan_backtrace_open@plt+0x96c>
    7574:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7578:	add	x19, x19, #0x5e3
    757c:	b	747c <__asan_backtrace_open@plt+0x96c>
    7580:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7584:	add	x19, x19, #0x5f6
    7588:	b	747c <__asan_backtrace_open@plt+0x96c>
    758c:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7590:	add	x19, x19, #0x7c4
    7594:	b	747c <__asan_backtrace_open@plt+0x96c>
    7598:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    759c:	add	x19, x19, #0x7cb
    75a0:	b	747c <__asan_backtrace_open@plt+0x96c>
    75a4:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    75a8:	add	x19, x19, #0x632
    75ac:	b	747c <__asan_backtrace_open@plt+0x96c>
    75b0:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    75b4:	add	x19, x19, #0x7d7
    75b8:	b	747c <__asan_backtrace_open@plt+0x96c>
    75bc:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    75c0:	add	x19, x19, #0x650
    75c4:	b	747c <__asan_backtrace_open@plt+0x96c>
    75c8:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    75cc:	add	x19, x19, #0x7e1
    75d0:	b	747c <__asan_backtrace_open@plt+0x96c>
    75d4:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    75d8:	add	x19, x19, #0x7e6
    75dc:	b	747c <__asan_backtrace_open@plt+0x96c>
    75e0:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    75e4:	add	x19, x19, #0x7eb
    75e8:	b	747c <__asan_backtrace_open@plt+0x96c>
    75ec:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    75f0:	add	x19, x19, #0x7f4
    75f4:	b	747c <__asan_backtrace_open@plt+0x96c>
    75f8:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    75fc:	add	x19, x19, #0x7fc
    7600:	b	747c <__asan_backtrace_open@plt+0x96c>
    7604:	adrp	x19, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    7608:	add	x19, x19, #0x553
    760c:	b	747c <__asan_backtrace_open@plt+0x96c>
    7610:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7614:	add	x19, x19, #0x7b6
    7618:	b	747c <__asan_backtrace_open@plt+0x96c>
    761c:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7620:	mov	x4, #0x0                   	// #0
    7624:	add	x2, x2, #0x6f0
    7628:	mov	x3, #0x0                   	// #0
    762c:	mov	w1, #0x44                  	// #68
    7630:	b	7448 <__asan_backtrace_open@plt+0x938>
    7634:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7638:	add	x19, x19, #0x7ba
    763c:	b	747c <__asan_backtrace_open@plt+0x96c>
    7640:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7644:	add	x19, x19, #0x4f8
    7648:	b	747c <__asan_backtrace_open@plt+0x96c>
    764c:	ldr	x0, [x20, #3520]
    7650:	mov	x3, x24
    7654:	mov	x2, x19
    7658:	mov	x1, x22
    765c:	bl	1a374 <__sanitizer_symbolize_global@@Base+0x1d8c>
    7660:	tst	w0, #0xff
    7664:	b.eq	7498 <__asan_backtrace_open@plt+0x988>  // b.none
    7668:	mov	w0, w23
    766c:	ldp	x21, x22, [sp, #16]
    7670:	ldp	x23, x24, [sp, #32]
    7674:	ldr	x30, [sp, #48]
    7678:	ldp	x19, x20, [sp], #96
    767c:	ret
    7680:	ldr	x1, [sp, #80]
    7684:	cbz	x1, 74b8 <__asan_backtrace_open@plt+0x9a8>
    7688:	ldr	x0, [x20, #3520]
    768c:	mov	x3, x24
    7690:	mov	x2, x19
    7694:	bl	1a374 <__sanitizer_symbolize_global@@Base+0x1d8c>
    7698:	tst	w0, #0xff
    769c:	b.eq	74b8 <__asan_backtrace_open@plt+0x9a8>  // b.none
    76a0:	b	7668 <__asan_backtrace_open@plt+0xb58>
    76a4:	stp	x19, x20, [sp, #-272]!
    76a8:	mov	x19, x0
    76ac:	stp	x21, x22, [sp, #16]
    76b0:	add	x20, sp, #0xa0
    76b4:	stp	x23, x24, [sp, #32]
    76b8:	stp	x25, x26, [sp, #48]
    76bc:	stp	x27, x28, [sp, #64]
    76c0:	add	x27, x0, #0x40
    76c4:	str	x30, [sp, #80]
    76c8:	bl	1883c <__sanitizer_symbolize_global@@Base+0x254>
    76cc:	bl	186fc <__sanitizer_symbolize_global@@Base+0x114>
    76d0:	and	w21, w0, #0xff
    76d4:	mov	x1, #0x400                 	// #1024
    76d8:	mov	x0, x20
    76dc:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
    76e0:	ldr	w0, [x19, #40]
    76e4:	cbnz	w0, 7730 <__asan_backtrace_open@plt+0xc20>
    76e8:	ldr	x1, [x19, #48]
    76ec:	mov	x2, x27
    76f0:	mov	x0, x20
    76f4:	bl	6d88 <__asan_backtrace_open@plt+0x278>
    76f8:	ldr	w0, [x19, #44]
    76fc:	bl	6bf4 <__asan_backtrace_open@plt+0xe4>
    7700:	mov	x1, x0
    7704:	mov	x3, x20
    7708:	mov	x2, x19
    770c:	add	x0, sp, #0xe0
    7710:	bl	b8a4 <__ubsan_get_current_report_data@@Base+0xdc>
    7714:	mov	x1, #0x0                   	// #0
    7718:	mov	x0, x20
    771c:	bl	7e64 <__asan_backtrace_open@plt+0x1354>
    7720:	strb	wzr, [x0]
    7724:	str	xzr, [sp, #184]
    7728:	ldp	x0, x1, [sp, #240]
    772c:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
    7730:	cmp	w21, #0x0
    7734:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    7738:	adrp	x22, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    773c:	add	x0, x0, #0x6df
    7740:	add	x22, x22, #0x80e
    7744:	csel	x22, x22, x0, ne  // ne = any
    7748:	mov	x0, x20
    774c:	mov	x1, x22
    7750:	bl	16a9c <OnPrint@@Base+0x390>
    7754:	ldp	x0, x1, [x19]
    7758:	stp	x0, x1, [sp, #224]
    775c:	ldp	x2, x3, [x19, #16]
    7760:	stp	x2, x3, [sp, #240]
    7764:	ldr	x1, [x19, #32]
    7768:	str	x1, [sp, #256]
    776c:	cmp	w0, #0x3
    7770:	b.hi	77d0 <__asan_backtrace_open@plt+0xcc0>  // b.pmore
    7774:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7778:	add	x1, x1, #0x8c4
    777c:	ldrb	w0, [x1, w0, uxtw]
    7780:	adr	x1, 778c <__asan_backtrace_open@plt+0xc7c>
    7784:	add	x0, x1, w0, sxtb #2
    7788:	br	x0
    778c:	add	x0, sp, #0xe0
    7790:	bl	7d64 <__asan_backtrace_open@plt+0x1254>
    7794:	mov	x2, x1
    7798:	cbnz	x0, 77b0 <__asan_backtrace_open@plt+0xca0>
    779c:	mov	x0, x20
    77a0:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    77a4:	add	x1, x1, #0x76e
    77a8:	bl	16a9c <OnPrint@@Base+0x390>
    77ac:	b	77d0 <__asan_backtrace_open@plt+0xcc0>
    77b0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    77b4:	lsr	x3, x2, #32
    77b8:	ldr	x1, [x1, #4056]
    77bc:	ldrb	w4, [x1, #181]
    77c0:	ldr	x5, [x1, #24]
    77c4:	mov	x1, x0
    77c8:	mov	x0, x20
    77cc:	bl	191a8 <__sanitizer_symbolize_global@@Base+0xbc0>
    77d0:	mov	x0, x20
    77d4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
    77d8:	add	x1, x1, #0x322
    77dc:	bl	16a9c <OnPrint@@Base+0x390>
    77e0:	ldr	w0, [x19, #40]
    77e4:	cbz	w0, 7978 <__asan_backtrace_open@plt+0xe68>
    77e8:	cmp	w0, #0x1
    77ec:	b.eq	79b4 <__asan_backtrace_open@plt+0xea4>  // b.none
    77f0:	ldr	x1, [x19, #48]
    77f4:	mov	x0, x20
    77f8:	mov	x2, x27
    77fc:	adrp	x22, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
    7800:	bl	6d88 <__asan_backtrace_open@plt+0x278>
    7804:	cmp	w21, #0x0
    7808:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    780c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7810:	add	x0, x0, #0x6df
    7814:	add	x1, x1, #0x81d
    7818:	csel	x0, x1, x0, ne  // ne = any
    781c:	add	x1, x22, #0xc6e
    7820:	mov	x2, x0
    7824:	str	x0, [sp, #120]
    7828:	mov	x0, x20
    782c:	bl	16a9c <OnPrint@@Base+0x390>
    7830:	ldr	x1, [sp, #160]
    7834:	adrp	x20, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7838:	add	x0, x20, #0x85d
    783c:	bl	16994 <OnPrint@@Base+0x288>
    7840:	stp	x22, x20, [sp, #128]
    7844:	ldr	w0, [x19]
    7848:	cmp	w0, #0x2
    784c:	b.ne	7a48 <__asan_backtrace_open@plt+0xf38>  // b.any
    7850:	mov	x0, x19
    7854:	add	x24, x19, #0x148
    7858:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    785c:	ldr	w26, [x19, #416]
    7860:	mov	x22, x0
    7864:	cmp	x0, #0x3
    7868:	b.ls	79ec <__asan_backtrace_open@plt+0xedc>  // b.plast
    786c:	sub	x28, x0, #0x4
    7870:	cmn	x0, #0x5
    7874:	b.hi	79f4 <__asan_backtrace_open@plt+0xee4>  // b.pmore
    7878:	add	x20, x22, #0x4
    787c:	mov	w1, #0x58                  	// #88
    7880:	mov	x23, x24
    7884:	mov	x19, x28
    7888:	add	x25, sp, #0xe0
    788c:	umaddl	x1, w26, w1, x24
    7890:	str	x1, [sp, #104]
    7894:	cmp	x1, x23
    7898:	b.eq	79fc <__asan_backtrace_open@plt+0xeec>  // b.none
    789c:	ldp	x2, x3, [x23]
    78a0:	stp	x2, x3, [x25]
    78a4:	add	x23, x23, #0x58
    78a8:	ldp	x2, x3, [x23, #-72]
    78ac:	stp	x2, x3, [x25, #16]
    78b0:	ldur	x0, [x23, #-56]
    78b4:	str	x0, [x25, #32]
    78b8:	mov	x0, x25
    78bc:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    78c0:	cmp	x19, x0
    78c4:	ldp	x2, x3, [x23, #-48]
    78c8:	stp	x2, x3, [x25]
    78cc:	csel	x19, x19, x0, ls  // ls = plast
    78d0:	ldp	x2, x3, [x23, #-32]
    78d4:	stp	x2, x3, [x25, #16]
    78d8:	ldur	x0, [x23, #-16]
    78dc:	str	x0, [x25, #32]
    78e0:	mov	x0, x25
    78e4:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    78e8:	cmp	x20, x0
    78ec:	csel	x20, x20, x0, cs  // cs = hs, nlast
    78f0:	ldr	x1, [sp, #104]
    78f4:	b	7890 <__asan_backtrace_open@plt+0xd80>
    78f8:	add	x0, sp, #0xe0
    78fc:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    7900:	mov	x2, x0
    7904:	mov	x0, x20
    7908:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    790c:	add	x1, x1, #0x76b
    7910:	bl	16a9c <OnPrint@@Base+0x390>
    7914:	b	77d0 <__asan_backtrace_open@plt+0xcc0>
    7918:	add	x0, sp, #0xe0
    791c:	bl	7dd4 <__asan_backtrace_open@plt+0x12c4>
    7920:	ldr	x1, [x0, #56]
    7924:	add	x2, x0, #0x8
    7928:	cbz	x1, 7948 <__asan_backtrace_open@plt+0xe38>
    792c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    7930:	ldr	w3, [x2, #60]
    7934:	ldr	w2, [x2, #56]
    7938:	ldr	x0, [x0, #4056]
    793c:	ldrb	w4, [x0, #181]
    7940:	ldr	x5, [x0, #24]
    7944:	b	77c8 <__asan_backtrace_open@plt+0xcb8>
    7948:	ldr	x1, [x2, #8]
    794c:	cbz	x1, 7970 <__asan_backtrace_open@plt+0xe60>
    7950:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    7954:	ldr	w3, [x2, #24]
    7958:	ldr	x2, [x2, #16]
    795c:	ldr	x0, [x0, #4056]
    7960:	ldr	x4, [x0, #24]
    7964:	mov	x0, x20
    7968:	bl	19298 <__sanitizer_symbolize_global@@Base+0xcb0>
    796c:	b	77d0 <__asan_backtrace_open@plt+0xcc0>
    7970:	ldr	x2, [x0, #8]
    7974:	b	7904 <__asan_backtrace_open@plt+0xdf4>
    7978:	cbnz	w21, 79a0 <__asan_backtrace_open@plt+0xe90>
    797c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    7980:	add	x2, x2, #0x6df
    7984:	mov	x3, x2
    7988:	mov	x4, x22
    798c:	mov	x0, x20
    7990:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7994:	add	x1, x1, #0x83d
    7998:	bl	16a9c <OnPrint@@Base+0x390>
    799c:	b	77f0 <__asan_backtrace_open@plt+0xce0>
    79a0:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    79a4:	adrp	x3, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    79a8:	add	x2, x2, #0x813
    79ac:	add	x3, x3, #0x81d
    79b0:	b	7988 <__asan_backtrace_open@plt+0xe78>
    79b4:	cbz	w21, 79dc <__asan_backtrace_open@plt+0xecc>
    79b8:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    79bc:	adrp	x3, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    79c0:	add	x2, x2, #0x826
    79c4:	add	x3, x3, #0x81d
    79c8:	mov	x0, x20
    79cc:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    79d0:	add	x1, x1, #0x854
    79d4:	bl	16a9c <OnPrint@@Base+0x390>
    79d8:	b	77f0 <__asan_backtrace_open@plt+0xce0>
    79dc:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    79e0:	add	x2, x2, #0x6df
    79e4:	mov	x3, x2
    79e8:	b	79c8 <__asan_backtrace_open@plt+0xeb8>
    79ec:	mov	x28, #0x0                   	// #0
    79f0:	b	7878 <__asan_backtrace_open@plt+0xd68>
    79f4:	mov	x20, #0xffffffffffffffff    	// #-1
    79f8:	b	787c <__asan_backtrace_open@plt+0xd6c>
    79fc:	sub	x0, x20, x19
    7a00:	cmp	x0, #0x20
    7a04:	b.ls	7a14 <__asan_backtrace_open@plt+0xf04>  // b.plast
    7a08:	sub	x19, x20, #0x20
    7a0c:	cmp	x19, x28
    7a10:	csel	x19, x19, x28, ls  // ls = plast
    7a14:	cmn	x19, #0x21
    7a18:	b.hi	7a6c <__asan_backtrace_open@plt+0xf5c>  // b.pmore
    7a1c:	add	x0, x19, #0x20
    7a20:	str	x0, [sp, #104]
    7a24:	ldr	x0, [sp, #104]
    7a28:	sub	x1, x0, x19
    7a2c:	mov	x0, x19
    7a30:	bl	15840 <__sanitizer_set_report_fd@@Base+0x4fa0>
    7a34:	tst	w0, #0xff
    7a38:	b.ne	7a74 <__asan_backtrace_open@plt+0xf64>  // b.any
    7a3c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7a40:	add	x0, x0, #0x860
    7a44:	bl	16994 <OnPrint@@Base+0x288>
    7a48:	ldp	x0, x1, [sp, #160]
    7a4c:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
    7a50:	ldp	x21, x22, [sp, #16]
    7a54:	ldp	x23, x24, [sp, #32]
    7a58:	ldp	x25, x26, [sp, #48]
    7a5c:	ldp	x27, x28, [sp, #64]
    7a60:	ldr	x30, [sp, #80]
    7a64:	ldp	x19, x20, [sp], #272
    7a68:	ret
    7a6c:	mov	x0, #0xffffffffffffffff    	// #-1
    7a70:	b	7a20 <__asan_backtrace_open@plt+0xf10>
    7a74:	add	x20, sp, #0xc0
    7a78:	mov	x1, #0x400                 	// #1024
    7a7c:	mov	x0, x20
    7a80:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
    7a84:	adrp	x28, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7a88:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7a8c:	mov	x23, x19
    7a90:	add	x28, x28, #0x831
    7a94:	add	x4, x4, #0x830
    7a98:	adrp	x25, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7a9c:	ldr	x0, [sp, #104]
    7aa0:	cmp	x0, x23
    7aa4:	b.eq	7ad0 <__asan_backtrace_open@plt+0xfc0>  // b.none
    7aa8:	ldrb	w3, [x23]
    7aac:	tst	x23, #0x7
    7ab0:	csel	x2, x4, x28, eq  // eq = none
    7ab4:	add	x1, x25, #0x87c
    7ab8:	mov	x0, x20
    7abc:	str	x4, [sp, #112]
    7ac0:	add	x23, x23, #0x1
    7ac4:	bl	16a9c <OnPrint@@Base+0x390>
    7ac8:	ldr	x4, [sp, #112]
    7acc:	b	7a9c <__asan_backtrace_open@plt+0xf8c>
    7ad0:	adrp	x23, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    7ad4:	mov	x0, x20
    7ad8:	add	x1, x23, #0x6de
    7adc:	bl	16a9c <OnPrint@@Base+0x390>
    7ae0:	cmp	w21, #0x0
    7ae4:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    7ae8:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7aec:	add	x0, x0, #0x6df
    7af0:	add	x1, x1, #0x833
    7af4:	str	x23, [sp, #144]
    7af8:	csel	x1, x1, x0, ne  // ne = any
    7afc:	mov	x0, x20
    7b00:	bl	16a9c <OnPrint@@Base+0x390>
    7b04:	adrp	x23, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7b08:	mov	w2, w26
    7b0c:	mov	x1, x24
    7b10:	mov	x0, x19
    7b14:	mov	x21, x19
    7b18:	bl	6ec4 <__asan_backtrace_open@plt+0x3b4>
    7b1c:	add	x25, sp, #0xe0
    7b20:	mov	x28, x0
    7b24:	add	x23, x23, #0x755
    7b28:	ldr	x0, [sp, #104]
    7b2c:	cmp	x0, x21
    7b30:	b.eq	7c4c <__asan_backtrace_open@plt+0x113c>  // b.none
    7b34:	cbz	x28, 7b70 <__asan_backtrace_open@plt+0x1060>
    7b38:	ldp	x6, x7, [x28, #40]
    7b3c:	stp	x6, x7, [x25]
    7b40:	ldp	x6, x7, [x28, #56]
    7b44:	stp	x6, x7, [x25, #16]
    7b48:	ldr	x0, [x28, #72]
    7b4c:	str	x0, [x25, #32]
    7b50:	mov	x0, x25
    7b54:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    7b58:	cmp	x21, x0
    7b5c:	b.ne	7b70 <__asan_backtrace_open@plt+0x1060>  // b.any
    7b60:	mov	w2, w26
    7b64:	mov	x1, x24
    7b68:	bl	6ec4 <__asan_backtrace_open@plt+0x3b4>
    7b6c:	mov	x28, x0
    7b70:	cmp	x28, #0x0
    7b74:	ccmp	x22, x21, #0x2, eq  // eq = none
    7b78:	b.cc	7c4c <__asan_backtrace_open@plt+0x113c>  // b.lo, b.ul, b.last
    7b7c:	cbz	x28, 7d5c <__asan_backtrace_open@plt+0x124c>
    7b80:	ldp	x0, x1, [x28]
    7b84:	stp	x0, x1, [x25]
    7b88:	ldp	x0, x1, [x28, #16]
    7b8c:	stp	x0, x1, [x25, #16]
    7b90:	ldr	x0, [x28, #32]
    7b94:	str	x0, [x25, #32]
    7b98:	mov	x0, x25
    7b9c:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    7ba0:	cmp	x21, x0
    7ba4:	mov	w1, #0x7e                  	// #126
    7ba8:	mov	w0, #0x20                  	// #32
    7bac:	csel	w2, w0, w1, ls  // ls = plast
    7bb0:	str	w2, [sp, #112]
    7bb4:	ldp	x0, x1, [x28]
    7bb8:	stp	x0, x1, [x25]
    7bbc:	ldp	x0, x1, [x28, #16]
    7bc0:	stp	x0, x1, [x25, #16]
    7bc4:	ldr	x0, [x28, #32]
    7bc8:	str	x0, [x25, #32]
    7bcc:	mov	x0, x25
    7bd0:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    7bd4:	cmp	x21, x0
    7bd8:	ldr	w2, [sp, #112]
    7bdc:	b.cs	7c44 <__asan_backtrace_open@plt+0x1134>  // b.hs, b.nlast
    7be0:	mov	w0, #0x20                  	// #32
    7be4:	str	w0, [sp, #112]
    7be8:	tst	x21, #0x7
    7bec:	b.ne	7c04 <__asan_backtrace_open@plt+0x10f4>  // b.any
    7bf0:	mov	x1, x23
    7bf4:	mov	x0, x20
    7bf8:	str	w2, [sp, #156]
    7bfc:	bl	16a9c <OnPrint@@Base+0x390>
    7c00:	ldr	w2, [sp, #156]
    7c04:	mov	x1, x23
    7c08:	mov	x0, x20
    7c0c:	bl	16a9c <OnPrint@@Base+0x390>
    7c10:	cmp	x22, x21
    7c14:	ldr	w0, [sp, #112]
    7c18:	mov	x1, x23
    7c1c:	mov	w2, #0x5e                  	// #94
    7c20:	csel	w2, w0, w2, ne  // ne = any
    7c24:	mov	x0, x20
    7c28:	bl	16a9c <OnPrint@@Base+0x390>
    7c2c:	add	x21, x21, #0x1
    7c30:	ldr	w2, [sp, #112]
    7c34:	mov	x1, x23
    7c38:	mov	x0, x20
    7c3c:	bl	16a9c <OnPrint@@Base+0x390>
    7c40:	b	7b28 <__asan_backtrace_open@plt+0x1018>
    7c44:	mov	w0, #0x7e                  	// #126
    7c48:	b	7be4 <__asan_backtrace_open@plt+0x10d4>
    7c4c:	ldp	x2, x0, [sp, #120]
    7c50:	add	x23, sp, #0xe0
    7c54:	mov	w22, #0x0                   	// #0
    7c58:	mov	x21, #0x0                   	// #0
    7c5c:	add	x1, x0, #0xc6e
    7c60:	mov	x0, x20
    7c64:	bl	16a9c <OnPrint@@Base+0x390>
    7c68:	ldr	x0, [sp, #104]
    7c6c:	cmp	x0, x19
    7c70:	b.eq	7d40 <__asan_backtrace_open@plt+0x1230>  // b.none
    7c74:	cbz	x21, 7ca0 <__asan_backtrace_open@plt+0x1190>
    7c78:	ldp	x2, x3, [x21, #40]
    7c7c:	stp	x2, x3, [x23]
    7c80:	ldp	x2, x3, [x21, #56]
    7c84:	stp	x2, x3, [x23, #16]
    7c88:	ldr	x0, [x21, #72]
    7c8c:	str	x0, [x23, #32]
    7c90:	mov	x0, x23
    7c94:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    7c98:	cmp	x19, x0
    7c9c:	b.ne	7cb8 <__asan_backtrace_open@plt+0x11a8>  // b.any
    7ca0:	mov	w2, w26
    7ca4:	mov	x1, x24
    7ca8:	mov	x0, x19
    7cac:	bl	6ec4 <__asan_backtrace_open@plt+0x3b4>
    7cb0:	mov	x21, x0
    7cb4:	cbz	x0, 7d40 <__asan_backtrace_open@plt+0x1230>
    7cb8:	tst	x19, #0x7
    7cbc:	cset	w0, eq  // eq = none
    7cc0:	add	w0, w0, #0x1
    7cc4:	add	w22, w22, w0
    7cc8:	ldp	x0, x1, [x21]
    7ccc:	stp	x0, x1, [x23]
    7cd0:	ldp	x0, x1, [x21, #16]
    7cd4:	stp	x0, x1, [x23, #16]
    7cd8:	ldr	x0, [x21, #32]
    7cdc:	str	x0, [x23, #32]
    7ce0:	mov	x0, x23
    7ce4:	bl	7d9c <__asan_backtrace_open@plt+0x128c>
    7ce8:	cmp	x19, x0
    7cec:	b.eq	7cfc <__asan_backtrace_open@plt+0x11ec>  // b.none
    7cf0:	add	w22, w22, #0x2
    7cf4:	add	x19, x19, #0x1
    7cf8:	b	7c68 <__asan_backtrace_open@plt+0x1158>
    7cfc:	adrp	x19, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7d00:	add	x19, x19, #0x831
    7d04:	sub	w22, w22, #0x1
    7d08:	cmn	w22, #0x1
    7d0c:	b.eq	7d20 <__asan_backtrace_open@plt+0x1210>  // b.none
    7d10:	mov	x1, x19
    7d14:	mov	x0, x20
    7d18:	bl	16a9c <OnPrint@@Base+0x390>
    7d1c:	b	7d04 <__asan_backtrace_open@plt+0x11f4>
    7d20:	ldr	x1, [x21, #80]
    7d24:	mov	x0, x20
    7d28:	mov	x2, x27
    7d2c:	bl	6d88 <__asan_backtrace_open@plt+0x278>
    7d30:	ldr	x0, [sp, #144]
    7d34:	add	x1, x0, #0x6de
    7d38:	mov	x0, x20
    7d3c:	bl	16a9c <OnPrint@@Base+0x390>
    7d40:	ldr	x1, [sp, #192]
    7d44:	ldr	x0, [sp, #136]
    7d48:	add	x0, x0, #0x85d
    7d4c:	bl	16994 <OnPrint@@Base+0x288>
    7d50:	ldp	x0, x1, [sp, #192]
    7d54:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
    7d58:	b	7a48 <__asan_backtrace_open@plt+0xf38>
    7d5c:	mov	w2, #0x20                  	// #32
    7d60:	b	7be0 <__asan_backtrace_open@plt+0x10d0>
    7d64:	ldr	w1, [x0]
    7d68:	cmp	w1, #0x1
    7d6c:	b.eq	7d94 <__asan_backtrace_open@plt+0x1284>  // b.none
    7d70:	str	x30, [sp, #-16]!
    7d74:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7d78:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7d7c:	add	x2, x2, #0x8d3
    7d80:	add	x0, x0, #0x8f1
    7d84:	mov	x4, #0x0                   	// #0
    7d88:	mov	x3, #0x0                   	// #0
    7d8c:	mov	w1, #0x51                  	// #81
    7d90:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    7d94:	ldp	x0, x1, [x0, #8]
    7d98:	ret
    7d9c:	ldr	w1, [x0]
    7da0:	cmp	w1, #0x2
    7da4:	b.eq	7dcc <__asan_backtrace_open@plt+0x12bc>  // b.none
    7da8:	str	x30, [sp, #-16]!
    7dac:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7db0:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7db4:	add	x2, x2, #0x91d
    7db8:	add	x0, x0, #0x8f1
    7dbc:	mov	x4, #0x0                   	// #0
    7dc0:	mov	x3, #0x0                   	// #0
    7dc4:	mov	w1, #0x55                  	// #85
    7dc8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    7dcc:	ldr	x0, [x0, #24]
    7dd0:	ret
    7dd4:	ldr	w1, [x0]
    7dd8:	cmp	w1, #0x3
    7ddc:	b.eq	7e04 <__asan_backtrace_open@plt+0x12f4>  // b.none
    7de0:	str	x30, [sp, #-16]!
    7de4:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7de8:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7dec:	add	x2, x2, #0x93b
    7df0:	add	x0, x0, #0x8f1
    7df4:	mov	x4, #0x0                   	// #0
    7df8:	mov	x3, #0x0                   	// #0
    7dfc:	mov	w1, #0x59                  	// #89
    7e00:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    7e04:	ldr	x0, [x0, #32]
    7e08:	ret
    7e0c:	ldr	w3, [x0, #320]
    7e10:	cmp	w3, #0x8
    7e14:	b.ne	7e3c <__asan_backtrace_open@plt+0x132c>  // b.any
    7e18:	str	x30, [sp, #-16]!
    7e1c:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7e20:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7e24:	add	x2, x2, #0x95a
    7e28:	add	x0, x0, #0x8f1
    7e2c:	mov	x4, #0x0                   	// #0
    7e30:	mov	x3, #0x0                   	// #0
    7e34:	mov	w1, #0xbf                  	// #191
    7e38:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    7e3c:	add	w4, w3, #0x1
    7e40:	ubfiz	x3, x3, #5, #32
    7e44:	add	x3, x3, #0x40
    7e48:	str	w4, [x0, #320]
    7e4c:	add	x2, x0, x3
    7e50:	ldp	x4, x5, [x1]
    7e54:	stp	x4, x5, [x2]
    7e58:	ldp	x4, x5, [x1, #16]
    7e5c:	stp	x4, x5, [x2, #16]
    7e60:	ret
    7e64:	ldr	x4, [x0, #16]
    7e68:	mov	x3, x1
    7e6c:	cmp	x1, x4
    7e70:	b.cc	7e90 <__asan_backtrace_open@plt+0x1380>  // b.lo, b.ul, b.last
    7e74:	str	x30, [sp, #-16]!
    7e78:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7e7c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7e80:	add	x2, x2, #0x978
    7e84:	add	x0, x0, #0x98a
    7e88:	mov	w1, #0x1b6                 	// #438
    7e8c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    7e90:	ldr	x0, [x0]
    7e94:	add	x0, x0, x1
    7e98:	ret
    7e9c:	stp	x19, x20, [sp, #-48]!
    7ea0:	stp	x21, x22, [sp, #16]
    7ea4:	str	x30, [sp, #32]
    7ea8:	cbnz	x1, 7ecc <__asan_backtrace_open@plt+0x13bc>
    7eac:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7eb0:	add	x2, x2, #0x9c7
    7eb4:	mov	x4, #0x0                   	// #0
    7eb8:	mov	x3, #0x0                   	// #0
    7ebc:	mov	w1, #0x1fc                 	// #508
    7ec0:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7ec4:	add	x0, x0, #0x98a
    7ec8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    7ecc:	ldr	x3, [x0, #16]
    7ed0:	mov	x20, x0
    7ed4:	mov	x19, x1
    7ed8:	cmp	x1, x3
    7edc:	b.cs	7ef4 <__asan_backtrace_open@plt+0x13e4>  // b.hs, b.nlast
    7ee0:	mov	x4, x1
    7ee4:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7ee8:	mov	w1, #0x1fd                 	// #509
    7eec:	add	x2, x2, #0x9e0
    7ef0:	b	7ec0 <__asan_backtrace_open@plt+0x13b0>
    7ef4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    7ef8:	mov	x21, x0
    7efc:	ldr	x22, [x0, #4016]
    7f00:	ldr	x1, [x22]
    7f04:	cbnz	x1, 7f10 <__asan_backtrace_open@plt+0x1400>
    7f08:	bl	1352c <__sanitizer_set_report_fd@@Base+0x2c8c>
    7f0c:	str	x0, [x22]
    7f10:	ldr	x0, [x21, #4016]
    7f14:	ldr	x0, [x0]
    7f18:	sub	x4, x0, #0x1
    7f1c:	tst	x4, x0
    7f20:	b.eq	7f34 <__asan_backtrace_open@plt+0x1424>  // b.none
    7f24:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7f28:	add	x0, x0, #0x9fe
    7f2c:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
    7f30:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    7f34:	add	x19, x19, x4
    7f38:	neg	x0, x0
    7f3c:	and	x19, x19, x0
    7f40:	mov	w2, #0x0                   	// #0
    7f44:	mov	x0, x19
    7f48:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    7f4c:	add	x1, x1, #0xa15
    7f50:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
    7f54:	ldr	x1, [x20]
    7f58:	mov	x21, x0
    7f5c:	ldr	x2, [x20, #16]
    7f60:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
    7f64:	ldp	x0, x1, [x20]
    7f68:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
    7f6c:	ldr	x30, [sp, #32]
    7f70:	stp	x21, x19, [x20]
    7f74:	ldp	x21, x22, [sp, #16]
    7f78:	ldp	x19, x20, [sp], #48
    7f7c:	ret
    7f80:	stp	x19, x20, [sp, #-32]!
    7f84:	mov	x19, x0
    7f88:	mov	x20, x1
    7f8c:	str	x30, [sp, #16]
    7f90:	stp	xzr, xzr, [x0]
    7f94:	str	xzr, [x0, #16]
    7f98:	cbz	x1, 7fdc <__asan_backtrace_open@plt+0x14cc>
    7f9c:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
    7fa0:	ldr	x0, [x19, #16]
    7fa4:	cmp	x20, x0
    7fa8:	b.ls	7fdc <__asan_backtrace_open@plt+0x14cc>  // b.plast
    7fac:	ldr	x0, [x19, #8]
    7fb0:	cmp	x20, x0
    7fb4:	b.ls	7fc4 <__asan_backtrace_open@plt+0x14b4>  // b.plast
    7fb8:	mov	x1, x20
    7fbc:	mov	x0, x19
    7fc0:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
    7fc4:	ldr	x3, [x19]
    7fc8:	mov	w1, #0x0                   	// #0
    7fcc:	ldr	x0, [x19, #16]
    7fd0:	sub	x2, x20, x0
    7fd4:	add	x0, x3, x0
    7fd8:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
    7fdc:	stp	x20, xzr, [x19, #16]
    7fe0:	mov	x0, x19
    7fe4:	mov	x1, #0x0                   	// #0
    7fe8:	bl	7e64 <__asan_backtrace_open@plt+0x1354>
    7fec:	strb	wzr, [x0]
    7ff0:	ldr	x30, [sp, #16]
    7ff4:	ldp	x19, x20, [sp], #32
    7ff8:	ret
    7ffc:	stp	x19, x20, [sp, #-48]!
    8000:	mov	x19, x0
    8004:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    8008:	mov	x20, x1
    800c:	mov	x1, #0x10                  	// #16
    8010:	ldr	x0, [x0, #3776]
    8014:	stp	x21, x22, [sp, #16]
    8018:	mov	x21, x2
    801c:	mov	x22, x3
    8020:	str	x30, [sp, #32]
    8024:	bl	c108 <__sancov_default_options@@Base+0x168>
    8028:	mov	x2, x0
    802c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
    8030:	add	x0, x0, #0xd48
    8034:	ldr	x30, [sp, #32]
    8038:	stp	x0, x22, [x2]
    803c:	mov	x3, x21
    8040:	mov	x1, x20
    8044:	mov	x0, x19
    8048:	ldp	x21, x22, [sp, #16]
    804c:	ldp	x19, x20, [sp], #48
    8050:	b	12010 <__sanitizer_set_report_fd@@Base+0x1770>

0000000000008054 <__ubsan_default_options@@Base>:
    8054:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    8058:	add	x0, x0, #0x6df
    805c:	ret
    8060:	b	6a60 <__ubsan_default_options@plt>
    8064:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    8068:	add	x1, x1, #0x6df
    806c:	strh	wzr, [x0]
    8070:	str	x1, [x0, #8]
    8074:	strh	wzr, [x0, #16]
    8078:	ret
    807c:	stp	x19, x20, [sp, #-32]!
    8080:	mov	x3, x1
    8084:	mov	x20, x0
    8088:	mov	x19, x1
    808c:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8090:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8094:	add	x2, x2, #0xa5b
    8098:	add	x1, x1, #0xa93
    809c:	str	x30, [sp, #16]
    80a0:	bl	7ffc <__asan_backtrace_open@plt+0x14ec>
    80a4:	add	x3, x19, #0x1
    80a8:	mov	x0, x20
    80ac:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    80b0:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    80b4:	add	x2, x2, #0xaa1
    80b8:	add	x1, x1, #0xace
    80bc:	bl	7ffc <__asan_backtrace_open@plt+0x14ec>
    80c0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    80c4:	mov	x1, #0x10                  	// #16
    80c8:	ldr	x0, [x0, #3776]
    80cc:	bl	c108 <__sancov_default_options@@Base+0x168>
    80d0:	mov	x2, x0
    80d4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
    80d8:	add	x0, x0, #0xd60
    80dc:	adrp	x3, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    80e0:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
    80e4:	str	x0, [x2]
    80e8:	add	x0, x19, #0x8
    80ec:	str	x0, [x2, #8]
    80f0:	add	x3, x3, #0xadf
    80f4:	mov	x0, x20
    80f8:	add	x1, x1, #0x3a3
    80fc:	bl	12010 <__sanitizer_set_report_fd@@Base+0x1770>
    8100:	add	x3, x19, #0x10
    8104:	mov	x0, x20
    8108:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    810c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8110:	add	x2, x2, #0xaf7
    8114:	add	x1, x1, #0xb3d
    8118:	bl	7ffc <__asan_backtrace_open@plt+0x14ec>
    811c:	add	x3, x19, #0x11
    8120:	mov	x0, x20
    8124:	ldr	x30, [sp, #16]
    8128:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    812c:	ldp	x19, x20, [sp], #32
    8130:	add	x2, x2, #0xb4f
    8134:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8138:	add	x1, x1, #0xbc1
    813c:	b	7ffc <__asan_backtrace_open@plt+0x14ec>
    8140:	stp	x19, x20, [sp, #-288]!
    8144:	adrp	x20, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    8148:	stp	x21, x22, [sp, #16]
    814c:	add	x19, sp, #0x30
    8150:	adrp	x22, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    8154:	ldr	x21, [x20, #4056]
    8158:	str	x30, [sp, #32]
    815c:	add	x22, x22, #0xe50
    8160:	mov	x0, x21
    8164:	bl	10d58 <__sanitizer_set_report_fd@@Base+0x4b8>
    8168:	mov	x1, x21
    816c:	mov	x0, x19
    8170:	bl	10e68 <__sanitizer_set_report_fd@@Base+0x5c8>
    8174:	strb	wzr, [sp, #108]
    8178:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    817c:	add	x0, x0, #0xbdb
    8180:	bl	69a0 <getenv@plt>
    8184:	str	x0, [sp, #56]
    8188:	mov	x1, x19
    818c:	mov	x0, x21
    8190:	bl	10e68 <__sanitizer_set_report_fd@@Base+0x5c8>
    8194:	mov	x0, x22
    8198:	bl	8064 <__ubsan_default_options@@Base+0x10>
    819c:	mov	x0, x19
    81a0:	bl	12068 <__sanitizer_set_report_fd@@Base+0x17c8>
    81a4:	mov	x1, x21
    81a8:	mov	x0, x19
    81ac:	bl	1100c <__sanitizer_set_report_fd@@Base+0x76c>
    81b0:	mov	x1, x22
    81b4:	mov	x0, x19
    81b8:	bl	807c <__ubsan_default_options@@Base+0x28>
    81bc:	bl	6a60 <__ubsan_default_options@plt>
    81c0:	mov	x1, x0
    81c4:	mov	x0, x19
    81c8:	bl	11f30 <__sanitizer_set_report_fd@@Base+0x1690>
    81cc:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    81d0:	add	x0, x0, #0xbf1
    81d4:	bl	69a0 <getenv@plt>
    81d8:	mov	x1, x0
    81dc:	mov	x0, x19
    81e0:	bl	11f30 <__sanitizer_set_report_fd@@Base+0x1690>
    81e4:	mov	x0, x21
    81e8:	bl	11860 <__sanitizer_set_report_fd@@Base+0xfc0>
    81ec:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    81f0:	ldr	x0, [x0, #3896]
    81f4:	ldr	w0, [x0]
    81f8:	cbz	w0, 8200 <__ubsan_default_options@@Base+0x1ac>
    81fc:	bl	11b08 <__sanitizer_set_report_fd@@Base+0x1268>
    8200:	ldr	x20, [x20, #4056]
    8204:	ldrb	w0, [x20, #122]
    8208:	cbz	w0, 8214 <__ubsan_default_options@@Base+0x1c0>
    820c:	mov	x0, x19
    8210:	bl	11bbc <__sanitizer_set_report_fd@@Base+0x131c>
    8214:	ldp	x21, x22, [sp, #16]
    8218:	ldr	x30, [sp, #32]
    821c:	ldp	x19, x20, [sp], #288
    8220:	ret
    8224:	ldr	x0, [x0, #8]
    8228:	str	x1, [x0]
    822c:	mov	w0, #0x1                   	// #1
    8230:	ret
    8234:	stp	x19, x20, [sp, #-32]!
    8238:	mov	x19, x1
    823c:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
    8240:	add	x1, x1, #0x151
    8244:	ldr	x20, [x0, #8]
    8248:	mov	x0, x19
    824c:	str	x30, [sp, #16]
    8250:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
    8254:	cbnz	w0, 8264 <__ubsan_default_options@@Base+0x210>
    8258:	strb	wzr, [x20]
    825c:	mov	w0, #0x1                   	// #1
    8260:	b	82dc <__ubsan_default_options@@Base+0x288>
    8264:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8268:	mov	x0, x19
    826c:	add	x1, x1, #0xa28
    8270:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
    8274:	cbz	w0, 8258 <__ubsan_default_options@@Base+0x204>
    8278:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
    827c:	mov	x0, x19
    8280:	add	x1, x1, #0x5
    8284:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
    8288:	cbz	w0, 8258 <__ubsan_default_options@@Base+0x204>
    828c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8290:	mov	x0, x19
    8294:	add	x1, x1, #0xcf3
    8298:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
    829c:	cbz	w0, 82e8 <__ubsan_default_options@@Base+0x294>
    82a0:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    82a4:	mov	x0, x19
    82a8:	add	x1, x1, #0xa2b
    82ac:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
    82b0:	cbz	w0, 82e8 <__ubsan_default_options@@Base+0x294>
    82b4:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    82b8:	mov	x0, x19
    82bc:	add	x1, x1, #0xff5
    82c0:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
    82c4:	cbz	w0, 82e8 <__ubsan_default_options@@Base+0x294>
    82c8:	mov	x1, x19
    82cc:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    82d0:	add	x0, x0, #0xa2f
    82d4:	bl	16994 <OnPrint@@Base+0x288>
    82d8:	mov	w0, #0x0                   	// #0
    82dc:	ldr	x30, [sp, #16]
    82e0:	ldp	x19, x20, [sp], #32
    82e4:	ret
    82e8:	mov	w0, #0x1                   	// #1
    82ec:	strb	w0, [x20]
    82f0:	b	825c <__ubsan_default_options@@Base+0x208>
    82f4:	sub	sp, sp, #0x2b0
    82f8:	stp	x19, x20, [sp]
    82fc:	mov	x19, x0
    8300:	add	x20, sp, #0xb0
    8304:	ldp	x2, x0, [x0]
    8308:	stp	x2, x0, [sp, #264]
    830c:	ldp	x2, x3, [x1]
    8310:	stp	x2, x3, [sp, #96]
    8314:	stp	x23, x30, [sp, #32]
    8318:	mov	w23, #0x1                   	// #1
    831c:	mov	w3, #0x10                  	// #16
    8320:	str	w23, [sp, #256]
    8324:	ldr	x0, [x1, #16]
    8328:	str	x0, [sp, #112]
    832c:	ldp	x0, x1, [sp, #256]
    8330:	stp	x0, x1, [sp, #48]
    8334:	ldp	x0, x1, [sp, #272]
    8338:	stp	x21, x22, [sp, #16]
    833c:	add	x22, sp, #0x30
    8340:	stp	x0, x1, [sp, #64]
    8344:	mov	x2, x22
    8348:	add	x1, sp, #0x60
    834c:	ldr	x0, [sp, #288]
    8350:	str	x0, [sp, #80]
    8354:	mov	x0, x20
    8358:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    835c:	ldp	x1, x0, [x19]
    8360:	str	w23, [sp, #136]
    8364:	stp	x1, x0, [sp, #144]
    8368:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    836c:	add	x4, x4, #0xc59
    8370:	ldp	x0, x1, [sp, #136]
    8374:	stp	x0, x1, [sp, #48]
    8378:	add	x21, sp, #0x100
    837c:	ldp	x0, x1, [sp, #152]
    8380:	stp	x0, x1, [sp, #64]
    8384:	mov	w3, #0x10                  	// #16
    8388:	mov	x1, x22
    838c:	mov	w2, #0x0                   	// #0
    8390:	ldr	x0, [sp, #168]
    8394:	str	x0, [sp, #80]
    8398:	mov	x0, x21
    839c:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    83a0:	mov	x0, x21
    83a4:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    83a8:	mov	x0, x20
    83ac:	bl	7210 <__asan_backtrace_open@plt+0x700>
    83b0:	ldp	x19, x20, [sp]
    83b4:	ldp	x21, x22, [sp, #16]
    83b8:	ldp	x23, x30, [sp, #32]
    83bc:	add	sp, sp, #0x2b0
    83c0:	ret
    83c4:	sub	sp, sp, #0x2b0
    83c8:	stp	x19, x20, [sp]
    83cc:	mov	x19, x0
    83d0:	add	x20, sp, #0xb0
    83d4:	ldp	x2, x0, [x0]
    83d8:	stp	x2, x0, [sp, #264]
    83dc:	ldp	x2, x3, [x1]
    83e0:	stp	x2, x3, [sp, #96]
    83e4:	stp	x23, x30, [sp, #32]
    83e8:	mov	w23, #0x1                   	// #1
    83ec:	mov	w3, #0xf                   	// #15
    83f0:	str	w23, [sp, #256]
    83f4:	ldr	x0, [x1, #16]
    83f8:	str	x0, [sp, #112]
    83fc:	ldp	x0, x1, [sp, #256]
    8400:	stp	x0, x1, [sp, #48]
    8404:	ldp	x0, x1, [sp, #272]
    8408:	stp	x21, x22, [sp, #16]
    840c:	add	x22, sp, #0x30
    8410:	stp	x0, x1, [sp, #64]
    8414:	mov	x2, x22
    8418:	add	x1, sp, #0x60
    841c:	ldr	x0, [sp, #288]
    8420:	str	x0, [sp, #80]
    8424:	mov	x0, x20
    8428:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    842c:	ldp	x1, x0, [x19]
    8430:	str	w23, [sp, #136]
    8434:	stp	x1, x0, [sp, #144]
    8438:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    843c:	add	x4, x4, #0xcab
    8440:	ldp	x0, x1, [sp, #136]
    8444:	stp	x0, x1, [sp, #48]
    8448:	add	x21, sp, #0x100
    844c:	ldp	x0, x1, [sp, #152]
    8450:	stp	x0, x1, [sp, #64]
    8454:	mov	w3, #0xf                   	// #15
    8458:	mov	x1, x22
    845c:	mov	w2, #0x0                   	// #0
    8460:	ldr	x0, [sp, #168]
    8464:	str	x0, [sp, #80]
    8468:	mov	x0, x21
    846c:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8470:	mov	x0, x21
    8474:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    8478:	mov	x0, x20
    847c:	bl	7210 <__asan_backtrace_open@plt+0x700>
    8480:	ldp	x19, x20, [sp]
    8484:	ldp	x21, x22, [sp, #16]
    8488:	ldp	x23, x30, [sp, #32]
    848c:	add	sp, sp, #0x2b0
    8490:	ret
    8494:	mov	x4, x2
    8498:	ldrb	w2, [x2]
    849c:	mov	x5, x0
    84a0:	mov	w0, w3
    84a4:	cbnz	w2, 84c0 <__ubsan_default_options@@Base+0x46c>
    84a8:	lsr	x1, x1, #32
    84ac:	cmn	w1, #0x1
    84b0:	b.eq	84c8 <__ubsan_default_options@@Base+0x474>  // b.none
    84b4:	ldr	x1, [x4, #8]
    84b8:	mov	x2, x5
    84bc:	b	7408 <__asan_backtrace_open@plt+0x8f8>
    84c0:	mov	w0, #0x0                   	// #0
    84c4:	ret
    84c8:	mov	w0, #0x1                   	// #1
    84cc:	b	84c4 <__ubsan_default_options@@Base+0x470>
    84d0:	sub	sp, sp, #0x300
    84d4:	stp	x21, x22, [sp, #16]
    84d8:	mov	x22, x0
    84dc:	stp	x19, x20, [sp]
    84e0:	mov	x20, x2
    84e4:	mov	x19, #0x1                   	// #1
    84e8:	stp	x23, x24, [sp, #32]
    84ec:	stp	x25, x26, [sp, #48]
    84f0:	mov	x25, x1
    84f4:	stp	x27, x30, [sp, #64]
    84f8:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    84fc:	ldrb	w26, [x22, #24]
    8500:	lsr	x4, x1, #32
    8504:	mov	x2, x1
    8508:	mov	w24, w1
    850c:	mov	w1, #0x1                   	// #1
    8510:	str	w1, [sp, #176]
    8514:	mov	x27, x0
    8518:	mov	w21, w4
    851c:	lsl	x26, x19, x26
    8520:	cbz	x25, 8534 <__ubsan_default_options@@Base+0x4e0>
    8524:	sub	x1, x26, #0x1
    8528:	tst	x1, x25
    852c:	cset	w19, eq  // eq = none
    8530:	add	w19, w19, #0x3
    8534:	mov	x1, #0x0                   	// #0
    8538:	add	x23, sp, #0x80
    853c:	bfxil	x1, x2, #0, #32
    8540:	ldp	x2, x3, [x20]
    8544:	stp	x2, x3, [sp, #128]
    8548:	bfi	x1, x4, #32, #32
    854c:	ldr	x2, [x20, #16]
    8550:	mov	w3, w19
    8554:	str	x2, [sp, #144]
    8558:	mov	x2, x23
    855c:	bl	8494 <__ubsan_default_options@@Base+0x440>
    8560:	tst	w0, #0xff
    8564:	b.ne	86d8 <__ubsan_default_options@@Base+0x684>  // b.any
    8568:	ldr	x0, [x22]
    856c:	str	xzr, [sp, #168]
    8570:	cbnz	x0, 85b0 <__ubsan_default_options@@Base+0x55c>
    8574:	ldr	x0, [x20, #8]
    8578:	bl	acac <__ubsan_handle_cfi_check_fail_abort@@Base+0x130>
    857c:	mov	x21, x0
    8580:	ldr	x0, [sp, #168]
    8584:	cmp	x21, x0
    8588:	b.eq	8594 <__ubsan_default_options@@Base+0x540>  // b.none
    858c:	cbz	x0, 8594 <__ubsan_default_options@@Base+0x540>
    8590:	bl	1ab00 <__sanitizer_symbolize_global@@Base+0x2518>
    8594:	mov	w0, #0x3                   	// #3
    8598:	mov	x27, #0x0                   	// #0
    859c:	mov	w24, #0x0                   	// #0
    85a0:	str	x21, [sp, #168]
    85a4:	str	w0, [sp, #176]
    85a8:	str	x21, [sp, #208]
    85ac:	mov	w21, #0x0                   	// #0
    85b0:	ldp	x0, x1, [x20]
    85b4:	stp	x0, x1, [sp, #128]
    85b8:	mov	w3, w19
    85bc:	str	x27, [sp, #184]
    85c0:	add	x27, sp, #0x100
    85c4:	stp	w24, w21, [sp, #192]
    85c8:	add	x21, sp, #0x50
    85cc:	ldr	x0, [x20, #16]
    85d0:	str	x0, [sp, #144]
    85d4:	ldp	x0, x1, [sp, #176]
    85d8:	stp	x0, x1, [sp, #80]
    85dc:	mov	x2, x21
    85e0:	ldp	x0, x1, [sp, #192]
    85e4:	stp	x0, x1, [sp, #96]
    85e8:	add	x20, sp, #0x150
    85ec:	ldr	x0, [sp, #208]
    85f0:	mov	x1, x23
    85f4:	str	x0, [sp, #112]
    85f8:	mov	x0, x27
    85fc:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    8600:	add	x24, sp, #0xb0
    8604:	cmp	w19, #0x3
    8608:	adrp	x23, 4e000 <_Unwind_Backtrace@GCC_3.3>
    860c:	b.eq	86f4 <__ubsan_default_options@@Base+0x6a0>  // b.none
    8610:	cmp	w19, #0x4
    8614:	b.eq	8750 <__ubsan_default_options@@Base+0x6fc>  // b.none
    8618:	cmp	w19, #0x1
    861c:	b.ne	87a4 <__ubsan_default_options@@Base+0x750>  // b.any
    8620:	ldp	x0, x1, [x24]
    8624:	stp	x0, x1, [x21]
    8628:	mov	w3, w19
    862c:	ldp	x0, x1, [x24, #16]
    8630:	stp	x0, x1, [x21, #16]
    8634:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8638:	ldr	x0, [x24, #32]
    863c:	str	x0, [x21, #32]
    8640:	mov	x1, x21
    8644:	mov	x0, x20
    8648:	add	x4, x4, #0xcda
    864c:	mov	w2, #0x0                   	// #0
    8650:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8654:	add	x23, x23, #0x470
    8658:	ldrb	w0, [x22, #25]
    865c:	ldr	x1, [x23, x0, lsl #3]
    8660:	mov	x0, x20
    8664:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    8668:	ldr	x1, [x22, #16]
    866c:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    8670:	mov	x0, x20
    8674:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    8678:	cbz	x25, 86c8 <__ubsan_default_options@@Base+0x674>
    867c:	mov	w0, #0x2                   	// #2
    8680:	str	w0, [sp, #216]
    8684:	stp	xzr, xzr, [sp, #224]
    8688:	mov	w3, w19
    868c:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8690:	str	x25, [sp, #240]
    8694:	add	x4, x4, #0xdd5
    8698:	ldp	x0, x1, [sp, #216]
    869c:	stp	x0, x1, [sp, #80]
    86a0:	mov	w2, #0x1                   	// #1
    86a4:	ldp	x0, x1, [sp, #232]
    86a8:	stp	x0, x1, [sp, #96]
    86ac:	mov	x1, x21
    86b0:	ldr	x0, [sp, #248]
    86b4:	str	x0, [sp, #112]
    86b8:	mov	x0, x20
    86bc:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    86c0:	mov	x0, x20
    86c4:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    86c8:	mov	x0, x27
    86cc:	bl	7210 <__asan_backtrace_open@plt+0x700>
    86d0:	add	x0, sp, #0xa8
    86d4:	bl	ac9c <__ubsan_handle_cfi_check_fail_abort@@Base+0x120>
    86d8:	ldp	x19, x20, [sp]
    86dc:	ldp	x21, x22, [sp, #16]
    86e0:	ldp	x23, x24, [sp, #32]
    86e4:	ldp	x25, x26, [sp, #48]
    86e8:	ldp	x27, x30, [sp, #64]
    86ec:	add	sp, sp, #0x300
    86f0:	ret
    86f4:	ldp	x0, x1, [sp, #176]
    86f8:	stp	x0, x1, [sp, #80]
    86fc:	mov	w3, w19
    8700:	ldp	x0, x1, [sp, #192]
    8704:	stp	x0, x1, [sp, #96]
    8708:	mov	w2, #0x0                   	// #0
    870c:	ldr	x0, [sp, #208]
    8710:	mov	x1, x21
    8714:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8718:	add	x4, x4, #0xcf5
    871c:	str	x0, [sp, #112]
    8720:	mov	x0, x20
    8724:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8728:	add	x23, x23, #0x470
    872c:	ldrb	w0, [x22, #25]
    8730:	ldr	x1, [x23, x0, lsl #3]
    8734:	mov	x0, x20
    8738:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    873c:	mov	x1, x25
    8740:	bl	ad78 <__ubsan_handle_cfi_check_fail_abort@@Base+0x1fc>
    8744:	mov	x1, x26
    8748:	bl	ad48 <__ubsan_handle_cfi_check_fail_abort@@Base+0x1cc>
    874c:	b	8668 <__ubsan_default_options@@Base+0x614>
    8750:	ldp	x0, x1, [x24]
    8754:	stp	x0, x1, [x21]
    8758:	mov	w3, w19
    875c:	ldp	x0, x1, [x24, #16]
    8760:	stp	x0, x1, [x21, #16]
    8764:	mov	w2, #0x0                   	// #0
    8768:	ldr	x0, [x24, #32]
    876c:	str	x0, [x21, #32]
    8770:	mov	x1, x21
    8774:	mov	x0, x20
    8778:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    877c:	add	x4, x4, #0xd3c
    8780:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8784:	add	x23, x23, #0x470
    8788:	ldrb	w0, [x22, #25]
    878c:	ldr	x1, [x23, x0, lsl #3]
    8790:	mov	x0, x20
    8794:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    8798:	mov	x1, x25
    879c:	bl	ad78 <__ubsan_handle_cfi_check_fail_abort@@Base+0x1fc>
    87a0:	b	8668 <__ubsan_default_options@@Base+0x614>
    87a4:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    87a8:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    87ac:	add	x2, x2, #0xd7b
    87b0:	add	x0, x0, #0xda4
    87b4:	mov	x4, #0x0                   	// #0
    87b8:	mov	x3, #0x0                   	// #0
    87bc:	mov	w1, #0x58                  	// #88
    87c0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    87c4:	sub	sp, sp, #0x310
    87c8:	stp	x21, x22, [sp, #16]
    87cc:	mov	x21, x0
    87d0:	stp	x19, x20, [sp]
    87d4:	mov	x20, x5
    87d8:	stp	x23, x24, [sp, #32]
    87dc:	stp	x25, x26, [sp, #48]
    87e0:	mov	x25, x2
    87e4:	mov	x26, x1
    87e8:	stp	x27, x28, [sp, #64]
    87ec:	add	x27, sp, #0xa0
    87f0:	str	x30, [sp, #80]
    87f4:	stp	x3, x4, [sp, #192]
    87f8:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    87fc:	mov	x24, x0
    8800:	ldr	x0, [x21, #16]
    8804:	mov	x19, x1
    8808:	bl	ac10 <__ubsan_handle_cfi_check_fail_abort@@Base+0x94>
    880c:	ands	w22, w0, #0xff
    8810:	ldp	x0, x1, [x20]
    8814:	stp	x0, x1, [sp, #160]
    8818:	cset	w23, eq  // eq = none
    881c:	add	w23, w23, #0x5
    8820:	mov	x2, x27
    8824:	ldr	x0, [x20, #16]
    8828:	mov	w3, w23
    882c:	mov	x1, x19
    8830:	str	x0, [sp, #176]
    8834:	mov	x0, x24
    8838:	bl	8494 <__ubsan_default_options@@Base+0x440>
    883c:	tst	w0, #0xff
    8840:	b.ne	895c <__ubsan_default_options@@Base+0x908>  // b.any
    8844:	cbnz	w22, 8858 <__ubsan_default_options@@Base+0x804>
    8848:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    884c:	ldr	x0, [x0, #3816]
    8850:	ldrb	w0, [x0, #17]
    8854:	cbnz	w0, 895c <__ubsan_default_options@@Base+0x908>
    8858:	ldp	x0, x1, [x20]
    885c:	stp	x0, x1, [sp, #160]
    8860:	mov	w5, #0x1                   	// #1
    8864:	str	w5, [sp, #352]
    8868:	lsr	x4, x19, #32
    886c:	str	x24, [sp, #360]
    8870:	add	x28, sp, #0x70
    8874:	str	w19, [sp, #368]
    8878:	mov	w3, w23
    887c:	str	w4, [sp, #372]
    8880:	mov	x2, x28
    8884:	ldr	x0, [x20, #16]
    8888:	str	x0, [sp, #176]
    888c:	ldp	x0, x1, [sp, #352]
    8890:	stp	x0, x1, [sp, #112]
    8894:	add	x20, sp, #0x160
    8898:	ldp	x0, x1, [sp, #368]
    889c:	stp	x0, x1, [sp, #128]
    88a0:	ldr	x0, [sp, #384]
    88a4:	str	x0, [sp, #144]
    88a8:	add	x0, sp, #0x110
    88ac:	mov	x1, x27
    88b0:	mov	x27, x0
    88b4:	str	x4, [sp, #104]
    88b8:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    88bc:	str	x24, [sp, #240]
    88c0:	mov	w5, #0x1                   	// #1
    88c4:	str	w5, [sp, #232]
    88c8:	ldr	x4, [sp, #104]
    88cc:	stp	w19, w4, [sp, #248]
    88d0:	ldp	x0, x1, [sp, #232]
    88d4:	stp	x0, x1, [sp, #112]
    88d8:	mov	w3, w23
    88dc:	ldp	x0, x1, [sp, #248]
    88e0:	stp	x0, x1, [sp, #128]
    88e4:	mov	w2, #0x0                   	// #0
    88e8:	ldr	x0, [sp, #264]
    88ec:	mov	x1, x28
    88f0:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    88f4:	add	x4, x4, #0xdf2
    88f8:	str	x0, [sp, #144]
    88fc:	mov	x0, x20
    8900:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8904:	cmp	w22, #0x0
    8908:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    890c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8910:	add	x0, x0, #0xde9
    8914:	add	x1, x1, #0xdeb
    8918:	csel	x1, x1, x0, ne  // ne = any
    891c:	mov	x0, x20
    8920:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    8924:	ldr	x1, [x21, #16]
    8928:	stp	x1, x26, [sp, #216]
    892c:	add	x1, sp, #0xd8
    8930:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    8934:	mov	x1, x25
    8938:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    893c:	add	x1, sp, #0xc0
    8940:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    8944:	ldr	x1, [x21, #16]
    8948:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    894c:	mov	x0, x20
    8950:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    8954:	mov	x0, x27
    8958:	bl	7210 <__asan_backtrace_open@plt+0x700>
    895c:	ldp	x19, x20, [sp]
    8960:	ldp	x21, x22, [sp, #16]
    8964:	ldp	x23, x24, [sp, #32]
    8968:	ldp	x25, x26, [sp, #48]
    896c:	ldp	x27, x28, [sp, #64]
    8970:	ldr	x30, [sp, #80]
    8974:	add	sp, sp, #0x310
    8978:	ret
    897c:	sub	sp, sp, #0x300
    8980:	stp	x19, x20, [sp]
    8984:	mov	x19, x0
    8988:	stp	x21, x22, [sp, #16]
    898c:	mov	x21, x2
    8990:	stp	x23, x24, [sp, #32]
    8994:	add	x24, sp, #0xa0
    8998:	stp	x25, x26, [sp, #48]
    899c:	mov	x25, x1
    89a0:	stp	x27, x28, [sp, #64]
    89a4:	str	x30, [sp, #80]
    89a8:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    89ac:	mov	x23, x0
    89b0:	mov	x20, x1
    89b4:	ldr	x0, [x19, #16]
    89b8:	bl	ac10 <__ubsan_handle_cfi_check_fail_abort@@Base+0x94>
    89bc:	ands	w0, w0, #0xff
    89c0:	str	w0, [sp, #108]
    89c4:	cset	w22, eq  // eq = none
    89c8:	ldp	x0, x1, [x21]
    89cc:	stp	x0, x1, [sp, #160]
    89d0:	add	w22, w22, #0x5
    89d4:	ldr	x0, [x21, #16]
    89d8:	mov	w3, w22
    89dc:	mov	x2, x24
    89e0:	mov	x1, x20
    89e4:	str	x0, [sp, #176]
    89e8:	mov	x0, x23
    89ec:	bl	8494 <__ubsan_default_options@@Base+0x440>
    89f0:	tst	w0, #0xff
    89f4:	b.ne	8aec <__ubsan_default_options@@Base+0xa98>  // b.any
    89f8:	ldr	w0, [sp, #108]
    89fc:	cbnz	w0, 8a10 <__ubsan_default_options@@Base+0x9bc>
    8a00:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    8a04:	ldr	x0, [x0, #3816]
    8a08:	ldrb	w0, [x0, #17]
    8a0c:	cbnz	w0, 8aec <__ubsan_default_options@@Base+0xa98>
    8a10:	ldp	x0, x1, [x21]
    8a14:	stp	x0, x1, [sp, #160]
    8a18:	mov	w4, #0x1                   	// #1
    8a1c:	str	w4, [sp, #336]
    8a20:	lsr	x27, x20, #32
    8a24:	str	x23, [sp, #344]
    8a28:	add	x26, sp, #0x70
    8a2c:	str	w20, [sp, #352]
    8a30:	add	x28, sp, #0x100
    8a34:	str	w27, [sp, #356]
    8a38:	mov	w3, w22
    8a3c:	ldr	x0, [x21, #16]
    8a40:	str	x0, [sp, #176]
    8a44:	ldp	x0, x1, [sp, #336]
    8a48:	stp	x0, x1, [sp, #112]
    8a4c:	mov	x2, x26
    8a50:	ldp	x0, x1, [sp, #352]
    8a54:	stp	x0, x1, [sp, #128]
    8a58:	add	x21, sp, #0x150
    8a5c:	ldr	x0, [sp, #368]
    8a60:	mov	x1, x24
    8a64:	str	x0, [sp, #144]
    8a68:	mov	x0, x28
    8a6c:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    8a70:	str	x23, [sp, #224]
    8a74:	ldr	w0, [sp, #108]
    8a78:	mov	w4, #0x1                   	// #1
    8a7c:	str	w4, [sp, #216]
    8a80:	add	x24, sp, #0xc8
    8a84:	stp	w20, w27, [sp, #232]
    8a88:	cbz	w0, 8b0c <__ubsan_default_options@@Base+0xab8>
    8a8c:	ldp	x0, x1, [sp, #216]
    8a90:	stp	x0, x1, [sp, #112]
    8a94:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8a98:	ldp	x0, x1, [sp, #232]
    8a9c:	add	x4, x4, #0xe31
    8aa0:	stp	x0, x1, [sp, #128]
    8aa4:	ldr	x0, [sp, #248]
    8aa8:	str	x0, [sp, #144]
    8aac:	mov	w3, w22
    8ab0:	mov	w2, #0x0                   	// #0
    8ab4:	mov	x1, x26
    8ab8:	mov	x0, x21
    8abc:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8ac0:	ldr	x0, [x19, #16]
    8ac4:	mov	x1, x24
    8ac8:	stp	x0, x25, [sp, #200]
    8acc:	mov	x0, x21
    8ad0:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    8ad4:	ldr	x1, [x19, #16]
    8ad8:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    8adc:	mov	x0, x21
    8ae0:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    8ae4:	mov	x0, x28
    8ae8:	bl	7210 <__asan_backtrace_open@plt+0x700>
    8aec:	ldp	x19, x20, [sp]
    8af0:	ldp	x21, x22, [sp, #16]
    8af4:	ldp	x23, x24, [sp, #32]
    8af8:	ldp	x25, x26, [sp, #48]
    8afc:	ldp	x27, x28, [sp, #64]
    8b00:	ldr	x30, [sp, #80]
    8b04:	add	sp, sp, #0x300
    8b08:	ret
    8b0c:	ldp	x0, x1, [sp, #216]
    8b10:	stp	x0, x1, [sp, #112]
    8b14:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8b18:	ldp	x0, x1, [sp, #232]
    8b1c:	stp	x0, x1, [sp, #128]
    8b20:	add	x4, x4, #0xe9a
    8b24:	ldr	x0, [sp, #248]
    8b28:	str	x0, [sp, #144]
    8b2c:	b	8aac <__ubsan_default_options@@Base+0xa58>
    8b30:	sub	sp, sp, #0x300
    8b34:	stp	x23, x24, [sp, #32]
    8b38:	mov	x23, x0
    8b3c:	mov	x24, x1
    8b40:	stp	x19, x20, [sp]
    8b44:	mov	x19, x2
    8b48:	stp	x21, x22, [sp, #16]
    8b4c:	mov	x22, x3
    8b50:	stp	x25, x26, [sp, #48]
    8b54:	stp	x27, x28, [sp, #64]
    8b58:	str	x30, [sp, #80]
    8b5c:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    8b60:	mov	x21, x0
    8b64:	mov	x20, x1
    8b68:	ldr	x0, [x23, #16]
    8b6c:	stp	x0, x24, [sp, #184]
    8b70:	stp	x0, x19, [sp, #200]
    8b74:	bl	ac10 <__ubsan_handle_cfi_check_fail_abort@@Base+0x94>
    8b78:	tst	w0, #0xff
    8b7c:	b.ne	8cb0 <__ubsan_default_options@@Base+0xc5c>  // b.any
    8b80:	ldr	x0, [x23, #16]
    8b84:	ldrh	w0, [x0]
    8b88:	cmp	w0, #0x0
    8b8c:	cset	w19, ne  // ne = any
    8b90:	add	w19, w19, #0x7
    8b94:	ldp	x0, x1, [x22]
    8b98:	stp	x0, x1, [sp, #144]
    8b9c:	add	x28, sp, #0x90
    8ba0:	ldr	x0, [x22, #16]
    8ba4:	mov	w3, w19
    8ba8:	mov	x2, x28
    8bac:	mov	x1, x20
    8bb0:	str	x0, [sp, #160]
    8bb4:	mov	x0, x21
    8bb8:	bl	8494 <__ubsan_default_options@@Base+0x440>
    8bbc:	tst	w0, #0xff
    8bc0:	b.ne	8c90 <__ubsan_default_options@@Base+0xc3c>  // b.any
    8bc4:	ldp	x0, x1, [x22]
    8bc8:	stp	x0, x1, [sp, #144]
    8bcc:	mov	w26, #0x1                   	// #1
    8bd0:	str	w26, [sp, #336]
    8bd4:	lsr	x25, x20, #32
    8bd8:	str	x21, [sp, #344]
    8bdc:	add	x24, sp, #0x60
    8be0:	str	w20, [sp, #352]
    8be4:	add	x27, sp, #0x100
    8be8:	str	w25, [sp, #356]
    8bec:	mov	w3, w19
    8bf0:	ldr	x0, [x22, #16]
    8bf4:	str	x0, [sp, #160]
    8bf8:	ldp	x0, x1, [sp, #336]
    8bfc:	stp	x0, x1, [sp, #96]
    8c00:	mov	x2, x24
    8c04:	ldp	x0, x1, [sp, #352]
    8c08:	stp	x0, x1, [sp, #112]
    8c0c:	add	x22, sp, #0x150
    8c10:	ldr	x0, [sp, #368]
    8c14:	mov	x1, x28
    8c18:	str	x0, [sp, #128]
    8c1c:	mov	x0, x27
    8c20:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    8c24:	str	w26, [sp, #216]
    8c28:	str	x21, [sp, #224]
    8c2c:	cmp	w19, #0x5
    8c30:	stp	w20, w25, [sp, #232]
    8c34:	ldp	x0, x1, [sp, #216]
    8c38:	stp	x0, x1, [sp, #96]
    8c3c:	ldp	x0, x1, [sp, #232]
    8c40:	stp	x0, x1, [sp, #112]
    8c44:	ldr	x0, [sp, #248]
    8c48:	str	x0, [sp, #128]
    8c4c:	b.ne	8cd0 <__ubsan_default_options@@Base+0xc7c>  // b.any
    8c50:	mov	w3, w19
    8c54:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8c58:	add	x4, x4, #0xeca
    8c5c:	mov	w2, #0x0                   	// #0
    8c60:	mov	x1, x24
    8c64:	mov	x0, x22
    8c68:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8c6c:	add	x1, sp, #0xb8
    8c70:	mov	x0, x22
    8c74:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    8c78:	ldr	x1, [x23, #16]
    8c7c:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    8c80:	mov	x0, x22
    8c84:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    8c88:	mov	x0, x27
    8c8c:	bl	7210 <__asan_backtrace_open@plt+0x700>
    8c90:	ldp	x19, x20, [sp]
    8c94:	ldp	x21, x22, [sp, #16]
    8c98:	ldp	x23, x24, [sp, #32]
    8c9c:	ldp	x25, x26, [sp, #48]
    8ca0:	ldp	x27, x28, [sp, #64]
    8ca4:	ldr	x30, [sp, #80]
    8ca8:	add	sp, sp, #0x300
    8cac:	ret
    8cb0:	add	x0, sp, #0xc8
    8cb4:	bl	bc94 <__ubsan_get_current_report_data@@Base+0x4cc>
    8cb8:	cmn	x0, #0x1
    8cbc:	b.ne	8b80 <__ubsan_default_options@@Base+0xb2c>  // b.any
    8cc0:	cmn	x1, #0x1
    8cc4:	b.ne	8b80 <__ubsan_default_options@@Base+0xb2c>  // b.any
    8cc8:	mov	w19, #0x5                   	// #5
    8ccc:	b	8b94 <__ubsan_default_options@@Base+0xb40>
    8cd0:	mov	w3, w19
    8cd4:	mov	x1, x24
    8cd8:	mov	x0, x22
    8cdc:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8ce0:	mov	w2, #0x0                   	// #0
    8ce4:	add	x4, x4, #0xf00
    8ce8:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8cec:	b	8c80 <__ubsan_default_options@@Base+0xc2c>
    8cf0:	sub	sp, sp, #0x310
    8cf4:	stp	x21, x22, [sp, #16]
    8cf8:	mov	x22, x0
    8cfc:	stp	x19, x20, [sp]
    8d00:	mov	x20, x2
    8d04:	mov	x19, x3
    8d08:	stp	x23, x24, [sp, #32]
    8d0c:	mov	x24, x1
    8d10:	stp	x25, x26, [sp, #48]
    8d14:	stp	x27, x28, [sp, #64]
    8d18:	str	x30, [sp, #80]
    8d1c:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    8d20:	mov	x23, x0
    8d24:	mov	x21, x1
    8d28:	ldr	x0, [x22, #16]
    8d2c:	stp	x0, x24, [sp, #200]
    8d30:	add	x24, sp, #0xd8
    8d34:	ldr	x0, [x22, #24]
    8d38:	str	x0, [sp, #216]
    8d3c:	mov	x0, x24
    8d40:	str	x20, [sp, #224]
    8d44:	bl	ac6c <__ubsan_handle_cfi_check_fail_abort@@Base+0xf0>
    8d48:	tst	w0, #0xff
    8d4c:	b.ne	8d78 <__ubsan_default_options@@Base+0xd24>  // b.any
    8d50:	mov	x0, x24
    8d54:	bl	be08 <__ubsan_get_current_report_data@@Base+0x640>
    8d58:	mov	x20, x0
    8d5c:	mov	x25, x1
    8d60:	ldr	x0, [x22, #16]
    8d64:	bl	ac2c <__ubsan_handle_cfi_check_fail_abort@@Base+0xb0>
    8d68:	mov	w0, w0
    8d6c:	cbnz	x25, 8d78 <__ubsan_default_options@@Base+0xd24>
    8d70:	cmp	x0, x20
    8d74:	b.hi	8ea8 <__ubsan_default_options@@Base+0xe54>  // b.pmore
    8d78:	mov	w25, #0xd                   	// #13
    8d7c:	ldp	x0, x1, [x19]
    8d80:	add	x4, sp, #0xa0
    8d84:	stp	x0, x1, [sp, #160]
    8d88:	mov	w3, w25
    8d8c:	mov	x2, x4
    8d90:	ldr	x0, [x19, #16]
    8d94:	mov	x1, x21
    8d98:	str	x4, [sp, #104]
    8d9c:	str	x0, [sp, #176]
    8da0:	mov	x0, x23
    8da4:	bl	8494 <__ubsan_default_options@@Base+0x440>
    8da8:	tst	w0, #0xff
    8dac:	b.ne	8e88 <__ubsan_default_options@@Base+0xe34>  // b.any
    8db0:	ldp	x0, x1, [x19]
    8db4:	stp	x0, x1, [sp, #160]
    8db8:	mov	w27, #0x1                   	// #1
    8dbc:	str	w27, [sp, #352]
    8dc0:	lsr	x26, x21, #32
    8dc4:	str	x23, [sp, #360]
    8dc8:	add	x28, sp, #0x110
    8dcc:	str	w21, [sp, #368]
    8dd0:	mov	w3, w25
    8dd4:	str	w26, [sp, #372]
    8dd8:	add	x20, sp, #0x160
    8ddc:	ldr	x0, [x19, #16]
    8de0:	str	x0, [sp, #176]
    8de4:	ldr	x4, [sp, #104]
    8de8:	add	x19, sp, #0x70
    8dec:	ldp	x0, x1, [sp, #352]
    8df0:	stp	x0, x1, [sp, #112]
    8df4:	mov	x2, x19
    8df8:	ldp	x0, x1, [sp, #368]
    8dfc:	stp	x0, x1, [sp, #128]
    8e00:	ldr	x0, [sp, #384]
    8e04:	mov	x1, x4
    8e08:	str	x0, [sp, #144]
    8e0c:	mov	x0, x28
    8e10:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    8e14:	cmp	w25, #0xd
    8e18:	b.ne	8efc <__ubsan_default_options@@Base+0xea8>  // b.any
    8e1c:	mov	x0, x24
    8e20:	bl	ac6c <__ubsan_handle_cfi_check_fail_abort@@Base+0xf0>
    8e24:	str	w27, [sp, #232]
    8e28:	tst	w0, #0xff
    8e2c:	str	x23, [sp, #240]
    8e30:	stp	w21, w26, [sp, #248]
    8e34:	ldp	x0, x1, [sp, #232]
    8e38:	stp	x0, x1, [x19]
    8e3c:	ldp	x0, x1, [sp, #248]
    8e40:	stp	x0, x1, [x19, #16]
    8e44:	ldr	x0, [sp, #264]
    8e48:	str	x0, [x19, #32]
    8e4c:	b.eq	8eb0 <__ubsan_default_options@@Base+0xe5c>  // b.none
    8e50:	mov	x1, x19
    8e54:	mov	w3, w25
    8e58:	mov	x0, x20
    8e5c:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8e60:	mov	w2, #0x0                   	// #0
    8e64:	add	x4, x4, #0xf11
    8e68:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8e6c:	mov	x1, x24
    8e70:	mov	x0, x20
    8e74:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    8e78:	mov	x0, x20
    8e7c:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    8e80:	mov	x0, x28
    8e84:	bl	7210 <__asan_backtrace_open@plt+0x700>
    8e88:	ldp	x19, x20, [sp]
    8e8c:	ldp	x21, x22, [sp, #16]
    8e90:	ldp	x23, x24, [sp, #32]
    8e94:	ldp	x25, x26, [sp, #48]
    8e98:	ldp	x27, x28, [sp, #64]
    8e9c:	ldr	x30, [sp, #80]
    8ea0:	add	sp, sp, #0x310
    8ea4:	ret
    8ea8:	mov	w25, #0xc                   	// #12
    8eac:	b	8d7c <__ubsan_default_options@@Base+0xd28>
    8eb0:	mov	w3, w25
    8eb4:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8eb8:	add	x4, x4, #0xf2f
    8ebc:	mov	w2, #0x0                   	// #0
    8ec0:	mov	x1, x19
    8ec4:	mov	x0, x20
    8ec8:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8ecc:	mov	x1, x24
    8ed0:	mov	x0, x20
    8ed4:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    8ed8:	mov	x19, x0
    8edc:	ldr	x0, [x22, #16]
    8ee0:	bl	ac2c <__ubsan_handle_cfi_check_fail_abort@@Base+0xb0>
    8ee4:	mov	w1, w0
    8ee8:	mov	x0, x19
    8eec:	bl	ad48 <__ubsan_handle_cfi_check_fail_abort@@Base+0x1cc>
    8ef0:	ldr	x1, [x22, #16]
    8ef4:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    8ef8:	b	8e78 <__ubsan_default_options@@Base+0xe24>
    8efc:	add	x25, sp, #0xc8
    8f00:	mov	x0, x25
    8f04:	bl	ac6c <__ubsan_handle_cfi_check_fail_abort@@Base+0xf0>
    8f08:	str	w27, [sp, #232]
    8f0c:	tst	w0, #0xff
    8f10:	str	x23, [sp, #240]
    8f14:	stp	w21, w26, [sp, #248]
    8f18:	ldp	x0, x1, [sp, #232]
    8f1c:	stp	x0, x1, [x19]
    8f20:	ldp	x0, x1, [sp, #248]
    8f24:	stp	x0, x1, [x19, #16]
    8f28:	ldr	x0, [sp, #264]
    8f2c:	str	x0, [x19, #32]
    8f30:	b.eq	8f58 <__ubsan_default_options@@Base+0xf04>  // b.none
    8f34:	mov	x1, x19
    8f38:	mov	x0, x20
    8f3c:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8f40:	mov	w3, #0xc                   	// #12
    8f44:	add	x4, x4, #0xf61
    8f48:	mov	w2, #0x0                   	// #0
    8f4c:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8f50:	mov	x1, x25
    8f54:	b	8e70 <__ubsan_default_options@@Base+0xe1c>
    8f58:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    8f5c:	add	x4, x4, #0xf81
    8f60:	mov	w3, #0xc                   	// #12
    8f64:	mov	w2, #0x0                   	// #0
    8f68:	mov	x1, x19
    8f6c:	mov	x0, x20
    8f70:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    8f74:	mov	x1, x25
    8f78:	mov	x0, x20
    8f7c:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    8f80:	mov	x1, x24
    8f84:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    8f88:	b	8ef0 <__ubsan_default_options@@Base+0xe9c>
    8f8c:	sub	sp, sp, #0x2f0
    8f90:	stp	x19, x20, [sp]
    8f94:	mov	x19, x2
    8f98:	stp	x21, x22, [sp, #16]
    8f9c:	mov	x22, x0
    8fa0:	stp	x23, x24, [sp, #32]
    8fa4:	mov	x24, x1
    8fa8:	stp	x25, x26, [sp, #48]
    8fac:	stp	x27, x28, [sp, #64]
    8fb0:	add	x28, sp, #0x90
    8fb4:	str	x30, [sp, #80]
    8fb8:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    8fbc:	ldp	x2, x3, [x19]
    8fc0:	stp	x2, x3, [sp, #144]
    8fc4:	mov	x25, x0
    8fc8:	ldr	x2, [x19, #16]
    8fcc:	mov	x20, x1
    8fd0:	mov	w3, #0xe                   	// #14
    8fd4:	str	x2, [sp, #160]
    8fd8:	mov	x2, x28
    8fdc:	bl	8494 <__ubsan_default_options@@Base+0x440>
    8fe0:	tst	w0, #0xff
    8fe4:	b.ne	90b4 <__ubsan_default_options@@Base+0x1060>  // b.any
    8fe8:	ldp	x0, x1, [x19]
    8fec:	stp	x0, x1, [sp, #144]
    8ff0:	mov	w27, #0x1                   	// #1
    8ff4:	str	w27, [sp, #320]
    8ff8:	lsr	x26, x20, #32
    8ffc:	str	x25, [sp, #328]
    9000:	add	x23, sp, #0x60
    9004:	str	w20, [sp, #336]
    9008:	add	x21, sp, #0xf0
    900c:	str	w26, [sp, #340]
    9010:	mov	x2, x23
    9014:	ldr	x0, [x19, #16]
    9018:	str	x0, [sp, #160]
    901c:	ldp	x0, x1, [sp, #320]
    9020:	stp	x0, x1, [sp, #96]
    9024:	mov	w3, #0xe                   	// #14
    9028:	ldp	x0, x1, [sp, #336]
    902c:	stp	x0, x1, [sp, #112]
    9030:	add	x19, sp, #0x140
    9034:	ldr	x0, [sp, #352]
    9038:	mov	x1, x28
    903c:	str	x0, [sp, #128]
    9040:	mov	x0, x21
    9044:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    9048:	str	w27, [sp, #200]
    904c:	str	x25, [sp, #208]
    9050:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    9054:	stp	w20, w26, [sp, #216]
    9058:	add	x4, x4, #0xfc0
    905c:	ldr	x0, [x22, #24]
    9060:	stp	x0, x24, [sp, #184]
    9064:	mov	w3, #0xe                   	// #14
    9068:	ldp	x0, x1, [sp, #200]
    906c:	stp	x0, x1, [sp, #96]
    9070:	mov	w2, #0x0                   	// #0
    9074:	ldp	x0, x1, [sp, #216]
    9078:	stp	x0, x1, [sp, #112]
    907c:	ldr	x0, [sp, #232]
    9080:	mov	x1, x23
    9084:	str	x0, [sp, #128]
    9088:	mov	x0, x19
    908c:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    9090:	add	x1, sp, #0xb8
    9094:	mov	x0, x19
    9098:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    909c:	ldr	x1, [x22, #16]
    90a0:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    90a4:	mov	x0, x19
    90a8:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    90ac:	mov	x0, x21
    90b0:	bl	7210 <__asan_backtrace_open@plt+0x700>
    90b4:	ldp	x19, x20, [sp]
    90b8:	ldp	x21, x22, [sp, #16]
    90bc:	ldp	x23, x24, [sp, #32]
    90c0:	ldp	x25, x26, [sp, #48]
    90c4:	ldp	x27, x28, [sp, #64]
    90c8:	ldr	x30, [sp, #80]
    90cc:	add	sp, sp, #0x2f0
    90d0:	ret
    90d4:	sub	sp, sp, #0x2f0
    90d8:	stp	x19, x20, [sp]
    90dc:	mov	x19, x2
    90e0:	stp	x21, x22, [sp, #16]
    90e4:	stp	x23, x24, [sp, #32]
    90e8:	mov	x24, x0
    90ec:	mov	x23, x1
    90f0:	stp	x25, x26, [sp, #48]
    90f4:	stp	x27, x28, [sp, #64]
    90f8:	add	x28, sp, #0x90
    90fc:	str	x30, [sp, #80]
    9100:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    9104:	ldp	x2, x3, [x19]
    9108:	stp	x2, x3, [sp, #144]
    910c:	mov	x25, x0
    9110:	ldr	x2, [x19, #16]
    9114:	mov	x20, x1
    9118:	mov	w3, #0x11                  	// #17
    911c:	str	x2, [sp, #160]
    9120:	mov	x2, x28
    9124:	bl	8494 <__ubsan_default_options@@Base+0x440>
    9128:	tst	w0, #0xff
    912c:	b.ne	91f4 <__ubsan_default_options@@Base+0x11a0>  // b.any
    9130:	ldp	x0, x1, [x19]
    9134:	stp	x0, x1, [sp, #144]
    9138:	mov	w27, #0x1                   	// #1
    913c:	str	w27, [sp, #320]
    9140:	lsr	x26, x20, #32
    9144:	str	x25, [sp, #328]
    9148:	add	x22, sp, #0x60
    914c:	str	w20, [sp, #336]
    9150:	add	x21, sp, #0xf0
    9154:	str	w26, [sp, #340]
    9158:	mov	x2, x22
    915c:	ldr	x0, [x19, #16]
    9160:	str	x0, [sp, #160]
    9164:	ldp	x0, x1, [sp, #320]
    9168:	stp	x0, x1, [sp, #96]
    916c:	mov	w3, #0x11                  	// #17
    9170:	ldp	x0, x1, [sp, #336]
    9174:	stp	x0, x1, [sp, #112]
    9178:	add	x19, sp, #0x140
    917c:	ldr	x0, [sp, #352]
    9180:	mov	x1, x28
    9184:	str	x0, [sp, #128]
    9188:	mov	x0, x21
    918c:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    9190:	str	w27, [sp, #200]
    9194:	str	x25, [sp, #208]
    9198:	mov	w3, #0x11                  	// #17
    919c:	stp	w20, w26, [sp, #216]
    91a0:	mov	w2, #0x0                   	// #0
    91a4:	ldp	x0, x1, [sp, #200]
    91a8:	stp	x0, x1, [sp, #96]
    91ac:	adrp	x4, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    91b0:	ldp	x0, x1, [sp, #216]
    91b4:	stp	x0, x1, [sp, #112]
    91b8:	add	x4, x4, #0xfe3
    91bc:	ldr	x0, [sp, #232]
    91c0:	mov	x1, x22
    91c4:	str	x0, [sp, #128]
    91c8:	mov	x0, x19
    91cc:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    91d0:	add	x1, sp, #0xb8
    91d4:	ldr	x0, [x24, #16]
    91d8:	stp	x0, x23, [sp, #184]
    91dc:	mov	x0, x19
    91e0:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    91e4:	mov	x0, x19
    91e8:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    91ec:	mov	x0, x21
    91f0:	bl	7210 <__asan_backtrace_open@plt+0x700>
    91f4:	ldp	x19, x20, [sp]
    91f8:	ldp	x21, x22, [sp, #16]
    91fc:	ldp	x23, x24, [sp, #32]
    9200:	ldp	x25, x26, [sp, #48]
    9204:	ldp	x27, x28, [sp, #64]
    9208:	ldr	x30, [sp, #80]
    920c:	add	sp, sp, #0x2f0
    9210:	ret
    9214:	sub	sp, sp, #0x2e0
    9218:	stp	x21, x22, [sp, #16]
    921c:	add	x22, sp, #0x130
    9220:	stp	x19, x20, [sp]
    9224:	mov	x19, x0
    9228:	mov	x20, x2
    922c:	mov	x2, #0x8                   	// #8
    9230:	stp	x23, x24, [sp, #32]
    9234:	mov	x23, x1
    9238:	mov	x1, x0
    923c:	mov	x0, x22
    9240:	stp	x25, x26, [sp, #48]
    9244:	add	x24, sp, #0xa0
    9248:	add	x25, sp, #0x80
    924c:	str	x30, [sp, #64]
    9250:	str	xzr, [sp, #160]
    9254:	str	wzr, [sp, #184]
    9258:	stp	xzr, xzr, [sp, #192]
    925c:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
    9260:	ldr	x0, [sp, #304]
    9264:	ldrb	w1, [x0]
    9268:	ldrb	w0, [x0, #1]
    926c:	add	w2, w1, w0
    9270:	cmp	w2, #0x1
    9274:	b.hi	9358 <__ubsan_default_options@@Base+0x1304>  // b.pmore
    9278:	ldr	x0, [x20, #8]
    927c:	bl	acac <__ubsan_handle_cfi_check_fail_abort@@Base+0x130>
    9280:	mov	x21, x0
    9284:	ldr	x0, [sp, #160]
    9288:	cmp	x21, x0
    928c:	b.ne	93c0 <__ubsan_default_options@@Base+0x136c>  // b.any
    9290:	str	x21, [sp, #160]
    9294:	mov	w0, #0x3                   	// #3
    9298:	str	x21, [sp, #216]
    929c:	ldr	x21, [x19]
    92a0:	str	w0, [sp, #184]
    92a4:	ldr	x26, [x19, #8]
    92a8:	stp	xzr, xzr, [sp, #192]
    92ac:	add	x19, sp, #0xe0
    92b0:	ldp	x0, x1, [x20]
    92b4:	stp	x0, x1, [sp, #128]
    92b8:	mov	w3, #0x12                  	// #18
    92bc:	ldr	x0, [x20, #16]
    92c0:	str	x0, [sp, #144]
    92c4:	ldp	x0, x1, [sp, #184]
    92c8:	stp	x0, x1, [sp, #80]
    92cc:	add	x20, sp, #0x50
    92d0:	ldp	x0, x1, [sp, #200]
    92d4:	stp	x0, x1, [sp, #96]
    92d8:	mov	x2, x20
    92dc:	ldr	x0, [sp, #216]
    92e0:	mov	x1, x25
    92e4:	str	x0, [sp, #112]
    92e8:	mov	x0, x19
    92ec:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    92f0:	ldp	x0, x1, [sp, #184]
    92f4:	stp	x0, x1, [sp, #80]
    92f8:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    92fc:	ldp	x0, x1, [sp, #200]
    9300:	add	x4, x4, #0x22
    9304:	mov	w3, #0x12                  	// #18
    9308:	mov	w2, #0x0                   	// #0
    930c:	stp	x0, x1, [sp, #96]
    9310:	mov	x1, x20
    9314:	ldr	x0, [sp, #216]
    9318:	str	x0, [sp, #112]
    931c:	mov	x0, x22
    9320:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    9324:	add	x1, sp, #0xa8
    9328:	mov	x0, x22
    932c:	stp	x21, x23, [sp, #168]
    9330:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    9334:	mov	x1, x21
    9338:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    933c:	mov	x1, x26
    9340:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    9344:	mov	x0, x22
    9348:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    934c:	mov	x0, x19
    9350:	bl	7210 <__asan_backtrace_open@plt+0x700>
    9354:	b	939c <__ubsan_default_options@@Base+0x1348>
    9358:	cmp	w1, #0xff
    935c:	b.eq	9278 <__ubsan_default_options@@Base+0x1224>  // b.none
    9360:	cmp	w0, #0xff
    9364:	b.eq	9278 <__ubsan_default_options@@Base+0x1224>  // b.none
    9368:	mov	x0, x19
    936c:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    9370:	ldp	x2, x3, [x20]
    9374:	stp	x2, x3, [sp, #128]
    9378:	mov	x26, x0
    937c:	ldr	x2, [x20, #16]
    9380:	mov	x21, x1
    9384:	mov	w3, #0x12                  	// #18
    9388:	str	x2, [sp, #144]
    938c:	mov	x2, x25
    9390:	bl	8494 <__ubsan_default_options@@Base+0x440>
    9394:	tst	w0, #0xff
    9398:	b.eq	93cc <__ubsan_default_options@@Base+0x1378>  // b.none
    939c:	mov	x0, x24
    93a0:	bl	ac9c <__ubsan_handle_cfi_check_fail_abort@@Base+0x120>
    93a4:	ldp	x19, x20, [sp]
    93a8:	ldp	x21, x22, [sp, #16]
    93ac:	ldp	x23, x24, [sp, #32]
    93b0:	ldp	x25, x26, [sp, #48]
    93b4:	ldr	x30, [sp, #64]
    93b8:	add	sp, sp, #0x2e0
    93bc:	ret
    93c0:	cbz	x0, 9290 <__ubsan_default_options@@Base+0x123c>
    93c4:	bl	1ab00 <__sanitizer_symbolize_global@@Base+0x2518>
    93c8:	b	9290 <__ubsan_default_options@@Base+0x123c>
    93cc:	mov	w0, #0x1                   	// #1
    93d0:	str	w0, [sp, #184]
    93d4:	stp	x26, x21, [sp, #192]
    93d8:	ldp	x21, x26, [x19, #16]
    93dc:	b	92ac <__ubsan_default_options@@Base+0x1258>
    93e0:	sub	sp, sp, #0x300
    93e4:	stp	x19, x20, [sp]
    93e8:	mov	x19, x0
    93ec:	stp	x21, x22, [sp, #16]
    93f0:	mov	x21, x2
    93f4:	stp	x23, x24, [sp, #32]
    93f8:	mov	x24, x1
    93fc:	stp	x25, x26, [sp, #48]
    9400:	stp	x27, x28, [sp, #64]
    9404:	str	x30, [sp, #80]
    9408:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    940c:	mov	x22, x0
    9410:	mov	x20, x1
    9414:	ldr	x0, [x19, #16]
    9418:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    941c:	add	x1, x1, #0x5d
    9420:	add	x0, x0, #0x4
    9424:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
    9428:	cbz	w0, 9448 <__ubsan_default_options@@Base+0x13f4>
    942c:	ldr	x0, [x19, #16]
    9430:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9434:	mov	x2, #0x6                   	// #6
    9438:	add	x1, x1, #0x64
    943c:	add	x0, x0, #0x4
    9440:	bl	12220 <__sanitizer_set_report_fd@@Base+0x1980>
    9444:	cbnz	w0, 9570 <__ubsan_default_options@@Base+0x151c>
    9448:	mov	w26, #0x13                  	// #19
    944c:	ldp	x0, x1, [x21]
    9450:	add	x4, sp, #0xa0
    9454:	stp	x0, x1, [sp, #160]
    9458:	mov	w3, w26
    945c:	mov	x2, x4
    9460:	ldr	x0, [x21, #16]
    9464:	mov	x1, x20
    9468:	str	x4, [sp, #104]
    946c:	str	x0, [sp, #176]
    9470:	mov	x0, x22
    9474:	bl	8494 <__ubsan_default_options@@Base+0x440>
    9478:	tst	w0, #0xff
    947c:	b.ne	9550 <__ubsan_default_options@@Base+0x14fc>  // b.any
    9480:	ldp	x0, x1, [x21]
    9484:	stp	x0, x1, [sp, #160]
    9488:	mov	w28, #0x1                   	// #1
    948c:	str	w28, [sp, #336]
    9490:	lsr	x27, x20, #32
    9494:	str	x22, [sp, #344]
    9498:	add	x25, sp, #0x70
    949c:	str	w20, [sp, #352]
    94a0:	add	x23, sp, #0x100
    94a4:	str	w27, [sp, #356]
    94a8:	mov	w3, w26
    94ac:	ldr	x0, [x21, #16]
    94b0:	str	x0, [sp, #176]
    94b4:	ldr	x4, [sp, #104]
    94b8:	mov	x2, x25
    94bc:	ldp	x0, x1, [sp, #336]
    94c0:	stp	x0, x1, [sp, #112]
    94c4:	add	x21, sp, #0x150
    94c8:	ldp	x0, x1, [sp, #352]
    94cc:	stp	x0, x1, [sp, #128]
    94d0:	ldr	x0, [sp, #368]
    94d4:	mov	x1, x4
    94d8:	str	x0, [sp, #144]
    94dc:	mov	x0, x23
    94e0:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    94e4:	str	w28, [sp, #216]
    94e8:	str	x22, [sp, #224]
    94ec:	mov	w3, w26
    94f0:	stp	w20, w27, [sp, #232]
    94f4:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    94f8:	ldp	x0, x1, [sp, #216]
    94fc:	stp	x0, x1, [sp, #112]
    9500:	add	x4, x4, #0x6b
    9504:	ldp	x0, x1, [sp, #232]
    9508:	stp	x0, x1, [sp, #128]
    950c:	mov	w2, #0x0                   	// #0
    9510:	ldr	x0, [sp, #248]
    9514:	mov	x1, x25
    9518:	str	x0, [sp, #144]
    951c:	mov	x0, x21
    9520:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    9524:	ldr	x0, [x19, #16]
    9528:	add	x1, sp, #0xc8
    952c:	stp	x0, x24, [sp, #200]
    9530:	mov	x0, x21
    9534:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    9538:	ldr	x1, [x19, #16]
    953c:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    9540:	mov	x0, x21
    9544:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    9548:	mov	x0, x23
    954c:	bl	7210 <__asan_backtrace_open@plt+0x700>
    9550:	ldp	x19, x20, [sp]
    9554:	ldp	x21, x22, [sp, #16]
    9558:	ldp	x23, x24, [sp, #32]
    955c:	ldp	x25, x26, [sp, #48]
    9560:	ldp	x27, x28, [sp, #64]
    9564:	ldr	x30, [sp, #80]
    9568:	add	sp, sp, #0x300
    956c:	ret
    9570:	mov	w26, #0x14                  	// #20
    9574:	b	944c <__ubsan_default_options@@Base+0x13f8>
    9578:	sub	sp, sp, #0x320
    957c:	stp	x19, x20, [sp]
    9580:	mov	x19, x0
    9584:	stp	x21, x22, [sp, #16]
    9588:	mov	x21, x1
    958c:	stp	x23, x24, [sp, #32]
    9590:	stp	x25, x26, [sp, #48]
    9594:	mov	x26, x3
    9598:	stp	x27, x28, [sp, #64]
    959c:	mov	x27, x2
    95a0:	str	x30, [sp, #80]
    95a4:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    95a8:	ldp	x25, x23, [x19, #16]
    95ac:	mov	x20, x1
    95b0:	mov	x28, x0
    95b4:	mov	x0, x25
    95b8:	bl	ac10 <__ubsan_handle_cfi_check_fail_abort@@Base+0x94>
    95bc:	and	w24, w0, #0xff
    95c0:	mov	x0, x23
    95c4:	bl	ac10 <__ubsan_handle_cfi_check_fail_abort@@Base+0x94>
    95c8:	and	w22, w0, #0xff
    95cc:	ldrb	w0, [x19, #32]
    95d0:	cmp	w0, #0x1
    95d4:	b.eq	97a0 <__ubsan_default_options@@Base+0x174c>  // b.none
    95d8:	cmp	w0, #0x2
    95dc:	b.eq	97a8 <__ubsan_default_options@@Base+0x1754>  // b.none
    95e0:	cbnz	w0, 97b0 <__ubsan_default_options@@Base+0x175c>
    95e4:	cmp	w24, #0x0
    95e8:	ccmp	w22, #0x0, #0x0, eq  // eq = none
    95ec:	cset	w19, ne  // ne = any
    95f0:	add	w19, w19, #0xa
    95f4:	ldp	x0, x1, [x21]
    95f8:	add	x8, sp, #0xb0
    95fc:	stp	x0, x1, [sp, #176]
    9600:	mov	w3, w19
    9604:	mov	x2, x8
    9608:	ldr	x0, [x21, #16]
    960c:	mov	x1, x20
    9610:	str	x8, [sp, #104]
    9614:	str	x0, [sp, #192]
    9618:	mov	x0, x28
    961c:	bl	8494 <__ubsan_default_options@@Base+0x440>
    9620:	tst	w0, #0xff
    9624:	b.ne	9780 <__ubsan_default_options@@Base+0x172c>  // b.any
    9628:	ldp	x0, x1, [x21]
    962c:	stp	x0, x1, [sp, #176]
    9630:	mov	w7, #0x1                   	// #1
    9634:	str	w7, [sp, #368]
    9638:	lsr	x4, x20, #32
    963c:	str	x28, [sp, #376]
    9640:	add	x5, sp, #0x120
    9644:	str	w20, [sp, #384]
    9648:	add	x6, sp, #0x80
    964c:	str	w4, [sp, #388]
    9650:	mov	w3, w19
    9654:	ldr	x0, [x21, #16]
    9658:	str	x0, [sp, #192]
    965c:	ldr	x8, [sp, #104]
    9660:	mov	x2, x6
    9664:	ldp	x0, x1, [sp, #368]
    9668:	stp	x0, x1, [sp, #128]
    966c:	add	x21, sp, #0x170
    9670:	ldp	x0, x1, [sp, #384]
    9674:	stp	x0, x1, [sp, #144]
    9678:	ldr	x0, [sp, #400]
    967c:	mov	x1, x8
    9680:	stp	x5, x6, [sp, #104]
    9684:	str	x4, [sp, #120]
    9688:	str	x0, [sp, #160]
    968c:	mov	x0, x5
    9690:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    9694:	str	x28, [sp, #256]
    9698:	mov	w7, #0x1                   	// #1
    969c:	str	w7, [sp, #248]
    96a0:	ldp	x6, x4, [sp, #112]
    96a4:	str	w20, [sp, #264]
    96a8:	ldp	x0, x1, [sp, #248]
    96ac:	stp	x0, x1, [sp, #128]
    96b0:	mov	w3, w19
    96b4:	add	x0, sp, #0x200
    96b8:	str	w4, [sp, #268]
    96bc:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    96c0:	add	x4, x4, #0xa7
    96c4:	mov	w2, #0x0                   	// #0
    96c8:	mov	x19, x21
    96cc:	ldp	x0, x1, [x0, #-248]
    96d0:	stp	x0, x1, [sp, #144]
    96d4:	adrp	x21, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    96d8:	ldr	x0, [sp, #280]
    96dc:	mov	x1, x6
    96e0:	str	x0, [sp, #160]
    96e4:	mov	x0, x19
    96e8:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    96ec:	add	x21, x21, #0x6df
    96f0:	mov	x1, x25
    96f4:	mov	x0, x19
    96f8:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    96fc:	stp	x25, x27, [sp, #216]
    9700:	add	x1, sp, #0xd8
    9704:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    9708:	mov	x20, x0
    970c:	mov	x0, x25
    9710:	bl	ac2c <__ubsan_handle_cfi_check_fail_abort@@Base+0xb0>
    9714:	mov	w1, w0
    9718:	mov	x0, x20
    971c:	bl	ad48 <__ubsan_handle_cfi_check_fail_abort@@Base+0x1cc>
    9720:	cmp	w24, #0x0
    9724:	adrp	x20, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9728:	add	x20, x20, #0xa4
    972c:	csel	x1, x21, x20, ne  // ne = any
    9730:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    9734:	mov	x1, x23
    9738:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    973c:	add	x1, sp, #0xe8
    9740:	stp	x23, x26, [sp, #232]
    9744:	bl	70e8 <__asan_backtrace_open@plt+0x5d8>
    9748:	mov	x24, x0
    974c:	mov	x0, x23
    9750:	bl	ac2c <__ubsan_handle_cfi_check_fail_abort@@Base+0xb0>
    9754:	mov	w1, w0
    9758:	mov	x0, x24
    975c:	bl	ad48 <__ubsan_handle_cfi_check_fail_abort@@Base+0x1cc>
    9760:	cmp	w22, #0x0
    9764:	csel	x1, x21, x20, ne  // ne = any
    9768:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    976c:	mov	x0, x19
    9770:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    9774:	ldr	x5, [sp, #104]
    9778:	mov	x0, x5
    977c:	bl	7210 <__asan_backtrace_open@plt+0x700>
    9780:	ldp	x19, x20, [sp]
    9784:	ldp	x21, x22, [sp, #16]
    9788:	ldp	x23, x24, [sp, #32]
    978c:	ldp	x25, x26, [sp, #48]
    9790:	ldp	x27, x28, [sp, #64]
    9794:	ldr	x30, [sp, #80]
    9798:	add	sp, sp, #0x320
    979c:	ret
    97a0:	mov	w19, #0xa                   	// #10
    97a4:	b	95f4 <__ubsan_default_options@@Base+0x15a0>
    97a8:	mov	w19, #0xb                   	// #11
    97ac:	b	95f4 <__ubsan_default_options@@Base+0x15a0>
    97b0:	mov	w19, #0x0                   	// #0
    97b4:	b	95f4 <__ubsan_default_options@@Base+0x15a0>
    97b8:	sub	sp, sp, #0x2e0
    97bc:	stp	x19, x20, [sp]
    97c0:	mov	x19, x2
    97c4:	mov	x20, x1
    97c8:	stp	x21, x22, [sp, #16]
    97cc:	stp	x23, x24, [sp, #32]
    97d0:	mov	x24, x0
    97d4:	stp	x25, x26, [sp, #48]
    97d8:	stp	x27, x28, [sp, #64]
    97dc:	add	x28, sp, #0x90
    97e0:	str	x30, [sp, #80]
    97e4:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    97e8:	ldp	x2, x3, [x19]
    97ec:	stp	x2, x3, [sp, #144]
    97f0:	mov	x22, x0
    97f4:	ldr	x2, [x19, #16]
    97f8:	mov	x21, x1
    97fc:	mov	w3, #0x15                  	// #21
    9800:	str	x2, [sp, #160]
    9804:	mov	x2, x28
    9808:	bl	8494 <__ubsan_default_options@@Base+0x440>
    980c:	tst	w0, #0xff
    9810:	b.ne	9950 <__ubsan_default_options@@Base+0x18fc>  // b.any
    9814:	ldp	x0, x1, [x19]
    9818:	stp	x0, x1, [sp, #144]
    981c:	mov	w23, #0x1                   	// #1
    9820:	str	w23, [sp, #304]
    9824:	lsr	x27, x21, #32
    9828:	str	x22, [sp, #312]
    982c:	add	x25, sp, #0x60
    9830:	str	w21, [sp, #320]
    9834:	mov	x2, x25
    9838:	str	w27, [sp, #324]
    983c:	mov	w3, #0x15                  	// #21
    9840:	ldr	x0, [x19, #16]
    9844:	str	x0, [sp, #160]
    9848:	ldp	x0, x1, [sp, #304]
    984c:	stp	x0, x1, [sp, #96]
    9850:	add	x26, sp, #0xe0
    9854:	ldp	x0, x1, [sp, #320]
    9858:	stp	x0, x1, [sp, #112]
    985c:	mov	x1, x28
    9860:	ldr	x0, [sp, #336]
    9864:	str	x0, [sp, #128]
    9868:	mov	x0, x26
    986c:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    9870:	mov	x0, x20
    9874:	bl	709c <__asan_backtrace_open@plt+0x58c>
    9878:	ldr	x20, [x0, #40]
    987c:	str	x0, [sp, #176]
    9880:	cbnz	x20, 988c <__ubsan_default_options@@Base+0x1838>
    9884:	adrp	x20, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9888:	add	x20, x20, #0x11d
    988c:	str	w23, [sp, #184]
    9890:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9894:	str	x22, [sp, #192]
    9898:	add	x4, x4, #0x127
    989c:	stp	w21, w27, [sp, #200]
    98a0:	add	x19, sp, #0x130
    98a4:	ldp	x0, x1, [sp, #184]
    98a8:	stp	x0, x1, [sp, #96]
    98ac:	mov	w3, #0x15                  	// #21
    98b0:	ldp	x0, x1, [sp, #200]
    98b4:	mov	w2, #0x0                   	// #0
    98b8:	stp	x0, x1, [sp, #112]
    98bc:	mov	x1, x25
    98c0:	ldr	x0, [sp, #216]
    98c4:	str	x0, [sp, #128]
    98c8:	mov	x0, x19
    98cc:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    98d0:	mov	x1, x20
    98d4:	mov	x0, x19
    98d8:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    98dc:	ldr	x1, [x24, #16]
    98e0:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    98e4:	mov	x0, x19
    98e8:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    98ec:	mov	w0, #0x3                   	// #3
    98f0:	str	w0, [sp, #184]
    98f4:	stp	xzr, xzr, [sp, #192]
    98f8:	mov	w3, #0x15                  	// #21
    98fc:	mov	w2, #0x1                   	// #1
    9900:	ldp	x0, x1, [sp, #184]
    9904:	stp	x0, x1, [sp, #96]
    9908:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    990c:	ldp	x0, x1, [sp, #200]
    9910:	stp	x0, x1, [sp, #112]
    9914:	add	x4, x4, #0x169
    9918:	ldr	x0, [sp, #176]
    991c:	mov	x1, x25
    9920:	str	x0, [sp, #128]
    9924:	mov	x0, x19
    9928:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    992c:	mov	x1, x20
    9930:	mov	x0, x19
    9934:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    9938:	mov	x0, x19
    993c:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    9940:	add	x0, sp, #0xb0
    9944:	bl	ac9c <__ubsan_handle_cfi_check_fail_abort@@Base+0x120>
    9948:	mov	x0, x26
    994c:	bl	7210 <__asan_backtrace_open@plt+0x700>
    9950:	ldp	x19, x20, [sp]
    9954:	ldp	x21, x22, [sp, #16]
    9958:	ldp	x23, x24, [sp, #32]
    995c:	ldp	x25, x26, [sp, #48]
    9960:	ldp	x27, x28, [sp, #64]
    9964:	ldr	x30, [sp, #80]
    9968:	add	sp, sp, #0x2e0
    996c:	ret
    9970:	sub	sp, sp, #0x2e0
    9974:	stp	x19, x20, [sp]
    9978:	stp	x21, x22, [sp, #16]
    997c:	stp	x23, x24, [sp, #32]
    9980:	stp	x25, x26, [sp, #48]
    9984:	stp	x27, x28, [sp, #64]
    9988:	str	x30, [sp, #80]
    998c:	cbnz	x1, 99b0 <__ubsan_default_options@@Base+0x195c>
    9990:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9994:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    9998:	add	x2, x2, #0x1b3
    999c:	add	x0, x0, #0xda4
    99a0:	mov	x4, #0x0                   	// #0
    99a4:	mov	x3, #0x0                   	// #0
    99a8:	mov	w1, #0x23f                 	// #575
    99ac:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    99b0:	mov	x19, x2
    99b4:	and	w24, w3, #0xff
    99b8:	mov	x22, x0
    99bc:	mov	x0, x1
    99c0:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    99c4:	add	x28, sp, #0x90
    99c8:	ldp	x2, x3, [x19]
    99cc:	stp	x2, x3, [sp, #144]
    99d0:	mov	x23, x0
    99d4:	ldr	x2, [x19, #16]
    99d8:	mov	x20, x1
    99dc:	mov	w3, #0x16                  	// #22
    99e0:	str	x2, [sp, #160]
    99e4:	mov	x2, x28
    99e8:	bl	8494 <__ubsan_default_options@@Base+0x440>
    99ec:	tst	w0, #0xff
    99f0:	b.ne	9b14 <__ubsan_default_options@@Base+0x1ac0>  // b.any
    99f4:	ldp	x0, x1, [x19]
    99f8:	stp	x0, x1, [sp, #144]
    99fc:	mov	w21, #0x1                   	// #1
    9a00:	str	w21, [sp, #304]
    9a04:	lsr	x27, x20, #32
    9a08:	str	x23, [sp, #312]
    9a0c:	add	x25, sp, #0x60
    9a10:	str	w20, [sp, #320]
    9a14:	add	x26, sp, #0xe0
    9a18:	str	w27, [sp, #324]
    9a1c:	mov	x2, x25
    9a20:	ldr	x0, [x19, #16]
    9a24:	str	x0, [sp, #160]
    9a28:	ldp	x0, x1, [sp, #304]
    9a2c:	stp	x0, x1, [sp, #96]
    9a30:	mov	w3, #0x16                  	// #22
    9a34:	ldp	x0, x1, [sp, #320]
    9a38:	stp	x0, x1, [sp, #112]
    9a3c:	add	x19, sp, #0x130
    9a40:	ldr	x0, [sp, #336]
    9a44:	mov	x1, x28
    9a48:	str	x0, [sp, #128]
    9a4c:	mov	x0, x26
    9a50:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    9a54:	str	w21, [sp, #184]
    9a58:	str	x23, [sp, #192]
    9a5c:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9a60:	stp	w20, w27, [sp, #200]
    9a64:	add	x4, x4, #0x1e6
    9a68:	ldp	x0, x1, [sp, #184]
    9a6c:	stp	x0, x1, [sp, #96]
    9a70:	mov	w3, #0x16                  	// #22
    9a74:	ldp	x0, x1, [sp, #200]
    9a78:	stp	x0, x1, [sp, #112]
    9a7c:	mov	w2, #0x0                   	// #0
    9a80:	mov	x1, x25
    9a84:	ldr	x0, [sp, #216]
    9a88:	str	x0, [sp, #128]
    9a8c:	mov	x0, x19
    9a90:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    9a94:	mov	x0, x19
    9a98:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    9a9c:	ldr	x0, [x22]
    9aa0:	cbz	x0, 9b0c <__ubsan_default_options@@Base+0x1ab8>
    9aa4:	ldr	x1, [x22, #8]
    9aa8:	str	w21, [sp, #184]
    9aac:	stp	x0, x1, [sp, #192]
    9ab0:	mov	w2, w21
    9ab4:	mov	w3, #0x16                  	// #22
    9ab8:	ldp	x0, x1, [sp, #184]
    9abc:	stp	x0, x1, [sp, #96]
    9ac0:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9ac4:	ldp	x0, x1, [sp, #200]
    9ac8:	stp	x0, x1, [sp, #112]
    9acc:	add	x4, x4, #0x228
    9ad0:	ldr	x0, [sp, #216]
    9ad4:	mov	x1, x25
    9ad8:	str	x0, [sp, #128]
    9adc:	mov	x0, x19
    9ae0:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    9ae4:	cmp	w24, #0x0
    9ae8:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9aec:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9af0:	add	x0, x0, #0x193
    9af4:	add	x1, x1, #0x179
    9af8:	csel	x1, x1, x0, ne  // ne = any
    9afc:	mov	x0, x19
    9b00:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    9b04:	mov	x0, x19
    9b08:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    9b0c:	mov	x0, x26
    9b10:	bl	7210 <__asan_backtrace_open@plt+0x700>
    9b14:	ldp	x19, x20, [sp]
    9b18:	ldp	x21, x22, [sp, #16]
    9b1c:	ldp	x23, x24, [sp, #32]
    9b20:	ldp	x25, x26, [sp, #48]
    9b24:	ldp	x27, x28, [sp, #64]
    9b28:	ldr	x30, [sp, #80]
    9b2c:	add	sp, sp, #0x2e0
    9b30:	ret
    9b34:	sub	sp, sp, #0x2e0
    9b38:	stp	x19, x20, [sp]
    9b3c:	mov	x19, x1
    9b40:	mov	x20, x0
    9b44:	stp	x21, x22, [sp, #16]
    9b48:	stp	x23, x24, [sp, #32]
    9b4c:	and	w24, w2, #0xff
    9b50:	stp	x25, x26, [sp, #48]
    9b54:	stp	x27, x28, [sp, #64]
    9b58:	add	x28, sp, #0x90
    9b5c:	str	x30, [sp, #80]
    9b60:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    9b64:	ldp	x2, x3, [x19]
    9b68:	stp	x2, x3, [sp, #144]
    9b6c:	mov	x23, x0
    9b70:	ldr	x2, [x19, #16]
    9b74:	mov	x21, x1
    9b78:	mov	w3, #0x17                  	// #23
    9b7c:	str	x2, [sp, #160]
    9b80:	mov	x2, x28
    9b84:	bl	8494 <__ubsan_default_options@@Base+0x440>
    9b88:	tst	w0, #0xff
    9b8c:	b.ne	9cbc <__ubsan_default_options@@Base+0x1c68>  // b.any
    9b90:	ldp	x0, x1, [x19]
    9b94:	stp	x0, x1, [sp, #144]
    9b98:	mov	w22, #0x1                   	// #1
    9b9c:	str	w22, [sp, #304]
    9ba0:	lsr	x27, x21, #32
    9ba4:	str	x23, [sp, #312]
    9ba8:	add	x25, sp, #0x60
    9bac:	str	w21, [sp, #320]
    9bb0:	add	x26, sp, #0xe0
    9bb4:	str	w27, [sp, #324]
    9bb8:	mov	x2, x25
    9bbc:	ldr	x0, [x19, #16]
    9bc0:	str	x0, [sp, #160]
    9bc4:	ldp	x0, x1, [sp, #304]
    9bc8:	stp	x0, x1, [sp, #96]
    9bcc:	mov	w3, #0x17                  	// #23
    9bd0:	ldp	x0, x1, [sp, #320]
    9bd4:	stp	x0, x1, [sp, #112]
    9bd8:	add	x19, sp, #0x130
    9bdc:	ldr	x0, [sp, #336]
    9be0:	mov	x1, x28
    9be4:	str	x0, [sp, #128]
    9be8:	mov	x0, x26
    9bec:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    9bf0:	str	w22, [sp, #184]
    9bf4:	str	x23, [sp, #192]
    9bf8:	mov	w3, #0x17                  	// #23
    9bfc:	stp	w21, w27, [sp, #200]
    9c00:	mov	w2, #0x0                   	// #0
    9c04:	ldp	x0, x1, [sp, #184]
    9c08:	stp	x0, x1, [sp, #96]
    9c0c:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9c10:	ldp	x0, x1, [sp, #200]
    9c14:	stp	x0, x1, [sp, #112]
    9c18:	add	x4, x4, #0x253
    9c1c:	ldr	x0, [sp, #216]
    9c20:	mov	x1, x25
    9c24:	str	x0, [sp, #128]
    9c28:	mov	x0, x19
    9c2c:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    9c30:	ldrsw	x1, [x20, #32]
    9c34:	mov	x0, x19
    9c38:	bl	ad48 <__ubsan_handle_cfi_check_fail_abort@@Base+0x1cc>
    9c3c:	mov	x0, x19
    9c40:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    9c44:	ldr	x0, [x20, #16]
    9c48:	cbz	x0, 9cb4 <__ubsan_default_options@@Base+0x1c60>
    9c4c:	ldr	x1, [x20, #24]
    9c50:	str	w22, [sp, #184]
    9c54:	stp	x0, x1, [sp, #192]
    9c58:	mov	w2, w22
    9c5c:	mov	w3, #0x17                  	// #23
    9c60:	ldp	x0, x1, [sp, #184]
    9c64:	stp	x0, x1, [sp, #96]
    9c68:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9c6c:	ldp	x0, x1, [sp, #200]
    9c70:	stp	x0, x1, [sp, #112]
    9c74:	add	x4, x4, #0x228
    9c78:	ldr	x0, [sp, #216]
    9c7c:	mov	x1, x25
    9c80:	str	x0, [sp, #128]
    9c84:	mov	x0, x19
    9c88:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    9c8c:	cmp	w24, #0x0
    9c90:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9c94:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9c98:	add	x0, x0, #0x23a
    9c9c:	add	x1, x1, #0x181
    9ca0:	csel	x1, x1, x0, ne  // ne = any
    9ca4:	mov	x0, x19
    9ca8:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    9cac:	mov	x0, x19
    9cb0:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    9cb4:	mov	x0, x26
    9cb8:	bl	7210 <__asan_backtrace_open@plt+0x700>
    9cbc:	ldp	x19, x20, [sp]
    9cc0:	ldp	x21, x22, [sp, #16]
    9cc4:	ldp	x23, x24, [sp, #32]
    9cc8:	ldp	x25, x26, [sp, #48]
    9ccc:	ldp	x27, x28, [sp, #64]
    9cd0:	ldr	x30, [sp, #80]
    9cd4:	add	sp, sp, #0x2e0
    9cd8:	ret
    9cdc:	sub	sp, sp, #0x2e0
    9ce0:	stp	x19, x20, [sp]
    9ce4:	mov	x19, x3
    9ce8:	stp	x21, x22, [sp, #16]
    9cec:	mov	x21, x2
    9cf0:	mov	x22, x1
    9cf4:	stp	x23, x24, [sp, #32]
    9cf8:	stp	x25, x26, [sp, #48]
    9cfc:	stp	x27, x28, [sp, #64]
    9d00:	add	x28, sp, #0x90
    9d04:	str	x30, [sp, #80]
    9d08:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    9d0c:	ldp	x2, x3, [x19]
    9d10:	stp	x2, x3, [sp, #144]
    9d14:	mov	x24, x0
    9d18:	ldr	x2, [x19, #16]
    9d1c:	mov	x23, x1
    9d20:	mov	w3, #0x2                   	// #2
    9d24:	str	x2, [sp, #160]
    9d28:	mov	x2, x28
    9d2c:	bl	8494 <__ubsan_default_options@@Base+0x440>
    9d30:	tst	w0, #0xff
    9d34:	b.ne	9e18 <__ubsan_default_options@@Base+0x1dc4>  // b.any
    9d38:	ldp	x0, x1, [x19]
    9d3c:	stp	x0, x1, [sp, #144]
    9d40:	mov	w26, #0x1                   	// #1
    9d44:	str	w26, [sp, #304]
    9d48:	lsr	x25, x23, #32
    9d4c:	str	x24, [sp, #312]
    9d50:	add	x27, sp, #0xe0
    9d54:	str	w23, [sp, #320]
    9d58:	mov	w3, #0x2                   	// #2
    9d5c:	str	w25, [sp, #324]
    9d60:	add	x20, sp, #0x130
    9d64:	ldr	x0, [x19, #16]
    9d68:	str	x0, [sp, #160]
    9d6c:	ldp	x0, x1, [sp, #304]
    9d70:	stp	x0, x1, [sp, #96]
    9d74:	add	x19, sp, #0x60
    9d78:	ldp	x0, x1, [sp, #320]
    9d7c:	stp	x0, x1, [sp, #112]
    9d80:	mov	x2, x19
    9d84:	ldr	x0, [sp, #336]
    9d88:	mov	x1, x28
    9d8c:	str	x0, [sp, #128]
    9d90:	mov	x0, x27
    9d94:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    9d98:	str	w26, [sp, #184]
    9d9c:	mvn	x0, x22
    9da0:	mvn	x1, x21
    9da4:	str	x24, [sp, #192]
    9da8:	stp	w23, w25, [sp, #200]
    9dac:	lsr	x0, x0, #63
    9db0:	cmp	x0, x1, lsr #63
    9db4:	ldp	x0, x1, [sp, #184]
    9db8:	b.ne	9e44 <__ubsan_default_options@@Base+0x1df0>  // b.any
    9dbc:	stp	x0, x1, [x19]
    9dc0:	cmp	x22, x21
    9dc4:	ldp	x0, x1, [sp, #200]
    9dc8:	stp	x0, x1, [x19, #16]
    9dcc:	ldr	x0, [sp, #216]
    9dd0:	str	x0, [x19, #32]
    9dd4:	b.ls	9e38 <__ubsan_default_options@@Base+0x1de4>  // b.plast
    9dd8:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9ddc:	add	x4, x4, #0x29a
    9de0:	mov	w3, #0x2                   	// #2
    9de4:	mov	w2, #0x0                   	// #0
    9de8:	mov	x1, x19
    9dec:	mov	x0, x20
    9df0:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    9df4:	mov	x1, x22
    9df8:	mov	x0, x20
    9dfc:	bl	ad78 <__ubsan_handle_cfi_check_fail_abort@@Base+0x1fc>
    9e00:	mov	x1, x21
    9e04:	bl	ad78 <__ubsan_handle_cfi_check_fail_abort@@Base+0x1fc>
    9e08:	mov	x0, x20
    9e0c:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    9e10:	mov	x0, x27
    9e14:	bl	7210 <__asan_backtrace_open@plt+0x700>
    9e18:	ldp	x19, x20, [sp]
    9e1c:	ldp	x21, x22, [sp, #16]
    9e20:	ldp	x23, x24, [sp, #32]
    9e24:	ldp	x25, x26, [sp, #48]
    9e28:	ldp	x27, x28, [sp, #64]
    9e2c:	ldr	x30, [sp, #80]
    9e30:	add	sp, sp, #0x2e0
    9e34:	ret
    9e38:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9e3c:	add	x4, x4, #0x2cd
    9e40:	b	9de0 <__ubsan_default_options@@Base+0x1d8c>
    9e44:	stp	x0, x1, [sp, #96]
    9e48:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9e4c:	add	x4, x4, #0x305
    9e50:	ldp	x0, x1, [sp, #200]
    9e54:	stp	x0, x1, [sp, #112]
    9e58:	ldr	x0, [sp, #216]
    9e5c:	str	x0, [sp, #128]
    9e60:	b	9de0 <__ubsan_default_options@@Base+0x1d8c>
    9e64:	sub	sp, sp, #0x2e0
    9e68:	stp	x25, x26, [sp, #48]
    9e6c:	mov	x26, x0
    9e70:	ldrb	w0, [x0]
    9e74:	stp	x19, x20, [sp]
    9e78:	sub	w0, w0, #0x4
    9e7c:	stp	x21, x22, [sp, #16]
    9e80:	and	w0, w0, #0xff
    9e84:	cmp	w0, #0x1
    9e88:	stp	x23, x24, [sp, #32]
    9e8c:	stp	x27, x28, [sp, #64]
    9e90:	str	x30, [sp, #80]
    9e94:	b.ls	9e9c <__ubsan_default_options@@Base+0x1e48>  // b.plast
    9e98:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    9e9c:	mov	x20, x2
    9ea0:	mov	x28, x1
    9ea4:	add	x0, x26, #0x8
    9ea8:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    9eac:	add	x27, sp, #0x90
    9eb0:	mov	x22, x0
    9eb4:	ldp	x2, x3, [x20]
    9eb8:	stp	x2, x3, [sp, #144]
    9ebc:	mov	x21, x1
    9ec0:	ldr	x2, [x20, #16]
    9ec4:	mov	w3, #0x19                  	// #25
    9ec8:	str	x2, [sp, #160]
    9ecc:	mov	x2, x27
    9ed0:	bl	8494 <__ubsan_default_options@@Base+0x440>
    9ed4:	tst	w0, #0xff
    9ed8:	b.ne	a0e8 <__ubsan_default_options@@Base+0x2094>  // b.any
    9edc:	ldp	x0, x1, [x20]
    9ee0:	stp	x0, x1, [sp, #144]
    9ee4:	mov	w19, #0x1                   	// #1
    9ee8:	str	w19, [sp, #304]
    9eec:	lsr	x24, x21, #32
    9ef0:	str	x22, [sp, #312]
    9ef4:	add	x23, sp, #0x60
    9ef8:	str	w21, [sp, #320]
    9efc:	add	x25, sp, #0xe0
    9f00:	str	w24, [sp, #324]
    9f04:	mov	x2, x23
    9f08:	ldr	x0, [x20, #16]
    9f0c:	str	x0, [sp, #160]
    9f10:	ldp	x0, x1, [sp, #304]
    9f14:	stp	x0, x1, [sp, #96]
    9f18:	mov	w3, #0x19                  	// #25
    9f1c:	ldp	x0, x1, [sp, #320]
    9f20:	stp	x0, x1, [sp, #112]
    9f24:	ldr	x0, [sp, #336]
    9f28:	mov	x1, x27
    9f2c:	str	x0, [sp, #128]
    9f30:	mov	x0, x25
    9f34:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    9f38:	str	w19, [sp, #184]
    9f3c:	ldrb	w1, [x26]
    9f40:	adrp	x27, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9f44:	str	x22, [sp, #192]
    9f48:	add	x27, x27, #0x33c
    9f4c:	cmp	w1, #0x5
    9f50:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9f54:	add	x0, x0, #0x368
    9f58:	stp	w21, w24, [sp, #200]
    9f5c:	csel	x27, x27, x0, eq  // eq = none
    9f60:	add	x19, sp, #0x130
    9f64:	ldp	x0, x1, [sp, #184]
    9f68:	stp	x0, x1, [sp, #96]
    9f6c:	mov	w3, #0x19                  	// #25
    9f70:	ldp	x0, x1, [sp, #200]
    9f74:	stp	x0, x1, [sp, #112]
    9f78:	mov	w2, #0x0                   	// #0
    9f7c:	ldr	x0, [sp, #216]
    9f80:	mov	x1, x23
    9f84:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9f88:	add	x4, x4, #0x37f
    9f8c:	str	x0, [sp, #128]
    9f90:	mov	x0, x19
    9f94:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    9f98:	ldr	x1, [x26, #24]
    9f9c:	mov	x0, x19
    9fa0:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    9fa4:	mov	x1, x27
    9fa8:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    9fac:	mov	x0, x19
    9fb0:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    9fb4:	mov	x0, x28
    9fb8:	bl	709c <__asan_backtrace_open@plt+0x58c>
    9fbc:	ldr	x26, [x0, #40]
    9fc0:	str	x0, [sp, #176]
    9fc4:	cbnz	x26, 9fd0 <__ubsan_default_options@@Base+0x1f7c>
    9fc8:	adrp	x26, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9fcc:	add	x26, x26, #0x11d
    9fd0:	mov	w1, #0x3                   	// #3
    9fd4:	str	w1, [sp, #184]
    9fd8:	stp	xzr, xzr, [sp, #192]
    9fdc:	mov	x1, x23
    9fe0:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    9fe4:	ldp	x2, x3, [sp, #184]
    9fe8:	stp	x2, x3, [sp, #96]
    9fec:	add	x4, x4, #0x169
    9ff0:	ldp	x2, x3, [sp, #200]
    9ff4:	stp	x2, x3, [sp, #112]
    9ff8:	str	x0, [sp, #128]
    9ffc:	mov	w3, #0x19                  	// #25
    a000:	mov	w2, #0x1                   	// #1
    a004:	str	x0, [sp, #216]
    a008:	mov	x0, x19
    a00c:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    a010:	mov	x1, x26
    a014:	mov	x0, x19
    a018:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    a01c:	mov	x0, x19
    a020:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    a024:	ldr	x0, [sp, #176]
    a028:	ldr	x26, [x0, #16]
    a02c:	cbnz	x26, a038 <__ubsan_default_options@@Base+0x1fe4>
    a030:	adrp	x26, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    a034:	add	x26, x26, #0x11d
    a038:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
    a03c:	str	xzr, [sp, #184]
    a040:	ldr	x1, [x20, #8]
    a044:	mov	x3, x19
    a048:	add	x2, sp, #0xb8
    a04c:	bl	1b81c <__sanitizer_symbolize_global@@Base+0x3234>
    a050:	tst	w0, #0xff
    a054:	b.ne	a064 <__ubsan_default_options@@Base+0x2010>  // b.any
    a058:	adrp	x20, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    a05c:	add	x20, x20, #0x11d
    a060:	b	a06c <__ubsan_default_options@@Base+0x2018>
    a064:	ldr	x20, [sp, #184]
    a068:	cbz	x20, a058 <__ubsan_default_options@@Base+0x2004>
    a06c:	mov	x1, x26
    a070:	mov	x0, x20
    a074:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
    a078:	cbz	w0, a0d8 <__ubsan_default_options@@Base+0x2084>
    a07c:	mov	w2, #0x1                   	// #1
    a080:	str	w2, [sp, #184]
    a084:	str	x22, [sp, #192]
    a088:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    a08c:	stp	w21, w24, [sp, #200]
    a090:	add	x4, x4, #0x3b9
    a094:	ldp	x0, x1, [sp, #184]
    a098:	stp	x0, x1, [sp, #96]
    a09c:	mov	w3, #0x19                  	// #25
    a0a0:	ldp	x0, x1, [sp, #200]
    a0a4:	stp	x0, x1, [sp, #112]
    a0a8:	ldr	x0, [sp, #216]
    a0ac:	mov	x1, x23
    a0b0:	str	x0, [sp, #128]
    a0b4:	mov	x0, x19
    a0b8:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    a0bc:	mov	x1, x20
    a0c0:	mov	x0, x19
    a0c4:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    a0c8:	mov	x1, x26
    a0cc:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    a0d0:	mov	x0, x19
    a0d4:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    a0d8:	add	x0, sp, #0xb0
    a0dc:	bl	ac9c <__ubsan_handle_cfi_check_fail_abort@@Base+0x120>
    a0e0:	mov	x0, x25
    a0e4:	bl	7210 <__asan_backtrace_open@plt+0x700>
    a0e8:	ldp	x19, x20, [sp]
    a0ec:	ldp	x21, x22, [sp, #16]
    a0f0:	ldp	x23, x24, [sp, #32]
    a0f4:	ldp	x25, x26, [sp, #48]
    a0f8:	ldp	x27, x28, [sp, #64]
    a0fc:	ldr	x30, [sp, #80]
    a100:	add	sp, sp, #0x2e0
    a104:	ret
    a108:	sub	sp, sp, #0x2d0
    a10c:	stp	x19, x20, [sp]
    a110:	mov	x19, x1
    a114:	stp	x21, x22, [sp, #16]
    a118:	stp	x23, x24, [sp, #32]
    a11c:	mov	x23, x0
    a120:	stp	x25, x26, [sp, #48]
    a124:	stp	x27, x30, [sp, #64]
    a128:	bl	abe0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x64>
    a12c:	add	x27, sp, #0x80
    a130:	ldp	x2, x3, [x19]
    a134:	stp	x2, x3, [sp, #128]
    a138:	mov	x24, x0
    a13c:	ldr	x2, [x19, #16]
    a140:	mov	x20, x1
    a144:	mov	w3, #0x9                   	// #9
    a148:	str	x2, [sp, #144]
    a14c:	mov	x2, x27
    a150:	bl	8494 <__ubsan_default_options@@Base+0x440>
    a154:	tst	w0, #0xff
    a158:	b.ne	a230 <__ubsan_default_options@@Base+0x21dc>  // b.any
    a15c:	ldp	x0, x1, [x19]
    a160:	stp	x0, x1, [sp, #128]
    a164:	mov	w26, #0x1                   	// #1
    a168:	str	w26, [sp, #288]
    a16c:	lsr	x25, x20, #32
    a170:	str	x24, [sp, #296]
    a174:	add	x22, sp, #0x50
    a178:	str	w20, [sp, #304]
    a17c:	add	x21, sp, #0xd0
    a180:	str	w25, [sp, #308]
    a184:	mov	x2, x22
    a188:	ldr	x0, [x19, #16]
    a18c:	str	x0, [sp, #144]
    a190:	ldp	x0, x1, [sp, #288]
    a194:	stp	x0, x1, [sp, #80]
    a198:	mov	w3, #0x9                   	// #9
    a19c:	ldp	x0, x1, [sp, #304]
    a1a0:	stp	x0, x1, [sp, #96]
    a1a4:	add	x19, sp, #0x120
    a1a8:	ldr	x0, [sp, #320]
    a1ac:	mov	x1, x27
    a1b0:	str	x0, [sp, #112]
    a1b4:	mov	x0, x21
    a1b8:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    a1bc:	str	w26, [sp, #168]
    a1c0:	str	x24, [sp, #176]
    a1c4:	mov	w3, #0x9                   	// #9
    a1c8:	stp	w20, w25, [sp, #184]
    a1cc:	mov	w2, #0x0                   	// #0
    a1d0:	ldp	x0, x1, [sp, #168]
    a1d4:	stp	x0, x1, [sp, #80]
    a1d8:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    a1dc:	ldp	x0, x1, [sp, #184]
    a1e0:	stp	x0, x1, [sp, #96]
    a1e4:	add	x4, x4, #0x3fc
    a1e8:	ldr	x0, [sp, #200]
    a1ec:	mov	x1, x22
    a1f0:	str	x0, [sp, #112]
    a1f4:	mov	x0, x19
    a1f8:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    a1fc:	ldrb	w2, [x23, #16]
    a200:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    a204:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    a208:	add	x0, x0, #0x3f6
    a20c:	cmp	w2, #0x0
    a210:	add	x1, x1, #0x3f0
    a214:	csel	x1, x1, x0, eq  // eq = none
    a218:	mov	x0, x19
    a21c:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    a220:	mov	x0, x19
    a224:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    a228:	mov	x0, x21
    a22c:	bl	7210 <__asan_backtrace_open@plt+0x700>
    a230:	ldp	x19, x20, [sp]
    a234:	ldp	x21, x22, [sp, #16]
    a238:	ldp	x23, x24, [sp, #32]
    a23c:	ldp	x25, x26, [sp, #48]
    a240:	ldp	x27, x30, [sp, #64]
    a244:	add	sp, sp, #0x2d0
    a248:	ret

000000000000a24c <__ubsan_handle_type_mismatch_v1@@Base>:
    a24c:	stp	x29, x30, [sp, #-80]!
    a250:	mov	x29, sp
    a254:	stp	xzr, x30, [x29, #56]
    a258:	ldp	x2, x3, [x29, #56]
    a25c:	stp	x2, x3, [x29, #16]
    a260:	add	x2, x29, #0x10
    a264:	str	x29, [x29, #32]
    a268:	bl	84d0 <__ubsan_default_options@@Base+0x47c>
    a26c:	ldp	x29, x30, [sp], #80
    a270:	ret

000000000000a274 <__ubsan_handle_type_mismatch_v1_abort@@Base>:
    a274:	stp	x29, x30, [sp, #-80]!
    a278:	mov	w2, #0x1                   	// #1
    a27c:	mov	x29, sp
    a280:	strb	w2, [x29, #56]
    a284:	stur	wzr, [x29, #57]
    a288:	sturh	wzr, [x29, #61]
    a28c:	strb	wzr, [x29, #63]
    a290:	str	x30, [x29, #64]
    a294:	str	x29, [x29, #32]
    a298:	ldp	x2, x3, [x29, #56]
    a29c:	stp	x2, x3, [x29, #16]
    a2a0:	add	x2, x29, #0x10
    a2a4:	bl	84d0 <__ubsan_default_options@@Base+0x47c>
    a2a8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a2ac <__ubsan_handle_add_overflow@@Base>:
    a2ac:	stp	x29, x30, [sp, #-80]!
    a2b0:	mov	x29, sp
    a2b4:	ldr	x3, [x0, #16]
    a2b8:	stp	xzr, x30, [x29, #56]
    a2bc:	ldp	x4, x5, [x29, #56]
    a2c0:	stp	x4, x5, [x29, #16]
    a2c4:	add	x5, x29, #0x10
    a2c8:	mov	x4, x2
    a2cc:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
    a2d0:	add	x2, x2, #0x917
    a2d4:	str	x29, [x29, #32]
    a2d8:	bl	87c4 <__ubsan_default_options@@Base+0x770>
    a2dc:	ldp	x29, x30, [sp], #80
    a2e0:	ret

000000000000a2e4 <__ubsan_handle_add_overflow_abort@@Base>:
    a2e4:	stp	x29, x30, [sp, #-80]!
    a2e8:	mov	w3, #0x1                   	// #1
    a2ec:	mov	x29, sp
    a2f0:	strb	w3, [x29, #56]
    a2f4:	stur	wzr, [x29, #57]
    a2f8:	sturh	wzr, [x29, #61]
    a2fc:	strb	wzr, [x29, #63]
    a300:	str	x30, [x29, #64]
    a304:	ldr	x3, [x0, #16]
    a308:	str	x29, [x29, #32]
    a30c:	ldp	x4, x5, [x29, #56]
    a310:	stp	x4, x5, [x29, #16]
    a314:	mov	x4, x2
    a318:	add	x5, x29, #0x10
    a31c:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
    a320:	add	x2, x2, #0x917
    a324:	bl	87c4 <__ubsan_default_options@@Base+0x770>
    a328:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a32c <__ubsan_handle_sub_overflow@@Base>:
    a32c:	stp	x29, x30, [sp, #-80]!
    a330:	mov	x29, sp
    a334:	ldr	x3, [x0, #16]
    a338:	stp	xzr, x30, [x29, #56]
    a33c:	ldp	x4, x5, [x29, #56]
    a340:	stp	x4, x5, [x29, #16]
    a344:	add	x5, x29, #0x10
    a348:	mov	x4, x2
    a34c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    a350:	add	x2, x2, #0x73d
    a354:	str	x29, [x29, #32]
    a358:	bl	87c4 <__ubsan_default_options@@Base+0x770>
    a35c:	ldp	x29, x30, [sp], #80
    a360:	ret

000000000000a364 <__ubsan_handle_sub_overflow_abort@@Base>:
    a364:	stp	x29, x30, [sp, #-80]!
    a368:	mov	w3, #0x1                   	// #1
    a36c:	mov	x29, sp
    a370:	strb	w3, [x29, #56]
    a374:	stur	wzr, [x29, #57]
    a378:	sturh	wzr, [x29, #61]
    a37c:	strb	wzr, [x29, #63]
    a380:	str	x30, [x29, #64]
    a384:	ldr	x3, [x0, #16]
    a388:	str	x29, [x29, #32]
    a38c:	ldp	x4, x5, [x29, #56]
    a390:	stp	x4, x5, [x29, #16]
    a394:	mov	x4, x2
    a398:	add	x5, x29, #0x10
    a39c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    a3a0:	add	x2, x2, #0x73d
    a3a4:	bl	87c4 <__ubsan_default_options@@Base+0x770>
    a3a8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a3ac <__ubsan_handle_mul_overflow@@Base>:
    a3ac:	stp	x29, x30, [sp, #-80]!
    a3b0:	mov	x29, sp
    a3b4:	ldr	x3, [x0, #16]
    a3b8:	stp	xzr, x30, [x29, #56]
    a3bc:	ldp	x4, x5, [x29, #56]
    a3c0:	stp	x4, x5, [x29, #16]
    a3c4:	add	x5, x29, #0x10
    a3c8:	mov	x4, x2
    a3cc:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
    a3d0:	add	x2, x2, #0x892
    a3d4:	str	x29, [x29, #32]
    a3d8:	bl	87c4 <__ubsan_default_options@@Base+0x770>
    a3dc:	ldp	x29, x30, [sp], #80
    a3e0:	ret

000000000000a3e4 <__ubsan_handle_mul_overflow_abort@@Base>:
    a3e4:	stp	x29, x30, [sp, #-80]!
    a3e8:	mov	w3, #0x1                   	// #1
    a3ec:	mov	x29, sp
    a3f0:	strb	w3, [x29, #56]
    a3f4:	stur	wzr, [x29, #57]
    a3f8:	sturh	wzr, [x29, #61]
    a3fc:	strb	wzr, [x29, #63]
    a400:	str	x30, [x29, #64]
    a404:	ldr	x3, [x0, #16]
    a408:	str	x29, [x29, #32]
    a40c:	ldp	x4, x5, [x29, #56]
    a410:	stp	x4, x5, [x29, #16]
    a414:	mov	x4, x2
    a418:	add	x5, x29, #0x10
    a41c:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
    a420:	add	x2, x2, #0x892
    a424:	bl	87c4 <__ubsan_default_options@@Base+0x770>
    a428:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a42c <__ubsan_handle_negate_overflow@@Base>:
    a42c:	stp	x29, x30, [sp, #-80]!
    a430:	mov	x29, sp
    a434:	stp	xzr, x30, [x29, #56]
    a438:	ldp	x2, x3, [x29, #56]
    a43c:	stp	x2, x3, [x29, #16]
    a440:	add	x2, x29, #0x10
    a444:	str	x29, [x29, #32]
    a448:	bl	897c <__ubsan_default_options@@Base+0x928>
    a44c:	ldp	x29, x30, [sp], #80
    a450:	ret

000000000000a454 <__ubsan_handle_negate_overflow_abort@@Base>:
    a454:	stp	x29, x30, [sp, #-80]!
    a458:	mov	w2, #0x1                   	// #1
    a45c:	mov	x29, sp
    a460:	strb	w2, [x29, #56]
    a464:	stur	wzr, [x29, #57]
    a468:	sturh	wzr, [x29, #61]
    a46c:	strb	wzr, [x29, #63]
    a470:	str	x30, [x29, #64]
    a474:	str	x29, [x29, #32]
    a478:	ldp	x2, x3, [x29, #56]
    a47c:	stp	x2, x3, [x29, #16]
    a480:	add	x2, x29, #0x10
    a484:	bl	897c <__ubsan_default_options@@Base+0x928>
    a488:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a48c <__ubsan_handle_divrem_overflow@@Base>:
    a48c:	stp	x29, x30, [sp, #-80]!
    a490:	mov	x29, sp
    a494:	add	x3, x29, #0x10
    a498:	stp	xzr, x30, [x29, #56]
    a49c:	ldp	x4, x5, [x29, #56]
    a4a0:	stp	x4, x5, [x29, #16]
    a4a4:	str	x29, [x29, #32]
    a4a8:	bl	8b30 <__ubsan_default_options@@Base+0xadc>
    a4ac:	ldp	x29, x30, [sp], #80
    a4b0:	ret

000000000000a4b4 <__ubsan_handle_divrem_overflow_abort@@Base>:
    a4b4:	stp	x29, x30, [sp, #-80]!
    a4b8:	mov	w3, #0x1                   	// #1
    a4bc:	mov	x29, sp
    a4c0:	strb	w3, [x29, #56]
    a4c4:	add	x3, x29, #0x10
    a4c8:	stur	wzr, [x29, #57]
    a4cc:	sturh	wzr, [x29, #61]
    a4d0:	strb	wzr, [x29, #63]
    a4d4:	str	x30, [x29, #64]
    a4d8:	str	x29, [x29, #32]
    a4dc:	ldp	x4, x5, [x29, #56]
    a4e0:	stp	x4, x5, [x29, #16]
    a4e4:	bl	8b30 <__ubsan_default_options@@Base+0xadc>
    a4e8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a4ec <__ubsan_handle_shift_out_of_bounds@@Base>:
    a4ec:	stp	x29, x30, [sp, #-80]!
    a4f0:	mov	x29, sp
    a4f4:	add	x3, x29, #0x10
    a4f8:	stp	xzr, x30, [x29, #56]
    a4fc:	ldp	x4, x5, [x29, #56]
    a500:	stp	x4, x5, [x29, #16]
    a504:	str	x29, [x29, #32]
    a508:	bl	8cf0 <__ubsan_default_options@@Base+0xc9c>
    a50c:	ldp	x29, x30, [sp], #80
    a510:	ret

000000000000a514 <__ubsan_handle_shift_out_of_bounds_abort@@Base>:
    a514:	stp	x29, x30, [sp, #-80]!
    a518:	mov	w3, #0x1                   	// #1
    a51c:	mov	x29, sp
    a520:	strb	w3, [x29, #56]
    a524:	add	x3, x29, #0x10
    a528:	stur	wzr, [x29, #57]
    a52c:	sturh	wzr, [x29, #61]
    a530:	strb	wzr, [x29, #63]
    a534:	str	x30, [x29, #64]
    a538:	str	x29, [x29, #32]
    a53c:	ldp	x4, x5, [x29, #56]
    a540:	stp	x4, x5, [x29, #16]
    a544:	bl	8cf0 <__ubsan_default_options@@Base+0xc9c>
    a548:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a54c <__ubsan_handle_out_of_bounds@@Base>:
    a54c:	stp	x29, x30, [sp, #-80]!
    a550:	mov	x29, sp
    a554:	stp	xzr, x30, [x29, #56]
    a558:	ldp	x2, x3, [x29, #56]
    a55c:	stp	x2, x3, [x29, #16]
    a560:	add	x2, x29, #0x10
    a564:	str	x29, [x29, #32]
    a568:	bl	8f8c <__ubsan_default_options@@Base+0xf38>
    a56c:	ldp	x29, x30, [sp], #80
    a570:	ret

000000000000a574 <__ubsan_handle_out_of_bounds_abort@@Base>:
    a574:	stp	x29, x30, [sp, #-80]!
    a578:	mov	w2, #0x1                   	// #1
    a57c:	mov	x29, sp
    a580:	strb	w2, [x29, #56]
    a584:	stur	wzr, [x29, #57]
    a588:	sturh	wzr, [x29, #61]
    a58c:	strb	wzr, [x29, #63]
    a590:	str	x30, [x29, #64]
    a594:	str	x29, [x29, #32]
    a598:	ldp	x2, x3, [x29, #56]
    a59c:	stp	x2, x3, [x29, #16]
    a5a0:	add	x2, x29, #0x10
    a5a4:	bl	8f8c <__ubsan_default_options@@Base+0xf38>
    a5a8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a5ac <__ubsan_handle_builtin_unreachable@@Base>:
    a5ac:	stp	x29, x30, [sp, #-80]!
    a5b0:	mov	w1, #0x1                   	// #1
    a5b4:	mov	x29, sp
    a5b8:	strb	w1, [x29, #56]
    a5bc:	add	x1, x29, #0x10
    a5c0:	stur	wzr, [x29, #57]
    a5c4:	sturh	wzr, [x29, #61]
    a5c8:	strb	wzr, [x29, #63]
    a5cc:	str	x30, [x29, #64]
    a5d0:	str	x29, [x29, #32]
    a5d4:	ldp	x2, x3, [x29, #56]
    a5d8:	stp	x2, x3, [x29, #16]
    a5dc:	bl	83c4 <__ubsan_default_options@@Base+0x370>
    a5e0:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a5e4 <__ubsan_handle_missing_return@@Base>:
    a5e4:	stp	x29, x30, [sp, #-80]!
    a5e8:	mov	w1, #0x1                   	// #1
    a5ec:	mov	x29, sp
    a5f0:	strb	w1, [x29, #56]
    a5f4:	add	x1, x29, #0x10
    a5f8:	stur	wzr, [x29, #57]
    a5fc:	sturh	wzr, [x29, #61]
    a600:	strb	wzr, [x29, #63]
    a604:	str	x30, [x29, #64]
    a608:	str	x29, [x29, #32]
    a60c:	ldp	x2, x3, [x29, #56]
    a610:	stp	x2, x3, [x29, #16]
    a614:	bl	82f4 <__ubsan_default_options@@Base+0x2a0>
    a618:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a61c <__ubsan_handle_vla_bound_not_positive@@Base>:
    a61c:	stp	x29, x30, [sp, #-80]!
    a620:	mov	x29, sp
    a624:	stp	xzr, x30, [x29, #56]
    a628:	ldp	x2, x3, [x29, #56]
    a62c:	stp	x2, x3, [x29, #16]
    a630:	add	x2, x29, #0x10
    a634:	str	x29, [x29, #32]
    a638:	bl	90d4 <__ubsan_default_options@@Base+0x1080>
    a63c:	ldp	x29, x30, [sp], #80
    a640:	ret

000000000000a644 <__ubsan_handle_vla_bound_not_positive_abort@@Base>:
    a644:	stp	x29, x30, [sp, #-80]!
    a648:	mov	w2, #0x1                   	// #1
    a64c:	mov	x29, sp
    a650:	strb	w2, [x29, #56]
    a654:	stur	wzr, [x29, #57]
    a658:	sturh	wzr, [x29, #61]
    a65c:	strb	wzr, [x29, #63]
    a660:	str	x30, [x29, #64]
    a664:	str	x29, [x29, #32]
    a668:	ldp	x2, x3, [x29, #56]
    a66c:	stp	x2, x3, [x29, #16]
    a670:	add	x2, x29, #0x10
    a674:	bl	90d4 <__ubsan_default_options@@Base+0x1080>
    a678:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a67c <__ubsan_handle_float_cast_overflow@@Base>:
    a67c:	stp	x29, x30, [sp, #-80]!
    a680:	mov	x29, sp
    a684:	stp	xzr, x30, [x29, #56]
    a688:	ldp	x2, x3, [x29, #56]
    a68c:	stp	x2, x3, [x29, #16]
    a690:	add	x2, x29, #0x10
    a694:	str	x29, [x29, #32]
    a698:	bl	9214 <__ubsan_default_options@@Base+0x11c0>
    a69c:	ldp	x29, x30, [sp], #80
    a6a0:	ret

000000000000a6a4 <__ubsan_handle_float_cast_overflow_abort@@Base>:
    a6a4:	stp	x29, x30, [sp, #-80]!
    a6a8:	mov	w2, #0x1                   	// #1
    a6ac:	mov	x29, sp
    a6b0:	strb	w2, [x29, #56]
    a6b4:	stur	wzr, [x29, #57]
    a6b8:	sturh	wzr, [x29, #61]
    a6bc:	strb	wzr, [x29, #63]
    a6c0:	str	x30, [x29, #64]
    a6c4:	str	x29, [x29, #32]
    a6c8:	ldp	x2, x3, [x29, #56]
    a6cc:	stp	x2, x3, [x29, #16]
    a6d0:	add	x2, x29, #0x10
    a6d4:	bl	9214 <__ubsan_default_options@@Base+0x11c0>
    a6d8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a6dc <__ubsan_handle_load_invalid_value@@Base>:
    a6dc:	stp	x29, x30, [sp, #-80]!
    a6e0:	mov	x29, sp
    a6e4:	stp	xzr, x30, [x29, #56]
    a6e8:	ldp	x2, x3, [x29, #56]
    a6ec:	stp	x2, x3, [x29, #16]
    a6f0:	add	x2, x29, #0x10
    a6f4:	str	x29, [x29, #32]
    a6f8:	bl	93e0 <__ubsan_default_options@@Base+0x138c>
    a6fc:	ldp	x29, x30, [sp], #80
    a700:	ret

000000000000a704 <__ubsan_handle_load_invalid_value_abort@@Base>:
    a704:	stp	x29, x30, [sp, #-80]!
    a708:	mov	w2, #0x1                   	// #1
    a70c:	mov	x29, sp
    a710:	strb	w2, [x29, #56]
    a714:	stur	wzr, [x29, #57]
    a718:	sturh	wzr, [x29, #61]
    a71c:	strb	wzr, [x29, #63]
    a720:	str	x30, [x29, #64]
    a724:	str	x29, [x29, #32]
    a728:	ldp	x2, x3, [x29, #56]
    a72c:	stp	x2, x3, [x29, #16]
    a730:	add	x2, x29, #0x10
    a734:	bl	93e0 <__ubsan_default_options@@Base+0x138c>
    a738:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a73c <__ubsan_handle_implicit_conversion@@Base>:
    a73c:	stp	x29, x30, [sp, #-80]!
    a740:	mov	x3, x2
    a744:	mov	x2, x1
    a748:	mov	x29, sp
    a74c:	add	x1, x29, #0x10
    a750:	stp	xzr, x30, [x29, #56]
    a754:	ldp	x4, x5, [x29, #56]
    a758:	stp	x4, x5, [x29, #16]
    a75c:	str	x29, [x29, #32]
    a760:	bl	9578 <__ubsan_default_options@@Base+0x1524>
    a764:	ldp	x29, x30, [sp], #80
    a768:	ret

000000000000a76c <__ubsan_handle_implicit_conversion_abort@@Base>:
    a76c:	stp	x29, x30, [sp, #-80]!
    a770:	mov	w3, #0x1                   	// #1
    a774:	mov	x29, sp
    a778:	strb	w3, [x29, #56]
    a77c:	mov	x3, x2
    a780:	stur	wzr, [x29, #57]
    a784:	mov	x2, x1
    a788:	sturh	wzr, [x29, #61]
    a78c:	add	x1, x29, #0x10
    a790:	strb	wzr, [x29, #63]
    a794:	str	x30, [x29, #64]
    a798:	str	x29, [x29, #32]
    a79c:	ldp	x4, x5, [x29, #56]
    a7a0:	stp	x4, x5, [x29, #16]
    a7a4:	bl	9578 <__ubsan_default_options@@Base+0x1524>
    a7a8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a7ac <__ubsan_handle_invalid_builtin@@Base>:
    a7ac:	stp	x29, x30, [sp, #-80]!
    a7b0:	mov	w1, #0x1                   	// #1
    a7b4:	mov	x29, sp
    a7b8:	strb	w1, [x29, #56]
    a7bc:	add	x1, x29, #0x10
    a7c0:	stur	wzr, [x29, #57]
    a7c4:	sturh	wzr, [x29, #61]
    a7c8:	strb	wzr, [x29, #63]
    a7cc:	str	x30, [x29, #64]
    a7d0:	str	x29, [x29, #32]
    a7d4:	ldp	x2, x3, [x29, #56]
    a7d8:	stp	x2, x3, [x29, #16]
    a7dc:	bl	a108 <__ubsan_default_options@@Base+0x20b4>
    a7e0:	ldp	x29, x30, [sp], #80
    a7e4:	ret

000000000000a7e8 <__ubsan_handle_invalid_builtin_abort@@Base>:
    a7e8:	stp	x29, x30, [sp, #-80]!
    a7ec:	mov	w1, #0x1                   	// #1
    a7f0:	mov	x29, sp
    a7f4:	strb	w1, [x29, #56]
    a7f8:	add	x1, x29, #0x10
    a7fc:	stur	wzr, [x29, #57]
    a800:	sturh	wzr, [x29, #61]
    a804:	strb	wzr, [x29, #63]
    a808:	str	x30, [x29, #64]
    a80c:	str	x29, [x29, #32]
    a810:	ldp	x2, x3, [x29, #56]
    a814:	stp	x2, x3, [x29, #16]
    a818:	bl	a108 <__ubsan_default_options@@Base+0x20b4>
    a81c:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a820 <__ubsan_handle_function_type_mismatch@@Base>:
    a820:	stp	x29, x30, [sp, #-80]!
    a824:	mov	x29, sp
    a828:	stp	xzr, x30, [x29, #56]
    a82c:	ldp	x2, x3, [x29, #56]
    a830:	stp	x2, x3, [x29, #16]
    a834:	add	x2, x29, #0x10
    a838:	str	x29, [x29, #32]
    a83c:	bl	97b8 <__ubsan_default_options@@Base+0x1764>
    a840:	ldp	x29, x30, [sp], #80
    a844:	ret

000000000000a848 <__ubsan_handle_function_type_mismatch_abort@@Base>:
    a848:	stp	x29, x30, [sp, #-80]!
    a84c:	mov	w2, #0x1                   	// #1
    a850:	mov	x29, sp
    a854:	strb	w2, [x29, #56]
    a858:	stur	wzr, [x29, #57]
    a85c:	sturh	wzr, [x29, #61]
    a860:	strb	wzr, [x29, #63]
    a864:	str	x30, [x29, #64]
    a868:	str	x29, [x29, #32]
    a86c:	ldp	x2, x3, [x29, #56]
    a870:	stp	x2, x3, [x29, #16]
    a874:	add	x2, x29, #0x10
    a878:	bl	97b8 <__ubsan_default_options@@Base+0x1764>
    a87c:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a880 <__ubsan_handle_nonnull_return_v1@@Base>:
    a880:	stp	x29, x30, [sp, #-80]!
    a884:	mov	x29, sp
    a888:	stp	xzr, x30, [x29, #56]
    a88c:	ldp	x2, x3, [x29, #56]
    a890:	stp	x2, x3, [x29, #16]
    a894:	add	x2, x29, #0x10
    a898:	str	x29, [x29, #32]
    a89c:	mov	w3, #0x1                   	// #1
    a8a0:	bl	9970 <__ubsan_default_options@@Base+0x191c>
    a8a4:	ldp	x29, x30, [sp], #80
    a8a8:	ret

000000000000a8ac <__ubsan_handle_nonnull_return_v1_abort@@Base>:
    a8ac:	stp	x29, x30, [sp, #-80]!
    a8b0:	mov	w3, #0x1                   	// #1
    a8b4:	mov	x29, sp
    a8b8:	add	x2, x29, #0x10
    a8bc:	strb	w3, [x29, #56]
    a8c0:	stur	wzr, [x29, #57]
    a8c4:	sturh	wzr, [x29, #61]
    a8c8:	strb	wzr, [x29, #63]
    a8cc:	str	x30, [x29, #64]
    a8d0:	str	x29, [x29, #32]
    a8d4:	ldp	x4, x5, [x29, #56]
    a8d8:	stp	x4, x5, [x29, #16]
    a8dc:	bl	9970 <__ubsan_default_options@@Base+0x191c>
    a8e0:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a8e4 <__ubsan_handle_nullability_return_v1@@Base>:
    a8e4:	stp	x29, x30, [sp, #-80]!
    a8e8:	mov	x29, sp
    a8ec:	stp	xzr, x30, [x29, #56]
    a8f0:	ldp	x2, x3, [x29, #56]
    a8f4:	stp	x2, x3, [x29, #16]
    a8f8:	add	x2, x29, #0x10
    a8fc:	str	x29, [x29, #32]
    a900:	mov	w3, #0x0                   	// #0
    a904:	bl	9970 <__ubsan_default_options@@Base+0x191c>
    a908:	ldp	x29, x30, [sp], #80
    a90c:	ret

000000000000a910 <__ubsan_handle_nullability_return_v1_abort@@Base>:
    a910:	stp	x29, x30, [sp, #-80]!
    a914:	mov	w2, #0x1                   	// #1
    a918:	mov	x29, sp
    a91c:	strb	w2, [x29, #56]
    a920:	stur	wzr, [x29, #57]
    a924:	sturh	wzr, [x29, #61]
    a928:	strb	wzr, [x29, #63]
    a92c:	str	x30, [x29, #64]
    a930:	str	x29, [x29, #32]
    a934:	ldp	x2, x3, [x29, #56]
    a938:	stp	x2, x3, [x29, #16]
    a93c:	add	x2, x29, #0x10
    a940:	mov	w3, #0x0                   	// #0
    a944:	bl	9970 <__ubsan_default_options@@Base+0x191c>
    a948:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a94c <__ubsan_handle_nonnull_arg@@Base>:
    a94c:	stp	x29, x30, [sp, #-80]!
    a950:	mov	x29, sp
    a954:	add	x1, x29, #0x10
    a958:	stp	xzr, x30, [x29, #56]
    a95c:	ldp	x2, x3, [x29, #56]
    a960:	stp	x2, x3, [x29, #16]
    a964:	str	x29, [x29, #32]
    a968:	mov	w2, #0x1                   	// #1
    a96c:	bl	9b34 <__ubsan_default_options@@Base+0x1ae0>
    a970:	ldp	x29, x30, [sp], #80
    a974:	ret

000000000000a978 <__ubsan_handle_nonnull_arg_abort@@Base>:
    a978:	stp	x29, x30, [sp, #-80]!
    a97c:	mov	w2, #0x1                   	// #1
    a980:	mov	x29, sp
    a984:	add	x1, x29, #0x10
    a988:	strb	w2, [x29, #56]
    a98c:	stur	wzr, [x29, #57]
    a990:	sturh	wzr, [x29, #61]
    a994:	strb	wzr, [x29, #63]
    a998:	str	x30, [x29, #64]
    a99c:	str	x29, [x29, #32]
    a9a0:	ldp	x4, x5, [x29, #56]
    a9a4:	stp	x4, x5, [x29, #16]
    a9a8:	bl	9b34 <__ubsan_default_options@@Base+0x1ae0>
    a9ac:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000a9b0 <__ubsan_handle_nullability_arg@@Base>:
    a9b0:	stp	x29, x30, [sp, #-80]!
    a9b4:	mov	x29, sp
    a9b8:	add	x1, x29, #0x10
    a9bc:	stp	xzr, x30, [x29, #56]
    a9c0:	ldp	x2, x3, [x29, #56]
    a9c4:	stp	x2, x3, [x29, #16]
    a9c8:	str	x29, [x29, #32]
    a9cc:	mov	w2, #0x0                   	// #0
    a9d0:	bl	9b34 <__ubsan_default_options@@Base+0x1ae0>
    a9d4:	ldp	x29, x30, [sp], #80
    a9d8:	ret

000000000000a9dc <__ubsan_handle_nullability_arg_abort@@Base>:
    a9dc:	stp	x29, x30, [sp, #-80]!
    a9e0:	mov	w1, #0x1                   	// #1
    a9e4:	mov	x29, sp
    a9e8:	strb	w1, [x29, #56]
    a9ec:	add	x1, x29, #0x10
    a9f0:	stur	wzr, [x29, #57]
    a9f4:	sturh	wzr, [x29, #61]
    a9f8:	strb	wzr, [x29, #63]
    a9fc:	str	x30, [x29, #64]
    aa00:	str	x29, [x29, #32]
    aa04:	ldp	x2, x3, [x29, #56]
    aa08:	stp	x2, x3, [x29, #16]
    aa0c:	mov	w2, #0x0                   	// #0
    aa10:	bl	9b34 <__ubsan_default_options@@Base+0x1ae0>
    aa14:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000aa18 <__ubsan_handle_pointer_overflow@@Base>:
    aa18:	stp	x29, x30, [sp, #-80]!
    aa1c:	mov	x29, sp
    aa20:	add	x3, x29, #0x10
    aa24:	stp	xzr, x30, [x29, #56]
    aa28:	ldp	x4, x5, [x29, #56]
    aa2c:	stp	x4, x5, [x29, #16]
    aa30:	str	x29, [x29, #32]
    aa34:	bl	9cdc <__ubsan_default_options@@Base+0x1c88>
    aa38:	ldp	x29, x30, [sp], #80
    aa3c:	ret

000000000000aa40 <__ubsan_handle_pointer_overflow_abort@@Base>:
    aa40:	stp	x29, x30, [sp, #-80]!
    aa44:	mov	w3, #0x1                   	// #1
    aa48:	mov	x29, sp
    aa4c:	strb	w3, [x29, #56]
    aa50:	add	x3, x29, #0x10
    aa54:	stur	wzr, [x29, #57]
    aa58:	sturh	wzr, [x29, #61]
    aa5c:	strb	wzr, [x29, #63]
    aa60:	str	x30, [x29, #64]
    aa64:	str	x29, [x29, #32]
    aa68:	ldp	x4, x5, [x29, #56]
    aa6c:	stp	x4, x5, [x29, #16]
    aa70:	bl	9cdc <__ubsan_default_options@@Base+0x1c88>
    aa74:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000aa78 <__ubsan_handle_cfi_bad_icall@@Base>:
    aa78:	stp	x29, x30, [sp, #-112]!
    aa7c:	mov	w2, #0x4                   	// #4
    aa80:	mov	x29, sp
    aa84:	stp	xzr, x30, [x29, #56]
    aa88:	strb	w2, [x29, #80]
    aa8c:	ldp	x2, x3, [x0]
    aa90:	stp	x2, x3, [x29, #88]
    aa94:	ldp	x2, x3, [x29, #56]
    aa98:	stur	wzr, [x29, #81]
    aa9c:	ldr	x0, [x0, #16]
    aaa0:	stp	x2, x3, [x29, #16]
    aaa4:	add	x2, x29, #0x10
    aaa8:	str	x29, [x29, #32]
    aaac:	sturh	wzr, [x29, #85]
    aab0:	strb	wzr, [x29, #87]
    aab4:	str	x0, [x29, #104]
    aab8:	add	x0, x29, #0x50
    aabc:	bl	9e64 <__ubsan_default_options@@Base+0x1e10>
    aac0:	ldp	x29, x30, [sp], #112
    aac4:	ret

000000000000aac8 <__ubsan_handle_cfi_bad_icall_abort@@Base>:
    aac8:	stp	x29, x30, [sp, #-112]!
    aacc:	mov	w2, #0x1                   	// #1
    aad0:	mov	x29, sp
    aad4:	strb	w2, [x29, #56]
    aad8:	mov	w2, #0x4                   	// #4
    aadc:	stur	wzr, [x29, #57]
    aae0:	sturh	wzr, [x29, #61]
    aae4:	strb	wzr, [x29, #63]
    aae8:	str	x30, [x29, #64]
    aaec:	strb	w2, [x29, #80]
    aaf0:	ldp	x2, x3, [x0]
    aaf4:	stp	x2, x3, [x29, #88]
    aaf8:	ldp	x2, x3, [x29, #56]
    aafc:	stur	wzr, [x29, #81]
    ab00:	ldr	x0, [x0, #16]
    ab04:	stp	x2, x3, [x29, #16]
    ab08:	add	x2, x29, #0x10
    ab0c:	str	x0, [x29, #104]
    ab10:	add	x0, x29, #0x50
    ab14:	str	x29, [x29, #32]
    ab18:	sturh	wzr, [x29, #85]
    ab1c:	strb	wzr, [x29, #87]
    ab20:	bl	9e64 <__ubsan_default_options@@Base+0x1e10>
    ab24:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000000ab28 <__ubsan_handle_cfi_check_fail@@Base>:
    ab28:	stp	x29, x30, [sp, #-80]!
    ab2c:	mov	x4, x2
    ab30:	mov	x29, sp
    ab34:	ldrb	w3, [x0]
    ab38:	add	x2, x29, #0x10
    ab3c:	stp	xzr, x30, [x29, #56]
    ab40:	sub	w3, w3, #0x4
    ab44:	and	w3, w3, #0xff
    ab48:	ldp	x6, x7, [x29, #56]
    ab4c:	stp	x6, x7, [x29, #16]
    ab50:	cmp	w3, #0x1
    ab54:	str	x29, [x29, #32]
    ab58:	b.hi	ab68 <__ubsan_handle_cfi_check_fail@@Base+0x40>  // b.pmore
    ab5c:	bl	9e64 <__ubsan_default_options@@Base+0x1e10>
    ab60:	ldp	x29, x30, [sp], #80
    ab64:	ret
    ab68:	cmp	x4, #0x0
    ab6c:	mov	x3, x2
    ab70:	cset	w2, ne  // ne = any
    ab74:	bl	6910 <__ubsan_handle_cfi_bad_type@plt>
    ab78:	b	ab60 <__ubsan_handle_cfi_check_fail@@Base+0x38>

000000000000ab7c <__ubsan_handle_cfi_check_fail_abort@@Base>:
    ab7c:	stp	x29, x30, [sp, #-80]!
    ab80:	mov	x4, x2
    ab84:	mov	w2, #0x1                   	// #1
    ab88:	mov	x29, sp
    ab8c:	ldrb	w3, [x0]
    ab90:	strb	w2, [x29, #56]
    ab94:	sub	w3, w3, #0x4
    ab98:	stur	wzr, [x29, #57]
    ab9c:	and	w3, w3, #0xff
    aba0:	sturh	wzr, [x29, #61]
    aba4:	cmp	w3, #0x1
    aba8:	strb	wzr, [x29, #63]
    abac:	add	x2, x29, #0x10
    abb0:	str	x30, [x29, #64]
    abb4:	str	x29, [x29, #32]
    abb8:	ldp	x6, x7, [x29, #56]
    abbc:	stp	x6, x7, [x29, #16]
    abc0:	b.hi	abcc <__ubsan_handle_cfi_check_fail_abort@@Base+0x50>  // b.pmore
    abc4:	bl	9e64 <__ubsan_default_options@@Base+0x1e10>
    abc8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    abcc:	cmp	x4, #0x0
    abd0:	mov	x3, x2
    abd4:	cset	w2, ne  // ne = any
    abd8:	bl	6910 <__ubsan_handle_cfi_bad_type@plt>
    abdc:	b	abc8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x4c>
    abe0:	add	x1, x0, #0xc
    abe4:	mov	w3, #0xffffffff            	// #-1
    abe8:	ldxr	w2, [x1]
    abec:	stxr	w4, w3, [x1]
    abf0:	cbnz	w4, abe8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x6c>
    abf4:	dmb	ish
    abf8:	ldr	w3, [x0, #8]
    abfc:	mov	x1, #0x0                   	// #0
    ac00:	ldr	x0, [x0]
    ac04:	bfxil	x1, x3, #0, #32
    ac08:	bfi	x1, x2, #32, #32
    ac0c:	ret
    ac10:	ldrh	w1, [x0]
    ac14:	cbnz	w1, ac24 <__ubsan_handle_cfi_check_fail_abort@@Base+0xa8>
    ac18:	ldrh	w0, [x0, #2]
    ac1c:	and	w0, w0, #0x1
    ac20:	ret
    ac24:	mov	w0, #0x0                   	// #0
    ac28:	b	ac20 <__ubsan_handle_cfi_check_fail_abort@@Base+0xa4>
    ac2c:	ldrh	w1, [x0]
    ac30:	cbz	w1, ac58 <__ubsan_handle_cfi_check_fail_abort@@Base+0xdc>
    ac34:	str	x30, [sp, #-16]!
    ac38:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    ac3c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    ac40:	add	x2, x2, #0xbff
    ac44:	add	x0, x0, #0xc18
    ac48:	mov	x4, #0x0                   	// #0
    ac4c:	mov	x3, #0x0                   	// #0
    ac50:	mov	w1, #0x7b                  	// #123
    ac54:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    ac58:	ldrh	w0, [x0, #2]
    ac5c:	mov	w1, #0x1                   	// #1
    ac60:	asr	w0, w0, #1
    ac64:	lsl	w0, w1, w0
    ac68:	ret
    ac6c:	stp	x19, x30, [sp, #-16]!
    ac70:	mov	x19, x0
    ac74:	ldr	x0, [x0]
    ac78:	bl	ac10 <__ubsan_handle_cfi_check_fail_abort@@Base+0x94>
    ac7c:	ands	w0, w0, #0xff
    ac80:	b.eq	ac94 <__ubsan_handle_cfi_check_fail_abort@@Base+0x118>  // b.none
    ac84:	mov	x0, x19
    ac88:	bl	bc94 <__ubsan_get_current_report_data@@Base+0x4cc>
    ac8c:	lsr	x0, x1, #63
    ac90:	and	w0, w0, #0xff
    ac94:	ldp	x19, x30, [sp], #16
    ac98:	ret
    ac9c:	ldr	x0, [x0]
    aca0:	cbz	x0, aca8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x12c>
    aca4:	b	1ab00 <__sanitizer_symbolize_global@@Base+0x2518>
    aca8:	ret
    acac:	cbnz	x0, acd4 <__ubsan_handle_cfi_check_fail_abort@@Base+0x158>
    acb0:	str	x30, [sp, #-16]!
    acb4:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    acb8:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    acbc:	add	x2, x2, #0xc45
    acc0:	add	x0, x0, #0x8f1
    acc4:	mov	x4, #0x0                   	// #0
    acc8:	mov	x3, #0x0                   	// #0
    accc:	mov	w1, #0x2b                  	// #43
    acd0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    acd4:	sub	x0, x0, #0x4
    acd8:	b	709c <__asan_backtrace_open@plt+0x58c>
    acdc:	ldp	x6, x7, [x1]
    ace0:	stp	x6, x7, [x0]
    ace4:	ldp	x6, x7, [x1, #16]
    ace8:	stp	x6, x7, [x0, #16]
    acec:	ldr	x1, [x1, #32]
    acf0:	str	x1, [x0, #32]
    acf4:	stp	w2, w3, [x0, #40]
    acf8:	str	x4, [x0, #48]
    acfc:	str	wzr, [x0, #320]
    ad00:	str	wzr, [x0, #328]
    ad04:	stp	xzr, xzr, [x0, #336]
    ad08:	str	wzr, [x0, #368]
    ad0c:	stp	xzr, xzr, [x0, #376]
    ad10:	str	xzr, [x0, #408]
    ad14:	str	wzr, [x0, #416]
    ad18:	ret
    ad1c:	str	x30, [sp, #-80]!
    ad20:	str	wzr, [sp, #48]
    ad24:	str	x1, [sp, #64]
    ad28:	add	x1, sp, #0x10
    ad2c:	ldp	x2, x3, [sp, #48]
    ad30:	stp	x2, x3, [sp, #16]
    ad34:	ldp	x2, x3, [sp, #64]
    ad38:	stp	x2, x3, [sp, #32]
    ad3c:	bl	7e0c <__asan_backtrace_open@plt+0x12fc>
    ad40:	ldr	x30, [sp], #80
    ad44:	ret
    ad48:	str	x30, [sp, #-80]!
    ad4c:	mov	w2, #0x2                   	// #2
    ad50:	str	w2, [sp, #48]
    ad54:	stp	x1, xzr, [sp, #64]
    ad58:	add	x1, sp, #0x10
    ad5c:	ldp	x2, x3, [sp, #48]
    ad60:	stp	x2, x3, [sp, #16]
    ad64:	ldp	x2, x3, [sp, #64]
    ad68:	stp	x2, x3, [sp, #32]
    ad6c:	bl	7e0c <__asan_backtrace_open@plt+0x12fc>
    ad70:	ldr	x30, [sp], #80
    ad74:	ret
    ad78:	str	x30, [sp, #-80]!
    ad7c:	mov	w2, #0x5                   	// #5
    ad80:	str	w2, [sp, #48]
    ad84:	str	x1, [sp, #64]
    ad88:	add	x1, sp, #0x10
    ad8c:	ldp	x2, x3, [sp, #48]
    ad90:	stp	x2, x3, [sp, #16]
    ad94:	ldp	x2, x3, [sp, #64]
    ad98:	stp	x2, x3, [sp, #32]
    ad9c:	bl	7e0c <__asan_backtrace_open@plt+0x12fc>
    ada0:	ldr	x30, [sp], #80
    ada4:	ret
    ada8:	sub	sp, sp, #0x390
    adac:	stp	x21, x22, [sp, #16]
    adb0:	mov	x21, x1
    adb4:	mov	x22, x0
    adb8:	ldr	x1, [x0, #24]
    adbc:	mov	x0, x21
    adc0:	stp	x19, x20, [sp]
    adc4:	mov	x19, x3
    adc8:	stp	x23, x24, [sp, #32]
    adcc:	stp	x25, x26, [sp, #48]
    add0:	stp	x27, x28, [sp, #64]
    add4:	str	x30, [sp, #80]
    add8:	bl	bb00 <__ubsan_get_current_report_data@@Base+0x338>
    addc:	tst	w0, #0xff
    ade0:	b.eq	ae08 <__ubsan_handle_cfi_check_fail_abort@@Base+0x28c>  // b.none
    ade4:	mov	w0, #0x0                   	// #0
    ade8:	ldp	x19, x20, [sp]
    adec:	ldp	x21, x22, [sp, #16]
    adf0:	ldp	x23, x24, [sp, #32]
    adf4:	ldp	x25, x26, [sp, #48]
    adf8:	ldp	x27, x28, [sp, #64]
    adfc:	ldr	x30, [sp, #80]
    ae00:	add	sp, sp, #0x390
    ae04:	ret
    ae08:	add	x8, sp, #0xe8
    ae0c:	mov	x0, x21
    ae10:	bl	b8f4 <__ubsan_get_current_report_data@@Base+0x12c>
    ae14:	ldp	x25, x24, [sp, #232]
    ae18:	cbnz	x25, b02c <__ubsan_handle_cfi_check_fail_abort@@Base+0x4b0>
    ae1c:	add	x0, x22, #0xc
    ae20:	mov	w1, #0xffffffff            	// #-1
    ae24:	ldxr	w23, [x0]
    ae28:	stxr	w2, w1, [x0]
    ae2c:	cbnz	w2, ae24 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2a8>
    ae30:	dmb	ish
    ae34:	ldr	w27, [x22, #8]
    ae38:	ldp	x2, x3, [x19]
    ae3c:	add	x6, sp, #0xc0
    ae40:	mov	x1, #0x0                   	// #0
    ae44:	str	x6, [sp, #104]
    ae48:	ldr	x28, [x22]
    ae4c:	stp	x2, x3, [sp, #192]
    ae50:	bfxil	x1, x27, #0, #32
    ae54:	ldr	x0, [x19, #16]
    ae58:	bfi	x1, x23, #32, #32
    ae5c:	mov	x2, x6
    ae60:	mov	w3, #0x18                  	// #24
    ae64:	str	x0, [sp, #208]
    ae68:	mov	x0, x28
    ae6c:	bl	8494 <__ubsan_default_options@@Base+0x440>
    ae70:	tst	w0, #0xff
    ae74:	b.ne	ade4 <__ubsan_handle_cfi_check_fail_abort@@Base+0x268>  // b.any
    ae78:	ldp	x0, x1, [x19]
    ae7c:	stp	x0, x1, [sp, #192]
    ae80:	mov	w5, #0x1                   	// #1
    ae84:	str	w5, [sp, #480]
    ae88:	add	x26, sp, #0x130
    ae8c:	str	x28, [sp, #488]
    ae90:	mov	w3, #0x18                  	// #24
    ae94:	str	w27, [sp, #496]
    ae98:	add	x20, sp, #0x1e0
    ae9c:	str	w23, [sp, #500]
    aea0:	ldr	x0, [x19, #16]
    aea4:	str	x0, [sp, #208]
    aea8:	ldr	x6, [sp, #104]
    aeac:	add	x19, sp, #0x90
    aeb0:	ldp	x0, x1, [sp, #480]
    aeb4:	stp	x0, x1, [sp, #144]
    aeb8:	mov	x2, x19
    aebc:	ldp	x0, x1, [sp, #496]
    aec0:	stp	x0, x1, [sp, #160]
    aec4:	ldr	x0, [sp, #512]
    aec8:	mov	x1, x6
    aecc:	str	x0, [sp, #176]
    aed0:	mov	x0, x26
    aed4:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    aed8:	str	x28, [sp, #392]
    aedc:	mov	w5, #0x1                   	// #1
    aee0:	str	w5, [sp, #384]
    aee4:	str	w27, [sp, #400]
    aee8:	mov	w3, #0x18                  	// #24
    aeec:	str	w23, [sp, #404]
    aef0:	mov	w2, #0x0                   	// #0
    aef4:	ldp	x0, x1, [sp, #384]
    aef8:	stp	x0, x1, [sp, #144]
    aefc:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    af00:	ldp	x0, x1, [sp, #400]
    af04:	stp	x0, x1, [sp, #160]
    af08:	add	x4, x4, #0x505
    af0c:	ldr	x0, [sp, #416]
    af10:	mov	x1, x19
    af14:	str	x0, [sp, #176]
    af18:	mov	x0, x20
    af1c:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    af20:	add	x27, sp, #0x180
    af24:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    af28:	ldrb	w1, [x22, #32]
    af2c:	add	x23, sp, #0x100
    af30:	add	x28, x21, #0x8
    af34:	ldr	x0, [x0, #3760]
    af38:	ldr	x1, [x0, x1, lsl #3]
    af3c:	mov	x0, x20
    af40:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    af44:	str	x21, [sp, #272]
    af48:	mov	w1, #0x5                   	// #5
    af4c:	str	w1, [sp, #256]
    af50:	add	x6, sp, #0x70
    af54:	str	x6, [sp, #104]
    af58:	ldp	x2, x3, [sp, #256]
    af5c:	stp	x2, x3, [sp, #112]
    af60:	mov	x1, x6
    af64:	ldp	x2, x3, [sp, #272]
    af68:	stp	x2, x3, [sp, #128]
    af6c:	bl	7e0c <__asan_backtrace_open@plt+0x12fc>
    af70:	ldr	x1, [x22, #16]
    af74:	mov	w22, #0x2                   	// #2
    af78:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    af7c:	mov	x0, x20
    af80:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    af84:	mov	w5, #0x1                   	// #1
    af88:	ldr	x6, [sp, #104]
    af8c:	cbnz	x25, b08c <__ubsan_handle_cfi_check_fail_abort@@Base+0x510>
    af90:	str	w22, [sp, #256]
    af94:	add	x24, x24, #0x100, lsl #12
    af98:	stp	xzr, xzr, [sp, #264]
    af9c:	cmp	x24, #0x200, lsl #12
    afa0:	str	x21, [sp, #280]
    afa4:	ldp	x0, x1, [x23]
    afa8:	stp	x0, x1, [x19]
    afac:	ldp	x0, x1, [x23, #16]
    afb0:	stp	x0, x1, [x19, #16]
    afb4:	ldr	x0, [x23, #32]
    afb8:	str	x0, [x19, #32]
    afbc:	b.hi	b040 <__ubsan_handle_cfi_check_fail_abort@@Base+0x4c4>  // b.pmore
    afc0:	mov	w2, w5
    afc4:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    afc8:	add	x4, x4, #0x540
    afcc:	mov	w3, #0x18                  	// #24
    afd0:	mov	x1, x19
    afd4:	mov	x0, x20
    afd8:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    afdc:	mov	x1, #0x0                   	// #0
    afe0:	mov	x0, x20
    afe4:	bl	b5b8 <__ubsan_handle_cfi_bad_type@@Base+0x3b8>
    afe8:	str	w22, [sp, #384]
    afec:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    aff0:	add	x1, x1, #0x54b
    aff4:	stp	xzr, xzr, [sp, #392]
    aff8:	str	x21, [sp, #408]
    affc:	str	w22, [sp, #424]
    b000:	stp	xzr, xzr, [sp, #432]
    b004:	str	x28, [sp, #448]
    b008:	str	x1, [sp, #464]
    b00c:	mov	x1, x27
    b010:	bl	b5e8 <__ubsan_handle_cfi_bad_type@@Base+0x3e8>
    b014:	mov	x0, x20
    b018:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    b01c:	mov	x0, x26
    b020:	bl	7210 <__asan_backtrace_open@plt+0x700>
    b024:	mov	w0, #0x1                   	// #1
    b028:	b	ade8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x26c>
    b02c:	mov	x0, x25
    b030:	bl	73b4 <__asan_backtrace_open@plt+0x8a4>
    b034:	tst	w0, #0xff
    b038:	b.eq	ae1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x2a0>  // b.none
    b03c:	b	ade4 <__ubsan_handle_cfi_check_fail_abort@@Base+0x268>
    b040:	mov	w2, w5
    b044:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b048:	add	x4, x4, #0x558
    b04c:	mov	w3, #0x18                  	// #24
    b050:	mov	x1, x19
    b054:	mov	x0, x20
    b058:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    b05c:	mov	x1, #0x0                   	// #0
    b060:	mov	x0, x20
    b064:	bl	b5b8 <__ubsan_handle_cfi_bad_type@@Base+0x3b8>
    b068:	str	w22, [sp, #384]
    b06c:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b070:	add	x1, x1, #0x597
    b074:	stp	xzr, xzr, [sp, #392]
    b078:	str	x21, [sp, #408]
    b07c:	str	w22, [sp, #424]
    b080:	stp	xzr, xzr, [sp, #432]
    b084:	str	x28, [sp, #448]
    b088:	b	b008 <__ubsan_handle_cfi_check_fail_abort@@Base+0x48c>
    b08c:	cbnz	x24, b100 <__ubsan_handle_cfi_check_fail_abort@@Base+0x584>
    b090:	str	w22, [sp, #256]
    b094:	mov	w2, w5
    b098:	stp	xzr, xzr, [sp, #264]
    b09c:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b0a0:	add	x4, x4, #0x5ad
    b0a4:	str	x21, [sp, #280]
    b0a8:	mov	w3, #0x18                  	// #24
    b0ac:	ldp	x0, x1, [x23]
    b0b0:	stp	x0, x1, [x19]
    b0b4:	ldp	x0, x1, [x23, #16]
    b0b8:	stp	x0, x1, [x19, #16]
    b0bc:	ldr	x0, [x23, #32]
    b0c0:	str	x0, [x19, #32]
    b0c4:	mov	x1, x19
    b0c8:	mov	x0, x20
    b0cc:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    b0d0:	mov	x1, x25
    b0d4:	mov	x0, x20
    b0d8:	bl	b5b8 <__ubsan_handle_cfi_bad_type@@Base+0x3b8>
    b0dc:	str	w22, [sp, #384]
    b0e0:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b0e4:	add	x1, x1, #0x5c2
    b0e8:	stp	xzr, xzr, [sp, #392]
    b0ec:	str	x21, [sp, #408]
    b0f0:	str	w22, [sp, #424]
    b0f4:	stp	xzr, xzr, [sp, #432]
    b0f8:	str	x28, [sp, #448]
    b0fc:	b	b008 <__ubsan_handle_cfi_check_fail_abort@@Base+0x48c>
    b100:	sub	x0, x21, x24
    b104:	str	w22, [sp, #256]
    b108:	stp	xzr, xzr, [sp, #264]
    b10c:	mov	w2, w5
    b110:	mov	w3, #0x18                  	// #24
    b114:	str	x0, [sp, #280]
    b118:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b11c:	str	x6, [sp, #104]
    b120:	add	x4, x4, #0x5ce
    b124:	ldp	x0, x1, [x23]
    b128:	stp	x0, x1, [x19]
    b12c:	ldp	x0, x1, [x23, #16]
    b130:	stp	x0, x1, [x19, #16]
    b134:	ldr	x0, [x23, #32]
    b138:	str	x0, [x19, #32]
    b13c:	mov	x1, x19
    b140:	mov	x0, x20
    b144:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    b148:	str	w22, [sp, #384]
    b14c:	ldr	x6, [sp, #104]
    b150:	stp	x24, xzr, [sp, #400]
    b154:	ldp	x0, x1, [x27]
    b158:	stp	x0, x1, [x6]
    b15c:	ldp	x0, x1, [x27, #16]
    b160:	stp	x0, x1, [x6, #16]
    b164:	mov	x1, x6
    b168:	mov	x0, x20
    b16c:	bl	7e0c <__asan_backtrace_open@plt+0x12fc>
    b170:	mov	x1, x25
    b174:	bl	b5b8 <__ubsan_handle_cfi_bad_type@@Base+0x3b8>
    b178:	ldr	x1, [sp, #248]
    b17c:	bl	b5b8 <__ubsan_handle_cfi_bad_type@@Base+0x3b8>
    b180:	str	w22, [sp, #384]
    b184:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b188:	add	x1, x1, #0x613
    b18c:	stp	xzr, xzr, [sp, #392]
    b190:	str	x21, [sp, #408]
    b194:	str	w22, [sp, #424]
    b198:	stp	xzr, xzr, [sp, #432]
    b19c:	str	x28, [sp, #448]
    b1a0:	b	b008 <__ubsan_handle_cfi_check_fail_abort@@Base+0x48c>

000000000000b1a4 <__ubsan_handle_dynamic_type_cache_miss@@Base>:
    b1a4:	stp	x29, x30, [sp, #-80]!
    b1a8:	mov	x29, sp
    b1ac:	add	x3, x29, #0x10
    b1b0:	stp	xzr, x30, [x29, #56]
    b1b4:	ldp	x4, x5, [x29, #56]
    b1b8:	stp	x4, x5, [x29, #16]
    b1bc:	str	x29, [x29, #32]
    b1c0:	bl	ada8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x22c>
    b1c4:	ldp	x29, x30, [sp], #80
    b1c8:	ret

000000000000b1cc <__ubsan_handle_dynamic_type_cache_miss_abort@@Base>:
    b1cc:	stp	x29, x30, [sp, #-80]!
    b1d0:	mov	x29, sp
    b1d4:	add	x3, x29, #0x10
    b1d8:	stp	xzr, x30, [x29, #56]
    b1dc:	ldp	x4, x5, [x29, #56]
    b1e0:	stp	x4, x5, [x29, #16]
    b1e4:	str	x29, [x29, #32]
    b1e8:	bl	ada8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x22c>
    b1ec:	tst	w0, #0xff
    b1f0:	b.eq	b1f8 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base+0x2c>  // b.none
    b1f4:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    b1f8:	ldp	x29, x30, [sp], #80
    b1fc:	ret

000000000000b200 <__ubsan_handle_cfi_bad_type@@Base>:
    b200:	sub	sp, sp, #0x350
    b204:	stp	x19, x20, [sp]
    b208:	and	w20, w2, #0xff
    b20c:	stp	x21, x22, [sp, #16]
    b210:	mov	x21, x3
    b214:	stp	x27, x28, [sp, #64]
    b218:	mov	x28, x0
    b21c:	add	x0, x0, #0x14
    b220:	mov	x27, x1
    b224:	mov	w1, #0xffffffff            	// #-1
    b228:	stp	x23, x24, [sp, #32]
    b22c:	stp	x25, x26, [sp, #48]
    b230:	str	x30, [sp, #80]
    b234:	ldxr	w23, [x0]
    b238:	stxr	w2, w1, [x0]
    b23c:	cbnz	w2, b234 <__ubsan_handle_cfi_bad_type@@Base+0x34>
    b240:	dmb	ish
    b244:	ldr	w24, [x28, #16]
    b248:	ldp	x2, x3, [x21]
    b24c:	add	x4, sp, #0xc0
    b250:	mov	x1, #0x0                   	// #0
    b254:	stp	x2, x3, [sp, #192]
    b258:	bfxil	x1, x24, #0, #32
    b25c:	ldr	x25, [x28, #8]
    b260:	mov	x2, x4
    b264:	ldr	x0, [x21, #16]
    b268:	bfi	x1, x23, #32, #32
    b26c:	mov	w3, #0x19                  	// #25
    b270:	str	x4, [sp, #104]
    b274:	str	x0, [sp, #208]
    b278:	mov	x0, x25
    b27c:	bl	8494 <__ubsan_default_options@@Base+0x440>
    b280:	tst	w0, #0xff
    b284:	b.ne	b4dc <__ubsan_handle_cfi_bad_type@@Base+0x2dc>  // b.any
    b288:	mov	w0, #0x1                   	// #1
    b28c:	str	w0, [sp, #416]
    b290:	ldp	x0, x1, [x21]
    b294:	stp	x0, x1, [sp, #192]
    b298:	add	x22, sp, #0x90
    b29c:	str	x25, [sp, #424]
    b2a0:	add	x26, sp, #0x150
    b2a4:	str	w24, [sp, #432]
    b2a8:	mov	x2, x22
    b2ac:	str	w23, [sp, #436]
    b2b0:	mov	w3, #0x19                  	// #25
    b2b4:	ldr	x0, [x21, #16]
    b2b8:	str	x0, [sp, #208]
    b2bc:	ldr	x4, [sp, #104]
    b2c0:	ldp	x0, x1, [sp, #416]
    b2c4:	stp	x0, x1, [sp, #144]
    b2c8:	ldp	x0, x1, [sp, #432]
    b2cc:	stp	x0, x1, [sp, #160]
    b2d0:	ldr	x0, [sp, #448]
    b2d4:	mov	x1, x4
    b2d8:	str	x0, [sp, #176]
    b2dc:	mov	x0, x26
    b2e0:	bl	71ac <__asan_backtrace_open@plt+0x69c>
    b2e4:	cbz	w20, b31c <__ubsan_handle_cfi_bad_type@@Base+0x11c>
    b2e8:	add	x8, sp, #0xe8
    b2ec:	mov	x0, x27
    b2f0:	bl	bc1c <__ubsan_get_current_report_data@@Base+0x454>
    b2f4:	ldr	x5, [sp, #232]
    b2f8:	ldrb	w1, [x28]
    b2fc:	cmp	w1, #0x6
    b300:	b.hi	b32c <__ubsan_handle_cfi_bad_type@@Base+0x12c>  // b.pmore
    b304:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b308:	add	x0, x0, #0x708
    b30c:	ldrh	w0, [x0, w1, uxtw #1]
    b310:	adr	x1, b31c <__ubsan_handle_cfi_bad_type@@Base+0x11c>
    b314:	add	x0, x1, w0, sxth #2
    b318:	br	x0
    b31c:	mov	x5, #0x0                   	// #0
    b320:	b	b2f8 <__ubsan_handle_cfi_bad_type@@Base+0xf8>
    b324:	adrp	x19, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b328:	add	x19, x19, #0x634
    b32c:	add	x0, sp, #0x210
    b330:	mov	w6, #0x1                   	// #1
    b334:	str	w6, [sp, #296]
    b338:	add	x20, sp, #0x1a0
    b33c:	str	x25, [sp, #304]
    b340:	mov	w3, #0x19                  	// #25
    b344:	str	w24, [sp, #312]
    b348:	mov	w2, #0x0                   	// #0
    b34c:	str	w23, [sp, #316]
    b350:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b354:	add	x4, x4, #0x66d
    b358:	str	x5, [sp, #104]
    b35c:	ldp	x0, x1, [x0, #-232]
    b360:	stp	x0, x1, [sp, #144]
    b364:	add	x0, sp, #0x210
    b368:	ldp	x0, x1, [x0, #-216]
    b36c:	stp	x0, x1, [sp, #160]
    b370:	ldr	x0, [sp, #328]
    b374:	mov	x1, x22
    b378:	str	x0, [sp, #176]
    b37c:	mov	x0, x20
    b380:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    b384:	ldr	x1, [x28, #24]
    b388:	mov	x0, x20
    b38c:	bl	70b8 <__asan_backtrace_open@plt+0x5a8>
    b390:	mov	x1, x19
    b394:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    b398:	mov	w1, #0x5                   	// #5
    b39c:	str	w1, [sp, #256]
    b3a0:	str	x27, [sp, #272]
    b3a4:	add	x1, sp, #0x70
    b3a8:	ldp	x2, x3, [sp, #256]
    b3ac:	stp	x2, x3, [sp, #112]
    b3b0:	ldp	x2, x3, [sp, #272]
    b3b4:	stp	x2, x3, [sp, #128]
    b3b8:	bl	7e0c <__asan_backtrace_open@plt+0x12fc>
    b3bc:	mov	x0, x20
    b3c0:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    b3c4:	ldr	x5, [sp, #104]
    b3c8:	mov	w0, #0x2                   	// #2
    b3cc:	mov	w6, #0x1                   	// #1
    b3d0:	cbnz	x5, b530 <__ubsan_handle_cfi_bad_type@@Base+0x330>
    b3d4:	str	w0, [sp, #296]
    b3d8:	add	x0, sp, #0x210
    b3dc:	stp	xzr, xzr, [sp, #304]
    b3e0:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b3e4:	mov	w2, w6
    b3e8:	str	x27, [sp, #320]
    b3ec:	add	x4, x4, #0x6bb
    b3f0:	mov	w3, #0x19                  	// #25
    b3f4:	ldp	x0, x1, [x0, #-232]
    b3f8:	stp	x0, x1, [sp, #144]
    b3fc:	add	x0, sp, #0x210
    b400:	ldp	x0, x1, [x0, #-216]
    b404:	stp	x0, x1, [sp, #160]
    b408:	ldr	x0, [sp, #328]
    b40c:	mov	x1, x22
    b410:	str	x0, [sp, #176]
    b414:	mov	x0, x20
    b418:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    b41c:	mov	x0, x20
    b420:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    b424:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
    b428:	mov	x1, x27
    b42c:	bl	b590 <__ubsan_handle_cfi_bad_type@@Base+0x390>
    b430:	mov	x19, x0
    b434:	cbnz	x0, b440 <__ubsan_handle_cfi_bad_type@@Base+0x240>
    b438:	adrp	x19, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b43c:	add	x19, x19, #0x11d
    b440:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
    b444:	ldr	x1, [x21, #8]
    b448:	bl	b590 <__ubsan_handle_cfi_bad_type@@Base+0x390>
    b44c:	mov	x21, x0
    b450:	cbnz	x0, b45c <__ubsan_handle_cfi_bad_type@@Base+0x25c>
    b454:	adrp	x21, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b458:	add	x21, x21, #0x11d
    b45c:	mov	x1, x19
    b460:	mov	x0, x21
    b464:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
    b468:	cbz	w0, b4d4 <__ubsan_handle_cfi_bad_type@@Base+0x2d4>
    b46c:	add	x0, sp, #0x210
    b470:	mov	w2, #0x1                   	// #1
    b474:	str	w2, [sp, #296]
    b478:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b47c:	str	x25, [sp, #304]
    b480:	add	x4, x4, #0x6df
    b484:	str	w24, [sp, #312]
    b488:	mov	w3, #0x19                  	// #25
    b48c:	str	w23, [sp, #316]
    b490:	ldp	x0, x1, [x0, #-232]
    b494:	stp	x0, x1, [sp, #144]
    b498:	add	x0, sp, #0x210
    b49c:	ldp	x0, x1, [x0, #-216]
    b4a0:	stp	x0, x1, [sp, #160]
    b4a4:	ldr	x0, [sp, #328]
    b4a8:	mov	x1, x22
    b4ac:	str	x0, [sp, #176]
    b4b0:	mov	x0, x20
    b4b4:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    b4b8:	mov	x1, x21
    b4bc:	mov	x0, x20
    b4c0:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    b4c4:	mov	x1, x19
    b4c8:	bl	ad1c <__ubsan_handle_cfi_check_fail_abort@@Base+0x1a0>
    b4cc:	mov	x0, x20
    b4d0:	bl	76a4 <__asan_backtrace_open@plt+0xb94>
    b4d4:	mov	x0, x26
    b4d8:	bl	7210 <__asan_backtrace_open@plt+0x700>
    b4dc:	ldp	x19, x20, [sp]
    b4e0:	ldp	x21, x22, [sp, #16]
    b4e4:	ldp	x23, x24, [sp, #32]
    b4e8:	ldp	x25, x26, [sp, #48]
    b4ec:	ldp	x27, x28, [sp, #64]
    b4f0:	ldr	x30, [sp, #80]
    b4f4:	add	sp, sp, #0x350
    b4f8:	ret
    b4fc:	adrp	x19, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b500:	add	x19, x19, #0x641
    b504:	b	b32c <__ubsan_handle_cfi_bad_type@@Base+0x12c>
    b508:	adrp	x19, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b50c:	add	x19, x19, #0x656
    b510:	b	b32c <__ubsan_handle_cfi_bad_type@@Base+0x12c>
    b514:	adrp	x19, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b518:	add	x19, x19, #0x340
    b51c:	b	b32c <__ubsan_handle_cfi_bad_type@@Base+0x12c>
    b520:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    b524:	adrp	x19, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b528:	add	x19, x19, #0x630
    b52c:	b	b32c <__ubsan_handle_cfi_bad_type@@Base+0x12c>
    b530:	str	w0, [sp, #296]
    b534:	add	x0, sp, #0x210
    b538:	stp	xzr, xzr, [sp, #304]
    b53c:	mov	w2, w6
    b540:	mov	w3, #0x19                  	// #25
    b544:	str	x27, [sp, #320]
    b548:	adrp	x4, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b54c:	add	x4, x4, #0x6ca
    b550:	str	x5, [sp, #104]
    b554:	ldp	x0, x1, [x0, #-232]
    b558:	stp	x0, x1, [sp, #144]
    b55c:	add	x0, sp, #0x210
    b560:	ldp	x0, x1, [x0, #-216]
    b564:	stp	x0, x1, [sp, #160]
    b568:	ldr	x0, [sp, #328]
    b56c:	mov	x1, x22
    b570:	str	x0, [sp, #176]
    b574:	mov	x0, x20
    b578:	bl	acdc <__ubsan_handle_cfi_check_fail_abort@@Base+0x160>
    b57c:	ldr	x5, [sp, #104]
    b580:	mov	x0, x20
    b584:	mov	x1, x5
    b588:	bl	b5b8 <__ubsan_handle_cfi_bad_type@@Base+0x3b8>
    b58c:	b	b41c <__ubsan_handle_cfi_bad_type@@Base+0x21c>
    b590:	str	x30, [sp, #-32]!
    b594:	add	x3, sp, #0x18
    b598:	add	x2, sp, #0x10
    b59c:	str	xzr, [sp, #16]
    b5a0:	bl	1b81c <__sanitizer_symbolize_global@@Base+0x3234>
    b5a4:	tst	w0, #0xff
    b5a8:	ldr	x0, [sp, #16]
    b5ac:	ldr	x30, [sp], #32
    b5b0:	csel	x0, x0, xzr, ne  // ne = any
    b5b4:	ret
    b5b8:	str	x30, [sp, #-80]!
    b5bc:	mov	w2, #0x1                   	// #1
    b5c0:	str	w2, [sp, #48]
    b5c4:	str	x1, [sp, #64]
    b5c8:	add	x1, sp, #0x10
    b5cc:	ldp	x2, x3, [sp, #48]
    b5d0:	stp	x2, x3, [sp, #16]
    b5d4:	ldp	x2, x3, [sp, #64]
    b5d8:	stp	x2, x3, [sp, #32]
    b5dc:	bl	7e0c <__asan_backtrace_open@plt+0x12fc>
    b5e0:	ldr	x30, [sp], #80
    b5e4:	ret
    b5e8:	stp	x19, x20, [sp, #-128]!
    b5ec:	mov	x19, x0
    b5f0:	mov	x20, #0x58                  	// #88
    b5f4:	add	x4, sp, #0x28
    b5f8:	mov	x2, x20
    b5fc:	mov	x0, x4
    b600:	str	x30, [sp, #16]
    b604:	bl	6450 <memcpy@plt>
    b608:	ldr	w1, [x19, #416]
    b60c:	cmp	w1, #0x1
    b610:	b.ne	b634 <__ubsan_handle_cfi_bad_type@@Base+0x434>  // b.any
    b614:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b618:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    b61c:	add	x2, x2, #0x4e3
    b620:	add	x0, x0, #0x8f1
    b624:	mov	x4, #0x0                   	// #0
    b628:	mov	x3, #0x0                   	// #0
    b62c:	mov	w1, #0xc5                  	// #197
    b630:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    b634:	mov	x4, x0
    b638:	add	w0, w1, #0x1
    b63c:	mov	w1, w1
    b640:	str	w0, [x19, #416]
    b644:	mov	x2, x20
    b648:	madd	x0, x1, x20, x19
    b64c:	mov	x1, x4
    b650:	add	x0, x0, #0x148
    b654:	bl	6450 <memcpy@plt>
    b658:	mov	x0, x19
    b65c:	ldr	x30, [sp, #16]
    b660:	ldp	x19, x20, [sp], #128
    b664:	ret
    b668:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b66c:	add	x0, x0, #0x716
    b670:	ret
    b674:	stp	x19, x20, [sp, #-32]!
    b678:	adrp	x20, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    b67c:	stp	x21, x30, [sp, #16]
    b680:	add	x21, x20, #0xe68
    b684:	mov	x0, x21
    b688:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    b68c:	ldrb	w0, [x21, #1]
    b690:	cbnz	w0, b6dc <__ubsan_handle_cfi_bad_type@@Base+0x4dc>
    b694:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    b698:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b69c:	add	x1, x1, #0x716
    b6a0:	adrp	x19, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    b6a4:	ldr	x0, [x0, #4024]
    b6a8:	str	x1, [x0]
    b6ac:	bl	e178 <__sancov_default_options@@Base+0x21d8>
    b6b0:	bl	8140 <__ubsan_default_options@@Base+0xec>
    b6b4:	ldr	x19, [x19, #4056]
    b6b8:	ldr	x0, [x19, #40]
    b6bc:	bl	6ac0 <__sanitizer_set_report_path@plt>
    b6c0:	bl	144bc <__sanitizer_set_report_fd@@Base+0x3c1c>
    b6c4:	ldrb	w0, [x19, #161]
    b6c8:	ldr	x1, [x19, #168]
    b6cc:	bl	e818 <__sanitizer_sandbox_on_notify@@Base+0x1b8>
    b6d0:	bl	7348 <__asan_backtrace_open@plt+0x838>
    b6d4:	mov	w0, #0x1                   	// #1
    b6d8:	strb	w0, [x21, #1]
    b6dc:	dmb	ish
    b6e0:	strb	wzr, [x20, #3688]
    b6e4:	ldp	x21, x30, [sp, #16]
    b6e8:	ldp	x19, x20, [sp], #32
    b6ec:	ret
    b6f0:	b	b674 <__ubsan_handle_cfi_bad_type@@Base+0x474>
    b6f4:	stp	x19, x20, [sp, #-32]!
    b6f8:	adrp	x19, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    b6fc:	add	x20, x19, #0xe68
    b700:	mov	x0, x20
    b704:	str	x30, [sp, #16]
    b708:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    b70c:	ldrb	w0, [x20, #1]
    b710:	cbnz	w0, b720 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    b714:	bl	7348 <__asan_backtrace_open@plt+0x838>
    b718:	mov	w0, #0x1                   	// #1
    b71c:	strb	w0, [x20, #1]
    b720:	dmb	ish
    b724:	strb	wzr, [x19, #3688]
    b728:	ldr	x30, [sp, #16]
    b72c:	ldp	x19, x20, [sp], #32
    b730:	ret
    b734:	stp	x19, x20, [sp, #-32]!
    b738:	mov	x19, x0
    b73c:	mov	w20, #0x0                   	// #0
    b740:	stp	x21, x30, [sp, #16]
    b744:	mov	w21, #0x1                   	// #1
    b748:	cmp	w20, #0x9
    b74c:	b.gt	b77c <__ubsan_handle_cfi_bad_type@@Base+0x57c>
    b750:	ldrb	w0, [x19]
    b754:	tst	w0, #0xff
    b758:	b.ne	b774 <__ubsan_handle_cfi_bad_type@@Base+0x574>  // b.any
    b75c:	ldxrb	w0, [x19]
    b760:	stxrb	w1, w21, [x19]
    b764:	cbnz	w1, b75c <__ubsan_handle_cfi_bad_type@@Base+0x55c>
    b768:	dmb	ish
    b76c:	tst	w0, #0xff
    b770:	b.eq	b784 <__ubsan_handle_cfi_bad_type@@Base+0x584>  // b.none
    b774:	add	w20, w20, #0x1
    b778:	b	b748 <__ubsan_handle_cfi_bad_type@@Base+0x548>
    b77c:	bl	12e8c <__sanitizer_set_report_fd@@Base+0x25ec>
    b780:	b	b750 <__ubsan_handle_cfi_bad_type@@Base+0x550>
    b784:	ldp	x21, x30, [sp, #16]
    b788:	ldp	x19, x20, [sp], #32
    b78c:	ret
    b790:	mov	x1, x0
    b794:	mov	w3, #0x1                   	// #1
    b798:	ldxrb	w2, [x1]
    b79c:	stxrb	w4, w3, [x1]
    b7a0:	cbnz	w4, b798 <__ubsan_handle_cfi_bad_type@@Base+0x598>
    b7a4:	dmb	ish
    b7a8:	tst	w2, #0xff
    b7ac:	b.eq	b7b4 <__ubsan_handle_cfi_bad_type@@Base+0x5b4>  // b.none
    b7b0:	b	b734 <__ubsan_handle_cfi_bad_type@@Base+0x534>
    b7b4:	ret

000000000000b7b8 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@@Base>:
    b7b8:	adrp	x1, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    b7bc:	str	x0, [x1, #3696]
    b7c0:	ret

000000000000b7c4 <__ubsan_on_report@@Base>:
    b7c4:	ret

000000000000b7c8 <__ubsan_get_current_report_data@@Base>:
    b7c8:	cmp	x0, #0x0
    b7cc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    b7d0:	b.eq	b7ec <__ubsan_get_current_report_data@@Base+0x24>  // b.none
    b7d4:	cmp	x2, #0x0
    b7d8:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    b7dc:	b.eq	b7ec <__ubsan_get_current_report_data@@Base+0x24>  // b.none
    b7e0:	cmp	x4, #0x0
    b7e4:	ccmp	x5, #0x0, #0x4, ne  // ne = any
    b7e8:	b.ne	b810 <__ubsan_get_current_report_data@@Base+0x48>  // b.any
    b7ec:	str	x30, [sp, #-16]!
    b7f0:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b7f4:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    b7f8:	add	x2, x2, #0x731
    b7fc:	add	x0, x0, #0x77f
    b800:	mov	x4, #0x0                   	// #0
    b804:	mov	x3, #0x0                   	// #0
    b808:	mov	w1, #0x30                  	// #48
    b80c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    b810:	adrp	x6, 50000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    b814:	ldr	x6, [x6, #3696]
    b818:	ldr	x9, [x6, #16]
    b81c:	ldrb	w7, [x9]
    b820:	sub	w8, w7, #0x61
    b824:	and	w8, w8, #0xff
    b828:	cmp	w8, #0x19
    b82c:	b.hi	b838 <__ubsan_get_current_report_data@@Base+0x70>  // b.pmore
    b830:	sub	w7, w7, #0x20
    b834:	strb	w7, [x9]
    b838:	ldr	x7, [x6]
    b83c:	str	x7, [x0]
    b840:	ldr	x0, [x6, #16]
    b844:	str	x0, [x1]
    b848:	ldr	x0, [x6, #8]
    b84c:	ldr	w6, [x0]
    b850:	cmp	w6, #0x1
    b854:	b.eq	b880 <__ubsan_get_current_report_data@@Base+0xb8>  // b.none
    b858:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    b85c:	add	x1, x1, #0x76e
    b860:	str	x1, [x2]
    b864:	cmp	w6, #0x2
    b868:	str	wzr, [x4]
    b86c:	str	wzr, [x3]
    b870:	b.eq	b89c <__ubsan_get_current_report_data@@Base+0xd4>  // b.none
    b874:	mov	x0, #0x0                   	// #0
    b878:	str	x0, [x5]
    b87c:	ret
    b880:	ldr	x6, [x0, #8]
    b884:	ldr	w1, [x0, #16]
    b888:	ldr	w0, [x0, #20]
    b88c:	str	x6, [x2]
    b890:	str	w1, [x3]
    b894:	str	w0, [x4]
    b898:	b	b874 <__ubsan_get_current_report_data@@Base+0xac>
    b89c:	ldr	x0, [x0, #24]
    b8a0:	b	b878 <__ubsan_get_current_report_data@@Base+0xb0>
    b8a4:	stp	x19, x20, [sp, #-32]!
    b8a8:	mov	x19, x0
    b8ac:	mov	x20, x3
    b8b0:	stp	x21, x30, [sp, #16]
    b8b4:	add	x21, x0, #0x10
    b8b8:	mov	x0, x21
    b8bc:	stp	x1, x2, [x19]
    b8c0:	ldr	x1, [x3, #24]
    b8c4:	add	x1, x1, #0x1
    b8c8:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
    b8cc:	mov	x0, x19
    b8d0:	bl	6660 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@plt>
    b8d4:	ldr	x2, [x20]
    b8d8:	mov	x0, x21
    b8dc:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    b8e0:	add	x1, x1, #0x85d
    b8e4:	bl	16a9c <OnPrint@@Base+0x390>
    b8e8:	ldp	x21, x30, [sp, #16]
    b8ec:	ldp	x19, x20, [sp], #32
    b8f0:	b	67a0 <__ubsan_on_report@plt>
    b8f4:	ldr	x0, [x0]
    b8f8:	str	x30, [sp, #-16]!
    b8fc:	bl	bc1c <__ubsan_get_current_report_data@@Base+0x454>
    b900:	ldr	x30, [sp], #16
    b904:	ret
    b908:	stp	x19, x20, [sp, #-48]!
    b90c:	adrp	x20, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    b910:	mov	x19, x0
    b914:	stp	x21, x22, [sp, #16]
    b918:	adrp	x22, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    b91c:	mov	x21, x1
    b920:	ldr	x22, [x22, #3960]
    b924:	str	x30, [sp, #32]
    b928:	ldr	x20, [x20, #4064]
    b92c:	cbz	x21, b958 <__ubsan_get_current_report_data@@Base+0x190>
    b930:	cbz	x19, b958 <__ubsan_get_current_report_data@@Base+0x190>
    b934:	mov	x2, x22
    b938:	mov	x1, x20
    b93c:	mov	x0, x19
    b940:	mov	x3, #0x0                   	// #0
    b944:	bl	67b0 <__dynamic_cast@plt>
    b948:	cbz	x0, b96c <__ubsan_get_current_report_data@@Base+0x1a4>
    b94c:	ldr	x19, [x0, #16]
    b950:	b	b92c <__ubsan_get_current_report_data@@Base+0x164>
    b954:	mov	x19, #0x0                   	// #0
    b958:	mov	x0, x19
    b95c:	ldp	x21, x22, [sp, #16]
    b960:	ldr	x30, [sp, #32]
    b964:	ldp	x19, x20, [sp], #48
    b968:	ret
    b96c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    b970:	mov	x0, x19
    b974:	mov	x1, x20
    b978:	mov	x3, #0x0                   	// #0
    b97c:	ldr	x2, [x2, #3920]
    b980:	bl	67b0 <__dynamic_cast@plt>
    b984:	mov	x19, x0
    b988:	cbz	x0, b958 <__ubsan_get_current_report_data@@Base+0x190>
    b98c:	ldr	w22, [x0, #20]
    b990:	mov	x20, x0
    b994:	add	x22, x0, w22, uxtw #4
    b998:	cmp	x22, x20
    b99c:	b.eq	b954 <__ubsan_get_current_report_data@@Base+0x18c>  // b.none
    b9a0:	ldr	x1, [x20, #32]
    b9a4:	tbnz	w1, #0, b9bc <__ubsan_get_current_report_data@@Base+0x1f4>
    b9a8:	ldr	x0, [x20, #24]
    b9ac:	sub	x1, x21, x1, asr #8
    b9b0:	bl	b908 <__ubsan_get_current_report_data@@Base+0x140>
    b9b4:	mov	x19, x0
    b9b8:	cbnz	x0, b958 <__ubsan_get_current_report_data@@Base+0x190>
    b9bc:	add	x20, x20, #0x10
    b9c0:	b	b998 <__ubsan_get_current_report_data@@Base+0x1d0>
    b9c4:	stp	x19, x20, [sp, #-32]!
    b9c8:	sub	x20, x0, #0x10
    b9cc:	mov	x19, x0
    b9d0:	mov	x1, #0x10                  	// #16
    b9d4:	mov	x0, x20
    b9d8:	str	x30, [sp, #16]
    b9dc:	bl	15840 <__sanitizer_set_report_fd@@Base+0x4fa0>
    b9e0:	tst	w0, #0xff
    b9e4:	b.eq	ba00 <__ubsan_get_current_report_data@@Base+0x238>  // b.none
    b9e8:	ldur	x0, [x19, #-8]
    b9ec:	cmp	x0, #0x0
    b9f0:	csel	x0, x0, x20, eq  // eq = none
    b9f4:	ldr	x30, [sp, #16]
    b9f8:	ldp	x19, x20, [sp], #32
    b9fc:	ret
    ba00:	mov	x0, #0x0                   	// #0
    ba04:	b	b9f4 <__ubsan_get_current_report_data@@Base+0x22c>
    ba08:	stp	x19, x20, [sp, #-48]!
    ba0c:	adrp	x20, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    ba10:	mov	x19, x0
    ba14:	stp	x23, x30, [sp, #32]
    ba18:	adrp	x23, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    ba1c:	ldr	x20, [x20, #4064]
    ba20:	stp	x21, x22, [sp, #16]
    ba24:	mov	x21, x1
    ba28:	ldr	x23, [x23, #3960]
    ba2c:	mov	x22, x2
    ba30:	ldr	x0, [x19, #8]
    ba34:	ldr	x1, [x21, #8]
    ba38:	cmp	x0, x1
    ba3c:	b.ne	ba58 <__ubsan_get_current_report_data@@Base+0x290>  // b.any
    ba40:	cmp	x22, #0x0
    ba44:	cset	w0, eq  // eq = none
    ba48:	ldp	x21, x22, [sp, #16]
    ba4c:	ldp	x23, x30, [sp, #32]
    ba50:	ldp	x19, x20, [sp], #48
    ba54:	ret
    ba58:	ldrb	w2, [x0]
    ba5c:	cmp	w2, #0x2a
    ba60:	b.eq	ba6c <__ubsan_get_current_report_data@@Base+0x2a4>  // b.none
    ba64:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
    ba68:	cbz	w0, ba40 <__ubsan_get_current_report_data@@Base+0x278>
    ba6c:	mov	x2, x23
    ba70:	mov	x1, x20
    ba74:	mov	x0, x19
    ba78:	mov	x3, #0x0                   	// #0
    ba7c:	bl	67b0 <__dynamic_cast@plt>
    ba80:	cbz	x0, ba8c <__ubsan_get_current_report_data@@Base+0x2c4>
    ba84:	ldr	x19, [x0, #16]
    ba88:	b	ba30 <__ubsan_get_current_report_data@@Base+0x268>
    ba8c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    ba90:	mov	x0, x19
    ba94:	mov	x1, x20
    ba98:	mov	x3, #0x0                   	// #0
    ba9c:	ldr	x2, [x2, #3920]
    baa0:	bl	67b0 <__dynamic_cast@plt>
    baa4:	mov	x19, x0
    baa8:	cbz	x0, baf8 <__ubsan_get_current_report_data@@Base+0x330>
    baac:	mov	w20, #0x0                   	// #0
    bab0:	ldr	w0, [x19, #20]
    bab4:	cmp	w0, w20
    bab8:	b.eq	baf8 <__ubsan_get_current_report_data@@Base+0x330>  // b.none
    babc:	ubfiz	x0, x20, #4, #32
    bac0:	add	x0, x19, x0
    bac4:	ldr	x1, [x0, #32]
    bac8:	asr	x2, x1, #8
    bacc:	tbz	w1, #0, bad8 <__ubsan_get_current_report_data@@Base+0x310>
    bad0:	mov	w0, #0x1                   	// #1
    bad4:	b	ba48 <__ubsan_get_current_report_data@@Base+0x280>
    bad8:	ldr	x0, [x0, #24]
    badc:	sub	x2, x22, x2
    bae0:	mov	x1, x21
    bae4:	bl	ba08 <__ubsan_get_current_report_data@@Base+0x240>
    bae8:	tst	w0, #0xff
    baec:	b.ne	bad0 <__ubsan_get_current_report_data@@Base+0x308>  // b.any
    baf0:	add	w20, w20, #0x1
    baf4:	b	bab0 <__ubsan_get_current_report_data@@Base+0x2e8>
    baf8:	mov	w0, #0x0                   	// #0
    bafc:	b	ba48 <__ubsan_get_current_report_data@@Base+0x280>
    bb00:	and	w4, w2, #0xffff
    bb04:	stp	x19, x20, [sp, #-48]!
    bb08:	eor	w4, w4, #0x1
    bb0c:	mov	x20, x1
    bb10:	adrp	x3, 51000 <__ubsan_vptr_type_cache@@Base+0x188>
    bb14:	mov	x19, x2
    bb18:	lsr	w6, w2, #16
    bb1c:	mov	w1, w4
    bb20:	add	x7, x3, #0x278
    bb24:	mov	w5, #0x5                   	// #5
    bb28:	stp	x21, x22, [sp, #16]
    bb2c:	str	x30, [sp, #32]
    bb30:	mov	w21, w1
    bb34:	ldr	x2, [x7, x21, lsl #3]
    bb38:	cbz	x2, bb44 <__ubsan_get_current_report_data@@Base+0x37c>
    bb3c:	cmp	x19, x2
    bb40:	b.ne	bb78 <__ubsan_get_current_report_data@@Base+0x3b0>  // b.any
    bb44:	add	x3, x3, #0x278
    bb48:	add	x21, x3, x21, lsl #3
    bb4c:	cmp	x2, x19
    bb50:	b.ne	bba8 <__ubsan_get_current_report_data@@Base+0x3e0>  // b.any
    bb54:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    bb58:	and	x1, x2, #0x7f
    bb5c:	ldr	x0, [x0, #3792]
    bb60:	str	x2, [x0, x1, lsl #3]
    bb64:	mov	w0, #0x1                   	// #1
    bb68:	ldp	x21, x22, [sp, #16]
    bb6c:	ldr	x30, [sp, #32]
    bb70:	ldp	x19, x20, [sp], #48
    bb74:	ret
    bb78:	add	w2, w6, w1
    bb7c:	add	w1, w2, #0x1
    bb80:	cmp	w1, #0x10, lsl #12
    bb84:	b.ls	bb8c <__ubsan_get_current_report_data@@Base+0x3c4>  // b.plast
    bb88:	sub	w1, w2, #0x10, lsl #12
    bb8c:	subs	w5, w5, #0x1
    bb90:	b.ne	bb30 <__ubsan_get_current_report_data@@Base+0x368>  // b.any
    bb94:	add	x3, x3, #0x278
    bb98:	mov	w1, w4
    bb9c:	add	x21, x3, w4, uxth #3
    bba0:	ldr	x2, [x3, x1, lsl #3]
    bba4:	b	bb4c <__ubsan_get_current_report_data@@Base+0x384>
    bba8:	ldr	x0, [x0]
    bbac:	bl	b9c4 <__ubsan_get_current_report_data@@Base+0x1fc>
    bbb0:	cbnz	x0, bbbc <__ubsan_get_current_report_data@@Base+0x3f4>
    bbb4:	mov	w0, #0x0                   	// #0
    bbb8:	b	bb68 <__ubsan_get_current_report_data@@Base+0x3a0>
    bbbc:	ldr	x22, [x0]
    bbc0:	add	x1, x22, #0x100, lsl #12
    bbc4:	cmp	x1, #0x200, lsl #12
    bbc8:	b.hi	bbb4 <__ubsan_get_current_report_data@@Base+0x3ec>  // b.pmore
    bbcc:	ldr	x0, [x0, #8]
    bbd0:	cbz	x0, bbb4 <__ubsan_get_current_report_data@@Base+0x3ec>
    bbd4:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    bbd8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    bbdc:	mov	x3, #0x0                   	// #0
    bbe0:	ldr	x2, [x2, #4064]
    bbe4:	ldr	x1, [x1, #3928]
    bbe8:	bl	67b0 <__dynamic_cast@plt>
    bbec:	cbz	x0, bbb4 <__ubsan_get_current_report_data@@Base+0x3ec>
    bbf0:	neg	x2, x22
    bbf4:	mov	x1, x20
    bbf8:	bl	ba08 <__ubsan_get_current_report_data@@Base+0x240>
    bbfc:	ands	w0, w0, #0xff
    bc00:	b.eq	bbb4 <__ubsan_get_current_report_data@@Base+0x3ec>  // b.none
    bc04:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    bc08:	and	x2, x19, #0x7f
    bc0c:	str	x19, [x21]
    bc10:	ldr	x1, [x1, #3792]
    bc14:	str	x19, [x1, x2, lsl #3]
    bc18:	b	bb68 <__ubsan_get_current_report_data@@Base+0x3a0>
    bc1c:	stp	x19, x20, [sp, #-32]!
    bc20:	mov	x19, x8
    bc24:	stp	x21, x30, [sp, #16]
    bc28:	bl	b9c4 <__ubsan_get_current_report_data@@Base+0x1fc>
    bc2c:	cbnz	x0, bc44 <__ubsan_get_current_report_data@@Base+0x47c>
    bc30:	stp	xzr, xzr, [x19]
    bc34:	str	xzr, [x19, #16]
    bc38:	ldp	x21, x30, [sp, #16]
    bc3c:	ldp	x19, x20, [sp], #32
    bc40:	ret
    bc44:	ldr	x1, [x0]
    bc48:	add	x2, x1, #0x100, lsl #12
    bc4c:	cmp	x2, #0x200, lsl #12
    bc50:	b.ls	bc5c <__ubsan_get_current_report_data@@Base+0x494>  // b.plast
    bc54:	stp	xzr, x1, [x19]
    bc58:	b	bc34 <__ubsan_get_current_report_data@@Base+0x46c>
    bc5c:	ldr	x21, [x0, #8]
    bc60:	neg	x20, x1
    bc64:	mov	x1, x20
    bc68:	mov	x0, x21
    bc6c:	bl	b908 <__ubsan_get_current_report_data@@Base+0x140>
    bc70:	ldr	x1, [x21, #8]
    bc74:	cbz	x0, bc88 <__ubsan_get_current_report_data@@Base+0x4c0>
    bc78:	ldr	x0, [x0, #8]
    bc7c:	stp	x1, x20, [x19]
    bc80:	str	x0, [x19, #16]
    bc84:	b	bc38 <__ubsan_get_current_report_data@@Base+0x470>
    bc88:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    bc8c:	add	x0, x0, #0x76e
    bc90:	b	bc7c <__ubsan_get_current_report_data@@Base+0x4b4>
    bc94:	stp	x19, x20, [sp, #-32]!
    bc98:	ldr	x20, [x0]
    bc9c:	ldrh	w1, [x20]
    bca0:	str	x30, [sp, #16]
    bca4:	cbnz	w1, bcf4 <__ubsan_get_current_report_data@@Base+0x52c>
    bca8:	ldrh	w1, [x20, #2]
    bcac:	tbz	w1, #0, bcf4 <__ubsan_get_current_report_data@@Base+0x52c>
    bcb0:	mov	x19, x0
    bcb4:	bl	bf5c <__ubsan_get_current_report_data@@Base+0x794>
    bcb8:	tst	w0, #0xff
    bcbc:	b.eq	bd14 <__ubsan_get_current_report_data@@Base+0x54c>  // b.none
    bcc0:	mov	x0, x20
    bcc4:	bl	ac2c <__ubsan_handle_cfi_check_fail_abort@@Base+0xb0>
    bcc8:	mov	w20, #0x80                  	// #128
    bccc:	sub	w20, w20, w0
    bcd0:	ldr	x0, [x19, #8]
    bcd4:	mov	x2, x20
    bcd8:	mov	x1, #0x0                   	// #0
    bcdc:	bl	6970 <__ashlti3@plt>
    bce0:	mov	x2, x20
    bce4:	bl	66d0 <__ashrti3@plt>
    bce8:	ldr	x30, [sp, #16]
    bcec:	ldp	x19, x20, [sp], #32
    bcf0:	ret
    bcf4:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    bcf8:	add	x2, x2, #0x7e9
    bcfc:	mov	x4, #0x0                   	// #0
    bd00:	mov	x3, #0x0                   	// #0
    bd04:	mov	w1, #0x16                  	// #22
    bd08:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    bd0c:	add	x0, x0, #0x812
    bd10:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    bd14:	mov	x0, x20
    bd18:	bl	ac2c <__ubsan_handle_cfi_check_fail_abort@@Base+0xb0>
    bd1c:	cmp	w0, #0x40
    bd20:	b.ne	bd34 <__ubsan_get_current_report_data@@Base+0x56c>  // b.any
    bd24:	ldr	x0, [x19, #8]
    bd28:	ldr	x0, [x0]
    bd2c:	asr	x1, x0, #63
    bd30:	b	bce8 <__ubsan_get_current_report_data@@Base+0x520>
    bd34:	cmp	w0, #0x80
    bd38:	b.ne	bd48 <__ubsan_get_current_report_data@@Base+0x580>  // b.any
    bd3c:	ldr	x1, [x19, #8]
    bd40:	ldp	x0, x1, [x1]
    bd44:	b	bce8 <__ubsan_get_current_report_data@@Base+0x520>
    bd48:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    bd4c:	mov	x4, #0x0                   	// #0
    bd50:	add	x2, x2, #0x840
    bd54:	mov	x3, #0x0                   	// #0
    bd58:	mov	w1, #0x27                  	// #39
    bd5c:	b	bd08 <__ubsan_get_current_report_data@@Base+0x540>
    bd60:	stp	x19, x20, [sp, #-32]!
    bd64:	ldr	x20, [x0]
    bd68:	ldrh	w1, [x20]
    bd6c:	str	x30, [sp, #16]
    bd70:	cbnz	w1, bda8 <__ubsan_get_current_report_data@@Base+0x5e0>
    bd74:	ldrh	w1, [x20, #2]
    bd78:	tbnz	w1, #0, bda8 <__ubsan_get_current_report_data@@Base+0x5e0>
    bd7c:	mov	x19, x0
    bd80:	bl	bf5c <__ubsan_get_current_report_data@@Base+0x794>
    bd84:	tst	w0, #0xff
    bd88:	b.ne	bdc8 <__ubsan_get_current_report_data@@Base+0x600>  // b.any
    bd8c:	mov	x0, x20
    bd90:	bl	ac2c <__ubsan_handle_cfi_check_fail_abort@@Base+0xb0>
    bd94:	cmp	w0, #0x40
    bd98:	b.ne	bddc <__ubsan_get_current_report_data@@Base+0x614>  // b.any
    bd9c:	ldr	x0, [x19, #8]
    bda0:	ldr	x0, [x0]
    bda4:	b	bdcc <__ubsan_get_current_report_data@@Base+0x604>
    bda8:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    bdac:	add	x2, x2, #0x867
    bdb0:	mov	x4, #0x0                   	// #0
    bdb4:	mov	x3, #0x0                   	// #0
    bdb8:	mov	w1, #0x2b                  	// #43
    bdbc:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    bdc0:	add	x0, x0, #0x812
    bdc4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    bdc8:	ldr	x0, [x19, #8]
    bdcc:	mov	x1, #0x0                   	// #0
    bdd0:	ldr	x30, [sp, #16]
    bdd4:	ldp	x19, x20, [sp], #32
    bdd8:	ret
    bddc:	cmp	w0, #0x80
    bde0:	b.ne	bdf0 <__ubsan_get_current_report_data@@Base+0x628>  // b.any
    bde4:	ldr	x1, [x19, #8]
    bde8:	ldp	x0, x1, [x1]
    bdec:	b	bdd0 <__ubsan_get_current_report_data@@Base+0x608>
    bdf0:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    bdf4:	mov	x4, #0x0                   	// #0
    bdf8:	add	x2, x2, #0x840
    bdfc:	mov	x3, #0x0                   	// #0
    be00:	mov	w1, #0x37                  	// #55
    be04:	b	bdbc <__ubsan_get_current_report_data@@Base+0x5f4>
    be08:	ldr	x2, [x0]
    be0c:	mov	x1, x0
    be10:	ldrh	w3, [x2]
    be14:	cbnz	w3, be24 <__ubsan_get_current_report_data@@Base+0x65c>
    be18:	ldrh	w2, [x2, #2]
    be1c:	tbnz	w2, #0, be24 <__ubsan_get_current_report_data@@Base+0x65c>
    be20:	b	bd60 <__ubsan_get_current_report_data@@Base+0x598>
    be24:	str	x30, [sp, #-16]!
    be28:	mov	x0, x1
    be2c:	bl	bc94 <__ubsan_get_current_report_data@@Base+0x4cc>
    be30:	tbz	x1, #63, be54 <__ubsan_get_current_report_data@@Base+0x68c>
    be34:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    be38:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    be3c:	add	x2, x2, #0x892
    be40:	add	x0, x0, #0x812
    be44:	mov	x4, #0x0                   	// #0
    be48:	mov	x3, #0x0                   	// #0
    be4c:	mov	w1, #0x3e                  	// #62
    be50:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    be54:	ldr	x30, [sp], #16
    be58:	ret
    be5c:	stp	x19, x30, [sp, #-32]!
    be60:	mov	x19, x0
    be64:	ldr	x0, [x0]
    be68:	ldrh	w1, [x0]
    be6c:	cmp	w1, #0x1
    be70:	b.eq	be94 <__ubsan_get_current_report_data@@Base+0x6cc>  // b.none
    be74:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    be78:	add	x2, x2, #0x8a6
    be7c:	mov	x4, #0x0                   	// #0
    be80:	mov	x3, #0x0                   	// #0
    be84:	mov	w1, #0x46                  	// #70
    be88:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    be8c:	add	x0, x0, #0x812
    be90:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    be94:	bl	bf24 <__ubsan_get_current_report_data@@Base+0x75c>
    be98:	mov	w2, w0
    be9c:	cmp	w0, #0x40
    bea0:	b.hi	bf00 <__ubsan_get_current_report_data@@Base+0x738>  // b.pmore
    bea4:	cmp	w0, #0x20
    bea8:	add	x1, x19, #0x8
    beac:	add	x0, sp, #0x18
    beb0:	b.eq	bed4 <__ubsan_get_current_report_data@@Base+0x70c>  // b.none
    beb4:	cmp	w2, #0x40
    beb8:	b.eq	beec <__ubsan_get_current_report_data@@Base+0x724>  // b.none
    bebc:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    bec0:	mov	x4, #0x0                   	// #0
    bec4:	add	x2, x2, #0x8c7
    bec8:	mov	x3, #0x0                   	// #0
    becc:	mov	w1, #0x6c                  	// #108
    bed0:	b	be88 <__ubsan_get_current_report_data@@Base+0x6c0>
    bed4:	mov	x2, #0x4                   	// #4
    bed8:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
    bedc:	ldr	s0, [sp, #24]
    bee0:	bl	69f0 <__extendsftf2@plt>
    bee4:	ldp	x19, x30, [sp], #32
    bee8:	ret
    beec:	mov	x2, #0x8                   	// #8
    bef0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
    bef4:	ldr	d0, [sp, #24]
    bef8:	bl	68f0 <__extenddftf2@plt>
    befc:	b	bee4 <__ubsan_get_current_report_data@@Base+0x71c>
    bf00:	cmp	w0, #0x60
    bf04:	b.eq	bf18 <__ubsan_get_current_report_data@@Base+0x750>  // b.none
    bf08:	cmp	w0, #0x80
    bf0c:	b.eq	bf18 <__ubsan_get_current_report_data@@Base+0x750>  // b.none
    bf10:	cmp	w0, #0x50
    bf14:	b.ne	bebc <__ubsan_get_current_report_data@@Base+0x6f4>  // b.any
    bf18:	ldr	x0, [x19, #8]
    bf1c:	ldr	q0, [x0]
    bf20:	b	bee4 <__ubsan_get_current_report_data@@Base+0x71c>
    bf24:	ldrh	w1, [x0]
    bf28:	cmp	w1, #0x1
    bf2c:	b.eq	bf54 <__ubsan_get_current_report_data@@Base+0x78c>  // b.none
    bf30:	str	x30, [sp, #-16]!
    bf34:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    bf38:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    bf3c:	add	x2, x2, #0x7af
    bf40:	add	x0, x0, #0xc18
    bf44:	mov	x4, #0x0                   	// #0
    bf48:	mov	x3, #0x0                   	// #0
    bf4c:	mov	w1, #0x81                  	// #129
    bf50:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    bf54:	ldrh	w0, [x0, #2]
    bf58:	ret
    bf5c:	ldr	x0, [x0]
    bf60:	str	x30, [sp, #-16]!
    bf64:	ldrh	w1, [x0]
    bf68:	cbz	w1, bf8c <__ubsan_get_current_report_data@@Base+0x7c4>
    bf6c:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    bf70:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    bf74:	add	x2, x2, #0x7c6
    bf78:	add	x0, x0, #0xc18
    bf7c:	mov	x4, #0x0                   	// #0
    bf80:	mov	x3, #0x0                   	// #0
    bf84:	mov	w1, #0x97                  	// #151
    bf88:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    bf8c:	bl	ac2c <__ubsan_handle_cfi_check_fail_abort@@Base+0xb0>
    bf90:	cmp	w0, #0x40
    bf94:	cset	w0, ls  // ls = plast
    bf98:	ldr	x30, [sp], #16
    bf9c:	ret

000000000000bfa0 <__sancov_default_options@@Base>:
    bfa0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    bfa4:	add	x0, x0, #0x6df
    bfa8:	ret
    bfac:	mov	w1, #0x1                   	// #1
    bfb0:	strh	w1, [x0]
    bfb4:	ret
    bfb8:	stp	x19, x20, [sp, #-80]!
    bfbc:	adrp	x20, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    bfc0:	add	x20, x20, #0x280
    bfc4:	stp	x21, x22, [sp, #16]
    bfc8:	adrp	x22, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    bfcc:	add	x19, sp, #0x30
    bfd0:	mov	w0, #0x1                   	// #1
    bfd4:	strh	w0, [x20]
    bfd8:	mov	x0, x19
    bfdc:	str	x30, [sp, #32]
    bfe0:	bl	12068 <__sanitizer_set_report_fd@@Base+0x17c8>
    bfe4:	adrp	x21, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
    bfe8:	ldr	x22, [x22, #3776]
    bfec:	mov	x1, #0x10                  	// #16
    bff0:	add	x21, x21, #0xd48
    bff4:	mov	x0, x22
    bff8:	bl	c108 <__sancov_default_options@@Base+0x168>
    bffc:	adrp	x3, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c000:	mov	x2, x0
    c004:	add	x3, x3, #0x8fd
    c008:	stp	x21, x20, [x0]
    c00c:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c010:	mov	x0, x19
    c014:	add	x1, x1, #0x94c
    c018:	bl	12010 <__sanitizer_set_report_fd@@Base+0x1770>
    c01c:	mov	x1, #0x10                  	// #16
    c020:	mov	x0, x22
    c024:	bl	c108 <__sancov_default_options@@Base+0x168>
    c028:	mov	x2, x0
    c02c:	str	x21, [x0]
    c030:	add	x0, x20, #0x1
    c034:	adrp	x3, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c038:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c03c:	add	x3, x3, #0x956
    c040:	add	x1, x1, #0x968
    c044:	str	x0, [x2, #8]
    c048:	mov	x0, x19
    c04c:	bl	12010 <__sanitizer_set_report_fd@@Base+0x1770>
    c050:	bl	6b00 <__sancov_default_options@plt>
    c054:	mov	x1, x0
    c058:	mov	x0, x19
    c05c:	bl	11f30 <__sanitizer_set_report_fd@@Base+0x1690>
    c060:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c064:	add	x0, x0, #0x96d
    c068:	bl	12fa0 <__sanitizer_set_report_fd@@Base+0x2700>
    c06c:	mov	x1, x0
    c070:	mov	x0, x19
    c074:	bl	11f30 <__sanitizer_set_report_fd@@Base+0x1690>
    c078:	bl	11b08 <__sanitizer_set_report_fd@@Base+0x1268>
    c07c:	ldrb	w0, [x20, #1]
    c080:	cbz	w0, c08c <__sancov_default_options@@Base+0xec>
    c084:	mov	x0, x19
    c088:	bl	11bbc <__sanitizer_set_report_fd@@Base+0x131c>
    c08c:	ldp	x21, x22, [sp, #16]
    c090:	ldr	x30, [sp, #32]
    c094:	ldp	x19, x20, [sp], #80
    c098:	ret
    c09c:	adrp	x1, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c0a0:	mov	w2, #0x1                   	// #1
    c0a4:	str	x30, [sp, #-16]!
    c0a8:	strb	w2, [x1, #704]
    c0ac:	mov	x2, x0
    c0b0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    c0b4:	ldr	x0, [x0, #4024]
    c0b8:	ldr	x1, [x0]
    c0bc:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c0c0:	add	x0, x0, #0x97c
    c0c4:	bl	16a18 <OnPrint@@Base+0x30c>
    c0c8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    c0cc:	stp	x19, x30, [sp, #-16]!
    c0d0:	mov	x19, x0
    c0d4:	bl	c6f4 <__sancov_default_options@@Base+0x754>
    c0d8:	sub	w2, w0, #0x2
    c0dc:	mov	w1, #0x1                   	// #1
    c0e0:	lsl	w1, w1, w2
    c0e4:	sub	w1, w1, #0x1
    c0e8:	tst	x1, x19
    c0ec:	lsr	x19, x19, x2
    c0f0:	and	x19, x19, #0x3
    c0f4:	cinc	x19, x19, ne  // ne = any
    c0f8:	add	x0, x19, x0, lsl #2
    c0fc:	sub	x0, x0, #0x10
    c100:	ldp	x19, x30, [sp], #16
    c104:	ret
    c108:	stp	x19, x20, [sp, #-32]!
    c10c:	mov	x19, x0
    c110:	mov	x0, x1
    c114:	adrp	x1, 4e000 <_Unwind_Backtrace@GCC_3.3>
    c118:	stp	x21, x30, [sp, #16]
    c11c:	ldr	x1, [x1, #1232]
    c120:	bl	c730 <__sancov_default_options@@Base+0x790>
    c124:	mov	x20, x0
    c128:	ldp	x0, x1, [x19]
    c12c:	sub	x0, x0, x1
    c130:	cmp	x0, x20
    c134:	b.ge	c178 <__sancov_default_options@@Base+0x1d8>  // b.tcont
    c138:	bl	c6bc <__sancov_default_options@@Base+0x71c>
    c13c:	cmp	x0, x20
    c140:	csel	x21, x0, x20, cs  // cs = hs, nlast
    c144:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c148:	add	x1, x1, #0x9cb
    c14c:	mov	w2, #0x0                   	// #0
    c150:	mov	x0, x21
    c154:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
    c158:	add	x1, x0, x21
    c15c:	str	x1, [x19]
    c160:	adrp	x1, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c164:	str	x0, [x19, #8]
    c168:	ldr	x2, [x1, #712]
    c16c:	cbz	x2, c178 <__sancov_default_options@@Base+0x1d8>
    c170:	mov	x1, x21
    c174:	blr	x2
    c178:	ldp	x1, x0, [x19]
    c17c:	sub	x1, x1, x0
    c180:	cmp	x20, x1
    c184:	b.le	c1a8 <__sancov_default_options@@Base+0x208>
    c188:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c18c:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c190:	add	x2, x2, #0x9d4
    c194:	add	x0, x0, #0xa11
    c198:	mov	x4, #0x0                   	// #0
    c19c:	mov	x3, #0x0                   	// #0
    c1a0:	mov	w1, #0xd4                  	// #212
    c1a4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    c1a8:	add	x20, x0, x20
    c1ac:	ldp	x21, x30, [sp, #16]
    c1b0:	str	x20, [x19, #8]
    c1b4:	ldp	x19, x20, [sp], #32
    c1b8:	ret
    c1bc:	sub	x1, x0, #0x1
    c1c0:	tst	x1, x0
    c1c4:	b.eq	c1ec <__sancov_default_options@@Base+0x24c>  // b.none
    c1c8:	str	x30, [sp, #-16]!
    c1cc:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c1d0:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c1d4:	add	x2, x2, #0xa52
    c1d8:	add	x0, x0, #0xa11
    c1dc:	mov	x4, #0x0                   	// #0
    c1e0:	mov	x3, #0x0                   	// #0
    c1e4:	mov	w1, #0xdb                  	// #219
    c1e8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    c1ec:	adrp	x2, 4e000 <_Unwind_Backtrace@GCC_3.3>
    c1f0:	ldr	x1, [x2, #1232]
    c1f4:	cmp	x1, x0
    c1f8:	csel	x0, x1, x0, cs  // cs = hs, nlast
    c1fc:	str	x0, [x2, #1232]
    c200:	ret
    c204:	adrp	x1, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c208:	str	x0, [x1, #712]
    c20c:	ret
    c210:	adrp	x0, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c214:	ldrb	w0, [x0, #704]
    c218:	tst	w0, #0xff
    c21c:	cset	w0, ne  // ne = any
    c220:	ret
    c224:	adrp	x0, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c228:	mov	w1, #0x1                   	// #1
    c22c:	strb	w1, [x0, #704]
    c230:	ret
    c234:	adrp	x0, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c238:	add	x0, x0, #0x2c0
    c23c:	ldrb	w0, [x0, #16]
    c240:	tst	w0, #0xff
    c244:	cset	w0, ne  // ne = any
    c248:	ret
    c24c:	adrp	x1, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c250:	add	x1, x1, #0x2c0
    c254:	and	w0, w0, #0xff
    c258:	strb	w0, [x1, #16]
    c25c:	ret
    c260:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c264:	add	x0, x0, #0xa75
    c268:	b	16a18 <OnPrint@@Base+0x30c>
    c26c:	stp	x19, x20, [sp, #-64]!
    c270:	stp	x21, x22, [sp, #16]
    c274:	str	x30, [sp, #32]
    c278:	adrp	x20, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c27c:	add	x20, x20, #0x2c0
    c280:	ldrb	w0, [x20, #17]
    c284:	dmb	ish
    c288:	and	w0, w0, #0xff
    c28c:	adrp	x22, de000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    c290:	cbnz	w0, c340 <__sancov_default_options@@Base+0x3a0>
    c294:	add	x0, x20, #0x12
    c298:	str	x0, [sp, #56]
    c29c:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    c2a0:	ldrb	w0, [x20, #17]
    c2a4:	tst	w0, #0xff
    c2a8:	b.ne	c338 <__sancov_default_options@@Base+0x398>  // b.any
    c2ac:	add	x19, x22, #0xb00
    c2b0:	mov	x2, #0x80000               	// #524288
    c2b4:	add	x21, x19, #0x80, lsl #12
    c2b8:	mov	x0, x19
    c2bc:	mov	w1, #0x0                   	// #0
    c2c0:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
    c2c4:	mov	x2, #0xd80                 	// #3456
    c2c8:	mov	w1, #0x0                   	// #0
    c2cc:	strb	wzr, [x21]
    c2d0:	adrp	x0, 15e000 <__ubsan_vptr_type_cache@@Base+0x10d188>
    c2d4:	add	x0, x0, #0xb40
    c2d8:	add	x19, x19, #0xc0, lsl #12
    c2dc:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
    c2e0:	mov	x2, #0x248                 	// #584
    c2e4:	mov	w1, #0x0                   	// #0
    c2e8:	movk	x2, #0x4, lsl #16
    c2ec:	adrp	x0, 15f000 <__ubsan_vptr_type_cache@@Base+0x10e188>
    c2f0:	add	x0, x0, #0x8c0
    c2f4:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
    c2f8:	bl	c6bc <__sancov_default_options@@Base+0x71c>
    c2fc:	str	x0, [x21, #3520]
    c300:	adrp	x0, 15f000 <__ubsan_vptr_type_cache@@Base+0x10e188>
    c304:	add	x0, x0, #0x8d0
    c308:	str	x0, [x21, #3528]
    c30c:	mov	x2, #0x28                  	// #40
    c310:	mov	w1, #0x0                   	// #0
    c314:	adrp	x21, 19f000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    c318:	add	x0, x21, #0xb08
    c31c:	add	x21, x21, #0xb08
    c320:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
    c324:	str	x21, [x19, #4104]
    c328:	str	x21, [x19, #4112]
    c32c:	dmb	ish
    c330:	mov	w0, #0x1                   	// #1
    c334:	strb	w0, [x20, #17]
    c338:	add	x0, sp, #0x38
    c33c:	bl	c764 <__sancov_default_options@@Base+0x7c4>
    c340:	add	x0, x22, #0xb00
    c344:	ldp	x21, x22, [sp, #16]
    c348:	ldr	x30, [sp, #32]
    c34c:	ldp	x19, x20, [sp], #64
    c350:	ret
    c354:	stp	x19, x20, [sp, #-64]!
    c358:	mov	x19, x0
    c35c:	mov	x20, #0x1                   	// #1
    c360:	mov	x0, #0x200                 	// #512
    c364:	add	x19, x19, #0x408
    c368:	stp	x21, x22, [sp, #16]
    c36c:	mov	x22, #0x3e                  	// #62
    c370:	stp	x23, x24, [sp, #32]
    c374:	mov	w23, #0x4000                	// #16384
    c378:	mov	x24, #0x40                  	// #64
    c37c:	stp	x25, x30, [sp, #48]
    c380:	bl	c0cc <__sancov_default_options@@Base+0x12c>
    c384:	mov	x25, x20
    c388:	mov	x21, x0
    c38c:	cmp	x20, #0x35
    c390:	b.eq	c3a8 <__sancov_default_options@@Base+0x408>  // b.none
    c394:	mov	x0, x20
    c398:	bl	ccb4 <__sancov_default_options@@Base+0xd14>
    c39c:	cbnz	x0, c3ac <__sancov_default_options@@Base+0x40c>
    c3a0:	mov	x2, #0x0                   	// #0
    c3a4:	b	c3c4 <__sancov_default_options@@Base+0x424>
    c3a8:	mov	x0, #0x200                 	// #512
    c3ac:	udiv	w1, w23, w0
    c3b0:	mov	x2, x0
    c3b4:	cmp	x1, #0x40
    c3b8:	csel	x1, x1, x24, ls  // ls = plast
    c3bc:	cmp	x1, #0x0
    c3c0:	csel	x0, x1, x25, ne  // ne = any
    c3c4:	cmp	x0, #0x3e
    c3c8:	add	x20, x20, #0x1
    c3cc:	csel	x1, x0, x22, ls  // ls = plast
    c3d0:	lsl	x0, x1, #1
    c3d4:	add	x1, x1, #0x2
    c3d8:	stp	x0, x2, [x19]
    c3dc:	cmp	x2, x1, lsl #3
    c3e0:	csel	x0, x21, xzr, cc  // cc = lo, ul, last
    c3e4:	str	x0, [x19, #16]
    c3e8:	cmp	x20, #0x36
    c3ec:	add	x19, x19, #0x400
    c3f0:	b.ne	c38c <__sancov_default_options@@Base+0x3ec>  // b.any
    c3f4:	ldp	x21, x22, [sp, #16]
    c3f8:	ldp	x23, x24, [sp, #32]
    c3fc:	ldp	x25, x30, [sp, #48]
    c400:	ldp	x19, x20, [sp], #64
    c404:	ret
    c408:	cmn	x0, #0x9
    c40c:	b.hi	c4b4 <__sancov_default_options@@Base+0x514>  // b.pmore
    c410:	stp	x19, x20, [sp, #-48]!
    c414:	cmp	x2, #0x0
    c418:	add	x20, x0, #0x8
    c41c:	stp	x21, x30, [sp, #16]
    c420:	mov	x0, #0x8                   	// #8
    c424:	mov	x21, x1
    c428:	csel	x19, x2, x0, ne  // ne = any
    c42c:	cbnz	x1, c474 <__sancov_default_options@@Base+0x4d4>
    c430:	adrp	x0, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c434:	add	x0, x0, #0x2c0
    c438:	add	x0, x0, #0x13
    c43c:	str	x0, [sp, #40]
    c440:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    c444:	bl	c26c <__sancov_default_options@@Base+0x2cc>
    c448:	mov	x3, x19
    c44c:	mov	x2, x20
    c450:	adrp	x1, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c454:	add	x1, x1, #0x2d8
    c458:	bl	d360 <__sancov_default_options@@Base+0x13c0>
    c45c:	mov	x19, x0
    c460:	add	x0, sp, #0x28
    c464:	bl	c764 <__sancov_default_options@@Base+0x7c4>
    c468:	cbnz	x19, c490 <__sancov_default_options@@Base+0x4f0>
    c46c:	mov	x0, x20
    c470:	bl	c09c <__sancov_default_options@@Base+0xfc>
    c474:	bl	c26c <__sancov_default_options@@Base+0x2cc>
    c478:	mov	x3, x19
    c47c:	mov	x2, x20
    c480:	mov	x1, x21
    c484:	bl	d360 <__sancov_default_options@@Base+0x13c0>
    c488:	mov	x19, x0
    c48c:	b	c468 <__sancov_default_options@@Base+0x4c8>
    c490:	mov	x0, x19
    c494:	mov	x1, #0xc041                	// #49217
    c498:	movk	x1, #0xbceb, lsl #16
    c49c:	movk	x1, #0xb03a, lsl #32
    c4a0:	movk	x1, #0x6a6c, lsl #48
    c4a4:	str	x1, [x0], #8
    c4a8:	ldp	x21, x30, [sp, #16]
    c4ac:	ldp	x19, x20, [sp], #48
    c4b0:	ret
    c4b4:	mov	x0, #0x0                   	// #0
    c4b8:	ret
    c4bc:	stp	x19, x20, [sp, #-32]!
    c4c0:	mov	x3, x1
    c4c4:	mov	x1, x2
    c4c8:	str	x30, [sp, #16]
    c4cc:	cbz	x0, c4f8 <__sancov_default_options@@Base+0x558>
    c4d0:	umulh	x2, x3, x0
    c4d4:	cbz	x2, c4f8 <__sancov_default_options@@Base+0x558>
    c4d8:	mov	x2, x0
    c4dc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    c4e0:	ldr	x0, [x0, #4024]
    c4e4:	ldr	x1, [x0]
    c4e8:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c4ec:	add	x0, x0, #0xac9
    c4f0:	bl	16a18 <OnPrint@@Base+0x30c>
    c4f4:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    c4f8:	mul	x19, x0, x3
    c4fc:	mov	x2, #0x0                   	// #0
    c500:	mov	x0, x19
    c504:	bl	c408 <__sancov_default_options@@Base+0x468>
    c508:	mov	x20, x0
    c50c:	cbz	x0, c51c <__sancov_default_options@@Base+0x57c>
    c510:	mov	x2, x19
    c514:	mov	w1, #0x0                   	// #0
    c518:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
    c51c:	mov	x0, x20
    c520:	ldr	x30, [sp, #16]
    c524:	ldp	x19, x20, [sp], #32
    c528:	ret
    c52c:	stp	x19, x20, [sp, #-48]!
    c530:	mov	x3, x0
    c534:	mov	x20, x2
    c538:	stp	x21, x30, [sp, #16]
    c53c:	mov	x0, x1
    c540:	cbnz	x3, c55c <__sancov_default_options@@Base+0x5bc>
    c544:	mov	x1, x20
    c548:	mov	x2, #0x0                   	// #0
    c54c:	bl	c408 <__sancov_default_options@@Base+0x468>
    c550:	ldp	x21, x30, [sp, #16]
    c554:	ldp	x19, x20, [sp], #48
    c558:	ret
    c55c:	cmn	x1, #0x9
    c560:	b.hi	c610 <__sancov_default_options@@Base+0x670>  // b.pmore
    c564:	sub	x21, x3, #0x8
    c568:	add	x19, x1, #0x8
    c56c:	ldur	x4, [x3, #-8]
    c570:	mov	x3, #0xc041                	// #49217
    c574:	movk	x3, #0xbceb, lsl #16
    c578:	movk	x3, #0xb03a, lsl #32
    c57c:	movk	x3, #0x6a6c, lsl #48
    c580:	cmp	x4, x3
    c584:	b.eq	c5a0 <__sancov_default_options@@Base+0x600>  // b.none
    c588:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c58c:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c590:	add	x2, x2, #0xb2f
    c594:	add	x0, x0, #0xa11
    c598:	mov	w1, #0xa5                  	// #165
    c59c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    c5a0:	cbnz	x2, c5f0 <__sancov_default_options@@Base+0x650>
    c5a4:	adrp	x0, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c5a8:	add	x0, x0, #0x2c0
    c5ac:	add	x0, x0, #0x13
    c5b0:	str	x0, [sp, #40]
    c5b4:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    c5b8:	bl	c26c <__sancov_default_options@@Base+0x2cc>
    c5bc:	mov	x3, x19
    c5c0:	mov	x2, x21
    c5c4:	adrp	x1, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c5c8:	add	x1, x1, #0x2d8
    c5cc:	mov	x4, #0x8                   	// #8
    c5d0:	bl	d73c <__sancov_default_options@@Base+0x179c>
    c5d4:	mov	x20, x0
    c5d8:	add	x0, sp, #0x28
    c5dc:	bl	c764 <__sancov_default_options@@Base+0x7c4>
    c5e0:	add	x0, x20, #0x8
    c5e4:	cbnz	x20, c550 <__sancov_default_options@@Base+0x5b0>
    c5e8:	mov	x0, x19
    c5ec:	bl	c09c <__sancov_default_options@@Base+0xfc>
    c5f0:	bl	c26c <__sancov_default_options@@Base+0x2cc>
    c5f4:	mov	x1, x20
    c5f8:	mov	x3, x19
    c5fc:	mov	x2, x21
    c600:	mov	x4, #0x8                   	// #8
    c604:	bl	d73c <__sancov_default_options@@Base+0x179c>
    c608:	mov	x20, x0
    c60c:	b	c5e0 <__sancov_default_options@@Base+0x640>
    c610:	mov	x0, #0x0                   	// #0
    c614:	b	c550 <__sancov_default_options@@Base+0x5b0>
    c618:	cbz	x0, c6b8 <__sancov_default_options@@Base+0x718>
    c61c:	stp	x19, x20, [sp, #-48]!
    c620:	mov	x3, #0xc041                	// #49217
    c624:	movk	x3, #0xbceb, lsl #16
    c628:	ldur	x4, [x0, #-8]
    c62c:	str	x30, [sp, #16]
    c630:	movk	x3, #0xb03a, lsl #32
    c634:	sub	x20, x0, #0x8
    c638:	movk	x3, #0x6a6c, lsl #48
    c63c:	cmp	x4, x3
    c640:	b.eq	c65c <__sancov_default_options@@Base+0x6bc>  // b.none
    c644:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c648:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c64c:	add	x2, x2, #0xb2f
    c650:	add	x0, x0, #0xa11
    c654:	mov	w1, #0xbd                  	// #189
    c658:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    c65c:	stur	xzr, [x0, #-8]
    c660:	mov	x19, x1
    c664:	cbnz	x1, c6a4 <__sancov_default_options@@Base+0x704>
    c668:	adrp	x0, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c66c:	add	x0, x0, #0x2c0
    c670:	add	x0, x0, #0x13
    c674:	str	x0, [sp, #40]
    c678:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    c67c:	bl	c26c <__sancov_default_options@@Base+0x2cc>
    c680:	mov	x2, x20
    c684:	adrp	x1, d1000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c688:	add	x1, x1, #0x2d8
    c68c:	bl	d5fc <__sancov_default_options@@Base+0x165c>
    c690:	add	x0, sp, #0x28
    c694:	bl	c764 <__sancov_default_options@@Base+0x7c4>
    c698:	ldr	x30, [sp, #16]
    c69c:	ldp	x19, x20, [sp], #48
    c6a0:	ret
    c6a4:	bl	c26c <__sancov_default_options@@Base+0x2cc>
    c6a8:	mov	x2, x20
    c6ac:	mov	x1, x19
    c6b0:	bl	d5fc <__sancov_default_options@@Base+0x165c>
    c6b4:	b	c698 <__sancov_default_options@@Base+0x6f8>
    c6b8:	ret
    c6bc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    c6c0:	stp	x19, x20, [sp, #-32]!
    c6c4:	mov	x19, x0
    c6c8:	ldr	x20, [x0, #4016]
    c6cc:	ldr	x1, [x20]
    c6d0:	str	x30, [sp, #16]
    c6d4:	cbnz	x1, c6e0 <__sancov_default_options@@Base+0x740>
    c6d8:	bl	1352c <__sanitizer_set_report_fd@@Base+0x2c8c>
    c6dc:	str	x0, [x20]
    c6e0:	ldr	x0, [x19, #4016]
    c6e4:	ldr	x30, [sp, #16]
    c6e8:	ldp	x19, x20, [sp], #32
    c6ec:	ldr	x0, [x0]
    c6f0:	ret
    c6f4:	cbnz	x0, c71c <__sancov_default_options@@Base+0x77c>
    c6f8:	str	x30, [sp, #-16]!
    c6fc:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c700:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    c704:	add	x2, x2, #0xb7c
    c708:	add	x0, x0, #0x98a
    c70c:	mov	x4, #0x0                   	// #0
    c710:	mov	x3, #0x0                   	// #0
    c714:	mov	w1, #0x151                 	// #337
    c718:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    c71c:	clz	x0, x0
    c720:	mov	w1, #0x3f                  	// #63
    c724:	sub	w0, w1, w0
    c728:	sxtw	x0, w0
    c72c:	ret
    c730:	sub	x2, x1, #0x1
    c734:	tst	x2, x1
    c738:	b.eq	c750 <__sancov_default_options@@Base+0x7b0>  // b.none
    c73c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    c740:	add	x0, x0, #0x9fe
    c744:	str	x30, [sp, #-16]!
    c748:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
    c74c:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    c750:	sub	x0, x0, #0x1
    c754:	add	x0, x0, x1
    c758:	neg	x1, x1
    c75c:	and	x0, x0, x1
    c760:	ret
    c764:	ldr	x0, [x0]
    c768:	dmb	ish
    c76c:	strb	wzr, [x0]
    c770:	ret
    c774:	stp	x19, x20, [sp, #-64]!
    c778:	mov	x19, x0
    c77c:	ldr	x0, [x2, #8]
    c780:	stp	x21, x22, [sp, #16]
    c784:	str	x30, [sp, #32]
    c788:	cbnz	x0, c7ac <__sancov_default_options@@Base+0x80c>
    c78c:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c790:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c794:	add	x2, x2, #0xb8c
    c798:	add	x0, x0, #0xba3
    c79c:	mov	x4, #0x0                   	// #0
    c7a0:	mov	x3, #0x0                   	// #0
    c7a4:	mov	w1, #0xad                  	// #173
    c7a8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    c7ac:	mov	x0, #0x2001                	// #8193
    c7b0:	add	x22, x1, x0
    c7b4:	mov	x20, x2
    c7b8:	lsl	x21, x1, #6
    c7bc:	add	x22, x19, x22, lsl #6
    c7c0:	str	x22, [sp, #56]
    c7c4:	mov	x0, x22
    c7c8:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    c7cc:	ldr	x0, [x22, #8]
    c7d0:	cbnz	x0, c804 <__sancov_default_options@@Base+0x864>
    c7d4:	add	x19, x19, x21
    c7d8:	str	xzr, [x20]
    c7dc:	add	x19, x19, #0x80, lsl #12
    c7e0:	mov	x0, #0x1                   	// #1
    c7e4:	stp	x20, x20, [x19, #80]
    c7e8:	str	x0, [x19, #72]
    c7ec:	add	x0, sp, #0x38
    c7f0:	bl	c764 <__sancov_default_options@@Base+0x7c4>
    c7f4:	ldp	x21, x22, [sp, #16]
    c7f8:	ldr	x30, [sp, #32]
    c7fc:	ldp	x19, x20, [sp], #64
    c800:	ret
    c804:	add	x19, x19, x21
    c808:	add	x0, x0, #0x1
    c80c:	add	x19, x19, #0x80, lsl #12
    c810:	ldr	x1, [x19, #80]
    c814:	str	x1, [x20]
    c818:	str	x20, [x19, #80]
    c81c:	b	c7e8 <__sancov_default_options@@Base+0x848>
    c820:	ldr	x0, [x0]
    c824:	sub	x2, x0, #0x1
    c828:	tst	x2, x1
    c82c:	b.eq	c854 <__sancov_default_options@@Base+0x8b4>  // b.none
    c830:	str	x30, [sp, #-16]!
    c834:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c838:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c83c:	add	x2, x2, #0xbed
    c840:	add	x0, x0, #0xc11
    c844:	mov	x4, #0x0                   	// #0
    c848:	mov	x3, #0x0                   	// #0
    c84c:	mov	w1, #0x123                 	// #291
    c850:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    c854:	sub	x0, x1, x0
    c858:	ret
    c85c:	stp	x19, x20, [sp, #-96]!
    c860:	stp	x21, x22, [sp, #16]
    c864:	stp	x23, x24, [sp, #32]
    c868:	stp	x25, x26, [sp, #48]
    c86c:	sub	x26, x3, #0x1
    c870:	tst	x3, x26
    c874:	str	x30, [sp, #64]
    c878:	b.eq	c89c <__sancov_default_options@@Base+0x8fc>  // b.none
    c87c:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c880:	add	x2, x2, #0xa52
    c884:	mov	x4, #0x0                   	// #0
    c888:	mov	x3, #0x0                   	// #0
    c88c:	mov	w1, #0x53                  	// #83
    c890:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c894:	add	x0, x0, #0xc11
    c898:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    c89c:	mov	x23, x0
    c8a0:	mov	x22, x1
    c8a4:	mov	x24, x3
    c8a8:	mov	x25, x2
    c8ac:	mov	x0, x2
    c8b0:	ldr	x1, [x23]
    c8b4:	bl	c730 <__sancov_default_options@@Base+0x790>
    c8b8:	ldr	x1, [x23]
    c8bc:	add	x19, x0, x1
    c8c0:	cmp	x24, x1
    c8c4:	b.ls	c8cc <__sancov_default_options@@Base+0x92c>  // b.plast
    c8c8:	add	x19, x19, x24
    c8cc:	cmp	x19, x25
    c8d0:	b.cs	c914 <__sancov_default_options@@Base+0x974>  // b.hs, b.nlast
    c8d4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    c8d8:	mov	x3, x24
    c8dc:	mov	x2, x19
    c8e0:	mov	x20, #0x0                   	// #0
    c8e4:	ldr	x0, [x0, #4024]
    c8e8:	ldr	x1, [x0]
    c8ec:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c8f0:	add	x0, x0, #0xc5b
    c8f4:	bl	16a18 <OnPrint@@Base+0x30c>
    c8f8:	mov	x0, x20
    c8fc:	ldp	x21, x22, [sp, #16]
    c900:	ldp	x23, x24, [sp, #32]
    c904:	ldp	x25, x26, [sp, #48]
    c908:	ldr	x30, [sp, #64]
    c90c:	ldp	x19, x20, [sp], #96
    c910:	ret
    c914:	adrp	x0, 4e000 <_Unwind_Backtrace@GCC_3.3>
    c918:	ldr	x1, [x0, #1240]
    c91c:	mov	x0, x19
    c920:	bl	14a18 <__sanitizer_set_report_fd@@Base+0x4178>
    c924:	mov	x20, x0
    c928:	cbz	x0, c8f8 <__sancov_default_options@@Base+0x958>
    c92c:	ldr	x21, [x23]
    c930:	sub	x0, x21, #0x1
    c934:	tst	x20, x0
    c938:	b.eq	c954 <__sancov_default_options@@Base+0x9b4>  // b.none
    c93c:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c940:	mov	x4, #0x0                   	// #0
    c944:	add	x2, x2, #0xcbc
    c948:	mov	x3, #0x0                   	// #0
    c94c:	mov	w1, #0x62                  	// #98
    c950:	b	c890 <__sancov_default_options@@Base+0x8f0>
    c954:	add	x21, x21, x20
    c958:	ands	x1, x21, x26
    c95c:	b.eq	c988 <__sancov_default_options@@Base+0x9e8>  // b.none
    c960:	add	x21, x24, x21
    c964:	sub	x21, x21, x1
    c968:	tst	x21, x26
    c96c:	b.eq	c988 <__sancov_default_options@@Base+0x9e8>  // b.none
    c970:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c974:	mov	x4, #0x0                   	// #0
    c978:	add	x2, x2, #0xce6
    c97c:	mov	x3, #0x0                   	// #0
    c980:	mov	w1, #0x68                  	// #104
    c984:	b	c890 <__sancov_default_options@@Base+0x8f0>
    c988:	tst	x21, x0
    c98c:	b.eq	c9a8 <__sancov_default_options@@Base+0xa08>  // b.none
    c990:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c994:	mov	x4, #0x0                   	// #0
    c998:	add	x2, x2, #0xd0b
    c99c:	mov	x3, #0x0                   	// #0
    c9a0:	mov	w1, #0x69                  	// #105
    c9a4:	b	c890 <__sancov_default_options@@Base+0x8f0>
    c9a8:	add	x3, x21, x25
    c9ac:	cmp	x20, x3
    c9b0:	b.ls	c9c8 <__sancov_default_options@@Base+0xa28>  // b.plast
    c9b4:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c9b8:	mov	x4, x20
    c9bc:	add	x2, x2, #0xd31
    c9c0:	mov	w1, #0x6a                  	// #106
    c9c4:	b	c890 <__sancov_default_options@@Base+0x8f0>
    c9c8:	add	x4, x20, x19
    c9cc:	cmp	x4, x3
    c9d0:	b.cs	c9e4 <__sancov_default_options@@Base+0xa44>  // b.hs, b.nlast
    c9d4:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    c9d8:	mov	w1, #0x6b                  	// #107
    c9dc:	add	x2, x2, #0xd4f
    c9e0:	b	c890 <__sancov_default_options@@Base+0x8f0>
    c9e4:	mov	x1, x21
    c9e8:	mov	x0, x23
    c9ec:	bl	c820 <__sancov_default_options@@Base+0x880>
    c9f0:	mov	x24, x0
    c9f4:	mov	x0, x19
    c9f8:	stp	x20, x19, [x24]
    c9fc:	str	x25, [x24, #16]
    ca00:	bl	c6f4 <__sancov_default_options@@Base+0x754>
    ca04:	mov	x20, x0
    ca08:	cmp	x0, #0x3f
    ca0c:	b.ls	ca28 <__sancov_default_options@@Base+0xa88>  // b.plast
    ca10:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    ca14:	mov	x3, x0
    ca18:	add	x2, x2, #0xd6d
    ca1c:	mov	x4, #0x40                  	// #64
    ca20:	mov	w1, #0x71                  	// #113
    ca24:	b	c890 <__sancov_default_options@@Base+0x8f0>
    ca28:	add	x0, x23, #0x40, lsl #12
    ca2c:	add	x0, x0, #0x240
    ca30:	str	x0, [sp, #88]
    ca34:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    ca38:	add	x1, x23, #0x40, lsl #12
    ca3c:	mov	x0, #0x7fff                	// #32767
    ca40:	ldr	x3, [x1, #16]
    ca44:	cmp	x3, x0
    ca48:	b.ls	ca60 <__sancov_default_options@@Base+0xac0>  // b.plast
    ca4c:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    ca50:	mov	x4, #0x8000                	// #32768
    ca54:	add	x2, x2, #0xdbb
    ca58:	mov	w1, #0x15                  	// #21
    ca5c:	b	c890 <__sancov_default_options@@Base+0x8f0>
    ca60:	add	x0, x3, #0x1
    ca64:	str	x0, [x1, #16]
    ca68:	ldr	x0, [x23, #8]
    ca6c:	add	x20, x23, x20, lsl #3
    ca70:	ldr	x2, [x1, #56]
    ca74:	str	x3, [x24, #24]
    ca78:	str	x24, [x0, x3, lsl #3]
    ca7c:	add	x20, x20, #0x40, lsl #12
    ca80:	ldr	x0, [x1, #32]
    ca84:	strb	wzr, [x1, #24]
    ca88:	add	x0, x0, #0x1
    ca8c:	str	x0, [x1, #32]
    ca90:	ldr	x0, [x1, #48]
    ca94:	add	x0, x19, x0
    ca98:	str	x0, [x1, #48]
    ca9c:	cmp	x2, x0
    caa0:	csel	x0, x2, x0, cs  // cs = hs, nlast
    caa4:	str	x0, [x1, #56]
    caa8:	ldr	x0, [x20, #64]
    caac:	add	x0, x0, #0x1
    cab0:	str	x0, [x20, #64]
    cab4:	ldr	x0, [x22, #16]
    cab8:	mov	x20, x21
    cabc:	add	x0, x19, x0
    cac0:	str	x0, [x22, #16]
    cac4:	add	x0, sp, #0x58
    cac8:	ldr	x2, [x22, #24]
    cacc:	add	x19, x19, x2
    cad0:	str	x19, [x22, #24]
    cad4:	bl	c764 <__sancov_default_options@@Base+0x7c4>
    cad8:	b	c8f8 <__sancov_default_options@@Base+0x958>
    cadc:	stp	x19, x20, [sp, #-48]!
    cae0:	mov	x20, x0
    cae4:	add	x0, x0, #0x40, lsl #12
    cae8:	add	x0, x0, #0x240
    caec:	mov	x19, x1
    caf0:	str	x30, [sp, #16]
    caf4:	str	x0, [sp, #40]
    caf8:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    cafc:	add	x0, x20, #0x40, lsl #12
    cb00:	mov	x3, #0x0                   	// #0
    cb04:	ldr	x2, [x0, #16]
    cb08:	mov	x0, #0x0                   	// #0
    cb0c:	cmp	x2, x0
    cb10:	b.eq	cb3c <__sancov_default_options@@Base+0xb9c>  // b.none
    cb14:	ldr	x1, [x20, #8]
    cb18:	ldr	x1, [x1, x0, lsl #3]
    cb1c:	cmp	x19, x1
    cb20:	b.cc	cb34 <__sancov_default_options@@Base+0xb94>  // b.lo, b.ul, b.last
    cb24:	sub	x4, x19, x3
    cb28:	sub	x5, x19, x1
    cb2c:	cmp	x5, x4
    cb30:	csel	x3, x3, x1, cs  // cs = hs, nlast
    cb34:	add	x0, x0, #0x1
    cb38:	b	cb0c <__sancov_default_options@@Base+0xb6c>
    cb3c:	cbz	x3, cbd4 <__sancov_default_options@@Base+0xc34>
    cb40:	ldr	x4, [x3]
    cb44:	cmp	x3, x4
    cb48:	b.cs	cb64 <__sancov_default_options@@Base+0xbc4>  // b.hs, b.nlast
    cb4c:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cb50:	add	x2, x2, #0xdd5
    cb54:	mov	w1, #0xc1                  	// #193
    cb58:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cb5c:	add	x0, x0, #0xc11
    cb60:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    cb64:	ldr	x0, [x3, #8]
    cb68:	add	x4, x4, x0
    cb6c:	cmp	x3, x4
    cb70:	b.cc	cb84 <__sancov_default_options@@Base+0xbe4>  // b.lo, b.ul, b.last
    cb74:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cb78:	mov	w1, #0xc2                  	// #194
    cb7c:	add	x2, x2, #0xdf9
    cb80:	b	cb58 <__sancov_default_options@@Base+0xbb8>
    cb84:	cmp	x3, x19
    cb88:	b.ls	cba0 <__sancov_default_options@@Base+0xc00>  // b.plast
    cb8c:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cb90:	mov	x4, x19
    cb94:	add	x2, x2, #0xe2a
    cb98:	mov	w1, #0xc3                  	// #195
    cb9c:	b	cb58 <__sancov_default_options@@Base+0xbb8>
    cba0:	cmp	x19, x4
    cba4:	b.cs	cbd4 <__sancov_default_options@@Base+0xc34>  // b.hs, b.nlast
    cba8:	ldr	x19, [x20]
    cbac:	sub	x0, x19, #0x1
    cbb0:	add	x19, x3, x19
    cbb4:	tst	x0, x3
    cbb8:	b.eq	cbd8 <__sancov_default_options@@Base+0xc38>  // b.none
    cbbc:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cbc0:	mov	x4, #0x0                   	// #0
    cbc4:	add	x2, x2, #0xe45
    cbc8:	mov	x3, #0x0                   	// #0
    cbcc:	mov	w1, #0x12b                 	// #299
    cbd0:	b	cb58 <__sancov_default_options@@Base+0xbb8>
    cbd4:	mov	x19, #0x0                   	// #0
    cbd8:	add	x0, sp, #0x28
    cbdc:	bl	c764 <__sancov_default_options@@Base+0x7c4>
    cbe0:	mov	x0, x19
    cbe4:	ldr	x30, [sp, #16]
    cbe8:	ldp	x19, x20, [sp], #48
    cbec:	ret
    cbf0:	mov	x3, x1
    cbf4:	mov	x1, #0xffff                	// #65535
    cbf8:	cmp	x3, x1
    cbfc:	b.ls	cc20 <__sancov_default_options@@Base+0xc80>  // b.plast
    cc00:	str	x30, [sp, #-16]!
    cc04:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cc08:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cc0c:	add	x2, x2, #0xe6f
    cc10:	add	x0, x0, #0xe84
    cc14:	mov	x4, #0x10000               	// #65536
    cc18:	mov	w1, #0x4f                  	// #79
    cc1c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    cc20:	ldr	x0, [x0, x3, lsl #3]
    cc24:	dmb	ish
    cc28:	ret
    cc2c:	stp	x19, x30, [sp, #-16]!
    cc30:	mov	x2, #0xfffffff             	// #268435455
    cc34:	lsr	x19, x1, #20
    cc38:	cmp	x2, x1, lsr #20
    cc3c:	b.cs	cc60 <__sancov_default_options@@Base+0xcc0>  // b.hs, b.nlast
    cc40:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cc44:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cc48:	mov	x3, x19
    cc4c:	add	x2, x2, #0xecc
    cc50:	add	x0, x0, #0xba3
    cc54:	mov	x4, #0x10000000            	// #268435456
    cc58:	mov	w1, #0x116                 	// #278
    cc5c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    cc60:	lsr	x1, x1, #32
    cc64:	bl	cbf0 <__sancov_default_options@@Base+0xc50>
    cc68:	cbz	x0, cc80 <__sancov_default_options@@Base+0xce0>
    cc6c:	and	x19, x19, #0xfff
    cc70:	ldrb	w0, [x0, x19]
    cc74:	and	x0, x0, #0xff
    cc78:	ldp	x19, x30, [sp], #16
    cc7c:	ret
    cc80:	mov	w0, #0x0                   	// #0
    cc84:	b	cc74 <__sancov_default_options@@Base+0xcd4>
    cc88:	mov	x2, #0xffffffffffff        	// #281474976710655
    cc8c:	cmp	x1, x2
    cc90:	b.hi	ccac <__sancov_default_options@@Base+0xd0c>  // b.pmore
    cc94:	str	x30, [sp, #-16]!
    cc98:	bl	cc2c <__sancov_default_options@@Base+0xc8c>
    cc9c:	cmp	x0, #0x0
    cca0:	cset	w0, ne  // ne = any
    cca4:	ldr	x30, [sp], #16
    cca8:	ret
    ccac:	mov	w0, #0x0                   	// #0
    ccb0:	ret
    ccb4:	cmp	x0, #0x35
    ccb8:	b.eq	cce8 <__sancov_default_options@@Base+0xd48>  // b.none
    ccbc:	sub	x3, x0, #0x10
    ccc0:	mov	x2, #0x100                 	// #256
    ccc4:	lsl	x4, x0, #4
    ccc8:	cmp	x0, #0x10
    cccc:	lsr	x1, x3, #2
    ccd0:	and	x3, x3, #0x3
    ccd4:	lsl	x2, x2, x1
    ccd8:	lsr	x1, x2, #2
    ccdc:	madd	x1, x1, x3, x2
    cce0:	csel	x0, x1, x4, hi  // hi = pmore
    cce4:	ret
    cce8:	mov	x0, #0x200                 	// #512
    ccec:	b	cce4 <__sancov_default_options@@Base+0xd44>
    ccf0:	stp	x19, x20, [sp, #-80]!
    ccf4:	mov	x19, x1
    ccf8:	mov	x1, #0x100000              	// #1048576
    ccfc:	stp	x21, x22, [sp, #16]
    cd00:	mov	x21, x0
    cd04:	adrp	x0, 4e000 <_Unwind_Backtrace@GCC_3.3>
    cd08:	stp	x23, x24, [sp, #32]
    cd0c:	mov	x23, x2
    cd10:	ldr	x2, [x0, #1248]
    cd14:	mov	x0, x1
    cd18:	str	x30, [sp, #48]
    cd1c:	bl	14aac <__sanitizer_set_report_fd@@Base+0x420c>
    cd20:	mov	x20, x0
    cd24:	cbz	x0, ce14 <__sancov_default_options@@Base+0xe74>
    cd28:	tst	x0, #0xfffff
    cd2c:	ldr	x0, [x19, #24]
    cd30:	add	x0, x0, #0x100, lsl #12
    cd34:	str	x0, [x19, #24]
    cd38:	b.eq	cd5c <__sancov_default_options@@Base+0xdbc>  // b.none
    cd3c:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cd40:	add	x2, x2, #0xeee
    cd44:	mov	x4, #0x0                   	// #0
    cd48:	mov	x3, #0x0                   	// #0
    cd4c:	mov	w1, #0x126                 	// #294
    cd50:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cd54:	add	x0, x0, #0xba3
    cd58:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    cd5c:	mov	x0, #0xfffffff             	// #268435455
    cd60:	lsr	x22, x20, #20
    cd64:	cmp	x0, x20, lsr #20
    cd68:	b.cs	cd84 <__sancov_default_options@@Base+0xde4>  // b.hs, b.nlast
    cd6c:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cd70:	mov	x3, x22
    cd74:	add	x2, x2, #0xecc
    cd78:	mov	x4, #0x10000000            	// #268435456
    cd7c:	mov	w1, #0x116                 	// #278
    cd80:	b	cd50 <__sancov_default_options@@Base+0xdb0>
    cd84:	lsr	x24, x20, #32
    cd88:	mov	x0, x21
    cd8c:	mov	x1, x24
    cd90:	and	w23, w23, #0xff
    cd94:	bl	cbf0 <__sancov_default_options@@Base+0xc50>
    cd98:	mov	x19, x0
    cd9c:	cbnz	x0, cde8 <__sancov_default_options@@Base+0xe48>
    cda0:	add	x0, x21, #0x80, lsl #12
    cda4:	str	x0, [sp, #72]
    cda8:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    cdac:	mov	x1, x24
    cdb0:	mov	x0, x21
    cdb4:	bl	cbf0 <__sancov_default_options@@Base+0xc50>
    cdb8:	mov	x19, x0
    cdbc:	cbnz	x0, cde0 <__sancov_default_options@@Base+0xe40>
    cdc0:	mov	w2, #0x0                   	// #0
    cdc4:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cdc8:	mov	x0, #0x1000                	// #4096
    cdcc:	add	x1, x1, #0xf15
    cdd0:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
    cdd4:	dmb	ish
    cdd8:	mov	x19, x0
    cddc:	str	x0, [x21, x24, lsl #3]
    cde0:	add	x0, sp, #0x48
    cde4:	bl	c764 <__sancov_default_options@@Base+0x7c4>
    cde8:	and	x22, x22, #0xfff
    cdec:	ldrb	w4, [x19, x22]
    cdf0:	cbz	x4, ce10 <__sancov_default_options@@Base+0xe70>
    cdf4:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cdf8:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    cdfc:	add	x2, x2, #0xf25
    ce00:	add	x0, x0, #0xe84
    ce04:	mov	x3, #0x0                   	// #0
    ce08:	mov	w1, #0x42                  	// #66
    ce0c:	b	cd58 <__sancov_default_options@@Base+0xdb8>
    ce10:	strb	w23, [x19, x22]
    ce14:	mov	x0, x20
    ce18:	ldp	x21, x22, [sp, #16]
    ce1c:	ldp	x23, x24, [sp, #32]
    ce20:	ldr	x30, [sp, #48]
    ce24:	ldp	x19, x20, [sp], #80
    ce28:	ret
    ce2c:	stp	x19, x20, [sp, #-96]!
    ce30:	mov	x20, x2
    ce34:	mov	x19, #0x0                   	// #0
    ce38:	stp	x23, x24, [sp, #32]
    ce3c:	mov	x24, x0
    ce40:	mov	x23, x6
    ce44:	ldr	x0, [x4]
    ce48:	stp	x21, x22, [sp, #16]
    ce4c:	mov	x22, x1
    ce50:	mov	x21, x4
    ce54:	stp	x25, x26, [sp, #48]
    ce58:	mov	x25, x5
    ce5c:	mov	x26, x7
    ce60:	stp	x27, x28, [sp, #64]
    ce64:	add	x27, x1, x3, lsl #10
    ce68:	mov	x28, #0x1                   	// #1
    ce6c:	str	x30, [sp, #80]
    ce70:	cmp	x19, x26
    ce74:	b.eq	cefc <__sancov_default_options@@Base+0xf5c>  // b.none
    ce78:	cbnz	x0, ce90 <__sancov_default_options@@Base+0xef0>
    ce7c:	ldr	x2, [x27, #24]
    ce80:	cbnz	x2, ced4 <__sancov_default_options@@Base+0xf34>
    ce84:	ldr	x0, [x23, x19, lsl #3]
    ce88:	cbz	x0, cf20 <__sancov_default_options@@Base+0xf80>
    ce8c:	str	xzr, [x0, #8]
    ce90:	ldr	x1, [x0, #8]
    ce94:	ldr	x3, [x23, x19, lsl #3]
    ce98:	add	x2, x1, #0x1
    ce9c:	add	x1, x1, #0x2
    cea0:	str	x2, [x0, #8]
    cea4:	cmp	x25, x2
    cea8:	str	x3, [x0, x1, lsl #3]
    ceac:	b.ne	cecc <__sancov_default_options@@Base+0xf2c>  // b.any
    ceb0:	mov	x8, x20
    ceb4:	ldr	x1, [x8, #8]!
    ceb8:	str	xzr, [x0]
    cebc:	cbnz	x1, cee4 <__sancov_default_options@@Base+0xf44>
    cec0:	stp	x0, x0, [x8, #8]
    cec4:	str	x28, [x20, #8]
    cec8:	mov	x0, #0x0                   	// #0
    cecc:	add	x19, x19, #0x1
    ced0:	b	ce70 <__sancov_default_options@@Base+0xed0>
    ced4:	mov	x1, x24
    ced8:	mov	x0, x22
    cedc:	bl	d28c <__sancov_default_options@@Base+0x12ec>
    cee0:	b	ce88 <__sancov_default_options@@Base+0xee8>
    cee4:	ldr	x2, [x8, #16]
    cee8:	add	x1, x1, #0x1
    ceec:	str	x0, [x2]
    cef0:	str	x0, [x8, #16]
    cef4:	str	x1, [x20, #8]
    cef8:	b	cec8 <__sancov_default_options@@Base+0xf28>
    cefc:	str	x0, [x21]
    cf00:	mov	w0, #0x1                   	// #1
    cf04:	ldp	x21, x22, [sp, #16]
    cf08:	ldp	x23, x24, [sp, #32]
    cf0c:	ldp	x25, x26, [sp, #48]
    cf10:	ldp	x27, x28, [sp, #64]
    cf14:	ldr	x30, [sp, #80]
    cf18:	ldp	x19, x20, [sp], #96
    cf1c:	ret
    cf20:	mov	w0, #0x0                   	// #0
    cf24:	b	cf04 <__sancov_default_options@@Base+0xf64>
    cf28:	stp	x19, x20, [sp, #-496]!
    cf2c:	stp	x21, x22, [sp, #16]
    cf30:	mov	x22, x0
    cf34:	mov	x21, x3
    cf38:	stp	x23, x24, [sp, #32]
    cf3c:	mov	x23, x2
    cf40:	mov	x24, x4
    cf44:	mov	x2, x4
    cf48:	stp	x25, x26, [sp, #48]
    cf4c:	stp	x27, x28, [sp, #64]
    cf50:	str	x30, [sp, #80]
    cf54:	bl	ccf0 <__sancov_default_options@@Base+0xd50>
    cf58:	cbnz	x0, cf7c <__sancov_default_options@@Base+0xfdc>
    cf5c:	mov	w0, #0x0                   	// #0
    cf60:	ldp	x21, x22, [sp, #16]
    cf64:	ldp	x23, x24, [sp, #32]
    cf68:	ldp	x25, x26, [sp, #48]
    cf6c:	ldp	x27, x28, [sp, #64]
    cf70:	ldr	x30, [sp, #80]
    cf74:	ldp	x19, x20, [sp], #496
    cf78:	ret
    cf7c:	mov	x20, x0
    cf80:	cmp	x24, #0x35
    cf84:	b.eq	cfa4 <__sancov_default_options@@Base+0x1004>  // b.none
    cf88:	mov	x0, x24
    cf8c:	bl	ccb4 <__sancov_default_options@@Base+0xd14>
    cf90:	mov	x2, #0x100000              	// #1048576
    cf94:	udiv	x2, x2, x0
    cf98:	cbnz	x0, cfac <__sancov_default_options@@Base+0x100c>
    cf9c:	mov	x26, #0x0                   	// #0
    cfa0:	b	cfcc <__sancov_default_options@@Base+0x102c>
    cfa4:	mov	x0, #0x200                 	// #512
    cfa8:	mov	x2, #0x800                 	// #2048
    cfac:	mov	w1, #0x4000                	// #16384
    cfb0:	mov	x3, #0x40                  	// #64
    cfb4:	mov	x26, x0
    cfb8:	udiv	w1, w1, w0
    cfbc:	cmp	x1, #0x40
    cfc0:	csel	x1, x1, x3, ls  // ls = plast
    cfc4:	cmp	x1, #0x0
    cfc8:	csinc	x0, x1, xzr, ne  // ne = any
    cfcc:	madd	x25, x26, x2, x20
    cfd0:	cmp	x0, #0x3e
    cfd4:	add	x27, sp, #0x70
    cfd8:	add	x28, sp, #0x68
    cfdc:	mov	x19, #0x3e                  	// #62
    cfe0:	csel	x19, x0, x19, ls  // ls = plast
    cfe4:	mov	x0, #0x0                   	// #0
    cfe8:	str	xzr, [sp, #104]
    cfec:	cmp	x20, x25
    cff0:	b.cs	d03c <__sancov_default_options@@Base+0x109c>  // b.hs, b.nlast
    cff4:	str	x20, [x27, x0, lsl #3]
    cff8:	add	x7, x0, #0x1
    cffc:	cmp	x0, #0x2f
    d000:	b.ne	d030 <__sancov_default_options@@Base+0x1090>  // b.any
    d004:	mov	x6, x27
    d008:	mov	x5, x19
    d00c:	mov	x4, x28
    d010:	mov	x3, x24
    d014:	mov	x2, x21
    d018:	mov	x1, x23
    d01c:	mov	x0, x22
    d020:	bl	ce2c <__sancov_default_options@@Base+0xe8c>
    d024:	tst	w0, #0xff
    d028:	b.eq	cf5c <__sancov_default_options@@Base+0xfbc>  // b.none
    d02c:	mov	x7, #0x0                   	// #0
    d030:	add	x20, x20, x26
    d034:	mov	x0, x7
    d038:	b	cfec <__sancov_default_options@@Base+0x104c>
    d03c:	cbnz	x0, d050 <__sancov_default_options@@Base+0x10b0>
    d040:	ldr	x0, [sp, #104]
    d044:	cbnz	x0, d080 <__sancov_default_options@@Base+0x10e0>
    d048:	mov	w0, #0x1                   	// #1
    d04c:	b	cf60 <__sancov_default_options@@Base+0xfc0>
    d050:	mov	x7, x0
    d054:	add	x6, sp, #0x70
    d058:	mov	x5, x19
    d05c:	add	x4, sp, #0x68
    d060:	mov	x3, x24
    d064:	mov	x2, x21
    d068:	mov	x1, x23
    d06c:	mov	x0, x22
    d070:	bl	ce2c <__sancov_default_options@@Base+0xe8c>
    d074:	tst	w0, #0xff
    d078:	b.ne	d040 <__sancov_default_options@@Base+0x10a0>  // b.any
    d07c:	b	cf5c <__sancov_default_options@@Base+0xfbc>
    d080:	ldr	x1, [x0, #8]
    d084:	cbnz	x1, d0a8 <__sancov_default_options@@Base+0x1108>
    d088:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d08c:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d090:	add	x2, x2, #0xb8c
    d094:	add	x0, x0, #0xba3
    d098:	mov	x4, #0x0                   	// #0
    d09c:	mov	x3, #0x0                   	// #0
    d0a0:	mov	w1, #0x169                 	// #361
    d0a4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    d0a8:	mov	x1, x21
    d0ac:	ldr	x2, [x1, #8]!
    d0b0:	str	xzr, [x0]
    d0b4:	cbnz	x2, d0c8 <__sancov_default_options@@Base+0x1128>
    d0b8:	stp	x0, x0, [x1, #8]
    d0bc:	mov	x0, #0x1                   	// #1
    d0c0:	str	x0, [x21, #8]
    d0c4:	b	cf60 <__sancov_default_options@@Base+0xfc0>
    d0c8:	ldr	x3, [x1, #16]
    d0cc:	add	x2, x2, #0x1
    d0d0:	str	x0, [x3]
    d0d4:	str	x0, [x1, #16]
    d0d8:	str	x2, [x21, #8]
    d0dc:	b	d048 <__sancov_default_options@@Base+0x10a8>
    d0e0:	stp	x19, x20, [sp, #-80]!
    d0e4:	mov	x20, x0
    d0e8:	mov	x19, x3
    d0ec:	stp	x21, x22, [sp, #16]
    d0f0:	stp	x23, x24, [sp, #32]
    d0f4:	mov	x23, x1
    d0f8:	mov	x1, #0x2001                	// #8193
    d0fc:	add	x21, x3, x1
    d100:	mov	x24, x2
    d104:	stp	x25, x30, [sp, #48]
    d108:	lsl	x22, x21, #6
    d10c:	add	x22, x22, #0x8
    d110:	add	x21, x0, x21, lsl #6
    d114:	mov	x0, x21
    d118:	str	x21, [sp, #72]
    d11c:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    d120:	add	x25, x20, x22
    d124:	ldr	x0, [x20, x22]
    d128:	cbz	x0, d158 <__sancov_default_options@@Base+0x11b8>
    d12c:	ldr	x0, [x20, x22]
    d130:	ldr	x21, [x25, #8]
    d134:	cbnz	x0, d19c <__sancov_default_options@@Base+0x11fc>
    d138:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d13c:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d140:	add	x2, x2, #0xf46
    d144:	add	x0, x0, #0xf5a
    d148:	mov	x4, #0x0                   	// #0
    d14c:	mov	x3, #0x0                   	// #0
    d150:	mov	w1, #0x40                  	// #64
    d154:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    d158:	mov	x4, x19
    d15c:	mov	x3, x21
    d160:	mov	x2, x24
    d164:	mov	x1, x23
    d168:	mov	x0, x20
    d16c:	bl	cf28 <__sancov_default_options@@Base+0xf88>
    d170:	tst	w0, #0xff
    d174:	b.ne	d12c <__sancov_default_options@@Base+0x118c>  // b.any
    d178:	mov	x21, #0x0                   	// #0
    d17c:	add	x0, sp, #0x48
    d180:	bl	c764 <__sancov_default_options@@Base+0x7c4>
    d184:	mov	x0, x21
    d188:	ldp	x21, x22, [sp, #16]
    d18c:	ldp	x23, x24, [sp, #32]
    d190:	ldp	x25, x30, [sp, #48]
    d194:	ldp	x19, x20, [sp], #80
    d198:	ret
    d19c:	add	x4, x20, x19, lsl #6
    d1a0:	add	x4, x4, #0x80, lsl #12
    d1a4:	ldr	x1, [x4, #80]
    d1a8:	ldr	x1, [x1]
    d1ac:	str	x1, [x4, #80]
    d1b0:	cbnz	x1, d1b8 <__sancov_default_options@@Base+0x1218>
    d1b4:	str	xzr, [x4, #88]
    d1b8:	sub	x0, x0, #0x1
    d1bc:	str	x0, [x4, #72]
    d1c0:	b	d17c <__sancov_default_options@@Base+0x11dc>
    d1c4:	stp	x19, x20, [sp, #-48]!
    d1c8:	mov	x19, x0
    d1cc:	mov	x20, x3
    d1d0:	stp	x21, x22, [sp, #16]
    d1d4:	mov	x21, x1
    d1d8:	mov	x22, x2
    d1dc:	ldr	x1, [x1, #8]
    d1e0:	str	x30, [sp, #32]
    d1e4:	cbnz	x1, d1ec <__sancov_default_options@@Base+0x124c>
    d1e8:	bl	c354 <__sancov_default_options@@Base+0x3b4>
    d1ec:	mov	x3, x20
    d1f0:	mov	x0, #0xd800                	// #55296
    d1f4:	mov	x2, x19
    d1f8:	add	x1, x19, x0
    d1fc:	mov	x0, x22
    d200:	bl	d0e0 <__sancov_default_options@@Base+0x1140>
    d204:	mov	x3, x0
    d208:	cbz	x0, d278 <__sancov_default_options@@Base+0x12d8>
    d20c:	ldr	x1, [x3, #8]
    d210:	mov	x0, #0x0                   	// #0
    d214:	cbz	x1, d258 <__sancov_default_options@@Base+0x12b8>
    d218:	add	x5, x3, #0x10
    d21c:	add	x2, x21, #0x20
    d220:	ldr	x4, [x5, x0, lsl #3]
    d224:	str	x4, [x2, x0, lsl #3]
    d228:	add	x0, x0, #0x1
    d22c:	cmp	x1, x0
    d230:	b.ne	d220 <__sancov_default_options@@Base+0x1280>  // b.any
    d234:	add	x20, x19, x20, lsl #10
    d238:	ldr	x2, [x20, #24]
    d23c:	str	x1, [x21]
    d240:	cbz	x2, d250 <__sancov_default_options@@Base+0x12b0>
    d244:	mov	x1, x22
    d248:	mov	x0, x19
    d24c:	bl	d518 <__sancov_default_options@@Base+0x1578>
    d250:	mov	w0, #0x1                   	// #1
    d254:	b	d27c <__sancov_default_options@@Base+0x12dc>
    d258:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d25c:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d260:	add	x2, x2, #0xb8c
    d264:	add	x0, x0, #0xf95
    d268:	mov	x4, #0x0                   	// #0
    d26c:	mov	x3, #0x0                   	// #0
    d270:	mov	w1, #0xf6                  	// #246
    d274:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    d278:	mov	w0, #0x0                   	// #0
    d27c:	ldp	x21, x22, [sp, #16]
    d280:	ldr	x30, [sp, #32]
    d284:	ldp	x19, x20, [sp], #48
    d288:	ret
    d28c:	stp	x19, x20, [sp, #-32]!
    d290:	stp	x21, x30, [sp, #16]
    d294:	cbnz	x2, d2b8 <__sancov_default_options@@Base+0x1318>
    d298:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d29c:	add	x2, x2, #0xfe1
    d2a0:	mov	x4, #0x0                   	// #0
    d2a4:	mov	x3, #0x0                   	// #0
    d2a8:	mov	w1, #0x9f                  	// #159
    d2ac:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d2b0:	add	x0, x0, #0xf95
    d2b4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    d2b8:	mov	x19, x2
    d2bc:	cmp	x2, #0x35
    d2c0:	b.ls	d2dc <__sancov_default_options@@Base+0x133c>  // b.plast
    d2c4:	mov	x3, x2
    d2c8:	mov	x4, #0x36                  	// #54
    d2cc:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d2d0:	mov	w1, #0xa0                  	// #160
    d2d4:	add	x2, x2, #0xff9
    d2d8:	b	d2ac <__sancov_default_options@@Base+0x130c>
    d2dc:	lsl	x21, x2, #10
    d2e0:	mov	x4, x1
    d2e4:	add	x1, x0, x2, lsl #10
    d2e8:	mov	x20, x0
    d2ec:	ldr	x2, [x0, x21]
    d2f0:	cbz	x2, d344 <__sancov_default_options@@Base+0x13a4>
    d2f4:	ldr	x3, [x20, x21]
    d2f8:	sub	x0, x3, #0x1
    d2fc:	str	x0, [x20, x21]
    d300:	add	x0, x0, x19, lsl #7
    d304:	add	x19, x3, x19, lsl #7
    d308:	add	x19, x19, #0x2
    d30c:	add	x0, x0, #0x4
    d310:	ldr	x1, [x20, x19, lsl #3]
    d314:	ldr	x0, [x20, x0, lsl #3]
    d318:	prfm	pldl1keep, [x1]
    d31c:	mov	x1, #0xd800                	// #55296
    d320:	add	x2, x20, x1
    d324:	add	x20, x20, x21
    d328:	ldr	x1, [x2, #16]
    d32c:	ldr	x3, [x20, #16]
    d330:	add	x1, x1, x3
    d334:	str	x1, [x2, #16]
    d338:	ldp	x21, x30, [sp, #16]
    d33c:	ldp	x19, x20, [sp], #32
    d340:	ret
    d344:	mov	x3, x19
    d348:	mov	x2, x4
    d34c:	bl	d1c4 <__sancov_default_options@@Base+0x1224>
    d350:	tst	w0, #0xff
    d354:	b.ne	d2f4 <__sancov_default_options@@Base+0x1354>  // b.any
    d358:	mov	x0, #0x0                   	// #0
    d35c:	b	d338 <__sancov_default_options@@Base+0x1398>
    d360:	stp	x19, x20, [sp, #-48]!
    d364:	cmp	x2, #0x0
    d368:	csinc	x20, x2, xzr, ne  // ne = any
    d36c:	stp	x21, x22, [sp, #16]
    d370:	cmn	x20, x3
    d374:	str	x30, [sp, #32]
    d378:	b.cc	d3ac <__sancov_default_options@@Base+0x140c>  // b.lo, b.ul, b.last
    d37c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    d380:	mov	x2, x20
    d384:	ldr	x0, [x0, #4024]
    d388:	ldr	x1, [x0]
    d38c:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d390:	add	x0, x0, #0x18
    d394:	bl	16a18 <OnPrint@@Base+0x30c>
    d398:	mov	x0, #0x0                   	// #0
    d39c:	ldp	x21, x22, [sp, #16]
    d3a0:	ldr	x30, [sp, #32]
    d3a4:	ldp	x19, x20, [sp], #48
    d3a8:	ret
    d3ac:	mov	x22, x0
    d3b0:	mov	x21, x1
    d3b4:	mov	x19, x3
    d3b8:	cmp	x3, #0x8
    d3bc:	b.ls	d428 <__sancov_default_options@@Base+0x1488>  // b.plast
    d3c0:	mov	x1, x3
    d3c4:	mov	x0, x20
    d3c8:	bl	c730 <__sancov_default_options@@Base+0x790>
    d3cc:	cmp	x19, #0x20, lsl #12
    d3d0:	mov	x1, #0x20000               	// #131072
    d3d4:	ccmp	x0, x1, #0x2, ls  // ls = plast
    d3d8:	b.hi	d43c <__sancov_default_options@@Base+0x149c>  // b.pmore
    d3dc:	cmp	x0, #0x100
    d3e0:	b.hi	d430 <__sancov_default_options@@Base+0x1490>  // b.pmore
    d3e4:	add	x2, x0, #0xf
    d3e8:	lsr	x2, x2, #4
    d3ec:	mov	x1, x22
    d3f0:	mov	x0, x21
    d3f4:	bl	d28c <__sancov_default_options@@Base+0x12ec>
    d3f8:	cmp	x19, #0x8
    d3fc:	b.ls	d39c <__sancov_default_options@@Base+0x13fc>  // b.plast
    d400:	sub	x19, x19, #0x1
    d404:	ands	x3, x0, x19
    d408:	b.eq	d39c <__sancov_default_options@@Base+0x13fc>  // b.none
    d40c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d410:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d414:	add	x2, x2, #0x78
    d418:	add	x0, x0, #0xb3
    d41c:	mov	x4, #0x0                   	// #0
    d420:	mov	w1, #0x42                  	// #66
    d424:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    d428:	mov	x0, x20
    d42c:	b	d3cc <__sancov_default_options@@Base+0x142c>
    d430:	bl	c0cc <__sancov_default_options@@Base+0x12c>
    d434:	mov	x2, x0
    d438:	b	d3ec <__sancov_default_options@@Base+0x144c>
    d43c:	add	x1, x22, #0xc1, lsl #12
    d440:	add	x0, x22, #0x80, lsl #12
    d444:	mov	x3, x19
    d448:	mov	x2, x20
    d44c:	add	x1, x1, #0x8
    d450:	add	x0, x0, #0xdc0
    d454:	bl	c85c <__sancov_default_options@@Base+0x8bc>
    d458:	b	d3f8 <__sancov_default_options@@Base+0x1458>
    d45c:	stp	x19, x20, [sp, #-48]!
    d460:	ldp	x4, x20, [x1]
    d464:	stp	x21, x22, [sp, #16]
    d468:	mov	x21, x1
    d46c:	add	x1, x0, x3, lsl #10
    d470:	mov	x22, x2
    d474:	stp	x23, x30, [sp, #32]
    d478:	mov	x23, x3
    d47c:	lsr	x20, x20, #1
    d480:	ldr	x2, [x1, #24]
    d484:	cmp	x20, x4
    d488:	csel	x20, x20, x4, ls  // ls = plast
    d48c:	sub	x4, x4, x20
    d490:	add	x19, x4, #0x4
    d494:	cbnz	x2, d4bc <__sancov_default_options@@Base+0x151c>
    d498:	ldr	x2, [x21, x19, lsl #3]
    d49c:	cbnz	x2, d4cc <__sancov_default_options@@Base+0x152c>
    d4a0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    d4a4:	ldr	x0, [x0, #4024]
    d4a8:	ldr	x1, [x0]
    d4ac:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d4b0:	add	x0, x0, #0xfc
    d4b4:	bl	16a18 <OnPrint@@Base+0x30c>
    d4b8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    d4bc:	mov	x1, x22
    d4c0:	bl	d28c <__sancov_default_options@@Base+0x12ec>
    d4c4:	mov	x2, x0
    d4c8:	b	d49c <__sancov_default_options@@Base+0x14fc>
    d4cc:	add	x19, x21, x19, lsl #3
    d4d0:	add	x1, x2, #0x10
    d4d4:	mov	x0, #0x0                   	// #0
    d4d8:	str	x20, [x2, #8]
    d4dc:	cmp	x20, x0
    d4e0:	b.eq	d4f4 <__sancov_default_options@@Base+0x1554>  // b.none
    d4e4:	ldr	x3, [x19, x0, lsl #3]
    d4e8:	str	x3, [x1, x0, lsl #3]
    d4ec:	add	x0, x0, #0x1
    d4f0:	b	d4dc <__sancov_default_options@@Base+0x153c>
    d4f4:	ldr	x0, [x21]
    d4f8:	mov	x1, x23
    d4fc:	ldp	x23, x30, [sp, #32]
    d500:	sub	x20, x0, x20
    d504:	str	x20, [x21]
    d508:	mov	x0, x22
    d50c:	ldp	x21, x22, [sp, #16]
    d510:	ldp	x19, x20, [sp], #48
    d514:	b	c774 <__sancov_default_options@@Base+0x7d4>
    d518:	stp	x19, x20, [sp, #-64]!
    d51c:	stp	x21, x22, [sp, #16]
    d520:	stp	x23, x24, [sp, #32]
    d524:	str	x30, [sp, #48]
    d528:	cbnz	x2, d54c <__sancov_default_options@@Base+0x15ac>
    d52c:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d530:	add	x2, x2, #0xfe1
    d534:	mov	x4, #0x0                   	// #0
    d538:	mov	x3, #0x0                   	// #0
    d53c:	mov	w1, #0xae                  	// #174
    d540:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d544:	add	x0, x0, #0xf95
    d548:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    d54c:	mov	x19, x2
    d550:	cmp	x2, #0x35
    d554:	b.ls	d570 <__sancov_default_options@@Base+0x15d0>  // b.plast
    d558:	mov	x3, x2
    d55c:	mov	x4, #0x36                  	// #54
    d560:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d564:	mov	w1, #0xaf                  	// #175
    d568:	add	x2, x2, #0xff9
    d56c:	b	d540 <__sancov_default_options@@Base+0x15a0>
    d570:	add	x23, x0, x2, lsl #10
    d574:	mov	x24, x1
    d578:	mov	x20, x0
    d57c:	mov	x22, x3
    d580:	lsl	x21, x2, #10
    d584:	ldr	x1, [x23, #8]
    d588:	cbnz	x1, d590 <__sancov_default_options@@Base+0x15f0>
    d58c:	bl	c354 <__sancov_default_options@@Base+0x3b4>
    d590:	ldr	x1, [x20, x21]
    d594:	ldr	x0, [x23, #8]
    d598:	cmp	x1, x0
    d59c:	b.ne	d5b4 <__sancov_default_options@@Base+0x1614>  // b.any
    d5a0:	mov	x3, x19
    d5a4:	mov	x2, x24
    d5a8:	mov	x1, x23
    d5ac:	mov	x0, x20
    d5b0:	bl	d45c <__sancov_default_options@@Base+0x14bc>
    d5b4:	ldr	x2, [x20, x21]
    d5b8:	ldp	x23, x24, [sp, #32]
    d5bc:	add	x0, x2, #0x1
    d5c0:	add	x19, x2, x19, lsl #7
    d5c4:	str	x0, [x20, x21]
    d5c8:	add	x19, x19, #0x4
    d5cc:	mov	x0, #0xd800                	// #55296
    d5d0:	add	x1, x20, x0
    d5d4:	ldr	x30, [sp, #48]
    d5d8:	str	x22, [x20, x19, lsl #3]
    d5dc:	add	x20, x20, x21
    d5e0:	ldr	x0, [x1, #16]
    d5e4:	ldr	x2, [x20, #16]
    d5e8:	ldp	x21, x22, [sp, #16]
    d5ec:	sub	x0, x0, x2
    d5f0:	str	x0, [x1, #16]
    d5f4:	ldp	x19, x20, [sp], #64
    d5f8:	ret
    d5fc:	cbz	x2, d738 <__sancov_default_options@@Base+0x1798>
    d600:	stp	x19, x20, [sp, #-48]!
    d604:	mov	x20, x2
    d608:	mov	x19, x0
    d60c:	stp	x21, x30, [sp, #16]
    d610:	mov	x21, x1
    d614:	mov	x1, x2
    d618:	bl	cc88 <__sancov_default_options@@Base+0xce8>
    d61c:	tst	w0, #0xff
    d620:	mov	x1, x20
    d624:	b.eq	d650 <__sancov_default_options@@Base+0x16b0>  // b.none
    d628:	mov	x0, x19
    d62c:	bl	cc2c <__sancov_default_options@@Base+0xc8c>
    d630:	mov	x3, x20
    d634:	mov	x2, x0
    d638:	mov	x1, x19
    d63c:	mov	x0, x21
    d640:	bl	d518 <__sancov_default_options@@Base+0x1578>
    d644:	ldp	x21, x30, [sp, #16]
    d648:	ldp	x19, x20, [sp], #48
    d64c:	ret
    d650:	add	x0, x19, #0x80, lsl #12
    d654:	add	x20, x19, #0xc1, lsl #12
    d658:	add	x0, x0, #0xdc0
    d65c:	bl	c820 <__sancov_default_options@@Base+0x880>
    d660:	mov	x21, x0
    d664:	mov	x0, x20
    d668:	str	x20, [sp, #40]
    d66c:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    d670:	add	x1, x19, #0x80, lsl #12
    d674:	ldr	x3, [x21, #24]
    d678:	add	x1, x1, #0xdc0
    d67c:	ldr	x0, [x1, #8]
    d680:	lsl	x5, x3, #3
    d684:	ldr	x19, [x0, x5]
    d688:	cmp	x19, x21
    d68c:	b.eq	d6b0 <__sancov_default_options@@Base+0x1710>  // b.none
    d690:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d694:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d698:	mov	x4, x21
    d69c:	mov	x3, x19
    d6a0:	add	x2, x2, #0x148
    d6a4:	add	x0, x0, #0xc11
    d6a8:	mov	w1, #0x88                  	// #136
    d6ac:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    d6b0:	add	x1, x1, #0x40, lsl #12
    d6b4:	ldr	x4, [x1, #16]
    d6b8:	cmp	x3, x4
    d6bc:	b.cc	d6d8 <__sancov_default_options@@Base+0x1738>  // b.lo, b.ul, b.last
    d6c0:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d6c4:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d6c8:	add	x2, x2, #0x162
    d6cc:	add	x0, x0, #0xc11
    d6d0:	mov	w1, #0x89                  	// #137
    d6d4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    d6d8:	sub	x4, x4, #0x1
    d6dc:	ldr	x2, [x0, x4, lsl #3]
    d6e0:	str	x4, [x1, #16]
    d6e4:	str	x2, [x0, x5]
    d6e8:	ldr	x0, [x1, #40]
    d6ec:	str	x3, [x2, #24]
    d6f0:	ldr	x2, [x19, #8]
    d6f4:	add	x0, x0, #0x1
    d6f8:	str	x0, [x1, #40]
    d6fc:	ldr	x0, [x1, #48]
    d700:	strb	wzr, [x1, #24]
    d704:	sub	x0, x0, x2
    d708:	str	x0, [x1, #48]
    d70c:	ldr	x1, [x20, #24]
    d710:	add	x0, sp, #0x28
    d714:	sub	x1, x1, x2
    d718:	str	x1, [x20, #24]
    d71c:	ldr	x1, [x20, #32]
    d720:	sub	x1, x1, x2
    d724:	str	x1, [x20, #32]
    d728:	bl	c764 <__sancov_default_options@@Base+0x7c4>
    d72c:	ldp	x0, x1, [x19]
    d730:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
    d734:	b	d644 <__sancov_default_options@@Base+0x16a4>
    d738:	ret
    d73c:	stp	x19, x20, [sp, #-64]!
    d740:	stp	x21, x22, [sp, #16]
    d744:	mov	x22, x3
    d748:	stp	x23, x24, [sp, #32]
    d74c:	mov	x23, x4
    d750:	str	x30, [sp, #48]
    d754:	cbnz	x2, d774 <__sancov_default_options@@Base+0x17d4>
    d758:	mov	x2, x22
    d75c:	mov	x3, x4
    d760:	ldp	x21, x22, [sp, #16]
    d764:	ldp	x23, x24, [sp, #32]
    d768:	ldr	x30, [sp, #48]
    d76c:	ldp	x19, x20, [sp], #64
    d770:	b	d360 <__sancov_default_options@@Base+0x13c0>
    d774:	cbnz	x3, d798 <__sancov_default_options@@Base+0x17f8>
    d778:	mov	x23, #0x0                   	// #0
    d77c:	bl	d5fc <__sancov_default_options@@Base+0x165c>
    d780:	mov	x0, x23
    d784:	ldp	x21, x22, [sp, #16]
    d788:	ldp	x23, x24, [sp, #32]
    d78c:	ldr	x30, [sp, #48]
    d790:	ldp	x19, x20, [sp], #64
    d794:	ret
    d798:	mov	x20, x0
    d79c:	mov	x24, x1
    d7a0:	mov	x19, x2
    d7a4:	mov	x1, x2
    d7a8:	bl	cc88 <__sancov_default_options@@Base+0xce8>
    d7ac:	tst	w0, #0xff
    d7b0:	b.ne	d7e8 <__sancov_default_options@@Base+0x1848>  // b.any
    d7b4:	add	x0, x20, #0x80, lsl #12
    d7b8:	mov	x1, x19
    d7bc:	add	x0, x0, #0xdc0
    d7c0:	bl	cadc <__sancov_default_options@@Base+0xb3c>
    d7c4:	cbnz	x0, d7e8 <__sancov_default_options@@Base+0x1848>
    d7c8:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d7cc:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d7d0:	add	x2, x2, #0x17a
    d7d4:	add	x0, x0, #0xb3
    d7d8:	mov	x4, #0x0                   	// #0
    d7dc:	mov	x3, #0x0                   	// #0
    d7e0:	mov	w1, #0x62                  	// #98
    d7e4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    d7e8:	mov	x1, x19
    d7ec:	mov	x0, x20
    d7f0:	bl	cc88 <__sancov_default_options@@Base+0xce8>
    d7f4:	tst	w0, #0xff
    d7f8:	mov	x1, x19
    d7fc:	b.eq	d88c <__sancov_default_options@@Base+0x18ec>  // b.none
    d800:	mov	x0, x20
    d804:	bl	cc88 <__sancov_default_options@@Base+0xce8>
    d808:	tst	w0, #0xff
    d80c:	b.ne	d830 <__sancov_default_options@@Base+0x1890>  // b.any
    d810:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d814:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    d818:	add	x2, x2, #0x17a
    d81c:	add	x0, x0, #0xba3
    d820:	mov	x4, #0x0                   	// #0
    d824:	mov	x3, #0x0                   	// #0
    d828:	mov	w1, #0xcc                  	// #204
    d82c:	b	d7e4 <__sancov_default_options@@Base+0x1844>
    d830:	mov	x1, x19
    d834:	mov	x0, x20
    d838:	bl	cc2c <__sancov_default_options@@Base+0xc8c>
    d83c:	cmp	x0, #0x35
    d840:	b.eq	d8b0 <__sancov_default_options@@Base+0x1910>  // b.none
    d844:	bl	ccb4 <__sancov_default_options@@Base+0xd14>
    d848:	mov	x21, x0
    d84c:	mov	x3, x23
    d850:	mov	x2, x22
    d854:	mov	x1, x24
    d858:	mov	x0, x20
    d85c:	bl	d360 <__sancov_default_options@@Base+0x13c0>
    d860:	mov	x23, x0
    d864:	cbz	x0, d878 <__sancov_default_options@@Base+0x18d8>
    d868:	cmp	x22, x21
    d86c:	mov	x1, x19
    d870:	csel	x2, x22, x21, ls  // ls = plast
    d874:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
    d878:	mov	x2, x19
    d87c:	mov	x1, x24
    d880:	mov	x0, x20
    d884:	bl	d5fc <__sancov_default_options@@Base+0x165c>
    d888:	b	d780 <__sancov_default_options@@Base+0x17e0>
    d88c:	add	x0, x20, #0x80, lsl #12
    d890:	add	x0, x0, #0xdc0
    d894:	bl	c820 <__sancov_default_options@@Base+0x880>
    d898:	add	x1, x20, #0x80, lsl #12
    d89c:	add	x1, x1, #0xc00
    d8a0:	ldr	x0, [x0, #16]
    d8a4:	ldr	x1, [x1, #448]
    d8a8:	bl	c730 <__sancov_default_options@@Base+0x790>
    d8ac:	b	d848 <__sancov_default_options@@Base+0x18a8>
    d8b0:	mov	x21, #0x200                 	// #512
    d8b4:	b	d84c <__sancov_default_options@@Base+0x18ac>
    d8b8:	str	x30, [sp, #-16]!
    d8bc:	bl	6860 <__errno_location@plt>
    d8c0:	mov	w1, #0xc                   	// #12
    d8c4:	ldr	x30, [sp], #16
    d8c8:	str	w1, [x0]
    d8cc:	ret
    d8d0:	stp	x19, x20, [sp, #-64]!
    d8d4:	mov	x20, x0
    d8d8:	add	x19, sp, #0x20
    d8dc:	stp	x21, x30, [sp, #16]
    d8e0:	mov	x0, x19
    d8e4:	mov	x21, x1
    d8e8:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d8ec:	add	x1, x1, #0x196
    d8f0:	bl	db20 <__sancov_default_options@@Base+0x1b80>
    d8f4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    d8f8:	mov	x3, x21
    d8fc:	mov	x2, x20
    d900:	ldr	x0, [x0, #4024]
    d904:	ldr	x1, [x0]
    d908:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d90c:	add	x0, x0, #0x1a6
    d910:	bl	16a18 <OnPrint@@Base+0x30c>
    d914:	mov	x0, x19
    d918:	bl	db70 <__sancov_default_options@@Base+0x1bd0>
    d91c:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    d920:	stp	x19, x20, [sp, #-80]!
    d924:	mov	x2, x1
    d928:	mov	x20, x0
    d92c:	stp	x21, x22, [sp, #16]
    d930:	add	x21, sp, #0x30
    d934:	mov	x0, x21
    d938:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d93c:	add	x1, x1, #0x20c
    d940:	stp	x23, x30, [sp, #32]
    d944:	bl	db20 <__sancov_default_options@@Base+0x1b80>
    d948:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    d94c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    d950:	mov	x19, x2
    d954:	ldr	x22, [x2, #4016]
    d958:	ldr	x0, [x0, #4024]
    d95c:	ldr	x23, [x0]
    d960:	ldr	x0, [x22]
    d964:	cbnz	x0, d970 <__sancov_default_options@@Base+0x19d0>
    d968:	bl	1352c <__sanitizer_set_report_fd@@Base+0x2c8c>
    d96c:	str	x0, [x22]
    d970:	ldr	x2, [x19, #4016]
    d974:	mov	x1, x23
    d978:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d97c:	add	x0, x0, #0x21d
    d980:	ldr	x3, [x2]
    d984:	mov	x2, x20
    d988:	bl	16a18 <OnPrint@@Base+0x30c>
    d98c:	mov	x0, x21
    d990:	bl	db70 <__sancov_default_options@@Base+0x1bd0>
    d994:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    d998:	stp	x19, x20, [sp, #-64]!
    d99c:	mov	x2, x1
    d9a0:	mov	x20, x0
    d9a4:	add	x19, sp, #0x20
    d9a8:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d9ac:	mov	x0, x19
    d9b0:	add	x1, x1, #0x29b
    d9b4:	str	x30, [sp, #16]
    d9b8:	bl	db20 <__sancov_default_options@@Base+0x1b80>
    d9bc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    d9c0:	mov	x2, x20
    d9c4:	ldr	x0, [x0, #4024]
    d9c8:	ldr	x1, [x0]
    d9cc:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d9d0:	add	x0, x0, #0x2b8
    d9d4:	bl	16a18 <OnPrint@@Base+0x30c>
    d9d8:	mov	x0, x19
    d9dc:	bl	db70 <__sancov_default_options@@Base+0x1bd0>
    d9e0:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    d9e4:	stp	x19, x20, [sp, #-64]!
    d9e8:	mov	x20, x1
    d9ec:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    d9f0:	add	x19, sp, #0x20
    d9f4:	add	x1, x1, #0x308
    d9f8:	stp	x21, x30, [sp, #16]
    d9fc:	mov	x21, x0
    da00:	mov	x0, x19
    da04:	bl	db20 <__sancov_default_options@@Base+0x1b80>
    da08:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    da0c:	mov	x3, x21
    da10:	mov	x2, x20
    da14:	ldr	x0, [x0, #4024]
    da18:	ldr	x1, [x0]
    da1c:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    da20:	add	x0, x0, #0x328
    da24:	bl	16a18 <OnPrint@@Base+0x30c>
    da28:	mov	x0, x19
    da2c:	bl	db70 <__sancov_default_options@@Base+0x1bd0>
    da30:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    da34:	stp	x19, x20, [sp, #-64]!
    da38:	mov	x2, x1
    da3c:	mov	x20, x0
    da40:	add	x19, sp, #0x20
    da44:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    da48:	mov	x0, x19
    da4c:	add	x1, x1, #0x3c5
    da50:	str	x30, [sp, #16]
    da54:	bl	db20 <__sancov_default_options@@Base+0x1b80>
    da58:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    da5c:	mov	x2, x20
    da60:	mov	x3, #0x8                   	// #8
    da64:	ldr	x0, [x0, #4024]
    da68:	ldr	x1, [x0]
    da6c:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    da70:	add	x0, x0, #0x3e6
    da74:	bl	16a18 <OnPrint@@Base+0x30c>
    da78:	mov	x0, x19
    da7c:	bl	db70 <__sancov_default_options@@Base+0x1bd0>
    da80:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    da84:	stp	x19, x20, [sp, #-64]!
    da88:	mov	x20, x0
    da8c:	add	x19, sp, #0x20
    da90:	stp	x21, x30, [sp, #16]
    da94:	mov	x0, x19
    da98:	mov	x21, x1
    da9c:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    daa0:	add	x1, x1, #0x46e
    daa4:	bl	db20 <__sancov_default_options@@Base+0x1b80>
    daa8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    daac:	mov	x3, x21
    dab0:	mov	x2, x20
    dab4:	ldr	x0, [x0, #4024]
    dab8:	ldr	x1, [x0]
    dabc:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    dac0:	add	x0, x0, #0x486
    dac4:	bl	16a18 <OnPrint@@Base+0x30c>
    dac8:	mov	x0, x19
    dacc:	bl	db70 <__sancov_default_options@@Base+0x1bd0>
    dad0:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    dad4:	stp	x19, x20, [sp, #-64]!
    dad8:	mov	x2, x1
    dadc:	mov	x20, x0
    dae0:	add	x19, sp, #0x20
    dae4:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    dae8:	mov	x0, x19
    daec:	add	x1, x1, #0x4da
    daf0:	str	x30, [sp, #16]
    daf4:	bl	db20 <__sancov_default_options@@Base+0x1b80>
    daf8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    dafc:	mov	x2, x20
    db00:	ldr	x0, [x0, #4024]
    db04:	ldr	x1, [x0]
    db08:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    db0c:	add	x0, x0, #0x4e8
    db10:	bl	16a18 <OnPrint@@Base+0x30c>
    db14:	mov	x0, x19
    db18:	bl	db70 <__sancov_default_options@@Base+0x1bd0>
    db1c:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    db20:	stp	x19, x20, [sp, #-32]!
    db24:	mov	x19, x0
    db28:	mov	x20, x2
    db2c:	stp	x21, x30, [sp, #16]
    db30:	mov	x21, x1
    db34:	bl	18790 <__sanitizer_symbolize_global@@Base+0x1a8>
    db38:	stp	x21, x20, [x19, #8]
    db3c:	bl	186fc <__sanitizer_symbolize_global@@Base+0x114>
    db40:	strb	w0, [x19, #24]
    db44:	ldp	x21, x30, [sp, #16]
    db48:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    db4c:	ldp	x19, x20, [sp], #32
    db50:	tst	w0, #0xff
    db54:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    db58:	add	x0, x1, #0x6df
    db5c:	add	x1, x2, #0x813
    db60:	csel	x1, x1, x0, ne  // ne = any
    db64:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    db68:	add	x0, x0, #0x85d
    db6c:	b	16994 <OnPrint@@Base+0x288>
    db70:	stp	x19, x30, [sp, #-16]!
    db74:	mov	x19, x0
    db78:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    db7c:	ldrb	w2, [x0, #24]
    db80:	add	x1, x1, #0x81d
    db84:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    db88:	add	x0, x0, #0x6df
    db8c:	cmp	w2, #0x0
    db90:	csel	x1, x1, x0, ne  // ne = any
    db94:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    db98:	add	x0, x0, #0x85d
    db9c:	bl	16994 <OnPrint@@Base+0x288>
    dba0:	ldr	x0, [x19, #16]
    dba4:	bl	182d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
    dba8:	bl	c260 <__sancov_default_options@@Base+0x2c0>
    dbac:	ldp	x0, x1, [x19, #8]
    dbb0:	mov	x2, #0x0                   	// #0
    dbb4:	bl	18910 <__sanitizer_symbolize_global@@Base+0x328>
    dbb8:	mov	x0, x19
    dbbc:	ldp	x19, x30, [sp], #16
    dbc0:	b	18824 <__sanitizer_symbolize_global@@Base+0x23c>
    dbc4:	str	x30, [sp, #-16]!
    dbc8:	tst	w4, #0xff
    dbcc:	b.ne	dbe4 <__sancov_default_options@@Base+0x1c44>  // b.any
    dbd0:	mov	x5, x1
    dbd4:	adrp	x1, 19f000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    dbd8:	mov	w6, w3
    dbdc:	ldr	w3, [x1, #2880]
    dbe0:	cbz	w3, dbf4 <__sancov_default_options@@Base+0x1c54>
    dbe4:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    dbe8:	add	x0, x0, #0x52e
    dbec:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
    dbf0:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    dbf4:	mov	w3, #0x1                   	// #1
    dbf8:	mov	x4, x0
    dbfc:	str	w3, [x1, #2880]
    dc00:	mov	x3, x0
    dc04:	adrp	x0, 4e000 <_Unwind_Backtrace@GCC_3.3>
    dc08:	ldr	x1, [x0, #1256]
    dc0c:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    dc10:	add	x0, x0, #0x545
    dc14:	bl	16a18 <OnPrint@@Base+0x30c>
    dc18:	bl	1506c <__sanitizer_set_report_fd@@Base+0x47cc>
    dc1c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    dc20:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    dc24:	add	x2, x2, #0x586
    dc28:	add	x0, x0, #0x5a7
    dc2c:	mov	x4, #0x0                   	// #0
    dc30:	mov	x3, #0x0                   	// #0
    dc34:	mov	w1, #0x35                  	// #53
    dc38:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    dc3c:	stp	x19, x20, [sp, #-32]!
    dc40:	mov	x19, x0
    dc44:	stp	x21, x30, [sp, #16]
    dc48:	cbz	x0, dc88 <__sancov_default_options@@Base+0x1ce8>
    dc4c:	mov	x21, x1
    dc50:	cbz	x1, dc88 <__sancov_default_options@@Base+0x1ce8>
    dc54:	bl	124f8 <__sanitizer_set_report_fd@@Base+0x1c58>
    dc58:	mov	x20, x0
    dc5c:	cbz	x0, dc6c <__sancov_default_options@@Base+0x1ccc>
    dc60:	mov	x0, x21
    dc64:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
    dc68:	add	x19, x20, x0
    dc6c:	ldrb	w0, [x19]
    dc70:	cmp	w0, #0x2e
    dc74:	b.ne	dc88 <__sancov_default_options@@Base+0x1ce8>  // b.any
    dc78:	ldrb	w0, [x19, #1]
    dc7c:	cmp	w0, #0x2f
    dc80:	b.ne	dc88 <__sancov_default_options@@Base+0x1ce8>  // b.any
    dc84:	add	x19, x19, #0x2
    dc88:	mov	x0, x19
    dc8c:	ldp	x21, x30, [sp, #16]
    dc90:	ldp	x19, x20, [sp], #32
    dc94:	ret
    dc98:	stp	x19, x30, [sp, #-16]!
    dc9c:	mov	x19, x0
    dca0:	cbz	x0, dcb4 <__sancov_default_options@@Base+0x1d14>
    dca4:	mov	w1, #0x2f                  	// #47
    dca8:	bl	122c8 <__sanitizer_set_report_fd@@Base+0x1a28>
    dcac:	cbz	x0, dcb4 <__sancov_default_options@@Base+0x1d14>
    dcb0:	add	x19, x0, #0x1
    dcb4:	mov	x0, x19
    dcb8:	ldp	x19, x30, [sp], #16
    dcbc:	ret
    dcc0:	stp	x19, x20, [sp, #-32]!
    dcc4:	mov	x1, #0x1000                	// #4096
    dcc8:	adrp	x19, 19f000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    dccc:	add	x19, x19, #0xbb0
    dcd0:	stp	x21, x30, [sp, #16]
    dcd4:	mov	x0, x19
    dcd8:	bl	135c8 <__sanitizer_set_report_fd@@Base+0x2d28>
    dcdc:	mov	x0, x19
    dce0:	bl	dc98 <__sancov_default_options@@Base+0x1cf8>
    dce4:	mov	x21, x0
    dce8:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
    dcec:	cmp	x21, x19
    dcf0:	mov	x20, x0
    dcf4:	b.eq	dd0c <__sancov_default_options@@Base+0x1d6c>  // b.none
    dcf8:	mov	x2, x0
    dcfc:	mov	x1, x21
    dd00:	mov	x0, x19
    dd04:	bl	12144 <__sanitizer_set_report_fd@@Base+0x18a4>
    dd08:	strb	wzr, [x20, x19]
    dd0c:	mov	x0, x20
    dd10:	ldp	x21, x30, [sp, #16]
    dd14:	ldp	x19, x20, [sp], #32
    dd18:	ret
    dd1c:	cbz	x0, dda4 <__sancov_default_options@@Base+0x1e04>
    dd20:	stp	x19, x30, [sp, #-16]!
    dd24:	mov	x19, x0
    dd28:	ldrb	w1, [x0]
    dd2c:	cbz	w1, dd98 <__sancov_default_options@@Base+0x1df8>
    dd30:	cmp	x0, x19
    dd34:	b.cs	dd58 <__sancov_default_options@@Base+0x1db8>  // b.hs, b.nlast
    dd38:	mov	x3, x0
    dd3c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    dd40:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    dd44:	mov	x4, x19
    dd48:	add	x2, x2, #0x5e5
    dd4c:	add	x0, x0, #0x5a7
    dd50:	mov	w1, #0x68                  	// #104
    dd54:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    dd58:	cmp	w1, #0x1b
    dd5c:	b.ne	dd84 <__sancov_default_options@@Base+0x1de4>  // b.any
    dd60:	ldrb	w2, [x0, #1]
    dd64:	cmp	w2, #0x5b
    dd68:	b.ne	dd84 <__sancov_default_options@@Base+0x1de4>  // b.any
    dd6c:	mov	w1, #0x6d                  	// #109
    dd70:	bl	12350 <__sanitizer_set_report_fd@@Base+0x1ab0>
    dd74:	ldrb	w1, [x0]
    dd78:	cbz	w1, dd98 <__sancov_default_options@@Base+0x1df8>
    dd7c:	add	x0, x0, #0x1
    dd80:	b	dd28 <__sancov_default_options@@Base+0x1d88>
    dd84:	cmp	x0, x19
    dd88:	b.eq	dd90 <__sancov_default_options@@Base+0x1df0>  // b.none
    dd8c:	strb	w1, [x19]
    dd90:	add	x19, x19, #0x1
    dd94:	b	dd7c <__sancov_default_options@@Base+0x1ddc>
    dd98:	strb	wzr, [x19]
    dd9c:	ldp	x19, x30, [sp], #16
    dda0:	ret
    dda4:	ret
    dda8:	stp	x19, x20, [sp, #-32]!
    ddac:	mov	x19, x0
    ddb0:	add	x20, x0, #0x30
    ddb4:	ldr	x0, [x0]
    ddb8:	mov	x1, #0x0                   	// #0
    ddbc:	str	x30, [sp, #16]
    ddc0:	bl	c618 <__sancov_default_options@@Base+0x678>
    ddc4:	stp	xzr, xzr, [x19]
    ddc8:	add	x0, x19, #0x1c
    ddcc:	str	xzr, [x19, #16]
    ddd0:	mov	x2, #0x10                  	// #16
    ddd4:	str	wzr, [x19, #24]
    ddd8:	mov	w1, #0x0                   	// #0
    dddc:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
    dde0:	strb	wzr, [x19, #44]
    dde4:	ldr	x1, [x19, #48]
    dde8:	cbz	x1, de14 <__sancov_default_options@@Base+0x1e74>
    ddec:	ldr	x0, [x19, #56]
    ddf0:	ldr	x2, [x0]
    ddf4:	str	x2, [x20, #8]
    ddf8:	cbnz	x2, de00 <__sancov_default_options@@Base+0x1e60>
    ddfc:	str	xzr, [x20, #16]
    de00:	sub	x1, x1, #0x1
    de04:	str	x1, [x20]
    de08:	mov	x1, #0x0                   	// #0
    de0c:	bl	c618 <__sancov_default_options@@Base+0x678>
    de10:	b	dde4 <__sancov_default_options@@Base+0x1e44>
    de14:	ldr	x30, [sp, #16]
    de18:	ldp	x19, x20, [sp], #32
    de1c:	ret
    de20:	stp	x19, x20, [sp, #-32]!
    de24:	mov	x19, x0
    de28:	mov	x20, x2
    de2c:	stp	x21, x30, [sp, #16]
    de30:	mov	x21, x1
    de34:	bl	dda8 <__sancov_default_options@@Base+0x1e08>
    de38:	mov	x0, x21
    de3c:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
    de40:	ldp	x21, x30, [sp, #16]
    de44:	stp	x0, x20, [x19]
    de48:	ldp	x19, x20, [sp], #32
    de4c:	ret
    de50:	stp	x19, x20, [sp, #-48]!
    de54:	mov	x19, x0
    de58:	mov	x20, x4
    de5c:	stp	x21, x22, [sp, #16]
    de60:	mov	w21, w3
    de64:	and	w22, w5, #0xff
    de68:	str	x30, [sp, #32]
    de6c:	bl	de20 <__sancov_default_options@@Base+0x1e80>
    de70:	str	w21, [x19, #24]
    de74:	mov	x1, x20
    de78:	add	x0, x19, #0x1c
    de7c:	mov	x2, #0x10                  	// #16
    de80:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
    de84:	strb	w22, [x19, #44]
    de88:	ldp	x21, x22, [sp, #16]
    de8c:	ldr	x30, [sp, #32]
    de90:	ldp	x19, x20, [sp], #48
    de94:	ret
    de98:	stp	x19, x20, [sp, #-64]!
    de9c:	mov	x20, x0
    dea0:	mov	x0, #0x30                  	// #48
    dea4:	stp	x21, x22, [sp, #16]
    dea8:	mov	x22, x2
    deac:	mov	x21, x5
    deb0:	mov	x2, #0x0                   	// #0
    deb4:	stp	x23, x24, [sp, #32]
    deb8:	mov	x24, x1
    debc:	and	w23, w3, #0xff
    dec0:	mov	x1, #0x0                   	// #0
    dec4:	stp	x25, x30, [sp, #48]
    dec8:	and	w25, w4, #0xff
    decc:	bl	c408 <__sancov_default_options@@Base+0x468>
    ded0:	stp	xzr, x24, [x0]
    ded4:	mov	x19, x0
    ded8:	add	x0, x0, #0x1a
    dedc:	stur	x22, [x0, #-10]
    dee0:	sturb	w23, [x0, #-2]
    dee4:	sturb	w25, [x0, #-1]
    dee8:	cbnz	x21, def4 <__sancov_default_options@@Base+0x1f54>
    deec:	adrp	x21, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    def0:	add	x21, x21, #0x6df
    def4:	mov	x1, x21
    def8:	mov	x2, #0x10                  	// #16
    defc:	bl	1241c <__sanitizer_set_report_fd@@Base+0x1b7c>
    df00:	mov	x0, x20
    df04:	ldr	x1, [x0, #48]!
    df08:	str	xzr, [x19]
    df0c:	cbnz	x1, df44 <__sancov_default_options@@Base+0x1fa4>
    df10:	stp	x19, x19, [x0, #8]
    df14:	mov	x0, #0x1                   	// #1
    df18:	str	x0, [x20, #48]
    df1c:	cbz	w23, df30 <__sancov_default_options@@Base+0x1f90>
    df20:	ldr	x0, [x20, #16]
    df24:	cmp	x0, x22
    df28:	b.cs	df30 <__sancov_default_options@@Base+0x1f90>  // b.hs, b.nlast
    df2c:	str	x22, [x20, #16]
    df30:	ldp	x21, x22, [sp, #16]
    df34:	ldp	x23, x24, [sp, #32]
    df38:	ldp	x25, x30, [sp, #48]
    df3c:	ldp	x19, x20, [sp], #64
    df40:	ret
    df44:	ldr	x2, [x0, #16]
    df48:	add	x1, x1, #0x1
    df4c:	str	x19, [x2]
    df50:	str	x19, [x0, #16]
    df54:	str	x1, [x20, #48]
    df58:	b	df1c <__sancov_default_options@@Base+0x1f7c>
    df5c:	ldr	x0, [x0, #56]
    df60:	cbz	x0, df84 <__sancov_default_options@@Base+0x1fe4>
    df64:	ldr	x2, [x0, #8]
    df68:	cmp	x2, x1
    df6c:	b.hi	df7c <__sancov_default_options@@Base+0x1fdc>  // b.pmore
    df70:	ldr	x2, [x0, #16]
    df74:	cmp	x2, x1
    df78:	b.hi	df8c <__sancov_default_options@@Base+0x1fec>  // b.pmore
    df7c:	ldr	x0, [x0]
    df80:	b	df60 <__sancov_default_options@@Base+0x1fc0>
    df84:	mov	w0, #0x0                   	// #0
    df88:	ret
    df8c:	mov	w0, #0x1                   	// #1
    df90:	b	df88 <__sancov_default_options@@Base+0x1fe8>
    df94:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    df98:	ldr	x2, [x2, #4056]
    df9c:	ldr	x1, [x2, #128]
    dfa0:	cbz	x1, dfe8 <__sancov_default_options@@Base+0x2048>
    dfa4:	adrp	x1, 19f000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    dfa8:	add	x1, x1, #0xb40
    dfac:	add	x1, x1, #0x8
    dfb0:	ldxr	x3, [x1]
    dfb4:	add	x4, x3, x0
    dfb8:	stlxr	w5, x4, [x1]
    dfbc:	cbnz	w5, dfb0 <__sancov_default_options@@Base+0x2010>
    dfc0:	dmb	ish
    dfc4:	ldr	x1, [x2, #128]
    dfc8:	add	x0, x3, x0
    dfcc:	cmp	x1, x0, lsr #20
    dfd0:	b.hi	dfe8 <__sancov_default_options@@Base+0x2048>  // b.pmore
    dfd4:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    dfd8:	add	x0, x0, #0x5f4
    dfdc:	str	x30, [sp, #-16]!
    dfe0:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
    dfe4:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    dfe8:	ret
    dfec:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    dff0:	ldr	x1, [x1, #4056]
    dff4:	ldr	x1, [x1, #128]
    dff8:	cbz	x1, e020 <__sancov_default_options@@Base+0x2080>
    dffc:	adrp	x1, 19f000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    e000:	add	x1, x1, #0xb40
    e004:	neg	x0, x0
    e008:	add	x1, x1, #0x8
    e00c:	ldxr	x2, [x1]
    e010:	add	x2, x2, x0
    e014:	stlxr	w3, x2, [x1]
    e018:	cbnz	w3, e00c <__sancov_default_options@@Base+0x206c>
    e01c:	dmb	ish
    e020:	ret
    e024:	cbnz	x1, e030 <__sancov_default_options@@Base+0x2090>
    e028:	mov	w0, #0x0                   	// #0
    e02c:	ret
    e030:	stp	x19, x20, [sp, #-80]!
    e034:	mov	x20, x0
    e038:	stp	x21, x22, [sp, #16]
    e03c:	mov	x21, x1
    e040:	stp	x23, x24, [sp, #32]
    e044:	stp	x25, x26, [sp, #48]
    e048:	str	x30, [sp, #64]
    e04c:	ldrb	w0, [x1]
    e050:	cbz	w0, e140 <__sancov_default_options@@Base+0x21a0>
    e054:	cbz	x20, e0c4 <__sancov_default_options@@Base+0x2124>
    e058:	ldrb	w0, [x20]
    e05c:	cmp	w0, #0x5e
    e060:	b.ne	e098 <__sancov_default_options@@Base+0x20f8>  // b.any
    e064:	add	x20, x20, #0x1
    e068:	mov	w26, #0x1                   	// #1
    e06c:	mov	w0, #0x0                   	// #0
    e070:	mov	w24, #0x2a                  	// #42
    e074:	mov	w25, #0x24                  	// #36
    e078:	ldrb	w1, [x20]
    e07c:	cbz	w1, e0c4 <__sancov_default_options@@Base+0x2124>
    e080:	cmp	w1, #0x2a
    e084:	b.ne	e0b4 <__sancov_default_options@@Base+0x2114>  // b.any
    e088:	add	x19, x20, #0x1
    e08c:	mov	x1, x21
    e090:	mov	w0, #0x1                   	// #1
    e094:	b	e0a4 <__sancov_default_options@@Base+0x2104>
    e098:	mov	w26, #0x0                   	// #0
    e09c:	b	e06c <__sancov_default_options@@Base+0x20cc>
    e0a0:	cbz	x19, e0c4 <__sancov_default_options@@Base+0x2124>
    e0a4:	mov	x21, x1
    e0a8:	mov	x20, x19
    e0ac:	mov	w26, #0x0                   	// #0
    e0b0:	b	e078 <__sancov_default_options@@Base+0x20d8>
    e0b4:	ldrb	w2, [x21]
    e0b8:	cmp	w1, #0x24
    e0bc:	b.ne	e0cc <__sancov_default_options@@Base+0x212c>  // b.any
    e0c0:	cbnz	w2, e144 <__sancov_default_options@@Base+0x21a4>
    e0c4:	mov	w0, #0x1                   	// #1
    e0c8:	b	e144 <__sancov_default_options@@Base+0x21a4>
    e0cc:	cbz	w2, e140 <__sancov_default_options@@Base+0x21a0>
    e0d0:	mov	w1, #0x2a                  	// #42
    e0d4:	mov	x0, x20
    e0d8:	bl	1225c <__sanitizer_set_report_fd@@Base+0x19bc>
    e0dc:	mov	x19, x0
    e0e0:	mov	w1, #0x24                  	// #36
    e0e4:	mov	x0, x20
    e0e8:	bl	1225c <__sanitizer_set_report_fd@@Base+0x19bc>
    e0ec:	mov	x22, x0
    e0f0:	cbz	x19, e15c <__sancov_default_options@@Base+0x21bc>
    e0f4:	cmp	x0, #0x0
    e0f8:	ccmp	x19, x0, #0x0, ne  // ne = any
    e0fc:	csel	x19, x19, x0, ls  // ls = plast
    e100:	strb	wzr, [x19]
    e104:	mov	x1, x20
    e108:	mov	x0, x21
    e10c:	bl	124f8 <__sanitizer_set_report_fd@@Base+0x1c58>
    e110:	mov	x23, x0
    e114:	mov	x0, x20
    e118:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
    e11c:	add	x1, x23, x0
    e120:	cbz	x19, e130 <__sancov_default_options@@Base+0x2190>
    e124:	cmp	x22, x19
    e128:	csel	w0, w25, w24, eq  // eq = none
    e12c:	strb	w0, [x19]
    e130:	cbz	x23, e140 <__sancov_default_options@@Base+0x21a0>
    e134:	cmp	x23, x21
    e138:	csel	w0, w26, wzr, ne  // ne = any
    e13c:	cbz	w0, e0a0 <__sancov_default_options@@Base+0x2100>
    e140:	mov	w0, #0x0                   	// #0
    e144:	ldp	x21, x22, [sp, #16]
    e148:	ldp	x23, x24, [sp, #32]
    e14c:	ldp	x25, x26, [sp, #48]
    e150:	ldr	x30, [sp, #64]
    e154:	ldp	x19, x20, [sp], #80
    e158:	ret
    e15c:	cbz	x0, e104 <__sancov_default_options@@Base+0x2164>
    e160:	mov	x19, x0
    e164:	b	e100 <__sancov_default_options@@Base+0x2160>
    e168:	adrp	x0, 19f000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    e16c:	add	x0, x0, #0xbb0
    e170:	ret
    e174:	b	dcc0 <__sancov_default_options@@Base+0x1d20>
    e178:	adrp	x1, 1a0000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    e17c:	add	x0, x1, #0xbb0
    e180:	ldrb	w1, [x1, #2992]
    e184:	cbnz	w1, e19c <__sancov_default_options@@Base+0x21fc>
    e188:	str	x30, [sp, #-16]!
    e18c:	mov	x1, #0x1000                	// #4096
    e190:	bl	13534 <__sanitizer_set_report_fd@@Base+0x2c94>
    e194:	ldr	x30, [sp], #16
    e198:	b	dcc0 <__sancov_default_options@@Base+0x1d20>
    e19c:	ret
    e1a0:	stp	x19, x20, [sp, #-32]!
    e1a4:	mov	x20, x0
    e1a8:	mov	x19, x1
    e1ac:	stp	x21, x30, [sp, #16]
    e1b0:	adrp	x21, 1a0000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    e1b4:	bl	e178 <__sancov_default_options@@Base+0x21d8>
    e1b8:	add	x21, x21, #0xbb0
    e1bc:	mov	x0, x21
    e1c0:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
    e1c4:	cbz	x19, e1e8 <__sancov_default_options@@Base+0x2248>
    e1c8:	sub	x19, x19, #0x1
    e1cc:	mov	x1, x21
    e1d0:	cmp	x19, x0
    e1d4:	csel	x19, x19, x0, ls  // ls = plast
    e1d8:	mov	x0, x20
    e1dc:	mov	x2, x19
    e1e0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
    e1e4:	strb	wzr, [x20, x19]
    e1e8:	mov	x0, x19
    e1ec:	ldp	x21, x30, [sp, #16]
    e1f0:	ldp	x19, x20, [sp], #32
    e1f4:	ret
    e1f8:	stp	x19, x20, [sp, #-32]!
    e1fc:	str	x30, [sp, #16]
    e200:	bl	13088 <__sanitizer_set_report_fd@@Base+0x27e8>
    e204:	cbz	x0, e248 <__sancov_default_options@@Base+0x22a8>
    e208:	adrp	x20, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    e20c:	add	x20, x20, #0x936
    e210:	mov	x19, x0
    e214:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e218:	add	x0, x0, #0x629
    e21c:	bl	16994 <OnPrint@@Base+0x288>
    e220:	ldr	x1, [x19], #8
    e224:	cbz	x1, e234 <__sancov_default_options@@Base+0x2294>
    e228:	mov	x0, x20
    e22c:	bl	16994 <OnPrint@@Base+0x288>
    e230:	b	e220 <__sancov_default_options@@Base+0x2280>
    e234:	ldr	x30, [sp, #16]
    e238:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
    e23c:	ldp	x19, x20, [sp], #32
    e240:	add	x0, x0, #0x6dd
    e244:	b	16994 <OnPrint@@Base+0x288>
    e248:	ldr	x30, [sp, #16]
    e24c:	ldp	x19, x20, [sp], #32
    e250:	ret
    e254:	stp	x19, x20, [sp, #-48]!
    e258:	adrp	x19, 19f000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    e25c:	add	x19, x19, #0xb40
    e260:	add	x19, x19, #0x10
    e264:	stp	x21, x22, [sp, #16]
    e268:	mov	x21, x0
    e26c:	mov	x22, x1
    e270:	mov	x20, #0x0                   	// #0
    e274:	str	x30, [sp, #32]
    e278:	lsl	x0, x20, #4
    e27c:	ldr	x2, [x0, x19]
    e280:	cbz	x2, e29c <__sancov_default_options@@Base+0x22fc>
    e284:	mov	x1, x22
    e288:	mov	x0, x21
    e28c:	add	x20, x20, #0x1
    e290:	blr	x2
    e294:	cmp	x20, #0x5
    e298:	b.ne	e278 <__sancov_default_options@@Base+0x22d8>  // b.any
    e29c:	ldp	x21, x22, [sp, #16]
    e2a0:	ldr	x30, [sp, #32]
    e2a4:	ldp	x19, x20, [sp], #48
    e2a8:	ret
    e2ac:	stp	x19, x20, [sp, #-32]!
    e2b0:	adrp	x19, 19f000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    e2b4:	add	x19, x19, #0xb40
    e2b8:	add	x19, x19, #0x10
    e2bc:	stp	x21, x30, [sp, #16]
    e2c0:	mov	x21, x0
    e2c4:	mov	x20, #0x0                   	// #0
    e2c8:	add	x0, x19, x20
    e2cc:	ldr	x1, [x0, #8]
    e2d0:	cbz	x1, e2e8 <__sancov_default_options@@Base+0x2348>
    e2d4:	mov	x0, x21
    e2d8:	add	x20, x20, #0x10
    e2dc:	blr	x1
    e2e0:	cmp	x20, #0x50
    e2e4:	b.ne	e2c8 <__sancov_default_options@@Base+0x2328>  // b.any
    e2e8:	ldp	x21, x30, [sp, #16]
    e2ec:	ldp	x19, x20, [sp], #32
    e2f0:	ret

000000000000e2f4 <__sanitizer_report_error_summary@@Base>:
    e2f4:	mov	x1, x0
    e2f8:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
    e2fc:	add	x0, x0, #0xc6e
    e300:	b	16994 <OnPrint@@Base+0x288>

000000000000e304 <__sanitizer_acquire_crash_state@@Base>:
    e304:	adrp	x0, 19f000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    e308:	add	x0, x0, #0xb40
    e30c:	add	x0, x0, #0x60
    e310:	mov	w2, #0x1                   	// #1
    e314:	ldxrb	w1, [x0]
    e318:	stxrb	w3, w2, [x0]
    e31c:	cbnz	w3, e314 <__sanitizer_acquire_crash_state@@Base+0x10>
    e320:	tst	w1, #0xff
    e324:	dmb	ish
    e328:	cset	w0, eq  // eq = none
    e32c:	ret

000000000000e330 <__sanitizer_install_malloc_and_free_hooks@@Base>:
    e330:	cmp	x0, #0x0
    e334:	mov	x4, x0
    e338:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    e33c:	b.eq	e388 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>  // b.none
    e340:	adrp	x2, 19f000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    e344:	add	x3, x2, #0xb40
    e348:	add	x3, x3, #0x10
    e34c:	mov	w0, #0x0                   	// #0
    e350:	ldr	x6, [x3]
    e354:	mov	w5, w0
    e358:	add	w0, w0, #0x1
    e35c:	cbnz	x6, e37c <__sanitizer_install_malloc_and_free_hooks@@Base+0x4c>
    e360:	add	x2, x2, #0xb40
    e364:	sbfiz	x3, x5, #4, #32
    e368:	add	x2, x2, #0x10
    e36c:	add	x5, x2, w5, sxtw #4
    e370:	str	x4, [x2, x3]
    e374:	str	x1, [x5, #8]
    e378:	ret
    e37c:	add	x3, x3, #0x10
    e380:	cmp	w0, #0x5
    e384:	b.ne	e350 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20>  // b.any
    e388:	mov	w0, #0x0                   	// #0
    e38c:	b	e378 <__sanitizer_install_malloc_and_free_hooks@@Base+0x48>
    e390:	stp	x19, x20, [sp, #-64]!
    e394:	mov	x20, x0
    e398:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    e39c:	stp	x21, x30, [sp, #16]
    e3a0:	ldr	x0, [x0, #4056]
    e3a4:	ldrb	w0, [x0, #60]
    e3a8:	cbz	w0, e3f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc4>
    e3ac:	add	x21, sp, #0x20
    e3b0:	mov	x19, x1
    e3b4:	mov	x0, x21
    e3b8:	mov	x1, #0x400                 	// #1024
    e3bc:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
    e3c0:	cbnz	x19, e3cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c>
    e3c4:	adrp	x0, 4e000 <_Unwind_Backtrace@GCC_3.3>
    e3c8:	ldr	x19, [x0, #1256]
    e3cc:	mov	x3, x20
    e3d0:	mov	x2, x19
    e3d4:	mov	x0, x21
    e3d8:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e3dc:	add	x1, x1, #0x634
    e3e0:	bl	16a9c <OnPrint@@Base+0x390>
    e3e4:	ldr	x0, [sp, #32]
    e3e8:	bl	6420 <__sanitizer_report_error_summary@plt>
    e3ec:	ldp	x0, x1, [sp, #32]
    e3f0:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
    e3f4:	ldp	x21, x30, [sp, #16]
    e3f8:	ldp	x19, x20, [sp], #64
    e3fc:	ret
    e400:	adrp	x1, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
    e404:	ldr	x3, [x1, #3016]
    e408:	cbz	x3, e42c <__sanitizer_install_malloc_and_free_hooks@@Base+0xfc>
    e40c:	str	x30, [sp, #-16]!
    e410:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e414:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e418:	add	x2, x2, #0x652
    e41c:	add	x0, x0, #0x682
    e420:	mov	x4, #0x0                   	// #0
    e424:	mov	w1, #0x16                  	// #22
    e428:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    e42c:	str	x0, [x1, #3016]
    e430:	ret
    e434:	mov	x0, #0x0                   	// #0
    e438:	ret
    e43c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    e440:	stp	x19, x20, [sp, #-112]!
    e444:	mov	w20, #0x0                   	// #0
    e448:	ldr	x0, [x0, #4056]
    e44c:	stp	x23, x24, [sp, #32]
    e450:	adrp	x23, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    e454:	adrp	x24, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    e458:	stp	x21, x22, [sp, #16]
    e45c:	ldr	x23, [x23, #3896]
    e460:	stp	x25, x26, [sp, #48]
    e464:	adrp	x25, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e468:	ldp	x22, x21, [x0, #136]
    e46c:	add	x25, x25, #0x6d8
    e470:	ldrb	w0, [x0, #152]
    e474:	mov	x26, #0x0                   	// #0
    e478:	str	w0, [sp, #100]
    e47c:	ldr	x0, [x24, #4024]
    e480:	stp	x27, x28, [sp, #64]
    e484:	mov	x27, #0x0                   	// #0
    e488:	str	x30, [sp, #80]
    e48c:	str	d8, [sp, #88]
    e490:	fmov	d8, xzr
    e494:	str	x0, [sp, #104]
    e498:	mov	w0, #0x64                  	// #100
    e49c:	bl	15604 <__sanitizer_set_report_fd@@Base+0x4d64>
    e4a0:	bl	14378 <__sanitizer_set_report_fd@@Base+0x3ad8>
    e4a4:	lsr	x28, x0, #20
    e4a8:	ldr	w0, [x23]
    e4ac:	cbz	w0, e528 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
    e4b0:	mov	x0, #0xb                   	// #11
    e4b4:	mov	x1, #0xa                   	// #10
    e4b8:	mul	x0, x26, x0
    e4bc:	udiv	x0, x0, x1
    e4c0:	cmp	x0, x28
    e4c4:	b.cs	e4e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b4>  // b.hs, b.nlast
    e4c8:	ldr	x0, [x24, #4024]
    e4cc:	mov	x2, x28
    e4d0:	mov	x26, x28
    e4d4:	ldr	x1, [x0]
    e4d8:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e4dc:	add	x0, x0, #0x6c8
    e4e0:	bl	16994 <OnPrint@@Base+0x288>
    e4e4:	bl	175b4 <OnPrint@@Base+0xea8>
    e4e8:	mov	x19, x0
    e4ec:	cbz	x0, e528 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
    e4f0:	mov	x0, #0xb                   	// #11
    e4f4:	mov	x1, #0xa                   	// #10
    e4f8:	ldr	x3, [x19, #8]
    e4fc:	mul	x0, x27, x0
    e500:	udiv	x0, x0, x1
    e504:	cmp	x0, x3
    e508:	b.cs	e528 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>  // b.hs, b.nlast
    e50c:	ldr	x0, [sp, #104]
    e510:	lsr	x3, x3, #20
    e514:	ldr	x2, [x19]
    e518:	ldr	x1, [x0]
    e51c:	mov	x0, x25
    e520:	bl	16994 <OnPrint@@Base+0x288>
    e524:	ldr	x27, [x19, #8]
    e528:	cmp	x22, #0x0
    e52c:	ccmp	x22, x28, #0x2, ne  // ne = any
    e530:	b.cs	e55c <__sanitizer_install_malloc_and_free_hooks@@Base+0x22c>  // b.hs, b.nlast
    e534:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    e538:	mov	x3, x28
    e53c:	mov	x2, x22
    e540:	ldr	x0, [x0, #4024]
    e544:	ldr	x1, [x0]
    e548:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e54c:	add	x0, x0, #0x701
    e550:	bl	16a18 <OnPrint@@Base+0x30c>
    e554:	bl	1506c <__sanitizer_set_report_fd@@Base+0x47cc>
    e558:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    e55c:	cbz	x21, e610 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2e0>
    e560:	cmp	x21, x28
    e564:	eor	w0, w20, #0x1
    e568:	cset	w19, cc  // cc = lo, ul, last
    e56c:	ands	w19, w19, w0
    e570:	b.eq	e5f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c0>  // b.none
    e574:	ldr	x0, [x24, #4024]
    e578:	mov	x3, x28
    e57c:	mov	x2, x21
    e580:	ldr	x1, [x0]
    e584:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e588:	add	x0, x0, #0x730
    e58c:	bl	16a18 <OnPrint@@Base+0x30c>
    e590:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
    e594:	ldr	x1, [x0, #3016]
    e598:	cbz	x1, e5a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x274>
    e59c:	mov	w0, #0x1                   	// #1
    e5a0:	blr	x1
    e5a4:	ldr	w0, [sp, #100]
    e5a8:	cbz	w0, e5e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2b8>
    e5ac:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e5b0:	scvtf	d0, d8
    e5b4:	ldr	d1, [x0, #1920]
    e5b8:	fmul	d0, d0, d1
    e5bc:	scvtf	d1, x28
    e5c0:	fcmpe	d1, d0
    e5c4:	b.le	e5e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2b8>
    e5c8:	mov	x1, x28
    e5cc:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e5d0:	add	x0, x0, #0x75f
    e5d4:	bl	16994 <OnPrint@@Base+0x288>
    e5d8:	mov	x1, #0x14                  	// #20
    e5dc:	mov	x0, #0x5a                  	// #90
    e5e0:	bl	6ae0 <__sanitizer_print_memory_profile@plt>
    e5e4:	fmov	d8, x28
    e5e8:	mov	w20, w19
    e5ec:	b	e498 <__sanitizer_install_malloc_and_free_hooks@@Base+0x168>
    e5f0:	cmp	w20, #0x0
    e5f4:	ccmp	x21, x28, #0x0, ne  // ne = any
    e5f8:	b.cc	e610 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2e0>  // b.lo, b.ul, b.last
    e5fc:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
    e600:	ldr	x1, [x0, #3016]
    e604:	cbz	x1, e5a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x274>
    e608:	mov	w0, #0x0                   	// #0
    e60c:	b	e5a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x270>
    e610:	mov	w19, w20
    e614:	b	e5a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x274>
    e618:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    e61c:	ldr	x0, [x0, #4056]
    e620:	ldp	x1, x2, [x0, #136]
    e624:	orr	x1, x1, x2
    e628:	cbnz	x1, e634 <__sanitizer_install_malloc_and_free_hooks@@Base+0x304>
    e62c:	ldrb	w0, [x0, #152]
    e630:	cbz	w0, e650 <__sanitizer_install_malloc_and_free_hooks@@Base+0x320>
    e634:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    e638:	ldr	x0, [x0, #3992]
    e63c:	cbz	x0, e650 <__sanitizer_install_malloc_and_free_hooks@@Base+0x320>
    e640:	mov	x1, #0x0                   	// #0
    e644:	adrp	x0, e000 <__sancov_default_options@@Base+0x2060>
    e648:	add	x0, x0, #0x43c
    e64c:	b	138f8 <__sanitizer_set_report_fd@@Base+0x3058>
    e650:	ret
    e654:	adrp	x1, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
    e658:	str	x0, [x1, #3024]
    e65c:	ret

000000000000e660 <__sanitizer_sandbox_on_notify@@Base>:
    e660:	str	x30, [sp, #-16]!
    e664:	bl	15904 <__sanitizer_set_report_fd@@Base+0x5064>
    e668:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
    e66c:	ldr	x0, [x0, #3024]
    e670:	cbz	x0, e680 <__sanitizer_sandbox_on_notify@@Base+0x20>
    e674:	ldr	x30, [sp], #16
    e678:	mov	x16, x0
    e67c:	br	x16
    e680:	ldr	x30, [sp], #16
    e684:	ret
    e688:	stp	x19, x20, [sp, #-64]!
    e68c:	mov	x1, #0x10000               	// #65536
    e690:	mov	x20, x0
    e694:	add	x19, sp, #0x20
    e698:	str	x30, [sp, #16]
    e69c:	mov	x0, x19
    e6a0:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
    e6a4:	mov	x0, x19
    e6a8:	mov	x2, x20
    e6ac:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    e6b0:	add	x1, x1, #0x85d
    e6b4:	bl	16a9c <OnPrint@@Base+0x390>
    e6b8:	ldr	x19, [sp, #32]
    e6bc:	mov	x0, x19
    e6c0:	mov	w1, #0xa                   	// #10
    e6c4:	bl	1225c <__sanitizer_set_report_fd@@Base+0x19bc>
    e6c8:	mov	x20, x0
    e6cc:	cbz	x0, e6e4 <__sanitizer_sandbox_on_notify@@Base+0x84>
    e6d0:	strb	wzr, [x0]
    e6d4:	mov	x0, x19
    e6d8:	add	x19, x20, #0x1
    e6dc:	bl	144c0 <__sanitizer_set_report_fd@@Base+0x3c20>
    e6e0:	b	e6bc <__sanitizer_sandbox_on_notify@@Base+0x5c>
    e6e4:	ldrb	w0, [x19]
    e6e8:	cbz	w0, e6f4 <__sanitizer_sandbox_on_notify@@Base+0x94>
    e6ec:	mov	x0, x19
    e6f0:	bl	144c0 <__sanitizer_set_report_fd@@Base+0x3c20>
    e6f4:	ldp	x0, x1, [sp, #32]
    e6f8:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
    e6fc:	ldr	x30, [sp, #16]
    e700:	ldp	x19, x20, [sp], #64
    e704:	ret
    e708:	stp	x19, x20, [sp, #-64]!
    e70c:	mov	x19, x0
    e710:	mov	x0, x1
    e714:	stp	x21, x22, [sp, #16]
    e718:	mov	x22, x2
    e71c:	mov	x21, x3
    e720:	stp	x23, x30, [sp, #32]
    e724:	bl	dc98 <__sancov_default_options@@Base+0x1cf8>
    e728:	cbnz	x0, e74c <__sanitizer_sandbox_on_notify@@Base+0xec>
    e72c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e730:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e734:	add	x2, x2, #0x788
    e738:	add	x0, x0, #0x798
    e73c:	mov	x4, #0x0                   	// #0
    e740:	mov	x3, #0x0                   	// #0
    e744:	mov	w1, #0x28                  	// #40
    e748:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    e74c:	mov	x20, x0
    e750:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    e754:	ldr	x0, [x0, #4056]
    e758:	ldr	x23, [x0, #168]
    e75c:	bl	132c0 <__sanitizer_set_report_fd@@Base+0x2a20>
    e760:	mov	x4, x20
    e764:	mov	x5, x0
    e768:	mov	x3, x23
    e76c:	adrp	x6, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e770:	add	x6, x6, #0x7e4
    e774:	mov	x1, #0x1000                	// #4096
    e778:	mov	x0, x19
    e77c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e780:	add	x2, x2, #0x7eb
    e784:	bl	16710 <OnPrint@@Base+0x4>
    e788:	add	x2, sp, #0x3c
    e78c:	mov	x0, x19
    e790:	mov	w1, #0x1                   	// #1
    e794:	bl	14d10 <__sanitizer_set_report_fd@@Base+0x4470>
    e798:	mov	w20, w0
    e79c:	cmn	w0, #0x1
    e7a0:	b.ne	e7b8 <__sanitizer_sandbox_on_notify@@Base+0x158>  // b.any
    e7a4:	ldr	w2, [sp, #60]
    e7a8:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e7ac:	mov	x1, x19
    e7b0:	add	x0, x0, #0x7f8
    e7b4:	bl	16a18 <OnPrint@@Base+0x30c>
    e7b8:	mov	w0, w20
    e7bc:	mov	x4, #0x0                   	// #0
    e7c0:	mov	x3, #0x0                   	// #0
    e7c4:	mov	x2, #0x8                   	// #8
    e7c8:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e7cc:	add	x1, x1, #0x8c0
    e7d0:	bl	14dac <__sanitizer_set_report_fd@@Base+0x450c>
    e7d4:	lsl	x2, x21, #3
    e7d8:	mov	x1, x22
    e7dc:	mov	x4, #0x0                   	// #0
    e7e0:	mov	x3, #0x0                   	// #0
    e7e4:	mov	w0, w20
    e7e8:	bl	14dac <__sanitizer_set_report_fd@@Base+0x450c>
    e7ec:	mov	w0, w20
    e7f0:	bl	14d60 <__sanitizer_set_report_fd@@Base+0x44c0>
    e7f4:	mov	x2, x21
    e7f8:	mov	x1, x19
    e7fc:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e800:	add	x0, x0, #0x837
    e804:	bl	16994 <OnPrint@@Base+0x288>
    e808:	ldp	x21, x22, [sp, #16]
    e80c:	ldp	x23, x30, [sp, #32]
    e810:	ldp	x19, x20, [sp], #64
    e814:	ret
    e818:	adrp	x1, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
    e81c:	ldrb	w2, [x1, #3032]
    e820:	cbnz	w2, e84c <__sanitizer_sandbox_on_notify@@Base+0x1ec>
    e824:	stp	x19, x30, [sp, #-16]!
    e828:	adrp	x19, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    e82c:	and	w0, w0, #0xff
    e830:	ldr	x19, [x19, #3952]
    e834:	strb	w0, [x1, #3032]
    e838:	mov	x0, x19
    e83c:	bl	1564c <__sanitizer_set_report_fd@@Base+0x4dac>
    e840:	mov	x0, x19
    e844:	ldp	x19, x30, [sp], #16
    e848:	b	1ce68 <__sanitizer_symbolize_global@@Base+0x4880>
    e84c:	ret

000000000000e850 <__sanitizer_cov_trace_cmp@@Base>:
    e850:	ret

000000000000e854 <__sanitizer_cov_trace_cmp1@@Base>:
    e854:	ret

000000000000e858 <__sanitizer_cov_trace_cmp2@@Base>:
    e858:	ret

000000000000e85c <__sanitizer_cov_trace_cmp4@@Base>:
    e85c:	ret

000000000000e860 <__sanitizer_cov_trace_cmp8@@Base>:
    e860:	ret

000000000000e864 <__sanitizer_cov_trace_const_cmp1@@Base>:
    e864:	ret

000000000000e868 <__sanitizer_cov_trace_const_cmp2@@Base>:
    e868:	ret

000000000000e86c <__sanitizer_cov_trace_const_cmp4@@Base>:
    e86c:	ret

000000000000e870 <__sanitizer_cov_trace_const_cmp8@@Base>:
    e870:	ret

000000000000e874 <__sanitizer_cov_trace_switch@@Base>:
    e874:	ret

000000000000e878 <__sanitizer_cov_trace_div4@@Base>:
    e878:	ret

000000000000e87c <__sanitizer_cov_trace_div8@@Base>:
    e87c:	ret

000000000000e880 <__sanitizer_cov_trace_gep@@Base>:
    e880:	ret

000000000000e884 <__sanitizer_cov_trace_pc_indir@@Base>:
    e884:	ret

000000000000e888 <__sanitizer_cov_8bit_counters_init@@Base>:
    e888:	ret

000000000000e88c <__sanitizer_cov_pcs_init@@Base>:
    e88c:	ret

000000000000e890 <__sanitizer_dump_coverage@@Base>:
    e890:	cbz	x1, ea28 <__sanitizer_dump_coverage@@Base+0x198>
    e894:	stp	x19, x20, [sp, #-128]!
    e898:	mov	x2, #0x0                   	// #0
    e89c:	stp	x21, x22, [sp, #16]
    e8a0:	mov	x21, x1
    e8a4:	mov	x1, #0x0                   	// #0
    e8a8:	stp	x23, x24, [sp, #32]
    e8ac:	mov	x24, x0
    e8b0:	mov	x0, #0x1000                	// #4096
    e8b4:	stp	x25, x26, [sp, #48]
    e8b8:	lsl	x20, x21, #3
    e8bc:	stp	x27, x28, [sp, #64]
    e8c0:	adrp	x27, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    e8c4:	mov	w28, #0x0                   	// #0
    e8c8:	str	x30, [sp, #80]
    e8cc:	bl	c408 <__sancov_default_options@@Base+0x468>
    e8d0:	mov	x2, #0x0                   	// #0
    e8d4:	mov	x1, #0x0                   	// #0
    e8d8:	mov	x23, x0
    e8dc:	mov	x0, #0x1000                	// #4096
    e8e0:	bl	c408 <__sancov_default_options@@Base+0x468>
    e8e4:	mov	x22, x0
    e8e8:	mov	x2, #0x0                   	// #0
    e8ec:	mov	x0, x20
    e8f0:	mov	x1, #0x0                   	// #0
    e8f4:	bl	c408 <__sancov_default_options@@Base+0x468>
    e8f8:	mov	x2, x20
    e8fc:	mov	x1, x24
    e900:	mov	x19, x0
    e904:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
    e908:	mov	x0, x19
    e90c:	mov	x1, x21
    e910:	mov	w2, #0x0                   	// #0
    e914:	bl	ec14 <__sanitizer_cov_trace_pc_guard_init@@Base+0x140>
    e918:	add	x0, x27, #0x85f
    e91c:	mov	x24, #0x0                   	// #0
    e920:	mov	x20, #0x0                   	// #0
    e924:	str	xzr, [sp, #104]
    e928:	str	x0, [sp, #120]
    e92c:	ldr	x27, [x19, x20, lsl #3]
    e930:	add	x26, x19, x20, lsl #3
    e934:	cbz	x27, e95c <__sanitizer_dump_coverage@@Base+0xcc>
    e938:	mov	x3, x26
    e93c:	mov	x0, x27
    e940:	mov	x2, #0x0                   	// #0
    e944:	mov	x1, #0x0                   	// #0
    e948:	bl	64d0 <__sanitizer_get_module_and_offset_for_pc@plt>
    e94c:	cbnz	w0, e9bc <__sanitizer_dump_coverage@@Base+0x12c>
    e950:	ldr	x0, [sp, #120]
    e954:	mov	x1, x27
    e958:	bl	16994 <OnPrint@@Base+0x288>
    e95c:	add	x20, x20, #0x1
    e960:	cmp	x21, x20
    e964:	b.ne	e92c <__sanitizer_dump_coverage@@Base+0x9c>  // b.any
    e968:	cbz	w28, e980 <__sanitizer_dump_coverage@@Base+0xf0>
    e96c:	sub	x3, x21, x24
    e970:	add	x2, x19, x24, lsl #3
    e974:	mov	x1, x22
    e978:	mov	x0, x23
    e97c:	bl	e708 <__sanitizer_sandbox_on_notify@@Base+0xa8>
    e980:	mov	x0, x23
    e984:	mov	x1, #0x0                   	// #0
    e988:	bl	c618 <__sancov_default_options@@Base+0x678>
    e98c:	mov	x0, x22
    e990:	mov	x1, #0x0                   	// #0
    e994:	bl	c618 <__sancov_default_options@@Base+0x678>
    e998:	mov	x0, x19
    e99c:	mov	x1, #0x0                   	// #0
    e9a0:	ldp	x21, x22, [sp, #16]
    e9a4:	ldp	x23, x24, [sp, #32]
    e9a8:	ldp	x25, x26, [sp, #48]
    e9ac:	ldp	x27, x28, [sp, #64]
    e9b0:	ldr	x30, [sp, #80]
    e9b4:	ldp	x19, x20, [sp], #128
    e9b8:	b	c618 <__sancov_default_options@@Base+0x678>
    e9bc:	ldr	x0, [x19, x20, lsl #3]
    e9c0:	sub	x0, x27, x0
    e9c4:	str	x0, [sp, #112]
    e9c8:	ldp	x0, x1, [sp, #104]
    e9cc:	cmp	x0, x1
    e9d0:	eor	w0, w28, #0x1
    e9d4:	cset	w25, ne  // ne = any
    e9d8:	orr	w25, w25, w0
    e9dc:	cbz	w25, ea20 <__sanitizer_dump_coverage@@Base+0x190>
    e9e0:	cbz	w28, e9f8 <__sanitizer_dump_coverage@@Base+0x168>
    e9e4:	sub	x3, x20, x24
    e9e8:	add	x2, x19, x24, lsl #3
    e9ec:	mov	x1, x22
    e9f0:	mov	x0, x23
    e9f4:	bl	e708 <__sanitizer_sandbox_on_notify@@Base+0xa8>
    e9f8:	mov	x3, x26
    e9fc:	mov	x1, x22
    ea00:	mov	x0, x27
    ea04:	mov	x2, #0x1000                	// #4096
    ea08:	bl	64d0 <__sanitizer_get_module_and_offset_for_pc@plt>
    ea0c:	mov	x24, x20
    ea10:	ldr	x0, [sp, #112]
    ea14:	mov	w28, w25
    ea18:	str	x0, [sp, #104]
    ea1c:	b	e95c <__sanitizer_dump_coverage@@Base+0xcc>
    ea20:	mov	w28, #0x1                   	// #1
    ea24:	b	e95c <__sanitizer_dump_coverage@@Base+0xcc>
    ea28:	ret

000000000000ea2c <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
    ea2c:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
    ea30:	add	x0, x0, #0xbd8
    ea34:	add	x2, x0, #0x8
    ea38:	ldrb	w0, [x0, #8]
    ea3c:	cbz	w0, ea5c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x30>
    ea40:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    ea44:	ldr	x0, [x0, #4056]
    ea48:	ldrb	w0, [x0, #161]
    ea4c:	cbz	w0, ea5c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x30>
    ea50:	ldr	x0, [x2, #8]
    ea54:	ldr	x1, [x2, #24]
    ea58:	b	6720 <__sanitizer_dump_coverage@plt>
    ea5c:	ret

000000000000ea60 <__sanitizer_cov_dump@@Base>:
    ea60:	b	68a0 <__sanitizer_dump_trace_pc_guard_coverage@plt>

000000000000ea64 <__sanitizer_cov_trace_pc_guard@@Base>:
    ea64:	ldr	w1, [x0]
    ea68:	cbz	w1, eaa0 <__sanitizer_cov_trace_pc_guard@@Base+0x3c>
    ea6c:	stp	x19, x30, [sp, #-16]!
    ea70:	sub	w1, w1, #0x1
    ea74:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
    ea78:	add	x0, x0, #0xbd8
    ea7c:	mov	x19, x30
    ea80:	add	x0, x0, #0x10
    ea84:	bl	ed0c <__sanitizer_cov_trace_pc_guard_init@@Base+0x238>
    ea88:	ldr	x1, [x0]
    ea8c:	cbnz	x1, ea98 <__sanitizer_cov_trace_pc_guard@@Base+0x34>
    ea90:	sub	x19, x19, #0x1
    ea94:	str	x19, [x0]
    ea98:	ldp	x19, x30, [sp], #16
    ea9c:	ret
    eaa0:	ret

000000000000eaa4 <__sanitizer_cov_reset@@Base>:
    eaa4:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
    eaa8:	add	x0, x0, #0xbd8
    eaac:	stp	x19, x30, [sp, #-16]!
    eab0:	add	x19, x0, #0x8
    eab4:	mov	x1, #0x0                   	// #0
    eab8:	add	x0, x0, #0x10
    eabc:	bl	ed0c <__sanitizer_cov_trace_pc_guard_init@@Base+0x238>
    eac0:	ldr	x2, [x19, #24]
    eac4:	mov	w1, #0x0                   	// #0
    eac8:	ldp	x19, x30, [sp], #16
    eacc:	lsl	x2, x2, #3
    ead0:	b	12190 <__sanitizer_set_report_fd@@Base+0x18f0>

000000000000ead4 <__sanitizer_cov_trace_pc_guard_init@@Base>:
    ead4:	cmp	x0, x1
    ead8:	b.eq	ec10 <__sanitizer_cov_trace_pc_guard_init@@Base+0x13c>  // b.none
    eadc:	stp	x19, x20, [sp, #-48]!
    eae0:	mov	x19, x0
    eae4:	ldr	w0, [x0]
    eae8:	stp	x21, x22, [sp, #16]
    eaec:	str	x30, [sp, #32]
    eaf0:	cbnz	w0, ec00 <__sanitizer_cov_trace_pc_guard_init@@Base+0x12c>
    eaf4:	adrp	x20, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
    eaf8:	add	x0, x20, #0xbd8
    eafc:	mov	x21, x1
    eb00:	add	x22, x0, #0x8
    eb04:	ldrb	w1, [x0, #8]
    eb08:	cbnz	w1, eb48 <__sanitizer_cov_trace_pc_guard_init@@Base+0x74>
    eb0c:	mov	w1, #0x1                   	// #1
    eb10:	strb	w1, [x0, #8]
    eb14:	bl	bfb8 <__sancov_default_options@@Base+0x18>
    eb18:	ldr	w0, [x19]
    eb1c:	stp	xzr, xzr, [x22, #8]
    eb20:	str	xzr, [x22, #24]
    eb24:	cbz	w0, eb48 <__sanitizer_cov_trace_pc_guard_init@@Base+0x74>
    eb28:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    eb2c:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    eb30:	add	x2, x2, #0x897
    eb34:	add	x0, x0, #0x798
    eb38:	mov	x4, #0x0                   	// #0
    eb3c:	mov	x3, #0x0                   	// #0
    eb40:	mov	w1, #0x77                  	// #119
    eb44:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    eb48:	mov	x0, x19
    eb4c:	cmp	x19, x21
    eb50:	b.ne	eb74 <__sanitizer_cov_trace_pc_guard_init@@Base+0xa0>  // b.any
    eb54:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    eb58:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    eb5c:	mov	x4, x19
    eb60:	mov	x3, x19
    eb64:	add	x2, x2, #0x8aa
    eb68:	add	x0, x0, #0x798
    eb6c:	mov	w1, #0x78                  	// #120
    eb70:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    eb74:	add	x1, x20, #0xbd8
    eb78:	ldr	x1, [x1, #32]
    eb7c:	mov	w2, w1
    eb80:	cmp	x21, x19
    eb84:	b.ls	eb94 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc0>  // b.plast
    eb88:	add	w2, w2, #0x1
    eb8c:	str	w2, [x19], #4
    eb90:	b	eb80 <__sanitizer_cov_trace_pc_guard_init@@Base+0xac>
    eb94:	add	x19, x21, #0x3
    eb98:	sub	x19, x19, x0
    eb9c:	sub	x0, x0, #0x3
    eba0:	cmp	x21, x0
    eba4:	lsr	x19, x19, #2
    eba8:	csel	w19, w19, wzr, cs  // cs = hs, nlast
    ebac:	add	w19, w19, w1
    ebb0:	cmp	x1, x19
    ebb4:	b.cs	ebf8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x124>  // b.hs, b.nlast
    ebb8:	add	x0, x20, #0xbd8
    ebbc:	add	x0, x0, #0x8
    ebc0:	ldr	x1, [x0, #16]
    ebc4:	cmp	x19, x1, lsr #3
    ebc8:	b.ls	ebd8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x104>  // b.plast
    ebcc:	mov	x1, x19
    ebd0:	add	x0, x0, #0x8
    ebd4:	bl	ed44 <__sanitizer_cov_trace_pc_guard_init@@Base+0x270>
    ebd8:	add	x1, x20, #0xbd8
    ebdc:	ldr	x0, [x1, #32]
    ebe0:	ldr	x3, [x1, #16]
    ebe4:	sub	x2, x19, x0
    ebe8:	mov	w1, #0x0                   	// #0
    ebec:	lsl	x2, x2, #3
    ebf0:	add	x0, x3, x0, lsl #3
    ebf4:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
    ebf8:	add	x20, x20, #0xbd8
    ebfc:	str	x19, [x20, #32]
    ec00:	ldp	x21, x22, [sp, #16]
    ec04:	ldr	x30, [sp, #32]
    ec08:	ldp	x19, x20, [sp], #48
    ec0c:	ret
    ec10:	ret
    ec14:	cmp	x1, #0x1
    ec18:	b.ls	ece8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>  // b.plast
    ec1c:	mov	x2, #0x1                   	// #1
    ec20:	mov	x3, x2
    ec24:	mov	x4, x3
    ec28:	sub	x3, x3, #0x1
    ec2c:	lsr	x3, x3, #1
    ec30:	lsl	x4, x4, #3
    ec34:	lsl	x5, x3, #3
    ec38:	ldr	x6, [x0, x4]
    ec3c:	ldr	x7, [x0, x5]
    ec40:	cmp	x7, x6
    ec44:	b.cs	ec54 <__sanitizer_cov_trace_pc_guard_init@@Base+0x180>  // b.hs, b.nlast
    ec48:	str	x7, [x0, x4]
    ec4c:	str	x6, [x0, x5]
    ec50:	cbnz	x3, ec24 <__sanitizer_cov_trace_pc_guard_init@@Base+0x150>
    ec54:	add	x3, x2, #0x1
    ec58:	cmp	x1, x3
    ec5c:	b.ne	ecec <__sanitizer_cov_trace_pc_guard_init@@Base+0x218>  // b.any
    ec60:	ldr	x1, [x0]
    ec64:	ldr	x3, [x0, x2, lsl #3]
    ec68:	str	x3, [x0]
    ec6c:	str	x1, [x0, x2, lsl #3]
    ec70:	mov	x1, #0x0                   	// #0
    ec74:	lsl	x4, x1, #1
    ec78:	add	x5, x1, #0x1
    ec7c:	add	x3, x4, #0x1
    ec80:	add	x4, x4, #0x2
    ec84:	cmp	x3, x2
    ec88:	b.cs	ecfc <__sanitizer_cov_trace_pc_guard_init@@Base+0x228>  // b.hs, b.nlast
    ec8c:	ldr	x7, [x0, x1, lsl #3]
    ec90:	ldr	x6, [x0, x3, lsl #3]
    ec94:	cmp	x7, x6
    ec98:	b.cs	ecfc <__sanitizer_cov_trace_pc_guard_init@@Base+0x228>  // b.hs, b.nlast
    ec9c:	cmp	x4, x2
    eca0:	b.cs	ecb8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1e4>  // b.hs, b.nlast
    eca4:	lsl	x5, x5, #4
    eca8:	ldr	x6, [x0, x3, lsl #3]
    ecac:	ldr	x5, [x0, x5]
    ecb0:	cmp	x6, x5
    ecb4:	csel	x3, x3, x4, cs  // cs = hs, nlast
    ecb8:	cmp	x3, x1
    ecbc:	b.eq	ece0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x20c>  // b.none
    ecc0:	lsl	x4, x3, #3
    ecc4:	lsl	x1, x1, #3
    ecc8:	cmp	x3, x2
    eccc:	ldr	x6, [x0, x4]
    ecd0:	ldr	x5, [x0, x1]
    ecd4:	str	x6, [x0, x1]
    ecd8:	str	x5, [x0, x4]
    ecdc:	b.cc	ecf4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x220>  // b.lo, b.ul, b.last
    ece0:	subs	x2, x2, #0x1
    ece4:	b.ne	ec60 <__sanitizer_cov_trace_pc_guard_init@@Base+0x18c>  // b.any
    ece8:	ret
    ecec:	mov	x2, x3
    ecf0:	b	ec20 <__sanitizer_cov_trace_pc_guard_init@@Base+0x14c>
    ecf4:	mov	x1, x3
    ecf8:	b	ec74 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a0>
    ecfc:	cmp	x4, x2
    ed00:	b.cs	ece0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x20c>  // b.hs, b.nlast
    ed04:	mov	x3, x1
    ed08:	b	eca4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d0>
    ed0c:	ldr	x4, [x0, #16]
    ed10:	mov	x3, x1
    ed14:	cmp	x1, x4
    ed18:	b.cc	ed38 <__sanitizer_cov_trace_pc_guard_init@@Base+0x264>  // b.lo, b.ul, b.last
    ed1c:	str	x30, [sp, #-16]!
    ed20:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    ed24:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    ed28:	add	x2, x2, #0x978
    ed2c:	add	x0, x0, #0x98a
    ed30:	mov	w1, #0x1b6                 	// #438
    ed34:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    ed38:	ldr	x0, [x0]
    ed3c:	add	x0, x0, x1, lsl #3
    ed40:	ret
    ed44:	stp	x19, x20, [sp, #-48]!
    ed48:	mov	x4, x1
    ed4c:	stp	x21, x22, [sp, #16]
    ed50:	str	x30, [sp, #32]
    ed54:	cbnz	x1, ed74 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2a0>
    ed58:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    ed5c:	add	x2, x2, #0x9c7
    ed60:	mov	x3, #0x0                   	// #0
    ed64:	mov	w1, #0x1fc                 	// #508
    ed68:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    ed6c:	add	x0, x0, #0x98a
    ed70:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    ed74:	ldr	x3, [x0, #16]
    ed78:	mov	x20, x0
    ed7c:	cmp	x1, x3
    ed80:	b.cs	ed94 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2c0>  // b.hs, b.nlast
    ed84:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    ed88:	mov	w1, #0x1fd                 	// #509
    ed8c:	add	x2, x2, #0x9e0
    ed90:	b	ed68 <__sanitizer_cov_trace_pc_guard_init@@Base+0x294>
    ed94:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
    ed98:	lsl	x19, x1, #3
    ed9c:	mov	x21, x0
    eda0:	ldr	x22, [x0, #4016]
    eda4:	ldr	x1, [x22]
    eda8:	cbnz	x1, edb4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2e0>
    edac:	bl	1352c <__sanitizer_set_report_fd@@Base+0x2c8c>
    edb0:	str	x0, [x22]
    edb4:	ldr	x0, [x21, #4016]
    edb8:	ldr	x0, [x0]
    edbc:	sub	x4, x0, #0x1
    edc0:	tst	x4, x0
    edc4:	b.eq	edd8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x304>  // b.none
    edc8:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    edcc:	add	x0, x0, #0x9fe
    edd0:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
    edd4:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
    edd8:	add	x19, x19, x4
    eddc:	neg	x0, x0
    ede0:	and	x19, x19, x0
    ede4:	mov	w2, #0x0                   	// #0
    ede8:	mov	x0, x19
    edec:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
    edf0:	add	x1, x1, #0xa15
    edf4:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
    edf8:	ldr	x1, [x20]
    edfc:	mov	x21, x0
    ee00:	ldr	x2, [x20, #16]
    ee04:	lsl	x2, x2, #3
    ee08:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
    ee0c:	ldp	x0, x1, [x20]
    ee10:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
    ee14:	ldr	x30, [sp, #32]
    ee18:	stp	x21, x19, [x20]
    ee1c:	ldp	x21, x22, [sp, #16]
    ee20:	ldp	x19, x20, [sp], #48
    ee24:	ret
    ee28:	mov	x0, #0x0                   	// #0
    ee2c:	ret
    ee30:	ret
    ee34:	stp	x19, x30, [sp, #-16]!
    ee38:	mov	x0, x1
    ee3c:	mov	x19, x2
    ee40:	ldr	x1, [x1]
    ee44:	ldr	x1, [x1]
    ee48:	str	xzr, [x2]
    ee4c:	blr	x1
    ee50:	str	w0, [x19, #8]
    ee54:	ldp	x19, x30, [sp], #16
    ee58:	ret
    ee5c:	ldr	x0, [x1, #16]
    ee60:	ldrb	w1, [x0, #2224]
    ee64:	cbz	w1, ee74 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3a0>
    ee68:	add	x0, x0, #0x628
    ee6c:	strb	wzr, [x0, #648]
    ee70:	ret
    ee74:	mov	x0, #0x0                   	// #0
    ee78:	b	ee70 <__sanitizer_cov_trace_pc_guard_init@@Base+0x39c>
    ee7c:	mov	x0, x1
    ee80:	mov	x1, #0x0                   	// #0
    ee84:	b	c618 <__sancov_default_options@@Base+0x678>
    ee88:	mov	x1, x0
    ee8c:	mov	x2, #0x1fff                	// #8191
    ee90:	lsr	x0, x0, #12
    ee94:	cmp	x1, x2
    ee98:	b.ls	eec0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3ec>  // b.plast
    ee9c:	str	x30, [sp, #-16]!
    eea0:	mov	x3, x0
    eea4:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    eea8:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    eeac:	add	x2, x2, #0x8c8
    eeb0:	add	x0, x0, #0x8e3
    eeb4:	mov	x4, #0x1                   	// #1
    eeb8:	mov	w1, #0x147                 	// #327
    eebc:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    eec0:	ret
    eec4:	str	x30, [sp, #-16]!
    eec8:	cmp	x1, #0xfff
    eecc:	b.hi	eef0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x41c>  // b.pmore
    eed0:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    eed4:	add	x2, x2, #0x923
    eed8:	mov	x3, x1
    eedc:	mov	x4, #0x1000                	// #4096
    eee0:	mov	w1, #0x172                 	// #370
    eee4:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    eee8:	add	x0, x0, #0x93a
    eeec:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    eef0:	ldr	x3, [x0]
    eef4:	and	x4, x1, #0xfffffffffffff000
    eef8:	cmp	x3, x4
    eefc:	b.eq	ef10 <__sanitizer_cov_trace_pc_guard_init@@Base+0x43c>  // b.none
    ef00:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    ef04:	mov	w1, #0x173                 	// #371
    ef08:	add	x2, x2, #0x982
    ef0c:	b	eee4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x410>
    ef10:	ldr	x30, [sp], #16
    ef14:	ret
    ef18:	cmp	x0, #0xfff
    ef1c:	b.ls	ef44 <__sanitizer_cov_trace_pc_guard_init@@Base+0x470>  // b.plast
    ef20:	str	x30, [sp, #-16]!
    ef24:	mov	x3, x0
    ef28:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    ef2c:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    ef30:	add	x2, x2, #0x9ae
    ef34:	add	x0, x0, #0x93a
    ef38:	mov	x4, #0x1000                	// #4096
    ef3c:	mov	w1, #0x16f                 	// #367
    ef40:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    ef44:	ret
    ef48:	str	x30, [sp, #-16]!
    ef4c:	mov	x3, x0
    ef50:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    ef54:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    ef58:	add	x2, x2, #0x9c3
    ef5c:	add	x0, x0, #0x8e3
    ef60:	mov	x4, #0x1000                	// #4096
    ef64:	mov	w1, #0x143                 	// #323
    ef68:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    ef6c:	mov	x3, x0
    ef70:	cmp	x0, #0x3f
    ef74:	b.ls	ef98 <__sanitizer_cov_trace_pc_guard_init@@Base+0x4c4>  // b.plast
    ef78:	str	x30, [sp, #-16]!
    ef7c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    ef80:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    ef84:	add	x2, x2, #0x9ae
    ef88:	add	x0, x0, #0x8e3
    ef8c:	mov	x4, #0x40                  	// #64
    ef90:	mov	w1, #0x63                  	// #99
    ef94:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    ef98:	mov	x0, #0x1                   	// #1
    ef9c:	lsl	x0, x0, x3
    efa0:	ret
    efa4:	stp	x19, x20, [sp, #-32]!
    efa8:	mov	x19, x0
    efac:	mov	x0, x1
    efb0:	ldr	x20, [x19]
    efb4:	str	x30, [sp, #16]
    efb8:	bl	ef6c <__sanitizer_cov_trace_pc_guard_init@@Base+0x498>
    efbc:	bic	x1, x20, x0
    efc0:	ldr	x30, [sp, #16]
    efc4:	str	x1, [x19]
    efc8:	cmp	x20, x1
    efcc:	cset	w0, ne  // ne = any
    efd0:	ldp	x19, x20, [sp], #32
    efd4:	ret
    efd8:	stp	x19, x20, [sp, #-32]!
    efdc:	mov	x2, #0x0                   	// #0
    efe0:	mov	x0, #0x8b8                 	// #2232
    efe4:	stp	x21, x30, [sp, #16]
    efe8:	mov	x21, x1
    efec:	mov	x1, #0x0                   	// #0
    eff0:	bl	c408 <__sancov_default_options@@Base+0x468>
    eff4:	mov	x19, x0
    eff8:	mov	x20, x0
    effc:	str	x21, [x19], #8
    f000:	mov	x0, x19
    f004:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
    f008:	ldp	x21, x30, [sp, #16]
    f00c:	str	xzr, [x19, #520]
    f010:	str	xzr, [x19, #1040]
    f014:	mov	x0, x20
    f018:	str	xzr, [x19, #1560]
    f01c:	strb	wzr, [x20, #2224]
    f020:	ldp	x19, x20, [sp], #32
    f024:	ret
    f028:	stp	x19, x20, [sp, #-32]!
    f02c:	mov	x19, x0
    f030:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
    f034:	add	x0, x0, #0xd78
    f038:	stp	x21, x30, [sp, #16]
    f03c:	add	x21, x19, #0x208, lsl #12
    f040:	str	x0, [x19]
    f044:	add	x0, x19, #0x410, lsl #12
    f048:	strb	wzr, [x19, #8]
    f04c:	add	x20, x19, #0x630
    f050:	add	x21, x21, #0x630
    f054:	ldrb	w1, [x1]
    f058:	strb	w1, [x0, #2632]
    f05c:	add	x0, x19, #0x18
    f060:	str	xzr, [x19, #16]
    f064:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
    f068:	add	x0, x19, #0x220
    f06c:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
    f070:	mov	x0, x20
    f074:	add	x20, x20, #0x208
    f078:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
    f07c:	cmp	x20, x21
    f080:	b.ne	f070 <__sanitizer_cov_trace_pc_guard_init@@Base+0x59c>  // b.any
    f084:	add	x19, x19, #0x10
    f088:	add	x19, x19, #0x410, lsl #12
    f08c:	ldp	x21, x30, [sp, #16]
    f090:	str	xzr, [x19, #2608]
    f094:	ldp	x19, x20, [sp], #32
    f098:	ret
    f09c:	stp	x19, x20, [sp, #-32]!
    f0a0:	mov	w2, #0x0                   	// #0
    f0a4:	mov	x20, x0
    f0a8:	mov	x0, #0xa50                 	// #2640
    f0ac:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    f0b0:	movk	x0, #0x41, lsl #16
    f0b4:	add	x1, x1, #0x9d9
    f0b8:	str	x30, [sp, #16]
    f0bc:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
    f0c0:	mov	x1, x20
    f0c4:	mov	x19, x0
    f0c8:	bl	f028 <__sanitizer_cov_trace_pc_guard_init@@Base+0x554>
    f0cc:	mov	x0, x19
    f0d0:	ldr	x30, [sp, #16]
    f0d4:	ldp	x19, x20, [sp], #32
    f0d8:	ret
    f0dc:	ldr	x0, [x1, #16]
    f0e0:	ldr	x1, [x2]
    f0e4:	ldr	x3, [x0, #528]
    f0e8:	and	x2, x1, #0xfffffffffffff000
    f0ec:	cmp	x3, x2
    f0f0:	b.ne	f100 <__sanitizer_cov_trace_pc_guard_init@@Base+0x62c>  // b.any
    f0f4:	and	x1, x1, #0xfff
    f0f8:	add	x0, x0, #0x8
    f0fc:	b	f818 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd44>
    f100:	ret
    f104:	stp	x19, x20, [sp, #-32]!
    f108:	mov	x19, x0
    f10c:	ldr	x0, [x2]
    f110:	str	x30, [sp, #16]
    f114:	cbz	x0, f150 <__sanitizer_cov_trace_pc_guard_init@@Base+0x67c>
    f118:	mov	x20, x2
    f11c:	add	x0, x19, #0x8
    f120:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    f124:	ldr	x1, [x20]
    f128:	cbz	x1, f144 <__sanitizer_cov_trace_pc_guard_init@@Base+0x670>
    f12c:	ldr	x2, [x19, #16]
    f130:	and	x0, x1, #0xfffffffffffff000
    f134:	cmp	x0, x2
    f138:	b.ne	f144 <__sanitizer_cov_trace_pc_guard_init@@Base+0x670>  // b.any
    f13c:	add	x0, x19, #0x10
    f140:	bl	fab8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xfe4>
    f144:	str	xzr, [x20]
    f148:	dmb	ish
    f14c:	strb	wzr, [x19, #8]
    f150:	ldr	x30, [sp, #16]
    f154:	ldp	x19, x20, [sp], #32
    f158:	ret
    f15c:	stp	x19, x20, [sp, #-32]!
    f160:	mov	x19, x0
    f164:	mov	x20, x2
    f168:	ldr	x0, [x2]
    f16c:	stp	x21, x30, [sp, #16]
    f170:	mov	x21, x1
    f174:	cbz	x0, f188 <__sanitizer_cov_trace_pc_guard_init@@Base+0x6b4>
    f178:	ldr	x1, [x19, #16]
    f17c:	and	x0, x0, #0xfffffffffffff000
    f180:	cmp	x0, x1
    f184:	b.eq	f198 <__sanitizer_cov_trace_pc_guard_init@@Base+0x6c4>  // b.none
    f188:	mov	x1, x20
    f18c:	add	x0, x19, #0x10
    f190:	bl	10038 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1564>
    f194:	str	x0, [x20]
    f198:	add	x0, x21, #0x8
    f19c:	ldr	x1, [x19, #16]
    f1a0:	ldp	x21, x30, [sp, #16]
    f1a4:	ldp	x19, x20, [sp], #32
    f1a8:	b	f770 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc9c>
    f1ac:	stp	x19, x20, [sp, #-96]!
    f1b0:	mov	x19, x0
    f1b4:	add	x0, x0, #0x410, lsl #12
    f1b8:	stp	x21, x22, [sp, #16]
    f1bc:	mov	x20, x1
    f1c0:	ldrb	w0, [x0, #2632]
    f1c4:	stp	x23, x24, [sp, #32]
    f1c8:	mov	x23, x2
    f1cc:	stp	x25, x26, [sp, #48]
    f1d0:	stp	x27, x28, [sp, #64]
    f1d4:	and	w28, w3, #0xff
    f1d8:	and	w27, w4, #0xff
    f1dc:	ldr	x26, [x1, #16]
    f1e0:	str	x30, [sp, #80]
    f1e4:	cbz	w0, f250 <__sanitizer_cov_trace_pc_guard_init@@Base+0x77c>
    f1e8:	ldr	x0, [x1]
    f1ec:	ldr	x1, [x0]
    f1f0:	mov	x0, x20
    f1f4:	blr	x1
    f1f8:	mov	w22, w0
    f1fc:	add	x21, x26, #0x8
    f200:	mov	x0, x21
    f204:	bl	f650 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb7c>
    f208:	tst	w0, #0xff
    f20c:	ldr	x24, [x23]
    f210:	b.eq	f258 <__sanitizer_cov_trace_pc_guard_init@@Base+0x784>  // b.none
    f214:	ldr	x2, [x26, #528]
    f218:	cbz	x2, f258 <__sanitizer_cov_trace_pc_guard_init@@Base+0x784>
    f21c:	and	x0, x24, #0xfffffffffffff000
    f220:	cmp	x2, x0
    f224:	b.ne	f258 <__sanitizer_cov_trace_pc_guard_init@@Base+0x784>  // b.any
    f228:	mov	w3, w22
    f22c:	and	x1, x24, #0xfff
    f230:	mov	x0, x21
    f234:	ldp	x21, x22, [sp, #16]
    f238:	ldp	x23, x24, [sp, #32]
    f23c:	ldp	x25, x26, [sp, #48]
    f240:	ldp	x27, x28, [sp, #64]
    f244:	ldr	x30, [sp, #80]
    f248:	ldp	x19, x20, [sp], #96
    f24c:	b	f9f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf20>
    f250:	mov	w22, #0x0                   	// #0
    f254:	b	f1fc <__sanitizer_cov_trace_pc_guard_init@@Base+0x728>
    f258:	add	x25, x19, #0x10
    f25c:	mov	x2, x24
    f260:	mov	x1, x21
    f264:	mov	x0, x25
    f268:	bl	f6dc <__sanitizer_cov_trace_pc_guard_init@@Base+0xc08>
    f26c:	tst	w0, #0xff
    f270:	b.eq	f280 <__sanitizer_cov_trace_pc_guard_init@@Base+0x7ac>  // b.none
    f274:	mov	w3, w22
    f278:	and	x2, x24, #0xfffffffffffff000
    f27c:	b	f22c <__sanitizer_cov_trace_pc_guard_init@@Base+0x758>
    f280:	add	x0, x19, #0x8
    f284:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    f288:	mov	x2, x23
    f28c:	mov	x1, x26
    f290:	mov	x0, x19
    f294:	bl	f15c <__sanitizer_cov_trace_pc_guard_init@@Base+0x688>
    f298:	cbz	w28, f2d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x800>
    f29c:	ldr	x2, [x23]
    f2a0:	mov	x1, x21
    f2a4:	mov	x0, x25
    f2a8:	bl	f7d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd04>
    f2ac:	tst	w0, #0xff
    f2b0:	b.eq	f2d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x800>  // b.none
    f2b4:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    f2b8:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    f2bc:	add	x2, x2, #0x9eb
    f2c0:	add	x0, x0, #0xa11
    f2c4:	mov	x4, #0x0                   	// #0
    f2c8:	mov	x3, #0x0                   	// #0
    f2cc:	mov	w1, #0xa5                  	// #165
    f2d0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    f2d4:	cbnz	w27, f31c <__sanitizer_cov_trace_pc_guard_init@@Base+0x848>
    f2d8:	ldr	x26, [x23]
    f2dc:	cbnz	w22, f370 <__sanitizer_cov_trace_pc_guard_init@@Base+0x89c>
    f2e0:	ldr	x0, [x20]
    f2e4:	ldr	x1, [x0]
    f2e8:	mov	x0, x20
    f2ec:	blr	x1
    f2f0:	mov	w24, w0
    f2f4:	ldr	x0, [x20]
    f2f8:	ldr	x1, [x0, #8]
    f2fc:	mov	x0, x20
    f300:	blr	x1
    f304:	mov	w4, w0
    f308:	mov	w3, w24
    f30c:	mov	x2, x26
    f310:	mov	x1, x21
    f314:	mov	x0, x25
    f318:	bl	feb0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x13dc>
    f31c:	ldr	x1, [x19, #16]
    f320:	mov	x0, x21
    f324:	ldr	x20, [x23]
    f328:	bl	f770 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc9c>
    f32c:	mov	x1, x20
    f330:	mov	x0, x25
    f334:	bl	eec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3f0>
    f338:	ldr	x2, [x19, #16]
    f33c:	mov	w3, w22
    f340:	and	x1, x20, #0xfff
    f344:	mov	x0, x21
    f348:	bl	f9f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf20>
    f34c:	dmb	ish
    f350:	strb	wzr, [x19, #8]
    f354:	ldp	x21, x22, [sp, #16]
    f358:	ldp	x23, x24, [sp, #32]
    f35c:	ldp	x25, x26, [sp, #48]
    f360:	ldp	x27, x28, [sp, #64]
    f364:	ldr	x30, [sp, #80]
    f368:	ldp	x19, x20, [sp], #96
    f36c:	ret
    f370:	mov	w24, w22
    f374:	b	f2f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x820>
    f378:	stp	x19, x20, [sp, #-288]!
    f37c:	mov	x20, x2
    f380:	mov	x4, #0x14                  	// #20
    f384:	ldr	x2, [x2]
    f388:	stp	x23, x24, [sp, #32]
    f38c:	add	x23, x0, #0x10
    f390:	ldr	x19, [x1, #16]
    f394:	stp	x25, x26, [sp, #48]
    f398:	add	x25, sp, #0x80
    f39c:	mov	x24, x0
    f3a0:	mov	x3, x25
    f3a4:	mov	x0, x23
    f3a8:	add	x1, x19, #0x8
    f3ac:	stp	x21, x22, [sp, #16]
    f3b0:	stp	x27, x28, [sp, #64]
    f3b4:	str	x30, [sp, #80]
    f3b8:	bl	10344 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1870>
    f3bc:	cbnz	x0, f3e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x914>
    f3c0:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    f3c4:	add	x0, x0, #0xa5b
    f3c8:	bl	16994 <OnPrint@@Base+0x288>
    f3cc:	ldp	x21, x22, [sp, #16]
    f3d0:	ldp	x23, x24, [sp, #32]
    f3d4:	ldp	x25, x26, [sp, #48]
    f3d8:	ldp	x27, x28, [sp, #64]
    f3dc:	ldr	x30, [sp, #80]
    f3e0:	ldp	x19, x20, [sp], #288
    f3e4:	ret
    f3e8:	ldr	x3, [x20]
    f3ec:	ldr	x4, [sp, #128]
    f3f0:	cmp	x3, x4
    f3f4:	b.eq	f410 <__sanitizer_cov_trace_pc_guard_init@@Base+0x93c>  // b.none
    f3f8:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    f3fc:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    f400:	add	x2, x2, #0xa80
    f404:	add	x0, x0, #0xa11
    f408:	mov	w1, #0x7f                  	// #127
    f40c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    f410:	cmp	x0, #0x14
    f414:	mov	w1, #0x1                   	// #1
    f418:	mov	x21, #0x14                  	// #20
    f41c:	mov	x22, #0x1146                	// #4422
    f420:	csel	x21, x0, x21, ls  // ls = plast
    f424:	add	x5, x23, #0x410, lsl #12
    f428:	add	x19, x19, #0x630
    f42c:	mov	x20, #0x0                   	// #0
    f430:	movk	x22, #0x4, lsl #16
    f434:	stur	w21, [x19, #-8]
    f438:	strb	w1, [x19, #640]
    f43c:	ldr	x27, [x25, x20, lsl #3]
    f440:	add	x20, x20, #0x1
    f444:	str	x5, [sp, #120]
    f448:	mov	x1, x27
    f44c:	udiv	x0, x20, x21
    f450:	msub	x0, x0, x21, x20
    f454:	ldr	x26, [x25, x0, lsl #3]
    f458:	mov	x0, x23
    f45c:	bl	eec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3f0>
    f460:	and	x3, x27, #0xfff
    f464:	mov	x1, x26
    f468:	add	x0, x3, x22
    f46c:	and	x28, x26, #0xfff
    f470:	ldr	x7, [x23, x0, lsl #3]
    f474:	mov	x0, x23
    f478:	stp	x7, x3, [sp, #104]
    f47c:	bl	eec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3f0>
    f480:	add	x0, x28, x22
    f484:	mov	x1, x27
    f488:	ldr	x4, [x23, x0, lsl #3]
    f48c:	mov	x0, x23
    f490:	str	x4, [sp, #96]
    f494:	bl	eec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3f0>
    f498:	mov	x1, x26
    f49c:	mov	x0, x23
    f4a0:	bl	eec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3f0>
    f4a4:	ldp	x3, x5, [sp, #112]
    f4a8:	mov	x6, #0xa40                 	// #2624
    f4ac:	ldp	x4, x7, [sp, #96]
    f4b0:	movk	x6, #0x21, lsl #16
    f4b4:	add	x2, x24, x6
    f4b8:	mov	x1, #0x0                   	// #0
    f4bc:	ldr	x0, [x5, #2608]
    f4c0:	cmp	x0, x1
    f4c4:	b.eq	f52c <__sanitizer_cov_trace_pc_guard_init@@Base+0xa58>  // b.none
    f4c8:	ldrh	w8, [x2]
    f4cc:	cmp	x8, x3
    f4d0:	b.ne	f520 <__sanitizer_cov_trace_pc_guard_init@@Base+0xa4c>  // b.any
    f4d4:	ldrh	w8, [x2, #2]
    f4d8:	cmp	x8, x28
    f4dc:	b.ne	f520 <__sanitizer_cov_trace_pc_guard_init@@Base+0xa4c>  // b.any
    f4e0:	add	x1, x24, x1, lsl #4
    f4e4:	add	x1, x1, #0x210, lsl #12
    f4e8:	ldr	w2, [x1, #2628]
    f4ec:	ldr	w0, [x1, #2632]
    f4f0:	ldr	w1, [x1, #2636]
    f4f4:	sxtw	x1, w1
    f4f8:	str	x1, [x19]
    f4fc:	cmp	x20, x21
    f500:	ldr	x1, [x7, #16]
    f504:	str	x1, [x19, #8]
    f508:	ldr	x1, [x4, #16]
    f50c:	str	x1, [x19, #16]
    f510:	stp	w0, w2, [x19, #24]
    f514:	add	x19, x19, #0x20
    f518:	b.ne	f43c <__sanitizer_cov_trace_pc_guard_init@@Base+0x968>  // b.any
    f51c:	b	f3cc <__sanitizer_cov_trace_pc_guard_init@@Base+0x8f8>
    f520:	add	x1, x1, #0x1
    f524:	add	x2, x2, #0x10
    f528:	b	f4c0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9ec>
    f52c:	mov	w0, #0xffffffff            	// #-1
    f530:	mov	w1, #0x0                   	// #0
    f534:	mov	w2, w0
    f538:	b	f4f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0xa20>
    f53c:	stp	x19, x20, [sp, #-64]!
    f540:	mov	x19, x0
    f544:	mov	x20, x1
    f548:	stp	x23, x24, [sp, #32]
    f54c:	ldr	x24, [x1, #16]
    f550:	stp	x21, x22, [sp, #16]
    f554:	mov	x21, x2
    f558:	add	x22, x24, #0x8
    f55c:	stp	x25, x30, [sp, #48]
    f560:	mov	x0, x22
    f564:	bl	f650 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb7c>
    f568:	tst	w0, #0xff
    f56c:	b.ne	f5c8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xaf4>  // b.any
    f570:	ldr	x2, [x21]
    f574:	add	x23, x19, #0x10
    f578:	mov	x1, x22
    f57c:	mov	x0, x23
    f580:	bl	f6dc <__sanitizer_cov_trace_pc_guard_init@@Base+0xc08>
    f584:	tst	w0, #0xff
    f588:	b.ne	f5c8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xaf4>  // b.any
    f58c:	add	x0, x19, #0x8
    f590:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
    f594:	mov	x1, x24
    f598:	mov	x2, x21
    f59c:	mov	x0, x19
    f5a0:	bl	f15c <__sanitizer_cov_trace_pc_guard_init@@Base+0x688>
    f5a4:	ldr	x24, [x21]
    f5a8:	mov	x1, x22
    f5ac:	mov	x0, x23
    f5b0:	mov	x2, x24
    f5b4:	bl	f7d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd04>
    f5b8:	tst	w0, #0xff
    f5bc:	b.eq	f5dc <__sanitizer_cov_trace_pc_guard_init@@Base+0xb08>  // b.none
    f5c0:	dmb	ish
    f5c4:	strb	wzr, [x19, #8]
    f5c8:	ldp	x21, x22, [sp, #16]
    f5cc:	ldp	x23, x24, [sp, #32]
    f5d0:	ldp	x25, x30, [sp, #48]
    f5d4:	ldp	x19, x20, [sp], #64
    f5d8:	ret
    f5dc:	mov	x2, x24
    f5e0:	mov	x1, x22
    f5e4:	mov	x0, x23
    f5e8:	bl	fd68 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1294>
    f5ec:	tst	w0, #0xff
    f5f0:	b.eq	f5c0 <__sanitizer_cov_trace_pc_guard_init@@Base+0xaec>  // b.none
    f5f4:	ldr	x0, [x20]
    f5f8:	ldr	x25, [x21]
    f5fc:	ldr	x1, [x0]
    f600:	mov	x0, x20
    f604:	blr	x1
    f608:	mov	w24, w0
    f60c:	ldr	x0, [x20]
    f610:	ldr	x1, [x0, #8]
    f614:	mov	x0, x20
    f618:	blr	x1
    f61c:	mov	w4, w0
    f620:	mov	w3, w24
    f624:	mov	x2, x25
    f628:	mov	x1, x22
    f62c:	mov	x0, x23
    f630:	bl	feb0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x13dc>
    f634:	mov	x2, x21
    f638:	mov	x1, x20
    f63c:	mov	x0, x19
    f640:	bl	f378 <__sanitizer_cov_trace_pc_guard_init@@Base+0x8a4>
    f644:	b	f5c0 <__sanitizer_cov_trace_pc_guard_init@@Base+0xaec>
    f648:	str	xzr, [x0]
    f64c:	ret
    f650:	ldr	x0, [x0]
    f654:	cmp	x0, #0x0
    f658:	cset	w0, eq  // eq = none
    f65c:	ret
    f660:	stp	x19, x20, [sp, #-48]!
    f664:	cmp	x1, #0x1, lsl #12
    f668:	mov	x19, x1
    f66c:	stp	x21, x22, [sp, #16]
    f670:	str	x30, [sp, #32]
    f674:	b.ls	f680 <__sanitizer_cov_trace_pc_guard_init@@Base+0xbac>  // b.plast
    f678:	mov	x0, x1
    f67c:	bl	ef48 <__sanitizer_cov_trace_pc_guard_init@@Base+0x474>
    f680:	mov	x21, x0
    f684:	mov	x0, x1
    f688:	bl	ee88 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3b4>
    f68c:	mov	x20, x0
    f690:	ubfx	x22, x19, #6, #6
    f694:	mov	x0, x22
    f698:	bl	ef6c <__sanitizer_cov_trace_pc_guard_init@@Base+0x498>
    f69c:	ldr	x1, [x21, x20, lsl #3]
    f6a0:	tst	x0, x1
    f6a4:	b.eq	f6d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc00>  // b.none
    f6a8:	add	x22, x22, #0x1
    f6ac:	and	x0, x19, #0x3f
    f6b0:	add	x20, x22, x20, lsl #6
    f6b4:	bl	ef6c <__sanitizer_cov_trace_pc_guard_init@@Base+0x498>
    f6b8:	ldr	x1, [x21, x20, lsl #3]
    f6bc:	tst	x0, x1
    f6c0:	cset	w0, ne  // ne = any
    f6c4:	ldp	x21, x22, [sp, #16]
    f6c8:	ldr	x30, [sp, #32]
    f6cc:	ldp	x19, x20, [sp], #48
    f6d0:	ret
    f6d4:	mov	w0, #0x0                   	// #0
    f6d8:	b	f6c4 <__sanitizer_cov_trace_pc_guard_init@@Base+0xbf0>
    f6dc:	cbz	x2, f750 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc7c>
    f6e0:	ldr	x3, [x0]
    f6e4:	ldr	x4, [x1, #520]
    f6e8:	cmp	x3, x4
    f6ec:	b.ne	f750 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc7c>  // b.any
    f6f0:	and	x4, x2, #0xfffffffffffff000
    f6f4:	cmp	x4, x3
    f6f8:	b.ne	f750 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc7c>  // b.any
    f6fc:	stp	x19, x20, [sp, #-64]!
    f700:	and	x19, x2, #0xfff
    f704:	add	x20, x1, #0x418
    f708:	stp	x21, x22, [sp, #16]
    f70c:	add	x21, x0, #0x620
    f710:	mov	x22, #0x0                   	// #0
    f714:	stp	x23, x24, [sp, #32]
    f718:	mov	w24, #0x208                 	// #520
    f71c:	ldr	x23, [x1, #1560]
    f720:	str	x30, [sp, #48]
    f724:	cmp	x23, x22
    f728:	b.eq	f758 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc84>  // b.none
    f72c:	lsl	x0, x22, #3
    f730:	mov	x1, x19
    f734:	ldr	w0, [x20, x0]
    f738:	umaddl	x0, w0, w24, x21
    f73c:	bl	f660 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb8c>
    f740:	ands	w0, w0, #0xff
    f744:	b.eq	f75c <__sanitizer_cov_trace_pc_guard_init@@Base+0xc88>  // b.none
    f748:	add	x22, x22, #0x1
    f74c:	b	f724 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc50>
    f750:	mov	w0, #0x0                   	// #0
    f754:	ret
    f758:	mov	w0, #0x1                   	// #1
    f75c:	ldp	x21, x22, [sp, #16]
    f760:	ldp	x23, x24, [sp, #32]
    f764:	ldr	x30, [sp, #48]
    f768:	ldp	x19, x20, [sp], #64
    f76c:	ret
    f770:	stp	x19, x20, [sp, #-32]!
    f774:	mov	x20, x1
    f778:	ldr	x1, [x0, #520]
    f77c:	str	x30, [sp, #16]
    f780:	cmp	x1, x20
    f784:	b.eq	f79c <__sanitizer_cov_trace_pc_guard_init@@Base+0xcc8>  // b.none
    f788:	mov	x19, x0
    f78c:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
    f790:	str	x20, [x19, #520]
    f794:	str	xzr, [x19, #1040]
    f798:	str	xzr, [x19, #1560]
    f79c:	ldr	x30, [sp, #16]
    f7a0:	ldp	x19, x20, [sp], #32
    f7a4:	ret
    f7a8:	ldr	x3, [x0, #520]
    f7ac:	cmp	x3, x1
    f7b0:	b.eq	f7d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd00>  // b.none
    f7b4:	str	x30, [sp, #-16]!
    f7b8:	mov	x4, x1
    f7bc:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    f7c0:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    f7c4:	add	x2, x2, #0xa99
    f7c8:	add	x0, x0, #0x93a
    f7cc:	mov	w1, #0x6c                  	// #108
    f7d0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    f7d4:	ret
    f7d8:	stp	x19, x20, [sp, #-32]!
    f7dc:	mov	x20, x0
    f7e0:	mov	x0, x1
    f7e4:	mov	x19, x2
    f7e8:	stp	x21, x30, [sp, #16]
    f7ec:	ldr	x1, [x20]
    f7f0:	bl	f7a8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xcd4>
    f7f4:	mov	x21, x0
    f7f8:	mov	x1, x19
    f7fc:	mov	x0, x20
    f800:	bl	eec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3f0>
    f804:	and	x1, x19, #0xfff
    f808:	mov	x0, x21
    f80c:	ldp	x21, x30, [sp, #16]
    f810:	ldp	x19, x20, [sp], #32
    f814:	b	f660 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb8c>
    f818:	stp	x19, x20, [sp, #-64]!
    f81c:	mov	x20, x1
    f820:	mov	x19, x0
    f824:	ldr	x1, [x0, #1040]
    f828:	stp	x21, x22, [sp, #16]
    f82c:	stp	x23, x24, [sp, #32]
    f830:	str	x30, [sp, #48]
    f834:	cbz	x1, f888 <__sanitizer_cov_trace_pc_guard_init@@Base+0xdb4>
    f838:	sub	x2, x1, #0x1
    f83c:	add	x3, x19, #0x210
    f840:	mov	x0, x2
    f844:	tbnz	x0, #63, f888 <__sanitizer_cov_trace_pc_guard_init@@Base+0xdb4>
    f848:	ldr	x4, [x3, x0, lsl #3]
    f84c:	cmp	x4, x20
    f850:	b.ne	f880 <__sanitizer_cov_trace_pc_guard_init@@Base+0xdac>  // b.any
    f854:	add	x1, x19, x1, lsl #3
    f858:	add	x0, x0, #0x42
    f85c:	str	x2, [x19, #1040]
    f860:	ldr	x2, [x1, #520]
    f864:	str	x2, [x19, x0, lsl #3]
    f868:	str	x20, [x1, #520]
    f86c:	ldp	x21, x22, [sp, #16]
    f870:	ldp	x23, x24, [sp, #32]
    f874:	ldr	x30, [sp, #48]
    f878:	ldp	x19, x20, [sp], #64
    f87c:	ret
    f880:	sub	x0, x0, #0x1
    f884:	b	f844 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd70>
    f888:	mov	x0, x20
    f88c:	cmp	x20, #0x1, lsl #12
    f890:	b.ls	f898 <__sanitizer_cov_trace_pc_guard_init@@Base+0xdc4>  // b.plast
    f894:	bl	ef48 <__sanitizer_cov_trace_pc_guard_init@@Base+0x474>
    f898:	bl	ee88 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3b4>
    f89c:	lsl	x24, x0, #3
    f8a0:	ubfx	x22, x20, #6, #6
    f8a4:	mov	x21, x0
    f8a8:	add	x23, x19, x0, lsl #3
    f8ac:	mov	x0, x22
    f8b0:	bl	ef6c <__sanitizer_cov_trace_pc_guard_init@@Base+0x498>
    f8b4:	ldr	x1, [x19, x24]
    f8b8:	tst	x0, x1
    f8bc:	b.eq	f86c <__sanitizer_cov_trace_pc_guard_init@@Base+0xd98>  // b.none
    f8c0:	add	x0, x22, #0x1
    f8c4:	and	x1, x20, #0x3f
    f8c8:	add	x0, x0, x21, lsl #6
    f8cc:	lsl	x24, x0, #3
    f8d0:	add	x0, x19, x0, lsl #3
    f8d4:	bl	efa4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x4d0>
    f8d8:	and	w21, w0, #0xff
    f8dc:	ldr	x0, [x19, x24]
    f8e0:	cbnz	x0, f8f0 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe1c>
    f8e4:	mov	x1, x22
    f8e8:	mov	x0, x23
    f8ec:	bl	efa4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x4d0>
    f8f0:	cbz	w21, f86c <__sanitizer_cov_trace_pc_guard_init@@Base+0xd98>
    f8f4:	ldr	x1, [x19, #1560]
    f8f8:	cbz	x1, f86c <__sanitizer_cov_trace_pc_guard_init@@Base+0xd98>
    f8fc:	sub	x2, x1, #0x1
    f900:	add	x4, x19, #0x418
    f904:	mov	x0, x2
    f908:	tbnz	x0, #63, f86c <__sanitizer_cov_trace_pc_guard_init@@Base+0xd98>
    f90c:	lsl	x3, x0, #3
    f910:	ldr	w3, [x4, x3]
    f914:	cmp	w3, w20
    f918:	b.ne	f950 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe7c>  // b.any
    f91c:	add	x1, x1, #0x82
    f920:	add	x6, x19, x2, lsl #3
    f924:	add	x4, x19, x0, lsl #3
    f928:	add	x0, x19, x0, lsl #3
    f92c:	lsl	x5, x1, #3
    f930:	add	x1, x19, x1, lsl #3
    f934:	ldr	x6, [x6, #1048]
    f938:	ldr	w4, [x4, #1052]
    f93c:	str	x6, [x0, #1048]
    f940:	str	w3, [x19, x5]
    f944:	str	w4, [x1, #4]
    f948:	str	x2, [x19, #1560]
    f94c:	b	f86c <__sanitizer_cov_trace_pc_guard_init@@Base+0xd98>
    f950:	sub	x0, x0, #0x1
    f954:	b	f908 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe34>
    f958:	stp	x19, x20, [sp, #-64]!
    f95c:	cmp	x1, #0x1, lsl #12
    f960:	mov	x20, x1
    f964:	stp	x21, x22, [sp, #16]
    f968:	stp	x23, x24, [sp, #32]
    f96c:	str	x30, [sp, #48]
    f970:	b.ls	f97c <__sanitizer_cov_trace_pc_guard_init@@Base+0xea8>  // b.plast
    f974:	mov	x0, x1
    f978:	bl	ef48 <__sanitizer_cov_trace_pc_guard_init@@Base+0x474>
    f97c:	mov	x21, x0
    f980:	mov	x0, x1
    f984:	bl	ee88 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3b4>
    f988:	lsl	x24, x0, #3
    f98c:	ubfx	x23, x20, #6, #6
    f990:	mov	x19, x0
    f994:	mov	x0, x23
    f998:	add	x23, x23, #0x1
    f99c:	ldr	x22, [x21, x24]
    f9a0:	add	x19, x23, x19, lsl #6
    f9a4:	bl	ef6c <__sanitizer_cov_trace_pc_guard_init@@Base+0x498>
    f9a8:	and	x20, x20, #0x3f
    f9ac:	lsl	x19, x19, #3
    f9b0:	tst	x22, x0
    f9b4:	b.ne	f9c4 <__sanitizer_cov_trace_pc_guard_init@@Base+0xef0>  // b.any
    f9b8:	orr	x22, x22, x0
    f9bc:	str	x22, [x21, x24]
    f9c0:	str	xzr, [x21, x19]
    f9c4:	ldr	x22, [x21, x19]
    f9c8:	mov	x0, x20
    f9cc:	bl	ef6c <__sanitizer_cov_trace_pc_guard_init@@Base+0x498>
    f9d0:	orr	x0, x22, x0
    f9d4:	str	x0, [x21, x19]
    f9d8:	cmp	x22, x0
    f9dc:	cset	w0, ne  // ne = any
    f9e0:	ldp	x21, x22, [sp, #16]
    f9e4:	ldp	x23, x24, [sp, #32]
    f9e8:	ldr	x30, [sp, #48]
    f9ec:	ldp	x19, x20, [sp], #64
    f9f0:	ret
    f9f4:	stp	x19, x20, [sp, #-32]!
    f9f8:	stp	x21, x30, [sp, #16]
    f9fc:	mov	w21, w3
    fa00:	ldr	x3, [x0, #520]
    fa04:	cmp	x3, x2
    fa08:	b.eq	fa28 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf54>  // b.none
    fa0c:	mov	x4, x2
    fa10:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    fa14:	add	x2, x2, #0xa99
    fa18:	mov	w1, #0x3c                  	// #60
    fa1c:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    fa20:	add	x0, x0, #0x93a
    fa24:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    fa28:	mov	x19, x0
    fa2c:	mov	x20, x1
    fa30:	bl	f958 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe84>
    fa34:	tst	w0, #0xff
    fa38:	b.ne	fa78 <__sanitizer_cov_trace_pc_guard_init@@Base+0xfa4>  // b.any
    fa3c:	ldr	x3, [x19, #1040]
    fa40:	cmp	x3, #0x3f
    fa44:	b.ls	fa5c <__sanitizer_cov_trace_pc_guard_init@@Base+0xf88>  // b.plast
    fa48:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    fa4c:	mov	x4, #0x40                  	// #64
    fa50:	add	x2, x2, #0xab9
    fa54:	mov	w1, #0x3f                  	// #63
    fa58:	b	fa1c <__sanitizer_cov_trace_pc_guard_init@@Base+0xf48>
    fa5c:	add	x1, x3, #0x1
    fa60:	add	x3, x3, #0x42
    fa64:	str	x1, [x19, #1040]
    fa68:	str	x20, [x19, x3, lsl #3]
    fa6c:	ldp	x21, x30, [sp, #16]
    fa70:	ldp	x19, x20, [sp], #32
    fa74:	ret
    fa78:	ldr	x3, [x19, #1560]
    fa7c:	cmp	x3, #0x3f
    fa80:	b.ls	fa98 <__sanitizer_cov_trace_pc_guard_init@@Base+0xfc4>  // b.plast
    fa84:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    fa88:	mov	x4, #0x40                  	// #64
    fa8c:	add	x2, x2, #0xb0c
    fa90:	mov	w1, #0x43                  	// #67
    fa94:	b	fa1c <__sanitizer_cov_trace_pc_guard_init@@Base+0xf48>
    fa98:	add	x2, x3, #0x83
    fa9c:	add	x1, x3, #0x1
    faa0:	str	x1, [x19, #1560]
    faa4:	lsl	x1, x2, #3
    faa8:	add	x2, x19, x2, lsl #3
    faac:	str	w20, [x19, x1]
    fab0:	str	w21, [x2, #4]
    fab4:	b	fa6c <__sanitizer_cov_trace_pc_guard_init@@Base+0xf98>
    fab8:	stp	x19, x20, [sp, #-32]!
    fabc:	mov	x19, x0
    fac0:	and	x20, x1, #0xfff
    fac4:	str	x30, [sp, #16]
    fac8:	bl	eec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3f0>
    facc:	mov	x1, x20
    fad0:	add	x0, x19, #0x8
    fad4:	bl	f660 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb8c>
    fad8:	tst	w0, #0xff
    fadc:	b.eq	fb00 <__sanitizer_cov_trace_pc_guard_init@@Base+0x102c>  // b.none
    fae0:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    fae4:	add	x2, x2, #0xb6c
    fae8:	mov	x4, #0x0                   	// #0
    faec:	mov	x3, #0x0                   	// #0
    faf0:	mov	w1, #0xc0                  	// #192
    faf4:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    faf8:	add	x0, x0, #0x93a
    fafc:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    fb00:	mov	x1, x20
    fb04:	add	x0, x19, #0x210
    fb08:	bl	f958 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe84>
    fb0c:	tst	w0, #0xff
    fb10:	b.ne	fb2c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1058>  // b.any
    fb14:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    fb18:	mov	x4, #0x0                   	// #0
    fb1c:	add	x2, x2, #0xb95
    fb20:	mov	x3, #0x0                   	// #0
    fb24:	mov	w1, #0xc1                  	// #193
    fb28:	b	faf4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1020>
    fb2c:	add	x19, x19, #0x620
    fb30:	mov	x0, #0x208                 	// #520
    fb34:	ldr	x30, [sp, #16]
    fb38:	madd	x0, x20, x0, x19
    fb3c:	ldp	x19, x20, [sp], #32
    fb40:	b	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
    fb44:	stp	x19, x30, [sp, #-16]!
    fb48:	ldr	x19, [x0]
    fb4c:	cbnz	x19, fb70 <__sanitizer_cov_trace_pc_guard_init@@Base+0x109c>
    fb50:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
    fb54:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    fb58:	add	x2, x2, #0xf46
    fb5c:	add	x0, x0, #0x8e3
    fb60:	mov	x4, #0x0                   	// #0
    fb64:	mov	x3, #0x0                   	// #0
    fb68:	mov	w1, #0x30                  	// #48
    fb6c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    fb70:	rbit	x19, x19
    fb74:	clz	x19, x19
    fb78:	mov	x1, x19
    fb7c:	bl	efa4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x4d0>
    fb80:	mov	x0, x19
    fb84:	ldp	x19, x30, [sp], #16
    fb88:	ret
    fb8c:	stp	x19, x20, [sp, #-96]!
    fb90:	mov	x20, x0
    fb94:	mov	x19, #0x0                   	// #0
    fb98:	stp	x21, x22, [sp, #16]
    fb9c:	add	x21, sp, #0x58
    fba0:	mov	w22, #0x1                   	// #1
    fba4:	stp	x25, x26, [sp, #48]
    fba8:	mov	x26, x1
    fbac:	stp	x23, x24, [sp, #32]
    fbb0:	stp	x27, x30, [sp, #64]
    fbb4:	mov	w27, #0x0                   	// #0
    fbb8:	add	x23, x20, x19, lsl #3
    fbbc:	ldr	x0, [x20, x19, lsl #3]
    fbc0:	add	x24, x19, #0x1
    fbc4:	ldr	x1, [x26]
    fbc8:	mov	w25, #0x0                   	// #0
    fbcc:	and	x0, x0, x1
    fbd0:	str	x0, [sp, #88]
    fbd4:	ldr	x0, [sp, #88]
    fbd8:	cbz	x0, fc1c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1148>
    fbdc:	mov	x0, x21
    fbe0:	bl	fb44 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1070>
    fbe4:	add	x2, x24, x0
    fbe8:	mov	x1, x0
    fbec:	add	x0, x0, #0x1
    fbf0:	lsl	x2, x2, #3
    fbf4:	ldr	x0, [x26, x0, lsl #3]
    fbf8:	ldr	x3, [x20, x2]
    fbfc:	bic	x0, x3, x0
    fc00:	str	x0, [x20, x2]
    fc04:	cmp	x3, x0
    fc08:	csel	w25, w25, w22, eq  // eq = none
    fc0c:	cbnz	x0, fbd4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1100>
    fc10:	mov	x0, x23
    fc14:	bl	efa4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x4d0>
    fc18:	b	fbd4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1100>
    fc1c:	cmp	w25, #0x0
    fc20:	add	x19, x19, #0x41
    fc24:	csel	w27, w27, w25, eq  // eq = none
    fc28:	cmp	x19, #0x41, lsl #12
    fc2c:	b.ne	fbb8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x10e4>  // b.any
    fc30:	mov	w0, w27
    fc34:	ldp	x21, x22, [sp, #16]
    fc38:	ldp	x23, x24, [sp, #32]
    fc3c:	ldp	x25, x26, [sp, #48]
    fc40:	ldp	x27, x30, [sp, #64]
    fc44:	ldp	x19, x20, [sp], #96
    fc48:	ret
    fc4c:	stp	x19, x20, [sp, #-80]!
    fc50:	mov	x20, x0
    fc54:	stp	x21, x22, [sp, #16]
    fc58:	mov	x21, x1
    fc5c:	mov	w22, #0x0                   	// #0
    fc60:	stp	x25, x30, [sp, #48]
    fc64:	add	x25, sp, #0x48
    fc68:	ldr	x0, [x1]
    fc6c:	stp	x23, x24, [sp, #32]
    fc70:	mov	w24, #0x1                   	// #1
    fc74:	str	x0, [sp, #72]
    fc78:	ldr	x0, [sp, #72]
    fc7c:	cbz	x0, fccc <__sanitizer_cov_trace_pc_guard_init@@Base+0x11f8>
    fc80:	mov	x0, x25
    fc84:	bl	fb44 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1070>
    fc88:	mov	x19, x0
    fc8c:	bl	ef6c <__sanitizer_cov_trace_pc_guard_init@@Base+0x498>
    fc90:	ldr	x23, [x20]
    fc94:	add	x2, x19, #0x1
    fc98:	orr	x0, x23, x0
    fc9c:	str	x0, [x20]
    fca0:	lsl	x2, x2, #3
    fca4:	cmp	x23, x0
    fca8:	b.eq	fcb0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x11dc>  // b.none
    fcac:	str	xzr, [x20, x2]
    fcb0:	ldr	x1, [x20, x2]
    fcb4:	ldr	x0, [x21, x2]
    fcb8:	orr	x0, x1, x0
    fcbc:	str	x0, [x20, x2]
    fcc0:	cmp	x1, x0
    fcc4:	csel	w22, w22, w24, eq  // eq = none
    fcc8:	b	fc78 <__sanitizer_cov_trace_pc_guard_init@@Base+0x11a4>
    fccc:	mov	w0, w22
    fcd0:	ldp	x21, x22, [sp, #16]
    fcd4:	ldp	x23, x24, [sp, #32]
    fcd8:	ldp	x25, x30, [sp, #48]
    fcdc:	ldp	x19, x20, [sp], #80
    fce0:	ret
    fce4:	stp	x19, x20, [sp, #-48]!
    fce8:	ldr	x1, [x0]
    fcec:	stp	x21, x22, [sp, #16]
    fcf0:	str	x30, [sp, #32]
    fcf4:	cbnz	x1, fd18 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1244>
    fcf8:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    fcfc:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
    fd00:	add	x2, x2, #0xbbc
    fd04:	add	x0, x0, #0x8e3
    fd08:	mov	x4, #0x0                   	// #0
    fd0c:	mov	x3, #0x0                   	// #0
    fd10:	mov	w1, #0xbf                  	// #191
    fd14:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
    fd18:	mov	x19, x0
    fd1c:	bl	fb44 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1070>
    fd20:	mov	x20, x0
    fd24:	add	x0, x0, #0x1
    fd28:	lsl	x22, x0, #3
    fd2c:	add	x0, x19, x0, lsl #3
    fd30:	bl	fb44 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1070>
    fd34:	mov	x21, x0
    fd38:	ldr	x0, [x19, x22]
    fd3c:	cbz	x0, fd54 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1280>
    fd40:	mov	x0, x20
    fd44:	bl	ef6c <__sanitizer_cov_trace_pc_guard_init@@Base+0x498>
    fd48:	ldr	x1, [x19]
    fd4c:	orr	x1, x1, x0
    fd50:	str	x1, [x19]
    fd54:	add	x0, x21, x20, lsl #6
    fd58:	ldp	x21, x22, [sp, #16]
    fd5c:	ldr	x30, [sp, #32]
    fd60:	ldp	x19, x20, [sp], #48
    fd64:	ret
    fd68:	stp	x19, x20, [sp, #-96]!
    fd6c:	mov	x19, x0
    fd70:	mov	x0, x1
    fd74:	stp	x21, x22, [sp, #16]
    fd78:	mov	x21, x1
    fd7c:	mov	x20, x2
    fd80:	ldr	x1, [x19]
    fd84:	stp	x23, x24, [sp, #32]
    fd88:	stp	x25, x26, [sp, #48]
    fd8c:	add	x25, x19, #0x620
    fd90:	add	x24, x25, #0x208, lsl #12
    fd94:	str	x30, [sp, #64]
    fd98:	bl	f770 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc9c>
    fd9c:	mov	x1, x20
    fda0:	mov	x0, x19
    fda4:	bl	eec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3f0>
    fda8:	and	x20, x20, #0xfff
    fdac:	ldr	x1, [x19]
    fdb0:	mov	x0, x21
    fdb4:	mov	x21, #0x208                 	// #520
    fdb8:	add	x22, x25, #0x208, lsl #12
    fdbc:	add	x22, x22, #0x208
    fdc0:	bl	f7a8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xcd4>
    fdc4:	madd	x26, x20, x21, x25
    fdc8:	mov	x23, x0
    fdcc:	mov	x0, x24
    fdd0:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
    fdd4:	mov	x1, x26
    fdd8:	mov	x26, x21
    fddc:	mov	x0, x24
    fde0:	bl	fc4c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1178>
    fde4:	mov	x0, x22
    fde8:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
    fdec:	mov	x1, x20
    fdf0:	mov	x0, x22
    fdf4:	bl	f958 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe84>
    fdf8:	mov	x0, x24
    fdfc:	bl	f650 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb7c>
    fe00:	ands	w21, w0, #0xff
    fe04:	b.ne	fe38 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1364>  // b.any
    fe08:	mov	x0, x24
    fe0c:	bl	fce4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1210>
    fe10:	mov	x1, x0
    fe14:	mov	x20, x0
    fe18:	mov	x0, x22
    fe1c:	bl	f958 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe84>
    fe20:	tst	w0, #0xff
    fe24:	b.eq	fdf8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1324>  // b.none
    fe28:	madd	x1, x20, x26, x25
    fe2c:	mov	x0, x24
    fe30:	bl	fc4c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1178>
    fe34:	b	fdf8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1324>
    fe38:	add	x19, x19, #0x208, lsl #12
    fe3c:	add	x24, sp, #0x58
    fe40:	ldr	x0, [x23]
    fe44:	ldr	x1, [x19, #2088]
    fe48:	and	x0, x0, x1
    fe4c:	str	x0, [sp, #88]
    fe50:	ldr	x0, [sp, #88]
    fe54:	cbz	x0, fea8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x13d4>
    fe58:	mov	x0, x24
    fe5c:	bl	fb44 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1070>
    fe60:	mov	x20, x0
    fe64:	bl	ef6c <__sanitizer_cov_trace_pc_guard_init@@Base+0x498>
    fe68:	ldr	x1, [x19, #2088]
    fe6c:	tst	x0, x1
    fe70:	b.eq	fe50 <__sanitizer_cov_trace_pc_guard_init@@Base+0x137c>  // b.none
    fe74:	add	x1, x20, #0x1
    fe78:	lsl	x1, x1, #3
    fe7c:	ldr	x2, [x23, x1]
    fe80:	ldr	x0, [x22, x1]
    fe84:	tst	x2, x0
    fe88:	b.eq	fe50 <__sanitizer_cov_trace_pc_guard_init@@Base+0x137c>  // b.none
    fe8c:	mov	w0, w21
    fe90:	ldp	x21, x22, [sp, #16]
    fe94:	ldp	x23, x24, [sp, #32]
    fe98:	ldp	x25, x26, [sp, #48]
    fe9c:	ldr	x30, [sp, #64]
    fea0:	ldp	x19, x20, [sp], #96
    fea4:	ret
    fea8:	mov	w21, #0x0                   	// #0
    feac:	b	fe8c <__sanitizer_cov_trace_pc_guard_init@@Base+0x13b8>
    feb0:	stp	x19, x20, [sp, #-432]!
    feb4:	mov	x19, x0
    feb8:	mov	x0, x1
    febc:	stp	x21, x22, [sp, #16]
    fec0:	mov	x21, x1
    fec4:	mov	x20, x2
    fec8:	ldr	x1, [x19]
    fecc:	stp	x23, x24, [sp, #32]
    fed0:	mov	w23, w4
    fed4:	stp	x25, x26, [sp, #48]
    fed8:	add	x26, x19, #0x620
    fedc:	add	x22, x26, #0x208, lsl #12
    fee0:	stp	x27, x28, [sp, #64]
    fee4:	add	x27, sp, #0x70
    fee8:	mov	x28, #0x208                 	// #520
    feec:	str	x30, [sp, #80]
    fef0:	str	w3, [sp, #108]
    fef4:	bl	f770 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc9c>
    fef8:	mov	x1, x20
    fefc:	mov	x0, x19
    ff00:	bl	eec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3f0>
    ff04:	and	x20, x20, #0xfff
    ff08:	ldr	x1, [x19]
    ff0c:	mov	x0, x21
    ff10:	bl	f7a8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xcd4>
    ff14:	mov	x24, x0
    ff18:	mov	x0, x22
    ff1c:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
    ff20:	mov	x1, x24
    ff24:	mov	x24, #0x0                   	// #0
    ff28:	mov	x0, x22
    ff2c:	bl	fc4c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1178>
    ff30:	mov	x0, x22
    ff34:	bl	f650 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb7c>
    ff38:	tst	w0, #0xff
    ff3c:	b.ne	ff74 <__sanitizer_cov_trace_pc_guard_init@@Base+0x14a0>  // b.any
    ff40:	mov	x0, x22
    ff44:	bl	fce4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1210>
    ff48:	mov	x25, x0
    ff4c:	madd	x0, x0, x28, x26
    ff50:	mov	x1, x20
    ff54:	bl	f958 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe84>
    ff58:	tst	w0, #0xff
    ff5c:	b.eq	ff30 <__sanitizer_cov_trace_pc_guard_init@@Base+0x145c>  // b.none
    ff60:	cmp	x24, #0x27
    ff64:	b.hi	ff30 <__sanitizer_cov_trace_pc_guard_init@@Base+0x145c>  // b.pmore
    ff68:	str	x25, [x27, x24, lsl #3]
    ff6c:	add	x24, x24, #0x1
    ff70:	b	ff30 <__sanitizer_cov_trace_pc_guard_init@@Base+0x145c>
    ff74:	mov	x8, #0x10a3                	// #4259
    ff78:	add	x2, x19, #0x410, lsl #12
    ff7c:	add	x6, sp, #0x70
    ff80:	and	w20, w20, #0xffff
    ff84:	add	x7, x21, #0x418
    ff88:	mov	x0, #0x0                   	// #0
    ff8c:	mov	x4, #0x1ffff               	// #131071
    ff90:	movk	x8, #0x2, lsl #16
    ff94:	cmp	x0, x24
    ff98:	b.eq	1001c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1548>  // b.none
    ff9c:	ldr	x5, [x2, #2608]
    ffa0:	cmp	x5, x4
    ffa4:	b.hi	10004 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1530>  // b.pmore
    ffa8:	ldr	x3, [x6, x0, lsl #3]
    ffac:	mov	x1, #0x0                   	// #0
    ffb0:	ldr	x10, [x21, #1560]
    ffb4:	and	w9, w3, #0xffff
    ffb8:	cmp	x10, x1
    ffbc:	b.eq	10014 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1540>  // b.none
    ffc0:	lsl	x11, x1, #3
    ffc4:	ldr	w11, [x7, x11]
    ffc8:	cmp	w11, w3
    ffcc:	b.ne	1000c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1538>  // b.any
    ffd0:	add	x1, x21, x1, lsl #3
    ffd4:	ldr	w1, [x1, #1052]
    ffd8:	add	x3, x5, #0x1
    ffdc:	add	x5, x5, x8
    ffe0:	str	x3, [x2, #2608]
    ffe4:	lsl	x3, x5, #4
    ffe8:	add	x5, x19, x5, lsl #4
    ffec:	strh	w9, [x19, x3]
    fff0:	str	w1, [x5, #4]
    fff4:	ldr	w1, [sp, #108]
    fff8:	strh	w20, [x5, #2]
    fffc:	str	w1, [x5, #8]
   10000:	str	w23, [x5, #12]
   10004:	add	x0, x0, #0x1
   10008:	b	ff94 <__sanitizer_cov_trace_pc_guard_init@@Base+0x14c0>
   1000c:	add	x1, x1, #0x1
   10010:	b	ffb8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x14e4>
   10014:	mov	w1, #0x0                   	// #0
   10018:	b	ffd8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1504>
   1001c:	ldp	x21, x22, [sp, #16]
   10020:	ldp	x23, x24, [sp, #32]
   10024:	ldp	x25, x26, [sp, #48]
   10028:	ldp	x27, x28, [sp, #64]
   1002c:	ldr	x30, [sp, #80]
   10030:	ldp	x19, x20, [sp], #432
   10034:	ret
   10038:	stp	x19, x20, [sp, #-80]!
   1003c:	mov	x19, x0
   10040:	stp	x21, x22, [sp, #16]
   10044:	add	x22, x0, #0x8
   10048:	mov	x21, x1
   1004c:	mov	x0, x22
   10050:	stp	x23, x24, [sp, #32]
   10054:	stp	x25, x26, [sp, #48]
   10058:	str	x30, [sp, #64]
   1005c:	bl	f650 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb7c>
   10060:	tst	w0, #0xff
   10064:	b.ne	100a4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x15d0>  // b.any
   10068:	mov	x0, x22
   1006c:	bl	fce4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1210>
   10070:	add	x1, x0, #0x41, lsl #12
   10074:	mov	x20, x0
   10078:	add	x1, x1, #0x146
   1007c:	str	x21, [x19, x1, lsl #3]
   10080:	bl	ef18 <__sanitizer_cov_trace_pc_guard_init@@Base+0x444>
   10084:	ldr	x0, [x19]
   10088:	ldp	x21, x22, [sp, #16]
   1008c:	add	x0, x20, x0
   10090:	ldp	x23, x24, [sp, #32]
   10094:	ldp	x25, x26, [sp, #48]
   10098:	ldr	x30, [sp, #64]
   1009c:	ldp	x19, x20, [sp], #80
   100a0:	ret
   100a4:	add	x23, x19, #0x210
   100a8:	mov	x0, x23
   100ac:	bl	f650 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb7c>
   100b0:	tst	w0, #0xff
   100b4:	b.ne	101a0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x16cc>  // b.any
   100b8:	add	x26, x19, #0x410, lsl #12
   100bc:	mov	x24, #0x10a2                	// #4258
   100c0:	movk	x24, #0x2, lsl #16
   100c4:	ldr	x20, [x26, #2608]
   100c8:	sub	x25, x20, #0x1
   100cc:	add	x20, x20, x24
   100d0:	add	x20, x19, x20, lsl #4
   100d4:	tbnz	x25, #63, 1014c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1678>
   100d8:	ldrh	w1, [x20]
   100dc:	mov	x0, x23
   100e0:	bl	f660 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb8c>
   100e4:	tst	w0, #0xff
   100e8:	b.ne	10100 <__sanitizer_cov_trace_pc_guard_init@@Base+0x162c>  // b.any
   100ec:	ldrh	w1, [x20, #2]
   100f0:	mov	x0, x23
   100f4:	bl	f660 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb8c>
   100f8:	tst	w0, #0xff
   100fc:	b.eq	10140 <__sanitizer_cov_trace_pc_guard_init@@Base+0x166c>  // b.none
   10100:	ldr	x0, [x26, #2608]
   10104:	ldrh	w9, [x20]
   10108:	sub	x1, x0, #0x1
   1010c:	add	x0, x0, x24
   10110:	ldrh	w7, [x20, #2]
   10114:	lsl	x8, x0, #4
   10118:	add	x0, x19, x0, lsl #4
   1011c:	ldp	w6, w5, [x20, #4]
   10120:	ldp	x2, x3, [x0]
   10124:	ldr	w4, [x20, #12]
   10128:	stp	x2, x3, [x20]
   1012c:	strh	w9, [x19, x8]
   10130:	strh	w7, [x0, #2]
   10134:	stp	w6, w5, [x0, #4]
   10138:	str	w4, [x0, #12]
   1013c:	str	x1, [x26, #2608]
   10140:	sub	x25, x25, #0x1
   10144:	sub	x20, x20, #0x10
   10148:	b	100d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1600>
   1014c:	mov	x0, x22
   10150:	bl	f650 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb7c>
   10154:	tst	w0, #0xff
   10158:	b.ne	1017c <__sanitizer_cov_trace_pc_guard_init@@Base+0x16a8>  // b.any
   1015c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10160:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10164:	add	x2, x2, #0xbc9
   10168:	add	x0, x0, #0x93a
   1016c:	mov	x4, #0x0                   	// #0
   10170:	mov	x3, #0x0                   	// #0
   10174:	mov	w1, #0xa7                  	// #167
   10178:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1017c:	mov	x1, x23
   10180:	add	x0, x19, #0x620
   10184:	bl	fb8c <__sanitizer_cov_trace_pc_guard_init@@Base+0x10b8>
   10188:	mov	x1, x23
   1018c:	mov	x0, x22
   10190:	bl	fc4c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1178>
   10194:	mov	x0, x23
   10198:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
   1019c:	b	10068 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1594>
   101a0:	ldr	x0, [x19]
   101a4:	add	x0, x0, #0x1, lsl #12
   101a8:	str	x0, [x19]
   101ac:	mov	x0, x23
   101b0:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
   101b4:	mov	x1, #0xffffffffffffffff    	// #-1
   101b8:	mov	x0, #0x0                   	// #0
   101bc:	str	x1, [x19, #8]
   101c0:	add	x0, x0, #0x1
   101c4:	cmp	x0, #0x40
   101c8:	str	x1, [x22, x0, lsl #3]
   101cc:	b.ne	101c0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x16ec>  // b.any
   101d0:	add	x23, x19, #0x208, lsl #12
   101d4:	add	x20, x19, #0x620
   101d8:	add	x23, x23, #0x620
   101dc:	mov	x0, x20
   101e0:	add	x20, x20, #0x208
   101e4:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
   101e8:	cmp	x20, x23
   101ec:	b.ne	101dc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1708>  // b.any
   101f0:	add	x0, x19, #0x410, lsl #12
   101f4:	str	xzr, [x0, #2608]
   101f8:	b	10068 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1594>
   101fc:	stp	x19, x20, [sp, #-112]!
   10200:	mov	x19, x4
   10204:	stp	x21, x22, [sp, #16]
   10208:	stp	x23, x24, [sp, #32]
   1020c:	str	x30, [sp, #48]
   10210:	cbz	x4, 102d0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17fc>
   10214:	str	x1, [x3]
   10218:	mov	x22, x0
   1021c:	mov	x21, x1
   10220:	mov	x23, x2
   10224:	mov	x20, x3
   10228:	mov	x0, x2
   1022c:	bl	f660 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb8c>
   10230:	tst	w0, #0xff
   10234:	b.ne	102e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1814>  // b.any
   10238:	mov	x1, #0x208                 	// #520
   1023c:	add	x24, sp, #0x60
   10240:	sub	x19, x19, #0x1
   10244:	add	x20, x20, #0x8
   10248:	madd	x21, x21, x1, x22
   1024c:	stp	xzr, xzr, [sp, #88]
   10250:	stp	x21, xzr, [sp, #72]
   10254:	add	x21, sp, #0x68
   10258:	str	xzr, [sp, #104]
   1025c:	ldr	x0, [sp, #96]
   10260:	cbnz	x0, 10280 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17ac>
   10264:	ldr	x0, [sp, #80]
   10268:	cbnz	x0, 10278 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17a4>
   1026c:	ldr	x0, [sp, #72]
   10270:	ldr	x0, [x0]
   10274:	cbnz	x0, 102f0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x181c>
   10278:	mov	x19, #0x0                   	// #0
   1027c:	b	102d0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17fc>
   10280:	ldr	x0, [sp, #104]
   10284:	cbz	x0, 102fc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1828>
   10288:	mov	x0, x21
   1028c:	bl	fb44 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1070>
   10290:	ldp	x2, x1, [sp, #80]
   10294:	ldr	x3, [sp, #104]
   10298:	add	x1, x1, x2, lsl #6
   1029c:	add	x1, x0, x1, lsl #6
   102a0:	ldr	x0, [sp, #96]
   102a4:	orr	x0, x0, x3
   102a8:	cbnz	x0, 102b4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e0>
   102ac:	add	x2, x2, #0x1
   102b0:	str	x2, [sp, #80]
   102b4:	mov	x4, x19
   102b8:	mov	x3, x20
   102bc:	mov	x2, x23
   102c0:	mov	x0, x22
   102c4:	bl	101fc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1728>
   102c8:	cbz	x0, 1025c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1788>
   102cc:	add	x19, x0, #0x1
   102d0:	mov	x0, x19
   102d4:	ldp	x21, x22, [sp, #16]
   102d8:	ldp	x23, x24, [sp, #32]
   102dc:	ldr	x30, [sp, #48]
   102e0:	ldp	x19, x20, [sp], #112
   102e4:	ret
   102e8:	mov	x19, #0x1                   	// #1
   102ec:	b	102d0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17fc>
   102f0:	ldr	x1, [sp, #104]
   102f4:	cbnz	x1, 10288 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17b4>
   102f8:	str	x0, [sp, #96]
   102fc:	mov	x0, x24
   10300:	bl	fb44 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1070>
   10304:	ldr	x1, [sp, #80]
   10308:	str	x0, [sp, #88]
   1030c:	add	x1, x0, x1, lsl #6
   10310:	ldr	x0, [sp, #72]
   10314:	add	x1, x1, #0x1
   10318:	ldr	x0, [x0, x1, lsl #3]
   1031c:	str	x0, [sp, #104]
   10320:	cbnz	x0, 10288 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17b4>
   10324:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10328:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   1032c:	add	x2, x2, #0xbed
   10330:	add	x0, x0, #0x8e3
   10334:	mov	x4, #0x0                   	// #0
   10338:	mov	x3, #0x0                   	// #0
   1033c:	mov	w1, #0x132                 	// #306
   10340:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   10344:	stp	x19, x20, [sp, #-80]!
   10348:	mov	x19, x0
   1034c:	mov	x0, x1
   10350:	stp	x21, x22, [sp, #16]
   10354:	mov	x21, x2
   10358:	mov	x22, x3
   1035c:	ldr	x1, [x19]
   10360:	stp	x23, x24, [sp, #32]
   10364:	add	x24, x19, #0x418
   10368:	stp	x25, x26, [sp, #48]
   1036c:	and	x26, x2, #0xfff
   10370:	mov	x25, x4
   10374:	stp	x27, x30, [sp, #64]
   10378:	bl	f7a8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xcd4>
   1037c:	mov	x20, x0
   10380:	mov	x0, x24
   10384:	bl	f648 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb74>
   10388:	mov	x1, x20
   1038c:	mov	x0, x24
   10390:	bl	fc4c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1178>
   10394:	mov	x1, x21
   10398:	mov	x0, x19
   1039c:	bl	eec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3f0>
   103a0:	mov	x1, x26
   103a4:	mov	x0, x24
   103a8:	bl	f660 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb8c>
   103ac:	tst	w0, #0xff
   103b0:	b.eq	103d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1900>  // b.none
   103b4:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   103b8:	add	x2, x2, #0xc07
   103bc:	mov	x4, #0x0                   	// #0
   103c0:	mov	x3, #0x0                   	// #0
   103c4:	mov	w1, #0x13e                 	// #318
   103c8:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   103cc:	add	x0, x0, #0x93a
   103d0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   103d4:	add	x27, x19, #0x620
   103d8:	mov	x23, #0x1                   	// #1
   103dc:	cmp	x25, x23
   103e0:	b.cc	10460 <__sanitizer_cov_trace_pc_guard_init@@Base+0x198c>  // b.lo, b.ul, b.last
   103e4:	mov	x4, x23
   103e8:	mov	x3, x22
   103ec:	mov	x2, x24
   103f0:	mov	x1, x26
   103f4:	mov	x0, x27
   103f8:	bl	101fc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1728>
   103fc:	mov	x20, x0
   10400:	cmp	x23, x0
   10404:	b.eq	10410 <__sanitizer_cov_trace_pc_guard_init@@Base+0x193c>  // b.none
   10408:	add	x23, x23, #0x1
   1040c:	b	103dc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1908>
   10410:	mov	x23, #0x0                   	// #0
   10414:	cmp	x23, x20
   10418:	b.eq	1043c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1968>  // b.none
   1041c:	ldr	x24, [x22, x23, lsl #3]
   10420:	mov	x0, x24
   10424:	bl	ef18 <__sanitizer_cov_trace_pc_guard_init@@Base+0x444>
   10428:	ldr	x1, [x19]
   1042c:	add	x1, x1, x24
   10430:	str	x1, [x22, x23, lsl #3]
   10434:	add	x23, x23, #0x1
   10438:	b	10414 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1940>
   1043c:	cbz	x23, 10464 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1990>
   10440:	ldr	x3, [x22]
   10444:	cmp	x21, x3
   10448:	b.eq	10464 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1990>  // b.none
   1044c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10450:	mov	x4, x21
   10454:	add	x2, x2, #0xc27
   10458:	mov	w1, #0x143                 	// #323
   1045c:	b	103c8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x18f4>
   10460:	mov	x20, #0x0                   	// #0
   10464:	mov	x0, x20
   10468:	ldp	x21, x22, [sp, #16]
   1046c:	ldp	x23, x24, [sp, #32]
   10470:	ldp	x25, x26, [sp, #48]
   10474:	ldp	x27, x30, [sp, #64]
   10478:	ldp	x19, x20, [sp], #80
   1047c:	ret
   10480:	mov	x2, x1
   10484:	mov	x4, #0x0                   	// #0
   10488:	mov	x1, x0
   1048c:	mov	x3, #0x0                   	// #0
   10490:	mov	w0, #0x2                   	// #2
   10494:	b	14dac <__sanitizer_set_report_fd@@Base+0x450c>
   10498:	stp	x19, x30, [sp, #-16]!
   1049c:	mov	x19, x0
   104a0:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   104a4:	mov	x2, x0
   104a8:	mov	x1, x19
   104ac:	adrp	x0, 4e000 <_Unwind_Backtrace@GCC_3.3>
   104b0:	ldp	x19, x30, [sp], #16
   104b4:	add	x0, x0, #0x4f0
   104b8:	b	15154 <__sanitizer_set_report_fd@@Base+0x48b4>
   104bc:	stp	x19, x20, [sp, #-32]!
   104c0:	mov	x19, x0
   104c4:	ldr	x0, [x0]
   104c8:	stp	x21, x30, [sp, #16]
   104cc:	ldrb	w3, [x0]
   104d0:	and	x3, x3, #0xff
   104d4:	cmp	x3, #0x1
   104d8:	b.eq	104f8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a24>  // b.none
   104dc:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   104e0:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   104e4:	add	x2, x2, #0xc48
   104e8:	add	x0, x0, #0xc80
   104ec:	mov	x4, #0x1                   	// #1
   104f0:	mov	w1, #0x2a                  	// #42
   104f4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   104f8:	ldr	w0, [x19, #8]
   104fc:	sub	w0, w0, #0x1
   10500:	cmp	w0, #0x1
   10504:	b.ls	10614 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b40>  // b.plast
   10508:	bl	132c0 <__sanitizer_set_report_fd@@Base+0x2a20>
   1050c:	mov	x20, x0
   10510:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   10514:	ldr	x0, [x0, #3848]
   10518:	ldr	x0, [x0]
   1051c:	cmp	x0, x20
   10520:	b.ne	10530 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a5c>  // b.any
   10524:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   10528:	ldr	x0, [x0, #3840]
   1052c:	ldr	x20, [x0]
   10530:	ldr	w0, [x19, #8]
   10534:	cmn	w0, #0x1
   10538:	b.eq	1054c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a78>  // b.none
   1053c:	ldr	x1, [x19, #8208]
   10540:	cmp	x1, x20
   10544:	b.eq	10614 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b40>  // b.none
   10548:	bl	14d60 <__sanitizer_set_report_fd@@Base+0x44c0>
   1054c:	bl	e168 <__sancov_default_options@@Base+0x21c8>
   10550:	mov	x4, x0
   10554:	mov	x0, #0x100c                	// #4108
   10558:	add	x21, x19, x0
   1055c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   10560:	add	x3, x19, #0xc
   10564:	ldr	x0, [x0, #4056]
   10568:	ldrb	w0, [x0, #48]
   1056c:	cbz	w0, 105f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b20>
   10570:	cbz	x4, 105f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b20>
   10574:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10578:	mov	x5, x20
   1057c:	add	x2, x2, #0xcbc
   10580:	mov	x0, x21
   10584:	mov	x1, #0x1000                	// #4096
   10588:	bl	16710 <OnPrint@@Base+0x4>
   1058c:	mov	x0, x21
   10590:	mov	x2, #0x0                   	// #0
   10594:	mov	w1, #0x1                   	// #1
   10598:	bl	14d10 <__sanitizer_set_report_fd@@Base+0x4470>
   1059c:	str	w0, [x19, #8]
   105a0:	cmn	w0, #0x1
   105a4:	b.ne	10610 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b3c>  // b.any
   105a8:	adrp	x19, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   105ac:	add	x19, x19, #0xcc6
   105b0:	mov	x0, x19
   105b4:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   105b8:	mov	x1, x19
   105bc:	mov	x2, x0
   105c0:	mov	x4, #0x0                   	// #0
   105c4:	mov	x3, #0x0                   	// #0
   105c8:	mov	w0, #0x2                   	// #2
   105cc:	bl	14dac <__sanitizer_set_report_fd@@Base+0x450c>
   105d0:	mov	x0, x21
   105d4:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   105d8:	mov	x1, x21
   105dc:	mov	x2, x0
   105e0:	mov	x4, #0x0                   	// #0
   105e4:	mov	x3, #0x0                   	// #0
   105e8:	mov	w0, #0x2                   	// #2
   105ec:	bl	14dac <__sanitizer_set_report_fd@@Base+0x450c>
   105f0:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   105f4:	mov	x4, x20
   105f8:	mov	x0, x21
   105fc:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10600:	mov	x1, #0x1000                	// #4096
   10604:	add	x2, x2, #0xcbf
   10608:	bl	16710 <OnPrint@@Base+0x4>
   1060c:	b	1058c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1ab8>
   10610:	str	x20, [x19, #8208]
   10614:	ldp	x21, x30, [sp, #16]
   10618:	ldp	x19, x20, [sp], #32
   1061c:	ret
   10620:	cbz	x1, 10730 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c5c>
   10624:	sub	sp, sp, #0x30
   10628:	stp	x19, x20, [sp, #16]
   1062c:	mov	x20, x0
   10630:	mov	x19, x1
   10634:	mov	x0, x1
   10638:	stp	x21, x30, [sp, #32]
   1063c:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   10640:	cmp	x0, #0xf9c
   10644:	b.ls	1067c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1ba8>  // b.plast
   10648:	ldrb	w0, [x19, #7]
   1064c:	str	w0, [sp]
   10650:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10654:	add	x0, x0, #0xcdf
   10658:	ldrb	w7, [x19, #6]
   1065c:	ldrb	w6, [x19, #5]
   10660:	ldrb	w5, [x19, #4]
   10664:	ldrb	w4, [x19, #3]
   10668:	ldrb	w3, [x19, #2]
   1066c:	ldrb	w2, [x19, #1]
   10670:	ldrb	w1, [x19]
   10674:	bl	16a18 <OnPrint@@Base+0x30c>
   10678:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1067c:	ldr	x21, [x20]
   10680:	mov	w1, #0x1                   	// #1
   10684:	ldxrb	w0, [x21]
   10688:	stxrb	w2, w1, [x21]
   1068c:	cbnz	w2, 10684 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1bb0>
   10690:	dmb	ish
   10694:	tst	w0, #0xff
   10698:	b.eq	106a4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1bd0>  // b.none
   1069c:	mov	x0, x21
   106a0:	bl	b734 <__ubsan_handle_cfi_bad_type@@Base+0x534>
   106a4:	ldr	w0, [x20, #8]
   106a8:	sub	w1, w0, #0x1
   106ac:	cmp	w1, #0x1
   106b0:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   106b4:	b.eq	106bc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1be8>  // b.none
   106b8:	bl	14d60 <__sanitizer_set_report_fd@@Base+0x44c0>
   106bc:	mov	w0, #0xffffffff            	// #-1
   106c0:	str	w0, [x20, #8]
   106c4:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   106c8:	mov	x0, x19
   106cc:	add	x1, x1, #0xd0d
   106d0:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   106d4:	cbnz	w0, 106f8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c24>
   106d8:	mov	w0, #0x1                   	// #1
   106dc:	str	w0, [x20, #8]
   106e0:	dmb	ish
   106e4:	strb	wzr, [x21]
   106e8:	ldp	x19, x20, [sp, #16]
   106ec:	ldp	x21, x30, [sp, #32]
   106f0:	add	sp, sp, #0x30
   106f4:	ret
   106f8:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   106fc:	mov	x0, x19
   10700:	add	x1, x1, #0xd14
   10704:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   10708:	cbnz	w0, 10714 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c40>
   1070c:	mov	w0, #0x2                   	// #2
   10710:	b	106dc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c08>
   10714:	mov	x3, x19
   10718:	add	x0, x20, #0xc
   1071c:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   10720:	mov	x1, #0x1000                	// #4096
   10724:	add	x2, x2, #0x85d
   10728:	bl	16710 <OnPrint@@Base+0x4>
   1072c:	b	106e0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c0c>
   10730:	ret
   10734:	stp	x19, x20, [sp, #-128]!
   10738:	stp	x21, x22, [sp, #16]
   1073c:	stp	x23, x24, [sp, #32]
   10740:	stp	x25, x26, [sp, #48]
   10744:	stp	x27, x28, [sp, #64]
   10748:	str	x30, [sp, #80]
   1074c:	str	xzr, [x1]
   10750:	str	xzr, [x2]
   10754:	str	xzr, [x3]
   10758:	str	x0, [sp, #104]
   1075c:	cbz	x4, 10888 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1db4>
   10760:	mov	x21, x4
   10764:	mov	x22, x1
   10768:	mov	x23, x2
   1076c:	mov	x24, x3
   10770:	mov	x25, x5
   10774:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   10778:	cmp	x21, x0
   1077c:	adrp	x27, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10780:	csel	x19, x21, x0, ls  // ls = plast
   10784:	add	x27, x27, #0xd1b
   10788:	add	x28, sp, #0x78
   1078c:	ldr	x0, [x22]
   10790:	ldr	x1, [x23]
   10794:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   10798:	mov	x1, x27
   1079c:	mov	w2, #0x0                   	// #0
   107a0:	mov	x0, x19
   107a4:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   107a8:	str	x0, [x22]
   107ac:	mov	x2, x25
   107b0:	ldr	x0, [sp, #104]
   107b4:	str	x19, [x23]
   107b8:	mov	w1, #0x0                   	// #0
   107bc:	bl	14d10 <__sanitizer_set_report_fd@@Base+0x4470>
   107c0:	mov	w26, w0
   107c4:	cmn	w0, #0x1
   107c8:	b.ne	107fc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d28>  // b.any
   107cc:	ldr	x0, [x22]
   107d0:	mov	w20, #0x0                   	// #0
   107d4:	ldr	x1, [x23]
   107d8:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   107dc:	mov	w0, w20
   107e0:	ldp	x21, x22, [sp, #16]
   107e4:	ldp	x23, x24, [sp, #32]
   107e8:	ldp	x25, x26, [sp, #48]
   107ec:	ldp	x27, x28, [sp, #64]
   107f0:	ldr	x30, [sp, #80]
   107f4:	ldp	x19, x20, [sp], #128
   107f8:	ret
   107fc:	str	xzr, [x24]
   10800:	ldr	x0, [x24]
   10804:	cmp	x0, x19
   10808:	b.cs	10880 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1dac>  // b.hs, b.nlast
   1080c:	ldr	x1, [x22]
   10810:	sub	x2, x19, x0
   10814:	mov	x4, x25
   10818:	mov	x3, x28
   1081c:	add	x1, x1, x0
   10820:	mov	w0, w26
   10824:	bl	14d64 <__sanitizer_set_report_fd@@Base+0x44c4>
   10828:	ands	w20, w0, #0xff
   1082c:	b.ne	10848 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d74>  // b.any
   10830:	ldr	x0, [x22]
   10834:	ldr	x1, [x23]
   10838:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1083c:	mov	w0, w26
   10840:	bl	14d60 <__sanitizer_set_report_fd@@Base+0x44c0>
   10844:	b	107dc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d08>
   10848:	ldr	x0, [x24]
   1084c:	ldr	x1, [sp, #120]
   10850:	add	x0, x1, x0
   10854:	str	x0, [x24]
   10858:	cbz	x1, 10864 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d90>
   1085c:	cmp	x0, x21
   10860:	b.ne	10800 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d2c>  // b.any
   10864:	mov	w0, w26
   10868:	bl	14d60 <__sanitizer_set_report_fd@@Base+0x44c0>
   1086c:	cbnz	w20, 10888 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1db4>
   10870:	lsl	x19, x19, #1
   10874:	cmp	x19, x21
   10878:	csel	x19, x19, x21, ls  // ls = plast
   1087c:	b	1078c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1cb8>
   10880:	mov	w20, #0x0                   	// #0
   10884:	b	10864 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d90>
   10888:	mov	w20, #0x1                   	// #1
   1088c:	b	107dc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d08>

0000000000010890 <__sanitizer_set_report_path@@Base>:
   10890:	mov	x1, x0
   10894:	adrp	x0, 4e000 <_Unwind_Backtrace@GCC_3.3>
   10898:	add	x0, x0, #0x4f0
   1089c:	b	10620 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b4c>

00000000000108a0 <__sanitizer_set_report_fd@@Base>:
   108a0:	stp	x19, x30, [sp, #-16]!
   108a4:	adrp	x19, 4e000 <_Unwind_Backtrace@GCC_3.3>
   108a8:	add	x19, x19, #0x4f0
   108ac:	str	w0, [x19, #8]
   108b0:	bl	132c0 <__sanitizer_set_report_fd@@Base+0x2a20>
   108b4:	str	x0, [x19, #8208]
   108b8:	ldp	x19, x30, [sp], #16
   108bc:	ret
   108c0:	stp	x19, x20, [sp, #-96]!
   108c4:	stp	x21, x22, [sp, #16]
   108c8:	stp	x23, x24, [sp, #32]
   108cc:	stp	x25, x26, [sp, #48]
   108d0:	str	x30, [sp, #64]
   108d4:	str	xzr, [x1, #16]
   108d8:	cbz	x2, 109fc <__sanitizer_set_report_fd@@Base+0x15c>
   108dc:	mov	x25, x3
   108e0:	mov	x19, x0
   108e4:	mov	x20, x1
   108e8:	mov	x21, x2
   108ec:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   108f0:	mov	x24, x0
   108f4:	mov	x2, x25
   108f8:	mov	x0, x19
   108fc:	mov	w1, #0x0                   	// #0
   10900:	bl	14d10 <__sanitizer_set_report_fd@@Base+0x4470>
   10904:	mov	w23, w0
   10908:	cmn	w0, #0x1
   1090c:	b.eq	10a04 <__sanitizer_set_report_fd@@Base+0x164>  // b.none
   10910:	add	x26, sp, #0x58
   10914:	mov	x19, #0x0                   	// #0
   10918:	cmp	x19, x21
   1091c:	b.cs	109e8 <__sanitizer_set_report_fd@@Base+0x148>  // b.hs, b.nlast
   10920:	ldr	x0, [x20, #16]
   10924:	cmp	x19, x0
   10928:	b.cc	10948 <__sanitizer_set_report_fd@@Base+0xa8>  // b.lo, b.ul, b.last
   1092c:	lsl	x1, x19, #1
   10930:	mov	x0, x20
   10934:	cmp	x1, x24
   10938:	csel	x1, x1, x24, cs  // cs = hs, nlast
   1093c:	cmp	x1, x21
   10940:	csel	x1, x1, x21, ls  // ls = plast
   10944:	bl	10b4c <__sanitizer_set_report_fd@@Base+0x2ac>
   10948:	ldr	x2, [x20, #16]
   1094c:	cmp	x19, x2
   10950:	b.cc	10974 <__sanitizer_set_report_fd@@Base+0xd4>  // b.lo, b.ul, b.last
   10954:	mov	x4, x2
   10958:	mov	x3, x19
   1095c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10960:	add	x2, x2, #0xd2c
   10964:	mov	w1, #0x98                  	// #152
   10968:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   1096c:	add	x0, x0, #0xd4c
   10970:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   10974:	cmp	x21, x2
   10978:	b.cs	10994 <__sanitizer_set_report_fd@@Base+0xf4>  // b.hs, b.nlast
   1097c:	mov	x3, x2
   10980:	mov	x4, x21
   10984:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10988:	mov	w1, #0x99                  	// #153
   1098c:	add	x2, x2, #0xd88
   10990:	b	10968 <__sanitizer_set_report_fd@@Base+0xc8>
   10994:	ldr	x1, [x20]
   10998:	mov	x4, x25
   1099c:	mov	x3, x26
   109a0:	sub	x2, x2, x19
   109a4:	mov	w0, w23
   109a8:	add	x1, x1, x19
   109ac:	bl	14d64 <__sanitizer_set_report_fd@@Base+0x44c4>
   109b0:	ands	w22, w0, #0xff
   109b4:	b.ne	109dc <__sanitizer_set_report_fd@@Base+0x13c>  // b.any
   109b8:	mov	w0, w23
   109bc:	bl	14d60 <__sanitizer_set_report_fd@@Base+0x44c0>
   109c0:	mov	w0, w22
   109c4:	ldp	x21, x22, [sp, #16]
   109c8:	ldp	x23, x24, [sp, #32]
   109cc:	ldp	x25, x26, [sp, #48]
   109d0:	ldr	x30, [sp, #64]
   109d4:	ldp	x19, x20, [sp], #96
   109d8:	ret
   109dc:	ldr	x0, [sp, #88]
   109e0:	add	x19, x19, x0
   109e4:	cbnz	x0, 10918 <__sanitizer_set_report_fd@@Base+0x78>
   109e8:	mov	w0, w23
   109ec:	bl	14d60 <__sanitizer_set_report_fd@@Base+0x44c0>
   109f0:	mov	x1, x19
   109f4:	mov	x0, x20
   109f8:	bl	10b4c <__sanitizer_set_report_fd@@Base+0x2ac>
   109fc:	mov	w22, #0x1                   	// #1
   10a00:	b	109c0 <__sanitizer_set_report_fd@@Base+0x120>
   10a04:	mov	w22, #0x0                   	// #0
   10a08:	b	109c0 <__sanitizer_set_report_fd@@Base+0x120>
   10a0c:	stp	x19, x20, [sp, #-112]!
   10a10:	stp	x21, x22, [sp, #16]
   10a14:	mov	x21, x0
   10a18:	stp	x23, x24, [sp, #32]
   10a1c:	stp	x25, x26, [sp, #48]
   10a20:	str	x30, [sp, #64]
   10a24:	bl	12ee8 <__sanitizer_set_report_fd@@Base+0x2648>
   10a28:	tst	w0, #0xff
   10a2c:	b.eq	10a58 <__sanitizer_set_report_fd@@Base+0x1b8>  // b.none
   10a30:	mov	x0, x21
   10a34:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   10a38:	mov	x19, x0
   10a3c:	mov	x0, x19
   10a40:	ldp	x21, x22, [sp, #16]
   10a44:	ldp	x23, x24, [sp, #32]
   10a48:	ldp	x25, x26, [sp, #48]
   10a4c:	ldr	x30, [sp, #64]
   10a50:	ldp	x19, x20, [sp], #112
   10a54:	ret
   10a58:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   10a5c:	add	x0, x0, #0xbec
   10a60:	bl	12fa0 <__sanitizer_set_report_fd@@Base+0x2700>
   10a64:	mov	x19, x0
   10a68:	cbz	x0, 10a3c <__sanitizer_set_report_fd@@Base+0x19c>
   10a6c:	add	x22, sp, #0x58
   10a70:	mov	x0, x21
   10a74:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   10a78:	mov	x23, x0
   10a7c:	mov	x1, #0x1000                	// #4096
   10a80:	mov	x0, x22
   10a84:	stp	xzr, xzr, [sp, #88]
   10a88:	mov	w26, #0x2f                  	// #47
   10a8c:	str	xzr, [sp, #104]
   10a90:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
   10a94:	mov	x0, x22
   10a98:	mov	x1, #0x1000                	// #4096
   10a9c:	bl	10b4c <__sanitizer_set_report_fd@@Base+0x2ac>
   10aa0:	mov	x0, x19
   10aa4:	mov	w1, #0x3a                  	// #58
   10aa8:	bl	12350 <__sanitizer_set_report_fd@@Base+0x1ab0>
   10aac:	sub	x24, x0, x19
   10ab0:	add	x25, x23, x24
   10ab4:	mov	x20, x0
   10ab8:	add	x0, x25, #0x2
   10abc:	cmp	x0, #0x1, lsl #12
   10ac0:	b.hi	10b34 <__sanitizer_set_report_fd@@Base+0x294>  // b.pmore
   10ac4:	ldr	x0, [sp, #88]
   10ac8:	mov	x2, x24
   10acc:	mov	x1, x19
   10ad0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   10ad4:	mov	x1, x24
   10ad8:	mov	x0, x22
   10adc:	bl	7e64 <__asan_backtrace_open@plt+0x1354>
   10ae0:	strb	w26, [x0]
   10ae4:	add	x1, x24, #0x1
   10ae8:	mov	x0, x22
   10aec:	bl	7e64 <__asan_backtrace_open@plt+0x1354>
   10af0:	mov	x2, x23
   10af4:	mov	x1, x21
   10af8:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   10afc:	add	x1, x25, #0x1
   10b00:	mov	x0, x22
   10b04:	bl	7e64 <__asan_backtrace_open@plt+0x1354>
   10b08:	strb	wzr, [x0]
   10b0c:	ldr	x0, [sp, #88]
   10b10:	bl	12ee8 <__sanitizer_set_report_fd@@Base+0x2648>
   10b14:	tst	w0, #0xff
   10b18:	b.eq	10b34 <__sanitizer_set_report_fd@@Base+0x294>  // b.none
   10b1c:	ldr	x0, [sp, #88]
   10b20:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   10b24:	mov	x19, x0
   10b28:	ldp	x0, x1, [sp, #88]
   10b2c:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   10b30:	b	10a3c <__sanitizer_set_report_fd@@Base+0x19c>
   10b34:	ldrb	w0, [x20]
   10b38:	cbz	w0, 10b44 <__sanitizer_set_report_fd@@Base+0x2a4>
   10b3c:	add	x19, x20, #0x1
   10b40:	b	10aa0 <__sanitizer_set_report_fd@@Base+0x200>
   10b44:	mov	x19, #0x0                   	// #0
   10b48:	b	10b28 <__sanitizer_set_report_fd@@Base+0x288>
   10b4c:	stp	x19, x20, [sp, #-32]!
   10b50:	mov	x19, x0
   10b54:	mov	x20, x1
   10b58:	ldr	x2, [x0, #16]
   10b5c:	str	x30, [sp, #16]
   10b60:	cmp	x2, x1
   10b64:	b.cs	10b90 <__sanitizer_set_report_fd@@Base+0x2f0>  // b.hs, b.nlast
   10b68:	ldr	x2, [x0, #8]
   10b6c:	cmp	x1, x2
   10b70:	b.ls	10b78 <__sanitizer_set_report_fd@@Base+0x2d8>  // b.plast
   10b74:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
   10b78:	ldr	x3, [x19]
   10b7c:	mov	w1, #0x0                   	// #0
   10b80:	ldr	x0, [x19, #16]
   10b84:	sub	x2, x20, x0
   10b88:	add	x0, x3, x0
   10b8c:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   10b90:	ldr	x30, [sp, #16]
   10b94:	str	x20, [x19, #16]
   10b98:	ldp	x19, x20, [sp], #32
   10b9c:	ret
   10ba0:	stp	x19, x20, [sp, #-48]!
   10ba4:	mov	x19, x0
   10ba8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   10bac:	mov	x20, x1
   10bb0:	mov	x1, #0x10                  	// #16
   10bb4:	ldr	x0, [x0, #3776]
   10bb8:	stp	x21, x22, [sp, #16]
   10bbc:	mov	x21, x2
   10bc0:	mov	x22, x3
   10bc4:	str	x30, [sp, #32]
   10bc8:	bl	c108 <__sancov_default_options@@Base+0x168>
   10bcc:	mov	x2, x0
   10bd0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   10bd4:	add	x0, x0, #0xd48
   10bd8:	ldr	x30, [sp, #32]
   10bdc:	stp	x0, x22, [x2]
   10be0:	mov	x3, x21
   10be4:	mov	x1, x20
   10be8:	mov	x0, x19
   10bec:	ldp	x21, x22, [sp, #16]
   10bf0:	ldp	x19, x20, [sp], #48
   10bf4:	b	12010 <__sanitizer_set_report_fd@@Base+0x1770>
   10bf8:	stp	x19, x20, [sp, #-48]!
   10bfc:	mov	x19, x0
   10c00:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   10c04:	mov	x20, x1
   10c08:	mov	x1, #0x10                  	// #16
   10c0c:	ldr	x0, [x0, #3776]
   10c10:	stp	x21, x22, [sp, #16]
   10c14:	mov	x21, x2
   10c18:	mov	x22, x3
   10c1c:	str	x30, [sp, #32]
   10c20:	bl	c108 <__sancov_default_options@@Base+0x168>
   10c24:	mov	x2, x0
   10c28:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   10c2c:	add	x0, x0, #0xd60
   10c30:	ldr	x30, [sp, #32]
   10c34:	stp	x0, x22, [x2]
   10c38:	mov	x3, x21
   10c3c:	mov	x1, x20
   10c40:	mov	x0, x19
   10c44:	ldp	x21, x22, [sp, #16]
   10c48:	ldp	x19, x20, [sp], #48
   10c4c:	b	12010 <__sanitizer_set_report_fd@@Base+0x1770>
   10c50:	stp	x19, x20, [sp, #-48]!
   10c54:	mov	x19, x0
   10c58:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   10c5c:	mov	x20, x1
   10c60:	mov	x1, #0x10                  	// #16
   10c64:	ldr	x0, [x0, #3776]
   10c68:	stp	x21, x22, [sp, #16]
   10c6c:	mov	x21, x2
   10c70:	mov	x22, x3
   10c74:	str	x30, [sp, #32]
   10c78:	bl	c108 <__sancov_default_options@@Base+0x168>
   10c7c:	mov	x2, x0
   10c80:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   10c84:	add	x0, x0, #0xdf0
   10c88:	ldr	x30, [sp, #32]
   10c8c:	stp	x0, x22, [x2]
   10c90:	mov	x3, x21
   10c94:	mov	x1, x20
   10c98:	mov	x0, x19
   10c9c:	ldp	x21, x22, [sp, #16]
   10ca0:	ldp	x19, x20, [sp], #48
   10ca4:	b	12010 <__sanitizer_set_report_fd@@Base+0x1770>
   10ca8:	stp	x19, x20, [sp, #-48]!
   10cac:	mov	x19, x0
   10cb0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   10cb4:	mov	x20, x1
   10cb8:	mov	x1, #0x10                  	// #16
   10cbc:	ldr	x0, [x0, #3776]
   10cc0:	stp	x21, x22, [sp, #16]
   10cc4:	mov	x21, x2
   10cc8:	mov	x22, x3
   10ccc:	str	x30, [sp, #32]
   10cd0:	bl	c108 <__sancov_default_options@@Base+0x168>
   10cd4:	mov	x2, x0
   10cd8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   10cdc:	add	x0, x0, #0xdd8
   10ce0:	ldr	x30, [sp, #32]
   10ce4:	stp	x0, x22, [x2]
   10ce8:	mov	x3, x21
   10cec:	mov	x1, x20
   10cf0:	mov	x0, x19
   10cf4:	ldp	x21, x22, [sp, #16]
   10cf8:	ldp	x19, x20, [sp], #48
   10cfc:	b	12010 <__sanitizer_set_report_fd@@Base+0x1770>
   10d00:	stp	x19, x20, [sp, #-48]!
   10d04:	mov	x19, x0
   10d08:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   10d0c:	mov	x20, x1
   10d10:	mov	x1, #0x10                  	// #16
   10d14:	ldr	x0, [x0, #3776]
   10d18:	stp	x21, x22, [sp, #16]
   10d1c:	mov	x21, x2
   10d20:	mov	x22, x3
   10d24:	str	x30, [sp, #32]
   10d28:	bl	c108 <__sancov_default_options@@Base+0x168>
   10d2c:	mov	x2, x0
   10d30:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   10d34:	add	x0, x0, #0xe08
   10d38:	ldr	x30, [sp, #32]
   10d3c:	stp	x0, x22, [x2]
   10d40:	mov	x3, x21
   10d44:	mov	x1, x20
   10d48:	mov	x0, x19
   10d4c:	ldp	x21, x22, [sp, #16]
   10d50:	ldp	x19, x20, [sp], #48
   10d54:	b	12010 <__sanitizer_set_report_fd@@Base+0x1770>
   10d58:	mov	w1, #0x1                   	// #1
   10d5c:	strb	w1, [x0]
   10d60:	strb	w1, [x0, #60]
   10d64:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   10d68:	strb	w1, [x0, #68]
   10d6c:	mov	x1, #0x100000001           	// #4294967297
   10d70:	stp	x1, xzr, [x0, #72]
   10d74:	mov	x1, #0x100000000           	// #4294967296
   10d78:	add	x2, x2, #0x6df
   10d7c:	str	x1, [x0, #88]
   10d80:	mov	w1, #0x101                 	// #257
   10d84:	strh	w1, [x0, #96]
   10d88:	mov	x1, #0x10000               	// #65536
   10d8c:	str	x1, [x0, #104]
   10d90:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10d94:	add	x1, x1, #0xe3f
   10d98:	str	x1, [x0, #112]
   10d9c:	mov	w1, #0x1388                	// #5000
   10da0:	str	w1, [x0, #156]
   10da4:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   10da8:	add	x1, x1, #0x30d
   10dac:	str	x1, [x0, #168]
   10db0:	mov	w1, #0x100                 	// #256
   10db4:	movk	w1, #0x101, lsl #16
   10db8:	str	x2, [x0, #24]
   10dbc:	mov	x2, #0x10000               	// #65536
   10dc0:	str	w1, [x0, #176]
   10dc4:	movk	x2, #0x1, lsl #32
   10dc8:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10dcc:	add	x1, x1, #0xe44
   10dd0:	str	x2, [x0, #32]
   10dd4:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10dd8:	add	x2, x2, #0xd14
   10ddc:	str	x1, [x0, #192]
   10de0:	mov	x1, #0x101010101010101     	// #72340172838076673
   10de4:	movk	x1, #0x1
   10de8:	str	x2, [x0, #40]
   10dec:	mov	x2, #0x10100000000         	// #1103806595072
   10df0:	str	x1, [x0, #200]
   10df4:	movk	x2, #0x1, lsl #48
   10df8:	mov	x1, #0x101010101010101     	// #72340172838076673
   10dfc:	movk	x1, #0x1, lsl #48
   10e00:	str	xzr, [x0, #8]
   10e04:	strb	wzr, [x0, #16]
   10e08:	strh	wzr, [x0, #48]
   10e0c:	stur	x2, [x0, #52]
   10e10:	mov	w2, #0x1                   	// #1
   10e14:	str	wzr, [x0, #64]
   10e18:	strb	wzr, [x0, #98]
   10e1c:	strh	wzr, [x0, #120]
   10e20:	strb	wzr, [x0, #122]
   10e24:	stp	xzr, xzr, [x0, #128]
   10e28:	str	xzr, [x0, #144]
   10e2c:	strb	wzr, [x0, #152]
   10e30:	strh	w2, [x0, #160]
   10e34:	strh	w2, [x0, #180]
   10e38:	str	wzr, [x0, #184]
   10e3c:	str	x1, [x0, #208]
   10e40:	mov	x1, #0x1                   	// #1
   10e44:	movk	x1, #0x100, lsl #32
   10e48:	str	x1, [x0, #216]
   10e4c:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10e50:	add	x1, x1, #0x7e4
   10e54:	str	x1, [x0, #224]
   10e58:	mov	w1, #0x100                 	// #256
   10e5c:	strh	w1, [x0, #232]
   10e60:	strb	wzr, [x0, #234]
   10e64:	ret
   10e68:	mov	x2, #0xf0                  	// #240
   10e6c:	b	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   10e70:	stp	x19, x20, [sp, #-80]!
   10e74:	sub	x2, x2, #0x1
   10e78:	mov	x20, x0
   10e7c:	mov	x19, x1
   10e80:	stp	x21, x22, [sp, #16]
   10e84:	add	x21, x1, x2
   10e88:	mov	w22, #0xa                   	// #10
   10e8c:	str	x30, [sp, #32]
   10e90:	ldrb	w0, [x20]
   10e94:	cmp	x19, x21
   10e98:	cbz	w0, 10f54 <__sanitizer_set_report_fd@@Base+0x6b4>
   10e9c:	b.cs	10f58 <__sanitizer_set_report_fd@@Base+0x6b8>  // b.hs, b.nlast
   10ea0:	cmp	w0, #0x25
   10ea4:	b.eq	10eb4 <__sanitizer_set_report_fd@@Base+0x614>  // b.none
   10ea8:	add	x20, x20, #0x1
   10eac:	strb	w0, [x19], #1
   10eb0:	b	10e90 <__sanitizer_set_report_fd@@Base+0x5f0>
   10eb4:	ldrb	w1, [x20, #1]
   10eb8:	cmp	w1, #0x62
   10ebc:	b.eq	10f08 <__sanitizer_set_report_fd@@Base+0x668>  // b.none
   10ec0:	cmp	w1, #0x70
   10ec4:	b.ne	10ea8 <__sanitizer_set_report_fd@@Base+0x608>  // b.any
   10ec8:	bl	132c0 <__sanitizer_set_report_fd@@Base+0x2a20>
   10ecc:	add	x1, sp, #0x50
   10ed0:	sdiv	w2, w0, w22
   10ed4:	msub	w0, w2, w22, w0
   10ed8:	add	w0, w0, #0x30
   10edc:	strb	w0, [x1, #-1]!
   10ee0:	mov	w0, w2
   10ee4:	cbnz	w2, 10ed0 <__sanitizer_set_report_fd@@Base+0x630>
   10ee8:	add	x0, sp, #0x50
   10eec:	cmp	x1, x0
   10ef0:	b.cs	10f4c <__sanitizer_set_report_fd@@Base+0x6ac>  // b.hs, b.nlast
   10ef4:	cmp	x19, x21
   10ef8:	b.cs	10f4c <__sanitizer_set_report_fd@@Base+0x6ac>  // b.hs, b.nlast
   10efc:	ldrb	w0, [x1], #1
   10f00:	strb	w0, [x19], #1
   10f04:	b	10ee8 <__sanitizer_set_report_fd@@Base+0x648>
   10f08:	bl	e168 <__sancov_default_options@@Base+0x21c8>
   10f0c:	cbnz	x0, 10f30 <__sanitizer_set_report_fd@@Base+0x690>
   10f10:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10f14:	add	x2, x2, #0xe4c
   10f18:	mov	x4, #0x0                   	// #0
   10f1c:	mov	x3, #0x0                   	// #0
   10f20:	mov	w1, #0x2e                  	// #46
   10f24:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10f28:	add	x0, x0, #0xe5c
   10f2c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   10f30:	ldrb	w1, [x0]
   10f34:	cbz	w1, 10f4c <__sanitizer_set_report_fd@@Base+0x6ac>
   10f38:	cmp	x19, x21
   10f3c:	b.cs	10f4c <__sanitizer_set_report_fd@@Base+0x6ac>  // b.hs, b.nlast
   10f40:	add	x0, x0, #0x1
   10f44:	strb	w1, [x19], #1
   10f48:	b	10f30 <__sanitizer_set_report_fd@@Base+0x690>
   10f4c:	add	x20, x20, #0x2
   10f50:	b	10e90 <__sanitizer_set_report_fd@@Base+0x5f0>
   10f54:	b.cc	10f70 <__sanitizer_set_report_fd@@Base+0x6d0>  // b.lo, b.ul, b.last
   10f58:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10f5c:	mov	x4, #0x0                   	// #0
   10f60:	add	x2, x2, #0xe99
   10f64:	mov	x3, #0x0                   	// #0
   10f68:	mov	w1, #0x46                  	// #70
   10f6c:	b	10f24 <__sanitizer_set_report_fd@@Base+0x684>
   10f70:	strb	wzr, [x19]
   10f74:	ldp	x21, x22, [sp, #16]
   10f78:	ldr	x30, [sp, #32]
   10f7c:	ldp	x19, x20, [sp], #80
   10f80:	ret
   10f84:	stp	x19, x20, [sp, #-32]!
   10f88:	mov	x1, #0x18                  	// #24
   10f8c:	mov	x19, x0
   10f90:	stp	x21, x30, [sp, #16]
   10f94:	adrp	x21, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   10f98:	adrp	x20, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   10f9c:	ldr	x21, [x21, #3776]
   10fa0:	add	x20, x20, #0xe20
   10fa4:	mov	x0, x21
   10fa8:	bl	c108 <__sancov_default_options@@Base+0x168>
   10fac:	mov	x2, x0
   10fb0:	strb	wzr, [x0, #16]
   10fb4:	adrp	x3, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10fb8:	add	x3, x3, #0xeb6
   10fbc:	mov	x0, x19
   10fc0:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10fc4:	stp	x20, x19, [x2]
   10fc8:	add	x1, x1, #0xedc
   10fcc:	bl	12010 <__sanitizer_set_report_fd@@Base+0x1770>
   10fd0:	mov	x0, x21
   10fd4:	mov	x1, #0x18                  	// #24
   10fd8:	bl	c108 <__sancov_default_options@@Base+0x168>
   10fdc:	mov	x2, x0
   10fe0:	mov	w0, #0x1                   	// #1
   10fe4:	adrp	x3, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   10fe8:	ldp	x21, x30, [sp, #16]
   10fec:	stp	x20, x19, [x2]
   10ff0:	add	x3, x3, #0xee4
   10ff4:	strb	w0, [x2, #16]
   10ff8:	mov	x0, x19
   10ffc:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   11000:	add	x1, x1, #0xf19
   11004:	ldp	x19, x20, [sp], #32
   11008:	b	12010 <__sanitizer_set_report_fd@@Base+0x1770>
   1100c:	stp	x19, x20, [sp, #-32]!
   11010:	mov	x3, x1
   11014:	mov	x20, x0
   11018:	mov	x19, x1
   1101c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   11020:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   11024:	add	x2, x2, #0xf2b
   11028:	add	x1, x1, #0x94c
   1102c:	str	x30, [sp, #16]
   11030:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11034:	add	x3, x19, #0x8
   11038:	mov	x0, x20
   1103c:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   11040:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   11044:	add	x2, x2, #0xf9d
   11048:	add	x1, x1, #0xff3
   1104c:	bl	10bf8 <__sanitizer_set_report_fd@@Base+0x358>
   11050:	add	x3, x19, #0x10
   11054:	mov	x0, x20
   11058:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1105c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11060:	add	x2, x2, #0xc
   11064:	add	x1, x1, #0xa6
   11068:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   1106c:	add	x3, x19, #0x18
   11070:	mov	x0, x20
   11074:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11078:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1107c:	add	x2, x2, #0xb6
   11080:	add	x1, x1, #0xeb
   11084:	bl	10bf8 <__sanitizer_set_report_fd@@Base+0x358>
   11088:	add	x3, x19, #0x20
   1108c:	mov	x0, x20
   11090:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11094:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11098:	add	x2, x2, #0xfd
   1109c:	add	x1, x1, #0x151
   110a0:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   110a4:	add	x3, x19, #0x21
   110a8:	mov	x0, x20
   110ac:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   110b0:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   110b4:	add	x2, x2, #0x166
   110b8:	add	x1, x1, #0x1af
   110bc:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   110c0:	add	x3, x19, #0x22
   110c4:	mov	x0, x20
   110c8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   110cc:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   110d0:	add	x2, x2, #0x1c4
   110d4:	add	x1, x1, #0x20c
   110d8:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   110dc:	add	x3, x19, #0x23
   110e0:	mov	x0, x20
   110e4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   110e8:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   110ec:	add	x2, x2, #0x222
   110f0:	add	x1, x1, #0x247
   110f4:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   110f8:	add	x3, x19, #0x24
   110fc:	mov	x0, x20
   11100:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11104:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11108:	add	x2, x2, #0x254
   1110c:	add	x1, x1, #0x296
   11110:	bl	10c50 <__sanitizer_set_report_fd@@Base+0x3b0>
   11114:	add	x3, x19, #0x28
   11118:	mov	x0, x20
   1111c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11120:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11124:	add	x2, x2, #0x2aa
   11128:	add	x1, x1, #0x30f
   1112c:	bl	10bf8 <__sanitizer_set_report_fd@@Base+0x358>
   11130:	add	x3, x19, #0x30
   11134:	mov	x0, x20
   11138:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1113c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11140:	add	x2, x2, #0x318
   11144:	add	x1, x1, #0x38c
   11148:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   1114c:	add	x3, x19, #0x31
   11150:	mov	x0, x20
   11154:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11158:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1115c:	add	x2, x2, #0x399
   11160:	add	x1, x1, #0x3e5
   11164:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11168:	add	x3, x19, #0x34
   1116c:	mov	x0, x20
   11170:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11174:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11178:	add	x2, x2, #0x3f3
   1117c:	add	x1, x1, #0x438
   11180:	bl	10c50 <__sanitizer_set_report_fd@@Base+0x3b0>
   11184:	add	x3, x19, #0x38
   11188:	mov	x0, x20
   1118c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11190:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11194:	add	x2, x2, #0x442
   11198:	add	x1, x1, #0x4af
   1119c:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   111a0:	add	x3, x19, #0x39
   111a4:	mov	x0, x20
   111a8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   111ac:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   111b0:	add	x2, x2, #0x4b9
   111b4:	add	x1, x1, #0x4d7
   111b8:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   111bc:	add	x3, x19, #0x3a
   111c0:	mov	x0, x20
   111c4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   111c8:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   111cc:	add	x2, x2, #0x4e4
   111d0:	add	x1, x1, #0x583
   111d4:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   111d8:	add	x3, x19, #0x3b
   111dc:	mov	x0, x20
   111e0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   111e4:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   111e8:	add	x2, x2, #0x596
   111ec:	add	x1, x1, #0x5e2
   111f0:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   111f4:	add	x3, x19, #0x3c
   111f8:	mov	x0, x20
   111fc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11200:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11204:	add	x2, x2, #0x5fc
   11208:	add	x1, x1, #0x645
   1120c:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11210:	add	x3, x19, #0x40
   11214:	mov	x0, x20
   11218:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1121c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11220:	add	x2, x2, #0x653
   11224:	add	x1, x1, #0x6b7
   11228:	bl	10c50 <__sanitizer_set_report_fd@@Base+0x3b0>
   1122c:	add	x3, x19, #0x44
   11230:	mov	x0, x20
   11234:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11238:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1123c:	add	x2, x2, #0x6c8
   11240:	add	x1, x1, #0x6e0
   11244:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11248:	add	x3, x19, #0x48
   1124c:	mov	x0, x20
   11250:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11254:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11258:	add	x2, x2, #0x6ed
   1125c:	add	x1, x1, #0x7a8
   11260:	bl	10ca8 <__sanitizer_set_report_fd@@Base+0x408>
   11264:	add	x3, x19, #0x4c
   11268:	mov	x0, x20
   1126c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11270:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11274:	add	x2, x2, #0x7b4
   11278:	add	x1, x1, #0x86e
   1127c:	bl	10ca8 <__sanitizer_set_report_fd@@Base+0x408>
   11280:	add	x3, x19, #0x50
   11284:	mov	x0, x20
   11288:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1128c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11290:	add	x2, x2, #0x87c
   11294:	add	x1, x1, #0x937
   11298:	bl	10ca8 <__sanitizer_set_report_fd@@Base+0x408>
   1129c:	add	x3, x19, #0x54
   112a0:	mov	x0, x20
   112a4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   112a8:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   112ac:	add	x2, x2, #0x944
   112b0:	add	x1, x1, #0x9fe
   112b4:	bl	10ca8 <__sanitizer_set_report_fd@@Base+0x408>
   112b8:	add	x3, x19, #0x58
   112bc:	mov	x0, x20
   112c0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   112c4:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   112c8:	add	x2, x2, #0xa0c
   112cc:	add	x1, x1, #0xac7
   112d0:	bl	10ca8 <__sanitizer_set_report_fd@@Base+0x408>
   112d4:	add	x3, x19, #0x5c
   112d8:	mov	x0, x20
   112dc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   112e0:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   112e4:	add	x2, x2, #0xad6
   112e8:	add	x1, x1, #0xb90
   112ec:	bl	10ca8 <__sanitizer_set_report_fd@@Base+0x408>
   112f0:	add	x3, x19, #0x60
   112f4:	mov	x0, x20
   112f8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   112fc:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11300:	add	x2, x2, #0xb9e
   11304:	add	x1, x1, #0xc08
   11308:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   1130c:	add	x3, x19, #0x61
   11310:	mov	x0, x20
   11314:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11318:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1131c:	add	x2, x2, #0xc20
   11320:	add	x1, x1, #0xc52
   11324:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11328:	add	x3, x19, #0x62
   1132c:	mov	x0, x20
   11330:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11334:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11338:	add	x2, x2, #0xc62
   1133c:	add	x1, x1, #0xc89
   11340:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11344:	add	x3, x19, #0x68
   11348:	mov	x0, x20
   1134c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11350:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11354:	add	x2, x2, #0xc9a
   11358:	add	x1, x1, #0xd0f
   1135c:	bl	10d00 <__sanitizer_set_report_fd@@Base+0x460>
   11360:	add	x3, x19, #0x70
   11364:	mov	x0, x20
   11368:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1136c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11370:	add	x2, x2, #0xd2b
   11374:	add	x1, x1, #0xd52
   11378:	bl	10bf8 <__sanitizer_set_report_fd@@Base+0x358>
   1137c:	add	x3, x19, #0x78
   11380:	mov	x0, x20
   11384:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11388:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1138c:	add	x2, x2, #0xd58
   11390:	add	x1, x1, #0xd9c
   11394:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11398:	add	x3, x19, #0x79
   1139c:	mov	x0, x20
   113a0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   113a4:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   113a8:	add	x2, x2, #0xdb0
   113ac:	add	x1, x1, #0xdca
   113b0:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   113b4:	add	x3, x19, #0x7a
   113b8:	mov	x0, x20
   113bc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   113c0:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   113c4:	add	x2, x2, #0xde1
   113c8:	add	x1, x1, #0x968
   113cc:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   113d0:	add	x3, x19, #0x80
   113d4:	mov	x0, x20
   113d8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   113dc:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   113e0:	add	x2, x2, #0xdfe
   113e4:	add	x1, x1, #0x61b
   113e8:	bl	10d00 <__sanitizer_set_report_fd@@Base+0x460>
   113ec:	add	x3, x19, #0x88
   113f0:	mov	x0, x20
   113f4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   113f8:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   113fc:	add	x2, x2, #0xe74
   11400:	add	x1, x1, #0xf0d
   11404:	bl	10d00 <__sanitizer_set_report_fd@@Base+0x460>
   11408:	add	x3, x19, #0x90
   1140c:	mov	x0, x20
   11410:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   11414:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11418:	add	x2, x2, #0xf1f
   1141c:	add	x1, x1, #0x7f
   11420:	bl	10d00 <__sanitizer_set_report_fd@@Base+0x460>
   11424:	add	x3, x19, #0x98
   11428:	mov	x0, x20
   1142c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11430:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11434:	add	x2, x2, #0x91
   11438:	add	x1, x1, #0xb7
   1143c:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11440:	add	x3, x19, #0x9c
   11444:	mov	x0, x20
   11448:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1144c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11450:	add	x2, x2, #0xc4
   11454:	add	x1, x1, #0x192
   11458:	bl	10c50 <__sanitizer_set_report_fd@@Base+0x3b0>
   1145c:	add	x3, x19, #0xa0
   11460:	mov	x0, x20
   11464:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11468:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1146c:	add	x2, x2, #0x1b6
   11470:	add	x1, x1, #0x20f
   11474:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11478:	add	x3, x19, #0xa1
   1147c:	mov	x0, x20
   11480:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11484:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11488:	add	x2, x2, #0x227
   1148c:	add	x1, x1, #0x2a6
   11490:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11494:	add	x3, x19, #0xa8
   11498:	mov	x0, x20
   1149c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   114a0:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   114a4:	add	x2, x2, #0x2af
   114a8:	add	x1, x1, #0x2f7
   114ac:	bl	10bf8 <__sanitizer_set_report_fd@@Base+0x358>
   114b0:	add	x3, x19, #0xb0
   114b4:	mov	x0, x20
   114b8:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   114bc:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   114c0:	add	x2, x2, #0x304
   114c4:	add	x1, x1, #0x366
   114c8:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   114cc:	add	x3, x19, #0xb1
   114d0:	mov	x0, x20
   114d4:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   114d8:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   114dc:	add	x2, x2, #0x379
   114e0:	add	x1, x1, #0x39d
   114e4:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   114e8:	add	x3, x19, #0xb2
   114ec:	mov	x0, x20
   114f0:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   114f4:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   114f8:	add	x2, x2, #0x3b0
   114fc:	add	x1, x1, #0x480
   11500:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11504:	add	x3, x19, #0xb3
   11508:	mov	x0, x20
   1150c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11510:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11514:	add	x2, x2, #0x491
   11518:	add	x1, x1, #0x4d7
   1151c:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11520:	add	x3, x19, #0xb4
   11524:	mov	x0, x20
   11528:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1152c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11530:	add	x2, x2, #0x4e9
   11534:	add	x1, x1, #0x520
   11538:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   1153c:	add	x3, x19, #0xb5
   11540:	mov	x0, x20
   11544:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11548:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1154c:	add	x2, x2, #0x538
   11550:	add	x1, x1, #0x57c
   11554:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11558:	add	x3, x19, #0xb8
   1155c:	mov	x0, x20
   11560:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11564:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11568:	add	x2, x2, #0x58f
   1156c:	add	x1, x1, #0x65d
   11570:	bl	10c50 <__sanitizer_set_report_fd@@Base+0x3b0>
   11574:	add	x3, x19, #0xc0
   11578:	mov	x0, x20
   1157c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11580:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11584:	add	x2, x2, #0x670
   11588:	add	x1, x1, #0x6fd
   1158c:	bl	10bf8 <__sanitizer_set_report_fd@@Base+0x358>
   11590:	add	x3, x19, #0xc8
   11594:	mov	x0, x20
   11598:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1159c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   115a0:	add	x2, x2, #0x710
   115a4:	add	x1, x1, #0x747
   115a8:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   115ac:	add	x3, x19, #0xc9
   115b0:	mov	x0, x20
   115b4:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   115b8:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   115bc:	add	x2, x2, #0x760
   115c0:	add	x1, x1, #0x7a0
   115c4:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   115c8:	add	x3, x19, #0xca
   115cc:	mov	x0, x20
   115d0:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   115d4:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   115d8:	add	x2, x2, #0x7b5
   115dc:	add	x1, x1, #0x80b
   115e0:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   115e4:	add	x3, x19, #0xcb
   115e8:	mov	x0, x20
   115ec:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   115f0:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   115f4:	add	x2, x2, #0x81c
   115f8:	add	x1, x1, #0x86e
   115fc:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11600:	add	x3, x19, #0xcc
   11604:	mov	x0, x20
   11608:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1160c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11610:	add	x2, x2, #0x87f
   11614:	add	x1, x1, #0x8ca
   11618:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   1161c:	add	x3, x19, #0xcd
   11620:	mov	x0, x20
   11624:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11628:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1162c:	add	x2, x2, #0x8db
   11630:	add	x1, x1, #0x922
   11634:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11638:	add	x3, x19, #0xce
   1163c:	mov	x0, x20
   11640:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11644:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11648:	add	x2, x2, #0x934
   1164c:	add	x1, x1, #0x987
   11650:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11654:	add	x3, x19, #0xcf
   11658:	mov	x0, x20
   1165c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11660:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11664:	add	x2, x2, #0x998
   11668:	add	x1, x1, #0x9e0
   1166c:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11670:	add	x3, x19, #0xd0
   11674:	mov	x0, x20
   11678:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1167c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11680:	add	x2, x2, #0x9f2
   11684:	add	x1, x1, #0xa51
   11688:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   1168c:	add	x3, x19, #0xd1
   11690:	mov	x0, x20
   11694:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11698:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1169c:	add	x2, x2, #0xa62
   116a0:	add	x1, x1, #0xaa8
   116a4:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   116a8:	add	x3, x19, #0xd2
   116ac:	mov	x0, x20
   116b0:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   116b4:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   116b8:	add	x2, x2, #0xab9
   116bc:	add	x1, x1, #0xb11
   116c0:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   116c4:	add	x3, x19, #0xd3
   116c8:	mov	x0, x20
   116cc:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   116d0:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   116d4:	add	x2, x2, #0xb1f
   116d8:	add	x1, x1, #0xb58
   116dc:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   116e0:	add	x3, x19, #0xd4
   116e4:	mov	x0, x20
   116e8:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   116ec:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   116f0:	add	x2, x2, #0xb69
   116f4:	add	x1, x1, #0xbc0
   116f8:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   116fc:	add	x3, x19, #0xd5
   11700:	mov	x0, x20
   11704:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11708:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1170c:	add	x2, x2, #0xbd1
   11710:	add	x1, x1, #0xc17
   11714:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11718:	add	x3, x19, #0xd6
   1171c:	mov	x0, x20
   11720:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11724:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11728:	add	x2, x2, #0xc26
   1172c:	add	x1, x1, #0xc6c
   11730:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11734:	add	x3, x19, #0xd7
   11738:	mov	x0, x20
   1173c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11740:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11744:	add	x2, x2, #0xc7b
   11748:	add	x1, x1, #0xccb
   1174c:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11750:	add	x3, x19, #0xd8
   11754:	mov	x0, x20
   11758:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1175c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11760:	add	x2, x2, #0xcde
   11764:	add	x1, x1, #0xd1a
   11768:	bl	10c50 <__sanitizer_set_report_fd@@Base+0x3b0>
   1176c:	add	x3, x19, #0xdc
   11770:	mov	x0, x20
   11774:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11778:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1177c:	add	x2, x2, #0xd23
   11780:	add	x1, x1, #0xd76
   11784:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11788:	add	x3, x19, #0xdd
   1178c:	mov	x0, x20
   11790:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11794:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11798:	add	x2, x2, #0xd85
   1179c:	add	x1, x1, #0xde6
   117a0:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   117a4:	add	x3, x19, #0xde
   117a8:	mov	x0, x20
   117ac:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   117b0:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   117b4:	add	x2, x2, #0xdf9
   117b8:	add	x1, x1, #0xe22
   117bc:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   117c0:	add	x3, x19, #0xdf
   117c4:	mov	x0, x20
   117c8:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   117cc:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   117d0:	add	x2, x2, #0xe30
   117d4:	add	x1, x1, #0xe4f
   117d8:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   117dc:	add	x3, x19, #0xe0
   117e0:	mov	x0, x20
   117e4:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   117e8:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   117ec:	add	x2, x2, #0xe5f
   117f0:	add	x1, x1, #0xe75
   117f4:	bl	10bf8 <__sanitizer_set_report_fd@@Base+0x358>
   117f8:	add	x3, x19, #0xe8
   117fc:	mov	x0, x20
   11800:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11804:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11808:	add	x2, x2, #0xe81
   1180c:	add	x1, x1, #0xec5
   11810:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11814:	add	x3, x19, #0xe9
   11818:	mov	x0, x20
   1181c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11820:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11824:	add	x2, x2, #0xedc
   11828:	add	x1, x1, #0xf35
   1182c:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   11830:	add	x3, x19, #0xea
   11834:	mov	x0, x20
   11838:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   1183c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11840:	add	x2, x2, #0xf44
   11844:	add	x1, x1, #0xf95
   11848:	bl	10ba0 <__sanitizer_set_report_fd@@Base+0x300>
   1184c:	mov	x1, x19
   11850:	mov	x0, x20
   11854:	ldr	x30, [sp, #16]
   11858:	ldp	x19, x20, [sp], #32
   1185c:	b	10f84 <__sanitizer_set_report_fd@@Base+0x6e4>
   11860:	ldrb	w1, [x0, #161]
   11864:	ldrb	w2, [x0, #223]
   11868:	orr	w1, w1, w2
   1186c:	strb	w1, [x0, #161]
   11870:	ldr	w1, [x0, #52]
   11874:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   11878:	ldr	x0, [x0, #3896]
   1187c:	str	w1, [x0]
   11880:	ret
   11884:	stp	x19, x20, [sp, #-48]!
   11888:	mov	x20, x0
   1188c:	mov	x19, x1
   11890:	mov	x0, x19
   11894:	add	x1, sp, #0x28
   11898:	mov	w2, #0xa                   	// #10
   1189c:	str	x30, [sp, #16]
   118a0:	bl	12558 <__sanitizer_set_report_fd@@Base+0x1cb8>
   118a4:	ldr	x1, [x20, #8]
   118a8:	str	x0, [x1]
   118ac:	ldr	x0, [sp, #40]
   118b0:	ldrb	w0, [x0]
   118b4:	cmp	w0, #0x0
   118b8:	cset	w20, eq  // eq = none
   118bc:	cbz	w0, 118d0 <__sanitizer_set_report_fd@@Base+0x1030>
   118c0:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   118c4:	mov	x1, x19
   118c8:	add	x0, x0, #0xda8
   118cc:	bl	16994 <OnPrint@@Base+0x288>
   118d0:	mov	w0, w20
   118d4:	ldr	x30, [sp, #16]
   118d8:	ldp	x19, x20, [sp], #48
   118dc:	ret
   118e0:	stp	x19, x20, [sp, #-48]!
   118e4:	mov	x20, x0
   118e8:	mov	x19, x1
   118ec:	mov	x0, x19
   118f0:	add	x1, sp, #0x28
   118f4:	mov	w2, #0xa                   	// #10
   118f8:	str	x30, [sp, #16]
   118fc:	bl	12558 <__sanitizer_set_report_fd@@Base+0x1cb8>
   11900:	ldr	x1, [x20, #8]
   11904:	str	w0, [x1]
   11908:	ldr	x0, [sp, #40]
   1190c:	ldrb	w0, [x0]
   11910:	cmp	w0, #0x0
   11914:	cset	w20, eq  // eq = none
   11918:	cbz	w0, 1192c <__sanitizer_set_report_fd@@Base+0x108c>
   1191c:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   11920:	mov	x1, x19
   11924:	add	x0, x0, #0xdd4
   11928:	bl	16994 <OnPrint@@Base+0x288>
   1192c:	mov	w0, w20
   11930:	ldr	x30, [sp, #16]
   11934:	ldp	x19, x20, [sp], #48
   11938:	ret
   1193c:	stp	x19, x20, [sp, #-32]!
   11940:	mov	x20, x1
   11944:	mov	x19, x0
   11948:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1194c:	add	x1, x1, #0x151
   11950:	str	x30, [sp, #16]
   11954:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   11958:	cbnz	w0, 11970 <__sanitizer_set_report_fd@@Base+0x10d0>
   1195c:	strb	wzr, [x20]
   11960:	mov	w0, #0x1                   	// #1
   11964:	ldr	x30, [sp, #16]
   11968:	ldp	x19, x20, [sp], #32
   1196c:	ret
   11970:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   11974:	mov	x0, x19
   11978:	add	x1, x1, #0xa28
   1197c:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   11980:	cbz	w0, 1195c <__sanitizer_set_report_fd@@Base+0x10bc>
   11984:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   11988:	mov	x0, x19
   1198c:	add	x1, x1, #0x5
   11990:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   11994:	cbz	w0, 1195c <__sanitizer_set_report_fd@@Base+0x10bc>
   11998:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1199c:	mov	x0, x19
   119a0:	add	x1, x1, #0xcf3
   119a4:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   119a8:	cbnz	w0, 119b8 <__sanitizer_set_report_fd@@Base+0x1118>
   119ac:	mov	w0, #0x1                   	// #1
   119b0:	strb	w0, [x20]
   119b4:	b	11960 <__sanitizer_set_report_fd@@Base+0x10c0>
   119b8:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   119bc:	mov	x0, x19
   119c0:	add	x1, x1, #0xa2b
   119c4:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   119c8:	cbz	w0, 119ac <__sanitizer_set_report_fd@@Base+0x110c>
   119cc:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   119d0:	mov	x0, x19
   119d4:	add	x1, x1, #0xff5
   119d8:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   119dc:	cbz	w0, 119ac <__sanitizer_set_report_fd@@Base+0x110c>
   119e0:	mov	w0, #0x0                   	// #0
   119e4:	b	11964 <__sanitizer_set_report_fd@@Base+0x10c4>
   119e8:	stp	x19, x20, [sp, #-48]!
   119ec:	mov	x19, x1
   119f0:	add	x1, sp, #0x2f
   119f4:	stp	x21, x30, [sp, #16]
   119f8:	mov	x21, x0
   119fc:	mov	x0, x19
   11a00:	bl	1193c <__sanitizer_set_report_fd@@Base+0x109c>
   11a04:	ands	w20, w0, #0xff
   11a08:	b.eq	11a28 <__sanitizer_set_report_fd@@Base+0x1188>  // b.none
   11a0c:	ldr	x0, [x21, #8]
   11a10:	ldrb	w1, [sp, #47]
   11a14:	str	w1, [x0]
   11a18:	mov	w0, w20
   11a1c:	ldp	x21, x30, [sp, #16]
   11a20:	ldp	x19, x20, [sp], #48
   11a24:	ret
   11a28:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   11a2c:	mov	x0, x19
   11a30:	add	x1, x1, #0x5b
   11a34:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   11a38:	cbnz	w0, 11a50 <__sanitizer_set_report_fd@@Base+0x11b0>
   11a3c:	ldr	x0, [x21, #8]
   11a40:	mov	w1, #0x2                   	// #2
   11a44:	mov	w20, #0x1                   	// #1
   11a48:	str	w1, [x0]
   11a4c:	b	11a18 <__sanitizer_set_report_fd@@Base+0x1178>
   11a50:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   11a54:	mov	x0, x19
   11a58:	add	x1, x1, #0xdff
   11a5c:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   11a60:	cbz	w0, 11a3c <__sanitizer_set_report_fd@@Base+0x119c>
   11a64:	mov	x1, x19
   11a68:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   11a6c:	add	x0, x0, #0xe09
   11a70:	bl	16994 <OnPrint@@Base+0x288>
   11a74:	b	11a18 <__sanitizer_set_report_fd@@Base+0x1178>
   11a78:	stp	x19, x20, [sp, #-32]!
   11a7c:	mov	x20, x1
   11a80:	mov	x19, x0
   11a84:	mov	w1, #0x25                  	// #37
   11a88:	mov	x0, x20
   11a8c:	stp	x21, x30, [sp, #16]
   11a90:	bl	1225c <__sanitizer_set_report_fd@@Base+0x19bc>
   11a94:	cbnz	x0, 11ab0 <__sanitizer_set_report_fd@@Base+0x1210>
   11a98:	ldrb	w2, [x19, #16]
   11a9c:	mov	x1, x20
   11aa0:	ldr	x0, [x19, #8]
   11aa4:	ldp	x21, x30, [sp, #16]
   11aa8:	ldp	x19, x20, [sp], #32
   11aac:	b	11f60 <__sanitizer_set_report_fd@@Base+0x16c0>
   11ab0:	mov	w2, #0x0                   	// #0
   11ab4:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11ab8:	mov	x0, #0x1000                	// #4096
   11abc:	add	x1, x1, #0xfa7
   11ac0:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   11ac4:	mov	x21, x0
   11ac8:	mov	x1, x0
   11acc:	mov	x2, #0x1000                	// #4096
   11ad0:	mov	x0, x20
   11ad4:	bl	10e70 <__sanitizer_set_report_fd@@Base+0x5d0>
   11ad8:	ldrb	w2, [x19, #16]
   11adc:	mov	x1, x21
   11ae0:	ldr	x0, [x19, #8]
   11ae4:	bl	11f60 <__sanitizer_set_report_fd@@Base+0x16c0>
   11ae8:	mov	w19, w0
   11aec:	mov	x1, #0x1000                	// #4096
   11af0:	mov	x0, x21
   11af4:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   11af8:	mov	w0, w19
   11afc:	ldp	x21, x30, [sp, #16]
   11b00:	ldp	x19, x20, [sp], #32
   11b04:	ret
   11b08:	stp	x19, x20, [sp, #-32]!
   11b0c:	adrp	x19, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   11b10:	add	x19, x19, #0xcf8
   11b14:	stp	x21, x30, [sp, #16]
   11b18:	ldr	w1, [x19, #160]
   11b1c:	cbz	w1, 11b5c <__sanitizer_set_report_fd@@Base+0x12bc>
   11b20:	adrp	x21, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11b24:	add	x21, x21, #0xfe3
   11b28:	mov	x20, #0x0                   	// #0
   11b2c:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11b30:	add	x0, x0, #0xfba
   11b34:	bl	16994 <OnPrint@@Base+0x288>
   11b38:	ldr	w0, [x19, #160]
   11b3c:	cmp	w0, w20
   11b40:	b.le	11b58 <__sanitizer_set_report_fd@@Base+0x12b8>
   11b44:	ldr	x1, [x19, x20, lsl #3]
   11b48:	mov	x0, x21
   11b4c:	add	x20, x20, #0x1
   11b50:	bl	16994 <OnPrint@@Base+0x288>
   11b54:	b	11b38 <__sanitizer_set_report_fd@@Base+0x1298>
   11b58:	str	wzr, [x19, #160]
   11b5c:	ldp	x21, x30, [sp, #16]
   11b60:	ldp	x19, x20, [sp], #32
   11b64:	ret
   11b68:	stp	x19, x20, [sp, #-32]!
   11b6c:	stp	x21, x30, [sp, #16]
   11b70:	mov	x21, x1
   11b74:	mov	x0, x21
   11b78:	mov	x1, x2
   11b7c:	bl	12460 <__sanitizer_set_report_fd@@Base+0x1bc0>
   11b80:	mov	x19, x0
   11b84:	add	x1, x0, #0x1
   11b88:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   11b8c:	add	x0, x0, #0xcf8
   11b90:	add	x0, x0, #0xa8
   11b94:	bl	c108 <__sancov_default_options@@Base+0x168>
   11b98:	mov	x20, x0
   11b9c:	mov	x2, x19
   11ba0:	mov	x1, x21
   11ba4:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   11ba8:	mov	x0, x20
   11bac:	strb	wzr, [x20, x19]
   11bb0:	ldp	x21, x30, [sp, #16]
   11bb4:	ldp	x19, x20, [sp], #32
   11bb8:	ret
   11bbc:	stp	x19, x20, [sp, #-48]!
   11bc0:	mov	x20, x0
   11bc4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   11bc8:	mov	x19, #0x0                   	// #0
   11bcc:	stp	x21, x22, [sp, #16]
   11bd0:	adrp	x21, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   11bd4:	ldr	x0, [x0, #4024]
   11bd8:	add	x21, x21, #0x4
   11bdc:	mov	x22, #0x18                  	// #24
   11be0:	ldr	x1, [x0]
   11be4:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   11be8:	add	x0, x0, #0xfeb
   11bec:	str	x30, [sp, #32]
   11bf0:	bl	16994 <OnPrint@@Base+0x288>
   11bf4:	ldr	w0, [x20, #8]
   11bf8:	cmp	w0, w19
   11bfc:	b.le	11c24 <__sanitizer_set_report_fd@@Base+0x1384>
   11c00:	ldr	x1, [x20]
   11c04:	mul	x0, x19, x22
   11c08:	add	x19, x19, #0x1
   11c0c:	add	x2, x1, x0
   11c10:	ldr	x1, [x1, x0]
   11c14:	mov	x0, x21
   11c18:	ldr	x2, [x2, #8]
   11c1c:	bl	16994 <OnPrint@@Base+0x288>
   11c20:	b	11bf4 <__sanitizer_set_report_fd@@Base+0x1354>
   11c24:	ldp	x21, x22, [sp, #16]
   11c28:	ldr	x30, [sp, #32]
   11c2c:	ldp	x19, x20, [sp], #48
   11c30:	ret
   11c34:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   11c38:	add	x0, x0, #0x10
   11c3c:	str	x30, [sp, #-16]!
   11c40:	bl	16994 <OnPrint@@Base+0x288>
   11c44:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   11c48:	and	w1, w1, #0xff
   11c4c:	cmp	w1, #0x3a
   11c50:	b.hi	11c68 <__sanitizer_set_report_fd@@Base+0x13c8>  // b.pmore
   11c54:	mov	x0, #0x400                 	// #1024
   11c58:	movk	x0, #0x1001, lsl #32
   11c5c:	movk	x0, #0x400, lsl #48
   11c60:	lsr	x0, x0, x1
   11c64:	tbnz	w0, #0, 11c78 <__sanitizer_set_report_fd@@Base+0x13d8>
   11c68:	and	w1, w1, #0xfffffffb
   11c6c:	cmp	w1, #0x9
   11c70:	cset	w0, eq  // eq = none
   11c74:	ret
   11c78:	mov	w0, #0x1                   	// #1
   11c7c:	b	11c74 <__sanitizer_set_report_fd@@Base+0x13d4>
   11c80:	ldr	x4, [x0, #16]
   11c84:	mov	x2, x0
   11c88:	str	x30, [sp, #-16]!
   11c8c:	ldr	x3, [x2, #24]
   11c90:	mov	x0, x2
   11c94:	ldrb	w1, [x4, x3]
   11c98:	bl	11c48 <__sanitizer_set_report_fd@@Base+0x13a8>
   11c9c:	tst	w0, #0xff
   11ca0:	b.eq	11cb0 <__sanitizer_set_report_fd@@Base+0x1410>  // b.none
   11ca4:	add	x3, x3, #0x1
   11ca8:	str	x3, [x2, #24]
   11cac:	b	11c8c <__sanitizer_set_report_fd@@Base+0x13ec>
   11cb0:	ldr	x30, [sp], #16
   11cb4:	ret
   11cb8:	stp	x19, x20, [sp, #-64]!
   11cbc:	mov	x19, x0
   11cc0:	mov	x20, x1
   11cc4:	stp	x21, x22, [sp, #16]
   11cc8:	mov	x22, x2
   11ccc:	mov	x21, #0x0                   	// #0
   11cd0:	stp	x23, x24, [sp, #32]
   11cd4:	mov	x24, #0x18                  	// #24
   11cd8:	str	x30, [sp, #48]
   11cdc:	ldr	w0, [x19, #8]
   11ce0:	cmp	w0, w21
   11ce4:	b.le	11d34 <__sanitizer_set_report_fd@@Base+0x1494>
   11ce8:	mul	x23, x21, x24
   11cec:	add	x21, x21, #0x1
   11cf0:	ldr	x0, [x19]
   11cf4:	ldr	x1, [x0, x23]
   11cf8:	mov	x0, x20
   11cfc:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   11d00:	cbnz	w0, 11cdc <__sanitizer_set_report_fd@@Base+0x143c>
   11d04:	ldr	x0, [x19]
   11d08:	ldr	x30, [sp, #48]
   11d0c:	add	x0, x0, x23
   11d10:	ldp	x23, x24, [sp, #32]
   11d14:	ldr	x0, [x0, #16]
   11d18:	ldr	x1, [x0]
   11d1c:	ldr	x2, [x1]
   11d20:	mov	x1, x22
   11d24:	ldp	x21, x22, [sp, #16]
   11d28:	mov	x16, x2
   11d2c:	ldp	x19, x20, [sp], #64
   11d30:	br	x16
   11d34:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   11d38:	add	x0, x0, #0xcf8
   11d3c:	ldr	w1, [x0, #160]
   11d40:	sxtw	x3, w1
   11d44:	cmp	x3, #0x13
   11d48:	b.ls	11d68 <__sanitizer_set_report_fd@@Base+0x14c8>  // b.plast
   11d4c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   11d50:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   11d54:	add	x2, x2, #0x1b
   11d58:	add	x0, x0, #0x47
   11d5c:	mov	x4, #0x14                  	// #20
   11d60:	mov	w1, #0x1e                  	// #30
   11d64:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   11d68:	add	w1, w1, #0x1
   11d6c:	str	x20, [x0, x3, lsl #3]
   11d70:	ldp	x21, x22, [sp, #16]
   11d74:	ldp	x23, x24, [sp, #32]
   11d78:	ldr	x30, [sp, #48]
   11d7c:	str	w1, [x0, #160]
   11d80:	mov	w0, #0x1                   	// #1
   11d84:	ldp	x19, x20, [sp], #64
   11d88:	ret
   11d8c:	stp	x19, x20, [sp, #-32]!
   11d90:	mov	x19, x0
   11d94:	ldp	x4, x3, [x0, #16]
   11d98:	str	x30, [sp, #16]
   11d9c:	ldr	x2, [x19, #24]
   11da0:	ldrb	w1, [x4, x2]
   11da4:	cmp	w1, #0x3d
   11da8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   11dac:	b.eq	11dcc <__sanitizer_set_report_fd@@Base+0x152c>  // b.none
   11db0:	mov	x0, x19
   11db4:	bl	11c48 <__sanitizer_set_report_fd@@Base+0x13a8>
   11db8:	tst	w0, #0xff
   11dbc:	b.ne	11dd4 <__sanitizer_set_report_fd@@Base+0x1534>  // b.any
   11dc0:	add	x2, x2, #0x1
   11dc4:	str	x2, [x19, #24]
   11dc8:	b	11d9c <__sanitizer_set_report_fd@@Base+0x14fc>
   11dcc:	cmp	w1, #0x3d
   11dd0:	b.eq	11de4 <__sanitizer_set_report_fd@@Base+0x1544>  // b.none
   11dd4:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   11dd8:	add	x1, x1, #0x8a
   11ddc:	mov	x0, x19
   11de0:	bl	11c34 <__sanitizer_set_report_fd@@Base+0x1394>
   11de4:	sub	x2, x2, x3
   11de8:	add	x1, x4, x3
   11dec:	mov	x0, x19
   11df0:	bl	11b68 <__sanitizer_set_report_fd@@Base+0x12c8>
   11df4:	ldp	x4, x1, [x19, #16]
   11df8:	mov	x20, x0
   11dfc:	mov	w2, #0x22                  	// #34
   11e00:	add	x3, x1, #0x1
   11e04:	str	x3, [x19, #24]
   11e08:	add	x5, x4, x3
   11e0c:	ldrb	w0, [x4, x3]
   11e10:	cmp	w0, #0x27
   11e14:	ccmp	w0, w2, #0x4, ne  // ne = any
   11e18:	b.ne	11e48 <__sanitizer_set_report_fd@@Base+0x15a8>  // b.any
   11e1c:	add	x1, x1, #0x2
   11e20:	str	x1, [x19, #24]
   11e24:	ldrb	w5, [x4, x3]
   11e28:	ldr	x2, [x19, #24]
   11e2c:	ldrb	w0, [x4, x2]
   11e30:	cbz	w0, 11ea4 <__sanitizer_set_report_fd@@Base+0x1604>
   11e34:	cmp	w0, w5
   11e38:	b.eq	11eb0 <__sanitizer_set_report_fd@@Base+0x1610>  // b.none
   11e3c:	add	x2, x2, #0x1
   11e40:	str	x2, [x19, #24]
   11e44:	b	11e28 <__sanitizer_set_report_fd@@Base+0x1588>
   11e48:	ldr	x2, [x19, #24]
   11e4c:	ldrb	w1, [x4, x2]
   11e50:	cbz	w1, 11e70 <__sanitizer_set_report_fd@@Base+0x15d0>
   11e54:	mov	x0, x19
   11e58:	bl	11c48 <__sanitizer_set_report_fd@@Base+0x13a8>
   11e5c:	tst	w0, #0xff
   11e60:	b.ne	11e70 <__sanitizer_set_report_fd@@Base+0x15d0>  // b.any
   11e64:	add	x2, x2, #0x1
   11e68:	str	x2, [x19, #24]
   11e6c:	b	11e48 <__sanitizer_set_report_fd@@Base+0x15a8>
   11e70:	sub	x2, x2, x3
   11e74:	mov	x1, x5
   11e78:	mov	x0, x19
   11e7c:	bl	11b68 <__sanitizer_set_report_fd@@Base+0x12c8>
   11e80:	mov	x2, x0
   11e84:	mov	x1, x20
   11e88:	mov	x0, x19
   11e8c:	bl	11cb8 <__sanitizer_set_report_fd@@Base+0x1418>
   11e90:	tst	w0, #0xff
   11e94:	b.ne	11ed8 <__sanitizer_set_report_fd@@Base+0x1638>  // b.any
   11e98:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   11e9c:	add	x1, x1, #0x97
   11ea0:	b	11ddc <__sanitizer_set_report_fd@@Base+0x153c>
   11ea4:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   11ea8:	add	x1, x1, #0xac
   11eac:	b	11ddc <__sanitizer_set_report_fd@@Base+0x153c>
   11eb0:	mvn	x3, x3
   11eb4:	add	x1, x4, x1
   11eb8:	add	x2, x3, x2
   11ebc:	mov	x0, x19
   11ec0:	bl	11b68 <__sanitizer_set_report_fd@@Base+0x12c8>
   11ec4:	mov	x2, x0
   11ec8:	ldr	x0, [x19, #24]
   11ecc:	add	x0, x0, #0x1
   11ed0:	str	x0, [x19, #24]
   11ed4:	b	11e84 <__sanitizer_set_report_fd@@Base+0x15e4>
   11ed8:	ldr	x30, [sp, #16]
   11edc:	ldp	x19, x20, [sp], #32
   11ee0:	ret
   11ee4:	stp	x19, x30, [sp, #-16]!
   11ee8:	mov	x19, x0
   11eec:	mov	x0, x19
   11ef0:	bl	11c80 <__sanitizer_set_report_fd@@Base+0x13e0>
   11ef4:	ldp	x1, x0, [x19, #16]
   11ef8:	ldrb	w0, [x1, x0]
   11efc:	cbz	w0, 11f0c <__sanitizer_set_report_fd@@Base+0x166c>
   11f00:	mov	x0, x19
   11f04:	bl	11d8c <__sanitizer_set_report_fd@@Base+0x14ec>
   11f08:	b	11eec <__sanitizer_set_report_fd@@Base+0x164c>
   11f0c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   11f10:	ldr	x0, [x0, #4056]
   11f14:	ldr	w1, [x0, #36]
   11f18:	cmp	w1, #0x0
   11f1c:	b.gt	11f28 <__sanitizer_set_report_fd@@Base+0x1688>
   11f20:	mov	w1, #0x1                   	// #1
   11f24:	str	w1, [x0, #36]
   11f28:	ldp	x19, x30, [sp], #16
   11f2c:	ret
   11f30:	cbz	x1, 11f5c <__sanitizer_set_report_fd@@Base+0x16bc>
   11f34:	stp	x19, x20, [sp, #-32]!
   11f38:	mov	x19, x0
   11f3c:	stp	x21, x30, [sp, #16]
   11f40:	ldp	x21, x20, [x0, #16]
   11f44:	stp	x1, xzr, [x0, #16]
   11f48:	bl	11ee4 <__sanitizer_set_report_fd@@Base+0x1644>
   11f4c:	stp	x21, x20, [x19, #16]
   11f50:	ldp	x21, x30, [sp, #16]
   11f54:	ldp	x19, x20, [sp], #32
   11f58:	ret
   11f5c:	ret
   11f60:	stp	x19, x20, [sp, #-80]!
   11f64:	mov	x20, x1
   11f68:	stp	x21, x22, [sp, #16]
   11f6c:	and	w21, w2, #0xff
   11f70:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   11f74:	stp	x23, x30, [sp, #32]
   11f78:	mov	x22, x0
   11f7c:	mov	x19, x2
   11f80:	ldr	x23, [x2, #4016]
   11f84:	ldr	x0, [x23]
   11f88:	cbnz	x0, 11f94 <__sanitizer_set_report_fd@@Base+0x16f4>
   11f8c:	bl	1352c <__sanitizer_set_report_fd@@Base+0x2c8c>
   11f90:	str	x0, [x23]
   11f94:	ldr	x2, [x19, #4016]
   11f98:	add	x5, sp, #0x34
   11f9c:	add	x3, sp, #0x48
   11fa0:	add	x1, sp, #0x38
   11fa4:	mov	x4, #0x8000                	// #32768
   11fa8:	ldr	x0, [x2]
   11fac:	add	x2, sp, #0x40
   11fb0:	cmp	x0, #0x8, lsl #12
   11fb4:	csel	x4, x0, x4, cs  // cs = hs, nlast
   11fb8:	mov	x0, x20
   11fbc:	bl	10734 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c60>
   11fc0:	ands	w19, w0, #0xff
   11fc4:	b.ne	11ff4 <__sanitizer_set_report_fd@@Base+0x1754>  // b.any
   11fc8:	cbnz	w21, 11fe0 <__sanitizer_set_report_fd@@Base+0x1740>
   11fcc:	ldr	w2, [sp, #52]
   11fd0:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   11fd4:	mov	x1, x20
   11fd8:	add	x0, x0, #0xc0
   11fdc:	bl	16994 <OnPrint@@Base+0x288>
   11fe0:	mov	w0, w21
   11fe4:	ldp	x21, x22, [sp, #16]
   11fe8:	ldp	x23, x30, [sp, #32]
   11fec:	ldp	x19, x20, [sp], #80
   11ff0:	ret
   11ff4:	ldr	x1, [sp, #56]
   11ff8:	mov	x0, x22
   11ffc:	mov	w21, w19
   12000:	bl	11f30 <__sanitizer_set_report_fd@@Base+0x1690>
   12004:	ldp	x0, x1, [sp, #56]
   12008:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1200c:	b	11fe0 <__sanitizer_set_report_fd@@Base+0x1740>
   12010:	ldr	w4, [x0, #8]
   12014:	mov	x6, x3
   12018:	sxtw	x3, w4
   1201c:	cmp	x3, #0xc7
   12020:	b.ls	12044 <__sanitizer_set_report_fd@@Base+0x17a4>  // b.plast
   12024:	str	x30, [sp, #-16]!
   12028:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1202c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12030:	add	x2, x2, #0xec
   12034:	add	x0, x0, #0x47
   12038:	mov	x4, #0xc8                  	// #200
   1203c:	mov	w1, #0x9e                  	// #158
   12040:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   12044:	mov	w5, #0x18                  	// #24
   12048:	ldr	x7, [x0]
   1204c:	smull	x5, w4, w5
   12050:	add	w4, w4, #0x1
   12054:	add	x3, x7, x5
   12058:	str	x1, [x7, x5]
   1205c:	stp	x6, x2, [x3, #8]
   12060:	str	w4, [x0, #8]
   12064:	ret
   12068:	stp	x19, x30, [sp, #-16]!
   1206c:	mov	x19, x0
   12070:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   12074:	add	x0, x0, #0xcf8
   12078:	mov	x1, #0x12c0                	// #4800
   1207c:	str	wzr, [x19, #8]
   12080:	add	x0, x0, #0xa8
   12084:	stp	xzr, xzr, [x19, #16]
   12088:	bl	c108 <__sancov_default_options@@Base+0x168>
   1208c:	str	x0, [x19]
   12090:	ldp	x19, x30, [sp], #16
   12094:	ret
   12098:	add	x2, x0, x2
   1209c:	cmp	x0, x2
   120a0:	b.eq	120b8 <__sanitizer_set_report_fd@@Base+0x1818>  // b.none
   120a4:	ldrb	w3, [x0]
   120a8:	cmp	w3, w1
   120ac:	b.eq	120bc <__sanitizer_set_report_fd@@Base+0x181c>  // b.none
   120b0:	add	x0, x0, #0x1
   120b4:	b	1209c <__sanitizer_set_report_fd@@Base+0x17fc>
   120b8:	mov	x0, #0x0                   	// #0
   120bc:	ret
   120c0:	mov	x3, x0
   120c4:	add	x2, x0, x2
   120c8:	mov	x0, #0x0                   	// #0
   120cc:	cmp	x3, x2
   120d0:	b.eq	120e8 <__sanitizer_set_report_fd@@Base+0x1848>  // b.none
   120d4:	ldrb	w4, [x3]
   120d8:	cmp	w4, w1
   120dc:	csel	x0, x0, x3, ne  // ne = any
   120e0:	add	x3, x3, #0x1
   120e4:	b	120cc <__sanitizer_set_report_fd@@Base+0x182c>
   120e8:	ret
   120ec:	mov	x3, #0x0                   	// #0
   120f0:	cmp	x3, x2
   120f4:	b.eq	1211c <__sanitizer_set_report_fd@@Base+0x187c>  // b.none
   120f8:	ldrb	w5, [x0, x3]
   120fc:	ldrb	w4, [x1, x3]
   12100:	cmp	w5, w4
   12104:	b.eq	12114 <__sanitizer_set_report_fd@@Base+0x1874>  // b.none
   12108:	mov	w0, #0x1                   	// #1
   1210c:	cneg	w0, w0, cc  // cc = lo, ul, last
   12110:	ret
   12114:	add	x3, x3, #0x1
   12118:	b	120f0 <__sanitizer_set_report_fd@@Base+0x1850>
   1211c:	mov	w0, #0x0                   	// #0
   12120:	b	12110 <__sanitizer_set_report_fd@@Base+0x1870>
   12124:	mov	x3, #0x0                   	// #0
   12128:	cmp	x3, x2
   1212c:	b.eq	12140 <__sanitizer_set_report_fd@@Base+0x18a0>  // b.none
   12130:	ldrb	w4, [x1, x3]
   12134:	strb	w4, [x0, x3]
   12138:	add	x3, x3, #0x1
   1213c:	b	12128 <__sanitizer_set_report_fd@@Base+0x1888>
   12140:	ret
   12144:	cmp	x0, x1
   12148:	b.cs	12168 <__sanitizer_set_report_fd@@Base+0x18c8>  // b.hs, b.nlast
   1214c:	mov	x3, #0x0                   	// #0
   12150:	cmp	x3, x2
   12154:	b.ge	1218c <__sanitizer_set_report_fd@@Base+0x18ec>  // b.tcont
   12158:	ldrb	w4, [x1, x3]
   1215c:	strb	w4, [x0, x3]
   12160:	add	x3, x3, #0x1
   12164:	b	12150 <__sanitizer_set_report_fd@@Base+0x18b0>
   12168:	cmp	x2, #0x0
   1216c:	ccmp	x0, x1, #0x0, gt
   12170:	b.ls	1218c <__sanitizer_set_report_fd@@Base+0x18ec>  // b.plast
   12174:	sub	x2, x2, #0x1
   12178:	ldrb	w3, [x1, x2]
   1217c:	strb	w3, [x0, x2]
   12180:	sub	x2, x2, #0x1
   12184:	cmn	x2, #0x1
   12188:	b.ne	12178 <__sanitizer_set_report_fd@@Base+0x18d8>  // b.any
   1218c:	ret
   12190:	orr	x3, x0, x2
   12194:	tst	x3, #0xf
   12198:	b.eq	121b8 <__sanitizer_set_report_fd@@Base+0x1918>  // b.none
   1219c:	add	x2, x0, x2
   121a0:	mov	x3, x0
   121a4:	and	w1, w1, #0xff
   121a8:	cmp	x2, x3
   121ac:	b.eq	121ec <__sanitizer_set_report_fd@@Base+0x194c>  // b.none
   121b0:	strb	w1, [x3], #1
   121b4:	b	121a8 <__sanitizer_set_report_fd@@Base+0x1908>
   121b8:	sxtw	x3, w1
   121bc:	sbfiz	x1, x1, #8, #32
   121c0:	orr	x1, x3, x1
   121c4:	and	x2, x2, #0xfffffffffffffff8
   121c8:	add	x2, x0, x2
   121cc:	mov	x3, x0
   121d0:	orr	x1, x1, x1, lsl #16
   121d4:	orr	x1, x1, x1, lsl #32
   121d8:	cmp	x2, x3
   121dc:	b.ls	121ec <__sanitizer_set_report_fd@@Base+0x194c>  // b.plast
   121e0:	str	x1, [x3, #8]
   121e4:	str	x1, [x3], #16
   121e8:	b	121d8 <__sanitizer_set_report_fd@@Base+0x1938>
   121ec:	ret
   121f0:	mov	x2, #0x0                   	// #0
   121f4:	ldrb	w3, [x0, x2]
   121f8:	ldrb	w4, [x1, x2]
   121fc:	cmp	w3, w4
   12200:	b.eq	12210 <__sanitizer_set_report_fd@@Base+0x1970>  // b.none
   12204:	mov	w0, #0x1                   	// #1
   12208:	cneg	w0, w0, cc  // cc = lo, ul, last
   1220c:	ret
   12210:	add	x2, x2, #0x1
   12214:	cbnz	w3, 121f4 <__sanitizer_set_report_fd@@Base+0x1954>
   12218:	mov	w0, #0x0                   	// #0
   1221c:	b	1220c <__sanitizer_set_report_fd@@Base+0x196c>
   12220:	mov	x3, #0x0                   	// #0
   12224:	cmp	x3, x2
   12228:	b.eq	12254 <__sanitizer_set_report_fd@@Base+0x19b4>  // b.none
   1222c:	ldrb	w4, [x0, x3]
   12230:	ldrb	w5, [x1, x3]
   12234:	cmp	w4, w5
   12238:	b.eq	12248 <__sanitizer_set_report_fd@@Base+0x19a8>  // b.none
   1223c:	mov	w0, #0x1                   	// #1
   12240:	cneg	w0, w0, cc  // cc = lo, ul, last
   12244:	ret
   12248:	cbz	w4, 12254 <__sanitizer_set_report_fd@@Base+0x19b4>
   1224c:	add	x3, x3, #0x1
   12250:	b	12224 <__sanitizer_set_report_fd@@Base+0x1984>
   12254:	mov	w0, #0x0                   	// #0
   12258:	b	12244 <__sanitizer_set_report_fd@@Base+0x19a4>
   1225c:	and	w1, w1, #0xff
   12260:	ldrb	w2, [x0]
   12264:	cmp	w2, w1
   12268:	b.eq	1227c <__sanitizer_set_report_fd@@Base+0x19dc>  // b.none
   1226c:	cbz	w2, 12278 <__sanitizer_set_report_fd@@Base+0x19d8>
   12270:	add	x0, x0, #0x1
   12274:	b	12260 <__sanitizer_set_report_fd@@Base+0x19c0>
   12278:	mov	x0, #0x0                   	// #0
   1227c:	ret
   12280:	mov	x3, #0x0                   	// #0
   12284:	mov	x5, x1
   12288:	mov	x4, x0
   1228c:	ldrb	w1, [x0, x3]
   12290:	cbnz	w1, 122c0 <__sanitizer_set_report_fd@@Base+0x1a20>
   12294:	mov	x0, x3
   12298:	ret
   1229c:	add	x3, x3, #0x1
   122a0:	ldrb	w1, [x4, x3]
   122a4:	cbz	w1, 122b4 <__sanitizer_set_report_fd@@Base+0x1a14>
   122a8:	mov	x0, x5
   122ac:	bl	1225c <__sanitizer_set_report_fd@@Base+0x19bc>
   122b0:	cbz	x0, 1229c <__sanitizer_set_report_fd@@Base+0x19fc>
   122b4:	mov	x0, x3
   122b8:	ldr	x30, [sp], #16
   122bc:	ret
   122c0:	str	x30, [sp, #-16]!
   122c4:	b	122a8 <__sanitizer_set_report_fd@@Base+0x1a08>
   122c8:	mov	x2, x0
   122cc:	mov	x0, #0x0                   	// #0
   122d0:	ldrb	w3, [x2]
   122d4:	cbz	w3, 122e8 <__sanitizer_set_report_fd@@Base+0x1a48>
   122d8:	cmp	w3, w1
   122dc:	csel	x0, x0, x2, ne  // ne = any
   122e0:	add	x2, x2, #0x1
   122e4:	b	122d0 <__sanitizer_set_report_fd@@Base+0x1a30>
   122e8:	ret
   122ec:	mov	x1, x0
   122f0:	mov	x0, #0x0                   	// #0
   122f4:	ldrb	w2, [x1, x0]
   122f8:	cbz	w2, 12304 <__sanitizer_set_report_fd@@Base+0x1a64>
   122fc:	add	x0, x0, #0x1
   12300:	b	122f4 <__sanitizer_set_report_fd@@Base+0x1a54>
   12304:	ret
   12308:	stp	x19, x20, [sp, #-32]!
   1230c:	mov	x20, x0
   12310:	str	x30, [sp, #16]
   12314:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   12318:	mov	x2, #0x0                   	// #0
   1231c:	mov	x19, x0
   12320:	mov	x1, #0x0                   	// #0
   12324:	add	x0, x0, #0x1
   12328:	bl	c408 <__sancov_default_options@@Base+0x468>
   1232c:	mov	x5, x0
   12330:	mov	x2, x19
   12334:	mov	x1, x20
   12338:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1233c:	strb	wzr, [x5, x19]
   12340:	mov	x0, x5
   12344:	ldr	x30, [sp, #16]
   12348:	ldp	x19, x20, [sp], #32
   1234c:	ret
   12350:	mov	x3, x0
   12354:	str	x30, [sp, #-16]!
   12358:	bl	1225c <__sanitizer_set_report_fd@@Base+0x19bc>
   1235c:	cbnz	x0, 1236c <__sanitizer_set_report_fd@@Base+0x1acc>
   12360:	mov	x0, x3
   12364:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   12368:	add	x0, x3, x0
   1236c:	ldr	x30, [sp], #16
   12370:	ret
   12374:	mov	x4, x0
   12378:	mov	x5, x1
   1237c:	mov	x6, x2
   12380:	str	x30, [sp, #-16]!
   12384:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   12388:	add	x3, x4, x0
   1238c:	mov	x0, #0x0                   	// #0
   12390:	cmp	x0, x6
   12394:	b.eq	123ac <__sanitizer_set_report_fd@@Base+0x1b0c>  // b.none
   12398:	ldrb	w1, [x5, x0]
   1239c:	cbz	w1, 123ac <__sanitizer_set_report_fd@@Base+0x1b0c>
   123a0:	add	x0, x0, #0x1
   123a4:	strb	w1, [x3], #1
   123a8:	b	12390 <__sanitizer_set_report_fd@@Base+0x1af0>
   123ac:	strb	wzr, [x3]
   123b0:	mov	x0, x4
   123b4:	ldr	x30, [sp], #16
   123b8:	ret
   123bc:	mov	x7, x0
   123c0:	mov	x5, x2
   123c4:	mov	x4, x1
   123c8:	str	x30, [sp, #-16]!
   123cc:	mov	x0, x1
   123d0:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   123d4:	mov	x6, x0
   123d8:	cmp	x0, x5
   123dc:	b.cs	123fc <__sanitizer_set_report_fd@@Base+0x1b5c>  // b.hs, b.nlast
   123e0:	add	x2, x0, #0x1
   123e4:	mov	x1, x4
   123e8:	mov	x0, x7
   123ec:	bl	12144 <__sanitizer_set_report_fd@@Base+0x18a4>
   123f0:	mov	x0, x6
   123f4:	ldr	x30, [sp], #16
   123f8:	ret
   123fc:	cbz	x5, 123f0 <__sanitizer_set_report_fd@@Base+0x1b50>
   12400:	sub	x5, x5, #0x1
   12404:	mov	x1, x4
   12408:	mov	x2, x5
   1240c:	mov	x0, x7
   12410:	bl	12144 <__sanitizer_set_report_fd@@Base+0x18a4>
   12414:	strb	wzr, [x7, x5]
   12418:	b	123f0 <__sanitizer_set_report_fd@@Base+0x1b50>
   1241c:	mov	x4, x0
   12420:	mov	x3, #0x0                   	// #0
   12424:	str	x30, [sp, #-16]!
   12428:	add	x0, x4, x3
   1242c:	cmp	x3, x2
   12430:	b.eq	12448 <__sanitizer_set_report_fd@@Base+0x1ba8>  // b.none
   12434:	ldrb	w5, [x1, x3]
   12438:	cbz	w5, 12448 <__sanitizer_set_report_fd@@Base+0x1ba8>
   1243c:	strb	w5, [x4, x3]
   12440:	add	x3, x3, #0x1
   12444:	b	12428 <__sanitizer_set_report_fd@@Base+0x1b88>
   12448:	sub	x2, x2, x3
   1244c:	mov	w1, #0x0                   	// #0
   12450:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   12454:	mov	x0, x4
   12458:	ldr	x30, [sp], #16
   1245c:	ret
   12460:	mov	x2, x0
   12464:	mov	x0, #0x0                   	// #0
   12468:	cmp	x0, x1
   1246c:	b.eq	12480 <__sanitizer_set_report_fd@@Base+0x1be0>  // b.none
   12470:	ldrb	w3, [x2, x0]
   12474:	cbz	w3, 12480 <__sanitizer_set_report_fd@@Base+0x1be0>
   12478:	add	x0, x0, #0x1
   1247c:	b	12468 <__sanitizer_set_report_fd@@Base+0x1bc8>
   12480:	ret
   12484:	mov	x5, x0
   12488:	mov	x6, x2
   1248c:	mov	x4, x1
   12490:	str	x30, [sp, #-16]!
   12494:	mov	x0, x1
   12498:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1249c:	mov	x7, x0
   124a0:	mov	x1, x6
   124a4:	mov	x0, x5
   124a8:	bl	12460 <__sanitizer_set_report_fd@@Base+0x1bc0>
   124ac:	add	x8, x7, x0
   124b0:	cmp	x6, x0
   124b4:	b.eq	124d4 <__sanitizer_set_report_fd@@Base+0x1c34>  // b.none
   124b8:	sub	x2, x6, x0
   124bc:	add	x0, x5, x0
   124c0:	cmp	x2, x7
   124c4:	b.ls	124e0 <__sanitizer_set_report_fd@@Base+0x1c40>  // b.plast
   124c8:	add	x2, x7, #0x1
   124cc:	mov	x1, x4
   124d0:	bl	12144 <__sanitizer_set_report_fd@@Base+0x18a4>
   124d4:	mov	x0, x8
   124d8:	ldr	x30, [sp], #16
   124dc:	ret
   124e0:	sub	x2, x2, #0x1
   124e4:	mov	x1, x4
   124e8:	bl	12144 <__sanitizer_set_report_fd@@Base+0x18a4>
   124ec:	add	x5, x5, x6
   124f0:	sturb	wzr, [x5, #-1]
   124f4:	b	124d4 <__sanitizer_set_report_fd@@Base+0x1c34>
   124f8:	mov	x9, x1
   124fc:	mov	x10, x0
   12500:	str	x30, [sp, #-16]!
   12504:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   12508:	mov	x6, x0
   1250c:	mov	x0, x9
   12510:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   12514:	cmp	x6, x0
   12518:	b.cc	12548 <__sanitizer_set_report_fd@@Base+0x1ca8>  // b.lo, b.ul, b.last
   1251c:	mov	x2, x0
   12520:	sub	x6, x6, x0
   12524:	mov	x8, #0x0                   	// #0
   12528:	add	x7, x10, x8
   1252c:	mov	x1, x9
   12530:	mov	x0, x7
   12534:	bl	120ec <__sanitizer_set_report_fd@@Base+0x184c>
   12538:	cbz	w0, 1254c <__sanitizer_set_report_fd@@Base+0x1cac>
   1253c:	add	x8, x8, #0x1
   12540:	cmp	x6, x8
   12544:	b.cs	12528 <__sanitizer_set_report_fd@@Base+0x1c88>  // b.hs, b.nlast
   12548:	mov	x7, #0x0                   	// #0
   1254c:	mov	x0, x7
   12550:	ldr	x30, [sp], #16
   12554:	ret
   12558:	cmp	w2, #0xa
   1255c:	b.eq	12588 <__sanitizer_set_report_fd@@Base+0x1ce8>  // b.none
   12560:	str	x30, [sp, #-16]!
   12564:	sxtw	x3, w2
   12568:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1256c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12570:	add	x0, x0, #0x11c
   12574:	add	x2, x2, #0x109
   12578:	mov	x4, #0xa                   	// #10
   1257c:	mov	w1, #0xe5                  	// #229
   12580:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   12584:	add	x0, x0, #0x1
   12588:	ldrb	w2, [x0]
   1258c:	cmp	w2, #0x20
   12590:	b.eq	12584 <__sanitizer_set_report_fd@@Base+0x1ce4>  // b.none
   12594:	sub	w3, w2, #0x9
   12598:	and	w3, w3, #0xff
   1259c:	cmp	w3, #0x4
   125a0:	b.ls	12584 <__sanitizer_set_report_fd@@Base+0x1ce4>  // b.plast
   125a4:	cmp	w2, #0x2b
   125a8:	b.ne	125b8 <__sanitizer_set_report_fd@@Base+0x1d18>  // b.any
   125ac:	add	x4, x0, #0x1
   125b0:	mov	w6, #0x1                   	// #1
   125b4:	b	125c8 <__sanitizer_set_report_fd@@Base+0x1d28>
   125b8:	cmp	w2, #0x2d
   125bc:	b.ne	1261c <__sanitizer_set_report_fd@@Base+0x1d7c>  // b.any
   125c0:	add	x4, x0, #0x1
   125c4:	mov	w6, #0xffffffff            	// #-1
   125c8:	mov	x8, #0x9999999999999999    	// #-7378697629483820647
   125cc:	mov	w5, #0x0                   	// #0
   125d0:	mov	x2, #0x0                   	// #0
   125d4:	movk	x8, #0x1999, lsl #48
   125d8:	mov	x7, #0xffffffffffffffff    	// #-1
   125dc:	mov	x9, #0xa                   	// #10
   125e0:	ldrb	w3, [x4]
   125e4:	sub	w3, w3, #0x30
   125e8:	cmp	w3, #0x9
   125ec:	b.hi	12624 <__sanitizer_set_report_fd@@Base+0x1d84>  // b.pmore
   125f0:	mul	x5, x2, x9
   125f4:	cmp	x2, x8
   125f8:	sxtw	x2, w3
   125fc:	add	x4, x4, #0x1
   12600:	csel	x5, x5, x7, ls  // ls = plast
   12604:	mvn	x3, x2
   12608:	cmp	x3, x5
   1260c:	add	x2, x2, x5
   12610:	csel	x2, x2, x7, cs  // cs = hs, nlast
   12614:	mov	w5, #0x1                   	// #1
   12618:	b	125e0 <__sanitizer_set_report_fd@@Base+0x1d40>
   1261c:	mov	x4, x0
   12620:	b	125b0 <__sanitizer_set_report_fd@@Base+0x1d10>
   12624:	cbz	x1, 12634 <__sanitizer_set_report_fd@@Base+0x1d94>
   12628:	cmp	w5, #0x0
   1262c:	csel	x4, x4, x0, ne  // ne = any
   12630:	str	x4, [x1]
   12634:	cmp	w6, #0x1
   12638:	b.ne	1264c <__sanitizer_set_report_fd@@Base+0x1dac>  // b.any
   1263c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   12640:	cmp	x2, x0
   12644:	csel	x0, x2, x0, ls  // ls = plast
   12648:	ret
   1264c:	cmp	x2, #0x0
   12650:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12654:	csneg	x0, x0, x2, lt  // lt = tstop
   12658:	ret
   1265c:	mov	w2, #0xa                   	// #10
   12660:	mov	x1, #0x0                   	// #0
   12664:	b	12558 <__sanitizer_set_report_fd@@Base+0x1cb8>
   12668:	mov	x4, #0x10000000000         	// #1099511627776
   1266c:	mov	x3, x1
   12670:	cmp	x1, x4
   12674:	b.ls	12694 <__sanitizer_set_report_fd@@Base+0x1df4>  // b.plast
   12678:	str	x30, [sp, #-16]!
   1267c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12680:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12684:	add	x2, x2, #0x158
   12688:	add	x0, x0, #0x11c
   1268c:	mov	w1, #0x104                 	// #260
   12690:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   12694:	add	x3, x0, x1
   12698:	add	x2, x0, #0x7
   1269c:	and	x2, x2, #0xfffffffffffffff8
   126a0:	and	x4, x3, #0xfffffffffffffff8
   126a4:	mov	x5, x0
   126a8:	mov	x1, #0x0                   	// #0
   126ac:	cmp	x5, x2
   126b0:	ccmp	x5, x3, #0x2, cc  // cc = lo, ul, last
   126b4:	b.cs	126c4 <__sanitizer_set_report_fd@@Base+0x1e24>  // b.hs, b.nlast
   126b8:	ldrb	w6, [x5], #1
   126bc:	orr	x1, x1, x6
   126c0:	b	126ac <__sanitizer_set_report_fd@@Base+0x1e0c>
   126c4:	cmp	x2, x4
   126c8:	b.cs	126d8 <__sanitizer_set_report_fd@@Base+0x1e38>  // b.hs, b.nlast
   126cc:	ldr	x5, [x2], #8
   126d0:	orr	x1, x1, x5
   126d4:	b	126c4 <__sanitizer_set_report_fd@@Base+0x1e24>
   126d8:	cmp	x0, x4
   126dc:	b.hi	126f4 <__sanitizer_set_report_fd@@Base+0x1e54>  // b.pmore
   126e0:	cmp	x4, x3
   126e4:	b.cs	126f4 <__sanitizer_set_report_fd@@Base+0x1e54>  // b.hs, b.nlast
   126e8:	ldrb	w0, [x4], #1
   126ec:	orr	x1, x1, x0
   126f0:	b	126e0 <__sanitizer_set_report_fd@@Base+0x1e40>
   126f4:	cmp	x1, #0x0
   126f8:	cset	w0, eq  // eq = none
   126fc:	ret
   12700:	mov	x1, #0x4810                	// #18448
   12704:	add	x0, x0, x1
   12708:	b	1316c <__sanitizer_set_report_fd@@Base+0x28cc>
   1270c:	stp	x19, x20, [sp, #-48]!
   12710:	mov	x20, x0
   12714:	stp	x21, x22, [sp, #16]
   12718:	mov	x21, x1
   1271c:	mov	x1, #0x4810                	// #18448
   12720:	add	x22, x0, x1
   12724:	str	x30, [sp, #32]
   12728:	mov	x0, x22
   1272c:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   12730:	ldr	x19, [x20, #18536]
   12734:	cmp	x19, #0x3ff
   12738:	b.ls	1275c <__sanitizer_set_report_fd@@Base+0x1ebc>  // b.plast
   1273c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   12740:	mov	x2, #0x400                 	// #1024
   12744:	ldr	x0, [x0, #4024]
   12748:	ldr	x1, [x0]
   1274c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12750:	add	x0, x0, #0x175
   12754:	bl	16a18 <OnPrint@@Base+0x30c>
   12758:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1275c:	add	x0, x19, #0x1
   12760:	str	x0, [x20, #18536]
   12764:	mov	x0, x21
   12768:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   1276c:	add	x1, x20, x19, lsl #5
   12770:	add	x1, x1, #0x4, lsl #12
   12774:	ldr	x30, [sp, #32]
   12778:	str	x0, [x1, #2160]
   1277c:	str	xzr, [x1, #2168]
   12780:	mov	x0, x22
   12784:	str	xzr, [x1, #2176]
   12788:	strb	wzr, [x1, #2184]
   1278c:	ldp	x21, x22, [sp, #16]
   12790:	ldp	x19, x20, [sp], #48
   12794:	b	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   12798:	stp	x19, x20, [sp, #-176]!
   1279c:	mov	x3, #0x4810                	// #18448
   127a0:	mov	x20, x0
   127a4:	stp	x23, x24, [sp, #32]
   127a8:	add	x23, x0, x3
   127ac:	mov	x0, x23
   127b0:	add	x19, sp, #0x70
   127b4:	stp	x21, x22, [sp, #16]
   127b8:	mov	x22, x1
   127bc:	stp	x25, x26, [sp, #48]
   127c0:	stp	x27, x28, [sp, #64]
   127c4:	str	x30, [sp, #80]
   127c8:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   127cc:	mov	x0, x19
   127d0:	mov	x1, #0x1000                	// #4096
   127d4:	stp	xzr, xzr, [sp, #112]
   127d8:	str	xzr, [sp, #128]
   127dc:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
   127e0:	ldr	x0, [sp, #128]
   127e4:	cmp	x0, #0xfff
   127e8:	b.hi	12820 <__sanitizer_set_report_fd@@Base+0x1f80>  // b.pmore
   127ec:	ldr	x0, [sp, #120]
   127f0:	cmp	x0, #0xfff
   127f4:	b.hi	12804 <__sanitizer_set_report_fd@@Base+0x1f64>  // b.pmore
   127f8:	mov	x0, x19
   127fc:	mov	x1, #0x1000                	// #4096
   12800:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
   12804:	ldr	x3, [sp, #112]
   12808:	mov	x2, #0x1000                	// #4096
   1280c:	ldr	x0, [sp, #128]
   12810:	mov	w1, #0x0                   	// #0
   12814:	sub	x2, x2, x0
   12818:	add	x0, x3, x0
   1281c:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   12820:	mov	x2, #0x4870                	// #18544
   12824:	mov	x0, #0x1000                	// #4096
   12828:	add	x21, x20, x2
   1282c:	mov	x1, #0x0                   	// #0
   12830:	stp	x0, xzr, [sp, #128]
   12834:	mov	x0, x19
   12838:	bl	7e64 <__asan_backtrace_open@plt+0x1354>
   1283c:	strb	wzr, [x0]
   12840:	cbz	x22, 128c0 <__sanitizer_set_report_fd@@Base+0x2020>
   12844:	ldr	x1, [sp, #112]
   12848:	mov	x0, x22
   1284c:	ldr	x2, [sp, #128]
   12850:	sub	x2, x2, #0x1
   12854:	bl	12e30 <__sanitizer_set_report_fd@@Base+0x2590>
   12858:	cbz	x0, 128c0 <__sanitizer_set_report_fd@@Base+0x2020>
   1285c:	mov	x0, x19
   12860:	mov	x1, #0x0                   	// #0
   12864:	bl	7e64 <__asan_backtrace_open@plt+0x1354>
   12868:	ldrb	w0, [x0]
   1286c:	cbz	w0, 128c0 <__sanitizer_set_report_fd@@Base+0x2020>
   12870:	mov	x19, x21
   12874:	mov	x24, #0x0                   	// #0
   12878:	ldr	x0, [x20, #18536]
   1287c:	cmp	x0, x24
   12880:	b.ls	128c0 <__sanitizer_set_report_fd@@Base+0x2020>  // b.plast
   12884:	ldrb	w0, [x19, #24]
   12888:	cbnz	w0, 128b4 <__sanitizer_set_report_fd@@Base+0x2014>
   1288c:	ldr	x0, [x19, #16]
   12890:	cbnz	x0, 128b4 <__sanitizer_set_report_fd@@Base+0x2014>
   12894:	ldr	x0, [x19]
   12898:	mov	x1, x22
   1289c:	bl	e024 <__sancov_default_options@@Base+0x2084>
   128a0:	tst	w0, #0xff
   128a4:	b.eq	128b4 <__sanitizer_set_report_fd@@Base+0x2014>  // b.none
   128a8:	ldr	x0, [sp, #112]
   128ac:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   128b0:	str	x0, [x19, #16]
   128b4:	add	x24, x24, #0x1
   128b8:	add	x19, x19, #0x20
   128bc:	b	12878 <__sanitizer_set_report_fd@@Base+0x1fd8>
   128c0:	adrp	x25, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   128c4:	add	x0, sp, #0x90
   128c8:	strb	wzr, [sp, #168]
   128cc:	bl	14558 <__sanitizer_set_report_fd@@Base+0x3cb8>
   128d0:	ldr	x0, [x25, #3896]
   128d4:	adrp	x26, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   128d8:	add	x26, x26, #0x1f3
   128dc:	mov	x22, #0x0                   	// #0
   128e0:	str	x0, [sp, #104]
   128e4:	ldr	x19, [sp, #144]
   128e8:	mov	x0, #0x48                  	// #72
   128ec:	ldr	x24, [sp, #160]
   128f0:	madd	x24, x24, x0, x19
   128f4:	ldr	x0, [x20, #18536]
   128f8:	cmp	x0, x22
   128fc:	b.ls	12a48 <__sanitizer_set_report_fd@@Base+0x21a8>  // b.plast
   12900:	mov	w28, #0x0                   	// #0
   12904:	cmp	x19, x24
   12908:	b.eq	12a08 <__sanitizer_set_report_fd@@Base+0x2168>  // b.none
   1290c:	ldr	x25, [x19, #56]
   12910:	cbz	x25, 12a00 <__sanitizer_set_report_fd@@Base+0x2160>
   12914:	ldrb	w27, [x25, #24]
   12918:	cbz	w27, 12974 <__sanitizer_set_report_fd@@Base+0x20d4>
   1291c:	ldr	x1, [x19]
   12920:	ldr	x0, [x21]
   12924:	bl	e024 <__sancov_default_options@@Base+0x2084>
   12928:	tst	w0, #0xff
   1292c:	b.eq	12960 <__sanitizer_set_report_fd@@Base+0x20c0>  // b.none
   12930:	cbz	w28, 1297c <__sanitizer_set_report_fd@@Base+0x20dc>
   12934:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   12938:	add	x20, x20, x22, lsl #5
   1293c:	ldr	x4, [x19]
   12940:	ldr	x0, [x0, #4024]
   12944:	ldr	x2, [x20, #18544]
   12948:	ldr	x1, [x0]
   1294c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12950:	ldr	x3, [x20, #18552]
   12954:	add	x0, x0, #0x19f
   12958:	bl	16a18 <OnPrint@@Base+0x30c>
   1295c:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   12960:	ldr	x0, [x21, #16]
   12964:	cbz	x0, 12974 <__sanitizer_set_report_fd@@Base+0x20d4>
   12968:	ldr	x1, [x19]
   1296c:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   12970:	cbz	w0, 12930 <__sanitizer_set_report_fd@@Base+0x2090>
   12974:	ldr	x25, [x25]
   12978:	b	12910 <__sanitizer_set_report_fd@@Base+0x2070>
   1297c:	ldrb	w28, [x21, #24]
   12980:	cbnz	w28, 12974 <__sanitizer_set_report_fd@@Base+0x20d4>
   12984:	ldr	x0, [sp, #104]
   12988:	ldr	w0, [x0]
   1298c:	cbz	w0, 129a0 <__sanitizer_set_report_fd@@Base+0x2100>
   12990:	ldr	x2, [x19]
   12994:	mov	x0, x26
   12998:	ldr	x1, [x21]
   1299c:	bl	16a18 <OnPrint@@Base+0x30c>
   129a0:	mov	w0, #0x1                   	// #1
   129a4:	strb	w0, [x21, #24]
   129a8:	ldr	x0, [x19]
   129ac:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   129b0:	ldr	x3, [x20]
   129b4:	str	x0, [x21, #8]
   129b8:	cmp	x3, #0x7f
   129bc:	b.ls	129dc <__sanitizer_set_report_fd@@Base+0x213c>  // b.plast
   129c0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   129c4:	add	x2, x2, #0x232
   129c8:	mov	x4, #0x80                  	// #128
   129cc:	mov	w1, #0x52                  	// #82
   129d0:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   129d4:	add	x0, x0, #0x281
   129d8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   129dc:	add	x0, x20, x3, lsl #4
   129e0:	add	x3, x3, #0x1
   129e4:	ldr	x1, [x25, #8]
   129e8:	str	x1, [x0, #8]
   129ec:	ldr	x1, [x25, #16]
   129f0:	str	x1, [x0, #16]
   129f4:	dmb	ish
   129f8:	str	x3, [x20]
   129fc:	mov	w28, w27
   12a00:	add	x19, x19, #0x48
   12a04:	b	12904 <__sanitizer_set_report_fd@@Base+0x2064>
   12a08:	ldrb	w0, [x21, #24]
   12a0c:	cbz	w0, 12a3c <__sanitizer_set_report_fd@@Base+0x219c>
   12a10:	cbnz	w28, 12a3c <__sanitizer_set_report_fd@@Base+0x219c>
   12a14:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   12a18:	add	x20, x20, x22, lsl #5
   12a1c:	ldr	x0, [x0, #4024]
   12a20:	ldr	x3, [x20, #18544]
   12a24:	ldr	x1, [x0]
   12a28:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12a2c:	ldr	x2, [x20, #18552]
   12a30:	add	x0, x0, #0x2c2
   12a34:	bl	16a18 <OnPrint@@Base+0x30c>
   12a38:	b	1295c <__sanitizer_set_report_fd@@Base+0x20bc>
   12a3c:	add	x22, x22, #0x1
   12a40:	add	x21, x21, #0x20
   12a44:	b	128e4 <__sanitizer_set_report_fd@@Base+0x2044>
   12a48:	add	x0, x20, #0xc, lsl #12
   12a4c:	ldrb	w0, [x0, #2160]
   12a50:	cbz	w0, 12b1c <__sanitizer_set_report_fd@@Base+0x227c>
   12a54:	adrp	x22, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   12a58:	adrp	x25, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12a5c:	add	x25, x25, #0x31a
   12a60:	ldr	x22, [x22, #3896]
   12a64:	cmp	x24, x19
   12a68:	b.eq	12b1c <__sanitizer_set_report_fd@@Base+0x227c>  // b.none
   12a6c:	ldrb	w0, [x19, #44]
   12a70:	cbz	w0, 12b14 <__sanitizer_set_report_fd@@Base+0x2274>
   12a74:	ldr	x21, [x19, #56]
   12a78:	cbz	x21, 12b14 <__sanitizer_set_report_fd@@Base+0x2274>
   12a7c:	ldrb	w0, [x21, #24]
   12a80:	cbz	w0, 12ae8 <__sanitizer_set_report_fd@@Base+0x2248>
   12a84:	ldr	x1, [x21, #8]
   12a88:	mov	x0, x20
   12a8c:	bl	12b78 <__sanitizer_set_report_fd@@Base+0x22d8>
   12a90:	tst	w0, #0xff
   12a94:	b.ne	12ad0 <__sanitizer_set_report_fd@@Base+0x2230>  // b.any
   12a98:	ldr	w0, [x22]
   12a9c:	cbz	w0, 12ab0 <__sanitizer_set_report_fd@@Base+0x2210>
   12aa0:	ldp	x1, x2, [x21, #8]
   12aa4:	mov	x0, x25
   12aa8:	ldr	x3, [x19]
   12aac:	bl	16a18 <OnPrint@@Base+0x30c>
   12ab0:	ldr	x3, [x20, #2056]
   12ab4:	cmp	x3, #0x3ff
   12ab8:	b.ls	12af0 <__sanitizer_set_report_fd@@Base+0x2250>  // b.plast
   12abc:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12ac0:	mov	x4, #0x400                 	// #1024
   12ac4:	add	x2, x2, #0x34d
   12ac8:	mov	w1, #0x6f                  	// #111
   12acc:	b	129d0 <__sanitizer_set_report_fd@@Base+0x2130>
   12ad0:	ldr	x1, [x21, #16]
   12ad4:	mov	x0, x20
   12ad8:	sub	x1, x1, #0x1
   12adc:	bl	12b78 <__sanitizer_set_report_fd@@Base+0x22d8>
   12ae0:	tst	w0, #0xff
   12ae4:	b.eq	12a98 <__sanitizer_set_report_fd@@Base+0x21f8>  // b.none
   12ae8:	ldr	x21, [x21]
   12aec:	b	12a78 <__sanitizer_set_report_fd@@Base+0x21d8>
   12af0:	add	x0, x20, x3, lsl #4
   12af4:	add	x3, x3, #0x1
   12af8:	ldr	x1, [x21, #8]
   12afc:	str	x1, [x0, #2064]
   12b00:	ldr	x1, [x21, #16]
   12b04:	str	x1, [x0, #2072]
   12b08:	dmb	ish
   12b0c:	str	x3, [x20, #2056]
   12b10:	b	12ae8 <__sanitizer_set_report_fd@@Base+0x2248>
   12b14:	add	x19, x19, #0x48
   12b18:	b	12a64 <__sanitizer_set_report_fd@@Base+0x21c4>
   12b1c:	ldr	x19, [sp, #144]
   12b20:	mov	x0, #0x48                  	// #72
   12b24:	ldr	x20, [sp, #160]
   12b28:	madd	x20, x20, x0, x19
   12b2c:	cmp	x20, x19
   12b30:	b.eq	12b44 <__sanitizer_set_report_fd@@Base+0x22a4>  // b.none
   12b34:	mov	x0, x19
   12b38:	add	x19, x19, #0x48
   12b3c:	bl	dda8 <__sancov_default_options@@Base+0x1e08>
   12b40:	b	12b2c <__sanitizer_set_report_fd@@Base+0x228c>
   12b44:	ldp	x0, x1, [sp, #112]
   12b48:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   12b4c:	mov	x0, x23
   12b50:	bl	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   12b54:	ldp	x21, x22, [sp, #16]
   12b58:	ldp	x23, x24, [sp, #32]
   12b5c:	ldp	x25, x26, [sp, #48]
   12b60:	ldp	x27, x28, [sp, #64]
   12b64:	ldr	x30, [sp, #80]
   12b68:	ldp	x19, x20, [sp], #176
   12b6c:	ret
   12b70:	mov	x1, #0x0                   	// #0
   12b74:	b	12798 <__sanitizer_set_report_fd@@Base+0x1ef8>
   12b78:	ldr	x3, [x0, #2056]
   12b7c:	dmb	ish
   12b80:	add	x0, x0, #0x810
   12b84:	mov	x2, #0x0                   	// #0
   12b88:	cmp	x2, x3
   12b8c:	b.eq	12bb4 <__sanitizer_set_report_fd@@Base+0x2314>  // b.none
   12b90:	ldr	x4, [x0]
   12b94:	cmp	x1, x4
   12b98:	b.cc	12ba8 <__sanitizer_set_report_fd@@Base+0x2308>  // b.lo, b.ul, b.last
   12b9c:	ldr	x4, [x0, #8]
   12ba0:	cmp	x1, x4
   12ba4:	b.cc	12bbc <__sanitizer_set_report_fd@@Base+0x231c>  // b.lo, b.ul, b.last
   12ba8:	add	x2, x2, #0x1
   12bac:	add	x0, x0, #0x10
   12bb0:	b	12b88 <__sanitizer_set_report_fd@@Base+0x22e8>
   12bb4:	mov	w0, #0x0                   	// #0
   12bb8:	ret
   12bbc:	mov	w0, #0x1                   	// #1
   12bc0:	b	12bb8 <__sanitizer_set_report_fd@@Base+0x2318>
   12bc4:	stp	x19, x20, [sp, #-64]!
   12bc8:	mov	x19, x1
   12bcc:	mov	x20, x0
   12bd0:	mov	w2, #0x0                   	// #0
   12bd4:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12bd8:	mov	x0, #0x3e80                	// #16000
   12bdc:	add	x1, x1, #0x3a6
   12be0:	str	x30, [sp, #16]
   12be4:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   12be8:	str	x0, [x19]
   12bec:	add	x2, sp, #0x30
   12bf0:	add	x3, sp, #0x38
   12bf4:	add	x1, sp, #0x28
   12bf8:	mov	x0, x20
   12bfc:	mov	x5, #0x0                   	// #0
   12c00:	mov	x4, #0x100000              	// #1048576
   12c04:	bl	10734 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c60>
   12c08:	tst	w0, #0xff
   12c0c:	ldr	x2, [x19]
   12c10:	b.ne	12c24 <__sanitizer_set_report_fd@@Base+0x2384>  // b.any
   12c14:	str	xzr, [x2]
   12c18:	ldr	x30, [sp, #16]
   12c1c:	ldp	x19, x20, [sp], #64
   12c20:	ret
   12c24:	ldr	x0, [sp, #40]
   12c28:	str	x0, [x2]
   12c2c:	mov	x0, #0x1                   	// #1
   12c30:	mov	w1, w0
   12c34:	ldr	x4, [sp, #40]
   12c38:	ldrb	w3, [x4, x0]
   12c3c:	add	x0, x0, #0x1
   12c40:	cbnz	w3, 12c34 <__sanitizer_set_report_fd@@Base+0x2394>
   12c44:	add	x7, x4, x0
   12c48:	ldrb	w4, [x4, x0]
   12c4c:	sxtw	x3, w1
   12c50:	sbfiz	x6, x1, #3, #32
   12c54:	add	x5, x2, w1, sxtw #3
   12c58:	cbz	w4, 12c8c <__sanitizer_set_report_fd@@Base+0x23ec>
   12c5c:	str	x7, [x2, x6]
   12c60:	cmp	w1, #0x7cf
   12c64:	b.le	12c84 <__sanitizer_set_report_fd@@Base+0x23e4>
   12c68:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12c6c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12c70:	add	x2, x2, #0x3b7
   12c74:	add	x0, x0, #0x3d5
   12c78:	mov	x4, #0x7cf                 	// #1999
   12c7c:	mov	w1, #0x23f                 	// #575
   12c80:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   12c84:	add	w1, w1, #0x1
   12c88:	b	12c34 <__sanitizer_set_report_fd@@Base+0x2394>
   12c8c:	str	xzr, [x5]
   12c90:	b	12c18 <__sanitizer_set_report_fd@@Base+0x2378>
   12c94:	cmn	x0, #0x1, lsl #12
   12c98:	b.ls	12cb0 <__sanitizer_set_report_fd@@Base+0x2410>  // b.plast
   12c9c:	cbz	x1, 12ca8 <__sanitizer_set_report_fd@@Base+0x2408>
   12ca0:	neg	w0, w0
   12ca4:	str	w0, [x1]
   12ca8:	mov	w0, #0x1                   	// #1
   12cac:	b	12cb4 <__sanitizer_set_report_fd@@Base+0x2414>
   12cb0:	mov	w0, #0x0                   	// #0
   12cb4:	ret
   12cb8:	mov	x8, #0xde                  	// #222
   12cbc:	sxtw	x2, w2
   12cc0:	sxtw	x3, w3
   12cc4:	sxtw	x4, w4
   12cc8:	svc	#0x0
   12ccc:	ret
   12cd0:	mov	x8, #0xd7                  	// #215
   12cd4:	svc	#0x0
   12cd8:	ret
   12cdc:	mov	x8, #0xe2                  	// #226
   12ce0:	sxtw	x2, w2
   12ce4:	svc	#0x0
   12ce8:	ret
   12cec:	mov	x8, #0x39                  	// #57
   12cf0:	sxtw	x0, w0
   12cf4:	svc	#0x0
   12cf8:	ret
   12cfc:	mov	x3, x0
   12d00:	sxtw	x2, w1
   12d04:	mov	x8, #0x38                  	// #56
   12d08:	mov	x0, #0xffffffffffffff9c    	// #-100
   12d0c:	mov	x1, x3
   12d10:	svc	#0x0
   12d14:	ret
   12d18:	mov	w4, w1
   12d1c:	mov	x5, x0
   12d20:	mov	w3, w2
   12d24:	mov	x8, #0x38                  	// #56
   12d28:	mov	x0, #0xffffffffffffff9c    	// #-100
   12d2c:	mov	x1, x5
   12d30:	sxtw	x2, w4
   12d34:	svc	#0x0
   12d38:	ret
   12d3c:	sxtw	x3, w0
   12d40:	mov	x0, x3
   12d44:	mov	x8, #0x3f                  	// #63
   12d48:	svc	#0x0
   12d4c:	cmn	x0, #0x1, lsl #12
   12d50:	b.ls	12d5c <__sanitizer_set_report_fd@@Base+0x24bc>  // b.plast
   12d54:	cmn	w0, #0x4
   12d58:	b.eq	12d40 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.none
   12d5c:	ret
   12d60:	sxtw	x3, w0
   12d64:	mov	x0, x3
   12d68:	mov	x8, #0x40                  	// #64
   12d6c:	svc	#0x0
   12d70:	cmn	x0, #0x1, lsl #12
   12d74:	b.ls	12d80 <__sanitizer_set_report_fd@@Base+0x24e0>  // b.plast
   12d78:	cmn	w0, #0x4
   12d7c:	b.eq	12d64 <__sanitizer_set_report_fd@@Base+0x24c4>  // b.none
   12d80:	ret
   12d84:	sxtw	x2, w0
   12d88:	mov	x0, x2
   12d8c:	mov	x8, #0x2e                  	// #46
   12d90:	svc	#0x0
   12d94:	cmn	x0, #0x1, lsl #12
   12d98:	b.ls	12da4 <__sanitizer_set_report_fd@@Base+0x2504>  // b.plast
   12d9c:	cmn	w0, #0x4
   12da0:	b.eq	12d88 <__sanitizer_set_report_fd@@Base+0x24e8>  // b.none
   12da4:	ret
   12da8:	mov	x3, x0
   12dac:	mov	x2, x1
   12db0:	mov	x8, #0x4f                  	// #79
   12db4:	mov	x1, x3
   12db8:	mov	x0, #0xffffffffffffff9c    	// #-100
   12dbc:	mov	x3, #0x0                   	// #0
   12dc0:	svc	#0x0
   12dc4:	ret
   12dc8:	mov	x3, x0
   12dcc:	mov	x2, x1
   12dd0:	mov	x8, #0x4f                  	// #79
   12dd4:	mov	x1, x3
   12dd8:	mov	x0, #0xffffffffffffff9c    	// #-100
   12ddc:	mov	x3, #0x100                 	// #256
   12de0:	svc	#0x0
   12de4:	ret
   12de8:	mov	x8, #0x50                  	// #80
   12dec:	sxtw	x0, w0
   12df0:	svc	#0x0
   12df4:	ret
   12df8:	str	x30, [sp, #-144]!
   12dfc:	add	x1, sp, #0x10
   12e00:	bl	12de8 <__sanitizer_set_report_fd@@Base+0x2548>
   12e04:	cmp	x0, #0x0
   12e08:	ldr	x0, [sp, #64]
   12e0c:	ldr	x30, [sp], #144
   12e10:	csinv	x0, x0, xzr, eq  // eq = none
   12e14:	ret
   12e18:	mov	x8, #0x18                  	// #24
   12e1c:	sxtw	x0, w0
   12e20:	sxtw	x1, w1
   12e24:	mov	x2, #0x0                   	// #0
   12e28:	svc	#0x0
   12e2c:	ret
   12e30:	mov	x5, x0
   12e34:	mov	x4, x1
   12e38:	mov	x3, x2
   12e3c:	mov	x8, #0x4e                  	// #78
   12e40:	mov	x0, #0xffffffffffffff9c    	// #-100
   12e44:	mov	x1, x5
   12e48:	mov	x2, x4
   12e4c:	svc	#0x0
   12e50:	ret
   12e54:	mov	x1, x0
   12e58:	mov	x8, #0x23                  	// #35
   12e5c:	mov	x0, #0xffffffffffffff9c    	// #-100
   12e60:	mov	x2, #0x0                   	// #0
   12e64:	svc	#0x0
   12e68:	ret
   12e6c:	mov	x2, x0
   12e70:	mov	x3, x1
   12e74:	mov	x0, #0xffffffffffffff9c    	// #-100
   12e78:	mov	x1, x2
   12e7c:	mov	x8, #0x26                  	// #38
   12e80:	mov	x2, x0
   12e84:	svc	#0x0
   12e88:	ret
   12e8c:	mov	x8, #0x7c                  	// #124
   12e90:	svc	#0x0
   12e94:	ret
   12e98:	sxtw	x0, w0
   12e9c:	mov	x8, #0x5e                  	// #94
   12ea0:	str	x30, [sp, #-16]!
   12ea4:	svc	#0x0
   12ea8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   12eac:	sub	sp, sp, #0x10
   12eb0:	mov	x0, #0x1                   	// #1
   12eb4:	mov	x8, #0x65                  	// #101
   12eb8:	stp	x0, xzr, [sp]
   12ebc:	mov	x0, sp
   12ec0:	mov	x1, x0
   12ec4:	svc	#0x0
   12ec8:	cmp	w0, #0x0
   12ecc:	ldr	w0, [sp]
   12ed0:	add	sp, sp, #0x10
   12ed4:	csel	w0, w0, wzr, ne  // ne = any
   12ed8:	ret
   12edc:	mov	x8, #0xdd                  	// #221
   12ee0:	svc	#0x0
   12ee4:	ret
   12ee8:	sub	sp, sp, #0x80
   12eec:	mov	x1, x0
   12ef0:	mov	x2, sp
   12ef4:	mov	x8, #0x4f                  	// #79
   12ef8:	mov	x0, #0xffffffffffffff9c    	// #-100
   12efc:	mov	x3, #0x0                   	// #0
   12f00:	svc	#0x0
   12f04:	cbnz	x0, 12f20 <__sanitizer_set_report_fd@@Base+0x2680>
   12f08:	ldr	w0, [sp, #16]
   12f0c:	and	w0, w0, #0xf000
   12f10:	cmp	w0, #0x8, lsl #12
   12f14:	cset	w0, eq  // eq = none
   12f18:	add	sp, sp, #0x80
   12f1c:	ret
   12f20:	mov	w0, #0x0                   	// #0
   12f24:	b	12f18 <__sanitizer_set_report_fd@@Base+0x2678>
   12f28:	mov	x8, #0xb2                  	// #178
   12f2c:	svc	#0x0
   12f30:	ret
   12f34:	mov	x8, #0x83                  	// #131
   12f38:	sxtw	x0, w0
   12f3c:	sxtw	x2, w2
   12f40:	svc	#0x0
   12f44:	ret
   12f48:	stp	x19, x30, [sp, #-32]!
   12f4c:	mov	x2, #0x10                  	// #16
   12f50:	mov	w1, #0x0                   	// #0
   12f54:	add	x19, sp, #0x10
   12f58:	mov	x0, x19
   12f5c:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   12f60:	mov	x8, #0xa9                  	// #169
   12f64:	mov	x0, x19
   12f68:	mov	x1, #0x0                   	// #0
   12f6c:	svc	#0x0
   12f70:	ldp	x2, x1, [sp, #16]
   12f74:	mov	x0, #0x3e8                 	// #1000
   12f78:	ldp	x19, x30, [sp], #32
   12f7c:	mul	x1, x1, x0
   12f80:	mov	x0, #0xca00                	// #51712
   12f84:	movk	x0, #0x3b9a, lsl #16
   12f88:	madd	x0, x2, x0, x1
   12f8c:	ret
   12f90:	mov	x8, #0x71                  	// #113
   12f94:	sxtw	x0, w0
   12f98:	svc	#0x0
   12f9c:	ret
   12fa0:	stp	x19, x20, [sp, #-64]!
   12fa4:	adrp	x19, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   12fa8:	stp	x23, x30, [sp, #32]
   12fac:	mov	x23, x0
   12fb0:	ldrb	w0, [x19, #3504]
   12fb4:	stp	x21, x22, [sp, #16]
   12fb8:	cbnz	w0, 12ff4 <__sanitizer_set_report_fd@@Base+0x2754>
   12fbc:	add	x20, x19, #0xdb0
   12fc0:	mov	w0, #0x1                   	// #1
   12fc4:	add	x3, x20, #0x8
   12fc8:	strb	w0, [x19, #3504]
   12fcc:	add	x2, sp, #0x38
   12fd0:	add	x1, x20, #0x10
   12fd4:	mov	x5, #0x0                   	// #0
   12fd8:	mov	x4, #0x4000000             	// #67108864
   12fdc:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   12fe0:	add	x0, x0, #0x412
   12fe4:	bl	10734 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c60>
   12fe8:	tst	w0, #0xff
   12fec:	b.ne	12ff4 <__sanitizer_set_report_fd@@Base+0x2754>  // b.any
   12ff0:	str	xzr, [x20, #16]
   12ff4:	add	x19, x19, #0xdb0
   12ff8:	ldr	x0, [x19, #16]
   12ffc:	cbz	x0, 13080 <__sanitizer_set_report_fd@@Base+0x27e0>
   13000:	ldr	x0, [x19, #8]
   13004:	cbz	x0, 13080 <__sanitizer_set_report_fd@@Base+0x27e0>
   13008:	mov	x0, x23
   1300c:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   13010:	ldr	x20, [x19, #16]
   13014:	mov	x21, x0
   13018:	ldrb	w0, [x20]
   1301c:	cbz	w0, 13080 <__sanitizer_set_report_fd@@Base+0x27e0>
   13020:	ldp	x2, x0, [x19, #8]
   13024:	mov	w1, #0x0                   	// #0
   13028:	sub	x0, x20, x0
   1302c:	sub	x2, x2, x0
   13030:	mov	x0, x20
   13034:	bl	12098 <__sanitizer_set_report_fd@@Base+0x17f8>
   13038:	mov	x22, x0
   1303c:	cbz	x0, 13080 <__sanitizer_set_report_fd@@Base+0x27e0>
   13040:	mov	x2, x21
   13044:	mov	x1, x23
   13048:	mov	x0, x20
   1304c:	bl	120ec <__sanitizer_set_report_fd@@Base+0x184c>
   13050:	cbnz	w0, 13078 <__sanitizer_set_report_fd@@Base+0x27d8>
   13054:	ldrb	w0, [x20, x21]
   13058:	cmp	w0, #0x3d
   1305c:	b.ne	13078 <__sanitizer_set_report_fd@@Base+0x27d8>  // b.any
   13060:	add	x0, x21, #0x1
   13064:	add	x0, x20, x0
   13068:	ldp	x21, x22, [sp, #16]
   1306c:	ldp	x23, x30, [sp, #32]
   13070:	ldp	x19, x20, [sp], #64
   13074:	ret
   13078:	add	x20, x22, #0x1
   1307c:	b	13018 <__sanitizer_set_report_fd@@Base+0x2778>
   13080:	mov	x0, #0x0                   	// #0
   13084:	b	13068 <__sanitizer_set_report_fd@@Base+0x27c8>
   13088:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1308c:	str	x30, [sp, #-32]!
   13090:	ldr	x0, [x0, #4048]
   13094:	cbz	x0, 130b0 <__sanitizer_set_report_fd@@Base+0x2810>
   13098:	ldr	x0, [x0]
   1309c:	add	x0, x0, #0x8
   130a0:	str	x0, [sp, #16]
   130a4:	ldr	x0, [sp, #16]
   130a8:	ldr	x30, [sp], #32
   130ac:	ret
   130b0:	add	x1, sp, #0x10
   130b4:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   130b8:	add	x0, x0, #0x425
   130bc:	bl	12bc4 <__sanitizer_set_report_fd@@Base+0x2324>
   130c0:	add	x1, sp, #0x18
   130c4:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   130c8:	add	x0, x0, #0x412
   130cc:	bl	12bc4 <__sanitizer_set_report_fd@@Base+0x2324>
   130d0:	b	130a4 <__sanitizer_set_report_fd@@Base+0x2804>
   130d4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   130d8:	str	x30, [sp, #-32]!
   130dc:	ldr	x0, [x0, #4048]
   130e0:	cbz	x0, 13134 <__sanitizer_set_report_fd@@Base+0x2894>
   130e4:	ldr	x2, [x0]
   130e8:	mov	x1, x2
   130ec:	ldr	x0, [x1], #8
   130f0:	add	x0, x2, w0, sxtw #3
   130f4:	add	x0, x0, #0x10
   130f8:	stp	x1, x0, [sp, #16]
   130fc:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13100:	ldp	x1, x2, [sp, #16]
   13104:	add	x0, x0, #0x438
   13108:	bl	12edc <__sanitizer_set_report_fd@@Base+0x263c>
   1310c:	cmn	x0, #0x1, lsl #12
   13110:	b.hi	13158 <__sanitizer_set_report_fd@@Base+0x28b8>  // b.pmore
   13114:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13118:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1311c:	add	x2, x2, #0x447
   13120:	add	x0, x0, #0x3d5
   13124:	mov	x4, #0x1                   	// #1
   13128:	mov	x3, #0x0                   	// #0
   1312c:	mov	w1, #0x286                 	// #646
   13130:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   13134:	add	x1, sp, #0x10
   13138:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1313c:	add	x0, x0, #0x425
   13140:	bl	12bc4 <__sanitizer_set_report_fd@@Base+0x2324>
   13144:	add	x1, sp, #0x18
   13148:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1314c:	add	x0, x0, #0x412
   13150:	bl	12bc4 <__sanitizer_set_report_fd@@Base+0x2324>
   13154:	b	130fc <__sanitizer_set_report_fd@@Base+0x285c>
   13158:	neg	w1, w0
   1315c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13160:	add	x0, x0, #0x476
   13164:	bl	16994 <OnPrint@@Base+0x288>
   13168:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1316c:	mov	x2, #0x58                  	// #88
   13170:	mov	w1, #0x0                   	// #0
   13174:	b	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   13178:	ldr	x3, [x0, #80]
   1317c:	cbz	x3, 131a0 <__sanitizer_set_report_fd@@Base+0x2900>
   13180:	str	x30, [sp, #-16]!
   13184:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13188:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1318c:	add	x2, x2, #0x48f
   13190:	add	x0, x0, #0x3d5
   13194:	mov	x4, #0x0                   	// #0
   13198:	mov	w1, #0x298                 	// #664
   1319c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   131a0:	mov	x6, x0
   131a4:	mov	w1, #0x1                   	// #1
   131a8:	ldxr	w0, [x6]
   131ac:	stxr	w2, w1, [x6]
   131b0:	cbnz	w2, 131a8 <__sanitizer_set_report_fd@@Base+0x2908>
   131b4:	dmb	ish
   131b8:	cbz	w0, 131f8 <__sanitizer_set_report_fd@@Base+0x2958>
   131bc:	mov	w7, #0x2                   	// #2
   131c0:	ldxr	w0, [x6]
   131c4:	stxr	w1, w7, [x6]
   131c8:	cbnz	w1, 131c0 <__sanitizer_set_report_fd@@Base+0x2920>
   131cc:	dmb	ish
   131d0:	cbz	w0, 131f8 <__sanitizer_set_report_fd@@Base+0x2958>
   131d4:	mov	x0, x6
   131d8:	mov	x8, #0x62                  	// #98
   131dc:	mov	x1, #0x80                  	// #128
   131e0:	mov	x2, #0x2                   	// #2
   131e4:	mov	x3, #0x0                   	// #0
   131e8:	mov	x4, #0x0                   	// #0
   131ec:	mov	x5, #0x0                   	// #0
   131f0:	svc	#0x0
   131f4:	b	131c0 <__sanitizer_set_report_fd@@Base+0x2920>
   131f8:	ret
   131fc:	mov	x1, x0
   13200:	dmb	ish
   13204:	ldxr	w2, [x1]
   13208:	stxr	w3, wzr, [x1]
   1320c:	cbnz	w3, 13204 <__sanitizer_set_report_fd@@Base+0x2964>
   13210:	dmb	ish
   13214:	cbnz	w2, 1323c <__sanitizer_set_report_fd@@Base+0x299c>
   13218:	str	x30, [sp, #-16]!
   1321c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13220:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13224:	add	x2, x2, #0x4a3
   13228:	add	x0, x0, #0x3d5
   1322c:	mov	x4, #0x0                   	// #0
   13230:	mov	x3, #0x0                   	// #0
   13234:	mov	w1, #0x2ab                 	// #683
   13238:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1323c:	cmp	w2, #0x2
   13240:	b.ne	13260 <__sanitizer_set_report_fd@@Base+0x29c0>  // b.any
   13244:	mov	x8, #0x62                  	// #98
   13248:	mov	x1, #0x81                  	// #129
   1324c:	mov	x2, #0x1                   	// #1
   13250:	mov	x3, #0x0                   	// #0
   13254:	mov	x4, #0x0                   	// #0
   13258:	mov	x5, #0x0                   	// #0
   1325c:	svc	#0x0
   13260:	ret
   13264:	ldr	w0, [x0]
   13268:	cbnz	w0, 13290 <__sanitizer_set_report_fd@@Base+0x29f0>
   1326c:	str	x30, [sp, #-16]!
   13270:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13274:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13278:	add	x2, x2, #0x4bc
   1327c:	add	x0, x0, #0x3d5
   13280:	mov	x4, #0x0                   	// #0
   13284:	mov	x3, #0x0                   	// #0
   13288:	mov	w1, #0x2b9                 	// #697
   1328c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   13290:	ret
   13294:	mov	x8, #0x75                  	// #117
   13298:	sxtw	x0, w0
   1329c:	sxtw	x1, w1
   132a0:	svc	#0x0
   132a4:	ret
   132a8:	mov	x8, #0x104                 	// #260
   132ac:	sxtw	x0, w0
   132b0:	sxtw	x2, w2
   132b4:	mov	x3, #0x0                   	// #0
   132b8:	svc	#0x0
   132bc:	ret
   132c0:	mov	x8, #0xac                  	// #172
   132c4:	svc	#0x0
   132c8:	ret
   132cc:	mov	x8, #0xad                  	// #173
   132d0:	svc	#0x0
   132d4:	ret
   132d8:	mov	x8, #0x3d                  	// #61
   132dc:	sxtw	x0, w0
   132e0:	mov	w2, w2
   132e4:	svc	#0x0
   132e8:	ret
   132ec:	mov	x8, #0x3e                  	// #62
   132f0:	sxtw	x0, w0
   132f4:	sxtw	x2, w2
   132f8:	svc	#0x0
   132fc:	ret
   13300:	mov	x8, #0xa7                  	// #167
   13304:	sxtw	x0, w0
   13308:	svc	#0x0
   1330c:	ret
   13310:	mov	x8, #0x84                  	// #132
   13314:	svc	#0x0
   13318:	ret
   1331c:	mov	x8, #0xdc                  	// #220
   13320:	mov	x0, #0x11                  	// #17
   13324:	mov	x1, #0x0                   	// #0
   13328:	svc	#0x0
   1332c:	ret
   13330:	stp	x19, x20, [sp, #-112]!
   13334:	mov	x20, x1
   13338:	mov	x19, x2
   1333c:	stp	x21, x22, [sp, #16]
   13340:	add	x21, sp, #0x30
   13344:	mov	x2, #0x20                  	// #32
   13348:	mov	w1, #0x0                   	// #0
   1334c:	mov	w22, w0
   13350:	mov	x0, x21
   13354:	stp	x23, x30, [sp, #32]
   13358:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1335c:	add	x23, sp, #0x50
   13360:	mov	x2, #0x20                  	// #32
   13364:	mov	x0, x23
   13368:	mov	w1, #0x0                   	// #0
   1336c:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   13370:	cbz	x20, 133a0 <__sanitizer_set_report_fd@@Base+0x2b00>
   13374:	mov	x1, x20
   13378:	mov	x2, #0x8                   	// #8
   1337c:	ldr	x0, [x1], #8
   13380:	str	x0, [sp, #48]
   13384:	add	x0, x21, #0x18
   13388:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1338c:	ldr	w1, [x20, #136]
   13390:	ldr	x0, [x20, #144]
   13394:	orr	w1, w1, #0x4000000
   13398:	sxtw	x1, w1
   1339c:	stp	x1, x0, [sp, #56]
   133a0:	cmp	x20, #0x0
   133a4:	csel	x1, x21, xzr, ne  // ne = any
   133a8:	cmp	x19, #0x0
   133ac:	sxtw	x0, w22
   133b0:	csel	x2, x23, xzr, ne  // ne = any
   133b4:	mov	x8, #0x86                  	// #134
   133b8:	mov	x3, #0x8                   	// #8
   133bc:	svc	#0x0
   133c0:	cmp	x0, #0x0
   133c4:	mov	x20, x0
   133c8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   133cc:	b.eq	133f8 <__sanitizer_set_report_fd@@Base+0x2b58>  // b.none
   133d0:	mov	x0, x19
   133d4:	mov	x2, x3
   133d8:	ldr	x1, [sp, #80]
   133dc:	str	x1, [x0], #8
   133e0:	add	x1, x23, #0x18
   133e4:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   133e8:	ldr	x0, [sp, #88]
   133ec:	str	w0, [x19, #136]
   133f0:	ldr	x0, [sp, #96]
   133f4:	str	x0, [x19, #144]
   133f8:	mov	w0, w20
   133fc:	ldp	x21, x22, [sp, #16]
   13400:	ldp	x23, x30, [sp, #32]
   13404:	ldp	x19, x20, [sp], #112
   13408:	ret
   1340c:	mov	x8, #0x87                  	// #135
   13410:	sxtw	x0, w0
   13414:	mov	x3, #0x8                   	// #8
   13418:	svc	#0x0
   1341c:	ret
   13420:	mov	x2, #0x80                  	// #128
   13424:	mov	w1, #0xff                  	// #255
   13428:	b	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1342c:	mov	x2, #0x80                  	// #128
   13430:	mov	w1, #0x0                   	// #0
   13434:	b	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   13438:	sub	w1, w1, #0x1
   1343c:	sxtw	x3, w1
   13440:	cmp	x3, #0x3ff
   13444:	b.ls	13468 <__sanitizer_set_report_fd@@Base+0x2bc8>  // b.plast
   13448:	str	x30, [sp, #-16]!
   1344c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13450:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13454:	add	x2, x2, #0x4f8
   13458:	add	x0, x0, #0x3d5
   1345c:	mov	x4, #0x400                 	// #1024
   13460:	mov	w1, #0x381                 	// #897
   13464:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   13468:	lsr	x3, x3, #3
   1346c:	and	w1, w1, #0x7
   13470:	mov	w2, #0x1                   	// #1
   13474:	lsl	w1, w2, w1
   13478:	ldrb	w2, [x0, x3]
   1347c:	bic	w1, w2, w1
   13480:	strb	w1, [x0, x3]
   13484:	ret
   13488:	sub	w1, w1, #0x1
   1348c:	sxtw	x3, w1
   13490:	cmp	x3, #0x3ff
   13494:	b.ls	134b8 <__sanitizer_set_report_fd@@Base+0x2c18>  // b.plast
   13498:	str	x30, [sp, #-16]!
   1349c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   134a0:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   134a4:	add	x2, x2, #0x4f8
   134a8:	add	x0, x0, #0x3d5
   134ac:	mov	x4, #0x400                 	// #1024
   134b0:	mov	w1, #0x38b                 	// #907
   134b4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   134b8:	lsr	x3, x3, #3
   134bc:	and	w1, w1, #0x7
   134c0:	ldrb	w0, [x0, x3]
   134c4:	asr	w0, w0, w1
   134c8:	and	w0, w0, #0x1
   134cc:	ret
   134d0:	mov	x2, x0
   134d4:	ldr	w0, [x0, #4]
   134d8:	sxtw	x1, w0
   134dc:	cmn	x1, #0x1, lsl #12
   134e0:	b.hi	134f8 <__sanitizer_set_report_fd@@Base+0x2c58>  // b.pmore
   134e4:	str	x30, [sp, #-16]!
   134e8:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   134ec:	ldp	x0, x1, [x2, #8]
   134f0:	ldr	x30, [sp], #16
   134f4:	b	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   134f8:	ldp	x0, x1, [x2, #8]
   134fc:	b	134f4 <__sanitizer_set_report_fd@@Base+0x2c54>
   13500:	stp	x29, x30, [sp, #-16]!
   13504:	mov	x29, sp
   13508:	mov	x0, x29
   1350c:	bl	c6f4 <__sancov_default_options@@Base+0x754>
   13510:	add	w1, w0, #0x1
   13514:	mov	x0, #0x1                   	// #1
   13518:	ldp	x29, x30, [sp], #16
   1351c:	lsl	x0, x0, x1
   13520:	sub	x0, x0, #0x1
   13524:	ret
   13528:	b	13500 <__sanitizer_set_report_fd@@Base+0x2c60>
   1352c:	mov	x0, #0x6                   	// #6
   13530:	b	6940 <getauxval@plt>
   13534:	stp	x19, x20, [sp, #-32]!
   13538:	mov	x2, x1
   1353c:	mov	x20, x0
   13540:	stp	x21, x30, [sp, #16]
   13544:	adrp	x21, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13548:	add	x21, x21, #0x438
   1354c:	mov	x19, x1
   13550:	mov	x1, x0
   13554:	mov	x0, x21
   13558:	bl	12e30 <__sanitizer_set_report_fd@@Base+0x2590>
   1355c:	cmn	x0, #0x1, lsl #12
   13560:	b.ls	135bc <__sanitizer_set_report_fd@@Base+0x2d1c>  // b.plast
   13564:	neg	w1, w0
   13568:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1356c:	add	x0, x0, #0x51a
   13570:	bl	16a18 <OnPrint@@Base+0x30c>
   13574:	mov	x1, x19
   13578:	mov	x3, x21
   1357c:	mov	x0, x20
   13580:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   13584:	add	x2, x2, #0x85d
   13588:	bl	16710 <OnPrint@@Base+0x4>
   1358c:	mov	w1, w0
   13590:	sxtw	x0, w0
   13594:	cmp	x19, w1, sxtw
   13598:	b.hi	135bc <__sanitizer_set_report_fd@@Base+0x2d1c>  // b.pmore
   1359c:	mov	x3, x0
   135a0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   135a4:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   135a8:	mov	x4, x19
   135ac:	add	x2, x2, #0x57a
   135b0:	add	x0, x0, #0x3d5
   135b4:	mov	w1, #0x470                 	// #1136
   135b8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   135bc:	ldp	x21, x30, [sp, #16]
   135c0:	ldp	x19, x20, [sp], #32
   135c4:	ret
   135c8:	stp	x19, x20, [sp, #-64]!
   135cc:	mov	x5, #0x0                   	// #0
   135d0:	mov	x19, x0
   135d4:	mov	x20, x1
   135d8:	add	x3, sp, #0x38
   135dc:	add	x2, sp, #0x30
   135e0:	add	x1, sp, #0x28
   135e4:	mov	x4, #0x100000              	// #1048576
   135e8:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   135ec:	add	x0, x0, #0x425
   135f0:	str	x30, [sp, #16]
   135f4:	bl	10734 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c60>
   135f8:	tst	w0, #0xff
   135fc:	b.eq	1362c <__sanitizer_set_report_fd@@Base+0x2d8c>  // b.none
   13600:	ldr	x1, [sp, #40]
   13604:	mov	x2, x20
   13608:	mov	x0, x19
   1360c:	bl	1241c <__sanitizer_set_report_fd@@Base+0x1b7c>
   13610:	ldp	x0, x1, [sp, #40]
   13614:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   13618:	mov	x0, x19
   1361c:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   13620:	ldr	x30, [sp, #16]
   13624:	ldp	x19, x20, [sp], #64
   13628:	ret
   1362c:	mov	x1, x20
   13630:	mov	x0, x19
   13634:	bl	13534 <__sanitizer_set_report_fd@@Base+0x2c94>
   13638:	b	13620 <__sanitizer_set_report_fd@@Base+0x2d80>
   1363c:	stp	x19, x20, [sp, #-32]!
   13640:	mov	x19, x0
   13644:	stp	x21, x30, [sp, #16]
   13648:	mov	x21, x1
   1364c:	ldrb	w1, [x19]
   13650:	cbz	w1, 1365c <__sanitizer_set_report_fd@@Base+0x2dbc>
   13654:	add	x19, x19, #0x1
   13658:	b	1364c <__sanitizer_set_report_fd@@Base+0x2dac>
   1365c:	ldrb	w1, [x19]
   13660:	cmp	x19, x0
   13664:	b.ls	13678 <__sanitizer_set_report_fd@@Base+0x2dd8>  // b.plast
   13668:	cmp	w1, #0x2f
   1366c:	b.eq	13680 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   13670:	sub	x19, x19, #0x1
   13674:	b	1365c <__sanitizer_set_report_fd@@Base+0x2dbc>
   13678:	cmp	w1, #0x2f
   1367c:	b.ne	13684 <__sanitizer_set_report_fd@@Base+0x2de4>  // b.any
   13680:	add	x19, x19, #0x1
   13684:	mov	x0, x21
   13688:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1368c:	mov	x1, x21
   13690:	mov	x20, x0
   13694:	mov	x2, x0
   13698:	mov	x0, x19
   1369c:	bl	12220 <__sanitizer_set_report_fd@@Base+0x1980>
   136a0:	cbnz	w0, 136c4 <__sanitizer_set_report_fd@@Base+0x2e24>
   136a4:	ldrb	w0, [x19, x20]
   136a8:	sub	w0, w0, #0x2d
   136ac:	and	w0, w0, #0xff
   136b0:	cmp	w0, #0x1
   136b4:	cset	w0, ls  // ls = plast
   136b8:	ldp	x21, x30, [sp, #16]
   136bc:	ldp	x19, x20, [sp], #32
   136c0:	ret
   136c4:	mov	w0, #0x0                   	// #0
   136c8:	b	136b8 <__sanitizer_set_report_fd@@Base+0x2e18>
   136cc:	stp	x19, x20, [sp, #-80]!
   136d0:	stp	x21, x22, [sp, #16]
   136d4:	stp	x23, x24, [sp, #32]
   136d8:	stp	x25, x26, [sp, #48]
   136dc:	str	x30, [sp, #64]
   136e0:	cbnz	x0, 13704 <__sanitizer_set_report_fd@@Base+0x2e64>
   136e4:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   136e8:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   136ec:	add	x2, x2, #0x59c
   136f0:	add	x0, x0, #0x3d5
   136f4:	mov	x4, #0x0                   	// #0
   136f8:	mov	x3, #0x0                   	// #0
   136fc:	mov	w1, #0x495                 	// #1173
   13700:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   13704:	ldr	x20, [x0]
   13708:	mov	x24, x1
   1370c:	mov	x0, #0xffffffffffffffff    	// #-1
   13710:	ldrh	w2, [x20, #54]
   13714:	ldrh	w22, [x20, #56]
   13718:	ldr	x19, [x20, #32]
   1371c:	mul	w22, w22, w2
   13720:	add	x19, x20, x19
   13724:	and	x2, x2, #0xffff
   13728:	mov	x1, x19
   1372c:	add	x22, x19, w22, sxtw
   13730:	cmp	x1, x22
   13734:	b.eq	13758 <__sanitizer_set_report_fd@@Base+0x2eb8>  // b.none
   13738:	ldr	w3, [x1]
   1373c:	cmp	w3, #0x1
   13740:	b.ne	13750 <__sanitizer_set_report_fd@@Base+0x2eb0>  // b.any
   13744:	ldr	x3, [x1, #16]
   13748:	cmp	x0, x3
   1374c:	csel	x0, x0, x3, ls  // ls = plast
   13750:	add	x1, x1, x2
   13754:	b	13730 <__sanitizer_set_report_fd@@Base+0x2e90>
   13758:	sub	x21, x20, x0
   1375c:	cmp	x19, x22
   13760:	b.eq	137b4 <__sanitizer_set_report_fd@@Base+0x2f14>  // b.none
   13764:	ldr	w0, [x19]
   13768:	cmp	w0, #0x1
   1376c:	b.ne	137a8 <__sanitizer_set_report_fd@@Base+0x2f08>  // b.any
   13770:	ldr	x23, [x19, #16]
   13774:	ldr	x26, [x19, #40]
   13778:	add	x25, x21, x23
   1377c:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   13780:	neg	x23, x0
   13784:	add	x26, x25, x26
   13788:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   1378c:	and	x23, x23, x25
   13790:	mov	x1, x0
   13794:	mov	x0, x26
   13798:	bl	c730 <__sancov_default_options@@Base+0x790>
   1379c:	sub	x1, x0, x23
   137a0:	mov	x0, x23
   137a4:	blr	x24
   137a8:	ldrh	w0, [x20, #54]
   137ac:	add	x19, x19, x0
   137b0:	b	1375c <__sanitizer_set_report_fd@@Base+0x2ebc>
   137b4:	ldp	x21, x22, [sp, #16]
   137b8:	ldp	x23, x24, [sp, #32]
   137bc:	ldp	x25, x26, [sp, #48]
   137c0:	ldr	x30, [sp, #64]
   137c4:	ldp	x19, x20, [sp], #80
   137c8:	ret
   137cc:	cmp	x0, #0x0
   137d0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   137d4:	b.eq	13844 <__sanitizer_set_report_fd@@Base+0x2fa4>  // b.none
   137d8:	str	x30, [sp, #-16]!
   137dc:	ands	x9, x1, #0xf
   137e0:	b.eq	13804 <__sanitizer_set_report_fd@@Base+0x2f64>  // b.none
   137e4:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   137e8:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   137ec:	mov	x4, x9
   137f0:	add	x2, x2, #0x5b3
   137f4:	add	x0, x0, #0x3d5
   137f8:	mov	x3, #0x0                   	// #0
   137fc:	mov	w1, #0x54b                 	// #1355
   13800:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   13804:	stp	x0, x3, [x1, #-16]
   13808:	sub	x1, x1, #0x10
   1380c:	mov	x0, x2
   13810:	mov	x2, x4
   13814:	mov	x3, x5
   13818:	mov	x4, x6
   1381c:	mov	x8, #0xdc                  	// #220
   13820:	svc	#0x0
   13824:	cmp	x0, #0x0
   13828:	b.ne	1383c <__sanitizer_set_report_fd@@Base+0x2f9c>  // b.any
   1382c:	ldp	x1, x0, [sp], #16
   13830:	blr	x1
   13834:	mov	x8, #0x5d                  	// #93
   13838:	svc	#0x0
   1383c:	ldr	x30, [sp], #16
   13840:	ret
   13844:	mov	x0, #0xffffffffffffffea    	// #-22
   13848:	ret
   1384c:	sub	w0, w0, #0x4
   13850:	cmp	w0, #0x7
   13854:	b.hi	138f0 <__sanitizer_set_report_fd@@Base+0x3050>  // b.pmore
   13858:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1385c:	add	x1, x1, #0x83c
   13860:	ldrb	w0, [x1, w0, uxtw]
   13864:	adr	x1, 13870 <__sanitizer_set_report_fd@@Base+0x2fd0>
   13868:	add	x0, x1, w0, sxtb #2
   1386c:	br	x0
   13870:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   13874:	ldr	x0, [x0, #4056]
   13878:	ldr	w0, [x0, #80]
   1387c:	cmp	w0, #0x1
   13880:	b.ne	1389c <__sanitizer_set_report_fd@@Base+0x2ffc>  // b.any
   13884:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   13888:	ldr	x1, [x1, #4056]
   1388c:	ldrb	w1, [x1, #96]
   13890:	cmp	w1, #0x0
   13894:	mov	w1, #0x2                   	// #2
   13898:	csel	w0, w0, w1, ne  // ne = any
   1389c:	ret
   138a0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   138a4:	ldr	x0, [x0, #4056]
   138a8:	ldr	w0, [x0, #84]
   138ac:	b	1387c <__sanitizer_set_report_fd@@Base+0x2fdc>
   138b0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   138b4:	ldr	x0, [x0, #4056]
   138b8:	ldr	w0, [x0, #88]
   138bc:	b	1387c <__sanitizer_set_report_fd@@Base+0x2fdc>
   138c0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   138c4:	ldr	x0, [x0, #4056]
   138c8:	ldr	w0, [x0, #92]
   138cc:	b	1387c <__sanitizer_set_report_fd@@Base+0x2fdc>
   138d0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   138d4:	ldr	x0, [x0, #4056]
   138d8:	ldr	w0, [x0, #72]
   138dc:	b	1387c <__sanitizer_set_report_fd@@Base+0x2fdc>
   138e0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   138e4:	ldr	x0, [x0, #4056]
   138e8:	ldr	w0, [x0, #76]
   138ec:	b	1387c <__sanitizer_set_report_fd@@Base+0x2fdc>
   138f0:	mov	w0, #0x0                   	// #0
   138f4:	b	1389c <__sanitizer_set_report_fd@@Base+0x2ffc>
   138f8:	stp	x19, x20, [sp, #-320]!
   138fc:	mov	x20, x1
   13900:	mov	x19, x0
   13904:	stp	x21, x22, [sp, #16]
   13908:	add	x21, sp, #0x40
   1390c:	mov	x0, x21
   13910:	str	x30, [sp, #32]
   13914:	bl	13420 <__sanitizer_set_report_fd@@Base+0x2b80>
   13918:	add	x22, sp, #0xc0
   1391c:	mov	x0, x21
   13920:	mov	w1, #0x21                  	// #33
   13924:	bl	13438 <__sanitizer_set_report_fd@@Base+0x2b98>
   13928:	mov	x2, x22
   1392c:	mov	x1, x21
   13930:	mov	w0, #0x2                   	// #2
   13934:	bl	1340c <__sanitizer_set_report_fd@@Base+0x2b6c>
   13938:	mov	x3, x20
   1393c:	mov	x2, x19
   13940:	add	x0, sp, #0x38
   13944:	mov	x1, #0x0                   	// #0
   13948:	bl	69c0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   1394c:	mov	x1, x22
   13950:	mov	x2, #0x0                   	// #0
   13954:	mov	w0, #0x2                   	// #2
   13958:	bl	1340c <__sanitizer_set_report_fd@@Base+0x2b6c>
   1395c:	ldp	x21, x22, [sp, #16]
   13960:	ldr	x30, [sp, #32]
   13964:	ldr	x0, [sp, #56]
   13968:	ldp	x19, x20, [sp], #320
   1396c:	ret
   13970:	mov	x1, #0x0                   	// #0
   13974:	b	6680 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   13978:	ldr	x1, [x0, #8]
   1397c:	mov	w2, #0x5201                	// #20993
   13980:	movk	w2, #0x4553, lsl #16
   13984:	add	x1, x1, #0x1d0
   13988:	ldr	w0, [x1, #4]
   1398c:	cbz	w0, 139a8 <__sanitizer_set_report_fd@@Base+0x3108>
   13990:	ldr	w3, [x1]
   13994:	cmp	w3, w2
   13998:	b.ne	139ac <__sanitizer_set_report_fd@@Base+0x310c>  // b.any
   1399c:	ldr	x0, [x1, #8]
   139a0:	ubfx	w0, w0, #6, #1
   139a4:	add	w0, w0, #0x1
   139a8:	ret
   139ac:	add	x1, x1, w0, uxtw
   139b0:	b	13988 <__sanitizer_set_report_fd@@Base+0x30e8>
   139b4:	ret
   139b8:	ldr	x1, [x0, #8]
   139bc:	ldr	x2, [x1, #440]
   139c0:	str	x2, [x0, #24]
   139c4:	ldr	x2, [x1, #416]
   139c8:	ldr	x1, [x1, #432]
   139cc:	stp	x1, x2, [x0, #32]
   139d0:	ret
   139d4:	ret
   139d8:	ret
   139dc:	ret
   139e0:	tbz	w1, #3, 13a00 <__sanitizer_set_report_fd@@Base+0x3160>
   139e4:	mov	x2, x0
   139e8:	mov	x1, x0
   139ec:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   139f0:	add	x0, x0, #0x5d7
   139f4:	str	x30, [sp, #-16]!
   139f8:	bl	16a18 <OnPrint@@Base+0x30c>
   139fc:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   13a00:	ret
   13a04:	str	x30, [sp, #-16]!
   13a08:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13a0c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13a10:	add	x2, x2, #0x6ea
   13a14:	add	x0, x0, #0x3d5
   13a18:	mov	x4, #0x0                   	// #0
   13a1c:	mov	x3, #0x0                   	// #0
   13a20:	mov	w1, #0x80a                 	// #2058
   13a24:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   13a28:	sub	x3, x1, #0x1
   13a2c:	cmp	x3, #0xff
   13a30:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
   13a34:	b.ne	13a4c <__sanitizer_set_report_fd@@Base+0x31ac>  // b.any
   13a38:	mov	w0, #0x0                   	// #0
   13a3c:	ret
   13a40:	mov	w0, #0x0                   	// #0
   13a44:	ldr	x30, [sp], #16
   13a48:	ret
   13a4c:	adrp	x3, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   13a50:	add	x3, x3, #0xdb0
   13a54:	mov	x6, x0
   13a58:	mov	x5, x1
   13a5c:	ldrb	w4, [x3, #24]
   13a60:	tst	w4, #0xff
   13a64:	b.ne	13a94 <__sanitizer_set_report_fd@@Base+0x31f4>  // b.any
   13a68:	and	w2, w2, #0xff
   13a6c:	mov	x8, #0x116                 	// #278
   13a70:	eor	w2, w2, #0x1
   13a74:	and	x2, x2, #0xff
   13a78:	svc	#0x0
   13a7c:	cmn	x0, #0x1, lsl #12
   13a80:	b.ls	13ad8 <__sanitizer_set_report_fd@@Base+0x3238>  // b.plast
   13a84:	cmn	w0, #0x26
   13a88:	b.ne	13a94 <__sanitizer_set_report_fd@@Base+0x31f4>  // b.any
   13a8c:	mov	w0, #0x1                   	// #1
   13a90:	strb	w0, [x3, #24]
   13a94:	str	x30, [sp, #-16]!
   13a98:	mov	w1, #0x0                   	// #0
   13a9c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13aa0:	add	x0, x0, #0x726
   13aa4:	bl	12cfc <__sanitizer_set_report_fd@@Base+0x245c>
   13aa8:	mov	x4, x0
   13aac:	cmn	x0, #0x1, lsl #12
   13ab0:	b.hi	13a40 <__sanitizer_set_report_fd@@Base+0x31a0>  // b.pmore
   13ab4:	mov	x2, x5
   13ab8:	mov	x1, x6
   13abc:	bl	12d3c <__sanitizer_set_report_fd@@Base+0x249c>
   13ac0:	cmn	x0, #0x1, lsl #12
   13ac4:	b.hi	13a40 <__sanitizer_set_report_fd@@Base+0x31a0>  // b.pmore
   13ac8:	mov	w0, w4
   13acc:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   13ad0:	mov	w0, #0x1                   	// #1
   13ad4:	b	13a44 <__sanitizer_set_report_fd@@Base+0x31a4>
   13ad8:	cmp	x1, x0
   13adc:	b.ne	13a94 <__sanitizer_set_report_fd@@Base+0x31f4>  // b.any
   13ae0:	mov	w0, #0x1                   	// #1
   13ae4:	ret
   13ae8:	stp	x19, x20, [sp, #-128]!
   13aec:	mov	x20, x0
   13af0:	mov	w4, w1
   13af4:	stp	x21, x30, [sp, #16]
   13af8:	add	x21, sp, #0x30
   13afc:	ldr	w3, [x20], #8
   13b00:	mov	x1, #0x50                  	// #80
   13b04:	mov	x19, x0
   13b08:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13b0c:	mov	x0, x21
   13b10:	add	x2, x2, #0x733
   13b14:	bl	16710 <OnPrint@@Base+0x4>
   13b18:	mov	x1, x20
   13b1c:	mov	x0, x21
   13b20:	mov	x3, #0x0                   	// #0
   13b24:	mov	x2, #0x4000000             	// #67108864
   13b28:	bl	108c0 <__sanitizer_set_report_fd@@Base+0x20>
   13b2c:	tst	w0, #0xff
   13b30:	b.ne	13b44 <__sanitizer_set_report_fd@@Base+0x32a4>  // b.any
   13b34:	mov	w0, #0x0                   	// #0
   13b38:	ldp	x21, x30, [sp, #16]
   13b3c:	ldp	x19, x20, [sp], #128
   13b40:	ret
   13b44:	ldr	x3, [x19, #24]
   13b48:	cbz	x3, 13b34 <__sanitizer_set_report_fd@@Base+0x3294>
   13b4c:	ldr	x4, [x19, #16]
   13b50:	strb	wzr, [sp, #47]
   13b54:	cmp	x3, x4
   13b58:	b.ls	13b74 <__sanitizer_set_report_fd@@Base+0x32d4>  // b.plast
   13b5c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13b60:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   13b64:	add	x2, x2, #0x74b
   13b68:	add	x0, x0, #0x98a
   13b6c:	mov	w1, #0x1be                 	// #446
   13b70:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   13b74:	b.ne	13b8c <__sanitizer_set_report_fd@@Base+0x32ec>  // b.any
   13b78:	add	x0, x3, #0x1
   13b7c:	bl	13edc <__sanitizer_set_report_fd@@Base+0x363c>
   13b80:	mov	x1, x0
   13b84:	mov	x0, x20
   13b88:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
   13b8c:	ldr	x0, [x20, #16]
   13b90:	mov	x2, #0x1                   	// #1
   13b94:	ldr	x3, [x19, #8]
   13b98:	add	x1, x0, #0x1
   13b9c:	str	x1, [x20, #16]
   13ba0:	add	x1, sp, #0x2f
   13ba4:	add	x0, x3, x0
   13ba8:	adrp	x20, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13bac:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   13bb0:	add	x20, x20, #0x844
   13bb4:	ldr	x0, [x19, #8]
   13bb8:	mov	x1, x20
   13bbc:	bl	124f8 <__sanitizer_set_report_fd@@Base+0x1c58>
   13bc0:	mov	x19, x0
   13bc4:	cbz	x0, 13b34 <__sanitizer_set_report_fd@@Base+0x3294>
   13bc8:	mov	x0, x20
   13bcc:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   13bd0:	add	x0, x19, x0
   13bd4:	bl	1265c <__sanitizer_set_report_fd@@Base+0x1dbc>
   13bd8:	cmp	w0, #0x0
   13bdc:	cset	w0, ne  // ne = any
   13be0:	b	13b38 <__sanitizer_set_report_fd@@Base+0x3298>
   13be4:	stp	x19, x20, [sp, #-128]!
   13be8:	mov	x20, x0
   13bec:	mov	x19, x1
   13bf0:	ldr	w0, [x0, #4]
   13bf4:	stp	x21, x22, [sp, #16]
   13bf8:	stp	x23, x24, [sp, #32]
   13bfc:	sxtw	x1, w0
   13c00:	cmn	x1, #0x1, lsl #12
   13c04:	stp	x25, x26, [sp, #48]
   13c08:	stp	x27, x28, [sp, #64]
   13c0c:	str	x30, [sp, #80]
   13c10:	b.hi	13ca0 <__sanitizer_set_report_fd@@Base+0x3400>  // b.pmore
   13c14:	adrp	x24, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   13c18:	add	x27, sp, #0x78
   13c1c:	add	x24, x24, #0xa15
   13c20:	mov	w2, #0x0                   	// #0
   13c24:	mov	x1, #0x0                   	// #0
   13c28:	mov	w26, #0x1                   	// #1
   13c2c:	bl	132ec <__sanitizer_set_report_fd@@Base+0x2a4c>
   13c30:	mov	w21, #0x2                   	// #2
   13c34:	str	xzr, [x19, #16]
   13c38:	ldr	x1, [x20, #16]
   13c3c:	add	x25, x20, #0x8
   13c40:	mov	x0, x25
   13c44:	bl	10b4c <__sanitizer_set_report_fd@@Base+0x2ac>
   13c48:	ldr	x3, [x20, #24]
   13c4c:	cmp	x3, #0xfff
   13c50:	b.hi	13c70 <__sanitizer_set_report_fd@@Base+0x33d0>  // b.pmore
   13c54:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13c58:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13c5c:	add	x2, x2, #0x767
   13c60:	add	x0, x0, #0x3d5
   13c64:	mov	x4, #0x1000                	// #4096
   13c68:	mov	w1, #0x3b5                 	// #949
   13c6c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   13c70:	ldr	w0, [x20, #4]
   13c74:	mov	w2, w3
   13c78:	ldr	x1, [x20, #8]
   13c7c:	bl	132d8 <__sanitizer_set_report_fd@@Base+0x2a38>
   13c80:	mov	x22, x0
   13c84:	cbz	x0, 13ca4 <__sanitizer_set_report_fd@@Base+0x3404>
   13c88:	cmn	x0, #0x1, lsl #12
   13c8c:	b.ls	13cc4 <__sanitizer_set_report_fd@@Base+0x3424>  // b.plast
   13c90:	ldr	w1, [x20]
   13c94:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13c98:	add	x0, x0, #0x786
   13c9c:	bl	16a18 <OnPrint@@Base+0x30c>
   13ca0:	mov	w21, #0x0                   	// #0
   13ca4:	mov	w0, w21
   13ca8:	ldp	x21, x22, [sp, #16]
   13cac:	ldp	x23, x24, [sp, #32]
   13cb0:	ldp	x25, x26, [sp, #48]
   13cb4:	ldp	x27, x28, [sp, #64]
   13cb8:	ldr	x30, [sp, #80]
   13cbc:	ldp	x19, x20, [sp], #128
   13cc0:	ret
   13cc4:	ldr	x23, [x20, #8]
   13cc8:	add	x28, x0, x23
   13ccc:	cmp	x23, x28
   13cd0:	b.cs	13df8 <__sanitizer_set_report_fd@@Base+0x3558>  // b.hs, b.nlast
   13cd4:	mov	x0, x23
   13cd8:	ldrh	w1, [x23, #16]
   13cdc:	add	x23, x23, x1
   13ce0:	ldr	x1, [x0]
   13ce4:	cmp	x1, #0x1
   13ce8:	b.eq	13d38 <__sanitizer_set_report_fd@@Base+0x3498>  // b.none
   13cec:	cbz	x1, 13ccc <__sanitizer_set_report_fd@@Base+0x342c>
   13cf0:	ldrb	w1, [x0, #19]
   13cf4:	sub	w1, w1, #0x30
   13cf8:	and	w1, w1, #0xff
   13cfc:	cmp	w1, #0x9
   13d00:	b.hi	13ccc <__sanitizer_set_report_fd@@Base+0x342c>  // b.pmore
   13d04:	add	x0, x0, #0x13
   13d08:	bl	1265c <__sanitizer_set_report_fd@@Base+0x1dbc>
   13d0c:	ldp	x4, x3, [x19, #8]
   13d10:	str	x0, [sp, #120]
   13d14:	lsr	x4, x4, #3
   13d18:	cmp	x3, x4
   13d1c:	b.ls	13d40 <__sanitizer_set_report_fd@@Base+0x34a0>  // b.plast
   13d20:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13d24:	add	x2, x2, #0x74b
   13d28:	mov	w1, #0x1be                 	// #446
   13d2c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   13d30:	add	x0, x0, #0x98a
   13d34:	b	13c6c <__sanitizer_set_report_fd@@Base+0x33cc>
   13d38:	mov	w21, w1
   13d3c:	b	13cf0 <__sanitizer_set_report_fd@@Base+0x3450>
   13d40:	b.ne	13dd4 <__sanitizer_set_report_fd@@Base+0x3534>  // b.any
   13d44:	add	x0, x3, #0x1
   13d48:	str	x3, [sp, #96]
   13d4c:	bl	13edc <__sanitizer_set_report_fd@@Base+0x363c>
   13d50:	mov	x4, x0
   13d54:	ldr	x3, [sp, #96]
   13d58:	cbnz	x0, 13d70 <__sanitizer_set_report_fd@@Base+0x34d0>
   13d5c:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   13d60:	mov	x3, #0x0                   	// #0
   13d64:	add	x2, x2, #0x9c7
   13d68:	mov	w1, #0x1fc                 	// #508
   13d6c:	b	13d2c <__sanitizer_set_report_fd@@Base+0x348c>
   13d70:	cmp	x3, x0
   13d74:	b.ls	13d88 <__sanitizer_set_report_fd@@Base+0x34e8>  // b.plast
   13d78:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   13d7c:	mov	w1, #0x1fd                 	// #509
   13d80:	add	x2, x2, #0x9e0
   13d84:	b	13d2c <__sanitizer_set_report_fd@@Base+0x348c>
   13d88:	str	x0, [sp, #96]
   13d8c:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   13d90:	ldr	x4, [sp, #96]
   13d94:	mov	x1, x0
   13d98:	lsl	x0, x4, #3
   13d9c:	bl	c730 <__sancov_default_options@@Base+0x790>
   13da0:	mov	x1, x24
   13da4:	mov	w2, #0x0                   	// #0
   13da8:	str	x0, [sp, #104]
   13dac:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   13db0:	ldr	x1, [x19]
   13db4:	str	x0, [sp, #96]
   13db8:	ldr	x2, [x19, #16]
   13dbc:	lsl	x2, x2, #3
   13dc0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   13dc4:	ldp	x0, x1, [x19]
   13dc8:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   13dcc:	ldp	x4, x3, [sp, #96]
   13dd0:	stp	x4, x3, [x19]
   13dd4:	mov	x2, #0x8                   	// #8
   13dd8:	ldr	x0, [x19, #16]
   13ddc:	ldr	x3, [x19]
   13de0:	add	x1, x0, #0x1
   13de4:	str	x1, [x19, #16]
   13de8:	mov	x1, x27
   13dec:	add	x0, x3, x0, lsl #3
   13df0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   13df4:	b	13ccc <__sanitizer_set_report_fd@@Base+0x342c>
   13df8:	cbz	w26, 13e18 <__sanitizer_set_report_fd@@Base+0x3578>
   13dfc:	ldr	x1, [x20, #24]
   13e00:	sub	x0, x1, #0x400
   13e04:	cmp	x0, x22
   13e08:	b.cs	13e20 <__sanitizer_set_report_fd@@Base+0x3580>  // b.hs, b.nlast
   13e0c:	lsl	x1, x1, #1
   13e10:	mov	x0, x25
   13e14:	bl	10b4c <__sanitizer_set_report_fd@@Base+0x2ac>
   13e18:	mov	w21, #0x1                   	// #1
   13e1c:	b	13e44 <__sanitizer_set_report_fd@@Base+0x35a4>
   13e20:	ldr	x0, [x19, #16]
   13e24:	cbz	x0, 13e44 <__sanitizer_set_report_fd@@Base+0x35a4>
   13e28:	ldr	x1, [x19]
   13e2c:	add	x0, x1, x0, lsl #3
   13e30:	ldur	w1, [x0, #-8]
   13e34:	mov	x0, x20
   13e38:	bl	13ae8 <__sanitizer_set_report_fd@@Base+0x3248>
   13e3c:	tst	w0, #0xff
   13e40:	b.eq	13e18 <__sanitizer_set_report_fd@@Base+0x3578>  // b.none
   13e44:	mov	w26, #0x0                   	// #0
   13e48:	b	13c38 <__sanitizer_set_report_fd@@Base+0x3398>
   13e4c:	stp	x19, x20, [sp, #-112]!
   13e50:	mov	x19, x0
   13e54:	mov	w0, #0xffffffff            	// #-1
   13e58:	stp	x21, x30, [sp, #16]
   13e5c:	add	x21, x19, #0x8
   13e60:	mov	w20, w1
   13e64:	stp	w1, w0, [x19]
   13e68:	mov	x0, x21
   13e6c:	stp	xzr, xzr, [x19, #8]
   13e70:	mov	x1, #0x1000                	// #4096
   13e74:	str	xzr, [x19, #24]
   13e78:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
   13e7c:	mov	x0, x21
   13e80:	mov	x1, #0x1000                	// #4096
   13e84:	bl	10b4c <__sanitizer_set_report_fd@@Base+0x2ac>
   13e88:	add	x21, sp, #0x20
   13e8c:	mov	w3, w20
   13e90:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13e94:	add	x2, x2, #0x7b8
   13e98:	mov	x1, #0x50                  	// #80
   13e9c:	mov	x0, x21
   13ea0:	bl	16710 <OnPrint@@Base+0x4>
   13ea4:	mov	x0, x21
   13ea8:	mov	w1, #0x4000                	// #16384
   13eac:	bl	12cfc <__sanitizer_set_report_fd@@Base+0x245c>
   13eb0:	str	w0, [x19, #4]
   13eb4:	sxtw	x0, w0
   13eb8:	cmn	x0, #0x1, lsl #12
   13ebc:	b.ls	13ed0 <__sanitizer_set_report_fd@@Base+0x3630>  // b.plast
   13ec0:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13ec4:	mov	w1, w20
   13ec8:	add	x0, x0, #0x7c7
   13ecc:	bl	16a18 <OnPrint@@Base+0x30c>
   13ed0:	ldp	x21, x30, [sp, #16]
   13ed4:	ldp	x19, x20, [sp], #112
   13ed8:	ret
   13edc:	stp	x19, x30, [sp, #-16]!
   13ee0:	cbnz	x0, 13f04 <__sanitizer_set_report_fd@@Base+0x3664>
   13ee4:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13ee8:	add	x2, x2, #0x7ee
   13eec:	mov	x4, #0x0                   	// #0
   13ef0:	mov	x3, #0x0                   	// #0
   13ef4:	mov	w1, #0x177                 	// #375
   13ef8:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   13efc:	add	x0, x0, #0x98a
   13f00:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   13f04:	sub	x1, x0, #0x1
   13f08:	mov	x19, x0
   13f0c:	tst	x1, x0
   13f10:	b.eq	13f68 <__sanitizer_set_report_fd@@Base+0x36c8>  // b.none
   13f14:	bl	c6f4 <__sancov_default_options@@Base+0x754>
   13f18:	add	w1, w0, #0x1
   13f1c:	mov	x4, #0x1                   	// #1
   13f20:	mov	x2, x0
   13f24:	lsl	x0, x4, x1
   13f28:	cmp	x19, x0
   13f2c:	b.cc	13f48 <__sanitizer_set_report_fd@@Base+0x36a8>  // b.lo, b.ul, b.last
   13f30:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13f34:	mov	x4, x0
   13f38:	mov	x3, x19
   13f3c:	add	x2, x2, #0x7fe
   13f40:	mov	w1, #0x17b                 	// #379
   13f44:	b	13ef8 <__sanitizer_set_report_fd@@Base+0x3658>
   13f48:	lsl	x4, x4, x2
   13f4c:	cmp	x19, x4
   13f50:	b.hi	13f68 <__sanitizer_set_report_fd@@Base+0x36c8>  // b.pmore
   13f54:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13f58:	mov	x3, x19
   13f5c:	add	x2, x2, #0x820
   13f60:	mov	w1, #0x17c                 	// #380
   13f64:	b	13ef8 <__sanitizer_set_report_fd@@Base+0x3658>
   13f68:	ldp	x19, x30, [sp], #16
   13f6c:	ret
   13f70:	str	x30, [sp, #-160]!
   13f74:	mov	w0, #0x0                   	// #0
   13f78:	add	x1, sp, #0x10
   13f7c:	bl	6690 <getrusage@plt>
   13f80:	cbnz	w0, 13f94 <__sanitizer_set_report_fd@@Base+0x36f4>
   13f84:	ldr	x0, [sp, #48]
   13f88:	lsl	x0, x0, #10
   13f8c:	ldr	x30, [sp], #160
   13f90:	ret
   13f94:	mov	x0, #0x0                   	// #0
   13f98:	b	13f8c <__sanitizer_set_report_fd@@Base+0x36ec>
   13f9c:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   13fa0:	ldr	x3, [x3, #3800]
   13fa4:	cbz	x3, 13fac <__sanitizer_set_report_fd@@Base+0x370c>
   13fa8:	b	6530 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>
   13fac:	b	6ab0 <sigaction@plt>
   13fb0:	stp	x19, x20, [sp, #-192]!
   13fb4:	stp	x21, x22, [sp, #16]
   13fb8:	stp	x23, x24, [sp, #32]
   13fbc:	str	x30, [sp, #48]
   13fc0:	cbnz	x1, 13fe4 <__sanitizer_set_report_fd@@Base+0x3744>
   13fc4:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13fc8:	add	x2, x2, #0x84b
   13fcc:	mov	x4, #0x0                   	// #0
   13fd0:	mov	x3, #0x0                   	// #0
   13fd4:	mov	w1, #0x5b                  	// #91
   13fd8:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13fdc:	add	x0, x0, #0x860
   13fe0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   13fe4:	mov	x20, x2
   13fe8:	cbnz	x2, 14004 <__sanitizer_set_report_fd@@Base+0x3764>
   13fec:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   13ff0:	mov	x4, #0x0                   	// #0
   13ff4:	add	x2, x2, #0x8a5
   13ff8:	mov	x3, #0x0                   	// #0
   13ffc:	mov	w1, #0x5c                  	// #92
   14000:	b	13fd8 <__sanitizer_set_report_fd@@Base+0x3738>
   14004:	and	w0, w0, #0xff
   14008:	mov	x21, x1
   1400c:	add	x23, sp, #0x40
   14010:	add	x24, sp, #0x50
   14014:	add	x22, sp, #0x70
   14018:	cbz	w0, 140f8 <__sanitizer_set_report_fd@@Base+0x3858>
   1401c:	mov	x1, x23
   14020:	mov	w0, #0x3                   	// #3
   14024:	bl	6a70 <getrlimit@plt>
   14028:	sxtw	x19, w0
   1402c:	cbz	w0, 14048 <__sanitizer_set_report_fd@@Base+0x37a8>
   14030:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14034:	mov	x3, x19
   14038:	add	x2, x2, #0x8bd
   1403c:	mov	x4, #0x0                   	// #0
   14040:	mov	w1, #0x60                  	// #96
   14044:	b	13fd8 <__sanitizer_set_report_fd@@Base+0x3738>
   14048:	mov	x0, x24
   1404c:	mov	w1, #0x1                   	// #1
   14050:	bl	16da0 <OnPrint@@Base+0x694>
   14054:	stp	xzr, xzr, [sp, #136]
   14058:	str	xzr, [sp, #184]
   1405c:	mov	x1, x22
   14060:	mov	x0, x24
   14064:	bl	171d0 <OnPrint@@Base+0xac4>
   14068:	tst	w0, #0xff
   1406c:	b.eq	1407c <__sanitizer_set_report_fd@@Base+0x37dc>  // b.none
   14070:	ldr	x0, [sp, #120]
   14074:	cmp	x0, x23
   14078:	b.ls	140d8 <__sanitizer_set_report_fd@@Base+0x3838>  // b.plast
   1407c:	ldr	x0, [sp, #112]
   14080:	cmp	x0, x23
   14084:	b.hi	140e0 <__sanitizer_set_report_fd@@Base+0x3840>  // b.pmore
   14088:	ldr	x0, [sp, #120]
   1408c:	cmp	x0, x23
   14090:	b.ls	140e0 <__sanitizer_set_report_fd@@Base+0x3840>  // b.plast
   14094:	ldr	x3, [sp, #64]
   14098:	mov	x1, #0x40000000            	// #1073741824
   1409c:	sub	x19, x0, x19
   140a0:	str	x0, [x21]
   140a4:	cmp	x3, x1
   140a8:	csel	x3, x3, x1, ls  // ls = plast
   140ac:	cmp	x19, x3
   140b0:	csel	x19, x19, x3, ls  // ls = plast
   140b4:	sub	x19, x0, x19
   140b8:	str	x19, [x20]
   140bc:	mov	x0, x24
   140c0:	bl	16cc4 <OnPrint@@Base+0x5b8>
   140c4:	ldp	x21, x22, [sp, #16]
   140c8:	ldp	x23, x24, [sp, #32]
   140cc:	ldr	x30, [sp, #48]
   140d0:	ldp	x19, x20, [sp], #192
   140d4:	ret
   140d8:	mov	x19, x0
   140dc:	b	1405c <__sanitizer_set_report_fd@@Base+0x37bc>
   140e0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   140e4:	mov	x4, #0x0                   	// #0
   140e8:	add	x2, x2, #0x8e7
   140ec:	mov	x3, #0x0                   	// #0
   140f0:	mov	w1, #0x6a                  	// #106
   140f4:	b	13fd8 <__sanitizer_set_report_fd@@Base+0x3738>
   140f8:	mov	x0, x22
   140fc:	str	xzr, [sp, #64]
   14100:	str	xzr, [sp, #80]
   14104:	bl	6590 <pthread_attr_init@plt>
   14108:	bl	6a00 <pthread_self@plt>
   1410c:	mov	x1, x22
   14110:	bl	6520 <pthread_getattr_np@plt>
   14114:	sxtw	x3, w0
   14118:	cbz	w0, 14130 <__sanitizer_set_report_fd@@Base+0x3890>
   1411c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14120:	mov	x4, #0x0                   	// #0
   14124:	add	x2, x2, #0x928
   14128:	mov	w1, #0x88                  	// #136
   1412c:	b	13fd8 <__sanitizer_set_report_fd@@Base+0x3738>
   14130:	mov	x1, x24
   14134:	mov	x2, x23
   14138:	mov	x0, x22
   1413c:	bl	15c0c <__sanitizer_set_report_fd@@Base+0x536c>
   14140:	mov	x0, x22
   14144:	bl	66a0 <pthread_attr_destroy@plt>
   14148:	ldr	x0, [sp, #64]
   1414c:	ldr	x1, [sp, #80]
   14150:	add	x0, x0, x1
   14154:	str	x0, [x21]
   14158:	str	x1, [x20]
   1415c:	b	140c4 <__sanitizer_set_report_fd@@Base+0x3824>
   14160:	stp	x19, x20, [sp, #-48]!
   14164:	mov	x19, x0
   14168:	mov	x20, x1
   1416c:	mov	x0, #0xffffffffffffffff    	// #-1
   14170:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14174:	add	x1, x1, #0x95f
   14178:	str	x30, [sp, #16]
   1417c:	bl	65c0 <dlsym@plt>
   14180:	str	x0, [sp, #32]
   14184:	cbz	x0, 141c0 <__sanitizer_set_report_fd@@Base+0x3920>
   14188:	add	x1, sp, #0x20
   1418c:	mov	x2, #0x8                   	// #8
   14190:	add	x0, sp, #0x28
   14194:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   14198:	ldr	x3, [sp, #40]
   1419c:	mov	x1, x20
   141a0:	mov	x0, x19
   141a4:	mov	w2, #0x1                   	// #1
   141a8:	blr	x3
   141ac:	cmp	w0, #0x0
   141b0:	cset	w0, eq  // eq = none
   141b4:	ldr	x30, [sp, #16]
   141b8:	ldp	x19, x20, [sp], #48
   141bc:	ret
   141c0:	mov	w0, #0x0                   	// #0
   141c4:	b	141b4 <__sanitizer_set_report_fd@@Base+0x3914>
   141c8:	str	x30, [sp, #-48]!
   141cc:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   141d0:	mov	x0, #0xffffffffffffffff    	// #-1
   141d4:	add	x1, x1, #0x966
   141d8:	bl	65c0 <dlsym@plt>
   141dc:	stp	xzr, xzr, [sp, #16]
   141e0:	mov	x2, #0x8                   	// #8
   141e4:	add	x1, sp, #0x20
   141e8:	str	x0, [sp, #32]
   141ec:	add	x0, sp, #0x28
   141f0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   141f4:	ldr	x2, [sp, #40]
   141f8:	cbnz	x2, 1421c <__sanitizer_set_report_fd@@Base+0x397c>
   141fc:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14200:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14204:	add	x2, x2, #0x97e
   14208:	add	x0, x0, #0x860
   1420c:	mov	x4, #0x0                   	// #0
   14210:	mov	x3, #0x0                   	// #0
   14214:	mov	w1, #0xd4                  	// #212
   14218:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1421c:	add	x0, sp, #0x10
   14220:	add	x1, sp, #0x18
   14224:	blr	x2
   14228:	ldr	x0, [sp, #24]
   1422c:	cmp	x0, #0xf
   14230:	b.hi	1423c <__sanitizer_set_report_fd@@Base+0x399c>  // b.pmore
   14234:	mov	x0, #0x10                  	// #16
   14238:	str	x0, [sp, #24]
   1423c:	ldp	x0, x1, [sp, #16]
   14240:	bl	c730 <__sancov_default_options@@Base+0x790>
   14244:	adrp	x1, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   14248:	str	x0, [x1, #3536]
   1424c:	ldr	x30, [sp], #48
   14250:	ret
   14254:	adrp	x1, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   14258:	add	x1, x1, #0xdd0
   1425c:	ldr	x0, [x1, #8]
   14260:	cbnz	x0, 1426c <__sanitizer_set_report_fd@@Base+0x39cc>
   14264:	mov	x0, #0x6f0                 	// #1776
   14268:	str	x0, [x1, #8]
   1426c:	ret
   14270:	mov	x0, #0x10                  	// #16
   14274:	ret
   14278:	str	x30, [sp, #-16]!
   1427c:	bl	14254 <__sanitizer_set_report_fd@@Base+0x39b4>
   14280:	mrs	x1, tpidr_el0
   14284:	sub	x0, x1, x0
   14288:	ldr	x30, [sp], #16
   1428c:	ret
   14290:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   14294:	ldr	x0, [x0, #3536]
   14298:	ret
   1429c:	stp	x19, x20, [sp, #-64]!
   142a0:	mov	x20, x1
   142a4:	mov	x19, x3
   142a8:	stp	x21, x22, [sp, #16]
   142ac:	mov	x21, x2
   142b0:	mov	x22, x4
   142b4:	stp	x23, x30, [sp, #32]
   142b8:	and	w23, w0, #0xff
   142bc:	bl	14278 <__sanitizer_set_report_fd@@Base+0x39d8>
   142c0:	str	x0, [x3]
   142c4:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   142c8:	add	x1, sp, #0x30
   142cc:	add	x2, sp, #0x38
   142d0:	ldr	x0, [x0, #3536]
   142d4:	str	x0, [x4]
   142d8:	mov	w0, w23
   142dc:	bl	13fb0 <__sanitizer_set_report_fd@@Base+0x3710>
   142e0:	ldp	x0, x1, [sp, #48]
   142e4:	str	x1, [x20]
   142e8:	sub	x0, x0, x1
   142ec:	str	x0, [x21]
   142f0:	cbnz	w23, 14368 <__sanitizer_set_report_fd@@Base+0x3ac8>
   142f4:	ldr	x5, [x19]
   142f8:	ldr	x1, [x20]
   142fc:	cmp	x5, x1
   14300:	b.ls	14368 <__sanitizer_set_report_fd@@Base+0x3ac8>  // b.plast
   14304:	add	x4, x0, x1
   14308:	cmp	x5, x4
   1430c:	b.cs	14368 <__sanitizer_set_report_fd@@Base+0x3ac8>  // b.hs, b.nlast
   14310:	ldr	x2, [x22]
   14314:	add	x3, x5, x2
   14318:	cmp	x1, x3
   1431c:	b.cc	1433c <__sanitizer_set_report_fd@@Base+0x3a9c>  // b.lo, b.ul, b.last
   14320:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14324:	add	x2, x2, #0x993
   14328:	mov	x4, x1
   1432c:	mov	w1, #0x203                 	// #515
   14330:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14334:	add	x0, x0, #0x860
   14338:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1433c:	cmp	x4, x3
   14340:	b.cs	14354 <__sanitizer_set_report_fd@@Base+0x3ab4>  // b.hs, b.nlast
   14344:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14348:	mov	w1, #0x204                 	// #516
   1434c:	add	x2, x2, #0x9bd
   14350:	b	14330 <__sanitizer_set_report_fd@@Base+0x3a90>
   14354:	sub	x0, x0, x2
   14358:	str	x0, [x21]
   1435c:	ldr	x1, [x20]
   14360:	add	x0, x1, x0
   14364:	str	x0, [x19]
   14368:	ldp	x21, x22, [sp, #16]
   1436c:	ldp	x23, x30, [sp, #32]
   14370:	ldp	x19, x20, [sp], #64
   14374:	ret
   14378:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1437c:	stp	x19, x20, [sp, #-96]!
   14380:	ldr	x0, [x0, #4056]
   14384:	stp	x21, x30, [sp, #16]
   14388:	ldrb	w0, [x0, #160]
   1438c:	cbnz	w0, 143a0 <__sanitizer_set_report_fd@@Base+0x3b00>
   14390:	bl	13f70 <__sanitizer_set_report_fd@@Base+0x36d0>
   14394:	ldp	x21, x30, [sp, #16]
   14398:	ldp	x19, x20, [sp], #96
   1439c:	ret
   143a0:	mov	x2, #0x0                   	// #0
   143a4:	mov	w1, #0x0                   	// #0
   143a8:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   143ac:	add	x0, x0, #0x9f4
   143b0:	bl	14d10 <__sanitizer_set_report_fd@@Base+0x4470>
   143b4:	mov	w21, w0
   143b8:	cmn	w0, #0x1
   143bc:	b.eq	14390 <__sanitizer_set_report_fd@@Base+0x3af0>  // b.none
   143c0:	add	x19, sp, #0x20
   143c4:	mov	x2, #0x3f                  	// #63
   143c8:	mov	x1, x19
   143cc:	bl	12d3c <__sanitizer_set_report_fd@@Base+0x249c>
   143d0:	mov	x20, x0
   143d4:	mov	w0, w21
   143d8:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   143dc:	cmp	x20, #0x0
   143e0:	b.le	14464 <__sanitizer_set_report_fd@@Base+0x3bc4>
   143e4:	mov	x1, x19
   143e8:	strb	wzr, [x19, x20]
   143ec:	ldrb	w0, [x1]
   143f0:	sub	w0, w0, #0x30
   143f4:	and	w0, w0, #0xff
   143f8:	cmp	w0, #0x9
   143fc:	b.hi	14408 <__sanitizer_set_report_fd@@Base+0x3b68>  // b.pmore
   14400:	add	x1, x1, #0x1
   14404:	b	143ec <__sanitizer_set_report_fd@@Base+0x3b4c>
   14408:	ldrb	w2, [x1]
   1440c:	sub	w0, w2, #0x30
   14410:	cmp	w2, #0x0
   14414:	and	w0, w0, #0xff
   14418:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   1441c:	b.ls	14428 <__sanitizer_set_report_fd@@Base+0x3b88>  // b.plast
   14420:	add	x1, x1, #0x1
   14424:	b	14408 <__sanitizer_set_report_fd@@Base+0x3b68>
   14428:	mov	x19, #0x0                   	// #0
   1442c:	mov	x3, #0xa                   	// #10
   14430:	ldrb	w2, [x1]
   14434:	sub	w0, w2, #0x30
   14438:	and	w0, w0, #0xff
   1443c:	cmp	w0, #0x9
   14440:	b.hi	14458 <__sanitizer_set_report_fd@@Base+0x3bb8>  // b.pmore
   14444:	mul	x0, x19, x3
   14448:	add	x1, x1, #0x1
   1444c:	sub	x0, x0, #0x30
   14450:	add	x19, x0, w2, uxtb
   14454:	b	14430 <__sanitizer_set_report_fd@@Base+0x3b90>
   14458:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   1445c:	mul	x0, x0, x19
   14460:	b	14394 <__sanitizer_set_report_fd@@Base+0x3af4>
   14464:	mov	x0, #0x0                   	// #0
   14468:	b	14394 <__sanitizer_set_report_fd@@Base+0x3af4>
   1446c:	stp	x19, x30, [sp, #-144]!
   14470:	mov	x1, #0x80                  	// #128
   14474:	mov	w0, #0x0                   	// #0
   14478:	add	x19, sp, #0x10
   1447c:	mov	x2, x19
   14480:	bl	6490 <sched_getaffinity@plt>
   14484:	cbz	w0, 144a8 <__sanitizer_set_report_fd@@Base+0x3c08>
   14488:	sxtw	x3, w0
   1448c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14490:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14494:	add	x2, x2, #0xa05
   14498:	add	x0, x0, #0x860
   1449c:	mov	x4, #0x0                   	// #0
   144a0:	mov	w1, #0x2bb                 	// #699
   144a4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   144a8:	mov	x1, x19
   144ac:	mov	x0, #0x80                  	// #128
   144b0:	bl	6840 <__sched_cpucount@plt>
   144b4:	ldp	x19, x30, [sp], #144
   144b8:	ret
   144bc:	ret
   144c0:	mov	x2, x0
   144c4:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   144c8:	mov	w0, #0x6                   	// #6
   144cc:	add	x1, x1, #0x85d
   144d0:	b	6890 <syslog@plt>
   144d4:	ret
   144d8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   144dc:	ldr	x1, [x1, #4056]
   144e0:	ldrb	w1, [x1, #49]
   144e4:	cbz	w1, 144ec <__sanitizer_set_report_fd@@Base+0x3c4c>
   144e8:	b	e688 <__sanitizer_sandbox_on_notify@@Base+0x28>
   144ec:	ret
   144f0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   144f4:	str	x30, [sp, #-32]!
   144f8:	ldr	x0, [x0, #4008]
   144fc:	add	x1, sp, #0x10
   14500:	cbz	x0, 1454c <__sanitizer_set_report_fd@@Base+0x3cac>
   14504:	ldr	x0, [x0]
   14508:	cbz	x0, 1454c <__sanitizer_set_report_fd@@Base+0x3cac>
   1450c:	ldrb	w0, [x0]
   14510:	cbz	w0, 1454c <__sanitizer_set_report_fd@@Base+0x3cac>
   14514:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   14518:	ldr	x0, [x0, #3872]
   1451c:	cbz	x0, 14540 <__sanitizer_set_report_fd@@Base+0x3ca0>
   14520:	mov	w0, #0x1                   	// #1
   14524:	bl	66e0 <real_clock_gettime@plt>
   14528:	ldp	x2, x1, [sp, #16]
   1452c:	mov	x0, #0xca00                	// #51712
   14530:	movk	x0, #0x3b9a, lsl #16
   14534:	ldr	x30, [sp], #32
   14538:	madd	x0, x2, x0, x1
   1453c:	ret
   14540:	mov	w0, #0x1                   	// #1
   14544:	bl	6730 <clock_gettime@plt>
   14548:	b	14528 <__sanitizer_set_report_fd@@Base+0x3c88>
   1454c:	mov	w0, #0x1                   	// #1
   14550:	bl	12f90 <__sanitizer_set_report_fd@@Base+0x26f0>
   14554:	b	14528 <__sanitizer_set_report_fd@@Base+0x3c88>
   14558:	stp	x19, x30, [sp, #-32]!
   1455c:	mov	x19, x0
   14560:	bl	14870 <__sanitizer_set_report_fd@@Base+0x3fd0>
   14564:	str	x19, [sp, #16]
   14568:	mov	w0, #0x1                   	// #1
   1456c:	add	x1, sp, #0x10
   14570:	strb	w0, [sp, #24]
   14574:	adrp	x0, 14000 <__sanitizer_set_report_fd@@Base+0x3760>
   14578:	add	x0, x0, #0x5d4
   1457c:	stur	wzr, [sp, #25]
   14580:	sturh	wzr, [sp, #29]
   14584:	strb	wzr, [sp, #31]
   14588:	bl	6710 <dl_iterate_phdr@plt>
   1458c:	ldp	x19, x30, [sp], #32
   14590:	ret
   14594:	stp	x19, x20, [sp, #-64]!
   14598:	mov	x20, x0
   1459c:	add	x19, sp, #0x20
   145a0:	str	x30, [sp, #16]
   145a4:	bl	14870 <__sanitizer_set_report_fd@@Base+0x3fd0>
   145a8:	mov	x0, x19
   145ac:	mov	w1, #0x1                   	// #1
   145b0:	bl	16da0 <OnPrint@@Base+0x694>
   145b4:	mov	x1, x20
   145b8:	mov	x0, x19
   145bc:	bl	16f78 <OnPrint@@Base+0x86c>
   145c0:	mov	x0, x19
   145c4:	bl	16cc4 <OnPrint@@Base+0x5b8>
   145c8:	ldr	x30, [sp, #16]
   145cc:	ldp	x19, x20, [sp], #64
   145d0:	ret
   145d4:	stp	x19, x20, [sp, #-160]!
   145d8:	mov	x1, #0x1000                	// #4096
   145dc:	mov	x19, x0
   145e0:	stp	x21, x22, [sp, #16]
   145e4:	add	x21, sp, #0x38
   145e8:	mov	x0, x21
   145ec:	mov	x20, x2
   145f0:	stp	x23, x30, [sp, #32]
   145f4:	stp	xzr, xzr, [sp, #56]
   145f8:	str	xzr, [sp, #72]
   145fc:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
   14600:	ldr	x0, [sp, #72]
   14604:	cmp	x0, #0xfff
   14608:	b.hi	14640 <__sanitizer_set_report_fd@@Base+0x3da0>  // b.pmore
   1460c:	ldr	x0, [sp, #64]
   14610:	cmp	x0, #0xfff
   14614:	b.hi	14624 <__sanitizer_set_report_fd@@Base+0x3d84>  // b.pmore
   14618:	mov	x0, x21
   1461c:	mov	x1, #0x1000                	// #4096
   14620:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
   14624:	ldr	x3, [sp, #56]
   14628:	mov	x2, #0x1000                	// #4096
   1462c:	ldr	x0, [sp, #72]
   14630:	mov	w1, #0x0                   	// #0
   14634:	sub	x2, x2, x0
   14638:	add	x0, x3, x0
   1463c:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   14640:	mov	x0, #0x1000                	// #4096
   14644:	mov	x1, #0x0                   	// #0
   14648:	stp	x0, xzr, [sp, #72]
   1464c:	mov	x0, x21
   14650:	bl	7e64 <__asan_backtrace_open@plt+0x1354>
   14654:	strb	wzr, [x0]
   14658:	ldrb	w0, [x20, #8]
   1465c:	cbz	w0, 14720 <__sanitizer_set_report_fd@@Base+0x3e80>
   14660:	ldr	x0, [sp, #56]
   14664:	strb	wzr, [x20, #8]
   14668:	ldr	x1, [sp, #72]
   1466c:	bl	e1a0 <__sancov_default_options@@Base+0x2200>
   14670:	mov	x0, x21
   14674:	mov	x1, #0x0                   	// #0
   14678:	bl	7e64 <__asan_backtrace_open@plt+0x1354>
   1467c:	ldrb	w0, [x0]
   14680:	cbz	w0, 147a4 <__sanitizer_set_report_fd@@Base+0x3f04>
   14684:	add	x21, sp, #0x58
   14688:	mov	x2, #0x10                  	// #16
   1468c:	mov	w1, #0x0                   	// #0
   14690:	add	x0, x21, #0x1c
   14694:	stp	xzr, xzr, [sp, #88]
   14698:	mov	x22, #0x0                   	// #0
   1469c:	mov	x23, #0x38                  	// #56
   146a0:	str	xzr, [sp, #104]
   146a4:	str	wzr, [sp, #112]
   146a8:	strb	wzr, [sp, #132]
   146ac:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   146b0:	ldr	x2, [x19]
   146b4:	mov	x0, x21
   146b8:	ldr	x1, [sp, #56]
   146bc:	stp	xzr, xzr, [sp, #136]
   146c0:	str	xzr, [sp, #152]
   146c4:	bl	de20 <__sancov_default_options@@Base+0x1e80>
   146c8:	ldrh	w0, [x19, #24]
   146cc:	cmp	w0, w22
   146d0:	b.le	1473c <__sanitizer_set_report_fd@@Base+0x3e9c>
   146d4:	mul	x0, x22, x23
   146d8:	ldr	x1, [x19, #16]
   146dc:	add	x2, x1, x0
   146e0:	ldr	w0, [x1, x0]
   146e4:	cmp	w0, #0x1
   146e8:	b.ne	14718 <__sanitizer_set_report_fd@@Base+0x3e78>  // b.any
   146ec:	ldr	x1, [x19]
   146f0:	mov	x5, #0x0                   	// #0
   146f4:	ldr	x0, [x2, #16]
   146f8:	ldr	w3, [x2, #4]
   146fc:	ldr	x2, [x2, #40]
   14700:	add	x1, x1, x0
   14704:	ubfx	x4, x3, #1, #1
   14708:	mov	x0, x21
   1470c:	and	w3, w3, #0x1
   14710:	add	x2, x1, x2
   14714:	bl	de98 <__sancov_default_options@@Base+0x1ef8>
   14718:	add	x22, x22, #0x1
   1471c:	b	146c8 <__sanitizer_set_report_fd@@Base+0x3e28>
   14720:	ldr	x2, [x19, #8]
   14724:	cbz	x2, 14670 <__sanitizer_set_report_fd@@Base+0x3dd0>
   14728:	mov	x0, x21
   1472c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   14730:	add	x1, x1, #0x85d
   14734:	bl	16a9c <OnPrint@@Base+0x390>
   14738:	b	14670 <__sanitizer_set_report_fd@@Base+0x3dd0>
   1473c:	ldr	x19, [x20]
   14740:	mov	x0, #0x48                  	// #72
   14744:	ldp	x4, x3, [x19, #8]
   14748:	udiv	x4, x4, x0
   1474c:	cmp	x3, x4
   14750:	b.ls	1476c <__sanitizer_set_report_fd@@Base+0x3ecc>  // b.plast
   14754:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14758:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1475c:	add	x2, x2, #0x74b
   14760:	add	x0, x0, #0x98a
   14764:	mov	w1, #0x1be                 	// #446
   14768:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1476c:	b.ne	14784 <__sanitizer_set_report_fd@@Base+0x3ee4>  // b.any
   14770:	add	x0, x3, #0x1
   14774:	bl	13edc <__sanitizer_set_report_fd@@Base+0x363c>
   14778:	mov	x1, x0
   1477c:	mov	x0, x19
   14780:	bl	147c0 <__sanitizer_set_report_fd@@Base+0x3f20>
   14784:	ldr	x3, [x19]
   14788:	mov	x2, #0x48                  	// #72
   1478c:	ldr	x0, [x19, #16]
   14790:	add	x1, x0, #0x1
   14794:	str	x1, [x19, #16]
   14798:	madd	x0, x0, x2, x3
   1479c:	mov	x1, x21
   147a0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   147a4:	ldp	x0, x1, [sp, #56]
   147a8:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   147ac:	mov	w0, #0x0                   	// #0
   147b0:	ldp	x21, x22, [sp, #16]
   147b4:	ldp	x23, x30, [sp, #32]
   147b8:	ldp	x19, x20, [sp], #160
   147bc:	ret
   147c0:	stp	x19, x20, [sp, #-48]!
   147c4:	stp	x21, x22, [sp, #16]
   147c8:	str	x30, [sp, #32]
   147cc:	cbnz	x1, 147f0 <__sanitizer_set_report_fd@@Base+0x3f50>
   147d0:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   147d4:	add	x2, x2, #0x9c7
   147d8:	mov	x4, #0x0                   	// #0
   147dc:	mov	x3, #0x0                   	// #0
   147e0:	mov	w1, #0x1fc                 	// #508
   147e4:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   147e8:	add	x0, x0, #0x98a
   147ec:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   147f0:	ldr	x3, [x0, #16]
   147f4:	mov	x19, x0
   147f8:	mov	x20, x1
   147fc:	cmp	x1, x3
   14800:	b.cs	14818 <__sanitizer_set_report_fd@@Base+0x3f78>  // b.hs, b.nlast
   14804:	mov	x4, x1
   14808:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1480c:	mov	w1, #0x1fd                 	// #509
   14810:	add	x2, x2, #0x9e0
   14814:	b	147e4 <__sanitizer_set_report_fd@@Base+0x3f44>
   14818:	mov	x22, #0x48                  	// #72
   1481c:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   14820:	mov	x1, x0
   14824:	mul	x0, x20, x22
   14828:	bl	c730 <__sancov_default_options@@Base+0x790>
   1482c:	mov	x20, x0
   14830:	mov	w2, #0x0                   	// #0
   14834:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   14838:	add	x1, x1, #0xa15
   1483c:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   14840:	ldr	x2, [x19, #16]
   14844:	mov	x21, x0
   14848:	ldr	x1, [x19]
   1484c:	mul	x2, x2, x22
   14850:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   14854:	ldp	x0, x1, [x19]
   14858:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1485c:	ldr	x30, [sp, #32]
   14860:	stp	x21, x20, [x19]
   14864:	ldp	x21, x22, [sp, #16]
   14868:	ldp	x19, x20, [sp], #48
   1486c:	ret
   14870:	stp	x19, x20, [sp, #-32]!
   14874:	mov	x19, x0
   14878:	ldrb	w1, [x0, #24]
   1487c:	stp	x21, x30, [sp, #16]
   14880:	cbz	w1, 148c4 <__sanitizer_set_report_fd@@Base+0x4024>
   14884:	ldr	x20, [x19]
   14888:	mov	x0, #0x48                  	// #72
   1488c:	ldr	x21, [x19, #16]
   14890:	madd	x21, x21, x0, x20
   14894:	cmp	x21, x20
   14898:	b.eq	148ac <__sanitizer_set_report_fd@@Base+0x400c>  // b.none
   1489c:	mov	x0, x20
   148a0:	add	x20, x20, #0x48
   148a4:	bl	dda8 <__sancov_default_options@@Base+0x1e08>
   148a8:	b	14894 <__sanitizer_set_report_fd@@Base+0x3ff4>
   148ac:	str	xzr, [x19, #16]
   148b0:	mov	w0, #0x1                   	// #1
   148b4:	strb	w0, [x19, #24]
   148b8:	ldp	x21, x30, [sp, #16]
   148bc:	ldp	x19, x20, [sp], #32
   148c0:	ret
   148c4:	stp	xzr, xzr, [x0]
   148c8:	mov	x1, #0x4000                	// #16384
   148cc:	str	xzr, [x0, #16]
   148d0:	bl	147c0 <__sanitizer_set_report_fd@@Base+0x3f20>
   148d4:	b	148b0 <__sanitizer_set_report_fd@@Base+0x4010>
   148d8:	cmp	w0, #0x2
   148dc:	b.eq	148f0 <__sanitizer_set_report_fd@@Base+0x4050>  // b.none
   148e0:	cmp	w0, #0xa
   148e4:	cset	x0, eq  // eq = none
   148e8:	lsl	x0, x0, #4
   148ec:	ret
   148f0:	mov	x0, #0x4                   	// #4
   148f4:	b	148ec <__sanitizer_set_report_fd@@Base+0x404c>
   148f8:	b	1352c <__sanitizer_set_report_fd@@Base+0x2c8c>
   148fc:	stp	x19, x20, [sp, #-64]!
   14900:	mov	x19, x0
   14904:	stp	x21, x22, [sp, #16]
   14908:	and	w22, w2, #0xff
   1490c:	mov	x21, x1
   14910:	str	x30, [sp, #32]
   14914:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   14918:	mov	x1, x0
   1491c:	mov	x0, x19
   14920:	bl	c730 <__sancov_default_options@@Base+0x790>
   14924:	mov	x1, x0
   14928:	mov	x5, #0x0                   	// #0
   1492c:	mov	w4, #0xffffffff            	// #-1
   14930:	mov	w3, #0x22                  	// #34
   14934:	mov	w2, #0x3                   	// #3
   14938:	mov	x19, x0
   1493c:	mov	x0, #0x0                   	// #0
   14940:	bl	12cb8 <__sanitizer_set_report_fd@@Base+0x2418>
   14944:	mov	x20, x0
   14948:	add	x1, sp, #0x3c
   1494c:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   14950:	tst	w0, #0xff
   14954:	b.eq	14974 <__sanitizer_set_report_fd@@Base+0x40d4>  // b.none
   14958:	ldr	w3, [sp, #60]
   1495c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14960:	mov	w4, w22
   14964:	add	x2, x2, #0xa78
   14968:	mov	x1, x21
   1496c:	mov	x0, x19
   14970:	bl	dbc4 <__sancov_default_options@@Base+0x1c24>
   14974:	mov	x0, x19
   14978:	bl	df94 <__sancov_default_options@@Base+0x1ff4>
   1497c:	mov	x0, x20
   14980:	ldp	x21, x22, [sp, #16]
   14984:	ldr	x30, [sp, #32]
   14988:	ldp	x19, x20, [sp], #64
   1498c:	ret
   14990:	cmp	x0, #0x0
   14994:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   14998:	b.eq	14a14 <__sanitizer_set_report_fd@@Base+0x4174>  // b.none
   1499c:	stp	x19, x20, [sp, #-32]!
   149a0:	mov	x19, x1
   149a4:	mov	x20, x0
   149a8:	str	x30, [sp, #16]
   149ac:	bl	12cd0 <__sanitizer_set_report_fd@@Base+0x2430>
   149b0:	mov	x1, #0x0                   	// #0
   149b4:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   149b8:	tst	w0, #0xff
   149bc:	b.eq	14a04 <__sanitizer_set_report_fd@@Base+0x4164>  // b.none
   149c0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   149c4:	mov	x4, x20
   149c8:	mov	x3, x19
   149cc:	mov	x2, x19
   149d0:	ldr	x0, [x0, #4024]
   149d4:	ldr	x1, [x0]
   149d8:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   149dc:	add	x0, x0, #0xa81
   149e0:	bl	16a18 <OnPrint@@Base+0x30c>
   149e4:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   149e8:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   149ec:	add	x2, x2, #0xac1
   149f0:	add	x0, x0, #0xae3
   149f4:	mov	x4, #0x0                   	// #0
   149f8:	mov	x3, #0x0                   	// #0
   149fc:	mov	w1, #0x3c                  	// #60
   14a00:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   14a04:	mov	x0, x19
   14a08:	ldr	x30, [sp, #16]
   14a0c:	ldp	x19, x20, [sp], #32
   14a10:	b	dfec <__sancov_default_options@@Base+0x204c>
   14a14:	ret
   14a18:	stp	x19, x20, [sp, #-48]!
   14a1c:	mov	x19, x0
   14a20:	stp	x21, x30, [sp, #16]
   14a24:	mov	x21, x1
   14a28:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   14a2c:	mov	x1, x0
   14a30:	mov	x0, x19
   14a34:	bl	c730 <__sancov_default_options@@Base+0x790>
   14a38:	mov	x1, x0
   14a3c:	mov	x5, #0x0                   	// #0
   14a40:	mov	w4, #0xffffffff            	// #-1
   14a44:	mov	w3, #0x22                  	// #34
   14a48:	mov	w2, #0x3                   	// #3
   14a4c:	mov	x20, x0
   14a50:	mov	x0, #0x0                   	// #0
   14a54:	bl	12cb8 <__sanitizer_set_report_fd@@Base+0x2418>
   14a58:	mov	x19, x0
   14a5c:	add	x1, sp, #0x2c
   14a60:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   14a64:	tst	w0, #0xff
   14a68:	b.eq	14a94 <__sanitizer_set_report_fd@@Base+0x41f4>  // b.none
   14a6c:	ldr	w3, [sp, #44]
   14a70:	mov	x0, #0x0                   	// #0
   14a74:	cmp	w3, #0xc
   14a78:	b.eq	14aa0 <__sanitizer_set_report_fd@@Base+0x4200>  // b.none
   14a7c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14a80:	mov	x1, x21
   14a84:	add	x2, x2, #0xa78
   14a88:	mov	x0, x20
   14a8c:	mov	w4, #0x0                   	// #0
   14a90:	bl	dbc4 <__sancov_default_options@@Base+0x1c24>
   14a94:	mov	x0, x20
   14a98:	bl	df94 <__sancov_default_options@@Base+0x1ff4>
   14a9c:	mov	x0, x19
   14aa0:	ldp	x21, x30, [sp, #16]
   14aa4:	ldp	x19, x20, [sp], #48
   14aa8:	ret
   14aac:	stp	x19, x20, [sp, #-48]!
   14ab0:	mov	x20, x0
   14ab4:	sub	x0, x0, #0x1
   14ab8:	stp	x21, x22, [sp, #16]
   14abc:	tst	x0, x20
   14ac0:	stp	x23, x30, [sp, #32]
   14ac4:	b.eq	14ae8 <__sanitizer_set_report_fd@@Base+0x4248>  // b.none
   14ac8:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14acc:	add	x2, x2, #0xb20
   14ad0:	mov	x4, #0x0                   	// #0
   14ad4:	mov	x3, #0x0                   	// #0
   14ad8:	mov	w1, #0x55                  	// #85
   14adc:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14ae0:	add	x0, x0, #0xae3
   14ae4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   14ae8:	sub	x21, x1, #0x1
   14aec:	mov	x22, x1
   14af0:	tst	x1, x21
   14af4:	b.eq	14b10 <__sanitizer_set_report_fd@@Base+0x4270>  // b.none
   14af8:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   14afc:	mov	x4, #0x0                   	// #0
   14b00:	add	x2, x2, #0xa52
   14b04:	mov	x3, #0x0                   	// #0
   14b08:	mov	w1, #0x56                  	// #86
   14b0c:	b	14adc <__sanitizer_set_report_fd@@Base+0x423c>
   14b10:	add	x23, x20, x22
   14b14:	mov	x1, x2
   14b18:	mov	x0, x23
   14b1c:	bl	14a18 <__sanitizer_set_report_fd@@Base+0x4178>
   14b20:	mov	x19, x0
   14b24:	cbz	x0, 14b60 <__sanitizer_set_report_fd@@Base+0x42c0>
   14b28:	add	x23, x23, x0
   14b2c:	tst	x0, x21
   14b30:	b.eq	14b4c <__sanitizer_set_report_fd@@Base+0x42ac>  // b.none
   14b34:	add	x21, x0, x21
   14b38:	neg	x22, x22
   14b3c:	and	x21, x21, x22
   14b40:	mov	x19, x21
   14b44:	sub	x1, x21, x0
   14b48:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   14b4c:	add	x0, x19, x20
   14b50:	cmp	x23, x0
   14b54:	b.eq	14b60 <__sanitizer_set_report_fd@@Base+0x42c0>  // b.none
   14b58:	sub	x1, x23, x0
   14b5c:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   14b60:	mov	x0, x19
   14b64:	ldp	x21, x22, [sp, #16]
   14b68:	ldp	x23, x30, [sp, #32]
   14b6c:	ldp	x19, x20, [sp], #48
   14b70:	ret
   14b74:	stp	x19, x20, [sp, #-48]!
   14b78:	mov	x19, x0
   14b7c:	stp	x21, x30, [sp, #16]
   14b80:	mov	x21, x1
   14b84:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   14b88:	mov	x1, x0
   14b8c:	mov	x0, x19
   14b90:	bl	c730 <__sancov_default_options@@Base+0x790>
   14b94:	mov	x1, x0
   14b98:	mov	x5, #0x0                   	// #0
   14b9c:	mov	w4, #0xffffffff            	// #-1
   14ba0:	mov	w3, #0x4022                	// #16418
   14ba4:	mov	w2, #0x3                   	// #3
   14ba8:	mov	x0, #0x0                   	// #0
   14bac:	bl	12cb8 <__sanitizer_set_report_fd@@Base+0x2418>
   14bb0:	add	x1, sp, #0x2c
   14bb4:	mov	x20, x0
   14bb8:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   14bbc:	tst	w0, #0xff
   14bc0:	b.eq	14be0 <__sanitizer_set_report_fd@@Base+0x4340>  // b.none
   14bc4:	ldr	w3, [sp, #44]
   14bc8:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14bcc:	mov	x1, x21
   14bd0:	add	x2, x2, #0xb3e
   14bd4:	mov	x0, x19
   14bd8:	mov	w4, #0x0                   	// #0
   14bdc:	bl	dbc4 <__sancov_default_options@@Base+0x1c24>
   14be0:	mov	x0, x19
   14be4:	bl	df94 <__sancov_default_options@@Base+0x1ff4>
   14be8:	mov	x0, x20
   14bec:	ldp	x21, x30, [sp, #16]
   14bf0:	ldp	x19, x20, [sp], #48
   14bf4:	ret
   14bf8:	stp	x19, x20, [sp, #-96]!
   14bfc:	mov	x20, x1
   14c00:	stp	x21, x22, [sp, #16]
   14c04:	and	w22, w2, #0xff
   14c08:	mov	x21, x0
   14c0c:	str	x30, [sp, #32]
   14c10:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   14c14:	mov	x1, x0
   14c18:	mov	x19, x0
   14c1c:	mov	x0, x20
   14c20:	bl	c730 <__sancov_default_options@@Base+0x790>
   14c24:	neg	x19, x19
   14c28:	mov	x5, #0x0                   	// #0
   14c2c:	mov	w4, #0xffffffff            	// #-1
   14c30:	mov	w3, #0x32                  	// #50
   14c34:	mov	w2, #0x3                   	// #3
   14c38:	mov	x1, x0
   14c3c:	and	x0, x19, x21
   14c40:	bl	12cb8 <__sanitizer_set_report_fd@@Base+0x2418>
   14c44:	add	x1, sp, #0x34
   14c48:	mov	x19, x0
   14c4c:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   14c50:	tst	w0, #0xff
   14c54:	b.eq	14cb4 <__sanitizer_set_report_fd@@Base+0x4414>  // b.none
   14c58:	cbz	w22, 14c7c <__sanitizer_set_report_fd@@Base+0x43dc>
   14c5c:	ldr	w0, [sp, #52]
   14c60:	cmp	w0, #0xc
   14c64:	b.ne	14c7c <__sanitizer_set_report_fd@@Base+0x43dc>  // b.any
   14c68:	mov	x0, #0x0                   	// #0
   14c6c:	ldp	x21, x22, [sp, #16]
   14c70:	ldr	x30, [sp, #32]
   14c74:	ldp	x19, x20, [sp], #96
   14c78:	ret
   14c7c:	add	x19, sp, #0x38
   14c80:	mov	x3, x21
   14c84:	mov	x1, #0x28                  	// #40
   14c88:	mov	x0, x19
   14c8c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14c90:	add	x2, x2, #0xb51
   14c94:	bl	16710 <OnPrint@@Base+0x4>
   14c98:	ldr	w3, [sp, #52]
   14c9c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14ca0:	mov	x1, x19
   14ca4:	add	x2, x2, #0xa78
   14ca8:	mov	x0, x20
   14cac:	mov	w4, #0x0                   	// #0
   14cb0:	bl	dbc4 <__sancov_default_options@@Base+0x1c24>
   14cb4:	mov	x0, x20
   14cb8:	bl	df94 <__sancov_default_options@@Base+0x1ff4>
   14cbc:	mov	x0, x19
   14cc0:	b	14c6c <__sanitizer_set_report_fd@@Base+0x43cc>
   14cc4:	mov	w2, #0x0                   	// #0
   14cc8:	b	14bf8 <__sanitizer_set_report_fd@@Base+0x4358>
   14ccc:	mov	w2, #0x1                   	// #1
   14cd0:	b	14bf8 <__sanitizer_set_report_fd@@Base+0x4358>
   14cd4:	str	x30, [sp, #-16]!
   14cd8:	mov	w2, #0x0                   	// #0
   14cdc:	bl	12cdc <__sanitizer_set_report_fd@@Base+0x243c>
   14ce0:	cmp	w0, #0x0
   14ce4:	cset	w0, eq  // eq = none
   14ce8:	ldr	x30, [sp], #16
   14cec:	ret
   14cf0:	str	x30, [sp, #-16]!
   14cf4:	mov	w2, #0x1                   	// #1
   14cf8:	bl	12cdc <__sanitizer_set_report_fd@@Base+0x243c>
   14cfc:	cmp	w0, #0x0
   14d00:	cset	w0, eq  // eq = none
   14d04:	ldr	x30, [sp], #16
   14d08:	ret
   14d0c:	ret
   14d10:	stp	x19, x20, [sp, #-32]!
   14d14:	cmp	w1, #0x2
   14d18:	mov	x20, x2
   14d1c:	str	x30, [sp, #16]
   14d20:	b.hi	14d30 <__sanitizer_set_report_fd@@Base+0x4490>  // b.pmore
   14d24:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14d28:	add	x2, x2, #0xcf0
   14d2c:	ldrsh	w3, [x2, w1, uxtw #1]
   14d30:	mov	w2, #0x1b0                 	// #432
   14d34:	mov	w1, w3
   14d38:	bl	12d18 <__sanitizer_set_report_fd@@Base+0x2478>
   14d3c:	mov	x19, x0
   14d40:	mov	x1, x20
   14d44:	sxtw	x0, w0
   14d48:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   14d4c:	tst	w0, #0xff
   14d50:	csinv	w0, w19, wzr, eq  // eq = none
   14d54:	ldr	x30, [sp, #16]
   14d58:	ldp	x19, x20, [sp], #32
   14d5c:	ret
   14d60:	b	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   14d64:	stp	x19, x20, [sp, #-32]!
   14d68:	mov	x19, x3
   14d6c:	stp	x21, x30, [sp, #16]
   14d70:	mov	x21, x4
   14d74:	bl	12d3c <__sanitizer_set_report_fd@@Base+0x249c>
   14d78:	mov	x1, x21
   14d7c:	mov	x20, x0
   14d80:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   14d84:	tst	w0, #0xff
   14d88:	b.ne	14d9c <__sanitizer_set_report_fd@@Base+0x44fc>  // b.any
   14d8c:	cbz	x19, 14d94 <__sanitizer_set_report_fd@@Base+0x44f4>
   14d90:	str	x20, [x19]
   14d94:	mov	w0, #0x1                   	// #1
   14d98:	b	14da0 <__sanitizer_set_report_fd@@Base+0x4500>
   14d9c:	mov	w0, #0x0                   	// #0
   14da0:	ldp	x21, x30, [sp, #16]
   14da4:	ldp	x19, x20, [sp], #32
   14da8:	ret
   14dac:	stp	x19, x20, [sp, #-32]!
   14db0:	mov	x19, x3
   14db4:	stp	x21, x30, [sp, #16]
   14db8:	mov	x21, x4
   14dbc:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x24c0>
   14dc0:	mov	x1, x21
   14dc4:	mov	x20, x0
   14dc8:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   14dcc:	tst	w0, #0xff
   14dd0:	b.ne	14de4 <__sanitizer_set_report_fd@@Base+0x4544>  // b.any
   14dd4:	cbz	x19, 14ddc <__sanitizer_set_report_fd@@Base+0x453c>
   14dd8:	str	x20, [x19]
   14ddc:	mov	w0, #0x1                   	// #1
   14de0:	b	14de8 <__sanitizer_set_report_fd@@Base+0x4548>
   14de4:	mov	w0, #0x0                   	// #0
   14de8:	ldp	x21, x30, [sp, #16]
   14dec:	ldp	x19, x20, [sp], #32
   14df0:	ret
   14df4:	stp	x19, x30, [sp, #-16]!
   14df8:	mov	x19, x2
   14dfc:	bl	12e6c <__sanitizer_set_report_fd@@Base+0x25cc>
   14e00:	mov	x1, x19
   14e04:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   14e08:	and	w0, w0, #0xff
   14e0c:	eor	w0, w0, #0x1
   14e10:	ldp	x19, x30, [sp], #16
   14e14:	ret
   14e18:	stp	x19, x20, [sp, #-32]!
   14e1c:	mov	x2, #0x0                   	// #0
   14e20:	stp	x21, x30, [sp, #16]
   14e24:	mov	x21, x1
   14e28:	mov	w1, #0x0                   	// #0
   14e2c:	bl	14d10 <__sanitizer_set_report_fd@@Base+0x4470>
   14e30:	cmn	w0, #0x1
   14e34:	b.ne	14e58 <__sanitizer_set_report_fd@@Base+0x45b8>  // b.any
   14e38:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14e3c:	add	x2, x2, #0xb69
   14e40:	mov	x4, #0x0                   	// #0
   14e44:	mov	x3, #0x0                   	// #0
   14e48:	mov	w1, #0xc9                  	// #201
   14e4c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14e50:	add	x0, x0, #0xae3
   14e54:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   14e58:	mov	w20, w0
   14e5c:	bl	12df8 <__sanitizer_set_report_fd@@Base+0x2558>
   14e60:	mov	x19, x0
   14e64:	cmn	x0, #0x1
   14e68:	b.ne	14e84 <__sanitizer_set_report_fd@@Base+0x45e4>  // b.any
   14e6c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14e70:	mov	x4, x0
   14e74:	mov	x3, x0
   14e78:	add	x2, x2, #0xb85
   14e7c:	mov	w1, #0xcb                  	// #203
   14e80:	b	14e4c <__sanitizer_set_report_fd@@Base+0x45ac>
   14e84:	cbnz	x0, 14ea0 <__sanitizer_set_report_fd@@Base+0x4600>
   14e88:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14e8c:	mov	x4, #0x0                   	// #0
   14e90:	add	x2, x2, #0xb9f
   14e94:	mov	x3, #0x0                   	// #0
   14e98:	mov	w1, #0xcc                  	// #204
   14e9c:	b	14e4c <__sanitizer_set_report_fd@@Base+0x45ac>
   14ea0:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   14ea4:	mov	x1, x0
   14ea8:	mov	x0, x19
   14eac:	bl	c730 <__sancov_default_options@@Base+0x790>
   14eb0:	mov	w4, w20
   14eb4:	mov	x1, x0
   14eb8:	str	x1, [x21]
   14ebc:	mov	x5, #0x0                   	// #0
   14ec0:	mov	w3, #0x2                   	// #2
   14ec4:	mov	w2, #0x1                   	// #1
   14ec8:	mov	x0, #0x0                   	// #0
   14ecc:	bl	12cb8 <__sanitizer_set_report_fd@@Base+0x2418>
   14ed0:	mov	x1, #0x0                   	// #0
   14ed4:	mov	x19, x0
   14ed8:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   14edc:	tst	w0, #0xff
   14ee0:	csel	x0, x19, xzr, eq  // eq = none
   14ee4:	ldp	x21, x30, [sp, #16]
   14ee8:	ldp	x19, x20, [sp], #32
   14eec:	ret
   14ef0:	stp	x19, x20, [sp, #-64]!
   14ef4:	cmp	x0, #0x0
   14ef8:	mov	x5, x3
   14efc:	mov	w4, w2
   14f00:	stp	x21, x22, [sp, #16]
   14f04:	mov	x21, x3
   14f08:	mov	x3, #0x11                  	// #17
   14f0c:	csinc	x3, x3, xzr, ne  // ne = any
   14f10:	mov	w20, w2
   14f14:	mov	w2, #0x3                   	// #3
   14f18:	mov	x22, x1
   14f1c:	str	x30, [sp, #32]
   14f20:	bl	12cb8 <__sanitizer_set_report_fd@@Base+0x2418>
   14f24:	mov	x19, x0
   14f28:	add	x1, sp, #0x3c
   14f2c:	str	wzr, [sp, #60]
   14f30:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   14f34:	tst	w0, #0xff
   14f38:	b.eq	14f70 <__sanitizer_set_report_fd@@Base+0x46d0>  // b.none
   14f3c:	ldr	w5, [sp, #60]
   14f40:	mov	x4, x19
   14f44:	mov	x3, x22
   14f48:	mov	x2, x21
   14f4c:	mov	w1, w20
   14f50:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14f54:	add	x0, x0, #0xbb1
   14f58:	bl	16994 <OnPrint@@Base+0x288>
   14f5c:	mov	x0, #0x0                   	// #0
   14f60:	ldp	x21, x22, [sp, #16]
   14f64:	ldr	x30, [sp, #32]
   14f68:	ldp	x19, x20, [sp], #64
   14f6c:	ret
   14f70:	mov	x0, x19
   14f74:	b	14f60 <__sanitizer_set_report_fd@@Base+0x46c0>
   14f78:	stp	x19, x20, [sp, #-160]!
   14f7c:	mov	x20, x1
   14f80:	mov	w1, #0x1                   	// #1
   14f84:	stp	x21, x22, [sp, #16]
   14f88:	add	x22, sp, #0x30
   14f8c:	mov	x21, x0
   14f90:	stp	x23, x30, [sp, #32]
   14f94:	add	x23, sp, #0x50
   14f98:	mov	x0, x22
   14f9c:	bl	16da0 <OnPrint@@Base+0x694>
   14fa0:	stp	xzr, xzr, [sp, #104]
   14fa4:	str	xzr, [sp, #152]
   14fa8:	mov	x1, x23
   14fac:	mov	x0, x22
   14fb0:	bl	171d0 <OnPrint@@Base+0xac4>
   14fb4:	tst	w0, #0xff
   14fb8:	b.eq	15064 <__sanitizer_set_report_fd@@Base+0x47c4>  // b.none
   14fbc:	ldp	x0, x2, [sp, #80]
   14fc0:	cmp	x0, x2
   14fc4:	b.eq	14fa8 <__sanitizer_set_report_fd@@Base+0x4708>  // b.none
   14fc8:	cbnz	x2, 14fec <__sanitizer_set_report_fd@@Base+0x474c>
   14fcc:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14fd0:	add	x2, x2, #0xbee
   14fd4:	mov	x4, #0x0                   	// #0
   14fd8:	mov	x3, #0x0                   	// #0
   14fdc:	mov	w1, #0xef                  	// #239
   14fe0:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14fe4:	add	x0, x0, #0xae3
   14fe8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   14fec:	sub	x2, x2, #0x1
   14ff0:	cmp	x0, x2
   14ff4:	b.ls	15010 <__sanitizer_set_report_fd@@Base+0x4770>  // b.plast
   14ff8:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   14ffc:	mov	x4, #0x0                   	// #0
   15000:	add	x2, x2, #0xc07
   15004:	mov	x3, #0x0                   	// #0
   15008:	mov	w1, #0xe1                  	// #225
   1500c:	b	14fe0 <__sanitizer_set_report_fd@@Base+0x4740>
   15010:	cmp	x21, x20
   15014:	b.ls	15030 <__sanitizer_set_report_fd@@Base+0x4790>  // b.plast
   15018:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1501c:	mov	x4, #0x0                   	// #0
   15020:	add	x2, x2, #0xc21
   15024:	mov	x3, #0x0                   	// #0
   15028:	mov	w1, #0xe2                  	// #226
   1502c:	b	14fe0 <__sanitizer_set_report_fd@@Base+0x4740>
   15030:	cmp	x2, x21
   15034:	cset	w19, cc  // cc = lo, ul, last
   15038:	cmp	x0, x20
   1503c:	cset	w0, hi  // hi = pmore
   15040:	orr	w19, w19, w0
   15044:	cbnz	w19, 14fa8 <__sanitizer_set_report_fd@@Base+0x4708>
   15048:	mov	x0, x22
   1504c:	bl	16cc4 <OnPrint@@Base+0x5b8>
   15050:	mov	w0, w19
   15054:	ldp	x21, x22, [sp, #16]
   15058:	ldp	x23, x30, [sp, #32]
   1505c:	ldp	x19, x20, [sp], #160
   15060:	ret
   15064:	mov	w19, #0x1                   	// #1
   15068:	b	15048 <__sanitizer_set_report_fd@@Base+0x47a8>
   1506c:	stp	x19, x20, [sp, #-160]!
   15070:	mov	w1, #0x1                   	// #1
   15074:	add	x20, sp, #0x30
   15078:	stp	x21, x22, [sp, #16]
   1507c:	mov	x0, x20
   15080:	str	x30, [sp, #32]
   15084:	bl	16da0 <OnPrint@@Base+0x694>
   15088:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1508c:	add	x1, x1, #0xc3b
   15090:	mov	w2, #0x0                   	// #0
   15094:	mov	x0, #0xfff                 	// #4095
   15098:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   1509c:	mov	x19, x0
   150a0:	mov	x0, #0xfff                 	// #4095
   150a4:	adrp	x21, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   150a8:	add	x22, sp, #0x50
   150ac:	add	x21, x21, #0xc67
   150b0:	stp	x19, x0, [sp, #104]
   150b4:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   150b8:	add	x0, x0, #0xc4a
   150bc:	str	xzr, [sp, #152]
   150c0:	bl	16a18 <OnPrint@@Base+0x30c>
   150c4:	mov	x1, x22
   150c8:	mov	x0, x20
   150cc:	bl	171d0 <OnPrint@@Base+0xac4>
   150d0:	tst	w0, #0xff
   150d4:	b.eq	150ec <__sanitizer_set_report_fd@@Base+0x484c>  // b.none
   150d8:	ldp	x1, x2, [sp, #80]
   150dc:	mov	x0, x21
   150e0:	ldr	x3, [sp, #104]
   150e4:	bl	16994 <OnPrint@@Base+0x288>
   150e8:	b	150c4 <__sanitizer_set_report_fd@@Base+0x4824>
   150ec:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   150f0:	add	x0, x0, #0xc72
   150f4:	bl	16a18 <OnPrint@@Base+0x30c>
   150f8:	mov	x1, #0xfff                 	// #4095
   150fc:	mov	x0, x19
   15100:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   15104:	mov	x0, x20
   15108:	bl	16cc4 <OnPrint@@Base+0x5b8>
   1510c:	ldp	x21, x22, [sp, #16]
   15110:	ldr	x30, [sp, #32]
   15114:	ldp	x19, x20, [sp], #160
   15118:	ret
   1511c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15120:	add	x0, x0, #0xc8e
   15124:	b	12fa0 <__sanitizer_set_report_fd@@Base+0x2700>
   15128:	and	w0, w0, #0xff
   1512c:	cmp	w0, #0x2f
   15130:	cset	w0, eq  // eq = none
   15134:	ret
   15138:	cbz	x0, 1514c <__sanitizer_set_report_fd@@Base+0x48ac>
   1513c:	ldrb	w0, [x0]
   15140:	cmp	w0, #0x2f
   15144:	cset	w0, eq  // eq = none
   15148:	ret
   1514c:	mov	w0, #0x0                   	// #0
   15150:	b	15148 <__sanitizer_set_report_fd@@Base+0x48a8>
   15154:	stp	x19, x20, [sp, #-48]!
   15158:	mov	x19, x0
   1515c:	stp	x21, x22, [sp, #16]
   15160:	mov	x21, x2
   15164:	mov	x22, x1
   15168:	mov	w1, #0x1                   	// #1
   1516c:	ldr	x20, [x0]
   15170:	str	x30, [sp, #32]
   15174:	ldxrb	w0, [x20]
   15178:	stxrb	w2, w1, [x20]
   1517c:	cbnz	w2, 15174 <__sanitizer_set_report_fd@@Base+0x48d4>
   15180:	dmb	ish
   15184:	tst	w0, #0xff
   15188:	b.eq	15194 <__sanitizer_set_report_fd@@Base+0x48f4>  // b.none
   1518c:	mov	x0, x20
   15190:	bl	b734 <__ubsan_handle_cfi_bad_type@@Base+0x534>
   15194:	mov	x0, x19
   15198:	bl	104bc <__sanitizer_cov_trace_pc_guard_init@@Base+0x19e8>
   1519c:	ldr	w0, [x19, #8]
   151a0:	mov	x2, x21
   151a4:	mov	x1, x22
   151a8:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x24c0>
   151ac:	cmp	x0, x21
   151b0:	b.eq	151dc <__sanitizer_set_report_fd@@Base+0x493c>  // b.none
   151b4:	ldr	w20, [x19, #8]
   151b8:	adrp	x19, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   151bc:	add	x19, x19, #0xc92
   151c0:	mov	x0, x19
   151c4:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   151c8:	mov	x1, x19
   151cc:	mov	x2, x0
   151d0:	mov	w0, w20
   151d4:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x24c0>
   151d8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   151dc:	dmb	ish
   151e0:	strb	wzr, [x20]
   151e4:	ldp	x21, x22, [sp, #16]
   151e8:	ldr	x30, [sp, #32]
   151ec:	ldp	x19, x20, [sp], #48
   151f0:	ret
   151f4:	ldr	x0, [x0]
   151f8:	ldr	x0, [x0, #16]
   151fc:	ret
   15200:	ldr	x0, [x0]
   15204:	ldr	w0, [x0]
   15208:	cmp	w0, #0xb
   1520c:	cset	w0, eq  // eq = none
   15210:	ret
   15214:	ldr	x0, [x0]
   15218:	ldr	w0, [x0]
   1521c:	ret
   15220:	ldr	x0, [x0]
   15224:	ldr	w0, [x0]
   15228:	sub	w0, w0, #0x4
   1522c:	cmp	w0, #0x7
   15230:	b.hi	1527c <__sanitizer_set_report_fd@@Base+0x49dc>  // b.pmore
   15234:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15238:	add	x1, x1, #0xce8
   1523c:	ldrb	w0, [x1, w0, uxtw]
   15240:	adr	x1, 1524c <__sanitizer_set_report_fd@@Base+0x49ac>
   15244:	add	x0, x1, w0, sxtb #2
   15248:	br	x0
   1524c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15250:	add	x0, x0, #0xce2
   15254:	ret
   15258:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1525c:	add	x0, x0, #0xcd9
   15260:	b	15254 <__sanitizer_set_report_fd@@Base+0x49b4>
   15264:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   15268:	add	x0, x0, #0xec0
   1526c:	b	15254 <__sanitizer_set_report_fd@@Base+0x49b4>
   15270:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15274:	add	x0, x0, #0xcde
   15278:	b	15254 <__sanitizer_set_report_fd@@Base+0x49b4>
   1527c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15280:	add	x0, x0, #0xcc6
   15284:	b	15254 <__sanitizer_set_report_fd@@Base+0x49b4>
   15288:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1528c:	add	x0, x0, #0xcd5
   15290:	b	15254 <__sanitizer_set_report_fd@@Base+0x49b4>
   15294:	stp	x19, x20, [sp, #-208]!
   15298:	add	x20, sp, #0x40
   1529c:	stp	x21, x22, [sp, #16]
   152a0:	mov	x21, x2
   152a4:	mov	x22, x1
   152a8:	mov	w1, #0x0                   	// #0
   152ac:	stp	x23, x24, [sp, #32]
   152b0:	mov	x23, x0
   152b4:	mov	x0, x20
   152b8:	str	x30, [sp, #48]
   152bc:	bl	16da0 <OnPrint@@Base+0x694>
   152c0:	add	x0, sp, #0x60
   152c4:	mov	x1, #0x1000                	// #4096
   152c8:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
   152cc:	add	x24, sp, #0x80
   152d0:	ldr	x0, [sp, #96]
   152d4:	str	x0, [sp, #152]
   152d8:	mov	x0, #0x1000                	// #4096
   152dc:	str	x0, [sp, #160]
   152e0:	str	xzr, [sp, #200]
   152e4:	mov	x1, x24
   152e8:	mov	x0, x20
   152ec:	bl	171d0 <OnPrint@@Base+0xac4>
   152f0:	ands	w19, w0, #0xff
   152f4:	b.eq	15320 <__sanitizer_set_report_fd@@Base+0x4a80>  // b.none
   152f8:	ldr	x0, [sp, #168]
   152fc:	tbz	w0, #2, 152e4 <__sanitizer_set_report_fd@@Base+0x4a44>
   15300:	ldr	x1, [sp, #152]
   15304:	mov	x0, x23
   15308:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1530c:	cbnz	w0, 152e4 <__sanitizer_set_report_fd@@Base+0x4a44>
   15310:	ldr	x0, [sp, #128]
   15314:	str	x0, [x22]
   15318:	ldr	x0, [sp, #136]
   1531c:	str	x0, [x21]
   15320:	ldp	x0, x1, [sp, #96]
   15324:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   15328:	mov	x0, x20
   1532c:	bl	16cc4 <OnPrint@@Base+0x5b8>
   15330:	mov	w0, w19
   15334:	ldp	x21, x22, [sp, #16]
   15338:	ldp	x23, x24, [sp, #32]
   1533c:	ldr	x30, [sp, #48]
   15340:	ldp	x19, x20, [sp], #208
   15344:	ret
   15348:	str	x30, [sp, #-32]!
   1534c:	add	x1, sp, #0x10
   15350:	bl	6a70 <getrlimit@plt>
   15354:	cbz	w0, 15378 <__sanitizer_set_report_fd@@Base+0x4ad8>
   15358:	sxtw	x4, w0
   1535c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15360:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15364:	add	x2, x2, #0xcf6
   15368:	add	x0, x0, #0xd19
   1536c:	mov	x3, #0x0                   	// #0
   15370:	mov	w1, #0x5a                  	// #90
   15374:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   15378:	ldr	x0, [sp, #16]
   1537c:	ldr	x30, [sp], #32
   15380:	ret
   15384:	stp	x19, x30, [sp, #-32]!
   15388:	str	x1, [sp, #16]
   1538c:	str	x1, [sp, #24]
   15390:	add	x1, sp, #0x10
   15394:	bl	6930 <setrlimit@plt>
   15398:	cbz	w0, 153c4 <__sanitizer_set_report_fd@@Base+0x4b24>
   1539c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   153a0:	ldr	x0, [x0, #4024]
   153a4:	ldr	x19, [x0]
   153a8:	bl	6860 <__errno_location@plt>
   153ac:	ldr	w2, [x0]
   153b0:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   153b4:	mov	x1, x19
   153b8:	add	x0, x0, #0xd5e
   153bc:	bl	16a18 <OnPrint@@Base+0x30c>
   153c0:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   153c4:	ldp	x19, x30, [sp], #32
   153c8:	ret
   153cc:	stp	x19, x20, [sp, #-192]!
   153d0:	mov	w19, w0
   153d4:	stp	x21, x30, [sp, #16]
   153d8:	mov	x21, x1
   153dc:	bl	1384c <__sanitizer_set_report_fd@@Base+0x2fac>
   153e0:	cbz	w0, 15478 <__sanitizer_set_report_fd@@Base+0x4bd8>
   153e4:	add	x20, sp, #0x28
   153e8:	mov	x2, #0x98                  	// #152
   153ec:	mov	w1, #0x0                   	// #0
   153f0:	mov	x0, x20
   153f4:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   153f8:	str	x21, [sp, #40]
   153fc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   15400:	mov	w1, #0x4                   	// #4
   15404:	movk	w1, #0x4000, lsl #16
   15408:	mov	x2, #0x0                   	// #0
   1540c:	ldr	x0, [x0, #4056]
   15410:	ldrb	w0, [x0, #97]
   15414:	cmp	w0, #0x0
   15418:	mov	w0, #0x4                   	// #4
   1541c:	movk	w0, #0x4800, lsl #16
   15420:	csel	w0, w0, w1, ne  // ne = any
   15424:	mov	x1, x20
   15428:	str	w0, [sp, #176]
   1542c:	mov	w0, w19
   15430:	bl	13f9c <__sanitizer_set_report_fd@@Base+0x36fc>
   15434:	sxtw	x4, w0
   15438:	cbz	w0, 15458 <__sanitizer_set_report_fd@@Base+0x4bb8>
   1543c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15440:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15444:	add	x2, x2, #0xd7f
   15448:	add	x0, x0, #0xd19
   1544c:	mov	x3, #0x0                   	// #0
   15450:	mov	w1, #0xd2                  	// #210
   15454:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   15458:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1545c:	ldr	x0, [x0, #3896]
   15460:	ldr	w0, [x0]
   15464:	cbz	w0, 15478 <__sanitizer_set_report_fd@@Base+0x4bd8>
   15468:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1546c:	mov	w1, w19
   15470:	add	x0, x0, #0xdb9
   15474:	bl	16a18 <OnPrint@@Base+0x30c>
   15478:	ldp	x21, x30, [sp, #16]
   1547c:	ldp	x19, x20, [sp], #192
   15480:	ret
   15484:	b	6a10 <getuid@plt>
   15488:	b	6a00 <pthread_self@plt>
   1548c:	stp	x19, x20, [sp, #-32]!
   15490:	mov	x20, x1
   15494:	stp	x21, x30, [sp, #16]
   15498:	mov	x21, x0
   1549c:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   154a0:	mov	x19, x0
   154a4:	mov	x1, x0
   154a8:	neg	x19, x19
   154ac:	mov	x0, x21
   154b0:	bl	c730 <__sancov_default_options@@Base+0x790>
   154b4:	and	x1, x19, x20
   154b8:	cmp	x0, x1
   154bc:	b.cs	154d4 <__sanitizer_set_report_fd@@Base+0x4c34>  // b.hs, b.nlast
   154c0:	ldp	x21, x30, [sp, #16]
   154c4:	sub	x1, x1, x0
   154c8:	ldp	x19, x20, [sp], #32
   154cc:	mov	w2, #0x4                   	// #4
   154d0:	b	6810 <madvise@plt>
   154d4:	ldp	x21, x30, [sp, #16]
   154d8:	ldp	x19, x20, [sp], #32
   154dc:	ret
   154e0:	str	x30, [sp, #-16]!
   154e4:	mov	w2, #0xf                   	// #15
   154e8:	bl	6810 <madvise@plt>
   154ec:	cmp	w0, #0x0
   154f0:	cset	w0, eq  // eq = none
   154f4:	ldr	x30, [sp], #16
   154f8:	ret
   154fc:	str	x30, [sp, #-16]!
   15500:	mov	w2, #0x10                  	// #16
   15504:	bl	6810 <madvise@plt>
   15508:	cmp	w0, #0x0
   1550c:	cset	w0, eq  // eq = none
   15510:	ldr	x30, [sp], #16
   15514:	ret
   15518:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1551c:	ldr	x0, [x0, #4056]
   15520:	ldrb	w0, [x0, #178]
   15524:	cbz	w0, 15534 <__sanitizer_set_report_fd@@Base+0x4c94>
   15528:	mov	x1, #0x0                   	// #0
   1552c:	mov	w0, #0x4                   	// #4
   15530:	b	15384 <__sanitizer_set_report_fd@@Base+0x4ae4>
   15534:	ret
   15538:	str	x30, [sp, #-16]!
   1553c:	mov	w0, #0x3                   	// #3
   15540:	bl	15348 <__sanitizer_set_report_fd@@Base+0x4aa8>
   15544:	cmn	x0, #0x1
   15548:	cset	w0, eq  // eq = none
   1554c:	ldr	x30, [sp], #16
   15550:	ret
   15554:	mov	w0, #0x3                   	// #3
   15558:	b	15348 <__sanitizer_set_report_fd@@Base+0x4aa8>
   1555c:	mov	x1, x0
   15560:	str	x30, [sp, #-16]!
   15564:	mov	w0, #0x3                   	// #3
   15568:	bl	15384 <__sanitizer_set_report_fd@@Base+0x4ae4>
   1556c:	bl	15538 <__sanitizer_set_report_fd@@Base+0x4c98>
   15570:	tst	w0, #0xff
   15574:	b.eq	15598 <__sanitizer_set_report_fd@@Base+0x4cf8>  // b.none
   15578:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1557c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15580:	add	x2, x2, #0xde0
   15584:	add	x0, x0, #0xd19
   15588:	mov	x4, #0x0                   	// #0
   1558c:	mov	x3, #0x0                   	// #0
   15590:	mov	w1, #0x7a                  	// #122
   15594:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   15598:	ldr	x30, [sp], #16
   1559c:	ret
   155a0:	str	x30, [sp, #-16]!
   155a4:	mov	w0, #0x9                   	// #9
   155a8:	bl	15348 <__sanitizer_set_report_fd@@Base+0x4aa8>
   155ac:	cmn	x0, #0x1
   155b0:	cset	w0, eq  // eq = none
   155b4:	ldr	x30, [sp], #16
   155b8:	ret
   155bc:	str	x30, [sp, #-16]!
   155c0:	mov	x1, #0xffffffffffffffff    	// #-1
   155c4:	mov	w0, #0x9                   	// #9
   155c8:	bl	15384 <__sanitizer_set_report_fd@@Base+0x4ae4>
   155cc:	bl	155a0 <__sanitizer_set_report_fd@@Base+0x4d00>
   155d0:	tst	w0, #0xff
   155d4:	b.ne	155f8 <__sanitizer_set_report_fd@@Base+0x4d58>  // b.any
   155d8:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   155dc:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   155e0:	add	x2, x2, #0xe03
   155e4:	add	x0, x0, #0xd19
   155e8:	mov	x4, #0x0                   	// #0
   155ec:	mov	x3, #0x0                   	// #0
   155f0:	mov	w1, #0x84                  	// #132
   155f4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   155f8:	ldr	x30, [sp], #16
   155fc:	ret
   15600:	b	65b0 <sleep@plt>
   15604:	mov	w1, #0x3e8                 	// #1000
   15608:	mul	w0, w0, w1
   1560c:	b	6820 <usleep@plt>
   15610:	stp	x19, x30, [sp, #-176]!
   15614:	mov	w0, #0x6                   	// #6
   15618:	bl	1384c <__sanitizer_set_report_fd@@Base+0x2fac>
   1561c:	cbz	w0, 15648 <__sanitizer_set_report_fd@@Base+0x4da8>
   15620:	add	x19, sp, #0x18
   15624:	mov	x2, #0x98                  	// #152
   15628:	mov	w1, #0x0                   	// #0
   1562c:	mov	x0, x19
   15630:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   15634:	str	xzr, [sp, #24]
   15638:	mov	x1, x19
   1563c:	mov	x2, #0x0                   	// #0
   15640:	mov	w0, #0x6                   	// #6
   15644:	bl	13f9c <__sanitizer_set_report_fd@@Base+0x36fc>
   15648:	bl	6980 <abort@plt>
   1564c:	b	2a498 <__asan_backtrace_vector_release@@Base+0x5c>
   15650:	str	x30, [sp, #-16]!
   15654:	bl	6620 <isatty@plt>
   15658:	cmp	w0, #0x0
   1565c:	cset	w0, ne  // ne = any
   15660:	ldr	x30, [sp], #16
   15664:	ret
   15668:	str	x30, [sp, #-64]!
   1566c:	mov	x0, #0x0                   	// #0
   15670:	add	x1, sp, #0x10
   15674:	bl	6a80 <sigaltstack@plt>
   15678:	cbz	w0, 1569c <__sanitizer_set_report_fd@@Base+0x4dfc>
   1567c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15680:	sxtw	x4, w0
   15684:	add	x2, x2, #0xe28
   15688:	mov	x3, #0x0                   	// #0
   1568c:	mov	w1, #0xb0                  	// #176
   15690:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15694:	add	x0, x0, #0xd19
   15698:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1569c:	ldr	w0, [sp, #24]
   156a0:	tbz	w0, #1, 156f0 <__sanitizer_set_report_fd@@Base+0x4e50>
   156a4:	mov	w2, #0x0                   	// #0
   156a8:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   156ac:	mov	x0, #0x10000               	// #65536
   156b0:	add	x1, x1, #0xe55
   156b4:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   156b8:	str	x0, [sp, #40]
   156bc:	mov	x0, #0x10000               	// #65536
   156c0:	mov	x1, #0x0                   	// #0
   156c4:	str	wzr, [sp, #48]
   156c8:	str	x0, [sp, #56]
   156cc:	add	x0, sp, #0x28
   156d0:	bl	6a80 <sigaltstack@plt>
   156d4:	sxtw	x4, w0
   156d8:	cbz	w0, 156f0 <__sanitizer_set_report_fd@@Base+0x4e50>
   156dc:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   156e0:	mov	x3, #0x0                   	// #0
   156e4:	add	x2, x2, #0xe6d
   156e8:	mov	w1, #0xbb                  	// #187
   156ec:	b	15690 <__sanitizer_set_report_fd@@Base+0x4df0>
   156f0:	ldr	x30, [sp], #64
   156f4:	ret
   156f8:	str	x30, [sp, #-64]!
   156fc:	mov	w0, #0x2                   	// #2
   15700:	str	w0, [sp, #24]
   15704:	mov	x0, #0x10000               	// #65536
   15708:	add	x1, sp, #0x28
   1570c:	str	xzr, [sp, #16]
   15710:	str	x0, [sp, #32]
   15714:	add	x0, sp, #0x10
   15718:	bl	6a80 <sigaltstack@plt>
   1571c:	cbz	w0, 15740 <__sanitizer_set_report_fd@@Base+0x4ea0>
   15720:	sxtw	x4, w0
   15724:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15728:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1572c:	add	x2, x2, #0xe9a
   15730:	add	x0, x0, #0xd19
   15734:	mov	x3, #0x0                   	// #0
   15738:	mov	w1, #0xc3                  	// #195
   1573c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   15740:	ldr	x0, [sp, #40]
   15744:	ldr	x1, [sp, #56]
   15748:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1574c:	ldr	x30, [sp], #64
   15750:	ret
   15754:	stp	x19, x30, [sp, #-16]!
   15758:	mov	x19, x0
   1575c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   15760:	ldr	x0, [x0, #4056]
   15764:	ldrb	w0, [x0, #97]
   15768:	cbz	w0, 15770 <__sanitizer_set_report_fd@@Base+0x4ed0>
   1576c:	bl	15668 <__sanitizer_set_report_fd@@Base+0x4dc8>
   15770:	mov	x1, x19
   15774:	mov	w0, #0xb                   	// #11
   15778:	bl	153cc <__sanitizer_set_report_fd@@Base+0x4b2c>
   1577c:	mov	x1, x19
   15780:	mov	w0, #0x7                   	// #7
   15784:	bl	153cc <__sanitizer_set_report_fd@@Base+0x4b2c>
   15788:	mov	x1, x19
   1578c:	mov	w0, #0x6                   	// #6
   15790:	bl	153cc <__sanitizer_set_report_fd@@Base+0x4b2c>
   15794:	mov	x1, x19
   15798:	mov	w0, #0x8                   	// #8
   1579c:	bl	153cc <__sanitizer_set_report_fd@@Base+0x4b2c>
   157a0:	mov	x1, x19
   157a4:	mov	w0, #0x4                   	// #4
   157a8:	bl	153cc <__sanitizer_set_report_fd@@Base+0x4b2c>
   157ac:	mov	x1, x19
   157b0:	mov	w0, #0x5                   	// #5
   157b4:	ldp	x19, x30, [sp], #16
   157b8:	b	153cc <__sanitizer_set_report_fd@@Base+0x4b2c>
   157bc:	stp	x19, x20, [sp, #-32]!
   157c0:	mov	x19, x0
   157c4:	ldr	x20, [x0, #16]
   157c8:	str	x30, [sp, #16]
   157cc:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   157d0:	ldr	x1, [x19, #32]
   157d4:	add	x20, x20, x0
   157d8:	cmp	x20, x1
   157dc:	b.ls	15830 <__sanitizer_set_report_fd@@Base+0x4f90>  // b.plast
   157e0:	mov	x0, #0xffff                	// #65535
   157e4:	add	x1, x1, x0
   157e8:	ldr	x0, [x19, #16]
   157ec:	cmp	x0, x1
   157f0:	b.cs	15830 <__sanitizer_set_report_fd@@Base+0x4f90>  // b.hs, b.nlast
   157f4:	ldr	x0, [x19]
   157f8:	ldr	w1, [x0, #8]
   157fc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   15800:	ldr	x0, [x0, #3768]
   15804:	ldr	w0, [x0]
   15808:	cmp	w1, w0
   1580c:	b.eq	15838 <__sanitizer_set_report_fd@@Base+0x4f98>  // b.none
   15810:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   15814:	ldr	x0, [x0, #3784]
   15818:	ldr	w0, [x0]
   1581c:	cmp	w0, w1
   15820:	cset	w0, eq  // eq = none
   15824:	ldr	x30, [sp, #16]
   15828:	ldp	x19, x20, [sp], #32
   1582c:	ret
   15830:	mov	w0, #0x0                   	// #0
   15834:	b	15824 <__sanitizer_set_report_fd@@Base+0x4f84>
   15838:	mov	w0, #0x1                   	// #1
   1583c:	b	15824 <__sanitizer_set_report_fd@@Base+0x4f84>
   15840:	stp	x19, x20, [sp, #-48]!
   15844:	mov	x19, x1
   15848:	mov	x20, x0
   1584c:	str	x30, [sp, #16]
   15850:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   15854:	mov	x4, #0xa                   	// #10
   15858:	mul	x4, x0, x4
   1585c:	cmp	x19, x4
   15860:	b.cc	15880 <__sanitizer_set_report_fd@@Base+0x4fe0>  // b.lo, b.ul, b.last
   15864:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15868:	mov	x3, x19
   1586c:	add	x2, x2, #0xec9
   15870:	mov	w1, #0x118                 	// #280
   15874:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15878:	add	x0, x0, #0xd19
   1587c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   15880:	add	x0, sp, #0x28
   15884:	bl	64c0 <pipe@plt>
   15888:	cbnz	w0, 158fc <__sanitizer_set_report_fd@@Base+0x505c>
   1588c:	ldr	w0, [sp, #44]
   15890:	mov	x2, x19
   15894:	mov	x1, x20
   15898:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x24c0>
   1589c:	mov	x20, x0
   158a0:	add	x1, sp, #0x24
   158a4:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   158a8:	tst	w0, #0xff
   158ac:	b.eq	158d4 <__sanitizer_set_report_fd@@Base+0x5034>  // b.none
   158b0:	ldrsw	x4, [sp, #36]
   158b4:	mov	w19, #0x0                   	// #0
   158b8:	cmp	x4, #0xe
   158bc:	b.eq	158dc <__sanitizer_set_report_fd@@Base+0x503c>  // b.none
   158c0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   158c4:	mov	x3, #0xe                   	// #14
   158c8:	add	x2, x2, #0xee7
   158cc:	mov	w1, #0x121                 	// #289
   158d0:	b	15874 <__sanitizer_set_report_fd@@Base+0x4fd4>
   158d4:	cmp	x19, x20
   158d8:	cset	w19, eq  // eq = none
   158dc:	ldr	w0, [sp, #40]
   158e0:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   158e4:	ldr	w0, [sp, #44]
   158e8:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   158ec:	mov	w0, w19
   158f0:	ldr	x30, [sp, #16]
   158f4:	ldp	x19, x20, [sp], #48
   158f8:	ret
   158fc:	mov	w19, #0x0                   	// #0
   15900:	b	158ec <__sanitizer_set_report_fd@@Base+0x504c>
   15904:	b	16cf4 <OnPrint@@Base+0x5e8>
   15908:	stp	x19, x20, [sp, #-240]!
   1590c:	stp	x21, x30, [sp, #16]
   15910:	mov	x21, x1
   15914:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   15918:	ldr	x1, [x1, #4056]
   1591c:	ldrb	w1, [x1, #215]
   15920:	cbz	w1, 159d4 <__sanitizer_set_report_fd@@Base+0x5134>
   15924:	mov	x19, x0
   15928:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1592c:	cmp	x0, #0xbd
   15930:	b.ls	15954 <__sanitizer_set_report_fd@@Base+0x50b4>  // b.plast
   15934:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15938:	add	x2, x2, #0xf01
   1593c:	mov	x4, #0x0                   	// #0
   15940:	mov	x3, #0x0                   	// #0
   15944:	mov	w1, #0x13c                 	// #316
   15948:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1594c:	add	x0, x0, #0xd19
   15950:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   15954:	bl	132c0 <__sanitizer_set_report_fd@@Base+0x2a20>
   15958:	add	x20, sp, #0x28
   1595c:	mov	x4, x19
   15960:	mov	x3, x0
   15964:	mov	x1, #0xc8                  	// #200
   15968:	mov	x0, x20
   1596c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15970:	add	x2, x2, #0xf39
   15974:	bl	16710 <OnPrint@@Base+0x4>
   15978:	mov	w2, #0x1c0                 	// #448
   1597c:	mov	w1, #0x242                 	// #578
   15980:	mov	x0, x20
   15984:	bl	6480 <shm_open@plt>
   15988:	mov	x1, x21
   1598c:	mov	w19, w0
   15990:	bl	12d84 <__sanitizer_set_report_fd@@Base+0x24e4>
   15994:	sxtw	x4, w0
   15998:	cbz	w0, 159b0 <__sanitizer_set_report_fd@@Base+0x5110>
   1599c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   159a0:	mov	x3, #0x0                   	// #0
   159a4:	add	x2, x2, #0xf42
   159a8:	mov	w1, #0x142                 	// #322
   159ac:	b	15948 <__sanitizer_set_report_fd@@Base+0x50a8>
   159b0:	mov	x0, x20
   159b4:	bl	6830 <shm_unlink@plt>
   159b8:	sxtw	x4, w0
   159bc:	cbz	w0, 159d8 <__sanitizer_set_report_fd@@Base+0x5138>
   159c0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   159c4:	mov	x3, #0x0                   	// #0
   159c8:	add	x2, x2, #0xf42
   159cc:	mov	w1, #0x144                 	// #324
   159d0:	b	15948 <__sanitizer_set_report_fd@@Base+0x50a8>
   159d4:	mov	w19, #0xffffffff            	// #-1
   159d8:	mov	w0, w19
   159dc:	ldp	x21, x30, [sp, #16]
   159e0:	ldp	x19, x20, [sp], #240
   159e4:	ret
   159e8:	stp	x19, x20, [sp, #-64]!
   159ec:	mov	x20, x1
   159f0:	stp	x21, x22, [sp, #16]
   159f4:	mov	x22, x0
   159f8:	stp	x23, x30, [sp, #32]
   159fc:	cbz	x2, 15a9c <__sanitizer_set_report_fd@@Base+0x51fc>
   15a00:	mov	x0, x2
   15a04:	bl	15908 <__sanitizer_set_report_fd@@Base+0x5068>
   15a08:	cmn	w0, #0x1
   15a0c:	mov	w23, #0x4012                	// #16402
   15a10:	mov	w3, #0x4032                	// #16434
   15a14:	mov	w21, w0
   15a18:	csel	w23, w23, w3, ne  // ne = any
   15a1c:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   15a20:	mov	x1, x0
   15a24:	mov	x19, x0
   15a28:	mov	x0, x20
   15a2c:	bl	c730 <__sancov_default_options@@Base+0x790>
   15a30:	neg	x19, x19
   15a34:	mov	w4, w21
   15a38:	mov	w3, w23
   15a3c:	mov	x5, #0x0                   	// #0
   15a40:	mov	w2, #0x3                   	// #3
   15a44:	mov	x1, x0
   15a48:	and	x0, x19, x22
   15a4c:	bl	12cb8 <__sanitizer_set_report_fd@@Base+0x2418>
   15a50:	add	x1, sp, #0x3c
   15a54:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   15a58:	tst	w0, #0xff
   15a5c:	b.eq	15aa8 <__sanitizer_set_report_fd@@Base+0x5208>  // b.none
   15a60:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   15a64:	ldr	w5, [sp, #60]
   15a68:	mov	x4, x22
   15a6c:	mov	x3, x20
   15a70:	ldr	x0, [x0, #4024]
   15a74:	mov	x2, x20
   15a78:	ldr	x1, [x0]
   15a7c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15a80:	add	x0, x0, #0xf53
   15a84:	bl	16a18 <OnPrint@@Base+0x30c>
   15a88:	mov	w0, #0x0                   	// #0
   15a8c:	ldp	x21, x22, [sp, #16]
   15a90:	ldp	x23, x30, [sp, #32]
   15a94:	ldp	x19, x20, [sp], #64
   15a98:	ret
   15a9c:	mov	w21, #0xffffffff            	// #-1
   15aa0:	mov	w23, #0x4032                	// #16434
   15aa4:	b	15a1c <__sanitizer_set_report_fd@@Base+0x517c>
   15aa8:	mov	x0, x20
   15aac:	bl	df94 <__sancov_default_options@@Base+0x1ff4>
   15ab0:	mov	w0, #0x1                   	// #1
   15ab4:	b	15a8c <__sanitizer_set_report_fd@@Base+0x51ec>
   15ab8:	mov	x0, x1
   15abc:	mov	x1, x2
   15ac0:	b	14ccc <__sanitizer_set_report_fd@@Base+0x442c>
   15ac4:	mov	x0, x1
   15ac8:	mov	x1, x2
   15acc:	b	14cc4 <__sanitizer_set_report_fd@@Base+0x4424>
   15ad0:	mov	x5, x0
   15ad4:	mov	x0, x1
   15ad8:	mov	x1, x2
   15adc:	str	x30, [sp, #-16]!
   15ae0:	ldr	x2, [x5, #8]
   15ae4:	cmp	x1, x2
   15ae8:	b.ls	15b0c <__sanitizer_set_report_fd@@Base+0x526c>  // b.plast
   15aec:	mov	x4, x2
   15af0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15af4:	add	x2, x2, #0xf9e
   15af8:	mov	x3, x1
   15afc:	mov	w1, #0x175                 	// #373
   15b00:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15b04:	add	x0, x0, #0xd19
   15b08:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   15b0c:	ldr	x4, [x5]
   15b10:	add	x3, x1, x0
   15b14:	cmp	x4, x0
   15b18:	b.ne	15b38 <__sanitizer_set_report_fd@@Base+0x5298>  // b.any
   15b1c:	cmp	x1, x2
   15b20:	csel	x3, x3, xzr, ne  // ne = any
   15b24:	str	x3, [x5]
   15b28:	ldr	x30, [sp], #16
   15b2c:	sub	x2, x2, x1
   15b30:	str	x2, [x5, #8]
   15b34:	b	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   15b38:	add	x4, x4, x2
   15b3c:	cmp	x3, x4
   15b40:	b.eq	15b28 <__sanitizer_set_report_fd@@Base+0x5288>  // b.none
   15b44:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15b48:	mov	w1, #0x17a                 	// #378
   15b4c:	add	x2, x2, #0xfb4
   15b50:	b	15b00 <__sanitizer_set_report_fd@@Base+0x5260>
   15b54:	stp	x19, x20, [sp, #-32]!
   15b58:	mov	x19, x0
   15b5c:	mov	x20, x1
   15b60:	str	x30, [sp, #16]
   15b64:	cbz	x2, 15ba0 <__sanitizer_set_report_fd@@Base+0x5300>
   15b68:	mov	x0, x2
   15b6c:	bl	15908 <__sanitizer_set_report_fd@@Base+0x5068>
   15b70:	cmn	w0, #0x1
   15b74:	mov	w4, w0
   15b78:	mov	w3, #0x4012                	// #16402
   15b7c:	mov	w0, #0x4032                	// #16434
   15b80:	csel	w3, w3, w0, ne  // ne = any
   15b84:	mov	x1, x20
   15b88:	mov	x0, x19
   15b8c:	ldr	x30, [sp, #16]
   15b90:	mov	x5, #0x0                   	// #0
   15b94:	ldp	x19, x20, [sp], #32
   15b98:	mov	w2, #0x0                   	// #0
   15b9c:	b	12cb8 <__sanitizer_set_report_fd@@Base+0x2418>
   15ba0:	mov	w4, #0xffffffff            	// #-1
   15ba4:	mov	w3, #0x4032                	// #16434
   15ba8:	b	15b84 <__sanitizer_set_report_fd@@Base+0x52e4>
   15bac:	mov	x1, x0
   15bb0:	mov	x5, #0x0                   	// #0
   15bb4:	mov	w4, #0xffffffff            	// #-1
   15bb8:	mov	w3, #0x4022                	// #16418
   15bbc:	mov	w2, #0x0                   	// #0
   15bc0:	mov	x0, #0x0                   	// #0
   15bc4:	b	12cb8 <__sanitizer_set_report_fd@@Base+0x2418>
   15bc8:	stp	x19, x20, [sp, #-32]!
   15bcc:	mov	x19, x0
   15bd0:	mov	x20, x1
   15bd4:	stp	x21, x30, [sp, #16]
   15bd8:	mov	x21, x2
   15bdc:	cbz	x3, 15c00 <__sanitizer_set_report_fd@@Base+0x5360>
   15be0:	mov	x0, x3
   15be4:	mov	x2, #0x0                   	// #0
   15be8:	bl	15b54 <__sanitizer_set_report_fd@@Base+0x52b4>
   15bec:	stp	x0, x20, [x19]
   15bf0:	str	x21, [x19, #16]
   15bf4:	ldp	x21, x30, [sp, #16]
   15bf8:	ldp	x19, x20, [sp], #32
   15bfc:	ret
   15c00:	mov	x0, x1
   15c04:	bl	15bac <__sanitizer_set_report_fd@@Base+0x530c>
   15c08:	b	15bec <__sanitizer_set_report_fd@@Base+0x534c>
   15c0c:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   15c10:	ldr	x3, [x3, #3832]
   15c14:	cbz	x3, 15c1c <__sanitizer_set_report_fd@@Base+0x537c>
   15c18:	b	65a0 <real_pthread_attr_getstack@plt>
   15c1c:	b	67e0 <pthread_attr_getstack@plt>
   15c20:	stp	x19, x20, [sp, #-48]!
   15c24:	mov	x20, x0
   15c28:	add	x2, sp, #0x28
   15c2c:	add	x1, sp, #0x20
   15c30:	stp	x21, x30, [sp, #16]
   15c34:	stp	xzr, xzr, [sp, #32]
   15c38:	bl	15c0c <__sanitizer_set_report_fd@@Base+0x536c>
   15c3c:	ldr	x0, [sp, #32]
   15c40:	cbz	x0, 15ca4 <__sanitizer_set_report_fd@@Base+0x5404>
   15c44:	ldr	x1, [sp, #40]
   15c48:	cmn	x0, x1
   15c4c:	cset	w21, ne  // ne = any
   15c50:	bl	14290 <__sanitizer_set_report_fd@@Base+0x39f0>
   15c54:	add	x19, x0, #0x20, lsl #12
   15c58:	ldr	x1, [sp, #40]
   15c5c:	cmp	x1, x19
   15c60:	b.cs	15c98 <__sanitizer_set_report_fd@@Base+0x53f8>  // b.hs, b.nlast
   15c64:	cbnz	w21, 15cac <__sanitizer_set_report_fd@@Base+0x540c>
   15c68:	cbz	x1, 15c98 <__sanitizer_set_report_fd@@Base+0x53f8>
   15c6c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   15c70:	ldr	x0, [x0, #3896]
   15c74:	ldr	w0, [x0]
   15c78:	cbz	w0, 15c8c <__sanitizer_set_report_fd@@Base+0x53ec>
   15c7c:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   15c80:	mov	x2, x19
   15c84:	add	x0, x0, #0xff1
   15c88:	bl	16994 <OnPrint@@Base+0x288>
   15c8c:	mov	x1, x19
   15c90:	mov	x0, x20
   15c94:	bl	67f0 <pthread_attr_setstacksize@plt>
   15c98:	ldp	x21, x30, [sp, #16]
   15c9c:	ldp	x19, x20, [sp], #48
   15ca0:	ret
   15ca4:	mov	w21, #0x0                   	// #0
   15ca8:	b	15c50 <__sanitizer_set_report_fd@@Base+0x53b0>
   15cac:	mov	x2, x19
   15cb0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   15cb4:	add	x0, x0, #0x1b
   15cb8:	bl	16994 <OnPrint@@Base+0x288>
   15cbc:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   15cc0:	add	x0, x0, #0x5b
   15cc4:	bl	16994 <OnPrint@@Base+0x288>
   15cc8:	b	15c98 <__sanitizer_set_report_fd@@Base+0x53f8>
   15ccc:	stp	x19, x20, [sp, #-80]!
   15cd0:	mov	w20, w3
   15cd4:	mov	w19, w4
   15cd8:	stp	x21, x22, [sp, #16]
   15cdc:	mov	w21, w2
   15ce0:	stp	x23, x24, [sp, #32]
   15ce4:	mov	x23, x0
   15ce8:	mov	x24, x1
   15cec:	str	x30, [sp, #48]
   15cf0:	bl	1331c <__sanitizer_set_report_fd@@Base+0x2a7c>
   15cf4:	mov	w22, w0
   15cf8:	cmp	w0, #0x0
   15cfc:	b.ge	15d6c <__sanitizer_set_report_fd@@Base+0x54cc>  // b.tcont
   15d00:	add	x1, sp, #0x4c
   15d04:	sxtw	x0, w0
   15d08:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   15d0c:	tst	w0, #0xff
   15d10:	b.eq	15d24 <__sanitizer_set_report_fd@@Base+0x5484>  // b.none
   15d14:	ldr	w1, [sp, #76]
   15d18:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   15d1c:	add	x0, x0, #0x89
   15d20:	bl	16a18 <OnPrint@@Base+0x30c>
   15d24:	cmn	w21, #0x1
   15d28:	b.eq	15d34 <__sanitizer_set_report_fd@@Base+0x5494>  // b.none
   15d2c:	mov	w0, w21
   15d30:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   15d34:	cmn	w20, #0x1
   15d38:	b.eq	15d44 <__sanitizer_set_report_fd@@Base+0x54a4>  // b.none
   15d3c:	mov	w0, w20
   15d40:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   15d44:	cmn	w19, #0x1
   15d48:	b.eq	15d54 <__sanitizer_set_report_fd@@Base+0x54b4>  // b.none
   15d4c:	mov	w0, w19
   15d50:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   15d54:	mov	w0, w22
   15d58:	ldp	x21, x22, [sp, #16]
   15d5c:	ldp	x23, x24, [sp, #32]
   15d60:	ldr	x30, [sp, #48]
   15d64:	ldp	x19, x20, [sp], #80
   15d68:	ret
   15d6c:	b.ne	15d24 <__sanitizer_set_report_fd@@Base+0x5484>  // b.any
   15d70:	cmn	w21, #0x1
   15d74:	b.eq	15d90 <__sanitizer_set_report_fd@@Base+0x54f0>  // b.none
   15d78:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   15d7c:	mov	w1, #0x0                   	// #0
   15d80:	mov	w0, w21
   15d84:	bl	12e18 <__sanitizer_set_report_fd@@Base+0x2578>
   15d88:	mov	w0, w21
   15d8c:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   15d90:	cmn	w20, #0x1
   15d94:	b.eq	15db4 <__sanitizer_set_report_fd@@Base+0x5514>  // b.none
   15d98:	mov	w0, #0x1                   	// #1
   15d9c:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   15da0:	mov	w1, #0x1                   	// #1
   15da4:	mov	w0, w20
   15da8:	bl	12e18 <__sanitizer_set_report_fd@@Base+0x2578>
   15dac:	mov	w0, w20
   15db0:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   15db4:	cmn	w19, #0x1
   15db8:	b.eq	15dd8 <__sanitizer_set_report_fd@@Base+0x5538>  // b.none
   15dbc:	mov	w0, #0x2                   	// #2
   15dc0:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   15dc4:	mov	w1, #0x2                   	// #2
   15dc8:	mov	w0, w19
   15dcc:	bl	12e18 <__sanitizer_set_report_fd@@Base+0x2578>
   15dd0:	mov	w0, w19
   15dd4:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   15dd8:	mov	w0, #0x4                   	// #4
   15ddc:	bl	69e0 <sysconf@plt>
   15de0:	mov	w19, w0
   15de4:	cmp	w19, #0x2
   15de8:	b.le	15dfc <__sanitizer_set_report_fd@@Base+0x555c>
   15dec:	mov	w0, w19
   15df0:	sub	w19, w19, #0x1
   15df4:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   15df8:	b	15de4 <__sanitizer_set_report_fd@@Base+0x5544>
   15dfc:	mov	x1, x24
   15e00:	mov	x0, x23
   15e04:	bl	64b0 <execv@plt>
   15e08:	mov	w0, #0x1                   	// #1
   15e0c:	bl	12e98 <__sanitizer_set_report_fd@@Base+0x25f8>
   15e10:	stp	x19, x30, [sp, #-32]!
   15e14:	mov	w2, #0x1                   	// #1
   15e18:	add	x1, sp, #0x18
   15e1c:	bl	132a8 <__sanitizer_set_report_fd@@Base+0x2a08>
   15e20:	add	x1, sp, #0x1c
   15e24:	mov	x19, x0
   15e28:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   15e2c:	tst	w0, #0xff
   15e30:	b.eq	15e5c <__sanitizer_set_report_fd@@Base+0x55bc>  // b.none
   15e34:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   15e38:	ldr	x0, [x0, #3896]
   15e3c:	ldr	w0, [x0]
   15e40:	cbz	w0, 15e54 <__sanitizer_set_report_fd@@Base+0x55b4>
   15e44:	ldr	w1, [sp, #28]
   15e48:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   15e4c:	add	x0, x0, #0xad
   15e50:	bl	16a18 <OnPrint@@Base+0x30c>
   15e54:	mov	w0, #0x0                   	// #0
   15e58:	b	15e64 <__sanitizer_set_report_fd@@Base+0x55c4>
   15e5c:	cmp	x19, #0x0
   15e60:	cset	w0, eq  // eq = none
   15e64:	ldp	x19, x30, [sp], #32
   15e68:	ret
   15e6c:	str	x30, [sp, #-32]!
   15e70:	mov	w2, #0x0                   	// #0
   15e74:	add	x1, sp, #0x18
   15e78:	bl	132a8 <__sanitizer_set_report_fd@@Base+0x2a08>
   15e7c:	add	x1, sp, #0x1c
   15e80:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   15e84:	tst	w0, #0xff
   15e88:	b.eq	15eb4 <__sanitizer_set_report_fd@@Base+0x5614>  // b.none
   15e8c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   15e90:	ldr	x0, [x0, #3896]
   15e94:	ldr	w0, [x0]
   15e98:	cbz	w0, 15eac <__sanitizer_set_report_fd@@Base+0x560c>
   15e9c:	ldr	w1, [sp, #28]
   15ea0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   15ea4:	add	x0, x0, #0xad
   15ea8:	bl	16a18 <OnPrint@@Base+0x30c>
   15eac:	mov	w0, #0xffffffff            	// #-1
   15eb0:	b	15eb8 <__sanitizer_set_report_fd@@Base+0x5618>
   15eb4:	ldr	w0, [sp, #24]
   15eb8:	ldr	x30, [sp], #32
   15ebc:	ret
   15ec0:	cmp	w0, #0x1
   15ec4:	cset	w0, eq  // eq = none
   15ec8:	ret
   15ecc:	ldr	x3, [x0]
   15ed0:	and	w2, w2, #0xff
   15ed4:	cmp	x3, x1
   15ed8:	b.cs	15eec <__sanitizer_set_report_fd@@Base+0x564c>  // b.hs, b.nlast
   15edc:	strb	w2, [x3]
   15ee0:	ldr	x1, [x0]
   15ee4:	add	x1, x1, #0x1
   15ee8:	str	x1, [x0]
   15eec:	mov	w0, #0x1                   	// #1
   15ef0:	ret
   15ef4:	str	x30, [sp, #-16]!
   15ef8:	mov	x6, x0
   15efc:	mov	x7, x1
   15f00:	mov	w9, w2
   15f04:	mov	w8, w3
   15f08:	cbnz	x4, 15f14 <__sanitizer_set_report_fd@@Base+0x5674>
   15f0c:	adrp	x4, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   15f10:	add	x4, x4, #0xd8
   15f14:	mov	w5, #0x0                   	// #0
   15f18:	ldrb	w2, [x4]
   15f1c:	cbz	w2, 15f44 <__sanitizer_set_report_fd@@Base+0x56a4>
   15f20:	cmp	w8, #0x0
   15f24:	ccmp	w5, w8, #0x1, ge  // ge = tcont
   15f28:	b.ge	15f44 <__sanitizer_set_report_fd@@Base+0x56a4>  // b.tcont
   15f2c:	mov	x1, x7
   15f30:	mov	x0, x6
   15f34:	bl	15ecc <__sanitizer_set_report_fd@@Base+0x562c>
   15f38:	add	w5, w5, w0
   15f3c:	add	x4, x4, #0x1
   15f40:	b	15f18 <__sanitizer_set_report_fd@@Base+0x5678>
   15f44:	neg	w0, w5
   15f48:	cmp	w0, w9
   15f4c:	b.le	15f68 <__sanitizer_set_report_fd@@Base+0x56c8>
   15f50:	mov	x1, x7
   15f54:	mov	x0, x6
   15f58:	mov	w2, #0x20                  	// #32
   15f5c:	bl	15ecc <__sanitizer_set_report_fd@@Base+0x562c>
   15f60:	add	w5, w5, w0
   15f64:	b	15f44 <__sanitizer_set_report_fd@@Base+0x56a4>
   15f68:	mov	w0, w5
   15f6c:	ldr	x30, [sp], #16
   15f70:	ret
   15f74:	stp	x19, x20, [sp, #-320]!
   15f78:	and	w8, w3, #0xff
   15f7c:	cmp	w8, #0xa
   15f80:	mov	x20, x0
   15f84:	cset	w0, ne  // ne = any
   15f88:	stp	x21, x22, [sp, #16]
   15f8c:	cmp	w0, #0x0
   15f90:	ccmp	w8, #0x10, #0x4, ne  // ne = any
   15f94:	stp	x23, x24, [sp, #32]
   15f98:	stp	x25, x26, [sp, #48]
   15f9c:	str	x30, [sp, #64]
   15fa0:	b.eq	15fb4 <__sanitizer_set_report_fd@@Base+0x5714>  // b.none
   15fa4:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   15fa8:	add	x0, x0, #0xdf
   15fac:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   15fb0:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   15fb4:	and	w26, w6, #0xff
   15fb8:	cmp	w0, #0x0
   15fbc:	ccmp	w26, #0x0, #0x4, ne  // ne = any
   15fc0:	b.eq	15fd0 <__sanitizer_set_report_fd@@Base+0x5730>  // b.none
   15fc4:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   15fc8:	add	x0, x0, #0xf8
   15fcc:	b	15fac <__sanitizer_set_report_fd@@Base+0x570c>
   15fd0:	cmp	x2, #0x0
   15fd4:	mov	x9, x2
   15fd8:	ccmp	w26, #0x0, #0x4, eq  // eq = none
   15fdc:	b.eq	15fec <__sanitizer_set_report_fd@@Base+0x574c>  // b.none
   15fe0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   15fe4:	add	x0, x0, #0x110
   15fe8:	b	15fac <__sanitizer_set_report_fd@@Base+0x570c>
   15fec:	and	w19, w4, #0xff
   15ff0:	cmp	w19, #0x1d
   15ff4:	b.ls	16004 <__sanitizer_set_report_fd@@Base+0x5764>  // b.plast
   15ff8:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   15ffc:	add	x0, x0, #0x12c
   16000:	b	15fac <__sanitizer_set_report_fd@@Base+0x570c>
   16004:	cmp	w19, #0x0
   16008:	mov	w0, w19
   1600c:	sub	w19, w19, #0x1
   16010:	ccmp	w26, #0x0, #0x4, ne  // ne = any
   16014:	and	w19, w19, #0xff
   16018:	and	w22, w5, #0xff
   1601c:	csel	w19, w19, w0, ne  // ne = any
   16020:	cmp	w26, #0x0
   16024:	mov	x21, x1
   16028:	and	w23, w7, #0xff
   1602c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   16030:	b.eq	16150 <__sanitizer_set_report_fd@@Base+0x58b0>  // b.none
   16034:	mov	x0, x20
   16038:	mov	w2, #0x2d                  	// #45
   1603c:	bl	15ecc <__sanitizer_set_report_fd@@Base+0x562c>
   16040:	mov	w24, w0
   16044:	and	x8, x8, #0xff
   16048:	add	x25, sp, #0x50
   1604c:	mov	x0, #0x0                   	// #0
   16050:	udiv	x1, x9, x8
   16054:	add	w4, w0, #0x1
   16058:	msub	x2, x1, x8, x9
   1605c:	str	x2, [x25, x0, lsl #3]
   16060:	mov	x2, x9
   16064:	cmp	x2, x8
   16068:	mov	x9, x1
   1606c:	b.cs	16158 <__sanitizer_set_report_fd@@Base+0x58b8>  // b.hs, b.nlast
   16070:	cmp	w19, w4
   16074:	b.le	16090 <__sanitizer_set_report_fd@@Base+0x57f0>
   16078:	sub	w2, w19, w4
   1607c:	add	x0, x25, w4, sxtw #3
   16080:	mov	w1, #0x0                   	// #0
   16084:	sbfiz	x2, x2, #3, #32
   16088:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1608c:	mov	w4, w19
   16090:	sub	w4, w4, #0x1
   16094:	mov	w7, #0x20                  	// #32
   16098:	mov	w6, #0x30                  	// #48
   1609c:	sxtw	x4, w4
   160a0:	ldr	x0, [x25, x4, lsl #3]
   160a4:	mov	w5, w4
   160a8:	cbnz	x0, 160d8 <__sanitizer_set_report_fd@@Base+0x5838>
   160ac:	cmp	w4, #0x0
   160b0:	mov	x1, x21
   160b4:	ccmp	w22, #0x0, #0x0, ne  // ne = any
   160b8:	mov	x0, x20
   160bc:	csel	w2, w7, w6, eq  // eq = none
   160c0:	bl	15ecc <__sanitizer_set_report_fd@@Base+0x562c>
   160c4:	sub	x4, x4, #0x1
   160c8:	add	w24, w24, w0
   160cc:	mov	w5, w4
   160d0:	cmn	w4, #0x1
   160d4:	b.ne	160a0 <__sanitizer_set_report_fd@@Base+0x5800>  // b.any
   160d8:	eor	w22, w22, #0x1
   160dc:	tst	w26, w22
   160e0:	b.eq	160f8 <__sanitizer_set_report_fd@@Base+0x5858>  // b.none
   160e4:	mov	x1, x21
   160e8:	mov	x0, x20
   160ec:	mov	w2, #0x2d                  	// #45
   160f0:	bl	15ecc <__sanitizer_set_report_fd@@Base+0x562c>
   160f4:	add	w24, w24, w0
   160f8:	cmp	w23, #0x0
   160fc:	mov	w0, #0x41                  	// #65
   16100:	mov	w1, #0x61                  	// #97
   16104:	csel	w0, w0, w1, ne  // ne = any
   16108:	sxtw	x4, w5
   1610c:	sub	w5, w0, #0xa
   16110:	cmn	w4, #0x1
   16114:	b.eq	16170 <__sanitizer_set_report_fd@@Base+0x58d0>  // b.none
   16118:	ldr	x0, [x25, x4, lsl #3]
   1611c:	and	w0, w0, #0xff
   16120:	cmp	w0, #0x9
   16124:	add	w2, w0, w5
   16128:	add	w1, w0, #0x30
   1612c:	and	w2, w2, #0xff
   16130:	and	w1, w1, #0xff
   16134:	mov	x0, x20
   16138:	csel	w2, w2, w1, hi  // hi = pmore
   1613c:	mov	x1, x21
   16140:	bl	15ecc <__sanitizer_set_report_fd@@Base+0x562c>
   16144:	add	w24, w24, w0
   16148:	sub	x4, x4, #0x1
   1614c:	b	16110 <__sanitizer_set_report_fd@@Base+0x5870>
   16150:	mov	w24, #0x0                   	// #0
   16154:	b	16044 <__sanitizer_set_report_fd@@Base+0x57a4>
   16158:	add	x0, x0, #0x1
   1615c:	cmp	x0, #0x1e
   16160:	b.ne	16050 <__sanitizer_set_report_fd@@Base+0x57b0>  // b.any
   16164:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16168:	add	x0, x0, #0x149
   1616c:	b	15fac <__sanitizer_set_report_fd@@Base+0x570c>
   16170:	mov	w0, w24
   16174:	ldp	x21, x22, [sp, #16]
   16178:	ldp	x23, x24, [sp, #32]
   1617c:	ldp	x25, x26, [sp, #48]
   16180:	ldr	x30, [sp, #64]
   16184:	ldp	x19, x20, [sp], #320
   16188:	ret
   1618c:	stp	x19, x20, [sp, #-128]!
   16190:	stp	x21, x22, [sp, #16]
   16194:	stp	x23, x24, [sp, #32]
   16198:	stp	x25, x26, [sp, #48]
   1619c:	stp	x27, x28, [sp, #64]
   161a0:	str	x30, [sp, #80]
   161a4:	str	x0, [sp, #120]
   161a8:	cbnz	x2, 161bc <__sanitizer_set_report_fd@@Base+0x591c>
   161ac:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   161b0:	add	x0, x0, #0x709
   161b4:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   161b8:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   161bc:	cmp	w1, #0x0
   161c0:	b.gt	161d0 <__sanitizer_set_report_fd@@Base+0x5930>
   161c4:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   161c8:	add	x0, x0, #0x166
   161cc:	b	161b4 <__sanitizer_set_report_fd@@Base+0x5914>
   161d0:	ldp	x19, x22, [x3]
   161d4:	mov	x25, x0
   161d8:	sxtw	x0, w1
   161dc:	ldr	w20, [x3, #24]
   161e0:	sub	x1, x0, #0x1
   161e4:	adrp	x26, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   161e8:	adrp	x27, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   161ec:	mov	x28, x2
   161f0:	add	x24, x25, x1
   161f4:	add	x23, sp, #0x78
   161f8:	add	x26, x26, #0x2d4
   161fc:	add	x27, x27, #0x249
   16200:	mov	w21, #0x0                   	// #0
   16204:	str	x0, [sp, #96]
   16208:	ldrb	w2, [x28]
   1620c:	cbz	w2, 166b4 <__sanitizer_set_report_fd@@Base+0x5e14>
   16210:	cmp	w2, #0x25
   16214:	b.eq	16228 <__sanitizer_set_report_fd@@Base+0x5988>  // b.none
   16218:	mov	x1, x24
   1621c:	mov	x0, x23
   16220:	bl	15ecc <__sanitizer_set_report_fd@@Base+0x562c>
   16224:	b	1640c <__sanitizer_set_report_fd@@Base+0x5b6c>
   16228:	mov	x0, x28
   1622c:	add	x6, x28, #0x2
   16230:	mov	w8, #0x0                   	// #0
   16234:	ldrb	w10, [x0, #1]!
   16238:	cmp	w10, #0x2d
   1623c:	csel	x6, x6, x0, eq  // eq = none
   16240:	ldrb	w0, [x6]
   16244:	sub	w9, w0, #0x30
   16248:	and	w9, w9, #0xff
   1624c:	cmp	w9, #0x9
   16250:	cset	w7, ls  // ls = plast
   16254:	cmp	w0, #0x30
   16258:	cset	w5, eq  // eq = none
   1625c:	cmp	w9, #0x9
   16260:	b.hi	1628c <__sanitizer_set_report_fd@@Base+0x59ec>  // b.pmore
   16264:	mov	w3, #0xa                   	// #10
   16268:	ldrb	w2, [x6]
   1626c:	sub	w0, w2, #0x30
   16270:	and	w0, w0, #0xff
   16274:	cmp	w0, #0x9
   16278:	b.hi	1628c <__sanitizer_set_report_fd@@Base+0x59ec>  // b.pmore
   1627c:	madd	w8, w8, w3, w2
   16280:	add	x6, x6, #0x1
   16284:	sub	w8, w8, #0x30
   16288:	b	16268 <__sanitizer_set_report_fd@@Base+0x59c8>
   1628c:	ldrb	w0, [x6]
   16290:	cmp	w0, #0x2e
   16294:	b.ne	16360 <__sanitizer_set_report_fd@@Base+0x5ac0>  // b.any
   16298:	ldrb	w0, [x6, #1]
   1629c:	cmp	w0, #0x2a
   162a0:	b.ne	16360 <__sanitizer_set_report_fd@@Base+0x5ac0>  // b.any
   162a4:	add	x6, x6, #0x2
   162a8:	tbnz	w20, #31, 1633c <__sanitizer_set_report_fd@@Base+0x5a9c>
   162ac:	add	x0, x19, #0xb
   162b0:	mov	w2, w20
   162b4:	and	x0, x0, #0xfffffffffffffff8
   162b8:	ldr	w3, [x19]
   162bc:	mov	w20, w2
   162c0:	mov	x19, x0
   162c4:	ldrb	w4, [x6]
   162c8:	cmp	w4, #0x7a
   162cc:	cset	w2, eq  // eq = none
   162d0:	cset	x11, eq  // eq = none
   162d4:	cinc	x0, x6, eq  // eq = none
   162d8:	b.eq	16368 <__sanitizer_set_report_fd@@Base+0x5ac8>  // b.none
   162dc:	ldrb	w4, [x6, x11]
   162e0:	cmp	w4, #0x6c
   162e4:	b.ne	16368 <__sanitizer_set_report_fd@@Base+0x5ac8>  // b.any
   162e8:	ldrb	w4, [x0, #1]
   162ec:	cmp	w4, #0x6c
   162f0:	cset	w4, eq  // eq = none
   162f4:	lsl	w11, w4, #1
   162f8:	orr	w2, w4, w2
   162fc:	cmp	w10, #0x2d
   16300:	orr	w6, w7, w2
   16304:	add	x28, x0, w11, sxtw
   16308:	ccmp	w3, #0x0, #0x0, ne  // ne = any
   1630c:	ldrb	w0, [x0, w11, sxtw]
   16310:	b.lt	16370 <__sanitizer_set_report_fd@@Base+0x5ad0>  // b.tstop
   16314:	cmp	w0, #0x73
   16318:	b.eq	163a0 <__sanitizer_set_report_fd@@Base+0x5b00>  // b.none
   1631c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16320:	add	x2, x2, #0x176
   16324:	mov	x4, #0x0                   	// #0
   16328:	mov	x3, #0x0                   	// #0
   1632c:	mov	w1, #0xa9                  	// #169
   16330:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16334:	add	x0, x0, #0x1b6
   16338:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1633c:	add	w2, w20, #0x8
   16340:	cmp	w2, #0x0
   16344:	b.le	16354 <__sanitizer_set_report_fd@@Base+0x5ab4>
   16348:	add	x0, x19, #0xb
   1634c:	and	x0, x0, #0xfffffffffffffff8
   16350:	b	162b8 <__sanitizer_set_report_fd@@Base+0x5a18>
   16354:	mov	x0, x19
   16358:	add	x19, x22, w20, sxtw
   1635c:	b	162b8 <__sanitizer_set_report_fd@@Base+0x5a18>
   16360:	mov	w3, #0xffffffff            	// #-1
   16364:	b	162c4 <__sanitizer_set_report_fd@@Base+0x5a24>
   16368:	mov	w4, #0x0                   	// #0
   1636c:	b	162f4 <__sanitizer_set_report_fd@@Base+0x5a54>
   16370:	cmp	w0, #0x64
   16374:	b.eq	163c8 <__sanitizer_set_report_fd@@Base+0x5b28>  // b.none
   16378:	b.hi	163a0 <__sanitizer_set_report_fd@@Base+0x5b00>  // b.pmore
   1637c:	cmp	w0, #0x58
   16380:	b.eq	1647c <__sanitizer_set_report_fd@@Base+0x5bdc>  // b.none
   16384:	cmp	w0, #0x63
   16388:	b.eq	16650 <__sanitizer_set_report_fd@@Base+0x5db0>  // b.none
   1638c:	cmp	w0, #0x25
   16390:	b.eq	166a8 <__sanitizer_set_report_fd@@Base+0x5e08>  // b.none
   16394:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16398:	add	x0, x0, #0x1f4
   1639c:	b	161b4 <__sanitizer_set_report_fd@@Base+0x5914>
   163a0:	sub	w7, w0, #0x70
   163a4:	and	w11, w7, #0xff
   163a8:	cmp	w11, #0x8
   163ac:	b.hi	16394 <__sanitizer_set_report_fd@@Base+0x5af4>  // b.pmore
   163b0:	cmp	w7, #0x8
   163b4:	b.hi	16394 <__sanitizer_set_report_fd@@Base+0x5af4>  // b.pmore
   163b8:	ldrh	w1, [x26, w7, uxtw #1]
   163bc:	adr	x7, 163c8 <__sanitizer_set_report_fd@@Base+0x5b28>
   163c0:	add	x1, x7, w1, sxth #2
   163c4:	br	x1
   163c8:	cbz	w4, 16418 <__sanitizer_set_report_fd@@Base+0x5b78>
   163cc:	tbnz	w20, #31, 16434 <__sanitizer_set_report_fd@@Base+0x5b94>
   163d0:	add	x0, x19, #0xf
   163d4:	mov	w3, w20
   163d8:	and	x0, x0, #0xfffffffffffffff8
   163dc:	ldr	x2, [x19]
   163e0:	cmp	x2, #0x0
   163e4:	lsr	x6, x2, #63
   163e8:	mov	x19, x0
   163ec:	mov	w4, w8
   163f0:	cneg	x2, x2, lt  // lt = tstop
   163f4:	mov	w20, w3
   163f8:	mov	w7, #0x0                   	// #0
   163fc:	mov	w3, #0xa                   	// #10
   16400:	mov	x1, x24
   16404:	mov	x0, x23
   16408:	bl	15f74 <__sanitizer_set_report_fd@@Base+0x56d4>
   1640c:	add	w21, w21, w0
   16410:	add	x28, x28, #0x1
   16414:	b	16208 <__sanitizer_set_report_fd@@Base+0x5968>
   16418:	cbnz	w2, 163cc <__sanitizer_set_report_fd@@Base+0x5b2c>
   1641c:	tbnz	w20, #31, 16458 <__sanitizer_set_report_fd@@Base+0x5bb8>
   16420:	add	x0, x19, #0xb
   16424:	mov	w3, w20
   16428:	and	x0, x0, #0xfffffffffffffff8
   1642c:	ldrsw	x2, [x19]
   16430:	b	163e0 <__sanitizer_set_report_fd@@Base+0x5b40>
   16434:	add	w3, w20, #0x8
   16438:	cmp	w3, #0x0
   1643c:	b.le	1644c <__sanitizer_set_report_fd@@Base+0x5bac>
   16440:	add	x0, x19, #0xf
   16444:	and	x0, x0, #0xfffffffffffffff8
   16448:	b	163dc <__sanitizer_set_report_fd@@Base+0x5b3c>
   1644c:	mov	x0, x19
   16450:	add	x19, x22, w20, sxtw
   16454:	b	163dc <__sanitizer_set_report_fd@@Base+0x5b3c>
   16458:	add	w3, w20, #0x8
   1645c:	cmp	w3, #0x0
   16460:	b.le	16470 <__sanitizer_set_report_fd@@Base+0x5bd0>
   16464:	add	x0, x19, #0xb
   16468:	and	x0, x0, #0xfffffffffffffff8
   1646c:	b	1642c <__sanitizer_set_report_fd@@Base+0x5b8c>
   16470:	mov	x0, x19
   16474:	add	x19, x22, w20, sxtw
   16478:	b	1642c <__sanitizer_set_report_fd@@Base+0x5b8c>
   1647c:	cbz	w4, 164c0 <__sanitizer_set_report_fd@@Base+0x5c20>
   16480:	tbnz	w20, #31, 164dc <__sanitizer_set_report_fd@@Base+0x5c3c>
   16484:	add	x3, x19, #0xf
   16488:	mov	w4, w20
   1648c:	and	x3, x3, #0xfffffffffffffff8
   16490:	ldr	x2, [x19]
   16494:	cmp	w0, #0x58
   16498:	cset	w7, eq  // eq = none
   1649c:	cmp	w0, #0x75
   164a0:	mov	w20, w4
   164a4:	mov	x19, x3
   164a8:	mov	w0, #0x10                  	// #16
   164ac:	mov	w3, #0xa                   	// #10
   164b0:	mov	w4, w8
   164b4:	csel	w3, w3, w0, eq  // eq = none
   164b8:	mov	w6, #0x0                   	// #0
   164bc:	b	16400 <__sanitizer_set_report_fd@@Base+0x5b60>
   164c0:	cbnz	w2, 16480 <__sanitizer_set_report_fd@@Base+0x5be0>
   164c4:	tbnz	w20, #31, 16500 <__sanitizer_set_report_fd@@Base+0x5c60>
   164c8:	add	x3, x19, #0xb
   164cc:	mov	w4, w20
   164d0:	and	x3, x3, #0xfffffffffffffff8
   164d4:	ldr	w2, [x19]
   164d8:	b	16494 <__sanitizer_set_report_fd@@Base+0x5bf4>
   164dc:	add	w4, w20, #0x8
   164e0:	cmp	w4, #0x0
   164e4:	b.le	164f4 <__sanitizer_set_report_fd@@Base+0x5c54>
   164e8:	add	x3, x19, #0xf
   164ec:	and	x3, x3, #0xfffffffffffffff8
   164f0:	b	16490 <__sanitizer_set_report_fd@@Base+0x5bf0>
   164f4:	mov	x3, x19
   164f8:	add	x19, x22, w20, sxtw
   164fc:	b	16490 <__sanitizer_set_report_fd@@Base+0x5bf0>
   16500:	add	w4, w20, #0x8
   16504:	cmp	w4, #0x0
   16508:	b.le	16518 <__sanitizer_set_report_fd@@Base+0x5c78>
   1650c:	add	x3, x19, #0xb
   16510:	and	x3, x3, #0xfffffffffffffff8
   16514:	b	164d4 <__sanitizer_set_report_fd@@Base+0x5c34>
   16518:	mov	x3, x19
   1651c:	add	x19, x22, w20, sxtw
   16520:	b	164d4 <__sanitizer_set_report_fd@@Base+0x5c34>
   16524:	cbnz	w6, 16394 <__sanitizer_set_report_fd@@Base+0x5af4>
   16528:	tbnz	w20, #31, 165a0 <__sanitizer_set_report_fd@@Base+0x5d00>
   1652c:	add	x8, x19, #0xf
   16530:	mov	w9, w20
   16534:	and	x8, x8, #0xfffffffffffffff8
   16538:	ldr	x10, [x19]
   1653c:	mov	x4, x27
   16540:	mov	x1, x24
   16544:	mov	w3, #0xffffffff            	// #-1
   16548:	mov	w2, #0x0                   	// #0
   1654c:	mov	x0, x23
   16550:	str	x8, [sp, #104]
   16554:	str	w9, [sp, #116]
   16558:	bl	15ef4 <__sanitizer_set_report_fd@@Base+0x5654>
   1655c:	mov	x1, x24
   16560:	mov	w19, w0
   16564:	mov	x2, x10
   16568:	mov	x0, x23
   1656c:	mov	w7, #0x0                   	// #0
   16570:	mov	w6, #0x0                   	// #0
   16574:	mov	w5, #0x1                   	// #1
   16578:	mov	w4, #0xc                   	// #12
   1657c:	mov	w3, #0x10                  	// #16
   16580:	bl	15f74 <__sanitizer_set_report_fd@@Base+0x56d4>
   16584:	ldr	x8, [sp, #104]
   16588:	add	w19, w19, w0
   1658c:	ldr	w9, [sp, #116]
   16590:	add	w21, w21, w19
   16594:	mov	x19, x8
   16598:	mov	w20, w9
   1659c:	b	16410 <__sanitizer_set_report_fd@@Base+0x5b70>
   165a0:	add	w9, w20, #0x8
   165a4:	cmp	w9, #0x0
   165a8:	b.le	165b8 <__sanitizer_set_report_fd@@Base+0x5d18>
   165ac:	add	x8, x19, #0xf
   165b0:	and	x8, x8, #0xfffffffffffffff8
   165b4:	b	16538 <__sanitizer_set_report_fd@@Base+0x5c98>
   165b8:	mov	x8, x19
   165bc:	add	x19, x22, w20, sxtw
   165c0:	b	16538 <__sanitizer_set_report_fd@@Base+0x5c98>
   165c4:	cbnz	w2, 16394 <__sanitizer_set_report_fd@@Base+0x5af4>
   165c8:	cmp	w10, #0x2d
   165cc:	ccmp	w9, #0x9, #0x2, ne  // ne = any
   165d0:	b.hi	165ec <__sanitizer_set_report_fd@@Base+0x5d4c>  // b.pmore
   165d4:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   165d8:	mov	x4, #0x0                   	// #0
   165dc:	add	x2, x2, #0x24c
   165e0:	mov	x3, #0x0                   	// #0
   165e4:	mov	w1, #0xc6                  	// #198
   165e8:	b	16330 <__sanitizer_set_report_fd@@Base+0x5a90>
   165ec:	cmp	w10, #0x2d
   165f0:	b.ne	165f8 <__sanitizer_set_report_fd@@Base+0x5d58>  // b.any
   165f4:	neg	w8, w8
   165f8:	tbnz	w20, #31, 1662c <__sanitizer_set_report_fd@@Base+0x5d8c>
   165fc:	add	x10, x19, #0xf
   16600:	mov	w11, w20
   16604:	and	x10, x10, #0xfffffffffffffff8
   16608:	ldr	x4, [x19]
   1660c:	mov	w2, w8
   16610:	mov	x1, x24
   16614:	mov	x0, x23
   16618:	bl	15ef4 <__sanitizer_set_report_fd@@Base+0x5654>
   1661c:	add	w21, w21, w0
   16620:	mov	w20, w11
   16624:	mov	x19, x10
   16628:	b	16410 <__sanitizer_set_report_fd@@Base+0x5b70>
   1662c:	add	w11, w20, #0x8
   16630:	cmp	w11, #0x0
   16634:	b.le	16644 <__sanitizer_set_report_fd@@Base+0x5da4>
   16638:	add	x10, x19, #0xf
   1663c:	and	x10, x10, #0xfffffffffffffff8
   16640:	b	16608 <__sanitizer_set_report_fd@@Base+0x5d68>
   16644:	mov	x10, x19
   16648:	add	x19, x22, w20, sxtw
   1664c:	b	16608 <__sanitizer_set_report_fd@@Base+0x5d68>
   16650:	cbnz	w6, 16394 <__sanitizer_set_report_fd@@Base+0x5af4>
   16654:	tbnz	w20, #31, 16684 <__sanitizer_set_report_fd@@Base+0x5de4>
   16658:	add	x4, x19, #0xb
   1665c:	mov	w5, w20
   16660:	and	x4, x4, #0xfffffffffffffff8
   16664:	ldrb	w2, [x19]
   16668:	mov	x1, x24
   1666c:	mov	x0, x23
   16670:	bl	15ecc <__sanitizer_set_report_fd@@Base+0x562c>
   16674:	add	w21, w21, w0
   16678:	mov	w20, w5
   1667c:	mov	x19, x4
   16680:	b	16410 <__sanitizer_set_report_fd@@Base+0x5b70>
   16684:	add	w5, w20, #0x8
   16688:	cmp	w5, #0x0
   1668c:	b.le	1669c <__sanitizer_set_report_fd@@Base+0x5dfc>
   16690:	add	x4, x19, #0xb
   16694:	and	x4, x4, #0xfffffffffffffff8
   16698:	b	16664 <__sanitizer_set_report_fd@@Base+0x5dc4>
   1669c:	mov	x4, x19
   166a0:	add	x19, x22, w20, sxtw
   166a4:	b	16664 <__sanitizer_set_report_fd@@Base+0x5dc4>
   166a8:	cbnz	w6, 16394 <__sanitizer_set_report_fd@@Base+0x5af4>
   166ac:	mov	w2, w0
   166b0:	b	16218 <__sanitizer_set_report_fd@@Base+0x5978>
   166b4:	ldr	x0, [sp, #120]
   166b8:	cmp	x0, x24
   166bc:	b.ls	166cc <__sanitizer_set_report_fd@@Base+0x5e2c>  // b.plast
   166c0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   166c4:	add	x0, x0, #0x275
   166c8:	b	161b4 <__sanitizer_set_report_fd@@Base+0x5914>
   166cc:	ldr	x0, [sp, #96]
   166d0:	mov	w2, #0x0                   	// #0
   166d4:	add	x1, x25, x0
   166d8:	add	x0, sp, #0x78
   166dc:	bl	15ecc <__sanitizer_set_report_fd@@Base+0x562c>
   166e0:	mov	w0, w21
   166e4:	ldp	x21, x22, [sp, #16]
   166e8:	ldp	x23, x24, [sp, #32]
   166ec:	ldp	x25, x26, [sp, #48]
   166f0:	ldp	x27, x28, [sp, #64]
   166f4:	ldr	x30, [sp, #80]
   166f8:	ldp	x19, x20, [sp], #128
   166fc:	ret
   16700:	adrp	x1, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   16704:	str	x0, [x1, #3584]
   16708:	ret

000000000001670c <OnPrint@@Base>:
   1670c:	ret
   16710:	sub	sp, sp, #0x100
   16714:	stp	x3, x4, [sp, #216]
   16718:	add	x3, sp, #0x100
   1671c:	stp	x3, x3, [sp, #48]
   16720:	add	x3, sp, #0xd0
   16724:	str	x3, [sp, #64]
   16728:	mov	w3, #0xffffffd8            	// #-40
   1672c:	str	w3, [sp, #72]
   16730:	mov	w3, #0xffffff80            	// #-128
   16734:	str	w3, [sp, #76]
   16738:	add	x3, sp, #0x10
   1673c:	stp	x5, x6, [sp, #232]
   16740:	ldp	x4, x5, [sp, #48]
   16744:	stp	x4, x5, [sp, #16]
   16748:	ldp	x4, x5, [sp, #64]
   1674c:	str	x30, [sp]
   16750:	stp	x4, x5, [sp, #32]
   16754:	str	q0, [sp, #80]
   16758:	str	q1, [sp, #96]
   1675c:	str	q2, [sp, #112]
   16760:	str	q3, [sp, #128]
   16764:	str	q4, [sp, #144]
   16768:	str	q5, [sp, #160]
   1676c:	str	q6, [sp, #176]
   16770:	str	q7, [sp, #192]
   16774:	str	x7, [sp, #248]
   16778:	bl	1618c <__sanitizer_set_report_fd@@Base+0x58ec>
   1677c:	ldr	x30, [sp]
   16780:	add	sp, sp, #0x100
   16784:	ret
   16788:	stp	x19, x20, [sp, #-176]!
   1678c:	and	w0, w0, #0xff
   16790:	mov	x19, x1
   16794:	stp	x25, x26, [sp, #48]
   16798:	adrp	x25, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1679c:	adrp	x26, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   167a0:	ldr	x25, [x25, #4056]
   167a4:	stp	x21, x22, [sp, #16]
   167a8:	mov	x21, x1
   167ac:	str	w0, [sp, #108]
   167b0:	add	x26, x26, #0x2b2
   167b4:	ldp	x0, x1, [x3]
   167b8:	stp	x23, x24, [sp, #32]
   167bc:	mov	x23, x2
   167c0:	add	x24, sp, #0x70
   167c4:	stp	x27, x28, [sp, #64]
   167c8:	mov	x28, x3
   167cc:	stp	x0, x1, [sp, #144]
   167d0:	mov	w22, #0x0                   	// #0
   167d4:	mov	w20, #0x190                 	// #400
   167d8:	ldp	x0, x1, [x3, #16]
   167dc:	str	x30, [sp, #80]
   167e0:	stp	x0, x1, [sp, #160]
   167e4:	ldr	w0, [sp, #108]
   167e8:	cbz	w0, 16958 <OnPrint@@Base+0x24c>
   167ec:	bl	132c0 <__sanitizer_set_report_fd@@Base+0x2a20>
   167f0:	str	x0, [sp, #96]
   167f4:	bl	e168 <__sancov_default_options@@Base+0x21c8>
   167f8:	mov	x3, x0
   167fc:	ldrb	w0, [x25, #48]
   16800:	cbz	w0, 1687c <OnPrint@@Base+0x170>
   16804:	cbz	x3, 1687c <OnPrint@@Base+0x170>
   16808:	sxtw	x1, w20
   1680c:	mov	x0, x19
   16810:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16814:	add	x2, x2, #0x28d
   16818:	bl	16710 <OnPrint@@Base+0x4>
   1681c:	mov	w27, w0
   16820:	cmp	w20, w0
   16824:	b.gt	16880 <OnPrint@@Base+0x174>
   16828:	cbz	w22, 16848 <OnPrint@@Base+0x13c>
   1682c:	mov	w0, #0x3fff                	// #16383
   16830:	cmp	w27, w0
   16834:	b.le	16880 <OnPrint@@Base+0x174>
   16838:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1683c:	add	x0, x0, #0x292
   16840:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   16844:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   16848:	ldp	x0, x1, [sp, #144]
   1684c:	stp	x0, x1, [x28]
   16850:	mov	w2, #0x0                   	// #0
   16854:	ldp	x0, x1, [sp, #160]
   16858:	stp	x0, x1, [x28, #16]
   1685c:	mov	w22, #0x1                   	// #1
   16860:	mov	w20, #0x4000                	// #16384
   16864:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16868:	mov	x0, #0x4000                	// #16384
   1686c:	add	x1, x1, #0x286
   16870:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   16874:	mov	x19, x0
   16878:	b	167e4 <OnPrint@@Base+0xd8>
   1687c:	mov	w27, #0x0                   	// #0
   16880:	ldr	w3, [sp, #96]
   16884:	sub	w1, w20, w27
   16888:	add	x0, x19, w27, sxtw
   1688c:	mov	x2, x26
   16890:	sxtw	x1, w1
   16894:	bl	16710 <OnPrint@@Base+0x4>
   16898:	add	w27, w27, w0
   1689c:	cmp	w20, w27
   168a0:	b.gt	168b4 <OnPrint@@Base+0x1a8>
   168a4:	cbz	w22, 16848 <OnPrint@@Base+0x13c>
   168a8:	mov	w0, #0x3fff                	// #16383
   168ac:	cmp	w27, w0
   168b0:	b.gt	16838 <OnPrint@@Base+0x12c>
   168b4:	ldp	x0, x1, [x28]
   168b8:	stp	x0, x1, [x24]
   168bc:	mov	x3, x24
   168c0:	ldp	x0, x1, [x28, #16]
   168c4:	mov	x2, x23
   168c8:	stp	x0, x1, [x24, #16]
   168cc:	sub	w1, w20, w27
   168d0:	add	x0, x19, w27, sxtw
   168d4:	bl	1618c <__sanitizer_set_report_fd@@Base+0x58ec>
   168d8:	add	w4, w27, w0
   168dc:	cmp	w20, w4
   168e0:	b.gt	168f4 <OnPrint@@Base+0x1e8>
   168e4:	cbz	w22, 16848 <OnPrint@@Base+0x13c>
   168e8:	mov	w0, #0x3fff                	// #16383
   168ec:	cmp	w4, w0
   168f0:	b.gt	16838 <OnPrint@@Base+0x12c>
   168f4:	mov	x0, x19
   168f8:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   168fc:	mov	x0, x19
   16900:	bl	dd1c <__sancov_default_options@@Base+0x1d7c>
   16904:	mov	x0, x19
   16908:	bl	6430 <OnPrint@plt>
   1690c:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   16910:	ldr	x1, [x0, #3584]
   16914:	cbz	x1, 16920 <OnPrint@@Base+0x214>
   16918:	mov	x0, x19
   1691c:	blr	x1
   16920:	mov	x0, x19
   16924:	bl	144d8 <__sanitizer_set_report_fd@@Base+0x3c38>
   16928:	cmp	x19, x21
   1692c:	b.eq	1693c <OnPrint@@Base+0x230>  // b.none
   16930:	sxtw	x1, w20
   16934:	mov	x0, x19
   16938:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1693c:	ldp	x21, x22, [sp, #16]
   16940:	ldp	x23, x24, [sp, #32]
   16944:	ldp	x25, x26, [sp, #48]
   16948:	ldp	x27, x28, [sp, #64]
   1694c:	ldr	x30, [sp, #80]
   16950:	ldp	x19, x20, [sp], #176
   16954:	ret
   16958:	mov	w27, #0x0                   	// #0
   1695c:	b	168b4 <OnPrint@@Base+0x1a8>
   16960:	sub	sp, sp, #0x1c0
   16964:	ldp	x4, x5, [x2]
   16968:	stp	x4, x5, [sp, #16]
   1696c:	ldp	x2, x3, [x2, #16]
   16970:	str	x30, [sp]
   16974:	stp	x2, x3, [sp, #32]
   16978:	add	x3, sp, #0x10
   1697c:	mov	x2, x1
   16980:	add	x1, sp, #0x30
   16984:	bl	16788 <OnPrint@@Base+0x7c>
   16988:	ldr	x30, [sp]
   1698c:	add	sp, sp, #0x1c0
   16990:	ret
   16994:	sub	sp, sp, #0x110
   16998:	stp	x1, x2, [sp, #216]
   1699c:	add	x1, sp, #0x110
   169a0:	stp	x1, x1, [sp, #48]
   169a4:	add	x1, sp, #0xd0
   169a8:	str	x1, [sp, #64]
   169ac:	mov	w1, #0xffffffc8            	// #-56
   169b0:	str	w1, [sp, #72]
   169b4:	mov	w1, #0xffffff80            	// #-128
   169b8:	str	w1, [sp, #76]
   169bc:	mov	x1, x0
   169c0:	stp	x3, x4, [sp, #232]
   169c4:	mov	w0, #0x0                   	// #0
   169c8:	ldp	x2, x3, [sp, #48]
   169cc:	stp	x2, x3, [sp, #16]
   169d0:	ldp	x2, x3, [sp, #64]
   169d4:	str	x30, [sp]
   169d8:	stp	x2, x3, [sp, #32]
   169dc:	add	x2, sp, #0x10
   169e0:	str	q0, [sp, #80]
   169e4:	str	q1, [sp, #96]
   169e8:	str	q2, [sp, #112]
   169ec:	str	q3, [sp, #128]
   169f0:	str	q4, [sp, #144]
   169f4:	str	q5, [sp, #160]
   169f8:	str	q6, [sp, #176]
   169fc:	str	q7, [sp, #192]
   16a00:	stp	x5, x6, [sp, #248]
   16a04:	str	x7, [sp, #264]
   16a08:	bl	16960 <OnPrint@@Base+0x254>
   16a0c:	ldr	x30, [sp]
   16a10:	add	sp, sp, #0x110
   16a14:	ret
   16a18:	sub	sp, sp, #0x110
   16a1c:	stp	x1, x2, [sp, #216]
   16a20:	add	x1, sp, #0x110
   16a24:	stp	x1, x1, [sp, #48]
   16a28:	add	x1, sp, #0xd0
   16a2c:	str	x1, [sp, #64]
   16a30:	mov	w1, #0xffffffc8            	// #-56
   16a34:	str	w1, [sp, #72]
   16a38:	mov	w1, #0xffffff80            	// #-128
   16a3c:	str	w1, [sp, #76]
   16a40:	mov	x1, x0
   16a44:	stp	x3, x4, [sp, #232]
   16a48:	mov	w0, #0x1                   	// #1
   16a4c:	ldp	x2, x3, [sp, #48]
   16a50:	stp	x2, x3, [sp, #16]
   16a54:	ldp	x2, x3, [sp, #64]
   16a58:	str	x30, [sp]
   16a5c:	stp	x2, x3, [sp, #32]
   16a60:	add	x2, sp, #0x10
   16a64:	str	q0, [sp, #80]
   16a68:	str	q1, [sp, #96]
   16a6c:	str	q2, [sp, #112]
   16a70:	str	q3, [sp, #128]
   16a74:	str	q4, [sp, #144]
   16a78:	str	q5, [sp, #160]
   16a7c:	str	q6, [sp, #176]
   16a80:	str	q7, [sp, #192]
   16a84:	stp	x5, x6, [sp, #248]
   16a88:	str	x7, [sp, #264]
   16a8c:	bl	16960 <OnPrint@@Base+0x254>
   16a90:	ldr	x30, [sp]
   16a94:	add	sp, sp, #0x110
   16a98:	ret
   16a9c:	stp	x19, x30, [sp, #-256]!
   16aa0:	mov	x19, x0
   16aa4:	str	q0, [sp, #80]
   16aa8:	str	q1, [sp, #96]
   16aac:	str	q2, [sp, #112]
   16ab0:	str	q3, [sp, #128]
   16ab4:	str	q4, [sp, #144]
   16ab8:	str	q5, [sp, #160]
   16abc:	str	q6, [sp, #176]
   16ac0:	str	q7, [sp, #192]
   16ac4:	stp	x2, x3, [sp, #208]
   16ac8:	stp	x4, x5, [sp, #224]
   16acc:	stp	x6, x7, [sp, #240]
   16ad0:	ldr	x4, [x19, #16]
   16ad4:	ldr	x0, [x0, #24]
   16ad8:	cmp	x0, x4
   16adc:	b.cc	16afc <OnPrint@@Base+0x3f0>  // b.lo, b.ul, b.last
   16ae0:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16ae4:	mov	x3, x0
   16ae8:	add	x2, x2, #0x2b9
   16aec:	mov	w1, #0x15c                 	// #348
   16af0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16af4:	add	x0, x0, #0x1b6
   16af8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   16afc:	add	x2, sp, #0x100
   16b00:	stp	x2, x2, [sp, #48]
   16b04:	add	x2, sp, #0xd0
   16b08:	str	x2, [sp, #64]
   16b0c:	mov	w2, #0xffffffd0            	// #-48
   16b10:	str	w2, [sp, #72]
   16b14:	mov	w2, #0xffffff80            	// #-128
   16b18:	str	w2, [sp, #76]
   16b1c:	ldr	x5, [x19]
   16b20:	ldp	x2, x3, [sp, #48]
   16b24:	stp	x2, x3, [sp, #16]
   16b28:	ldp	x2, x3, [sp, #64]
   16b2c:	stp	x2, x3, [sp, #32]
   16b30:	add	x3, sp, #0x10
   16b34:	mov	x2, x1
   16b38:	sub	w1, w4, w0
   16b3c:	add	x0, x5, x0
   16b40:	bl	1618c <__sanitizer_set_report_fd@@Base+0x58ec>
   16b44:	ldr	x1, [x19]
   16b48:	ldr	x0, [x19, #24]
   16b4c:	add	x0, x1, x0
   16b50:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   16b54:	ldp	x4, x3, [x19, #16]
   16b58:	add	x3, x0, x3
   16b5c:	str	x3, [x19, #24]
   16b60:	cmp	x3, x4
   16b64:	b.cc	16b78 <OnPrint@@Base+0x46c>  // b.lo, b.ul, b.last
   16b68:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16b6c:	mov	w1, #0x162                 	// #354
   16b70:	add	x2, x2, #0x2b9
   16b74:	b	16af0 <OnPrint@@Base+0x3e4>
   16b78:	ldp	x19, x30, [sp], #256
   16b7c:	ret
   16b80:	and	w1, w0, #0xff
   16b84:	sub	w0, w1, #0x30
   16b88:	and	w2, w0, #0xff
   16b8c:	cmp	w2, #0x9
   16b90:	b.ls	16ba8 <OnPrint@@Base+0x49c>  // b.plast
   16b94:	sub	w0, w1, #0x61
   16b98:	and	w0, w0, #0xff
   16b9c:	cmp	w0, #0x5
   16ba0:	b.hi	16bac <OnPrint@@Base+0x4a0>  // b.pmore
   16ba4:	sub	w0, w1, #0x57
   16ba8:	ret
   16bac:	sub	w0, w1, #0x41
   16bb0:	sub	w1, w1, #0x37
   16bb4:	and	w0, w0, #0xff
   16bb8:	cmp	w0, #0x6
   16bbc:	csinv	w0, w1, wzr, cc  // cc = lo, ul, last
   16bc0:	b	16ba8 <OnPrint@@Base+0x49c>
   16bc4:	str	x30, [sp, #-16]!
   16bc8:	bl	16b80 <OnPrint@@Base+0x474>
   16bcc:	cmp	w0, #0x9
   16bd0:	cset	w0, ls  // ls = plast
   16bd4:	ldr	x30, [sp], #16
   16bd8:	ret
   16bdc:	mov	x3, x0
   16be0:	mov	x5, #0x0                   	// #0
   16be4:	mov	x6, #0xa                   	// #10
   16be8:	str	x30, [sp, #-16]!
   16bec:	ldr	x4, [x3]
   16bf0:	ldrb	w0, [x4]
   16bf4:	bl	16b80 <OnPrint@@Base+0x474>
   16bf8:	cmp	w0, #0x9
   16bfc:	b.hi	16c14 <OnPrint@@Base+0x508>  // b.pmore
   16c00:	sxtw	x1, w0
   16c04:	add	x4, x4, #0x1
   16c08:	str	x4, [x3]
   16c0c:	madd	x5, x5, x6, x1
   16c10:	b	16bec <OnPrint@@Base+0x4e0>
   16c14:	mov	x0, x5
   16c18:	ldr	x30, [sp], #16
   16c1c:	ret
   16c20:	str	x30, [sp, #-16]!
   16c24:	bl	16b80 <OnPrint@@Base+0x474>
   16c28:	cmp	w0, #0xf
   16c2c:	cset	w0, ls  // ls = plast
   16c30:	ldr	x30, [sp], #16
   16c34:	ret
   16c38:	mov	x3, x0
   16c3c:	mov	x5, #0x0                   	// #0
   16c40:	str	x30, [sp, #-16]!
   16c44:	ldr	x4, [x3]
   16c48:	ldrb	w0, [x4]
   16c4c:	bl	16b80 <OnPrint@@Base+0x474>
   16c50:	cmp	w0, #0xf
   16c54:	b.hi	16c6c <OnPrint@@Base+0x560>  // b.pmore
   16c58:	sxtw	x1, w0
   16c5c:	add	x4, x4, #0x1
   16c60:	add	x5, x1, x5, lsl #4
   16c64:	str	x4, [x3]
   16c68:	b	16c44 <OnPrint@@Base+0x538>
   16c6c:	mov	x0, x5
   16c70:	ldr	x30, [sp], #16
   16c74:	ret
   16c78:	mov	x6, x0
   16c7c:	mov	x0, x1
   16c80:	ldr	x1, [x6, #72]
   16c84:	cbz	x1, 16cac <OnPrint@@Base+0x5a0>
   16c88:	str	x30, [sp, #-16]!
   16c8c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16c90:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16c94:	add	x2, x2, #0x2e6
   16c98:	add	x0, x0, #0x2f8
   16c9c:	mov	x4, #0x0                   	// #0
   16ca0:	mov	x3, #0x0                   	// #0
   16ca4:	mov	w1, #0x43                  	// #67
   16ca8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   16cac:	ldp	x1, x2, [x6]
   16cb0:	mov	x5, #0x0                   	// #0
   16cb4:	ldr	x3, [x6, #40]
   16cb8:	ubfx	w4, w3, #1, #1
   16cbc:	ubfx	w3, w3, #2, #1
   16cc0:	b	de98 <__sancov_default_options@@Base+0x1ef8>
   16cc4:	adrp	x2, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   16cc8:	mov	x1, x0
   16ccc:	ldr	x0, [x0]
   16cd0:	ldr	x2, [x2, #3592]
   16cd4:	cmp	x0, x2
   16cd8:	b.eq	16ce4 <OnPrint@@Base+0x5d8>  // b.none
   16cdc:	ldr	x1, [x1, #8]
   16ce0:	b	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   16ce4:	ret
   16ce8:	ldr	x1, [x0]
   16cec:	str	x1, [x0, #24]
   16cf0:	ret
   16cf4:	stp	x19, x20, [sp, #-64]!
   16cf8:	add	x0, sp, #0x28
   16cfc:	str	x30, [sp, #16]
   16d00:	bl	17190 <OnPrint@@Base+0xa84>
   16d04:	ldr	x0, [sp, #48]
   16d08:	cbz	x0, 16d48 <OnPrint@@Base+0x63c>
   16d0c:	adrp	x19, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   16d10:	add	x20, x19, #0xe08
   16d14:	add	x0, x20, #0x18
   16d18:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
   16d1c:	ldr	x1, [x20, #8]
   16d20:	cbz	x1, 16d2c <OnPrint@@Base+0x620>
   16d24:	ldr	x0, [x19, #3592]
   16d28:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   16d2c:	add	x0, x19, #0xe08
   16d30:	ldp	x2, x3, [sp, #40]
   16d34:	ldr	x1, [sp, #56]
   16d38:	stp	x2, x3, [x0]
   16d3c:	str	x1, [x0, #16]
   16d40:	dmb	ish
   16d44:	strb	wzr, [x0, #24]
   16d48:	ldr	x30, [sp, #16]
   16d4c:	ldp	x19, x20, [sp], #64
   16d50:	ret
   16d54:	stp	x19, x20, [sp, #-32]!
   16d58:	adrp	x19, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   16d5c:	mov	x20, x0
   16d60:	stp	x21, x30, [sp, #16]
   16d64:	add	x21, x19, #0xe08
   16d68:	add	x0, x21, #0x18
   16d6c:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
   16d70:	ldr	x0, [x19, #3592]
   16d74:	cbz	x0, 16d88 <OnPrint@@Base+0x67c>
   16d78:	ldp	x0, x1, [x21]
   16d7c:	stp	x0, x1, [x20]
   16d80:	ldr	x0, [x21, #16]
   16d84:	str	x0, [x20, #16]
   16d88:	dmb	ish
   16d8c:	add	x19, x19, #0xe08
   16d90:	strb	wzr, [x19, #24]
   16d94:	ldp	x21, x30, [sp, #16]
   16d98:	ldp	x19, x20, [sp], #32
   16d9c:	ret
   16da0:	stp	x19, x20, [sp, #-32]!
   16da4:	mov	x19, x0
   16da8:	ands	w20, w1, #0xff
   16dac:	str	x30, [sp, #16]
   16db0:	b.eq	16db8 <OnPrint@@Base+0x6ac>  // b.none
   16db4:	bl	16cf4 <OnPrint@@Base+0x5e8>
   16db8:	mov	x0, x19
   16dbc:	bl	17190 <OnPrint@@Base+0xa84>
   16dc0:	cbz	w20, 16dd4 <OnPrint@@Base+0x6c8>
   16dc4:	ldr	x0, [x19, #8]
   16dc8:	cbnz	x0, 16dfc <OnPrint@@Base+0x6f0>
   16dcc:	mov	x0, x19
   16dd0:	bl	16d54 <OnPrint@@Base+0x648>
   16dd4:	ldr	x0, [x19, #8]
   16dd8:	cbnz	x0, 16dfc <OnPrint@@Base+0x6f0>
   16ddc:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16de0:	add	x2, x2, #0x33f
   16de4:	mov	x4, #0x0                   	// #0
   16de8:	mov	x3, #0x0                   	// #0
   16dec:	mov	w1, #0x51                  	// #81
   16df0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16df4:	add	x0, x0, #0x2f8
   16df8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   16dfc:	ldr	x0, [x19, #16]
   16e00:	cbnz	x0, 16e1c <OnPrint@@Base+0x710>
   16e04:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16e08:	mov	x4, #0x0                   	// #0
   16e0c:	add	x2, x2, #0x36c
   16e10:	mov	x3, #0x0                   	// #0
   16e14:	mov	w1, #0x52                  	// #82
   16e18:	b	16df0 <OnPrint@@Base+0x6e4>
   16e1c:	ldr	x0, [x19]
   16e20:	ldr	x30, [sp, #16]
   16e24:	str	x0, [x19, #24]
   16e28:	ldp	x19, x20, [sp], #32
   16e2c:	ret
   16e30:	stp	x19, x20, [sp, #-96]!
   16e34:	mov	x5, #0x0                   	// #0
   16e38:	mov	x4, #0x4000000             	// #67108864
   16e3c:	add	x3, sp, #0x50
   16e40:	stp	x21, x22, [sp, #16]
   16e44:	mov	x21, x0
   16e48:	mov	x22, x1
   16e4c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16e50:	add	x1, sp, #0x40
   16e54:	add	x0, x0, #0x391
   16e58:	stp	x23, x24, [sp, #32]
   16e5c:	mov	x23, x2
   16e60:	add	x2, sp, #0x48
   16e64:	stp	x25, x30, [sp, #48]
   16e68:	stp	xzr, xzr, [sp, #64]
   16e6c:	str	xzr, [sp, #80]
   16e70:	bl	10734 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c60>
   16e74:	tst	w0, #0xff
   16e78:	b.eq	16f64 <OnPrint@@Base+0x858>  // b.none
   16e7c:	adrp	x24, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   16e80:	add	x25, sp, #0x58
   16e84:	add	x24, x24, #0x3a2
   16e88:	mov	w20, #0x0                   	// #0
   16e8c:	ldr	x0, [sp, #64]
   16e90:	mov	x19, #0x0                   	// #0
   16e94:	str	x0, [sp, #88]
   16e98:	ldp	x1, x3, [sp, #80]
   16e9c:	ldr	x0, [sp, #64]
   16ea0:	add	x1, x0, x1
   16ea4:	cmp	x3, x1
   16ea8:	b.cs	16f5c <OnPrint@@Base+0x850>  // b.hs, b.nlast
   16eac:	ldrb	w0, [x3]
   16eb0:	bl	16c20 <OnPrint@@Base+0x514>
   16eb4:	tst	w0, #0xff
   16eb8:	b.eq	16eec <OnPrint@@Base+0x7e0>  // b.none
   16ebc:	mov	x0, x25
   16ec0:	bl	16c38 <OnPrint@@Base+0x52c>
   16ec4:	mov	x19, x0
   16ec8:	ldr	x0, [sp, #88]
   16ecc:	ldrb	w1, [x0], #1
   16ed0:	cmp	w1, #0x2f
   16ed4:	cset	w20, eq  // eq = none
   16ed8:	cmp	w20, #0x0
   16edc:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   16ee0:	b.ls	16f40 <OnPrint@@Base+0x834>  // b.plast
   16ee4:	str	x0, [sp, #88]
   16ee8:	b	16ec8 <OnPrint@@Base+0x7bc>
   16eec:	mov	x1, x24
   16ef0:	mov	x0, x3
   16ef4:	mov	x2, #0x4                   	// #4
   16ef8:	bl	12220 <__sanitizer_set_report_fd@@Base+0x1980>
   16efc:	cbnz	w0, 16f40 <OnPrint@@Base+0x834>
   16f00:	ldr	x3, [sp, #88]
   16f04:	ldrb	w0, [x3]
   16f08:	bl	16bc4 <OnPrint@@Base+0x4b8>
   16f0c:	tst	w0, #0xff
   16f10:	b.ne	16f20 <OnPrint@@Base+0x814>  // b.any
   16f14:	add	x3, x3, #0x1
   16f18:	str	x3, [sp, #88]
   16f1c:	b	16f00 <OnPrint@@Base+0x7f4>
   16f20:	mov	x0, x25
   16f24:	bl	16bdc <OnPrint@@Base+0x4d0>
   16f28:	mov	x4, x23
   16f2c:	lsl	x1, x0, #10
   16f30:	mov	x3, x22
   16f34:	mov	w2, w20
   16f38:	mov	x0, x19
   16f3c:	blr	x21
   16f40:	ldr	x0, [sp, #88]
   16f44:	add	x1, x0, #0x1
   16f48:	str	x1, [sp, #88]
   16f4c:	ldrb	w0, [x0]
   16f50:	cmp	w0, #0xa
   16f54:	b.ne	16f40 <OnPrint@@Base+0x834>  // b.any
   16f58:	b	16e98 <OnPrint@@Base+0x78c>
   16f5c:	ldr	x1, [sp, #72]
   16f60:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   16f64:	ldp	x21, x22, [sp, #16]
   16f68:	ldp	x23, x24, [sp, #32]
   16f6c:	ldp	x25, x30, [sp, #48]
   16f70:	ldp	x19, x20, [sp], #96
   16f74:	ret
   16f78:	stp	x19, x20, [sp, #-288]!
   16f7c:	mov	x19, x1
   16f80:	mov	x1, #0x1000                	// #4096
   16f84:	stp	x21, x22, [sp, #16]
   16f88:	mov	x21, x0
   16f8c:	add	x22, sp, #0x88
   16f90:	stp	x23, x24, [sp, #32]
   16f94:	adrp	x24, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   16f98:	add	x24, x24, #0xa15
   16f9c:	stp	x25, x26, [sp, #48]
   16fa0:	add	x25, sp, #0xd0
   16fa4:	add	x26, x22, #0x1c
   16fa8:	stp	x27, x28, [sp, #64]
   16fac:	mov	x23, #0x0                   	// #0
   16fb0:	ldr	x0, [x0]
   16fb4:	str	x0, [x21, #24]
   16fb8:	add	x0, sp, #0x68
   16fbc:	str	x30, [sp, #80]
   16fc0:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
   16fc4:	str	xzr, [sp, #280]
   16fc8:	ldr	x0, [sp, #104]
   16fcc:	str	x0, [sp, #232]
   16fd0:	ldr	x0, [sp, #120]
   16fd4:	str	x0, [sp, #240]
   16fd8:	mov	x1, x25
   16fdc:	mov	x0, x21
   16fe0:	bl	171d0 <OnPrint@@Base+0xac4>
   16fe4:	tst	w0, #0xff
   16fe8:	b.eq	170f4 <OnPrint@@Base+0x9e8>  // b.none
   16fec:	ldr	x27, [sp, #232]
   16ff0:	ldrb	w0, [x27]
   16ff4:	cbz	w0, 17188 <OnPrint@@Base+0xa7c>
   16ff8:	ldr	x20, [sp, #208]
   16ffc:	cmp	x23, #0x0
   17000:	ldr	x0, [sp, #224]
   17004:	csel	x20, x20, xzr, ne  // ne = any
   17008:	mov	x2, #0x10                  	// #16
   1700c:	mov	w1, #0x0                   	// #0
   17010:	sub	x20, x20, x0
   17014:	mov	x0, x26
   17018:	stp	xzr, xzr, [sp, #136]
   1701c:	str	xzr, [sp, #152]
   17020:	str	wzr, [sp, #160]
   17024:	strb	wzr, [sp, #180]
   17028:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1702c:	mov	x2, x20
   17030:	mov	x1, x27
   17034:	mov	x0, x22
   17038:	stp	xzr, xzr, [sp, #184]
   1703c:	str	xzr, [sp, #200]
   17040:	bl	de20 <__sancov_default_options@@Base+0x1e80>
   17044:	mov	x0, x25
   17048:	mov	x1, x22
   1704c:	bl	16c78 <OnPrint@@Base+0x56c>
   17050:	ldp	x4, x3, [x19, #8]
   17054:	mov	x0, #0x48                  	// #72
   17058:	udiv	x4, x4, x0
   1705c:	cmp	x3, x4
   17060:	b.ls	1707c <OnPrint@@Base+0x970>  // b.plast
   17064:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   17068:	add	x2, x2, #0x74b
   1706c:	mov	w1, #0x1be                 	// #446
   17070:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   17074:	add	x0, x0, #0x98a
   17078:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1707c:	b.ne	17168 <OnPrint@@Base+0xa5c>  // b.any
   17080:	add	x20, x3, #0x1
   17084:	tst	x3, x20
   17088:	b.eq	17124 <OnPrint@@Base+0xa18>  // b.none
   1708c:	clz	x1, x20
   17090:	mov	w0, #0x3f                  	// #63
   17094:	sub	w1, w0, w1
   17098:	mov	x0, #0x1                   	// #1
   1709c:	add	w4, w1, #0x1
   170a0:	lsl	x4, x0, x4
   170a4:	cmp	x20, x4
   170a8:	b.cc	170c0 <OnPrint@@Base+0x9b4>  // b.lo, b.ul, b.last
   170ac:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   170b0:	mov	x3, x20
   170b4:	add	x2, x2, #0x7fe
   170b8:	mov	w1, #0x17b                 	// #379
   170bc:	b	17070 <OnPrint@@Base+0x964>
   170c0:	lsl	x0, x0, x1
   170c4:	cmp	x20, x0
   170c8:	b.hi	17118 <OnPrint@@Base+0xa0c>  // b.pmore
   170cc:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   170d0:	mov	x4, x0
   170d4:	mov	x3, x20
   170d8:	add	x2, x2, #0x820
   170dc:	mov	w1, #0x17c                 	// #380
   170e0:	b	17070 <OnPrint@@Base+0x964>
   170e4:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   170e8:	mov	w1, #0x1fd                 	// #509
   170ec:	add	x2, x2, #0x9e0
   170f0:	b	17070 <OnPrint@@Base+0x964>
   170f4:	ldp	x0, x1, [sp, #104]
   170f8:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   170fc:	ldp	x21, x22, [sp, #16]
   17100:	ldp	x23, x24, [sp, #32]
   17104:	ldp	x25, x26, [sp, #48]
   17108:	ldp	x27, x28, [sp, #64]
   1710c:	ldr	x30, [sp, #80]
   17110:	ldp	x19, x20, [sp], #288
   17114:	ret
   17118:	cmp	x3, x4
   1711c:	b.hi	170e4 <OnPrint@@Base+0x9d8>  // b.pmore
   17120:	mov	x20, x4
   17124:	mov	x28, #0x48                  	// #72
   17128:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   1712c:	mov	x1, x0
   17130:	mul	x0, x20, x28
   17134:	bl	c730 <__sancov_default_options@@Base+0x790>
   17138:	mov	x20, x0
   1713c:	mov	x1, x24
   17140:	mov	w2, #0x0                   	// #0
   17144:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   17148:	mov	x27, x0
   1714c:	ldr	x2, [x19, #16]
   17150:	ldr	x1, [x19]
   17154:	mul	x2, x2, x28
   17158:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1715c:	ldp	x0, x1, [x19]
   17160:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   17164:	stp	x27, x20, [x19]
   17168:	mov	x2, #0x48                  	// #72
   1716c:	ldr	x3, [x19]
   17170:	ldr	x0, [x19, #16]
   17174:	add	x1, x0, #0x1
   17178:	str	x1, [x19, #16]
   1717c:	madd	x0, x0, x2, x3
   17180:	mov	x1, x22
   17184:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   17188:	add	x23, x23, #0x1
   1718c:	b	16fd8 <OnPrint@@Base+0x8cc>
   17190:	stp	x19, x30, [sp, #-16]!
   17194:	add	x3, x0, #0x10
   17198:	add	x2, x0, #0x8
   1719c:	mov	x1, x0
   171a0:	mov	x19, x0
   171a4:	mov	x5, #0x0                   	// #0
   171a8:	mov	x4, #0x4000000             	// #67108864
   171ac:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   171b0:	add	x0, x0, #0x3a7
   171b4:	bl	10734 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c60>
   171b8:	tst	w0, #0xff
   171bc:	b.ne	171c8 <OnPrint@@Base+0xabc>  // b.any
   171c0:	stp	xzr, xzr, [x19]
   171c4:	str	xzr, [x19, #16]
   171c8:	ldp	x19, x30, [sp], #16
   171cc:	ret
   171d0:	stp	x19, x20, [sp, #-64]!
   171d4:	mov	x19, x0
   171d8:	stp	x21, x22, [sp, #16]
   171dc:	ldr	x22, [x0]
   171e0:	stp	x23, x24, [sp, #32]
   171e4:	ldr	x0, [x0, #16]
   171e8:	stp	x25, x30, [sp, #48]
   171ec:	add	x22, x22, x0
   171f0:	ldr	x0, [x19, #24]
   171f4:	cmp	x0, x22
   171f8:	b.cs	1752c <OnPrint@@Base+0xe20>  // b.hs, b.nlast
   171fc:	sub	x2, x22, x0
   17200:	mov	x20, x1
   17204:	mov	w1, #0xa                   	// #10
   17208:	bl	12098 <__sanitizer_set_report_fd@@Base+0x17f8>
   1720c:	cmp	x0, #0x0
   17210:	csel	x21, x0, x22, ne  // ne = any
   17214:	add	x22, x19, #0x18
   17218:	mov	x0, x22
   1721c:	bl	16c38 <OnPrint@@Base+0x52c>
   17220:	str	x0, [x20]
   17224:	ldr	x0, [x19, #24]
   17228:	add	x1, x0, #0x1
   1722c:	str	x1, [x19, #24]
   17230:	ldrb	w23, [x0]
   17234:	cmp	x23, #0x2d
   17238:	b.eq	1725c <OnPrint@@Base+0xb50>  // b.none
   1723c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17240:	mov	x3, x23
   17244:	add	x2, x2, #0x3b7
   17248:	mov	x4, #0x2d                  	// #45
   1724c:	mov	w1, #0x28                  	// #40
   17250:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17254:	add	x0, x0, #0x3d7
   17258:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1725c:	mov	x0, x22
   17260:	bl	16c38 <OnPrint@@Base+0x52c>
   17264:	ldr	x1, [x19, #24]
   17268:	str	x0, [x20, #8]
   1726c:	add	x0, x1, #0x1
   17270:	str	x0, [x19, #24]
   17274:	ldrb	w3, [x1]
   17278:	cmp	x3, #0x20
   1727c:	b.eq	17294 <OnPrint@@Base+0xb88>  // b.none
   17280:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17284:	mov	x4, #0x20                  	// #32
   17288:	add	x2, x2, #0x41d
   1728c:	mov	w1, #0x2a                  	// #42
   17290:	b	17250 <OnPrint@@Base+0xb44>
   17294:	ldrb	w0, [x1, #1]
   17298:	cmp	w0, #0x72
   1729c:	ccmp	w0, w23, #0x4, ne  // ne = any
   172a0:	b.eq	172bc <OnPrint@@Base+0xbb0>  // b.none
   172a4:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   172a8:	mov	x4, #0x0                   	// #0
   172ac:	add	x2, x2, #0x43d
   172b0:	mov	x3, #0x0                   	// #0
   172b4:	mov	w1, #0x2b                  	// #43
   172b8:	b	17250 <OnPrint@@Base+0xb44>
   172bc:	str	xzr, [x20, #40]
   172c0:	add	x0, x1, #0x2
   172c4:	str	x0, [x19, #24]
   172c8:	ldrb	w0, [x1, #1]
   172cc:	cmp	w0, #0x72
   172d0:	b.ne	172dc <OnPrint@@Base+0xbd0>  // b.any
   172d4:	mov	x0, #0x1                   	// #1
   172d8:	str	x0, [x20, #40]
   172dc:	ldrb	w0, [x1, #2]
   172e0:	mov	w2, #0x2d                  	// #45
   172e4:	cmp	w0, #0x77
   172e8:	ccmp	w0, w2, #0x4, ne  // ne = any
   172ec:	b.eq	17308 <OnPrint@@Base+0xbfc>  // b.none
   172f0:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   172f4:	mov	x4, #0x0                   	// #0
   172f8:	add	x2, x2, #0x46a
   172fc:	mov	x3, #0x0                   	// #0
   17300:	mov	w1, #0x2e                  	// #46
   17304:	b	17250 <OnPrint@@Base+0xb44>
   17308:	add	x0, x1, #0x3
   1730c:	str	x0, [x19, #24]
   17310:	ldrb	w0, [x1, #2]
   17314:	cmp	w0, #0x77
   17318:	b.ne	17328 <OnPrint@@Base+0xc1c>  // b.any
   1731c:	ldr	x0, [x20, #40]
   17320:	orr	x0, x0, #0x2
   17324:	str	x0, [x20, #40]
   17328:	ldrb	w0, [x1, #3]
   1732c:	mov	w2, #0x78                  	// #120
   17330:	cmp	w0, #0x2d
   17334:	ccmp	w0, w2, #0x4, ne  // ne = any
   17338:	b.eq	17354 <OnPrint@@Base+0xc48>  // b.none
   1733c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17340:	mov	x4, #0x0                   	// #0
   17344:	add	x2, x2, #0x497
   17348:	mov	x3, #0x0                   	// #0
   1734c:	mov	w1, #0x30                  	// #48
   17350:	b	17250 <OnPrint@@Base+0xb44>
   17354:	add	x0, x1, #0x4
   17358:	str	x0, [x19, #24]
   1735c:	ldrb	w0, [x1, #3]
   17360:	cmp	w0, #0x78
   17364:	b.ne	17374 <OnPrint@@Base+0xc68>  // b.any
   17368:	ldr	x0, [x20, #40]
   1736c:	orr	x0, x0, #0x4
   17370:	str	x0, [x20, #40]
   17374:	ldrb	w0, [x1, #4]
   17378:	cmp	w0, #0x73
   1737c:	cset	w23, eq  // eq = none
   17380:	cmp	w0, #0x70
   17384:	csinc	w23, w23, wzr, ne  // ne = any
   17388:	cbnz	w23, 173a4 <OnPrint@@Base+0xc98>
   1738c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17390:	mov	x4, #0x0                   	// #0
   17394:	add	x2, x2, #0x4c4
   17398:	mov	x3, #0x0                   	// #0
   1739c:	mov	w1, #0x32                  	// #50
   173a0:	b	17250 <OnPrint@@Base+0xb44>
   173a4:	add	x0, x1, #0x5
   173a8:	str	x0, [x19, #24]
   173ac:	ldrb	w0, [x1, #4]
   173b0:	cmp	w0, #0x73
   173b4:	b.ne	173c4 <OnPrint@@Base+0xcb8>  // b.any
   173b8:	ldr	x0, [x20, #40]
   173bc:	orr	x0, x0, #0x8
   173c0:	str	x0, [x20, #40]
   173c4:	add	x0, x1, #0x6
   173c8:	str	x0, [x19, #24]
   173cc:	ldrb	w24, [x1, #5]
   173d0:	cmp	x24, #0x20
   173d4:	b.eq	173f0 <OnPrint@@Base+0xce4>  // b.none
   173d8:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   173dc:	mov	x3, x24
   173e0:	add	x2, x2, #0x41d
   173e4:	mov	x4, #0x20                  	// #32
   173e8:	mov	w1, #0x34                  	// #52
   173ec:	b	17250 <OnPrint@@Base+0xb44>
   173f0:	mov	x0, x22
   173f4:	bl	16c38 <OnPrint@@Base+0x52c>
   173f8:	str	x0, [x20, #16]
   173fc:	ldr	x0, [x19, #24]
   17400:	add	x1, x0, #0x1
   17404:	str	x1, [x19, #24]
   17408:	ldrb	w25, [x0]
   1740c:	cmp	x25, #0x20
   17410:	b.eq	1742c <OnPrint@@Base+0xd20>  // b.none
   17414:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17418:	mov	x4, x24
   1741c:	mov	x3, x25
   17420:	add	x2, x2, #0x41d
   17424:	mov	w1, #0x36                  	// #54
   17428:	b	17250 <OnPrint@@Base+0xb44>
   1742c:	mov	x0, x22
   17430:	bl	16c38 <OnPrint@@Base+0x52c>
   17434:	ldr	x0, [x19, #24]
   17438:	add	x1, x0, #0x1
   1743c:	str	x1, [x19, #24]
   17440:	ldrb	w24, [x0]
   17444:	cmp	x24, #0x3a
   17448:	b.eq	17464 <OnPrint@@Base+0xd58>  // b.none
   1744c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17450:	mov	x3, x24
   17454:	add	x2, x2, #0x4f1
   17458:	mov	x4, #0x3a                  	// #58
   1745c:	mov	w1, #0x38                  	// #56
   17460:	b	17250 <OnPrint@@Base+0xb44>
   17464:	mov	x0, x22
   17468:	bl	16c38 <OnPrint@@Base+0x52c>
   1746c:	ldr	x0, [x19, #24]
   17470:	add	x1, x0, #0x1
   17474:	str	x1, [x19, #24]
   17478:	ldrb	w3, [x0]
   1747c:	cmp	x3, #0x20
   17480:	b.eq	17498 <OnPrint@@Base+0xd8c>  // b.none
   17484:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17488:	mov	x4, x25
   1748c:	add	x2, x2, #0x41d
   17490:	mov	w1, w24
   17494:	b	17250 <OnPrint@@Base+0xb44>
   17498:	ldr	x0, [x19, #24]
   1749c:	ldrb	w0, [x0]
   174a0:	bl	16bc4 <OnPrint@@Base+0x4b8>
   174a4:	tst	w0, #0xff
   174a8:	b.eq	174bc <OnPrint@@Base+0xdb0>  // b.none
   174ac:	ldr	x0, [x19, #24]
   174b0:	add	x0, x0, #0x1
   174b4:	str	x0, [x19, #24]
   174b8:	b	17498 <OnPrint@@Base+0xd8c>
   174bc:	ldr	x1, [x19, #24]
   174c0:	cmp	x1, x21
   174c4:	b.cs	174e0 <OnPrint@@Base+0xdd4>  // b.hs, b.nlast
   174c8:	ldrb	w0, [x1]
   174cc:	cmp	w0, #0x20
   174d0:	b.ne	174e0 <OnPrint@@Base+0xdd4>  // b.any
   174d4:	add	x1, x1, #0x1
   174d8:	str	x1, [x19, #24]
   174dc:	b	174bc <OnPrint@@Base+0xdb0>
   174e0:	ldr	x0, [x20, #24]
   174e4:	cbz	x0, 1750c <OnPrint@@Base+0xe00>
   174e8:	ldr	x22, [x20, #32]
   174ec:	sub	x2, x21, x1
   174f0:	sub	x22, x22, #0x1
   174f4:	cmp	x22, x2
   174f8:	csel	x22, x22, x2, ls  // ls = plast
   174fc:	mov	x2, x22
   17500:	bl	1241c <__sanitizer_set_report_fd@@Base+0x1b7c>
   17504:	ldr	x0, [x20, #24]
   17508:	strb	wzr, [x0, x22]
   1750c:	add	x21, x21, #0x1
   17510:	str	x21, [x19, #24]
   17514:	mov	w0, w23
   17518:	ldp	x21, x22, [sp, #16]
   1751c:	ldp	x23, x24, [sp, #32]
   17520:	ldp	x25, x30, [sp, #48]
   17524:	ldp	x19, x20, [sp], #64
   17528:	ret
   1752c:	mov	w23, #0x0                   	// #0
   17530:	b	17514 <OnPrint@@Base+0xe08>
   17534:	ldr	w2, [x0]
   17538:	ldr	w0, [x1]
   1753c:	cmp	w2, w0
   17540:	cset	w0, cc  // cc = lo, ul, last
   17544:	ret
   17548:	ldr	x0, [x0]
   1754c:	ldr	w0, [x0, #8]
   17550:	ret
   17554:	ldr	x0, [x0]
   17558:	ldr	w0, [x0, #12]
   1755c:	and	w0, w0, #0xfffff
   17560:	ret
   17564:	ldr	x0, [x0]
   17568:	add	x0, x0, #0xc
   1756c:	ldxr	w1, [x0]
   17570:	add	w2, w1, #0x1
   17574:	stlxr	w3, w2, [x0]
   17578:	cbnz	w3, 1756c <OnPrint@@Base+0xe60>
   1757c:	mvn	x0, x1
   17580:	dmb	ish
   17584:	tst	x0, #0xfffff
   17588:	b.ne	175b0 <OnPrint@@Base+0xea4>  // b.any
   1758c:	str	x30, [sp, #-16]!
   17590:	mov	x4, #0x100000              	// #1048576
   17594:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17598:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1759c:	mov	x3, x4
   175a0:	add	x2, x2, #0x51d
   175a4:	add	x0, x0, #0x54d
   175a8:	mov	w1, #0x61                  	// #97
   175ac:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   175b0:	ret
   175b4:	adrp	x0, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   175b8:	add	x0, x0, #0x228
   175bc:	ret
   175c0:	mov	w2, w0
   175c4:	cbz	w0, 17684 <OnPrint@@Base+0xf78>
   175c8:	str	x30, [sp, #-16]!
   175cc:	and	x3, x2, #0x7fffffff
   175d0:	mov	w4, w0
   175d4:	cmp	x3, w0, uxtw
   175d8:	b.eq	175f4 <OnPrint@@Base+0xee8>  // b.none
   175dc:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   175e0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   175e4:	add	x2, x2, #0x58f
   175e8:	add	x0, x0, #0x5bf
   175ec:	mov	w1, #0x8c                  	// #140
   175f0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   175f4:	lsr	w3, w0, #23
   175f8:	adrp	x4, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   175fc:	add	x4, x4, #0xe28
   17600:	mov	x6, #0xfffff               	// #1048575
   17604:	lsl	x3, x3, #12
   17608:	add	x5, x3, #0x1, lsl #12
   1760c:	cmp	x3, x6
   17610:	b.ls	17630 <OnPrint@@Base+0xf24>  // b.plast
   17614:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17618:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1761c:	add	x2, x2, #0x604
   17620:	add	x0, x0, #0x5bf
   17624:	mov	x4, #0x100000              	// #1048576
   17628:	mov	w1, #0x91                  	// #145
   1762c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   17630:	ldr	x1, [x4, x3, lsl #3]
   17634:	and	x0, x1, #0xfffffffffffffffe
   17638:	cbz	x0, 1766c <OnPrint@@Base+0xf60>
   1763c:	ldr	w1, [x0, #8]
   17640:	cmp	w2, w1
   17644:	b.ne	17664 <OnPrint@@Base+0xf58>  // b.any
   17648:	ldp	w2, w3, [x0, #16]
   1764c:	add	x0, x0, #0x18
   17650:	mov	x1, #0x0                   	// #0
   17654:	bfxil	x1, x2, #0, #32
   17658:	ldr	x30, [sp], #16
   1765c:	bfi	x1, x3, #32, #32
   17660:	ret
   17664:	ldr	x0, [x0]
   17668:	b	17638 <OnPrint@@Base+0xf2c>
   1766c:	add	x3, x3, #0x1
   17670:	cmp	x5, x3
   17674:	b.ne	1760c <OnPrint@@Base+0xf00>  // b.any
   17678:	mov	w3, #0x0                   	// #0
   1767c:	mov	w2, #0x0                   	// #0
   17680:	b	17650 <OnPrint@@Base+0xf44>
   17684:	mov	x1, #0x0                   	// #0
   17688:	mov	w3, #0x0                   	// #0
   1768c:	bfxil	x1, x2, #0, #32
   17690:	mov	x0, #0x0                   	// #0
   17694:	bfi	x1, x3, #32, #32
   17698:	ret
   1769c:	adrp	x1, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   176a0:	add	x1, x1, #0xe28
   176a4:	mov	w0, #0x0                   	// #0
   176a8:	sxtw	x3, w0
   176ac:	ldr	x2, [x1, x3, lsl #3]
   176b0:	dmb	ish
   176b4:	and	x2, x2, #0xfffffffffffffffe
   176b8:	str	x2, [x1, x3, lsl #3]
   176bc:	add	w0, w0, #0x1
   176c0:	cmp	w0, #0x100, lsl #12
   176c4:	b.ne	176a8 <OnPrint@@Base+0xf9c>  // b.any
   176c8:	ret
   176cc:	ldr	x4, [x0, #16]
   176d0:	cbnz	x4, 176f0 <OnPrint@@Base+0xfe4>
   176d4:	mov	x0, #0x0                   	// #0
   176d8:	mov	x1, #0x0                   	// #0
   176dc:	ret
   176e0:	mov	x0, #0x0                   	// #0
   176e4:	mov	x1, #0x0                   	// #0
   176e8:	ldr	x30, [sp], #16
   176ec:	ret
   176f0:	mov	x5, x4
   176f4:	mov	x2, #0x0                   	// #0
   176f8:	str	x30, [sp, #-16]!
   176fc:	cmp	x5, x2
   17700:	b.ls	17750 <OnPrint@@Base+0x1044>  // b.plast
   17704:	add	x6, x5, x2
   17708:	lsr	x3, x6, #1
   1770c:	cmp	x4, x6, lsr #1
   17710:	b.hi	17734 <OnPrint@@Base+0x1028>  // b.pmore
   17714:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   17718:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1771c:	add	x2, x2, #0x978
   17720:	add	x0, x0, #0x98a
   17724:	mov	w1, #0x1ba                 	// #442
   17728:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1772c:	mov	x5, x3
   17730:	b	176fc <OnPrint@@Base+0xff0>
   17734:	ldr	x7, [x0]
   17738:	lsl	x6, x3, #4
   1773c:	ldr	w6, [x7, x6]
   17740:	cmp	w1, w6
   17744:	b.ls	1772c <OnPrint@@Base+0x1020>  // b.plast
   17748:	add	x2, x3, #0x1
   1774c:	b	176fc <OnPrint@@Base+0xff0>
   17750:	cmp	x4, x2
   17754:	b.cc	176e0 <OnPrint@@Base+0xfd4>  // b.lo, b.ul, b.last
   17758:	b.ne	17778 <OnPrint@@Base+0x106c>  // b.any
   1775c:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   17760:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   17764:	mov	x3, x4
   17768:	add	x2, x2, #0x978
   1776c:	add	x0, x0, #0x98a
   17770:	mov	w1, #0x1b6                 	// #438
   17774:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   17778:	ldr	x0, [x0]
   1777c:	lsl	x3, x2, #4
   17780:	add	x2, x0, x2, lsl #4
   17784:	ldr	w0, [x0, x3]
   17788:	cmp	w0, w1
   1778c:	b.ne	176e0 <OnPrint@@Base+0xfd4>  // b.any
   17790:	ldr	x1, [x2, #8]
   17794:	add	x0, x1, #0x18
   17798:	ldr	x1, [x1, #16]
   1779c:	b	176e8 <OnPrint@@Base+0xfdc>
   177a0:	stp	x19, x20, [sp, #-32]!
   177a4:	adrp	x19, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   177a8:	add	x19, x19, #0xe28
   177ac:	mov	w20, #0x100000              	// #1048576
   177b0:	str	x30, [sp, #16]
   177b4:	mov	x0, x19
   177b8:	bl	17c64 <OnPrint@@Base+0x1558>
   177bc:	add	x19, x19, #0x8
   177c0:	subs	w20, w20, #0x1
   177c4:	b.ne	177b4 <OnPrint@@Base+0x10a8>  // b.any
   177c8:	ldr	x30, [sp, #16]
   177cc:	ldp	x19, x20, [sp], #32
   177d0:	ret
   177d4:	str	x30, [sp, #-16]!
   177d8:	mov	x2, x1
   177dc:	mov	x3, #0x0                   	// #0
   177e0:	mov	x1, x0
   177e4:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   177e8:	add	x0, x0, #0xe28
   177ec:	bl	17cc4 <OnPrint@@Base+0x15b8>
   177f0:	cbz	x0, 17800 <OnPrint@@Base+0x10f4>
   177f4:	ldr	w0, [x0, #8]
   177f8:	ldr	x30, [sp], #16
   177fc:	ret
   17800:	mov	w0, #0x0                   	// #0
   17804:	b	177f8 <OnPrint@@Base+0x10ec>
   17808:	mov	x2, x1
   1780c:	mov	x3, #0x0                   	// #0
   17810:	mov	x1, x0
   17814:	adrp	x0, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   17818:	add	x0, x0, #0xe28
   1781c:	b	17cc4 <OnPrint@@Base+0x15b8>
   17820:	stp	x19, x20, [sp, #-80]!
   17824:	mov	x1, #0x1                   	// #1
   17828:	mov	x19, x0
   1782c:	stp	x21, x22, [sp, #16]
   17830:	adrp	x21, 1a1000 <__ubsan_vptr_type_cache@@Base+0x150188>
   17834:	stp	x23, x24, [sp, #32]
   17838:	stp	x25, x30, [sp, #48]
   1783c:	stp	xzr, xzr, [x0]
   17840:	str	xzr, [x0, #16]
   17844:	bl	17ecc <OnPrint@@Base+0x17c0>
   17848:	add	x0, x21, #0xe28
   1784c:	add	x0, x0, #0x800, lsl #12
   17850:	ldr	x1, [x0, #1024]
   17854:	ldr	x0, [x19, #8]
   17858:	add	x1, x1, #0x64
   1785c:	cmp	x1, x0, lsr #4
   17860:	b.ls	1786c <OnPrint@@Base+0x1160>  // b.plast
   17864:	mov	x0, x19
   17868:	bl	17ecc <OnPrint@@Base+0x17c0>
   1786c:	add	x21, x21, #0xe28
   17870:	add	x23, sp, #0x40
   17874:	mov	w25, #0x0                   	// #0
   17878:	mov	w22, #0x3f                  	// #63
   1787c:	sxtw	x0, w25
   17880:	ldr	x20, [x21, x0, lsl #3]
   17884:	and	x20, x20, #0xfffffffffffffffe
   17888:	mov	x24, #0x1                   	// #1
   1788c:	cbz	x20, 17958 <OnPrint@@Base+0x124c>
   17890:	ldp	x4, x3, [x19, #8]
   17894:	ldr	w0, [x20, #8]
   17898:	str	w0, [sp, #64]
   1789c:	str	x20, [sp, #72]
   178a0:	lsr	x4, x4, #4
   178a4:	cmp	x3, x4
   178a8:	b.ls	178c4 <OnPrint@@Base+0x11b8>  // b.plast
   178ac:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   178b0:	add	x2, x2, #0x74b
   178b4:	mov	w1, #0x1be                 	// #446
   178b8:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   178bc:	add	x0, x0, #0x98a
   178c0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   178c4:	b.ne	17930 <OnPrint@@Base+0x1224>  // b.any
   178c8:	add	x1, x3, #0x1
   178cc:	tst	x1, x3
   178d0:	b.eq	17928 <OnPrint@@Base+0x121c>  // b.none
   178d4:	clz	x0, x1
   178d8:	sub	w0, w22, w0
   178dc:	add	w4, w0, #0x1
   178e0:	lsl	x4, x24, x4
   178e4:	cmp	x1, x4
   178e8:	b.cc	17900 <OnPrint@@Base+0x11f4>  // b.lo, b.ul, b.last
   178ec:	mov	x3, x1
   178f0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   178f4:	mov	w1, #0x17b                 	// #379
   178f8:	add	x2, x2, #0x7fe
   178fc:	b	178b8 <OnPrint@@Base+0x11ac>
   17900:	lsl	x0, x24, x0
   17904:	cmp	x1, x0
   17908:	b.hi	17924 <OnPrint@@Base+0x1218>  // b.pmore
   1790c:	mov	x3, x1
   17910:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   17914:	mov	x4, x0
   17918:	add	x2, x2, #0x820
   1791c:	mov	w1, #0x17c                 	// #380
   17920:	b	178b8 <OnPrint@@Base+0x11ac>
   17924:	mov	x1, x4
   17928:	mov	x0, x19
   1792c:	bl	17ecc <OnPrint@@Base+0x17c0>
   17930:	ldr	x0, [x19, #16]
   17934:	mov	x2, #0x10                  	// #16
   17938:	ldr	x3, [x19]
   1793c:	add	x1, x0, #0x1
   17940:	str	x1, [x19, #16]
   17944:	mov	x1, x23
   17948:	add	x0, x3, x0, lsl #4
   1794c:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   17950:	ldr	x20, [x20]
   17954:	b	1788c <OnPrint@@Base+0x1180>
   17958:	add	w25, w25, #0x1
   1795c:	cmp	w25, #0x100, lsl #12
   17960:	b.ne	1787c <OnPrint@@Base+0x1170>  // b.any
   17964:	ldr	x0, [x19]
   17968:	adrp	x2, 17000 <OnPrint@@Base+0x8f4>
   1796c:	ldr	x1, [x19, #16]
   17970:	add	x2, x2, #0x534
   17974:	bl	17a98 <OnPrint@@Base+0x138c>
   17978:	ldp	x21, x22, [sp, #16]
   1797c:	ldp	x23, x24, [sp, #32]
   17980:	ldp	x25, x30, [sp, #48]
   17984:	ldp	x19, x20, [sp], #80
   17988:	ret
   1798c:	mov	x2, x0
   17990:	add	x3, x0, #0x8
   17994:	ldr	x0, [x2, #8]
   17998:	dmb	ish
   1799c:	ldr	x5, [x2, #16]
   179a0:	dmb	ish
   179a4:	cbz	x0, 179d8 <OnPrint@@Base+0x12cc>
   179a8:	add	x4, x1, x0
   179ac:	cmp	x4, x5
   179b0:	b.hi	179d8 <OnPrint@@Base+0x12cc>  // b.pmore
   179b4:	ldxr	x5, [x3]
   179b8:	cmp	x5, x0
   179bc:	b.ne	179c8 <OnPrint@@Base+0x12bc>  // b.any
   179c0:	stlxr	w6, x4, [x3]
   179c4:	cbnz	w6, 179b4 <OnPrint@@Base+0x12a8>
   179c8:	dmb	ish
   179cc:	cmp	x0, x5
   179d0:	b.ne	17994 <OnPrint@@Base+0x1288>  // b.any
   179d4:	ret
   179d8:	mov	x0, #0x0                   	// #0
   179dc:	b	179d4 <OnPrint@@Base+0x12c8>
   179e0:	stp	x19, x20, [sp, #-48]!
   179e4:	adrp	x19, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   179e8:	mov	x20, x0
   179ec:	stp	x21, x22, [sp, #16]
   179f0:	mov	x1, x0
   179f4:	ldr	x21, [x19, #3824]
   179f8:	stp	x23, x30, [sp, #32]
   179fc:	mov	x0, x21
   17a00:	bl	1798c <OnPrint@@Base+0x1280>
   17a04:	cbnz	x0, 17a54 <OnPrint@@Base+0x1348>
   17a08:	mov	w1, #0x1                   	// #1
   17a0c:	ldxrb	w0, [x21]
   17a10:	stxrb	w2, w1, [x21]
   17a14:	cbnz	w2, 17a0c <OnPrint@@Base+0x1300>
   17a18:	dmb	ish
   17a1c:	tst	w0, #0xff
   17a20:	b.eq	17a2c <OnPrint@@Base+0x1320>  // b.none
   17a24:	mov	x0, x21
   17a28:	bl	b734 <__ubsan_handle_cfi_bad_type@@Base+0x534>
   17a2c:	ldr	x19, [x19, #3824]
   17a30:	adrp	x22, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17a34:	add	x22, x22, #0x511
   17a38:	mov	x23, #0x10000               	// #65536
   17a3c:	mov	x1, x20
   17a40:	mov	x0, x19
   17a44:	bl	1798c <OnPrint@@Base+0x1280>
   17a48:	cbz	x0, 17a64 <OnPrint@@Base+0x1358>
   17a4c:	dmb	ish
   17a50:	strb	wzr, [x19]
   17a54:	ldp	x21, x22, [sp, #16]
   17a58:	ldp	x23, x30, [sp, #32]
   17a5c:	ldp	x19, x20, [sp], #48
   17a60:	ret
   17a64:	cmp	x20, #0x10, lsl #12
   17a68:	str	xzr, [x19, #8]
   17a6c:	csel	x21, x20, x23, cs  // cs = hs, nlast
   17a70:	mov	x1, x22
   17a74:	mov	x0, x21
   17a78:	mov	w2, #0x0                   	// #0
   17a7c:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   17a80:	dmb	ish
   17a84:	add	x21, x21, x0
   17a88:	str	x21, [x19, #16]
   17a8c:	dmb	ish
   17a90:	str	x0, [x19, #8]
   17a94:	b	17a3c <OnPrint@@Base+0x1330>
   17a98:	cmp	x1, #0x1
   17a9c:	b.ls	17c04 <OnPrint@@Base+0x14f8>  // b.plast
   17aa0:	stp	x19, x20, [sp, #-80]!
   17aa4:	mov	x19, x0
   17aa8:	mov	x20, x1
   17aac:	stp	x23, x24, [sp, #32]
   17ab0:	mov	x24, x2
   17ab4:	mov	x23, #0x1                   	// #1
   17ab8:	stp	x21, x22, [sp, #16]
   17abc:	stp	x25, x26, [sp, #48]
   17ac0:	stp	x27, x30, [sp, #64]
   17ac4:	mov	x21, x23
   17ac8:	mov	x22, x21
   17acc:	sub	x21, x21, #0x1
   17ad0:	lsr	x21, x21, #1
   17ad4:	lsl	x27, x22, #4
   17ad8:	add	x22, x19, x22, lsl #4
   17adc:	add	x25, x19, x21, lsl #4
   17ae0:	mov	x1, x22
   17ae4:	mov	x0, x25
   17ae8:	lsl	x26, x21, #4
   17aec:	blr	x24
   17af0:	tst	w0, #0xff
   17af4:	b.eq	17b14 <OnPrint@@Base+0x1408>  // b.none
   17af8:	ldp	x0, x1, [x25]
   17afc:	ldr	w3, [x19, x27]
   17b00:	ldr	x2, [x22, #8]
   17b04:	stp	x0, x1, [x22]
   17b08:	str	w3, [x19, x26]
   17b0c:	str	x2, [x25, #8]
   17b10:	cbnz	x21, 17ac8 <OnPrint@@Base+0x13bc>
   17b14:	add	x0, x23, #0x1
   17b18:	cmp	x20, x0
   17b1c:	b.ne	17be4 <OnPrint@@Base+0x14d8>  // b.any
   17b20:	add	x20, x19, x20, lsl #4
   17b24:	ldp	x2, x3, [x20, #-16]
   17b28:	mov	x21, #0x0                   	// #0
   17b2c:	ldr	w1, [x19]
   17b30:	ldr	x0, [x19, #8]
   17b34:	stp	x2, x3, [x19]
   17b38:	stur	w1, [x20, #-16]
   17b3c:	stur	x0, [x20, #-8]
   17b40:	lsl	x25, x21, #1
   17b44:	add	x26, x21, #0x1
   17b48:	add	x22, x25, #0x1
   17b4c:	add	x25, x25, #0x2
   17b50:	cmp	x22, x23
   17b54:	b.cs	17bf4 <OnPrint@@Base+0x14e8>  // b.hs, b.nlast
   17b58:	add	x1, x19, x22, lsl #4
   17b5c:	add	x0, x19, x21, lsl #4
   17b60:	blr	x24
   17b64:	tst	w0, #0xff
   17b68:	b.eq	17bf4 <OnPrint@@Base+0x14e8>  // b.none
   17b6c:	cmp	x25, x23
   17b70:	b.cs	17b88 <OnPrint@@Base+0x147c>  // b.hs, b.nlast
   17b74:	add	x0, x19, x22, lsl #4
   17b78:	add	x1, x19, x26, lsl #5
   17b7c:	blr	x24
   17b80:	tst	w0, #0xff
   17b84:	csel	x22, x22, x25, eq  // eq = none
   17b88:	cmp	x22, x21
   17b8c:	b.eq	17bc0 <OnPrint@@Base+0x14b4>  // b.none
   17b90:	lsl	x2, x21, #4
   17b94:	add	x1, x19, x22, lsl #4
   17b98:	add	x21, x19, x21, lsl #4
   17b9c:	lsl	x0, x22, #4
   17ba0:	cmp	x22, x23
   17ba4:	ldr	w5, [x19, x2]
   17ba8:	ldp	x2, x3, [x1]
   17bac:	ldr	x4, [x21, #8]
   17bb0:	stp	x2, x3, [x21]
   17bb4:	str	w5, [x19, x0]
   17bb8:	str	x4, [x1, #8]
   17bbc:	b.cc	17bec <OnPrint@@Base+0x14e0>  // b.lo, b.ul, b.last
   17bc0:	sub	x20, x20, #0x10
   17bc4:	subs	x23, x23, #0x1
   17bc8:	b.ne	17b24 <OnPrint@@Base+0x1418>  // b.any
   17bcc:	ldp	x21, x22, [sp, #16]
   17bd0:	ldp	x23, x24, [sp, #32]
   17bd4:	ldp	x25, x26, [sp, #48]
   17bd8:	ldp	x27, x30, [sp, #64]
   17bdc:	ldp	x19, x20, [sp], #80
   17be0:	ret
   17be4:	mov	x23, x0
   17be8:	b	17ac4 <OnPrint@@Base+0x13b8>
   17bec:	mov	x21, x22
   17bf0:	b	17b40 <OnPrint@@Base+0x1434>
   17bf4:	cmp	x25, x23
   17bf8:	b.cs	17bc0 <OnPrint@@Base+0x14b4>  // b.hs, b.nlast
   17bfc:	mov	x22, x21
   17c00:	b	17b74 <OnPrint@@Base+0x1468>
   17c04:	ret
   17c08:	and	w3, w3, #0xfff00000
   17c0c:	cbz	x0, 17c60 <OnPrint@@Base+0x1554>
   17c10:	ldr	w4, [x0, #12]
   17c14:	and	w4, w4, #0xfff00000
   17c18:	cmp	w4, w3
   17c1c:	b.ne	17c58 <OnPrint@@Base+0x154c>  // b.any
   17c20:	ldr	x4, [x0, #16]
   17c24:	cmp	x2, x4
   17c28:	b.ne	17c58 <OnPrint@@Base+0x154c>  // b.any
   17c2c:	ldr	w5, [x0, #16]
   17c30:	add	x6, x0, #0x18
   17c34:	mov	x4, #0x0                   	// #0
   17c38:	cmp	x5, x4
   17c3c:	b.ls	17c60 <OnPrint@@Base+0x1554>  // b.plast
   17c40:	ldr	x8, [x6, x4, lsl #3]
   17c44:	ldr	x7, [x1, x4, lsl #3]
   17c48:	cmp	x8, x7
   17c4c:	b.ne	17c58 <OnPrint@@Base+0x154c>  // b.any
   17c50:	add	x4, x4, #0x1
   17c54:	b	17c38 <OnPrint@@Base+0x152c>
   17c58:	ldr	x0, [x0]
   17c5c:	b	17c0c <OnPrint@@Base+0x1500>
   17c60:	ret
   17c64:	stp	x19, x20, [sp, #-32]!
   17c68:	mov	x19, x0
   17c6c:	mov	w20, #0x0                   	// #0
   17c70:	str	x30, [sp, #16]
   17c74:	ldr	x0, [x19]
   17c78:	tbnz	w0, #0, 17ca0 <OnPrint@@Base+0x1594>
   17c7c:	orr	x2, x0, #0x1
   17c80:	ldxr	x1, [x19]
   17c84:	cmp	x1, x0
   17c88:	b.ne	17c94 <OnPrint@@Base+0x1588>  // b.any
   17c8c:	stlxr	w3, x2, [x19]
   17c90:	cbnz	w3, 17c80 <OnPrint@@Base+0x1574>
   17c94:	dmb	ish
   17c98:	cmp	x0, x1
   17c9c:	b.eq	17cb8 <OnPrint@@Base+0x15ac>  // b.none
   17ca0:	cmp	w20, #0x9
   17ca4:	b.gt	17cb0 <OnPrint@@Base+0x15a4>
   17ca8:	add	w20, w20, #0x1
   17cac:	b	17c74 <OnPrint@@Base+0x1568>
   17cb0:	bl	12e8c <__sanitizer_set_report_fd@@Base+0x25ec>
   17cb4:	b	17ca8 <OnPrint@@Base+0x159c>
   17cb8:	ldr	x30, [sp, #16]
   17cbc:	ldp	x19, x20, [sp], #32
   17cc0:	ret
   17cc4:	stp	x19, x20, [sp, #-128]!
   17cc8:	stp	x21, x22, [sp, #16]
   17ccc:	mov	x21, x0
   17cd0:	mov	x22, x3
   17cd4:	stp	x23, x24, [sp, #32]
   17cd8:	mov	w23, w2
   17cdc:	stp	x25, x26, [sp, #48]
   17ce0:	stp	x27, x28, [sp, #64]
   17ce4:	mov	x28, x1
   17ce8:	mov	x27, x2
   17cec:	str	x30, [sp, #80]
   17cf0:	cbz	x3, 17cf8 <OnPrint@@Base+0x15ec>
   17cf4:	strb	wzr, [x3]
   17cf8:	cbz	w23, 17d4c <OnPrint@@Base+0x1640>
   17cfc:	cbz	x28, 17d4c <OnPrint@@Base+0x1640>
   17d00:	mov	w20, #0xb28c                	// #45708
   17d04:	mov	w1, #0xe995                	// #59797
   17d08:	movk	w20, #0x9747, lsl #16
   17d0c:	mov	w0, w23
   17d10:	eor	w20, w20, w23, lsl #3
   17d14:	mov	x2, #0x0                   	// #0
   17d18:	movk	w1, #0x5bd1, lsl #16
   17d1c:	str	x0, [sp, #104]
   17d20:	ldr	x0, [sp, #104]
   17d24:	cmp	x0, x2
   17d28:	b.ls	17d6c <OnPrint@@Base+0x1660>  // b.plast
   17d2c:	ldr	x0, [x28, x2, lsl #3]
   17d30:	mul	w20, w20, w1
   17d34:	add	x2, x2, #0x1
   17d38:	mul	w0, w1, w0
   17d3c:	eor	w0, w0, w0, lsr #24
   17d40:	mul	w0, w0, w1
   17d44:	eor	w20, w0, w20
   17d48:	b	17d20 <OnPrint@@Base+0x1614>
   17d4c:	mov	x0, #0x0                   	// #0
   17d50:	ldp	x21, x22, [sp, #16]
   17d54:	ldp	x23, x24, [sp, #32]
   17d58:	ldp	x25, x26, [sp, #48]
   17d5c:	ldp	x27, x28, [sp, #64]
   17d60:	ldr	x30, [sp, #80]
   17d64:	ldp	x19, x20, [sp], #128
   17d68:	ret
   17d6c:	eor	w20, w20, w20, lsr #13
   17d70:	mul	w20, w20, w1
   17d74:	eor	w20, w20, w20, lsr #15
   17d78:	and	x26, x20, #0xfffff
   17d7c:	lsl	x24, x26, #3
   17d80:	add	x25, x21, x26, lsl #3
   17d84:	ldr	x19, [x21, x24]
   17d88:	and	x19, x19, #0xfffffffffffffffe
   17d8c:	bfxil	x27, x23, #0, #32
   17d90:	mov	w3, w20
   17d94:	mov	x1, x28
   17d98:	mov	x2, x27
   17d9c:	mov	x0, x19
   17da0:	bl	17c08 <OnPrint@@Base+0x14fc>
   17da4:	cbnz	x0, 17d50 <OnPrint@@Base+0x1644>
   17da8:	mov	x0, x25
   17dac:	bl	17c64 <OnPrint@@Base+0x1558>
   17db0:	mov	x25, x0
   17db4:	cmp	x19, x0
   17db8:	b.eq	17ddc <OnPrint@@Base+0x16d0>  // b.none
   17dbc:	mov	w3, w20
   17dc0:	mov	x1, x28
   17dc4:	mov	x2, x27
   17dc8:	bl	17c08 <OnPrint@@Base+0x14fc>
   17dcc:	cbz	x0, 17ddc <OnPrint@@Base+0x16d0>
   17dd0:	dmb	ish
   17dd4:	str	x25, [x21, x24]
   17dd8:	b	17d50 <OnPrint@@Base+0x1644>
   17ddc:	lsr	x26, x26, #12
   17de0:	add	x0, x26, #0x200, lsl #12
   17de4:	add	x0, x21, x0, lsl #2
   17de8:	ldxr	w3, [x0]
   17dec:	add	w1, w3, #0x1
   17df0:	stlxr	w2, w1, [x0]
   17df4:	cbnz	w2, 17de8 <OnPrint@@Base+0x16dc>
   17df8:	add	x2, x21, #0x800, lsl #12
   17dfc:	dmb	ish
   17e00:	add	w3, w3, #0x1
   17e04:	ldr	x0, [x2, #1024]
   17e08:	add	x0, x0, #0x1
   17e0c:	str	x0, [x2, #1024]
   17e10:	mov	w0, #0x7fffff              	// #8388607
   17e14:	cmp	w3, w0
   17e18:	b.ls	17e38 <OnPrint@@Base+0x172c>  // b.plast
   17e1c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17e20:	add	x2, x2, #0x61b
   17e24:	mov	x4, #0x800000              	// #8388608
   17e28:	mov	w1, #0x77                  	// #119
   17e2c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17e30:	add	x0, x0, #0x5bf
   17e34:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   17e38:	orr	w26, w3, w26, lsl #23
   17e3c:	cbnz	w26, 17e58 <OnPrint@@Base+0x174c>
   17e40:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17e44:	mov	x4, #0x0                   	// #0
   17e48:	add	x2, x2, #0x62f
   17e4c:	mov	x3, #0x0                   	// #0
   17e50:	mov	w1, #0x79                  	// #121
   17e54:	b	17e2c <OnPrint@@Base+0x1720>
   17e58:	sub	w1, w23, #0x1
   17e5c:	and	w20, w20, #0xfff00000
   17e60:	add	x1, x1, #0x4
   17e64:	lsr	x27, x27, #32
   17e68:	lsl	x1, x1, #3
   17e6c:	stp	x1, x2, [sp, #112]
   17e70:	mov	x0, x1
   17e74:	bl	179e0 <OnPrint@@Base+0x12d4>
   17e78:	mov	x19, x0
   17e7c:	ldp	x1, x2, [sp, #112]
   17e80:	ldr	x0, [x2, #1032]
   17e84:	add	x1, x0, x1
   17e88:	str	x1, [x2, #1032]
   17e8c:	ldr	x0, [sp, #104]
   17e90:	str	w26, [x19, #8]
   17e94:	str	w20, [x19, #12]
   17e98:	mov	x1, x28
   17e9c:	stp	w23, w27, [x19, #16]
   17ea0:	lsl	x2, x0, #3
   17ea4:	add	x0, x19, #0x18
   17ea8:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   17eac:	str	x25, [x19]
   17eb0:	dmb	ish
   17eb4:	str	x19, [x21, x24]
   17eb8:	cbz	x22, 17ec4 <OnPrint@@Base+0x17b8>
   17ebc:	mov	w0, #0x1                   	// #1
   17ec0:	strb	w0, [x22]
   17ec4:	mov	x0, x19
   17ec8:	b	17d50 <OnPrint@@Base+0x1644>
   17ecc:	stp	x19, x20, [sp, #-48]!
   17ed0:	mov	x4, x1
   17ed4:	stp	x21, x22, [sp, #16]
   17ed8:	str	x30, [sp, #32]
   17edc:	cbnz	x1, 17efc <OnPrint@@Base+0x17f0>
   17ee0:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   17ee4:	add	x2, x2, #0x9c7
   17ee8:	mov	x3, #0x0                   	// #0
   17eec:	mov	w1, #0x1fc                 	// #508
   17ef0:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   17ef4:	add	x0, x0, #0x98a
   17ef8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   17efc:	ldr	x3, [x0, #16]
   17f00:	mov	x20, x0
   17f04:	cmp	x1, x3
   17f08:	b.cs	17f1c <OnPrint@@Base+0x1810>  // b.hs, b.nlast
   17f0c:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   17f10:	mov	w1, #0x1fd                 	// #509
   17f14:	add	x2, x2, #0x9e0
   17f18:	b	17ef0 <OnPrint@@Base+0x17e4>
   17f1c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   17f20:	lsl	x19, x1, #4
   17f24:	mov	x21, x0
   17f28:	ldr	x22, [x0, #4016]
   17f2c:	ldr	x1, [x22]
   17f30:	cbnz	x1, 17f3c <OnPrint@@Base+0x1830>
   17f34:	bl	1352c <__sanitizer_set_report_fd@@Base+0x2c8c>
   17f38:	str	x0, [x22]
   17f3c:	ldr	x0, [x21, #4016]
   17f40:	ldr	x0, [x0]
   17f44:	sub	x4, x0, #0x1
   17f48:	tst	x4, x0
   17f4c:	b.eq	17f60 <OnPrint@@Base+0x1854>  // b.none
   17f50:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   17f54:	add	x0, x0, #0x9fe
   17f58:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   17f5c:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   17f60:	add	x19, x19, x4
   17f64:	neg	x0, x0
   17f68:	and	x19, x19, x0
   17f6c:	mov	w2, #0x0                   	// #0
   17f70:	mov	x0, x19
   17f74:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   17f78:	add	x1, x1, #0xa15
   17f7c:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   17f80:	ldr	x1, [x20]
   17f84:	mov	x21, x0
   17f88:	ldr	x2, [x20, #16]
   17f8c:	lsl	x2, x2, #4
   17f90:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   17f94:	ldp	x0, x1, [x20]
   17f98:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   17f9c:	ldr	x30, [sp, #32]
   17fa0:	stp	x21, x19, [x20]
   17fa4:	ldp	x21, x22, [sp, #16]
   17fa8:	ldp	x19, x20, [sp], #48
   17fac:	ret
   17fb0:	add	x0, x0, #0x4
   17fb4:	ret
   17fb8:	str	x30, [sp, #-16]!
   17fbc:	mov	x0, x30
   17fc0:	ldr	x30, [sp], #16
   17fc4:	ret
   17fc8:	stp	x19, x20, [sp, #-32]!
   17fcc:	cmp	x3, #0x0
   17fd0:	stp	x21, x30, [sp, #16]
   17fd4:	mov	x21, x3
   17fd8:	cinc	w3, w2, ne  // ne = any
   17fdc:	str	w3, [x0, #8]
   17fe0:	cmp	w3, #0x100
   17fe4:	b.ls	18008 <OnPrint@@Base+0x18fc>  // b.plast
   17fe8:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17fec:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   17ff0:	mov	w3, w3
   17ff4:	add	x2, x2, #0x63f
   17ff8:	add	x0, x0, #0x65e
   17ffc:	mov	x4, #0x100                 	// #256
   18000:	mov	w1, #0x22                  	// #34
   18004:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   18008:	mov	x20, x0
   1800c:	mov	x19, x2
   18010:	add	x0, x0, #0x10
   18014:	lsl	x2, x2, #3
   18018:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1801c:	cbz	x21, 18028 <OnPrint@@Base+0x191c>
   18020:	add	x19, x19, #0x2
   18024:	str	x21, [x20, x19, lsl #3]
   18028:	ldp	x21, x30, [sp, #16]
   1802c:	str	xzr, [x20, #2064]
   18030:	ldp	x19, x20, [sp], #32
   18034:	ret
   18038:	stp	x19, x20, [sp, #-80]!
   1803c:	mov	x20, x0
   18040:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18044:	stp	x25, x26, [sp, #48]
   18048:	mov	x25, x1
   1804c:	mov	x19, x2
   18050:	ldr	x26, [x0, #4016]
   18054:	stp	x21, x22, [sp, #16]
   18058:	mov	x21, x3
   1805c:	stp	x23, x24, [sp, #32]
   18060:	mov	x22, x0
   18064:	mov	x24, x4
   18068:	ldr	x1, [x26]
   1806c:	str	x30, [sp, #64]
   18070:	mov	w23, w5
   18074:	cbnz	x1, 18080 <OnPrint@@Base+0x1974>
   18078:	bl	1352c <__sanitizer_set_report_fd@@Base+0x2c8c>
   1807c:	str	x0, [x26]
   18080:	ldr	x0, [x22, #4016]
   18084:	mov	w3, w23
   18088:	cmp	w23, #0x1
   1808c:	ldr	x4, [x0]
   18090:	b.hi	180b0 <OnPrint@@Base+0x19a4>  // b.pmore
   18094:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18098:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1809c:	add	x2, x2, #0x6a0
   180a0:	add	x0, x0, #0x65e
   180a4:	mov	x4, #0x2                   	// #2
   180a8:	mov	w1, #0x47                  	// #71
   180ac:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   180b0:	mov	w0, #0x1                   	// #1
   180b4:	str	w0, [x20, #8]
   180b8:	str	x25, [x20, #16]
   180bc:	cmp	x21, #0xfff
   180c0:	b.ls	18124 <OnPrint@@Base+0x1a18>  // b.plast
   180c4:	mov	x2, x19
   180c8:	sub	x21, x21, #0x10
   180cc:	mov	x3, x2
   180d0:	cmp	x2, x24
   180d4:	b.ls	18124 <OnPrint@@Base+0x1a18>  // b.plast
   180d8:	cmp	x2, x21
   180dc:	b.cs	18124 <OnPrint@@Base+0x1a18>  // b.hs, b.nlast
   180e0:	tst	x2, #0x7
   180e4:	b.ne	18124 <OnPrint@@Base+0x1a18>  // b.any
   180e8:	ldr	w0, [x20, #8]
   180ec:	cmp	w0, w23
   180f0:	b.cs	18124 <OnPrint@@Base+0x1a18>  // b.hs, b.nlast
   180f4:	ldr	x1, [x2, #8]
   180f8:	cmp	x1, x4
   180fc:	b.cc	18124 <OnPrint@@Base+0x1a18>  // b.lo, b.ul, b.last
   18100:	cmp	x25, x1
   18104:	b.eq	18118 <OnPrint@@Base+0x1a0c>  // b.none
   18108:	add	w5, w0, #0x1
   1810c:	add	x0, x20, w0, uxtw #3
   18110:	str	w5, [x20, #8]
   18114:	str	x1, [x0, #16]
   18118:	mov	x24, x3
   1811c:	ldr	x2, [x2]
   18120:	b	180cc <OnPrint@@Base+0x19c0>
   18124:	ldp	x21, x22, [sp, #16]
   18128:	ldp	x23, x24, [sp, #32]
   1812c:	ldp	x25, x26, [sp, #48]
   18130:	ldr	x30, [sp, #64]
   18134:	ldp	x19, x20, [sp], #80
   18138:	ret
   1813c:	mov	x3, x1
   18140:	ldr	w1, [x0, #8]
   18144:	cmp	x3, w1, uxtw
   18148:	b.cc	1816c <OnPrint@@Base+0x1a60>  // b.lo, b.ul, b.last
   1814c:	str	x30, [sp, #-16]!
   18150:	mov	w4, w1
   18154:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18158:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1815c:	add	x2, x2, #0x6b7
   18160:	add	x0, x0, #0x65e
   18164:	mov	w1, #0x78                  	// #120
   18168:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1816c:	sub	w1, w1, w3
   18170:	add	x3, x0, x3, lsl #3
   18174:	mov	x2, #0x1                   	// #1
   18178:	str	w1, [x0, #8]
   1817c:	add	x4, x2, #0x1
   18180:	sub	x2, x2, #0x1
   18184:	cmp	x2, x1
   18188:	b.cs	1819c <OnPrint@@Base+0x1a90>  // b.hs, b.nlast
   1818c:	ldr	x2, [x3, x4, lsl #3]
   18190:	str	x2, [x0, x4, lsl #3]
   18194:	mov	x2, x4
   18198:	b	1817c <OnPrint@@Base+0x1a70>
   1819c:	ret
   181a0:	mov	x3, x0
   181a4:	mov	x2, #0x1                   	// #1
   181a8:	mov	x0, #0x0                   	// #0
   181ac:	ldr	w8, [x3, #8]
   181b0:	cmp	x8, x2
   181b4:	b.ls	181ec <OnPrint@@Base+0x1ae0>  // b.plast
   181b8:	ldr	x6, [x3]
   181bc:	ldr	x5, [x6, x2, lsl #3]
   181c0:	ldr	x6, [x6, x0, lsl #3]
   181c4:	sub	x7, x1, x5
   181c8:	subs	x4, x5, x1
   181cc:	csel	x4, x4, x7, cs  // cs = hs, nlast
   181d0:	subs	x5, x6, x1
   181d4:	sub	x7, x1, x6
   181d8:	csel	x5, x5, x7, cs  // cs = hs, nlast
   181dc:	cmp	x5, x4
   181e0:	csel	x0, x0, x2, ls  // ls = plast
   181e4:	add	x2, x2, #0x1
   181e8:	b	181b0 <OnPrint@@Base+0x1aa4>
   181ec:	ret
   181f0:	mov	w8, w1
   181f4:	mov	x10, x3
   181f8:	cmp	w8, #0x0
   181fc:	mov	x3, x5
   18200:	csel	x5, x10, xzr, ne  // ne = any
   18204:	str	x5, [x0, #2064]
   18208:	mov	x1, x2
   1820c:	and	w7, w7, #0xff
   18210:	mov	x2, x4
   18214:	mov	x4, x6
   18218:	cbnz	w8, 18224 <OnPrint@@Base+0x1b18>
   1821c:	str	wzr, [x0, #8]
   18220:	ret
   18224:	cmp	w8, #0x1
   18228:	b.ne	18238 <OnPrint@@Base+0x1b2c>  // b.any
   1822c:	str	w8, [x0, #8]
   18230:	str	x1, [x0, #16]
   18234:	b	18220 <OnPrint@@Base+0x1b14>
   18238:	cbnz	w7, 18250 <OnPrint@@Base+0x1b44>
   1823c:	cbz	x2, 18248 <OnPrint@@Base+0x1b3c>
   18240:	mov	w3, w8
   18244:	b	1e248 <__sanitizer_set_death_callback@@Base+0x1250>
   18248:	mov	w2, w8
   1824c:	b	1e1ac <__sanitizer_set_death_callback@@Base+0x11b4>
   18250:	mov	w5, w8
   18254:	mov	x2, x10
   18258:	b	18038 <OnPrint@@Base+0x192c>

000000000001825c <__sanitizer_get_module_and_offset_for_pc@@Base>:
   1825c:	stp	x19, x20, [sp, #-64]!
   18260:	mov	x19, x1
   18264:	mov	x20, x2
   18268:	stp	x21, x22, [sp, #16]
   1826c:	mov	x21, x0
   18270:	mov	x22, x3
   18274:	str	x30, [sp, #32]
   18278:	str	xzr, [sp, #56]
   1827c:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
   18280:	mov	x3, x22
   18284:	add	x2, sp, #0x38
   18288:	mov	x1, x21
   1828c:	bl	1b81c <__sanitizer_symbolize_global@@Base+0x3234>
   18290:	tst	w0, #0xff
   18294:	b.eq	182c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68>  // b.none
   18298:	cmp	x19, #0x0
   1829c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   182a0:	b.eq	182bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x60>  // b.none
   182a4:	ldr	x1, [sp, #56]
   182a8:	mov	x0, x19
   182ac:	add	x19, x19, x20
   182b0:	mov	x2, x20
   182b4:	bl	1241c <__sanitizer_set_report_fd@@Base+0x1b7c>
   182b8:	sturb	wzr, [x19, #-1]
   182bc:	mov	w0, #0x1                   	// #1
   182c0:	b	182c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c>
   182c4:	mov	w0, #0x0                   	// #0
   182c8:	ldp	x21, x22, [sp, #16]
   182cc:	ldr	x30, [sp, #32]
   182d0:	ldp	x19, x20, [sp], #64
   182d4:	ret
   182d8:	stp	x19, x20, [sp, #-192]!
   182dc:	mov	x19, x0
   182e0:	ldr	x0, [x0]
   182e4:	stp	x21, x22, [sp, #16]
   182e8:	stp	x23, x24, [sp, #32]
   182ec:	stp	x25, x26, [sp, #48]
   182f0:	stp	x27, x28, [sp, #64]
   182f4:	str	x30, [sp, #80]
   182f8:	cbz	x0, 18304 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa8>
   182fc:	ldr	w0, [x19, #8]
   18300:	cbnz	w0, 1832c <__sanitizer_get_module_and_offset_for_pc@@Base+0xd0>
   18304:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18308:	add	x0, x0, #0x6cc
   1830c:	bl	16994 <OnPrint@@Base+0x288>
   18310:	ldp	x21, x22, [sp, #16]
   18314:	ldp	x23, x24, [sp, #32]
   18318:	ldp	x25, x26, [sp, #48]
   1831c:	ldp	x27, x28, [sp, #64]
   18320:	ldr	x30, [sp, #80]
   18324:	ldp	x19, x20, [sp], #192
   18328:	ret
   1832c:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   18330:	add	x22, sp, #0x80
   18334:	lsl	x1, x0, #1
   18338:	mov	x0, x22
   1833c:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
   18340:	add	x23, sp, #0xa0
   18344:	mov	x24, #0x0                   	// #0
   18348:	mov	x26, #0x0                   	// #0
   1834c:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   18350:	mov	x1, x0
   18354:	mov	x0, x23
   18358:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
   1835c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18360:	str	x0, [sp, #104]
   18364:	ldr	x1, [x0, #4056]
   18368:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1836c:	add	x0, x0, #0x6df
   18370:	str	x0, [sp, #112]
   18374:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18378:	add	x0, x0, #0x73c
   1837c:	ldr	w25, [x1, #184]
   18380:	str	x0, [sp, #120]
   18384:	ldr	w0, [x19, #8]
   18388:	cmp	x0, x24
   1838c:	b.ls	18464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x208>  // b.plast
   18390:	ldr	x0, [x19]
   18394:	ldr	x20, [x0, x24, lsl #3]
   18398:	cbz	x20, 18464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x208>
   1839c:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
   183a0:	sub	x1, x20, #0x4
   183a4:	bl	1b89c <__sanitizer_symbolize_global@@Base+0x32b4>
   183a8:	mov	x20, x0
   183ac:	cbnz	x0, 183d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x174>
   183b0:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   183b4:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   183b8:	add	x2, x2, #0x6e0
   183bc:	add	x0, x0, #0x6f2
   183c0:	mov	x4, #0x0                   	// #0
   183c4:	mov	x3, #0x0                   	// #0
   183c8:	mov	w1, #0x22                  	// #34
   183cc:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   183d0:	mov	x21, x0
   183d4:	adrp	x28, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   183d8:	ldr	x0, [sp, #104]
   183dc:	add	x28, x28, #0xc6e
   183e0:	ldr	x27, [x0, #4056]
   183e4:	mov	x0, x22
   183e8:	bl	18694 <__sanitizer_symbolize_global@@Base+0xac>
   183ec:	add	x26, x26, #0x1
   183f0:	ldrb	w4, [x27, #181]
   183f4:	add	x3, x21, #0x8
   183f8:	ldr	x5, [x27, #24]
   183fc:	sub	w2, w26, #0x1
   18400:	ldr	x6, [sp, #112]
   18404:	mov	x0, x22
   18408:	ldr	x1, [x27, #192]
   1840c:	bl	1939c <__sanitizer_symbolize_global@@Base+0xdb4>
   18410:	ldr	x1, [sp, #128]
   18414:	mov	x0, x28
   18418:	bl	16994 <OnPrint@@Base+0x288>
   1841c:	cmp	w25, #0x0
   18420:	sub	w25, w25, #0x1
   18424:	b.le	1844c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f0>
   18428:	ldr	x0, [sp, #184]
   1842c:	cbz	x0, 1843c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e0>
   18430:	ldr	x1, [sp, #120]
   18434:	mov	x0, x23
   18438:	bl	16a9c <OnPrint@@Base+0x390>
   1843c:	ldr	x1, [x21, #40]
   18440:	cbz	x1, 1844c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f0>
   18444:	mov	x0, x23
   18448:	bl	16a9c <OnPrint@@Base+0x390>
   1844c:	ldr	x21, [x21]
   18450:	cbnz	x21, 183e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x188>
   18454:	mov	x0, x20
   18458:	add	x24, x24, #0x1
   1845c:	bl	1ab00 <__sanitizer_symbolize_global@@Base+0x2518>
   18460:	b	18384 <__sanitizer_get_module_and_offset_for_pc@@Base+0x128>
   18464:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18468:	add	x0, x0, #0x6de
   1846c:	bl	16994 <OnPrint@@Base+0x288>
   18470:	ldr	x0, [sp, #184]
   18474:	cbz	x0, 18488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22c>
   18478:	ldr	x1, [sp, #160]
   1847c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18480:	add	x0, x0, #0x73f
   18484:	bl	16994 <OnPrint@@Base+0x288>
   18488:	mov	x0, x23
   1848c:	bl	186b4 <__sanitizer_symbolize_global@@Base+0xcc>
   18490:	mov	x0, x22
   18494:	bl	186b4 <__sanitizer_symbolize_global@@Base+0xcc>
   18498:	b	18310 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb4>

000000000001849c <__sanitizer_symbolize_pc@@Base>:
   1849c:	cbz	x3, 185e4 <__sanitizer_symbolize_pc@@Base+0x148>
   184a0:	stp	x19, x20, [sp, #-112]!
   184a4:	mov	x20, x0
   184a8:	mov	x19, x2
   184ac:	stp	x21, x22, [sp, #16]
   184b0:	mov	x21, x3
   184b4:	sub	x22, x21, #0x1
   184b8:	stp	x23, x24, [sp, #32]
   184bc:	add	x24, x19, x22
   184c0:	stp	x25, x26, [sp, #48]
   184c4:	mov	x25, x1
   184c8:	stp	x27, x30, [sp, #64]
   184cc:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
   184d0:	sub	x1, x20, #0x4
   184d4:	bl	1b89c <__sanitizer_symbolize_global@@Base+0x32b4>
   184d8:	mov	x20, x0
   184dc:	cbnz	x0, 18510 <__sanitizer_symbolize_pc@@Base+0x74>
   184e0:	mov	x2, x21
   184e4:	mov	x0, x19
   184e8:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   184ec:	add	x1, x1, #0x750
   184f0:	bl	1241c <__sanitizer_set_report_fd@@Base+0x1b7c>
   184f4:	strb	wzr, [x19, x22]
   184f8:	ldp	x21, x22, [sp, #16]
   184fc:	ldp	x23, x24, [sp, #32]
   18500:	ldp	x25, x26, [sp, #48]
   18504:	ldp	x27, x30, [sp, #64]
   18508:	ldp	x19, x20, [sp], #112
   1850c:	ret
   18510:	adrp	x23, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18514:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   18518:	add	x22, sp, #0x50
   1851c:	mov	x1, x0
   18520:	mov	x0, x22
   18524:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
   18528:	ldr	x23, [x23, #4056]
   1852c:	adrp	x27, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18530:	add	x27, x27, #0x6df
   18534:	mov	w26, #0x0                   	// #0
   18538:	cmp	x20, #0x0
   1853c:	ccmp	x19, x24, #0x2, ne  // ne = any
   18540:	b.cs	185ac <__sanitizer_symbolize_pc@@Base+0x110>  // b.hs, b.nlast
   18544:	mov	x0, x22
   18548:	bl	18694 <__sanitizer_symbolize_global@@Base+0xac>
   1854c:	ldrb	w4, [x23, #181]
   18550:	mov	x0, x22
   18554:	ldr	x5, [x23, #24]
   18558:	mov	x6, x27
   1855c:	add	x3, x20, #0x8
   18560:	mov	w2, w26
   18564:	mov	x1, x25
   18568:	bl	1939c <__sanitizer_symbolize_global@@Base+0xdb4>
   1856c:	ldr	x0, [sp, #104]
   18570:	cbz	x0, 185a0 <__sanitizer_symbolize_pc@@Base+0x104>
   18574:	ldr	x1, [sp, #80]
   18578:	sub	x21, x24, x19
   1857c:	sub	x21, x21, #0x1
   18580:	mov	x0, x19
   18584:	mov	x2, x21
   18588:	bl	1241c <__sanitizer_set_report_fd@@Base+0x1b7c>
   1858c:	ldr	x2, [sp, #104]
   18590:	cmp	x2, x21
   18594:	csel	x2, x2, x21, ls  // ls = plast
   18598:	add	x19, x19, x2
   1859c:	strb	wzr, [x19], #1
   185a0:	add	w26, w26, #0x1
   185a4:	ldr	x20, [x20]
   185a8:	b	18538 <__sanitizer_symbolize_pc@@Base+0x9c>
   185ac:	cmp	x19, x24
   185b0:	b.ls	185d4 <__sanitizer_symbolize_pc@@Base+0x138>  // b.plast
   185b4:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   185b8:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   185bc:	add	x2, x2, #0x762
   185c0:	add	x0, x0, #0x6f2
   185c4:	mov	x4, #0x0                   	// #0
   185c8:	mov	x3, #0x0                   	// #0
   185cc:	mov	w1, #0x84                  	// #132
   185d0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   185d4:	strb	wzr, [x19]
   185d8:	mov	x0, x22
   185dc:	bl	186b4 <__sanitizer_symbolize_global@@Base+0xcc>
   185e0:	b	184f8 <__sanitizer_symbolize_pc@@Base+0x5c>
   185e4:	ret

00000000000185e8 <__sanitizer_symbolize_global@@Base>:
   185e8:	cbz	x3, 18690 <__sanitizer_symbolize_global@@Base+0xa8>
   185ec:	stp	x19, x20, [sp, #-144]!
   185f0:	mov	x20, x0
   185f4:	mov	x19, x2
   185f8:	stp	x21, x22, [sp, #16]
   185fc:	mov	x22, x1
   18600:	mov	x21, x3
   18604:	stp	x23, x30, [sp, #32]
   18608:	add	x23, sp, #0x50
   1860c:	mov	x0, x23
   18610:	strb	wzr, [x2]
   18614:	bl	1ab2c <__sanitizer_symbolize_global@@Base+0x2544>
   18618:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
   1861c:	mov	x2, x23
   18620:	mov	x1, x20
   18624:	bl	1b968 <__sanitizer_symbolize_global@@Base+0x3380>
   18628:	tst	w0, #0xff
   1862c:	b.eq	18680 <__sanitizer_symbolize_global@@Base+0x98>  // b.none
   18630:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   18634:	add	x20, sp, #0x30
   18638:	mov	x1, x0
   1863c:	mov	x0, x20
   18640:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
   18644:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18648:	mov	x2, x23
   1864c:	mov	x1, x22
   18650:	ldr	x0, [x0, #4056]
   18654:	ldr	x3, [x0, #24]
   18658:	mov	x0, x20
   1865c:	bl	190a8 <__sanitizer_symbolize_global@@Base+0xac0>
   18660:	ldr	x1, [sp, #48]
   18664:	mov	x0, x19
   18668:	add	x19, x19, x21
   1866c:	mov	x2, x21
   18670:	bl	1241c <__sanitizer_set_report_fd@@Base+0x1b7c>
   18674:	sturb	wzr, [x19, #-1]
   18678:	mov	x0, x20
   1867c:	bl	186b4 <__sanitizer_symbolize_global@@Base+0xcc>
   18680:	ldp	x21, x22, [sp, #16]
   18684:	ldp	x23, x30, [sp, #32]
   18688:	ldp	x19, x20, [sp], #144
   1868c:	ret
   18690:	ret
   18694:	stp	x19, x30, [sp, #-16]!
   18698:	mov	x19, x0
   1869c:	mov	x1, #0x0                   	// #0
   186a0:	bl	7e64 <__asan_backtrace_open@plt+0x1354>
   186a4:	strb	wzr, [x0]
   186a8:	str	xzr, [x19, #24]
   186ac:	ldp	x19, x30, [sp], #16
   186b0:	ret
   186b4:	ldr	x1, [x0, #8]
   186b8:	ldr	x0, [x0]
   186bc:	b	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   186c0:	stp	x19, x20, [sp, #-32]!
   186c4:	mov	x19, x0
   186c8:	ldr	x20, [x0]
   186cc:	str	x30, [sp, #16]
   186d0:	mov	x0, x20
   186d4:	bl	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
   186d8:	mov	x0, x19
   186dc:	bl	104bc <__sanitizer_cov_trace_pc_guard_init@@Base+0x19e8>
   186e0:	ldr	w0, [x19, #8]
   186e4:	bl	15650 <__sanitizer_set_report_fd@@Base+0x4db0>
   186e8:	dmb	ish
   186ec:	strb	wzr, [x20]
   186f0:	ldr	x30, [sp, #16]
   186f4:	ldp	x19, x20, [sp], #32
   186f8:	ret
   186fc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18700:	stp	x19, x30, [sp, #-16]!
   18704:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18708:	ldr	x0, [x0, #4056]
   1870c:	add	x1, x1, #0x780
   18710:	ldr	x19, [x0, #112]
   18714:	mov	x0, x19
   18718:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1871c:	cbz	w0, 18744 <__sanitizer_symbolize_global@@Base+0x15c>
   18720:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   18724:	mov	x0, x19
   18728:	add	x1, x1, #0xe3f
   1872c:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   18730:	cbnz	w0, 18750 <__sanitizer_symbolize_global@@Base+0x168>
   18734:	ldp	x19, x30, [sp], #16
   18738:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1873c:	ldr	x0, [x0, #3976]
   18740:	b	186c0 <__sanitizer_symbolize_global@@Base+0xd8>
   18744:	mov	w0, #0x1                   	// #1
   18748:	ldp	x19, x30, [sp], #16
   1874c:	ret
   18750:	mov	w0, #0x0                   	// #0
   18754:	b	18748 <__sanitizer_symbolize_global@@Base+0x160>
   18758:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1875c:	stp	x19, x30, [sp, #-16]!
   18760:	ldr	x0, [x0, #4024]
   18764:	ldr	x19, [x0]
   18768:	mov	x0, x19
   1876c:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   18770:	mov	x1, x0
   18774:	mov	x0, x19
   18778:	bl	10480 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19ac>
   1877c:	ldp	x19, x30, [sp], #16
   18780:	mov	x1, #0xe                   	// #14
   18784:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18788:	add	x0, x0, #0x977
   1878c:	b	10480 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19ac>
   18790:	stp	x19, x20, [sp, #-32]!
   18794:	adrp	x19, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   18798:	add	x19, x19, #0x238
   1879c:	str	x30, [sp, #16]
   187a0:	bl	15488 <__sanitizer_set_report_fd@@Base+0x4be8>
   187a4:	mov	x20, x0
   187a8:	ldxr	x0, [x19]
   187ac:	cbnz	x0, 187b8 <__sanitizer_symbolize_global@@Base+0x1d0>
   187b0:	stlxr	w1, x20, [x19]
   187b4:	cbnz	w1, 187a8 <__sanitizer_symbolize_global@@Base+0x1c0>
   187b8:	dmb	ish
   187bc:	cbnz	x0, 187d0 <__sanitizer_symbolize_global@@Base+0x1e8>
   187c0:	add	x0, x19, #0x8
   187c4:	ldr	x30, [sp, #16]
   187c8:	ldp	x19, x20, [sp], #32
   187cc:	b	b790 <__ubsan_handle_cfi_bad_type@@Base+0x590>
   187d0:	cmp	x20, x0
   187d4:	b.ne	1881c <__sanitizer_symbolize_global@@Base+0x234>  // b.any
   187d8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   187dc:	ldr	x0, [x0, #4024]
   187e0:	ldr	x19, [x0]
   187e4:	mov	x0, x19
   187e8:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   187ec:	mov	x1, x0
   187f0:	mov	x0, x19
   187f4:	bl	10480 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19ac>
   187f8:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   187fc:	add	x0, x0, #0x977
   18800:	add	x0, x0, #0xf
   18804:	mov	x1, #0x2b                  	// #43
   18808:	bl	10480 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19ac>
   1880c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18810:	ldr	x0, [x0, #4056]
   18814:	ldr	w0, [x0, #216]
   18818:	bl	12e98 <__sanitizer_set_report_fd@@Base+0x25f8>
   1881c:	bl	12e8c <__sanitizer_set_report_fd@@Base+0x25ec>
   18820:	b	187a8 <__sanitizer_symbolize_global@@Base+0x1c0>
   18824:	dmb	ish
   18828:	adrp	x0, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1882c:	add	x1, x0, #0x238
   18830:	strb	wzr, [x1, #8]
   18834:	str	xzr, [x0, #568]
   18838:	ret
   1883c:	adrp	x0, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   18840:	add	x0, x0, #0x238
   18844:	ldrb	w3, [x0, #8]
   18848:	and	x3, x3, #0xff
   1884c:	cmp	x3, #0x1
   18850:	b.eq	18874 <__sanitizer_symbolize_global@@Base+0x28c>  // b.none
   18854:	str	x30, [sp, #-16]!
   18858:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   1885c:	adrp	x0, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   18860:	add	x2, x2, #0xc48
   18864:	add	x0, x0, #0xc80
   18868:	mov	x4, #0x1                   	// #1
   1886c:	mov	w1, #0x2a                  	// #42
   18870:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   18874:	ret
   18878:	stp	x19, x20, [sp, #-80]!
   1887c:	adrp	x20, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18880:	ldr	x20, [x20, #4056]
   18884:	stp	x23, x30, [sp, #32]
   18888:	mov	x23, x0
   1888c:	stp	x21, x22, [sp, #16]
   18890:	ldrb	w0, [x20, #60]
   18894:	cbz	w0, 18900 <__sanitizer_symbolize_global@@Base+0x318>
   18898:	add	x19, sp, #0x30
   1889c:	mov	x21, x2
   188a0:	mov	x22, x1
   188a4:	mov	x0, x19
   188a8:	mov	x1, #0x400                 	// #1024
   188ac:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
   188b0:	mov	x2, x23
   188b4:	mov	x0, x19
   188b8:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   188bc:	add	x1, x1, #0x936
   188c0:	bl	16a9c <OnPrint@@Base+0x390>
   188c4:	ldrb	w4, [x20, #181]
   188c8:	mov	x3, x22
   188cc:	ldr	x5, [x20, #24]
   188d0:	mov	x0, x19
   188d4:	mov	w2, #0x0                   	// #0
   188d8:	adrp	x6, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   188dc:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   188e0:	add	x6, x6, #0x6df
   188e4:	add	x1, x1, #0x787
   188e8:	bl	1939c <__sanitizer_symbolize_global@@Base+0xdb4>
   188ec:	ldr	x0, [sp, #48]
   188f0:	mov	x1, x21
   188f4:	bl	e390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
   188f8:	ldp	x0, x1, [sp, #48]
   188fc:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   18900:	ldp	x21, x22, [sp, #16]
   18904:	ldp	x23, x30, [sp, #32]
   18908:	ldp	x19, x20, [sp], #80
   1890c:	ret
   18910:	stp	x19, x20, [sp, #-32]!
   18914:	stp	x21, x30, [sp, #16]
   18918:	mov	x21, x2
   1891c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18920:	ldr	x2, [x2, #4056]
   18924:	ldrb	w2, [x2, #60]
   18928:	cbz	w2, 18984 <__sanitizer_symbolize_global@@Base+0x39c>
   1892c:	ldr	w2, [x1, #8]
   18930:	cbnz	w2, 18944 <__sanitizer_symbolize_global@@Base+0x35c>
   18934:	ldp	x21, x30, [sp, #16]
   18938:	mov	x1, #0x0                   	// #0
   1893c:	ldp	x19, x20, [sp], #32
   18940:	b	e390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
   18944:	mov	x20, x0
   18948:	ldr	x0, [x1]
   1894c:	ldr	x19, [x0]
   18950:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
   18954:	sub	x19, x19, #0x4
   18958:	mov	x1, x19
   1895c:	bl	1b89c <__sanitizer_symbolize_global@@Base+0x32b4>
   18960:	mov	x2, x21
   18964:	mov	x19, x0
   18968:	add	x1, x0, #0x8
   1896c:	mov	x0, x20
   18970:	bl	18878 <__sanitizer_symbolize_global@@Base+0x290>
   18974:	mov	x0, x19
   18978:	ldp	x21, x30, [sp, #16]
   1897c:	ldp	x19, x20, [sp], #32
   18980:	b	1ab00 <__sanitizer_symbolize_global@@Base+0x2518>
   18984:	ldp	x21, x30, [sp, #16]
   18988:	ldp	x19, x20, [sp], #32
   1898c:	ret
   18990:	and	w0, w0, #0x6
   18994:	cmp	w0, #0x6
   18998:	b.ne	18ac0 <__sanitizer_symbolize_global@@Base+0x4d8>  // b.any
   1899c:	stp	x29, x30, [sp, #-112]!
   189a0:	mov	x29, sp
   189a4:	str	x23, [sp, #48]
   189a8:	add	x23, x29, #0x40
   189ac:	mov	x0, x23
   189b0:	stp	x19, x20, [sp, #16]
   189b4:	mov	x20, x30
   189b8:	stp	x21, x22, [sp, #32]
   189bc:	bl	18790 <__sanitizer_symbolize_global@@Base+0x1a8>
   189c0:	bl	186fc <__sanitizer_symbolize_global@@Base+0x114>
   189c4:	mov	x1, #0x1                   	// #1
   189c8:	and	w22, w0, #0xff
   189cc:	add	x0, x29, #0x58
   189d0:	bl	18fe0 <__sanitizer_symbolize_global@@Base+0x9f8>
   189d4:	ldr	x19, [x29, #88]
   189d8:	add	x0, x19, #0x10
   189dc:	stp	x0, xzr, [x19]
   189e0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   189e4:	ldr	x0, [x0, #4056]
   189e8:	stp	xzr, xzr, [x29, #72]
   189ec:	str	xzr, [x19, #2064]
   189f0:	ldrb	w21, [x0, #33]
   189f4:	cbz	w21, 18a08 <__sanitizer_symbolize_global@@Base+0x420>
   189f8:	add	x2, x29, #0x50
   189fc:	add	x1, x29, #0x48
   18a00:	mov	w0, #0x0                   	// #0
   18a04:	bl	13fb0 <__sanitizer_set_report_fd@@Base+0x3710>
   18a08:	ldp	x5, x6, [x29, #72]
   18a0c:	mov	w7, w21
   18a10:	mov	x3, x29
   18a14:	mov	x4, #0x0                   	// #0
   18a18:	mov	x2, x20
   18a1c:	mov	x0, x19
   18a20:	mov	w1, #0x100                 	// #256
   18a24:	adrp	x21, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18a28:	adrp	x20, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18a2c:	add	x21, x21, #0x6df
   18a30:	bl	181f0 <OnPrint@@Base+0x1ae4>
   18a34:	add	x20, x20, #0x85d
   18a38:	cmp	w22, #0x0
   18a3c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18a40:	add	x1, x1, #0x813
   18a44:	mov	x0, x20
   18a48:	csel	x1, x1, x21, ne  // ne = any
   18a4c:	bl	16994 <OnPrint@@Base+0x288>
   18a50:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18a54:	ldr	x0, [x0, #4024]
   18a58:	ldr	x1, [x0]
   18a5c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18a60:	add	x0, x0, #0x78d
   18a64:	bl	16a18 <OnPrint@@Base+0x30c>
   18a68:	cmp	w22, #0x0
   18a6c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18a70:	add	x1, x1, #0x81d
   18a74:	mov	x0, x20
   18a78:	csel	x1, x1, x21, ne  // ne = any
   18a7c:	bl	16994 <OnPrint@@Base+0x288>
   18a80:	mov	x0, x19
   18a84:	bl	182d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
   18a88:	mov	x2, #0x0                   	// #0
   18a8c:	mov	x1, x19
   18a90:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18a94:	add	x0, x0, #0x7ba
   18a98:	bl	18910 <__sanitizer_symbolize_global@@Base+0x328>
   18a9c:	ldp	x0, x1, [x29, #88]
   18aa0:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   18aa4:	mov	x0, x23
   18aa8:	bl	18824 <__sanitizer_symbolize_global@@Base+0x23c>
   18aac:	ldp	x19, x20, [sp, #16]
   18ab0:	ldp	x21, x22, [sp, #32]
   18ab4:	ldr	x23, [sp, #48]
   18ab8:	ldp	x29, x30, [sp], #112
   18abc:	ret
   18ac0:	ret
   18ac4:	stp	x19, x20, [sp, #-240]!
   18ac8:	mov	x19, x0
   18acc:	mov	w20, w1
   18ad0:	stp	x21, x22, [sp, #16]
   18ad4:	add	x22, sp, #0xa0
   18ad8:	adrp	x21, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18adc:	stp	x23, x24, [sp, #32]
   18ae0:	adrp	x23, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18ae4:	stp	x25, x26, [sp, #48]
   18ae8:	mov	x25, x2
   18aec:	mov	x26, x3
   18af0:	stp	x27, x28, [sp, #64]
   18af4:	str	x30, [sp, #80]
   18af8:	bl	157bc <__sanitizer_set_report_fd@@Base+0x4f1c>
   18afc:	tst	w0, #0xff
   18b00:	b.eq	18bdc <__sanitizer_symbolize_global@@Base+0x5f4>  // b.none
   18b04:	bl	186fc <__sanitizer_symbolize_global@@Base+0x114>
   18b08:	ands	w28, w0, #0xff
   18b0c:	add	x23, x23, #0x85d
   18b10:	adrp	x27, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18b14:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18b18:	add	x27, x27, #0x6df
   18b1c:	add	x1, x1, #0x813
   18b20:	mov	x0, x23
   18b24:	csel	x1, x1, x27, ne  // ne = any
   18b28:	bl	16994 <OnPrint@@Base+0x288>
   18b2c:	ldr	x21, [x21, #4024]
   18b30:	adrp	x24, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18b34:	ldp	x3, x4, [x19, #16]
   18b38:	add	x24, x24, #0x977
   18b3c:	ldp	x6, x5, [x19, #32]
   18b40:	add	x24, x24, #0x3b
   18b44:	ldr	x1, [x21]
   18b48:	mov	w7, w20
   18b4c:	mov	x2, x24
   18b50:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18b54:	add	x0, x0, #0x7e5
   18b58:	bl	16a18 <OnPrint@@Base+0x30c>
   18b5c:	cmp	w28, #0x0
   18b60:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18b64:	add	x1, x1, #0x81d
   18b68:	mov	x0, x23
   18b6c:	csel	x1, x1, x27, ne  // ne = any
   18b70:	bl	16994 <OnPrint@@Base+0x288>
   18b74:	mov	x0, x22
   18b78:	mov	x1, #0x1                   	// #1
   18b7c:	bl	18fe0 <__sanitizer_symbolize_global@@Base+0x9f8>
   18b80:	ldr	x20, [sp, #160]
   18b84:	mov	x1, x26
   18b88:	mov	x2, x20
   18b8c:	add	x0, x20, #0x10
   18b90:	stp	x0, xzr, [x20]
   18b94:	mov	x0, x19
   18b98:	str	xzr, [x20, #2064]
   18b9c:	blr	x25
   18ba0:	mov	x0, x20
   18ba4:	bl	182d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
   18ba8:	mov	x1, x20
   18bac:	mov	x0, x24
   18bb0:	mov	x2, #0x0                   	// #0
   18bb4:	bl	18910 <__sanitizer_symbolize_global@@Base+0x328>
   18bb8:	ldp	x0, x1, [sp, #160]
   18bbc:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   18bc0:	ldp	x21, x22, [sp, #16]
   18bc4:	ldp	x23, x24, [sp, #32]
   18bc8:	ldp	x25, x26, [sp, #48]
   18bcc:	ldp	x27, x28, [sp, #64]
   18bd0:	ldr	x30, [sp, #80]
   18bd4:	ldp	x19, x20, [sp], #240
   18bd8:	ret
   18bdc:	bl	186fc <__sanitizer_symbolize_global@@Base+0x114>
   18be0:	adrp	x28, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18be4:	ands	w8, w0, #0xff
   18be8:	add	x28, x28, #0x6df
   18bec:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18bf0:	add	x1, x1, #0x813
   18bf4:	csel	x1, x1, x28, ne  // ne = any
   18bf8:	add	x27, x23, #0x85d
   18bfc:	mov	x0, x27
   18c00:	str	w8, [sp, #96]
   18c04:	bl	16994 <OnPrint@@Base+0x288>
   18c08:	mov	x0, x19
   18c0c:	bl	15220 <__sanitizer_set_report_fd@@Base+0x4980>
   18c10:	mov	x24, x0
   18c14:	mov	w7, w20
   18c18:	ldr	x0, [x21, #4024]
   18c1c:	mov	x2, x24
   18c20:	ldp	x3, x4, [x19, #16]
   18c24:	ldp	x6, x5, [x19, #32]
   18c28:	ldr	x1, [x0]
   18c2c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18c30:	add	x0, x0, #0x81a
   18c34:	bl	16a18 <OnPrint@@Base+0x30c>
   18c38:	ldr	w8, [sp, #96]
   18c3c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18c40:	add	x1, x1, #0x81d
   18c44:	mov	x0, x27
   18c48:	cmp	w8, #0x0
   18c4c:	csel	x1, x1, x28, ne  // ne = any
   18c50:	bl	16994 <OnPrint@@Base+0x288>
   18c54:	ldr	x20, [x19, #24]
   18c58:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   18c5c:	cmp	x20, x0
   18c60:	b.cs	18c70 <__sanitizer_symbolize_global@@Base+0x688>  // b.hs, b.nlast
   18c64:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18c68:	add	x0, x0, #0x857
   18c6c:	bl	16a18 <OnPrint@@Base+0x30c>
   18c70:	ldrb	w0, [x19, #48]
   18c74:	cbz	w0, 18cc4 <__sanitizer_symbolize_global@@Base+0x6dc>
   18c78:	ldr	w2, [x19, #52]
   18c7c:	cmp	w2, #0x2
   18c80:	b.eq	18d28 <__sanitizer_symbolize_global@@Base+0x740>  // b.none
   18c84:	cmp	w2, #0x1
   18c88:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18c8c:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18c90:	add	x0, x0, #0x7d3
   18c94:	add	x1, x1, #0x7ce
   18c98:	csel	x1, x1, x0, eq  // eq = none
   18c9c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18ca0:	add	x0, x0, #0x87a
   18ca4:	bl	16a18 <OnPrint@@Base+0x30c>
   18ca8:	ldr	x20, [x19, #16]
   18cac:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   18cb0:	cmp	x20, x0
   18cb4:	b.cs	18cc4 <__sanitizer_symbolize_global@@Base+0x6dc>  // b.hs, b.nlast
   18cb8:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18cbc:	add	x0, x0, #0x8a7
   18cc0:	bl	16a18 <OnPrint@@Base+0x30c>
   18cc4:	add	x20, sp, #0x80
   18cc8:	adrp	x27, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18ccc:	add	x27, x27, #0x8cf
   18cd0:	mov	x0, x20
   18cd4:	mov	w1, #0x1                   	// #1
   18cd8:	ldr	x28, [x19, #24]
   18cdc:	bl	16da0 <OnPrint@@Base+0x694>
   18ce0:	stp	xzr, xzr, [sp, #184]
   18ce4:	str	xzr, [sp, #232]
   18ce8:	mov	x1, x22
   18cec:	mov	x0, x20
   18cf0:	bl	171d0 <OnPrint@@Base+0xac4>
   18cf4:	tst	w0, #0xff
   18cf8:	b.eq	18d34 <__sanitizer_symbolize_global@@Base+0x74c>  // b.none
   18cfc:	ldr	x0, [sp, #160]
   18d00:	cmp	x28, x0
   18d04:	b.cc	18ce8 <__sanitizer_symbolize_global@@Base+0x700>  // b.lo, b.ul, b.last
   18d08:	ldr	x0, [sp, #168]
   18d0c:	cmp	x28, x0
   18d10:	b.cs	18ce8 <__sanitizer_symbolize_global@@Base+0x700>  // b.hs, b.nlast
   18d14:	ldr	x0, [sp, #200]
   18d18:	tbnz	w0, #2, 18ce8 <__sanitizer_symbolize_global@@Base+0x700>
   18d1c:	mov	x0, x27
   18d20:	bl	16a18 <OnPrint@@Base+0x30c>
   18d24:	b	18ce8 <__sanitizer_symbolize_global@@Base+0x700>
   18d28:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18d2c:	add	x1, x1, #0x7c8
   18d30:	b	18c9c <__sanitizer_symbolize_global@@Base+0x6b4>
   18d34:	mov	x0, x20
   18d38:	bl	16cc4 <OnPrint@@Base+0x5b8>
   18d3c:	mov	x0, x20
   18d40:	mov	x1, #0x1                   	// #1
   18d44:	bl	18fe0 <__sanitizer_symbolize_global@@Base+0x9f8>
   18d48:	ldr	x20, [sp, #128]
   18d4c:	mov	x1, x26
   18d50:	add	x0, x20, #0x10
   18d54:	mov	x2, x20
   18d58:	stp	x0, xzr, [x20]
   18d5c:	mov	x0, x19
   18d60:	str	xzr, [x20, #2064]
   18d64:	blr	x25
   18d68:	mov	x0, x20
   18d6c:	bl	182d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
   18d70:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   18d74:	str	x0, [sp, #96]
   18d78:	ldr	x1, [x0, #4056]
   18d7c:	ldrb	w1, [x1, #232]
   18d80:	cbz	w1, 18e5c <__sanitizer_symbolize_global@@Base+0x874>
   18d84:	ldr	x28, [x19, #24]
   18d88:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   18d8c:	cmp	x28, x0
   18d90:	b.cc	18e5c <__sanitizer_symbolize_global@@Base+0x874>  // b.lo, b.ul, b.last
   18d94:	mov	x0, x22
   18d98:	mov	x1, #0x400                 	// #1024
   18d9c:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
   18da0:	mov	x0, x22
   18da4:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18da8:	add	x1, x1, #0x90b
   18dac:	bl	16a9c <OnPrint@@Base+0x390>
   18db0:	mov	x0, x28
   18db4:	mov	x1, #0x10                  	// #16
   18db8:	bl	15840 <__sanitizer_set_report_fd@@Base+0x4fa0>
   18dbc:	tst	w0, #0xff
   18dc0:	b.eq	18ea0 <__sanitizer_symbolize_global@@Base+0x8b8>  // b.none
   18dc4:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18dc8:	adrp	x27, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18dcc:	adrp	x26, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18dd0:	adrp	x25, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18dd4:	add	x2, x2, #0x6df
   18dd8:	add	x27, x27, #0x7db
   18ddc:	add	x26, x26, #0x81d
   18de0:	add	x25, x25, #0x92e
   18de4:	mov	x7, #0x0                   	// #0
   18de8:	ldrb	w4, [x28, x7]
   18dec:	str	w4, [sp, #104]
   18df0:	stp	x7, x2, [sp, #112]
   18df4:	bl	186fc <__sanitizer_symbolize_global@@Base+0x114>
   18df8:	ands	w0, w0, #0xff
   18dfc:	ldr	x2, [sp, #120]
   18e00:	mov	x1, x25
   18e04:	ldr	w4, [sp, #104]
   18e08:	csel	x3, x27, x2, ne  // ne = any
   18e0c:	cmp	w0, #0x0
   18e10:	csel	x6, x26, x2, ne  // ne = any
   18e14:	and	w5, w4, #0xf
   18e18:	mov	x0, x22
   18e1c:	lsr	w4, w4, #4
   18e20:	str	x2, [sp, #104]
   18e24:	bl	16a9c <OnPrint@@Base+0x390>
   18e28:	ldp	x2, x7, [sp, #104]
   18e2c:	add	x7, x7, #0x1
   18e30:	cmp	x7, #0x10
   18e34:	b.ne	18de8 <__sanitizer_symbolize_global@@Base+0x800>  // b.any
   18e38:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18e3c:	add	x1, x1, #0x6de
   18e40:	mov	x0, x22
   18e44:	bl	16a9c <OnPrint@@Base+0x390>
   18e48:	ldr	x1, [sp, #160]
   18e4c:	add	x0, x23, #0x85d
   18e50:	bl	16a18 <OnPrint@@Base+0x30c>
   18e54:	ldp	x0, x1, [sp, #160]
   18e58:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   18e5c:	ldr	x0, [sp, #96]
   18e60:	ldr	x0, [x0, #4056]
   18e64:	ldrb	w0, [x0, #233]
   18e68:	cbz	w0, 18e74 <__sanitizer_symbolize_global@@Base+0x88c>
   18e6c:	ldr	x0, [x19, #8]
   18e70:	bl	139b4 <__sanitizer_set_report_fd@@Base+0x3114>
   18e74:	ldr	x21, [x21, #4024]
   18e78:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18e7c:	add	x0, x0, #0x948
   18e80:	ldr	x1, [x21]
   18e84:	bl	16994 <OnPrint@@Base+0x288>
   18e88:	mov	x1, x20
   18e8c:	mov	x0, x24
   18e90:	mov	x2, #0x0                   	// #0
   18e94:	bl	18910 <__sanitizer_symbolize_global@@Base+0x328>
   18e98:	ldp	x0, x1, [sp, #128]
   18e9c:	b	18bbc <__sanitizer_symbolize_global@@Base+0x5d4>
   18ea0:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18ea4:	add	x1, x1, #0x93a
   18ea8:	b	18e40 <__sanitizer_symbolize_global@@Base+0x858>
   18eac:	stp	x19, x20, [sp, #-112]!
   18eb0:	mov	x19, x1
   18eb4:	mov	w20, w2
   18eb8:	stp	x21, x22, [sp, #16]
   18ebc:	mov	x22, x4
   18ec0:	mov	x21, x3
   18ec4:	stp	x23, x30, [sp, #32]
   18ec8:	mov	x23, x0
   18ecc:	bl	18758 <__sanitizer_symbolize_global@@Base+0x170>
   18ed0:	add	x0, sp, #0x30
   18ed4:	bl	18790 <__sanitizer_symbolize_global@@Base+0x1a8>
   18ed8:	stp	x23, x19, [sp, #56]
   18edc:	add	x19, sp, #0x38
   18ee0:	mov	x0, x19
   18ee4:	bl	151f4 <__sanitizer_set_report_fd@@Base+0x4954>
   18ee8:	str	x0, [sp, #72]
   18eec:	mov	x0, x19
   18ef0:	bl	15200 <__sanitizer_set_report_fd@@Base+0x4960>
   18ef4:	strb	w0, [sp, #104]
   18ef8:	mov	x0, x19
   18efc:	bl	13978 <__sanitizer_set_report_fd@@Base+0x30d8>
   18f00:	str	w0, [sp, #108]
   18f04:	mov	x0, x19
   18f08:	bl	139b8 <__sanitizer_set_report_fd@@Base+0x3118>
   18f0c:	mov	x3, x22
   18f10:	mov	x2, x21
   18f14:	mov	w1, w20
   18f18:	mov	x0, x19
   18f1c:	bl	18ac4 <__sanitizer_symbolize_global@@Base+0x4dc>
   18f20:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   18f24:	add	x0, x0, #0x96d
   18f28:	bl	16a18 <OnPrint@@Base+0x30c>
   18f2c:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   18f30:	stp	x19, x20, [sp, #-48]!
   18f34:	stp	x21, x22, [sp, #16]
   18f38:	str	x30, [sp, #32]
   18f3c:	cbnz	x1, 18f60 <__sanitizer_symbolize_global@@Base+0x978>
   18f40:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18f44:	add	x2, x2, #0x9c7
   18f48:	mov	x4, #0x0                   	// #0
   18f4c:	mov	x3, #0x0                   	// #0
   18f50:	mov	w1, #0x1fc                 	// #508
   18f54:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18f58:	add	x0, x0, #0x98a
   18f5c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   18f60:	ldr	x3, [x0, #16]
   18f64:	mov	x19, x0
   18f68:	mov	x20, x1
   18f6c:	cmp	x1, x3
   18f70:	b.cs	18f88 <__sanitizer_symbolize_global@@Base+0x9a0>  // b.hs, b.nlast
   18f74:	mov	x4, x1
   18f78:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18f7c:	mov	w1, #0x1fd                 	// #509
   18f80:	add	x2, x2, #0x9e0
   18f84:	b	18f54 <__sanitizer_symbolize_global@@Base+0x96c>
   18f88:	mov	x22, #0x818                 	// #2072
   18f8c:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   18f90:	mov	x1, x0
   18f94:	mul	x0, x20, x22
   18f98:	bl	c730 <__sancov_default_options@@Base+0x790>
   18f9c:	mov	x20, x0
   18fa0:	mov	w2, #0x0                   	// #0
   18fa4:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   18fa8:	add	x1, x1, #0xa15
   18fac:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   18fb0:	ldr	x2, [x19, #16]
   18fb4:	mov	x21, x0
   18fb8:	ldr	x1, [x19]
   18fbc:	mul	x2, x2, x22
   18fc0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   18fc4:	ldp	x0, x1, [x19]
   18fc8:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   18fcc:	ldr	x30, [sp, #32]
   18fd0:	stp	x21, x20, [x19]
   18fd4:	ldp	x21, x22, [sp, #16]
   18fd8:	ldp	x19, x20, [sp], #48
   18fdc:	ret
   18fe0:	stp	x19, x20, [sp, #-32]!
   18fe4:	mov	x19, x0
   18fe8:	mov	x20, x1
   18fec:	str	x30, [sp, #16]
   18ff0:	stp	xzr, xzr, [x0]
   18ff4:	str	xzr, [x0, #16]
   18ff8:	cbz	x1, 1904c <__sanitizer_symbolize_global@@Base+0xa64>
   18ffc:	bl	18f30 <__sanitizer_symbolize_global@@Base+0x948>
   19000:	ldr	x0, [x19, #16]
   19004:	cmp	x20, x0
   19008:	b.ls	1904c <__sanitizer_symbolize_global@@Base+0xa64>  // b.plast
   1900c:	ldr	x0, [x19, #8]
   19010:	mov	x1, #0x818                 	// #2072
   19014:	udiv	x0, x0, x1
   19018:	cmp	x20, x0
   1901c:	b.ls	1902c <__sanitizer_symbolize_global@@Base+0xa44>  // b.plast
   19020:	mov	x1, x20
   19024:	mov	x0, x19
   19028:	bl	18f30 <__sanitizer_symbolize_global@@Base+0x948>
   1902c:	ldr	x0, [x19, #16]
   19030:	mov	x3, #0x818                 	// #2072
   19034:	ldr	x4, [x19]
   19038:	sub	x2, x20, x0
   1903c:	mov	w1, #0x0                   	// #0
   19040:	mul	x2, x2, x3
   19044:	madd	x0, x0, x3, x4
   19048:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1904c:	ldr	x30, [sp, #16]
   19050:	str	x20, [x19, #16]
   19054:	ldp	x19, x20, [sp], #32
   19058:	ret
   1905c:	stp	x19, x20, [sp, #-32]!
   19060:	mov	x19, x0
   19064:	stp	x21, x30, [sp, #16]
   19068:	cbz	x0, 19098 <__sanitizer_symbolize_global@@Base+0xab0>
   1906c:	mov	x20, x1
   19070:	cbz	x1, 19098 <__sanitizer_symbolize_global@@Base+0xab0>
   19074:	mov	x0, x1
   19078:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1907c:	mov	x1, x20
   19080:	mov	x21, x0
   19084:	mov	x2, x0
   19088:	mov	x0, x19
   1908c:	bl	12220 <__sanitizer_set_report_fd@@Base+0x1980>
   19090:	cbnz	w0, 19098 <__sanitizer_symbolize_global@@Base+0xab0>
   19094:	add	x19, x19, x21
   19098:	mov	x0, x19
   1909c:	ldp	x21, x30, [sp, #16]
   190a0:	ldp	x19, x20, [sp], #32
   190a4:	ret
   190a8:	stp	x19, x20, [sp, #-80]!
   190ac:	mov	x20, x0
   190b0:	mov	x19, x1
   190b4:	stp	x21, x22, [sp, #16]
   190b8:	adrp	x22, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   190bc:	mov	x21, x2
   190c0:	add	x22, x22, #0x85d
   190c4:	stp	x23, x24, [sp, #32]
   190c8:	adrp	x24, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   190cc:	mov	x23, x3
   190d0:	add	x24, x24, #0xd30
   190d4:	stp	x25, x26, [sp, #48]
   190d8:	adrp	x26, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   190dc:	str	x30, [sp, #64]
   190e0:	ldrb	w2, [x19]
   190e4:	cbz	w2, 19190 <__sanitizer_symbolize_global@@Base+0xba8>
   190e8:	add	x25, x19, #0x1
   190ec:	cmp	w2, #0x25
   190f0:	b.eq	19110 <__sanitizer_symbolize_global@@Base+0xb28>  // b.none
   190f4:	mov	x25, x19
   190f8:	mov	x0, x20
   190fc:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   19100:	add	x1, x1, #0x755
   19104:	bl	16a9c <OnPrint@@Base+0x390>
   19108:	add	x19, x25, #0x1
   1910c:	b	190e0 <__sanitizer_symbolize_global@@Base+0xaf8>
   19110:	ldrb	w2, [x19, #1]
   19114:	cmp	w2, #0x6c
   19118:	b.eq	19174 <__sanitizer_symbolize_global@@Base+0xb8c>  // b.none
   1911c:	b.hi	19144 <__sanitizer_symbolize_global@@Base+0xb5c>  // b.pmore
   19120:	cmp	w2, #0x25
   19124:	b.eq	19164 <__sanitizer_symbolize_global@@Base+0xb7c>  // b.none
   19128:	cmp	w2, #0x67
   1912c:	b.eq	19188 <__sanitizer_symbolize_global@@Base+0xba0>  // b.none
   19130:	mov	w1, w2
   19134:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19138:	add	x0, x0, #0x9c4
   1913c:	bl	16a18 <OnPrint@@Base+0x30c>
   19140:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   19144:	cmp	w2, #0x73
   19148:	b.ne	19130 <__sanitizer_symbolize_global@@Base+0xb48>  // b.any
   1914c:	ldr	x0, [x21, #24]
   19150:	mov	x1, x23
   19154:	bl	dc3c <__sancov_default_options@@Base+0x1c9c>
   19158:	mov	x2, x0
   1915c:	mov	x1, x22
   19160:	b	1917c <__sanitizer_symbolize_global@@Base+0xb94>
   19164:	add	x1, x26, #0x9c1
   19168:	mov	x0, x20
   1916c:	bl	16a9c <OnPrint@@Base+0x390>
   19170:	b	19108 <__sanitizer_symbolize_global@@Base+0xb20>
   19174:	ldr	x2, [x21, #32]
   19178:	mov	x1, x24
   1917c:	mov	x0, x20
   19180:	bl	16a9c <OnPrint@@Base+0x390>
   19184:	b	19108 <__sanitizer_symbolize_global@@Base+0xb20>
   19188:	ldr	x2, [x21, #40]
   1918c:	b	1915c <__sanitizer_symbolize_global@@Base+0xb74>
   19190:	ldp	x21, x22, [sp, #16]
   19194:	ldp	x23, x24, [sp, #32]
   19198:	ldp	x25, x26, [sp, #48]
   1919c:	ldr	x30, [sp, #64]
   191a0:	ldp	x19, x20, [sp], #80
   191a4:	ret
   191a8:	stp	x19, x20, [sp, #-48]!
   191ac:	and	w4, w4, #0xff
   191b0:	cmp	w2, #0x0
   191b4:	stp	x21, x22, [sp, #16]
   191b8:	mov	x19, x0
   191bc:	mov	w21, w2
   191c0:	str	x30, [sp, #32]
   191c4:	mov	x0, x1
   191c8:	mov	w20, w3
   191cc:	mov	x1, x5
   191d0:	ccmp	w4, #0x0, #0x4, gt
   191d4:	b.eq	1922c <__sanitizer_symbolize_global@@Base+0xc44>  // b.none
   191d8:	bl	dc3c <__sancov_default_options@@Base+0x1c9c>
   191dc:	mov	x2, x0
   191e0:	mov	w3, w21
   191e4:	mov	x0, x19
   191e8:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   191ec:	add	x1, x1, #0x9fe
   191f0:	bl	16a9c <OnPrint@@Base+0x390>
   191f4:	cmp	w20, #0x0
   191f8:	b.le	19210 <__sanitizer_symbolize_global@@Base+0xc28>
   191fc:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19200:	mov	w2, w20
   19204:	add	x1, x1, #0xa04
   19208:	mov	x0, x19
   1920c:	bl	16a9c <OnPrint@@Base+0x390>
   19210:	mov	x0, x19
   19214:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   19218:	ldp	x21, x22, [sp, #16]
   1921c:	add	x1, x1, #0x3fa
   19220:	ldr	x30, [sp, #32]
   19224:	ldp	x19, x20, [sp], #48
   19228:	b	16a9c <OnPrint@@Base+0x390>
   1922c:	bl	dc3c <__sancov_default_options@@Base+0x1c9c>
   19230:	mov	x2, x0
   19234:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   19238:	mov	x0, x19
   1923c:	add	x1, x1, #0x85d
   19240:	bl	16a9c <OnPrint@@Base+0x390>
   19244:	cmp	w21, #0x0
   19248:	b.le	19288 <__sanitizer_symbolize_global@@Base+0xca0>
   1924c:	adrp	x22, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19250:	add	x22, x22, #0xa08
   19254:	mov	w2, w21
   19258:	mov	x1, x22
   1925c:	mov	x0, x19
   19260:	bl	16a9c <OnPrint@@Base+0x390>
   19264:	cmp	w20, #0x0
   19268:	b.le	19288 <__sanitizer_symbolize_global@@Base+0xca0>
   1926c:	mov	w2, w20
   19270:	mov	x1, x22
   19274:	mov	x0, x19
   19278:	ldp	x21, x22, [sp, #16]
   1927c:	ldr	x30, [sp, #32]
   19280:	ldp	x19, x20, [sp], #48
   19284:	b	16a9c <OnPrint@@Base+0x390>
   19288:	ldp	x21, x22, [sp, #16]
   1928c:	ldr	x30, [sp, #32]
   19290:	ldp	x19, x20, [sp], #48
   19294:	ret
   19298:	stp	x19, x20, [sp, #-32]!
   1929c:	mov	x19, x2
   192a0:	mov	w20, w3
   192a4:	stp	x21, x30, [sp, #16]
   192a8:	mov	x21, x0
   192ac:	mov	x0, x1
   192b0:	mov	x1, x4
   192b4:	bl	dc3c <__sancov_default_options@@Base+0x1c9c>
   192b8:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   192bc:	mov	x2, x0
   192c0:	add	x1, x1, #0xa3a
   192c4:	mov	x0, x21
   192c8:	bl	16a9c <OnPrint@@Base+0x390>
   192cc:	cbz	w20, 1930c <__sanitizer_symbolize_global@@Base+0xd24>
   192d0:	sub	w20, w20, #0x1
   192d4:	cmp	w20, #0x7
   192d8:	b.hi	19364 <__sanitizer_symbolize_global@@Base+0xd7c>  // b.pmore
   192dc:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   192e0:	add	x0, x0, #0xa98
   192e4:	ldrb	w0, [x0, w20, uxtw]
   192e8:	adr	x1, 192f4 <__sanitizer_symbolize_global@@Base+0xd0c>
   192ec:	add	x0, x1, w0, sxtb #2
   192f0:	br	x0
   192f4:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   192f8:	add	x2, x1, #0xa33
   192fc:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19300:	mov	x0, x21
   19304:	add	x1, x1, #0xa64
   19308:	bl	16a9c <OnPrint@@Base+0x390>
   1930c:	mov	x2, x19
   19310:	mov	x0, x21
   19314:	ldp	x21, x30, [sp, #16]
   19318:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1931c:	ldp	x19, x20, [sp], #32
   19320:	add	x1, x1, #0xa68
   19324:	b	16a9c <OnPrint@@Base+0x390>
   19328:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1932c:	add	x2, x1, #0xa20
   19330:	b	192fc <__sanitizer_symbolize_global@@Base+0xd14>
   19334:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19338:	add	x2, x1, #0xa26
   1933c:	b	192fc <__sanitizer_symbolize_global@@Base+0xd14>
   19340:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19344:	add	x2, x1, #0xa2c
   19348:	b	192fc <__sanitizer_symbolize_global@@Base+0xd14>
   1934c:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19350:	add	x2, x1, #0xa0c
   19354:	b	192fc <__sanitizer_symbolize_global@@Base+0xd14>
   19358:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1935c:	add	x2, x1, #0x1a
   19360:	b	192fc <__sanitizer_symbolize_global@@Base+0xd14>
   19364:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19368:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1936c:	add	x2, x2, #0xa3e
   19370:	add	x0, x0, #0x98a
   19374:	mov	x4, #0x0                   	// #0
   19378:	mov	x3, #0x0                   	// #0
   1937c:	mov	w1, #0x2a9                 	// #681
   19380:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   19384:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19388:	add	x2, x1, #0xa13
   1938c:	b	192fc <__sanitizer_symbolize_global@@Base+0xd14>
   19390:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19394:	add	x2, x1, #0xa18
   19398:	b	192fc <__sanitizer_symbolize_global@@Base+0xd14>
   1939c:	stp	x19, x20, [sp, #-112]!
   193a0:	mov	x20, x0
   193a4:	mov	x19, x3
   193a8:	stp	x23, x24, [sp, #32]
   193ac:	mov	x24, x1
   193b0:	mov	x0, x24
   193b4:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   193b8:	add	x1, x1, #0xe44
   193bc:	stp	x21, x22, [sp, #16]
   193c0:	mov	x21, x5
   193c4:	mov	x22, x6
   193c8:	stp	x25, x26, [sp, #48]
   193cc:	stp	x27, x28, [sp, #64]
   193d0:	and	w28, w4, #0xff
   193d4:	str	x30, [sp, #80]
   193d8:	str	w2, [sp, #108]
   193dc:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   193e0:	cbnz	w0, 193ec <__sanitizer_symbolize_global@@Base+0xe04>
   193e4:	adrp	x7, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   193e8:	add	x24, x7, #0xab1
   193ec:	adrp	x25, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   193f0:	adrp	x23, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   193f4:	add	x25, x25, #0xaa0
   193f8:	add	x23, x23, #0xd30
   193fc:	adrp	x26, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   19400:	ldrb	w2, [x24]
   19404:	cbz	w2, 19624 <__sanitizer_symbolize_global@@Base+0x103c>
   19408:	add	x27, x24, #0x1
   1940c:	cmp	w2, #0x25
   19410:	b.eq	19430 <__sanitizer_symbolize_global@@Base+0xe48>  // b.none
   19414:	mov	x27, x24
   19418:	mov	x0, x20
   1941c:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   19420:	add	x1, x1, #0x755
   19424:	bl	16a9c <OnPrint@@Base+0x390>
   19428:	add	x24, x27, #0x1
   1942c:	b	19400 <__sanitizer_symbolize_global@@Base+0xe18>
   19430:	ldrb	w2, [x24, #1]
   19434:	cmp	w2, #0x73
   19438:	b.hi	19460 <__sanitizer_symbolize_global@@Base+0xe78>  // b.pmore
   1943c:	cmp	w2, #0x62
   19440:	b.hi	19474 <__sanitizer_symbolize_global@@Base+0xe8c>  // b.pmore
   19444:	cmp	w2, #0x4c
   19448:	b.eq	195a8 <__sanitizer_symbolize_global@@Base+0xfc0>  // b.none
   1944c:	b.hi	19490 <__sanitizer_symbolize_global@@Base+0xea8>  // b.pmore
   19450:	cmp	w2, #0x25
   19454:	b.eq	194bc <__sanitizer_symbolize_global@@Base+0xed4>  // b.none
   19458:	cmp	w2, #0x46
   1945c:	b.eq	19564 <__sanitizer_symbolize_global@@Base+0xf7c>  // b.none
   19460:	mov	w1, w2
   19464:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19468:	add	x0, x0, #0x9c4
   1946c:	bl	16a18 <OnPrint@@Base+0x30c>
   19470:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   19474:	sub	w0, w2, #0x63
   19478:	cmp	w0, #0x10
   1947c:	b.hi	19460 <__sanitizer_symbolize_global@@Base+0xe78>  // b.pmore
   19480:	ldrb	w0, [x25, w0, uxtw]
   19484:	adr	x1, 19490 <__sanitizer_symbolize_global@@Base+0xea8>
   19488:	add	x0, x1, w0, sxtb #2
   1948c:	br	x0
   19490:	cmp	w2, #0x4d
   19494:	b.eq	195ec <__sanitizer_symbolize_global@@Base+0x1004>  // b.none
   19498:	cmp	w2, #0x53
   1949c:	b.ne	19460 <__sanitizer_symbolize_global@@Base+0xe78>  // b.any
   194a0:	ldp	w2, w3, [x19, #56]
   194a4:	mov	x5, x21
   194a8:	ldr	x1, [x19, #48]
   194ac:	mov	w4, w28
   194b0:	mov	x0, x20
   194b4:	bl	191a8 <__sanitizer_symbolize_global@@Base+0xbc0>
   194b8:	b	19428 <__sanitizer_symbolize_global@@Base+0xe40>
   194bc:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   194c0:	add	x1, x1, #0x9c1
   194c4:	mov	x0, x20
   194c8:	bl	16a9c <OnPrint@@Base+0x390>
   194cc:	b	19428 <__sanitizer_symbolize_global@@Base+0xe40>
   194d0:	ldr	w2, [sp, #108]
   194d4:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   194d8:	add	x1, x1, #0xcc2
   194dc:	mov	x0, x20
   194e0:	bl	16a9c <OnPrint@@Base+0x390>
   194e4:	b	19428 <__sanitizer_symbolize_global@@Base+0xe40>
   194e8:	ldr	x2, [x19]
   194ec:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   194f0:	add	x1, x1, #0xb63
   194f4:	mov	x0, x20
   194f8:	bl	16a9c <OnPrint@@Base+0x390>
   194fc:	b	19428 <__sanitizer_symbolize_global@@Base+0xe40>
   19500:	ldr	x0, [x19, #8]
   19504:	mov	x1, x21
   19508:	bl	dc3c <__sancov_default_options@@Base+0x1c9c>
   1950c:	b	19524 <__sanitizer_symbolize_global@@Base+0xf3c>
   19510:	ldr	x2, [x19, #16]
   19514:	b	194ec <__sanitizer_symbolize_global@@Base+0xf04>
   19518:	ldr	x0, [x19, #32]
   1951c:	mov	x1, x22
   19520:	bl	1905c <__sanitizer_symbolize_global@@Base+0xa74>
   19524:	mov	x2, x0
   19528:	add	x1, x26, #0x85d
   1952c:	b	194f4 <__sanitizer_symbolize_global@@Base+0xf0c>
   19530:	ldr	x2, [x19, #40]
   19534:	cmn	x2, #0x1
   19538:	b.ne	194ec <__sanitizer_symbolize_global@@Base+0xf04>  // b.any
   1953c:	mov	x2, #0x0                   	// #0
   19540:	b	194ec <__sanitizer_symbolize_global@@Base+0xf04>
   19544:	mov	x1, x21
   19548:	ldr	x0, [x19, #48]
   1954c:	b	19508 <__sanitizer_symbolize_global@@Base+0xf20>
   19550:	ldr	w2, [x19, #56]
   19554:	mov	x1, x23
   19558:	b	194dc <__sanitizer_symbolize_global@@Base+0xef4>
   1955c:	ldr	w2, [x19, #60]
   19560:	b	19554 <__sanitizer_symbolize_global@@Base+0xf6c>
   19564:	ldr	x0, [x19, #32]
   19568:	cbz	x0, 19428 <__sanitizer_symbolize_global@@Base+0xe40>
   1956c:	mov	x1, x22
   19570:	bl	1905c <__sanitizer_symbolize_global@@Base+0xa74>
   19574:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19578:	mov	x2, x0
   1957c:	add	x1, x1, #0xa70
   19580:	mov	x0, x20
   19584:	bl	16a9c <OnPrint@@Base+0x390>
   19588:	ldr	x0, [x19, #48]
   1958c:	cbnz	x0, 19428 <__sanitizer_symbolize_global@@Base+0xe40>
   19590:	ldr	x2, [x19, #40]
   19594:	cmn	x2, #0x1
   19598:	b.eq	19428 <__sanitizer_symbolize_global@@Base+0xe40>  // b.none
   1959c:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   195a0:	add	x1, x1, #0xa76
   195a4:	b	194f4 <__sanitizer_symbolize_global@@Base+0xf0c>
   195a8:	ldr	x1, [x19, #48]
   195ac:	cbz	x1, 195c0 <__sanitizer_symbolize_global@@Base+0xfd8>
   195b0:	ldp	w2, w3, [x19, #56]
   195b4:	mov	x5, x21
   195b8:	mov	w4, w28
   195bc:	b	194b0 <__sanitizer_symbolize_global@@Base+0xec8>
   195c0:	ldr	x1, [x19, #8]
   195c4:	cbz	x1, 195e0 <__sanitizer_symbolize_global@@Base+0xff8>
   195c8:	ldr	w3, [x19, #24]
   195cc:	mov	x4, x21
   195d0:	ldr	x2, [x19, #16]
   195d4:	mov	x0, x20
   195d8:	bl	19298 <__sanitizer_symbolize_global@@Base+0xcb0>
   195dc:	b	19428 <__sanitizer_symbolize_global@@Base+0xe40>
   195e0:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   195e4:	add	x1, x1, #0xa7d
   195e8:	b	194c4 <__sanitizer_symbolize_global@@Base+0xedc>
   195ec:	ldr	x2, [x19]
   195f0:	tbnz	x2, #60, 19428 <__sanitizer_symbolize_global@@Base+0xe40>
   195f4:	ldr	x0, [x19, #8]
   195f8:	cbz	x0, 19618 <__sanitizer_symbolize_global@@Base+0x1030>
   195fc:	bl	dc98 <__sancov_default_options@@Base+0x1cf8>
   19600:	mov	x1, x0
   19604:	adrp	x4, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19608:	ldr	w3, [x19, #24]
   1960c:	add	x4, x4, #0x6df
   19610:	ldr	x2, [x19, #16]
   19614:	b	195d4 <__sanitizer_symbolize_global@@Base+0xfec>
   19618:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1961c:	add	x1, x1, #0xa90
   19620:	b	194f4 <__sanitizer_symbolize_global@@Base+0xf0c>
   19624:	ldp	x21, x22, [sp, #16]
   19628:	ldp	x23, x24, [sp, #32]
   1962c:	ldp	x25, x26, [sp, #48]
   19630:	ldp	x27, x28, [sp, #64]
   19634:	ldr	x30, [sp, #80]
   19638:	ldp	x19, x20, [sp], #112
   1963c:	ret
   19640:	ldr	x0, [x0, #24]
   19644:	ret
   19648:	mov	x0, #0x22                  	// #34
   1964c:	ret
   19650:	stp	x19, x20, [sp, #-352]!
   19654:	mov	x20, x2
   19658:	ldr	x2, [x0]
   1965c:	stp	x21, x22, [sp, #16]
   19660:	mov	x21, x3
   19664:	stp	x23, x30, [sp, #32]
   19668:	add	x22, sp, #0x50
   1966c:	mov	x23, #0x110                 	// #272
   19670:	ldr	x2, [x2, #24]
   19674:	blr	x2
   19678:	mov	w1, w0
   1967c:	add	x3, sp, #0x40
   19680:	mov	x2, #0x1                   	// #1
   19684:	mov	x19, x0
   19688:	mov	w0, #0x4204                	// #16900
   1968c:	stp	x22, x23, [sp, #64]
   19690:	bl	13294 <__sanitizer_set_report_fd@@Base+0x29f4>
   19694:	add	x1, sp, #0x3c
   19698:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   1969c:	tst	w0, #0xff
   196a0:	b.eq	196e4 <__sanitizer_symbolize_global@@Base+0x10fc>  // b.none
   196a4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   196a8:	ldr	x0, [x0, #3896]
   196ac:	ldr	w0, [x0]
   196b0:	cbz	w0, 196c8 <__sanitizer_symbolize_global@@Base+0x10e0>
   196b4:	ldr	w2, [sp, #60]
   196b8:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   196bc:	mov	w1, w19
   196c0:	add	x0, x0, #0xac2
   196c4:	bl	16a18 <OnPrint@@Base+0x30c>
   196c8:	ldr	w0, [sp, #60]
   196cc:	cmp	w0, #0x3
   196d0:	csetm	w0, eq  // eq = none
   196d4:	ldp	x21, x22, [sp, #16]
   196d8:	ldp	x23, x30, [sp, #32]
   196dc:	ldp	x19, x20, [sp], #352
   196e0:	ret
   196e4:	ldr	x0, [sp, #328]
   196e8:	str	x0, [x21]
   196ec:	mov	x2, x23
   196f0:	mov	x1, x22
   196f4:	mov	x0, x20
   196f8:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   196fc:	mov	w0, #0x1                   	// #1
   19700:	b	196d4 <__sanitizer_symbolize_global@@Base+0x10ec>
   19704:	stp	x19, x20, [sp, #-208]!
   19708:	mov	x4, #0x0                   	// #0
   1970c:	mov	x20, x0
   19710:	mov	x19, x1
   19714:	mov	x3, #0x0                   	// #0
   19718:	mov	x2, #0x0                   	// #0
   1971c:	mov	x1, #0x0                   	// #0
   19720:	mov	w0, #0x3                   	// #3
   19724:	stp	x21, x22, [sp, #16]
   19728:	stp	x23, x24, [sp, #32]
   1972c:	stp	x25, x26, [sp, #48]
   19730:	str	x30, [sp, #64]
   19734:	bl	13300 <__sanitizer_set_report_fd@@Base+0x2a60>
   19738:	mov	x22, x0
   1973c:	cbnz	w0, 19758 <__sanitizer_symbolize_global@@Base+0x1170>
   19740:	mov	x4, #0x0                   	// #0
   19744:	mov	x3, #0x0                   	// #0
   19748:	mov	x2, #0x0                   	// #0
   1974c:	mov	x1, #0x1                   	// #1
   19750:	mov	w0, #0x4                   	// #4
   19754:	bl	13300 <__sanitizer_set_report_fd@@Base+0x2a60>
   19758:	add	x24, sp, #0x58
   1975c:	add	x21, x24, #0x10
   19760:	mov	x0, x21
   19764:	bl	1316c <__sanitizer_set_report_fd@@Base+0x28cc>
   19768:	stp	x20, x19, [sp, #88]
   1976c:	bl	132c0 <__sanitizer_set_report_fd@@Base+0x2a20>
   19770:	str	xzr, [sp, #192]
   19774:	str	x0, [sp, #200]
   19778:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   1977c:	mov	w2, #0x0                   	// #0
   19780:	add	x25, x0, #0x200, lsl #12
   19784:	mov	x19, x0
   19788:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1978c:	mov	x0, x25
   19790:	add	x1, x1, #0xaf6
   19794:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   19798:	mov	x23, x0
   1979c:	mov	x1, x19
   197a0:	bl	14cd4 <__sanitizer_set_report_fd@@Base+0x4434>
   197a4:	tst	w0, #0xff
   197a8:	b.ne	197cc <__sanitizer_symbolize_global@@Base+0x11e4>  // b.any
   197ac:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   197b0:	add	x2, x2, #0xb0b
   197b4:	mov	x4, #0x0                   	// #0
   197b8:	mov	x3, #0x0                   	// #0
   197bc:	mov	w1, #0x152                 	// #338
   197c0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   197c4:	add	x0, x0, #0xb48
   197c8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   197cc:	mov	x0, x21
   197d0:	adrp	x21, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   197d4:	add	x21, x21, #0xd94
   197d8:	mov	x20, #0x0                   	// #0
   197dc:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   197e0:	adrp	x19, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   197e4:	add	x19, x19, #0x248
   197e8:	mov	x0, x19
   197ec:	bl	13420 <__sanitizer_set_report_fd@@Base+0x2b80>
   197f0:	ldr	w1, [x21, x20, lsl #2]
   197f4:	mov	x0, x19
   197f8:	add	x20, x20, #0x1
   197fc:	bl	13438 <__sanitizer_set_report_fd@@Base+0x2b98>
   19800:	cmp	x20, #0x7
   19804:	b.ne	197f0 <__sanitizer_symbolize_global@@Base+0x1208>  // b.any
   19808:	add	x20, x19, #0x80
   1980c:	mov	x1, x19
   19810:	mov	x2, x20
   19814:	mov	w0, #0x0                   	// #0
   19818:	bl	1340c <__sanitizer_set_report_fd@@Base+0x2b6c>
   1981c:	sxtw	x3, w0
   19820:	cbz	w0, 19838 <__sanitizer_symbolize_global@@Base+0x1250>
   19824:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19828:	mov	x4, #0x0                   	// #0
   1982c:	add	x2, x2, #0xb9a
   19830:	mov	w1, #0x1ac                 	// #428
   19834:	b	197c0 <__sanitizer_symbolize_global@@Base+0x11d8>
   19838:	mov	x3, x24
   1983c:	mov	w2, #0x700                 	// #1792
   19840:	mov	x6, #0x0                   	// #0
   19844:	mov	x5, #0x0                   	// #0
   19848:	mov	x4, #0x0                   	// #0
   1984c:	add	x1, x23, x25
   19850:	movk	w2, #0x80, lsl #16
   19854:	adrp	x0, 19000 <__sanitizer_symbolize_global@@Base+0xa18>
   19858:	add	x0, x0, #0xf04
   1985c:	bl	137cc <__sanitizer_set_report_fd@@Base+0x2f2c>
   19860:	mov	x2, #0x0                   	// #0
   19864:	mov	x21, x0
   19868:	mov	x1, x20
   1986c:	add	x26, sp, #0x54
   19870:	mov	w0, #0x2                   	// #2
   19874:	bl	1340c <__sanitizer_set_report_fd@@Base+0x2b6c>
   19878:	mov	x1, x26
   1987c:	mov	x0, x21
   19880:	str	wzr, [sp, #84]
   19884:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   19888:	tst	w0, #0xff
   1988c:	b.eq	198f8 <__sanitizer_symbolize_global@@Base+0x1310>  // b.none
   19890:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   19894:	ldr	x0, [x0, #3896]
   19898:	ldr	w0, [x0]
   1989c:	cbz	w0, 198b0 <__sanitizer_symbolize_global@@Base+0x12c8>
   198a0:	ldr	w1, [sp, #84]
   198a4:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   198a8:	add	x0, x0, #0xbaa
   198ac:	bl	16a18 <OnPrint@@Base+0x30c>
   198b0:	add	x0, x24, #0x10
   198b4:	bl	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   198b8:	mov	x1, x25
   198bc:	mov	x0, x23
   198c0:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   198c4:	cbnz	w22, 198e0 <__sanitizer_symbolize_global@@Base+0x12f8>
   198c8:	mov	x4, #0x0                   	// #0
   198cc:	mov	x3, #0x0                   	// #0
   198d0:	mov	x2, #0x0                   	// #0
   198d4:	mov	x1, #0x0                   	// #0
   198d8:	mov	w0, #0x4                   	// #4
   198dc:	bl	13300 <__sanitizer_set_report_fd@@Base+0x2a60>
   198e0:	ldp	x21, x22, [sp, #16]
   198e4:	ldp	x23, x24, [sp, #32]
   198e8:	ldp	x25, x26, [sp, #48]
   198ec:	ldr	x30, [sp, #64]
   198f0:	ldp	x19, x20, [sp], #208
   198f4:	ret
   198f8:	adrp	x20, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   198fc:	adrp	x19, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   19900:	ldr	x0, [x20, #3848]
   19904:	str	x21, [x0]
   19908:	bl	132c0 <__sanitizer_set_report_fd@@Base+0x2a20>
   1990c:	ldr	x1, [x19, #3840]
   19910:	mov	x4, #0x0                   	// #0
   19914:	mov	x3, #0x0                   	// #0
   19918:	mov	x2, #0x0                   	// #0
   1991c:	str	x0, [x1]
   19920:	mov	x1, x21
   19924:	mov	w0, #0x6d61                	// #28001
   19928:	movk	w0, #0x5961, lsl #16
   1992c:	bl	13300 <__sanitizer_set_report_fd@@Base+0x2a60>
   19930:	add	x0, x24, #0x10
   19934:	bl	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   19938:	ldr	x0, [sp, #192]
   1993c:	cbnz	x0, 19948 <__sanitizer_symbolize_global@@Base+0x1360>
   19940:	bl	6870 <sched_yield@plt>
   19944:	b	19938 <__sanitizer_symbolize_global@@Base+0x1350>
   19948:	mov	w2, #0x40000000            	// #1073741824
   1994c:	mov	x1, #0x0                   	// #0
   19950:	mov	w0, w21
   19954:	bl	132a8 <__sanitizer_set_report_fd@@Base+0x2a08>
   19958:	mov	x1, x26
   1995c:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   19960:	tst	w0, #0xff
   19964:	b.eq	19990 <__sanitizer_symbolize_global@@Base+0x13a8>  // b.none
   19968:	ldr	w1, [sp, #84]
   1996c:	cmp	w1, #0x4
   19970:	b.eq	19948 <__sanitizer_symbolize_global@@Base+0x1360>  // b.none
   19974:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   19978:	ldr	x0, [x0, #3896]
   1997c:	ldr	w0, [x0]
   19980:	cbz	w0, 19990 <__sanitizer_symbolize_global@@Base+0x13a8>
   19984:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19988:	add	x0, x0, #0xbd7
   1998c:	bl	16a18 <OnPrint@@Base+0x30c>
   19990:	ldr	x20, [x20, #3848]
   19994:	ldr	x19, [x19, #3840]
   19998:	str	xzr, [x20]
   1999c:	str	xzr, [x19]
   199a0:	b	198b8 <__sanitizer_symbolize_global@@Base+0x12d0>
   199a4:	ldr	x4, [x0, #24]
   199a8:	str	x30, [sp, #-16]!
   199ac:	cmp	x1, x4
   199b0:	b.cc	199d0 <__sanitizer_symbolize_global@@Base+0x13e8>  // b.lo, b.ul, b.last
   199b4:	mov	x3, x1
   199b8:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   199bc:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   199c0:	add	x2, x2, #0xc08
   199c4:	add	x0, x0, #0xb48
   199c8:	mov	w1, #0x202                 	// #514
   199cc:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   199d0:	add	x0, x0, #0x8
   199d4:	bl	1a16c <__sanitizer_symbolize_global@@Base+0x1b84>
   199d8:	ldr	x0, [x0]
   199dc:	ldr	x30, [sp], #16
   199e0:	ret
   199e4:	stp	x19, x20, [sp, #-80]!
   199e8:	mov	x20, #0x0                   	// #0
   199ec:	stp	x23, x24, [sp, #32]
   199f0:	adrp	x23, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   199f4:	add	x24, sp, #0x4c
   199f8:	stp	x25, x30, [sp, #48]
   199fc:	ldr	x25, [x23, #3896]
   19a00:	stp	x21, x22, [sp, #16]
   19a04:	adrp	x22, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19a08:	mov	x21, x0
   19a0c:	add	x22, x22, #0xc45
   19a10:	ldr	x0, [x21, #32]
   19a14:	cmp	x20, x0
   19a18:	b.cs	19a98 <__sanitizer_symbolize_global@@Base+0x14b0>  // b.hs, b.nlast
   19a1c:	mov	x1, x20
   19a20:	add	x0, x21, #0x8
   19a24:	bl	199a4 <__sanitizer_symbolize_global@@Base+0x13bc>
   19a28:	mov	w1, w0
   19a2c:	mov	x3, #0x0                   	// #0
   19a30:	mov	x2, #0x0                   	// #0
   19a34:	mov	x19, x0
   19a38:	mov	w0, #0x11                  	// #17
   19a3c:	bl	13294 <__sanitizer_set_report_fd@@Base+0x29f4>
   19a40:	mov	x1, x24
   19a44:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   19a48:	tst	w0, #0xff
   19a4c:	b.ne	19a7c <__sanitizer_symbolize_global@@Base+0x1494>  // b.any
   19a50:	ldr	x0, [x23, #3896]
   19a54:	ldr	w0, [x0]
   19a58:	sxtw	x0, w0
   19a5c:	cmp	x0, #0x1
   19a60:	b.ls	19a74 <__sanitizer_symbolize_global@@Base+0x148c>  // b.plast
   19a64:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19a68:	mov	w1, w19
   19a6c:	add	x0, x0, #0xc2b
   19a70:	bl	16a18 <OnPrint@@Base+0x30c>
   19a74:	add	x20, x20, #0x1
   19a78:	b	19a10 <__sanitizer_symbolize_global@@Base+0x1428>
   19a7c:	ldr	w0, [x25]
   19a80:	cbz	w0, 19a74 <__sanitizer_symbolize_global@@Base+0x148c>
   19a84:	ldr	w2, [sp, #76]
   19a88:	mov	w1, w19
   19a8c:	mov	x0, x22
   19a90:	bl	16a18 <OnPrint@@Base+0x30c>
   19a94:	b	19a74 <__sanitizer_symbolize_global@@Base+0x148c>
   19a98:	ldp	x21, x22, [sp, #16]
   19a9c:	ldp	x23, x24, [sp, #32]
   19aa0:	ldp	x25, x30, [sp, #48]
   19aa4:	ldp	x19, x20, [sp], #80
   19aa8:	ret
   19aac:	stp	x19, x20, [sp, #-32]!
   19ab0:	mov	x20, x0
   19ab4:	mov	x19, #0x0                   	// #0
   19ab8:	stp	x21, x30, [sp, #16]
   19abc:	add	x21, x0, #0x8
   19ac0:	ldr	x0, [x20, #32]
   19ac4:	cmp	x19, x0
   19ac8:	b.cs	19af4 <__sanitizer_symbolize_global@@Base+0x150c>  // b.hs, b.nlast
   19acc:	mov	x1, x19
   19ad0:	mov	x0, x21
   19ad4:	bl	199a4 <__sanitizer_symbolize_global@@Base+0x13bc>
   19ad8:	add	x19, x19, #0x1
   19adc:	mov	w1, w0
   19ae0:	mov	x3, #0x0                   	// #0
   19ae4:	mov	x2, #0x0                   	// #0
   19ae8:	mov	w0, #0x8                   	// #8
   19aec:	bl	13294 <__sanitizer_set_report_fd@@Base+0x29f4>
   19af0:	b	19ac0 <__sanitizer_symbolize_global@@Base+0x14d8>
   19af4:	ldp	x21, x30, [sp, #16]
   19af8:	ldp	x19, x20, [sp], #32
   19afc:	ret
   19b00:	stp	x19, x20, [sp, #-96]!
   19b04:	mov	w20, w0
   19b08:	add	x19, sp, #0x28
   19b0c:	stp	x21, x30, [sp, #16]
   19b10:	mov	x0, x19
   19b14:	stp	x1, x2, [sp, #40]
   19b18:	bl	151f4 <__sanitizer_set_report_fd@@Base+0x4954>
   19b1c:	str	x0, [sp, #56]
   19b20:	mov	x0, x19
   19b24:	bl	15200 <__sanitizer_set_report_fd@@Base+0x4960>
   19b28:	strb	w0, [sp, #88]
   19b2c:	mov	x0, x19
   19b30:	bl	13978 <__sanitizer_set_report_fd@@Base+0x30d8>
   19b34:	str	w0, [sp, #92]
   19b38:	mov	x0, x19
   19b3c:	bl	139b8 <__sanitizer_set_report_fd@@Base+0x3118>
   19b40:	ldp	x2, x3, [sp, #56]
   19b44:	mov	w1, w20
   19b48:	ldr	x4, [sp, #72]
   19b4c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19b50:	add	x0, x0, #0xc72
   19b54:	bl	16994 <OnPrint@@Base+0x288>
   19b58:	adrp	x1, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   19b5c:	add	x0, x1, #0x248
   19b60:	ldr	x21, [x0, #256]
   19b64:	cbz	x21, 19bbc <__sanitizer_symbolize_global@@Base+0x15d4>
   19b68:	mov	x19, x1
   19b6c:	mov	x0, x21
   19b70:	cmp	w20, #0x6
   19b74:	b.ne	19ba0 <__sanitizer_symbolize_global@@Base+0x15b8>  // b.any
   19b78:	bl	19aac <__sanitizer_symbolize_global@@Base+0x14c4>
   19b7c:	adrp	x0, 19000 <__sanitizer_symbolize_global@@Base+0xa18>
   19b80:	add	x0, x0, #0xbcc
   19b84:	bl	1cea0 <__sanitizer_symbolize_global@@Base+0x48b8>
   19b88:	tst	w0, #0xff
   19b8c:	b.ne	19ba8 <__sanitizer_symbolize_global@@Base+0x15c0>  // b.any
   19b90:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19b94:	add	x0, x0, #0xca9
   19b98:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   19b9c:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   19ba0:	bl	199e4 <__sanitizer_symbolize_global@@Base+0x13fc>
   19ba4:	b	19b7c <__sanitizer_symbolize_global@@Base+0x1594>
   19ba8:	ldr	x0, [x21]
   19bac:	add	x1, x19, #0x248
   19bb0:	str	xzr, [x1, #256]
   19bb4:	mov	x1, #0x1                   	// #1
   19bb8:	str	x1, [x0, #104]
   19bbc:	cmp	w20, #0x6
   19bc0:	cset	w0, ne  // ne = any
   19bc4:	add	w0, w0, #0x1
   19bc8:	bl	12e98 <__sanitizer_set_report_fd@@Base+0x25f8>
   19bcc:	stp	x19, x20, [sp, #-32]!
   19bd0:	adrp	x19, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   19bd4:	add	x19, x19, #0x248
   19bd8:	str	x30, [sp, #16]
   19bdc:	ldr	x20, [x19, #256]
   19be0:	cbz	x20, 19c08 <__sanitizer_symbolize_global@@Base+0x1620>
   19be4:	bl	132c0 <__sanitizer_set_report_fd@@Base+0x2a20>
   19be8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   19bec:	ldr	x1, [x1, #3848]
   19bf0:	ldr	x1, [x1]
   19bf4:	cmp	x0, x1
   19bf8:	b.ne	19c08 <__sanitizer_symbolize_global@@Base+0x1620>  // b.any
   19bfc:	mov	x0, x20
   19c00:	bl	19aac <__sanitizer_symbolize_global@@Base+0x14c4>
   19c04:	str	xzr, [x19, #256]
   19c08:	ldr	x30, [sp, #16]
   19c0c:	ldp	x19, x20, [sp], #32
   19c10:	ret
   19c14:	stp	x19, x20, [sp, #-48]!
   19c18:	add	x19, x0, #0x8
   19c1c:	mov	x20, #0x0                   	// #0
   19c20:	stp	x21, x22, [sp, #16]
   19c24:	mov	x21, x1
   19c28:	ldr	x22, [x0, #24]
   19c2c:	str	x30, [sp, #32]
   19c30:	cmp	x20, x22
   19c34:	b.eq	19c58 <__sanitizer_symbolize_global@@Base+0x1670>  // b.none
   19c38:	mov	x1, x20
   19c3c:	mov	x0, x19
   19c40:	bl	1a16c <__sanitizer_symbolize_global@@Base+0x1b84>
   19c44:	ldr	x0, [x0]
   19c48:	cmp	x0, x21
   19c4c:	b.eq	19c6c <__sanitizer_symbolize_global@@Base+0x1684>  // b.none
   19c50:	add	x20, x20, #0x1
   19c54:	b	19c30 <__sanitizer_symbolize_global@@Base+0x1648>
   19c58:	mov	w0, #0x0                   	// #0
   19c5c:	ldp	x21, x22, [sp, #16]
   19c60:	ldr	x30, [sp, #32]
   19c64:	ldp	x19, x20, [sp], #48
   19c68:	ret
   19c6c:	mov	w0, #0x1                   	// #1
   19c70:	b	19c5c <__sanitizer_symbolize_global@@Base+0x1674>
   19c74:	str	x30, [sp, #-32]!
   19c78:	add	x0, x0, #0x8
   19c7c:	str	x1, [sp, #24]
   19c80:	add	x1, sp, #0x18
   19c84:	bl	1a25c <__sanitizer_symbolize_global@@Base+0x1c74>
   19c88:	ldr	x30, [sp], #32
   19c8c:	ret
   19c90:	stp	x19, x20, [sp, #-80]!
   19c94:	mov	x19, x1
   19c98:	stp	x21, x22, [sp, #16]
   19c9c:	add	x22, x0, #0x8
   19ca0:	mov	x0, x22
   19ca4:	stp	x23, x24, [sp, #32]
   19ca8:	stp	x25, x30, [sp, #48]
   19cac:	bl	19c14 <__sanitizer_symbolize_global@@Base+0x162c>
   19cb0:	ands	w20, w0, #0xff
   19cb4:	b.ne	19dc0 <__sanitizer_symbolize_global@@Base+0x17d8>  // b.any
   19cb8:	mov	x3, #0x0                   	// #0
   19cbc:	mov	x2, #0x0                   	// #0
   19cc0:	mov	w1, w19
   19cc4:	mov	w0, #0x10                  	// #16
   19cc8:	bl	13294 <__sanitizer_set_report_fd@@Base+0x29f4>
   19ccc:	mov	w24, w19
   19cd0:	add	x1, sp, #0x40
   19cd4:	adrp	x21, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   19cd8:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   19cdc:	tst	w0, #0xff
   19ce0:	b.eq	19d1c <__sanitizer_symbolize_global@@Base+0x1734>  // b.none
   19ce4:	ldr	x21, [x21, #3896]
   19ce8:	ldr	w0, [x21]
   19cec:	cbz	w0, 19d04 <__sanitizer_symbolize_global@@Base+0x171c>
   19cf0:	ldr	w2, [sp, #64]
   19cf4:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19cf8:	mov	x1, x19
   19cfc:	add	x0, x0, #0xcd4
   19d00:	bl	16a18 <OnPrint@@Base+0x30c>
   19d04:	mov	w0, w20
   19d08:	ldp	x21, x22, [sp, #16]
   19d0c:	ldp	x23, x24, [sp, #32]
   19d10:	ldp	x25, x30, [sp, #48]
   19d14:	ldp	x19, x20, [sp], #80
   19d18:	ret
   19d1c:	ldr	x0, [x21, #3896]
   19d20:	ldr	w0, [x0]
   19d24:	sxtw	x0, w0
   19d28:	cmp	x0, #0x1
   19d2c:	b.ls	19d40 <__sanitizer_symbolize_global@@Base+0x1758>  // b.plast
   19d30:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19d34:	mov	x1, x19
   19d38:	add	x0, x0, #0xd00
   19d3c:	bl	16a18 <OnPrint@@Base+0x30c>
   19d40:	add	x25, sp, #0x44
   19d44:	add	x20, sp, #0x48
   19d48:	mov	w2, #0x40000000            	// #1073741824
   19d4c:	mov	x1, x25
   19d50:	mov	w0, w24
   19d54:	bl	132a8 <__sanitizer_set_report_fd@@Base+0x2a08>
   19d58:	mov	x1, x20
   19d5c:	mov	x23, x0
   19d60:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   19d64:	tst	w0, #0xff
   19d68:	b.eq	19d78 <__sanitizer_symbolize_global@@Base+0x1790>  // b.none
   19d6c:	ldr	w0, [sp, #72]
   19d70:	cmp	w0, #0x4
   19d74:	b.eq	19d48 <__sanitizer_symbolize_global@@Base+0x1760>  // b.none
   19d78:	mov	x1, x20
   19d7c:	mov	x0, x23
   19d80:	bl	12c94 <__sanitizer_set_report_fd@@Base+0x23f4>
   19d84:	tst	w0, #0xff
   19d88:	b.eq	19dc8 <__sanitizer_symbolize_global@@Base+0x17e0>  // b.none
   19d8c:	ldr	x21, [x21, #3896]
   19d90:	ldr	w0, [x21]
   19d94:	cbz	w0, 19dac <__sanitizer_symbolize_global@@Base+0x17c4>
   19d98:	ldr	w2, [sp, #72]
   19d9c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19da0:	mov	x1, x19
   19da4:	add	x0, x0, #0xd19
   19da8:	bl	16a18 <OnPrint@@Base+0x30c>
   19dac:	mov	w1, w19
   19db0:	mov	x3, #0x0                   	// #0
   19db4:	mov	x2, #0x0                   	// #0
   19db8:	mov	w0, #0x11                  	// #17
   19dbc:	bl	13294 <__sanitizer_set_report_fd@@Base+0x29f4>
   19dc0:	mov	w20, #0x0                   	// #0
   19dc4:	b	19d04 <__sanitizer_symbolize_global@@Base+0x171c>
   19dc8:	ldr	w3, [sp, #68]
   19dcc:	and	w0, w3, #0xff
   19dd0:	cmp	w0, #0x7f
   19dd4:	b.ne	19dfc <__sanitizer_symbolize_global@@Base+0x1814>  // b.any
   19dd8:	ubfx	x3, x3, #8, #8
   19ddc:	cmp	w3, #0x13
   19de0:	b.eq	19dfc <__sanitizer_symbolize_global@@Base+0x1814>  // b.none
   19de4:	and	x3, x3, #0xff
   19de8:	mov	w1, w24
   19dec:	mov	x2, #0x0                   	// #0
   19df0:	mov	w0, #0x7                   	// #7
   19df4:	bl	13294 <__sanitizer_set_report_fd@@Base+0x29f4>
   19df8:	b	19d48 <__sanitizer_symbolize_global@@Base+0x1760>
   19dfc:	mov	x1, x20
   19e00:	add	x0, x22, #0x8
   19e04:	mov	w20, #0x1                   	// #1
   19e08:	str	x19, [sp, #72]
   19e0c:	bl	1a25c <__sanitizer_symbolize_global@@Base+0x1c74>
   19e10:	b	19d04 <__sanitizer_symbolize_global@@Base+0x171c>
   19e14:	stp	x19, x20, [sp, #-128]!
   19e18:	mov	x19, x0
   19e1c:	stp	x21, x22, [sp, #16]
   19e20:	add	x22, sp, #0x60
   19e24:	ldr	w1, [x19, #40]
   19e28:	mov	x0, x22
   19e2c:	stp	x23, x24, [sp, #32]
   19e30:	add	x23, sp, #0x48
   19e34:	stp	x25, x30, [sp, #48]
   19e38:	mov	w24, #0x0                   	// #0
   19e3c:	bl	13e4c <__sanitizer_set_report_fd@@Base+0x35ac>
   19e40:	mov	x0, x23
   19e44:	mov	x1, #0x1                   	// #1
   19e48:	stp	xzr, xzr, [sp, #72]
   19e4c:	str	xzr, [sp, #88]
   19e50:	bl	1a248 <__sanitizer_symbolize_global@@Base+0x1c60>
   19e54:	mov	x0, x23
   19e58:	mov	x1, #0x80                  	// #128
   19e5c:	bl	1a248 <__sanitizer_symbolize_global@@Base+0x1c60>
   19e60:	mov	x1, x23
   19e64:	mov	x0, x22
   19e68:	bl	13be4 <__sanitizer_set_report_fd@@Base+0x3344>
   19e6c:	cbz	w0, 19ea4 <__sanitizer_symbolize_global@@Base+0x18bc>
   19e70:	ldr	x20, [sp, #72]
   19e74:	cmp	w0, #0x1
   19e78:	ldr	x25, [sp, #88]
   19e7c:	cset	w21, eq  // eq = none
   19e80:	add	x25, x20, x25, lsl #3
   19e84:	cmp	x20, x25
   19e88:	b.eq	19ed8 <__sanitizer_symbolize_global@@Base+0x18f0>  // b.none
   19e8c:	ldr	x1, [x20], #8
   19e90:	mov	x0, x19
   19e94:	bl	19c90 <__sanitizer_symbolize_global@@Base+0x16a8>
   19e98:	ands	w0, w0, #0xff
   19e9c:	csel	w21, w21, w0, eq  // eq = none
   19ea0:	b	19e84 <__sanitizer_symbolize_global@@Base+0x189c>
   19ea4:	mov	x0, x19
   19ea8:	mov	w19, #0x0                   	// #0
   19eac:	bl	199e4 <__sanitizer_symbolize_global@@Base+0x13fc>
   19eb0:	ldp	x0, x1, [sp, #72]
   19eb4:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   19eb8:	mov	x0, x22
   19ebc:	bl	134d0 <__sanitizer_set_report_fd@@Base+0x2c30>
   19ec0:	mov	w0, w19
   19ec4:	ldp	x21, x22, [sp, #16]
   19ec8:	ldp	x23, x24, [sp, #32]
   19ecc:	ldp	x25, x30, [sp, #48]
   19ed0:	ldp	x19, x20, [sp], #128
   19ed4:	ret
   19ed8:	add	w24, w24, #0x1
   19edc:	eor	w21, w21, #0x1
   19ee0:	cmp	w24, #0x1d
   19ee4:	cset	w0, gt
   19ee8:	orr	w21, w0, w21
   19eec:	tst	w21, #0xff
   19ef0:	b.eq	19e60 <__sanitizer_symbolize_global@@Base+0x1878>  // b.none
   19ef4:	ldr	x0, [x19, #32]
   19ef8:	cmp	x0, #0x0
   19efc:	cset	w19, ne  // ne = any
   19f00:	b	19eb0 <__sanitizer_symbolize_global@@Base+0x18c8>
   19f04:	stp	x19, x20, [sp, #-352]!
   19f08:	mov	x1, #0x9                   	// #9
   19f0c:	mov	x19, x0
   19f10:	mov	x4, #0x0                   	// #0
   19f14:	mov	x3, #0x0                   	// #0
   19f18:	mov	x2, #0x0                   	// #0
   19f1c:	mov	w0, #0x1                   	// #1
   19f20:	stp	x21, x22, [sp, #16]
   19f24:	stp	x23, x24, [sp, #32]
   19f28:	stp	x25, x26, [sp, #48]
   19f2c:	stp	x27, x28, [sp, #64]
   19f30:	str	x30, [sp, #80]
   19f34:	bl	13300 <__sanitizer_set_report_fd@@Base+0x2a60>
   19f38:	bl	132cc <__sanitizer_set_report_fd@@Base+0x2a2c>
   19f3c:	ldr	x1, [x19, #112]
   19f40:	cmp	x0, x1
   19f44:	b.eq	19f50 <__sanitizer_symbolize_global@@Base+0x1968>  // b.none
   19f48:	mov	w0, #0x4                   	// #4
   19f4c:	bl	12e98 <__sanitizer_set_report_fd@@Base+0x25f8>
   19f50:	add	x20, x19, #0x10
   19f54:	adrp	x24, 19000 <__sanitizer_symbolize_global@@Base+0xa18>
   19f58:	mov	x0, x20
   19f5c:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   19f60:	mov	x0, x20
   19f64:	bl	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   19f68:	add	x0, x24, #0xbcc
   19f6c:	bl	1ce68 <__sanitizer_symbolize_global@@Base+0x4880>
   19f70:	tst	w0, #0xff
   19f74:	b.ne	19f88 <__sanitizer_symbolize_global@@Base+0x19a0>  // b.any
   19f78:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   19f7c:	add	x0, x0, #0xd4e
   19f80:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   19f84:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   19f88:	bl	132cc <__sanitizer_set_report_fd@@Base+0x2a2c>
   19f8c:	add	x22, sp, #0x98
   19f90:	mov	x21, x0
   19f94:	add	x23, x22, #0x10
   19f98:	adrp	x20, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   19f9c:	add	x0, x20, #0xe38
   19fa0:	mov	x1, #0x1                   	// #1
   19fa4:	stp	x19, x0, [sp, #152]
   19fa8:	mov	x0, x23
   19fac:	stp	xzr, xzr, [sp, #168]
   19fb0:	str	xzr, [sp, #184]
   19fb4:	bl	1a248 <__sanitizer_symbolize_global@@Base+0x1c60>
   19fb8:	mov	x0, x23
   19fbc:	mov	x1, #0x400                 	// #1024
   19fc0:	bl	1a248 <__sanitizer_symbolize_global@@Base+0x1c60>
   19fc4:	str	w21, [sp, #192]
   19fc8:	adrp	x21, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   19fcc:	add	x0, x21, #0x248
   19fd0:	add	x23, sp, #0x68
   19fd4:	mov	x1, #0x2000                	// #8192
   19fd8:	stp	xzr, xzr, [sp, #104]
   19fdc:	str	xzr, [sp, #120]
   19fe0:	str	x22, [x0, #256]
   19fe4:	mov	x0, x23
   19fe8:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
   19fec:	ldr	x1, [sp, #120]
   19ff0:	mov	x0, #0x1fff                	// #8191
   19ff4:	cmp	x1, x0
   19ff8:	b.hi	1a030 <__sanitizer_symbolize_global@@Base+0x1a48>  // b.pmore
   19ffc:	ldr	x1, [sp, #112]
   1a000:	cmp	x1, x0
   1a004:	b.hi	1a014 <__sanitizer_symbolize_global@@Base+0x1a2c>  // b.pmore
   1a008:	mov	x0, x23
   1a00c:	mov	x1, #0x2000                	// #8192
   1a010:	bl	7e9c <__asan_backtrace_open@plt+0x138c>
   1a014:	ldr	x3, [sp, #104]
   1a018:	mov	x2, #0x2000                	// #8192
   1a01c:	ldr	x0, [sp, #120]
   1a020:	mov	w1, #0x0                   	// #0
   1a024:	sub	x2, x2, x0
   1a028:	add	x0, x3, x0
   1a02c:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1a030:	add	x23, sp, #0x80
   1a034:	mov	x25, #0x2000                	// #8192
   1a038:	mov	x0, x23
   1a03c:	mov	x2, #0x18                  	// #24
   1a040:	mov	w1, #0x0                   	// #0
   1a044:	str	x25, [sp, #120]
   1a048:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1a04c:	adrp	x26, 19000 <__sanitizer_symbolize_global@@Base+0xa18>
   1a050:	mov	w27, #0x4                   	// #4
   1a054:	add	x28, sp, #0xc8
   1a058:	add	x26, x26, #0xb00
   1a05c:	str	x25, [sp, #144]
   1a060:	adrp	x25, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a064:	add	x25, x25, #0xd94
   1a068:	ldr	x0, [sp, #104]
   1a06c:	movk	w27, #0x800, lsl #16
   1a070:	str	x0, [sp, #128]
   1a074:	mov	x0, x23
   1a078:	mov	x23, #0x0                   	// #0
   1a07c:	mov	x1, #0x0                   	// #0
   1a080:	bl	13310 <__sanitizer_set_report_fd@@Base+0x2a70>
   1a084:	mov	x2, #0x98                  	// #152
   1a088:	mov	w1, #0x0                   	// #0
   1a08c:	mov	x0, x28
   1a090:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1a094:	ldr	w0, [x25, x23, lsl #2]
   1a098:	mov	x1, x28
   1a09c:	add	x23, x23, #0x1
   1a0a0:	mov	x2, #0x0                   	// #0
   1a0a4:	str	x26, [sp, #200]
   1a0a8:	str	w27, [sp, #336]
   1a0ac:	bl	13330 <__sanitizer_set_report_fd@@Base+0x2a90>
   1a0b0:	cmp	x23, #0x7
   1a0b4:	b.ne	1a084 <__sanitizer_symbolize_global@@Base+0x1a9c>  // b.any
   1a0b8:	mov	x0, x22
   1a0bc:	bl	19e14 <__sanitizer_symbolize_global@@Base+0x182c>
   1a0c0:	tst	w0, #0xff
   1a0c4:	b.ne	1a0ec <__sanitizer_symbolize_global@@Base+0x1b04>  // b.any
   1a0c8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1a0cc:	ldr	x0, [x0, #3896]
   1a0d0:	ldr	w0, [x0]
   1a0d4:	cbz	w0, 1a0e4 <__sanitizer_symbolize_global@@Base+0x1afc>
   1a0d8:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a0dc:	add	x0, x0, #0xd76
   1a0e0:	bl	16a18 <OnPrint@@Base+0x30c>
   1a0e4:	mov	w22, #0x3                   	// #3
   1a0e8:	b	1a104 <__sanitizer_symbolize_global@@Base+0x1b1c>
   1a0ec:	ldp	x2, x1, [x19]
   1a0f0:	add	x0, x22, #0x8
   1a0f4:	blr	x2
   1a0f8:	mov	x0, x22
   1a0fc:	mov	w22, #0x0                   	// #0
   1a100:	bl	199e4 <__sanitizer_symbolize_global@@Base+0x13fc>
   1a104:	add	x0, x24, #0xbcc
   1a108:	bl	1cea0 <__sanitizer_symbolize_global@@Base+0x48b8>
   1a10c:	tst	w0, #0xff
   1a110:	b.ne	1a120 <__sanitizer_symbolize_global@@Base+0x1b38>  // b.any
   1a114:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a118:	add	x0, x0, #0xca9
   1a11c:	b	19f80 <__sanitizer_symbolize_global@@Base+0x1998>
   1a120:	mov	x0, #0x1                   	// #1
   1a124:	str	x0, [x19, #104]
   1a128:	ldr	x0, [sp, #104]
   1a12c:	add	x21, x21, #0x248
   1a130:	ldr	x1, [sp, #112]
   1a134:	add	x20, x20, #0xe38
   1a138:	str	xzr, [x21, #256]
   1a13c:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1a140:	str	x20, [sp, #160]
   1a144:	ldp	x0, x1, [sp, #168]
   1a148:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1a14c:	mov	w0, w22
   1a150:	ldp	x21, x22, [sp, #16]
   1a154:	ldp	x23, x24, [sp, #32]
   1a158:	ldp	x25, x26, [sp, #48]
   1a15c:	ldp	x27, x28, [sp, #64]
   1a160:	ldr	x30, [sp, #80]
   1a164:	ldp	x19, x20, [sp], #352
   1a168:	ret
   1a16c:	ldr	x4, [x0, #16]
   1a170:	mov	x3, x1
   1a174:	cmp	x1, x4
   1a178:	b.cc	1a198 <__sanitizer_symbolize_global@@Base+0x1bb0>  // b.lo, b.ul, b.last
   1a17c:	str	x30, [sp, #-16]!
   1a180:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a184:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a188:	add	x2, x2, #0x978
   1a18c:	add	x0, x0, #0x98a
   1a190:	mov	w1, #0x1ba                 	// #442
   1a194:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1a198:	ldr	x0, [x0]
   1a19c:	add	x0, x0, x1, lsl #3
   1a1a0:	ret
   1a1a4:	stp	x19, x20, [sp, #-32]!
   1a1a8:	stp	x21, x30, [sp, #16]
   1a1ac:	cbnz	x1, 1a1d0 <__sanitizer_symbolize_global@@Base+0x1be8>
   1a1b0:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a1b4:	add	x2, x2, #0x9c7
   1a1b8:	mov	x4, #0x0                   	// #0
   1a1bc:	mov	x3, #0x0                   	// #0
   1a1c0:	mov	w1, #0x1fc                 	// #508
   1a1c4:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a1c8:	add	x0, x0, #0x98a
   1a1cc:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1a1d0:	ldr	x3, [x0, #16]
   1a1d4:	mov	x19, x0
   1a1d8:	mov	x20, x1
   1a1dc:	cmp	x1, x3
   1a1e0:	b.cs	1a1f8 <__sanitizer_symbolize_global@@Base+0x1c10>  // b.hs, b.nlast
   1a1e4:	mov	x4, x1
   1a1e8:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a1ec:	mov	w1, #0x1fd                 	// #509
   1a1f0:	add	x2, x2, #0x9e0
   1a1f4:	b	1a1c4 <__sanitizer_symbolize_global@@Base+0x1bdc>
   1a1f8:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   1a1fc:	mov	x1, x0
   1a200:	lsl	x0, x20, #3
   1a204:	bl	c730 <__sancov_default_options@@Base+0x790>
   1a208:	mov	w2, #0x0                   	// #0
   1a20c:	mov	x20, x0
   1a210:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a214:	add	x1, x1, #0xa15
   1a218:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   1a21c:	mov	x21, x0
   1a220:	ldr	x1, [x19]
   1a224:	ldr	x2, [x19, #16]
   1a228:	lsl	x2, x2, #3
   1a22c:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1a230:	ldp	x0, x1, [x19]
   1a234:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1a238:	stp	x21, x20, [x19]
   1a23c:	ldp	x21, x30, [sp, #16]
   1a240:	ldp	x19, x20, [sp], #32
   1a244:	ret
   1a248:	ldr	x2, [x0, #8]
   1a24c:	cmp	x1, x2, lsr #3
   1a250:	b.ls	1a258 <__sanitizer_symbolize_global@@Base+0x1c70>  // b.plast
   1a254:	b	1a1a4 <__sanitizer_symbolize_global@@Base+0x1bbc>
   1a258:	ret
   1a25c:	stp	x19, x20, [sp, #-32]!
   1a260:	ldp	x4, x3, [x0, #8]
   1a264:	str	x30, [sp, #16]
   1a268:	lsr	x4, x4, #3
   1a26c:	cmp	x3, x4
   1a270:	b.ls	1a28c <__sanitizer_symbolize_global@@Base+0x1ca4>  // b.plast
   1a274:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1a278:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a27c:	add	x2, x2, #0x74b
   1a280:	add	x0, x0, #0x98a
   1a284:	mov	w1, #0x1be                 	// #446
   1a288:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1a28c:	mov	x19, x0
   1a290:	mov	x20, x1
   1a294:	b.ne	1a2ac <__sanitizer_symbolize_global@@Base+0x1cc4>  // b.any
   1a298:	add	x0, x3, #0x1
   1a29c:	bl	13edc <__sanitizer_set_report_fd@@Base+0x363c>
   1a2a0:	mov	x1, x0
   1a2a4:	mov	x0, x19
   1a2a8:	bl	1a1a4 <__sanitizer_symbolize_global@@Base+0x1bbc>
   1a2ac:	ldr	x0, [x19, #16]
   1a2b0:	mov	x2, #0x8                   	// #8
   1a2b4:	ldr	x30, [sp, #16]
   1a2b8:	add	x1, x0, #0x1
   1a2bc:	str	x1, [x19, #16]
   1a2c0:	mov	x1, x20
   1a2c4:	ldr	x3, [x19]
   1a2c8:	ldp	x19, x20, [sp], #32
   1a2cc:	add	x0, x3, x0, lsl #3
   1a2d0:	b	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1a2d4:	ldr	x0, [x0, #32]
   1a2d8:	ret
   1a2dc:	stp	x19, x20, [sp, #-48]!
   1a2e0:	mov	x19, x0
   1a2e4:	mov	x20, #0x0                   	// #0
   1a2e8:	stp	x21, x22, [sp, #16]
   1a2ec:	mov	x22, x1
   1a2f0:	str	x30, [sp, #32]
   1a2f4:	ldr	w0, [x19, #8]
   1a2f8:	mov	w21, w20
   1a2fc:	cmp	w0, w20
   1a300:	b.le	1a334 <__sanitizer_symbolize_global@@Base+0x1d4c>
   1a304:	ldr	x0, [x19]
   1a308:	ldr	x1, [x0, x20, lsl #3]
   1a30c:	mov	x0, x22
   1a310:	add	x20, x20, #0x1
   1a314:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1a318:	cbnz	w0, 1a2f4 <__sanitizer_symbolize_global@@Base+0x1d0c>
   1a31c:	add	x19, x19, w21, sxtw
   1a320:	ldrb	w0, [x19, #40]
   1a324:	ldp	x21, x22, [sp, #16]
   1a328:	ldr	x30, [sp, #32]
   1a32c:	ldp	x19, x20, [sp], #48
   1a330:	ret
   1a334:	mov	w0, #0x0                   	// #0
   1a338:	b	1a324 <__sanitizer_symbolize_global@@Base+0x1d3c>
   1a33c:	ldr	x4, [x0, #32]
   1a340:	mov	x3, x1
   1a344:	cmp	x1, x4
   1a348:	b.cc	1a368 <__sanitizer_symbolize_global@@Base+0x1d80>  // b.lo, b.ul, b.last
   1a34c:	str	x30, [sp, #-16]!
   1a350:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a354:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a358:	add	x2, x2, #0xdb0
   1a35c:	add	x0, x0, #0xdd1
   1a360:	mov	w1, #0x9e                  	// #158
   1a364:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1a368:	ldr	x0, [x0, #16]
   1a36c:	add	x0, x0, x1, lsl #5
   1a370:	ret
   1a374:	stp	x19, x20, [sp, #-64]!
   1a378:	mov	x19, x0
   1a37c:	stp	x21, x22, [sp, #16]
   1a380:	mov	x22, x2
   1a384:	stp	x23, x24, [sp, #32]
   1a388:	mov	x23, x1
   1a38c:	mov	x24, x3
   1a390:	stp	x25, x30, [sp, #48]
   1a394:	mov	x1, x2
   1a398:	strb	wzr, [x0, #72]
   1a39c:	bl	1a2dc <__sanitizer_symbolize_global@@Base+0x1cf4>
   1a3a0:	tst	w0, #0xff
   1a3a4:	b.eq	1a410 <__sanitizer_symbolize_global@@Base+0x1e28>  // b.none
   1a3a8:	add	x25, x19, #0x10
   1a3ac:	mov	x21, #0x0                   	// #0
   1a3b0:	ldr	x0, [x19, #32]
   1a3b4:	cmp	x21, x0
   1a3b8:	b.cs	1a410 <__sanitizer_symbolize_global@@Base+0x1e28>  // b.hs, b.nlast
   1a3bc:	mov	x1, x21
   1a3c0:	mov	x0, x25
   1a3c4:	bl	1a944 <__sanitizer_symbolize_global@@Base+0x235c>
   1a3c8:	mov	x20, x0
   1a3cc:	ldr	x0, [x0]
   1a3d0:	mov	x1, x22
   1a3d4:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1a3d8:	cbnz	w0, 1a408 <__sanitizer_symbolize_global@@Base+0x1e20>
   1a3dc:	ldr	x0, [x20, #8]
   1a3e0:	mov	x1, x23
   1a3e4:	bl	e024 <__sancov_default_options@@Base+0x2084>
   1a3e8:	ands	w0, w0, #0xff
   1a3ec:	b.eq	1a408 <__sanitizer_symbolize_global@@Base+0x1e20>  // b.none
   1a3f0:	str	x20, [x24]
   1a3f4:	ldp	x21, x22, [sp, #16]
   1a3f8:	ldp	x23, x24, [sp, #32]
   1a3fc:	ldp	x25, x30, [sp, #48]
   1a400:	ldp	x19, x20, [sp], #64
   1a404:	ret
   1a408:	add	x21, x21, #0x1
   1a40c:	b	1a3b0 <__sanitizer_symbolize_global@@Base+0x1dc8>
   1a410:	mov	w0, #0x0                   	// #0
   1a414:	b	1a3f4 <__sanitizer_symbolize_global@@Base+0x1e0c>
   1a418:	stp	x19, x20, [sp, #-96]!
   1a41c:	mov	x19, x1
   1a420:	stp	x23, x24, [sp, #32]
   1a424:	adrp	x24, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a428:	mov	x23, x0
   1a42c:	add	x24, x24, #0xa15
   1a430:	stp	x25, x26, [sp, #48]
   1a434:	add	x25, x0, #0x10
   1a438:	add	x26, sp, #0x58
   1a43c:	stp	x21, x22, [sp, #16]
   1a440:	mov	x22, #0x0                   	// #0
   1a444:	str	x30, [sp, #64]
   1a448:	ldr	x0, [x23, #32]
   1a44c:	cmp	x22, x0
   1a450:	b.cs	1a54c <__sanitizer_symbolize_global@@Base+0x1f64>  // b.hs, b.nlast
   1a454:	mov	x1, x22
   1a458:	mov	x0, x25
   1a45c:	bl	1a944 <__sanitizer_symbolize_global@@Base+0x235c>
   1a460:	ldr	w1, [x0, #16]
   1a464:	cbz	w1, 1a544 <__sanitizer_symbolize_global@@Base+0x1f5c>
   1a468:	ldp	x4, x21, [x19, #8]
   1a46c:	str	x0, [sp, #88]
   1a470:	lsr	x4, x4, #3
   1a474:	cmp	x21, x4
   1a478:	b.ls	1a498 <__sanitizer_symbolize_global@@Base+0x1eb0>  // b.plast
   1a47c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1a480:	mov	x3, x21
   1a484:	add	x2, x2, #0x74b
   1a488:	mov	w1, #0x1be                 	// #446
   1a48c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a490:	add	x0, x0, #0x98a
   1a494:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1a498:	b.ne	1a524 <__sanitizer_symbolize_global@@Base+0x1f3c>  // b.any
   1a49c:	add	x0, x21, #0x1
   1a4a0:	bl	13edc <__sanitizer_set_report_fd@@Base+0x363c>
   1a4a4:	mov	x20, x0
   1a4a8:	cbnz	x0, 1a4c4 <__sanitizer_symbolize_global@@Base+0x1edc>
   1a4ac:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a4b0:	mov	x4, #0x0                   	// #0
   1a4b4:	add	x2, x2, #0x9c7
   1a4b8:	mov	x3, #0x0                   	// #0
   1a4bc:	mov	w1, #0x1fc                 	// #508
   1a4c0:	b	1a48c <__sanitizer_symbolize_global@@Base+0x1ea4>
   1a4c4:	cmp	x21, x0
   1a4c8:	b.ls	1a4e4 <__sanitizer_symbolize_global@@Base+0x1efc>  // b.plast
   1a4cc:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a4d0:	mov	x4, x0
   1a4d4:	mov	x3, x21
   1a4d8:	add	x2, x2, #0x9e0
   1a4dc:	mov	w1, #0x1fd                 	// #509
   1a4e0:	b	1a48c <__sanitizer_symbolize_global@@Base+0x1ea4>
   1a4e4:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   1a4e8:	mov	x1, x0
   1a4ec:	lsl	x0, x20, #3
   1a4f0:	bl	c730 <__sancov_default_options@@Base+0x790>
   1a4f4:	mov	x1, x24
   1a4f8:	mov	x20, x0
   1a4fc:	mov	w2, #0x0                   	// #0
   1a500:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   1a504:	ldr	x1, [x19]
   1a508:	mov	x21, x0
   1a50c:	ldr	x2, [x19, #16]
   1a510:	lsl	x2, x2, #3
   1a514:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1a518:	ldp	x0, x1, [x19]
   1a51c:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1a520:	stp	x21, x20, [x19]
   1a524:	mov	x2, #0x8                   	// #8
   1a528:	ldr	x0, [x19, #16]
   1a52c:	ldr	x3, [x19]
   1a530:	add	x1, x0, #0x1
   1a534:	str	x1, [x19, #16]
   1a538:	mov	x1, x26
   1a53c:	add	x0, x3, x0, lsl #3
   1a540:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1a544:	add	x22, x22, #0x1
   1a548:	b	1a448 <__sanitizer_symbolize_global@@Base+0x1e60>
   1a54c:	ldp	x21, x22, [sp, #16]
   1a550:	ldp	x23, x24, [sp, #32]
   1a554:	ldp	x25, x26, [sp, #48]
   1a558:	ldr	x30, [sp, #64]
   1a55c:	ldp	x19, x20, [sp], #96
   1a560:	ret
   1a564:	stp	x19, x20, [sp, #-112]!
   1a568:	stp	x21, x22, [sp, #16]
   1a56c:	mov	x21, x0
   1a570:	ldrb	w0, [x0, #72]
   1a574:	stp	x23, x24, [sp, #32]
   1a578:	stp	x25, x26, [sp, #48]
   1a57c:	stp	x27, x30, [sp, #64]
   1a580:	cbz	w0, 1a5b0 <__sanitizer_symbolize_global@@Base+0x1fc8>
   1a584:	mov	x19, x1
   1a588:	add	x24, sp, #0x50
   1a58c:	add	x23, x21, #0x10
   1a590:	mov	w25, #0x1                   	// #1
   1a594:	cbz	x19, 1a768 <__sanitizer_symbolize_global@@Base+0x2180>
   1a598:	ldrb	w0, [x19]
   1a59c:	cmp	w0, #0x20
   1a5a0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   1a5a4:	b.ne	1a5d0 <__sanitizer_symbolize_global@@Base+0x1fe8>  // b.any
   1a5a8:	add	x19, x19, #0x1
   1a5ac:	b	1a598 <__sanitizer_symbolize_global@@Base+0x1fb0>
   1a5b0:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a5b4:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a5b8:	add	x2, x2, #0xe15
   1a5bc:	add	x0, x0, #0xdd1
   1a5c0:	mov	x4, #0x0                   	// #0
   1a5c4:	mov	x3, #0x0                   	// #0
   1a5c8:	mov	w1, #0x6a                  	// #106
   1a5cc:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1a5d0:	mov	x0, x19
   1a5d4:	mov	w1, #0xa                   	// #10
   1a5d8:	bl	1225c <__sanitizer_set_report_fd@@Base+0x19bc>
   1a5dc:	mov	x20, x0
   1a5e0:	cbnz	x0, 1a5f0 <__sanitizer_symbolize_global@@Base+0x2008>
   1a5e4:	mov	x0, x19
   1a5e8:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1a5ec:	add	x20, x19, x0
   1a5f0:	cmp	x19, x20
   1a5f4:	b.eq	1a758 <__sanitizer_symbolize_global@@Base+0x2170>  // b.none
   1a5f8:	ldrb	w0, [x19]
   1a5fc:	cmp	w0, #0x23
   1a600:	b.eq	1a758 <__sanitizer_symbolize_global@@Base+0x2170>  // b.none
   1a604:	mov	x22, x20
   1a608:	ldurb	w0, [x22, #-1]
   1a60c:	and	w1, w0, #0xfffffffb
   1a610:	cmp	w0, #0x20
   1a614:	ccmp	w1, #0x9, #0x4, ne  // ne = any
   1a618:	b.ne	1a628 <__sanitizer_symbolize_global@@Base+0x2040>  // b.any
   1a61c:	sub	x22, x22, #0x1
   1a620:	cmp	x19, x22
   1a624:	b.ne	1a608 <__sanitizer_symbolize_global@@Base+0x2020>  // b.any
   1a628:	ldr	w3, [x21, #8]
   1a62c:	mov	x0, #0x0                   	// #0
   1a630:	mov	w27, w0
   1a634:	cmp	w3, w0
   1a638:	b.le	1a6f4 <__sanitizer_symbolize_global@@Base+0x210c>
   1a63c:	ldr	x1, [x21]
   1a640:	ldr	x2, [x1, x0, lsl #3]
   1a644:	mov	x1, #0x0                   	// #0
   1a648:	sub	x2, x2, #0x1
   1a64c:	ldrb	w4, [x19, x1]
   1a650:	add	x6, x19, x1
   1a654:	add	x1, x1, #0x1
   1a658:	ldrb	w5, [x2, x1]
   1a65c:	cmp	w4, w5
   1a660:	b.eq	1a64c <__sanitizer_symbolize_global@@Base+0x2064>  // b.none
   1a664:	cbnz	w5, 1a6ec <__sanitizer_symbolize_global@@Base+0x2104>
   1a668:	cmp	w4, #0x3a
   1a66c:	b.ne	1a6ec <__sanitizer_symbolize_global@@Base+0x2104>  // b.any
   1a670:	add	x19, x6, #0x1
   1a674:	mov	x2, #0x20                  	// #32
   1a678:	mov	w1, #0x0                   	// #0
   1a67c:	mov	x0, x24
   1a680:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1a684:	ldr	x0, [x21]
   1a688:	sub	x22, x22, x19
   1a68c:	mov	x2, #0x0                   	// #0
   1a690:	mov	x1, #0x0                   	// #0
   1a694:	sxtw	x26, w27
   1a698:	ldr	x0, [x0, w27, sxtw #3]
   1a69c:	str	x0, [sp, #80]
   1a6a0:	add	x0, x22, #0x1
   1a6a4:	bl	c408 <__sancov_default_options@@Base+0x468>
   1a6a8:	mov	x2, x22
   1a6ac:	mov	x1, x19
   1a6b0:	str	x0, [sp, #88]
   1a6b4:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1a6b8:	ldr	x0, [sp, #88]
   1a6bc:	strb	wzr, [x0, x22]
   1a6c0:	ldr	x4, [x21, #24]
   1a6c4:	ldr	x3, [x23, #16]
   1a6c8:	lsr	x4, x4, #5
   1a6cc:	cmp	x3, x4
   1a6d0:	b.ls	1a718 <__sanitizer_symbolize_global@@Base+0x2130>  // b.plast
   1a6d4:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1a6d8:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a6dc:	add	x2, x2, #0x74b
   1a6e0:	add	x0, x0, #0x98a
   1a6e4:	mov	w1, #0x1be                 	// #446
   1a6e8:	b	1a5cc <__sanitizer_symbolize_global@@Base+0x1fe4>
   1a6ec:	add	x0, x0, #0x1
   1a6f0:	b	1a630 <__sanitizer_symbolize_global@@Base+0x2048>
   1a6f4:	cmp	w3, w0
   1a6f8:	b.ne	1a674 <__sanitizer_symbolize_global@@Base+0x208c>  // b.any
   1a6fc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1a700:	ldr	x0, [x0, #4024]
   1a704:	ldr	x1, [x0]
   1a708:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a70c:	add	x0, x0, #0xe2b
   1a710:	bl	16994 <OnPrint@@Base+0x288>
   1a714:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1a718:	b.ne	1a730 <__sanitizer_symbolize_global@@Base+0x2148>  // b.any
   1a71c:	add	x0, x3, #0x1
   1a720:	bl	13edc <__sanitizer_set_report_fd@@Base+0x363c>
   1a724:	mov	x1, x0
   1a728:	mov	x0, x23
   1a72c:	bl	1a97c <__sanitizer_symbolize_global@@Base+0x2394>
   1a730:	ldr	x0, [x23, #16]
   1a734:	add	x26, x21, x26
   1a738:	ldr	x3, [x23]
   1a73c:	add	x1, x0, #0x1
   1a740:	str	x1, [x23, #16]
   1a744:	mov	x2, #0x20                  	// #32
   1a748:	mov	x1, x24
   1a74c:	add	x0, x3, x0, lsl #5
   1a750:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1a754:	strb	w25, [x26, #40]
   1a758:	ldrb	w0, [x20]
   1a75c:	cbz	w0, 1a768 <__sanitizer_symbolize_global@@Base+0x2180>
   1a760:	add	x19, x20, #0x1
   1a764:	b	1a594 <__sanitizer_symbolize_global@@Base+0x1fac>
   1a768:	ldp	x21, x22, [sp, #16]
   1a76c:	ldp	x23, x24, [sp, #32]
   1a770:	ldp	x25, x26, [sp, #48]
   1a774:	ldp	x27, x30, [sp, #64]
   1a778:	ldp	x19, x20, [sp], #112
   1a77c:	ret
   1a780:	stp	x19, x30, [sp, #-16]!
   1a784:	mov	x19, x0
   1a788:	add	x0, x0, #0x10
   1a78c:	stur	w2, [x0, #-8]
   1a790:	stur	x1, [x0, #-16]
   1a794:	mov	x1, #0x1                   	// #1
   1a798:	stp	xzr, xzr, [x0, #8]
   1a79c:	str	xzr, [x19, #16]
   1a7a0:	bl	1a97c <__sanitizer_symbolize_global@@Base+0x2394>
   1a7a4:	ldrsw	x2, [x19, #8]
   1a7a8:	mov	w0, #0x1                   	// #1
   1a7ac:	strb	w0, [x19, #72]
   1a7b0:	cmp	x2, #0x20
   1a7b4:	b.ls	1a7d8 <__sanitizer_symbolize_global@@Base+0x21f0>  // b.plast
   1a7b8:	mov	x3, x2
   1a7bc:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a7c0:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a7c4:	add	x0, x0, #0xdd1
   1a7c8:	add	x2, x2, #0xe4d
   1a7cc:	mov	x4, #0x20                  	// #32
   1a7d0:	mov	w1, #0x1c                  	// #28
   1a7d4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1a7d8:	add	x0, x19, #0x28
   1a7dc:	mov	w1, #0x0                   	// #0
   1a7e0:	ldp	x19, x30, [sp], #16
   1a7e4:	b	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1a7e8:	stp	x19, x20, [sp, #-144]!
   1a7ec:	stp	x21, x22, [sp, #16]
   1a7f0:	mov	x22, x0
   1a7f4:	stp	x23, x24, [sp, #32]
   1a7f8:	str	x30, [sp, #48]
   1a7fc:	ldrb	w0, [x1]
   1a800:	cbz	w0, 1a930 <__sanitizer_symbolize_global@@Base+0x2348>
   1a804:	mov	x19, x1
   1a808:	mov	x1, #0x1000                	// #4096
   1a80c:	add	x0, sp, #0x50
   1a810:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
   1a814:	mov	x0, x19
   1a818:	add	x23, sp, #0x70
   1a81c:	bl	12ee8 <__sanitizer_set_report_fd@@Base+0x2648>
   1a820:	tst	w0, #0xff
   1a824:	b.ne	1a8ac <__sanitizer_symbolize_global@@Base+0x22c4>  // b.any
   1a828:	mov	x0, x19
   1a82c:	bl	15138 <__sanitizer_set_report_fd@@Base+0x4898>
   1a830:	ands	w20, w0, #0xff
   1a834:	b.ne	1a8ac <__sanitizer_symbolize_global@@Base+0x22c4>  // b.any
   1a838:	mov	x0, x23
   1a83c:	mov	x1, #0x1000                	// #4096
   1a840:	ldr	x24, [sp, #80]
   1a844:	ldr	x21, [sp, #96]
   1a848:	bl	7f80 <__asan_backtrace_open@plt+0x1470>
   1a84c:	ldr	x0, [sp, #112]
   1a850:	ldr	x1, [sp, #128]
   1a854:	bl	e1a0 <__sancov_default_options@@Base+0x2200>
   1a858:	cbz	x0, 1a89c <__sanitizer_symbolize_global@@Base+0x22b4>
   1a85c:	ldr	x0, [sp, #112]
   1a860:	sub	x21, x21, #0x1
   1a864:	mov	w20, #0x1                   	// #1
   1a868:	bl	dc98 <__sancov_default_options@@Base+0x1cf8>
   1a86c:	ldr	x1, [sp, #112]
   1a870:	sub	x2, x0, x1
   1a874:	mov	x0, x24
   1a878:	cmp	x2, x21
   1a87c:	csel	x2, x2, x21, ls  // ls = plast
   1a880:	bl	12374 <__sanitizer_set_report_fd@@Base+0x1ad4>
   1a884:	mov	x0, x24
   1a888:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1a88c:	mov	x1, x19
   1a890:	sub	x2, x21, x0
   1a894:	mov	x0, x24
   1a898:	bl	12374 <__sanitizer_set_report_fd@@Base+0x1ad4>
   1a89c:	ldp	x0, x1, [sp, #112]
   1a8a0:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1a8a4:	cbz	w20, 1a8ac <__sanitizer_symbolize_global@@Base+0x22c4>
   1a8a8:	ldr	x19, [sp, #80]
   1a8ac:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1a8b0:	ldr	x0, [x0, #3896]
   1a8b4:	ldr	w0, [x0]
   1a8b8:	cbz	w0, 1a8d8 <__sanitizer_symbolize_global@@Base+0x22f0>
   1a8bc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1a8c0:	mov	x2, x19
   1a8c4:	ldr	x0, [x0, #4024]
   1a8c8:	ldr	x1, [x0]
   1a8cc:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a8d0:	add	x0, x0, #0xe84
   1a8d4:	bl	16994 <OnPrint@@Base+0x288>
   1a8d8:	mov	x3, x23
   1a8dc:	add	x2, sp, #0x48
   1a8e0:	add	x1, sp, #0x40
   1a8e4:	mov	x0, x19
   1a8e8:	mov	x5, #0x0                   	// #0
   1a8ec:	mov	x4, #0x4000000             	// #67108864
   1a8f0:	bl	10734 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c60>
   1a8f4:	tst	w0, #0xff
   1a8f8:	b.ne	1a91c <__sanitizer_symbolize_global@@Base+0x2334>  // b.any
   1a8fc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1a900:	mov	x2, x19
   1a904:	ldr	x0, [x0, #4024]
   1a908:	ldr	x1, [x0]
   1a90c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1a910:	add	x0, x0, #0xea9
   1a914:	bl	16994 <OnPrint@@Base+0x288>
   1a918:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1a91c:	ldr	x1, [sp, #64]
   1a920:	mov	x0, x22
   1a924:	bl	1a564 <__sanitizer_symbolize_global@@Base+0x1f7c>
   1a928:	ldp	x0, x1, [sp, #80]
   1a92c:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1a930:	ldp	x21, x22, [sp, #16]
   1a934:	ldp	x23, x24, [sp, #32]
   1a938:	ldr	x30, [sp, #48]
   1a93c:	ldp	x19, x20, [sp], #144
   1a940:	ret
   1a944:	ldr	x4, [x0, #16]
   1a948:	mov	x3, x1
   1a94c:	cmp	x1, x4
   1a950:	b.cc	1a970 <__sanitizer_symbolize_global@@Base+0x2388>  // b.lo, b.ul, b.last
   1a954:	str	x30, [sp, #-16]!
   1a958:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a95c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a960:	add	x2, x2, #0x978
   1a964:	add	x0, x0, #0x98a
   1a968:	mov	w1, #0x1b6                 	// #438
   1a96c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1a970:	ldr	x0, [x0]
   1a974:	add	x0, x0, x1, lsl #5
   1a978:	ret
   1a97c:	stp	x19, x20, [sp, #-32]!
   1a980:	stp	x21, x30, [sp, #16]
   1a984:	cbnz	x1, 1a9a8 <__sanitizer_symbolize_global@@Base+0x23c0>
   1a988:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a98c:	add	x2, x2, #0x9c7
   1a990:	mov	x4, #0x0                   	// #0
   1a994:	mov	x3, #0x0                   	// #0
   1a998:	mov	w1, #0x1fc                 	// #508
   1a99c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a9a0:	add	x0, x0, #0x98a
   1a9a4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1a9a8:	ldr	x3, [x0, #16]
   1a9ac:	mov	x19, x0
   1a9b0:	mov	x20, x1
   1a9b4:	cmp	x1, x3
   1a9b8:	b.cs	1a9d0 <__sanitizer_symbolize_global@@Base+0x23e8>  // b.hs, b.nlast
   1a9bc:	mov	x4, x1
   1a9c0:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a9c4:	mov	w1, #0x1fd                 	// #509
   1a9c8:	add	x2, x2, #0x9e0
   1a9cc:	b	1a99c <__sanitizer_symbolize_global@@Base+0x23b4>
   1a9d0:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   1a9d4:	mov	x1, x0
   1a9d8:	lsl	x0, x20, #5
   1a9dc:	bl	c730 <__sancov_default_options@@Base+0x790>
   1a9e0:	mov	w2, #0x0                   	// #0
   1a9e4:	mov	x20, x0
   1a9e8:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1a9ec:	add	x1, x1, #0xa15
   1a9f0:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   1a9f4:	mov	x21, x0
   1a9f8:	ldr	x1, [x19]
   1a9fc:	ldr	x2, [x19, #16]
   1aa00:	lsl	x2, x2, #5
   1aa04:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1aa08:	ldp	x0, x1, [x19]
   1aa0c:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1aa10:	stp	x21, x20, [x19]
   1aa14:	ldp	x21, x30, [sp, #16]
   1aa18:	ldp	x19, x20, [sp], #32
   1aa1c:	ret
   1aa20:	stp	x19, x30, [sp, #-16]!
   1aa24:	mov	x19, x0
   1aa28:	mov	x2, #0x40                  	// #64
   1aa2c:	mov	w1, #0x0                   	// #0
   1aa30:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1aa34:	mov	x0, #0xffffffffffffffff    	// #-1
   1aa38:	str	x0, [x19, #40]
   1aa3c:	ldp	x19, x30, [sp], #16
   1aa40:	ret
   1aa44:	stp	x19, x30, [sp, #-16]!
   1aa48:	mov	x19, x0
   1aa4c:	mov	x1, #0x0                   	// #0
   1aa50:	ldr	x0, [x0, #8]
   1aa54:	bl	c618 <__sancov_default_options@@Base+0x678>
   1aa58:	ldr	x0, [x19, #32]
   1aa5c:	mov	x1, #0x0                   	// #0
   1aa60:	bl	c618 <__sancov_default_options@@Base+0x678>
   1aa64:	ldr	x0, [x19, #48]
   1aa68:	mov	x1, #0x0                   	// #0
   1aa6c:	bl	c618 <__sancov_default_options@@Base+0x678>
   1aa70:	mov	x0, x19
   1aa74:	mov	x2, #0x40                  	// #64
   1aa78:	mov	w1, #0x0                   	// #0
   1aa7c:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1aa80:	mov	x0, #0xffffffffffffffff    	// #-1
   1aa84:	str	x0, [x19, #40]
   1aa88:	ldp	x19, x30, [sp], #16
   1aa8c:	ret
   1aa90:	stp	x19, x20, [sp, #-32]!
   1aa94:	mov	x19, x0
   1aa98:	mov	w20, w3
   1aa9c:	mov	x0, x1
   1aaa0:	stp	x21, x30, [sp, #16]
   1aaa4:	mov	x21, x2
   1aaa8:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   1aaac:	stp	x0, x21, [x19, #8]
   1aab0:	str	w20, [x19, #24]
   1aab4:	ldp	x21, x30, [sp, #16]
   1aab8:	ldp	x19, x20, [sp], #32
   1aabc:	ret
   1aac0:	str	xzr, [x0], #8
   1aac4:	b	1aa20 <__sanitizer_symbolize_global@@Base+0x2438>
   1aac8:	stp	x19, x20, [sp, #-32]!
   1aacc:	mov	x2, #0x0                   	// #0
   1aad0:	mov	x20, x0
   1aad4:	mov	x1, #0x0                   	// #0
   1aad8:	mov	x0, #0x48                  	// #72
   1aadc:	str	x30, [sp, #16]
   1aae0:	bl	c408 <__sancov_default_options@@Base+0x468>
   1aae4:	mov	x19, x0
   1aae8:	bl	1aac0 <__sanitizer_symbolize_global@@Base+0x24d8>
   1aaec:	ldr	x30, [sp, #16]
   1aaf0:	mov	x0, x19
   1aaf4:	str	x20, [x19, #8]
   1aaf8:	ldp	x19, x20, [sp], #32
   1aafc:	ret
   1ab00:	stp	x19, x30, [sp, #-16]!
   1ab04:	mov	x19, x0
   1ab08:	add	x0, x0, #0x8
   1ab0c:	bl	1aa44 <__sanitizer_symbolize_global@@Base+0x245c>
   1ab10:	ldr	x0, [x19]
   1ab14:	cbz	x0, 1ab1c <__sanitizer_symbolize_global@@Base+0x2534>
   1ab18:	bl	1ab00 <__sanitizer_symbolize_global@@Base+0x2518>
   1ab1c:	mov	x0, x19
   1ab20:	mov	x1, #0x0                   	// #0
   1ab24:	ldp	x19, x30, [sp], #16
   1ab28:	b	c618 <__sancov_default_options@@Base+0x678>
   1ab2c:	mov	x2, #0x40                  	// #64
   1ab30:	mov	w1, #0x0                   	// #0
   1ab34:	b	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1ab38:	stp	x19, x30, [sp, #-16]!
   1ab3c:	mov	x19, x0
   1ab40:	mov	x1, #0x0                   	// #0
   1ab44:	ldr	x0, [x0]
   1ab48:	bl	c618 <__sancov_default_options@@Base+0x678>
   1ab4c:	ldr	x0, [x19, #24]
   1ab50:	mov	x1, #0x0                   	// #0
   1ab54:	bl	c618 <__sancov_default_options@@Base+0x678>
   1ab58:	ldr	x0, [x19, #40]
   1ab5c:	mov	x1, #0x0                   	// #0
   1ab60:	bl	c618 <__sancov_default_options@@Base+0x678>
   1ab64:	mov	x0, x19
   1ab68:	mov	x2, #0x40                  	// #64
   1ab6c:	ldp	x19, x30, [sp], #16
   1ab70:	mov	w1, #0x0                   	// #0
   1ab74:	b	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1ab78:	strb	wzr, [x0, #104]
   1ab7c:	ret
   1ab80:	ldr	x3, [x0, #224]
   1ab84:	cbnz	x3, 1ab98 <__sanitizer_symbolize_global@@Base+0x25b0>
   1ab88:	ldr	x3, [x0, #232]
   1ab8c:	cbnz	x3, 1ab98 <__sanitizer_symbolize_global@@Base+0x25b0>
   1ab90:	stp	x1, x2, [x0, #224]
   1ab94:	ret
   1ab98:	str	x30, [sp, #-16]!
   1ab9c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1aba0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1aba4:	add	x2, x2, #0xed4
   1aba8:	add	x0, x0, #0xf02
   1abac:	mov	x4, #0x0                   	// #0
   1abb0:	mov	x3, #0x0                   	// #0
   1abb4:	mov	w1, #0x4e                  	// #78
   1abb8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1abbc:	str	x1, [x0]
   1abc0:	ldr	x0, [x1, #224]
   1abc4:	cbz	x0, 1abd0 <__sanitizer_symbolize_global@@Base+0x25e8>
   1abc8:	mov	x16, x0
   1abcc:	br	x16
   1abd0:	ret
   1abd4:	ldr	x0, [x0]
   1abd8:	ldr	x0, [x0, #232]
   1abdc:	cbz	x0, 1abe8 <__sanitizer_symbolize_global@@Base+0x2600>
   1abe0:	mov	x16, x0
   1abe4:	br	x16
   1abe8:	ret
   1abec:	stp	x19, x20, [sp, #-32]!
   1abf0:	mov	x19, x0
   1abf4:	mov	x20, x1
   1abf8:	ldr	x0, [x0, #32]
   1abfc:	stp	x21, x30, [sp, #16]
   1ac00:	bl	13264 <__sanitizer_set_report_fd@@Base+0x29c4>
   1ac04:	ldr	x0, [x19, #24]
   1ac08:	cbnz	x0, 1ac58 <__sanitizer_symbolize_global@@Base+0x2670>
   1ac0c:	mov	x21, #0x0                   	// #0
   1ac10:	ldr	x0, [x19, #16]
   1ac14:	cmp	x21, x0
   1ac18:	b.cs	1ac74 <__sanitizer_symbolize_global@@Base+0x268c>  // b.hs, b.nlast
   1ac1c:	mov	x1, x21
   1ac20:	mov	x0, x19
   1ac24:	bl	1ad60 <__sanitizer_symbolize_global@@Base+0x2778>
   1ac28:	ldr	x0, [x0]
   1ac2c:	mov	x1, x20
   1ac30:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1ac34:	cbnz	w0, 1ac6c <__sanitizer_symbolize_global@@Base+0x2684>
   1ac38:	mov	x1, x21
   1ac3c:	mov	x0, x19
   1ac40:	bl	1ad60 <__sanitizer_symbolize_global@@Base+0x2778>
   1ac44:	ldr	x0, [x0]
   1ac48:	str	x0, [x19, #24]
   1ac4c:	ldp	x21, x30, [sp, #16]
   1ac50:	ldp	x19, x20, [sp], #32
   1ac54:	ret
   1ac58:	mov	x1, x20
   1ac5c:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1ac60:	cbnz	w0, 1ac0c <__sanitizer_symbolize_global@@Base+0x2624>
   1ac64:	ldr	x0, [x19, #24]
   1ac68:	b	1ac4c <__sanitizer_symbolize_global@@Base+0x2664>
   1ac6c:	add	x21, x21, #0x1
   1ac70:	b	1ac10 <__sanitizer_symbolize_global@@Base+0x2628>
   1ac74:	mov	x0, x20
   1ac78:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   1ac7c:	ldp	x4, x3, [x19, #8]
   1ac80:	mov	x20, x19
   1ac84:	str	x0, [x20, #24]!
   1ac88:	lsr	x4, x4, #3
   1ac8c:	cmp	x3, x4
   1ac90:	b.ls	1acac <__sanitizer_symbolize_global@@Base+0x26c4>  // b.plast
   1ac94:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1ac98:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1ac9c:	add	x2, x2, #0x74b
   1aca0:	add	x0, x0, #0x98a
   1aca4:	mov	w1, #0x1be                 	// #446
   1aca8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1acac:	b.ne	1acc4 <__sanitizer_symbolize_global@@Base+0x26dc>  // b.any
   1acb0:	add	x0, x3, #0x1
   1acb4:	bl	13edc <__sanitizer_set_report_fd@@Base+0x363c>
   1acb8:	mov	x1, x0
   1acbc:	mov	x0, x19
   1acc0:	bl	1ad98 <__sanitizer_symbolize_global@@Base+0x27b0>
   1acc4:	ldr	x0, [x19, #16]
   1acc8:	mov	x2, #0x8                   	// #8
   1accc:	ldr	x3, [x19]
   1acd0:	add	x1, x0, #0x1
   1acd4:	str	x1, [x19, #16]
   1acd8:	mov	x1, x20
   1acdc:	add	x0, x3, x0, lsl #3
   1ace0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1ace4:	b	1ac64 <__sanitizer_symbolize_global@@Base+0x267c>
   1ace8:	stp	x19, x20, [sp, #-32]!
   1acec:	mov	x19, x0
   1acf0:	mov	x20, x1
   1acf4:	stp	x21, x30, [sp, #16]
   1acf8:	mov	x1, #0x1                   	// #1
   1acfc:	add	x21, x0, #0x70
   1ad00:	stp	xzr, xzr, [x0]
   1ad04:	str	xzr, [x0, #16]
   1ad08:	bl	1ad98 <__sanitizer_symbolize_global@@Base+0x27b0>
   1ad0c:	stp	xzr, x21, [x19, #24]
   1ad10:	ldr	x0, [x19, #8]
   1ad14:	lsr	x0, x0, #3
   1ad18:	cmp	x0, #0x3e7
   1ad1c:	b.hi	1ad2c <__sanitizer_symbolize_global@@Base+0x2744>  // b.pmore
   1ad20:	mov	x0, x19
   1ad24:	mov	x1, #0x3e8                 	// #1000
   1ad28:	bl	1ad98 <__sanitizer_symbolize_global@@Base+0x27b0>
   1ad2c:	strb	wzr, [x19, #64]
   1ad30:	mov	x0, x21
   1ad34:	strb	wzr, [x19, #96]
   1ad38:	strb	wzr, [x19, #104]
   1ad3c:	bl	1316c <__sanitizer_set_report_fd@@Base+0x28cc>
   1ad40:	ldp	x0, x1, [x20]
   1ad44:	stp	x0, x1, [x19, #200]
   1ad48:	ldr	x0, [x20, #16]
   1ad4c:	ldp	x21, x30, [sp, #16]
   1ad50:	stp	x0, xzr, [x19, #216]
   1ad54:	str	xzr, [x19, #232]
   1ad58:	ldp	x19, x20, [sp], #32
   1ad5c:	ret
   1ad60:	ldr	x4, [x0, #16]
   1ad64:	mov	x3, x1
   1ad68:	cmp	x1, x4
   1ad6c:	b.cc	1ad8c <__sanitizer_symbolize_global@@Base+0x27a4>  // b.lo, b.ul, b.last
   1ad70:	str	x30, [sp, #-16]!
   1ad74:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1ad78:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1ad7c:	add	x2, x2, #0x978
   1ad80:	add	x0, x0, #0x98a
   1ad84:	mov	w1, #0x1b6                 	// #438
   1ad88:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1ad8c:	ldr	x0, [x0]
   1ad90:	add	x0, x0, x1, lsl #3
   1ad94:	ret
   1ad98:	stp	x19, x20, [sp, #-48]!
   1ad9c:	mov	x4, x1
   1ada0:	stp	x21, x22, [sp, #16]
   1ada4:	str	x30, [sp, #32]
   1ada8:	cbnz	x1, 1adc8 <__sanitizer_symbolize_global@@Base+0x27e0>
   1adac:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1adb0:	add	x2, x2, #0x9c7
   1adb4:	mov	x3, #0x0                   	// #0
   1adb8:	mov	w1, #0x1fc                 	// #508
   1adbc:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1adc0:	add	x0, x0, #0x98a
   1adc4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1adc8:	ldr	x3, [x0, #16]
   1adcc:	mov	x20, x0
   1add0:	cmp	x1, x3
   1add4:	b.cs	1ade8 <__sanitizer_symbolize_global@@Base+0x2800>  // b.hs, b.nlast
   1add8:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1addc:	mov	w1, #0x1fd                 	// #509
   1ade0:	add	x2, x2, #0x9e0
   1ade4:	b	1adbc <__sanitizer_symbolize_global@@Base+0x27d4>
   1ade8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1adec:	lsl	x19, x1, #3
   1adf0:	mov	x21, x0
   1adf4:	ldr	x22, [x0, #4016]
   1adf8:	ldr	x1, [x22]
   1adfc:	cbnz	x1, 1ae08 <__sanitizer_symbolize_global@@Base+0x2820>
   1ae00:	bl	1352c <__sanitizer_set_report_fd@@Base+0x2c8c>
   1ae04:	str	x0, [x22]
   1ae08:	ldr	x0, [x21, #4016]
   1ae0c:	ldr	x0, [x0]
   1ae10:	sub	x4, x0, #0x1
   1ae14:	tst	x4, x0
   1ae18:	b.eq	1ae2c <__sanitizer_symbolize_global@@Base+0x2844>  // b.none
   1ae1c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1ae20:	add	x0, x0, #0x9fe
   1ae24:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   1ae28:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1ae2c:	add	x19, x19, x4
   1ae30:	neg	x0, x0
   1ae34:	and	x19, x19, x0
   1ae38:	mov	w2, #0x0                   	// #0
   1ae3c:	mov	x0, x19
   1ae40:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1ae44:	add	x1, x1, #0xa15
   1ae48:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   1ae4c:	ldr	x1, [x20]
   1ae50:	mov	x21, x0
   1ae54:	ldr	x2, [x20, #16]
   1ae58:	lsl	x2, x2, #3
   1ae5c:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1ae60:	ldp	x0, x1, [x20]
   1ae64:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1ae68:	ldr	x30, [sp, #32]
   1ae6c:	stp	x21, x19, [x20]
   1ae70:	ldp	x21, x22, [sp, #16]
   1ae74:	ldp	x19, x20, [sp], #48
   1ae78:	ret
   1ae7c:	ret
   1ae80:	stp	x19, x20, [sp, #-80]!
   1ae84:	mov	x19, x0
   1ae88:	adrp	x20, 1a000 <__sanitizer_symbolize_global@@Base+0x1a18>
   1ae8c:	ldr	x0, [x0, #16]
   1ae90:	add	x20, x20, #0xe7c
   1ae94:	stp	x21, x22, [sp, #16]
   1ae98:	add	x22, sp, #0x38
   1ae9c:	mov	x21, x1
   1aea0:	mov	x4, x22
   1aea4:	mov	x3, x20
   1aea8:	str	x30, [sp, #32]
   1aeac:	stp	x2, x2, [sp, #56]
   1aeb0:	adrp	x2, 1b000 <__sanitizer_symbolize_global@@Base+0x2a18>
   1aeb4:	add	x2, x2, #0x190
   1aeb8:	str	xzr, [sp, #72]
   1aebc:	bl	64a0 <__asan_backtrace_pcinfo@plt>
   1aec0:	ldr	x0, [sp, #72]
   1aec4:	cbnz	x0, 1af00 <__sanitizer_symbolize_global@@Base+0x2918>
   1aec8:	ldr	x0, [x19, #16]
   1aecc:	mov	x4, x22
   1aed0:	mov	x3, x20
   1aed4:	mov	x1, x21
   1aed8:	adrp	x2, 1b000 <__sanitizer_symbolize_global@@Base+0x2a18>
   1aedc:	add	x2, x2, #0x148
   1aee0:	bl	65e0 <__asan_backtrace_syminfo@plt>
   1aee4:	ldr	x0, [sp, #72]
   1aee8:	cmp	x0, #0x0
   1aeec:	cset	w0, ne  // ne = any
   1aef0:	ldp	x21, x22, [sp, #16]
   1aef4:	ldr	x30, [sp, #32]
   1aef8:	ldp	x19, x20, [sp], #80
   1aefc:	ret
   1af00:	mov	w0, #0x1                   	// #1
   1af04:	b	1aef0 <__sanitizer_symbolize_global@@Base+0x2908>
   1af08:	ldr	x0, [x0, #16]
   1af0c:	str	x30, [sp, #-16]!
   1af10:	mov	x4, x2
   1af14:	adrp	x3, 1a000 <__sanitizer_symbolize_global@@Base+0x1a18>
   1af18:	adrp	x2, 1b000 <__sanitizer_symbolize_global@@Base+0x2a18>
   1af1c:	add	x3, x3, #0xe7c
   1af20:	add	x2, x2, #0x204
   1af24:	bl	65e0 <__asan_backtrace_syminfo@plt>
   1af28:	mov	w0, #0x1                   	// #1
   1af2c:	ldr	x30, [sp], #16
   1af30:	ret
   1af34:	stp	x19, x20, [sp, #-32]!
   1af38:	mov	x19, x0
   1af3c:	ldr	x0, [x0, #8]
   1af40:	stp	x21, x30, [sp, #16]
   1af44:	cbnz	x0, 1af68 <__sanitizer_symbolize_global@@Base+0x2980>
   1af48:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1af4c:	add	x2, x2, #0xf44
   1af50:	mov	x4, #0x0                   	// #0
   1af54:	mov	x3, #0x0                   	// #0
   1af58:	mov	w1, #0x5c                  	// #92
   1af5c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1af60:	add	x0, x0, #0xf54
   1af64:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1af68:	ldr	x0, [x19, #16]
   1af6c:	mov	x20, x1
   1af70:	cbz	x0, 1afa0 <__sanitizer_symbolize_global@@Base+0x29b8>
   1af74:	mov	x0, x1
   1af78:	bl	1aac8 <__sanitizer_symbolize_global@@Base+0x24e0>
   1af7c:	mov	x21, x0
   1af80:	ldr	x0, [x19]
   1af84:	ldp	x1, x2, [x0, #16]
   1af88:	ldr	w3, [x0, #32]
   1af8c:	add	x0, x21, #0x8
   1af90:	bl	1aa90 <__sanitizer_symbolize_global@@Base+0x24a8>
   1af94:	ldr	x0, [x19, #8]
   1af98:	str	x21, [x0]
   1af9c:	str	x21, [x19, #8]
   1afa0:	ldr	x0, [x19]
   1afa4:	ldr	x4, [x0, #8]
   1afa8:	cmp	x20, x4
   1afac:	b.eq	1afc4 <__sanitizer_symbolize_global@@Base+0x29dc>  // b.none
   1afb0:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1afb4:	mov	x3, x20
   1afb8:	add	x2, x2, #0xfa3
   1afbc:	mov	w1, #0x65                  	// #101
   1afc0:	b	1af5c <__sanitizer_symbolize_global@@Base+0x2974>
   1afc4:	ldr	x0, [x19, #8]
   1afc8:	ldr	x4, [x0, #8]
   1afcc:	cmp	x20, x4
   1afd0:	b.eq	1afe8 <__sanitizer_symbolize_global@@Base+0x2a00>  // b.none
   1afd4:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1afd8:	mov	x3, x20
   1afdc:	add	x2, x2, #0xfc7
   1afe0:	mov	w1, #0x66                  	// #102
   1afe4:	b	1af5c <__sanitizer_symbolize_global@@Base+0x2974>
   1afe8:	add	x0, x0, #0x8
   1afec:	ldp	x21, x30, [sp, #16]
   1aff0:	ldp	x19, x20, [sp], #32
   1aff4:	ret
   1aff8:	stp	x19, x20, [sp, #-48]!
   1affc:	mov	x19, x2
   1b000:	mov	x20, x1
   1b004:	add	x2, x1, #0x1
   1b008:	stp	x21, x22, [sp, #16]
   1b00c:	mov	x21, x0
   1b010:	ldp	x0, x1, [x19, #8]
   1b014:	str	x30, [sp, #32]
   1b018:	add	x2, x2, x0
   1b01c:	cmp	x1, x2
   1b020:	b.cs	1b064 <__sanitizer_symbolize_global@@Base+0x2a7c>  // b.hs, b.nlast
   1b024:	lsl	x1, x1, #1
   1b028:	cmp	x1, x2
   1b02c:	csel	x0, x2, x1, cc  // cc = lo, ul, last
   1b030:	str	x0, [x19, #16]
   1b034:	mov	x1, #0x0                   	// #0
   1b038:	mov	x2, #0x0                   	// #0
   1b03c:	bl	c408 <__sancov_default_options@@Base+0x468>
   1b040:	mov	x22, x0
   1b044:	ldr	x1, [x19]
   1b048:	cbz	x1, 1b060 <__sanitizer_symbolize_global@@Base+0x2a78>
   1b04c:	ldr	x2, [x19, #8]
   1b050:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1b054:	ldr	x0, [x19]
   1b058:	mov	x1, #0x0                   	// #0
   1b05c:	bl	c618 <__sancov_default_options@@Base+0x678>
   1b060:	str	x22, [x19]
   1b064:	ldp	x3, x0, [x19]
   1b068:	mov	x2, x20
   1b06c:	mov	x1, x21
   1b070:	add	x0, x3, x0
   1b074:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1b078:	ldp	x0, x1, [x19]
   1b07c:	add	x0, x0, x20
   1b080:	strb	wzr, [x0, x1]
   1b084:	ldr	x1, [x19, #8]
   1b088:	ldp	x21, x22, [sp, #16]
   1b08c:	add	x20, x1, x20
   1b090:	ldr	x30, [sp, #32]
   1b094:	str	x20, [x19, #8]
   1b098:	ldp	x19, x20, [sp], #48
   1b09c:	ret
   1b0a0:	stp	x19, x20, [sp, #-64]!
   1b0a4:	adrp	x2, 1a000 <__sanitizer_symbolize_global@@Base+0x1a18>
   1b0a8:	mov	x20, x0
   1b0ac:	add	x3, sp, #0x28
   1b0b0:	add	x2, x2, #0xff8
   1b0b4:	stp	x21, x30, [sp, #16]
   1b0b8:	and	w21, w1, #0xff
   1b0bc:	mov	w1, #0x3                   	// #3
   1b0c0:	stp	xzr, xzr, [sp, #40]
   1b0c4:	str	xzr, [sp, #56]
   1b0c8:	bl	6ad0 <__asan_cplus_demangle_v3_callback@plt>
   1b0cc:	ldr	x19, [sp, #40]
   1b0d0:	cbz	w0, 1b110 <__sanitizer_symbolize_global@@Base+0x2b28>
   1b0d4:	ldp	x0, x1, [sp, #48]
   1b0d8:	add	x0, x0, #0x40
   1b0dc:	cmp	x0, x1
   1b0e0:	b.hi	1b0fc <__sanitizer_symbolize_global@@Base+0x2b14>  // b.pmore
   1b0e4:	mov	x0, x19
   1b0e8:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   1b0ec:	mov	x19, x0
   1b0f0:	mov	x1, #0x0                   	// #0
   1b0f4:	ldr	x0, [sp, #40]
   1b0f8:	bl	c618 <__sancov_default_options@@Base+0x678>
   1b0fc:	cbz	x19, 1b120 <__sanitizer_symbolize_global@@Base+0x2b38>
   1b100:	mov	x0, x19
   1b104:	ldp	x21, x30, [sp, #16]
   1b108:	ldp	x19, x20, [sp], #64
   1b10c:	ret
   1b110:	cbz	x19, 1b120 <__sanitizer_symbolize_global@@Base+0x2b38>
   1b114:	mov	x0, x19
   1b118:	mov	x1, #0x0                   	// #0
   1b11c:	bl	c618 <__sancov_default_options@@Base+0x678>
   1b120:	cbz	w21, 1b134 <__sanitizer_symbolize_global@@Base+0x2b4c>
   1b124:	mov	x0, x20
   1b128:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   1b12c:	mov	x19, x0
   1b130:	b	1b100 <__sanitizer_symbolize_global@@Base+0x2b18>
   1b134:	mov	x19, #0x0                   	// #0
   1b138:	b	1b100 <__sanitizer_symbolize_global@@Base+0x2b18>
   1b13c:	mov	x0, x1
   1b140:	mov	w1, #0x0                   	// #0
   1b144:	b	1b0a0 <__sanitizer_symbolize_global@@Base+0x2ab8>
   1b148:	cbz	x2, 1b18c <__sanitizer_symbolize_global@@Base+0x2ba4>
   1b14c:	stp	x19, x20, [sp, #-32]!
   1b150:	mov	x20, x2
   1b154:	mov	x19, x0
   1b158:	stp	x21, x30, [sp, #16]
   1b15c:	bl	1af34 <__sanitizer_symbolize_global@@Base+0x294c>
   1b160:	mov	x21, x0
   1b164:	mov	w1, #0x1                   	// #1
   1b168:	mov	x0, x20
   1b16c:	bl	1b0a0 <__sanitizer_symbolize_global@@Base+0x2ab8>
   1b170:	str	x0, [x21, #32]
   1b174:	ldr	x0, [x19, #16]
   1b178:	ldp	x21, x30, [sp, #16]
   1b17c:	add	x0, x0, #0x1
   1b180:	str	x0, [x19, #16]
   1b184:	ldp	x19, x20, [sp], #32
   1b188:	ret
   1b18c:	ret
   1b190:	cbz	x4, 1b1fc <__sanitizer_symbolize_global@@Base+0x2c14>
   1b194:	stp	x19, x20, [sp, #-48]!
   1b198:	mov	x20, x0
   1b19c:	stp	x21, x22, [sp, #16]
   1b1a0:	mov	x22, x4
   1b1a4:	mov	x21, x2
   1b1a8:	stp	x23, x30, [sp, #32]
   1b1ac:	mov	w23, w3
   1b1b0:	bl	1af34 <__sanitizer_symbolize_global@@Base+0x294c>
   1b1b4:	mov	x19, x0
   1b1b8:	mov	w1, #0x1                   	// #1
   1b1bc:	mov	x0, x22
   1b1c0:	bl	1b0a0 <__sanitizer_symbolize_global@@Base+0x2ab8>
   1b1c4:	str	x0, [x19, #32]
   1b1c8:	cbz	x21, 1b1d8 <__sanitizer_symbolize_global@@Base+0x2bf0>
   1b1cc:	mov	x0, x21
   1b1d0:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   1b1d4:	str	x0, [x19, #48]
   1b1d8:	ldr	x0, [x20, #16]
   1b1dc:	ldp	x21, x22, [sp, #16]
   1b1e0:	str	w23, [x19, #56]
   1b1e4:	add	x0, x0, #0x1
   1b1e8:	ldp	x23, x30, [sp, #32]
   1b1ec:	str	x0, [x20, #16]
   1b1f0:	mov	w0, #0x0                   	// #0
   1b1f4:	ldp	x19, x20, [sp], #48
   1b1f8:	ret
   1b1fc:	mov	w0, #0x0                   	// #0
   1b200:	ret
   1b204:	cmp	x2, #0x0
   1b208:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   1b20c:	b.eq	1b244 <__sanitizer_symbolize_global@@Base+0x2c5c>  // b.none
   1b210:	stp	x19, x20, [sp, #-32]!
   1b214:	mov	x19, x0
   1b218:	mov	x20, x3
   1b21c:	mov	x0, x2
   1b220:	mov	w1, #0x1                   	// #1
   1b224:	stp	x21, x30, [sp, #16]
   1b228:	mov	x21, x4
   1b22c:	bl	1b0a0 <__sanitizer_symbolize_global@@Base+0x2ab8>
   1b230:	stp	x0, x20, [x19, #40]
   1b234:	str	x21, [x19, #56]
   1b238:	ldp	x21, x30, [sp, #16]
   1b23c:	ldp	x19, x20, [sp], #32
   1b240:	ret
   1b244:	ret
   1b248:	stp	x19, x20, [sp, #-32]!
   1b24c:	mov	x3, #0x0                   	// #0
   1b250:	mov	x20, x0
   1b254:	adrp	x2, 1a000 <__sanitizer_symbolize_global@@Base+0x1a18>
   1b258:	mov	w1, #0x0                   	// #0
   1b25c:	add	x2, x2, #0xe7c
   1b260:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1b264:	add	x0, x0, #0x438
   1b268:	str	x30, [sp, #16]
   1b26c:	bl	6760 <__asan_backtrace_create_state@plt>
   1b270:	mov	x19, x0
   1b274:	cbz	x0, 1b298 <__sanitizer_symbolize_global@@Base+0x2cb0>
   1b278:	mov	x1, #0x18                  	// #24
   1b27c:	mov	x0, x20
   1b280:	bl	c108 <__sancov_default_options@@Base+0x168>
   1b284:	str	x19, [x0, #16]
   1b288:	mov	x19, x0
   1b28c:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   1b290:	add	x1, x1, #0xe68
   1b294:	stp	x1, xzr, [x0]
   1b298:	mov	x0, x19
   1b29c:	ldr	x30, [sp, #16]
   1b2a0:	ldp	x19, x20, [sp], #32
   1b2a4:	ret
   1b2a8:	ret
   1b2ac:	stp	x19, x20, [sp, #-80]!
   1b2b0:	stp	x21, x22, [sp, #16]
   1b2b4:	stp	x23, x24, [sp, #32]
   1b2b8:	stp	x25, x30, [sp, #48]
   1b2bc:	cbz	x2, 1b378 <__sanitizer_symbolize_global@@Base+0x2d90>
   1b2c0:	mov	x21, x0
   1b2c4:	mov	x22, x1
   1b2c8:	mov	x23, x2
   1b2cc:	add	x24, sp, #0x48
   1b2d0:	sub	x25, x2, #0x1
   1b2d4:	mov	x19, #0x0                   	// #0
   1b2d8:	ldr	w0, [x21, #16]
   1b2dc:	mov	x3, x24
   1b2e0:	sub	x2, x25, x19
   1b2e4:	add	x1, x22, x19
   1b2e8:	mov	x4, #0x0                   	// #0
   1b2ec:	str	xzr, [sp, #72]
   1b2f0:	bl	14d64 <__sanitizer_set_report_fd@@Base+0x44c4>
   1b2f4:	ands	w20, w0, #0xff
   1b2f8:	b.eq	1b304 <__sanitizer_symbolize_global@@Base+0x2d1c>  // b.none
   1b2fc:	ldr	x0, [sp, #72]
   1b300:	cbnz	x0, 1b330 <__sanitizer_symbolize_global@@Base+0x2d48>
   1b304:	ldr	w1, [x21, #16]
   1b308:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1b30c:	mov	w20, #0x0                   	// #0
   1b310:	add	x0, x0, #0x8a
   1b314:	bl	16a18 <OnPrint@@Base+0x30c>
   1b318:	mov	w0, w20
   1b31c:	ldp	x21, x22, [sp, #16]
   1b320:	ldp	x23, x24, [sp, #32]
   1b324:	ldp	x25, x30, [sp, #48]
   1b328:	ldp	x19, x20, [sp], #80
   1b32c:	ret
   1b330:	add	x19, x19, x0
   1b334:	mov	x1, x22
   1b338:	ldr	x0, [x21]
   1b33c:	mov	x2, x19
   1b340:	ldr	x3, [x0]
   1b344:	mov	x0, x21
   1b348:	blr	x3
   1b34c:	tst	w0, #0xff
   1b350:	b.ne	1b370 <__sanitizer_symbolize_global@@Base+0x2d88>  // b.any
   1b354:	add	x0, x19, #0x1
   1b358:	cmp	x23, x0
   1b35c:	b.ne	1b2d8 <__sanitizer_symbolize_global@@Base+0x2cf0>  // b.any
   1b360:	mov	x19, #0x0                   	// #0
   1b364:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1b368:	add	x0, x0, #0xb8
   1b36c:	bl	16a18 <OnPrint@@Base+0x30c>
   1b370:	strb	wzr, [x22, x19]
   1b374:	b	1b318 <__sanitizer_symbolize_global@@Base+0x2d30>
   1b378:	mov	w20, #0x1                   	// #1
   1b37c:	b	1b318 <__sanitizer_symbolize_global@@Base+0x2d30>
   1b380:	stp	x19, x20, [sp, #-32]!
   1b384:	mov	x20, x0
   1b388:	mov	x19, #0x0                   	// #0
   1b38c:	stp	x21, x30, [sp, #16]
   1b390:	mov	x21, x1
   1b394:	ldr	x0, [x20, #16]
   1b398:	cmp	x19, x0
   1b39c:	b.cs	1b3d8 <__sanitizer_symbolize_global@@Base+0x2df0>  // b.hs, b.nlast
   1b3a0:	mov	x1, x19
   1b3a4:	mov	x0, x20
   1b3a8:	bl	1c200 <__sanitizer_symbolize_global@@Base+0x3c18>
   1b3ac:	mov	x1, x21
   1b3b0:	bl	df5c <__sancov_default_options@@Base+0x1fbc>
   1b3b4:	tst	w0, #0xff
   1b3b8:	b.eq	1b3d0 <__sanitizer_symbolize_global@@Base+0x2de8>  // b.none
   1b3bc:	mov	x1, x19
   1b3c0:	mov	x0, x20
   1b3c4:	ldp	x21, x30, [sp, #16]
   1b3c8:	ldp	x19, x20, [sp], #32
   1b3cc:	b	1c200 <__sanitizer_symbolize_global@@Base+0x3c18>
   1b3d0:	add	x19, x19, #0x1
   1b3d4:	b	1b394 <__sanitizer_symbolize_global@@Base+0x2dac>
   1b3d8:	mov	x0, #0x0                   	// #0
   1b3dc:	ldp	x21, x30, [sp, #16]
   1b3e0:	ldp	x19, x20, [sp], #32
   1b3e4:	ret
   1b3e8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1b3ec:	stp	x19, x20, [sp, #-32]!
   1b3f0:	mov	w3, #0x1                   	// #1
   1b3f4:	ldr	x0, [x1, #3984]
   1b3f8:	str	x30, [sp, #16]
   1b3fc:	ldxrb	w2, [x0]
   1b400:	stxrb	w4, w3, [x0]
   1b404:	cbnz	w4, 1b3fc <__sanitizer_symbolize_global@@Base+0x2e14>
   1b408:	dmb	ish
   1b40c:	tst	w2, #0xff
   1b410:	mov	x19, x1
   1b414:	b.eq	1b41c <__sanitizer_symbolize_global@@Base+0x2e34>  // b.none
   1b418:	bl	b734 <__ubsan_handle_cfi_bad_type@@Base+0x534>
   1b41c:	adrp	x20, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1b420:	ldr	x20, [x20, #3936]
   1b424:	ldr	x0, [x20]
   1b428:	cbnz	x0, 1b458 <__sanitizer_symbolize_global@@Base+0x2e70>
   1b42c:	bl	1c5f4 <__sanitizer_symbolize_global@@Base+0x400c>
   1b430:	str	x0, [x20]
   1b434:	cbnz	x0, 1b458 <__sanitizer_symbolize_global@@Base+0x2e70>
   1b438:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1b43c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1b440:	add	x2, x2, #0xde
   1b444:	add	x0, x0, #0xf5
   1b448:	mov	x4, #0x0                   	// #0
   1b44c:	mov	x3, #0x0                   	// #0
   1b450:	mov	w1, #0x17                  	// #23
   1b454:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1b458:	dmb	ish
   1b45c:	ldr	x1, [x19, #3984]
   1b460:	strb	wzr, [x1]
   1b464:	ldr	x30, [sp, #16]
   1b468:	ldp	x19, x20, [sp], #32
   1b46c:	ret
   1b470:	stp	x19, x20, [sp, #-32]!
   1b474:	mov	x20, x0
   1b478:	stp	x21, x30, [sp, #16]
   1b47c:	mov	x21, x2
   1b480:	bl	12280 <__sanitizer_set_report_fd@@Base+0x19e0>
   1b484:	mov	x2, #0x0                   	// #0
   1b488:	mov	x19, x0
   1b48c:	mov	x1, #0x0                   	// #0
   1b490:	add	x0, x0, #0x1
   1b494:	bl	c408 <__sancov_default_options@@Base+0x468>
   1b498:	str	x0, [x21]
   1b49c:	mov	x1, x20
   1b4a0:	mov	x2, x19
   1b4a4:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1b4a8:	ldr	x0, [x21]
   1b4ac:	strb	wzr, [x0, x19]
   1b4b0:	add	x0, x20, x19
   1b4b4:	ldrb	w1, [x20, x19]
   1b4b8:	cbz	w1, 1b4c0 <__sanitizer_symbolize_global@@Base+0x2ed8>
   1b4bc:	add	x0, x0, #0x1
   1b4c0:	ldp	x21, x30, [sp, #16]
   1b4c4:	ldp	x19, x20, [sp], #32
   1b4c8:	ret
   1b4cc:	stp	x19, x20, [sp, #-48]!
   1b4d0:	mov	x20, x2
   1b4d4:	add	x2, sp, #0x28
   1b4d8:	str	x30, [sp, #16]
   1b4dc:	bl	1b470 <__sanitizer_symbolize_global@@Base+0x2e88>
   1b4e0:	mov	x19, x0
   1b4e4:	ldr	x0, [sp, #40]
   1b4e8:	cbz	x0, 1b4f4 <__sanitizer_symbolize_global@@Base+0x2f0c>
   1b4ec:	bl	1265c <__sanitizer_set_report_fd@@Base+0x1dbc>
   1b4f0:	str	w0, [x20]
   1b4f4:	ldr	x0, [sp, #40]
   1b4f8:	mov	x1, #0x0                   	// #0
   1b4fc:	bl	c618 <__sancov_default_options@@Base+0x678>
   1b500:	mov	x0, x19
   1b504:	ldr	x30, [sp, #16]
   1b508:	ldp	x19, x20, [sp], #48
   1b50c:	ret
   1b510:	stp	x19, x20, [sp, #-48]!
   1b514:	mov	x20, x2
   1b518:	add	x2, sp, #0x28
   1b51c:	str	x30, [sp, #16]
   1b520:	bl	1b470 <__sanitizer_symbolize_global@@Base+0x2e88>
   1b524:	mov	x19, x0
   1b528:	ldr	x0, [sp, #40]
   1b52c:	cbz	x0, 1b538 <__sanitizer_symbolize_global@@Base+0x2f50>
   1b530:	bl	1265c <__sanitizer_set_report_fd@@Base+0x1dbc>
   1b534:	str	x0, [x20]
   1b538:	ldr	x0, [sp, #40]
   1b53c:	mov	x1, #0x0                   	// #0
   1b540:	bl	c618 <__sancov_default_options@@Base+0x678>
   1b544:	mov	x0, x19
   1b548:	ldr	x30, [sp, #16]
   1b54c:	ldp	x19, x20, [sp], #48
   1b550:	ret
   1b554:	stp	x19, x20, [sp, #-48]!
   1b558:	mov	x20, x0
   1b55c:	stp	x21, x22, [sp, #16]
   1b560:	mov	x22, x1
   1b564:	mov	x21, x2
   1b568:	str	x30, [sp, #32]
   1b56c:	bl	124f8 <__sanitizer_set_report_fd@@Base+0x1c58>
   1b570:	cbz	x0, 1b5cc <__sanitizer_symbolize_global@@Base+0x2fe4>
   1b574:	sub	x19, x0, x20
   1b578:	mov	x2, #0x0                   	// #0
   1b57c:	mov	x1, #0x0                   	// #0
   1b580:	add	x0, x19, #0x1
   1b584:	bl	c408 <__sancov_default_options@@Base+0x468>
   1b588:	str	x0, [x21]
   1b58c:	mov	x2, x19
   1b590:	mov	x1, x20
   1b594:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1b598:	ldr	x0, [x21]
   1b59c:	add	x21, x20, x19
   1b5a0:	strb	wzr, [x0, x19]
   1b5a4:	ldrb	w0, [x20, x19]
   1b5a8:	cbz	w0, 1b5b8 <__sanitizer_symbolize_global@@Base+0x2fd0>
   1b5ac:	mov	x0, x22
   1b5b0:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1b5b4:	add	x21, x21, x0
   1b5b8:	mov	x0, x21
   1b5bc:	ldp	x21, x22, [sp, #16]
   1b5c0:	ldr	x30, [sp, #32]
   1b5c4:	ldp	x19, x20, [sp], #48
   1b5c8:	ret
   1b5cc:	mov	x0, x20
   1b5d0:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1b5d4:	mov	x19, x0
   1b5d8:	b	1b578 <__sanitizer_symbolize_global@@Base+0x2f90>
   1b5dc:	stp	x19, x20, [sp, #-64]!
   1b5e0:	mov	x20, x0
   1b5e4:	stp	x21, x22, [sp, #16]
   1b5e8:	add	x21, x0, #0x70
   1b5ec:	mov	x0, x21
   1b5f0:	str	x30, [sp, #32]
   1b5f4:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1b5f8:	ldr	x19, [x20, #208]
   1b5fc:	add	x22, sp, #0x38
   1b600:	cbz	x19, 1b630 <__sanitizer_symbolize_global@@Base+0x3048>
   1b604:	mov	x1, x20
   1b608:	mov	x0, x22
   1b60c:	bl	1abbc <__sanitizer_symbolize_global@@Base+0x25d4>
   1b610:	ldr	x0, [x19]
   1b614:	ldr	x1, [x0, #16]
   1b618:	mov	x0, x19
   1b61c:	blr	x1
   1b620:	mov	x0, x22
   1b624:	bl	1abd4 <__sanitizer_symbolize_global@@Base+0x25ec>
   1b628:	ldr	x19, [x19, #8]
   1b62c:	b	1b600 <__sanitizer_symbolize_global@@Base+0x3018>
   1b630:	mov	x0, x21
   1b634:	bl	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   1b638:	ldp	x21, x22, [sp, #16]
   1b63c:	ldr	x30, [sp, #32]
   1b640:	ldp	x19, x20, [sp], #64
   1b644:	ret
   1b648:	stp	x19, x20, [sp, #-80]!
   1b64c:	mov	x20, x0
   1b650:	stp	x23, x24, [sp, #32]
   1b654:	add	x24, x0, #0x70
   1b658:	mov	x0, x24
   1b65c:	stp	x21, x22, [sp, #16]
   1b660:	mov	x22, x1
   1b664:	add	x23, sp, #0x48
   1b668:	str	x30, [sp, #48]
   1b66c:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1b670:	ldr	x21, [x20, #208]
   1b674:	cbz	x21, 1b6d4 <__sanitizer_symbolize_global@@Base+0x30ec>
   1b678:	mov	x1, x20
   1b67c:	mov	x0, x23
   1b680:	bl	1abbc <__sanitizer_symbolize_global@@Base+0x25d4>
   1b684:	ldr	x0, [x21]
   1b688:	mov	x1, x22
   1b68c:	ldr	x2, [x0, #24]
   1b690:	mov	x0, x21
   1b694:	blr	x2
   1b698:	mov	x19, x0
   1b69c:	mov	x0, x23
   1b6a0:	cbz	x19, 1b6c8 <__sanitizer_symbolize_global@@Base+0x30e0>
   1b6a4:	bl	1abd4 <__sanitizer_symbolize_global@@Base+0x25ec>
   1b6a8:	mov	x0, x24
   1b6ac:	bl	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   1b6b0:	mov	x0, x19
   1b6b4:	ldp	x21, x22, [sp, #16]
   1b6b8:	ldp	x23, x24, [sp, #32]
   1b6bc:	ldr	x30, [sp, #48]
   1b6c0:	ldp	x19, x20, [sp], #80
   1b6c4:	ret
   1b6c8:	bl	1abd4 <__sanitizer_symbolize_global@@Base+0x25ec>
   1b6cc:	ldr	x21, [x21, #8]
   1b6d0:	b	1b674 <__sanitizer_symbolize_global@@Base+0x308c>
   1b6d4:	mov	x1, x22
   1b6d8:	mov	x0, x20
   1b6dc:	bl	1c5c4 <__sanitizer_symbolize_global@@Base+0x3fdc>
   1b6e0:	mov	x19, x0
   1b6e4:	b	1b6a8 <__sanitizer_symbolize_global@@Base+0x30c0>
   1b6e8:	stp	x19, x30, [sp, #-16]!
   1b6ec:	mov	x19, x0
   1b6f0:	add	x0, x0, #0x28
   1b6f4:	bl	14558 <__sanitizer_set_report_fd@@Base+0x3cb8>
   1b6f8:	add	x0, x19, #0x48
   1b6fc:	bl	14594 <__sanitizer_set_report_fd@@Base+0x3cf4>
   1b700:	ldr	x0, [x19, #56]
   1b704:	cbnz	x0, 1b718 <__sanitizer_symbolize_global@@Base+0x3130>
   1b708:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1b70c:	add	x0, x0, #0x13f
   1b710:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   1b714:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1b718:	mov	w0, #0x1                   	// #1
   1b71c:	strb	w0, [x19, #104]
   1b720:	ldp	x19, x30, [sp], #16
   1b724:	ret
   1b728:	stp	x19, x20, [sp, #-48]!
   1b72c:	mov	x19, x0
   1b730:	stp	x21, x22, [sp, #16]
   1b734:	mov	x21, x1
   1b738:	ldrb	w1, [x0, #104]
   1b73c:	stp	x23, x30, [sp, #32]
   1b740:	cbnz	w1, 1b788 <__sanitizer_symbolize_global@@Base+0x31a0>
   1b744:	mov	w23, #0x1                   	// #1
   1b748:	bl	1b6e8 <__sanitizer_symbolize_global@@Base+0x3100>
   1b74c:	add	x22, x19, #0x28
   1b750:	mov	x1, x21
   1b754:	mov	x0, x22
   1b758:	bl	1b380 <__sanitizer_symbolize_global@@Base+0x2d98>
   1b75c:	mov	x20, x0
   1b760:	cbnz	x0, 1b7ac <__sanitizer_symbolize_global@@Base+0x31c4>
   1b764:	cbz	w23, 1b790 <__sanitizer_symbolize_global@@Base+0x31a8>
   1b768:	ldr	x0, [x19, #88]
   1b76c:	cbz	x0, 1b7ac <__sanitizer_symbolize_global@@Base+0x31c4>
   1b770:	mov	x1, x21
   1b774:	add	x0, x19, #0x48
   1b778:	ldp	x21, x22, [sp, #16]
   1b77c:	ldp	x23, x30, [sp, #32]
   1b780:	ldp	x19, x20, [sp], #48
   1b784:	b	1b380 <__sanitizer_symbolize_global@@Base+0x2d98>
   1b788:	mov	w23, #0x0                   	// #0
   1b78c:	b	1b74c <__sanitizer_symbolize_global@@Base+0x3164>
   1b790:	mov	x0, x19
   1b794:	bl	1b6e8 <__sanitizer_symbolize_global@@Base+0x3100>
   1b798:	mov	x1, x21
   1b79c:	mov	x0, x22
   1b7a0:	bl	1b380 <__sanitizer_symbolize_global@@Base+0x2d98>
   1b7a4:	cbz	x0, 1b768 <__sanitizer_symbolize_global@@Base+0x3180>
   1b7a8:	mov	x20, x0
   1b7ac:	mov	x0, x20
   1b7b0:	ldp	x21, x22, [sp, #16]
   1b7b4:	ldp	x23, x30, [sp, #32]
   1b7b8:	ldp	x19, x20, [sp], #48
   1b7bc:	ret
   1b7c0:	stp	x19, x20, [sp, #-48]!
   1b7c4:	mov	x19, x1
   1b7c8:	mov	x20, x4
   1b7cc:	stp	x21, x22, [sp, #16]
   1b7d0:	mov	x22, x2
   1b7d4:	mov	x21, x3
   1b7d8:	str	x30, [sp, #32]
   1b7dc:	bl	1b728 <__sanitizer_symbolize_global@@Base+0x3140>
   1b7e0:	cbz	x0, 1b814 <__sanitizer_symbolize_global@@Base+0x322c>
   1b7e4:	ldr	x1, [x0]
   1b7e8:	str	x1, [x22]
   1b7ec:	ldr	x1, [x0, #8]
   1b7f0:	ldr	w0, [x0, #24]
   1b7f4:	sub	x19, x19, x1
   1b7f8:	str	x19, [x21]
   1b7fc:	str	w0, [x20]
   1b800:	mov	w0, #0x1                   	// #1
   1b804:	ldp	x21, x22, [sp, #16]
   1b808:	ldr	x30, [sp, #32]
   1b80c:	ldp	x19, x20, [sp], #48
   1b810:	ret
   1b814:	mov	w0, #0x0                   	// #0
   1b818:	b	1b804 <__sanitizer_symbolize_global@@Base+0x321c>
   1b81c:	stp	x19, x20, [sp, #-64]!
   1b820:	mov	x20, x1
   1b824:	mov	x19, x0
   1b828:	stp	x23, x30, [sp, #32]
   1b82c:	add	x23, x0, #0x70
   1b830:	mov	x0, x23
   1b834:	stp	x21, x22, [sp, #16]
   1b838:	mov	x21, x2
   1b83c:	mov	x22, x3
   1b840:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1b844:	str	xzr, [sp, #56]
   1b848:	mov	x1, x20
   1b84c:	add	x4, sp, #0x34
   1b850:	mov	x3, x22
   1b854:	add	x2, sp, #0x38
   1b858:	mov	x0, x19
   1b85c:	bl	1b7c0 <__sanitizer_symbolize_global@@Base+0x31d8>
   1b860:	mov	w20, w0
   1b864:	tst	w0, #0xff
   1b868:	b.eq	1b880 <__sanitizer_symbolize_global@@Base+0x3298>  // b.none
   1b86c:	cbz	x21, 1b880 <__sanitizer_symbolize_global@@Base+0x3298>
   1b870:	ldr	x1, [sp, #56]
   1b874:	mov	x0, x19
   1b878:	bl	1abec <__sanitizer_symbolize_global@@Base+0x2604>
   1b87c:	str	x0, [x21]
   1b880:	mov	x0, x23
   1b884:	bl	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   1b888:	mov	w0, w20
   1b88c:	ldp	x21, x22, [sp, #16]
   1b890:	ldp	x23, x30, [sp, #32]
   1b894:	ldp	x19, x20, [sp], #64
   1b898:	ret
   1b89c:	stp	x19, x20, [sp, #-96]!
   1b8a0:	mov	x19, x0
   1b8a4:	stp	x23, x24, [sp, #32]
   1b8a8:	add	x24, x0, #0x70
   1b8ac:	mov	x0, x24
   1b8b0:	stp	x21, x22, [sp, #16]
   1b8b4:	mov	x22, x1
   1b8b8:	str	x30, [sp, #48]
   1b8bc:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1b8c0:	mov	x0, x22
   1b8c4:	bl	1aac8 <__sanitizer_symbolize_global@@Base+0x24e0>
   1b8c8:	add	x4, sp, #0x44
   1b8cc:	mov	x20, x0
   1b8d0:	add	x3, sp, #0x50
   1b8d4:	add	x2, sp, #0x48
   1b8d8:	mov	x1, x22
   1b8dc:	mov	x0, x19
   1b8e0:	bl	1b7c0 <__sanitizer_symbolize_global@@Base+0x31d8>
   1b8e4:	tst	w0, #0xff
   1b8e8:	b.eq	1b93c <__sanitizer_symbolize_global@@Base+0x3354>  // b.none
   1b8ec:	ldp	x1, x2, [sp, #72]
   1b8f0:	add	x0, x20, #0x8
   1b8f4:	ldr	w3, [sp, #68]
   1b8f8:	add	x23, sp, #0x58
   1b8fc:	bl	1aa90 <__sanitizer_symbolize_global@@Base+0x24a8>
   1b900:	ldr	x21, [x19, #208]
   1b904:	cbz	x21, 1b93c <__sanitizer_symbolize_global@@Base+0x3354>
   1b908:	mov	x1, x19
   1b90c:	mov	x0, x23
   1b910:	bl	1abbc <__sanitizer_symbolize_global@@Base+0x25d4>
   1b914:	ldr	x0, [x21]
   1b918:	mov	x2, x20
   1b91c:	mov	x1, x22
   1b920:	ldr	x3, [x0]
   1b924:	mov	x0, x21
   1b928:	blr	x3
   1b92c:	tst	w0, #0xff
   1b930:	mov	x0, x23
   1b934:	b.eq	1b95c <__sanitizer_symbolize_global@@Base+0x3374>  // b.none
   1b938:	bl	1abd4 <__sanitizer_symbolize_global@@Base+0x25ec>
   1b93c:	mov	x0, x24
   1b940:	bl	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   1b944:	mov	x0, x20
   1b948:	ldp	x21, x22, [sp, #16]
   1b94c:	ldp	x23, x24, [sp, #32]
   1b950:	ldr	x30, [sp, #48]
   1b954:	ldp	x19, x20, [sp], #96
   1b958:	ret
   1b95c:	bl	1abd4 <__sanitizer_symbolize_global@@Base+0x25ec>
   1b960:	ldr	x21, [x21, #8]
   1b964:	b	1b904 <__sanitizer_symbolize_global@@Base+0x331c>
   1b968:	stp	x19, x20, [sp, #-112]!
   1b96c:	mov	x20, x0
   1b970:	mov	x19, x2
   1b974:	stp	x25, x26, [sp, #48]
   1b978:	add	x26, x0, #0x70
   1b97c:	mov	x25, x1
   1b980:	mov	x0, x26
   1b984:	stp	x21, x22, [sp, #16]
   1b988:	stp	x23, x24, [sp, #32]
   1b98c:	str	x30, [sp, #64]
   1b990:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1b994:	add	x4, sp, #0x54
   1b998:	add	x3, sp, #0x60
   1b99c:	add	x2, sp, #0x58
   1b9a0:	mov	x1, x25
   1b9a4:	mov	x0, x20
   1b9a8:	bl	1b7c0 <__sanitizer_symbolize_global@@Base+0x31d8>
   1b9ac:	ands	w21, w0, #0xff
   1b9b0:	b.eq	1ba1c <__sanitizer_symbolize_global@@Base+0x3434>  // b.none
   1b9b4:	mov	x0, x19
   1b9b8:	bl	1ab38 <__sanitizer_symbolize_global@@Base+0x2550>
   1b9bc:	ldr	x0, [sp, #88]
   1b9c0:	add	x24, sp, #0x68
   1b9c4:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   1b9c8:	ldr	x22, [x20, #208]
   1b9cc:	str	x0, [x19]
   1b9d0:	ldr	x0, [sp, #96]
   1b9d4:	str	x0, [x19, #8]
   1b9d8:	ldr	w0, [sp, #84]
   1b9dc:	str	w0, [x19, #16]
   1b9e0:	cbz	x22, 1ba1c <__sanitizer_symbolize_global@@Base+0x3434>
   1b9e4:	mov	x1, x20
   1b9e8:	mov	x0, x24
   1b9ec:	bl	1abbc <__sanitizer_symbolize_global@@Base+0x25d4>
   1b9f0:	ldr	x0, [x22]
   1b9f4:	mov	x2, x19
   1b9f8:	mov	x1, x25
   1b9fc:	ldr	x3, [x0, #8]
   1ba00:	mov	x0, x22
   1ba04:	blr	x3
   1ba08:	ands	w23, w0, #0xff
   1ba0c:	mov	x0, x24
   1ba10:	b.eq	1ba40 <__sanitizer_symbolize_global@@Base+0x3458>  // b.none
   1ba14:	mov	w21, w23
   1ba18:	bl	1abd4 <__sanitizer_symbolize_global@@Base+0x25ec>
   1ba1c:	mov	x0, x26
   1ba20:	bl	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   1ba24:	mov	w0, w21
   1ba28:	ldp	x21, x22, [sp, #16]
   1ba2c:	ldp	x23, x24, [sp, #32]
   1ba30:	ldp	x25, x26, [sp, #48]
   1ba34:	ldr	x30, [sp, #64]
   1ba38:	ldp	x19, x20, [sp], #112
   1ba3c:	ret
   1ba40:	bl	1abd4 <__sanitizer_symbolize_global@@Base+0x25ec>
   1ba44:	ldr	x22, [x22, #8]
   1ba48:	b	1b9e0 <__sanitizer_symbolize_global@@Base+0x33f8>
   1ba4c:	stp	x19, x20, [sp, #-128]!
   1ba50:	mov	w19, #0x1                   	// #1
   1ba54:	stp	x21, x22, [sp, #16]
   1ba58:	mov	x21, x1
   1ba5c:	stp	x23, x24, [sp, #32]
   1ba60:	mov	x23, x0
   1ba64:	mov	x24, x1
   1ba68:	stp	x25, x26, [sp, #48]
   1ba6c:	adrp	x25, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1ba70:	adrp	x26, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1ba74:	stp	x27, x28, [sp, #64]
   1ba78:	add	x27, x25, #0x6de
   1ba7c:	add	x28, x26, #0x186
   1ba80:	str	x30, [sp, #80]
   1ba84:	add	x2, sp, #0x70
   1ba88:	add	x1, x25, #0x6de
   1ba8c:	mov	x0, x23
   1ba90:	str	xzr, [sp, #112]
   1ba94:	bl	1b470 <__sanitizer_symbolize_global@@Base+0x2e88>
   1ba98:	mov	x20, x0
   1ba9c:	ldr	x0, [sp, #112]
   1baa0:	cbnz	x0, 1bac4 <__sanitizer_symbolize_global@@Base+0x34dc>
   1baa4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1baa8:	add	x2, x2, #0x153
   1baac:	mov	x4, #0x0                   	// #0
   1bab0:	mov	x3, #0x0                   	// #0
   1bab4:	mov	w1, #0x12c                 	// #300
   1bab8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1babc:	add	x0, x0, #0xf5
   1bac0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1bac4:	ldrb	w1, [x0]
   1bac8:	cbnz	w1, 1baf0 <__sanitizer_symbolize_global@@Base+0x3508>
   1bacc:	mov	x1, #0x0                   	// #0
   1bad0:	bl	c618 <__sancov_default_options@@Base+0x678>
   1bad4:	ldp	x21, x22, [sp, #16]
   1bad8:	ldp	x23, x24, [sp, #32]
   1badc:	ldp	x25, x26, [sp, #48]
   1bae0:	ldp	x27, x28, [sp, #64]
   1bae4:	ldr	x30, [sp, #80]
   1bae8:	ldp	x19, x20, [sp], #128
   1baec:	ret
   1baf0:	cbnz	w19, 1bb5c <__sanitizer_symbolize_global@@Base+0x3574>
   1baf4:	ldr	x0, [x21, #8]
   1baf8:	bl	1aac8 <__sanitizer_symbolize_global@@Base+0x24e0>
   1bafc:	mov	x22, x0
   1bb00:	ldp	x1, x2, [x21, #16]
   1bb04:	add	x0, x0, #0x8
   1bb08:	ldr	w3, [x21, #32]
   1bb0c:	bl	1aa90 <__sanitizer_symbolize_global@@Base+0x24a8>
   1bb10:	str	x22, [x24]
   1bb14:	mov	x24, x22
   1bb18:	add	x19, x22, #0x8
   1bb1c:	add	x2, sp, #0x78
   1bb20:	ldr	x0, [sp, #112]
   1bb24:	mov	x1, x27
   1bb28:	str	x0, [x19, #32]
   1bb2c:	mov	x0, x20
   1bb30:	str	xzr, [sp, #120]
   1bb34:	bl	1b470 <__sanitizer_symbolize_global@@Base+0x2e88>
   1bb38:	mov	x23, x0
   1bb3c:	ldr	x0, [sp, #120]
   1bb40:	cbnz	x0, 1bb64 <__sanitizer_symbolize_global@@Base+0x357c>
   1bb44:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bb48:	mov	x4, #0x0                   	// #0
   1bb4c:	add	x2, x2, #0x16c
   1bb50:	mov	x3, #0x0                   	// #0
   1bb54:	mov	w1, #0x10d                 	// #269
   1bb58:	b	1bab8 <__sanitizer_symbolize_global@@Base+0x34d0>
   1bb5c:	mov	x22, x21
   1bb60:	b	1bb18 <__sanitizer_symbolize_global@@Base+0x3530>
   1bb64:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1bb68:	cbz	x0, 1bbbc <__sanitizer_symbolize_global@@Base+0x35d4>
   1bb6c:	ldr	x20, [sp, #120]
   1bb70:	sub	x0, x0, #0x1
   1bb74:	mov	w1, #0x2                   	// #2
   1bb78:	add	x20, x20, x0
   1bb7c:	ldr	x2, [sp, #120]
   1bb80:	cmp	x2, x20
   1bb84:	ldrb	w0, [x20]
   1bb88:	b.cs	1bba0 <__sanitizer_symbolize_global@@Base+0x35b8>  // b.hs, b.nlast
   1bb8c:	sub	w3, w0, #0x30
   1bb90:	cmp	w3, #0x9
   1bb94:	b.hi	1bba0 <__sanitizer_symbolize_global@@Base+0x35b8>  // b.pmore
   1bb98:	sub	x20, x20, #0x1
   1bb9c:	b	1bb80 <__sanitizer_symbolize_global@@Base+0x3598>
   1bba0:	cmp	w0, #0x3a
   1bba4:	b.eq	1bc10 <__sanitizer_symbolize_global@@Base+0x3628>  // b.none
   1bba8:	ldr	x0, [sp, #120]
   1bbac:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1bbb0:	add	x2, x22, #0x38
   1bbb4:	add	x1, x1, #0x6df
   1bbb8:	bl	1b470 <__sanitizer_symbolize_global@@Base+0x2e88>
   1bbbc:	ldr	x0, [sp, #120]
   1bbc0:	mov	x1, #0x0                   	// #0
   1bbc4:	bl	c618 <__sancov_default_options@@Base+0x678>
   1bbc8:	ldr	x0, [x19, #32]
   1bbcc:	add	x1, x26, #0x186
   1bbd0:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1bbd4:	cbnz	w0, 1bbe8 <__sanitizer_symbolize_global@@Base+0x3600>
   1bbd8:	ldr	x0, [x19, #32]
   1bbdc:	mov	x1, #0x0                   	// #0
   1bbe0:	bl	c618 <__sancov_default_options@@Base+0x678>
   1bbe4:	str	xzr, [x19, #32]
   1bbe8:	ldr	x0, [x19, #48]
   1bbec:	mov	x1, x28
   1bbf0:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1bbf4:	cbnz	w0, 1bc08 <__sanitizer_symbolize_global@@Base+0x3620>
   1bbf8:	ldr	x0, [x19, #48]
   1bbfc:	mov	x1, #0x0                   	// #0
   1bc00:	bl	c618 <__sancov_default_options@@Base+0x678>
   1bc04:	str	xzr, [x19, #48]
   1bc08:	mov	w19, #0x0                   	// #0
   1bc0c:	b	1ba84 <__sanitizer_symbolize_global@@Base+0x349c>
   1bc10:	ldrb	w0, [x20, #1]
   1bc14:	str	w1, [sp, #108]
   1bc18:	sub	w0, w0, #0x30
   1bc1c:	cmp	w0, #0x9
   1bc20:	b.hi	1bba8 <__sanitizer_symbolize_global@@Base+0x35c0>  // b.pmore
   1bc24:	ldr	w0, [x19, #56]
   1bc28:	str	w0, [x19, #60]
   1bc2c:	add	x0, x20, #0x1
   1bc30:	bl	1265c <__sanitizer_set_report_fd@@Base+0x1dbc>
   1bc34:	str	w0, [x19, #56]
   1bc38:	ldr	w1, [sp, #108]
   1bc3c:	strb	wzr, [x20], #-1
   1bc40:	cmp	w1, #0x1
   1bc44:	b.eq	1bba8 <__sanitizer_symbolize_global@@Base+0x35c0>  // b.none
   1bc48:	mov	w1, #0x1                   	// #1
   1bc4c:	b	1bb7c <__sanitizer_symbolize_global@@Base+0x3594>
   1bc50:	stp	x19, x20, [sp, #-32]!
   1bc54:	adrp	x20, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1bc58:	add	x20, x20, #0x6de
   1bc5c:	mov	x19, x1
   1bc60:	add	x2, x1, #0x28
   1bc64:	mov	x1, x20
   1bc68:	str	x30, [sp, #16]
   1bc6c:	bl	1b470 <__sanitizer_symbolize_global@@Base+0x2e88>
   1bc70:	add	x2, x19, #0x30
   1bc74:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1bc78:	add	x1, x1, #0x831
   1bc7c:	bl	1b510 <__sanitizer_symbolize_global@@Base+0x2f28>
   1bc80:	add	x2, x19, #0x38
   1bc84:	mov	x1, x20
   1bc88:	ldr	x30, [sp, #16]
   1bc8c:	ldp	x19, x20, [sp], #32
   1bc90:	b	1b510 <__sanitizer_symbolize_global@@Base+0x2f28>
   1bc94:	adrp	x3, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   1bc98:	add	x3, x3, #0xef0
   1bc9c:	str	x30, [sp, #-16]!
   1bca0:	stp	x3, x1, [x0]
   1bca4:	mov	x3, #0xffffffffffffffff    	// #-1
   1bca8:	str	x3, [x0, #16]
   1bcac:	add	x0, x0, #0x4, lsl #12
   1bcb0:	str	xzr, [x0, #24]
   1bcb4:	strh	wzr, [x0, #32]
   1bcb8:	strb	w2, [x0, #34]
   1bcbc:	cbnz	x1, 1bce0 <__sanitizer_symbolize_global@@Base+0x36f8>
   1bcc0:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bcc4:	add	x2, x2, #0x189
   1bcc8:	mov	x4, #0x0                   	// #0
   1bccc:	mov	x3, #0x0                   	// #0
   1bcd0:	mov	w1, #0x18f                 	// #399
   1bcd4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bcd8:	add	x0, x0, #0xf5
   1bcdc:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1bce0:	ldrb	w0, [x1]
   1bce4:	cbnz	w0, 1bd00 <__sanitizer_symbolize_global@@Base+0x3718>
   1bce8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bcec:	mov	x4, #0x0                   	// #0
   1bcf0:	add	x2, x2, #0x19a
   1bcf4:	mov	x3, #0x0                   	// #0
   1bcf8:	mov	w1, #0x190                 	// #400
   1bcfc:	b	1bcd4 <__sanitizer_symbolize_global@@Base+0x36ec>
   1bd00:	ldr	x30, [sp], #16
   1bd04:	ret
   1bd08:	stp	x19, x20, [sp, #-32]!
   1bd0c:	mov	x19, x0
   1bd10:	mov	x0, x2
   1bd14:	stp	x21, x30, [sp, #16]
   1bd18:	mov	x21, x1
   1bd1c:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   1bd20:	add	x1, x1, #0xec0
   1bd24:	stp	x1, xzr, [x19]
   1bd28:	mov	x1, #0x4028                	// #16424
   1bd2c:	bl	c108 <__sancov_default_options@@Base+0x168>
   1bd30:	mov	x20, x0
   1bd34:	mov	x1, x21
   1bd38:	mov	w2, #0x0                   	// #0
   1bd3c:	bl	1bc94 <__sanitizer_symbolize_global@@Base+0x36ac>
   1bd40:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   1bd44:	add	x0, x0, #0xe98
   1bd48:	ldp	x21, x30, [sp, #16]
   1bd4c:	str	x0, [x20]
   1bd50:	str	x20, [x19, #16]
   1bd54:	ldp	x19, x20, [sp], #32
   1bd58:	ret
   1bd5c:	stp	x19, x30, [sp, #-16]!
   1bd60:	mov	x19, x0
   1bd64:	ldr	w0, [x0, #16]
   1bd68:	cmn	w0, #0x1
   1bd6c:	b.eq	1bd74 <__sanitizer_symbolize_global@@Base+0x378c>  // b.none
   1bd70:	bl	14d60 <__sanitizer_set_report_fd@@Base+0x44c0>
   1bd74:	ldr	w0, [x19, #20]
   1bd78:	cmn	w0, #0x1
   1bd7c:	b.eq	1bd84 <__sanitizer_symbolize_global@@Base+0x379c>  // b.none
   1bd80:	bl	14d60 <__sanitizer_set_report_fd@@Base+0x44c0>
   1bd84:	mov	x0, x19
   1bd88:	ldp	x19, x30, [sp], #16
   1bd8c:	b	1c374 <__sanitizer_symbolize_global@@Base+0x3d8c>
   1bd90:	cbnz	x2, 1bdac <__sanitizer_symbolize_global@@Base+0x37c4>
   1bd94:	mov	w0, #0x1                   	// #1
   1bd98:	ret
   1bd9c:	mov	w0, #0x1                   	// #1
   1bda0:	ldr	x30, [sp, #16]
   1bda4:	ldp	x19, x20, [sp], #48
   1bda8:	ret
   1bdac:	stp	x19, x20, [sp, #-48]!
   1bdb0:	mov	x19, x0
   1bdb4:	mov	x20, x2
   1bdb8:	ldr	w0, [x0, #20]
   1bdbc:	add	x3, sp, #0x28
   1bdc0:	mov	x4, #0x0                   	// #0
   1bdc4:	str	x30, [sp, #16]
   1bdc8:	str	xzr, [sp, #40]
   1bdcc:	bl	14dac <__sanitizer_set_report_fd@@Base+0x450c>
   1bdd0:	tst	w0, #0xff
   1bdd4:	b.eq	1bde4 <__sanitizer_symbolize_global@@Base+0x37fc>  // b.none
   1bdd8:	ldr	x0, [sp, #40]
   1bddc:	cmp	x0, x20
   1bde0:	b.eq	1bd9c <__sanitizer_symbolize_global@@Base+0x37b4>  // b.none
   1bde4:	ldr	w1, [x19, #20]
   1bde8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bdec:	add	x0, x0, #0x1b3
   1bdf0:	bl	16a18 <OnPrint@@Base+0x30c>
   1bdf4:	mov	w0, #0x0                   	// #0
   1bdf8:	b	1bda0 <__sanitizer_symbolize_global@@Base+0x37b8>
   1bdfc:	stp	x19, x20, [sp, #-32]!
   1be00:	mov	x19, x0
   1be04:	ldr	w0, [x0, #16]
   1be08:	str	x30, [sp, #16]
   1be0c:	cmn	w0, #0x1
   1be10:	b.eq	1be68 <__sanitizer_symbolize_global@@Base+0x3880>  // b.none
   1be14:	ldr	w0, [x19, #20]
   1be18:	cmn	w0, #0x1
   1be1c:	b.eq	1be68 <__sanitizer_symbolize_global@@Base+0x3880>  // b.none
   1be20:	mov	x20, x1
   1be24:	mov	x0, x1
   1be28:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1be2c:	mov	x2, x0
   1be30:	mov	x1, x20
   1be34:	mov	x0, x19
   1be38:	bl	1bd90 <__sanitizer_symbolize_global@@Base+0x37a8>
   1be3c:	tst	w0, #0xff
   1be40:	b.eq	1be68 <__sanitizer_symbolize_global@@Base+0x3880>  // b.none
   1be44:	mov	x20, x19
   1be48:	mov	x2, #0x4000                	// #16384
   1be4c:	ldr	x0, [x20], #24
   1be50:	mov	x1, x20
   1be54:	ldr	x3, [x0, #16]
   1be58:	mov	x0, x19
   1be5c:	blr	x3
   1be60:	tst	w0, #0xff
   1be64:	b.ne	1be6c <__sanitizer_symbolize_global@@Base+0x3884>  // b.any
   1be68:	mov	x20, #0x0                   	// #0
   1be6c:	mov	x0, x20
   1be70:	ldr	x30, [sp, #16]
   1be74:	ldp	x19, x20, [sp], #32
   1be78:	ret
   1be7c:	stp	x19, x20, [sp, #-48]!
   1be80:	add	x20, x0, #0x4, lsl #12
   1be84:	mov	x19, x0
   1be88:	stp	x21, x22, [sp, #16]
   1be8c:	ldrb	w0, [x20, #32]
   1be90:	stp	x23, x30, [sp, #32]
   1be94:	cbz	w0, 1beac <__sanitizer_symbolize_global@@Base+0x38c4>
   1be98:	mov	x0, #0x0                   	// #0
   1be9c:	ldp	x21, x22, [sp, #16]
   1bea0:	ldp	x23, x30, [sp, #32]
   1bea4:	ldp	x19, x20, [sp], #48
   1bea8:	ret
   1beac:	mov	x22, x1
   1beb0:	ldr	x23, [x19, #8]
   1beb4:	bl	e168 <__sancov_default_options@@Base+0x21c8>
   1beb8:	mov	x21, x0
   1bebc:	cbz	x0, 1bef4 <__sanitizer_symbolize_global@@Base+0x390c>
   1bec0:	mov	x0, x23
   1bec4:	bl	dc98 <__sancov_default_options@@Base+0x1cf8>
   1bec8:	mov	x1, x0
   1becc:	cbz	x0, 1bef4 <__sanitizer_symbolize_global@@Base+0x390c>
   1bed0:	mov	x0, x21
   1bed4:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1bed8:	cbnz	w0, 1bef4 <__sanitizer_symbolize_global@@Base+0x390c>
   1bedc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bee0:	add	x0, x0, #0x1e0
   1bee4:	bl	16a18 <OnPrint@@Base+0x30c>
   1bee8:	mov	w0, #0x1                   	// #1
   1beec:	strb	w0, [x20, #32]
   1bef0:	b	1be98 <__sanitizer_symbolize_global@@Base+0x38b0>
   1bef4:	ldr	x0, [x19, #16408]
   1bef8:	cmp	x0, #0x4
   1befc:	b.hi	1bf28 <__sanitizer_symbolize_global@@Base+0x3940>  // b.pmore
   1bf00:	mov	x1, x22
   1bf04:	mov	x0, x19
   1bf08:	bl	1bdfc <__sanitizer_symbolize_global@@Base+0x3814>
   1bf0c:	cbnz	x0, 1be9c <__sanitizer_symbolize_global@@Base+0x38b4>
   1bf10:	mov	x0, x19
   1bf14:	bl	1bd5c <__sanitizer_symbolize_global@@Base+0x3774>
   1bf18:	ldr	x0, [x19, #16408]
   1bf1c:	add	x0, x0, #0x1
   1bf20:	str	x0, [x19, #16408]
   1bf24:	b	1bef4 <__sanitizer_symbolize_global@@Base+0x390c>
   1bf28:	ldrb	w0, [x20, #32]
   1bf2c:	cbnz	w0, 1be98 <__sanitizer_symbolize_global@@Base+0x38b0>
   1bf30:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bf34:	add	x0, x0, #0x217
   1bf38:	b	1bee4 <__sanitizer_symbolize_global@@Base+0x38fc>
   1bf3c:	stp	x19, x20, [sp, #-32]!
   1bf40:	str	x30, [sp, #16]
   1bf44:	cbnz	x2, 1bf68 <__sanitizer_symbolize_global@@Base+0x3980>
   1bf48:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bf4c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bf50:	add	x2, x2, #0x256
   1bf54:	add	x0, x0, #0xf5
   1bf58:	mov	x4, #0x0                   	// #0
   1bf5c:	mov	x3, #0x0                   	// #0
   1bf60:	mov	w1, #0x173                 	// #371
   1bf64:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1bf68:	and	w1, w1, #0xff
   1bf6c:	mov	x19, x0
   1bf70:	mov	x5, x3
   1bf74:	cmp	w1, #0x0
   1bf78:	adrp	x3, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1bf7c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bf80:	add	x3, x3, #0x6df
   1bf84:	add	x0, x0, #0x250
   1bf88:	csel	x3, x0, x3, ne  // ne = any
   1bf8c:	add	x20, x19, #0x18
   1bf90:	cbnz	w4, 1bfcc <__sanitizer_symbolize_global@@Base+0x39e4>
   1bf94:	mov	x4, x2
   1bf98:	mov	x0, x20
   1bf9c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bfa0:	mov	x1, #0x4000                	// #16384
   1bfa4:	add	x2, x2, #0x26d
   1bfa8:	bl	16710 <OnPrint@@Base+0x4>
   1bfac:	mov	w1, #0x3fff                	// #16383
   1bfb0:	cmp	w0, w1
   1bfb4:	b.gt	1c090 <__sanitizer_symbolize_global@@Base+0x3aa8>
   1bfb8:	mov	x1, x20
   1bfbc:	ldr	x0, [x19, #16]
   1bfc0:	ldr	x30, [sp, #16]
   1bfc4:	ldp	x19, x20, [sp], #32
   1bfc8:	b	1be7c <__sanitizer_symbolize_global@@Base+0x3894>
   1bfcc:	sub	w4, w4, #0x1
   1bfd0:	cmp	w4, #0x7
   1bfd4:	b.hi	1c058 <__sanitizer_symbolize_global@@Base+0x3a70>  // b.pmore
   1bfd8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1bfdc:	add	x0, x0, #0x2cc
   1bfe0:	ldrb	w0, [x0, w4, uxtw]
   1bfe4:	adr	x1, 1bff0 <__sanitizer_symbolize_global@@Base+0x3a08>
   1bfe8:	add	x0, x1, w0, sxtb #2
   1bfec:	br	x0
   1bff0:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1bff4:	add	x1, x1, #0xa33
   1bff8:	mov	x6, x5
   1bffc:	mov	x4, x2
   1c000:	mov	x5, x1
   1c004:	mov	x0, x20
   1c008:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c00c:	mov	x1, #0x4000                	// #16384
   1c010:	add	x2, x2, #0x29d
   1c014:	bl	16710 <OnPrint@@Base+0x4>
   1c018:	b	1bfac <__sanitizer_symbolize_global@@Base+0x39c4>
   1c01c:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1c020:	add	x1, x1, #0xa20
   1c024:	b	1bff8 <__sanitizer_symbolize_global@@Base+0x3a10>
   1c028:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1c02c:	add	x1, x1, #0xa26
   1c030:	b	1bff8 <__sanitizer_symbolize_global@@Base+0x3a10>
   1c034:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1c038:	add	x1, x1, #0xa2c
   1c03c:	b	1bff8 <__sanitizer_symbolize_global@@Base+0x3a10>
   1c040:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1c044:	add	x1, x1, #0xa0c
   1c048:	b	1bff8 <__sanitizer_symbolize_global@@Base+0x3a10>
   1c04c:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c050:	add	x1, x1, #0x1a
   1c054:	b	1bff8 <__sanitizer_symbolize_global@@Base+0x3a10>
   1c058:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1c05c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1c060:	add	x2, x2, #0xa3e
   1c064:	add	x0, x0, #0x98a
   1c068:	mov	x4, #0x0                   	// #0
   1c06c:	mov	x3, #0x0                   	// #0
   1c070:	mov	w1, #0x2a9                 	// #681
   1c074:	b	1bf64 <__sanitizer_symbolize_global@@Base+0x397c>
   1c078:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1c07c:	add	x1, x1, #0xa13
   1c080:	b	1bff8 <__sanitizer_symbolize_global@@Base+0x3a10>
   1c084:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1c088:	add	x1, x1, #0xa18
   1c08c:	b	1bff8 <__sanitizer_symbolize_global@@Base+0x3a10>
   1c090:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c094:	add	x0, x0, #0x27b
   1c098:	bl	16a18 <OnPrint@@Base+0x30c>
   1c09c:	mov	x0, #0x0                   	// #0
   1c0a0:	ldr	x30, [sp, #16]
   1c0a4:	ldp	x19, x20, [sp], #32
   1c0a8:	ret
   1c0ac:	stp	x19, x30, [sp, #-16]!
   1c0b0:	mov	x19, x2
   1c0b4:	mov	w1, #0x0                   	// #0
   1c0b8:	ldr	w4, [x2, #32]
   1c0bc:	ldr	x3, [x2, #24]
   1c0c0:	ldr	x2, [x2, #16]
   1c0c4:	bl	1bf3c <__sanitizer_symbolize_global@@Base+0x3954>
   1c0c8:	cbz	x0, 1c0e0 <__sanitizer_symbolize_global@@Base+0x3af8>
   1c0cc:	mov	x1, x19
   1c0d0:	bl	1ba4c <__sanitizer_symbolize_global@@Base+0x3464>
   1c0d4:	mov	w0, #0x1                   	// #1
   1c0d8:	ldp	x19, x30, [sp], #16
   1c0dc:	ret
   1c0e0:	mov	w0, #0x0                   	// #0
   1c0e4:	b	1c0d8 <__sanitizer_symbolize_global@@Base+0x3af0>
   1c0e8:	stp	x19, x20, [sp, #-32]!
   1c0ec:	mov	x19, x2
   1c0f0:	mov	x20, x1
   1c0f4:	ldr	w4, [x2, #16]
   1c0f8:	mov	w1, #0x1                   	// #1
   1c0fc:	ldr	x3, [x2, #8]
   1c100:	ldr	x2, [x2]
   1c104:	str	x30, [sp, #16]
   1c108:	bl	1bf3c <__sanitizer_symbolize_global@@Base+0x3954>
   1c10c:	cbz	x0, 1c13c <__sanitizer_symbolize_global@@Base+0x3b54>
   1c110:	mov	x1, x19
   1c114:	bl	1bc50 <__sanitizer_symbolize_global@@Base+0x3668>
   1c118:	ldr	x1, [x19, #48]
   1c11c:	mov	w0, #0x1                   	// #1
   1c120:	add	x20, x20, x1
   1c124:	ldr	x1, [x19, #8]
   1c128:	sub	x20, x20, x1
   1c12c:	str	x20, [x19, #48]
   1c130:	ldr	x30, [sp, #16]
   1c134:	ldp	x19, x20, [sp], #32
   1c138:	ret
   1c13c:	mov	w0, #0x0                   	// #0
   1c140:	b	1c130 <__sanitizer_symbolize_global@@Base+0x3b48>
   1c144:	mov	x0, #0x0                   	// #0
   1c148:	ret
   1c14c:	cmp	x2, #0x1
   1c150:	b.ls	1c174 <__sanitizer_symbolize_global@@Base+0x3b8c>  // b.plast
   1c154:	add	x1, x1, x2
   1c158:	ldurb	w0, [x1, #-1]
   1c15c:	cmp	w0, #0xa
   1c160:	b.ne	1c174 <__sanitizer_symbolize_global@@Base+0x3b8c>  // b.any
   1c164:	ldurb	w0, [x1, #-2]
   1c168:	cmp	w0, #0xa
   1c16c:	cset	w0, eq  // eq = none
   1c170:	ret
   1c174:	mov	w0, #0x0                   	// #0
   1c178:	b	1c170 <__sanitizer_symbolize_global@@Base+0x3b88>
   1c17c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c180:	adrp	x3, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1c184:	add	x3, x3, #0xffa
   1c188:	ldr	x0, [x0, #4056]
   1c18c:	ldrb	w4, [x0, #180]
   1c190:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1c194:	add	x0, x0, #0xfea
   1c198:	str	xzr, [x2, #24]
   1c19c:	cmp	w4, #0x0
   1c1a0:	csel	x0, x0, x3, ne  // ne = any
   1c1a4:	stp	x1, x0, [x2]
   1c1a8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c1ac:	add	x0, x0, #0xb
   1c1b0:	str	x0, [x2, #16]
   1c1b4:	ret
   1c1b8:	str	x30, [sp, #-16]!
   1c1bc:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c1c0:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c1c4:	add	x2, x2, #0x20
   1c1c8:	add	x0, x0, #0x40
   1c1cc:	mov	x4, #0x0                   	// #0
   1c1d0:	mov	x3, #0x0                   	// #0
   1c1d4:	mov	w1, #0x4e                  	// #78
   1c1d8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1c1dc:	str	x30, [sp, #-16]!
   1c1e0:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c1e4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c1e8:	add	x2, x2, #0x20
   1c1ec:	add	x0, x0, #0x40
   1c1f0:	mov	x4, #0x0                   	// #0
   1c1f4:	mov	x3, #0x0                   	// #0
   1c1f8:	mov	w1, #0x57                  	// #87
   1c1fc:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1c200:	ldr	x4, [x0, #16]
   1c204:	mov	x3, x1
   1c208:	cmp	x1, x4
   1c20c:	b.cc	1c22c <__sanitizer_symbolize_global@@Base+0x3c44>  // b.lo, b.ul, b.last
   1c210:	str	x30, [sp, #-16]!
   1c214:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c218:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1c21c:	add	x2, x2, #0x2ae
   1c220:	add	x0, x0, #0x98a
   1c224:	mov	w1, #0x2f9                 	// #761
   1c228:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1c22c:	ldr	x0, [x0]
   1c230:	mov	x1, #0x48                  	// #72
   1c234:	madd	x0, x3, x1, x0
   1c238:	ret
   1c23c:	cmp	x2, #0x8
   1c240:	b.ls	1c274 <__sanitizer_symbolize_global@@Base+0x3c8c>  // b.plast
   1c244:	mov	x3, x1
   1c248:	str	x30, [sp, #-16]!
   1c24c:	sub	x0, x2, #0x8
   1c250:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c254:	add	x0, x3, x0
   1c258:	add	x1, x1, #0x6b3
   1c25c:	mov	x2, #0x8                   	// #8
   1c260:	bl	120ec <__sanitizer_set_report_fd@@Base+0x184c>
   1c264:	cmp	w0, #0x0
   1c268:	cset	w0, eq  // eq = none
   1c26c:	ldr	x30, [sp], #16
   1c270:	ret
   1c274:	mov	w0, #0x0                   	// #0
   1c278:	ret
   1c27c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c280:	stp	x19, x30, [sp, #-16]!
   1c284:	mov	x19, x0
   1c288:	ldr	x1, [x1, #3880]
   1c28c:	cbz	x1, 1c2a4 <__sanitizer_symbolize_global@@Base+0x3cbc>
   1c290:	mov	x3, #0x0                   	// #0
   1c294:	mov	x2, #0x0                   	// #0
   1c298:	mov	x1, #0x0                   	// #0
   1c29c:	bl	66f0 <__cxa_demangle@plt>
   1c2a0:	cbnz	x0, 1c2a8 <__sanitizer_symbolize_global@@Base+0x3cc0>
   1c2a4:	mov	x0, x19
   1c2a8:	ldp	x19, x30, [sp], #16
   1c2ac:	ret
   1c2b0:	cbz	x0, 1c31c <__sanitizer_symbolize_global@@Base+0x3d34>
   1c2b4:	stp	x19, x20, [sp, #-32]!
   1c2b8:	mov	x19, x0
   1c2bc:	str	x30, [sp, #16]
   1c2c0:	ldrb	w1, [x0]
   1c2c4:	cmp	w1, #0x5f
   1c2c8:	b.ne	1c30c <__sanitizer_symbolize_global@@Base+0x3d24>  // b.any
   1c2cc:	ldrb	w1, [x0, #1]
   1c2d0:	cmp	w1, #0x54
   1c2d4:	b.ne	1c30c <__sanitizer_symbolize_global@@Base+0x3d24>  // b.any
   1c2d8:	adrp	x1, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1c2dc:	ldr	x20, [x1, #880]
   1c2e0:	cbz	x20, 1c30c <__sanitizer_symbolize_global@@Base+0x3d24>
   1c2e4:	bl	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>
   1c2e8:	mov	x1, x0
   1c2ec:	mov	x16, x20
   1c2f0:	mov	x0, x19
   1c2f4:	ldr	x30, [sp, #16]
   1c2f8:	mov	w4, #0x0                   	// #0
   1c2fc:	ldp	x19, x20, [sp], #32
   1c300:	mov	x3, #0x0                   	// #0
   1c304:	mov	x2, #0x0                   	// #0
   1c308:	br	x16
   1c30c:	mov	x0, #0x0                   	// #0
   1c310:	ldr	x30, [sp, #16]
   1c314:	ldp	x19, x20, [sp], #32
   1c318:	ret
   1c31c:	mov	x0, #0x0                   	// #0
   1c320:	ret
   1c324:	stp	x19, x30, [sp, #-16]!
   1c328:	mov	x19, x0
   1c32c:	cbz	x0, 1c360 <__sanitizer_symbolize_global@@Base+0x3d78>
   1c330:	bl	1c2b0 <__sanitizer_symbolize_global@@Base+0x3cc8>
   1c334:	cbnz	x0, 1c36c <__sanitizer_symbolize_global@@Base+0x3d84>
   1c338:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c33c:	ldr	x0, [x0, #3880]
   1c340:	cbz	x0, 1c360 <__sanitizer_symbolize_global@@Base+0x3d78>
   1c344:	mov	x0, x19
   1c348:	mov	x3, #0x0                   	// #0
   1c34c:	mov	x2, #0x0                   	// #0
   1c350:	mov	x1, #0x0                   	// #0
   1c354:	bl	66f0 <__cxa_demangle@plt>
   1c358:	cmp	x0, #0x0
   1c35c:	csel	x19, x19, x0, eq  // eq = none
   1c360:	mov	x0, x19
   1c364:	ldp	x19, x30, [sp], #16
   1c368:	ret
   1c36c:	mov	x19, x0
   1c370:	b	1c360 <__sanitizer_symbolize_global@@Base+0x3d78>
   1c374:	stp	x19, x20, [sp, #-128]!
   1c378:	mov	x19, x0
   1c37c:	ldr	x0, [x0, #8]
   1c380:	stp	x21, x22, [sp, #16]
   1c384:	stp	x23, x24, [sp, #32]
   1c388:	stp	x25, x30, [sp, #48]
   1c38c:	bl	12ee8 <__sanitizer_set_report_fd@@Base+0x2648>
   1c390:	ands	w20, w0, #0xff
   1c394:	b.ne	1c3d0 <__sanitizer_symbolize_global@@Base+0x3de8>  // b.any
   1c398:	add	x19, x19, #0x4, lsl #12
   1c39c:	ldrb	w0, [x19, #33]
   1c3a0:	cbnz	w0, 1c3b8 <__sanitizer_symbolize_global@@Base+0x3dd0>
   1c3a4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c3a8:	add	x0, x0, #0x2da
   1c3ac:	bl	16a18 <OnPrint@@Base+0x30c>
   1c3b0:	mov	w0, #0x1                   	// #1
   1c3b4:	strb	w0, [x19, #33]
   1c3b8:	mov	w0, w20
   1c3bc:	ldp	x21, x22, [sp, #16]
   1c3c0:	ldp	x23, x24, [sp, #32]
   1c3c4:	ldp	x25, x30, [sp, #48]
   1c3c8:	ldp	x19, x20, [sp], #128
   1c3cc:	ret
   1c3d0:	add	x20, sp, #0x50
   1c3d4:	mov	x22, #0x0                   	// #0
   1c3d8:	mov	x21, x20
   1c3dc:	mov	x25, x20
   1c3e0:	mov	w23, #0x0                   	// #0
   1c3e4:	mov	x2, #0x8                   	// #8
   1c3e8:	mov	w1, #0x0                   	// #0
   1c3ec:	add	x0, sp, #0x40
   1c3f0:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1c3f4:	add	x0, sp, #0x48
   1c3f8:	mov	x2, #0x8                   	// #8
   1c3fc:	mov	w1, #0x0                   	// #0
   1c400:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1c404:	mov	x0, x21
   1c408:	bl	64c0 <pipe@plt>
   1c40c:	cmn	w0, #0x1
   1c410:	b.ne	1c43c <__sanitizer_symbolize_global@@Base+0x3e54>  // b.any
   1c414:	mov	w19, #0x0                   	// #0
   1c418:	cmp	w19, w23
   1c41c:	b.eq	1c4d8 <__sanitizer_symbolize_global@@Base+0x3ef0>  // b.none
   1c420:	ldr	w0, [x20]
   1c424:	add	w19, w19, #0x1
   1c428:	add	x20, x20, #0x8
   1c42c:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   1c430:	ldur	w0, [x20, #-4]
   1c434:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   1c438:	b	1c418 <__sanitizer_symbolize_global@@Base+0x3e30>
   1c43c:	ldr	w0, [x21]
   1c440:	cmp	w0, #0x2
   1c444:	b.le	1c48c <__sanitizer_symbolize_global@@Base+0x3ea4>
   1c448:	ldr	w0, [x21, #4]
   1c44c:	cmp	w0, #0x2
   1c450:	b.le	1c48c <__sanitizer_symbolize_global@@Base+0x3ea4>
   1c454:	cbz	x22, 1c488 <__sanitizer_symbolize_global@@Base+0x3ea0>
   1c458:	mov	w24, #0x0                   	// #0
   1c45c:	cmp	w24, w23
   1c460:	b.eq	1c58c <__sanitizer_symbolize_global@@Base+0x3fa4>  // b.none
   1c464:	cmp	x20, x22
   1c468:	b.eq	1c47c <__sanitizer_symbolize_global@@Base+0x3e94>  // b.none
   1c46c:	ldr	w0, [x20]
   1c470:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   1c474:	ldr	w0, [x20, #4]
   1c478:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   1c47c:	add	w24, w24, #0x1
   1c480:	add	x20, x20, #0x8
   1c484:	b	1c45c <__sanitizer_symbolize_global@@Base+0x3e74>
   1c488:	mov	x22, x21
   1c48c:	add	w23, w23, #0x1
   1c490:	add	x21, x21, #0x8
   1c494:	cmp	w23, #0x5
   1c498:	b.ne	1c404 <__sanitizer_symbolize_global@@Base+0x3e1c>  // b.any
   1c49c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c4a0:	cbz	x22, 1c4bc <__sanitizer_symbolize_global@@Base+0x3ed4>
   1c4a4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c4a8:	mov	x4, #0x0                   	// #0
   1c4ac:	add	x2, x2, #0x369
   1c4b0:	mov	x3, #0x0                   	// #0
   1c4b4:	mov	w1, #0x88                  	// #136
   1c4b8:	b	1c4d0 <__sanitizer_symbolize_global@@Base+0x3ee8>
   1c4bc:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c4c0:	add	x2, x2, #0x309
   1c4c4:	mov	x4, #0x0                   	// #0
   1c4c8:	mov	x3, #0x0                   	// #0
   1c4cc:	mov	w1, #0x87                  	// #135
   1c4d0:	add	x0, x0, #0x319
   1c4d4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1c4d8:	bl	6860 <__errno_location@plt>
   1c4dc:	ldr	w1, [x0]
   1c4e0:	mov	w20, #0x0                   	// #0
   1c4e4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c4e8:	add	x0, x0, #0x37a
   1c4ec:	bl	16a18 <OnPrint@@Base+0x30c>
   1c4f0:	b	1c3b8 <__sanitizer_symbolize_global@@Base+0x3dd0>
   1c4f4:	ldp	x0, x1, [x19]
   1c4f8:	mov	x2, x25
   1c4fc:	ldr	x3, [x0, #8]
   1c500:	mov	x0, x19
   1c504:	blr	x3
   1c508:	ldp	w3, w2, [sp, #68]
   1c50c:	mov	x1, x25
   1c510:	ldr	x0, [x19, #8]
   1c514:	mov	w4, #0xffffffff            	// #-1
   1c518:	bl	15ccc <__sanitizer_set_report_fd@@Base+0x542c>
   1c51c:	mov	w21, w0
   1c520:	cmp	w0, #0x0
   1c524:	ldr	w0, [sp, #64]
   1c528:	b.ge	1c53c <__sanitizer_symbolize_global@@Base+0x3f54>  // b.tcont
   1c52c:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   1c530:	ldr	w0, [sp, #76]
   1c534:	bl	12cec <__sanitizer_set_report_fd@@Base+0x244c>
   1c538:	b	1c3b8 <__sanitizer_symbolize_global@@Base+0x3dd0>
   1c53c:	str	w0, [x19, #16]
   1c540:	ldr	w0, [sp, #76]
   1c544:	str	w0, [x19, #20]
   1c548:	b.ne	1c564 <__sanitizer_symbolize_global@@Base+0x3f7c>  // b.any
   1c54c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c550:	mov	x4, #0x0                   	// #0
   1c554:	add	x2, x2, #0x3c8
   1c558:	mov	x3, #0x0                   	// #0
   1c55c:	mov	w1, #0xef                  	// #239
   1c560:	b	1c5bc <__sanitizer_symbolize_global@@Base+0x3fd4>
   1c564:	mov	w0, #0xa                   	// #10
   1c568:	bl	15604 <__sanitizer_set_report_fd@@Base+0x4d64>
   1c56c:	mov	w0, w21
   1c570:	bl	15e10 <__sanitizer_set_report_fd@@Base+0x5570>
   1c574:	ands	w20, w0, #0xff
   1c578:	b.ne	1c3b8 <__sanitizer_symbolize_global@@Base+0x3dd0>  // b.any
   1c57c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c580:	add	x0, x0, #0x3d8
   1c584:	bl	16a18 <OnPrint@@Base+0x30c>
   1c588:	b	1c3b8 <__sanitizer_symbolize_global@@Base+0x3dd0>
   1c58c:	ldr	x0, [x22]
   1c590:	str	x0, [sp, #64]
   1c594:	ldr	x0, [x21]
   1c598:	str	x0, [sp, #72]
   1c59c:	add	x0, x19, #0x4, lsl #12
   1c5a0:	ldrb	w20, [x0, #34]
   1c5a4:	cbz	w20, 1c4f4 <__sanitizer_symbolize_global@@Base+0x3f0c>
   1c5a8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c5ac:	add	x2, x2, #0x20
   1c5b0:	mov	x4, #0x0                   	// #0
   1c5b4:	mov	x3, #0x0                   	// #0
   1c5b8:	mov	w1, #0xde                  	// #222
   1c5bc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c5c0:	b	1c4d0 <__sanitizer_symbolize_global@@Base+0x3ee8>
   1c5c4:	mov	x0, x1
   1c5c8:	b	1c324 <__sanitizer_symbolize_global@@Base+0x3d3c>
   1c5cc:	str	x30, [sp, #-16]!
   1c5d0:	bl	1b3e8 <__sanitizer_symbolize_global@@Base+0x2e00>
   1c5d4:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c5d8:	mov	x0, #0x0                   	// #0
   1c5dc:	add	x1, x1, #0x411
   1c5e0:	bl	65c0 <dlsym@plt>
   1c5e4:	ldr	x30, [sp], #16
   1c5e8:	adrp	x1, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1c5ec:	str	x0, [x1, #880]
   1c5f0:	b	6630 <dlerror@plt>
   1c5f4:	stp	x19, x20, [sp, #-144]!
   1c5f8:	stp	x21, x22, [sp, #16]
   1c5fc:	adrp	x22, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c600:	adrp	x21, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c604:	ldr	x0, [x22, #4056]
   1c608:	stp	x23, x24, [sp, #32]
   1c60c:	stp	xzr, xzr, [sp, #96]
   1c610:	ldrb	w0, [x0]
   1c614:	str	x30, [sp, #48]
   1c618:	str	xzr, [sp, #112]
   1c61c:	cbnz	w0, 1c694 <__sanitizer_symbolize_global@@Base+0x40ac>
   1c620:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c624:	ldr	x0, [x0, #3896]
   1c628:	ldr	w0, [x0]
   1c62c:	sxtw	x0, w0
   1c630:	cmp	x0, #0x1
   1c634:	b.ls	1c644 <__sanitizer_symbolize_global@@Base+0x405c>  // b.plast
   1c638:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c63c:	add	x0, x0, #0x420
   1c640:	bl	16a18 <OnPrint@@Base+0x30c>
   1c644:	ldp	x0, x1, [sp, #96]
   1c648:	stp	x0, x1, [sp, #120]
   1c64c:	ldr	x0, [sp, #112]
   1c650:	str	x0, [sp, #136]
   1c654:	ldr	x0, [x21, #3968]
   1c658:	mov	x1, #0xf0                  	// #240
   1c65c:	bl	c108 <__sancov_default_options@@Base+0x168>
   1c660:	mov	x19, x0
   1c664:	ldp	x2, x3, [sp, #120]
   1c668:	stp	x2, x3, [sp, #64]
   1c66c:	ldr	x1, [sp, #136]
   1c670:	str	x1, [sp, #80]
   1c674:	add	x1, sp, #0x40
   1c678:	bl	1ace8 <__sanitizer_symbolize_global@@Base+0x2700>
   1c67c:	mov	x0, x19
   1c680:	ldp	x21, x22, [sp, #16]
   1c684:	ldp	x23, x24, [sp, #32]
   1c688:	ldr	x30, [sp, #48]
   1c68c:	ldp	x19, x20, [sp], #144
   1c690:	ret
   1c694:	bl	c210 <__sancov_default_options@@Base+0x270>
   1c698:	tst	w0, #0xff
   1c69c:	b.eq	1c6f8 <__sanitizer_symbolize_global@@Base+0x4110>  // b.none
   1c6a0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c6a4:	ldr	x0, [x0, #3896]
   1c6a8:	ldr	w0, [x0]
   1c6ac:	sxtw	x0, w0
   1c6b0:	cmp	x0, #0x1
   1c6b4:	b.ls	1c6c4 <__sanitizer_symbolize_global@@Base+0x40dc>  // b.plast
   1c6b8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c6bc:	add	x0, x0, #0x439
   1c6c0:	bl	16a18 <OnPrint@@Base+0x30c>
   1c6c4:	ldr	x0, [x21, #3968]
   1c6c8:	bl	1b248 <__sanitizer_symbolize_global@@Base+0x2c60>
   1c6cc:	mov	x19, x0
   1c6d0:	cbz	x0, 1c760 <__sanitizer_symbolize_global@@Base+0x4178>
   1c6d4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c6d8:	ldr	x0, [x0, #3896]
   1c6dc:	ldr	w0, [x0]
   1c6e0:	sxtw	x0, w0
   1c6e4:	cmp	x0, #0x1
   1c6e8:	b.ls	1c750 <__sanitizer_symbolize_global@@Base+0x4168>  // b.plast
   1c6ec:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c6f0:	add	x0, x0, #0x484
   1c6f4:	b	1c74c <__sanitizer_symbolize_global@@Base+0x4164>
   1c6f8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c6fc:	ldr	x0, [x0, #3888]
   1c700:	cbz	x0, 1c6c4 <__sanitizer_symbolize_global@@Base+0x40dc>
   1c704:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c708:	ldr	x0, [x0, #3856]
   1c70c:	cbz	x0, 1c6c4 <__sanitizer_symbolize_global@@Base+0x40dc>
   1c710:	ldr	x0, [x21, #3968]
   1c714:	mov	x1, #0x4010                	// #16400
   1c718:	bl	c108 <__sancov_default_options@@Base+0x168>
   1c71c:	mov	x19, x0
   1c720:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   1c724:	add	x0, x0, #0xf70
   1c728:	stp	x0, xzr, [x19]
   1c72c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c730:	ldr	x0, [x0, #3896]
   1c734:	ldr	w0, [x0]
   1c738:	sxtw	x0, w0
   1c73c:	cmp	x0, #0x1
   1c740:	b.ls	1c750 <__sanitizer_symbolize_global@@Base+0x4168>  // b.plast
   1c744:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c748:	add	x0, x0, #0x468
   1c74c:	bl	16a18 <OnPrint@@Base+0x30c>
   1c750:	mov	x1, x19
   1c754:	add	x0, sp, #0x60
   1c758:	bl	1cac8 <__sanitizer_symbolize_global@@Base+0x44e0>
   1c75c:	b	1c644 <__sanitizer_symbolize_global@@Base+0x405c>
   1c760:	ldr	x0, [x22, #4056]
   1c764:	ldr	x20, [x0, #8]
   1c768:	cbz	x20, 1c7a4 <__sanitizer_symbolize_global@@Base+0x41bc>
   1c76c:	mov	x0, x20
   1c770:	bl	dc98 <__sancov_default_options@@Base+0x1cf8>
   1c774:	mov	x19, x0
   1c778:	ldrb	w0, [x20]
   1c77c:	cbnz	w0, 1c7ac <__sanitizer_symbolize_global@@Base+0x41c4>
   1c780:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c784:	ldr	x0, [x0, #3896]
   1c788:	ldr	w0, [x0]
   1c78c:	sxtw	x0, w0
   1c790:	cmp	x0, #0x1
   1c794:	b.ls	1c644 <__sanitizer_symbolize_global@@Base+0x405c>  // b.plast
   1c798:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c79c:	add	x0, x0, #0x4a4
   1c7a0:	b	1c640 <__sanitizer_symbolize_global@@Base+0x4058>
   1c7a4:	adrp	x19, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1c7a8:	add	x19, x19, #0x6df
   1c7ac:	adrp	x24, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c7b0:	add	x24, x24, #0x4d1
   1c7b4:	mov	x1, x24
   1c7b8:	mov	x0, x19
   1c7bc:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1c7c0:	cbnz	w0, 1c814 <__sanitizer_symbolize_global@@Base+0x422c>
   1c7c4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c7c8:	ldr	x0, [x0, #3896]
   1c7cc:	ldr	w0, [x0]
   1c7d0:	sxtw	x0, w0
   1c7d4:	cmp	x0, #0x1
   1c7d8:	b.ls	1c7ec <__sanitizer_symbolize_global@@Base+0x4204>  // b.plast
   1c7dc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c7e0:	mov	x1, x20
   1c7e4:	add	x0, x0, #0x4e1
   1c7e8:	bl	16a18 <OnPrint@@Base+0x30c>
   1c7ec:	ldr	x22, [x21, #3968]
   1c7f0:	mov	x1, #0x4018                	// #16408
   1c7f4:	mov	x0, x22
   1c7f8:	bl	c108 <__sancov_default_options@@Base+0x168>
   1c7fc:	mov	x2, x22
   1c800:	mov	x19, x0
   1c804:	mov	x1, x20
   1c808:	bl	1bd08 <__sanitizer_symbolize_global@@Base+0x3720>
   1c80c:	cbnz	x19, 1c750 <__sanitizer_symbolize_global@@Base+0x4168>
   1c810:	b	1c644 <__sanitizer_symbolize_global@@Base+0x405c>
   1c814:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c818:	mov	x0, x19
   1c81c:	add	x1, x1, #0x513
   1c820:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1c824:	cbnz	w0, 1c838 <__sanitizer_symbolize_global@@Base+0x4250>
   1c828:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c82c:	add	x0, x0, #0x518
   1c830:	bl	16a18 <OnPrint@@Base+0x30c>
   1c834:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1c838:	adrp	x23, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   1c83c:	add	x23, x23, #0xac
   1c840:	mov	x1, x23
   1c844:	mov	x0, x19
   1c848:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1c84c:	cbnz	w0, 1c89c <__sanitizer_symbolize_global@@Base+0x42b4>
   1c850:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c854:	ldr	x0, [x0, #3896]
   1c858:	ldr	w0, [x0]
   1c85c:	sxtw	x0, w0
   1c860:	cmp	x0, #0x1
   1c864:	b.ls	1c878 <__sanitizer_symbolize_global@@Base+0x4290>  // b.plast
   1c868:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c86c:	mov	x1, x20
   1c870:	add	x0, x0, #0x54a
   1c874:	bl	16a18 <OnPrint@@Base+0x30c>
   1c878:	ldr	x22, [x21, #3968]
   1c87c:	mov	x1, #0x38                  	// #56
   1c880:	mov	x0, x22
   1c884:	bl	c108 <__sancov_default_options@@Base+0x168>
   1c888:	mov	x2, x22
   1c88c:	mov	x19, x0
   1c890:	mov	x1, x20
   1c894:	bl	1cd98 <__sanitizer_symbolize_global@@Base+0x47b0>
   1c898:	b	1c80c <__sanitizer_symbolize_global@@Base+0x4224>
   1c89c:	cbz	x20, 1c8b4 <__sanitizer_symbolize_global@@Base+0x42cc>
   1c8a0:	mov	x1, x20
   1c8a4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c8a8:	add	x0, x0, #0x576
   1c8ac:	bl	16a18 <OnPrint@@Base+0x30c>
   1c8b0:	b	1c834 <__sanitizer_symbolize_global@@Base+0x424c>
   1c8b4:	mov	x0, x24
   1c8b8:	bl	10a0c <__sanitizer_set_report_fd@@Base+0x16c>
   1c8bc:	mov	x20, x0
   1c8c0:	cbz	x0, 1c8ec <__sanitizer_symbolize_global@@Base+0x4304>
   1c8c4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c8c8:	ldr	x0, [x0, #3896]
   1c8cc:	ldr	w0, [x0]
   1c8d0:	sxtw	x0, w0
   1c8d4:	cmp	x0, #0x1
   1c8d8:	b.ls	1c7ec <__sanitizer_symbolize_global@@Base+0x4204>  // b.plast
   1c8dc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c8e0:	mov	x1, x20
   1c8e4:	add	x0, x0, #0x60d
   1c8e8:	b	1c7e8 <__sanitizer_symbolize_global@@Base+0x4200>
   1c8ec:	ldr	x22, [x22, #4056]
   1c8f0:	ldrb	w0, [x22, #16]
   1c8f4:	cbz	w0, 1c644 <__sanitizer_symbolize_global@@Base+0x405c>
   1c8f8:	mov	x0, x23
   1c8fc:	bl	10a0c <__sanitizer_set_report_fd@@Base+0x16c>
   1c900:	mov	x20, x0
   1c904:	cbz	x0, 1c644 <__sanitizer_symbolize_global@@Base+0x405c>
   1c908:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c90c:	ldr	x0, [x0, #3896]
   1c910:	ldr	w0, [x0]
   1c914:	sxtw	x0, w0
   1c918:	cmp	x0, #0x1
   1c91c:	b.ls	1c878 <__sanitizer_symbolize_global@@Base+0x4290>  // b.plast
   1c920:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c924:	mov	x1, x20
   1c928:	add	x0, x0, #0x631
   1c92c:	b	1c874 <__sanitizer_symbolize_global@@Base+0x428c>
   1c930:	str	x1, [x2]
   1c934:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1c938:	add	x1, x1, #0x2d4
   1c93c:	str	x1, [x2, #8]
   1c940:	ldr	x0, [x0, #16424]
   1c944:	stp	x0, xzr, [x2, #16]
   1c948:	ret
   1c94c:	mov	w0, #0x0                   	// #0
   1c950:	ret
   1c954:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1c958:	ldr	x0, [x0, #3904]
   1c95c:	cbz	x0, 1c964 <__sanitizer_symbolize_global@@Base+0x437c>
   1c960:	b	6750 <__sanitizer_symbolize_flush@plt>
   1c964:	ret
   1c968:	stp	x19, x20, [sp, #-48]!
   1c96c:	mov	x19, x2
   1c970:	mov	x20, x1
   1c974:	stp	x21, x22, [sp, #16]
   1c978:	add	x22, x0, #0x10
   1c97c:	mov	x2, x22
   1c980:	ldp	x0, x1, [x19]
   1c984:	mov	w3, #0x4000                	// #16384
   1c988:	str	x30, [sp, #32]
   1c98c:	bl	6610 <__sanitizer_symbolize_data@plt>
   1c990:	mov	w21, w0
   1c994:	tst	w0, #0xff
   1c998:	b.eq	1c9bc <__sanitizer_symbolize_global@@Base+0x43d4>  // b.none
   1c99c:	mov	x1, x19
   1c9a0:	mov	x0, x22
   1c9a4:	bl	1bc50 <__sanitizer_symbolize_global@@Base+0x3668>
   1c9a8:	ldr	x1, [x19, #48]
   1c9ac:	add	x20, x20, x1
   1c9b0:	ldr	x1, [x19, #8]
   1c9b4:	sub	x20, x20, x1
   1c9b8:	str	x20, [x19, #48]
   1c9bc:	mov	w0, w21
   1c9c0:	ldp	x21, x22, [sp, #16]
   1c9c4:	ldr	x30, [sp, #32]
   1c9c8:	ldp	x19, x20, [sp], #48
   1c9cc:	ret
   1c9d0:	stp	x19, x20, [sp, #-32]!
   1c9d4:	mov	x19, x2
   1c9d8:	mov	w3, #0x4000                	// #16384
   1c9dc:	stp	x21, x30, [sp, #16]
   1c9e0:	add	x21, x0, #0x10
   1c9e4:	mov	x2, x21
   1c9e8:	ldp	x0, x1, [x19, #16]
   1c9ec:	bl	6700 <__sanitizer_symbolize_code@plt>
   1c9f0:	mov	w20, w0
   1c9f4:	tst	w0, #0xff
   1c9f8:	b.eq	1ca08 <__sanitizer_symbolize_global@@Base+0x4420>  // b.none
   1c9fc:	mov	x1, x19
   1ca00:	mov	x0, x21
   1ca04:	bl	1ba4c <__sanitizer_symbolize_global@@Base+0x3464>
   1ca08:	mov	w0, w20
   1ca0c:	ldp	x21, x30, [sp, #16]
   1ca10:	ldp	x19, x20, [sp], #32
   1ca14:	ret
   1ca18:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1ca1c:	stp	x19, x20, [sp, #-32]!
   1ca20:	ldr	x0, [x0, #3808]
   1ca24:	stp	x21, x30, [sp, #16]
   1ca28:	mov	x21, x1
   1ca2c:	cbz	x0, 1ca7c <__sanitizer_symbolize_global@@Base+0x4494>
   1ca30:	mov	x20, #0x400                 	// #1024
   1ca34:	mov	x1, #0x0                   	// #0
   1ca38:	mov	x2, #0x0                   	// #0
   1ca3c:	mov	x0, x20
   1ca40:	bl	c408 <__sancov_default_options@@Base+0x468>
   1ca44:	mov	x1, x0
   1ca48:	mov	x19, x0
   1ca4c:	mov	w2, w20
   1ca50:	mov	x0, x21
   1ca54:	bl	6540 <__sanitizer_symbolize_demangle@plt>
   1ca58:	sxtw	x1, w0
   1ca5c:	cmp	x20, w0, sxtw
   1ca60:	b.cs	1ca80 <__sanitizer_symbolize_global@@Base+0x4498>  // b.hs, b.nlast
   1ca64:	add	x20, x1, #0x1
   1ca68:	mov	x0, x19
   1ca6c:	mov	x1, #0x0                   	// #0
   1ca70:	bl	c618 <__sancov_default_options@@Base+0x678>
   1ca74:	cmp	x20, #0x20, lsl #12
   1ca78:	b.ls	1ca34 <__sanitizer_symbolize_global@@Base+0x444c>  // b.plast
   1ca7c:	mov	x19, x21
   1ca80:	mov	x0, x19
   1ca84:	ldp	x21, x30, [sp, #16]
   1ca88:	ldp	x19, x20, [sp], #32
   1ca8c:	ret
   1ca90:	ldr	x4, [x0, #16]
   1ca94:	mov	x3, x1
   1ca98:	cmp	x1, x4
   1ca9c:	b.cc	1cabc <__sanitizer_symbolize_global@@Base+0x44d4>  // b.lo, b.ul, b.last
   1caa0:	str	x30, [sp, #-16]!
   1caa4:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1caa8:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1caac:	add	x2, x2, #0x978
   1cab0:	add	x0, x0, #0x98a
   1cab4:	mov	w1, #0x1b6                 	// #438
   1cab8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1cabc:	ldr	x0, [x0]
   1cac0:	add	x0, x0, x1, lsl #3
   1cac4:	ret
   1cac8:	ldr	x2, [x0]
   1cacc:	str	xzr, [x1, #8]
   1cad0:	cbnz	x2, 1cae4 <__sanitizer_symbolize_global@@Base+0x44fc>
   1cad4:	stp	x1, x1, [x0, #8]
   1cad8:	mov	x1, #0x1                   	// #1
   1cadc:	str	x1, [x0]
   1cae0:	ret
   1cae4:	ldr	x3, [x0, #16]
   1cae8:	add	x2, x2, #0x1
   1caec:	str	x1, [x3, #8]
   1caf0:	str	x2, [x0]
   1caf4:	str	x1, [x0, #16]
   1caf8:	b	1cae0 <__sanitizer_symbolize_global@@Base+0x44f8>
   1cafc:	stp	x19, x20, [sp, #-48]!
   1cb00:	mov	x4, x1
   1cb04:	stp	x21, x22, [sp, #16]
   1cb08:	str	x30, [sp, #32]
   1cb0c:	cbnz	x1, 1cb2c <__sanitizer_symbolize_global@@Base+0x4544>
   1cb10:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1cb14:	add	x2, x2, #0x9c7
   1cb18:	mov	x3, #0x0                   	// #0
   1cb1c:	mov	w1, #0x1fc                 	// #508
   1cb20:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1cb24:	add	x0, x0, #0x98a
   1cb28:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1cb2c:	ldr	x3, [x0, #16]
   1cb30:	mov	x20, x0
   1cb34:	cmp	x1, x3
   1cb38:	b.cs	1cb4c <__sanitizer_symbolize_global@@Base+0x4564>  // b.hs, b.nlast
   1cb3c:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1cb40:	mov	w1, #0x1fd                 	// #509
   1cb44:	add	x2, x2, #0x9e0
   1cb48:	b	1cb20 <__sanitizer_symbolize_global@@Base+0x4538>
   1cb4c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1cb50:	lsl	x19, x1, #3
   1cb54:	mov	x21, x0
   1cb58:	ldr	x22, [x0, #4016]
   1cb5c:	ldr	x1, [x22]
   1cb60:	cbnz	x1, 1cb6c <__sanitizer_symbolize_global@@Base+0x4584>
   1cb64:	bl	1352c <__sanitizer_set_report_fd@@Base+0x2c8c>
   1cb68:	str	x0, [x22]
   1cb6c:	ldr	x0, [x21, #4016]
   1cb70:	ldr	x0, [x0]
   1cb74:	sub	x4, x0, #0x1
   1cb78:	tst	x4, x0
   1cb7c:	b.eq	1cb90 <__sanitizer_symbolize_global@@Base+0x45a8>  // b.none
   1cb80:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1cb84:	add	x0, x0, #0x9fe
   1cb88:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   1cb8c:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1cb90:	add	x19, x19, x4
   1cb94:	neg	x0, x0
   1cb98:	and	x19, x19, x0
   1cb9c:	mov	w2, #0x0                   	// #0
   1cba0:	mov	x0, x19
   1cba4:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1cba8:	add	x1, x1, #0xa15
   1cbac:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   1cbb0:	ldr	x1, [x20]
   1cbb4:	mov	x21, x0
   1cbb8:	ldr	x2, [x20, #16]
   1cbbc:	lsl	x2, x2, #3
   1cbc0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1cbc4:	ldp	x0, x1, [x20]
   1cbc8:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1cbcc:	ldr	x30, [sp, #32]
   1cbd0:	stp	x21, x19, [x20]
   1cbd4:	ldp	x21, x22, [sp, #16]
   1cbd8:	ldp	x19, x20, [sp], #48
   1cbdc:	ret
   1cbe0:	stp	x19, x20, [sp, #-128]!
   1cbe4:	mov	x19, x0
   1cbe8:	mov	x20, x1
   1cbec:	stp	x21, x22, [sp, #16]
   1cbf0:	mov	x22, x2
   1cbf4:	mov	x21, #0x0                   	// #0
   1cbf8:	stp	x23, x30, [sp, #32]
   1cbfc:	add	x23, x0, #0x20
   1cc00:	str	xzr, [sp, #56]
   1cc04:	ldr	x0, [x19, #48]
   1cc08:	cmp	x21, x0
   1cc0c:	b.cs	1cc44 <__sanitizer_symbolize_global@@Base+0x465c>  // b.hs, b.nlast
   1cc10:	mov	x1, x21
   1cc14:	mov	x0, x23
   1cc18:	bl	1ca90 <__sanitizer_symbolize_global@@Base+0x44a8>
   1cc1c:	ldr	x0, [x0]
   1cc20:	ldr	x1, [x0, #16424]
   1cc24:	mov	x0, x20
   1cc28:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1cc2c:	cbnz	w0, 1ccb4 <__sanitizer_symbolize_global@@Base+0x46cc>
   1cc30:	mov	x1, x21
   1cc34:	mov	x0, x23
   1cc38:	bl	1ca90 <__sanitizer_symbolize_global@@Base+0x44a8>
   1cc3c:	ldr	x0, [x0]
   1cc40:	str	x0, [sp, #56]
   1cc44:	ldr	x0, [sp, #56]
   1cc48:	cbnz	x0, 1ccf4 <__sanitizer_symbolize_global@@Base+0x470c>
   1cc4c:	ldr	x0, [x19, #24]
   1cc50:	mov	x1, #0x4030                	// #16432
   1cc54:	bl	c108 <__sancov_default_options@@Base+0x168>
   1cc58:	mov	x21, x0
   1cc5c:	ldr	x1, [x19, #16]
   1cc60:	mov	w2, #0x0                   	// #0
   1cc64:	bl	1bc94 <__sanitizer_symbolize_global@@Base+0x36ac>
   1cc68:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   1cc6c:	add	x0, x0, #0xf18
   1cc70:	str	x0, [x21]
   1cc74:	mov	x0, x20
   1cc78:	bl	12308 <__sanitizer_set_report_fd@@Base+0x1a68>
   1cc7c:	str	x21, [sp, #56]
   1cc80:	ldr	x4, [x19, #40]
   1cc84:	str	x0, [x21, #16424]
   1cc88:	add	x21, x19, #0x20
   1cc8c:	ldr	x3, [x21, #16]
   1cc90:	lsr	x4, x4, #3
   1cc94:	cmp	x3, x4
   1cc98:	b.ls	1ccbc <__sanitizer_symbolize_global@@Base+0x46d4>  // b.plast
   1cc9c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1cca0:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1cca4:	add	x2, x2, #0x74b
   1cca8:	add	x0, x0, #0x98a
   1ccac:	mov	w1, #0x1be                 	// #446
   1ccb0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1ccb4:	add	x21, x21, #0x1
   1ccb8:	b	1cc04 <__sanitizer_symbolize_global@@Base+0x461c>
   1ccbc:	b.ne	1ccd4 <__sanitizer_symbolize_global@@Base+0x46ec>  // b.any
   1ccc0:	add	x0, x3, #0x1
   1ccc4:	bl	13edc <__sanitizer_set_report_fd@@Base+0x363c>
   1ccc8:	mov	x1, x0
   1cccc:	mov	x0, x21
   1ccd0:	bl	1cafc <__sanitizer_symbolize_global@@Base+0x4514>
   1ccd4:	ldr	x0, [x21, #16]
   1ccd8:	mov	x2, #0x8                   	// #8
   1ccdc:	ldr	x3, [x19, #32]
   1cce0:	add	x1, x0, #0x1
   1cce4:	str	x1, [x21, #16]
   1cce8:	add	x1, sp, #0x38
   1ccec:	add	x0, x3, x0, lsl #3
   1ccf0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1ccf4:	ldr	x0, [sp, #56]
   1ccf8:	ldr	x1, [x0, #16424]
   1ccfc:	mov	x0, x20
   1cd00:	bl	121f0 <__sanitizer_set_report_fd@@Base+0x1950>
   1cd04:	sxtw	x4, w0
   1cd08:	cbz	w0, 1cd28 <__sanitizer_symbolize_global@@Base+0x4740>
   1cd0c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1cd10:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1cd14:	add	x2, x2, #0x64f
   1cd18:	add	x0, x0, #0x319
   1cd1c:	mov	x3, #0x0                   	// #0
   1cd20:	mov	w1, #0x15c                 	// #348
   1cd24:	b	1ccb0 <__sanitizer_symbolize_global@@Base+0x46c8>
   1cd28:	add	x19, sp, #0x40
   1cd2c:	mov	x3, x22
   1cd30:	mov	x4, #0xffffffffffffffff    	// #-1
   1cd34:	mov	x0, x19
   1cd38:	mov	x1, #0x40                  	// #64
   1cd3c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1cd40:	add	x2, x2, #0x693
   1cd44:	bl	16710 <OnPrint@@Base+0x4>
   1cd48:	ldr	x0, [sp, #56]
   1cd4c:	mov	x1, x19
   1cd50:	bl	1be7c <__sanitizer_symbolize_global@@Base+0x3894>
   1cd54:	ldp	x21, x22, [sp, #16]
   1cd58:	ldp	x23, x30, [sp, #32]
   1cd5c:	ldp	x19, x20, [sp], #128
   1cd60:	ret
   1cd64:	stp	x19, x30, [sp, #-16]!
   1cd68:	mov	x19, x2
   1cd6c:	ldr	x2, [x2, #24]
   1cd70:	ldr	x1, [x19, #16]
   1cd74:	bl	1cbe0 <__sanitizer_symbolize_global@@Base+0x45f8>
   1cd78:	cbz	x0, 1cd90 <__sanitizer_symbolize_global@@Base+0x47a8>
   1cd7c:	mov	x1, x19
   1cd80:	bl	1ba4c <__sanitizer_symbolize_global@@Base+0x3464>
   1cd84:	mov	w0, #0x1                   	// #1
   1cd88:	ldp	x19, x30, [sp], #16
   1cd8c:	ret
   1cd90:	mov	w0, #0x0                   	// #0
   1cd94:	b	1cd88 <__sanitizer_symbolize_global@@Base+0x47a0>
   1cd98:	stp	x19, x20, [sp, #-32]!
   1cd9c:	mov	x19, x0
   1cda0:	add	x20, x0, #0x20
   1cda4:	str	x30, [sp, #16]
   1cda8:	str	xzr, [x0, #8]
   1cdac:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   1cdb0:	add	x0, x0, #0xf40
   1cdb4:	str	x0, [x19]
   1cdb8:	stp	x1, x2, [x19, #16]
   1cdbc:	mov	x0, x20
   1cdc0:	mov	x1, #0x1                   	// #1
   1cdc4:	stp	xzr, xzr, [x19, #32]
   1cdc8:	str	xzr, [x19, #48]
   1cdcc:	bl	1cafc <__sanitizer_symbolize_global@@Base+0x4514>
   1cdd0:	ldr	x0, [x19, #40]
   1cdd4:	cmp	x0, #0x7f
   1cdd8:	b.hi	1cdf0 <__sanitizer_symbolize_global@@Base+0x4808>  // b.pmore
   1cddc:	mov	x0, x20
   1cde0:	mov	x1, #0x10                  	// #16
   1cde4:	ldr	x30, [sp, #16]
   1cde8:	ldp	x19, x20, [sp], #32
   1cdec:	b	1cafc <__sanitizer_symbolize_global@@Base+0x4514>
   1cdf0:	ldr	x30, [sp, #16]
   1cdf4:	ldp	x19, x20, [sp], #32
   1cdf8:	ret
   1cdfc:	stp	x19, x20, [sp, #-32]!
   1ce00:	mov	x20, x1
   1ce04:	str	x30, [sp, #16]
   1ce08:	bl	1b2ac <__sanitizer_symbolize_global@@Base+0x2cc4>
   1ce0c:	mov	w19, w0
   1ce10:	tst	w0, #0xff
   1ce14:	b.eq	1ce58 <__sanitizer_symbolize_global@@Base+0x4870>  // b.none
   1ce18:	ldrb	w0, [x20]
   1ce1c:	cbz	w0, 1ce58 <__sanitizer_symbolize_global@@Base+0x4870>
   1ce20:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1ce24:	add	x0, x20, #0x1
   1ce28:	add	x1, x1, #0x6b3
   1ce2c:	bl	124f8 <__sanitizer_set_report_fd@@Base+0x1c58>
   1ce30:	cbnz	x0, 1ce54 <__sanitizer_symbolize_global@@Base+0x486c>
   1ce34:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1ce38:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1ce3c:	add	x2, x2, #0x6a0
   1ce40:	add	x0, x0, #0x319
   1ce44:	mov	x4, #0x0                   	// #0
   1ce48:	mov	x3, #0x0                   	// #0
   1ce4c:	mov	w1, #0x11e                 	// #286
   1ce50:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1ce54:	strb	wzr, [x0]
   1ce58:	mov	w0, w19
   1ce5c:	ldr	x30, [sp, #16]
   1ce60:	ldp	x19, x20, [sp], #32
   1ce64:	ret
   1ce68:	adrp	x2, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1ce6c:	add	x2, x2, #0x378
   1ce70:	mov	x1, #0x0                   	// #0
   1ce74:	ldr	x4, [x2, x1, lsl #3]
   1ce78:	mov	w3, w1
   1ce7c:	cbnz	x4, 1ce8c <__sanitizer_symbolize_global@@Base+0x48a4>
   1ce80:	str	x0, [x2, w3, sxtw #3]
   1ce84:	mov	w0, #0x1                   	// #1
   1ce88:	ret
   1ce8c:	add	x1, x1, #0x1
   1ce90:	cmp	x1, #0x5
   1ce94:	b.ne	1ce74 <__sanitizer_symbolize_global@@Base+0x488c>  // b.any
   1ce98:	mov	w0, #0x0                   	// #0
   1ce9c:	b	1ce88 <__sanitizer_symbolize_global@@Base+0x48a0>
   1cea0:	stp	x19, x30, [sp, #-16]!
   1cea4:	adrp	x19, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1cea8:	add	x19, x19, #0x378
   1ceac:	mov	x2, #0x0                   	// #0
   1ceb0:	ldr	x4, [x19, x2, lsl #3]
   1ceb4:	mov	w3, w2
   1ceb8:	add	w1, w2, #0x1
   1cebc:	cmp	x4, x0
   1cec0:	b.ne	1ceec <__sanitizer_symbolize_global@@Base+0x4904>  // b.any
   1cec4:	mov	w2, #0x4                   	// #4
   1cec8:	sub	w2, w2, w3
   1cecc:	add	x1, x19, w1, sxtw #3
   1ced0:	add	x0, x19, w3, sxtw #3
   1ced4:	sbfiz	x2, x2, #3, #32
   1ced8:	bl	12144 <__sanitizer_set_report_fd@@Base+0x18a4>
   1cedc:	mov	w0, #0x1                   	// #1
   1cee0:	str	xzr, [x19, #32]
   1cee4:	ldp	x19, x30, [sp], #16
   1cee8:	ret
   1ceec:	add	x2, x2, #0x1
   1cef0:	cmp	x2, #0x5
   1cef4:	b.ne	1ceb0 <__sanitizer_symbolize_global@@Base+0x48c8>  // b.any
   1cef8:	mov	w0, #0x0                   	// #0
   1cefc:	b	1cee4 <__sanitizer_symbolize_global@@Base+0x48fc>
   1cf00:	adrp	x1, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1cf04:	str	x0, [x1, #928]
   1cf08:	ret
   1cf0c:	adrp	x0, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1cf10:	add	x1, x0, #0x378
   1cf14:	stp	x19, x20, [sp, #-32]!
   1cf18:	mov	x19, x0
   1cf1c:	ldr	x1, [x1, #40]
   1cf20:	str	x30, [sp, #16]
   1cf24:	cbz	x1, 1cf2c <__sanitizer_symbolize_global@@Base+0x4944>
   1cf28:	blr	x1
   1cf2c:	add	x19, x19, #0x378
   1cf30:	mov	x20, #0x4                   	// #4
   1cf34:	ldr	x0, [x19, x20, lsl #3]
   1cf38:	cbz	x0, 1cf40 <__sanitizer_symbolize_global@@Base+0x4958>
   1cf3c:	blr	x0
   1cf40:	sub	x20, x20, #0x1
   1cf44:	cmn	x20, #0x1
   1cf48:	b.ne	1cf34 <__sanitizer_symbolize_global@@Base+0x494c>  // b.any
   1cf4c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1cf50:	ldr	x0, [x0, #4056]
   1cf54:	ldrb	w1, [x0, #220]
   1cf58:	cbz	w1, 1cf60 <__sanitizer_symbolize_global@@Base+0x4978>
   1cf5c:	bl	15610 <__sanitizer_set_report_fd@@Base+0x4d70>
   1cf60:	ldr	w0, [x0, #216]
   1cf64:	bl	12e98 <__sanitizer_set_report_fd@@Base+0x25f8>
   1cf68:	adrp	x1, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1cf6c:	str	x0, [x1, #936]
   1cf70:	ret
   1cf74:	stp	x19, x20, [sp, #-48]!
   1cf78:	adrp	x6, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1cf7c:	add	x6, x6, #0x378
   1cf80:	mov	x19, x0
   1cf84:	mov	w20, w1
   1cf88:	add	x5, x6, #0x38
   1cf8c:	stp	x21, x22, [sp, #16]
   1cf90:	mov	x21, x2
   1cf94:	mov	x22, x3
   1cf98:	stp	x23, x30, [sp, #32]
   1cf9c:	mov	x23, x4
   1cfa0:	ldxr	w7, [x5]
   1cfa4:	add	w8, w7, #0x1
   1cfa8:	stlxr	w9, w8, [x5]
   1cfac:	cbnz	w9, 1cfa0 <__sanitizer_symbolize_global@@Base+0x49b8>
   1cfb0:	dmb	ish
   1cfb4:	cmp	w7, #0xa
   1cfb8:	b.ls	1cfc8 <__sanitizer_symbolize_global@@Base+0x49e0>  // b.plast
   1cfbc:	mov	w0, #0x2                   	// #2
   1cfc0:	bl	15600 <__sanitizer_set_report_fd@@Base+0x4d60>
   1cfc4:	brk	#0x3e8
   1cfc8:	ldr	x5, [x6, #48]
   1cfcc:	cbz	x5, 1cfd4 <__sanitizer_symbolize_global@@Base+0x49ec>
   1cfd0:	blr	x5
   1cfd4:	mov	x5, x23
   1cfd8:	mov	x4, x22
   1cfdc:	mov	x3, x21
   1cfe0:	mov	w2, w20
   1cfe4:	mov	x1, x19
   1cfe8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1cfec:	add	x0, x0, #0x6bc
   1cff0:	bl	16a18 <OnPrint@@Base+0x30c>
   1cff4:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>

000000000001cff8 <__sanitizer_set_death_callback@@Base>:
   1cff8:	adrp	x1, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1cffc:	str	x0, [x1, #928]
   1d000:	ret
   1d004:	ldr	x2, [x0, #32]
   1d008:	cmp	x1, x2
   1d00c:	b.ne	1d020 <__sanitizer_set_death_callback@@Base+0x28>  // b.any
   1d010:	ldr	w0, [x0, #112]
   1d014:	tst	w0, #0xfffffffb
   1d018:	cset	w0, ne  // ne = any
   1d01c:	ret
   1d020:	mov	w0, #0x0                   	// #0
   1d024:	b	1d01c <__sanitizer_set_death_callback@@Base+0x24>
   1d028:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   1d02c:	add	x2, x2, #0xfa0
   1d030:	str	x2, [x0]
   1d034:	str	w1, [x0, #8]
   1d038:	str	xzr, [x0, #16]
   1d03c:	str	wzr, [x0, #24]
   1d040:	stp	xzr, xzr, [x0, #32]
   1d044:	strb	wzr, [x0, #48]
   1d048:	str	wzr, [x0, #112]
   1d04c:	strh	wzr, [x0, #116]
   1d050:	str	wzr, [x0, #120]
   1d054:	str	xzr, [x0, #128]
   1d058:	dmb	ish
   1d05c:	str	wzr, [x0, #136]
   1d060:	ret
   1d064:	str	x30, [sp, #-16]!
   1d068:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   1d06c:	add	x1, x1, #0xfa0
   1d070:	str	x1, [x0]
   1d074:	adrp	x2, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   1d078:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d07c:	add	x2, x2, #0xbbc
   1d080:	add	x0, x0, #0x6eb
   1d084:	mov	x4, #0x0                   	// #0
   1d088:	mov	x3, #0x0                   	// #0
   1d08c:	mov	w1, #0x1b                  	// #27
   1d090:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1d094:	strb	wzr, [x0, #48]
   1d098:	cbz	x1, 1d0bc <__sanitizer_set_death_callback@@Base+0xc4>
   1d09c:	stp	x19, x30, [sp, #-16]!
   1d0a0:	mov	x19, x0
   1d0a4:	mov	x2, #0x40                  	// #64
   1d0a8:	add	x0, x0, #0x30
   1d0ac:	bl	1241c <__sanitizer_set_report_fd@@Base+0x1b7c>
   1d0b0:	strb	wzr, [x19, #111]
   1d0b4:	ldp	x19, x30, [sp], #16
   1d0b8:	ret
   1d0bc:	ret
   1d0c0:	ldr	w2, [x0, #112]
   1d0c4:	sub	w2, w2, #0x2
   1d0c8:	cmp	w2, #0x1
   1d0cc:	b.ls	1d0f4 <__sanitizer_set_death_callback@@Base+0xfc>  // b.plast
   1d0d0:	str	x30, [sp, #-16]!
   1d0d4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d0d8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d0dc:	add	x2, x2, #0x732
   1d0e0:	add	x0, x0, #0x6eb
   1d0e4:	mov	x4, #0x0                   	// #0
   1d0e8:	mov	x3, #0x0                   	// #0
   1d0ec:	mov	w1, #0x27                  	// #39
   1d0f0:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1d0f4:	ldr	x1, [x0]
   1d0f8:	mov	w2, #0x4                   	// #4
   1d0fc:	str	xzr, [x0, #40]
   1d100:	str	w2, [x0, #112]
   1d104:	ldr	x1, [x1]
   1d108:	mov	x16, x1
   1d10c:	br	x16
   1d110:	dmb	ish
   1d114:	mov	w1, #0x1                   	// #1
   1d118:	str	w1, [x0, #136]
   1d11c:	ret
   1d120:	ldr	w0, [x0, #136]
   1d124:	dmb	ish
   1d128:	cmp	w0, #0x0
   1d12c:	cset	w0, ne  // ne = any
   1d130:	ret
   1d134:	ldrb	w3, [x0, #116]
   1d138:	str	x30, [sp, #-16]!
   1d13c:	cbz	w3, 1d160 <__sanitizer_set_death_callback@@Base+0x168>
   1d140:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d144:	add	x2, x2, #0x77d
   1d148:	mov	x4, #0x1                   	// #1
   1d14c:	mov	x3, #0x0                   	// #0
   1d150:	mov	w1, #0x38                  	// #56
   1d154:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d158:	add	x0, x0, #0x6eb
   1d15c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1d160:	ldr	w4, [x0, #112]
   1d164:	cmp	x4, #0x3
   1d168:	b.eq	1d180 <__sanitizer_set_death_callback@@Base+0x188>  // b.none
   1d16c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d170:	mov	x3, #0x3                   	// #3
   1d174:	add	x2, x2, #0x797
   1d178:	mov	w1, #0x39                  	// #57
   1d17c:	b	1d154 <__sanitizer_set_death_callback@@Base+0x15c>
   1d180:	ldr	x2, [x0]
   1d184:	mov	w3, #0x4                   	// #4
   1d188:	ldr	x30, [sp], #16
   1d18c:	str	xzr, [x0, #40]
   1d190:	ldr	x2, [x2, #8]
   1d194:	str	w3, [x0, #112]
   1d198:	mov	x16, x2
   1d19c:	br	x16
   1d1a0:	ldrb	w1, [x0, #116]
   1d1a4:	cbz	w1, 1d1b4 <__sanitizer_set_death_callback@@Base+0x1bc>
   1d1a8:	ldr	w1, [x0, #112]
   1d1ac:	cmp	w1, #0x1
   1d1b0:	b.ne	1d1bc <__sanitizer_set_death_callback@@Base+0x1c4>  // b.any
   1d1b4:	mov	w1, #0x3                   	// #3
   1d1b8:	str	w1, [x0, #112]
   1d1bc:	ldr	x1, [x0]
   1d1c0:	ldr	x1, [x1, #16]
   1d1c4:	mov	x16, x1
   1d1c8:	br	x16
   1d1cc:	str	x1, [x0, #32]
   1d1d0:	mov	w5, #0x2                   	// #2
   1d1d4:	ldr	x1, [x0]
   1d1d8:	strb	w2, [x0, #117]
   1d1dc:	str	w5, [x0, #112]
   1d1e0:	ldr	x2, [x1, #24]
   1d1e4:	mov	x1, x3
   1d1e8:	mov	x16, x2
   1d1ec:	br	x16
   1d1f0:	str	x1, [x0, #40]
   1d1f4:	mov	w6, #0x1                   	// #1
   1d1f8:	ldr	w1, [x0, #8]
   1d1fc:	str	x2, [x0, #16]
   1d200:	str	w6, [x0, #112]
   1d204:	strb	w3, [x0, #116]
   1d208:	cbz	w1, 1d210 <__sanitizer_set_death_callback@@Base+0x218>
   1d20c:	str	w4, [x0, #120]
   1d210:	ldr	x1, [x0]
   1d214:	ldr	x2, [x1, #32]
   1d218:	mov	x1, x5
   1d21c:	mov	x16, x2
   1d220:	br	x16
   1d224:	strb	wzr, [x0, #48]
   1d228:	str	wzr, [x0, #112]
   1d22c:	dmb	ish
   1d230:	str	wzr, [x0, #136]
   1d234:	ldr	x1, [x0]
   1d238:	ldr	x1, [x1, #40]
   1d23c:	mov	x16, x1
   1d240:	br	x16
   1d244:	stp	x19, x30, [sp, #-16]!
   1d248:	mov	x19, x0
   1d24c:	add	x0, x0, #0x18
   1d250:	str	x1, [x19]
   1d254:	stp	w2, w3, [x19, #8]
   1d258:	str	w4, [x19, #16]
   1d25c:	bl	1316c <__sanitizer_set_report_fd@@Base+0x28cc>
   1d260:	str	wzr, [x19, #112]
   1d264:	ldr	w0, [x19, #8]
   1d268:	mov	w2, #0x0                   	// #0
   1d26c:	stp	xzr, xzr, [x19, #120]
   1d270:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d274:	add	x1, x1, #0x7be
   1d278:	stp	xzr, xzr, [x19, #136]
   1d27c:	lsl	x0, x0, #3
   1d280:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   1d284:	stp	x0, xzr, [x19, #152]
   1d288:	stp	xzr, xzr, [x19, #168]
   1d28c:	stp	xzr, xzr, [x19, #184]
   1d290:	str	xzr, [x19, #200]
   1d294:	ldp	x19, x30, [sp], #16
   1d298:	ret
   1d29c:	stp	x19, x20, [sp, #-48]!
   1d2a0:	mov	x19, x0
   1d2a4:	mov	w20, #0x0                   	// #0
   1d2a8:	add	x0, x0, #0x18
   1d2ac:	stp	x21, x22, [sp, #16]
   1d2b0:	mov	x21, x1
   1d2b4:	mov	x22, x2
   1d2b8:	str	x30, [sp, #32]
   1d2bc:	bl	13264 <__sanitizer_set_report_fd@@Base+0x29c4>
   1d2c0:	ldr	w0, [x19, #112]
   1d2c4:	cmp	w0, w20
   1d2c8:	b.ls	1d2e8 <__sanitizer_set_death_callback@@Base+0x2f0>  // b.plast
   1d2cc:	ldr	x0, [x19, #152]
   1d2d0:	ldr	x0, [x0, w20, uxtw #3]
   1d2d4:	cbz	x0, 1d2e0 <__sanitizer_set_death_callback@@Base+0x2e8>
   1d2d8:	mov	x1, x22
   1d2dc:	blr	x21
   1d2e0:	add	w20, w20, #0x1
   1d2e4:	b	1d2c0 <__sanitizer_set_death_callback@@Base+0x2c8>
   1d2e8:	ldp	x21, x22, [sp, #16]
   1d2ec:	ldr	x30, [sp, #32]
   1d2f0:	ldp	x19, x20, [sp], #48
   1d2f4:	ret
   1d2f8:	stp	x19, x20, [sp, #-48]!
   1d2fc:	mov	x19, x0
   1d300:	add	x0, x0, #0x18
   1d304:	stp	x21, x22, [sp, #16]
   1d308:	mov	w21, #0x0                   	// #0
   1d30c:	mov	x22, x1
   1d310:	stp	x23, x30, [sp, #32]
   1d314:	mov	x23, x2
   1d318:	bl	13264 <__sanitizer_set_report_fd@@Base+0x29c4>
   1d31c:	ldr	w0, [x19, #112]
   1d320:	cmp	w0, w21
   1d324:	b.ls	1d364 <__sanitizer_set_death_callback@@Base+0x36c>  // b.plast
   1d328:	ldr	x0, [x19, #152]
   1d32c:	ldr	x20, [x0, w21, uxtw #3]
   1d330:	cbnz	x20, 1d33c <__sanitizer_set_death_callback@@Base+0x344>
   1d334:	add	w21, w21, #0x1
   1d338:	b	1d31c <__sanitizer_set_death_callback@@Base+0x324>
   1d33c:	mov	x1, x23
   1d340:	mov	x0, x20
   1d344:	blr	x22
   1d348:	tst	w0, #0xff
   1d34c:	b.eq	1d334 <__sanitizer_set_death_callback@@Base+0x33c>  // b.none
   1d350:	mov	x0, x20
   1d354:	ldp	x21, x22, [sp, #16]
   1d358:	ldp	x23, x30, [sp, #32]
   1d35c:	ldp	x19, x20, [sp], #48
   1d360:	ret
   1d364:	mov	x20, #0x0                   	// #0
   1d368:	b	1d350 <__sanitizer_set_death_callback@@Base+0x358>
   1d36c:	mov	x2, x1
   1d370:	adrp	x1, 1d000 <__sanitizer_set_death_callback@@Base+0x8>
   1d374:	add	x1, x1, #0x4
   1d378:	b	1d2f8 <__sanitizer_set_death_callback@@Base+0x300>
   1d37c:	stp	x19, x20, [sp, #-64]!
   1d380:	mov	x19, x0
   1d384:	mov	x20, x3
   1d388:	add	x0, x0, #0x18
   1d38c:	stp	x21, x22, [sp, #16]
   1d390:	mov	x22, x1
   1d394:	mov	x21, x2
   1d398:	str	x30, [sp, #32]
   1d39c:	str	x0, [sp, #56]
   1d3a0:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1d3a4:	cbz	x22, 1d3b0 <__sanitizer_set_death_callback@@Base+0x3b8>
   1d3a8:	ldr	w0, [x19, #112]
   1d3ac:	str	x0, [x22]
   1d3b0:	cbz	x21, 1d3bc <__sanitizer_set_death_callback@@Base+0x3c4>
   1d3b4:	ldr	x0, [x19, #144]
   1d3b8:	str	x0, [x21]
   1d3bc:	cbz	x20, 1d3c8 <__sanitizer_set_death_callback@@Base+0x3d0>
   1d3c0:	ldr	x0, [x19, #128]
   1d3c4:	str	x0, [x20]
   1d3c8:	add	x0, sp, #0x38
   1d3cc:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1d3d0:	ldp	x21, x22, [sp, #16]
   1d3d4:	ldr	x30, [sp, #32]
   1d3d8:	ldp	x19, x20, [sp], #64
   1d3dc:	ret
   1d3e0:	stp	x19, x30, [sp, #-32]!
   1d3e4:	mov	x19, x0
   1d3e8:	add	x0, x0, #0x18
   1d3ec:	str	x0, [sp, #24]
   1d3f0:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1d3f4:	ldr	x19, [x19, #136]
   1d3f8:	add	x0, sp, #0x18
   1d3fc:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1d400:	mov	x0, x19
   1d404:	ldp	x19, x30, [sp], #32
   1d408:	ret
   1d40c:	stp	x19, x20, [sp, #-64]!
   1d410:	mov	x19, x0
   1d414:	mov	w20, #0x0                   	// #0
   1d418:	add	x0, x0, #0x18
   1d41c:	stp	x21, x22, [sp, #16]
   1d420:	mov	x21, x1
   1d424:	mov	x22, x2
   1d428:	stp	x23, x30, [sp, #32]
   1d42c:	str	x0, [sp, #56]
   1d430:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1d434:	ldr	w0, [x19, #112]
   1d438:	cmp	w0, w20
   1d43c:	b.ls	1d488 <__sanitizer_set_death_callback@@Base+0x490>  // b.plast
   1d440:	ldr	x0, [x19, #152]
   1d444:	ldr	x23, [x0, w20, uxtw #3]
   1d448:	cbz	x23, 1d480 <__sanitizer_set_death_callback@@Base+0x488>
   1d44c:	mov	x1, x22
   1d450:	mov	x0, x23
   1d454:	blr	x21
   1d458:	tst	w0, #0xff
   1d45c:	b.eq	1d480 <__sanitizer_set_death_callback@@Base+0x488>  // b.none
   1d460:	ldr	w19, [x23, #8]
   1d464:	add	x0, sp, #0x38
   1d468:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1d46c:	mov	w0, w19
   1d470:	ldp	x21, x22, [sp, #16]
   1d474:	ldp	x23, x30, [sp, #32]
   1d478:	ldp	x19, x20, [sp], #64
   1d47c:	ret
   1d480:	add	w20, w20, #0x1
   1d484:	b	1d434 <__sanitizer_set_death_callback@@Base+0x43c>
   1d488:	mov	w19, #0xffffffff            	// #-1
   1d48c:	b	1d464 <__sanitizer_set_death_callback@@Base+0x46c>
   1d490:	stp	x19, x20, [sp, #-48]!
   1d494:	mov	x19, x0
   1d498:	mov	w20, w1
   1d49c:	add	x0, x0, #0x18
   1d4a0:	stp	x21, x30, [sp, #16]
   1d4a4:	mov	x21, x2
   1d4a8:	str	x0, [sp, #40]
   1d4ac:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1d4b0:	ldr	w4, [x19, #112]
   1d4b4:	mov	w3, w20
   1d4b8:	cmp	x4, w20, uxtw
   1d4bc:	b.hi	1d4d8 <__sanitizer_set_death_callback@@Base+0x4e0>  // b.pmore
   1d4c0:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d4c4:	add	x2, x2, #0x7cd
   1d4c8:	mov	w1, #0xd7                  	// #215
   1d4cc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d4d0:	add	x0, x0, #0x6eb
   1d4d4:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1d4d8:	ldr	x0, [x19, #152]
   1d4dc:	ldr	x0, [x0, x3, lsl #3]
   1d4e0:	cbnz	x0, 1d4fc <__sanitizer_set_death_callback@@Base+0x504>
   1d4e4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d4e8:	mov	x4, #0x0                   	// #0
   1d4ec:	add	x2, x2, #0x7e7
   1d4f0:	mov	x3, #0x0                   	// #0
   1d4f4:	mov	w1, #0xd9                  	// #217
   1d4f8:	b	1d4cc <__sanitizer_set_death_callback@@Base+0x4d4>
   1d4fc:	ldr	w4, [x0, #112]
   1d500:	cmp	x4, #0x2
   1d504:	b.eq	1d51c <__sanitizer_set_death_callback@@Base+0x524>  // b.none
   1d508:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d50c:	mov	x3, #0x2                   	// #2
   1d510:	add	x2, x2, #0x7f9
   1d514:	mov	w1, #0xda                  	// #218
   1d518:	b	1d4cc <__sanitizer_set_death_callback@@Base+0x4d4>
   1d51c:	mov	x1, x21
   1d520:	bl	1d094 <__sanitizer_set_death_callback@@Base+0x9c>
   1d524:	add	x0, sp, #0x28
   1d528:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1d52c:	ldp	x21, x30, [sp, #16]
   1d530:	ldp	x19, x20, [sp], #48
   1d534:	ret
   1d538:	stp	x19, x20, [sp, #-48]!
   1d53c:	mov	x19, x0
   1d540:	mov	x20, x1
   1d544:	add	x0, x0, #0x18
   1d548:	stp	x21, x30, [sp, #16]
   1d54c:	mov	x21, x2
   1d550:	str	x0, [sp, #40]
   1d554:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1d558:	ldr	w1, [x19, #112]
   1d55c:	mov	x3, #0x0                   	// #0
   1d560:	cmp	w1, w3
   1d564:	b.ls	1d590 <__sanitizer_set_death_callback@@Base+0x598>  // b.plast
   1d568:	ldr	x0, [x19, #152]
   1d56c:	ldr	x0, [x0, x3, lsl #3]
   1d570:	cbz	x0, 1d5a4 <__sanitizer_set_death_callback@@Base+0x5ac>
   1d574:	ldr	x2, [x0, #40]
   1d578:	cmp	x2, x20
   1d57c:	b.ne	1d5a4 <__sanitizer_set_death_callback@@Base+0x5ac>  // b.any
   1d580:	ldr	w2, [x0, #112]
   1d584:	cbz	w2, 1d5a4 <__sanitizer_set_death_callback@@Base+0x5ac>
   1d588:	mov	x1, x21
   1d58c:	bl	1d094 <__sanitizer_set_death_callback@@Base+0x9c>
   1d590:	add	x0, sp, #0x28
   1d594:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1d598:	ldp	x21, x30, [sp, #16]
   1d59c:	ldp	x19, x20, [sp], #48
   1d5a0:	ret
   1d5a4:	add	x3, x3, #0x1
   1d5a8:	b	1d560 <__sanitizer_set_death_callback@@Base+0x568>
   1d5ac:	stp	x19, x20, [sp, #-64]!
   1d5b0:	mov	x19, x0
   1d5b4:	mov	w20, w1
   1d5b8:	add	x0, x0, #0x18
   1d5bc:	stp	x21, x22, [sp, #16]
   1d5c0:	mov	x22, x4
   1d5c4:	mov	x21, x2
   1d5c8:	stp	x23, x30, [sp, #32]
   1d5cc:	and	w23, w3, #0xff
   1d5d0:	str	x0, [sp, #56]
   1d5d4:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1d5d8:	ldr	x0, [x19, #144]
   1d5dc:	mov	w3, w20
   1d5e0:	ldr	w4, [x19, #112]
   1d5e4:	add	x0, x0, #0x1
   1d5e8:	str	x0, [x19, #144]
   1d5ec:	cmp	x4, w20, uxtw
   1d5f0:	b.hi	1d60c <__sanitizer_set_death_callback@@Base+0x614>  // b.pmore
   1d5f4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d5f8:	add	x2, x2, #0x7cd
   1d5fc:	mov	w1, #0x134                 	// #308
   1d600:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d604:	add	x0, x0, #0x6eb
   1d608:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1d60c:	ldr	x0, [x19, #152]
   1d610:	ldr	x0, [x0, x3, lsl #3]
   1d614:	cbnz	x0, 1d630 <__sanitizer_set_death_callback@@Base+0x638>
   1d618:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d61c:	mov	x4, #0x0                   	// #0
   1d620:	add	x2, x2, #0x7e7
   1d624:	mov	x3, #0x0                   	// #0
   1d628:	mov	w1, #0x136                 	// #310
   1d62c:	b	1d600 <__sanitizer_set_death_callback@@Base+0x608>
   1d630:	ldr	w4, [x0, #112]
   1d634:	cmp	x4, #0x1
   1d638:	b.eq	1d650 <__sanitizer_set_death_callback@@Base+0x658>  // b.none
   1d63c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d640:	mov	x3, #0x1                   	// #1
   1d644:	add	x2, x2, #0x83f
   1d648:	mov	w1, #0x137                 	// #311
   1d64c:	b	1d600 <__sanitizer_set_death_callback@@Base+0x608>
   1d650:	mov	x3, x22
   1d654:	mov	w2, w23
   1d658:	mov	x1, x21
   1d65c:	bl	1d1cc <__sanitizer_set_death_callback@@Base+0x1d4>
   1d660:	add	x0, sp, #0x38
   1d664:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1d668:	ldp	x21, x22, [sp, #16]
   1d66c:	ldp	x23, x30, [sp, #32]
   1d670:	ldp	x19, x20, [sp], #64
   1d674:	ret
   1d678:	stp	x19, x30, [sp, #-16]!
   1d67c:	ldr	x1, [x0, #184]
   1d680:	cbz	x1, 1d69c <__sanitizer_set_death_callback@@Base+0x6a4>
   1d684:	add	x0, x0, #0xb8
   1d688:	ldr	x19, [x0, #8]
   1d68c:	bl	1dc48 <__sanitizer_set_death_callback@@Base+0xc50>
   1d690:	mov	x0, x19
   1d694:	ldp	x19, x30, [sp], #16
   1d698:	ret
   1d69c:	mov	x19, #0x0                   	// #0
   1d6a0:	b	1d690 <__sanitizer_set_death_callback@@Base+0x698>
   1d6a4:	stp	x19, x20, [sp, #-80]!
   1d6a8:	mov	x19, x0
   1d6ac:	add	x0, x0, #0x18
   1d6b0:	stp	x21, x22, [sp, #16]
   1d6b4:	mov	x21, x1
   1d6b8:	mov	w22, w3
   1d6bc:	stp	x23, x24, [sp, #32]
   1d6c0:	and	w24, w2, #0xff
   1d6c4:	mov	x23, x4
   1d6c8:	str	x30, [sp, #48]
   1d6cc:	str	x0, [sp, #72]
   1d6d0:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1d6d4:	mov	x0, x19
   1d6d8:	bl	1d678 <__sanitizer_set_death_callback@@Base+0x680>
   1d6dc:	cbz	x0, 1d708 <__sanitizer_set_death_callback@@Base+0x710>
   1d6e0:	ldr	w20, [x0, #8]
   1d6e4:	mov	x1, #0xffffffff            	// #4294967295
   1d6e8:	mov	w3, w20
   1d6ec:	cmp	x1, w20, uxtw
   1d6f0:	b.ne	1d774 <__sanitizer_set_death_callback@@Base+0x77c>  // b.any
   1d6f4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d6f8:	mov	x4, x3
   1d6fc:	add	x2, x2, #0x89b
   1d700:	mov	w1, #0x9d                  	// #157
   1d704:	b	1d74c <__sanitizer_set_death_callback@@Base+0x754>
   1d708:	ldr	w2, [x19, #8]
   1d70c:	ldr	w20, [x19, #112]
   1d710:	cmp	w20, w2
   1d714:	b.cs	1d758 <__sanitizer_set_death_callback@@Base+0x760>  // b.hs, b.nlast
   1d718:	ldr	x1, [x19]
   1d71c:	add	w0, w20, #0x1
   1d720:	str	w0, [x19, #112]
   1d724:	mov	w0, w20
   1d728:	blr	x1
   1d72c:	ldr	x1, [x19, #152]
   1d730:	str	x0, [x1, w20, uxtw #3]
   1d734:	cbnz	x0, 1d6e4 <__sanitizer_set_death_callback@@Base+0x6ec>
   1d738:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d73c:	add	x2, x2, #0x7e7
   1d740:	mov	x4, #0x0                   	// #0
   1d744:	mov	x3, #0x0                   	// #0
   1d748:	mov	w1, #0x9c                  	// #156
   1d74c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d750:	add	x0, x0, #0x6eb
   1d754:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1d758:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1d75c:	ldr	x0, [x0, #4024]
   1d760:	ldr	x1, [x0]
   1d764:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d768:	add	x0, x0, #0x86b
   1d76c:	bl	16a18 <OnPrint@@Base+0x30c>
   1d770:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1d774:	ldr	w4, [x19, #8]
   1d778:	cmp	x3, x4
   1d77c:	b.cc	1d790 <__sanitizer_set_death_callback@@Base+0x798>  // b.lo, b.ul, b.last
   1d780:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d784:	mov	w1, #0x9e                  	// #158
   1d788:	add	x2, x2, #0x8b6
   1d78c:	b	1d74c <__sanitizer_set_death_callback@@Base+0x754>
   1d790:	ldr	w3, [x0, #112]
   1d794:	cbz	x3, 1d7ac <__sanitizer_set_death_callback@@Base+0x7b4>
   1d798:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d79c:	mov	x4, #0x0                   	// #0
   1d7a0:	add	x2, x2, #0x8d1
   1d7a4:	mov	w1, #0x9f                  	// #159
   1d7a8:	b	1d74c <__sanitizer_set_death_callback@@Base+0x754>
   1d7ac:	ldp	x2, x1, [x19, #128]
   1d7b0:	add	x3, x2, #0x1
   1d7b4:	str	x3, [x19, #128]
   1d7b8:	cmp	x3, x1
   1d7bc:	b.ls	1d7e0 <__sanitizer_set_death_callback@@Base+0x7e8>  // b.plast
   1d7c0:	add	x4, x1, #0x1
   1d7c4:	str	x4, [x19, #136]
   1d7c8:	cmp	x2, x1
   1d7cc:	b.eq	1d7e0 <__sanitizer_set_death_callback@@Base+0x7e8>  // b.none
   1d7d0:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d7d4:	mov	w1, #0xa3                  	// #163
   1d7d8:	add	x2, x2, #0x8fd
   1d7dc:	b	1d74c <__sanitizer_set_death_callback@@Base+0x754>
   1d7e0:	ldr	x2, [x19, #120]
   1d7e4:	mov	x5, x23
   1d7e8:	mov	w4, w22
   1d7ec:	mov	w3, w24
   1d7f0:	add	x1, x2, #0x1
   1d7f4:	str	x1, [x19, #120]
   1d7f8:	mov	x1, x21
   1d7fc:	bl	1d1f0 <__sanitizer_set_death_callback@@Base+0x1f8>
   1d800:	add	x0, sp, #0x48
   1d804:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1d808:	mov	w0, w20
   1d80c:	ldp	x21, x22, [sp, #16]
   1d810:	ldp	x23, x24, [sp, #32]
   1d814:	ldr	x30, [sp, #48]
   1d818:	ldp	x19, x20, [sp], #80
   1d81c:	ret
   1d820:	stp	x19, x20, [sp, #-32]!
   1d824:	mov	x19, x0
   1d828:	ldr	w0, [x1, #8]
   1d82c:	str	x30, [sp, #16]
   1d830:	cbz	w0, 1d8e8 <__sanitizer_set_death_callback@@Base+0x8f0>
   1d834:	mov	x0, x19
   1d838:	ldr	x2, [x0, #160]!
   1d83c:	str	xzr, [x1, #128]
   1d840:	cbnz	x2, 1d890 <__sanitizer_set_death_callback@@Base+0x898>
   1d844:	stp	x1, x1, [x0, #8]
   1d848:	mov	x1, #0x1                   	// #1
   1d84c:	str	x1, [x19, #160]
   1d850:	ldr	x2, [x19, #160]
   1d854:	ldr	w1, [x19, #12]
   1d858:	cmp	x2, x1
   1d85c:	b.ls	1d8e8 <__sanitizer_set_death_callback@@Base+0x8f0>  // b.plast
   1d860:	ldr	x20, [x19, #168]
   1d864:	bl	1dc48 <__sanitizer_set_death_callback@@Base+0xc50>
   1d868:	ldr	w3, [x20, #112]
   1d86c:	cmp	x3, #0x4
   1d870:	b.eq	1d8a8 <__sanitizer_set_death_callback@@Base+0x8b0>  // b.none
   1d874:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d878:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d87c:	add	x2, x2, #0x92a
   1d880:	add	x0, x0, #0x6eb
   1d884:	mov	x4, #0x4                   	// #4
   1d888:	mov	w1, #0x143                 	// #323
   1d88c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1d890:	ldr	x3, [x0, #16]
   1d894:	add	x2, x2, #0x1
   1d898:	str	x1, [x3, #128]
   1d89c:	str	x1, [x0, #16]
   1d8a0:	str	x2, [x19, #160]
   1d8a4:	b	1d850 <__sanitizer_set_death_callback@@Base+0x858>
   1d8a8:	mov	x0, x20
   1d8ac:	bl	1d224 <__sanitizer_set_death_callback@@Base+0x22c>
   1d8b0:	ldr	w0, [x20, #24]
   1d8b4:	add	w0, w0, #0x1
   1d8b8:	str	w0, [x20, #24]
   1d8bc:	ldr	w1, [x19, #16]
   1d8c0:	cbz	w1, 1d8cc <__sanitizer_set_death_callback@@Base+0x8d4>
   1d8c4:	cmp	w0, w1
   1d8c8:	b.cs	1d8e8 <__sanitizer_set_death_callback@@Base+0x8f0>  // b.hs, b.nlast
   1d8cc:	mov	x0, x19
   1d8d0:	ldr	x1, [x0, #184]!
   1d8d4:	str	xzr, [x20, #128]
   1d8d8:	cbnz	x1, 1d8f4 <__sanitizer_set_death_callback@@Base+0x8fc>
   1d8dc:	stp	x20, x20, [x0, #8]
   1d8e0:	mov	x0, #0x1                   	// #1
   1d8e4:	str	x0, [x19, #184]
   1d8e8:	ldr	x30, [sp, #16]
   1d8ec:	ldp	x19, x20, [sp], #32
   1d8f0:	ret
   1d8f4:	ldr	x2, [x0, #16]
   1d8f8:	add	x1, x1, #0x1
   1d8fc:	str	x20, [x2, #128]
   1d900:	str	x20, [x0, #16]
   1d904:	str	x1, [x19, #184]
   1d908:	b	1d8e8 <__sanitizer_set_death_callback@@Base+0x8f0>
   1d90c:	stp	x19, x20, [sp, #-64]!
   1d910:	mov	x20, x0
   1d914:	mov	w19, w1
   1d918:	add	x0, x0, #0x18
   1d91c:	stp	x21, x22, [sp, #16]
   1d920:	mov	x21, x2
   1d924:	str	x30, [sp, #32]
   1d928:	str	x0, [sp, #56]
   1d92c:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1d930:	ldr	w4, [x20, #112]
   1d934:	mov	w3, w19
   1d938:	cmp	x4, w19, uxtw
   1d93c:	b.hi	1d958 <__sanitizer_set_death_callback@@Base+0x960>  // b.pmore
   1d940:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d944:	add	x2, x2, #0x7cd
   1d948:	mov	w1, #0xed                  	// #237
   1d94c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d950:	add	x0, x0, #0x6eb
   1d954:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1d958:	ldr	x0, [x20, #152]
   1d95c:	ldr	x19, [x0, x3, lsl #3]
   1d960:	cbnz	x19, 1d97c <__sanitizer_set_death_callback@@Base+0x984>
   1d964:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d968:	mov	x4, #0x0                   	// #0
   1d96c:	add	x2, x2, #0x7e7
   1d970:	mov	x3, #0x0                   	// #0
   1d974:	mov	w1, #0xef                  	// #239
   1d978:	b	1d94c <__sanitizer_set_death_callback@@Base+0x954>
   1d97c:	ldr	w0, [x19, #112]
   1d980:	add	x22, sp, #0x38
   1d984:	cbnz	w0, 1d9b8 <__sanitizer_set_death_callback@@Base+0x9c0>
   1d988:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1d98c:	ldr	x0, [x0, #4024]
   1d990:	ldr	x1, [x0]
   1d994:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1d998:	add	x0, x0, #0x953
   1d99c:	bl	16a18 <OnPrint@@Base+0x30c>
   1d9a0:	mov	x0, x22
   1d9a4:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1d9a8:	ldp	x21, x22, [sp, #16]
   1d9ac:	ldr	x30, [sp, #32]
   1d9b0:	ldp	x19, x20, [sp], #64
   1d9b4:	ret
   1d9b8:	ldr	x0, [x19]
   1d9bc:	mov	x1, x21
   1d9c0:	ldr	x2, [x0, #48]
   1d9c4:	mov	x0, x19
   1d9c8:	blr	x2
   1d9cc:	ldr	w0, [x19, #112]
   1d9d0:	cmp	w0, #0x3
   1d9d4:	b.ne	1d9f0 <__sanitizer_set_death_callback@@Base+0x9f8>  // b.any
   1d9d8:	mov	x0, x19
   1d9dc:	bl	1d0c0 <__sanitizer_set_death_callback@@Base+0xc8>
   1d9e0:	mov	x1, x19
   1d9e4:	mov	x0, x20
   1d9e8:	bl	1d820 <__sanitizer_set_death_callback@@Base+0x828>
   1d9ec:	b	1d9a0 <__sanitizer_set_death_callback@@Base+0x9a8>
   1d9f0:	mov	w0, #0x1                   	// #1
   1d9f4:	strb	w0, [x19, #116]
   1d9f8:	b	1d9a0 <__sanitizer_set_death_callback@@Base+0x9a8>
   1d9fc:	stp	x19, x20, [sp, #-96]!
   1da00:	mov	x19, x0
   1da04:	stp	x21, x22, [sp, #16]
   1da08:	add	x22, x0, #0x18
   1da0c:	stp	x23, x24, [sp, #32]
   1da10:	mov	x23, x2
   1da14:	add	x24, sp, #0x58
   1da18:	stp	x25, x26, [sp, #48]
   1da1c:	mov	w25, w1
   1da20:	ubfiz	x26, x1, #3, #32
   1da24:	str	x30, [sp, #64]
   1da28:	mov	x0, x22
   1da2c:	str	x22, [sp, #88]
   1da30:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1da34:	ldr	w4, [x19, #112]
   1da38:	cmp	x25, x4
   1da3c:	b.cc	1da5c <__sanitizer_set_death_callback@@Base+0xa64>  // b.lo, b.ul, b.last
   1da40:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1da44:	mov	x3, x25
   1da48:	add	x2, x2, #0x7cd
   1da4c:	mov	w1, #0x102                 	// #258
   1da50:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1da54:	add	x0, x0, #0x6eb
   1da58:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1da5c:	ldr	x0, [x19, #152]
   1da60:	ldr	x20, [x0, x26]
   1da64:	cbnz	x20, 1da80 <__sanitizer_set_death_callback@@Base+0xa88>
   1da68:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1da6c:	mov	x4, #0x0                   	// #0
   1da70:	add	x2, x2, #0x7e7
   1da74:	mov	x3, #0x0                   	// #0
   1da78:	mov	w1, #0x104                 	// #260
   1da7c:	b	1da50 <__sanitizer_set_death_callback@@Base+0xa58>
   1da80:	ldr	w0, [x20, #112]
   1da84:	cbnz	w0, 1dac0 <__sanitizer_set_death_callback@@Base+0xac8>
   1da88:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1da8c:	ldr	x0, [x0, #4024]
   1da90:	ldr	x1, [x0]
   1da94:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1da98:	add	x0, x0, #0x976
   1da9c:	bl	16a18 <OnPrint@@Base+0x30c>
   1daa0:	mov	x0, x24
   1daa4:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1daa8:	ldp	x21, x22, [sp, #16]
   1daac:	ldp	x23, x24, [sp, #32]
   1dab0:	ldp	x25, x26, [sp, #48]
   1dab4:	ldr	x30, [sp, #64]
   1dab8:	ldp	x19, x20, [sp], #96
   1dabc:	ret
   1dac0:	mov	x0, x20
   1dac4:	bl	1d120 <__sanitizer_set_death_callback@@Base+0x128>
   1dac8:	ands	w21, w0, #0xff
   1dacc:	b.eq	1dae8 <__sanitizer_set_death_callback@@Base+0xaf0>  // b.none
   1dad0:	mov	x1, x23
   1dad4:	mov	x0, x20
   1dad8:	bl	1d134 <__sanitizer_set_death_callback@@Base+0x13c>
   1dadc:	mov	x1, x20
   1dae0:	mov	x0, x19
   1dae4:	bl	1d820 <__sanitizer_set_death_callback@@Base+0x828>
   1dae8:	mov	x0, x24
   1daec:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1daf0:	cbnz	w21, 1daa8 <__sanitizer_set_death_callback@@Base+0xab0>
   1daf4:	bl	12e8c <__sanitizer_set_report_fd@@Base+0x25ec>
   1daf8:	b	1da28 <__sanitizer_set_death_callback@@Base+0xa30>
   1dafc:	stp	x19, x20, [sp, #-48]!
   1db00:	mov	x19, x0
   1db04:	mov	w20, w1
   1db08:	add	x0, x0, #0x18
   1db0c:	stp	x21, x30, [sp, #16]
   1db10:	str	x0, [sp, #40]
   1db14:	bl	13178 <__sanitizer_set_report_fd@@Base+0x28d8>
   1db18:	ldr	x0, [x19, #128]
   1db1c:	cbnz	x0, 1db40 <__sanitizer_set_death_callback@@Base+0xb48>
   1db20:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1db24:	add	x2, x2, #0x997
   1db28:	mov	x4, #0x0                   	// #0
   1db2c:	mov	x3, #0x0                   	// #0
   1db30:	mov	w1, #0x11a                 	// #282
   1db34:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1db38:	add	x0, x0, #0x6eb
   1db3c:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1db40:	ldr	w4, [x19, #112]
   1db44:	sub	x0, x0, #0x1
   1db48:	str	x0, [x19, #128]
   1db4c:	mov	w3, w20
   1db50:	cmp	x4, w20, uxtw
   1db54:	b.hi	1db68 <__sanitizer_set_death_callback@@Base+0xb70>  // b.pmore
   1db58:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1db5c:	mov	w1, #0x11c                 	// #284
   1db60:	add	x2, x2, #0x7cd
   1db64:	b	1db34 <__sanitizer_set_death_callback@@Base+0xb3c>
   1db68:	ldr	x0, [x19, #152]
   1db6c:	ldr	x20, [x0, x3, lsl #3]
   1db70:	cbnz	x20, 1db8c <__sanitizer_set_death_callback@@Base+0xb94>
   1db74:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1db78:	mov	x4, #0x0                   	// #0
   1db7c:	add	x2, x2, #0x7e7
   1db80:	mov	x3, #0x0                   	// #0
   1db84:	mov	w1, #0x11e                 	// #286
   1db88:	b	1db34 <__sanitizer_set_death_callback@@Base+0xb3c>
   1db8c:	ldr	w0, [x20, #112]
   1db90:	cmp	w0, #0x2
   1db94:	b.ne	1dc00 <__sanitizer_set_death_callback@@Base+0xc08>  // b.any
   1db98:	ldr	x0, [x19, #144]
   1db9c:	cbnz	x0, 1dbb8 <__sanitizer_set_death_callback@@Base+0xbc0>
   1dba0:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1dba4:	mov	x4, #0x0                   	// #0
   1dba8:	add	x2, x2, #0x9b2
   1dbac:	mov	x3, #0x0                   	// #0
   1dbb0:	mov	w1, #0x121                 	// #289
   1dbb4:	b	1db34 <__sanitizer_set_death_callback@@Base+0xb3c>
   1dbb8:	ldrb	w21, [x20, #116]
   1dbbc:	sub	x0, x0, #0x1
   1dbc0:	str	x0, [x19, #144]
   1dbc4:	mov	x0, x20
   1dbc8:	bl	1d1a0 <__sanitizer_set_death_callback@@Base+0x1a8>
   1dbcc:	cbz	w21, 1dbe4 <__sanitizer_set_death_callback@@Base+0xbec>
   1dbd0:	mov	x0, x20
   1dbd4:	bl	1d0c0 <__sanitizer_set_death_callback@@Base+0xc8>
   1dbd8:	mov	x1, x20
   1dbdc:	mov	x0, x19
   1dbe0:	bl	1d820 <__sanitizer_set_death_callback@@Base+0x828>
   1dbe4:	mov	x0, x20
   1dbe8:	bl	1d110 <__sanitizer_set_death_callback@@Base+0x118>
   1dbec:	add	x0, sp, #0x28
   1dbf0:	bl	1dc40 <__sanitizer_set_death_callback@@Base+0xc48>
   1dbf4:	ldp	x21, x30, [sp, #16]
   1dbf8:	ldp	x19, x20, [sp], #48
   1dbfc:	ret
   1dc00:	mov	w21, #0x1                   	// #1
   1dc04:	mov	w3, w0
   1dc08:	cmp	w0, w21
   1dc0c:	b.eq	1dbc4 <__sanitizer_set_death_callback@@Base+0xbcc>  // b.none
   1dc10:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1dc14:	mov	x4, #0x1                   	// #1
   1dc18:	add	x2, x2, #0x9cf
   1dc1c:	mov	w1, #0x125                 	// #293
   1dc20:	b	1db34 <__sanitizer_set_death_callback@@Base+0xb3c>
   1dc24:	ret
   1dc28:	ret
   1dc2c:	ret
   1dc30:	ret
   1dc34:	ret
   1dc38:	ret
   1dc3c:	ret
   1dc40:	ldr	x0, [x0]
   1dc44:	b	131fc <__sanitizer_set_report_fd@@Base+0x295c>
   1dc48:	ldr	x1, [x0]
   1dc4c:	cbnz	x1, 1dc74 <__sanitizer_set_death_callback@@Base+0xc7c>
   1dc50:	str	x30, [sp, #-16]!
   1dc54:	adrp	x2, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   1dc58:	adrp	x0, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   1dc5c:	add	x2, x2, #0xf46
   1dc60:	add	x0, x0, #0xf5a
   1dc64:	mov	x4, #0x0                   	// #0
   1dc68:	mov	x3, #0x0                   	// #0
   1dc6c:	mov	w1, #0x40                  	// #64
   1dc70:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1dc74:	ldr	x2, [x0, #8]
   1dc78:	ldr	x2, [x2, #128]
   1dc7c:	str	x2, [x0, #8]
   1dc80:	cbnz	x2, 1dc88 <__sanitizer_set_death_callback@@Base+0xc90>
   1dc84:	str	xzr, [x0, #16]
   1dc88:	sub	x1, x1, #0x1
   1dc8c:	str	x1, [x0]
   1dc90:	ret
   1dc94:	stp	x19, x20, [sp, #-32]!
   1dc98:	mov	x19, x0
   1dc9c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1dca0:	mov	x20, x1
   1dca4:	ldr	x0, [x0, #3896]
   1dca8:	ldr	w0, [x0]
   1dcac:	str	x30, [sp, #16]
   1dcb0:	sxtw	x0, w0
   1dcb4:	cmp	x0, #0x1
   1dcb8:	b.ls	1dcd0 <__sanitizer_set_death_callback@@Base+0xcd8>  // b.plast
   1dcbc:	mov	x2, x1
   1dcc0:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1dcc4:	mov	x1, x19
   1dcc8:	add	x0, x0, #0xa00
   1dccc:	bl	16a18 <OnPrint@@Base+0x30c>
   1dcd0:	mov	x0, x19
   1dcd4:	lsl	x1, x20, #4
   1dcd8:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1dcdc:	adrp	x0, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1dce0:	add	x0, x0, #0x3b8
   1dce4:	ldxr	x1, [x0]
   1dce8:	sub	x1, x1, #0x1
   1dcec:	stlxr	w2, x1, [x0]
   1dcf0:	cbnz	w2, 1dce4 <__sanitizer_set_death_callback@@Base+0xcec>
   1dcf4:	dmb	ish
   1dcf8:	ldr	x30, [sp, #16]
   1dcfc:	ldp	x19, x20, [sp], #32
   1dd00:	ret
   1dd04:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1dd08:	ldr	x0, [x0, #4056]
   1dd0c:	ldrb	w0, [x0, #121]
   1dd10:	cbz	w0, 1dd84 <__sanitizer_set_death_callback@@Base+0xd8c>
   1dd14:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1dd18:	stp	x19, x20, [sp, #-32]!
   1dd1c:	adrp	x19, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1dd20:	ldr	x19, [x19, #3752]
   1dd24:	ldr	x0, [x0, #3896]
   1dd28:	mrs	x20, tpidr_el0
   1dd2c:	ldr	w0, [x0]
   1dd30:	str	x30, [sp, #16]
   1dd34:	sxtw	x0, w0
   1dd38:	cmp	x0, #0x1
   1dd3c:	b.ls	1dd54 <__sanitizer_set_death_callback@@Base+0xd5c>  // b.plast
   1dd40:	ldr	x2, [x20, x19]
   1dd44:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1dd48:	add	x1, x20, x19
   1dd4c:	add	x0, x0, #0xa28
   1dd50:	bl	16a18 <OnPrint@@Base+0x30c>
   1dd54:	ldr	x1, [x20, x19]
   1dd58:	mov	x2, #0xffffffffffffffff    	// #-1
   1dd5c:	str	x2, [x20, x19]
   1dd60:	add	x0, x20, x19
   1dd64:	cbz	x1, 1dd78 <__sanitizer_set_death_callback@@Base+0xd80>
   1dd68:	ldr	x30, [sp, #16]
   1dd6c:	ldp	x19, x20, [sp], #32
   1dd70:	ldr	x0, [x0, #8]
   1dd74:	b	1dc94 <__sanitizer_set_death_callback@@Base+0xc9c>
   1dd78:	ldr	x30, [sp, #16]
   1dd7c:	ldp	x19, x20, [sp], #32
   1dd80:	ret
   1dd84:	ret
   1dd88:	stp	x19, x20, [sp, #-128]!
   1dd8c:	stp	x23, x24, [sp, #32]
   1dd90:	mov	x24, x0
   1dd94:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1dd98:	stp	x21, x22, [sp, #16]
   1dd9c:	ldr	x0, [x0, #4056]
   1dda0:	stp	x25, x26, [sp, #48]
   1dda4:	stp	x27, x28, [sp, #64]
   1dda8:	ldrb	w0, [x0, #121]
   1ddac:	str	x30, [sp, #80]
   1ddb0:	cbnz	w0, 1ddd4 <__sanitizer_set_death_callback@@Base+0xddc>
   1ddb4:	mov	x0, #0x0                   	// #0
   1ddb8:	ldp	x21, x22, [sp, #16]
   1ddbc:	ldp	x23, x24, [sp, #32]
   1ddc0:	ldp	x25, x26, [sp, #48]
   1ddc4:	ldp	x27, x28, [sp, #64]
   1ddc8:	ldr	x30, [sp, #80]
   1ddcc:	ldp	x19, x20, [sp], #128
   1ddd0:	ret
   1ddd4:	adrp	x23, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1ddd8:	ldr	x23, [x23, #3752]
   1dddc:	mrs	x20, tpidr_el0
   1dde0:	ldr	x0, [x20, x23]
   1dde4:	cmn	x0, #0x1
   1dde8:	b.eq	1ddb4 <__sanitizer_set_death_callback@@Base+0xdbc>  // b.none
   1ddec:	ldr	x21, [x24]
   1ddf0:	mov	x26, x3
   1ddf4:	mov	x25, x1
   1ddf8:	mov	x27, x2
   1ddfc:	add	x3, x21, #0x1
   1de00:	cmp	x0, x3
   1de04:	b.cs	1df48 <__sanitizer_set_death_callback@@Base+0xf50>  // b.hs, b.nlast
   1de08:	tst	x3, x21
   1de0c:	b.eq	1de6c <__sanitizer_set_death_callback@@Base+0xe74>  // b.none
   1de10:	clz	x1, x3
   1de14:	mov	w4, #0x3f                  	// #63
   1de18:	sub	w1, w4, w1
   1de1c:	mov	x4, #0x1                   	// #1
   1de20:	add	w0, w1, #0x1
   1de24:	lsl	x0, x4, x0
   1de28:	cmp	x3, x0
   1de2c:	b.cc	1de4c <__sanitizer_set_death_callback@@Base+0xe54>  // b.lo, b.ul, b.last
   1de30:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1de34:	mov	x4, x0
   1de38:	add	x2, x2, #0x7fe
   1de3c:	mov	w1, #0x17b                 	// #379
   1de40:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1de44:	add	x0, x0, #0x98a
   1de48:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1de4c:	lsl	x4, x4, x1
   1de50:	cmp	x3, x4
   1de54:	b.hi	1de68 <__sanitizer_set_death_callback@@Base+0xe70>  // b.pmore
   1de58:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   1de5c:	mov	w1, #0x17c                 	// #380
   1de60:	add	x2, x2, #0x820
   1de64:	b	1de40 <__sanitizer_set_death_callback@@Base+0xe48>
   1de68:	mov	x3, x0
   1de6c:	cmp	x3, #0x100
   1de70:	mov	x19, #0x100                 	// #256
   1de74:	csel	x19, x3, x19, cs  // cs = hs, nlast
   1de78:	mov	w2, #0x0                   	// #0
   1de7c:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1de80:	add	x1, x1, #0xa4d
   1de84:	lsl	x0, x19, #4
   1de88:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   1de8c:	adrp	x1, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1de90:	mov	x22, x0
   1de94:	add	x1, x1, #0x3b8
   1de98:	ldxr	x28, [x1]
   1de9c:	add	x0, x28, #0x1
   1dea0:	stlxr	w2, x0, [x1]
   1dea4:	cbnz	w2, 1de98 <__sanitizer_set_death_callback@@Base+0xea0>
   1dea8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1deac:	dmb	ish
   1deb0:	ldr	x0, [x0, #3896]
   1deb4:	ldr	w0, [x0]
   1deb8:	sxtw	x0, w0
   1debc:	cmp	x0, #0x1
   1dec0:	b.ls	1ded8 <__sanitizer_set_death_callback@@Base+0xee0>  // b.plast
   1dec4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1dec8:	mov	x2, x28
   1decc:	add	x1, x20, x23
   1ded0:	add	x0, x0, #0xa59
   1ded4:	bl	16a18 <OnPrint@@Base+0x30c>
   1ded8:	mov	x0, #0xfffff               	// #1048575
   1dedc:	cmp	x28, x0
   1dee0:	b.ls	1df04 <__sanitizer_set_death_callback@@Base+0xf0c>  // b.plast
   1dee4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1dee8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1deec:	mov	x3, x28
   1def0:	add	x2, x2, #0xa7d
   1def4:	add	x0, x0, #0xa9d
   1def8:	mov	x4, #0x100000              	// #1048576
   1defc:	mov	w1, #0x3c                  	// #60
   1df00:	b	1de48 <__sanitizer_set_death_callback@@Base+0xe50>
   1df04:	ldr	x28, [x20, x23]
   1df08:	add	x0, x20, x23
   1df0c:	ldr	x3, [x0, #8]
   1df10:	cbz	x28, 1df2c <__sanitizer_set_death_callback@@Base+0xf34>
   1df14:	mov	x1, x3
   1df18:	lsl	x2, x28, #4
   1df1c:	mov	x0, x22
   1df20:	str	x3, [sp, #104]
   1df24:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1df28:	ldr	x3, [sp, #104]
   1df2c:	add	x0, x20, x23
   1df30:	str	x19, [x20, x23]
   1df34:	str	x22, [x0, #8]
   1df38:	cbz	x28, 1df48 <__sanitizer_set_death_callback@@Base+0xf50>
   1df3c:	mov	x1, x28
   1df40:	mov	x0, x3
   1df44:	bl	1dc94 <__sanitizer_set_death_callback@@Base+0xc9c>
   1df48:	add	x0, x20, x23
   1df4c:	lsl	x21, x21, #4
   1df50:	ldr	x0, [x0, #8]
   1df54:	ldr	x22, [x0, x21]
   1df58:	cbnz	x22, 1ddb4 <__sanitizer_set_death_callback@@Base+0xdbc>
   1df5c:	adrp	x19, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1df60:	ldr	x3, [x24, #8]
   1df64:	ldr	x0, [x19, #3896]
   1df68:	sub	x5, x25, x3
   1df6c:	str	x5, [sp, #120]
   1df70:	ldr	w0, [x0]
   1df74:	sxtw	x0, w0
   1df78:	cmp	x0, #0x1
   1df7c:	b.ls	1dfa4 <__sanitizer_set_death_callback@@Base+0xfac>  // b.plast
   1df80:	adrp	x0, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1df84:	add	x6, sp, #0x78
   1df88:	ldr	x2, [x24]
   1df8c:	mov	x4, x25
   1df90:	ldr	x7, [x0, #952]
   1df94:	mov	x1, x24
   1df98:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1df9c:	add	x0, x0, #0xae1
   1dfa0:	bl	16a18 <OnPrint@@Base+0x30c>
   1dfa4:	add	x2, x20, x23
   1dfa8:	ldr	x0, [sp, #120]
   1dfac:	ldr	x1, [x2, #24]
   1dfb0:	cmp	x1, x0
   1dfb4:	b.ne	1dfe4 <__sanitizer_set_death_callback@@Base+0xfec>  // b.any
   1dfb8:	ldr	x19, [x19, #3896]
   1dfbc:	ldr	x22, [x2, #16]
   1dfc0:	ldr	w0, [x19]
   1dfc4:	sxtw	x0, w0
   1dfc8:	cmp	x0, #0x1
   1dfcc:	b.ls	1e018 <__sanitizer_set_death_callback@@Base+0x1020>  // b.plast
   1dfd0:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1dfd4:	mov	x2, x22
   1dfd8:	add	x0, x0, #0xb2a
   1dfdc:	bl	16a18 <OnPrint@@Base+0x30c>
   1dfe0:	b	1e018 <__sanitizer_set_death_callback@@Base+0x1020>
   1dfe4:	cmp	x0, x27
   1dfe8:	b.cc	1e034 <__sanitizer_set_death_callback@@Base+0x103c>  // b.lo, b.ul, b.last
   1dfec:	cmp	x0, x26
   1dff0:	b.cs	1e034 <__sanitizer_set_death_callback@@Base+0x103c>  // b.hs, b.nlast
   1dff4:	ldr	x19, [x19, #3896]
   1dff8:	ldr	w1, [x19]
   1dffc:	sxtw	x1, w1
   1e000:	cmp	x1, #0x1
   1e004:	b.ls	1e018 <__sanitizer_set_death_callback@@Base+0x1020>  // b.plast
   1e008:	mov	x1, x0
   1e00c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e010:	add	x0, x0, #0xb5f
   1e014:	bl	16a18 <OnPrint@@Base+0x30c>
   1e018:	add	x20, x20, x23
   1e01c:	ldr	x2, [sp, #120]
   1e020:	ldr	x1, [x20, #8]
   1e024:	add	x0, x1, x21
   1e028:	str	x2, [x1, x21]
   1e02c:	str	x22, [x0, #8]
   1e030:	b	1ddb8 <__sanitizer_set_death_callback@@Base+0xdc0>
   1e034:	and	x1, x0, #0xfff
   1e038:	cmp	x1, #0x10
   1e03c:	b.ne	1e06c <__sanitizer_set_death_callback@@Base+0x1074>  // b.any
   1e040:	ldr	x19, [x19, #3896]
   1e044:	ldp	x22, x1, [x0, #-16]
   1e048:	str	x1, [sp, #120]
   1e04c:	ldr	w0, [x19]
   1e050:	sxtw	x0, w0
   1e054:	cmp	x0, #0x1
   1e058:	b.ls	1e018 <__sanitizer_set_death_callback@@Base+0x1020>  // b.plast
   1e05c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e060:	mov	x2, x22
   1e064:	add	x0, x0, #0xb7f
   1e068:	b	1dfdc <__sanitizer_set_death_callback@@Base+0xfe4>
   1e06c:	ldr	x19, [x19, #3896]
   1e070:	ldr	w0, [x19]
   1e074:	sxtw	x0, w0
   1e078:	cmp	x0, #0x1
   1e07c:	b.ls	1e018 <__sanitizer_set_death_callback@@Base+0x1020>  // b.plast
   1e080:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e084:	add	x0, x0, #0xbb4
   1e088:	bl	16a18 <OnPrint@@Base+0x30c>
   1e08c:	b	1e018 <__sanitizer_set_death_callback@@Base+0x1020>
   1e090:	stp	x19, x20, [sp, #-32]!
   1e094:	mov	x20, x0
   1e098:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1e09c:	ldr	x0, [x0, #4056]
   1e0a0:	ldrb	w0, [x0, #121]
   1e0a4:	str	x30, [sp, #16]
   1e0a8:	cbz	w0, 1e0f0 <__sanitizer_set_death_callback@@Base+0x10f8>
   1e0ac:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1e0b0:	mov	x19, x1
   1e0b4:	ldr	x0, [x0, #3896]
   1e0b8:	ldr	w0, [x0]
   1e0bc:	sxtw	x0, w0
   1e0c0:	cmp	x0, #0x1
   1e0c4:	b.ls	1e0dc <__sanitizer_set_death_callback@@Base+0x10e4>  // b.plast
   1e0c8:	mov	x2, x1
   1e0cc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e0d0:	mov	x1, x20
   1e0d4:	add	x0, x0, #0xbdf
   1e0d8:	bl	16a18 <OnPrint@@Base+0x30c>
   1e0dc:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1e0e0:	ldr	x3, [x3, #3752]
   1e0e4:	mrs	x4, tpidr_el0
   1e0e8:	add	x3, x4, x3
   1e0ec:	stp	x19, x20, [x3, #16]
   1e0f0:	ldr	x30, [sp, #16]
   1e0f4:	ldp	x19, x20, [sp], #32
   1e0f8:	ret
   1e0fc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   1e100:	ldr	x0, [x0, #3752]
   1e104:	mrs	x1, tpidr_el0
   1e108:	add	x0, x1, x0
   1e10c:	ret
   1e110:	ldr	x0, [x0]
   1e114:	cmn	x0, #0x1
   1e118:	cset	w0, eq  // eq = none
   1e11c:	ret
   1e120:	stp	x19, x20, [sp, #-32]!
   1e124:	mov	x19, x1
   1e128:	ldr	w4, [x1, #8]
   1e12c:	ldr	x1, [x1]
   1e130:	ldr	w3, [x1, #8]
   1e134:	str	x30, [sp, #16]
   1e138:	cmp	x3, x4
   1e13c:	b.cc	1e158 <__sanitizer_set_death_callback@@Base+0x1160>  // b.lo, b.ul, b.last
   1e140:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e144:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e148:	add	x2, x2, #0xbfd
   1e14c:	add	x0, x0, #0xc27
   1e150:	mov	w1, #0x6d                  	// #109
   1e154:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1e158:	bl	6800 <_Unwind_GetIP@plt>
   1e15c:	mov	x20, x0
   1e160:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   1e164:	cmp	x0, x20
   1e168:	b.hi	1e190 <__sanitizer_set_death_callback@@Base+0x1198>  // b.pmore
   1e16c:	ldr	x0, [x19]
   1e170:	ldr	w1, [x0, #8]
   1e174:	add	w2, w1, #0x1
   1e178:	str	w2, [x0, #8]
   1e17c:	add	x1, x0, w1, uxtw #3
   1e180:	ldr	w0, [x19, #8]
   1e184:	cmp	w2, w0
   1e188:	str	x20, [x1, #16]
   1e18c:	b.ne	1e1a0 <__sanitizer_set_death_callback@@Base+0x11a8>  // b.any
   1e190:	mov	w0, #0x4                   	// #4
   1e194:	ldr	x30, [sp, #16]
   1e198:	ldp	x19, x20, [sp], #32
   1e19c:	ret
   1e1a0:	mov	w0, #0x0                   	// #0
   1e1a4:	b	1e194 <__sanitizer_set_death_callback@@Base+0x119c>
   1e1a8:	b	6800 <_Unwind_GetIP@plt>
   1e1ac:	stp	x19, x20, [sp, #-48]!
   1e1b0:	cmp	w2, #0x1
   1e1b4:	str	x30, [sp, #16]
   1e1b8:	b.hi	1e1dc <__sanitizer_set_death_callback@@Base+0x11e4>  // b.pmore
   1e1bc:	mov	w3, w2
   1e1c0:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e1c4:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1e1c8:	add	x0, x0, #0xc27
   1e1cc:	add	x2, x2, #0x6a0
   1e1d0:	mov	x4, #0x2                   	// #2
   1e1d4:	mov	w1, #0x7a                  	// #122
   1e1d8:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1e1dc:	mov	x19, x0
   1e1e0:	add	w2, w2, #0x1
   1e1e4:	cmp	w2, #0x100
   1e1e8:	mov	w0, #0x100                 	// #256
   1e1ec:	csel	w2, w2, w0, ls  // ls = plast
   1e1f0:	mov	x20, x1
   1e1f4:	str	wzr, [x19, #8]
   1e1f8:	add	x1, sp, #0x20
   1e1fc:	adrp	x0, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   1e200:	add	x0, x0, #0x120
   1e204:	str	x19, [sp, #32]
   1e208:	str	w2, [sp, #40]
   1e20c:	bl	6400 <_Unwind_Backtrace@plt>
   1e210:	mov	x1, x20
   1e214:	mov	x0, x19
   1e218:	bl	181a0 <OnPrint@@Base+0x1a94>
   1e21c:	mov	x1, x0
   1e220:	cbnz	x0, 1e230 <__sanitizer_set_death_callback@@Base+0x1238>
   1e224:	ldr	w0, [x19, #8]
   1e228:	cmp	w0, #0x1
   1e22c:	cset	x1, hi  // hi = pmore
   1e230:	mov	x0, x19
   1e234:	bl	1813c <OnPrint@@Base+0x1a30>
   1e238:	ldr	x30, [sp, #16]
   1e23c:	str	x20, [x19, #16]
   1e240:	ldp	x19, x20, [sp], #48
   1e244:	ret
   1e248:	stp	x19, x20, [sp, #-96]!
   1e24c:	stp	x21, x22, [sp, #16]
   1e250:	stp	x23, x24, [sp, #32]
   1e254:	mov	w24, w3
   1e258:	cmp	w24, #0x1
   1e25c:	stp	x25, x30, [sp, #48]
   1e260:	b.hi	1e284 <__sanitizer_set_death_callback@@Base+0x128c>  // b.pmore
   1e264:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1e268:	mov	x3, x24
   1e26c:	add	x2, x2, #0x6a0
   1e270:	mov	x4, #0x2                   	// #2
   1e274:	mov	w1, #0x94                  	// #148
   1e278:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e27c:	add	x0, x0, #0xc27
   1e280:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1e284:	adrp	x3, 9a2000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1e288:	add	x4, x3, #0x3c0
   1e28c:	mov	x20, x3
   1e290:	ldr	x5, [x3, #960]
   1e294:	cbnz	x5, 1e2b4 <__sanitizer_set_death_callback@@Base+0x12bc>
   1e298:	mov	x2, x24
   1e29c:	bl	1e1ac <__sanitizer_set_death_callback@@Base+0x11b4>
   1e2a0:	ldp	x21, x22, [sp, #16]
   1e2a4:	ldp	x23, x24, [sp, #32]
   1e2a8:	ldp	x25, x30, [sp, #48]
   1e2ac:	ldp	x19, x20, [sp], #96
   1e2b0:	ret
   1e2b4:	mov	x19, x0
   1e2b8:	mov	x22, x2
   1e2bc:	ldr	x0, [x4, #8]
   1e2c0:	blr	x0
   1e2c4:	mov	x21, x0
   1e2c8:	cbnz	x0, 1e2e4 <__sanitizer_set_death_callback@@Base+0x12ec>
   1e2cc:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e2d0:	mov	x4, #0x0                   	// #0
   1e2d4:	add	x2, x2, #0xc73
   1e2d8:	mov	x3, #0x0                   	// #0
   1e2dc:	mov	w1, #0x9b                  	// #155
   1e2e0:	b	1e278 <__sanitizer_set_death_callback@@Base+0x1280>
   1e2e4:	add	x23, sp, #0x48
   1e2e8:	mov	x1, #0x100                 	// #256
   1e2ec:	mov	x0, x23
   1e2f0:	stp	xzr, xzr, [sp, #72]
   1e2f4:	str	xzr, [sp, #88]
   1e2f8:	bl	1e424 <__sanitizer_set_death_callback@@Base+0x142c>
   1e2fc:	ldr	x0, [sp, #88]
   1e300:	cmp	x0, #0xff
   1e304:	b.hi	1e348 <__sanitizer_set_death_callback@@Base+0x1350>  // b.pmore
   1e308:	ldr	x1, [sp, #80]
   1e30c:	mov	x0, #0x17ff                	// #6143
   1e310:	cmp	x1, x0
   1e314:	b.hi	1e324 <__sanitizer_set_death_callback@@Base+0x132c>  // b.pmore
   1e318:	mov	x0, x23
   1e31c:	mov	x1, #0x100                 	// #256
   1e320:	bl	1e424 <__sanitizer_set_death_callback@@Base+0x142c>
   1e324:	ldr	x0, [sp, #88]
   1e328:	mov	x1, #0x100                 	// #256
   1e32c:	ldr	x4, [sp, #72]
   1e330:	sub	x1, x1, x0
   1e334:	mov	x3, #0x18                  	// #24
   1e338:	mul	x2, x1, x3
   1e33c:	mov	w1, #0x0                   	// #0
   1e340:	madd	x0, x0, x3, x4
   1e344:	bl	12190 <__sanitizer_set_report_fd@@Base+0x18f0>
   1e348:	ldr	x6, [x20, #960]
   1e34c:	add	x25, x20, #0x3c0
   1e350:	ldr	x3, [sp, #72]
   1e354:	mov	x23, #0x100                 	// #256
   1e358:	str	x23, [sp, #88]
   1e35c:	mov	x1, x22
   1e360:	mov	x5, x24
   1e364:	mov	x2, x21
   1e368:	mov	x4, #0x0                   	// #0
   1e36c:	mov	x0, #0x0                   	// #0
   1e370:	blr	x6
   1e374:	mov	x20, x0
   1e378:	ldr	x1, [x25, #16]
   1e37c:	mov	x0, x21
   1e380:	blr	x1
   1e384:	tbz	x20, #63, 1e394 <__sanitizer_set_death_callback@@Base+0x139c>
   1e388:	ldp	x0, x1, [sp, #72]
   1e38c:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1e390:	b	1e2a0 <__sanitizer_set_death_callback@@Base+0x12a8>
   1e394:	cmp	x20, #0x100
   1e398:	b.le	1e3b4 <__sanitizer_set_death_callback@@Base+0x13bc>
   1e39c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e3a0:	mov	x4, x23
   1e3a4:	mov	x3, x20
   1e3a8:	add	x2, x2, #0xc82
   1e3ac:	mov	w1, #0xa3                  	// #163
   1e3b0:	b	1e278 <__sanitizer_set_death_callback@@Base+0x1280>
   1e3b4:	ldr	x0, [sp, #72]
   1e3b8:	mov	x1, #0x0                   	// #0
   1e3bc:	ldr	x4, [sp, #88]
   1e3c0:	mov	x6, #0x18                  	// #24
   1e3c4:	str	wzr, [x19, #8]
   1e3c8:	cmp	x1, x20
   1e3cc:	b.eq	1e41c <__sanitizer_set_death_callback@@Base+0x1424>  // b.none
   1e3d0:	cmp	x4, x1
   1e3d4:	b.ne	1e3f4 <__sanitizer_set_death_callback@@Base+0x13fc>  // b.any
   1e3d8:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1e3dc:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1e3e0:	mov	x3, x4
   1e3e4:	add	x2, x2, #0x978
   1e3e8:	add	x0, x0, #0x98a
   1e3ec:	mov	w1, #0x1b6                 	// #438
   1e3f0:	b	1e280 <__sanitizer_set_death_callback@@Base+0x1288>
   1e3f4:	mul	x2, x1, x6
   1e3f8:	add	x1, x1, #0x1
   1e3fc:	ldr	x3, [x0, x2]
   1e400:	ldr	w2, [x19, #8]
   1e404:	add	x3, x3, #0x2
   1e408:	add	w5, w2, #0x1
   1e40c:	str	w5, [x19, #8]
   1e410:	add	x2, x19, w2, uxtw #3
   1e414:	str	x3, [x2, #16]
   1e418:	b	1e3c8 <__sanitizer_set_death_callback@@Base+0x13d0>
   1e41c:	ldr	x1, [sp, #80]
   1e420:	b	1e38c <__sanitizer_set_death_callback@@Base+0x1394>
   1e424:	stp	x19, x20, [sp, #-48]!
   1e428:	mov	x4, x1
   1e42c:	stp	x21, x22, [sp, #16]
   1e430:	str	x30, [sp, #32]
   1e434:	cbnz	x1, 1e454 <__sanitizer_set_death_callback@@Base+0x145c>
   1e438:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1e43c:	add	x2, x2, #0x9c7
   1e440:	mov	x3, #0x0                   	// #0
   1e444:	mov	w1, #0x1fc                 	// #508
   1e448:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1e44c:	add	x0, x0, #0x98a
   1e450:	bl	1cf74 <__sanitizer_symbolize_global@@Base+0x498c>
   1e454:	ldr	x3, [x0, #16]
   1e458:	mov	x21, x0
   1e45c:	cmp	x1, x3
   1e460:	b.cs	1e474 <__sanitizer_set_death_callback@@Base+0x147c>  // b.hs, b.nlast
   1e464:	adrp	x2, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1e468:	mov	w1, #0x1fd                 	// #509
   1e46c:	add	x2, x2, #0x9e0
   1e470:	b	1e448 <__sanitizer_set_death_callback@@Base+0x1450>
   1e474:	mov	x22, #0x18                  	// #24
   1e478:	mul	x19, x1, x22
   1e47c:	bl	c6bc <__sancov_default_options@@Base+0x71c>
   1e480:	sub	x1, x0, #0x1
   1e484:	tst	x1, x0
   1e488:	b.eq	1e49c <__sanitizer_set_death_callback@@Base+0x14a4>  // b.none
   1e48c:	adrp	x0, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1e490:	add	x0, x0, #0x9fe
   1e494:	bl	10498 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19c4>
   1e498:	bl	1cf0c <__sanitizer_symbolize_global@@Base+0x4924>
   1e49c:	sub	x19, x19, #0x1
   1e4a0:	mov	w2, #0x0                   	// #0
   1e4a4:	add	x19, x19, x0
   1e4a8:	neg	x0, x0
   1e4ac:	and	x19, x19, x0
   1e4b0:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   1e4b4:	mov	x0, x19
   1e4b8:	add	x1, x1, #0xa15
   1e4bc:	bl	148fc <__sanitizer_set_report_fd@@Base+0x405c>
   1e4c0:	mov	x20, x0
   1e4c4:	ldr	x2, [x21, #16]
   1e4c8:	ldr	x1, [x21]
   1e4cc:	mul	x2, x2, x22
   1e4d0:	bl	12124 <__sanitizer_set_report_fd@@Base+0x1884>
   1e4d4:	ldp	x0, x1, [x21]
   1e4d8:	bl	14990 <__sanitizer_set_report_fd@@Base+0x40f0>
   1e4dc:	ldr	x30, [sp, #32]
   1e4e0:	stp	x20, x19, [x21]
   1e4e4:	ldp	x21, x22, [sp, #16]
   1e4e8:	ldp	x19, x20, [sp], #48
   1e4ec:	ret
   1e4f0:	stp	x19, x20, [sp, #-48]!
   1e4f4:	mov	x19, x1
   1e4f8:	mov	x20, x0
   1e4fc:	mov	x1, x0
   1e500:	mov	x0, #0xffffffffffffffff    	// #-1
   1e504:	stp	x21, x22, [sp, #16]
   1e508:	mov	x22, x2
   1e50c:	mov	x21, x3
   1e510:	str	x30, [sp, #32]
   1e514:	bl	65c0 <dlsym@plt>
   1e518:	str	x0, [x19]
   1e51c:	cbnz	x0, 1e52c <__sanitizer_set_death_callback@@Base+0x1534>
   1e520:	mov	x1, x20
   1e524:	bl	65c0 <dlsym@plt>
   1e528:	str	x0, [x19]
   1e52c:	cmp	x22, x21
   1e530:	cset	w0, eq  // eq = none
   1e534:	ldp	x21, x22, [sp, #16]
   1e538:	ldr	x30, [sp, #32]
   1e53c:	ldp	x19, x20, [sp], #48
   1e540:	ret
   1e544:	mov	x2, x1
   1e548:	mov	x1, x0
   1e54c:	mov	x0, #0xffffffffffffffff    	// #-1
   1e550:	b	6510 <dlvsym@plt>
   1e554:	sub	w1, w1, #0x1
   1e558:	cmp	w1, #0x7
   1e55c:	b.hi	1e5a0 <__sanitizer_set_death_callback@@Base+0x15a8>  // b.pmore
   1e560:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e564:	add	x2, x2, #0xca8
   1e568:	ldrb	w1, [x2, w1, uxtw]
   1e56c:	adr	x2, 1e578 <__sanitizer_set_death_callback@@Base+0x1580>
   1e570:	add	x1, x2, w1, sxtb #2
   1e574:	br	x1
   1e578:	cmp	x0, #0xff
   1e57c:	cset	w0, eq  // eq = none
   1e580:	ret
   1e584:	mov	x1, #0xffff                	// #65535
   1e588:	cmp	x0, x1
   1e58c:	b	1e57c <__sanitizer_set_death_callback@@Base+0x1584>
   1e590:	mov	x1, #0xffffffff            	// #4294967295
   1e594:	b	1e588 <__sanitizer_set_death_callback@@Base+0x1590>
   1e598:	cmn	x0, #0x1
   1e59c:	b	1e57c <__sanitizer_set_death_callback@@Base+0x1584>
   1e5a0:	mov	w0, #0x0                   	// #0
   1e5a4:	b	1e580 <__sanitizer_set_death_callback@@Base+0x1588>
   1e5a8:	ldr	x1, [x1]
   1e5ac:	ldr	x0, [x0]
   1e5b0:	ldr	x2, [x1, #24]
   1e5b4:	cmp	x2, x0
   1e5b8:	b.hi	1e5cc <__sanitizer_set_death_callback@@Base+0x15d4>  // b.pmore
   1e5bc:	ldr	x1, [x1, #32]
   1e5c0:	cmp	x1, x0
   1e5c4:	cset	w0, ls  // ls = plast
   1e5c8:	ret
   1e5cc:	mov	w0, #0xffffffff            	// #-1
   1e5d0:	b	1e5c8 <__sanitizer_set_death_callback@@Base+0x15d0>
   1e5d4:	ldr	x0, [x0]
   1e5d8:	ldr	x2, [x1]
   1e5dc:	cmp	x2, x0
   1e5e0:	b.hi	1e5f4 <__sanitizer_set_death_callback@@Base+0x15fc>  // b.pmore
   1e5e4:	ldr	x1, [x1, #8]
   1e5e8:	cmp	x1, x0
   1e5ec:	cset	w0, ls  // ls = plast
   1e5f0:	ret
   1e5f4:	mov	w0, #0xffffffff            	// #-1
   1e5f8:	b	1e5f0 <__sanitizer_set_death_callback@@Base+0x15f8>
   1e5fc:	ldr	x0, [x0]
   1e600:	ldr	x2, [x1]
   1e604:	cmp	x2, x0
   1e608:	b.hi	1e61c <__sanitizer_set_death_callback@@Base+0x1624>  // b.pmore
   1e60c:	ldr	x1, [x1, #8]
   1e610:	cmp	x1, x0
   1e614:	cset	w0, ls  // ls = plast
   1e618:	ret
   1e61c:	mov	w0, #0xffffffff            	// #-1
   1e620:	b	1e618 <__sanitizer_set_death_callback@@Base+0x1620>
   1e624:	ldr	x0, [x0]
   1e628:	ldr	x2, [x1]
   1e62c:	cmp	x2, x0
   1e630:	b.hi	1e644 <__sanitizer_set_death_callback@@Base+0x164c>  // b.pmore
   1e634:	ldr	x1, [x1, #24]
   1e638:	cmp	x1, x0
   1e63c:	cset	w0, ls  // ls = plast
   1e640:	ret
   1e644:	mov	w0, #0xffffffff            	// #-1
   1e648:	b	1e640 <__sanitizer_set_death_callback@@Base+0x1648>
   1e64c:	ldr	x2, [x0]
   1e650:	ldr	x1, [x1]
   1e654:	cmp	x2, x1
   1e658:	cset	w0, hi  // hi = pmore
   1e65c:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
   1e660:	ret
   1e664:	stp	x29, x30, [sp, #-80]!
   1e668:	mov	x29, sp
   1e66c:	stp	x21, x22, [sp, #32]
   1e670:	mov	x21, x2
   1e674:	ldr	x2, [x1, #32]
   1e678:	stp	x19, x20, [sp, #16]
   1e67c:	str	x23, [sp, #48]
   1e680:	str	x0, [sp, #72]
   1e684:	cbnz	x2, 1e6a0 <__sanitizer_set_death_callback@@Base+0x16a8>
   1e688:	mov	w0, #0x0                   	// #0
   1e68c:	ldp	x19, x20, [sp, #16]
   1e690:	ldp	x21, x22, [sp, #32]
   1e694:	ldr	x23, [sp, #48]
   1e698:	ldp	x29, x30, [sp], #80
   1e69c:	ret
   1e6a0:	mov	x22, x1
   1e6a4:	mov	x23, x3
   1e6a8:	ldr	x1, [x1, #24]
   1e6ac:	mov	x20, x4
   1e6b0:	mov	x19, x5
   1e6b4:	add	x0, sp, #0x48
   1e6b8:	adrp	x4, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   1e6bc:	mov	x3, #0x18                  	// #24
   1e6c0:	add	x4, x4, #0x5d4
   1e6c4:	bl	6990 <bsearch@plt>
   1e6c8:	mov	x6, x0
   1e6cc:	cbz	x0, 1e688 <__sanitizer_set_death_callback@@Base+0x1690>
   1e6d0:	ldp	x2, x3, [x22, #24]
   1e6d4:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1e6d8:	ldr	x0, [sp, #72]
   1e6dc:	movk	x4, #0xaaab
   1e6e0:	sub	x1, x6, x2
   1e6e4:	asr	x1, x1, #3
   1e6e8:	mul	x1, x1, x4
   1e6ec:	add	x1, x1, #0x1
   1e6f0:	cmp	x1, x3
   1e6f4:	b.cs	1e710 <__sanitizer_set_death_callback@@Base+0x1718>  // b.hs, b.nlast
   1e6f8:	ldr	x1, [x6, #24]
   1e6fc:	cmp	x1, x0
   1e700:	b.hi	1e710 <__sanitizer_set_death_callback@@Base+0x1718>  // b.pmore
   1e704:	ldr	x1, [x6, #32]
   1e708:	cmp	x0, x1
   1e70c:	b.cc	1e760 <__sanitizer_set_death_callback@@Base+0x1768>  // b.lo, b.ul, b.last
   1e710:	ldr	x22, [x6, #16]
   1e714:	mov	x5, x19
   1e718:	mov	x4, x20
   1e71c:	mov	x3, x23
   1e720:	mov	x2, x21
   1e724:	mov	x1, x22
   1e728:	bl	1e664 <__sanitizer_set_death_callback@@Base+0x166c>
   1e72c:	cbnz	w0, 1e68c <__sanitizer_set_death_callback@@Base+0x1694>
   1e730:	ldr	w3, [x19]
   1e734:	mov	x0, x23
   1e738:	ldr	x2, [x20]
   1e73c:	ldr	x4, [x22]
   1e740:	ldr	x1, [sp, #72]
   1e744:	blr	x21
   1e748:	cbnz	w0, 1e68c <__sanitizer_set_death_callback@@Base+0x1694>
   1e74c:	ldr	x1, [x22, #8]
   1e750:	str	x1, [x20]
   1e754:	ldr	w1, [x22, #16]
   1e758:	str	w1, [x19]
   1e75c:	b	1e68c <__sanitizer_set_death_callback@@Base+0x1694>
   1e760:	add	x6, x6, #0x18
   1e764:	b	1e6e0 <__sanitizer_set_death_callback@@Base+0x16e8>
   1e768:	stp	x29, x30, [sp, #-48]!
   1e76c:	mov	x29, sp
   1e770:	stp	x19, x20, [sp, #16]
   1e774:	mov	x19, x2
   1e778:	mov	x2, x3
   1e77c:	stp	x21, x22, [sp, #32]
   1e780:	mov	x3, x4
   1e784:	mov	x21, x5
   1e788:	ldp	x22, x20, [x19]
   1e78c:	add	x22, x1, x22
   1e790:	add	x20, x1, x20
   1e794:	ldr	x1, [x5, #24]
   1e798:	cbz	x1, 1e7f8 <__sanitizer_set_death_callback@@Base+0x1800>
   1e79c:	mov	x4, #0x18                  	// #24
   1e7a0:	ldr	x5, [x5]
   1e7a4:	mul	x1, x1, x4
   1e7a8:	sub	x1, x1, #0x18
   1e7ac:	add	x1, x5, x1
   1e7b0:	ldr	x4, [x1, #8]
   1e7b4:	cmp	x22, x4
   1e7b8:	b.eq	1e7c8 <__sanitizer_set_death_callback@@Base+0x17d0>  // b.none
   1e7bc:	add	x5, x4, #0x1
   1e7c0:	cmp	x22, x5
   1e7c4:	b.ne	1e7f8 <__sanitizer_set_death_callback@@Base+0x1800>  // b.any
   1e7c8:	ldr	x5, [x1, #16]
   1e7cc:	ldr	x6, [x19, #16]
   1e7d0:	cmp	x6, x5
   1e7d4:	b.ne	1e7f8 <__sanitizer_set_death_callback@@Base+0x1800>  // b.any
   1e7d8:	cmp	x20, x4
   1e7dc:	b.ls	1e7e4 <__sanitizer_set_death_callback@@Base+0x17ec>  // b.plast
   1e7e0:	str	x20, [x1, #8]
   1e7e4:	mov	w0, #0x1                   	// #1
   1e7e8:	ldp	x19, x20, [sp, #16]
   1e7ec:	ldp	x21, x22, [sp, #32]
   1e7f0:	ldp	x29, x30, [sp], #48
   1e7f4:	ret
   1e7f8:	mov	x4, x21
   1e7fc:	mov	x1, #0x18                  	// #24
   1e800:	bl	65d0 <__asan_backtrace_vector_grow@plt>
   1e804:	cbz	x0, 1e82c <__sanitizer_set_death_callback@@Base+0x1834>
   1e808:	stp	x22, x20, [x19]
   1e80c:	ldp	x2, x3, [x19]
   1e810:	stp	x2, x3, [x0]
   1e814:	ldr	x1, [x19, #16]
   1e818:	str	x1, [x0, #16]
   1e81c:	ldr	x0, [x21, #24]
   1e820:	add	x0, x0, #0x1
   1e824:	str	x0, [x21, #24]
   1e828:	b	1e7e4 <__sanitizer_set_death_callback@@Base+0x17ec>
   1e82c:	mov	w0, #0x0                   	// #0
   1e830:	b	1e7e8 <__sanitizer_set_death_callback@@Base+0x17f0>
   1e834:	stp	x29, x30, [sp, #-240]!
   1e838:	mov	x3, x1
   1e83c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1e840:	mov	x29, sp
   1e844:	stp	x19, x20, [sp, #16]
   1e848:	mov	x19, x0
   1e84c:	add	x20, sp, #0x28
   1e850:	ldp	x4, x0, [x0]
   1e854:	add	x2, x2, #0xd24
   1e858:	ldr	x5, [x19, #16]
   1e85c:	mov	x1, #0xc8                  	// #200
   1e860:	sub	w5, w5, w0
   1e864:	mov	x0, x20
   1e868:	bl	67d0 <snprintf@plt>
   1e86c:	ldp	x3, x0, [x19, #40]
   1e870:	mov	x1, x20
   1e874:	mov	w2, #0x0                   	// #0
   1e878:	blr	x3
   1e87c:	ldp	x19, x20, [sp, #16]
   1e880:	ldp	x29, x30, [sp], #240
   1e884:	ret
   1e888:	stp	x29, x30, [sp, #-48]!
   1e88c:	mov	x29, sp
   1e890:	stp	x19, x20, [sp, #16]
   1e894:	mov	x20, x2
   1e898:	mov	x19, x1
   1e89c:	ldr	x2, [x1, #32]
   1e8a0:	stp	x21, x22, [sp, #32]
   1e8a4:	mov	x22, x0
   1e8a8:	mov	x21, x3
   1e8ac:	cbz	x2, 1e8c4 <__sanitizer_set_death_callback@@Base+0x18cc>
   1e8b0:	ldr	x1, [x1, #40]
   1e8b4:	mov	x4, x3
   1e8b8:	lsl	x2, x2, #3
   1e8bc:	mov	x3, x20
   1e8c0:	bl	6950 <__asan_backtrace_free@plt>
   1e8c4:	mov	x4, x21
   1e8c8:	mov	x3, x20
   1e8cc:	mov	x0, x22
   1e8d0:	ldp	x21, x22, [sp, #32]
   1e8d4:	ldp	x2, x1, [x19, #48]
   1e8d8:	ldp	x19, x20, [sp, #16]
   1e8dc:	ldp	x29, x30, [sp], #48
   1e8e0:	lsl	x2, x2, #3
   1e8e4:	b	6950 <__asan_backtrace_free@plt>
   1e8e8:	stp	x29, x30, [sp, #-64]!
   1e8ec:	mov	x29, sp
   1e8f0:	stp	x19, x20, [sp, #16]
   1e8f4:	mov	x20, x0
   1e8f8:	mov	x19, x1
   1e8fc:	stp	x21, x22, [sp, #32]
   1e900:	mov	x21, x2
   1e904:	mov	x22, x3
   1e908:	str	x23, [sp, #48]
   1e90c:	mov	x23, #0x0                   	// #0
   1e910:	ldp	x2, x1, [x19]
   1e914:	cmp	x2, x23
   1e918:	b.hi	1e948 <__sanitizer_set_death_callback@@Base+0x1950>  // b.pmore
   1e91c:	mov	x4, x22
   1e920:	mov	x3, x21
   1e924:	mov	x0, x20
   1e928:	lsl	x2, x2, #5
   1e92c:	bl	6950 <__asan_backtrace_free@plt>
   1e930:	ldp	x21, x22, [sp, #32]
   1e934:	ldr	x23, [sp, #48]
   1e938:	stp	xzr, xzr, [x19]
   1e93c:	ldp	x19, x20, [sp, #16]
   1e940:	ldp	x29, x30, [sp], #64
   1e944:	ret
   1e948:	add	x1, x1, x23, lsl #5
   1e94c:	mov	x4, x22
   1e950:	mov	x3, x21
   1e954:	mov	x0, x20
   1e958:	add	x23, x23, #0x1
   1e95c:	ldp	x2, x1, [x1, #16]
   1e960:	lsl	x2, x2, #3
   1e964:	bl	6950 <__asan_backtrace_free@plt>
   1e968:	b	1e910 <__sanitizer_set_death_callback@@Base+0x1918>
   1e96c:	ldr	x3, [x0]
   1e970:	ldr	x2, [x1]
   1e974:	cmp	x3, x2
   1e978:	b.cc	1e9bc <__sanitizer_set_death_callback@@Base+0x19c4>  // b.lo, b.ul, b.last
   1e97c:	b.hi	1e9b4 <__sanitizer_set_death_callback@@Base+0x19bc>  // b.pmore
   1e980:	ldr	x3, [x0, #8]
   1e984:	ldr	x2, [x1, #8]
   1e988:	cmp	x3, x2
   1e98c:	b.cc	1e9b4 <__sanitizer_set_death_callback@@Base+0x19bc>  // b.lo, b.ul, b.last
   1e990:	b.hi	1e9bc <__sanitizer_set_death_callback@@Base+0x19c4>  // b.pmore
   1e994:	ldr	x0, [x0, #16]
   1e998:	ldr	x2, [x0, #56]
   1e99c:	ldr	x0, [x1, #16]
   1e9a0:	ldr	x1, [x0, #56]
   1e9a4:	cmp	x2, x1
   1e9a8:	cset	w0, gt
   1e9ac:	csinv	w0, w0, wzr, ge  // ge = tcont
   1e9b0:	ret
   1e9b4:	mov	w0, #0x1                   	// #1
   1e9b8:	b	1e9b0 <__sanitizer_set_death_callback@@Base+0x19b8>
   1e9bc:	mov	w0, #0xffffffff            	// #-1
   1e9c0:	b	1e9b0 <__sanitizer_set_death_callback@@Base+0x19b8>
   1e9c4:	ldr	x3, [x0]
   1e9c8:	ldr	x2, [x1]
   1e9cc:	cmp	x3, x2
   1e9d0:	b.cc	1e9f0 <__sanitizer_set_death_callback@@Base+0x19f8>  // b.lo, b.ul, b.last
   1e9d4:	b.hi	1e9f8 <__sanitizer_set_death_callback@@Base+0x1a00>  // b.pmore
   1e9d8:	ldr	w2, [x0, #20]
   1e9dc:	ldr	w1, [x1, #20]
   1e9e0:	cmp	w2, w1
   1e9e4:	cset	w0, gt
   1e9e8:	csinv	w0, w0, wzr, ge  // ge = tcont
   1e9ec:	ret
   1e9f0:	mov	w0, #0xffffffff            	// #-1
   1e9f4:	b	1e9ec <__sanitizer_set_death_callback@@Base+0x19f4>
   1e9f8:	mov	w0, #0x1                   	// #1
   1e9fc:	b	1e9ec <__sanitizer_set_death_callback@@Base+0x19f4>
   1ea00:	stp	x29, x30, [sp, #-96]!
   1ea04:	mov	x29, sp
   1ea08:	stp	x19, x20, [sp, #16]
   1ea0c:	mov	x19, x0
   1ea10:	mov	x20, x1
   1ea14:	ldr	x0, [x0]
   1ea18:	stp	x21, x22, [sp, #32]
   1ea1c:	sub	x1, x1, #0x1
   1ea20:	str	x23, [sp, #48]
   1ea24:	mov	x22, x2
   1ea28:	cmp	x1, x0
   1ea2c:	mov	x23, x3
   1ea30:	b.cs	1ea50 <__sanitizer_set_death_callback@@Base+0x1a58>  // b.hs, b.nlast
   1ea34:	lsl	x0, x20, #5
   1ea38:	ldr	x1, [x19, #8]
   1ea3c:	sub	x0, x0, #0x20
   1ea40:	add	x21, x1, x0
   1ea44:	ldr	x0, [x1, x0]
   1ea48:	cmp	x0, x20
   1ea4c:	b.eq	1ea9c <__sanitizer_set_death_callback@@Base+0x1aa4>  // b.none
   1ea50:	add	x21, sp, #0x40
   1ea54:	mov	x2, #0x20                  	// #32
   1ea58:	mov	x0, x21
   1ea5c:	mov	w1, #0x0                   	// #0
   1ea60:	bl	65f0 <__asan_internal_memset@plt>
   1ea64:	str	x20, [sp, #64]
   1ea68:	ldp	x2, x1, [x19]
   1ea6c:	mov	x0, x21
   1ea70:	adrp	x4, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   1ea74:	mov	x3, #0x20                  	// #32
   1ea78:	add	x4, x4, #0x64c
   1ea7c:	bl	6990 <bsearch@plt>
   1ea80:	mov	x21, x0
   1ea84:	cbnz	x0, 1ea9c <__sanitizer_set_death_callback@@Base+0x1aa4>
   1ea88:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1ea8c:	mov	x0, x23
   1ea90:	add	x1, x1, #0xd33
   1ea94:	mov	w2, #0x0                   	// #0
   1ea98:	blr	x22
   1ea9c:	mov	x0, x21
   1eaa0:	ldp	x19, x20, [sp, #16]
   1eaa4:	ldp	x21, x22, [sp, #32]
   1eaa8:	ldr	x23, [sp, #48]
   1eaac:	ldp	x29, x30, [sp], #96
   1eab0:	ret
   1eab4:	stp	x29, x30, [sp, #-64]!
   1eab8:	mov	x29, sp
   1eabc:	stp	x19, x20, [sp, #16]
   1eac0:	mov	x19, x7
   1eac4:	mov	w20, w4
   1eac8:	ldr	x7, [x7, #24]
   1eacc:	stp	x21, x22, [sp, #32]
   1ead0:	mov	x22, x2
   1ead4:	str	x23, [sp, #48]
   1ead8:	mov	x21, x3
   1eadc:	mov	x2, x5
   1eae0:	mov	x3, x6
   1eae4:	mov	x23, x1
   1eae8:	cbz	x7, 1eb24 <__sanitizer_set_death_callback@@Base+0x1b2c>
   1eaec:	mov	x1, #0x18                  	// #24
   1eaf0:	ldr	x4, [x19]
   1eaf4:	mul	x7, x7, x1
   1eaf8:	sub	x7, x7, #0x18
   1eafc:	add	x1, x4, x7
   1eb00:	ldr	x4, [x4, x7]
   1eb04:	cmp	x4, x22
   1eb08:	b.ne	1eb24 <__sanitizer_set_death_callback@@Base+0x1b2c>  // b.any
   1eb0c:	ldr	x4, [x1, #8]
   1eb10:	cmp	x4, x21
   1eb14:	b.ne	1eb24 <__sanitizer_set_death_callback@@Base+0x1b2c>  // b.any
   1eb18:	ldr	w1, [x1, #16]
   1eb1c:	cmp	w1, w20
   1eb20:	b.eq	1eb50 <__sanitizer_set_death_callback@@Base+0x1b58>  // b.none
   1eb24:	mov	x4, x19
   1eb28:	mov	x1, #0x18                  	// #24
   1eb2c:	bl	65d0 <__asan_backtrace_vector_grow@plt>
   1eb30:	cbz	x0, 1eb68 <__sanitizer_set_death_callback@@Base+0x1b70>
   1eb34:	ldr	x2, [x23]
   1eb38:	ldr	x1, [x19, #24]
   1eb3c:	add	x22, x2, x22
   1eb40:	stp	x22, x21, [x0]
   1eb44:	stp	w20, w1, [x0, #16]
   1eb48:	add	x1, x1, #0x1
   1eb4c:	str	x1, [x19, #24]
   1eb50:	mov	w0, #0x1                   	// #1
   1eb54:	ldp	x19, x20, [sp, #16]
   1eb58:	ldp	x21, x22, [sp, #32]
   1eb5c:	ldr	x23, [sp, #48]
   1eb60:	ldp	x29, x30, [sp], #64
   1eb64:	ret
   1eb68:	mov	w0, #0x0                   	// #0
   1eb6c:	b	1eb54 <__sanitizer_set_death_callback@@Base+0x1b5c>
   1eb70:	stp	x29, x30, [sp, #-48]!
   1eb74:	mov	x29, sp
   1eb78:	stp	x21, x22, [sp, #32]
   1eb7c:	mov	x21, x3
   1eb80:	add	x21, x21, x1
   1eb84:	stp	x19, x20, [sp, #16]
   1eb88:	add	x20, x4, x1
   1eb8c:	mov	x22, x2
   1eb90:	ldr	x1, [x7, #24]
   1eb94:	mov	x2, x5
   1eb98:	mov	x3, x6
   1eb9c:	mov	x19, x7
   1eba0:	cbz	x1, 1ebfc <__sanitizer_set_death_callback@@Base+0x1c04>
   1eba4:	mov	x4, #0x18                  	// #24
   1eba8:	mul	x1, x1, x4
   1ebac:	ldr	x4, [x7]
   1ebb0:	sub	x1, x1, #0x18
   1ebb4:	add	x1, x4, x1
   1ebb8:	ldr	x4, [x1, #8]
   1ebbc:	cmp	x21, x4
   1ebc0:	b.eq	1ebd0 <__sanitizer_set_death_callback@@Base+0x1bd8>  // b.none
   1ebc4:	add	x5, x4, #0x1
   1ebc8:	cmp	x21, x5
   1ebcc:	b.ne	1ebfc <__sanitizer_set_death_callback@@Base+0x1c04>  // b.any
   1ebd0:	ldr	x5, [x1, #16]
   1ebd4:	cmp	x5, x22
   1ebd8:	b.ne	1ebfc <__sanitizer_set_death_callback@@Base+0x1c04>  // b.any
   1ebdc:	cmp	x20, x4
   1ebe0:	b.ls	1ebe8 <__sanitizer_set_death_callback@@Base+0x1bf0>  // b.plast
   1ebe4:	str	x20, [x1, #8]
   1ebe8:	mov	w0, #0x1                   	// #1
   1ebec:	ldp	x19, x20, [sp, #16]
   1ebf0:	ldp	x21, x22, [sp, #32]
   1ebf4:	ldp	x29, x30, [sp], #48
   1ebf8:	ret
   1ebfc:	mov	x4, x19
   1ec00:	mov	x1, #0x18                  	// #24
   1ec04:	bl	65d0 <__asan_backtrace_vector_grow@plt>
   1ec08:	cbz	x0, 1ec24 <__sanitizer_set_death_callback@@Base+0x1c2c>
   1ec0c:	stp	x21, x20, [x0]
   1ec10:	str	x22, [x0, #16]
   1ec14:	ldr	x0, [x19, #24]
   1ec18:	add	x0, x0, #0x1
   1ec1c:	str	x0, [x19, #24]
   1ec20:	b	1ebe8 <__sanitizer_set_death_callback@@Base+0x1bf0>
   1ec24:	mov	w0, #0x0                   	// #0
   1ec28:	b	1ebec <__sanitizer_set_death_callback@@Base+0x1bf4>
   1ec2c:	stp	x29, x30, [sp, #-32]!
   1ec30:	mov	x29, sp
   1ec34:	ldr	x2, [x0, #24]
   1ec38:	stp	x19, x20, [sp, #16]
   1ec3c:	mov	x19, x0
   1ec40:	cmp	x1, x2
   1ec44:	b.hi	1ec6c <__sanitizer_set_death_callback@@Base+0x1c74>  // b.pmore
   1ec48:	ldr	x0, [x0, #16]
   1ec4c:	mov	w20, #0x1                   	// #1
   1ec50:	add	x0, x0, x1
   1ec54:	sub	x1, x2, x1
   1ec58:	stp	x0, x1, [x19, #16]
   1ec5c:	mov	w0, w20
   1ec60:	ldp	x19, x20, [sp, #16]
   1ec64:	ldp	x29, x30, [sp], #32
   1ec68:	ret
   1ec6c:	ldr	w20, [x0, #56]
   1ec70:	cbnz	w20, 1ec8c <__sanitizer_set_death_callback@@Base+0x1c94>
   1ec74:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1ec78:	add	x1, x1, #0xd4d
   1ec7c:	bl	1e834 <__sanitizer_set_death_callback@@Base+0x183c>
   1ec80:	mov	w0, #0x1                   	// #1
   1ec84:	str	w0, [x19, #56]
   1ec88:	b	1ec5c <__sanitizer_set_death_callback@@Base+0x1c64>
   1ec8c:	mov	w20, #0x0                   	// #0
   1ec90:	b	1ec5c <__sanitizer_set_death_callback@@Base+0x1c64>
   1ec94:	stp	x29, x30, [sp, #-32]!
   1ec98:	mov	x1, #0x4                   	// #4
   1ec9c:	mov	x29, sp
   1eca0:	stp	x19, x20, [sp, #16]
   1eca4:	mov	x19, x0
   1eca8:	ldr	x20, [x0, #16]
   1ecac:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   1ecb0:	cbz	w0, 1ecd0 <__sanitizer_set_death_callback@@Base+0x1cd8>
   1ecb4:	ldr	w1, [x19, #32]
   1ecb8:	ldr	w0, [x20]
   1ecbc:	cbz	w1, 1ecc4 <__sanitizer_set_death_callback@@Base+0x1ccc>
   1ecc0:	rev	w0, w0
   1ecc4:	ldp	x19, x20, [sp, #16]
   1ecc8:	ldp	x29, x30, [sp], #32
   1eccc:	ret
   1ecd0:	mov	w0, #0x0                   	// #0
   1ecd4:	b	1ecc4 <__sanitizer_set_death_callback@@Base+0x1ccc>
   1ecd8:	stp	x29, x30, [sp, #-32]!
   1ecdc:	mov	x1, #0x8                   	// #8
   1ece0:	mov	x29, sp
   1ece4:	stp	x19, x20, [sp, #16]
   1ece8:	mov	x19, x0
   1ecec:	ldr	x20, [x0, #16]
   1ecf0:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   1ecf4:	cbz	w0, 1ed14 <__sanitizer_set_death_callback@@Base+0x1d1c>
   1ecf8:	ldr	w1, [x19, #32]
   1ecfc:	ldr	x0, [x20]
   1ed00:	cbz	w1, 1ed08 <__sanitizer_set_death_callback@@Base+0x1d10>
   1ed04:	rev	x0, x0
   1ed08:	ldp	x19, x20, [sp, #16]
   1ed0c:	ldp	x29, x30, [sp], #32
   1ed10:	ret
   1ed14:	mov	x0, #0x0                   	// #0
   1ed18:	b	1ed08 <__sanitizer_set_death_callback@@Base+0x1d10>
   1ed1c:	cbz	w1, 1ed24 <__sanitizer_set_death_callback@@Base+0x1d2c>
   1ed20:	b	1ecd8 <__sanitizer_set_death_callback@@Base+0x1ce0>
   1ed24:	stp	x29, x30, [sp, #-16]!
   1ed28:	mov	x29, sp
   1ed2c:	bl	1ec94 <__sanitizer_set_death_callback@@Base+0x1c9c>
   1ed30:	mov	w0, w0
   1ed34:	ldp	x29, x30, [sp], #16
   1ed38:	ret
   1ed3c:	stp	x29, x30, [sp, #-32]!
   1ed40:	mov	x1, #0x2                   	// #2
   1ed44:	mov	x29, sp
   1ed48:	stp	x19, x20, [sp, #16]
   1ed4c:	mov	x19, x0
   1ed50:	ldr	x20, [x0, #16]
   1ed54:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   1ed58:	cbz	w0, 1ed84 <__sanitizer_set_death_callback@@Base+0x1d8c>
   1ed5c:	ldrb	w1, [x20, #1]
   1ed60:	ldrb	w0, [x20]
   1ed64:	ldr	w3, [x19, #32]
   1ed68:	orr	w2, w1, w0, lsl #8
   1ed6c:	cmp	w3, #0x0
   1ed70:	orr	w0, w0, w1, lsl #8
   1ed74:	csel	w0, w0, w2, eq  // eq = none
   1ed78:	ldp	x19, x20, [sp, #16]
   1ed7c:	ldp	x29, x30, [sp], #32
   1ed80:	ret
   1ed84:	mov	w0, #0x0                   	// #0
   1ed88:	b	1ed78 <__sanitizer_set_death_callback@@Base+0x1d80>
   1ed8c:	stp	x29, x30, [sp, #-32]!
   1ed90:	mov	x1, #0x1                   	// #1
   1ed94:	mov	x29, sp
   1ed98:	str	x19, [sp, #16]
   1ed9c:	ldr	x19, [x0, #16]
   1eda0:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   1eda4:	cbz	w0, 1edb8 <__sanitizer_set_death_callback@@Base+0x1dc0>
   1eda8:	ldrb	w0, [x19]
   1edac:	ldr	x19, [sp, #16]
   1edb0:	ldp	x29, x30, [sp], #32
   1edb4:	ret
   1edb8:	mov	w0, #0x0                   	// #0
   1edbc:	b	1edac <__sanitizer_set_death_callback@@Base+0x1db4>
   1edc0:	stp	x29, x30, [sp, #-16]!
   1edc4:	sub	w1, w1, #0x1
   1edc8:	cmp	w1, #0x7
   1edcc:	mov	x29, sp
   1edd0:	b.hi	1ee1c <__sanitizer_set_death_callback@@Base+0x1e24>  // b.pmore
   1edd4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1edd8:	add	x2, x2, #0xcb0
   1eddc:	ldrb	w1, [x2, w1, uxtw]
   1ede0:	adr	x2, 1edec <__sanitizer_set_death_callback@@Base+0x1df4>
   1ede4:	add	x1, x2, w1, sxtb #2
   1ede8:	br	x1
   1edec:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   1edf0:	and	x0, x0, #0xff
   1edf4:	ldp	x29, x30, [sp], #16
   1edf8:	ret
   1edfc:	bl	1ed3c <__sanitizer_set_death_callback@@Base+0x1d44>
   1ee00:	and	x0, x0, #0xffff
   1ee04:	b	1edf4 <__sanitizer_set_death_callback@@Base+0x1dfc>
   1ee08:	bl	1ec94 <__sanitizer_set_death_callback@@Base+0x1c9c>
   1ee0c:	mov	w0, w0
   1ee10:	b	1edf4 <__sanitizer_set_death_callback@@Base+0x1dfc>
   1ee14:	ldp	x29, x30, [sp], #16
   1ee18:	b	1ecd8 <__sanitizer_set_death_callback@@Base+0x1ce0>
   1ee1c:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1ee20:	add	x1, x1, #0xd5d
   1ee24:	bl	1e834 <__sanitizer_set_death_callback@@Base+0x183c>
   1ee28:	mov	x0, #0x0                   	// #0
   1ee2c:	b	1edf4 <__sanitizer_set_death_callback@@Base+0x1dfc>
   1ee30:	stp	x29, x30, [sp, #-64]!
   1ee34:	mov	x29, sp
   1ee38:	stp	x19, x20, [sp, #16]
   1ee3c:	mov	x19, x0
   1ee40:	mov	x20, #0x0                   	// #0
   1ee44:	stp	x21, x22, [sp, #32]
   1ee48:	adrp	x22, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1ee4c:	add	x22, x22, #0xd7e
   1ee50:	mov	w21, #0x0                   	// #0
   1ee54:	stp	x23, x24, [sp, #48]
   1ee58:	mov	w24, #0x0                   	// #0
   1ee5c:	mov	x0, x19
   1ee60:	mov	x1, #0x1                   	// #1
   1ee64:	ldr	x23, [x19, #16]
   1ee68:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   1ee6c:	cbz	w0, 1eec0 <__sanitizer_set_death_callback@@Base+0x1ec8>
   1ee70:	ldrb	w23, [x23]
   1ee74:	cmp	w21, #0x3f
   1ee78:	b.hi	1eea8 <__sanitizer_set_death_callback@@Base+0x1eb0>  // b.pmore
   1ee7c:	and	x0, x23, #0x7f
   1ee80:	lsl	x0, x0, x21
   1ee84:	orr	x20, x20, x0
   1ee88:	add	w21, w21, #0x7
   1ee8c:	tbnz	w23, #7, 1ee5c <__sanitizer_set_death_callback@@Base+0x1e64>
   1ee90:	mov	x0, x20
   1ee94:	ldp	x19, x20, [sp, #16]
   1ee98:	ldp	x21, x22, [sp, #32]
   1ee9c:	ldp	x23, x24, [sp, #48]
   1eea0:	ldp	x29, x30, [sp], #64
   1eea4:	ret
   1eea8:	cbnz	w24, 1ee88 <__sanitizer_set_death_callback@@Base+0x1e90>
   1eeac:	mov	x1, x22
   1eeb0:	mov	x0, x19
   1eeb4:	mov	w24, #0x1                   	// #1
   1eeb8:	bl	1e834 <__sanitizer_set_death_callback@@Base+0x183c>
   1eebc:	b	1ee88 <__sanitizer_set_death_callback@@Base+0x1e90>
   1eec0:	mov	x20, #0x0                   	// #0
   1eec4:	b	1ee90 <__sanitizer_set_death_callback@@Base+0x1e98>
   1eec8:	stp	x29, x30, [sp, #-64]!
   1eecc:	mov	x29, sp
   1eed0:	stp	x21, x22, [sp, #32]
   1eed4:	mov	x21, x0
   1eed8:	stp	x23, x24, [sp, #48]
   1eedc:	adrp	x23, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1eee0:	add	x23, x23, #0xd77
   1eee4:	mov	w24, #0x0                   	// #0
   1eee8:	stp	x19, x20, [sp, #16]
   1eeec:	mov	w20, #0x0                   	// #0
   1eef0:	mov	x19, #0x0                   	// #0
   1eef4:	mov	x0, x21
   1eef8:	mov	x1, #0x1                   	// #1
   1eefc:	ldr	x22, [x21, #16]
   1ef00:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   1ef04:	cbz	w0, 1ef70 <__sanitizer_set_death_callback@@Base+0x1f78>
   1ef08:	ldrb	w22, [x22]
   1ef0c:	cmp	w20, #0x3f
   1ef10:	b.hi	1ef58 <__sanitizer_set_death_callback@@Base+0x1f60>  // b.pmore
   1ef14:	and	x0, x22, #0x7f
   1ef18:	lsl	x0, x0, x20
   1ef1c:	orr	x19, x19, x0
   1ef20:	add	w20, w20, #0x7
   1ef24:	tbnz	w22, #7, 1eef4 <__sanitizer_set_death_callback@@Base+0x1efc>
   1ef28:	tbz	w22, #6, 1ef40 <__sanitizer_set_death_callback@@Base+0x1f48>
   1ef2c:	cmp	w20, #0x3f
   1ef30:	b.hi	1ef40 <__sanitizer_set_death_callback@@Base+0x1f48>  // b.pmore
   1ef34:	mov	x0, #0xffffffffffffffff    	// #-1
   1ef38:	lsl	x20, x0, x20
   1ef3c:	orr	x19, x19, x20
   1ef40:	mov	x0, x19
   1ef44:	ldp	x19, x20, [sp, #16]
   1ef48:	ldp	x21, x22, [sp, #32]
   1ef4c:	ldp	x23, x24, [sp, #48]
   1ef50:	ldp	x29, x30, [sp], #64
   1ef54:	ret
   1ef58:	cbnz	w24, 1ef20 <__sanitizer_set_death_callback@@Base+0x1f28>
   1ef5c:	mov	x1, x23
   1ef60:	mov	x0, x21
   1ef64:	mov	w24, #0x1                   	// #1
   1ef68:	bl	1e834 <__sanitizer_set_death_callback@@Base+0x183c>
   1ef6c:	b	1ef20 <__sanitizer_set_death_callback@@Base+0x1f28>
   1ef70:	mov	x0, #0x0                   	// #0
   1ef74:	b	1ef44 <__sanitizer_set_death_callback@@Base+0x1f4c>
   1ef78:	stp	x29, x30, [sp, #-32]!
   1ef7c:	mov	x29, sp
   1ef80:	stp	x19, x20, [sp, #16]
   1ef84:	mov	x19, x0
   1ef88:	ldp	x20, x1, [x0, #16]
   1ef8c:	mov	x0, x20
   1ef90:	bl	68d0 <__asan_internal_strnlen@plt>
   1ef94:	add	x1, x0, #0x1
   1ef98:	mov	x0, x19
   1ef9c:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   1efa0:	cmp	w0, #0x0
   1efa4:	csel	x0, x20, xzr, ne  // ne = any
   1efa8:	ldp	x19, x20, [sp, #16]
   1efac:	ldp	x29, x30, [sp], #32
   1efb0:	ret
   1efb4:	stp	x29, x30, [sp, #-96]!
   1efb8:	mov	x29, sp
   1efbc:	stp	x19, x20, [sp, #16]
   1efc0:	mov	x20, x1
   1efc4:	ldr	x19, [sp, #96]
   1efc8:	stp	x21, x22, [sp, #32]
   1efcc:	mov	w21, w0
   1efd0:	mov	w22, w4
   1efd4:	stp	x23, x24, [sp, #48]
   1efd8:	mov	x24, x5
   1efdc:	mov	x23, x7
   1efe0:	stp	x25, x26, [sp, #64]
   1efe4:	mov	w26, w3
   1efe8:	mov	x25, x6
   1efec:	stp	x27, x28, [sp, #80]
   1eff0:	adrp	x27, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1eff4:	mov	w28, w2
   1eff8:	add	x27, x27, #0xcb8
   1effc:	mov	x0, x19
   1f000:	mov	x2, #0x10                  	// #16
   1f004:	mov	w1, #0x0                   	// #0
   1f008:	bl	65f0 <__asan_internal_memset@plt>
   1f00c:	cmp	w21, #0x20
   1f010:	b.hi	1f034 <__sanitizer_set_death_callback@@Base+0x203c>  // b.pmore
   1f014:	cbz	w21, 1f054 <__sanitizer_set_death_callback@@Base+0x205c>
   1f018:	sub	w21, w21, #0x1
   1f01c:	cmp	w21, #0x1f
   1f020:	b.hi	1f054 <__sanitizer_set_death_callback@@Base+0x205c>  // b.pmore
   1f024:	ldrh	w0, [x27, w21, uxtw #1]
   1f028:	adr	x1, 1f034 <__sanitizer_set_death_callback@@Base+0x203c>
   1f02c:	add	x0, x1, w0, sxth #2
   1f030:	br	x0
   1f034:	mov	w0, #0x1f20                	// #7968
   1f038:	cmp	w21, w0
   1f03c:	b.eq	1f2b4 <__sanitizer_set_death_callback@@Base+0x22bc>  // b.none
   1f040:	b.hi	1f060 <__sanitizer_set_death_callback@@Base+0x2068>  // b.pmore
   1f044:	mov	w0, #0xffffe0ff            	// #-7937
   1f048:	add	w21, w21, w0
   1f04c:	cmp	w21, #0x1
   1f050:	b.ls	1f2ac <__sanitizer_set_death_callback@@Base+0x22b4>  // b.plast
   1f054:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1f058:	add	x1, x1, #0xdd4
   1f05c:	b	1f1f0 <__sanitizer_set_death_callback@@Base+0x21f8>
   1f060:	mov	w0, #0x1f21                	// #7969
   1f064:	cmp	w21, w0
   1f068:	b.ne	1f054 <__sanitizer_set_death_callback@@Base+0x205c>  // b.any
   1f06c:	mov	w1, w28
   1f070:	mov	x0, x20
   1f074:	bl	1ed1c <__sanitizer_set_death_callback@@Base+0x1d24>
   1f078:	cbz	x23, 1f2c8 <__sanitizer_set_death_callback@@Base+0x22d0>
   1f07c:	ldr	x1, [x23, #112]
   1f080:	cmp	x1, x0
   1f084:	b.hi	1f2e0 <__sanitizer_set_death_callback@@Base+0x22e8>  // b.pmore
   1f088:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1f08c:	add	x1, x1, #0xdb2
   1f090:	b	1f1f0 <__sanitizer_set_death_callback@@Base+0x21f8>
   1f094:	mov	w21, #0x1                   	// #1
   1f098:	str	w21, [x19]
   1f09c:	mov	w1, w22
   1f0a0:	mov	x0, x20
   1f0a4:	bl	1edc0 <__sanitizer_set_death_callback@@Base+0x1dc8>
   1f0a8:	b	1f1cc <__sanitizer_set_death_callback@@Base+0x21d4>
   1f0ac:	mov	w0, #0xa                   	// #10
   1f0b0:	str	w0, [x19]
   1f0b4:	mov	x0, x20
   1f0b8:	bl	1ed3c <__sanitizer_set_death_callback@@Base+0x1d44>
   1f0bc:	and	x1, x0, #0xffff
   1f0c0:	mov	x0, x20
   1f0c4:	ldp	x19, x20, [sp, #16]
   1f0c8:	ldp	x21, x22, [sp, #32]
   1f0cc:	ldp	x23, x24, [sp, #48]
   1f0d0:	ldp	x25, x26, [sp, #64]
   1f0d4:	ldp	x27, x28, [sp, #80]
   1f0d8:	ldp	x29, x30, [sp], #96
   1f0dc:	b	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   1f0e0:	mov	w0, #0xa                   	// #10
   1f0e4:	str	w0, [x19]
   1f0e8:	mov	x0, x20
   1f0ec:	bl	1ec94 <__sanitizer_set_death_callback@@Base+0x1c9c>
   1f0f0:	mov	w1, w0
   1f0f4:	b	1f0c0 <__sanitizer_set_death_callback@@Base+0x20c8>
   1f0f8:	mov	w0, #0x2                   	// #2
   1f0fc:	str	w0, [x19]
   1f100:	mov	x0, x20
   1f104:	bl	1ed3c <__sanitizer_set_death_callback@@Base+0x1d44>
   1f108:	and	x0, x0, #0xffff
   1f10c:	b	1f1cc <__sanitizer_set_death_callback@@Base+0x21d4>
   1f110:	mov	w0, #0x2                   	// #2
   1f114:	str	w0, [x19]
   1f118:	mov	x0, x20
   1f11c:	bl	1ec94 <__sanitizer_set_death_callback@@Base+0x1c9c>
   1f120:	mov	w0, w0
   1f124:	b	1f1cc <__sanitizer_set_death_callback@@Base+0x21d4>
   1f128:	mov	w0, #0x2                   	// #2
   1f12c:	str	w0, [x19]
   1f130:	mov	x0, x20
   1f134:	bl	1ecd8 <__sanitizer_set_death_callback@@Base+0x1ce0>
   1f138:	b	1f1cc <__sanitizer_set_death_callback@@Base+0x21d4>
   1f13c:	mov	w0, #0x4                   	// #4
   1f140:	str	w0, [x19]
   1f144:	mov	x0, x20
   1f148:	bl	1ef78 <__sanitizer_set_death_callback@@Base+0x1f80>
   1f14c:	cmp	x0, #0x0
   1f150:	str	x0, [x19, #8]
   1f154:	cset	w0, ne  // ne = any
   1f158:	ldp	x19, x20, [sp, #16]
   1f15c:	ldp	x21, x22, [sp, #32]
   1f160:	ldp	x23, x24, [sp, #48]
   1f164:	ldp	x25, x26, [sp, #64]
   1f168:	ldp	x27, x28, [sp, #80]
   1f16c:	ldp	x29, x30, [sp], #96
   1f170:	ret
   1f174:	mov	w0, #0xa                   	// #10
   1f178:	str	w0, [x19]
   1f17c:	mov	x0, x20
   1f180:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   1f184:	mov	x1, x0
   1f188:	b	1f0c0 <__sanitizer_set_death_callback@@Base+0x20c8>
   1f18c:	mov	w0, #0xa                   	// #10
   1f190:	str	w0, [x19]
   1f194:	mov	x0, x20
   1f198:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   1f19c:	and	x1, x0, #0xff
   1f1a0:	b	1f0c0 <__sanitizer_set_death_callback@@Base+0x20c8>
   1f1a4:	mov	w0, #0x2                   	// #2
   1f1a8:	str	w0, [x19]
   1f1ac:	mov	x0, x20
   1f1b0:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   1f1b4:	and	x0, x0, #0xff
   1f1b8:	b	1f1cc <__sanitizer_set_death_callback@@Base+0x21d4>
   1f1bc:	mov	w0, #0x3                   	// #3
   1f1c0:	str	w0, [x19]
   1f1c4:	mov	x0, x20
   1f1c8:	bl	1eec8 <__sanitizer_set_death_callback@@Base+0x1ed0>
   1f1cc:	str	x0, [x19, #8]
   1f1d0:	b	1f2cc <__sanitizer_set_death_callback@@Base+0x22d4>
   1f1d4:	mov	w1, w28
   1f1d8:	mov	x0, x20
   1f1dc:	bl	1ed1c <__sanitizer_set_death_callback@@Base+0x1d24>
   1f1e0:	cmp	x25, x0
   1f1e4:	b.hi	1f200 <__sanitizer_set_death_callback@@Base+0x2208>  // b.pmore
   1f1e8:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1f1ec:	add	x1, x1, #0xd98
   1f1f0:	mov	x0, x20
   1f1f4:	bl	1e834 <__sanitizer_set_death_callback@@Base+0x183c>
   1f1f8:	mov	w0, #0x0                   	// #0
   1f1fc:	b	1f158 <__sanitizer_set_death_callback@@Base+0x2160>
   1f200:	mov	w1, #0x4                   	// #4
   1f204:	add	x0, x24, x0
   1f208:	str	w1, [x19]
   1f20c:	b	1f1cc <__sanitizer_set_death_callback@@Base+0x21d4>
   1f210:	mov	w0, #0x2                   	// #2
   1f214:	str	w0, [x19]
   1f218:	mov	x0, x20
   1f21c:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   1f220:	b	1f1cc <__sanitizer_set_death_callback@@Base+0x21d4>
   1f224:	mov	w0, #0x6                   	// #6
   1f228:	str	w0, [x19]
   1f22c:	cmp	w26, #0x2
   1f230:	b.eq	1f09c <__sanitizer_set_death_callback@@Base+0x20a4>  // b.none
   1f234:	mov	w1, w28
   1f238:	mov	x0, x20
   1f23c:	bl	1ed1c <__sanitizer_set_death_callback@@Base+0x1d24>
   1f240:	b	1f1cc <__sanitizer_set_death_callback@@Base+0x21d4>
   1f244:	mov	w0, #0x5                   	// #5
   1f248:	b	1f1a8 <__sanitizer_set_death_callback@@Base+0x21b0>
   1f24c:	mov	w0, #0x5                   	// #5
   1f250:	b	1f0fc <__sanitizer_set_death_callback@@Base+0x2104>
   1f254:	mov	w0, #0x5                   	// #5
   1f258:	b	1f114 <__sanitizer_set_death_callback@@Base+0x211c>
   1f25c:	mov	w0, #0x5                   	// #5
   1f260:	b	1f12c <__sanitizer_set_death_callback@@Base+0x2134>
   1f264:	mov	w0, #0x5                   	// #5
   1f268:	b	1f214 <__sanitizer_set_death_callback@@Base+0x221c>
   1f26c:	mov	x0, x20
   1f270:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   1f274:	mov	w21, w0
   1f278:	b	1effc <__sanitizer_set_death_callback@@Base+0x2004>
   1f27c:	mov	w0, #0x8                   	// #8
   1f280:	str	w0, [x19]
   1f284:	b	1f234 <__sanitizer_set_death_callback@@Base+0x223c>
   1f288:	mov	w0, #0xb                   	// #11
   1f28c:	b	1f178 <__sanitizer_set_death_callback@@Base+0x2180>
   1f290:	mov	w0, #0x2                   	// #2
   1f294:	str	w0, [x19]
   1f298:	mov	x0, #0x1                   	// #1
   1f29c:	str	x0, [x19, #8]
   1f2a0:	b	1f158 <__sanitizer_set_death_callback@@Base+0x2160>
   1f2a4:	mov	w0, #0x9                   	// #9
   1f2a8:	b	1f12c <__sanitizer_set_death_callback@@Base+0x2134>
   1f2ac:	mov	w0, #0x8                   	// #8
   1f2b0:	b	1f214 <__sanitizer_set_death_callback@@Base+0x221c>
   1f2b4:	mov	w1, w28
   1f2b8:	mov	x0, x20
   1f2bc:	bl	1ed1c <__sanitizer_set_death_callback@@Base+0x1d24>
   1f2c0:	str	x0, [x19, #8]
   1f2c4:	cbnz	x23, 1f2d4 <__sanitizer_set_death_callback@@Base+0x22dc>
   1f2c8:	str	wzr, [x19]
   1f2cc:	mov	w0, #0x1                   	// #1
   1f2d0:	b	1f158 <__sanitizer_set_death_callback@@Base+0x2160>
   1f2d4:	mov	w0, #0x7                   	// #7
   1f2d8:	str	w0, [x19]
   1f2dc:	b	1f2cc <__sanitizer_set_death_callback@@Base+0x22d4>
   1f2e0:	mov	w1, #0x4                   	// #4
   1f2e4:	str	w1, [x19]
   1f2e8:	ldr	x1, [x23, #104]
   1f2ec:	add	x0, x1, x0
   1f2f0:	b	1f1cc <__sanitizer_set_death_callback@@Base+0x21d4>
   1f2f4:	sub	sp, sp, #0x170
   1f2f8:	stp	x29, x30, [sp, #48]
   1f2fc:	add	x29, sp, #0x30
   1f300:	stp	x21, x22, [sp, #80]
   1f304:	ldp	x21, x22, [sp, #376]
   1f308:	stp	x19, x20, [sp, #64]
   1f30c:	mov	x20, x2
   1f310:	ldr	x19, [sp, #392]
   1f314:	stp	x23, x24, [sp, #96]
   1f318:	add	x23, sp, #0xf0
   1f31c:	stp	x25, x26, [sp, #112]
   1f320:	mov	x25, x0
   1f324:	mov	x26, x1
   1f328:	stp	x27, x28, [sp, #128]
   1f32c:	add	x27, sp, #0x130
   1f330:	stp	x5, x6, [sp, #160]
   1f334:	stp	x3, x4, [sp, #176]
   1f338:	str	w7, [sp, #224]
   1f33c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1f340:	add	x0, x0, #0xcf8
   1f344:	str	x0, [sp, #192]
   1f348:	ldr	x0, [x20, #24]
   1f34c:	cbz	x0, 1f360 <__sanitizer_set_death_callback@@Base+0x2368>
   1f350:	mov	x0, x20
   1f354:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   1f358:	mov	x1, x0
   1f35c:	cbnz	x0, 1f384 <__sanitizer_set_death_callback@@Base+0x238c>
   1f360:	mov	w0, #0x1                   	// #1
   1f364:	ldp	x29, x30, [sp, #48]
   1f368:	ldp	x19, x20, [sp, #64]
   1f36c:	ldp	x21, x22, [sp, #80]
   1f370:	ldp	x23, x24, [sp, #96]
   1f374:	ldp	x25, x26, [sp, #112]
   1f378:	ldp	x27, x28, [sp, #128]
   1f37c:	add	sp, sp, #0x170
   1f380:	ret
   1f384:	mov	x3, x22
   1f388:	mov	x2, x21
   1f38c:	add	x0, x19, #0x58
   1f390:	bl	1ea00 <__sanitizer_set_death_callback@@Base+0x1a08>
   1f394:	mov	x28, x0
   1f398:	cbnz	x0, 1f3a4 <__sanitizer_set_death_callback@@Base+0x23ac>
   1f39c:	mov	w0, #0x0                   	// #0
   1f3a0:	b	1f364 <__sanitizer_set_death_callback@@Base+0x236c>
   1f3a4:	ldr	x0, [sp, #408]
   1f3a8:	cbz	x0, 1f3b8 <__sanitizer_set_death_callback@@Base+0x23c0>
   1f3ac:	ldr	x1, [sp, #408]
   1f3b0:	ldr	w0, [x28, #8]
   1f3b4:	str	w0, [x1]
   1f3b8:	mov	x11, #0x0                   	// #0
   1f3bc:	mov	x9, #0x0                   	// #0
   1f3c0:	mov	w12, #0x0                   	// #0
   1f3c4:	mov	x10, #0x0                   	// #0
   1f3c8:	mov	x24, #0x0                   	// #0
   1f3cc:	stp	wzr, wzr, [sp, #148]
   1f3d0:	str	wzr, [sp, #156]
   1f3d4:	ldr	x0, [x28, #16]
   1f3d8:	cmp	x0, x11
   1f3dc:	b.hi	1f434 <__sanitizer_set_death_callback@@Base+0x243c>  // b.pmore
   1f3e0:	ldr	w0, [x28, #8]
   1f3e4:	cmp	w0, #0x2e
   1f3e8:	ccmp	w0, #0x11, #0x4, ne  // ne = any
   1f3ec:	b.eq	1f5ac <__sanitizer_set_death_callback@@Base+0x25b4>  // b.none
   1f3f0:	ldr	w0, [x28, #12]
   1f3f4:	cbz	w0, 1f348 <__sanitizer_set_death_callback@@Base+0x2350>
   1f3f8:	ldp	x5, x6, [sp, #160]
   1f3fc:	stp	x21, x22, [sp, #8]
   1f400:	ldr	w7, [sp, #224]
   1f404:	ldp	x3, x4, [sp, #176]
   1f408:	str	xzr, [sp, #40]
   1f40c:	ldr	x0, [sp, #400]
   1f410:	stp	x19, x0, [sp, #24]
   1f414:	mov	x2, x20
   1f418:	ldr	x0, [sp, #368]
   1f41c:	str	x0, [sp]
   1f420:	mov	x1, x26
   1f424:	mov	x0, x25
   1f428:	bl	1f2f4 <__sanitizer_set_death_callback@@Base+0x22fc>
   1f42c:	cbnz	w0, 1f33c <__sanitizer_set_death_callback@@Base+0x2344>
   1f430:	b	1f39c <__sanitizer_set_death_callback@@Base+0x23a4>
   1f434:	ldr	x0, [x28, #24]
   1f438:	str	x27, [sp]
   1f43c:	ldp	x5, x6, [sp, #176]
   1f440:	lsl	x13, x11, #3
   1f444:	add	x0, x0, x11, lsl #3
   1f448:	ldr	w4, [x19, #48]
   1f44c:	ldp	w3, w2, [x19, #40]
   1f450:	mov	x1, x20
   1f454:	ldr	w0, [x0, #4]
   1f458:	ldr	x7, [sp, #368]
   1f45c:	stp	x11, x13, [sp, #200]
   1f460:	str	x10, [sp, #216]
   1f464:	str	w12, [sp, #228]
   1f468:	str	x9, [sp, #232]
   1f46c:	bl	1efb4 <__sanitizer_set_death_callback@@Base+0x1fbc>
   1f470:	cbz	w0, 1f364 <__sanitizer_set_death_callback@@Base+0x236c>
   1f474:	ldp	x11, x13, [sp, #200]
   1f478:	ldr	x0, [x28, #24]
   1f47c:	ldr	w12, [sp, #228]
   1f480:	ldr	x10, [sp, #216]
   1f484:	ldr	w0, [x0, x13]
   1f488:	ldr	x9, [sp, #232]
   1f48c:	cmp	w0, #0x1b
   1f490:	b.hi	1f4cc <__sanitizer_set_death_callback@@Base+0x24d4>  // b.pmore
   1f494:	cmp	w0, #0xf
   1f498:	b.hi	1f4ac <__sanitizer_set_death_callback@@Base+0x24b4>  // b.pmore
   1f49c:	cmp	w0, #0x3
   1f4a0:	b.eq	1f564 <__sanitizer_set_death_callback@@Base+0x256c>  // b.none
   1f4a4:	add	x11, x11, #0x1
   1f4a8:	b	1f3d4 <__sanitizer_set_death_callback@@Base+0x23dc>
   1f4ac:	sub	w0, w0, #0x10
   1f4b0:	cmp	w0, #0xb
   1f4b4:	b.hi	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.pmore
   1f4b8:	ldr	x1, [sp, #192]
   1f4bc:	ldrb	w0, [x1, w0, uxtw]
   1f4c0:	adr	x1, 1f4cc <__sanitizer_set_death_callback@@Base+0x24d4>
   1f4c4:	add	x0, x1, w0, sxtb #2
   1f4c8:	br	x0
   1f4cc:	cmp	w0, #0x55
   1f4d0:	b.ne	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.any
   1f4d4:	ldr	w0, [sp, #304]
   1f4d8:	cmp	w0, #0x2
   1f4dc:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   1f4e0:	b.ne	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.any
   1f4e4:	mov	w0, #0x1                   	// #1
   1f4e8:	str	w0, [sp, #156]
   1f4ec:	ldr	x9, [sp, #312]
   1f4f0:	b	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>
   1f4f4:	ldr	w0, [sp, #304]
   1f4f8:	cmp	w0, #0x1
   1f4fc:	b.ne	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.any
   1f500:	str	w0, [sp, #152]
   1f504:	ldr	x24, [sp, #312]
   1f508:	b	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>
   1f50c:	ldr	w0, [sp, #304]
   1f510:	cmp	w0, #0x1
   1f514:	b.ne	1f524 <__sanitizer_set_death_callback@@Base+0x252c>  // b.any
   1f518:	str	w0, [sp, #148]
   1f51c:	ldr	x10, [sp, #312]
   1f520:	b	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>
   1f524:	cmp	w0, #0x2
   1f528:	b.ne	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.any
   1f52c:	mov	w12, #0x1                   	// #1
   1f530:	str	w12, [sp, #148]
   1f534:	ldr	x10, [sp, #312]
   1f538:	b	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>
   1f53c:	ldr	w0, [x28, #8]
   1f540:	cmp	w0, #0x11
   1f544:	b.ne	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.any
   1f548:	ldr	w0, [sp, #304]
   1f54c:	cmp	w0, #0x2
   1f550:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   1f554:	b.ne	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.any
   1f558:	ldr	x0, [sp, #312]
   1f55c:	str	x0, [x19, #56]
   1f560:	b	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>
   1f564:	ldr	w0, [x28, #8]
   1f568:	cmp	w0, #0x11
   1f56c:	b.ne	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.any
   1f570:	ldr	w0, [sp, #304]
   1f574:	cmp	w0, #0x4
   1f578:	b.ne	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.any
   1f57c:	ldr	x0, [sp, #312]
   1f580:	str	x0, [x19, #64]
   1f584:	b	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>
   1f588:	ldr	w0, [x28, #8]
   1f58c:	cmp	w0, #0x11
   1f590:	b.ne	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.any
   1f594:	ldr	w0, [sp, #304]
   1f598:	cmp	w0, #0x4
   1f59c:	b.ne	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>  // b.any
   1f5a0:	ldr	x0, [sp, #312]
   1f5a4:	str	x0, [x19, #72]
   1f5a8:	b	1f4a4 <__sanitizer_set_death_callback@@Base+0x24ac>
   1f5ac:	ldr	w0, [sp, #156]
   1f5b0:	cbz	w0, 1f6d4 <__sanitizer_set_death_callback@@Base+0x26dc>
   1f5b4:	ldr	x0, [sp, #168]
   1f5b8:	cmp	x9, x0
   1f5bc:	b.cc	1f5d8 <__sanitizer_set_death_callback@@Base+0x25e0>  // b.lo, b.ul, b.last
   1f5c0:	mov	x0, x22
   1f5c4:	mov	w2, #0x0                   	// #0
   1f5c8:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1f5cc:	add	x1, x1, #0xe97
   1f5d0:	blr	x21
   1f5d4:	b	1f39c <__sanitizer_set_death_callback@@Base+0x23a4>
   1f5d8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1f5dc:	add	x0, x0, #0xdec
   1f5e0:	str	x0, [sp, #304]
   1f5e4:	ldr	x0, [sp, #160]
   1f5e8:	str	x0, [sp, #312]
   1f5ec:	stp	x21, x22, [sp, #344]
   1f5f0:	add	x0, x0, x9
   1f5f4:	str	x0, [sp, #320]
   1f5f8:	ldr	x0, [sp, #168]
   1f5fc:	str	wzr, [sp, #360]
   1f600:	sub	x9, x0, x9
   1f604:	ldr	w0, [sp, #224]
   1f608:	str	x9, [sp, #328]
   1f60c:	str	w0, [sp, #336]
   1f610:	ldr	w0, [sp, #360]
   1f614:	cbnz	w0, 1f39c <__sanitizer_set_death_callback@@Base+0x23a4>
   1f618:	ldr	w1, [x19, #48]
   1f61c:	mov	x0, x27
   1f620:	bl	1edc0 <__sanitizer_set_death_callback@@Base+0x1dc8>
   1f624:	mov	x2, x0
   1f628:	ldr	w1, [x19, #48]
   1f62c:	mov	x0, x27
   1f630:	str	x2, [sp, #200]
   1f634:	bl	1edc0 <__sanitizer_set_death_callback@@Base+0x1dc8>
   1f638:	mov	x3, x0
   1f63c:	ldr	x2, [sp, #200]
   1f640:	orr	x0, x2, x0
   1f644:	cbz	x0, 1f6a8 <__sanitizer_set_death_callback@@Base+0x26b0>
   1f648:	ldr	w1, [x19, #48]
   1f64c:	mov	x0, x2
   1f650:	bl	1e554 <__sanitizer_set_death_callback@@Base+0x155c>
   1f654:	ldr	x2, [sp, #200]
   1f658:	cbnz	w0, 1f6a0 <__sanitizer_set_death_callback@@Base+0x26a8>
   1f65c:	add	x0, sp, #0x200
   1f660:	add	x2, x2, x24
   1f664:	add	x3, x3, x24
   1f668:	stp	x2, x3, [sp, #280]
   1f66c:	mov	x4, x22
   1f670:	ldr	x5, [sp, #400]
   1f674:	str	x19, [sp, #296]
   1f678:	ldp	x0, x1, [x0, #-232]
   1f67c:	mov	x3, x21
   1f680:	mov	x2, x23
   1f684:	stp	x0, x1, [x23]
   1f688:	mov	x1, x26
   1f68c:	mov	x0, x25
   1f690:	str	x19, [x23, #16]
   1f694:	bl	1e768 <__sanitizer_set_death_callback@@Base+0x1770>
   1f698:	cbnz	w0, 1f610 <__sanitizer_set_death_callback@@Base+0x2618>
   1f69c:	b	1f364 <__sanitizer_set_death_callback@@Base+0x236c>
   1f6a0:	mov	x24, x3
   1f6a4:	b	1f610 <__sanitizer_set_death_callback@@Base+0x2618>
   1f6a8:	ldr	w0, [sp, #360]
   1f6ac:	cbnz	w0, 1f39c <__sanitizer_set_death_callback@@Base+0x23a4>
   1f6b0:	ldr	w0, [x28, #8]
   1f6b4:	cmp	w0, #0x11
   1f6b8:	b.ne	1f3f0 <__sanitizer_set_death_callback@@Base+0x23f8>  // b.any
   1f6bc:	ldr	w0, [sp, #156]
   1f6c0:	cbnz	w0, 1f360 <__sanitizer_set_death_callback@@Base+0x2368>
   1f6c4:	ldp	w1, w0, [sp, #148]
   1f6c8:	tst	w0, w1
   1f6cc:	b.eq	1f3f0 <__sanitizer_set_death_callback@@Base+0x23f8>  // b.none
   1f6d0:	b	1f360 <__sanitizer_set_death_callback@@Base+0x2368>
   1f6d4:	ldp	w1, w0, [sp, #148]
   1f6d8:	tst	w0, w1
   1f6dc:	b.eq	1f6b0 <__sanitizer_set_death_callback@@Base+0x26b8>  // b.none
   1f6e0:	cbz	w12, 1f6e8 <__sanitizer_set_death_callback@@Base+0x26f0>
   1f6e4:	add	x10, x10, x24
   1f6e8:	stp	x24, x10, [sp, #304]
   1f6ec:	mov	x4, x22
   1f6f0:	mov	x3, x21
   1f6f4:	ldr	x5, [sp, #400]
   1f6f8:	str	x19, [sp, #320]
   1f6fc:	ldp	x0, x1, [x27]
   1f700:	mov	x2, x23
   1f704:	stp	x0, x1, [x23]
   1f708:	mov	x1, x26
   1f70c:	mov	x0, x25
   1f710:	str	x19, [x23, #16]
   1f714:	bl	1e768 <__sanitizer_set_death_callback@@Base+0x1770>
   1f718:	cbnz	w0, 1f6b0 <__sanitizer_set_death_callback@@Base+0x26b8>
   1f71c:	b	1f364 <__sanitizer_set_death_callback@@Base+0x236c>
   1f720:	ldr	x3, [x0]
   1f724:	ldr	x2, [x1]
   1f728:	cmp	x3, x2
   1f72c:	b.cc	1f764 <__sanitizer_set_death_callback@@Base+0x276c>  // b.lo, b.ul, b.last
   1f730:	b.hi	1f75c <__sanitizer_set_death_callback@@Base+0x2764>  // b.pmore
   1f734:	ldr	x3, [x0, #8]
   1f738:	ldr	x2, [x1, #8]
   1f73c:	cmp	x3, x2
   1f740:	b.cc	1f75c <__sanitizer_set_death_callback@@Base+0x2764>  // b.lo, b.ul, b.last
   1f744:	b.hi	1f764 <__sanitizer_set_death_callback@@Base+0x276c>  // b.pmore
   1f748:	ldr	x0, [x0, #16]
   1f74c:	ldr	x1, [x1, #16]
   1f750:	ldr	x0, [x0]
   1f754:	ldr	x1, [x1]
   1f758:	b	68c0 <__asan_internal_strcmp@plt>
   1f75c:	mov	w0, #0x1                   	// #1
   1f760:	ret
   1f764:	mov	w0, #0xffffffff            	// #-1
   1f768:	b	1f760 <__sanitizer_set_death_callback@@Base+0x2768>
   1f76c:	sub	sp, sp, #0xd0
   1f770:	stp	x29, x30, [sp, #16]
   1f774:	add	x29, sp, #0x10
   1f778:	stp	x21, x22, [sp, #48]
   1f77c:	mov	x21, x0
   1f780:	ldr	x0, [x1, #16]
   1f784:	stp	x19, x20, [sp, #32]
   1f788:	stp	x23, x24, [sp, #64]
   1f78c:	cmp	x0, x2
   1f790:	mov	x23, x3
   1f794:	stp	x25, x26, [sp, #80]
   1f798:	mov	x24, x4
   1f79c:	stp	x27, x28, [sp, #96]
   1f7a0:	b.hi	1f7b8 <__sanitizer_set_death_callback@@Base+0x27c0>  // b.pmore
   1f7a4:	ldr	x4, [x1, #8]
   1f7a8:	sub	x5, x2, x0
   1f7ac:	mov	x20, x1
   1f7b0:	cmp	x5, x4
   1f7b4:	b.cc	1f7d4 <__sanitizer_set_death_callback@@Base+0x27dc>  // b.lo, b.ul, b.last
   1f7b8:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1f7bc:	mov	x0, x24
   1f7c0:	add	x1, x1, #0xdfa
   1f7c4:	mov	w2, #0x0                   	// #0
   1f7c8:	blr	x23
   1f7cc:	mov	x19, #0x0                   	// #0
   1f7d0:	b	1f8e8 <__sanitizer_set_death_callback@@Base+0x28f0>
   1f7d4:	ldr	x1, [x21, #56]
   1f7d8:	adrp	x3, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1f7dc:	add	x3, x3, #0xe28
   1f7e0:	stp	x3, x1, [sp, #144]
   1f7e4:	add	x0, x0, x4
   1f7e8:	ldr	x1, [x20]
   1f7ec:	sub	x0, x0, x2
   1f7f0:	add	x26, sp, #0x90
   1f7f4:	str	x0, [sp, #168]
   1f7f8:	add	x1, x1, x5
   1f7fc:	ldr	w0, [x21, #120]
   1f800:	str	x1, [sp, #160]
   1f804:	str	w0, [sp, #176]
   1f808:	mov	x0, x26
   1f80c:	stp	x23, x24, [sp, #184]
   1f810:	str	wzr, [sp, #200]
   1f814:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   1f818:	mov	x1, x0
   1f81c:	cbnz	x0, 1f834 <__sanitizer_set_death_callback@@Base+0x283c>
   1f820:	mov	x0, x26
   1f824:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1f828:	add	x1, x1, #0xe34
   1f82c:	bl	1e834 <__sanitizer_set_death_callback@@Base+0x183c>
   1f830:	b	1f7cc <__sanitizer_set_death_callback@@Base+0x27d4>
   1f834:	mov	x3, x24
   1f838:	mov	x2, x23
   1f83c:	add	x0, x20, #0x58
   1f840:	bl	1ea00 <__sanitizer_set_death_callback@@Base+0x1a08>
   1f844:	mov	x22, x0
   1f848:	cbz	x0, 1f7cc <__sanitizer_set_death_callback@@Base+0x27d4>
   1f84c:	add	x27, sp, #0x80
   1f850:	mov	x25, #0x0                   	// #0
   1f854:	mov	x19, #0x0                   	// #0
   1f858:	mov	w28, #0x2007                	// #8199
   1f85c:	ldr	x0, [x22, #16]
   1f860:	cmp	x0, x25
   1f864:	b.ls	1f8e8 <__sanitizer_set_death_callback@@Base+0x28f0>  // b.plast
   1f868:	ldr	x0, [x22, #24]
   1f86c:	lsl	x8, x25, #3
   1f870:	ldr	x7, [x21, #8]
   1f874:	mov	x1, x26
   1f878:	add	x0, x0, x25, lsl #3
   1f87c:	str	x8, [sp, #120]
   1f880:	ldp	x5, x6, [x21, #104]
   1f884:	str	x27, [sp]
   1f888:	ldr	w0, [x0, #4]
   1f88c:	ldp	w3, w2, [x20, #40]
   1f890:	ldr	w4, [x20, #48]
   1f894:	bl	1efb4 <__sanitizer_set_death_callback@@Base+0x1fbc>
   1f898:	cbz	w0, 1f7cc <__sanitizer_set_death_callback@@Base+0x27d4>
   1f89c:	ldr	x0, [x22, #24]
   1f8a0:	ldr	x8, [sp, #120]
   1f8a4:	add	x1, x0, x8
   1f8a8:	ldr	w0, [x0, x8]
   1f8ac:	cmp	w0, #0x47
   1f8b0:	b.eq	1f924 <__sanitizer_set_death_callback@@Base+0x292c>  // b.none
   1f8b4:	b.hi	1f8c8 <__sanitizer_set_death_callback@@Base+0x28d0>  // b.pmore
   1f8b8:	cmp	w0, #0x3
   1f8bc:	b.eq	1f90c <__sanitizer_set_death_callback@@Base+0x2914>  // b.none
   1f8c0:	add	x25, x25, #0x1
   1f8c4:	b	1f85c <__sanitizer_set_death_callback@@Base+0x2864>
   1f8c8:	cmp	w0, #0x6e
   1f8cc:	b.eq	1f8d8 <__sanitizer_set_death_callback@@Base+0x28e0>  // b.none
   1f8d0:	cmp	w0, w28
   1f8d4:	b.ne	1f8c0 <__sanitizer_set_death_callback@@Base+0x28c8>  // b.any
   1f8d8:	ldr	w0, [sp, #128]
   1f8dc:	cmp	w0, #0x4
   1f8e0:	b.ne	1f8c0 <__sanitizer_set_death_callback@@Base+0x28c8>  // b.any
   1f8e4:	ldr	x19, [sp, #136]
   1f8e8:	mov	x0, x19
   1f8ec:	ldp	x29, x30, [sp, #16]
   1f8f0:	ldp	x19, x20, [sp, #32]
   1f8f4:	ldp	x21, x22, [sp, #48]
   1f8f8:	ldp	x23, x24, [sp, #64]
   1f8fc:	ldp	x25, x26, [sp, #80]
   1f900:	ldp	x27, x28, [sp, #96]
   1f904:	add	sp, sp, #0xd0
   1f908:	ret
   1f90c:	cbnz	x19, 1f8c0 <__sanitizer_set_death_callback@@Base+0x28c8>
   1f910:	ldr	w0, [sp, #128]
   1f914:	cmp	w0, #0x4
   1f918:	b.ne	1f8c0 <__sanitizer_set_death_callback@@Base+0x28c8>  // b.any
   1f91c:	ldr	x19, [sp, #136]
   1f920:	b	1f8c0 <__sanitizer_set_death_callback@@Base+0x28c8>
   1f924:	ldr	w0, [x1, #4]
   1f928:	cmp	w0, #0x20
   1f92c:	b.eq	1f8c0 <__sanitizer_set_death_callback@@Base+0x28c8>  // b.none
   1f930:	mov	x4, x24
   1f934:	mov	x3, x23
   1f938:	mov	x2, x27
   1f93c:	mov	x1, x20
   1f940:	mov	x0, x21
   1f944:	bl	1f954 <__sanitizer_set_death_callback@@Base+0x295c>
   1f948:	cmp	x0, #0x0
   1f94c:	csel	x19, x19, x0, eq  // eq = none
   1f950:	b	1f8c0 <__sanitizer_set_death_callback@@Base+0x28c8>
   1f954:	stp	x29, x30, [sp, #-64]!
   1f958:	mov	x29, sp
   1f95c:	stp	x19, x20, [sp, #16]
   1f960:	mov	x19, x2
   1f964:	ldr	w2, [x2]
   1f968:	stp	x21, x22, [sp, #32]
   1f96c:	mov	x20, x0
   1f970:	mov	x21, x3
   1f974:	mov	x22, x4
   1f978:	cmp	w2, #0x6
   1f97c:	b.ne	1f9e0 <__sanitizer_set_death_callback@@Base+0x29e8>  // b.any
   1f980:	ldp	x1, x2, [x20, #40]
   1f984:	adrp	x4, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   1f988:	ldr	x0, [x19, #8]
   1f98c:	add	x4, x4, #0x5a8
   1f990:	mov	x3, #0x8                   	// #8
   1f994:	str	x0, [sp, #56]
   1f998:	add	x0, sp, #0x38
   1f99c:	bl	6990 <bsearch@plt>
   1f9a0:	cbz	x0, 1f9b0 <__sanitizer_set_death_callback@@Base+0x29b8>
   1f9a4:	ldr	x1, [x0]
   1f9a8:	cbnz	x1, 1f9c0 <__sanitizer_set_death_callback@@Base+0x29c8>
   1f9ac:	mov	x0, #0x0                   	// #0
   1f9b0:	ldp	x19, x20, [sp, #16]
   1f9b4:	ldp	x21, x22, [sp, #32]
   1f9b8:	ldp	x29, x30, [sp], #64
   1f9bc:	ret
   1f9c0:	ldr	x2, [x19, #8]
   1f9c4:	mov	x4, x22
   1f9c8:	ldr	x0, [x1, #24]
   1f9cc:	mov	x3, x21
   1f9d0:	sub	x2, x2, x0
   1f9d4:	mov	x0, x20
   1f9d8:	bl	1f76c <__sanitizer_set_death_callback@@Base+0x2774>
   1f9dc:	b	1f9b0 <__sanitizer_set_death_callback@@Base+0x29b8>
   1f9e0:	cmp	w2, #0x2
   1f9e4:	ccmp	w2, #0x5, #0x4, ne  // ne = any
   1f9e8:	b.ne	1f9f4 <__sanitizer_set_death_callback@@Base+0x29fc>  // b.any
   1f9ec:	ldr	x2, [x19, #8]
   1f9f0:	b	1f9d8 <__sanitizer_set_death_callback@@Base+0x29e0>
   1f9f4:	cmp	w2, #0x7
   1f9f8:	b.ne	1f9ac <__sanitizer_set_death_callback@@Base+0x29b4>  // b.any
   1f9fc:	ldr	x0, [x0, #8]
   1fa00:	adrp	x4, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   1fa04:	mov	x3, #0x8                   	// #8
   1fa08:	add	x4, x4, #0x5a8
   1fa0c:	ldp	x1, x2, [x0, #40]
   1fa10:	ldr	x0, [x19, #8]
   1fa14:	str	x0, [sp, #56]
   1fa18:	add	x0, sp, #0x38
   1fa1c:	bl	6990 <bsearch@plt>
   1fa20:	cbz	x0, 1f9b0 <__sanitizer_set_death_callback@@Base+0x29b8>
   1fa24:	ldr	x1, [x0]
   1fa28:	cbz	x1, 1f9ac <__sanitizer_set_death_callback@@Base+0x29b4>
   1fa2c:	ldr	x2, [x19, #8]
   1fa30:	mov	x4, x22
   1fa34:	ldr	x0, [x1, #24]
   1fa38:	mov	x3, x21
   1fa3c:	sub	x2, x2, x0
   1fa40:	ldr	x0, [x20, #8]
   1fa44:	b	1f9d8 <__sanitizer_set_death_callback@@Base+0x29e0>
   1fa48:	sub	sp, sp, #0x120
   1fa4c:	stp	x29, x30, [sp, #16]
   1fa50:	add	x29, sp, #0x10
   1fa54:	stp	x19, x20, [sp, #32]
   1fa58:	mov	x20, x6
   1fa5c:	stp	x21, x22, [sp, #48]
   1fa60:	mov	x22, x1
   1fa64:	mov	x21, x7
   1fa68:	stp	x23, x24, [sp, #64]
   1fa6c:	mov	x23, x2
   1fa70:	stp	x25, x26, [sp, #80]
   1fa74:	mov	x26, x4
   1fa78:	mov	x25, x0
   1fa7c:	stp	x27, x28, [sp, #96]
   1fa80:	add	x27, sp, #0xe0
   1fa84:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   1fa88:	add	x0, x0, #0x6df
   1fa8c:	stp	x3, x5, [sp, #128]
   1fa90:	str	x0, [sp, #160]
   1fa94:	ldr	x0, [x26, #24]
   1fa98:	cbz	x0, 1faac <__sanitizer_set_death_callback@@Base+0x2ab4>
   1fa9c:	mov	x0, x26
   1faa0:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   1faa4:	mov	x1, x0
   1faa8:	cbnz	x0, 1fad0 <__sanitizer_set_death_callback@@Base+0x2ad8>
   1faac:	mov	w0, #0x1                   	// #1
   1fab0:	ldp	x29, x30, [sp, #16]
   1fab4:	ldp	x19, x20, [sp, #32]
   1fab8:	ldp	x21, x22, [sp, #48]
   1fabc:	ldp	x23, x24, [sp, #64]
   1fac0:	ldp	x25, x26, [sp, #80]
   1fac4:	ldp	x27, x28, [sp, #96]
   1fac8:	add	sp, sp, #0x120
   1facc:	ret
   1fad0:	mov	x3, x21
   1fad4:	mov	x2, x20
   1fad8:	add	x0, x23, #0x58
   1fadc:	bl	1ea00 <__sanitizer_set_death_callback@@Base+0x1a08>
   1fae0:	mov	x24, x0
   1fae4:	cbnz	x0, 1faf0 <__sanitizer_set_death_callback@@Base+0x2af8>
   1fae8:	mov	w0, #0x0                   	// #0
   1faec:	b	1fab0 <__sanitizer_set_death_callback@@Base+0x2ab8>
   1faf0:	ldr	w0, [x0, #8]
   1faf4:	cmp	w0, #0x2e
   1faf8:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   1fafc:	b.eq	20024 <__sanitizer_set_death_callback@@Base+0x302c>  // b.none
   1fb00:	cmp	w0, #0x1d
   1fb04:	b.ne	1fbd4 <__sanitizer_set_death_callback@@Base+0x2bdc>  // b.any
   1fb08:	ldr	x0, [sp, #296]
   1fb0c:	mov	x3, x21
   1fb10:	mov	x2, x20
   1fb14:	mov	x1, #0x28                  	// #40
   1fb18:	str	x0, [sp, #120]
   1fb1c:	mov	x0, x25
   1fb20:	bl	6670 <__asan_backtrace_alloc@plt>
   1fb24:	mov	x19, x0
   1fb28:	cbz	x0, 1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1fb2c:	mov	w28, #0x1                   	// #1
   1fb30:	mov	x2, #0x28                  	// #40
   1fb34:	mov	w1, #0x0                   	// #0
   1fb38:	bl	65f0 <__asan_internal_memset@plt>
   1fb3c:	mov	w9, #0x0                   	// #0
   1fb40:	mov	x13, #0x0                   	// #0
   1fb44:	mov	w12, #0x0                   	// #0
   1fb48:	mov	x11, #0x0                   	// #0
   1fb4c:	mov	x14, #0x0                   	// #0
   1fb50:	mov	x10, #0x0                   	// #0
   1fb54:	stp	wzr, wzr, [sp, #148]
   1fb58:	str	wzr, [sp, #216]
   1fb5c:	ldr	x0, [x24, #16]
   1fb60:	cmp	x0, x10
   1fb64:	b.hi	1fbe8 <__sanitizer_set_death_callback@@Base+0x2bf0>  // b.pmore
   1fb68:	cbz	w28, 1fb90 <__sanitizer_set_death_callback@@Base+0x2b98>
   1fb6c:	ldr	x0, [x19]
   1fb70:	cbnz	x0, 1fe50 <__sanitizer_set_death_callback@@Base+0x2e58>
   1fb74:	mov	w28, #0x0                   	// #0
   1fb78:	mov	x4, x21
   1fb7c:	mov	x3, x20
   1fb80:	mov	x1, x19
   1fb84:	mov	x0, x25
   1fb88:	mov	x2, #0x28                  	// #40
   1fb8c:	bl	6950 <__asan_backtrace_free@plt>
   1fb90:	ldr	w0, [x24, #12]
   1fb94:	cbz	w0, 1fa94 <__sanitizer_set_death_callback@@Base+0x2a9c>
   1fb98:	cbnz	w28, 1ffa0 <__sanitizer_set_death_callback@@Base+0x2fa8>
   1fb9c:	ldp	x3, x5, [sp, #128]
   1fba0:	mov	x7, x21
   1fba4:	ldr	x0, [sp, #296]
   1fba8:	str	x0, [sp, #8]
   1fbac:	ldr	x0, [sp, #288]
   1fbb0:	str	x0, [sp]
   1fbb4:	mov	x6, x20
   1fbb8:	mov	x4, x26
   1fbbc:	mov	x2, x23
   1fbc0:	mov	x1, x22
   1fbc4:	mov	x0, x25
   1fbc8:	bl	1fa48 <__sanitizer_set_death_callback@@Base+0x2a50>
   1fbcc:	cbnz	w0, 1fa94 <__sanitizer_set_death_callback@@Base+0x2a9c>
   1fbd0:	b	1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1fbd4:	ldr	x0, [sp, #288]
   1fbd8:	mov	w28, #0x0                   	// #0
   1fbdc:	mov	x19, #0x0                   	// #0
   1fbe0:	str	x0, [sp, #120]
   1fbe4:	b	1fb3c <__sanitizer_set_death_callback@@Base+0x2b44>
   1fbe8:	ldr	x0, [x24, #24]
   1fbec:	lsl	x15, x10, #3
   1fbf0:	ldp	w3, w2, [x23, #40]
   1fbf4:	mov	x1, x26
   1fbf8:	add	x0, x0, x10, lsl #3
   1fbfc:	ldr	w4, [x23, #48]
   1fc00:	ldr	x7, [x22, #8]
   1fc04:	stp	x10, x15, [sp, #168]
   1fc08:	ldp	x5, x6, [x22, #104]
   1fc0c:	str	x27, [sp]
   1fc10:	stp	x14, x11, [sp, #184]
   1fc14:	ldr	w0, [x0, #4]
   1fc18:	str	w12, [sp, #200]
   1fc1c:	str	x13, [sp, #208]
   1fc20:	str	w9, [sp, #220]
   1fc24:	bl	1efb4 <__sanitizer_set_death_callback@@Base+0x1fbc>
   1fc28:	cbz	w0, 1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1fc2c:	ldr	w0, [x24, #8]
   1fc30:	ldr	w12, [sp, #200]
   1fc34:	ldr	w9, [sp, #220]
   1fc38:	cmp	w0, #0x11
   1fc3c:	ldp	x10, x15, [sp, #168]
   1fc40:	ldp	x14, x11, [sp, #184]
   1fc44:	ldr	x13, [sp, #208]
   1fc48:	b.ne	1fc70 <__sanitizer_set_death_callback@@Base+0x2c78>  // b.any
   1fc4c:	ldr	x0, [x24, #24]
   1fc50:	ldr	w0, [x0, x15]
   1fc54:	cmp	w0, #0x11
   1fc58:	b.ne	1fc70 <__sanitizer_set_death_callback@@Base+0x2c78>  // b.any
   1fc5c:	ldr	w0, [sp, #224]
   1fc60:	cmp	w0, #0x1
   1fc64:	b.ne	1fc70 <__sanitizer_set_death_callback@@Base+0x2c78>  // b.any
   1fc68:	ldr	x0, [sp, #232]
   1fc6c:	str	x0, [sp, #128]
   1fc70:	cbz	w28, 1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fc74:	ldr	x0, [x24, #24]
   1fc78:	add	x1, x0, x15
   1fc7c:	ldr	w0, [x0, x15]
   1fc80:	cmp	w0, #0x55
   1fc84:	b.eq	1fe34 <__sanitizer_set_death_callback@@Base+0x2e3c>  // b.none
   1fc88:	b.hi	1fd18 <__sanitizer_set_death_callback@@Base+0x2d20>  // b.pmore
   1fc8c:	cmp	w0, #0x12
   1fc90:	b.eq	1fe08 <__sanitizer_set_death_callback@@Base+0x2e10>  // b.none
   1fc94:	b.hi	1fcb0 <__sanitizer_set_death_callback@@Base+0x2cb8>  // b.pmore
   1fc98:	cmp	w0, #0x3
   1fc9c:	b.eq	1fdd0 <__sanitizer_set_death_callback@@Base+0x2dd8>  // b.none
   1fca0:	cmp	w0, #0x11
   1fca4:	b.eq	1fdf0 <__sanitizer_set_death_callback@@Base+0x2df8>  // b.none
   1fca8:	add	x10, x10, #0x1
   1fcac:	b	1fb5c <__sanitizer_set_death_callback@@Base+0x2b64>
   1fcb0:	cmp	w0, #0x31
   1fcb4:	b.eq	1fcc0 <__sanitizer_set_death_callback@@Base+0x2cc8>  // b.none
   1fcb8:	cmp	w0, #0x47
   1fcbc:	b.ne	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.any
   1fcc0:	cbnz	w9, 1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fcc4:	ldr	w0, [x1, #4]
   1fcc8:	cmp	w0, #0x20
   1fccc:	b.eq	1fd10 <__sanitizer_set_death_callback@@Base+0x2d18>  // b.none
   1fcd0:	mov	x4, x21
   1fcd4:	mov	x3, x20
   1fcd8:	mov	x2, x27
   1fcdc:	mov	x1, x23
   1fce0:	mov	x0, x22
   1fce4:	stp	x10, x14, [sp, #168]
   1fce8:	str	x11, [sp, #184]
   1fcec:	str	w12, [sp, #192]
   1fcf0:	str	x13, [sp, #200]
   1fcf4:	bl	1f954 <__sanitizer_set_death_callback@@Base+0x295c>
   1fcf8:	ldr	w12, [sp, #192]
   1fcfc:	ldp	x10, x14, [sp, #168]
   1fd00:	ldr	x11, [sp, #184]
   1fd04:	ldr	x13, [sp, #200]
   1fd08:	cbz	x0, 1fd10 <__sanitizer_set_death_callback@@Base+0x2d18>
   1fd0c:	str	x0, [x19]
   1fd10:	mov	w9, #0x0                   	// #0
   1fd14:	b	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fd18:	cmp	w0, #0x59
   1fd1c:	b.eq	1fdb8 <__sanitizer_set_death_callback@@Base+0x2dc0>  // b.none
   1fd20:	b.hi	1fd4c <__sanitizer_set_death_callback@@Base+0x2d54>  // b.pmore
   1fd24:	cmp	w0, #0x58
   1fd28:	b.ne	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.any
   1fd2c:	ldr	w0, [sp, #224]
   1fd30:	cmp	w0, #0x2
   1fd34:	b.ne	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.any
   1fd38:	ldr	x0, [sp, #232]
   1fd3c:	cbnz	x0, 1fd7c <__sanitizer_set_death_callback@@Base+0x2d84>
   1fd40:	ldr	x0, [sp, #160]
   1fd44:	str	x0, [x19, #8]
   1fd48:	b	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fd4c:	cmp	w0, #0x6e
   1fd50:	b.eq	1fd60 <__sanitizer_set_death_callback@@Base+0x2d68>  // b.none
   1fd54:	mov	w1, #0x2007                	// #8199
   1fd58:	cmp	w0, w1
   1fd5c:	b.ne	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.any
   1fd60:	ldr	w0, [sp, #224]
   1fd64:	cmp	w0, #0x4
   1fd68:	b.ne	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.any
   1fd6c:	ldr	x0, [sp, #232]
   1fd70:	mov	w9, w28
   1fd74:	str	x0, [x19]
   1fd78:	b	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fd7c:	ldr	x2, [sp, #136]
   1fd80:	sub	x1, x0, #0x1
   1fd84:	ldr	x2, [x2, #48]
   1fd88:	cmp	x1, x2
   1fd8c:	b.cc	1fda4 <__sanitizer_set_death_callback@@Base+0x2dac>  // b.lo, b.ul, b.last
   1fd90:	mov	x0, x26
   1fd94:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1fd98:	add	x1, x1, #0xe5d
   1fd9c:	bl	1e834 <__sanitizer_set_death_callback@@Base+0x183c>
   1fda0:	b	1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1fda4:	ldr	x1, [sp, #136]
   1fda8:	ldr	x1, [x1, #56]
   1fdac:	add	x0, x1, x0, lsl #3
   1fdb0:	ldur	x0, [x0, #-8]
   1fdb4:	b	1fd44 <__sanitizer_set_death_callback@@Base+0x2d4c>
   1fdb8:	ldr	w0, [sp, #224]
   1fdbc:	cmp	w0, #0x2
   1fdc0:	b.ne	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.any
   1fdc4:	ldr	x0, [sp, #232]
   1fdc8:	str	w0, [x19, #16]
   1fdcc:	b	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fdd0:	ldr	x0, [x19]
   1fdd4:	cbnz	x0, 1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fdd8:	ldr	w0, [sp, #224]
   1fddc:	cmp	w0, #0x4
   1fde0:	b.ne	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.any
   1fde4:	ldr	x0, [sp, #232]
   1fde8:	str	x0, [x19]
   1fdec:	b	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fdf0:	ldr	w0, [sp, #224]
   1fdf4:	cmp	w0, #0x1
   1fdf8:	b.ne	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.any
   1fdfc:	str	w28, [sp, #152]
   1fe00:	ldr	x14, [sp, #232]
   1fe04:	b	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fe08:	ldr	w0, [sp, #224]
   1fe0c:	cmp	w0, #0x1
   1fe10:	b.ne	1fe20 <__sanitizer_set_death_callback@@Base+0x2e28>  // b.any
   1fe14:	ldr	x11, [sp, #232]
   1fe18:	mov	w12, w28
   1fe1c:	b	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fe20:	cmp	w0, #0x2
   1fe24:	b.ne	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.any
   1fe28:	str	w28, [sp, #216]
   1fe2c:	ldr	x11, [sp, #232]
   1fe30:	b	1fe18 <__sanitizer_set_death_callback@@Base+0x2e20>
   1fe34:	ldr	w0, [sp, #224]
   1fe38:	cmp	w0, #0x2
   1fe3c:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   1fe40:	b.ne	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.any
   1fe44:	str	w28, [sp, #148]
   1fe48:	ldr	x13, [sp, #232]
   1fe4c:	b	1fca8 <__sanitizer_set_death_callback@@Base+0x2cb0>
   1fe50:	ldr	w0, [sp, #148]
   1fe54:	cbz	w0, 1ff40 <__sanitizer_set_death_callback@@Base+0x2f48>
   1fe58:	ldr	x0, [x22, #96]
   1fe5c:	cmp	x13, x0
   1fe60:	b.cc	1fe7c <__sanitizer_set_death_callback@@Base+0x2e84>  // b.lo, b.ul, b.last
   1fe64:	mov	x0, x21
   1fe68:	mov	w2, #0x0                   	// #0
   1fe6c:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1fe70:	add	x1, x1, #0xe8e
   1fe74:	blr	x20
   1fe78:	b	1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1fe7c:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   1fe80:	add	x1, x1, #0xdec
   1fe84:	str	x1, [sp, #224]
   1fe88:	ldr	x1, [x22, #88]
   1fe8c:	str	x1, [sp, #232]
   1fe90:	ldr	x28, [sp, #128]
   1fe94:	add	x1, x1, x13
   1fe98:	sub	x13, x0, x13
   1fe9c:	ldr	w0, [x22, #120]
   1fea0:	stp	x1, x13, [sp, #240]
   1fea4:	str	w0, [sp, #256]
   1fea8:	stp	x20, x21, [sp, #264]
   1feac:	str	wzr, [sp, #280]
   1feb0:	ldr	w0, [sp, #280]
   1feb4:	cbnz	w0, 1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1feb8:	ldr	w1, [x23, #48]
   1febc:	mov	x0, x27
   1fec0:	bl	1edc0 <__sanitizer_set_death_callback@@Base+0x1dc8>
   1fec4:	mov	x3, x0
   1fec8:	ldr	w1, [x23, #48]
   1fecc:	mov	x0, x27
   1fed0:	str	x3, [sp, #152]
   1fed4:	bl	1edc0 <__sanitizer_set_death_callback@@Base+0x1dc8>
   1fed8:	mov	x4, x0
   1fedc:	ldr	x3, [sp, #152]
   1fee0:	orr	x0, x3, x0
   1fee4:	cbz	x0, 1ff30 <__sanitizer_set_death_callback@@Base+0x2f38>
   1fee8:	ldr	w1, [x23, #48]
   1feec:	mov	x0, x3
   1fef0:	bl	1e554 <__sanitizer_set_death_callback@@Base+0x155c>
   1fef4:	ldr	x3, [sp, #152]
   1fef8:	cbnz	w0, 1ff28 <__sanitizer_set_death_callback@@Base+0x2f30>
   1fefc:	ldr	x1, [x22, #16]
   1ff00:	mov	x6, x21
   1ff04:	ldr	x7, [sp, #120]
   1ff08:	mov	x5, x20
   1ff0c:	add	x4, x4, x28
   1ff10:	add	x3, x3, x28
   1ff14:	mov	x2, x19
   1ff18:	mov	x0, x25
   1ff1c:	bl	1eb70 <__sanitizer_set_death_callback@@Base+0x1b78>
   1ff20:	cbnz	w0, 1feb0 <__sanitizer_set_death_callback@@Base+0x2eb8>
   1ff24:	b	1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1ff28:	mov	x28, x4
   1ff2c:	b	1feb0 <__sanitizer_set_death_callback@@Base+0x2eb8>
   1ff30:	ldr	w0, [sp, #280]
   1ff34:	cbnz	w0, 1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1ff38:	ldr	w28, [sp, #148]
   1ff3c:	b	1fb90 <__sanitizer_set_death_callback@@Base+0x2b98>
   1ff40:	ldr	w0, [sp, #152]
   1ff44:	ands	w28, w0, w12
   1ff48:	b.eq	1ff84 <__sanitizer_set_death_callback@@Base+0x2f8c>  // b.none
   1ff4c:	ldr	w0, [sp, #216]
   1ff50:	cbz	w0, 1ff58 <__sanitizer_set_death_callback@@Base+0x2f60>
   1ff54:	add	x11, x11, x14
   1ff58:	ldr	x1, [x22, #16]
   1ff5c:	mov	x6, x21
   1ff60:	ldr	x7, [sp, #120]
   1ff64:	mov	x5, x20
   1ff68:	mov	x4, x11
   1ff6c:	mov	x3, x14
   1ff70:	mov	x2, x19
   1ff74:	mov	x0, x25
   1ff78:	bl	1eb70 <__sanitizer_set_death_callback@@Base+0x1b78>
   1ff7c:	cbnz	w0, 1fb90 <__sanitizer_set_death_callback@@Base+0x2b98>
   1ff80:	b	1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1ff84:	mov	x4, x21
   1ff88:	mov	x3, x20
   1ff8c:	mov	x1, x19
   1ff90:	mov	x0, x25
   1ff94:	mov	x2, #0x28                  	// #40
   1ff98:	bl	6950 <__asan_backtrace_free@plt>
   1ff9c:	b	1fb90 <__sanitizer_set_death_callback@@Base+0x2b98>
   1ffa0:	mov	x2, #0x20                  	// #32
   1ffa4:	mov	w1, #0x0                   	// #0
   1ffa8:	mov	x0, x27
   1ffac:	bl	65f0 <__asan_internal_memset@plt>
   1ffb0:	ldp	x3, x5, [sp, #128]
   1ffb4:	mov	x7, x21
   1ffb8:	ldr	x0, [sp, #288]
   1ffbc:	stp	x0, x27, [sp]
   1ffc0:	mov	x6, x20
   1ffc4:	mov	x4, x26
   1ffc8:	mov	x2, x23
   1ffcc:	mov	x1, x22
   1ffd0:	mov	x0, x25
   1ffd4:	bl	1fa48 <__sanitizer_set_death_callback@@Base+0x2a50>
   1ffd8:	cbz	w0, 1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1ffdc:	ldr	x0, [sp, #248]
   1ffe0:	cbz	x0, 1fa94 <__sanitizer_set_death_callback@@Base+0x2a9c>
   1ffe4:	mov	x3, x21
   1ffe8:	mov	x2, x20
   1ffec:	mov	x1, x27
   1fff0:	mov	x0, x25
   1fff4:	bl	66c0 <__asan_backtrace_vector_release@plt>
   1fff8:	cbz	w0, 1fae8 <__sanitizer_set_death_callback@@Base+0x2af0>
   1fffc:	ldr	x1, [sp, #248]
   20000:	adrp	x3, 1f000 <__sanitizer_set_death_callback@@Base+0x2008>
   20004:	ldr	x24, [sp, #224]
   20008:	add	x3, x3, #0x720
   2000c:	mov	x2, #0x18                  	// #24
   20010:	mov	x0, x24
   20014:	bl	6460 <__asan_backtrace_qsort@plt>
   20018:	ldr	x0, [sp, #248]
   2001c:	stp	x24, x0, [x19, #24]
   20020:	b	1fa94 <__sanitizer_set_death_callback@@Base+0x2a9c>
   20024:	cmp	w0, #0x1d
   20028:	ldp	x1, x0, [sp, #288]
   2002c:	csel	x0, x0, x1, eq  // eq = none
   20030:	b	1fb0c <__sanitizer_set_death_callback@@Base+0x2b14>
   20034:	sub	sp, sp, #0x1d0
   20038:	stp	x29, x30, [sp, #16]
   2003c:	add	x29, sp, #0x10
   20040:	str	x2, [sp, #232]
   20044:	ldr	x2, [x1, #32]
   20048:	stp	x19, x20, [sp, #32]
   2004c:	stp	x21, x22, [sp, #48]
   20050:	mov	x21, x0
   20054:	mov	w0, #0x1                   	// #1
   20058:	stp	x23, x24, [sp, #64]
   2005c:	mov	x23, x1
   20060:	stp	x25, x26, [sp, #80]
   20064:	stp	x27, x28, [sp, #96]
   20068:	str	w0, [x6]
   2006c:	str	x3, [sp, #136]
   20070:	str	x6, [sp, #176]
   20074:	cbz	x2, 20218 <__sanitizer_set_death_callback@@Base+0x3220>
   20078:	ldr	x1, [x1, #24]
   2007c:	add	x0, sp, #0xe8
   20080:	mov	x24, x4
   20084:	mov	x22, x5
   20088:	adrp	x4, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   2008c:	mov	x3, #0x18                  	// #24
   20090:	add	x4, x4, #0x5fc
   20094:	str	x0, [sp, #184]
   20098:	bl	6990 <bsearch@plt>
   2009c:	mov	x20, x0
   200a0:	cbz	x0, 20218 <__sanitizer_set_death_callback@@Base+0x3220>
   200a4:	ldp	x2, x3, [x23, #24]
   200a8:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   200ac:	ldr	x1, [sp, #232]
   200b0:	movk	x4, #0xaaab
   200b4:	sub	x0, x20, x2
   200b8:	asr	x0, x0, #3
   200bc:	mul	x0, x0, x4
   200c0:	add	x0, x0, #0x1
   200c4:	cmp	x0, x3
   200c8:	b.cs	200e4 <__sanitizer_set_death_callback@@Base+0x30ec>  // b.hs, b.nlast
   200cc:	ldr	x0, [x20, #24]
   200d0:	cmp	x0, x1
   200d4:	b.hi	200e4 <__sanitizer_set_death_callback@@Base+0x30ec>  // b.pmore
   200d8:	ldr	x0, [x20, #32]
   200dc:	cmp	x1, x0
   200e0:	b.cc	20244 <__sanitizer_set_death_callback@@Base+0x324c>  // b.lo, b.ul, b.last
   200e4:	ldr	x0, [x20, #16]
   200e8:	ldr	w3, [x21, #8]
   200ec:	ldr	x1, [x0, #104]
   200f0:	str	x0, [sp, #112]
   200f4:	ldr	x0, [x23, #24]
   200f8:	cmp	x0, x20
   200fc:	b.cs	2011c <__sanitizer_set_death_callback@@Base+0x3124>  // b.hs, b.nlast
   20100:	ldur	x2, [x20, #-24]
   20104:	ldr	x0, [sp, #232]
   20108:	cmp	x2, x0
   2010c:	b.hi	2011c <__sanitizer_set_death_callback@@Base+0x3124>  // b.pmore
   20110:	ldur	x2, [x20, #-16]
   20114:	cmp	x0, x2
   20118:	b.cc	2024c <__sanitizer_set_death_callback@@Base+0x3254>  // b.lo, b.ul, b.last
   2011c:	ldr	w0, [x21, #8]
   20120:	cbz	w0, 20130 <__sanitizer_set_death_callback@@Base+0x3138>
   20124:	ldr	x0, [sp, #112]
   20128:	add	x0, x0, #0x68
   2012c:	ldar	x1, [x0]
   20130:	cbnz	x1, 20d44 <__sanitizer_set_death_callback@@Base+0x3d4c>
   20134:	ldr	x0, [x20, #16]
   20138:	mov	x2, #0x18                  	// #24
   2013c:	str	x0, [sp, #152]
   20140:	add	x0, sp, #0xf0
   20144:	str	x0, [sp, #144]
   20148:	bl	65f0 <__asan_internal_memset@plt>
   2014c:	add	x0, sp, #0x110
   20150:	mov	x2, #0x40                  	// #64
   20154:	mov	w1, #0x0                   	// #0
   20158:	str	x0, [sp, #160]
   2015c:	str	xzr, [sp, #264]
   20160:	bl	65f0 <__asan_internal_memset@plt>
   20164:	ldr	x0, [sp, #152]
   20168:	ldr	x2, [x0, #56]
   2016c:	ldr	x0, [x23, #80]
   20170:	cmp	x2, x0
   20174:	b.cc	2026c <__sanitizer_set_death_callback@@Base+0x3274>  // b.lo, b.ul, b.last
   20178:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   2017c:	mov	x0, x22
   20180:	add	x1, x1, #0xeb2
   20184:	mov	w2, #0x0                   	// #0
   20188:	blr	x24
   2018c:	ldp	x1, x0, [sp, #248]
   20190:	mov	x3, x22
   20194:	mov	x2, x24
   20198:	mov	x19, #0x0                   	// #0
   2019c:	mov	x27, #0x0                   	// #0
   201a0:	mov	x25, #0x0                   	// #0
   201a4:	add	x0, x0, x1
   201a8:	stp	xzr, x0, [sp, #248]
   201ac:	mov	x0, x21
   201b0:	ldr	x1, [sp, #144]
   201b4:	bl	66c0 <__asan_backtrace_vector_release@plt>
   201b8:	ldr	x1, [sp, #160]
   201bc:	mov	x0, x21
   201c0:	mov	x3, x22
   201c4:	mov	x2, x24
   201c8:	bl	1e888 <__sanitizer_set_death_callback@@Base+0x1890>
   201cc:	mov	x1, #0xffffffffffffffff    	// #-1
   201d0:	mov	w0, #0x0                   	// #0
   201d4:	ldr	w2, [x21, #8]
   201d8:	cbnz	w2, 20b78 <__sanitizer_set_death_callback@@Base+0x3b80>
   201dc:	ldr	x2, [sp, #112]
   201e0:	stp	x1, x27, [x2, #104]
   201e4:	stp	x19, x25, [x2, #120]
   201e8:	cmn	x1, #0x1
   201ec:	b.ne	20bac <__sanitizer_set_death_callback@@Base+0x3bb4>  // b.any
   201f0:	cbz	w0, 20d4c <__sanitizer_set_death_callback@@Base+0x3d54>
   201f4:	ldr	x3, [sp, #136]
   201f8:	mov	x5, x22
   201fc:	ldr	x6, [sp, #176]
   20200:	mov	x4, x24
   20204:	ldr	x2, [sp, #232]
   20208:	mov	x1, x23
   2020c:	mov	x0, x21
   20210:	bl	20034 <__sanitizer_set_death_callback@@Base+0x303c>
   20214:	b	20224 <__sanitizer_set_death_callback@@Base+0x322c>
   20218:	ldr	x0, [sp, #176]
   2021c:	str	wzr, [x0]
   20220:	mov	w0, #0x0                   	// #0
   20224:	ldp	x29, x30, [sp, #16]
   20228:	ldp	x19, x20, [sp, #32]
   2022c:	ldp	x21, x22, [sp, #48]
   20230:	ldp	x23, x24, [sp, #64]
   20234:	ldp	x25, x26, [sp, #80]
   20238:	ldp	x27, x28, [sp, #96]
   2023c:	add	sp, sp, #0x1d0
   20240:	ret
   20244:	add	x20, x20, #0x18
   20248:	b	200b4 <__sanitizer_set_death_callback@@Base+0x30bc>
   2024c:	cbz	w3, 2025c <__sanitizer_set_death_callback@@Base+0x3264>
   20250:	ldr	x0, [sp, #112]
   20254:	add	x0, x0, #0x68
   20258:	ldar	x1, [x0]
   2025c:	cmn	x1, #0x1
   20260:	b.ne	2011c <__sanitizer_set_death_callback@@Base+0x3124>  // b.any
   20264:	sub	x20, x20, #0x18
   20268:	b	200e4 <__sanitizer_set_death_callback@@Base+0x30ec>
   2026c:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   20270:	add	x1, x1, #0xed0
   20274:	str	x1, [sp, #336]
   20278:	sub	x0, x0, x2
   2027c:	ldr	x1, [x23, #72]
   20280:	str	x1, [sp, #344]
   20284:	add	x19, sp, #0x150
   20288:	str	x0, [sp, #360]
   2028c:	add	x1, x1, x2
   20290:	ldr	w0, [x23, #120]
   20294:	str	x1, [sp, #352]
   20298:	str	w0, [sp, #368]
   2029c:	mov	x0, x19
   202a0:	stp	x24, x22, [sp, #376]
   202a4:	str	wzr, [sp, #392]
   202a8:	bl	1ec94 <__sanitizer_set_death_callback@@Base+0x1c9c>
   202ac:	mov	x1, #0xffffffff            	// #4294967295
   202b0:	mov	w2, w0
   202b4:	cmp	x1, w0, uxtw
   202b8:	b.ne	20300 <__sanitizer_set_death_callback@@Base+0x3308>  // b.any
   202bc:	mov	x0, x19
   202c0:	bl	1ecd8 <__sanitizer_set_death_callback@@Base+0x1ce0>
   202c4:	mov	x2, x0
   202c8:	mov	w25, #0x1                   	// #1
   202cc:	mov	x0, x19
   202d0:	str	x2, [sp, #360]
   202d4:	bl	1ed3c <__sanitizer_set_death_callback@@Base+0x1d44>
   202d8:	and	w0, w0, #0xffff
   202dc:	str	w0, [sp, #272]
   202e0:	sub	w0, w0, #0x2
   202e4:	cmp	w0, #0x2
   202e8:	b.ls	20308 <__sanitizer_set_death_callback@@Base+0x3310>  // b.plast
   202ec:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   202f0:	add	x1, x1, #0xedc
   202f4:	mov	x0, x19
   202f8:	bl	1e834 <__sanitizer_set_death_callback@@Base+0x183c>
   202fc:	b	2018c <__sanitizer_set_death_callback@@Base+0x3194>
   20300:	mov	w25, #0x0                   	// #0
   20304:	b	202cc <__sanitizer_set_death_callback@@Base+0x32d4>
   20308:	mov	w1, w25
   2030c:	mov	x0, x19
   20310:	bl	1ed1c <__sanitizer_set_death_callback@@Base+0x1d24>
   20314:	add	x25, sp, #0x190
   20318:	ldp	x2, x3, [sp, #336]
   2031c:	stp	x2, x3, [sp, #400]
   20320:	mov	x1, x0
   20324:	ldp	x2, x3, [sp, #352]
   20328:	stp	x2, x3, [sp, #416]
   2032c:	mov	x0, x19
   20330:	ldp	x2, x3, [sp, #368]
   20334:	stp	x2, x3, [sp, #432]
   20338:	ldp	x2, x3, [sp, #384]
   2033c:	str	x1, [sp, #424]
   20340:	stp	x2, x3, [sp, #448]
   20344:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   20348:	cbz	w0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   2034c:	mov	x0, x25
   20350:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   20354:	and	w0, w0, #0xff
   20358:	str	w0, [sp, #276]
   2035c:	ldr	w0, [sp, #272]
   20360:	cmp	w0, #0x3
   20364:	b.gt	20540 <__sanitizer_set_death_callback@@Base+0x3548>
   20368:	mov	w0, #0x1                   	// #1
   2036c:	str	w0, [sp, #280]
   20370:	mov	x0, x25
   20374:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   20378:	mov	x0, x25
   2037c:	mov	x1, #0x1                   	// #1
   20380:	ldr	x26, [sp, #416]
   20384:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   20388:	cbz	w0, 20550 <__sanitizer_set_death_callback@@Base+0x3558>
   2038c:	ldrb	w0, [x26]
   20390:	eor	w0, w0, #0xffffff80
   20394:	sub	w0, w0, #0x80
   20398:	sxtb	w0, w0
   2039c:	str	w0, [sp, #284]
   203a0:	mov	x0, x25
   203a4:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   203a8:	and	w0, w0, #0xff
   203ac:	str	w0, [sp, #288]
   203b0:	mov	x0, x25
   203b4:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   203b8:	and	w1, w0, #0xff
   203bc:	ldr	x0, [sp, #416]
   203c0:	str	w1, [sp, #292]
   203c4:	sub	w1, w1, #0x1
   203c8:	str	x0, [sp, #296]
   203cc:	mov	x0, x25
   203d0:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   203d4:	cbz	w0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   203d8:	ldp	x26, x27, [sp, #416]
   203dc:	str	xzr, [sp, #304]
   203e0:	add	x27, x26, x27
   203e4:	cmp	x27, x26
   203e8:	b.ls	203f4 <__sanitizer_set_death_callback@@Base+0x33fc>  // b.plast
   203ec:	ldrb	w0, [x26]
   203f0:	cbnz	w0, 20558 <__sanitizer_set_death_callback@@Base+0x3560>
   203f4:	ldr	x1, [sp, #304]
   203f8:	str	xzr, [sp, #312]
   203fc:	cbnz	x1, 2057c <__sanitizer_set_death_callback@@Base+0x3584>
   20400:	mov	x26, #0x0                   	// #0
   20404:	ldr	x0, [sp, #416]
   20408:	ldrb	w0, [x0]
   2040c:	cbnz	w0, 20598 <__sanitizer_set_death_callback@@Base+0x35a0>
   20410:	mov	x0, x25
   20414:	mov	x1, #0x1                   	// #1
   20418:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   2041c:	cbz	w0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   20420:	ldp	x26, x27, [sp, #416]
   20424:	str	xzr, [sp, #320]
   20428:	add	x27, x26, x27
   2042c:	cmp	x27, x26
   20430:	b.ls	2043c <__sanitizer_set_death_callback@@Base+0x3444>  // b.plast
   20434:	ldrb	w0, [x26]
   20438:	cbnz	w0, 205c4 <__sanitizer_set_death_callback@@Base+0x35cc>
   2043c:	ldp	x2, x3, [sp, #376]
   20440:	mov	x0, x21
   20444:	ldr	x1, [sp, #320]
   20448:	lsl	x1, x1, #3
   2044c:	bl	6670 <__asan_backtrace_alloc@plt>
   20450:	str	x0, [sp, #328]
   20454:	cbz	x0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   20458:	mov	x28, #0x0                   	// #0
   2045c:	ldr	x1, [sp, #416]
   20460:	ldr	w0, [sp, #456]
   20464:	ldrb	w1, [x1]
   20468:	cbnz	w1, 2063c <__sanitizer_set_death_callback@@Base+0x3644>
   2046c:	cbnz	w0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   20470:	ldr	x0, [sp, #320]
   20474:	cbz	x0, 20738 <__sanitizer_set_death_callback@@Base+0x3740>
   20478:	ldr	x0, [sp, #328]
   2047c:	ldr	x0, [x0]
   20480:	str	x0, [sp, #168]
   20484:	mov	w0, #0x1                   	// #1
   20488:	str	w0, [sp, #128]
   2048c:	ldr	x27, [sp, #168]
   20490:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   20494:	add	x0, x0, #0xd0c
   20498:	mov	x26, #0x0                   	// #0
   2049c:	str	wzr, [sp, #120]
   204a0:	str	x0, [sp, #200]
   204a4:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   204a8:	add	x0, x0, #0x6df
   204ac:	str	x0, [sp, #208]
   204b0:	ldr	x0, [sp, #360]
   204b4:	cbnz	x0, 20744 <__sanitizer_set_death_callback@@Base+0x374c>
   204b8:	ldr	w0, [sp, #392]
   204bc:	cbnz	w0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   204c0:	ldr	x0, [sp, #264]
   204c4:	cbz	x0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   204c8:	ldr	x4, [sp, #144]
   204cc:	mov	x3, x22
   204d0:	mov	x2, x24
   204d4:	mov	x0, x21
   204d8:	mov	x1, #0x18                  	// #24
   204dc:	bl	65d0 <__asan_backtrace_vector_grow@plt>
   204e0:	cbz	x0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   204e4:	mov	x1, #0xffffffffffffffff    	// #-1
   204e8:	stp	x1, xzr, [x0]
   204ec:	mov	x3, x22
   204f0:	ldr	x1, [sp, #144]
   204f4:	str	xzr, [x0, #16]
   204f8:	mov	x2, x24
   204fc:	mov	x0, x21
   20500:	bl	66c0 <__asan_backtrace_vector_release@plt>
   20504:	cbz	w0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   20508:	ldr	x0, [sp, #240]
   2050c:	adrp	x3, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   20510:	ldr	x1, [sp, #264]
   20514:	add	x3, x3, #0x9c4
   20518:	mov	x2, #0x18                  	// #24
   2051c:	str	x0, [sp, #120]
   20520:	bl	6460 <__asan_backtrace_qsort@plt>
   20524:	ldr	w0, [x21, #8]
   20528:	ldr	x9, [x20, #16]
   2052c:	ldr	x27, [sp, #264]
   20530:	cbnz	w0, 20a60 <__sanitizer_set_death_callback@@Base+0x3a68>
   20534:	add	x28, x23, #0x80
   20538:	mov	x26, x28
   2053c:	b	20a80 <__sanitizer_set_death_callback@@Base+0x3a88>
   20540:	mov	x0, x25
   20544:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   20548:	and	w0, w0, #0xff
   2054c:	b	2036c <__sanitizer_set_death_callback@@Base+0x3374>
   20550:	mov	w0, #0x0                   	// #0
   20554:	b	2039c <__sanitizer_set_death_callback@@Base+0x33a4>
   20558:	sub	x1, x27, x26
   2055c:	mov	x0, x26
   20560:	bl	68d0 <__asan_internal_strnlen@plt>
   20564:	add	x0, x0, #0x1
   20568:	add	x26, x26, x0
   2056c:	ldr	x0, [sp, #304]
   20570:	add	x0, x0, #0x1
   20574:	str	x0, [sp, #304]
   20578:	b	203e4 <__sanitizer_set_death_callback@@Base+0x33ec>
   2057c:	ldp	x2, x3, [sp, #376]
   20580:	lsl	x1, x1, #3
   20584:	mov	x0, x21
   20588:	bl	6670 <__asan_backtrace_alloc@plt>
   2058c:	str	x0, [sp, #312]
   20590:	cbnz	x0, 20400 <__sanitizer_set_death_callback@@Base+0x3408>
   20594:	b	2018c <__sanitizer_set_death_callback@@Base+0x3194>
   20598:	ldr	w0, [sp, #456]
   2059c:	cbnz	w0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   205a0:	ldr	x27, [sp, #312]
   205a4:	mov	x0, x25
   205a8:	bl	1ef78 <__sanitizer_set_death_callback@@Base+0x1f80>
   205ac:	str	x0, [x27, x26]
   205b0:	ldr	x0, [sp, #312]
   205b4:	ldr	x0, [x0, x26]
   205b8:	add	x26, x26, #0x8
   205bc:	cbnz	x0, 20404 <__sanitizer_set_death_callback@@Base+0x340c>
   205c0:	b	2018c <__sanitizer_set_death_callback@@Base+0x3194>
   205c4:	sub	x1, x27, x26
   205c8:	mov	x0, x26
   205cc:	bl	68d0 <__asan_internal_strnlen@plt>
   205d0:	add	x2, x0, #0x1
   205d4:	add	x0, x26, x0
   205d8:	mov	x1, #0x1                   	// #1
   205dc:	ldrsb	w3, [x0, x1]
   205e0:	tbnz	w3, #31, 20624 <__sanitizer_set_death_callback@@Base+0x362c>
   205e4:	add	x1, x2, x1
   205e8:	mov	x0, #0x1                   	// #1
   205ec:	add	x26, x26, x1
   205f0:	sub	x2, x26, #0x1
   205f4:	ldrsb	w1, [x2, x0]
   205f8:	tbnz	w1, #31, 2062c <__sanitizer_set_death_callback@@Base+0x3634>
   205fc:	add	x26, x26, x0
   20600:	mov	x0, #0x1                   	// #1
   20604:	sub	x2, x26, #0x1
   20608:	ldrsb	w1, [x2, x0]
   2060c:	tbnz	w1, #31, 20634 <__sanitizer_set_death_callback@@Base+0x363c>
   20610:	add	x26, x26, x0
   20614:	ldr	x0, [sp, #320]
   20618:	add	x0, x0, #0x1
   2061c:	str	x0, [sp, #320]
   20620:	b	2042c <__sanitizer_set_death_callback@@Base+0x3434>
   20624:	add	x1, x1, #0x1
   20628:	b	205dc <__sanitizer_set_death_callback@@Base+0x35e4>
   2062c:	add	x0, x0, #0x1
   20630:	b	205f4 <__sanitizer_set_death_callback@@Base+0x35fc>
   20634:	add	x0, x0, #0x1
   20638:	b	20608 <__sanitizer_set_death_callback@@Base+0x3610>
   2063c:	cbnz	w0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   20640:	mov	x0, x25
   20644:	bl	1ef78 <__sanitizer_set_death_callback@@Base+0x1f80>
   20648:	mov	x27, x0
   2064c:	cbz	x0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   20650:	mov	x0, x25
   20654:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   20658:	ldrb	w1, [x27]
   2065c:	cmp	w1, #0x2f
   20660:	b.eq	20674 <__sanitizer_set_death_callback@@Base+0x367c>  // b.none
   20664:	cbnz	x0, 20694 <__sanitizer_set_death_callback@@Base+0x369c>
   20668:	ldr	x0, [sp, #152]
   2066c:	ldr	x4, [x0, #72]
   20670:	cbnz	x4, 206b0 <__sanitizer_set_death_callback@@Base+0x36b8>
   20674:	ldr	x0, [sp, #328]
   20678:	str	x27, [x0, x28]
   2067c:	mov	x0, x25
   20680:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   20684:	mov	x0, x25
   20688:	add	x28, x28, #0x8
   2068c:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   20690:	b	2045c <__sanitizer_set_death_callback@@Base+0x3464>
   20694:	ldr	x2, [sp, #304]
   20698:	sub	x1, x0, #0x1
   2069c:	cmp	x1, x2
   206a0:	b.cs	2072c <__sanitizer_set_death_callback@@Base+0x3734>  // b.hs, b.nlast
   206a4:	ldr	x1, [sp, #312]
   206a8:	add	x0, x1, x0, lsl #3
   206ac:	ldur	x4, [x0, #-8]
   206b0:	mov	x0, x4
   206b4:	str	x4, [sp, #168]
   206b8:	bl	6570 <__asan_internal_strlen@plt>
   206bc:	mov	x26, x0
   206c0:	mov	x0, x27
   206c4:	bl	6570 <__asan_internal_strlen@plt>
   206c8:	add	x1, x26, x0
   206cc:	ldp	x2, x3, [sp, #376]
   206d0:	add	x1, x1, #0x2
   206d4:	str	x0, [sp, #120]
   206d8:	mov	x0, x21
   206dc:	bl	6670 <__asan_backtrace_alloc@plt>
   206e0:	str	x0, [sp, #128]
   206e4:	cbz	x0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   206e8:	ldr	x4, [sp, #168]
   206ec:	mov	x2, x26
   206f0:	mov	x1, x4
   206f4:	bl	6560 <__asan_internal_memcpy@plt>
   206f8:	ldp	x1, x3, [sp, #120]
   206fc:	mov	w0, #0x2f                  	// #47
   20700:	str	x3, [sp, #120]
   20704:	strb	w0, [x3, x26]
   20708:	add	x0, x26, #0x1
   2070c:	add	x2, x1, #0x1
   20710:	add	x0, x3, x0
   20714:	mov	x1, x27
   20718:	bl	6560 <__asan_internal_memcpy@plt>
   2071c:	ldr	x0, [sp, #328]
   20720:	ldr	x3, [sp, #120]
   20724:	str	x3, [x0, x28]
   20728:	b	2067c <__sanitizer_set_death_callback@@Base+0x3684>
   2072c:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   20730:	add	x1, x1, #0xefc
   20734:	b	202f4 <__sanitizer_set_death_callback@@Base+0x32fc>
   20738:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   2073c:	add	x0, x0, #0x6df
   20740:	b	20480 <__sanitizer_set_death_callback@@Base+0x3488>
   20744:	mov	x0, x19
   20748:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   2074c:	ldr	w2, [sp, #292]
   20750:	and	w1, w0, #0xff
   20754:	cmp	w2, w0, uxtb
   20758:	b.hi	207c8 <__sanitizer_set_death_callback@@Base+0x37d0>  // b.pmore
   2075c:	ldr	w5, [sp, #288]
   20760:	sub	w1, w1, w2
   20764:	ldr	w0, [sp, #120]
   20768:	ldr	w3, [sp, #276]
   2076c:	ldr	x7, [sp, #144]
   20770:	udiv	w2, w1, w5
   20774:	add	w4, w2, w0
   20778:	ldr	w0, [sp, #280]
   2077c:	msub	w1, w2, w5, w1
   20780:	ldr	w2, [sp, #284]
   20784:	ldp	x5, x6, [sp, #376]
   20788:	mul	w3, w4, w3
   2078c:	add	w1, w1, w2
   20790:	udiv	w3, w3, w0
   20794:	add	x26, x26, x3
   20798:	udiv	w3, w4, w0
   2079c:	msub	w0, w3, w0, w4
   207a0:	str	w0, [sp, #120]
   207a4:	ldr	w0, [sp, #128]
   207a8:	add	w4, w0, w1
   207ac:	str	w4, [sp, #128]
   207b0:	mov	x3, x27
   207b4:	mov	x2, x26
   207b8:	add	x1, x23, #0x10
   207bc:	mov	x0, x21
   207c0:	bl	1eab4 <__sanitizer_set_death_callback@@Base+0x1abc>
   207c4:	b	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   207c8:	cbnz	w1, 2091c <__sanitizer_set_death_callback@@Base+0x3924>
   207cc:	mov	x0, x19
   207d0:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   207d4:	mov	x28, x0
   207d8:	mov	x0, x19
   207dc:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   207e0:	and	w2, w0, #0xff
   207e4:	sub	w2, w2, #0x1
   207e8:	cmp	w2, #0x3
   207ec:	b.hi	20908 <__sanitizer_set_death_callback@@Base+0x3910>  // b.pmore
   207f0:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   207f4:	add	x0, x0, #0xd04
   207f8:	ldrh	w0, [x0, w2, uxtw #1]
   207fc:	adr	x1, 20808 <__sanitizer_set_death_callback@@Base+0x3810>
   20800:	add	x0, x1, w0, sxth #2
   20804:	br	x0
   20808:	ldr	x0, [sp, #152]
   2080c:	ldr	w1, [x0, #48]
   20810:	mov	x0, x19
   20814:	bl	1edc0 <__sanitizer_set_death_callback@@Base+0x1dc8>
   20818:	mov	x26, x0
   2081c:	b	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   20820:	mov	x0, x19
   20824:	bl	1ef78 <__sanitizer_set_death_callback@@Base+0x1f80>
   20828:	mov	x27, x0
   2082c:	cbz	x0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   20830:	mov	x0, x19
   20834:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   20838:	mov	x28, x0
   2083c:	mov	x0, x19
   20840:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   20844:	mov	x0, x19
   20848:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   2084c:	ldrb	w0, [x27]
   20850:	cmp	w0, #0x2f
   20854:	b.eq	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>  // b.none
   20858:	cbnz	w28, 208e0 <__sanitizer_set_death_callback@@Base+0x38e8>
   2085c:	ldr	x0, [sp, #152]
   20860:	ldr	x4, [x0, #72]
   20864:	mov	x0, x4
   20868:	str	x4, [sp, #224]
   2086c:	bl	6570 <__asan_internal_strlen@plt>
   20870:	mov	x28, x0
   20874:	mov	x0, x27
   20878:	bl	6570 <__asan_internal_strlen@plt>
   2087c:	add	x1, x28, x0
   20880:	ldp	x2, x3, [sp, #376]
   20884:	add	x1, x1, #0x2
   20888:	str	x0, [sp, #192]
   2088c:	mov	x0, x21
   20890:	bl	6670 <__asan_backtrace_alloc@plt>
   20894:	str	x0, [sp, #216]
   20898:	cbz	x0, 2018c <__sanitizer_set_death_callback@@Base+0x3194>
   2089c:	ldr	x4, [sp, #224]
   208a0:	mov	x2, x28
   208a4:	mov	x1, x4
   208a8:	bl	6560 <__asan_internal_memcpy@plt>
   208ac:	ldr	x3, [sp, #216]
   208b0:	mov	w0, #0x2f                  	// #47
   208b4:	ldr	x1, [sp, #192]
   208b8:	str	x3, [sp, #192]
   208bc:	strb	w0, [x3, x28]
   208c0:	add	x0, x28, #0x1
   208c4:	add	x2, x1, #0x1
   208c8:	add	x0, x3, x0
   208cc:	mov	x1, x27
   208d0:	bl	6560 <__asan_internal_memcpy@plt>
   208d4:	ldr	x3, [sp, #192]
   208d8:	mov	x27, x3
   208dc:	b	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   208e0:	ldr	x0, [sp, #304]
   208e4:	sub	w28, w28, #0x1
   208e8:	cmp	x28, x0
   208ec:	b.cs	208fc <__sanitizer_set_death_callback@@Base+0x3904>  // b.hs, b.nlast
   208f0:	ldr	x0, [sp, #312]
   208f4:	ldr	x4, [x0, x28, lsl #3]
   208f8:	b	20864 <__sanitizer_set_death_callback@@Base+0x386c>
   208fc:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   20900:	add	x1, x1, #0xf32
   20904:	b	202f4 <__sanitizer_set_death_callback@@Base+0x32fc>
   20908:	sub	x1, x28, #0x1
   2090c:	mov	x0, x19
   20910:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   20914:	cbnz	w0, 204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   20918:	b	2018c <__sanitizer_set_death_callback@@Base+0x3194>
   2091c:	sub	w1, w1, #0x1
   20920:	cmp	w1, #0xb
   20924:	b.hi	20a24 <__sanitizer_set_death_callback@@Base+0x3a2c>  // b.pmore
   20928:	ldr	x0, [sp, #200]
   2092c:	ldrh	w0, [x0, w1, uxtw #1]
   20930:	adr	x1, 2093c <__sanitizer_set_death_callback@@Base+0x3944>
   20934:	add	x0, x1, w0, sxth #2
   20938:	br	x0
   2093c:	ldr	w4, [sp, #128]
   20940:	ldr	x7, [sp, #144]
   20944:	ldp	x5, x6, [sp, #376]
   20948:	b	207b0 <__sanitizer_set_death_callback@@Base+0x37b8>
   2094c:	mov	x0, x19
   20950:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   20954:	ldr	w1, [sp, #120]
   20958:	ldr	w2, [sp, #280]
   2095c:	add	x0, x0, w1, uxtw
   20960:	ldr	w1, [sp, #276]
   20964:	mul	x1, x1, x0
   20968:	udiv	x1, x1, x2
   2096c:	add	x26, x26, x1
   20970:	udiv	x1, x0, x2
   20974:	msub	w0, w1, w2, w0
   20978:	str	w0, [sp, #120]
   2097c:	b	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   20980:	mov	x0, x19
   20984:	bl	1eec8 <__sanitizer_set_death_callback@@Base+0x1ed0>
   20988:	ldr	w1, [sp, #128]
   2098c:	add	w0, w1, w0
   20990:	str	w0, [sp, #128]
   20994:	b	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   20998:	mov	x0, x19
   2099c:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   209a0:	cbz	x0, 20a58 <__sanitizer_set_death_callback@@Base+0x3a60>
   209a4:	ldr	x2, [sp, #320]
   209a8:	sub	x1, x0, #0x1
   209ac:	cmp	x1, x2
   209b0:	b.cc	209c0 <__sanitizer_set_death_callback@@Base+0x39c8>  // b.lo, b.ul, b.last
   209b4:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   209b8:	add	x1, x1, #0xf61
   209bc:	b	202f4 <__sanitizer_set_death_callback@@Base+0x32fc>
   209c0:	ldr	x1, [sp, #328]
   209c4:	add	x0, x1, x0, lsl #3
   209c8:	ldur	x27, [x0, #-8]
   209cc:	b	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   209d0:	ldr	w1, [sp, #288]
   209d4:	mov	w0, #0xff                  	// #255
   209d8:	sub	w0, w0, w2
   209dc:	ldr	w2, [sp, #280]
   209e0:	udiv	w0, w0, w1
   209e4:	ldr	w1, [sp, #120]
   209e8:	add	w0, w0, w1
   209ec:	ldr	w1, [sp, #276]
   209f0:	mul	w1, w0, w1
   209f4:	udiv	w1, w1, w2
   209f8:	add	x26, x26, x1
   209fc:	udiv	w1, w0, w2
   20a00:	b	20974 <__sanitizer_set_death_callback@@Base+0x397c>
   20a04:	mov	x0, x19
   20a08:	bl	1ed3c <__sanitizer_set_death_callback@@Base+0x1d44>
   20a0c:	add	x26, x26, w0, uxth
   20a10:	str	wzr, [sp, #120]
   20a14:	b	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   20a18:	mov	x0, x19
   20a1c:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   20a20:	b	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   20a24:	ldr	x0, [sp, #296]
   20a28:	ldrb	w28, [x0, w1, uxtw]
   20a2c:	cbz	w28, 204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   20a30:	mov	x0, x19
   20a34:	sub	w28, w28, #0x1
   20a38:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   20a3c:	b	20a2c <__sanitizer_set_death_callback@@Base+0x3a34>
   20a40:	mov	w0, #0x1                   	// #1
   20a44:	mov	x26, #0x0                   	// #0
   20a48:	str	wzr, [sp, #120]
   20a4c:	str	w0, [sp, #128]
   20a50:	ldr	x27, [sp, #168]
   20a54:	b	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   20a58:	ldr	x27, [sp, #208]
   20a5c:	b	204b0 <__sanitizer_set_death_callback@@Base+0x34b8>
   20a60:	mov	x0, x19
   20a64:	mov	x2, #0x20                  	// #32
   20a68:	mov	w1, #0x0                   	// #0
   20a6c:	str	x9, [sp, #128]
   20a70:	bl	65f0 <__asan_internal_memset@plt>
   20a74:	mov	x28, x19
   20a78:	ldr	x9, [sp, #128]
   20a7c:	mov	x26, #0x0                   	// #0
   20a80:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   20a84:	add	x0, x0, #0xe28
   20a88:	str	x0, [sp, #400]
   20a8c:	ldr	x0, [x23, #56]
   20a90:	str	x0, [sp, #408]
   20a94:	ldr	x0, [x9]
   20a98:	str	x0, [sp, #416]
   20a9c:	ldr	x0, [x9, #8]
   20aa0:	str	x0, [sp, #424]
   20aa4:	ldr	w0, [x23, #120]
   20aa8:	str	w0, [sp, #432]
   20aac:	stp	x24, x22, [sp, #440]
   20ab0:	str	wzr, [sp, #456]
   20ab4:	ldr	x0, [sp, #424]
   20ab8:	cbnz	x0, 20b1c <__sanitizer_set_death_callback@@Base+0x3b24>
   20abc:	ldr	x25, [x28, #24]
   20ac0:	cbz	x25, 20b50 <__sanitizer_set_death_callback@@Base+0x3b58>
   20ac4:	mov	x3, x22
   20ac8:	mov	x2, x24
   20acc:	cbnz	x26, 20b5c <__sanitizer_set_death_callback@@Base+0x3b64>
   20ad0:	mov	x1, x19
   20ad4:	mov	x0, x21
   20ad8:	bl	66c0 <__asan_backtrace_vector_release@plt>
   20adc:	cbz	w0, 20b50 <__sanitizer_set_death_callback@@Base+0x3b58>
   20ae0:	ldr	x19, [x28]
   20ae4:	adrp	x3, 1f000 <__sanitizer_set_death_callback@@Base+0x2008>
   20ae8:	mov	x1, x25
   20aec:	add	x3, x3, #0x720
   20af0:	mov	x0, x19
   20af4:	mov	x2, #0x18                  	// #24
   20af8:	bl	6460 <__asan_backtrace_qsort@plt>
   20afc:	ldr	x1, [sp, #160]
   20b00:	mov	x0, x21
   20b04:	mov	x3, x22
   20b08:	mov	x2, x24
   20b0c:	bl	1e888 <__sanitizer_set_death_callback@@Base+0x1890>
   20b10:	mov	w0, #0x1                   	// #1
   20b14:	ldr	x1, [sp, #120]
   20b18:	b	201d4 <__sanitizer_set_death_callback@@Base+0x31dc>
   20b1c:	ldr	x5, [sp, #160]
   20b20:	stp	x28, x28, [sp]
   20b24:	mov	x2, x9
   20b28:	mov	x7, x22
   20b2c:	mov	x6, x24
   20b30:	mov	x4, x25
   20b34:	mov	x1, x23
   20b38:	mov	x0, x21
   20b3c:	mov	x3, #0x0                   	// #0
   20b40:	str	x9, [sp, #128]
   20b44:	bl	1fa48 <__sanitizer_set_death_callback@@Base+0x2a50>
   20b48:	ldr	x9, [sp, #128]
   20b4c:	cbnz	w0, 20ab4 <__sanitizer_set_death_callback@@Base+0x3abc>
   20b50:	mov	x25, #0x0                   	// #0
   20b54:	mov	x19, #0x0                   	// #0
   20b58:	b	20afc <__sanitizer_set_death_callback@@Base+0x3b04>
   20b5c:	mov	x1, x26
   20b60:	mov	x0, x21
   20b64:	bl	6a30 <__asan_backtrace_vector_finish@plt>
   20b68:	mov	x19, x0
   20b6c:	cbz	x0, 20b50 <__sanitizer_set_death_callback@@Base+0x3b58>
   20b70:	str	xzr, [x26, #24]
   20b74:	b	20ae4 <__sanitizer_set_death_callback@@Base+0x3aec>
   20b78:	ldr	x2, [sp, #112]
   20b7c:	add	x2, x2, #0x70
   20b80:	stlr	x27, [x2]
   20b84:	ldr	x2, [sp, #112]
   20b88:	add	x2, x2, #0x78
   20b8c:	stlr	x19, [x2]
   20b90:	ldr	x2, [sp, #112]
   20b94:	add	x2, x2, #0x80
   20b98:	stlr	x25, [x2]
   20b9c:	ldr	x2, [sp, #112]
   20ba0:	add	x2, x2, #0x68
   20ba4:	stlr	x1, [x2]
   20ba8:	b	201e8 <__sanitizer_set_death_callback@@Base+0x31f0>
   20bac:	ldr	x0, [x20, #16]
   20bb0:	adrp	x4, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   20bb4:	mov	x3, #0x18                  	// #24
   20bb8:	add	x4, x4, #0x624
   20bbc:	ldr	x2, [x0, #112]
   20bc0:	ldr	x0, [sp, #184]
   20bc4:	bl	6990 <bsearch@plt>
   20bc8:	mov	x19, x0
   20bcc:	ldr	x0, [x20, #16]
   20bd0:	cbnz	x19, 20c80 <__sanitizer_set_death_callback@@Base+0x3c88>
   20bd4:	ldr	x1, [x0, #80]
   20bd8:	cbnz	x1, 20c6c <__sanitizer_set_death_callback@@Base+0x3c74>
   20bdc:	ldr	x25, [x0, #64]
   20be0:	cbz	x25, 20c64 <__sanitizer_set_death_callback@@Base+0x3c6c>
   20be4:	ldrb	w1, [x25]
   20be8:	cmp	w1, #0x2f
   20bec:	b.eq	20c64 <__sanitizer_set_death_callback@@Base+0x3c6c>  // b.none
   20bf0:	ldr	x0, [x0, #72]
   20bf4:	cbz	x0, 20c64 <__sanitizer_set_death_callback@@Base+0x3c6c>
   20bf8:	mov	x0, x25
   20bfc:	bl	6570 <__asan_internal_strlen@plt>
   20c00:	mov	x23, x0
   20c04:	ldr	x0, [x20, #16]
   20c08:	ldr	x26, [x0, #72]
   20c0c:	mov	x0, x26
   20c10:	bl	6570 <__asan_internal_strlen@plt>
   20c14:	add	x1, x23, x0
   20c18:	mov	x19, x0
   20c1c:	mov	x3, x22
   20c20:	mov	x0, x21
   20c24:	mov	x2, x24
   20c28:	add	x1, x1, #0x2
   20c2c:	bl	6670 <__asan_backtrace_alloc@plt>
   20c30:	mov	x21, x0
   20c34:	cbz	x0, 20218 <__sanitizer_set_death_callback@@Base+0x3220>
   20c38:	mov	x2, x19
   20c3c:	mov	x1, x26
   20c40:	bl	6560 <__asan_internal_memcpy@plt>
   20c44:	mov	x1, x25
   20c48:	mov	x25, x21
   20c4c:	mov	w0, #0x2f                  	// #47
   20c50:	strb	w0, [x21, x19]
   20c54:	add	x19, x19, #0x1
   20c58:	add	x2, x23, #0x1
   20c5c:	add	x0, x21, x19
   20c60:	bl	6560 <__asan_internal_memcpy@plt>
   20c64:	ldr	x0, [x20, #16]
   20c68:	str	x25, [x0, #80]
   20c6c:	ldr	x0, [x20, #16]
   20c70:	mov	x4, #0x0                   	// #0
   20c74:	mov	w3, #0x0                   	// #0
   20c78:	ldr	x2, [x0, #80]
   20c7c:	b	20d58 <__sanitizer_set_death_callback@@Base+0x3d60>
   20c80:	ldr	x2, [x0, #128]
   20c84:	cbnz	x2, 20c98 <__sanitizer_set_death_callback@@Base+0x3ca0>
   20c88:	ldr	w3, [x19, #16]
   20c8c:	mov	x4, #0x0                   	// #0
   20c90:	ldr	x2, [x19, #8]
   20c94:	b	20d58 <__sanitizer_set_death_callback@@Base+0x3d60>
   20c98:	ldr	x1, [x0, #120]
   20c9c:	adrp	x4, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   20ca0:	ldr	x0, [sp, #184]
   20ca4:	add	x4, x4, #0x5d4
   20ca8:	mov	x3, #0x18                  	// #24
   20cac:	bl	6990 <bsearch@plt>
   20cb0:	mov	x1, x0
   20cb4:	cbz	x0, 20c88 <__sanitizer_set_death_callback@@Base+0x3c90>
   20cb8:	ldr	x0, [x20, #16]
   20cbc:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   20cc0:	movk	x5, #0xaaab
   20cc4:	ldp	x3, x4, [x0, #120]
   20cc8:	ldr	x0, [sp, #232]
   20ccc:	sub	x2, x1, x3
   20cd0:	asr	x2, x2, #3
   20cd4:	mul	x2, x2, x5
   20cd8:	add	x2, x2, #0x1
   20cdc:	cmp	x2, x4
   20ce0:	b.cs	20cfc <__sanitizer_set_death_callback@@Base+0x3d04>  // b.hs, b.nlast
   20ce4:	ldr	x2, [x1, #24]
   20ce8:	cmp	x2, x0
   20cec:	b.hi	20cfc <__sanitizer_set_death_callback@@Base+0x3d04>  // b.pmore
   20cf0:	ldr	x2, [x1, #32]
   20cf4:	cmp	x0, x2
   20cf8:	b.cc	20d3c <__sanitizer_set_death_callback@@Base+0x3d44>  // b.lo, b.ul, b.last
   20cfc:	ldr	x2, [sp, #136]
   20d00:	add	x5, sp, #0x150
   20d04:	ldr	x20, [x1, #16]
   20d08:	add	x4, sp, #0x190
   20d0c:	ldr	x1, [x19, #8]
   20d10:	str	x1, [sp, #400]
   20d14:	ldr	w1, [x19, #16]
   20d18:	mov	x3, x22
   20d1c:	str	w1, [sp, #336]
   20d20:	mov	x1, x20
   20d24:	bl	1e664 <__sanitizer_set_death_callback@@Base+0x166c>
   20d28:	cbnz	w0, 20224 <__sanitizer_set_death_callback@@Base+0x322c>
   20d2c:	ldr	w3, [sp, #336]
   20d30:	ldr	x4, [x20]
   20d34:	ldr	x2, [sp, #400]
   20d38:	b	20d58 <__sanitizer_set_death_callback@@Base+0x3d60>
   20d3c:	add	x1, x1, #0x18
   20d40:	b	20ccc <__sanitizer_set_death_callback@@Base+0x3cd4>
   20d44:	cmn	x1, #0x1
   20d48:	b.ne	20bac <__sanitizer_set_death_callback@@Base+0x3bb4>  // b.any
   20d4c:	mov	x4, #0x0                   	// #0
   20d50:	mov	w3, #0x0                   	// #0
   20d54:	mov	x2, #0x0                   	// #0
   20d58:	ldr	x5, [sp, #136]
   20d5c:	mov	x0, x22
   20d60:	ldr	x1, [sp, #232]
   20d64:	blr	x5
   20d68:	b	20224 <__sanitizer_set_death_callback@@Base+0x322c>
   20d6c:	stp	x29, x30, [sp, #-96]!
   20d70:	mov	x29, sp
   20d74:	stp	x19, x20, [sp, #16]
   20d78:	mov	x19, x0
   20d7c:	ldr	w0, [x0, #8]
   20d80:	stp	x21, x22, [sp, #32]
   20d84:	mov	x21, x2
   20d88:	mov	x22, x4
   20d8c:	stp	x23, x24, [sp, #48]
   20d90:	mov	x23, x1
   20d94:	mov	x24, x3
   20d98:	str	x25, [sp, #64]
   20d9c:	cbnz	w0, 20e18 <__sanitizer_set_death_callback@@Base+0x3e20>
   20da0:	ldr	x20, [x19, #32]
   20da4:	add	x25, sp, #0x5c
   20da8:	cbnz	x20, 20dc8 <__sanitizer_set_death_callback@@Base+0x3dd0>
   20dac:	mov	x1, x23
   20db0:	mov	x0, x22
   20db4:	mov	x4, #0x0                   	// #0
   20db8:	mov	w3, #0x0                   	// #0
   20dbc:	mov	x2, #0x0                   	// #0
   20dc0:	blr	x21
   20dc4:	b	20df8 <__sanitizer_set_death_callback@@Base+0x3e00>
   20dc8:	mov	x6, x25
   20dcc:	mov	x5, x22
   20dd0:	mov	x4, x24
   20dd4:	mov	x3, x21
   20dd8:	mov	x2, x23
   20ddc:	mov	x1, x20
   20de0:	mov	x0, x19
   20de4:	bl	20034 <__sanitizer_set_death_callback@@Base+0x303c>
   20de8:	cbnz	w0, 20df8 <__sanitizer_set_death_callback@@Base+0x3e00>
   20dec:	ldr	w0, [sp, #92]
   20df0:	cbz	w0, 20e10 <__sanitizer_set_death_callback@@Base+0x3e18>
   20df4:	mov	w0, #0x0                   	// #0
   20df8:	ldp	x19, x20, [sp, #16]
   20dfc:	ldp	x21, x22, [sp, #32]
   20e00:	ldp	x23, x24, [sp, #48]
   20e04:	ldr	x25, [sp, #64]
   20e08:	ldp	x29, x30, [sp], #96
   20e0c:	ret
   20e10:	ldr	x20, [x20]
   20e14:	b	20da8 <__sanitizer_set_death_callback@@Base+0x3db0>
   20e18:	add	x20, x19, #0x20
   20e1c:	add	x25, sp, #0x5c
   20e20:	ldar	x20, [x20]
   20e24:	cbz	x20, 20dac <__sanitizer_set_death_callback@@Base+0x3db4>
   20e28:	mov	x6, x25
   20e2c:	mov	x5, x22
   20e30:	mov	x4, x24
   20e34:	mov	x3, x21
   20e38:	mov	x2, x23
   20e3c:	mov	x1, x20
   20e40:	mov	x0, x19
   20e44:	bl	20034 <__sanitizer_set_death_callback@@Base+0x303c>
   20e48:	cbnz	w0, 20df8 <__sanitizer_set_death_callback@@Base+0x3e00>
   20e4c:	ldr	w0, [sp, #92]
   20e50:	cbz	w0, 20e20 <__sanitizer_set_death_callback@@Base+0x3e28>
   20e54:	b	20df4 <__sanitizer_set_death_callback@@Base+0x3dfc>

0000000000020e58 <__asan_backtrace_dwarf_add@@Base>:
   20e58:	sub	sp, sp, #0x290
   20e5c:	stp	x29, x30, [sp, #48]
   20e60:	add	x29, sp, #0x30
   20e64:	stp	x19, x20, [sp, #64]
   20e68:	mov	x20, x0
   20e6c:	add	x0, sp, #0x150
   20e70:	stp	x21, x22, [sp, #80]
   20e74:	add	x19, sp, #0x138
   20e78:	add	x21, sp, #0x250
   20e7c:	stp	x23, x24, [sp, #96]
   20e80:	add	x24, sp, #0x1d0
   20e84:	stp	x25, x26, [sp, #112]
   20e88:	add	x25, sp, #0x190
   20e8c:	stp	x27, x28, [sp, #128]
   20e90:	str	x2, [sp, #176]
   20e94:	mov	x2, #0x18                  	// #24
   20e98:	stp	x1, x3, [sp, #192]
   20e9c:	mov	w1, #0x0                   	// #0
   20ea0:	stp	x6, x7, [sp, #208]
   20ea4:	stp	x4, x5, [sp, #256]
   20ea8:	ldr	x22, [sp, #704]
   20eac:	ldr	x23, [sp, #712]
   20eb0:	bl	65f0 <__asan_internal_memset@plt>
   20eb4:	mov	x2, #0x18                  	// #24
   20eb8:	mov	w1, #0x0                   	// #0
   20ebc:	add	x0, sp, #0x170
   20ec0:	bl	65f0 <__asan_internal_memset@plt>
   20ec4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   20ec8:	add	x0, x0, #0xe28
   20ecc:	stp	xzr, x0, [sp, #392]
   20ed0:	mov	x2, #0x18                  	// #24
   20ed4:	mov	w1, #0x0                   	// #0
   20ed8:	ldr	x0, [sp, #176]
   20edc:	stp	x0, x0, [sp, #408]
   20ee0:	ldr	x0, [sp, #200]
   20ee4:	str	x0, [sp, #424]
   20ee8:	ldr	w0, [sp, #688]
   20eec:	str	xzr, [sp, #360]
   20ef0:	str	w0, [sp, #432]
   20ef4:	mov	x0, x19
   20ef8:	stp	x22, x23, [sp, #440]
   20efc:	str	wzr, [sp, #456]
   20f00:	bl	65f0 <__asan_internal_memset@plt>
   20f04:	stp	xzr, xzr, [sp, #144]
   20f08:	str	x19, [sp, #272]
   20f0c:	ldr	x0, [sp, #424]
   20f10:	ldr	w26, [sp, #456]
   20f14:	cbnz	x0, 20f74 <__asan_backtrace_dwarf_add@@Base+0x11c>
   20f18:	cbnz	w26, 21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   20f1c:	add	x0, sp, #0x200
   20f20:	mov	x3, x23
   20f24:	mov	x2, x22
   20f28:	ldp	x0, x1, [x0, #-200]
   20f2c:	stp	x0, x1, [sp, #368]
   20f30:	ldr	x0, [sp, #328]
   20f34:	str	x0, [sp, #384]
   20f38:	ldr	x0, [sp, #144]
   20f3c:	add	x1, sp, #0x150
   20f40:	str	x0, [sp, #392]
   20f44:	mov	x0, x20
   20f48:	bl	66c0 <__asan_backtrace_vector_release@plt>
   20f4c:	cbnz	w0, 21458 <__asan_backtrace_dwarf_add@@Base+0x600>
   20f50:	mov	w0, #0x0                   	// #0
   20f54:	ldp	x29, x30, [sp, #48]
   20f58:	ldp	x19, x20, [sp, #64]
   20f5c:	ldp	x21, x22, [sp, #80]
   20f60:	ldp	x23, x24, [sp, #96]
   20f64:	ldp	x25, x26, [sp, #112]
   20f68:	ldp	x27, x28, [sp, #128]
   20f6c:	add	sp, sp, #0x290
   20f70:	ret
   20f74:	cbnz	w26, 21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   20f78:	ldr	x0, [sp, #416]
   20f7c:	str	x0, [sp, #224]
   20f80:	mov	x0, x25
   20f84:	bl	1ec94 <__sanitizer_set_death_callback@@Base+0x1c9c>
   20f88:	mov	w1, w0
   20f8c:	str	x1, [sp, #160]
   20f90:	mov	x1, #0xffffffff            	// #4294967295
   20f94:	cmp	x1, w0, uxtw
   20f98:	b.ne	20fac <__asan_backtrace_dwarf_add@@Base+0x154>  // b.any
   20f9c:	mov	x0, x25
   20fa0:	mov	w26, #0x1                   	// #1
   20fa4:	bl	1ecd8 <__sanitizer_set_death_callback@@Base+0x1ce0>
   20fa8:	str	x0, [sp, #160]
   20fac:	ldp	x0, x1, [x25]
   20fb0:	stp	x0, x1, [x24]
   20fb4:	ldp	x0, x1, [x25, #16]
   20fb8:	stp	x0, x1, [x24, #16]
   20fbc:	ldp	x0, x1, [x25, #32]
   20fc0:	stp	x0, x1, [x24, #32]
   20fc4:	ldp	x0, x1, [x25, #48]
   20fc8:	stp	x0, x1, [x24, #48]
   20fcc:	ldr	x0, [sp, #160]
   20fd0:	str	x0, [sp, #488]
   20fd4:	mov	x1, x0
   20fd8:	mov	x0, x25
   20fdc:	bl	1ec2c <__sanitizer_set_death_callback@@Base+0x1c34>
   20fe0:	cbz	w0, 21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   20fe4:	mov	x0, x24
   20fe8:	bl	1ed3c <__sanitizer_set_death_callback@@Base+0x1d44>
   20fec:	and	w0, w0, #0xffff
   20ff0:	str	w0, [sp, #248]
   20ff4:	sub	w0, w0, #0x2
   20ff8:	cmp	w0, #0x2
   20ffc:	b.ls	210ac <__asan_backtrace_dwarf_add@@Base+0x254>  // b.plast
   21000:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   21004:	mov	x0, x24
   21008:	add	x1, x1, #0xf8c
   2100c:	bl	1e834 <__sanitizer_set_death_callback@@Base+0x183c>
   21010:	ldr	x0, [sp, #144]
   21014:	cbz	x0, 21080 <__asan_backtrace_dwarf_add@@Base+0x228>
   21018:	ldr	x21, [sp, #312]
   2101c:	mov	x19, #0x0                   	// #0
   21020:	ldr	x1, [x21, x19, lsl #3]
   21024:	mov	x3, x23
   21028:	mov	x2, x22
   2102c:	mov	x0, x20
   21030:	add	x1, x1, #0x58
   21034:	bl	1e8e8 <__sanitizer_set_death_callback@@Base+0x18f0>
   21038:	ldr	x1, [x21, x19, lsl #3]
   2103c:	mov	x0, x20
   21040:	mov	x4, x23
   21044:	mov	x3, x22
   21048:	mov	x2, #0x88                  	// #136
   2104c:	add	x19, x19, #0x1
   21050:	bl	6950 <__asan_backtrace_free@plt>
   21054:	ldr	x0, [sp, #144]
   21058:	cmp	x0, x19
   2105c:	b.ne	21020 <__asan_backtrace_dwarf_add@@Base+0x1c8>  // b.any
   21060:	ldp	x1, x0, [sp, #320]
   21064:	mov	x3, x23
   21068:	mov	x2, x22
   2106c:	add	x0, x0, x1
   21070:	add	x1, sp, #0x138
   21074:	stp	xzr, x0, [sp, #320]
   21078:	mov	x0, x20
   2107c:	bl	66c0 <__asan_backtrace_vector_release@plt>
   21080:	ldr	x0, [sp, #360]
   21084:	cbz	x0, 20f50 <__asan_backtrace_dwarf_add@@Base+0xf8>
   21088:	ldp	x1, x0, [sp, #344]
   2108c:	mov	x3, x23
   21090:	mov	x2, x22
   21094:	add	x0, x0, x1
   21098:	add	x1, sp, #0x150
   2109c:	stp	xzr, x0, [sp, #344]
   210a0:	mov	x0, x20
   210a4:	bl	66c0 <__asan_backtrace_vector_release@plt>
   210a8:	b	20f50 <__asan_backtrace_dwarf_add@@Base+0xf8>
   210ac:	ldr	x4, [sp, #272]
   210b0:	mov	x3, x23
   210b4:	mov	x2, x22
   210b8:	mov	x0, x20
   210bc:	mov	x1, #0x8                   	// #8
   210c0:	bl	65d0 <__asan_backtrace_vector_grow@plt>
   210c4:	mov	x27, x0
   210c8:	cbz	x0, 21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   210cc:	mov	x3, x23
   210d0:	mov	x2, x22
   210d4:	mov	x0, x20
   210d8:	mov	x1, #0x88                  	// #136
   210dc:	bl	6670 <__asan_backtrace_alloc@plt>
   210e0:	mov	x19, x0
   210e4:	cbz	x0, 21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   210e8:	ldr	x0, [sp, #144]
   210ec:	str	x19, [x27]
   210f0:	mov	x2, #0x10                  	// #16
   210f4:	mov	w1, #0x0                   	// #0
   210f8:	add	x0, x0, #0x1
   210fc:	str	x0, [sp, #144]
   21100:	add	x0, x19, #0x58
   21104:	str	x0, [sp, #232]
   21108:	bl	65f0 <__asan_internal_memset@plt>
   2110c:	mov	w1, w26
   21110:	mov	x0, x24
   21114:	bl	1ed1c <__sanitizer_set_death_callback@@Base+0x1d24>
   21118:	stp	xzr, xzr, [x19, #88]
   2111c:	ldr	x1, [sp, #216]
   21120:	cmp	x1, x0
   21124:	b.hi	21140 <__asan_backtrace_dwarf_add@@Base+0x2e8>  // b.pmore
   21128:	mov	x0, x23
   2112c:	mov	w2, #0x0                   	// #0
   21130:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   21134:	add	x1, x1, #0xfa7
   21138:	blr	x22
   2113c:	b	21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   21140:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   21144:	add	x1, x1, #0xfc2
   21148:	str	x1, [sp, #528]
   2114c:	mov	x27, #0x0                   	// #0
   21150:	ldr	x1, [sp, #208]
   21154:	str	x1, [sp, #536]
   21158:	str	x22, [sp, #568]
   2115c:	add	x1, x1, x0
   21160:	str	x1, [sp, #544]
   21164:	ldr	x1, [sp, #216]
   21168:	str	x23, [sp, #576]
   2116c:	str	wzr, [sp, #584]
   21170:	sub	x0, x1, x0
   21174:	str	x0, [sp, #552]
   21178:	ldr	w0, [sp, #688]
   2117c:	str	w0, [sp, #560]
   21180:	add	x0, sp, #0x200
   21184:	ldp	x0, x1, [x0, #16]
   21188:	stp	x0, x1, [x21]
   2118c:	add	x0, sp, #0x200
   21190:	ldp	x0, x1, [x0, #32]
   21194:	stp	x0, x1, [x21, #16]
   21198:	add	x0, sp, #0x200
   2119c:	ldp	x0, x1, [x0, #48]
   211a0:	stp	x0, x1, [x21, #32]
   211a4:	add	x0, sp, #0x200
   211a8:	ldp	x0, x1, [x0, #64]
   211ac:	stp	x0, x1, [x21, #48]
   211b0:	mov	x0, x21
   211b4:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   211b8:	ldr	w1, [sp, #648]
   211bc:	cbnz	x0, 212bc <__asan_backtrace_dwarf_add@@Base+0x464>
   211c0:	cbnz	w1, 21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   211c4:	cbz	x27, 2139c <__asan_backtrace_dwarf_add@@Base+0x544>
   211c8:	lsl	x28, x27, #5
   211cc:	mov	x3, x23
   211d0:	mov	x2, x22
   211d4:	mov	x1, x28
   211d8:	mov	x0, x20
   211dc:	bl	6670 <__asan_backtrace_alloc@plt>
   211e0:	str	x0, [x19, #96]
   211e4:	cbz	x0, 21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   211e8:	str	x27, [x19, #88]
   211ec:	add	x27, sp, #0x210
   211f0:	mov	x2, x28
   211f4:	mov	x28, #0x0                   	// #0
   211f8:	mov	w1, #0x0                   	// #0
   211fc:	bl	65f0 <__asan_internal_memset@plt>
   21200:	ldr	w0, [sp, #584]
   21204:	cbnz	w0, 21370 <__asan_backtrace_dwarf_add@@Base+0x518>
   21208:	mov	x0, x27
   2120c:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   21210:	str	x0, [sp, #184]
   21214:	cbz	x0, 21388 <__asan_backtrace_dwarf_add@@Base+0x530>
   21218:	mov	x0, x27
   2121c:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   21220:	str	x0, [sp, #240]
   21224:	mov	x0, x27
   21228:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   2122c:	and	w0, w0, #0xff
   21230:	str	w0, [sp, #252]
   21234:	ldp	x0, x1, [x27]
   21238:	stp	x0, x1, [x21]
   2123c:	ldp	x0, x1, [x27, #16]
   21240:	stp	x0, x1, [x21, #16]
   21244:	ldp	x0, x1, [x27, #32]
   21248:	stp	x0, x1, [x21, #32]
   2124c:	ldp	x0, x1, [x27, #48]
   21250:	stp	x0, x1, [x21, #48]
   21254:	mov	x1, #0x0                   	// #0
   21258:	mov	x0, x21
   2125c:	str	x1, [sp, #280]
   21260:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   21264:	str	x0, [sp, #168]
   21268:	ldr	x1, [sp, #280]
   2126c:	cbnz	x0, 212f8 <__asan_backtrace_dwarf_add@@Base+0x4a0>
   21270:	cbnz	x1, 21310 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   21274:	mov	x0, x27
   21278:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   2127c:	mov	x0, x27
   21280:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   21284:	mov	x1, #0x0                   	// #0
   21288:	ldr	x2, [x19, #96]
   2128c:	ldr	x3, [sp, #184]
   21290:	add	x0, x2, x28
   21294:	str	x3, [x2, x28]
   21298:	add	x28, x28, #0x20
   2129c:	ldr	w2, [sp, #240]
   212a0:	str	w2, [x0, #8]
   212a4:	ldr	w2, [sp, #252]
   212a8:	str	w2, [x0, #12]
   212ac:	ldr	x2, [sp, #168]
   212b0:	str	x2, [x0, #16]
   212b4:	str	x1, [x0, #24]
   212b8:	b	21200 <__asan_backtrace_dwarf_add@@Base+0x3a8>
   212bc:	cbnz	w1, 21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   212c0:	mov	x0, x21
   212c4:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   212c8:	add	x27, x27, #0x1
   212cc:	mov	x0, x21
   212d0:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   212d4:	mov	x0, x21
   212d8:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   212dc:	cbnz	x0, 212ec <__asan_backtrace_dwarf_add@@Base+0x494>
   212e0:	mov	x0, x21
   212e4:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   212e8:	b	211b0 <__asan_backtrace_dwarf_add@@Base+0x358>
   212ec:	mov	x0, x21
   212f0:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   212f4:	b	212d4 <__asan_backtrace_dwarf_add@@Base+0x47c>
   212f8:	add	x1, x1, #0x1
   212fc:	mov	x0, x21
   21300:	str	x1, [sp, #168]
   21304:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   21308:	ldr	x1, [sp, #168]
   2130c:	b	21258 <__asan_backtrace_dwarf_add@@Base+0x400>
   21310:	lsl	x1, x1, #3
   21314:	mov	x3, x23
   21318:	mov	x2, x22
   2131c:	mov	x0, x20
   21320:	bl	6670 <__asan_backtrace_alloc@plt>
   21324:	mov	x1, x0
   21328:	cbz	x0, 21370 <__asan_backtrace_dwarf_add@@Base+0x518>
   2132c:	mov	x2, x0
   21330:	mov	x0, x27
   21334:	stp	x1, x2, [sp, #288]
   21338:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   2133c:	mov	x3, x0
   21340:	mov	x0, x27
   21344:	str	x3, [sp, #280]
   21348:	bl	1ee30 <__sanitizer_set_death_callback@@Base+0x1e38>
   2134c:	ldp	x3, x1, [sp, #280]
   21350:	cbz	x3, 21288 <__asan_backtrace_dwarf_add@@Base+0x430>
   21354:	ldr	x2, [sp, #296]
   21358:	stp	w3, w0, [x2]
   2135c:	add	x2, x2, #0x8
   21360:	ldr	x0, [sp, #168]
   21364:	add	x0, x0, #0x1
   21368:	str	x0, [sp, #168]
   2136c:	b	21330 <__asan_backtrace_dwarf_add@@Base+0x4d8>
   21370:	ldr	x1, [sp, #232]
   21374:	mov	x3, x23
   21378:	mov	x2, x22
   2137c:	mov	x0, x20
   21380:	bl	1e8e8 <__sanitizer_set_death_callback@@Base+0x18f0>
   21384:	b	21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   21388:	ldp	x1, x0, [x19, #88]
   2138c:	adrp	x3, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   21390:	mov	x2, #0x20                  	// #32
   21394:	add	x3, x3, #0x64c
   21398:	bl	6460 <__asan_backtrace_qsort@plt>
   2139c:	mov	x0, x24
   213a0:	bl	1ed8c <__sanitizer_set_death_callback@@Base+0x1d94>
   213a4:	and	w2, w0, #0xff
   213a8:	mov	x1, #0x4                   	// #4
   213ac:	ldr	x0, [sp, #152]
   213b0:	cmp	w26, #0x0
   213b4:	str	x0, [x19, #24]
   213b8:	mov	x0, #0xc                   	// #12
   213bc:	csel	x0, x0, x1, ne  // ne = any
   213c0:	stp	w26, w2, [x19, #44]
   213c4:	ldr	x1, [sp, #160]
   213c8:	stp	xzr, xzr, [x19, #56]
   213cc:	ldr	w7, [sp, #688]
   213d0:	add	x0, x0, x1
   213d4:	stp	xzr, xzr, [x19, #72]
   213d8:	mov	x2, x24
   213dc:	ldr	x1, [sp, #152]
   213e0:	stp	xzr, xzr, [x19, #104]
   213e4:	add	x0, x1, x0
   213e8:	str	x0, [x19, #32]
   213ec:	str	x0, [sp, #152]
   213f0:	ldr	x0, [sp, #488]
   213f4:	str	x0, [x19, #8]
   213f8:	ldr	x0, [sp, #224]
   213fc:	stp	xzr, xzr, [x19, #120]
   21400:	ldr	x1, [sp, #480]
   21404:	str	x1, [x19]
   21408:	sub	x1, x1, x0
   2140c:	ldr	w0, [sp, #248]
   21410:	str	x1, [x19, #16]
   21414:	add	x1, sp, #0x290
   21418:	str	w0, [x19, #40]
   2141c:	add	x0, sp, #0x150
   21420:	stp	x19, x0, [sp, #24]
   21424:	ldr	x0, [sp, #696]
   21428:	str	x0, [sp]
   2142c:	stp	x22, x23, [sp, #8]
   21430:	mov	x0, x20
   21434:	str	x21, [sp, #40]
   21438:	ldp	x5, x6, [x1]
   2143c:	ldp	x3, x4, [x1, #16]
   21440:	ldr	x1, [sp, #192]
   21444:	bl	1f2f4 <__sanitizer_set_death_callback@@Base+0x22fc>
   21448:	cbz	w0, 21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   2144c:	ldr	w0, [sp, #520]
   21450:	cbz	w0, 20f0c <__asan_backtrace_dwarf_add@@Base+0xb4>
   21454:	b	21010 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   21458:	mov	x3, x23
   2145c:	mov	x2, x22
   21460:	add	x1, sp, #0x170
   21464:	mov	x0, x20
   21468:	bl	66c0 <__asan_backtrace_vector_release@plt>
   2146c:	cbz	w0, 20f50 <__asan_backtrace_dwarf_add@@Base+0xf8>
   21470:	ldp	x21, x26, [sp, #360]
   21474:	mov	x2, #0x18                  	// #24
   21478:	ldr	x24, [sp, #336]
   2147c:	adrp	x3, 1e000 <__sanitizer_set_death_callback@@Base+0x1008>
   21480:	add	x3, x3, #0x96c
   21484:	mov	x0, x24
   21488:	mov	x1, x21
   2148c:	ldr	x25, [sp, #392]
   21490:	bl	6460 <__asan_backtrace_qsort@plt>
   21494:	mov	x3, x23
   21498:	mov	x2, x22
   2149c:	mov	x0, x20
   214a0:	mov	x1, #0xa0                  	// #160
   214a4:	bl	6670 <__asan_backtrace_alloc@plt>
   214a8:	mov	x19, x0
   214ac:	cbz	x0, 20f50 <__asan_backtrace_dwarf_add@@Base+0xf8>
   214b0:	ldr	x0, [sp, #696]
   214b4:	stp	xzr, x0, [x19]
   214b8:	mov	x2, #0x20                  	// #32
   214bc:	ldr	x0, [sp, #192]
   214c0:	str	x0, [x19, #16]
   214c4:	ldr	x0, [sp, #176]
   214c8:	str	x0, [x19, #56]
   214cc:	ldr	x0, [sp, #200]
   214d0:	str	x0, [x19, #64]
   214d4:	ldr	x0, [sp, #256]
   214d8:	str	x0, [x19, #72]
   214dc:	ldr	x0, [sp, #264]
   214e0:	str	x0, [x19, #80]
   214e4:	ldr	x0, [sp, #656]
   214e8:	str	x0, [x19, #88]
   214ec:	ldr	x0, [sp, #664]
   214f0:	str	x0, [x19, #96]
   214f4:	ldr	x0, [sp, #672]
   214f8:	str	x0, [x19, #104]
   214fc:	ldr	x0, [sp, #680]
   21500:	str	x0, [x19, #112]
   21504:	ldr	w0, [sp, #688]
   21508:	mov	w1, #0x0                   	// #0
   2150c:	stp	x24, x21, [x19, #24]
   21510:	stp	x26, x25, [x19, #40]
   21514:	str	w0, [x19, #120]
   21518:	add	x0, x19, #0x80
   2151c:	bl	65f0 <__asan_internal_memset@plt>
   21520:	ldr	x0, [sp, #728]
   21524:	cbz	x0, 2152c <__asan_backtrace_dwarf_add@@Base+0x6d4>
   21528:	str	x19, [x0]
   2152c:	ldr	w0, [x20, #8]
   21530:	add	x1, x20, #0x20
   21534:	cbnz	w0, 21584 <__asan_backtrace_dwarf_add@@Base+0x72c>
   21538:	ldr	x0, [x20, #32]
   2153c:	cbnz	x0, 2155c <__asan_backtrace_dwarf_add@@Base+0x704>
   21540:	str	x19, [x1]
   21544:	ldr	x1, [sp, #720]
   21548:	adrp	x0, 20000 <__sanitizer_set_death_callback@@Base+0x3008>
   2154c:	add	x0, x0, #0xd6c
   21550:	str	x0, [x1]
   21554:	mov	w0, #0x1                   	// #1
   21558:	b	20f54 <__asan_backtrace_dwarf_add@@Base+0xfc>
   2155c:	mov	x1, x0
   21560:	ldr	x0, [x0]
   21564:	b	2153c <__asan_backtrace_dwarf_add@@Base+0x6e4>
   21568:	ldxr	x2, [x0]
   2156c:	cbnz	x2, 21578 <__asan_backtrace_dwarf_add@@Base+0x720>
   21570:	stlxr	w3, x19, [x0]
   21574:	cbnz	w3, 21568 <__asan_backtrace_dwarf_add@@Base+0x710>
   21578:	dmb	ish
   2157c:	cmp	x2, #0x0
   21580:	b.eq	21544 <__asan_backtrace_dwarf_add@@Base+0x6ec>  // b.none
   21584:	mov	x0, x1
   21588:	ldar	x2, [x0]
   2158c:	cbz	x2, 21568 <__asan_backtrace_dwarf_add@@Base+0x710>
   21590:	mov	x0, x2
   21594:	b	21588 <__asan_backtrace_dwarf_add@@Base+0x730>
   21598:	stp	x29, x30, [sp, #-160]!
   2159c:	mov	x29, sp
   215a0:	stp	x19, x20, [sp, #16]
   215a4:	mov	x19, x0
   215a8:	ldr	w0, [x0, #8]
   215ac:	stp	x21, x22, [sp, #32]
   215b0:	mov	x21, x1
   215b4:	mov	x22, x2
   215b8:	stp	x23, x24, [sp, #48]
   215bc:	stp	x25, x26, [sp, #64]
   215c0:	cbnz	w0, 2162c <__asan_backtrace_dwarf_add@@Base+0x7d4>
   215c4:	ldr	w0, [x19, #56]
   215c8:	cbnz	w0, 21610 <__asan_backtrace_dwarf_add@@Base+0x7b8>
   215cc:	ldr	x0, [x19, #24]
   215d0:	str	x0, [sp, #88]
   215d4:	ldr	x0, [sp, #88]
   215d8:	cbnz	x0, 2171c <__asan_backtrace_dwarf_add@@Base+0x8c4>
   215dc:	adrp	x23, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   215e0:	adrp	x24, 2f000 <__asan_backtrace_vector_release@@Base+0x4bc4>
   215e4:	add	x25, sp, #0x54
   215e8:	add	x23, x23, #0x50
   215ec:	add	x24, x24, #0x438
   215f0:	mov	w26, #0x0                   	// #0
   215f4:	sub	w0, w26, #0x1
   215f8:	cmp	w0, #0x3
   215fc:	b.hi	2164c <__asan_backtrace_dwarf_add@@Base+0x7f4>  // b.pmore
   21600:	ldrb	w0, [x23, w0, uxtw]
   21604:	adr	x1, 21610 <__asan_backtrace_dwarf_add@@Base+0x7b8>
   21608:	add	x0, x1, w0, sxtb #2
   2160c:	br	x0
   21610:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   21614:	mov	x0, x22
   21618:	add	x1, x1, #0xfe3
   2161c:	mov	w2, #0xffffffff            	// #-1
   21620:	blr	x21
   21624:	mov	w0, #0x0                   	// #0
   21628:	b	216a8 <__asan_backtrace_dwarf_add@@Base+0x850>
   2162c:	add	x0, x19, #0x38
   21630:	ldar	w0, [x0]
   21634:	cbnz	w0, 21610 <__asan_backtrace_dwarf_add@@Base+0x7b8>
   21638:	ldr	w0, [x19, #8]
   2163c:	cbz	w0, 215cc <__asan_backtrace_dwarf_add@@Base+0x774>
   21640:	add	x0, x19, #0x18
   21644:	ldar	x0, [x0]
   21648:	b	215d0 <__asan_backtrace_dwarf_add@@Base+0x778>
   2164c:	ldr	x20, [x19]
   21650:	cbz	x20, 21678 <__asan_backtrace_dwarf_add@@Base+0x820>
   21654:	mov	x2, x22
   21658:	mov	x3, x25
   2165c:	mov	x1, x21
   21660:	mov	x0, x20
   21664:	bl	6b10 <__asan_backtrace_open@plt>
   21668:	mov	w2, w0
   2166c:	tbz	w0, #31, 21724 <__asan_backtrace_dwarf_add@@Base+0x8cc>
   21670:	ldr	w0, [sp, #84]
   21674:	cbz	w0, 21698 <__asan_backtrace_dwarf_add@@Base+0x840>
   21678:	add	w26, w26, #0x1
   2167c:	cmp	w26, #0x5
   21680:	b.ne	215f4 <__asan_backtrace_dwarf_add@@Base+0x79c>  // b.any
   21684:	ldr	x1, [x19]
   21688:	cbz	x1, 216f8 <__asan_backtrace_dwarf_add@@Base+0x8a0>
   2168c:	mov	w2, #0x2                   	// #2
   21690:	mov	x0, x22
   21694:	blr	x21
   21698:	ldr	w0, [x19, #8]
   2169c:	cbnz	w0, 21708 <__asan_backtrace_dwarf_add@@Base+0x8b0>
   216a0:	mov	w1, #0x1                   	// #1
   216a4:	str	w1, [x19, #56]
   216a8:	ldp	x19, x20, [sp, #16]
   216ac:	ldp	x21, x22, [sp, #32]
   216b0:	ldp	x23, x24, [sp, #48]
   216b4:	ldp	x25, x26, [sp, #64]
   216b8:	ldp	x29, x30, [sp], #160
   216bc:	ret
   216c0:	bl	6740 <getpid@plt>
   216c4:	add	x20, sp, #0x60
   216c8:	sxtw	x3, w0
   216cc:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   216d0:	mov	x0, x20
   216d4:	add	x2, x2, #0x9
   216d8:	mov	x1, #0x40                  	// #64
   216dc:	bl	67d0 <snprintf@plt>
   216e0:	b	21654 <__asan_backtrace_dwarf_add@@Base+0x7fc>
   216e4:	adrp	x20, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   216e8:	add	x20, x20, #0xfd0
   216ec:	b	21654 <__asan_backtrace_dwarf_add@@Base+0x7fc>
   216f0:	mov	x20, x24
   216f4:	b	21654 <__asan_backtrace_dwarf_add@@Base+0x7fc>
   216f8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   216fc:	mov	w2, #0x0                   	// #0
   21700:	add	x1, x1, #0x20
   21704:	b	21690 <__asan_backtrace_dwarf_add@@Base+0x838>
   21708:	mov	w0, #0x1                   	// #1
   2170c:	add	x19, x19, #0x38
   21710:	stlr	w0, [x19]
   21714:	b	21624 <__asan_backtrace_dwarf_add@@Base+0x7cc>
   21718:	str	x1, [x19, #24]
   2171c:	mov	w0, #0x1                   	// #1
   21720:	b	216a8 <__asan_backtrace_dwarf_add@@Base+0x850>
   21724:	add	x5, sp, #0x58
   21728:	mov	x4, x22
   2172c:	mov	x3, x21
   21730:	mov	x1, x20
   21734:	mov	x0, x19
   21738:	bl	69b0 <__asan_backtrace_initialize@plt>
   2173c:	cbz	w0, 21698 <__asan_backtrace_dwarf_add@@Base+0x840>
   21740:	ldr	w0, [x19, #8]
   21744:	ldr	x1, [sp, #88]
   21748:	cbz	w0, 21718 <__asan_backtrace_dwarf_add@@Base+0x8c0>
   2174c:	add	x19, x19, #0x18
   21750:	stlr	x1, [x19]
   21754:	b	2171c <__asan_backtrace_dwarf_add@@Base+0x8c4>

0000000000021758 <__asan_backtrace_pcinfo@@Base>:
   21758:	stp	x29, x30, [sp, #-64]!
   2175c:	mov	x29, sp
   21760:	stp	x19, x20, [sp, #16]
   21764:	mov	x19, x0
   21768:	mov	x20, x3
   2176c:	stp	x21, x22, [sp, #32]
   21770:	mov	x22, x1
   21774:	mov	x21, x4
   21778:	mov	x1, x3
   2177c:	str	x23, [sp, #48]
   21780:	mov	x23, x2
   21784:	mov	x2, x4
   21788:	bl	21598 <__asan_backtrace_dwarf_add@@Base+0x740>
   2178c:	cbz	w0, 217c8 <__asan_backtrace_pcinfo@@Base+0x70>
   21790:	ldr	w0, [x19, #56]
   21794:	cbnz	w0, 217c8 <__asan_backtrace_pcinfo@@Base+0x70>
   21798:	mov	x4, x21
   2179c:	mov	x3, x20
   217a0:	mov	x2, x23
   217a4:	mov	x1, x22
   217a8:	mov	x0, x19
   217ac:	ldr	x5, [x19, #24]
   217b0:	ldp	x19, x20, [sp, #16]
   217b4:	mov	x16, x5
   217b8:	ldp	x21, x22, [sp, #32]
   217bc:	ldr	x23, [sp, #48]
   217c0:	ldp	x29, x30, [sp], #64
   217c4:	br	x16
   217c8:	mov	w0, #0x0                   	// #0
   217cc:	ldp	x19, x20, [sp, #16]
   217d0:	ldp	x21, x22, [sp, #32]
   217d4:	ldr	x23, [sp, #48]
   217d8:	ldp	x29, x30, [sp], #64
   217dc:	ret

00000000000217e0 <__asan_backtrace_syminfo@@Base>:
   217e0:	stp	x29, x30, [sp, #-64]!
   217e4:	mov	x29, sp
   217e8:	stp	x19, x20, [sp, #16]
   217ec:	mov	x19, x0
   217f0:	mov	x20, x3
   217f4:	stp	x21, x22, [sp, #32]
   217f8:	mov	x22, x1
   217fc:	mov	x21, x4
   21800:	mov	x1, x3
   21804:	str	x23, [sp, #48]
   21808:	mov	x23, x2
   2180c:	mov	x2, x4
   21810:	bl	21598 <__asan_backtrace_dwarf_add@@Base+0x740>
   21814:	cbz	w0, 21840 <__asan_backtrace_syminfo@@Base+0x60>
   21818:	ldr	w0, [x19, #56]
   2181c:	cbnz	w0, 21854 <__asan_backtrace_syminfo@@Base+0x74>
   21820:	ldr	x5, [x19, #40]
   21824:	mov	x0, x19
   21828:	mov	x4, x21
   2182c:	mov	x3, x20
   21830:	mov	x2, x23
   21834:	mov	x1, x22
   21838:	blr	x5
   2183c:	mov	w0, #0x1                   	// #1
   21840:	ldp	x19, x20, [sp, #16]
   21844:	ldp	x21, x22, [sp, #32]
   21848:	ldr	x23, [sp, #48]
   2184c:	ldp	x29, x30, [sp], #64
   21850:	ret
   21854:	mov	w0, #0x0                   	// #0
   21858:	b	21840 <__asan_backtrace_syminfo@@Base+0x60>

000000000002185c <__asan_backtrace_open@@Base>:
   2185c:	stp	x29, x30, [sp, #-64]!
   21860:	mov	x29, sp
   21864:	stp	x19, x20, [sp, #16]
   21868:	mov	x20, x3
   2186c:	stp	x21, x22, [sp, #32]
   21870:	mov	x21, x0
   21874:	mov	x22, x1
   21878:	str	x23, [sp, #48]
   2187c:	mov	x23, x2
   21880:	cbz	x3, 21888 <__asan_backtrace_open@@Base+0x2c>
   21884:	str	wzr, [x3]
   21888:	mov	x0, x21
   2188c:	mov	w1, #0x80000               	// #524288
   21890:	bl	6580 <open@plt>
   21894:	mov	w19, w0
   21898:	tbz	w0, #31, 218e4 <__asan_backtrace_open@@Base+0x88>
   2189c:	bl	6860 <__errno_location@plt>
   218a0:	ldr	w2, [x0]
   218a4:	cbz	x20, 218d4 <__asan_backtrace_open@@Base+0x78>
   218a8:	cmp	w2, #0x2
   218ac:	b.ne	218d4 <__asan_backtrace_open@@Base+0x78>  // b.any
   218b0:	mov	w0, #0x1                   	// #1
   218b4:	str	w0, [x20]
   218b8:	mov	w19, #0xffffffff            	// #-1
   218bc:	mov	w0, w19
   218c0:	ldp	x19, x20, [sp, #16]
   218c4:	ldp	x21, x22, [sp, #32]
   218c8:	ldr	x23, [sp, #48]
   218cc:	ldp	x29, x30, [sp], #64
   218d0:	ret
   218d4:	mov	x1, x21
   218d8:	mov	x0, x23
   218dc:	blr	x22
   218e0:	b	218b8 <__asan_backtrace_open@@Base+0x5c>
   218e4:	mov	w2, #0x1                   	// #1
   218e8:	mov	w1, #0x2                   	// #2
   218ec:	bl	6a90 <fcntl@plt>
   218f0:	b	218bc <__asan_backtrace_open@@Base+0x60>

00000000000218f4 <__asan_backtrace_close@@Base>:
   218f4:	stp	x29, x30, [sp, #-32]!
   218f8:	mov	x29, sp
   218fc:	stp	x19, x20, [sp, #16]
   21900:	mov	x19, x1
   21904:	mov	x20, x2
   21908:	bl	68e0 <close@plt>
   2190c:	tbz	w0, #31, 21938 <__asan_backtrace_close@@Base+0x44>
   21910:	bl	6860 <__errno_location@plt>
   21914:	ldr	w2, [x0]
   21918:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   2191c:	mov	x0, x20
   21920:	add	x1, x1, #0x54
   21924:	blr	x19
   21928:	mov	w0, #0x0                   	// #0
   2192c:	ldp	x19, x20, [sp, #16]
   21930:	ldp	x29, x30, [sp], #32
   21934:	ret
   21938:	mov	w0, #0x1                   	// #1
   2193c:	b	2192c <__asan_backtrace_close@@Base+0x38>
   21940:	mov	x3, #0x0                   	// #0
   21944:	cmp	x3, x2
   21948:	b.ne	21950 <__asan_backtrace_close@@Base+0x5c>  // b.any
   2194c:	ret
   21950:	ldrb	w5, [x1, x3]
   21954:	ldrb	w4, [x0, x3]
   21958:	strb	w5, [x0, x3]
   2195c:	strb	w4, [x1, x3]
   21960:	add	x3, x3, #0x1
   21964:	b	21944 <__asan_backtrace_close@@Base+0x50>

0000000000021968 <__asan_backtrace_qsort@@Base>:
   21968:	stp	x29, x30, [sp, #-80]!
   2196c:	mov	x29, sp
   21970:	stp	x19, x20, [sp, #16]
   21974:	mov	x20, x0
   21978:	mov	x19, x2
   2197c:	stp	x21, x22, [sp, #32]
   21980:	mov	x22, x1
   21984:	stp	x23, x24, [sp, #48]
   21988:	mov	x24, x3
   2198c:	str	x25, [sp, #64]
   21990:	cmp	x22, #0x1
   21994:	b.ls	21a64 <__asan_backtrace_qsort@@Base+0xfc>  // b.plast
   21998:	lsr	x1, x22, #1
   2199c:	add	x25, x20, x19
   219a0:	mov	x21, #0x0                   	// #0
   219a4:	mov	x23, #0x1                   	// #1
   219a8:	mov	x2, x19
   219ac:	mov	x0, x20
   219b0:	madd	x1, x1, x19, x20
   219b4:	bl	21940 <__asan_backtrace_close@@Base+0x4c>
   219b8:	mov	x1, x25
   219bc:	mov	x0, x20
   219c0:	blr	x24
   219c4:	cmp	w0, #0x0
   219c8:	b.le	219e8 <__asan_backtrace_qsort@@Base+0x80>
   219cc:	add	x21, x21, #0x1
   219d0:	cmp	x21, x23
   219d4:	b.eq	219e8 <__asan_backtrace_qsort@@Base+0x80>  // b.none
   219d8:	madd	x0, x21, x19, x20
   219dc:	mov	x2, x19
   219e0:	mov	x1, x25
   219e4:	bl	21940 <__asan_backtrace_close@@Base+0x4c>
   219e8:	add	x23, x23, #0x1
   219ec:	add	x25, x25, x19
   219f0:	cmp	x22, x23
   219f4:	b.ne	219b8 <__asan_backtrace_qsort@@Base+0x50>  // b.any
   219f8:	madd	x1, x21, x19, x19
   219fc:	sub	x23, x22, #0x1
   21a00:	sub	x23, x23, x21
   21a04:	add	x25, x20, x1
   21a08:	cbnz	x21, 21a2c <__asan_backtrace_qsort@@Base+0xc4>
   21a0c:	mov	x3, x24
   21a10:	mov	x2, x19
   21a14:	mov	x1, x21
   21a18:	mov	x0, x20
   21a1c:	bl	21968 <__asan_backtrace_qsort@@Base>
   21a20:	mov	x20, x25
   21a24:	mov	x22, x23
   21a28:	b	21990 <__asan_backtrace_qsort@@Base+0x28>
   21a2c:	sub	x1, x1, x19
   21a30:	mov	x2, x19
   21a34:	add	x1, x20, x1
   21a38:	mov	x0, x20
   21a3c:	bl	21940 <__asan_backtrace_close@@Base+0x4c>
   21a40:	cmp	x22, x21, lsl #1
   21a44:	b.hi	21a0c <__asan_backtrace_qsort@@Base+0xa4>  // b.pmore
   21a48:	mov	x1, x23
   21a4c:	mov	x0, x25
   21a50:	mov	x3, x24
   21a54:	mov	x25, x20
   21a58:	mov	x23, x21
   21a5c:	bl	21968 <__asan_backtrace_qsort@@Base>
   21a60:	b	21a20 <__asan_backtrace_qsort@@Base+0xb8>
   21a64:	ldp	x19, x20, [sp, #16]
   21a68:	ldp	x21, x22, [sp, #32]
   21a6c:	ldp	x23, x24, [sp, #48]
   21a70:	ldr	x25, [sp, #64]
   21a74:	ldp	x29, x30, [sp], #80
   21a78:	ret

0000000000021a7c <__asan_backtrace_create_state@@Base>:
   21a7c:	stp	x29, x30, [sp, #-144]!
   21a80:	mov	x29, sp
   21a84:	stp	x19, x20, [sp, #16]
   21a88:	add	x20, sp, #0x48
   21a8c:	mov	x19, x2
   21a90:	mov	x2, #0x48                  	// #72
   21a94:	stp	x21, x22, [sp, #32]
   21a98:	mov	w22, w1
   21a9c:	mov	x21, x3
   21aa0:	mov	w1, #0x0                   	// #0
   21aa4:	str	x23, [sp, #48]
   21aa8:	mov	x23, x0
   21aac:	mov	x0, x20
   21ab0:	bl	65f0 <__asan_internal_memset@plt>
   21ab4:	mov	x2, x19
   21ab8:	mov	x3, x21
   21abc:	mov	x0, x20
   21ac0:	mov	x1, #0x48                  	// #72
   21ac4:	str	x23, [sp, #72]
   21ac8:	str	w22, [sp, #80]
   21acc:	bl	6670 <__asan_backtrace_alloc@plt>
   21ad0:	mov	x19, x0
   21ad4:	cbz	x0, 21ae4 <__asan_backtrace_create_state@@Base+0x68>
   21ad8:	mov	x1, x20
   21adc:	mov	x2, #0x48                  	// #72
   21ae0:	bl	6450 <memcpy@plt>
   21ae4:	mov	x0, x19
   21ae8:	ldp	x19, x20, [sp, #16]
   21aec:	ldp	x21, x22, [sp, #32]
   21af0:	ldr	x23, [sp, #48]
   21af4:	ldp	x29, x30, [sp], #144
   21af8:	ret
   21afc:	sub	w0, w0, #0x1c
   21b00:	cmp	w0, #0x34
   21b04:	b.hi	21b24 <__asan_backtrace_create_state@@Base+0xa8>  // b.pmore
   21b08:	mov	x1, #0x1                   	// #1
   21b0c:	lsl	x0, x1, x0
   21b10:	mov	x1, #0x1f                  	// #31
   21b14:	movk	x1, #0x1a, lsl #48
   21b18:	tst	x0, x1
   21b1c:	cset	w0, ne  // ne = any
   21b20:	ret
   21b24:	mov	w0, #0x0                   	// #0
   21b28:	b	21b20 <__asan_backtrace_create_state@@Base+0xa4>
   21b2c:	mov	x1, x0
   21b30:	ldp	w2, w0, [x0, #40]
   21b34:	cmp	w2, w0
   21b38:	b.ge	21b58 <__asan_backtrace_create_state@@Base+0xdc>  // b.tcont
   21b3c:	ldr	x3, [x1, #32]
   21b40:	mov	w0, #0x18                  	// #24
   21b44:	smaddl	x0, w2, w0, x3
   21b48:	add	w2, w2, #0x1
   21b4c:	str	wzr, [x0, #4]
   21b50:	str	w2, [x1, #40]
   21b54:	ret
   21b58:	mov	x0, #0x0                   	// #0
   21b5c:	b	21b54 <__asan_backtrace_create_state@@Base+0xd8>
   21b60:	mov	x5, x2
   21b64:	sub	w2, w1, #0x1
   21b68:	cmp	w2, #0x4f
   21b6c:	b.hi	21b9c <__asan_backtrace_create_state@@Base+0x120>  // b.pmore
   21b70:	mov	w6, w1
   21b74:	mov	x4, x3
   21b78:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   21b7c:	add	x1, x1, #0x5c
   21b80:	ldrb	w1, [x1, w2, uxtw]
   21b84:	adr	x2, 21b90 <__asan_backtrace_create_state@@Base+0x114>
   21b88:	add	x1, x2, w1, sxtb #2
   21b8c:	br	x1
   21b90:	cmp	x5, #0x0
   21b94:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   21b98:	b.ne	21ba8 <__asan_backtrace_create_state@@Base+0x12c>  // b.any
   21b9c:	mov	x0, #0x0                   	// #0
   21ba0:	ret
   21ba4:	cbz	x5, 21b9c <__asan_backtrace_create_state@@Base+0x120>
   21ba8:	stp	x29, x30, [sp, #-16]!
   21bac:	mov	x29, sp
   21bb0:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   21bb4:	cbz	x0, 21bc0 <__asan_backtrace_create_state@@Base+0x144>
   21bb8:	str	w6, [x0]
   21bbc:	stp	x5, x4, [x0, #8]
   21bc0:	ldp	x29, x30, [sp], #16
   21bc4:	ret
   21bc8:	cbnz	x3, 21ba8 <__asan_backtrace_create_state@@Base+0x12c>
   21bcc:	b	21b9c <__asan_backtrace_create_state@@Base+0x120>
   21bd0:	mov	x4, x1
   21bd4:	stp	x29, x30, [sp, #-16]!
   21bd8:	mov	x29, sp
   21bdc:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   21be0:	cbz	x0, 21bf0 <__asan_backtrace_create_state@@Base+0x174>
   21be4:	mov	w1, #0x27                  	// #39
   21be8:	str	w1, [x0]
   21bec:	str	x4, [x0, #8]
   21bf0:	ldp	x29, x30, [sp], #16
   21bf4:	ret
   21bf8:	ldr	x4, [x0, #24]
   21bfc:	mov	x2, x1
   21c00:	mov	w3, #0x4f                  	// #79
   21c04:	ldrb	w1, [x4]
   21c08:	cmp	w1, #0x52
   21c0c:	ccmp	w1, w3, #0x4, ne  // ne = any
   21c10:	b.ne	21c48 <__asan_backtrace_create_state@@Base+0x1cc>  // b.any
   21c14:	ldr	w3, [x0, #72]
   21c18:	cmp	w1, #0x52
   21c1c:	b.ne	21c3c <__asan_backtrace_create_state@@Base+0x1c0>  // b.any
   21c20:	add	w3, w3, #0x2
   21c24:	mov	w1, #0x1f                  	// #31
   21c28:	add	x4, x4, #0x1
   21c2c:	str	x4, [x0, #24]
   21c30:	str	w3, [x0, #72]
   21c34:	mov	x3, #0x0                   	// #0
   21c38:	b	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   21c3c:	add	w3, w3, #0x3
   21c40:	mov	w1, #0x20                  	// #32
   21c44:	b	21c28 <__asan_backtrace_create_state@@Base+0x1ac>
   21c48:	mov	x0, x2
   21c4c:	ret
   21c50:	cbz	x1, 21c78 <__asan_backtrace_create_state@@Base+0x1fc>
   21c54:	ldp	w2, w3, [x0, #56]
   21c58:	cmp	w2, w3
   21c5c:	b.ge	21c78 <__asan_backtrace_create_state@@Base+0x1fc>  // b.tcont
   21c60:	ldr	x3, [x0, #48]
   21c64:	str	x1, [x3, w2, sxtw #3]
   21c68:	add	w2, w2, #0x1
   21c6c:	str	w2, [x0, #56]
   21c70:	mov	w0, #0x1                   	// #1
   21c74:	ret
   21c78:	mov	w0, #0x0                   	// #0
   21c7c:	b	21c74 <__asan_backtrace_create_state@@Base+0x1f8>
   21c80:	stp	x29, x30, [sp, #-32]!
   21c84:	mov	x29, sp
   21c88:	stp	x19, x20, [sp, #16]
   21c8c:	mov	x19, x1
   21c90:	mov	x20, x0
   21c94:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   21c98:	add	x1, x1, #0xac
   21c9c:	cbz	x19, 21d04 <__asan_backtrace_create_state@@Base+0x288>
   21ca0:	ldr	w0, [x19]
   21ca4:	sub	w0, w0, #0x1
   21ca8:	cmp	w0, #0x4f
   21cac:	b.hi	21d04 <__asan_backtrace_create_state@@Base+0x288>  // b.pmore
   21cb0:	ldrb	w0, [x1, w0, uxtw]
   21cb4:	adr	x2, 21cc0 <__asan_backtrace_create_state@@Base+0x244>
   21cb8:	add	x0, x2, w0, sxtb #2
   21cbc:	br	x0
   21cc0:	ldr	w0, [x20, #364]
   21cc4:	add	w0, w0, #0x1
   21cc8:	str	w0, [x20, #364]
   21ccc:	ldr	w0, [x20, #308]
   21cd0:	cmp	w0, #0x800
   21cd4:	b.gt	21d04 <__asan_backtrace_create_state@@Base+0x288>
   21cd8:	ldr	x1, [x19, #8]
   21cdc:	add	w0, w0, #0x1
   21ce0:	str	w0, [x20, #308]
   21ce4:	mov	x0, x20
   21ce8:	bl	21c80 <__asan_backtrace_create_state@@Base+0x204>
   21cec:	ldr	x1, [x19, #16]
   21cf0:	mov	x0, x20
   21cf4:	bl	21c80 <__asan_backtrace_create_state@@Base+0x204>
   21cf8:	ldr	w0, [x20, #308]
   21cfc:	sub	w0, w0, #0x1
   21d00:	str	w0, [x20, #308]
   21d04:	ldp	x19, x20, [sp, #16]
   21d08:	ldp	x29, x30, [sp], #32
   21d0c:	ret
   21d10:	ldr	x0, [x19, #8]
   21d14:	ldr	w0, [x0]
   21d18:	cmp	w0, #0x5
   21d1c:	b.ne	21ccc <__asan_backtrace_create_state@@Base+0x250>  // b.any
   21d20:	ldr	w0, [x20, #348]
   21d24:	add	w0, w0, #0x1
   21d28:	str	w0, [x20, #348]
   21d2c:	b	21ccc <__asan_backtrace_create_state@@Base+0x250>
   21d30:	ldr	x19, [x19, #16]
   21d34:	b	21c9c <__asan_backtrace_create_state@@Base+0x220>
   21d38:	ldr	x19, [x19, #8]
   21d3c:	b	21c9c <__asan_backtrace_create_state@@Base+0x220>
   21d40:	stp	x29, x30, [sp, #-32]!
   21d44:	mov	x29, sp
   21d48:	ldr	x1, [x0, #256]
   21d4c:	str	x19, [sp, #16]
   21d50:	mov	x19, x0
   21d54:	strb	wzr, [x0, x1]
   21d58:	ldp	x3, x2, [x0, #272]
   21d5c:	blr	x3
   21d60:	str	xzr, [x19, #256]
   21d64:	ldr	x0, [x19, #320]
   21d68:	add	x0, x0, #0x1
   21d6c:	str	x0, [x19, #320]
   21d70:	ldr	x19, [sp, #16]
   21d74:	ldp	x29, x30, [sp], #32
   21d78:	ret
   21d7c:	stp	x29, x30, [sp, #-32]!
   21d80:	mov	x29, sp
   21d84:	stp	x19, x20, [sp, #16]
   21d88:	and	w20, w1, #0xff
   21d8c:	mov	x19, x0
   21d90:	ldr	x1, [x0, #256]
   21d94:	cmp	x1, #0xff
   21d98:	b.ne	21da0 <__asan_backtrace_create_state@@Base+0x324>  // b.any
   21d9c:	bl	21d40 <__asan_backtrace_create_state@@Base+0x2c4>
   21da0:	ldr	x0, [x19, #256]
   21da4:	add	x1, x0, #0x1
   21da8:	str	x1, [x19, #256]
   21dac:	strb	w20, [x19, x0]
   21db0:	strb	w20, [x19, #264]
   21db4:	ldp	x19, x20, [sp, #16]
   21db8:	ldp	x29, x30, [sp], #32
   21dbc:	ret
   21dc0:	stp	x29, x30, [sp, #-48]!
   21dc4:	mov	x29, sp
   21dc8:	stp	x19, x20, [sp, #16]
   21dcc:	mov	x19, x1
   21dd0:	add	x20, x1, x2
   21dd4:	str	x21, [sp, #32]
   21dd8:	mov	x21, x0
   21ddc:	cmp	x19, x20
   21de0:	b.ne	21df4 <__asan_backtrace_create_state@@Base+0x378>  // b.any
   21de4:	ldp	x19, x20, [sp, #16]
   21de8:	ldr	x21, [sp, #32]
   21dec:	ldp	x29, x30, [sp], #48
   21df0:	ret
   21df4:	ldrb	w1, [x19], #1
   21df8:	mov	x0, x21
   21dfc:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   21e00:	b	21ddc <__asan_backtrace_create_state@@Base+0x360>
   21e04:	mov	x1, x0
   21e08:	mov	w0, #0x0                   	// #0
   21e0c:	cbz	x1, 21e24 <__asan_backtrace_create_state@@Base+0x3a8>
   21e10:	ldr	w2, [x1]
   21e14:	cmp	w2, #0x2f
   21e18:	b.ne	21e24 <__asan_backtrace_create_state@@Base+0x3a8>  // b.any
   21e1c:	ldr	x2, [x1, #8]
   21e20:	cbnz	x2, 21e28 <__asan_backtrace_create_state@@Base+0x3ac>
   21e24:	ret
   21e28:	add	w0, w0, #0x1
   21e2c:	ldr	x1, [x1, #16]
   21e30:	b	21e0c <__asan_backtrace_create_state@@Base+0x390>
   21e34:	stp	x29, x30, [sp, #-32]!
   21e38:	mov	x29, sp
   21e3c:	stp	x19, x20, [sp, #16]
   21e40:	mov	x20, x0
   21e44:	mov	x19, x1
   21e48:	mov	x0, x1
   21e4c:	bl	6570 <__asan_internal_strlen@plt>
   21e50:	mov	x1, x19
   21e54:	mov	x2, x0
   21e58:	mov	x0, x20
   21e5c:	ldp	x19, x20, [sp, #16]
   21e60:	ldp	x29, x30, [sp], #32
   21e64:	b	21dc0 <__asan_backtrace_create_state@@Base+0x344>
   21e68:	stp	x29, x30, [sp, #-64]!
   21e6c:	mov	w2, w1
   21e70:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   21e74:	mov	x29, sp
   21e78:	stp	x19, x20, [sp, #16]
   21e7c:	add	x19, sp, #0x20
   21e80:	mov	x20, x0
   21e84:	add	x1, x1, #0xd30
   21e88:	mov	x0, x19
   21e8c:	bl	66b0 <sprintf@plt>
   21e90:	mov	x1, x19
   21e94:	mov	x0, x20
   21e98:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   21e9c:	ldp	x19, x20, [sp, #16]
   21ea0:	ldp	x29, x30, [sp], #64
   21ea4:	ret
   21ea8:	mov	x1, x0
   21eac:	ldr	x0, [x0]
   21eb0:	ldrb	w3, [x0]
   21eb4:	cmp	w3, #0x6e
   21eb8:	b.ne	21ef4 <__asan_backtrace_create_state@@Base+0x478>  // b.any
   21ebc:	add	x2, x0, #0x1
   21ec0:	str	x2, [x1]
   21ec4:	mov	w5, #0x1                   	// #1
   21ec8:	ldrb	w3, [x0, #1]
   21ecc:	mov	w0, #0x0                   	// #0
   21ed0:	mov	w6, #0x7fffffff            	// #2147483647
   21ed4:	mov	w4, #0xa                   	// #10
   21ed8:	sub	w2, w3, #0x30
   21edc:	and	w7, w2, #0xff
   21ee0:	cmp	w7, #0x9
   21ee4:	b.ls	21efc <__asan_backtrace_create_state@@Base+0x480>  // b.plast
   21ee8:	cbz	w5, 21ef0 <__asan_backtrace_create_state@@Base+0x474>
   21eec:	neg	w0, w0
   21ef0:	ret
   21ef4:	mov	w5, #0x0                   	// #0
   21ef8:	b	21ecc <__asan_backtrace_create_state@@Base+0x450>
   21efc:	sub	w2, w6, w2
   21f00:	udiv	w2, w2, w4
   21f04:	cmp	w2, w0
   21f08:	b.lt	21f28 <__asan_backtrace_create_state@@Base+0x4ac>  // b.tstop
   21f0c:	ldr	x2, [x1]
   21f10:	madd	w0, w0, w4, w3
   21f14:	add	x3, x2, #0x1
   21f18:	str	x3, [x1]
   21f1c:	sub	w0, w0, #0x30
   21f20:	ldrb	w3, [x2, #1]
   21f24:	b	21ed8 <__asan_backtrace_create_state@@Base+0x45c>
   21f28:	mov	w0, #0xffffffff            	// #-1
   21f2c:	b	21ef0 <__asan_backtrace_create_state@@Base+0x474>
   21f30:	mov	x4, x0
   21f34:	stp	x29, x30, [sp, #-16]!
   21f38:	mov	x29, sp
   21f3c:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   21f40:	mov	x8, x0
   21f44:	cbz	x0, 21f60 <__asan_backtrace_create_state@@Base+0x4e4>
   21f48:	mov	w0, #0x42                  	// #66
   21f4c:	str	w0, [x8]
   21f50:	add	x0, x4, #0x18
   21f54:	bl	21ea8 <__asan_backtrace_create_state@@Base+0x42c>
   21f58:	sxtw	x0, w0
   21f5c:	str	x0, [x8, #8]
   21f60:	mov	x0, x8
   21f64:	ldp	x29, x30, [sp], #16
   21f68:	ret
   21f6c:	mov	x8, x0
   21f70:	ldr	x0, [x0, #24]
   21f74:	ldrb	w0, [x0]
   21f78:	cmp	w0, #0x5f
   21f7c:	b.eq	21fd0 <__asan_backtrace_create_state@@Base+0x554>  // b.none
   21f80:	cmp	w0, #0x6e
   21f84:	b.ne	21f9c <__asan_backtrace_create_state@@Base+0x520>  // b.any
   21f88:	mov	w0, #0xffffffff            	// #-1
   21f8c:	ret
   21f90:	mov	w0, #0xffffffff            	// #-1
   21f94:	ldp	x29, x30, [sp], #16
   21f98:	ret
   21f9c:	stp	x29, x30, [sp, #-16]!
   21fa0:	add	x0, x8, #0x18
   21fa4:	mov	x29, sp
   21fa8:	bl	21ea8 <__asan_backtrace_create_state@@Base+0x42c>
   21fac:	adds	w0, w0, #0x1
   21fb0:	b.mi	21f90 <__asan_backtrace_create_state@@Base+0x514>  // b.first
   21fb4:	ldr	x1, [x8, #24]
   21fb8:	ldrb	w2, [x1]
   21fbc:	cmp	w2, #0x5f
   21fc0:	b.ne	21f90 <__asan_backtrace_create_state@@Base+0x514>  // b.any
   21fc4:	add	x1, x1, #0x1
   21fc8:	str	x1, [x8, #24]
   21fcc:	b	21f94 <__asan_backtrace_create_state@@Base+0x518>
   21fd0:	ldr	x1, [x8, #24]
   21fd4:	mov	w0, #0x0                   	// #0
   21fd8:	ldrb	w2, [x1]
   21fdc:	cmp	w2, #0x5f
   21fe0:	b.ne	21f88 <__asan_backtrace_create_state@@Base+0x50c>  // b.any
   21fe4:	add	x1, x1, #0x1
   21fe8:	str	x1, [x8, #24]
   21fec:	ret
   21ff0:	ldr	x1, [x0, #24]
   21ff4:	ldrb	w2, [x1]
   21ff8:	cmp	w2, #0x54
   21ffc:	b.eq	22014 <__asan_backtrace_create_state@@Base+0x598>  // b.none
   22000:	mov	x0, #0x0                   	// #0
   22004:	ret
   22008:	mov	x0, #0x0                   	// #0
   2200c:	ldp	x29, x30, [sp], #16
   22010:	ret
   22014:	stp	x29, x30, [sp, #-16]!
   22018:	add	x1, x1, #0x1
   2201c:	mov	x9, x0
   22020:	mov	x29, sp
   22024:	str	x1, [x0, #24]
   22028:	bl	21f6c <__asan_backtrace_create_state@@Base+0x4f0>
   2202c:	sxtw	x4, w0
   22030:	tbnz	w4, #31, 22008 <__asan_backtrace_create_state@@Base+0x58c>
   22034:	mov	x0, x9
   22038:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   2203c:	cbz	x0, 2200c <__asan_backtrace_create_state@@Base+0x590>
   22040:	mov	w1, #0x5                   	// #5
   22044:	str	w1, [x0]
   22048:	str	x4, [x0, #8]
   2204c:	b	2200c <__asan_backtrace_create_state@@Base+0x590>
   22050:	mov	x8, x0
   22054:	cbnz	w1, 22084 <__asan_backtrace_create_state@@Base+0x608>
   22058:	ldr	x0, [x0, #24]
   2205c:	ldrb	w1, [x0]
   22060:	cbnz	w1, 22078 <__asan_backtrace_create_state@@Base+0x5fc>
   22064:	mov	w0, #0x0                   	// #0
   22068:	ret
   2206c:	mov	w0, #0x0                   	// #0
   22070:	ldp	x29, x30, [sp], #16
   22074:	ret
   22078:	add	x1, x0, #0x1
   2207c:	str	x1, [x8, #24]
   22080:	ldrb	w1, [x0]
   22084:	stp	x29, x30, [sp, #-16]!
   22088:	cmp	w1, #0x68
   2208c:	mov	x29, sp
   22090:	b.ne	220bc <__asan_backtrace_create_state@@Base+0x640>  // b.any
   22094:	add	x0, x8, #0x18
   22098:	bl	21ea8 <__asan_backtrace_create_state@@Base+0x42c>
   2209c:	ldr	x0, [x8, #24]
   220a0:	ldrb	w1, [x0]
   220a4:	cmp	w1, #0x5f
   220a8:	b.ne	2206c <__asan_backtrace_create_state@@Base+0x5f0>  // b.any
   220ac:	add	x0, x0, #0x1
   220b0:	str	x0, [x8, #24]
   220b4:	mov	w0, #0x1                   	// #1
   220b8:	b	22070 <__asan_backtrace_create_state@@Base+0x5f4>
   220bc:	cmp	w1, #0x76
   220c0:	b.ne	2206c <__asan_backtrace_create_state@@Base+0x5f0>  // b.any
   220c4:	add	x9, x8, #0x18
   220c8:	mov	x0, x9
   220cc:	bl	21ea8 <__asan_backtrace_create_state@@Base+0x42c>
   220d0:	ldr	x0, [x8, #24]
   220d4:	ldrb	w1, [x0]
   220d8:	cmp	w1, #0x5f
   220dc:	b.ne	2206c <__asan_backtrace_create_state@@Base+0x5f0>  // b.any
   220e0:	add	x0, x0, #0x1
   220e4:	str	x0, [x8, #24]
   220e8:	mov	x0, x9
   220ec:	b	22098 <__asan_backtrace_create_state@@Base+0x61c>
   220f0:	ldrb	w2, [x0]
   220f4:	sub	w1, w2, #0x4b
   220f8:	and	w1, w1, #0xff
   220fc:	cmp	w1, #0x27
   22100:	b.ls	22114 <__asan_backtrace_create_state@@Base+0x698>  // b.plast
   22104:	cmp	w2, #0x44
   22108:	b.eq	22128 <__asan_backtrace_create_state@@Base+0x6ac>  // b.none
   2210c:	mov	w0, #0x0                   	// #0
   22110:	ret
   22114:	mov	x0, #0x801                 	// #2049
   22118:	movk	x0, #0x80, lsl #32
   2211c:	lsr	x0, x0, x1
   22120:	and	w0, w0, #0x1
   22124:	b	22110 <__asan_backtrace_create_state@@Base+0x694>
   22128:	ldrb	w0, [x0, #1]
   2212c:	and	w1, w0, #0xffffffdf
   22130:	sub	w0, w0, #0x77
   22134:	and	w0, w0, #0xff
   22138:	cmp	w1, #0x4f
   2213c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   22140:	cset	w0, ls  // ls = plast
   22144:	b	22110 <__asan_backtrace_create_state@@Base+0x694>
   22148:	ldr	x0, [x0]
   2214c:	ldrb	w1, [x0, #1]
   22150:	cmp	w1, #0x63
   22154:	b.ne	22180 <__asan_backtrace_create_state@@Base+0x704>  // b.any
   22158:	ldrb	w0, [x0]
   2215c:	sub	w1, w0, #0x63
   22160:	and	w1, w1, #0xff
   22164:	cmp	w1, #0x1
   22168:	b.ls	22188 <__asan_backtrace_create_state@@Base+0x70c>  // b.plast
   2216c:	sub	w0, w0, #0x72
   22170:	and	w0, w0, #0xff
   22174:	cmp	w0, #0x1
   22178:	cset	w0, ls  // ls = plast
   2217c:	ret
   22180:	mov	w0, #0x0                   	// #0
   22184:	b	2217c <__asan_backtrace_create_state@@Base+0x700>
   22188:	mov	w0, #0x1                   	// #1
   2218c:	b	2217c <__asan_backtrace_create_state@@Base+0x700>
   22190:	mov	x8, x0
   22194:	ldr	x0, [x0, #24]
   22198:	ldrb	w1, [x0]
   2219c:	cmp	w1, #0x5f
   221a0:	b.eq	221ac <__asan_backtrace_create_state@@Base+0x730>  // b.none
   221a4:	mov	w0, #0x1                   	// #1
   221a8:	ret
   221ac:	stp	x29, x30, [sp, #-16]!
   221b0:	add	x1, x0, #0x1
   221b4:	mov	x29, sp
   221b8:	str	x1, [x8, #24]
   221bc:	ldrb	w1, [x0, #1]
   221c0:	cmp	w1, #0x5f
   221c4:	b.ne	22210 <__asan_backtrace_create_state@@Base+0x794>  // b.any
   221c8:	add	x0, x0, #0x2
   221cc:	mov	w9, #0x2                   	// #2
   221d0:	str	x0, [x8, #24]
   221d4:	add	x0, x8, #0x18
   221d8:	bl	21ea8 <__asan_backtrace_create_state@@Base+0x42c>
   221dc:	tbnz	w0, #31, 22218 <__asan_backtrace_create_state@@Base+0x79c>
   221e0:	cmp	w9, #0x1
   221e4:	ccmp	w0, #0x9, #0x4, gt
   221e8:	b.le	22204 <__asan_backtrace_create_state@@Base+0x788>
   221ec:	ldr	x0, [x8, #24]
   221f0:	ldrb	w1, [x0]
   221f4:	cmp	w1, #0x5f
   221f8:	b.ne	22218 <__asan_backtrace_create_state@@Base+0x79c>  // b.any
   221fc:	add	x0, x0, #0x1
   22200:	str	x0, [x8, #24]
   22204:	mov	w0, #0x1                   	// #1
   22208:	ldp	x29, x30, [sp], #16
   2220c:	ret
   22210:	mov	w9, #0x1                   	// #1
   22214:	b	221d4 <__asan_backtrace_create_state@@Base+0x758>
   22218:	mov	w0, #0x0                   	// #0
   2221c:	b	22208 <__asan_backtrace_create_state@@Base+0x78c>
   22220:	cbnz	x0, 22228 <__asan_backtrace_create_state@@Base+0x7ac>
   22224:	ret
   22228:	ldr	w2, [x0]
   2222c:	cmp	w2, #0x2f
   22230:	b.ne	22254 <__asan_backtrace_create_state@@Base+0x7d8>  // b.any
   22234:	cmp	w1, #0x0
   22238:	b.le	22248 <__asan_backtrace_create_state@@Base+0x7cc>
   2223c:	sub	w1, w1, #0x1
   22240:	ldr	x0, [x0, #16]
   22244:	b	22220 <__asan_backtrace_create_state@@Base+0x7a4>
   22248:	b.ne	22254 <__asan_backtrace_create_state@@Base+0x7d8>  // b.any
   2224c:	ldr	x0, [x0, #8]
   22250:	b	22224 <__asan_backtrace_create_state@@Base+0x7a8>
   22254:	mov	x0, #0x0                   	// #0
   22258:	b	22224 <__asan_backtrace_create_state@@Base+0x7a8>
   2225c:	stp	x29, x30, [sp, #-32]!
   22260:	mov	x29, sp
   22264:	stp	x19, x20, [sp, #16]
   22268:	mov	x19, x0
   2226c:	ldr	w0, [x0, #24]
   22270:	cbnz	w0, 222b4 <__asan_backtrace_create_state@@Base+0x838>
   22274:	ldr	x20, [x19, #16]
   22278:	mov	x0, #0x2                   	// #2
   2227c:	cmp	x20, #0x0
   22280:	csel	x20, x20, x0, ne  // ne = any
   22284:	cmp	x20, x1
   22288:	b.cc	222c0 <__asan_backtrace_create_state@@Base+0x844>  // b.lo, b.ul, b.last
   2228c:	ldr	x0, [x19]
   22290:	mov	x1, x20
   22294:	bl	6650 <realloc@plt>
   22298:	cbnz	x0, 222c8 <__asan_backtrace_create_state@@Base+0x84c>
   2229c:	ldr	x0, [x19]
   222a0:	bl	6600 <free@plt>
   222a4:	stp	xzr, xzr, [x19]
   222a8:	mov	w0, #0x1                   	// #1
   222ac:	str	xzr, [x19, #16]
   222b0:	str	w0, [x19, #24]
   222b4:	ldp	x19, x20, [sp, #16]
   222b8:	ldp	x29, x30, [sp], #32
   222bc:	ret
   222c0:	lsl	x20, x20, #1
   222c4:	b	22284 <__asan_backtrace_create_state@@Base+0x808>
   222c8:	str	x0, [x19]
   222cc:	str	x20, [x19, #16]
   222d0:	b	222b4 <__asan_backtrace_create_state@@Base+0x838>
   222d4:	stp	x29, x30, [sp, #-48]!
   222d8:	mov	x29, sp
   222dc:	str	x21, [sp, #32]
   222e0:	mov	x21, x0
   222e4:	ldr	x0, [x2, #8]
   222e8:	stp	x19, x20, [sp, #16]
   222ec:	mov	x20, x1
   222f0:	add	x1, x1, #0x1
   222f4:	mov	x19, x2
   222f8:	add	x1, x1, x0
   222fc:	ldr	x0, [x2, #16]
   22300:	cmp	x1, x0
   22304:	b.ls	22310 <__asan_backtrace_create_state@@Base+0x894>  // b.plast
   22308:	mov	x0, x2
   2230c:	bl	2225c <__asan_backtrace_create_state@@Base+0x7e0>
   22310:	ldr	w0, [x19, #24]
   22314:	cbnz	w0, 22344 <__asan_backtrace_create_state@@Base+0x8c8>
   22318:	ldp	x3, x0, [x19]
   2231c:	mov	x2, x20
   22320:	mov	x1, x21
   22324:	add	x0, x3, x0
   22328:	bl	6560 <__asan_internal_memcpy@plt>
   2232c:	ldp	x0, x1, [x19]
   22330:	add	x0, x0, x20
   22334:	strb	wzr, [x0, x1]
   22338:	ldr	x1, [x19, #8]
   2233c:	add	x20, x1, x20
   22340:	str	x20, [x19, #8]
   22344:	ldp	x19, x20, [sp, #16]
   22348:	ldr	x21, [sp, #32]
   2234c:	ldp	x29, x30, [sp], #48
   22350:	ret
   22354:	mov	x2, x0
   22358:	ldr	x0, [x0, #288]
   2235c:	cbnz	x0, 2236c <__asan_backtrace_create_state@@Base+0x8f0>
   22360:	mov	w1, #0x1                   	// #1
   22364:	str	w1, [x2, #304]
   22368:	ret
   2236c:	ldr	x1, [x1]
   22370:	ldr	x0, [x0, #8]
   22374:	ldr	x0, [x0, #16]
   22378:	tbnz	w1, #31, 22368 <__asan_backtrace_create_state@@Base+0x8ec>
   2237c:	b	22220 <__asan_backtrace_create_state@@Base+0x7a4>
   22380:	stp	x29, x30, [sp, #-64]!
   22384:	mov	x29, sp
   22388:	str	x23, [sp, #48]
   2238c:	mov	x23, #0x8001                	// #32769
   22390:	movk	x23, #0x410, lsl #16
   22394:	stp	x19, x20, [sp, #16]
   22398:	movk	x23, #0xc600, lsl #32
   2239c:	mov	x20, x0
   223a0:	mov	x19, x1
   223a4:	stp	x21, x22, [sp, #32]
   223a8:	adrp	x21, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   223ac:	add	x21, x21, #0xfc
   223b0:	mov	x22, #0x1                   	// #1
   223b4:	movk	x23, #0x19, lsl #48
   223b8:	cbz	x19, 22440 <__asan_backtrace_create_state@@Base+0x9c4>
   223bc:	ldr	w1, [x19]
   223c0:	cmp	w1, #0x8
   223c4:	b.ls	22400 <__asan_backtrace_create_state@@Base+0x984>  // b.plast
   223c8:	sub	w1, w1, #0x18
   223cc:	cmp	w1, #0x34
   223d0:	b.ls	223e8 <__asan_backtrace_create_state@@Base+0x96c>  // b.plast
   223d4:	ldr	x1, [x19, #8]
   223d8:	mov	x0, x20
   223dc:	bl	22380 <__asan_backtrace_create_state@@Base+0x904>
   223e0:	cbz	x0, 223f8 <__asan_backtrace_create_state@@Base+0x97c>
   223e4:	b	2242c <__asan_backtrace_create_state@@Base+0x9b0>
   223e8:	lsl	x1, x22, x1
   223ec:	tst	x1, x23
   223f0:	b.ne	22440 <__asan_backtrace_create_state@@Base+0x9c4>  // b.any
   223f4:	tbz	w1, #27, 223d4 <__asan_backtrace_create_state@@Base+0x958>
   223f8:	ldr	x19, [x19, #16]
   223fc:	b	223b8 <__asan_backtrace_create_state@@Base+0x93c>
   22400:	ldrb	w0, [x21, w1, uxtw]
   22404:	adr	x1, 22410 <__asan_backtrace_create_state@@Base+0x994>
   22408:	add	x0, x1, w0, sxtb #2
   2240c:	br	x0
   22410:	add	x1, x19, #0x8
   22414:	mov	x0, x20
   22418:	bl	22354 <__asan_backtrace_create_state@@Base+0x8d8>
   2241c:	cbz	x0, 22440 <__asan_backtrace_create_state@@Base+0x9c4>
   22420:	ldr	w1, [x0]
   22424:	cmp	w1, #0x2f
   22428:	b.ne	22440 <__asan_backtrace_create_state@@Base+0x9c4>  // b.any
   2242c:	ldp	x19, x20, [sp, #16]
   22430:	ldp	x21, x22, [sp, #32]
   22434:	ldr	x23, [sp, #48]
   22438:	ldp	x29, x30, [sp], #64
   2243c:	ret
   22440:	mov	x0, #0x0                   	// #0
   22444:	b	2242c <__asan_backtrace_create_state@@Base+0x9b0>
   22448:	stp	x29, x30, [sp, #-224]!
   2244c:	mov	x29, sp
   22450:	stp	x19, x20, [sp, #16]
   22454:	mov	x19, x0
   22458:	stp	x21, x22, [sp, #32]
   2245c:	stp	x23, x24, [sp, #48]
   22460:	str	x25, [sp, #64]
   22464:	cbnz	x2, 22488 <__asan_backtrace_create_state@@Base+0xa0c>
   22468:	mov	w0, #0x1                   	// #1
   2246c:	str	w0, [x19, #304]
   22470:	ldp	x19, x20, [sp, #16]
   22474:	ldp	x21, x22, [sp, #32]
   22478:	ldp	x23, x24, [sp, #48]
   2247c:	ldr	x25, [sp, #64]
   22480:	ldp	x29, x30, [sp], #224
   22484:	ret
   22488:	ldr	w22, [x0, #304]
   2248c:	cbnz	w22, 22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22490:	ldr	w0, [x2]
   22494:	mov	x20, x2
   22498:	cmp	w0, #0x50
   2249c:	b.hi	23608 <__asan_backtrace_create_state@@Base+0x1b8c>  // b.pmore
   224a0:	mov	w21, w1
   224a4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   224a8:	add	x1, x1, #0x108
   224ac:	ldrh	w1, [x1, w0, uxtw #1]
   224b0:	adr	x2, 224bc <__asan_backtrace_create_state@@Base+0xa40>
   224b4:	add	x1, x2, w1, sxth #2
   224b8:	br	x1
   224bc:	ldrsw	x2, [x20, #16]
   224c0:	ldr	x20, [x20, #8]
   224c4:	tbnz	w21, #2, 224d8 <__asan_backtrace_create_state@@Base+0xa5c>
   224c8:	mov	x1, x20
   224cc:	mov	x0, x19
   224d0:	bl	21dc0 <__asan_backtrace_create_state@@Base+0x344>
   224d4:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   224d8:	add	x21, x20, x2
   224dc:	cmp	x21, x20
   224e0:	b.ls	22470 <__asan_backtrace_create_state@@Base+0x9f4>  // b.plast
   224e4:	sub	x0, x21, x20
   224e8:	ldrb	w3, [x20]
   224ec:	cmp	x0, #0x3
   224f0:	b.le	22524 <__asan_backtrace_create_state@@Base+0xaa8>
   224f4:	cmp	w3, #0x5f
   224f8:	b.ne	22524 <__asan_backtrace_create_state@@Base+0xaa8>  // b.any
   224fc:	ldrb	w0, [x20, #1]
   22500:	cmp	w0, #0x5f
   22504:	b.ne	22524 <__asan_backtrace_create_state@@Base+0xaa8>  // b.any
   22508:	ldrb	w0, [x20, #2]
   2250c:	cmp	w0, #0x55
   22510:	b.ne	22524 <__asan_backtrace_create_state@@Base+0xaa8>  // b.any
   22514:	add	x22, x20, #0x3
   22518:	mov	x1, #0x0                   	// #0
   2251c:	cmp	x21, x22
   22520:	b.hi	22538 <__asan_backtrace_create_state@@Base+0xabc>  // b.pmore
   22524:	mov	w1, w3
   22528:	mov	x0, x19
   2252c:	mov	x22, x20
   22530:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   22534:	b	225a0 <__asan_backtrace_create_state@@Base+0xb24>
   22538:	ldrb	w2, [x22]
   2253c:	sub	w0, w2, #0x30
   22540:	and	w4, w0, #0xff
   22544:	cmp	w4, #0x9
   22548:	b.ls	22560 <__asan_backtrace_create_state@@Base+0xae4>  // b.plast
   2254c:	sub	w0, w2, #0x41
   22550:	and	w0, w0, #0xff
   22554:	cmp	w0, #0x5
   22558:	b.hi	22570 <__asan_backtrace_create_state@@Base+0xaf4>  // b.pmore
   2255c:	sub	w0, w2, #0x37
   22560:	sxtw	x0, w0
   22564:	add	x22, x22, #0x1
   22568:	add	x1, x0, x1, lsl #4
   2256c:	b	2251c <__asan_backtrace_create_state@@Base+0xaa0>
   22570:	sub	w0, w2, #0x61
   22574:	and	w0, w0, #0xff
   22578:	cmp	w0, #0x5
   2257c:	b.hi	22588 <__asan_backtrace_create_state@@Base+0xb0c>  // b.pmore
   22580:	sub	w0, w2, #0x57
   22584:	b	22560 <__asan_backtrace_create_state@@Base+0xae4>
   22588:	cmp	w2, #0x5f
   2258c:	b.ne	22524 <__asan_backtrace_create_state@@Base+0xaa8>  // b.any
   22590:	cmp	x1, #0xff
   22594:	b.hi	22524 <__asan_backtrace_create_state@@Base+0xaa8>  // b.pmore
   22598:	mov	x0, x19
   2259c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   225a0:	add	x20, x22, #0x1
   225a4:	b	224dc <__asan_backtrace_create_state@@Base+0xa60>
   225a8:	ldr	x2, [x20, #8]
   225ac:	mov	w1, w21
   225b0:	mov	x0, x19
   225b4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   225b8:	mov	x0, x19
   225bc:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   225c0:	add	x1, x1, #0x30c
   225c4:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   225c8:	ldr	x2, [x20, #16]
   225cc:	mov	w1, w21
   225d0:	mov	x0, x19
   225d4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   225d8:	mov	x0, x19
   225dc:	mov	w1, #0x5d                  	// #93
   225e0:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   225e4:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   225e8:	ldr	x2, [x20, #8]
   225ec:	mov	w1, w21
   225f0:	mov	x0, x19
   225f4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   225f8:	tbnz	w21, #2, 22664 <__asan_backtrace_create_state@@Base+0xbe8>
   225fc:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22600:	mov	x0, x19
   22604:	add	x1, x1, #0x321
   22608:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   2260c:	ldr	x20, [x20, #16]
   22610:	ldr	w0, [x20]
   22614:	cmp	w0, #0x47
   22618:	b.ne	22650 <__asan_backtrace_create_state@@Base+0xbd4>  // b.any
   2261c:	mov	x0, x19
   22620:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22624:	add	x1, x1, #0x312
   22628:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   2262c:	ldr	w1, [x20, #16]
   22630:	mov	x0, x19
   22634:	add	w1, w1, #0x1
   22638:	bl	21e68 <__asan_backtrace_create_state@@Base+0x3ec>
   2263c:	mov	x0, x19
   22640:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22644:	add	x1, x1, #0x320
   22648:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   2264c:	ldr	x20, [x20, #8]
   22650:	mov	x2, x20
   22654:	mov	w1, w21
   22658:	mov	x0, x19
   2265c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22660:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22664:	mov	x0, x19
   22668:	mov	w1, #0x2e                  	// #46
   2266c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   22670:	b	2260c <__asan_backtrace_create_state@@Base+0xb90>
   22674:	add	x3, sp, #0x60
   22678:	mov	w23, #0x0                   	// #0
   2267c:	mov	x2, x3
   22680:	ldr	x22, [x20, #8]
   22684:	ldr	x24, [x19, #296]
   22688:	str	xzr, [x19, #296]
   2268c:	cbz	x22, 22698 <__asan_backtrace_create_state@@Base+0xc1c>
   22690:	cmp	w23, #0x4
   22694:	b.ne	226a4 <__asan_backtrace_create_state@@Base+0xc28>  // b.any
   22698:	mov	w0, #0x1                   	// #1
   2269c:	str	w0, [x19, #304]
   226a0:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   226a4:	str	wzr, [x3, #16]
   226a8:	add	w23, w23, #0x1
   226ac:	ldp	x4, x0, [x19, #288]
   226b0:	stp	x0, x22, [x3]
   226b4:	ldr	w5, [x22]
   226b8:	str	x4, [x3, #24]
   226bc:	str	x3, [x19, #296]
   226c0:	mov	w0, w5
   226c4:	bl	21afc <__asan_backtrace_create_state@@Base+0x80>
   226c8:	add	x3, x3, #0x20
   226cc:	cbz	w0, 23b60 <__asan_backtrace_create_state@@Base+0x20e4>
   226d0:	ldr	x22, [x22, #8]
   226d4:	b	2268c <__asan_backtrace_create_state@@Base+0xc10>
   226d8:	cmp	w23, #0x4
   226dc:	b.eq	22698 <__asan_backtrace_create_state@@Base+0xc1c>  // b.none
   226e0:	ldp	x0, x1, [x2, #-32]
   226e4:	stur	x22, [x2, #-24]
   226e8:	stp	x0, x1, [x2]
   226ec:	sub	x3, x2, #0x20
   226f0:	add	w23, w23, #0x1
   226f4:	ldp	x0, x1, [x2, #-16]
   226f8:	stur	wzr, [x2, #-16]
   226fc:	stp	x4, x3, [x2, #-8]
   22700:	stp	x0, x1, [x2, #16]
   22704:	ldr	x22, [x22, #8]
   22708:	str	x2, [x19, #296]
   2270c:	add	x2, x2, #0x20
   22710:	b	23b88 <__asan_backtrace_create_state@@Base+0x210c>
   22714:	ldr	x22, [x20, #8]
   22718:	ldr	x24, [x19, #296]
   2271c:	str	xzr, [x19, #296]
   22720:	ldr	x23, [x19, #368]
   22724:	str	x20, [x19, #368]
   22728:	tbz	w21, #2, 22784 <__asan_backtrace_create_state@@Base+0xd08>
   2272c:	ldr	w0, [x22]
   22730:	cbnz	w0, 22784 <__asan_backtrace_create_state@@Base+0xd08>
   22734:	ldr	w0, [x22, #16]
   22738:	cmp	w0, #0x6
   2273c:	b.ne	22784 <__asan_backtrace_create_state@@Base+0xd08>  // b.any
   22740:	ldr	x0, [x22, #8]
   22744:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22748:	mov	x2, #0x6                   	// #6
   2274c:	add	x1, x1, #0x324
   22750:	bl	6900 <__asan_internal_strncmp@plt>
   22754:	cbnz	w0, 22784 <__asan_backtrace_create_state@@Base+0xd08>
   22758:	ldr	x2, [x20, #16]
   2275c:	mov	w1, w21
   22760:	mov	x0, x19
   22764:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22768:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   2276c:	mov	x0, x19
   22770:	add	x1, x1, #0x8e8
   22774:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22778:	str	x24, [x19, #296]
   2277c:	str	x23, [x19, #368]
   22780:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22784:	mov	x0, x19
   22788:	mov	x2, x22
   2278c:	mov	w1, w21
   22790:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22794:	ldrb	w0, [x19, #264]
   22798:	cmp	w0, #0x3c
   2279c:	b.ne	227ac <__asan_backtrace_create_state@@Base+0xd30>  // b.any
   227a0:	mov	x0, x19
   227a4:	mov	w1, #0x20                  	// #32
   227a8:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   227ac:	mov	x0, x19
   227b0:	mov	w1, #0x3c                  	// #60
   227b4:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   227b8:	ldr	x2, [x20, #16]
   227bc:	mov	x0, x19
   227c0:	mov	w1, w21
   227c4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   227c8:	ldrb	w0, [x19, #264]
   227cc:	cmp	w0, #0x3e
   227d0:	b.ne	227e0 <__asan_backtrace_create_state@@Base+0xd64>  // b.any
   227d4:	mov	x0, x19
   227d8:	mov	w1, #0x20                  	// #32
   227dc:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   227e0:	mov	x0, x19
   227e4:	mov	w1, #0x3e                  	// #62
   227e8:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   227ec:	b	22778 <__asan_backtrace_create_state@@Base+0xcfc>
   227f0:	ldr	w0, [x19, #312]
   227f4:	cbz	w0, 22820 <__asan_backtrace_create_state@@Base+0xda4>
   227f8:	mov	x0, x19
   227fc:	mov	x2, #0x5                   	// #5
   22800:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22804:	add	x1, x1, #0x32b
   22808:	bl	21dc0 <__asan_backtrace_create_state@@Base+0x344>
   2280c:	ldr	x1, [x20, #8]
   22810:	mov	x0, x19
   22814:	add	w1, w1, #0x1
   22818:	bl	21e68 <__asan_backtrace_create_state@@Base+0x3ec>
   2281c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22820:	add	x1, x20, #0x8
   22824:	mov	x0, x19
   22828:	bl	22354 <__asan_backtrace_create_state@@Base+0x8d8>
   2282c:	mov	x2, x0
   22830:	cbz	x0, 22468 <__asan_backtrace_create_state@@Base+0x9ec>
   22834:	ldr	w1, [x0]
   22838:	cmp	w1, #0x2f
   2283c:	b.ne	22854 <__asan_backtrace_create_state@@Base+0xdd8>  // b.any
   22840:	ldr	w1, [x19, #316]
   22844:	tbnz	w1, #31, 22854 <__asan_backtrace_create_state@@Base+0xdd8>
   22848:	bl	22220 <__asan_backtrace_create_state@@Base+0x7a4>
   2284c:	mov	x2, x0
   22850:	cbz	x0, 22468 <__asan_backtrace_create_state@@Base+0x9ec>
   22854:	ldr	x20, [x19, #288]
   22858:	mov	w1, w21
   2285c:	ldr	x0, [x20]
   22860:	str	x0, [x19, #288]
   22864:	mov	x0, x19
   22868:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   2286c:	str	x20, [x19, #288]
   22870:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22874:	mov	x0, x19
   22878:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   2287c:	add	x1, x1, #0x331
   22880:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22884:	ldr	x2, [x20, #8]
   22888:	mov	w1, w21
   2288c:	mov	x0, x19
   22890:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22894:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22898:	ldr	x2, [x20, #16]
   2289c:	mov	w1, w21
   228a0:	mov	x0, x19
   228a4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   228a8:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   228ac:	mov	x0, x19
   228b0:	mov	w1, #0x7e                  	// #126
   228b4:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   228b8:	ldr	x2, [x20, #16]
   228bc:	mov	w1, w21
   228c0:	mov	x0, x19
   228c4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   228c8:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   228cc:	mov	x0, x19
   228d0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   228d4:	add	x1, x1, #0x366
   228d8:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   228dc:	ldr	x2, [x20, #8]
   228e0:	mov	w1, w21
   228e4:	mov	x0, x19
   228e8:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   228ec:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   228f0:	mov	x0, x19
   228f4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   228f8:	add	x1, x1, #0x350
   228fc:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22900:	ldr	x2, [x20, #8]
   22904:	mov	w1, w21
   22908:	mov	x0, x19
   2290c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22910:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22914:	mov	x0, x19
   22918:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   2291c:	add	x1, x1, #0x359
   22920:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22924:	ldr	x2, [x20, #8]
   22928:	mov	w1, w21
   2292c:	mov	x0, x19
   22930:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22934:	mov	x0, x19
   22938:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   2293c:	add	x1, x1, #0x372
   22940:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22944:	ldr	x2, [x20, #16]
   22948:	mov	w1, w21
   2294c:	mov	x0, x19
   22950:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22954:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22958:	mov	x0, x19
   2295c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22960:	add	x1, x1, #0x377
   22964:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22968:	ldr	x2, [x20, #8]
   2296c:	mov	w1, w21
   22970:	mov	x0, x19
   22974:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22978:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   2297c:	mov	x0, x19
   22980:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22984:	add	x1, x1, #0x385
   22988:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   2298c:	ldr	x2, [x20, #8]
   22990:	mov	w1, w21
   22994:	mov	x0, x19
   22998:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   2299c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   229a0:	mov	x0, x19
   229a4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   229a8:	add	x1, x1, #0x398
   229ac:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   229b0:	ldr	x2, [x20, #8]
   229b4:	mov	w1, w21
   229b8:	mov	x0, x19
   229bc:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   229c0:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   229c4:	mov	x0, x19
   229c8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   229cc:	add	x1, x1, #0x3a9
   229d0:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   229d4:	ldr	x2, [x20, #8]
   229d8:	mov	w1, w21
   229dc:	mov	x0, x19
   229e0:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   229e4:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   229e8:	mov	x0, x19
   229ec:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   229f0:	add	x1, x1, #0x3ad
   229f4:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   229f8:	ldr	x2, [x20, #8]
   229fc:	mov	w1, w21
   22a00:	mov	x0, x19
   22a04:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22a08:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22a0c:	mov	x0, x19
   22a10:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22a14:	add	x1, x1, #0x3bf
   22a18:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22a1c:	ldr	x2, [x20, #8]
   22a20:	mov	w1, w21
   22a24:	mov	x0, x19
   22a28:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22a2c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22a30:	mov	x0, x19
   22a34:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22a38:	add	x1, x1, #0x3da
   22a3c:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22a40:	ldr	x2, [x20, #8]
   22a44:	mov	w1, w21
   22a48:	mov	x0, x19
   22a4c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22a50:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22a54:	mov	x0, x19
   22a58:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22a5c:	add	x1, x1, #0x3ea
   22a60:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22a64:	ldr	x2, [x20, #8]
   22a68:	mov	w1, w21
   22a6c:	mov	x0, x19
   22a70:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22a74:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22a78:	mov	x0, x19
   22a7c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22a80:	add	x1, x1, #0x3fe
   22a84:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22a88:	ldr	x2, [x20, #8]
   22a8c:	mov	w1, w21
   22a90:	mov	x0, x19
   22a94:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22a98:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22a9c:	mov	x0, x19
   22aa0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22aa4:	add	x1, x1, #0x415
   22aa8:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22aac:	ldr	x2, [x20, #8]
   22ab0:	mov	w1, w21
   22ab4:	mov	x0, x19
   22ab8:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22abc:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22ac0:	mov	x0, x19
   22ac4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22ac8:	add	x1, x1, #0x42f
   22acc:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22ad0:	ldr	x2, [x20, #16]
   22ad4:	mov	w1, w21
   22ad8:	mov	x0, x19
   22adc:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22ae0:	mov	x0, x19
   22ae4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22ae8:	add	x1, x1, #0x353
   22aec:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22af0:	ldr	x2, [x20, #8]
   22af4:	mov	w1, w21
   22af8:	mov	x0, x19
   22afc:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22b00:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22b04:	mov	x0, x19
   22b08:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22b0c:	add	x1, x1, #0x445
   22b10:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22b14:	ldr	x2, [x20, #8]
   22b18:	mov	w1, w21
   22b1c:	mov	x0, x19
   22b20:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22b24:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22b28:	mov	x0, x19
   22b2c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22b30:	add	x1, x1, #0x45b
   22b34:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22b38:	ldr	x2, [x20, #8]
   22b3c:	mov	w1, w21
   22b40:	mov	x0, x19
   22b44:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22b48:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22b4c:	mov	x0, x19
   22b50:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22b54:	add	x1, x1, #0x457
   22b58:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22b5c:	ldr	x2, [x20, #8]
   22b60:	mov	w1, w21
   22b64:	mov	x0, x19
   22b68:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22b6c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22b70:	ldrsw	x2, [x20, #16]
   22b74:	mov	x0, x19
   22b78:	ldr	x1, [x20, #8]
   22b7c:	bl	21dc0 <__asan_backtrace_create_state@@Base+0x344>
   22b80:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22b84:	ldr	x2, [x19, #296]
   22b88:	cbnz	x2, 22bec <__asan_backtrace_create_state@@Base+0x1170>
   22b8c:	mov	w22, #0x0                   	// #0
   22b90:	ldr	x0, [x19, #296]
   22b94:	stp	x0, x20, [sp, #96]
   22b98:	add	x0, sp, #0x60
   22b9c:	str	x0, [x19, #296]
   22ba0:	ldr	x0, [x19, #288]
   22ba4:	str	wzr, [sp, #112]
   22ba8:	str	x0, [sp, #120]
   22bac:	cbnz	x2, 22bb4 <__asan_backtrace_create_state@@Base+0x1138>
   22bb0:	ldr	x2, [x20, #8]
   22bb4:	mov	x0, x19
   22bb8:	mov	w1, w21
   22bbc:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22bc0:	ldr	w0, [sp, #112]
   22bc4:	cbnz	w0, 22bd8 <__asan_backtrace_create_state@@Base+0x115c>
   22bc8:	mov	x2, x20
   22bcc:	mov	w1, w21
   22bd0:	mov	x0, x19
   22bd4:	bl	23cf8 <__asan_backtrace_create_state@@Base+0x227c>
   22bd8:	ldr	x0, [sp, #96]
   22bdc:	str	x0, [x19, #296]
   22be0:	cbz	w22, 22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22be4:	str	x23, [x19, #288]
   22be8:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22bec:	ldr	w22, [x2, #16]
   22bf0:	cbnz	w22, 22c24 <__asan_backtrace_create_state@@Base+0x11a8>
   22bf4:	ldr	x1, [x2, #8]
   22bf8:	ldr	w1, [x1]
   22bfc:	sub	w3, w1, #0x19
   22c00:	cmp	w3, #0x2
   22c04:	b.hi	22d9c <__asan_backtrace_create_state@@Base+0x1320>  // b.pmore
   22c08:	cmp	w0, w1
   22c0c:	b.ne	22c24 <__asan_backtrace_create_state@@Base+0x11a8>  // b.any
   22c10:	ldr	x2, [x20, #8]
   22c14:	mov	w1, w21
   22c18:	mov	x0, x19
   22c1c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22c20:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22c24:	ldr	x2, [x2]
   22c28:	b	22b88 <__asan_backtrace_create_state@@Base+0x110c>
   22c2c:	ldr	w22, [x19, #312]
   22c30:	ldr	x2, [x20, #8]
   22c34:	cbnz	w22, 22d6c <__asan_backtrace_create_state@@Base+0x12f0>
   22c38:	ldr	w0, [x2]
   22c3c:	cmp	w0, #0x5
   22c40:	b.ne	22d70 <__asan_backtrace_create_state@@Base+0x12f4>  // b.any
   22c44:	ldr	w0, [x19, #344]
   22c48:	mov	x1, #0x0                   	// #0
   22c4c:	cmp	w0, w1
   22c50:	b.gt	22c6c <__asan_backtrace_create_state@@Base+0x11f0>
   22c54:	ldr	w1, [x19, #348]
   22c58:	cmp	w0, w1
   22c5c:	b.lt	22c94 <__asan_backtrace_create_state@@Base+0x1218>  // b.tstop
   22c60:	mov	w0, #0x1                   	// #1
   22c64:	str	w0, [x19, #304]
   22c68:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22c6c:	ldr	x4, [x19, #336]
   22c70:	lsl	x3, x1, #4
   22c74:	ldr	x3, [x4, x3]
   22c78:	add	x5, x4, x1, lsl #4
   22c7c:	add	x1, x1, #0x1
   22c80:	cmp	x2, x3
   22c84:	b.ne	22c4c <__asan_backtrace_create_state@@Base+0x11d0>  // b.any
   22c88:	ldr	x1, [x19, #328]
   22c8c:	mov	x0, x1
   22c90:	b	22d54 <__asan_backtrace_create_state@@Base+0x12d8>
   22c94:	ldr	x3, [x19, #336]
   22c98:	sbfiz	x4, x0, #4, #32
   22c9c:	add	x1, x3, w0, sxtw #4
   22ca0:	add	w0, w0, #0x1
   22ca4:	str	w0, [x19, #344]
   22ca8:	add	x0, x1, #0x8
   22cac:	str	x2, [x3, x4]
   22cb0:	ldr	x4, [x19, #288]
   22cb4:	cbnz	x4, 22cfc <__asan_backtrace_create_state@@Base+0x1280>
   22cb8:	str	xzr, [x0]
   22cbc:	add	x1, x2, #0x8
   22cc0:	mov	x0, x19
   22cc4:	bl	22354 <__asan_backtrace_create_state@@Base+0x8d8>
   22cc8:	mov	x2, x0
   22ccc:	cbz	x0, 22cf0 <__asan_backtrace_create_state@@Base+0x1274>
   22cd0:	ldr	w1, [x0]
   22cd4:	cmp	w1, #0x2f
   22cd8:	b.ne	22d70 <__asan_backtrace_create_state@@Base+0x12f4>  // b.any
   22cdc:	ldr	w1, [x19, #316]
   22ce0:	tbnz	w1, #31, 22d70 <__asan_backtrace_create_state@@Base+0x12f4>
   22ce4:	bl	22220 <__asan_backtrace_create_state@@Base+0x7a4>
   22ce8:	mov	x2, x0
   22cec:	cbnz	x0, 22d70 <__asan_backtrace_create_state@@Base+0x12f4>
   22cf0:	cbz	w22, 22468 <__asan_backtrace_create_state@@Base+0x9ec>
   22cf4:	str	x23, [x19, #288]
   22cf8:	b	22468 <__asan_backtrace_create_state@@Base+0x9ec>
   22cfc:	ldr	w3, [x19, #360]
   22d00:	ldr	w1, [x19, #364]
   22d04:	cmp	w3, w1
   22d08:	b.ge	22c60 <__asan_backtrace_create_state@@Base+0x11e4>  // b.tcont
   22d0c:	ldr	x1, [x19, #352]
   22d10:	add	x1, x1, w3, sxtw #4
   22d14:	add	w3, w3, #0x1
   22d18:	str	w3, [x19, #360]
   22d1c:	ldr	x3, [x4, #8]
   22d20:	str	x3, [x1, #8]
   22d24:	str	x1, [x0]
   22d28:	mov	x0, x1
   22d2c:	ldr	x4, [x4]
   22d30:	b	22cb4 <__asan_backtrace_create_state@@Base+0x1238>
   22d34:	ldr	x3, [x0]
   22d38:	cmp	x3, x2
   22d3c:	b.eq	22cbc <__asan_backtrace_create_state@@Base+0x1240>  // b.none
   22d40:	cmp	x3, x20
   22d44:	b.ne	22d50 <__asan_backtrace_create_state@@Base+0x12d4>  // b.any
   22d48:	cmp	x0, x1
   22d4c:	b.ne	22cbc <__asan_backtrace_create_state@@Base+0x1240>  // b.any
   22d50:	ldr	x0, [x0, #8]
   22d54:	cbnz	x0, 22d34 <__asan_backtrace_create_state@@Base+0x12b8>
   22d58:	ldr	x0, [x5, #8]
   22d5c:	mov	w22, #0x1                   	// #1
   22d60:	ldr	x23, [x19, #288]
   22d64:	str	x0, [x19, #288]
   22d68:	b	22cbc <__asan_backtrace_create_state@@Base+0x1240>
   22d6c:	mov	w22, #0x0                   	// #0
   22d70:	ldr	w0, [x2]
   22d74:	cmp	w0, #0x23
   22d78:	b.eq	22da4 <__asan_backtrace_create_state@@Base+0x1328>  // b.none
   22d7c:	ldr	w1, [x20]
   22d80:	cmp	w0, w1
   22d84:	b.eq	22da4 <__asan_backtrace_create_state@@Base+0x1328>  // b.none
   22d88:	cmp	w0, #0x24
   22d8c:	b.ne	22d9c <__asan_backtrace_create_state@@Base+0x1320>  // b.any
   22d90:	ldr	x2, [x2, #8]
   22d94:	b	22b90 <__asan_backtrace_create_state@@Base+0x1114>
   22d98:	mov	w22, #0x0                   	// #0
   22d9c:	mov	x2, #0x0                   	// #0
   22da0:	b	22b90 <__asan_backtrace_create_state@@Base+0x1114>
   22da4:	mov	x20, x2
   22da8:	b	22d9c <__asan_backtrace_create_state@@Base+0x1320>
   22dac:	ldr	x0, [x20, #8]
   22db0:	tbnz	w21, #2, 22dc8 <__asan_backtrace_create_state@@Base+0x134c>
   22db4:	ldrsw	x2, [x0, #8]
   22db8:	ldr	x1, [x0]
   22dbc:	mov	x0, x19
   22dc0:	bl	21dc0 <__asan_backtrace_create_state@@Base+0x344>
   22dc4:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22dc8:	ldrsw	x2, [x0, #24]
   22dcc:	ldr	x1, [x0, #16]
   22dd0:	mov	x0, x19
   22dd4:	bl	21dc0 <__asan_backtrace_create_state@@Base+0x344>
   22dd8:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22ddc:	ldr	x2, [x20, #8]
   22de0:	mov	w1, w21
   22de4:	mov	x0, x19
   22de8:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22dec:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22df0:	and	w22, w21, #0x20
   22df4:	tbz	w21, #5, 22e0c <__asan_backtrace_create_state@@Base+0x1390>
   22df8:	ldr	x3, [x19, #296]
   22dfc:	add	x2, x20, #0x10
   22e00:	and	w1, w21, #0xffffff9f
   22e04:	mov	x0, x19
   22e08:	bl	23ec0 <__asan_backtrace_create_state@@Base+0x2444>
   22e0c:	ldr	x2, [x20, #8]
   22e10:	cbz	x2, 22e84 <__asan_backtrace_create_state@@Base+0x1408>
   22e14:	and	w1, w21, #0xffffff9f
   22e18:	cbz	w22, 22e28 <__asan_backtrace_create_state@@Base+0x13ac>
   22e1c:	mov	x0, x19
   22e20:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22e24:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22e28:	tbnz	w21, #6, 22e6c <__asan_backtrace_create_state@@Base+0x13f0>
   22e2c:	ldr	x0, [x19, #296]
   22e30:	stp	x0, x20, [sp, #96]
   22e34:	add	x0, sp, #0x60
   22e38:	str	x0, [x19, #296]
   22e3c:	ldr	x0, [x19, #288]
   22e40:	str	wzr, [sp, #112]
   22e44:	str	x0, [sp, #120]
   22e48:	mov	x0, x19
   22e4c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22e50:	ldr	x0, [sp, #96]
   22e54:	str	x0, [x19, #296]
   22e58:	ldr	w0, [sp, #112]
   22e5c:	cbnz	w0, 22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22e60:	mov	x0, x19
   22e64:	mov	w1, #0x20                  	// #32
   22e68:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   22e6c:	ldr	x3, [x19, #296]
   22e70:	add	x2, x20, #0x10
   22e74:	and	w1, w21, #0xffffff9f
   22e78:	mov	x0, x19
   22e7c:	bl	23ec0 <__asan_backtrace_create_state@@Base+0x2444>
   22e80:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22e84:	cbnz	w22, 22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22e88:	b	22e6c <__asan_backtrace_create_state@@Base+0x13f0>
   22e8c:	ldp	x0, x23, [x19, #288]
   22e90:	mov	w22, #0x1                   	// #1
   22e94:	mov	w6, w22
   22e98:	str	x0, [sp, #120]
   22e9c:	add	x4, sp, #0x60
   22ea0:	stp	x23, x20, [sp, #96]
   22ea4:	str	wzr, [sp, #112]
   22ea8:	mov	x0, x23
   22eac:	str	x4, [x19, #296]
   22eb0:	cbz	x0, 22ec8 <__asan_backtrace_create_state@@Base+0x144c>
   22eb4:	ldr	x1, [x0, #8]
   22eb8:	ldr	w1, [x1]
   22ebc:	sub	w1, w1, #0x19
   22ec0:	cmp	w1, #0x2
   22ec4:	b.ls	22f08 <__asan_backtrace_create_state@@Base+0x148c>  // b.plast
   22ec8:	ldr	x2, [x20, #16]
   22ecc:	mov	x0, x19
   22ed0:	mov	w1, w21
   22ed4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22ed8:	str	x23, [x19, #296]
   22edc:	ldr	w0, [sp, #112]
   22ee0:	cbnz	w0, 22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22ee4:	add	x23, sp, #0x68
   22ee8:	cmp	w22, #0x1
   22eec:	b.ne	22f58 <__asan_backtrace_create_state@@Base+0x14dc>  // b.any
   22ef0:	ldr	x3, [x19, #296]
   22ef4:	add	x2, x20, #0x8
   22ef8:	mov	w1, w21
   22efc:	mov	x0, x19
   22f00:	bl	24174 <__asan_backtrace_create_state@@Base+0x26f8>
   22f04:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22f08:	ldr	w1, [x0, #16]
   22f0c:	cbnz	w1, 22f50 <__asan_backtrace_create_state@@Base+0x14d4>
   22f10:	cmp	w22, #0x3
   22f14:	b.ls	22f24 <__asan_backtrace_create_state@@Base+0x14a8>  // b.plast
   22f18:	mov	w0, #0x1                   	// #1
   22f1c:	str	w0, [x19, #304]
   22f20:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22f24:	ubfiz	x5, x22, #5, #32
   22f28:	add	w22, w22, #0x1
   22f2c:	add	x1, x4, x5
   22f30:	ldp	x2, x3, [x0]
   22f34:	stp	x2, x3, [x1]
   22f38:	ldp	x2, x3, [x0, #16]
   22f3c:	stp	x2, x3, [x1, #16]
   22f40:	ldr	x2, [x19, #296]
   22f44:	str	x2, [x4, x5]
   22f48:	str	x1, [x19, #296]
   22f4c:	str	w6, [x0, #16]
   22f50:	ldr	x0, [x0]
   22f54:	b	22eb0 <__asan_backtrace_create_state@@Base+0x1434>
   22f58:	sub	w22, w22, #0x1
   22f5c:	mov	w1, w21
   22f60:	ubfiz	x0, x22, #5, #32
   22f64:	ldr	x2, [x23, x0]
   22f68:	mov	x0, x19
   22f6c:	bl	23cf8 <__asan_backtrace_create_state@@Base+0x227c>
   22f70:	b	22ee8 <__asan_backtrace_create_state@@Base+0x146c>
   22f74:	ldr	x2, [x20, #16]
   22f78:	mov	w1, w21
   22f7c:	ldr	x0, [x19, #296]
   22f80:	stp	x0, x20, [sp, #96]
   22f84:	add	x0, sp, #0x60
   22f88:	str	x0, [x19, #296]
   22f8c:	ldr	x0, [x19, #288]
   22f90:	str	wzr, [sp, #112]
   22f94:	str	x0, [sp, #120]
   22f98:	mov	x0, x19
   22f9c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   22fa0:	ldr	w0, [sp, #112]
   22fa4:	cbnz	w0, 22fb8 <__asan_backtrace_create_state@@Base+0x153c>
   22fa8:	mov	x2, x20
   22fac:	mov	w1, w21
   22fb0:	mov	x0, x19
   22fb4:	bl	23cf8 <__asan_backtrace_create_state@@Base+0x227c>
   22fb8:	ldr	x0, [sp, #96]
   22fbc:	str	x0, [x19, #296]
   22fc0:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   22fc4:	ldrsh	w0, [x20, #18]
   22fc8:	cbz	w0, 22fdc <__asan_backtrace_create_state@@Base+0x1560>
   22fcc:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   22fd0:	mov	x0, x19
   22fd4:	add	x1, x1, #0x472
   22fd8:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   22fdc:	ldr	x2, [x20, #8]
   22fe0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   22fe4:	ldr	x0, [x0, #3912]
   22fe8:	ldr	x1, [x2, #8]
   22fec:	add	x0, x0, #0x100
   22ff0:	cmp	x1, x0
   22ff4:	b.eq	23010 <__asan_backtrace_create_state@@Base+0x1594>  // b.none
   22ff8:	mov	w1, w21
   22ffc:	mov	x0, x19
   23000:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23004:	mov	x0, x19
   23008:	mov	w1, #0x20                  	// #32
   2300c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23010:	ldrsh	w0, [x20, #16]
   23014:	cbz	w0, 2302c <__asan_backtrace_create_state@@Base+0x15b0>
   23018:	mov	x0, x19
   2301c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23020:	add	x1, x1, #0x478
   23024:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23028:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   2302c:	mov	x0, x19
   23030:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23034:	add	x1, x1, #0x47f
   23038:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   2303c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23040:	ldr	x2, [x20, #8]
   23044:	cbz	x2, 23054 <__asan_backtrace_create_state@@Base+0x15d8>
   23048:	mov	w1, w21
   2304c:	mov	x0, x19
   23050:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23054:	ldr	x0, [x20, #16]
   23058:	cbz	x0, 22470 <__asan_backtrace_create_state@@Base+0x9f4>
   2305c:	ldr	x0, [x19, #256]
   23060:	cmp	x0, #0xfd
   23064:	b.ls	23070 <__asan_backtrace_create_state@@Base+0x15f4>  // b.plast
   23068:	mov	x0, x19
   2306c:	bl	21d40 <__asan_backtrace_create_state@@Base+0x2c4>
   23070:	mov	x0, x19
   23074:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23078:	add	x1, x1, #0x486
   2307c:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23080:	ldr	x2, [x20, #16]
   23084:	mov	x0, x19
   23088:	mov	w1, w21
   2308c:	ldr	x22, [x19, #256]
   23090:	ldr	x23, [x19, #320]
   23094:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23098:	ldr	x0, [x19, #320]
   2309c:	cmp	x0, x23
   230a0:	b.ne	22470 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   230a4:	ldr	x0, [x19, #256]
   230a8:	cmp	x0, x22
   230ac:	b.ne	22470 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   230b0:	sub	x0, x0, #0x2
   230b4:	str	x0, [x19, #256]
   230b8:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   230bc:	ldp	x2, x20, [x20, #8]
   230c0:	cbz	x2, 230d0 <__asan_backtrace_create_state@@Base+0x1654>
   230c4:	mov	w1, w21
   230c8:	mov	x0, x19
   230cc:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   230d0:	mov	x0, x19
   230d4:	mov	w1, #0x7b                  	// #123
   230d8:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   230dc:	mov	x2, x20
   230e0:	mov	w1, w21
   230e4:	mov	x0, x19
   230e8:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   230ec:	mov	x0, x19
   230f0:	mov	w1, #0x7d                  	// #125
   230f4:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   230f8:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   230fc:	ldr	x21, [x20, #8]
   23100:	mov	x0, x19
   23104:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23108:	add	x1, x1, #0x489
   2310c:	ldr	w20, [x21, #16]
   23110:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23114:	ldr	x0, [x21, #8]
   23118:	ldrb	w0, [x0]
   2311c:	sub	w0, w0, #0x61
   23120:	and	w0, w0, #0xff
   23124:	cmp	w0, #0x19
   23128:	b.hi	23138 <__asan_backtrace_create_state@@Base+0x16bc>  // b.pmore
   2312c:	mov	x0, x19
   23130:	mov	w1, #0x20                  	// #32
   23134:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23138:	ldr	x1, [x21, #8]
   2313c:	add	x0, x1, w20, sxtw
   23140:	ldurb	w0, [x0, #-1]
   23144:	cmp	w0, #0x20
   23148:	cset	w0, eq  // eq = none
   2314c:	sub	w20, w20, w0
   23150:	mov	x0, x19
   23154:	sxtw	x2, w20
   23158:	bl	21dc0 <__asan_backtrace_create_state@@Base+0x344>
   2315c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23160:	mov	x0, x19
   23164:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23168:	add	x1, x1, #0x492
   2316c:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23170:	ldr	x2, [x20, #16]
   23174:	mov	w1, w21
   23178:	mov	x0, x19
   2317c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23180:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23184:	mov	x0, x19
   23188:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   2318c:	add	x1, x1, #0x492
   23190:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23194:	ldr	x0, [x19, #368]
   23198:	cbz	x0, 231ac <__asan_backtrace_create_state@@Base+0x1730>
   2319c:	ldr	x1, [x19, #288]
   231a0:	stp	x1, x0, [sp, #96]
   231a4:	add	x1, sp, #0x60
   231a8:	str	x1, [x19, #288]
   231ac:	ldr	x2, [x20, #8]
   231b0:	ldr	w0, [x2]
   231b4:	cmp	w0, #0x4
   231b8:	b.eq	231dc <__asan_backtrace_create_state@@Base+0x1760>  // b.none
   231bc:	mov	x0, x19
   231c0:	mov	w1, w21
   231c4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   231c8:	ldr	x0, [x19, #368]
   231cc:	cbz	x0, 22470 <__asan_backtrace_create_state@@Base+0x9f4>
   231d0:	ldr	x0, [sp, #96]
   231d4:	str	x0, [x19, #288]
   231d8:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   231dc:	ldr	x2, [x2, #8]
   231e0:	mov	x0, x19
   231e4:	mov	w1, w21
   231e8:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   231ec:	ldr	x0, [x19, #368]
   231f0:	cbz	x0, 231fc <__asan_backtrace_create_state@@Base+0x1780>
   231f4:	ldr	x0, [sp, #96]
   231f8:	str	x0, [x19, #288]
   231fc:	ldrb	w0, [x19, #264]
   23200:	cmp	w0, #0x3c
   23204:	b.ne	23214 <__asan_backtrace_create_state@@Base+0x1798>  // b.any
   23208:	mov	x0, x19
   2320c:	mov	w1, #0x20                  	// #32
   23210:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23214:	mov	x0, x19
   23218:	mov	w1, #0x3c                  	// #60
   2321c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23220:	ldr	x0, [x20, #8]
   23224:	mov	w1, w21
   23228:	ldr	x2, [x0, #16]
   2322c:	mov	x0, x19
   23230:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23234:	ldrb	w0, [x19, #264]
   23238:	cmp	w0, #0x3e
   2323c:	b.ne	2324c <__asan_backtrace_create_state@@Base+0x17d0>  // b.any
   23240:	mov	x0, x19
   23244:	mov	w1, #0x20                  	// #32
   23248:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   2324c:	mov	x0, x19
   23250:	mov	w1, #0x3e                  	// #62
   23254:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23258:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   2325c:	ldr	x2, [x20, #8]
   23260:	mov	w1, w21
   23264:	mov	x0, x19
   23268:	bl	2425c <__asan_backtrace_create_state@@Base+0x27e0>
   2326c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23270:	ldp	x23, x20, [x20, #8]
   23274:	ldr	w0, [x23]
   23278:	cmp	w0, #0x32
   2327c:	b.ne	23384 <__asan_backtrace_create_state@@Base+0x1908>  // b.any
   23280:	ldr	x0, [x23, #8]
   23284:	adrp	x1, 2a000 <__asan_backtrace_get_view@@Base+0x70>
   23288:	add	x1, x1, #0x673
   2328c:	ldr	x22, [x0]
   23290:	mov	x0, x22
   23294:	bl	68c0 <__asan_internal_strcmp@plt>
   23298:	cbnz	w0, 232c8 <__asan_backtrace_create_state@@Base+0x184c>
   2329c:	ldr	w0, [x20]
   232a0:	cmp	w0, #0x3
   232a4:	b.ne	232c8 <__asan_backtrace_create_state@@Base+0x184c>  // b.any
   232a8:	ldr	x0, [x20, #8]
   232ac:	ldr	w1, [x0]
   232b0:	cmp	w1, #0x1
   232b4:	b.ne	232c8 <__asan_backtrace_create_state@@Base+0x184c>  // b.any
   232b8:	ldr	x1, [x20, #16]
   232bc:	ldr	w1, [x1]
   232c0:	cmp	w1, #0x29
   232c4:	csel	x20, x20, x0, ne  // ne = any
   232c8:	ldr	w0, [x20]
   232cc:	cmp	w0, #0x39
   232d0:	b.ne	232f8 <__asan_backtrace_create_state@@Base+0x187c>  // b.any
   232d4:	ldr	x2, [x20, #8]
   232d8:	mov	w1, w21
   232dc:	mov	x0, x19
   232e0:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   232e4:	mov	x2, x23
   232e8:	mov	w1, w21
   232ec:	mov	x0, x19
   232f0:	bl	2425c <__asan_backtrace_create_state@@Base+0x27e0>
   232f4:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   232f8:	cbz	x22, 23388 <__asan_backtrace_create_state@@Base+0x190c>
   232fc:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23300:	mov	x0, x22
   23304:	add	x1, x1, #0x49c
   23308:	bl	68c0 <__asan_internal_strcmp@plt>
   2330c:	cbnz	w0, 23c50 <__asan_backtrace_create_state@@Base+0x21d4>
   23310:	mov	x1, x20
   23314:	mov	x0, x19
   23318:	bl	22380 <__asan_backtrace_create_state@@Base+0x904>
   2331c:	bl	21e04 <__asan_backtrace_create_state@@Base+0x388>
   23320:	mov	w1, w0
   23324:	mov	x0, x19
   23328:	bl	21e68 <__asan_backtrace_create_state@@Base+0x3ec>
   2332c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23330:	ldr	x0, [x20, #8]
   23334:	cbz	x0, 2336c <__asan_backtrace_create_state@@Base+0x18f0>
   23338:	ldr	w1, [x0]
   2333c:	cmp	w1, #0x4b
   23340:	b.ne	2337c <__asan_backtrace_create_state@@Base+0x1900>  // b.any
   23344:	ldr	x1, [x0, #8]
   23348:	mov	x0, x19
   2334c:	bl	22380 <__asan_backtrace_create_state@@Base+0x904>
   23350:	bl	21e04 <__asan_backtrace_create_state@@Base+0x388>
   23354:	add	w3, w3, w0
   23358:	ldr	x20, [x20, #16]
   2335c:	cbz	x20, 2336c <__asan_backtrace_create_state@@Base+0x18f0>
   23360:	ldr	w0, [x20]
   23364:	cmp	w0, #0x2f
   23368:	b.eq	23330 <__asan_backtrace_create_state@@Base+0x18b4>  // b.none
   2336c:	mov	w1, w3
   23370:	mov	x0, x19
   23374:	bl	21e68 <__asan_backtrace_create_state@@Base+0x3ec>
   23378:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   2337c:	add	w3, w3, #0x1
   23380:	b	23358 <__asan_backtrace_create_state@@Base+0x18dc>
   23384:	mov	x22, #0x0                   	// #0
   23388:	ldr	w0, [x23]
   2338c:	cmp	w0, #0x34
   23390:	b.eq	233d0 <__asan_backtrace_create_state@@Base+0x1954>  // b.none
   23394:	mov	x2, x23
   23398:	mov	w1, w21
   2339c:	mov	x0, x19
   233a0:	bl	2425c <__asan_backtrace_create_state@@Base+0x27e0>
   233a4:	cbz	x22, 233fc <__asan_backtrace_create_state@@Base+0x1980>
   233a8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   233ac:	mov	x0, x22
   233b0:	add	x1, x1, #0x49f
   233b4:	bl	68c0 <__asan_internal_strcmp@plt>
   233b8:	cbnz	w0, 23c10 <__asan_backtrace_create_state@@Base+0x2194>
   233bc:	mov	x2, x20
   233c0:	mov	w1, w21
   233c4:	mov	x0, x19
   233c8:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   233cc:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   233d0:	mov	x0, x19
   233d4:	mov	w1, #0x28                  	// #40
   233d8:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   233dc:	ldr	x2, [x23, #8]
   233e0:	mov	w1, w21
   233e4:	mov	x0, x19
   233e8:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   233ec:	mov	x0, x19
   233f0:	mov	w1, #0x29                  	// #41
   233f4:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   233f8:	b	233a4 <__asan_backtrace_create_state@@Base+0x1928>
   233fc:	mov	x2, x20
   23400:	mov	w1, w21
   23404:	mov	x0, x19
   23408:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   2340c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23410:	ldr	x0, [x20, #16]
   23414:	ldr	w0, [x0]
   23418:	cmp	w0, #0x39
   2341c:	b.ne	22468 <__asan_backtrace_create_state@@Base+0x9ec>  // b.any
   23420:	ldr	x2, [x20, #8]
   23424:	ldr	x0, [x2, #8]
   23428:	bl	22148 <__asan_backtrace_create_state@@Base+0x6cc>
   2342c:	cbz	w0, 23490 <__asan_backtrace_create_state@@Base+0x1a14>
   23430:	mov	w1, w21
   23434:	mov	x0, x19
   23438:	bl	2425c <__asan_backtrace_create_state@@Base+0x27e0>
   2343c:	mov	x0, x19
   23440:	mov	w1, #0x3c                  	// #60
   23444:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23448:	ldr	x0, [x20, #16]
   2344c:	mov	w1, w21
   23450:	ldr	x2, [x0, #8]
   23454:	mov	x0, x19
   23458:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   2345c:	mov	x0, x19
   23460:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23464:	add	x1, x1, #0x4a2
   23468:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   2346c:	ldr	x0, [x20, #16]
   23470:	mov	w1, w21
   23474:	ldr	x2, [x0, #16]
   23478:	mov	x0, x19
   2347c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23480:	mov	x0, x19
   23484:	mov	w1, #0x29                  	// #41
   23488:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   2348c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23490:	mov	x2, x20
   23494:	mov	w1, w21
   23498:	mov	x0, x19
   2349c:	bl	24308 <__asan_backtrace_create_state@@Base+0x288c>
   234a0:	cbnz	w0, 22470 <__asan_backtrace_create_state@@Base+0x9f4>
   234a4:	ldr	x0, [x20, #8]
   234a8:	ldr	w1, [x0]
   234ac:	cmp	w1, #0x32
   234b0:	b.ne	234e0 <__asan_backtrace_create_state@@Base+0x1a64>  // b.any
   234b4:	ldr	x0, [x0, #8]
   234b8:	ldr	w1, [x0, #16]
   234bc:	cmp	w1, #0x1
   234c0:	b.ne	234e0 <__asan_backtrace_create_state@@Base+0x1a64>  // b.any
   234c4:	ldr	x0, [x0, #8]
   234c8:	ldrb	w0, [x0]
   234cc:	cmp	w0, #0x3e
   234d0:	b.ne	234e0 <__asan_backtrace_create_state@@Base+0x1a64>  // b.any
   234d4:	mov	x0, x19
   234d8:	mov	w1, #0x28                  	// #40
   234dc:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   234e0:	ldr	x0, [x20, #8]
   234e4:	adrp	x22, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   234e8:	add	x1, x22, #0x4a5
   234ec:	ldr	x0, [x0, #8]
   234f0:	ldr	x0, [x0]
   234f4:	bl	68c0 <__asan_internal_strcmp@plt>
   234f8:	ldr	x2, [x20, #16]
   234fc:	cbnz	w0, 235c0 <__asan_backtrace_create_state@@Base+0x1b44>
   23500:	ldr	x0, [x2, #8]
   23504:	ldr	w1, [x0]
   23508:	cmp	w1, #0x3
   2350c:	b.ne	235c0 <__asan_backtrace_create_state@@Base+0x1b44>  // b.any
   23510:	ldr	x1, [x0, #16]
   23514:	ldr	w1, [x1]
   23518:	cmp	w1, #0x29
   2351c:	b.eq	23528 <__asan_backtrace_create_state@@Base+0x1aac>  // b.none
   23520:	mov	w1, #0x1                   	// #1
   23524:	str	w1, [x19, #304]
   23528:	ldr	x2, [x0, #8]
   2352c:	mov	w1, w21
   23530:	mov	x0, x19
   23534:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   23538:	ldr	x0, [x20, #8]
   2353c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0x2bc4>
   23540:	add	x1, x1, #0xfa
   23544:	ldr	x0, [x0, #8]
   23548:	ldr	x0, [x0]
   2354c:	bl	68c0 <__asan_internal_strcmp@plt>
   23550:	cbnz	w0, 235c8 <__asan_backtrace_create_state@@Base+0x1b4c>
   23554:	mov	x0, x19
   23558:	mov	w1, #0x5b                  	// #91
   2355c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23560:	ldr	x0, [x20, #16]
   23564:	mov	w1, w21
   23568:	ldr	x2, [x0, #16]
   2356c:	mov	x0, x19
   23570:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23574:	mov	x0, x19
   23578:	mov	w1, #0x5d                  	// #93
   2357c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23580:	ldr	x0, [x20, #8]
   23584:	ldr	w1, [x0]
   23588:	cmp	w1, #0x32
   2358c:	b.ne	22470 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   23590:	ldr	x0, [x0, #8]
   23594:	ldr	w1, [x0, #16]
   23598:	cmp	w1, #0x1
   2359c:	b.ne	22470 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   235a0:	ldr	x0, [x0, #8]
   235a4:	ldrb	w0, [x0]
   235a8:	cmp	w0, #0x3e
   235ac:	b.ne	22470 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   235b0:	mov	x0, x19
   235b4:	mov	w1, #0x29                  	// #41
   235b8:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   235bc:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   235c0:	ldr	x2, [x2, #8]
   235c4:	b	2352c <__asan_backtrace_create_state@@Base+0x1ab0>
   235c8:	ldr	x0, [x20, #8]
   235cc:	add	x1, x22, #0x4a5
   235d0:	ldr	x0, [x0, #8]
   235d4:	ldr	x0, [x0]
   235d8:	bl	68c0 <__asan_internal_strcmp@plt>
   235dc:	cbz	w0, 235f0 <__asan_backtrace_create_state@@Base+0x1b74>
   235e0:	ldr	x2, [x20, #8]
   235e4:	mov	w1, w21
   235e8:	mov	x0, x19
   235ec:	bl	2425c <__asan_backtrace_create_state@@Base+0x27e0>
   235f0:	ldr	x0, [x20, #16]
   235f4:	mov	w1, w21
   235f8:	ldr	x2, [x0, #16]
   235fc:	mov	x0, x19
   23600:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   23604:	b	23580 <__asan_backtrace_create_state@@Base+0x1b04>
   23608:	mov	w0, #0x1                   	// #1
   2360c:	str	w0, [x19, #304]
   23610:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23614:	ldr	x0, [x20, #16]
   23618:	ldr	w1, [x0]
   2361c:	cmp	w1, #0x3b
   23620:	b.ne	22468 <__asan_backtrace_create_state@@Base+0x9ec>  // b.any
   23624:	ldr	x0, [x0, #16]
   23628:	ldr	w0, [x0]
   2362c:	cmp	w0, #0x3c
   23630:	b.ne	22468 <__asan_backtrace_create_state@@Base+0x9ec>  // b.any
   23634:	mov	x2, x20
   23638:	mov	w1, w21
   2363c:	mov	x0, x19
   23640:	bl	24308 <__asan_backtrace_create_state@@Base+0x288c>
   23644:	cbnz	w0, 22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23648:	ldp	x22, x0, [x20, #8]
   2364c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23650:	add	x1, x1, #0x4a8
   23654:	ldp	x20, x0, [x0, #8]
   23658:	ldp	x24, x23, [x0, #8]
   2365c:	ldr	x0, [x22, #8]
   23660:	ldr	x0, [x0]
   23664:	bl	68c0 <__asan_internal_strcmp@plt>
   23668:	cbnz	w0, 236c0 <__asan_backtrace_create_state@@Base+0x1c44>
   2366c:	mov	x2, x20
   23670:	mov	w1, w21
   23674:	mov	x0, x19
   23678:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   2367c:	mov	x2, x22
   23680:	mov	w1, w21
   23684:	mov	x0, x19
   23688:	bl	2425c <__asan_backtrace_create_state@@Base+0x27e0>
   2368c:	mov	x2, x24
   23690:	mov	w1, w21
   23694:	mov	x0, x19
   23698:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   2369c:	mov	x0, x19
   236a0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   236a4:	add	x1, x1, #0x4ab
   236a8:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   236ac:	mov	x2, x23
   236b0:	mov	w1, w21
   236b4:	mov	x0, x19
   236b8:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   236bc:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   236c0:	mov	x0, x19
   236c4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   236c8:	add	x1, x1, #0x4af
   236cc:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   236d0:	ldr	x0, [x20, #8]
   236d4:	cbz	x0, 236f4 <__asan_backtrace_create_state@@Base+0x1c78>
   236d8:	mov	x2, x20
   236dc:	mov	w1, w21
   236e0:	mov	x0, x19
   236e4:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   236e8:	mov	x0, x19
   236ec:	mov	w1, #0x20                  	// #32
   236f0:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   236f4:	mov	x2, x24
   236f8:	mov	w1, w21
   236fc:	mov	x0, x19
   23700:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23704:	cbz	x23, 22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23708:	mov	x2, x23
   2370c:	mov	w1, w21
   23710:	mov	x0, x19
   23714:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   23718:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   2371c:	ldr	x1, [x20, #8]
   23720:	ldr	w2, [x1]
   23724:	cmp	w2, #0x27
   23728:	b.ne	238d4 <__asan_backtrace_create_state@@Base+0x1e58>  // b.any
   2372c:	ldr	x1, [x1, #8]
   23730:	ldr	w22, [x1, #28]
   23734:	cmp	w22, #0x6
   23738:	b.hi	23794 <__asan_backtrace_create_state@@Base+0x1d18>  // b.pmore
   2373c:	cbz	w22, 2379c <__asan_backtrace_create_state@@Base+0x1d20>
   23740:	ldr	x1, [x20, #16]
   23744:	ldr	w1, [x1]
   23748:	cbnz	w1, 2379c <__asan_backtrace_create_state@@Base+0x1d20>
   2374c:	cmp	w0, #0x3e
   23750:	b.ne	23760 <__asan_backtrace_create_state@@Base+0x1ce4>  // b.any
   23754:	mov	x0, x19
   23758:	mov	w1, #0x2d                  	// #45
   2375c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23760:	ldr	x2, [x20, #16]
   23764:	mov	w1, w21
   23768:	mov	x0, x19
   2376c:	sub	w22, w22, #0x2
   23770:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23774:	cmp	w22, #0x4
   23778:	b.hi	22470 <__asan_backtrace_create_state@@Base+0x9f4>  // b.pmore
   2377c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23780:	add	x0, x0, #0x1ac
   23784:	ldrb	w0, [x0, w22, uxtw]
   23788:	adr	x1, 23794 <__asan_backtrace_create_state@@Base+0x1d18>
   2378c:	add	x0, x1, w0, sxtb #2
   23790:	br	x0
   23794:	cmp	w22, #0x7
   23798:	b.eq	23874 <__asan_backtrace_create_state@@Base+0x1df8>  // b.none
   2379c:	mov	x0, x19
   237a0:	mov	w1, #0x28                  	// #40
   237a4:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   237a8:	ldr	x2, [x20, #8]
   237ac:	mov	w1, w21
   237b0:	mov	x0, x19
   237b4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   237b8:	mov	x0, x19
   237bc:	mov	w1, #0x29                  	// #41
   237c0:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   237c4:	ldr	w0, [x20]
   237c8:	cmp	w0, #0x3e
   237cc:	b.ne	237dc <__asan_backtrace_create_state@@Base+0x1d60>  // b.any
   237d0:	mov	x0, x19
   237d4:	mov	w1, #0x2d                  	// #45
   237d8:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   237dc:	cmp	w22, #0x8
   237e0:	b.ne	237f0 <__asan_backtrace_create_state@@Base+0x1d74>  // b.any
   237e4:	mov	x0, x19
   237e8:	mov	w1, #0x5b                  	// #91
   237ec:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   237f0:	ldr	x2, [x20, #16]
   237f4:	mov	w1, w21
   237f8:	mov	x0, x19
   237fc:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23800:	cmp	w22, #0x8
   23804:	b.ne	22470 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   23808:	mov	x0, x19
   2380c:	mov	w1, #0x5d                  	// #93
   23810:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23814:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23818:	mov	x0, x19
   2381c:	mov	w1, #0x75                  	// #117
   23820:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23824:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23828:	mov	x0, x19
   2382c:	mov	w1, #0x6c                  	// #108
   23830:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23834:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23838:	mov	x0, x19
   2383c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23840:	add	x1, x1, #0x4b4
   23844:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23848:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   2384c:	mov	x0, x19
   23850:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   23854:	add	x1, x1, #0x63e
   23858:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   2385c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23860:	mov	x0, x19
   23864:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   23868:	add	x1, x1, #0x296
   2386c:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23870:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23874:	ldr	x1, [x20, #16]
   23878:	ldr	w2, [x1]
   2387c:	cbnz	w2, 2379c <__asan_backtrace_create_state@@Base+0x1d20>
   23880:	ldr	w2, [x1, #16]
   23884:	cmp	w2, #0x1
   23888:	b.ne	2379c <__asan_backtrace_create_state@@Base+0x1d20>  // b.any
   2388c:	cmp	w0, #0x3d
   23890:	b.ne	2379c <__asan_backtrace_create_state@@Base+0x1d20>  // b.any
   23894:	ldr	x0, [x1, #8]
   23898:	ldrb	w0, [x0]
   2389c:	cmp	w0, #0x30
   238a0:	b.eq	238c0 <__asan_backtrace_create_state@@Base+0x1e44>  // b.none
   238a4:	cmp	w0, #0x31
   238a8:	b.ne	2379c <__asan_backtrace_create_state@@Base+0x1d20>  // b.any
   238ac:	mov	x0, x19
   238b0:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   238b4:	add	x1, x1, #0xff5
   238b8:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   238bc:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   238c0:	mov	x0, x19
   238c4:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x6bc4>
   238c8:	add	x1, x1, #0x5
   238cc:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   238d0:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   238d4:	mov	w22, #0x0                   	// #0
   238d8:	b	2379c <__asan_backtrace_create_state@@Base+0x1d20>
   238dc:	ldr	w1, [x20, #8]
   238e0:	mov	x0, x19
   238e4:	bl	21e68 <__asan_backtrace_create_state@@Base+0x3ec>
   238e8:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   238ec:	mov	x0, x19
   238f0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   238f4:	add	x1, x1, #0x4b7
   238f8:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   238fc:	ldr	x2, [x20, #8]
   23900:	mov	w1, w21
   23904:	mov	x0, x19
   23908:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   2390c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23910:	ldr	x2, [x20, #8]
   23914:	mov	w1, w21
   23918:	mov	x0, x19
   2391c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23920:	ldr	x2, [x20, #16]
   23924:	mov	w1, w21
   23928:	mov	x0, x19
   2392c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23930:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23934:	ldrb	w1, [x20, #8]
   23938:	mov	x0, x19
   2393c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23940:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23944:	mov	x0, x19
   23948:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   2394c:	add	x1, x1, #0x4c6
   23950:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23954:	ldr	x2, [x20, #8]
   23958:	mov	w1, w21
   2395c:	mov	x0, x19
   23960:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23964:	mov	x0, x19
   23968:	mov	w1, #0x29                  	// #41
   2396c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23970:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23974:	ldr	x1, [x20, #8]
   23978:	mov	x0, x19
   2397c:	bl	22380 <__asan_backtrace_create_state@@Base+0x904>
   23980:	cbnz	x0, 239a8 <__asan_backtrace_create_state@@Base+0x1f2c>
   23984:	ldr	x2, [x20, #8]
   23988:	mov	w1, w21
   2398c:	mov	x0, x19
   23990:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   23994:	mov	x0, x19
   23998:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   2399c:	add	x1, x1, #0x578
   239a0:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   239a4:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   239a8:	bl	21e04 <__asan_backtrace_create_state@@Base+0x388>
   239ac:	mov	w23, w0
   239b0:	sub	w25, w0, #0x1
   239b4:	ldr	x24, [x20, #8]
   239b8:	adrp	x20, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   239bc:	add	x20, x20, #0x486
   239c0:	cmp	w22, w23
   239c4:	b.ge	22470 <__asan_backtrace_create_state@@Base+0x9f4>  // b.tcont
   239c8:	str	w22, [x19, #316]
   239cc:	mov	x2, x24
   239d0:	mov	w1, w21
   239d4:	mov	x0, x19
   239d8:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   239dc:	cmp	w25, w22
   239e0:	b.le	239f0 <__asan_backtrace_create_state@@Base+0x1f74>
   239e4:	mov	x1, x20
   239e8:	mov	x0, x19
   239ec:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   239f0:	add	w22, w22, #0x1
   239f4:	b	239c0 <__asan_backtrace_create_state@@Base+0x1f44>
   239f8:	ldr	x20, [x20, #8]
   239fc:	cbnz	x20, 23a14 <__asan_backtrace_create_state@@Base+0x1f98>
   23a00:	mov	x0, x19
   23a04:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23a08:	add	x1, x1, #0x4d1
   23a0c:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23a10:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23a14:	mov	x0, x19
   23a18:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23a1c:	add	x1, x1, #0x4d6
   23a20:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23a24:	mov	w1, w20
   23a28:	mov	x0, x19
   23a2c:	bl	21e68 <__asan_backtrace_create_state@@Base+0x3ec>
   23a30:	mov	x0, x19
   23a34:	mov	w1, #0x7d                  	// #125
   23a38:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23a3c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23a40:	mov	x0, x19
   23a44:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23a48:	add	x1, x1, #0x4dd
   23a4c:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23a50:	ldr	x2, [x20, #8]
   23a54:	mov	w1, w21
   23a58:	mov	x0, x19
   23a5c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23a60:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23a64:	mov	x0, x19
   23a68:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23a6c:	add	x1, x1, #0x4fb
   23a70:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23a74:	ldr	x2, [x20, #8]
   23a78:	mov	w1, w21
   23a7c:	mov	x0, x19
   23a80:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23a84:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23a88:	mov	x0, x19
   23a8c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23a90:	add	x1, x1, #0x518
   23a94:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23a98:	ldr	w0, [x19, #312]
   23a9c:	mov	w1, w21
   23aa0:	ldr	x2, [x20, #8]
   23aa4:	add	w0, w0, #0x1
   23aa8:	str	w0, [x19, #312]
   23aac:	mov	x0, x19
   23ab0:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23ab4:	ldr	w0, [x19, #312]
   23ab8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23abc:	add	x1, x1, #0x521
   23ac0:	sub	w0, w0, #0x1
   23ac4:	str	w0, [x19, #312]
   23ac8:	mov	x0, x19
   23acc:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23ad0:	ldr	w1, [x20, #16]
   23ad4:	mov	x0, x19
   23ad8:	add	w1, w1, #0x1
   23adc:	bl	21e68 <__asan_backtrace_create_state@@Base+0x3ec>
   23ae0:	mov	x0, x19
   23ae4:	mov	w1, #0x7d                  	// #125
   23ae8:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23aec:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23af0:	mov	x0, x19
   23af4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23af8:	add	x1, x1, #0x524
   23afc:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23b00:	ldr	x1, [x20, #8]
   23b04:	mov	x0, x19
   23b08:	add	w1, w1, #0x1
   23b0c:	bl	21e68 <__asan_backtrace_create_state@@Base+0x3ec>
   23b10:	mov	x0, x19
   23b14:	mov	w1, #0x7d                  	// #125
   23b18:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23b1c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23b20:	ldr	x2, [x20, #8]
   23b24:	mov	w1, w21
   23b28:	mov	x0, x19
   23b2c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23b30:	mov	x0, x19
   23b34:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23b38:	add	x1, x1, #0x533
   23b3c:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23b40:	ldr	x2, [x20, #16]
   23b44:	mov	w1, w21
   23b48:	mov	x0, x19
   23b4c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23b50:	mov	x0, x19
   23b54:	mov	w1, #0x5d                  	// #93
   23b58:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23b5c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23b60:	cmp	w5, #0x2
   23b64:	b.ne	23b94 <__asan_backtrace_create_state@@Base+0x2118>  // b.any
   23b68:	ldr	x22, [x22, #16]
   23b6c:	ldr	w0, [x22]
   23b70:	cmp	w0, #0x47
   23b74:	b.ne	23b80 <__asan_backtrace_create_state@@Base+0x2104>  // b.any
   23b78:	ldr	x22, [x22, #8]
   23b7c:	cbz	x22, 22698 <__asan_backtrace_create_state@@Base+0xc1c>
   23b80:	ubfiz	x0, x23, #5, #32
   23b84:	add	x2, x2, x0
   23b88:	ldr	w0, [x22]
   23b8c:	bl	21afc <__asan_backtrace_create_state@@Base+0x80>
   23b90:	cbnz	w0, 226d8 <__asan_backtrace_create_state@@Base+0xc5c>
   23b94:	ldr	w0, [x22]
   23b98:	cmp	w0, #0x4
   23b9c:	b.ne	23bac <__asan_backtrace_create_state@@Base+0x2130>  // b.any
   23ba0:	add	x0, sp, #0x50
   23ba4:	stp	x4, x22, [sp, #80]
   23ba8:	str	x0, [x19, #288]
   23bac:	ldr	x2, [x20, #16]
   23bb0:	mov	x0, x19
   23bb4:	mov	w1, w21
   23bb8:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23bbc:	ldr	w0, [x22]
   23bc0:	cmp	w0, #0x4
   23bc4:	b.ne	23bd0 <__asan_backtrace_create_state@@Base+0x2154>  // b.any
   23bc8:	ldr	x0, [sp, #80]
   23bcc:	str	x0, [x19, #288]
   23bd0:	add	x22, sp, #0x70
   23bd4:	add	x25, sp, #0x68
   23bd8:	sub	w23, w23, #0x1
   23bdc:	ubfiz	x20, x23, #5, #32
   23be0:	ldr	w0, [x22, x20]
   23be4:	cbnz	w0, 23c04 <__asan_backtrace_create_state@@Base+0x2188>
   23be8:	mov	x0, x19
   23bec:	mov	w1, #0x20                  	// #32
   23bf0:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23bf4:	ldr	x2, [x25, x20]
   23bf8:	mov	w1, w21
   23bfc:	mov	x0, x19
   23c00:	bl	23cf8 <__asan_backtrace_create_state@@Base+0x227c>
   23c04:	cbnz	w23, 23bd8 <__asan_backtrace_create_state@@Base+0x215c>
   23c08:	str	x24, [x19, #296]
   23c0c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23c10:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   23c14:	mov	x0, x22
   23c18:	add	x1, x1, #0x653
   23c1c:	bl	68c0 <__asan_internal_strcmp@plt>
   23c20:	cbnz	w0, 233fc <__asan_backtrace_create_state@@Base+0x1980>
   23c24:	mov	x0, x19
   23c28:	mov	w1, #0x28                  	// #40
   23c2c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23c30:	mov	x2, x20
   23c34:	mov	w1, w21
   23c38:	mov	x0, x19
   23c3c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23c40:	mov	x0, x19
   23c44:	mov	w1, #0x29                  	// #41
   23c48:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23c4c:	b	22470 <__asan_backtrace_create_state@@Base+0x9f4>
   23c50:	mov	x0, x22
   23c54:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23c58:	add	x1, x1, #0x53c
   23c5c:	bl	68c0 <__asan_internal_strcmp@plt>
   23c60:	mov	w3, w0
   23c64:	cbnz	w0, 23388 <__asan_backtrace_create_state@@Base+0x190c>
   23c68:	b	23360 <__asan_backtrace_create_state@@Base+0x18e4>
   23c6c:	stp	x29, x30, [sp, #-48]!
   23c70:	mov	x29, sp
   23c74:	stp	x19, x20, [sp, #16]
   23c78:	mov	x19, x0
   23c7c:	cbz	x2, 23c9c <__asan_backtrace_create_state@@Base+0x2220>
   23c80:	ldr	w4, [x2, #4]
   23c84:	mov	x20, x2
   23c88:	cmp	w4, #0x1
   23c8c:	b.gt	23c9c <__asan_backtrace_create_state@@Base+0x2220>
   23c90:	ldr	w3, [x0, #308]
   23c94:	cmp	w3, #0x400
   23c98:	b.le	23cb0 <__asan_backtrace_create_state@@Base+0x2234>
   23c9c:	mov	w0, #0x1                   	// #1
   23ca0:	str	w0, [x19, #304]
   23ca4:	ldp	x19, x20, [sp, #16]
   23ca8:	ldp	x29, x30, [sp], #48
   23cac:	ret
   23cb0:	add	w4, w4, #0x1
   23cb4:	add	w3, w3, #0x1
   23cb8:	str	w4, [x2, #4]
   23cbc:	str	w3, [x0, #308]
   23cc0:	ldr	x3, [x0, #328]
   23cc4:	stp	x2, x3, [sp, #32]
   23cc8:	add	x3, sp, #0x20
   23ccc:	str	x3, [x0, #328]
   23cd0:	bl	22448 <__asan_backtrace_create_state@@Base+0x9cc>
   23cd4:	ldr	x0, [sp, #40]
   23cd8:	str	x0, [x19, #328]
   23cdc:	ldr	w0, [x20, #4]
   23ce0:	sub	w0, w0, #0x1
   23ce4:	str	w0, [x20, #4]
   23ce8:	ldr	w0, [x19, #308]
   23cec:	sub	w0, w0, #0x1
   23cf0:	str	w0, [x19, #308]
   23cf4:	b	23ca4 <__asan_backtrace_create_state@@Base+0x2228>
   23cf8:	stp	x29, x30, [sp, #-48]!
   23cfc:	mov	x29, sp
   23d00:	stp	x19, x20, [sp, #16]
   23d04:	mov	x20, x2
   23d08:	ldr	w2, [x2]
   23d0c:	str	x21, [sp, #32]
   23d10:	cmp	w2, #0x3
   23d14:	b.eq	23e7c <__asan_backtrace_create_state@@Base+0x2400>  // b.none
   23d18:	sub	w2, w2, #0x19
   23d1c:	mov	x19, x0
   23d20:	mov	w21, w1
   23d24:	cmp	w2, #0x37
   23d28:	b.hi	23ea8 <__asan_backtrace_create_state@@Base+0x242c>  // b.pmore
   23d2c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23d30:	add	x0, x0, #0x1b4
   23d34:	ldrb	w0, [x0, w2, uxtw]
   23d38:	adr	x1, 23d44 <__asan_backtrace_create_state@@Base+0x22c8>
   23d3c:	add	x0, x1, w0, sxtb #2
   23d40:	br	x0
   23d44:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23d48:	add	x1, x1, #0x53f
   23d4c:	mov	x0, x19
   23d50:	ldp	x19, x20, [sp, #16]
   23d54:	ldr	x21, [sp, #32]
   23d58:	ldp	x29, x30, [sp], #48
   23d5c:	b	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23d60:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23d64:	add	x1, x1, #0x549
   23d68:	b	23d4c <__asan_backtrace_create_state@@Base+0x22d0>
   23d6c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23d70:	add	x1, x1, #0x553
   23d74:	b	23d4c <__asan_backtrace_create_state@@Base+0x22d0>
   23d78:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23d7c:	add	x1, x1, #0x55a
   23d80:	b	23d4c <__asan_backtrace_create_state@@Base+0x22d0>
   23d84:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23d88:	add	x1, x1, #0x56c
   23d8c:	mov	x0, x19
   23d90:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23d94:	ldr	x0, [x20, #16]
   23d98:	cbz	x0, 23eb0 <__asan_backtrace_create_state@@Base+0x2434>
   23d9c:	mov	x0, x19
   23da0:	mov	w1, #0x28                  	// #40
   23da4:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23da8:	ldr	x2, [x20, #16]
   23dac:	mov	w1, w21
   23db0:	mov	x0, x19
   23db4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23db8:	mov	w1, #0x29                  	// #41
   23dbc:	b	23df0 <__asan_backtrace_create_state@@Base+0x2374>
   23dc0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23dc4:	add	x1, x1, #0x576
   23dc8:	b	23d8c <__asan_backtrace_create_state@@Base+0x2310>
   23dcc:	mov	x0, x19
   23dd0:	mov	w1, #0x20                  	// #32
   23dd4:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23dd8:	ldr	x2, [x20, #16]
   23ddc:	mov	w1, w21
   23de0:	mov	x0, x19
   23de4:	b	23e80 <__asan_backtrace_create_state@@Base+0x2404>
   23de8:	tbnz	w21, #2, 23eb0 <__asan_backtrace_create_state@@Base+0x2434>
   23dec:	mov	w1, #0x2a                  	// #42
   23df0:	mov	x0, x19
   23df4:	ldp	x19, x20, [sp, #16]
   23df8:	ldr	x21, [sp, #32]
   23dfc:	ldp	x29, x30, [sp], #48
   23e00:	b	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23e04:	mov	x0, x19
   23e08:	mov	w1, #0x20                  	// #32
   23e0c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23e10:	mov	w1, #0x26                  	// #38
   23e14:	b	23df0 <__asan_backtrace_create_state@@Base+0x2374>
   23e18:	mov	x0, x19
   23e1c:	mov	w1, #0x20                  	// #32
   23e20:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23e24:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23e28:	add	x1, x1, #0x57d
   23e2c:	b	23d4c <__asan_backtrace_create_state@@Base+0x22d0>
   23e30:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23e34:	add	x1, x1, #0x580
   23e38:	b	23d4c <__asan_backtrace_create_state@@Base+0x22d0>
   23e3c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23e40:	add	x1, x1, #0x589
   23e44:	b	23d4c <__asan_backtrace_create_state@@Base+0x22d0>
   23e48:	ldrb	w0, [x19, #264]
   23e4c:	cmp	w0, #0x28
   23e50:	b.eq	23e60 <__asan_backtrace_create_state@@Base+0x23e4>  // b.none
   23e54:	mov	x0, x19
   23e58:	mov	w1, #0x20                  	// #32
   23e5c:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23e60:	ldr	x2, [x20, #8]
   23e64:	mov	w1, w21
   23e68:	mov	x0, x19
   23e6c:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23e70:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23e74:	add	x1, x1, #0x594
   23e78:	b	23d4c <__asan_backtrace_create_state@@Base+0x22d0>
   23e7c:	ldr	x2, [x20, #8]
   23e80:	ldp	x19, x20, [sp, #16]
   23e84:	ldr	x21, [sp, #32]
   23e88:	ldp	x29, x30, [sp], #48
   23e8c:	b	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23e90:	mov	x0, x19
   23e94:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23e98:	add	x1, x1, #0x598
   23e9c:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   23ea0:	ldr	x2, [x20, #8]
   23ea4:	b	23dac <__asan_backtrace_create_state@@Base+0x2330>
   23ea8:	mov	x2, x20
   23eac:	b	23ddc <__asan_backtrace_create_state@@Base+0x2360>
   23eb0:	ldp	x19, x20, [sp, #16]
   23eb4:	ldr	x21, [sp, #32]
   23eb8:	ldp	x29, x30, [sp], #48
   23ebc:	ret
   23ec0:	stp	x29, x30, [sp, #-64]!
   23ec4:	mov	x29, sp
   23ec8:	stp	x19, x20, [sp, #16]
   23ecc:	mov	x19, x0
   23ed0:	mov	w20, w1
   23ed4:	mov	x0, x3
   23ed8:	stp	x21, x22, [sp, #32]
   23edc:	mov	x22, x2
   23ee0:	mov	x21, x3
   23ee4:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   23ee8:	add	x2, x2, #0x1ec
   23eec:	stp	x23, x24, [sp, #48]
   23ef0:	cbnz	x0, 23efc <__asan_backtrace_create_state@@Base+0x2480>
   23ef4:	mov	w23, #0x0                   	// #0
   23ef8:	b	23f6c <__asan_backtrace_create_state@@Base+0x24f0>
   23efc:	ldr	w1, [x0, #16]
   23f00:	cbnz	w1, 23ef4 <__asan_backtrace_create_state@@Base+0x2478>
   23f04:	ldr	x1, [x0, #8]
   23f08:	ldr	w1, [x1]
   23f0c:	sub	w1, w1, #0x19
   23f10:	cmp	w1, #0x12
   23f14:	b.hi	23f28 <__asan_backtrace_create_state@@Base+0x24ac>  // b.pmore
   23f18:	ldrb	w1, [x2, w1, uxtw]
   23f1c:	adr	x3, 23f28 <__asan_backtrace_create_state@@Base+0x24ac>
   23f20:	add	x1, x3, w1, sxtb #2
   23f24:	br	x1
   23f28:	ldr	x0, [x0]
   23f2c:	b	23ef0 <__asan_backtrace_create_state@@Base+0x2474>
   23f30:	ldrb	w0, [x19, #264]
   23f34:	and	w0, w0, #0xfffffffd
   23f38:	and	w0, w0, #0xff
   23f3c:	cmp	w0, #0x28
   23f40:	b.eq	23f5c <__asan_backtrace_create_state@@Base+0x24e0>  // b.none
   23f44:	ldrb	w0, [x19, #264]
   23f48:	cmp	w0, #0x20
   23f4c:	b.eq	23f5c <__asan_backtrace_create_state@@Base+0x24e0>  // b.none
   23f50:	mov	x0, x19
   23f54:	mov	w1, #0x20                  	// #32
   23f58:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23f5c:	mov	w23, #0x1                   	// #1
   23f60:	mov	x0, x19
   23f64:	mov	w1, #0x28                  	// #40
   23f68:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23f6c:	ldr	x24, [x19, #296]
   23f70:	str	xzr, [x19, #296]
   23f74:	mov	x2, x21
   23f78:	mov	w1, w20
   23f7c:	mov	x0, x19
   23f80:	mov	w3, #0x0                   	// #0
   23f84:	bl	23ff0 <__asan_backtrace_create_state@@Base+0x2574>
   23f88:	cbz	w23, 23f98 <__asan_backtrace_create_state@@Base+0x251c>
   23f8c:	mov	x0, x19
   23f90:	mov	w1, #0x29                  	// #41
   23f94:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23f98:	mov	x0, x19
   23f9c:	mov	w1, #0x28                  	// #40
   23fa0:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23fa4:	ldr	x2, [x22]
   23fa8:	cbz	x2, 23fb8 <__asan_backtrace_create_state@@Base+0x253c>
   23fac:	mov	w1, w20
   23fb0:	mov	x0, x19
   23fb4:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   23fb8:	mov	x0, x19
   23fbc:	mov	w1, #0x29                  	// #41
   23fc0:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   23fc4:	mov	x2, x21
   23fc8:	mov	w1, w20
   23fcc:	mov	x0, x19
   23fd0:	mov	w3, #0x1                   	// #1
   23fd4:	bl	23ff0 <__asan_backtrace_create_state@@Base+0x2574>
   23fd8:	ldp	x21, x22, [sp, #32]
   23fdc:	str	x24, [x19, #296]
   23fe0:	ldp	x19, x20, [sp, #16]
   23fe4:	ldp	x23, x24, [sp, #48]
   23fe8:	ldp	x29, x30, [sp], #64
   23fec:	ret
   23ff0:	stp	x29, x30, [sp, #-64]!
   23ff4:	mov	x29, sp
   23ff8:	stp	x19, x20, [sp, #16]
   23ffc:	mov	x19, x0
   24000:	mov	x20, x2
   24004:	stp	x21, x22, [sp, #32]
   24008:	mov	w21, w1
   2400c:	stp	x23, x24, [sp, #48]
   24010:	mov	w23, w3
   24014:	mov	w24, #0x1                   	// #1
   24018:	cbz	x20, 2407c <__asan_backtrace_create_state@@Base+0x2600>
   2401c:	ldr	w0, [x19, #304]
   24020:	cbnz	w0, 2407c <__asan_backtrace_create_state@@Base+0x2600>
   24024:	ldr	w0, [x20, #16]
   24028:	cbnz	w0, 24044 <__asan_backtrace_create_state@@Base+0x25c8>
   2402c:	ldr	x2, [x20, #8]
   24030:	ldr	w4, [x2]
   24034:	cbnz	w23, 2404c <__asan_backtrace_create_state@@Base+0x25d0>
   24038:	mov	w0, w4
   2403c:	bl	21afc <__asan_backtrace_create_state@@Base+0x80>
   24040:	cbz	w0, 2404c <__asan_backtrace_create_state@@Base+0x25d0>
   24044:	ldr	x20, [x20]
   24048:	b	24018 <__asan_backtrace_create_state@@Base+0x259c>
   2404c:	ldr	x0, [x20, #24]
   24050:	cmp	w4, #0x29
   24054:	ldr	x22, [x19, #288]
   24058:	str	w24, [x20, #16]
   2405c:	str	x0, [x19, #288]
   24060:	b.ne	24090 <__asan_backtrace_create_state@@Base+0x2614>  // b.any
   24064:	ldr	x3, [x20]
   24068:	add	x2, x2, #0x10
   2406c:	mov	w1, w21
   24070:	mov	x0, x19
   24074:	bl	23ec0 <__asan_backtrace_create_state@@Base+0x2444>
   24078:	str	x22, [x19, #288]
   2407c:	ldp	x19, x20, [sp, #16]
   24080:	ldp	x21, x22, [sp, #32]
   24084:	ldp	x23, x24, [sp, #48]
   24088:	ldp	x29, x30, [sp], #64
   2408c:	ret
   24090:	cmp	w4, #0x2a
   24094:	b.ne	240b0 <__asan_backtrace_create_state@@Base+0x2634>  // b.any
   24098:	ldr	x3, [x20]
   2409c:	add	x2, x2, #0x8
   240a0:	mov	w1, w21
   240a4:	mov	x0, x19
   240a8:	bl	24174 <__asan_backtrace_create_state@@Base+0x26f8>
   240ac:	b	24078 <__asan_backtrace_create_state@@Base+0x25fc>
   240b0:	cmp	w4, #0x2
   240b4:	b.ne	24160 <__asan_backtrace_create_state@@Base+0x26e4>  // b.any
   240b8:	ldr	x2, [x2, #8]
   240bc:	mov	w1, w21
   240c0:	ldr	x23, [x19, #296]
   240c4:	str	xzr, [x19, #296]
   240c8:	mov	x0, x19
   240cc:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   240d0:	str	x23, [x19, #296]
   240d4:	tbnz	w21, #2, 24150 <__asan_backtrace_create_state@@Base+0x26d4>
   240d8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   240dc:	mov	x0, x19
   240e0:	add	x1, x1, #0x321
   240e4:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   240e8:	ldr	x0, [x20, #8]
   240ec:	ldr	x20, [x0, #16]
   240f0:	ldr	w0, [x20]
   240f4:	cmp	w0, #0x47
   240f8:	b.ne	24130 <__asan_backtrace_create_state@@Base+0x26b4>  // b.any
   240fc:	mov	x0, x19
   24100:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   24104:	add	x1, x1, #0x312
   24108:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   2410c:	ldr	w1, [x20, #16]
   24110:	mov	x0, x19
   24114:	add	w1, w1, #0x1
   24118:	bl	21e68 <__asan_backtrace_create_state@@Base+0x3ec>
   2411c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   24120:	mov	x0, x19
   24124:	add	x1, x1, #0x320
   24128:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   2412c:	ldr	x20, [x20, #8]
   24130:	ldr	w0, [x20]
   24134:	bl	21afc <__asan_backtrace_create_state@@Base+0x80>
   24138:	cbnz	w0, 2412c <__asan_backtrace_create_state@@Base+0x26b0>
   2413c:	mov	x2, x20
   24140:	mov	w1, w21
   24144:	mov	x0, x19
   24148:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   2414c:	b	24078 <__asan_backtrace_create_state@@Base+0x25fc>
   24150:	mov	x0, x19
   24154:	mov	w1, #0x2e                  	// #46
   24158:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   2415c:	b	240e8 <__asan_backtrace_create_state@@Base+0x266c>
   24160:	mov	w1, w21
   24164:	mov	x0, x19
   24168:	bl	23cf8 <__asan_backtrace_create_state@@Base+0x227c>
   2416c:	str	x22, [x19, #288]
   24170:	b	24044 <__asan_backtrace_create_state@@Base+0x25c8>
   24174:	stp	x29, x30, [sp, #-64]!
   24178:	mov	x29, sp
   2417c:	stp	x19, x20, [sp, #16]
   24180:	mov	x19, x0
   24184:	stp	x21, x22, [sp, #32]
   24188:	mov	w21, w1
   2418c:	stp	x23, x24, [sp, #48]
   24190:	mov	x24, x2
   24194:	cbnz	x3, 241e0 <__asan_backtrace_create_state@@Base+0x2764>
   24198:	mov	x0, x19
   2419c:	mov	w1, #0x20                  	// #32
   241a0:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   241a4:	mov	x0, x19
   241a8:	mov	w1, #0x5b                  	// #91
   241ac:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   241b0:	ldr	x2, [x24]
   241b4:	cbz	x2, 241c4 <__asan_backtrace_create_state@@Base+0x2748>
   241b8:	mov	w1, w21
   241bc:	mov	x0, x19
   241c0:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   241c4:	mov	x0, x19
   241c8:	mov	w1, #0x5d                  	// #93
   241cc:	ldp	x19, x20, [sp, #16]
   241d0:	ldp	x21, x22, [sp, #32]
   241d4:	ldp	x23, x24, [sp, #48]
   241d8:	ldp	x29, x30, [sp], #64
   241dc:	b	21d7c <__asan_backtrace_create_state@@Base+0x300>
   241e0:	mov	x20, x3
   241e4:	mov	x0, x3
   241e8:	ldr	w22, [x0, #16]
   241ec:	cbnz	w22, 24218 <__asan_backtrace_create_state@@Base+0x279c>
   241f0:	ldr	x0, [x0, #8]
   241f4:	ldr	w0, [x0]
   241f8:	cmp	w0, #0x2a
   241fc:	b.eq	24254 <__asan_backtrace_create_state@@Base+0x27d8>  // b.none
   24200:	mov	x0, x19
   24204:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   24208:	mov	w23, #0x1                   	// #1
   2420c:	add	x1, x1, #0x4ce
   24210:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   24214:	b	24224 <__asan_backtrace_create_state@@Base+0x27a8>
   24218:	ldr	x0, [x0]
   2421c:	cbnz	x0, 241e8 <__asan_backtrace_create_state@@Base+0x276c>
   24220:	mov	w23, #0x0                   	// #0
   24224:	mov	w22, #0x1                   	// #1
   24228:	mov	x2, x20
   2422c:	mov	w1, w21
   24230:	mov	x0, x19
   24234:	mov	w3, #0x0                   	// #0
   24238:	bl	23ff0 <__asan_backtrace_create_state@@Base+0x2574>
   2423c:	cbz	w23, 2424c <__asan_backtrace_create_state@@Base+0x27d0>
   24240:	mov	x0, x19
   24244:	mov	w1, #0x29                  	// #41
   24248:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   2424c:	cbnz	w22, 24198 <__asan_backtrace_create_state@@Base+0x271c>
   24250:	b	241a4 <__asan_backtrace_create_state@@Base+0x2728>
   24254:	mov	w23, #0x0                   	// #0
   24258:	b	24228 <__asan_backtrace_create_state@@Base+0x27ac>
   2425c:	ldr	w4, [x2]
   24260:	cmp	w4, #0x32
   24264:	b.ne	24278 <__asan_backtrace_create_state@@Base+0x27fc>  // b.any
   24268:	ldr	x1, [x2, #8]
   2426c:	ldrsw	x2, [x1, #16]
   24270:	ldr	x1, [x1, #8]
   24274:	b	21dc0 <__asan_backtrace_create_state@@Base+0x344>
   24278:	b	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   2427c:	stp	x29, x30, [sp, #-48]!
   24280:	mov	x29, sp
   24284:	stp	x19, x20, [sp, #16]
   24288:	mov	x19, x0
   2428c:	mov	x20, x2
   24290:	stp	x21, x22, [sp, #32]
   24294:	mov	w21, w1
   24298:	ldr	w1, [x2]
   2429c:	cmp	w1, #0x31
   242a0:	b.hi	242b4 <__asan_backtrace_create_state@@Base+0x2838>  // b.pmore
   242a4:	mov	x0, #0x43                  	// #67
   242a8:	movk	x0, #0x2, lsl #48
   242ac:	lsr	x0, x0, x1
   242b0:	tbnz	w0, #0, 242f0 <__asan_backtrace_create_state@@Base+0x2874>
   242b4:	mov	w22, #0x0                   	// #0
   242b8:	mov	x0, x19
   242bc:	mov	w1, #0x28                  	// #40
   242c0:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   242c4:	mov	x2, x20
   242c8:	mov	w1, w21
   242cc:	mov	x0, x19
   242d0:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   242d4:	cbnz	w22, 242f8 <__asan_backtrace_create_state@@Base+0x287c>
   242d8:	mov	x0, x19
   242dc:	mov	w1, #0x29                  	// #41
   242e0:	ldp	x19, x20, [sp, #16]
   242e4:	ldp	x21, x22, [sp, #32]
   242e8:	ldp	x29, x30, [sp], #48
   242ec:	b	21d7c <__asan_backtrace_create_state@@Base+0x300>
   242f0:	mov	w22, #0x1                   	// #1
   242f4:	b	242c4 <__asan_backtrace_create_state@@Base+0x2848>
   242f8:	ldp	x19, x20, [sp, #16]
   242fc:	ldp	x21, x22, [sp, #32]
   24300:	ldp	x29, x30, [sp], #48
   24304:	ret
   24308:	stp	x29, x30, [sp, #-64]!
   2430c:	mov	x29, sp
   24310:	stp	x19, x20, [sp, #16]
   24314:	mov	x19, x0
   24318:	mov	w20, w1
   2431c:	ldr	x0, [x2, #8]
   24320:	stp	x21, x22, [sp, #32]
   24324:	stp	x23, x24, [sp, #48]
   24328:	ldr	x0, [x0, #8]
   2432c:	ldr	x0, [x0]
   24330:	ldrb	w1, [x0]
   24334:	cmp	w1, #0x66
   24338:	b.ne	24484 <__asan_backtrace_create_state@@Base+0x2a08>  // b.any
   2433c:	ldr	x1, [x2, #16]
   24340:	ldp	x22, x21, [x1, #8]
   24344:	ldr	w1, [x21]
   24348:	cmp	w1, #0x3c
   2434c:	b.ne	243a0 <__asan_backtrace_create_state@@Base+0x2924>  // b.any
   24350:	ldr	x23, [x21, #16]
   24354:	ldr	x21, [x21, #8]
   24358:	mov	w1, #0xffffffff            	// #-1
   2435c:	ldr	w24, [x19, #316]
   24360:	str	w1, [x19, #316]
   24364:	ldrb	w0, [x0, #1]
   24368:	cmp	w0, #0x6c
   2436c:	b.eq	243f0 <__asan_backtrace_create_state@@Base+0x2974>  // b.none
   24370:	b.hi	243a8 <__asan_backtrace_create_state@@Base+0x292c>  // b.pmore
   24374:	cmp	w0, #0x4c
   24378:	b.eq	24430 <__asan_backtrace_create_state@@Base+0x29b4>  // b.none
   2437c:	cmp	w0, #0x52
   24380:	b.eq	24430 <__asan_backtrace_create_state@@Base+0x29b4>  // b.none
   24384:	mov	w0, #0x1                   	// #1
   24388:	str	w24, [x19, #316]
   2438c:	ldp	x19, x20, [sp, #16]
   24390:	ldp	x21, x22, [sp, #32]
   24394:	ldp	x23, x24, [sp, #48]
   24398:	ldp	x29, x30, [sp], #64
   2439c:	ret
   243a0:	mov	x23, #0x0                   	// #0
   243a4:	b	24358 <__asan_backtrace_create_state@@Base+0x28dc>
   243a8:	cmp	w0, #0x72
   243ac:	b.ne	24384 <__asan_backtrace_create_state@@Base+0x2908>  // b.any
   243b0:	mov	x0, x19
   243b4:	mov	w1, #0x28                  	// #40
   243b8:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   243bc:	mov	x2, x21
   243c0:	mov	w1, w20
   243c4:	mov	x0, x19
   243c8:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   243cc:	mov	x2, x22
   243d0:	mov	w1, w20
   243d4:	mov	x0, x19
   243d8:	bl	2425c <__asan_backtrace_create_state@@Base+0x27e0>
   243dc:	mov	x0, x19
   243e0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   243e4:	add	x1, x1, #0x5a8
   243e8:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   243ec:	b	24384 <__asan_backtrace_create_state@@Base+0x2908>
   243f0:	mov	x0, x19
   243f4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   243f8:	add	x1, x1, #0x5a3
   243fc:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   24400:	mov	x2, x22
   24404:	mov	w1, w20
   24408:	mov	x0, x19
   2440c:	bl	2425c <__asan_backtrace_create_state@@Base+0x27e0>
   24410:	mov	x2, x21
   24414:	mov	w1, w20
   24418:	mov	x0, x19
   2441c:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   24420:	mov	x0, x19
   24424:	mov	w1, #0x29                  	// #41
   24428:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   2442c:	b	24384 <__asan_backtrace_create_state@@Base+0x2908>
   24430:	mov	x0, x19
   24434:	mov	w1, #0x28                  	// #40
   24438:	bl	21d7c <__asan_backtrace_create_state@@Base+0x300>
   2443c:	mov	x2, x21
   24440:	mov	w1, w20
   24444:	mov	x0, x19
   24448:	bl	2427c <__asan_backtrace_create_state@@Base+0x2800>
   2444c:	mov	x2, x22
   24450:	mov	w1, w20
   24454:	mov	x0, x19
   24458:	bl	2425c <__asan_backtrace_create_state@@Base+0x27e0>
   2445c:	mov	x0, x19
   24460:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x3bc4>
   24464:	add	x1, x1, #0x578
   24468:	bl	21e34 <__asan_backtrace_create_state@@Base+0x3b8>
   2446c:	mov	x2, x22
   24470:	mov	w1, w20
   24474:	mov	x0, x19
   24478:	bl	2425c <__asan_backtrace_create_state@@Base+0x27e0>
   2447c:	mov	x2, x23
   24480:	b	24414 <__asan_backtrace_create_state@@Base+0x2998>
   24484:	mov	w0, #0x0                   	// #0
   24488:	b	2438c <__asan_backtrace_create_state@@Base+0x2910>

000000000002448c <__asan_cplus_demangle_fill_name@@Base>:
   2448c:	cmp	x0, #0x0
   24490:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   24494:	b.eq	244b0 <__asan_cplus_demangle_fill_name@@Base+0x24>  // b.none
   24498:	cmp	w2, #0x0
   2449c:	b.le	244b0 <__asan_cplus_demangle_fill_name@@Base+0x24>
   244a0:	stp	xzr, x1, [x0]
   244a4:	str	w2, [x0, #16]
   244a8:	mov	w0, #0x1                   	// #1
   244ac:	ret
   244b0:	mov	w0, #0x0                   	// #0
   244b4:	b	244ac <__asan_cplus_demangle_fill_name@@Base+0x20>
   244b8:	stp	x29, x30, [sp, #-32]!
   244bc:	mov	x4, x1
   244c0:	mov	w5, w2
   244c4:	mov	x29, sp
   244c8:	str	x19, [sp, #16]
   244cc:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   244d0:	mov	x19, x0
   244d4:	mov	w2, w5
   244d8:	mov	x1, x4
   244dc:	bl	6550 <__asan_cplus_demangle_fill_name@plt>
   244e0:	cmp	w0, #0x0
   244e4:	csel	x0, x19, xzr, ne  // ne = any
   244e8:	ldr	x19, [sp, #16]
   244ec:	ldp	x29, x30, [sp], #32
   244f0:	ret
   244f4:	stp	x29, x30, [sp, #-48]!
   244f8:	mov	x29, sp
   244fc:	stp	x19, x20, [sp, #16]
   24500:	mov	x19, x0
   24504:	add	x0, x0, #0x18
   24508:	str	x21, [sp, #32]
   2450c:	bl	21ea8 <__asan_backtrace_create_state@@Base+0x42c>
   24510:	cmp	w0, #0x0
   24514:	b.le	245f4 <__asan_cplus_demangle_fill_name@@Base+0x168>
   24518:	mov	w20, w0
   2451c:	sxtw	x1, w0
   24520:	ldr	x0, [x19, #8]
   24524:	ldr	x21, [x19, #24]
   24528:	sub	x0, x0, x21
   2452c:	cmp	x0, w20, sxtw
   24530:	b.lt	245ec <__asan_cplus_demangle_fill_name@@Base+0x160>  // b.tstop
   24534:	ldr	w2, [x19, #16]
   24538:	add	x0, x21, x1
   2453c:	str	x0, [x19, #24]
   24540:	tbz	w2, #2, 24558 <__asan_cplus_demangle_fill_name@@Base+0xcc>
   24544:	ldrb	w1, [x21, x1]
   24548:	cmp	w1, #0x24
   2454c:	b.ne	24558 <__asan_cplus_demangle_fill_name@@Base+0xcc>  // b.any
   24550:	add	x0, x0, #0x1
   24554:	str	x0, [x19, #24]
   24558:	cmp	w20, #0x9
   2455c:	b.le	245e0 <__asan_cplus_demangle_fill_name@@Base+0x154>
   24560:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   24564:	mov	x0, x21
   24568:	add	x1, x1, #0x5ad
   2456c:	mov	x2, #0x8                   	// #8
   24570:	bl	69d0 <__asan_internal_memcmp@plt>
   24574:	cbnz	w0, 245e0 <__asan_cplus_demangle_fill_name@@Base+0x154>
   24578:	ldrb	w0, [x21, #8]
   2457c:	sub	w0, w0, #0x24
   24580:	and	w0, w0, #0xff
   24584:	cmp	w0, #0x3b
   24588:	b.hi	245e0 <__asan_cplus_demangle_fill_name@@Base+0x154>  // b.pmore
   2458c:	mov	x1, #0x401                 	// #1025
   24590:	movk	x1, #0x800, lsl #48
   24594:	lsr	x0, x1, x0
   24598:	tbz	w0, #0, 245e0 <__asan_cplus_demangle_fill_name@@Base+0x154>
   2459c:	ldrb	w0, [x21, #9]
   245a0:	cmp	w0, #0x4e
   245a4:	b.ne	245e0 <__asan_cplus_demangle_fill_name@@Base+0x154>  // b.any
   245a8:	ldr	w0, [x19, #72]
   245ac:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   245b0:	add	x1, x1, #0x5b6
   245b4:	mov	w2, #0x15                  	// #21
   245b8:	add	w0, w0, #0x16
   245bc:	sub	w20, w0, w20
   245c0:	str	w20, [x19, #72]
   245c4:	mov	x0, x19
   245c8:	bl	244b8 <__asan_cplus_demangle_fill_name@@Base+0x2c>
   245cc:	str	x0, [x19, #64]
   245d0:	ldp	x19, x20, [sp, #16]
   245d4:	ldr	x21, [sp, #32]
   245d8:	ldp	x29, x30, [sp], #48
   245dc:	ret
   245e0:	mov	w2, w20
   245e4:	mov	x1, x21
   245e8:	b	245c4 <__asan_cplus_demangle_fill_name@@Base+0x138>
   245ec:	mov	x0, #0x0                   	// #0
   245f0:	b	245cc <__asan_cplus_demangle_fill_name@@Base+0x140>
   245f4:	mov	x0, #0x0                   	// #0
   245f8:	b	245d0 <__asan_cplus_demangle_fill_name@@Base+0x144>
   245fc:	stp	x29, x30, [sp, #-48]!
   24600:	mov	x29, sp
   24604:	str	x21, [sp, #32]
   24608:	ldr	x21, [x0, #64]
   2460c:	stp	x19, x20, [sp, #16]
   24610:	mov	x19, x0
   24614:	mov	x20, x1
   24618:	ldr	x0, [x19, #24]
   2461c:	ldrb	w1, [x0]
   24620:	cmp	w1, #0x42
   24624:	b.eq	24640 <__asan_cplus_demangle_fill_name@@Base+0x1b4>  // b.none
   24628:	str	x21, [x19, #64]
   2462c:	mov	x0, x20
   24630:	ldp	x19, x20, [sp, #16]
   24634:	ldr	x21, [sp, #32]
   24638:	ldp	x29, x30, [sp], #48
   2463c:	ret
   24640:	add	x0, x0, #0x1
   24644:	str	x0, [x19, #24]
   24648:	mov	x0, x19
   2464c:	bl	244f4 <__asan_cplus_demangle_fill_name@@Base+0x68>
   24650:	mov	x3, x0
   24654:	mov	x2, x20
   24658:	mov	x0, x19
   2465c:	mov	w1, #0x4c                  	// #76
   24660:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   24664:	mov	x20, x0
   24668:	b	24618 <__asan_cplus_demangle_fill_name@@Base+0x18c>
   2466c:	stp	x29, x30, [sp, #-32]!
   24670:	mov	x29, sp
   24674:	ldr	x2, [x0, #24]
   24678:	str	x19, [sp, #16]
   2467c:	mov	x19, x0
   24680:	ldrb	w0, [x2]
   24684:	cmp	w0, #0x53
   24688:	b.ne	24840 <__asan_cplus_demangle_fill_name@@Base+0x3b4>  // b.any
   2468c:	add	x0, x2, #0x1
   24690:	str	x0, [x19, #24]
   24694:	ldrb	w0, [x2, #1]
   24698:	cbz	w0, 2476c <__asan_cplus_demangle_fill_name@@Base+0x2e0>
   2469c:	add	x0, x2, #0x2
   246a0:	str	x0, [x19, #24]
   246a4:	ldrb	w0, [x2, #1]
   246a8:	sub	w2, w0, #0x30
   246ac:	and	w2, w2, #0xff
   246b0:	cmp	w2, #0x2f
   246b4:	b.hi	2476c <__asan_cplus_demangle_fill_name@@Base+0x2e0>  // b.pmore
   246b8:	mov	w3, #0xfffe03ff            	// #-130049
   246bc:	movk	x3, #0x87ff, lsl #32
   246c0:	lsr	x2, x3, x2
   246c4:	tbz	w2, #0, 2476c <__asan_cplus_demangle_fill_name@@Base+0x2e0>
   246c8:	cmp	w0, #0x5f
   246cc:	b.ne	24744 <__asan_cplus_demangle_fill_name@@Base+0x2b8>  // b.any
   246d0:	mov	w0, #0x0                   	// #0
   246d4:	ldr	w1, [x19, #56]
   246d8:	cmp	w1, w0
   246dc:	b.ls	24840 <__asan_cplus_demangle_fill_name@@Base+0x3b4>  // b.plast
   246e0:	ldr	x1, [x19, #48]
   246e4:	ldr	x1, [x1, w0, uxtw #3]
   246e8:	mov	x0, x1
   246ec:	ldr	x19, [sp, #16]
   246f0:	ldp	x29, x30, [sp], #32
   246f4:	ret
   246f8:	mov	w2, w1
   246fc:	sub	w1, w0, #0x30
   24700:	and	w1, w1, #0xff
   24704:	cmp	w1, #0x9
   24708:	b.hi	24750 <__asan_cplus_demangle_fill_name@@Base+0x2c4>  // b.pmore
   2470c:	madd	w0, w2, w3, w0
   24710:	sub	w1, w0, #0x30
   24714:	cmp	w2, w1
   24718:	b.hi	24840 <__asan_cplus_demangle_fill_name@@Base+0x3b4>  // b.pmore
   2471c:	ldr	x2, [x19, #24]
   24720:	ldrb	w0, [x2]
   24724:	cbz	w0, 246f8 <__asan_cplus_demangle_fill_name@@Base+0x26c>
   24728:	add	x0, x2, #0x1
   2472c:	str	x0, [x19, #24]
   24730:	ldrb	w0, [x2]
   24734:	cmp	w0, #0x5f
   24738:	b.ne	246f8 <__asan_cplus_demangle_fill_name@@Base+0x26c>  // b.any
   2473c:	add	w0, w1, #0x1
   24740:	b	246d4 <__asan_cplus_demangle_fill_name@@Base+0x248>
   24744:	mov	w2, #0x0                   	// #0
   24748:	mov	w3, #0x24                  	// #36
   2474c:	b	246fc <__asan_cplus_demangle_fill_name@@Base+0x270>
   24750:	sub	w1, w0, #0x41
   24754:	and	w1, w1, #0xff
   24758:	cmp	w1, #0x19
   2475c:	b.hi	24840 <__asan_cplus_demangle_fill_name@@Base+0x3b4>  // b.pmore
   24760:	madd	w0, w2, w3, w0
   24764:	sub	w1, w0, #0x37
   24768:	b	24714 <__asan_cplus_demangle_fill_name@@Base+0x288>
   2476c:	ldr	w5, [x19, #16]
   24770:	and	w1, w1, #0x1
   24774:	ands	w2, w5, #0x8
   24778:	csel	w1, w1, wzr, eq  // eq = none
   2477c:	ubfx	x5, x5, #3, #1
   24780:	cbz	w1, 2479c <__asan_cplus_demangle_fill_name@@Base+0x310>
   24784:	ldr	x1, [x19, #24]
   24788:	ldrb	w1, [x1]
   2478c:	sub	w1, w1, #0x43
   24790:	and	w1, w1, #0xff
   24794:	cmp	w1, #0x1
   24798:	csinc	w5, w5, wzr, hi  // hi = pmore
   2479c:	adrp	x4, 4c000 <__asan_backtrace_vector_release@@Base+0x21bc4>
   247a0:	add	x4, x4, #0xfd8
   247a4:	mov	x1, #0x7                   	// #7
   247a8:	ldrb	w2, [x4]
   247ac:	cmp	w2, w0
   247b0:	b.ne	24854 <__asan_cplus_demangle_fill_name@@Base+0x3c8>  // b.any
   247b4:	ldr	x6, [x4, #40]
   247b8:	cbz	x6, 247e0 <__asan_cplus_demangle_fill_name@@Base+0x354>
   247bc:	ldr	w7, [x4, #48]
   247c0:	mov	x0, x19
   247c4:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   247c8:	cbz	x0, 247dc <__asan_cplus_demangle_fill_name@@Base+0x350>
   247cc:	mov	w1, #0x18                  	// #24
   247d0:	str	w1, [x0]
   247d4:	str	x6, [x0, #8]
   247d8:	str	w7, [x0, #16]
   247dc:	str	x0, [x19, #64]
   247e0:	cbz	w5, 24848 <__asan_cplus_demangle_fill_name@@Base+0x3bc>
   247e4:	ldr	x5, [x4, #24]
   247e8:	ldr	w4, [x4, #32]
   247ec:	ldr	w0, [x19, #72]
   247f0:	add	w0, w0, w4
   247f4:	str	w0, [x19, #72]
   247f8:	mov	x0, x19
   247fc:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   24800:	mov	x1, x0
   24804:	cbz	x0, 24818 <__asan_cplus_demangle_fill_name@@Base+0x38c>
   24808:	mov	w0, #0x18                  	// #24
   2480c:	str	w0, [x1]
   24810:	str	x5, [x1, #8]
   24814:	str	w4, [x1, #16]
   24818:	ldr	x0, [x19, #24]
   2481c:	ldrb	w0, [x0]
   24820:	cmp	w0, #0x42
   24824:	b.ne	246e8 <__asan_cplus_demangle_fill_name@@Base+0x25c>  // b.any
   24828:	mov	x0, x19
   2482c:	bl	245fc <__asan_cplus_demangle_fill_name@@Base+0x170>
   24830:	mov	x1, x0
   24834:	mov	x0, x19
   24838:	bl	21c50 <__asan_backtrace_create_state@@Base+0x1d4>
   2483c:	cbnz	w0, 246e8 <__asan_cplus_demangle_fill_name@@Base+0x25c>
   24840:	mov	x1, #0x0                   	// #0
   24844:	b	246e8 <__asan_cplus_demangle_fill_name@@Base+0x25c>
   24848:	ldr	x5, [x4, #8]
   2484c:	ldr	w4, [x4, #16]
   24850:	b	247ec <__asan_cplus_demangle_fill_name@@Base+0x360>
   24854:	add	x4, x4, #0x38
   24858:	subs	x1, x1, #0x1
   2485c:	b.ne	247a8 <__asan_cplus_demangle_fill_name@@Base+0x31c>  // b.any
   24860:	b	24840 <__asan_cplus_demangle_fill_name@@Base+0x3b4>

0000000000024864 <__asan_cplus_demangle_fill_extended_operator@@Base>:
   24864:	cmp	x0, #0x0
   24868:	ccmp	w1, #0x0, #0x1, ne  // ne = any
   2486c:	b.lt	2488c <__asan_cplus_demangle_fill_extended_operator@@Base+0x28>  // b.tstop
   24870:	cbz	x2, 2488c <__asan_cplus_demangle_fill_extended_operator@@Base+0x28>
   24874:	mov	x3, #0x33                  	// #51
   24878:	str	x3, [x0]
   2487c:	str	w1, [x0, #8]
   24880:	str	x2, [x0, #16]
   24884:	mov	w0, #0x1                   	// #1
   24888:	ret
   2488c:	mov	w0, #0x0                   	// #0
   24890:	b	24888 <__asan_cplus_demangle_fill_extended_operator@@Base+0x24>

0000000000024894 <__asan_cplus_demangle_fill_ctor@@Base>:
   24894:	cmp	x0, #0x0
   24898:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   2489c:	b.eq	248c4 <__asan_cplus_demangle_fill_ctor@@Base+0x30>  // b.none
   248a0:	sub	w3, w1, #0x1
   248a4:	cmp	w3, #0x4
   248a8:	b.hi	248c4 <__asan_cplus_demangle_fill_ctor@@Base+0x30>  // b.pmore
   248ac:	mov	x3, #0x7                   	// #7
   248b0:	str	x3, [x0]
   248b4:	str	w1, [x0, #8]
   248b8:	str	x2, [x0, #16]
   248bc:	mov	w0, #0x1                   	// #1
   248c0:	ret
   248c4:	mov	w0, #0x0                   	// #0
   248c8:	b	248c0 <__asan_cplus_demangle_fill_ctor@@Base+0x2c>

00000000000248cc <__asan_cplus_demangle_fill_dtor@@Base>:
   248cc:	cmp	x0, #0x0
   248d0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   248d4:	b.eq	248fc <__asan_cplus_demangle_fill_dtor@@Base+0x30>  // b.none
   248d8:	sub	w3, w1, #0x1
   248dc:	cmp	w3, #0x4
   248e0:	b.hi	248fc <__asan_cplus_demangle_fill_dtor@@Base+0x30>  // b.pmore
   248e4:	mov	x3, #0x8                   	// #8
   248e8:	str	x3, [x0]
   248ec:	str	w1, [x0, #8]
   248f0:	str	x2, [x0, #16]
   248f4:	mov	w0, #0x1                   	// #1
   248f8:	ret
   248fc:	mov	w0, #0x0                   	// #0
   24900:	b	248f8 <__asan_cplus_demangle_fill_dtor@@Base+0x2c>

0000000000024904 <__asan_cplus_demangle_type@@Base>:
   24904:	stp	x29, x30, [sp, #-80]!
   24908:	mov	x29, sp
   2490c:	ldr	x3, [x0, #24]
   24910:	stp	x19, x20, [sp, #16]
   24914:	mov	x19, x0
   24918:	mov	x0, x3
   2491c:	stp	x21, x22, [sp, #32]
   24920:	str	x23, [sp, #48]
   24924:	bl	220f0 <__asan_backtrace_create_state@@Base+0x674>
   24928:	cbz	w0, 249c4 <__asan_cplus_demangle_type@@Base+0xc0>
   2492c:	add	x1, sp, #0x48
   24930:	mov	x0, x19
   24934:	mov	w2, #0x0                   	// #0
   24938:	bl	26ba0 <__asan_cplus_demangle_mangled_name@@Base+0xab0>
   2493c:	mov	x20, x0
   24940:	cbnz	x0, 2495c <__asan_cplus_demangle_type@@Base+0x58>
   24944:	mov	x0, #0x0                   	// #0
   24948:	ldp	x19, x20, [sp, #16]
   2494c:	ldp	x21, x22, [sp, #32]
   24950:	ldr	x23, [sp, #48]
   24954:	ldp	x29, x30, [sp], #80
   24958:	ret
   2495c:	ldr	x0, [x19, #24]
   24960:	ldrb	w0, [x0]
   24964:	cmp	w0, #0x46
   24968:	mov	x0, x19
   2496c:	b.ne	249bc <__asan_cplus_demangle_type@@Base+0xb8>  // b.any
   24970:	bl	25610 <__asan_cplus_demangle_type@@Base+0xd0c>
   24974:	str	x0, [x20]
   24978:	ldr	x0, [x20]
   2497c:	cbz	x0, 24944 <__asan_cplus_demangle_type@@Base+0x40>
   24980:	ldr	w1, [x0]
   24984:	sub	w1, w1, #0x1f
   24988:	cmp	w1, #0x1
   2498c:	b.hi	249a8 <__asan_cplus_demangle_type@@Base+0xa4>  // b.pmore
   24990:	ldr	x2, [sp, #72]
   24994:	ldr	x1, [x0, #8]
   24998:	str	x2, [x0, #8]
   2499c:	ldr	x0, [x20]
   249a0:	str	x0, [sp, #72]
   249a4:	str	x1, [x20]
   249a8:	ldr	x1, [sp, #72]
   249ac:	mov	x0, x19
   249b0:	bl	21c50 <__asan_backtrace_create_state@@Base+0x1d4>
   249b4:	cbnz	w0, 24a2c <__asan_cplus_demangle_type@@Base+0x128>
   249b8:	b	24944 <__asan_cplus_demangle_type@@Base+0x40>
   249bc:	bl	24904 <__asan_cplus_demangle_type@@Base>
   249c0:	b	24974 <__asan_cplus_demangle_type@@Base+0x70>
   249c4:	ldrb	w1, [x3]
   249c8:	sub	w2, w1, #0x30
   249cc:	cmp	w2, #0x4a
   249d0:	b.hi	24944 <__asan_cplus_demangle_type@@Base+0x40>  // b.pmore
   249d4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   249d8:	add	x0, x0, #0x200
   249dc:	ldrh	w0, [x0, w2, uxtw #1]
   249e0:	adr	x2, 249ec <__asan_cplus_demangle_type@@Base+0xe8>
   249e4:	add	x0, x2, w0, sxth #2
   249e8:	br	x0
   249ec:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   249f0:	sub	w1, w1, #0x61
   249f4:	ldr	x0, [x0, #3912]
   249f8:	sbfiz	x1, x1, #5, #32
   249fc:	add	x1, x0, x1
   24a00:	mov	x0, x19
   24a04:	bl	21bd0 <__asan_backtrace_create_state@@Base+0x154>
   24a08:	str	x0, [sp, #72]
   24a0c:	ldr	x1, [x0, #8]
   24a10:	ldr	w0, [x19, #72]
   24a14:	ldr	w1, [x1, #8]
   24a18:	add	w0, w0, w1
   24a1c:	str	w0, [x19, #72]
   24a20:	ldr	x0, [x19, #24]
   24a24:	add	x0, x0, #0x1
   24a28:	str	x0, [x19, #24]
   24a2c:	ldr	x0, [sp, #72]
   24a30:	b	24948 <__asan_cplus_demangle_type@@Base+0x44>
   24a34:	add	x3, x3, #0x1
   24a38:	str	x3, [x19, #24]
   24a3c:	mov	x0, x19
   24a40:	bl	244f4 <__asan_cplus_demangle_fill_name@@Base+0x68>
   24a44:	mov	x2, x0
   24a48:	mov	x3, #0x0                   	// #0
   24a4c:	mov	w1, #0x28                  	// #40
   24a50:	mov	x0, x19
   24a54:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   24a58:	b	24a64 <__asan_cplus_demangle_type@@Base+0x160>
   24a5c:	mov	x0, x19
   24a60:	bl	25610 <__asan_cplus_demangle_type@@Base+0xd0c>
   24a64:	str	x0, [sp, #72]
   24a68:	b	249a8 <__asan_cplus_demangle_type@@Base+0xa4>
   24a6c:	mov	x0, x19
   24a70:	bl	256c8 <__asan_cplus_demangle_type@@Base+0xdc4>
   24a74:	b	24a64 <__asan_cplus_demangle_type@@Base+0x160>
   24a78:	add	x1, x3, #0x1
   24a7c:	str	x1, [x19, #24]
   24a80:	ldrb	w0, [x3, #1]
   24a84:	cmp	w0, #0x5f
   24a88:	b.eq	24ae4 <__asan_cplus_demangle_type@@Base+0x1e0>  // b.none
   24a8c:	sub	w0, w0, #0x30
   24a90:	and	w0, w0, #0xff
   24a94:	cmp	w0, #0x9
   24a98:	b.hi	24ad8 <__asan_cplus_demangle_type@@Base+0x1d4>  // b.pmore
   24a9c:	ldr	x0, [x19, #24]
   24aa0:	add	x2, x0, #0x1
   24aa4:	str	x2, [x19, #24]
   24aa8:	ldrb	w0, [x0, #1]
   24aac:	sub	w0, w0, #0x30
   24ab0:	and	w0, w0, #0xff
   24ab4:	cmp	w0, #0x9
   24ab8:	b.ls	24a9c <__asan_cplus_demangle_type@@Base+0x198>  // b.plast
   24abc:	sub	w2, w2, w1
   24ac0:	mov	x0, x19
   24ac4:	bl	244b8 <__asan_cplus_demangle_fill_name@@Base+0x2c>
   24ac8:	mov	x20, x0
   24acc:	cbnz	x0, 24ae8 <__asan_cplus_demangle_type@@Base+0x1e4>
   24ad0:	mov	x0, #0x0                   	// #0
   24ad4:	b	24a64 <__asan_cplus_demangle_type@@Base+0x160>
   24ad8:	mov	x0, x19
   24adc:	bl	26944 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   24ae0:	b	24ac8 <__asan_cplus_demangle_type@@Base+0x1c4>
   24ae4:	mov	x20, #0x0                   	// #0
   24ae8:	ldr	x0, [x19, #24]
   24aec:	ldrb	w1, [x0]
   24af0:	cmp	w1, #0x5f
   24af4:	b.ne	24ad0 <__asan_cplus_demangle_type@@Base+0x1cc>  // b.any
   24af8:	add	x0, x0, #0x1
   24afc:	str	x0, [x19, #24]
   24b00:	mov	x0, x19
   24b04:	bl	64e0 <__asan_cplus_demangle_type@plt>
   24b08:	mov	x3, x0
   24b0c:	mov	x2, x20
   24b10:	mov	w1, #0x2a                  	// #42
   24b14:	b	24a50 <__asan_cplus_demangle_type@@Base+0x14c>
   24b18:	add	x3, x3, #0x1
   24b1c:	str	x3, [x19, #24]
   24b20:	mov	x0, x19
   24b24:	bl	64e0 <__asan_cplus_demangle_type@plt>
   24b28:	mov	x20, x0
   24b2c:	cbz	x0, 24ad0 <__asan_cplus_demangle_type@@Base+0x1cc>
   24b30:	mov	x0, x19
   24b34:	bl	64e0 <__asan_cplus_demangle_type@plt>
   24b38:	mov	x3, x0
   24b3c:	cbz	x0, 24ad0 <__asan_cplus_demangle_type@@Base+0x1cc>
   24b40:	mov	x2, x20
   24b44:	mov	w1, #0x2b                  	// #43
   24b48:	b	24a50 <__asan_cplus_demangle_type@@Base+0x14c>
   24b4c:	mov	x0, x19
   24b50:	bl	21ff0 <__asan_backtrace_create_state@@Base+0x574>
   24b54:	ldr	x20, [x19, #24]
   24b58:	str	x0, [sp, #72]
   24b5c:	mov	x1, x0
   24b60:	ldrb	w0, [x20]
   24b64:	cmp	w0, #0x49
   24b68:	b.ne	249a8 <__asan_cplus_demangle_type@@Base+0xa4>  // b.any
   24b6c:	ldr	w0, [x19, #80]
   24b70:	cbnz	w0, 24b98 <__asan_cplus_demangle_type@@Base+0x294>
   24b74:	mov	x0, x19
   24b78:	bl	21c50 <__asan_backtrace_create_state@@Base+0x1d4>
   24b7c:	cbz	w0, 24944 <__asan_cplus_demangle_type@@Base+0x40>
   24b80:	ldr	x20, [sp, #72]
   24b84:	mov	x0, x19
   24b88:	bl	26ac0 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   24b8c:	mov	x3, x0
   24b90:	mov	x2, x20
   24b94:	b	24bd8 <__asan_cplus_demangle_type@@Base+0x2d4>
   24b98:	ldr	w23, [x19, #40]
   24b9c:	mov	x0, x19
   24ba0:	ldr	w22, [x19, #56]
   24ba4:	ldr	w21, [x19, #72]
   24ba8:	bl	26ac0 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   24bac:	mov	x4, x0
   24bb0:	ldr	x0, [x19, #24]
   24bb4:	ldrb	w0, [x0]
   24bb8:	cmp	w0, #0x49
   24bbc:	b.ne	24be0 <__asan_cplus_demangle_type@@Base+0x2dc>  // b.any
   24bc0:	ldr	x1, [sp, #72]
   24bc4:	mov	x0, x19
   24bc8:	bl	21c50 <__asan_backtrace_create_state@@Base+0x1d4>
   24bcc:	cbz	w0, 24944 <__asan_cplus_demangle_type@@Base+0x40>
   24bd0:	ldr	x2, [sp, #72]
   24bd4:	mov	x3, x4
   24bd8:	mov	w1, #0x4                   	// #4
   24bdc:	b	24a50 <__asan_cplus_demangle_type@@Base+0x14c>
   24be0:	str	x20, [x19, #24]
   24be4:	str	w23, [x19, #40]
   24be8:	str	w22, [x19, #56]
   24bec:	str	w21, [x19, #72]
   24bf0:	b	249a8 <__asan_cplus_demangle_type@@Base+0xa4>
   24bf4:	ldrb	w0, [x3, #1]
   24bf8:	sub	w0, w0, #0x30
   24bfc:	and	w0, w0, #0xff
   24c00:	cmp	w0, #0x2f
   24c04:	b.hi	24c18 <__asan_cplus_demangle_type@@Base+0x314>  // b.pmore
   24c08:	mov	w1, #0xfffe03ff            	// #-130049
   24c0c:	movk	x1, #0x87ff, lsl #32
   24c10:	lsr	x0, x1, x0
   24c14:	tbnz	w0, #0, 24c38 <__asan_cplus_demangle_type@@Base+0x334>
   24c18:	mov	x0, x19
   24c1c:	bl	256c8 <__asan_cplus_demangle_type@@Base+0xdc4>
   24c20:	str	x0, [sp, #72]
   24c24:	cbz	x0, 249a8 <__asan_cplus_demangle_type@@Base+0xa4>
   24c28:	ldr	w0, [x0]
   24c2c:	cmp	w0, #0x18
   24c30:	b.ne	249a8 <__asan_cplus_demangle_type@@Base+0xa4>  // b.any
   24c34:	b	24a2c <__asan_cplus_demangle_type@@Base+0x128>
   24c38:	mov	x0, x19
   24c3c:	mov	w1, #0x0                   	// #0
   24c40:	bl	2466c <__asan_cplus_demangle_fill_name@@Base+0x1e0>
   24c44:	mov	x20, x0
   24c48:	ldr	x0, [x19, #24]
   24c4c:	str	x20, [sp, #72]
   24c50:	ldrb	w0, [x0]
   24c54:	cmp	w0, #0x49
   24c58:	b.ne	24a2c <__asan_cplus_demangle_type@@Base+0x128>  // b.any
   24c5c:	b	24b84 <__asan_cplus_demangle_type@@Base+0x280>
   24c60:	add	x3, x3, #0x1
   24c64:	str	x3, [x19, #24]
   24c68:	mov	x0, x19
   24c6c:	bl	24904 <__asan_cplus_demangle_type@@Base>
   24c70:	mov	x2, x0
   24c74:	mov	x3, #0x0                   	// #0
   24c78:	mov	w1, #0x24                  	// #36
   24c7c:	b	24a50 <__asan_cplus_demangle_type@@Base+0x14c>
   24c80:	add	x3, x3, #0x1
   24c84:	str	x3, [x19, #24]
   24c88:	mov	x0, x19
   24c8c:	bl	24904 <__asan_cplus_demangle_type@@Base>
   24c90:	mov	x2, x0
   24c94:	mov	x3, #0x0                   	// #0
   24c98:	mov	w1, #0x22                  	// #34
   24c9c:	b	24a50 <__asan_cplus_demangle_type@@Base+0x14c>
   24ca0:	add	x3, x3, #0x1
   24ca4:	str	x3, [x19, #24]
   24ca8:	mov	x0, x19
   24cac:	bl	24904 <__asan_cplus_demangle_type@@Base>
   24cb0:	mov	x2, x0
   24cb4:	mov	x3, #0x0                   	// #0
   24cb8:	mov	w1, #0x23                  	// #35
   24cbc:	b	24a50 <__asan_cplus_demangle_type@@Base+0x14c>
   24cc0:	add	x3, x3, #0x1
   24cc4:	str	x3, [x19, #24]
   24cc8:	mov	x0, x19
   24ccc:	bl	24904 <__asan_cplus_demangle_type@@Base>
   24cd0:	mov	x2, x0
   24cd4:	mov	x3, #0x0                   	// #0
   24cd8:	mov	w1, #0x25                  	// #37
   24cdc:	b	24a50 <__asan_cplus_demangle_type@@Base+0x14c>
   24ce0:	add	x3, x3, #0x1
   24ce4:	str	x3, [x19, #24]
   24ce8:	mov	x0, x19
   24cec:	bl	24904 <__asan_cplus_demangle_type@@Base>
   24cf0:	mov	x2, x0
   24cf4:	mov	x3, #0x0                   	// #0
   24cf8:	mov	w1, #0x26                  	// #38
   24cfc:	b	24a50 <__asan_cplus_demangle_type@@Base+0x14c>
   24d00:	add	x3, x3, #0x1
   24d04:	str	x3, [x19, #24]
   24d08:	mov	x0, x19
   24d0c:	bl	244f4 <__asan_cplus_demangle_fill_name@@Base+0x68>
   24d10:	mov	x20, x0
   24d14:	ldr	x0, [x19, #24]
   24d18:	str	x20, [sp, #72]
   24d1c:	ldrb	w0, [x0]
   24d20:	cmp	w0, #0x49
   24d24:	b.ne	24d48 <__asan_cplus_demangle_type@@Base+0x444>  // b.any
   24d28:	mov	x0, x19
   24d2c:	bl	26ac0 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   24d30:	mov	x2, x20
   24d34:	mov	x3, x0
   24d38:	mov	w1, #0x4                   	// #4
   24d3c:	mov	x0, x19
   24d40:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   24d44:	str	x0, [sp, #72]
   24d48:	mov	x0, x19
   24d4c:	bl	24904 <__asan_cplus_demangle_type@@Base>
   24d50:	mov	w1, #0x21                  	// #33
   24d54:	mov	x2, x0
   24d58:	ldr	x3, [sp, #72]
   24d5c:	b	24a50 <__asan_cplus_demangle_type@@Base+0x14c>
   24d60:	add	x0, x3, #0x1
   24d64:	str	x0, [x19, #24]
   24d68:	ldrb	w0, [x3, #1]
   24d6c:	cbz	w0, 24944 <__asan_cplus_demangle_type@@Base+0x40>
   24d70:	add	x0, x3, #0x2
   24d74:	str	x0, [x19, #24]
   24d78:	ldrb	w0, [x3, #1]
   24d7c:	cmp	w0, #0x46
   24d80:	b.eq	24ed8 <__asan_cplus_demangle_type@@Base+0x5d4>  // b.none
   24d84:	sub	w0, w0, #0x54
   24d88:	and	w1, w0, #0xff
   24d8c:	cmp	w1, #0x22
   24d90:	b.hi	24944 <__asan_cplus_demangle_type@@Base+0x40>  // b.pmore
   24d94:	cmp	w0, #0x22
   24d98:	b.hi	24944 <__asan_cplus_demangle_type@@Base+0x40>  // b.pmore
   24d9c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   24da0:	add	x1, x1, #0x298
   24da4:	ldrh	w0, [x1, w0, uxtw #1]
   24da8:	adr	x1, 24db4 <__asan_cplus_demangle_type@@Base+0x4b0>
   24dac:	add	x0, x1, w0, sxth #2
   24db0:	br	x0
   24db4:	mov	x0, x19
   24db8:	bl	26944 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   24dbc:	mov	x3, #0x0                   	// #0
   24dc0:	mov	x2, x0
   24dc4:	mov	w1, #0x43                  	// #67
   24dc8:	mov	x0, x19
   24dcc:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   24dd0:	str	x0, [sp, #72]
   24dd4:	cbz	x0, 249a8 <__asan_cplus_demangle_type@@Base+0xa4>
   24dd8:	ldr	x0, [x19, #24]
   24ddc:	ldrb	w1, [x0]
   24de0:	cbnz	w1, 24dec <__asan_cplus_demangle_type@@Base+0x4e8>
   24de4:	str	xzr, [sp, #72]
   24de8:	b	249a8 <__asan_cplus_demangle_type@@Base+0xa4>
   24dec:	add	x1, x0, #0x1
   24df0:	str	x1, [x19, #24]
   24df4:	ldrb	w0, [x0]
   24df8:	cmp	w0, #0x45
   24dfc:	b.ne	24de4 <__asan_cplus_demangle_type@@Base+0x4e0>  // b.any
   24e00:	b	249a8 <__asan_cplus_demangle_type@@Base+0xa4>
   24e04:	mov	x0, x19
   24e08:	bl	24904 <__asan_cplus_demangle_type@@Base>
   24e0c:	mov	x3, #0x0                   	// #0
   24e10:	mov	x2, x0
   24e14:	mov	w1, #0x4b                  	// #75
   24e18:	b	24a50 <__asan_cplus_demangle_type@@Base+0x14c>
   24e1c:	adrp	x1, 2c000 <__asan_backtrace_vector_release@@Base+0x1bc4>
   24e20:	add	x1, x1, #0xe3f
   24e24:	mov	w2, #0x4                   	// #4
   24e28:	mov	x0, x19
   24e2c:	bl	244b8 <__asan_cplus_demangle_fill_name@@Base+0x2c>
   24e30:	str	x0, [sp, #72]
   24e34:	b	24a2c <__asan_cplus_demangle_type@@Base+0x128>
   24e38:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   24e3c:	mov	w2, #0xe                   	// #14
   24e40:	add	x1, x1, #0x5cc
   24e44:	b	24e28 <__asan_cplus_demangle_type@@Base+0x524>
   24e48:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   24e4c:	ldr	x1, [x1, #3912]
   24e50:	add	x1, x1, #0x340
   24e54:	mov	x0, x19
   24e58:	bl	21bd0 <__asan_backtrace_create_state@@Base+0x154>
   24e5c:	str	x0, [sp, #72]
   24e60:	ldr	x1, [x0, #8]
   24e64:	ldr	w0, [x19, #72]
   24e68:	ldr	w1, [x1, #8]
   24e6c:	add	w0, w0, w1
   24e70:	str	w0, [x19, #72]
   24e74:	b	24a2c <__asan_cplus_demangle_type@@Base+0x128>
   24e78:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   24e7c:	ldr	x1, [x1, #3912]
   24e80:	add	x1, x1, #0x360
   24e84:	b	24e54 <__asan_cplus_demangle_type@@Base+0x550>
   24e88:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   24e8c:	ldr	x1, [x1, #3912]
   24e90:	add	x1, x1, #0x380
   24e94:	b	24e54 <__asan_cplus_demangle_type@@Base+0x550>
   24e98:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   24e9c:	ldr	x1, [x1, #3912]
   24ea0:	add	x1, x1, #0x3a0
   24ea4:	b	24e54 <__asan_cplus_demangle_type@@Base+0x550>
   24ea8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   24eac:	ldr	x1, [x1, #3912]
   24eb0:	add	x1, x1, #0x3c0
   24eb4:	b	24e54 <__asan_cplus_demangle_type@@Base+0x550>
   24eb8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   24ebc:	ldr	x1, [x1, #3912]
   24ec0:	add	x1, x1, #0x3e0
   24ec4:	b	24e54 <__asan_cplus_demangle_type@@Base+0x550>
   24ec8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   24ecc:	ldr	x1, [x1, #3912]
   24ed0:	add	x1, x1, #0x400
   24ed4:	b	24e54 <__asan_cplus_demangle_type@@Base+0x550>
   24ed8:	mov	x0, x19
   24edc:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   24ee0:	mov	w1, #0x2c                  	// #44
   24ee4:	str	x0, [sp, #72]
   24ee8:	str	w1, [x0]
   24eec:	ldr	x1, [x19, #24]
   24ef0:	ldrb	w1, [x1]
   24ef4:	sub	w1, w1, #0x30
   24ef8:	and	w1, w1, #0xff
   24efc:	cmp	w1, #0x9
   24f00:	cset	w2, ls  // ls = plast
   24f04:	strh	w2, [x0, #16]
   24f08:	b.hi	24f14 <__asan_cplus_demangle_type@@Base+0x610>  // b.pmore
   24f0c:	add	x0, x19, #0x18
   24f10:	bl	21ea8 <__asan_backtrace_create_state@@Base+0x42c>
   24f14:	ldr	x20, [sp, #72]
   24f18:	mov	x0, x19
   24f1c:	bl	24904 <__asan_cplus_demangle_type@@Base>
   24f20:	str	x0, [x20, #8]
   24f24:	ldr	x0, [sp, #72]
   24f28:	ldr	x0, [x0, #8]
   24f2c:	cbz	x0, 24944 <__asan_cplus_demangle_type@@Base+0x40>
   24f30:	add	x0, x19, #0x18
   24f34:	bl	21ea8 <__asan_backtrace_create_state@@Base+0x42c>
   24f38:	ldr	x1, [x19, #24]
   24f3c:	ldrb	w0, [x1]
   24f40:	cbz	w0, 24f50 <__asan_cplus_demangle_type@@Base+0x64c>
   24f44:	add	x0, x1, #0x1
   24f48:	str	x0, [x19, #24]
   24f4c:	ldrb	w0, [x1]
   24f50:	cmp	w0, #0x73
   24f54:	ldr	x0, [sp, #72]
   24f58:	cset	w1, eq  // eq = none
   24f5c:	strh	w1, [x0, #18]
   24f60:	b	24a2c <__asan_cplus_demangle_type@@Base+0x128>
   24f64:	ldrb	w0, [x3, #2]
   24f68:	cmp	w0, #0x5f
   24f6c:	b.ne	24fc8 <__asan_cplus_demangle_type@@Base+0x6c4>  // b.any
   24f70:	add	x3, x3, #0x3
   24f74:	str	x3, [x19, #24]
   24f78:	mov	x0, x19
   24f7c:	bl	26944 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   24f80:	mov	x20, x0
   24f84:	cbz	x0, 24fc0 <__asan_cplus_demangle_type@@Base+0x6bc>
   24f88:	ldr	x0, [x19, #24]
   24f8c:	ldrb	w1, [x0]
   24f90:	cmp	w1, #0x5f
   24f94:	b.ne	24fd4 <__asan_cplus_demangle_type@@Base+0x6d0>  // b.any
   24f98:	add	x0, x0, #0x1
   24f9c:	str	x0, [x19, #24]
   24fa0:	mov	x0, x19
   24fa4:	bl	64e0 <__asan_cplus_demangle_type@plt>
   24fa8:	mov	x3, x0
   24fac:	mov	x2, x20
   24fb0:	mov	x0, x19
   24fb4:	mov	w1, #0x2d                  	// #45
   24fb8:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   24fbc:	mov	x20, x0
   24fc0:	str	x20, [sp, #72]
   24fc4:	b	249a8 <__asan_cplus_demangle_type@@Base+0xa4>
   24fc8:	mov	x0, x19
   24fcc:	bl	21f30 <__asan_backtrace_create_state@@Base+0x4b4>
   24fd0:	b	24f80 <__asan_cplus_demangle_type@@Base+0x67c>
   24fd4:	mov	x20, #0x0                   	// #0
   24fd8:	b	24fc0 <__asan_cplus_demangle_type@@Base+0x6bc>
   24fdc:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   24fe0:	ldr	x1, [x1, #3912]
   24fe4:	add	x1, x1, #0x420
   24fe8:	b	24e54 <__asan_cplus_demangle_type@@Base+0x550>
   24fec:	stp	x29, x30, [sp, #-64]!
   24ff0:	mov	x29, sp
   24ff4:	stp	x19, x20, [sp, #16]
   24ff8:	mov	x19, x0
   24ffc:	add	x20, sp, #0x38
   25000:	str	x21, [sp, #32]
   25004:	mov	w21, #0x4f                  	// #79
   25008:	str	xzr, [sp, #56]
   2500c:	ldr	x1, [x19, #24]
   25010:	ldrb	w0, [x1]
   25014:	cmp	w0, #0x45
   25018:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   2501c:	b.eq	25084 <__asan_cplus_demangle_type@@Base+0x780>  // b.none
   25020:	cmp	w0, #0x2e
   25024:	b.eq	25084 <__asan_cplus_demangle_type@@Base+0x780>  // b.none
   25028:	cmp	w0, #0x52
   2502c:	ccmp	w0, w21, #0x4, ne  // ne = any
   25030:	b.ne	25040 <__asan_cplus_demangle_type@@Base+0x73c>  // b.any
   25034:	ldrb	w0, [x1, #1]
   25038:	cmp	w0, #0x45
   2503c:	b.eq	25084 <__asan_cplus_demangle_type@@Base+0x780>  // b.none
   25040:	mov	x0, x19
   25044:	bl	64e0 <__asan_cplus_demangle_type@plt>
   25048:	mov	x2, x0
   2504c:	cbnz	x0, 25064 <__asan_cplus_demangle_type@@Base+0x760>
   25050:	mov	x0, #0x0                   	// #0
   25054:	ldp	x19, x20, [sp, #16]
   25058:	ldr	x21, [sp, #32]
   2505c:	ldp	x29, x30, [sp], #64
   25060:	ret
   25064:	mov	x0, x19
   25068:	mov	x3, #0x0                   	// #0
   2506c:	mov	w1, #0x2e                  	// #46
   25070:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   25074:	str	x0, [x20]
   25078:	cbz	x0, 25050 <__asan_cplus_demangle_type@@Base+0x74c>
   2507c:	add	x20, x0, #0x10
   25080:	b	2500c <__asan_cplus_demangle_type@@Base+0x708>
   25084:	ldr	x0, [sp, #56]
   25088:	cbz	x0, 25050 <__asan_cplus_demangle_type@@Base+0x74c>
   2508c:	ldr	x1, [x0, #16]
   25090:	cbnz	x1, 25054 <__asan_cplus_demangle_type@@Base+0x750>
   25094:	ldr	x1, [x0, #8]
   25098:	ldr	w2, [x1]
   2509c:	cmp	w2, #0x27
   250a0:	b.ne	25054 <__asan_cplus_demangle_type@@Base+0x750>  // b.any
   250a4:	ldr	x2, [x1, #8]
   250a8:	ldr	w1, [x2, #28]
   250ac:	cmp	w1, #0x9
   250b0:	b.ne	25054 <__asan_cplus_demangle_type@@Base+0x750>  // b.any
   250b4:	ldr	w2, [x2, #8]
   250b8:	ldr	w1, [x19, #72]
   250bc:	sub	w1, w1, w2
   250c0:	str	w1, [x19, #72]
   250c4:	str	xzr, [x0, #8]
   250c8:	b	25054 <__asan_cplus_demangle_type@@Base+0x750>
   250cc:	stp	x29, x30, [sp, #-48]!
   250d0:	mov	x29, sp
   250d4:	stp	x19, x20, [sp, #16]
   250d8:	mov	x19, x0
   250dc:	ldr	x0, [x0, #24]
   250e0:	str	x21, [sp, #32]
   250e4:	ldrb	w2, [x0]
   250e8:	cbz	w2, 250f8 <__asan_cplus_demangle_type@@Base+0x7f4>
   250ec:	add	x1, x0, #0x1
   250f0:	str	x1, [x19, #24]
   250f4:	ldrb	w2, [x0]
   250f8:	ldr	x0, [x19, #24]
   250fc:	ldrb	w3, [x0]
   25100:	cbz	w3, 251c0 <__asan_cplus_demangle_type@@Base+0x8bc>
   25104:	add	x1, x0, #0x1
   25108:	str	x1, [x19, #24]
   2510c:	cmp	w2, #0x76
   25110:	ldrb	w3, [x0]
   25114:	b.ne	25168 <__asan_cplus_demangle_type@@Base+0x864>  // b.any
   25118:	sub	w21, w3, #0x30
   2511c:	and	w0, w21, #0xff
   25120:	cmp	w0, #0x9
   25124:	b.hi	251c0 <__asan_cplus_demangle_type@@Base+0x8bc>  // b.pmore
   25128:	mov	x0, x19
   2512c:	bl	244f4 <__asan_cplus_demangle_fill_name@@Base+0x68>
   25130:	mov	x4, x0
   25134:	mov	x0, x19
   25138:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   2513c:	mov	x20, x0
   25140:	mov	x2, x4
   25144:	mov	w1, w21
   25148:	bl	68b0 <__asan_cplus_demangle_fill_extended_operator@plt>
   2514c:	cbnz	w0, 25154 <__asan_cplus_demangle_type@@Base+0x850>
   25150:	mov	x20, #0x0                   	// #0
   25154:	mov	x0, x20
   25158:	ldp	x19, x20, [sp, #16]
   2515c:	ldr	x21, [sp, #32]
   25160:	ldp	x29, x30, [sp], #48
   25164:	ret
   25168:	cmp	w2, #0x63
   2516c:	mov	w0, #0x76                  	// #118
   25170:	ccmp	w3, w0, #0x0, eq  // eq = none
   25174:	b.ne	251c0 <__asan_cplus_demangle_type@@Base+0x8bc>  // b.any
   25178:	ldp	w0, w21, [x19, #76]
   2517c:	cmp	w0, #0x0
   25180:	cset	w0, eq  // eq = none
   25184:	str	w0, [x19, #80]
   25188:	mov	x0, x19
   2518c:	bl	64e0 <__asan_cplus_demangle_type@plt>
   25190:	mov	x2, x0
   25194:	ldr	w0, [x19, #80]
   25198:	mov	x3, #0x0                   	// #0
   2519c:	cbz	w0, 251b8 <__asan_cplus_demangle_type@@Base+0x8b4>
   251a0:	mov	w1, #0x35                  	// #53
   251a4:	mov	x0, x19
   251a8:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   251ac:	mov	x20, x0
   251b0:	str	w21, [x19, #80]
   251b4:	b	25154 <__asan_cplus_demangle_type@@Base+0x850>
   251b8:	mov	w1, #0x34                  	// #52
   251bc:	b	251a4 <__asan_cplus_demangle_type@@Base+0x8a0>
   251c0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   251c4:	mov	w5, #0x43                  	// #67
   251c8:	mov	w4, #0x0                   	// #0
   251cc:	mov	w7, #0x2                   	// #2
   251d0:	ldr	x1, [x1, #3944]
   251d4:	mov	w8, #0x18                  	// #24
   251d8:	sub	w0, w5, w4
   251dc:	sdiv	w0, w0, w7
   251e0:	add	w0, w0, w4
   251e4:	smull	x6, w0, w8
   251e8:	add	x9, x6, x1
   251ec:	ldr	x6, [x6, x1]
   251f0:	ldrb	w10, [x6]
   251f4:	cmp	w10, w2
   251f8:	b.ne	25228 <__asan_cplus_demangle_type@@Base+0x924>  // b.any
   251fc:	ldrb	w6, [x6, #1]
   25200:	cmp	w6, w3
   25204:	b.ne	25228 <__asan_cplus_demangle_type@@Base+0x924>  // b.any
   25208:	mov	x0, x19
   2520c:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   25210:	mov	x20, x0
   25214:	cbz	x0, 25154 <__asan_cplus_demangle_type@@Base+0x850>
   25218:	mov	w0, #0x32                  	// #50
   2521c:	str	w0, [x20]
   25220:	str	x9, [x20, #8]
   25224:	b	25154 <__asan_cplus_demangle_type@@Base+0x850>
   25228:	b.hi	25234 <__asan_cplus_demangle_type@@Base+0x930>  // b.pmore
   2522c:	add	w4, w0, #0x1
   25230:	mov	w0, w5
   25234:	cmp	w4, w0
   25238:	b.eq	25150 <__asan_cplus_demangle_type@@Base+0x84c>  // b.none
   2523c:	mov	w5, w0
   25240:	b	251d8 <__asan_cplus_demangle_type@@Base+0x8d4>
   25244:	stp	x29, x30, [sp, #-48]!
   25248:	mov	x29, sp
   2524c:	ldr	x3, [x0, #24]
   25250:	stp	x19, x20, [sp, #16]
   25254:	mov	x20, x0
   25258:	str	x21, [sp, #32]
   2525c:	ldrb	w1, [x3]
   25260:	sub	w2, w1, #0x30
   25264:	and	w2, w2, #0xff
   25268:	cmp	w2, #0x9
   2526c:	b.hi	252a0 <__asan_cplus_demangle_type@@Base+0x99c>  // b.pmore
   25270:	bl	244f4 <__asan_cplus_demangle_fill_name@@Base+0x68>
   25274:	mov	x19, x0
   25278:	ldr	x0, [x20, #24]
   2527c:	ldrb	w0, [x0]
   25280:	cmp	w0, #0x42
   25284:	b.ne	25490 <__asan_cplus_demangle_type@@Base+0xb8c>  // b.any
   25288:	mov	x1, x19
   2528c:	mov	x0, x20
   25290:	ldp	x19, x20, [sp, #16]
   25294:	ldr	x21, [sp, #32]
   25298:	ldp	x29, x30, [sp], #48
   2529c:	b	245fc <__asan_cplus_demangle_fill_name@@Base+0x170>
   252a0:	sub	w2, w1, #0x61
   252a4:	and	w2, w2, #0xff
   252a8:	cmp	w2, #0x19
   252ac:	b.hi	25334 <__asan_cplus_demangle_type@@Base+0xa30>  // b.pmore
   252b0:	cmp	w1, #0x6f
   252b4:	b.ne	252cc <__asan_cplus_demangle_type@@Base+0x9c8>  // b.any
   252b8:	ldrb	w0, [x3, #1]
   252bc:	cmp	w0, #0x6e
   252c0:	b.ne	252cc <__asan_cplus_demangle_type@@Base+0x9c8>  // b.any
   252c4:	add	x3, x3, #0x2
   252c8:	str	x3, [x20, #24]
   252cc:	mov	x0, x20
   252d0:	bl	250cc <__asan_cplus_demangle_type@@Base+0x7c8>
   252d4:	mov	x19, x0
   252d8:	cbz	x0, 25384 <__asan_cplus_demangle_type@@Base+0xa80>
   252dc:	ldr	w0, [x0]
   252e0:	cmp	w0, #0x32
   252e4:	b.ne	25278 <__asan_cplus_demangle_type@@Base+0x974>  // b.any
   252e8:	ldr	x2, [x19, #8]
   252ec:	ldr	w0, [x20, #72]
   252f0:	ldr	w1, [x2, #16]
   252f4:	add	w0, w0, #0x7
   252f8:	add	w0, w0, w1
   252fc:	str	w0, [x20, #72]
   25300:	ldr	x0, [x2]
   25304:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   25308:	add	x1, x1, #0x5db
   2530c:	bl	68c0 <__asan_internal_strcmp@plt>
   25310:	cbnz	w0, 25278 <__asan_cplus_demangle_type@@Base+0x974>
   25314:	mov	x0, x20
   25318:	bl	244f4 <__asan_cplus_demangle_fill_name@@Base+0x68>
   2531c:	mov	x2, x19
   25320:	mov	x3, x0
   25324:	mov	w1, #0x37                  	// #55
   25328:	mov	x0, x20
   2532c:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   25330:	b	25274 <__asan_cplus_demangle_type@@Base+0x970>
   25334:	sub	w2, w1, #0x43
   25338:	and	w2, w2, #0xff
   2533c:	cmp	w2, #0x1
   25340:	b.hi	25470 <__asan_cplus_demangle_type@@Base+0xb6c>  // b.pmore
   25344:	ldr	x5, [x0, #64]
   25348:	cbz	x5, 25370 <__asan_cplus_demangle_type@@Base+0xa6c>
   2534c:	ldr	w0, [x5]
   25350:	cbnz	w0, 25368 <__asan_cplus_demangle_type@@Base+0xa64>
   25354:	ldr	w1, [x5, #16]
   25358:	ldr	w0, [x20, #72]
   2535c:	add	w0, w0, w1
   25360:	str	w0, [x20, #72]
   25364:	b	25370 <__asan_cplus_demangle_type@@Base+0xa6c>
   25368:	cmp	w0, #0x18
   2536c:	b.eq	25354 <__asan_cplus_demangle_type@@Base+0xa50>  // b.none
   25370:	ldrb	w0, [x3]
   25374:	cmp	w0, #0x43
   25378:	b.eq	2538c <__asan_cplus_demangle_type@@Base+0xa88>  // b.none
   2537c:	cmp	w0, #0x44
   25380:	b.eq	25400 <__asan_cplus_demangle_type@@Base+0xafc>  // b.none
   25384:	mov	x19, #0x0                   	// #0
   25388:	b	25278 <__asan_cplus_demangle_type@@Base+0x974>
   2538c:	ldrb	w0, [x3, #1]
   25390:	cmp	w0, #0x49
   25394:	b.ne	253f8 <__asan_cplus_demangle_type@@Base+0xaf4>  // b.any
   25398:	add	x3, x3, #0x1
   2539c:	str	x3, [x20, #24]
   253a0:	mov	w3, #0x1                   	// #1
   253a4:	ldr	x0, [x20, #24]
   253a8:	ldrb	w1, [x0, #1]
   253ac:	sub	w2, w1, #0x31
   253b0:	and	w2, w2, #0xff
   253b4:	cmp	w2, #0x4
   253b8:	b.hi	25384 <__asan_cplus_demangle_type@@Base+0xa80>  // b.pmore
   253bc:	add	x0, x0, #0x2
   253c0:	str	x0, [x20, #24]
   253c4:	sub	w21, w1, #0x30
   253c8:	cbz	w3, 253d4 <__asan_cplus_demangle_type@@Base+0xad0>
   253cc:	mov	x0, x20
   253d0:	bl	64e0 <__asan_cplus_demangle_type@plt>
   253d4:	ldr	x4, [x20, #64]
   253d8:	mov	x0, x20
   253dc:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   253e0:	mov	x19, x0
   253e4:	mov	x2, x4
   253e8:	mov	w1, w21
   253ec:	bl	6920 <__asan_cplus_demangle_fill_ctor@plt>
   253f0:	cbnz	w0, 25278 <__asan_cplus_demangle_type@@Base+0x974>
   253f4:	b	25384 <__asan_cplus_demangle_type@@Base+0xa80>
   253f8:	mov	w3, #0x0                   	// #0
   253fc:	b	253a4 <__asan_cplus_demangle_type@@Base+0xaa0>
   25400:	ldrb	w0, [x3, #1]
   25404:	sub	w0, w0, #0x30
   25408:	cmp	w0, #0x5
   2540c:	b.hi	25384 <__asan_cplus_demangle_type@@Base+0xa80>  // b.pmore
   25410:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   25414:	add	x1, x1, #0x2e0
   25418:	ldrb	w0, [x1, w0, uxtw]
   2541c:	adr	x1, 25428 <__asan_cplus_demangle_type@@Base+0xb24>
   25420:	add	x0, x1, w0, sxtb #2
   25424:	br	x0
   25428:	mov	w4, #0x2                   	// #2
   2542c:	add	x3, x3, #0x2
   25430:	str	x3, [x20, #24]
   25434:	mov	x0, x20
   25438:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   2543c:	mov	x19, x0
   25440:	mov	x2, x5
   25444:	mov	w1, w4
   25448:	bl	6af0 <__asan_cplus_demangle_fill_dtor@plt>
   2544c:	b	253f0 <__asan_cplus_demangle_type@@Base+0xaec>
   25450:	mov	w4, #0x3                   	// #3
   25454:	b	2542c <__asan_cplus_demangle_type@@Base+0xb28>
   25458:	mov	w4, #0x4                   	// #4
   2545c:	b	2542c <__asan_cplus_demangle_type@@Base+0xb28>
   25460:	mov	w4, #0x5                   	// #5
   25464:	b	2542c <__asan_cplus_demangle_type@@Base+0xb28>
   25468:	mov	w4, #0x1                   	// #1
   2546c:	b	2542c <__asan_cplus_demangle_type@@Base+0xb28>
   25470:	cmp	w1, #0x4c
   25474:	b.ne	254b4 <__asan_cplus_demangle_type@@Base+0xbb0>  // b.any
   25478:	add	x3, x3, #0x1
   2547c:	str	x3, [x0, #24]
   25480:	bl	244f4 <__asan_cplus_demangle_fill_name@@Base+0x68>
   25484:	mov	x19, x0
   25488:	cbnz	x0, 254a4 <__asan_cplus_demangle_type@@Base+0xba0>
   2548c:	mov	x19, #0x0                   	// #0
   25490:	mov	x0, x19
   25494:	ldp	x19, x20, [sp, #16]
   25498:	ldr	x21, [sp, #32]
   2549c:	ldp	x29, x30, [sp], #48
   254a0:	ret
   254a4:	mov	x0, x20
   254a8:	bl	22190 <__asan_backtrace_create_state@@Base+0x714>
   254ac:	cbnz	w0, 25278 <__asan_cplus_demangle_type@@Base+0x974>
   254b0:	b	2548c <__asan_cplus_demangle_type@@Base+0xb88>
   254b4:	cmp	w1, #0x55
   254b8:	b.ne	2548c <__asan_cplus_demangle_type@@Base+0xb88>  // b.any
   254bc:	ldrb	w1, [x3, #1]
   254c0:	cmp	w1, #0x6c
   254c4:	b.eq	25518 <__asan_cplus_demangle_type@@Base+0xc14>  // b.none
   254c8:	cmp	w1, #0x74
   254cc:	b.ne	2548c <__asan_cplus_demangle_type@@Base+0xb88>  // b.any
   254d0:	add	x1, x3, #0x1
   254d4:	str	x1, [x0, #24]
   254d8:	ldrb	w1, [x3, #1]
   254dc:	cmp	w1, #0x74
   254e0:	b.ne	25384 <__asan_cplus_demangle_type@@Base+0xa80>  // b.any
   254e4:	add	x3, x3, #0x2
   254e8:	str	x3, [x0, #24]
   254ec:	bl	21f6c <__asan_backtrace_create_state@@Base+0x4f0>
   254f0:	sxtw	x4, w0
   254f4:	tbnz	w4, #31, 25384 <__asan_cplus_demangle_type@@Base+0xa80>
   254f8:	mov	x0, x20
   254fc:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   25500:	mov	x19, x0
   25504:	cbz	x0, 25588 <__asan_cplus_demangle_type@@Base+0xc84>
   25508:	mov	w0, #0x48                  	// #72
   2550c:	str	w0, [x19]
   25510:	str	x4, [x19, #8]
   25514:	b	25588 <__asan_cplus_demangle_type@@Base+0xc84>
   25518:	add	x1, x3, #0x1
   2551c:	str	x1, [x0, #24]
   25520:	ldrb	w1, [x3, #1]
   25524:	cmp	w1, #0x6c
   25528:	b.ne	25384 <__asan_cplus_demangle_type@@Base+0xa80>  // b.any
   2552c:	add	x3, x3, #0x2
   25530:	str	x3, [x0, #24]
   25534:	bl	24fec <__asan_cplus_demangle_type@@Base+0x6e8>
   25538:	mov	x9, x0
   2553c:	cbz	x0, 25384 <__asan_cplus_demangle_type@@Base+0xa80>
   25540:	ldr	x0, [x20, #24]
   25544:	ldrb	w1, [x0]
   25548:	cmp	w1, #0x45
   2554c:	b.ne	25384 <__asan_cplus_demangle_type@@Base+0xa80>  // b.any
   25550:	add	x0, x0, #0x1
   25554:	str	x0, [x20, #24]
   25558:	mov	x0, x20
   2555c:	bl	21f6c <__asan_backtrace_create_state@@Base+0x4f0>
   25560:	mov	w4, w0
   25564:	tbnz	w0, #31, 25384 <__asan_cplus_demangle_type@@Base+0xa80>
   25568:	mov	x0, x20
   2556c:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   25570:	mov	x19, x0
   25574:	cbz	x0, 25588 <__asan_cplus_demangle_type@@Base+0xc84>
   25578:	mov	w0, #0x46                  	// #70
   2557c:	str	w0, [x19]
   25580:	str	x9, [x19, #8]
   25584:	str	w4, [x19, #16]
   25588:	mov	x1, x19
   2558c:	mov	x0, x20
   25590:	bl	21c50 <__asan_backtrace_create_state@@Base+0x1d4>
   25594:	b	253f0 <__asan_cplus_demangle_type@@Base+0xaec>
   25598:	stp	x29, x30, [sp, #-32]!
   2559c:	mov	x29, sp
   255a0:	stp	x19, x20, [sp, #16]
   255a4:	mov	x19, x0
   255a8:	ldr	x0, [x0, #24]
   255ac:	ldrb	w2, [x0]
   255b0:	cmp	w2, #0x4a
   255b4:	b.ne	255e0 <__asan_cplus_demangle_type@@Base+0xcdc>  // b.any
   255b8:	add	x0, x0, #0x1
   255bc:	str	x0, [x19, #24]
   255c0:	mov	x0, x19
   255c4:	bl	64e0 <__asan_cplus_demangle_type@plt>
   255c8:	mov	x20, x0
   255cc:	cbnz	x0, 255e8 <__asan_cplus_demangle_type@@Base+0xce4>
   255d0:	mov	x0, #0x0                   	// #0
   255d4:	ldp	x19, x20, [sp, #16]
   255d8:	ldp	x29, x30, [sp], #32
   255dc:	ret
   255e0:	cbnz	w1, 255c0 <__asan_cplus_demangle_type@@Base+0xcbc>
   255e4:	mov	x20, #0x0                   	// #0
   255e8:	mov	x0, x19
   255ec:	bl	24fec <__asan_cplus_demangle_type@@Base+0x6e8>
   255f0:	mov	x3, x0
   255f4:	cbz	x0, 255d0 <__asan_cplus_demangle_type@@Base+0xccc>
   255f8:	mov	x2, x20
   255fc:	mov	x0, x19
   25600:	ldp	x19, x20, [sp, #16]
   25604:	mov	w1, #0x29                  	// #41
   25608:	ldp	x29, x30, [sp], #32
   2560c:	b	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   25610:	stp	x29, x30, [sp, #-32]!
   25614:	mov	x29, sp
   25618:	str	x19, [sp, #16]
   2561c:	mov	x19, x0
   25620:	ldr	w0, [x0, #16]
   25624:	tbnz	w0, #18, 2563c <__asan_cplus_demangle_type@@Base+0xd38>
   25628:	ldr	w0, [x19, #84]
   2562c:	cmp	w0, #0x800
   25630:	b.hi	256c0 <__asan_cplus_demangle_type@@Base+0xdbc>  // b.pmore
   25634:	add	w0, w0, #0x1
   25638:	str	w0, [x19, #84]
   2563c:	ldr	x0, [x19, #24]
   25640:	ldrb	w1, [x0]
   25644:	cmp	w1, #0x46
   25648:	b.eq	25670 <__asan_cplus_demangle_type@@Base+0xd6c>  // b.none
   2564c:	mov	x0, #0x0                   	// #0
   25650:	ldr	w1, [x19, #16]
   25654:	tbnz	w1, #18, 25664 <__asan_cplus_demangle_type@@Base+0xd60>
   25658:	ldr	w1, [x19, #84]
   2565c:	sub	w1, w1, #0x1
   25660:	str	w1, [x19, #84]
   25664:	ldr	x19, [sp, #16]
   25668:	ldp	x29, x30, [sp], #32
   2566c:	ret
   25670:	add	x1, x0, #0x1
   25674:	str	x1, [x19, #24]
   25678:	add	x0, x0, #0x2
   2567c:	ldurb	w2, [x0, #-1]
   25680:	cmp	w2, #0x59
   25684:	csel	x0, x0, x1, eq  // eq = none
   25688:	str	x0, [x19, #24]
   2568c:	mov	w1, #0x1                   	// #1
   25690:	mov	x0, x19
   25694:	bl	25598 <__asan_cplus_demangle_type@@Base+0xc94>
   25698:	mov	x1, x0
   2569c:	mov	x0, x19
   256a0:	bl	21bf8 <__asan_backtrace_create_state@@Base+0x17c>
   256a4:	ldr	x1, [x19, #24]
   256a8:	ldrb	w2, [x1]
   256ac:	cmp	w2, #0x45
   256b0:	b.ne	2564c <__asan_cplus_demangle_type@@Base+0xd48>  // b.any
   256b4:	add	x1, x1, #0x1
   256b8:	str	x1, [x19, #24]
   256bc:	b	25650 <__asan_cplus_demangle_type@@Base+0xd4c>
   256c0:	mov	x0, #0x0                   	// #0
   256c4:	b	25664 <__asan_cplus_demangle_type@@Base+0xd60>
   256c8:	stp	x29, x30, [sp, #-96]!
   256cc:	mov	x29, sp
   256d0:	ldr	x1, [x0, #24]
   256d4:	stp	x19, x20, [sp, #16]
   256d8:	stp	x21, x22, [sp, #32]
   256dc:	stp	x23, x24, [sp, #48]
   256e0:	str	x25, [sp, #64]
   256e4:	ldrb	w2, [x1]
   256e8:	cmp	w2, #0x55
   256ec:	b.eq	25a54 <__asan_cplus_demangle_type@@Base+0x1150>  // b.none
   256f0:	mov	x19, x0
   256f4:	b.hi	25738 <__asan_cplus_demangle_type@@Base+0xe34>  // b.pmore
   256f8:	cmp	w2, #0x4e
   256fc:	b.eq	257dc <__asan_cplus_demangle_type@@Base+0xed8>  // b.none
   25700:	cmp	w2, #0x53
   25704:	b.eq	25a60 <__asan_cplus_demangle_type@@Base+0x115c>  // b.none
   25708:	mov	x0, x19
   2570c:	bl	25244 <__asan_cplus_demangle_type@@Base+0x940>
   25710:	mov	x20, x0
   25714:	ldr	x0, [x19, #24]
   25718:	ldrb	w0, [x0]
   2571c:	cmp	w0, #0x49
   25720:	b.ne	259a8 <__asan_cplus_demangle_type@@Base+0x10a4>  // b.any
   25724:	mov	x1, x20
   25728:	mov	x0, x19
   2572c:	bl	21c50 <__asan_backtrace_create_state@@Base+0x1d4>
   25730:	cbnz	w0, 25a90 <__asan_cplus_demangle_type@@Base+0x118c>
   25734:	b	257f8 <__asan_cplus_demangle_type@@Base+0xef4>
   25738:	cmp	w2, #0x5a
   2573c:	b.ne	25708 <__asan_cplus_demangle_type@@Base+0xe04>  // b.any
   25740:	add	x1, x1, #0x1
   25744:	str	x1, [x0, #24]
   25748:	mov	w1, #0x0                   	// #0
   2574c:	bl	25af8 <__asan_cplus_demangle_type@@Base+0x11f4>
   25750:	mov	x20, x0
   25754:	cbz	x0, 257f8 <__asan_cplus_demangle_type@@Base+0xef4>
   25758:	ldr	x1, [x19, #24]
   2575c:	ldrb	w0, [x1]
   25760:	cmp	w0, #0x45
   25764:	b.ne	257f8 <__asan_cplus_demangle_type@@Base+0xef4>  // b.any
   25768:	add	x0, x1, #0x1
   2576c:	str	x0, [x19, #24]
   25770:	ldrb	w0, [x1, #1]
   25774:	cmp	w0, #0x73
   25778:	b.ne	259c4 <__asan_cplus_demangle_type@@Base+0x10c0>  // b.any
   2577c:	add	x1, x1, #0x2
   25780:	str	x1, [x19, #24]
   25784:	mov	x0, x19
   25788:	bl	22190 <__asan_backtrace_create_state@@Base+0x714>
   2578c:	cbz	w0, 257f8 <__asan_cplus_demangle_type@@Base+0xef4>
   25790:	mov	x0, x19
   25794:	mov	w2, #0xe                   	// #14
   25798:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   2579c:	add	x1, x1, #0x5de
   257a0:	bl	244b8 <__asan_cplus_demangle_fill_name@@Base+0x2c>
   257a4:	mov	x3, x0
   257a8:	ldr	w0, [x20]
   257ac:	cmp	w0, #0x3
   257b0:	b.ne	257c8 <__asan_cplus_demangle_type@@Base+0xec4>  // b.any
   257b4:	ldr	x0, [x20, #16]
   257b8:	ldr	w1, [x0]
   257bc:	cmp	w1, #0x29
   257c0:	b.ne	257c8 <__asan_cplus_demangle_type@@Base+0xec4>  // b.any
   257c4:	str	xzr, [x0, #8]
   257c8:	mov	x2, x20
   257cc:	mov	w1, #0x2                   	// #2
   257d0:	mov	x0, x19
   257d4:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   257d8:	b	25a58 <__asan_cplus_demangle_type@@Base+0x1154>
   257dc:	add	x1, x1, #0x1
   257e0:	str	x1, [x0, #24]
   257e4:	mov	w2, #0x1                   	// #1
   257e8:	add	x1, sp, #0x58
   257ec:	bl	26ba0 <__asan_cplus_demangle_mangled_name@@Base+0xab0>
   257f0:	mov	x21, x0
   257f4:	cbnz	x0, 25800 <__asan_cplus_demangle_type@@Base+0xefc>
   257f8:	mov	x20, #0x0                   	// #0
   257fc:	b	259a8 <__asan_cplus_demangle_type@@Base+0x10a4>
   25800:	mov	x24, #0x3ff                 	// #1023
   25804:	mov	x0, x19
   25808:	mov	x1, #0x0                   	// #0
   2580c:	movk	x24, #0x1008, lsl #16
   25810:	bl	21bf8 <__asan_backtrace_create_state@@Base+0x17c>
   25814:	mov	x22, x0
   25818:	mov	x25, #0x0                   	// #0
   2581c:	mov	w23, #0x1                   	// #1
   25820:	movk	x24, #0x20, lsl #32
   25824:	ldr	x1, [x19, #24]
   25828:	ldrb	w20, [x1]
   2582c:	cbnz	w20, 25838 <__asan_cplus_demangle_type@@Base+0xf34>
   25830:	str	xzr, [x21]
   25834:	b	257f8 <__asan_cplus_demangle_type@@Base+0xef4>
   25838:	cmp	w20, #0x44
   2583c:	b.ne	25890 <__asan_cplus_demangle_type@@Base+0xf8c>  // b.any
   25840:	ldrb	w0, [x1, #1]
   25844:	and	w0, w0, #0xffffffdf
   25848:	and	w0, w0, #0xff
   2584c:	cmp	w0, #0x54
   25850:	mov	x0, x19
   25854:	b.ne	25888 <__asan_cplus_demangle_type@@Base+0xf84>  // b.any
   25858:	bl	64e0 <__asan_cplus_demangle_type@plt>
   2585c:	mov	x4, x0
   25860:	cbnz	x25, 258fc <__asan_cplus_demangle_type@@Base+0xff8>
   25864:	ldr	x0, [x19, #24]
   25868:	ldrb	w0, [x0]
   2586c:	cmp	w0, #0x45
   25870:	b.eq	258e4 <__asan_cplus_demangle_type@@Base+0xfe0>  // b.none
   25874:	mov	x1, x4
   25878:	mov	x0, x19
   2587c:	bl	21c50 <__asan_backtrace_create_state@@Base+0x1d4>
   25880:	cbnz	w0, 258e4 <__asan_cplus_demangle_type@@Base+0xfe0>
   25884:	b	25830 <__asan_cplus_demangle_type@@Base+0xf2c>
   25888:	bl	25244 <__asan_cplus_demangle_type@@Base+0x940>
   2588c:	b	2585c <__asan_cplus_demangle_type@@Base+0xf58>
   25890:	sub	w0, w20, #0x30
   25894:	and	w2, w0, #0xff
   25898:	cmp	w2, #0x26
   2589c:	lsr	x0, x24, x0
   258a0:	sub	w2, w20, #0x61
   258a4:	mvn	x0, x0
   258a8:	and	w2, w2, #0xff
   258ac:	and	w0, w0, #0x1
   258b0:	csel	w0, w0, w23, cc  // cc = lo, ul, last
   258b4:	cmp	w2, #0x19
   258b8:	cset	w2, ls  // ls = plast
   258bc:	eor	w0, w0, #0x1
   258c0:	orr	w0, w2, w0
   258c4:	cbnz	w0, 258ec <__asan_cplus_demangle_type@@Base+0xfe8>
   258c8:	cmp	w20, #0x53
   258cc:	b.ne	25904 <__asan_cplus_demangle_type@@Base+0x1000>  // b.any
   258d0:	mov	x0, x19
   258d4:	mov	w1, #0x1                   	// #1
   258d8:	bl	2466c <__asan_cplus_demangle_fill_name@@Base+0x1e0>
   258dc:	mov	x4, x0
   258e0:	cbnz	x25, 258fc <__asan_cplus_demangle_type@@Base+0xff8>
   258e4:	mov	x25, x4
   258e8:	b	25824 <__asan_cplus_demangle_type@@Base+0xf20>
   258ec:	mov	x0, x19
   258f0:	bl	25244 <__asan_cplus_demangle_type@@Base+0x940>
   258f4:	mov	x4, x0
   258f8:	cbz	x25, 25934 <__asan_cplus_demangle_type@@Base+0x1030>
   258fc:	mov	w1, #0x1                   	// #1
   25900:	b	25920 <__asan_cplus_demangle_type@@Base+0x101c>
   25904:	cmp	w20, #0x49
   25908:	b.ne	25940 <__asan_cplus_demangle_type@@Base+0x103c>  // b.any
   2590c:	cbz	x25, 25830 <__asan_cplus_demangle_type@@Base+0xf2c>
   25910:	mov	x0, x19
   25914:	bl	26ac0 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   25918:	mov	x4, x0
   2591c:	mov	w1, #0x4                   	// #4
   25920:	mov	x3, x4
   25924:	mov	x2, x25
   25928:	mov	x0, x19
   2592c:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   25930:	mov	x4, x0
   25934:	cmp	w20, #0x53
   25938:	b.ne	25864 <__asan_cplus_demangle_type@@Base+0xf60>  // b.any
   2593c:	b	258e4 <__asan_cplus_demangle_type@@Base+0xfe0>
   25940:	cmp	w20, #0x54
   25944:	b.ne	25954 <__asan_cplus_demangle_type@@Base+0x1050>  // b.any
   25948:	mov	x0, x19
   2594c:	bl	21ff0 <__asan_backtrace_create_state@@Base+0x574>
   25950:	b	2585c <__asan_cplus_demangle_type@@Base+0xf58>
   25954:	cmp	w20, #0x45
   25958:	b.eq	25978 <__asan_cplus_demangle_type@@Base+0x1074>  // b.none
   2595c:	cmp	w20, #0x4d
   25960:	b.ne	25830 <__asan_cplus_demangle_type@@Base+0xf2c>  // b.any
   25964:	cbz	x25, 25830 <__asan_cplus_demangle_type@@Base+0xf2c>
   25968:	add	x1, x1, #0x1
   2596c:	mov	x4, x25
   25970:	str	x1, [x19, #24]
   25974:	b	258e4 <__asan_cplus_demangle_type@@Base+0xfe0>
   25978:	str	x25, [x21]
   2597c:	cbz	x25, 257f8 <__asan_cplus_demangle_type@@Base+0xef4>
   25980:	cbz	x22, 25990 <__asan_cplus_demangle_type@@Base+0x108c>
   25984:	ldr	x0, [sp, #88]
   25988:	str	x0, [x22, #8]
   2598c:	str	x22, [sp, #88]
   25990:	ldrb	w0, [x1]
   25994:	cmp	w0, #0x45
   25998:	b.ne	257f8 <__asan_cplus_demangle_type@@Base+0xef4>  // b.any
   2599c:	ldr	x20, [sp, #88]
   259a0:	add	x1, x1, #0x1
   259a4:	str	x1, [x19, #24]
   259a8:	mov	x0, x20
   259ac:	ldp	x19, x20, [sp, #16]
   259b0:	ldp	x21, x22, [sp, #32]
   259b4:	ldp	x23, x24, [sp, #48]
   259b8:	ldr	x25, [sp, #64]
   259bc:	ldp	x29, x30, [sp], #96
   259c0:	ret
   259c4:	cmp	w0, #0x64
   259c8:	b.ne	25a04 <__asan_cplus_demangle_type@@Base+0x1100>  // b.any
   259cc:	add	x1, x1, #0x2
   259d0:	str	x1, [x19, #24]
   259d4:	mov	x0, x19
   259d8:	bl	21f6c <__asan_backtrace_create_state@@Base+0x4f0>
   259dc:	mov	w21, w0
   259e0:	tbnz	w0, #31, 257f8 <__asan_cplus_demangle_type@@Base+0xef4>
   259e4:	mov	x0, x19
   259e8:	bl	256c8 <__asan_cplus_demangle_type@@Base+0xdc4>
   259ec:	mov	x10, x0
   259f0:	cbnz	x0, 25a0c <__asan_cplus_demangle_type@@Base+0x1108>
   259f4:	cmn	w21, #0x1
   259f8:	b.ne	25a30 <__asan_cplus_demangle_type@@Base+0x112c>  // b.any
   259fc:	mov	x3, x10
   25a00:	b	257a8 <__asan_cplus_demangle_type@@Base+0xea4>
   25a04:	mov	w21, #0xffffffff            	// #-1
   25a08:	b	259e4 <__asan_cplus_demangle_type@@Base+0x10e0>
   25a0c:	ldr	w0, [x0]
   25a10:	cmp	w0, #0x46
   25a14:	b.eq	259f4 <__asan_cplus_demangle_type@@Base+0x10f0>  // b.none
   25a18:	cmp	w0, #0x48
   25a1c:	b.eq	259f4 <__asan_cplus_demangle_type@@Base+0x10f0>  // b.none
   25a20:	mov	x0, x19
   25a24:	bl	22190 <__asan_backtrace_create_state@@Base+0x714>
   25a28:	cbnz	w0, 259f4 <__asan_cplus_demangle_type@@Base+0x10f0>
   25a2c:	b	257f8 <__asan_cplus_demangle_type@@Base+0xef4>
   25a30:	mov	x0, x19
   25a34:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   25a38:	mov	x3, x0
   25a3c:	cbz	x0, 257a8 <__asan_cplus_demangle_type@@Base+0xea4>
   25a40:	mov	w0, #0x47                  	// #71
   25a44:	str	w0, [x3]
   25a48:	str	x10, [x3, #8]
   25a4c:	str	w21, [x3, #16]
   25a50:	b	257a8 <__asan_cplus_demangle_type@@Base+0xea4>
   25a54:	bl	25244 <__asan_cplus_demangle_type@@Base+0x940>
   25a58:	mov	x20, x0
   25a5c:	b	259a8 <__asan_cplus_demangle_type@@Base+0x10a4>
   25a60:	ldrb	w2, [x1, #1]
   25a64:	cmp	w2, #0x74
   25a68:	b.eq	25aa8 <__asan_cplus_demangle_type@@Base+0x11a4>  // b.none
   25a6c:	mov	w1, #0x0                   	// #0
   25a70:	bl	2466c <__asan_cplus_demangle_fill_name@@Base+0x1e0>
   25a74:	mov	x20, x0
   25a78:	mov	w0, #0x1                   	// #1
   25a7c:	ldr	x1, [x19, #24]
   25a80:	ldrb	w1, [x1]
   25a84:	cmp	w1, #0x49
   25a88:	b.ne	259a8 <__asan_cplus_demangle_type@@Base+0x10a4>  // b.any
   25a8c:	cbz	w0, 25724 <__asan_cplus_demangle_type@@Base+0xe20>
   25a90:	mov	x0, x19
   25a94:	bl	26ac0 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   25a98:	mov	x2, x20
   25a9c:	mov	x3, x0
   25aa0:	mov	w1, #0x4                   	// #4
   25aa4:	b	257d0 <__asan_cplus_demangle_type@@Base+0xecc>
   25aa8:	add	x1, x1, #0x2
   25aac:	str	x1, [x0, #24]
   25ab0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   25ab4:	add	x1, x1, #0x5ed
   25ab8:	mov	w2, #0x3                   	// #3
   25abc:	bl	244b8 <__asan_cplus_demangle_fill_name@@Base+0x2c>
   25ac0:	mov	x20, x0
   25ac4:	mov	x0, x19
   25ac8:	bl	25244 <__asan_cplus_demangle_type@@Base+0x940>
   25acc:	mov	x3, x0
   25ad0:	mov	x2, x20
   25ad4:	mov	x0, x19
   25ad8:	mov	w1, #0x1                   	// #1
   25adc:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   25ae0:	mov	x20, x0
   25ae4:	ldr	w0, [x19, #72]
   25ae8:	add	w0, w0, #0x3
   25aec:	str	w0, [x19, #72]
   25af0:	mov	w0, #0x0                   	// #0
   25af4:	b	25a7c <__asan_cplus_demangle_type@@Base+0x1178>
   25af8:	stp	x29, x30, [sp, #-64]!
   25afc:	mov	w3, #0x54                  	// #84
   25b00:	mov	x29, sp
   25b04:	ldr	x2, [x0, #24]
   25b08:	stp	x19, x20, [sp, #16]
   25b0c:	mov	x19, x0
   25b10:	stp	x21, x22, [sp, #32]
   25b14:	mov	w21, w1
   25b18:	str	x23, [sp, #48]
   25b1c:	ldrb	w1, [x2]
   25b20:	cmp	w1, #0x47
   25b24:	ccmp	w1, w3, #0x4, ne  // ne = any
   25b28:	b.ne	25fac <__asan_cplus_demangle_type@@Base+0x16a8>  // b.any
   25b2c:	ldr	w3, [x0, #72]
   25b30:	add	w1, w3, #0x14
   25b34:	str	w1, [x0, #72]
   25b38:	ldrb	w1, [x2]
   25b3c:	cmp	w1, #0x54
   25b40:	b.ne	25b70 <__asan_cplus_demangle_type@@Base+0x126c>  // b.any
   25b44:	add	x1, x2, #0x1
   25b48:	str	x1, [x0, #24]
   25b4c:	ldrb	w1, [x2, #1]
   25b50:	cbnz	w1, 25bd0 <__asan_cplus_demangle_type@@Base+0x12cc>
   25b54:	mov	x20, #0x0                   	// #0
   25b58:	mov	x0, x20
   25b5c:	ldp	x19, x20, [sp, #16]
   25b60:	ldp	x21, x22, [sp, #32]
   25b64:	ldr	x23, [sp, #48]
   25b68:	ldp	x29, x30, [sp], #64
   25b6c:	ret
   25b70:	cmp	w1, #0x47
   25b74:	b.ne	25b54 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   25b78:	add	x1, x2, #0x1
   25b7c:	str	x1, [x0, #24]
   25b80:	ldrb	w1, [x2, #1]
   25b84:	cbz	w1, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25b88:	add	x1, x2, #0x2
   25b8c:	str	x1, [x0, #24]
   25b90:	ldrb	w1, [x2, #1]
   25b94:	cmp	w1, #0x54
   25b98:	b.eq	25ef8 <__asan_cplus_demangle_type@@Base+0x15f4>  // b.none
   25b9c:	b.hi	25df8 <__asan_cplus_demangle_type@@Base+0x14f4>  // b.pmore
   25ba0:	cmp	w1, #0x41
   25ba4:	b.eq	25ee0 <__asan_cplus_demangle_type@@Base+0x15dc>  // b.none
   25ba8:	cmp	w1, #0x52
   25bac:	b.ne	25b54 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   25bb0:	bl	256c8 <__asan_cplus_demangle_type@@Base+0xdc4>
   25bb4:	mov	x9, x0
   25bb8:	mov	x0, x19
   25bbc:	bl	21f30 <__asan_backtrace_create_state@@Base+0x4b4>
   25bc0:	mov	x3, x0
   25bc4:	mov	x2, x9
   25bc8:	mov	w1, #0x16                  	// #22
   25bcc:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25bd0:	add	x1, x2, #0x2
   25bd4:	str	x1, [x0, #24]
   25bd8:	ldrb	w1, [x2, #1]
   25bdc:	cmp	w1, #0x57
   25be0:	b.hi	25c10 <__asan_cplus_demangle_type@@Base+0x130c>  // b.pmore
   25be4:	cmp	w1, #0x40
   25be8:	b.ls	25b54 <__asan_cplus_demangle_type@@Base+0x1250>  // b.plast
   25bec:	sub	w1, w1, #0x41
   25bf0:	cmp	w1, #0x16
   25bf4:	b.hi	25b54 <__asan_cplus_demangle_type@@Base+0x1250>  // b.pmore
   25bf8:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   25bfc:	add	x0, x0, #0x2e8
   25c00:	ldrb	w0, [x0, w1, uxtw]
   25c04:	adr	x1, 25c10 <__asan_cplus_demangle_type@@Base+0x130c>
   25c08:	add	x0, x1, w0, sxtb #2
   25c0c:	br	x0
   25c10:	cmp	w1, #0x68
   25c14:	b.eq	25ce4 <__asan_cplus_demangle_type@@Base+0x13e0>  // b.none
   25c18:	cmp	w1, #0x76
   25c1c:	b.eq	25d08 <__asan_cplus_demangle_type@@Base+0x1404>  // b.none
   25c20:	cmp	w1, #0x63
   25c24:	b.ne	25b54 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   25c28:	mov	w1, #0x0                   	// #0
   25c2c:	bl	22050 <__asan_backtrace_create_state@@Base+0x5d4>
   25c30:	cbz	w0, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25c34:	mov	x0, x19
   25c38:	mov	w1, #0x0                   	// #0
   25c3c:	bl	22050 <__asan_backtrace_create_state@@Base+0x5d4>
   25c40:	cbz	w0, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25c44:	mov	w1, #0x0                   	// #0
   25c48:	mov	x0, x19
   25c4c:	bl	25af8 <__asan_cplus_demangle_type@@Base+0x11f4>
   25c50:	mov	x2, x0
   25c54:	mov	x3, #0x0                   	// #0
   25c58:	mov	w1, #0x11                  	// #17
   25c5c:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25c60:	add	w3, w3, #0xf
   25c64:	str	w3, [x19, #72]
   25c68:	mov	x0, x19
   25c6c:	bl	64e0 <__asan_cplus_demangle_type@plt>
   25c70:	mov	x2, x0
   25c74:	mov	x3, #0x0                   	// #0
   25c78:	mov	w1, #0x9                   	// #9
   25c7c:	mov	x0, x19
   25c80:	ldp	x19, x20, [sp, #16]
   25c84:	ldp	x21, x22, [sp, #32]
   25c88:	ldr	x23, [sp, #48]
   25c8c:	ldp	x29, x30, [sp], #64
   25c90:	b	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   25c94:	add	w3, w3, #0xa
   25c98:	str	w3, [x19, #72]
   25c9c:	mov	x0, x19
   25ca0:	bl	64e0 <__asan_cplus_demangle_type@plt>
   25ca4:	mov	x2, x0
   25ca8:	mov	x3, #0x0                   	// #0
   25cac:	mov	w1, #0xa                   	// #10
   25cb0:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25cb4:	mov	x0, x19
   25cb8:	bl	64e0 <__asan_cplus_demangle_type@plt>
   25cbc:	mov	x3, #0x0                   	// #0
   25cc0:	mov	x2, x0
   25cc4:	mov	w1, #0xc                   	// #12
   25cc8:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25ccc:	mov	x0, x19
   25cd0:	bl	64e0 <__asan_cplus_demangle_type@plt>
   25cd4:	mov	x3, #0x0                   	// #0
   25cd8:	mov	x2, x0
   25cdc:	mov	w1, #0xd                   	// #13
   25ce0:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25ce4:	bl	22050 <__asan_backtrace_create_state@@Base+0x5d4>
   25ce8:	cbz	w0, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25cec:	mov	w1, #0x0                   	// #0
   25cf0:	mov	x0, x19
   25cf4:	bl	25af8 <__asan_cplus_demangle_type@@Base+0x11f4>
   25cf8:	mov	x2, x0
   25cfc:	mov	x3, #0x0                   	// #0
   25d00:	mov	w1, #0xf                   	// #15
   25d04:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25d08:	bl	22050 <__asan_backtrace_create_state@@Base+0x5d4>
   25d0c:	cbz	w0, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25d10:	mov	w1, #0x0                   	// #0
   25d14:	mov	x0, x19
   25d18:	bl	25af8 <__asan_cplus_demangle_type@@Base+0x11f4>
   25d1c:	mov	x2, x0
   25d20:	mov	x3, #0x0                   	// #0
   25d24:	mov	w1, #0x10                  	// #16
   25d28:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25d2c:	mov	x0, x19
   25d30:	bl	64e0 <__asan_cplus_demangle_type@plt>
   25d34:	mov	x20, x0
   25d38:	add	x0, x19, #0x18
   25d3c:	bl	21ea8 <__asan_backtrace_create_state@@Base+0x42c>
   25d40:	tbnz	w0, #31, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25d44:	ldr	x1, [x19, #24]
   25d48:	ldrb	w0, [x1]
   25d4c:	cmp	w0, #0x5f
   25d50:	b.ne	25b54 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   25d54:	add	x1, x1, #0x1
   25d58:	str	x1, [x19, #24]
   25d5c:	mov	x0, x19
   25d60:	bl	64e0 <__asan_cplus_demangle_type@plt>
   25d64:	mov	x2, x0
   25d68:	ldr	w1, [x19, #72]
   25d6c:	mov	x3, x20
   25d70:	add	w1, w1, #0x5
   25d74:	str	w1, [x19, #72]
   25d78:	mov	w1, #0xb                   	// #11
   25d7c:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25d80:	mov	x0, x19
   25d84:	bl	64e0 <__asan_cplus_demangle_type@plt>
   25d88:	mov	x3, #0x0                   	// #0
   25d8c:	mov	x2, x0
   25d90:	mov	w1, #0xe                   	// #14
   25d94:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25d98:	mov	x0, x19
   25d9c:	bl	64e0 <__asan_cplus_demangle_type@plt>
   25da0:	mov	x3, #0x0                   	// #0
   25da4:	mov	x2, x0
   25da8:	mov	w1, #0x12                  	// #18
   25dac:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25db0:	mov	x0, x19
   25db4:	bl	256c8 <__asan_cplus_demangle_type@@Base+0xdc4>
   25db8:	mov	x3, #0x0                   	// #0
   25dbc:	mov	x2, x0
   25dc0:	mov	w1, #0x14                  	// #20
   25dc4:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25dc8:	mov	x0, x19
   25dcc:	bl	256c8 <__asan_cplus_demangle_type@@Base+0xdc4>
   25dd0:	mov	x3, #0x0                   	// #0
   25dd4:	mov	x2, x0
   25dd8:	mov	w1, #0x15                  	// #21
   25ddc:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25de0:	mov	x0, x19
   25de4:	bl	26974 <__asan_cplus_demangle_mangled_name@@Base+0x884>
   25de8:	mov	x3, #0x0                   	// #0
   25dec:	mov	x2, x0
   25df0:	mov	w1, #0x30                  	// #48
   25df4:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25df8:	cmp	w1, #0x56
   25dfc:	b.eq	25ecc <__asan_cplus_demangle_type@@Base+0x15c8>  // b.none
   25e00:	cmp	w1, #0x72
   25e04:	b.ne	25b54 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   25e08:	add	x0, x0, #0x18
   25e0c:	bl	21ea8 <__asan_backtrace_create_state@@Base+0x42c>
   25e10:	cmp	w0, #0x1
   25e14:	b.le	25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25e18:	ldr	x1, [x19, #24]
   25e1c:	ldrb	w2, [x1]
   25e20:	cbz	w2, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25e24:	add	x7, x1, #0x1
   25e28:	str	x7, [x19, #24]
   25e2c:	ldrb	w1, [x1]
   25e30:	cmp	w1, #0x5f
   25e34:	b.ne	25b54 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   25e38:	sub	w20, w0, #0x1
   25e3c:	mov	x23, #0x0                   	// #0
   25e40:	mov	w21, #0x41                  	// #65
   25e44:	ldrb	w0, [x7]
   25e48:	cbz	w0, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25e4c:	cmp	w0, #0x24
   25e50:	b.ne	25f60 <__asan_cplus_demangle_type@@Base+0x165c>  // b.any
   25e54:	ldrb	w4, [x7, #1]
   25e58:	cmp	w4, #0x53
   25e5c:	b.eq	25f50 <__asan_cplus_demangle_type@@Base+0x164c>  // b.none
   25e60:	cmp	w4, #0x5f
   25e64:	b.eq	25f58 <__asan_cplus_demangle_type@@Base+0x1654>  // b.none
   25e68:	cmp	w4, #0x24
   25e6c:	b.ne	25b54 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   25e70:	mov	x0, x19
   25e74:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   25e78:	cbz	x0, 25e84 <__asan_cplus_demangle_type@@Base+0x1580>
   25e7c:	str	w21, [x0]
   25e80:	str	w4, [x0, #8]
   25e84:	ldr	x7, [x19, #24]
   25e88:	sub	w20, w20, #0x2
   25e8c:	add	x7, x7, #0x2
   25e90:	str	x7, [x19, #24]
   25e94:	cbz	x0, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25e98:	cbz	x23, 25eb4 <__asan_cplus_demangle_type@@Base+0x15b0>
   25e9c:	mov	x3, x0
   25ea0:	mov	x2, x23
   25ea4:	mov	x0, x19
   25ea8:	mov	w1, #0x40                  	// #64
   25eac:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   25eb0:	cbz	x0, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25eb4:	cmp	w20, #0x0
   25eb8:	b.gt	25f48 <__asan_cplus_demangle_type@@Base+0x1644>
   25ebc:	mov	x2, x0
   25ec0:	mov	x3, #0x0                   	// #0
   25ec4:	mov	w1, #0x3f                  	// #63
   25ec8:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25ecc:	bl	256c8 <__asan_cplus_demangle_type@@Base+0xdc4>
   25ed0:	mov	x2, x0
   25ed4:	mov	x3, #0x0                   	// #0
   25ed8:	mov	w1, #0x13                  	// #19
   25edc:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25ee0:	mov	w1, #0x0                   	// #0
   25ee4:	bl	25af8 <__asan_cplus_demangle_type@@Base+0x11f4>
   25ee8:	mov	x3, #0x0                   	// #0
   25eec:	mov	x2, x0
   25ef0:	mov	w1, #0x17                  	// #23
   25ef4:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25ef8:	ldrb	w1, [x2, #2]
   25efc:	cbz	w1, 25f2c <__asan_cplus_demangle_type@@Base+0x1628>
   25f00:	add	x1, x2, #0x3
   25f04:	str	x1, [x0, #24]
   25f08:	ldrb	w1, [x2, #2]
   25f0c:	cmp	w1, #0x6e
   25f10:	b.ne	25f2c <__asan_cplus_demangle_type@@Base+0x1628>  // b.any
   25f14:	mov	w1, #0x0                   	// #0
   25f18:	bl	25af8 <__asan_cplus_demangle_type@@Base+0x11f4>
   25f1c:	mov	x3, #0x0                   	// #0
   25f20:	mov	x2, x0
   25f24:	mov	w1, #0x4a                  	// #74
   25f28:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25f2c:	mov	w1, #0x0                   	// #0
   25f30:	mov	x0, x19
   25f34:	bl	25af8 <__asan_cplus_demangle_type@@Base+0x11f4>
   25f38:	mov	x2, x0
   25f3c:	mov	x3, #0x0                   	// #0
   25f40:	mov	w1, #0x49                  	// #73
   25f44:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   25f48:	mov	x23, x0
   25f4c:	b	25e44 <__asan_cplus_demangle_type@@Base+0x1540>
   25f50:	mov	w4, #0x2f                  	// #47
   25f54:	b	25e70 <__asan_cplus_demangle_type@@Base+0x156c>
   25f58:	mov	w4, #0x2e                  	// #46
   25f5c:	b	25e70 <__asan_cplus_demangle_type@@Base+0x156c>
   25f60:	mov	x0, #0x0                   	// #0
   25f64:	ldrb	w1, [x7, x0]
   25f68:	mov	w22, w0
   25f6c:	cbz	w1, 25f88 <__asan_cplus_demangle_type@@Base+0x1684>
   25f70:	cmp	w1, #0x24
   25f74:	b.eq	25f88 <__asan_cplus_demangle_type@@Base+0x1684>  // b.none
   25f78:	add	x0, x0, #0x1
   25f7c:	add	w22, w22, #0x1
   25f80:	cmp	w20, w0
   25f84:	b.gt	25f64 <__asan_cplus_demangle_type@@Base+0x1660>
   25f88:	mov	x1, x7
   25f8c:	mov	w2, w22
   25f90:	mov	x0, x19
   25f94:	bl	244b8 <__asan_cplus_demangle_fill_name@@Base+0x2c>
   25f98:	ldr	x7, [x19, #24]
   25f9c:	sub	w20, w20, w22
   25fa0:	add	x7, x7, w22, sxtw
   25fa4:	str	x7, [x19, #24]
   25fa8:	b	25e94 <__asan_cplus_demangle_type@@Base+0x1590>
   25fac:	bl	256c8 <__asan_cplus_demangle_type@@Base+0xdc4>
   25fb0:	mov	x20, x0
   25fb4:	cbz	x0, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   25fb8:	cbz	w21, 25fc4 <__asan_cplus_demangle_type@@Base+0x16c0>
   25fbc:	ldr	w0, [x19, #16]
   25fc0:	tbz	w0, #0, 26014 <__asan_cplus_demangle_type@@Base+0x1710>
   25fc4:	ldr	x0, [x19, #24]
   25fc8:	ldrb	w0, [x0]
   25fcc:	cmp	w0, #0x45
   25fd0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   25fd4:	b.eq	25b58 <__asan_cplus_demangle_type@@Base+0x1254>  // b.none
   25fd8:	mov	x3, #0x1f                  	// #31
   25fdc:	mov	x2, x20
   25fe0:	mov	x1, #0x1                   	// #1
   25fe4:	movk	x3, #0x1a, lsl #48
   25fe8:	ldr	w0, [x2]
   25fec:	cmp	w0, #0x4
   25ff0:	b.eq	26068 <__asan_cplus_demangle_type@@Base+0x1764>  // b.none
   25ff4:	b.hi	26048 <__asan_cplus_demangle_type@@Base+0x1744>  // b.pmore
   25ff8:	cmp	w0, #0x2
   25ffc:	b.ne	26008 <__asan_cplus_demangle_type@@Base+0x1704>  // b.any
   26000:	ldr	x2, [x2, #16]
   26004:	cbnz	x2, 25fe8 <__asan_cplus_demangle_type@@Base+0x16e4>
   26008:	mov	w1, #0x0                   	// #0
   2600c:	b	260a4 <__asan_cplus_demangle_type@@Base+0x17a0>
   26010:	ldr	x20, [x20, #8]
   26014:	ldr	w2, [x20]
   26018:	mov	w0, w2
   2601c:	bl	21afc <__asan_backtrace_create_state@@Base+0x80>
   26020:	cbnz	w0, 26010 <__asan_cplus_demangle_type@@Base+0x170c>
   26024:	cmp	w2, #0x2
   26028:	b.ne	25b58 <__asan_cplus_demangle_type@@Base+0x1254>  // b.any
   2602c:	ldr	x2, [x20, #16]
   26030:	ldr	w0, [x2]
   26034:	bl	21afc <__asan_backtrace_create_state@@Base+0x80>
   26038:	cbz	w0, 25b58 <__asan_cplus_demangle_type@@Base+0x1254>
   2603c:	ldr	x0, [x2, #8]
   26040:	str	x0, [x20, #16]
   26044:	b	2602c <__asan_cplus_demangle_type@@Base+0x1728>
   26048:	sub	w0, w0, #0x1c
   2604c:	cmp	w0, #0x34
   26050:	b.hi	26008 <__asan_cplus_demangle_type@@Base+0x1704>  // b.pmore
   26054:	lsl	x0, x1, x0
   26058:	tst	x0, x3
   2605c:	b.eq	26008 <__asan_cplus_demangle_type@@Base+0x1704>  // b.none
   26060:	ldr	x2, [x2, #8]
   26064:	b	26004 <__asan_cplus_demangle_type@@Base+0x1700>
   26068:	ldr	x1, [x2, #8]
   2606c:	cbz	x1, 26090 <__asan_cplus_demangle_type@@Base+0x178c>
   26070:	ldr	w0, [x1]
   26074:	cmp	w0, #0x8
   26078:	b.hi	26098 <__asan_cplus_demangle_type@@Base+0x1794>  // b.pmore
   2607c:	cmp	w0, #0x6
   26080:	b.hi	260e8 <__asan_cplus_demangle_type@@Base+0x17e4>  // b.pmore
   26084:	sub	w0, w0, #0x1
   26088:	cmp	w0, #0x1
   2608c:	b.ls	260e0 <__asan_cplus_demangle_type@@Base+0x17dc>  // b.plast
   26090:	mov	w0, #0x0                   	// #0
   26094:	b	260a0 <__asan_cplus_demangle_type@@Base+0x179c>
   26098:	cmp	w0, #0x35
   2609c:	cset	w0, eq  // eq = none
   260a0:	eor	w1, w0, #0x1
   260a4:	mov	x0, x19
   260a8:	bl	25598 <__asan_cplus_demangle_type@@Base+0xc94>
   260ac:	mov	x3, x0
   260b0:	cbz	x0, 25b54 <__asan_cplus_demangle_type@@Base+0x1250>
   260b4:	cbnz	w21, 260d4 <__asan_cplus_demangle_type@@Base+0x17d0>
   260b8:	ldr	w0, [x20]
   260bc:	cmp	w0, #0x2
   260c0:	b.ne	260d4 <__asan_cplus_demangle_type@@Base+0x17d0>  // b.any
   260c4:	ldr	w0, [x3]
   260c8:	cmp	w0, #0x29
   260cc:	b.ne	260d4 <__asan_cplus_demangle_type@@Base+0x17d0>  // b.any
   260d0:	str	xzr, [x3, #8]
   260d4:	mov	x2, x20
   260d8:	mov	w1, #0x3                   	// #3
   260dc:	b	25c7c <__asan_cplus_demangle_type@@Base+0x1378>
   260e0:	ldr	x1, [x1, #16]
   260e4:	b	2606c <__asan_cplus_demangle_type@@Base+0x1768>
   260e8:	mov	w0, #0x1                   	// #1
   260ec:	b	260a0 <__asan_cplus_demangle_type@@Base+0x179c>

00000000000260f0 <__asan_cplus_demangle_mangled_name@@Base>:
   260f0:	stp	x29, x30, [sp, #-48]!
   260f4:	mov	x29, sp
   260f8:	stp	x19, x20, [sp, #16]
   260fc:	mov	x19, x0
   26100:	ldr	x0, [x0, #24]
   26104:	str	x21, [sp, #32]
   26108:	mov	w21, w1
   2610c:	ldrb	w1, [x0]
   26110:	cmp	w1, #0x5f
   26114:	b.ne	26194 <__asan_cplus_demangle_mangled_name@@Base+0xa4>  // b.any
   26118:	add	x0, x0, #0x1
   2611c:	str	x0, [x19, #24]
   26120:	ldr	x0, [x19, #24]
   26124:	ldrb	w1, [x0]
   26128:	cmp	w1, #0x5a
   2612c:	b.ne	26198 <__asan_cplus_demangle_mangled_name@@Base+0xa8>  // b.any
   26130:	add	x0, x0, #0x1
   26134:	str	x0, [x19, #24]
   26138:	mov	w1, w21
   2613c:	mov	x0, x19
   26140:	bl	25af8 <__asan_cplus_demangle_type@@Base+0x11f4>
   26144:	mov	x20, x0
   26148:	cbz	w21, 2619c <__asan_cplus_demangle_mangled_name@@Base+0xac>
   2614c:	ldr	w0, [x19, #16]
   26150:	tbz	w0, #0, 2619c <__asan_cplus_demangle_mangled_name@@Base+0xac>
   26154:	ldr	x1, [x19, #24]
   26158:	ldrb	w0, [x1]
   2615c:	cmp	w0, #0x2e
   26160:	b.ne	2619c <__asan_cplus_demangle_mangled_name@@Base+0xac>  // b.any
   26164:	ldrb	w0, [x1, #1]
   26168:	sub	w2, w0, #0x61
   2616c:	cmp	w0, #0x5f
   26170:	and	w2, w2, #0xff
   26174:	ccmp	w2, #0x19, #0x0, ne  // ne = any
   26178:	b.ls	261b0 <__asan_cplus_demangle_mangled_name@@Base+0xc0>  // b.plast
   2617c:	sub	w0, w0, #0x30
   26180:	and	w0, w0, #0xff
   26184:	cmp	w0, #0x9
   26188:	b.hi	2619c <__asan_cplus_demangle_mangled_name@@Base+0xac>  // b.pmore
   2618c:	mov	x2, x1
   26190:	b	261cc <__asan_cplus_demangle_mangled_name@@Base+0xdc>
   26194:	cbz	w21, 26120 <__asan_cplus_demangle_mangled_name@@Base+0x30>
   26198:	mov	x20, #0x0                   	// #0
   2619c:	mov	x0, x20
   261a0:	ldp	x19, x20, [sp, #16]
   261a4:	ldr	x21, [sp, #32]
   261a8:	ldp	x29, x30, [sp], #48
   261ac:	ret
   261b0:	add	x2, x1, #0x2
   261b4:	ldrb	w3, [x2]
   261b8:	sub	w0, w3, #0x61
   261bc:	cmp	w3, #0x5f
   261c0:	and	w0, w0, #0xff
   261c4:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   261c8:	b.ls	26204 <__asan_cplus_demangle_mangled_name@@Base+0x114>  // b.plast
   261cc:	ldrb	w0, [x2]
   261d0:	cmp	w0, #0x2e
   261d4:	b.eq	2620c <__asan_cplus_demangle_mangled_name@@Base+0x11c>  // b.none
   261d8:	str	x2, [x19, #24]
   261dc:	mov	x0, x19
   261e0:	sub	w2, w2, w1
   261e4:	bl	244b8 <__asan_cplus_demangle_fill_name@@Base+0x2c>
   261e8:	mov	x3, x0
   261ec:	mov	x2, x20
   261f0:	mov	x0, x19
   261f4:	mov	w1, #0x4e                  	// #78
   261f8:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   261fc:	mov	x20, x0
   26200:	b	26154 <__asan_cplus_demangle_mangled_name@@Base+0x64>
   26204:	add	x2, x2, #0x1
   26208:	b	261b4 <__asan_cplus_demangle_mangled_name@@Base+0xc4>
   2620c:	ldrb	w0, [x2, #1]
   26210:	sub	w0, w0, #0x30
   26214:	and	w0, w0, #0xff
   26218:	cmp	w0, #0x9
   2621c:	b.hi	261d8 <__asan_cplus_demangle_mangled_name@@Base+0xe8>  // b.pmore
   26220:	add	x2, x2, #0x2
   26224:	ldrb	w0, [x2]
   26228:	sub	w0, w0, #0x30
   2622c:	and	w0, w0, #0xff
   26230:	cmp	w0, #0x9
   26234:	b.hi	261cc <__asan_cplus_demangle_mangled_name@@Base+0xdc>  // b.pmore
   26238:	add	x2, x2, #0x1
   2623c:	b	26224 <__asan_cplus_demangle_mangled_name@@Base+0x134>
   26240:	ldr	x1, [x0, #24]
   26244:	ldrb	w2, [x1]
   26248:	cmp	w2, #0x4c
   2624c:	b.eq	2626c <__asan_cplus_demangle_mangled_name@@Base+0x17c>  // b.none
   26250:	mov	x0, #0x0                   	// #0
   26254:	ret
   26258:	mov	x0, #0x0                   	// #0
   2625c:	ldp	x19, x20, [sp, #16]
   26260:	ldr	x21, [sp, #32]
   26264:	ldp	x29, x30, [sp], #48
   26268:	ret
   2626c:	stp	x29, x30, [sp, #-48]!
   26270:	add	x2, x1, #0x1
   26274:	mov	x29, sp
   26278:	stp	x19, x20, [sp, #16]
   2627c:	mov	x19, x0
   26280:	str	x21, [sp, #32]
   26284:	str	x2, [x0, #24]
   26288:	mov	w2, #0x5a                  	// #90
   2628c:	ldrb	w1, [x1, #1]
   26290:	cmp	w1, #0x5f
   26294:	ccmp	w1, w2, #0x4, ne  // ne = any
   26298:	b.ne	262c0 <__asan_cplus_demangle_mangled_name@@Base+0x1d0>  // b.any
   2629c:	mov	w1, #0x0                   	// #0
   262a0:	bl	6a50 <__asan_cplus_demangle_mangled_name@plt>
   262a4:	ldr	x1, [x19, #24]
   262a8:	ldrb	w2, [x1]
   262ac:	cmp	w2, #0x45
   262b0:	b.ne	26258 <__asan_cplus_demangle_mangled_name@@Base+0x168>  // b.any
   262b4:	add	x1, x1, #0x1
   262b8:	str	x1, [x19, #24]
   262bc:	b	2625c <__asan_cplus_demangle_mangled_name@@Base+0x16c>
   262c0:	bl	64e0 <__asan_cplus_demangle_type@plt>
   262c4:	mov	x20, x0
   262c8:	cbz	x0, 26258 <__asan_cplus_demangle_mangled_name@@Base+0x168>
   262cc:	ldr	w0, [x0]
   262d0:	cmp	w0, #0x27
   262d4:	b.ne	262f4 <__asan_cplus_demangle_mangled_name@@Base+0x204>  // b.any
   262d8:	ldr	x1, [x20, #8]
   262dc:	ldr	w0, [x1, #28]
   262e0:	cbz	w0, 262f4 <__asan_cplus_demangle_mangled_name@@Base+0x204>
   262e4:	ldr	w1, [x1, #8]
   262e8:	ldr	w0, [x19, #72]
   262ec:	sub	w0, w0, w1
   262f0:	str	w0, [x19, #72]
   262f4:	ldr	x0, [x19, #24]
   262f8:	ldrb	w1, [x0]
   262fc:	cmp	w1, #0x6e
   26300:	b.ne	26348 <__asan_cplus_demangle_mangled_name@@Base+0x258>  // b.any
   26304:	add	x0, x0, #0x1
   26308:	mov	w21, #0x3e                  	// #62
   2630c:	str	x0, [x19, #24]
   26310:	ldr	x1, [x19, #24]
   26314:	ldr	x2, [x19, #24]
   26318:	ldrb	w0, [x2]
   2631c:	cmp	w0, #0x45
   26320:	b.ne	26350 <__asan_cplus_demangle_mangled_name@@Base+0x260>  // b.any
   26324:	sub	w2, w2, w1
   26328:	mov	x0, x19
   2632c:	bl	244b8 <__asan_cplus_demangle_fill_name@@Base+0x2c>
   26330:	mov	x3, x0
   26334:	mov	x2, x20
   26338:	mov	w1, w21
   2633c:	mov	x0, x19
   26340:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   26344:	b	262a4 <__asan_cplus_demangle_mangled_name@@Base+0x1b4>
   26348:	mov	w21, #0x3d                  	// #61
   2634c:	b	26310 <__asan_cplus_demangle_mangled_name@@Base+0x220>
   26350:	cbz	w0, 26258 <__asan_cplus_demangle_mangled_name@@Base+0x168>
   26354:	add	x2, x2, #0x1
   26358:	str	x2, [x19, #24]
   2635c:	b	26314 <__asan_cplus_demangle_mangled_name@@Base+0x224>
   26360:	ldr	x1, [x0, #24]
   26364:	ldrb	w2, [x1]
   26368:	cmp	w2, #0x4c
   2636c:	b.ne	26374 <__asan_cplus_demangle_mangled_name@@Base+0x284>  // b.any
   26370:	b	26240 <__asan_cplus_demangle_mangled_name@@Base+0x150>
   26374:	cmp	w2, #0x54
   26378:	b.ne	26380 <__asan_cplus_demangle_mangled_name@@Base+0x290>  // b.any
   2637c:	b	21ff0 <__asan_backtrace_create_state@@Base+0x574>
   26380:	stp	x29, x30, [sp, #-48]!
   26384:	cmp	w2, #0x73
   26388:	mov	x29, sp
   2638c:	stp	x19, x20, [sp, #16]
   26390:	mov	x19, x0
   26394:	stp	x21, x22, [sp, #32]
   26398:	b.ne	2643c <__asan_cplus_demangle_mangled_name@@Base+0x34c>  // b.any
   2639c:	ldrb	w3, [x1, #1]
   263a0:	cmp	w3, #0x72
   263a4:	b.ne	26418 <__asan_cplus_demangle_mangled_name@@Base+0x328>  // b.any
   263a8:	add	x1, x1, #0x2
   263ac:	str	x1, [x0, #24]
   263b0:	bl	64e0 <__asan_cplus_demangle_type@plt>
   263b4:	mov	x20, x0
   263b8:	mov	x0, x19
   263bc:	bl	25244 <__asan_cplus_demangle_type@@Base+0x940>
   263c0:	mov	x21, x0
   263c4:	ldr	x0, [x19, #24]
   263c8:	ldrb	w0, [x0]
   263cc:	cmp	w0, #0x49
   263d0:	b.eq	263f4 <__asan_cplus_demangle_mangled_name@@Base+0x304>  // b.none
   263d4:	mov	x3, x21
   263d8:	mov	x2, x20
   263dc:	mov	w1, #0x1                   	// #1
   263e0:	mov	x0, x19
   263e4:	ldp	x19, x20, [sp, #16]
   263e8:	ldp	x21, x22, [sp, #32]
   263ec:	ldp	x29, x30, [sp], #48
   263f0:	b	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   263f4:	mov	x0, x19
   263f8:	bl	26ac0 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   263fc:	mov	x3, x0
   26400:	mov	x2, x21
   26404:	mov	x0, x19
   26408:	mov	w1, #0x4                   	// #4
   2640c:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   26410:	mov	x3, x0
   26414:	b	263d8 <__asan_cplus_demangle_mangled_name@@Base+0x2e8>
   26418:	cmp	w3, #0x70
   2641c:	b.ne	26528 <__asan_cplus_demangle_mangled_name@@Base+0x438>  // b.any
   26420:	add	x1, x1, #0x2
   26424:	str	x1, [x0, #24]
   26428:	bl	26360 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   2642c:	mov	x2, x0
   26430:	mov	x3, #0x0                   	// #0
   26434:	mov	w1, #0x4b                  	// #75
   26438:	b	263e0 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   2643c:	cmp	w2, #0x66
   26440:	b.ne	264c4 <__asan_cplus_demangle_mangled_name@@Base+0x3d4>  // b.any
   26444:	ldrb	w3, [x1, #1]
   26448:	cmp	w3, #0x70
   2644c:	b.ne	26528 <__asan_cplus_demangle_mangled_name@@Base+0x438>  // b.any
   26450:	add	x2, x1, #0x2
   26454:	str	x2, [x0, #24]
   26458:	ldrb	w2, [x1, #2]
   2645c:	cmp	w2, #0x54
   26460:	b.ne	264a4 <__asan_cplus_demangle_mangled_name@@Base+0x3b4>  // b.any
   26464:	add	x1, x1, #0x3
   26468:	mov	w4, #0x0                   	// #0
   2646c:	str	x1, [x0, #24]
   26470:	mov	x0, x19
   26474:	bl	21b2c <__asan_backtrace_create_state@@Base+0xb0>
   26478:	mov	x20, x0
   2647c:	cbz	x0, 26490 <__asan_cplus_demangle_mangled_name@@Base+0x3a0>
   26480:	sxtw	x4, w4
   26484:	mov	w0, #0x6                   	// #6
   26488:	str	w0, [x20]
   2648c:	str	x4, [x20, #8]
   26490:	mov	x0, x20
   26494:	ldp	x19, x20, [sp, #16]
   26498:	ldp	x21, x22, [sp, #32]
   2649c:	ldp	x29, x30, [sp], #48
   264a0:	ret
   264a4:	bl	21f6c <__asan_backtrace_create_state@@Base+0x4f0>
   264a8:	mvn	x1, x0
   264ac:	tst	x1, #0x7fffffff
   264b0:	b.ne	264bc <__asan_cplus_demangle_mangled_name@@Base+0x3cc>  // b.any
   264b4:	mov	x20, #0x0                   	// #0
   264b8:	b	26490 <__asan_cplus_demangle_mangled_name@@Base+0x3a0>
   264bc:	add	w4, w0, #0x1
   264c0:	b	26470 <__asan_cplus_demangle_mangled_name@@Base+0x380>
   264c4:	sub	w0, w2, #0x30
   264c8:	and	w0, w0, #0xff
   264cc:	cmp	w0, #0x9
   264d0:	b.ls	264f0 <__asan_cplus_demangle_mangled_name@@Base+0x400>  // b.plast
   264d4:	cmp	w2, #0x6f
   264d8:	b.ne	26528 <__asan_cplus_demangle_mangled_name@@Base+0x438>  // b.any
   264dc:	ldrb	w0, [x1, #1]
   264e0:	cmp	w0, #0x6e
   264e4:	b.ne	26590 <__asan_cplus_demangle_mangled_name@@Base+0x4a0>  // b.any
   264e8:	add	x1, x1, #0x2
   264ec:	str	x1, [x19, #24]
   264f0:	mov	x0, x19
   264f4:	bl	25244 <__asan_cplus_demangle_type@@Base+0x940>
   264f8:	mov	x20, x0
   264fc:	cbz	x0, 264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   26500:	ldr	x0, [x19, #24]
   26504:	ldrb	w0, [x0]
   26508:	cmp	w0, #0x49
   2650c:	b.ne	26490 <__asan_cplus_demangle_mangled_name@@Base+0x3a0>  // b.any
   26510:	mov	x0, x19
   26514:	bl	26ac0 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   26518:	mov	x2, x20
   2651c:	mov	x3, x0
   26520:	mov	w1, #0x4                   	// #4
   26524:	b	263e0 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   26528:	cmp	w2, #0x69
   2652c:	mov	w0, #0x74                  	// #116
   26530:	ccmp	w2, w0, #0x4, ne  // ne = any
   26534:	b.ne	26590 <__asan_cplus_demangle_mangled_name@@Base+0x4a0>  // b.any
   26538:	ldrb	w0, [x1, #1]
   2653c:	cmp	w0, #0x6c
   26540:	b.ne	26590 <__asan_cplus_demangle_mangled_name@@Base+0x4a0>  // b.any
   26544:	add	x1, x1, #0x2
   26548:	str	x1, [x19, #24]
   2654c:	cmp	w2, #0x74
   26550:	b.ne	26588 <__asan_cplus_demangle_mangled_name@@Base+0x498>  // b.any
   26554:	mov	x0, x19
   26558:	bl	64e0 <__asan_cplus_demangle_type@plt>
   2655c:	mov	x20, x0
   26560:	ldr	x0, [x19, #24]
   26564:	ldrb	w0, [x0, #1]
   26568:	cbz	w0, 264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   2656c:	mov	w1, #0x45                  	// #69
   26570:	mov	x0, x19
   26574:	bl	26aec <__asan_cplus_demangle_mangled_name@@Base+0x9fc>
   26578:	mov	x3, x0
   2657c:	mov	x2, x20
   26580:	mov	w1, #0x31                  	// #49
   26584:	b	263e0 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   26588:	mov	x20, #0x0                   	// #0
   2658c:	b	26560 <__asan_cplus_demangle_mangled_name@@Base+0x470>
   26590:	mov	x0, x19
   26594:	bl	250cc <__asan_cplus_demangle_type@@Base+0x7c8>
   26598:	mov	x21, x0
   2659c:	cbz	x0, 264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   265a0:	ldr	w0, [x0]
   265a4:	cmp	w0, #0x32
   265a8:	b.ne	265f4 <__asan_cplus_demangle_mangled_name@@Base+0x504>  // b.any
   265ac:	ldr	x0, [x21, #8]
   265b0:	ldr	x20, [x0]
   265b4:	ldr	w0, [x0, #16]
   265b8:	sub	w1, w0, #0x2
   265bc:	ldr	w0, [x19, #72]
   265c0:	add	w0, w0, w1
   265c4:	str	w0, [x19, #72]
   265c8:	adrp	x1, 2b000 <__asan_backtrace_vector_release@@Base+0xbc4>
   265cc:	mov	x0, x20
   265d0:	add	x1, x1, #0x653
   265d4:	bl	68c0 <__asan_internal_strcmp@plt>
   265d8:	cbnz	w0, 265f8 <__asan_cplus_demangle_mangled_name@@Base+0x508>
   265dc:	mov	x0, x19
   265e0:	bl	64e0 <__asan_cplus_demangle_type@plt>
   265e4:	mov	x3, x0
   265e8:	mov	x2, x21
   265ec:	mov	w1, #0x37                  	// #55
   265f0:	b	263e0 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   265f4:	mov	x20, #0x0                   	// #0
   265f8:	ldr	w0, [x21]
   265fc:	cmp	w0, #0x33
   26600:	b.eq	2663c <__asan_cplus_demangle_mangled_name@@Base+0x54c>  // b.none
   26604:	cmp	w0, #0x34
   26608:	b.eq	26654 <__asan_cplus_demangle_mangled_name@@Base+0x564>  // b.none
   2660c:	cmp	w0, #0x32
   26610:	b.ne	264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   26614:	ldr	x1, [x21, #8]
   26618:	ldr	w2, [x1, #20]
   2661c:	cmp	w2, #0x3
   26620:	b.hi	264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.pmore
   26624:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   26628:	add	x1, x1, #0x300
   2662c:	ldrb	w1, [x1, w2, uxtw]
   26630:	adr	x2, 2663c <__asan_cplus_demangle_mangled_name@@Base+0x54c>
   26634:	add	x1, x2, w1, sxtb #2
   26638:	br	x1
   2663c:	ldr	w2, [x21, #8]
   26640:	b	2661c <__asan_cplus_demangle_mangled_name@@Base+0x52c>
   26644:	mov	x2, x21
   26648:	mov	x3, #0x0                   	// #0
   2664c:	mov	w1, #0x36                  	// #54
   26650:	b	263e0 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   26654:	cbz	x20, 26924 <__asan_cplus_demangle_mangled_name@@Base+0x834>
   26658:	ldrb	w1, [x20]
   2665c:	mov	w2, #0x6d                  	// #109
   26660:	cmp	w1, #0x70
   26664:	ccmp	w1, w2, #0x4, ne  // ne = any
   26668:	b.ne	26690 <__asan_cplus_demangle_mangled_name@@Base+0x5a0>  // b.any
   2666c:	ldrb	w2, [x20, #1]
   26670:	cmp	w2, w1
   26674:	b.ne	26690 <__asan_cplus_demangle_mangled_name@@Base+0x5a0>  // b.any
   26678:	ldr	x1, [x19, #24]
   2667c:	ldrb	w2, [x1]
   26680:	cmp	w2, #0x5f
   26684:	b.ne	2693c <__asan_cplus_demangle_mangled_name@@Base+0x84c>  // b.any
   26688:	add	x1, x1, #0x1
   2668c:	str	x1, [x19, #24]
   26690:	mov	w22, #0x0                   	// #0
   26694:	cmp	w0, #0x34
   26698:	b.ne	266e0 <__asan_cplus_demangle_mangled_name@@Base+0x5f0>  // b.any
   2669c:	ldr	x0, [x19, #24]
   266a0:	ldrb	w1, [x0]
   266a4:	cmp	w1, #0x5f
   266a8:	b.ne	266dc <__asan_cplus_demangle_mangled_name@@Base+0x5ec>  // b.any
   266ac:	add	x0, x0, #0x1
   266b0:	str	x0, [x19, #24]
   266b4:	mov	w1, #0x45                  	// #69
   266b8:	mov	x0, x19
   266bc:	bl	26aec <__asan_cplus_demangle_mangled_name@@Base+0x9fc>
   266c0:	mov	x3, x0
   266c4:	cbz	w22, 265e8 <__asan_cplus_demangle_mangled_name@@Base+0x4f8>
   266c8:	mov	x2, x0
   266cc:	mov	w1, #0x39                  	// #57
   266d0:	mov	x0, x19
   266d4:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   266d8:	b	265e4 <__asan_cplus_demangle_mangled_name@@Base+0x4f4>
   266dc:	cbz	x20, 26930 <__asan_cplus_demangle_mangled_name@@Base+0x840>
   266e0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   266e4:	mov	x0, x20
   266e8:	add	x1, x1, #0x53c
   266ec:	bl	68c0 <__asan_internal_strcmp@plt>
   266f0:	cbnz	w0, 26930 <__asan_cplus_demangle_mangled_name@@Base+0x840>
   266f4:	mov	x0, x19
   266f8:	bl	26a08 <__asan_cplus_demangle_mangled_name@@Base+0x918>
   266fc:	b	266c0 <__asan_cplus_demangle_mangled_name@@Base+0x5d0>
   26700:	cbz	x20, 264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   26704:	ldr	x0, [x21, #8]
   26708:	bl	22148 <__asan_backtrace_create_state@@Base+0x6cc>
   2670c:	cbz	w0, 26764 <__asan_cplus_demangle_mangled_name@@Base+0x674>
   26710:	mov	x0, x19
   26714:	bl	64e0 <__asan_cplus_demangle_type@plt>
   26718:	mov	x22, x0
   2671c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   26720:	mov	x0, x20
   26724:	add	x1, x1, #0x4a5
   26728:	bl	68c0 <__asan_internal_strcmp@plt>
   2672c:	cbnz	w0, 26784 <__asan_cplus_demangle_mangled_name@@Base+0x694>
   26730:	mov	x0, x19
   26734:	mov	w1, #0x45                  	// #69
   26738:	bl	26aec <__asan_cplus_demangle_mangled_name@@Base+0x9fc>
   2673c:	mov	x20, x0
   26740:	mov	x3, x20
   26744:	mov	x2, x22
   26748:	mov	w1, #0x39                  	// #57
   2674c:	mov	x0, x19
   26750:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   26754:	mov	x3, x0
   26758:	mov	x2, x21
   2675c:	mov	w1, #0x38                  	// #56
   26760:	b	263e0 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   26764:	ldrb	w0, [x20]
   26768:	cmp	w0, #0x66
   2676c:	mov	x0, x19
   26770:	b.ne	2677c <__asan_cplus_demangle_mangled_name@@Base+0x68c>  // b.any
   26774:	bl	250cc <__asan_cplus_demangle_type@@Base+0x7c8>
   26778:	b	26718 <__asan_cplus_demangle_mangled_name@@Base+0x628>
   2677c:	bl	26360 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   26780:	b	26718 <__asan_cplus_demangle_mangled_name@@Base+0x628>
   26784:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   26788:	mov	x0, x20
   2678c:	add	x1, x1, #0x5f1
   26790:	bl	68c0 <__asan_internal_strcmp@plt>
   26794:	cbnz	w0, 267d4 <__asan_cplus_demangle_mangled_name@@Base+0x6e4>
   26798:	mov	x0, x19
   2679c:	bl	25244 <__asan_cplus_demangle_type@@Base+0x940>
   267a0:	mov	x20, x0
   267a4:	ldr	x0, [x19, #24]
   267a8:	ldrb	w0, [x0]
   267ac:	cmp	w0, #0x49
   267b0:	b.ne	26740 <__asan_cplus_demangle_mangled_name@@Base+0x650>  // b.any
   267b4:	mov	x0, x19
   267b8:	bl	26ac0 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   267bc:	mov	x2, x20
   267c0:	mov	x3, x0
   267c4:	mov	w1, #0x4                   	// #4
   267c8:	mov	x0, x19
   267cc:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   267d0:	b	2673c <__asan_cplus_demangle_mangled_name@@Base+0x64c>
   267d4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   267d8:	mov	x0, x20
   267dc:	add	x1, x1, #0x573
   267e0:	bl	68c0 <__asan_internal_strcmp@plt>
   267e4:	cbz	w0, 26798 <__asan_cplus_demangle_mangled_name@@Base+0x6a8>
   267e8:	mov	x0, x19
   267ec:	bl	26360 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   267f0:	b	2673c <__asan_cplus_demangle_mangled_name@@Base+0x64c>
   267f4:	cbz	x20, 264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   267f8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   267fc:	mov	x0, x20
   26800:	add	x1, x1, #0x4a8
   26804:	bl	68c0 <__asan_internal_strcmp@plt>
   26808:	cbnz	w0, 26868 <__asan_cplus_demangle_mangled_name@@Base+0x778>
   2680c:	mov	x0, x19
   26810:	bl	26360 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   26814:	mov	x20, x0
   26818:	mov	x0, x19
   2681c:	bl	26360 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   26820:	mov	x22, x0
   26824:	mov	x0, x19
   26828:	bl	26360 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   2682c:	cbz	x0, 264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   26830:	mov	x3, x0
   26834:	mov	x2, x22
   26838:	mov	w1, #0x3c                  	// #60
   2683c:	mov	x0, x19
   26840:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   26844:	mov	x3, x0
   26848:	mov	x2, x20
   2684c:	mov	w1, #0x3b                  	// #59
   26850:	mov	x0, x19
   26854:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   26858:	mov	x2, x21
   2685c:	mov	x3, x0
   26860:	mov	w1, #0x3a                  	// #58
   26864:	b	263e0 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   26868:	ldrb	w0, [x20]
   2686c:	cmp	w0, #0x66
   26870:	b.ne	26880 <__asan_cplus_demangle_mangled_name@@Base+0x790>  // b.any
   26874:	mov	x0, x19
   26878:	bl	250cc <__asan_cplus_demangle_type@@Base+0x7c8>
   2687c:	b	26814 <__asan_cplus_demangle_mangled_name@@Base+0x724>
   26880:	cmp	w0, #0x6e
   26884:	b.ne	264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   26888:	ldrb	w0, [x20, #1]
   2688c:	mov	w1, #0x61                  	// #97
   26890:	cmp	w0, #0x77
   26894:	ccmp	w0, w1, #0x4, ne  // ne = any
   26898:	b.ne	264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   2689c:	mov	w1, #0x5f                  	// #95
   268a0:	mov	x0, x19
   268a4:	bl	26aec <__asan_cplus_demangle_mangled_name@@Base+0x9fc>
   268a8:	mov	x20, x0
   268ac:	mov	x0, x19
   268b0:	bl	64e0 <__asan_cplus_demangle_type@plt>
   268b4:	mov	x22, x0
   268b8:	ldr	x0, [x19, #24]
   268bc:	ldrb	w1, [x0]
   268c0:	cmp	w1, #0x45
   268c4:	b.ne	268d8 <__asan_cplus_demangle_mangled_name@@Base+0x7e8>  // b.any
   268c8:	add	x0, x0, #0x1
   268cc:	str	x0, [x19, #24]
   268d0:	mov	x0, #0x0                   	// #0
   268d4:	b	26830 <__asan_cplus_demangle_mangled_name@@Base+0x740>
   268d8:	cmp	w1, #0x70
   268dc:	b.ne	26904 <__asan_cplus_demangle_mangled_name@@Base+0x814>  // b.any
   268e0:	ldrb	w1, [x0, #1]
   268e4:	cmp	w1, #0x69
   268e8:	b.ne	264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   268ec:	add	x0, x0, #0x2
   268f0:	str	x0, [x19, #24]
   268f4:	mov	w1, #0x45                  	// #69
   268f8:	mov	x0, x19
   268fc:	bl	26aec <__asan_cplus_demangle_mangled_name@@Base+0x9fc>
   26900:	b	26830 <__asan_cplus_demangle_mangled_name@@Base+0x740>
   26904:	cmp	w1, #0x69
   26908:	b.ne	264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   2690c:	ldrb	w0, [x0, #1]
   26910:	cmp	w0, #0x6c
   26914:	b.ne	264b4 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   26918:	mov	x0, x19
   2691c:	bl	26360 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   26920:	b	26830 <__asan_cplus_demangle_mangled_name@@Base+0x740>
   26924:	cmp	w0, #0x34
   26928:	mov	w22, #0x0                   	// #0
   2692c:	b.eq	2669c <__asan_cplus_demangle_mangled_name@@Base+0x5ac>  // b.none
   26930:	mov	x0, x19
   26934:	bl	26360 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   26938:	b	266c0 <__asan_cplus_demangle_mangled_name@@Base+0x5d0>
   2693c:	mov	w22, #0x1                   	// #1
   26940:	b	26694 <__asan_cplus_demangle_mangled_name@@Base+0x5a4>
   26944:	stp	x29, x30, [sp, #-32]!
   26948:	mov	w1, #0x1                   	// #1
   2694c:	mov	x29, sp
   26950:	stp	x19, x20, [sp, #16]
   26954:	mov	x19, x0
   26958:	ldr	w20, [x0, #76]
   2695c:	str	w1, [x0, #76]
   26960:	bl	26360 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   26964:	str	w20, [x19, #76]
   26968:	ldp	x19, x20, [sp, #16]
   2696c:	ldp	x29, x30, [sp], #32
   26970:	ret
   26974:	ldr	x2, [x0, #24]
   26978:	ldrb	w1, [x2]
   2697c:	cmp	w1, #0x4c
   26980:	b.eq	269f0 <__asan_cplus_demangle_mangled_name@@Base+0x900>  // b.none
   26984:	stp	x29, x30, [sp, #-32]!
   26988:	mov	x29, sp
   2698c:	str	x19, [sp, #16]
   26990:	mov	x19, x0
   26994:	b.hi	269b8 <__asan_cplus_demangle_mangled_name@@Base+0x8c8>  // b.pmore
   26998:	sub	w1, w1, #0x49
   2699c:	and	w1, w1, #0xff
   269a0:	cmp	w1, #0x1
   269a4:	b.ls	269f4 <__asan_cplus_demangle_mangled_name@@Base+0x904>  // b.plast
   269a8:	mov	x0, x19
   269ac:	ldr	x19, [sp, #16]
   269b0:	ldp	x29, x30, [sp], #32
   269b4:	b	64e0 <__asan_cplus_demangle_type@plt>
   269b8:	cmp	w1, #0x58
   269bc:	b.ne	269a8 <__asan_cplus_demangle_mangled_name@@Base+0x8b8>  // b.any
   269c0:	add	x2, x2, #0x1
   269c4:	str	x2, [x0, #24]
   269c8:	bl	26944 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   269cc:	ldr	x1, [x19, #24]
   269d0:	ldrb	w2, [x1]
   269d4:	cmp	w2, #0x45
   269d8:	b.ne	26a00 <__asan_cplus_demangle_mangled_name@@Base+0x910>  // b.any
   269dc:	add	x1, x1, #0x1
   269e0:	str	x1, [x19, #24]
   269e4:	ldr	x19, [sp, #16]
   269e8:	ldp	x29, x30, [sp], #32
   269ec:	ret
   269f0:	b	26240 <__asan_cplus_demangle_mangled_name@@Base+0x150>
   269f4:	ldr	x19, [sp, #16]
   269f8:	ldp	x29, x30, [sp], #32
   269fc:	b	26ac0 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   26a00:	mov	x0, #0x0                   	// #0
   26a04:	b	269e4 <__asan_cplus_demangle_mangled_name@@Base+0x8f4>
   26a08:	stp	x29, x30, [sp, #-64]!
   26a0c:	mov	x29, sp
   26a10:	ldr	x1, [x0, #24]
   26a14:	stp	x19, x20, [sp, #16]
   26a18:	mov	x19, x0
   26a1c:	str	x21, [sp, #32]
   26a20:	ldr	x21, [x0, #64]
   26a24:	ldrb	w2, [x1]
   26a28:	cmp	w2, #0x45
   26a2c:	b.ne	26a54 <__asan_cplus_demangle_mangled_name@@Base+0x964>  // b.any
   26a30:	add	x1, x1, #0x1
   26a34:	mov	x3, #0x0                   	// #0
   26a38:	ldr	x21, [sp, #32]
   26a3c:	str	x1, [x0, #24]
   26a40:	ldp	x19, x20, [sp, #16]
   26a44:	mov	x2, #0x0                   	// #0
   26a48:	ldp	x29, x30, [sp], #64
   26a4c:	mov	w1, #0x2f                  	// #47
   26a50:	b	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   26a54:	add	x20, sp, #0x38
   26a58:	str	xzr, [sp, #56]
   26a5c:	mov	x0, x19
   26a60:	bl	26974 <__asan_cplus_demangle_mangled_name@@Base+0x884>
   26a64:	mov	x2, x0
   26a68:	cbnz	x0, 26a80 <__asan_cplus_demangle_mangled_name@@Base+0x990>
   26a6c:	mov	x0, #0x0                   	// #0
   26a70:	ldp	x19, x20, [sp, #16]
   26a74:	ldr	x21, [sp, #32]
   26a78:	ldp	x29, x30, [sp], #64
   26a7c:	ret
   26a80:	mov	x0, x19
   26a84:	mov	x3, #0x0                   	// #0
   26a88:	mov	w1, #0x2f                  	// #47
   26a8c:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   26a90:	str	x0, [x20]
   26a94:	cbz	x0, 26a6c <__asan_cplus_demangle_mangled_name@@Base+0x97c>
   26a98:	add	x20, x0, #0x10
   26a9c:	ldr	x0, [x19, #24]
   26aa0:	ldrb	w1, [x0]
   26aa4:	cmp	w1, #0x45
   26aa8:	b.ne	26a5c <__asan_cplus_demangle_mangled_name@@Base+0x96c>  // b.any
   26aac:	add	x0, x0, #0x1
   26ab0:	str	x0, [x19, #24]
   26ab4:	str	x21, [x19, #64]
   26ab8:	ldr	x0, [sp, #56]
   26abc:	b	26a70 <__asan_cplus_demangle_mangled_name@@Base+0x980>
   26ac0:	ldr	x3, [x0, #24]
   26ac4:	ldrb	w1, [x3]
   26ac8:	sub	w1, w1, #0x49
   26acc:	and	w1, w1, #0xff
   26ad0:	cmp	w1, #0x1
   26ad4:	b.hi	26ae4 <__asan_cplus_demangle_mangled_name@@Base+0x9f4>  // b.pmore
   26ad8:	add	x3, x3, #0x1
   26adc:	str	x3, [x0, #24]
   26ae0:	b	26a08 <__asan_cplus_demangle_mangled_name@@Base+0x918>
   26ae4:	mov	x0, #0x0                   	// #0
   26ae8:	ret
   26aec:	stp	x29, x30, [sp, #-64]!
   26af0:	mov	x29, sp
   26af4:	ldr	x2, [x0, #24]
   26af8:	stp	x19, x20, [sp, #16]
   26afc:	mov	x19, x0
   26b00:	str	x21, [sp, #32]
   26b04:	str	xzr, [sp, #56]
   26b08:	ldrb	w3, [x2]
   26b0c:	cmp	w3, w1, uxtb
   26b10:	b.ne	26b38 <__asan_cplus_demangle_mangled_name@@Base+0xa48>  // b.any
   26b14:	add	x2, x2, #0x1
   26b18:	mov	x3, #0x0                   	// #0
   26b1c:	ldr	x21, [sp, #32]
   26b20:	str	x2, [x0, #24]
   26b24:	ldp	x19, x20, [sp, #16]
   26b28:	mov	w1, #0x2e                  	// #46
   26b2c:	ldp	x29, x30, [sp], #64
   26b30:	mov	x2, #0x0                   	// #0
   26b34:	b	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   26b38:	and	w21, w1, #0xff
   26b3c:	add	x20, sp, #0x38
   26b40:	mov	x0, x19
   26b44:	bl	26944 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   26b48:	mov	x2, x0
   26b4c:	cbnz	x0, 26b64 <__asan_cplus_demangle_mangled_name@@Base+0xa74>
   26b50:	mov	x0, #0x0                   	// #0
   26b54:	ldp	x19, x20, [sp, #16]
   26b58:	ldr	x21, [sp, #32]
   26b5c:	ldp	x29, x30, [sp], #64
   26b60:	ret
   26b64:	mov	x0, x19
   26b68:	mov	x3, #0x0                   	// #0
   26b6c:	mov	w1, #0x2e                  	// #46
   26b70:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   26b74:	str	x0, [x20]
   26b78:	cbz	x0, 26b50 <__asan_cplus_demangle_mangled_name@@Base+0xa60>
   26b7c:	add	x20, x0, #0x10
   26b80:	ldr	x0, [x19, #24]
   26b84:	ldrb	w1, [x0]
   26b88:	cmp	w1, w21
   26b8c:	b.ne	26b40 <__asan_cplus_demangle_mangled_name@@Base+0xa50>  // b.any
   26b90:	add	x0, x0, #0x1
   26b94:	str	x0, [x19, #24]
   26b98:	ldr	x0, [sp, #56]
   26b9c:	b	26b54 <__asan_cplus_demangle_mangled_name@@Base+0xa64>
   26ba0:	stp	x29, x30, [sp, #-80]!
   26ba4:	cmp	w2, #0x0
   26ba8:	mov	x29, sp
   26bac:	stp	x19, x20, [sp, #16]
   26bb0:	mov	x19, x0
   26bb4:	mov	x20, x1
   26bb8:	ldr	x0, [x0, #24]
   26bbc:	stp	x21, x22, [sp, #32]
   26bc0:	mov	w21, w2
   26bc4:	stp	x23, x24, [sp, #48]
   26bc8:	mov	x22, x1
   26bcc:	mov	w24, #0x1d                  	// #29
   26bd0:	str	x25, [sp, #64]
   26bd4:	mov	w25, #0x1e                  	// #30
   26bd8:	mov	w23, #0x1c                  	// #28
   26bdc:	ldrb	w3, [x0]
   26be0:	mov	w0, #0x1b                  	// #27
   26be4:	csel	w25, w25, w0, ne  // ne = any
   26be8:	mov	w0, #0x1a                  	// #26
   26bec:	csel	w24, w24, w0, ne  // ne = any
   26bf0:	mov	w0, #0x19                  	// #25
   26bf4:	csel	w23, w23, w0, ne  // ne = any
   26bf8:	ldr	x4, [x19, #24]
   26bfc:	mov	x0, x4
   26c00:	bl	220f0 <__asan_backtrace_create_state@@Base+0x674>
   26c04:	cbnz	w0, 26c5c <__asan_cplus_demangle_mangled_name@@Base+0xb6c>
   26c08:	cmp	w3, #0x46
   26c0c:	eor	w21, w21, #0x1
   26c10:	cset	w0, eq  // eq = none
   26c14:	tst	w21, w0
   26c18:	b.eq	26dc8 <__asan_cplus_demangle_mangled_name@@Base+0xcd8>  // b.none
   26c1c:	mov	w1, #0x1d                  	// #29
   26c20:	mov	w2, #0x1e                  	// #30
   26c24:	mov	w3, #0x1c                  	// #28
   26c28:	cmp	x22, x20
   26c2c:	b.eq	26cc8 <__asan_cplus_demangle_mangled_name@@Base+0xbd8>  // b.none
   26c30:	ldr	x20, [x20]
   26c34:	ldr	w0, [x20]
   26c38:	cmp	w0, #0x1a
   26c3c:	b.eq	26dd0 <__asan_cplus_demangle_mangled_name@@Base+0xce0>  // b.none
   26c40:	cmp	w0, #0x1b
   26c44:	b.eq	26dd8 <__asan_cplus_demangle_mangled_name@@Base+0xce8>  // b.none
   26c48:	cmp	w0, #0x19
   26c4c:	b.ne	26c54 <__asan_cplus_demangle_mangled_name@@Base+0xb64>  // b.any
   26c50:	str	w3, [x20]
   26c54:	add	x20, x20, #0x8
   26c58:	b	26c28 <__asan_cplus_demangle_mangled_name@@Base+0xb38>
   26c5c:	add	x0, x4, #0x1
   26c60:	str	x0, [x19, #24]
   26c64:	cmp	w3, #0x72
   26c68:	b.ne	26c84 <__asan_cplus_demangle_mangled_name@@Base+0xb94>  // b.any
   26c6c:	ldr	w0, [x19, #72]
   26c70:	mov	w1, w23
   26c74:	add	w0, w0, #0x9
   26c78:	str	w0, [x19, #72]
   26c7c:	mov	x3, #0x0                   	// #0
   26c80:	b	26d0c <__asan_cplus_demangle_mangled_name@@Base+0xc1c>
   26c84:	cmp	w3, #0x56
   26c88:	b.ne	26ca0 <__asan_cplus_demangle_mangled_name@@Base+0xbb0>  // b.any
   26c8c:	ldr	w0, [x19, #72]
   26c90:	mov	w1, w24
   26c94:	add	w0, w0, #0x9
   26c98:	str	w0, [x19, #72]
   26c9c:	b	26c7c <__asan_cplus_demangle_mangled_name@@Base+0xb8c>
   26ca0:	cmp	w3, #0x4b
   26ca4:	b.ne	26cbc <__asan_cplus_demangle_mangled_name@@Base+0xbcc>  // b.any
   26ca8:	ldr	w0, [x19, #72]
   26cac:	mov	w1, w25
   26cb0:	add	w0, w0, #0x6
   26cb4:	str	w0, [x19, #72]
   26cb8:	b	26c7c <__asan_cplus_demangle_mangled_name@@Base+0xb8c>
   26cbc:	ldrb	w0, [x4, #1]
   26cc0:	cbnz	w0, 26ce4 <__asan_cplus_demangle_mangled_name@@Base+0xbf4>
   26cc4:	mov	x20, #0x0                   	// #0
   26cc8:	mov	x0, x20
   26ccc:	ldp	x19, x20, [sp, #16]
   26cd0:	ldp	x21, x22, [sp, #32]
   26cd4:	ldp	x23, x24, [sp, #48]
   26cd8:	ldr	x25, [sp, #64]
   26cdc:	ldp	x29, x30, [sp], #80
   26ce0:	ret
   26ce4:	add	x0, x4, #0x2
   26ce8:	str	x0, [x19, #24]
   26cec:	ldrb	w0, [x4, #1]
   26cf0:	cmp	w0, #0x78
   26cf4:	b.ne	26d30 <__asan_cplus_demangle_mangled_name@@Base+0xc40>  // b.any
   26cf8:	ldr	w0, [x19, #72]
   26cfc:	mov	x3, #0x0                   	// #0
   26d00:	mov	w1, #0x4d                  	// #77
   26d04:	add	w0, w0, #0x11
   26d08:	str	w0, [x19, #72]
   26d0c:	mov	x0, x19
   26d10:	mov	x2, #0x0                   	// #0
   26d14:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   26d18:	str	x0, [x22]
   26d1c:	cbz	x0, 26cc4 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>
   26d20:	add	x22, x0, #0x8
   26d24:	ldr	x0, [x19, #24]
   26d28:	ldrb	w3, [x0]
   26d2c:	b	26bf8 <__asan_cplus_demangle_mangled_name@@Base+0xb08>
   26d30:	and	w2, w0, #0xffffffdf
   26d34:	and	w1, w2, #0xff
   26d38:	cmp	w2, #0x4f
   26d3c:	b.ne	26d84 <__asan_cplus_demangle_mangled_name@@Base+0xc94>  // b.any
   26d40:	ldr	w2, [x19, #72]
   26d44:	cmp	w0, #0x4f
   26d48:	add	w2, w2, #0x9
   26d4c:	str	w2, [x19, #72]
   26d50:	b.ne	26c7c <__asan_cplus_demangle_mangled_name@@Base+0xb8c>  // b.any
   26d54:	mov	x0, x19
   26d58:	bl	26944 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   26d5c:	mov	x3, x0
   26d60:	cbz	x0, 26cc4 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>
   26d64:	ldr	x0, [x19, #24]
   26d68:	ldrb	w1, [x0]
   26d6c:	cmp	w1, #0x45
   26d70:	b.ne	26cc4 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>  // b.any
   26d74:	add	x0, x0, #0x1
   26d78:	mov	w1, #0x4f                  	// #79
   26d7c:	str	x0, [x19, #24]
   26d80:	b	26d0c <__asan_cplus_demangle_mangled_name@@Base+0xc1c>
   26d84:	cmp	w0, #0x77
   26d88:	b.ne	26cc4 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>  // b.any
   26d8c:	ldr	w0, [x19, #72]
   26d90:	add	w0, w0, #0x6
   26d94:	str	w0, [x19, #72]
   26d98:	mov	x0, x19
   26d9c:	bl	24fec <__asan_cplus_demangle_type@@Base+0x6e8>
   26da0:	mov	x3, x0
   26da4:	cbz	x0, 26cc4 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>
   26da8:	ldr	x0, [x19, #24]
   26dac:	ldrb	w1, [x0]
   26db0:	cmp	w1, #0x45
   26db4:	b.ne	26cc4 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>  // b.any
   26db8:	add	x0, x0, #0x1
   26dbc:	mov	w1, #0x50                  	// #80
   26dc0:	str	x0, [x19, #24]
   26dc4:	b	26d0c <__asan_cplus_demangle_mangled_name@@Base+0xc1c>
   26dc8:	mov	x20, x22
   26dcc:	b	26cc8 <__asan_cplus_demangle_mangled_name@@Base+0xbd8>
   26dd0:	str	w1, [x20]
   26dd4:	b	26c54 <__asan_cplus_demangle_mangled_name@@Base+0xb64>
   26dd8:	str	w2, [x20]
   26ddc:	b	26c54 <__asan_cplus_demangle_mangled_name@@Base+0xb64>

0000000000026de0 <__asan_cplus_demangle_print_callback@@Base>:
   26de0:	stp	x29, x30, [sp, #-416]!
   26de4:	mov	w4, w0
   26de8:	mov	x5, x1
   26dec:	mov	x29, sp
   26df0:	stp	x19, x20, [sp, #16]
   26df4:	add	x19, x29, #0x28
   26df8:	mov	x0, x19
   26dfc:	str	xzr, [x29, #296]
   26e00:	strb	wzr, [x29, #304]
   26e04:	stp	x2, x3, [x29, #312]
   26e08:	stp	xzr, xzr, [x29, #328]
   26e0c:	stp	xzr, xzr, [x29, #344]
   26e10:	stp	xzr, xzr, [x29, #360]
   26e14:	stp	xzr, xzr, [x29, #376]
   26e18:	stp	xzr, xzr, [x29, #392]
   26e1c:	bl	21c80 <__asan_backtrace_create_state@@Base+0x204>
   26e20:	ldr	w0, [x29, #348]
   26e24:	cmp	w0, #0x7ff
   26e28:	b.gt	26e30 <__asan_cplus_demangle_print_callback@@Base+0x50>
   26e2c:	str	wzr, [x29, #348]
   26e30:	ldr	w3, [x29, #388]
   26e34:	mov	w0, #0x1                   	// #1
   26e38:	ldr	w2, [x29, #404]
   26e3c:	mov	x20, sp
   26e40:	cmp	w3, #0x0
   26e44:	str	xzr, [x29, #408]
   26e48:	mul	w2, w3, w2
   26e4c:	csel	w3, w3, w0, gt
   26e50:	str	w2, [x29, #404]
   26e54:	cmp	w2, #0x0
   26e58:	sub	sp, sp, w3, sxtw #4
   26e5c:	csel	w2, w2, w0, gt
   26e60:	mov	x1, sp
   26e64:	str	x1, [x29, #376]
   26e68:	mov	w1, w4
   26e6c:	sub	sp, sp, w2, sxtw #4
   26e70:	mov	x2, x5
   26e74:	mov	x0, sp
   26e78:	str	x0, [x29, #392]
   26e7c:	mov	x0, x19
   26e80:	bl	23c6c <__asan_backtrace_create_state@@Base+0x21f0>
   26e84:	mov	x0, x19
   26e88:	mov	sp, x20
   26e8c:	bl	21d40 <__asan_backtrace_create_state@@Base+0x2c4>
   26e90:	ldr	w0, [x29, #344]
   26e94:	mov	sp, x29
   26e98:	cmp	w0, #0x0
   26e9c:	cset	w0, eq  // eq = none
   26ea0:	ldp	x19, x20, [sp, #16]
   26ea4:	ldp	x29, x30, [sp], #416
   26ea8:	ret

0000000000026eac <__asan_cplus_demangle_print@@Base>:
   26eac:	stp	x29, x30, [sp, #-80]!
   26eb0:	mov	x29, sp
   26eb4:	stp	x19, x20, [sp, #16]
   26eb8:	mov	w20, w0
   26ebc:	mov	x19, x3
   26ec0:	stp	x21, x22, [sp, #32]
   26ec4:	mov	x21, x1
   26ec8:	add	x22, sp, #0x30
   26ecc:	stp	xzr, xzr, [sp, #48]
   26ed0:	str	xzr, [sp, #64]
   26ed4:	str	wzr, [sp, #72]
   26ed8:	cbz	w2, 26ee8 <__asan_cplus_demangle_print@@Base+0x3c>
   26edc:	sxtw	x1, w2
   26ee0:	mov	x0, x22
   26ee4:	bl	2225c <__asan_backtrace_create_state@@Base+0x7e0>
   26ee8:	adrp	x2, 22000 <__asan_backtrace_create_state@@Base+0x584>
   26eec:	mov	x3, x22
   26ef0:	add	x2, x2, #0x2d4
   26ef4:	mov	x1, x21
   26ef8:	mov	w0, w20
   26efc:	bl	6790 <__asan_cplus_demangle_print_callback@plt>
   26f00:	cbnz	w0, 26f24 <__asan_cplus_demangle_print@@Base+0x78>
   26f04:	ldr	x0, [sp, #48]
   26f08:	bl	6600 <free@plt>
   26f0c:	str	xzr, [x19]
   26f10:	mov	x0, #0x0                   	// #0
   26f14:	ldp	x19, x20, [sp, #16]
   26f18:	ldp	x21, x22, [sp, #32]
   26f1c:	ldp	x29, x30, [sp], #80
   26f20:	ret
   26f24:	ldr	w0, [sp, #72]
   26f28:	cmp	w0, #0x0
   26f2c:	ldr	x0, [sp, #64]
   26f30:	csinc	x0, x0, xzr, eq  // eq = none
   26f34:	str	x0, [x19]
   26f38:	ldr	x0, [sp, #48]
   26f3c:	b	26f14 <__asan_cplus_demangle_print@@Base+0x68>

0000000000026f40 <__asan_cplus_demangle_init_info@@Base>:
   26f40:	add	x4, x0, x2
   26f44:	stp	x0, x4, [x3]
   26f48:	str	w1, [x3, #16]
   26f4c:	str	x0, [x3, #24]
   26f50:	lsl	w0, w2, #1
   26f54:	str	wzr, [x3, #40]
   26f58:	str	w0, [x3, #44]
   26f5c:	stp	wzr, w2, [x3, #56]
   26f60:	stp	xzr, xzr, [x3, #64]
   26f64:	str	xzr, [x3, #80]
   26f68:	ret
   26f6c:	stp	x29, x30, [sp, #-176]!
   26f70:	mov	x29, sp
   26f74:	stp	x19, x20, [sp, #16]
   26f78:	mov	x19, x0
   26f7c:	stp	x21, x22, [sp, #32]
   26f80:	mov	w21, w1
   26f84:	mov	x22, x2
   26f88:	stp	x23, x24, [sp, #48]
   26f8c:	mov	x23, x3
   26f90:	stp	x25, x26, [sp, #64]
   26f94:	ldrb	w0, [x0]
   26f98:	cmp	w0, #0x5f
   26f9c:	b.ne	26fac <__asan_cplus_demangle_init_info@@Base+0x6c>  // b.any
   26fa0:	ldrb	w0, [x19, #1]
   26fa4:	cmp	w0, #0x5a
   26fa8:	b.eq	27124 <__asan_cplus_demangle_init_info@@Base+0x1e4>  // b.none
   26fac:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   26fb0:	mov	x0, x19
   26fb4:	add	x1, x1, #0x5ad
   26fb8:	mov	x2, #0x8                   	// #8
   26fbc:	bl	6900 <__asan_internal_strncmp@plt>
   26fc0:	cbnz	w0, 27100 <__asan_cplus_demangle_init_info@@Base+0x1c0>
   26fc4:	ldrb	w0, [x19, #8]
   26fc8:	sub	w0, w0, #0x24
   26fcc:	and	w0, w0, #0xff
   26fd0:	cmp	w0, #0x3b
   26fd4:	b.hi	27100 <__asan_cplus_demangle_init_info@@Base+0x1c0>  // b.pmore
   26fd8:	mov	x1, #0x401                 	// #1025
   26fdc:	movk	x1, #0x800, lsl #48
   26fe0:	lsr	x0, x1, x0
   26fe4:	tbz	w0, #0, 27100 <__asan_cplus_demangle_init_info@@Base+0x1c0>
   26fe8:	ldrb	w0, [x19, #9]
   26fec:	mov	w1, #0x49                  	// #73
   26ff0:	cmp	w0, #0x44
   26ff4:	ccmp	w0, w1, #0x4, ne  // ne = any
   26ff8:	b.ne	27100 <__asan_cplus_demangle_init_info@@Base+0x1c0>  // b.any
   26ffc:	ldrb	w1, [x19, #10]
   27000:	cmp	w1, #0x5f
   27004:	b.ne	27100 <__asan_cplus_demangle_init_info@@Base+0x1c0>  // b.any
   27008:	cmp	w0, #0x49
   2700c:	cset	w20, ne  // ne = any
   27010:	add	w20, w20, #0x2
   27014:	mov	x0, x19
   27018:	add	x25, x29, #0x58
   2701c:	bl	6570 <__asan_internal_strlen@plt>
   27020:	mov	x2, x0
   27024:	mov	x3, x25
   27028:	mov	x0, x19
   2702c:	mov	w1, w21
   27030:	bl	6440 <__asan_cplus_demangle_init_info@plt>
   27034:	ldr	w0, [x29, #132]
   27038:	tbnz	w21, #18, 27044 <__asan_cplus_demangle_init_info@@Base+0x104>
   2703c:	cmp	w0, #0x800
   27040:	b.hi	27104 <__asan_cplus_demangle_init_info@@Base+0x1c4>  // b.pmore
   27044:	mov	w1, #0x18                  	// #24
   27048:	mov	x24, sp
   2704c:	cmp	w20, #0x1
   27050:	smull	x0, w0, w1
   27054:	add	x0, x0, #0xf
   27058:	and	x0, x0, #0xfffffffffffffff0
   2705c:	sub	sp, sp, x0
   27060:	ldrsw	x0, [x29, #148]
   27064:	mov	x1, sp
   27068:	str	x1, [x29, #120]
   2706c:	lsl	x0, x0, #3
   27070:	add	x0, x0, #0xf
   27074:	and	x0, x0, #0xfffffffffffffff0
   27078:	sub	sp, sp, x0
   2707c:	mov	x0, sp
   27080:	str	x0, [x29, #136]
   27084:	b.eq	27170 <__asan_cplus_demangle_init_info@@Base+0x230>  // b.none
   27088:	sub	w0, w20, #0x2
   2708c:	cmp	w0, #0x1
   27090:	b.hi	27134 <__asan_cplus_demangle_init_info@@Base+0x1f4>  // b.pmore
   27094:	ldr	x0, [x29, #112]
   27098:	cmp	w20, #0x2
   2709c:	cset	w19, ne  // ne = any
   270a0:	add	x26, x0, #0xb
   270a4:	str	x26, [x29, #112]
   270a8:	add	w19, w19, #0x44
   270ac:	ldrb	w1, [x0, #11]
   270b0:	cmp	w1, #0x5f
   270b4:	b.eq	27180 <__asan_cplus_demangle_init_info@@Base+0x240>  // b.none
   270b8:	mov	x0, x26
   270bc:	bl	6570 <__asan_internal_strlen@plt>
   270c0:	mov	x1, x26
   270c4:	mov	w2, w0
   270c8:	mov	x0, x25
   270cc:	bl	244b8 <__asan_cplus_demangle_fill_name@@Base+0x2c>
   270d0:	mov	w1, w19
   270d4:	mov	x2, x0
   270d8:	mov	x3, #0x0                   	// #0
   270dc:	mov	x0, x25
   270e0:	bl	21b60 <__asan_backtrace_create_state@@Base+0xe4>
   270e4:	mov	x19, x0
   270e8:	ldr	x0, [x29, #112]
   270ec:	bl	6570 <__asan_internal_strlen@plt>
   270f0:	ldr	x1, [x29, #112]
   270f4:	add	x1, x1, x0
   270f8:	str	x1, [x29, #112]
   270fc:	b	27140 <__asan_cplus_demangle_init_info@@Base+0x200>
   27100:	tbnz	w21, #4, 2712c <__asan_cplus_demangle_init_info@@Base+0x1ec>
   27104:	mov	w0, #0x0                   	// #0
   27108:	mov	sp, x29
   2710c:	ldp	x19, x20, [sp, #16]
   27110:	ldp	x21, x22, [sp, #32]
   27114:	ldp	x23, x24, [sp, #48]
   27118:	ldp	x25, x26, [sp, #64]
   2711c:	ldp	x29, x30, [sp], #176
   27120:	ret
   27124:	mov	w20, #0x1                   	// #1
   27128:	b	27014 <__asan_cplus_demangle_init_info@@Base+0xd4>
   2712c:	mov	w20, #0x0                   	// #0
   27130:	b	27014 <__asan_cplus_demangle_init_info@@Base+0xd4>
   27134:	mov	x0, x25
   27138:	bl	64e0 <__asan_cplus_demangle_type@plt>
   2713c:	mov	x19, x0
   27140:	tbz	w21, #0, 27150 <__asan_cplus_demangle_init_info@@Base+0x210>
   27144:	ldr	x0, [x29, #112]
   27148:	ldrb	w0, [x0]
   2714c:	cbnz	w0, 271a4 <__asan_cplus_demangle_init_info@@Base+0x264>
   27150:	cbz	x19, 271a4 <__asan_cplus_demangle_init_info@@Base+0x264>
   27154:	mov	x3, x23
   27158:	mov	x2, x22
   2715c:	mov	x1, x19
   27160:	mov	w0, w21
   27164:	bl	6790 <__asan_cplus_demangle_print_callback@plt>
   27168:	mov	sp, x24
   2716c:	b	27108 <__asan_cplus_demangle_init_info@@Base+0x1c8>
   27170:	mov	w1, w20
   27174:	mov	x0, x25
   27178:	bl	6a50 <__asan_cplus_demangle_mangled_name@plt>
   2717c:	b	2713c <__asan_cplus_demangle_init_info@@Base+0x1fc>
   27180:	ldrb	w1, [x0, #12]
   27184:	cmp	w1, #0x5a
   27188:	b.ne	270b8 <__asan_cplus_demangle_init_info@@Base+0x178>  // b.any
   2718c:	add	x0, x0, #0xd
   27190:	mov	w1, #0x0                   	// #0
   27194:	str	x0, [x29, #112]
   27198:	mov	x0, x25
   2719c:	bl	25af8 <__asan_cplus_demangle_type@@Base+0x11f4>
   271a0:	b	270d0 <__asan_cplus_demangle_init_info@@Base+0x190>
   271a4:	mov	w0, #0x0                   	// #0
   271a8:	b	27168 <__asan_cplus_demangle_init_info@@Base+0x228>
   271ac:	stp	x29, x30, [sp, #-64]!
   271b0:	mov	x29, sp
   271b4:	add	x3, sp, #0x20
   271b8:	str	x19, [sp, #16]
   271bc:	mov	x19, x2
   271c0:	adrp	x2, 22000 <__asan_backtrace_create_state@@Base+0x584>
   271c4:	add	x2, x2, #0x2d4
   271c8:	stp	xzr, xzr, [sp, #32]
   271cc:	str	xzr, [sp, #48]
   271d0:	str	wzr, [sp, #56]
   271d4:	bl	26f6c <__asan_cplus_demangle_init_info@@Base+0x2c>
   271d8:	cbnz	w0, 271f8 <__asan_cplus_demangle_init_info@@Base+0x2b8>
   271dc:	ldr	x0, [sp, #32]
   271e0:	bl	6600 <free@plt>
   271e4:	str	xzr, [x19]
   271e8:	mov	x0, #0x0                   	// #0
   271ec:	ldr	x19, [sp, #16]
   271f0:	ldp	x29, x30, [sp], #64
   271f4:	ret
   271f8:	ldr	w0, [sp, #56]
   271fc:	cmp	w0, #0x0
   27200:	ldr	x0, [sp, #48]
   27204:	csinc	x0, x0, xzr, eq  // eq = none
   27208:	str	x0, [x19]
   2720c:	ldr	x0, [sp, #32]
   27210:	b	271ec <__asan_cplus_demangle_init_info@@Base+0x2ac>
   27214:	stp	x29, x30, [sp, #-144]!
   27218:	mov	x29, sp
   2721c:	stp	x19, x20, [sp, #16]
   27220:	mov	x19, x1
   27224:	mov	x20, x2
   27228:	stp	x21, x22, [sp, #32]
   2722c:	mov	x21, x0
   27230:	add	x22, x29, #0x38
   27234:	str	wzr, [x1]
   27238:	str	wzr, [x2]
   2723c:	bl	6570 <__asan_internal_strlen@plt>
   27240:	mov	x2, x0
   27244:	mov	x3, x22
   27248:	mov	x0, x21
   2724c:	mov	w1, #0x4000                	// #16384
   27250:	bl	6440 <__asan_cplus_demangle_init_info@plt>
   27254:	ldr	w0, [x29, #100]
   27258:	mov	w1, #0x18                  	// #24
   2725c:	smull	x0, w0, w1
   27260:	add	x0, x0, #0xf
   27264:	and	x0, x0, #0xfffffffffffffff0
   27268:	sub	sp, sp, x0
   2726c:	ldrsw	x0, [x29, #116]
   27270:	mov	x1, sp
   27274:	str	x1, [x29, #88]
   27278:	mov	w1, #0x1                   	// #1
   2727c:	lsl	x0, x0, #3
   27280:	add	x0, x0, #0xf
   27284:	and	x0, x0, #0xfffffffffffffff0
   27288:	sub	sp, sp, x0
   2728c:	mov	x0, sp
   27290:	str	x0, [x29, #104]
   27294:	mov	x0, x22
   27298:	bl	6a50 <__asan_cplus_demangle_mangled_name@plt>
   2729c:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   272a0:	add	x2, x2, #0x304
   272a4:	cbz	x0, 272e4 <__asan_cplus_demangle_init_info@@Base+0x3a4>
   272a8:	ldr	w1, [x0]
   272ac:	sub	w1, w1, #0x1
   272b0:	cmp	w1, #0x7
   272b4:	b.hi	27304 <__asan_cplus_demangle_init_info@@Base+0x3c4>  // b.pmore
   272b8:	ldrb	w1, [x2, w1, uxtw]
   272bc:	adr	x3, 272c8 <__asan_cplus_demangle_init_info@@Base+0x388>
   272c0:	add	x1, x3, w1, sxtb #2
   272c4:	br	x1
   272c8:	ldr	x0, [x0, #8]
   272cc:	b	272a4 <__asan_cplus_demangle_init_info@@Base+0x364>
   272d0:	ldr	x0, [x0, #16]
   272d4:	b	272a4 <__asan_cplus_demangle_init_info@@Base+0x364>
   272d8:	ldr	w0, [x0, #8]
   272dc:	str	w0, [x19]
   272e0:	mov	w0, #0x1                   	// #1
   272e4:	mov	sp, x29
   272e8:	ldp	x19, x20, [sp, #16]
   272ec:	ldp	x21, x22, [sp, #32]
   272f0:	ldp	x29, x30, [sp], #144
   272f4:	ret
   272f8:	ldr	w0, [x0, #8]
   272fc:	str	w0, [x20]
   27300:	b	272e0 <__asan_cplus_demangle_init_info@@Base+0x3a0>
   27304:	mov	w0, #0x0                   	// #0
   27308:	b	272e4 <__asan_cplus_demangle_init_info@@Base+0x3a4>

000000000002730c <__asan_cplus_demangle_v3@@Base>:
   2730c:	stp	x29, x30, [sp, #-32]!
   27310:	mov	x29, sp
   27314:	add	x2, sp, #0x18
   27318:	bl	271ac <__asan_cplus_demangle_init_info@@Base+0x26c>
   2731c:	ldp	x29, x30, [sp], #32
   27320:	ret

0000000000027324 <__asan_cplus_demangle_v3_callback@@Base>:
   27324:	b	26f6c <__asan_cplus_demangle_init_info@@Base+0x2c>

0000000000027328 <__asan_java_demangle_v3@@Base>:
   27328:	stp	x29, x30, [sp, #-32]!
   2732c:	mov	w1, #0x25                  	// #37
   27330:	mov	x29, sp
   27334:	add	x2, sp, #0x18
   27338:	bl	271ac <__asan_cplus_demangle_init_info@@Base+0x26c>
   2733c:	ldp	x29, x30, [sp], #32
   27340:	ret

0000000000027344 <__asan_java_demangle_v3_callback@@Base>:
   27344:	mov	x3, x2
   27348:	mov	x2, x1
   2734c:	mov	w1, #0x25                  	// #37
   27350:	b	26f6c <__asan_cplus_demangle_init_info@@Base+0x2c>

0000000000027354 <__asan_is_gnu_v3_mangled_ctor@@Base>:
   27354:	stp	x29, x30, [sp, #-32]!
   27358:	mov	x29, sp
   2735c:	add	x2, sp, #0x1c
   27360:	add	x1, sp, #0x18
   27364:	bl	27214 <__asan_cplus_demangle_init_info@@Base+0x2d4>
   27368:	cmp	w0, #0x0
   2736c:	ldr	w0, [sp, #24]
   27370:	ldp	x29, x30, [sp], #32
   27374:	csel	w0, w0, wzr, ne  // ne = any
   27378:	ret

000000000002737c <__asan_is_gnu_v3_mangled_dtor@@Base>:
   2737c:	stp	x29, x30, [sp, #-32]!
   27380:	mov	x29, sp
   27384:	add	x2, sp, #0x1c
   27388:	add	x1, sp, #0x18
   2738c:	bl	27214 <__asan_cplus_demangle_init_info@@Base+0x2d4>
   27390:	cmp	w0, #0x0
   27394:	ldr	w0, [sp, #28]
   27398:	ldp	x29, x30, [sp], #32
   2739c:	csel	w0, w0, wzr, ne  // ne = any
   273a0:	ret

00000000000273a4 <__asan_internal_memcpy@@Base>:
   273a4:	b	12124 <__sanitizer_set_report_fd@@Base+0x1884>

00000000000273a8 <__asan_internal_memset@@Base>:
   273a8:	b	12190 <__sanitizer_set_report_fd@@Base+0x18f0>

00000000000273ac <__asan_internal_memcmp@@Base>:
   273ac:	b	120ec <__sanitizer_set_report_fd@@Base+0x184c>

00000000000273b0 <__asan_internal_strcmp@@Base>:
   273b0:	b	121f0 <__sanitizer_set_report_fd@@Base+0x1950>

00000000000273b4 <__asan_internal_strncmp@@Base>:
   273b4:	b	12220 <__sanitizer_set_report_fd@@Base+0x1980>

00000000000273b8 <__asan_internal_strlen@@Base>:
   273b8:	b	122ec <__sanitizer_set_report_fd@@Base+0x1a4c>

00000000000273bc <__asan_internal_strnlen@@Base>:
   273bc:	b	12460 <__sanitizer_set_report_fd@@Base+0x1bc0>
   273c0:	stp	x29, x30, [sp, #-16]!
   273c4:	mov	x0, x4
   273c8:	mov	w2, #0xffffffff            	// #-1
   273cc:	mov	x29, sp
   273d0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   273d4:	add	x1, x1, #0x96e
   273d8:	blr	x3
   273dc:	mov	w0, #0x0                   	// #0
   273e0:	ldp	x29, x30, [sp], #16
   273e4:	ret
   273e8:	mov	x16, x3
   273ec:	mov	x0, x4
   273f0:	mov	w2, #0xffffffff            	// #-1
   273f4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   273f8:	add	x1, x1, #0x98e
   273fc:	br	x16
   27400:	ldr	x2, [x0, #8]
   27404:	ldr	x1, [x1, #8]
   27408:	cmp	x2, x1
   2740c:	cset	w0, hi  // hi = pmore
   27410:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
   27414:	ret
   27418:	ldr	x2, [x0]
   2741c:	ldr	x0, [x1, #8]
   27420:	cmp	x0, x2
   27424:	b.hi	2743c <__asan_internal_strnlen@@Base+0x80>  // b.pmore
   27428:	ldr	x1, [x1, #16]
   2742c:	add	x0, x0, x1
   27430:	cmp	x0, x2
   27434:	cset	w0, ls  // ls = plast
   27438:	ret
   2743c:	mov	w0, #0xffffffff            	// #-1
   27440:	b	27438 <__asan_internal_strnlen@@Base+0x7c>
   27444:	stp	x29, x30, [sp, #-192]!
   27448:	mov	x29, sp
   2744c:	stp	x19, x20, [sp, #16]
   27450:	add	x20, sp, #0x60
   27454:	mov	x19, x3
   27458:	stp	x21, x22, [sp, #32]
   2745c:	mov	x22, x0
   27460:	add	x21, x2, #0x1, lsl #12
   27464:	mov	x0, x20
   27468:	mov	x2, #0x20                  	// #32
   2746c:	stp	x23, x24, [sp, #48]
   27470:	mov	x23, x1
   27474:	mov	w1, #0x0                   	// #0
   27478:	str	x25, [sp, #64]
   2747c:	bl	65f0 <__asan_internal_memset@plt>
   27480:	add	x2, sp, #0xa0
   27484:	add	x5, sp, #0x80
   27488:	mov	x3, #0x0                   	// #0
   2748c:	ldrb	w4, [x22, x3]
   27490:	cmp	w4, #0xf
   27494:	b.ls	274b4 <__asan_internal_strnlen@@Base+0xf8>  // b.plast
   27498:	mov	w0, #0x0                   	// #0
   2749c:	ldp	x19, x20, [sp, #16]
   274a0:	ldp	x21, x22, [sp, #32]
   274a4:	ldp	x23, x24, [sp, #48]
   274a8:	ldr	x25, [sp, #64]
   274ac:	ldp	x29, x30, [sp], #192
   274b0:	ret
   274b4:	sbfiz	x1, x4, #1, #32
   274b8:	ldrh	w4, [x20, w4, sxtw #1]
   274bc:	and	w0, w3, #0xffff
   274c0:	cbnz	w4, 2761c <__asan_internal_strnlen@@Base+0x260>
   274c4:	strh	w0, [x5, x1]
   274c8:	strh	w0, [x2, x1]
   274cc:	ldrb	w0, [x22, x3]
   274d0:	add	x3, x3, #0x1
   274d4:	cmp	x23, x3
   274d8:	lsl	x0, x0, #1
   274dc:	ldrh	w1, [x20, x0]
   274e0:	add	w1, w1, #0x1
   274e4:	strh	w1, [x20, x0]
   274e8:	b.ne	2748c <__asan_internal_strnlen@@Base+0xd0>  // b.any
   274ec:	mov	w1, #0x0                   	// #0
   274f0:	mov	x0, x19
   274f4:	mov	x2, #0x800                 	// #2048
   274f8:	bl	65f0 <__asan_internal_memset@plt>
   274fc:	mov	x0, #0x1                   	// #1
   27500:	add	x11, sp, #0x80
   27504:	mov	w10, w0
   27508:	mov	w1, #0x0                   	// #0
   2750c:	ldrh	w3, [x20, x0, lsl #1]
   27510:	cbz	w3, 2754c <__asan_internal_strnlen@@Base+0x190>
   27514:	lsl	w4, w10, w0
   27518:	cmp	w4, w3
   2751c:	b.cc	27498 <__asan_internal_strnlen@@Base+0xdc>  // b.lo, b.ul, b.last
   27520:	ubfiz	w2, w0, #9, #7
   27524:	sub	w8, w0, #0x1
   27528:	sub	w2, w2, #0x200
   2752c:	ldrh	w5, [x11, x0, lsl #1]
   27530:	sxtw	x7, w4
   27534:	and	w2, w2, #0xffff
   27538:	and	x4, x3, #0xffff
   2753c:	lsl	w8, w10, w8
   27540:	mov	x6, #0x0                   	// #0
   27544:	cmp	x4, x6
   27548:	b.hi	27630 <__asan_internal_strnlen@@Base+0x274>  // b.pmore
   2754c:	add	x0, x0, #0x1
   27550:	cmp	x0, #0x9
   27554:	b.ne	2750c <__asan_internal_strnlen@@Base+0x150>  // b.any
   27558:	add	x9, sp, #0x50
   2755c:	mov	x5, #0x0                   	// #0
   27560:	mov	w8, #0x1                   	// #1
   27564:	ldrh	w2, [x20, x0, lsl #1]
   27568:	cbz	w2, 27588 <__asan_internal_strnlen@@Base+0x1cc>
   2756c:	sub	w10, w0, #0x1
   27570:	mov	w3, #0x0                   	// #0
   27574:	strh	w1, [x5, x9]
   27578:	mov	w6, w3
   2757c:	cmp	x0, w3, uxtw
   27580:	b.hi	2769c <__asan_internal_strnlen@@Base+0x2e0>  // b.pmore
   27584:	cbnz	w2, 27498 <__asan_internal_strnlen@@Base+0xdc>
   27588:	add	x0, x0, #0x1
   2758c:	add	x5, x5, #0x2
   27590:	cmp	x0, #0x10
   27594:	b.ne	27564 <__asan_internal_strnlen@@Base+0x1a8>  // b.any
   27598:	add	x16, sp, #0x80
   2759c:	add	x17, sp, #0x50
   275a0:	mov	x10, #0x6                   	// #6
   275a4:	mov	x7, #0x0                   	// #0
   275a8:	mov	x0, #0xf                   	// #15
   275ac:	mov	w11, #0x1                   	// #1
   275b0:	ldrh	w2, [x20, x0, lsl #1]
   275b4:	cbz	w2, 27604 <__asan_internal_strnlen@@Base+0x248>
   275b8:	sub	w1, w0, #0x8
   275bc:	ubfiz	w14, w0, #9, #7
   275c0:	sub	w12, w14, #0x1, lsl #12
   275c4:	sub	w13, w0, #0x1
   275c8:	ldrh	w8, [x16, x0, lsl #1]
   275cc:	lsl	w1, w11, w1
   275d0:	ldrh	w6, [x17, x10, lsl #1]
   275d4:	sub	x15, x0, #0x8
   275d8:	and	w12, w12, #0xffff
   275dc:	and	x2, x2, #0xffff
   275e0:	sxtw	x18, w1
   275e4:	mov	w5, w1
   275e8:	lsl	w13, w11, w13
   275ec:	mov	x1, #0x0                   	// #0
   275f0:	mov	x22, #0x0                   	// #0
   275f4:	mov	x4, #0x100                 	// #256
   275f8:	mov	x9, #0x0                   	// #0
   275fc:	cmp	x2, x9
   27600:	b.hi	276e8 <__asan_internal_strnlen@@Base+0x32c>  // b.pmore
   27604:	sub	x0, x0, #0x1
   27608:	sub	x10, x10, #0x1
   2760c:	cmp	x0, #0x8
   27610:	b.ne	275b0 <__asan_internal_strnlen@@Base+0x1f4>  // b.any
   27614:	mov	w0, #0x1                   	// #1
   27618:	b	2749c <__asan_internal_strnlen@@Base+0xe0>
   2761c:	ldrh	w1, [x2, x1]
   27620:	strh	w0, [x21, x1, lsl #1]
   27624:	ldrb	w1, [x22, x3]
   27628:	strh	w0, [x2, x1, lsl #1]
   2762c:	b	274cc <__asan_internal_strnlen@@Base+0x110>
   27630:	tst	w5, #0xfe00
   27634:	b.ne	27498 <__asan_internal_strnlen@@Base+0xdc>  // b.any
   27638:	orr	w9, w2, w5
   2763c:	mov	w3, w1
   27640:	cmp	x3, #0xff
   27644:	b.ls	27680 <__asan_internal_strnlen@@Base+0x2c4>  // b.plast
   27648:	add	x6, x6, #0x1
   2764c:	cmp	x6, x4
   27650:	b.cs	2765c <__asan_internal_strnlen@@Base+0x2a0>  // b.hs, b.nlast
   27654:	ubfiz	x5, x5, #1, #16
   27658:	ldrh	w5, [x21, x5]
   2765c:	mov	w3, w8
   27660:	tst	w1, w3
   27664:	b.ne	27694 <__asan_internal_strnlen@@Base+0x2d8>  // b.any
   27668:	cbz	w3, 27678 <__asan_internal_strnlen@@Base+0x2bc>
   2766c:	sub	w9, w3, #0x1
   27670:	and	w1, w9, w1
   27674:	add	w3, w3, w1
   27678:	mov	w1, w3
   2767c:	b	27544 <__asan_internal_strnlen@@Base+0x188>
   27680:	ldrh	w12, [x19, x3, lsl #1]
   27684:	cbnz	w12, 27498 <__asan_internal_strnlen@@Base+0xdc>
   27688:	strh	w9, [x19, x3, lsl #1]
   2768c:	add	x3, x3, x7
   27690:	b	27640 <__asan_internal_strnlen@@Base+0x284>
   27694:	lsr	w3, w3, #1
   27698:	b	27660 <__asan_internal_strnlen@@Base+0x2a4>
   2769c:	lsr	w4, w2, w3
   276a0:	tbz	w4, #0, 276d0 <__asan_internal_strnlen@@Base+0x314>
   276a4:	sub	w4, w10, w3
   276a8:	sub	x6, x0, x6
   276ac:	mov	w7, #0x0                   	// #0
   276b0:	lsl	w4, w8, w4
   276b4:	cmp	x6, w7, uxtw
   276b8:	b.ls	276c8 <__asan_internal_strnlen@@Base+0x30c>  // b.plast
   276bc:	tst	w1, w4
   276c0:	b.ne	276d8 <__asan_internal_strnlen@@Base+0x31c>  // b.any
   276c4:	add	w1, w1, w4
   276c8:	lsl	w4, w8, w3
   276cc:	bic	w2, w2, w4
   276d0:	add	w3, w3, #0x1
   276d4:	b	27578 <__asan_internal_strnlen@@Base+0x1bc>
   276d8:	bic	w1, w1, w4
   276dc:	add	w7, w7, #0x1
   276e0:	lsr	w4, w4, #1
   276e4:	b	276b4 <__asan_internal_strnlen@@Base+0x2f8>
   276e8:	and	x23, x6, #0xff
   276ec:	cmp	x4, w6, uxtb
   276f0:	b.eq	2778c <__asan_internal_strnlen@@Base+0x3d0>  // b.none
   276f4:	ldrh	w1, [x19, x23, lsl #1]
   276f8:	lsl	x3, x23, #1
   276fc:	cbnz	w1, 27774 <__asan_internal_strnlen@@Base+0x3b8>
   27700:	tst	x7, #0xfffffffffffffe00
   27704:	b.ne	27498 <__asan_internal_strnlen@@Base+0xdc>  // b.any
   27708:	add	w1, w14, w7
   2770c:	mov	x22, x7
   27710:	add	x7, x18, x7
   27714:	strh	w1, [x19, x3]
   27718:	mov	x1, x15
   2771c:	add	x4, x19, x22, lsl #1
   27720:	orr	w24, w12, w8
   27724:	lsr	w3, w6, #8
   27728:	add	x4, x4, #0x200
   2772c:	lsl	w30, w11, w1
   27730:	cmp	x30, x3
   27734:	b.hi	27794 <__asan_internal_strnlen@@Base+0x3d8>  // b.pmore
   27738:	add	x9, x9, #0x1
   2773c:	cmp	x9, x2
   27740:	b.cs	2774c <__asan_internal_strnlen@@Base+0x390>  // b.hs, b.nlast
   27744:	ubfiz	x8, x8, #1, #16
   27748:	ldrh	w8, [x21, x8]
   2774c:	mov	w3, w13
   27750:	tst	w6, w3
   27754:	b.ne	277a8 <__asan_internal_strnlen@@Base+0x3ec>  // b.any
   27758:	cbz	w3, 27768 <__asan_internal_strnlen@@Base+0x3ac>
   2775c:	sub	w4, w3, #0x1
   27760:	and	w6, w4, w6
   27764:	add	w3, w3, w6
   27768:	mov	x4, x23
   2776c:	mov	w6, w3
   27770:	b	275fc <__asan_internal_strnlen@@Base+0x240>
   27774:	tbz	w1, #12, 27498 <__asan_internal_strnlen@@Base+0xdc>
   27778:	and	x22, x1, #0x1ff
   2777c:	ubfx	x1, x1, #9, #3
   27780:	cmp	x1, x15
   27784:	b.cs	2771c <__asan_internal_strnlen@@Base+0x360>  // b.hs, b.nlast
   27788:	b	27498 <__asan_internal_strnlen@@Base+0xdc>
   2778c:	mov	x23, x4
   27790:	b	2771c <__asan_internal_strnlen@@Base+0x360>
   27794:	ldrh	w25, [x4, x3, lsl #1]
   27798:	cbnz	w25, 27498 <__asan_internal_strnlen@@Base+0xdc>
   2779c:	strh	w24, [x4, x3, lsl #1]
   277a0:	add	x3, x3, x5
   277a4:	b	27730 <__asan_internal_strnlen@@Base+0x374>
   277a8:	lsr	w3, w3, #1
   277ac:	b	27750 <__asan_internal_strnlen@@Base+0x394>
   277b0:	ldr	w4, [x3]
   277b4:	mov	x6, x1
   277b8:	cmp	w4, #0xe
   277bc:	b.hi	277f4 <__asan_internal_strnlen@@Base+0x438>  // b.pmore
   277c0:	ldr	x1, [x0]
   277c4:	ldr	x7, [x2]
   277c8:	sub	x6, x6, x1
   277cc:	cmp	x6, #0x3
   277d0:	b.le	277fc <__asan_internal_strnlen@@Base+0x440>
   277d4:	ldr	w5, [x1], #4
   277d8:	lsl	x5, x5, x4
   277dc:	orr	x5, x5, x7
   277e0:	prfm	pldl1strm, [x1]
   277e4:	add	w4, w4, #0x20
   277e8:	str	x1, [x0]
   277ec:	str	x5, [x2]
   277f0:	str	w4, [x3]
   277f4:	mov	w0, #0x1                   	// #1
   277f8:	ret
   277fc:	mov	w0, #0x0                   	// #0
   27800:	b	277f8 <__asan_internal_strnlen@@Base+0x43c>
   27804:	stp	x29, x30, [sp, #-80]!
   27808:	mov	x29, sp
   2780c:	str	x1, [sp, #72]
   27810:	ldr	w1, [x0, #8]
   27814:	stp	x19, x20, [sp, #16]
   27818:	mov	x20, x2
   2781c:	stp	x21, x22, [sp, #32]
   27820:	mov	x21, x4
   27824:	str	x23, [sp, #48]
   27828:	cbnz	w1, 2788c <__asan_internal_strnlen@@Base+0x4d0>
   2782c:	ldr	x19, [x0, #48]
   27830:	adrp	x22, 27000 <__asan_cplus_demangle_init_info@@Base+0xc0>
   27834:	add	x23, sp, #0x48
   27838:	add	x22, x22, #0x418
   2783c:	cbnz	x19, 2786c <__asan_internal_strnlen@@Base+0x4b0>
   27840:	mov	x4, #0x0                   	// #0
   27844:	mov	x3, #0x0                   	// #0
   27848:	mov	x2, #0x0                   	// #0
   2784c:	ldr	x1, [sp, #72]
   27850:	mov	x0, x21
   27854:	blr	x20
   27858:	ldp	x19, x20, [sp, #16]
   2785c:	ldp	x21, x22, [sp, #32]
   27860:	ldr	x23, [sp, #48]
   27864:	ldp	x29, x30, [sp], #80
   27868:	ret
   2786c:	ldp	x1, x2, [x19, #8]
   27870:	mov	x4, x22
   27874:	mov	x0, x23
   27878:	mov	x3, #0x18                  	// #24
   2787c:	bl	6990 <bsearch@plt>
   27880:	cbnz	x0, 278bc <__asan_internal_strnlen@@Base+0x500>
   27884:	ldr	x19, [x19]
   27888:	b	2783c <__asan_internal_strnlen@@Base+0x480>
   2788c:	adrp	x22, 27000 <__asan_cplus_demangle_init_info@@Base+0xc0>
   27890:	add	x19, x0, #0x30
   27894:	add	x22, x22, #0x418
   27898:	add	x23, sp, #0x48
   2789c:	ldar	x19, [x19]
   278a0:	cbz	x19, 27840 <__asan_internal_strnlen@@Base+0x484>
   278a4:	ldp	x1, x2, [x19, #8]
   278a8:	mov	x4, x22
   278ac:	mov	x0, x23
   278b0:	mov	x3, #0x18                  	// #24
   278b4:	bl	6990 <bsearch@plt>
   278b8:	cbz	x0, 2789c <__asan_internal_strnlen@@Base+0x4e0>
   278bc:	ldp	x2, x3, [x0]
   278c0:	ldr	x4, [x0, #16]
   278c4:	b	2784c <__asan_internal_strnlen@@Base+0x490>
   278c8:	stp	x29, x30, [sp, #-144]!
   278cc:	mov	x29, sp
   278d0:	stp	x27, x28, [sp, #80]
   278d4:	add	x28, x2, x4
   278d8:	mov	x27, x5
   278dc:	stp	x19, x20, [sp, #16]
   278e0:	mov	x20, x6
   278e4:	stp	x21, x22, [sp, #32]
   278e8:	mov	x22, x2
   278ec:	mov	x21, x7
   278f0:	stp	x23, x24, [sp, #48]
   278f4:	mov	x23, x0
   278f8:	mov	x0, x5
   278fc:	stp	x25, x26, [sp, #64]
   27900:	mov	x25, x4
   27904:	stp	x3, x1, [sp, #112]
   27908:	bl	6570 <__asan_internal_strlen@plt>
   2790c:	mov	x24, x0
   27910:	add	x0, x28, x0
   27914:	mov	x3, x21
   27918:	add	x26, x0, #0x1
   2791c:	mov	x2, x20
   27920:	mov	x1, x26
   27924:	str	x0, [sp, #104]
   27928:	mov	x0, x23
   2792c:	bl	6670 <__asan_backtrace_alloc@plt>
   27930:	cbz	x0, 279c0 <__asan_internal_strnlen@@Base+0x604>
   27934:	ldr	x8, [sp, #120]
   27938:	mov	x19, x0
   2793c:	mov	x2, x22
   27940:	mov	x1, x8
   27944:	bl	6560 <__asan_internal_memcpy@plt>
   27948:	ldr	x1, [sp, #112]
   2794c:	mov	x2, x25
   27950:	add	x0, x19, x22
   27954:	bl	6560 <__asan_internal_memcpy@plt>
   27958:	mov	x2, x24
   2795c:	mov	x1, x27
   27960:	add	x0, x19, x28
   27964:	bl	6560 <__asan_internal_memcpy@plt>
   27968:	ldr	x0, [sp, #104]
   2796c:	add	x3, sp, #0x8c
   27970:	mov	x2, x21
   27974:	mov	x1, x20
   27978:	strb	wzr, [x19, x0]
   2797c:	mov	x0, x19
   27980:	bl	6b10 <__asan_backtrace_open@plt>
   27984:	mov	w22, w0
   27988:	mov	x4, x21
   2798c:	mov	x3, x20
   27990:	mov	x2, x26
   27994:	mov	x1, x19
   27998:	mov	x0, x23
   2799c:	bl	6950 <__asan_backtrace_free@plt>
   279a0:	mov	w0, w22
   279a4:	ldp	x19, x20, [sp, #16]
   279a8:	ldp	x21, x22, [sp, #32]
   279ac:	ldp	x23, x24, [sp, #48]
   279b0:	ldp	x25, x26, [sp, #64]
   279b4:	ldp	x27, x28, [sp, #80]
   279b8:	ldp	x29, x30, [sp], #144
   279bc:	ret
   279c0:	mov	w22, #0xffffffff            	// #-1
   279c4:	b	279a0 <__asan_internal_strnlen@@Base+0x5e4>
   279c8:	stp	x29, x30, [sp, #-256]!
   279cc:	mov	x29, sp
   279d0:	stp	x19, x20, [sp, #16]
   279d4:	mov	x20, x1
   279d8:	stp	x21, x22, [sp, #32]
   279dc:	mov	x22, x3
   279e0:	mov	x21, x0
   279e4:	stp	x23, x24, [sp, #48]
   279e8:	mov	x23, x4
   279ec:	add	x0, sp, #0x80
   279f0:	stp	x27, x28, [sp, #80]
   279f4:	mov	x27, x2
   279f8:	mov	x24, #0x0                   	// #0
   279fc:	stp	x25, x26, [sp, #64]
   27a00:	mov	x25, #0x0                   	// #0
   27a04:	str	x0, [sp, #112]
   27a08:	ldr	x1, [sp, #112]
   27a0c:	mov	x0, x20
   27a10:	bl	2a4b8 <__asan_backtrace_vector_release@@Base+0x7c>
   27a14:	tbnz	w0, #31, 27a74 <__asan_internal_strnlen@@Base+0x6b8>
   27a18:	ldr	w0, [sp, #144]
   27a1c:	and	w0, w0, #0xf000
   27a20:	cmp	w0, #0xa, lsl #12
   27a24:	b.ne	27a74 <__asan_internal_strnlen@@Base+0x6b8>  // b.any
   27a28:	mov	x26, #0x80                  	// #128
   27a2c:	mov	x3, x23
   27a30:	mov	x2, x22
   27a34:	mov	x1, x26
   27a38:	mov	x0, x21
   27a3c:	bl	6670 <__asan_backtrace_alloc@plt>
   27a40:	mov	x28, x0
   27a44:	cbz	x0, 27a74 <__asan_internal_strnlen@@Base+0x6b8>
   27a48:	mov	x1, x0
   27a4c:	mov	x2, x26
   27a50:	mov	x0, x20
   27a54:	bl	6470 <readlink@plt>
   27a58:	tbz	x0, #63, 27b78 <__asan_internal_strnlen@@Base+0x7bc>
   27a5c:	mov	x4, x23
   27a60:	mov	x3, x22
   27a64:	mov	x2, x26
   27a68:	mov	x1, x28
   27a6c:	mov	x0, x21
   27a70:	bl	6950 <__asan_backtrace_free@plt>
   27a74:	mov	x0, x20
   27a78:	mov	w1, #0x2f                  	// #47
   27a7c:	bl	6850 <strrchr@plt>
   27a80:	adrp	x3, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   27a84:	cbz	x0, 27c88 <__asan_internal_strnlen@@Base+0x8cc>
   27a88:	add	x0, x0, #0x1
   27a8c:	sub	x26, x0, x20
   27a90:	mov	x7, x23
   27a94:	mov	x6, x22
   27a98:	mov	x5, x27
   27a9c:	add	x3, x3, #0x6df
   27aa0:	mov	x2, x26
   27aa4:	mov	x1, x20
   27aa8:	mov	x0, x21
   27aac:	mov	x4, #0x0                   	// #0
   27ab0:	bl	278c8 <__asan_internal_strnlen@@Base+0x50c>
   27ab4:	mov	w19, w0
   27ab8:	tbz	w0, #31, 27b34 <__asan_internal_strnlen@@Base+0x778>
   27abc:	adrp	x19, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   27ac0:	add	x19, x19, #0x9b0
   27ac4:	mov	x0, x19
   27ac8:	bl	6570 <__asan_internal_strlen@plt>
   27acc:	mov	x3, x19
   27ad0:	mov	x4, x0
   27ad4:	mov	x7, x23
   27ad8:	mov	x6, x22
   27adc:	mov	x5, x27
   27ae0:	mov	x2, x26
   27ae4:	mov	x1, x20
   27ae8:	mov	x0, x21
   27aec:	bl	278c8 <__asan_internal_strnlen@@Base+0x50c>
   27af0:	mov	w19, w0
   27af4:	tbz	w0, #31, 27b34 <__asan_internal_strnlen@@Base+0x778>
   27af8:	adrp	x19, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   27afc:	add	x19, x19, #0x9b8
   27b00:	mov	x0, x19
   27b04:	bl	6570 <__asan_internal_strlen@plt>
   27b08:	mov	x1, x19
   27b0c:	mov	x2, x0
   27b10:	mov	x7, x23
   27b14:	mov	x6, x22
   27b18:	mov	x5, x27
   27b1c:	mov	x4, x26
   27b20:	mov	x3, x20
   27b24:	mov	x0, x21
   27b28:	bl	278c8 <__asan_internal_strnlen@@Base+0x50c>
   27b2c:	cmp	w0, #0x0
   27b30:	csinv	w19, w0, wzr, ge  // ge = tcont
   27b34:	cmp	x24, #0x0
   27b38:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   27b3c:	b.eq	27b58 <__asan_internal_strnlen@@Base+0x79c>  // b.none
   27b40:	mov	x4, x23
   27b44:	mov	x3, x22
   27b48:	mov	x2, x25
   27b4c:	mov	x1, x24
   27b50:	mov	x0, x21
   27b54:	bl	6950 <__asan_backtrace_free@plt>
   27b58:	mov	w0, w19
   27b5c:	ldp	x19, x20, [sp, #16]
   27b60:	ldp	x21, x22, [sp, #32]
   27b64:	ldp	x23, x24, [sp, #48]
   27b68:	ldp	x25, x26, [sp, #64]
   27b6c:	ldp	x27, x28, [sp, #80]
   27b70:	ldp	x29, x30, [sp], #256
   27b74:	ret
   27b78:	sub	x1, x26, #0x1
   27b7c:	cmp	x1, x0
   27b80:	b.ls	27bc0 <__asan_internal_strnlen@@Base+0x804>  // b.plast
   27b84:	strb	wzr, [x28, x0]
   27b88:	ldrb	w0, [x28]
   27b8c:	cmp	w0, #0x2f
   27b90:	b.ne	27be0 <__asan_internal_strnlen@@Base+0x824>  // b.any
   27b94:	cbz	x24, 27bb0 <__asan_internal_strnlen@@Base+0x7f4>
   27b98:	mov	x4, x23
   27b9c:	mov	x3, x22
   27ba0:	mov	x2, x25
   27ba4:	mov	x1, x24
   27ba8:	mov	x0, x21
   27bac:	bl	6950 <__asan_backtrace_free@plt>
   27bb0:	mov	x25, x26
   27bb4:	mov	x24, x28
   27bb8:	mov	x20, x28
   27bbc:	b	27a08 <__asan_internal_strnlen@@Base+0x64c>
   27bc0:	mov	x2, x26
   27bc4:	mov	x4, x23
   27bc8:	mov	x3, x22
   27bcc:	mov	x1, x28
   27bd0:	mov	x0, x21
   27bd4:	lsl	x26, x26, #1
   27bd8:	bl	6950 <__asan_backtrace_free@plt>
   27bdc:	b	27a2c <__asan_internal_strnlen@@Base+0x670>
   27be0:	mov	x0, x20
   27be4:	mov	w1, #0x2f                  	// #47
   27be8:	bl	6850 <strrchr@plt>
   27bec:	cbz	x0, 27b94 <__asan_internal_strnlen@@Base+0x7d8>
   27bf0:	add	x0, x0, #0x1
   27bf4:	sub	x19, x0, x20
   27bf8:	mov	x0, x28
   27bfc:	bl	6570 <__asan_internal_strlen@plt>
   27c00:	add	x1, x19, #0x1
   27c04:	mov	x3, x23
   27c08:	add	x0, x1, x0
   27c0c:	mov	x2, x22
   27c10:	mov	x1, x0
   27c14:	str	x0, [sp, #104]
   27c18:	mov	x0, x21
   27c1c:	bl	6670 <__asan_backtrace_alloc@plt>
   27c20:	str	x0, [sp, #120]
   27c24:	cbz	x0, 27c94 <__asan_internal_strnlen@@Base+0x8d8>
   27c28:	mov	x2, x19
   27c2c:	mov	x1, x20
   27c30:	bl	6560 <__asan_internal_memcpy@plt>
   27c34:	ldr	x7, [sp, #120]
   27c38:	mov	x0, x28
   27c3c:	add	x19, x7, x19
   27c40:	bl	6570 <__asan_internal_strlen@plt>
   27c44:	mov	x2, x0
   27c48:	mov	x1, x28
   27c4c:	mov	x0, x19
   27c50:	bl	6560 <__asan_internal_memcpy@plt>
   27c54:	mov	x0, x28
   27c58:	bl	6570 <__asan_internal_strlen@plt>
   27c5c:	strb	wzr, [x19, x0]
   27c60:	mov	x2, x26
   27c64:	mov	x1, x28
   27c68:	mov	x4, x23
   27c6c:	mov	x3, x22
   27c70:	mov	x0, x21
   27c74:	bl	6950 <__asan_backtrace_free@plt>
   27c78:	ldr	x7, [sp, #120]
   27c7c:	ldr	x26, [sp, #104]
   27c80:	mov	x28, x7
   27c84:	b	27b94 <__asan_internal_strnlen@@Base+0x7d8>
   27c88:	add	x20, x3, #0x6df
   27c8c:	mov	x26, #0x0                   	// #0
   27c90:	b	27a90 <__asan_internal_strnlen@@Base+0x6d4>
   27c94:	mov	w19, #0xffffffff            	// #-1
   27c98:	b	27b34 <__asan_internal_strnlen@@Base+0x778>
   27c9c:	stp	x29, x30, [sp, #-240]!
   27ca0:	mov	x29, sp
   27ca4:	stp	x19, x20, [sp, #16]
   27ca8:	mov	x19, x3
   27cac:	mov	x20, x3
   27cb0:	stp	x21, x22, [sp, #32]
   27cb4:	add	x21, x0, x1
   27cb8:	mov	x22, x2
   27cbc:	stp	x23, x24, [sp, #48]
   27cc0:	add	x23, sp, #0xc4
   27cc4:	stp	x25, x26, [sp, #64]
   27cc8:	mov	x26, x4
   27ccc:	stp	x27, x28, [sp, #80]
   27cd0:	add	x27, x3, x4
   27cd4:	str	x0, [sp, #128]
   27cd8:	str	x0, [sp, #200]
   27cdc:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   27ce0:	add	x0, x0, #0xb88
   27ce4:	str	x1, [sp, #144]
   27ce8:	str	x0, [sp, #152]
   27cec:	add	x0, x0, #0x200
   27cf0:	str	x0, [sp, #160]
   27cf4:	ldr	x0, [sp, #200]
   27cf8:	sub	x1, x21, x0
   27cfc:	cmp	x1, #0x4
   27d00:	b.gt	27d2c <__asan_internal_strnlen@@Base+0x970>
   27d04:	cmp	x27, x20
   27d08:	b.eq	28748 <__asan_internal_strnlen@@Base+0x138c>  // b.none
   27d0c:	mov	w0, #0x0                   	// #0
   27d10:	ldp	x19, x20, [sp, #16]
   27d14:	ldp	x21, x22, [sp, #32]
   27d18:	ldp	x23, x24, [sp, #48]
   27d1c:	ldp	x25, x26, [sp, #64]
   27d20:	ldp	x27, x28, [sp, #80]
   27d24:	ldp	x29, x30, [sp], #240
   27d28:	ret
   27d2c:	ldrb	w1, [x0]
   27d30:	and	w2, w1, #0xf
   27d34:	cmp	w2, #0x8
   27d38:	b.ne	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.any
   27d3c:	cmp	w1, #0x7f
   27d40:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   27d44:	ldrb	w2, [x0, #1]
   27d48:	ldrh	w1, [x0]
   27d4c:	rev16	w1, w1
   27d50:	tbnz	w2, #5, 27d0c <__asan_internal_strnlen@@Base+0x950>
   27d54:	and	x1, x1, #0xffff
   27d58:	mov	x3, #0x1f                  	// #31
   27d5c:	udiv	x2, x1, x3
   27d60:	msub	x1, x2, x3, x1
   27d64:	cbnz	x1, 27d0c <__asan_internal_strnlen@@Base+0x950>
   27d68:	add	x0, x0, #0x2
   27d6c:	str	wzr, [sp, #196]
   27d70:	stp	x0, xzr, [sp, #200]
   27d74:	ldr	x0, [sp, #200]
   27d78:	tst	x0, #0x3
   27d7c:	b.ne	27e88 <__asan_internal_strnlen@@Base+0xacc>  // b.any
   27d80:	add	x24, sp, #0xd0
   27d84:	add	x25, sp, #0xc8
   27d88:	mov	x3, x23
   27d8c:	mov	x2, x24
   27d90:	mov	x1, x21
   27d94:	mov	x0, x25
   27d98:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   27d9c:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   27da0:	ldr	x0, [sp, #208]
   27da4:	str	x0, [sp, #104]
   27da8:	ldr	w0, [sp, #104]
   27dac:	ubfx	w1, w0, #1, #2
   27db0:	ldr	x0, [sp, #104]
   27db4:	cmp	w1, #0x3
   27db8:	lsr	x0, x0, #3
   27dbc:	str	x0, [sp, #208]
   27dc0:	ldr	w0, [sp, #196]
   27dc4:	sub	w0, w0, #0x3
   27dc8:	str	w0, [sp, #196]
   27dcc:	b.eq	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.none
   27dd0:	cbnz	w1, 27edc <__asan_internal_strnlen@@Base+0xb20>
   27dd4:	ldr	x1, [sp, #200]
   27dd8:	mov	w2, #0x0                   	// #0
   27ddc:	mov	x3, x1
   27de0:	cmp	w0, #0x8
   27de4:	sub	x1, x1, #0x1
   27de8:	b.hi	27eac <__asan_internal_strnlen@@Base+0xaf0>  // b.pmore
   27dec:	cbz	w2, 27df4 <__asan_internal_strnlen@@Base+0xa38>
   27df0:	str	x3, [sp, #200]
   27df4:	ldr	x1, [sp, #200]
   27df8:	str	wzr, [sp, #196]
   27dfc:	str	xzr, [sp, #208]
   27e00:	sub	x0, x21, x1
   27e04:	cmp	x0, #0x3
   27e08:	b.le	27d0c <__asan_internal_strnlen@@Base+0x950>
   27e0c:	ldrb	w0, [x1]
   27e10:	add	x1, x1, #0x4
   27e14:	ldurb	w2, [x1, #-3]
   27e18:	ldurb	w3, [x1, #-2]
   27e1c:	orr	w2, w0, w2, lsl #8
   27e20:	ldurb	w0, [x1, #-1]
   27e24:	str	x1, [sp, #200]
   27e28:	orr	w0, w3, w0, lsl #8
   27e2c:	mvn	w0, w0
   27e30:	cmp	w2, w0, uxth
   27e34:	b.ne	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.any
   27e38:	sub	x0, x21, x1
   27e3c:	cmp	w2, w0
   27e40:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   27e44:	sub	x0, x27, x20
   27e48:	cmp	w2, w0
   27e4c:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   27e50:	and	x25, x2, #0xffff
   27e54:	mov	x0, x20
   27e58:	mov	x2, x25
   27e5c:	bl	6560 <__asan_internal_memcpy@plt>
   27e60:	ldr	x2, [sp, #200]
   27e64:	add	x20, x20, x25
   27e68:	add	x2, x2, x25
   27e6c:	str	x2, [sp, #200]
   27e70:	ldr	x0, [sp, #200]
   27e74:	tst	x0, #0x3
   27e78:	b.ne	27eb8 <__asan_internal_strnlen@@Base+0xafc>  // b.any
   27e7c:	ldr	x0, [sp, #104]
   27e80:	tbz	w0, #0, 27d84 <__asan_internal_strnlen@@Base+0x9c8>
   27e84:	b	27cf4 <__asan_internal_strnlen@@Base+0x938>
   27e88:	ldrb	w2, [x0], #1
   27e8c:	ldr	w1, [sp, #196]
   27e90:	lsl	x3, x2, x1
   27e94:	add	w1, w1, #0x8
   27e98:	ldr	x2, [sp, #208]
   27e9c:	str	w1, [sp, #196]
   27ea0:	orr	x2, x2, x3
   27ea4:	stp	x0, x2, [sp, #200]
   27ea8:	b	27d74 <__asan_internal_strnlen@@Base+0x9b8>
   27eac:	sub	w0, w0, #0x8
   27eb0:	mov	w2, #0x1                   	// #1
   27eb4:	b	27ddc <__asan_internal_strnlen@@Base+0xa20>
   27eb8:	ldrb	w2, [x0], #1
   27ebc:	ldr	w1, [sp, #196]
   27ec0:	lsl	x3, x2, x1
   27ec4:	add	w1, w1, #0x8
   27ec8:	ldr	x2, [sp, #208]
   27ecc:	str	w1, [sp, #196]
   27ed0:	orr	x2, x2, x3
   27ed4:	stp	x0, x2, [sp, #200]
   27ed8:	b	27e70 <__asan_internal_strnlen@@Base+0xab4>
   27edc:	cmp	w1, #0x1
   27ee0:	b.eq	2849c <__asan_internal_strnlen@@Base+0x10e0>  // b.none
   27ee4:	mov	x1, x21
   27ee8:	mov	x0, x25
   27eec:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   27ef0:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   27ef4:	ldr	x0, [sp, #208]
   27ef8:	and	w1, w0, #0x1f
   27efc:	add	w1, w1, #0x101
   27f00:	ubfx	w4, w0, #10, #4
   27f04:	str	w1, [sp, #112]
   27f08:	ubfx	w1, w0, #5, #5
   27f0c:	lsr	x0, x0, #14
   27f10:	str	x0, [sp, #208]
   27f14:	ldr	w0, [sp, #196]
   27f18:	add	w1, w1, #0x1
   27f1c:	str	w1, [sp, #120]
   27f20:	add	w28, w4, #0x4
   27f24:	sub	w0, w0, #0xe
   27f28:	str	w0, [sp, #196]
   27f2c:	ldr	w0, [sp, #112]
   27f30:	cmp	w0, #0x11e
   27f34:	mov	w0, w1
   27f38:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
   27f3c:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   27f40:	add	x0, sp, #0xd8
   27f44:	mov	x2, #0x13                  	// #19
   27f48:	mov	w1, #0x0                   	// #0
   27f4c:	str	x0, [sp, #136]
   27f50:	bl	65f0 <__asan_internal_memset@plt>
   27f54:	mov	x3, x23
   27f58:	mov	x2, x24
   27f5c:	mov	x1, x21
   27f60:	mov	x0, x25
   27f64:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   27f68:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   27f6c:	ldr	x0, [sp, #208]
   27f70:	cmp	w28, #0x4
   27f74:	and	w1, w0, #0x7
   27f78:	strb	w1, [sp, #232]
   27f7c:	ubfx	w1, w0, #3, #3
   27f80:	strb	w1, [sp, #233]
   27f84:	ubfx	w1, w0, #6, #3
   27f88:	strb	w1, [sp, #234]
   27f8c:	ubfx	w1, w0, #9, #3
   27f90:	strb	w1, [sp, #216]
   27f94:	ldr	w1, [sp, #196]
   27f98:	lsr	x2, x0, #12
   27f9c:	str	x2, [sp, #208]
   27fa0:	sub	w3, w1, #0xc
   27fa4:	str	w3, [sp, #196]
   27fa8:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   27fac:	and	w2, w2, #0x7
   27fb0:	lsr	x0, x0, #15
   27fb4:	sub	w1, w1, #0xf
   27fb8:	str	w1, [sp, #196]
   27fbc:	str	x0, [sp, #208]
   27fc0:	cmp	w28, #0x5
   27fc4:	strb	w2, [sp, #224]
   27fc8:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   27fcc:	mov	x3, x23
   27fd0:	mov	x2, x24
   27fd4:	mov	x1, x21
   27fd8:	mov	x0, x25
   27fdc:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   27fe0:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   27fe4:	ldr	x0, [sp, #208]
   27fe8:	cmp	w28, #0x6
   27fec:	and	w1, w0, #0x7
   27ff0:	strb	w1, [sp, #223]
   27ff4:	ldr	w1, [sp, #196]
   27ff8:	lsr	x2, x0, #3
   27ffc:	str	x2, [sp, #208]
   28000:	sub	w3, w1, #0x3
   28004:	str	w3, [sp, #196]
   28008:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2800c:	and	w2, w2, #0x7
   28010:	sub	w3, w1, #0x6
   28014:	str	w3, [sp, #196]
   28018:	cmp	w28, #0x7
   2801c:	strb	w2, [sp, #225]
   28020:	lsr	x2, x0, #6
   28024:	str	x2, [sp, #208]
   28028:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2802c:	and	w2, w2, #0x7
   28030:	sub	w3, w1, #0x9
   28034:	str	w3, [sp, #196]
   28038:	cmp	w28, #0x8
   2803c:	strb	w2, [sp, #222]
   28040:	lsr	x2, x0, #9
   28044:	str	x2, [sp, #208]
   28048:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2804c:	and	w2, w2, #0x7
   28050:	sub	w3, w1, #0xc
   28054:	str	w3, [sp, #196]
   28058:	cmp	w28, #0x9
   2805c:	strb	w2, [sp, #226]
   28060:	lsr	x2, x0, #12
   28064:	str	x2, [sp, #208]
   28068:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2806c:	and	w2, w2, #0x7
   28070:	lsr	x0, x0, #15
   28074:	sub	w1, w1, #0xf
   28078:	str	w1, [sp, #196]
   2807c:	str	x0, [sp, #208]
   28080:	cmp	w28, #0xa
   28084:	strb	w2, [sp, #221]
   28088:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2808c:	mov	x3, x23
   28090:	mov	x2, x24
   28094:	mov	x1, x21
   28098:	mov	x0, x25
   2809c:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   280a0:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   280a4:	ldr	x0, [sp, #208]
   280a8:	cmp	w28, #0xb
   280ac:	and	w1, w0, #0x7
   280b0:	strb	w1, [sp, #227]
   280b4:	ldr	w1, [sp, #196]
   280b8:	lsr	x2, x0, #3
   280bc:	str	x2, [sp, #208]
   280c0:	sub	w3, w1, #0x3
   280c4:	str	w3, [sp, #196]
   280c8:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   280cc:	and	w2, w2, #0x7
   280d0:	sub	w3, w1, #0x6
   280d4:	str	w3, [sp, #196]
   280d8:	cmp	w28, #0xc
   280dc:	strb	w2, [sp, #220]
   280e0:	lsr	x2, x0, #6
   280e4:	str	x2, [sp, #208]
   280e8:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   280ec:	and	w2, w2, #0x7
   280f0:	sub	w3, w1, #0x9
   280f4:	str	w3, [sp, #196]
   280f8:	cmp	w28, #0xd
   280fc:	strb	w2, [sp, #228]
   28100:	lsr	x2, x0, #9
   28104:	str	x2, [sp, #208]
   28108:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2810c:	and	w2, w2, #0x7
   28110:	sub	w3, w1, #0xc
   28114:	str	w3, [sp, #196]
   28118:	cmp	w28, #0xe
   2811c:	strb	w2, [sp, #219]
   28120:	lsr	x2, x0, #12
   28124:	str	x2, [sp, #208]
   28128:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2812c:	and	w2, w2, #0x7
   28130:	lsr	x0, x0, #15
   28134:	sub	w1, w1, #0xf
   28138:	str	w1, [sp, #196]
   2813c:	str	x0, [sp, #208]
   28140:	cmp	w28, #0xf
   28144:	strb	w2, [sp, #229]
   28148:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2814c:	mov	x3, x23
   28150:	mov	x2, x24
   28154:	mov	x1, x21
   28158:	mov	x0, x25
   2815c:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   28160:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   28164:	ldr	x0, [sp, #208]
   28168:	cmp	w28, #0x10
   2816c:	and	w1, w0, #0x7
   28170:	strb	w1, [sp, #218]
   28174:	ldr	w1, [sp, #196]
   28178:	lsr	x2, x0, #3
   2817c:	str	x2, [sp, #208]
   28180:	sub	w3, w1, #0x3
   28184:	str	w3, [sp, #196]
   28188:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2818c:	and	w2, w2, #0x7
   28190:	sub	w3, w1, #0x6
   28194:	str	w3, [sp, #196]
   28198:	cmp	w28, #0x11
   2819c:	strb	w2, [sp, #230]
   281a0:	lsr	x2, x0, #6
   281a4:	str	x2, [sp, #208]
   281a8:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   281ac:	and	w2, w2, #0x7
   281b0:	sub	w3, w1, #0x9
   281b4:	str	w3, [sp, #196]
   281b8:	cmp	w28, #0x12
   281bc:	strb	w2, [sp, #217]
   281c0:	lsr	x2, x0, #9
   281c4:	str	x2, [sp, #208]
   281c8:	b.eq	281e4 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   281cc:	and	w2, w2, #0x7
   281d0:	lsr	x0, x0, #12
   281d4:	sub	w1, w1, #0xc
   281d8:	str	w1, [sp, #196]
   281dc:	str	x0, [sp, #208]
   281e0:	strb	w2, [sp, #231]
   281e4:	ldr	x0, [sp, #136]
   281e8:	mov	x3, x22
   281ec:	mov	x2, x22
   281f0:	mov	x1, #0x13                  	// #19
   281f4:	bl	27444 <__asan_internal_strnlen@@Base+0x88>
   281f8:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   281fc:	mov	x0, #0x1278                	// #4728
   28200:	add	x28, x22, x0
   28204:	ldr	w0, [sp, #112]
   28208:	mov	x4, x28
   2820c:	str	x0, [sp, #112]
   28210:	ldr	w0, [sp, #120]
   28214:	str	x0, [sp, #136]
   28218:	ldr	x0, [sp, #112]
   2821c:	ldr	x1, [sp, #136]
   28220:	add	x5, x0, x1
   28224:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28228:	add	x5, x28, x5
   2822c:	add	x0, x0, #0xb80
   28230:	str	x0, [sp, #120]
   28234:	cmp	x5, x4
   28238:	b.hi	282f8 <__asan_internal_strnlen@@Base+0xf3c>  // b.pmore
   2823c:	add	x0, x22, #0x1, lsl #12
   28240:	ldrb	w0, [x0, #888]
   28244:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   28248:	ldr	x1, [sp, #112]
   2824c:	mov	x3, x22
   28250:	mov	x2, x22
   28254:	mov	x0, x28
   28258:	bl	27444 <__asan_internal_strnlen@@Base+0x88>
   2825c:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   28260:	add	x0, x22, #0x800
   28264:	str	x0, [sp, #120]
   28268:	ldr	x1, [sp, #136]
   2826c:	mov	x3, x0
   28270:	ldr	x0, [sp, #112]
   28274:	mov	x2, x22
   28278:	add	x0, x28, x0
   2827c:	bl	27444 <__asan_internal_strnlen@@Base+0x88>
   28280:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   28284:	str	x22, [sp, #112]
   28288:	mov	x3, x23
   2828c:	mov	x2, x24
   28290:	mov	x1, x21
   28294:	mov	x0, x25
   28298:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   2829c:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   282a0:	ldr	x3, [sp, #208]
   282a4:	ldr	x1, [sp, #112]
   282a8:	and	x0, x3, #0xff
   282ac:	ldrh	w2, [x1, x0, lsl #1]
   282b0:	ldr	w0, [sp, #196]
   282b4:	and	w4, w2, #0x1ff
   282b8:	ubfx	x1, x2, #9, #3
   282bc:	tbnz	w2, #12, 284b0 <__asan_internal_strnlen@@Base+0x10f4>
   282c0:	add	w2, w1, #0x1
   282c4:	mov	w28, w4
   282c8:	sub	w0, w0, #0x1
   282cc:	lsr	x3, x3, x2
   282d0:	str	x3, [sp, #208]
   282d4:	sub	w0, w0, w1
   282d8:	str	w0, [sp, #196]
   282dc:	cmp	w28, #0xff
   282e0:	b.hi	284ec <__asan_internal_strnlen@@Base+0x1130>  // b.pmore
   282e4:	cmp	x27, x20
   282e8:	b.eq	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.none
   282ec:	strb	w28, [x20], #1
   282f0:	prfm	pstl1keep, [x20]
   282f4:	b	28288 <__asan_internal_strnlen@@Base+0xecc>
   282f8:	mov	x3, x23
   282fc:	mov	x2, x24
   28300:	mov	x1, x21
   28304:	mov	x0, x25
   28308:	stp	x5, x4, [sp, #168]
   2830c:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   28310:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   28314:	ldr	x0, [sp, #208]
   28318:	and	x1, x0, #0xff
   2831c:	ldrh	w3, [x22, x1, lsl #1]
   28320:	tbnz	w3, #12, 27d0c <__asan_internal_strnlen@@Base+0x950>
   28324:	ubfx	x2, x3, #9, #3
   28328:	tst	w3, #0x1f0
   2832c:	add	w1, w2, #0x1
   28330:	ldp	x5, x4, [sp, #168]
   28334:	lsr	x0, x0, x1
   28338:	ldr	w1, [sp, #196]
   2833c:	str	x0, [sp, #208]
   28340:	sub	w1, w1, w2
   28344:	sub	w2, w1, #0x1
   28348:	str	w2, [sp, #196]
   2834c:	and	w2, w3, #0x1ff
   28350:	b.ne	2835c <__asan_internal_strnlen@@Base+0xfa0>  // b.any
   28354:	strb	w2, [x4], #1
   28358:	b	28234 <__asan_internal_strnlen@@Base+0xe78>
   2835c:	cmp	w2, #0x10
   28360:	b.ne	283d0 <__asan_internal_strnlen@@Base+0x1014>  // b.any
   28364:	cmp	x28, x4
   28368:	b.eq	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.none
   2836c:	and	w2, w0, #0x3
   28370:	sub	w1, w1, #0x3
   28374:	lsr	x0, x0, #2
   28378:	str	w1, [sp, #196]
   2837c:	str	x0, [sp, #208]
   28380:	add	w2, w2, #0x3
   28384:	sub	x0, x5, x4
   28388:	cmp	w2, w0
   2838c:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   28390:	ldurb	w0, [x4, #-1]
   28394:	cmp	w2, #0x5
   28398:	b.eq	283c8 <__asan_internal_strnlen@@Base+0x100c>  // b.none
   2839c:	cmp	w2, #0x6
   283a0:	b.eq	283c4 <__asan_internal_strnlen@@Base+0x1008>  // b.none
   283a4:	cmp	w2, #0x4
   283a8:	b.ne	283b0 <__asan_internal_strnlen@@Base+0xff4>  // b.any
   283ac:	strb	w0, [x4], #1
   283b0:	add	x4, x4, #0x3
   283b4:	sturb	w0, [x4, #-3]
   283b8:	sturb	w0, [x4, #-2]
   283bc:	sturb	w0, [x4, #-1]
   283c0:	b	28234 <__asan_internal_strnlen@@Base+0xe78>
   283c4:	strb	w0, [x4], #1
   283c8:	strb	w0, [x4], #1
   283cc:	b	283ac <__asan_internal_strnlen@@Base+0xff0>
   283d0:	cmp	w2, #0x11
   283d4:	b.ne	2844c <__asan_internal_strnlen@@Base+0x1090>  // b.any
   283d8:	and	w2, w0, #0x7
   283dc:	sub	w1, w1, #0x4
   283e0:	lsr	x0, x0, #3
   283e4:	str	w1, [sp, #196]
   283e8:	str	x0, [sp, #208]
   283ec:	add	w3, w2, #0x3
   283f0:	sub	x0, x5, x4
   283f4:	cmp	w3, w0
   283f8:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   283fc:	sub	w0, w2, #0x1
   28400:	cmp	w0, #0x6
   28404:	b.hi	28438 <__asan_internal_strnlen@@Base+0x107c>  // b.pmore
   28408:	ldr	x1, [sp, #120]
   2840c:	ldrb	w0, [x1, w0, uxtw]
   28410:	adr	x1, 2841c <__asan_internal_strnlen@@Base+0x1060>
   28414:	add	x0, x1, w0, sxtb #2
   28418:	br	x0
   2841c:	strb	wzr, [x4], #1
   28420:	strb	wzr, [x4], #1
   28424:	strb	wzr, [x4], #1
   28428:	strb	wzr, [x4], #1
   2842c:	strb	wzr, [x4], #1
   28430:	strb	wzr, [x4], #1
   28434:	strb	wzr, [x4], #1
   28438:	mov	x0, x4
   2843c:	strh	wzr, [x0], #3
   28440:	strb	wzr, [x4, #2]
   28444:	mov	x4, x0
   28448:	b	28234 <__asan_internal_strnlen@@Base+0xe78>
   2844c:	cmp	w2, #0x12
   28450:	b.ne	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.any
   28454:	and	w2, w0, #0x7f
   28458:	sub	w1, w1, #0x8
   2845c:	lsr	x0, x0, #7
   28460:	str	x5, [sp, #184]
   28464:	str	w1, [sp, #196]
   28468:	add	w2, w2, #0xb
   2846c:	str	x0, [sp, #208]
   28470:	sub	x0, x5, x4
   28474:	cmp	w2, w0
   28478:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2847c:	mov	x0, x4
   28480:	mov	w1, #0x0                   	// #0
   28484:	stp	x4, x2, [sp, #168]
   28488:	bl	65f0 <__asan_internal_memset@plt>
   2848c:	ldp	x4, x2, [sp, #168]
   28490:	ldr	x5, [sp, #184]
   28494:	add	x4, x4, x2
   28498:	b	28234 <__asan_internal_strnlen@@Base+0xe78>
   2849c:	ldr	x0, [sp, #152]
   284a0:	str	x0, [sp, #120]
   284a4:	ldr	x0, [sp, #160]
   284a8:	str	x0, [sp, #112]
   284ac:	b	28288 <__asan_internal_strnlen@@Base+0xecc>
   284b0:	mov	w2, #0x1                   	// #1
   284b4:	add	w4, w4, #0x100
   284b8:	lsl	w1, w2, w1
   284bc:	sub	w1, w1, #0x1
   284c0:	and	x1, x1, x3, lsr #8
   284c4:	sub	w0, w0, #0x8
   284c8:	ldr	x2, [sp, #112]
   284cc:	add	x1, x1, w4, sxtw
   284d0:	ldrh	w4, [x2, x1, lsl #1]
   284d4:	and	w28, w4, #0x1ff
   284d8:	ubfx	x1, x4, #9, #3
   284dc:	add	w2, w1, #0x8
   284e0:	lsr	x3, x3, x2
   284e4:	str	x3, [sp, #208]
   284e8:	b	282d4 <__asan_internal_strnlen@@Base+0xf18>
   284ec:	cmp	w28, #0x100
   284f0:	b.eq	27e7c <__asan_internal_strnlen@@Base+0xac0>  // b.none
   284f4:	cmp	w28, #0x108
   284f8:	b.hi	28584 <__asan_internal_strnlen@@Base+0x11c8>  // b.pmore
   284fc:	sub	w28, w28, #0xfe
   28500:	mov	x3, x23
   28504:	mov	x2, x24
   28508:	mov	x1, x21
   2850c:	mov	x0, x25
   28510:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   28514:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   28518:	ldr	x2, [sp, #208]
   2851c:	ldr	x1, [sp, #120]
   28520:	and	x0, x2, #0xff
   28524:	ldrh	w5, [x1, x0, lsl #1]
   28528:	ldr	w0, [sp, #196]
   2852c:	and	w3, w5, #0x1ff
   28530:	ubfx	x1, x5, #9, #3
   28534:	tbnz	w5, #12, 28604 <__asan_internal_strnlen@@Base+0x1248>
   28538:	mov	w8, w3
   2853c:	sub	w0, w0, #0x1
   28540:	add	w3, w1, #0x1
   28544:	sub	w0, w0, w1
   28548:	lsr	x2, x2, x3
   2854c:	str	x2, [sp, #208]
   28550:	str	w0, [sp, #196]
   28554:	cbnz	w8, 28644 <__asan_internal_strnlen@@Base+0x1288>
   28558:	cmp	x19, x20
   2855c:	b.eq	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.none
   28560:	sub	x0, x27, x20
   28564:	cmp	w28, w0
   28568:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2856c:	ldurb	w1, [x20, #-1]
   28570:	mov	x2, x28
   28574:	mov	x0, x20
   28578:	bl	65f0 <__asan_internal_memset@plt>
   2857c:	add	x20, x20, x28
   28580:	b	28288 <__asan_internal_strnlen@@Base+0xecc>
   28584:	cmp	w28, #0x11d
   28588:	b.eq	285fc <__asan_internal_strnlen@@Base+0x1240>  // b.none
   2858c:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   28590:	mov	x3, x23
   28594:	mov	x2, x24
   28598:	mov	x1, x21
   2859c:	mov	x0, x25
   285a0:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   285a4:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   285a8:	sub	w4, w28, #0x109
   285ac:	mov	w2, #0x1                   	// #1
   285b0:	ldr	x3, [sp, #208]
   285b4:	lsr	w0, w4, #2
   285b8:	add	w1, w0, #0x1
   285bc:	and	w4, w4, #0x3
   285c0:	lsl	w4, w4, w1
   285c4:	add	w8, w4, #0xb
   285c8:	lsl	w4, w2, w0
   285cc:	mov	w0, #0xffffffff            	// #-1
   285d0:	sub	w4, w4, #0x1
   285d4:	lsl	w2, w0, w1
   285d8:	ldr	w0, [sp, #196]
   285dc:	bic	w2, w3, w2
   285e0:	add	w4, w2, w4, lsl #3
   285e4:	lsr	x3, x3, x1
   285e8:	add	w28, w4, w8
   285ec:	sub	w1, w0, w1
   285f0:	str	w1, [sp, #196]
   285f4:	str	x3, [sp, #208]
   285f8:	b	28500 <__asan_internal_strnlen@@Base+0x1144>
   285fc:	mov	x28, #0x102                 	// #258
   28600:	b	28500 <__asan_internal_strnlen@@Base+0x1144>
   28604:	mov	w4, #0x1                   	// #1
   28608:	add	w3, w3, #0x100
   2860c:	lsl	w1, w4, w1
   28610:	sub	w1, w1, #0x1
   28614:	and	x1, x1, x2, lsr #8
   28618:	sub	w0, w0, #0x8
   2861c:	add	x1, x1, w3, sxtw
   28620:	ldr	x3, [sp, #120]
   28624:	ldrh	w3, [x3, x1, lsl #1]
   28628:	and	w8, w3, #0x1ff
   2862c:	ubfx	x5, x3, #9, #3
   28630:	add	w1, w5, #0x8
   28634:	sub	w0, w0, w5
   28638:	lsr	x2, x2, x1
   2863c:	str	x2, [sp, #208]
   28640:	b	28550 <__asan_internal_strnlen@@Base+0x1194>
   28644:	cmp	w8, #0x1d
   28648:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2864c:	cmp	w8, #0x3
   28650:	b.hi	28694 <__asan_internal_strnlen@@Base+0x12d8>  // b.pmore
   28654:	add	w3, w8, #0x1
   28658:	sub	x0, x20, x19
   2865c:	cmp	w3, w0
   28660:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   28664:	sub	x0, x27, x20
   28668:	cmp	w28, w0
   2866c:	b.hi	27d0c <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   28670:	mov	w5, w3
   28674:	cmp	w28, w3
   28678:	neg	x5, x5
   2867c:	b.hi	28700 <__asan_internal_strnlen@@Base+0x1344>  // b.pmore
   28680:	mov	x2, x28
   28684:	add	x1, x20, x5
   28688:	mov	x0, x20
   2868c:	bl	6560 <__asan_internal_memcpy@plt>
   28690:	b	2857c <__asan_internal_strnlen@@Base+0x11c0>
   28694:	mov	x3, x23
   28698:	mov	x2, x24
   2869c:	mov	x1, x21
   286a0:	mov	x0, x25
   286a4:	bl	277b0 <__asan_internal_strnlen@@Base+0x3f4>
   286a8:	cbz	w0, 27d0c <__asan_internal_strnlen@@Base+0x950>
   286ac:	sub	w3, w8, #0x4
   286b0:	ldr	x5, [sp, #208]
   286b4:	lsr	w0, w3, #1
   286b8:	add	w2, w0, #0x1
   286bc:	and	w3, w3, #0x1
   286c0:	lsl	w3, w3, w2
   286c4:	add	w1, w3, #0x5
   286c8:	mov	w3, #0x1                   	// #1
   286cc:	lsl	w3, w3, w0
   286d0:	mov	w0, #0xffffffff            	// #-1
   286d4:	sub	w3, w3, #0x1
   286d8:	lsl	w0, w0, w2
   286dc:	bic	w0, w5, w0
   286e0:	lsr	x5, x5, x2
   286e4:	add	w3, w0, w3, lsl #2
   286e8:	ldr	w0, [sp, #196]
   286ec:	add	w3, w3, w1
   286f0:	str	x5, [sp, #208]
   286f4:	sub	w2, w0, w2
   286f8:	str	w2, [sp, #196]
   286fc:	b	28658 <__asan_internal_strnlen@@Base+0x129c>
   28700:	cmp	w3, w28
   28704:	add	x1, x20, x5
   28708:	csel	w6, w3, w28, ls  // ls = plast
   2870c:	csel	w2, w3, w28, ls  // ls = plast
   28710:	mov	x0, x20
   28714:	str	x5, [sp, #136]
   28718:	str	x2, [sp, #168]
   2871c:	str	w3, [sp, #176]
   28720:	str	w6, [sp, #184]
   28724:	bl	6560 <__asan_internal_memcpy@plt>
   28728:	ldr	x2, [sp, #168]
   2872c:	ldr	w6, [sp, #184]
   28730:	ldr	w3, [sp, #176]
   28734:	add	x20, x20, x2
   28738:	subs	w28, w28, w6
   2873c:	ldr	x5, [sp, #136]
   28740:	b.ne	28700 <__asan_internal_strnlen@@Base+0x1344>  // b.any
   28744:	b	28288 <__asan_internal_strnlen@@Base+0xecc>
   28748:	ldr	x0, [sp, #144]
   2874c:	mov	w8, #0x0                   	// #0
   28750:	ldr	x1, [sp, #128]
   28754:	sub	x0, x0, #0x4
   28758:	add	x0, x1, x0
   2875c:	ldrb	w1, [x0], #1
   28760:	cmp	x21, x0
   28764:	orr	w8, w1, w8, lsl #8
   28768:	b.ne	2875c <__asan_internal_strnlen@@Base+0x13a0>  // b.any
   2876c:	mov	w13, #0x0                   	// #0
   28770:	mov	w12, #0x1                   	// #1
   28774:	mov	x15, #0x15af                	// #5551
   28778:	mov	x14, #0x15b0                	// #5552
   2877c:	mov	w1, #0xfff1                	// #65521
   28780:	cmp	x26, x15
   28784:	b.hi	287d4 <__asan_internal_strnlen@@Base+0x1418>  // b.pmore
   28788:	and	x14, x26, #0xfffffffffffffff0
   2878c:	lsr	x4, x26, #4
   28790:	add	x14, x19, x14
   28794:	cmp	x19, x14
   28798:	b.ne	288bc <__asan_internal_strnlen@@Base+0x1500>  // b.any
   2879c:	mov	x0, #0xfffffffffffffff0    	// #-16
   287a0:	mov	x3, #0x0                   	// #0
   287a4:	madd	x26, x4, x0, x26
   287a8:	cmp	x26, w3, uxtw
   287ac:	b.hi	28984 <__asan_internal_strnlen@@Base+0x15c8>  // b.pmore
   287b0:	mov	w2, #0xfff1                	// #65521
   287b4:	udiv	w1, w13, w2
   287b8:	udiv	w0, w12, w2
   287bc:	msub	w1, w1, w2, w13
   287c0:	msub	w2, w0, w2, w12
   287c4:	add	w1, w2, w1, lsl #16
   287c8:	cmp	w1, w8
   287cc:	cset	w0, eq  // eq = none
   287d0:	b	27d10 <__asan_internal_strnlen@@Base+0x954>
   287d4:	add	x16, x19, x14
   287d8:	ldrb	w11, [x19]
   287dc:	add	x19, x19, #0x10
   287e0:	ldurb	w24, [x19, #-15]
   287e4:	ldurb	w4, [x19, #-14]
   287e8:	add	w11, w11, w12
   287ec:	add	w24, w24, w11
   287f0:	ldurb	w10, [x19, #-12]
   287f4:	add	w3, w4, w24
   287f8:	ldurb	w4, [x19, #-13]
   287fc:	ldurb	w23, [x19, #-11]
   28800:	add	w11, w11, w24
   28804:	add	w25, w4, w3
   28808:	ldurb	w9, [x19, #-10]
   2880c:	add	w10, w10, w25
   28810:	ldurb	w22, [x19, #-9]
   28814:	add	w23, w23, w10
   28818:	ldurb	w7, [x19, #-8]
   2881c:	add	w9, w9, w23
   28820:	ldurb	w21, [x19, #-7]
   28824:	add	w22, w22, w9
   28828:	ldurb	w6, [x19, #-6]
   2882c:	add	w7, w7, w22
   28830:	ldurb	w20, [x19, #-5]
   28834:	add	w21, w21, w7
   28838:	ldurb	w5, [x19, #-4]
   2883c:	add	w6, w6, w21
   28840:	ldurb	w18, [x19, #-3]
   28844:	add	w20, w20, w6
   28848:	ldurb	w4, [x19, #-2]
   2884c:	add	w5, w5, w20
   28850:	add	w10, w10, w23
   28854:	add	w18, w18, w5
   28858:	add	w9, w9, w22
   2885c:	add	w0, w4, w18
   28860:	add	w4, w3, w25
   28864:	add	w4, w4, w11
   28868:	ldurb	w17, [x19, #-1]
   2886c:	add	w4, w4, w10
   28870:	add	w7, w7, w21
   28874:	add	w4, w4, w9
   28878:	add	w6, w6, w20
   2887c:	add	w2, w4, w7
   28880:	add	w5, w5, w18
   28884:	add	w2, w2, w6
   28888:	add	w4, w17, w0, lsl #1
   2888c:	add	w2, w2, w5
   28890:	add	w12, w17, w0
   28894:	add	w2, w2, w4
   28898:	cmp	x19, x16
   2889c:	add	w13, w13, w2
   288a0:	b.ne	287d8 <__asan_internal_strnlen@@Base+0x141c>  // b.any
   288a4:	udiv	w0, w12, w1
   288a8:	sub	x26, x26, x14
   288ac:	msub	w12, w0, w1, w12
   288b0:	udiv	w0, w13, w1
   288b4:	msub	w13, w0, w1, w13
   288b8:	b	28780 <__asan_internal_strnlen@@Base+0x13c4>
   288bc:	ldrb	w1, [x19]
   288c0:	add	x19, x19, #0x10
   288c4:	ldurb	w11, [x19, #-15]
   288c8:	add	w2, w1, w12
   288cc:	ldurb	w22, [x19, #-14]
   288d0:	add	w11, w11, w2
   288d4:	ldurb	w10, [x19, #-13]
   288d8:	ldurb	w21, [x19, #-12]
   288dc:	add	w22, w22, w11
   288e0:	ldurb	w9, [x19, #-11]
   288e4:	add	w10, w10, w22
   288e8:	ldurb	w20, [x19, #-10]
   288ec:	add	w21, w21, w10
   288f0:	ldurb	w7, [x19, #-9]
   288f4:	add	w9, w9, w21
   288f8:	ldurb	w18, [x19, #-8]
   288fc:	add	w20, w20, w9
   28900:	ldurb	w6, [x19, #-7]
   28904:	add	w7, w7, w20
   28908:	ldurb	w17, [x19, #-6]
   2890c:	add	w18, w18, w7
   28910:	add	w1, w2, w13
   28914:	ldurb	w5, [x19, #-5]
   28918:	add	w6, w6, w18
   2891c:	add	w11, w11, w22
   28920:	ldurb	w16, [x19, #-2]
   28924:	add	w17, w17, w6
   28928:	ldurb	w15, [x19, #-4]
   2892c:	add	w1, w1, w11
   28930:	ldurb	w3, [x19, #-3]
   28934:	add	w10, w10, w21
   28938:	add	w5, w5, w17
   2893c:	add	w1, w1, w10
   28940:	add	w9, w9, w20
   28944:	add	w15, w15, w5
   28948:	add	w1, w1, w9
   2894c:	add	w7, w7, w18
   28950:	add	w3, w3, w15
   28954:	add	w0, w1, w7
   28958:	add	w6, w6, w17
   2895c:	ldurb	w2, [x19, #-1]
   28960:	add	w0, w0, w6
   28964:	add	w5, w5, w15
   28968:	add	w12, w16, w3
   2896c:	add	w0, w0, w5
   28970:	add	w3, w16, w3, lsl #1
   28974:	add	w12, w2, w12
   28978:	add	w0, w0, w3
   2897c:	add	w13, w12, w0
   28980:	b	28794 <__asan_internal_strnlen@@Base+0x13d8>
   28984:	ldrb	w0, [x19, x3]
   28988:	add	x3, x3, #0x1
   2898c:	add	w12, w12, w0
   28990:	add	w13, w13, w12
   28994:	b	287a8 <__asan_internal_strnlen@@Base+0x13ec>
   28998:	stp	x29, x30, [sp, #-80]!
   2899c:	mov	x29, sp
   289a0:	stp	x23, x24, [sp, #48]
   289a4:	mov	x23, x1
   289a8:	mov	x24, x2
   289ac:	mov	x2, x4
   289b0:	stp	x21, x22, [sp, #32]
   289b4:	mov	x22, x6
   289b8:	mov	x21, x7
   289bc:	str	x25, [sp, #64]
   289c0:	mov	x25, x3
   289c4:	mov	x3, x5
   289c8:	add	x5, x23, #0x4
   289cc:	mov	x1, #0x0                   	// #0
   289d0:	stp	x19, x20, [sp, #16]
   289d4:	mov	x20, #0x0                   	// #0
   289d8:	ldrb	w4, [x5, x1]
   289dc:	add	x1, x1, #0x1
   289e0:	cmp	x1, #0x8
   289e4:	orr	x20, x4, x20, lsl #8
   289e8:	b.ne	289d8 <__asan_internal_strnlen@@Base+0x161c>  // b.any
   289ec:	ldr	x19, [x22]
   289f0:	cbz	x19, 28a00 <__asan_internal_strnlen@@Base+0x1644>
   289f4:	ldr	x1, [x21]
   289f8:	cmp	x20, x1
   289fc:	b.ls	28a10 <__asan_internal_strnlen@@Base+0x1654>  // b.plast
   28a00:	mov	x1, x20
   28a04:	bl	6670 <__asan_backtrace_alloc@plt>
   28a08:	mov	x19, x0
   28a0c:	cbz	x0, 28a3c <__asan_internal_strnlen@@Base+0x1680>
   28a10:	mov	x4, x20
   28a14:	mov	x3, x19
   28a18:	mov	x2, x25
   28a1c:	sub	x1, x24, #0xc
   28a20:	add	x0, x23, #0xc
   28a24:	bl	27c9c <__asan_internal_strnlen@@Base+0x8e0>
   28a28:	cbz	w0, 28a34 <__asan_internal_strnlen@@Base+0x1678>
   28a2c:	str	x19, [x22]
   28a30:	str	x20, [x21]
   28a34:	mov	w0, #0x1                   	// #1
   28a38:	b	28a40 <__asan_internal_strnlen@@Base+0x1684>
   28a3c:	mov	w0, #0x0                   	// #0
   28a40:	ldp	x19, x20, [sp, #16]
   28a44:	ldp	x21, x22, [sp, #32]
   28a48:	ldp	x23, x24, [sp, #48]
   28a4c:	ldr	x25, [sp, #64]
   28a50:	ldp	x29, x30, [sp], #80
   28a54:	ret
   28a58:	sub	sp, sp, #0x490
   28a5c:	stp	x29, x30, [sp, #80]
   28a60:	add	x29, sp, #0x50
   28a64:	stp	x27, x28, [sp, #160]
   28a68:	mov	x28, x0
   28a6c:	ldr	w0, [sp, #1192]
   28a70:	stp	x19, x20, [sp, #96]
   28a74:	mov	x19, x4
   28a78:	mov	x20, x5
   28a7c:	stp	x21, x22, [sp, #112]
   28a80:	ldr	w21, [sp, #1184]
   28a84:	stp	x23, x24, [sp, #128]
   28a88:	mov	w24, w2
   28a8c:	stp	x25, x26, [sp, #144]
   28a90:	stp	x3, x7, [sp, #240]
   28a94:	str	x6, [sp, #272]
   28a98:	str	x1, [sp, #296]
   28a9c:	cbnz	w0, 28aac <__asan_internal_strnlen@@Base+0x16f0>
   28aa0:	ldr	x0, [sp, #1168]
   28aa4:	str	wzr, [x7]
   28aa8:	str	wzr, [x0]
   28aac:	add	x22, sp, #0x188
   28ab0:	mov	x5, x20
   28ab4:	mov	x6, x22
   28ab8:	mov	x4, x19
   28abc:	mov	w1, w24
   28ac0:	mov	x0, x28
   28ac4:	mov	x3, #0x40                  	// #64
   28ac8:	mov	x2, #0x0                   	// #0
   28acc:	bl	6880 <__asan_backtrace_get_view@plt>
   28ad0:	cbz	w0, 28b20 <__asan_internal_strnlen@@Base+0x1764>
   28ad4:	ldr	x1, [sp, #392]
   28ad8:	mov	x2, #0x40                  	// #64
   28adc:	add	x0, sp, #0x290
   28ae0:	bl	6560 <__asan_internal_memcpy@plt>
   28ae4:	mov	x1, x22
   28ae8:	mov	x0, x28
   28aec:	mov	x3, x20
   28af0:	mov	x2, x19
   28af4:	bl	64f0 <__asan_backtrace_release_view@plt>
   28af8:	ldr	w1, [sp, #656]
   28afc:	mov	w0, #0x457f                	// #17791
   28b00:	movk	w0, #0x464c, lsl #16
   28b04:	cmp	w1, w0
   28b08:	b.eq	28b2c <__asan_internal_strnlen@@Base+0x1770>  // b.none
   28b0c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28b10:	add	x1, x1, #0x9c8
   28b14:	mov	w2, #0x0                   	// #0
   28b18:	mov	x0, x20
   28b1c:	blr	x19
   28b20:	mov	w27, #0x0                   	// #0
   28b24:	mov	x22, #0x0                   	// #0
   28b28:	b	29ba0 <__asan_internal_strnlen@@Base+0x27e4>
   28b2c:	ldrb	w0, [sp, #662]
   28b30:	cmp	w0, #0x1
   28b34:	b.eq	28b48 <__asan_internal_strnlen@@Base+0x178c>  // b.none
   28b38:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28b3c:	mov	w2, #0x0                   	// #0
   28b40:	add	x1, x1, #0x9e3
   28b44:	b	28b18 <__asan_internal_strnlen@@Base+0x175c>
   28b48:	ldrb	w0, [sp, #660]
   28b4c:	cmp	w0, #0x2
   28b50:	b.eq	28b64 <__asan_internal_strnlen@@Base+0x17a8>  // b.none
   28b54:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28b58:	mov	w2, #0x0                   	// #0
   28b5c:	add	x1, x1, #0xa0f
   28b60:	b	28b18 <__asan_internal_strnlen@@Base+0x175c>
   28b64:	ldrb	w0, [sp, #661]
   28b68:	sub	w0, w0, #0x1
   28b6c:	and	w0, w0, #0xff
   28b70:	cmp	w0, #0x1
   28b74:	b.ls	28b88 <__asan_internal_strnlen@@Base+0x17cc>  // b.plast
   28b78:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28b7c:	mov	w2, #0x0                   	// #0
   28b80:	add	x1, x1, #0xa37
   28b84:	b	28b18 <__asan_internal_strnlen@@Base+0x175c>
   28b88:	cbz	w21, 28b98 <__asan_internal_strnlen@@Base+0x17dc>
   28b8c:	ldrh	w0, [sp, #672]
   28b90:	cmp	w0, #0x3
   28b94:	b.eq	29acc <__asan_internal_strnlen@@Base+0x2710>  // b.none
   28b98:	ldrh	w0, [sp, #716]
   28b9c:	mov	w23, #0xffff                	// #65535
   28ba0:	ldrh	w21, [sp, #718]
   28ba4:	str	w0, [sp, #208]
   28ba8:	cmp	w0, #0x0
   28bac:	ccmp	w21, w23, #0x4, ne  // ne = any
   28bb0:	ldr	x26, [sp, #696]
   28bb4:	b.ne	28c34 <__asan_internal_strnlen@@Base+0x1878>  // b.any
   28bb8:	cbz	x26, 28c34 <__asan_internal_strnlen@@Base+0x1878>
   28bbc:	add	x22, sp, #0x350
   28bc0:	mov	x5, x20
   28bc4:	mov	x6, x22
   28bc8:	mov	x4, x19
   28bcc:	mov	x2, x26
   28bd0:	mov	w1, w24
   28bd4:	mov	x0, x28
   28bd8:	mov	x3, #0x8                   	// #8
   28bdc:	bl	6880 <__asan_backtrace_get_view@plt>
   28be0:	cbz	w0, 28b20 <__asan_internal_strnlen@@Base+0x1764>
   28be4:	ldr	w1, [sp, #208]
   28be8:	ldr	x0, [sp, #848]
   28bec:	cbnz	w1, 28c00 <__asan_internal_strnlen@@Base+0x1844>
   28bf0:	ldr	w1, [x0, #32]
   28bf4:	cmp	w21, w23
   28bf8:	str	w1, [sp, #208]
   28bfc:	b.ne	28c20 <__asan_internal_strnlen@@Base+0x1864>  // b.any
   28c00:	ldr	w21, [x0, #40]
   28c04:	ldr	w0, [sp, #208]
   28c08:	cmp	w0, w21
   28c0c:	mov	w0, #0xffff                	// #65535
   28c10:	ccmp	w21, w0, #0x0, ls  // ls = plast
   28c14:	mov	w0, w21
   28c18:	sub	w21, w21, #0x100
   28c1c:	csel	w21, w21, w0, hi  // hi = pmore
   28c20:	mov	x3, x20
   28c24:	mov	x2, x19
   28c28:	mov	x1, x22
   28c2c:	mov	x0, x28
   28c30:	bl	64f0 <__asan_backtrace_release_view@plt>
   28c34:	ldr	w0, [sp, #208]
   28c38:	add	x6, sp, #0x1a0
   28c3c:	mov	x5, x20
   28c40:	mov	x4, x19
   28c44:	sub	w3, w0, #0x1
   28c48:	add	x2, x26, #0x40
   28c4c:	mov	w1, w24
   28c50:	mov	x0, x28
   28c54:	lsl	x3, x3, #6
   28c58:	bl	6880 <__asan_backtrace_get_view@plt>
   28c5c:	cbz	w0, 28b20 <__asan_internal_strnlen@@Base+0x1764>
   28c60:	ldr	x0, [sp, #416]
   28c64:	sub	w21, w21, #0x1
   28c68:	str	x0, [sp, #264]
   28c6c:	add	x6, sp, #0x1b8
   28c70:	mov	x5, x20
   28c74:	mov	x4, x19
   28c78:	add	x21, x0, x21, lsl #6
   28c7c:	mov	w1, w24
   28c80:	ldr	x2, [x21, #24]
   28c84:	ldr	x0, [x21, #32]
   28c88:	str	x0, [sp, #320]
   28c8c:	mov	x3, x0
   28c90:	mov	x0, x28
   28c94:	bl	6880 <__asan_backtrace_get_view@plt>
   28c98:	mov	w21, w0
   28c9c:	cbz	w0, 29ad4 <__asan_internal_strnlen@@Base+0x2718>
   28ca0:	add	x21, sp, #0x350
   28ca4:	mov	x2, #0x140                 	// #320
   28ca8:	ldr	x0, [sp, #440]
   28cac:	mov	w1, #0x0                   	// #0
   28cb0:	str	x0, [sp, #336]
   28cb4:	mov	x0, x21
   28cb8:	bl	65f0 <__asan_internal_memset@plt>
   28cbc:	mov	x22, #0x0                   	// #0
   28cc0:	mov	w0, #0x1                   	// #1
   28cc4:	str	w0, [sp, #224]
   28cc8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x22bc4>
   28ccc:	add	x0, x0, #0xc00
   28cd0:	ldr	x26, [sp, #264]
   28cd4:	str	x0, [sp, #344]
   28cd8:	add	x0, sp, #0x260
   28cdc:	str	wzr, [sp, #184]
   28ce0:	str	wzr, [sp, #192]
   28ce4:	str	wzr, [sp, #200]
   28ce8:	str	wzr, [sp, #216]
   28cec:	str	xzr, [sp, #232]
   28cf0:	str	xzr, [sp, #256]
   28cf4:	str	wzr, [sp, #280]
   28cf8:	str	wzr, [sp, #284]
   28cfc:	str	xzr, [sp, #288]
   28d00:	str	xzr, [sp, #304]
   28d04:	str	wzr, [sp, #312]
   28d08:	str	wzr, [sp, #316]
   28d0c:	str	x0, [sp, #328]
   28d10:	add	x0, x0, #0x18
   28d14:	str	x21, [sp, #352]
   28d18:	str	x0, [sp, #360]
   28d1c:	ldr	w0, [sp, #208]
   28d20:	ldr	w1, [sp, #224]
   28d24:	cmp	w0, w1
   28d28:	b.hi	28d88 <__asan_internal_strnlen@@Base+0x19cc>  // b.pmore
   28d2c:	ldr	w0, [sp, #216]
   28d30:	ldr	w1, [sp, #284]
   28d34:	cmp	w0, #0x0
   28d38:	csel	w0, w0, w1, ne  // ne = any
   28d3c:	str	w0, [sp, #216]
   28d40:	cmp	w0, #0x0
   28d44:	ldr	w0, [sp, #1192]
   28d48:	eor	w0, w0, #0x1
   28d4c:	and	w0, w0, #0x1
   28d50:	csel	w0, w0, wzr, ne  // ne = any
   28d54:	cbz	w0, 294f8 <__asan_internal_strnlen@@Base+0x213c>
   28d58:	ldr	w0, [sp, #216]
   28d5c:	sub	w21, w0, #0x1
   28d60:	ldr	x0, [sp, #264]
   28d64:	add	x21, x0, x21, lsl #6
   28d68:	ldr	w0, [sp, #208]
   28d6c:	ldr	w26, [x21, #40]
   28d70:	cmp	w0, w26
   28d74:	b.hi	290cc <__asan_internal_strnlen@@Base+0x1d10>  // b.pmore
   28d78:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28d7c:	mov	w2, #0x0                   	// #0
   28d80:	add	x1, x1, #0xab9
   28d84:	b	28dc4 <__asan_internal_strnlen@@Base+0x1a08>
   28d88:	ldr	w0, [x26, #4]
   28d8c:	cmp	w0, #0x2
   28d90:	b.eq	28ddc <__asan_internal_strnlen@@Base+0x1a20>  // b.none
   28d94:	cmp	w0, #0xb
   28d98:	ldr	w1, [sp, #224]
   28d9c:	ldr	w0, [sp, #284]
   28da0:	csel	w0, w0, w1, ne  // ne = any
   28da4:	str	w0, [sp, #284]
   28da8:	ldr	x0, [sp, #320]
   28dac:	ldr	w23, [x26]
   28db0:	cmp	x23, x0
   28db4:	b.cc	28de8 <__asan_internal_strnlen@@Base+0x1a2c>  // b.lo, b.ul, b.last
   28db8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28dbc:	add	x1, x1, #0xa5e
   28dc0:	mov	w2, #0x0                   	// #0
   28dc4:	mov	w27, #0x0                   	// #0
   28dc8:	mov	w25, #0x0                   	// #0
   28dcc:	mov	x0, x20
   28dd0:	blr	x19
   28dd4:	mov	w21, #0x1                   	// #1
   28dd8:	b	29aec <__asan_internal_strnlen@@Base+0x2730>
   28ddc:	ldr	w0, [sp, #224]
   28de0:	str	w0, [sp, #216]
   28de4:	b	28da8 <__asan_internal_strnlen@@Base+0x19ec>
   28de8:	ldr	x0, [sp, #336]
   28dec:	mov	x21, #0x0                   	// #0
   28df0:	add	x23, x0, x23
   28df4:	ldr	x0, [sp, #344]
   28df8:	ldr	x1, [x0, x21, lsl #3]
   28dfc:	mov	x0, x23
   28e00:	bl	68c0 <__asan_internal_strcmp@plt>
   28e04:	cbnz	w0, 28fb4 <__asan_internal_strnlen@@Base+0x1bf8>
   28e08:	ldr	x2, [sp, #352]
   28e0c:	sbfiz	x0, x21, #5, #32
   28e10:	ldr	x1, [x26, #24]
   28e14:	str	x1, [x2, x0]
   28e18:	add	x1, sp, #0x358
   28e1c:	ldr	x2, [x26, #32]
   28e20:	str	x2, [x1, x0]
   28e24:	add	x2, sp, #0x368
   28e28:	ldr	x1, [x26, #8]
   28e2c:	ubfx	w1, w1, #11, #1
   28e30:	str	w1, [x2, x0]
   28e34:	ldr	w0, [sp, #1192]
   28e38:	ldr	x1, [sp, #1200]
   28e3c:	eor	w0, w0, #0x1
   28e40:	and	w0, w0, #0x1
   28e44:	cmp	x1, #0x0
   28e48:	csinc	w0, w0, wzr, eq  // eq = none
   28e4c:	cbz	w0, 28f2c <__asan_internal_strnlen@@Base+0x1b70>
   28e50:	ldr	w0, [sp, #184]
   28e54:	cbnz	w0, 28f2c <__asan_internal_strnlen@@Base+0x1b70>
   28e58:	mov	x0, x23
   28e5c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28e60:	add	x1, x1, #0xa7c
   28e64:	bl	68c0 <__asan_internal_strcmp@plt>
   28e68:	mov	w25, w0
   28e6c:	cbnz	w0, 28f2c <__asan_internal_strnlen@@Base+0x1b70>
   28e70:	ldp	x2, x3, [x26, #24]
   28e74:	add	x6, sp, #0x200
   28e78:	mov	x5, x20
   28e7c:	mov	x4, x19
   28e80:	mov	w1, w24
   28e84:	mov	x0, x28
   28e88:	bl	6880 <__asan_backtrace_get_view@plt>
   28e8c:	mov	w27, w0
   28e90:	cbz	w0, 29bf0 <__asan_internal_strnlen@@Base+0x2834>
   28e94:	ldr	x21, [sp, #512]
   28e98:	ldr	w0, [x21, #8]
   28e9c:	cmp	w0, #0x3
   28ea0:	b.ne	28ef8 <__asan_internal_strnlen@@Base+0x1b3c>  // b.any
   28ea4:	ldr	w0, [x21]
   28ea8:	cmp	w0, #0x4
   28eac:	b.ne	28ef8 <__asan_internal_strnlen@@Base+0x1b3c>  // b.any
   28eb0:	add	x27, x21, #0xc
   28eb4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28eb8:	mov	x0, x27
   28ebc:	add	x1, x1, #0xa8f
   28ec0:	mov	x2, #0x4                   	// #4
   28ec4:	bl	6900 <__asan_internal_strncmp@plt>
   28ec8:	cbnz	w0, 28ef8 <__asan_internal_strnlen@@Base+0x1b3c>
   28ecc:	ldp	w0, w2, [x21]
   28ed0:	ldr	x3, [x26, #32]
   28ed4:	add	w0, w0, #0x3
   28ed8:	and	w0, w0, #0xfffffffc
   28edc:	add	w1, w2, #0xc
   28ee0:	add	w1, w1, w0
   28ee4:	cmp	x3, x1
   28ee8:	b.hi	28ef8 <__asan_internal_strnlen@@Base+0x1b3c>  // b.pmore
   28eec:	add	x0, x27, w0, uxtw
   28ef0:	str	x0, [sp, #256]
   28ef4:	str	w2, [sp, #280]
   28ef8:	ldr	w0, [sp, #1208]
   28efc:	cbz	w0, 28f24 <__asan_internal_strnlen@@Base+0x1b68>
   28f00:	ldr	w0, [sp, #280]
   28f04:	ldr	w1, [sp, #1208]
   28f08:	cmp	w0, w1
   28f0c:	b.ne	29bf8 <__asan_internal_strnlen@@Base+0x283c>  // b.any
   28f10:	mov	x2, x0
   28f14:	ldr	x0, [sp, #256]
   28f18:	ldr	x1, [sp, #1200]
   28f1c:	bl	69d0 <__asan_internal_memcmp@plt>
   28f20:	cbnz	w0, 29bf8 <__asan_internal_strnlen@@Base+0x283c>
   28f24:	mov	w0, #0x1                   	// #1
   28f28:	str	w0, [sp, #184]
   28f2c:	ldr	w0, [sp, #192]
   28f30:	ldr	w1, [sp, #1192]
   28f34:	orr	w0, w0, w1
   28f38:	cbnz	w0, 28fc8 <__asan_internal_strnlen@@Base+0x1c0c>
   28f3c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28f40:	mov	x0, x23
   28f44:	add	x1, x1, #0xa93
   28f48:	bl	68c0 <__asan_internal_strcmp@plt>
   28f4c:	cbnz	w0, 28fc4 <__asan_internal_strnlen@@Base+0x1c08>
   28f50:	ldp	x2, x3, [x26, #24]
   28f54:	add	x6, sp, #0x218
   28f58:	mov	x5, x20
   28f5c:	mov	x4, x19
   28f60:	mov	w1, w24
   28f64:	mov	x0, x28
   28f68:	bl	6880 <__asan_backtrace_get_view@plt>
   28f6c:	mov	w25, w0
   28f70:	cbz	w0, 29c08 <__asan_internal_strnlen@@Base+0x284c>
   28f74:	ldr	x1, [x26, #32]
   28f78:	ldr	x21, [sp, #536]
   28f7c:	mov	x0, x21
   28f80:	bl	68d0 <__asan_internal_strnlen@plt>
   28f84:	add	x0, x0, #0x3
   28f88:	ldr	x1, [x26, #32]
   28f8c:	and	x0, x0, #0xfffffffffffffffc
   28f90:	add	x2, x0, #0x4
   28f94:	cmp	x2, x1
   28f98:	b.hi	28fa8 <__asan_internal_strnlen@@Base+0x1bec>  // b.pmore
   28f9c:	ldr	w0, [x21, x0]
   28fa0:	str	x21, [sp, #288]
   28fa4:	str	w0, [sp, #312]
   28fa8:	mov	w0, #0x1                   	// #1
   28fac:	str	w0, [sp, #192]
   28fb0:	b	28fc8 <__asan_internal_strnlen@@Base+0x1c0c>
   28fb4:	add	x21, x21, #0x1
   28fb8:	cmp	x21, #0xa
   28fbc:	b.ne	28df4 <__asan_internal_strnlen@@Base+0x1a38>  // b.any
   28fc0:	b	28e34 <__asan_internal_strnlen@@Base+0x1a78>
   28fc4:	str	wzr, [sp, #192]
   28fc8:	ldr	w0, [sp, #200]
   28fcc:	cbnz	w0, 29044 <__asan_internal_strnlen@@Base+0x1c88>
   28fd0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   28fd4:	mov	x0, x23
   28fd8:	add	x1, x1, #0xaa2
   28fdc:	bl	68c0 <__asan_internal_strcmp@plt>
   28fe0:	cbnz	w0, 29044 <__asan_internal_strnlen@@Base+0x1c88>
   28fe4:	ldp	x2, x3, [x26, #24]
   28fe8:	add	x6, sp, #0x230
   28fec:	mov	x5, x20
   28ff0:	mov	x4, x19
   28ff4:	mov	w1, w24
   28ff8:	mov	x0, x28
   28ffc:	bl	6880 <__asan_backtrace_get_view@plt>
   29000:	mov	w25, w0
   29004:	cbz	w0, 29c0c <__asan_internal_strnlen@@Base+0x2850>
   29008:	ldr	x1, [x26, #32]
   2900c:	ldr	x0, [sp, #560]
   29010:	str	x0, [sp, #232]
   29014:	bl	68d0 <__asan_internal_strnlen@plt>
   29018:	ldr	x1, [x26, #32]
   2901c:	cmp	x1, x0
   29020:	b.ls	2903c <__asan_internal_strnlen@@Base+0x1c80>  // b.plast
   29024:	ldr	x2, [sp, #232]
   29028:	add	x0, x0, #0x1
   2902c:	add	x2, x2, x0
   29030:	sub	w0, w1, w0
   29034:	str	x2, [sp, #304]
   29038:	str	w0, [sp, #316]
   2903c:	mov	w0, #0x1                   	// #1
   29040:	str	w0, [sp, #200]
   29044:	ldrh	w0, [sp, #674]
   29048:	cmp	w0, #0x15
   2904c:	b.ne	290b8 <__asan_internal_strnlen@@Base+0x1cfc>  // b.any
   29050:	ldr	w0, [sp, #704]
   29054:	tbnz	w0, #1, 290b8 <__asan_internal_strnlen@@Base+0x1cfc>
   29058:	ldr	w21, [x26, #4]
   2905c:	cmp	w21, #0x1
   29060:	b.ne	290b8 <__asan_internal_strnlen@@Base+0x1cfc>  // b.any
   29064:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   29068:	mov	x0, x23
   2906c:	add	x1, x1, #0xab4
   29070:	bl	68c0 <__asan_internal_strcmp@plt>
   29074:	cbnz	w0, 290b8 <__asan_internal_strnlen@@Base+0x1cfc>
   29078:	ldp	x2, x3, [x26, #24]
   2907c:	mov	x5, x20
   29080:	ldr	x6, [sp, #360]
   29084:	mov	x4, x19
   29088:	mov	w1, w24
   2908c:	mov	x0, x28
   29090:	bl	6880 <__asan_backtrace_get_view@plt>
   29094:	mov	w25, w0
   29098:	cbz	w0, 29c14 <__asan_internal_strnlen@@Base+0x2858>
   2909c:	ldr	x0, [x26, #16]
   290a0:	str	x0, [sp, #608]
   290a4:	ldr	x22, [sp, #328]
   290a8:	ldr	x0, [sp, #632]
   290ac:	str	x0, [sp, #616]
   290b0:	ldr	x0, [x26, #32]
   290b4:	str	x0, [sp, #624]
   290b8:	ldr	w0, [sp, #224]
   290bc:	add	x26, x26, #0x40
   290c0:	add	w0, w0, #0x1
   290c4:	str	w0, [sp, #224]
   290c8:	b	28d1c <__asan_internal_strnlen@@Base+0x1960>
   290cc:	ldp	x2, x3, [x21, #24]
   290d0:	add	x6, sp, #0x1d0
   290d4:	mov	x5, x20
   290d8:	mov	x4, x19
   290dc:	mov	w1, w24
   290e0:	mov	x0, x28
   290e4:	bl	6880 <__asan_backtrace_get_view@plt>
   290e8:	mov	w25, w0
   290ec:	cbz	w0, 29c0c <__asan_internal_strnlen@@Base+0x2850>
   290f0:	ldr	x0, [sp, #264]
   290f4:	sub	w26, w26, #0x1
   290f8:	add	x6, sp, #0x1e8
   290fc:	mov	x5, x20
   29100:	mov	x4, x19
   29104:	mov	w1, w24
   29108:	add	x26, x0, x26, lsl #6
   2910c:	mov	x0, x28
   29110:	ldp	x2, x3, [x26, #24]
   29114:	bl	6880 <__asan_backtrace_get_view@plt>
   29118:	mov	w27, w0
   2911c:	cbz	w0, 29c1c <__asan_internal_strnlen@@Base+0x2860>
   29120:	mov	x3, x20
   29124:	mov	x2, x19
   29128:	mov	x0, x28
   2912c:	mov	x1, #0x18                  	// #24
   29130:	bl	6670 <__asan_backtrace_alloc@plt>
   29134:	mov	x25, x0
   29138:	cbz	x0, 292ac <__asan_internal_strnlen@@Base+0x1ef0>
   2913c:	ldr	x0, [x21, #32]
   29140:	mov	x1, #0x18                  	// #24
   29144:	ldr	x23, [sp, #464]
   29148:	mov	x27, #0x0                   	// #0
   2914c:	udiv	x0, x0, x1
   29150:	ldr	x4, [sp, #488]
   29154:	ldr	x6, [x26, #32]
   29158:	madd	x0, x0, x1, x23
   2915c:	mov	x26, x23
   29160:	cmp	x0, x26
   29164:	b.ne	29210 <__asan_internal_strnlen@@Base+0x1e54>  // b.any
   29168:	mov	x7, #0x18                  	// #24
   2916c:	mov	x3, x20
   29170:	mov	x2, x19
   29174:	mov	x0, x28
   29178:	mul	x5, x27, x7
   2917c:	str	x6, [sp, #224]
   29180:	stp	x5, x4, [sp, #208]
   29184:	mov	x1, x5
   29188:	bl	6670 <__asan_backtrace_alloc@plt>
   2918c:	mov	x21, x0
   29190:	cbz	x0, 29294 <__asan_internal_strnlen@@Base+0x1ed8>
   29194:	ldp	x5, x4, [sp, #208]
   29198:	mov	x7, #0x18                  	// #24
   2919c:	ldr	x6, [sp, #224]
   291a0:	mov	w2, w7
   291a4:	mov	w3, #0x0                   	// #0
   291a8:	cmp	x26, x23
   291ac:	b.ne	29238 <__asan_internal_strnlen@@Base+0x1e7c>  // b.any
   291b0:	mov	x1, x27
   291b4:	mov	x0, x21
   291b8:	mov	x2, #0x18                  	// #24
   291bc:	adrp	x3, 27000 <__asan_cplus_demangle_init_info@@Base+0xc0>
   291c0:	add	x3, x3, #0x400
   291c4:	bl	6460 <__asan_backtrace_qsort@plt>
   291c8:	stp	xzr, x21, [x25]
   291cc:	add	x1, sp, #0x1d0
   291d0:	mov	x0, x28
   291d4:	str	x27, [x25, #16]
   291d8:	mov	x3, x20
   291dc:	mov	x2, x19
   291e0:	bl	64f0 <__asan_backtrace_release_view@plt>
   291e4:	ldr	x1, [sp, #248]
   291e8:	mov	w0, #0x1                   	// #1
   291ec:	str	w0, [x1]
   291f0:	add	x1, x28, #0x30
   291f4:	ldr	w0, [x28, #8]
   291f8:	cbz	w0, 2931c <__asan_internal_strnlen@@Base+0x1f60>
   291fc:	mov	x0, x1
   29200:	ldar	x2, [x0]
   29204:	cbz	x2, 294d8 <__asan_internal_strnlen@@Base+0x211c>
   29208:	mov	x0, x2
   2920c:	b	29200 <__asan_internal_strnlen@@Base+0x1e44>
   29210:	ldrb	w1, [x26, #4]
   29214:	and	w1, w1, #0xf
   29218:	sub	w1, w1, #0x1
   2921c:	cmp	w1, #0x1
   29220:	b.hi	29230 <__asan_internal_strnlen@@Base+0x1e74>  // b.pmore
   29224:	ldrh	w1, [x26, #6]
   29228:	cbz	w1, 29230 <__asan_internal_strnlen@@Base+0x1e74>
   2922c:	add	x27, x27, #0x1
   29230:	add	x26, x26, #0x18
   29234:	b	29160 <__asan_internal_strnlen@@Base+0x1da4>
   29238:	ldrb	w0, [x23, #4]
   2923c:	and	w0, w0, #0xf
   29240:	sub	w0, w0, #0x1
   29244:	cmp	w0, #0x1
   29248:	b.hi	29314 <__asan_internal_strnlen@@Base+0x1f58>  // b.pmore
   2924c:	ldrh	w0, [x23, #6]
   29250:	cbz	w0, 29314 <__asan_internal_strnlen@@Base+0x1f58>
   29254:	ldr	w0, [x23]
   29258:	cmp	x6, x0
   2925c:	b.hi	292bc <__asan_internal_strnlen@@Base+0x1f00>  // b.pmore
   29260:	str	x5, [sp, #208]
   29264:	mov	x0, x20
   29268:	mov	w2, #0x0                   	// #0
   2926c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   29270:	add	x1, x1, #0xae3
   29274:	blr	x19
   29278:	ldr	x5, [sp, #208]
   2927c:	mov	x4, x20
   29280:	mov	x3, x19
   29284:	mov	x1, x21
   29288:	mov	x0, x28
   2928c:	mov	x2, x5
   29290:	bl	6950 <__asan_backtrace_free@plt>
   29294:	mov	x4, x20
   29298:	mov	x3, x19
   2929c:	mov	x1, x25
   292a0:	mov	x0, x28
   292a4:	mov	x2, #0x18                  	// #24
   292a8:	bl	6950 <__asan_backtrace_free@plt>
   292ac:	mov	w27, #0x1                   	// #1
   292b0:	mov	w25, w27
   292b4:	mov	w21, w27
   292b8:	b	29aec <__asan_internal_strnlen@@Base+0x2730>
   292bc:	umull	x1, w3, w2
   292c0:	add	x0, x4, x0
   292c4:	add	x8, x21, x1
   292c8:	str	x0, [x21, x1]
   292cc:	ldr	x1, [x23, #8]
   292d0:	cbz	x22, 292fc <__asan_internal_strnlen@@Base+0x1f40>
   292d4:	ldr	x0, [x22]
   292d8:	cmp	x0, x1
   292dc:	b.hi	292fc <__asan_internal_strnlen@@Base+0x1f40>  // b.pmore
   292e0:	ldr	x7, [x22, #16]
   292e4:	add	x7, x0, x7
   292e8:	cmp	x7, x1
   292ec:	b.ls	292fc <__asan_internal_strnlen@@Base+0x1f40>  // b.plast
   292f0:	sub	x1, x1, x0
   292f4:	ldr	x0, [x22, #8]
   292f8:	ldr	x1, [x0, x1]
   292fc:	add	w3, w3, #0x1
   29300:	ldr	x0, [sp, #240]
   29304:	add	x1, x0, x1
   29308:	str	x1, [x8, #8]
   2930c:	ldr	x0, [x23, #16]
   29310:	str	x0, [x8, #16]
   29314:	add	x23, x23, #0x18
   29318:	b	291a8 <__asan_internal_strnlen@@Base+0x1dec>
   2931c:	ldr	x0, [x28, #48]
   29320:	cbnz	x0, 294cc <__asan_internal_strnlen@@Base+0x2110>
   29324:	str	x25, [x1]
   29328:	mov	w0, #0x1                   	// #1
   2932c:	str	w0, [sp, #208]
   29330:	mov	x3, x20
   29334:	mov	x2, x19
   29338:	add	x1, sp, #0x1a0
   2933c:	mov	x0, x28
   29340:	bl	64f0 <__asan_backtrace_release_view@plt>
   29344:	mov	x0, x28
   29348:	mov	x3, x20
   2934c:	mov	x2, x19
   29350:	add	x1, sp, #0x1b8
   29354:	bl	64f0 <__asan_backtrace_release_view@plt>
   29358:	ldr	x0, [sp, #256]
   2935c:	cbz	x0, 29580 <__asan_internal_strnlen@@Base+0x21c4>
   29360:	adrp	x4, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   29364:	add	x4, x4, #0xb04
   29368:	mov	x0, x4
   2936c:	ldr	w25, [sp, #280]
   29370:	str	x4, [sp, #216]
   29374:	bl	6570 <__asan_internal_strlen@plt>
   29378:	add	x27, x25, #0x1
   2937c:	adrp	x6, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   29380:	mov	x21, x0
   29384:	add	x0, x6, #0xb1e
   29388:	bl	6570 <__asan_internal_strlen@plt>
   2938c:	mov	x26, x0
   29390:	add	x0, x21, x0
   29394:	mov	x3, x20
   29398:	add	x27, x0, x27, lsl #1
   2939c:	mov	x2, x19
   293a0:	mov	x1, x27
   293a4:	mov	x0, x28
   293a8:	bl	6670 <__asan_backtrace_alloc@plt>
   293ac:	mov	x23, x0
   293b0:	cbz	x0, 29580 <__asan_internal_strnlen@@Base+0x21c4>
   293b4:	ldr	x4, [sp, #216]
   293b8:	mov	x2, x21
   293bc:	add	x21, x0, x21
   293c0:	mov	x1, x4
   293c4:	bl	6560 <__asan_internal_memcpy@plt>
   293c8:	mov	x2, #0x0                   	// #0
   293cc:	mov	w0, #0x2f                  	// #47
   293d0:	adrp	x6, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   293d4:	cmp	x25, x2
   293d8:	b.hi	29500 <__asan_internal_strnlen@@Base+0x2144>  // b.pmore
   293dc:	add	x1, x6, #0xb1e
   293e0:	mov	x2, x26
   293e4:	mov	x0, x21
   293e8:	bl	6560 <__asan_internal_memcpy@plt>
   293ec:	strb	wzr, [x21, x26]
   293f0:	add	x3, sp, #0x2d0
   293f4:	mov	x2, x20
   293f8:	mov	x1, x19
   293fc:	mov	x0, x23
   29400:	bl	6b10 <__asan_backtrace_open@plt>
   29404:	mov	x4, x20
   29408:	mov	w21, w0
   2940c:	mov	x3, x19
   29410:	mov	x2, x27
   29414:	mov	x1, x23
   29418:	mov	x0, x28
   2941c:	bl	6950 <__asan_backtrace_free@plt>
   29420:	tbnz	w21, #31, 29580 <__asan_internal_strnlen@@Base+0x21c4>
   29424:	mov	x0, x28
   29428:	mov	x3, x20
   2942c:	mov	x2, x19
   29430:	add	x1, sp, #0x200
   29434:	bl	64f0 <__asan_backtrace_release_view@plt>
   29438:	ldr	w0, [sp, #192]
   2943c:	cbz	w0, 29454 <__asan_internal_strnlen@@Base+0x2098>
   29440:	mov	x3, x20
   29444:	mov	x2, x19
   29448:	add	x1, sp, #0x218
   2944c:	mov	x0, x28
   29450:	bl	64f0 <__asan_backtrace_release_view@plt>
   29454:	ldr	w0, [sp, #200]
   29458:	cbz	w0, 29470 <__asan_internal_strnlen@@Base+0x20b4>
   2945c:	mov	x3, x20
   29460:	mov	x2, x19
   29464:	add	x1, sp, #0x230
   29468:	mov	x0, x28
   2946c:	bl	64f0 <__asan_backtrace_release_view@plt>
   29470:	ldp	x3, x7, [sp, #240]
   29474:	mov	w0, #0x1                   	// #1
   29478:	ldr	x6, [sp, #272]
   2947c:	str	w0, [sp, #24]
   29480:	ldr	x0, [sp, #1168]
   29484:	str	x0, [sp]
   29488:	str	xzr, [sp, #8]
   2948c:	mov	w2, w21
   29490:	str	wzr, [sp, #16]
   29494:	mov	x5, x20
   29498:	str	xzr, [sp, #32]
   2949c:	mov	x4, x19
   294a0:	str	wzr, [sp, #40]
   294a4:	mov	x0, x28
   294a8:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x5bc4>
   294ac:	add	x1, x1, #0x6df
   294b0:	bl	28a58 <__asan_internal_strnlen@@Base+0x169c>
   294b4:	mov	w22, w0
   294b8:	mov	x2, x20
   294bc:	mov	x1, x19
   294c0:	tbz	w0, #31, 29554 <__asan_internal_strnlen@@Base+0x2198>
   294c4:	mov	w0, w21
   294c8:	b	29558 <__asan_internal_strnlen@@Base+0x219c>
   294cc:	mov	x1, x0
   294d0:	ldr	x0, [x0]
   294d4:	b	29320 <__asan_internal_strnlen@@Base+0x1f64>
   294d8:	ldxr	x2, [x0]
   294dc:	cbnz	x2, 294e8 <__asan_internal_strnlen@@Base+0x212c>
   294e0:	stlxr	w3, x25, [x0]
   294e4:	cbnz	w3, 294d8 <__asan_internal_strnlen@@Base+0x211c>
   294e8:	dmb	ish
   294ec:	cmp	x2, #0x0
   294f0:	b.eq	29328 <__asan_internal_strnlen@@Base+0x1f6c>  // b.none
   294f4:	b	291fc <__asan_internal_strnlen@@Base+0x1e40>
   294f8:	str	wzr, [sp, #208]
   294fc:	b	29330 <__asan_internal_strnlen@@Base+0x1f74>
   29500:	ldr	x1, [sp, #256]
   29504:	ldrb	w1, [x1, x2]
   29508:	lsr	w4, w1, #4
   2950c:	and	w1, w1, #0xf
   29510:	cmp	w4, #0x9
   29514:	add	w7, w4, #0x30
   29518:	add	w3, w4, #0x57
   2951c:	add	w4, w1, #0x30
   29520:	csel	w3, w3, w7, hi  // hi = pmore
   29524:	cmp	w1, #0x9
   29528:	strb	w3, [x21]
   2952c:	add	w3, w1, #0x57
   29530:	csel	w1, w3, w4, hi  // hi = pmore
   29534:	strb	w1, [x21, #1]
   29538:	cbz	x2, 29548 <__asan_internal_strnlen@@Base+0x218c>
   2953c:	add	x21, x21, #0x2
   29540:	add	x2, x2, #0x1
   29544:	b	293d4 <__asan_internal_strnlen@@Base+0x2018>
   29548:	add	x21, x21, #0x3
   2954c:	sturb	w0, [x21, #-1]
   29550:	b	29540 <__asan_internal_strnlen@@Base+0x2184>
   29554:	mov	w0, w24
   29558:	bl	6a40 <__asan_backtrace_close@plt>
   2955c:	mov	w0, w22
   29560:	ldp	x29, x30, [sp, #80]
   29564:	ldp	x19, x20, [sp, #96]
   29568:	ldp	x21, x22, [sp, #112]
   2956c:	ldp	x23, x24, [sp, #128]
   29570:	ldp	x25, x26, [sp, #144]
   29574:	ldp	x27, x28, [sp, #160]
   29578:	add	sp, sp, #0x490
   2957c:	ret
   29580:	ldr	w0, [sp, #184]
   29584:	cbz	w0, 2959c <__asan_internal_strnlen@@Base+0x21e0>
   29588:	mov	x3, x20
   2958c:	mov	x2, x19
   29590:	add	x1, sp, #0x200
   29594:	mov	x0, x28
   29598:	bl	64f0 <__asan_backtrace_release_view@plt>
   2959c:	cbz	x22, 295b4 <__asan_internal_strnlen@@Base+0x21f8>
   295a0:	mov	x3, x20
   295a4:	mov	x2, x19
   295a8:	add	x1, x22, #0x18
   295ac:	mov	x0, x28
   295b0:	bl	64f0 <__asan_backtrace_release_view@plt>
   295b4:	ldr	x0, [sp, #288]
   295b8:	cbz	x0, 29618 <__asan_internal_strnlen@@Base+0x225c>
   295bc:	ldr	x1, [sp, #296]
   295c0:	mov	x2, x0
   295c4:	mov	x4, x20
   295c8:	mov	x3, x19
   295cc:	mov	x0, x28
   295d0:	bl	279c8 <__asan_internal_strnlen@@Base+0x60c>
   295d4:	mov	w21, w0
   295d8:	tbnz	w0, #31, 29618 <__asan_internal_strnlen@@Base+0x225c>
   295dc:	ldr	w1, [sp, #312]
   295e0:	cbz	w1, 29440 <__asan_internal_strnlen@@Base+0x2084>
   295e4:	add	x1, sp, #0x2d0
   295e8:	bl	2a4a8 <__asan_backtrace_vector_release@@Base+0x6c>
   295ec:	tbz	w0, #31, 296d4 <__asan_internal_strnlen@@Base+0x2318>
   295f0:	bl	6860 <__errno_location@plt>
   295f4:	ldr	w2, [x0]
   295f8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   295fc:	mov	x0, x20
   29600:	add	x1, x1, #0xb25
   29604:	blr	x19
   29608:	mov	x2, x20
   2960c:	mov	x1, x19
   29610:	mov	w0, w21
   29614:	bl	6a40 <__asan_backtrace_close@plt>
   29618:	ldr	w0, [sp, #192]
   2961c:	cbz	w0, 29634 <__asan_internal_strnlen@@Base+0x2278>
   29620:	mov	x3, x20
   29624:	mov	x2, x19
   29628:	add	x1, sp, #0x218
   2962c:	mov	x0, x28
   29630:	bl	64f0 <__asan_backtrace_release_view@plt>
   29634:	ldr	x0, [sp, #232]
   29638:	str	xzr, [sp, #376]
   2963c:	cbz	x0, 29760 <__asan_internal_strnlen@@Base+0x23a4>
   29640:	ldr	x1, [sp, #296]
   29644:	mov	x2, x0
   29648:	mov	x4, x20
   2964c:	mov	x3, x19
   29650:	mov	x0, x28
   29654:	bl	279c8 <__asan_internal_strnlen@@Base+0x60c>
   29658:	mov	w21, w0
   2965c:	tbnz	w0, #31, 29760 <__asan_internal_strnlen@@Base+0x23a4>
   29660:	mov	w2, w0
   29664:	ldr	w0, [sp, #316]
   29668:	str	w0, [sp, #40]
   2966c:	mov	x5, x20
   29670:	ldr	x0, [sp, #304]
   29674:	str	x0, [sp, #32]
   29678:	ldp	x3, x7, [sp, #240]
   2967c:	mov	w0, #0x1                   	// #1
   29680:	str	w0, [sp, #24]
   29684:	add	x0, sp, #0x178
   29688:	ldr	x6, [sp, #272]
   2968c:	str	x0, [sp, #8]
   29690:	ldr	x1, [sp, #296]
   29694:	mov	x4, x19
   29698:	ldr	x0, [sp, #1168]
   2969c:	str	x0, [sp]
   296a0:	str	wzr, [sp, #16]
   296a4:	mov	x0, x28
   296a8:	bl	28a58 <__asan_internal_strnlen@@Base+0x169c>
   296ac:	mov	w22, w0
   296b0:	mov	x3, x20
   296b4:	mov	x2, x19
   296b8:	add	x1, sp, #0x230
   296bc:	mov	x0, x28
   296c0:	bl	64f0 <__asan_backtrace_release_view@plt>
   296c4:	tbz	w22, #31, 2977c <__asan_internal_strnlen@@Base+0x23c0>
   296c8:	mov	x2, x20
   296cc:	mov	x1, x19
   296d0:	b	294c4 <__asan_internal_strnlen@@Base+0x2108>
   296d4:	ldr	x3, [sp, #768]
   296d8:	add	x25, sp, #0x248
   296dc:	mov	x6, x25
   296e0:	mov	x5, x20
   296e4:	mov	x4, x19
   296e8:	mov	w1, w21
   296ec:	mov	x0, x28
   296f0:	mov	x2, #0x0                   	// #0
   296f4:	bl	6880 <__asan_backtrace_get_view@plt>
   296f8:	cbz	w0, 29608 <__asan_internal_strnlen@@Base+0x224c>
   296fc:	ldr	x2, [sp, #584]
   29700:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   29704:	ldr	x3, [sp, #768]
   29708:	add	x0, x0, #0xb88
   2970c:	add	x0, x0, #0x4e0
   29710:	mov	w22, #0xffffffff            	// #-1
   29714:	add	x3, x2, x3
   29718:	cmp	x3, x2
   2971c:	b.hi	29748 <__asan_internal_strnlen@@Base+0x238c>  // b.pmore
   29720:	mov	x0, x28
   29724:	mov	x3, x20
   29728:	mov	x2, x19
   2972c:	mov	x1, x25
   29730:	bl	64f0 <__asan_backtrace_release_view@plt>
   29734:	mvn	w22, w22
   29738:	ldr	w0, [sp, #312]
   2973c:	cmp	w0, w22
   29740:	b.eq	29440 <__asan_internal_strnlen@@Base+0x2084>  // b.none
   29744:	b	29608 <__asan_internal_strnlen@@Base+0x224c>
   29748:	ldrb	w1, [x2], #1
   2974c:	eor	w1, w1, w22
   29750:	and	x1, x1, #0xff
   29754:	ldr	w1, [x0, x1, lsl #2]
   29758:	eor	w22, w1, w22, lsr #8
   2975c:	b	29718 <__asan_internal_strnlen@@Base+0x235c>
   29760:	ldr	w0, [sp, #200]
   29764:	cbz	w0, 2977c <__asan_internal_strnlen@@Base+0x23c0>
   29768:	mov	x3, x20
   2976c:	mov	x2, x19
   29770:	add	x1, sp, #0x230
   29774:	mov	x0, x28
   29778:	bl	64f0 <__asan_backtrace_release_view@plt>
   2977c:	add	x21, sp, #0x350
   29780:	mov	w22, #0xa                   	// #10
   29784:	mov	x1, x21
   29788:	mov	x3, #0x0                   	// #0
   2978c:	mov	x25, #0x0                   	// #0
   29790:	ldr	x2, [x1, #8]
   29794:	cbz	x2, 297b4 <__asan_internal_strnlen@@Base+0x23f8>
   29798:	ldr	x0, [x1]
   2979c:	cbz	x25, 297ec <__asan_internal_strnlen@@Base+0x2430>
   297a0:	cmp	x0, x25
   297a4:	csel	x25, x25, x0, ge  // ge = tcont
   297a8:	add	x0, x0, x2
   297ac:	cmp	x3, x0
   297b0:	csel	x3, x3, x0, ge  // ge = tcont
   297b4:	add	x1, x1, #0x20
   297b8:	subs	w22, w22, #0x1
   297bc:	b.ne	29790 <__asan_internal_strnlen@@Base+0x23d4>  // b.any
   297c0:	cmp	x25, #0x0
   297c4:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   297c8:	b.ne	297f4 <__asan_internal_strnlen@@Base+0x2438>  // b.any
   297cc:	mov	x2, x20
   297d0:	mov	x1, x19
   297d4:	mov	w0, w24
   297d8:	bl	6a40 <__asan_backtrace_close@plt>
   297dc:	mov	w27, w0
   297e0:	cbz	w0, 29c34 <__asan_internal_strnlen@@Base+0x2878>
   297e4:	mov	w22, #0x1                   	// #1
   297e8:	b	2955c <__asan_internal_strnlen@@Base+0x21a0>
   297ec:	mov	x25, x0
   297f0:	b	297a8 <__asan_internal_strnlen@@Base+0x23ec>
   297f4:	add	x26, sp, #0x2d0
   297f8:	mov	x5, x20
   297fc:	mov	x6, x26
   29800:	mov	x4, x19
   29804:	sub	x3, x3, x25
   29808:	mov	x2, x25
   2980c:	mov	w1, w24
   29810:	mov	x0, x28
   29814:	bl	6880 <__asan_backtrace_get_view@plt>
   29818:	mov	w27, w0
   2981c:	cbz	w0, 29c34 <__asan_internal_strnlen@@Base+0x2878>
   29820:	mov	x2, x20
   29824:	mov	x1, x19
   29828:	mov	w0, w24
   2982c:	bl	6a40 <__asan_backtrace_close@plt>
   29830:	cbz	w0, 29c30 <__asan_internal_strnlen@@Base+0x2874>
   29834:	ldr	x3, [sp, #720]
   29838:	mov	x0, x21
   2983c:	mov	w2, #0x0                   	// #0
   29840:	ldr	x1, [x0, #8]
   29844:	cbnz	x1, 29a50 <__asan_internal_strnlen@@Base+0x2694>
   29848:	str	xzr, [x0, #16]
   2984c:	add	w2, w2, #0x1
   29850:	add	x0, x0, #0x20
   29854:	cmp	w2, #0xa
   29858:	b.ne	29840 <__asan_internal_strnlen@@Base+0x2484>  // b.any
   2985c:	add	x0, sp, #0x248
   29860:	adrp	x25, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   29864:	mov	x27, x21
   29868:	add	x25, x25, #0xb2b
   2986c:	mov	w24, #0x5                   	// #5
   29870:	mov	x23, #0x0                   	// #0
   29874:	str	x0, [sp, #184]
   29878:	add	x0, sp, #0x180
   2987c:	str	x0, [sp, #192]
   29880:	ldr	x0, [x27, #8]
   29884:	cbnz	x0, 298d8 <__asan_internal_strnlen@@Base+0x251c>
   29888:	ldr	x0, [x27, #168]
   2988c:	cbz	x0, 298d8 <__asan_internal_strnlen@@Base+0x251c>
   29890:	cbnz	x23, 298b0 <__asan_internal_strnlen@@Base+0x24f4>
   29894:	mov	x3, x20
   29898:	mov	x2, x19
   2989c:	mov	x0, x28
   298a0:	mov	x1, #0x13b4                	// #5044
   298a4:	bl	6670 <__asan_backtrace_alloc@plt>
   298a8:	mov	x23, x0
   298ac:	cbz	x0, 29ab8 <__asan_internal_strnlen@@Base+0x26fc>
   298b0:	ldr	x11, [x27, #168]
   298b4:	str	xzr, [sp, #384]
   298b8:	str	xzr, [sp, #584]
   298bc:	cmp	x11, #0xb
   298c0:	b.hi	29a6c <__asan_internal_strnlen@@Base+0x26b0>  // b.pmore
   298c4:	ldr	x0, [sp, #384]
   298c8:	str	x0, [x27, #16]
   298cc:	ldr	x0, [sp, #584]
   298d0:	str	x0, [x27, #8]
   298d4:	str	wzr, [x27, #24]
   298d8:	add	x27, x27, #0x20
   298dc:	subs	w24, w24, #0x1
   298e0:	b.ne	29880 <__asan_internal_strnlen@@Base+0x24c4>  // b.any
   298e4:	mov	w24, #0x5                   	// #5
   298e8:	ldr	x0, [x21, #8]
   298ec:	cbz	x0, 2998c <__asan_internal_strnlen@@Base+0x25d0>
   298f0:	ldr	w0, [x21, #24]
   298f4:	cbz	w0, 2998c <__asan_internal_strnlen@@Base+0x25d0>
   298f8:	cbnz	x23, 29918 <__asan_internal_strnlen@@Base+0x255c>
   298fc:	mov	x3, x20
   29900:	mov	x2, x19
   29904:	mov	x0, x28
   29908:	mov	x1, #0x13b4                	// #5044
   2990c:	bl	6670 <__asan_backtrace_alloc@plt>
   29910:	mov	x23, x0
   29914:	cbz	x0, 29ab8 <__asan_internal_strnlen@@Base+0x26fc>
   29918:	ldr	x5, [x21, #8]
   2991c:	cmp	x5, #0x17
   29920:	b.ls	29c24 <__asan_internal_strnlen@@Base+0x2868>  // b.plast
   29924:	ldr	x27, [x21, #16]
   29928:	ldr	w4, [x27]
   2992c:	cmp	w4, #0x1
   29930:	b.ne	29c24 <__asan_internal_strnlen@@Base+0x2868>  // b.any
   29934:	ldr	x1, [x27, #8]
   29938:	mov	x3, x20
   2993c:	mov	x2, x19
   29940:	mov	x0, x28
   29944:	str	x5, [sp, #184]
   29948:	str	w4, [sp, #192]
   2994c:	bl	6670 <__asan_backtrace_alloc@plt>
   29950:	ldr	w4, [sp, #192]
   29954:	mov	x25, x0
   29958:	cbz	x0, 29c50 <__asan_internal_strnlen@@Base+0x2894>
   2995c:	ldr	x4, [x27, #8]
   29960:	mov	x3, x0
   29964:	ldr	x5, [sp, #184]
   29968:	mov	x2, x23
   2996c:	add	x0, x27, #0x18
   29970:	sub	x1, x5, #0x18
   29974:	bl	27c9c <__asan_internal_strnlen@@Base+0x8e0>
   29978:	cbz	w0, 29c24 <__asan_internal_strnlen@@Base+0x2868>
   2997c:	ldr	x0, [x27, #8]
   29980:	sub	w22, w22, #0x1
   29984:	stp	x0, x25, [x21, #8]
   29988:	str	wzr, [x21, #24]
   2998c:	add	x21, x21, #0x20
   29990:	subs	w24, w24, #0x1
   29994:	b.ne	298e8 <__asan_internal_strnlen@@Base+0x252c>  // b.any
   29998:	cbz	x23, 299b4 <__asan_internal_strnlen@@Base+0x25f8>
   2999c:	mov	x4, x20
   299a0:	mov	x3, x19
   299a4:	mov	x1, x23
   299a8:	mov	x0, x28
   299ac:	mov	x2, #0x13b4                	// #5044
   299b0:	bl	6950 <__asan_backtrace_free@plt>
   299b4:	cbnz	w22, 29ac4 <__asan_internal_strnlen@@Base+0x2708>
   299b8:	mov	w27, #0x0                   	// #0
   299bc:	mov	x3, x20
   299c0:	mov	x2, x19
   299c4:	mov	x1, x26
   299c8:	mov	x0, x28
   299cc:	bl	64f0 <__asan_backtrace_release_view@plt>
   299d0:	add	x0, sp, #0x358
   299d4:	ldr	x1, [sp, #240]
   299d8:	ldp	x3, x2, [x0]
   299dc:	ldp	x5, x4, [x0, #32]
   299e0:	stp	x19, x20, [sp, #48]
   299e4:	ldr	x0, [sp, #1176]
   299e8:	str	x0, [sp, #72]
   299ec:	ldr	x0, [sp, #272]
   299f0:	str	x0, [sp, #64]
   299f4:	ldr	x0, [sp, #376]
   299f8:	str	x0, [sp, #40]
   299fc:	ldrb	w0, [sp, #661]
   29a00:	ldr	x7, [sp, #920]
   29a04:	cmp	w0, #0x2
   29a08:	cset	w0, eq  // eq = none
   29a0c:	str	w0, [sp, #32]
   29a10:	ldr	x0, [sp, #984]
   29a14:	str	x0, [sp, #24]
   29a18:	ldr	x0, [sp, #992]
   29a1c:	str	x0, [sp, #16]
   29a20:	ldr	x6, [sp, #928]
   29a24:	ldr	x0, [sp, #952]
   29a28:	str	x0, [sp, #8]
   29a2c:	ldr	x0, [sp, #960]
   29a30:	str	x0, [sp]
   29a34:	mov	x0, x28
   29a38:	bl	6500 <__asan_backtrace_dwarf_add@plt>
   29a3c:	cbz	w0, 29abc <__asan_internal_strnlen@@Base+0x2700>
   29a40:	ldr	x0, [sp, #1168]
   29a44:	mov	w22, #0x1                   	// #1
   29a48:	str	w22, [x0]
   29a4c:	b	2955c <__asan_internal_strnlen@@Base+0x21a0>
   29a50:	ldr	x1, [x0]
   29a54:	cmp	w2, #0x5
   29a58:	cinc	w22, w22, cc  // cc = lo, ul, last
   29a5c:	sub	x1, x1, x25
   29a60:	add	x1, x3, x1
   29a64:	str	x1, [x0, #16]
   29a68:	b	2984c <__asan_internal_strnlen@@Base+0x2490>
   29a6c:	ldr	x10, [x27, #176]
   29a70:	mov	x1, x25
   29a74:	mov	x2, #0x4                   	// #4
   29a78:	str	x10, [sp, #200]
   29a7c:	mov	x0, x10
   29a80:	str	x11, [sp, #216]
   29a84:	bl	69d0 <__asan_internal_memcmp@plt>
   29a88:	cbnz	w0, 298c4 <__asan_internal_strnlen@@Base+0x2508>
   29a8c:	ldp	x7, x6, [sp, #184]
   29a90:	mov	x5, x20
   29a94:	ldr	x10, [sp, #200]
   29a98:	mov	x4, x19
   29a9c:	ldr	x11, [sp, #216]
   29aa0:	mov	x3, x23
   29aa4:	mov	x0, x28
   29aa8:	mov	x1, x10
   29aac:	mov	x2, x11
   29ab0:	bl	28998 <__asan_internal_strnlen@@Base+0x15dc>
   29ab4:	cbnz	w0, 298c4 <__asan_internal_strnlen@@Base+0x2508>
   29ab8:	mov	w27, #0x1                   	// #1
   29abc:	mov	w24, #0xffffffff            	// #-1
   29ac0:	b	29c34 <__asan_internal_strnlen@@Base+0x2878>
   29ac4:	mov	w27, #0x1                   	// #1
   29ac8:	b	299d0 <__asan_internal_strnlen@@Base+0x2614>
   29acc:	mov	w22, #0xffffffff            	// #-1
   29ad0:	b	2955c <__asan_internal_strnlen@@Base+0x21a0>
   29ad4:	mov	w27, #0x0                   	// #0
   29ad8:	mov	w25, #0x0                   	// #0
   29adc:	mov	x22, #0x0                   	// #0
   29ae0:	str	wzr, [sp, #184]
   29ae4:	str	wzr, [sp, #192]
   29ae8:	str	wzr, [sp, #200]
   29aec:	mov	x3, x20
   29af0:	mov	x2, x19
   29af4:	add	x1, sp, #0x1a0
   29af8:	mov	x0, x28
   29afc:	bl	64f0 <__asan_backtrace_release_view@plt>
   29b00:	cbz	w21, 29b18 <__asan_internal_strnlen@@Base+0x275c>
   29b04:	mov	x3, x20
   29b08:	mov	x2, x19
   29b0c:	add	x1, sp, #0x1b8
   29b10:	mov	x0, x28
   29b14:	bl	64f0 <__asan_backtrace_release_view@plt>
   29b18:	cbz	w25, 29b30 <__asan_internal_strnlen@@Base+0x2774>
   29b1c:	mov	x3, x20
   29b20:	mov	x2, x19
   29b24:	add	x1, sp, #0x1d0
   29b28:	mov	x0, x28
   29b2c:	bl	64f0 <__asan_backtrace_release_view@plt>
   29b30:	cbz	w27, 29b4c <__asan_internal_strnlen@@Base+0x2790>
   29b34:	mov	w27, #0x0                   	// #0
   29b38:	mov	x3, x20
   29b3c:	mov	x2, x19
   29b40:	add	x1, sp, #0x1e8
   29b44:	mov	x0, x28
   29b48:	bl	64f0 <__asan_backtrace_release_view@plt>
   29b4c:	ldr	w0, [sp, #192]
   29b50:	cbz	w0, 29b68 <__asan_internal_strnlen@@Base+0x27ac>
   29b54:	mov	x3, x20
   29b58:	mov	x2, x19
   29b5c:	add	x1, sp, #0x218
   29b60:	mov	x0, x28
   29b64:	bl	64f0 <__asan_backtrace_release_view@plt>
   29b68:	ldr	w0, [sp, #200]
   29b6c:	cbz	w0, 29b84 <__asan_internal_strnlen@@Base+0x27c8>
   29b70:	mov	x3, x20
   29b74:	mov	x2, x19
   29b78:	add	x1, sp, #0x230
   29b7c:	mov	x0, x28
   29b80:	bl	64f0 <__asan_backtrace_release_view@plt>
   29b84:	ldr	w0, [sp, #184]
   29b88:	cbz	w0, 29ba0 <__asan_internal_strnlen@@Base+0x27e4>
   29b8c:	mov	x3, x20
   29b90:	mov	x2, x19
   29b94:	add	x1, sp, #0x200
   29b98:	mov	x0, x28
   29b9c:	bl	64f0 <__asan_backtrace_release_view@plt>
   29ba0:	cbz	w27, 29bb8 <__asan_internal_strnlen@@Base+0x27fc>
   29ba4:	mov	x3, x20
   29ba8:	mov	x2, x19
   29bac:	add	x1, sp, #0x2d0
   29bb0:	mov	x0, x28
   29bb4:	bl	64f0 <__asan_backtrace_release_view@plt>
   29bb8:	cbz	x22, 29bd0 <__asan_internal_strnlen@@Base+0x2814>
   29bbc:	mov	x3, x20
   29bc0:	mov	x2, x19
   29bc4:	add	x1, x22, #0x18
   29bc8:	mov	x0, x28
   29bcc:	bl	64f0 <__asan_backtrace_release_view@plt>
   29bd0:	cmn	w24, #0x1
   29bd4:	b.eq	29be8 <__asan_internal_strnlen@@Base+0x282c>  // b.none
   29bd8:	mov	x2, x20
   29bdc:	mov	x1, x19
   29be0:	mov	w0, w24
   29be4:	bl	6a40 <__asan_backtrace_close@plt>
   29be8:	mov	w22, #0x0                   	// #0
   29bec:	b	2955c <__asan_internal_strnlen@@Base+0x21a0>
   29bf0:	ldr	w25, [sp, #184]
   29bf4:	b	28dd4 <__asan_internal_strnlen@@Base+0x1a18>
   29bf8:	mov	x21, #0x1                   	// #1
   29bfc:	mov	w27, #0x0                   	// #0
   29c00:	str	w21, [sp, #184]
   29c04:	b	29aec <__asan_internal_strnlen@@Base+0x2730>
   29c08:	str	wzr, [sp, #192]
   29c0c:	mov	w27, #0x0                   	// #0
   29c10:	b	28dd4 <__asan_internal_strnlen@@Base+0x1a18>
   29c14:	mov	w27, #0x0                   	// #0
   29c18:	b	29aec <__asan_internal_strnlen@@Base+0x2730>
   29c1c:	mov	w25, #0x1                   	// #1
   29c20:	b	28dd4 <__asan_internal_strnlen@@Base+0x1a18>
   29c24:	mov	x0, #0x0                   	// #0
   29c28:	mov	x25, #0x0                   	// #0
   29c2c:	b	29980 <__asan_internal_strnlen@@Base+0x25c4>
   29c30:	mov	w27, #0x1                   	// #1
   29c34:	ldr	w0, [sp, #208]
   29c38:	cbz	w0, 28b24 <__asan_internal_strnlen@@Base+0x1768>
   29c3c:	mov	x22, #0x0                   	// #0
   29c40:	str	wzr, [sp, #184]
   29c44:	str	wzr, [sp, #192]
   29c48:	str	wzr, [sp, #200]
   29c4c:	b	29b38 <__asan_internal_strnlen@@Base+0x277c>
   29c50:	mov	w27, w4
   29c54:	b	29abc <__asan_internal_strnlen@@Base+0x2700>
   29c58:	sub	sp, sp, #0x70
   29c5c:	stp	x29, x30, [sp, #48]
   29c60:	add	x29, sp, #0x30
   29c64:	ldr	x1, [x0, #8]
   29c68:	stp	x19, x20, [sp, #64]
   29c6c:	mov	x20, x0
   29c70:	ldr	w0, [x2, #56]
   29c74:	mov	x19, x2
   29c78:	str	x21, [sp, #80]
   29c7c:	cmn	w0, #0x1
   29c80:	cbz	x1, 29c8c <__asan_internal_strnlen@@Base+0x28d0>
   29c84:	ldrb	w1, [x1]
   29c88:	cbnz	w1, 29cfc <__asan_internal_strnlen@@Base+0x2940>
   29c8c:	b.eq	29d28 <__asan_internal_strnlen@@Base+0x296c>  // b.none
   29c90:	ldr	x21, [x19, #48]
   29c94:	mov	w1, #0xffffffff            	// #-1
   29c98:	str	w1, [x19, #56]
   29c9c:	mov	w2, w0
   29ca0:	add	x1, sp, #0x64
   29ca4:	ldp	x0, x4, [x19]
   29ca8:	add	x6, sp, #0x68
   29cac:	ldr	x3, [x20]
   29cb0:	ldr	x5, [x19, #16]
   29cb4:	ldr	x7, [x19, #32]
   29cb8:	stp	x1, xzr, [sp]
   29cbc:	mov	x1, x21
   29cc0:	str	wzr, [sp, #16]
   29cc4:	str	wzr, [sp, #24]
   29cc8:	str	xzr, [sp, #32]
   29ccc:	str	wzr, [sp, #40]
   29cd0:	bl	28a58 <__asan_internal_strnlen@@Base+0x169c>
   29cd4:	cbz	w0, 29d28 <__asan_internal_strnlen@@Base+0x296c>
   29cd8:	ldr	w0, [sp, #100]
   29cdc:	cbz	w0, 29d28 <__asan_internal_strnlen@@Base+0x296c>
   29ce0:	ldr	x0, [x19, #40]
   29ce4:	mov	w1, #0x1                   	// #1
   29ce8:	str	w1, [x0]
   29cec:	ldr	x0, [x19, #24]
   29cf0:	ldr	x1, [sp, #104]
   29cf4:	str	x1, [x0]
   29cf8:	b	29d28 <__asan_internal_strnlen@@Base+0x296c>
   29cfc:	b.eq	29d10 <__asan_internal_strnlen@@Base+0x2954>  // b.none
   29d00:	ldp	x1, x2, [x2, #8]
   29d04:	bl	6a40 <__asan_backtrace_close@plt>
   29d08:	mov	w0, #0xffffffff            	// #-1
   29d0c:	str	w0, [x19, #56]
   29d10:	ldp	x1, x2, [x19, #8]
   29d14:	add	x3, sp, #0x60
   29d18:	ldr	x21, [x20, #8]
   29d1c:	mov	x0, x21
   29d20:	bl	6b10 <__asan_backtrace_open@plt>
   29d24:	tbz	w0, #31, 29c9c <__asan_internal_strnlen@@Base+0x28e0>
   29d28:	mov	w0, #0x0                   	// #0
   29d2c:	ldp	x29, x30, [sp, #48]
   29d30:	ldp	x19, x20, [sp, #64]
   29d34:	ldr	x21, [sp, #80]
   29d38:	add	sp, sp, #0x70
   29d3c:	ret

0000000000029d40 <__asan_backtrace_uncompress_zdebug@@Base>:
   29d40:	stp	x29, x30, [sp, #-80]!
   29d44:	mov	x29, sp
   29d48:	stp	x21, x22, [sp, #32]
   29d4c:	mov	x21, x3
   29d50:	mov	x22, x4
   29d54:	mov	x3, x4
   29d58:	stp	x19, x20, [sp, #16]
   29d5c:	mov	x19, x1
   29d60:	mov	x1, #0x13b4                	// #5044
   29d64:	stp	x23, x24, [sp, #48]
   29d68:	mov	x24, x2
   29d6c:	mov	x23, x0
   29d70:	mov	x2, x21
   29d74:	stp	x25, x26, [sp, #64]
   29d78:	mov	x25, x5
   29d7c:	mov	x26, x6
   29d80:	bl	6670 <__asan_backtrace_alloc@plt>
   29d84:	cbz	x0, 29e18 <__asan_backtrace_uncompress_zdebug@@Base+0xd8>
   29d88:	str	xzr, [x25]
   29d8c:	mov	x20, x0
   29d90:	str	xzr, [x26]
   29d94:	cmp	x24, #0xb
   29d98:	b.hi	29dd4 <__asan_backtrace_uncompress_zdebug@@Base+0x94>  // b.pmore
   29d9c:	mov	w19, #0x1                   	// #1
   29da0:	mov	x4, x22
   29da4:	mov	x3, x21
   29da8:	mov	x1, x20
   29dac:	mov	x0, x23
   29db0:	mov	x2, #0x13b4                	// #5044
   29db4:	bl	6950 <__asan_backtrace_free@plt>
   29db8:	mov	w0, w19
   29dbc:	ldp	x19, x20, [sp, #16]
   29dc0:	ldp	x21, x22, [sp, #32]
   29dc4:	ldp	x23, x24, [sp, #48]
   29dc8:	ldp	x25, x26, [sp, #64]
   29dcc:	ldp	x29, x30, [sp], #80
   29dd0:	ret
   29dd4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x7bc4>
   29dd8:	mov	x0, x19
   29ddc:	add	x1, x1, #0xb2b
   29de0:	mov	x2, #0x4                   	// #4
   29de4:	bl	69d0 <__asan_internal_memcmp@plt>
   29de8:	cbnz	w0, 29d9c <__asan_backtrace_uncompress_zdebug@@Base+0x5c>
   29dec:	mov	x1, x19
   29df0:	mov	x7, x26
   29df4:	mov	x6, x25
   29df8:	mov	x5, x22
   29dfc:	mov	x4, x21
   29e00:	mov	x3, x20
   29e04:	mov	x2, x24
   29e08:	mov	x0, x23
   29e0c:	bl	28998 <__asan_internal_strnlen@@Base+0x15dc>
   29e10:	mov	w19, w0
   29e14:	b	29da0 <__asan_backtrace_uncompress_zdebug@@Base+0x60>
   29e18:	mov	w19, #0x0                   	// #0
   29e1c:	b	29db8 <__asan_backtrace_uncompress_zdebug@@Base+0x78>

0000000000029e20 <__asan_backtrace_initialize@@Base>:
   29e20:	sub	sp, sp, #0xe0
   29e24:	stp	x29, x30, [sp, #48]
   29e28:	add	x29, sp, #0x30
   29e2c:	stp	x23, x24, [sp, #96]
   29e30:	mov	x23, x3
   29e34:	mov	x24, x1
   29e38:	stp	x27, x28, [sp, #128]
   29e3c:	adrp	x28, 27000 <__asan_cplus_demangle_init_info@@Base+0xc0>
   29e40:	add	x3, x28, #0x3c0
   29e44:	str	wzr, [sp, #24]
   29e48:	add	x27, sp, #0x98
   29e4c:	str	xzr, [sp, #32]
   29e50:	mov	x6, x27
   29e54:	str	wzr, [sp, #40]
   29e58:	stp	x25, x26, [sp, #112]
   29e5c:	add	x25, sp, #0x94
   29e60:	add	x26, sp, #0x90
   29e64:	stp	x25, xzr, [sp]
   29e68:	mov	x7, x26
   29e6c:	str	x3, [sp, #152]
   29e70:	mov	w3, #0x1                   	// #1
   29e74:	str	w3, [sp, #16]
   29e78:	mov	x3, #0x0                   	// #0
   29e7c:	stp	x19, x20, [sp, #64]
   29e80:	mov	x20, x5
   29e84:	mov	x19, x0
   29e88:	mov	x5, x4
   29e8c:	stp	x21, x22, [sp, #80]
   29e90:	mov	x22, x4
   29e94:	mov	w21, w2
   29e98:	mov	x4, x23
   29e9c:	bl	28a58 <__asan_internal_strnlen@@Base+0x169c>
   29ea0:	cbz	w0, 29f50 <__asan_backtrace_initialize@@Base+0x130>
   29ea4:	cmp	w0, #0x0
   29ea8:	add	x1, sp, #0xa0
   29eac:	csinv	w21, w21, wzr, lt  // lt = tstop
   29eb0:	adrp	x0, 29000 <__asan_internal_strnlen@@Base+0x1c44>
   29eb4:	add	x0, x0, #0xc58
   29eb8:	stp	x19, x23, [sp, #160]
   29ebc:	stp	x22, x27, [sp, #176]
   29ec0:	stp	x26, x25, [sp, #192]
   29ec4:	str	x24, [sp, #208]
   29ec8:	str	w21, [sp, #216]
   29ecc:	bl	6710 <dl_iterate_phdr@plt>
   29ed0:	ldr	w0, [x19, #8]
   29ed4:	ldr	w1, [sp, #144]
   29ed8:	cbnz	w0, 29f08 <__asan_backtrace_initialize@@Base+0xe8>
   29edc:	cbz	w1, 29ef4 <__asan_backtrace_initialize@@Base+0xd4>
   29ee0:	adrp	x0, 27000 <__asan_cplus_demangle_init_info@@Base+0xc0>
   29ee4:	add	x0, x0, #0x804
   29ee8:	str	x0, [x19, #40]
   29eec:	ldr	x0, [x19, #24]
   29ef0:	b	29f2c <__asan_backtrace_initialize@@Base+0x10c>
   29ef4:	ldr	x0, [x19, #40]
   29ef8:	cbnz	x0, 29eec <__asan_backtrace_initialize@@Base+0xcc>
   29efc:	adrp	x0, 27000 <__asan_cplus_demangle_init_info@@Base+0xc0>
   29f00:	add	x0, x0, #0x3e8
   29f04:	b	29ee8 <__asan_backtrace_initialize@@Base+0xc8>
   29f08:	add	x0, x19, #0x28
   29f0c:	cbz	w1, 29f70 <__asan_backtrace_initialize@@Base+0x150>
   29f10:	adrp	x1, 27000 <__asan_cplus_demangle_init_info@@Base+0xc0>
   29f14:	add	x1, x1, #0x804
   29f18:	stlr	x1, [x0]
   29f1c:	ldr	w0, [x19, #8]
   29f20:	cbz	w0, 29eec <__asan_backtrace_initialize@@Base+0xcc>
   29f24:	add	x19, x19, #0x18
   29f28:	ldar	x0, [x19]
   29f2c:	str	x0, [x20]
   29f30:	ldr	x0, [x20]
   29f34:	cbz	x0, 29f44 <__asan_backtrace_initialize@@Base+0x124>
   29f38:	add	x28, x28, #0x3c0
   29f3c:	cmp	x0, x28
   29f40:	b.ne	29f4c <__asan_backtrace_initialize@@Base+0x12c>  // b.any
   29f44:	ldr	x0, [sp, #152]
   29f48:	str	x0, [x20]
   29f4c:	mov	w0, #0x1                   	// #1
   29f50:	ldp	x29, x30, [sp, #48]
   29f54:	ldp	x19, x20, [sp, #64]
   29f58:	ldp	x21, x22, [sp, #80]
   29f5c:	ldp	x23, x24, [sp, #96]
   29f60:	ldp	x25, x26, [sp, #112]
   29f64:	ldp	x27, x28, [sp, #128]
   29f68:	add	sp, sp, #0xe0
   29f6c:	ret
   29f70:	adrp	x1, 27000 <__asan_cplus_demangle_init_info@@Base+0xc0>
   29f74:	add	x1, x1, #0x3e8
   29f78:	ldxr	x2, [x0]
   29f7c:	cbnz	x2, 29f88 <__asan_backtrace_initialize@@Base+0x168>
   29f80:	stlxr	w3, x1, [x0]
   29f84:	cbnz	w3, 29f78 <__asan_backtrace_initialize@@Base+0x158>
   29f88:	dmb	ish
   29f8c:	b	29f1c <__asan_backtrace_initialize@@Base+0xfc>

0000000000029f90 <__asan_backtrace_get_view@@Base>:
   29f90:	stp	x29, x30, [sp, #-80]!
   29f94:	mov	x29, sp
   29f98:	stp	x19, x20, [sp, #16]
   29f9c:	sub	x19, x3, #0x1
   29fa0:	stp	x21, x22, [sp, #32]
   29fa4:	mov	x21, x4
   29fa8:	mov	x22, x5
   29fac:	stp	x23, x24, [sp, #48]
   29fb0:	mov	x24, x2
   29fb4:	mov	x23, x6
   29fb8:	str	x25, [sp, #64]
   29fbc:	mov	w25, w1
   29fc0:	bl	6a20 <getpagesize@plt>
   29fc4:	sxtw	x0, w0
   29fc8:	mov	w4, w25
   29fcc:	mov	w3, #0x2                   	// #2
   29fd0:	mov	w2, #0x1                   	// #1
   29fd4:	udiv	x20, x24, x0
   29fd8:	msub	w20, w20, w0, w24
   29fdc:	add	x1, x0, x20
   29fe0:	neg	x0, x0
   29fe4:	add	x19, x19, x1
   29fe8:	sub	x5, x24, x20
   29fec:	and	x19, x0, x19
   29ff0:	mov	x0, #0x0                   	// #0
   29ff4:	mov	x1, x19
   29ff8:	bl	6770 <mmap@plt>
   29ffc:	cmn	x0, #0x1
   2a000:	b.ne	2a038 <__asan_backtrace_get_view@@Base+0xa8>  // b.any
   2a004:	bl	6860 <__errno_location@plt>
   2a008:	ldr	w2, [x0]
   2a00c:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x8bc4>
   2a010:	mov	x0, x22
   2a014:	add	x1, x1, #0x468
   2a018:	blr	x21
   2a01c:	mov	w0, #0x0                   	// #0
   2a020:	ldp	x19, x20, [sp, #16]
   2a024:	ldp	x21, x22, [sp, #32]
   2a028:	ldp	x23, x24, [sp, #48]
   2a02c:	ldr	x25, [sp, #64]
   2a030:	ldp	x29, x30, [sp], #80
   2a034:	ret
   2a038:	add	x20, x0, x20
   2a03c:	stp	x20, x0, [x23]
   2a040:	mov	w0, #0x1                   	// #1
   2a044:	str	x19, [x23, #16]
   2a048:	b	2a020 <__asan_backtrace_get_view@@Base+0x90>

000000000002a04c <__asan_backtrace_release_view@@Base>:
   2a04c:	mov	x4, x1
   2a050:	stp	x29, x30, [sp, #-32]!
   2a054:	mov	x29, sp
   2a058:	ldr	x0, [x4, #8]
   2a05c:	stp	x19, x20, [sp, #16]
   2a060:	mov	x19, x2
   2a064:	ldr	x1, [x1, #16]
   2a068:	mov	x20, x3
   2a06c:	bl	6780 <munmap@plt>
   2a070:	tbz	w0, #31, 2a098 <__asan_backtrace_release_view@@Base+0x4c>
   2a074:	bl	6860 <__errno_location@plt>
   2a078:	ldr	w2, [x0]
   2a07c:	mov	x16, x19
   2a080:	mov	x0, x20
   2a084:	ldp	x19, x20, [sp, #16]
   2a088:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x8bc4>
   2a08c:	ldp	x29, x30, [sp], #32
   2a090:	add	x1, x1, #0x46d
   2a094:	br	x16
   2a098:	ldp	x19, x20, [sp, #16]
   2a09c:	ldp	x29, x30, [sp], #32
   2a0a0:	ret
   2a0a4:	ldr	x4, [x0, #64]
   2a0a8:	add	x5, x0, #0x40
   2a0ac:	mov	x3, #0x0                   	// #0
   2a0b0:	mov	x6, #0x0                   	// #0
   2a0b4:	cbnz	x4, 2a0e8 <__asan_backtrace_release_view@@Base+0x9c>
   2a0b8:	cmp	x6, #0xf
   2a0bc:	b.ls	2a0d8 <__asan_backtrace_release_view@@Base+0x8c>  // b.plast
   2a0c0:	ldr	x4, [x3]
   2a0c4:	ldr	x5, [x4, #8]
   2a0c8:	cmp	x5, x2
   2a0cc:	b.cs	2a0e4 <__asan_backtrace_release_view@@Base+0x98>  // b.hs, b.nlast
   2a0d0:	ldr	x4, [x4]
   2a0d4:	str	x4, [x3]
   2a0d8:	ldr	x3, [x0, #64]
   2a0dc:	stp	x3, x2, [x1]
   2a0e0:	str	x1, [x0, #64]
   2a0e4:	ret
   2a0e8:	cbz	x3, 2a100 <__asan_backtrace_release_view@@Base+0xb4>
   2a0ec:	ldr	x7, [x3]
   2a0f0:	ldr	x8, [x4, #8]
   2a0f4:	ldr	x7, [x7, #8]
   2a0f8:	cmp	x8, x7
   2a0fc:	csel	x5, x5, x3, cc  // cc = lo, ul, last
   2a100:	mov	x3, x5
   2a104:	add	x6, x6, #0x1
   2a108:	mov	x5, x4
   2a10c:	ldr	x4, [x4]
   2a110:	b	2a0b4 <__asan_backtrace_release_view@@Base+0x68>

000000000002a114 <__asan_backtrace_free@@Base>:
   2a114:	stp	x29, x30, [sp, #-48]!
   2a118:	mov	x29, sp
   2a11c:	stp	x19, x20, [sp, #16]
   2a120:	mov	x19, x0
   2a124:	mov	x20, x2
   2a128:	str	x21, [sp, #32]
   2a12c:	mov	x0, #0xffff                	// #65535
   2a130:	mov	x21, x1
   2a134:	cmp	x2, x0
   2a138:	b.hi	2a18c <__asan_backtrace_free@@Base+0x78>  // b.pmore
   2a13c:	ldr	w0, [x19, #8]
   2a140:	cbz	w0, 2a1c4 <__asan_backtrace_free@@Base+0xb0>
   2a144:	add	x0, x19, #0x3c
   2a148:	mov	w2, #0x1                   	// #1
   2a14c:	ldxr	w1, [x0]
   2a150:	stxr	w3, w2, [x0]
   2a154:	cbnz	w3, 2a14c <__asan_backtrace_free@@Base+0x38>
   2a158:	dmb	ish
   2a15c:	cbnz	w1, 2a1b4 <__asan_backtrace_free@@Base+0xa0>
   2a160:	cmp	x20, #0xf
   2a164:	b.ls	2a178 <__asan_backtrace_free@@Base+0x64>  // b.plast
   2a168:	mov	x2, x20
   2a16c:	mov	x1, x21
   2a170:	mov	x0, x19
   2a174:	bl	2a0a4 <__asan_backtrace_release_view@@Base+0x58>
   2a178:	ldr	w0, [x19, #8]
   2a17c:	cbz	w0, 2a1b4 <__asan_backtrace_free@@Base+0xa0>
   2a180:	add	x19, x19, #0x3c
   2a184:	stlr	wzr, [x19]
   2a188:	b	2a1b4 <__asan_backtrace_free@@Base+0xa0>
   2a18c:	bl	6a20 <getpagesize@plt>
   2a190:	sxtw	x0, w0
   2a194:	sub	x0, x0, #0x1
   2a198:	orr	x1, x21, x20
   2a19c:	tst	x0, x1
   2a1a0:	b.ne	2a13c <__asan_backtrace_free@@Base+0x28>  // b.any
   2a1a4:	mov	x1, x20
   2a1a8:	mov	x0, x21
   2a1ac:	bl	6780 <munmap@plt>
   2a1b0:	cbnz	w0, 2a13c <__asan_backtrace_free@@Base+0x28>
   2a1b4:	ldp	x19, x20, [sp, #16]
   2a1b8:	ldr	x21, [sp, #32]
   2a1bc:	ldp	x29, x30, [sp], #48
   2a1c0:	ret
   2a1c4:	cmp	x20, #0xf
   2a1c8:	b.hi	2a168 <__asan_backtrace_free@@Base+0x54>  // b.pmore
   2a1cc:	b	2a1b4 <__asan_backtrace_free@@Base+0xa0>

000000000002a1d0 <__asan_backtrace_alloc@@Base>:
   2a1d0:	stp	x29, x30, [sp, #-64]!
   2a1d4:	mov	x29, sp
   2a1d8:	stp	x21, x22, [sp, #32]
   2a1dc:	mov	x21, x0
   2a1e0:	ldr	w0, [x0, #8]
   2a1e4:	stp	x19, x20, [sp, #16]
   2a1e8:	mov	x19, x1
   2a1ec:	stp	x23, x24, [sp, #48]
   2a1f0:	mov	x23, x2
   2a1f4:	mov	x24, x3
   2a1f8:	cbnz	w0, 2a26c <__asan_backtrace_alloc@@Base+0x9c>
   2a1fc:	ldr	x20, [x21, #64]
   2a200:	add	x0, x21, #0x40
   2a204:	cbz	x20, 2a240 <__asan_backtrace_alloc@@Base+0x70>
   2a208:	ldp	x1, x2, [x20]
   2a20c:	cmp	x2, x19
   2a210:	b.cc	2a2ec <__asan_backtrace_alloc@@Base+0x11c>  // b.lo, b.ul, b.last
   2a214:	add	x19, x19, #0x7
   2a218:	str	x1, [x0]
   2a21c:	and	x19, x19, #0xfffffffffffffff8
   2a220:	cmp	x2, x19
   2a224:	b.ls	2a240 <__asan_backtrace_alloc@@Base+0x70>  // b.plast
   2a228:	sub	x2, x2, x19
   2a22c:	cmp	x2, #0xf
   2a230:	b.ls	2a240 <__asan_backtrace_alloc@@Base+0x70>  // b.plast
   2a234:	add	x1, x20, x19
   2a238:	mov	x0, x21
   2a23c:	bl	2a0a4 <__asan_backtrace_release_view@@Base+0x58>
   2a240:	ldr	w0, [x21, #8]
   2a244:	cbz	w0, 2a250 <__asan_backtrace_alloc@@Base+0x80>
   2a248:	add	x0, x21, #0x3c
   2a24c:	stlr	wzr, [x0]
   2a250:	cbz	x20, 2a288 <__asan_backtrace_alloc@@Base+0xb8>
   2a254:	mov	x0, x20
   2a258:	ldp	x19, x20, [sp, #16]
   2a25c:	ldp	x21, x22, [sp, #32]
   2a260:	ldp	x23, x24, [sp, #48]
   2a264:	ldp	x29, x30, [sp], #64
   2a268:	ret
   2a26c:	add	x0, x21, #0x3c
   2a270:	mov	w2, #0x1                   	// #1
   2a274:	ldxr	w1, [x0]
   2a278:	stxr	w3, w2, [x0]
   2a27c:	cbnz	w3, 2a274 <__asan_backtrace_alloc@@Base+0xa4>
   2a280:	dmb	ish
   2a284:	cbz	w1, 2a1fc <__asan_backtrace_alloc@@Base+0x2c>
   2a288:	bl	6a20 <getpagesize@plt>
   2a28c:	sub	x22, x19, #0x1
   2a290:	sxtw	x2, w0
   2a294:	add	x0, x22, w0, sxtw
   2a298:	neg	x22, x2
   2a29c:	mov	x5, #0x0                   	// #0
   2a2a0:	and	x22, x0, x22
   2a2a4:	mov	w4, #0xffffffff            	// #-1
   2a2a8:	mov	x1, x22
   2a2ac:	mov	w3, #0x22                  	// #34
   2a2b0:	mov	w2, #0x3                   	// #3
   2a2b4:	mov	x0, #0x0                   	// #0
   2a2b8:	bl	6770 <mmap@plt>
   2a2bc:	mov	x20, x0
   2a2c0:	cmn	x0, #0x1
   2a2c4:	b.ne	2a2f8 <__asan_backtrace_alloc@@Base+0x128>  // b.any
   2a2c8:	cbz	x23, 2a2e4 <__asan_backtrace_alloc@@Base+0x114>
   2a2cc:	bl	6860 <__errno_location@plt>
   2a2d0:	ldr	w2, [x0]
   2a2d4:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x8bc4>
   2a2d8:	mov	x0, x24
   2a2dc:	add	x1, x1, #0x468
   2a2e0:	blr	x23
   2a2e4:	mov	x20, #0x0                   	// #0
   2a2e8:	b	2a254 <__asan_backtrace_alloc@@Base+0x84>
   2a2ec:	mov	x0, x20
   2a2f0:	mov	x20, x1
   2a2f4:	b	2a204 <__asan_backtrace_alloc@@Base+0x34>
   2a2f8:	add	x19, x19, #0x7
   2a2fc:	and	x19, x19, #0xfffffffffffffff8
   2a300:	cmp	x22, x19
   2a304:	b.ls	2a254 <__asan_backtrace_alloc@@Base+0x84>  // b.plast
   2a308:	add	x1, x0, x19
   2a30c:	mov	x4, x24
   2a310:	mov	x3, x23
   2a314:	sub	x2, x22, x19
   2a318:	mov	x0, x21
   2a31c:	bl	6950 <__asan_backtrace_free@plt>
   2a320:	b	2a254 <__asan_backtrace_alloc@@Base+0x84>

000000000002a324 <__asan_backtrace_vector_grow@@Base>:
   2a324:	stp	x29, x30, [sp, #-80]!
   2a328:	mov	x29, sp
   2a32c:	stp	x23, x24, [sp, #48]
   2a330:	mov	x23, x0
   2a334:	ldr	x0, [x4, #16]
   2a338:	stp	x19, x20, [sp, #16]
   2a33c:	mov	x19, x4
   2a340:	stp	x21, x22, [sp, #32]
   2a344:	cmp	x0, x1
   2a348:	mov	x22, x1
   2a34c:	str	x25, [sp, #64]
   2a350:	b.cs	2a3c4 <__asan_backtrace_vector_grow@@Base+0xa0>  // b.hs, b.nlast
   2a354:	ldr	x0, [x4, #8]
   2a358:	mov	x24, x2
   2a35c:	mov	x25, x3
   2a360:	add	x21, x1, x0
   2a364:	cbnz	x0, 2a3f8 <__asan_backtrace_vector_grow@@Base+0xd4>
   2a368:	lsl	x20, x21, #4
   2a36c:	mov	x3, x25
   2a370:	mov	x2, x24
   2a374:	mov	x1, x20
   2a378:	mov	x0, x23
   2a37c:	bl	6670 <__asan_backtrace_alloc@plt>
   2a380:	mov	x21, x0
   2a384:	cbz	x0, 2a3dc <__asan_backtrace_vector_grow@@Base+0xb8>
   2a388:	ldr	x1, [x19]
   2a38c:	cbz	x1, 2a3b4 <__asan_backtrace_vector_grow@@Base+0x90>
   2a390:	ldr	x2, [x19, #8]
   2a394:	bl	6560 <__asan_internal_memcpy@plt>
   2a398:	ldp	x1, x2, [x19]
   2a39c:	mov	x4, x25
   2a3a0:	ldr	x0, [x19, #16]
   2a3a4:	mov	x3, x24
   2a3a8:	add	x2, x2, x0
   2a3ac:	mov	x0, x23
   2a3b0:	bl	6950 <__asan_backtrace_free@plt>
   2a3b4:	ldr	x0, [x19, #8]
   2a3b8:	str	x21, [x19]
   2a3bc:	sub	x20, x20, x0
   2a3c0:	str	x20, [x19, #16]
   2a3c4:	ldp	x21, x0, [x19]
   2a3c8:	ldr	x1, [x19, #16]
   2a3cc:	add	x21, x21, x0
   2a3d0:	add	x0, x0, x22
   2a3d4:	sub	x22, x1, x22
   2a3d8:	stp	x0, x22, [x19, #8]
   2a3dc:	mov	x0, x21
   2a3e0:	ldp	x19, x20, [sp, #16]
   2a3e4:	ldp	x21, x22, [sp, #32]
   2a3e8:	ldp	x23, x24, [sp, #48]
   2a3ec:	ldr	x25, [sp, #64]
   2a3f0:	ldp	x29, x30, [sp], #80
   2a3f4:	ret
   2a3f8:	bl	6a20 <getpagesize@plt>
   2a3fc:	lsl	x20, x21, #1
   2a400:	sxtw	x1, w0
   2a404:	cmp	x21, w0, sxtw
   2a408:	b.cs	2a418 <__asan_backtrace_vector_grow@@Base+0xf4>  // b.hs, b.nlast
   2a40c:	cmp	x1, x20
   2a410:	csel	x20, x1, x20, ls  // ls = plast
   2a414:	b	2a36c <__asan_backtrace_vector_grow@@Base+0x48>
   2a418:	sub	x20, x20, #0x1
   2a41c:	add	x20, x20, x1
   2a420:	neg	x1, x1
   2a424:	and	x20, x20, x1
   2a428:	b	2a36c <__asan_backtrace_vector_grow@@Base+0x48>

000000000002a42c <__asan_backtrace_vector_finish@@Base>:
   2a42c:	ldp	x0, x2, [x1]
   2a430:	add	x2, x0, x2
   2a434:	stp	x2, xzr, [x1]
   2a438:	ret

000000000002a43c <__asan_backtrace_vector_release@@Base>:
   2a43c:	stp	x29, x30, [sp, #-32]!
   2a440:	mov	x29, sp
   2a444:	ldr	x5, [x1, #8]
   2a448:	str	x19, [sp, #16]
   2a44c:	mov	x19, x1
   2a450:	add	x1, x5, #0x7
   2a454:	and	x1, x1, #0xfffffffffffffff8
   2a458:	ldr	x4, [x19, #16]
   2a45c:	ldr	x6, [x19]
   2a460:	add	x5, x5, x4
   2a464:	mov	x4, x3
   2a468:	mov	x3, x2
   2a46c:	sub	x2, x5, x1
   2a470:	add	x1, x6, x1
   2a474:	bl	6950 <__asan_backtrace_free@plt>
   2a478:	str	xzr, [x19, #16]
   2a47c:	ldr	x0, [x19, #8]
   2a480:	cbnz	x0, 2a488 <__asan_backtrace_vector_release@@Base+0x4c>
   2a484:	str	xzr, [x19]
   2a488:	mov	w0, #0x1                   	// #1
   2a48c:	ldr	x19, [sp, #16]
   2a490:	ldp	x29, x30, [sp], #32
   2a494:	ret
   2a498:	adrp	x2, 4e000 <_Unwind_Backtrace@GCC_3.3>
   2a49c:	mov	x1, #0x0                   	// #0
   2a4a0:	ldr	x2, [x2, #912]
   2a4a4:	b	67c0 <__cxa_atexit@plt>
   2a4a8:	mov	x2, x1
   2a4ac:	mov	w1, w0
   2a4b0:	mov	w0, #0x0                   	// #0
   2a4b4:	b	6410 <__fxstat@plt>
   2a4b8:	mov	x2, x1
   2a4bc:	mov	x1, x0
   2a4c0:	mov	w0, #0x0                   	// #0
   2a4c4:	b	6960 <__lxstat@plt>

Disassembly of section .fini:

000000000002a4c8 <.fini>:
   2a4c8:	stp	x29, x30, [sp, #-16]!
   2a4cc:	mov	x29, sp
   2a4d0:	ldp	x29, x30, [sp], #16
   2a4d4:	ret
