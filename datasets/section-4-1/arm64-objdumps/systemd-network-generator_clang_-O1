
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-network-generator_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000212508 <_start>:
  212508:	mov	x29, #0x0                   	// #0
  21250c:	mov	x30, #0x0                   	// #0
  212510:	mov	x5, x0
  212514:	ldr	x1, [sp]
  212518:	add	x2, sp, #0x8
  21251c:	mov	x6, sp
  212520:	movz	x0, #0x0, lsl #48
  212524:	movk	x0, #0x0, lsl #32
  212528:	movk	x0, #0x21, lsl #16
  21252c:	movk	x0, #0x2658
  212530:	movz	x3, #0x0, lsl #48
  212534:	movk	x3, #0x0, lsl #32
  212538:	movk	x3, #0x21, lsl #16
  21253c:	movk	x3, #0x5a10
  212540:	movz	x4, #0x0, lsl #48
  212544:	movk	x4, #0x0, lsl #32
  212548:	movk	x4, #0x21, lsl #16
  21254c:	movk	x4, #0x5a90
  212550:	bl	215ae0 <__libc_start_main@plt>
  212554:	bl	215af0 <abort@plt>

0000000000212558 <call_weak_fn>:
  212558:	adrp	x0, 226000 <_DYNAMIC+0x120>
  21255c:	ldr	x0, [x0, #176]
  212560:	cbz	x0, 212568 <call_weak_fn+0x10>
  212564:	b	215b00 <__gmon_start__@plt>
  212568:	ret

000000000021256c <deregister_tm_clones>:
  21256c:	adrp	x0, 236000 <string_hash_ops+0xfd28>
  212570:	add	x0, x0, #0x2f8
  212574:	adrp	x1, 236000 <string_hash_ops+0xfd28>
  212578:	add	x1, x1, #0x2f8
  21257c:	cmp	x0, x1
  212580:	b.eq	2125b4 <deregister_tm_clones+0x48>  // b.none
  212584:	stp	x29, x30, [sp, #-32]!
  212588:	mov	x29, sp
  21258c:	adrp	x0, 201000 <parse_argv.options-0x12c0>
  212590:	ldr	x0, [x0, #2392]
  212594:	str	x0, [sp, #24]
  212598:	mov	x1, x0
  21259c:	cbz	x1, 2125ac <deregister_tm_clones+0x40>
  2125a0:	adrp	x0, 236000 <string_hash_ops+0xfd28>
  2125a4:	add	x0, x0, #0x2f8
  2125a8:	blr	x1
  2125ac:	ldp	x29, x30, [sp], #32
  2125b0:	ret
  2125b4:	ret

00000000002125b8 <register_tm_clones>:
  2125b8:	adrp	x0, 236000 <string_hash_ops+0xfd28>
  2125bc:	add	x0, x0, #0x2f8
  2125c0:	adrp	x1, 236000 <string_hash_ops+0xfd28>
  2125c4:	add	x1, x1, #0x2f8
  2125c8:	sub	x0, x0, x1
  2125cc:	lsr	x1, x0, #63
  2125d0:	add	x0, x1, x0, asr #3
  2125d4:	cmp	xzr, x0, asr #1
  2125d8:	b.eq	212610 <register_tm_clones+0x58>  // b.none
  2125dc:	stp	x29, x30, [sp, #-32]!
  2125e0:	mov	x29, sp
  2125e4:	asr	x1, x0, #1
  2125e8:	adrp	x0, 201000 <parse_argv.options-0x12c0>
  2125ec:	ldr	x0, [x0, #2400]
  2125f0:	str	x0, [sp, #24]
  2125f4:	mov	x2, x0
  2125f8:	cbz	x2, 212608 <register_tm_clones+0x50>
  2125fc:	adrp	x0, 236000 <string_hash_ops+0xfd28>
  212600:	add	x0, x0, #0x2f8
  212604:	blr	x2
  212608:	ldp	x29, x30, [sp], #32
  21260c:	ret
  212610:	ret

0000000000212614 <__do_global_dtors_aux>:
  212614:	adrp	x0, 236000 <string_hash_ops+0xfd28>
  212618:	ldrb	w0, [x0, #760]
  21261c:	cbnz	w0, 212640 <__do_global_dtors_aux+0x2c>
  212620:	stp	x29, x30, [sp, #-16]!
  212624:	mov	x29, sp
  212628:	bl	21256c <deregister_tm_clones>
  21262c:	adrp	x0, 236000 <string_hash_ops+0xfd28>
  212630:	mov	w1, #0x1                   	// #1
  212634:	strb	w1, [x0, #760]
  212638:	ldp	x29, x30, [sp], #16
  21263c:	ret
  212640:	ret

0000000000212644 <frame_dummy>:
  212644:	stp	x29, x30, [sp, #-16]!
  212648:	mov	x29, sp
  21264c:	bl	2125b8 <register_tm_clones>
  212650:	ldp	x29, x30, [sp], #16
  212654:	ret

0000000000212658 <main>:
  212658:	stp	x29, x30, [sp, #-32]!
  21265c:	stp	x20, x19, [sp, #16]
  212660:	mov	x29, sp
  212664:	mov	x19, x1
  212668:	mov	w20, w0
  21266c:	bl	2126a4 <save_argc_argv>
  212670:	mov	w0, w20
  212674:	mov	x1, x19
  212678:	bl	2126b8 <run>
  21267c:	mov	w19, w0
  212680:	bl	215b10 <ask_password_agent_close@plt>
  212684:	bl	215b20 <polkit_agent_close@plt>
  212688:	bl	215b30 <pager_close@plt>
  21268c:	bl	215b40 <mac_selinux_finish@plt>
  212690:	bl	212900 <static_destruct>
  212694:	lsr	w0, w19, #31
  212698:	ldp	x20, x19, [sp, #16]
  21269c:	ldp	x29, x30, [sp], #32
  2126a0:	ret

00000000002126a4 <save_argc_argv>:
  2126a4:	adrp	x8, 236000 <string_hash_ops+0xfd28>
  2126a8:	adrp	x9, 236000 <string_hash_ops+0xfd28>
  2126ac:	str	w0, [x8, #776]
  2126b0:	str	x1, [x9, #784]
  2126b4:	ret

00000000002126b8 <run>:
  2126b8:	sub	sp, sp, #0x90
  2126bc:	stp	x29, x30, [sp, #48]
  2126c0:	stp	x28, x27, [sp, #64]
  2126c4:	stp	x26, x25, [sp, #80]
  2126c8:	stp	x24, x23, [sp, #96]
  2126cc:	stp	x22, x21, [sp, #112]
  2126d0:	stp	x20, x19, [sp, #128]
  2126d4:	add	x29, sp, #0x30
  2126d8:	mov	x20, x1
  2126dc:	mov	w19, w0
  2126e0:	stp	xzr, xzr, [sp, #24]
  2126e4:	str	xzr, [sp, #40]
  2126e8:	bl	212960 <parse_argv>
  2126ec:	cmp	w0, #0x1
  2126f0:	b.lt	2128c0 <run+0x208>  // b.tstop
  2126f4:	adrp	x8, 236000 <string_hash_ops+0xfd28>
  2126f8:	ldrsw	x8, [x8, #792]
  2126fc:	cmp	w8, w19
  212700:	b.ge	21281c <run+0x164>  // b.tcont
  212704:	add	x26, x20, x8, lsl #3
  212708:	sub	w27, w19, w8
  21270c:	adrp	x19, 201000 <parse_argv.options-0x12c0>
  212710:	adrp	x20, 201000 <parse_argv.options-0x12c0>
  212714:	adrp	x28, 202000 <parse_argv.options-0x2c0>
  212718:	adrp	x21, 201000 <parse_argv.options-0x12c0>
  21271c:	add	x19, x19, #0xa39
  212720:	add	x20, x20, #0xffa
  212724:	add	x28, x28, #0x1f2
  212728:	add	x21, x21, #0xffe
  21272c:	str	xzr, [sp, #16]
  212730:	ldr	x0, [x26]
  212734:	bl	215b50 <strdup@plt>
  212738:	mov	x23, x0
  21273c:	str	x0, [sp, #16]
  212740:	cbz	x0, 212778 <run+0xc0>
  212744:	mov	w1, #0x3d                  	// #61
  212748:	mov	x0, x23
  21274c:	bl	215b60 <strchr@plt>
  212750:	mov	x24, x0
  212754:	cbz	x0, 21275c <run+0xa4>
  212758:	strb	wzr, [x24], #1
  21275c:	add	x2, sp, #0x18
  212760:	mov	x0, x23
  212764:	mov	x1, x24
  212768:	bl	2130b4 <parse_cmdline_item>
  21276c:	tbnz	w0, #31, 212790 <run+0xd8>
  212770:	mov	w23, #0x1                   	// #1
  212774:	b	212800 <run+0x148>
  212778:	mov	w2, #0xbb                  	// #187
  21277c:	mov	x1, x19
  212780:	mov	x3, x20
  212784:	bl	215b70 <log_oom_internal@plt>
  212788:	mov	w22, w0
  21278c:	b	212800 <run+0x148>
  212790:	mov	w25, w0
  212794:	mov	w0, wzr
  212798:	bl	215b80 <log_get_max_level_realm@plt>
  21279c:	cmp	w0, #0x4
  2127a0:	b.lt	2127f4 <run+0x13c>  // b.tstop
  2127a4:	adrp	x8, 201000 <parse_argv.options-0x12c0>
  2127a8:	cmp	x24, #0x0
  2127ac:	add	x8, x8, #0xe63
  2127b0:	mov	x0, x24
  2127b4:	csel	x22, x28, x8, eq  // eq = none
  2127b8:	bl	212ad0 <strempty>
  2127bc:	mov	x8, x0
  2127c0:	mov	w0, #0x4                   	// #4
  2127c4:	mov	w3, #0xc4                  	// #196
  2127c8:	mov	w1, w25
  2127cc:	mov	x2, x19
  2127d0:	mov	x4, x20
  2127d4:	mov	x5, x21
  2127d8:	mov	x6, x23
  2127dc:	mov	x7, x22
  2127e0:	str	x8, [sp]
  2127e4:	bl	215b90 <log_internal_realm@plt>
  2127e8:	mov	w22, w0
  2127ec:	mov	w23, wzr
  2127f0:	b	212800 <run+0x148>
  2127f4:	mov	w23, wzr
  2127f8:	neg	w8, w25
  2127fc:	sub	w22, w23, w8, uxtb
  212800:	add	x0, sp, #0x10
  212804:	bl	212ab8 <freep>
  212808:	tbz	w23, #0, 2128c4 <run+0x20c>
  21280c:	subs	w27, w27, #0x1
  212810:	add	x26, x26, #0x8
  212814:	b.ne	21272c <run+0x74>  // b.any
  212818:	b	212834 <run+0x17c>
  21281c:	adrp	x0, 213000 <link_save+0x98>
  212820:	add	x0, x0, #0xb4
  212824:	add	x1, sp, #0x18
  212828:	mov	w2, wzr
  21282c:	bl	215ba0 <proc_cmdline_parse@plt>
  212830:	tbnz	w0, #31, 212884 <run+0x1cc>
  212834:	add	x0, sp, #0x18
  212838:	bl	213a80 <context_merge_networks>
  21283c:	tbnz	w0, #31, 21284c <run+0x194>
  212840:	add	x0, sp, #0x18
  212844:	bl	212ae4 <context_save>
  212848:	b	2128c0 <run+0x208>
  21284c:	mov	w19, w0
  212850:	mov	w0, wzr
  212854:	bl	215b80 <log_get_max_level_realm@plt>
  212858:	cmp	w0, #0x4
  21285c:	b.lt	2128f0 <run+0x238>  // b.tstop
  212860:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  212864:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  212868:	adrp	x5, 202000 <parse_argv.options-0x2c0>
  21286c:	add	x2, x2, #0xa39
  212870:	add	x4, x4, #0xffa
  212874:	add	x5, x5, #0x28
  212878:	mov	w0, #0x4                   	// #4
  21287c:	mov	w3, #0xca                  	// #202
  212880:	b	2128b8 <run+0x200>
  212884:	mov	w19, w0
  212888:	mov	w0, wzr
  21288c:	bl	215b80 <log_get_max_level_realm@plt>
  212890:	cmp	w0, #0x4
  212894:	b.lt	2128f0 <run+0x238>  // b.tstop
  212898:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  21289c:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  2128a0:	adrp	x5, 201000 <parse_argv.options-0x12c0>
  2128a4:	add	x2, x2, #0xa39
  2128a8:	add	x4, x4, #0xffa
  2128ac:	add	x5, x5, #0xaae
  2128b0:	mov	w0, #0x4                   	// #4
  2128b4:	mov	w3, #0xb3                  	// #179
  2128b8:	mov	w1, w19
  2128bc:	bl	215b90 <log_internal_realm@plt>
  2128c0:	mov	w22, w0
  2128c4:	add	x0, sp, #0x18
  2128c8:	bl	213d58 <context_clear>
  2128cc:	mov	w0, w22
  2128d0:	ldp	x20, x19, [sp, #128]
  2128d4:	ldp	x22, x21, [sp, #112]
  2128d8:	ldp	x24, x23, [sp, #96]
  2128dc:	ldp	x26, x25, [sp, #80]
  2128e0:	ldp	x28, x27, [sp, #64]
  2128e4:	ldp	x29, x30, [sp, #48]
  2128e8:	add	sp, sp, #0x90
  2128ec:	ret
  2128f0:	mov	w8, wzr
  2128f4:	neg	w9, w19
  2128f8:	sub	w22, w8, w9, uxtb
  2128fc:	b	2128c4 <run+0x20c>

0000000000212900 <static_destruct>:
  212900:	stp	x29, x30, [sp, #-32]!
  212904:	stp	x20, x19, [sp, #16]
  212908:	adrp	x8, 226000 <_DYNAMIC+0x120>
  21290c:	ldr	x8, [x8, #184]
  212910:	mov	x29, sp
  212914:	cbz	x8, 212954 <static_destruct+0x54>
  212918:	adrp	x0, 226000 <_DYNAMIC+0x120>
  21291c:	ldr	x0, [x0, #184]
  212920:	bl	21304c <ALIGN_TO>
  212924:	adrp	x20, 226000 <_DYNAMIC+0x120>
  212928:	ldr	x20, [x20, #192]
  21292c:	cmp	x0, x20
  212930:	b.cs	212954 <static_destruct+0x54>  // b.hs, b.nlast
  212934:	mov	x19, x0
  212938:	ldp	x0, x8, [x19]
  21293c:	blr	x8
  212940:	add	x0, x19, #0x10
  212944:	bl	21304c <ALIGN_TO>
  212948:	mov	x19, x0
  21294c:	cmp	x0, x20
  212950:	b.cc	212938 <static_destruct+0x38>  // b.lo, b.ul, b.last
  212954:	ldp	x20, x19, [sp, #16]
  212958:	ldp	x29, x30, [sp], #32
  21295c:	ret

0000000000212960 <parse_argv>:
  212960:	stp	x29, x30, [sp, #-64]!
  212964:	stp	x24, x23, [sp, #16]
  212968:	stp	x22, x21, [sp, #32]
  21296c:	stp	x20, x19, [sp, #48]
  212970:	mov	x29, sp
  212974:	tbnz	w0, #31, 212a4c <parse_argv+0xec>
  212978:	mov	x19, x1
  21297c:	cbz	x1, 212a70 <parse_argv+0x110>
  212980:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  212984:	adrp	x3, 202000 <parse_argv.options-0x2c0>
  212988:	add	x2, x2, #0x5a
  21298c:	add	x3, x3, #0x2c0
  212990:	mov	x1, x19
  212994:	mov	x4, xzr
  212998:	mov	w20, w0
  21299c:	bl	215bb0 <getopt_long@plt>
  2129a0:	tbnz	w0, #31, 212a10 <parse_argv+0xb0>
  2129a4:	adrp	x21, 202000 <parse_argv.options-0x2c0>
  2129a8:	adrp	x22, 202000 <parse_argv.options-0x2c0>
  2129ac:	adrp	x23, 236000 <string_hash_ops+0xfd28>
  2129b0:	adrp	x24, 236000 <string_hash_ops+0xfd28>
  2129b4:	add	x21, x21, #0x5a
  2129b8:	add	x22, x22, #0x2c0
  2129bc:	cmp	w0, #0xff
  2129c0:	b.le	212a00 <parse_argv+0xa0>
  2129c4:	cmp	w0, #0x100
  2129c8:	b.eq	212a2c <parse_argv+0xcc>  // b.none
  2129cc:	cmp	w0, #0x101
  2129d0:	b.ne	212a94 <parse_argv+0x134>  // b.any
  2129d4:	ldr	x8, [x23, #800]
  2129d8:	mov	w0, w20
  2129dc:	mov	x1, x19
  2129e0:	mov	x2, x21
  2129e4:	mov	x3, x22
  2129e8:	mov	x4, xzr
  2129ec:	str	x8, [x24, #768]
  2129f0:	bl	215bb0 <getopt_long@plt>
  2129f4:	mov	w8, #0x1                   	// #1
  2129f8:	tbz	w0, #31, 2129bc <parse_argv+0x5c>
  2129fc:	b	212a34 <parse_argv+0xd4>
  212a00:	cmp	w0, #0x3f
  212a04:	b.ne	212a18 <parse_argv+0xb8>  // b.any
  212a08:	mov	w8, #0xffffffea            	// #-22
  212a0c:	b	212a34 <parse_argv+0xd4>
  212a10:	mov	w8, #0x1                   	// #1
  212a14:	b	212a34 <parse_argv+0xd4>
  212a18:	cmp	w0, #0x68
  212a1c:	b.ne	212a94 <parse_argv+0x134>  // b.any
  212a20:	bl	212d34 <help>
  212a24:	mov	w8, wzr
  212a28:	b	212a34 <parse_argv+0xd4>
  212a2c:	bl	215bc0 <version@plt>
  212a30:	mov	w8, w0
  212a34:	ldp	x20, x19, [sp, #48]
  212a38:	ldp	x22, x21, [sp, #32]
  212a3c:	ldp	x24, x23, [sp, #16]
  212a40:	mov	w0, w8
  212a44:	ldp	x29, x30, [sp], #64
  212a48:	ret
  212a4c:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212a50:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  212a54:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  212a58:	add	x1, x1, #0xbc4
  212a5c:	add	x2, x2, #0xa39
  212a60:	add	x4, x4, #0x23f
  212a64:	mov	w3, #0x8d                  	// #141
  212a68:	mov	w0, wzr
  212a6c:	bl	215bd0 <log_assert_failed_realm@plt>
  212a70:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212a74:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  212a78:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  212a7c:	add	x1, x1, #0xcae
  212a80:	add	x2, x2, #0xa39
  212a84:	add	x4, x4, #0x23f
  212a88:	mov	w3, #0x8e                  	// #142
  212a8c:	mov	w0, wzr
  212a90:	bl	215bd0 <log_assert_failed_realm@plt>
  212a94:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212a98:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  212a9c:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  212aa0:	add	x1, x1, #0xfae
  212aa4:	add	x2, x2, #0xa39
  212aa8:	add	x4, x4, #0x23f
  212aac:	mov	w3, #0xa2                  	// #162
  212ab0:	mov	w0, wzr
  212ab4:	bl	215be0 <log_assert_failed_unreachable_realm@plt>

0000000000212ab8 <freep>:
  212ab8:	stp	x29, x30, [sp, #-16]!
  212abc:	ldr	x0, [x0]
  212ac0:	mov	x29, sp
  212ac4:	bl	215bf0 <free@plt>
  212ac8:	ldp	x29, x30, [sp], #16
  212acc:	ret

0000000000212ad0 <strempty>:
  212ad0:	adrp	x8, 202000 <parse_argv.options-0x2c0>
  212ad4:	add	x8, x8, #0x1f2
  212ad8:	cmp	x0, #0x0
  212adc:	csel	x0, x8, x0, eq  // eq = none
  212ae0:	ret

0000000000212ae4 <context_save>:
  212ae4:	stp	x29, x30, [sp, #-64]!
  212ae8:	str	x23, [sp, #16]
  212aec:	stp	x22, x21, [sp, #32]
  212af0:	stp	x20, x19, [sp, #48]
  212af4:	mov	x29, sp
  212af8:	sub	sp, sp, #0x20
  212afc:	adrp	x8, 236000 <string_hash_ops+0xfd28>
  212b00:	ldr	x21, [x8, #768]
  212b04:	mov	x19, x0
  212b08:	mov	x0, x21
  212b0c:	bl	212d58 <isempty>
  212b10:	adrp	x22, 201000 <parse_argv.options-0x12c0>
  212b14:	add	x22, x22, #0xd54
  212b18:	mov	x20, x22
  212b1c:	tbnz	w0, #0, 212b8c <context_save+0xa8>
  212b20:	mov	x0, x21
  212b24:	bl	215c00 <strlen@plt>
  212b28:	add	x20, x0, #0x16
  212b2c:	mov	x0, x20
  212b30:	bl	212d74 <size_multiply_overflow>
  212b34:	tbnz	w0, #0, 212d04 <context_save+0x220>
  212b38:	cmp	x20, #0x400, lsl #12
  212b3c:	b.hi	212d10 <context_save+0x22c>  // b.pmore
  212b40:	add	x9, x20, #0xf
  212b44:	mov	x8, sp
  212b48:	and	x9, x9, #0xfffffffffffffff0
  212b4c:	sub	x20, x8, x9
  212b50:	mov	sp, x20
  212b54:	mov	x0, x20
  212b58:	mov	x1, x21
  212b5c:	bl	215c10 <stpcpy@plt>
  212b60:	mov	x8, x0
  212b64:	cmp	x0, x20
  212b68:	b.ls	212b7c <context_save+0x98>  // b.plast
  212b6c:	mov	x0, x8
  212b70:	ldrb	w9, [x0, #-1]!
  212b74:	cmp	w9, #0x2f
  212b78:	b.eq	212b60 <context_save+0x7c>  // b.none
  212b7c:	ldur	x9, [x22, #13]
  212b80:	ldr	q0, [x22]
  212b84:	stur	x9, [x8, #13]
  212b88:	str	q0, [x8]
  212b8c:	mov	w1, #0x1ed                 	// #493
  212b90:	mov	x0, x20
  212b94:	bl	215c20 <mkdir_p@plt>
  212b98:	mov	w21, w0
  212b9c:	tbnz	w0, #31, 212c9c <context_save+0x1b8>
  212ba0:	mov	w22, #0xfffffffe            	// #-2
  212ba4:	stur	w22, [x29, #-32]
  212ba8:	stur	xzr, [x29, #-24]
  212bac:	ldr	x0, [x19]
  212bb0:	sub	x1, x29, #0x20
  212bb4:	add	x2, x29, #0x18
  212bb8:	bl	212d7c <hashmap_iterate>
  212bbc:	tbz	w0, #0, 212bf4 <context_save+0x110>
  212bc0:	mov	w23, #0xffffffff            	// #-1
  212bc4:	ldr	x0, [x29, #24]
  212bc8:	mov	x1, x20
  212bcc:	bl	212d98 <network_save>
  212bd0:	ldr	x8, [x19]
  212bd4:	cmp	w0, #0x0
  212bd8:	ccmp	w21, w23, #0x4, lt  // lt = tstop
  212bdc:	csel	w21, w0, w21, gt
  212be0:	sub	x1, x29, #0x20
  212be4:	add	x2, x29, #0x18
  212be8:	mov	x0, x8
  212bec:	bl	212d7c <hashmap_iterate>
  212bf0:	tbnz	w0, #0, 212bc4 <context_save+0xe0>
  212bf4:	stur	w22, [x29, #-32]
  212bf8:	stur	xzr, [x29, #-24]
  212bfc:	ldr	x0, [x19, #8]
  212c00:	sub	x1, x29, #0x20
  212c04:	sub	x2, x29, #0x8
  212c08:	bl	212d7c <hashmap_iterate>
  212c0c:	tbz	w0, #0, 212c44 <context_save+0x160>
  212c10:	mov	w22, #0xffffffff            	// #-1
  212c14:	ldur	x0, [x29, #-8]
  212c18:	mov	x1, x20
  212c1c:	bl	212e9c <netdev_save>
  212c20:	ldr	x8, [x19, #8]
  212c24:	cmp	w0, #0x0
  212c28:	ccmp	w21, w22, #0x4, lt  // lt = tstop
  212c2c:	csel	w21, w0, w21, gt
  212c30:	sub	x1, x29, #0x20
  212c34:	sub	x2, x29, #0x8
  212c38:	mov	x0, x8
  212c3c:	bl	212d7c <hashmap_iterate>
  212c40:	tbnz	w0, #0, 212c14 <context_save+0x130>
  212c44:	mov	w8, #0xfffffffe            	// #-2
  212c48:	stur	w8, [x29, #-32]
  212c4c:	stur	xzr, [x29, #-24]
  212c50:	ldr	x0, [x19, #16]
  212c54:	sub	x1, x29, #0x20
  212c58:	sub	x2, x29, #0x10
  212c5c:	bl	212d7c <hashmap_iterate>
  212c60:	tbz	w0, #0, 212ce8 <context_save+0x204>
  212c64:	mov	w22, #0xffffffff            	// #-1
  212c68:	ldur	x0, [x29, #-16]
  212c6c:	mov	x1, x20
  212c70:	bl	212f68 <link_save>
  212c74:	ldr	x8, [x19, #16]
  212c78:	cmp	w0, #0x0
  212c7c:	ccmp	w21, w22, #0x4, lt  // lt = tstop
  212c80:	csel	w21, w0, w21, gt
  212c84:	sub	x1, x29, #0x20
  212c88:	sub	x2, x29, #0x10
  212c8c:	mov	x0, x8
  212c90:	bl	212d7c <hashmap_iterate>
  212c94:	tbnz	w0, #0, 212c68 <context_save+0x184>
  212c98:	b	212ce8 <context_save+0x204>
  212c9c:	mov	w0, wzr
  212ca0:	bl	215b80 <log_get_max_level_realm@plt>
  212ca4:	cmp	w0, #0x3
  212ca8:	b.lt	212cdc <context_save+0x1f8>  // b.tstop
  212cac:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  212cb0:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  212cb4:	adrp	x5, 201000 <parse_argv.options-0x12c0>
  212cb8:	add	x2, x2, #0xa39
  212cbc:	add	x4, x4, #0xaeb
  212cc0:	add	x5, x5, #0x968
  212cc4:	mov	w0, #0x3                   	// #3
  212cc8:	mov	w3, #0x5e                  	// #94
  212ccc:	mov	w1, w21
  212cd0:	bl	215b90 <log_internal_realm@plt>
  212cd4:	mov	w21, w0
  212cd8:	b	212ce8 <context_save+0x204>
  212cdc:	mov	w8, wzr
  212ce0:	neg	w9, w21
  212ce4:	sub	w21, w8, w9, uxtb
  212ce8:	mov	w0, w21
  212cec:	mov	sp, x29
  212cf0:	ldp	x20, x19, [sp, #48]
  212cf4:	ldp	x22, x21, [sp, #32]
  212cf8:	ldr	x23, [sp, #16]
  212cfc:	ldp	x29, x30, [sp], #64
  212d00:	ret
  212d04:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212d08:	add	x1, x1, #0xd01
  212d0c:	b	212d18 <context_save+0x234>
  212d10:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212d14:	add	x1, x1, #0xa56
  212d18:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  212d1c:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  212d20:	add	x2, x2, #0xa39
  212d24:	add	x4, x4, #0xb9b
  212d28:	mov	w3, #0x5a                  	// #90
  212d2c:	mov	w0, wzr
  212d30:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000212d34 <help>:
  212d34:	stp	x29, x30, [sp, #-16]!
  212d38:	adrp	x8, 236000 <string_hash_ops+0xfd28>
  212d3c:	ldr	x1, [x8, #808]
  212d40:	adrp	x0, 202000 <parse_argv.options-0x2c0>
  212d44:	add	x0, x0, #0xdf
  212d48:	mov	x29, sp
  212d4c:	bl	215c30 <printf@plt>
  212d50:	ldp	x29, x30, [sp], #16
  212d54:	ret

0000000000212d58 <isempty>:
  212d58:	cbz	x0, 212d6c <isempty+0x14>
  212d5c:	ldrb	w8, [x0]
  212d60:	cmp	w8, #0x0
  212d64:	cset	w0, eq  // eq = none
  212d68:	ret
  212d6c:	mov	w0, #0x1                   	// #1
  212d70:	ret

0000000000212d74 <size_multiply_overflow>:
  212d74:	mov	w0, wzr
  212d78:	ret

0000000000212d7c <hashmap_iterate>:
  212d7c:	stp	x29, x30, [sp, #-16]!
  212d80:	mov	x3, xzr
  212d84:	mov	x29, sp
  212d88:	bl	215c40 <internal_hashmap_iterate@plt>
  212d8c:	and	w0, w0, #0x1
  212d90:	ldp	x29, x30, [sp], #16
  212d94:	ret

0000000000212d98 <network_save>:
  212d98:	sub	sp, sp, #0x40
  212d9c:	stp	x29, x30, [sp, #16]
  212da0:	add	x29, sp, #0x10
  212da4:	str	x21, [sp, #32]
  212da8:	stp	x20, x19, [sp, #48]
  212dac:	str	xzr, [x29, #24]
  212db0:	str	xzr, [sp, #8]
  212db4:	cbz	x0, 212e7c <network_save+0xe4>
  212db8:	ldr	x21, [x0]
  212dbc:	mov	x19, x0
  212dc0:	mov	x20, x1
  212dc4:	mov	x0, x21
  212dc8:	bl	212d58 <isempty>
  212dcc:	adrp	x8, 201000 <parse_argv.options-0x12c0>
  212dd0:	adrp	x9, 202000 <parse_argv.options-0x2c0>
  212dd4:	adrp	x10, 202000 <parse_argv.options-0x2c0>
  212dd8:	add	x8, x8, #0xa75
  212ddc:	add	x9, x9, #0x1b6
  212de0:	tst	w0, #0x1
  212de4:	add	x10, x10, #0x1b9
  212de8:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212dec:	csel	x2, x9, x8, ne  // ne = any
  212df0:	csel	x3, x10, x21, ne  // ne = any
  212df4:	add	x1, x1, #0xf52
  212df8:	add	x0, x29, #0x18
  212dfc:	bl	215c50 <asprintf@plt>
  212e00:	tbnz	w0, #31, 212e34 <network_save+0x9c>
  212e04:	ldr	x2, [x29, #24]
  212e08:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212e0c:	add	x1, x1, #0xf60
  212e10:	add	x3, sp, #0x8
  212e14:	mov	x0, x20
  212e18:	bl	215c60 <generator_open_unit_file@plt>
  212e1c:	tbnz	w0, #31, 212e50 <network_save+0xb8>
  212e20:	ldr	x1, [sp, #8]
  212e24:	mov	x0, x19
  212e28:	bl	213e6c <network_dump>
  212e2c:	mov	w20, wzr
  212e30:	b	212e54 <network_save+0xbc>
  212e34:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212e38:	adrp	x3, 201000 <parse_argv.options-0x12c0>
  212e3c:	add	x1, x1, #0xa39
  212e40:	add	x3, x3, #0x99c
  212e44:	mov	w2, #0x1d                  	// #29
  212e48:	mov	w0, wzr
  212e4c:	bl	215b70 <log_oom_internal@plt>
  212e50:	mov	w20, w0
  212e54:	add	x0, sp, #0x8
  212e58:	bl	213034 <fclosep>
  212e5c:	add	x0, x29, #0x18
  212e60:	bl	212ab8 <freep>
  212e64:	mov	w0, w20
  212e68:	ldp	x20, x19, [sp, #48]
  212e6c:	ldr	x21, [sp, #32]
  212e70:	ldp	x29, x30, [sp, #16]
  212e74:	add	sp, sp, #0x40
  212e78:	ret
  212e7c:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212e80:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  212e84:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  212e88:	add	x1, x1, #0xce4
  212e8c:	add	x2, x2, #0xa39
  212e90:	add	x4, x4, #0xaf8
  212e94:	mov	w3, #0x17                  	// #23
  212e98:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000212e9c <netdev_save>:
  212e9c:	sub	sp, sp, #0x30
  212ea0:	stp	x29, x30, [sp, #16]
  212ea4:	stp	x20, x19, [sp, #32]
  212ea8:	add	x29, sp, #0x10
  212eac:	stp	xzr, xzr, [sp]
  212eb0:	cbz	x0, 212f48 <netdev_save+0xac>
  212eb4:	ldr	x2, [x0]
  212eb8:	mov	x20, x1
  212ebc:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212ec0:	mov	x19, x0
  212ec4:	add	x1, x1, #0x9d1
  212ec8:	add	x0, sp, #0x8
  212ecc:	bl	215c50 <asprintf@plt>
  212ed0:	tbnz	w0, #31, 212f04 <netdev_save+0x68>
  212ed4:	ldr	x2, [sp, #8]
  212ed8:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212edc:	add	x1, x1, #0xf60
  212ee0:	mov	x3, sp
  212ee4:	mov	x0, x20
  212ee8:	bl	215c60 <generator_open_unit_file@plt>
  212eec:	tbnz	w0, #31, 212f20 <netdev_save+0x84>
  212ef0:	ldr	x1, [sp]
  212ef4:	mov	x0, x19
  212ef8:	bl	2142ec <netdev_dump>
  212efc:	mov	w20, wzr
  212f00:	b	212f24 <netdev_save+0x88>
  212f04:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212f08:	adrp	x3, 201000 <parse_argv.options-0x12c0>
  212f0c:	add	x1, x1, #0xa39
  212f10:	add	x3, x3, #0x9fe
  212f14:	mov	w2, #0x32                  	// #50
  212f18:	mov	w0, wzr
  212f1c:	bl	215b70 <log_oom_internal@plt>
  212f20:	mov	w20, w0
  212f24:	mov	x0, sp
  212f28:	bl	213034 <fclosep>
  212f2c:	add	x0, sp, #0x8
  212f30:	bl	212ab8 <freep>
  212f34:	mov	w0, w20
  212f38:	ldp	x20, x19, [sp, #32]
  212f3c:	ldp	x29, x30, [sp, #16]
  212f40:	add	sp, sp, #0x30
  212f44:	ret
  212f48:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212f4c:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  212f50:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  212f54:	add	x1, x1, #0xd2c
  212f58:	add	x2, x2, #0xa39
  212f5c:	add	x4, x4, #0x9a9
  212f60:	mov	w3, #0x2d                  	// #45
  212f64:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000212f68 <link_save>:
  212f68:	sub	sp, sp, #0x30
  212f6c:	stp	x29, x30, [sp, #16]
  212f70:	stp	x20, x19, [sp, #32]
  212f74:	add	x29, sp, #0x10
  212f78:	stp	xzr, xzr, [sp]
  212f7c:	cbz	x0, 213014 <link_save+0xac>
  212f80:	ldr	x2, [x0]
  212f84:	mov	x20, x1
  212f88:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212f8c:	mov	x19, x0
  212f90:	add	x1, x1, #0xb22
  212f94:	add	x0, sp, #0x8
  212f98:	bl	215c50 <asprintf@plt>
  212f9c:	tbnz	w0, #31, 212fd0 <link_save+0x68>
  212fa0:	ldr	x2, [sp, #8]
  212fa4:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212fa8:	add	x1, x1, #0xf60
  212fac:	mov	x3, sp
  212fb0:	mov	x0, x20
  212fb4:	bl	215c60 <generator_open_unit_file@plt>
  212fb8:	tbnz	w0, #31, 212fec <link_save+0x84>
  212fbc:	ldr	x1, [sp]
  212fc0:	mov	x0, x19
  212fc4:	bl	214384 <link_dump>
  212fc8:	mov	w20, wzr
  212fcc:	b	212ff0 <link_save+0x88>
  212fd0:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  212fd4:	adrp	x3, 201000 <parse_argv.options-0x12c0>
  212fd8:	add	x1, x1, #0xa39
  212fdc:	add	x3, x3, #0xe65
  212fe0:	mov	w2, #0x47                  	// #71
  212fe4:	mov	w0, wzr
  212fe8:	bl	215b70 <log_oom_internal@plt>
  212fec:	mov	w20, w0
  212ff0:	mov	x0, sp
  212ff4:	bl	213034 <fclosep>
  212ff8:	add	x0, sp, #0x8
  212ffc:	bl	212ab8 <freep>
  213000:	mov	w0, w20
  213004:	ldp	x20, x19, [sp, #32]
  213008:	ldp	x29, x30, [sp, #16]
  21300c:	add	sp, sp, #0x30
  213010:	ret
  213014:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213018:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  21301c:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  213020:	add	x1, x1, #0xcec
  213024:	add	x2, x2, #0xa39
  213028:	add	x4, x4, #0xfbf
  21302c:	mov	w3, #0x42                  	// #66
  213030:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000213034 <fclosep>:
  213034:	stp	x29, x30, [sp, #-16]!
  213038:	ldr	x0, [x0]
  21303c:	mov	x29, sp
  213040:	bl	215c70 <safe_fclose@plt>
  213044:	ldp	x29, x30, [sp], #16
  213048:	ret

000000000021304c <ALIGN_TO>:
  21304c:	add	x8, x0, #0x7
  213050:	and	x0, x8, #0xfffffffffffffff8
  213054:	ret

0000000000213058 <network_get>:
  213058:	stp	x29, x30, [sp, #-16]!
  21305c:	ldr	x0, [x0]
  213060:	mov	x29, sp
  213064:	bl	213070 <hashmap_get>
  213068:	ldp	x29, x30, [sp], #16
  21306c:	ret

0000000000213070 <hashmap_get>:
  213070:	stp	x29, x30, [sp, #-16]!
  213074:	mov	x29, sp
  213078:	bl	215c80 <internal_hashmap_get@plt>
  21307c:	ldp	x29, x30, [sp], #16
  213080:	ret

0000000000213084 <netdev_get>:
  213084:	stp	x29, x30, [sp, #-16]!
  213088:	ldr	x0, [x0, #8]
  21308c:	mov	x29, sp
  213090:	bl	213070 <hashmap_get>
  213094:	ldp	x29, x30, [sp], #16
  213098:	ret

000000000021309c <link_get>:
  21309c:	stp	x29, x30, [sp, #-16]!
  2130a0:	ldr	x0, [x0, #16]
  2130a4:	mov	x29, sp
  2130a8:	bl	213070 <hashmap_get>
  2130ac:	ldp	x29, x30, [sp], #16
  2130b0:	ret

00000000002130b4 <parse_cmdline_item>:
  2130b4:	stp	x29, x30, [sp, #-48]!
  2130b8:	str	x21, [sp, #16]
  2130bc:	stp	x20, x19, [sp, #32]
  2130c0:	mov	x29, sp
  2130c4:	cbz	x0, 213228 <parse_cmdline_item+0x174>
  2130c8:	mov	x21, x2
  2130cc:	cbz	x2, 213248 <parse_cmdline_item+0x194>
  2130d0:	mov	x19, x1
  2130d4:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2130d8:	add	x1, x1, #0xf74
  2130dc:	mov	x20, x0
  2130e0:	bl	215c90 <strcmp@plt>
  2130e4:	cbz	w0, 21317c <parse_cmdline_item+0xc8>
  2130e8:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  2130ec:	add	x1, x1, #0x97
  2130f0:	mov	x0, x20
  2130f4:	bl	215c90 <strcmp@plt>
  2130f8:	cbz	w0, 213190 <parse_cmdline_item+0xdc>
  2130fc:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213100:	add	x1, x1, #0xbb7
  213104:	mov	x0, x20
  213108:	bl	215c90 <strcmp@plt>
  21310c:	cbz	w0, 2131a4 <parse_cmdline_item+0xf0>
  213110:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  213114:	add	x1, x1, #0xa0
  213118:	mov	x0, x20
  21311c:	bl	215c90 <strcmp@plt>
  213120:	cbz	w0, 2131b8 <parse_cmdline_item+0x104>
  213124:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213128:	add	x1, x1, #0xfe8
  21312c:	mov	x0, x20
  213130:	bl	215c90 <strcmp@plt>
  213134:	cbz	w0, 2131cc <parse_cmdline_item+0x118>
  213138:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  21313c:	add	x1, x1, #0x27c
  213140:	mov	x0, x20
  213144:	bl	215c90 <strcmp@plt>
  213148:	cbz	w0, 2131e0 <parse_cmdline_item+0x12c>
  21314c:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213150:	add	x1, x1, #0xe6f
  213154:	mov	x0, x20
  213158:	bl	215c90 <strcmp@plt>
  21315c:	cbz	w0, 2131f4 <parse_cmdline_item+0x140>
  213160:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213164:	add	x1, x1, #0xa78
  213168:	mov	x0, x20
  21316c:	bl	215c90 <strcmp@plt>
  213170:	cbz	w0, 213208 <parse_cmdline_item+0x154>
  213174:	mov	w0, wzr
  213178:	b	213218 <parse_cmdline_item+0x164>
  21317c:	mov	x0, x21
  213180:	mov	x1, x20
  213184:	mov	x2, x19
  213188:	bl	21326c <parse_cmdline_ip>
  21318c:	b	213218 <parse_cmdline_item+0x164>
  213190:	mov	x0, x21
  213194:	mov	x1, x20
  213198:	mov	x2, x19
  21319c:	bl	213314 <parse_cmdline_rd_route>
  2131a0:	b	213218 <parse_cmdline_item+0x164>
  2131a4:	mov	x0, x21
  2131a8:	mov	x1, x20
  2131ac:	mov	x2, x19
  2131b0:	bl	213554 <parse_cmdline_nameserver>
  2131b4:	b	213218 <parse_cmdline_item+0x164>
  2131b8:	mov	x0, x21
  2131bc:	mov	x1, x20
  2131c0:	mov	x2, x19
  2131c4:	bl	2135a0 <parse_cmdline_rd_peerdns>
  2131c8:	b	213218 <parse_cmdline_item+0x164>
  2131cc:	mov	x0, x21
  2131d0:	mov	x1, x20
  2131d4:	mov	x2, x19
  2131d8:	bl	2135f4 <parse_cmdline_vlan>
  2131dc:	b	213218 <parse_cmdline_item+0x164>
  2131e0:	mov	x0, x21
  2131e4:	mov	x1, x20
  2131e8:	mov	x2, x19
  2131ec:	bl	2136c4 <parse_cmdline_bridge>
  2131f0:	b	213218 <parse_cmdline_item+0x164>
  2131f4:	mov	x0, x21
  2131f8:	mov	x1, x20
  2131fc:	mov	x2, x19
  213200:	bl	21380c <parse_cmdline_bond>
  213204:	b	213218 <parse_cmdline_item+0x164>
  213208:	mov	x0, x21
  21320c:	mov	x1, x20
  213210:	mov	x2, x19
  213214:	bl	2139d0 <parse_cmdline_ifname>
  213218:	ldp	x20, x19, [sp, #32]
  21321c:	ldr	x21, [sp, #16]
  213220:	ldp	x29, x30, [sp], #48
  213224:	ret
  213228:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  21322c:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  213230:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  213234:	add	x1, x1, #0xb2d
  213238:	add	x2, x2, #0x208
  21323c:	add	x4, x4, #0x5c
  213240:	mov	w3, #0x3a4                 	// #932
  213244:	bl	215bd0 <log_assert_failed_realm@plt>
  213248:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  21324c:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  213250:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  213254:	add	x1, x1, #0xfe3
  213258:	add	x2, x2, #0x208
  21325c:	add	x4, x4, #0x5c
  213260:	mov	w3, #0x3a5                 	// #933
  213264:	mov	w0, wzr
  213268:	bl	215bd0 <log_assert_failed_realm@plt>

000000000021326c <parse_cmdline_ip>:
  21326c:	stp	x29, x30, [sp, #-32]!
  213270:	stp	x20, x19, [sp, #16]
  213274:	mov	x20, x0
  213278:	mov	x0, x1
  21327c:	mov	x1, x2
  213280:	mov	x29, sp
  213284:	mov	x19, x2
  213288:	bl	214888 <proc_cmdline_value_missing>
  21328c:	tbz	w0, #0, 213298 <parse_cmdline_ip+0x2c>
  213290:	mov	w0, #0xffffffea            	// #-22
  213294:	b	213308 <parse_cmdline_ip+0x9c>
  213298:	mov	w1, #0x3a                  	// #58
  21329c:	mov	x0, x19
  2132a0:	bl	215b60 <strchr@plt>
  2132a4:	cbz	x0, 2132c8 <parse_cmdline_ip+0x5c>
  2132a8:	ldrb	w8, [x19]
  2132ac:	cmp	w8, #0x5b
  2132b0:	b.ne	2132e0 <parse_cmdline_ip+0x74>  // b.any
  2132b4:	mov	w1, #0xa                   	// #10
  2132b8:	mov	x0, x20
  2132bc:	mov	x2, x19
  2132c0:	bl	214964 <parse_cmdline_ip_address>
  2132c4:	b	213308 <parse_cmdline_ip+0x9c>
  2132c8:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  2132cc:	add	x1, x1, #0x1f2
  2132d0:	mov	x0, x20
  2132d4:	mov	x2, x19
  2132d8:	bl	2148f0 <network_set_dhcp_type>
  2132dc:	b	213308 <parse_cmdline_ip+0x9c>
  2132e0:	mov	w1, #0x2                   	// #2
  2132e4:	mov	x0, x20
  2132e8:	mov	x2, x19
  2132ec:	bl	214964 <parse_cmdline_ip_address>
  2132f0:	tbnz	w0, #31, 2132fc <parse_cmdline_ip+0x90>
  2132f4:	mov	w0, wzr
  2132f8:	b	213308 <parse_cmdline_ip+0x9c>
  2132fc:	mov	x0, x20
  213300:	mov	x1, x19
  213304:	bl	214c20 <parse_cmdline_ip_interface>
  213308:	ldp	x20, x19, [sp, #16]
  21330c:	ldp	x29, x30, [sp], #32
  213310:	ret

0000000000213314 <parse_cmdline_rd_route>:
  213314:	stp	x29, x30, [sp, #-64]!
  213318:	str	x23, [sp, #16]
  21331c:	stp	x22, x21, [sp, #32]
  213320:	stp	x20, x19, [sp, #48]
  213324:	mov	x29, sp
  213328:	sub	sp, sp, #0x40
  21332c:	mov	x19, x0
  213330:	mov	x0, x1
  213334:	mov	x1, x2
  213338:	mov	x20, x2
  21333c:	str	x2, [x29, #24]
  213340:	stp	xzr, xzr, [x29, #-16]
  213344:	stp	xzr, xzr, [x29, #-32]
  213348:	bl	214888 <proc_cmdline_value_missing>
  21334c:	tbz	w0, #0, 21336c <parse_cmdline_rd_route+0x58>
  213350:	mov	w0, #0xffffffea            	// #-22
  213354:	mov	sp, x29
  213358:	ldp	x20, x19, [sp, #48]
  21335c:	ldp	x22, x21, [sp, #32]
  213360:	ldr	x23, [sp, #16]
  213364:	ldp	x29, x30, [sp], #64
  213368:	ret
  21336c:	ldrb	w8, [x20]
  213370:	cmp	w8, #0x5b
  213374:	b.ne	2133e0 <parse_cmdline_rd_route+0xcc>  // b.any
  213378:	mov	w1, #0x5d                  	// #93
  21337c:	mov	x0, x20
  213380:	bl	215b60 <strchr@plt>
  213384:	cbz	x0, 213350 <parse_cmdline_rd_route+0x3c>
  213388:	ldrb	w8, [x0, #1]
  21338c:	mov	x22, x0
  213390:	cmp	w8, #0x3a
  213394:	b.ne	213350 <parse_cmdline_rd_route+0x3c>  // b.any
  213398:	add	x23, x20, #0x1
  21339c:	mvn	x8, x20
  2133a0:	add	x1, x22, x8
  2133a4:	mov	x0, x23
  2133a8:	bl	215ca0 <strnlen@plt>
  2133ac:	add	x8, x0, #0x10
  2133b0:	and	x8, x8, #0xfffffffffffffff0
  2133b4:	mov	x9, sp
  2133b8:	sub	x21, x9, x8
  2133bc:	mov	x2, x0
  2133c0:	mov	sp, x21
  2133c4:	strb	wzr, [x21, x0]
  2133c8:	mov	x0, x21
  2133cc:	mov	x1, x23
  2133d0:	bl	215cb0 <memcpy@plt>
  2133d4:	add	x22, x22, #0x2
  2133d8:	mov	w20, #0xa                   	// #10
  2133dc:	b	213430 <parse_cmdline_rd_route+0x11c>
  2133e0:	mov	w1, #0x3a                  	// #58
  2133e4:	mov	x0, x20
  2133e8:	bl	215b60 <strchr@plt>
  2133ec:	cbz	x0, 213350 <parse_cmdline_rd_route+0x3c>
  2133f0:	mov	x22, x0
  2133f4:	sub	x1, x0, x20
  2133f8:	mov	x0, x20
  2133fc:	bl	215ca0 <strnlen@plt>
  213400:	add	x8, x0, #0x10
  213404:	and	x8, x8, #0xfffffffffffffff0
  213408:	mov	x9, sp
  21340c:	sub	x21, x9, x8
  213410:	mov	x2, x0
  213414:	mov	sp, x21
  213418:	strb	wzr, [x21, x0]
  21341c:	mov	x0, x21
  213420:	mov	x1, x20
  213424:	bl	215cb0 <memcpy@plt>
  213428:	add	x22, x22, #0x1
  21342c:	mov	w20, #0x2                   	// #2
  213430:	sub	x2, x29, #0x10
  213434:	sub	x3, x29, #0x24
  213438:	mov	x0, x21
  21343c:	mov	w1, w20
  213440:	str	x22, [x29, #24]
  213444:	bl	215cc0 <in_addr_prefix_from_string@plt>
  213448:	tbnz	w0, #31, 213354 <parse_cmdline_rd_route+0x40>
  21344c:	mov	w1, #0x3a                  	// #58
  213450:	mov	x0, x22
  213454:	bl	215b60 <strchr@plt>
  213458:	cbnz	x0, 2134f0 <parse_cmdline_rd_route+0x1dc>
  21345c:	ldr	x8, [x29, #24]
  213460:	adrp	x9, 202000 <parse_argv.options-0x2c0>
  213464:	mov	x22, xzr
  213468:	mov	x21, xzr
  21346c:	add	x9, x9, #0x27a
  213470:	sub	x23, x29, #0x38
  213474:	stp	x8, x9, [x29, #-56]
  213478:	ldr	x0, [x23, x22]
  21347c:	cbz	x0, 213494 <parse_cmdline_rd_route+0x180>
  213480:	bl	215c00 <strlen@plt>
  213484:	add	x22, x22, #0x8
  213488:	cmp	x22, #0x10
  21348c:	add	x21, x0, x21
  213490:	b.ne	213478 <parse_cmdline_rd_route+0x164>  // b.any
  213494:	add	x21, x21, #0x1
  213498:	mov	w0, #0x1                   	// #1
  21349c:	mov	x1, x21
  2134a0:	bl	214ed8 <size_multiply_overflow>
  2134a4:	tbnz	w0, #0, 213524 <parse_cmdline_rd_route+0x210>
  2134a8:	cmp	x21, #0x400, lsl #12
  2134ac:	b.hi	213530 <parse_cmdline_rd_route+0x21c>  // b.pmore
  2134b0:	add	x9, x21, #0xf
  2134b4:	mov	x8, sp
  2134b8:	and	x9, x9, #0xfffffffffffffff0
  2134bc:	sub	x21, x8, x9
  2134c0:	mov	sp, x21
  2134c4:	mov	x22, xzr
  2134c8:	sub	x23, x29, #0x38
  2134cc:	mov	x0, x21
  2134d0:	ldr	x1, [x23, x22]
  2134d4:	cbz	x1, 2134e8 <parse_cmdline_rd_route+0x1d4>
  2134d8:	bl	215c10 <stpcpy@plt>
  2134dc:	add	x22, x22, #0x8
  2134e0:	cmp	x22, #0x10
  2134e4:	b.ne	2134d0 <parse_cmdline_rd_route+0x1bc>  // b.any
  2134e8:	strb	wzr, [x0]
  2134ec:	str	x21, [x29, #24]
  2134f0:	add	x1, x29, #0x18
  2134f4:	sub	x2, x29, #0x20
  2134f8:	mov	w0, w20
  2134fc:	bl	214ee8 <parse_ip_address_one>
  213500:	tbnz	w0, #31, 213354 <parse_cmdline_rd_route+0x40>
  213504:	ldr	x1, [x29, #24]
  213508:	ldurb	w3, [x29, #-36]
  21350c:	sub	x4, x29, #0x10
  213510:	sub	x5, x29, #0x20
  213514:	mov	x0, x19
  213518:	mov	w2, w20
  21351c:	bl	2151e0 <network_set_route>
  213520:	b	213354 <parse_cmdline_rd_route+0x40>
  213524:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213528:	add	x1, x1, #0xd01
  21352c:	b	213538 <parse_cmdline_rd_route+0x224>
  213530:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213534:	add	x1, x1, #0xa56
  213538:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  21353c:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  213540:	add	x2, x2, #0x208
  213544:	add	x4, x4, #0xb59
  213548:	mov	w3, #0x2f6                 	// #758
  21354c:	mov	w0, wzr
  213550:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000213554 <parse_cmdline_nameserver>:
  213554:	stp	x29, x30, [sp, #-32]!
  213558:	stp	x20, x19, [sp, #16]
  21355c:	mov	x20, x0
  213560:	mov	x0, x1
  213564:	mov	x1, x2
  213568:	mov	x29, sp
  21356c:	mov	x19, x2
  213570:	bl	214888 <proc_cmdline_value_missing>
  213574:	tbz	w0, #0, 213580 <parse_cmdline_nameserver+0x2c>
  213578:	mov	w0, #0xffffffea            	// #-22
  21357c:	b	213594 <parse_cmdline_nameserver+0x40>
  213580:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  213584:	add	x1, x1, #0x1f2
  213588:	mov	x0, x20
  21358c:	mov	x2, x19
  213590:	bl	215338 <network_set_dns>
  213594:	ldp	x20, x19, [sp, #16]
  213598:	ldp	x29, x30, [sp], #32
  21359c:	ret

00000000002135a0 <parse_cmdline_rd_peerdns>:
  2135a0:	stp	x29, x30, [sp, #-32]!
  2135a4:	stp	x20, x19, [sp, #16]
  2135a8:	mov	x19, x0
  2135ac:	mov	x0, x1
  2135b0:	mov	x1, x2
  2135b4:	mov	x29, sp
  2135b8:	mov	x20, x2
  2135bc:	bl	214888 <proc_cmdline_value_missing>
  2135c0:	tbz	w0, #0, 2135cc <parse_cmdline_rd_peerdns+0x2c>
  2135c4:	mov	w1, #0x1                   	// #1
  2135c8:	b	2135e0 <parse_cmdline_rd_peerdns+0x40>
  2135cc:	mov	x0, x20
  2135d0:	bl	215cd0 <parse_boolean@plt>
  2135d4:	tbnz	w0, #31, 2135e8 <parse_cmdline_rd_peerdns+0x48>
  2135d8:	cmp	w0, #0x0
  2135dc:	cset	w1, ne  // ne = any
  2135e0:	mov	x0, x19
  2135e4:	bl	215504 <network_set_dhcp_use_dns>
  2135e8:	ldp	x20, x19, [sp, #16]
  2135ec:	ldp	x29, x30, [sp], #32
  2135f0:	ret

00000000002135f4 <parse_cmdline_vlan>:
  2135f4:	stp	x29, x30, [sp, #-48]!
  2135f8:	stp	x22, x21, [sp, #16]
  2135fc:	stp	x20, x19, [sp, #32]
  213600:	mov	x29, sp
  213604:	sub	sp, sp, #0x10
  213608:	mov	x19, x0
  21360c:	mov	x0, x1
  213610:	mov	x1, x2
  213614:	mov	x21, x2
  213618:	bl	214888 <proc_cmdline_value_missing>
  21361c:	tbnz	w0, #0, 2136ac <parse_cmdline_vlan+0xb8>
  213620:	mov	w1, #0x3a                  	// #58
  213624:	mov	x0, x21
  213628:	bl	215b60 <strchr@plt>
  21362c:	cbz	x0, 2136ac <parse_cmdline_vlan+0xb8>
  213630:	mov	x20, x0
  213634:	sub	x1, x0, x21
  213638:	mov	x0, x21
  21363c:	bl	215ca0 <strnlen@plt>
  213640:	add	x8, x0, #0x10
  213644:	and	x8, x8, #0xfffffffffffffff0
  213648:	mov	x9, sp
  21364c:	sub	x22, x9, x8
  213650:	mov	x2, x0
  213654:	mov	sp, x22
  213658:	strb	wzr, [x22, x0]
  21365c:	mov	x0, x22
  213660:	mov	x1, x21
  213664:	bl	215cb0 <memcpy@plt>
  213668:	mov	x0, x19
  21366c:	mov	x1, x22
  213670:	bl	213084 <netdev_get>
  213674:	stur	x0, [x29, #-8]
  213678:	cbnz	x0, 213698 <parse_cmdline_vlan+0xa4>
  21367c:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213680:	add	x1, x1, #0xfe8
  213684:	sub	x3, x29, #0x8
  213688:	mov	x0, x19
  21368c:	mov	x2, x22
  213690:	bl	215568 <netdev_new>
  213694:	tbnz	w0, #31, 2136b0 <parse_cmdline_vlan+0xbc>
  213698:	add	x1, x20, #0x1
  21369c:	mov	x0, x19
  2136a0:	mov	x2, x22
  2136a4:	bl	21568c <network_set_vlan>
  2136a8:	b	2136b0 <parse_cmdline_vlan+0xbc>
  2136ac:	mov	w0, #0xffffffea            	// #-22
  2136b0:	mov	sp, x29
  2136b4:	ldp	x20, x19, [sp, #32]
  2136b8:	ldp	x22, x21, [sp, #16]
  2136bc:	ldp	x29, x30, [sp], #48
  2136c0:	ret

00000000002136c4 <parse_cmdline_bridge>:
  2136c4:	stp	x29, x30, [sp, #-64]!
  2136c8:	str	x23, [sp, #16]
  2136cc:	stp	x22, x21, [sp, #32]
  2136d0:	stp	x20, x19, [sp, #48]
  2136d4:	mov	x29, sp
  2136d8:	sub	sp, sp, #0x10
  2136dc:	mov	x19, x0
  2136e0:	mov	x0, x1
  2136e4:	mov	x1, x2
  2136e8:	mov	x21, x2
  2136ec:	bl	214888 <proc_cmdline_value_missing>
  2136f0:	tbnz	w0, #0, 213780 <parse_cmdline_bridge+0xbc>
  2136f4:	mov	w1, #0x3a                  	// #58
  2136f8:	mov	x0, x21
  2136fc:	bl	215b60 <strchr@plt>
  213700:	str	x0, [x29, #24]
  213704:	cbz	x0, 213780 <parse_cmdline_bridge+0xbc>
  213708:	sub	x1, x0, x21
  21370c:	mov	x0, x21
  213710:	bl	215ca0 <strnlen@plt>
  213714:	add	x8, x0, #0x10
  213718:	and	x8, x8, #0xfffffffffffffff0
  21371c:	mov	x9, sp
  213720:	sub	x20, x9, x8
  213724:	mov	x2, x0
  213728:	mov	sp, x20
  21372c:	strb	wzr, [x20, x0]
  213730:	mov	x0, x20
  213734:	mov	x1, x21
  213738:	bl	215cb0 <memcpy@plt>
  21373c:	mov	x0, x19
  213740:	mov	x1, x20
  213744:	bl	213084 <netdev_get>
  213748:	stur	x0, [x29, #-8]
  21374c:	cbnz	x0, 21376c <parse_cmdline_bridge+0xa8>
  213750:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  213754:	add	x1, x1, #0x27c
  213758:	sub	x3, x29, #0x8
  21375c:	mov	x0, x19
  213760:	mov	x2, x20
  213764:	bl	215568 <netdev_new>
  213768:	tbnz	w0, #31, 213804 <parse_cmdline_bridge+0x140>
  21376c:	ldr	x8, [x29, #24]
  213770:	add	x0, x8, #0x1
  213774:	str	x0, [x29, #24]
  213778:	bl	2140cc <isempty>
  21377c:	tbz	w0, #0, 2137a0 <parse_cmdline_bridge+0xdc>
  213780:	mov	w21, #0xffffffea            	// #-22
  213784:	mov	w0, w21
  213788:	mov	sp, x29
  21378c:	ldp	x20, x19, [sp, #48]
  213790:	ldp	x22, x21, [sp, #32]
  213794:	ldr	x23, [sp, #16]
  213798:	ldp	x29, x30, [sp], #64
  21379c:	ret
  2137a0:	adrp	x22, 201000 <parse_argv.options-0x12c0>
  2137a4:	add	x22, x22, #0xcda
  2137a8:	b	2137d8 <parse_cmdline_bridge+0x114>
  2137ac:	ldur	x1, [x29, #-16]
  2137b0:	mov	x0, x19
  2137b4:	mov	x2, x20
  2137b8:	bl	215704 <network_set_bridge>
  2137bc:	mvn	w8, w0
  2137c0:	cmp	w0, #0x0
  2137c4:	lsr	w23, w8, #31
  2137c8:	csel	w21, w0, w21, lt  // lt = tstop
  2137cc:	sub	x0, x29, #0x10
  2137d0:	bl	2145b0 <freep>
  2137d4:	tbz	w23, #0, 213784 <parse_cmdline_bridge+0xc0>
  2137d8:	add	x0, x29, #0x18
  2137dc:	sub	x1, x29, #0x10
  2137e0:	mov	x2, x22
  2137e4:	mov	w3, wzr
  2137e8:	stur	xzr, [x29, #-16]
  2137ec:	bl	215ce0 <extract_first_word@plt>
  2137f0:	cmp	w0, #0x1
  2137f4:	b.ge	2137ac <parse_cmdline_bridge+0xe8>  // b.tcont
  2137f8:	mov	w23, wzr
  2137fc:	mov	w21, w0
  213800:	b	2137cc <parse_cmdline_bridge+0x108>
  213804:	mov	w21, w0
  213808:	b	213784 <parse_cmdline_bridge+0xc0>

000000000021380c <parse_cmdline_bond>:
  21380c:	stp	x29, x30, [sp, #-64]!
  213810:	stp	x24, x23, [sp, #16]
  213814:	stp	x22, x21, [sp, #32]
  213818:	stp	x20, x19, [sp, #48]
  21381c:	mov	x29, sp
  213820:	sub	sp, sp, #0x20
  213824:	mov	x19, x0
  213828:	mov	x0, x1
  21382c:	mov	x1, x2
  213830:	mov	x22, x2
  213834:	bl	214888 <proc_cmdline_value_missing>
  213838:	tbnz	w0, #0, 213910 <parse_cmdline_bond+0x104>
  21383c:	mov	w1, #0x3a                  	// #58
  213840:	mov	x0, x22
  213844:	bl	215b60 <strchr@plt>
  213848:	cbz	x0, 213910 <parse_cmdline_bond+0x104>
  21384c:	mov	x21, x0
  213850:	sub	x1, x0, x22
  213854:	mov	x0, x22
  213858:	bl	215ca0 <strnlen@plt>
  21385c:	add	x8, x0, #0x10
  213860:	and	x8, x8, #0xfffffffffffffff0
  213864:	mov	x9, sp
  213868:	sub	x20, x9, x8
  21386c:	mov	x2, x0
  213870:	mov	sp, x20
  213874:	strb	wzr, [x20, x0]
  213878:	mov	x0, x20
  21387c:	mov	x1, x22
  213880:	bl	215cb0 <memcpy@plt>
  213884:	mov	x0, x19
  213888:	mov	x1, x20
  21388c:	bl	213084 <netdev_get>
  213890:	stur	x0, [x29, #-8]
  213894:	cbnz	x0, 2138b4 <parse_cmdline_bond+0xa8>
  213898:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  21389c:	add	x1, x1, #0xe6f
  2138a0:	sub	x3, x29, #0x8
  2138a4:	mov	x0, x19
  2138a8:	mov	x2, x20
  2138ac:	bl	215568 <netdev_new>
  2138b0:	tbnz	w0, #31, 213914 <parse_cmdline_bond+0x108>
  2138b4:	add	x22, x21, #0x1
  2138b8:	mov	w1, #0x3a                  	// #58
  2138bc:	mov	x0, x22
  2138c0:	bl	215b60 <strchr@plt>
  2138c4:	mov	x21, x0
  2138c8:	cbz	x0, 213904 <parse_cmdline_bond+0xf8>
  2138cc:	sub	x1, x21, x22
  2138d0:	mov	x0, x22
  2138d4:	bl	215ca0 <strnlen@plt>
  2138d8:	add	x8, x0, #0x10
  2138dc:	and	x8, x8, #0xfffffffffffffff0
  2138e0:	mov	x9, sp
  2138e4:	sub	x23, x9, x8
  2138e8:	mov	x2, x0
  2138ec:	mov	sp, x23
  2138f0:	strb	wzr, [x23, x0]
  2138f4:	mov	x0, x23
  2138f8:	mov	x1, x22
  2138fc:	bl	215cb0 <memcpy@plt>
  213900:	mov	x22, x23
  213904:	mov	x0, x22
  213908:	bl	2140cc <isempty>
  21390c:	tbz	w0, #0, 21392c <parse_cmdline_bond+0x120>
  213910:	mov	w0, #0xffffffea            	// #-22
  213914:	mov	sp, x29
  213918:	ldp	x20, x19, [sp, #48]
  21391c:	ldp	x22, x21, [sp, #32]
  213920:	ldp	x24, x23, [sp, #16]
  213924:	ldp	x29, x30, [sp], #64
  213928:	ret
  21392c:	stur	x22, [x29, #-16]
  213930:	adrp	x22, 201000 <parse_argv.options-0x12c0>
  213934:	add	x22, x22, #0xcda
  213938:	b	21394c <parse_cmdline_bond+0x140>
  21393c:	mov	w24, #0x2                   	// #2
  213940:	sub	x0, x29, #0x18
  213944:	bl	2145b0 <freep>
  213948:	cbnz	w24, 213998 <parse_cmdline_bond+0x18c>
  21394c:	sub	x0, x29, #0x10
  213950:	sub	x1, x29, #0x18
  213954:	mov	x2, x22
  213958:	mov	w3, wzr
  21395c:	stur	xzr, [x29, #-24]
  213960:	bl	215ce0 <extract_first_word@plt>
  213964:	cbz	w0, 21393c <parse_cmdline_bond+0x130>
  213968:	tbnz	w0, #31, 21398c <parse_cmdline_bond+0x180>
  21396c:	ldur	x1, [x29, #-24]
  213970:	mov	x0, x19
  213974:	mov	x2, x20
  213978:	bl	215760 <network_set_bond>
  21397c:	cmp	w0, #0x0
  213980:	lsr	w24, w0, #31
  213984:	csel	w23, w0, w23, lt  // lt = tstop
  213988:	b	213940 <parse_cmdline_bond+0x134>
  21398c:	mov	w24, #0x1                   	// #1
  213990:	mov	w23, w0
  213994:	b	213940 <parse_cmdline_bond+0x134>
  213998:	cmp	w24, #0x2
  21399c:	csel	w0, w23, wzr, ne  // ne = any
  2139a0:	b.ne	213914 <parse_cmdline_bond+0x108>  // b.any
  2139a4:	cbz	x21, 213914 <parse_cmdline_bond+0x108>
  2139a8:	add	x0, x21, #0x1
  2139ac:	mov	w1, #0x3a                  	// #58
  2139b0:	bl	215b60 <strchr@plt>
  2139b4:	cbz	x0, 213914 <parse_cmdline_bond+0x108>
  2139b8:	ldur	x8, [x29, #-8]
  2139bc:	add	x1, x0, #0x1
  2139c0:	mov	w0, wzr
  2139c4:	add	x2, x8, #0x10
  2139c8:	bl	215cf0 <parse_mtu@plt>
  2139cc:	b	213914 <parse_cmdline_bond+0x108>

00000000002139d0 <parse_cmdline_ifname>:
  2139d0:	stp	x29, x30, [sp, #-48]!
  2139d4:	stp	x22, x21, [sp, #16]
  2139d8:	stp	x20, x19, [sp, #32]
  2139dc:	mov	x29, sp
  2139e0:	sub	sp, sp, #0x10
  2139e4:	mov	x19, x0
  2139e8:	mov	x0, x1
  2139ec:	mov	x1, x2
  2139f0:	mov	x20, x2
  2139f4:	bl	214888 <proc_cmdline_value_missing>
  2139f8:	tbnz	w0, #0, 213a68 <parse_cmdline_ifname+0x98>
  2139fc:	mov	w1, #0x3a                  	// #58
  213a00:	mov	x0, x20
  213a04:	bl	215b60 <strchr@plt>
  213a08:	cbz	x0, 213a68 <parse_cmdline_ifname+0x98>
  213a0c:	mov	x22, x0
  213a10:	sub	x1, x0, x20
  213a14:	mov	x0, x20
  213a18:	bl	215ca0 <strnlen@plt>
  213a1c:	add	x8, x0, #0x10
  213a20:	and	x8, x8, #0xfffffffffffffff0
  213a24:	mov	x9, sp
  213a28:	sub	x21, x9, x8
  213a2c:	mov	x2, x0
  213a30:	mov	sp, x21
  213a34:	strb	wzr, [x21, x0]
  213a38:	mov	x0, x21
  213a3c:	mov	x1, x20
  213a40:	bl	215cb0 <memcpy@plt>
  213a44:	add	x0, x22, #0x1
  213a48:	sub	x1, x29, #0x8
  213a4c:	bl	215d00 <ether_addr_from_string@plt>
  213a50:	tbnz	w0, #31, 213a6c <parse_cmdline_ifname+0x9c>
  213a54:	sub	x2, x29, #0x8
  213a58:	mov	x0, x19
  213a5c:	mov	x1, x21
  213a60:	bl	2157bc <link_new>
  213a64:	b	213a6c <parse_cmdline_ifname+0x9c>
  213a68:	mov	w0, #0xffffffea            	// #-22
  213a6c:	mov	sp, x29
  213a70:	ldp	x20, x19, [sp, #32]
  213a74:	ldp	x22, x21, [sp, #16]
  213a78:	ldp	x29, x30, [sp], #48
  213a7c:	ret

0000000000213a80 <context_merge_networks>:
  213a80:	sub	sp, sp, #0x40
  213a84:	stp	x29, x30, [sp, #16]
  213a88:	str	x21, [sp, #32]
  213a8c:	stp	x20, x19, [sp, #48]
  213a90:	add	x29, sp, #0x10
  213a94:	cbz	x0, 213b68 <context_merge_networks+0xe8>
  213a98:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  213a9c:	add	x1, x1, #0x1f2
  213aa0:	mov	x20, x0
  213aa4:	bl	213058 <network_get>
  213aa8:	cbz	x0, 213b54 <context_merge_networks+0xd4>
  213aac:	mov	x19, x0
  213ab0:	ldr	x0, [x20]
  213ab4:	bl	213bac <hashmap_size>
  213ab8:	cmp	w0, #0x2
  213abc:	b.cc	213b50 <context_merge_networks+0xd0>  // b.lo, b.ul, b.last
  213ac0:	mov	w8, #0xfffffffe            	// #-2
  213ac4:	str	w8, [sp]
  213ac8:	str	xzr, [sp, #8]
  213acc:	ldr	x0, [x20]
  213ad0:	mov	x1, sp
  213ad4:	add	x2, x29, #0x18
  213ad8:	bl	213bc0 <hashmap_iterate>
  213adc:	tbz	w0, #0, 213b38 <context_merge_networks+0xb8>
  213ae0:	ldr	x8, [x29, #24]
  213ae4:	cmp	x8, x19
  213ae8:	b.eq	213acc <context_merge_networks+0x4c>  // b.none
  213aec:	ldr	w9, [x19, #64]
  213af0:	add	x0, x8, #0x18
  213af4:	mov	w2, wzr
  213af8:	str	w9, [x8, #64]
  213afc:	ldr	x1, [x19, #24]
  213b00:	bl	215d10 <strv_extend_strv@plt>
  213b04:	tbnz	w0, #31, 213b54 <context_merge_networks+0xd4>
  213b08:	ldr	x21, [x19, #80]
  213b0c:	cbz	x21, 213acc <context_merge_networks+0x4c>
  213b10:	ldr	x0, [x29, #24]
  213b14:	ldr	w1, [x21, #44]
  213b18:	ldrb	w2, [x21, #40]
  213b1c:	add	x3, x21, #0x8
  213b20:	add	x4, x21, #0x18
  213b24:	bl	213bdc <route_new>
  213b28:	tbnz	w0, #31, 213b54 <context_merge_networks+0xd4>
  213b2c:	ldr	x21, [x21, #48]
  213b30:	cbnz	x21, 213b10 <context_merge_networks+0x90>
  213b34:	b	213acc <context_merge_networks+0x4c>
  213b38:	ldr	x0, [x20]
  213b3c:	bl	213cc0 <hashmap_remove>
  213b40:	cmp	x0, x19
  213b44:	b.ne	213b88 <context_merge_networks+0x108>  // b.any
  213b48:	mov	x0, x19
  213b4c:	bl	213cdc <network_free>
  213b50:	mov	w0, wzr
  213b54:	ldp	x20, x19, [sp, #48]
  213b58:	ldr	x21, [sp, #32]
  213b5c:	ldp	x29, x30, [sp, #16]
  213b60:	add	sp, sp, #0x40
  213b64:	ret
  213b68:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213b6c:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  213b70:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  213b74:	add	x1, x1, #0xa9d
  213b78:	add	x2, x2, #0x208
  213b7c:	add	x4, x4, #0x1cc
  213b80:	mov	w3, #0x3c1                 	// #961
  213b84:	bl	215bd0 <log_assert_failed_realm@plt>
  213b88:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213b8c:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  213b90:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  213b94:	add	x1, x1, #0xc3d
  213b98:	add	x2, x2, #0x208
  213b9c:	add	x4, x4, #0x1cc
  213ba0:	mov	w3, #0x3e0                 	// #992
  213ba4:	mov	w0, wzr
  213ba8:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000213bac <hashmap_size>:
  213bac:	stp	x29, x30, [sp, #-16]!
  213bb0:	mov	x29, sp
  213bb4:	bl	215d20 <internal_hashmap_size@plt>
  213bb8:	ldp	x29, x30, [sp], #16
  213bbc:	ret

0000000000213bc0 <hashmap_iterate>:
  213bc0:	stp	x29, x30, [sp, #-16]!
  213bc4:	mov	x3, xzr
  213bc8:	mov	x29, sp
  213bcc:	bl	215c40 <internal_hashmap_iterate@plt>
  213bd0:	and	w0, w0, #0x1
  213bd4:	ldp	x29, x30, [sp], #16
  213bd8:	ret

0000000000213bdc <route_new>:
  213bdc:	sub	sp, sp, #0x50
  213be0:	stp	x29, x30, [sp, #16]
  213be4:	str	x23, [sp, #32]
  213be8:	stp	x22, x21, [sp, #48]
  213bec:	stp	x20, x19, [sp, #64]
  213bf0:	add	x29, sp, #0x10
  213bf4:	cbz	x0, 213ca0 <route_new+0xc4>
  213bf8:	mov	x19, x0
  213bfc:	mov	w0, #0x40                  	// #64
  213c00:	mov	x20, x4
  213c04:	mov	x23, x3
  213c08:	mov	w22, w2
  213c0c:	mov	w21, w1
  213c10:	bl	214e9c <malloc_multiply>
  213c14:	cbz	x0, 213c28 <route_new+0x4c>
  213c18:	cbz	x23, 213c30 <route_new+0x54>
  213c1c:	ldr	q0, [x23]
  213c20:	str	q0, [sp]
  213c24:	b	213c34 <route_new+0x58>
  213c28:	mov	w8, #0xfffffff4            	// #-12
  213c2c:	b	213c84 <route_new+0xa8>
  213c30:	stp	xzr, xzr, [sp]
  213c34:	ldr	q0, [sp]
  213c38:	str	xzr, [x0]
  213c3c:	ldrh	w8, [x29, #28]
  213c40:	ldrb	w9, [x29, #30]
  213c44:	stur	q0, [x0, #8]
  213c48:	ldr	q0, [x20]
  213c4c:	strb	w22, [x0, #40]
  213c50:	strb	w9, [x0, #43]
  213c54:	sturh	w8, [x0, #41]
  213c58:	str	w21, [x0, #44]
  213c5c:	stur	q0, [x0, #24]
  213c60:	stp	xzr, xzr, [x0, #48]
  213c64:	ldr	x8, [x19, #80]
  213c68:	str	x8, [x0, #48]
  213c6c:	cbz	x8, 213c74 <route_new+0x98>
  213c70:	str	x0, [x8, #56]
  213c74:	mov	w8, wzr
  213c78:	str	xzr, [x0, #56]
  213c7c:	str	x0, [x19, #80]
  213c80:	str	x19, [x0]
  213c84:	ldp	x20, x19, [sp, #64]
  213c88:	ldp	x22, x21, [sp, #48]
  213c8c:	ldr	x23, [sp, #32]
  213c90:	ldp	x29, x30, [sp, #16]
  213c94:	mov	w0, w8
  213c98:	add	sp, sp, #0x50
  213c9c:	ret
  213ca0:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213ca4:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  213ca8:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  213cac:	add	x1, x1, #0xce4
  213cb0:	add	x2, x2, #0x208
  213cb4:	add	x4, x4, #0xdad
  213cb8:	mov	w3, #0x7a                  	// #122
  213cbc:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000213cc0 <hashmap_remove>:
  213cc0:	stp	x29, x30, [sp, #-16]!
  213cc4:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  213cc8:	add	x1, x1, #0x1f2
  213ccc:	mov	x29, sp
  213cd0:	bl	215d30 <internal_hashmap_remove@plt>
  213cd4:	ldp	x29, x30, [sp], #16
  213cd8:	ret

0000000000213cdc <network_free>:
  213cdc:	cbz	x0, 213d54 <network_free+0x78>
  213ce0:	stp	x29, x30, [sp, #-32]!
  213ce4:	str	x19, [sp, #16]
  213ce8:	mov	x19, x0
  213cec:	ldr	x0, [x0]
  213cf0:	mov	x29, sp
  213cf4:	bl	215bf0 <free@plt>
  213cf8:	ldr	x0, [x19, #56]
  213cfc:	bl	215bf0 <free@plt>
  213d00:	ldr	x0, [x19, #24]
  213d04:	bl	215d40 <strv_free@plt>
  213d08:	ldr	x0, [x19, #32]
  213d0c:	bl	215bf0 <free@plt>
  213d10:	ldr	x0, [x19, #40]
  213d14:	bl	215bf0 <free@plt>
  213d18:	ldr	x0, [x19, #48]
  213d1c:	bl	215bf0 <free@plt>
  213d20:	ldr	x0, [x19, #72]
  213d24:	cbz	x0, 213d3c <network_free+0x60>
  213d28:	bl	2158e0 <address_free>
  213d2c:	ldr	x0, [x19, #72]
  213d30:	cbnz	x0, 213d28 <network_free+0x4c>
  213d34:	b	213d3c <network_free+0x60>
  213d38:	bl	215960 <route_free>
  213d3c:	ldr	x0, [x19, #80]
  213d40:	cbnz	x0, 213d38 <network_free+0x5c>
  213d44:	mov	x0, x19
  213d48:	bl	2159e0 <mfree>
  213d4c:	ldr	x19, [sp, #16]
  213d50:	ldp	x29, x30, [sp], #32
  213d54:	ret

0000000000213d58 <context_clear>:
  213d58:	cbz	x0, 213dc8 <context_clear+0x70>
  213d5c:	stp	x29, x30, [sp, #-32]!
  213d60:	str	x19, [sp, #16]
  213d64:	mov	x29, sp
  213d68:	mov	x19, x0
  213d6c:	ldr	x0, [x19]
  213d70:	bl	213dcc <hashmap_steal_first>
  213d74:	cbz	x0, 213d80 <context_clear+0x28>
  213d78:	bl	213cdc <network_free>
  213d7c:	b	213d6c <context_clear+0x14>
  213d80:	ldr	x0, [x19]
  213d84:	bl	213de8 <hashmap_free>
  213d88:	ldr	x0, [x19, #8]
  213d8c:	bl	213dcc <hashmap_steal_first>
  213d90:	cbz	x0, 213d9c <context_clear+0x44>
  213d94:	bl	213e04 <netdev_free>
  213d98:	b	213d88 <context_clear+0x30>
  213d9c:	ldr	x0, [x19, #8]
  213da0:	bl	213de8 <hashmap_free>
  213da4:	ldr	x0, [x19, #16]
  213da8:	bl	213dcc <hashmap_steal_first>
  213dac:	cbz	x0, 213db8 <context_clear+0x60>
  213db0:	bl	213e3c <link_free>
  213db4:	b	213da4 <context_clear+0x4c>
  213db8:	ldr	x0, [x19, #16]
  213dbc:	bl	213de8 <hashmap_free>
  213dc0:	ldr	x19, [sp, #16]
  213dc4:	ldp	x29, x30, [sp], #32
  213dc8:	ret

0000000000213dcc <hashmap_steal_first>:
  213dcc:	stp	x29, x30, [sp, #-16]!
  213dd0:	mov	w1, #0x1                   	// #1
  213dd4:	mov	x2, xzr
  213dd8:	mov	x29, sp
  213ddc:	bl	215d50 <internal_hashmap_first_key_and_value@plt>
  213de0:	ldp	x29, x30, [sp], #16
  213de4:	ret

0000000000213de8 <hashmap_free>:
  213de8:	stp	x29, x30, [sp, #-16]!
  213dec:	mov	x1, xzr
  213df0:	mov	x2, xzr
  213df4:	mov	x29, sp
  213df8:	bl	215d60 <internal_hashmap_free@plt>
  213dfc:	ldp	x29, x30, [sp], #16
  213e00:	ret

0000000000213e04 <netdev_free>:
  213e04:	cbz	x0, 213e38 <netdev_free+0x34>
  213e08:	stp	x29, x30, [sp, #-32]!
  213e0c:	str	x19, [sp, #16]
  213e10:	mov	x19, x0
  213e14:	ldr	x0, [x0]
  213e18:	mov	x29, sp
  213e1c:	bl	215bf0 <free@plt>
  213e20:	ldr	x0, [x19, #8]
  213e24:	bl	215bf0 <free@plt>
  213e28:	mov	x0, x19
  213e2c:	bl	2159e0 <mfree>
  213e30:	ldr	x19, [sp, #16]
  213e34:	ldp	x29, x30, [sp], #32
  213e38:	ret

0000000000213e3c <link_free>:
  213e3c:	cbz	x0, 213e68 <link_free+0x2c>
  213e40:	stp	x29, x30, [sp, #-32]!
  213e44:	str	x19, [sp, #16]
  213e48:	mov	x19, x0
  213e4c:	ldr	x0, [x0]
  213e50:	mov	x29, sp
  213e54:	bl	215bf0 <free@plt>
  213e58:	mov	x0, x19
  213e5c:	bl	2159e0 <mfree>
  213e60:	ldr	x19, [sp, #16]
  213e64:	ldp	x29, x30, [sp], #32
  213e68:	ret

0000000000213e6c <network_dump>:
  213e6c:	sub	sp, sp, #0x50
  213e70:	stp	x29, x30, [sp, #32]
  213e74:	stp	x22, x21, [sp, #48]
  213e78:	stp	x20, x19, [sp, #64]
  213e7c:	add	x29, sp, #0x20
  213e80:	cbz	x0, 214088 <network_dump+0x21c>
  213e84:	mov	x19, x1
  213e88:	cbz	x1, 2140a8 <network_dump+0x23c>
  213e8c:	mov	x21, x0
  213e90:	ldr	x22, [x21], #8
  213e94:	mov	x20, x0
  213e98:	mov	x0, x22
  213e9c:	bl	2140cc <isempty>
  213ea0:	adrp	x8, 201000 <parse_argv.options-0x12c0>
  213ea4:	add	x8, x8, #0xc72
  213ea8:	tst	w0, #0x1
  213eac:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213eb0:	csel	x2, x8, x22, ne  // ne = any
  213eb4:	add	x1, x1, #0xa0a
  213eb8:	mov	x0, x19
  213ebc:	bl	215d70 <fprintf@plt>
  213ec0:	adrp	x0, 201000 <parse_argv.options-0x12c0>
  213ec4:	add	x0, x0, #0xf77
  213ec8:	mov	w1, #0x8                   	// #8
  213ecc:	mov	w2, #0x1                   	// #1
  213ed0:	mov	x3, x19
  213ed4:	bl	215d80 <fwrite@plt>
  213ed8:	mov	x0, x21
  213edc:	bl	2140e8 <ether_addr_is_null>
  213ee0:	tbnz	w0, #0, 213f04 <network_dump+0x98>
  213ee4:	add	x1, sp, #0xc
  213ee8:	mov	x0, x21
  213eec:	bl	215d90 <ether_addr_to_string@plt>
  213ef0:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213ef4:	mov	x2, x0
  213ef8:	add	x1, x1, #0xf80
  213efc:	mov	x0, x19
  213f00:	bl	215d70 <fprintf@plt>
  213f04:	ldr	w2, [x20, #16]
  213f08:	cbz	w2, 213f1c <network_dump+0xb0>
  213f0c:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213f10:	add	x1, x1, #0xcb3
  213f14:	mov	x0, x19
  213f18:	bl	215d70 <fprintf@plt>
  213f1c:	adrp	x0, 202000 <parse_argv.options-0x2c0>
  213f20:	add	x0, x0, #0xab
  213f24:	mov	w1, #0xb                   	// #11
  213f28:	mov	w2, #0x1                   	// #1
  213f2c:	mov	x3, x19
  213f30:	bl	215d80 <fwrite@plt>
  213f34:	ldr	w0, [x20, #20]
  213f38:	bl	214114 <networkd_dhcp_type_to_string>
  213f3c:	cbz	x0, 213f54 <network_dump+0xe8>
  213f40:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  213f44:	mov	x2, x0
  213f48:	add	x1, x1, #0x1f3
  213f4c:	mov	x0, x19
  213f50:	bl	215d70 <fprintf@plt>
  213f54:	ldr	x21, [x20, #24]
  213f58:	mov	x0, x21
  213f5c:	bl	214134 <strv_isempty>
  213f60:	tbnz	w0, #0, 213f90 <network_dump+0x124>
  213f64:	cbz	x21, 213f90 <network_dump+0x124>
  213f68:	ldr	x2, [x21]
  213f6c:	cbz	x2, 213f90 <network_dump+0x124>
  213f70:	add	x22, x21, #0x8
  213f74:	adrp	x21, 202000 <parse_argv.options-0x2c0>
  213f78:	add	x21, x21, #0x267
  213f7c:	mov	x0, x19
  213f80:	mov	x1, x21
  213f84:	bl	215d70 <fprintf@plt>
  213f88:	ldr	x2, [x22], #8
  213f8c:	cbnz	x2, 213f7c <network_dump+0x110>
  213f90:	ldr	x2, [x20, #32]
  213f94:	cbz	x2, 213fa8 <network_dump+0x13c>
  213f98:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213f9c:	add	x1, x1, #0x9de
  213fa0:	mov	x0, x19
  213fa4:	bl	215d70 <fprintf@plt>
  213fa8:	ldr	x2, [x20, #40]
  213fac:	cbz	x2, 213fc0 <network_dump+0x154>
  213fb0:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  213fb4:	add	x1, x1, #0x25c
  213fb8:	mov	x0, x19
  213fbc:	bl	215d70 <fprintf@plt>
  213fc0:	ldr	x2, [x20, #48]
  213fc4:	cbz	x2, 213fd8 <network_dump+0x16c>
  213fc8:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  213fcc:	add	x1, x1, #0xaa5
  213fd0:	mov	x0, x19
  213fd4:	bl	215d70 <fprintf@plt>
  213fd8:	adrp	x0, 201000 <parse_argv.options-0x12c0>
  213fdc:	add	x0, x0, #0xa7f
  213fe0:	mov	w1, #0x8                   	// #8
  213fe4:	mov	w2, #0x1                   	// #1
  213fe8:	mov	x3, x19
  213fec:	bl	215d80 <fwrite@plt>
  213ff0:	ldr	x21, [x20, #56]
  213ff4:	mov	x0, x21
  213ff8:	bl	2140cc <isempty>
  213ffc:	tbnz	w0, #0, 214014 <network_dump+0x1a8>
  214000:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  214004:	add	x1, x1, #0x232
  214008:	mov	x0, x19
  21400c:	mov	x2, x21
  214010:	bl	215d70 <fprintf@plt>
  214014:	ldr	w8, [x20, #64]
  214018:	tbnz	w8, #31, 21403c <network_dump+0x1d0>
  21401c:	cmp	w8, #0x0
  214020:	cset	w0, ne  // ne = any
  214024:	bl	214150 <yes_no>
  214028:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  21402c:	mov	x2, x0
  214030:	add	x1, x1, #0x26f
  214034:	mov	x0, x19
  214038:	bl	215d70 <fprintf@plt>
  21403c:	ldr	x21, [x20, #72]
  214040:	cbz	x21, 214058 <network_dump+0x1ec>
  214044:	mov	x0, x21
  214048:	mov	x1, x19
  21404c:	bl	21416c <address_dump>
  214050:	ldr	x21, [x21, #48]
  214054:	cbnz	x21, 214044 <network_dump+0x1d8>
  214058:	ldr	x20, [x20, #80]
  21405c:	cbz	x20, 214074 <network_dump+0x208>
  214060:	mov	x0, x20
  214064:	mov	x1, x19
  214068:	bl	214220 <route_dump>
  21406c:	ldr	x20, [x20, #48]
  214070:	cbnz	x20, 214060 <network_dump+0x1f4>
  214074:	ldp	x20, x19, [sp, #64]
  214078:	ldp	x22, x21, [sp, #48]
  21407c:	ldp	x29, x30, [sp, #32]
  214080:	add	sp, sp, #0x50
  214084:	ret
  214088:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  21408c:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214090:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214094:	add	x1, x1, #0xce4
  214098:	add	x2, x2, #0x208
  21409c:	add	x4, x4, #0xd6c
  2140a0:	mov	w3, #0x424                 	// #1060
  2140a4:	bl	215bd0 <log_assert_failed_realm@plt>
  2140a8:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2140ac:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  2140b0:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  2140b4:	add	x1, x1, #0xad6
  2140b8:	add	x2, x2, #0x208
  2140bc:	add	x4, x4, #0xd6c
  2140c0:	mov	w3, #0x425                 	// #1061
  2140c4:	mov	w0, wzr
  2140c8:	bl	215bd0 <log_assert_failed_realm@plt>

00000000002140cc <isempty>:
  2140cc:	cbz	x0, 2140e0 <isempty+0x14>
  2140d0:	ldrb	w8, [x0]
  2140d4:	cmp	w8, #0x0
  2140d8:	cset	w0, eq  // eq = none
  2140dc:	ret
  2140e0:	mov	w0, #0x1                   	// #1
  2140e4:	ret

00000000002140e8 <ether_addr_is_null>:
  2140e8:	sub	sp, sp, #0x20
  2140ec:	add	x1, sp, #0x8
  2140f0:	stp	x29, x30, [sp, #16]
  2140f4:	add	x29, sp, #0x10
  2140f8:	strh	wzr, [sp, #12]
  2140fc:	str	wzr, [sp, #8]
  214100:	bl	2159f4 <ether_addr_equal>
  214104:	ldp	x29, x30, [sp, #16]
  214108:	and	w0, w0, #0x1
  21410c:	add	sp, sp, #0x20
  214110:	ret

0000000000214114 <networkd_dhcp_type_to_string>:
  214114:	cmp	w0, #0x8
  214118:	b.ls	214124 <networkd_dhcp_type_to_string+0x10>  // b.plast
  21411c:	mov	x0, xzr
  214120:	ret
  214124:	adrp	x8, 202000 <parse_argv.options-0x2c0>
  214128:	add	x8, x8, #0x388
  21412c:	ldr	x0, [x8, w0, sxtw #3]
  214130:	ret

0000000000214134 <strv_isempty>:
  214134:	cbz	x0, 214148 <strv_isempty+0x14>
  214138:	ldr	x8, [x0]
  21413c:	cmp	x8, #0x0
  214140:	cset	w0, eq  // eq = none
  214144:	ret
  214148:	mov	w0, #0x1                   	// #1
  21414c:	ret

0000000000214150 <yes_no>:
  214150:	adrp	x8, 201000 <parse_argv.options-0x12c0>
  214154:	adrp	x9, 201000 <parse_argv.options-0x12c0>
  214158:	add	x8, x8, #0xd69
  21415c:	add	x9, x9, #0xadb
  214160:	tst	w0, #0x1
  214164:	csel	x0, x9, x8, ne  // ne = any
  214168:	ret

000000000021416c <address_dump>:
  21416c:	sub	sp, sp, #0x40
  214170:	stp	x29, x30, [sp, #16]
  214174:	add	x29, sp, #0x10
  214178:	stp	x20, x19, [sp, #48]
  21417c:	mov	x20, x0
  214180:	str	xzr, [x29, #24]
  214184:	str	xzr, [sp, #8]
  214188:	ldr	w0, [x0, #44]
  21418c:	ldrb	w2, [x20, #40]
  214190:	mov	x19, x1
  214194:	add	x1, x20, #0x8
  214198:	add	x3, x29, #0x18
  21419c:	str	x21, [sp, #32]
  2141a0:	bl	215da0 <in_addr_prefix_to_string@plt>
  2141a4:	tbnz	w0, #31, 2141fc <address_dump+0x90>
  2141a8:	ldr	w0, [x20, #44]
  2141ac:	add	x21, x20, #0x18
  2141b0:	mov	x1, x21
  2141b4:	bl	215db0 <in_addr_is_null@plt>
  2141b8:	cbnz	w0, 2141d0 <address_dump+0x64>
  2141bc:	ldr	w0, [x20, #44]
  2141c0:	add	x2, sp, #0x8
  2141c4:	mov	x1, x21
  2141c8:	bl	215dc0 <in_addr_to_string@plt>
  2141cc:	tbnz	w0, #31, 2141fc <address_dump+0x90>
  2141d0:	ldr	x2, [x29, #24]
  2141d4:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2141d8:	add	x1, x1, #0x9e7
  2141dc:	mov	x0, x19
  2141e0:	bl	215d70 <fprintf@plt>
  2141e4:	ldr	x2, [sp, #8]
  2141e8:	cbz	x2, 2141fc <address_dump+0x90>
  2141ec:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  2141f0:	add	x1, x1, #0x1fc
  2141f4:	mov	x0, x19
  2141f8:	bl	215d70 <fprintf@plt>
  2141fc:	add	x0, sp, #0x8
  214200:	bl	2145b0 <freep>
  214204:	add	x0, x29, #0x18
  214208:	bl	2145b0 <freep>
  21420c:	ldp	x20, x19, [sp, #48]
  214210:	ldr	x21, [sp, #32]
  214214:	ldp	x29, x30, [sp, #16]
  214218:	add	sp, sp, #0x40
  21421c:	ret

0000000000214220 <route_dump>:
  214220:	sub	sp, sp, #0x40
  214224:	stp	x29, x30, [sp, #16]
  214228:	add	x29, sp, #0x10
  21422c:	stp	x20, x19, [sp, #48]
  214230:	str	xzr, [x29, #24]
  214234:	str	xzr, [sp, #8]
  214238:	mov	x20, x0
  21423c:	ldr	w0, [x0, #44]
  214240:	str	x21, [sp, #32]
  214244:	add	x21, x20, #0x8
  214248:	mov	x19, x1
  21424c:	mov	x1, x21
  214250:	bl	215db0 <in_addr_is_null@plt>
  214254:	cbnz	w0, 214270 <route_dump+0x50>
  214258:	ldr	w0, [x20, #44]
  21425c:	ldrb	w2, [x20, #40]
  214260:	add	x3, x29, #0x18
  214264:	mov	x1, x21
  214268:	bl	215da0 <in_addr_prefix_to_string@plt>
  21426c:	tbnz	w0, #31, 2142c8 <route_dump+0xa8>
  214270:	ldr	w0, [x20, #44]
  214274:	add	x1, x20, #0x18
  214278:	add	x2, sp, #0x8
  21427c:	bl	215dc0 <in_addr_to_string@plt>
  214280:	tbnz	w0, #31, 2142c8 <route_dump+0xa8>
  214284:	adrp	x0, 201000 <parse_argv.options-0x12c0>
  214288:	add	x0, x0, #0xf02
  21428c:	mov	w1, #0x9                   	// #9
  214290:	mov	w2, #0x1                   	// #1
  214294:	mov	x3, x19
  214298:	bl	215d80 <fwrite@plt>
  21429c:	ldr	x2, [x29, #24]
  2142a0:	cbz	x2, 2142b4 <route_dump+0x94>
  2142a4:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2142a8:	add	x1, x1, #0xa8d
  2142ac:	mov	x0, x19
  2142b0:	bl	215d70 <fprintf@plt>
  2142b4:	ldr	x2, [sp, #8]
  2142b8:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2142bc:	add	x1, x1, #0xadf
  2142c0:	mov	x0, x19
  2142c4:	bl	215d70 <fprintf@plt>
  2142c8:	add	x0, sp, #0x8
  2142cc:	bl	2145b0 <freep>
  2142d0:	add	x0, x29, #0x18
  2142d4:	bl	2145b0 <freep>
  2142d8:	ldp	x20, x19, [sp, #48]
  2142dc:	ldr	x21, [sp, #32]
  2142e0:	ldp	x29, x30, [sp, #16]
  2142e4:	add	sp, sp, #0x40
  2142e8:	ret

00000000002142ec <netdev_dump>:
  2142ec:	stp	x29, x30, [sp, #-32]!
  2142f0:	stp	x20, x19, [sp, #16]
  2142f4:	mov	x29, sp
  2142f8:	cbz	x0, 214340 <netdev_dump+0x54>
  2142fc:	mov	x19, x1
  214300:	cbz	x1, 214360 <netdev_dump+0x74>
  214304:	ldp	x3, x2, [x0]
  214308:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  21430c:	mov	x20, x0
  214310:	add	x1, x1, #0xcc0
  214314:	mov	x0, x19
  214318:	bl	215d70 <fprintf@plt>
  21431c:	ldr	w2, [x20, #16]
  214320:	cbz	w2, 214334 <netdev_dump+0x48>
  214324:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214328:	add	x1, x1, #0xcb3
  21432c:	mov	x0, x19
  214330:	bl	215d70 <fprintf@plt>
  214334:	ldp	x20, x19, [sp, #16]
  214338:	ldp	x29, x30, [sp], #32
  21433c:	ret
  214340:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214344:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214348:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  21434c:	add	x1, x1, #0xd2c
  214350:	add	x2, x2, #0x208
  214354:	add	x4, x4, #0xb31
  214358:	mov	w3, #0x456                 	// #1110
  21435c:	bl	215bd0 <log_assert_failed_realm@plt>
  214360:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214364:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214368:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  21436c:	add	x1, x1, #0xad6
  214370:	add	x2, x2, #0x208
  214374:	add	x4, x4, #0xb31
  214378:	mov	w3, #0x457                 	// #1111
  21437c:	mov	w0, wzr
  214380:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000214384 <link_dump>:
  214384:	sub	sp, sp, #0x50
  214388:	stp	x29, x30, [sp, #32]
  21438c:	str	x21, [sp, #48]
  214390:	stp	x20, x19, [sp, #64]
  214394:	add	x29, sp, #0x20
  214398:	cbz	x0, 214418 <link_dump+0x94>
  21439c:	mov	x19, x1
  2143a0:	cbz	x1, 214438 <link_dump+0xb4>
  2143a4:	mov	x20, x0
  2143a8:	adrp	x0, 201000 <parse_argv.options-0x12c0>
  2143ac:	add	x0, x0, #0xe12
  2143b0:	mov	w1, #0x8                   	// #8
  2143b4:	mov	w2, #0x1                   	// #1
  2143b8:	mov	x3, x19
  2143bc:	bl	215d80 <fwrite@plt>
  2143c0:	add	x21, x20, #0x8
  2143c4:	mov	x0, x21
  2143c8:	bl	2140e8 <ether_addr_is_null>
  2143cc:	tbnz	w0, #0, 2143f0 <link_dump+0x6c>
  2143d0:	add	x1, sp, #0xc
  2143d4:	mov	x0, x21
  2143d8:	bl	215d90 <ether_addr_to_string@plt>
  2143dc:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2143e0:	mov	x2, x0
  2143e4:	add	x1, x1, #0xf80
  2143e8:	mov	x0, x19
  2143ec:	bl	215d70 <fprintf@plt>
  2143f0:	ldr	x2, [x20]
  2143f4:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  2143f8:	add	x1, x1, #0x283
  2143fc:	mov	x0, x19
  214400:	bl	215d70 <fprintf@plt>
  214404:	ldp	x20, x19, [sp, #64]
  214408:	ldr	x21, [sp, #48]
  21440c:	ldp	x29, x30, [sp, #32]
  214410:	add	sp, sp, #0x50
  214414:	ret
  214418:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  21441c:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214420:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214424:	add	x1, x1, #0xcec
  214428:	add	x2, x2, #0x208
  21442c:	add	x4, x4, #0xf8f
  214430:	mov	w3, #0x467                 	// #1127
  214434:	bl	215bd0 <log_assert_failed_realm@plt>
  214438:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  21443c:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214440:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214444:	add	x1, x1, #0xad6
  214448:	add	x2, x2, #0x208
  21444c:	add	x4, x4, #0xf8f
  214450:	mov	w3, #0x468                 	// #1128
  214454:	mov	w0, wzr
  214458:	bl	215bd0 <log_assert_failed_realm@plt>

000000000021445c <network_format>:
  21445c:	sub	sp, sp, #0x40
  214460:	stp	x29, x30, [sp, #16]
  214464:	add	x29, sp, #0x10
  214468:	str	x21, [sp, #32]
  21446c:	stp	x20, x19, [sp, #48]
  214470:	str	xzr, [x29, #24]
  214474:	str	xzr, [sp, #8]
  214478:	cbz	x0, 214524 <network_format+0xc8>
  21447c:	mov	x19, x1
  214480:	cbz	x1, 214544 <network_format+0xe8>
  214484:	mov	x20, x0
  214488:	add	x0, x29, #0x18
  21448c:	add	x1, sp, #0x8
  214490:	str	xzr, [sp]
  214494:	bl	215dd0 <open_memstream_unlocked@plt>
  214498:	mov	x21, x0
  21449c:	str	x0, [sp]
  2144a0:	cbz	x0, 2144d0 <network_format+0x74>
  2144a4:	mov	x0, x20
  2144a8:	mov	x1, x21
  2144ac:	bl	213e6c <network_dump>
  2144b0:	mov	w0, wzr
  2144b4:	mov	x1, x21
  2144b8:	bl	215de0 <fputc@plt>
  2144bc:	mov	x0, x21
  2144c0:	bl	215df0 <fflush_and_check@plt>
  2144c4:	mov	w20, w0
  2144c8:	mov	w21, #0x1                   	// #1
  2144cc:	b	2144d0 <network_format+0x74>
  2144d0:	mov	x0, sp
  2144d4:	bl	2145c8 <fclosep>
  2144d8:	cbz	w21, 214500 <network_format+0xa4>
  2144dc:	tbnz	w20, #31, 214504 <network_format+0xa8>
  2144e0:	ldr	x8, [x29, #24]
  2144e4:	cbz	x8, 214568 <network_format+0x10c>
  2144e8:	str	xzr, [x29, #24]
  2144ec:	str	x8, [x19]
  2144f0:	ldr	x8, [sp, #8]
  2144f4:	cbz	x8, 21458c <network_format+0x130>
  2144f8:	sub	w20, w8, #0x1
  2144fc:	b	214504 <network_format+0xa8>
  214500:	mov	w20, #0xfffffff4            	// #-12
  214504:	add	x0, x29, #0x18
  214508:	bl	2145b0 <freep>
  21450c:	mov	w0, w20
  214510:	ldp	x20, x19, [sp, #48]
  214514:	ldr	x21, [sp, #32]
  214518:	ldp	x29, x30, [sp, #16]
  21451c:	add	sp, sp, #0x40
  214520:	ret
  214524:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214528:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  21452c:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214530:	add	x1, x1, #0xce4
  214534:	add	x2, x2, #0x208
  214538:	add	x4, x4, #0xe1b
  21453c:	mov	w3, #0x47a                 	// #1146
  214540:	bl	215bd0 <log_assert_failed_realm@plt>
  214544:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214548:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  21454c:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214550:	add	x1, x1, #0xe74
  214554:	add	x2, x2, #0x208
  214558:	add	x4, x4, #0xe1b
  21455c:	mov	w3, #0x47b                 	// #1147
  214560:	mov	w0, wzr
  214564:	bl	215bd0 <log_assert_failed_realm@plt>
  214568:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  21456c:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214570:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214574:	add	x1, x1, #0xbc2
  214578:	add	x2, x2, #0x208
  21457c:	add	x4, x4, #0xe1b
  214580:	mov	w3, #0x48e                 	// #1166
  214584:	mov	w0, wzr
  214588:	bl	215bd0 <log_assert_failed_realm@plt>
  21458c:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214590:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214594:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214598:	add	x1, x1, #0xebc
  21459c:	add	x2, x2, #0x208
  2145a0:	add	x4, x4, #0xe1b
  2145a4:	mov	w3, #0x490                 	// #1168
  2145a8:	mov	w0, wzr
  2145ac:	bl	215bd0 <log_assert_failed_realm@plt>

00000000002145b0 <freep>:
  2145b0:	stp	x29, x30, [sp, #-16]!
  2145b4:	ldr	x0, [x0]
  2145b8:	mov	x29, sp
  2145bc:	bl	215bf0 <free@plt>
  2145c0:	ldp	x29, x30, [sp], #16
  2145c4:	ret

00000000002145c8 <fclosep>:
  2145c8:	stp	x29, x30, [sp, #-16]!
  2145cc:	ldr	x0, [x0]
  2145d0:	mov	x29, sp
  2145d4:	bl	215c70 <safe_fclose@plt>
  2145d8:	ldp	x29, x30, [sp], #16
  2145dc:	ret

00000000002145e0 <netdev_format>:
  2145e0:	sub	sp, sp, #0x40
  2145e4:	stp	x29, x30, [sp, #16]
  2145e8:	add	x29, sp, #0x10
  2145ec:	str	x21, [sp, #32]
  2145f0:	stp	x20, x19, [sp, #48]
  2145f4:	str	xzr, [x29, #24]
  2145f8:	str	xzr, [sp, #8]
  2145fc:	cbz	x0, 2146a8 <netdev_format+0xc8>
  214600:	mov	x19, x1
  214604:	cbz	x1, 2146c8 <netdev_format+0xe8>
  214608:	mov	x20, x0
  21460c:	add	x0, x29, #0x18
  214610:	add	x1, sp, #0x8
  214614:	str	xzr, [sp]
  214618:	bl	215dd0 <open_memstream_unlocked@plt>
  21461c:	mov	x21, x0
  214620:	str	x0, [sp]
  214624:	cbz	x0, 214654 <netdev_format+0x74>
  214628:	mov	x0, x20
  21462c:	mov	x1, x21
  214630:	bl	2142ec <netdev_dump>
  214634:	mov	w0, wzr
  214638:	mov	x1, x21
  21463c:	bl	215de0 <fputc@plt>
  214640:	mov	x0, x21
  214644:	bl	215df0 <fflush_and_check@plt>
  214648:	mov	w20, w0
  21464c:	mov	w21, #0x1                   	// #1
  214650:	b	214654 <netdev_format+0x74>
  214654:	mov	x0, sp
  214658:	bl	2145c8 <fclosep>
  21465c:	cbz	w21, 214684 <netdev_format+0xa4>
  214660:	tbnz	w20, #31, 214688 <netdev_format+0xa8>
  214664:	ldr	x8, [x29, #24]
  214668:	cbz	x8, 2146ec <netdev_format+0x10c>
  21466c:	str	xzr, [x29, #24]
  214670:	str	x8, [x19]
  214674:	ldr	x8, [sp, #8]
  214678:	cbz	x8, 214710 <netdev_format+0x130>
  21467c:	sub	w20, w8, #0x1
  214680:	b	214688 <netdev_format+0xa8>
  214684:	mov	w20, #0xfffffff4            	// #-12
  214688:	add	x0, x29, #0x18
  21468c:	bl	2145b0 <freep>
  214690:	mov	w0, w20
  214694:	ldp	x20, x19, [sp, #48]
  214698:	ldr	x21, [sp, #32]
  21469c:	ldp	x29, x30, [sp, #16]
  2146a0:	add	sp, sp, #0x40
  2146a4:	ret
  2146a8:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2146ac:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  2146b0:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  2146b4:	add	x1, x1, #0xd2c
  2146b8:	add	x2, x2, #0x208
  2146bc:	add	x4, x4, #0x294
  2146c0:	mov	w3, #0x499                 	// #1177
  2146c4:	bl	215bd0 <log_assert_failed_realm@plt>
  2146c8:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2146cc:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  2146d0:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  2146d4:	add	x1, x1, #0xe74
  2146d8:	add	x2, x2, #0x208
  2146dc:	add	x4, x4, #0x294
  2146e0:	mov	w3, #0x49a                 	// #1178
  2146e4:	mov	w0, wzr
  2146e8:	bl	215bd0 <log_assert_failed_realm@plt>
  2146ec:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2146f0:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  2146f4:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  2146f8:	add	x1, x1, #0xbc2
  2146fc:	add	x2, x2, #0x208
  214700:	add	x4, x4, #0x294
  214704:	mov	w3, #0x4ad                 	// #1197
  214708:	mov	w0, wzr
  21470c:	bl	215bd0 <log_assert_failed_realm@plt>
  214710:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214714:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214718:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  21471c:	add	x1, x1, #0xebc
  214720:	add	x2, x2, #0x208
  214724:	add	x4, x4, #0x294
  214728:	mov	w3, #0x4af                 	// #1199
  21472c:	mov	w0, wzr
  214730:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000214734 <link_format>:
  214734:	sub	sp, sp, #0x40
  214738:	stp	x29, x30, [sp, #16]
  21473c:	add	x29, sp, #0x10
  214740:	str	x21, [sp, #32]
  214744:	stp	x20, x19, [sp, #48]
  214748:	str	xzr, [x29, #24]
  21474c:	str	xzr, [sp, #8]
  214750:	cbz	x0, 2147fc <link_format+0xc8>
  214754:	mov	x19, x1
  214758:	cbz	x1, 21481c <link_format+0xe8>
  21475c:	mov	x20, x0
  214760:	add	x0, x29, #0x18
  214764:	add	x1, sp, #0x8
  214768:	str	xzr, [sp]
  21476c:	bl	215dd0 <open_memstream_unlocked@plt>
  214770:	mov	x21, x0
  214774:	str	x0, [sp]
  214778:	cbz	x0, 2147a8 <link_format+0x74>
  21477c:	mov	x0, x20
  214780:	mov	x1, x21
  214784:	bl	214384 <link_dump>
  214788:	mov	w0, wzr
  21478c:	mov	x1, x21
  214790:	bl	215de0 <fputc@plt>
  214794:	mov	x0, x21
  214798:	bl	215df0 <fflush_and_check@plt>
  21479c:	mov	w20, w0
  2147a0:	mov	w21, #0x1                   	// #1
  2147a4:	b	2147a8 <link_format+0x74>
  2147a8:	mov	x0, sp
  2147ac:	bl	2145c8 <fclosep>
  2147b0:	cbz	w21, 2147d8 <link_format+0xa4>
  2147b4:	tbnz	w20, #31, 2147dc <link_format+0xa8>
  2147b8:	ldr	x8, [x29, #24]
  2147bc:	cbz	x8, 214840 <link_format+0x10c>
  2147c0:	str	xzr, [x29, #24]
  2147c4:	str	x8, [x19]
  2147c8:	ldr	x8, [sp, #8]
  2147cc:	cbz	x8, 214864 <link_format+0x130>
  2147d0:	sub	w20, w8, #0x1
  2147d4:	b	2147dc <link_format+0xa8>
  2147d8:	mov	w20, #0xfffffff4            	// #-12
  2147dc:	add	x0, x29, #0x18
  2147e0:	bl	2145b0 <freep>
  2147e4:	mov	w0, w20
  2147e8:	ldp	x20, x19, [sp, #48]
  2147ec:	ldr	x21, [sp, #32]
  2147f0:	ldp	x29, x30, [sp, #16]
  2147f4:	add	sp, sp, #0x40
  2147f8:	ret
  2147fc:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214800:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214804:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214808:	add	x1, x1, #0xcec
  21480c:	add	x2, x2, #0x208
  214810:	add	x4, x4, #0xd33
  214814:	mov	w3, #0x4b8                 	// #1208
  214818:	bl	215bd0 <log_assert_failed_realm@plt>
  21481c:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214820:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214824:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214828:	add	x1, x1, #0xe74
  21482c:	add	x2, x2, #0x208
  214830:	add	x4, x4, #0xd33
  214834:	mov	w3, #0x4b9                 	// #1209
  214838:	mov	w0, wzr
  21483c:	bl	215bd0 <log_assert_failed_realm@plt>
  214840:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214844:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214848:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  21484c:	add	x1, x1, #0xbc2
  214850:	add	x2, x2, #0x208
  214854:	add	x4, x4, #0xd33
  214858:	mov	w3, #0x4cc                 	// #1228
  21485c:	mov	w0, wzr
  214860:	bl	215bd0 <log_assert_failed_realm@plt>
  214864:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214868:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  21486c:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214870:	add	x1, x1, #0xebc
  214874:	add	x2, x2, #0x208
  214878:	add	x4, x4, #0xd33
  21487c:	mov	w3, #0x4ce                 	// #1230
  214880:	mov	w0, wzr
  214884:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000214888 <proc_cmdline_value_missing>:
  214888:	stp	x29, x30, [sp, #-32]!
  21488c:	str	x19, [sp, #16]
  214890:	mov	x29, sp
  214894:	cbz	x1, 2148a0 <proc_cmdline_value_missing+0x18>
  214898:	mov	w0, wzr
  21489c:	b	2148e4 <proc_cmdline_value_missing+0x5c>
  2148a0:	mov	x19, x0
  2148a4:	mov	w0, wzr
  2148a8:	bl	215b80 <log_get_max_level_realm@plt>
  2148ac:	cmp	w0, #0x4
  2148b0:	b.lt	2148e0 <proc_cmdline_value_missing+0x58>  // b.tstop
  2148b4:	adrp	x2, 201000 <parse_argv.options-0x12c0>
  2148b8:	adrp	x4, 202000 <parse_argv.options-0x2c0>
  2148bc:	adrp	x5, 201000 <parse_argv.options-0x12c0>
  2148c0:	add	x2, x2, #0xd94
  2148c4:	add	x4, x4, #0xb7
  2148c8:	add	x5, x5, #0xec3
  2148cc:	mov	w0, #0x4                   	// #4
  2148d0:	mov	w3, #0x21                  	// #33
  2148d4:	mov	w1, wzr
  2148d8:	mov	x6, x19
  2148dc:	bl	215b90 <log_internal_realm@plt>
  2148e0:	mov	w0, #0x1                   	// #1
  2148e4:	ldr	x19, [sp, #16]
  2148e8:	ldp	x29, x30, [sp], #32
  2148ec:	ret

00000000002148f0 <network_set_dhcp_type>:
  2148f0:	stp	x29, x30, [sp, #-48]!
  2148f4:	str	x21, [sp, #16]
  2148f8:	mov	x21, x0
  2148fc:	mov	x0, x2
  214900:	stp	x20, x19, [sp, #32]
  214904:	mov	x29, sp
  214908:	mov	x20, x1
  21490c:	bl	214d24 <dracut_dhcp_type_from_string>
  214910:	tbnz	w0, #31, 214950 <network_set_dhcp_type+0x60>
  214914:	mov	w19, w0
  214918:	mov	x0, x21
  21491c:	mov	x1, x20
  214920:	bl	213058 <network_get>
  214924:	str	x0, [x29, #24]
  214928:	cbnz	x0, 214940 <network_set_dhcp_type+0x50>
  21492c:	add	x2, x29, #0x18
  214930:	mov	x0, x21
  214934:	mov	x1, x20
  214938:	bl	214d48 <network_new>
  21493c:	tbnz	w0, #31, 214954 <network_set_dhcp_type+0x64>
  214940:	ldr	x8, [x29, #24]
  214944:	mov	w0, wzr
  214948:	str	w19, [x8, #20]
  21494c:	b	214954 <network_set_dhcp_type+0x64>
  214950:	mov	w0, #0xffffffea            	// #-22
  214954:	ldp	x20, x19, [sp, #32]
  214958:	ldr	x21, [sp, #16]
  21495c:	ldp	x29, x30, [sp], #48
  214960:	ret

0000000000214964 <parse_cmdline_ip_address>:
  214964:	stp	x29, x30, [sp, #-80]!
  214968:	str	x25, [sp, #16]
  21496c:	stp	x24, x23, [sp, #32]
  214970:	stp	x22, x21, [sp, #48]
  214974:	stp	x20, x19, [sp, #64]
  214978:	mov	x29, sp
  21497c:	sub	sp, sp, #0x40
  214980:	mov	w20, w1
  214984:	mov	x19, x0
  214988:	str	x2, [x29, #24]
  21498c:	add	x1, x29, #0x18
  214990:	sub	x2, x29, #0x10
  214994:	mov	w0, w20
  214998:	stp	xzr, xzr, [x29, #-16]
  21499c:	stp	xzr, xzr, [x29, #-32]
  2149a0:	stp	xzr, xzr, [x29, #-48]
  2149a4:	bl	214ee8 <parse_ip_address_one>
  2149a8:	tbnz	w0, #31, 214be8 <parse_cmdline_ip_address+0x284>
  2149ac:	add	x1, x29, #0x18
  2149b0:	sub	x2, x29, #0x20
  2149b4:	mov	w0, w20
  2149b8:	bl	214ee8 <parse_ip_address_one>
  2149bc:	tbnz	w0, #31, 214be8 <parse_cmdline_ip_address+0x284>
  2149c0:	add	x1, x29, #0x18
  2149c4:	sub	x2, x29, #0x30
  2149c8:	mov	w0, w20
  2149cc:	bl	214ee8 <parse_ip_address_one>
  2149d0:	tbnz	w0, #31, 214be8 <parse_cmdline_ip_address+0x284>
  2149d4:	add	x1, x29, #0x18
  2149d8:	sub	x2, x29, #0x34
  2149dc:	mov	w0, w20
  2149e0:	bl	21502c <parse_netmask_or_prefixlen>
  2149e4:	tbnz	w0, #31, 214be8 <parse_cmdline_ip_address+0x284>
  2149e8:	ldr	x23, [x29, #24]
  2149ec:	mov	w1, #0x3a                  	// #58
  2149f0:	mov	x0, x23
  2149f4:	bl	215b60 <strchr@plt>
  2149f8:	cbz	x0, 214be4 <parse_cmdline_ip_address+0x280>
  2149fc:	mov	x21, x0
  214a00:	sub	x1, x0, x23
  214a04:	mov	x0, x23
  214a08:	bl	215ca0 <strnlen@plt>
  214a0c:	add	x8, x0, #0x10
  214a10:	and	x8, x8, #0xfffffffffffffff0
  214a14:	mov	x9, sp
  214a18:	sub	x22, x9, x8
  214a1c:	mov	x2, x0
  214a20:	mov	sp, x22
  214a24:	strb	wzr, [x22, x0]
  214a28:	mov	x0, x22
  214a2c:	mov	x1, x23
  214a30:	bl	215cb0 <memcpy@plt>
  214a34:	mov	x0, x22
  214a38:	mov	w1, wzr
  214a3c:	bl	215e00 <hostname_is_valid@plt>
  214a40:	tbz	w0, #0, 214be4 <parse_cmdline_ip_address+0x280>
  214a44:	add	x23, x21, #0x1
  214a48:	mov	w1, #0x3a                  	// #58
  214a4c:	mov	x0, x23
  214a50:	str	x23, [x29, #24]
  214a54:	bl	215b60 <strchr@plt>
  214a58:	cbz	x0, 214be4 <parse_cmdline_ip_address+0x280>
  214a5c:	mov	x24, x0
  214a60:	sub	x1, x0, x23
  214a64:	mov	x0, x23
  214a68:	bl	215ca0 <strnlen@plt>
  214a6c:	add	x8, x0, #0x10
  214a70:	and	x8, x8, #0xfffffffffffffff0
  214a74:	mov	x9, sp
  214a78:	sub	x21, x9, x8
  214a7c:	mov	x2, x0
  214a80:	mov	sp, x21
  214a84:	strb	wzr, [x21, x0]
  214a88:	mov	x0, x21
  214a8c:	mov	x1, x23
  214a90:	bl	215cb0 <memcpy@plt>
  214a94:	add	x24, x24, #0x1
  214a98:	mov	w1, #0x3a                  	// #58
  214a9c:	mov	x0, x24
  214aa0:	str	x24, [x29, #24]
  214aa4:	bl	215b60 <strchr@plt>
  214aa8:	mov	x23, x0
  214aac:	cbz	x0, 214ae8 <parse_cmdline_ip_address+0x184>
  214ab0:	sub	x1, x23, x24
  214ab4:	mov	x0, x24
  214ab8:	bl	215ca0 <strnlen@plt>
  214abc:	add	x8, x0, #0x10
  214ac0:	and	x8, x8, #0xfffffffffffffff0
  214ac4:	mov	x9, sp
  214ac8:	sub	x25, x9, x8
  214acc:	mov	x2, x0
  214ad0:	mov	sp, x25
  214ad4:	strb	wzr, [x25, x0]
  214ad8:	mov	x0, x25
  214adc:	mov	x1, x24
  214ae0:	bl	215cb0 <memcpy@plt>
  214ae4:	mov	x24, x25
  214ae8:	mov	x0, x19
  214aec:	mov	x1, x21
  214af0:	mov	x2, x24
  214af4:	bl	2148f0 <network_set_dhcp_type>
  214af8:	tbnz	w0, #31, 214be8 <parse_cmdline_ip_address+0x284>
  214afc:	mov	x0, x19
  214b00:	mov	x1, x21
  214b04:	mov	x2, x22
  214b08:	bl	215124 <network_set_hostname>
  214b0c:	tbnz	w0, #31, 214be8 <parse_cmdline_ip_address+0x284>
  214b10:	ldurb	w3, [x29, #-52]
  214b14:	sub	x4, x29, #0x10
  214b18:	sub	x5, x29, #0x20
  214b1c:	mov	x0, x19
  214b20:	mov	x1, x21
  214b24:	mov	w2, w20
  214b28:	bl	21515c <network_set_address>
  214b2c:	tbnz	w0, #31, 214be8 <parse_cmdline_ip_address+0x284>
  214b30:	sub	x5, x29, #0x30
  214b34:	mov	x0, x19
  214b38:	mov	x1, x21
  214b3c:	mov	w2, w20
  214b40:	mov	w3, wzr
  214b44:	mov	x4, xzr
  214b48:	bl	2151e0 <network_set_route>
  214b4c:	mov	w8, w0
  214b50:	and	w0, w0, w0, asr #31
  214b54:	tbnz	w8, #31, 214be8 <parse_cmdline_ip_address+0x284>
  214b58:	cbz	x23, 214be8 <parse_cmdline_ip_address+0x284>
  214b5c:	add	x20, x23, #0x1
  214b60:	mov	x0, x19
  214b64:	mov	x1, x21
  214b68:	mov	x2, x20
  214b6c:	bl	215280 <parse_cmdline_ip_mtu_mac>
  214b70:	tbz	w0, #31, 214c18 <parse_cmdline_ip_address+0x2b4>
  214b74:	mov	w1, #0x3a                  	// #58
  214b78:	mov	x0, x20
  214b7c:	str	x20, [x29, #24]
  214b80:	bl	215b60 <strchr@plt>
  214b84:	cbz	x0, 214c04 <parse_cmdline_ip_address+0x2a0>
  214b88:	mov	x22, x0
  214b8c:	sub	x1, x0, x20
  214b90:	mov	x0, x20
  214b94:	bl	215ca0 <strnlen@plt>
  214b98:	add	x8, x0, #0x10
  214b9c:	and	x8, x8, #0xfffffffffffffff0
  214ba0:	mov	x9, sp
  214ba4:	sub	x23, x9, x8
  214ba8:	mov	x2, x0
  214bac:	mov	sp, x23
  214bb0:	strb	wzr, [x23, x0]
  214bb4:	mov	x0, x23
  214bb8:	mov	x1, x20
  214bbc:	bl	215cb0 <memcpy@plt>
  214bc0:	mov	x0, x19
  214bc4:	mov	x1, x21
  214bc8:	mov	x2, x23
  214bcc:	bl	215338 <network_set_dns>
  214bd0:	tbnz	w0, #31, 214be8 <parse_cmdline_ip_address+0x284>
  214bd4:	add	x2, x22, #0x1
  214bd8:	mov	x0, x19
  214bdc:	mov	x1, x21
  214be0:	b	214c10 <parse_cmdline_ip_address+0x2ac>
  214be4:	mov	w0, #0xffffffea            	// #-22
  214be8:	mov	sp, x29
  214bec:	ldp	x20, x19, [sp, #64]
  214bf0:	ldp	x22, x21, [sp, #48]
  214bf4:	ldp	x24, x23, [sp, #32]
  214bf8:	ldr	x25, [sp, #16]
  214bfc:	ldp	x29, x30, [sp], #80
  214c00:	ret
  214c04:	mov	x0, x19
  214c08:	mov	x1, x21
  214c0c:	mov	x2, x20
  214c10:	bl	215338 <network_set_dns>
  214c14:	tbnz	w0, #31, 214be8 <parse_cmdline_ip_address+0x284>
  214c18:	mov	w0, wzr
  214c1c:	b	214be8 <parse_cmdline_ip_address+0x284>

0000000000214c20 <parse_cmdline_ip_interface>:
  214c20:	stp	x29, x30, [sp, #-64]!
  214c24:	stp	x22, x21, [sp, #32]
  214c28:	mov	x21, x1
  214c2c:	stp	x20, x19, [sp, #48]
  214c30:	mov	x19, x0
  214c34:	mov	w1, #0x3a                  	// #58
  214c38:	mov	x0, x21
  214c3c:	str	x23, [sp, #16]
  214c40:	mov	x29, sp
  214c44:	bl	215b60 <strchr@plt>
  214c48:	cbz	x0, 214d08 <parse_cmdline_ip_interface+0xe8>
  214c4c:	mov	x22, x0
  214c50:	sub	x1, x0, x21
  214c54:	mov	x0, x21
  214c58:	bl	215ca0 <strnlen@plt>
  214c5c:	add	x8, x0, #0x10
  214c60:	and	x8, x8, #0xfffffffffffffff0
  214c64:	mov	x9, sp
  214c68:	sub	x20, x9, x8
  214c6c:	mov	x2, x0
  214c70:	mov	sp, x20
  214c74:	strb	wzr, [x20, x0]
  214c78:	mov	x0, x20
  214c7c:	mov	x1, x21
  214c80:	bl	215cb0 <memcpy@plt>
  214c84:	add	x22, x22, #0x1
  214c88:	mov	w1, #0x3a                  	// #58
  214c8c:	mov	x0, x22
  214c90:	bl	215b60 <strchr@plt>
  214c94:	mov	x21, x0
  214c98:	cbz	x0, 214cd4 <parse_cmdline_ip_interface+0xb4>
  214c9c:	sub	x1, x21, x22
  214ca0:	mov	x0, x22
  214ca4:	bl	215ca0 <strnlen@plt>
  214ca8:	add	x8, x0, #0x10
  214cac:	and	x8, x8, #0xfffffffffffffff0
  214cb0:	mov	x9, sp
  214cb4:	sub	x23, x9, x8
  214cb8:	mov	x2, x0
  214cbc:	mov	sp, x23
  214cc0:	strb	wzr, [x23, x0]
  214cc4:	mov	x0, x23
  214cc8:	mov	x1, x22
  214ccc:	bl	215cb0 <memcpy@plt>
  214cd0:	mov	x22, x23
  214cd4:	mov	x0, x19
  214cd8:	mov	x1, x20
  214cdc:	mov	x2, x22
  214ce0:	bl	2148f0 <network_set_dhcp_type>
  214ce4:	mov	w8, w0
  214ce8:	and	w0, w0, w0, asr #31
  214cec:	tbnz	w8, #31, 214d0c <parse_cmdline_ip_interface+0xec>
  214cf0:	cbz	x21, 214d0c <parse_cmdline_ip_interface+0xec>
  214cf4:	add	x2, x21, #0x1
  214cf8:	mov	x0, x19
  214cfc:	mov	x1, x20
  214d00:	bl	215280 <parse_cmdline_ip_mtu_mac>
  214d04:	b	214d0c <parse_cmdline_ip_interface+0xec>
  214d08:	mov	w0, #0xffffffea            	// #-22
  214d0c:	mov	sp, x29
  214d10:	ldp	x20, x19, [sp, #48]
  214d14:	ldp	x22, x21, [sp, #32]
  214d18:	ldr	x23, [sp, #16]
  214d1c:	ldp	x29, x30, [sp], #64
  214d20:	ret

0000000000214d24 <dracut_dhcp_type_from_string>:
  214d24:	stp	x29, x30, [sp, #-16]!
  214d28:	mov	x2, x0
  214d2c:	adrp	x0, 202000 <parse_argv.options-0x2c0>
  214d30:	add	x0, x0, #0x340
  214d34:	mov	w1, #0x9                   	// #9
  214d38:	mov	x29, sp
  214d3c:	bl	215e10 <string_table_lookup@plt>
  214d40:	ldp	x29, x30, [sp], #16
  214d44:	ret

0000000000214d48 <network_new>:
  214d48:	sub	sp, sp, #0x40
  214d4c:	stp	x29, x30, [sp, #16]
  214d50:	add	x29, sp, #0x10
  214d54:	str	x21, [sp, #32]
  214d58:	stp	x20, x19, [sp, #48]
  214d5c:	str	xzr, [x29, #24]
  214d60:	str	xzr, [sp, #8]
  214d64:	cbz	x0, 214e60 <network_new+0x118>
  214d68:	mov	x20, x0
  214d6c:	mov	x0, x1
  214d70:	mov	x19, x2
  214d74:	mov	x21, x1
  214d78:	bl	2140cc <isempty>
  214d7c:	tbnz	w0, #0, 214d8c <network_new+0x44>
  214d80:	mov	x0, x21
  214d84:	bl	215e20 <ifname_valid@plt>
  214d88:	tbz	w0, #0, 214e2c <network_new+0xe4>
  214d8c:	mov	x0, x21
  214d90:	bl	215b50 <strdup@plt>
  214d94:	str	x0, [sp, #8]
  214d98:	cbz	x0, 214e24 <network_new+0xdc>
  214d9c:	mov	w0, #0x58                  	// #88
  214da0:	bl	214e9c <malloc_multiply>
  214da4:	str	x0, [x29, #24]
  214da8:	cbz	x0, 214e24 <network_new+0xdc>
  214dac:	ldr	x8, [sp, #8]
  214db0:	mov	x9, #0xffffffff00000000    	// #-4294967296
  214db4:	movi	v0.2d, #0x0
  214db8:	mov	w10, #0xffffffff            	// #-1
  214dbc:	adrp	x1, 226000 <_DYNAMIC+0x120>
  214dc0:	str	xzr, [x0, #56]
  214dc4:	stur	xzr, [x0, #76]
  214dc8:	stur	xzr, [x0, #68]
  214dcc:	stp	xzr, x9, [x0, #8]
  214dd0:	stur	q0, [x0, #24]
  214dd4:	stur	q0, [x0, #40]
  214dd8:	str	w10, [x0, #64]
  214ddc:	str	x8, [x0]
  214de0:	str	wzr, [x0, #84]
  214de4:	add	x1, x1, #0x2d8
  214de8:	mov	x0, x20
  214dec:	str	xzr, [sp, #8]
  214df0:	bl	215e30 <internal_hashmap_ensure_allocated@plt>
  214df4:	tbnz	w0, #31, 214e34 <network_new+0xec>
  214df8:	ldr	x2, [x29, #24]
  214dfc:	ldr	x0, [x20]
  214e00:	ldr	x1, [x2]
  214e04:	bl	215e40 <hashmap_put@plt>
  214e08:	tbnz	w0, #31, 214e34 <network_new+0xec>
  214e0c:	cbz	x19, 214e18 <network_new+0xd0>
  214e10:	ldr	x8, [x29, #24]
  214e14:	str	x8, [x19]
  214e18:	mov	w21, wzr
  214e1c:	str	xzr, [x29, #24]
  214e20:	b	214e38 <network_new+0xf0>
  214e24:	mov	w21, #0xfffffff4            	// #-12
  214e28:	b	214e38 <network_new+0xf0>
  214e2c:	mov	w21, #0xffffffea            	// #-22
  214e30:	b	214e38 <network_new+0xf0>
  214e34:	mov	w21, w0
  214e38:	add	x0, sp, #0x8
  214e3c:	bl	2145b0 <freep>
  214e40:	add	x0, x29, #0x18
  214e44:	bl	214e80 <network_freep>
  214e48:	mov	w0, w21
  214e4c:	ldp	x20, x19, [sp, #48]
  214e50:	ldr	x21, [sp, #32]
  214e54:	ldp	x29, x30, [sp, #16]
  214e58:	add	sp, sp, #0x40
  214e5c:	ret
  214e60:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  214e64:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  214e68:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  214e6c:	add	x1, x1, #0xa9d
  214e70:	add	x2, x2, #0x208
  214e74:	add	x4, x4, #0xc74
  214e78:	mov	w3, #0xae                  	// #174
  214e7c:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000214e80 <network_freep>:
  214e80:	stp	x29, x30, [sp, #-16]!
  214e84:	ldr	x0, [x0]
  214e88:	mov	x29, sp
  214e8c:	cbz	x0, 214e94 <network_freep+0x14>
  214e90:	bl	213cdc <network_free>
  214e94:	ldp	x29, x30, [sp], #16
  214e98:	ret

0000000000214e9c <malloc_multiply>:
  214e9c:	stp	x29, x30, [sp, #-32]!
  214ea0:	mov	w1, #0x1                   	// #1
  214ea4:	str	x19, [sp, #16]
  214ea8:	mov	x29, sp
  214eac:	mov	x19, x0
  214eb0:	bl	214ed8 <size_multiply_overflow>
  214eb4:	tbz	w0, #0, 214ec0 <malloc_multiply+0x24>
  214eb8:	mov	x0, xzr
  214ebc:	b	214ecc <malloc_multiply+0x30>
  214ec0:	cmp	x19, #0x0
  214ec4:	csinc	x0, x19, xzr, ne  // ne = any
  214ec8:	bl	215e50 <malloc@plt>
  214ecc:	ldr	x19, [sp, #16]
  214ed0:	ldp	x29, x30, [sp], #32
  214ed4:	ret

0000000000214ed8 <size_multiply_overflow>:
  214ed8:	umulh	x8, x1, x0
  214edc:	cmp	xzr, x8
  214ee0:	cset	w0, ne  // ne = any
  214ee4:	ret

0000000000214ee8 <parse_ip_address_one>:
  214ee8:	stp	x29, x30, [sp, #-80]!
  214eec:	stp	x24, x23, [sp, #32]
  214ef0:	stp	x22, x21, [sp, #48]
  214ef4:	stp	x20, x19, [sp, #64]
  214ef8:	ldr	x22, [x1]
  214efc:	mov	x19, x1
  214f00:	str	x25, [sp, #16]
  214f04:	mov	x29, sp
  214f08:	ldrb	w8, [x22]
  214f0c:	cmp	w8, #0x3a
  214f10:	b.ne	214f24 <parse_ip_address_one+0x3c>  // b.any
  214f14:	add	x8, x22, #0x1
  214f18:	mov	w0, wzr
  214f1c:	str	x8, [x19]
  214f20:	b	215010 <parse_ip_address_one+0x128>
  214f24:	mov	x20, x2
  214f28:	mov	w21, w0
  214f2c:	cmp	w0, #0xa
  214f30:	b.ne	214fa0 <parse_ip_address_one+0xb8>  // b.any
  214f34:	cmp	w8, #0x5b
  214f38:	b.ne	21500c <parse_ip_address_one+0x124>  // b.any
  214f3c:	add	x24, x22, #0x1
  214f40:	mov	w1, #0x5d                  	// #93
  214f44:	mov	x0, x24
  214f48:	bl	215b60 <strchr@plt>
  214f4c:	cbz	x0, 21500c <parse_ip_address_one+0x124>
  214f50:	ldrb	w8, [x0, #1]
  214f54:	mov	x25, x0
  214f58:	cmp	w8, #0x3a
  214f5c:	b.ne	21500c <parse_ip_address_one+0x124>  // b.any
  214f60:	mvn	x8, x22
  214f64:	add	x1, x25, x8
  214f68:	mov	x0, x24
  214f6c:	bl	215ca0 <strnlen@plt>
  214f70:	add	x8, x0, #0x10
  214f74:	and	x8, x8, #0xfffffffffffffff0
  214f78:	mov	x9, sp
  214f7c:	sub	x23, x9, x8
  214f80:	mov	x2, x0
  214f84:	mov	sp, x23
  214f88:	strb	wzr, [x23, x0]
  214f8c:	mov	x0, x23
  214f90:	mov	x1, x24
  214f94:	bl	215cb0 <memcpy@plt>
  214f98:	add	x22, x25, #0x2
  214f9c:	b	214fec <parse_ip_address_one+0x104>
  214fa0:	mov	w1, #0x3a                  	// #58
  214fa4:	mov	x0, x22
  214fa8:	bl	215b60 <strchr@plt>
  214fac:	cbz	x0, 21500c <parse_ip_address_one+0x124>
  214fb0:	mov	x24, x0
  214fb4:	sub	x1, x0, x22
  214fb8:	mov	x0, x22
  214fbc:	bl	215ca0 <strnlen@plt>
  214fc0:	add	x8, x0, #0x10
  214fc4:	and	x8, x8, #0xfffffffffffffff0
  214fc8:	mov	x9, sp
  214fcc:	sub	x23, x9, x8
  214fd0:	mov	x2, x0
  214fd4:	mov	sp, x23
  214fd8:	strb	wzr, [x23, x0]
  214fdc:	mov	x0, x23
  214fe0:	mov	x1, x22
  214fe4:	bl	215cb0 <memcpy@plt>
  214fe8:	add	x22, x24, #0x1
  214fec:	mov	w0, w21
  214ff0:	mov	x1, x23
  214ff4:	mov	x2, x20
  214ff8:	bl	215e60 <in_addr_from_string@plt>
  214ffc:	tbnz	w0, #31, 215010 <parse_ip_address_one+0x128>
  215000:	mov	w0, #0x1                   	// #1
  215004:	str	x22, [x19]
  215008:	b	215010 <parse_ip_address_one+0x128>
  21500c:	mov	w0, #0xffffffea            	// #-22
  215010:	mov	sp, x29
  215014:	ldp	x20, x19, [sp, #64]
  215018:	ldp	x22, x21, [sp, #48]
  21501c:	ldp	x24, x23, [sp, #32]
  215020:	ldr	x25, [sp, #16]
  215024:	ldp	x29, x30, [sp], #80
  215028:	ret

000000000021502c <parse_netmask_or_prefixlen>:
  21502c:	stp	x29, x30, [sp, #-64]!
  215030:	str	x23, [sp, #16]
  215034:	stp	x22, x21, [sp, #32]
  215038:	stp	x20, x19, [sp, #48]
  21503c:	mov	x29, sp
  215040:	sub	sp, sp, #0x10
  215044:	mov	x19, x2
  215048:	sub	x2, x29, #0x10
  21504c:	mov	x20, x1
  215050:	mov	w21, w0
  215054:	bl	214ee8 <parse_ip_address_one>
  215058:	cmp	w0, #0x1
  21505c:	b.lt	215080 <parse_netmask_or_prefixlen+0x54>  // b.tstop
  215060:	cmp	w21, #0xa
  215064:	b.eq	2150f0 <parse_netmask_or_prefixlen+0xc4>  // b.none
  215068:	sub	x0, x29, #0x10
  21506c:	bl	215e70 <in4_addr_netmask_to_prefixlen@plt>
  215070:	mov	w8, w0
  215074:	mov	w0, wzr
  215078:	strb	w8, [x19]
  21507c:	b	21510c <parse_netmask_or_prefixlen+0xe0>
  215080:	cbz	w0, 2150f8 <parse_netmask_or_prefixlen+0xcc>
  215084:	ldr	x22, [x20]
  215088:	mov	w1, #0x3a                  	// #58
  21508c:	mov	x0, x22
  215090:	bl	215b60 <strchr@plt>
  215094:	cbz	x0, 2150f0 <parse_netmask_or_prefixlen+0xc4>
  215098:	mov	x21, x0
  21509c:	sub	x1, x0, x22
  2150a0:	mov	x0, x22
  2150a4:	bl	215ca0 <strnlen@plt>
  2150a8:	add	x8, x0, #0x10
  2150ac:	and	x8, x8, #0xfffffffffffffff0
  2150b0:	mov	x9, sp
  2150b4:	sub	x23, x9, x8
  2150b8:	mov	x2, x0
  2150bc:	mov	sp, x23
  2150c0:	strb	wzr, [x23, x0]
  2150c4:	mov	x0, x23
  2150c8:	mov	x1, x22
  2150cc:	bl	215cb0 <memcpy@plt>
  2150d0:	mov	x0, x23
  2150d4:	mov	x1, x19
  2150d8:	bl	215e80 <safe_atou8@plt>
  2150dc:	tbnz	w0, #31, 21510c <parse_netmask_or_prefixlen+0xe0>
  2150e0:	mov	w0, wzr
  2150e4:	add	x8, x21, #0x1
  2150e8:	str	x8, [x20]
  2150ec:	b	21510c <parse_netmask_or_prefixlen+0xe0>
  2150f0:	mov	w0, #0xffffffea            	// #-22
  2150f4:	b	21510c <parse_netmask_or_prefixlen+0xe0>
  2150f8:	cmp	w21, #0xa
  2150fc:	mov	w8, #0x20                  	// #32
  215100:	mov	w9, #0xffffff80            	// #-128
  215104:	csel	w8, w9, w8, eq  // eq = none
  215108:	strb	w8, [x19]
  21510c:	mov	sp, x29
  215110:	ldp	x20, x19, [sp, #48]
  215114:	ldp	x22, x21, [sp, #32]
  215118:	ldr	x23, [sp, #16]
  21511c:	ldp	x29, x30, [sp], #64
  215120:	ret

0000000000215124 <network_set_hostname>:
  215124:	stp	x29, x30, [sp, #-32]!
  215128:	str	x19, [sp, #16]
  21512c:	mov	x29, sp
  215130:	mov	x19, x2
  215134:	bl	213058 <network_get>
  215138:	cbz	x0, 21514c <network_set_hostname+0x28>
  21513c:	add	x0, x0, #0x38
  215140:	mov	x1, x19
  215144:	bl	215e90 <free_and_strdup@plt>
  215148:	b	215150 <network_set_hostname+0x2c>
  21514c:	mov	w0, #0xffffffed            	// #-19
  215150:	ldr	x19, [sp, #16]
  215154:	ldp	x29, x30, [sp], #32
  215158:	ret

000000000021515c <network_set_address>:
  21515c:	stp	x29, x30, [sp, #-64]!
  215160:	stp	x24, x23, [sp, #16]
  215164:	mov	x23, x1
  215168:	mov	x24, x0
  21516c:	mov	w0, w2
  215170:	mov	x1, x4
  215174:	stp	x22, x21, [sp, #32]
  215178:	stp	x20, x19, [sp, #48]
  21517c:	mov	x29, sp
  215180:	mov	x19, x5
  215184:	mov	x20, x4
  215188:	mov	w21, w3
  21518c:	mov	w22, w2
  215190:	bl	215db0 <in_addr_is_null@plt>
  215194:	cbz	w0, 2151a0 <network_set_address+0x44>
  215198:	mov	w0, wzr
  21519c:	b	2151cc <network_set_address+0x70>
  2151a0:	mov	x0, x24
  2151a4:	mov	x1, x23
  2151a8:	bl	213058 <network_get>
  2151ac:	cbz	x0, 2151c8 <network_set_address+0x6c>
  2151b0:	mov	w1, w22
  2151b4:	mov	w2, w21
  2151b8:	mov	x3, x20
  2151bc:	mov	x4, x19
  2151c0:	bl	2153b8 <address_new>
  2151c4:	b	2151cc <network_set_address+0x70>
  2151c8:	mov	w0, #0xffffffed            	// #-19
  2151cc:	ldp	x20, x19, [sp, #48]
  2151d0:	ldp	x22, x21, [sp, #32]
  2151d4:	ldp	x24, x23, [sp, #16]
  2151d8:	ldp	x29, x30, [sp], #64
  2151dc:	ret

00000000002151e0 <network_set_route>:
  2151e0:	sub	sp, sp, #0x50
  2151e4:	stp	x24, x23, [sp, #32]
  2151e8:	mov	x23, x1
  2151ec:	mov	x24, x0
  2151f0:	mov	w0, w2
  2151f4:	mov	x1, x5
  2151f8:	stp	x29, x30, [sp, #16]
  2151fc:	stp	x22, x21, [sp, #48]
  215200:	stp	x20, x19, [sp, #64]
  215204:	add	x29, sp, #0x10
  215208:	mov	x19, x5
  21520c:	mov	x20, x4
  215210:	mov	w21, w3
  215214:	mov	w22, w2
  215218:	bl	215db0 <in_addr_is_null@plt>
  21521c:	cbz	w0, 215228 <network_set_route+0x48>
  215220:	mov	w0, wzr
  215224:	b	215268 <network_set_route+0x88>
  215228:	mov	x0, x24
  21522c:	mov	x1, x23
  215230:	bl	213058 <network_get>
  215234:	str	x0, [sp, #8]
  215238:	cbnz	x0, 215250 <network_set_route+0x70>
  21523c:	add	x2, sp, #0x8
  215240:	mov	x0, x24
  215244:	mov	x1, x23
  215248:	bl	214d48 <network_new>
  21524c:	tbnz	w0, #31, 215268 <network_set_route+0x88>
  215250:	ldr	x0, [sp, #8]
  215254:	mov	w1, w22
  215258:	mov	w2, w21
  21525c:	mov	x3, x20
  215260:	mov	x4, x19
  215264:	bl	213bdc <route_new>
  215268:	ldp	x20, x19, [sp, #64]
  21526c:	ldp	x22, x21, [sp, #48]
  215270:	ldp	x24, x23, [sp, #32]
  215274:	ldp	x29, x30, [sp, #16]
  215278:	add	sp, sp, #0x50
  21527c:	ret

0000000000215280 <parse_cmdline_ip_mtu_mac>:
  215280:	stp	x29, x30, [sp, #-64]!
  215284:	stp	x20, x19, [sp, #48]
  215288:	mov	x19, x1
  21528c:	mov	x20, x0
  215290:	mov	w1, #0x3a                  	// #58
  215294:	mov	x0, x2
  215298:	str	x23, [sp, #16]
  21529c:	stp	x22, x21, [sp, #32]
  2152a0:	mov	x29, sp
  2152a4:	mov	x22, x2
  2152a8:	bl	215b60 <strchr@plt>
  2152ac:	mov	x21, x0
  2152b0:	cbz	x0, 2152ec <parse_cmdline_ip_mtu_mac+0x6c>
  2152b4:	sub	x1, x21, x22
  2152b8:	mov	x0, x22
  2152bc:	bl	215ca0 <strnlen@plt>
  2152c0:	add	x8, x0, #0x10
  2152c4:	and	x8, x8, #0xfffffffffffffff0
  2152c8:	mov	x9, sp
  2152cc:	sub	x23, x9, x8
  2152d0:	mov	x2, x0
  2152d4:	mov	sp, x23
  2152d8:	strb	wzr, [x23, x0]
  2152dc:	mov	x0, x23
  2152e0:	mov	x1, x22
  2152e4:	bl	215cb0 <memcpy@plt>
  2152e8:	mov	x22, x23
  2152ec:	mov	x0, x20
  2152f0:	mov	x1, x19
  2152f4:	mov	x2, x22
  2152f8:	bl	215490 <network_set_mtu>
  2152fc:	mov	w8, w0
  215300:	and	w0, w0, w0, asr #31
  215304:	tbnz	w8, #31, 215320 <parse_cmdline_ip_mtu_mac+0xa0>
  215308:	cbz	x21, 215320 <parse_cmdline_ip_mtu_mac+0xa0>
  21530c:	add	x2, x21, #0x1
  215310:	mov	x0, x20
  215314:	mov	x1, x19
  215318:	bl	2154cc <network_set_mac_address>
  21531c:	and	w0, w0, w0, asr #31
  215320:	mov	sp, x29
  215324:	ldp	x20, x19, [sp, #48]
  215328:	ldp	x22, x21, [sp, #32]
  21532c:	ldr	x23, [sp, #16]
  215330:	ldp	x29, x30, [sp], #64
  215334:	ret

0000000000215338 <network_set_dns>:
  215338:	sub	sp, sp, #0x50
  21533c:	stp	x20, x19, [sp, #64]
  215340:	mov	x19, x2
  215344:	str	x21, [sp, #48]
  215348:	mov	x20, x1
  21534c:	mov	x21, x0
  215350:	add	x1, sp, #0xc
  215354:	add	x2, sp, #0x10
  215358:	mov	x0, x19
  21535c:	stp	x29, x30, [sp, #32]
  215360:	add	x29, sp, #0x20
  215364:	bl	215ea0 <in_addr_from_string_auto@plt>
  215368:	tbnz	w0, #31, 2153a4 <network_set_dns+0x6c>
  21536c:	mov	x0, x21
  215370:	mov	x1, x20
  215374:	bl	213058 <network_get>
  215378:	str	x0, [x29, #24]
  21537c:	cbnz	x0, 215394 <network_set_dns+0x5c>
  215380:	add	x2, x29, #0x18
  215384:	mov	x0, x21
  215388:	mov	x1, x20
  21538c:	bl	214d48 <network_new>
  215390:	tbnz	w0, #31, 2153a4 <network_set_dns+0x6c>
  215394:	ldr	x8, [x29, #24]
  215398:	mov	x1, x19
  21539c:	add	x0, x8, #0x18
  2153a0:	bl	215eb0 <strv_extend@plt>
  2153a4:	ldp	x20, x19, [sp, #64]
  2153a8:	ldr	x21, [sp, #48]
  2153ac:	ldp	x29, x30, [sp, #32]
  2153b0:	add	sp, sp, #0x50
  2153b4:	ret

00000000002153b8 <address_new>:
  2153b8:	sub	sp, sp, #0x50
  2153bc:	stp	x29, x30, [sp, #16]
  2153c0:	str	x23, [sp, #32]
  2153c4:	stp	x22, x21, [sp, #48]
  2153c8:	stp	x20, x19, [sp, #64]
  2153cc:	add	x29, sp, #0x10
  2153d0:	cbz	x0, 215470 <address_new+0xb8>
  2153d4:	mov	x19, x0
  2153d8:	mov	w0, #0x40                  	// #64
  2153dc:	mov	x20, x4
  2153e0:	mov	x23, x3
  2153e4:	mov	w22, w2
  2153e8:	mov	w21, w1
  2153ec:	bl	214e9c <malloc_multiply>
  2153f0:	cbz	x0, 215450 <address_new+0x98>
  2153f4:	ldr	q0, [x23]
  2153f8:	str	xzr, [x0]
  2153fc:	ldrh	w8, [x29, #28]
  215400:	ldrb	w9, [x29, #30]
  215404:	str	q0, [sp]
  215408:	ldr	q0, [sp]
  21540c:	stur	q0, [x0, #8]
  215410:	ldr	q0, [x20]
  215414:	strb	w22, [x0, #40]
  215418:	strb	w9, [x0, #43]
  21541c:	sturh	w8, [x0, #41]
  215420:	str	w21, [x0, #44]
  215424:	stur	q0, [x0, #24]
  215428:	stp	xzr, xzr, [x0, #48]
  21542c:	ldr	x8, [x19, #72]
  215430:	str	x8, [x0, #48]
  215434:	cbz	x8, 21543c <address_new+0x84>
  215438:	str	x0, [x8, #56]
  21543c:	mov	w8, wzr
  215440:	str	xzr, [x0, #56]
  215444:	str	x0, [x19, #72]
  215448:	str	x19, [x0]
  21544c:	b	215454 <address_new+0x9c>
  215450:	mov	w8, #0xfffffff4            	// #-12
  215454:	ldp	x20, x19, [sp, #64]
  215458:	ldp	x22, x21, [sp, #48]
  21545c:	ldr	x23, [sp, #32]
  215460:	ldp	x29, x30, [sp, #16]
  215464:	mov	w0, w8
  215468:	add	sp, sp, #0x50
  21546c:	ret
  215470:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  215474:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  215478:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  21547c:	add	x1, x1, #0xce4
  215480:	add	x2, x2, #0x208
  215484:	add	x4, x4, #0xbd4
  215488:	mov	w3, #0x56                  	// #86
  21548c:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000215490 <network_set_mtu>:
  215490:	stp	x29, x30, [sp, #-32]!
  215494:	str	x19, [sp, #16]
  215498:	mov	x29, sp
  21549c:	mov	x19, x2
  2154a0:	bl	213058 <network_get>
  2154a4:	cbz	x0, 2154bc <network_set_mtu+0x2c>
  2154a8:	add	x2, x0, #0x10
  2154ac:	mov	w0, wzr
  2154b0:	mov	x1, x19
  2154b4:	bl	215cf0 <parse_mtu@plt>
  2154b8:	b	2154c0 <network_set_mtu+0x30>
  2154bc:	mov	w0, #0xffffffed            	// #-19
  2154c0:	ldr	x19, [sp, #16]
  2154c4:	ldp	x29, x30, [sp], #32
  2154c8:	ret

00000000002154cc <network_set_mac_address>:
  2154cc:	stp	x29, x30, [sp, #-32]!
  2154d0:	str	x19, [sp, #16]
  2154d4:	mov	x29, sp
  2154d8:	mov	x19, x2
  2154dc:	bl	213058 <network_get>
  2154e0:	cbz	x0, 2154f4 <network_set_mac_address+0x28>
  2154e4:	add	x1, x0, #0x8
  2154e8:	mov	x0, x19
  2154ec:	bl	215d00 <ether_addr_from_string@plt>
  2154f0:	b	2154f8 <network_set_mac_address+0x2c>
  2154f4:	mov	w0, #0xffffffed            	// #-19
  2154f8:	ldr	x19, [sp, #16]
  2154fc:	ldp	x29, x30, [sp], #32
  215500:	ret

0000000000215504 <network_set_dhcp_use_dns>:
  215504:	sub	sp, sp, #0x30
  215508:	stp	x20, x19, [sp, #32]
  21550c:	mov	w19, w1
  215510:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  215514:	add	x1, x1, #0x1f2
  215518:	stp	x29, x30, [sp, #16]
  21551c:	add	x29, sp, #0x10
  215520:	mov	x20, x0
  215524:	bl	213058 <network_get>
  215528:	str	x0, [sp, #8]
  21552c:	cbnz	x0, 215548 <network_set_dhcp_use_dns+0x44>
  215530:	adrp	x1, 202000 <parse_argv.options-0x2c0>
  215534:	add	x1, x1, #0x1f2
  215538:	add	x2, sp, #0x8
  21553c:	mov	x0, x20
  215540:	bl	214d48 <network_new>
  215544:	tbnz	w0, #31, 215558 <network_set_dhcp_use_dns+0x54>
  215548:	ldr	x8, [sp, #8]
  21554c:	mov	w0, wzr
  215550:	and	w9, w19, #0x1
  215554:	str	w9, [x8, #64]
  215558:	ldp	x20, x19, [sp, #32]
  21555c:	ldp	x29, x30, [sp, #16]
  215560:	add	sp, sp, #0x30
  215564:	ret

0000000000215568 <netdev_new>:
  215568:	sub	sp, sp, #0x50
  21556c:	stp	x29, x30, [sp, #32]
  215570:	add	x29, sp, #0x20
  215574:	stp	x22, x21, [sp, #48]
  215578:	stp	x20, x19, [sp, #64]
  21557c:	stur	xzr, [x29, #-8]
  215580:	stp	xzr, xzr, [sp, #8]
  215584:	cbz	x0, 21566c <netdev_new+0x104>
  215588:	mov	x20, x0
  21558c:	mov	x0, x2
  215590:	mov	x19, x3
  215594:	mov	x21, x2
  215598:	mov	x22, x1
  21559c:	bl	215e20 <ifname_valid@plt>
  2155a0:	tbz	w0, #0, 215628 <netdev_new+0xc0>
  2155a4:	mov	x0, x22
  2155a8:	bl	215b50 <strdup@plt>
  2155ac:	str	x0, [sp, #16]
  2155b0:	cbz	x0, 215630 <netdev_new+0xc8>
  2155b4:	mov	x0, x21
  2155b8:	bl	215b50 <strdup@plt>
  2155bc:	str	x0, [sp, #8]
  2155c0:	cbz	x0, 215630 <netdev_new+0xc8>
  2155c4:	mov	w0, #0x18                  	// #24
  2155c8:	bl	214e9c <malloc_multiply>
  2155cc:	stur	x0, [x29, #-8]
  2155d0:	cbz	x0, 215630 <netdev_new+0xc8>
  2155d4:	ldp	x8, x9, [sp, #8]
  2155d8:	add	x21, x20, #0x8
  2155dc:	adrp	x1, 226000 <_DYNAMIC+0x120>
  2155e0:	str	wzr, [x0, #16]
  2155e4:	stp	x8, x9, [x0]
  2155e8:	add	x1, x1, #0x2d8
  2155ec:	mov	x0, x21
  2155f0:	stp	xzr, xzr, [sp, #8]
  2155f4:	bl	215e30 <internal_hashmap_ensure_allocated@plt>
  2155f8:	tbnz	w0, #31, 215664 <netdev_new+0xfc>
  2155fc:	ldur	x2, [x29, #-8]
  215600:	ldr	x0, [x21]
  215604:	ldr	x1, [x2]
  215608:	bl	215e40 <hashmap_put@plt>
  21560c:	tbnz	w0, #31, 215664 <netdev_new+0xfc>
  215610:	cbz	x19, 21561c <netdev_new+0xb4>
  215614:	ldur	x8, [x29, #-8]
  215618:	str	x8, [x19]
  21561c:	mov	w20, wzr
  215620:	stur	xzr, [x29, #-8]
  215624:	b	215634 <netdev_new+0xcc>
  215628:	mov	w20, #0xffffffea            	// #-22
  21562c:	b	215634 <netdev_new+0xcc>
  215630:	mov	w20, #0xfffffff4            	// #-12
  215634:	add	x0, sp, #0x8
  215638:	bl	2145b0 <freep>
  21563c:	add	x0, sp, #0x10
  215640:	bl	2145b0 <freep>
  215644:	sub	x0, x29, #0x8
  215648:	bl	2156e8 <netdev_freep>
  21564c:	mov	w0, w20
  215650:	ldp	x20, x19, [sp, #64]
  215654:	ldp	x22, x21, [sp, #48]
  215658:	ldp	x29, x30, [sp, #32]
  21565c:	add	sp, sp, #0x50
  215660:	ret
  215664:	mov	w20, w0
  215668:	b	215634 <netdev_new+0xcc>
  21566c:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  215670:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  215674:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  215678:	add	x1, x1, #0xa9d
  21567c:	add	x2, x2, #0x208
  215680:	add	x4, x4, #0xf0c
  215684:	mov	w3, #0xe4                  	// #228
  215688:	bl	215bd0 <log_assert_failed_realm@plt>

000000000021568c <network_set_vlan>:
  21568c:	stp	x29, x30, [sp, #-48]!
  215690:	str	x21, [sp, #16]
  215694:	stp	x20, x19, [sp, #32]
  215698:	mov	x29, sp
  21569c:	mov	x19, x2
  2156a0:	mov	x20, x1
  2156a4:	mov	x21, x0
  2156a8:	bl	213058 <network_get>
  2156ac:	str	x0, [x29, #24]
  2156b0:	cbnz	x0, 2156c8 <network_set_vlan+0x3c>
  2156b4:	add	x2, x29, #0x18
  2156b8:	mov	x0, x21
  2156bc:	mov	x1, x20
  2156c0:	bl	214d48 <network_new>
  2156c4:	tbnz	w0, #31, 2156d8 <network_set_vlan+0x4c>
  2156c8:	ldr	x8, [x29, #24]
  2156cc:	mov	x1, x19
  2156d0:	add	x0, x8, #0x20
  2156d4:	bl	215e90 <free_and_strdup@plt>
  2156d8:	ldp	x20, x19, [sp, #32]
  2156dc:	ldr	x21, [sp, #16]
  2156e0:	ldp	x29, x30, [sp], #48
  2156e4:	ret

00000000002156e8 <netdev_freep>:
  2156e8:	stp	x29, x30, [sp, #-16]!
  2156ec:	ldr	x0, [x0]
  2156f0:	mov	x29, sp
  2156f4:	cbz	x0, 2156fc <netdev_freep+0x14>
  2156f8:	bl	213e04 <netdev_free>
  2156fc:	ldp	x29, x30, [sp], #16
  215700:	ret

0000000000215704 <network_set_bridge>:
  215704:	stp	x29, x30, [sp, #-48]!
  215708:	str	x21, [sp, #16]
  21570c:	stp	x20, x19, [sp, #32]
  215710:	mov	x29, sp
  215714:	mov	x19, x2
  215718:	mov	x20, x1
  21571c:	mov	x21, x0
  215720:	bl	213058 <network_get>
  215724:	str	x0, [x29, #24]
  215728:	cbnz	x0, 215740 <network_set_bridge+0x3c>
  21572c:	add	x2, x29, #0x18
  215730:	mov	x0, x21
  215734:	mov	x1, x20
  215738:	bl	214d48 <network_new>
  21573c:	tbnz	w0, #31, 215750 <network_set_bridge+0x4c>
  215740:	ldr	x8, [x29, #24]
  215744:	mov	x1, x19
  215748:	add	x0, x8, #0x28
  21574c:	bl	215e90 <free_and_strdup@plt>
  215750:	ldp	x20, x19, [sp, #32]
  215754:	ldr	x21, [sp, #16]
  215758:	ldp	x29, x30, [sp], #48
  21575c:	ret

0000000000215760 <network_set_bond>:
  215760:	stp	x29, x30, [sp, #-48]!
  215764:	str	x21, [sp, #16]
  215768:	stp	x20, x19, [sp, #32]
  21576c:	mov	x29, sp
  215770:	mov	x19, x2
  215774:	mov	x20, x1
  215778:	mov	x21, x0
  21577c:	bl	213058 <network_get>
  215780:	str	x0, [x29, #24]
  215784:	cbnz	x0, 21579c <network_set_bond+0x3c>
  215788:	add	x2, x29, #0x18
  21578c:	mov	x0, x21
  215790:	mov	x1, x20
  215794:	bl	214d48 <network_new>
  215798:	tbnz	w0, #31, 2157ac <network_set_bond+0x4c>
  21579c:	ldr	x8, [x29, #24]
  2157a0:	mov	x1, x19
  2157a4:	add	x0, x8, #0x30
  2157a8:	bl	215e90 <free_and_strdup@plt>
  2157ac:	ldp	x20, x19, [sp, #32]
  2157b0:	ldr	x21, [sp, #16]
  2157b4:	ldp	x29, x30, [sp], #48
  2157b8:	ret

00000000002157bc <link_new>:
  2157bc:	sub	sp, sp, #0x40
  2157c0:	stp	x29, x30, [sp, #16]
  2157c4:	add	x29, sp, #0x10
  2157c8:	str	x21, [sp, #32]
  2157cc:	stp	x20, x19, [sp, #48]
  2157d0:	str	xzr, [x29, #24]
  2157d4:	str	xzr, [sp, #8]
  2157d8:	cbz	x0, 2158a4 <link_new+0xe8>
  2157dc:	mov	x19, x0
  2157e0:	mov	x0, x1
  2157e4:	mov	x20, x2
  2157e8:	mov	x21, x1
  2157ec:	bl	215e20 <ifname_valid@plt>
  2157f0:	tbz	w0, #0, 215868 <link_new+0xac>
  2157f4:	mov	x0, x21
  2157f8:	bl	215b50 <strdup@plt>
  2157fc:	str	x0, [sp, #8]
  215800:	cbz	x0, 215870 <link_new+0xb4>
  215804:	mov	w0, #0x10                  	// #16
  215808:	bl	214e9c <malloc_multiply>
  21580c:	str	x0, [x29, #24]
  215810:	cbz	x0, 215870 <link_new+0xb4>
  215814:	ldr	x8, [sp, #8]
  215818:	str	xzr, [sp, #8]
  21581c:	adrp	x1, 226000 <_DYNAMIC+0x120>
  215820:	add	x1, x1, #0x2d8
  215824:	str	x8, [x0]
  215828:	ldrh	w8, [x20, #4]
  21582c:	ldr	w9, [x20]
  215830:	add	x20, x19, #0x10
  215834:	strh	w8, [x0, #12]
  215838:	str	w9, [x0, #8]
  21583c:	mov	x0, x20
  215840:	bl	215e30 <internal_hashmap_ensure_allocated@plt>
  215844:	tbnz	w0, #31, 215878 <link_new+0xbc>
  215848:	ldr	x2, [x29, #24]
  21584c:	ldr	x0, [x20]
  215850:	ldr	x1, [x2]
  215854:	bl	215e40 <hashmap_put@plt>
  215858:	tbnz	w0, #31, 215878 <link_new+0xbc>
  21585c:	mov	w19, wzr
  215860:	str	xzr, [x29, #24]
  215864:	b	21587c <link_new+0xc0>
  215868:	mov	w19, #0xffffffea            	// #-22
  21586c:	b	21587c <link_new+0xc0>
  215870:	mov	w19, #0xfffffff4            	// #-12
  215874:	b	21587c <link_new+0xc0>
  215878:	mov	w19, w0
  21587c:	add	x0, sp, #0x8
  215880:	bl	2145b0 <freep>
  215884:	add	x0, x29, #0x18
  215888:	bl	2158c4 <link_freep>
  21588c:	mov	w0, w19
  215890:	ldp	x20, x19, [sp, #48]
  215894:	ldr	x21, [sp, #32]
  215898:	ldp	x29, x30, [sp, #16]
  21589c:	add	sp, sp, #0x40
  2158a0:	ret
  2158a4:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2158a8:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  2158ac:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  2158b0:	add	x1, x1, #0xa9d
  2158b4:	add	x2, x2, #0x208
  2158b8:	add	x4, x4, #0xe78
  2158bc:	mov	w3, #0x11c                 	// #284
  2158c0:	bl	215bd0 <log_assert_failed_realm@plt>

00000000002158c4 <link_freep>:
  2158c4:	stp	x29, x30, [sp, #-16]!
  2158c8:	ldr	x0, [x0]
  2158cc:	mov	x29, sp
  2158d0:	cbz	x0, 2158d8 <link_freep+0x14>
  2158d4:	bl	213e3c <link_free>
  2158d8:	ldp	x29, x30, [sp], #16
  2158dc:	ret

00000000002158e0 <address_free>:
  2158e0:	stp	x29, x30, [sp, #-16]!
  2158e4:	mov	x29, sp
  2158e8:	cbz	x0, 215934 <address_free+0x54>
  2158ec:	ldr	x9, [x0]
  2158f0:	cbz	x9, 215930 <address_free+0x50>
  2158f4:	mov	x8, x0
  2158f8:	ldr	x10, [x8, #48]!
  2158fc:	cbz	x10, 215908 <address_free+0x28>
  215900:	ldr	x11, [x0, #56]
  215904:	str	x11, [x10, #56]
  215908:	ldr	x10, [x0, #56]
  21590c:	cbz	x10, 215918 <address_free+0x38>
  215910:	add	x9, x10, #0x30
  215914:	b	215924 <address_free+0x44>
  215918:	ldr	x10, [x9, #72]!
  21591c:	cmp	x10, x0
  215920:	b.ne	21593c <address_free+0x5c>  // b.any
  215924:	ldr	x10, [x8]
  215928:	str	x10, [x9]
  21592c:	stp	xzr, xzr, [x8]
  215930:	bl	2159e0 <mfree>
  215934:	ldp	x29, x30, [sp], #16
  215938:	ret
  21593c:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  215940:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  215944:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  215948:	add	x1, x1, #0xcf1
  21594c:	add	x2, x2, #0x208
  215950:	add	x4, x4, #0xe42
  215954:	mov	w3, #0x4d                  	// #77
  215958:	mov	w0, wzr
  21595c:	bl	215bd0 <log_assert_failed_realm@plt>

0000000000215960 <route_free>:
  215960:	stp	x29, x30, [sp, #-16]!
  215964:	mov	x29, sp
  215968:	cbz	x0, 2159b4 <route_free+0x54>
  21596c:	ldr	x9, [x0]
  215970:	cbz	x9, 2159b0 <route_free+0x50>
  215974:	mov	x8, x0
  215978:	ldr	x10, [x8, #48]!
  21597c:	cbz	x10, 215988 <route_free+0x28>
  215980:	ldr	x11, [x0, #56]
  215984:	str	x11, [x10, #56]
  215988:	ldr	x10, [x0, #56]
  21598c:	cbz	x10, 215998 <route_free+0x38>
  215990:	add	x9, x10, #0x30
  215994:	b	2159a4 <route_free+0x44>
  215998:	ldr	x10, [x9, #80]!
  21599c:	cmp	x10, x0
  2159a0:	b.ne	2159bc <route_free+0x5c>  // b.any
  2159a4:	ldr	x10, [x8]
  2159a8:	str	x10, [x9]
  2159ac:	stp	xzr, xzr, [x8]
  2159b0:	bl	2159e0 <mfree>
  2159b4:	ldp	x29, x30, [sp], #16
  2159b8:	ret
  2159bc:	adrp	x1, 201000 <parse_argv.options-0x12c0>
  2159c0:	adrp	x2, 202000 <parse_argv.options-0x2c0>
  2159c4:	adrp	x4, 201000 <parse_argv.options-0x12c0>
  2159c8:	add	x1, x1, #0xcf1
  2159cc:	add	x2, x2, #0x208
  2159d0:	add	x4, x4, #0xa1b
  2159d4:	mov	w3, #0x71                  	// #113
  2159d8:	mov	w0, wzr
  2159dc:	bl	215bd0 <log_assert_failed_realm@plt>

00000000002159e0 <mfree>:
  2159e0:	stp	x29, x30, [sp, #-16]!
  2159e4:	mov	x29, sp
  2159e8:	bl	215bf0 <free@plt>
  2159ec:	ldp	x29, x30, [sp], #16
  2159f0:	ret

00000000002159f4 <ether_addr_equal>:
  2159f4:	stp	x29, x30, [sp, #-16]!
  2159f8:	mov	x29, sp
  2159fc:	bl	215ec0 <ether_addr_compare@plt>
  215a00:	cmp	w0, #0x0
  215a04:	cset	w0, eq  // eq = none
  215a08:	ldp	x29, x30, [sp], #16
  215a0c:	ret

0000000000215a10 <__libc_csu_init>:
  215a10:	stp	x29, x30, [sp, #-64]!
  215a14:	mov	x29, sp
  215a18:	stp	x19, x20, [sp, #16]
  215a1c:	adrp	x20, 225000 <ether_addr_compare@plt+0xf140>
  215a20:	add	x20, x20, #0xee0
  215a24:	stp	x21, x22, [sp, #32]
  215a28:	adrp	x21, 225000 <ether_addr_compare@plt+0xf140>
  215a2c:	add	x21, x21, #0xed8
  215a30:	sub	x20, x20, x21
  215a34:	mov	w22, w0
  215a38:	stp	x23, x24, [sp, #48]
  215a3c:	mov	x23, x1
  215a40:	mov	x24, x2
  215a44:	bl	215a94 <_init>
  215a48:	cmp	xzr, x20, asr #3
  215a4c:	b.eq	215a78 <__libc_csu_init+0x68>  // b.none
  215a50:	asr	x20, x20, #3
  215a54:	mov	x19, #0x0                   	// #0
  215a58:	ldr	x3, [x21, x19, lsl #3]
  215a5c:	mov	x2, x24
  215a60:	add	x19, x19, #0x1
  215a64:	mov	x1, x23
  215a68:	mov	w0, w22
  215a6c:	blr	x3
  215a70:	cmp	x20, x19
  215a74:	b.ne	215a58 <__libc_csu_init+0x48>  // b.any
  215a78:	ldp	x19, x20, [sp, #16]
  215a7c:	ldp	x21, x22, [sp, #32]
  215a80:	ldp	x23, x24, [sp, #48]
  215a84:	ldp	x29, x30, [sp], #64
  215a88:	ret
  215a8c:	nop

0000000000215a90 <__libc_csu_fini>:
  215a90:	ret

Disassembly of section .init:

0000000000215a94 <_init>:
  215a94:	stp	x29, x30, [sp, #-16]!
  215a98:	mov	x29, sp
  215a9c:	bl	212558 <call_weak_fn>
  215aa0:	ldp	x29, x30, [sp], #16
  215aa4:	ret

Disassembly of section .fini:

0000000000215aa8 <_fini>:
  215aa8:	stp	x29, x30, [sp, #-16]!
  215aac:	mov	x29, sp
  215ab0:	ldp	x29, x30, [sp], #16
  215ab4:	ret

Disassembly of section .plt:

0000000000215ac0 <__libc_start_main@plt-0x20>:
  215ac0:	stp	x16, x30, [sp, #-16]!
  215ac4:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215ac8:	ldr	x17, [x16, #216]
  215acc:	add	x16, x16, #0xd8
  215ad0:	br	x17
  215ad4:	nop
  215ad8:	nop
  215adc:	nop

0000000000215ae0 <__libc_start_main@plt>:
  215ae0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215ae4:	ldr	x17, [x16, #224]
  215ae8:	add	x16, x16, #0xe0
  215aec:	br	x17

0000000000215af0 <abort@plt>:
  215af0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215af4:	ldr	x17, [x16, #232]
  215af8:	add	x16, x16, #0xe8
  215afc:	br	x17

0000000000215b00 <__gmon_start__@plt>:
  215b00:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215b04:	ldr	x17, [x16, #240]
  215b08:	add	x16, x16, #0xf0
  215b0c:	br	x17

0000000000215b10 <ask_password_agent_close@plt>:
  215b10:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215b14:	ldr	x17, [x16, #248]
  215b18:	add	x16, x16, #0xf8
  215b1c:	br	x17

0000000000215b20 <polkit_agent_close@plt>:
  215b20:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215b24:	ldr	x17, [x16, #256]
  215b28:	add	x16, x16, #0x100
  215b2c:	br	x17

0000000000215b30 <pager_close@plt>:
  215b30:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215b34:	ldr	x17, [x16, #264]
  215b38:	add	x16, x16, #0x108
  215b3c:	br	x17

0000000000215b40 <mac_selinux_finish@plt>:
  215b40:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215b44:	ldr	x17, [x16, #272]
  215b48:	add	x16, x16, #0x110
  215b4c:	br	x17

0000000000215b50 <strdup@plt>:
  215b50:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215b54:	ldr	x17, [x16, #280]
  215b58:	add	x16, x16, #0x118
  215b5c:	br	x17

0000000000215b60 <strchr@plt>:
  215b60:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215b64:	ldr	x17, [x16, #288]
  215b68:	add	x16, x16, #0x120
  215b6c:	br	x17

0000000000215b70 <log_oom_internal@plt>:
  215b70:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215b74:	ldr	x17, [x16, #296]
  215b78:	add	x16, x16, #0x128
  215b7c:	br	x17

0000000000215b80 <log_get_max_level_realm@plt>:
  215b80:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215b84:	ldr	x17, [x16, #304]
  215b88:	add	x16, x16, #0x130
  215b8c:	br	x17

0000000000215b90 <log_internal_realm@plt>:
  215b90:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215b94:	ldr	x17, [x16, #312]
  215b98:	add	x16, x16, #0x138
  215b9c:	br	x17

0000000000215ba0 <proc_cmdline_parse@plt>:
  215ba0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215ba4:	ldr	x17, [x16, #320]
  215ba8:	add	x16, x16, #0x140
  215bac:	br	x17

0000000000215bb0 <getopt_long@plt>:
  215bb0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215bb4:	ldr	x17, [x16, #328]
  215bb8:	add	x16, x16, #0x148
  215bbc:	br	x17

0000000000215bc0 <version@plt>:
  215bc0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215bc4:	ldr	x17, [x16, #336]
  215bc8:	add	x16, x16, #0x150
  215bcc:	br	x17

0000000000215bd0 <log_assert_failed_realm@plt>:
  215bd0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215bd4:	ldr	x17, [x16, #344]
  215bd8:	add	x16, x16, #0x158
  215bdc:	br	x17

0000000000215be0 <log_assert_failed_unreachable_realm@plt>:
  215be0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215be4:	ldr	x17, [x16, #352]
  215be8:	add	x16, x16, #0x160
  215bec:	br	x17

0000000000215bf0 <free@plt>:
  215bf0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215bf4:	ldr	x17, [x16, #360]
  215bf8:	add	x16, x16, #0x168
  215bfc:	br	x17

0000000000215c00 <strlen@plt>:
  215c00:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215c04:	ldr	x17, [x16, #368]
  215c08:	add	x16, x16, #0x170
  215c0c:	br	x17

0000000000215c10 <stpcpy@plt>:
  215c10:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215c14:	ldr	x17, [x16, #376]
  215c18:	add	x16, x16, #0x178
  215c1c:	br	x17

0000000000215c20 <mkdir_p@plt>:
  215c20:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215c24:	ldr	x17, [x16, #384]
  215c28:	add	x16, x16, #0x180
  215c2c:	br	x17

0000000000215c30 <printf@plt>:
  215c30:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215c34:	ldr	x17, [x16, #392]
  215c38:	add	x16, x16, #0x188
  215c3c:	br	x17

0000000000215c40 <internal_hashmap_iterate@plt>:
  215c40:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215c44:	ldr	x17, [x16, #400]
  215c48:	add	x16, x16, #0x190
  215c4c:	br	x17

0000000000215c50 <asprintf@plt>:
  215c50:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215c54:	ldr	x17, [x16, #408]
  215c58:	add	x16, x16, #0x198
  215c5c:	br	x17

0000000000215c60 <generator_open_unit_file@plt>:
  215c60:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215c64:	ldr	x17, [x16, #416]
  215c68:	add	x16, x16, #0x1a0
  215c6c:	br	x17

0000000000215c70 <safe_fclose@plt>:
  215c70:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215c74:	ldr	x17, [x16, #424]
  215c78:	add	x16, x16, #0x1a8
  215c7c:	br	x17

0000000000215c80 <internal_hashmap_get@plt>:
  215c80:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215c84:	ldr	x17, [x16, #432]
  215c88:	add	x16, x16, #0x1b0
  215c8c:	br	x17

0000000000215c90 <strcmp@plt>:
  215c90:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215c94:	ldr	x17, [x16, #440]
  215c98:	add	x16, x16, #0x1b8
  215c9c:	br	x17

0000000000215ca0 <strnlen@plt>:
  215ca0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215ca4:	ldr	x17, [x16, #448]
  215ca8:	add	x16, x16, #0x1c0
  215cac:	br	x17

0000000000215cb0 <memcpy@plt>:
  215cb0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215cb4:	ldr	x17, [x16, #456]
  215cb8:	add	x16, x16, #0x1c8
  215cbc:	br	x17

0000000000215cc0 <in_addr_prefix_from_string@plt>:
  215cc0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215cc4:	ldr	x17, [x16, #464]
  215cc8:	add	x16, x16, #0x1d0
  215ccc:	br	x17

0000000000215cd0 <parse_boolean@plt>:
  215cd0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215cd4:	ldr	x17, [x16, #472]
  215cd8:	add	x16, x16, #0x1d8
  215cdc:	br	x17

0000000000215ce0 <extract_first_word@plt>:
  215ce0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215ce4:	ldr	x17, [x16, #480]
  215ce8:	add	x16, x16, #0x1e0
  215cec:	br	x17

0000000000215cf0 <parse_mtu@plt>:
  215cf0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215cf4:	ldr	x17, [x16, #488]
  215cf8:	add	x16, x16, #0x1e8
  215cfc:	br	x17

0000000000215d00 <ether_addr_from_string@plt>:
  215d00:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215d04:	ldr	x17, [x16, #496]
  215d08:	add	x16, x16, #0x1f0
  215d0c:	br	x17

0000000000215d10 <strv_extend_strv@plt>:
  215d10:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215d14:	ldr	x17, [x16, #504]
  215d18:	add	x16, x16, #0x1f8
  215d1c:	br	x17

0000000000215d20 <internal_hashmap_size@plt>:
  215d20:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215d24:	ldr	x17, [x16, #512]
  215d28:	add	x16, x16, #0x200
  215d2c:	br	x17

0000000000215d30 <internal_hashmap_remove@plt>:
  215d30:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215d34:	ldr	x17, [x16, #520]
  215d38:	add	x16, x16, #0x208
  215d3c:	br	x17

0000000000215d40 <strv_free@plt>:
  215d40:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215d44:	ldr	x17, [x16, #528]
  215d48:	add	x16, x16, #0x210
  215d4c:	br	x17

0000000000215d50 <internal_hashmap_first_key_and_value@plt>:
  215d50:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215d54:	ldr	x17, [x16, #536]
  215d58:	add	x16, x16, #0x218
  215d5c:	br	x17

0000000000215d60 <internal_hashmap_free@plt>:
  215d60:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215d64:	ldr	x17, [x16, #544]
  215d68:	add	x16, x16, #0x220
  215d6c:	br	x17

0000000000215d70 <fprintf@plt>:
  215d70:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215d74:	ldr	x17, [x16, #552]
  215d78:	add	x16, x16, #0x228
  215d7c:	br	x17

0000000000215d80 <fwrite@plt>:
  215d80:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215d84:	ldr	x17, [x16, #560]
  215d88:	add	x16, x16, #0x230
  215d8c:	br	x17

0000000000215d90 <ether_addr_to_string@plt>:
  215d90:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215d94:	ldr	x17, [x16, #568]
  215d98:	add	x16, x16, #0x238
  215d9c:	br	x17

0000000000215da0 <in_addr_prefix_to_string@plt>:
  215da0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215da4:	ldr	x17, [x16, #576]
  215da8:	add	x16, x16, #0x240
  215dac:	br	x17

0000000000215db0 <in_addr_is_null@plt>:
  215db0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215db4:	ldr	x17, [x16, #584]
  215db8:	add	x16, x16, #0x248
  215dbc:	br	x17

0000000000215dc0 <in_addr_to_string@plt>:
  215dc0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215dc4:	ldr	x17, [x16, #592]
  215dc8:	add	x16, x16, #0x250
  215dcc:	br	x17

0000000000215dd0 <open_memstream_unlocked@plt>:
  215dd0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215dd4:	ldr	x17, [x16, #600]
  215dd8:	add	x16, x16, #0x258
  215ddc:	br	x17

0000000000215de0 <fputc@plt>:
  215de0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215de4:	ldr	x17, [x16, #608]
  215de8:	add	x16, x16, #0x260
  215dec:	br	x17

0000000000215df0 <fflush_and_check@plt>:
  215df0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215df4:	ldr	x17, [x16, #616]
  215df8:	add	x16, x16, #0x268
  215dfc:	br	x17

0000000000215e00 <hostname_is_valid@plt>:
  215e00:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215e04:	ldr	x17, [x16, #624]
  215e08:	add	x16, x16, #0x270
  215e0c:	br	x17

0000000000215e10 <string_table_lookup@plt>:
  215e10:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215e14:	ldr	x17, [x16, #632]
  215e18:	add	x16, x16, #0x278
  215e1c:	br	x17

0000000000215e20 <ifname_valid@plt>:
  215e20:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215e24:	ldr	x17, [x16, #640]
  215e28:	add	x16, x16, #0x280
  215e2c:	br	x17

0000000000215e30 <internal_hashmap_ensure_allocated@plt>:
  215e30:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215e34:	ldr	x17, [x16, #648]
  215e38:	add	x16, x16, #0x288
  215e3c:	br	x17

0000000000215e40 <hashmap_put@plt>:
  215e40:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215e44:	ldr	x17, [x16, #656]
  215e48:	add	x16, x16, #0x290
  215e4c:	br	x17

0000000000215e50 <malloc@plt>:
  215e50:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215e54:	ldr	x17, [x16, #664]
  215e58:	add	x16, x16, #0x298
  215e5c:	br	x17

0000000000215e60 <in_addr_from_string@plt>:
  215e60:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215e64:	ldr	x17, [x16, #672]
  215e68:	add	x16, x16, #0x2a0
  215e6c:	br	x17

0000000000215e70 <in4_addr_netmask_to_prefixlen@plt>:
  215e70:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215e74:	ldr	x17, [x16, #680]
  215e78:	add	x16, x16, #0x2a8
  215e7c:	br	x17

0000000000215e80 <safe_atou8@plt>:
  215e80:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215e84:	ldr	x17, [x16, #688]
  215e88:	add	x16, x16, #0x2b0
  215e8c:	br	x17

0000000000215e90 <free_and_strdup@plt>:
  215e90:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215e94:	ldr	x17, [x16, #696]
  215e98:	add	x16, x16, #0x2b8
  215e9c:	br	x17

0000000000215ea0 <in_addr_from_string_auto@plt>:
  215ea0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215ea4:	ldr	x17, [x16, #704]
  215ea8:	add	x16, x16, #0x2c0
  215eac:	br	x17

0000000000215eb0 <strv_extend@plt>:
  215eb0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215eb4:	ldr	x17, [x16, #712]
  215eb8:	add	x16, x16, #0x2c8
  215ebc:	br	x17

0000000000215ec0 <ether_addr_compare@plt>:
  215ec0:	adrp	x16, 226000 <_DYNAMIC+0x120>
  215ec4:	ldr	x17, [x16, #720]
  215ec8:	add	x16, x16, #0x2d0
  215ecc:	br	x17
