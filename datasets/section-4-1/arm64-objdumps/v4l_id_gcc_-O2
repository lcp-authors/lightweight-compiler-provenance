
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//v4l_id_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004008d0 <_init>:
  4008d0:	stp	x29, x30, [sp, #-16]!
  4008d4:	mov	x29, sp
  4008d8:	bl	400c10 <call_weak_fn>
  4008dc:	ldp	x29, x30, [sp], #16
  4008e0:	ret

Disassembly of section .plt:

00000000004008f0 <.plt>:
  4008f0:	stp	x16, x30, [sp, #-16]!
  4008f4:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  4008f8:	ldr	x17, [x16, #3976]
  4008fc:	add	x16, x16, #0xf88
  400900:	br	x17
  400904:	nop
  400908:	nop
  40090c:	nop

0000000000400910 <__libc_start_main@plt>:
  400910:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  400914:	ldr	x17, [x16, #3984]
  400918:	add	x16, x16, #0xf90
  40091c:	br	x17

0000000000400920 <__gmon_start__@plt>:
  400920:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  400924:	ldr	x17, [x16, #3992]
  400928:	add	x16, x16, #0xf98
  40092c:	br	x17

0000000000400930 <putchar@plt>:
  400930:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  400934:	ldr	x17, [x16, #4000]
  400938:	add	x16, x16, #0xfa0
  40093c:	br	x17

0000000000400940 <safe_close@plt>:
  400940:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  400944:	ldr	x17, [x16, #4008]
  400948:	add	x16, x16, #0xfa8
  40094c:	br	x17

0000000000400950 <getopt_long@plt>:
  400950:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  400954:	ldr	x17, [x16, #4016]
  400958:	add	x16, x16, #0xfb0
  40095c:	br	x17

0000000000400960 <log_assert_failed_unreachable_realm@plt>:
  400960:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  400964:	ldr	x17, [x16, #4024]
  400968:	add	x16, x16, #0xfb8
  40096c:	br	x17

0000000000400970 <abort@plt>:
  400970:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  400974:	ldr	x17, [x16, #4032]
  400978:	add	x16, x16, #0xfc0
  40097c:	br	x17

0000000000400980 <__stack_chk_fail@plt>:
  400980:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  400984:	ldr	x17, [x16, #4040]
  400988:	add	x16, x16, #0xfc8
  40098c:	br	x17

0000000000400990 <ioctl@plt>:
  400990:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  400994:	ldr	x17, [x16, #4048]
  400998:	add	x16, x16, #0xfd0
  40099c:	br	x17

00000000004009a0 <puts@plt>:
  4009a0:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  4009a4:	ldr	x17, [x16, #4056]
  4009a8:	add	x16, x16, #0xfd8
  4009ac:	br	x17

00000000004009b0 <printf@plt>:
  4009b0:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  4009b4:	ldr	x17, [x16, #4064]
  4009b8:	add	x16, x16, #0xfe0
  4009bc:	br	x17

00000000004009c0 <open64@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xffd0>
  4009c4:	ldr	x17, [x16, #4072]
  4009c8:	add	x16, x16, #0xfe8
  4009cc:	br	x17

Disassembly of section .text:

00000000004009d0 <main>:
  4009d0:	stp	x29, x30, [sp, #-160]!
  4009d4:	adrp	x3, 400000 <_init-0x8d0>
  4009d8:	mov	x4, #0x0                   	// #0
  4009dc:	mov	x29, sp
  4009e0:	stp	x19, x20, [sp, #16]
  4009e4:	adrp	x19, 411000 <__FRAME_END__+0xffd0>
  4009e8:	add	x19, x19, #0xd40
  4009ec:	ldr	x2, [x19]
  4009f0:	str	x2, [sp, #152]
  4009f4:	mov	x2, #0x0                   	// #0
  4009f8:	mov	x20, x1
  4009fc:	adrp	x2, 400000 <_init-0x8d0>
  400a00:	add	x3, x3, #0xeb8
  400a04:	add	x2, x2, #0xd78
  400a08:	stp	x21, x22, [sp, #32]
  400a0c:	bl	400950 <getopt_long@plt>
  400a10:	tbnz	w0, #31, 400a78 <main+0xa8>
  400a14:	cmp	w0, #0x3f
  400a18:	b.eq	400a6c <main+0x9c>  // b.none
  400a1c:	cmp	w0, #0x68
  400a20:	b.ne	400b9c <main+0x1cc>  // b.any
  400a24:	adrp	x1, 412000 <__progname@@GLIBC_2.17>
  400a28:	adrp	x0, 400000 <_init-0x8d0>
  400a2c:	mov	w20, #0xffffffff            	// #-1
  400a30:	add	x0, x0, #0xd80
  400a34:	ldr	x1, [x1]
  400a38:	mov	w21, #0x0                   	// #0
  400a3c:	bl	4009b0 <printf@plt>
  400a40:	mov	w0, w20
  400a44:	bl	400940 <safe_close@plt>
  400a48:	ldr	x1, [sp, #152]
  400a4c:	ldr	x0, [x19]
  400a50:	eor	x0, x1, x0
  400a54:	cbnz	x0, 400b98 <main+0x1c8>
  400a58:	mov	w0, w21
  400a5c:	ldp	x19, x20, [sp, #16]
  400a60:	ldp	x21, x22, [sp, #32]
  400a64:	ldp	x29, x30, [sp], #160
  400a68:	ret
  400a6c:	mov	w20, #0xffffffff            	// #-1
  400a70:	mov	w21, #0xffffffea            	// #-22
  400a74:	b	400a40 <main+0x70>
  400a78:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400a7c:	ldrsw	x0, [x0, #8]
  400a80:	ldr	x0, [x20, x0, lsl #3]
  400a84:	cbz	x0, 400b3c <main+0x16c>
  400a88:	mov	w1, #0x0                   	// #0
  400a8c:	bl	4009c0 <open64@plt>
  400a90:	mov	w20, w0
  400a94:	tbnz	w0, #31, 400b34 <main+0x164>
  400a98:	mov	x1, #0x5600                	// #22016
  400a9c:	add	x2, sp, #0x30
  400aa0:	movk	x1, #0x8068, lsl #16
  400aa4:	bl	400990 <ioctl@plt>
  400aa8:	mov	w21, w0
  400aac:	cbz	w0, 400ab8 <main+0xe8>
  400ab0:	mov	w21, #0x0                   	// #0
  400ab4:	b	400a40 <main+0x70>
  400ab8:	adrp	x0, 400000 <_init-0x8d0>
  400abc:	add	x0, x0, #0xe18
  400ac0:	bl	4009a0 <puts@plt>
  400ac4:	add	x1, sp, #0x40
  400ac8:	adrp	x0, 400000 <_init-0x8d0>
  400acc:	add	x0, x0, #0xe30
  400ad0:	bl	4009b0 <printf@plt>
  400ad4:	adrp	x0, 400000 <_init-0x8d0>
  400ad8:	add	x0, x0, #0xe48
  400adc:	bl	4009b0 <printf@plt>
  400ae0:	ldr	w22, [sp, #132]
  400ae4:	tbnz	w22, #31, 400b48 <main+0x178>
  400ae8:	mov	w0, #0x1001                	// #4097
  400aec:	tst	w22, w0
  400af0:	b.eq	400b00 <main+0x130>  // b.none
  400af4:	adrp	x0, 400000 <_init-0x8d0>
  400af8:	add	x0, x0, #0xe60
  400afc:	bl	4009b0 <printf@plt>
  400b00:	mov	w0, #0x2002                	// #8194
  400b04:	tst	w22, w0
  400b08:	b.eq	400b18 <main+0x148>  // b.none
  400b0c:	adrp	x0, 400000 <_init-0x8d0>
  400b10:	add	x0, x0, #0xe70
  400b14:	bl	4009b0 <printf@plt>
  400b18:	tbnz	w22, #2, 400b74 <main+0x1a4>
  400b1c:	tbnz	w22, #17, 400b60 <main+0x190>
  400b20:	tbnz	w22, #16, 400b50 <main+0x180>
  400b24:	tbnz	w22, #18, 400b88 <main+0x1b8>
  400b28:	mov	w0, #0xa                   	// #10
  400b2c:	bl	400930 <putchar@plt>
  400b30:	b	400a40 <main+0x70>
  400b34:	mov	w21, #0x3                   	// #3
  400b38:	b	400a40 <main+0x70>
  400b3c:	mov	w20, #0xffffffff            	// #-1
  400b40:	mov	w21, #0x2                   	// #2
  400b44:	b	400a40 <main+0x70>
  400b48:	ldr	w22, [sp, #136]
  400b4c:	b	400ae8 <main+0x118>
  400b50:	adrp	x0, 400000 <_init-0x8d0>
  400b54:	add	x0, x0, #0xe98
  400b58:	bl	4009b0 <printf@plt>
  400b5c:	b	400b24 <main+0x154>
  400b60:	adrp	x0, 400000 <_init-0x8d0>
  400b64:	add	x0, x0, #0xe90
  400b68:	bl	4009b0 <printf@plt>
  400b6c:	tbz	w22, #16, 400b24 <main+0x154>
  400b70:	b	400b50 <main+0x180>
  400b74:	adrp	x0, 400000 <_init-0x8d0>
  400b78:	add	x0, x0, #0xe80
  400b7c:	bl	4009b0 <printf@plt>
  400b80:	tbz	w22, #17, 400b20 <main+0x150>
  400b84:	b	400b60 <main+0x190>
  400b88:	adrp	x0, 400000 <_init-0x8d0>
  400b8c:	add	x0, x0, #0xea0
  400b90:	bl	4009b0 <printf@plt>
  400b94:	b	400b28 <main+0x158>
  400b98:	bl	400980 <__stack_chk_fail@plt>
  400b9c:	adrp	x4, 400000 <_init-0x8d0>
  400ba0:	adrp	x1, 400000 <_init-0x8d0>
  400ba4:	adrp	x2, 400000 <_init-0x8d0>
  400ba8:	add	x4, x4, #0xeb0
  400bac:	add	x1, x1, #0xe00
  400bb0:	add	x2, x2, #0xde3
  400bb4:	mov	w3, #0x37                  	// #55
  400bb8:	mov	w0, #0x1                   	// #1
  400bbc:	bl	400960 <log_assert_failed_unreachable_realm@plt>

0000000000400bc0 <_start>:
  400bc0:	mov	x29, #0x0                   	// #0
  400bc4:	mov	x30, #0x0                   	// #0
  400bc8:	mov	x5, x0
  400bcc:	ldr	x1, [sp]
  400bd0:	add	x2, sp, #0x8
  400bd4:	mov	x6, sp
  400bd8:	movz	x0, #0x0, lsl #48
  400bdc:	movk	x0, #0x0, lsl #32
  400be0:	movk	x0, #0x40, lsl #16
  400be4:	movk	x0, #0x9d0
  400be8:	movz	x3, #0x0, lsl #48
  400bec:	movk	x3, #0x0, lsl #32
  400bf0:	movk	x3, #0x40, lsl #16
  400bf4:	movk	x3, #0xcd0
  400bf8:	movz	x4, #0x0, lsl #48
  400bfc:	movk	x4, #0x0, lsl #32
  400c00:	movk	x4, #0x40, lsl #16
  400c04:	movk	x4, #0xd50
  400c08:	bl	400910 <__libc_start_main@plt>
  400c0c:	bl	400970 <abort@plt>

0000000000400c10 <call_weak_fn>:
  400c10:	adrp	x0, 411000 <__FRAME_END__+0xffd0>
  400c14:	ldr	x0, [x0, #4088]
  400c18:	cbz	x0, 400c20 <call_weak_fn+0x10>
  400c1c:	b	400920 <__gmon_start__@plt>
  400c20:	ret
  400c24:	nop

0000000000400c28 <deregister_tm_clones>:
  400c28:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400c2c:	add	x0, x0, #0x0
  400c30:	adrp	x1, 412000 <__progname@@GLIBC_2.17>
  400c34:	add	x1, x1, #0x0
  400c38:	cmp	x1, x0
  400c3c:	b.eq	400c54 <deregister_tm_clones+0x2c>  // b.none
  400c40:	adrp	x1, 400000 <_init-0x8d0>
  400c44:	ldr	x1, [x1, #3432]
  400c48:	cbz	x1, 400c54 <deregister_tm_clones+0x2c>
  400c4c:	mov	x16, x1
  400c50:	br	x16
  400c54:	ret

0000000000400c58 <register_tm_clones>:
  400c58:	adrp	x0, 412000 <__progname@@GLIBC_2.17>
  400c5c:	add	x0, x0, #0x0
  400c60:	adrp	x1, 412000 <__progname@@GLIBC_2.17>
  400c64:	add	x1, x1, #0x0
  400c68:	sub	x1, x1, x0
  400c6c:	lsr	x2, x1, #63
  400c70:	add	x1, x2, x1, asr #3
  400c74:	cmp	xzr, x1, asr #1
  400c78:	asr	x1, x1, #1
  400c7c:	b.eq	400c94 <register_tm_clones+0x3c>  // b.none
  400c80:	adrp	x2, 400000 <_init-0x8d0>
  400c84:	ldr	x2, [x2, #3440]
  400c88:	cbz	x2, 400c94 <register_tm_clones+0x3c>
  400c8c:	mov	x16, x2
  400c90:	br	x16
  400c94:	ret

0000000000400c98 <__do_global_dtors_aux>:
  400c98:	stp	x29, x30, [sp, #-32]!
  400c9c:	mov	x29, sp
  400ca0:	str	x19, [sp, #16]
  400ca4:	adrp	x19, 412000 <__progname@@GLIBC_2.17>
  400ca8:	ldrb	w0, [x19, #12]
  400cac:	cbnz	w0, 400cbc <__do_global_dtors_aux+0x24>
  400cb0:	bl	400c28 <deregister_tm_clones>
  400cb4:	mov	w0, #0x1                   	// #1
  400cb8:	strb	w0, [x19, #12]
  400cbc:	ldr	x19, [sp, #16]
  400cc0:	ldp	x29, x30, [sp], #32
  400cc4:	ret

0000000000400cc8 <frame_dummy>:
  400cc8:	b	400c58 <register_tm_clones>
  400ccc:	nop

0000000000400cd0 <__libc_csu_init>:
  400cd0:	stp	x29, x30, [sp, #-64]!
  400cd4:	mov	x29, sp
  400cd8:	stp	x19, x20, [sp, #16]
  400cdc:	adrp	x20, 411000 <__FRAME_END__+0xffd0>
  400ce0:	add	x20, x20, #0xd38
  400ce4:	stp	x21, x22, [sp, #32]
  400ce8:	adrp	x21, 411000 <__FRAME_END__+0xffd0>
  400cec:	add	x21, x21, #0xd30
  400cf0:	sub	x20, x20, x21
  400cf4:	mov	w22, w0
  400cf8:	stp	x23, x24, [sp, #48]
  400cfc:	mov	x23, x1
  400d00:	mov	x24, x2
  400d04:	bl	4008d0 <_init>
  400d08:	cmp	xzr, x20, asr #3
  400d0c:	b.eq	400d38 <__libc_csu_init+0x68>  // b.none
  400d10:	asr	x20, x20, #3
  400d14:	mov	x19, #0x0                   	// #0
  400d18:	ldr	x3, [x21, x19, lsl #3]
  400d1c:	mov	x2, x24
  400d20:	add	x19, x19, #0x1
  400d24:	mov	x1, x23
  400d28:	mov	w0, w22
  400d2c:	blr	x3
  400d30:	cmp	x20, x19
  400d34:	b.ne	400d18 <__libc_csu_init+0x48>  // b.any
  400d38:	ldp	x19, x20, [sp, #16]
  400d3c:	ldp	x21, x22, [sp, #32]
  400d40:	ldp	x23, x24, [sp, #48]
  400d44:	ldp	x29, x30, [sp], #64
  400d48:	ret
  400d4c:	nop

0000000000400d50 <__libc_csu_fini>:
  400d50:	ret

Disassembly of section .fini:

0000000000400d54 <_fini>:
  400d54:	stp	x29, x30, [sp, #-16]!
  400d58:	mov	x29, sp
  400d5c:	ldp	x29, x30, [sp], #16
  400d60:	ret
