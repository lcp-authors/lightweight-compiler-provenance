
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//scsi_id_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000212670 <_start>:
  212670:	mov	x29, #0x0                   	// #0
  212674:	mov	x30, #0x0                   	// #0
  212678:	mov	x5, x0
  21267c:	ldr	x1, [sp]
  212680:	add	x2, sp, #0x8
  212684:	mov	x6, sp
  212688:	movz	x0, #0x0, lsl #48
  21268c:	movk	x0, #0x0, lsl #32
  212690:	movk	x0, #0x21, lsl #16
  212694:	movk	x0, #0x27c0
  212698:	movz	x3, #0x0, lsl #48
  21269c:	movk	x3, #0x0, lsl #32
  2126a0:	movk	x3, #0x21, lsl #16
  2126a4:	movk	x3, #0x55d0
  2126a8:	movz	x4, #0x0, lsl #48
  2126ac:	movk	x4, #0x0, lsl #32
  2126b0:	movk	x4, #0x21, lsl #16
  2126b4:	movk	x4, #0x5650
  2126b8:	bl	2156b0 <__libc_start_main@plt>
  2126bc:	bl	2156c0 <abort@plt>

00000000002126c0 <call_weak_fn>:
  2126c0:	adrp	x0, 225000 <__fxstat64@plt+0xf5b0>
  2126c4:	ldr	x0, [x0, #3136]
  2126c8:	cbz	x0, 2126d0 <call_weak_fn+0x10>
  2126cc:	b	2156d0 <__gmon_start__@plt>
  2126d0:	ret

00000000002126d4 <deregister_tm_clones>:
  2126d4:	adrp	x0, 235000 <_DYNAMIC+0xf590>
  2126d8:	add	x0, x0, #0xe38
  2126dc:	adrp	x1, 235000 <_DYNAMIC+0xf590>
  2126e0:	add	x1, x1, #0xe38
  2126e4:	cmp	x0, x1
  2126e8:	b.eq	21271c <deregister_tm_clones+0x48>  // b.none
  2126ec:	stp	x29, x30, [sp, #-32]!
  2126f0:	mov	x29, sp
  2126f4:	adrp	x0, 201000 <options-0x758>
  2126f8:	ldr	x0, [x0, #1800]
  2126fc:	str	x0, [sp, #24]
  212700:	mov	x1, x0
  212704:	cbz	x1, 212714 <deregister_tm_clones+0x40>
  212708:	adrp	x0, 235000 <_DYNAMIC+0xf590>
  21270c:	add	x0, x0, #0xe38
  212710:	blr	x1
  212714:	ldp	x29, x30, [sp], #32
  212718:	ret
  21271c:	ret

0000000000212720 <register_tm_clones>:
  212720:	adrp	x0, 235000 <_DYNAMIC+0xf590>
  212724:	add	x0, x0, #0xe38
  212728:	adrp	x1, 235000 <_DYNAMIC+0xf590>
  21272c:	add	x1, x1, #0xe38
  212730:	sub	x0, x0, x1
  212734:	lsr	x1, x0, #63
  212738:	add	x0, x1, x0, asr #3
  21273c:	cmp	xzr, x0, asr #1
  212740:	b.eq	212778 <register_tm_clones+0x58>  // b.none
  212744:	stp	x29, x30, [sp, #-32]!
  212748:	mov	x29, sp
  21274c:	asr	x1, x0, #1
  212750:	adrp	x0, 201000 <options-0x758>
  212754:	ldr	x0, [x0, #1808]
  212758:	str	x0, [sp, #24]
  21275c:	mov	x2, x0
  212760:	cbz	x2, 212770 <register_tm_clones+0x50>
  212764:	adrp	x0, 235000 <_DYNAMIC+0xf590>
  212768:	add	x0, x0, #0xe38
  21276c:	blr	x2
  212770:	ldp	x29, x30, [sp], #32
  212774:	ret
  212778:	ret

000000000021277c <__do_global_dtors_aux>:
  21277c:	adrp	x0, 236000 <config_file+0x1c8>
  212780:	ldrb	w0, [x0, #64]
  212784:	cbnz	w0, 2127a8 <__do_global_dtors_aux+0x2c>
  212788:	stp	x29, x30, [sp, #-16]!
  21278c:	mov	x29, sp
  212790:	bl	2126d4 <deregister_tm_clones>
  212794:	adrp	x0, 236000 <config_file+0x1c8>
  212798:	mov	w1, #0x1                   	// #1
  21279c:	strb	w1, [x0, #64]
  2127a0:	ldp	x29, x30, [sp], #16
  2127a4:	ret
  2127a8:	ret

00000000002127ac <frame_dummy>:
  2127ac:	stp	x29, x30, [sp, #-16]!
  2127b0:	mov	x29, sp
  2127b4:	bl	212720 <register_tm_clones>
  2127b8:	ldp	x29, x30, [sp], #16
  2127bc:	ret

00000000002127c0 <main>:
  2127c0:	stp	x29, x30, [sp, #-48]!
  2127c4:	stp	x28, x21, [sp, #16]
  2127c8:	stp	x20, x19, [sp, #32]
  2127cc:	mov	x29, sp
  2127d0:	sub	sp, sp, #0x210
  2127d4:	mov	w21, w0
  2127d8:	mov	w0, #0x7                   	// #7
  2127dc:	mov	x20, x1
  2127e0:	str	xzr, [sp]
  2127e4:	bl	2156e0 <log_set_target@plt>
  2127e8:	bl	212918 <udev_parse_config>
  2127ec:	mov	w0, #0x1                   	// #1
  2127f0:	mov	w19, #0x1                   	// #1
  2127f4:	bl	2156f0 <log_parse_environment_realm@plt>
  2127f8:	bl	215700 <log_open@plt>
  2127fc:	add	x2, sp, #0xc
  212800:	mov	x3, sp
  212804:	mov	x0, xzr
  212808:	mov	x1, xzr
  21280c:	bl	21293c <get_file_options>
  212810:	tbnz	w0, #31, 2128a8 <main+0xe8>
  212814:	cbnz	w0, 212830 <main+0x70>
  212818:	ldr	x1, [sp]
  21281c:	cbz	x1, 2128f4 <main+0x134>
  212820:	ldr	w0, [sp, #12]
  212824:	add	x2, sp, #0x10
  212828:	bl	212dc8 <set_options>
  21282c:	tbnz	w0, #31, 2128dc <main+0x11c>
  212830:	add	x2, sp, #0x10
  212834:	mov	w0, w21
  212838:	mov	x1, x20
  21283c:	bl	212dc8 <set_options>
  212840:	tbnz	w0, #31, 2128ec <main+0x12c>
  212844:	adrp	x8, 236000 <config_file+0x1c8>
  212848:	ldrb	w8, [x8, #68]
  21284c:	tbz	w8, #0, 212868 <main+0xa8>
  212850:	add	x0, sp, #0x10
  212854:	bl	2130a4 <scsi_id>
  212858:	mov	w19, w0
  21285c:	ldr	x8, [sp]
  212860:	cbnz	x8, 2128b0 <main+0xf0>
  212864:	b	2128c0 <main+0x100>
  212868:	mov	w0, #0x1                   	// #1
  21286c:	mov	w19, #0x1                   	// #1
  212870:	bl	215710 <log_get_max_level_realm@plt>
  212874:	cmp	w0, #0x3
  212878:	b.lt	2128a8 <main+0xe8>  // b.tstop
  21287c:	adrp	x2, 201000 <options-0x758>
  212880:	adrp	x4, 201000 <options-0x758>
  212884:	adrp	x5, 201000 <options-0x758>
  212888:	add	x2, x2, #0xe0d
  21288c:	add	x4, x4, #0xefc
  212890:	add	x5, x5, #0xc4b
  212894:	mov	w0, #0x403                 	// #1027
  212898:	mov	w3, #0x246                 	// #582
  21289c:	mov	w1, wzr
  2128a0:	bl	215720 <log_internal_realm@plt>
  2128a4:	mov	w19, #0x1                   	// #1
  2128a8:	ldr	x8, [sp]
  2128ac:	cbz	x8, 2128c0 <main+0x100>
  2128b0:	ldr	x0, [x8]
  2128b4:	bl	215730 <free@plt>
  2128b8:	ldr	x0, [sp]
  2128bc:	bl	215730 <free@plt>
  2128c0:	bl	215740 <log_close@plt>
  2128c4:	mov	w0, w19
  2128c8:	add	sp, sp, #0x210
  2128cc:	ldp	x20, x19, [sp, #32]
  2128d0:	ldp	x28, x21, [sp, #16]
  2128d4:	ldp	x29, x30, [sp], #48
  2128d8:	ret
  2128dc:	mov	w19, #0x2                   	// #2
  2128e0:	ldr	x8, [sp]
  2128e4:	cbnz	x8, 2128b0 <main+0xf0>
  2128e8:	b	2128c0 <main+0x100>
  2128ec:	mov	w0, #0x1                   	// #1
  2128f0:	bl	215750 <exit@plt>
  2128f4:	adrp	x1, 201000 <options-0x758>
  2128f8:	adrp	x2, 201000 <options-0x758>
  2128fc:	adrp	x4, 201000 <options-0x758>
  212900:	add	x1, x1, #0xdc1
  212904:	add	x2, x2, #0xe0d
  212908:	add	x4, x4, #0xb3e
  21290c:	mov	w0, #0x1                   	// #1
  212910:	mov	w3, #0x237                 	// #567
  212914:	bl	215760 <log_assert_failed_realm@plt>

0000000000212918 <udev_parse_config>:
  212918:	stp	x29, x30, [sp, #-16]!
  21291c:	mov	x0, xzr
  212920:	mov	x1, xzr
  212924:	mov	x2, xzr
  212928:	mov	x3, xzr
  21292c:	mov	x29, sp
  212930:	bl	215770 <udev_parse_config_full@plt>
  212934:	ldp	x29, x30, [sp], #16
  212938:	ret

000000000021293c <get_file_options>:
  21293c:	sub	sp, sp, #0x80
  212940:	stp	x24, x23, [sp, #80]
  212944:	stp	x22, x21, [sp, #96]
  212948:	mov	x22, x1
  21294c:	mov	x23, x0
  212950:	adrp	x0, 235000 <_DYNAMIC+0xf590>
  212954:	adrp	x1, 201000 <options-0x758>
  212958:	stp	x29, x30, [sp, #32]
  21295c:	add	x29, sp, #0x20
  212960:	add	x0, x0, #0xe38
  212964:	add	x1, x1, #0xa0f
  212968:	stp	x28, x27, [sp, #48]
  21296c:	stp	x26, x25, [sp, #64]
  212970:	stp	x20, x19, [sp, #112]
  212974:	mov	x19, x3
  212978:	mov	x20, x2
  21297c:	stur	xzr, [x29, #-8]
  212980:	bl	215780 <fopen64@plt>
  212984:	str	x0, [sp, #16]
  212988:	cbz	x0, 2129d0 <get_file_options+0x94>
  21298c:	mov	x24, x0
  212990:	mov	w0, #0x100                 	// #256
  212994:	bl	215790 <malloc@plt>
  212998:	stur	x0, [x29, #-8]
  21299c:	cbz	x0, 212ba0 <get_file_options+0x264>
  2129a0:	str	xzr, [x19]
  2129a4:	ldur	x0, [x29, #-8]
  2129a8:	mov	w1, #0x100                 	// #256
  2129ac:	mov	x2, x24
  2129b0:	bl	2157a0 <fgets@plt>
  2129b4:	mov	x25, x0
  2129b8:	str	x0, [sp, #8]
  2129bc:	cbz	x0, 212bc4 <get_file_options+0x288>
  2129c0:	adrp	x26, 201000 <options-0x758>
  2129c4:	mov	w21, wzr
  2129c8:	add	x26, x26, #0xe28
  2129cc:	b	212a48 <get_file_options+0x10c>
  2129d0:	bl	2157b0 <__errno_location@plt>
  2129d4:	ldr	w19, [x0]
  2129d8:	cmp	w19, #0x2
  2129dc:	b.eq	212cf0 <get_file_options+0x3b4>  // b.none
  2129e0:	mov	w0, #0x1                   	// #1
  2129e4:	bl	215710 <log_get_max_level_realm@plt>
  2129e8:	cmp	w0, #0x3
  2129ec:	b.lt	212a20 <get_file_options+0xe4>  // b.tstop
  2129f0:	adrp	x2, 201000 <options-0x758>
  2129f4:	adrp	x4, 201000 <options-0x758>
  2129f8:	adrp	x5, 201000 <options-0x758>
  2129fc:	adrp	x6, 235000 <_DYNAMIC+0xf590>
  212a00:	add	x2, x2, #0xe0d
  212a04:	add	x4, x4, #0xd62
  212a08:	add	x5, x5, #0xe64
  212a0c:	add	x6, x6, #0xe38
  212a10:	mov	w0, #0x403                 	// #1027
  212a14:	mov	w3, #0xa3                  	// #163
  212a18:	mov	w1, w19
  212a1c:	bl	215720 <log_internal_realm@plt>
  212a20:	mov	w21, #0xffffffff            	// #-1
  212a24:	b	212cf4 <get_file_options+0x3b8>
  212a28:	cbz	x25, 212c6c <get_file_options+0x330>
  212a2c:	ldur	x0, [x29, #-8]
  212a30:	mov	w1, #0x100                 	// #256
  212a34:	mov	x2, x24
  212a38:	bl	2157a0 <fgets@plt>
  212a3c:	mov	x25, x0
  212a40:	str	x0, [sp, #8]
  212a44:	cbz	x0, 212bc4 <get_file_options+0x288>
  212a48:	ldur	x0, [x29, #-8]
  212a4c:	add	w21, w21, #0x1
  212a50:	bl	2157c0 <strlen@plt>
  212a54:	add	x8, x0, x25
  212a58:	ldurb	w8, [x8, #-1]
  212a5c:	cmp	w8, #0xa
  212a60:	b.ne	212bd4 <get_file_options+0x298>  // b.any
  212a64:	bl	2157d0 <__ctype_b_loc@plt>
  212a68:	ldr	x9, [sp, #8]
  212a6c:	ldr	x10, [x0]
  212a70:	ldrb	w8, [x9]
  212a74:	ldrh	w10, [x10, x8, lsl #1]
  212a78:	tbz	w10, #13, 212a94 <get_file_options+0x158>
  212a7c:	add	x9, x9, #0x1
  212a80:	str	x9, [sp, #8]
  212a84:	ldr	x10, [x0]
  212a88:	ldrb	w8, [x9], #1
  212a8c:	ldrh	w10, [x10, x8, lsl #1]
  212a90:	tbnz	w10, #13, 212a80 <get_file_options+0x144>
  212a94:	cbz	w8, 212a2c <get_file_options+0xf0>
  212a98:	cmp	w8, #0x23
  212a9c:	b.eq	212a2c <get_file_options+0xf0>  // b.none
  212aa0:	add	x0, sp, #0x8
  212aa4:	mov	x1, x26
  212aa8:	bl	2157e0 <strsep@plt>
  212aac:	mov	x28, x0
  212ab0:	cbz	x0, 212ac8 <get_file_options+0x18c>
  212ab4:	adrp	x1, 201000 <options-0x758>
  212ab8:	mov	x0, x28
  212abc:	add	x1, x1, #0x958
  212ac0:	bl	2157f0 <strcasecmp@plt>
  212ac4:	cbz	w0, 212af0 <get_file_options+0x1b4>
  212ac8:	mov	x27, xzr
  212acc:	mov	x25, xzr
  212ad0:	cbz	x28, 212b40 <get_file_options+0x204>
  212ad4:	adrp	x1, 201000 <options-0x758>
  212ad8:	mov	x0, x28
  212adc:	add	x1, x1, #0xd73
  212ae0:	bl	2157f0 <strcasecmp@plt>
  212ae4:	cbz	w0, 212b30 <get_file_options+0x1f4>
  212ae8:	mov	x28, xzr
  212aec:	b	212b40 <get_file_options+0x204>
  212af0:	add	x0, sp, #0x8
  212af4:	bl	213330 <get_value>
  212af8:	mov	x25, x0
  212afc:	cbz	x0, 212c74 <get_file_options+0x338>
  212b00:	add	x0, sp, #0x8
  212b04:	mov	x1, x26
  212b08:	bl	2157e0 <strsep@plt>
  212b0c:	mov	x28, x0
  212b10:	cbz	x0, 212b28 <get_file_options+0x1ec>
  212b14:	adrp	x1, 201000 <options-0x758>
  212b18:	mov	x0, x28
  212b1c:	add	x1, x1, #0xb27
  212b20:	bl	2157f0 <strcasecmp@plt>
  212b24:	cbz	w0, 212b7c <get_file_options+0x240>
  212b28:	mov	x27, xzr
  212b2c:	b	212ad0 <get_file_options+0x194>
  212b30:	add	x0, sp, #0x8
  212b34:	bl	213330 <get_value>
  212b38:	mov	x28, x0
  212b3c:	cbz	x0, 212c98 <get_file_options+0x35c>
  212b40:	cbz	x28, 212c24 <get_file_options+0x2e8>
  212b44:	cbz	x27, 212b4c <get_file_options+0x210>
  212b48:	cbz	x25, 212c24 <get_file_options+0x2e8>
  212b4c:	cbz	x23, 212a28 <get_file_options+0xec>
  212b50:	cbz	x25, 212a2c <get_file_options+0xf0>
  212b54:	mov	x0, x23
  212b58:	mov	x1, x25
  212b5c:	bl	2133dc <startswith>
  212b60:	cbz	x0, 212a2c <get_file_options+0xf0>
  212b64:	cbz	x27, 212c6c <get_file_options+0x330>
  212b68:	mov	x0, x22
  212b6c:	mov	x1, x27
  212b70:	bl	2133dc <startswith>
  212b74:	cbz	x0, 212a2c <get_file_options+0xf0>
  212b78:	b	212c6c <get_file_options+0x330>
  212b7c:	add	x0, sp, #0x8
  212b80:	bl	213330 <get_value>
  212b84:	mov	x27, x0
  212b88:	cbz	x0, 212cbc <get_file_options+0x380>
  212b8c:	add	x0, sp, #0x8
  212b90:	mov	x1, x26
  212b94:	bl	2157e0 <strsep@plt>
  212b98:	mov	x28, x0
  212b9c:	b	212ad0 <get_file_options+0x194>
  212ba0:	adrp	x1, 201000 <options-0x758>
  212ba4:	adrp	x3, 201000 <options-0x758>
  212ba8:	add	x1, x1, #0xe0d
  212bac:	add	x3, x3, #0xd62
  212bb0:	mov	w0, #0x1                   	// #1
  212bb4:	mov	w2, #0xaf                  	// #175
  212bb8:	bl	215800 <log_oom_internal@plt>
  212bbc:	mov	w21, w0
  212bc0:	b	212cf4 <get_file_options+0x3b8>
  212bc4:	mov	w21, wzr
  212bc8:	mov	x28, xzr
  212bcc:	mov	x27, xzr
  212bd0:	b	212ce0 <get_file_options+0x3a4>
  212bd4:	mov	w0, #0x1                   	// #1
  212bd8:	bl	215710 <log_get_max_level_realm@plt>
  212bdc:	cmp	w0, #0x3
  212be0:	b.lt	212c10 <get_file_options+0x2d4>  // b.tstop
  212be4:	adrp	x2, 201000 <options-0x758>
  212be8:	adrp	x4, 201000 <options-0x758>
  212bec:	adrp	x5, 202000 <hex_str+0x1b1>
  212bf0:	add	x2, x2, #0xe0d
  212bf4:	add	x4, x4, #0xd62
  212bf8:	add	x5, x5, #0x394
  212bfc:	mov	w0, #0x403                 	// #1027
  212c00:	mov	w3, #0xbb                  	// #187
  212c04:	mov	w1, wzr
  212c08:	mov	w6, w21
  212c0c:	bl	215720 <log_internal_realm@plt>
  212c10:	mov	w21, wzr
  212c14:	mov	x28, xzr
  212c18:	mov	x27, xzr
  212c1c:	mov	x25, xzr
  212c20:	b	212ce0 <get_file_options+0x3a4>
  212c24:	mov	w0, #0x1                   	// #1
  212c28:	bl	215710 <log_get_max_level_realm@plt>
  212c2c:	cmp	w0, #0x3
  212c30:	b.lt	212c64 <get_file_options+0x328>  // b.tstop
  212c34:	ldur	x7, [x29, #-8]
  212c38:	adrp	x2, 201000 <options-0x758>
  212c3c:	adrp	x4, 201000 <options-0x758>
  212c40:	adrp	x5, 202000 <hex_str+0x1b1>
  212c44:	add	x2, x2, #0xe0d
  212c48:	add	x4, x4, #0xd62
  212c4c:	add	x5, x5, #0x44c
  212c50:	mov	w0, #0x403                 	// #1027
  212c54:	mov	w3, #0xec                  	// #236
  212c58:	mov	w1, wzr
  212c5c:	mov	w6, w21
  212c60:	bl	215720 <log_internal_realm@plt>
  212c64:	mov	w21, #0xffffffff            	// #-1
  212c68:	b	212ce0 <get_file_options+0x3a4>
  212c6c:	mov	w21, wzr
  212c70:	b	212ce0 <get_file_options+0x3a4>
  212c74:	adrp	x1, 201000 <options-0x758>
  212c78:	adrp	x3, 201000 <options-0x758>
  212c7c:	add	x1, x1, #0xe0d
  212c80:	add	x3, x3, #0xd62
  212c84:	mov	w0, #0x1                   	// #1
  212c88:	mov	w2, #0xce                  	// #206
  212c8c:	bl	215800 <log_oom_internal@plt>
  212c90:	mov	w21, w0
  212c94:	b	212bc8 <get_file_options+0x28c>
  212c98:	adrp	x1, 201000 <options-0x758>
  212c9c:	adrp	x3, 201000 <options-0x758>
  212ca0:	add	x1, x1, #0xe0d
  212ca4:	add	x3, x3, #0xd62
  212ca8:	mov	w0, #0x1                   	// #1
  212cac:	mov	w2, #0xe2                  	// #226
  212cb0:	bl	215800 <log_oom_internal@plt>
  212cb4:	mov	w21, w0
  212cb8:	b	212ce0 <get_file_options+0x3a4>
  212cbc:	adrp	x1, 201000 <options-0x758>
  212cc0:	adrp	x3, 201000 <options-0x758>
  212cc4:	add	x1, x1, #0xe0d
  212cc8:	add	x3, x3, #0xd62
  212ccc:	mov	w0, #0x1                   	// #1
  212cd0:	mov	w2, #0xd7                  	// #215
  212cd4:	bl	215800 <log_oom_internal@plt>
  212cd8:	mov	w21, w0
  212cdc:	mov	x28, xzr
  212ce0:	cbnz	w21, 212cf4 <get_file_options+0x3b8>
  212ce4:	cbnz	x28, 212d28 <get_file_options+0x3ec>
  212ce8:	cbnz	x27, 212d28 <get_file_options+0x3ec>
  212cec:	cbnz	x25, 212d28 <get_file_options+0x3ec>
  212cf0:	mov	w21, #0x1                   	// #1
  212cf4:	add	x0, sp, #0x10
  212cf8:	bl	213318 <fclosep>
  212cfc:	sub	x0, x29, #0x8
  212d00:	bl	213300 <freep>
  212d04:	mov	w0, w21
  212d08:	ldp	x20, x19, [sp, #112]
  212d0c:	ldp	x22, x21, [sp, #96]
  212d10:	ldp	x24, x23, [sp, #80]
  212d14:	ldp	x26, x25, [sp, #64]
  212d18:	ldp	x28, x27, [sp, #48]
  212d1c:	ldp	x29, x30, [sp, #32]
  212d20:	add	sp, sp, #0x80
  212d24:	ret
  212d28:	ldur	x0, [x29, #-8]
  212d2c:	mov	x1, x28
  212d30:	bl	215810 <strcpy@plt>
  212d34:	ldur	x0, [x29, #-8]
  212d38:	bl	21342c <argc_count>
  212d3c:	add	w21, w0, #0x2
  212d40:	sxtw	x0, w21
  212d44:	mov	w1, #0x8                   	// #8
  212d48:	bl	215820 <calloc@plt>
  212d4c:	str	x0, [x19]
  212d50:	cbz	x0, 212dac <get_file_options+0x470>
  212d54:	str	w21, [x20]
  212d58:	ldur	x8, [x29, #-8]
  212d5c:	ldr	x9, [x19]
  212d60:	str	x8, [x9]
  212d64:	ldr	w8, [x20]
  212d68:	cmp	w8, #0x2
  212d6c:	b.lt	212da0 <get_file_options+0x464>  // b.tstop
  212d70:	adrp	x21, 201000 <options-0x758>
  212d74:	mov	w22, #0x1                   	// #1
  212d78:	add	x21, x21, #0xd2f
  212d7c:	sub	x0, x29, #0x8
  212d80:	mov	x1, x21
  212d84:	bl	2157e0 <strsep@plt>
  212d88:	ldr	x8, [x19]
  212d8c:	str	x0, [x8, x22, lsl #3]
  212d90:	ldrsw	x8, [x20]
  212d94:	add	x22, x22, #0x1
  212d98:	cmp	x22, x8
  212d9c:	b.lt	212d7c <get_file_options+0x440>  // b.tstop
  212da0:	mov	w21, wzr
  212da4:	stur	xzr, [x29, #-8]
  212da8:	b	212cf4 <get_file_options+0x3b8>
  212dac:	adrp	x1, 201000 <options-0x758>
  212db0:	adrp	x3, 201000 <options-0x758>
  212db4:	add	x1, x1, #0xe0d
  212db8:	add	x3, x3, #0xd62
  212dbc:	mov	w0, #0x1                   	// #1
  212dc0:	mov	w2, #0x10c                 	// #268
  212dc4:	b	212bb8 <get_file_options+0x27c>

0000000000212dc8 <set_options>:
  212dc8:	stp	x29, x30, [sp, #-96]!
  212dcc:	stp	x20, x19, [sp, #80]
  212dd0:	mov	x19, x2
  212dd4:	adrp	x2, 201000 <options-0x758>
  212dd8:	adrp	x3, 201000 <options-0x758>
  212ddc:	stp	x28, x27, [sp, #16]
  212de0:	stp	x26, x25, [sp, #32]
  212de4:	adrp	x27, 236000 <config_file+0x1c8>
  212de8:	mov	w26, #0x1                   	// #1
  212dec:	add	x2, x2, #0xfe1
  212df0:	add	x3, x3, #0x758
  212df4:	mov	x4, xzr
  212df8:	stp	x24, x23, [sp, #48]
  212dfc:	stp	x22, x21, [sp, #64]
  212e00:	mov	x29, sp
  212e04:	mov	x20, x1
  212e08:	mov	w21, w0
  212e0c:	str	w26, [x27, #752]
  212e10:	bl	215830 <getopt_long@plt>
  212e14:	tbnz	w0, #31, 212f80 <set_options+0x1b8>
  212e18:	adrp	x24, 201000 <options-0x758>
  212e1c:	adrp	x22, 201000 <options-0x758>
  212e20:	adrp	x23, 201000 <options-0x758>
  212e24:	add	x24, x24, #0x718
  212e28:	add	x22, x22, #0xfe1
  212e2c:	add	x23, x23, #0x758
  212e30:	adrp	x25, 236000 <config_file+0x1c8>
  212e34:	b	212e5c <set_options+0x94>
  212e38:	adrp	x8, 236000 <config_file+0x1c8>
  212e3c:	strb	w26, [x8, #77]
  212e40:	mov	w0, w21
  212e44:	mov	x1, x20
  212e48:	mov	x2, x22
  212e4c:	mov	x3, x23
  212e50:	mov	x4, xzr
  212e54:	bl	215830 <getopt_long@plt>
  212e58:	tbnz	w0, #31, 212f80 <set_options+0x1b8>
  212e5c:	sub	w8, w0, #0x3f
  212e60:	cmp	w8, #0x39
  212e64:	b.hi	213060 <set_options+0x298>  // b.pmore
  212e68:	adr	x9, 212e38 <set_options+0x70>
  212e6c:	ldrb	w10, [x24, x8]
  212e70:	add	x9, x9, x10, lsl #2
  212e74:	br	x9
  212e78:	adrp	x8, 236000 <config_file+0x1c8>
  212e7c:	strb	wzr, [x8, #69]
  212e80:	b	212e40 <set_options+0x78>
  212e84:	adrp	x8, 236000 <config_file+0x1c8>
  212e88:	strb	w26, [x8, #76]
  212e8c:	b	212e40 <set_options+0x78>
  212e90:	ldr	x28, [x25, #760]
  212e94:	adrp	x1, 201000 <options-0x758>
  212e98:	add	x1, x1, #0xb55
  212e9c:	mov	x0, x28
  212ea0:	bl	215840 <strcmp@plt>
  212ea4:	cbz	w0, 212f60 <set_options+0x198>
  212ea8:	adrp	x1, 201000 <options-0x758>
  212eac:	mov	x0, x28
  212eb0:	add	x1, x1, #0xff1
  212eb4:	bl	215840 <strcmp@plt>
  212eb8:	cbz	w0, 212f70 <set_options+0x1a8>
  212ebc:	adrp	x1, 201000 <options-0x758>
  212ec0:	mov	x0, x28
  212ec4:	add	x1, x1, #0x9a5
  212ec8:	bl	215840 <strcmp@plt>
  212ecc:	cbnz	w0, 213014 <set_options+0x24c>
  212ed0:	adrp	x8, 236000 <config_file+0x1c8>
  212ed4:	mov	w9, #0xffffff7d            	// #-131
  212ed8:	str	w9, [x8, #72]
  212edc:	b	212e40 <set_options+0x78>
  212ee0:	ldr	x28, [x25, #760]
  212ee4:	mov	x0, x28
  212ee8:	bl	215850 <atoi@plt>
  212eec:	sub	w8, w0, #0x3
  212ef0:	cmp	w8, #0x2
  212ef4:	adrp	x8, 236000 <config_file+0x1c8>
  212ef8:	str	w0, [x8, #56]
  212efc:	b.cc	212e40 <set_options+0x78>  // b.lo, b.ul, b.last
  212f00:	b	212fd8 <set_options+0x210>
  212f04:	mov	w0, wzr
  212f08:	bl	2156e0 <log_set_target@plt>
  212f0c:	mov	w0, #0x1                   	// #1
  212f10:	mov	w1, #0x7                   	// #7
  212f14:	bl	215860 <log_set_max_level_realm@plt>
  212f18:	bl	215700 <log_open@plt>
  212f1c:	b	212e40 <set_options+0x78>
  212f20:	ldr	x2, [x25, #760]
  212f24:	adrp	x0, 235000 <_DYNAMIC+0xf590>
  212f28:	mov	w1, #0x200                 	// #512
  212f2c:	add	x0, x0, #0xe38
  212f30:	bl	215870 <strscpy@plt>
  212f34:	b	212e40 <set_options+0x78>
  212f38:	adrp	x8, 236000 <config_file+0x1c8>
  212f3c:	strb	w26, [x8, #69]
  212f40:	b	212e40 <set_options+0x78>
  212f44:	ldr	x2, [x25, #760]
  212f48:	adrp	x8, 236000 <config_file+0x1c8>
  212f4c:	mov	w1, #0x200                 	// #512
  212f50:	mov	x0, x19
  212f54:	strb	w26, [x8, #68]
  212f58:	bl	215870 <strscpy@plt>
  212f5c:	b	212e40 <set_options+0x78>
  212f60:	adrp	x8, 236000 <config_file+0x1c8>
  212f64:	mov	w9, #0x80                  	// #128
  212f68:	str	w9, [x8, #72]
  212f6c:	b	212e40 <set_options+0x78>
  212f70:	adrp	x8, 236000 <config_file+0x1c8>
  212f74:	mov	w9, #0x83                  	// #131
  212f78:	str	w9, [x8, #72]
  212f7c:	b	212e40 <set_options+0x78>
  212f80:	ldrsw	x8, [x27, #752]
  212f84:	cmp	w8, w21
  212f88:	b.ge	212fb0 <set_options+0x1e8>  // b.tcont
  212f8c:	adrp	x9, 236000 <config_file+0x1c8>
  212f90:	ldrb	w10, [x9, #68]
  212f94:	tbnz	w10, #0, 212fb0 <set_options+0x1e8>
  212f98:	mov	w10, #0x1                   	// #1
  212f9c:	strb	w10, [x9, #68]
  212fa0:	ldr	x2, [x20, x8, lsl #3]
  212fa4:	mov	w1, #0x200                 	// #512
  212fa8:	mov	x0, x19
  212fac:	bl	215870 <strscpy@plt>
  212fb0:	mov	w0, wzr
  212fb4:	b	212fbc <set_options+0x1f4>
  212fb8:	mov	w0, #0xffffffff            	// #-1
  212fbc:	ldp	x20, x19, [sp, #80]
  212fc0:	ldp	x22, x21, [sp, #64]
  212fc4:	ldp	x24, x23, [sp, #48]
  212fc8:	ldp	x26, x25, [sp, #32]
  212fcc:	ldp	x28, x27, [sp, #16]
  212fd0:	ldp	x29, x30, [sp], #96
  212fd4:	ret
  212fd8:	mov	w0, #0x1                   	// #1
  212fdc:	bl	215710 <log_get_max_level_realm@plt>
  212fe0:	cmp	w0, #0x3
  212fe4:	b.lt	213058 <set_options+0x290>  // b.tstop
  212fe8:	adrp	x2, 201000 <options-0x758>
  212fec:	adrp	x4, 202000 <hex_str+0x1b1>
  212ff0:	adrp	x5, 201000 <options-0x758>
  212ff4:	mov	w1, #0x16                  	// #22
  212ff8:	add	x2, x2, #0xe0d
  212ffc:	add	x4, x4, #0x407
  213000:	add	x5, x5, #0xbe4
  213004:	mov	w0, #0x403                 	// #1027
  213008:	movk	w1, #0x4000, lsl #16
  21300c:	mov	w3, #0x167                 	// #359
  213010:	b	21304c <set_options+0x284>
  213014:	mov	w0, #0x1                   	// #1
  213018:	bl	215710 <log_get_max_level_realm@plt>
  21301c:	cmp	w0, #0x3
  213020:	b.lt	213058 <set_options+0x290>  // b.tstop
  213024:	adrp	x2, 201000 <options-0x758>
  213028:	adrp	x4, 202000 <hex_str+0x1b1>
  21302c:	adrp	x5, 201000 <options-0x758>
  213030:	mov	w1, #0x16                  	// #22
  213034:	add	x2, x2, #0xe0d
  213038:	add	x4, x4, #0x407
  21303c:	add	x5, x5, #0x9b1
  213040:	mov	w0, #0x403                 	// #1027
  213044:	movk	w1, #0x4000, lsl #16
  213048:	mov	w3, #0x15f                 	// #351
  21304c:	mov	x6, x28
  213050:	bl	215720 <log_internal_realm@plt>
  213054:	b	212fbc <set_options+0x1f4>
  213058:	mov	w0, #0xffffffea            	// #-22
  21305c:	b	212fbc <set_options+0x1f4>
  213060:	adrp	x1, 201000 <options-0x758>
  213064:	adrp	x2, 201000 <options-0x758>
  213068:	adrp	x4, 201000 <options-0x758>
  21306c:	add	x1, x1, #0xf41
  213070:	add	x2, x2, #0xe0d
  213074:	add	x4, x4, #0xbfc
  213078:	mov	w0, #0x1                   	// #1
  21307c:	mov	w3, #0x180                 	// #384
  213080:	bl	215880 <log_assert_failed_unreachable_realm@plt>
  213084:	adrp	x0, 201000 <options-0x758>
  213088:	add	x0, x0, #0x9c8
  21308c:	bl	215890 <puts@plt>
  213090:	mov	w0, wzr
  213094:	bl	215750 <exit@plt>
  213098:	bl	213460 <help>
  21309c:	mov	w0, wzr
  2130a0:	bl	215750 <exit@plt>

00000000002130a4 <scsi_id>:
  2130a4:	stp	x29, x30, [sp, #-48]!
  2130a8:	stp	x28, x21, [sp, #16]
  2130ac:	stp	x20, x19, [sp, #32]
  2130b0:	mov	x29, sp
  2130b4:	sub	sp, sp, #0x4c0
  2130b8:	mov	x19, x0
  2130bc:	add	x0, sp, #0x110
  2130c0:	mov	w2, #0x3b0                 	// #944
  2130c4:	mov	w1, wzr
  2130c8:	bl	2158a0 <memset@plt>
  2130cc:	add	x0, sp, #0x110
  2130d0:	mov	x1, x19
  2130d4:	bl	213484 <set_inq_values>
  2130d8:	tbnz	w0, #31, 2132cc <scsi_id+0x228>
  2130dc:	add	x0, sp, #0x10c
  2130e0:	add	x1, sp, #0x108
  2130e4:	bl	213560 <per_dev_options>
  2130e8:	ldr	w8, [sp, #268]
  2130ec:	cbz	w8, 2132cc <scsi_id+0x228>
  2130f0:	ldr	w2, [sp, #264]
  2130f4:	add	x0, sp, #0x110
  2130f8:	mov	w3, #0x100                 	// #256
  2130fc:	mov	x1, x19
  213100:	add	x20, sp, #0x110
  213104:	bl	213c18 <scsi_get_serial>
  213108:	adrp	x8, 236000 <config_file+0x1c8>
  21310c:	ldrb	w8, [x8, #77]
  213110:	cmp	w8, #0x1
  213114:	b.ne	213288 <scsi_id+0x1e4>  // b.any
  213118:	adrp	x0, 202000 <hex_str+0x1b1>
  21311c:	add	x0, x0, #0x35f
  213120:	bl	215890 <puts@plt>
  213124:	adrp	x0, 201000 <options-0x758>
  213128:	adrp	x1, 236000 <config_file+0x1c8>
  21312c:	add	x0, x0, #0xd32
  213130:	add	x1, x1, #0x4e
  213134:	bl	2158b0 <printf@plt>
  213138:	adrp	x0, 201000 <options-0x758>
  21313c:	adrp	x1, 236000 <config_file+0x1c8>
  213140:	add	x0, x0, #0xe76
  213144:	add	x1, x1, #0x8e
  213148:	bl	2158b0 <printf@plt>
  21314c:	adrp	x0, 201000 <options-0x758>
  213150:	adrp	x1, 236000 <config_file+0x1c8>
  213154:	add	x0, x0, #0xdc9
  213158:	add	x1, x1, #0x18e
  21315c:	bl	2158b0 <printf@plt>
  213160:	adrp	x0, 201000 <options-0x758>
  213164:	adrp	x1, 236000 <config_file+0x1c8>
  213168:	add	x0, x0, #0xb2d
  21316c:	add	x1, x1, #0x1ce
  213170:	bl	2158b0 <printf@plt>
  213174:	adrp	x0, 202000 <hex_str+0x1b1>
  213178:	adrp	x1, 236000 <config_file+0x1c8>
  21317c:	add	x0, x0, #0x3a
  213180:	add	x1, x1, #0x2ce
  213184:	bl	2158b0 <printf@plt>
  213188:	adrp	x0, 201000 <options-0x758>
  21318c:	adrp	x1, 236000 <config_file+0x1c8>
  213190:	add	x0, x0, #0x9cc
  213194:	add	x1, x1, #0x2de
  213198:	bl	2158b0 <printf@plt>
  21319c:	ldrb	w8, [sp, #400]
  2131a0:	cbz	w8, 213200 <scsi_id+0x15c>
  2131a4:	add	x0, x20, #0x80
  2131a8:	add	x1, sp, #0x8
  2131ac:	mov	w2, #0xff                  	// #255
  2131b0:	bl	21537c <util_replace_whitespace>
  2131b4:	add	x0, sp, #0x8
  2131b8:	mov	x1, xzr
  2131bc:	bl	215498 <util_replace_chars>
  2131c0:	adrp	x0, 201000 <options-0x758>
  2131c4:	add	x0, x0, #0xaa7
  2131c8:	add	x1, sp, #0x8
  2131cc:	bl	2158b0 <printf@plt>
  2131d0:	add	x8, sp, #0x110
  2131d4:	add	x0, x8, #0x180
  2131d8:	add	x1, sp, #0x8
  2131dc:	mov	w2, #0xff                  	// #255
  2131e0:	bl	21537c <util_replace_whitespace>
  2131e4:	add	x0, sp, #0x8
  2131e8:	mov	x1, xzr
  2131ec:	bl	215498 <util_replace_chars>
  2131f0:	adrp	x0, 202000 <hex_str+0x1b1>
  2131f4:	add	x0, x0, #0x473
  2131f8:	add	x1, sp, #0x8
  2131fc:	bl	2158b0 <printf@plt>
  213200:	ldrb	w8, [sp, #1172]
  213204:	add	x21, sp, #0x110
  213208:	cbz	w8, 213250 <scsi_id+0x1ac>
  21320c:	add	x19, x21, #0x384
  213210:	adrp	x0, 201000 <options-0x758>
  213214:	add	x0, x0, #0xea4
  213218:	mov	x1, x19
  21321c:	bl	2158b0 <printf@plt>
  213220:	ldrb	w8, [sp, #1189]
  213224:	cbz	w8, 2132e4 <scsi_id+0x240>
  213228:	add	x20, x21, #0x395
  21322c:	adrp	x0, 201000 <options-0x758>
  213230:	add	x0, x0, #0xa1e
  213234:	mov	x1, x20
  213238:	bl	2158b0 <printf@plt>
  21323c:	adrp	x0, 201000 <options-0x758>
  213240:	add	x0, x0, #0xa62
  213244:	mov	x1, x19
  213248:	mov	x2, x20
  21324c:	bl	2158b0 <printf@plt>
  213250:	ldrb	w8, [sp, #1206]
  213254:	cbz	w8, 213268 <scsi_id+0x1c4>
  213258:	adrp	x0, 201000 <options-0x758>
  21325c:	add	x1, x21, #0x3a6
  213260:	add	x0, x0, #0x95f
  213264:	bl	2158b0 <printf@plt>
  213268:	ldrb	w8, [sp, #916]
  21326c:	cbz	w8, 2132c4 <scsi_id+0x220>
  213270:	add	x8, sp, #0x110
  213274:	adrp	x0, 201000 <options-0x758>
  213278:	add	x1, x8, #0x284
  21327c:	add	x0, x0, #0xdef
  213280:	bl	2158b0 <printf@plt>
  213284:	b	2132c4 <scsi_id+0x220>
  213288:	ldrb	w8, [sp, #400]
  21328c:	cbz	w8, 2132cc <scsi_id+0x228>
  213290:	adrp	x8, 236000 <config_file+0x1c8>
  213294:	ldrb	w8, [x8, #76]
  213298:	add	x0, x20, #0x80
  21329c:	cmp	w8, #0x1
  2132a0:	b.ne	2132c0 <scsi_id+0x21c>  // b.any
  2132a4:	add	x1, sp, #0x8
  2132a8:	mov	w2, #0xff                  	// #255
  2132ac:	bl	21537c <util_replace_whitespace>
  2132b0:	add	x0, sp, #0x8
  2132b4:	mov	x1, xzr
  2132b8:	bl	215498 <util_replace_chars>
  2132bc:	add	x0, sp, #0x8
  2132c0:	bl	215890 <puts@plt>
  2132c4:	mov	w0, wzr
  2132c8:	b	2132d0 <scsi_id+0x22c>
  2132cc:	mov	w0, #0x1                   	// #1
  2132d0:	add	sp, sp, #0x4c0
  2132d4:	ldp	x20, x19, [sp, #32]
  2132d8:	ldp	x28, x21, [sp, #16]
  2132dc:	ldp	x29, x30, [sp], #48
  2132e0:	ret
  2132e4:	adrp	x0, 201000 <options-0x758>
  2132e8:	add	x0, x0, #0xd7b
  2132ec:	mov	x1, x19
  2132f0:	bl	2158b0 <printf@plt>
  2132f4:	ldrb	w8, [sp, #1206]
  2132f8:	cbnz	w8, 213258 <scsi_id+0x1b4>
  2132fc:	b	213268 <scsi_id+0x1c4>

0000000000213300 <freep>:
  213300:	stp	x29, x30, [sp, #-16]!
  213304:	ldr	x0, [x0]
  213308:	mov	x29, sp
  21330c:	bl	215730 <free@plt>
  213310:	ldp	x29, x30, [sp], #16
  213314:	ret

0000000000213318 <fclosep>:
  213318:	stp	x29, x30, [sp, #-16]!
  21331c:	ldr	x0, [x0]
  213320:	mov	x29, sp
  213324:	bl	2158c0 <safe_fclose@plt>
  213328:	ldp	x29, x30, [sp], #16
  21332c:	ret

0000000000213330 <get_value>:
  213330:	stp	x29, x30, [sp, #-32]!
  213334:	stp	x20, x19, [sp, #16]
  213338:	ldr	x8, [x0]
  21333c:	mov	x19, x0
  213340:	mov	x29, sp
  213344:	ldrb	w9, [x8]
  213348:	cmp	w9, #0x22
  21334c:	b.ne	213364 <get_value+0x34>  // b.any
  213350:	adrp	x20, 201000 <options-0x758>
  213354:	add	x8, x8, #0x1
  213358:	add	x20, x20, #0xcd2
  21335c:	str	x8, [x19]
  213360:	b	21336c <get_value+0x3c>
  213364:	adrp	x20, 201000 <options-0x758>
  213368:	add	x20, x20, #0xe2a
  21336c:	mov	x0, x19
  213370:	mov	x1, x20
  213374:	bl	2157e0 <strsep@plt>
  213378:	adrp	x8, 201000 <options-0x758>
  21337c:	add	x8, x8, #0xcd2
  213380:	cmp	x20, x8
  213384:	mov	x20, x0
  213388:	b.ne	21339c <get_value+0x6c>  // b.any
  21338c:	cbz	x20, 21339c <get_value+0x6c>
  213390:	ldr	x8, [x19]
  213394:	add	x8, x8, #0x1
  213398:	str	x8, [x19]
  21339c:	bl	2157d0 <__ctype_b_loc@plt>
  2133a0:	ldr	x8, [x19]
  2133a4:	ldr	x9, [x0]
  2133a8:	ldrb	w10, [x8]
  2133ac:	ldrh	w9, [x9, x10, lsl #1]
  2133b0:	tbz	w9, #13, 2133cc <get_value+0x9c>
  2133b4:	add	x8, x8, #0x1
  2133b8:	str	x8, [x19]
  2133bc:	ldr	x9, [x0]
  2133c0:	ldrb	w10, [x8], #1
  2133c4:	ldrh	w9, [x9, x10, lsl #1]
  2133c8:	tbnz	w9, #13, 2133b8 <get_value+0x88>
  2133cc:	mov	x0, x20
  2133d0:	ldp	x20, x19, [sp, #16]
  2133d4:	ldp	x29, x30, [sp], #32
  2133d8:	ret

00000000002133dc <startswith>:
  2133dc:	stp	x29, x30, [sp, #-48]!
  2133e0:	stp	x20, x19, [sp, #32]
  2133e4:	mov	x20, x0
  2133e8:	mov	x0, x1
  2133ec:	str	x21, [sp, #16]
  2133f0:	mov	x29, sp
  2133f4:	mov	x19, x1
  2133f8:	bl	2157c0 <strlen@plt>
  2133fc:	mov	x21, x0
  213400:	mov	x0, x20
  213404:	mov	x1, x19
  213408:	mov	x2, x21
  21340c:	bl	2158d0 <strncmp@plt>
  213410:	add	x8, x20, x21
  213414:	ldp	x20, x19, [sp, #32]
  213418:	ldr	x21, [sp, #16]
  21341c:	cmp	w0, #0x0
  213420:	csel	x0, x8, xzr, eq  // eq = none
  213424:	ldp	x29, x30, [sp], #48
  213428:	ret

000000000021342c <argc_count>:
  21342c:	ldrb	w9, [x0]
  213430:	cbz	w9, 213458 <argc_count+0x2c>
  213434:	mov	x8, x0
  213438:	mov	w0, wzr
  21343c:	add	x8, x8, #0x1
  213440:	and	w10, w9, #0xff
  213444:	ldrb	w9, [x8], #1
  213448:	cmp	w10, #0x20
  21344c:	cinc	w0, w0, eq  // eq = none
  213450:	cbnz	w9, 213440 <argc_count+0x14>
  213454:	ret
  213458:	mov	w0, wzr
  21345c:	ret

0000000000213460 <help>:
  213460:	stp	x29, x30, [sp, #-16]!
  213464:	adrp	x8, 236000 <config_file+0x1c8>
  213468:	ldr	x1, [x8, #768]
  21346c:	adrp	x0, 202000 <hex_str+0x1b1>
  213470:	add	x0, x0, #0x76
  213474:	mov	x29, sp
  213478:	bl	2158b0 <printf@plt>
  21347c:	ldp	x29, x30, [sp], #16
  213480:	ret

0000000000213484 <set_inq_values>:
  213484:	stp	x29, x30, [sp, #-48]!
  213488:	adrp	x8, 236000 <config_file+0x1c8>
  21348c:	ldr	w8, [x8, #56]
  213490:	str	x21, [sp, #16]
  213494:	stp	x20, x19, [sp, #32]
  213498:	mov	x29, sp
  21349c:	mov	x19, x0
  2134a0:	str	w8, [x0, #640]
  2134a4:	bl	2137c4 <scsi_std_inquiry>
  2134a8:	cbnz	w0, 213550 <set_inq_values+0xcc>
  2134ac:	adrp	x1, 236000 <config_file+0x1c8>
  2134b0:	add	x1, x1, #0x8e
  2134b4:	mov	w2, #0x100                 	// #256
  2134b8:	mov	x0, x19
  2134bc:	bl	2155b8 <udev_util_encode_string>
  2134c0:	add	x20, x19, #0x9
  2134c4:	adrp	x1, 236000 <config_file+0x1c8>
  2134c8:	add	x1, x1, #0x1ce
  2134cc:	mov	w2, #0x100                 	// #256
  2134d0:	mov	x0, x20
  2134d4:	bl	2155b8 <udev_util_encode_string>
  2134d8:	adrp	x21, 236000 <config_file+0x1c8>
  2134dc:	add	x21, x21, #0x4e
  2134e0:	mov	w2, #0x3f                  	// #63
  2134e4:	mov	x0, x19
  2134e8:	mov	x1, x21
  2134ec:	bl	21537c <util_replace_whitespace>
  2134f0:	mov	x0, x21
  2134f4:	mov	x1, xzr
  2134f8:	bl	215498 <util_replace_chars>
  2134fc:	adrp	x21, 236000 <config_file+0x1c8>
  213500:	add	x21, x21, #0x18e
  213504:	mov	w2, #0x3f                  	// #63
  213508:	mov	x0, x20
  21350c:	mov	x1, x21
  213510:	bl	21537c <util_replace_whitespace>
  213514:	mov	x0, x21
  213518:	mov	x1, xzr
  21351c:	bl	215498 <util_replace_chars>
  213520:	add	x0, x19, #0x1f
  213524:	bl	213760 <set_type>
  213528:	add	x0, x19, #0x1a
  21352c:	adrp	x19, 236000 <config_file+0x1c8>
  213530:	add	x19, x19, #0x2ce
  213534:	mov	w2, #0xf                   	// #15
  213538:	mov	x1, x19
  21353c:	bl	21537c <util_replace_whitespace>
  213540:	mov	x0, x19
  213544:	mov	x1, xzr
  213548:	bl	215498 <util_replace_chars>
  21354c:	mov	w0, wzr
  213550:	ldp	x20, x19, [sp, #32]
  213554:	ldr	x21, [sp, #16]
  213558:	ldp	x29, x30, [sp], #48
  21355c:	ret

0000000000213560 <per_dev_options>:
  213560:	sub	sp, sp, #0x70
  213564:	adrp	x8, 236000 <config_file+0x1c8>
  213568:	ldrb	w8, [x8, #69]
  21356c:	stp	x29, x30, [sp, #16]
  213570:	stp	x28, x27, [sp, #32]
  213574:	stp	x26, x25, [sp, #48]
  213578:	stp	x24, x23, [sp, #64]
  21357c:	stp	x22, x21, [sp, #80]
  213580:	stp	x20, x19, [sp, #96]
  213584:	str	xzr, [sp]
  213588:	str	w8, [x0]
  21358c:	adrp	x8, 236000 <config_file+0x1c8>
  213590:	ldr	w8, [x8, #72]
  213594:	add	x29, sp, #0x10
  213598:	mov	x19, x0
  21359c:	mov	x20, x1
  2135a0:	str	w8, [x1]
  2135a4:	adrp	x0, 236000 <config_file+0x1c8>
  2135a8:	adrp	x1, 236000 <config_file+0x1c8>
  2135ac:	add	x0, x0, #0x4e
  2135b0:	add	x1, x1, #0x18e
  2135b4:	sub	x2, x29, #0x4
  2135b8:	mov	x3, sp
  2135bc:	bl	21293c <get_file_options>
  2135c0:	adrp	x8, 236000 <config_file+0x1c8>
  2135c4:	mov	w27, #0x1                   	// #1
  2135c8:	str	w27, [x8, #752]
  2135cc:	cbnz	w0, 213728 <per_dev_options+0x1c8>
  2135d0:	ldur	w21, [x29, #-4]
  2135d4:	ldr	x22, [sp]
  2135d8:	adrp	x23, 201000 <options-0x758>
  2135dc:	adrp	x24, 201000 <options-0x758>
  2135e0:	adrp	x25, 201000 <options-0x758>
  2135e4:	add	x23, x23, #0xf5e
  2135e8:	add	x24, x24, #0x758
  2135ec:	adrp	x26, 236000 <config_file+0x1c8>
  2135f0:	add	x25, x25, #0xb55
  2135f4:	b	2135fc <per_dev_options+0x9c>
  2135f8:	str	w27, [x19]
  2135fc:	mov	w0, w21
  213600:	mov	x1, x22
  213604:	mov	x2, x23
  213608:	mov	x3, x24
  21360c:	mov	x4, xzr
  213610:	bl	215830 <getopt_long@plt>
  213614:	mov	w28, w0
  213618:	cmp	w0, #0x66
  21361c:	b.le	213678 <per_dev_options+0x118>
  213620:	cmp	w28, #0x67
  213624:	b.eq	2135f8 <per_dev_options+0x98>  // b.none
  213628:	cmp	w28, #0x70
  21362c:	b.ne	2136a8 <per_dev_options+0x148>  // b.any
  213630:	ldr	x28, [x26, #760]
  213634:	mov	x1, x25
  213638:	mov	x0, x28
  21363c:	bl	215840 <strcmp@plt>
  213640:	cbz	w0, 213688 <per_dev_options+0x128>
  213644:	adrp	x1, 201000 <options-0x758>
  213648:	mov	x0, x28
  21364c:	add	x1, x1, #0xff1
  213650:	bl	215840 <strcmp@plt>
  213654:	cbz	w0, 213694 <per_dev_options+0x134>
  213658:	adrp	x1, 201000 <options-0x758>
  21365c:	mov	x0, x28
  213660:	add	x1, x1, #0x9a5
  213664:	bl	215840 <strcmp@plt>
  213668:	cbnz	w0, 2136ec <per_dev_options+0x18c>
  21366c:	mov	w8, #0xffffff7d            	// #-131
  213670:	str	w8, [x20]
  213674:	b	2135fc <per_dev_options+0x9c>
  213678:	cmp	w28, #0x62
  21367c:	b.ne	2136a0 <per_dev_options+0x140>  // b.any
  213680:	str	wzr, [x19]
  213684:	b	2135fc <per_dev_options+0x9c>
  213688:	mov	w8, #0x80                  	// #128
  21368c:	str	w8, [x20]
  213690:	b	2135fc <per_dev_options+0x9c>
  213694:	mov	w8, #0x83                  	// #131
  213698:	str	w8, [x20]
  21369c:	b	2135fc <per_dev_options+0x9c>
  2136a0:	cmn	w28, #0x1
  2136a4:	b.eq	213728 <per_dev_options+0x1c8>  // b.none
  2136a8:	mov	w0, #0x1                   	// #1
  2136ac:	bl	215710 <log_get_max_level_realm@plt>
  2136b0:	cmp	w0, #0x3
  2136b4:	b.lt	213728 <per_dev_options+0x1c8>  // b.tstop
  2136b8:	adrp	x2, 201000 <options-0x758>
  2136bc:	adrp	x4, 201000 <options-0x758>
  2136c0:	adrp	x5, 201000 <options-0x758>
  2136c4:	add	x2, x2, #0xe0d
  2136c8:	add	x4, x4, #0xa44
  2136cc:	add	x5, x5, #0xe2d
  2136d0:	mov	w0, #0x403                 	// #1027
  2136d4:	mov	w3, #0x1b3                 	// #435
  2136d8:	mov	w1, wzr
  2136dc:	mov	w6, w28
  2136e0:	mov	w7, w28
  2136e4:	bl	215720 <log_internal_realm@plt>
  2136e8:	b	213728 <per_dev_options+0x1c8>
  2136ec:	mov	w0, #0x1                   	// #1
  2136f0:	bl	215710 <log_get_max_level_realm@plt>
  2136f4:	cmp	w0, #0x3
  2136f8:	b.lt	213728 <per_dev_options+0x1c8>  // b.tstop
  2136fc:	adrp	x2, 201000 <options-0x758>
  213700:	adrp	x4, 201000 <options-0x758>
  213704:	adrp	x5, 201000 <options-0x758>
  213708:	add	x2, x2, #0xe0d
  21370c:	add	x4, x4, #0xa44
  213710:	add	x5, x5, #0x9b1
  213714:	mov	w0, #0x403                 	// #1027
  213718:	mov	w3, #0x1ad                 	// #429
  21371c:	mov	w1, wzr
  213720:	mov	x6, x28
  213724:	bl	215720 <log_internal_realm@plt>
  213728:	ldr	x8, [sp]
  21372c:	cbz	x8, 213740 <per_dev_options+0x1e0>
  213730:	ldr	x0, [x8]
  213734:	bl	215730 <free@plt>
  213738:	ldr	x0, [sp]
  21373c:	bl	215730 <free@plt>
  213740:	ldp	x20, x19, [sp, #96]
  213744:	ldp	x22, x21, [sp, #80]
  213748:	ldp	x24, x23, [sp, #64]
  21374c:	ldp	x26, x25, [sp, #48]
  213750:	ldp	x28, x27, [sp, #32]
  213754:	ldp	x29, x30, [sp, #16]
  213758:	add	sp, sp, #0x70
  21375c:	ret

0000000000213760 <set_type>:
  213760:	stp	x29, x30, [sp, #-32]!
  213764:	mov	x29, sp
  213768:	add	x1, x29, #0x18
  21376c:	mov	w2, wzr
  213770:	str	x19, [sp, #16]
  213774:	mov	x19, x0
  213778:	bl	2158e0 <strtoul@plt>
  21377c:	ldr	x8, [x29, #24]
  213780:	adrp	x2, 201000 <options-0x758>
  213784:	add	x2, x2, #0xe02
  213788:	cmp	x8, x19
  21378c:	b.eq	2137a8 <set_type+0x48>  // b.none
  213790:	cmp	w0, #0xf
  213794:	b.hi	2137a8 <set_type+0x48>  // b.pmore
  213798:	adrp	x9, 201000 <options-0x758>
  21379c:	sbfiz	x8, x0, #3, #32
  2137a0:	add	x9, x9, #0x8d8
  2137a4:	ldr	x2, [x9, x8]
  2137a8:	adrp	x0, 236000 <config_file+0x1c8>
  2137ac:	add	x0, x0, #0x2de
  2137b0:	mov	w1, #0x10                  	// #16
  2137b4:	bl	215870 <strscpy@plt>
  2137b8:	ldr	x19, [sp, #16]
  2137bc:	ldp	x29, x30, [sp], #32
  2137c0:	ret

00000000002137c4 <scsi_std_inquiry>:
  2137c4:	sub	sp, sp, #0x1c0
  2137c8:	stp	x22, x21, [sp, #416]
  2137cc:	mov	x21, x1
  2137d0:	mov	w1, #0x800                 	// #2048
  2137d4:	stp	x20, x19, [sp, #432]
  2137d8:	mov	x20, x0
  2137dc:	movk	w1, #0x8, lsl #16
  2137e0:	mov	x0, x21
  2137e4:	stp	x29, x30, [sp, #384]
  2137e8:	stp	x28, x23, [sp, #400]
  2137ec:	add	x29, sp, #0x180
  2137f0:	bl	2158f0 <open64@plt>
  2137f4:	tbnz	w0, #31, 2138c8 <scsi_std_inquiry+0x104>
  2137f8:	mov	x1, sp
  2137fc:	mov	w19, w0
  213800:	bl	215658 <fstat64>
  213804:	tbnz	w0, #31, 213914 <scsi_std_inquiry+0x150>
  213808:	ldr	x21, [sp, #32]
  21380c:	add	x22, x20, #0x40
  213810:	mov	x0, x21
  213814:	bl	215900 <gnu_dev_major@plt>
  213818:	mov	w23, w0
  21381c:	mov	x0, x21
  213820:	bl	215910 <gnu_dev_minor@plt>
  213824:	adrp	x1, 201000 <options-0x758>
  213828:	mov	w3, w0
  21382c:	add	x1, x1, #0x9e9
  213830:	mov	x0, x22
  213834:	mov	w2, w23
  213838:	bl	215920 <sprintf@plt>
  21383c:	movi	v0.2d, #0x0
  213840:	add	x8, sp, #0x6f
  213844:	add	x4, sp, #0x80
  213848:	mov	x0, x20
  21384c:	mov	w1, w19
  213850:	mov	w2, wzr
  213854:	mov	w3, wzr
  213858:	stp	q0, q0, [sp, #128]
  21385c:	stp	q0, q0, [sp, #160]
  213860:	stp	q0, q0, [sp, #192]
  213864:	stp	q0, q0, [sp, #224]
  213868:	stp	q0, q0, [sp, #256]
  21386c:	stp	q0, q0, [sp, #288]
  213870:	stp	q0, q0, [sp, #320]
  213874:	str	q0, [sp, #352]
  213878:	stur	q0, [x8, #255]
  21387c:	bl	213984 <scsi_inquiry>
  213880:	tbnz	w0, #31, 21395c <scsi_std_inquiry+0x198>
  213884:	ldr	x8, [sp, #136]
  213888:	strb	wzr, [x20, #8]
  21388c:	adrp	x1, 201000 <options-0x758>
  213890:	add	x0, x20, #0x1f
  213894:	str	x8, [x20]
  213898:	ldr	q0, [sp, #144]
  21389c:	strb	wzr, [x20, #25]
  2138a0:	add	x1, x1, #0xf63
  2138a4:	stur	q0, [x20, #9]
  2138a8:	ldr	w8, [sp, #160]
  2138ac:	strb	wzr, [x20, #30]
  2138b0:	stur	w8, [x20, #26]
  2138b4:	ldrb	w8, [sp, #128]
  2138b8:	and	w2, w8, #0x1f
  2138bc:	bl	215920 <sprintf@plt>
  2138c0:	mov	w22, wzr
  2138c4:	b	213960 <scsi_std_inquiry+0x19c>
  2138c8:	mov	w0, #0x1                   	// #1
  2138cc:	mov	w22, #0x1                   	// #1
  2138d0:	bl	215710 <log_get_max_level_realm@plt>
  2138d4:	cmp	w0, #0x7
  2138d8:	b.lt	213968 <scsi_std_inquiry+0x1a4>  // b.tstop
  2138dc:	bl	2157b0 <__errno_location@plt>
  2138e0:	ldr	w1, [x0]
  2138e4:	adrp	x2, 201000 <options-0x758>
  2138e8:	adrp	x4, 201000 <options-0x758>
  2138ec:	adrp	x5, 201000 <options-0x758>
  2138f0:	add	x2, x2, #0xd43
  2138f4:	add	x4, x4, #0x9d8
  2138f8:	add	x5, x5, #0x972
  2138fc:	mov	w0, #0x407                 	// #1031
  213900:	mov	w3, #0x2f0                 	// #752
  213904:	mov	x6, x21
  213908:	bl	215720 <log_internal_realm@plt>
  21390c:	mov	w22, #0x1                   	// #1
  213910:	b	213968 <scsi_std_inquiry+0x1a4>
  213914:	mov	w0, #0x1                   	// #1
  213918:	bl	215710 <log_get_max_level_realm@plt>
  21391c:	cmp	w0, #0x7
  213920:	b.lt	213954 <scsi_std_inquiry+0x190>  // b.tstop
  213924:	bl	2157b0 <__errno_location@plt>
  213928:	ldr	w1, [x0]
  21392c:	adrp	x2, 201000 <options-0x758>
  213930:	adrp	x4, 201000 <options-0x758>
  213934:	adrp	x5, 201000 <options-0x758>
  213938:	add	x2, x2, #0xd43
  21393c:	add	x4, x4, #0x9d8
  213940:	add	x5, x5, #0xeb6
  213944:	mov	w0, #0x407                 	// #1031
  213948:	mov	w3, #0x2f5                 	// #757
  21394c:	mov	x6, x21
  213950:	bl	215720 <log_internal_realm@plt>
  213954:	mov	w22, #0x2                   	// #2
  213958:	b	213960 <scsi_std_inquiry+0x19c>
  21395c:	mov	w22, w0
  213960:	mov	w0, w19
  213964:	bl	215930 <close@plt>
  213968:	mov	w0, w22
  21396c:	ldp	x20, x19, [sp, #432]
  213970:	ldp	x22, x21, [sp, #416]
  213974:	ldp	x28, x23, [sp, #400]
  213978:	ldp	x29, x30, [sp, #384]
  21397c:	add	sp, sp, #0x1c0
  213980:	ret

0000000000213984 <scsi_inquiry>:
  213984:	sub	sp, sp, #0x1b0
  213988:	stp	x29, x30, [sp, #336]
  21398c:	add	x29, sp, #0x150
  213990:	mov	w8, #0x12                  	// #18
  213994:	stp	x28, x27, [sp, #352]
  213998:	stp	x26, x25, [sp, #368]
  21399c:	stp	x24, x23, [sp, #384]
  2139a0:	stp	x22, x21, [sp, #400]
  2139a4:	stp	x20, x19, [sp, #416]
  2139a8:	mov	x22, x4
  2139ac:	mov	w23, w1
  2139b0:	mov	x21, x0
  2139b4:	mov	w9, #0xfe00                	// #65024
  2139b8:	mov	w26, #0x3                   	// #3
  2139bc:	sub	x19, x29, #0x10
  2139c0:	sub	x27, x29, #0x30
  2139c4:	mov	w28, #0xfe                  	// #254
  2139c8:	sturb	w8, [x29, #-16]
  2139cc:	mov	w20, #0x1388                	// #5000
  2139d0:	mov	w8, #0x3                   	// #3
  2139d4:	stp	w2, w3, [sp, #20]
  2139d8:	sturb	w2, [x29, #-15]
  2139dc:	sturb	w3, [x29, #-14]
  2139e0:	sturb	wzr, [x29, #-11]
  2139e4:	sturh	w9, [x29, #-13]
  2139e8:	str	w8, [sp, #28]
  2139ec:	ldr	w8, [x21, #640]
  2139f0:	cmp	w8, #0x4
  2139f4:	b.ne	213a3c <scsi_inquiry+0xb8>  // b.any
  2139f8:	movi	v0.2d, #0x0
  2139fc:	mov	w8, #0x51                  	// #81
  213a00:	stp	q0, q0, [sp, #128]
  213a04:	str	x8, [sp, #128]
  213a08:	mov	x8, #0x600000000           	// #25769803776
  213a0c:	stp	x8, x19, [sp, #136]
  213a10:	mov	w8, #0x20                  	// #32
  213a14:	add	x25, sp, #0x80
  213a18:	stp	q0, q0, [sp, #160]
  213a1c:	stp	q0, q0, [sp, #192]
  213a20:	stp	q0, q0, [sp, #256]
  213a24:	stp	q0, q0, [sp, #224]
  213a28:	str	w8, [sp, #172]
  213a2c:	str	x27, [sp, #176]
  213a30:	str	w28, [sp, #196]
  213a34:	str	x22, [sp, #208]
  213a38:	b	213a7c <scsi_inquiry+0xf8>
  213a3c:	mov	x8, #0x53                  	// #83
  213a40:	movk	x8, #0xfffd, lsl #32
  213a44:	movi	v0.2d, #0x0
  213a48:	movk	x8, #0xffff, lsl #48
  213a4c:	add	x25, sp, #0x20
  213a50:	stp	q0, q0, [sp, #32]
  213a54:	str	x8, [sp, #32]
  213a58:	mov	w8, #0x2006                	// #8198
  213a5c:	str	xzr, [sp, #112]
  213a60:	stp	q0, q0, [sp, #80]
  213a64:	str	q0, [sp, #64]
  213a68:	strh	w8, [sp, #40]
  213a6c:	str	w28, [sp, #44]
  213a70:	stp	x22, x19, [sp, #48]
  213a74:	str	x27, [sp, #64]
  213a78:	str	w20, [sp, #72]
  213a7c:	mov	w1, #0x2285                	// #8837
  213a80:	mov	w0, w23
  213a84:	mov	x2, x25
  213a88:	bl	215940 <ioctl@plt>
  213a8c:	tbz	w0, #31, 213ac0 <scsi_inquiry+0x13c>
  213a90:	mov	w24, w0
  213a94:	bl	2157b0 <__errno_location@plt>
  213a98:	ldr	w25, [x0]
  213a9c:	cmp	w25, #0x26
  213aa0:	b.eq	213aac <scsi_inquiry+0x128>  // b.none
  213aa4:	cmp	w25, #0x16
  213aa8:	b.ne	213b58 <scsi_inquiry+0x1d4>  // b.any
  213aac:	ldr	w8, [x21, #640]
  213ab0:	cmp	w8, #0x4
  213ab4:	b.ne	213b58 <scsi_inquiry+0x1d4>  // b.any
  213ab8:	str	w26, [x21, #640]
  213abc:	b	2139ec <scsi_inquiry+0x68>
  213ac0:	ldr	w8, [x21, #640]
  213ac4:	mov	x0, x25
  213ac8:	cmp	w8, #0x4
  213acc:	str	w8, [sp, #16]
  213ad0:	b.ne	213ae4 <scsi_inquiry+0x160>  // b.any
  213ad4:	bl	214554 <sg_err_category4>
  213ad8:	mov	w24, wzr
  213adc:	cbnz	w0, 213af0 <scsi_inquiry+0x16c>
  213ae0:	b	213b30 <scsi_inquiry+0x1ac>
  213ae4:	bl	21457c <sg_err_category3>
  213ae8:	mov	w24, wzr
  213aec:	cbz	w0, 213b30 <scsi_inquiry+0x1ac>
  213af0:	cmp	w0, #0x4
  213af4:	b.eq	213b30 <scsi_inquiry+0x1ac>  // b.none
  213af8:	cmp	w0, #0x5
  213afc:	b.ne	213b0c <scsi_inquiry+0x188>  // b.any
  213b00:	mov	w24, wzr
  213b04:	strb	wzr, [x22, #1]
  213b08:	b	213b30 <scsi_inquiry+0x1ac>
  213b0c:	ldr	w8, [sp, #16]
  213b10:	mov	x0, x21
  213b14:	mov	x1, x25
  213b18:	cmp	w8, #0x4
  213b1c:	b.ne	213b28 <scsi_inquiry+0x1a4>  // b.any
  213b20:	bl	2145a8 <scsi_dump_v4>
  213b24:	b	213b2c <scsi_inquiry+0x1a8>
  213b28:	bl	2146a8 <scsi_dump>
  213b2c:	mov	w24, w0
  213b30:	cbz	w24, 213c0c <scsi_inquiry+0x288>
  213b34:	cmp	w24, #0x1
  213b38:	b.lt	213b94 <scsi_inquiry+0x210>  // b.tstop
  213b3c:	ldr	w8, [sp, #28]
  213b40:	subs	w8, w8, #0x1
  213b44:	str	w8, [sp, #28]
  213b48:	b.hi	2139ec <scsi_inquiry+0x68>  // b.pmore
  213b4c:	mov	w24, #0xffffffff            	// #-1
  213b50:	tbz	w24, #31, 213be8 <scsi_inquiry+0x264>
  213b54:	b	213b98 <scsi_inquiry+0x214>
  213b58:	mov	w0, #0x1                   	// #1
  213b5c:	bl	215710 <log_get_max_level_realm@plt>
  213b60:	cmp	w0, #0x7
  213b64:	b.lt	213b94 <scsi_inquiry+0x210>  // b.tstop
  213b68:	adrp	x2, 201000 <options-0x758>
  213b6c:	adrp	x4, 202000 <hex_str+0x1b1>
  213b70:	adrp	x5, 201000 <options-0x758>
  213b74:	add	x6, x21, #0x40
  213b78:	add	x2, x2, #0xd43
  213b7c:	add	x4, x4, #0x426
  213b80:	add	x5, x5, #0xf66
  213b84:	mov	w0, #0x407                 	// #1031
  213b88:	mov	w3, #0x13e                 	// #318
  213b8c:	mov	w1, w25
  213b90:	bl	215720 <log_internal_realm@plt>
  213b94:	tbz	w24, #31, 213be8 <scsi_inquiry+0x264>
  213b98:	mov	w0, #0x1                   	// #1
  213b9c:	bl	215710 <log_get_max_level_realm@plt>
  213ba0:	cmp	w0, #0x7
  213ba4:	b.lt	213be8 <scsi_inquiry+0x264>  // b.tstop
  213ba8:	ldr	w8, [sp, #20]
  213bac:	adrp	x2, 201000 <options-0x758>
  213bb0:	adrp	x4, 202000 <hex_str+0x1b1>
  213bb4:	adrp	x5, 201000 <options-0x758>
  213bb8:	and	w7, w8, #0xff
  213bbc:	ldr	w8, [sp, #24]
  213bc0:	add	x6, x21, #0x40
  213bc4:	add	x2, x2, #0xd43
  213bc8:	add	x4, x4, #0x426
  213bcc:	and	w8, w8, #0xff
  213bd0:	add	x5, x5, #0xc60
  213bd4:	mov	w0, #0x407                 	// #1031
  213bd8:	mov	w3, #0x162                 	// #354
  213bdc:	mov	w1, wzr
  213be0:	str	w8, [sp]
  213be4:	bl	215720 <log_internal_realm@plt>
  213be8:	mov	w0, w24
  213bec:	ldp	x20, x19, [sp, #416]
  213bf0:	ldp	x22, x21, [sp, #400]
  213bf4:	ldp	x24, x23, [sp, #384]
  213bf8:	ldp	x26, x25, [sp, #368]
  213bfc:	ldp	x28, x27, [sp, #352]
  213c00:	ldp	x29, x30, [sp, #336]
  213c04:	add	sp, sp, #0x1b0
  213c08:	ret
  213c0c:	mov	w24, #0xfe                  	// #254
  213c10:	tbz	w24, #31, 213be8 <scsi_inquiry+0x264>
  213c14:	b	213b98 <scsi_inquiry+0x214>

0000000000213c18 <scsi_get_serial>:
  213c18:	sub	sp, sp, #0x180
  213c1c:	stp	x24, x23, [sp, #336]
  213c20:	stp	x22, x21, [sp, #352]
  213c24:	stp	x20, x19, [sp, #368]
  213c28:	mov	w20, w3
  213c2c:	mov	w22, w2
  213c30:	mov	x23, x1
  213c34:	mov	x21, x0
  213c38:	stp	x29, x30, [sp, #288]
  213c3c:	stp	x28, x27, [sp, #304]
  213c40:	stp	x26, x25, [sp, #320]
  213c44:	add	x29, sp, #0x120
  213c48:	cbz	w3, 213c5c <scsi_get_serial+0x44>
  213c4c:	sxtw	x2, w20
  213c50:	add	x0, x21, #0x80
  213c54:	mov	w1, wzr
  213c58:	bl	2158a0 <memset@plt>
  213c5c:	bl	215950 <initialize_srand@plt>
  213c60:	mov	w25, #0x851f                	// #34079
  213c64:	mov	w27, #0x4240                	// #16960
  213c68:	mov	w28, #0xc200                	// #49664
  213c6c:	mov	w24, #0x15                  	// #21
  213c70:	movk	w25, #0x51eb, lsl #16
  213c74:	mov	w26, #0x64                  	// #100
  213c78:	movk	w27, #0xf, lsl #16
  213c7c:	movk	w28, #0xbeb, lsl #16
  213c80:	mov	w1, #0x800                 	// #2048
  213c84:	movk	w1, #0x8, lsl #16
  213c88:	mov	x0, x23
  213c8c:	bl	2158f0 <open64@plt>
  213c90:	mov	w19, w0
  213c94:	tbz	w0, #31, 213ce8 <scsi_get_serial+0xd0>
  213c98:	bl	2157b0 <__errno_location@plt>
  213c9c:	ldr	w8, [x0]
  213ca0:	cmp	w8, #0x10
  213ca4:	b.ne	213ce8 <scsi_get_serial+0xd0>  // b.any
  213ca8:	str	xzr, [sp, #24]
  213cac:	bl	215960 <rand@plt>
  213cb0:	smull	x8, w0, w25
  213cb4:	lsr	x9, x8, #63
  213cb8:	asr	x8, x8, #37
  213cbc:	add	w8, w8, w9
  213cc0:	msub	w8, w8, w26, w0
  213cc4:	madd	w8, w8, w27, w28
  213cc8:	sxtw	x8, w8
  213ccc:	add	x0, sp, #0x18
  213cd0:	mov	x1, xzr
  213cd4:	str	x8, [sp, #32]
  213cd8:	bl	215970 <nanosleep@plt>
  213cdc:	sub	w24, w24, #0x1
  213ce0:	cmp	w24, #0x1
  213ce4:	b.hi	213c80 <scsi_get_serial+0x68>  // b.pmore
  213ce8:	tbnz	w19, #31, 213d94 <scsi_get_serial+0x17c>
  213cec:	cmp	w22, #0x7f
  213cf0:	b.gt	213d9c <scsi_get_serial+0x184>
  213cf4:	cmn	w22, #0x83
  213cf8:	b.eq	213dc8 <scsi_get_serial+0x1b0>  // b.none
  213cfc:	cbnz	w22, 213e48 <scsi_get_serial+0x230>
  213d00:	add	x2, sp, #0x18
  213d04:	mov	x0, x21
  213d08:	mov	w1, w19
  213d0c:	bl	2143e4 <do_scsi_page0_inquiry>
  213d10:	cbnz	w0, 213ef8 <scsi_get_serial+0x2e0>
  213d14:	ldrb	w8, [sp, #27]
  213d18:	cbz	w8, 213e94 <scsi_get_serial+0x27c>
  213d1c:	add	x8, x21, #0x80
  213d20:	add	x23, x21, #0x180
  213d24:	add	x24, x21, #0x284
  213d28:	add	x25, x21, #0x384
  213d2c:	add	x26, x21, #0x395
  213d30:	add	x27, x21, #0x3a6
  213d34:	mov	w28, #0x4                   	// #4
  213d38:	add	x22, sp, #0x18
  213d3c:	str	x8, [sp, #16]
  213d40:	b	213d58 <scsi_get_serial+0x140>
  213d44:	ldrb	w8, [sp, #27]
  213d48:	add	x8, x8, #0x3
  213d4c:	cmp	x28, x8
  213d50:	add	x28, x28, #0x1
  213d54:	b.cs	213e94 <scsi_get_serial+0x27c>  // b.hs, b.nlast
  213d58:	ldrb	w8, [x22, x28]
  213d5c:	cmp	w8, #0x83
  213d60:	b.ne	213d44 <scsi_get_serial+0x12c>  // b.any
  213d64:	ldr	x2, [sp, #16]
  213d68:	mov	x0, x21
  213d6c:	mov	w1, w19
  213d70:	mov	x3, x23
  213d74:	mov	w4, w20
  213d78:	mov	x5, x24
  213d7c:	mov	x6, x25
  213d80:	mov	x7, x26
  213d84:	str	x27, [sp]
  213d88:	bl	2140c8 <do_scsi_page83_inquiry>
  213d8c:	cbnz	w0, 213d44 <scsi_get_serial+0x12c>
  213d90:	b	213ef0 <scsi_get_serial+0x2d8>
  213d94:	mov	w23, #0x1                   	// #1
  213d98:	b	213f04 <scsi_get_serial+0x2ec>
  213d9c:	cmp	w22, #0x83
  213da0:	b.eq	213e10 <scsi_get_serial+0x1f8>  // b.none
  213da4:	cmp	w22, #0x80
  213da8:	b.ne	213e48 <scsi_get_serial+0x230>  // b.any
  213dac:	add	x2, x21, #0x80
  213db0:	add	x3, x21, #0x180
  213db4:	mov	x0, x21
  213db8:	mov	w1, w19
  213dbc:	mov	w4, w20
  213dc0:	bl	213f28 <do_scsi_page80_inquiry>
  213dc4:	b	213e3c <scsi_get_serial+0x224>
  213dc8:	add	x22, x21, #0x80
  213dcc:	mov	x0, x21
  213dd0:	mov	w1, w19
  213dd4:	mov	x2, x22
  213dd8:	bl	2142a8 <do_scsi_page83_prespc3_inquiry>
  213ddc:	cbz	w0, 213ef0 <scsi_get_serial+0x2d8>
  213de0:	cmp	w0, #0x2
  213de4:	b.ne	213ef8 <scsi_get_serial+0x2e0>  // b.any
  213de8:	add	x8, x21, #0x3a6
  213dec:	add	x3, x21, #0x180
  213df0:	add	x5, x21, #0x284
  213df4:	add	x6, x21, #0x384
  213df8:	add	x7, x21, #0x395
  213dfc:	str	x8, [sp]
  213e00:	mov	x0, x21
  213e04:	mov	w1, w19
  213e08:	mov	x2, x22
  213e0c:	b	213e34 <scsi_get_serial+0x21c>
  213e10:	add	x2, x21, #0x80
  213e14:	add	x3, x21, #0x180
  213e18:	add	x5, x21, #0x284
  213e1c:	add	x6, x21, #0x384
  213e20:	add	x7, x21, #0x395
  213e24:	add	x8, x21, #0x3a6
  213e28:	mov	x0, x21
  213e2c:	mov	w1, w19
  213e30:	str	x8, [sp]
  213e34:	mov	w4, w20
  213e38:	bl	2140c8 <do_scsi_page83_inquiry>
  213e3c:	cmp	w0, #0x0
  213e40:	cset	w23, ne  // ne = any
  213e44:	b	213efc <scsi_get_serial+0x2e4>
  213e48:	mov	w0, #0x1                   	// #1
  213e4c:	mov	w23, #0x1                   	// #1
  213e50:	bl	215710 <log_get_max_level_realm@plt>
  213e54:	cmp	w0, #0x7
  213e58:	b.lt	213efc <scsi_get_serial+0x2e4>  // b.tstop
  213e5c:	adrp	x2, 201000 <options-0x758>
  213e60:	adrp	x4, 202000 <hex_str+0x1b1>
  213e64:	adrp	x5, 201000 <options-0x758>
  213e68:	add	x6, x21, #0x40
  213e6c:	add	x2, x2, #0xd43
  213e70:	add	x4, x4, #0x3e4
  213e74:	add	x5, x5, #0xab5
  213e78:	mov	w0, #0x407                 	// #1031
  213e7c:	mov	w3, #0x350                 	// #848
  213e80:	mov	w1, wzr
  213e84:	mov	w7, w22
  213e88:	bl	215720 <log_internal_realm@plt>
  213e8c:	mov	w23, #0x1                   	// #1
  213e90:	b	213efc <scsi_get_serial+0x2e4>
  213e94:	ldrb	w8, [sp, #27]
  213e98:	cbz	w8, 213ef8 <scsi_get_serial+0x2e0>
  213e9c:	add	x22, x21, #0x80
  213ea0:	add	x24, x21, #0x180
  213ea4:	mov	w25, #0x4                   	// #4
  213ea8:	add	x26, sp, #0x18
  213eac:	mov	w23, #0x1                   	// #1
  213eb0:	b	213ec8 <scsi_get_serial+0x2b0>
  213eb4:	ldrb	w8, [sp, #27]
  213eb8:	add	x8, x8, #0x3
  213ebc:	cmp	x25, x8
  213ec0:	add	x25, x25, #0x1
  213ec4:	b.cs	213efc <scsi_get_serial+0x2e4>  // b.hs, b.nlast
  213ec8:	ldrb	w8, [x26, x25]
  213ecc:	cmp	w8, #0x80
  213ed0:	b.ne	213eb4 <scsi_get_serial+0x29c>  // b.any
  213ed4:	mov	x0, x21
  213ed8:	mov	w1, w19
  213edc:	mov	x2, x22
  213ee0:	mov	x3, x24
  213ee4:	mov	w4, w20
  213ee8:	bl	213f28 <do_scsi_page80_inquiry>
  213eec:	cbnz	w0, 213eb4 <scsi_get_serial+0x29c>
  213ef0:	mov	w23, wzr
  213ef4:	b	213efc <scsi_get_serial+0x2e4>
  213ef8:	mov	w23, #0x1                   	// #1
  213efc:	mov	w0, w19
  213f00:	bl	215930 <close@plt>
  213f04:	mov	w0, w23
  213f08:	ldp	x20, x19, [sp, #368]
  213f0c:	ldp	x22, x21, [sp, #352]
  213f10:	ldp	x24, x23, [sp, #336]
  213f14:	ldp	x26, x25, [sp, #320]
  213f18:	ldp	x28, x27, [sp, #304]
  213f1c:	ldp	x29, x30, [sp, #288]
  213f20:	add	sp, sp, #0x180
  213f24:	ret

0000000000213f28 <do_scsi_page80_inquiry>:
  213f28:	sub	sp, sp, #0x160
  213f2c:	stp	x22, x21, [sp, #320]
  213f30:	stp	x20, x19, [sp, #336]
  213f34:	mov	w21, w4
  213f38:	mov	x19, x3
  213f3c:	mov	x22, x2
  213f40:	movi	v0.2d, #0x0
  213f44:	add	x4, sp, #0x10
  213f48:	mov	w2, #0x1                   	// #1
  213f4c:	mov	w3, #0x80                  	// #128
  213f50:	stp	x29, x30, [sp, #272]
  213f54:	stp	x28, x25, [sp, #288]
  213f58:	stp	x24, x23, [sp, #304]
  213f5c:	add	x29, sp, #0x110
  213f60:	mov	x20, x0
  213f64:	stur	q0, [sp, #254]
  213f68:	stp	q0, q0, [sp, #224]
  213f6c:	stp	q0, q0, [sp, #192]
  213f70:	stp	q0, q0, [sp, #160]
  213f74:	stp	q0, q0, [sp, #128]
  213f78:	stp	q0, q0, [sp, #96]
  213f7c:	stp	q0, q0, [sp, #64]
  213f80:	stp	q0, q0, [sp, #32]
  213f84:	str	q0, [sp, #16]
  213f88:	bl	213984 <scsi_inquiry>
  213f8c:	tbnz	w0, #31, 213ff8 <do_scsi_page80_inquiry+0xd0>
  213f90:	ldrb	w8, [sp, #17]
  213f94:	cmp	w8, #0x80
  213f98:	b.ne	214000 <do_scsi_page80_inquiry+0xd8>  // b.any
  213f9c:	ldrb	w23, [sp, #19]
  213fa0:	add	w25, w23, #0x19
  213fa4:	cmp	w25, w21
  213fa8:	b.le	214048 <do_scsi_page80_inquiry+0x120>
  213fac:	mov	w0, #0x1                   	// #1
  213fb0:	mov	w24, #0x1                   	// #1
  213fb4:	bl	215710 <log_get_max_level_realm@plt>
  213fb8:	cmp	w0, #0x7
  213fbc:	b.lt	2140a8 <do_scsi_page80_inquiry+0x180>  // b.tstop
  213fc0:	adrp	x2, 201000 <options-0x758>
  213fc4:	adrp	x4, 201000 <options-0x758>
  213fc8:	adrp	x5, 201000 <options-0x758>
  213fcc:	add	x6, x20, #0x40
  213fd0:	add	x2, x2, #0xd43
  213fd4:	add	x4, x4, #0xc8c
  213fd8:	add	x5, x5, #0xf01
  213fdc:	mov	w0, #0x407                 	// #1031
  213fe0:	mov	w3, #0x2d0                 	// #720
  213fe4:	mov	w1, wzr
  213fe8:	mov	w7, w21
  213fec:	str	w25, [sp]
  213ff0:	bl	215720 <log_internal_realm@plt>
  213ff4:	b	214040 <do_scsi_page80_inquiry+0x118>
  213ff8:	mov	w24, w0
  213ffc:	b	2140a8 <do_scsi_page80_inquiry+0x180>
  214000:	mov	w0, #0x1                   	// #1
  214004:	mov	w24, #0x1                   	// #1
  214008:	bl	215710 <log_get_max_level_realm@plt>
  21400c:	cmp	w0, #0x7
  214010:	b.lt	2140a8 <do_scsi_page80_inquiry+0x180>  // b.tstop
  214014:	adrp	x2, 201000 <options-0x758>
  214018:	adrp	x4, 201000 <options-0x758>
  21401c:	adrp	x5, 201000 <options-0x758>
  214020:	add	x6, x20, #0x40
  214024:	add	x2, x2, #0xd43
  214028:	add	x4, x4, #0xc8c
  21402c:	add	x5, x5, #0xee6
  214030:	mov	w0, #0x407                 	// #1031
  214034:	mov	w3, #0x2c9                 	// #713
  214038:	mov	w1, wzr
  21403c:	bl	215720 <log_internal_realm@plt>
  214040:	mov	w24, #0x1                   	// #1
  214044:	b	2140a8 <do_scsi_page80_inquiry+0x180>
  214048:	cbz	x22, 214080 <do_scsi_page80_inquiry+0x158>
  21404c:	mov	w8, #0x53                  	// #83
  214050:	mov	x1, x22
  214054:	strb	w8, [x1], #1
  214058:	mov	x0, x20
  21405c:	bl	214c10 <append_vendor_model>
  214060:	tbnz	w0, #31, 214040 <do_scsi_page80_inquiry+0x118>
  214064:	cbz	w23, 214080 <do_scsi_page80_inquiry+0x158>
  214068:	add	x8, x22, w0, sxtw
  21406c:	add	x9, sp, #0x10
  214070:	add	x0, x8, #0x1
  214074:	orr	x1, x9, #0x4
  214078:	mov	x2, x23
  21407c:	bl	215980 <memcpy@plt>
  214080:	cbz	x19, 2140a4 <do_scsi_page80_inquiry+0x17c>
  214084:	add	x8, sp, #0x10
  214088:	orr	x1, x8, #0x4
  21408c:	mov	x0, x19
  214090:	mov	x2, x23
  214094:	bl	215980 <memcpy@plt>
  214098:	mov	w24, wzr
  21409c:	strb	wzr, [x19, x23]
  2140a0:	b	2140a8 <do_scsi_page80_inquiry+0x180>
  2140a4:	mov	w24, wzr
  2140a8:	mov	w0, w24
  2140ac:	ldp	x20, x19, [sp, #336]
  2140b0:	ldp	x22, x21, [sp, #320]
  2140b4:	ldp	x24, x23, [sp, #304]
  2140b8:	ldp	x28, x25, [sp, #288]
  2140bc:	ldp	x29, x30, [sp, #272]
  2140c0:	add	sp, sp, #0x160
  2140c4:	ret

00000000002140c8 <do_scsi_page83_inquiry>:
  2140c8:	sub	sp, sp, #0x190
  2140cc:	stp	x24, x23, [sp, #352]
  2140d0:	stp	x22, x21, [sp, #368]
  2140d4:	stp	x20, x19, [sp, #384]
  2140d8:	mov	w20, w4
  2140dc:	mov	x21, x3
  2140e0:	mov	x23, x2
  2140e4:	mov	w4, #0x100                 	// #256
  2140e8:	mov	x2, xzr
  2140ec:	mov	x3, x5
  2140f0:	stp	x29, x30, [sp, #304]
  2140f4:	stp	x28, x27, [sp, #320]
  2140f8:	stp	x26, x25, [sp, #336]
  2140fc:	add	x29, sp, #0x130
  214100:	str	x7, [sp, #24]
  214104:	mov	x24, x6
  214108:	mov	w25, w1
  21410c:	mov	x19, x0
  214110:	bl	213f28 <do_scsi_page80_inquiry>
  214114:	movi	v0.2d, #0x0
  214118:	add	x8, sp, #0xf
  21411c:	add	x4, sp, #0x20
  214120:	mov	w2, #0x1                   	// #1
  214124:	mov	w3, #0x83                  	// #131
  214128:	mov	x0, x19
  21412c:	mov	w1, w25
  214130:	stp	q0, q0, [sp, #32]
  214134:	stp	q0, q0, [sp, #64]
  214138:	stp	q0, q0, [sp, #96]
  21413c:	stp	q0, q0, [sp, #128]
  214140:	stp	q0, q0, [sp, #160]
  214144:	stp	q0, q0, [sp, #192]
  214148:	stp	q0, q0, [sp, #224]
  21414c:	str	q0, [sp, #256]
  214150:	stur	q0, [x8, #255]
  214154:	mov	w26, #0x1                   	// #1
  214158:	bl	213984 <scsi_inquiry>
  21415c:	tbnz	w0, #31, 2141d4 <do_scsi_page83_inquiry+0x10c>
  214160:	ldrb	w8, [sp, #33]
  214164:	cmp	w8, #0x83
  214168:	b.ne	214190 <do_scsi_page83_inquiry+0xc8>  // b.any
  21416c:	ldrb	w8, [sp, #38]
  214170:	cbz	w8, 2141f8 <do_scsi_page83_inquiry+0x130>
  214174:	add	x0, sp, #0x20
  214178:	mov	x1, x23
  21417c:	mov	x2, x21
  214180:	mov	w3, w20
  214184:	bl	214d34 <check_fill_0x83_prespc3>
  214188:	mov	w26, wzr
  21418c:	b	2141d4 <do_scsi_page83_inquiry+0x10c>
  214190:	mov	w0, #0x1                   	// #1
  214194:	mov	w26, #0x1                   	// #1
  214198:	bl	215710 <log_get_max_level_realm@plt>
  21419c:	cmp	w0, #0x7
  2141a0:	b.lt	2141d4 <do_scsi_page83_inquiry+0x10c>  // b.tstop
  2141a4:	adrp	x2, 201000 <options-0x758>
  2141a8:	adrp	x4, 202000 <hex_str+0x1b1>
  2141ac:	adrp	x5, 201000 <options-0x758>
  2141b0:	add	x6, x19, #0x40
  2141b4:	add	x2, x2, #0xd43
  2141b8:	add	x4, x4, #0x4d6
  2141bc:	add	x5, x5, #0x9f9
  2141c0:	mov	w0, #0x407                 	// #1031
  2141c4:	mov	w3, #0x239                 	// #569
  2141c8:	mov	w1, wzr
  2141cc:	bl	215720 <log_internal_realm@plt>
  2141d0:	mov	w26, #0x1                   	// #1
  2141d4:	mov	w0, w26
  2141d8:	ldp	x20, x19, [sp, #384]
  2141dc:	ldp	x22, x21, [sp, #368]
  2141e0:	ldp	x24, x23, [sp, #352]
  2141e4:	ldp	x26, x25, [sp, #336]
  2141e8:	ldp	x28, x27, [sp, #320]
  2141ec:	ldp	x29, x30, [sp, #304]
  2141f0:	add	sp, sp, #0x190
  2141f4:	ret
  2141f8:	ldr	x28, [x29, #96]
  2141fc:	add	x27, sp, #0x20
  214200:	str	xzr, [sp, #16]
  214204:	b	214220 <do_scsi_page83_inquiry+0x158>
  214208:	ldr	x8, [sp, #16]
  21420c:	mov	w26, #0x1                   	// #1
  214210:	add	x8, x8, #0x1
  214214:	cmp	x8, #0xd
  214218:	str	x8, [sp, #16]
  21421c:	b.eq	2141d4 <do_scsi_page83_inquiry+0x10c>  // b.none
  214220:	ldrh	w8, [sp, #34]
  214224:	lsl	w8, w8, #16
  214228:	rev	w8, w8
  21422c:	cbz	w8, 214208 <do_scsi_page83_inquiry+0x140>
  214230:	ldr	x8, [sp, #16]
  214234:	adrp	x9, 202000 <hex_str+0x1b1>
  214238:	add	x9, x9, #0x4f2
  21423c:	mov	w22, #0x4                   	// #4
  214240:	add	x8, x8, x8, lsl #1
  214244:	add	x25, x9, x8
  214248:	ldr	x7, [sp, #24]
  21424c:	add	x1, x27, w22, uxtw
  214250:	mov	x0, x19
  214254:	mov	x2, x25
  214258:	mov	x3, x23
  21425c:	mov	x4, x21
  214260:	mov	w5, w20
  214264:	mov	x6, x24
  214268:	str	x28, [sp]
  21426c:	bl	214df8 <check_fill_0x83_id>
  214270:	mov	w26, w0
  214274:	cbz	w0, 2141d4 <do_scsi_page83_inquiry+0x10c>
  214278:	tbnz	w26, #31, 2141d4 <do_scsi_page83_inquiry+0x10c>
  21427c:	add	w8, w22, #0x3
  214280:	ldrh	w9, [sp, #34]
  214284:	ldrb	w8, [x27, w8, uxtw]
  214288:	lsl	w9, w9, #16
  21428c:	add	w8, w22, w8
  214290:	rev	w9, w9
  214294:	add	w22, w8, #0x4
  214298:	add	w8, w9, #0x3
  21429c:	cmp	w22, w8
  2142a0:	b.ls	214248 <do_scsi_page83_inquiry+0x180>  // b.plast
  2142a4:	b	214208 <do_scsi_page83_inquiry+0x140>

00000000002142a8 <do_scsi_page83_prespc3_inquiry>:
  2142a8:	sub	sp, sp, #0x130
  2142ac:	stp	x20, x19, [sp, #288]
  2142b0:	mov	x19, x2
  2142b4:	movi	v0.2d, #0x0
  2142b8:	mov	x4, sp
  2142bc:	mov	w2, #0x1                   	// #1
  2142c0:	mov	w3, #0x83                  	// #131
  2142c4:	stp	x29, x30, [sp, #256]
  2142c8:	stp	x28, x21, [sp, #272]
  2142cc:	add	x29, sp, #0x100
  2142d0:	mov	x20, x0
  2142d4:	stur	q0, [sp, #238]
  2142d8:	stp	q0, q0, [sp, #208]
  2142dc:	stp	q0, q0, [sp, #176]
  2142e0:	stp	q0, q0, [sp, #144]
  2142e4:	stp	q0, q0, [sp, #112]
  2142e8:	stp	q0, q0, [sp, #80]
  2142ec:	stp	q0, q0, [sp, #48]
  2142f0:	stp	q0, q0, [sp, #16]
  2142f4:	str	q0, [sp]
  2142f8:	mov	w21, #0x1                   	// #1
  2142fc:	bl	213984 <scsi_inquiry>
  214300:	tbnz	w0, #31, 2143cc <do_scsi_page83_prespc3_inquiry+0x124>
  214304:	ldrb	w8, [sp, #1]
  214308:	cmp	w8, #0x83
  21430c:	b.ne	214380 <do_scsi_page83_prespc3_inquiry+0xd8>  // b.any
  214310:	ldrb	w8, [sp, #6]
  214314:	cbz	w8, 2143c8 <do_scsi_page83_prespc3_inquiry+0x120>
  214318:	mov	w8, #0x33                  	// #51
  21431c:	strb	w8, [x19]
  214320:	ldrb	w8, [sp, #3]
  214324:	cbz	w8, 214378 <do_scsi_page83_prespc3_inquiry+0xd0>
  214328:	mov	x0, x19
  21432c:	bl	2157c0 <strlen@plt>
  214330:	ldrb	w11, [sp, #3]
  214334:	add	x10, x19, w0, sxtw
  214338:	adrp	x12, 201000 <options-0x758>
  21433c:	mov	w8, #0x4                   	// #4
  214340:	mov	x9, sp
  214344:	add	x10, x10, #0x1
  214348:	add	x11, x11, #0x4
  21434c:	add	x12, x12, #0xe4f
  214350:	ldrb	w13, [x9, x8]
  214354:	add	x8, x8, #0x1
  214358:	cmp	x8, x11
  21435c:	lsr	x14, x13, #4
  214360:	and	x13, x13, #0xf
  214364:	ldrb	w14, [x12, x14]
  214368:	ldrb	w13, [x12, x13]
  21436c:	sturb	w14, [x10, #-1]
  214370:	strb	w13, [x10], #2
  214374:	b.cc	214350 <do_scsi_page83_prespc3_inquiry+0xa8>  // b.lo, b.ul, b.last
  214378:	mov	w21, wzr
  21437c:	b	2143cc <do_scsi_page83_prespc3_inquiry+0x124>
  214380:	mov	w0, #0x1                   	// #1
  214384:	mov	w21, #0x1                   	// #1
  214388:	bl	215710 <log_get_max_level_realm@plt>
  21438c:	cmp	w0, #0x7
  214390:	b.lt	2143cc <do_scsi_page83_prespc3_inquiry+0x124>  // b.tstop
  214394:	adrp	x2, 201000 <options-0x758>
  214398:	adrp	x4, 201000 <options-0x758>
  21439c:	adrp	x5, 201000 <options-0x758>
  2143a0:	add	x6, x20, #0x40
  2143a4:	add	x2, x2, #0xd43
  2143a8:	add	x4, x4, #0xa80
  2143ac:	add	x5, x5, #0x9f9
  2143b0:	mov	w0, #0x407                 	// #1031
  2143b4:	mov	w3, #0x28b                 	// #651
  2143b8:	mov	w1, wzr
  2143bc:	bl	215720 <log_internal_realm@plt>
  2143c0:	mov	w21, #0x1                   	// #1
  2143c4:	b	2143cc <do_scsi_page83_prespc3_inquiry+0x124>
  2143c8:	mov	w21, #0x2                   	// #2
  2143cc:	mov	w0, w21
  2143d0:	ldp	x20, x19, [sp, #288]
  2143d4:	ldp	x28, x21, [sp, #272]
  2143d8:	ldp	x29, x30, [sp, #256]
  2143dc:	add	sp, sp, #0x130
  2143e0:	ret

00000000002143e4 <do_scsi_page0_inquiry>:
  2143e4:	stp	x29, x30, [sp, #-48]!
  2143e8:	stp	x22, x21, [sp, #16]
  2143ec:	mov	x21, x2
  2143f0:	movi	v0.2d, #0x0
  2143f4:	stp	x20, x19, [sp, #32]
  2143f8:	stur	q0, [x2, #238]
  2143fc:	stp	q0, q0, [x2, #208]
  214400:	stp	q0, q0, [x2, #176]
  214404:	stp	q0, q0, [x2, #144]
  214408:	stp	q0, q0, [x2, #112]
  21440c:	stp	q0, q0, [x2, #80]
  214410:	stp	q0, q0, [x2, #48]
  214414:	stp	q0, q0, [x2, #16]
  214418:	str	q0, [x2]
  21441c:	mov	w2, #0x1                   	// #1
  214420:	mov	w3, wzr
  214424:	mov	x4, x21
  214428:	mov	x29, sp
  21442c:	mov	x19, x0
  214430:	mov	w20, #0x1                   	// #1
  214434:	bl	213984 <scsi_inquiry>
  214438:	tbnz	w0, #31, 214540 <do_scsi_page0_inquiry+0x15c>
  21443c:	ldrb	w8, [x21, #1]
  214440:	cbz	w8, 21448c <do_scsi_page0_inquiry+0xa8>
  214444:	mov	w0, #0x1                   	// #1
  214448:	mov	w20, #0x1                   	// #1
  21444c:	bl	215710 <log_get_max_level_realm@plt>
  214450:	cmp	w0, #0x7
  214454:	b.lt	214540 <do_scsi_page0_inquiry+0x15c>  // b.tstop
  214458:	adrp	x2, 201000 <options-0x758>
  21445c:	adrp	x4, 201000 <options-0x758>
  214460:	adrp	x5, 202000 <hex_str+0x1b1>
  214464:	add	x6, x19, #0x40
  214468:	add	x2, x2, #0xd43
  21446c:	add	x4, x4, #0xd19
  214470:	add	x5, x5, #0x57
  214474:	mov	w0, #0x407                 	// #1031
  214478:	mov	w3, #0x172                 	// #370
  21447c:	mov	w1, wzr
  214480:	bl	215720 <log_internal_realm@plt>
  214484:	mov	w20, #0x1                   	// #1
  214488:	b	214540 <do_scsi_page0_inquiry+0x15c>
  21448c:	ldrb	w22, [x21, #3]
  214490:	cmp	w22, #0xff
  214494:	b.eq	2144bc <do_scsi_page0_inquiry+0xd8>  // b.none
  214498:	cmp	w22, #0x11
  21449c:	b.cc	2144b4 <do_scsi_page0_inquiry+0xd0>  // b.lo, b.ul, b.last
  2144a0:	add	x0, x21, #0x8
  2144a4:	mov	w2, #0x8                   	// #8
  2144a8:	mov	x1, x19
  2144ac:	bl	2158d0 <strncmp@plt>
  2144b0:	cbz	w0, 214504 <do_scsi_page0_inquiry+0x120>
  2144b4:	mov	w20, wzr
  2144b8:	b	214540 <do_scsi_page0_inquiry+0x15c>
  2144bc:	mov	w0, #0x1                   	// #1
  2144c0:	mov	w20, #0x1                   	// #1
  2144c4:	bl	215710 <log_get_max_level_realm@plt>
  2144c8:	cmp	w0, #0x7
  2144cc:	b.lt	214540 <do_scsi_page0_inquiry+0x15c>  // b.tstop
  2144d0:	adrp	x2, 201000 <options-0x758>
  2144d4:	adrp	x4, 201000 <options-0x758>
  2144d8:	adrp	x5, 201000 <options-0x758>
  2144dc:	add	x6, x19, #0x40
  2144e0:	add	x2, x2, #0xd43
  2144e4:	add	x4, x4, #0xd19
  2144e8:	add	x5, x5, #0xf23
  2144ec:	mov	w0, #0x407                 	// #1031
  2144f0:	mov	w3, #0x176                 	// #374
  2144f4:	mov	w1, wzr
  2144f8:	mov	w7, w22
  2144fc:	bl	215720 <log_internal_realm@plt>
  214500:	b	214484 <do_scsi_page0_inquiry+0xa0>
  214504:	mov	w0, #0x1                   	// #1
  214508:	mov	w20, #0x1                   	// #1
  21450c:	bl	215710 <log_get_max_level_realm@plt>
  214510:	cmp	w0, #0x7
  214514:	b.lt	214540 <do_scsi_page0_inquiry+0x15c>  // b.tstop
  214518:	adrp	x2, 201000 <options-0x758>
  21451c:	adrp	x4, 201000 <options-0x758>
  214520:	adrp	x5, 201000 <options-0x758>
  214524:	add	x6, x19, #0x40
  214528:	add	x2, x2, #0xd43
  21452c:	add	x4, x4, #0xd19
  214530:	add	x5, x5, #0xcb7
  214534:	mov	w0, #0x407                 	// #1031
  214538:	mov	w3, #0x187                 	// #391
  21453c:	b	21447c <do_scsi_page0_inquiry+0x98>
  214540:	mov	w0, w20
  214544:	ldp	x20, x19, [sp, #32]
  214548:	ldp	x22, x21, [sp, #16]
  21454c:	ldp	x29, x30, [sp], #48
  214550:	ret

0000000000214554 <sg_err_category4>:
  214554:	stp	x29, x30, [sp, #-16]!
  214558:	ldp	w1, w8, [x0, #112]
  21455c:	ldr	w2, [x0, #108]
  214560:	ldr	x3, [x0, #48]
  214564:	ldr	w4, [x0, #132]
  214568:	mov	w0, w8
  21456c:	mov	x29, sp
  214570:	bl	2147bc <sg_err_category_new>
  214574:	ldp	x29, x30, [sp], #16
  214578:	ret

000000000021457c <sg_err_category3>:
  21457c:	stp	x29, x30, [sp, #-16]!
  214580:	ldrb	w8, [x0, #64]
  214584:	ldrh	w1, [x0, #68]
  214588:	ldrh	w2, [x0, #70]
  21458c:	ldr	x3, [x0, #32]
  214590:	ldrb	w4, [x0, #67]
  214594:	mov	w0, w8
  214598:	mov	x29, sp
  21459c:	bl	2147bc <sg_err_category_new>
  2145a0:	ldp	x29, x30, [sp], #16
  2145a4:	ret

00000000002145a8 <scsi_dump_v4>:
  2145a8:	sub	sp, sp, #0x40
  2145ac:	stp	x29, x30, [sp, #16]
  2145b0:	stp	x20, x19, [sp, #48]
  2145b4:	str	x21, [sp, #32]
  2145b8:	ldr	w21, [x1, #116]
  2145bc:	mov	x19, x1
  2145c0:	mov	x20, x0
  2145c4:	add	x29, sp, #0x10
  2145c8:	cbnz	w21, 2145dc <scsi_dump_v4+0x34>
  2145cc:	ldr	w8, [x19, #112]
  2145d0:	cbnz	w8, 2145dc <scsi_dump_v4+0x34>
  2145d4:	ldr	w8, [x19, #108]
  2145d8:	cbz	w8, 21465c <scsi_dump_v4+0xb4>
  2145dc:	mov	w0, #0x1                   	// #1
  2145e0:	bl	215710 <log_get_max_level_realm@plt>
  2145e4:	cmp	w0, #0x7
  2145e8:	b.lt	214624 <scsi_dump_v4+0x7c>  // b.tstop
  2145ec:	ldp	w7, w8, [x19, #108]
  2145f0:	adrp	x2, 201000 <options-0x758>
  2145f4:	adrp	x4, 202000 <hex_str+0x1b1>
  2145f8:	adrp	x5, 202000 <hex_str+0x1b1>
  2145fc:	add	x6, x20, #0x40
  214600:	add	x2, x2, #0xd43
  214604:	add	x4, x4, #0x4a
  214608:	add	x5, x5, #0x3bc
  21460c:	mov	w0, #0x407                 	// #1031
  214610:	mov	w3, #0x105                 	// #261
  214614:	mov	w1, wzr
  214618:	str	w21, [sp, #8]
  21461c:	str	w8, [sp]
  214620:	bl	215720 <log_internal_realm@plt>
  214624:	ldr	w8, [x19, #116]
  214628:	cmp	w8, #0x2
  21462c:	b.ne	214644 <scsi_dump_v4+0x9c>  // b.any
  214630:	ldr	x1, [x19, #48]
  214634:	ldr	w2, [x19, #132]
  214638:	mov	x0, x20
  21463c:	bl	2148cc <scsi_dump_sense>
  214640:	b	214648 <scsi_dump_v4+0xa0>
  214644:	mov	w0, #0xffffffff            	// #-1
  214648:	ldp	x20, x19, [sp, #48]
  21464c:	ldr	x21, [sp, #32]
  214650:	ldp	x29, x30, [sp, #16]
  214654:	add	sp, sp, #0x40
  214658:	ret
  21465c:	mov	w0, #0x1                   	// #1
  214660:	bl	215710 <log_get_max_level_realm@plt>
  214664:	cmp	w0, #0x7
  214668:	b.lt	2146a0 <scsi_dump_v4+0xf8>  // b.tstop
  21466c:	adrp	x4, 202000 <hex_str+0x1b1>
  214670:	adrp	x2, 201000 <options-0x758>
  214674:	adrp	x5, 202000 <hex_str+0x1b1>
  214678:	add	x4, x4, #0x4a
  21467c:	mov	w1, #0x16                  	// #22
  214680:	add	x2, x2, #0xd43
  214684:	add	x5, x5, #0x433
  214688:	mov	w0, #0x407                 	// #1031
  21468c:	movk	w1, #0x4000, lsl #16
  214690:	mov	w3, #0x102                 	// #258
  214694:	mov	x6, x4
  214698:	bl	215720 <log_internal_realm@plt>
  21469c:	b	214648 <scsi_dump_v4+0xa0>
  2146a0:	mov	w0, #0xffffffea            	// #-22
  2146a4:	b	214648 <scsi_dump_v4+0xa0>

00000000002146a8 <scsi_dump>:
  2146a8:	sub	sp, sp, #0x50
  2146ac:	stp	x29, x30, [sp, #32]
  2146b0:	stp	x20, x19, [sp, #64]
  2146b4:	str	x21, [sp, #48]
  2146b8:	ldrb	w21, [x1, #64]
  2146bc:	mov	x19, x1
  2146c0:	mov	x20, x0
  2146c4:	add	x29, sp, #0x20
  2146c8:	cbnz	w21, 2146e4 <scsi_dump+0x3c>
  2146cc:	ldrh	w8, [x19, #68]
  2146d0:	cbnz	w8, 2146e4 <scsi_dump+0x3c>
  2146d4:	ldrb	w8, [x19, #66]
  2146d8:	cbnz	w8, 2146e4 <scsi_dump+0x3c>
  2146dc:	ldrh	w8, [x19, #70]
  2146e0:	cbz	w8, 214770 <scsi_dump+0xc8>
  2146e4:	mov	w0, #0x1                   	// #1
  2146e8:	bl	215710 <log_get_max_level_realm@plt>
  2146ec:	cmp	w0, #0x7
  2146f0:	b.lt	214738 <scsi_dump+0x90>  // b.tstop
  2146f4:	ldrh	w7, [x19, #70]
  2146f8:	ldrh	w8, [x19, #68]
  2146fc:	ldrb	w9, [x19, #66]
  214700:	adrp	x2, 201000 <options-0x758>
  214704:	adrp	x4, 201000 <options-0x758>
  214708:	adrp	x5, 202000 <hex_str+0x1b1>
  21470c:	add	x6, x20, #0x40
  214710:	add	x2, x2, #0xd43
  214714:	add	x4, x4, #0x9ef
  214718:	add	x5, x5, #0x487
  21471c:	mov	w0, #0x407                 	// #1031
  214720:	mov	w3, #0xf3                  	// #243
  214724:	mov	w1, wzr
  214728:	str	w21, [sp, #16]
  21472c:	str	w9, [sp, #8]
  214730:	str	w8, [sp]
  214734:	bl	215720 <log_internal_realm@plt>
  214738:	ldrb	w8, [x19, #64]
  21473c:	cmp	w8, #0x2
  214740:	b.ne	214758 <scsi_dump+0xb0>  // b.any
  214744:	ldr	x1, [x19, #32]
  214748:	ldrb	w2, [x19, #67]
  21474c:	mov	x0, x20
  214750:	bl	2148cc <scsi_dump_sense>
  214754:	b	21475c <scsi_dump+0xb4>
  214758:	mov	w0, #0xffffffff            	// #-1
  21475c:	ldp	x20, x19, [sp, #64]
  214760:	ldr	x21, [sp, #48]
  214764:	ldp	x29, x30, [sp, #32]
  214768:	add	sp, sp, #0x50
  21476c:	ret
  214770:	mov	w0, #0x1                   	// #1
  214774:	bl	215710 <log_get_max_level_realm@plt>
  214778:	cmp	w0, #0x7
  21477c:	b.lt	2147b4 <scsi_dump+0x10c>  // b.tstop
  214780:	adrp	x4, 201000 <options-0x758>
  214784:	adrp	x2, 201000 <options-0x758>
  214788:	adrp	x5, 202000 <hex_str+0x1b1>
  21478c:	add	x4, x4, #0x9ef
  214790:	mov	w1, #0x16                  	// #22
  214794:	add	x2, x2, #0xd43
  214798:	add	x5, x5, #0x433
  21479c:	mov	w0, #0x407                 	// #1031
  2147a0:	movk	w1, #0x4000, lsl #16
  2147a4:	mov	w3, #0xf0                  	// #240
  2147a8:	mov	x6, x4
  2147ac:	bl	215720 <log_internal_realm@plt>
  2147b0:	b	21475c <scsi_dump+0xb4>
  2147b4:	mov	w0, #0xffffffea            	// #-22
  2147b8:	b	21475c <scsi_dump+0xb4>

00000000002147bc <sg_err_category_new>:
  2147bc:	and	w8, w0, #0x7e
  2147c0:	orr	w9, w8, w1
  2147c4:	orr	w9, w9, w2
  2147c8:	cbz	w9, 21480c <sg_err_category_new+0x50>
  2147cc:	orr	w8, w8, #0x20
  2147d0:	cmp	w8, #0x22
  2147d4:	b.eq	2147e4 <sg_err_category_new+0x28>  // b.none
  2147d8:	and	w8, w2, #0xf
  2147dc:	cmp	w8, #0x8
  2147e0:	b.ne	214824 <sg_err_category_new+0x68>  // b.any
  2147e4:	cbz	x3, 2148c4 <sg_err_category_new+0x108>
  2147e8:	cmp	w4, #0x3
  2147ec:	b.lt	2148c4 <sg_err_category_new+0x108>  // b.tstop
  2147f0:	ldrb	w8, [x3]
  2147f4:	tbnz	w8, #1, 214814 <sg_err_category_new+0x58>
  2147f8:	ldrb	w8, [x3, #2]
  2147fc:	cmp	w4, #0xd
  214800:	b.lt	21483c <sg_err_category_new+0x80>  // b.tstop
  214804:	mov	w9, #0xc                   	// #12
  214808:	b	21481c <sg_err_category_new+0x60>
  21480c:	mov	w0, wzr
  214810:	ret
  214814:	ldrb	w8, [x3, #1]
  214818:	mov	w9, #0x2                   	// #2
  21481c:	ldrb	w9, [x3, x9]
  214820:	b	214840 <sg_err_category_new+0x84>
  214824:	subs	w8, w1, #0x1
  214828:	mov	w0, #0x3                   	// #3
  21482c:	b.cc	2148a8 <sg_err_category_new+0xec>  // b.lo, b.ul, b.last
  214830:	cmp	w8, #0x3
  214834:	b.cs	2148a8 <sg_err_category_new+0xec>  // b.hs, b.nlast
  214838:	ret
  21483c:	mov	w9, wzr
  214840:	and	w8, w8, #0xf
  214844:	cmp	w8, #0x1
  214848:	b.eq	214898 <sg_err_category_new+0xdc>  // b.none
  21484c:	cmp	w8, #0x5
  214850:	b.eq	214888 <sg_err_category_new+0xcc>  // b.none
  214854:	cmp	w8, #0x6
  214858:	b.ne	21487c <sg_err_category_new+0xc0>  // b.any
  21485c:	cmp	w9, #0x28
  214860:	b.eq	2148b8 <sg_err_category_new+0xfc>  // b.none
  214864:	cmp	w9, #0x29
  214868:	b.ne	21487c <sg_err_category_new+0xc0>  // b.any
  21486c:	mov	w8, wzr
  214870:	mov	w0, #0x2                   	// #2
  214874:	cbz	w8, 214838 <sg_err_category_new+0x7c>
  214878:	b	2148c4 <sg_err_category_new+0x108>
  21487c:	mov	w8, #0x1                   	// #1
  214880:	cbz	w8, 214838 <sg_err_category_new+0x7c>
  214884:	b	2148c4 <sg_err_category_new+0x108>
  214888:	mov	w8, wzr
  21488c:	mov	w0, #0x5                   	// #5
  214890:	cbz	w8, 214838 <sg_err_category_new+0x7c>
  214894:	b	2148c4 <sg_err_category_new+0x108>
  214898:	mov	w8, wzr
  21489c:	mov	w0, #0x4                   	// #4
  2148a0:	cbz	w8, 214838 <sg_err_category_new+0x7c>
  2148a4:	b	2148c4 <sg_err_category_new+0x108>
  2148a8:	cmp	w2, #0x6
  2148ac:	mov	w8, #0x63                  	// #99
  2148b0:	csel	w0, w0, w8, eq  // eq = none
  2148b4:	ret
  2148b8:	mov	w8, wzr
  2148bc:	mov	w0, #0x1                   	// #1
  2148c0:	cbz	w8, 214838 <sg_err_category_new+0x7c>
  2148c4:	mov	w0, #0x62                  	// #98
  2148c8:	ret

00000000002148cc <scsi_dump_sense>:
  2148cc:	sub	sp, sp, #0x60
  2148d0:	stp	x20, x19, [sp, #80]
  2148d4:	cmp	w2, #0x0
  2148d8:	mov	x19, x0
  2148dc:	stp	x29, x30, [sp, #16]
  2148e0:	str	x25, [sp, #32]
  2148e4:	stp	x24, x23, [sp, #48]
  2148e8:	stp	x22, x21, [sp, #64]
  2148ec:	add	x29, sp, #0x10
  2148f0:	b.le	214964 <scsi_dump_sense+0x98>
  2148f4:	ldrb	w24, [x1]
  2148f8:	mov	w23, w2
  2148fc:	mov	x22, x1
  214900:	ubfx	w21, w24, #4, #3
  214904:	cmp	w21, #0x7
  214908:	and	w20, w24, #0xf
  21490c:	b.ne	2149a8 <scsi_dump_sense+0xdc>  // b.any
  214910:	ldrb	w8, [x22, #7]
  214914:	add	w21, w8, #0x8
  214918:	subs	w25, w21, w23
  21491c:	b.le	214a04 <scsi_dump_sense+0x138>
  214920:	mov	w0, #0x1                   	// #1
  214924:	bl	215710 <log_get_max_level_realm@plt>
  214928:	cmp	w0, #0x7
  21492c:	b.lt	214bf0 <scsi_dump_sense+0x324>  // b.tstop
  214930:	adrp	x2, 201000 <options-0x758>
  214934:	adrp	x4, 201000 <options-0x758>
  214938:	adrp	x5, 201000 <options-0x758>
  21493c:	mov	w1, #0x16                  	// #22
  214940:	add	x6, x19, #0x40
  214944:	add	x2, x2, #0xd43
  214948:	add	x4, x4, #0xd97
  21494c:	add	x5, x5, #0xad4
  214950:	mov	w0, #0x407                 	// #1031
  214954:	movk	w1, #0x4000, lsl #16
  214958:	mov	w3, #0xbb                  	// #187
  21495c:	str	w25, [sp]
  214960:	b	2149f8 <scsi_dump_sense+0x12c>
  214964:	mov	w0, #0x1                   	// #1
  214968:	bl	215710 <log_get_max_level_realm@plt>
  21496c:	cmp	w0, #0x7
  214970:	b.lt	214bf0 <scsi_dump_sense+0x324>  // b.tstop
  214974:	adrp	x2, 201000 <options-0x758>
  214978:	adrp	x4, 201000 <options-0x758>
  21497c:	adrp	x5, 201000 <options-0x758>
  214980:	mov	w1, #0x16                  	// #22
  214984:	add	x6, x19, #0x40
  214988:	add	x2, x2, #0xd43
  21498c:	add	x4, x4, #0xd97
  214990:	add	x5, x5, #0x98e
  214994:	mov	w0, #0x407                 	// #1031
  214998:	movk	w1, #0x4000, lsl #16
  21499c:	mov	w3, #0xad                  	// #173
  2149a0:	bl	215720 <log_internal_realm@plt>
  2149a4:	b	214bf4 <scsi_dump_sense+0x328>
  2149a8:	mov	w0, #0x1                   	// #1
  2149ac:	cmp	w23, #0x3
  2149b0:	b.gt	214a5c <scsi_dump_sense+0x190>
  2149b4:	bl	215710 <log_get_max_level_realm@plt>
  2149b8:	cmp	w0, #0x7
  2149bc:	b.lt	214bf0 <scsi_dump_sense+0x324>  // b.tstop
  2149c0:	mov	w8, #0x4                   	// #4
  2149c4:	sub	w8, w8, w23
  2149c8:	adrp	x2, 201000 <options-0x758>
  2149cc:	adrp	x4, 201000 <options-0x758>
  2149d0:	adrp	x5, 201000 <options-0x758>
  2149d4:	mov	w1, #0x16                  	// #22
  2149d8:	add	x6, x19, #0x40
  2149dc:	add	x2, x2, #0xd43
  2149e0:	add	x4, x4, #0xd97
  2149e4:	add	x5, x5, #0xad4
  2149e8:	mov	w0, #0x407                 	// #1031
  2149ec:	movk	w1, #0x4000, lsl #16
  2149f0:	mov	w3, #0xd9                  	// #217
  2149f4:	str	w8, [sp]
  2149f8:	mov	w7, w23
  2149fc:	bl	215720 <log_internal_realm@plt>
  214a00:	b	214bf4 <scsi_dump_sense+0x328>
  214a04:	cmp	w20, #0x1
  214a08:	b.hi	214aa0 <scsi_dump_sense+0x1d4>  // b.pmore
  214a0c:	cmp	w8, #0x5
  214a10:	b.hi	214b40 <scsi_dump_sense+0x274>  // b.pmore
  214a14:	mov	w0, #0x1                   	// #1
  214a18:	bl	215710 <log_get_max_level_realm@plt>
  214a1c:	cmp	w0, #0x7
  214a20:	b.lt	214bf0 <scsi_dump_sense+0x324>  // b.tstop
  214a24:	adrp	x2, 201000 <options-0x758>
  214a28:	adrp	x4, 201000 <options-0x758>
  214a2c:	adrp	x5, 201000 <options-0x758>
  214a30:	mov	w1, #0x16                  	// #22
  214a34:	add	x6, x19, #0x40
  214a38:	add	x2, x2, #0xd43
  214a3c:	add	x4, x4, #0xd97
  214a40:	add	x5, x5, #0xcdd
  214a44:	mov	w0, #0x407                 	// #1031
  214a48:	movk	w1, #0x4000, lsl #16
  214a4c:	mov	w3, #0xc5                  	// #197
  214a50:	mov	w7, w21
  214a54:	bl	215720 <log_internal_realm@plt>
  214a58:	b	214bf4 <scsi_dump_sense+0x328>
  214a5c:	bl	215710 <log_get_max_level_realm@plt>
  214a60:	cmp	w24, #0xe
  214a64:	b.hi	214abc <scsi_dump_sense+0x1f0>  // b.pmore
  214a68:	cmp	w0, #0x7
  214a6c:	b.lt	214afc <scsi_dump_sense+0x230>  // b.tstop
  214a70:	adrp	x2, 201000 <options-0x758>
  214a74:	adrp	x4, 201000 <options-0x758>
  214a78:	adrp	x5, 201000 <options-0x758>
  214a7c:	add	x6, x19, #0x40
  214a80:	add	x2, x2, #0xd43
  214a84:	add	x4, x4, #0xd97
  214a88:	add	x5, x5, #0xd01
  214a8c:	mov	w0, #0x407                 	// #1031
  214a90:	mov	w3, #0xdc                  	// #220
  214a94:	mov	w1, wzr
  214a98:	mov	w7, w20
  214a9c:	b	214af8 <scsi_dump_sense+0x22c>
  214aa0:	and	w8, w24, #0xe
  214aa4:	cmp	w8, #0x2
  214aa8:	b.ne	214ba8 <scsi_dump_sense+0x2dc>  // b.any
  214aac:	mov	w20, #0x3                   	// #3
  214ab0:	mov	w21, #0x2                   	// #2
  214ab4:	mov	w23, #0x1                   	// #1
  214ab8:	b	214b4c <scsi_dump_sense+0x280>
  214abc:	cmp	w0, #0x7
  214ac0:	b.lt	214afc <scsi_dump_sense+0x230>  // b.tstop
  214ac4:	ldrb	w8, [x22, #2]
  214ac8:	adrp	x2, 201000 <options-0x758>
  214acc:	adrp	x4, 201000 <options-0x758>
  214ad0:	adrp	x5, 201000 <options-0x758>
  214ad4:	add	x6, x19, #0x40
  214ad8:	add	x2, x2, #0xd43
  214adc:	add	x4, x4, #0xd97
  214ae0:	add	x5, x5, #0xed2
  214ae4:	mov	w0, #0x407                 	// #1031
  214ae8:	mov	w3, #0xdf                  	// #223
  214aec:	mov	w1, wzr
  214af0:	mov	w7, w24
  214af4:	str	w8, [sp]
  214af8:	bl	215720 <log_internal_realm@plt>
  214afc:	mov	w0, #0x1                   	// #1
  214b00:	bl	215710 <log_get_max_level_realm@plt>
  214b04:	cmp	w0, #0x7
  214b08:	b.lt	214ba0 <scsi_dump_sense+0x2d4>  // b.tstop
  214b0c:	adrp	x2, 201000 <options-0x758>
  214b10:	adrp	x4, 201000 <options-0x758>
  214b14:	adrp	x5, 202000 <hex_str+0x1b1>
  214b18:	add	x6, x19, #0x40
  214b1c:	add	x2, x2, #0xd43
  214b20:	add	x4, x4, #0xd97
  214b24:	add	x5, x5, #0x369
  214b28:	mov	w0, #0x407                 	// #1031
  214b2c:	mov	w3, #0xe1                  	// #225
  214b30:	mov	w1, wzr
  214b34:	mov	w7, w21
  214b38:	str	w20, [sp]
  214b3c:	b	214b9c <scsi_dump_sense+0x2d0>
  214b40:	mov	w20, #0xd                   	// #13
  214b44:	mov	w21, #0xc                   	// #12
  214b48:	mov	w23, #0x2                   	// #2
  214b4c:	mov	w0, #0x1                   	// #1
  214b50:	bl	215710 <log_get_max_level_realm@plt>
  214b54:	cmp	w0, #0x7
  214b58:	b.lt	214ba0 <scsi_dump_sense+0x2d4>  // b.tstop
  214b5c:	ldrb	w8, [x22, x23]
  214b60:	ldrb	w9, [x22, x21]
  214b64:	ldrb	w10, [x22, x20]
  214b68:	adrp	x2, 201000 <options-0x758>
  214b6c:	adrp	x4, 201000 <options-0x758>
  214b70:	adrp	x5, 201000 <options-0x758>
  214b74:	and	w7, w8, #0xf
  214b78:	add	x6, x19, #0x40
  214b7c:	str	w10, [sp, #8]
  214b80:	add	x2, x2, #0xd43
  214b84:	add	x4, x4, #0xd97
  214b88:	add	x5, x5, #0xc22
  214b8c:	mov	w0, #0x407                 	// #1031
  214b90:	mov	w3, #0xd3                  	// #211
  214b94:	str	w9, [sp]
  214b98:	mov	w1, wzr
  214b9c:	bl	215720 <log_internal_realm@plt>
  214ba0:	mov	w0, #0xffffffff            	// #-1
  214ba4:	b	214bf4 <scsi_dump_sense+0x328>
  214ba8:	mov	w0, #0x1                   	// #1
  214bac:	bl	215710 <log_get_max_level_realm@plt>
  214bb0:	cmp	w0, #0x7
  214bb4:	b.lt	214bf0 <scsi_dump_sense+0x324>  // b.tstop
  214bb8:	adrp	x2, 201000 <options-0x758>
  214bbc:	adrp	x4, 201000 <options-0x758>
  214bc0:	adrp	x5, 201000 <options-0x758>
  214bc4:	mov	w1, #0x16                  	// #22
  214bc8:	add	x6, x19, #0x40
  214bcc:	add	x2, x2, #0xd43
  214bd0:	add	x4, x4, #0xd97
  214bd4:	add	x5, x5, #0xe88
  214bd8:	mov	w0, #0x407                 	// #1031
  214bdc:	movk	w1, #0x4000, lsl #16
  214be0:	mov	w3, #0xd0                  	// #208
  214be4:	mov	w7, w20
  214be8:	bl	215720 <log_internal_realm@plt>
  214bec:	b	214bf4 <scsi_dump_sense+0x328>
  214bf0:	mov	w0, #0xffffffea            	// #-22
  214bf4:	ldp	x20, x19, [sp, #80]
  214bf8:	ldp	x22, x21, [sp, #64]
  214bfc:	ldp	x24, x23, [sp, #48]
  214c00:	ldr	x25, [sp, #32]
  214c04:	ldp	x29, x30, [sp, #16]
  214c08:	add	sp, sp, #0x60
  214c0c:	ret

0000000000214c10 <append_vendor_model>:
  214c10:	stp	x29, x30, [sp, #-48]!
  214c14:	str	x21, [sp, #16]
  214c18:	stp	x20, x19, [sp, #32]
  214c1c:	mov	x29, sp
  214c20:	cbz	x0, 214d10 <append_vendor_model+0x100>
  214c24:	mov	x21, x1
  214c28:	mov	w1, #0x8                   	// #8
  214c2c:	mov	x19, x0
  214c30:	bl	215990 <strnlen@plt>
  214c34:	cmp	x0, #0x8
  214c38:	b.ne	214c6c <append_vendor_model+0x5c>  // b.any
  214c3c:	add	x20, x19, #0x9
  214c40:	mov	w1, #0x10                  	// #16
  214c44:	mov	x0, x20
  214c48:	bl	215990 <strnlen@plt>
  214c4c:	cmp	x0, #0x10
  214c50:	b.ne	214cb4 <append_vendor_model+0xa4>  // b.any
  214c54:	ldr	x8, [x19]
  214c58:	mov	w0, #0x18                  	// #24
  214c5c:	str	x8, [x21]
  214c60:	ldr	q0, [x20]
  214c64:	stur	q0, [x21, #8]
  214c68:	b	214d00 <append_vendor_model+0xf0>
  214c6c:	mov	w0, #0x1                   	// #1
  214c70:	bl	215710 <log_get_max_level_realm@plt>
  214c74:	cmp	w0, #0x7
  214c78:	b.lt	214cfc <append_vendor_model+0xec>  // b.tstop
  214c7c:	adrp	x2, 201000 <options-0x758>
  214c80:	adrp	x4, 201000 <options-0x758>
  214c84:	adrp	x5, 202000 <hex_str+0x1b1>
  214c88:	mov	w1, #0x16                  	// #22
  214c8c:	add	x6, x19, #0x40
  214c90:	add	x2, x2, #0xd43
  214c94:	add	x4, x4, #0xca3
  214c98:	add	x5, x5, #0x4b3
  214c9c:	mov	w0, #0x407                 	// #1031
  214ca0:	movk	w1, #0x4000, lsl #16
  214ca4:	mov	w3, #0x198                 	// #408
  214ca8:	mov	x7, x19
  214cac:	bl	215720 <log_internal_realm@plt>
  214cb0:	b	214d00 <append_vendor_model+0xf0>
  214cb4:	mov	w0, #0x1                   	// #1
  214cb8:	bl	215710 <log_get_max_level_realm@plt>
  214cbc:	cmp	w0, #0x7
  214cc0:	b.lt	214cfc <append_vendor_model+0xec>  // b.tstop
  214cc4:	adrp	x2, 201000 <options-0x758>
  214cc8:	adrp	x4, 201000 <options-0x758>
  214ccc:	adrp	x5, 201000 <options-0x758>
  214cd0:	mov	w1, #0x16                  	// #22
  214cd4:	add	x6, x19, #0x40
  214cd8:	add	x2, x2, #0xd43
  214cdc:	add	x4, x4, #0xca3
  214ce0:	add	x5, x5, #0xbca
  214ce4:	mov	w0, #0x407                 	// #1031
  214ce8:	movk	w1, #0x4000, lsl #16
  214cec:	mov	w3, #0x19c                 	// #412
  214cf0:	mov	x7, x20
  214cf4:	bl	215720 <log_internal_realm@plt>
  214cf8:	b	214d00 <append_vendor_model+0xf0>
  214cfc:	mov	w0, #0xffffffea            	// #-22
  214d00:	ldp	x20, x19, [sp, #32]
  214d04:	ldr	x21, [sp, #16]
  214d08:	ldp	x29, x30, [sp], #48
  214d0c:	ret
  214d10:	adrp	x1, 201000 <options-0x758>
  214d14:	adrp	x2, 201000 <options-0x758>
  214d18:	adrp	x4, 201000 <options-0x758>
  214d1c:	add	x1, x1, #0xb5a
  214d20:	add	x2, x2, #0xd43
  214d24:	add	x4, x4, #0xff6
  214d28:	mov	w0, #0x1                   	// #1
  214d2c:	mov	w3, #0x192                 	// #402
  214d30:	bl	215760 <log_assert_failed_realm@plt>

0000000000214d34 <check_fill_0x83_prespc3>:
  214d34:	stp	x29, x30, [sp, #-48]!
  214d38:	stp	x22, x21, [sp, #16]
  214d3c:	mov	x22, x0
  214d40:	mov	w8, #0x33                  	// #51
  214d44:	mov	x0, x1
  214d48:	stp	x20, x19, [sp, #32]
  214d4c:	mov	x29, sp
  214d50:	mov	w21, w3
  214d54:	mov	x20, x2
  214d58:	mov	x19, x1
  214d5c:	strb	w8, [x1]
  214d60:	bl	2157c0 <strlen@plt>
  214d64:	sub	w9, w21, #0x3
  214d68:	cmp	w9, w0
  214d6c:	b.le	214dd0 <check_fill_0x83_prespc3+0x9c>
  214d70:	ldrb	w8, [x22, #3]
  214d74:	cbz	w8, 214dd0 <check_fill_0x83_prespc3+0x9c>
  214d78:	adrp	x11, 201000 <options-0x758>
  214d7c:	sxtw	x8, w0
  214d80:	sxtw	x9, w9
  214d84:	mov	w10, #0x4                   	// #4
  214d88:	add	x11, x11, #0xe4f
  214d8c:	ldrb	w12, [x22, x10]
  214d90:	add	x13, x19, x8
  214d94:	add	x8, x8, #0x2
  214d98:	cmp	x8, x9
  214d9c:	lsr	x12, x12, #4
  214da0:	ldrb	w12, [x11, x12]
  214da4:	strb	w12, [x13]
  214da8:	ldrb	w12, [x22, x10]
  214dac:	and	x12, x12, #0xf
  214db0:	ldrb	w12, [x11, x12]
  214db4:	strb	w12, [x13, #1]
  214db8:	b.ge	214dd0 <check_fill_0x83_prespc3+0x9c>  // b.tcont
  214dbc:	ldrb	w12, [x22, #3]
  214dc0:	sub	x13, x10, #0x3
  214dc4:	add	x10, x10, #0x1
  214dc8:	cmp	x13, x12
  214dcc:	b.cc	214d8c <check_fill_0x83_prespc3+0x58>  // b.lo, b.ul, b.last
  214dd0:	sxtw	x8, w21
  214dd4:	sub	x2, x8, #0x1
  214dd8:	mov	x0, x20
  214ddc:	mov	x1, x19
  214de0:	strb	wzr, [x19, x2]
  214de4:	bl	2159a0 <strncpy@plt>
  214de8:	ldp	x20, x19, [sp, #32]
  214dec:	ldp	x22, x21, [sp, #16]
  214df0:	ldp	x29, x30, [sp], #48
  214df4:	ret

0000000000214df8 <check_fill_0x83_id>:
  214df8:	sub	sp, sp, #0x70
  214dfc:	stp	x29, x30, [sp, #16]
  214e00:	stp	x26, x25, [sp, #48]
  214e04:	stp	x24, x23, [sp, #64]
  214e08:	stp	x22, x21, [sp, #80]
  214e0c:	stp	x20, x19, [sp, #96]
  214e10:	ldrb	w9, [x1, #1]
  214e14:	mov	x19, x7
  214e18:	mov	x20, x6
  214e1c:	mov	w25, w5
  214e20:	mov	x22, x4
  214e24:	mov	x23, x3
  214e28:	mov	x21, x2
  214e2c:	mov	x24, x1
  214e30:	ands	w8, w9, #0x30
  214e34:	mov	x26, x0
  214e38:	str	x27, [sp, #32]
  214e3c:	add	x29, sp, #0x10
  214e40:	b.eq	214e58 <check_fill_0x83_id+0x60>  // b.none
  214e44:	cmp	w8, #0x10
  214e48:	b.ne	214f34 <check_fill_0x83_id+0x13c>  // b.any
  214e4c:	ldrb	w8, [x21]
  214e50:	cmp	w8, #0x5
  214e54:	b.ne	214f34 <check_fill_0x83_id+0x13c>  // b.any
  214e58:	ldrb	w8, [x21]
  214e5c:	and	w9, w9, #0xf
  214e60:	cmp	w9, w8
  214e64:	b.ne	214f34 <check_fill_0x83_id+0x13c>  // b.any
  214e68:	ldrb	w9, [x21, #1]
  214e6c:	cmp	w9, #0xff
  214e70:	b.eq	214e80 <check_fill_0x83_id+0x88>  // b.none
  214e74:	ldrb	w10, [x24, #4]
  214e78:	cmp	w9, w10, lsr #4
  214e7c:	b.ne	214f34 <check_fill_0x83_id+0x13c>  // b.any
  214e80:	ldrb	w9, [x24]
  214e84:	ldrb	w10, [x21, #2]
  214e88:	and	w9, w9, #0xf
  214e8c:	cmp	w9, w10
  214e90:	b.ne	214f34 <check_fill_0x83_id+0x13c>  // b.any
  214e94:	ldrb	w10, [x24, #3]
  214e98:	cmp	w9, #0x2
  214e9c:	mov	w9, #0x2                   	// #2
  214ea0:	mov	w11, #0x1a                  	// #26
  214ea4:	cset	w12, ne  // ne = any
  214ea8:	cmp	w8, #0x0
  214eac:	lsl	w10, w10, w12
  214eb0:	csel	w9, w11, w9, eq  // eq = none
  214eb4:	add	w27, w10, w9
  214eb8:	cmp	w27, w25
  214ebc:	b.le	214f0c <check_fill_0x83_id+0x114>
  214ec0:	mov	w0, #0x1                   	// #1
  214ec4:	mov	w22, #0x1                   	// #1
  214ec8:	bl	215710 <log_get_max_level_realm@plt>
  214ecc:	cmp	w0, #0x7
  214ed0:	b.lt	214f38 <check_fill_0x83_id+0x140>  // b.tstop
  214ed4:	adrp	x2, 201000 <options-0x758>
  214ed8:	adrp	x4, 202000 <hex_str+0x1b1>
  214edc:	adrp	x5, 201000 <options-0x758>
  214ee0:	add	x6, x26, #0x40
  214ee4:	add	x2, x2, #0xd43
  214ee8:	add	x4, x4, #0x3f4
  214eec:	add	x5, x5, #0xf01
  214ef0:	mov	w0, #0x407                 	// #1031
  214ef4:	mov	w3, #0x1db                 	// #475
  214ef8:	mov	w1, wzr
  214efc:	mov	w7, w25
  214f00:	str	w27, [sp]
  214f04:	bl	215720 <log_internal_realm@plt>
  214f08:	b	214f34 <check_fill_0x83_id+0x13c>
  214f0c:	ldr	x0, [x29, #96]
  214f10:	cbz	x0, 214f5c <check_fill_0x83_id+0x164>
  214f14:	cmp	w8, #0x5
  214f18:	b.ne	214f5c <check_fill_0x83_id+0x164>  // b.any
  214f1c:	ldrh	w8, [x24, #6]
  214f20:	adrp	x1, 201000 <options-0x758>
  214f24:	add	x1, x1, #0xf63
  214f28:	lsl	w8, w8, #16
  214f2c:	rev	w2, w8
  214f30:	bl	215920 <sprintf@plt>
  214f34:	mov	w22, #0x1                   	// #1
  214f38:	mov	w0, w22
  214f3c:	ldp	x20, x19, [sp, #96]
  214f40:	ldp	x22, x21, [sp, #80]
  214f44:	ldp	x24, x23, [sp, #64]
  214f48:	ldp	x26, x25, [sp, #48]
  214f4c:	ldr	x27, [sp, #32]
  214f50:	ldp	x29, x30, [sp, #16]
  214f54:	add	sp, sp, #0x70
  214f58:	ret
  214f5c:	adrp	x25, 201000 <options-0x758>
  214f60:	add	x25, x25, #0xe4f
  214f64:	ldrb	w8, [x25, x8]
  214f68:	strb	w8, [x23]
  214f6c:	ldrb	w8, [x21]
  214f70:	cbnz	w8, 214f84 <check_fill_0x83_id+0x18c>
  214f74:	add	x1, x23, #0x1
  214f78:	mov	x0, x26
  214f7c:	bl	214c10 <append_vendor_model>
  214f80:	tbnz	w0, #31, 214f34 <check_fill_0x83_id+0x13c>
  214f84:	mov	x0, x23
  214f88:	bl	2157c0 <strlen@plt>
  214f8c:	ldrb	w9, [x24]
  214f90:	ldrb	w8, [x24, #3]
  214f94:	and	w9, w9, #0xf
  214f98:	cmp	w9, #0x2
  214f9c:	b.ne	214fd4 <check_fill_0x83_id+0x1dc>  // b.any
  214fa0:	cbz	w8, 215018 <check_fill_0x83_id+0x220>
  214fa4:	mov	x9, xzr
  214fa8:	add	x8, x23, w0, sxtw
  214fac:	add	x10, x24, #0x4
  214fb0:	ldrb	w11, [x10, x9]
  214fb4:	add	x12, x9, #0x5
  214fb8:	strb	w11, [x8, x9]
  214fbc:	ldrb	w11, [x24, #3]
  214fc0:	add	x9, x9, #0x1
  214fc4:	add	x11, x11, #0x4
  214fc8:	cmp	x12, x11
  214fcc:	b.cc	214fb0 <check_fill_0x83_id+0x1b8>  // b.lo, b.ul, b.last
  214fd0:	b	215018 <check_fill_0x83_id+0x220>
  214fd4:	cbz	w8, 215018 <check_fill_0x83_id+0x220>
  214fd8:	add	x8, x23, w0, sxtw
  214fdc:	add	x8, x8, #0x1
  214fe0:	mov	w9, #0x4                   	// #4
  214fe4:	ldrb	w10, [x24, x9]
  214fe8:	lsr	x10, x10, #4
  214fec:	ldrb	w10, [x25, x10]
  214ff0:	sturb	w10, [x8, #-1]
  214ff4:	ldrb	w10, [x24, x9]
  214ff8:	add	x9, x9, #0x1
  214ffc:	and	x10, x10, #0xf
  215000:	ldrb	w10, [x25, x10]
  215004:	strb	w10, [x8], #2
  215008:	ldrb	w10, [x24, #3]
  21500c:	add	x10, x10, #0x4
  215010:	cmp	x9, x10
  215014:	b.cc	214fe4 <check_fill_0x83_id+0x1ec>  // b.lo, b.ul, b.last
  215018:	add	x23, x23, w0, sxtw
  21501c:	mov	x0, x22
  215020:	mov	x1, x23
  215024:	bl	215810 <strcpy@plt>
  215028:	mov	w22, wzr
  21502c:	cbz	x20, 214f38 <check_fill_0x83_id+0x140>
  215030:	ldrb	w8, [x21]
  215034:	cmp	w8, #0x3
  215038:	b.ne	214f38 <check_fill_0x83_id+0x140>  // b.any
  21503c:	mov	w2, #0x10                  	// #16
  215040:	mov	x0, x20
  215044:	mov	x1, x23
  215048:	bl	2159a0 <strncpy@plt>
  21504c:	cbz	x19, 215060 <check_fill_0x83_id+0x268>
  215050:	add	x1, x23, #0x10
  215054:	mov	w2, #0x10                  	// #16
  215058:	mov	x0, x19
  21505c:	bl	2159a0 <strncpy@plt>
  215060:	mov	w22, wzr
  215064:	b	214f38 <check_fill_0x83_id+0x140>

0000000000215068 <util_resolve_subsys_kernel>:
  215068:	stp	x29, x30, [sp, #-80]!
  21506c:	stp	x28, x25, [sp, #16]
  215070:	stp	x24, x23, [sp, #32]
  215074:	stp	x22, x21, [sp, #48]
  215078:	stp	x20, x19, [sp, #64]
  21507c:	mov	x29, sp
  215080:	sub	sp, sp, #0x420
  215084:	str	xzr, [sp, #24]
  215088:	ldrb	w8, [x0]
  21508c:	cmp	w8, #0x5b
  215090:	b.ne	215114 <util_resolve_subsys_kernel+0xac>  // b.any
  215094:	mov	x22, x2
  215098:	mov	x2, x0
  21509c:	mov	x21, x1
  2150a0:	add	x0, sp, #0x20
  2150a4:	mov	w1, #0x400                 	// #1024
  2150a8:	mov	w24, w3
  2150ac:	add	x19, sp, #0x20
  2150b0:	bl	215870 <strscpy@plt>
  2150b4:	orr	x19, x19, #0x1
  2150b8:	mov	w1, #0x2f                  	// #47
  2150bc:	mov	x0, x19
  2150c0:	bl	2159b0 <strchr@plt>
  2150c4:	cbz	x0, 215114 <util_resolve_subsys_kernel+0xac>
  2150c8:	mov	x20, x0
  2150cc:	strb	wzr, [x20], #1
  2150d0:	mov	w1, #0x5d                  	// #93
  2150d4:	mov	x0, x20
  2150d8:	bl	2159b0 <strchr@plt>
  2150dc:	cbz	x0, 215114 <util_resolve_subsys_kernel+0xac>
  2150e0:	strb	wzr, [x0]
  2150e4:	mov	x8, x0
  2150e8:	ldrb	w9, [x8, #1]!
  2150ec:	add	x10, x0, #0x2
  2150f0:	cmp	w9, #0x2f
  2150f4:	mov	w9, #0x1                   	// #1
  2150f8:	cinc	x9, x9, eq  // eq = none
  2150fc:	ldrb	w9, [x0, x9]
  215100:	csel	x8, x10, x8, eq  // eq = none
  215104:	cmp	w9, #0x0
  215108:	csel	x23, xzr, x8, eq  // eq = none
  21510c:	cbnz	x23, 215140 <util_resolve_subsys_kernel+0xd8>
  215110:	tbz	w24, #0, 215140 <util_resolve_subsys_kernel+0xd8>
  215114:	mov	w25, #0xffffffea            	// #-22
  215118:	add	x0, sp, #0x18
  21511c:	bl	21526c <sd_device_unrefp>
  215120:	mov	w0, w25
  215124:	add	sp, sp, #0x420
  215128:	ldp	x20, x19, [sp, #64]
  21512c:	ldp	x22, x21, [sp, #48]
  215130:	ldp	x24, x23, [sp, #32]
  215134:	ldp	x28, x25, [sp, #16]
  215138:	ldp	x29, x30, [sp], #80
  21513c:	ret
  215140:	add	x0, sp, #0x18
  215144:	mov	x1, x19
  215148:	mov	x2, x20
  21514c:	bl	2159c0 <sd_device_new_from_subsystem_sysname@plt>
  215150:	tbnz	w0, #31, 215204 <util_resolve_subsys_kernel+0x19c>
  215154:	ldr	x0, [sp, #24]
  215158:	tbz	w24, #0, 215188 <util_resolve_subsys_kernel+0x120>
  21515c:	add	x2, sp, #0x10
  215160:	mov	x1, x23
  215164:	bl	2159d0 <sd_device_get_sysattr_value@plt>
  215168:	mov	w25, w0
  21516c:	tbz	w0, #31, 215178 <util_resolve_subsys_kernel+0x110>
  215170:	cmn	w25, #0x2
  215174:	b.ne	215118 <util_resolve_subsys_kernel+0xb0>  // b.any
  215178:	cmn	w25, #0x2
  21517c:	b.ne	21520c <util_resolve_subsys_kernel+0x1a4>  // b.any
  215180:	strb	wzr, [x21]
  215184:	b	21521c <util_resolve_subsys_kernel+0x1b4>
  215188:	add	x1, sp, #0x10
  21518c:	bl	2159e0 <sd_device_get_syspath@plt>
  215190:	tbnz	w0, #31, 215204 <util_resolve_subsys_kernel+0x19c>
  215194:	ldr	x2, [sp, #16]
  215198:	adrp	x8, 201000 <options-0x758>
  21519c:	add	x8, x8, #0xa54
  2151a0:	cmp	x23, #0x0
  2151a4:	csel	x3, x8, xzr, ne  // ne = any
  2151a8:	mov	x0, x21
  2151ac:	mov	x1, x22
  2151b0:	mov	x4, x23
  2151b4:	mov	x5, xzr
  2151b8:	bl	2159f0 <strscpyl@plt>
  2151bc:	mov	w0, wzr
  2151c0:	bl	215710 <log_get_max_level_realm@plt>
  2151c4:	cmp	w0, #0x7
  2151c8:	mov	w25, wzr
  2151cc:	b.lt	215118 <util_resolve_subsys_kernel+0xb0>  // b.tstop
  2151d0:	mov	x0, x23
  2151d4:	bl	215288 <strempty>
  2151d8:	adrp	x2, 201000 <options-0x758>
  2151dc:	adrp	x4, 201000 <options-0x758>
  2151e0:	adrp	x5, 201000 <options-0x758>
  2151e4:	mov	x8, x0
  2151e8:	add	x2, x2, #0xb66
  2151ec:	add	x4, x4, #0xb0c
  2151f0:	add	x5, x5, #0xdd6
  2151f4:	mov	w0, #0x7                   	// #7
  2151f8:	mov	w3, #0x49                  	// #73
  2151fc:	stp	x8, x21, [sp]
  215200:	b	215254 <util_resolve_subsys_kernel+0x1ec>
  215204:	mov	w25, w0
  215208:	b	215118 <util_resolve_subsys_kernel+0xb0>
  21520c:	ldr	x2, [sp, #16]
  215210:	mov	x0, x21
  215214:	mov	x1, x22
  215218:	bl	215870 <strscpy@plt>
  21521c:	mov	w0, wzr
  215220:	bl	215710 <log_get_max_level_realm@plt>
  215224:	cmp	w0, #0x7
  215228:	mov	w25, wzr
  21522c:	b.lt	215118 <util_resolve_subsys_kernel+0xb0>  // b.tstop
  215230:	adrp	x2, 201000 <options-0x758>
  215234:	adrp	x4, 201000 <options-0x758>
  215238:	adrp	x5, 201000 <options-0x758>
  21523c:	add	x2, x2, #0xb66
  215240:	add	x4, x4, #0xb0c
  215244:	add	x5, x5, #0xda7
  215248:	stp	x23, x21, [sp]
  21524c:	mov	w0, #0x7                   	// #7
  215250:	mov	w3, #0x42                  	// #66
  215254:	mov	w1, wzr
  215258:	mov	x6, x19
  21525c:	mov	x7, x20
  215260:	bl	215720 <log_internal_realm@plt>
  215264:	mov	w25, wzr
  215268:	b	215118 <util_resolve_subsys_kernel+0xb0>

000000000021526c <sd_device_unrefp>:
  21526c:	stp	x29, x30, [sp, #-16]!
  215270:	ldr	x0, [x0]
  215274:	mov	x29, sp
  215278:	cbz	x0, 215280 <sd_device_unrefp+0x14>
  21527c:	bl	215a00 <sd_device_unref@plt>
  215280:	ldp	x29, x30, [sp], #16
  215284:	ret

0000000000215288 <strempty>:
  215288:	adrp	x8, 202000 <hex_str+0x1b1>
  21528c:	add	x8, x8, #0x3e3
  215290:	cmp	x0, #0x0
  215294:	csel	x0, x8, x0, eq  // eq = none
  215298:	ret

000000000021529c <util_path_encode>:
  21529c:	stp	x29, x30, [sp, #-16]!
  2152a0:	mov	x29, sp
  2152a4:	cbz	x0, 215338 <util_path_encode+0x9c>
  2152a8:	cbz	x1, 215358 <util_path_encode+0xbc>
  2152ac:	mov	w9, #0x785c                	// #30812
  2152b0:	mov	w10, #0x785c                	// #30812
  2152b4:	mov	x8, x0
  2152b8:	mov	x0, xzr
  2152bc:	movk	w9, #0x6632, lsl #16
  2152c0:	movk	w10, #0x6335, lsl #16
  2152c4:	b	2152e0 <util_path_encode+0x44>
  2152c8:	add	x11, x0, #0x4
  2152cc:	cmp	x11, x2
  2152d0:	b.cs	215328 <util_path_encode+0x8c>  // b.hs, b.nlast
  2152d4:	str	w9, [x1, x0]
  2152d8:	mov	x0, x11
  2152dc:	add	x8, x8, #0x1
  2152e0:	ldrb	w11, [x8]
  2152e4:	cmp	w11, #0x2f
  2152e8:	b.eq	2152c8 <util_path_encode+0x2c>  // b.none
  2152ec:	cmp	w11, #0x5c
  2152f0:	b.eq	215314 <util_path_encode+0x78>  // b.none
  2152f4:	cbz	w11, 21532c <util_path_encode+0x90>
  2152f8:	add	x12, x0, #0x1
  2152fc:	cmp	x12, x2
  215300:	b.cs	215328 <util_path_encode+0x8c>  // b.hs, b.nlast
  215304:	strb	w11, [x1, x0]
  215308:	mov	x0, x12
  21530c:	add	x8, x8, #0x1
  215310:	b	2152e0 <util_path_encode+0x44>
  215314:	add	x11, x0, #0x4
  215318:	cmp	x11, x2
  21531c:	b.cs	215328 <util_path_encode+0x8c>  // b.hs, b.nlast
  215320:	str	w10, [x1, x0]
  215324:	b	2152d8 <util_path_encode+0x3c>
  215328:	mov	x0, xzr
  21532c:	strb	wzr, [x1, x0]
  215330:	ldp	x29, x30, [sp], #16
  215334:	ret
  215338:	adrp	x1, 201000 <options-0x758>
  21533c:	adrp	x2, 201000 <options-0x758>
  215340:	adrp	x4, 201000 <options-0x758>
  215344:	add	x1, x1, #0xcce
  215348:	add	x2, x2, #0xb66
  21534c:	add	x4, x4, #0xf7b
  215350:	mov	w3, #0x51                  	// #81
  215354:	bl	215760 <log_assert_failed_realm@plt>
  215358:	adrp	x1, 201000 <options-0x758>
  21535c:	adrp	x2, 201000 <options-0x758>
  215360:	adrp	x4, 201000 <options-0x758>
  215364:	add	x1, x1, #0xa56
  215368:	add	x2, x2, #0xb66
  21536c:	add	x4, x4, #0xf7b
  215370:	mov	w3, #0x52                  	// #82
  215374:	mov	w0, wzr
  215378:	bl	215760 <log_assert_failed_realm@plt>

000000000021537c <util_replace_whitespace>:
  21537c:	stp	x29, x30, [sp, #-80]!
  215380:	stp	x26, x25, [sp, #16]
  215384:	stp	x24, x23, [sp, #32]
  215388:	stp	x22, x21, [sp, #48]
  21538c:	stp	x20, x19, [sp, #64]
  215390:	mov	x29, sp
  215394:	cbz	x0, 215454 <util_replace_whitespace+0xd8>
  215398:	mov	x19, x1
  21539c:	cbz	x1, 215474 <util_replace_whitespace+0xf8>
  2153a0:	adrp	x1, 202000 <hex_str+0x1b1>
  2153a4:	add	x1, x1, #0x4ed
  2153a8:	mov	x20, x2
  2153ac:	mov	x21, x0
  2153b0:	bl	215a10 <strspn@plt>
  2153b4:	cmp	x0, x20
  2153b8:	b.cs	215430 <util_replace_whitespace+0xb4>  // b.hs, b.nlast
  2153bc:	mov	x23, x0
  2153c0:	mov	x22, xzr
  2153c4:	mov	w25, wzr
  2153c8:	mov	w24, #0x5f                  	// #95
  2153cc:	ldrb	w26, [x21, x23]
  2153d0:	cbz	x26, 215434 <util_replace_whitespace+0xb8>
  2153d4:	bl	2157d0 <__ctype_b_loc@plt>
  2153d8:	ldr	x8, [x0]
  2153dc:	ldrh	w8, [x8, x26, lsl #1]
  2153e0:	tbnz	w8, #13, 215414 <util_replace_whitespace+0x98>
  2153e4:	tbz	w25, #0, 215400 <util_replace_whitespace+0x84>
  2153e8:	add	x8, x22, #0x1
  2153ec:	cmp	x8, x20
  2153f0:	b.cs	215434 <util_replace_whitespace+0xb8>  // b.hs, b.nlast
  2153f4:	mov	w25, wzr
  2153f8:	strb	w24, [x19, x22]
  2153fc:	mov	x22, x8
  215400:	ldrb	w8, [x21, x23]
  215404:	add	x9, x22, #0x1
  215408:	strb	w8, [x19, x22]
  21540c:	mov	x22, x9
  215410:	b	215418 <util_replace_whitespace+0x9c>
  215414:	mov	w25, #0x1                   	// #1
  215418:	add	x23, x23, #0x1
  21541c:	cmp	x23, x20
  215420:	b.cs	215434 <util_replace_whitespace+0xb8>  // b.hs, b.nlast
  215424:	cmp	x22, x20
  215428:	b.cc	2153cc <util_replace_whitespace+0x50>  // b.lo, b.ul, b.last
  21542c:	b	215434 <util_replace_whitespace+0xb8>
  215430:	mov	x22, xzr
  215434:	strb	wzr, [x19, x22]
  215438:	mov	x0, x22
  21543c:	ldp	x20, x19, [sp, #64]
  215440:	ldp	x22, x21, [sp, #48]
  215444:	ldp	x24, x23, [sp, #32]
  215448:	ldp	x26, x25, [sp, #16]
  21544c:	ldp	x29, x30, [sp], #80
  215450:	ret
  215454:	adrp	x1, 201000 <options-0x758>
  215458:	adrp	x2, 201000 <options-0x758>
  21545c:	adrp	x4, 201000 <options-0x758>
  215460:	add	x1, x1, #0xe60
  215464:	add	x2, x2, #0xb66
  215468:	add	x4, x4, #0xb81
  21546c:	mov	w3, #0x84                  	// #132
  215470:	bl	215760 <log_assert_failed_realm@plt>
  215474:	adrp	x1, 201000 <options-0x758>
  215478:	adrp	x2, 201000 <options-0x758>
  21547c:	adrp	x4, 201000 <options-0x758>
  215480:	add	x1, x1, #0xc48
  215484:	add	x2, x2, #0xb66
  215488:	add	x4, x4, #0xb81
  21548c:	mov	w3, #0x85                  	// #133
  215490:	mov	w0, wzr
  215494:	bl	215760 <log_assert_failed_realm@plt>

0000000000215498 <util_replace_chars>:
  215498:	stp	x29, x30, [sp, #-80]!
  21549c:	str	x25, [sp, #16]
  2154a0:	stp	x24, x23, [sp, #32]
  2154a4:	stp	x22, x21, [sp, #48]
  2154a8:	stp	x20, x19, [sp, #64]
  2154ac:	mov	x29, sp
  2154b0:	cbz	x0, 215598 <util_replace_chars+0x100>
  2154b4:	mov	x20, x0
  2154b8:	ldrb	w0, [x0]
  2154bc:	cbz	w0, 215578 <util_replace_chars+0xe0>
  2154c0:	mov	x19, x1
  2154c4:	mov	x23, xzr
  2154c8:	mov	x21, xzr
  2154cc:	mov	w24, #0x20                  	// #32
  2154d0:	mov	w25, #0x5f                  	// #95
  2154d4:	mov	x22, x20
  2154d8:	b	2154ec <util_replace_chars+0x54>
  2154dc:	add	x23, x23, #0x1
  2154e0:	add	x22, x20, x23
  2154e4:	ldrb	w0, [x22]
  2154e8:	cbz	w0, 21557c <util_replace_chars+0xe4>
  2154ec:	mov	x1, x19
  2154f0:	bl	215a20 <whitelisted_char_for_devnode@plt>
  2154f4:	cbnz	w0, 2154dc <util_replace_chars+0x44>
  2154f8:	ldrb	w8, [x22]
  2154fc:	cmp	w8, #0x5c
  215500:	b.ne	21551c <util_replace_chars+0x84>  // b.any
  215504:	add	x8, x23, x20
  215508:	ldrb	w8, [x8, #1]
  21550c:	cmp	w8, #0x78
  215510:	b.ne	21551c <util_replace_chars+0x84>  // b.any
  215514:	add	x23, x23, #0x2
  215518:	b	2154e0 <util_replace_chars+0x48>
  21551c:	mov	x1, #0xffffffffffffffff    	// #-1
  215520:	mov	x0, x22
  215524:	bl	215a30 <utf8_encoded_valid_unichar@plt>
  215528:	cmp	w0, #0x2
  21552c:	b.lt	215538 <util_replace_chars+0xa0>  // b.tstop
  215530:	add	x23, x23, w0, sxtw
  215534:	b	2154e0 <util_replace_chars+0x48>
  215538:	bl	2157d0 <__ctype_b_loc@plt>
  21553c:	cbz	x19, 215568 <util_replace_chars+0xd0>
  215540:	ldr	x8, [x0]
  215544:	ldrb	w9, [x22]
  215548:	ldrh	w8, [x8, x9, lsl #1]
  21554c:	tbz	w8, #13, 215568 <util_replace_chars+0xd0>
  215550:	mov	w1, #0x20                  	// #32
  215554:	mov	x0, x19
  215558:	bl	2159b0 <strchr@plt>
  21555c:	cbz	x0, 215568 <util_replace_chars+0xd0>
  215560:	strb	w24, [x22]
  215564:	b	21556c <util_replace_chars+0xd4>
  215568:	strb	w25, [x22]
  21556c:	add	x23, x23, #0x1
  215570:	add	x21, x21, #0x1
  215574:	b	2154e0 <util_replace_chars+0x48>
  215578:	mov	x21, xzr
  21557c:	mov	x0, x21
  215580:	ldp	x20, x19, [sp, #64]
  215584:	ldp	x22, x21, [sp, #48]
  215588:	ldp	x24, x23, [sp, #32]
  21558c:	ldr	x25, [sp, #16]
  215590:	ldp	x29, x30, [sp], #80
  215594:	ret
  215598:	adrp	x1, 201000 <options-0x758>
  21559c:	adrp	x2, 201000 <options-0x758>
  2155a0:	adrp	x4, 201000 <options-0x758>
  2155a4:	add	x1, x1, #0xe60
  2155a8:	add	x2, x2, #0xb66
  2155ac:	add	x4, x4, #0xfb1
  2155b0:	mov	w3, #0xa1                  	// #161
  2155b4:	bl	215760 <log_assert_failed_realm@plt>

00000000002155b8 <udev_util_encode_string>:
  2155b8:	stp	x29, x30, [sp, #-16]!
  2155bc:	mov	x29, sp
  2155c0:	bl	215a40 <encode_devnode_name@plt>
  2155c4:	ldp	x29, x30, [sp], #16
  2155c8:	ret
  2155cc:	udf	#0

00000000002155d0 <__libc_csu_init>:
  2155d0:	stp	x29, x30, [sp, #-64]!
  2155d4:	mov	x29, sp
  2155d8:	stp	x19, x20, [sp, #16]
  2155dc:	adrp	x20, 225000 <__fxstat64@plt+0xf5b0>
  2155e0:	add	x20, x20, #0xa70
  2155e4:	stp	x21, x22, [sp, #32]
  2155e8:	adrp	x21, 225000 <__fxstat64@plt+0xf5b0>
  2155ec:	add	x21, x21, #0xa68
  2155f0:	sub	x20, x20, x21
  2155f4:	mov	w22, w0
  2155f8:	stp	x23, x24, [sp, #48]
  2155fc:	mov	x23, x1
  215600:	mov	x24, x2
  215604:	bl	215668 <_init>
  215608:	cmp	xzr, x20, asr #3
  21560c:	b.eq	215638 <__libc_csu_init+0x68>  // b.none
  215610:	asr	x20, x20, #3
  215614:	mov	x19, #0x0                   	// #0
  215618:	ldr	x3, [x21, x19, lsl #3]
  21561c:	mov	x2, x24
  215620:	add	x19, x19, #0x1
  215624:	mov	x1, x23
  215628:	mov	w0, w22
  21562c:	blr	x3
  215630:	cmp	x20, x19
  215634:	b.ne	215618 <__libc_csu_init+0x48>  // b.any
  215638:	ldp	x19, x20, [sp, #16]
  21563c:	ldp	x21, x22, [sp, #32]
  215640:	ldp	x23, x24, [sp, #48]
  215644:	ldp	x29, x30, [sp], #64
  215648:	ret
  21564c:	nop

0000000000215650 <__libc_csu_fini>:
  215650:	ret
  215654:	udf	#0

0000000000215658 <fstat64>:
  215658:	mov	x2, x1
  21565c:	mov	w1, w0
  215660:	mov	w0, #0x0                   	// #0
  215664:	b	215a50 <__fxstat64@plt>

Disassembly of section .init:

0000000000215668 <_init>:
  215668:	stp	x29, x30, [sp, #-16]!
  21566c:	mov	x29, sp
  215670:	bl	2126c0 <call_weak_fn>
  215674:	ldp	x29, x30, [sp], #16
  215678:	ret

Disassembly of section .fini:

000000000021567c <_fini>:
  21567c:	stp	x29, x30, [sp, #-16]!
  215680:	mov	x29, sp
  215684:	ldp	x29, x30, [sp], #16
  215688:	ret

Disassembly of section .plt:

0000000000215690 <__libc_start_main@plt-0x20>:
  215690:	stp	x16, x30, [sp, #-16]!
  215694:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215698:	ldr	x17, [x16, #3160]
  21569c:	add	x16, x16, #0xc58
  2156a0:	br	x17
  2156a4:	nop
  2156a8:	nop
  2156ac:	nop

00000000002156b0 <__libc_start_main@plt>:
  2156b0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2156b4:	ldr	x17, [x16, #3168]
  2156b8:	add	x16, x16, #0xc60
  2156bc:	br	x17

00000000002156c0 <abort@plt>:
  2156c0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2156c4:	ldr	x17, [x16, #3176]
  2156c8:	add	x16, x16, #0xc68
  2156cc:	br	x17

00000000002156d0 <__gmon_start__@plt>:
  2156d0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2156d4:	ldr	x17, [x16, #3184]
  2156d8:	add	x16, x16, #0xc70
  2156dc:	br	x17

00000000002156e0 <log_set_target@plt>:
  2156e0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2156e4:	ldr	x17, [x16, #3192]
  2156e8:	add	x16, x16, #0xc78
  2156ec:	br	x17

00000000002156f0 <log_parse_environment_realm@plt>:
  2156f0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2156f4:	ldr	x17, [x16, #3200]
  2156f8:	add	x16, x16, #0xc80
  2156fc:	br	x17

0000000000215700 <log_open@plt>:
  215700:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215704:	ldr	x17, [x16, #3208]
  215708:	add	x16, x16, #0xc88
  21570c:	br	x17

0000000000215710 <log_get_max_level_realm@plt>:
  215710:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215714:	ldr	x17, [x16, #3216]
  215718:	add	x16, x16, #0xc90
  21571c:	br	x17

0000000000215720 <log_internal_realm@plt>:
  215720:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215724:	ldr	x17, [x16, #3224]
  215728:	add	x16, x16, #0xc98
  21572c:	br	x17

0000000000215730 <free@plt>:
  215730:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215734:	ldr	x17, [x16, #3232]
  215738:	add	x16, x16, #0xca0
  21573c:	br	x17

0000000000215740 <log_close@plt>:
  215740:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215744:	ldr	x17, [x16, #3240]
  215748:	add	x16, x16, #0xca8
  21574c:	br	x17

0000000000215750 <exit@plt>:
  215750:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215754:	ldr	x17, [x16, #3248]
  215758:	add	x16, x16, #0xcb0
  21575c:	br	x17

0000000000215760 <log_assert_failed_realm@plt>:
  215760:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215764:	ldr	x17, [x16, #3256]
  215768:	add	x16, x16, #0xcb8
  21576c:	br	x17

0000000000215770 <udev_parse_config_full@plt>:
  215770:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215774:	ldr	x17, [x16, #3264]
  215778:	add	x16, x16, #0xcc0
  21577c:	br	x17

0000000000215780 <fopen64@plt>:
  215780:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215784:	ldr	x17, [x16, #3272]
  215788:	add	x16, x16, #0xcc8
  21578c:	br	x17

0000000000215790 <malloc@plt>:
  215790:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215794:	ldr	x17, [x16, #3280]
  215798:	add	x16, x16, #0xcd0
  21579c:	br	x17

00000000002157a0 <fgets@plt>:
  2157a0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2157a4:	ldr	x17, [x16, #3288]
  2157a8:	add	x16, x16, #0xcd8
  2157ac:	br	x17

00000000002157b0 <__errno_location@plt>:
  2157b0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2157b4:	ldr	x17, [x16, #3296]
  2157b8:	add	x16, x16, #0xce0
  2157bc:	br	x17

00000000002157c0 <strlen@plt>:
  2157c0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2157c4:	ldr	x17, [x16, #3304]
  2157c8:	add	x16, x16, #0xce8
  2157cc:	br	x17

00000000002157d0 <__ctype_b_loc@plt>:
  2157d0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2157d4:	ldr	x17, [x16, #3312]
  2157d8:	add	x16, x16, #0xcf0
  2157dc:	br	x17

00000000002157e0 <strsep@plt>:
  2157e0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2157e4:	ldr	x17, [x16, #3320]
  2157e8:	add	x16, x16, #0xcf8
  2157ec:	br	x17

00000000002157f0 <strcasecmp@plt>:
  2157f0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2157f4:	ldr	x17, [x16, #3328]
  2157f8:	add	x16, x16, #0xd00
  2157fc:	br	x17

0000000000215800 <log_oom_internal@plt>:
  215800:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215804:	ldr	x17, [x16, #3336]
  215808:	add	x16, x16, #0xd08
  21580c:	br	x17

0000000000215810 <strcpy@plt>:
  215810:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215814:	ldr	x17, [x16, #3344]
  215818:	add	x16, x16, #0xd10
  21581c:	br	x17

0000000000215820 <calloc@plt>:
  215820:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215824:	ldr	x17, [x16, #3352]
  215828:	add	x16, x16, #0xd18
  21582c:	br	x17

0000000000215830 <getopt_long@plt>:
  215830:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215834:	ldr	x17, [x16, #3360]
  215838:	add	x16, x16, #0xd20
  21583c:	br	x17

0000000000215840 <strcmp@plt>:
  215840:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215844:	ldr	x17, [x16, #3368]
  215848:	add	x16, x16, #0xd28
  21584c:	br	x17

0000000000215850 <atoi@plt>:
  215850:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215854:	ldr	x17, [x16, #3376]
  215858:	add	x16, x16, #0xd30
  21585c:	br	x17

0000000000215860 <log_set_max_level_realm@plt>:
  215860:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215864:	ldr	x17, [x16, #3384]
  215868:	add	x16, x16, #0xd38
  21586c:	br	x17

0000000000215870 <strscpy@plt>:
  215870:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215874:	ldr	x17, [x16, #3392]
  215878:	add	x16, x16, #0xd40
  21587c:	br	x17

0000000000215880 <log_assert_failed_unreachable_realm@plt>:
  215880:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215884:	ldr	x17, [x16, #3400]
  215888:	add	x16, x16, #0xd48
  21588c:	br	x17

0000000000215890 <puts@plt>:
  215890:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215894:	ldr	x17, [x16, #3408]
  215898:	add	x16, x16, #0xd50
  21589c:	br	x17

00000000002158a0 <memset@plt>:
  2158a0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2158a4:	ldr	x17, [x16, #3416]
  2158a8:	add	x16, x16, #0xd58
  2158ac:	br	x17

00000000002158b0 <printf@plt>:
  2158b0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2158b4:	ldr	x17, [x16, #3424]
  2158b8:	add	x16, x16, #0xd60
  2158bc:	br	x17

00000000002158c0 <safe_fclose@plt>:
  2158c0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2158c4:	ldr	x17, [x16, #3432]
  2158c8:	add	x16, x16, #0xd68
  2158cc:	br	x17

00000000002158d0 <strncmp@plt>:
  2158d0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2158d4:	ldr	x17, [x16, #3440]
  2158d8:	add	x16, x16, #0xd70
  2158dc:	br	x17

00000000002158e0 <strtoul@plt>:
  2158e0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2158e4:	ldr	x17, [x16, #3448]
  2158e8:	add	x16, x16, #0xd78
  2158ec:	br	x17

00000000002158f0 <open64@plt>:
  2158f0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2158f4:	ldr	x17, [x16, #3456]
  2158f8:	add	x16, x16, #0xd80
  2158fc:	br	x17

0000000000215900 <gnu_dev_major@plt>:
  215900:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215904:	ldr	x17, [x16, #3464]
  215908:	add	x16, x16, #0xd88
  21590c:	br	x17

0000000000215910 <gnu_dev_minor@plt>:
  215910:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215914:	ldr	x17, [x16, #3472]
  215918:	add	x16, x16, #0xd90
  21591c:	br	x17

0000000000215920 <sprintf@plt>:
  215920:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215924:	ldr	x17, [x16, #3480]
  215928:	add	x16, x16, #0xd98
  21592c:	br	x17

0000000000215930 <close@plt>:
  215930:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215934:	ldr	x17, [x16, #3488]
  215938:	add	x16, x16, #0xda0
  21593c:	br	x17

0000000000215940 <ioctl@plt>:
  215940:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215944:	ldr	x17, [x16, #3496]
  215948:	add	x16, x16, #0xda8
  21594c:	br	x17

0000000000215950 <initialize_srand@plt>:
  215950:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215954:	ldr	x17, [x16, #3504]
  215958:	add	x16, x16, #0xdb0
  21595c:	br	x17

0000000000215960 <rand@plt>:
  215960:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215964:	ldr	x17, [x16, #3512]
  215968:	add	x16, x16, #0xdb8
  21596c:	br	x17

0000000000215970 <nanosleep@plt>:
  215970:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215974:	ldr	x17, [x16, #3520]
  215978:	add	x16, x16, #0xdc0
  21597c:	br	x17

0000000000215980 <memcpy@plt>:
  215980:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215984:	ldr	x17, [x16, #3528]
  215988:	add	x16, x16, #0xdc8
  21598c:	br	x17

0000000000215990 <strnlen@plt>:
  215990:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215994:	ldr	x17, [x16, #3536]
  215998:	add	x16, x16, #0xdd0
  21599c:	br	x17

00000000002159a0 <strncpy@plt>:
  2159a0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2159a4:	ldr	x17, [x16, #3544]
  2159a8:	add	x16, x16, #0xdd8
  2159ac:	br	x17

00000000002159b0 <strchr@plt>:
  2159b0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2159b4:	ldr	x17, [x16, #3552]
  2159b8:	add	x16, x16, #0xde0
  2159bc:	br	x17

00000000002159c0 <sd_device_new_from_subsystem_sysname@plt>:
  2159c0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2159c4:	ldr	x17, [x16, #3560]
  2159c8:	add	x16, x16, #0xde8
  2159cc:	br	x17

00000000002159d0 <sd_device_get_sysattr_value@plt>:
  2159d0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2159d4:	ldr	x17, [x16, #3568]
  2159d8:	add	x16, x16, #0xdf0
  2159dc:	br	x17

00000000002159e0 <sd_device_get_syspath@plt>:
  2159e0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2159e4:	ldr	x17, [x16, #3576]
  2159e8:	add	x16, x16, #0xdf8
  2159ec:	br	x17

00000000002159f0 <strscpyl@plt>:
  2159f0:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  2159f4:	ldr	x17, [x16, #3584]
  2159f8:	add	x16, x16, #0xe00
  2159fc:	br	x17

0000000000215a00 <sd_device_unref@plt>:
  215a00:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215a04:	ldr	x17, [x16, #3592]
  215a08:	add	x16, x16, #0xe08
  215a0c:	br	x17

0000000000215a10 <strspn@plt>:
  215a10:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215a14:	ldr	x17, [x16, #3600]
  215a18:	add	x16, x16, #0xe10
  215a1c:	br	x17

0000000000215a20 <whitelisted_char_for_devnode@plt>:
  215a20:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215a24:	ldr	x17, [x16, #3608]
  215a28:	add	x16, x16, #0xe18
  215a2c:	br	x17

0000000000215a30 <utf8_encoded_valid_unichar@plt>:
  215a30:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215a34:	ldr	x17, [x16, #3616]
  215a38:	add	x16, x16, #0xe20
  215a3c:	br	x17

0000000000215a40 <encode_devnode_name@plt>:
  215a40:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215a44:	ldr	x17, [x16, #3624]
  215a48:	add	x16, x16, #0xe28
  215a4c:	br	x17

0000000000215a50 <__fxstat64@plt>:
  215a50:	adrp	x16, 225000 <__fxstat64@plt+0xf5b0>
  215a54:	ldr	x17, [x16, #3632]
  215a58:	add	x16, x16, #0xe30
  215a5c:	br	x17
