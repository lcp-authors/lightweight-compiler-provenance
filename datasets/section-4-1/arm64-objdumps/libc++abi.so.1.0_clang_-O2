
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libc++abi.so.1.0_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000ea90 <.init>:
    ea90:	stp	x29, x30, [sp, #-16]!
    ea94:	mov	x29, sp
    ea98:	bl	ef30 <_Unwind_SetIP@plt+0x10>
    ea9c:	ldp	x29, x30, [sp], #16
    eaa0:	ret

Disassembly of section .plt:

000000000000eab0 <memcpy@plt-0x20>:
    eab0:	stp	x16, x30, [sp, #-16]!
    eab4:	adrp	x16, 48000 <_ZTISt14overflow_error@@Base-0x20>
    eab8:	ldr	x17, [x16, #4088]
    eabc:	add	x16, x16, #0xff8
    eac0:	br	x17
    eac4:	nop
    eac8:	nop
    eacc:	nop

000000000000ead0 <memcpy@plt>:
    ead0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ead4:	ldr	x17, [x16]
    ead8:	add	x16, x16, #0x0
    eadc:	br	x17

000000000000eae0 <memmove@plt>:
    eae0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eae4:	ldr	x17, [x16, #8]
    eae8:	add	x16, x16, #0x8
    eaec:	br	x17

000000000000eaf0 <_ZSt14get_unexpectedv@plt>:
    eaf0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eaf4:	ldr	x17, [x16, #16]
    eaf8:	add	x16, x16, #0x10
    eafc:	br	x17

000000000000eb00 <strlen@plt>:
    eb00:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eb04:	ldr	x17, [x16, #24]
    eb08:	add	x16, x16, #0x18
    eb0c:	br	x17

000000000000eb10 <fputs@plt>:
    eb10:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eb14:	ldr	x17, [x16, #32]
    eb18:	add	x16, x16, #0x20
    eb1c:	br	x17

000000000000eb20 <_ZdlPv@plt>:
    eb20:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eb24:	ldr	x17, [x16, #40]
    eb28:	add	x16, x16, #0x28
    eb2c:	br	x17

000000000000eb30 <_Znam@plt>:
    eb30:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eb34:	ldr	x17, [x16, #48]
    eb38:	add	x16, x16, #0x30
    eb3c:	br	x17

000000000000eb40 <pthread_key_create@plt>:
    eb40:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eb44:	ldr	x17, [x16, #56]
    eb48:	add	x16, x16, #0x38
    eb4c:	br	x17

000000000000eb50 <__cxa_finalize@plt>:
    eb50:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eb54:	ldr	x17, [x16, #64]
    eb58:	add	x16, x16, #0x40
    eb5c:	br	x17

000000000000eb60 <__cxa_end_catch@plt>:
    eb60:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eb64:	ldr	x17, [x16, #72]
    eb68:	add	x16, x16, #0x48
    eb6c:	br	x17

000000000000eb70 <__cxa_thread_atexit_impl@plt>:
    eb70:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eb74:	ldr	x17, [x16, #80]
    eb78:	add	x16, x16, #0x50
    eb7c:	br	x17

000000000000eb80 <__cxa_allocate_exception@plt>:
    eb80:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eb84:	ldr	x17, [x16, #88]
    eb88:	add	x16, x16, #0x58
    eb8c:	br	x17

000000000000eb90 <fputc@plt>:
    eb90:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eb94:	ldr	x17, [x16, #96]
    eb98:	add	x16, x16, #0x60
    eb9c:	br	x17

000000000000eba0 <_Unwind_GetRegionStart@plt>:
    eba0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eba4:	ldr	x17, [x16, #104]
    eba8:	add	x16, x16, #0x68
    ebac:	br	x17

000000000000ebb0 <_ZSt15get_new_handlerv@plt>:
    ebb0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ebb4:	ldr	x17, [x16, #112]
    ebb8:	add	x16, x16, #0x70
    ebbc:	br	x17

000000000000ebc0 <_Unwind_RaiseException@plt>:
    ebc0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ebc4:	ldr	x17, [x16, #120]
    ebc8:	add	x16, x16, #0x78
    ebcc:	br	x17

000000000000ebd0 <_ZdaPvSt11align_val_t@plt>:
    ebd0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ebd4:	ldr	x17, [x16, #128]
    ebd8:	add	x16, x16, #0x80
    ebdc:	br	x17

000000000000ebe0 <snprintf@plt>:
    ebe0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ebe4:	ldr	x17, [x16, #136]
    ebe8:	add	x16, x16, #0x88
    ebec:	br	x17

000000000000ebf0 <_ZNSt13bad_exceptionD1Ev@plt>:
    ebf0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ebf4:	ldr	x17, [x16, #144]
    ebf8:	add	x16, x16, #0x90
    ebfc:	br	x17

000000000000ec00 <malloc@plt>:
    ec00:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ec04:	ldr	x17, [x16, #152]
    ec08:	add	x16, x16, #0x98
    ec0c:	br	x17

000000000000ec10 <__cxa_get_globals_fast@plt>:
    ec10:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ec14:	ldr	x17, [x16, #160]
    ec18:	add	x16, x16, #0xa0
    ec1c:	br	x17

000000000000ec20 <_ZNSt10bad_typeidC1Ev@plt>:
    ec20:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ec24:	ldr	x17, [x16, #168]
    ec28:	add	x16, x16, #0xa8
    ec2c:	br	x17

000000000000ec30 <_ZSt13get_terminatev@plt>:
    ec30:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ec34:	ldr	x17, [x16, #176]
    ec38:	add	x16, x16, #0xb0
    ec3c:	br	x17

000000000000ec40 <memset@plt>:
    ec40:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ec44:	ldr	x17, [x16, #184]
    ec48:	add	x16, x16, #0xb8
    ec4c:	br	x17

000000000000ec50 <_ZNSt20bad_array_new_lengthC1Ev@plt>:
    ec50:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ec54:	ldr	x17, [x16, #192]
    ec58:	add	x16, x16, #0xc0
    ec5c:	br	x17

000000000000ec60 <posix_memalign@plt>:
    ec60:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ec64:	ldr	x17, [x16, #200]
    ec68:	add	x16, x16, #0xc8
    ec6c:	br	x17

000000000000ec70 <_Unwind_GetLanguageSpecificData@plt>:
    ec70:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ec74:	ldr	x17, [x16, #208]
    ec78:	add	x16, x16, #0xd0
    ec7c:	br	x17

000000000000ec80 <calloc@plt>:
    ec80:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ec84:	ldr	x17, [x16, #216]
    ec88:	add	x16, x16, #0xd8
    ec8c:	br	x17

000000000000ec90 <_ZNSt9bad_allocC1Ev@plt>:
    ec90:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ec94:	ldr	x17, [x16, #224]
    ec98:	add	x16, x16, #0xe0
    ec9c:	br	x17

000000000000eca0 <pthread_cond_broadcast@plt>:
    eca0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eca4:	ldr	x17, [x16, #232]
    eca8:	add	x16, x16, #0xe8
    ecac:	br	x17

000000000000ecb0 <pthread_getspecific@plt>:
    ecb0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ecb4:	ldr	x17, [x16, #240]
    ecb8:	add	x16, x16, #0xf0
    ecbc:	br	x17

000000000000ecc0 <realloc@plt>:
    ecc0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ecc4:	ldr	x17, [x16, #248]
    ecc8:	add	x16, x16, #0xf8
    eccc:	br	x17

000000000000ecd0 <__dynamic_cast@plt>:
    ecd0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ecd4:	ldr	x17, [x16, #256]
    ecd8:	add	x16, x16, #0x100
    ecdc:	br	x17

000000000000ece0 <__gmon_start__@plt>:
    ece0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ece4:	ldr	x17, [x16, #264]
    ece8:	add	x16, x16, #0x108
    ecec:	br	x17

000000000000ecf0 <abort@plt>:
    ecf0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ecf4:	ldr	x17, [x16, #272]
    ecf8:	add	x16, x16, #0x110
    ecfc:	br	x17

000000000000ed00 <__cxa_get_globals@plt>:
    ed00:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ed04:	ldr	x17, [x16, #280]
    ed08:	add	x16, x16, #0x118
    ed0c:	br	x17

000000000000ed10 <_Unwind_GetIP@plt>:
    ed10:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ed14:	ldr	x17, [x16, #288]
    ed18:	add	x16, x16, #0x120
    ed1c:	br	x17

000000000000ed20 <_ZNSt8bad_castC1Ev@plt>:
    ed20:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ed24:	ldr	x17, [x16, #296]
    ed28:	add	x16, x16, #0x128
    ed2c:	br	x17

000000000000ed30 <strcmp@plt>:
    ed30:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ed34:	ldr	x17, [x16, #304]
    ed38:	add	x16, x16, #0x130
    ed3c:	br	x17

000000000000ed40 <__ctype_b_loc@plt>:
    ed40:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ed44:	ldr	x17, [x16, #312]
    ed48:	add	x16, x16, #0x138
    ed4c:	br	x17

000000000000ed50 <_ZdaPv@plt>:
    ed50:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ed54:	ldr	x17, [x16, #320]
    ed58:	add	x16, x16, #0x140
    ed5c:	br	x17

000000000000ed60 <free@plt>:
    ed60:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ed64:	ldr	x17, [x16, #328]
    ed68:	add	x16, x16, #0x148
    ed6c:	br	x17

000000000000ed70 <pthread_cond_wait@plt>:
    ed70:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ed74:	ldr	x17, [x16, #336]
    ed78:	add	x16, x16, #0x150
    ed7c:	br	x17

000000000000ed80 <pthread_once@plt>:
    ed80:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ed84:	ldr	x17, [x16, #344]
    ed88:	add	x16, x16, #0x158
    ed8c:	br	x17

000000000000ed90 <__cxa_begin_catch@plt>:
    ed90:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ed94:	ldr	x17, [x16, #352]
    ed98:	add	x16, x16, #0x160
    ed9c:	br	x17

000000000000eda0 <__cxa_rethrow@plt>:
    eda0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eda4:	ldr	x17, [x16, #360]
    eda8:	add	x16, x16, #0x168
    edac:	br	x17

000000000000edb0 <__cxa_throw@plt>:
    edb0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    edb4:	ldr	x17, [x16, #368]
    edb8:	add	x16, x16, #0x170
    edbc:	br	x17

000000000000edc0 <pthread_setspecific@plt>:
    edc0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    edc4:	ldr	x17, [x16, #376]
    edc8:	add	x16, x16, #0x178
    edcc:	br	x17

000000000000edd0 <fwrite@plt>:
    edd0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    edd4:	ldr	x17, [x16, #384]
    edd8:	add	x16, x16, #0x180
    eddc:	br	x17

000000000000ede0 <_Unwind_SetGR@plt>:
    ede0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ede4:	ldr	x17, [x16, #392]
    ede8:	add	x16, x16, #0x188
    edec:	br	x17

000000000000edf0 <_ZnwmSt11align_val_t@plt>:
    edf0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    edf4:	ldr	x17, [x16, #400]
    edf8:	add	x16, x16, #0x190
    edfc:	br	x17

000000000000ee00 <_ZNSt9exceptionD2Ev@plt>:
    ee00:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ee04:	ldr	x17, [x16, #408]
    ee08:	add	x16, x16, #0x198
    ee0c:	br	x17

000000000000ee10 <__cxa_uncaught_exception@plt>:
    ee10:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ee14:	ldr	x17, [x16, #416]
    ee18:	add	x16, x16, #0x1a0
    ee1c:	br	x17

000000000000ee20 <memchr@plt>:
    ee20:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ee24:	ldr	x17, [x16, #424]
    ee28:	add	x16, x16, #0x1a8
    ee2c:	br	x17

000000000000ee30 <_Znwm@plt>:
    ee30:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ee34:	ldr	x17, [x16, #432]
    ee38:	add	x16, x16, #0x1b0
    ee3c:	br	x17

000000000000ee40 <_ZdlPvSt11align_val_t@plt>:
    ee40:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ee44:	ldr	x17, [x16, #440]
    ee48:	add	x16, x16, #0x1b8
    ee4c:	br	x17

000000000000ee50 <_ZNSt9type_infoD2Ev@plt>:
    ee50:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ee54:	ldr	x17, [x16, #448]
    ee58:	add	x16, x16, #0x1c0
    ee5c:	br	x17

000000000000ee60 <_Unwind_DeleteException@plt>:
    ee60:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ee64:	ldr	x17, [x16, #456]
    ee68:	add	x16, x16, #0x1c8
    ee6c:	br	x17

000000000000ee70 <vfprintf@plt>:
    ee70:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ee74:	ldr	x17, [x16, #464]
    ee78:	add	x16, x16, #0x1d0
    ee7c:	br	x17

000000000000ee80 <__cxa_demangle@plt>:
    ee80:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ee84:	ldr	x17, [x16, #472]
    ee88:	add	x16, x16, #0x1d8
    ee8c:	br	x17

000000000000ee90 <__assert_fail@plt>:
    ee90:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ee94:	ldr	x17, [x16, #480]
    ee98:	add	x16, x16, #0x1e0
    ee9c:	br	x17

000000000000eea0 <_Unwind_Resume@plt>:
    eea0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eea4:	ldr	x17, [x16, #488]
    eea8:	add	x16, x16, #0x1e8
    eeac:	br	x17

000000000000eeb0 <_ZSt9terminatev@plt>:
    eeb0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eeb4:	ldr	x17, [x16, #496]
    eeb8:	add	x16, x16, #0x1f0
    eebc:	br	x17

000000000000eec0 <pthread_mutex_lock@plt>:
    eec0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eec4:	ldr	x17, [x16, #504]
    eec8:	add	x16, x16, #0x1f8
    eecc:	br	x17

000000000000eed0 <syscall@plt>:
    eed0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eed4:	ldr	x17, [x16, #512]
    eed8:	add	x16, x16, #0x200
    eedc:	br	x17

000000000000eee0 <pthread_mutex_unlock@plt>:
    eee0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eee4:	ldr	x17, [x16, #520]
    eee8:	add	x16, x16, #0x208
    eeec:	br	x17

000000000000eef0 <__cxa_call_unexpected@plt>:
    eef0:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    eef4:	ldr	x17, [x16, #528]
    eef8:	add	x16, x16, #0x210
    eefc:	br	x17

000000000000ef00 <fprintf@plt>:
    ef00:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ef04:	ldr	x17, [x16, #536]
    ef08:	add	x16, x16, #0x218
    ef0c:	br	x17

000000000000ef10 <_ZnamSt11align_val_t@plt>:
    ef10:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ef14:	ldr	x17, [x16, #544]
    ef18:	add	x16, x16, #0x220
    ef1c:	br	x17

000000000000ef20 <_Unwind_SetIP@plt>:
    ef20:	adrp	x16, 49000 <memcpy@GLIBC_2.17>
    ef24:	ldr	x17, [x16, #552]
    ef28:	add	x16, x16, #0x228
    ef2c:	br	x17

Disassembly of section .text:

000000000000ef30 <__cxa_bad_cast@@Base-0xd4>:
    ef30:	adrp	x0, 48000 <_ZTISt14overflow_error@@Base-0x20>
    ef34:	ldr	x0, [x0, #3968]
    ef38:	cbz	x0, ef40 <_Unwind_SetIP@plt+0x20>
    ef3c:	b	ece0 <__gmon_start__@plt>
    ef40:	ret
    ef44:	nop
    ef48:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
    ef4c:	add	x0, x0, #0x258
    ef50:	adrp	x1, 49000 <memcpy@GLIBC_2.17>
    ef54:	add	x1, x1, #0x258
    ef58:	cmp	x1, x0
    ef5c:	b.eq	ef74 <_Unwind_SetIP@plt+0x54>  // b.none
    ef60:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
    ef64:	ldr	x1, [x1, #3816]
    ef68:	cbz	x1, ef74 <_Unwind_SetIP@plt+0x54>
    ef6c:	mov	x16, x1
    ef70:	br	x16
    ef74:	ret
    ef78:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
    ef7c:	add	x0, x0, #0x258
    ef80:	adrp	x1, 49000 <memcpy@GLIBC_2.17>
    ef84:	add	x1, x1, #0x258
    ef88:	sub	x1, x1, x0
    ef8c:	lsr	x2, x1, #63
    ef90:	add	x1, x2, x1, asr #3
    ef94:	cmp	xzr, x1, asr #1
    ef98:	asr	x1, x1, #1
    ef9c:	b.eq	efb4 <_Unwind_SetIP@plt+0x94>  // b.none
    efa0:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
    efa4:	ldr	x2, [x2, #4056]
    efa8:	cbz	x2, efb4 <_Unwind_SetIP@plt+0x94>
    efac:	mov	x16, x2
    efb0:	br	x16
    efb4:	ret
    efb8:	stp	x29, x30, [sp, #-32]!
    efbc:	mov	x29, sp
    efc0:	str	x19, [sp, #16]
    efc4:	adrp	x19, 49000 <memcpy@GLIBC_2.17>
    efc8:	ldrb	w0, [x19, #608]
    efcc:	cbnz	w0, eff4 <_Unwind_SetIP@plt+0xd4>
    efd0:	adrp	x0, 48000 <_ZTISt14overflow_error@@Base-0x20>
    efd4:	ldr	x0, [x0, #3848]
    efd8:	cbz	x0, efe8 <_Unwind_SetIP@plt+0xc8>
    efdc:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
    efe0:	ldr	x0, [x0, #560]
    efe4:	bl	eb50 <__cxa_finalize@plt>
    efe8:	bl	ef48 <_Unwind_SetIP@plt+0x28>
    efec:	mov	w0, #0x1                   	// #1
    eff0:	strb	w0, [x19, #608]
    eff4:	ldr	x19, [sp, #16]
    eff8:	ldp	x29, x30, [sp], #32
    effc:	ret
    f000:	b	ef78 <_Unwind_SetIP@plt+0x58>

000000000000f004 <__cxa_bad_cast@@Base>:
    f004:	stp	x29, x30, [sp, #-32]!
    f008:	str	x19, [sp, #16]
    f00c:	mov	x29, sp
    f010:	mov	w0, #0x8                   	// #8
    f014:	bl	eb80 <__cxa_allocate_exception@plt>
    f018:	mov	x19, x0
    f01c:	bl	ed20 <_ZNSt8bad_castC1Ev@plt>
    f020:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f024:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f028:	ldr	x1, [x1, #3984]
    f02c:	ldr	x2, [x2, #3944]
    f030:	mov	x0, x19
    f034:	bl	edb0 <__cxa_throw@plt>

000000000000f038 <__cxa_bad_typeid@@Base>:
    f038:	stp	x29, x30, [sp, #-32]!
    f03c:	str	x19, [sp, #16]
    f040:	mov	x29, sp
    f044:	mov	w0, #0x8                   	// #8
    f048:	bl	eb80 <__cxa_allocate_exception@plt>
    f04c:	mov	x19, x0
    f050:	bl	ec20 <_ZNSt10bad_typeidC1Ev@plt>
    f054:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f058:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f05c:	ldr	x1, [x1, #3976]
    f060:	ldr	x2, [x2, #3912]
    f064:	mov	x0, x19
    f068:	bl	edb0 <__cxa_throw@plt>

000000000000f06c <__cxa_throw_bad_array_new_length@@Base>:
    f06c:	stp	x29, x30, [sp, #-32]!
    f070:	str	x19, [sp, #16]
    f074:	mov	x29, sp
    f078:	mov	w0, #0x8                   	// #8
    f07c:	bl	eb80 <__cxa_allocate_exception@plt>
    f080:	mov	x19, x0
    f084:	bl	ec50 <_ZNSt20bad_array_new_lengthC1Ev@plt>
    f088:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f08c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f090:	ldr	x1, [x1, #3920]
    f094:	ldr	x2, [x2, #4008]
    f098:	mov	x0, x19
    f09c:	bl	edb0 <__cxa_throw@plt>
    f0a0:	stp	x29, x30, [sp, #-48]!
    f0a4:	str	x28, [sp, #16]
    f0a8:	stp	x20, x19, [sp, #32]
    f0ac:	mov	x29, sp
    f0b0:	sub	sp, sp, #0x410
    f0b4:	bl	ec10 <__cxa_get_globals_fast@plt>
    f0b8:	cbz	x0, f0c4 <__cxa_throw_bad_array_new_length@@Base+0x58>
    f0bc:	ldr	x20, [x0]
    f0c0:	cbnz	x20, f0d0 <__cxa_throw_bad_array_new_length@@Base+0x64>
    f0c4:	adrp	x0, 2d000 <__cxa_call_unexpected@@Base+0xac>
    f0c8:	add	x0, x0, #0x4bc
    f0cc:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
    f0d0:	add	x19, x20, #0x60
    f0d4:	mov	x0, x19
    f0d8:	bl	2c0d4 <_ZdaPvmSt11align_val_t@@Base+0x18>
    f0dc:	tbz	w0, #0, f108 <__cxa_throw_bad_array_new_length@@Base+0x9c>
    f0e0:	mov	x0, x19
    f0e4:	bl	2c0cc <_ZdaPvmSt11align_val_t@@Base+0x10>
    f0e8:	mov	x8, #0x2b01                	// #11009
    f0ec:	movk	x8, #0x432b, lsl #16
    f0f0:	movk	x8, #0x4e47, lsl #32
    f0f4:	movk	x8, #0x434c, lsl #48
    f0f8:	cmp	x0, x8
    f0fc:	b.ne	f11c <__cxa_throw_bad_array_new_length@@Base+0xb0>  // b.any
    f100:	ldr	x8, [x20, #8]
    f104:	b	f120 <__cxa_throw_bad_array_new_length@@Base+0xb4>
    f108:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
    f10c:	ldr	x1, [x8, #584]
    f110:	adrp	x0, 2d000 <__cxa_call_unexpected@@Base+0xac>
    f114:	add	x0, x0, #0x496
    f118:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
    f11c:	add	x8, x20, #0x80
    f120:	str	x8, [x29, #24]
    f124:	ldr	x20, [x20, #16]
    f128:	mov	w8, #0x400                 	// #1024
    f12c:	str	x8, [sp]
    f130:	add	x1, sp, #0xc
    f134:	ldr	x0, [x20, #8]
    f138:	mov	x2, sp
    f13c:	sub	x3, x29, #0x4
    f140:	bl	ee80 <__cxa_demangle@plt>
    f144:	ldur	w8, [x29, #-4]
    f148:	cbnz	w8, f154 <__cxa_throw_bad_array_new_length@@Base+0xe8>
    f14c:	mov	x19, x0
    f150:	b	f158 <__cxa_throw_bad_array_new_length@@Base+0xec>
    f154:	ldr	x19, [x20, #8]
    f158:	adrp	x0, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f15c:	ldr	x0, [x0, #3928]
    f160:	add	x2, x29, #0x18
    f164:	mov	x1, x20
    f168:	ldr	x8, [x0]
    f16c:	ldr	x8, [x8, #32]
    f170:	blr	x8
    f174:	tbz	w0, #0, f1a8 <__cxa_throw_bad_array_new_length@@Base+0x13c>
    f178:	ldr	x0, [x29, #24]
    f17c:	adrp	x9, 49000 <memcpy@GLIBC_2.17>
    f180:	ldr	x20, [x9, #584]
    f184:	ldr	x8, [x0]
    f188:	ldr	x8, [x8, #16]
    f18c:	blr	x8
    f190:	mov	x3, x0
    f194:	adrp	x0, 2d000 <__cxa_call_unexpected@@Base+0xac>
    f198:	add	x0, x0, #0x440
    f19c:	mov	x1, x20
    f1a0:	mov	x2, x19
    f1a4:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
    f1a8:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
    f1ac:	ldr	x1, [x8, #584]
    f1b0:	adrp	x0, 2d000 <__cxa_call_unexpected@@Base+0xac>
    f1b4:	add	x0, x0, #0x46d
    f1b8:	mov	x2, x19
    f1bc:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
    f1c0:	stp	x29, x30, [sp, #-16]!
    f1c4:	mov	x29, sp
    f1c8:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
    f1cc:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
    f1d0:	add	x9, x9, #0x4d1
    f1d4:	str	x9, [x8, #584]
    f1d8:	bl	eeb0 <_ZSt9terminatev@plt>

000000000000f1dc <_ZSt14set_unexpectedPFvvE@@Base>:
    f1dc:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f1e0:	ldr	x9, [x9, #3808]
    f1e4:	adrp	x8, f000 <_Unwind_SetIP@plt+0xe0>
    f1e8:	add	x8, x8, #0x1c0
    f1ec:	cmp	x0, #0x0
    f1f0:	csel	x8, x8, x0, eq  // eq = none
    f1f4:	ldaxr	x0, [x9]
    f1f8:	stlxr	w10, x8, [x9]
    f1fc:	cbnz	w10, f1f4 <_ZSt14set_unexpectedPFvvE@@Base+0x18>
    f200:	ret

000000000000f204 <_ZSt13set_terminatePFvvE@@Base>:
    f204:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f208:	ldr	x9, [x9, #3992]
    f20c:	adrp	x8, f000 <_Unwind_SetIP@plt+0xe0>
    f210:	add	x8, x8, #0xa0
    f214:	cmp	x0, #0x0
    f218:	csel	x8, x8, x0, eq  // eq = none
    f21c:	ldaxr	x0, [x9]
    f220:	stlxr	w10, x8, [x9]
    f224:	cbnz	w10, f21c <_ZSt13set_terminatePFvvE@@Base+0x18>
    f228:	ret
    f22c:	sub	sp, sp, #0x30
    f230:	stp	x29, x30, [sp, #16]
    f234:	stp	x20, x19, [sp, #32]
    f238:	add	x29, sp, #0x10
    f23c:	add	x1, sp, #0x8
    f240:	str	wzr, [sp, #8]
    f244:	strb	wzr, [sp, #12]
    f248:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
    f24c:	adrp	x19, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f250:	ldr	x19, [x19, #3856]
    f254:	mov	w0, #0xa                   	// #10
    f258:	ldr	x1, [x19]
    f25c:	bl	eb90 <fputc@plt>
    f260:	ldr	w8, [sp, #8]
    f264:	cbnz	w8, f278 <_ZSt13set_terminatePFvvE@@Base+0x74>
    f268:	ldp	x20, x19, [sp, #32]
    f26c:	ldp	x29, x30, [sp, #16]
    f270:	add	sp, sp, #0x30
    f274:	ret
    f278:	mov	w20, wzr
    f27c:	ldr	x1, [x19]
    f280:	mov	w0, #0x20                  	// #32
    f284:	bl	eb90 <fputc@plt>
    f288:	ldr	w8, [sp, #8]
    f28c:	add	w20, w20, #0x1
    f290:	cmp	w20, w8
    f294:	b.eq	f268 <_ZSt13set_terminatePFvvE@@Base+0x64>  // b.none
    f298:	b	f27c <_ZSt13set_terminatePFvvE@@Base+0x78>
    f29c:	sub	sp, sp, #0x70
    f2a0:	stp	x29, x30, [sp, #16]
    f2a4:	stp	x28, x27, [sp, #32]
    f2a8:	stp	x26, x25, [sp, #48]
    f2ac:	stp	x24, x23, [sp, #64]
    f2b0:	stp	x22, x21, [sp, #80]
    f2b4:	stp	x20, x19, [sp, #96]
    f2b8:	add	x29, sp, #0x10
    f2bc:	ldrb	w8, [x0, #8]
    f2c0:	cmp	w8, #0x4a
    f2c4:	b.hi	127d8 <_ZSt13set_terminatePFvvE@@Base+0x35d4>  // b.pmore
    f2c8:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
    f2cc:	add	x9, x9, #0x4dc
    f2d0:	adr	x10, f2e8 <_ZSt13set_terminatePFvvE@@Base+0xe4>
    f2d4:	ldrh	w11, [x9, x8, lsl #1]
    f2d8:	add	x10, x10, x11, lsl #2
    f2dc:	mov	x20, x0
    f2e0:	mov	x19, x1
    f2e4:	br	x10
    f2e8:	ldr	w8, [x19]
    f2ec:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f2f0:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f2f4:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f2f8:	add	w8, w8, #0x2
    f2fc:	str	w8, [x19]
    f300:	ldr	x22, [x22, #3856]
    f304:	add	x1, x1, #0xdba
    f308:	add	x2, x2, #0xdbe
    f30c:	ldr	x0, [x22]
    f310:	bl	ef00 <fprintf@plt>
    f314:	ldp	x24, x23, [x20, #16]
    f318:	cbz	x23, 11238 <_ZSt13set_terminatePFvvE@@Base+0x2034>
    f31c:	ldr	x1, [x22]
    f320:	mov	w0, #0xa                   	// #10
    f324:	bl	eb90 <fputc@plt>
    f328:	ldr	w8, [x19]
    f32c:	cbnz	w8, 120a0 <_ZSt13set_terminatePFvvE@@Base+0x2e9c>
    f330:	mov	w20, wzr
    f334:	b	120c0 <_ZSt13set_terminatePFvvE@@Base+0x2ebc>
    f338:	ldr	w8, [x19]
    f33c:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f340:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f344:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f348:	add	w8, w8, #0x2
    f34c:	str	w8, [x19]
    f350:	ldr	x23, [x23, #3856]
    f354:	add	x1, x1, #0xdba
    f358:	add	x2, x2, #0x256
    f35c:	ldr	x0, [x23]
    f360:	bl	ef00 <fprintf@plt>
    f364:	ldr	x1, [x23]
    f368:	ldp	x22, x21, [x20, #16]
    f36c:	ldr	x20, [x20, #32]
    f370:	mov	w0, #0xa                   	// #10
    f374:	bl	eb90 <fputc@plt>
    f378:	ldr	w8, [x19]
    f37c:	cbz	w8, f3a0 <_ZSt13set_terminatePFvvE@@Base+0x19c>
    f380:	mov	w24, wzr
    f384:	ldr	x1, [x23]
    f388:	mov	w0, #0x20                  	// #32
    f38c:	bl	eb90 <fputc@plt>
    f390:	ldr	w8, [x19]
    f394:	add	w24, w24, #0x1
    f398:	cmp	w24, w8
    f39c:	b.ne	f384 <_ZSt13set_terminatePFvvE@@Base+0x180>  // b.any
    f3a0:	strb	wzr, [x19, #4]
    f3a4:	cbnz	x22, 110ac <_ZSt13set_terminatePFvvE@@Base+0x1ea8>
    f3a8:	ldr	x3, [x23]
    f3ac:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f3b0:	add	x0, x0, #0xdcc
    f3b4:	mov	w1, #0x6                   	// #6
    f3b8:	mov	w2, #0x1                   	// #1
    f3bc:	bl	edd0 <fwrite@plt>
    f3c0:	b	110b8 <_ZSt13set_terminatePFvvE@@Base+0x1eb4>
    f3c4:	ldr	w8, [x19]
    f3c8:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f3cc:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f3d0:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f3d4:	add	w8, w8, #0x2
    f3d8:	str	w8, [x19]
    f3dc:	ldr	x21, [x21, #3856]
    f3e0:	add	x1, x1, #0xdba
    f3e4:	add	x2, x2, #0x343
    f3e8:	b	10ed8 <_ZSt13set_terminatePFvvE@@Base+0x1cd4>
    f3ec:	ldr	w8, [x19]
    f3f0:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f3f4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f3f8:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f3fc:	add	w8, w8, #0x2
    f400:	str	w8, [x19]
    f404:	ldr	x22, [x22, #3856]
    f408:	add	x1, x1, #0xdba
    f40c:	add	x2, x2, #0xf4
    f410:	ldr	x0, [x22]
    f414:	bl	ef00 <fprintf@plt>
    f418:	ldp	x24, x23, [x20, #16]
    f41c:	cbz	x23, 11124 <_ZSt13set_terminatePFvvE@@Base+0x1f20>
    f420:	ldr	x1, [x22]
    f424:	mov	w0, #0xa                   	// #10
    f428:	bl	eb90 <fputc@plt>
    f42c:	ldr	w8, [x19]
    f430:	cbnz	w8, 11f98 <_ZSt13set_terminatePFvvE@@Base+0x2d94>
    f434:	mov	w20, wzr
    f438:	b	11fb8 <_ZSt13set_terminatePFvvE@@Base+0x2db4>
    f43c:	ldr	w8, [x19]
    f440:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f444:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f448:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f44c:	add	w8, w8, #0x2
    f450:	str	w8, [x19]
    f454:	ldr	x21, [x21, #3856]
    f458:	add	x1, x1, #0xdba
    f45c:	add	x2, x2, #0xec
    f460:	b	10a54 <_ZSt13set_terminatePFvvE@@Base+0x1850>
    f464:	ldr	w8, [x19]
    f468:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f46c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f470:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f474:	add	w8, w8, #0x2
    f478:	str	w8, [x19]
    f47c:	ldr	x21, [x21, #3856]
    f480:	add	x1, x1, #0xdba
    f484:	add	x2, x2, #0x1dd
    f488:	ldr	x0, [x21]
    f48c:	bl	ef00 <fprintf@plt>
    f490:	ldr	x1, [x21]
    f494:	ldr	x20, [x20, #16]
    f498:	mov	w0, #0xa                   	// #10
    f49c:	bl	eb90 <fputc@plt>
    f4a0:	ldr	w8, [x19]
    f4a4:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    f4a8:	mov	w22, wzr
    f4ac:	ldr	x1, [x21]
    f4b0:	mov	w0, #0x20                  	// #32
    f4b4:	bl	eb90 <fputc@plt>
    f4b8:	ldr	w8, [x19]
    f4bc:	add	w22, w22, #0x1
    f4c0:	cmp	w22, w8
    f4c4:	b.ne	f4ac <_ZSt13set_terminatePFvvE@@Base+0x2a8>  // b.any
    f4c8:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    f4cc:	ldr	w8, [x19]
    f4d0:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f4d4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f4d8:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f4dc:	add	w8, w8, #0x2
    f4e0:	str	w8, [x19]
    f4e4:	ldr	x23, [x23, #3856]
    f4e8:	add	x1, x1, #0xdba
    f4ec:	add	x2, x2, #0x22c
    f4f0:	ldr	x0, [x23]
    f4f4:	bl	ef00 <fprintf@plt>
    f4f8:	ldr	x1, [x23]
    f4fc:	ldp	x22, x21, [x20, #16]
    f500:	ldp	x24, x20, [x20, #32]
    f504:	mov	w0, #0xa                   	// #10
    f508:	bl	eb90 <fputc@plt>
    f50c:	ldr	w8, [x19]
    f510:	cbz	w8, f534 <_ZSt13set_terminatePFvvE@@Base+0x330>
    f514:	mov	w25, wzr
    f518:	ldr	x1, [x23]
    f51c:	mov	w0, #0x20                  	// #32
    f520:	bl	eb90 <fputc@plt>
    f524:	ldr	w8, [x19]
    f528:	add	w25, w25, #0x1
    f52c:	cmp	w25, w8
    f530:	b.ne	f518 <_ZSt13set_terminatePFvvE@@Base+0x314>  // b.any
    f534:	strb	wzr, [x19, #4]
    f538:	cbnz	x22, 1112c <_ZSt13set_terminatePFvvE@@Base+0x1f28>
    f53c:	ldr	x3, [x23]
    f540:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f544:	add	x0, x0, #0xdcc
    f548:	mov	w1, #0x6                   	// #6
    f54c:	mov	w2, #0x1                   	// #1
    f550:	bl	edd0 <fwrite@plt>
    f554:	b	11138 <_ZSt13set_terminatePFvvE@@Base+0x1f34>
    f558:	ldr	w8, [x19]
    f55c:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f560:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f564:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f568:	add	w8, w8, #0x2
    f56c:	str	w8, [x19]
    f570:	ldr	x21, [x21, #3856]
    f574:	add	x1, x1, #0xdba
    f578:	add	x2, x2, #0x32b
    f57c:	ldr	x0, [x21]
    f580:	bl	ef00 <fprintf@plt>
    f584:	str	x19, [sp, #8]
    f588:	ldp	x1, x2, [x20, #16]
    f58c:	ldp	x3, x4, [x20, #32]
    f590:	add	x0, sp, #0x8
    f594:	bl	142d4 <__cxa_demangle@@Base+0x1adc>
    f598:	ldr	x1, [x21]
    f59c:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
    f5a0:	ldr	w8, [x19]
    f5a4:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f5a8:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f5ac:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f5b0:	add	w8, w8, #0x2
    f5b4:	str	w8, [x19]
    f5b8:	ldr	x21, [x21, #3856]
    f5bc:	add	x1, x1, #0xdba
    f5c0:	add	x2, x2, #0x29c
    f5c4:	ldr	x0, [x21]
    f5c8:	bl	ef00 <fprintf@plt>
    f5cc:	str	x19, [sp, #8]
    f5d0:	ldp	x1, x2, [x20, #16]
    f5d4:	ldp	x3, x4, [x20, #32]
    f5d8:	ldr	x5, [x20, #48]
    f5dc:	ldrb	w6, [x20, #56]
    f5e0:	ldrb	w7, [x20, #57]
    f5e4:	add	x0, sp, #0x8
    f5e8:	bl	145e4 <__cxa_demangle@@Base+0x1dec>
    f5ec:	ldr	x1, [x21]
    f5f0:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
    f5f4:	ldr	w8, [x19]
    f5f8:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f5fc:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f600:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f604:	add	w8, w8, #0x2
    f608:	str	w8, [x19]
    f60c:	ldr	x21, [x21, #3856]
    f610:	add	x1, x1, #0xdba
    f614:	add	x2, x2, #0x30b
    f618:	ldr	x0, [x21]
    f61c:	bl	ef00 <fprintf@plt>
    f620:	ldr	x1, [x21]
    f624:	ldr	x20, [x20, #16]
    f628:	mov	w0, #0xa                   	// #10
    f62c:	bl	eb90 <fputc@plt>
    f630:	ldr	w8, [x19]
    f634:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    f638:	mov	w22, wzr
    f63c:	ldr	x1, [x21]
    f640:	mov	w0, #0x20                  	// #32
    f644:	bl	eb90 <fputc@plt>
    f648:	ldr	w8, [x19]
    f64c:	add	w22, w22, #0x1
    f650:	cmp	w22, w8
    f654:	b.ne	f63c <_ZSt13set_terminatePFvvE@@Base+0x438>  // b.any
    f658:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    f65c:	ldr	w8, [x19]
    f660:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f664:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f668:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f66c:	add	w8, w8, #0x2
    f670:	str	w8, [x19]
    f674:	ldr	x21, [x21, #3856]
    f678:	add	x1, x1, #0xdba
    f67c:	add	x2, x2, #0x354
    f680:	b	10ed8 <_ZSt13set_terminatePFvvE@@Base+0x1cd4>
    f684:	ldr	w8, [x19]
    f688:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f68c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f690:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f694:	add	w8, w8, #0x2
    f698:	str	w8, [x19]
    f69c:	ldr	x22, [x22, #3856]
    f6a0:	add	x1, x1, #0xdba
    f6a4:	add	x2, x2, #0xeed
    f6a8:	ldr	x0, [x22]
    f6ac:	bl	ef00 <fprintf@plt>
    f6b0:	ldr	x1, [x22]
    f6b4:	ldp	x21, x20, [x20, #16]
    f6b8:	mov	w0, #0xa                   	// #10
    f6bc:	bl	eb90 <fputc@plt>
    f6c0:	ldr	w8, [x19]
    f6c4:	cbz	w8, f6e8 <_ZSt13set_terminatePFvvE@@Base+0x4e4>
    f6c8:	mov	w23, wzr
    f6cc:	ldr	x1, [x22]
    f6d0:	mov	w0, #0x20                  	// #32
    f6d4:	bl	eb90 <fputc@plt>
    f6d8:	ldr	w8, [x19]
    f6dc:	add	w23, w23, #0x1
    f6e0:	cmp	w23, w8
    f6e4:	b.ne	f6cc <_ZSt13set_terminatePFvvE@@Base+0x4c8>  // b.any
    f6e8:	strb	wzr, [x19, #4]
    f6ec:	cbnz	x21, 11240 <_ZSt13set_terminatePFvvE@@Base+0x203c>
    f6f0:	ldr	x3, [x22]
    f6f4:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f6f8:	add	x0, x0, #0xdcc
    f6fc:	mov	w1, #0x6                   	// #6
    f700:	mov	w2, #0x1                   	// #1
    f704:	bl	edd0 <fwrite@plt>
    f708:	b	1124c <_ZSt13set_terminatePFvvE@@Base+0x2048>
    f70c:	ldr	w8, [x19]
    f710:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f714:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f718:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f71c:	add	w8, w8, #0x2
    f720:	str	w8, [x19]
    f724:	ldr	x21, [x21, #3856]
    f728:	add	x1, x1, #0xdba
    f72c:	add	x2, x2, #0xf62
    f730:	ldr	x0, [x21]
    f734:	bl	ef00 <fprintf@plt>
    f738:	ldr	x1, [x21]
    f73c:	ldr	x20, [x20, #16]
    f740:	mov	w0, #0xa                   	// #10
    f744:	bl	eb90 <fputc@plt>
    f748:	ldr	w8, [x19]
    f74c:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    f750:	mov	w22, wzr
    f754:	ldr	x1, [x21]
    f758:	mov	w0, #0x20                  	// #32
    f75c:	bl	eb90 <fputc@plt>
    f760:	ldr	w8, [x19]
    f764:	add	w22, w22, #0x1
    f768:	cmp	w22, w8
    f76c:	b.ne	f754 <_ZSt13set_terminatePFvvE@@Base+0x550>  // b.any
    f770:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    f774:	ldr	w8, [x19]
    f778:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f77c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f780:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f784:	add	w8, w8, #0x2
    f788:	str	w8, [x19]
    f78c:	ldr	x21, [x21, #3856]
    f790:	add	x1, x1, #0xdba
    f794:	add	x2, x2, #0xfe0
    f798:	ldr	x0, [x21]
    f79c:	bl	ef00 <fprintf@plt>
    f7a0:	ldp	w8, w20, [x20, #12]
    f7a4:	cmp	w8, #0x2
    f7a8:	b.eq	121a8 <_ZSt13set_terminatePFvvE@@Base+0x2fa4>  // b.none
    f7ac:	cmp	w8, #0x1
    f7b0:	b.eq	121bc <_ZSt13set_terminatePFvvE@@Base+0x2fb8>  // b.none
    f7b4:	cbnz	w8, 121d4 <_ZSt13set_terminatePFvvE@@Base+0x2fd0>
    f7b8:	ldr	x3, [x21]
    f7bc:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f7c0:	add	x0, x0, #0xffb
    f7c4:	mov	w1, #0x17                  	// #23
    f7c8:	b	121cc <_ZSt13set_terminatePFvvE@@Base+0x2fc8>
    f7cc:	ldr	w8, [x19]
    f7d0:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f7d4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f7d8:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f7dc:	add	w8, w8, #0x2
    f7e0:	str	w8, [x19]
    f7e4:	ldr	x22, [x22, #3856]
    f7e8:	add	x1, x1, #0xdba
    f7ec:	add	x2, x2, #0xa6
    f7f0:	ldr	x0, [x22]
    f7f4:	bl	ef00 <fprintf@plt>
    f7f8:	ldp	x24, x23, [x20, #16]
    f7fc:	cbz	x23, 11298 <_ZSt13set_terminatePFvvE@@Base+0x2094>
    f800:	ldr	x1, [x22]
    f804:	mov	w0, #0xa                   	// #10
    f808:	bl	eb90 <fputc@plt>
    f80c:	ldr	w8, [x19]
    f810:	cbnz	w8, 12258 <_ZSt13set_terminatePFvvE@@Base+0x3054>
    f814:	mov	w20, wzr
    f818:	b	12278 <_ZSt13set_terminatePFvvE@@Base+0x3074>
    f81c:	ldr	w8, [x19]
    f820:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f824:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f828:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f82c:	add	w8, w8, #0x2
    f830:	str	w8, [x19]
    f834:	ldr	x21, [x21, #3856]
    f838:	add	x1, x1, #0xdba
    f83c:	add	x2, x2, #0xbb
    f840:	ldr	x0, [x21]
    f844:	bl	ef00 <fprintf@plt>
    f848:	ldr	x1, [x21]
    f84c:	ldr	x20, [x20, #16]
    f850:	mov	w0, #0xa                   	// #10
    f854:	bl	eb90 <fputc@plt>
    f858:	ldr	w8, [x19]
    f85c:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    f860:	mov	w22, wzr
    f864:	ldr	x1, [x21]
    f868:	mov	w0, #0x20                  	// #32
    f86c:	bl	eb90 <fputc@plt>
    f870:	ldr	w8, [x19]
    f874:	add	w22, w22, #0x1
    f878:	cmp	w22, w8
    f87c:	b.ne	f864 <_ZSt13set_terminatePFvvE@@Base+0x660>  // b.any
    f880:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    f884:	mov	x0, x19
    f888:	mov	x1, x20
    f88c:	ldp	x20, x19, [sp, #96]
    f890:	ldp	x22, x21, [sp, #80]
    f894:	ldp	x24, x23, [sp, #64]
    f898:	ldp	x26, x25, [sp, #48]
    f89c:	ldp	x28, x27, [sp, #32]
    f8a0:	ldp	x29, x30, [sp, #16]
    f8a4:	add	sp, sp, #0x70
    f8a8:	b	139c4 <__cxa_demangle@@Base+0x11cc>
    f8ac:	ldr	w8, [x19]
    f8b0:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f8b4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f8b8:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f8bc:	add	w8, w8, #0x2
    f8c0:	str	w8, [x19]
    f8c4:	ldr	x21, [x21, #3856]
    f8c8:	add	x1, x1, #0xdba
    f8cc:	add	x2, x2, #0x1f6
    f8d0:	b	10ed8 <_ZSt13set_terminatePFvvE@@Base+0x1cd4>
    f8d4:	ldr	w8, [x19]
    f8d8:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f8dc:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f8e0:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f8e4:	add	w8, w8, #0x2
    f8e8:	str	w8, [x19]
    f8ec:	ldr	x21, [x21, #3856]
    f8f0:	add	x1, x1, #0xdba
    f8f4:	add	x2, x2, #0x319
    f8f8:	ldr	x0, [x21]
    f8fc:	bl	ef00 <fprintf@plt>
    f900:	ldr	x1, [x21]
    f904:	ldr	x20, [x20, #16]
    f908:	mov	w0, #0xa                   	// #10
    f90c:	bl	eb90 <fputc@plt>
    f910:	ldr	w8, [x19]
    f914:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    f918:	mov	w22, wzr
    f91c:	ldr	x1, [x21]
    f920:	mov	w0, #0x20                  	// #32
    f924:	bl	eb90 <fputc@plt>
    f928:	ldr	w8, [x19]
    f92c:	add	w22, w22, #0x1
    f930:	cmp	w22, w8
    f934:	b.ne	f91c <_ZSt13set_terminatePFvvE@@Base+0x718>  // b.any
    f938:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    f93c:	ldr	w8, [x19]
    f940:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f944:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f948:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
    f94c:	add	w8, w8, #0x2
    f950:	str	w8, [x19]
    f954:	ldr	x22, [x22, #3856]
    f958:	add	x1, x1, #0xdba
    f95c:	add	x2, x2, #0x334
    f960:	ldr	x0, [x22]
    f964:	bl	ef00 <fprintf@plt>
    f968:	ldr	x3, [x20, #16]
    f96c:	ldr	w8, [x20, #24]
    f970:	ldr	x0, [x22]
    f974:	ldp	x21, x20, [x20, #32]
    f978:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f97c:	sub	w2, w8, w3
    f980:	add	x1, x1, #0xde0
    f984:	bl	ef00 <fprintf@plt>
    f988:	ldrb	w8, [x19, #4]
    f98c:	ldr	x3, [x22]
    f990:	cbnz	w8, 112a0 <_ZSt13set_terminatePFvvE@@Base+0x209c>
    f994:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f998:	add	x0, x0, #0xdd3
    f99c:	mov	w1, #0x2                   	// #2
    f9a0:	mov	w2, #0x1                   	// #1
    f9a4:	bl	edd0 <fwrite@plt>
    f9a8:	b	112e4 <_ZSt13set_terminatePFvvE@@Base+0x20e0>
    f9ac:	ldr	w8, [x19]
    f9b0:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
    f9b4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f9b8:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    f9bc:	add	w8, w8, #0x2
    f9c0:	str	w8, [x19]
    f9c4:	ldr	x23, [x23, #3856]
    f9c8:	add	x1, x1, #0xdba
    f9cc:	add	x2, x2, #0xdd6
    f9d0:	ldr	x0, [x23]
    f9d4:	bl	ef00 <fprintf@plt>
    f9d8:	ldr	x1, [x23]
    f9dc:	ldp	x22, x21, [x20, #16]
    f9e0:	ldr	x20, [x20, #32]
    f9e4:	mov	w0, #0xa                   	// #10
    f9e8:	bl	eb90 <fputc@plt>
    f9ec:	ldr	w8, [x19]
    f9f0:	cbz	w8, fa14 <_ZSt13set_terminatePFvvE@@Base+0x810>
    f9f4:	mov	w24, wzr
    f9f8:	ldr	x1, [x23]
    f9fc:	mov	w0, #0x20                  	// #32
    fa00:	bl	eb90 <fputc@plt>
    fa04:	ldr	w8, [x19]
    fa08:	add	w24, w24, #0x1
    fa0c:	cmp	w24, w8
    fa10:	b.ne	f9f8 <_ZSt13set_terminatePFvvE@@Base+0x7f4>  // b.any
    fa14:	strb	wzr, [x19, #4]
    fa18:	cbnz	x22, 11300 <_ZSt13set_terminatePFvvE@@Base+0x20fc>
    fa1c:	ldr	x3, [x23]
    fa20:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fa24:	add	x0, x0, #0xdcc
    fa28:	mov	w1, #0x6                   	// #6
    fa2c:	mov	w2, #0x1                   	// #1
    fa30:	bl	edd0 <fwrite@plt>
    fa34:	b	1130c <_ZSt13set_terminatePFvvE@@Base+0x2108>
    fa38:	ldr	w8, [x19]
    fa3c:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
    fa40:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fa44:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fa48:	add	w8, w8, #0x2
    fa4c:	str	w8, [x19]
    fa50:	ldr	x23, [x23, #3856]
    fa54:	add	x1, x1, #0xdba
    fa58:	add	x2, x2, #0xde7
    fa5c:	ldr	x0, [x23]
    fa60:	bl	ef00 <fprintf@plt>
    fa64:	ldr	x1, [x23]
    fa68:	ldp	x22, x21, [x20, #16]
    fa6c:	ldr	x20, [x20, #32]
    fa70:	mov	w0, #0xa                   	// #10
    fa74:	bl	eb90 <fputc@plt>
    fa78:	ldr	w8, [x19]
    fa7c:	cbz	w8, faa0 <_ZSt13set_terminatePFvvE@@Base+0x89c>
    fa80:	mov	w24, wzr
    fa84:	ldr	x1, [x23]
    fa88:	mov	w0, #0x20                  	// #32
    fa8c:	bl	eb90 <fputc@plt>
    fa90:	ldr	w8, [x19]
    fa94:	add	w24, w24, #0x1
    fa98:	cmp	w24, w8
    fa9c:	b.ne	fa84 <_ZSt13set_terminatePFvvE@@Base+0x880>  // b.any
    faa0:	strb	wzr, [x19, #4]
    faa4:	cbnz	x22, 11358 <_ZSt13set_terminatePFvvE@@Base+0x2154>
    faa8:	ldr	x3, [x23]
    faac:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fab0:	add	x0, x0, #0xdcc
    fab4:	mov	w1, #0x6                   	// #6
    fab8:	mov	w2, #0x1                   	// #1
    fabc:	bl	edd0 <fwrite@plt>
    fac0:	b	11364 <_ZSt13set_terminatePFvvE@@Base+0x2160>
    fac4:	ldr	w8, [x19]
    fac8:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
    facc:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fad0:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fad4:	add	w8, w8, #0x2
    fad8:	str	w8, [x19]
    fadc:	ldr	x22, [x22, #3856]
    fae0:	add	x1, x1, #0xdba
    fae4:	add	x2, x2, #0xdf0
    fae8:	ldr	x0, [x22]
    faec:	bl	ef00 <fprintf@plt>
    faf0:	ldr	x1, [x22]
    faf4:	ldr	x21, [x20, #16]
    faf8:	ldr	w20, [x20, #12]
    fafc:	mov	w0, #0xa                   	// #10
    fb00:	bl	eb90 <fputc@plt>
    fb04:	ldr	w8, [x19]
    fb08:	cbz	w8, fb2c <_ZSt13set_terminatePFvvE@@Base+0x928>
    fb0c:	mov	w23, wzr
    fb10:	ldr	x1, [x22]
    fb14:	mov	w0, #0x20                  	// #32
    fb18:	bl	eb90 <fputc@plt>
    fb1c:	ldr	w8, [x19]
    fb20:	add	w23, w23, #0x1
    fb24:	cmp	w23, w8
    fb28:	b.ne	fb10 <_ZSt13set_terminatePFvvE@@Base+0x90c>  // b.any
    fb2c:	strb	wzr, [x19, #4]
    fb30:	cbnz	x21, 113b0 <_ZSt13set_terminatePFvvE@@Base+0x21ac>
    fb34:	ldr	x3, [x22]
    fb38:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fb3c:	add	x0, x0, #0xdcc
    fb40:	mov	w1, #0x6                   	// #6
    fb44:	mov	w2, #0x1                   	// #1
    fb48:	bl	edd0 <fwrite@plt>
    fb4c:	b	113bc <_ZSt13set_terminatePFvvE@@Base+0x21b8>
    fb50:	ldr	w8, [x19]
    fb54:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    fb58:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fb5c:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fb60:	add	w8, w8, #0x2
    fb64:	str	w8, [x19]
    fb68:	ldr	x21, [x21, #3856]
    fb6c:	add	x1, x1, #0xdba
    fb70:	add	x2, x2, #0xe21
    fb74:	ldr	x0, [x21]
    fb78:	bl	ef00 <fprintf@plt>
    fb7c:	ldr	x1, [x21]
    fb80:	ldr	x20, [x20, #16]
    fb84:	mov	w0, #0xa                   	// #10
    fb88:	bl	eb90 <fputc@plt>
    fb8c:	ldr	w8, [x19]
    fb90:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    fb94:	mov	w22, wzr
    fb98:	ldr	x1, [x21]
    fb9c:	mov	w0, #0x20                  	// #32
    fba0:	bl	eb90 <fputc@plt>
    fba4:	ldr	w8, [x19]
    fba8:	add	w22, w22, #0x1
    fbac:	cmp	w22, w8
    fbb0:	b.ne	fb98 <_ZSt13set_terminatePFvvE@@Base+0x994>  // b.any
    fbb4:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    fbb8:	ldr	w8, [x19]
    fbbc:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
    fbc0:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fbc4:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fbc8:	add	w8, w8, #0x2
    fbcc:	str	w8, [x19]
    fbd0:	ldr	x23, [x23, #3856]
    fbd4:	add	x1, x1, #0xdba
    fbd8:	add	x2, x2, #0xe38
    fbdc:	ldr	x0, [x23]
    fbe0:	bl	ef00 <fprintf@plt>
    fbe4:	ldr	x1, [x23]
    fbe8:	ldp	x22, x21, [x20, #16]
    fbec:	ldr	x20, [x20, #32]
    fbf0:	mov	w0, #0xa                   	// #10
    fbf4:	bl	eb90 <fputc@plt>
    fbf8:	ldr	w8, [x19]
    fbfc:	cbz	w8, fc20 <_ZSt13set_terminatePFvvE@@Base+0xa1c>
    fc00:	mov	w24, wzr
    fc04:	ldr	x1, [x23]
    fc08:	mov	w0, #0x20                  	// #32
    fc0c:	bl	eb90 <fputc@plt>
    fc10:	ldr	w8, [x19]
    fc14:	add	w24, w24, #0x1
    fc18:	cmp	w24, w8
    fc1c:	b.ne	fc04 <_ZSt13set_terminatePFvvE@@Base+0xa00>  // b.any
    fc20:	strb	wzr, [x19, #4]
    fc24:	cbnz	x22, 113d4 <_ZSt13set_terminatePFvvE@@Base+0x21d0>
    fc28:	ldr	x3, [x23]
    fc2c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fc30:	add	x0, x0, #0xdcc
    fc34:	mov	w1, #0x6                   	// #6
    fc38:	mov	w2, #0x1                   	// #1
    fc3c:	bl	edd0 <fwrite@plt>
    fc40:	b	113e0 <_ZSt13set_terminatePFvvE@@Base+0x21dc>
    fc44:	ldr	w8, [x19]
    fc48:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
    fc4c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fc50:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fc54:	add	w8, w8, #0x2
    fc58:	str	w8, [x19]
    fc5c:	ldr	x22, [x22, #3856]
    fc60:	add	x1, x1, #0xdba
    fc64:	add	x2, x2, #0xe4d
    fc68:	ldr	x0, [x22]
    fc6c:	bl	ef00 <fprintf@plt>
    fc70:	ldr	x1, [x22]
    fc74:	ldp	x21, x23, [x20, #16]
    fc78:	ldr	x20, [x20, #32]
    fc7c:	mov	w0, #0xa                   	// #10
    fc80:	bl	eb90 <fputc@plt>
    fc84:	ldr	w8, [x19]
    fc88:	cbz	w8, fcac <_ZSt13set_terminatePFvvE@@Base+0xaa8>
    fc8c:	mov	w24, wzr
    fc90:	ldr	x1, [x22]
    fc94:	mov	w0, #0x20                  	// #32
    fc98:	bl	eb90 <fputc@plt>
    fc9c:	ldr	w8, [x19]
    fca0:	add	w24, w24, #0x1
    fca4:	cmp	w24, w8
    fca8:	b.ne	fc90 <_ZSt13set_terminatePFvvE@@Base+0xa8c>  // b.any
    fcac:	strb	wzr, [x19, #4]
    fcb0:	ldr	x0, [x22]
    fcb4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fcb8:	sub	w2, w23, w21
    fcbc:	add	x1, x1, #0xde0
    fcc0:	mov	x3, x21
    fcc4:	bl	ef00 <fprintf@plt>
    fcc8:	ldr	x1, [x22]
    fccc:	mov	w0, #0x2c                  	// #44
    fcd0:	bl	eb90 <fputc@plt>
    fcd4:	ldr	x1, [x22]
    fcd8:	mov	w0, #0xa                   	// #10
    fcdc:	bl	eb90 <fputc@plt>
    fce0:	ldr	w8, [x19]
    fce4:	cbz	w8, 11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
    fce8:	mov	w21, wzr
    fcec:	ldr	x1, [x22]
    fcf0:	mov	w0, #0x20                  	// #32
    fcf4:	bl	eb90 <fputc@plt>
    fcf8:	ldr	w8, [x19]
    fcfc:	add	w21, w21, #0x1
    fd00:	cmp	w21, w8
    fd04:	b.ne	fcec <_ZSt13set_terminatePFvvE@@Base+0xae8>  // b.any
    fd08:	b	11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
    fd0c:	ldr	w8, [x19]
    fd10:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    fd14:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fd18:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fd1c:	add	w8, w8, #0x2
    fd20:	str	w8, [x19]
    fd24:	ldr	x21, [x21, #3856]
    fd28:	add	x1, x1, #0xdba
    fd2c:	add	x2, x2, #0xe64
    fd30:	b	10ed8 <_ZSt13set_terminatePFvvE@@Base+0x1cd4>
    fd34:	ldr	w8, [x19]
    fd38:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
    fd3c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fd40:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fd44:	add	w8, w8, #0x2
    fd48:	str	w8, [x19]
    fd4c:	ldr	x23, [x23, #3856]
    fd50:	add	x1, x1, #0xdba
    fd54:	add	x2, x2, #0xe6d
    fd58:	ldr	x0, [x23]
    fd5c:	bl	ef00 <fprintf@plt>
    fd60:	ldr	x1, [x23]
    fd64:	ldp	x22, x21, [x20, #16]
    fd68:	ldr	x20, [x20, #32]
    fd6c:	mov	w0, #0xa                   	// #10
    fd70:	bl	eb90 <fputc@plt>
    fd74:	ldr	w8, [x19]
    fd78:	cbz	w8, fd9c <_ZSt13set_terminatePFvvE@@Base+0xb98>
    fd7c:	mov	w24, wzr
    fd80:	ldr	x1, [x23]
    fd84:	mov	w0, #0x20                  	// #32
    fd88:	bl	eb90 <fputc@plt>
    fd8c:	ldr	w8, [x19]
    fd90:	add	w24, w24, #0x1
    fd94:	cmp	w24, w8
    fd98:	b.ne	fd80 <_ZSt13set_terminatePFvvE@@Base+0xb7c>  // b.any
    fd9c:	strb	wzr, [x19, #4]
    fda0:	cbnz	x22, 1142c <_ZSt13set_terminatePFvvE@@Base+0x2228>
    fda4:	ldr	x3, [x23]
    fda8:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fdac:	add	x0, x0, #0xdcc
    fdb0:	mov	w1, #0x6                   	// #6
    fdb4:	mov	w2, #0x1                   	// #1
    fdb8:	bl	edd0 <fwrite@plt>
    fdbc:	b	11438 <_ZSt13set_terminatePFvvE@@Base+0x2234>
    fdc0:	ldr	w8, [x19]
    fdc4:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
    fdc8:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fdcc:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fdd0:	add	w8, w8, #0x2
    fdd4:	str	w8, [x19]
    fdd8:	ldr	x22, [x22, #3856]
    fddc:	add	x1, x1, #0xdba
    fde0:	add	x2, x2, #0xe78
    fde4:	ldr	x0, [x22]
    fde8:	bl	ef00 <fprintf@plt>
    fdec:	ldp	x24, x23, [x20, #16]
    fdf0:	cbz	x23, 11484 <_ZSt13set_terminatePFvvE@@Base+0x2280>
    fdf4:	ldr	x1, [x22]
    fdf8:	mov	w0, #0xa                   	// #10
    fdfc:	bl	eb90 <fputc@plt>
    fe00:	ldr	w8, [x19]
    fe04:	cbnz	w8, 12360 <_ZSt13set_terminatePFvvE@@Base+0x315c>
    fe08:	mov	w20, wzr
    fe0c:	b	12380 <_ZSt13set_terminatePFvvE@@Base+0x317c>
    fe10:	ldr	w8, [x19]
    fe14:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
    fe18:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fe1c:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fe20:	add	w8, w8, #0x2
    fe24:	str	w8, [x19]
    fe28:	ldr	x23, [x23, #3856]
    fe2c:	add	x1, x1, #0xdba
    fe30:	add	x2, x2, #0xe85
    fe34:	ldr	x0, [x23]
    fe38:	bl	ef00 <fprintf@plt>
    fe3c:	ldr	x1, [x23]
    fe40:	ldp	x22, x21, [x20, #16]
    fe44:	ldr	x20, [x20, #32]
    fe48:	mov	w0, #0xa                   	// #10
    fe4c:	bl	eb90 <fputc@plt>
    fe50:	ldr	w8, [x19]
    fe54:	cbz	w8, fe78 <_ZSt13set_terminatePFvvE@@Base+0xc74>
    fe58:	mov	w24, wzr
    fe5c:	ldr	x1, [x23]
    fe60:	mov	w0, #0x20                  	// #32
    fe64:	bl	eb90 <fputc@plt>
    fe68:	ldr	w8, [x19]
    fe6c:	add	w24, w24, #0x1
    fe70:	cmp	w24, w8
    fe74:	b.ne	fe5c <_ZSt13set_terminatePFvvE@@Base+0xc58>  // b.any
    fe78:	strb	wzr, [x19, #4]
    fe7c:	cbnz	x22, 1148c <_ZSt13set_terminatePFvvE@@Base+0x2288>
    fe80:	ldr	x3, [x23]
    fe84:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fe88:	add	x0, x0, #0xdcc
    fe8c:	mov	w1, #0x6                   	// #6
    fe90:	mov	w2, #0x1                   	// #1
    fe94:	bl	edd0 <fwrite@plt>
    fe98:	b	11498 <_ZSt13set_terminatePFvvE@@Base+0x2294>
    fe9c:	ldr	w8, [x19]
    fea0:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
    fea4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    fea8:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    feac:	add	w8, w8, #0x2
    feb0:	str	w8, [x19]
    feb4:	ldr	x21, [x21, #3856]
    feb8:	add	x1, x1, #0xdba
    febc:	add	x2, x2, #0xe93
    fec0:	ldr	x0, [x21]
    fec4:	bl	ef00 <fprintf@plt>
    fec8:	ldr	x1, [x21]
    fecc:	ldr	x20, [x20, #16]
    fed0:	mov	w0, #0xa                   	// #10
    fed4:	bl	eb90 <fputc@plt>
    fed8:	ldr	w8, [x19]
    fedc:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    fee0:	mov	w22, wzr
    fee4:	ldr	x1, [x21]
    fee8:	mov	w0, #0x20                  	// #32
    feec:	bl	eb90 <fputc@plt>
    fef0:	ldr	w8, [x19]
    fef4:	add	w22, w22, #0x1
    fef8:	cmp	w22, w8
    fefc:	b.ne	fee4 <_ZSt13set_terminatePFvvE@@Base+0xce0>  // b.any
    ff00:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
    ff04:	ldr	w8, [x19]
    ff08:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
    ff0c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    ff10:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    ff14:	add	w8, w8, #0x2
    ff18:	str	w8, [x19]
    ff1c:	ldr	x22, [x22, #3856]
    ff20:	add	x1, x1, #0xdba
    ff24:	add	x2, x2, #0xe9f
    ff28:	ldr	x0, [x22]
    ff2c:	bl	ef00 <fprintf@plt>
    ff30:	ldr	x1, [x22]
    ff34:	ldr	x21, [x20, #16]
    ff38:	ldr	w20, [x20, #24]
    ff3c:	mov	w0, #0xa                   	// #10
    ff40:	bl	eb90 <fputc@plt>
    ff44:	ldr	w8, [x19]
    ff48:	cbz	w8, ff6c <_ZSt13set_terminatePFvvE@@Base+0xd68>
    ff4c:	mov	w23, wzr
    ff50:	ldr	x1, [x22]
    ff54:	mov	w0, #0x20                  	// #32
    ff58:	bl	eb90 <fputc@plt>
    ff5c:	ldr	w8, [x19]
    ff60:	add	w23, w23, #0x1
    ff64:	cmp	w23, w8
    ff68:	b.ne	ff50 <_ZSt13set_terminatePFvvE@@Base+0xd4c>  // b.any
    ff6c:	strb	wzr, [x19, #4]
    ff70:	cbnz	x21, 114e4 <_ZSt13set_terminatePFvvE@@Base+0x22e0>
    ff74:	ldr	x3, [x22]
    ff78:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    ff7c:	add	x0, x0, #0xdcc
    ff80:	mov	w1, #0x6                   	// #6
    ff84:	mov	w2, #0x1                   	// #1
    ff88:	bl	edd0 <fwrite@plt>
    ff8c:	b	114f0 <_ZSt13set_terminatePFvvE@@Base+0x22ec>
    ff90:	ldr	w8, [x19]
    ff94:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
    ff98:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    ff9c:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
    ffa0:	add	w8, w8, #0x2
    ffa4:	str	w8, [x19]
    ffa8:	ldr	x22, [x22, #3856]
    ffac:	add	x1, x1, #0xdba
    ffb0:	add	x2, x2, #0xed9
    ffb4:	ldr	x0, [x22]
    ffb8:	bl	ef00 <fprintf@plt>
    ffbc:	ldr	x1, [x22]
    ffc0:	ldp	x21, x20, [x20, #16]
    ffc4:	mov	w0, #0xa                   	// #10
    ffc8:	bl	eb90 <fputc@plt>
    ffcc:	ldr	w8, [x19]
    ffd0:	cbz	w8, fff4 <_ZSt13set_terminatePFvvE@@Base+0xdf0>
    ffd4:	mov	w23, wzr
    ffd8:	ldr	x1, [x22]
    ffdc:	mov	w0, #0x20                  	// #32
    ffe0:	bl	eb90 <fputc@plt>
    ffe4:	ldr	w8, [x19]
    ffe8:	add	w23, w23, #0x1
    ffec:	cmp	w23, w8
    fff0:	b.ne	ffd8 <_ZSt13set_terminatePFvvE@@Base+0xdd4>  // b.any
    fff4:	strb	wzr, [x19, #4]
    fff8:	cbnz	x21, 11554 <_ZSt13set_terminatePFvvE@@Base+0x2350>
    fffc:	ldr	x3, [x22]
   10000:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10004:	add	x0, x0, #0xdcc
   10008:	mov	w1, #0x6                   	// #6
   1000c:	mov	w2, #0x1                   	// #1
   10010:	bl	edd0 <fwrite@plt>
   10014:	b	11560 <_ZSt13set_terminatePFvvE@@Base+0x235c>
   10018:	ldr	w8, [x19]
   1001c:	adrp	x25, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10020:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10024:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10028:	add	w8, w8, #0x2
   1002c:	str	w8, [x19]
   10030:	ldr	x25, [x25, #3856]
   10034:	add	x1, x1, #0xdba
   10038:	add	x2, x2, #0xef7
   1003c:	ldr	x0, [x25]
   10040:	bl	ef00 <fprintf@plt>
   10044:	ldr	x1, [x25]
   10048:	ldp	x23, x27, [x20, #16]
   1004c:	ldr	x26, [x20, #32]
   10050:	ldr	w22, [x20, #40]
   10054:	ldrb	w21, [x20, #44]
   10058:	ldr	x20, [x20, #48]
   1005c:	mov	w0, #0xa                   	// #10
   10060:	bl	eb90 <fputc@plt>
   10064:	ldr	w8, [x19]
   10068:	cbz	w8, 1008c <_ZSt13set_terminatePFvvE@@Base+0xe88>
   1006c:	mov	w24, wzr
   10070:	ldr	x1, [x25]
   10074:	mov	w0, #0x20                  	// #32
   10078:	bl	eb90 <fputc@plt>
   1007c:	ldr	w8, [x19]
   10080:	add	w24, w24, #0x1
   10084:	cmp	w24, w8
   10088:	b.ne	10070 <_ZSt13set_terminatePFvvE@@Base+0xe6c>  // b.any
   1008c:	strb	wzr, [x19, #4]
   10090:	cbnz	x23, 115ac <_ZSt13set_terminatePFvvE@@Base+0x23a8>
   10094:	ldr	x3, [x25]
   10098:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1009c:	add	x0, x0, #0xdcc
   100a0:	mov	w1, #0x6                   	// #6
   100a4:	mov	w2, #0x1                   	// #1
   100a8:	bl	edd0 <fwrite@plt>
   100ac:	b	115b8 <_ZSt13set_terminatePFvvE@@Base+0x23b4>
   100b0:	ldr	w8, [x19]
   100b4:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   100b8:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   100bc:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   100c0:	add	w8, w8, #0x2
   100c4:	str	w8, [x19]
   100c8:	ldr	x22, [x22, #3856]
   100cc:	add	x1, x1, #0xdba
   100d0:	add	x2, x2, #0xf6f
   100d4:	ldr	x0, [x22]
   100d8:	bl	ef00 <fprintf@plt>
   100dc:	ldp	x24, x23, [x20, #16]
   100e0:	cbz	x23, 11638 <_ZSt13set_terminatePFvvE@@Base+0x2434>
   100e4:	ldr	x1, [x22]
   100e8:	mov	w0, #0xa                   	// #10
   100ec:	bl	eb90 <fputc@plt>
   100f0:	ldr	w8, [x19]
   100f4:	cbnz	w8, 12468 <_ZSt13set_terminatePFvvE@@Base+0x3264>
   100f8:	mov	w20, wzr
   100fc:	b	12488 <_ZSt13set_terminatePFvvE@@Base+0x3284>
   10100:	ldr	w8, [x19]
   10104:	adrp	x25, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10108:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1010c:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10110:	add	w8, w8, #0x2
   10114:	str	w8, [x19]
   10118:	ldr	x25, [x25, #3856]
   1011c:	add	x1, x1, #0xdba
   10120:	add	x2, x2, #0xf84
   10124:	ldr	x0, [x25]
   10128:	bl	ef00 <fprintf@plt>
   1012c:	ldr	x1, [x25]
   10130:	ldp	x24, x23, [x20, #16]
   10134:	ldp	x27, x26, [x20, #32]
   10138:	ldr	x22, [x20, #48]
   1013c:	ldr	w21, [x20, #56]
   10140:	ldrb	w20, [x20, #60]
   10144:	mov	w0, #0xa                   	// #10
   10148:	bl	eb90 <fputc@plt>
   1014c:	ldr	w8, [x19]
   10150:	cbz	w8, 10174 <_ZSt13set_terminatePFvvE@@Base+0xf70>
   10154:	mov	w28, wzr
   10158:	ldr	x1, [x25]
   1015c:	mov	w0, #0x20                  	// #32
   10160:	bl	eb90 <fputc@plt>
   10164:	ldr	w8, [x19]
   10168:	add	w28, w28, #0x1
   1016c:	cmp	w28, w8
   10170:	b.ne	10158 <_ZSt13set_terminatePFvvE@@Base+0xf54>  // b.any
   10174:	strb	wzr, [x19, #4]
   10178:	cbnz	x24, 11640 <_ZSt13set_terminatePFvvE@@Base+0x243c>
   1017c:	ldr	x3, [x25]
   10180:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10184:	add	x0, x0, #0xdcc
   10188:	mov	w1, #0x6                   	// #6
   1018c:	mov	w2, #0x1                   	// #1
   10190:	bl	edd0 <fwrite@plt>
   10194:	b	1164c <_ZSt13set_terminatePFvvE@@Base+0x2448>
   10198:	ldr	w8, [x19]
   1019c:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   101a0:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   101a4:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   101a8:	add	w8, w8, #0x2
   101ac:	str	w8, [x19]
   101b0:	ldr	x22, [x22, #3856]
   101b4:	add	x1, x1, #0xdba
   101b8:	add	x2, x2, #0xfaf
   101bc:	ldr	x0, [x22]
   101c0:	bl	ef00 <fprintf@plt>
   101c4:	ldr	x1, [x22]
   101c8:	ldp	x21, x23, [x20, #16]
   101cc:	ldr	x20, [x20, #32]
   101d0:	mov	w0, #0xa                   	// #10
   101d4:	bl	eb90 <fputc@plt>
   101d8:	ldr	w8, [x19]
   101dc:	cbz	w8, 10200 <_ZSt13set_terminatePFvvE@@Base+0xffc>
   101e0:	mov	w24, wzr
   101e4:	ldr	x1, [x22]
   101e8:	mov	w0, #0x20                  	// #32
   101ec:	bl	eb90 <fputc@plt>
   101f0:	ldr	w8, [x19]
   101f4:	add	w24, w24, #0x1
   101f8:	cmp	w24, w8
   101fc:	b.ne	101e4 <_ZSt13set_terminatePFvvE@@Base+0xfe0>  // b.any
   10200:	strb	wzr, [x19, #4]
   10204:	ldr	x0, [x22]
   10208:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1020c:	sub	w2, w23, w21
   10210:	add	x1, x1, #0xde0
   10214:	mov	x3, x21
   10218:	bl	ef00 <fprintf@plt>
   1021c:	ldr	x1, [x22]
   10220:	mov	w0, #0x2c                  	// #44
   10224:	bl	eb90 <fputc@plt>
   10228:	ldr	x1, [x22]
   1022c:	mov	w0, #0xa                   	// #10
   10230:	bl	eb90 <fputc@plt>
   10234:	ldr	w8, [x19]
   10238:	cbz	w8, 11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   1023c:	mov	w21, wzr
   10240:	ldr	x1, [x22]
   10244:	mov	w0, #0x20                  	// #32
   10248:	bl	eb90 <fputc@plt>
   1024c:	ldr	w8, [x19]
   10250:	add	w21, w21, #0x1
   10254:	cmp	w21, w8
   10258:	b.ne	10240 <_ZSt13set_terminatePFvvE@@Base+0x103c>  // b.any
   1025c:	b	11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   10260:	ldr	w8, [x19]
   10264:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10268:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1026c:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10270:	add	w8, w8, #0x2
   10274:	str	w8, [x19]
   10278:	ldr	x22, [x22, #3856]
   1027c:	add	x1, x1, #0xdba
   10280:	add	x2, x2, #0xfa5
   10284:	ldr	x0, [x22]
   10288:	bl	ef00 <fprintf@plt>
   1028c:	ldr	x1, [x22]
   10290:	ldp	x21, x20, [x20, #16]
   10294:	mov	w0, #0xa                   	// #10
   10298:	bl	eb90 <fputc@plt>
   1029c:	ldr	w8, [x19]
   102a0:	cbz	w8, 102c4 <_ZSt13set_terminatePFvvE@@Base+0x10c0>
   102a4:	mov	w23, wzr
   102a8:	ldr	x1, [x22]
   102ac:	mov	w0, #0x20                  	// #32
   102b0:	bl	eb90 <fputc@plt>
   102b4:	ldr	w8, [x19]
   102b8:	add	w23, w23, #0x1
   102bc:	cmp	w23, w8
   102c0:	b.ne	102a8 <_ZSt13set_terminatePFvvE@@Base+0x10a4>  // b.any
   102c4:	strb	wzr, [x19, #4]
   102c8:	cbnz	x21, 116b8 <_ZSt13set_terminatePFvvE@@Base+0x24b4>
   102cc:	ldr	x3, [x22]
   102d0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   102d4:	add	x0, x0, #0xdcc
   102d8:	mov	w1, #0x6                   	// #6
   102dc:	mov	w2, #0x1                   	// #1
   102e0:	bl	edd0 <fwrite@plt>
   102e4:	b	116c4 <_ZSt13set_terminatePFvvE@@Base+0x24c0>
   102e8:	ldr	w8, [x19]
   102ec:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   102f0:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   102f4:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   102f8:	add	w8, w8, #0x2
   102fc:	str	w8, [x19]
   10300:	ldr	x21, [x21, #3856]
   10304:	add	x1, x1, #0xdba
   10308:	add	x2, x2, #0xfc6
   1030c:	b	10a54 <_ZSt13set_terminatePFvvE@@Base+0x1850>
   10310:	ldr	w8, [x19]
   10314:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10318:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1031c:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10320:	add	w8, w8, #0x2
   10324:	str	w8, [x19]
   10328:	ldr	x22, [x22, #3856]
   1032c:	add	x1, x1, #0xdba
   10330:	add	x2, x2, #0xfd5
   10334:	ldr	x0, [x22]
   10338:	bl	ef00 <fprintf@plt>
   1033c:	ldr	x1, [x22]
   10340:	ldp	x21, x20, [x20, #16]
   10344:	mov	w0, #0xa                   	// #10
   10348:	bl	eb90 <fputc@plt>
   1034c:	ldr	w8, [x19]
   10350:	cbz	w8, 10374 <_ZSt13set_terminatePFvvE@@Base+0x1170>
   10354:	mov	w23, wzr
   10358:	ldr	x1, [x22]
   1035c:	mov	w0, #0x20                  	// #32
   10360:	bl	eb90 <fputc@plt>
   10364:	ldr	w8, [x19]
   10368:	add	w23, w23, #0x1
   1036c:	cmp	w23, w8
   10370:	b.ne	10358 <_ZSt13set_terminatePFvvE@@Base+0x1154>  // b.any
   10374:	strb	wzr, [x19, #4]
   10378:	cbnz	x21, 11710 <_ZSt13set_terminatePFvvE@@Base+0x250c>
   1037c:	ldr	x3, [x22]
   10380:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10384:	add	x0, x0, #0xdcc
   10388:	mov	w1, #0x6                   	// #6
   1038c:	mov	w2, #0x1                   	// #1
   10390:	bl	edd0 <fwrite@plt>
   10394:	b	1171c <_ZSt13set_terminatePFvvE@@Base+0x2518>
   10398:	ldr	w8, [x19]
   1039c:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   103a0:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   103a4:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   103a8:	add	w8, w8, #0x2
   103ac:	str	w8, [x19]
   103b0:	ldr	x21, [x21, #3856]
   103b4:	add	x1, x1, #0xdba
   103b8:	add	x2, x2, #0x82
   103bc:	ldr	x0, [x21]
   103c0:	bl	ef00 <fprintf@plt>
   103c4:	ldr	x1, [x21]
   103c8:	ldr	x20, [x20, #16]
   103cc:	mov	w0, #0xa                   	// #10
   103d0:	bl	eb90 <fputc@plt>
   103d4:	ldr	w8, [x19]
   103d8:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   103dc:	mov	w22, wzr
   103e0:	ldr	x1, [x21]
   103e4:	mov	w0, #0x20                  	// #32
   103e8:	bl	eb90 <fputc@plt>
   103ec:	ldr	w8, [x19]
   103f0:	add	w22, w22, #0x1
   103f4:	cmp	w22, w8
   103f8:	b.ne	103e0 <_ZSt13set_terminatePFvvE@@Base+0x11dc>  // b.any
   103fc:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10400:	ldr	w8, [x19]
   10404:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10408:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1040c:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10410:	add	w8, w8, #0x2
   10414:	str	w8, [x19]
   10418:	ldr	x21, [x21, #3856]
   1041c:	add	x1, x1, #0xdba
   10420:	add	x2, x2, #0x126
   10424:	b	1044c <_ZSt13set_terminatePFvvE@@Base+0x1248>
   10428:	ldr	w8, [x19]
   1042c:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10430:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10434:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10438:	add	w8, w8, #0x2
   1043c:	str	w8, [x19]
   10440:	ldr	x21, [x21, #3856]
   10444:	add	x1, x1, #0xdba
   10448:	add	x2, x2, #0x12e
   1044c:	ldr	x0, [x21]
   10450:	bl	ef00 <fprintf@plt>
   10454:	str	x19, [sp, #8]
   10458:	ldr	w1, [x20, #12]
   1045c:	add	x0, sp, #0x8
   10460:	bl	13ab4 <__cxa_demangle@@Base+0x12bc>
   10464:	ldr	x1, [x21]
   10468:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   1046c:	ldr	w8, [x19]
   10470:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10474:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10478:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1047c:	add	w8, w8, #0x2
   10480:	str	w8, [x19]
   10484:	ldr	x21, [x21, #3856]
   10488:	add	x1, x1, #0xdba
   1048c:	add	x2, x2, #0x237
   10490:	ldr	x0, [x21]
   10494:	bl	ef00 <fprintf@plt>
   10498:	str	x19, [sp, #8]
   1049c:	ldp	x1, x2, [x20, #16]
   104a0:	add	x0, sp, #0x8
   104a4:	bl	133fc <__cxa_demangle@@Base+0xc04>
   104a8:	ldr	x1, [x21]
   104ac:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   104b0:	ldr	w8, [x19]
   104b4:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
   104b8:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   104bc:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   104c0:	add	w8, w8, #0x2
   104c4:	str	w8, [x19]
   104c8:	ldr	x23, [x23, #3856]
   104cc:	add	x1, x1, #0xdba
   104d0:	add	x2, x2, #0x24a
   104d4:	ldr	x0, [x23]
   104d8:	bl	ef00 <fprintf@plt>
   104dc:	ldr	x1, [x23]
   104e0:	ldp	x22, x21, [x20, #16]
   104e4:	ldr	x20, [x20, #32]
   104e8:	mov	w0, #0xa                   	// #10
   104ec:	bl	eb90 <fputc@plt>
   104f0:	ldr	w8, [x19]
   104f4:	cbz	w8, 10518 <_ZSt13set_terminatePFvvE@@Base+0x1314>
   104f8:	mov	w24, wzr
   104fc:	ldr	x1, [x23]
   10500:	mov	w0, #0x20                  	// #32
   10504:	bl	eb90 <fputc@plt>
   10508:	ldr	w8, [x19]
   1050c:	add	w24, w24, #0x1
   10510:	cmp	w24, w8
   10514:	b.ne	104fc <_ZSt13set_terminatePFvvE@@Base+0x12f8>  // b.any
   10518:	strb	wzr, [x19, #4]
   1051c:	cbnz	x22, 11768 <_ZSt13set_terminatePFvvE@@Base+0x2564>
   10520:	ldr	x3, [x23]
   10524:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10528:	add	x0, x0, #0xdcc
   1052c:	mov	w1, #0x6                   	// #6
   10530:	mov	w2, #0x1                   	// #1
   10534:	bl	edd0 <fwrite@plt>
   10538:	b	11774 <_ZSt13set_terminatePFvvE@@Base+0x2570>
   1053c:	ldr	w8, [x19]
   10540:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10544:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10548:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1054c:	add	w8, w8, #0x2
   10550:	str	w8, [x19]
   10554:	ldr	x22, [x22, #3856]
   10558:	add	x1, x1, #0xdba
   1055c:	add	x2, x2, #0x2af
   10560:	ldr	x0, [x22]
   10564:	bl	ef00 <fprintf@plt>
   10568:	ldr	x1, [x22]
   1056c:	ldp	x21, x23, [x20, #16]
   10570:	ldr	x20, [x20, #32]
   10574:	mov	w0, #0xa                   	// #10
   10578:	bl	eb90 <fputc@plt>
   1057c:	ldr	w8, [x19]
   10580:	cbz	w8, 105a4 <_ZSt13set_terminatePFvvE@@Base+0x13a0>
   10584:	mov	w24, wzr
   10588:	ldr	x1, [x22]
   1058c:	mov	w0, #0x20                  	// #32
   10590:	bl	eb90 <fputc@plt>
   10594:	ldr	w8, [x19]
   10598:	add	w24, w24, #0x1
   1059c:	cmp	w24, w8
   105a0:	b.ne	10588 <_ZSt13set_terminatePFvvE@@Base+0x1384>  // b.any
   105a4:	strb	wzr, [x19, #4]
   105a8:	ldr	x0, [x22]
   105ac:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   105b0:	sub	w2, w23, w21
   105b4:	add	x1, x1, #0xde0
   105b8:	mov	x3, x21
   105bc:	bl	ef00 <fprintf@plt>
   105c0:	ldr	x1, [x22]
   105c4:	mov	w0, #0x2c                  	// #44
   105c8:	bl	eb90 <fputc@plt>
   105cc:	ldr	x1, [x22]
   105d0:	mov	w0, #0xa                   	// #10
   105d4:	bl	eb90 <fputc@plt>
   105d8:	ldr	w8, [x19]
   105dc:	cbz	w8, 11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   105e0:	mov	w21, wzr
   105e4:	ldr	x1, [x22]
   105e8:	mov	w0, #0x20                  	// #32
   105ec:	bl	eb90 <fputc@plt>
   105f0:	ldr	w8, [x19]
   105f4:	add	w21, w21, #0x1
   105f8:	cmp	w21, w8
   105fc:	b.ne	105e4 <_ZSt13set_terminatePFvvE@@Base+0x13e0>  // b.any
   10600:	b	11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   10604:	ldr	w8, [x19]
   10608:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   1060c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10610:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10614:	add	w8, w8, #0x2
   10618:	str	w8, [x19]
   1061c:	ldr	x21, [x21, #3856]
   10620:	add	x1, x1, #0xdba
   10624:	add	x2, x2, #0x2c8
   10628:	b	10650 <_ZSt13set_terminatePFvvE@@Base+0x144c>
   1062c:	ldr	w8, [x19]
   10630:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10634:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10638:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1063c:	add	w8, w8, #0x2
   10640:	str	w8, [x19]
   10644:	ldr	x21, [x21, #3856]
   10648:	add	x1, x1, #0xdba
   1064c:	add	x2, x2, #0x2d7
   10650:	ldr	x0, [x21]
   10654:	bl	ef00 <fprintf@plt>
   10658:	str	x19, [sp, #8]
   1065c:	ldp	x1, x2, [x20, #16]
   10660:	ldr	x3, [x20, #32]
   10664:	add	x0, sp, #0x8
   10668:	bl	14474 <__cxa_demangle@@Base+0x1c7c>
   1066c:	ldr	x1, [x21]
   10670:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   10674:	ldr	w8, [x19]
   10678:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   1067c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10680:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10684:	add	w8, w8, #0x2
   10688:	str	w8, [x19]
   1068c:	ldr	x21, [x21, #3856]
   10690:	add	x1, x1, #0xdba
   10694:	add	x2, x2, #0x2e4
   10698:	ldr	x0, [x21]
   1069c:	bl	ef00 <fprintf@plt>
   106a0:	str	x19, [sp, #8]
   106a4:	ldrb	w1, [x20, #48]
   106a8:	ldp	x2, x3, [x20, #32]
   106ac:	ldp	x4, x5, [x20, #16]
   106b0:	add	x0, sp, #0x8
   106b4:	bl	14cc0 <__cxa_demangle@@Base+0x24c8>
   106b8:	ldr	x1, [x21]
   106bc:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   106c0:	ldr	w8, [x19]
   106c4:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   106c8:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   106cc:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   106d0:	add	w8, w8, #0x2
   106d4:	str	w8, [x19]
   106d8:	ldr	x21, [x21, #3856]
   106dc:	add	x1, x1, #0xdba
   106e0:	add	x2, x2, #0x2ed
   106e4:	ldr	x0, [x21]
   106e8:	bl	ef00 <fprintf@plt>
   106ec:	ldr	x1, [x21]
   106f0:	ldr	x20, [x20, #16]
   106f4:	mov	w0, #0xa                   	// #10
   106f8:	bl	eb90 <fputc@plt>
   106fc:	ldr	w8, [x19]
   10700:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10704:	mov	w22, wzr
   10708:	ldr	x1, [x21]
   1070c:	mov	w0, #0x20                  	// #32
   10710:	bl	eb90 <fputc@plt>
   10714:	ldr	w8, [x19]
   10718:	add	w22, w22, #0x1
   1071c:	cmp	w22, w8
   10720:	b.ne	10708 <_ZSt13set_terminatePFvvE@@Base+0x1504>  // b.any
   10724:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10728:	ldr	w8, [x19]
   1072c:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10730:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10734:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10738:	add	w8, w8, #0x2
   1073c:	str	w8, [x19]
   10740:	ldr	x21, [x21, #3856]
   10744:	add	x1, x1, #0xdba
   10748:	add	x2, x2, #0x2f7
   1074c:	ldr	x0, [x21]
   10750:	bl	ef00 <fprintf@plt>
   10754:	ldr	x1, [x21]
   10758:	ldr	x20, [x20, #16]
   1075c:	mov	w0, #0xa                   	// #10
   10760:	bl	eb90 <fputc@plt>
   10764:	ldr	w8, [x19]
   10768:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   1076c:	mov	w22, wzr
   10770:	ldr	x1, [x21]
   10774:	mov	w0, #0x20                  	// #32
   10778:	bl	eb90 <fputc@plt>
   1077c:	ldr	w8, [x19]
   10780:	add	w22, w22, #0x1
   10784:	cmp	w22, w8
   10788:	b.ne	10770 <_ZSt13set_terminatePFvvE@@Base+0x156c>  // b.any
   1078c:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10790:	ldr	w8, [x19]
   10794:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10798:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1079c:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   107a0:	add	w8, w8, #0x2
   107a4:	str	w8, [x19]
   107a8:	ldr	x21, [x21, #3856]
   107ac:	add	x1, x1, #0xdba
   107b0:	add	x2, x2, #0x302
   107b4:	ldr	x0, [x21]
   107b8:	bl	ef00 <fprintf@plt>
   107bc:	ldrb	w8, [x20, #12]
   107c0:	ldr	x1, [x21]
   107c4:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   107c8:	adrp	x10, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   107cc:	add	x9, x9, #0x1e6
   107d0:	add	x10, x10, #0x1eb
   107d4:	cmp	w8, #0x0
   107d8:	csel	x0, x10, x9, eq  // eq = none
   107dc:	bl	eb10 <fputs@plt>
   107e0:	ldr	x1, [x21]
   107e4:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   107e8:	ldr	w8, [x19]
   107ec:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   107f0:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   107f4:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   107f8:	add	w8, w8, #0x2
   107fc:	str	w8, [x19]
   10800:	ldr	x21, [x21, #3856]
   10804:	add	x1, x1, #0xdba
   10808:	add	x2, x2, #0xf95
   1080c:	ldr	x0, [x21]
   10810:	bl	ef00 <fprintf@plt>
   10814:	ldr	x1, [x21]
   10818:	ldr	x20, [x20, #16]
   1081c:	mov	w0, #0xa                   	// #10
   10820:	bl	eb90 <fputc@plt>
   10824:	ldr	w8, [x19]
   10828:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   1082c:	mov	w22, wzr
   10830:	ldr	x1, [x21]
   10834:	mov	w0, #0x20                  	// #32
   10838:	bl	eb90 <fputc@plt>
   1083c:	ldr	w8, [x19]
   10840:	add	w22, w22, #0x1
   10844:	cmp	w22, w8
   10848:	b.ne	10830 <_ZSt13set_terminatePFvvE@@Base+0x162c>  // b.any
   1084c:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10850:	ldr	w8, [x19]
   10854:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10858:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1085c:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10860:	add	w8, w8, #0x2
   10864:	str	w8, [x19]
   10868:	ldr	x22, [x22, #3856]
   1086c:	add	x1, x1, #0xdba
   10870:	add	x2, x2, #0x118
   10874:	ldr	x0, [x22]
   10878:	bl	ef00 <fprintf@plt>
   1087c:	ldr	x1, [x22]
   10880:	ldp	x21, x20, [x20, #16]
   10884:	mov	w0, #0xa                   	// #10
   10888:	bl	eb90 <fputc@plt>
   1088c:	ldr	w8, [x19]
   10890:	cbz	w8, 108b4 <_ZSt13set_terminatePFvvE@@Base+0x16b0>
   10894:	mov	w23, wzr
   10898:	ldr	x1, [x22]
   1089c:	mov	w0, #0x20                  	// #32
   108a0:	bl	eb90 <fputc@plt>
   108a4:	ldr	w8, [x19]
   108a8:	add	w23, w23, #0x1
   108ac:	cmp	w23, w8
   108b0:	b.ne	10898 <_ZSt13set_terminatePFvvE@@Base+0x1694>  // b.any
   108b4:	strb	wzr, [x19, #4]
   108b8:	cbnz	x21, 11b74 <_ZSt13set_terminatePFvvE@@Base+0x2970>
   108bc:	ldr	x3, [x22]
   108c0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   108c4:	add	x0, x0, #0xdcc
   108c8:	mov	w1, #0x6                   	// #6
   108cc:	mov	w2, #0x1                   	// #1
   108d0:	bl	edd0 <fwrite@plt>
   108d4:	b	11b80 <_ZSt13set_terminatePFvvE@@Base+0x297c>
   108d8:	ldr	w8, [x19]
   108dc:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   108e0:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   108e4:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   108e8:	add	w8, w8, #0x2
   108ec:	str	w8, [x19]
   108f0:	ldr	x22, [x22, #3856]
   108f4:	add	x1, x1, #0xdba
   108f8:	add	x2, x2, #0xfbb
   108fc:	ldr	x0, [x22]
   10900:	bl	ef00 <fprintf@plt>
   10904:	ldr	x1, [x22]
   10908:	ldp	x21, x20, [x20, #16]
   1090c:	mov	w0, #0xa                   	// #10
   10910:	bl	eb90 <fputc@plt>
   10914:	ldr	w8, [x19]
   10918:	cbz	w8, 1093c <_ZSt13set_terminatePFvvE@@Base+0x1738>
   1091c:	mov	w23, wzr
   10920:	ldr	x1, [x22]
   10924:	mov	w0, #0x20                  	// #32
   10928:	bl	eb90 <fputc@plt>
   1092c:	ldr	w8, [x19]
   10930:	add	w23, w23, #0x1
   10934:	cmp	w23, w8
   10938:	b.ne	10920 <_ZSt13set_terminatePFvvE@@Base+0x171c>  // b.any
   1093c:	strb	wzr, [x19, #4]
   10940:	cbnz	x21, 11bcc <_ZSt13set_terminatePFvvE@@Base+0x29c8>
   10944:	ldr	x3, [x22]
   10948:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1094c:	add	x0, x0, #0xdcc
   10950:	mov	w1, #0x6                   	// #6
   10954:	mov	w2, #0x1                   	// #1
   10958:	bl	edd0 <fwrite@plt>
   1095c:	b	11bd8 <_ZSt13set_terminatePFvvE@@Base+0x29d4>
   10960:	ldr	w8, [x19]
   10964:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10968:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1096c:	adrp	x2, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10970:	add	w8, w8, #0x2
   10974:	str	w8, [x19]
   10978:	ldr	x21, [x21, #3856]
   1097c:	add	x1, x1, #0xdba
   10980:	add	x2, x2, #0xfd0
   10984:	ldr	x0, [x21]
   10988:	bl	ef00 <fprintf@plt>
   1098c:	ldr	x1, [x21]
   10990:	ldr	x20, [x20, #16]
   10994:	mov	w0, #0xa                   	// #10
   10998:	bl	eb90 <fputc@plt>
   1099c:	ldr	w8, [x19]
   109a0:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   109a4:	mov	w22, wzr
   109a8:	ldr	x1, [x21]
   109ac:	mov	w0, #0x20                  	// #32
   109b0:	bl	eb90 <fputc@plt>
   109b4:	ldr	w8, [x19]
   109b8:	add	w22, w22, #0x1
   109bc:	cmp	w22, w8
   109c0:	b.ne	109a8 <_ZSt13set_terminatePFvvE@@Base+0x17a4>  // b.any
   109c4:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   109c8:	ldr	w8, [x19]
   109cc:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   109d0:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   109d4:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   109d8:	add	w8, w8, #0x2
   109dc:	str	w8, [x19]
   109e0:	ldr	x21, [x21, #3856]
   109e4:	add	x1, x1, #0xdba
   109e8:	add	x2, x2, #0x52
   109ec:	ldr	x0, [x21]
   109f0:	bl	ef00 <fprintf@plt>
   109f4:	ldr	x1, [x21]
   109f8:	ldr	x20, [x20, #16]
   109fc:	mov	w0, #0xa                   	// #10
   10a00:	bl	eb90 <fputc@plt>
   10a04:	ldr	w8, [x19]
   10a08:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10a0c:	mov	w22, wzr
   10a10:	ldr	x1, [x21]
   10a14:	mov	w0, #0x20                  	// #32
   10a18:	bl	eb90 <fputc@plt>
   10a1c:	ldr	w8, [x19]
   10a20:	add	w22, w22, #0x1
   10a24:	cmp	w22, w8
   10a28:	b.ne	10a10 <_ZSt13set_terminatePFvvE@@Base+0x180c>  // b.any
   10a2c:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10a30:	ldr	w8, [x19]
   10a34:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10a38:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10a3c:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10a40:	add	w8, w8, #0x2
   10a44:	str	w8, [x19]
   10a48:	ldr	x21, [x21, #3856]
   10a4c:	add	x1, x1, #0xdba
   10a50:	add	x2, x2, #0x4f
   10a54:	ldr	x0, [x21]
   10a58:	bl	ef00 <fprintf@plt>
   10a5c:	str	x19, [sp, #8]
   10a60:	ldp	x1, x2, [x20, #16]
   10a64:	add	x0, sp, #0x8
   10a68:	bl	1362c <__cxa_demangle@@Base+0xe34>
   10a6c:	ldr	x1, [x21]
   10a70:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   10a74:	ldr	w8, [x19]
   10a78:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10a7c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10a80:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10a84:	add	w8, w8, #0x2
   10a88:	str	w8, [x19]
   10a8c:	ldr	x21, [x21, #3856]
   10a90:	add	x1, x1, #0xdba
   10a94:	add	x2, x2, #0x68
   10a98:	ldr	x0, [x21]
   10a9c:	bl	ef00 <fprintf@plt>
   10aa0:	str	x19, [sp, #8]
   10aa4:	ldp	x1, x2, [x20, #16]
   10aa8:	ldr	x3, [x20, #32]
   10aac:	add	x0, sp, #0x8
   10ab0:	bl	13760 <__cxa_demangle@@Base+0xf68>
   10ab4:	ldr	x1, [x21]
   10ab8:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   10abc:	ldr	w8, [x19]
   10ac0:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10ac4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10ac8:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10acc:	add	w8, w8, #0x2
   10ad0:	str	w8, [x19]
   10ad4:	ldr	x22, [x22, #3856]
   10ad8:	add	x1, x1, #0xdba
   10adc:	add	x2, x2, #0x98
   10ae0:	ldr	x0, [x22]
   10ae4:	bl	ef00 <fprintf@plt>
   10ae8:	ldp	x24, x23, [x20, #16]
   10aec:	cbz	x23, 11c54 <_ZSt13set_terminatePFvvE@@Base+0x2a50>
   10af0:	ldr	x1, [x22]
   10af4:	mov	w0, #0xa                   	// #10
   10af8:	bl	eb90 <fputc@plt>
   10afc:	ldr	w8, [x19]
   10b00:	cbnz	w8, 12570 <_ZSt13set_terminatePFvvE@@Base+0x336c>
   10b04:	mov	w20, wzr
   10b08:	b	12590 <_ZSt13set_terminatePFvvE@@Base+0x338c>
   10b0c:	ldr	w8, [x19]
   10b10:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10b14:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10b18:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10b1c:	add	w8, w8, #0x2
   10b20:	str	w8, [x19]
   10b24:	ldr	x21, [x21, #3856]
   10b28:	add	x1, x1, #0xdba
   10b2c:	add	x2, x2, #0x101
   10b30:	ldr	x0, [x21]
   10b34:	bl	ef00 <fprintf@plt>
   10b38:	ldr	x1, [x21]
   10b3c:	ldr	x20, [x20, #16]
   10b40:	mov	w0, #0xa                   	// #10
   10b44:	bl	eb90 <fputc@plt>
   10b48:	ldr	w8, [x19]
   10b4c:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10b50:	mov	w22, wzr
   10b54:	ldr	x1, [x21]
   10b58:	mov	w0, #0x20                  	// #32
   10b5c:	bl	eb90 <fputc@plt>
   10b60:	ldr	w8, [x19]
   10b64:	add	w22, w22, #0x1
   10b68:	cmp	w22, w8
   10b6c:	b.ne	10b54 <_ZSt13set_terminatePFvvE@@Base+0x1950>  // b.any
   10b70:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10b74:	ldr	w8, [x19]
   10b78:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10b7c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10b80:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10b84:	add	w8, w8, #0x2
   10b88:	str	w8, [x19]
   10b8c:	ldr	x21, [x21, #3856]
   10b90:	add	x1, x1, #0xdba
   10b94:	add	x2, x2, #0x115
   10b98:	ldr	x0, [x21]
   10b9c:	bl	ef00 <fprintf@plt>
   10ba0:	ldr	x1, [x21]
   10ba4:	ldr	x20, [x20, #16]
   10ba8:	mov	w0, #0xa                   	// #10
   10bac:	bl	eb90 <fputc@plt>
   10bb0:	ldr	w8, [x19]
   10bb4:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10bb8:	mov	w22, wzr
   10bbc:	ldr	x1, [x21]
   10bc0:	mov	w0, #0x20                  	// #32
   10bc4:	bl	eb90 <fputc@plt>
   10bc8:	ldr	w8, [x19]
   10bcc:	add	w22, w22, #0x1
   10bd0:	cmp	w22, w8
   10bd4:	b.ne	10bbc <_ZSt13set_terminatePFvvE@@Base+0x19b8>  // b.any
   10bd8:	b	10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10bdc:	ldr	w8, [x19]
   10be0:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10be4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10be8:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10bec:	add	w8, w8, #0x2
   10bf0:	str	w8, [x19]
   10bf4:	ldr	x21, [x21, #3856]
   10bf8:	add	x1, x1, #0xdba
   10bfc:	add	x2, x2, #0x1d9
   10c00:	ldr	x0, [x21]
   10c04:	bl	ef00 <fprintf@plt>
   10c08:	str	x19, [sp, #8]
   10c0c:	ldr	x1, [x20, #16]
   10c10:	ldrb	w2, [x20, #24]
   10c14:	ldr	w3, [x20, #28]
   10c18:	add	x0, sp, #0x8
   10c1c:	bl	13b78 <__cxa_demangle@@Base+0x1380>
   10c20:	ldr	x1, [x21]
   10c24:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   10c28:	ldr	w8, [x19]
   10c2c:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10c30:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10c34:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10c38:	add	w8, w8, #0x2
   10c3c:	str	w8, [x19]
   10c40:	ldr	x21, [x21, #3856]
   10c44:	add	x1, x1, #0xdba
   10c48:	add	x2, x2, #0x206
   10c4c:	ldr	x0, [x21]
   10c50:	bl	ef00 <fprintf@plt>
   10c54:	str	x19, [sp, #8]
   10c58:	ldp	x1, x2, [x20, #16]
   10c5c:	ldp	x3, x4, [x20, #32]
   10c60:	ldp	x5, x6, [x20, #48]
   10c64:	add	x0, sp, #0x8
   10c68:	bl	13d40 <__cxa_demangle@@Base+0x1548>
   10c6c:	ldr	x1, [x21]
   10c70:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   10c74:	ldr	w8, [x19]
   10c78:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10c7c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10c80:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10c84:	add	w8, w8, #0x2
   10c88:	str	w8, [x19]
   10c8c:	ldr	x21, [x21, #3856]
   10c90:	add	x1, x1, #0xdba
   10c94:	add	x2, x2, #0x2a4
   10c98:	ldr	x0, [x21]
   10c9c:	bl	ef00 <fprintf@plt>
   10ca0:	str	x19, [sp, #8]
   10ca4:	ldr	x1, [x20, #16]
   10ca8:	ldrb	w2, [x20, #24]
   10cac:	ldrb	w3, [x20, #25]
   10cb0:	add	x0, sp, #0x8
   10cb4:	bl	14afc <__cxa_demangle@@Base+0x2304>
   10cb8:	ldr	x1, [x21]
   10cbc:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   10cc0:	ldr	w8, [x19]
   10cc4:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10cc8:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10ccc:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10cd0:	add	w8, w8, #0x2
   10cd4:	str	w8, [x19]
   10cd8:	ldr	x21, [x21, #3856]
   10cdc:	add	x1, x1, #0xdba
   10ce0:	add	x2, x2, #0x2ba
   10ce4:	b	10ed8 <_ZSt13set_terminatePFvvE@@Base+0x1cd4>
   10ce8:	ldr	w8, [x19]
   10cec:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10cf0:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10cf4:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10cf8:	add	w8, w8, #0x2
   10cfc:	str	w8, [x19]
   10d00:	ldr	x22, [x22, #3856]
   10d04:	add	x1, x1, #0xdba
   10d08:	add	x2, x2, #0x216
   10d0c:	ldr	x0, [x22]
   10d10:	bl	ef00 <fprintf@plt>
   10d14:	ldp	x24, x23, [x20, #16]
   10d18:	cbz	x23, 11c5c <_ZSt13set_terminatePFvvE@@Base+0x2a58>
   10d1c:	ldr	x1, [x22]
   10d20:	mov	w0, #0xa                   	// #10
   10d24:	bl	eb90 <fputc@plt>
   10d28:	ldr	w8, [x19]
   10d2c:	cbnz	w8, 12678 <_ZSt13set_terminatePFvvE@@Base+0x3474>
   10d30:	mov	w20, wzr
   10d34:	b	12698 <_ZSt13set_terminatePFvvE@@Base+0x3494>
   10d38:	ldr	w8, [x19]
   10d3c:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10d40:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10d44:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10d48:	add	w8, w8, #0x2
   10d4c:	str	w8, [x19]
   10d50:	ldr	x21, [x21, #3856]
   10d54:	add	x1, x1, #0xdba
   10d58:	add	x2, x2, #0x271
   10d5c:	ldr	x0, [x21]
   10d60:	bl	ef00 <fprintf@plt>
   10d64:	str	x19, [sp, #8]
   10d68:	ldp	x1, x2, [x20, #16]
   10d6c:	ldp	x3, x4, [x20, #32]
   10d70:	ldr	x5, [x20, #48]
   10d74:	add	x0, sp, #0x8
   10d78:	bl	14128 <__cxa_demangle@@Base+0x1930>
   10d7c:	ldr	x1, [x21]
   10d80:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   10d84:	ldr	w8, [x19]
   10d88:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10d8c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10d90:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10d94:	add	w8, w8, #0x2
   10d98:	str	w8, [x19]
   10d9c:	ldr	x21, [x21, #3856]
   10da0:	add	x1, x1, #0xdba
   10da4:	add	x2, x2, #0x27f
   10da8:	ldr	x0, [x21]
   10dac:	bl	ef00 <fprintf@plt>
   10db0:	ldr	x1, [x21]
   10db4:	ldr	x20, [x20, #16]
   10db8:	mov	w0, #0xa                   	// #10
   10dbc:	bl	eb90 <fputc@plt>
   10dc0:	ldr	w8, [x19]
   10dc4:	cbz	w8, 10de8 <_ZSt13set_terminatePFvvE@@Base+0x1be4>
   10dc8:	mov	w22, wzr
   10dcc:	ldr	x1, [x21]
   10dd0:	mov	w0, #0x20                  	// #32
   10dd4:	bl	eb90 <fputc@plt>
   10dd8:	ldr	w8, [x19]
   10ddc:	add	w22, w22, #0x1
   10de0:	cmp	w22, w8
   10de4:	b.ne	10dcc <_ZSt13set_terminatePFvvE@@Base+0x1bc8>  // b.any
   10de8:	strb	wzr, [x19, #4]
   10dec:	cbnz	x20, 10e0c <_ZSt13set_terminatePFvvE@@Base+0x1c08>
   10df0:	ldr	x3, [x21]
   10df4:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10df8:	add	x0, x0, #0xdcc
   10dfc:	mov	w1, #0x6                   	// #6
   10e00:	mov	w2, #0x1                   	// #1
   10e04:	bl	edd0 <fwrite@plt>
   10e08:	b	10e18 <_ZSt13set_terminatePFvvE@@Base+0x1c14>
   10e0c:	mov	x0, x20
   10e10:	mov	x1, x19
   10e14:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   10e18:	mov	w8, #0x1                   	// #1
   10e1c:	strb	w8, [x19, #4]
   10e20:	ldr	x1, [x21]
   10e24:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   10e28:	ldr	w8, [x19]
   10e2c:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10e30:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10e34:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10e38:	add	w8, w8, #0x2
   10e3c:	str	w8, [x19]
   10e40:	ldr	x22, [x22, #3856]
   10e44:	add	x1, x1, #0xdba
   10e48:	add	x2, x2, #0x293
   10e4c:	ldr	x0, [x22]
   10e50:	bl	ef00 <fprintf@plt>
   10e54:	ldr	x1, [x22]
   10e58:	ldp	x21, x24, [x20, #16]
   10e5c:	ldr	x23, [x20, #32]
   10e60:	mov	w0, #0xa                   	// #10
   10e64:	bl	eb90 <fputc@plt>
   10e68:	ldr	w8, [x19]
   10e6c:	cbz	w8, 10e90 <_ZSt13set_terminatePFvvE@@Base+0x1c8c>
   10e70:	mov	w20, wzr
   10e74:	ldr	x1, [x22]
   10e78:	mov	w0, #0x20                  	// #32
   10e7c:	bl	eb90 <fputc@plt>
   10e80:	ldr	w8, [x19]
   10e84:	add	w20, w20, #0x1
   10e88:	cmp	w20, w8
   10e8c:	b.ne	10e74 <_ZSt13set_terminatePFvvE@@Base+0x1c70>  // b.any
   10e90:	strb	wzr, [x19, #4]
   10e94:	cbnz	x21, 11c64 <_ZSt13set_terminatePFvvE@@Base+0x2a60>
   10e98:	ldr	x3, [x22]
   10e9c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10ea0:	add	x0, x0, #0xdcc
   10ea4:	mov	w1, #0x6                   	// #6
   10ea8:	mov	w2, #0x1                   	// #1
   10eac:	bl	edd0 <fwrite@plt>
   10eb0:	b	11c70 <_ZSt13set_terminatePFvvE@@Base+0x2a6c>
   10eb4:	ldr	w8, [x19]
   10eb8:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10ebc:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10ec0:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10ec4:	add	w8, w8, #0x2
   10ec8:	str	w8, [x19]
   10ecc:	ldr	x21, [x21, #3856]
   10ed0:	add	x1, x1, #0xdba
   10ed4:	add	x2, x2, #0x350
   10ed8:	ldr	x0, [x21]
   10edc:	bl	ef00 <fprintf@plt>
   10ee0:	ldr	x3, [x20, #16]
   10ee4:	ldr	w8, [x20, #24]
   10ee8:	ldr	x0, [x21]
   10eec:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10ef0:	add	x1, x1, #0xde0
   10ef4:	sub	w2, w8, w3
   10ef8:	bl	ef00 <fprintf@plt>
   10efc:	ldr	x1, [x21]
   10f00:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   10f04:	ldr	w8, [x19]
   10f08:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10f0c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10f10:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10f14:	add	w8, w8, #0x2
   10f18:	str	w8, [x19]
   10f1c:	ldr	x21, [x21, #3856]
   10f20:	add	x1, x1, #0xdba
   10f24:	add	x2, x2, #0x362
   10f28:	ldr	x0, [x21]
   10f2c:	bl	ef00 <fprintf@plt>
   10f30:	str	x19, [sp, #8]
   10f34:	ldp	x1, x2, [x20, #16]
   10f38:	ldrb	w3, [x20, #32]
   10f3c:	add	x0, sp, #0x8
   10f40:	bl	14ef8 <__cxa_demangle@@Base+0x2700>
   10f44:	ldr	x1, [x21]
   10f48:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   10f4c:	ldr	w8, [x19]
   10f50:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10f54:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10f58:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10f5c:	add	w8, w8, #0x2
   10f60:	str	w8, [x19]
   10f64:	ldr	x23, [x23, #3856]
   10f68:	add	x1, x1, #0xdba
   10f6c:	add	x2, x2, #0x266
   10f70:	ldr	x0, [x23]
   10f74:	bl	ef00 <fprintf@plt>
   10f78:	ldr	x1, [x23]
   10f7c:	ldp	x22, x21, [x20, #16]
   10f80:	ldp	x24, x20, [x20, #32]
   10f84:	mov	w0, #0xa                   	// #10
   10f88:	bl	eb90 <fputc@plt>
   10f8c:	ldr	w8, [x19]
   10f90:	cbz	w8, 10fb4 <_ZSt13set_terminatePFvvE@@Base+0x1db0>
   10f94:	mov	w25, wzr
   10f98:	ldr	x1, [x23]
   10f9c:	mov	w0, #0x20                  	// #32
   10fa0:	bl	eb90 <fputc@plt>
   10fa4:	ldr	w8, [x19]
   10fa8:	add	w25, w25, #0x1
   10fac:	cmp	w25, w8
   10fb0:	b.ne	10f98 <_ZSt13set_terminatePFvvE@@Base+0x1d94>  // b.any
   10fb4:	strb	wzr, [x19, #4]
   10fb8:	cbnz	x22, 11dbc <_ZSt13set_terminatePFvvE@@Base+0x2bb8>
   10fbc:	ldr	x3, [x23]
   10fc0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10fc4:	add	x0, x0, #0xdcc
   10fc8:	mov	w1, #0x6                   	// #6
   10fcc:	mov	w2, #0x1                   	// #1
   10fd0:	bl	edd0 <fwrite@plt>
   10fd4:	b	11dc8 <_ZSt13set_terminatePFvvE@@Base+0x2bc4>
   10fd8:	ldr	w8, [x19]
   10fdc:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   10fe0:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   10fe4:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   10fe8:	add	w8, w8, #0x2
   10fec:	str	w8, [x19]
   10ff0:	ldr	x21, [x21, #3856]
   10ff4:	add	x1, x1, #0xdba
   10ff8:	add	x2, x2, #0x324
   10ffc:	ldr	x0, [x21]
   11000:	bl	ef00 <fprintf@plt>
   11004:	str	x19, [sp, #8]
   11008:	ldp	x1, x2, [x20, #16]
   1100c:	ldr	x3, [x20, #32]
   11010:	add	x0, sp, #0x8
   11014:	bl	13140 <__cxa_demangle@@Base+0x948>
   11018:	ldr	x1, [x21]
   1101c:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   11020:	ldr	w8, [x19]
   11024:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
   11028:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1102c:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   11030:	add	w8, w8, #0x2
   11034:	str	w8, [x19]
   11038:	ldr	x23, [x23, #3856]
   1103c:	add	x1, x1, #0xdba
   11040:	add	x2, x2, #0x36d
   11044:	ldr	x0, [x23]
   11048:	bl	ef00 <fprintf@plt>
   1104c:	ldr	x1, [x23]
   11050:	ldp	x22, x21, [x20, #16]
   11054:	ldr	x20, [x20, #32]
   11058:	mov	w0, #0xa                   	// #10
   1105c:	bl	eb90 <fputc@plt>
   11060:	ldr	w8, [x19]
   11064:	cbz	w8, 11088 <_ZSt13set_terminatePFvvE@@Base+0x1e84>
   11068:	mov	w24, wzr
   1106c:	ldr	x1, [x23]
   11070:	mov	w0, #0x20                  	// #32
   11074:	bl	eb90 <fputc@plt>
   11078:	ldr	w8, [x19]
   1107c:	add	w24, w24, #0x1
   11080:	cmp	w24, w8
   11084:	b.ne	1106c <_ZSt13set_terminatePFvvE@@Base+0x1e68>  // b.any
   11088:	strb	wzr, [x19, #4]
   1108c:	cbnz	x22, 11e70 <_ZSt13set_terminatePFvvE@@Base+0x2c6c>
   11090:	ldr	x3, [x23]
   11094:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11098:	add	x0, x0, #0xdcc
   1109c:	mov	w1, #0x6                   	// #6
   110a0:	mov	w2, #0x1                   	// #1
   110a4:	bl	edd0 <fwrite@plt>
   110a8:	b	11e7c <_ZSt13set_terminatePFvvE@@Base+0x2c78>
   110ac:	mov	x0, x22
   110b0:	mov	x1, x19
   110b4:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   110b8:	mov	w8, #0x1                   	// #1
   110bc:	strb	w8, [x19, #4]
   110c0:	ldr	x1, [x23]
   110c4:	mov	w0, #0x2c                  	// #44
   110c8:	bl	eb90 <fputc@plt>
   110cc:	ldr	x1, [x23]
   110d0:	mov	w0, #0xa                   	// #10
   110d4:	bl	eb90 <fputc@plt>
   110d8:	ldr	w8, [x19]
   110dc:	cbz	w8, 11100 <_ZSt13set_terminatePFvvE@@Base+0x1efc>
   110e0:	mov	w22, wzr
   110e4:	ldr	x1, [x23]
   110e8:	mov	w0, #0x20                  	// #32
   110ec:	bl	eb90 <fputc@plt>
   110f0:	ldr	w8, [x19]
   110f4:	add	w22, w22, #0x1
   110f8:	cmp	w22, w8
   110fc:	b.ne	110e4 <_ZSt13set_terminatePFvvE@@Base+0x1ee0>  // b.any
   11100:	strb	wzr, [x19, #4]
   11104:	cbnz	x21, 111e0 <_ZSt13set_terminatePFvvE@@Base+0x1fdc>
   11108:	ldr	x3, [x23]
   1110c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11110:	add	x0, x0, #0xdcc
   11114:	mov	w1, #0x6                   	// #6
   11118:	mov	w2, #0x1                   	// #1
   1111c:	bl	edd0 <fwrite@plt>
   11120:	b	111ec <_ZSt13set_terminatePFvvE@@Base+0x1fe8>
   11124:	ldr	w20, [x19]
   11128:	b	11fbc <_ZSt13set_terminatePFvvE@@Base+0x2db8>
   1112c:	mov	x0, x22
   11130:	mov	x1, x19
   11134:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11138:	mov	w8, #0x1                   	// #1
   1113c:	strb	w8, [x19, #4]
   11140:	ldr	x1, [x23]
   11144:	mov	w0, #0x2c                  	// #44
   11148:	bl	eb90 <fputc@plt>
   1114c:	ldr	x1, [x23]
   11150:	mov	w0, #0xa                   	// #10
   11154:	bl	eb90 <fputc@plt>
   11158:	ldr	w8, [x19]
   1115c:	cbz	w8, 11180 <_ZSt13set_terminatePFvvE@@Base+0x1f7c>
   11160:	mov	w22, wzr
   11164:	ldr	x1, [x23]
   11168:	mov	w0, #0x20                  	// #32
   1116c:	bl	eb90 <fputc@plt>
   11170:	ldr	w8, [x19]
   11174:	add	w22, w22, #0x1
   11178:	cmp	w22, w8
   1117c:	b.ne	11164 <_ZSt13set_terminatePFvvE@@Base+0x1f60>  // b.any
   11180:	strb	wzr, [x19, #4]
   11184:	ldr	x0, [x23]
   11188:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1118c:	sub	w2, w24, w21
   11190:	add	x1, x1, #0xde0
   11194:	mov	x3, x21
   11198:	bl	ef00 <fprintf@plt>
   1119c:	ldr	x1, [x23]
   111a0:	mov	w0, #0x2c                  	// #44
   111a4:	bl	eb90 <fputc@plt>
   111a8:	ldr	x1, [x23]
   111ac:	mov	w0, #0xa                   	// #10
   111b0:	bl	eb90 <fputc@plt>
   111b4:	ldr	w8, [x19]
   111b8:	cbz	w8, 11f3c <_ZSt13set_terminatePFvvE@@Base+0x2d38>
   111bc:	mov	w21, wzr
   111c0:	ldr	x1, [x23]
   111c4:	mov	w0, #0x20                  	// #32
   111c8:	bl	eb90 <fputc@plt>
   111cc:	ldr	w8, [x19]
   111d0:	add	w21, w21, #0x1
   111d4:	cmp	w21, w8
   111d8:	b.ne	111c0 <_ZSt13set_terminatePFvvE@@Base+0x1fbc>  // b.any
   111dc:	b	11f3c <_ZSt13set_terminatePFvvE@@Base+0x2d38>
   111e0:	mov	x0, x21
   111e4:	mov	x1, x19
   111e8:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   111ec:	mov	w8, #0x1                   	// #1
   111f0:	strb	w8, [x19, #4]
   111f4:	ldr	x1, [x23]
   111f8:	mov	w0, #0x2c                  	// #44
   111fc:	bl	eb90 <fputc@plt>
   11200:	ldr	x1, [x23]
   11204:	mov	w0, #0xa                   	// #10
   11208:	bl	eb90 <fputc@plt>
   1120c:	ldr	w8, [x19]
   11210:	cbz	w8, 11f3c <_ZSt13set_terminatePFvvE@@Base+0x2d38>
   11214:	mov	w21, wzr
   11218:	ldr	x1, [x23]
   1121c:	mov	w0, #0x20                  	// #32
   11220:	bl	eb90 <fputc@plt>
   11224:	ldr	w8, [x19]
   11228:	add	w21, w21, #0x1
   1122c:	cmp	w21, w8
   11230:	b.ne	11218 <_ZSt13set_terminatePFvvE@@Base+0x2014>  // b.any
   11234:	b	11f3c <_ZSt13set_terminatePFvvE@@Base+0x2d38>
   11238:	ldr	w20, [x19]
   1123c:	b	120c4 <_ZSt13set_terminatePFvvE@@Base+0x2ec0>
   11240:	mov	x0, x21
   11244:	mov	x1, x19
   11248:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   1124c:	mov	w8, #0x1                   	// #1
   11250:	strb	w8, [x19, #4]
   11254:	ldr	x1, [x22]
   11258:	mov	w0, #0x2c                  	// #44
   1125c:	bl	eb90 <fputc@plt>
   11260:	ldr	x1, [x22]
   11264:	mov	w0, #0xa                   	// #10
   11268:	bl	eb90 <fputc@plt>
   1126c:	ldr	w8, [x19]
   11270:	cbz	w8, 11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   11274:	mov	w21, wzr
   11278:	ldr	x1, [x22]
   1127c:	mov	w0, #0x20                  	// #32
   11280:	bl	eb90 <fputc@plt>
   11284:	ldr	w8, [x19]
   11288:	add	w21, w21, #0x1
   1128c:	cmp	w21, w8
   11290:	b.ne	11278 <_ZSt13set_terminatePFvvE@@Base+0x2074>  // b.any
   11294:	b	11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   11298:	ldr	w20, [x19]
   1129c:	b	1227c <_ZSt13set_terminatePFvvE@@Base+0x3078>
   112a0:	mov	w0, #0x2c                  	// #44
   112a4:	mov	x1, x3
   112a8:	bl	eb90 <fputc@plt>
   112ac:	ldr	x1, [x22]
   112b0:	mov	w0, #0xa                   	// #10
   112b4:	bl	eb90 <fputc@plt>
   112b8:	ldr	w8, [x19]
   112bc:	cbz	w8, 112e0 <_ZSt13set_terminatePFvvE@@Base+0x20dc>
   112c0:	mov	w23, wzr
   112c4:	ldr	x1, [x22]
   112c8:	mov	w0, #0x20                  	// #32
   112cc:	bl	eb90 <fputc@plt>
   112d0:	ldr	w8, [x19]
   112d4:	add	w23, w23, #0x1
   112d8:	cmp	w23, w8
   112dc:	b.ne	112c4 <_ZSt13set_terminatePFvvE@@Base+0x20c0>  // b.any
   112e0:	strb	wzr, [x19, #4]
   112e4:	ldr	x0, [x22]
   112e8:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   112ec:	sub	w2, w20, w21
   112f0:	add	x1, x1, #0xde0
   112f4:	mov	x3, x21
   112f8:	bl	ef00 <fprintf@plt>
   112fc:	b	127a0 <_ZSt13set_terminatePFvvE@@Base+0x359c>
   11300:	mov	x0, x22
   11304:	mov	x1, x19
   11308:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   1130c:	mov	w8, #0x1                   	// #1
   11310:	strb	w8, [x19, #4]
   11314:	ldr	x1, [x23]
   11318:	mov	w0, #0x2c                  	// #44
   1131c:	bl	eb90 <fputc@plt>
   11320:	ldr	x1, [x23]
   11324:	mov	w0, #0xa                   	// #10
   11328:	bl	eb90 <fputc@plt>
   1132c:	ldr	w8, [x19]
   11330:	cbz	w8, 117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   11334:	mov	w22, wzr
   11338:	ldr	x1, [x23]
   1133c:	mov	w0, #0x20                  	// #32
   11340:	bl	eb90 <fputc@plt>
   11344:	ldr	w8, [x19]
   11348:	add	w22, w22, #0x1
   1134c:	cmp	w22, w8
   11350:	b.ne	11338 <_ZSt13set_terminatePFvvE@@Base+0x2134>  // b.any
   11354:	b	117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   11358:	mov	x0, x22
   1135c:	mov	x1, x19
   11360:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11364:	mov	w8, #0x1                   	// #1
   11368:	strb	w8, [x19, #4]
   1136c:	ldr	x1, [x23]
   11370:	mov	w0, #0x2c                  	// #44
   11374:	bl	eb90 <fputc@plt>
   11378:	ldr	x1, [x23]
   1137c:	mov	w0, #0xa                   	// #10
   11380:	bl	eb90 <fputc@plt>
   11384:	ldr	w8, [x19]
   11388:	cbz	w8, 117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   1138c:	mov	w22, wzr
   11390:	ldr	x1, [x23]
   11394:	mov	w0, #0x20                  	// #32
   11398:	bl	eb90 <fputc@plt>
   1139c:	ldr	w8, [x19]
   113a0:	add	w22, w22, #0x1
   113a4:	cmp	w22, w8
   113a8:	b.ne	11390 <_ZSt13set_terminatePFvvE@@Base+0x218c>  // b.any
   113ac:	b	117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   113b0:	mov	x0, x21
   113b4:	mov	x1, x19
   113b8:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   113bc:	mov	w8, #0x1                   	// #1
   113c0:	mov	x0, x19
   113c4:	mov	w1, w20
   113c8:	strb	w8, [x19, #4]
   113cc:	bl	13280 <__cxa_demangle@@Base+0xa88>
   113d0:	b	127a0 <_ZSt13set_terminatePFvvE@@Base+0x359c>
   113d4:	mov	x0, x22
   113d8:	mov	x1, x19
   113dc:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   113e0:	mov	w8, #0x1                   	// #1
   113e4:	strb	w8, [x19, #4]
   113e8:	ldr	x1, [x23]
   113ec:	mov	w0, #0x2c                  	// #44
   113f0:	bl	eb90 <fputc@plt>
   113f4:	ldr	x1, [x23]
   113f8:	mov	w0, #0xa                   	// #10
   113fc:	bl	eb90 <fputc@plt>
   11400:	ldr	w8, [x19]
   11404:	cbz	w8, 117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   11408:	mov	w22, wzr
   1140c:	ldr	x1, [x23]
   11410:	mov	w0, #0x20                  	// #32
   11414:	bl	eb90 <fputc@plt>
   11418:	ldr	w8, [x19]
   1141c:	add	w22, w22, #0x1
   11420:	cmp	w22, w8
   11424:	b.ne	1140c <_ZSt13set_terminatePFvvE@@Base+0x2208>  // b.any
   11428:	b	117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   1142c:	mov	x0, x22
   11430:	mov	x1, x19
   11434:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11438:	mov	w8, #0x1                   	// #1
   1143c:	strb	w8, [x19, #4]
   11440:	ldr	x1, [x23]
   11444:	mov	w0, #0x2c                  	// #44
   11448:	bl	eb90 <fputc@plt>
   1144c:	ldr	x1, [x23]
   11450:	mov	w0, #0xa                   	// #10
   11454:	bl	eb90 <fputc@plt>
   11458:	ldr	w8, [x19]
   1145c:	cbz	w8, 117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   11460:	mov	w22, wzr
   11464:	ldr	x1, [x23]
   11468:	mov	w0, #0x20                  	// #32
   1146c:	bl	eb90 <fputc@plt>
   11470:	ldr	w8, [x19]
   11474:	add	w22, w22, #0x1
   11478:	cmp	w22, w8
   1147c:	b.ne	11464 <_ZSt13set_terminatePFvvE@@Base+0x2260>  // b.any
   11480:	b	117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   11484:	ldr	w20, [x19]
   11488:	b	12384 <_ZSt13set_terminatePFvvE@@Base+0x3180>
   1148c:	mov	x0, x22
   11490:	mov	x1, x19
   11494:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11498:	mov	w8, #0x1                   	// #1
   1149c:	strb	w8, [x19, #4]
   114a0:	ldr	x1, [x23]
   114a4:	mov	w0, #0x2c                  	// #44
   114a8:	bl	eb90 <fputc@plt>
   114ac:	ldr	x1, [x23]
   114b0:	mov	w0, #0xa                   	// #10
   114b4:	bl	eb90 <fputc@plt>
   114b8:	ldr	w8, [x19]
   114bc:	cbz	w8, 117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   114c0:	mov	w22, wzr
   114c4:	ldr	x1, [x23]
   114c8:	mov	w0, #0x20                  	// #32
   114cc:	bl	eb90 <fputc@plt>
   114d0:	ldr	w8, [x19]
   114d4:	add	w22, w22, #0x1
   114d8:	cmp	w22, w8
   114dc:	b.ne	114c4 <_ZSt13set_terminatePFvvE@@Base+0x22c0>  // b.any
   114e0:	b	117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   114e4:	mov	x0, x21
   114e8:	mov	x1, x19
   114ec:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   114f0:	mov	w8, #0x1                   	// #1
   114f4:	strb	w8, [x19, #4]
   114f8:	ldr	x1, [x22]
   114fc:	mov	w0, #0x2c                  	// #44
   11500:	bl	eb90 <fputc@plt>
   11504:	ldr	x1, [x22]
   11508:	mov	w0, #0xa                   	// #10
   1150c:	bl	eb90 <fputc@plt>
   11510:	ldr	w8, [x19]
   11514:	cbz	w8, 11538 <_ZSt13set_terminatePFvvE@@Base+0x2334>
   11518:	mov	w21, wzr
   1151c:	ldr	x1, [x22]
   11520:	mov	w0, #0x20                  	// #32
   11524:	bl	eb90 <fputc@plt>
   11528:	ldr	w8, [x19]
   1152c:	add	w21, w21, #0x1
   11530:	cmp	w21, w8
   11534:	b.ne	1151c <_ZSt13set_terminatePFvvE@@Base+0x2318>  // b.any
   11538:	strb	wzr, [x19, #4]
   1153c:	cbz	w20, 11f7c <_ZSt13set_terminatePFvvE@@Base+0x2d78>
   11540:	cmp	w20, #0x1
   11544:	b.ne	127a0 <_ZSt13set_terminatePFvvE@@Base+0x359c>  // b.any
   11548:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1154c:	add	x0, x0, #0xec3
   11550:	b	11f84 <_ZSt13set_terminatePFvvE@@Base+0x2d80>
   11554:	mov	x0, x21
   11558:	mov	x1, x19
   1155c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11560:	mov	w8, #0x1                   	// #1
   11564:	strb	w8, [x19, #4]
   11568:	ldr	x1, [x22]
   1156c:	mov	w0, #0x2c                  	// #44
   11570:	bl	eb90 <fputc@plt>
   11574:	ldr	x1, [x22]
   11578:	mov	w0, #0xa                   	// #10
   1157c:	bl	eb90 <fputc@plt>
   11580:	ldr	w8, [x19]
   11584:	cbz	w8, 11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   11588:	mov	w21, wzr
   1158c:	ldr	x1, [x22]
   11590:	mov	w0, #0x20                  	// #32
   11594:	bl	eb90 <fputc@plt>
   11598:	ldr	w8, [x19]
   1159c:	add	w21, w21, #0x1
   115a0:	cmp	w21, w8
   115a4:	b.ne	1158c <_ZSt13set_terminatePFvvE@@Base+0x2388>  // b.any
   115a8:	b	11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   115ac:	mov	x0, x23
   115b0:	mov	x1, x19
   115b4:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   115b8:	mov	w23, #0x1                   	// #1
   115bc:	strb	w23, [x19, #4]
   115c0:	ldr	x1, [x25]
   115c4:	mov	w0, #0x2c                  	// #44
   115c8:	bl	eb90 <fputc@plt>
   115cc:	ldr	x1, [x25]
   115d0:	mov	w0, #0xa                   	// #10
   115d4:	bl	eb90 <fputc@plt>
   115d8:	ldr	w8, [x19]
   115dc:	cbz	w8, 11604 <_ZSt13set_terminatePFvvE@@Base+0x2400>
   115e0:	mov	w24, #0x1                   	// #1
   115e4:	ldr	x1, [x25]
   115e8:	mov	w0, #0x20                  	// #32
   115ec:	bl	eb90 <fputc@plt>
   115f0:	ldr	w8, [x19]
   115f4:	add	w23, w24, #0x1
   115f8:	cmp	w24, w8
   115fc:	mov	w24, w23
   11600:	b.ne	115e4 <_ZSt13set_terminatePFvvE@@Base+0x23e0>  // b.any
   11604:	strb	wzr, [x19, #4]
   11608:	str	w23, [x19]
   1160c:	ldr	x1, [x25]
   11610:	mov	w0, #0x7b                  	// #123
   11614:	bl	eb90 <fputc@plt>
   11618:	cbnz	x26, 117e0 <_ZSt13set_terminatePFvvE@@Base+0x25dc>
   1161c:	ldr	x1, [x25]
   11620:	mov	w0, #0x7d                  	// #125
   11624:	bl	eb90 <fputc@plt>
   11628:	ldr	w8, [x19]
   1162c:	sub	w8, w8, #0x1
   11630:	str	w8, [x19]
   11634:	b	118cc <_ZSt13set_terminatePFvvE@@Base+0x26c8>
   11638:	ldr	w20, [x19]
   1163c:	b	1248c <_ZSt13set_terminatePFvvE@@Base+0x3288>
   11640:	mov	x0, x24
   11644:	mov	x1, x19
   11648:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   1164c:	mov	w8, #0x1                   	// #1
   11650:	strb	w8, [x19, #4]
   11654:	ldr	x1, [x25]
   11658:	mov	w0, #0x2c                  	// #44
   1165c:	bl	eb90 <fputc@plt>
   11660:	ldr	x1, [x25]
   11664:	mov	w0, #0xa                   	// #10
   11668:	bl	eb90 <fputc@plt>
   1166c:	ldr	w8, [x19]
   11670:	cbz	w8, 11694 <_ZSt13set_terminatePFvvE@@Base+0x2490>
   11674:	mov	w24, wzr
   11678:	ldr	x1, [x25]
   1167c:	mov	w0, #0x20                  	// #32
   11680:	bl	eb90 <fputc@plt>
   11684:	ldr	w8, [x19]
   11688:	add	w24, w24, #0x1
   1168c:	cmp	w24, w8
   11690:	b.ne	11678 <_ZSt13set_terminatePFvvE@@Base+0x2474>  // b.any
   11694:	strb	wzr, [x19, #4]
   11698:	cbnz	x23, 11948 <_ZSt13set_terminatePFvvE@@Base+0x2744>
   1169c:	ldr	x3, [x25]
   116a0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   116a4:	add	x0, x0, #0xdcc
   116a8:	mov	w1, #0x6                   	// #6
   116ac:	mov	w2, #0x1                   	// #1
   116b0:	bl	edd0 <fwrite@plt>
   116b4:	b	11954 <_ZSt13set_terminatePFvvE@@Base+0x2750>
   116b8:	mov	x0, x21
   116bc:	mov	x1, x19
   116c0:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   116c4:	mov	w8, #0x1                   	// #1
   116c8:	strb	w8, [x19, #4]
   116cc:	ldr	x1, [x22]
   116d0:	mov	w0, #0x2c                  	// #44
   116d4:	bl	eb90 <fputc@plt>
   116d8:	ldr	x1, [x22]
   116dc:	mov	w0, #0xa                   	// #10
   116e0:	bl	eb90 <fputc@plt>
   116e4:	ldr	w8, [x19]
   116e8:	cbz	w8, 11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   116ec:	mov	w21, wzr
   116f0:	ldr	x1, [x22]
   116f4:	mov	w0, #0x20                  	// #32
   116f8:	bl	eb90 <fputc@plt>
   116fc:	ldr	w8, [x19]
   11700:	add	w21, w21, #0x1
   11704:	cmp	w21, w8
   11708:	b.ne	116f0 <_ZSt13set_terminatePFvvE@@Base+0x24ec>  // b.any
   1170c:	b	11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   11710:	mov	x0, x21
   11714:	mov	x1, x19
   11718:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   1171c:	mov	w8, #0x1                   	// #1
   11720:	strb	w8, [x19, #4]
   11724:	ldr	x1, [x22]
   11728:	mov	w0, #0x2c                  	// #44
   1172c:	bl	eb90 <fputc@plt>
   11730:	ldr	x1, [x22]
   11734:	mov	w0, #0xa                   	// #10
   11738:	bl	eb90 <fputc@plt>
   1173c:	ldr	w8, [x19]
   11740:	cbz	w8, 11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   11744:	mov	w21, wzr
   11748:	ldr	x1, [x22]
   1174c:	mov	w0, #0x20                  	// #32
   11750:	bl	eb90 <fputc@plt>
   11754:	ldr	w8, [x19]
   11758:	add	w21, w21, #0x1
   1175c:	cmp	w21, w8
   11760:	b.ne	11748 <_ZSt13set_terminatePFvvE@@Base+0x2544>  // b.any
   11764:	b	11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   11768:	mov	x0, x22
   1176c:	mov	x1, x19
   11770:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11774:	mov	w8, #0x1                   	// #1
   11778:	strb	w8, [x19, #4]
   1177c:	ldr	x1, [x23]
   11780:	mov	w0, #0x2c                  	// #44
   11784:	bl	eb90 <fputc@plt>
   11788:	ldr	x1, [x23]
   1178c:	mov	w0, #0xa                   	// #10
   11790:	bl	eb90 <fputc@plt>
   11794:	ldr	w8, [x19]
   11798:	cbz	w8, 117bc <_ZSt13set_terminatePFvvE@@Base+0x25b8>
   1179c:	mov	w22, wzr
   117a0:	ldr	x1, [x23]
   117a4:	mov	w0, #0x20                  	// #32
   117a8:	bl	eb90 <fputc@plt>
   117ac:	ldr	w8, [x19]
   117b0:	add	w22, w22, #0x1
   117b4:	cmp	w22, w8
   117b8:	b.ne	117a0 <_ZSt13set_terminatePFvvE@@Base+0x259c>  // b.any
   117bc:	strb	wzr, [x19, #4]
   117c0:	ldr	x0, [x23]
   117c4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   117c8:	sub	w2, w20, w21
   117cc:	add	x1, x1, #0xde0
   117d0:	mov	x3, x21
   117d4:	bl	ef00 <fprintf@plt>
   117d8:	ldr	x1, [x23]
   117dc:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   117e0:	add	x28, x27, x26, lsl #3
   117e4:	mov	w8, #0x1                   	// #1
   117e8:	ldr	x24, [x27]
   117ec:	tbz	w8, #0, 11810 <_ZSt13set_terminatePFvvE@@Base+0x260c>
   117f0:	cbnz	x24, 11874 <_ZSt13set_terminatePFvvE@@Base+0x2670>
   117f4:	ldr	x3, [x25]
   117f8:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   117fc:	mov	w1, #0x6                   	// #6
   11800:	mov	w2, #0x1                   	// #1
   11804:	add	x0, x0, #0xdcc
   11808:	bl	edd0 <fwrite@plt>
   1180c:	b	11898 <_ZSt13set_terminatePFvvE@@Base+0x2694>
   11810:	ldr	x1, [x25]
   11814:	mov	w0, #0x2c                  	// #44
   11818:	bl	eb90 <fputc@plt>
   1181c:	ldr	x1, [x25]
   11820:	mov	w0, #0xa                   	// #10
   11824:	bl	eb90 <fputc@plt>
   11828:	ldr	w8, [x19]
   1182c:	cbz	w8, 11850 <_ZSt13set_terminatePFvvE@@Base+0x264c>
   11830:	mov	w23, wzr
   11834:	ldr	x1, [x25]
   11838:	mov	w0, #0x20                  	// #32
   1183c:	bl	eb90 <fputc@plt>
   11840:	ldr	w8, [x19]
   11844:	add	w23, w23, #0x1
   11848:	cmp	w23, w8
   1184c:	b.ne	11834 <_ZSt13set_terminatePFvvE@@Base+0x2630>  // b.any
   11850:	strb	wzr, [x19, #4]
   11854:	cbnz	x24, 11884 <_ZSt13set_terminatePFvvE@@Base+0x2680>
   11858:	ldr	x3, [x25]
   1185c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11860:	mov	w1, #0x6                   	// #6
   11864:	mov	w2, #0x1                   	// #1
   11868:	add	x0, x0, #0xdcc
   1186c:	bl	edd0 <fwrite@plt>
   11870:	b	11890 <_ZSt13set_terminatePFvvE@@Base+0x268c>
   11874:	mov	x0, x24
   11878:	mov	x1, x19
   1187c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11880:	b	11898 <_ZSt13set_terminatePFvvE@@Base+0x2694>
   11884:	mov	x0, x24
   11888:	mov	x1, x19
   1188c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11890:	mov	w8, #0x1                   	// #1
   11894:	strb	w8, [x19, #4]
   11898:	add	x27, x27, #0x8
   1189c:	cmp	x27, x28
   118a0:	mov	w8, wzr
   118a4:	b.ne	117e8 <_ZSt13set_terminatePFvvE@@Base+0x25e4>  // b.any
   118a8:	ldr	x1, [x25]
   118ac:	mov	w0, #0x7d                  	// #125
   118b0:	bl	eb90 <fputc@plt>
   118b4:	ldr	w8, [x19]
   118b8:	sub	w8, w8, #0x1
   118bc:	str	w8, [x19]
   118c0:	cbz	x26, 118cc <_ZSt13set_terminatePFvvE@@Base+0x26c8>
   118c4:	mov	w8, #0x1                   	// #1
   118c8:	strb	w8, [x19, #4]
   118cc:	mov	x0, x19
   118d0:	mov	w1, w22
   118d4:	bl	13280 <__cxa_demangle@@Base+0xa88>
   118d8:	mov	x0, x19
   118dc:	mov	w1, w21
   118e0:	bl	13530 <__cxa_demangle@@Base+0xd38>
   118e4:	ldr	x1, [x25]
   118e8:	mov	w0, #0x2c                  	// #44
   118ec:	bl	eb90 <fputc@plt>
   118f0:	ldr	x1, [x25]
   118f4:	mov	w0, #0xa                   	// #10
   118f8:	bl	eb90 <fputc@plt>
   118fc:	ldr	w8, [x19]
   11900:	cbz	w8, 11924 <_ZSt13set_terminatePFvvE@@Base+0x2720>
   11904:	mov	w21, wzr
   11908:	ldr	x1, [x25]
   1190c:	mov	w0, #0x20                  	// #32
   11910:	bl	eb90 <fputc@plt>
   11914:	ldr	w8, [x19]
   11918:	add	w21, w21, #0x1
   1191c:	cmp	w21, w8
   11920:	b.ne	11908 <_ZSt13set_terminatePFvvE@@Base+0x2704>  // b.any
   11924:	strb	wzr, [x19, #4]
   11928:	cbnz	x20, 119d4 <_ZSt13set_terminatePFvvE@@Base+0x27d0>
   1192c:	ldr	x3, [x25]
   11930:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11934:	add	x0, x0, #0xdcc
   11938:	mov	w1, #0x6                   	// #6
   1193c:	mov	w2, #0x1                   	// #1
   11940:	bl	edd0 <fwrite@plt>
   11944:	b	119e0 <_ZSt13set_terminatePFvvE@@Base+0x27dc>
   11948:	mov	x0, x23
   1194c:	mov	x1, x19
   11950:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11954:	mov	w23, #0x1                   	// #1
   11958:	strb	w23, [x19, #4]
   1195c:	ldr	x1, [x25]
   11960:	mov	w0, #0x2c                  	// #44
   11964:	bl	eb90 <fputc@plt>
   11968:	ldr	x1, [x25]
   1196c:	mov	w0, #0xa                   	// #10
   11970:	bl	eb90 <fputc@plt>
   11974:	ldr	w8, [x19]
   11978:	cbz	w8, 119a0 <_ZSt13set_terminatePFvvE@@Base+0x279c>
   1197c:	mov	w24, #0x1                   	// #1
   11980:	ldr	x1, [x25]
   11984:	mov	w0, #0x20                  	// #32
   11988:	bl	eb90 <fputc@plt>
   1198c:	ldr	w8, [x19]
   11990:	add	w23, w24, #0x1
   11994:	cmp	w24, w8
   11998:	mov	w24, w23
   1199c:	b.ne	11980 <_ZSt13set_terminatePFvvE@@Base+0x277c>  // b.any
   119a0:	strb	wzr, [x19, #4]
   119a4:	str	w23, [x19]
   119a8:	ldr	x1, [x25]
   119ac:	mov	w0, #0x7b                  	// #123
   119b0:	bl	eb90 <fputc@plt>
   119b4:	cbnz	x26, 119f0 <_ZSt13set_terminatePFvvE@@Base+0x27ec>
   119b8:	ldr	x1, [x25]
   119bc:	mov	w0, #0x7d                  	// #125
   119c0:	bl	eb90 <fputc@plt>
   119c4:	ldr	w8, [x19]
   119c8:	sub	w8, w8, #0x1
   119cc:	str	w8, [x19]
   119d0:	b	11adc <_ZSt13set_terminatePFvvE@@Base+0x28d8>
   119d4:	mov	x0, x20
   119d8:	mov	x1, x19
   119dc:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   119e0:	mov	w8, #0x1                   	// #1
   119e4:	strb	w8, [x19, #4]
   119e8:	ldr	x1, [x25]
   119ec:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   119f0:	add	x28, x27, x26, lsl #3
   119f4:	mov	w8, #0x1                   	// #1
   119f8:	ldr	x24, [x27]
   119fc:	tbz	w8, #0, 11a20 <_ZSt13set_terminatePFvvE@@Base+0x281c>
   11a00:	cbnz	x24, 11a84 <_ZSt13set_terminatePFvvE@@Base+0x2880>
   11a04:	ldr	x3, [x25]
   11a08:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11a0c:	mov	w1, #0x6                   	// #6
   11a10:	mov	w2, #0x1                   	// #1
   11a14:	add	x0, x0, #0xdcc
   11a18:	bl	edd0 <fwrite@plt>
   11a1c:	b	11aa8 <_ZSt13set_terminatePFvvE@@Base+0x28a4>
   11a20:	ldr	x1, [x25]
   11a24:	mov	w0, #0x2c                  	// #44
   11a28:	bl	eb90 <fputc@plt>
   11a2c:	ldr	x1, [x25]
   11a30:	mov	w0, #0xa                   	// #10
   11a34:	bl	eb90 <fputc@plt>
   11a38:	ldr	w8, [x19]
   11a3c:	cbz	w8, 11a60 <_ZSt13set_terminatePFvvE@@Base+0x285c>
   11a40:	mov	w23, wzr
   11a44:	ldr	x1, [x25]
   11a48:	mov	w0, #0x20                  	// #32
   11a4c:	bl	eb90 <fputc@plt>
   11a50:	ldr	w8, [x19]
   11a54:	add	w23, w23, #0x1
   11a58:	cmp	w23, w8
   11a5c:	b.ne	11a44 <_ZSt13set_terminatePFvvE@@Base+0x2840>  // b.any
   11a60:	strb	wzr, [x19, #4]
   11a64:	cbnz	x24, 11a94 <_ZSt13set_terminatePFvvE@@Base+0x2890>
   11a68:	ldr	x3, [x25]
   11a6c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11a70:	mov	w1, #0x6                   	// #6
   11a74:	mov	w2, #0x1                   	// #1
   11a78:	add	x0, x0, #0xdcc
   11a7c:	bl	edd0 <fwrite@plt>
   11a80:	b	11aa0 <_ZSt13set_terminatePFvvE@@Base+0x289c>
   11a84:	mov	x0, x24
   11a88:	mov	x1, x19
   11a8c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11a90:	b	11aa8 <_ZSt13set_terminatePFvvE@@Base+0x28a4>
   11a94:	mov	x0, x24
   11a98:	mov	x1, x19
   11a9c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11aa0:	mov	w8, #0x1                   	// #1
   11aa4:	strb	w8, [x19, #4]
   11aa8:	add	x27, x27, #0x8
   11aac:	cmp	x27, x28
   11ab0:	mov	w8, wzr
   11ab4:	b.ne	119f8 <_ZSt13set_terminatePFvvE@@Base+0x27f4>  // b.any
   11ab8:	ldr	x1, [x25]
   11abc:	mov	w0, #0x7d                  	// #125
   11ac0:	bl	eb90 <fputc@plt>
   11ac4:	ldr	w8, [x19]
   11ac8:	sub	w8, w8, #0x1
   11acc:	str	w8, [x19]
   11ad0:	cbz	x26, 11adc <_ZSt13set_terminatePFvvE@@Base+0x28d8>
   11ad4:	mov	w8, #0x1                   	// #1
   11ad8:	strb	w8, [x19, #4]
   11adc:	ldr	x1, [x25]
   11ae0:	mov	w0, #0x2c                  	// #44
   11ae4:	bl	eb90 <fputc@plt>
   11ae8:	ldr	x1, [x25]
   11aec:	mov	w0, #0xa                   	// #10
   11af0:	bl	eb90 <fputc@plt>
   11af4:	ldr	w8, [x19]
   11af8:	cbz	w8, 11b1c <_ZSt13set_terminatePFvvE@@Base+0x2918>
   11afc:	mov	w23, wzr
   11b00:	ldr	x1, [x25]
   11b04:	mov	w0, #0x20                  	// #32
   11b08:	bl	eb90 <fputc@plt>
   11b0c:	ldr	w8, [x19]
   11b10:	add	w23, w23, #0x1
   11b14:	cmp	w23, w8
   11b18:	b.ne	11b00 <_ZSt13set_terminatePFvvE@@Base+0x28fc>  // b.any
   11b1c:	strb	wzr, [x19, #4]
   11b20:	cbnz	x22, 11b40 <_ZSt13set_terminatePFvvE@@Base+0x293c>
   11b24:	ldr	x3, [x25]
   11b28:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11b2c:	add	x0, x0, #0xdcc
   11b30:	mov	w1, #0x6                   	// #6
   11b34:	mov	w2, #0x1                   	// #1
   11b38:	bl	edd0 <fwrite@plt>
   11b3c:	b	11b4c <_ZSt13set_terminatePFvvE@@Base+0x2948>
   11b40:	mov	x0, x22
   11b44:	mov	x1, x19
   11b48:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11b4c:	mov	w8, #0x1                   	// #1
   11b50:	mov	x0, x19
   11b54:	mov	w1, w21
   11b58:	strb	w8, [x19, #4]
   11b5c:	bl	13280 <__cxa_demangle@@Base+0xa88>
   11b60:	mov	x0, x19
   11b64:	mov	w1, w20
   11b68:	bl	13530 <__cxa_demangle@@Base+0xd38>
   11b6c:	ldr	x1, [x25]
   11b70:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   11b74:	mov	x0, x21
   11b78:	mov	x1, x19
   11b7c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11b80:	mov	w8, #0x1                   	// #1
   11b84:	strb	w8, [x19, #4]
   11b88:	ldr	x1, [x22]
   11b8c:	mov	w0, #0x2c                  	// #44
   11b90:	bl	eb90 <fputc@plt>
   11b94:	ldr	x1, [x22]
   11b98:	mov	w0, #0xa                   	// #10
   11b9c:	bl	eb90 <fputc@plt>
   11ba0:	ldr	w8, [x19]
   11ba4:	cbz	w8, 11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   11ba8:	mov	w21, wzr
   11bac:	ldr	x1, [x22]
   11bb0:	mov	w0, #0x20                  	// #32
   11bb4:	bl	eb90 <fputc@plt>
   11bb8:	ldr	w8, [x19]
   11bbc:	add	w21, w21, #0x1
   11bc0:	cmp	w21, w8
   11bc4:	b.ne	11bac <_ZSt13set_terminatePFvvE@@Base+0x29a8>  // b.any
   11bc8:	b	11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   11bcc:	mov	x0, x21
   11bd0:	mov	x1, x19
   11bd4:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11bd8:	mov	w8, #0x1                   	// #1
   11bdc:	strb	w8, [x19, #4]
   11be0:	ldr	x1, [x22]
   11be4:	mov	w0, #0x2c                  	// #44
   11be8:	bl	eb90 <fputc@plt>
   11bec:	ldr	x1, [x22]
   11bf0:	mov	w0, #0xa                   	// #10
   11bf4:	bl	eb90 <fputc@plt>
   11bf8:	ldr	w8, [x19]
   11bfc:	cbz	w8, 11c20 <_ZSt13set_terminatePFvvE@@Base+0x2a1c>
   11c00:	mov	w21, wzr
   11c04:	ldr	x1, [x22]
   11c08:	mov	w0, #0x20                  	// #32
   11c0c:	bl	eb90 <fputc@plt>
   11c10:	ldr	w8, [x19]
   11c14:	add	w21, w21, #0x1
   11c18:	cmp	w21, w8
   11c1c:	b.ne	11c04 <_ZSt13set_terminatePFvvE@@Base+0x2a00>  // b.any
   11c20:	strb	wzr, [x19, #4]
   11c24:	cbnz	x20, 11c44 <_ZSt13set_terminatePFvvE@@Base+0x2a40>
   11c28:	ldr	x3, [x22]
   11c2c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11c30:	add	x0, x0, #0xdcc
   11c34:	mov	w1, #0x6                   	// #6
   11c38:	mov	w2, #0x1                   	// #1
   11c3c:	bl	edd0 <fwrite@plt>
   11c40:	b	12798 <_ZSt13set_terminatePFvvE@@Base+0x3594>
   11c44:	mov	x0, x20
   11c48:	mov	x1, x19
   11c4c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11c50:	b	12798 <_ZSt13set_terminatePFvvE@@Base+0x3594>
   11c54:	ldr	w20, [x19]
   11c58:	b	12594 <_ZSt13set_terminatePFvvE@@Base+0x3390>
   11c5c:	ldr	w20, [x19]
   11c60:	b	1269c <_ZSt13set_terminatePFvvE@@Base+0x3498>
   11c64:	mov	x0, x21
   11c68:	mov	x1, x19
   11c6c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11c70:	mov	w20, #0x1                   	// #1
   11c74:	strb	w20, [x19, #4]
   11c78:	ldr	x1, [x22]
   11c7c:	mov	w0, #0x2c                  	// #44
   11c80:	bl	eb90 <fputc@plt>
   11c84:	ldr	x1, [x22]
   11c88:	mov	w0, #0xa                   	// #10
   11c8c:	bl	eb90 <fputc@plt>
   11c90:	ldr	w8, [x19]
   11c94:	cbz	w8, 11cbc <_ZSt13set_terminatePFvvE@@Base+0x2ab8>
   11c98:	mov	w21, #0x1                   	// #1
   11c9c:	ldr	x1, [x22]
   11ca0:	mov	w0, #0x20                  	// #32
   11ca4:	bl	eb90 <fputc@plt>
   11ca8:	ldr	w8, [x19]
   11cac:	add	w20, w21, #0x1
   11cb0:	cmp	w21, w8
   11cb4:	mov	w21, w20
   11cb8:	b.ne	11c9c <_ZSt13set_terminatePFvvE@@Base+0x2a98>  // b.any
   11cbc:	strb	wzr, [x19, #4]
   11cc0:	str	w20, [x19]
   11cc4:	ldr	x1, [x22]
   11cc8:	mov	w0, #0x7b                  	// #123
   11ccc:	bl	eb90 <fputc@plt>
   11cd0:	cbnz	x23, 11cf0 <_ZSt13set_terminatePFvvE@@Base+0x2aec>
   11cd4:	ldr	x1, [x22]
   11cd8:	mov	w0, #0x7d                  	// #125
   11cdc:	bl	eb90 <fputc@plt>
   11ce0:	ldr	w8, [x19]
   11ce4:	sub	w8, w8, #0x1
   11ce8:	str	w8, [x19]
   11cec:	b	127a0 <_ZSt13set_terminatePFvvE@@Base+0x359c>
   11cf0:	adrp	x20, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11cf4:	add	x25, x24, x23, lsl #3
   11cf8:	mov	w26, #0x1                   	// #1
   11cfc:	add	x20, x20, #0xdcc
   11d00:	mov	w8, #0x1                   	// #1
   11d04:	ldr	x21, [x24]
   11d08:	tbz	w8, #0, 11d28 <_ZSt13set_terminatePFvvE@@Base+0x2b24>
   11d0c:	cbnz	x21, 11d88 <_ZSt13set_terminatePFvvE@@Base+0x2b84>
   11d10:	ldr	x3, [x22]
   11d14:	mov	w1, #0x6                   	// #6
   11d18:	mov	w2, #0x1                   	// #1
   11d1c:	mov	x0, x20
   11d20:	bl	edd0 <fwrite@plt>
   11d24:	b	11da8 <_ZSt13set_terminatePFvvE@@Base+0x2ba4>
   11d28:	ldr	x1, [x22]
   11d2c:	mov	w0, #0x2c                  	// #44
   11d30:	bl	eb90 <fputc@plt>
   11d34:	ldr	x1, [x22]
   11d38:	mov	w0, #0xa                   	// #10
   11d3c:	bl	eb90 <fputc@plt>
   11d40:	ldr	w8, [x19]
   11d44:	cbz	w8, 11d68 <_ZSt13set_terminatePFvvE@@Base+0x2b64>
   11d48:	mov	w27, wzr
   11d4c:	ldr	x1, [x22]
   11d50:	mov	w0, #0x20                  	// #32
   11d54:	bl	eb90 <fputc@plt>
   11d58:	ldr	w8, [x19]
   11d5c:	add	w27, w27, #0x1
   11d60:	cmp	w27, w8
   11d64:	b.ne	11d4c <_ZSt13set_terminatePFvvE@@Base+0x2b48>  // b.any
   11d68:	strb	wzr, [x19, #4]
   11d6c:	cbnz	x21, 11d98 <_ZSt13set_terminatePFvvE@@Base+0x2b94>
   11d70:	ldr	x3, [x22]
   11d74:	mov	w1, #0x6                   	// #6
   11d78:	mov	w2, #0x1                   	// #1
   11d7c:	mov	x0, x20
   11d80:	bl	edd0 <fwrite@plt>
   11d84:	b	11da4 <_ZSt13set_terminatePFvvE@@Base+0x2ba0>
   11d88:	mov	x0, x21
   11d8c:	mov	x1, x19
   11d90:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11d94:	b	11da8 <_ZSt13set_terminatePFvvE@@Base+0x2ba4>
   11d98:	mov	x0, x21
   11d9c:	mov	x1, x19
   11da0:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11da4:	strb	w26, [x19, #4]
   11da8:	add	x24, x24, #0x8
   11dac:	cmp	x24, x25
   11db0:	mov	w8, wzr
   11db4:	b.eq	1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>  // b.none
   11db8:	b	11d04 <_ZSt13set_terminatePFvvE@@Base+0x2b00>
   11dbc:	mov	x0, x22
   11dc0:	mov	x1, x19
   11dc4:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11dc8:	mov	w8, #0x1                   	// #1
   11dcc:	strb	w8, [x19, #4]
   11dd0:	ldr	x1, [x23]
   11dd4:	mov	w0, #0x2c                  	// #44
   11dd8:	bl	eb90 <fputc@plt>
   11ddc:	ldr	x1, [x23]
   11de0:	mov	w0, #0xa                   	// #10
   11de4:	bl	eb90 <fputc@plt>
   11de8:	ldr	w8, [x19]
   11dec:	cbz	w8, 11e10 <_ZSt13set_terminatePFvvE@@Base+0x2c0c>
   11df0:	mov	w22, wzr
   11df4:	ldr	x1, [x23]
   11df8:	mov	w0, #0x20                  	// #32
   11dfc:	bl	eb90 <fputc@plt>
   11e00:	ldr	w8, [x19]
   11e04:	add	w22, w22, #0x1
   11e08:	cmp	w22, w8
   11e0c:	b.ne	11df4 <_ZSt13set_terminatePFvvE@@Base+0x2bf0>  // b.any
   11e10:	strb	wzr, [x19, #4]
   11e14:	ldr	x0, [x23]
   11e18:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11e1c:	sub	w2, w24, w21
   11e20:	add	x1, x1, #0xde0
   11e24:	mov	x3, x21
   11e28:	bl	ef00 <fprintf@plt>
   11e2c:	ldr	x1, [x23]
   11e30:	mov	w0, #0x2c                  	// #44
   11e34:	bl	eb90 <fputc@plt>
   11e38:	ldr	x1, [x23]
   11e3c:	mov	w0, #0xa                   	// #10
   11e40:	bl	eb90 <fputc@plt>
   11e44:	ldr	w8, [x19]
   11e48:	cbz	w8, 11f3c <_ZSt13set_terminatePFvvE@@Base+0x2d38>
   11e4c:	mov	w21, wzr
   11e50:	ldr	x1, [x23]
   11e54:	mov	w0, #0x20                  	// #32
   11e58:	bl	eb90 <fputc@plt>
   11e5c:	ldr	w8, [x19]
   11e60:	add	w21, w21, #0x1
   11e64:	cmp	w21, w8
   11e68:	b.ne	11e50 <_ZSt13set_terminatePFvvE@@Base+0x2c4c>  // b.any
   11e6c:	b	11f3c <_ZSt13set_terminatePFvvE@@Base+0x2d38>
   11e70:	mov	x0, x22
   11e74:	mov	x1, x19
   11e78:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11e7c:	mov	w8, #0x1                   	// #1
   11e80:	strb	w8, [x19, #4]
   11e84:	ldr	x1, [x23]
   11e88:	mov	w0, #0x2c                  	// #44
   11e8c:	bl	eb90 <fputc@plt>
   11e90:	ldr	x1, [x23]
   11e94:	mov	w0, #0xa                   	// #10
   11e98:	bl	eb90 <fputc@plt>
   11e9c:	ldr	w8, [x19]
   11ea0:	cbz	w8, 11ec4 <_ZSt13set_terminatePFvvE@@Base+0x2cc0>
   11ea4:	mov	w22, wzr
   11ea8:	ldr	x1, [x23]
   11eac:	mov	w0, #0x20                  	// #32
   11eb0:	bl	eb90 <fputc@plt>
   11eb4:	ldr	w8, [x19]
   11eb8:	add	w22, w22, #0x1
   11ebc:	cmp	w22, w8
   11ec0:	b.ne	11ea8 <_ZSt13set_terminatePFvvE@@Base+0x2ca4>  // b.any
   11ec4:	strb	wzr, [x19, #4]
   11ec8:	cbnz	x21, 11ee8 <_ZSt13set_terminatePFvvE@@Base+0x2ce4>
   11ecc:	ldr	x3, [x23]
   11ed0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11ed4:	add	x0, x0, #0xdcc
   11ed8:	mov	w1, #0x6                   	// #6
   11edc:	mov	w2, #0x1                   	// #1
   11ee0:	bl	edd0 <fwrite@plt>
   11ee4:	b	11ef4 <_ZSt13set_terminatePFvvE@@Base+0x2cf0>
   11ee8:	mov	x0, x21
   11eec:	mov	x1, x19
   11ef0:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11ef4:	mov	w8, #0x1                   	// #1
   11ef8:	strb	w8, [x19, #4]
   11efc:	ldr	x1, [x23]
   11f00:	mov	w0, #0x2c                  	// #44
   11f04:	bl	eb90 <fputc@plt>
   11f08:	ldr	x1, [x23]
   11f0c:	mov	w0, #0xa                   	// #10
   11f10:	bl	eb90 <fputc@plt>
   11f14:	ldr	w8, [x19]
   11f18:	cbz	w8, 11f3c <_ZSt13set_terminatePFvvE@@Base+0x2d38>
   11f1c:	mov	w21, wzr
   11f20:	ldr	x1, [x23]
   11f24:	mov	w0, #0x20                  	// #32
   11f28:	bl	eb90 <fputc@plt>
   11f2c:	ldr	w8, [x19]
   11f30:	add	w21, w21, #0x1
   11f34:	cmp	w21, w8
   11f38:	b.ne	11f20 <_ZSt13set_terminatePFvvE@@Base+0x2d1c>  // b.any
   11f3c:	strb	wzr, [x19, #4]
   11f40:	cbnz	x20, 11f60 <_ZSt13set_terminatePFvvE@@Base+0x2d5c>
   11f44:	ldr	x3, [x23]
   11f48:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11f4c:	add	x0, x0, #0xdcc
   11f50:	mov	w1, #0x6                   	// #6
   11f54:	mov	w2, #0x1                   	// #1
   11f58:	bl	edd0 <fwrite@plt>
   11f5c:	b	11f6c <_ZSt13set_terminatePFvvE@@Base+0x2d68>
   11f60:	mov	x0, x20
   11f64:	mov	x1, x19
   11f68:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   11f6c:	mov	w8, #0x1                   	// #1
   11f70:	strb	w8, [x19, #4]
   11f74:	ldr	x1, [x23]
   11f78:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   11f7c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11f80:	add	x0, x0, #0xead
   11f84:	ldr	x3, [x22]
   11f88:	mov	w1, #0x15                  	// #21
   11f8c:	mov	w2, #0x1                   	// #1
   11f90:	bl	edd0 <fwrite@plt>
   11f94:	b	127a0 <_ZSt13set_terminatePFvvE@@Base+0x359c>
   11f98:	mov	w20, wzr
   11f9c:	ldr	x1, [x22]
   11fa0:	mov	w0, #0x20                  	// #32
   11fa4:	bl	eb90 <fputc@plt>
   11fa8:	ldr	w8, [x19]
   11fac:	add	w20, w20, #0x1
   11fb0:	cmp	w20, w8
   11fb4:	b.ne	11f9c <_ZSt13set_terminatePFvvE@@Base+0x2d98>  // b.any
   11fb8:	strb	wzr, [x19, #4]
   11fbc:	add	w8, w20, #0x1
   11fc0:	str	w8, [x19]
   11fc4:	ldr	x1, [x22]
   11fc8:	mov	w0, #0x7b                  	// #123
   11fcc:	bl	eb90 <fputc@plt>
   11fd0:	cbz	x23, 1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>
   11fd4:	adrp	x20, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   11fd8:	add	x25, x24, x23, lsl #3
   11fdc:	mov	w26, #0x1                   	// #1
   11fe0:	add	x20, x20, #0xdcc
   11fe4:	mov	w8, #0x1                   	// #1
   11fe8:	ldr	x21, [x24]
   11fec:	tbz	w8, #0, 1200c <_ZSt13set_terminatePFvvE@@Base+0x2e08>
   11ff0:	cbnz	x21, 1206c <_ZSt13set_terminatePFvvE@@Base+0x2e68>
   11ff4:	ldr	x3, [x22]
   11ff8:	mov	w1, #0x6                   	// #6
   11ffc:	mov	w2, #0x1                   	// #1
   12000:	mov	x0, x20
   12004:	bl	edd0 <fwrite@plt>
   12008:	b	1208c <_ZSt13set_terminatePFvvE@@Base+0x2e88>
   1200c:	ldr	x1, [x22]
   12010:	mov	w0, #0x2c                  	// #44
   12014:	bl	eb90 <fputc@plt>
   12018:	ldr	x1, [x22]
   1201c:	mov	w0, #0xa                   	// #10
   12020:	bl	eb90 <fputc@plt>
   12024:	ldr	w8, [x19]
   12028:	cbz	w8, 1204c <_ZSt13set_terminatePFvvE@@Base+0x2e48>
   1202c:	mov	w27, wzr
   12030:	ldr	x1, [x22]
   12034:	mov	w0, #0x20                  	// #32
   12038:	bl	eb90 <fputc@plt>
   1203c:	ldr	w8, [x19]
   12040:	add	w27, w27, #0x1
   12044:	cmp	w27, w8
   12048:	b.ne	12030 <_ZSt13set_terminatePFvvE@@Base+0x2e2c>  // b.any
   1204c:	strb	wzr, [x19, #4]
   12050:	cbnz	x21, 1207c <_ZSt13set_terminatePFvvE@@Base+0x2e78>
   12054:	ldr	x3, [x22]
   12058:	mov	w1, #0x6                   	// #6
   1205c:	mov	w2, #0x1                   	// #1
   12060:	mov	x0, x20
   12064:	bl	edd0 <fwrite@plt>
   12068:	b	12088 <_ZSt13set_terminatePFvvE@@Base+0x2e84>
   1206c:	mov	x0, x21
   12070:	mov	x1, x19
   12074:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12078:	b	1208c <_ZSt13set_terminatePFvvE@@Base+0x2e88>
   1207c:	mov	x0, x21
   12080:	mov	x1, x19
   12084:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12088:	strb	w26, [x19, #4]
   1208c:	add	x24, x24, #0x8
   12090:	cmp	x24, x25
   12094:	mov	w8, wzr
   12098:	b.eq	1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>  // b.none
   1209c:	b	11fe8 <_ZSt13set_terminatePFvvE@@Base+0x2de4>
   120a0:	mov	w20, wzr
   120a4:	ldr	x1, [x22]
   120a8:	mov	w0, #0x20                  	// #32
   120ac:	bl	eb90 <fputc@plt>
   120b0:	ldr	w8, [x19]
   120b4:	add	w20, w20, #0x1
   120b8:	cmp	w20, w8
   120bc:	b.ne	120a4 <_ZSt13set_terminatePFvvE@@Base+0x2ea0>  // b.any
   120c0:	strb	wzr, [x19, #4]
   120c4:	add	w8, w20, #0x1
   120c8:	str	w8, [x19]
   120cc:	ldr	x1, [x22]
   120d0:	mov	w0, #0x7b                  	// #123
   120d4:	bl	eb90 <fputc@plt>
   120d8:	cbz	x23, 1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>
   120dc:	adrp	x20, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   120e0:	add	x25, x24, x23, lsl #3
   120e4:	mov	w26, #0x1                   	// #1
   120e8:	add	x20, x20, #0xdcc
   120ec:	mov	w8, #0x1                   	// #1
   120f0:	ldr	x21, [x24]
   120f4:	tbz	w8, #0, 12114 <_ZSt13set_terminatePFvvE@@Base+0x2f10>
   120f8:	cbnz	x21, 12174 <_ZSt13set_terminatePFvvE@@Base+0x2f70>
   120fc:	ldr	x3, [x22]
   12100:	mov	w1, #0x6                   	// #6
   12104:	mov	w2, #0x1                   	// #1
   12108:	mov	x0, x20
   1210c:	bl	edd0 <fwrite@plt>
   12110:	b	12194 <_ZSt13set_terminatePFvvE@@Base+0x2f90>
   12114:	ldr	x1, [x22]
   12118:	mov	w0, #0x2c                  	// #44
   1211c:	bl	eb90 <fputc@plt>
   12120:	ldr	x1, [x22]
   12124:	mov	w0, #0xa                   	// #10
   12128:	bl	eb90 <fputc@plt>
   1212c:	ldr	w8, [x19]
   12130:	cbz	w8, 12154 <_ZSt13set_terminatePFvvE@@Base+0x2f50>
   12134:	mov	w27, wzr
   12138:	ldr	x1, [x22]
   1213c:	mov	w0, #0x20                  	// #32
   12140:	bl	eb90 <fputc@plt>
   12144:	ldr	w8, [x19]
   12148:	add	w27, w27, #0x1
   1214c:	cmp	w27, w8
   12150:	b.ne	12138 <_ZSt13set_terminatePFvvE@@Base+0x2f34>  // b.any
   12154:	strb	wzr, [x19, #4]
   12158:	cbnz	x21, 12184 <_ZSt13set_terminatePFvvE@@Base+0x2f80>
   1215c:	ldr	x3, [x22]
   12160:	mov	w1, #0x6                   	// #6
   12164:	mov	w2, #0x1                   	// #1
   12168:	mov	x0, x20
   1216c:	bl	edd0 <fwrite@plt>
   12170:	b	12190 <_ZSt13set_terminatePFvvE@@Base+0x2f8c>
   12174:	mov	x0, x21
   12178:	mov	x1, x19
   1217c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12180:	b	12194 <_ZSt13set_terminatePFvvE@@Base+0x2f90>
   12184:	mov	x0, x21
   12188:	mov	x1, x19
   1218c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12190:	strb	w26, [x19, #4]
   12194:	add	x24, x24, #0x8
   12198:	cmp	x24, x25
   1219c:	mov	w8, wzr
   121a0:	b.ne	120f0 <_ZSt13set_terminatePFvvE@@Base+0x2eec>  // b.any
   121a4:	b	1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>
   121a8:	ldr	x3, [x21]
   121ac:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   121b0:	add	x0, x0, #0x2e
   121b4:	mov	w1, #0x1b                  	// #27
   121b8:	b	121cc <_ZSt13set_terminatePFvvE@@Base+0x2fc8>
   121bc:	ldr	x3, [x21]
   121c0:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   121c4:	add	x0, x0, #0x13
   121c8:	mov	w1, #0x1a                  	// #26
   121cc:	mov	w2, #0x1                   	// #1
   121d0:	bl	edd0 <fwrite@plt>
   121d4:	ldrb	w8, [x19, #4]
   121d8:	ldr	x3, [x21]
   121dc:	cbnz	w8, 121f8 <_ZSt13set_terminatePFvvE@@Base+0x2ff4>
   121e0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   121e4:	add	x0, x0, #0xdd3
   121e8:	mov	w1, #0x2                   	// #2
   121ec:	mov	w2, #0x1                   	// #1
   121f0:	bl	edd0 <fwrite@plt>
   121f4:	b	1223c <_ZSt13set_terminatePFvvE@@Base+0x3038>
   121f8:	mov	w0, #0x2c                  	// #44
   121fc:	mov	x1, x3
   12200:	bl	eb90 <fputc@plt>
   12204:	ldr	x1, [x21]
   12208:	mov	w0, #0xa                   	// #10
   1220c:	bl	eb90 <fputc@plt>
   12210:	ldr	w8, [x19]
   12214:	cbz	w8, 12238 <_ZSt13set_terminatePFvvE@@Base+0x3034>
   12218:	mov	w22, wzr
   1221c:	ldr	x1, [x21]
   12220:	mov	w0, #0x20                  	// #32
   12224:	bl	eb90 <fputc@plt>
   12228:	ldr	w8, [x19]
   1222c:	add	w22, w22, #0x1
   12230:	cmp	w22, w8
   12234:	b.ne	1221c <_ZSt13set_terminatePFvvE@@Base+0x3018>  // b.any
   12238:	strb	wzr, [x19, #4]
   1223c:	ldr	x0, [x21]
   12240:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   12244:	add	x1, x1, #0x4a
   12248:	mov	x2, x20
   1224c:	bl	ef00 <fprintf@plt>
   12250:	ldr	x1, [x21]
   12254:	b	127a4 <_ZSt13set_terminatePFvvE@@Base+0x35a0>
   12258:	mov	w20, wzr
   1225c:	ldr	x1, [x22]
   12260:	mov	w0, #0x20                  	// #32
   12264:	bl	eb90 <fputc@plt>
   12268:	ldr	w8, [x19]
   1226c:	add	w20, w20, #0x1
   12270:	cmp	w20, w8
   12274:	b.ne	1225c <_ZSt13set_terminatePFvvE@@Base+0x3058>  // b.any
   12278:	strb	wzr, [x19, #4]
   1227c:	add	w8, w20, #0x1
   12280:	str	w8, [x19]
   12284:	ldr	x1, [x22]
   12288:	mov	w0, #0x7b                  	// #123
   1228c:	bl	eb90 <fputc@plt>
   12290:	cbz	x23, 1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>
   12294:	adrp	x20, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   12298:	add	x25, x24, x23, lsl #3
   1229c:	mov	w26, #0x1                   	// #1
   122a0:	add	x20, x20, #0xdcc
   122a4:	mov	w8, #0x1                   	// #1
   122a8:	ldr	x21, [x24]
   122ac:	tbz	w8, #0, 122cc <_ZSt13set_terminatePFvvE@@Base+0x30c8>
   122b0:	cbnz	x21, 1232c <_ZSt13set_terminatePFvvE@@Base+0x3128>
   122b4:	ldr	x3, [x22]
   122b8:	mov	w1, #0x6                   	// #6
   122bc:	mov	w2, #0x1                   	// #1
   122c0:	mov	x0, x20
   122c4:	bl	edd0 <fwrite@plt>
   122c8:	b	1234c <_ZSt13set_terminatePFvvE@@Base+0x3148>
   122cc:	ldr	x1, [x22]
   122d0:	mov	w0, #0x2c                  	// #44
   122d4:	bl	eb90 <fputc@plt>
   122d8:	ldr	x1, [x22]
   122dc:	mov	w0, #0xa                   	// #10
   122e0:	bl	eb90 <fputc@plt>
   122e4:	ldr	w8, [x19]
   122e8:	cbz	w8, 1230c <_ZSt13set_terminatePFvvE@@Base+0x3108>
   122ec:	mov	w27, wzr
   122f0:	ldr	x1, [x22]
   122f4:	mov	w0, #0x20                  	// #32
   122f8:	bl	eb90 <fputc@plt>
   122fc:	ldr	w8, [x19]
   12300:	add	w27, w27, #0x1
   12304:	cmp	w27, w8
   12308:	b.ne	122f0 <_ZSt13set_terminatePFvvE@@Base+0x30ec>  // b.any
   1230c:	strb	wzr, [x19, #4]
   12310:	cbnz	x21, 1233c <_ZSt13set_terminatePFvvE@@Base+0x3138>
   12314:	ldr	x3, [x22]
   12318:	mov	w1, #0x6                   	// #6
   1231c:	mov	w2, #0x1                   	// #1
   12320:	mov	x0, x20
   12324:	bl	edd0 <fwrite@plt>
   12328:	b	12348 <_ZSt13set_terminatePFvvE@@Base+0x3144>
   1232c:	mov	x0, x21
   12330:	mov	x1, x19
   12334:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12338:	b	1234c <_ZSt13set_terminatePFvvE@@Base+0x3148>
   1233c:	mov	x0, x21
   12340:	mov	x1, x19
   12344:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12348:	strb	w26, [x19, #4]
   1234c:	add	x24, x24, #0x8
   12350:	cmp	x24, x25
   12354:	mov	w8, wzr
   12358:	b.eq	1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>  // b.none
   1235c:	b	122a8 <_ZSt13set_terminatePFvvE@@Base+0x30a4>
   12360:	mov	w20, wzr
   12364:	ldr	x1, [x22]
   12368:	mov	w0, #0x20                  	// #32
   1236c:	bl	eb90 <fputc@plt>
   12370:	ldr	w8, [x19]
   12374:	add	w20, w20, #0x1
   12378:	cmp	w20, w8
   1237c:	b.ne	12364 <_ZSt13set_terminatePFvvE@@Base+0x3160>  // b.any
   12380:	strb	wzr, [x19, #4]
   12384:	add	w8, w20, #0x1
   12388:	str	w8, [x19]
   1238c:	ldr	x1, [x22]
   12390:	mov	w0, #0x7b                  	// #123
   12394:	bl	eb90 <fputc@plt>
   12398:	cbz	x23, 1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>
   1239c:	adrp	x20, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   123a0:	add	x25, x24, x23, lsl #3
   123a4:	mov	w26, #0x1                   	// #1
   123a8:	add	x20, x20, #0xdcc
   123ac:	mov	w8, #0x1                   	// #1
   123b0:	ldr	x21, [x24]
   123b4:	tbz	w8, #0, 123d4 <_ZSt13set_terminatePFvvE@@Base+0x31d0>
   123b8:	cbnz	x21, 12434 <_ZSt13set_terminatePFvvE@@Base+0x3230>
   123bc:	ldr	x3, [x22]
   123c0:	mov	w1, #0x6                   	// #6
   123c4:	mov	w2, #0x1                   	// #1
   123c8:	mov	x0, x20
   123cc:	bl	edd0 <fwrite@plt>
   123d0:	b	12454 <_ZSt13set_terminatePFvvE@@Base+0x3250>
   123d4:	ldr	x1, [x22]
   123d8:	mov	w0, #0x2c                  	// #44
   123dc:	bl	eb90 <fputc@plt>
   123e0:	ldr	x1, [x22]
   123e4:	mov	w0, #0xa                   	// #10
   123e8:	bl	eb90 <fputc@plt>
   123ec:	ldr	w8, [x19]
   123f0:	cbz	w8, 12414 <_ZSt13set_terminatePFvvE@@Base+0x3210>
   123f4:	mov	w27, wzr
   123f8:	ldr	x1, [x22]
   123fc:	mov	w0, #0x20                  	// #32
   12400:	bl	eb90 <fputc@plt>
   12404:	ldr	w8, [x19]
   12408:	add	w27, w27, #0x1
   1240c:	cmp	w27, w8
   12410:	b.ne	123f8 <_ZSt13set_terminatePFvvE@@Base+0x31f4>  // b.any
   12414:	strb	wzr, [x19, #4]
   12418:	cbnz	x21, 12444 <_ZSt13set_terminatePFvvE@@Base+0x3240>
   1241c:	ldr	x3, [x22]
   12420:	mov	w1, #0x6                   	// #6
   12424:	mov	w2, #0x1                   	// #1
   12428:	mov	x0, x20
   1242c:	bl	edd0 <fwrite@plt>
   12430:	b	12450 <_ZSt13set_terminatePFvvE@@Base+0x324c>
   12434:	mov	x0, x21
   12438:	mov	x1, x19
   1243c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12440:	b	12454 <_ZSt13set_terminatePFvvE@@Base+0x3250>
   12444:	mov	x0, x21
   12448:	mov	x1, x19
   1244c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12450:	strb	w26, [x19, #4]
   12454:	add	x24, x24, #0x8
   12458:	cmp	x24, x25
   1245c:	mov	w8, wzr
   12460:	b.eq	1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>  // b.none
   12464:	b	123b0 <_ZSt13set_terminatePFvvE@@Base+0x31ac>
   12468:	mov	w20, wzr
   1246c:	ldr	x1, [x22]
   12470:	mov	w0, #0x20                  	// #32
   12474:	bl	eb90 <fputc@plt>
   12478:	ldr	w8, [x19]
   1247c:	add	w20, w20, #0x1
   12480:	cmp	w20, w8
   12484:	b.ne	1246c <_ZSt13set_terminatePFvvE@@Base+0x3268>  // b.any
   12488:	strb	wzr, [x19, #4]
   1248c:	add	w8, w20, #0x1
   12490:	str	w8, [x19]
   12494:	ldr	x1, [x22]
   12498:	mov	w0, #0x7b                  	// #123
   1249c:	bl	eb90 <fputc@plt>
   124a0:	cbz	x23, 1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>
   124a4:	adrp	x20, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   124a8:	add	x25, x24, x23, lsl #3
   124ac:	mov	w26, #0x1                   	// #1
   124b0:	add	x20, x20, #0xdcc
   124b4:	mov	w8, #0x1                   	// #1
   124b8:	ldr	x21, [x24]
   124bc:	tbz	w8, #0, 124dc <_ZSt13set_terminatePFvvE@@Base+0x32d8>
   124c0:	cbnz	x21, 1253c <_ZSt13set_terminatePFvvE@@Base+0x3338>
   124c4:	ldr	x3, [x22]
   124c8:	mov	w1, #0x6                   	// #6
   124cc:	mov	w2, #0x1                   	// #1
   124d0:	mov	x0, x20
   124d4:	bl	edd0 <fwrite@plt>
   124d8:	b	1255c <_ZSt13set_terminatePFvvE@@Base+0x3358>
   124dc:	ldr	x1, [x22]
   124e0:	mov	w0, #0x2c                  	// #44
   124e4:	bl	eb90 <fputc@plt>
   124e8:	ldr	x1, [x22]
   124ec:	mov	w0, #0xa                   	// #10
   124f0:	bl	eb90 <fputc@plt>
   124f4:	ldr	w8, [x19]
   124f8:	cbz	w8, 1251c <_ZSt13set_terminatePFvvE@@Base+0x3318>
   124fc:	mov	w27, wzr
   12500:	ldr	x1, [x22]
   12504:	mov	w0, #0x20                  	// #32
   12508:	bl	eb90 <fputc@plt>
   1250c:	ldr	w8, [x19]
   12510:	add	w27, w27, #0x1
   12514:	cmp	w27, w8
   12518:	b.ne	12500 <_ZSt13set_terminatePFvvE@@Base+0x32fc>  // b.any
   1251c:	strb	wzr, [x19, #4]
   12520:	cbnz	x21, 1254c <_ZSt13set_terminatePFvvE@@Base+0x3348>
   12524:	ldr	x3, [x22]
   12528:	mov	w1, #0x6                   	// #6
   1252c:	mov	w2, #0x1                   	// #1
   12530:	mov	x0, x20
   12534:	bl	edd0 <fwrite@plt>
   12538:	b	12558 <_ZSt13set_terminatePFvvE@@Base+0x3354>
   1253c:	mov	x0, x21
   12540:	mov	x1, x19
   12544:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12548:	b	1255c <_ZSt13set_terminatePFvvE@@Base+0x3358>
   1254c:	mov	x0, x21
   12550:	mov	x1, x19
   12554:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12558:	strb	w26, [x19, #4]
   1255c:	add	x24, x24, #0x8
   12560:	cmp	x24, x25
   12564:	mov	w8, wzr
   12568:	b.eq	1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>  // b.none
   1256c:	b	124b8 <_ZSt13set_terminatePFvvE@@Base+0x32b4>
   12570:	mov	w20, wzr
   12574:	ldr	x1, [x22]
   12578:	mov	w0, #0x20                  	// #32
   1257c:	bl	eb90 <fputc@plt>
   12580:	ldr	w8, [x19]
   12584:	add	w20, w20, #0x1
   12588:	cmp	w20, w8
   1258c:	b.ne	12574 <_ZSt13set_terminatePFvvE@@Base+0x3370>  // b.any
   12590:	strb	wzr, [x19, #4]
   12594:	add	w8, w20, #0x1
   12598:	str	w8, [x19]
   1259c:	ldr	x1, [x22]
   125a0:	mov	w0, #0x7b                  	// #123
   125a4:	bl	eb90 <fputc@plt>
   125a8:	cbz	x23, 1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>
   125ac:	adrp	x20, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   125b0:	add	x25, x24, x23, lsl #3
   125b4:	mov	w26, #0x1                   	// #1
   125b8:	add	x20, x20, #0xdcc
   125bc:	mov	w8, #0x1                   	// #1
   125c0:	ldr	x21, [x24]
   125c4:	tbz	w8, #0, 125e4 <_ZSt13set_terminatePFvvE@@Base+0x33e0>
   125c8:	cbnz	x21, 12644 <_ZSt13set_terminatePFvvE@@Base+0x3440>
   125cc:	ldr	x3, [x22]
   125d0:	mov	w1, #0x6                   	// #6
   125d4:	mov	w2, #0x1                   	// #1
   125d8:	mov	x0, x20
   125dc:	bl	edd0 <fwrite@plt>
   125e0:	b	12664 <_ZSt13set_terminatePFvvE@@Base+0x3460>
   125e4:	ldr	x1, [x22]
   125e8:	mov	w0, #0x2c                  	// #44
   125ec:	bl	eb90 <fputc@plt>
   125f0:	ldr	x1, [x22]
   125f4:	mov	w0, #0xa                   	// #10
   125f8:	bl	eb90 <fputc@plt>
   125fc:	ldr	w8, [x19]
   12600:	cbz	w8, 12624 <_ZSt13set_terminatePFvvE@@Base+0x3420>
   12604:	mov	w27, wzr
   12608:	ldr	x1, [x22]
   1260c:	mov	w0, #0x20                  	// #32
   12610:	bl	eb90 <fputc@plt>
   12614:	ldr	w8, [x19]
   12618:	add	w27, w27, #0x1
   1261c:	cmp	w27, w8
   12620:	b.ne	12608 <_ZSt13set_terminatePFvvE@@Base+0x3404>  // b.any
   12624:	strb	wzr, [x19, #4]
   12628:	cbnz	x21, 12654 <_ZSt13set_terminatePFvvE@@Base+0x3450>
   1262c:	ldr	x3, [x22]
   12630:	mov	w1, #0x6                   	// #6
   12634:	mov	w2, #0x1                   	// #1
   12638:	mov	x0, x20
   1263c:	bl	edd0 <fwrite@plt>
   12640:	b	12660 <_ZSt13set_terminatePFvvE@@Base+0x345c>
   12644:	mov	x0, x21
   12648:	mov	x1, x19
   1264c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12650:	b	12664 <_ZSt13set_terminatePFvvE@@Base+0x3460>
   12654:	mov	x0, x21
   12658:	mov	x1, x19
   1265c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12660:	strb	w26, [x19, #4]
   12664:	add	x24, x24, #0x8
   12668:	cmp	x24, x25
   1266c:	mov	w8, wzr
   12670:	b.eq	1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>  // b.none
   12674:	b	125c0 <_ZSt13set_terminatePFvvE@@Base+0x33bc>
   12678:	mov	w20, wzr
   1267c:	ldr	x1, [x22]
   12680:	mov	w0, #0x20                  	// #32
   12684:	bl	eb90 <fputc@plt>
   12688:	ldr	w8, [x19]
   1268c:	add	w20, w20, #0x1
   12690:	cmp	w20, w8
   12694:	b.ne	1267c <_ZSt13set_terminatePFvvE@@Base+0x3478>  // b.any
   12698:	strb	wzr, [x19, #4]
   1269c:	add	w8, w20, #0x1
   126a0:	str	w8, [x19]
   126a4:	ldr	x1, [x22]
   126a8:	mov	w0, #0x7b                  	// #123
   126ac:	bl	eb90 <fputc@plt>
   126b0:	cbz	x23, 1277c <_ZSt13set_terminatePFvvE@@Base+0x3578>
   126b4:	adrp	x20, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   126b8:	add	x25, x24, x23, lsl #3
   126bc:	mov	w26, #0x1                   	// #1
   126c0:	add	x20, x20, #0xdcc
   126c4:	mov	w8, #0x1                   	// #1
   126c8:	ldr	x21, [x24]
   126cc:	tbz	w8, #0, 126ec <_ZSt13set_terminatePFvvE@@Base+0x34e8>
   126d0:	cbnz	x21, 1274c <_ZSt13set_terminatePFvvE@@Base+0x3548>
   126d4:	ldr	x3, [x22]
   126d8:	mov	w1, #0x6                   	// #6
   126dc:	mov	w2, #0x1                   	// #1
   126e0:	mov	x0, x20
   126e4:	bl	edd0 <fwrite@plt>
   126e8:	b	1276c <_ZSt13set_terminatePFvvE@@Base+0x3568>
   126ec:	ldr	x1, [x22]
   126f0:	mov	w0, #0x2c                  	// #44
   126f4:	bl	eb90 <fputc@plt>
   126f8:	ldr	x1, [x22]
   126fc:	mov	w0, #0xa                   	// #10
   12700:	bl	eb90 <fputc@plt>
   12704:	ldr	w8, [x19]
   12708:	cbz	w8, 1272c <_ZSt13set_terminatePFvvE@@Base+0x3528>
   1270c:	mov	w27, wzr
   12710:	ldr	x1, [x22]
   12714:	mov	w0, #0x20                  	// #32
   12718:	bl	eb90 <fputc@plt>
   1271c:	ldr	w8, [x19]
   12720:	add	w27, w27, #0x1
   12724:	cmp	w27, w8
   12728:	b.ne	12710 <_ZSt13set_terminatePFvvE@@Base+0x350c>  // b.any
   1272c:	strb	wzr, [x19, #4]
   12730:	cbnz	x21, 1275c <_ZSt13set_terminatePFvvE@@Base+0x3558>
   12734:	ldr	x3, [x22]
   12738:	mov	w1, #0x6                   	// #6
   1273c:	mov	w2, #0x1                   	// #1
   12740:	mov	x0, x20
   12744:	bl	edd0 <fwrite@plt>
   12748:	b	12768 <_ZSt13set_terminatePFvvE@@Base+0x3564>
   1274c:	mov	x0, x21
   12750:	mov	x1, x19
   12754:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12758:	b	1276c <_ZSt13set_terminatePFvvE@@Base+0x3568>
   1275c:	mov	x0, x21
   12760:	mov	x1, x19
   12764:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   12768:	strb	w26, [x19, #4]
   1276c:	add	x24, x24, #0x8
   12770:	cmp	x24, x25
   12774:	mov	w8, wzr
   12778:	b.ne	126c8 <_ZSt13set_terminatePFvvE@@Base+0x34c4>  // b.any
   1277c:	ldr	x1, [x22]
   12780:	mov	w0, #0x7d                  	// #125
   12784:	bl	eb90 <fputc@plt>
   12788:	ldr	w8, [x19]
   1278c:	sub	w8, w8, #0x1
   12790:	str	w8, [x19]
   12794:	cbz	x23, 127a0 <_ZSt13set_terminatePFvvE@@Base+0x359c>
   12798:	mov	w8, #0x1                   	// #1
   1279c:	strb	w8, [x19, #4]
   127a0:	ldr	x1, [x22]
   127a4:	mov	w0, #0x29                  	// #41
   127a8:	bl	eb90 <fputc@plt>
   127ac:	ldr	w8, [x19]
   127b0:	sub	w8, w8, #0x2
   127b4:	str	w8, [x19]
   127b8:	ldp	x20, x19, [sp, #96]
   127bc:	ldp	x22, x21, [sp, #80]
   127c0:	ldp	x24, x23, [sp, #64]
   127c4:	ldp	x26, x25, [sp, #48]
   127c8:	ldp	x28, x27, [sp, #32]
   127cc:	ldp	x29, x30, [sp, #16]
   127d0:	add	sp, sp, #0x70
   127d4:	ret
   127d8:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   127dc:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   127e0:	adrp	x3, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   127e4:	add	x0, x0, #0xcc7
   127e8:	add	x1, x1, #0xce9
   127ec:	add	x3, x3, #0xd2f
   127f0:	mov	w2, #0x86c                 	// #2156
   127f4:	bl	ee90 <__assert_fail@plt>

00000000000127f8 <__cxa_demangle@@Base>:
   127f8:	stp	x29, x30, [sp, #-96]!
   127fc:	stp	x28, x27, [sp, #16]
   12800:	stp	x26, x25, [sp, #32]
   12804:	stp	x24, x23, [sp, #48]
   12808:	stp	x22, x21, [sp, #64]
   1280c:	stp	x20, x19, [sp, #80]
   12810:	mov	x29, sp
   12814:	sub	sp, sp, #0x1, lsl #12
   12818:	sub	sp, sp, #0x3a0
   1281c:	mov	x19, x3
   12820:	cbz	x0, 12838 <__cxa_demangle@@Base+0x40>
   12824:	mov	x21, x2
   12828:	mov	x20, x1
   1282c:	mov	x22, x0
   12830:	cbz	x1, 1284c <__cxa_demangle@@Base+0x54>
   12834:	cbnz	x21, 1284c <__cxa_demangle@@Base+0x54>
   12838:	mov	x20, xzr
   1283c:	cbz	x19, 12f20 <__cxa_demangle@@Base+0x728>
   12840:	mov	w8, #0xfffffffd            	// #-3
   12844:	str	w8, [x19]
   12848:	b	12f20 <__cxa_demangle@@Base+0x728>
   1284c:	mov	x0, x22
   12850:	add	x24, sp, #0x50
   12854:	bl	eb00 <strlen@plt>
   12858:	add	x8, sp, #0x50
   1285c:	add	x9, x22, x0
   12860:	add	x23, x8, #0x28
   12864:	movi	v0.2d, #0x0
   12868:	stp	x22, x9, [sp, #80]
   1286c:	add	x9, x8, #0x108
   12870:	add	x11, x23, #0x100
   12874:	stp	x23, x11, [sp, #104]
   12878:	str	x23, [sp, #96]
   1287c:	str	q0, [x9]
   12880:	add	x9, x8, #0x298
   12884:	add	x12, x8, #0x140
   12888:	add	x10, x8, #0x240
   1288c:	add	x25, x8, #0x258
   12890:	stur	q0, [x24, #104]
   12894:	stur	q0, [x24, #120]
   12898:	stur	q0, [x24, #136]
   1289c:	stur	q0, [x24, #152]
   128a0:	stur	q0, [x24, #168]
   128a4:	stur	q0, [x24, #184]
   128a8:	stur	q0, [x24, #200]
   128ac:	stur	q0, [x24, #216]
   128b0:	stur	q0, [x24, #232]
   128b4:	stur	q0, [x24, #248]
   128b8:	str	q0, [x23, #240]
   128bc:	str	x9, [sp, #672]
   128c0:	add	x9, x8, #0x268
   128c4:	stur	q0, [sp, #120]
   128c8:	stur	q0, [sp, #136]
   128cc:	stur	q0, [sp, #152]
   128d0:	stur	q0, [sp, #168]
   128d4:	add	x11, x8, #0x288
   128d8:	stp	x12, x10, [sp, #384]
   128dc:	add	x10, x8, #0x278
   128e0:	str	x12, [sp, #376]
   128e4:	stp	q0, q0, [sp, #400]
   128e8:	stp	q0, q0, [sp, #432]
   128ec:	stp	q0, q0, [sp, #464]
   128f0:	stp	q0, q0, [sp, #496]
   128f4:	stp	q0, q0, [sp, #528]
   128f8:	stp	q0, q0, [sp, #560]
   128fc:	stp	q0, q0, [sp, #592]
   12900:	stp	q0, q0, [sp, #624]
   12904:	str	x25, [sp, #656]
   12908:	str	x25, [sp, #664]
   1290c:	str	q0, [x9]
   12910:	add	x9, x8, #0x308
   12914:	str	q0, [x11]
   12918:	add	x26, x8, #0x2b0
   1291c:	str	q0, [x10]
   12920:	add	x10, x8, #0x2d0
   12924:	add	x27, x8, #0x2e8
   12928:	str	q0, [x25]
   1292c:	str	x9, [sp, #816]
   12930:	add	x9, x8, #0x2f8
   12934:	str	x10, [sp, #760]
   12938:	str	x26, [sp, #744]
   1293c:	str	x26, [sp, #752]
   12940:	stp	q0, q0, [sp, #768]
   12944:	str	x27, [sp, #800]
   12948:	str	x27, [sp, #808]
   1294c:	str	q0, [x9]
   12950:	mov	w9, #0x1                   	// #1
   12954:	mov	x24, x12
   12958:	str	q0, [x27]
   1295c:	strh	w9, [sp, #856]
   12960:	mov	x9, #0xffffffffffffffff    	// #-1
   12964:	str	q0, [sp, #896]
   12968:	movi	v0.2d, #0xffffffffffffffff
   1296c:	cmp	x0, #0x2
   12970:	add	x28, x8, #0x330
   12974:	stp	xzr, xzr, [sp, #48]
   12978:	str	xzr, [sp, #64]
   1297c:	str	x9, [sp, #864]
   12980:	str	wzr, [sp, #880]
   12984:	str	xzr, [sp, #872]
   12988:	str	x28, [sp, #4992]
   1298c:	str	d0, [sp, #72]
   12990:	b.cc	12a5c <__cxa_demangle@@Base+0x264>  // b.lo, b.ul, b.last
   12994:	ldrb	w8, [x22]
   12998:	cmp	w8, #0x5f
   1299c:	b.ne	12a54 <__cxa_demangle@@Base+0x25c>  // b.any
   129a0:	ldrb	w9, [x22, #1]
   129a4:	cmp	w9, #0x5a
   129a8:	b.ne	12a54 <__cxa_demangle@@Base+0x25c>  // b.any
   129ac:	mov	w8, #0x2                   	// #2
   129b0:	add	x8, x22, x8
   129b4:	str	x8, [sp, #80]
   129b8:	add	x0, sp, #0x50
   129bc:	bl	150bc <__cxa_demangle@@Base+0x28c4>
   129c0:	mov	x22, x0
   129c4:	cbz	x0, 12e84 <__cxa_demangle@@Base+0x68c>
   129c8:	ldp	x13, x12, [sp, #80]
   129cc:	cmp	x12, x13
   129d0:	b.eq	12a74 <__cxa_demangle@@Base+0x27c>  // b.none
   129d4:	ldrb	w8, [x13]
   129d8:	cmp	w8, #0x2e
   129dc:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   129e0:	ldr	x0, [sp, #4992]
   129e4:	ldr	x8, [x0, #8]
   129e8:	add	x9, x8, #0x30
   129ec:	cmp	x9, #0xff0
   129f0:	b.cc	12a1c <__cxa_demangle@@Base+0x224>  // b.lo, b.ul, b.last
   129f4:	stp	x0, x13, [sp, #16]
   129f8:	mov	w0, #0x1000                	// #4096
   129fc:	str	x12, [sp, #32]
   12a00:	bl	ec00 <malloc@plt>
   12a04:	cbz	x0, 12f68 <__cxa_demangle@@Base+0x770>
   12a08:	ldp	x9, x13, [sp, #16]
   12a0c:	ldr	x12, [sp, #32]
   12a10:	mov	x8, xzr
   12a14:	str	x0, [sp, #4992]
   12a18:	stp	x9, xzr, [x0]
   12a1c:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   12a20:	add	x9, x8, #0x30
   12a24:	add	x8, x0, x8
   12a28:	add	x10, x10, #0x6c0
   12a2c:	mov	w11, #0x1010101             	// #16843009
   12a30:	str	x9, [x0, #8]
   12a34:	str	x10, [x8, #16]!
   12a38:	str	w11, [x8, #8]
   12a3c:	stp	x22, x13, [x8, #16]
   12a40:	str	x12, [x8, #32]
   12a44:	ldr	x9, [sp, #88]
   12a48:	mov	x22, x8
   12a4c:	str	x9, [sp, #80]
   12a50:	b	12a74 <__cxa_demangle@@Base+0x27c>
   12a54:	cmp	x0, #0x3
   12a58:	b.cs	12a94 <__cxa_demangle@@Base+0x29c>  // b.hs, b.nlast
   12a5c:	add	x0, sp, #0x50
   12a60:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   12a64:	ldp	x9, x8, [sp, #80]
   12a68:	mov	x22, x0
   12a6c:	cmp	x8, x9
   12a70:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12a74:	cbz	x22, 12e84 <__cxa_demangle@@Base+0x68c>
   12a78:	str	x27, [sp, #40]
   12a7c:	mov	x27, x25
   12a80:	mov	x25, x26
   12a84:	mov	x26, x24
   12a88:	cbz	x20, 12bf4 <__cxa_demangle@@Base+0x3fc>
   12a8c:	ldr	x24, [x21]
   12a90:	b	12c08 <__cxa_demangle@@Base+0x410>
   12a94:	cmp	w8, #0x5f
   12a98:	b.ne	12abc <__cxa_demangle@@Base+0x2c4>  // b.any
   12a9c:	ldrb	w9, [x22, #1]
   12aa0:	cmp	w9, #0x5f
   12aa4:	b.ne	12abc <__cxa_demangle@@Base+0x2c4>  // b.any
   12aa8:	ldrb	w9, [x22, #2]
   12aac:	cmp	w9, #0x5a
   12ab0:	b.ne	12abc <__cxa_demangle@@Base+0x2c4>  // b.any
   12ab4:	mov	w8, #0x3                   	// #3
   12ab8:	b	129b0 <__cxa_demangle@@Base+0x1b8>
   12abc:	cmp	x0, #0x4
   12ac0:	b.cc	12a5c <__cxa_demangle@@Base+0x264>  // b.lo, b.ul, b.last
   12ac4:	cmp	w8, #0x5f
   12ac8:	b.ne	12a5c <__cxa_demangle@@Base+0x264>  // b.any
   12acc:	ldrb	w9, [x22, #1]
   12ad0:	cmp	w9, #0x5f
   12ad4:	b.ne	12cc4 <__cxa_demangle@@Base+0x4cc>  // b.any
   12ad8:	ldrb	w9, [x22, #2]
   12adc:	cmp	w9, #0x5f
   12ae0:	b.ne	12cc4 <__cxa_demangle@@Base+0x4cc>  // b.any
   12ae4:	ldrb	w9, [x22, #3]
   12ae8:	cmp	w9, #0x5a
   12aec:	b.ne	12cc4 <__cxa_demangle@@Base+0x4cc>  // b.any
   12af0:	mov	w8, #0x4                   	// #4
   12af4:	add	x8, x22, x8
   12af8:	str	x8, [sp, #80]
   12afc:	add	x0, sp, #0x50
   12b00:	bl	150bc <__cxa_demangle@@Base+0x28c4>
   12b04:	cbz	x0, 12e84 <__cxa_demangle@@Base+0x68c>
   12b08:	ldp	x8, x22, [sp, #80]
   12b0c:	sub	x9, x22, x8
   12b10:	cmp	x9, #0xd
   12b14:	b.cc	12e84 <__cxa_demangle@@Base+0x68c>  // b.lo, b.ul, b.last
   12b18:	ldrb	w9, [x8]
   12b1c:	cmp	w9, #0x5f
   12b20:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12b24:	ldrb	w9, [x8, #1]
   12b28:	cmp	w9, #0x62
   12b2c:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12b30:	ldrb	w9, [x8, #2]
   12b34:	cmp	w9, #0x6c
   12b38:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12b3c:	ldrb	w9, [x8, #3]
   12b40:	cmp	w9, #0x6f
   12b44:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12b48:	ldrb	w9, [x8, #4]
   12b4c:	str	x0, [sp, #32]
   12b50:	cmp	w9, #0x63
   12b54:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12b58:	ldrb	w9, [x8, #5]
   12b5c:	cmp	w9, #0x6b
   12b60:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12b64:	ldrb	w9, [x8, #6]
   12b68:	cmp	w9, #0x5f
   12b6c:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12b70:	ldrb	w9, [x8, #7]
   12b74:	cmp	w9, #0x69
   12b78:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12b7c:	ldrb	w9, [x8, #8]
   12b80:	cmp	w9, #0x6e
   12b84:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12b88:	ldrb	w9, [x8, #9]
   12b8c:	cmp	w9, #0x76
   12b90:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12b94:	ldrb	w9, [x8, #10]
   12b98:	cmp	w9, #0x6f
   12b9c:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12ba0:	ldrb	w9, [x8, #11]
   12ba4:	cmp	w9, #0x6b
   12ba8:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12bac:	ldrb	w9, [x8, #12]
   12bb0:	cmp	w9, #0x65
   12bb4:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12bb8:	add	x9, x8, #0xd
   12bbc:	cmp	x9, x22
   12bc0:	str	x9, [sp, #24]
   12bc4:	str	x9, [sp, #80]
   12bc8:	b.eq	12d24 <__cxa_demangle@@Base+0x52c>  // b.none
   12bcc:	ldr	x9, [sp, #24]
   12bd0:	ldrb	w9, [x9]
   12bd4:	cmp	w9, #0x5f
   12bd8:	b.ne	12d30 <__cxa_demangle@@Base+0x538>  // b.any
   12bdc:	add	x9, x8, #0xe
   12be0:	mov	w8, #0x1                   	// #1
   12be4:	str	x9, [sp, #80]
   12be8:	str	w8, [sp, #12]
   12bec:	stp	x9, x9, [sp, #16]
   12bf0:	b	12d3c <__cxa_demangle@@Base+0x544>
   12bf4:	mov	w0, #0x400                 	// #1024
   12bf8:	mov	w24, #0x400                 	// #1024
   12bfc:	bl	ec00 <malloc@plt>
   12c00:	mov	x20, x0
   12c04:	cbz	x0, 12d0c <__cxa_demangle@@Base+0x514>
   12c08:	ldr	x8, [sp, #800]
   12c0c:	ldr	x9, [sp, #808]
   12c10:	stp	x20, xzr, [sp, #48]
   12c14:	str	x24, [sp, #64]
   12c18:	cmp	x8, x9
   12c1c:	b.ne	12f48 <__cxa_demangle@@Base+0x750>  // b.any
   12c20:	ldr	x8, [x22]
   12c24:	ldr	x8, [x8, #32]
   12c28:	mov	x24, x26
   12c2c:	mov	x26, x25
   12c30:	mov	x25, x27
   12c34:	ldr	x27, [sp, #40]
   12c38:	add	x1, sp, #0x30
   12c3c:	mov	x0, x22
   12c40:	blr	x8
   12c44:	ldrb	w8, [x22, #9]
   12c48:	cmp	w8, #0x1
   12c4c:	b.eq	12c64 <__cxa_demangle@@Base+0x46c>  // b.none
   12c50:	ldr	x8, [x22]
   12c54:	ldr	x8, [x8, #40]
   12c58:	add	x1, sp, #0x30
   12c5c:	mov	x0, x22
   12c60:	blr	x8
   12c64:	ldp	x8, x10, [sp, #56]
   12c68:	add	x9, x8, #0x1
   12c6c:	cmp	x9, x10
   12c70:	b.cs	12c7c <__cxa_demangle@@Base+0x484>  // b.hs, b.nlast
   12c74:	ldr	x0, [sp, #48]
   12c78:	b	12ca4 <__cxa_demangle@@Base+0x4ac>
   12c7c:	ldr	x0, [sp, #48]
   12c80:	lsl	x8, x10, #1
   12c84:	cmp	x8, x9
   12c88:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   12c8c:	str	x1, [sp, #64]
   12c90:	bl	ecc0 <realloc@plt>
   12c94:	str	x0, [sp, #48]
   12c98:	cbz	x0, 12f68 <__cxa_demangle@@Base+0x770>
   12c9c:	ldr	x8, [sp, #56]
   12ca0:	add	x9, x8, #0x1
   12ca4:	str	x9, [sp, #56]
   12ca8:	strb	wzr, [x0, x8]
   12cac:	cbz	x21, 12cb8 <__cxa_demangle@@Base+0x4c0>
   12cb0:	ldr	x8, [sp, #56]
   12cb4:	str	x8, [x21]
   12cb8:	ldr	x20, [sp, #48]
   12cbc:	mov	w8, wzr
   12cc0:	b	12e88 <__cxa_demangle@@Base+0x690>
   12cc4:	cmp	x0, #0x5
   12cc8:	b.cc	12a5c <__cxa_demangle@@Base+0x264>  // b.lo, b.ul, b.last
   12ccc:	cmp	w8, #0x5f
   12cd0:	b.ne	12a5c <__cxa_demangle@@Base+0x264>  // b.any
   12cd4:	ldrb	w8, [x22, #1]
   12cd8:	cmp	w8, #0x5f
   12cdc:	b.ne	12a5c <__cxa_demangle@@Base+0x264>  // b.any
   12ce0:	ldrb	w8, [x22, #2]
   12ce4:	cmp	w8, #0x5f
   12ce8:	b.ne	12a5c <__cxa_demangle@@Base+0x264>  // b.any
   12cec:	ldrb	w8, [x22, #3]
   12cf0:	cmp	w8, #0x5f
   12cf4:	b.ne	12a5c <__cxa_demangle@@Base+0x264>  // b.any
   12cf8:	ldrb	w8, [x22, #4]
   12cfc:	cmp	w8, #0x5a
   12d00:	b.ne	12a5c <__cxa_demangle@@Base+0x264>  // b.any
   12d04:	mov	w8, #0x5                   	// #5
   12d08:	b	12af4 <__cxa_demangle@@Base+0x2fc>
   12d0c:	mov	x24, x26
   12d10:	mov	x26, x25
   12d14:	mov	x25, x27
   12d18:	ldr	x27, [sp, #40]
   12d1c:	mov	w8, #0xffffffff            	// #-1
   12d20:	b	12e88 <__cxa_demangle@@Base+0x690>
   12d24:	ldr	x8, [sp, #24]
   12d28:	str	x22, [sp, #24]
   12d2c:	b	12de0 <__cxa_demangle@@Base+0x5e8>
   12d30:	ldr	x8, [sp, #24]
   12d34:	str	wzr, [sp, #12]
   12d38:	str	x8, [sp, #16]
   12d3c:	ldr	x8, [sp, #16]
   12d40:	cmp	x22, x8
   12d44:	b.ne	12d58 <__cxa_demangle@@Base+0x560>  // b.any
   12d48:	str	xzr, [sp, #16]
   12d4c:	mov	x9, xzr
   12d50:	mov	x8, x22
   12d54:	b	12dc8 <__cxa_demangle@@Base+0x5d0>
   12d58:	ldr	x8, [sp, #24]
   12d5c:	ldrb	w8, [x8]
   12d60:	str	x8, [sp]
   12d64:	bl	ed40 <__ctype_b_loc@plt>
   12d68:	ldr	x8, [x0]
   12d6c:	ldr	x9, [sp]
   12d70:	ldrh	w8, [x8, x9, lsl #1]
   12d74:	tbnz	w8, #11, 12d88 <__cxa_demangle@@Base+0x590>
   12d78:	ldr	x8, [sp, #16]
   12d7c:	mov	x9, xzr
   12d80:	str	xzr, [sp, #16]
   12d84:	b	12dc8 <__cxa_demangle@@Base+0x5d0>
   12d88:	ldr	x8, [sp, #24]
   12d8c:	add	x8, x8, #0x1
   12d90:	cmp	x22, x8
   12d94:	str	x8, [sp, #24]
   12d98:	str	x8, [sp, #80]
   12d9c:	b.eq	12dc0 <__cxa_demangle@@Base+0x5c8>  // b.none
   12da0:	ldr	x8, [sp, #24]
   12da4:	ldrb	w9, [x8], #1
   12da8:	ldr	x10, [x0]
   12dac:	ldrh	w9, [x10, x9, lsl #1]
   12db0:	tbnz	w9, #11, 12d90 <__cxa_demangle@@Base+0x598>
   12db4:	sub	x8, x8, #0x1
   12db8:	mov	x9, x8
   12dbc:	b	12dc8 <__cxa_demangle@@Base+0x5d0>
   12dc0:	mov	x8, x22
   12dc4:	mov	x9, x22
   12dc8:	ldr	x10, [sp, #16]
   12dcc:	cmp	x10, x9
   12dd0:	ldr	w10, [sp, #12]
   12dd4:	cset	w9, eq  // eq = none
   12dd8:	and	w9, w10, w9
   12ddc:	tbnz	w9, #0, 12e84 <__cxa_demangle@@Base+0x68c>
   12de0:	ldr	x9, [sp, #24]
   12de4:	cmp	x22, x9
   12de8:	b.eq	12e04 <__cxa_demangle@@Base+0x60c>  // b.none
   12dec:	ldr	x9, [sp, #24]
   12df0:	ldrb	w9, [x9]
   12df4:	cmp	w9, #0x2e
   12df8:	b.ne	12e04 <__cxa_demangle@@Base+0x60c>  // b.any
   12dfc:	str	x22, [sp, #80]
   12e00:	b	12e0c <__cxa_demangle@@Base+0x614>
   12e04:	cmp	x22, x8
   12e08:	b.ne	12e84 <__cxa_demangle@@Base+0x68c>  // b.any
   12e0c:	ldr	x8, [sp, #4992]
   12e10:	mov	x22, x8
   12e14:	ldr	x8, [x8, #8]
   12e18:	add	x9, x8, #0x30
   12e1c:	cmp	x9, #0xff0
   12e20:	b.cc	12e40 <__cxa_demangle@@Base+0x648>  // b.lo, b.ul, b.last
   12e24:	mov	w0, #0x1000                	// #4096
   12e28:	bl	ec00 <malloc@plt>
   12e2c:	cbz	x0, 12f68 <__cxa_demangle@@Base+0x770>
   12e30:	mov	x8, xzr
   12e34:	stp	x22, xzr, [x0]
   12e38:	mov	x22, x0
   12e3c:	str	x0, [sp, #4992]
   12e40:	add	x9, x8, #0x30
   12e44:	mov	x12, x22
   12e48:	add	x22, x22, x8
   12e4c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   12e50:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   12e54:	add	x8, x8, #0xc70
   12e58:	add	x11, x11, #0x37d
   12e5c:	str	x9, [x12, #8]
   12e60:	str	x8, [x22, #16]!
   12e64:	add	x8, x11, #0x21
   12e68:	stp	x11, x8, [x22, #16]
   12e6c:	ldr	x8, [sp, #32]
   12e70:	mov	w10, #0x114                 	// #276
   12e74:	movk	w10, #0x101, lsl #16
   12e78:	str	w10, [x22, #8]
   12e7c:	str	x8, [x22, #32]
   12e80:	b	12a78 <__cxa_demangle@@Base+0x280>
   12e84:	mov	w8, #0xfffffffe            	// #-2
   12e88:	cbz	x19, 12e90 <__cxa_demangle@@Base+0x698>
   12e8c:	str	w8, [x19]
   12e90:	ldr	x0, [sp, #4992]
   12e94:	cmp	w8, #0x0
   12e98:	csel	x20, x20, xzr, eq  // eq = none
   12e9c:	cbnz	x0, 12eac <__cxa_demangle@@Base+0x6b4>
   12ea0:	b	12ec8 <__cxa_demangle@@Base+0x6d0>
   12ea4:	mov	x0, x8
   12ea8:	cbz	x0, 12ec8 <__cxa_demangle@@Base+0x6d0>
   12eac:	ldr	x8, [x0]
   12eb0:	cmp	x28, x0
   12eb4:	str	x8, [sp, #4992]
   12eb8:	b.eq	12ea4 <__cxa_demangle@@Base+0x6ac>  // b.none
   12ebc:	bl	ed60 <free@plt>
   12ec0:	ldr	x0, [sp, #4992]
   12ec4:	cbnz	x0, 12eac <__cxa_demangle@@Base+0x6b4>
   12ec8:	stp	xzr, xzr, [x28]
   12ecc:	ldr	x0, [sp, #800]
   12ed0:	str	x28, [sp, #4992]
   12ed4:	cmp	x0, x27
   12ed8:	b.eq	12ee0 <__cxa_demangle@@Base+0x6e8>  // b.none
   12edc:	bl	ed60 <free@plt>
   12ee0:	ldr	x0, [sp, #744]
   12ee4:	cmp	x0, x26
   12ee8:	b.eq	12ef0 <__cxa_demangle@@Base+0x6f8>  // b.none
   12eec:	bl	ed60 <free@plt>
   12ef0:	ldr	x0, [sp, #656]
   12ef4:	cmp	x0, x25
   12ef8:	b.eq	12f00 <__cxa_demangle@@Base+0x708>  // b.none
   12efc:	bl	ed60 <free@plt>
   12f00:	ldr	x0, [sp, #376]
   12f04:	cmp	x0, x24
   12f08:	b.eq	12f10 <__cxa_demangle@@Base+0x718>  // b.none
   12f0c:	bl	ed60 <free@plt>
   12f10:	ldr	x0, [sp, #96]
   12f14:	cmp	x0, x23
   12f18:	b.eq	12f20 <__cxa_demangle@@Base+0x728>  // b.none
   12f1c:	bl	ed60 <free@plt>
   12f20:	mov	x0, x20
   12f24:	add	sp, sp, #0x1, lsl #12
   12f28:	add	sp, sp, #0x3a0
   12f2c:	ldp	x20, x19, [sp, #80]
   12f30:	ldp	x22, x21, [sp, #64]
   12f34:	ldp	x24, x23, [sp, #48]
   12f38:	ldp	x26, x25, [sp, #32]
   12f3c:	ldp	x28, x27, [sp, #16]
   12f40:	ldp	x29, x30, [sp], #96
   12f44:	ret
   12f48:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   12f4c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   12f50:	adrp	x3, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   12f54:	add	x0, x0, #0xc20
   12f58:	add	x1, x1, #0xc43
   12f5c:	add	x3, x3, #0xc7f
   12f60:	mov	w2, #0x162                 	// #354
   12f64:	bl	ee90 <__assert_fail@plt>
   12f68:	bl	eeb0 <_ZSt9terminatev@plt>
   12f6c:	ldr	x8, [sp, #4992]
   12f70:	mov	x19, x0
   12f74:	cbz	x8, 12f9c <__cxa_demangle@@Base+0x7a4>
   12f78:	ldr	x9, [x8]
   12f7c:	cmp	x28, x8
   12f80:	str	x9, [sp, #4992]
   12f84:	b.eq	12f94 <__cxa_demangle@@Base+0x79c>  // b.none
   12f88:	mov	x0, x8
   12f8c:	bl	ed60 <free@plt>
   12f90:	ldr	x9, [sp, #4992]
   12f94:	mov	x8, x9
   12f98:	cbnz	x9, 12f78 <__cxa_demangle@@Base+0x780>
   12f9c:	stp	xzr, xzr, [x28]
   12fa0:	ldr	x0, [sp, #800]
   12fa4:	str	x28, [sp, #4992]
   12fa8:	cmp	x0, x27
   12fac:	b.eq	12fb4 <__cxa_demangle@@Base+0x7bc>  // b.none
   12fb0:	bl	ed60 <free@plt>
   12fb4:	ldr	x0, [sp, #744]
   12fb8:	cmp	x0, x26
   12fbc:	b.eq	12fc4 <__cxa_demangle@@Base+0x7cc>  // b.none
   12fc0:	bl	ed60 <free@plt>
   12fc4:	ldr	x0, [sp, #656]
   12fc8:	cmp	x0, x25
   12fcc:	b.eq	12fd4 <__cxa_demangle@@Base+0x7dc>  // b.none
   12fd0:	bl	ed60 <free@plt>
   12fd4:	ldr	x0, [sp, #376]
   12fd8:	cmp	x0, x24
   12fdc:	b.eq	12fe4 <__cxa_demangle@@Base+0x7ec>  // b.none
   12fe0:	bl	ed60 <free@plt>
   12fe4:	ldr	x0, [sp, #96]
   12fe8:	cmp	x0, x23
   12fec:	b.eq	12ff4 <__cxa_demangle@@Base+0x7fc>  // b.none
   12ff0:	bl	ed60 <free@plt>
   12ff4:	mov	x0, x19
   12ff8:	bl	eea0 <_Unwind_Resume@plt>
   12ffc:	stp	x29, x30, [sp, #-80]!
   13000:	stp	x26, x25, [sp, #16]
   13004:	stp	x24, x23, [sp, #32]
   13008:	stp	x22, x21, [sp, #48]
   1300c:	stp	x20, x19, [sp, #64]
   13010:	mov	x29, sp
   13014:	ldr	w8, [x0]
   13018:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
   1301c:	mov	x19, x0
   13020:	mov	x20, x1
   13024:	add	w8, w8, #0x1
   13028:	str	w8, [x0]
   1302c:	ldr	x23, [x23, #3856]
   13030:	mov	w0, #0x7b                  	// #123
   13034:	mov	x21, x2
   13038:	ldr	x8, [x23]
   1303c:	mov	x1, x8
   13040:	bl	eb90 <fputc@plt>
   13044:	cbz	x21, 13110 <__cxa_demangle@@Base+0x918>
   13048:	add	x24, x20, x21, lsl #3
   1304c:	adrp	x21, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13050:	mov	w25, #0x1                   	// #1
   13054:	add	x21, x21, #0xdcc
   13058:	mov	w8, #0x1                   	// #1
   1305c:	ldr	x22, [x20]
   13060:	tbz	w8, #0, 13080 <__cxa_demangle@@Base+0x888>
   13064:	cbnz	x22, 130e0 <__cxa_demangle@@Base+0x8e8>
   13068:	ldr	x3, [x23]
   1306c:	mov	w1, #0x6                   	// #6
   13070:	mov	w2, #0x1                   	// #1
   13074:	mov	x0, x21
   13078:	bl	edd0 <fwrite@plt>
   1307c:	b	13100 <__cxa_demangle@@Base+0x908>
   13080:	ldr	x1, [x23]
   13084:	mov	w0, #0x2c                  	// #44
   13088:	bl	eb90 <fputc@plt>
   1308c:	ldr	x1, [x23]
   13090:	mov	w0, #0xa                   	// #10
   13094:	bl	eb90 <fputc@plt>
   13098:	ldr	w8, [x19]
   1309c:	cbz	w8, 130c0 <__cxa_demangle@@Base+0x8c8>
   130a0:	mov	w26, wzr
   130a4:	ldr	x1, [x23]
   130a8:	mov	w0, #0x20                  	// #32
   130ac:	bl	eb90 <fputc@plt>
   130b0:	ldr	w8, [x19]
   130b4:	add	w26, w26, #0x1
   130b8:	cmp	w26, w8
   130bc:	b.ne	130a4 <__cxa_demangle@@Base+0x8ac>  // b.any
   130c0:	strb	wzr, [x19, #4]
   130c4:	cbnz	x22, 130f0 <__cxa_demangle@@Base+0x8f8>
   130c8:	ldr	x3, [x23]
   130cc:	mov	w1, #0x6                   	// #6
   130d0:	mov	w2, #0x1                   	// #1
   130d4:	mov	x0, x21
   130d8:	bl	edd0 <fwrite@plt>
   130dc:	b	130fc <__cxa_demangle@@Base+0x904>
   130e0:	mov	x0, x22
   130e4:	mov	x1, x19
   130e8:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   130ec:	b	13100 <__cxa_demangle@@Base+0x908>
   130f0:	mov	x0, x22
   130f4:	mov	x1, x19
   130f8:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   130fc:	strb	w25, [x19, #4]
   13100:	add	x20, x20, #0x8
   13104:	cmp	x20, x24
   13108:	mov	w8, wzr
   1310c:	b.ne	1305c <__cxa_demangle@@Base+0x864>  // b.any
   13110:	ldr	x1, [x23]
   13114:	mov	w0, #0x7d                  	// #125
   13118:	bl	eb90 <fputc@plt>
   1311c:	ldr	w8, [x19]
   13120:	sub	w8, w8, #0x1
   13124:	str	w8, [x19]
   13128:	ldp	x20, x19, [sp, #64]
   1312c:	ldp	x22, x21, [sp, #48]
   13130:	ldp	x24, x23, [sp, #32]
   13134:	ldp	x26, x25, [sp, #16]
   13138:	ldp	x29, x30, [sp], #80
   1313c:	ret
   13140:	stp	x29, x30, [sp, #-80]!
   13144:	str	x25, [sp, #16]
   13148:	stp	x24, x23, [sp, #32]
   1314c:	stp	x22, x21, [sp, #48]
   13150:	stp	x20, x19, [sp, #64]
   13154:	mov	x29, sp
   13158:	adrp	x24, 48000 <_ZTISt14overflow_error@@Base-0x20>
   1315c:	ldr	x23, [x0]
   13160:	ldr	x24, [x24, #3856]
   13164:	mov	x21, x0
   13168:	mov	x22, x1
   1316c:	mov	w0, #0xa                   	// #10
   13170:	ldr	x8, [x24]
   13174:	mov	x20, x3
   13178:	mov	x19, x2
   1317c:	mov	x1, x8
   13180:	bl	eb90 <fputc@plt>
   13184:	ldr	w8, [x23]
   13188:	cbz	w8, 131ac <__cxa_demangle@@Base+0x9b4>
   1318c:	mov	w25, wzr
   13190:	ldr	x1, [x24]
   13194:	mov	w0, #0x20                  	// #32
   13198:	bl	eb90 <fputc@plt>
   1319c:	ldr	w8, [x23]
   131a0:	add	w25, w25, #0x1
   131a4:	cmp	w25, w8
   131a8:	b.ne	13190 <__cxa_demangle@@Base+0x998>  // b.any
   131ac:	strb	wzr, [x23, #4]
   131b0:	ldr	x23, [x21]
   131b4:	cbnz	x22, 131d4 <__cxa_demangle@@Base+0x9dc>
   131b8:	ldr	x3, [x24]
   131bc:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   131c0:	add	x0, x0, #0xdcc
   131c4:	mov	w1, #0x6                   	// #6
   131c8:	mov	w2, #0x1                   	// #1
   131cc:	bl	edd0 <fwrite@plt>
   131d0:	b	131e0 <__cxa_demangle@@Base+0x9e8>
   131d4:	mov	x0, x22
   131d8:	mov	x1, x23
   131dc:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   131e0:	mov	w8, #0x1                   	// #1
   131e4:	strb	w8, [x23, #4]
   131e8:	ldr	x21, [x21]
   131ec:	ldr	x3, [x24]
   131f0:	ldrb	w8, [x21, #4]
   131f4:	cbnz	w8, 13210 <__cxa_demangle@@Base+0xa18>
   131f8:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   131fc:	add	x0, x0, #0xdd3
   13200:	mov	w1, #0x2                   	// #2
   13204:	mov	w2, #0x1                   	// #1
   13208:	bl	edd0 <fwrite@plt>
   1320c:	b	13254 <__cxa_demangle@@Base+0xa5c>
   13210:	mov	w0, #0x2c                  	// #44
   13214:	mov	x1, x3
   13218:	bl	eb90 <fputc@plt>
   1321c:	ldr	x1, [x24]
   13220:	mov	w0, #0xa                   	// #10
   13224:	bl	eb90 <fputc@plt>
   13228:	ldr	w8, [x21]
   1322c:	cbz	w8, 13250 <__cxa_demangle@@Base+0xa58>
   13230:	mov	w22, wzr
   13234:	ldr	x1, [x24]
   13238:	mov	w0, #0x20                  	// #32
   1323c:	bl	eb90 <fputc@plt>
   13240:	ldr	w8, [x21]
   13244:	add	w22, w22, #0x1
   13248:	cmp	w22, w8
   1324c:	b.ne	13234 <__cxa_demangle@@Base+0xa3c>  // b.any
   13250:	strb	wzr, [x21, #4]
   13254:	ldr	x0, [x24]
   13258:	sub	w2, w20, w19
   1325c:	mov	x3, x19
   13260:	ldp	x20, x19, [sp, #64]
   13264:	ldp	x22, x21, [sp, #48]
   13268:	ldp	x24, x23, [sp, #32]
   1326c:	ldr	x25, [sp, #16]
   13270:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13274:	add	x1, x1, #0xde0
   13278:	ldp	x29, x30, [sp], #80
   1327c:	b	ef00 <fprintf@plt>
   13280:	stp	x29, x30, [sp, #-48]!
   13284:	stp	x22, x21, [sp, #16]
   13288:	stp	x20, x19, [sp, #32]
   1328c:	mov	x29, sp
   13290:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13294:	ldrb	w8, [x0, #4]
   13298:	ldr	x21, [x21, #3856]
   1329c:	mov	w19, w1
   132a0:	ldr	x3, [x21]
   132a4:	cbnz	w8, 132dc <__cxa_demangle@@Base+0xae4>
   132a8:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   132ac:	add	x0, x0, #0xdd3
   132b0:	mov	w1, #0x2                   	// #2
   132b4:	mov	w2, #0x1                   	// #1
   132b8:	bl	edd0 <fwrite@plt>
   132bc:	cbz	w19, 13308 <__cxa_demangle@@Base+0xb10>
   132c0:	tbnz	w19, #0, 1332c <__cxa_demangle@@Base+0xb34>
   132c4:	tbnz	w19, #1, 13368 <__cxa_demangle@@Base+0xb70>
   132c8:	tbnz	w19, #2, 133a4 <__cxa_demangle@@Base+0xbac>
   132cc:	ldp	x20, x19, [sp, #32]
   132d0:	ldp	x22, x21, [sp, #16]
   132d4:	ldp	x29, x30, [sp], #48
   132d8:	ret
   132dc:	mov	x20, x0
   132e0:	mov	w0, #0x2c                  	// #44
   132e4:	mov	x1, x3
   132e8:	bl	eb90 <fputc@plt>
   132ec:	ldr	x1, [x21]
   132f0:	mov	w0, #0xa                   	// #10
   132f4:	bl	eb90 <fputc@plt>
   132f8:	ldr	w8, [x20]
   132fc:	cbnz	w8, 133d8 <__cxa_demangle@@Base+0xbe0>
   13300:	strb	wzr, [x20, #4]
   13304:	cbnz	w19, 132c0 <__cxa_demangle@@Base+0xac8>
   13308:	ldr	x3, [x21]
   1330c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13310:	add	x0, x0, #0xf19
   13314:	mov	w1, #0x8                   	// #8
   13318:	ldp	x20, x19, [sp, #32]
   1331c:	ldp	x22, x21, [sp, #16]
   13320:	mov	w2, #0x1                   	// #1
   13324:	ldp	x29, x30, [sp], #48
   13328:	b	edd0 <fwrite@plt>
   1332c:	ldr	x3, [x21]
   13330:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13334:	add	x0, x0, #0xdf9
   13338:	mov	w1, #0x9                   	// #9
   1333c:	mov	w2, #0x1                   	// #1
   13340:	bl	edd0 <fwrite@plt>
   13344:	ands	w19, w19, #0xfffffffe
   13348:	b.eq	132cc <__cxa_demangle@@Base+0xad4>  // b.none
   1334c:	ldr	x3, [x21]
   13350:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13354:	add	x0, x0, #0xe1d
   13358:	mov	w1, #0x3                   	// #3
   1335c:	mov	w2, #0x1                   	// #1
   13360:	bl	edd0 <fwrite@plt>
   13364:	tbz	w19, #1, 132c8 <__cxa_demangle@@Base+0xad0>
   13368:	ldr	x3, [x21]
   1336c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13370:	add	x0, x0, #0xe03
   13374:	mov	w1, #0xc                   	// #12
   13378:	mov	w2, #0x1                   	// #1
   1337c:	bl	edd0 <fwrite@plt>
   13380:	ands	w19, w19, #0xfffffffd
   13384:	b.eq	132cc <__cxa_demangle@@Base+0xad4>  // b.none
   13388:	ldr	x3, [x21]
   1338c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13390:	add	x0, x0, #0xe1d
   13394:	mov	w1, #0x3                   	// #3
   13398:	mov	w2, #0x1                   	// #1
   1339c:	bl	edd0 <fwrite@plt>
   133a0:	tbz	w19, #2, 132cc <__cxa_demangle@@Base+0xad4>
   133a4:	ldr	x3, [x21]
   133a8:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   133ac:	add	x0, x0, #0xe10
   133b0:	mov	w1, #0xc                   	// #12
   133b4:	mov	w2, #0x1                   	// #1
   133b8:	bl	edd0 <fwrite@plt>
   133bc:	tst	w19, #0xfffffffb
   133c0:	b.eq	132cc <__cxa_demangle@@Base+0xad4>  // b.none
   133c4:	ldr	x3, [x21]
   133c8:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   133cc:	add	x0, x0, #0xe1d
   133d0:	mov	w1, #0x3                   	// #3
   133d4:	b	13318 <__cxa_demangle@@Base+0xb20>
   133d8:	mov	w22, wzr
   133dc:	ldr	x1, [x21]
   133e0:	mov	w0, #0x20                  	// #32
   133e4:	bl	eb90 <fputc@plt>
   133e8:	ldr	w8, [x20]
   133ec:	add	w22, w22, #0x1
   133f0:	cmp	w22, w8
   133f4:	b.eq	13300 <__cxa_demangle@@Base+0xb08>  // b.none
   133f8:	b	133dc <__cxa_demangle@@Base+0xbe4>
   133fc:	stp	x29, x30, [sp, #-64]!
   13400:	stp	x24, x23, [sp, #16]
   13404:	stp	x22, x21, [sp, #32]
   13408:	stp	x20, x19, [sp, #48]
   1340c:	mov	x29, sp
   13410:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13414:	ldr	x22, [x0]
   13418:	ldr	x23, [x23, #3856]
   1341c:	mov	x20, x0
   13420:	mov	x21, x1
   13424:	mov	w0, #0xa                   	// #10
   13428:	ldr	x8, [x23]
   1342c:	mov	x19, x2
   13430:	mov	x1, x8
   13434:	bl	eb90 <fputc@plt>
   13438:	ldr	w8, [x22]
   1343c:	cbz	w8, 13460 <__cxa_demangle@@Base+0xc68>
   13440:	mov	w24, wzr
   13444:	ldr	x1, [x23]
   13448:	mov	w0, #0x20                  	// #32
   1344c:	bl	eb90 <fputc@plt>
   13450:	ldr	w8, [x22]
   13454:	add	w24, w24, #0x1
   13458:	cmp	w24, w8
   1345c:	b.ne	13444 <__cxa_demangle@@Base+0xc4c>  // b.any
   13460:	strb	wzr, [x22, #4]
   13464:	ldr	x22, [x20]
   13468:	cbnz	x21, 13488 <__cxa_demangle@@Base+0xc90>
   1346c:	ldr	x3, [x23]
   13470:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13474:	add	x0, x0, #0xdcc
   13478:	mov	w1, #0x6                   	// #6
   1347c:	mov	w2, #0x1                   	// #1
   13480:	bl	edd0 <fwrite@plt>
   13484:	b	13494 <__cxa_demangle@@Base+0xc9c>
   13488:	mov	x0, x21
   1348c:	mov	x1, x22
   13490:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   13494:	mov	w8, #0x1                   	// #1
   13498:	strb	w8, [x22, #4]
   1349c:	ldr	x1, [x23]
   134a0:	ldr	x20, [x20]
   134a4:	mov	w0, #0x2c                  	// #44
   134a8:	bl	eb90 <fputc@plt>
   134ac:	ldr	x1, [x23]
   134b0:	mov	w0, #0xa                   	// #10
   134b4:	bl	eb90 <fputc@plt>
   134b8:	ldr	w8, [x20]
   134bc:	cbnz	w8, 134f0 <__cxa_demangle@@Base+0xcf8>
   134c0:	strb	wzr, [x20, #4]
   134c4:	cbz	x19, 13514 <__cxa_demangle@@Base+0xd1c>
   134c8:	mov	x0, x19
   134cc:	mov	x1, x20
   134d0:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   134d4:	mov	w8, #0x1                   	// #1
   134d8:	strb	w8, [x20, #4]
   134dc:	ldp	x20, x19, [sp, #48]
   134e0:	ldp	x22, x21, [sp, #32]
   134e4:	ldp	x24, x23, [sp, #16]
   134e8:	ldp	x29, x30, [sp], #64
   134ec:	ret
   134f0:	mov	w21, wzr
   134f4:	ldr	x1, [x23]
   134f8:	mov	w0, #0x20                  	// #32
   134fc:	bl	eb90 <fputc@plt>
   13500:	ldr	w8, [x20]
   13504:	add	w21, w21, #0x1
   13508:	cmp	w21, w8
   1350c:	b.eq	134c0 <__cxa_demangle@@Base+0xcc8>  // b.none
   13510:	b	134f4 <__cxa_demangle@@Base+0xcfc>
   13514:	ldr	x3, [x23]
   13518:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1351c:	add	x0, x0, #0xdcc
   13520:	mov	w1, #0x6                   	// #6
   13524:	mov	w2, #0x1                   	// #1
   13528:	bl	edd0 <fwrite@plt>
   1352c:	b	134d4 <__cxa_demangle@@Base+0xcdc>
   13530:	stp	x29, x30, [sp, #-48]!
   13534:	stp	x22, x21, [sp, #16]
   13538:	stp	x20, x19, [sp, #32]
   1353c:	mov	x29, sp
   13540:	adrp	x21, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13544:	ldrb	w8, [x0, #4]
   13548:	ldr	x21, [x21, #3856]
   1354c:	mov	w19, w1
   13550:	ldr	x3, [x21]
   13554:	cbnz	w8, 13570 <__cxa_demangle@@Base+0xd78>
   13558:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1355c:	add	x0, x0, #0xdd3
   13560:	mov	w1, #0x2                   	// #2
   13564:	mov	w2, #0x1                   	// #1
   13568:	bl	edd0 <fwrite@plt>
   1356c:	b	13598 <__cxa_demangle@@Base+0xda0>
   13570:	mov	x20, x0
   13574:	mov	w0, #0x2c                  	// #44
   13578:	mov	x1, x3
   1357c:	bl	eb90 <fputc@plt>
   13580:	ldr	x1, [x21]
   13584:	mov	w0, #0xa                   	// #10
   13588:	bl	eb90 <fputc@plt>
   1358c:	ldr	w8, [x20]
   13590:	cbnz	w8, 135c0 <__cxa_demangle@@Base+0xdc8>
   13594:	strb	wzr, [x20, #4]
   13598:	and	w8, w19, #0xff
   1359c:	cmp	w8, #0x2
   135a0:	b.eq	135e4 <__cxa_demangle@@Base+0xdec>  // b.none
   135a4:	cmp	w8, #0x1
   135a8:	b.eq	135f4 <__cxa_demangle@@Base+0xdfc>  // b.none
   135ac:	cbz	w8, 13608 <__cxa_demangle@@Base+0xe10>
   135b0:	ldp	x20, x19, [sp, #32]
   135b4:	ldp	x22, x21, [sp, #16]
   135b8:	ldp	x29, x30, [sp], #48
   135bc:	ret
   135c0:	mov	w22, wzr
   135c4:	ldr	x1, [x21]
   135c8:	mov	w0, #0x20                  	// #32
   135cc:	bl	eb90 <fputc@plt>
   135d0:	ldr	w8, [x20]
   135d4:	add	w22, w22, #0x1
   135d8:	cmp	w22, w8
   135dc:	b.eq	13594 <__cxa_demangle@@Base+0xd9c>  // b.none
   135e0:	b	135c4 <__cxa_demangle@@Base+0xdcc>
   135e4:	ldr	x3, [x21]
   135e8:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   135ec:	add	x0, x0, #0xf42
   135f0:	b	13600 <__cxa_demangle@@Base+0xe08>
   135f4:	ldr	x3, [x21]
   135f8:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   135fc:	add	x0, x0, #0xf22
   13600:	mov	w1, #0x1f                  	// #31
   13604:	b	13618 <__cxa_demangle@@Base+0xe20>
   13608:	ldr	x3, [x21]
   1360c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13610:	add	x0, x0, #0xf04
   13614:	mov	w1, #0x1d                  	// #29
   13618:	ldp	x20, x19, [sp, #32]
   1361c:	ldp	x22, x21, [sp, #16]
   13620:	mov	w2, #0x1                   	// #1
   13624:	ldp	x29, x30, [sp], #48
   13628:	b	edd0 <fwrite@plt>
   1362c:	stp	x29, x30, [sp, #-64]!
   13630:	stp	x24, x23, [sp, #16]
   13634:	stp	x22, x21, [sp, #32]
   13638:	stp	x20, x19, [sp, #48]
   1363c:	mov	x29, sp
   13640:	adrp	x23, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13644:	ldr	x22, [x0]
   13648:	ldr	x23, [x23, #3856]
   1364c:	mov	x20, x0
   13650:	mov	x21, x1
   13654:	mov	w0, #0xa                   	// #10
   13658:	ldr	x8, [x23]
   1365c:	mov	x19, x2
   13660:	mov	x1, x8
   13664:	bl	eb90 <fputc@plt>
   13668:	ldr	w8, [x22]
   1366c:	cbz	w8, 13690 <__cxa_demangle@@Base+0xe98>
   13670:	mov	w24, wzr
   13674:	ldr	x1, [x23]
   13678:	mov	w0, #0x20                  	// #32
   1367c:	bl	eb90 <fputc@plt>
   13680:	ldr	w8, [x22]
   13684:	add	w24, w24, #0x1
   13688:	cmp	w24, w8
   1368c:	b.ne	13674 <__cxa_demangle@@Base+0xe7c>  // b.any
   13690:	strb	wzr, [x22, #4]
   13694:	ldr	x22, [x20]
   13698:	cbnz	x21, 136b8 <__cxa_demangle@@Base+0xec0>
   1369c:	ldr	x3, [x23]
   136a0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   136a4:	add	x0, x0, #0xdcc
   136a8:	mov	w1, #0x6                   	// #6
   136ac:	mov	w2, #0x1                   	// #1
   136b0:	bl	edd0 <fwrite@plt>
   136b4:	b	136c4 <__cxa_demangle@@Base+0xecc>
   136b8:	mov	x0, x21
   136bc:	mov	x1, x22
   136c0:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   136c4:	mov	w8, #0x1                   	// #1
   136c8:	strb	w8, [x22, #4]
   136cc:	ldr	x1, [x23]
   136d0:	ldr	x20, [x20]
   136d4:	mov	w0, #0x2c                  	// #44
   136d8:	bl	eb90 <fputc@plt>
   136dc:	ldr	x1, [x23]
   136e0:	mov	w0, #0xa                   	// #10
   136e4:	bl	eb90 <fputc@plt>
   136e8:	ldr	w8, [x20]
   136ec:	cbnz	w8, 13720 <__cxa_demangle@@Base+0xf28>
   136f0:	strb	wzr, [x20, #4]
   136f4:	cbz	x19, 13744 <__cxa_demangle@@Base+0xf4c>
   136f8:	mov	x0, x19
   136fc:	mov	x1, x20
   13700:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   13704:	mov	w8, #0x1                   	// #1
   13708:	strb	w8, [x20, #4]
   1370c:	ldp	x20, x19, [sp, #48]
   13710:	ldp	x22, x21, [sp, #32]
   13714:	ldp	x24, x23, [sp, #16]
   13718:	ldp	x29, x30, [sp], #64
   1371c:	ret
   13720:	mov	w21, wzr
   13724:	ldr	x1, [x23]
   13728:	mov	w0, #0x20                  	// #32
   1372c:	bl	eb90 <fputc@plt>
   13730:	ldr	w8, [x20]
   13734:	add	w21, w21, #0x1
   13738:	cmp	w21, w8
   1373c:	b.eq	136f0 <__cxa_demangle@@Base+0xef8>  // b.none
   13740:	b	13724 <__cxa_demangle@@Base+0xf2c>
   13744:	ldr	x3, [x23]
   13748:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1374c:	add	x0, x0, #0xdcc
   13750:	mov	w1, #0x6                   	// #6
   13754:	mov	w2, #0x1                   	// #1
   13758:	bl	edd0 <fwrite@plt>
   1375c:	b	13704 <__cxa_demangle@@Base+0xf0c>
   13760:	stp	x29, x30, [sp, #-96]!
   13764:	str	x27, [sp, #16]
   13768:	stp	x26, x25, [sp, #32]
   1376c:	stp	x24, x23, [sp, #48]
   13770:	stp	x22, x21, [sp, #64]
   13774:	stp	x20, x19, [sp, #80]
   13778:	mov	x29, sp
   1377c:	adrp	x24, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13780:	ldr	x23, [x0]
   13784:	ldr	x24, [x24, #3856]
   13788:	mov	x21, x0
   1378c:	mov	x22, x1
   13790:	mov	w0, #0xa                   	// #10
   13794:	ldr	x8, [x24]
   13798:	mov	x19, x3
   1379c:	mov	x20, x2
   137a0:	mov	x1, x8
   137a4:	bl	eb90 <fputc@plt>
   137a8:	ldr	w8, [x23]
   137ac:	cbz	w8, 137d0 <__cxa_demangle@@Base+0xfd8>
   137b0:	mov	w25, wzr
   137b4:	ldr	x1, [x24]
   137b8:	mov	w0, #0x20                  	// #32
   137bc:	bl	eb90 <fputc@plt>
   137c0:	ldr	w8, [x23]
   137c4:	add	w25, w25, #0x1
   137c8:	cmp	w25, w8
   137cc:	b.ne	137b4 <__cxa_demangle@@Base+0xfbc>  // b.any
   137d0:	strb	wzr, [x23, #4]
   137d4:	ldr	x23, [x21]
   137d8:	cbnz	x22, 137f8 <__cxa_demangle@@Base+0x1000>
   137dc:	ldr	x3, [x24]
   137e0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   137e4:	add	x0, x0, #0xdcc
   137e8:	mov	w1, #0x6                   	// #6
   137ec:	mov	w2, #0x1                   	// #1
   137f0:	bl	edd0 <fwrite@plt>
   137f4:	b	13804 <__cxa_demangle@@Base+0x100c>
   137f8:	mov	x0, x22
   137fc:	mov	x1, x23
   13800:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   13804:	mov	w8, #0x1                   	// #1
   13808:	strb	w8, [x23, #4]
   1380c:	ldr	x21, [x21]
   13810:	ldr	x3, [x24]
   13814:	cbnz	x19, 1383c <__cxa_demangle@@Base+0x1044>
   13818:	ldrb	w8, [x21, #4]
   1381c:	cbnz	w8, 1383c <__cxa_demangle@@Base+0x1044>
   13820:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13824:	add	x0, x0, #0xdd3
   13828:	mov	w1, #0x2                   	// #2
   1382c:	mov	w2, #0x1                   	// #1
   13830:	bl	edd0 <fwrite@plt>
   13834:	ldr	w22, [x21]
   13838:	b	13888 <__cxa_demangle@@Base+0x1090>
   1383c:	mov	w0, #0x2c                  	// #44
   13840:	mov	x1, x3
   13844:	bl	eb90 <fputc@plt>
   13848:	ldr	x1, [x24]
   1384c:	mov	w0, #0xa                   	// #10
   13850:	bl	eb90 <fputc@plt>
   13854:	ldr	w8, [x21]
   13858:	cbnz	w8, 13864 <__cxa_demangle@@Base+0x106c>
   1385c:	mov	w22, wzr
   13860:	b	13884 <__cxa_demangle@@Base+0x108c>
   13864:	mov	w22, wzr
   13868:	ldr	x1, [x24]
   1386c:	mov	w0, #0x20                  	// #32
   13870:	bl	eb90 <fputc@plt>
   13874:	ldr	w8, [x21]
   13878:	add	w22, w22, #0x1
   1387c:	cmp	w22, w8
   13880:	b.ne	13868 <__cxa_demangle@@Base+0x1070>  // b.any
   13884:	strb	wzr, [x21, #4]
   13888:	add	w8, w22, #0x1
   1388c:	str	w8, [x21]
   13890:	ldr	x1, [x24]
   13894:	mov	w0, #0x7b                  	// #123
   13898:	bl	eb90 <fputc@plt>
   1389c:	cbnz	x19, 138bc <__cxa_demangle@@Base+0x10c4>
   138a0:	ldr	x1, [x24]
   138a4:	mov	w0, #0x7d                  	// #125
   138a8:	bl	eb90 <fputc@plt>
   138ac:	ldr	w8, [x21]
   138b0:	sub	w8, w8, #0x1
   138b4:	str	w8, [x21]
   138b8:	b	139a8 <__cxa_demangle@@Base+0x11b0>
   138bc:	adrp	x22, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   138c0:	add	x25, x20, x19, lsl #3
   138c4:	mov	w26, #0x1                   	// #1
   138c8:	add	x22, x22, #0xdcc
   138cc:	mov	w8, #0x1                   	// #1
   138d0:	ldr	x23, [x20]
   138d4:	tbz	w8, #0, 138f4 <__cxa_demangle@@Base+0x10fc>
   138d8:	cbnz	x23, 13954 <__cxa_demangle@@Base+0x115c>
   138dc:	ldr	x3, [x24]
   138e0:	mov	w1, #0x6                   	// #6
   138e4:	mov	w2, #0x1                   	// #1
   138e8:	mov	x0, x22
   138ec:	bl	edd0 <fwrite@plt>
   138f0:	b	13974 <__cxa_demangle@@Base+0x117c>
   138f4:	ldr	x1, [x24]
   138f8:	mov	w0, #0x2c                  	// #44
   138fc:	bl	eb90 <fputc@plt>
   13900:	ldr	x1, [x24]
   13904:	mov	w0, #0xa                   	// #10
   13908:	bl	eb90 <fputc@plt>
   1390c:	ldr	w8, [x21]
   13910:	cbz	w8, 13934 <__cxa_demangle@@Base+0x113c>
   13914:	mov	w27, wzr
   13918:	ldr	x1, [x24]
   1391c:	mov	w0, #0x20                  	// #32
   13920:	bl	eb90 <fputc@plt>
   13924:	ldr	w8, [x21]
   13928:	add	w27, w27, #0x1
   1392c:	cmp	w27, w8
   13930:	b.ne	13918 <__cxa_demangle@@Base+0x1120>  // b.any
   13934:	strb	wzr, [x21, #4]
   13938:	cbnz	x23, 13964 <__cxa_demangle@@Base+0x116c>
   1393c:	ldr	x3, [x24]
   13940:	mov	w1, #0x6                   	// #6
   13944:	mov	w2, #0x1                   	// #1
   13948:	mov	x0, x22
   1394c:	bl	edd0 <fwrite@plt>
   13950:	b	13970 <__cxa_demangle@@Base+0x1178>
   13954:	mov	x0, x23
   13958:	mov	x1, x21
   1395c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   13960:	b	13974 <__cxa_demangle@@Base+0x117c>
   13964:	mov	x0, x23
   13968:	mov	x1, x21
   1396c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   13970:	strb	w26, [x21, #4]
   13974:	add	x20, x20, #0x8
   13978:	cmp	x20, x25
   1397c:	mov	w8, wzr
   13980:	b.ne	138d0 <__cxa_demangle@@Base+0x10d8>  // b.any
   13984:	ldr	x1, [x24]
   13988:	mov	w0, #0x7d                  	// #125
   1398c:	bl	eb90 <fputc@plt>
   13990:	ldr	w8, [x21]
   13994:	sub	w8, w8, #0x1
   13998:	str	w8, [x21]
   1399c:	cbz	x19, 139a8 <__cxa_demangle@@Base+0x11b0>
   139a0:	mov	w8, #0x1                   	// #1
   139a4:	strb	w8, [x21, #4]
   139a8:	ldp	x20, x19, [sp, #80]
   139ac:	ldp	x22, x21, [sp, #64]
   139b0:	ldp	x24, x23, [sp, #48]
   139b4:	ldp	x26, x25, [sp, #32]
   139b8:	ldr	x27, [sp, #16]
   139bc:	ldp	x29, x30, [sp], #96
   139c0:	ret
   139c4:	stp	x29, x30, [sp, #-64]!
   139c8:	stp	x24, x23, [sp, #16]
   139cc:	stp	x22, x21, [sp, #32]
   139d0:	stp	x20, x19, [sp, #48]
   139d4:	mov	x29, sp
   139d8:	ldr	w8, [x0]
   139dc:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   139e0:	mov	x19, x0
   139e4:	mov	x20, x1
   139e8:	add	w8, w8, #0x2
   139ec:	str	w8, [x0]
   139f0:	ldr	x22, [x22, #3856]
   139f4:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   139f8:	add	x0, x0, #0xd2
   139fc:	mov	w1, #0x19                  	// #25
   13a00:	ldr	x3, [x22]
   13a04:	mov	w2, #0x1                   	// #1
   13a08:	bl	edd0 <fwrite@plt>
   13a0c:	ldr	x21, [x20, #24]
   13a10:	cbz	x21, 13a74 <__cxa_demangle@@Base+0x127c>
   13a14:	ldrb	w8, [x20, #32]
   13a18:	cbnz	w8, 13a74 <__cxa_demangle@@Base+0x127c>
   13a1c:	mov	w23, #0x1                   	// #1
   13a20:	strb	w23, [x20, #32]
   13a24:	ldr	x1, [x22]
   13a28:	mov	w0, #0xa                   	// #10
   13a2c:	bl	eb90 <fputc@plt>
   13a30:	ldr	w8, [x19]
   13a34:	cbz	w8, 13a58 <__cxa_demangle@@Base+0x1260>
   13a38:	mov	w24, wzr
   13a3c:	ldr	x1, [x22]
   13a40:	mov	w0, #0x20                  	// #32
   13a44:	bl	eb90 <fputc@plt>
   13a48:	ldr	w8, [x19]
   13a4c:	add	w24, w24, #0x1
   13a50:	cmp	w24, w8
   13a54:	b.ne	13a3c <__cxa_demangle@@Base+0x1244>  // b.any
   13a58:	mov	x0, x21
   13a5c:	mov	x1, x19
   13a60:	strb	wzr, [x19, #4]
   13a64:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   13a68:	strb	w23, [x19, #4]
   13a6c:	strb	wzr, [x20, #32]
   13a70:	b	13a88 <__cxa_demangle@@Base+0x1290>
   13a74:	ldr	x2, [x20, #16]
   13a78:	ldr	x0, [x22]
   13a7c:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   13a80:	add	x1, x1, #0x4a
   13a84:	bl	ef00 <fprintf@plt>
   13a88:	ldr	x1, [x22]
   13a8c:	mov	w0, #0x29                  	// #41
   13a90:	bl	eb90 <fputc@plt>
   13a94:	ldr	w8, [x19]
   13a98:	sub	w8, w8, #0x2
   13a9c:	str	w8, [x19]
   13aa0:	ldp	x20, x19, [sp, #48]
   13aa4:	ldp	x22, x21, [sp, #32]
   13aa8:	ldp	x24, x23, [sp, #16]
   13aac:	ldp	x29, x30, [sp], #64
   13ab0:	ret
   13ab4:	cmp	w1, #0x5
   13ab8:	b.ls	13ac0 <__cxa_demangle@@Base+0x12c8>  // b.plast
   13abc:	ret
   13ac0:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   13ac4:	mov	w8, w1
   13ac8:	add	x9, x9, #0x572
   13acc:	adr	x10, 13adc <__cxa_demangle@@Base+0x12e4>
   13ad0:	ldrb	w11, [x9, x8]
   13ad4:	add	x10, x10, x11, lsl #2
   13ad8:	br	x10
   13adc:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13ae0:	ldr	x8, [x8, #3856]
   13ae4:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   13ae8:	add	x0, x0, #0x142
   13aec:	mov	w1, #0x19                  	// #25
   13af0:	b	13b6c <__cxa_demangle@@Base+0x1374>
   13af4:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13af8:	ldr	x8, [x8, #3856]
   13afc:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   13b00:	add	x0, x0, #0x15c
   13b04:	mov	w1, #0x1c                  	// #28
   13b08:	b	13b6c <__cxa_demangle@@Base+0x1374>
   13b0c:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13b10:	ldr	x8, [x8, #3856]
   13b14:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   13b18:	add	x0, x0, #0x179
   13b1c:	mov	w1, #0x16                  	// #22
   13b20:	b	13b6c <__cxa_demangle@@Base+0x1374>
   13b24:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13b28:	ldr	x8, [x8, #3856]
   13b2c:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   13b30:	add	x0, x0, #0x190
   13b34:	b	13b48 <__cxa_demangle@@Base+0x1350>
   13b38:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13b3c:	ldr	x8, [x8, #3856]
   13b40:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   13b44:	add	x0, x0, #0x1a8
   13b48:	ldr	x3, [x8]
   13b4c:	mov	w1, #0x17                  	// #23
   13b50:	mov	w2, #0x1                   	// #1
   13b54:	b	edd0 <fwrite@plt>
   13b58:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13b5c:	ldr	x8, [x8, #3856]
   13b60:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   13b64:	add	x0, x0, #0x1c0
   13b68:	mov	w1, #0x18                  	// #24
   13b6c:	ldr	x3, [x8]
   13b70:	mov	w2, #0x1                   	// #1
   13b74:	b	edd0 <fwrite@plt>
   13b78:	stp	x29, x30, [sp, #-80]!
   13b7c:	str	x25, [sp, #16]
   13b80:	stp	x24, x23, [sp, #32]
   13b84:	stp	x22, x21, [sp, #48]
   13b88:	stp	x20, x19, [sp, #64]
   13b8c:	mov	x29, sp
   13b90:	adrp	x24, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13b94:	ldr	x23, [x0]
   13b98:	ldr	x24, [x24, #3856]
   13b9c:	mov	x20, x0
   13ba0:	mov	x22, x1
   13ba4:	mov	w0, #0xa                   	// #10
   13ba8:	ldr	x8, [x24]
   13bac:	mov	w19, w3
   13bb0:	mov	w21, w2
   13bb4:	mov	x1, x8
   13bb8:	bl	eb90 <fputc@plt>
   13bbc:	ldr	w8, [x23]
   13bc0:	cbz	w8, 13be4 <__cxa_demangle@@Base+0x13ec>
   13bc4:	mov	w25, wzr
   13bc8:	ldr	x1, [x24]
   13bcc:	mov	w0, #0x20                  	// #32
   13bd0:	bl	eb90 <fputc@plt>
   13bd4:	ldr	w8, [x23]
   13bd8:	add	w25, w25, #0x1
   13bdc:	cmp	w25, w8
   13be0:	b.ne	13bc8 <__cxa_demangle@@Base+0x13d0>  // b.any
   13be4:	strb	wzr, [x23, #4]
   13be8:	ldr	x23, [x20]
   13bec:	cbnz	x22, 13c0c <__cxa_demangle@@Base+0x1414>
   13bf0:	ldr	x3, [x24]
   13bf4:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13bf8:	add	x0, x0, #0xdcc
   13bfc:	mov	w1, #0x6                   	// #6
   13c00:	mov	w2, #0x1                   	// #1
   13c04:	bl	edd0 <fwrite@plt>
   13c08:	b	13c18 <__cxa_demangle@@Base+0x1420>
   13c0c:	mov	x0, x22
   13c10:	mov	x1, x23
   13c14:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   13c18:	mov	w8, #0x1                   	// #1
   13c1c:	strb	w8, [x23, #4]
   13c20:	ldr	x22, [x20]
   13c24:	ldr	x3, [x24]
   13c28:	ldrb	w8, [x22, #4]
   13c2c:	cbnz	w8, 13c48 <__cxa_demangle@@Base+0x1450>
   13c30:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13c34:	add	x0, x0, #0xdd3
   13c38:	mov	w1, #0x2                   	// #2
   13c3c:	mov	w2, #0x1                   	// #1
   13c40:	bl	edd0 <fwrite@plt>
   13c44:	b	13c8c <__cxa_demangle@@Base+0x1494>
   13c48:	mov	w0, #0x2c                  	// #44
   13c4c:	mov	x1, x3
   13c50:	bl	eb90 <fputc@plt>
   13c54:	ldr	x1, [x24]
   13c58:	mov	w0, #0xa                   	// #10
   13c5c:	bl	eb90 <fputc@plt>
   13c60:	ldr	w8, [x22]
   13c64:	cbz	w8, 13c88 <__cxa_demangle@@Base+0x1490>
   13c68:	mov	w23, wzr
   13c6c:	ldr	x1, [x24]
   13c70:	mov	w0, #0x20                  	// #32
   13c74:	bl	eb90 <fputc@plt>
   13c78:	ldr	w8, [x22]
   13c7c:	add	w23, w23, #0x1
   13c80:	cmp	w23, w8
   13c84:	b.ne	13c6c <__cxa_demangle@@Base+0x1474>  // b.any
   13c88:	strb	wzr, [x22, #4]
   13c8c:	ldr	x1, [x24]
   13c90:	adrp	x8, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   13c94:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   13c98:	add	x8, x8, #0x1eb
   13c9c:	add	x9, x9, #0x1e6
   13ca0:	tst	w21, #0x1
   13ca4:	csel	x0, x9, x8, ne  // ne = any
   13ca8:	bl	eb10 <fputs@plt>
   13cac:	ldr	x20, [x20]
   13cb0:	ldr	x3, [x24]
   13cb4:	ldrb	w8, [x20, #4]
   13cb8:	cbnz	w8, 13cd4 <__cxa_demangle@@Base+0x14dc>
   13cbc:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13cc0:	add	x0, x0, #0xdd3
   13cc4:	mov	w1, #0x2                   	// #2
   13cc8:	mov	w2, #0x1                   	// #1
   13ccc:	bl	edd0 <fwrite@plt>
   13cd0:	b	13d18 <__cxa_demangle@@Base+0x1520>
   13cd4:	mov	w0, #0x2c                  	// #44
   13cd8:	mov	x1, x3
   13cdc:	bl	eb90 <fputc@plt>
   13ce0:	ldr	x1, [x24]
   13ce4:	mov	w0, #0xa                   	// #10
   13ce8:	bl	eb90 <fputc@plt>
   13cec:	ldr	w8, [x20]
   13cf0:	cbz	w8, 13d14 <__cxa_demangle@@Base+0x151c>
   13cf4:	mov	w21, wzr
   13cf8:	ldr	x1, [x24]
   13cfc:	mov	w0, #0x20                  	// #32
   13d00:	bl	eb90 <fputc@plt>
   13d04:	ldr	w8, [x20]
   13d08:	add	w21, w21, #0x1
   13d0c:	cmp	w21, w8
   13d10:	b.ne	13cf8 <__cxa_demangle@@Base+0x1500>  // b.any
   13d14:	strb	wzr, [x20, #4]
   13d18:	ldr	x0, [x24]
   13d1c:	sxtw	x2, w19
   13d20:	ldp	x20, x19, [sp, #64]
   13d24:	ldp	x22, x21, [sp, #48]
   13d28:	ldp	x24, x23, [sp, #32]
   13d2c:	ldr	x25, [sp, #16]
   13d30:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   13d34:	add	x1, x1, #0x1f1
   13d38:	ldp	x29, x30, [sp], #80
   13d3c:	b	ef00 <fprintf@plt>
   13d40:	sub	sp, sp, #0x70
   13d44:	stp	x29, x30, [sp, #16]
   13d48:	stp	x28, x27, [sp, #32]
   13d4c:	stp	x26, x25, [sp, #48]
   13d50:	stp	x24, x23, [sp, #64]
   13d54:	stp	x22, x21, [sp, #80]
   13d58:	stp	x20, x19, [sp, #96]
   13d5c:	add	x29, sp, #0x10
   13d60:	stp	x6, x5, [sp]
   13d64:	adrp	x20, 48000 <_ZTISt14overflow_error@@Base-0x20>
   13d68:	ldr	x20, [x20, #3856]
   13d6c:	mov	x22, x4
   13d70:	mov	x23, x3
   13d74:	mov	x24, x2
   13d78:	mov	x25, x1
   13d7c:	mov	x21, x0
   13d80:	orr	x8, x4, x2
   13d84:	cbz	x8, 13dc4 <__cxa_demangle@@Base+0x15cc>
   13d88:	ldr	x1, [x20]
   13d8c:	ldr	x26, [x21]
   13d90:	mov	w0, #0xa                   	// #10
   13d94:	bl	eb90 <fputc@plt>
   13d98:	ldr	w8, [x26]
   13d9c:	cbz	w8, 13dc0 <__cxa_demangle@@Base+0x15c8>
   13da0:	mov	w27, wzr
   13da4:	ldr	x1, [x20]
   13da8:	mov	w0, #0x20                  	// #32
   13dac:	bl	eb90 <fputc@plt>
   13db0:	ldr	w8, [x26]
   13db4:	add	w27, w27, #0x1
   13db8:	cmp	w27, w8
   13dbc:	b.ne	13da4 <__cxa_demangle@@Base+0x15ac>  // b.any
   13dc0:	strb	wzr, [x26, #4]
   13dc4:	ldr	x26, [x21]
   13dc8:	mov	w0, #0x7b                  	// #123
   13dcc:	ldr	w8, [x26]
   13dd0:	add	w8, w8, #0x1
   13dd4:	str	w8, [x26]
   13dd8:	ldr	x1, [x20]
   13ddc:	bl	eb90 <fputc@plt>
   13de0:	cbnz	x24, 13e00 <__cxa_demangle@@Base+0x1608>
   13de4:	ldr	x1, [x20]
   13de8:	mov	w0, #0x7d                  	// #125
   13dec:	bl	eb90 <fputc@plt>
   13df0:	ldr	w8, [x26]
   13df4:	sub	w8, w8, #0x1
   13df8:	str	w8, [x26]
   13dfc:	b	13eec <__cxa_demangle@@Base+0x16f4>
   13e00:	add	x27, x25, x24, lsl #3
   13e04:	mov	w8, #0x1                   	// #1
   13e08:	ldr	x28, [x25]
   13e0c:	tbz	w8, #0, 13e30 <__cxa_demangle@@Base+0x1638>
   13e10:	cbnz	x28, 13e94 <__cxa_demangle@@Base+0x169c>
   13e14:	ldr	x3, [x20]
   13e18:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13e1c:	mov	w1, #0x6                   	// #6
   13e20:	mov	w2, #0x1                   	// #1
   13e24:	add	x0, x0, #0xdcc
   13e28:	bl	edd0 <fwrite@plt>
   13e2c:	b	13eb8 <__cxa_demangle@@Base+0x16c0>
   13e30:	ldr	x1, [x20]
   13e34:	mov	w0, #0x2c                  	// #44
   13e38:	bl	eb90 <fputc@plt>
   13e3c:	ldr	x1, [x20]
   13e40:	mov	w0, #0xa                   	// #10
   13e44:	bl	eb90 <fputc@plt>
   13e48:	ldr	w8, [x26]
   13e4c:	cbz	w8, 13e70 <__cxa_demangle@@Base+0x1678>
   13e50:	mov	w19, wzr
   13e54:	ldr	x1, [x20]
   13e58:	mov	w0, #0x20                  	// #32
   13e5c:	bl	eb90 <fputc@plt>
   13e60:	ldr	w8, [x26]
   13e64:	add	w19, w19, #0x1
   13e68:	cmp	w19, w8
   13e6c:	b.ne	13e54 <__cxa_demangle@@Base+0x165c>  // b.any
   13e70:	strb	wzr, [x26, #4]
   13e74:	cbnz	x28, 13ea4 <__cxa_demangle@@Base+0x16ac>
   13e78:	ldr	x3, [x20]
   13e7c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13e80:	mov	w1, #0x6                   	// #6
   13e84:	mov	w2, #0x1                   	// #1
   13e88:	add	x0, x0, #0xdcc
   13e8c:	bl	edd0 <fwrite@plt>
   13e90:	b	13eb0 <__cxa_demangle@@Base+0x16b8>
   13e94:	mov	x0, x28
   13e98:	mov	x1, x26
   13e9c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   13ea0:	b	13eb8 <__cxa_demangle@@Base+0x16c0>
   13ea4:	mov	x0, x28
   13ea8:	mov	x1, x26
   13eac:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   13eb0:	mov	w8, #0x1                   	// #1
   13eb4:	strb	w8, [x26, #4]
   13eb8:	add	x25, x25, #0x8
   13ebc:	cmp	x25, x27
   13ec0:	mov	w8, wzr
   13ec4:	b.ne	13e08 <__cxa_demangle@@Base+0x1610>  // b.any
   13ec8:	ldr	x1, [x20]
   13ecc:	mov	w0, #0x7d                  	// #125
   13ed0:	bl	eb90 <fputc@plt>
   13ed4:	ldr	w8, [x26]
   13ed8:	sub	w8, w8, #0x1
   13edc:	str	w8, [x26]
   13ee0:	cbz	x24, 13eec <__cxa_demangle@@Base+0x16f4>
   13ee4:	mov	w8, #0x1                   	// #1
   13ee8:	strb	w8, [x26, #4]
   13eec:	ldr	x24, [x21]
   13ef0:	ldr	x3, [x20]
   13ef4:	cbnz	x22, 13f1c <__cxa_demangle@@Base+0x1724>
   13ef8:	ldrb	w8, [x24, #4]
   13efc:	cbnz	w8, 13f1c <__cxa_demangle@@Base+0x1724>
   13f00:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13f04:	add	x0, x0, #0xdd3
   13f08:	mov	w1, #0x2                   	// #2
   13f0c:	mov	w2, #0x1                   	// #1
   13f10:	bl	edd0 <fwrite@plt>
   13f14:	ldr	w25, [x24]
   13f18:	b	13f68 <__cxa_demangle@@Base+0x1770>
   13f1c:	mov	w0, #0x2c                  	// #44
   13f20:	mov	x1, x3
   13f24:	bl	eb90 <fputc@plt>
   13f28:	ldr	x1, [x20]
   13f2c:	mov	w0, #0xa                   	// #10
   13f30:	bl	eb90 <fputc@plt>
   13f34:	ldr	w8, [x24]
   13f38:	cbnz	w8, 13f44 <__cxa_demangle@@Base+0x174c>
   13f3c:	mov	w25, wzr
   13f40:	b	13f64 <__cxa_demangle@@Base+0x176c>
   13f44:	mov	w25, wzr
   13f48:	ldr	x1, [x20]
   13f4c:	mov	w0, #0x20                  	// #32
   13f50:	bl	eb90 <fputc@plt>
   13f54:	ldr	w8, [x24]
   13f58:	add	w25, w25, #0x1
   13f5c:	cmp	w25, w8
   13f60:	b.ne	13f48 <__cxa_demangle@@Base+0x1750>  // b.any
   13f64:	strb	wzr, [x24, #4]
   13f68:	add	w8, w25, #0x1
   13f6c:	str	w8, [x24]
   13f70:	ldr	x1, [x20]
   13f74:	mov	w0, #0x7b                  	// #123
   13f78:	bl	eb90 <fputc@plt>
   13f7c:	cbnz	x22, 13f9c <__cxa_demangle@@Base+0x17a4>
   13f80:	ldr	x1, [x20]
   13f84:	mov	w0, #0x7d                  	// #125
   13f88:	bl	eb90 <fputc@plt>
   13f8c:	ldr	w8, [x24]
   13f90:	sub	w8, w8, #0x1
   13f94:	str	w8, [x24]
   13f98:	b	14088 <__cxa_demangle@@Base+0x1890>
   13f9c:	adrp	x25, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   13fa0:	add	x27, x23, x22, lsl #3
   13fa4:	mov	w28, #0x1                   	// #1
   13fa8:	add	x25, x25, #0xdcc
   13fac:	mov	w8, #0x1                   	// #1
   13fb0:	ldr	x26, [x23]
   13fb4:	tbz	w8, #0, 13fd4 <__cxa_demangle@@Base+0x17dc>
   13fb8:	cbnz	x26, 14034 <__cxa_demangle@@Base+0x183c>
   13fbc:	ldr	x3, [x20]
   13fc0:	mov	w1, #0x6                   	// #6
   13fc4:	mov	w2, #0x1                   	// #1
   13fc8:	mov	x0, x25
   13fcc:	bl	edd0 <fwrite@plt>
   13fd0:	b	14054 <__cxa_demangle@@Base+0x185c>
   13fd4:	ldr	x1, [x20]
   13fd8:	mov	w0, #0x2c                  	// #44
   13fdc:	bl	eb90 <fputc@plt>
   13fe0:	ldr	x1, [x20]
   13fe4:	mov	w0, #0xa                   	// #10
   13fe8:	bl	eb90 <fputc@plt>
   13fec:	ldr	w8, [x24]
   13ff0:	cbz	w8, 14014 <__cxa_demangle@@Base+0x181c>
   13ff4:	mov	w19, wzr
   13ff8:	ldr	x1, [x20]
   13ffc:	mov	w0, #0x20                  	// #32
   14000:	bl	eb90 <fputc@plt>
   14004:	ldr	w8, [x24]
   14008:	add	w19, w19, #0x1
   1400c:	cmp	w19, w8
   14010:	b.ne	13ff8 <__cxa_demangle@@Base+0x1800>  // b.any
   14014:	strb	wzr, [x24, #4]
   14018:	cbnz	x26, 14044 <__cxa_demangle@@Base+0x184c>
   1401c:	ldr	x3, [x20]
   14020:	mov	w1, #0x6                   	// #6
   14024:	mov	w2, #0x1                   	// #1
   14028:	mov	x0, x25
   1402c:	bl	edd0 <fwrite@plt>
   14030:	b	14050 <__cxa_demangle@@Base+0x1858>
   14034:	mov	x0, x26
   14038:	mov	x1, x24
   1403c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14040:	b	14054 <__cxa_demangle@@Base+0x185c>
   14044:	mov	x0, x26
   14048:	mov	x1, x24
   1404c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14050:	strb	w28, [x24, #4]
   14054:	add	x23, x23, #0x8
   14058:	cmp	x23, x27
   1405c:	mov	w8, wzr
   14060:	b.ne	13fb0 <__cxa_demangle@@Base+0x17b8>  // b.any
   14064:	ldr	x1, [x20]
   14068:	mov	w0, #0x7d                  	// #125
   1406c:	bl	eb90 <fputc@plt>
   14070:	ldr	w8, [x24]
   14074:	sub	w8, w8, #0x1
   14078:	str	w8, [x24]
   1407c:	cbz	x22, 14088 <__cxa_demangle@@Base+0x1890>
   14080:	mov	w8, #0x1                   	// #1
   14084:	strb	w8, [x24, #4]
   14088:	ldr	x21, [x21]
   1408c:	ldr	x3, [x20]
   14090:	ldrb	w8, [x21, #4]
   14094:	cbnz	w8, 140b0 <__cxa_demangle@@Base+0x18b8>
   14098:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1409c:	add	x0, x0, #0xdd3
   140a0:	mov	w1, #0x2                   	// #2
   140a4:	mov	w2, #0x1                   	// #1
   140a8:	bl	edd0 <fwrite@plt>
   140ac:	b	140f4 <__cxa_demangle@@Base+0x18fc>
   140b0:	mov	w0, #0x2c                  	// #44
   140b4:	mov	x1, x3
   140b8:	bl	eb90 <fputc@plt>
   140bc:	ldr	x1, [x20]
   140c0:	mov	w0, #0xa                   	// #10
   140c4:	bl	eb90 <fputc@plt>
   140c8:	ldr	w8, [x21]
   140cc:	cbz	w8, 140f0 <__cxa_demangle@@Base+0x18f8>
   140d0:	mov	w19, wzr
   140d4:	ldr	x1, [x20]
   140d8:	mov	w0, #0x20                  	// #32
   140dc:	bl	eb90 <fputc@plt>
   140e0:	ldr	w8, [x21]
   140e4:	add	w19, w19, #0x1
   140e8:	cmp	w19, w8
   140ec:	b.ne	140d4 <__cxa_demangle@@Base+0x18dc>  // b.any
   140f0:	strb	wzr, [x21, #4]
   140f4:	ldp	x8, x3, [sp]
   140f8:	ldr	x0, [x20]
   140fc:	ldp	x20, x19, [sp, #96]
   14100:	ldp	x22, x21, [sp, #80]
   14104:	ldp	x24, x23, [sp, #64]
   14108:	ldp	x26, x25, [sp, #48]
   1410c:	ldp	x28, x27, [sp, #32]
   14110:	ldp	x29, x30, [sp, #16]
   14114:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14118:	sub	w2, w8, w3
   1411c:	add	x1, x1, #0xde0
   14120:	add	sp, sp, #0x70
   14124:	b	ef00 <fprintf@plt>
   14128:	stp	x29, x30, [sp, #-96]!
   1412c:	str	x27, [sp, #16]
   14130:	stp	x26, x25, [sp, #32]
   14134:	stp	x24, x23, [sp, #48]
   14138:	stp	x22, x21, [sp, #64]
   1413c:	stp	x20, x19, [sp, #80]
   14140:	mov	x29, sp
   14144:	adrp	x25, 48000 <_ZTISt14overflow_error@@Base-0x20>
   14148:	ldr	x26, [x0]
   1414c:	ldr	x25, [x25, #3856]
   14150:	mov	x21, x0
   14154:	mov	x24, x1
   14158:	mov	w0, #0xa                   	// #10
   1415c:	ldr	x8, [x25]
   14160:	mov	x20, x5
   14164:	mov	x19, x4
   14168:	mov	x22, x3
   1416c:	mov	x1, x8
   14170:	mov	x23, x2
   14174:	bl	eb90 <fputc@plt>
   14178:	ldr	w8, [x26]
   1417c:	cbz	w8, 141a0 <__cxa_demangle@@Base+0x19a8>
   14180:	mov	w27, wzr
   14184:	ldr	x1, [x25]
   14188:	mov	w0, #0x20                  	// #32
   1418c:	bl	eb90 <fputc@plt>
   14190:	ldr	w8, [x26]
   14194:	add	w27, w27, #0x1
   14198:	cmp	w27, w8
   1419c:	b.ne	14184 <__cxa_demangle@@Base+0x198c>  // b.any
   141a0:	strb	wzr, [x26, #4]
   141a4:	ldr	x0, [x25]
   141a8:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   141ac:	sub	w2, w23, w24
   141b0:	add	x1, x1, #0xde0
   141b4:	mov	x3, x24
   141b8:	bl	ef00 <fprintf@plt>
   141bc:	ldr	x1, [x25]
   141c0:	ldr	x23, [x21]
   141c4:	mov	w0, #0x2c                  	// #44
   141c8:	bl	eb90 <fputc@plt>
   141cc:	ldr	x1, [x25]
   141d0:	mov	w0, #0xa                   	// #10
   141d4:	bl	eb90 <fputc@plt>
   141d8:	ldr	w8, [x23]
   141dc:	cbz	w8, 14200 <__cxa_demangle@@Base+0x1a08>
   141e0:	mov	w24, wzr
   141e4:	ldr	x1, [x25]
   141e8:	mov	w0, #0x20                  	// #32
   141ec:	bl	eb90 <fputc@plt>
   141f0:	ldr	w8, [x23]
   141f4:	add	w24, w24, #0x1
   141f8:	cmp	w24, w8
   141fc:	b.ne	141e4 <__cxa_demangle@@Base+0x19ec>  // b.any
   14200:	strb	wzr, [x23, #4]
   14204:	cbnz	x22, 14224 <__cxa_demangle@@Base+0x1a2c>
   14208:	ldr	x3, [x25]
   1420c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14210:	add	x0, x0, #0xdcc
   14214:	mov	w1, #0x6                   	// #6
   14218:	mov	w2, #0x1                   	// #1
   1421c:	bl	edd0 <fwrite@plt>
   14220:	b	14230 <__cxa_demangle@@Base+0x1a38>
   14224:	mov	x0, x22
   14228:	mov	x1, x23
   1422c:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14230:	mov	w8, #0x1                   	// #1
   14234:	strb	w8, [x23, #4]
   14238:	ldr	x21, [x21]
   1423c:	ldr	x3, [x25]
   14240:	ldrb	w8, [x21, #4]
   14244:	cbnz	w8, 14260 <__cxa_demangle@@Base+0x1a68>
   14248:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1424c:	add	x0, x0, #0xdd3
   14250:	mov	w1, #0x2                   	// #2
   14254:	mov	w2, #0x1                   	// #1
   14258:	bl	edd0 <fwrite@plt>
   1425c:	b	142a4 <__cxa_demangle@@Base+0x1aac>
   14260:	mov	w0, #0x2c                  	// #44
   14264:	mov	x1, x3
   14268:	bl	eb90 <fputc@plt>
   1426c:	ldr	x1, [x25]
   14270:	mov	w0, #0xa                   	// #10
   14274:	bl	eb90 <fputc@plt>
   14278:	ldr	w8, [x21]
   1427c:	cbz	w8, 142a0 <__cxa_demangle@@Base+0x1aa8>
   14280:	mov	w22, wzr
   14284:	ldr	x1, [x25]
   14288:	mov	w0, #0x20                  	// #32
   1428c:	bl	eb90 <fputc@plt>
   14290:	ldr	w8, [x21]
   14294:	add	w22, w22, #0x1
   14298:	cmp	w22, w8
   1429c:	b.ne	14284 <__cxa_demangle@@Base+0x1a8c>  // b.any
   142a0:	strb	wzr, [x21, #4]
   142a4:	ldr	x0, [x25]
   142a8:	sub	w2, w20, w19
   142ac:	mov	x3, x19
   142b0:	ldp	x20, x19, [sp, #80]
   142b4:	ldp	x22, x21, [sp, #64]
   142b8:	ldp	x24, x23, [sp, #48]
   142bc:	ldp	x26, x25, [sp, #32]
   142c0:	ldr	x27, [sp, #16]
   142c4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   142c8:	add	x1, x1, #0xde0
   142cc:	ldp	x29, x30, [sp], #96
   142d0:	b	ef00 <fprintf@plt>
   142d4:	stp	x29, x30, [sp, #-80]!
   142d8:	stp	x26, x25, [sp, #16]
   142dc:	stp	x24, x23, [sp, #32]
   142e0:	stp	x22, x21, [sp, #48]
   142e4:	stp	x20, x19, [sp, #64]
   142e8:	mov	x29, sp
   142ec:	adrp	x24, 48000 <_ZTISt14overflow_error@@Base-0x20>
   142f0:	ldr	x25, [x0]
   142f4:	ldr	x24, [x24, #3856]
   142f8:	mov	x20, x0
   142fc:	mov	x23, x1
   14300:	mov	w0, #0xa                   	// #10
   14304:	ldr	x8, [x24]
   14308:	mov	x19, x4
   1430c:	mov	x21, x3
   14310:	mov	x22, x2
   14314:	mov	x1, x8
   14318:	bl	eb90 <fputc@plt>
   1431c:	ldr	w8, [x25]
   14320:	cbz	w8, 14344 <__cxa_demangle@@Base+0x1b4c>
   14324:	mov	w26, wzr
   14328:	ldr	x1, [x24]
   1432c:	mov	w0, #0x20                  	// #32
   14330:	bl	eb90 <fputc@plt>
   14334:	ldr	w8, [x25]
   14338:	add	w26, w26, #0x1
   1433c:	cmp	w26, w8
   14340:	b.ne	14328 <__cxa_demangle@@Base+0x1b30>  // b.any
   14344:	strb	wzr, [x25, #4]
   14348:	ldr	x0, [x24]
   1434c:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14350:	sub	w2, w22, w23
   14354:	add	x1, x1, #0xde0
   14358:	mov	x3, x23
   1435c:	bl	ef00 <fprintf@plt>
   14360:	ldr	x1, [x24]
   14364:	ldr	x22, [x20]
   14368:	mov	w0, #0x2c                  	// #44
   1436c:	bl	eb90 <fputc@plt>
   14370:	ldr	x1, [x24]
   14374:	mov	w0, #0xa                   	// #10
   14378:	bl	eb90 <fputc@plt>
   1437c:	ldr	w8, [x22]
   14380:	cbz	w8, 143a4 <__cxa_demangle@@Base+0x1bac>
   14384:	mov	w23, wzr
   14388:	ldr	x1, [x24]
   1438c:	mov	w0, #0x20                  	// #32
   14390:	bl	eb90 <fputc@plt>
   14394:	ldr	w8, [x22]
   14398:	add	w23, w23, #0x1
   1439c:	cmp	w23, w8
   143a0:	b.ne	14388 <__cxa_demangle@@Base+0x1b90>  // b.any
   143a4:	strb	wzr, [x22, #4]
   143a8:	cbnz	x21, 143c8 <__cxa_demangle@@Base+0x1bd0>
   143ac:	ldr	x3, [x24]
   143b0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   143b4:	add	x0, x0, #0xdcc
   143b8:	mov	w1, #0x6                   	// #6
   143bc:	mov	w2, #0x1                   	// #1
   143c0:	bl	edd0 <fwrite@plt>
   143c4:	b	143d4 <__cxa_demangle@@Base+0x1bdc>
   143c8:	mov	x0, x21
   143cc:	mov	x1, x22
   143d0:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   143d4:	mov	w8, #0x1                   	// #1
   143d8:	strb	w8, [x22, #4]
   143dc:	ldr	x1, [x24]
   143e0:	ldr	x20, [x20]
   143e4:	mov	w0, #0x2c                  	// #44
   143e8:	bl	eb90 <fputc@plt>
   143ec:	ldr	x1, [x24]
   143f0:	mov	w0, #0xa                   	// #10
   143f4:	bl	eb90 <fputc@plt>
   143f8:	ldr	w8, [x20]
   143fc:	cbnz	w8, 14434 <__cxa_demangle@@Base+0x1c3c>
   14400:	strb	wzr, [x20, #4]
   14404:	cbz	x19, 14458 <__cxa_demangle@@Base+0x1c60>
   14408:	mov	x0, x19
   1440c:	mov	x1, x20
   14410:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14414:	mov	w8, #0x1                   	// #1
   14418:	strb	w8, [x20, #4]
   1441c:	ldp	x20, x19, [sp, #64]
   14420:	ldp	x22, x21, [sp, #48]
   14424:	ldp	x24, x23, [sp, #32]
   14428:	ldp	x26, x25, [sp, #16]
   1442c:	ldp	x29, x30, [sp], #80
   14430:	ret
   14434:	mov	w21, wzr
   14438:	ldr	x1, [x24]
   1443c:	mov	w0, #0x20                  	// #32
   14440:	bl	eb90 <fputc@plt>
   14444:	ldr	w8, [x20]
   14448:	add	w21, w21, #0x1
   1444c:	cmp	w21, w8
   14450:	b.eq	14400 <__cxa_demangle@@Base+0x1c08>  // b.none
   14454:	b	14438 <__cxa_demangle@@Base+0x1c40>
   14458:	ldr	x3, [x24]
   1445c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14460:	add	x0, x0, #0xdcc
   14464:	mov	w1, #0x6                   	// #6
   14468:	mov	w2, #0x1                   	// #1
   1446c:	bl	edd0 <fwrite@plt>
   14470:	b	14414 <__cxa_demangle@@Base+0x1c1c>
   14474:	stp	x29, x30, [sp, #-80]!
   14478:	str	x25, [sp, #16]
   1447c:	stp	x24, x23, [sp, #32]
   14480:	stp	x22, x21, [sp, #48]
   14484:	stp	x20, x19, [sp, #64]
   14488:	mov	x29, sp
   1448c:	adrp	x24, 48000 <_ZTISt14overflow_error@@Base-0x20>
   14490:	ldr	x23, [x0]
   14494:	ldr	x24, [x24, #3856]
   14498:	mov	x21, x0
   1449c:	mov	x22, x1
   144a0:	mov	w0, #0xa                   	// #10
   144a4:	ldr	x8, [x24]
   144a8:	mov	x19, x3
   144ac:	mov	x20, x2
   144b0:	mov	x1, x8
   144b4:	bl	eb90 <fputc@plt>
   144b8:	ldr	w8, [x23]
   144bc:	cbz	w8, 144e0 <__cxa_demangle@@Base+0x1ce8>
   144c0:	mov	w25, wzr
   144c4:	ldr	x1, [x24]
   144c8:	mov	w0, #0x20                  	// #32
   144cc:	bl	eb90 <fputc@plt>
   144d0:	ldr	w8, [x23]
   144d4:	add	w25, w25, #0x1
   144d8:	cmp	w25, w8
   144dc:	b.ne	144c4 <__cxa_demangle@@Base+0x1ccc>  // b.any
   144e0:	strb	wzr, [x23, #4]
   144e4:	ldr	x23, [x21]
   144e8:	cbnz	x22, 14508 <__cxa_demangle@@Base+0x1d10>
   144ec:	ldr	x3, [x24]
   144f0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   144f4:	add	x0, x0, #0xdcc
   144f8:	mov	w1, #0x6                   	// #6
   144fc:	mov	w2, #0x1                   	// #1
   14500:	bl	edd0 <fwrite@plt>
   14504:	b	14514 <__cxa_demangle@@Base+0x1d1c>
   14508:	mov	x0, x22
   1450c:	mov	x1, x23
   14510:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14514:	mov	w8, #0x1                   	// #1
   14518:	strb	w8, [x23, #4]
   1451c:	ldr	x21, [x21]
   14520:	ldr	x3, [x24]
   14524:	cbnz	x19, 14568 <__cxa_demangle@@Base+0x1d70>
   14528:	ldrb	w8, [x21, #4]
   1452c:	cbnz	w8, 14568 <__cxa_demangle@@Base+0x1d70>
   14530:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14534:	add	x0, x0, #0xdd3
   14538:	mov	w1, #0x2                   	// #2
   1453c:	mov	w2, #0x1                   	// #1
   14540:	bl	edd0 <fwrite@plt>
   14544:	mov	x0, x21
   14548:	mov	x1, x20
   1454c:	mov	x2, x19
   14550:	ldp	x20, x19, [sp, #64]
   14554:	ldp	x22, x21, [sp, #48]
   14558:	ldp	x24, x23, [sp, #32]
   1455c:	ldr	x25, [sp, #16]
   14560:	ldp	x29, x30, [sp], #80
   14564:	b	12ffc <__cxa_demangle@@Base+0x804>
   14568:	mov	w0, #0x2c                  	// #44
   1456c:	mov	x1, x3
   14570:	bl	eb90 <fputc@plt>
   14574:	ldr	x1, [x24]
   14578:	mov	w0, #0xa                   	// #10
   1457c:	bl	eb90 <fputc@plt>
   14580:	ldr	w8, [x21]
   14584:	cbnz	w8, 145c0 <__cxa_demangle@@Base+0x1dc8>
   14588:	mov	x0, x21
   1458c:	mov	x1, x20
   14590:	mov	x2, x19
   14594:	strb	wzr, [x21, #4]
   14598:	bl	12ffc <__cxa_demangle@@Base+0x804>
   1459c:	cbz	x19, 145a8 <__cxa_demangle@@Base+0x1db0>
   145a0:	mov	w8, #0x1                   	// #1
   145a4:	strb	w8, [x21, #4]
   145a8:	ldp	x20, x19, [sp, #64]
   145ac:	ldp	x22, x21, [sp, #48]
   145b0:	ldp	x24, x23, [sp, #32]
   145b4:	ldr	x25, [sp, #16]
   145b8:	ldp	x29, x30, [sp], #80
   145bc:	ret
   145c0:	mov	w22, wzr
   145c4:	ldr	x1, [x24]
   145c8:	mov	w0, #0x20                  	// #32
   145cc:	bl	eb90 <fputc@plt>
   145d0:	ldr	w8, [x21]
   145d4:	add	w22, w22, #0x1
   145d8:	cmp	w22, w8
   145dc:	b.eq	14588 <__cxa_demangle@@Base+0x1d90>  // b.none
   145e0:	b	145c4 <__cxa_demangle@@Base+0x1dcc>
   145e4:	sub	sp, sp, #0x70
   145e8:	stp	x29, x30, [sp, #16]
   145ec:	stp	x28, x27, [sp, #32]
   145f0:	stp	x26, x25, [sp, #48]
   145f4:	stp	x24, x23, [sp, #64]
   145f8:	stp	x22, x21, [sp, #80]
   145fc:	stp	x20, x19, [sp, #96]
   14600:	add	x29, sp, #0x10
   14604:	stur	w6, [x29, #-4]
   14608:	adrp	x20, 48000 <_ZTISt14overflow_error@@Base-0x20>
   1460c:	ldr	x19, [x0]
   14610:	ldr	x20, [x20, #3856]
   14614:	mov	x21, x0
   14618:	mov	x26, x1
   1461c:	mov	w0, #0xa                   	// #10
   14620:	ldr	x8, [x20]
   14624:	mov	w28, w7
   14628:	mov	x22, x5
   1462c:	mov	x23, x4
   14630:	mov	x1, x8
   14634:	mov	x24, x3
   14638:	mov	x25, x2
   1463c:	bl	eb90 <fputc@plt>
   14640:	ldr	w8, [x19]
   14644:	cbz	w8, 14668 <__cxa_demangle@@Base+0x1e70>
   14648:	mov	w27, wzr
   1464c:	ldr	x1, [x20]
   14650:	mov	w0, #0x20                  	// #32
   14654:	bl	eb90 <fputc@plt>
   14658:	ldr	w8, [x19]
   1465c:	add	w27, w27, #0x1
   14660:	cmp	w27, w8
   14664:	b.ne	1464c <__cxa_demangle@@Base+0x1e54>  // b.any
   14668:	strb	wzr, [x19, #4]
   1466c:	ldr	x27, [x21]
   14670:	mov	w0, #0x7b                  	// #123
   14674:	ldr	w8, [x27]
   14678:	add	w8, w8, #0x1
   1467c:	str	w8, [x27]
   14680:	ldr	x1, [x20]
   14684:	bl	eb90 <fputc@plt>
   14688:	cbnz	x25, 146a8 <__cxa_demangle@@Base+0x1eb0>
   1468c:	ldr	x1, [x20]
   14690:	mov	w0, #0x7d                  	// #125
   14694:	bl	eb90 <fputc@plt>
   14698:	ldr	w8, [x27]
   1469c:	sub	w8, w8, #0x1
   146a0:	str	w8, [x27]
   146a4:	b	147b4 <__cxa_demangle@@Base+0x1fbc>
   146a8:	str	w28, [sp, #8]
   146ac:	add	x28, x26, x25, lsl #3
   146b0:	mov	w8, #0x1                   	// #1
   146b4:	ldr	x19, [x26]
   146b8:	tbz	w8, #0, 146dc <__cxa_demangle@@Base+0x1ee4>
   146bc:	cbnz	x19, 1474c <__cxa_demangle@@Base+0x1f54>
   146c0:	ldr	x3, [x20]
   146c4:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   146c8:	mov	w1, #0x6                   	// #6
   146cc:	mov	w2, #0x1                   	// #1
   146d0:	add	x0, x0, #0xdcc
   146d4:	bl	edd0 <fwrite@plt>
   146d8:	b	1477c <__cxa_demangle@@Base+0x1f84>
   146dc:	ldr	x1, [x20]
   146e0:	mov	w0, #0x2c                  	// #44
   146e4:	str	x28, [sp]
   146e8:	mov	x28, x24
   146ec:	mov	x24, x22
   146f0:	bl	eb90 <fputc@plt>
   146f4:	ldr	x1, [x20]
   146f8:	mov	w0, #0xa                   	// #10
   146fc:	bl	eb90 <fputc@plt>
   14700:	ldr	w8, [x27]
   14704:	cbz	w8, 14728 <__cxa_demangle@@Base+0x1f30>
   14708:	mov	w22, wzr
   1470c:	ldr	x1, [x20]
   14710:	mov	w0, #0x20                  	// #32
   14714:	bl	eb90 <fputc@plt>
   14718:	ldr	w8, [x27]
   1471c:	add	w22, w22, #0x1
   14720:	cmp	w22, w8
   14724:	b.ne	1470c <__cxa_demangle@@Base+0x1f14>  // b.any
   14728:	strb	wzr, [x27, #4]
   1472c:	cbnz	x19, 1475c <__cxa_demangle@@Base+0x1f64>
   14730:	ldr	x3, [x20]
   14734:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14738:	mov	w1, #0x6                   	// #6
   1473c:	mov	w2, #0x1                   	// #1
   14740:	add	x0, x0, #0xdcc
   14744:	bl	edd0 <fwrite@plt>
   14748:	b	14768 <__cxa_demangle@@Base+0x1f70>
   1474c:	mov	x0, x19
   14750:	mov	x1, x27
   14754:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14758:	b	1477c <__cxa_demangle@@Base+0x1f84>
   1475c:	mov	x0, x19
   14760:	mov	x1, x27
   14764:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14768:	mov	x22, x24
   1476c:	mov	x24, x28
   14770:	ldr	x28, [sp]
   14774:	mov	w8, #0x1                   	// #1
   14778:	strb	w8, [x27, #4]
   1477c:	add	x26, x26, #0x8
   14780:	cmp	x26, x28
   14784:	mov	w8, wzr
   14788:	b.ne	146b4 <__cxa_demangle@@Base+0x1ebc>  // b.any
   1478c:	ldr	x1, [x20]
   14790:	mov	w0, #0x7d                  	// #125
   14794:	bl	eb90 <fputc@plt>
   14798:	ldr	w8, [x27]
   1479c:	ldr	w28, [sp, #8]
   147a0:	sub	w8, w8, #0x1
   147a4:	str	w8, [x27]
   147a8:	cbz	x25, 147b4 <__cxa_demangle@@Base+0x1fbc>
   147ac:	mov	w8, #0x1                   	// #1
   147b0:	strb	w8, [x27, #4]
   147b4:	ldr	x1, [x20]
   147b8:	ldr	x25, [x21]
   147bc:	mov	w0, #0x2c                  	// #44
   147c0:	bl	eb90 <fputc@plt>
   147c4:	ldr	x1, [x20]
   147c8:	mov	w0, #0xa                   	// #10
   147cc:	bl	eb90 <fputc@plt>
   147d0:	ldr	w8, [x25]
   147d4:	cbz	w8, 147f8 <__cxa_demangle@@Base+0x2000>
   147d8:	mov	w19, wzr
   147dc:	ldr	x1, [x20]
   147e0:	mov	w0, #0x20                  	// #32
   147e4:	bl	eb90 <fputc@plt>
   147e8:	ldr	w8, [x25]
   147ec:	add	w19, w19, #0x1
   147f0:	cmp	w19, w8
   147f4:	b.ne	147dc <__cxa_demangle@@Base+0x1fe4>  // b.any
   147f8:	strb	wzr, [x25, #4]
   147fc:	cbnz	x24, 1481c <__cxa_demangle@@Base+0x2024>
   14800:	ldr	x3, [x20]
   14804:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14808:	add	x0, x0, #0xdcc
   1480c:	mov	w1, #0x6                   	// #6
   14810:	mov	w2, #0x1                   	// #1
   14814:	bl	edd0 <fwrite@plt>
   14818:	b	14828 <__cxa_demangle@@Base+0x2030>
   1481c:	mov	x0, x24
   14820:	mov	x1, x25
   14824:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14828:	mov	w8, #0x1                   	// #1
   1482c:	strb	w8, [x25, #4]
   14830:	ldr	x24, [x21]
   14834:	ldr	x3, [x20]
   14838:	cbnz	x22, 14860 <__cxa_demangle@@Base+0x2068>
   1483c:	ldrb	w8, [x24, #4]
   14840:	cbnz	w8, 14860 <__cxa_demangle@@Base+0x2068>
   14844:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14848:	add	x0, x0, #0xdd3
   1484c:	mov	w1, #0x2                   	// #2
   14850:	mov	w2, #0x1                   	// #1
   14854:	bl	edd0 <fwrite@plt>
   14858:	ldr	w19, [x24]
   1485c:	b	148ac <__cxa_demangle@@Base+0x20b4>
   14860:	mov	w0, #0x2c                  	// #44
   14864:	mov	x1, x3
   14868:	bl	eb90 <fputc@plt>
   1486c:	ldr	x1, [x20]
   14870:	mov	w0, #0xa                   	// #10
   14874:	bl	eb90 <fputc@plt>
   14878:	ldr	w8, [x24]
   1487c:	cbnz	w8, 14888 <__cxa_demangle@@Base+0x2090>
   14880:	mov	w19, wzr
   14884:	b	148a8 <__cxa_demangle@@Base+0x20b0>
   14888:	mov	w19, wzr
   1488c:	ldr	x1, [x20]
   14890:	mov	w0, #0x20                  	// #32
   14894:	bl	eb90 <fputc@plt>
   14898:	ldr	w8, [x24]
   1489c:	add	w19, w19, #0x1
   148a0:	cmp	w19, w8
   148a4:	b.ne	1488c <__cxa_demangle@@Base+0x2094>  // b.any
   148a8:	strb	wzr, [x24, #4]
   148ac:	add	w8, w19, #0x1
   148b0:	str	w8, [x24]
   148b4:	ldr	x1, [x20]
   148b8:	mov	w0, #0x7b                  	// #123
   148bc:	bl	eb90 <fputc@plt>
   148c0:	cbnz	x22, 148e0 <__cxa_demangle@@Base+0x20e8>
   148c4:	ldr	x1, [x20]
   148c8:	mov	w0, #0x7d                  	// #125
   148cc:	bl	eb90 <fputc@plt>
   148d0:	ldr	w8, [x24]
   148d4:	sub	w8, w8, #0x1
   148d8:	str	w8, [x24]
   148dc:	b	149d4 <__cxa_demangle@@Base+0x21dc>
   148e0:	adrp	x25, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   148e4:	add	x26, x23, x22, lsl #3
   148e8:	add	x25, x25, #0xdcc
   148ec:	mov	w8, #0x1                   	// #1
   148f0:	ldr	x19, [x23]
   148f4:	tbz	w8, #0, 14914 <__cxa_demangle@@Base+0x211c>
   148f8:	cbnz	x19, 14978 <__cxa_demangle@@Base+0x2180>
   148fc:	ldr	x3, [x20]
   14900:	mov	w1, #0x6                   	// #6
   14904:	mov	w2, #0x1                   	// #1
   14908:	mov	x0, x25
   1490c:	bl	edd0 <fwrite@plt>
   14910:	b	149a0 <__cxa_demangle@@Base+0x21a8>
   14914:	ldr	x1, [x20]
   14918:	mov	w0, #0x2c                  	// #44
   1491c:	mov	x27, x22
   14920:	bl	eb90 <fputc@plt>
   14924:	ldr	x1, [x20]
   14928:	mov	w0, #0xa                   	// #10
   1492c:	bl	eb90 <fputc@plt>
   14930:	ldr	w8, [x24]
   14934:	cbz	w8, 14958 <__cxa_demangle@@Base+0x2160>
   14938:	mov	w22, wzr
   1493c:	ldr	x1, [x20]
   14940:	mov	w0, #0x20                  	// #32
   14944:	bl	eb90 <fputc@plt>
   14948:	ldr	w8, [x24]
   1494c:	add	w22, w22, #0x1
   14950:	cmp	w22, w8
   14954:	b.ne	1493c <__cxa_demangle@@Base+0x2144>  // b.any
   14958:	strb	wzr, [x24, #4]
   1495c:	cbnz	x19, 14988 <__cxa_demangle@@Base+0x2190>
   14960:	ldr	x3, [x20]
   14964:	mov	w1, #0x6                   	// #6
   14968:	mov	w2, #0x1                   	// #1
   1496c:	mov	x0, x25
   14970:	bl	edd0 <fwrite@plt>
   14974:	b	14994 <__cxa_demangle@@Base+0x219c>
   14978:	mov	x0, x19
   1497c:	mov	x1, x24
   14980:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14984:	b	149a0 <__cxa_demangle@@Base+0x21a8>
   14988:	mov	x0, x19
   1498c:	mov	x1, x24
   14990:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14994:	mov	x22, x27
   14998:	mov	w8, #0x1                   	// #1
   1499c:	strb	w8, [x24, #4]
   149a0:	add	x23, x23, #0x8
   149a4:	cmp	x23, x26
   149a8:	mov	w8, wzr
   149ac:	b.ne	148f0 <__cxa_demangle@@Base+0x20f8>  // b.any
   149b0:	ldr	x1, [x20]
   149b4:	mov	w0, #0x7d                  	// #125
   149b8:	bl	eb90 <fputc@plt>
   149bc:	ldr	w8, [x24]
   149c0:	sub	w8, w8, #0x1
   149c4:	str	w8, [x24]
   149c8:	cbz	x22, 149d4 <__cxa_demangle@@Base+0x21dc>
   149cc:	mov	w8, #0x1                   	// #1
   149d0:	strb	w8, [x24, #4]
   149d4:	ldr	x19, [x21]
   149d8:	ldr	x3, [x20]
   149dc:	ldrb	w8, [x19, #4]
   149e0:	cbnz	w8, 149fc <__cxa_demangle@@Base+0x2204>
   149e4:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   149e8:	add	x0, x0, #0xdd3
   149ec:	mov	w1, #0x2                   	// #2
   149f0:	mov	w2, #0x1                   	// #1
   149f4:	bl	edd0 <fwrite@plt>
   149f8:	b	14a40 <__cxa_demangle@@Base+0x2248>
   149fc:	mov	w0, #0x2c                  	// #44
   14a00:	mov	x1, x3
   14a04:	bl	eb90 <fputc@plt>
   14a08:	ldr	x1, [x20]
   14a0c:	mov	w0, #0xa                   	// #10
   14a10:	bl	eb90 <fputc@plt>
   14a14:	ldr	w8, [x19]
   14a18:	cbz	w8, 14a3c <__cxa_demangle@@Base+0x2244>
   14a1c:	mov	w22, wzr
   14a20:	ldr	x1, [x20]
   14a24:	mov	w0, #0x20                  	// #32
   14a28:	bl	eb90 <fputc@plt>
   14a2c:	ldr	w8, [x19]
   14a30:	add	w22, w22, #0x1
   14a34:	cmp	w22, w8
   14a38:	b.ne	14a20 <__cxa_demangle@@Base+0x2228>  // b.any
   14a3c:	strb	wzr, [x19, #4]
   14a40:	ldur	w8, [x29, #-4]
   14a44:	ldr	x1, [x20]
   14a48:	adrp	x19, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   14a4c:	adrp	x22, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   14a50:	add	x19, x19, #0x1eb
   14a54:	add	x22, x22, #0x1e6
   14a58:	tst	w8, #0x1
   14a5c:	csel	x0, x22, x19, ne  // ne = any
   14a60:	bl	eb10 <fputs@plt>
   14a64:	ldr	x21, [x21]
   14a68:	ldr	x3, [x20]
   14a6c:	ldrb	w8, [x21, #4]
   14a70:	cbnz	w8, 14a8c <__cxa_demangle@@Base+0x2294>
   14a74:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14a78:	add	x0, x0, #0xdd3
   14a7c:	mov	w1, #0x2                   	// #2
   14a80:	mov	w2, #0x1                   	// #1
   14a84:	bl	edd0 <fwrite@plt>
   14a88:	b	14ad0 <__cxa_demangle@@Base+0x22d8>
   14a8c:	mov	w0, #0x2c                  	// #44
   14a90:	mov	x1, x3
   14a94:	bl	eb90 <fputc@plt>
   14a98:	ldr	x1, [x20]
   14a9c:	mov	w0, #0xa                   	// #10
   14aa0:	bl	eb90 <fputc@plt>
   14aa4:	ldr	w8, [x21]
   14aa8:	cbz	w8, 14acc <__cxa_demangle@@Base+0x22d4>
   14aac:	mov	w23, wzr
   14ab0:	ldr	x1, [x20]
   14ab4:	mov	w0, #0x20                  	// #32
   14ab8:	bl	eb90 <fputc@plt>
   14abc:	ldr	w8, [x21]
   14ac0:	add	w23, w23, #0x1
   14ac4:	cmp	w23, w8
   14ac8:	b.ne	14ab0 <__cxa_demangle@@Base+0x22b8>  // b.any
   14acc:	strb	wzr, [x21, #4]
   14ad0:	tst	w28, #0x1
   14ad4:	ldr	x1, [x20]
   14ad8:	csel	x0, x22, x19, ne  // ne = any
   14adc:	ldp	x20, x19, [sp, #96]
   14ae0:	ldp	x22, x21, [sp, #80]
   14ae4:	ldp	x24, x23, [sp, #64]
   14ae8:	ldp	x26, x25, [sp, #48]
   14aec:	ldp	x28, x27, [sp, #32]
   14af0:	ldp	x29, x30, [sp, #16]
   14af4:	add	sp, sp, #0x70
   14af8:	b	eb10 <fputs@plt>
   14afc:	stp	x29, x30, [sp, #-80]!
   14b00:	str	x25, [sp, #16]
   14b04:	stp	x24, x23, [sp, #32]
   14b08:	stp	x22, x21, [sp, #48]
   14b0c:	stp	x20, x19, [sp, #64]
   14b10:	mov	x29, sp
   14b14:	adrp	x24, 48000 <_ZTISt14overflow_error@@Base-0x20>
   14b18:	ldr	x23, [x0]
   14b1c:	ldr	x24, [x24, #3856]
   14b20:	mov	x20, x0
   14b24:	mov	x22, x1
   14b28:	mov	w0, #0xa                   	// #10
   14b2c:	ldr	x8, [x24]
   14b30:	mov	w19, w3
   14b34:	mov	w21, w2
   14b38:	mov	x1, x8
   14b3c:	bl	eb90 <fputc@plt>
   14b40:	ldr	w8, [x23]
   14b44:	cbz	w8, 14b68 <__cxa_demangle@@Base+0x2370>
   14b48:	mov	w25, wzr
   14b4c:	ldr	x1, [x24]
   14b50:	mov	w0, #0x20                  	// #32
   14b54:	bl	eb90 <fputc@plt>
   14b58:	ldr	w8, [x23]
   14b5c:	add	w25, w25, #0x1
   14b60:	cmp	w25, w8
   14b64:	b.ne	14b4c <__cxa_demangle@@Base+0x2354>  // b.any
   14b68:	strb	wzr, [x23, #4]
   14b6c:	ldr	x23, [x20]
   14b70:	cbnz	x22, 14b90 <__cxa_demangle@@Base+0x2398>
   14b74:	ldr	x3, [x24]
   14b78:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14b7c:	add	x0, x0, #0xdcc
   14b80:	mov	w1, #0x6                   	// #6
   14b84:	mov	w2, #0x1                   	// #1
   14b88:	bl	edd0 <fwrite@plt>
   14b8c:	b	14b9c <__cxa_demangle@@Base+0x23a4>
   14b90:	mov	x0, x22
   14b94:	mov	x1, x23
   14b98:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14b9c:	mov	w8, #0x1                   	// #1
   14ba0:	strb	w8, [x23, #4]
   14ba4:	ldr	x22, [x20]
   14ba8:	ldr	x3, [x24]
   14bac:	ldrb	w8, [x22, #4]
   14bb0:	cbnz	w8, 14bcc <__cxa_demangle@@Base+0x23d4>
   14bb4:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14bb8:	add	x0, x0, #0xdd3
   14bbc:	mov	w1, #0x2                   	// #2
   14bc0:	mov	w2, #0x1                   	// #1
   14bc4:	bl	edd0 <fwrite@plt>
   14bc8:	b	14c10 <__cxa_demangle@@Base+0x2418>
   14bcc:	mov	w0, #0x2c                  	// #44
   14bd0:	mov	x1, x3
   14bd4:	bl	eb90 <fputc@plt>
   14bd8:	ldr	x1, [x24]
   14bdc:	mov	w0, #0xa                   	// #10
   14be0:	bl	eb90 <fputc@plt>
   14be4:	ldr	w8, [x22]
   14be8:	cbz	w8, 14c0c <__cxa_demangle@@Base+0x2414>
   14bec:	mov	w23, wzr
   14bf0:	ldr	x1, [x24]
   14bf4:	mov	w0, #0x20                  	// #32
   14bf8:	bl	eb90 <fputc@plt>
   14bfc:	ldr	w8, [x22]
   14c00:	add	w23, w23, #0x1
   14c04:	cmp	w23, w8
   14c08:	b.ne	14bf0 <__cxa_demangle@@Base+0x23f8>  // b.any
   14c0c:	strb	wzr, [x22, #4]
   14c10:	ldr	x1, [x24]
   14c14:	adrp	x22, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   14c18:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   14c1c:	add	x22, x22, #0x1eb
   14c20:	add	x23, x23, #0x1e6
   14c24:	tst	w21, #0x1
   14c28:	csel	x0, x23, x22, ne  // ne = any
   14c2c:	bl	eb10 <fputs@plt>
   14c30:	ldr	x20, [x20]
   14c34:	ldr	x3, [x24]
   14c38:	ldrb	w8, [x20, #4]
   14c3c:	cbnz	w8, 14c58 <__cxa_demangle@@Base+0x2460>
   14c40:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14c44:	add	x0, x0, #0xdd3
   14c48:	mov	w1, #0x2                   	// #2
   14c4c:	mov	w2, #0x1                   	// #1
   14c50:	bl	edd0 <fwrite@plt>
   14c54:	b	14c9c <__cxa_demangle@@Base+0x24a4>
   14c58:	mov	w0, #0x2c                  	// #44
   14c5c:	mov	x1, x3
   14c60:	bl	eb90 <fputc@plt>
   14c64:	ldr	x1, [x24]
   14c68:	mov	w0, #0xa                   	// #10
   14c6c:	bl	eb90 <fputc@plt>
   14c70:	ldr	w8, [x20]
   14c74:	cbz	w8, 14c98 <__cxa_demangle@@Base+0x24a0>
   14c78:	mov	w21, wzr
   14c7c:	ldr	x1, [x24]
   14c80:	mov	w0, #0x20                  	// #32
   14c84:	bl	eb90 <fputc@plt>
   14c88:	ldr	w8, [x20]
   14c8c:	add	w21, w21, #0x1
   14c90:	cmp	w21, w8
   14c94:	b.ne	14c7c <__cxa_demangle@@Base+0x2484>  // b.any
   14c98:	strb	wzr, [x20, #4]
   14c9c:	tst	w19, #0x1
   14ca0:	ldr	x1, [x24]
   14ca4:	csel	x0, x23, x22, ne  // ne = any
   14ca8:	ldp	x20, x19, [sp, #64]
   14cac:	ldp	x22, x21, [sp, #48]
   14cb0:	ldp	x24, x23, [sp, #32]
   14cb4:	ldr	x25, [sp, #16]
   14cb8:	ldp	x29, x30, [sp], #80
   14cbc:	b	eb10 <fputs@plt>
   14cc0:	stp	x29, x30, [sp, #-96]!
   14cc4:	str	x27, [sp, #16]
   14cc8:	stp	x26, x25, [sp, #32]
   14ccc:	stp	x24, x23, [sp, #48]
   14cd0:	stp	x22, x21, [sp, #64]
   14cd4:	stp	x20, x19, [sp, #80]
   14cd8:	mov	x29, sp
   14cdc:	adrp	x25, 48000 <_ZTISt14overflow_error@@Base-0x20>
   14ce0:	ldr	x26, [x0]
   14ce4:	ldr	x25, [x25, #3856]
   14ce8:	mov	x20, x0
   14cec:	mov	w24, w1
   14cf0:	mov	w0, #0xa                   	// #10
   14cf4:	ldr	x8, [x25]
   14cf8:	mov	x19, x5
   14cfc:	mov	x21, x4
   14d00:	mov	x23, x3
   14d04:	mov	x1, x8
   14d08:	mov	x22, x2
   14d0c:	bl	eb90 <fputc@plt>
   14d10:	ldr	w8, [x26]
   14d14:	cbz	w8, 14d38 <__cxa_demangle@@Base+0x2540>
   14d18:	mov	w27, wzr
   14d1c:	ldr	x1, [x25]
   14d20:	mov	w0, #0x20                  	// #32
   14d24:	bl	eb90 <fputc@plt>
   14d28:	ldr	w8, [x26]
   14d2c:	add	w27, w27, #0x1
   14d30:	cmp	w27, w8
   14d34:	b.ne	14d1c <__cxa_demangle@@Base+0x2524>  // b.any
   14d38:	strb	wzr, [x26, #4]
   14d3c:	ldr	x1, [x25]
   14d40:	adrp	x8, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   14d44:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   14d48:	add	x8, x8, #0x1eb
   14d4c:	add	x9, x9, #0x1e6
   14d50:	tst	w24, #0x1
   14d54:	csel	x0, x9, x8, ne  // ne = any
   14d58:	bl	eb10 <fputs@plt>
   14d5c:	ldr	x24, [x20]
   14d60:	ldr	x3, [x25]
   14d64:	ldrb	w8, [x24, #4]
   14d68:	cbnz	w8, 14d84 <__cxa_demangle@@Base+0x258c>
   14d6c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14d70:	add	x0, x0, #0xdd3
   14d74:	mov	w1, #0x2                   	// #2
   14d78:	mov	w2, #0x1                   	// #1
   14d7c:	bl	edd0 <fwrite@plt>
   14d80:	b	14dc8 <__cxa_demangle@@Base+0x25d0>
   14d84:	mov	w0, #0x2c                  	// #44
   14d88:	mov	x1, x3
   14d8c:	bl	eb90 <fputc@plt>
   14d90:	ldr	x1, [x25]
   14d94:	mov	w0, #0xa                   	// #10
   14d98:	bl	eb90 <fputc@plt>
   14d9c:	ldr	w8, [x24]
   14da0:	cbz	w8, 14dc4 <__cxa_demangle@@Base+0x25cc>
   14da4:	mov	w26, wzr
   14da8:	ldr	x1, [x25]
   14dac:	mov	w0, #0x20                  	// #32
   14db0:	bl	eb90 <fputc@plt>
   14db4:	ldr	w8, [x24]
   14db8:	add	w26, w26, #0x1
   14dbc:	cmp	w26, w8
   14dc0:	b.ne	14da8 <__cxa_demangle@@Base+0x25b0>  // b.any
   14dc4:	strb	wzr, [x24, #4]
   14dc8:	ldr	x0, [x25]
   14dcc:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14dd0:	sub	w2, w23, w22
   14dd4:	add	x1, x1, #0xde0
   14dd8:	mov	x3, x22
   14ddc:	bl	ef00 <fprintf@plt>
   14de0:	ldr	x1, [x25]
   14de4:	ldr	x22, [x20]
   14de8:	mov	w0, #0x2c                  	// #44
   14dec:	bl	eb90 <fputc@plt>
   14df0:	ldr	x1, [x25]
   14df4:	mov	w0, #0xa                   	// #10
   14df8:	bl	eb90 <fputc@plt>
   14dfc:	ldr	w8, [x22]
   14e00:	cbz	w8, 14e24 <__cxa_demangle@@Base+0x262c>
   14e04:	mov	w23, wzr
   14e08:	ldr	x1, [x25]
   14e0c:	mov	w0, #0x20                  	// #32
   14e10:	bl	eb90 <fputc@plt>
   14e14:	ldr	w8, [x22]
   14e18:	add	w23, w23, #0x1
   14e1c:	cmp	w23, w8
   14e20:	b.ne	14e08 <__cxa_demangle@@Base+0x2610>  // b.any
   14e24:	strb	wzr, [x22, #4]
   14e28:	cbnz	x21, 14e48 <__cxa_demangle@@Base+0x2650>
   14e2c:	ldr	x3, [x25]
   14e30:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14e34:	add	x0, x0, #0xdcc
   14e38:	mov	w1, #0x6                   	// #6
   14e3c:	mov	w2, #0x1                   	// #1
   14e40:	bl	edd0 <fwrite@plt>
   14e44:	b	14e54 <__cxa_demangle@@Base+0x265c>
   14e48:	mov	x0, x21
   14e4c:	mov	x1, x22
   14e50:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14e54:	mov	w8, #0x1                   	// #1
   14e58:	strb	w8, [x22, #4]
   14e5c:	ldr	x1, [x25]
   14e60:	ldr	x20, [x20]
   14e64:	mov	w0, #0x2c                  	// #44
   14e68:	bl	eb90 <fputc@plt>
   14e6c:	ldr	x1, [x25]
   14e70:	mov	w0, #0xa                   	// #10
   14e74:	bl	eb90 <fputc@plt>
   14e78:	ldr	w8, [x20]
   14e7c:	cbnz	w8, 14eb8 <__cxa_demangle@@Base+0x26c0>
   14e80:	strb	wzr, [x20, #4]
   14e84:	cbz	x19, 14edc <__cxa_demangle@@Base+0x26e4>
   14e88:	mov	x0, x19
   14e8c:	mov	x1, x20
   14e90:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14e94:	mov	w8, #0x1                   	// #1
   14e98:	strb	w8, [x20, #4]
   14e9c:	ldp	x20, x19, [sp, #80]
   14ea0:	ldp	x22, x21, [sp, #64]
   14ea4:	ldp	x24, x23, [sp, #48]
   14ea8:	ldp	x26, x25, [sp, #32]
   14eac:	ldr	x27, [sp, #16]
   14eb0:	ldp	x29, x30, [sp], #96
   14eb4:	ret
   14eb8:	mov	w21, wzr
   14ebc:	ldr	x1, [x25]
   14ec0:	mov	w0, #0x20                  	// #32
   14ec4:	bl	eb90 <fputc@plt>
   14ec8:	ldr	w8, [x20]
   14ecc:	add	w21, w21, #0x1
   14ed0:	cmp	w21, w8
   14ed4:	b.eq	14e80 <__cxa_demangle@@Base+0x2688>  // b.none
   14ed8:	b	14ebc <__cxa_demangle@@Base+0x26c4>
   14edc:	ldr	x3, [x25]
   14ee0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14ee4:	add	x0, x0, #0xdcc
   14ee8:	mov	w1, #0x6                   	// #6
   14eec:	mov	w2, #0x1                   	// #1
   14ef0:	bl	edd0 <fwrite@plt>
   14ef4:	b	14e94 <__cxa_demangle@@Base+0x269c>
   14ef8:	stp	x29, x30, [sp, #-80]!
   14efc:	str	x25, [sp, #16]
   14f00:	stp	x24, x23, [sp, #32]
   14f04:	stp	x22, x21, [sp, #48]
   14f08:	stp	x20, x19, [sp, #64]
   14f0c:	mov	x29, sp
   14f10:	adrp	x24, 48000 <_ZTISt14overflow_error@@Base-0x20>
   14f14:	ldr	x23, [x0]
   14f18:	ldr	x24, [x24, #3856]
   14f1c:	mov	x20, x0
   14f20:	mov	x22, x1
   14f24:	mov	w0, #0xa                   	// #10
   14f28:	ldr	x8, [x24]
   14f2c:	mov	w19, w3
   14f30:	mov	x21, x2
   14f34:	mov	x1, x8
   14f38:	bl	eb90 <fputc@plt>
   14f3c:	ldr	w8, [x23]
   14f40:	cbz	w8, 14f64 <__cxa_demangle@@Base+0x276c>
   14f44:	mov	w25, wzr
   14f48:	ldr	x1, [x24]
   14f4c:	mov	w0, #0x20                  	// #32
   14f50:	bl	eb90 <fputc@plt>
   14f54:	ldr	w8, [x23]
   14f58:	add	w25, w25, #0x1
   14f5c:	cmp	w25, w8
   14f60:	b.ne	14f48 <__cxa_demangle@@Base+0x2750>  // b.any
   14f64:	strb	wzr, [x23, #4]
   14f68:	ldr	x23, [x20]
   14f6c:	cbnz	x22, 14f8c <__cxa_demangle@@Base+0x2794>
   14f70:	ldr	x3, [x24]
   14f74:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14f78:	add	x0, x0, #0xdcc
   14f7c:	mov	w1, #0x6                   	// #6
   14f80:	mov	w2, #0x1                   	// #1
   14f84:	bl	edd0 <fwrite@plt>
   14f88:	b	14f98 <__cxa_demangle@@Base+0x27a0>
   14f8c:	mov	x0, x22
   14f90:	mov	x1, x23
   14f94:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   14f98:	mov	w8, #0x1                   	// #1
   14f9c:	strb	w8, [x23, #4]
   14fa0:	ldr	x1, [x24]
   14fa4:	ldr	x22, [x20]
   14fa8:	mov	w0, #0x2c                  	// #44
   14fac:	bl	eb90 <fputc@plt>
   14fb0:	ldr	x1, [x24]
   14fb4:	mov	w0, #0xa                   	// #10
   14fb8:	bl	eb90 <fputc@plt>
   14fbc:	ldr	w8, [x22]
   14fc0:	cbz	w8, 14fe4 <__cxa_demangle@@Base+0x27ec>
   14fc4:	mov	w23, wzr
   14fc8:	ldr	x1, [x24]
   14fcc:	mov	w0, #0x20                  	// #32
   14fd0:	bl	eb90 <fputc@plt>
   14fd4:	ldr	w8, [x22]
   14fd8:	add	w23, w23, #0x1
   14fdc:	cmp	w23, w8
   14fe0:	b.ne	14fc8 <__cxa_demangle@@Base+0x27d0>  // b.any
   14fe4:	strb	wzr, [x22, #4]
   14fe8:	cbnz	x21, 15008 <__cxa_demangle@@Base+0x2810>
   14fec:	ldr	x3, [x24]
   14ff0:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   14ff4:	add	x0, x0, #0xdcc
   14ff8:	mov	w1, #0x6                   	// #6
   14ffc:	mov	w2, #0x1                   	// #1
   15000:	bl	edd0 <fwrite@plt>
   15004:	b	15014 <__cxa_demangle@@Base+0x281c>
   15008:	mov	x0, x21
   1500c:	mov	x1, x22
   15010:	bl	f29c <_ZSt13set_terminatePFvvE@@Base+0x98>
   15014:	mov	w8, #0x1                   	// #1
   15018:	strb	w8, [x22, #4]
   1501c:	ldr	x20, [x20]
   15020:	ldr	x3, [x24]
   15024:	ldrb	w8, [x20, #4]
   15028:	cbnz	w8, 15044 <__cxa_demangle@@Base+0x284c>
   1502c:	adrp	x0, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   15030:	add	x0, x0, #0xdd3
   15034:	mov	w1, #0x2                   	// #2
   15038:	mov	w2, #0x1                   	// #1
   1503c:	bl	edd0 <fwrite@plt>
   15040:	b	15088 <__cxa_demangle@@Base+0x2890>
   15044:	mov	w0, #0x2c                  	// #44
   15048:	mov	x1, x3
   1504c:	bl	eb90 <fputc@plt>
   15050:	ldr	x1, [x24]
   15054:	mov	w0, #0xa                   	// #10
   15058:	bl	eb90 <fputc@plt>
   1505c:	ldr	w8, [x20]
   15060:	cbz	w8, 15084 <__cxa_demangle@@Base+0x288c>
   15064:	mov	w21, wzr
   15068:	ldr	x1, [x24]
   1506c:	mov	w0, #0x20                  	// #32
   15070:	bl	eb90 <fputc@plt>
   15074:	ldr	w8, [x20]
   15078:	add	w21, w21, #0x1
   1507c:	cmp	w21, w8
   15080:	b.ne	15068 <__cxa_demangle@@Base+0x2870>  // b.any
   15084:	strb	wzr, [x20, #4]
   15088:	ldr	x1, [x24]
   1508c:	tst	w19, #0x1
   15090:	ldp	x20, x19, [sp, #64]
   15094:	ldp	x22, x21, [sp, #48]
   15098:	ldp	x24, x23, [sp, #32]
   1509c:	ldr	x25, [sp, #16]
   150a0:	adrp	x8, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   150a4:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   150a8:	add	x8, x8, #0x1eb
   150ac:	add	x9, x9, #0x1e6
   150b0:	csel	x0, x9, x8, ne  // ne = any
   150b4:	ldp	x29, x30, [sp], #80
   150b8:	b	eb10 <fputs@plt>
   150bc:	sub	sp, sp, #0x90
   150c0:	stp	x29, x30, [sp, #48]
   150c4:	stp	x28, x27, [sp, #64]
   150c8:	stp	x26, x25, [sp, #80]
   150cc:	stp	x24, x23, [sp, #96]
   150d0:	stp	x22, x21, [sp, #112]
   150d4:	stp	x20, x19, [sp, #128]
   150d8:	add	x29, sp, #0x30
   150dc:	ldp	x8, x9, [x0]
   150e0:	mov	x19, x0
   150e4:	cmp	x9, x8
   150e8:	b.eq	15188 <__cxa_demangle@@Base+0x2990>  // b.none
   150ec:	ldrb	w10, [x8]
   150f0:	cmp	w10, #0x54
   150f4:	b.eq	15100 <__cxa_demangle@@Base+0x2908>  // b.none
   150f8:	cmp	w10, #0x47
   150fc:	b.ne	15188 <__cxa_demangle@@Base+0x2990>  // b.any
   15100:	subs	x11, x9, x8
   15104:	b.eq	15d44 <__cxa_demangle@@Base+0x354c>  // b.none
   15108:	cmp	w10, #0x47
   1510c:	b.eq	1532c <__cxa_demangle@@Base+0x2b34>  // b.none
   15110:	cmp	w10, #0x54
   15114:	b.ne	15d44 <__cxa_demangle@@Base+0x354c>  // b.any
   15118:	cmp	x11, #0x2
   1511c:	b.cc	153c4 <__cxa_demangle@@Base+0x2bcc>  // b.lo, b.ul, b.last
   15120:	ldrb	w10, [x8, #1]
   15124:	sub	w10, w10, #0x43
   15128:	cmp	w10, #0x20
   1512c:	b.hi	153c4 <__cxa_demangle@@Base+0x2bcc>  // b.pmore
   15130:	adrp	x11, 2d000 <__cxa_call_unexpected@@Base+0xac>
   15134:	add	x11, x11, #0x578
   15138:	adr	x12, 15148 <__cxa_demangle@@Base+0x2950>
   1513c:	ldrh	w13, [x11, x10, lsl #1]
   15140:	add	x12, x12, x13, lsl #2
   15144:	br	x12
   15148:	add	x8, x8, #0x2
   1514c:	mov	x0, x19
   15150:	str	x8, [x19]
   15154:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   15158:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   1515c:	ldp	x20, x22, [x19]
   15160:	mov	x21, x0
   15164:	cmp	x20, x22
   15168:	b.eq	15b9c <__cxa_demangle@@Base+0x33a4>  // b.none
   1516c:	ldrb	w8, [x20]
   15170:	mov	x23, x20
   15174:	cmp	w8, #0x6e
   15178:	b.ne	15ba0 <__cxa_demangle@@Base+0x33a8>  // b.any
   1517c:	add	x23, x20, #0x1
   15180:	str	x23, [x19]
   15184:	b	15ba0 <__cxa_demangle@@Base+0x33a8>
   15188:	strh	wzr, [sp, #24]
   1518c:	str	wzr, [sp, #28]
   15190:	strb	wzr, [sp, #32]
   15194:	ldr	x8, [x19, #728]
   15198:	ldr	x9, [x19, #720]
   1519c:	add	x1, sp, #0x18
   151a0:	mov	x0, x19
   151a4:	sub	x8, x8, x9
   151a8:	asr	x8, x8, #3
   151ac:	str	x8, [sp, #40]
   151b0:	bl	17688 <__cxa_demangle@@Base+0x4e90>
   151b4:	mov	x20, x0
   151b8:	cbz	x0, 15d48 <__cxa_demangle@@Base+0x3550>
   151bc:	ldr	x8, [x19, #728]
   151c0:	ldr	x10, [x19, #720]
   151c4:	ldr	x11, [sp, #40]
   151c8:	sub	x8, x8, x10
   151cc:	asr	x8, x8, #3
   151d0:	cmp	x11, x8
   151d4:	b.cs	15224 <__cxa_demangle@@Base+0x2a2c>  // b.hs, b.nlast
   151d8:	ldr	x9, [x19, #664]
   151dc:	ldr	x12, [x19, #672]
   151e0:	cmp	x9, x12
   151e4:	b.eq	15d44 <__cxa_demangle@@Base+0x354c>  // b.none
   151e8:	sub	x12, x8, x11
   151ec:	add	x13, x10, x11, lsl #3
   151f0:	ldr	x15, [x9]
   151f4:	cbz	x15, 15d44 <__cxa_demangle@@Base+0x354c>
   151f8:	ldr	x14, [x13]
   151fc:	ldp	x15, x17, [x15]
   15200:	ldr	x16, [x14, #16]
   15204:	sub	x17, x17, x15
   15208:	cmp	x16, x17, asr #3
   1520c:	b.cs	15d44 <__cxa_demangle@@Base+0x354c>  // b.hs, b.nlast
   15210:	ldr	x15, [x15, x16, lsl #3]
   15214:	subs	x12, x12, #0x1
   15218:	add	x13, x13, #0x8
   1521c:	str	x15, [x14, #24]
   15220:	b.ne	151f0 <__cxa_demangle@@Base+0x29f8>  // b.any
   15224:	cmp	x8, x11
   15228:	b.cc	15e0c <__cxa_demangle@@Base+0x3614>  // b.lo, b.ul, b.last
   1522c:	ldp	x9, x8, [x19]
   15230:	add	x11, x10, x11, lsl #3
   15234:	str	x11, [x19, #728]
   15238:	subs	x10, x8, x9
   1523c:	b.eq	15d48 <__cxa_demangle@@Base+0x3550>  // b.none
   15240:	ldrb	w11, [x9]
   15244:	sub	w12, w11, #0x2e
   15248:	cmp	w12, #0x31
   1524c:	b.hi	1526c <__cxa_demangle@@Base+0x2a74>  // b.pmore
   15250:	mov	w13, #0x1                   	// #1
   15254:	lsl	x12, x13, x12
   15258:	mov	x13, #0x1                   	// #1
   1525c:	movk	x13, #0x80, lsl #16
   15260:	movk	x13, #0x2, lsl #48
   15264:	tst	x12, x13
   15268:	b.ne	15d48 <__cxa_demangle@@Base+0x3550>  // b.any
   1526c:	cmp	x10, #0xd
   15270:	mov	x24, xzr
   15274:	b.cc	1546c <__cxa_demangle@@Base+0x2c74>  // b.lo, b.ul, b.last
   15278:	cmp	w11, #0x55
   1527c:	b.ne	1546c <__cxa_demangle@@Base+0x2c74>  // b.any
   15280:	ldrb	w10, [x9, #1]
   15284:	cmp	w10, #0x61
   15288:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   1528c:	ldrb	w10, [x9, #2]
   15290:	cmp	w10, #0x39
   15294:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   15298:	ldrb	w10, [x9, #3]
   1529c:	cmp	w10, #0x65
   152a0:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   152a4:	ldrb	w10, [x9, #4]
   152a8:	cmp	w10, #0x6e
   152ac:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   152b0:	ldrb	w10, [x9, #5]
   152b4:	cmp	w10, #0x61
   152b8:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   152bc:	ldrb	w10, [x9, #6]
   152c0:	cmp	w10, #0x62
   152c4:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   152c8:	ldrb	w10, [x9, #7]
   152cc:	cmp	w10, #0x6c
   152d0:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   152d4:	ldrb	w10, [x9, #8]
   152d8:	cmp	w10, #0x65
   152dc:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   152e0:	ldrb	w10, [x9, #9]
   152e4:	cmp	w10, #0x5f
   152e8:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   152ec:	ldrb	w10, [x9, #10]
   152f0:	cmp	w10, #0x69
   152f4:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   152f8:	ldrb	w10, [x9, #11]
   152fc:	cmp	w10, #0x66
   15300:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   15304:	ldrb	w10, [x9, #12]
   15308:	cmp	w10, #0x49
   1530c:	b.ne	15468 <__cxa_demangle@@Base+0x2c70>  // b.any
   15310:	ldp	x11, x10, [x19, #16]
   15314:	add	x9, x9, #0xd
   15318:	add	x26, x19, #0x28
   1531c:	str	x9, [x19]
   15320:	sub	x10, x10, x11
   15324:	asr	x25, x10, #3
   15328:	b	15cd4 <__cxa_demangle@@Base+0x34dc>
   1532c:	cmp	x11, #0x2
   15330:	b.cc	15d44 <__cxa_demangle@@Base+0x354c>  // b.lo, b.ul, b.last
   15334:	ldrb	w9, [x8, #1]
   15338:	cmp	w9, #0x52
   1533c:	b.eq	1566c <__cxa_demangle@@Base+0x2e74>  // b.none
   15340:	cmp	w9, #0x56
   15344:	b.ne	15d44 <__cxa_demangle@@Base+0x354c>  // b.any
   15348:	add	x8, x8, #0x2
   1534c:	mov	x0, x19
   15350:	mov	x1, xzr
   15354:	str	x8, [x19]
   15358:	bl	17688 <__cxa_demangle@@Base+0x4e90>
   1535c:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   15360:	ldr	x22, [x19, #4912]
   15364:	mov	x21, x0
   15368:	ldr	x8, [x22, #8]
   1536c:	add	x9, x8, #0x30
   15370:	cmp	x9, #0xff0
   15374:	b.cc	15394 <__cxa_demangle@@Base+0x2b9c>  // b.lo, b.ul, b.last
   15378:	mov	w0, #0x1000                	// #4096
   1537c:	bl	ec00 <malloc@plt>
   15380:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15384:	mov	x8, xzr
   15388:	stp	x22, xzr, [x0]
   1538c:	mov	x22, x0
   15390:	str	x0, [x19, #4912]
   15394:	add	x9, x8, #0x30
   15398:	add	x20, x22, x8
   1539c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   153a0:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   153a4:	add	x8, x8, #0xc70
   153a8:	mov	w10, #0x114                 	// #276
   153ac:	add	x11, x11, #0x445
   153b0:	movk	w10, #0x101, lsl #16
   153b4:	str	x9, [x22, #8]
   153b8:	str	x8, [x20, #16]!
   153bc:	add	x8, x11, #0x13
   153c0:	b	15b44 <__cxa_demangle@@Base+0x334c>
   153c4:	add	x8, x8, #0x1
   153c8:	cmp	x9, x8
   153cc:	str	x8, [x19]
   153d0:	b.ne	153dc <__cxa_demangle@@Base+0x2be4>  // b.any
   153d4:	mov	w20, wzr
   153d8:	b	153e8 <__cxa_demangle@@Base+0x2bf0>
   153dc:	ldrb	w8, [x8]
   153e0:	cmp	w8, #0x76
   153e4:	cset	w20, eq  // eq = none
   153e8:	mov	x0, x19
   153ec:	bl	18620 <__cxa_demangle@@Base+0x5e28>
   153f0:	tbnz	w0, #0, 15d44 <__cxa_demangle@@Base+0x354c>
   153f4:	mov	x0, x19
   153f8:	bl	150bc <__cxa_demangle@@Base+0x28c4>
   153fc:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   15400:	ldr	x22, [x19, #4912]
   15404:	mov	x21, x0
   15408:	ldr	x8, [x22, #8]
   1540c:	add	x9, x8, #0x30
   15410:	cmp	x9, #0xff0
   15414:	cbz	w20, 156dc <__cxa_demangle@@Base+0x2ee4>
   15418:	b.cc	15438 <__cxa_demangle@@Base+0x2c40>  // b.lo, b.ul, b.last
   1541c:	mov	w0, #0x1000                	// #4096
   15420:	bl	ec00 <malloc@plt>
   15424:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15428:	mov	x8, xzr
   1542c:	stp	x22, xzr, [x0]
   15430:	mov	x22, x0
   15434:	str	x0, [x19, #4912]
   15438:	add	x9, x8, #0x30
   1543c:	add	x20, x22, x8
   15440:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   15444:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   15448:	add	x8, x8, #0xc70
   1544c:	mov	w10, #0x114                 	// #276
   15450:	add	x11, x11, #0x433
   15454:	movk	w10, #0x101, lsl #16
   15458:	str	x9, [x22, #8]
   1545c:	str	x8, [x20, #16]!
   15460:	add	x8, x11, #0x11
   15464:	b	15b44 <__cxa_demangle@@Base+0x334c>
   15468:	mov	x24, xzr
   1546c:	ldrb	w8, [sp, #24]
   15470:	mov	x22, xzr
   15474:	cbnz	w8, 15490 <__cxa_demangle@@Base+0x2c98>
   15478:	ldrb	w8, [sp, #25]
   1547c:	cbz	w8, 15490 <__cxa_demangle@@Base+0x2c98>
   15480:	mov	x0, x19
   15484:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   15488:	mov	x22, x0
   1548c:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   15490:	ldp	x8, x9, [x19]
   15494:	cmp	x8, x9
   15498:	b.eq	1551c <__cxa_demangle@@Base+0x2d24>  // b.none
   1549c:	ldrb	w9, [x8]
   154a0:	cmp	w9, #0x76
   154a4:	b.ne	1551c <__cxa_demangle@@Base+0x2d24>  // b.any
   154a8:	ldr	x21, [x19, #4912]
   154ac:	add	x8, x8, #0x1
   154b0:	str	x8, [x19]
   154b4:	ldr	x8, [x21, #8]
   154b8:	add	x9, x8, #0x40
   154bc:	cmp	x9, #0xff0
   154c0:	b.cc	154e0 <__cxa_demangle@@Base+0x2ce8>  // b.lo, b.ul, b.last
   154c4:	mov	w0, #0x1000                	// #4096
   154c8:	bl	ec00 <malloc@plt>
   154cc:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   154d0:	mov	x8, xzr
   154d4:	stp	x21, xzr, [x0]
   154d8:	mov	x21, x0
   154dc:	str	x0, [x19, #4912]
   154e0:	add	x9, x8, #0x40
   154e4:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   154e8:	str	x9, [x21, #8]
   154ec:	add	x8, x21, x8
   154f0:	add	x10, x10, #0x650
   154f4:	ldr	w9, [sp, #28]
   154f8:	ldrb	w11, [sp, #32]
   154fc:	str	x10, [x8, #16]!
   15500:	mov	w10, #0x12                  	// #18
   15504:	movk	w10, #0x1, lsl #16
   15508:	str	w10, [x8, #8]
   1550c:	stp	x22, x20, [x8, #16]
   15510:	stp	xzr, xzr, [x8, #32]
   15514:	str	x24, [x8, #48]
   15518:	b	1576c <__cxa_demangle@@Base+0x2f74>
   1551c:	stp	x22, x24, [sp, #8]
   15520:	ldp	x9, x8, [x19, #16]
   15524:	mov	x21, #0x1                   	// #1
   15528:	movk	x21, #0x80, lsl #16
   1552c:	add	x28, x19, #0x28
   15530:	sub	x8, x8, x9
   15534:	mov	w26, #0x1                   	// #1
   15538:	asr	x27, x8, #3
   1553c:	movk	x21, #0x2, lsl #48
   15540:	mov	x0, x19
   15544:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   15548:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   1554c:	ldp	x8, x9, [x19, #24]
   15550:	mov	x22, x0
   15554:	cmp	x8, x9
   15558:	b.ne	155c4 <__cxa_demangle@@Base+0x2dcc>  // b.any
   1555c:	ldr	x25, [x19, #16]
   15560:	sub	x23, x8, x25
   15564:	cmp	x28, x25
   15568:	lsl	x1, x23, #1
   1556c:	b.eq	15588 <__cxa_demangle@@Base+0x2d90>  // b.none
   15570:	mov	x0, x25
   15574:	bl	ecc0 <realloc@plt>
   15578:	mov	x24, x0
   1557c:	str	x0, [x19, #16]
   15580:	cbnz	x0, 155b0 <__cxa_demangle@@Base+0x2db8>
   15584:	b	15e2c <__cxa_demangle@@Base+0x3634>
   15588:	mov	x0, x1
   1558c:	bl	ec00 <malloc@plt>
   15590:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15594:	mov	x24, x0
   15598:	cbz	x23, 155ac <__cxa_demangle@@Base+0x2db4>
   1559c:	mov	x0, x24
   155a0:	mov	x1, x25
   155a4:	mov	x2, x23
   155a8:	bl	eae0 <memmove@plt>
   155ac:	str	x24, [x19, #16]
   155b0:	asr	x8, x23, #3
   155b4:	asr	x9, x23, #2
   155b8:	add	x8, x24, x8, lsl #3
   155bc:	add	x9, x24, x9, lsl #3
   155c0:	stp	x8, x9, [x19, #24]
   155c4:	add	x9, x8, #0x8
   155c8:	str	x9, [x19, #24]
   155cc:	str	x22, [x8]
   155d0:	ldp	x8, x9, [x19]
   155d4:	cmp	x9, x8
   155d8:	b.eq	155f8 <__cxa_demangle@@Base+0x2e00>  // b.none
   155dc:	ldrb	w8, [x8]
   155e0:	sub	w8, w8, #0x2e
   155e4:	cmp	w8, #0x31
   155e8:	b.hi	15540 <__cxa_demangle@@Base+0x2d48>  // b.pmore
   155ec:	lsl	x8, x26, x8
   155f0:	tst	x8, x21
   155f4:	b.eq	15540 <__cxa_demangle@@Base+0x2d48>  // b.none
   155f8:	ldp	x8, x2, [x19, #16]
   155fc:	sub	x9, x2, x8
   15600:	cmp	x27, x9, asr #3
   15604:	b.hi	15e30 <__cxa_demangle@@Base+0x3638>  // b.pmore
   15608:	add	x1, x8, x27, lsl #3
   1560c:	mov	x0, x19
   15610:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   15614:	ldp	x8, x9, [x19, #16]
   15618:	sub	x9, x9, x8
   1561c:	cmp	x27, x9, asr #3
   15620:	b.hi	15e50 <__cxa_demangle@@Base+0x3658>  // b.pmore
   15624:	ldr	x21, [x19, #4912]
   15628:	add	x8, x8, x27, lsl #3
   1562c:	str	x8, [x19, #24]
   15630:	mov	x22, x0
   15634:	ldr	x8, [x21, #8]
   15638:	mov	x23, x1
   1563c:	add	x9, x8, #0x40
   15640:	cmp	x9, #0xff0
   15644:	b.cc	1572c <__cxa_demangle@@Base+0x2f34>  // b.lo, b.ul, b.last
   15648:	mov	w0, #0x1000                	// #4096
   1564c:	bl	ec00 <malloc@plt>
   15650:	ldr	x12, [sp, #16]
   15654:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15658:	mov	x8, xzr
   1565c:	stp	x21, xzr, [x0]
   15660:	mov	x21, x0
   15664:	str	x0, [x19, #4912]
   15668:	b	15730 <__cxa_demangle@@Base+0x2f38>
   1566c:	add	x8, x8, #0x2
   15670:	mov	x0, x19
   15674:	mov	x1, xzr
   15678:	str	x8, [x19]
   1567c:	bl	17688 <__cxa_demangle@@Base+0x4e90>
   15680:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   15684:	ldp	x9, x8, [x19]
   15688:	mov	x21, x0
   1568c:	cmp	x8, x9
   15690:	b.eq	156b8 <__cxa_demangle@@Base+0x2ec0>  // b.none
   15694:	ldrb	w10, [x9]
   15698:	cmp	w10, #0x30
   1569c:	b.cc	156b8 <__cxa_demangle@@Base+0x2ec0>  // b.lo, b.ul, b.last
   156a0:	cmp	w10, #0x3a
   156a4:	b.cc	15b54 <__cxa_demangle@@Base+0x335c>  // b.lo, b.ul, b.last
   156a8:	sub	w11, w10, #0x41
   156ac:	and	w11, w11, #0xff
   156b0:	cmp	w11, #0x19
   156b4:	b.ls	15b54 <__cxa_demangle@@Base+0x335c>  // b.plast
   156b8:	mov	w10, #0x1                   	// #1
   156bc:	cmp	x9, x8
   156c0:	b.eq	1577c <__cxa_demangle@@Base+0x2f84>  // b.none
   156c4:	ldrb	w8, [x9]
   156c8:	cmp	w8, #0x5f
   156cc:	b.ne	1577c <__cxa_demangle@@Base+0x2f84>  // b.any
   156d0:	add	x8, x9, #0x1
   156d4:	str	x8, [x19]
   156d8:	b	15780 <__cxa_demangle@@Base+0x2f88>
   156dc:	b.cc	156fc <__cxa_demangle@@Base+0x2f04>  // b.lo, b.ul, b.last
   156e0:	mov	w0, #0x1000                	// #4096
   156e4:	bl	ec00 <malloc@plt>
   156e8:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   156ec:	mov	x8, xzr
   156f0:	stp	x22, xzr, [x0]
   156f4:	mov	x22, x0
   156f8:	str	x0, [x19, #4912]
   156fc:	add	x9, x8, #0x30
   15700:	add	x20, x22, x8
   15704:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   15708:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1570c:	add	x8, x8, #0xc70
   15710:	mov	w10, #0x114                 	// #276
   15714:	add	x11, x11, #0x42f
   15718:	movk	w10, #0x101, lsl #16
   1571c:	str	x9, [x22, #8]
   15720:	str	x8, [x20, #16]!
   15724:	add	x8, x11, #0x15
   15728:	b	15b44 <__cxa_demangle@@Base+0x334c>
   1572c:	ldr	x12, [sp, #16]
   15730:	add	x9, x8, #0x40
   15734:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   15738:	add	x8, x21, x8
   1573c:	add	x10, x10, #0x650
   15740:	str	x9, [x21, #8]
   15744:	ldr	w9, [sp, #28]
   15748:	ldrb	w11, [sp, #32]
   1574c:	str	x10, [x8, #16]!
   15750:	mov	w10, #0x12                  	// #18
   15754:	movk	w10, #0x1, lsl #16
   15758:	str	w10, [x8, #8]
   1575c:	ldr	x10, [sp, #8]
   15760:	stp	x22, x23, [x8, #32]
   15764:	str	x12, [x8, #48]
   15768:	stp	x10, x20, [x8, #16]
   1576c:	mov	x20, x8
   15770:	str	w9, [x8, #56]
   15774:	strb	w11, [x8, #60]
   15778:	b	15d48 <__cxa_demangle@@Base+0x3550>
   1577c:	cbz	w10, 15d44 <__cxa_demangle@@Base+0x354c>
   15780:	ldr	x22, [x19, #4912]
   15784:	ldr	x8, [x22, #8]
   15788:	add	x9, x8, #0x30
   1578c:	cmp	x9, #0xff0
   15790:	b.cc	157b0 <__cxa_demangle@@Base+0x2fb8>  // b.lo, b.ul, b.last
   15794:	mov	w0, #0x1000                	// #4096
   15798:	bl	ec00 <malloc@plt>
   1579c:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   157a0:	mov	x8, xzr
   157a4:	stp	x22, xzr, [x0]
   157a8:	mov	x22, x0
   157ac:	str	x0, [x19, #4912]
   157b0:	add	x9, x8, #0x30
   157b4:	add	x20, x22, x8
   157b8:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   157bc:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   157c0:	add	x8, x8, #0xc70
   157c4:	mov	w10, #0x114                 	// #276
   157c8:	add	x11, x11, #0x459
   157cc:	movk	w10, #0x101, lsl #16
   157d0:	str	x9, [x22, #8]
   157d4:	str	x8, [x20, #16]!
   157d8:	add	x8, x11, #0x18
   157dc:	b	15b44 <__cxa_demangle@@Base+0x334c>
   157e0:	add	x8, x8, #0x2
   157e4:	mov	x0, x19
   157e8:	str	x8, [x19]
   157ec:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   157f0:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   157f4:	ldr	x22, [x19, #4912]
   157f8:	mov	x21, x0
   157fc:	ldr	x8, [x22, #8]
   15800:	add	x9, x8, #0x30
   15804:	cmp	x9, #0xff0
   15808:	b.cc	15828 <__cxa_demangle@@Base+0x3030>  // b.lo, b.ul, b.last
   1580c:	mov	w0, #0x1000                	// #4096
   15810:	bl	ec00 <malloc@plt>
   15814:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15818:	mov	x8, xzr
   1581c:	stp	x22, xzr, [x0]
   15820:	mov	x22, x0
   15824:	str	x0, [x19, #4912]
   15828:	add	x9, x8, #0x30
   1582c:	add	x20, x22, x8
   15830:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   15834:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   15838:	add	x8, x8, #0xc70
   1583c:	mov	w10, #0x114                 	// #276
   15840:	add	x11, x11, #0x47f
   15844:	movk	w10, #0x101, lsl #16
   15848:	str	x9, [x22, #8]
   1584c:	str	x8, [x20, #16]!
   15850:	add	x8, x11, #0xb
   15854:	b	15b44 <__cxa_demangle@@Base+0x334c>
   15858:	add	x8, x8, #0x2
   1585c:	mov	x0, x19
   15860:	mov	x1, xzr
   15864:	str	x8, [x19]
   15868:	bl	17688 <__cxa_demangle@@Base+0x4e90>
   1586c:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   15870:	ldr	x22, [x19, #4912]
   15874:	mov	x21, x0
   15878:	ldr	x8, [x22, #8]
   1587c:	add	x9, x8, #0x30
   15880:	cmp	x9, #0xff0
   15884:	b.cc	158a4 <__cxa_demangle@@Base+0x30ac>  // b.lo, b.ul, b.last
   15888:	mov	w0, #0x1000                	// #4096
   1588c:	bl	ec00 <malloc@plt>
   15890:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15894:	mov	x8, xzr
   15898:	stp	x22, xzr, [x0]
   1589c:	mov	x22, x0
   158a0:	str	x0, [x19, #4912]
   158a4:	add	x9, x8, #0x30
   158a8:	add	x20, x22, x8
   158ac:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   158b0:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   158b4:	add	x8, x8, #0xc70
   158b8:	mov	w10, #0x114                 	// #276
   158bc:	add	x11, x11, #0x406
   158c0:	movk	w10, #0x101, lsl #16
   158c4:	str	x9, [x22, #8]
   158c8:	str	x8, [x20, #16]!
   158cc:	add	x8, x11, #0x28
   158d0:	b	15b44 <__cxa_demangle@@Base+0x334c>
   158d4:	add	x8, x8, #0x2
   158d8:	mov	x0, x19
   158dc:	mov	x1, xzr
   158e0:	str	x8, [x19]
   158e4:	bl	17688 <__cxa_demangle@@Base+0x4e90>
   158e8:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   158ec:	ldr	x22, [x19, #4912]
   158f0:	mov	x21, x0
   158f4:	ldr	x8, [x22, #8]
   158f8:	add	x9, x8, #0x30
   158fc:	cmp	x9, #0xff0
   15900:	b.cc	15920 <__cxa_demangle@@Base+0x3128>  // b.lo, b.ul, b.last
   15904:	mov	w0, #0x1000                	// #4096
   15908:	bl	ec00 <malloc@plt>
   1590c:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15910:	mov	x8, xzr
   15914:	stp	x22, xzr, [x0]
   15918:	mov	x22, x0
   1591c:	str	x0, [x19, #4912]
   15920:	add	x9, x8, #0x30
   15924:	add	x20, x22, x8
   15928:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1592c:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   15930:	add	x8, x8, #0xc70
   15934:	mov	w10, #0x114                 	// #276
   15938:	add	x11, x11, #0x3e4
   1593c:	movk	w10, #0x101, lsl #16
   15940:	str	x9, [x22, #8]
   15944:	str	x8, [x20, #16]!
   15948:	add	x8, x11, #0x21
   1594c:	b	15b44 <__cxa_demangle@@Base+0x334c>
   15950:	add	x8, x8, #0x2
   15954:	mov	x0, x19
   15958:	str	x8, [x19]
   1595c:	bl	18620 <__cxa_demangle@@Base+0x5e28>
   15960:	tbnz	w0, #0, 15d44 <__cxa_demangle@@Base+0x354c>
   15964:	mov	x0, x19
   15968:	bl	18620 <__cxa_demangle@@Base+0x5e28>
   1596c:	tbnz	w0, #0, 15d44 <__cxa_demangle@@Base+0x354c>
   15970:	mov	x0, x19
   15974:	bl	150bc <__cxa_demangle@@Base+0x28c4>
   15978:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   1597c:	ldr	x22, [x19, #4912]
   15980:	mov	x21, x0
   15984:	ldr	x8, [x22, #8]
   15988:	add	x9, x8, #0x30
   1598c:	cmp	x9, #0xff0
   15990:	b.cc	159b0 <__cxa_demangle@@Base+0x31b8>  // b.lo, b.ul, b.last
   15994:	mov	w0, #0x1000                	// #4096
   15998:	bl	ec00 <malloc@plt>
   1599c:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   159a0:	mov	x8, xzr
   159a4:	stp	x22, xzr, [x0]
   159a8:	mov	x22, x0
   159ac:	str	x0, [x19, #4912]
   159b0:	add	x9, x8, #0x30
   159b4:	add	x20, x22, x8
   159b8:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   159bc:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   159c0:	add	x8, x8, #0xc70
   159c4:	mov	w10, #0x114                 	// #276
   159c8:	add	x11, x11, #0x3c9
   159cc:	movk	w10, #0x101, lsl #16
   159d0:	str	x9, [x22, #8]
   159d4:	str	x8, [x20, #16]!
   159d8:	add	x8, x11, #0x1a
   159dc:	b	15b44 <__cxa_demangle@@Base+0x334c>
   159e0:	add	x8, x8, #0x2
   159e4:	mov	x0, x19
   159e8:	str	x8, [x19]
   159ec:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   159f0:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   159f4:	ldr	x22, [x19, #4912]
   159f8:	mov	x21, x0
   159fc:	ldr	x8, [x22, #8]
   15a00:	add	x9, x8, #0x30
   15a04:	cmp	x9, #0xff0
   15a08:	b.cc	15a28 <__cxa_demangle@@Base+0x3230>  // b.lo, b.ul, b.last
   15a0c:	mov	w0, #0x1000                	// #4096
   15a10:	bl	ec00 <malloc@plt>
   15a14:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15a18:	mov	x8, xzr
   15a1c:	stp	x22, xzr, [x0]
   15a20:	mov	x22, x0
   15a24:	str	x0, [x19, #4912]
   15a28:	add	x9, x8, #0x30
   15a2c:	add	x20, x22, x8
   15a30:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   15a34:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   15a38:	add	x8, x8, #0xc70
   15a3c:	mov	w10, #0x114                 	// #276
   15a40:	add	x11, x11, #0x3a8
   15a44:	movk	w10, #0x101, lsl #16
   15a48:	str	x9, [x22, #8]
   15a4c:	str	x8, [x20, #16]!
   15a50:	add	x8, x11, #0xd
   15a54:	b	15b44 <__cxa_demangle@@Base+0x334c>
   15a58:	add	x8, x8, #0x2
   15a5c:	mov	x0, x19
   15a60:	str	x8, [x19]
   15a64:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   15a68:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   15a6c:	ldr	x22, [x19, #4912]
   15a70:	mov	x21, x0
   15a74:	ldr	x8, [x22, #8]
   15a78:	add	x9, x8, #0x30
   15a7c:	cmp	x9, #0xff0
   15a80:	b.cc	15aa0 <__cxa_demangle@@Base+0x32a8>  // b.lo, b.ul, b.last
   15a84:	mov	w0, #0x1000                	// #4096
   15a88:	bl	ec00 <malloc@plt>
   15a8c:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15a90:	mov	x8, xzr
   15a94:	stp	x22, xzr, [x0]
   15a98:	mov	x22, x0
   15a9c:	str	x0, [x19, #4912]
   15aa0:	add	x9, x8, #0x30
   15aa4:	add	x20, x22, x8
   15aa8:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   15aac:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   15ab0:	add	x8, x8, #0xc70
   15ab4:	mov	w10, #0x114                 	// #276
   15ab8:	add	x11, x11, #0x3b6
   15abc:	movk	w10, #0x101, lsl #16
   15ac0:	str	x9, [x22, #8]
   15ac4:	str	x8, [x20, #16]!
   15ac8:	add	x8, x11, #0x12
   15acc:	b	15b44 <__cxa_demangle@@Base+0x334c>
   15ad0:	add	x8, x8, #0x2
   15ad4:	mov	x0, x19
   15ad8:	str	x8, [x19]
   15adc:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   15ae0:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   15ae4:	ldr	x22, [x19, #4912]
   15ae8:	mov	x21, x0
   15aec:	ldr	x8, [x22, #8]
   15af0:	add	x9, x8, #0x30
   15af4:	cmp	x9, #0xff0
   15af8:	b.cc	15b18 <__cxa_demangle@@Base+0x3320>  // b.lo, b.ul, b.last
   15afc:	mov	w0, #0x1000                	// #4096
   15b00:	bl	ec00 <malloc@plt>
   15b04:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15b08:	mov	x8, xzr
   15b0c:	stp	x22, xzr, [x0]
   15b10:	mov	x22, x0
   15b14:	str	x0, [x19, #4912]
   15b18:	add	x9, x8, #0x30
   15b1c:	add	x20, x22, x8
   15b20:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   15b24:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   15b28:	add	x8, x8, #0xc70
   15b2c:	mov	w10, #0x114                 	// #276
   15b30:	add	x11, x11, #0x39f
   15b34:	movk	w10, #0x101, lsl #16
   15b38:	str	x9, [x22, #8]
   15b3c:	str	x8, [x20, #16]!
   15b40:	add	x8, x11, #0x8
   15b44:	str	w10, [x20, #8]
   15b48:	stp	x11, x8, [x20, #16]
   15b4c:	str	x21, [x20, #32]
   15b50:	b	15d48 <__cxa_demangle@@Base+0x3550>
   15b54:	add	x11, x9, #0x1
   15b58:	and	w9, w10, #0xff
   15b5c:	cmp	w9, #0x3a
   15b60:	mov	x9, x11
   15b64:	b.cc	15b78 <__cxa_demangle@@Base+0x3380>  // b.lo, b.ul, b.last
   15b68:	sub	w10, w10, #0x41
   15b6c:	and	w10, w10, #0xff
   15b70:	cmp	w10, #0x19
   15b74:	b.hi	15c84 <__cxa_demangle@@Base+0x348c>  // b.pmore
   15b78:	cmp	x8, x9
   15b7c:	str	x9, [x19]
   15b80:	b.eq	15b94 <__cxa_demangle@@Base+0x339c>  // b.none
   15b84:	mov	x11, x9
   15b88:	ldrb	w10, [x11], #1
   15b8c:	cmp	w10, #0x2f
   15b90:	b.hi	15b58 <__cxa_demangle@@Base+0x3360>  // b.pmore
   15b94:	mov	w10, wzr
   15b98:	b	156bc <__cxa_demangle@@Base+0x2ec4>
   15b9c:	mov	x23, x20
   15ba0:	cmp	x23, x22
   15ba4:	b.eq	15bbc <__cxa_demangle@@Base+0x33c4>  // b.none
   15ba8:	ldrb	w24, [x23]
   15bac:	bl	ed40 <__ctype_b_loc@plt>
   15bb0:	ldr	x8, [x0]
   15bb4:	ldrh	w8, [x8, x24, lsl #1]
   15bb8:	tbnz	w8, #11, 15c58 <__cxa_demangle@@Base+0x3460>
   15bbc:	mov	x20, xzr
   15bc0:	mov	x8, xzr
   15bc4:	cmp	x20, x8
   15bc8:	mov	x20, xzr
   15bcc:	b.eq	15d48 <__cxa_demangle@@Base+0x3550>  // b.none
   15bd0:	cmp	x23, x22
   15bd4:	b.eq	15d48 <__cxa_demangle@@Base+0x3550>  // b.none
   15bd8:	ldrb	w8, [x23]
   15bdc:	cmp	w8, #0x5f
   15be0:	b.ne	15d44 <__cxa_demangle@@Base+0x354c>  // b.any
   15be4:	add	x8, x23, #0x1
   15be8:	mov	x0, x19
   15bec:	str	x8, [x19]
   15bf0:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   15bf4:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   15bf8:	ldr	x23, [x19, #4912]
   15bfc:	mov	x22, x0
   15c00:	ldr	x8, [x23, #8]
   15c04:	add	x9, x8, #0x20
   15c08:	cmp	x9, #0xff0
   15c0c:	b.cc	15c2c <__cxa_demangle@@Base+0x3434>  // b.lo, b.ul, b.last
   15c10:	mov	w0, #0x1000                	// #4096
   15c14:	bl	ec00 <malloc@plt>
   15c18:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15c1c:	mov	x8, xzr
   15c20:	stp	x23, xzr, [x0]
   15c24:	mov	x23, x0
   15c28:	str	x0, [x19, #4912]
   15c2c:	add	x9, x8, #0x20
   15c30:	add	x20, x23, x8
   15c34:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   15c38:	add	x8, x8, #0xcf0
   15c3c:	mov	w10, #0x115                 	// #277
   15c40:	movk	w10, #0x101, lsl #16
   15c44:	str	x9, [x23, #8]
   15c48:	str	x8, [x20, #16]!
   15c4c:	str	w10, [x20, #8]
   15c50:	stp	x22, x21, [x20, #16]
   15c54:	b	15d48 <__cxa_demangle@@Base+0x3550>
   15c58:	add	x8, x23, #0x1
   15c5c:	cmp	x22, x8
   15c60:	str	x8, [x19]
   15c64:	b.eq	15c90 <__cxa_demangle@@Base+0x3498>  // b.none
   15c68:	ldrb	w9, [x8], #1
   15c6c:	ldr	x10, [x0]
   15c70:	ldrh	w9, [x10, x9, lsl #1]
   15c74:	tbnz	w9, #11, 15c5c <__cxa_demangle@@Base+0x3464>
   15c78:	sub	x23, x8, #0x1
   15c7c:	mov	x8, x23
   15c80:	b	15bc4 <__cxa_demangle@@Base+0x33cc>
   15c84:	mov	w10, wzr
   15c88:	sub	x9, x9, #0x1
   15c8c:	b	156bc <__cxa_demangle@@Base+0x2ec4>
   15c90:	mov	x23, x22
   15c94:	mov	x8, x22
   15c98:	b	15bc4 <__cxa_demangle@@Base+0x33cc>
   15c9c:	mov	x0, x24
   15ca0:	bl	ecc0 <realloc@plt>
   15ca4:	mov	x23, x0
   15ca8:	str	x0, [x19, #16]
   15cac:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15cb0:	asr	x8, x22, #3
   15cb4:	asr	x9, x22, #2
   15cb8:	add	x8, x23, x8, lsl #3
   15cbc:	add	x9, x23, x9, lsl #3
   15cc0:	stp	x8, x9, [x19, #24]
   15cc4:	add	x9, x8, #0x8
   15cc8:	str	x9, [x19, #24]
   15ccc:	str	x21, [x8]
   15cd0:	ldp	x9, x8, [x19]
   15cd4:	cmp	x9, x8
   15cd8:	b.eq	15ce8 <__cxa_demangle@@Base+0x34f0>  // b.none
   15cdc:	ldrb	w8, [x9]
   15ce0:	cmp	w8, #0x45
   15ce4:	b.eq	15d6c <__cxa_demangle@@Base+0x3574>  // b.none
   15ce8:	mov	x0, x19
   15cec:	bl	1837c <__cxa_demangle@@Base+0x5b84>
   15cf0:	cbz	x0, 15d44 <__cxa_demangle@@Base+0x354c>
   15cf4:	ldp	x8, x9, [x19, #24]
   15cf8:	mov	x21, x0
   15cfc:	cmp	x8, x9
   15d00:	b.ne	15cc4 <__cxa_demangle@@Base+0x34cc>  // b.any
   15d04:	ldr	x24, [x19, #16]
   15d08:	sub	x22, x8, x24
   15d0c:	cmp	x26, x24
   15d10:	lsl	x1, x22, #1
   15d14:	b.ne	15c9c <__cxa_demangle@@Base+0x34a4>  // b.any
   15d18:	mov	x0, x1
   15d1c:	bl	ec00 <malloc@plt>
   15d20:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15d24:	mov	x23, x0
   15d28:	cbz	x22, 15d3c <__cxa_demangle@@Base+0x3544>
   15d2c:	mov	x0, x23
   15d30:	mov	x1, x24
   15d34:	mov	x2, x22
   15d38:	bl	eae0 <memmove@plt>
   15d3c:	str	x23, [x19, #16]
   15d40:	b	15cb0 <__cxa_demangle@@Base+0x34b8>
   15d44:	mov	x20, xzr
   15d48:	mov	x0, x20
   15d4c:	ldp	x20, x19, [sp, #128]
   15d50:	ldp	x22, x21, [sp, #112]
   15d54:	ldp	x24, x23, [sp, #96]
   15d58:	ldp	x26, x25, [sp, #80]
   15d5c:	ldp	x28, x27, [sp, #64]
   15d60:	ldp	x29, x30, [sp, #48]
   15d64:	add	sp, sp, #0x90
   15d68:	ret
   15d6c:	ldp	x8, x2, [x19, #16]
   15d70:	add	x9, x9, #0x1
   15d74:	str	x9, [x19]
   15d78:	sub	x10, x2, x8
   15d7c:	cmp	x25, x10, asr #3
   15d80:	b.hi	15e30 <__cxa_demangle@@Base+0x3638>  // b.pmore
   15d84:	add	x1, x8, x25, lsl #3
   15d88:	mov	x0, x19
   15d8c:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   15d90:	ldp	x8, x9, [x19, #16]
   15d94:	sub	x9, x9, x8
   15d98:	cmp	x25, x9, asr #3
   15d9c:	b.hi	15e50 <__cxa_demangle@@Base+0x3658>  // b.pmore
   15da0:	ldr	x23, [x19, #4912]
   15da4:	add	x8, x8, x25, lsl #3
   15da8:	str	x8, [x19, #24]
   15dac:	mov	x21, x0
   15db0:	ldr	x8, [x23, #8]
   15db4:	mov	x22, x1
   15db8:	add	x9, x8, #0x20
   15dbc:	cmp	x9, #0xff0
   15dc0:	b.cc	15de0 <__cxa_demangle@@Base+0x35e8>  // b.lo, b.ul, b.last
   15dc4:	mov	w0, #0x1000                	// #4096
   15dc8:	bl	ec00 <malloc@plt>
   15dcc:	cbz	x0, 15e2c <__cxa_demangle@@Base+0x3634>
   15dd0:	mov	x8, xzr
   15dd4:	stp	x23, xzr, [x0]
   15dd8:	mov	x23, x0
   15ddc:	str	x0, [x19, #4912]
   15de0:	add	x9, x8, #0x20
   15de4:	add	x24, x23, x8
   15de8:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   15dec:	add	x8, x8, #0x5e0
   15df0:	mov	w10, #0x109                 	// #265
   15df4:	movk	w10, #0x101, lsl #16
   15df8:	str	x9, [x23, #8]
   15dfc:	str	x8, [x24, #16]!
   15e00:	str	w10, [x24, #8]
   15e04:	stp	x21, x22, [x24, #16]
   15e08:	b	1546c <__cxa_demangle@@Base+0x2c74>
   15e0c:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   15e10:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   15e14:	adrp	x3, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   15e18:	add	x0, x0, #0xa2e
   15e1c:	add	x1, x1, #0xce9
   15e20:	add	x3, x3, #0xfea
   15e24:	mov	w2, #0x8d9                 	// #2265
   15e28:	bl	ee90 <__assert_fail@plt>
   15e2c:	bl	eeb0 <_ZSt9terminatev@plt>
   15e30:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   15e34:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   15e38:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   15e3c:	add	x0, x0, #0xdf
   15e40:	add	x1, x1, #0xce9
   15e44:	add	x3, x3, #0xfc
   15e48:	mov	w2, #0x94b                 	// #2379
   15e4c:	bl	ee90 <__assert_fail@plt>
   15e50:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   15e54:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   15e58:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   15e5c:	add	x0, x0, #0xa2e
   15e60:	add	x1, x1, #0xce9
   15e64:	add	x3, x3, #0x2b6
   15e68:	mov	w2, #0x8d9                 	// #2265
   15e6c:	bl	ee90 <__assert_fail@plt>
   15e70:	stp	x29, x30, [sp, #-64]!
   15e74:	str	x23, [sp, #16]
   15e78:	stp	x22, x21, [sp, #32]
   15e7c:	stp	x20, x19, [sp, #48]
   15e80:	mov	x29, sp
   15e84:	ldp	x23, x22, [x0]
   15e88:	mov	x19, x0
   15e8c:	subs	x8, x22, x23
   15e90:	b.eq	16750 <__cxa_demangle@@Base+0x3f58>  // b.none
   15e94:	ldrb	w10, [x23]
   15e98:	sub	w9, w10, #0x41
   15e9c:	cmp	w9, #0x39
   15ea0:	b.hi	16750 <__cxa_demangle@@Base+0x3f58>  // b.pmore
   15ea4:	adrp	x11, 2d000 <__cxa_call_unexpected@@Base+0xac>
   15ea8:	add	x11, x11, #0x5ba
   15eac:	adr	x12, 15ebc <__cxa_demangle@@Base+0x36c4>
   15eb0:	ldrh	w13, [x11, x9, lsl #1]
   15eb4:	add	x12, x12, x13, lsl #2
   15eb8:	br	x12
   15ebc:	cmp	w10, #0x72
   15ec0:	cset	w9, eq  // eq = none
   15ec4:	cmp	x8, x9
   15ec8:	b.ls	15ee4 <__cxa_demangle@@Base+0x36ec>  // b.plast
   15ecc:	ldrb	w11, [x23, x9]
   15ed0:	cmp	w10, #0x72
   15ed4:	mov	w10, #0x1                   	// #1
   15ed8:	cinc	w10, w10, eq  // eq = none
   15edc:	cmp	w11, #0x56
   15ee0:	csel	w9, w10, w9, eq  // eq = none
   15ee4:	mov	w10, w9
   15ee8:	cmp	x8, x10
   15eec:	b.ls	15f00 <__cxa_demangle@@Base+0x3708>  // b.plast
   15ef0:	ldrb	w10, [x23, x10]
   15ef4:	cmp	w10, #0x4b
   15ef8:	cinc	w10, w9, eq  // eq = none
   15efc:	mov	w9, w10
   15f00:	cmp	x8, x10
   15f04:	b.ls	15f54 <__cxa_demangle@@Base+0x375c>  // b.plast
   15f08:	ldrb	w10, [x23, x10]
   15f0c:	cmp	w10, #0x46
   15f10:	b.eq	166a8 <__cxa_demangle@@Base+0x3eb0>  // b.none
   15f14:	cmp	w10, #0x44
   15f18:	b.ne	15f54 <__cxa_demangle@@Base+0x375c>  // b.any
   15f1c:	mov	w9, w9
   15f20:	add	x9, x9, #0x1
   15f24:	cmp	x8, x9
   15f28:	b.ls	15f54 <__cxa_demangle@@Base+0x375c>  // b.plast
   15f2c:	ldrb	w8, [x23, x9]
   15f30:	sub	w8, w8, #0x4f
   15f34:	cmp	w8, #0x29
   15f38:	b.hi	15f54 <__cxa_demangle@@Base+0x375c>  // b.pmore
   15f3c:	mov	w9, #0x1                   	// #1
   15f40:	lsl	x8, x9, x8
   15f44:	mov	x9, #0x1                   	// #1
   15f48:	movk	x9, #0x301, lsl #32
   15f4c:	tst	x8, x9
   15f50:	b.ne	166a8 <__cxa_demangle@@Base+0x3eb0>  // b.any
   15f54:	mov	x0, x19
   15f58:	bl	26df8 <__cxa_demangle@@Base+0x14600>
   15f5c:	b	16758 <__cxa_demangle@@Base+0x3f60>
   15f60:	ldr	x21, [x19, #4912]
   15f64:	add	x8, x23, #0x1
   15f68:	str	x8, [x19]
   15f6c:	ldr	x8, [x21, #8]
   15f70:	add	x9, x8, #0x20
   15f74:	cmp	x9, #0xff0
   15f78:	b.cc	15f98 <__cxa_demangle@@Base+0x37a0>  // b.lo, b.ul, b.last
   15f7c:	mov	w0, #0x1000                	// #4096
   15f80:	bl	ec00 <malloc@plt>
   15f84:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   15f88:	mov	x8, xzr
   15f8c:	stp	x21, xzr, [x0]
   15f90:	mov	x21, x0
   15f94:	str	x0, [x19, #4912]
   15f98:	add	x9, x8, #0x20
   15f9c:	add	x20, x21, x8
   15fa0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   15fa4:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   15fa8:	add	x8, x8, #0xd60
   15fac:	mov	w10, #0x107                 	// #263
   15fb0:	add	x11, x11, #0x3bc
   15fb4:	movk	w10, #0x101, lsl #16
   15fb8:	str	x9, [x21, #8]
   15fbc:	str	x8, [x20, #16]!
   15fc0:	add	x8, x11, #0x12
   15fc4:	b	16c94 <__cxa_demangle@@Base+0x449c>
   15fc8:	ldr	x21, [x19, #4912]
   15fcc:	add	x8, x23, #0x1
   15fd0:	str	x8, [x19]
   15fd4:	ldr	x8, [x21, #8]
   15fd8:	add	x9, x8, #0x20
   15fdc:	cmp	x9, #0xff0
   15fe0:	b.cc	16000 <__cxa_demangle@@Base+0x3808>  // b.lo, b.ul, b.last
   15fe4:	mov	w0, #0x1000                	// #4096
   15fe8:	bl	ec00 <malloc@plt>
   15fec:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   15ff0:	mov	x8, xzr
   15ff4:	stp	x21, xzr, [x0]
   15ff8:	mov	x21, x0
   15ffc:	str	x0, [x19, #4912]
   16000:	add	x9, x8, #0x20
   16004:	add	x20, x21, x8
   16008:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1600c:	mov	w10, #0x107                 	// #263
   16010:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   16014:	add	x8, x8, #0xd60
   16018:	movk	w10, #0x101, lsl #16
   1601c:	add	x11, x11, #0x544
   16020:	str	x9, [x21, #8]
   16024:	str	x8, [x20, #16]!
   16028:	add	x8, x11, #0x8
   1602c:	b	16c94 <__cxa_demangle@@Base+0x449c>
   16030:	ldr	x21, [x19, #4912]
   16034:	add	x8, x23, #0x1
   16038:	str	x8, [x19]
   1603c:	ldr	x8, [x21, #8]
   16040:	add	x9, x8, #0x20
   16044:	cmp	x9, #0xff0
   16048:	b.cc	16068 <__cxa_demangle@@Base+0x3870>  // b.lo, b.ul, b.last
   1604c:	mov	w0, #0x1000                	// #4096
   16050:	bl	ec00 <malloc@plt>
   16054:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16058:	mov	x8, xzr
   1605c:	stp	x21, xzr, [x0]
   16060:	mov	x21, x0
   16064:	str	x0, [x19, #4912]
   16068:	add	x9, x8, #0x20
   1606c:	add	x20, x21, x8
   16070:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16074:	mov	w10, #0x107                 	// #263
   16078:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1607c:	add	x8, x8, #0xd60
   16080:	movk	w10, #0x101, lsl #16
   16084:	add	x11, x11, #0x397
   16088:	b	16c88 <__cxa_demangle@@Base+0x4490>
   1608c:	ldr	x21, [x19, #4912]
   16090:	add	x8, x23, #0x1
   16094:	str	x8, [x19]
   16098:	ldr	x8, [x21, #8]
   1609c:	add	x9, x8, #0x20
   160a0:	cmp	x9, #0xff0
   160a4:	b.cc	160c4 <__cxa_demangle@@Base+0x38cc>  // b.lo, b.ul, b.last
   160a8:	mov	w0, #0x1000                	// #4096
   160ac:	bl	ec00 <malloc@plt>
   160b0:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   160b4:	mov	x8, xzr
   160b8:	stp	x21, xzr, [x0]
   160bc:	mov	x21, x0
   160c0:	str	x0, [x19, #4912]
   160c4:	add	x9, x8, #0x20
   160c8:	add	x20, x21, x8
   160cc:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   160d0:	mov	w10, #0x107                 	// #263
   160d4:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   160d8:	add	x8, x8, #0xd60
   160dc:	movk	w10, #0x101, lsl #16
   160e0:	add	x11, x11, #0x6eb
   160e4:	b	165a0 <__cxa_demangle@@Base+0x3da8>
   160e8:	ldr	x21, [x19, #4912]
   160ec:	add	x8, x23, #0x1
   160f0:	str	x8, [x19]
   160f4:	ldr	x8, [x21, #8]
   160f8:	add	x9, x8, #0x20
   160fc:	cmp	x9, #0xff0
   16100:	b.cc	16120 <__cxa_demangle@@Base+0x3928>  // b.lo, b.ul, b.last
   16104:	mov	w0, #0x1000                	// #4096
   16108:	bl	ec00 <malloc@plt>
   1610c:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16110:	mov	x8, xzr
   16114:	stp	x21, xzr, [x0]
   16118:	mov	x21, x0
   1611c:	str	x0, [x19, #4912]
   16120:	add	x9, x8, #0x20
   16124:	add	x20, x21, x8
   16128:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1612c:	mov	w10, #0x107                 	// #263
   16130:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   16134:	add	x8, x8, #0xd60
   16138:	movk	w10, #0x101, lsl #16
   1613c:	add	x11, x11, #0x3ae
   16140:	b	16840 <__cxa_demangle@@Base+0x4048>
   16144:	ldr	x21, [x19, #4912]
   16148:	add	x8, x23, #0x1
   1614c:	str	x8, [x19]
   16150:	ldr	x8, [x21, #8]
   16154:	add	x9, x8, #0x20
   16158:	cmp	x9, #0xff0
   1615c:	b.cc	1617c <__cxa_demangle@@Base+0x3984>  // b.lo, b.ul, b.last
   16160:	mov	w0, #0x1000                	// #4096
   16164:	bl	ec00 <malloc@plt>
   16168:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   1616c:	mov	x8, xzr
   16170:	stp	x21, xzr, [x0]
   16174:	mov	x21, x0
   16178:	str	x0, [x19, #4912]
   1617c:	add	x9, x8, #0x20
   16180:	add	x20, x21, x8
   16184:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16188:	mov	w10, #0x107                 	// #263
   1618c:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   16190:	add	x8, x8, #0xd60
   16194:	movk	w10, #0x101, lsl #16
   16198:	add	x11, x11, #0x3cf
   1619c:	b	168a8 <__cxa_demangle@@Base+0x40b0>
   161a0:	cmp	x8, #0x2
   161a4:	b.cc	161d0 <__cxa_demangle@@Base+0x39d8>  // b.lo, b.ul, b.last
   161a8:	ldrb	w8, [x23, #1]
   161ac:	sub	w8, w8, #0x65
   161b0:	cmp	w8, #0x10
   161b4:	b.hi	161d0 <__cxa_demangle@@Base+0x39d8>  // b.pmore
   161b8:	mov	w9, #0x1                   	// #1
   161bc:	lsl	w8, w9, w8
   161c0:	mov	w9, #0x4001                	// #16385
   161c4:	movk	w9, #0x1, lsl #16
   161c8:	tst	w8, w9
   161cc:	b.ne	16750 <__cxa_demangle@@Base+0x3f58>  // b.any
   161d0:	mov	x0, x19
   161d4:	bl	1958c <__cxa_demangle@@Base+0x6d94>
   161d8:	mov	x20, x0
   161dc:	cbz	x0, 16c9c <__cxa_demangle@@Base+0x44a4>
   161e0:	ldrb	w8, [x19, #776]
   161e4:	cbz	w8, 1675c <__cxa_demangle@@Base+0x3f64>
   161e8:	ldp	x8, x9, [x19]
   161ec:	cmp	x9, x8
   161f0:	b.eq	1675c <__cxa_demangle@@Base+0x3f64>  // b.none
   161f4:	ldrb	w8, [x8]
   161f8:	cmp	w8, #0x49
   161fc:	b.ne	1675c <__cxa_demangle@@Base+0x3f64>  // b.any
   16200:	b	16e44 <__cxa_demangle@@Base+0x464c>
   16204:	ldr	x21, [x19, #4912]
   16208:	add	x8, x23, #0x1
   1620c:	str	x8, [x19]
   16210:	ldr	x8, [x21, #8]
   16214:	add	x9, x8, #0x20
   16218:	cmp	x9, #0xff0
   1621c:	b.cc	1623c <__cxa_demangle@@Base+0x3a44>  // b.lo, b.ul, b.last
   16220:	mov	w0, #0x1000                	// #4096
   16224:	bl	ec00 <malloc@plt>
   16228:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   1622c:	mov	x8, xzr
   16230:	stp	x21, xzr, [x0]
   16234:	mov	x21, x0
   16238:	str	x0, [x19, #4912]
   1623c:	add	x9, x8, #0x20
   16240:	add	x20, x21, x8
   16244:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16248:	mov	w10, #0x107                 	// #263
   1624c:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   16250:	add	x8, x8, #0xd60
   16254:	movk	w10, #0x101, lsl #16
   16258:	add	x11, x11, #0x39c
   1625c:	b	16c88 <__cxa_demangle@@Base+0x4490>
   16260:	ldr	x21, [x19, #4912]
   16264:	add	x8, x23, #0x1
   16268:	str	x8, [x19]
   1626c:	ldr	x8, [x21, #8]
   16270:	add	x9, x8, #0x20
   16274:	cmp	x9, #0xff0
   16278:	b.cc	16298 <__cxa_demangle@@Base+0x3aa0>  // b.lo, b.ul, b.last
   1627c:	mov	w0, #0x1000                	// #4096
   16280:	bl	ec00 <malloc@plt>
   16284:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16288:	mov	x8, xzr
   1628c:	stp	x21, xzr, [x0]
   16290:	mov	x21, x0
   16294:	str	x0, [x19, #4912]
   16298:	add	x9, x8, #0x20
   1629c:	add	x20, x21, x8
   162a0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   162a4:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   162a8:	add	x8, x8, #0xd60
   162ac:	mov	w10, #0x107                 	// #263
   162b0:	add	x11, x11, #0x3da
   162b4:	movk	w10, #0x101, lsl #16
   162b8:	str	x9, [x21, #8]
   162bc:	str	x8, [x20, #16]!
   162c0:	add	x8, x11, #0x6
   162c4:	b	16c94 <__cxa_demangle@@Base+0x449c>
   162c8:	ldr	x21, [x19, #4912]
   162cc:	add	x8, x23, #0x1
   162d0:	str	x8, [x19]
   162d4:	ldr	x8, [x21, #8]
   162d8:	add	x9, x8, #0x20
   162dc:	cmp	x9, #0xff0
   162e0:	b.cc	16300 <__cxa_demangle@@Base+0x3b08>  // b.lo, b.ul, b.last
   162e4:	mov	w0, #0x1000                	// #4096
   162e8:	bl	ec00 <malloc@plt>
   162ec:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   162f0:	mov	x8, xzr
   162f4:	stp	x21, xzr, [x0]
   162f8:	mov	x21, x0
   162fc:	str	x0, [x19, #4912]
   16300:	add	x9, x8, #0x20
   16304:	add	x20, x21, x8
   16308:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1630c:	mov	w10, #0x107                 	// #263
   16310:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   16314:	add	x8, x8, #0xd60
   16318:	movk	w10, #0x101, lsl #16
   1631c:	add	x11, x11, #0x3e1
   16320:	str	x9, [x21, #8]
   16324:	str	x8, [x20, #16]!
   16328:	add	x8, x11, #0xa
   1632c:	b	16c94 <__cxa_demangle@@Base+0x449c>
   16330:	ldr	x21, [x19, #4912]
   16334:	add	x8, x23, #0x1
   16338:	str	x8, [x19]
   1633c:	ldr	x8, [x21, #8]
   16340:	add	x9, x8, #0x20
   16344:	cmp	x9, #0xff0
   16348:	b.cc	16368 <__cxa_demangle@@Base+0x3b70>  // b.lo, b.ul, b.last
   1634c:	mov	w0, #0x1000                	// #4096
   16350:	bl	ec00 <malloc@plt>
   16354:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16358:	mov	x8, xzr
   1635c:	stp	x21, xzr, [x0]
   16360:	mov	x21, x0
   16364:	str	x0, [x19, #4912]
   16368:	add	x9, x8, #0x20
   1636c:	add	x20, x21, x8
   16370:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16374:	mov	w10, #0x107                 	// #263
   16378:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1637c:	add	x8, x8, #0xd60
   16380:	movk	w10, #0x101, lsl #16
   16384:	add	x11, x11, #0x50f
   16388:	str	x9, [x21, #8]
   1638c:	str	x8, [x20, #16]!
   16390:	add	x8, x11, #0x7
   16394:	b	16c94 <__cxa_demangle@@Base+0x449c>
   16398:	cmp	x23, x22
   1639c:	b.eq	16f50 <__cxa_demangle@@Base+0x4758>  // b.none
   163a0:	add	x20, x23, #0x1
   163a4:	cmp	x22, x20
   163a8:	str	x20, [x19]
   163ac:	b.ne	16cb4 <__cxa_demangle@@Base+0x44bc>  // b.any
   163b0:	mov	w21, wzr
   163b4:	b	16cb8 <__cxa_demangle@@Base+0x44c0>
   163b8:	add	x8, x23, #0x1
   163bc:	mov	x0, x19
   163c0:	str	x8, [x19]
   163c4:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   163c8:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   163cc:	ldr	x22, [x19, #4912]
   163d0:	mov	x21, x0
   163d4:	ldr	x8, [x22, #8]
   163d8:	add	x9, x8, #0x30
   163dc:	cmp	x9, #0xff0
   163e0:	b.cc	16400 <__cxa_demangle@@Base+0x3c08>  // b.lo, b.ul, b.last
   163e4:	mov	w0, #0x1000                	// #4096
   163e8:	bl	ec00 <malloc@plt>
   163ec:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   163f0:	mov	x8, xzr
   163f4:	stp	x22, xzr, [x0]
   163f8:	mov	x22, x0
   163fc:	str	x0, [x19, #4912]
   16400:	add	x9, x8, #0x30
   16404:	add	x20, x22, x8
   16408:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   1640c:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   16410:	add	x8, x8, #0xce0
   16414:	mov	w10, #0x105                 	// #261
   16418:	add	x11, x11, #0x44d
   1641c:	movk	w10, #0x101, lsl #16
   16420:	str	x9, [x22, #8]
   16424:	str	x8, [x20, #16]!
   16428:	add	x8, x11, #0x8
   1642c:	b	164a4 <__cxa_demangle@@Base+0x3cac>
   16430:	add	x8, x23, #0x1
   16434:	mov	x0, x19
   16438:	str	x8, [x19]
   1643c:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   16440:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   16444:	ldr	x22, [x19, #4912]
   16448:	mov	x21, x0
   1644c:	ldr	x8, [x22, #8]
   16450:	add	x9, x8, #0x30
   16454:	cmp	x9, #0xff0
   16458:	b.cc	16478 <__cxa_demangle@@Base+0x3c80>  // b.lo, b.ul, b.last
   1645c:	mov	w0, #0x1000                	// #4096
   16460:	bl	ec00 <malloc@plt>
   16464:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16468:	mov	x8, xzr
   1646c:	stp	x22, xzr, [x0]
   16470:	mov	x22, x0
   16474:	str	x0, [x19, #4912]
   16478:	add	x9, x8, #0x30
   1647c:	add	x20, x22, x8
   16480:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   16484:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   16488:	add	x8, x8, #0xce0
   1648c:	mov	w10, #0x105                 	// #261
   16490:	add	x11, x11, #0x456
   16494:	movk	w10, #0x101, lsl #16
   16498:	str	x9, [x22, #8]
   1649c:	str	x8, [x20, #16]!
   164a0:	add	x8, x11, #0xa
   164a4:	str	w10, [x20, #8]
   164a8:	stp	x21, x11, [x20, #16]
   164ac:	str	x8, [x20, #32]
   164b0:	b	16760 <__cxa_demangle@@Base+0x3f68>
   164b4:	cmp	x23, x22
   164b8:	b.eq	16f50 <__cxa_demangle@@Base+0x4758>  // b.none
   164bc:	add	x8, x23, #0x1
   164c0:	mov	x0, x19
   164c4:	str	x8, [x19]
   164c8:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   164cc:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   164d0:	mov	x21, x0
   164d4:	mov	x0, x19
   164d8:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   164dc:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   164e0:	ldr	x23, [x19, #4912]
   164e4:	mov	x22, x0
   164e8:	ldr	x8, [x23, #8]
   164ec:	add	x9, x8, #0x20
   164f0:	cmp	x9, #0xff0
   164f4:	b.cc	16514 <__cxa_demangle@@Base+0x3d1c>  // b.lo, b.ul, b.last
   164f8:	mov	w0, #0x1000                	// #4096
   164fc:	bl	ec00 <malloc@plt>
   16500:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16504:	mov	x8, xzr
   16508:	stp	x23, xzr, [x0]
   1650c:	mov	x23, x0
   16510:	str	x0, [x19, #4912]
   16514:	add	x9, x8, #0x20
   16518:	str	x9, [x23, #8]
   1651c:	ldrb	w9, [x22, #9]
   16520:	add	x20, x23, x8
   16524:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   16528:	add	x8, x8, #0xb20
   1652c:	mov	w10, #0xd                   	// #13
   16530:	mov	w11, #0x101                 	// #257
   16534:	str	x8, [x20, #16]!
   16538:	strb	w10, [x20, #8]
   1653c:	strh	w11, [x20, #10]
   16540:	strb	w9, [x20, #9]
   16544:	b	16f38 <__cxa_demangle@@Base+0x4740>
   16548:	ldr	x21, [x19, #4912]
   1654c:	add	x8, x23, #0x1
   16550:	str	x8, [x19]
   16554:	ldr	x8, [x21, #8]
   16558:	add	x9, x8, #0x20
   1655c:	cmp	x9, #0xff0
   16560:	b.cc	16580 <__cxa_demangle@@Base+0x3d88>  // b.lo, b.ul, b.last
   16564:	mov	w0, #0x1000                	// #4096
   16568:	bl	ec00 <malloc@plt>
   1656c:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16570:	mov	x8, xzr
   16574:	stp	x21, xzr, [x0]
   16578:	mov	x21, x0
   1657c:	str	x0, [x19, #4912]
   16580:	add	x9, x8, #0x20
   16584:	add	x20, x21, x8
   16588:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1658c:	mov	w10, #0x107                 	// #263
   16590:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   16594:	add	x8, x8, #0xd60
   16598:	movk	w10, #0x101, lsl #16
   1659c:	add	x11, x11, #0x3aa
   165a0:	str	x9, [x21, #8]
   165a4:	str	x8, [x20, #16]!
   165a8:	add	x8, x11, #0x3
   165ac:	b	16c94 <__cxa_demangle@@Base+0x449c>
   165b0:	ldr	x21, [x19, #4912]
   165b4:	add	x8, x23, #0x1
   165b8:	str	x8, [x19]
   165bc:	ldr	x8, [x21, #8]
   165c0:	add	x9, x8, #0x20
   165c4:	cmp	x9, #0xff0
   165c8:	b.cc	165e8 <__cxa_demangle@@Base+0x3df0>  // b.lo, b.ul, b.last
   165cc:	mov	w0, #0x1000                	// #4096
   165d0:	bl	ec00 <malloc@plt>
   165d4:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   165d8:	mov	x8, xzr
   165dc:	stp	x21, xzr, [x0]
   165e0:	mov	x21, x0
   165e4:	str	x0, [x19, #4912]
   165e8:	add	x9, x8, #0x20
   165ec:	add	x20, x21, x8
   165f0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   165f4:	mov	w10, #0x107                 	// #263
   165f8:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   165fc:	add	x8, x8, #0xd60
   16600:	movk	w10, #0x101, lsl #16
   16604:	add	x11, x11, #0x3b7
   16608:	b	16c88 <__cxa_demangle@@Base+0x4490>
   1660c:	ldr	x21, [x19, #4912]
   16610:	add	x8, x23, #0x1
   16614:	str	x8, [x19]
   16618:	ldr	x8, [x21, #8]
   1661c:	add	x9, x8, #0x20
   16620:	cmp	x9, #0xff0
   16624:	b.cc	16644 <__cxa_demangle@@Base+0x3e4c>  // b.lo, b.ul, b.last
   16628:	mov	w0, #0x1000                	// #4096
   1662c:	bl	ec00 <malloc@plt>
   16630:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16634:	mov	x8, xzr
   16638:	stp	x21, xzr, [x0]
   1663c:	mov	x21, x0
   16640:	str	x0, [x19, #4912]
   16644:	add	x9, x8, #0x20
   16648:	add	x20, x21, x8
   1664c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16650:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   16654:	add	x8, x8, #0xd60
   16658:	mov	w10, #0x107                 	// #263
   1665c:	add	x11, x11, #0x53b
   16660:	movk	w10, #0x101, lsl #16
   16664:	str	x9, [x21, #8]
   16668:	str	x8, [x20, #16]!
   1666c:	add	x8, x11, #0x11
   16670:	b	16c94 <__cxa_demangle@@Base+0x449c>
   16674:	cmp	x8, #0x2
   16678:	b.cc	16f50 <__cxa_demangle@@Base+0x4758>  // b.lo, b.ul, b.last
   1667c:	ldrb	w8, [x23, #1]
   16680:	mov	x20, xzr
   16684:	sub	w8, w8, #0x4f
   16688:	cmp	w8, #0x29
   1668c:	b.hi	16c9c <__cxa_demangle@@Base+0x44a4>  // b.pmore
   16690:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   16694:	add	x9, x9, #0x62e
   16698:	adr	x10, 166a8 <__cxa_demangle@@Base+0x3eb0>
   1669c:	ldrh	w11, [x9, x8, lsl #1]
   166a0:	add	x10, x10, x11, lsl #2
   166a4:	br	x10
   166a8:	mov	x0, x19
   166ac:	bl	267e0 <__cxa_demangle@@Base+0x13fe8>
   166b0:	b	16758 <__cxa_demangle@@Base+0x3f60>
   166b4:	add	x8, x23, #0x1
   166b8:	mov	x0, x19
   166bc:	str	x8, [x19]
   166c0:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   166c4:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   166c8:	ldr	x22, [x19, #4912]
   166cc:	mov	x21, x0
   166d0:	ldr	x8, [x22, #8]
   166d4:	add	x9, x8, #0x20
   166d8:	cmp	x9, #0xff0
   166dc:	b.cc	166fc <__cxa_demangle@@Base+0x3f04>  // b.lo, b.ul, b.last
   166e0:	mov	w0, #0x1000                	// #4096
   166e4:	bl	ec00 <malloc@plt>
   166e8:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   166ec:	mov	x8, xzr
   166f0:	stp	x22, xzr, [x0]
   166f4:	mov	x22, x0
   166f8:	str	x0, [x19, #4912]
   166fc:	add	x9, x8, #0x20
   16700:	str	x9, [x22, #8]
   16704:	add	x20, x22, x8
   16708:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   1670c:	ldrb	w9, [x21, #9]
   16710:	add	x8, x8, #0xc70
   16714:	mov	w10, #0xc                   	// #12
   16718:	mov	w11, #0x101                 	// #257
   1671c:	mov	w12, #0x1                   	// #1
   16720:	str	x8, [x20, #16]!
   16724:	strb	w10, [x20, #8]
   16728:	strh	w11, [x20, #10]
   1672c:	str	x21, [x20, #16]
   16730:	str	w12, [x20, #24]
   16734:	b	169a8 <__cxa_demangle@@Base+0x41b0>
   16738:	cmp	x8, #0x2
   1673c:	b.cc	16750 <__cxa_demangle@@Base+0x3f58>  // b.lo, b.ul, b.last
   16740:	ldrb	w8, [x23, #1]
   16744:	cbz	w8, 16750 <__cxa_demangle@@Base+0x3f58>
   16748:	cmp	w8, #0x74
   1674c:	b.ne	16e14 <__cxa_demangle@@Base+0x461c>  // b.any
   16750:	mov	x0, x19
   16754:	bl	271e8 <__cxa_demangle@@Base+0x149f0>
   16758:	mov	x20, x0
   1675c:	cbz	x20, 16c9c <__cxa_demangle@@Base+0x44a4>
   16760:	ldp	x8, x9, [x19, #304]
   16764:	cmp	x8, x9
   16768:	b.ne	167d8 <__cxa_demangle@@Base+0x3fe0>  // b.any
   1676c:	ldr	x23, [x19, #296]
   16770:	add	x9, x19, #0x140
   16774:	cmp	x9, x23
   16778:	sub	x21, x8, x23
   1677c:	b.eq	1679c <__cxa_demangle@@Base+0x3fa4>  // b.none
   16780:	lsl	x1, x21, #1
   16784:	mov	x0, x23
   16788:	bl	ecc0 <realloc@plt>
   1678c:	mov	x22, x0
   16790:	str	x0, [x19, #296]
   16794:	cbnz	x0, 167c4 <__cxa_demangle@@Base+0x3fcc>
   16798:	b	17684 <__cxa_demangle@@Base+0x4e8c>
   1679c:	lsl	x0, x21, #1
   167a0:	bl	ec00 <malloc@plt>
   167a4:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   167a8:	mov	x22, x0
   167ac:	cbz	x21, 167c0 <__cxa_demangle@@Base+0x3fc8>
   167b0:	mov	x0, x22
   167b4:	mov	x1, x23
   167b8:	mov	x2, x21
   167bc:	bl	eae0 <memmove@plt>
   167c0:	str	x22, [x19, #296]
   167c4:	asr	x8, x21, #3
   167c8:	asr	x9, x21, #2
   167cc:	add	x8, x22, x8, lsl #3
   167d0:	add	x9, x22, x9, lsl #3
   167d4:	stp	x8, x9, [x19, #304]
   167d8:	add	x9, x8, #0x8
   167dc:	str	x9, [x19, #304]
   167e0:	str	x20, [x8]
   167e4:	b	16c9c <__cxa_demangle@@Base+0x44a4>
   167e8:	ldr	x21, [x19, #4912]
   167ec:	add	x8, x23, #0x1
   167f0:	str	x8, [x19]
   167f4:	ldr	x8, [x21, #8]
   167f8:	add	x9, x8, #0x20
   167fc:	cmp	x9, #0xff0
   16800:	b.cc	16820 <__cxa_demangle@@Base+0x4028>  // b.lo, b.ul, b.last
   16804:	mov	w0, #0x1000                	// #4096
   16808:	bl	ec00 <malloc@plt>
   1680c:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16810:	mov	x8, xzr
   16814:	stp	x21, xzr, [x0]
   16818:	mov	x21, x0
   1681c:	str	x0, [x19, #4912]
   16820:	add	x9, x8, #0x20
   16824:	add	x20, x21, x8
   16828:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1682c:	mov	w10, #0x107                 	// #263
   16830:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   16834:	add	x8, x8, #0xd60
   16838:	movk	w10, #0x101, lsl #16
   1683c:	add	x11, x11, #0x517
   16840:	str	x9, [x21, #8]
   16844:	str	x8, [x20, #16]!
   16848:	add	x8, x11, #0xd
   1684c:	b	16c94 <__cxa_demangle@@Base+0x449c>
   16850:	ldr	x21, [x19, #4912]
   16854:	add	x8, x23, #0x1
   16858:	str	x8, [x19]
   1685c:	ldr	x8, [x21, #8]
   16860:	add	x9, x8, #0x20
   16864:	cmp	x9, #0xff0
   16868:	b.cc	16888 <__cxa_demangle@@Base+0x4090>  // b.lo, b.ul, b.last
   1686c:	mov	w0, #0x1000                	// #4096
   16870:	bl	ec00 <malloc@plt>
   16874:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16878:	mov	x8, xzr
   1687c:	stp	x21, xzr, [x0]
   16880:	mov	x21, x0
   16884:	str	x0, [x19, #4912]
   16888:	add	x9, x8, #0x20
   1688c:	add	x20, x21, x8
   16890:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16894:	mov	w10, #0x107                 	// #263
   16898:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1689c:	add	x8, x8, #0xd60
   168a0:	movk	w10, #0x101, lsl #16
   168a4:	add	x11, x11, #0x52e
   168a8:	str	x9, [x21, #8]
   168ac:	str	x8, [x20, #16]!
   168b0:	add	x8, x11, #0x5
   168b4:	b	16c94 <__cxa_demangle@@Base+0x449c>
   168b8:	add	x8, x23, #0x1
   168bc:	cmp	x22, x8
   168c0:	str	x8, [x19]
   168c4:	b.eq	16ed4 <__cxa_demangle@@Base+0x46dc>  // b.none
   168c8:	ldrb	w9, [x8]
   168cc:	sub	w9, w9, #0x30
   168d0:	cmp	w9, #0x9
   168d4:	b.hi	16ed4 <__cxa_demangle@@Base+0x46dc>  // b.pmore
   168d8:	cmp	x8, x22
   168dc:	b.eq	16ec0 <__cxa_demangle@@Base+0x46c8>  // b.none
   168e0:	mov	x9, xzr
   168e4:	mov	x10, x8
   168e8:	add	x8, x8, #0x1
   168ec:	str	x8, [x19]
   168f0:	ldrb	w10, [x10]
   168f4:	cmp	x22, x8
   168f8:	add	x9, x9, x10
   168fc:	sub	x9, x9, #0x30
   16900:	b.eq	16eb8 <__cxa_demangle@@Base+0x46c0>  // b.none
   16904:	ldrb	w10, [x8]
   16908:	sub	w10, w10, #0x30
   1690c:	cmp	w10, #0xa
   16910:	b.cs	16eb8 <__cxa_demangle@@Base+0x46c0>  // b.hs, b.nlast
   16914:	add	x9, x9, x9, lsl #2
   16918:	cmp	x22, x8
   1691c:	lsl	x9, x9, #1
   16920:	b.ne	168e4 <__cxa_demangle@@Base+0x40ec>  // b.any
   16924:	sub	x9, x9, #0x30
   16928:	b	16ec4 <__cxa_demangle@@Base+0x46cc>
   1692c:	add	x8, x23, #0x1
   16930:	mov	x0, x19
   16934:	str	x8, [x19]
   16938:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1693c:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   16940:	ldr	x22, [x19, #4912]
   16944:	mov	x21, x0
   16948:	ldr	x8, [x22, #8]
   1694c:	add	x9, x8, #0x20
   16950:	cmp	x9, #0xff0
   16954:	b.cc	16974 <__cxa_demangle@@Base+0x417c>  // b.lo, b.ul, b.last
   16958:	mov	w0, #0x1000                	// #4096
   1695c:	bl	ec00 <malloc@plt>
   16960:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16964:	mov	x8, xzr
   16968:	stp	x22, xzr, [x0]
   1696c:	mov	x22, x0
   16970:	str	x0, [x19, #4912]
   16974:	add	x9, x8, #0x20
   16978:	str	x9, [x22, #8]
   1697c:	ldrb	w9, [x21, #9]
   16980:	add	x20, x22, x8
   16984:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   16988:	add	x8, x8, #0xc70
   1698c:	mov	w10, #0xc                   	// #12
   16990:	mov	w11, #0x101                 	// #257
   16994:	str	x8, [x20, #16]!
   16998:	strb	w10, [x20, #8]
   1699c:	strh	w11, [x20, #10]
   169a0:	str	x21, [x20, #16]
   169a4:	str	wzr, [x20, #24]
   169a8:	strb	w9, [x20, #9]
   169ac:	strb	wzr, [x20, #28]
   169b0:	b	16760 <__cxa_demangle@@Base+0x3f68>
   169b4:	ldr	x21, [x19, #4912]
   169b8:	add	x8, x23, #0x1
   169bc:	str	x8, [x19]
   169c0:	ldr	x8, [x21, #8]
   169c4:	add	x9, x8, #0x20
   169c8:	cmp	x9, #0xff0
   169cc:	b.cc	169ec <__cxa_demangle@@Base+0x41f4>  // b.lo, b.ul, b.last
   169d0:	mov	w0, #0x1000                	// #4096
   169d4:	bl	ec00 <malloc@plt>
   169d8:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   169dc:	mov	x8, xzr
   169e0:	stp	x21, xzr, [x0]
   169e4:	mov	x21, x0
   169e8:	str	x0, [x19, #4912]
   169ec:	add	x9, x8, #0x20
   169f0:	add	x20, x21, x8
   169f4:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   169f8:	mov	w10, #0x107                 	// #263
   169fc:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   16a00:	add	x8, x8, #0xd60
   16a04:	movk	w10, #0x101, lsl #16
   16a08:	add	x11, x11, #0x3d5
   16a0c:	b	16c20 <__cxa_demangle@@Base+0x4428>
   16a10:	ldr	x21, [x19, #4912]
   16a14:	add	x8, x23, #0x1
   16a18:	str	x8, [x19]
   16a1c:	ldr	x8, [x21, #8]
   16a20:	add	x9, x8, #0x20
   16a24:	cmp	x9, #0xff0
   16a28:	b.cc	16a48 <__cxa_demangle@@Base+0x4250>  // b.lo, b.ul, b.last
   16a2c:	mov	w0, #0x1000                	// #4096
   16a30:	bl	ec00 <malloc@plt>
   16a34:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16a38:	mov	x8, xzr
   16a3c:	stp	x21, xzr, [x0]
   16a40:	mov	x21, x0
   16a44:	str	x0, [x19, #4912]
   16a48:	add	x9, x8, #0x20
   16a4c:	add	x20, x21, x8
   16a50:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16a54:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   16a58:	add	x8, x8, #0xd60
   16a5c:	mov	w10, #0x107                 	// #263
   16a60:	add	x11, x11, #0x3a1
   16a64:	movk	w10, #0x101, lsl #16
   16a68:	str	x9, [x21, #8]
   16a6c:	str	x8, [x20, #16]!
   16a70:	add	x8, x11, #0xc
   16a74:	b	16c94 <__cxa_demangle@@Base+0x449c>
   16a78:	ldr	x21, [x19, #4912]
   16a7c:	add	x8, x23, #0x1
   16a80:	str	x8, [x19]
   16a84:	ldr	x8, [x21, #8]
   16a88:	add	x9, x8, #0x20
   16a8c:	cmp	x9, #0xff0
   16a90:	b.cc	16ab0 <__cxa_demangle@@Base+0x42b8>  // b.lo, b.ul, b.last
   16a94:	mov	w0, #0x1000                	// #4096
   16a98:	bl	ec00 <malloc@plt>
   16a9c:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16aa0:	mov	x8, xzr
   16aa4:	stp	x21, xzr, [x0]
   16aa8:	mov	x21, x0
   16aac:	str	x0, [x19, #4912]
   16ab0:	add	x9, x8, #0x20
   16ab4:	add	x20, x21, x8
   16ab8:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16abc:	mov	w10, #0x107                 	// #263
   16ac0:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   16ac4:	add	x8, x8, #0xd60
   16ac8:	movk	w10, #0x101, lsl #16
   16acc:	add	x11, x11, #0x525
   16ad0:	str	x9, [x21, #8]
   16ad4:	str	x8, [x20, #16]!
   16ad8:	add	x8, x11, #0xe
   16adc:	b	16c94 <__cxa_demangle@@Base+0x449c>
   16ae0:	add	x8, x23, #0x1
   16ae4:	mov	x0, x19
   16ae8:	str	x8, [x19]
   16aec:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   16af0:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   16af4:	ldr	x22, [x19, #4912]
   16af8:	mov	x21, x0
   16afc:	ldr	x8, [x22, #8]
   16b00:	add	x9, x8, #0x20
   16b04:	cmp	x9, #0xff0
   16b08:	b.cc	16b28 <__cxa_demangle@@Base+0x4330>  // b.lo, b.ul, b.last
   16b0c:	mov	w0, #0x1000                	// #4096
   16b10:	bl	ec00 <malloc@plt>
   16b14:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16b18:	mov	x8, xzr
   16b1c:	stp	x22, xzr, [x0]
   16b20:	mov	x22, x0
   16b24:	str	x0, [x19, #4912]
   16b28:	add	x9, x8, #0x20
   16b2c:	str	x9, [x22, #8]
   16b30:	ldrb	w9, [x21, #9]
   16b34:	add	x20, x22, x8
   16b38:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   16b3c:	add	x8, x8, #0xc00
   16b40:	mov	w10, #0xb                   	// #11
   16b44:	mov	w11, #0x101                 	// #257
   16b48:	str	x8, [x20, #16]!
   16b4c:	strb	w10, [x20, #8]
   16b50:	strh	w11, [x20, #10]
   16b54:	strb	w9, [x20, #9]
   16b58:	str	x21, [x20, #16]
   16b5c:	b	16760 <__cxa_demangle@@Base+0x3f68>
   16b60:	ldr	x21, [x19, #4912]
   16b64:	add	x8, x23, #0x1
   16b68:	str	x8, [x19]
   16b6c:	ldr	x8, [x21, #8]
   16b70:	add	x9, x8, #0x20
   16b74:	cmp	x9, #0xff0
   16b78:	b.cc	16b98 <__cxa_demangle@@Base+0x43a0>  // b.lo, b.ul, b.last
   16b7c:	mov	w0, #0x1000                	// #4096
   16b80:	bl	ec00 <malloc@plt>
   16b84:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16b88:	mov	x8, xzr
   16b8c:	stp	x21, xzr, [x0]
   16b90:	mov	x21, x0
   16b94:	str	x0, [x19, #4912]
   16b98:	add	x9, x8, #0x20
   16b9c:	add	x20, x21, x8
   16ba0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16ba4:	mov	w10, #0x107                 	// #263
   16ba8:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   16bac:	add	x8, x8, #0xd60
   16bb0:	movk	w10, #0x101, lsl #16
   16bb4:	add	x11, x11, #0x3c5
   16bb8:	str	x9, [x21, #8]
   16bbc:	str	x8, [x20, #16]!
   16bc0:	add	x8, x11, #0x9
   16bc4:	b	16c94 <__cxa_demangle@@Base+0x449c>
   16bc8:	ldr	x21, [x19, #4912]
   16bcc:	add	x8, x23, #0x1
   16bd0:	str	x8, [x19]
   16bd4:	ldr	x8, [x21, #8]
   16bd8:	add	x9, x8, #0x20
   16bdc:	cmp	x9, #0xff0
   16be0:	b.cc	16c00 <__cxa_demangle@@Base+0x4408>  // b.lo, b.ul, b.last
   16be4:	mov	w0, #0x1000                	// #4096
   16be8:	bl	ec00 <malloc@plt>
   16bec:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16bf0:	mov	x8, xzr
   16bf4:	stp	x21, xzr, [x0]
   16bf8:	mov	x21, x0
   16bfc:	str	x0, [x19, #4912]
   16c00:	add	x9, x8, #0x20
   16c04:	add	x20, x21, x8
   16c08:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16c0c:	mov	w10, #0x107                 	// #263
   16c10:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   16c14:	add	x8, x8, #0xd60
   16c18:	movk	w10, #0x101, lsl #16
   16c1c:	add	x11, x11, #0x519
   16c20:	str	x9, [x21, #8]
   16c24:	str	x8, [x20, #16]!
   16c28:	add	x8, x11, #0xb
   16c2c:	b	16c94 <__cxa_demangle@@Base+0x449c>
   16c30:	ldr	x21, [x19, #4912]
   16c34:	add	x8, x23, #0x1
   16c38:	str	x8, [x19]
   16c3c:	ldr	x8, [x21, #8]
   16c40:	add	x9, x8, #0x20
   16c44:	cmp	x9, #0xff0
   16c48:	b.cc	16c68 <__cxa_demangle@@Base+0x4470>  // b.lo, b.ul, b.last
   16c4c:	mov	w0, #0x1000                	// #4096
   16c50:	bl	ec00 <malloc@plt>
   16c54:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16c58:	mov	x8, xzr
   16c5c:	stp	x21, xzr, [x0]
   16c60:	mov	x21, x0
   16c64:	str	x0, [x19, #4912]
   16c68:	add	x9, x8, #0x20
   16c6c:	add	x20, x21, x8
   16c70:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16c74:	mov	w10, #0x107                 	// #263
   16c78:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   16c7c:	add	x8, x8, #0xd60
   16c80:	movk	w10, #0x101, lsl #16
   16c84:	add	x11, x11, #0x520
   16c88:	str	x9, [x21, #8]
   16c8c:	str	x8, [x20, #16]!
   16c90:	add	x8, x11, #0x4
   16c94:	str	w10, [x20, #8]
   16c98:	stp	x11, x8, [x20, #16]
   16c9c:	mov	x0, x20
   16ca0:	ldp	x20, x19, [sp, #48]
   16ca4:	ldp	x22, x21, [sp, #32]
   16ca8:	ldr	x23, [sp, #16]
   16cac:	ldp	x29, x30, [sp], #64
   16cb0:	ret
   16cb4:	ldrb	w21, [x20]
   16cb8:	bl	ed40 <__ctype_b_loc@plt>
   16cbc:	ldr	x8, [x0]
   16cc0:	ldrh	w9, [x8, w21, uxtw #1]
   16cc4:	tbnz	w9, #11, 16ce8 <__cxa_demangle@@Base+0x44f0>
   16cc8:	cmp	x20, x22
   16ccc:	b.eq	16d78 <__cxa_demangle@@Base+0x4580>  // b.none
   16cd0:	ldrb	w8, [x20]
   16cd4:	cmp	w8, #0x5f
   16cd8:	b.ne	16d78 <__cxa_demangle@@Base+0x4580>  // b.any
   16cdc:	mov	x21, xzr
   16ce0:	add	x8, x23, #0x2
   16ce4:	b	16da4 <__cxa_demangle@@Base+0x45ac>
   16ce8:	cmp	x22, x20
   16cec:	b.eq	16cfc <__cxa_demangle@@Base+0x4504>  // b.none
   16cf0:	ldrb	w9, [x20]
   16cf4:	ldrh	w8, [x8, x9, lsl #1]
   16cf8:	tbnz	w8, #11, 16f58 <__cxa_demangle@@Base+0x4760>
   16cfc:	mov	x20, xzr
   16d00:	mov	x22, xzr
   16d04:	ldr	x23, [x19, #4912]
   16d08:	ldr	x8, [x23, #8]
   16d0c:	add	x9, x8, #0x20
   16d10:	cmp	x9, #0xff0
   16d14:	b.cc	16d34 <__cxa_demangle@@Base+0x453c>  // b.lo, b.ul, b.last
   16d18:	mov	w0, #0x1000                	// #4096
   16d1c:	bl	ec00 <malloc@plt>
   16d20:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16d24:	mov	x8, xzr
   16d28:	stp	x23, xzr, [x0]
   16d2c:	mov	x23, x0
   16d30:	str	x0, [x19, #4912]
   16d34:	add	x9, x8, #0x20
   16d38:	add	x21, x23, x8
   16d3c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16d40:	add	x8, x8, #0xd60
   16d44:	mov	w10, #0x107                 	// #263
   16d48:	movk	w10, #0x101, lsl #16
   16d4c:	str	x9, [x23, #8]
   16d50:	str	x8, [x21, #16]!
   16d54:	str	w10, [x21, #8]
   16d58:	stp	x20, x22, [x21, #16]
   16d5c:	ldp	x8, x9, [x19]
   16d60:	cmp	x8, x9
   16d64:	b.eq	16f50 <__cxa_demangle@@Base+0x4758>  // b.none
   16d68:	ldrb	w9, [x8]
   16d6c:	cmp	w9, #0x5f
   16d70:	b.eq	16da0 <__cxa_demangle@@Base+0x45a8>  // b.none
   16d74:	b	16f50 <__cxa_demangle@@Base+0x4758>
   16d78:	mov	x0, x19
   16d7c:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   16d80:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   16d84:	ldp	x8, x9, [x19]
   16d88:	cmp	x8, x9
   16d8c:	b.eq	16f50 <__cxa_demangle@@Base+0x4758>  // b.none
   16d90:	ldrb	w9, [x8]
   16d94:	cmp	w9, #0x5f
   16d98:	b.ne	16f50 <__cxa_demangle@@Base+0x4758>  // b.any
   16d9c:	mov	x21, x0
   16da0:	add	x8, x8, #0x1
   16da4:	mov	x0, x19
   16da8:	str	x8, [x19]
   16dac:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   16db0:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   16db4:	ldr	x23, [x19, #4912]
   16db8:	mov	x22, x0
   16dbc:	ldr	x8, [x23, #8]
   16dc0:	add	x9, x8, #0x20
   16dc4:	cmp	x9, #0xff0
   16dc8:	b.cc	16de8 <__cxa_demangle@@Base+0x45f0>  // b.lo, b.ul, b.last
   16dcc:	mov	w0, #0x1000                	// #4096
   16dd0:	bl	ec00 <malloc@plt>
   16dd4:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16dd8:	mov	x8, xzr
   16ddc:	stp	x23, xzr, [x0]
   16de0:	mov	x23, x0
   16de4:	str	x0, [x19, #4912]
   16de8:	add	x9, x8, #0x20
   16dec:	add	x20, x23, x8
   16df0:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   16df4:	add	x8, x8, #0xab0
   16df8:	mov	w10, #0xe                   	// #14
   16dfc:	movk	w10, #0x100, lsl #16
   16e00:	str	x9, [x23, #8]
   16e04:	str	x8, [x20, #16]!
   16e08:	str	w10, [x20, #8]
   16e0c:	stp	x22, x21, [x20, #16]
   16e10:	b	16760 <__cxa_demangle@@Base+0x3f68>
   16e14:	mov	x0, x19
   16e18:	bl	18b30 <__cxa_demangle@@Base+0x6338>
   16e1c:	mov	x20, x0
   16e20:	cbz	x0, 16c9c <__cxa_demangle@@Base+0x44a4>
   16e24:	ldrb	w8, [x19, #776]
   16e28:	cbz	w8, 16c9c <__cxa_demangle@@Base+0x44a4>
   16e2c:	ldp	x8, x9, [x19]
   16e30:	cmp	x9, x8
   16e34:	b.eq	16c9c <__cxa_demangle@@Base+0x44a4>  // b.none
   16e38:	ldrb	w8, [x8]
   16e3c:	cmp	w8, #0x49
   16e40:	b.ne	16c9c <__cxa_demangle@@Base+0x44a4>  // b.any
   16e44:	mov	x0, x19
   16e48:	mov	w1, wzr
   16e4c:	bl	18f34 <__cxa_demangle@@Base+0x673c>
   16e50:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   16e54:	ldr	x22, [x19, #4912]
   16e58:	mov	x21, x0
   16e5c:	ldr	x8, [x22, #8]
   16e60:	add	x9, x8, #0x20
   16e64:	cmp	x9, #0xff0
   16e68:	b.cc	16e88 <__cxa_demangle@@Base+0x4690>  // b.lo, b.ul, b.last
   16e6c:	mov	w0, #0x1000                	// #4096
   16e70:	bl	ec00 <malloc@plt>
   16e74:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16e78:	mov	x8, xzr
   16e7c:	stp	x22, xzr, [x0]
   16e80:	mov	x22, x0
   16e84:	str	x0, [x19, #4912]
   16e88:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   16e8c:	add	x9, x8, #0x20
   16e90:	add	x8, x22, x8
   16e94:	add	x10, x10, #0x490
   16e98:	mov	w11, #0x125                 	// #293
   16e9c:	movk	w11, #0x101, lsl #16
   16ea0:	str	x9, [x22, #8]
   16ea4:	str	x10, [x8, #16]!
   16ea8:	str	w11, [x8, #8]
   16eac:	stp	x20, x21, [x8, #16]
   16eb0:	mov	x20, x8
   16eb4:	b	16760 <__cxa_demangle@@Base+0x3f68>
   16eb8:	mov	x21, x8
   16ebc:	b	16ec8 <__cxa_demangle@@Base+0x46d0>
   16ec0:	mov	x9, #0xffffffffffffffd0    	// #-48
   16ec4:	mov	x21, x22
   16ec8:	sub	x8, x22, x8
   16ecc:	cmp	x8, x9
   16ed0:	b.cs	16f40 <__cxa_demangle@@Base+0x4748>  // b.hs, b.nlast
   16ed4:	mov	x22, xzr
   16ed8:	mov	x21, xzr
   16edc:	cmp	x21, x22
   16ee0:	b.eq	16f50 <__cxa_demangle@@Base+0x4758>  // b.none
   16ee4:	ldr	x23, [x19, #4912]
   16ee8:	ldr	x8, [x23, #8]
   16eec:	add	x9, x8, #0x20
   16ef0:	cmp	x9, #0xff0
   16ef4:	b.cc	16f14 <__cxa_demangle@@Base+0x471c>  // b.lo, b.ul, b.last
   16ef8:	mov	w0, #0x1000                	// #4096
   16efc:	bl	ec00 <malloc@plt>
   16f00:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16f04:	mov	x8, xzr
   16f08:	stp	x23, xzr, [x0]
   16f0c:	mov	x23, x0
   16f10:	str	x0, [x19, #4912]
   16f14:	add	x9, x8, #0x20
   16f18:	add	x20, x23, x8
   16f1c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16f20:	add	x8, x8, #0xd60
   16f24:	mov	w10, #0x107                 	// #263
   16f28:	movk	w10, #0x101, lsl #16
   16f2c:	str	x9, [x23, #8]
   16f30:	str	x8, [x20, #16]!
   16f34:	str	w10, [x20, #8]
   16f38:	stp	x21, x22, [x20, #16]
   16f3c:	b	16760 <__cxa_demangle@@Base+0x3f68>
   16f40:	add	x22, x21, x9
   16f44:	str	x22, [x19]
   16f48:	cmp	x21, x22
   16f4c:	b.ne	16ee4 <__cxa_demangle@@Base+0x46ec>  // b.any
   16f50:	mov	x20, xzr
   16f54:	b	16c9c <__cxa_demangle@@Base+0x44a4>
   16f58:	add	x8, x23, #0x2
   16f5c:	cmp	x22, x8
   16f60:	str	x8, [x19]
   16f64:	b.eq	16d04 <__cxa_demangle@@Base+0x450c>  // b.none
   16f68:	ldrb	w9, [x8], #1
   16f6c:	ldr	x10, [x0]
   16f70:	ldrh	w9, [x10, x9, lsl #1]
   16f74:	tbnz	w9, #11, 16f5c <__cxa_demangle@@Base+0x4764>
   16f78:	sub	x22, x8, #0x1
   16f7c:	b	16d04 <__cxa_demangle@@Base+0x450c>
   16f80:	mov	x0, x19
   16f84:	bl	19978 <__cxa_demangle@@Base+0x7180>
   16f88:	b	16758 <__cxa_demangle@@Base+0x3f60>
   16f8c:	ldr	x21, [x19, #4912]
   16f90:	add	x8, x23, #0x2
   16f94:	str	x8, [x19]
   16f98:	ldr	x8, [x21, #8]
   16f9c:	add	x9, x8, #0x20
   16fa0:	cmp	x9, #0xff0
   16fa4:	b.cc	16fc4 <__cxa_demangle@@Base+0x47cc>  // b.lo, b.ul, b.last
   16fa8:	mov	w0, #0x1000                	// #4096
   16fac:	bl	ec00 <malloc@plt>
   16fb0:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   16fb4:	mov	x8, xzr
   16fb8:	stp	x21, xzr, [x0]
   16fbc:	mov	x21, x0
   16fc0:	str	x0, [x19, #4912]
   16fc4:	add	x9, x8, #0x20
   16fc8:	add	x20, x21, x8
   16fcc:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   16fd0:	mov	w10, #0x107                 	// #263
   16fd4:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   16fd8:	add	x8, x8, #0xd60
   16fdc:	movk	w10, #0x101, lsl #16
   16fe0:	add	x11, x11, #0x48f
   16fe4:	b	16c88 <__cxa_demangle@@Base+0x4490>
   16fe8:	ldr	x21, [x19, #4912]
   16fec:	add	x8, x23, #0x2
   16ff0:	str	x8, [x19]
   16ff4:	ldr	x8, [x21, #8]
   16ff8:	add	x9, x8, #0x20
   16ffc:	cmp	x9, #0xff0
   17000:	b.cc	17020 <__cxa_demangle@@Base+0x4828>  // b.lo, b.ul, b.last
   17004:	mov	w0, #0x1000                	// #4096
   17008:	bl	ec00 <malloc@plt>
   1700c:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   17010:	mov	x8, xzr
   17014:	stp	x21, xzr, [x0]
   17018:	mov	x21, x0
   1701c:	str	x0, [x19, #4912]
   17020:	add	x9, x8, #0x20
   17024:	add	x20, x21, x8
   17028:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1702c:	mov	w10, #0x107                 	// #263
   17030:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   17034:	add	x8, x8, #0xd60
   17038:	movk	w10, #0x101, lsl #16
   1703c:	add	x11, x11, #0x42f
   17040:	b	16ad0 <__cxa_demangle@@Base+0x42d8>
   17044:	ldr	x21, [x19, #4912]
   17048:	add	x8, x23, #0x2
   1704c:	str	x8, [x19]
   17050:	ldr	x8, [x21, #8]
   17054:	add	x9, x8, #0x20
   17058:	cmp	x9, #0xff0
   1705c:	b.cc	1707c <__cxa_demangle@@Base+0x4884>  // b.lo, b.ul, b.last
   17060:	mov	w0, #0x1000                	// #4096
   17064:	bl	ec00 <malloc@plt>
   17068:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   1706c:	mov	x8, xzr
   17070:	stp	x21, xzr, [x0]
   17074:	mov	x21, x0
   17078:	str	x0, [x19, #4912]
   1707c:	add	x9, x8, #0x20
   17080:	add	x20, x21, x8
   17084:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   17088:	mov	w10, #0x107                 	// #263
   1708c:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   17090:	add	x8, x8, #0xd60
   17094:	movk	w10, #0x101, lsl #16
   17098:	add	x11, x11, #0x3ec
   1709c:	b	16bb8 <__cxa_demangle@@Base+0x43c0>
   170a0:	ldr	x21, [x19, #4912]
   170a4:	add	x8, x23, #0x2
   170a8:	str	x8, [x19]
   170ac:	ldr	x8, [x21, #8]
   170b0:	add	x9, x8, #0x20
   170b4:	cmp	x9, #0xff0
   170b8:	b.cc	170d8 <__cxa_demangle@@Base+0x48e0>  // b.lo, b.ul, b.last
   170bc:	mov	w0, #0x1000                	// #4096
   170c0:	bl	ec00 <malloc@plt>
   170c4:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   170c8:	mov	x8, xzr
   170cc:	stp	x21, xzr, [x0]
   170d0:	mov	x21, x0
   170d4:	str	x0, [x19, #4912]
   170d8:	add	x9, x8, #0x20
   170dc:	add	x20, x21, x8
   170e0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   170e4:	mov	w10, #0x107                 	// #263
   170e8:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   170ec:	add	x8, x8, #0xd60
   170f0:	movk	w10, #0x101, lsl #16
   170f4:	add	x11, x11, #0x3f6
   170f8:	b	16320 <__cxa_demangle@@Base+0x3b28>
   170fc:	ldr	x21, [x19, #4912]
   17100:	add	x8, x23, #0x2
   17104:	str	x8, [x19]
   17108:	ldr	x8, [x21, #8]
   1710c:	add	x9, x8, #0x20
   17110:	cmp	x9, #0xff0
   17114:	b.cc	17134 <__cxa_demangle@@Base+0x493c>  // b.lo, b.ul, b.last
   17118:	mov	w0, #0x1000                	// #4096
   1711c:	bl	ec00 <malloc@plt>
   17120:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   17124:	mov	x8, xzr
   17128:	stp	x21, xzr, [x0]
   1712c:	mov	x21, x0
   17130:	str	x0, [x19, #4912]
   17134:	add	x9, x8, #0x20
   17138:	add	x20, x21, x8
   1713c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   17140:	mov	w10, #0x107                 	// #263
   17144:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   17148:	add	x8, x8, #0xd60
   1714c:	movk	w10, #0x101, lsl #16
   17150:	add	x11, x11, #0x401
   17154:	b	16bb8 <__cxa_demangle@@Base+0x43c0>
   17158:	ldr	x21, [x19, #4912]
   1715c:	add	x8, x23, #0x2
   17160:	str	x8, [x19]
   17164:	ldr	x8, [x21, #8]
   17168:	add	x9, x8, #0x20
   1716c:	cmp	x9, #0xff0
   17170:	b.cc	17190 <__cxa_demangle@@Base+0x4998>  // b.lo, b.ul, b.last
   17174:	mov	w0, #0x1000                	// #4096
   17178:	bl	ec00 <malloc@plt>
   1717c:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   17180:	mov	x8, xzr
   17184:	stp	x21, xzr, [x0]
   17188:	mov	x21, x0
   1718c:	str	x0, [x19, #4912]
   17190:	add	x9, x8, #0x20
   17194:	add	x20, x21, x8
   17198:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1719c:	mov	w10, #0x107                 	// #263
   171a0:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   171a4:	add	x8, x8, #0xd60
   171a8:	movk	w10, #0x101, lsl #16
   171ac:	add	x11, x11, #0x40b
   171b0:	b	16bb8 <__cxa_demangle@@Base+0x43c0>
   171b4:	ldr	x21, [x19, #4912]
   171b8:	add	x8, x23, #0x2
   171bc:	str	x8, [x19]
   171c0:	ldr	x8, [x21, #8]
   171c4:	add	x9, x8, #0x20
   171c8:	cmp	x9, #0xff0
   171cc:	b.cc	171ec <__cxa_demangle@@Base+0x49f4>  // b.lo, b.ul, b.last
   171d0:	mov	w0, #0x1000                	// #4096
   171d4:	bl	ec00 <malloc@plt>
   171d8:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   171dc:	mov	x8, xzr
   171e0:	stp	x21, xzr, [x0]
   171e4:	mov	x21, x0
   171e8:	str	x0, [x19, #4912]
   171ec:	add	x9, x8, #0x20
   171f0:	add	x20, x21, x8
   171f4:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   171f8:	mov	w10, #0x107                 	// #263
   171fc:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   17200:	add	x8, x8, #0xd60
   17204:	movk	w10, #0x101, lsl #16
   17208:	add	x11, x11, #0x415
   1720c:	b	16020 <__cxa_demangle@@Base+0x3828>
   17210:	ldr	x21, [x19, #4912]
   17214:	add	x8, x23, #0x2
   17218:	str	x8, [x19]
   1721c:	ldr	x8, [x21, #8]
   17220:	add	x9, x8, #0x20
   17224:	cmp	x9, #0xff0
   17228:	b.cc	17248 <__cxa_demangle@@Base+0x4a50>  // b.lo, b.ul, b.last
   1722c:	mov	w0, #0x1000                	// #4096
   17230:	bl	ec00 <malloc@plt>
   17234:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   17238:	mov	x8, xzr
   1723c:	stp	x21, xzr, [x0]
   17240:	mov	x21, x0
   17244:	str	x0, [x19, #4912]
   17248:	add	x9, x8, #0x20
   1724c:	add	x20, x21, x8
   17250:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   17254:	mov	w10, #0x107                 	// #263
   17258:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1725c:	add	x8, x8, #0xd60
   17260:	movk	w10, #0x101, lsl #16
   17264:	add	x11, x11, #0x43e
   17268:	b	16ad0 <__cxa_demangle@@Base+0x42d8>
   1726c:	add	x8, x23, #0x2
   17270:	mov	x0, x19
   17274:	str	x8, [x19]
   17278:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1727c:	cbz	x0, 16f50 <__cxa_demangle@@Base+0x4758>
   17280:	ldr	x22, [x19, #4912]
   17284:	mov	x21, x0
   17288:	ldr	x8, [x22, #8]
   1728c:	add	x9, x8, #0x20
   17290:	cmp	x9, #0xff0
   17294:	b.cc	172b4 <__cxa_demangle@@Base+0x4abc>  // b.lo, b.ul, b.last
   17298:	mov	w0, #0x1000                	// #4096
   1729c:	bl	ec00 <malloc@plt>
   172a0:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   172a4:	mov	x8, xzr
   172a8:	stp	x22, xzr, [x0]
   172ac:	mov	x22, x0
   172b0:	str	x0, [x19, #4912]
   172b4:	add	x9, x8, #0x20
   172b8:	add	x20, x22, x8
   172bc:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   172c0:	add	x8, x8, #0x620
   172c4:	mov	w10, #0x122                 	// #290
   172c8:	movk	w10, #0x101, lsl #16
   172cc:	str	x9, [x22, #8]
   172d0:	str	x8, [x20, #16]!
   172d4:	str	w10, [x20, #8]
   172d8:	str	x21, [x20, #16]
   172dc:	b	16760 <__cxa_demangle@@Base+0x3f68>
   172e0:	ldr	x21, [x19, #4912]
   172e4:	add	x8, x23, #0x2
   172e8:	str	x8, [x19]
   172ec:	ldr	x8, [x21, #8]
   172f0:	add	x9, x8, #0x20
   172f4:	cmp	x9, #0xff0
   172f8:	b.cc	17318 <__cxa_demangle@@Base+0x4b20>  // b.lo, b.ul, b.last
   172fc:	mov	w0, #0x1000                	// #4096
   17300:	bl	ec00 <malloc@plt>
   17304:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   17308:	mov	x8, xzr
   1730c:	stp	x21, xzr, [x0]
   17310:	mov	x21, x0
   17314:	str	x0, [x19, #4912]
   17318:	add	x9, x8, #0x20
   1731c:	add	x20, x21, x8
   17320:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   17324:	mov	w10, #0x107                 	// #263
   17328:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1732c:	add	x8, x8, #0xd60
   17330:	movk	w10, #0x101, lsl #16
   17334:	add	x11, x11, #0x41e
   17338:	b	16020 <__cxa_demangle@@Base+0x3828>
   1733c:	ldr	x21, [x19, #4912]
   17340:	add	x8, x23, #0x2
   17344:	str	x8, [x19]
   17348:	ldr	x8, [x21, #8]
   1734c:	add	x9, x8, #0x20
   17350:	cmp	x9, #0xff0
   17354:	b.cc	17374 <__cxa_demangle@@Base+0x4b7c>  // b.lo, b.ul, b.last
   17358:	mov	w0, #0x1000                	// #4096
   1735c:	bl	ec00 <malloc@plt>
   17360:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   17364:	mov	x8, xzr
   17368:	stp	x21, xzr, [x0]
   1736c:	mov	x21, x0
   17370:	str	x0, [x19, #4912]
   17374:	add	x9, x8, #0x20
   17378:	add	x20, x21, x8
   1737c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   17380:	mov	w10, #0x107                 	// #263
   17384:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   17388:	add	x8, x8, #0xd60
   1738c:	movk	w10, #0x101, lsl #16
   17390:	add	x11, x11, #0x427
   17394:	b	16388 <__cxa_demangle@@Base+0x3b90>
   17398:	add	x20, x23, #0x2
   1739c:	cmp	x22, x20
   173a0:	str	x20, [x19]
   173a4:	b.eq	173d8 <__cxa_demangle@@Base+0x4be0>  // b.none
   173a8:	ldrb	w21, [x20]
   173ac:	sub	w8, w21, #0x31
   173b0:	and	w8, w8, #0xff
   173b4:	cmp	w8, #0x8
   173b8:	b.hi	173d8 <__cxa_demangle@@Base+0x4be0>  // b.pmore
   173bc:	bl	ed40 <__ctype_b_loc@plt>
   173c0:	ldr	x8, [x0]
   173c4:	ldrh	w8, [x8, x21, lsl #1]
   173c8:	tbnz	w8, #11, 174fc <__cxa_demangle@@Base+0x4d04>
   173cc:	mov	x20, xzr
   173d0:	mov	x22, xzr
   173d4:	b	17520 <__cxa_demangle@@Base+0x4d28>
   173d8:	cmp	x20, x22
   173dc:	b.eq	17460 <__cxa_demangle@@Base+0x4c68>  // b.none
   173e0:	ldrb	w8, [x20]
   173e4:	cmp	w8, #0x5f
   173e8:	b.ne	17460 <__cxa_demangle@@Base+0x4c68>  // b.any
   173ec:	add	x8, x23, #0x3
   173f0:	mov	x0, x19
   173f4:	str	x8, [x19]
   173f8:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   173fc:	cbz	x0, 1767c <__cxa_demangle@@Base+0x4e84>
   17400:	ldr	x22, [x19, #4912]
   17404:	mov	x21, x0
   17408:	ldr	x8, [x22, #8]
   1740c:	add	x9, x8, #0x20
   17410:	cmp	x9, #0xff0
   17414:	b.cc	17434 <__cxa_demangle@@Base+0x4c3c>  // b.lo, b.ul, b.last
   17418:	mov	w0, #0x1000                	// #4096
   1741c:	bl	ec00 <malloc@plt>
   17420:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   17424:	mov	x8, xzr
   17428:	stp	x22, xzr, [x0]
   1742c:	mov	x22, x0
   17430:	str	x0, [x19, #4912]
   17434:	add	x9, x8, #0x20
   17438:	add	x20, x22, x8
   1743c:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   17440:	add	x8, x8, #0xa40
   17444:	mov	w10, #0x119                 	// #281
   17448:	movk	w10, #0x101, lsl #16
   1744c:	str	x9, [x22, #8]
   17450:	str	x8, [x20, #16]!
   17454:	str	w10, [x20, #8]
   17458:	stp	x21, xzr, [x20, #16]
   1745c:	b	1675c <__cxa_demangle@@Base+0x3f64>
   17460:	mov	x0, x19
   17464:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   17468:	cbz	x0, 1767c <__cxa_demangle@@Base+0x4e84>
   1746c:	ldp	x8, x9, [x19]
   17470:	cmp	x8, x9
   17474:	b.eq	1767c <__cxa_demangle@@Base+0x4e84>  // b.none
   17478:	ldrb	w9, [x8]
   1747c:	cmp	w9, #0x5f
   17480:	b.ne	1767c <__cxa_demangle@@Base+0x4e84>  // b.any
   17484:	mov	x21, x0
   17488:	add	x8, x8, #0x1
   1748c:	mov	x0, x19
   17490:	str	x8, [x19]
   17494:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   17498:	cbz	x0, 1767c <__cxa_demangle@@Base+0x4e84>
   1749c:	ldr	x23, [x19, #4912]
   174a0:	mov	x22, x0
   174a4:	ldr	x8, [x23, #8]
   174a8:	add	x9, x8, #0x20
   174ac:	cmp	x9, #0xff0
   174b0:	b.cc	174d0 <__cxa_demangle@@Base+0x4cd8>  // b.lo, b.ul, b.last
   174b4:	mov	w0, #0x1000                	// #4096
   174b8:	bl	ec00 <malloc@plt>
   174bc:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   174c0:	mov	x8, xzr
   174c4:	stp	x23, xzr, [x0]
   174c8:	mov	x23, x0
   174cc:	str	x0, [x19, #4912]
   174d0:	add	x9, x8, #0x20
   174d4:	add	x20, x23, x8
   174d8:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   174dc:	add	x8, x8, #0xa40
   174e0:	mov	w10, #0x119                 	// #281
   174e4:	movk	w10, #0x101, lsl #16
   174e8:	str	x9, [x23, #8]
   174ec:	str	x8, [x20, #16]!
   174f0:	str	w10, [x20, #8]
   174f4:	stp	x22, x21, [x20, #16]
   174f8:	b	1675c <__cxa_demangle@@Base+0x3f64>
   174fc:	add	x8, x23, #0x3
   17500:	cmp	x22, x8
   17504:	str	x8, [x19]
   17508:	b.eq	17520 <__cxa_demangle@@Base+0x4d28>  // b.none
   1750c:	ldrb	w9, [x8], #1
   17510:	ldr	x10, [x0]
   17514:	ldrh	w9, [x10, x9, lsl #1]
   17518:	tbnz	w9, #11, 17500 <__cxa_demangle@@Base+0x4d08>
   1751c:	sub	x22, x8, #0x1
   17520:	ldr	x21, [x19, #4912]
   17524:	ldr	x8, [x21, #8]
   17528:	add	x9, x8, #0x20
   1752c:	cmp	x9, #0xff0
   17530:	b.cc	17550 <__cxa_demangle@@Base+0x4d58>  // b.lo, b.ul, b.last
   17534:	mov	w0, #0x1000                	// #4096
   17538:	bl	ec00 <malloc@plt>
   1753c:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   17540:	mov	x8, xzr
   17544:	stp	x21, xzr, [x0]
   17548:	mov	x21, x0
   1754c:	str	x0, [x19, #4912]
   17550:	add	x9, x8, #0x20
   17554:	add	x23, x21, x8
   17558:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1755c:	add	x8, x8, #0xd60
   17560:	mov	w10, #0x107                 	// #263
   17564:	movk	w10, #0x101, lsl #16
   17568:	str	x9, [x21, #8]
   1756c:	str	x8, [x23, #16]!
   17570:	str	w10, [x23, #8]
   17574:	stp	x20, x22, [x23, #16]
   17578:	ldp	x8, x9, [x19]
   1757c:	cmp	x8, x9
   17580:	b.eq	1767c <__cxa_demangle@@Base+0x4e84>  // b.none
   17584:	ldrb	w10, [x8]
   17588:	cmp	w10, #0x5f
   1758c:	b.ne	1767c <__cxa_demangle@@Base+0x4e84>  // b.any
   17590:	add	x10, x8, #0x1
   17594:	cmp	x10, x9
   17598:	str	x10, [x19]
   1759c:	b.eq	17610 <__cxa_demangle@@Base+0x4e18>  // b.none
   175a0:	ldrb	w9, [x10]
   175a4:	cmp	w9, #0x70
   175a8:	b.ne	17610 <__cxa_demangle@@Base+0x4e18>  // b.any
   175ac:	ldr	x21, [x19, #4912]
   175b0:	add	x8, x8, #0x2
   175b4:	str	x8, [x19]
   175b8:	ldr	x8, [x21, #8]
   175bc:	add	x9, x8, #0x20
   175c0:	cmp	x9, #0xff0
   175c4:	b.cc	175e4 <__cxa_demangle@@Base+0x4dec>  // b.lo, b.ul, b.last
   175c8:	mov	w0, #0x1000                	// #4096
   175cc:	bl	ec00 <malloc@plt>
   175d0:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   175d4:	mov	x8, xzr
   175d8:	stp	x21, xzr, [x0]
   175dc:	mov	x21, x0
   175e0:	str	x0, [x19, #4912]
   175e4:	add	x9, x8, #0x20
   175e8:	add	x20, x21, x8
   175ec:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   175f0:	add	x8, x8, #0x9d0
   175f4:	mov	w10, #0x11a                 	// #282
   175f8:	movk	w10, #0x101, lsl #16
   175fc:	str	x9, [x21, #8]
   17600:	str	x8, [x20, #16]!
   17604:	str	w10, [x20, #8]
   17608:	str	x23, [x20, #16]
   1760c:	b	1675c <__cxa_demangle@@Base+0x3f64>
   17610:	mov	x0, x19
   17614:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   17618:	cbz	x0, 1767c <__cxa_demangle@@Base+0x4e84>
   1761c:	ldr	x22, [x19, #4912]
   17620:	mov	x21, x0
   17624:	ldr	x8, [x22, #8]
   17628:	add	x9, x8, #0x20
   1762c:	cmp	x9, #0xff0
   17630:	b.cc	17650 <__cxa_demangle@@Base+0x4e58>  // b.lo, b.ul, b.last
   17634:	mov	w0, #0x1000                	// #4096
   17638:	bl	ec00 <malloc@plt>
   1763c:	cbz	x0, 17684 <__cxa_demangle@@Base+0x4e8c>
   17640:	mov	x8, xzr
   17644:	stp	x22, xzr, [x0]
   17648:	mov	x22, x0
   1764c:	str	x0, [x19, #4912]
   17650:	add	x9, x8, #0x20
   17654:	add	x20, x22, x8
   17658:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   1765c:	add	x8, x8, #0xa40
   17660:	mov	w10, #0x119                 	// #281
   17664:	movk	w10, #0x101, lsl #16
   17668:	str	x9, [x22, #8]
   1766c:	str	x8, [x20, #16]!
   17670:	str	w10, [x20, #8]
   17674:	stp	x21, x23, [x20, #16]
   17678:	b	1675c <__cxa_demangle@@Base+0x3f64>
   1767c:	mov	x20, xzr
   17680:	b	1675c <__cxa_demangle@@Base+0x3f64>
   17684:	bl	eeb0 <_ZSt9terminatev@plt>
   17688:	sub	sp, sp, #0x70
   1768c:	stp	x29, x30, [sp, #16]
   17690:	stp	x28, x27, [sp, #32]
   17694:	stp	x26, x25, [sp, #48]
   17698:	stp	x24, x23, [sp, #64]
   1769c:	stp	x22, x21, [sp, #80]
   176a0:	stp	x20, x19, [sp, #96]
   176a4:	add	x29, sp, #0x10
   176a8:	ldp	x10, x8, [x0]
   176ac:	mov	x19, x0
   176b0:	mov	x20, x1
   176b4:	cmp	x10, x8
   176b8:	b.eq	176d0 <__cxa_demangle@@Base+0x4ed8>  // b.none
   176bc:	ldrb	w9, [x10]
   176c0:	cmp	w9, #0x4c
   176c4:	b.ne	176d0 <__cxa_demangle@@Base+0x4ed8>  // b.any
   176c8:	add	x10, x10, #0x1
   176cc:	str	x10, [x19]
   176d0:	subs	x9, x8, x10
   176d4:	b.eq	17978 <__cxa_demangle@@Base+0x5180>  // b.none
   176d8:	ldrb	w11, [x10]
   176dc:	cmp	w11, #0x5a
   176e0:	b.eq	17750 <__cxa_demangle@@Base+0x4f58>  // b.none
   176e4:	cmp	w11, #0x53
   176e8:	b.eq	17728 <__cxa_demangle@@Base+0x4f30>  // b.none
   176ec:	cmp	w11, #0x4e
   176f0:	b.ne	1773c <__cxa_demangle@@Base+0x4f44>  // b.any
   176f4:	cmp	x10, x8
   176f8:	b.eq	182c4 <__cxa_demangle@@Base+0x5acc>  // b.none
   176fc:	add	x9, x10, #0x1
   17700:	cmp	x9, x8
   17704:	str	x9, [x19]
   17708:	b.eq	179e0 <__cxa_demangle@@Base+0x51e8>  // b.none
   1770c:	ldrb	w11, [x9]
   17710:	cmp	w11, #0x72
   17714:	b.ne	179ec <__cxa_demangle@@Base+0x51f4>  // b.any
   17718:	add	x9, x10, #0x2
   1771c:	mov	w10, #0x4                   	// #4
   17720:	str	x9, [x19]
   17724:	b	179f0 <__cxa_demangle@@Base+0x51f8>
   17728:	cmp	x9, #0x2
   1772c:	b.cc	17810 <__cxa_demangle@@Base+0x5018>  // b.lo, b.ul, b.last
   17730:	ldrb	w8, [x10, #1]
   17734:	cmp	w8, #0x74
   17738:	b.ne	17810 <__cxa_demangle@@Base+0x5018>  // b.any
   1773c:	cmp	x9, #0x3
   17740:	b.cs	178b8 <__cxa_demangle@@Base+0x50c0>  // b.hs, b.nlast
   17744:	cmp	x9, #0x2
   17748:	b.ne	17978 <__cxa_demangle@@Base+0x5180>  // b.any
   1774c:	b	178e4 <__cxa_demangle@@Base+0x50ec>
   17750:	cmp	x10, x8
   17754:	b.eq	182c4 <__cxa_demangle@@Base+0x5acc>  // b.none
   17758:	add	x8, x10, #0x1
   1775c:	mov	x0, x19
   17760:	str	x8, [x19]
   17764:	bl	150bc <__cxa_demangle@@Base+0x28c4>
   17768:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   1776c:	ldp	x23, x22, [x19]
   17770:	cmp	x23, x22
   17774:	b.eq	182c4 <__cxa_demangle@@Base+0x5acc>  // b.none
   17778:	ldrb	w8, [x23]
   1777c:	cmp	w8, #0x45
   17780:	b.ne	182c4 <__cxa_demangle@@Base+0x5acc>  // b.any
   17784:	add	x8, x23, #0x1
   17788:	mov	x21, x0
   1778c:	cmp	x8, x22
   17790:	str	x8, [x19]
   17794:	b.eq	18100 <__cxa_demangle@@Base+0x5908>  // b.none
   17798:	ldrb	w9, [x8]
   1779c:	cmp	w9, #0x73
   177a0:	b.ne	180c4 <__cxa_demangle@@Base+0x58cc>  // b.any
   177a4:	add	x20, x23, #0x2
   177a8:	cmp	x20, x22
   177ac:	str	x20, [x19]
   177b0:	b.eq	181d4 <__cxa_demangle@@Base+0x59dc>  // b.none
   177b4:	ldrb	w24, [x20]
   177b8:	cmp	x24, #0x5f
   177bc:	b.ne	181a8 <__cxa_demangle@@Base+0x59b0>  // b.any
   177c0:	add	x8, x23, #0x3
   177c4:	cmp	x8, x22
   177c8:	b.eq	181d0 <__cxa_demangle@@Base+0x59d8>  // b.none
   177cc:	ldrb	w24, [x8]
   177d0:	bl	ed40 <__ctype_b_loc@plt>
   177d4:	ldr	x8, [x0]
   177d8:	ldrh	w9, [x8, x24, lsl #1]
   177dc:	tbnz	w9, #11, 182f4 <__cxa_demangle@@Base+0x5afc>
   177e0:	cmp	w24, #0x5f
   177e4:	b.ne	181d0 <__cxa_demangle@@Base+0x59d8>  // b.any
   177e8:	add	x9, x23, #0x4
   177ec:	cmp	x9, x22
   177f0:	b.eq	181d0 <__cxa_demangle@@Base+0x59d8>  // b.none
   177f4:	ldrb	w10, [x9]
   177f8:	ldrh	w11, [x8, x10, lsl #1]
   177fc:	tbz	w11, #11, 1836c <__cxa_demangle@@Base+0x5b74>
   17800:	add	x9, x9, #0x1
   17804:	cmp	x22, x9
   17808:	b.ne	177f4 <__cxa_demangle@@Base+0x4ffc>  // b.any
   1780c:	b	181d0 <__cxa_demangle@@Base+0x59d8>
   17810:	mov	x0, x19
   17814:	bl	18b30 <__cxa_demangle@@Base+0x6338>
   17818:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   1781c:	ldp	x8, x9, [x19]
   17820:	cmp	x9, x8
   17824:	b.eq	182c4 <__cxa_demangle@@Base+0x5acc>  // b.none
   17828:	ldrb	w8, [x8]
   1782c:	cmp	w8, #0x49
   17830:	b.ne	182c4 <__cxa_demangle@@Base+0x5acc>  // b.any
   17834:	cmp	x20, #0x0
   17838:	mov	x21, x0
   1783c:	cset	w1, ne  // ne = any
   17840:	mov	x0, x19
   17844:	bl	18f34 <__cxa_demangle@@Base+0x673c>
   17848:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   1784c:	mov	x23, x0
   17850:	cbz	x20, 1785c <__cxa_demangle@@Base+0x5064>
   17854:	mov	w8, #0x1                   	// #1
   17858:	strb	w8, [x20, #1]
   1785c:	ldr	x20, [x19, #4912]
   17860:	ldr	x8, [x20, #8]
   17864:	add	x9, x8, #0x20
   17868:	cmp	x9, #0xff0
   1786c:	b.cc	1788c <__cxa_demangle@@Base+0x5094>  // b.lo, b.ul, b.last
   17870:	mov	w0, #0x1000                	// #4096
   17874:	bl	ec00 <malloc@plt>
   17878:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   1787c:	mov	x8, xzr
   17880:	stp	x20, xzr, [x0]
   17884:	mov	x20, x0
   17888:	str	x0, [x19, #4912]
   1788c:	add	x9, x8, #0x20
   17890:	add	x22, x20, x8
   17894:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   17898:	add	x8, x8, #0x490
   1789c:	mov	w10, #0x125                 	// #293
   178a0:	movk	w10, #0x101, lsl #16
   178a4:	str	x9, [x20, #8]
   178a8:	str	x8, [x22, #16]!
   178ac:	str	w10, [x22, #8]
   178b0:	stp	x21, x23, [x22, #16]
   178b4:	b	182c8 <__cxa_demangle@@Base+0x5ad0>
   178b8:	ldrb	w8, [x10]
   178bc:	cmp	w8, #0x53
   178c0:	b.ne	17978 <__cxa_demangle@@Base+0x5180>  // b.any
   178c4:	ldrb	w8, [x10, #1]
   178c8:	cmp	w8, #0x74
   178cc:	b.ne	178e4 <__cxa_demangle@@Base+0x50ec>  // b.any
   178d0:	ldrb	w8, [x10, #2]
   178d4:	cmp	w8, #0x4c
   178d8:	b.ne	178e4 <__cxa_demangle@@Base+0x50ec>  // b.any
   178dc:	mov	w8, #0x3                   	// #3
   178e0:	b	17900 <__cxa_demangle@@Base+0x5108>
   178e4:	ldrb	w8, [x10]
   178e8:	cmp	w8, #0x53
   178ec:	b.ne	17978 <__cxa_demangle@@Base+0x5180>  // b.any
   178f0:	ldrb	w8, [x10, #1]
   178f4:	cmp	w8, #0x74
   178f8:	b.ne	17978 <__cxa_demangle@@Base+0x5180>  // b.any
   178fc:	mov	w8, #0x2                   	// #2
   17900:	add	x8, x10, x8
   17904:	mov	x0, x19
   17908:	mov	x1, x20
   1790c:	str	x8, [x19]
   17910:	bl	19e90 <__cxa_demangle@@Base+0x7698>
   17914:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   17918:	ldr	x23, [x19, #4912]
   1791c:	mov	x21, x0
   17920:	ldr	x8, [x23, #8]
   17924:	add	x9, x8, #0x20
   17928:	cmp	x9, #0xff0
   1792c:	b.cc	1794c <__cxa_demangle@@Base+0x5154>  // b.lo, b.ul, b.last
   17930:	mov	w0, #0x1000                	// #4096
   17934:	bl	ec00 <malloc@plt>
   17938:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   1793c:	mov	x8, xzr
   17940:	stp	x23, xzr, [x0]
   17944:	mov	x23, x0
   17948:	str	x0, [x19, #4912]
   1794c:	add	x9, x8, #0x20
   17950:	add	x22, x23, x8
   17954:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   17958:	add	x8, x8, #0x500
   1795c:	mov	w10, #0x127                 	// #295
   17960:	movk	w10, #0x101, lsl #16
   17964:	str	x9, [x23, #8]
   17968:	str	x8, [x22, #16]!
   1796c:	str	w10, [x22, #8]
   17970:	str	x21, [x22, #16]
   17974:	b	1798c <__cxa_demangle@@Base+0x5194>
   17978:	mov	x0, x19
   1797c:	mov	x1, x20
   17980:	bl	19e90 <__cxa_demangle@@Base+0x7698>
   17984:	mov	x22, x0
   17988:	cbz	x0, 182c8 <__cxa_demangle@@Base+0x5ad0>
   1798c:	ldp	x8, x9, [x19]
   17990:	cmp	x9, x8
   17994:	b.eq	182c8 <__cxa_demangle@@Base+0x5ad0>  // b.none
   17998:	ldrb	w8, [x8]
   1799c:	cmp	w8, #0x49
   179a0:	b.ne	182c8 <__cxa_demangle@@Base+0x5ad0>  // b.any
   179a4:	ldp	x8, x9, [x19, #304]
   179a8:	cmp	x8, x9
   179ac:	b.ne	18034 <__cxa_demangle@@Base+0x583c>  // b.any
   179b0:	ldr	x24, [x19, #296]
   179b4:	add	x9, x19, #0x140
   179b8:	cmp	x9, x24
   179bc:	sub	x21, x8, x24
   179c0:	b.eq	17ff8 <__cxa_demangle@@Base+0x5800>  // b.none
   179c4:	lsl	x1, x21, #1
   179c8:	mov	x0, x24
   179cc:	bl	ecc0 <realloc@plt>
   179d0:	mov	x23, x0
   179d4:	str	x0, [x19, #296]
   179d8:	cbnz	x0, 18020 <__cxa_demangle@@Base+0x5828>
   179dc:	b	18378 <__cxa_demangle@@Base+0x5b80>
   179e0:	mov	w10, wzr
   179e4:	mov	x9, x8
   179e8:	b	17a30 <__cxa_demangle@@Base+0x5238>
   179ec:	mov	w10, wzr
   179f0:	cmp	x9, x8
   179f4:	b.eq	17a30 <__cxa_demangle@@Base+0x5238>  // b.none
   179f8:	ldrb	w11, [x9]
   179fc:	cmp	w11, #0x56
   17a00:	b.ne	17a10 <__cxa_demangle@@Base+0x5218>  // b.any
   17a04:	add	x9, x9, #0x1
   17a08:	orr	w10, w10, #0x2
   17a0c:	str	x9, [x19]
   17a10:	cmp	x9, x8
   17a14:	b.eq	17a30 <__cxa_demangle@@Base+0x5238>  // b.none
   17a18:	ldrb	w11, [x9]
   17a1c:	cmp	w11, #0x4b
   17a20:	b.ne	17a30 <__cxa_demangle@@Base+0x5238>  // b.any
   17a24:	add	x9, x9, #0x1
   17a28:	orr	w10, w10, #0x1
   17a2c:	str	x9, [x19]
   17a30:	cbz	x20, 17a38 <__cxa_demangle@@Base+0x5240>
   17a34:	str	w10, [x20, #4]
   17a38:	cmp	x9, x8
   17a3c:	b.eq	17a88 <__cxa_demangle@@Base+0x5290>  // b.none
   17a40:	ldrb	w10, [x9]
   17a44:	cmp	w10, #0x4f
   17a48:	b.ne	17a64 <__cxa_demangle@@Base+0x526c>  // b.any
   17a4c:	add	x9, x9, #0x1
   17a50:	str	x9, [x19]
   17a54:	cbz	x20, 17a90 <__cxa_demangle@@Base+0x5298>
   17a58:	mov	w10, #0x2                   	// #2
   17a5c:	strb	w10, [x20, #8]
   17a60:	b	17a90 <__cxa_demangle@@Base+0x5298>
   17a64:	ldrb	w10, [x9]
   17a68:	cmp	w10, #0x52
   17a6c:	b.ne	17a88 <__cxa_demangle@@Base+0x5290>  // b.any
   17a70:	add	x9, x9, #0x1
   17a74:	str	x9, [x19]
   17a78:	cbz	x20, 17a90 <__cxa_demangle@@Base+0x5298>
   17a7c:	mov	w10, #0x1                   	// #1
   17a80:	strb	w10, [x20, #8]
   17a84:	b	17a90 <__cxa_demangle@@Base+0x5298>
   17a88:	cbz	x20, 17a90 <__cxa_demangle@@Base+0x5298>
   17a8c:	strb	wzr, [x20, #8]
   17a90:	sub	x8, x8, x9
   17a94:	cmp	x8, #0x2
   17a98:	str	xzr, [sp, #8]
   17a9c:	b.cc	17b28 <__cxa_demangle@@Base+0x5330>  // b.lo, b.ul, b.last
   17aa0:	ldrb	w8, [x9]
   17aa4:	cmp	w8, #0x53
   17aa8:	b.ne	17b28 <__cxa_demangle@@Base+0x5330>  // b.any
   17aac:	ldrb	w8, [x9, #1]
   17ab0:	cmp	w8, #0x74
   17ab4:	b.ne	17b28 <__cxa_demangle@@Base+0x5330>  // b.any
   17ab8:	ldr	x21, [x19, #4912]
   17abc:	add	x8, x9, #0x2
   17ac0:	str	x8, [x19]
   17ac4:	ldr	x8, [x21, #8]
   17ac8:	add	x9, x8, #0x20
   17acc:	cmp	x9, #0xfef
   17ad0:	b.ls	17af0 <__cxa_demangle@@Base+0x52f8>  // b.plast
   17ad4:	mov	w0, #0x1000                	// #4096
   17ad8:	bl	ec00 <malloc@plt>
   17adc:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   17ae0:	mov	x8, xzr
   17ae4:	stp	x21, xzr, [x0]
   17ae8:	mov	x21, x0
   17aec:	str	x0, [x19, #4912]
   17af0:	adrp	x10, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   17af4:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   17af8:	add	x9, x8, #0x20
   17afc:	add	x8, x21, x8
   17b00:	add	x10, x10, #0xd60
   17b04:	mov	w11, #0x107                 	// #263
   17b08:	add	x12, x12, #0x48b
   17b0c:	movk	w11, #0x101, lsl #16
   17b10:	str	x9, [x21, #8]
   17b14:	str	x10, [x8, #16]!
   17b18:	add	x9, x12, #0x3
   17b1c:	str	w11, [x8, #8]
   17b20:	stp	x12, x9, [x8, #16]
   17b24:	str	x8, [sp, #8]
   17b28:	adrp	x26, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   17b2c:	mov	w27, #0x117                 	// #279
   17b30:	adrp	x28, 2d000 <__cxa_call_unexpected@@Base+0xac>
   17b34:	add	x25, x19, #0x140
   17b38:	add	x26, x26, #0xdd0
   17b3c:	movk	w27, #0x101, lsl #16
   17b40:	add	x28, x28, #0x682
   17b44:	b	17b7c <__cxa_demangle@@Base+0x5384>
   17b48:	mov	x0, x23
   17b4c:	bl	ecc0 <realloc@plt>
   17b50:	mov	x22, x0
   17b54:	str	x0, [x19, #296]
   17b58:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   17b5c:	asr	x8, x21, #3
   17b60:	asr	x9, x21, #2
   17b64:	add	x8, x22, x8, lsl #3
   17b68:	add	x9, x22, x9, lsl #3
   17b6c:	stp	x8, x9, [x19, #304]
   17b70:	add	x9, x8, #0x8
   17b74:	str	x9, [x19, #304]
   17b78:	str	x24, [x8]
   17b7c:	ldp	x8, x9, [x19]
   17b80:	cmp	x8, x9
   17b84:	b.eq	17ba8 <__cxa_demangle@@Base+0x53b0>  // b.none
   17b88:	ldrb	w10, [x8]
   17b8c:	cmp	w10, #0x45
   17b90:	b.eq	17fd0 <__cxa_demangle@@Base+0x57d8>  // b.none
   17b94:	ldrb	w10, [x8]
   17b98:	cmp	w10, #0x4c
   17b9c:	b.ne	17ba8 <__cxa_demangle@@Base+0x53b0>  // b.any
   17ba0:	add	x8, x8, #0x1
   17ba4:	str	x8, [x19]
   17ba8:	cmp	x8, x9
   17bac:	b.eq	17bd0 <__cxa_demangle@@Base+0x53d8>  // b.none
   17bb0:	ldrb	w10, [x8]
   17bb4:	cmp	w10, #0x4d
   17bb8:	b.ne	17bd0 <__cxa_demangle@@Base+0x53d8>  // b.any
   17bbc:	add	x8, x8, #0x1
   17bc0:	str	x8, [x19]
   17bc4:	ldr	x8, [sp, #8]
   17bc8:	cbnz	x8, 17b7c <__cxa_demangle@@Base+0x5384>
   17bcc:	b	182c4 <__cxa_demangle@@Base+0x5acc>
   17bd0:	subs	x9, x9, x8
   17bd4:	b.eq	17dcc <__cxa_demangle@@Base+0x55d4>  // b.none
   17bd8:	ldrb	w10, [x8]
   17bdc:	sub	w10, w10, #0x43
   17be0:	cmp	w10, #0x11
   17be4:	b.hi	17dcc <__cxa_demangle@@Base+0x55d4>  // b.pmore
   17be8:	adr	x11, 17bf8 <__cxa_demangle@@Base+0x5400>
   17bec:	ldrb	w12, [x28, x10]
   17bf0:	add	x11, x11, x12, lsl #2
   17bf4:	br	x11
   17bf8:	cmp	x9, #0x2
   17bfc:	b.cc	17e98 <__cxa_demangle@@Base+0x56a0>  // b.lo, b.ul, b.last
   17c00:	ldrb	w9, [x8, #1]
   17c04:	orr	w9, w9, #0x20
   17c08:	cmp	w9, #0x74
   17c0c:	b.ne	17dc0 <__cxa_demangle@@Base+0x55c8>  // b.any
   17c10:	mov	x0, x19
   17c14:	bl	19978 <__cxa_demangle@@Base+0x7180>
   17c18:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   17c1c:	ldr	x22, [sp, #8]
   17c20:	mov	x21, x0
   17c24:	cbz	x22, 17fc0 <__cxa_demangle@@Base+0x57c8>
   17c28:	ldr	x23, [x19, #4912]
   17c2c:	ldr	x8, [x23, #8]
   17c30:	add	x9, x8, #0x20
   17c34:	cmp	x9, #0xff0
   17c38:	b.cc	17c58 <__cxa_demangle@@Base+0x5460>  // b.lo, b.ul, b.last
   17c3c:	mov	w0, #0x1000                	// #4096
   17c40:	bl	ec00 <malloc@plt>
   17c44:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   17c48:	mov	x8, xzr
   17c4c:	stp	x23, xzr, [x0]
   17c50:	mov	x23, x0
   17c54:	str	x0, [x19, #4912]
   17c58:	add	x9, x8, #0x20
   17c5c:	add	x24, x23, x8
   17c60:	str	x9, [x23, #8]
   17c64:	str	x26, [x24, #16]!
   17c68:	str	w27, [x24, #8]
   17c6c:	stp	x22, x21, [x24, #16]
   17c70:	str	x24, [sp, #8]
   17c74:	b	17fc8 <__cxa_demangle@@Base+0x57d0>
   17c78:	cmp	x20, #0x0
   17c7c:	cset	w1, ne  // ne = any
   17c80:	mov	x0, x19
   17c84:	bl	18f34 <__cxa_demangle@@Base+0x673c>
   17c88:	mov	x22, xzr
   17c8c:	cbz	x0, 182c8 <__cxa_demangle@@Base+0x5ad0>
   17c90:	ldr	x23, [sp, #8]
   17c94:	cbz	x23, 182c8 <__cxa_demangle@@Base+0x5ad0>
   17c98:	ldr	x22, [x19, #4912]
   17c9c:	mov	x21, x0
   17ca0:	ldr	x8, [x22, #8]
   17ca4:	add	x9, x8, #0x20
   17ca8:	cmp	x9, #0xff0
   17cac:	b.cc	17ccc <__cxa_demangle@@Base+0x54d4>  // b.lo, b.ul, b.last
   17cb0:	mov	w0, #0x1000                	// #4096
   17cb4:	bl	ec00 <malloc@plt>
   17cb8:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   17cbc:	mov	x8, xzr
   17cc0:	stp	x22, xzr, [x0]
   17cc4:	mov	x22, x0
   17cc8:	str	x0, [x19, #4912]
   17ccc:	add	x9, x8, #0x20
   17cd0:	add	x24, x22, x8
   17cd4:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   17cd8:	add	x8, x8, #0x490
   17cdc:	str	x9, [x22, #8]
   17ce0:	str	x8, [x24, #16]!
   17ce4:	mov	w8, #0x125                 	// #293
   17ce8:	movk	w8, #0x101, lsl #16
   17cec:	str	w8, [x24, #8]
   17cf0:	stp	x23, x21, [x24, #16]
   17cf4:	str	x24, [sp, #8]
   17cf8:	cbz	x20, 17e3c <__cxa_demangle@@Base+0x5644>
   17cfc:	mov	w8, #0x1                   	// #1
   17d00:	strb	w8, [x20, #1]
   17d04:	b	17e3c <__cxa_demangle@@Base+0x5644>
   17d08:	cmp	x9, #0x2
   17d0c:	b.cc	17d1c <__cxa_demangle@@Base+0x5524>  // b.lo, b.ul, b.last
   17d10:	ldrb	w8, [x8, #1]
   17d14:	cmp	w8, #0x74
   17d18:	b.eq	17dcc <__cxa_demangle@@Base+0x55d4>  // b.none
   17d1c:	mov	x0, x19
   17d20:	bl	18b30 <__cxa_demangle@@Base+0x6338>
   17d24:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   17d28:	ldr	x22, [sp, #8]
   17d2c:	mov	x21, x0
   17d30:	cbz	x22, 17db0 <__cxa_demangle@@Base+0x55b8>
   17d34:	ldr	x23, [x19, #4912]
   17d38:	ldr	x8, [x23, #8]
   17d3c:	add	x9, x8, #0x20
   17d40:	cmp	x9, #0xff0
   17d44:	b.cc	17d64 <__cxa_demangle@@Base+0x556c>  // b.lo, b.ul, b.last
   17d48:	mov	w0, #0x1000                	// #4096
   17d4c:	bl	ec00 <malloc@plt>
   17d50:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   17d54:	mov	x8, xzr
   17d58:	stp	x23, xzr, [x0]
   17d5c:	mov	x23, x0
   17d60:	str	x0, [x19, #4912]
   17d64:	add	x9, x8, #0x20
   17d68:	add	x8, x23, x8
   17d6c:	str	x9, [x23, #8]
   17d70:	str	x26, [x8, #16]!
   17d74:	str	w27, [x8, #8]
   17d78:	stp	x22, x21, [x8, #16]
   17d7c:	str	x8, [sp, #8]
   17d80:	cbz	x20, 17d88 <__cxa_demangle@@Base+0x5590>
   17d84:	strb	wzr, [x20, #1]
   17d88:	cmp	x8, x21
   17d8c:	b.eq	17b7c <__cxa_demangle@@Base+0x5384>  // b.none
   17d90:	ldp	x8, x9, [x19, #304]
   17d94:	cmp	x8, x9
   17d98:	b.ne	17fb0 <__cxa_demangle@@Base+0x57b8>  // b.any
   17d9c:	b	17f3c <__cxa_demangle@@Base+0x5744>
   17da0:	mov	x0, x19
   17da4:	bl	1958c <__cxa_demangle@@Base+0x6d94>
   17da8:	cbnz	x0, 17ddc <__cxa_demangle@@Base+0x55e4>
   17dac:	b	182c4 <__cxa_demangle@@Base+0x5acc>
   17db0:	mov	x8, x21
   17db4:	str	x21, [sp, #8]
   17db8:	cbnz	x20, 17d84 <__cxa_demangle@@Base+0x558c>
   17dbc:	b	17d88 <__cxa_demangle@@Base+0x5590>
   17dc0:	ldrb	w8, [x8, #1]
   17dc4:	cmp	w8, #0x43
   17dc8:	b.ne	17e98 <__cxa_demangle@@Base+0x56a0>  // b.any
   17dcc:	mov	x0, x19
   17dd0:	mov	x1, x20
   17dd4:	bl	19e90 <__cxa_demangle@@Base+0x7698>
   17dd8:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   17ddc:	ldr	x22, [sp, #8]
   17de0:	mov	x21, x0
   17de4:	cbz	x22, 17e88 <__cxa_demangle@@Base+0x5690>
   17de8:	ldr	x23, [x19, #4912]
   17dec:	ldr	x8, [x23, #8]
   17df0:	add	x9, x8, #0x20
   17df4:	cmp	x9, #0xff0
   17df8:	b.cc	17e18 <__cxa_demangle@@Base+0x5620>  // b.lo, b.ul, b.last
   17dfc:	mov	w0, #0x1000                	// #4096
   17e00:	bl	ec00 <malloc@plt>
   17e04:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   17e08:	mov	x8, xzr
   17e0c:	stp	x23, xzr, [x0]
   17e10:	mov	x23, x0
   17e14:	str	x0, [x19, #4912]
   17e18:	add	x9, x8, #0x20
   17e1c:	add	x24, x23, x8
   17e20:	str	x9, [x23, #8]
   17e24:	str	x26, [x24, #16]!
   17e28:	str	w27, [x24, #8]
   17e2c:	stp	x22, x21, [x24, #16]
   17e30:	str	x24, [sp, #8]
   17e34:	cbz	x20, 17e3c <__cxa_demangle@@Base+0x5644>
   17e38:	strb	wzr, [x20, #1]
   17e3c:	ldp	x8, x9, [x19, #304]
   17e40:	cmp	x8, x9
   17e44:	b.ne	17b70 <__cxa_demangle@@Base+0x5378>  // b.any
   17e48:	ldr	x23, [x19, #296]
   17e4c:	sub	x21, x8, x23
   17e50:	cmp	x25, x23
   17e54:	lsl	x1, x21, #1
   17e58:	b.ne	17b48 <__cxa_demangle@@Base+0x5350>  // b.any
   17e5c:	mov	x0, x1
   17e60:	bl	ec00 <malloc@plt>
   17e64:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   17e68:	mov	x22, x0
   17e6c:	cbz	x21, 17e80 <__cxa_demangle@@Base+0x5688>
   17e70:	mov	x0, x22
   17e74:	mov	x1, x23
   17e78:	mov	x2, x21
   17e7c:	bl	eae0 <memmove@plt>
   17e80:	str	x22, [x19, #296]
   17e84:	b	17b5c <__cxa_demangle@@Base+0x5364>
   17e88:	mov	x24, x21
   17e8c:	str	x21, [sp, #8]
   17e90:	cbnz	x20, 17e38 <__cxa_demangle@@Base+0x5640>
   17e94:	b	17e3c <__cxa_demangle@@Base+0x5644>
   17e98:	ldr	x8, [sp, #8]
   17e9c:	cbz	x8, 182c4 <__cxa_demangle@@Base+0x5acc>
   17ea0:	add	x1, sp, #0x8
   17ea4:	mov	x0, x19
   17ea8:	mov	x2, x20
   17eac:	bl	19a98 <__cxa_demangle@@Base+0x72a0>
   17eb0:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   17eb4:	ldr	x22, [sp, #8]
   17eb8:	mov	x21, x0
   17ebc:	cbz	x22, 17f68 <__cxa_demangle@@Base+0x5770>
   17ec0:	ldr	x23, [x19, #4912]
   17ec4:	ldr	x8, [x23, #8]
   17ec8:	add	x9, x8, #0x20
   17ecc:	cmp	x9, #0xff0
   17ed0:	b.cc	17ef0 <__cxa_demangle@@Base+0x56f8>  // b.lo, b.ul, b.last
   17ed4:	mov	w0, #0x1000                	// #4096
   17ed8:	bl	ec00 <malloc@plt>
   17edc:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   17ee0:	mov	x8, xzr
   17ee4:	stp	x23, xzr, [x0]
   17ee8:	mov	x23, x0
   17eec:	str	x0, [x19, #4912]
   17ef0:	add	x9, x8, #0x20
   17ef4:	add	x8, x23, x8
   17ef8:	str	x9, [x23, #8]
   17efc:	str	x26, [x8, #16]!
   17f00:	str	w27, [x8, #8]
   17f04:	stp	x22, x21, [x8, #16]
   17f08:	str	x8, [sp, #8]
   17f0c:	mov	x21, x8
   17f10:	cbz	x20, 17f18 <__cxa_demangle@@Base+0x5720>
   17f14:	strb	wzr, [x20, #1]
   17f18:	mov	x0, x19
   17f1c:	mov	x1, x21
   17f20:	bl	19d08 <__cxa_demangle@@Base+0x7510>
   17f24:	str	x0, [sp, #8]
   17f28:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   17f2c:	ldp	x8, x9, [x19, #304]
   17f30:	mov	x21, x0
   17f34:	cmp	x8, x9
   17f38:	b.ne	17fb0 <__cxa_demangle@@Base+0x57b8>  // b.any
   17f3c:	ldr	x24, [x19, #296]
   17f40:	sub	x22, x8, x24
   17f44:	cmp	x25, x24
   17f48:	lsl	x1, x22, #1
   17f4c:	b.eq	17f74 <__cxa_demangle@@Base+0x577c>  // b.none
   17f50:	mov	x0, x24
   17f54:	bl	ecc0 <realloc@plt>
   17f58:	mov	x23, x0
   17f5c:	str	x0, [x19, #296]
   17f60:	cbnz	x0, 17f9c <__cxa_demangle@@Base+0x57a4>
   17f64:	b	18378 <__cxa_demangle@@Base+0x5b80>
   17f68:	str	x21, [sp, #8]
   17f6c:	cbnz	x20, 17f14 <__cxa_demangle@@Base+0x571c>
   17f70:	b	17f18 <__cxa_demangle@@Base+0x5720>
   17f74:	mov	x0, x1
   17f78:	bl	ec00 <malloc@plt>
   17f7c:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   17f80:	mov	x23, x0
   17f84:	cbz	x22, 17f98 <__cxa_demangle@@Base+0x57a0>
   17f88:	mov	x0, x23
   17f8c:	mov	x1, x24
   17f90:	mov	x2, x22
   17f94:	bl	eae0 <memmove@plt>
   17f98:	str	x23, [x19, #296]
   17f9c:	asr	x8, x22, #3
   17fa0:	asr	x9, x22, #2
   17fa4:	add	x8, x23, x8, lsl #3
   17fa8:	add	x9, x23, x9, lsl #3
   17fac:	stp	x8, x9, [x19, #304]
   17fb0:	add	x9, x8, #0x8
   17fb4:	str	x9, [x19, #304]
   17fb8:	str	x21, [x8]
   17fbc:	b	17b7c <__cxa_demangle@@Base+0x5384>
   17fc0:	mov	x24, x21
   17fc4:	str	x21, [sp, #8]
   17fc8:	cbnz	x20, 17e38 <__cxa_demangle@@Base+0x5640>
   17fcc:	b	17e3c <__cxa_demangle@@Base+0x5644>
   17fd0:	add	x8, x8, #0x1
   17fd4:	str	x8, [x19]
   17fd8:	ldr	x22, [sp, #8]
   17fdc:	cbz	x22, 182c8 <__cxa_demangle@@Base+0x5ad0>
   17fe0:	ldp	x9, x8, [x19, #296]
   17fe4:	cmp	x9, x8
   17fe8:	b.eq	182c4 <__cxa_demangle@@Base+0x5acc>  // b.none
   17fec:	sub	x8, x8, #0x8
   17ff0:	str	x8, [x19, #304]
   17ff4:	b	182c8 <__cxa_demangle@@Base+0x5ad0>
   17ff8:	lsl	x0, x21, #1
   17ffc:	bl	ec00 <malloc@plt>
   18000:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   18004:	mov	x23, x0
   18008:	cbz	x21, 1801c <__cxa_demangle@@Base+0x5824>
   1800c:	mov	x0, x23
   18010:	mov	x1, x24
   18014:	mov	x2, x21
   18018:	bl	eae0 <memmove@plt>
   1801c:	str	x23, [x19, #296]
   18020:	asr	x8, x21, #3
   18024:	asr	x9, x21, #2
   18028:	add	x8, x23, x8, lsl #3
   1802c:	add	x9, x23, x9, lsl #3
   18030:	stp	x8, x9, [x19, #304]
   18034:	cmp	x20, #0x0
   18038:	add	x9, x8, #0x8
   1803c:	cset	w1, ne  // ne = any
   18040:	mov	x0, x19
   18044:	str	x9, [x19, #304]
   18048:	str	x22, [x8]
   1804c:	bl	18f34 <__cxa_demangle@@Base+0x673c>
   18050:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   18054:	mov	x21, x0
   18058:	cbz	x20, 18064 <__cxa_demangle@@Base+0x586c>
   1805c:	mov	w8, #0x1                   	// #1
   18060:	strb	w8, [x20, #1]
   18064:	ldr	x20, [x19, #4912]
   18068:	ldr	x8, [x20, #8]
   1806c:	add	x9, x8, #0x20
   18070:	cmp	x9, #0xff0
   18074:	b.cc	18094 <__cxa_demangle@@Base+0x589c>  // b.lo, b.ul, b.last
   18078:	mov	w0, #0x1000                	// #4096
   1807c:	bl	ec00 <malloc@plt>
   18080:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   18084:	mov	x8, xzr
   18088:	stp	x20, xzr, [x0]
   1808c:	mov	x20, x0
   18090:	str	x0, [x19, #4912]
   18094:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   18098:	add	x9, x8, #0x20
   1809c:	add	x8, x20, x8
   180a0:	add	x10, x10, #0x490
   180a4:	mov	w11, #0x125                 	// #293
   180a8:	str	x9, [x20, #8]
   180ac:	str	x10, [x8, #16]!
   180b0:	movk	w11, #0x101, lsl #16
   180b4:	stp	x22, x21, [x8, #16]
   180b8:	mov	x22, x8
   180bc:	str	w11, [x8, #8]
   180c0:	b	182c8 <__cxa_demangle@@Base+0x5ad0>
   180c4:	ldrb	w8, [x8]
   180c8:	cmp	w8, #0x64
   180cc:	b.ne	18100 <__cxa_demangle@@Base+0x5908>  // b.any
   180d0:	add	x24, x23, #0x2
   180d4:	cmp	x24, x22
   180d8:	str	x24, [x19]
   180dc:	b.eq	18244 <__cxa_demangle@@Base+0x5a4c>  // b.none
   180e0:	ldrb	w8, [x24]
   180e4:	cmp	w8, #0x6e
   180e8:	mov	x8, x24
   180ec:	b.ne	1824c <__cxa_demangle@@Base+0x5a54>  // b.any
   180f0:	add	x24, x23, #0x3
   180f4:	mov	x8, x24
   180f8:	str	x24, [x19]
   180fc:	b	1824c <__cxa_demangle@@Base+0x5a54>
   18100:	mov	x0, x19
   18104:	mov	x1, x20
   18108:	bl	17688 <__cxa_demangle@@Base+0x4e90>
   1810c:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   18110:	ldp	x22, x23, [x19]
   18114:	mov	x20, x0
   18118:	cmp	x22, x23
   1811c:	b.eq	18300 <__cxa_demangle@@Base+0x5b08>  // b.none
   18120:	ldrb	w24, [x22]
   18124:	cmp	x24, #0x5f
   18128:	b.ne	1817c <__cxa_demangle@@Base+0x5984>  // b.any
   1812c:	add	x8, x22, #0x1
   18130:	cmp	x8, x23
   18134:	b.eq	18300 <__cxa_demangle@@Base+0x5b08>  // b.none
   18138:	ldrb	w24, [x8]
   1813c:	bl	ed40 <__ctype_b_loc@plt>
   18140:	ldr	x8, [x0]
   18144:	ldrh	w9, [x8, x24, lsl #1]
   18148:	tbnz	w9, #11, 182ec <__cxa_demangle@@Base+0x5af4>
   1814c:	cmp	w24, #0x5f
   18150:	b.ne	18300 <__cxa_demangle@@Base+0x5b08>  // b.any
   18154:	add	x9, x22, #0x2
   18158:	cmp	x9, x23
   1815c:	b.eq	18300 <__cxa_demangle@@Base+0x5b08>  // b.none
   18160:	ldrb	w10, [x9]
   18164:	ldrh	w11, [x8, x10, lsl #1]
   18168:	tbz	w11, #11, 18360 <__cxa_demangle@@Base+0x5b68>
   1816c:	add	x9, x9, #0x1
   18170:	cmp	x23, x9
   18174:	b.ne	18160 <__cxa_demangle@@Base+0x5968>  // b.any
   18178:	b	18300 <__cxa_demangle@@Base+0x5b08>
   1817c:	bl	ed40 <__ctype_b_loc@plt>
   18180:	ldr	x8, [x0]
   18184:	ldrh	w9, [x8, x24, lsl #1]
   18188:	tbz	w9, #11, 18300 <__cxa_demangle@@Base+0x5b08>
   1818c:	add	x9, x22, #0x1
   18190:	cmp	x23, x9
   18194:	b.eq	182fc <__cxa_demangle@@Base+0x5b04>  // b.none
   18198:	ldrb	w10, [x9], #1
   1819c:	ldrh	w10, [x8, x10, lsl #1]
   181a0:	tbnz	w10, #11, 18190 <__cxa_demangle@@Base+0x5998>
   181a4:	b	18300 <__cxa_demangle@@Base+0x5b08>
   181a8:	bl	ed40 <__ctype_b_loc@plt>
   181ac:	ldr	x8, [x0]
   181b0:	ldrh	w9, [x8, x24, lsl #1]
   181b4:	tbz	w9, #11, 181d0 <__cxa_demangle@@Base+0x59d8>
   181b8:	add	x9, x23, #0x3
   181bc:	cmp	x22, x9
   181c0:	b.eq	181d4 <__cxa_demangle@@Base+0x59dc>  // b.none
   181c4:	ldrb	w10, [x9], #1
   181c8:	ldrh	w10, [x8, x10, lsl #1]
   181cc:	tbnz	w10, #11, 181bc <__cxa_demangle@@Base+0x59c4>
   181d0:	mov	x22, x20
   181d4:	ldr	x23, [x19, #4912]
   181d8:	str	x22, [x19]
   181dc:	ldr	x8, [x23, #8]
   181e0:	add	x9, x8, #0x20
   181e4:	cmp	x9, #0xff0
   181e8:	b.cc	18208 <__cxa_demangle@@Base+0x5a10>  // b.lo, b.ul, b.last
   181ec:	mov	w0, #0x1000                	// #4096
   181f0:	bl	ec00 <malloc@plt>
   181f4:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   181f8:	mov	x8, xzr
   181fc:	stp	x23, xzr, [x0]
   18200:	mov	x23, x0
   18204:	str	x0, [x19, #4912]
   18208:	add	x9, x8, #0x20
   1820c:	add	x20, x23, x8
   18210:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   18214:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   18218:	add	x8, x8, #0xd60
   1821c:	mov	w10, #0x107                 	// #263
   18220:	add	x11, x11, #0xfa1
   18224:	movk	w10, #0x101, lsl #16
   18228:	str	x9, [x23, #8]
   1822c:	str	x8, [x20, #16]!
   18230:	add	x8, x11, #0xe
   18234:	str	w10, [x20, #8]
   18238:	stp	x11, x8, [x20, #16]
   1823c:	ldr	x23, [x19, #4912]
   18240:	b	18308 <__cxa_demangle@@Base+0x5b10>
   18244:	mov	x8, x24
   18248:	mov	x24, x22
   1824c:	cmp	x8, x22
   18250:	b.eq	18290 <__cxa_demangle@@Base+0x5a98>  // b.none
   18254:	ldrb	w23, [x24]
   18258:	bl	ed40 <__ctype_b_loc@plt>
   1825c:	ldr	x8, [x0]
   18260:	ldrh	w8, [x8, x23, lsl #1]
   18264:	tbz	w8, #11, 18290 <__cxa_demangle@@Base+0x5a98>
   18268:	add	x8, x24, #0x1
   1826c:	mov	x24, x8
   18270:	cmp	x22, x8
   18274:	str	x8, [x19]
   18278:	b.eq	18290 <__cxa_demangle@@Base+0x5a98>  // b.none
   1827c:	mov	x8, x24
   18280:	ldrb	w9, [x8], #1
   18284:	ldr	x10, [x0]
   18288:	ldrh	w9, [x10, x9, lsl #1]
   1828c:	tbnz	w9, #11, 1826c <__cxa_demangle@@Base+0x5a74>
   18290:	cmp	x24, x22
   18294:	b.eq	182c4 <__cxa_demangle@@Base+0x5acc>  // b.none
   18298:	ldrb	w8, [x24]
   1829c:	cmp	w8, #0x5f
   182a0:	b.ne	182c4 <__cxa_demangle@@Base+0x5acc>  // b.any
   182a4:	add	x8, x24, #0x1
   182a8:	mov	x0, x19
   182ac:	mov	x1, x20
   182b0:	str	x8, [x19]
   182b4:	bl	17688 <__cxa_demangle@@Base+0x4e90>
   182b8:	cbz	x0, 182c4 <__cxa_demangle@@Base+0x5acc>
   182bc:	mov	x20, x0
   182c0:	b	1823c <__cxa_demangle@@Base+0x5a44>
   182c4:	mov	x22, xzr
   182c8:	mov	x0, x22
   182cc:	ldp	x20, x19, [sp, #96]
   182d0:	ldp	x22, x21, [sp, #80]
   182d4:	ldp	x24, x23, [sp, #64]
   182d8:	ldp	x26, x25, [sp, #48]
   182dc:	ldp	x28, x27, [sp, #32]
   182e0:	ldp	x29, x30, [sp, #16]
   182e4:	add	sp, sp, #0x70
   182e8:	ret
   182ec:	add	x22, x22, #0x2
   182f0:	b	18300 <__cxa_demangle@@Base+0x5b08>
   182f4:	add	x22, x23, #0x4
   182f8:	b	181d4 <__cxa_demangle@@Base+0x59dc>
   182fc:	mov	x22, x23
   18300:	ldr	x23, [x19, #4912]
   18304:	str	x22, [x19]
   18308:	ldr	x8, [x23, #8]
   1830c:	add	x9, x8, #0x20
   18310:	cmp	x9, #0xff0
   18314:	b.cc	18334 <__cxa_demangle@@Base+0x5b3c>  // b.lo, b.ul, b.last
   18318:	mov	w0, #0x1000                	// #4096
   1831c:	bl	ec00 <malloc@plt>
   18320:	cbz	x0, 18378 <__cxa_demangle@@Base+0x5b80>
   18324:	mov	x8, xzr
   18328:	stp	x23, xzr, [x0]
   1832c:	mov	x23, x0
   18330:	str	x0, [x19, #4912]
   18334:	add	x9, x8, #0x20
   18338:	add	x22, x23, x8
   1833c:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   18340:	add	x8, x8, #0x2d0
   18344:	mov	w10, #0x118                 	// #280
   18348:	movk	w10, #0x101, lsl #16
   1834c:	str	x9, [x23, #8]
   18350:	str	x8, [x22, #16]!
   18354:	str	w10, [x22, #8]
   18358:	stp	x21, x20, [x22, #16]
   1835c:	b	182c8 <__cxa_demangle@@Base+0x5ad0>
   18360:	cmp	w10, #0x5f
   18364:	csinc	x22, x22, x9, ne  // ne = any
   18368:	b	18300 <__cxa_demangle@@Base+0x5b08>
   1836c:	cmp	w10, #0x5f
   18370:	csinc	x22, x20, x9, ne  // ne = any
   18374:	b	181d4 <__cxa_demangle@@Base+0x59dc>
   18378:	bl	eeb0 <_ZSt9terminatev@plt>
   1837c:	stp	x29, x30, [sp, #-80]!
   18380:	str	x25, [sp, #16]
   18384:	stp	x24, x23, [sp, #32]
   18388:	stp	x22, x21, [sp, #48]
   1838c:	stp	x20, x19, [sp, #64]
   18390:	mov	x29, sp
   18394:	ldp	x8, x9, [x0]
   18398:	mov	x19, x0
   1839c:	subs	x10, x9, x8
   183a0:	b.eq	183f8 <__cxa_demangle@@Base+0x5c00>  // b.none
   183a4:	ldrb	w11, [x8]
   183a8:	cmp	w11, #0x4a
   183ac:	b.eq	18440 <__cxa_demangle@@Base+0x5c48>  // b.none
   183b0:	cmp	w11, #0x4c
   183b4:	b.eq	18414 <__cxa_demangle@@Base+0x5c1c>  // b.none
   183b8:	cmp	w11, #0x58
   183bc:	b.ne	183f8 <__cxa_demangle@@Base+0x5c00>  // b.any
   183c0:	add	x8, x8, #0x1
   183c4:	mov	x0, x19
   183c8:	str	x8, [x19]
   183cc:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   183d0:	cbz	x0, 185c4 <__cxa_demangle@@Base+0x5dcc>
   183d4:	ldp	x8, x9, [x19]
   183d8:	cmp	x8, x9
   183dc:	b.eq	18520 <__cxa_demangle@@Base+0x5d28>  // b.none
   183e0:	ldrb	w9, [x8]
   183e4:	cmp	w9, #0x45
   183e8:	b.ne	18520 <__cxa_demangle@@Base+0x5d28>  // b.any
   183ec:	add	x8, x8, #0x1
   183f0:	str	x8, [x19]
   183f4:	b	185c4 <__cxa_demangle@@Base+0x5dcc>
   183f8:	mov	x0, x19
   183fc:	ldp	x20, x19, [sp, #64]
   18400:	ldp	x22, x21, [sp, #48]
   18404:	ldp	x24, x23, [sp, #32]
   18408:	ldr	x25, [sp, #16]
   1840c:	ldp	x29, x30, [sp], #80
   18410:	b	15e70 <__cxa_demangle@@Base+0x3678>
   18414:	cmp	x10, #0x2
   18418:	b.cc	18504 <__cxa_demangle@@Base+0x5d0c>  // b.lo, b.ul, b.last
   1841c:	ldrb	w9, [x8, #1]
   18420:	cmp	w9, #0x5a
   18424:	b.ne	18504 <__cxa_demangle@@Base+0x5d0c>  // b.any
   18428:	add	x8, x8, #0x2
   1842c:	mov	x0, x19
   18430:	str	x8, [x19]
   18434:	bl	150bc <__cxa_demangle@@Base+0x28c4>
   18438:	cbnz	x0, 183d4 <__cxa_demangle@@Base+0x5bdc>
   1843c:	b	185c4 <__cxa_demangle@@Base+0x5dcc>
   18440:	ldp	x11, x10, [x19, #16]
   18444:	add	x8, x8, #0x1
   18448:	add	x25, x19, #0x28
   1844c:	str	x8, [x19]
   18450:	sub	x10, x10, x11
   18454:	asr	x24, x10, #3
   18458:	b	18494 <__cxa_demangle@@Base+0x5c9c>
   1845c:	mov	x0, x23
   18460:	bl	ecc0 <realloc@plt>
   18464:	mov	x22, x0
   18468:	str	x0, [x19, #16]
   1846c:	cbz	x0, 185dc <__cxa_demangle@@Base+0x5de4>
   18470:	asr	x8, x21, #3
   18474:	asr	x9, x21, #2
   18478:	add	x8, x22, x8, lsl #3
   1847c:	add	x9, x22, x9, lsl #3
   18480:	stp	x8, x9, [x19, #24]
   18484:	add	x9, x8, #0x8
   18488:	str	x9, [x19, #24]
   1848c:	str	x20, [x8]
   18490:	ldp	x8, x9, [x19]
   18494:	cmp	x8, x9
   18498:	b.eq	184a8 <__cxa_demangle@@Base+0x5cb0>  // b.none
   1849c:	ldrb	w9, [x8]
   184a0:	cmp	w9, #0x45
   184a4:	b.eq	18528 <__cxa_demangle@@Base+0x5d30>  // b.none
   184a8:	mov	x0, x19
   184ac:	bl	1837c <__cxa_demangle@@Base+0x5b84>
   184b0:	cbz	x0, 185c4 <__cxa_demangle@@Base+0x5dcc>
   184b4:	ldp	x8, x9, [x19, #24]
   184b8:	mov	x20, x0
   184bc:	cmp	x8, x9
   184c0:	b.ne	18484 <__cxa_demangle@@Base+0x5c8c>  // b.any
   184c4:	ldr	x23, [x19, #16]
   184c8:	sub	x21, x8, x23
   184cc:	cmp	x25, x23
   184d0:	lsl	x1, x21, #1
   184d4:	b.ne	1845c <__cxa_demangle@@Base+0x5c64>  // b.any
   184d8:	mov	x0, x1
   184dc:	bl	ec00 <malloc@plt>
   184e0:	cbz	x0, 185dc <__cxa_demangle@@Base+0x5de4>
   184e4:	mov	x22, x0
   184e8:	cbz	x21, 184fc <__cxa_demangle@@Base+0x5d04>
   184ec:	mov	x0, x22
   184f0:	mov	x1, x23
   184f4:	mov	x2, x21
   184f8:	bl	eae0 <memmove@plt>
   184fc:	str	x22, [x19, #16]
   18500:	b	18470 <__cxa_demangle@@Base+0x5c78>
   18504:	mov	x0, x19
   18508:	ldp	x20, x19, [sp, #64]
   1850c:	ldp	x22, x21, [sp, #48]
   18510:	ldp	x24, x23, [sp, #32]
   18514:	ldr	x25, [sp, #16]
   18518:	ldp	x29, x30, [sp], #80
   1851c:	b	1c73c <__cxa_demangle@@Base+0x9f44>
   18520:	mov	x0, xzr
   18524:	b	185c4 <__cxa_demangle@@Base+0x5dcc>
   18528:	ldp	x9, x2, [x19, #16]
   1852c:	add	x8, x8, #0x1
   18530:	str	x8, [x19]
   18534:	sub	x10, x2, x9
   18538:	cmp	x24, x10, asr #3
   1853c:	b.hi	185e0 <__cxa_demangle@@Base+0x5de8>  // b.pmore
   18540:	add	x1, x9, x24, lsl #3
   18544:	mov	x0, x19
   18548:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1854c:	ldp	x8, x9, [x19, #16]
   18550:	sub	x9, x9, x8
   18554:	cmp	x24, x9, asr #3
   18558:	b.hi	18600 <__cxa_demangle@@Base+0x5e08>  // b.pmore
   1855c:	ldr	x22, [x19, #4912]
   18560:	add	x8, x8, x24, lsl #3
   18564:	str	x8, [x19, #24]
   18568:	mov	x20, x0
   1856c:	ldr	x8, [x22, #8]
   18570:	mov	x21, x1
   18574:	add	x9, x8, #0x20
   18578:	cmp	x9, #0xff0
   1857c:	b.cc	1859c <__cxa_demangle@@Base+0x5da4>  // b.lo, b.ul, b.last
   18580:	mov	w0, #0x1000                	// #4096
   18584:	bl	ec00 <malloc@plt>
   18588:	cbz	x0, 185dc <__cxa_demangle@@Base+0x5de4>
   1858c:	mov	x8, xzr
   18590:	stp	x22, xzr, [x0]
   18594:	mov	x22, x0
   18598:	str	x0, [x19, #4912]
   1859c:	add	x9, x8, #0x20
   185a0:	add	x0, x22, x8
   185a4:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   185a8:	add	x8, x8, #0x570
   185ac:	mov	w10, #0x121                 	// #289
   185b0:	movk	w10, #0x101, lsl #16
   185b4:	str	x9, [x22, #8]
   185b8:	str	x8, [x0, #16]!
   185bc:	str	w10, [x0, #8]
   185c0:	stp	x20, x21, [x0, #16]
   185c4:	ldp	x20, x19, [sp, #64]
   185c8:	ldp	x22, x21, [sp, #48]
   185cc:	ldp	x24, x23, [sp, #32]
   185d0:	ldr	x25, [sp, #16]
   185d4:	ldp	x29, x30, [sp], #80
   185d8:	ret
   185dc:	bl	eeb0 <_ZSt9terminatev@plt>
   185e0:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   185e4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   185e8:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   185ec:	add	x0, x0, #0xdf
   185f0:	add	x1, x1, #0xce9
   185f4:	add	x3, x3, #0xfc
   185f8:	mov	w2, #0x94b                 	// #2379
   185fc:	bl	ee90 <__assert_fail@plt>
   18600:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   18604:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   18608:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1860c:	add	x0, x0, #0xa2e
   18610:	add	x1, x1, #0xce9
   18614:	add	x3, x3, #0x2b6
   18618:	mov	w2, #0x8d9                 	// #2265
   1861c:	bl	ee90 <__assert_fail@plt>
   18620:	stp	x29, x30, [sp, #-64]!
   18624:	str	x23, [sp, #16]
   18628:	stp	x22, x21, [sp, #32]
   1862c:	stp	x20, x19, [sp, #48]
   18630:	mov	x29, sp
   18634:	ldp	x8, x20, [x0]
   18638:	cmp	x8, x20
   1863c:	b.eq	18878 <__cxa_demangle@@Base+0x6080>  // b.none
   18640:	ldrb	w9, [x8]
   18644:	mov	x19, x0
   18648:	cmp	w9, #0x68
   1864c:	b.ne	1868c <__cxa_demangle@@Base+0x5e94>  // b.any
   18650:	add	x21, x8, #0x1
   18654:	cmp	x21, x20
   18658:	str	x21, [x19]
   1865c:	b.eq	186d4 <__cxa_demangle@@Base+0x5edc>  // b.none
   18660:	ldrb	w9, [x21]
   18664:	mov	x22, x21
   18668:	cmp	w9, #0x6e
   1866c:	mov	x9, x21
   18670:	b.ne	18680 <__cxa_demangle@@Base+0x5e88>  // b.any
   18674:	add	x22, x8, #0x2
   18678:	mov	x9, x22
   1867c:	str	x22, [x19]
   18680:	cmp	x9, x20
   18684:	b.ne	186e4 <__cxa_demangle@@Base+0x5eec>  // b.any
   18688:	b	186f8 <__cxa_demangle@@Base+0x5f00>
   1868c:	ldrb	w9, [x8]
   18690:	cmp	w9, #0x76
   18694:	b.ne	18878 <__cxa_demangle@@Base+0x6080>  // b.any
   18698:	add	x21, x8, #0x1
   1869c:	cmp	x21, x20
   186a0:	str	x21, [x19]
   186a4:	b.eq	1875c <__cxa_demangle@@Base+0x5f64>  // b.none
   186a8:	ldrb	w9, [x21]
   186ac:	mov	x22, x21
   186b0:	cmp	w9, #0x6e
   186b4:	mov	x9, x21
   186b8:	b.ne	186c8 <__cxa_demangle@@Base+0x5ed0>  // b.any
   186bc:	add	x22, x8, #0x2
   186c0:	mov	x9, x22
   186c4:	str	x22, [x19]
   186c8:	cmp	x9, x20
   186cc:	b.ne	1876c <__cxa_demangle@@Base+0x5f74>  // b.any
   186d0:	b	18780 <__cxa_demangle@@Base+0x5f88>
   186d4:	mov	x22, x20
   186d8:	mov	x9, x21
   186dc:	cmp	x9, x20
   186e0:	b.eq	186f8 <__cxa_demangle@@Base+0x5f00>  // b.none
   186e4:	ldrb	w23, [x22]
   186e8:	bl	ed40 <__ctype_b_loc@plt>
   186ec:	ldr	x8, [x0]
   186f0:	ldrh	w8, [x8, x23, lsl #1]
   186f4:	tbnz	w8, #11, 18730 <__cxa_demangle@@Base+0x5f38>
   186f8:	mov	x21, xzr
   186fc:	mov	x8, xzr
   18700:	cmp	x21, x8
   18704:	mov	w0, #0x1                   	// #1
   18708:	b.eq	1887c <__cxa_demangle@@Base+0x6084>  // b.none
   1870c:	cmp	x22, x20
   18710:	b.eq	1887c <__cxa_demangle@@Base+0x6084>  // b.none
   18714:	ldrb	w8, [x22]
   18718:	cmp	w8, #0x5f
   1871c:	b.ne	18878 <__cxa_demangle@@Base+0x6080>  // b.any
   18720:	mov	w0, wzr
   18724:	add	x8, x22, #0x1
   18728:	str	x8, [x19]
   1872c:	b	1887c <__cxa_demangle@@Base+0x6084>
   18730:	add	x8, x22, #0x1
   18734:	cmp	x20, x8
   18738:	str	x8, [x19]
   1873c:	b.eq	187dc <__cxa_demangle@@Base+0x5fe4>  // b.none
   18740:	ldrb	w9, [x8], #1
   18744:	ldr	x10, [x0]
   18748:	ldrh	w9, [x10, x9, lsl #1]
   1874c:	tbnz	w9, #11, 18734 <__cxa_demangle@@Base+0x5f3c>
   18750:	sub	x22, x8, #0x1
   18754:	mov	x8, x22
   18758:	b	18700 <__cxa_demangle@@Base+0x5f08>
   1875c:	mov	x22, x20
   18760:	mov	x9, x21
   18764:	cmp	x9, x20
   18768:	b.eq	18780 <__cxa_demangle@@Base+0x5f88>  // b.none
   1876c:	ldrb	w23, [x22]
   18770:	bl	ed40 <__ctype_b_loc@plt>
   18774:	ldr	x8, [x0]
   18778:	ldrh	w8, [x8, x23, lsl #1]
   1877c:	tbnz	w8, #11, 187e8 <__cxa_demangle@@Base+0x5ff0>
   18780:	mov	x21, xzr
   18784:	mov	x8, xzr
   18788:	cmp	x21, x8
   1878c:	mov	w0, #0x1                   	// #1
   18790:	b.eq	1887c <__cxa_demangle@@Base+0x6084>  // b.none
   18794:	cmp	x22, x20
   18798:	b.eq	1887c <__cxa_demangle@@Base+0x6084>  // b.none
   1879c:	ldrb	w8, [x22]
   187a0:	cmp	w8, #0x5f
   187a4:	b.ne	18878 <__cxa_demangle@@Base+0x6080>  // b.any
   187a8:	add	x21, x22, #0x1
   187ac:	cmp	x21, x20
   187b0:	str	x21, [x19]
   187b4:	b.eq	18820 <__cxa_demangle@@Base+0x6028>  // b.none
   187b8:	ldrb	w8, [x21]
   187bc:	mov	x23, x21
   187c0:	cmp	w8, #0x6e
   187c4:	mov	x8, x21
   187c8:	b.ne	18828 <__cxa_demangle@@Base+0x6030>  // b.any
   187cc:	add	x23, x22, #0x2
   187d0:	mov	x8, x23
   187d4:	str	x23, [x19]
   187d8:	b	18828 <__cxa_demangle@@Base+0x6030>
   187dc:	mov	x22, x20
   187e0:	mov	x8, x20
   187e4:	b	18700 <__cxa_demangle@@Base+0x5f08>
   187e8:	add	x8, x22, #0x1
   187ec:	cmp	x20, x8
   187f0:	str	x8, [x19]
   187f4:	b.eq	18814 <__cxa_demangle@@Base+0x601c>  // b.none
   187f8:	ldrb	w9, [x8], #1
   187fc:	ldr	x10, [x0]
   18800:	ldrh	w9, [x10, x9, lsl #1]
   18804:	tbnz	w9, #11, 187ec <__cxa_demangle@@Base+0x5ff4>
   18808:	sub	x22, x8, #0x1
   1880c:	mov	x8, x22
   18810:	b	18788 <__cxa_demangle@@Base+0x5f90>
   18814:	mov	x22, x20
   18818:	mov	x8, x20
   1881c:	b	18788 <__cxa_demangle@@Base+0x5f90>
   18820:	mov	x23, x20
   18824:	mov	x8, x21
   18828:	cmp	x8, x20
   1882c:	b.eq	18844 <__cxa_demangle@@Base+0x604c>  // b.none
   18830:	ldrb	w22, [x23]
   18834:	bl	ed40 <__ctype_b_loc@plt>
   18838:	ldr	x8, [x0]
   1883c:	ldrh	w8, [x8, x22, lsl #1]
   18840:	tbnz	w8, #11, 18890 <__cxa_demangle@@Base+0x6098>
   18844:	mov	x21, xzr
   18848:	mov	x8, xzr
   1884c:	cmp	x21, x8
   18850:	mov	w0, #0x1                   	// #1
   18854:	b.eq	1887c <__cxa_demangle@@Base+0x6084>  // b.none
   18858:	cmp	x23, x20
   1885c:	b.eq	1887c <__cxa_demangle@@Base+0x6084>  // b.none
   18860:	ldrb	w8, [x23]
   18864:	cmp	w8, #0x5f
   18868:	b.ne	18878 <__cxa_demangle@@Base+0x6080>  // b.any
   1886c:	mov	w0, wzr
   18870:	add	x8, x23, #0x1
   18874:	b	18728 <__cxa_demangle@@Base+0x5f30>
   18878:	mov	w0, #0x1                   	// #1
   1887c:	ldp	x20, x19, [sp, #48]
   18880:	ldp	x22, x21, [sp, #32]
   18884:	ldr	x23, [sp, #16]
   18888:	ldp	x29, x30, [sp], #64
   1888c:	ret
   18890:	add	x8, x23, #0x1
   18894:	cmp	x20, x8
   18898:	str	x8, [x19]
   1889c:	b.eq	188bc <__cxa_demangle@@Base+0x60c4>  // b.none
   188a0:	ldrb	w9, [x8], #1
   188a4:	ldr	x10, [x0]
   188a8:	ldrh	w9, [x10, x9, lsl #1]
   188ac:	tbnz	w9, #11, 18894 <__cxa_demangle@@Base+0x609c>
   188b0:	sub	x23, x8, #0x1
   188b4:	mov	x8, x23
   188b8:	b	1884c <__cxa_demangle@@Base+0x6054>
   188bc:	mov	x23, x20
   188c0:	mov	x8, x20
   188c4:	b	1884c <__cxa_demangle@@Base+0x6054>
   188c8:	mov	w0, wzr
   188cc:	ret
   188d0:	mov	w0, wzr
   188d4:	ret
   188d8:	mov	w0, wzr
   188dc:	ret
   188e0:	ret
   188e4:	stp	x29, x30, [sp, #-48]!
   188e8:	stp	x22, x21, [sp, #16]
   188ec:	stp	x20, x19, [sp, #32]
   188f0:	mov	x29, sp
   188f4:	ldp	x22, x8, [x0, #16]
   188f8:	mov	x20, x0
   188fc:	mov	x19, x1
   18900:	subs	x21, x8, x22
   18904:	b.eq	18960 <__cxa_demangle@@Base+0x6168>  // b.none
   18908:	ldp	x8, x10, [x19, #8]
   1890c:	add	x9, x8, x21
   18910:	cmp	x9, x10
   18914:	b.cs	18920 <__cxa_demangle@@Base+0x6128>  // b.hs, b.nlast
   18918:	ldr	x0, [x19]
   1891c:	b	18944 <__cxa_demangle@@Base+0x614c>
   18920:	ldr	x0, [x19]
   18924:	lsl	x8, x10, #1
   18928:	cmp	x8, x9
   1892c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   18930:	str	x1, [x19, #16]
   18934:	bl	ecc0 <realloc@plt>
   18938:	str	x0, [x19]
   1893c:	cbz	x0, 189b4 <__cxa_demangle@@Base+0x61bc>
   18940:	ldr	x8, [x19, #8]
   18944:	add	x0, x0, x8
   18948:	mov	x1, x22
   1894c:	mov	x2, x21
   18950:	bl	eae0 <memmove@plt>
   18954:	ldr	x8, [x19, #8]
   18958:	add	x8, x8, x21
   1895c:	str	x8, [x19, #8]
   18960:	ldr	x20, [x20, #32]
   18964:	mov	x1, x19
   18968:	ldr	x8, [x20]
   1896c:	mov	x0, x20
   18970:	ldr	x8, [x8, #32]
   18974:	blr	x8
   18978:	ldrb	w8, [x20, #9]
   1897c:	cmp	w8, #0x1
   18980:	b.ne	18994 <__cxa_demangle@@Base+0x619c>  // b.any
   18984:	ldp	x20, x19, [sp, #32]
   18988:	ldp	x22, x21, [sp, #16]
   1898c:	ldp	x29, x30, [sp], #48
   18990:	ret
   18994:	ldr	x8, [x20]
   18998:	mov	x0, x20
   1899c:	mov	x1, x19
   189a0:	ldp	x20, x19, [sp, #32]
   189a4:	ldr	x2, [x8, #40]
   189a8:	ldp	x22, x21, [sp, #16]
   189ac:	ldp	x29, x30, [sp], #48
   189b0:	br	x2
   189b4:	bl	eeb0 <_ZSt9terminatev@plt>
   189b8:	ret
   189bc:	mov	x0, xzr
   189c0:	mov	x1, xzr
   189c4:	ret
   189c8:	b	eb20 <_ZdlPv@plt>
   189cc:	stp	x29, x30, [sp, #-48]!
   189d0:	str	x21, [sp, #16]
   189d4:	stp	x20, x19, [sp, #32]
   189d8:	mov	x29, sp
   189dc:	ldp	x8, x10, [x1, #8]
   189e0:	mov	x19, x1
   189e4:	mov	x20, x0
   189e8:	add	x9, x8, #0x18
   189ec:	cmp	x9, x10
   189f0:	b.cs	189fc <__cxa_demangle@@Base+0x6204>  // b.hs, b.nlast
   189f4:	ldr	x0, [x19]
   189f8:	b	18a20 <__cxa_demangle@@Base+0x6228>
   189fc:	ldr	x0, [x19]
   18a00:	lsl	x8, x10, #1
   18a04:	cmp	x8, x9
   18a08:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   18a0c:	str	x1, [x19, #16]
   18a10:	bl	ecc0 <realloc@plt>
   18a14:	str	x0, [x19]
   18a18:	cbz	x0, 18b28 <__cxa_demangle@@Base+0x6330>
   18a1c:	ldr	x8, [x19, #8]
   18a20:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   18a24:	add	x9, x9, #0x472
   18a28:	ldr	x10, [x9, #16]
   18a2c:	ldr	q0, [x9]
   18a30:	add	x8, x0, x8
   18a34:	mov	x1, x19
   18a38:	str	x10, [x8, #16]
   18a3c:	str	q0, [x8]
   18a40:	ldr	x8, [x19, #8]
   18a44:	add	x8, x8, #0x18
   18a48:	str	x8, [x19, #8]
   18a4c:	ldr	x21, [x20, #16]
   18a50:	ldr	x8, [x21]
   18a54:	mov	x0, x21
   18a58:	ldr	x8, [x8, #32]
   18a5c:	blr	x8
   18a60:	ldrb	w8, [x21, #9]
   18a64:	cmp	w8, #0x1
   18a68:	b.eq	18a80 <__cxa_demangle@@Base+0x6288>  // b.none
   18a6c:	ldr	x8, [x21]
   18a70:	mov	x0, x21
   18a74:	mov	x1, x19
   18a78:	ldr	x8, [x8, #40]
   18a7c:	blr	x8
   18a80:	ldp	x8, x10, [x19, #8]
   18a84:	add	x9, x8, #0x4
   18a88:	cmp	x9, x10
   18a8c:	b.cs	18a98 <__cxa_demangle@@Base+0x62a0>  // b.hs, b.nlast
   18a90:	ldr	x0, [x19]
   18a94:	b	18abc <__cxa_demangle@@Base+0x62c4>
   18a98:	ldr	x0, [x19]
   18a9c:	lsl	x8, x10, #1
   18aa0:	cmp	x8, x9
   18aa4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   18aa8:	str	x1, [x19, #16]
   18aac:	bl	ecc0 <realloc@plt>
   18ab0:	str	x0, [x19]
   18ab4:	cbz	x0, 18b28 <__cxa_demangle@@Base+0x6330>
   18ab8:	ldr	x8, [x19, #8]
   18abc:	mov	w9, #0x692d                	// #26925
   18ac0:	movk	w9, #0x2d6e, lsl #16
   18ac4:	str	w9, [x0, x8]
   18ac8:	ldr	x8, [x19, #8]
   18acc:	mov	x1, x19
   18ad0:	add	x8, x8, #0x4
   18ad4:	str	x8, [x19, #8]
   18ad8:	ldr	x20, [x20, #24]
   18adc:	ldr	x8, [x20]
   18ae0:	mov	x0, x20
   18ae4:	ldr	x8, [x8, #32]
   18ae8:	blr	x8
   18aec:	ldrb	w8, [x20, #9]
   18af0:	cmp	w8, #0x1
   18af4:	b.ne	18b08 <__cxa_demangle@@Base+0x6310>  // b.any
   18af8:	ldp	x20, x19, [sp, #32]
   18afc:	ldr	x21, [sp, #16]
   18b00:	ldp	x29, x30, [sp], #48
   18b04:	ret
   18b08:	ldr	x8, [x20]
   18b0c:	mov	x0, x20
   18b10:	mov	x1, x19
   18b14:	ldp	x20, x19, [sp, #32]
   18b18:	ldr	x2, [x8, #40]
   18b1c:	ldr	x21, [sp, #16]
   18b20:	ldp	x29, x30, [sp], #48
   18b24:	br	x2
   18b28:	bl	eeb0 <_ZSt9terminatev@plt>
   18b2c:	b	eb20 <_ZdlPv@plt>
   18b30:	stp	x29, x30, [sp, #-64]!
   18b34:	str	x23, [sp, #16]
   18b38:	stp	x22, x21, [sp, #32]
   18b3c:	stp	x20, x19, [sp, #48]
   18b40:	mov	x29, sp
   18b44:	ldp	x21, x20, [x0]
   18b48:	cmp	x21, x20
   18b4c:	b.eq	18f14 <__cxa_demangle@@Base+0x671c>  // b.none
   18b50:	ldrb	w8, [x21]
   18b54:	cmp	w8, #0x53
   18b58:	b.ne	18f14 <__cxa_demangle@@Base+0x671c>  // b.any
   18b5c:	add	x22, x21, #0x1
   18b60:	mov	x19, x0
   18b64:	cmp	x20, x22
   18b68:	str	x22, [x0]
   18b6c:	b.eq	18b78 <__cxa_demangle@@Base+0x6380>  // b.none
   18b70:	ldrb	w23, [x22]
   18b74:	b	18b7c <__cxa_demangle@@Base+0x6384>
   18b78:	mov	w23, wzr
   18b7c:	bl	ed40 <__ctype_b_loc@plt>
   18b80:	ldr	x8, [x0]
   18b84:	ldrh	w8, [x8, w23, uxtw #1]
   18b88:	tbnz	w8, #9, 18bbc <__cxa_demangle@@Base+0x63c4>
   18b8c:	cmp	x22, x20
   18b90:	b.eq	18c24 <__cxa_demangle@@Base+0x642c>  // b.none
   18b94:	ldrb	w8, [x22]
   18b98:	cmp	w8, #0x5f
   18b9c:	b.ne	18c24 <__cxa_demangle@@Base+0x642c>  // b.any
   18ba0:	ldp	x8, x9, [x19, #296]
   18ba4:	add	x10, x21, #0x2
   18ba8:	str	x10, [x19]
   18bac:	cmp	x8, x9
   18bb0:	b.eq	18f14 <__cxa_demangle@@Base+0x671c>  // b.none
   18bb4:	ldr	x20, [x8]
   18bb8:	b	18f18 <__cxa_demangle@@Base+0x6720>
   18bbc:	cmp	x20, x22
   18bc0:	b.eq	18f14 <__cxa_demangle@@Base+0x671c>  // b.none
   18bc4:	ldrb	w8, [x22]
   18bc8:	mov	x20, xzr
   18bcc:	sub	w8, w8, #0x61
   18bd0:	cmp	w8, #0x12
   18bd4:	b.hi	18f18 <__cxa_demangle@@Base+0x6720>  // b.pmore
   18bd8:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   18bdc:	add	x9, x9, #0x694
   18be0:	adr	x10, 18bf0 <__cxa_demangle@@Base+0x63f8>
   18be4:	ldrb	w11, [x9, x8]
   18be8:	add	x10, x10, x11, lsl #2
   18bec:	br	x10
   18bf0:	ldr	x20, [x19, #4912]
   18bf4:	add	x8, x21, #0x2
   18bf8:	str	x8, [x19]
   18bfc:	ldr	x8, [x20, #8]
   18c00:	add	x9, x8, #0x10
   18c04:	cmp	x9, #0xff0
   18c08:	b.cc	18eb8 <__cxa_demangle@@Base+0x66c0>  // b.lo, b.ul, b.last
   18c0c:	mov	w0, #0x1000                	// #4096
   18c10:	bl	ec00 <malloc@plt>
   18c14:	cbz	x0, 18f30 <__cxa_demangle@@Base+0x6738>
   18c18:	mov	x8, xzr
   18c1c:	mov	w9, wzr
   18c20:	b	18ce0 <__cxa_demangle@@Base+0x64e8>
   18c24:	cmp	x20, x22
   18c28:	b.eq	18f14 <__cxa_demangle@@Base+0x671c>  // b.none
   18c2c:	ldrb	w10, [x22]
   18c30:	cmp	w10, #0x30
   18c34:	b.cc	18f14 <__cxa_demangle@@Base+0x671c>  // b.lo, b.ul, b.last
   18c38:	cmp	w10, #0x3a
   18c3c:	b.cc	18c50 <__cxa_demangle@@Base+0x6458>  // b.lo, b.ul, b.last
   18c40:	sub	w8, w10, #0x41
   18c44:	and	w8, w8, #0xff
   18c48:	cmp	w8, #0x19
   18c4c:	b.hi	18f14 <__cxa_demangle@@Base+0x671c>  // b.pmore
   18c50:	mov	x8, xzr
   18c54:	add	x12, x21, #0x2
   18c58:	mov	w11, #0x24                  	// #36
   18c5c:	and	w9, w10, #0xff
   18c60:	cmp	w9, #0x3a
   18c64:	mov	x9, x12
   18c68:	b.cs	18c74 <__cxa_demangle@@Base+0x647c>  // b.hs, b.nlast
   18c6c:	mov	x12, #0xffffffffffffffd0    	// #-48
   18c70:	b	18c88 <__cxa_demangle@@Base+0x6490>
   18c74:	sub	w12, w10, #0x41
   18c78:	and	w12, w12, #0xff
   18c7c:	cmp	w12, #0x19
   18c80:	b.hi	18ed8 <__cxa_demangle@@Base+0x66e0>  // b.pmore
   18c84:	mov	x12, #0xffffffffffffffc9    	// #-55
   18c88:	add	x10, x12, w10, uxtb
   18c8c:	cmp	x20, x9
   18c90:	madd	x8, x8, x11, x10
   18c94:	str	x9, [x19]
   18c98:	b.eq	18edc <__cxa_demangle@@Base+0x66e4>  // b.none
   18c9c:	mov	x12, x9
   18ca0:	ldrb	w10, [x12], #1
   18ca4:	cmp	w10, #0x2f
   18ca8:	b.hi	18c5c <__cxa_demangle@@Base+0x6464>  // b.pmore
   18cac:	b	18edc <__cxa_demangle@@Base+0x66e4>
   18cb0:	ldr	x20, [x19, #4912]
   18cb4:	add	x8, x21, #0x2
   18cb8:	str	x8, [x19]
   18cbc:	ldr	x8, [x20, #8]
   18cc0:	add	x9, x8, #0x10
   18cc4:	cmp	x9, #0xff0
   18cc8:	b.cc	18ea8 <__cxa_demangle@@Base+0x66b0>  // b.lo, b.ul, b.last
   18ccc:	mov	w0, #0x1000                	// #4096
   18cd0:	bl	ec00 <malloc@plt>
   18cd4:	cbz	x0, 18f30 <__cxa_demangle@@Base+0x6738>
   18cd8:	mov	x8, xzr
   18cdc:	mov	w9, #0x5                   	// #5
   18ce0:	stp	x20, xzr, [x0]
   18ce4:	str	x0, [x19, #4912]
   18ce8:	b	18dd8 <__cxa_demangle@@Base+0x65e0>
   18cec:	ldr	x20, [x19, #4912]
   18cf0:	add	x8, x21, #0x2
   18cf4:	str	x8, [x19]
   18cf8:	ldr	x8, [x20, #8]
   18cfc:	add	x9, x8, #0x10
   18d00:	cmp	x9, #0xff0
   18d04:	b.cc	18eb0 <__cxa_demangle@@Base+0x66b8>  // b.lo, b.ul, b.last
   18d08:	mov	w0, #0x1000                	// #4096
   18d0c:	bl	ec00 <malloc@plt>
   18d10:	cbz	x0, 18f30 <__cxa_demangle@@Base+0x6738>
   18d14:	mov	x8, xzr
   18d18:	stp	x20, xzr, [x0]
   18d1c:	str	x0, [x19, #4912]
   18d20:	mov	w9, #0x2                   	// #2
   18d24:	b	18dd8 <__cxa_demangle@@Base+0x65e0>
   18d28:	ldr	x20, [x19, #4912]
   18d2c:	add	x8, x21, #0x2
   18d30:	str	x8, [x19]
   18d34:	ldr	x8, [x20, #8]
   18d38:	add	x9, x8, #0x10
   18d3c:	cmp	x9, #0xff0
   18d40:	b.cc	18ec0 <__cxa_demangle@@Base+0x66c8>  // b.lo, b.ul, b.last
   18d44:	mov	w0, #0x1000                	// #4096
   18d48:	bl	ec00 <malloc@plt>
   18d4c:	cbz	x0, 18f30 <__cxa_demangle@@Base+0x6738>
   18d50:	mov	x8, xzr
   18d54:	stp	x20, xzr, [x0]
   18d58:	str	x0, [x19, #4912]
   18d5c:	mov	w9, #0x1                   	// #1
   18d60:	b	18dd8 <__cxa_demangle@@Base+0x65e0>
   18d64:	ldr	x20, [x19, #4912]
   18d68:	add	x8, x21, #0x2
   18d6c:	str	x8, [x19]
   18d70:	ldr	x8, [x20, #8]
   18d74:	add	x9, x8, #0x10
   18d78:	cmp	x9, #0xff0
   18d7c:	b.cc	18ec8 <__cxa_demangle@@Base+0x66d0>  // b.lo, b.ul, b.last
   18d80:	mov	w0, #0x1000                	// #4096
   18d84:	bl	ec00 <malloc@plt>
   18d88:	cbz	x0, 18f30 <__cxa_demangle@@Base+0x6738>
   18d8c:	mov	x8, xzr
   18d90:	stp	x20, xzr, [x0]
   18d94:	str	x0, [x19, #4912]
   18d98:	mov	w9, #0x3                   	// #3
   18d9c:	b	18dd8 <__cxa_demangle@@Base+0x65e0>
   18da0:	ldr	x20, [x19, #4912]
   18da4:	add	x8, x21, #0x2
   18da8:	str	x8, [x19]
   18dac:	ldr	x8, [x20, #8]
   18db0:	add	x9, x8, #0x10
   18db4:	cmp	x9, #0xff0
   18db8:	b.cc	18ed0 <__cxa_demangle@@Base+0x66d8>  // b.lo, b.ul, b.last
   18dbc:	mov	w0, #0x1000                	// #4096
   18dc0:	bl	ec00 <malloc@plt>
   18dc4:	cbz	x0, 18f30 <__cxa_demangle@@Base+0x6738>
   18dc8:	mov	x8, xzr
   18dcc:	stp	x20, xzr, [x0]
   18dd0:	str	x0, [x19, #4912]
   18dd4:	mov	w9, #0x4                   	// #4
   18dd8:	mov	x20, x0
   18ddc:	add	x10, x8, #0x10
   18de0:	add	x21, x20, x8
   18de4:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   18de8:	add	x8, x8, #0x340
   18dec:	mov	w11, #0x129                 	// #297
   18df0:	str	x10, [x20, #8]
   18df4:	str	x8, [x21, #16]!
   18df8:	movk	w11, #0x101, lsl #16
   18dfc:	mov	x0, x19
   18e00:	mov	x1, x21
   18e04:	stp	w11, w9, [x21, #8]
   18e08:	bl	19d08 <__cxa_demangle@@Base+0x7510>
   18e0c:	cmp	x0, x21
   18e10:	b.eq	18e54 <__cxa_demangle@@Base+0x665c>  // b.none
   18e14:	ldp	x8, x9, [x19, #304]
   18e18:	mov	x20, x0
   18e1c:	cmp	x8, x9
   18e20:	b.ne	18e98 <__cxa_demangle@@Base+0x66a0>  // b.any
   18e24:	ldr	x23, [x19, #296]
   18e28:	add	x9, x19, #0x140
   18e2c:	cmp	x9, x23
   18e30:	sub	x21, x8, x23
   18e34:	b.eq	18e5c <__cxa_demangle@@Base+0x6664>  // b.none
   18e38:	lsl	x1, x21, #1
   18e3c:	mov	x0, x23
   18e40:	bl	ecc0 <realloc@plt>
   18e44:	mov	x22, x0
   18e48:	str	x0, [x19, #296]
   18e4c:	cbnz	x0, 18e84 <__cxa_demangle@@Base+0x668c>
   18e50:	b	18f30 <__cxa_demangle@@Base+0x6738>
   18e54:	mov	x20, x21
   18e58:	b	18f18 <__cxa_demangle@@Base+0x6720>
   18e5c:	lsl	x0, x21, #1
   18e60:	bl	ec00 <malloc@plt>
   18e64:	cbz	x0, 18f30 <__cxa_demangle@@Base+0x6738>
   18e68:	mov	x22, x0
   18e6c:	cbz	x21, 18e80 <__cxa_demangle@@Base+0x6688>
   18e70:	mov	x0, x22
   18e74:	mov	x1, x23
   18e78:	mov	x2, x21
   18e7c:	bl	eae0 <memmove@plt>
   18e80:	str	x22, [x19, #296]
   18e84:	asr	x8, x21, #3
   18e88:	asr	x9, x21, #2
   18e8c:	add	x8, x22, x8, lsl #3
   18e90:	add	x9, x22, x9, lsl #3
   18e94:	stp	x8, x9, [x19, #304]
   18e98:	add	x9, x8, #0x8
   18e9c:	str	x9, [x19, #304]
   18ea0:	str	x20, [x8]
   18ea4:	b	18f18 <__cxa_demangle@@Base+0x6720>
   18ea8:	mov	w9, #0x5                   	// #5
   18eac:	b	18ddc <__cxa_demangle@@Base+0x65e4>
   18eb0:	mov	w9, #0x2                   	// #2
   18eb4:	b	18ddc <__cxa_demangle@@Base+0x65e4>
   18eb8:	mov	w9, wzr
   18ebc:	b	18ddc <__cxa_demangle@@Base+0x65e4>
   18ec0:	mov	w9, #0x1                   	// #1
   18ec4:	b	18ddc <__cxa_demangle@@Base+0x65e4>
   18ec8:	mov	w9, #0x3                   	// #3
   18ecc:	b	18ddc <__cxa_demangle@@Base+0x65e4>
   18ed0:	mov	w9, #0x4                   	// #4
   18ed4:	b	18ddc <__cxa_demangle@@Base+0x65e4>
   18ed8:	sub	x9, x9, #0x1
   18edc:	cmp	x9, x20
   18ee0:	b.eq	18f14 <__cxa_demangle@@Base+0x671c>  // b.none
   18ee4:	ldrb	w10, [x9]
   18ee8:	cmp	w10, #0x5f
   18eec:	b.ne	18f14 <__cxa_demangle@@Base+0x671c>  // b.any
   18ef0:	ldp	x10, x11, [x19, #296]
   18ef4:	add	x8, x8, #0x1
   18ef8:	add	x9, x9, #0x1
   18efc:	str	x9, [x19]
   18f00:	sub	x11, x11, x10
   18f04:	cmp	x8, x11, asr #3
   18f08:	b.cs	18f14 <__cxa_demangle@@Base+0x671c>  // b.hs, b.nlast
   18f0c:	ldr	x20, [x10, x8, lsl #3]
   18f10:	b	18f18 <__cxa_demangle@@Base+0x6720>
   18f14:	mov	x20, xzr
   18f18:	mov	x0, x20
   18f1c:	ldp	x20, x19, [sp, #48]
   18f20:	ldp	x22, x21, [sp, #32]
   18f24:	ldr	x23, [sp, #16]
   18f28:	ldp	x29, x30, [sp], #64
   18f2c:	ret
   18f30:	bl	eeb0 <_ZSt9terminatev@plt>
   18f34:	sub	sp, sp, #0xb0
   18f38:	stp	x29, x30, [sp, #80]
   18f3c:	stp	x28, x27, [sp, #96]
   18f40:	stp	x26, x25, [sp, #112]
   18f44:	stp	x24, x23, [sp, #128]
   18f48:	stp	x22, x21, [sp, #144]
   18f4c:	stp	x20, x19, [sp, #160]
   18f50:	add	x29, sp, #0x50
   18f54:	ldp	x8, x9, [x0]
   18f58:	cmp	x8, x9
   18f5c:	b.eq	19440 <__cxa_demangle@@Base+0x6c48>  // b.none
   18f60:	ldrb	w9, [x8]
   18f64:	cmp	w9, #0x49
   18f68:	b.ne	19440 <__cxa_demangle@@Base+0x6c48>  // b.any
   18f6c:	mov	x19, x0
   18f70:	mov	w20, w1
   18f74:	add	x8, x8, #0x1
   18f78:	str	x8, [x0]
   18f7c:	tbz	w1, #0, 18fe4 <__cxa_demangle@@Base+0x67ec>
   18f80:	ldr	x0, [x19, #664]
   18f84:	ldr	x8, [x19, #680]
   18f88:	str	x0, [x19, #672]
   18f8c:	cmp	x8, x0
   18f90:	b.ne	18fcc <__cxa_demangle@@Base+0x67d4>  // b.any
   18f94:	add	x8, x19, #0x2b0
   18f98:	cmp	x8, x0
   18f9c:	b.eq	18fb4 <__cxa_demangle@@Base+0x67bc>  // b.none
   18fa0:	mov	x1, xzr
   18fa4:	bl	ecc0 <realloc@plt>
   18fa8:	str	x0, [x19, #664]
   18fac:	cbnz	x0, 18fc4 <__cxa_demangle@@Base+0x67cc>
   18fb0:	b	19508 <__cxa_demangle@@Base+0x6d10>
   18fb4:	mov	x0, xzr
   18fb8:	bl	ec00 <malloc@plt>
   18fbc:	cbz	x0, 19508 <__cxa_demangle@@Base+0x6d10>
   18fc0:	str	x0, [x19, #664]
   18fc4:	str	x0, [x19, #672]
   18fc8:	str	x0, [x19, #680]
   18fcc:	add	x8, x19, #0x240
   18fd0:	add	x9, x0, #0x8
   18fd4:	str	x9, [x19, #672]
   18fd8:	str	x8, [x0]
   18fdc:	ldr	x8, [x19, #576]
   18fe0:	str	x8, [x19, #584]
   18fe4:	ldp	x9, x8, [x19, #16]
   18fe8:	add	x10, x19, #0x28
   18fec:	str	x10, [sp, #8]
   18ff0:	add	x10, sp, #0x18
   18ff4:	sub	x8, x8, x9
   18ff8:	add	x21, x19, #0x2b0
   18ffc:	add	x11, x19, #0x2d0
   19000:	add	x22, x10, #0x18
   19004:	add	x28, x10, #0x38
   19008:	asr	x8, x8, #3
   1900c:	str	x11, [sp, #16]
   19010:	str	x8, [sp]
   19014:	b	1904c <__cxa_demangle@@Base+0x6854>
   19018:	mov	x0, x26
   1901c:	bl	ecc0 <realloc@plt>
   19020:	mov	x25, x0
   19024:	str	x0, [x19, #16]
   19028:	cbz	x0, 19508 <__cxa_demangle@@Base+0x6d10>
   1902c:	asr	x8, x24, #3
   19030:	asr	x9, x24, #2
   19034:	add	x8, x25, x8, lsl #3
   19038:	add	x9, x25, x9, lsl #3
   1903c:	stp	x8, x9, [x19, #24]
   19040:	add	x9, x8, #0x8
   19044:	str	x9, [x19, #24]
   19048:	str	x23, [x8]
   1904c:	ldp	x8, x9, [x19]
   19050:	cmp	x8, x9
   19054:	b.eq	19064 <__cxa_demangle@@Base+0x686c>  // b.none
   19058:	ldrb	w9, [x8]
   1905c:	cmp	w9, #0x45
   19060:	b.eq	19464 <__cxa_demangle@@Base+0x6c6c>  // b.none
   19064:	tbz	w20, #0, 190a4 <__cxa_demangle@@Base+0x68ac>
   19068:	movi	v0.2d, #0x0
   1906c:	stp	x22, x22, [sp, #24]
   19070:	str	x28, [sp, #40]
   19074:	stp	q0, q0, [x22]
   19078:	ldr	x24, [x19, #664]
   1907c:	cmp	x24, x21
   19080:	b.eq	19104 <__cxa_demangle@@Base+0x690c>  // b.none
   19084:	str	x24, [sp, #24]
   19088:	ldr	q0, [x19, #672]
   1908c:	ldr	x8, [sp, #16]
   19090:	stur	q0, [sp, #32]
   19094:	str	x21, [x19, #664]
   19098:	str	x21, [x19, #672]
   1909c:	str	x8, [x19, #680]
   190a0:	b	19140 <__cxa_demangle@@Base+0x6948>
   190a4:	mov	x0, x19
   190a8:	bl	1837c <__cxa_demangle@@Base+0x5b84>
   190ac:	cbz	x0, 19444 <__cxa_demangle@@Base+0x6c4c>
   190b0:	ldp	x8, x9, [x19, #24]
   190b4:	mov	x23, x0
   190b8:	cmp	x8, x9
   190bc:	b.ne	19040 <__cxa_demangle@@Base+0x6848>  // b.any
   190c0:	ldr	x26, [x19, #16]
   190c4:	sub	x24, x8, x26
   190c8:	ldr	x8, [sp, #8]
   190cc:	lsl	x1, x24, #1
   190d0:	cmp	x8, x26
   190d4:	b.ne	19018 <__cxa_demangle@@Base+0x6820>  // b.any
   190d8:	mov	x0, x1
   190dc:	bl	ec00 <malloc@plt>
   190e0:	cbz	x0, 19508 <__cxa_demangle@@Base+0x6d10>
   190e4:	mov	x25, x0
   190e8:	cbz	x24, 190fc <__cxa_demangle@@Base+0x6904>
   190ec:	mov	x0, x25
   190f0:	mov	x1, x26
   190f4:	mov	x2, x24
   190f8:	bl	eae0 <memmove@plt>
   190fc:	str	x25, [x19, #16]
   19100:	b	1902c <__cxa_demangle@@Base+0x6834>
   19104:	ldr	x8, [x19, #672]
   19108:	subs	x23, x8, x24
   1910c:	b.eq	19128 <__cxa_demangle@@Base+0x6930>  // b.none
   19110:	mov	x0, x22
   19114:	mov	x1, x21
   19118:	mov	x2, x23
   1911c:	bl	ead0 <memcpy@plt>
   19120:	asr	x8, x23, #3
   19124:	b	1912c <__cxa_demangle@@Base+0x6934>
   19128:	mov	x8, xzr
   1912c:	add	x9, sp, #0x18
   19130:	add	x8, x9, x8, lsl #3
   19134:	add	x8, x8, #0x18
   19138:	str	x8, [sp, #32]
   1913c:	str	x24, [x19, #672]
   19140:	mov	x0, x19
   19144:	bl	1837c <__cxa_demangle@@Base+0x5b84>
   19148:	ldr	x9, [sp, #24]
   1914c:	ldr	x8, [x19, #664]
   19150:	mov	x23, x0
   19154:	cmp	x9, x22
   19158:	b.eq	191bc <__cxa_demangle@@Base+0x69c4>  // b.none
   1915c:	cmp	x8, x21
   19160:	str	x9, [x19, #664]
   19164:	b.eq	191ec <__cxa_demangle@@Base+0x69f4>  // b.none
   19168:	ldur	q0, [sp, #32]
   1916c:	ldr	x9, [x19, #680]
   19170:	str	q0, [x19, #672]
   19174:	str	x9, [sp, #40]
   19178:	stp	x8, x8, [sp, #24]
   1917c:	cbz	x23, 1924c <__cxa_demangle@@Base+0x6a54>
   19180:	ldp	x8, x9, [x19, #24]
   19184:	cmp	x8, x9
   19188:	b.ne	19298 <__cxa_demangle@@Base+0x6aa0>  // b.any
   1918c:	ldr	x26, [x19, #16]
   19190:	sub	x24, x8, x26
   19194:	ldr	x8, [sp, #8]
   19198:	lsl	x1, x24, #1
   1919c:	cmp	x8, x26
   191a0:	b.eq	1925c <__cxa_demangle@@Base+0x6a64>  // b.none
   191a4:	mov	x0, x26
   191a8:	bl	ecc0 <realloc@plt>
   191ac:	mov	x25, x0
   191b0:	str	x0, [x19, #16]
   191b4:	cbnz	x0, 19284 <__cxa_demangle@@Base+0x6a8c>
   191b8:	b	19508 <__cxa_demangle@@Base+0x6d10>
   191bc:	mov	x0, x8
   191c0:	cmp	x8, x21
   191c4:	b.eq	19208 <__cxa_demangle@@Base+0x6a10>  // b.none
   191c8:	bl	ed60 <free@plt>
   191cc:	ldr	x8, [sp, #16]
   191d0:	str	x21, [x19, #664]
   191d4:	str	x21, [x19, #672]
   191d8:	mov	x0, x21
   191dc:	str	x8, [x19, #680]
   191e0:	ldr	x8, [sp, #24]
   191e4:	mov	x9, x8
   191e8:	b	1920c <__cxa_demangle@@Base+0x6a14>
   191ec:	ldur	q0, [sp, #32]
   191f0:	mov	x8, x22
   191f4:	str	q0, [x19, #672]
   191f8:	stp	x22, x22, [sp, #24]
   191fc:	str	x28, [sp, #40]
   19200:	cbnz	x23, 19180 <__cxa_demangle@@Base+0x6988>
   19204:	b	1924c <__cxa_demangle@@Base+0x6a54>
   19208:	mov	x8, x22
   1920c:	ldr	x10, [sp, #32]
   19210:	subs	x2, x10, x9
   19214:	b.eq	19234 <__cxa_demangle@@Base+0x6a3c>  // b.none
   19218:	mov	x1, x8
   1921c:	bl	eae0 <memmove@plt>
   19220:	ldp	x8, x9, [sp, #24]
   19224:	ldr	x11, [x19, #664]
   19228:	sub	x10, x9, x8
   1922c:	mov	x9, x8
   19230:	b	1923c <__cxa_demangle@@Base+0x6a44>
   19234:	mov	x10, xzr
   19238:	mov	x11, x21
   1923c:	add	x10, x11, x10
   19240:	str	x10, [x19, #672]
   19244:	str	x9, [sp, #32]
   19248:	cbnz	x23, 19180 <__cxa_demangle@@Base+0x6988>
   1924c:	mov	w23, #0x1                   	// #1
   19250:	cmp	x8, x22
   19254:	b.ne	19434 <__cxa_demangle@@Base+0x6c3c>  // b.any
   19258:	b	1943c <__cxa_demangle@@Base+0x6c44>
   1925c:	mov	x0, x1
   19260:	bl	ec00 <malloc@plt>
   19264:	cbz	x0, 19508 <__cxa_demangle@@Base+0x6d10>
   19268:	mov	x25, x0
   1926c:	cbz	x24, 19280 <__cxa_demangle@@Base+0x6a88>
   19270:	mov	x0, x25
   19274:	mov	x1, x26
   19278:	mov	x2, x24
   1927c:	bl	eae0 <memmove@plt>
   19280:	str	x25, [x19, #16]
   19284:	asr	x8, x24, #3
   19288:	asr	x9, x24, #2
   1928c:	add	x8, x25, x8, lsl #3
   19290:	add	x9, x25, x9, lsl #3
   19294:	stp	x8, x9, [x19, #24]
   19298:	add	x9, x8, #0x8
   1929c:	str	x9, [x19, #24]
   192a0:	str	x23, [x8]
   192a4:	ldrb	w8, [x23, #8]
   192a8:	cmp	w8, #0x21
   192ac:	b.ne	1938c <__cxa_demangle@@Base+0x6b94>  // b.any
   192b0:	ldr	x26, [x19, #4912]
   192b4:	ldp	x24, x25, [x23, #16]
   192b8:	ldr	x8, [x26, #8]
   192bc:	add	x9, x8, #0x20
   192c0:	cmp	x9, #0xff0
   192c4:	b.cc	192e4 <__cxa_demangle@@Base+0x6aec>  // b.lo, b.ul, b.last
   192c8:	mov	w0, #0x1000                	// #4096
   192cc:	bl	ec00 <malloc@plt>
   192d0:	cbz	x0, 19508 <__cxa_demangle@@Base+0x6d10>
   192d4:	mov	x8, xzr
   192d8:	stp	x26, xzr, [x0]
   192dc:	mov	x26, x0
   192e0:	str	x0, [x19, #4912]
   192e4:	add	x9, x8, #0x20
   192e8:	add	x23, x26, x8
   192ec:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   192f0:	add	x8, x8, #0x3b0
   192f4:	str	x9, [x26, #8]
   192f8:	str	x8, [x23, #16]!
   192fc:	mov	w8, #0x220                 	// #544
   19300:	movk	w8, #0x202, lsl #16
   19304:	str	w8, [x23, #8]
   19308:	lsl	x8, x25, #3
   1930c:	stp	x24, x25, [x23, #16]
   19310:	cbz	x25, 19334 <__cxa_demangle@@Base+0x6b3c>
   19314:	mov	x9, x8
   19318:	mov	x10, x24
   1931c:	ldr	x11, [x10], #8
   19320:	ldrb	w11, [x11, #10]
   19324:	cmp	w11, #0x1
   19328:	b.ne	1933c <__cxa_demangle@@Base+0x6b44>  // b.any
   1932c:	subs	x9, x9, #0x8
   19330:	b.ne	1931c <__cxa_demangle@@Base+0x6b24>  // b.any
   19334:	mov	w9, #0x1                   	// #1
   19338:	strb	w9, [x23, #10]
   1933c:	cbz	x25, 19360 <__cxa_demangle@@Base+0x6b68>
   19340:	mov	x9, x8
   19344:	mov	x10, x24
   19348:	ldr	x11, [x10], #8
   1934c:	ldrb	w11, [x11, #11]
   19350:	cmp	w11, #0x1
   19354:	b.ne	19368 <__cxa_demangle@@Base+0x6b70>  // b.any
   19358:	subs	x9, x9, #0x8
   1935c:	b.ne	19348 <__cxa_demangle@@Base+0x6b50>  // b.any
   19360:	mov	w9, #0x1                   	// #1
   19364:	strb	w9, [x23, #11]
   19368:	cbz	x25, 19384 <__cxa_demangle@@Base+0x6b8c>
   1936c:	ldr	x9, [x24], #8
   19370:	ldrb	w9, [x9, #9]
   19374:	cmp	w9, #0x1
   19378:	b.ne	1938c <__cxa_demangle@@Base+0x6b94>  // b.any
   1937c:	subs	x8, x8, #0x8
   19380:	b.ne	1936c <__cxa_demangle@@Base+0x6b74>  // b.any
   19384:	mov	w8, #0x1                   	// #1
   19388:	strb	w8, [x23, #9]
   1938c:	ldr	x8, [x19, #672]
   19390:	ldr	x9, [x19, #664]
   19394:	cmp	x8, x9
   19398:	b.eq	1950c <__cxa_demangle@@Base+0x6d14>  // b.none
   1939c:	ldur	x27, [x8, #-8]
   193a0:	ldp	x8, x9, [x27, #8]
   193a4:	cmp	x8, x9
   193a8:	b.ne	19418 <__cxa_demangle@@Base+0x6c20>  // b.any
   193ac:	mov	x9, x27
   193b0:	ldr	x26, [x9], #24
   193b4:	cmp	x9, x26
   193b8:	sub	x24, x8, x26
   193bc:	b.eq	193dc <__cxa_demangle@@Base+0x6be4>  // b.none
   193c0:	lsl	x1, x24, #1
   193c4:	mov	x0, x26
   193c8:	bl	ecc0 <realloc@plt>
   193cc:	mov	x25, x0
   193d0:	str	x0, [x27]
   193d4:	cbnz	x0, 19404 <__cxa_demangle@@Base+0x6c0c>
   193d8:	b	19508 <__cxa_demangle@@Base+0x6d10>
   193dc:	lsl	x0, x24, #1
   193e0:	bl	ec00 <malloc@plt>
   193e4:	cbz	x0, 19508 <__cxa_demangle@@Base+0x6d10>
   193e8:	mov	x25, x0
   193ec:	cbz	x24, 19400 <__cxa_demangle@@Base+0x6c08>
   193f0:	mov	x0, x25
   193f4:	mov	x1, x26
   193f8:	mov	x2, x24
   193fc:	bl	eae0 <memmove@plt>
   19400:	str	x25, [x27]
   19404:	asr	x8, x24, #3
   19408:	asr	x9, x24, #2
   1940c:	add	x8, x25, x8, lsl #3
   19410:	add	x9, x25, x9, lsl #3
   19414:	stp	x8, x9, [x27, #8]
   19418:	add	x9, x8, #0x8
   1941c:	str	x9, [x27, #8]
   19420:	str	x23, [x8]
   19424:	ldr	x8, [sp, #24]
   19428:	mov	w23, wzr
   1942c:	cmp	x8, x22
   19430:	b.eq	1943c <__cxa_demangle@@Base+0x6c44>  // b.none
   19434:	mov	x0, x8
   19438:	bl	ed60 <free@plt>
   1943c:	cbz	w23, 1904c <__cxa_demangle@@Base+0x6854>
   19440:	mov	x0, xzr
   19444:	ldp	x20, x19, [sp, #160]
   19448:	ldp	x22, x21, [sp, #144]
   1944c:	ldp	x24, x23, [sp, #128]
   19450:	ldp	x26, x25, [sp, #112]
   19454:	ldp	x28, x27, [sp, #96]
   19458:	ldp	x29, x30, [sp, #80]
   1945c:	add	sp, sp, #0xb0
   19460:	ret
   19464:	ldp	x9, x2, [x19, #16]
   19468:	ldr	x23, [sp]
   1946c:	add	x8, x8, #0x1
   19470:	str	x8, [x19]
   19474:	sub	x10, x2, x9
   19478:	cmp	x23, x10, asr #3
   1947c:	b.hi	1952c <__cxa_demangle@@Base+0x6d34>  // b.pmore
   19480:	add	x1, x9, x23, lsl #3
   19484:	mov	x0, x19
   19488:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1948c:	ldp	x8, x9, [x19, #16]
   19490:	sub	x9, x9, x8
   19494:	cmp	x23, x9, asr #3
   19498:	b.hi	1954c <__cxa_demangle@@Base+0x6d54>  // b.pmore
   1949c:	ldr	x22, [x19, #4912]
   194a0:	add	x8, x8, x23, lsl #3
   194a4:	str	x8, [x19, #24]
   194a8:	mov	x20, x0
   194ac:	ldr	x8, [x22, #8]
   194b0:	mov	x21, x1
   194b4:	add	x9, x8, #0x20
   194b8:	cmp	x9, #0xff0
   194bc:	b.cc	194dc <__cxa_demangle@@Base+0x6ce4>  // b.lo, b.ul, b.last
   194c0:	mov	w0, #0x1000                	// #4096
   194c4:	bl	ec00 <malloc@plt>
   194c8:	cbz	x0, 19508 <__cxa_demangle@@Base+0x6d10>
   194cc:	mov	x8, xzr
   194d0:	stp	x22, xzr, [x0]
   194d4:	mov	x22, x0
   194d8:	str	x0, [x19, #4912]
   194dc:	add	x9, x8, #0x20
   194e0:	add	x0, x22, x8
   194e4:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   194e8:	add	x8, x8, #0x420
   194ec:	mov	w10, #0x123                 	// #291
   194f0:	movk	w10, #0x101, lsl #16
   194f4:	str	x9, [x22, #8]
   194f8:	str	x8, [x0, #16]!
   194fc:	str	w10, [x0, #8]
   19500:	stp	x20, x21, [x0, #16]
   19504:	b	19444 <__cxa_demangle@@Base+0x6c4c>
   19508:	bl	eeb0 <_ZSt9terminatev@plt>
   1950c:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   19510:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   19514:	adrp	x3, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   19518:	add	x0, x0, #0x572
   1951c:	add	x1, x1, #0xce9
   19520:	add	x3, x3, #0x5a5
   19524:	mov	w2, #0x8e3                 	// #2275
   19528:	bl	ee90 <__assert_fail@plt>
   1952c:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   19530:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   19534:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   19538:	add	x0, x0, #0xdf
   1953c:	add	x1, x1, #0xce9
   19540:	add	x3, x3, #0xfc
   19544:	mov	w2, #0x94b                 	// #2379
   19548:	bl	ee90 <__assert_fail@plt>
   1954c:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   19550:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   19554:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   19558:	add	x0, x0, #0xa2e
   1955c:	add	x1, x1, #0xce9
   19560:	add	x3, x3, #0x2b6
   19564:	mov	w2, #0x8d9                 	// #2265
   19568:	bl	ee90 <__assert_fail@plt>
   1956c:	ldr	x8, [sp, #24]
   19570:	mov	x19, x0
   19574:	cmp	x8, x22
   19578:	b.eq	19584 <__cxa_demangle@@Base+0x6d8c>  // b.none
   1957c:	mov	x0, x8
   19580:	bl	ed60 <free@plt>
   19584:	mov	x0, x19
   19588:	bl	eea0 <_Unwind_Resume@plt>
   1958c:	stp	x29, x30, [sp, #-64]!
   19590:	stp	x24, x23, [sp, #16]
   19594:	stp	x22, x21, [sp, #32]
   19598:	stp	x20, x19, [sp, #48]
   1959c:	mov	x29, sp
   195a0:	ldp	x10, x8, [x0]
   195a4:	cmp	x10, x8
   195a8:	b.eq	19858 <__cxa_demangle@@Base+0x7060>  // b.none
   195ac:	ldrb	w9, [x10]
   195b0:	cmp	w9, #0x54
   195b4:	b.ne	19858 <__cxa_demangle@@Base+0x7060>  // b.any
   195b8:	add	x9, x10, #0x1
   195bc:	mov	x19, x0
   195c0:	cmp	x9, x8
   195c4:	str	x9, [x0]
   195c8:	b.eq	19858 <__cxa_demangle@@Base+0x7060>  // b.none
   195cc:	ldrb	w11, [x9]
   195d0:	cmp	w11, #0x4c
   195d4:	b.ne	19648 <__cxa_demangle@@Base+0x6e50>  // b.any
   195d8:	add	x9, x10, #0x2
   195dc:	cmp	x8, x9
   195e0:	str	x9, [x19]
   195e4:	b.eq	19858 <__cxa_demangle@@Base+0x7060>  // b.none
   195e8:	ldrb	w9, [x9]
   195ec:	sub	w9, w9, #0x30
   195f0:	cmp	w9, #0x9
   195f4:	b.hi	19858 <__cxa_demangle@@Base+0x7060>  // b.pmore
   195f8:	mov	x9, xzr
   195fc:	sub	x12, x8, #0x3
   19600:	sub	x13, x8, #0x2
   19604:	add	x9, x9, x9, lsl #2
   19608:	cmp	x13, x10
   1960c:	lsl	x9, x9, #1
   19610:	b.eq	197a0 <__cxa_demangle@@Base+0x6fa8>  // b.none
   19614:	add	x11, x10, #0x3
   19618:	str	x11, [x19]
   1961c:	ldrb	w14, [x10, #2]
   19620:	cmp	x12, x10
   19624:	add	x9, x9, x14
   19628:	sub	x9, x9, #0x30
   1962c:	b.eq	197a8 <__cxa_demangle@@Base+0x6fb0>  // b.none
   19630:	ldrb	w14, [x10, #3]
   19634:	add	x10, x10, #0x1
   19638:	sub	w14, w14, #0x30
   1963c:	cmp	w14, #0xa
   19640:	b.cc	19604 <__cxa_demangle@@Base+0x6e0c>  // b.lo, b.ul, b.last
   19644:	b	197a8 <__cxa_demangle@@Base+0x6fb0>
   19648:	mov	x23, xzr
   1964c:	cmp	x9, x8
   19650:	b.eq	197d0 <__cxa_demangle@@Base+0x6fd8>  // b.none
   19654:	ldrb	w10, [x9]
   19658:	cmp	w10, #0x5f
   1965c:	b.ne	197d0 <__cxa_demangle@@Base+0x6fd8>  // b.any
   19660:	mov	x24, xzr
   19664:	add	x8, x9, #0x1
   19668:	str	x8, [x19]
   1966c:	cbnz	x23, 19714 <__cxa_demangle@@Base+0x6f1c>
   19670:	ldrb	w8, [x19, #777]
   19674:	cbz	w8, 19714 <__cxa_demangle@@Base+0x6f1c>
   19678:	ldr	x21, [x19, #4912]
   1967c:	ldr	x8, [x21, #8]
   19680:	add	x9, x8, #0x30
   19684:	cmp	x9, #0xff0
   19688:	b.cc	196a8 <__cxa_demangle@@Base+0x6eb0>  // b.lo, b.ul, b.last
   1968c:	mov	w0, #0x1000                	// #4096
   19690:	bl	ec00 <malloc@plt>
   19694:	cbz	x0, 19974 <__cxa_demangle@@Base+0x717c>
   19698:	mov	x8, xzr
   1969c:	stp	x21, xzr, [x0]
   196a0:	mov	x21, x0
   196a4:	str	x0, [x19, #4912]
   196a8:	add	x9, x8, #0x30
   196ac:	add	x20, x21, x8
   196b0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   196b4:	add	x8, x8, #0xe40
   196b8:	mov	w10, #0x224                 	// #548
   196bc:	movk	w10, #0x202, lsl #16
   196c0:	str	x9, [x21, #8]
   196c4:	str	x8, [x20, #16]!
   196c8:	str	w10, [x20, #8]
   196cc:	stp	x24, xzr, [x20, #16]
   196d0:	strb	wzr, [x20, #32]
   196d4:	ldr	x8, [x19, #728]
   196d8:	ldr	x9, [x19, #736]
   196dc:	cmp	x8, x9
   196e0:	b.ne	198b4 <__cxa_demangle@@Base+0x70bc>  // b.any
   196e4:	ldr	x23, [x19, #720]
   196e8:	add	x9, x19, #0x2e8
   196ec:	cmp	x9, x23
   196f0:	sub	x21, x8, x23
   196f4:	b.eq	19874 <__cxa_demangle@@Base+0x707c>  // b.none
   196f8:	lsl	x1, x21, #1
   196fc:	mov	x0, x23
   19700:	bl	ecc0 <realloc@plt>
   19704:	mov	x22, x0
   19708:	str	x0, [x19, #720]
   1970c:	cbnz	x0, 1989c <__cxa_demangle@@Base+0x70a4>
   19710:	b	19974 <__cxa_demangle@@Base+0x717c>
   19714:	ldr	x8, [x19, #672]
   19718:	ldr	x22, [x19, #664]
   1971c:	sub	x21, x8, x22
   19720:	asr	x9, x21, #3
   19724:	cmp	x23, x9
   19728:	b.cs	1974c <__cxa_demangle@@Base+0x6f54>  // b.hs, b.nlast
   1972c:	ldr	x10, [x22, x23, lsl #3]
   19730:	cbz	x10, 1974c <__cxa_demangle@@Base+0x6f54>
   19734:	ldp	x10, x11, [x10]
   19738:	sub	x11, x11, x10
   1973c:	cmp	x24, x11, asr #3
   19740:	b.cs	1974c <__cxa_demangle@@Base+0x6f54>  // b.hs, b.nlast
   19744:	ldr	x20, [x10, x24, lsl #3]
   19748:	b	1985c <__cxa_demangle@@Base+0x7064>
   1974c:	cmp	x23, x9
   19750:	mov	x20, xzr
   19754:	b.hi	1985c <__cxa_demangle@@Base+0x7064>  // b.pmore
   19758:	ldr	x10, [x19, #784]
   1975c:	cmp	x10, x23
   19760:	b.ne	1985c <__cxa_demangle@@Base+0x7064>  // b.any
   19764:	cmp	x23, x9
   19768:	b.ne	1990c <__cxa_demangle@@Base+0x7114>  // b.any
   1976c:	ldr	x9, [x19, #680]
   19770:	cmp	x9, x8
   19774:	b.ne	19900 <__cxa_demangle@@Base+0x7108>  // b.any
   19778:	add	x8, x19, #0x2b0
   1977c:	cmp	x8, x22
   19780:	b.eq	198c4 <__cxa_demangle@@Base+0x70cc>  // b.none
   19784:	lsl	x1, x21, #1
   19788:	mov	x0, x22
   1978c:	bl	ecc0 <realloc@plt>
   19790:	mov	x20, x0
   19794:	str	x0, [x19, #664]
   19798:	cbnz	x0, 198ec <__cxa_demangle@@Base+0x70f4>
   1979c:	b	19974 <__cxa_demangle@@Base+0x717c>
   197a0:	sub	x9, x9, #0x30
   197a4:	add	x11, x10, #0x2
   197a8:	cmp	x11, x8
   197ac:	b.eq	19858 <__cxa_demangle@@Base+0x7060>  // b.none
   197b0:	ldrb	w10, [x11]
   197b4:	cmp	w10, #0x5f
   197b8:	b.ne	19858 <__cxa_demangle@@Base+0x7060>  // b.any
   197bc:	add	x23, x9, #0x1
   197c0:	add	x9, x11, #0x1
   197c4:	str	x9, [x19]
   197c8:	cmp	x9, x8
   197cc:	b.ne	19654 <__cxa_demangle@@Base+0x6e5c>  // b.any
   197d0:	cmp	x8, x9
   197d4:	b.eq	19858 <__cxa_demangle@@Base+0x7060>  // b.none
   197d8:	ldrb	w10, [x9]
   197dc:	sub	w10, w10, #0x30
   197e0:	cmp	w10, #0x9
   197e4:	b.hi	19858 <__cxa_demangle@@Base+0x7060>  // b.pmore
   197e8:	mov	x10, xzr
   197ec:	sub	x11, x8, #0x1
   197f0:	add	x10, x10, x10, lsl #2
   197f4:	cmp	x8, x9
   197f8:	lsl	x10, x10, #1
   197fc:	b.eq	19838 <__cxa_demangle@@Base+0x7040>  // b.none
   19800:	add	x12, x9, #0x1
   19804:	str	x12, [x19]
   19808:	ldrb	w13, [x9]
   1980c:	cmp	x11, x9
   19810:	add	x10, x10, x13
   19814:	sub	x10, x10, #0x30
   19818:	b.eq	19830 <__cxa_demangle@@Base+0x7038>  // b.none
   1981c:	ldrb	w9, [x12]
   19820:	sub	w9, w9, #0x30
   19824:	cmp	w9, #0xa
   19828:	mov	x9, x12
   1982c:	b.cc	197f0 <__cxa_demangle@@Base+0x6ff8>  // b.lo, b.ul, b.last
   19830:	mov	x9, x12
   19834:	b	1983c <__cxa_demangle@@Base+0x7044>
   19838:	sub	x10, x10, #0x30
   1983c:	cmp	x9, x8
   19840:	b.eq	19858 <__cxa_demangle@@Base+0x7060>  // b.none
   19844:	ldrb	w8, [x9]
   19848:	cmp	w8, #0x5f
   1984c:	b.ne	19858 <__cxa_demangle@@Base+0x7060>  // b.any
   19850:	add	x24, x10, #0x1
   19854:	b	19664 <__cxa_demangle@@Base+0x6e6c>
   19858:	mov	x20, xzr
   1985c:	mov	x0, x20
   19860:	ldp	x20, x19, [sp, #48]
   19864:	ldp	x22, x21, [sp, #32]
   19868:	ldp	x24, x23, [sp, #16]
   1986c:	ldp	x29, x30, [sp], #64
   19870:	ret
   19874:	lsl	x0, x21, #1
   19878:	bl	ec00 <malloc@plt>
   1987c:	cbz	x0, 19974 <__cxa_demangle@@Base+0x717c>
   19880:	mov	x22, x0
   19884:	cbz	x21, 19898 <__cxa_demangle@@Base+0x70a0>
   19888:	mov	x0, x22
   1988c:	mov	x1, x23
   19890:	mov	x2, x21
   19894:	bl	eae0 <memmove@plt>
   19898:	str	x22, [x19, #720]
   1989c:	asr	x8, x21, #3
   198a0:	asr	x9, x21, #2
   198a4:	add	x8, x22, x8, lsl #3
   198a8:	add	x9, x22, x9, lsl #3
   198ac:	str	x8, [x19, #728]
   198b0:	str	x9, [x19, #736]
   198b4:	add	x9, x8, #0x8
   198b8:	str	x9, [x19, #728]
   198bc:	str	x20, [x8]
   198c0:	b	1985c <__cxa_demangle@@Base+0x7064>
   198c4:	lsl	x0, x21, #1
   198c8:	bl	ec00 <malloc@plt>
   198cc:	cbz	x0, 19974 <__cxa_demangle@@Base+0x717c>
   198d0:	mov	x20, x0
   198d4:	cbz	x21, 198e8 <__cxa_demangle@@Base+0x70f0>
   198d8:	mov	x0, x20
   198dc:	mov	x1, x22
   198e0:	mov	x2, x21
   198e4:	bl	eae0 <memmove@plt>
   198e8:	str	x20, [x19, #664]
   198ec:	asr	x9, x21, #2
   198f0:	add	x8, x20, x23, lsl #3
   198f4:	add	x9, x20, x9, lsl #3
   198f8:	str	x8, [x19, #672]
   198fc:	str	x9, [x19, #680]
   19900:	add	x9, x8, #0x8
   19904:	str	x9, [x19, #672]
   19908:	str	xzr, [x8]
   1990c:	ldr	x21, [x19, #4912]
   19910:	ldr	x8, [x21, #8]
   19914:	add	x9, x8, #0x20
   19918:	cmp	x9, #0xff0
   1991c:	b.cc	1993c <__cxa_demangle@@Base+0x7144>  // b.lo, b.ul, b.last
   19920:	mov	w0, #0x1000                	// #4096
   19924:	bl	ec00 <malloc@plt>
   19928:	cbz	x0, 19974 <__cxa_demangle@@Base+0x717c>
   1992c:	mov	x8, xzr
   19930:	stp	x21, xzr, [x0]
   19934:	mov	x21, x0
   19938:	str	x0, [x19, #4912]
   1993c:	add	x9, x8, #0x20
   19940:	add	x20, x21, x8
   19944:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   19948:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1994c:	add	x8, x8, #0xd60
   19950:	mov	w10, #0x107                 	// #263
   19954:	add	x11, x11, #0x48f
   19958:	movk	w10, #0x101, lsl #16
   1995c:	str	x9, [x21, #8]
   19960:	str	x8, [x20, #16]!
   19964:	add	x8, x11, #0x4
   19968:	str	w10, [x20, #8]
   1996c:	stp	x11, x8, [x20, #16]
   19970:	b	1985c <__cxa_demangle@@Base+0x7064>
   19974:	bl	eeb0 <_ZSt9terminatev@plt>
   19978:	stp	x29, x30, [sp, #-48]!
   1997c:	str	x21, [sp, #16]
   19980:	stp	x20, x19, [sp, #32]
   19984:	mov	x29, sp
   19988:	ldp	x8, x9, [x0]
   1998c:	cmp	x8, x9
   19990:	b.eq	19a80 <__cxa_demangle@@Base+0x7288>  // b.none
   19994:	ldrb	w10, [x8]
   19998:	cmp	w10, #0x44
   1999c:	b.ne	19a80 <__cxa_demangle@@Base+0x7288>  // b.any
   199a0:	add	x10, x8, #0x1
   199a4:	mov	x19, x0
   199a8:	cmp	x10, x9
   199ac:	str	x10, [x0]
   199b0:	b.eq	19a80 <__cxa_demangle@@Base+0x7288>  // b.none
   199b4:	ldrb	w9, [x10]
   199b8:	cmp	w9, #0x74
   199bc:	b.eq	199cc <__cxa_demangle@@Base+0x71d4>  // b.none
   199c0:	ldrb	w9, [x10]
   199c4:	cmp	w9, #0x54
   199c8:	b.ne	19a80 <__cxa_demangle@@Base+0x7288>  // b.any
   199cc:	add	x8, x8, #0x2
   199d0:	mov	x0, x19
   199d4:	str	x8, [x19]
   199d8:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   199dc:	cbz	x0, 19a84 <__cxa_demangle@@Base+0x728c>
   199e0:	ldp	x8, x9, [x19]
   199e4:	cmp	x8, x9
   199e8:	b.eq	19a80 <__cxa_demangle@@Base+0x7288>  // b.none
   199ec:	ldrb	w9, [x8]
   199f0:	cmp	w9, #0x45
   199f4:	b.ne	19a80 <__cxa_demangle@@Base+0x7288>  // b.any
   199f8:	ldr	x21, [x19, #4912]
   199fc:	add	x8, x8, #0x1
   19a00:	str	x8, [x19]
   19a04:	mov	x20, x0
   19a08:	ldr	x8, [x21, #8]
   19a0c:	add	x9, x8, #0x40
   19a10:	cmp	x9, #0xff0
   19a14:	b.cc	19a34 <__cxa_demangle@@Base+0x723c>  // b.lo, b.ul, b.last
   19a18:	mov	w0, #0x1000                	// #4096
   19a1c:	bl	ec00 <malloc@plt>
   19a20:	cbz	x0, 19a94 <__cxa_demangle@@Base+0x729c>
   19a24:	mov	x8, xzr
   19a28:	stp	x21, xzr, [x0]
   19a2c:	mov	x21, x0
   19a30:	str	x0, [x19, #4912]
   19a34:	add	x9, x8, #0x40
   19a38:	add	x0, x21, x8
   19a3c:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   19a40:	add	x8, x8, #0xe70
   19a44:	str	x9, [x21, #8]
   19a48:	mov	w9, #0x134                 	// #308
   19a4c:	adrp	x10, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   19a50:	movk	w9, #0x101, lsl #16
   19a54:	add	x10, x10, #0x494
   19a58:	str	x8, [x0, #16]!
   19a5c:	adrp	x8, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   19a60:	add	x8, x8, #0xfa
   19a64:	str	w9, [x0, #8]
   19a68:	add	x9, x10, #0x9
   19a6c:	stp	x10, x9, [x0, #16]
   19a70:	add	x9, x8, #0x1
   19a74:	stp	x20, x8, [x0, #32]
   19a78:	str	x9, [x0, #48]
   19a7c:	b	19a84 <__cxa_demangle@@Base+0x728c>
   19a80:	mov	x0, xzr
   19a84:	ldp	x20, x19, [sp, #32]
   19a88:	ldr	x21, [sp, #16]
   19a8c:	ldp	x29, x30, [sp], #48
   19a90:	ret
   19a94:	bl	eeb0 <_ZSt9terminatev@plt>
   19a98:	stp	x29, x30, [sp, #-64]!
   19a9c:	str	x23, [sp, #16]
   19aa0:	stp	x22, x21, [sp, #32]
   19aa4:	stp	x20, x19, [sp, #48]
   19aa8:	mov	x29, sp
   19aac:	ldr	x8, [x1]
   19ab0:	mov	x21, x2
   19ab4:	mov	x19, x1
   19ab8:	mov	x20, x0
   19abc:	ldrb	w9, [x8, #8]
   19ac0:	cmp	w9, #0x29
   19ac4:	b.ne	19b30 <__cxa_demangle@@Base+0x7338>  // b.any
   19ac8:	ldr	w22, [x8, #12]
   19acc:	sub	w8, w22, #0x2
   19ad0:	cmp	w8, #0x3
   19ad4:	b.hi	19b30 <__cxa_demangle@@Base+0x7338>  // b.pmore
   19ad8:	ldr	x23, [x20, #4912]
   19adc:	ldr	x8, [x23, #8]
   19ae0:	add	x9, x8, #0x10
   19ae4:	cmp	x9, #0xff0
   19ae8:	b.cc	19b08 <__cxa_demangle@@Base+0x7310>  // b.lo, b.ul, b.last
   19aec:	mov	w0, #0x1000                	// #4096
   19af0:	bl	ec00 <malloc@plt>
   19af4:	cbz	x0, 19d04 <__cxa_demangle@@Base+0x750c>
   19af8:	mov	x8, xzr
   19afc:	stp	x23, xzr, [x0]
   19b00:	mov	x23, x0
   19b04:	str	x0, [x20, #4912]
   19b08:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   19b0c:	add	x9, x8, #0x10
   19b10:	add	x8, x23, x8
   19b14:	add	x10, x10, #0x110
   19b18:	mov	w11, #0x128                 	// #296
   19b1c:	movk	w11, #0x101, lsl #16
   19b20:	str	x9, [x23, #8]
   19b24:	str	x10, [x8, #16]!
   19b28:	stp	w11, w22, [x8, #8]
   19b2c:	str	x8, [x19]
   19b30:	ldp	x8, x9, [x20]
   19b34:	cmp	x8, x9
   19b38:	b.eq	19b7c <__cxa_demangle@@Base+0x7384>  // b.none
   19b3c:	ldrb	w10, [x8]
   19b40:	cmp	w10, #0x43
   19b44:	b.ne	19b7c <__cxa_demangle@@Base+0x7384>  // b.any
   19b48:	add	x10, x8, #0x1
   19b4c:	cmp	x10, x9
   19b50:	str	x10, [x20]
   19b54:	b.eq	19cec <__cxa_demangle@@Base+0x74f4>  // b.none
   19b58:	ldrb	w11, [x10]
   19b5c:	cmp	w11, #0x49
   19b60:	b.ne	19c3c <__cxa_demangle@@Base+0x7444>  // b.any
   19b64:	add	x10, x8, #0x2
   19b68:	mov	w8, #0x1                   	// #1
   19b6c:	str	x10, [x20]
   19b70:	cmp	x9, x10
   19b74:	b.ne	19c48 <__cxa_demangle@@Base+0x7450>  // b.any
   19b78:	b	19cec <__cxa_demangle@@Base+0x74f4>
   19b7c:	subs	x9, x9, x8
   19b80:	b.eq	19cec <__cxa_demangle@@Base+0x74f4>  // b.none
   19b84:	cmp	x9, #0x1
   19b88:	mov	x0, xzr
   19b8c:	b.eq	19cf0 <__cxa_demangle@@Base+0x74f8>  // b.none
   19b90:	ldrb	w9, [x8]
   19b94:	cmp	w9, #0x44
   19b98:	b.ne	19cf0 <__cxa_demangle@@Base+0x74f8>  // b.any
   19b9c:	ldrb	w22, [x8, #1]
   19ba0:	mov	x0, xzr
   19ba4:	cmp	w22, #0x35
   19ba8:	b.hi	19cf0 <__cxa_demangle@@Base+0x74f8>  // b.pmore
   19bac:	mov	w9, #0x1                   	// #1
   19bb0:	lsl	x9, x9, x22
   19bb4:	mov	x10, #0x37000000000000      	// #15481123719086080
   19bb8:	tst	x9, x10
   19bbc:	b.eq	19cf0 <__cxa_demangle@@Base+0x74f8>  // b.none
   19bc0:	add	x8, x8, #0x2
   19bc4:	str	x8, [x20]
   19bc8:	cbz	x21, 19bd4 <__cxa_demangle@@Base+0x73dc>
   19bcc:	mov	w8, #0x1                   	// #1
   19bd0:	strb	w8, [x21]
   19bd4:	ldr	x21, [x20, #4912]
   19bd8:	ldr	x8, [x21, #8]
   19bdc:	add	x9, x8, #0x20
   19be0:	cmp	x9, #0xff0
   19be4:	b.cc	19c04 <__cxa_demangle@@Base+0x740c>  // b.lo, b.ul, b.last
   19be8:	mov	w0, #0x1000                	// #4096
   19bec:	bl	ec00 <malloc@plt>
   19bf0:	cbz	x0, 19d04 <__cxa_demangle@@Base+0x750c>
   19bf4:	mov	x8, xzr
   19bf8:	stp	x21, xzr, [x0]
   19bfc:	mov	x21, x0
   19c00:	str	x0, [x20, #4912]
   19c04:	add	x10, x8, #0x20
   19c08:	str	x10, [x21, #8]
   19c0c:	ldr	x10, [x19]
   19c10:	add	x0, x21, x8
   19c14:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   19c18:	add	x8, x8, #0x180
   19c1c:	mov	w11, #0x12a                 	// #298
   19c20:	sub	w9, w22, #0x30
   19c24:	movk	w11, #0x101, lsl #16
   19c28:	mov	w12, #0x1                   	// #1
   19c2c:	str	x8, [x0, #16]!
   19c30:	str	w11, [x0, #8]
   19c34:	strb	w12, [x0, #24]
   19c38:	b	19ce0 <__cxa_demangle@@Base+0x74e8>
   19c3c:	mov	w8, wzr
   19c40:	cmp	x9, x10
   19c44:	b.eq	19cec <__cxa_demangle@@Base+0x74f4>  // b.none
   19c48:	ldrb	w22, [x10]
   19c4c:	sub	w9, w22, #0x31
   19c50:	cmp	w9, #0x4
   19c54:	b.hi	19cec <__cxa_demangle@@Base+0x74f4>  // b.pmore
   19c58:	add	x9, x10, #0x1
   19c5c:	str	x9, [x20]
   19c60:	cbz	x21, 19c6c <__cxa_demangle@@Base+0x7474>
   19c64:	mov	w9, #0x1                   	// #1
   19c68:	strb	w9, [x21]
   19c6c:	cbz	w8, 19c80 <__cxa_demangle@@Base+0x7488>
   19c70:	mov	x0, x20
   19c74:	mov	x1, x21
   19c78:	bl	17688 <__cxa_demangle@@Base+0x4e90>
   19c7c:	cbz	x0, 19cf0 <__cxa_demangle@@Base+0x74f8>
   19c80:	ldr	x21, [x20, #4912]
   19c84:	ldr	x8, [x21, #8]
   19c88:	add	x9, x8, #0x20
   19c8c:	cmp	x9, #0xff0
   19c90:	b.cc	19cb0 <__cxa_demangle@@Base+0x74b8>  // b.lo, b.ul, b.last
   19c94:	mov	w0, #0x1000                	// #4096
   19c98:	bl	ec00 <malloc@plt>
   19c9c:	cbz	x0, 19d04 <__cxa_demangle@@Base+0x750c>
   19ca0:	mov	x8, xzr
   19ca4:	stp	x21, xzr, [x0]
   19ca8:	mov	x21, x0
   19cac:	str	x0, [x20, #4912]
   19cb0:	add	x10, x8, #0x20
   19cb4:	str	x10, [x21, #8]
   19cb8:	add	x0, x21, x8
   19cbc:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   19cc0:	ldr	x10, [x19]
   19cc4:	add	x8, x8, #0x180
   19cc8:	mov	w11, #0x12a                 	// #298
   19ccc:	movk	w11, #0x101, lsl #16
   19cd0:	str	x8, [x0, #16]!
   19cd4:	sub	w9, w22, #0x30
   19cd8:	str	w11, [x0, #8]
   19cdc:	strb	wzr, [x0, #24]
   19ce0:	str	x10, [x0, #16]
   19ce4:	str	w9, [x0, #28]
   19ce8:	b	19cf0 <__cxa_demangle@@Base+0x74f8>
   19cec:	mov	x0, xzr
   19cf0:	ldp	x20, x19, [sp, #48]
   19cf4:	ldp	x22, x21, [sp, #32]
   19cf8:	ldr	x23, [sp, #16]
   19cfc:	ldp	x29, x30, [sp], #64
   19d00:	ret
   19d04:	bl	eeb0 <_ZSt9terminatev@plt>
   19d08:	stp	x29, x30, [sp, #-80]!
   19d0c:	stp	x26, x25, [sp, #16]
   19d10:	stp	x24, x23, [sp, #32]
   19d14:	stp	x22, x21, [sp, #48]
   19d18:	stp	x20, x19, [sp, #64]
   19d1c:	mov	x29, sp
   19d20:	ldp	x9, x8, [x0]
   19d24:	mov	x20, x1
   19d28:	cmp	x9, x8
   19d2c:	b.eq	19e70 <__cxa_demangle@@Base+0x7678>  // b.none
   19d30:	adrp	x21, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   19d34:	mov	x19, x0
   19d38:	add	x21, x21, #0x1f0
   19d3c:	mov	w22, #0x8                   	// #8
   19d40:	mov	w23, #0xa                   	// #10
   19d44:	b	19d84 <__cxa_demangle@@Base+0x758c>
   19d48:	add	x9, x8, #0x30
   19d4c:	str	x9, [x26, #8]
   19d50:	add	x10, x26, x8
   19d54:	ldurh	w8, [x20, #9]
   19d58:	ldrb	w9, [x20, #11]
   19d5c:	str	x21, [x10, #16]!
   19d60:	strb	w22, [x10, #8]
   19d64:	stp	x20, x24, [x10, #16]
   19d68:	str	x25, [x10, #32]
   19d6c:	sturh	w8, [x10, #9]
   19d70:	strb	w9, [x10, #11]
   19d74:	ldp	x9, x8, [x19]
   19d78:	mov	x20, x10
   19d7c:	cmp	x9, x8
   19d80:	b.eq	19e6c <__cxa_demangle@@Base+0x7674>  // b.none
   19d84:	ldrb	w10, [x9]
   19d88:	cmp	w10, #0x42
   19d8c:	b.ne	19e70 <__cxa_demangle@@Base+0x7678>  // b.any
   19d90:	add	x10, x9, #0x1
   19d94:	cmp	x8, x10
   19d98:	str	x10, [x19]
   19d9c:	b.eq	19e10 <__cxa_demangle@@Base+0x7618>  // b.none
   19da0:	ldrb	w10, [x10]
   19da4:	sub	w10, w10, #0x30
   19da8:	cmp	w10, #0x9
   19dac:	b.hi	19e10 <__cxa_demangle@@Base+0x7618>  // b.pmore
   19db0:	add	x10, x9, #0x2
   19db4:	str	x10, [x19]
   19db8:	ldrb	w9, [x9, #1]
   19dbc:	cmp	x8, x10
   19dc0:	mov	x24, x10
   19dc4:	sub	x9, x9, #0x30
   19dc8:	b.eq	19e04 <__cxa_demangle@@Base+0x760c>  // b.none
   19dcc:	ldrb	w11, [x10]
   19dd0:	sub	w11, w11, #0x30
   19dd4:	cmp	w11, #0xa
   19dd8:	b.cs	19e00 <__cxa_demangle@@Base+0x7608>  // b.hs, b.nlast
   19ddc:	add	x24, x10, #0x1
   19de0:	str	x24, [x19]
   19de4:	ldrb	w10, [x10]
   19de8:	cmp	x8, x24
   19dec:	madd	x9, x9, x23, x10
   19df0:	sub	x9, x9, #0x30
   19df4:	mov	x10, x24
   19df8:	b.ne	19dcc <__cxa_demangle@@Base+0x75d4>  // b.any
   19dfc:	b	19e04 <__cxa_demangle@@Base+0x760c>
   19e00:	mov	x24, x10
   19e04:	sub	x8, x8, x24
   19e08:	cmp	x8, x9
   19e0c:	b.cs	19e54 <__cxa_demangle@@Base+0x765c>  // b.hs, b.nlast
   19e10:	mov	x25, xzr
   19e14:	mov	x24, xzr
   19e18:	cmp	x24, x25
   19e1c:	b.eq	19e64 <__cxa_demangle@@Base+0x766c>  // b.none
   19e20:	ldr	x26, [x19, #4912]
   19e24:	ldr	x8, [x26, #8]
   19e28:	add	x9, x8, #0x30
   19e2c:	cmp	x9, #0xff0
   19e30:	b.cc	19d48 <__cxa_demangle@@Base+0x7550>  // b.lo, b.ul, b.last
   19e34:	mov	w0, #0x1000                	// #4096
   19e38:	bl	ec00 <malloc@plt>
   19e3c:	cbz	x0, 19e8c <__cxa_demangle@@Base+0x7694>
   19e40:	mov	x8, xzr
   19e44:	stp	x26, xzr, [x0]
   19e48:	mov	x26, x0
   19e4c:	str	x0, [x19, #4912]
   19e50:	b	19d48 <__cxa_demangle@@Base+0x7550>
   19e54:	add	x25, x24, x9
   19e58:	str	x25, [x19]
   19e5c:	cmp	x24, x25
   19e60:	b.ne	19e20 <__cxa_demangle@@Base+0x7628>  // b.any
   19e64:	mov	x20, xzr
   19e68:	b	19e70 <__cxa_demangle@@Base+0x7678>
   19e6c:	mov	x20, x10
   19e70:	mov	x0, x20
   19e74:	ldp	x20, x19, [sp, #64]
   19e78:	ldp	x22, x21, [sp, #48]
   19e7c:	ldp	x24, x23, [sp, #32]
   19e80:	ldp	x26, x25, [sp, #16]
   19e84:	ldp	x29, x30, [sp], #80
   19e88:	ret
   19e8c:	bl	eeb0 <_ZSt9terminatev@plt>
   19e90:	stp	x29, x30, [sp, #-80]!
   19e94:	str	x25, [sp, #16]
   19e98:	stp	x24, x23, [sp, #32]
   19e9c:	stp	x22, x21, [sp, #48]
   19ea0:	stp	x20, x19, [sp, #64]
   19ea4:	mov	x29, sp
   19ea8:	ldp	x8, x9, [x0]
   19eac:	mov	x19, x0
   19eb0:	subs	x9, x9, x8
   19eb4:	b.eq	19f34 <__cxa_demangle@@Base+0x773c>  // b.none
   19eb8:	ldrb	w10, [x8]
   19ebc:	cmp	w10, #0x55
   19ec0:	b.ne	19ed0 <__cxa_demangle@@Base+0x76d8>  // b.any
   19ec4:	mov	x0, x19
   19ec8:	bl	1e3a8 <__cxa_demangle@@Base+0xbbb0>
   19ecc:	b	19f3c <__cxa_demangle@@Base+0x7744>
   19ed0:	sub	w10, w10, #0x31
   19ed4:	cmp	w10, #0x8
   19ed8:	b.hi	19ee8 <__cxa_demangle@@Base+0x76f0>  // b.pmore
   19edc:	mov	x0, x19
   19ee0:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   19ee4:	b	19f3c <__cxa_demangle@@Base+0x7744>
   19ee8:	cmp	x9, #0x2
   19eec:	b.cc	19f34 <__cxa_demangle@@Base+0x773c>  // b.lo, b.ul, b.last
   19ef0:	ldrb	w9, [x8]
   19ef4:	cmp	w9, #0x44
   19ef8:	b.ne	19f34 <__cxa_demangle@@Base+0x773c>  // b.any
   19efc:	ldrb	w9, [x8, #1]
   19f00:	cmp	w9, #0x43
   19f04:	b.ne	19f34 <__cxa_demangle@@Base+0x773c>  // b.any
   19f08:	ldp	x22, x21, [x19, #16]
   19f0c:	add	x8, x8, #0x2
   19f10:	mov	x0, x19
   19f14:	str	x8, [x19]
   19f18:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   19f1c:	cbz	x0, 1a0a8 <__cxa_demangle@@Base+0x78b0>
   19f20:	sub	x8, x21, x22
   19f24:	mov	x20, x0
   19f28:	asr	x24, x8, #3
   19f2c:	add	x25, x19, #0x28
   19f30:	b	19f70 <__cxa_demangle@@Base+0x7778>
   19f34:	mov	x0, x19
   19f38:	bl	2275c <__cxa_demangle@@Base+0xff64>
   19f3c:	mov	x1, x0
   19f40:	cbz	x0, 1a0a8 <__cxa_demangle@@Base+0x78b0>
   19f44:	mov	x0, x19
   19f48:	ldp	x20, x19, [sp, #64]
   19f4c:	ldp	x22, x21, [sp, #48]
   19f50:	ldp	x24, x23, [sp, #32]
   19f54:	ldr	x25, [sp, #16]
   19f58:	ldp	x29, x30, [sp], #80
   19f5c:	b	19d08 <__cxa_demangle@@Base+0x7510>
   19f60:	mov	x0, x19
   19f64:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   19f68:	mov	x20, x0
   19f6c:	cbz	x0, 1a0a8 <__cxa_demangle@@Base+0x78b0>
   19f70:	ldp	x8, x9, [x19, #24]
   19f74:	cmp	x8, x9
   19f78:	b.ne	19fe4 <__cxa_demangle@@Base+0x77ec>  // b.any
   19f7c:	ldr	x23, [x19, #16]
   19f80:	sub	x21, x8, x23
   19f84:	cmp	x25, x23
   19f88:	lsl	x1, x21, #1
   19f8c:	b.eq	19fa8 <__cxa_demangle@@Base+0x77b0>  // b.none
   19f90:	mov	x0, x23
   19f94:	bl	ecc0 <realloc@plt>
   19f98:	mov	x22, x0
   19f9c:	str	x0, [x19, #16]
   19fa0:	cbnz	x0, 19fd0 <__cxa_demangle@@Base+0x77d8>
   19fa4:	b	1a0c4 <__cxa_demangle@@Base+0x78cc>
   19fa8:	mov	x0, x1
   19fac:	bl	ec00 <malloc@plt>
   19fb0:	cbz	x0, 1a0c4 <__cxa_demangle@@Base+0x78cc>
   19fb4:	mov	x22, x0
   19fb8:	cbz	x21, 19fcc <__cxa_demangle@@Base+0x77d4>
   19fbc:	mov	x0, x22
   19fc0:	mov	x1, x23
   19fc4:	mov	x2, x21
   19fc8:	bl	eae0 <memmove@plt>
   19fcc:	str	x22, [x19, #16]
   19fd0:	asr	x8, x21, #3
   19fd4:	asr	x9, x21, #2
   19fd8:	add	x8, x22, x8, lsl #3
   19fdc:	add	x9, x22, x9, lsl #3
   19fe0:	stp	x8, x9, [x19, #24]
   19fe4:	add	x9, x8, #0x8
   19fe8:	str	x9, [x19, #24]
   19fec:	str	x20, [x8]
   19ff0:	ldp	x8, x9, [x19]
   19ff4:	cmp	x8, x9
   19ff8:	b.eq	19f60 <__cxa_demangle@@Base+0x7768>  // b.none
   19ffc:	ldrb	w9, [x8]
   1a000:	cmp	w9, #0x45
   1a004:	b.ne	19f60 <__cxa_demangle@@Base+0x7768>  // b.any
   1a008:	ldp	x9, x2, [x19, #16]
   1a00c:	add	x8, x8, #0x1
   1a010:	str	x8, [x19]
   1a014:	sub	x10, x2, x9
   1a018:	cmp	x24, x10, asr #3
   1a01c:	b.hi	1a0c8 <__cxa_demangle@@Base+0x78d0>  // b.pmore
   1a020:	add	x1, x9, x24, lsl #3
   1a024:	mov	x0, x19
   1a028:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1a02c:	ldp	x8, x9, [x19, #16]
   1a030:	sub	x9, x9, x8
   1a034:	cmp	x24, x9, asr #3
   1a038:	b.hi	1a0e8 <__cxa_demangle@@Base+0x78f0>  // b.pmore
   1a03c:	ldr	x22, [x19, #4912]
   1a040:	add	x8, x8, x24, lsl #3
   1a044:	str	x8, [x19, #24]
   1a048:	mov	x20, x0
   1a04c:	ldr	x8, [x22, #8]
   1a050:	mov	x21, x1
   1a054:	add	x9, x8, #0x20
   1a058:	cmp	x9, #0xff0
   1a05c:	b.cc	1a07c <__cxa_demangle@@Base+0x7884>  // b.lo, b.ul, b.last
   1a060:	mov	w0, #0x1000                	// #4096
   1a064:	bl	ec00 <malloc@plt>
   1a068:	cbz	x0, 1a0c4 <__cxa_demangle@@Base+0x78cc>
   1a06c:	mov	x8, xzr
   1a070:	stp	x22, xzr, [x0]
   1a074:	mov	x22, x0
   1a078:	str	x0, [x19, #4912]
   1a07c:	add	x9, x8, #0x20
   1a080:	add	x1, x22, x8
   1a084:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   1a088:	add	x8, x8, #0x260
   1a08c:	mov	w10, #0x12e                 	// #302
   1a090:	movk	w10, #0x101, lsl #16
   1a094:	str	x9, [x22, #8]
   1a098:	str	x8, [x1, #16]!
   1a09c:	str	w10, [x1, #8]
   1a0a0:	stp	x20, x21, [x1, #16]
   1a0a4:	b	19f44 <__cxa_demangle@@Base+0x774c>
   1a0a8:	ldp	x20, x19, [sp, #64]
   1a0ac:	ldp	x22, x21, [sp, #48]
   1a0b0:	ldp	x24, x23, [sp, #32]
   1a0b4:	ldr	x25, [sp, #16]
   1a0b8:	mov	x0, xzr
   1a0bc:	ldp	x29, x30, [sp], #80
   1a0c0:	ret
   1a0c4:	bl	eeb0 <_ZSt9terminatev@plt>
   1a0c8:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1a0cc:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1a0d0:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1a0d4:	add	x0, x0, #0xdf
   1a0d8:	add	x1, x1, #0xce9
   1a0dc:	add	x3, x3, #0xfc
   1a0e0:	mov	w2, #0x94b                 	// #2379
   1a0e4:	bl	ee90 <__assert_fail@plt>
   1a0e8:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1a0ec:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1a0f0:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1a0f4:	add	x0, x0, #0xa2e
   1a0f8:	add	x1, x1, #0xce9
   1a0fc:	add	x3, x3, #0x2b6
   1a100:	mov	w2, #0x8d9                 	// #2265
   1a104:	bl	ee90 <__assert_fail@plt>
   1a108:	stp	x29, x30, [sp, #-48]!
   1a10c:	str	x21, [sp, #16]
   1a110:	stp	x20, x19, [sp, #32]
   1a114:	mov	x29, sp
   1a118:	ldp	x21, x8, [x0, #16]
   1a11c:	subs	x20, x8, x21
   1a120:	b.eq	1a180 <__cxa_demangle@@Base+0x7988>  // b.none
   1a124:	ldp	x8, x10, [x1, #8]
   1a128:	mov	x19, x1
   1a12c:	add	x9, x8, x20
   1a130:	cmp	x9, x10
   1a134:	b.cs	1a140 <__cxa_demangle@@Base+0x7948>  // b.hs, b.nlast
   1a138:	ldr	x0, [x19]
   1a13c:	b	1a164 <__cxa_demangle@@Base+0x796c>
   1a140:	ldr	x0, [x19]
   1a144:	lsl	x8, x10, #1
   1a148:	cmp	x8, x9
   1a14c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1a150:	str	x1, [x19, #16]
   1a154:	bl	ecc0 <realloc@plt>
   1a158:	str	x0, [x19]
   1a15c:	cbz	x0, 1a190 <__cxa_demangle@@Base+0x7998>
   1a160:	ldr	x8, [x19, #8]
   1a164:	add	x0, x0, x8
   1a168:	mov	x1, x21
   1a16c:	mov	x2, x20
   1a170:	bl	eae0 <memmove@plt>
   1a174:	ldr	x8, [x19, #8]
   1a178:	add	x8, x8, x20
   1a17c:	str	x8, [x19, #8]
   1a180:	ldp	x20, x19, [sp, #32]
   1a184:	ldr	x21, [sp, #16]
   1a188:	ldp	x29, x30, [sp], #48
   1a18c:	ret
   1a190:	bl	eeb0 <_ZSt9terminatev@plt>
   1a194:	ldp	x8, x1, [x0, #16]
   1a198:	mov	x0, x8
   1a19c:	ret
   1a1a0:	b	eb20 <_ZdlPv@plt>
   1a1a4:	stp	x29, x30, [sp, #-48]!
   1a1a8:	str	x21, [sp, #16]
   1a1ac:	stp	x20, x19, [sp, #32]
   1a1b0:	mov	x29, sp
   1a1b4:	ldr	x21, [x0, #16]
   1a1b8:	mov	x20, x0
   1a1bc:	mov	x19, x1
   1a1c0:	ldr	x8, [x21]
   1a1c4:	mov	x0, x21
   1a1c8:	ldr	x8, [x8, #32]
   1a1cc:	blr	x8
   1a1d0:	ldrb	w8, [x21, #9]
   1a1d4:	cmp	w8, #0x1
   1a1d8:	b.eq	1a1f0 <__cxa_demangle@@Base+0x79f8>  // b.none
   1a1dc:	ldr	x8, [x21]
   1a1e0:	mov	x0, x21
   1a1e4:	mov	x1, x19
   1a1e8:	ldr	x8, [x8, #40]
   1a1ec:	blr	x8
   1a1f0:	ldp	x8, x10, [x19, #8]
   1a1f4:	add	x9, x8, #0x2
   1a1f8:	cmp	x9, x10
   1a1fc:	b.cs	1a208 <__cxa_demangle@@Base+0x7a10>  // b.hs, b.nlast
   1a200:	ldr	x0, [x19]
   1a204:	b	1a22c <__cxa_demangle@@Base+0x7a34>
   1a208:	ldr	x0, [x19]
   1a20c:	lsl	x8, x10, #1
   1a210:	cmp	x8, x9
   1a214:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1a218:	str	x1, [x19, #16]
   1a21c:	bl	ecc0 <realloc@plt>
   1a220:	str	x0, [x19]
   1a224:	cbz	x0, 1a294 <__cxa_demangle@@Base+0x7a9c>
   1a228:	ldr	x8, [x19, #8]
   1a22c:	mov	w9, #0x3a3a                	// #14906
   1a230:	strh	w9, [x0, x8]
   1a234:	ldr	x8, [x19, #8]
   1a238:	mov	x1, x19
   1a23c:	add	x8, x8, #0x2
   1a240:	str	x8, [x19, #8]
   1a244:	ldr	x20, [x20, #24]
   1a248:	ldr	x8, [x20]
   1a24c:	mov	x0, x20
   1a250:	ldr	x8, [x8, #32]
   1a254:	blr	x8
   1a258:	ldrb	w8, [x20, #9]
   1a25c:	cmp	w8, #0x1
   1a260:	b.ne	1a274 <__cxa_demangle@@Base+0x7a7c>  // b.any
   1a264:	ldp	x20, x19, [sp, #32]
   1a268:	ldr	x21, [sp, #16]
   1a26c:	ldp	x29, x30, [sp], #48
   1a270:	ret
   1a274:	ldr	x8, [x20]
   1a278:	mov	x0, x20
   1a27c:	mov	x1, x19
   1a280:	ldp	x20, x19, [sp, #32]
   1a284:	ldr	x2, [x8, #40]
   1a288:	ldr	x21, [sp, #16]
   1a28c:	ldp	x29, x30, [sp], #48
   1a290:	br	x2
   1a294:	bl	eeb0 <_ZSt9terminatev@plt>
   1a298:	ldr	x0, [x0, #24]
   1a29c:	ldr	x8, [x0]
   1a2a0:	ldr	x1, [x8, #48]
   1a2a4:	br	x1
   1a2a8:	b	eb20 <_ZdlPv@plt>
   1a2ac:	stp	x29, x30, [sp, #-32]!
   1a2b0:	str	x19, [sp, #16]
   1a2b4:	mov	x29, sp
   1a2b8:	ldrb	w8, [x0, #32]
   1a2bc:	cbz	w8, 1a2c8 <__cxa_demangle@@Base+0x7ad0>
   1a2c0:	mov	w8, wzr
   1a2c4:	b	1a304 <__cxa_demangle@@Base+0x7b0c>
   1a2c8:	mov	x19, x0
   1a2cc:	ldr	x0, [x0, #24]
   1a2d0:	mov	w8, #0x1                   	// #1
   1a2d4:	strb	w8, [x19, #32]
   1a2d8:	ldrb	w8, [x0, #9]
   1a2dc:	cmp	w8, #0x2
   1a2e0:	b.ne	1a2f8 <__cxa_demangle@@Base+0x7b00>  // b.any
   1a2e4:	ldr	x8, [x0]
   1a2e8:	ldr	x8, [x8]
   1a2ec:	blr	x8
   1a2f0:	mov	w8, w0
   1a2f4:	b	1a300 <__cxa_demangle@@Base+0x7b08>
   1a2f8:	cmp	w8, #0x0
   1a2fc:	cset	w8, eq  // eq = none
   1a300:	strb	wzr, [x19, #32]
   1a304:	ldr	x19, [sp, #16]
   1a308:	and	w0, w8, #0x1
   1a30c:	ldp	x29, x30, [sp], #32
   1a310:	ret
   1a314:	strb	wzr, [x19, #32]
   1a318:	bl	eea0 <_Unwind_Resume@plt>
   1a31c:	stp	x29, x30, [sp, #-32]!
   1a320:	str	x19, [sp, #16]
   1a324:	mov	x29, sp
   1a328:	ldrb	w8, [x0, #32]
   1a32c:	cbz	w8, 1a338 <__cxa_demangle@@Base+0x7b40>
   1a330:	mov	w8, wzr
   1a334:	b	1a374 <__cxa_demangle@@Base+0x7b7c>
   1a338:	mov	x19, x0
   1a33c:	ldr	x0, [x0, #24]
   1a340:	mov	w8, #0x1                   	// #1
   1a344:	strb	w8, [x19, #32]
   1a348:	ldrb	w8, [x0, #10]
   1a34c:	cmp	w8, #0x2
   1a350:	b.ne	1a368 <__cxa_demangle@@Base+0x7b70>  // b.any
   1a354:	ldr	x8, [x0]
   1a358:	ldr	x8, [x8, #8]
   1a35c:	blr	x8
   1a360:	mov	w8, w0
   1a364:	b	1a370 <__cxa_demangle@@Base+0x7b78>
   1a368:	cmp	w8, #0x0
   1a36c:	cset	w8, eq  // eq = none
   1a370:	strb	wzr, [x19, #32]
   1a374:	ldr	x19, [sp, #16]
   1a378:	and	w0, w8, #0x1
   1a37c:	ldp	x29, x30, [sp], #32
   1a380:	ret
   1a384:	strb	wzr, [x19, #32]
   1a388:	bl	eea0 <_Unwind_Resume@plt>
   1a38c:	stp	x29, x30, [sp, #-32]!
   1a390:	str	x19, [sp, #16]
   1a394:	mov	x29, sp
   1a398:	ldrb	w8, [x0, #32]
   1a39c:	cbz	w8, 1a3a8 <__cxa_demangle@@Base+0x7bb0>
   1a3a0:	mov	w8, wzr
   1a3a4:	b	1a3e4 <__cxa_demangle@@Base+0x7bec>
   1a3a8:	mov	x19, x0
   1a3ac:	ldr	x0, [x0, #24]
   1a3b0:	mov	w8, #0x1                   	// #1
   1a3b4:	strb	w8, [x19, #32]
   1a3b8:	ldrb	w8, [x0, #11]
   1a3bc:	cmp	w8, #0x2
   1a3c0:	b.ne	1a3d8 <__cxa_demangle@@Base+0x7be0>  // b.any
   1a3c4:	ldr	x8, [x0]
   1a3c8:	ldr	x8, [x8, #16]
   1a3cc:	blr	x8
   1a3d0:	mov	w8, w0
   1a3d4:	b	1a3e0 <__cxa_demangle@@Base+0x7be8>
   1a3d8:	cmp	w8, #0x0
   1a3dc:	cset	w8, eq  // eq = none
   1a3e0:	strb	wzr, [x19, #32]
   1a3e4:	ldr	x19, [sp, #16]
   1a3e8:	and	w0, w8, #0x1
   1a3ec:	ldp	x29, x30, [sp], #32
   1a3f0:	ret
   1a3f4:	strb	wzr, [x19, #32]
   1a3f8:	bl	eea0 <_Unwind_Resume@plt>
   1a3fc:	stp	x29, x30, [sp, #-32]!
   1a400:	str	x19, [sp, #16]
   1a404:	mov	x29, sp
   1a408:	ldrb	w8, [x0, #32]
   1a40c:	mov	x19, x0
   1a410:	cbnz	w8, 1a434 <__cxa_demangle@@Base+0x7c3c>
   1a414:	ldr	x0, [x19, #24]
   1a418:	mov	w8, #0x1                   	// #1
   1a41c:	strb	w8, [x19, #32]
   1a420:	ldr	x8, [x0]
   1a424:	ldr	x8, [x8, #24]
   1a428:	blr	x8
   1a42c:	strb	wzr, [x19, #32]
   1a430:	mov	x19, x0
   1a434:	mov	x0, x19
   1a438:	ldr	x19, [sp, #16]
   1a43c:	ldp	x29, x30, [sp], #32
   1a440:	ret
   1a444:	strb	wzr, [x19, #32]
   1a448:	bl	eea0 <_Unwind_Resume@plt>
   1a44c:	stp	x29, x30, [sp, #-32]!
   1a450:	str	x19, [sp, #16]
   1a454:	mov	x29, sp
   1a458:	ldrb	w8, [x0, #32]
   1a45c:	cbnz	w8, 1a480 <__cxa_demangle@@Base+0x7c88>
   1a460:	mov	x19, x0
   1a464:	ldr	x0, [x0, #24]
   1a468:	mov	w8, #0x1                   	// #1
   1a46c:	strb	w8, [x19, #32]
   1a470:	ldr	x8, [x0]
   1a474:	ldr	x8, [x8, #32]
   1a478:	blr	x8
   1a47c:	strb	wzr, [x19, #32]
   1a480:	ldr	x19, [sp, #16]
   1a484:	ldp	x29, x30, [sp], #32
   1a488:	ret
   1a48c:	strb	wzr, [x19, #32]
   1a490:	bl	eea0 <_Unwind_Resume@plt>
   1a494:	stp	x29, x30, [sp, #-32]!
   1a498:	str	x19, [sp, #16]
   1a49c:	mov	x29, sp
   1a4a0:	ldrb	w8, [x0, #32]
   1a4a4:	cbnz	w8, 1a4c8 <__cxa_demangle@@Base+0x7cd0>
   1a4a8:	mov	x19, x0
   1a4ac:	ldr	x0, [x0, #24]
   1a4b0:	mov	w8, #0x1                   	// #1
   1a4b4:	strb	w8, [x19, #32]
   1a4b8:	ldr	x8, [x0]
   1a4bc:	ldr	x8, [x8, #40]
   1a4c0:	blr	x8
   1a4c4:	strb	wzr, [x19, #32]
   1a4c8:	ldr	x19, [sp, #16]
   1a4cc:	ldp	x29, x30, [sp], #32
   1a4d0:	ret
   1a4d4:	strb	wzr, [x19, #32]
   1a4d8:	bl	eea0 <_Unwind_Resume@plt>
   1a4dc:	b	eb20 <_ZdlPv@plt>
   1a4e0:	sub	sp, sp, #0x70
   1a4e4:	stp	x29, x30, [sp, #32]
   1a4e8:	stp	x26, x25, [sp, #48]
   1a4ec:	stp	x24, x23, [sp, #64]
   1a4f0:	stp	x22, x21, [sp, #80]
   1a4f4:	stp	x20, x19, [sp, #96]
   1a4f8:	add	x29, sp, #0x20
   1a4fc:	ldp	x9, x10, [x0]
   1a500:	sub	x8, x10, x9
   1a504:	cmp	x8, #0x2
   1a508:	b.cs	1a530 <__cxa_demangle@@Base+0x7d38>  // b.hs, b.nlast
   1a50c:	mov	x8, xzr
   1a510:	ldp	x20, x19, [sp, #96]
   1a514:	ldp	x22, x21, [sp, #80]
   1a518:	ldp	x24, x23, [sp, #64]
   1a51c:	ldp	x26, x25, [sp, #48]
   1a520:	ldp	x29, x30, [sp, #32]
   1a524:	mov	x0, x8
   1a528:	add	sp, sp, #0x70
   1a52c:	ret
   1a530:	ldrb	w11, [x9]
   1a534:	mov	x19, x0
   1a538:	cmp	w11, #0x67
   1a53c:	b.ne	1a568 <__cxa_demangle@@Base+0x7d70>  // b.any
   1a540:	ldrb	w8, [x9, #1]
   1a544:	cmp	w8, #0x73
   1a548:	b.ne	1a570 <__cxa_demangle@@Base+0x7d78>  // b.any
   1a54c:	add	x9, x9, #0x2
   1a550:	sub	x8, x10, x9
   1a554:	cmp	x8, #0x2
   1a558:	str	x9, [x19]
   1a55c:	b.cc	1a50c <__cxa_demangle@@Base+0x7d14>  // b.lo, b.ul, b.last
   1a560:	mov	w21, #0x1                   	// #1
   1a564:	b	1a574 <__cxa_demangle@@Base+0x7d7c>
   1a568:	mov	w21, wzr
   1a56c:	b	1a578 <__cxa_demangle@@Base+0x7d80>
   1a570:	mov	w21, wzr
   1a574:	ldrb	w11, [x9]
   1a578:	sub	w8, w11, #0x31
   1a57c:	cmp	w8, #0x43
   1a580:	b.hi	1aaf4 <__cxa_demangle@@Base+0x82fc>  // b.pmore
   1a584:	adrp	x12, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1a588:	add	x12, x12, #0x6a8
   1a58c:	adr	x13, 1a59c <__cxa_demangle@@Base+0x7da4>
   1a590:	ldrh	w14, [x12, x8, lsl #1]
   1a594:	add	x13, x13, x14, lsl #2
   1a598:	br	x13
   1a59c:	mov	x0, x19
   1a5a0:	ldp	x20, x19, [sp, #96]
   1a5a4:	ldp	x22, x21, [sp, #80]
   1a5a8:	ldp	x24, x23, [sp, #64]
   1a5ac:	ldp	x26, x25, [sp, #48]
   1a5b0:	ldp	x29, x30, [sp, #32]
   1a5b4:	add	sp, sp, #0x70
   1a5b8:	b	1d9c8 <__cxa_demangle@@Base+0xb1d0>
   1a5bc:	ldrb	w8, [x9, #1]
   1a5c0:	sub	w10, w8, #0x56
   1a5c4:	cmp	w10, #0x20
   1a5c8:	mov	x8, xzr
   1a5cc:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1a5d0:	adrp	x11, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1a5d4:	add	x11, x11, #0x94c
   1a5d8:	adr	x12, 1a510 <__cxa_demangle@@Base+0x7d18>
   1a5dc:	ldrh	w13, [x11, x10, lsl #1]
   1a5e0:	add	x12, x12, x13, lsl #2
   1a5e4:	br	x12
   1a5e8:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1a5ec:	add	x8, x9, #0x2
   1a5f0:	add	x1, x1, #0xcc3
   1a5f4:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1a5f8:	ldrb	w8, [x9, #1]
   1a5fc:	sub	w10, w8, #0x65
   1a600:	cmp	w10, #0x12
   1a604:	mov	x8, xzr
   1a608:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1a60c:	adrp	x11, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1a610:	add	x11, x11, #0x730
   1a614:	adr	x12, 1a510 <__cxa_demangle@@Base+0x7d18>
   1a618:	ldrh	w13, [x11, x10, lsl #1]
   1a61c:	add	x12, x12, x13, lsl #2
   1a620:	br	x12
   1a624:	add	x8, x9, #0x2
   1a628:	mov	x0, x19
   1a62c:	str	x8, [x19]
   1a630:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1a634:	cbnz	x0, 1afe4 <__cxa_demangle@@Base+0x87ec>
   1a638:	b	1a50c <__cxa_demangle@@Base+0x7d14>
   1a63c:	ldrb	w8, [x9, #1]
   1a640:	cmp	w8, #0x6c
   1a644:	b.eq	1adc4 <__cxa_demangle@@Base+0x85cc>  // b.none
   1a648:	cmp	w8, #0x78
   1a64c:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1a650:	add	x8, x9, #0x2
   1a654:	mov	x0, x19
   1a658:	str	x8, [x19]
   1a65c:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1a660:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1a664:	mov	x20, x0
   1a668:	mov	x0, x19
   1a66c:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1a670:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1a674:	ldr	x22, [x19, #4912]
   1a678:	mov	x21, x0
   1a67c:	ldr	x8, [x22, #8]
   1a680:	add	x9, x8, #0x20
   1a684:	cmp	x9, #0xff0
   1a688:	b.cc	1a6a8 <__cxa_demangle@@Base+0x7eb0>  // b.lo, b.ul, b.last
   1a68c:	mov	w0, #0x1000                	// #4096
   1a690:	bl	ec00 <malloc@plt>
   1a694:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1a698:	mov	x8, xzr
   1a69c:	stp	x22, xzr, [x0]
   1a6a0:	mov	x22, x0
   1a6a4:	str	x0, [x19, #4912]
   1a6a8:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1a6ac:	add	x9, x8, #0x20
   1a6b0:	add	x8, x22, x8
   1a6b4:	add	x10, x10, #0xbd0
   1a6b8:	mov	w11, #0x130                 	// #304
   1a6bc:	movk	w11, #0x101, lsl #16
   1a6c0:	str	x9, [x22, #8]
   1a6c4:	str	x10, [x8, #16]!
   1a6c8:	str	w11, [x8, #8]
   1a6cc:	stp	x20, x21, [x8, #16]
   1a6d0:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1a6d4:	ldrb	w11, [x9, #1]
   1a6d8:	mov	x8, xzr
   1a6dc:	sub	w12, w11, #0x61
   1a6e0:	cmp	w12, #0x17
   1a6e4:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1a6e8:	adrp	x13, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1a6ec:	add	x13, x13, #0x88e
   1a6f0:	adr	x14, 1a510 <__cxa_demangle@@Base+0x7d18>
   1a6f4:	ldrh	w15, [x13, x12, lsl #1]
   1a6f8:	add	x14, x14, x15, lsl #2
   1a6fc:	br	x14
   1a700:	sub	x13, x10, x9
   1a704:	cmp	x13, #0x1
   1a708:	cset	w8, hi  // hi = pmore
   1a70c:	cmp	w11, #0x61
   1a710:	cset	w12, eq  // eq = none
   1a714:	cmp	x13, #0x2
   1a718:	b.cc	1a50c <__cxa_demangle@@Base+0x7d14>  // b.lo, b.ul, b.last
   1a71c:	cmp	w11, #0x77
   1a720:	b.eq	1a72c <__cxa_demangle@@Base+0x7f34>  // b.none
   1a724:	cmp	w11, #0x61
   1a728:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1a72c:	ldp	x13, x11, [x19, #16]
   1a730:	and	w24, w8, w12
   1a734:	add	x8, x9, #0x2
   1a738:	add	x25, x19, #0x28
   1a73c:	sub	x9, x11, x13
   1a740:	asr	x26, x9, #3
   1a744:	str	x8, [x19]
   1a748:	b	1ad54 <__cxa_demangle@@Base+0x855c>
   1a74c:	sub	x8, x10, x9
   1a750:	cmp	x8, #0x2
   1a754:	b.cc	1bf7c <__cxa_demangle@@Base+0x9784>  // b.lo, b.ul, b.last
   1a758:	ldrb	w10, [x9, #1]
   1a75c:	cmp	w10, #0x70
   1a760:	b.eq	1bf9c <__cxa_demangle@@Base+0x97a4>  // b.none
   1a764:	cmp	w10, #0x4c
   1a768:	b.ne	1bf7c <__cxa_demangle@@Base+0x9784>  // b.any
   1a76c:	cmp	x8, #0x3
   1a770:	b.cc	1bf68 <__cxa_demangle@@Base+0x9770>  // b.lo, b.ul, b.last
   1a774:	ldrb	w20, [x9, #2]
   1a778:	b	1bf6c <__cxa_demangle@@Base+0x9774>
   1a77c:	ldrb	w8, [x9, #1]
   1a780:	cmp	w8, #0x74
   1a784:	b.eq	1ae88 <__cxa_demangle@@Base+0x8690>  // b.none
   1a788:	cmp	w8, #0x65
   1a78c:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1a790:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1a794:	add	x8, x9, #0x2
   1a798:	add	x1, x1, #0xe18
   1a79c:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1a7a0:	ldrb	w8, [x9, #1]
   1a7a4:	sub	w11, w8, #0x63
   1a7a8:	cmp	w11, #0x13
   1a7ac:	mov	x8, xzr
   1a7b0:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1a7b4:	adrp	x12, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1a7b8:	add	x12, x12, #0x98e
   1a7bc:	adr	x13, 1a510 <__cxa_demangle@@Base+0x7d18>
   1a7c0:	ldrh	w14, [x12, x11, lsl #1]
   1a7c4:	add	x13, x13, x14, lsl #2
   1a7c8:	br	x13
   1a7cc:	add	x8, x9, #0x2
   1a7d0:	mov	x0, x19
   1a7d4:	str	x8, [x19]
   1a7d8:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1a7dc:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1a7e0:	mov	x20, x0
   1a7e4:	mov	x0, x19
   1a7e8:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1a7ec:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1a7f0:	ldr	x22, [x19, #4912]
   1a7f4:	mov	x21, x0
   1a7f8:	ldr	x8, [x22, #8]
   1a7fc:	add	x9, x8, #0x30
   1a800:	cmp	x9, #0xff0
   1a804:	b.cc	1a824 <__cxa_demangle@@Base+0x802c>  // b.lo, b.ul, b.last
   1a808:	mov	w0, #0x1000                	// #4096
   1a80c:	bl	ec00 <malloc@plt>
   1a810:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1a814:	mov	x8, xzr
   1a818:	stp	x22, xzr, [x0]
   1a81c:	mov	x22, x0
   1a820:	str	x0, [x19, #4912]
   1a824:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1a828:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1a82c:	add	x9, x8, #0x30
   1a830:	add	x8, x22, x8
   1a834:	add	x10, x10, #0x770
   1a838:	mov	w11, #0x135                 	// #309
   1a83c:	add	x12, x12, #0x4a8
   1a840:	movk	w11, #0x101, lsl #16
   1a844:	str	x9, [x22, #8]
   1a848:	str	x10, [x8, #16]!
   1a84c:	add	x9, x12, #0xa
   1a850:	b	1be24 <__cxa_demangle@@Base+0x962c>
   1a854:	ldrb	w8, [x9, #1]
   1a858:	cmp	w8, #0x4f
   1a85c:	b.eq	1aea4 <__cxa_demangle@@Base+0x86ac>  // b.none
   1a860:	cmp	w8, #0x71
   1a864:	b.eq	1ae94 <__cxa_demangle@@Base+0x869c>  // b.none
   1a868:	cmp	w8, #0x6f
   1a86c:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1a870:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1a874:	add	x1, x1, #0xcce
   1a878:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1a87c:	mov	x0, x19
   1a880:	ldp	x20, x19, [sp, #96]
   1a884:	ldp	x22, x21, [sp, #80]
   1a888:	ldp	x24, x23, [sp, #64]
   1a88c:	ldp	x26, x25, [sp, #48]
   1a890:	ldp	x29, x30, [sp, #32]
   1a894:	add	sp, sp, #0x70
   1a898:	b	1c73c <__cxa_demangle@@Base+0x9f44>
   1a89c:	mov	x0, x19
   1a8a0:	ldp	x20, x19, [sp, #96]
   1a8a4:	ldp	x22, x21, [sp, #80]
   1a8a8:	ldp	x24, x23, [sp, #64]
   1a8ac:	ldp	x26, x25, [sp, #48]
   1a8b0:	ldp	x29, x30, [sp, #32]
   1a8b4:	add	sp, sp, #0x70
   1a8b8:	b	1958c <__cxa_demangle@@Base+0x6d94>
   1a8bc:	ldrb	w8, [x9, #1]
   1a8c0:	sub	w10, w8, #0x53
   1a8c4:	cmp	w10, #0x21
   1a8c8:	mov	x8, xzr
   1a8cc:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1a8d0:	adrp	x11, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1a8d4:	add	x11, x11, #0x908
   1a8d8:	adr	x12, 1a510 <__cxa_demangle@@Base+0x7d18>
   1a8dc:	ldrh	w13, [x11, x10, lsl #1]
   1a8e0:	add	x12, x12, x13, lsl #2
   1a8e4:	br	x12
   1a8e8:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1a8ec:	add	x1, x1, #0xd24
   1a8f0:	b	1b594 <__cxa_demangle@@Base+0x8d9c>
   1a8f4:	ldrb	w8, [x9, #1]
   1a8f8:	sub	w10, w8, #0x52
   1a8fc:	cmp	w10, #0x20
   1a900:	mov	x8, xzr
   1a904:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1a908:	adrp	x11, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1a90c:	add	x11, x11, #0x84c
   1a910:	adr	x12, 1a510 <__cxa_demangle@@Base+0x7d18>
   1a914:	ldrh	w13, [x11, x10, lsl #1]
   1a918:	add	x12, x12, x13, lsl #2
   1a91c:	br	x12
   1a920:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1a924:	add	x8, x9, #0x2
   1a928:	add	x1, x1, #0xdab
   1a92c:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1a930:	ldrb	w8, [x9, #1]
   1a934:	sub	w10, w8, #0x4e
   1a938:	cmp	w10, #0x2c
   1a93c:	mov	x8, xzr
   1a940:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1a944:	adrp	x11, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1a948:	add	x11, x11, #0x9b6
   1a94c:	adr	x12, 1a510 <__cxa_demangle@@Base+0x7d18>
   1a950:	ldrh	w13, [x11, x10, lsl #1]
   1a954:	add	x12, x12, x13, lsl #2
   1a958:	br	x12
   1a95c:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1a960:	add	x8, x9, #0x2
   1a964:	add	x1, x1, #0xc59
   1a968:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1a96c:	ldrb	w8, [x9, #1]
   1a970:	sub	w11, w8, #0x50
   1a974:	cmp	w11, #0x2a
   1a978:	mov	x8, xzr
   1a97c:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1a980:	adrp	x12, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1a984:	add	x12, x12, #0x756
   1a988:	adr	x13, 1a510 <__cxa_demangle@@Base+0x7d18>
   1a98c:	ldrh	w14, [x12, x11, lsl #1]
   1a990:	add	x13, x13, x14, lsl #2
   1a994:	br	x13
   1a998:	ldp	x12, x11, [x19, #16]
   1a99c:	add	x8, x9, #0x2
   1a9a0:	add	x25, x19, #0x28
   1a9a4:	str	x8, [x19]
   1a9a8:	sub	x9, x11, x12
   1a9ac:	asr	x24, x9, #3
   1a9b0:	b	1abd4 <__cxa_demangle@@Base+0x83dc>
   1a9b4:	ldrb	w8, [x9, #1]
   1a9b8:	cmp	w8, #0x75
   1a9bc:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1a9c0:	add	x8, x9, #0x2
   1a9c4:	mov	x0, x19
   1a9c8:	str	x8, [x19]
   1a9cc:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1a9d0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1a9d4:	mov	x20, x0
   1a9d8:	mov	x0, x19
   1a9dc:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1a9e0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1a9e4:	mov	x21, x0
   1a9e8:	mov	x0, x19
   1a9ec:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1a9f0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1a9f4:	ldr	x23, [x19, #4912]
   1a9f8:	mov	x22, x0
   1a9fc:	ldr	x8, [x23, #8]
   1aa00:	add	x9, x8, #0x30
   1aa04:	cmp	x9, #0xff0
   1aa08:	b.cc	1aa28 <__cxa_demangle@@Base+0x8230>  // b.lo, b.ul, b.last
   1aa0c:	mov	w0, #0x1000                	// #4096
   1aa10:	bl	ec00 <malloc@plt>
   1aa14:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1aa18:	mov	x8, xzr
   1aa1c:	stp	x23, xzr, [x0]
   1aa20:	mov	x23, x0
   1aa24:	str	x0, [x19, #4912]
   1aa28:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1aa2c:	mov	w11, #0x132                 	// #306
   1aa30:	add	x9, x8, #0x30
   1aa34:	add	x8, x23, x8
   1aa38:	add	x10, x10, #0xee0
   1aa3c:	b	1c28c <__cxa_demangle@@Base+0x9a94>
   1aa40:	ldrb	w8, [x9, #1]
   1aa44:	sub	w11, w8, #0x4c
   1aa48:	cmp	w11, #0x28
   1aa4c:	mov	x8, xzr
   1aa50:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1aa54:	adrp	x12, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1aa58:	add	x12, x12, #0x7fa
   1aa5c:	adr	x13, 1a510 <__cxa_demangle@@Base+0x7d18>
   1aa60:	ldrh	w14, [x12, x11, lsl #1]
   1aa64:	add	x13, x13, x14, lsl #2
   1aa68:	br	x13
   1aa6c:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1aa70:	add	x8, x9, #0x2
   1aa74:	add	x1, x1, #0xdcc
   1aa78:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1aa7c:	ldrb	w8, [x9, #1]
   1aa80:	sub	w11, w8, #0x49
   1aa84:	cmp	w11, #0x24
   1aa88:	mov	x8, xzr
   1aa8c:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1aa90:	adrp	x12, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1aa94:	add	x12, x12, #0x8be
   1aa98:	adr	x13, 1a510 <__cxa_demangle@@Base+0x7d18>
   1aa9c:	ldrh	w14, [x12, x11, lsl #1]
   1aaa0:	add	x13, x13, x14, lsl #2
   1aaa4:	br	x13
   1aaa8:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1aaac:	add	x8, x9, #0x2
   1aab0:	add	x1, x1, #0xd44
   1aab4:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1aab8:	ldrb	w8, [x9, #1]
   1aabc:	sub	w10, w8, #0x4d
   1aac0:	cmp	w10, #0x26
   1aac4:	mov	x8, xzr
   1aac8:	b.hi	1a510 <__cxa_demangle@@Base+0x7d18>  // b.pmore
   1aacc:	adrp	x11, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1aad0:	add	x11, x11, #0x7ac
   1aad4:	adr	x12, 1a510 <__cxa_demangle@@Base+0x7d18>
   1aad8:	ldrh	w13, [x11, x10, lsl #1]
   1aadc:	add	x12, x12, x13, lsl #2
   1aae0:	br	x12
   1aae4:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1aae8:	add	x8, x9, #0x2
   1aaec:	add	x1, x1, #0xe01
   1aaf0:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1aaf4:	sub	x8, x10, x9
   1aaf8:	cmp	x8, #0xb
   1aafc:	mov	x8, xzr
   1ab00:	b.cc	1a510 <__cxa_demangle@@Base+0x7d18>  // b.lo, b.ul, b.last
   1ab04:	cmp	w11, #0x75
   1ab08:	b.ne	1a510 <__cxa_demangle@@Base+0x7d18>  // b.any
   1ab0c:	ldrb	w8, [x9, #1]
   1ab10:	cmp	w8, #0x38
   1ab14:	b.ne	1ac44 <__cxa_demangle@@Base+0x844c>  // b.any
   1ab18:	ldrb	w8, [x9, #2]
   1ab1c:	cmp	w8, #0x5f
   1ab20:	b.ne	1ac44 <__cxa_demangle@@Base+0x844c>  // b.any
   1ab24:	ldrb	w8, [x9, #3]
   1ab28:	cmp	w8, #0x5f
   1ab2c:	b.ne	1ac44 <__cxa_demangle@@Base+0x844c>  // b.any
   1ab30:	ldrb	w8, [x9, #4]
   1ab34:	cmp	w8, #0x75
   1ab38:	b.ne	1ac44 <__cxa_demangle@@Base+0x844c>  // b.any
   1ab3c:	ldrb	w8, [x9, #5]
   1ab40:	cmp	w8, #0x75
   1ab44:	b.ne	1ac44 <__cxa_demangle@@Base+0x844c>  // b.any
   1ab48:	ldrb	w8, [x9, #6]
   1ab4c:	cmp	w8, #0x69
   1ab50:	b.ne	1ac44 <__cxa_demangle@@Base+0x844c>  // b.any
   1ab54:	ldrb	w8, [x9, #7]
   1ab58:	cmp	w8, #0x64
   1ab5c:	b.ne	1ac44 <__cxa_demangle@@Base+0x844c>  // b.any
   1ab60:	ldrb	w8, [x9, #8]
   1ab64:	cmp	w8, #0x6f
   1ab68:	b.ne	1ac44 <__cxa_demangle@@Base+0x844c>  // b.any
   1ab6c:	ldrb	w8, [x9, #9]
   1ab70:	cmp	w8, #0x66
   1ab74:	b.ne	1ac44 <__cxa_demangle@@Base+0x844c>  // b.any
   1ab78:	ldrb	w8, [x9, #10]
   1ab7c:	cmp	w8, #0x74
   1ab80:	b.ne	1ac44 <__cxa_demangle@@Base+0x844c>  // b.any
   1ab84:	add	x8, x9, #0xb
   1ab88:	mov	x0, x19
   1ab8c:	str	x8, [x19]
   1ab90:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1ab94:	cbnz	x0, 1acd0 <__cxa_demangle@@Base+0x84d8>
   1ab98:	b	1a50c <__cxa_demangle@@Base+0x7d14>
   1ab9c:	mov	x0, x23
   1aba0:	bl	ecc0 <realloc@plt>
   1aba4:	mov	x22, x0
   1aba8:	str	x0, [x19, #16]
   1abac:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1abb0:	asr	x8, x21, #3
   1abb4:	asr	x9, x21, #2
   1abb8:	add	x8, x22, x8, lsl #3
   1abbc:	add	x9, x22, x9, lsl #3
   1abc0:	stp	x8, x9, [x19, #24]
   1abc4:	add	x9, x8, #0x8
   1abc8:	str	x9, [x19, #24]
   1abcc:	str	x20, [x8]
   1abd0:	ldp	x8, x10, [x19]
   1abd4:	cmp	x8, x10
   1abd8:	b.eq	1abe8 <__cxa_demangle@@Base+0x83f0>  // b.none
   1abdc:	ldrb	w9, [x8]
   1abe0:	cmp	w9, #0x45
   1abe4:	b.eq	1c064 <__cxa_demangle@@Base+0x986c>  // b.none
   1abe8:	mov	x0, x19
   1abec:	bl	1837c <__cxa_demangle@@Base+0x5b84>
   1abf0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1abf4:	ldp	x8, x9, [x19, #24]
   1abf8:	mov	x20, x0
   1abfc:	cmp	x8, x9
   1ac00:	b.ne	1abc4 <__cxa_demangle@@Base+0x83cc>  // b.any
   1ac04:	ldr	x23, [x19, #16]
   1ac08:	sub	x21, x8, x23
   1ac0c:	cmp	x25, x23
   1ac10:	lsl	x1, x21, #1
   1ac14:	b.ne	1ab9c <__cxa_demangle@@Base+0x83a4>  // b.any
   1ac18:	mov	x0, x1
   1ac1c:	bl	ec00 <malloc@plt>
   1ac20:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1ac24:	mov	x22, x0
   1ac28:	cbz	x21, 1ac3c <__cxa_demangle@@Base+0x8444>
   1ac2c:	mov	x0, x22
   1ac30:	mov	x1, x23
   1ac34:	mov	x2, x21
   1ac38:	bl	eae0 <memmove@plt>
   1ac3c:	str	x22, [x19, #16]
   1ac40:	b	1abb0 <__cxa_demangle@@Base+0x83b8>
   1ac44:	ldrb	w8, [x9, #1]
   1ac48:	cmp	w8, #0x38
   1ac4c:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1ac50:	ldrb	w8, [x9, #2]
   1ac54:	cmp	w8, #0x5f
   1ac58:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1ac5c:	ldrb	w8, [x9, #3]
   1ac60:	cmp	w8, #0x5f
   1ac64:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1ac68:	ldrb	w8, [x9, #4]
   1ac6c:	cmp	w8, #0x75
   1ac70:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1ac74:	ldrb	w8, [x9, #5]
   1ac78:	cmp	w8, #0x75
   1ac7c:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1ac80:	ldrb	w8, [x9, #6]
   1ac84:	cmp	w8, #0x69
   1ac88:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1ac8c:	ldrb	w8, [x9, #7]
   1ac90:	cmp	w8, #0x64
   1ac94:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1ac98:	ldrb	w8, [x9, #8]
   1ac9c:	cmp	w8, #0x6f
   1aca0:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1aca4:	ldrb	w8, [x9, #9]
   1aca8:	cmp	w8, #0x66
   1acac:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1acb0:	ldrb	w8, [x9, #10]
   1acb4:	cmp	w8, #0x7a
   1acb8:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1acbc:	add	x8, x9, #0xb
   1acc0:	mov	x0, x19
   1acc4:	str	x8, [x19]
   1acc8:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1accc:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1acd0:	ldr	x21, [x19, #4912]
   1acd4:	mov	x20, x0
   1acd8:	ldr	x8, [x21, #8]
   1acdc:	add	x9, x8, #0x20
   1ace0:	cmp	x9, #0xff0
   1ace4:	b.cc	1ad04 <__cxa_demangle@@Base+0x850c>  // b.lo, b.ul, b.last
   1ace8:	mov	w0, #0x1000                	// #4096
   1acec:	bl	ec00 <malloc@plt>
   1acf0:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1acf4:	mov	x8, xzr
   1acf8:	stp	x21, xzr, [x0]
   1acfc:	mov	x21, x0
   1ad00:	str	x0, [x19, #4912]
   1ad04:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   1ad08:	mov	w11, #0x140                 	// #320
   1ad0c:	add	x9, x8, #0x20
   1ad10:	add	x8, x21, x8
   1ad14:	add	x10, x10, #0xa0
   1ad18:	b	1bb0c <__cxa_demangle@@Base+0x9314>
   1ad1c:	mov	x0, x23
   1ad20:	bl	ecc0 <realloc@plt>
   1ad24:	mov	x22, x0
   1ad28:	str	x0, [x19, #16]
   1ad2c:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1ad30:	asr	x8, x21, #3
   1ad34:	asr	x9, x21, #2
   1ad38:	add	x8, x22, x8, lsl #3
   1ad3c:	add	x9, x22, x9, lsl #3
   1ad40:	stp	x8, x9, [x19, #24]
   1ad44:	add	x9, x8, #0x8
   1ad48:	str	x9, [x19, #24]
   1ad4c:	str	x20, [x8]
   1ad50:	ldp	x8, x10, [x19]
   1ad54:	cmp	x8, x10
   1ad58:	b.eq	1ad68 <__cxa_demangle@@Base+0x8570>  // b.none
   1ad5c:	ldrb	w9, [x8]
   1ad60:	cmp	w9, #0x5f
   1ad64:	b.eq	1c2a8 <__cxa_demangle@@Base+0x9ab0>  // b.none
   1ad68:	mov	x0, x19
   1ad6c:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1ad70:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1ad74:	ldp	x8, x9, [x19, #24]
   1ad78:	mov	x20, x0
   1ad7c:	cmp	x8, x9
   1ad80:	b.ne	1ad44 <__cxa_demangle@@Base+0x854c>  // b.any
   1ad84:	ldr	x23, [x19, #16]
   1ad88:	sub	x21, x8, x23
   1ad8c:	cmp	x25, x23
   1ad90:	lsl	x1, x21, #1
   1ad94:	b.ne	1ad1c <__cxa_demangle@@Base+0x8524>  // b.any
   1ad98:	mov	x0, x1
   1ad9c:	bl	ec00 <malloc@plt>
   1ada0:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1ada4:	mov	x22, x0
   1ada8:	cbz	x21, 1adbc <__cxa_demangle@@Base+0x85c4>
   1adac:	mov	x0, x22
   1adb0:	mov	x1, x23
   1adb4:	mov	x2, x21
   1adb8:	bl	eae0 <memmove@plt>
   1adbc:	str	x22, [x19, #16]
   1adc0:	b	1ad30 <__cxa_demangle@@Base+0x8538>
   1adc4:	ldp	x12, x11, [x19, #16]
   1adc8:	add	x8, x9, #0x2
   1adcc:	add	x25, x19, #0x28
   1add0:	str	x8, [x19]
   1add4:	sub	x9, x11, x12
   1add8:	asr	x24, x9, #3
   1addc:	b	1ae18 <__cxa_demangle@@Base+0x8620>
   1ade0:	mov	x0, x23
   1ade4:	bl	ecc0 <realloc@plt>
   1ade8:	mov	x22, x0
   1adec:	str	x0, [x19, #16]
   1adf0:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1adf4:	asr	x8, x21, #3
   1adf8:	asr	x9, x21, #2
   1adfc:	add	x8, x22, x8, lsl #3
   1ae00:	add	x9, x22, x9, lsl #3
   1ae04:	stp	x8, x9, [x19, #24]
   1ae08:	add	x9, x8, #0x8
   1ae0c:	str	x9, [x19, #24]
   1ae10:	str	x20, [x8]
   1ae14:	ldp	x8, x10, [x19]
   1ae18:	cmp	x8, x10
   1ae1c:	b.eq	1ae2c <__cxa_demangle@@Base+0x8634>  // b.none
   1ae20:	ldrb	w9, [x8]
   1ae24:	cmp	w9, #0x45
   1ae28:	b.eq	1b728 <__cxa_demangle@@Base+0x8f30>  // b.none
   1ae2c:	mov	x0, x19
   1ae30:	bl	1e020 <__cxa_demangle@@Base+0xb828>
   1ae34:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1ae38:	ldp	x8, x9, [x19, #24]
   1ae3c:	mov	x20, x0
   1ae40:	cmp	x8, x9
   1ae44:	b.ne	1ae08 <__cxa_demangle@@Base+0x8610>  // b.any
   1ae48:	ldr	x23, [x19, #16]
   1ae4c:	sub	x21, x8, x23
   1ae50:	cmp	x25, x23
   1ae54:	lsl	x1, x21, #1
   1ae58:	b.ne	1ade0 <__cxa_demangle@@Base+0x85e8>  // b.any
   1ae5c:	mov	x0, x1
   1ae60:	bl	ec00 <malloc@plt>
   1ae64:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1ae68:	mov	x22, x0
   1ae6c:	cbz	x21, 1ae80 <__cxa_demangle@@Base+0x8688>
   1ae70:	mov	x0, x22
   1ae74:	mov	x1, x23
   1ae78:	mov	x2, x21
   1ae7c:	bl	eae0 <memmove@plt>
   1ae80:	str	x22, [x19, #16]
   1ae84:	b	1adf4 <__cxa_demangle@@Base+0x85fc>
   1ae88:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ae8c:	add	x1, x1, #0xed7
   1ae90:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1ae94:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ae98:	add	x8, x9, #0x2
   1ae9c:	add	x1, x1, #0xce3
   1aea0:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1aea4:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1aea8:	add	x8, x9, #0x2
   1aeac:	add	x1, x1, #0xcd8
   1aeb0:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1aeb4:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1aeb8:	add	x8, x9, #0x2
   1aebc:	add	x1, x1, #0xd19
   1aec0:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1aec4:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1aec8:	add	x8, x9, #0x2
   1aecc:	add	x1, x1, #0xd96
   1aed0:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1aed4:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1aed8:	add	x8, x9, #0x2
   1aedc:	add	x1, x1, #0xd25
   1aee0:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1aee4:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1aee8:	add	x1, x1, #0xd1a
   1aeec:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1aef0:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1aef4:	add	x1, x1, #0xda1
   1aef8:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1aefc:	add	x8, x9, #0x2
   1af00:	mov	x0, x19
   1af04:	str	x8, [x19]
   1af08:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1af0c:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1af10:	ldp	x9, x8, [x19, #16]
   1af14:	mov	x20, x0
   1af18:	add	x26, x19, #0x28
   1af1c:	sub	x8, x8, x9
   1af20:	asr	x25, x8, #3
   1af24:	b	1af5c <__cxa_demangle@@Base+0x8764>
   1af28:	mov	x0, x24
   1af2c:	bl	ecc0 <realloc@plt>
   1af30:	mov	x23, x0
   1af34:	str	x0, [x19, #16]
   1af38:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1af3c:	asr	x8, x22, #3
   1af40:	asr	x9, x22, #2
   1af44:	add	x8, x23, x8, lsl #3
   1af48:	add	x9, x23, x9, lsl #3
   1af4c:	stp	x8, x9, [x19, #24]
   1af50:	add	x9, x8, #0x8
   1af54:	str	x9, [x19, #24]
   1af58:	str	x21, [x8]
   1af5c:	ldp	x8, x9, [x19]
   1af60:	cmp	x8, x9
   1af64:	b.eq	1af74 <__cxa_demangle@@Base+0x877c>  // b.none
   1af68:	ldrb	w9, [x8]
   1af6c:	cmp	w9, #0x45
   1af70:	b.eq	1c178 <__cxa_demangle@@Base+0x9980>  // b.none
   1af74:	mov	x0, x19
   1af78:	bl	1e020 <__cxa_demangle@@Base+0xb828>
   1af7c:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1af80:	ldp	x8, x9, [x19, #24]
   1af84:	mov	x21, x0
   1af88:	cmp	x8, x9
   1af8c:	b.ne	1af50 <__cxa_demangle@@Base+0x8758>  // b.any
   1af90:	ldr	x24, [x19, #16]
   1af94:	sub	x22, x8, x24
   1af98:	cmp	x26, x24
   1af9c:	lsl	x1, x22, #1
   1afa0:	b.ne	1af28 <__cxa_demangle@@Base+0x8730>  // b.any
   1afa4:	mov	x0, x1
   1afa8:	bl	ec00 <malloc@plt>
   1afac:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1afb0:	mov	x23, x0
   1afb4:	cbz	x22, 1afc8 <__cxa_demangle@@Base+0x87d0>
   1afb8:	mov	x0, x23
   1afbc:	mov	x1, x24
   1afc0:	mov	x2, x22
   1afc4:	bl	eae0 <memmove@plt>
   1afc8:	str	x23, [x19, #16]
   1afcc:	b	1af3c <__cxa_demangle@@Base+0x8744>
   1afd0:	add	x8, x9, #0x2
   1afd4:	mov	x0, x19
   1afd8:	str	x8, [x19]
   1afdc:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1afe0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1afe4:	ldr	x21, [x19, #4912]
   1afe8:	mov	x20, x0
   1afec:	ldr	x8, [x21, #8]
   1aff0:	add	x9, x8, #0x40
   1aff4:	cmp	x9, #0xff0
   1aff8:	b.cc	1b018 <__cxa_demangle@@Base+0x8820>  // b.lo, b.ul, b.last
   1affc:	mov	w0, #0x1000                	// #4096
   1b000:	bl	ec00 <malloc@plt>
   1b004:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b008:	mov	x8, xzr
   1b00c:	stp	x21, xzr, [x0]
   1b010:	mov	x21, x0
   1b014:	str	x0, [x19, #4912]
   1b018:	add	x9, x8, #0x40
   1b01c:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b020:	str	x9, [x21, #8]
   1b024:	mov	w9, #0x134                 	// #308
   1b028:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b02c:	add	x8, x21, x8
   1b030:	add	x10, x10, #0xe70
   1b034:	movk	w9, #0x101, lsl #16
   1b038:	add	x11, x11, #0x500
   1b03c:	b	1b90c <__cxa_demangle@@Base+0x9114>
   1b040:	ldr	x20, [x19, #4912]
   1b044:	add	x8, x9, #0x2
   1b048:	str	x8, [x19]
   1b04c:	ldr	x8, [x20, #8]
   1b050:	add	x9, x8, #0x20
   1b054:	cmp	x9, #0xff0
   1b058:	b.cc	1b078 <__cxa_demangle@@Base+0x8880>  // b.lo, b.ul, b.last
   1b05c:	mov	w0, #0x1000                	// #4096
   1b060:	bl	ec00 <malloc@plt>
   1b064:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b068:	mov	x8, xzr
   1b06c:	stp	x20, xzr, [x0]
   1b070:	mov	x20, x0
   1b074:	str	x0, [x19, #4912]
   1b078:	adrp	x10, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1b07c:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b080:	add	x9, x8, #0x20
   1b084:	add	x8, x20, x8
   1b088:	add	x10, x10, #0xd60
   1b08c:	mov	w11, #0x107                 	// #263
   1b090:	add	x12, x12, #0x509
   1b094:	movk	w11, #0x101, lsl #16
   1b098:	str	x9, [x20, #8]
   1b09c:	str	x10, [x8, #16]!
   1b0a0:	add	x9, x12, #0x5
   1b0a4:	str	w11, [x8, #8]
   1b0a8:	stp	x12, x9, [x8, #16]
   1b0ac:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1b0b0:	add	x8, x9, #0x2
   1b0b4:	mov	x0, x19
   1b0b8:	str	x8, [x19]
   1b0bc:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b0c0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b0c4:	ldr	x21, [x19, #4912]
   1b0c8:	mov	x20, x0
   1b0cc:	ldr	x8, [x21, #8]
   1b0d0:	add	x9, x8, #0x20
   1b0d4:	cmp	x9, #0xff0
   1b0d8:	b.cc	1b0f8 <__cxa_demangle@@Base+0x8900>  // b.lo, b.ul, b.last
   1b0dc:	mov	w0, #0x1000                	// #4096
   1b0e0:	bl	ec00 <malloc@plt>
   1b0e4:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b0e8:	mov	x8, xzr
   1b0ec:	stp	x21, xzr, [x0]
   1b0f0:	mov	x21, x0
   1b0f4:	str	x0, [x19, #4912]
   1b0f8:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   1b0fc:	mov	w11, #0x13f                 	// #319
   1b100:	add	x9, x8, #0x20
   1b104:	add	x8, x21, x8
   1b108:	add	x10, x10, #0x30
   1b10c:	b	1bb0c <__cxa_demangle@@Base+0x9314>
   1b110:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b114:	add	x1, x1, #0xc79
   1b118:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1b11c:	add	x8, x9, #0x2
   1b120:	mov	x0, x19
   1b124:	str	x8, [x19]
   1b128:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b12c:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b130:	ldp	x9, x8, [x19, #16]
   1b134:	mov	x20, x0
   1b138:	add	x26, x19, #0x28
   1b13c:	sub	x8, x8, x9
   1b140:	asr	x25, x8, #3
   1b144:	b	1b17c <__cxa_demangle@@Base+0x8984>
   1b148:	mov	x0, x24
   1b14c:	bl	ecc0 <realloc@plt>
   1b150:	mov	x23, x0
   1b154:	str	x0, [x19, #16]
   1b158:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b15c:	asr	x8, x22, #3
   1b160:	asr	x9, x22, #2
   1b164:	add	x8, x23, x8, lsl #3
   1b168:	add	x9, x23, x9, lsl #3
   1b16c:	stp	x8, x9, [x19, #24]
   1b170:	add	x9, x8, #0x8
   1b174:	str	x9, [x19, #24]
   1b178:	str	x21, [x8]
   1b17c:	ldp	x8, x9, [x19]
   1b180:	cmp	x8, x9
   1b184:	b.eq	1b194 <__cxa_demangle@@Base+0x899c>  // b.none
   1b188:	ldrb	w9, [x8]
   1b18c:	cmp	w9, #0x45
   1b190:	b.eq	1c204 <__cxa_demangle@@Base+0x9a0c>  // b.none
   1b194:	mov	x0, x19
   1b198:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b19c:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b1a0:	ldp	x8, x9, [x19, #24]
   1b1a4:	mov	x21, x0
   1b1a8:	cmp	x8, x9
   1b1ac:	b.ne	1b170 <__cxa_demangle@@Base+0x8978>  // b.any
   1b1b0:	ldr	x24, [x19, #16]
   1b1b4:	sub	x22, x8, x24
   1b1b8:	cmp	x26, x24
   1b1bc:	lsl	x1, x22, #1
   1b1c0:	b.ne	1b148 <__cxa_demangle@@Base+0x8950>  // b.any
   1b1c4:	mov	x0, x1
   1b1c8:	bl	ec00 <malloc@plt>
   1b1cc:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b1d0:	mov	x23, x0
   1b1d4:	cbz	x22, 1b1e8 <__cxa_demangle@@Base+0x89f0>
   1b1d8:	mov	x0, x23
   1b1dc:	mov	x1, x24
   1b1e0:	mov	x2, x22
   1b1e4:	bl	eae0 <memmove@plt>
   1b1e8:	str	x23, [x19, #16]
   1b1ec:	b	1b15c <__cxa_demangle@@Base+0x8964>
   1b1f0:	add	x8, x9, #0x2
   1b1f4:	mov	x0, x19
   1b1f8:	str	x8, [x19]
   1b1fc:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b200:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b204:	ldr	x21, [x19, #4912]
   1b208:	mov	x20, x0
   1b20c:	ldr	x8, [x21, #8]
   1b210:	add	x9, x8, #0x30
   1b214:	cmp	x9, #0xff0
   1b218:	b.cc	1b238 <__cxa_demangle@@Base+0x8a40>  // b.lo, b.ul, b.last
   1b21c:	mov	w0, #0x1000                	// #4096
   1b220:	bl	ec00 <malloc@plt>
   1b224:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b228:	mov	x8, xzr
   1b22c:	stp	x21, xzr, [x0]
   1b230:	mov	x21, x0
   1b234:	str	x0, [x19, #4912]
   1b238:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b23c:	mov	w11, #0x13a                 	// #314
   1b240:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b244:	add	x9, x8, #0x30
   1b248:	add	x8, x21, x8
   1b24c:	add	x10, x10, #0x700
   1b250:	movk	w11, #0x101, lsl #16
   1b254:	add	x12, x12, #0xc83
   1b258:	b	1be9c <__cxa_demangle@@Base+0x96a4>
   1b25c:	sub	x8, x10, x9
   1b260:	cmp	x8, #0x2
   1b264:	b.cc	1a50c <__cxa_demangle@@Base+0x7d14>  // b.lo, b.ul, b.last
   1b268:	ldrb	w21, [x19, #776]
   1b26c:	add	x8, x9, #0x2
   1b270:	str	x8, [x19]
   1b274:	strb	wzr, [x19, #776]
   1b278:	mov	x0, x19
   1b27c:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1b280:	mov	x20, x0
   1b284:	strb	w21, [x19, #776]
   1b288:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b28c:	ldp	x9, x8, [x19]
   1b290:	cmp	x9, x8
   1b294:	b.eq	1c340 <__cxa_demangle@@Base+0x9b48>  // b.none
   1b298:	ldrb	w10, [x9]
   1b29c:	cmp	w10, #0x5f
   1b2a0:	b.ne	1c340 <__cxa_demangle@@Base+0x9b48>  // b.any
   1b2a4:	ldp	x11, x10, [x19, #16]
   1b2a8:	add	x9, x9, #0x1
   1b2ac:	add	x26, x19, #0x28
   1b2b0:	str	x9, [x19]
   1b2b4:	sub	x10, x10, x11
   1b2b8:	asr	x25, x10, #3
   1b2bc:	b	1bff4 <__cxa_demangle@@Base+0x97fc>
   1b2c0:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b2c4:	add	x1, x1, #0xd5b
   1b2c8:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1b2cc:	add	x8, x9, #0x2
   1b2d0:	mov	x0, x19
   1b2d4:	str	x8, [x19]
   1b2d8:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1b2dc:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b2e0:	mov	x20, x0
   1b2e4:	mov	x0, x19
   1b2e8:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b2ec:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b2f0:	ldr	x22, [x19, #4912]
   1b2f4:	mov	x21, x0
   1b2f8:	ldr	x8, [x22, #8]
   1b2fc:	add	x9, x8, #0x30
   1b300:	cmp	x9, #0xff0
   1b304:	b.cc	1b324 <__cxa_demangle@@Base+0x8b2c>  // b.lo, b.ul, b.last
   1b308:	mov	w0, #0x1000                	// #4096
   1b30c:	bl	ec00 <malloc@plt>
   1b310:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b314:	mov	x8, xzr
   1b318:	stp	x22, xzr, [x0]
   1b31c:	mov	x22, x0
   1b320:	str	x0, [x19, #4912]
   1b324:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b328:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b32c:	add	x9, x8, #0x30
   1b330:	add	x8, x22, x8
   1b334:	add	x10, x10, #0x770
   1b338:	mov	w11, #0x135                 	// #309
   1b33c:	add	x12, x12, #0x4ce
   1b340:	movk	w11, #0x101, lsl #16
   1b344:	str	x9, [x22, #8]
   1b348:	str	x10, [x8, #16]!
   1b34c:	add	x9, x12, #0x10
   1b350:	b	1be24 <__cxa_demangle@@Base+0x962c>
   1b354:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b358:	add	x8, x9, #0x2
   1b35c:	add	x1, x1, #0xd4f
   1b360:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1b364:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b368:	add	x1, x1, #0xe17
   1b36c:	b	1b594 <__cxa_demangle@@Base+0x8d9c>
   1b370:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b374:	add	x1, x1, #0x4c1
   1b378:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1b37c:	add	x8, x9, #0x2
   1b380:	cmp	x8, x10
   1b384:	str	x8, [x19]
   1b388:	b.eq	1bb24 <__cxa_demangle@@Base+0x932c>  // b.none
   1b38c:	ldrb	w8, [x8]
   1b390:	cmp	w8, #0x5f
   1b394:	b.ne	1bb24 <__cxa_demangle@@Base+0x932c>  // b.any
   1b398:	add	x8, x9, #0x3
   1b39c:	mov	x0, x19
   1b3a0:	str	x8, [x19]
   1b3a4:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b3a8:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b3ac:	ldr	x21, [x19, #4912]
   1b3b0:	mov	x20, x0
   1b3b4:	ldr	x8, [x21, #8]
   1b3b8:	add	x9, x8, #0x30
   1b3bc:	cmp	x9, #0xff0
   1b3c0:	b.cc	1b3e0 <__cxa_demangle@@Base+0x8be8>  // b.lo, b.ul, b.last
   1b3c4:	mov	w0, #0x1000                	// #4096
   1b3c8:	bl	ec00 <malloc@plt>
   1b3cc:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b3d0:	mov	x8, xzr
   1b3d4:	stp	x21, xzr, [x0]
   1b3d8:	mov	x21, x0
   1b3dc:	str	x0, [x19, #4912]
   1b3e0:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b3e4:	mov	w11, #0x13a                 	// #314
   1b3e8:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b3ec:	add	x9, x8, #0x30
   1b3f0:	add	x8, x21, x8
   1b3f4:	add	x10, x10, #0x700
   1b3f8:	movk	w11, #0x101, lsl #16
   1b3fc:	add	x12, x12, #0xd5a
   1b400:	b	1b6ac <__cxa_demangle@@Base+0x8eb4>
   1b404:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b408:	add	x1, x1, #0xdf7
   1b40c:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1b410:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b414:	add	x8, x9, #0x2
   1b418:	add	x1, x1, #0xe0c
   1b41c:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1b420:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b424:	add	x8, x9, #0x2
   1b428:	add	x1, x1, #0xd74
   1b42c:	b	1b898 <__cxa_demangle@@Base+0x90a0>
   1b430:	add	x8, x9, #0x2
   1b434:	mov	x0, x19
   1b438:	str	x8, [x19]
   1b43c:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b440:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b444:	ldr	x21, [x19, #4912]
   1b448:	mov	x20, x0
   1b44c:	ldr	x8, [x21, #8]
   1b450:	add	x9, x8, #0x40
   1b454:	cmp	x9, #0xff0
   1b458:	b.cc	1b478 <__cxa_demangle@@Base+0x8c80>  // b.lo, b.ul, b.last
   1b45c:	mov	w0, #0x1000                	// #4096
   1b460:	bl	ec00 <malloc@plt>
   1b464:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b468:	mov	x8, xzr
   1b46c:	stp	x21, xzr, [x0]
   1b470:	mov	x21, x0
   1b474:	str	x0, [x19, #4912]
   1b478:	add	x9, x8, #0x40
   1b47c:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b480:	add	x8, x21, x8
   1b484:	add	x10, x10, #0xe70
   1b488:	str	x9, [x21, #8]
   1b48c:	mov	w9, #0x134                 	// #308
   1b490:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b494:	movk	w9, #0x101, lsl #16
   1b498:	add	x11, x11, #0x4c3
   1b49c:	str	x10, [x8, #16]!
   1b4a0:	adrp	x10, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1b4a4:	add	x10, x10, #0xfa
   1b4a8:	str	w9, [x8, #8]
   1b4ac:	add	x9, x11, #0xa
   1b4b0:	b	1b920 <__cxa_demangle@@Base+0x9128>
   1b4b4:	add	x8, x9, #0x2
   1b4b8:	mov	x0, x19
   1b4bc:	str	x8, [x19]
   1b4c0:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b4c4:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b4c8:	ldr	x21, [x19, #4912]
   1b4cc:	mov	x20, x0
   1b4d0:	ldr	x8, [x21, #8]
   1b4d4:	add	x9, x8, #0x30
   1b4d8:	cmp	x9, #0xff0
   1b4dc:	b.cc	1b4fc <__cxa_demangle@@Base+0x8d04>  // b.lo, b.ul, b.last
   1b4e0:	mov	w0, #0x1000                	// #4096
   1b4e4:	bl	ec00 <malloc@plt>
   1b4e8:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b4ec:	mov	x8, xzr
   1b4f0:	stp	x21, xzr, [x0]
   1b4f4:	mov	x21, x0
   1b4f8:	str	x0, [x19, #4912]
   1b4fc:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b500:	mov	w11, #0x13a                 	// #314
   1b504:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b508:	add	x9, x8, #0x30
   1b50c:	add	x8, x21, x8
   1b510:	add	x10, x10, #0x700
   1b514:	movk	w11, #0x101, lsl #16
   1b518:	add	x12, x12, #0xd5b
   1b51c:	b	1be9c <__cxa_demangle@@Base+0x96a4>
   1b520:	add	x8, x9, #0x2
   1b524:	mov	x0, x19
   1b528:	str	x8, [x19]
   1b52c:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b530:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b534:	ldr	x21, [x19, #4912]
   1b538:	mov	x20, x0
   1b53c:	ldr	x8, [x21, #8]
   1b540:	add	x9, x8, #0x30
   1b544:	cmp	x9, #0xff0
   1b548:	b.cc	1b568 <__cxa_demangle@@Base+0x8d70>  // b.lo, b.ul, b.last
   1b54c:	mov	w0, #0x1000                	// #4096
   1b550:	bl	ec00 <malloc@plt>
   1b554:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b558:	mov	x8, xzr
   1b55c:	stp	x21, xzr, [x0]
   1b560:	mov	x21, x0
   1b564:	str	x0, [x19, #4912]
   1b568:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b56c:	mov	w11, #0x13a                 	// #314
   1b570:	adrp	x12, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1b574:	add	x9, x8, #0x30
   1b578:	add	x8, x21, x8
   1b57c:	add	x10, x10, #0x700
   1b580:	movk	w11, #0x101, lsl #16
   1b584:	add	x12, x12, #0x722
   1b588:	b	1be9c <__cxa_demangle@@Base+0x96a4>
   1b58c:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b590:	add	x1, x1, #0xdb6
   1b594:	add	x8, x9, #0x2
   1b598:	add	x2, x1, #0x3
   1b59c:	b	1bec8 <__cxa_demangle@@Base+0x96d0>
   1b5a0:	add	x8, x9, #0x2
   1b5a4:	mov	x0, x19
   1b5a8:	str	x8, [x19]
   1b5ac:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b5b0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b5b4:	mov	x20, x0
   1b5b8:	mov	x0, x19
   1b5bc:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b5c0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b5c4:	ldr	x22, [x19, #4912]
   1b5c8:	mov	x21, x0
   1b5cc:	ldr	x8, [x22, #8]
   1b5d0:	add	x9, x8, #0x30
   1b5d4:	cmp	x9, #0xff0
   1b5d8:	b.cc	1b5f8 <__cxa_demangle@@Base+0x8e00>  // b.lo, b.ul, b.last
   1b5dc:	mov	w0, #0x1000                	// #4096
   1b5e0:	bl	ec00 <malloc@plt>
   1b5e4:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b5e8:	mov	x8, xzr
   1b5ec:	stp	x22, xzr, [x0]
   1b5f0:	mov	x22, x0
   1b5f4:	str	x0, [x19, #4912]
   1b5f8:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b5fc:	mov	w11, #0x133                 	// #307
   1b600:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b604:	add	x9, x8, #0x30
   1b608:	add	x8, x22, x8
   1b60c:	add	x10, x10, #0xb60
   1b610:	movk	w11, #0x101, lsl #16
   1b614:	add	x12, x12, #0xde2
   1b618:	b	1bcfc <__cxa_demangle@@Base+0x9504>
   1b61c:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b620:	add	x1, x1, #0xdd8
   1b624:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1b628:	add	x8, x9, #0x2
   1b62c:	cmp	x8, x10
   1b630:	str	x8, [x19]
   1b634:	b.eq	1beec <__cxa_demangle@@Base+0x96f4>  // b.none
   1b638:	ldrb	w8, [x8]
   1b63c:	cmp	w8, #0x5f
   1b640:	b.ne	1beec <__cxa_demangle@@Base+0x96f4>  // b.any
   1b644:	add	x8, x9, #0x3
   1b648:	mov	x0, x19
   1b64c:	str	x8, [x19]
   1b650:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b654:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b658:	ldr	x21, [x19, #4912]
   1b65c:	mov	x20, x0
   1b660:	ldr	x8, [x21, #8]
   1b664:	add	x9, x8, #0x30
   1b668:	cmp	x9, #0xff0
   1b66c:	b.cc	1b68c <__cxa_demangle@@Base+0x8e94>  // b.lo, b.ul, b.last
   1b670:	mov	w0, #0x1000                	// #4096
   1b674:	bl	ec00 <malloc@plt>
   1b678:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b67c:	mov	x8, xzr
   1b680:	stp	x21, xzr, [x0]
   1b684:	mov	x21, x0
   1b688:	str	x0, [x19, #4912]
   1b68c:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b690:	mov	w11, #0x13a                 	// #314
   1b694:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b698:	add	x9, x8, #0x30
   1b69c:	add	x8, x21, x8
   1b6a0:	add	x10, x10, #0x700
   1b6a4:	movk	w11, #0x101, lsl #16
   1b6a8:	add	x12, x12, #0xdd7
   1b6ac:	str	x9, [x21, #8]
   1b6b0:	str	x10, [x8, #16]!
   1b6b4:	add	x9, x12, #0x2
   1b6b8:	b	1bea8 <__cxa_demangle@@Base+0x96b0>
   1b6bc:	add	x8, x9, #0x2
   1b6c0:	mov	x0, x19
   1b6c4:	str	x8, [x19]
   1b6c8:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b6cc:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b6d0:	ldr	x21, [x19, #4912]
   1b6d4:	mov	x20, x0
   1b6d8:	ldr	x8, [x21, #8]
   1b6dc:	add	x9, x8, #0x30
   1b6e0:	cmp	x9, #0xff0
   1b6e4:	b.cc	1b704 <__cxa_demangle@@Base+0x8f0c>  // b.lo, b.ul, b.last
   1b6e8:	mov	w0, #0x1000                	// #4096
   1b6ec:	bl	ec00 <malloc@plt>
   1b6f0:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b6f4:	mov	x8, xzr
   1b6f8:	stp	x21, xzr, [x0]
   1b6fc:	mov	x21, x0
   1b700:	str	x0, [x19, #4912]
   1b704:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b708:	mov	w11, #0x13a                 	// #314
   1b70c:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b710:	add	x9, x8, #0x30
   1b714:	add	x8, x21, x8
   1b718:	add	x10, x10, #0x700
   1b71c:	movk	w11, #0x101, lsl #16
   1b720:	add	x12, x12, #0xdd8
   1b724:	b	1be9c <__cxa_demangle@@Base+0x96a4>
   1b728:	ldp	x9, x2, [x19, #16]
   1b72c:	add	x8, x8, #0x1
   1b730:	str	x8, [x19]
   1b734:	sub	x10, x2, x9
   1b738:	cmp	x24, x10, asr #3
   1b73c:	b.hi	1c6f4 <__cxa_demangle@@Base+0x9efc>  // b.pmore
   1b740:	add	x1, x9, x24, lsl #3
   1b744:	mov	x0, x19
   1b748:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1b74c:	ldp	x8, x9, [x19, #16]
   1b750:	sub	x9, x9, x8
   1b754:	cmp	x24, x9, asr #3
   1b758:	b.hi	1c714 <__cxa_demangle@@Base+0x9f1c>  // b.pmore
   1b75c:	ldr	x22, [x19, #4912]
   1b760:	add	x8, x8, x24, lsl #3
   1b764:	str	x8, [x19, #24]
   1b768:	mov	x20, x0
   1b76c:	ldr	x8, [x22, #8]
   1b770:	mov	x21, x1
   1b774:	add	x9, x8, #0x30
   1b778:	cmp	x9, #0xff0
   1b77c:	b.cc	1b79c <__cxa_demangle@@Base+0x8fa4>  // b.lo, b.ul, b.last
   1b780:	mov	w0, #0x1000                	// #4096
   1b784:	bl	ec00 <malloc@plt>
   1b788:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b78c:	mov	x8, xzr
   1b790:	stp	x22, xzr, [x0]
   1b794:	mov	x22, x0
   1b798:	str	x0, [x19, #4912]
   1b79c:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b7a0:	add	x9, x8, #0x30
   1b7a4:	add	x8, x22, x8
   1b7a8:	add	x10, x10, #0xd20
   1b7ac:	mov	w11, #0x13d                 	// #317
   1b7b0:	movk	w11, #0x101, lsl #16
   1b7b4:	str	x9, [x22, #8]
   1b7b8:	str	x10, [x8, #16]!
   1b7bc:	str	w11, [x8, #8]
   1b7c0:	stp	xzr, x20, [x8, #16]
   1b7c4:	str	x21, [x8, #32]
   1b7c8:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1b7cc:	add	x8, x9, #0x2
   1b7d0:	mov	x0, x19
   1b7d4:	str	x8, [x19]
   1b7d8:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1b7dc:	cbnz	x0, 1b81c <__cxa_demangle@@Base+0x9024>
   1b7e0:	b	1a50c <__cxa_demangle@@Base+0x7d14>
   1b7e4:	add	x8, x9, #0x2
   1b7e8:	mov	x0, x19
   1b7ec:	str	x8, [x19]
   1b7f0:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1b7f4:	cbnz	x0, 1b8b4 <__cxa_demangle@@Base+0x90bc>
   1b7f8:	b	1a50c <__cxa_demangle@@Base+0x7d14>
   1b7fc:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b800:	add	x1, x1, #0xd75
   1b804:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1b808:	add	x8, x9, #0x2
   1b80c:	mov	x0, x19
   1b810:	str	x8, [x19]
   1b814:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b818:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b81c:	ldr	x21, [x19, #4912]
   1b820:	mov	x20, x0
   1b824:	ldr	x8, [x21, #8]
   1b828:	add	x9, x8, #0x40
   1b82c:	cmp	x9, #0xff0
   1b830:	b.cc	1b850 <__cxa_demangle@@Base+0x9058>  // b.lo, b.ul, b.last
   1b834:	mov	w0, #0x1000                	// #4096
   1b838:	bl	ec00 <malloc@plt>
   1b83c:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b840:	mov	x8, xzr
   1b844:	stp	x21, xzr, [x0]
   1b848:	mov	x21, x0
   1b84c:	str	x0, [x19, #4912]
   1b850:	add	x9, x8, #0x40
   1b854:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b858:	add	x8, x21, x8
   1b85c:	add	x10, x10, #0xe70
   1b860:	str	x9, [x21, #8]
   1b864:	mov	w9, #0x134                 	// #308
   1b868:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b86c:	movk	w9, #0x101, lsl #16
   1b870:	add	x11, x11, #0x49e
   1b874:	str	x10, [x8, #16]!
   1b878:	adrp	x10, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1b87c:	add	x10, x10, #0xfa
   1b880:	str	w9, [x8, #8]
   1b884:	add	x9, x11, #0x9
   1b888:	b	1b920 <__cxa_demangle@@Base+0x9128>
   1b88c:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1b890:	add	x8, x9, #0x2
   1b894:	add	x1, x1, #0x394
   1b898:	add	x2, x1, #0x2
   1b89c:	b	1bec8 <__cxa_demangle@@Base+0x96d0>
   1b8a0:	add	x8, x9, #0x2
   1b8a4:	mov	x0, x19
   1b8a8:	str	x8, [x19]
   1b8ac:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b8b0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b8b4:	ldr	x21, [x19, #4912]
   1b8b8:	mov	x20, x0
   1b8bc:	ldr	x8, [x21, #8]
   1b8c0:	add	x9, x8, #0x40
   1b8c4:	cmp	x9, #0xff0
   1b8c8:	b.cc	1b8e8 <__cxa_demangle@@Base+0x90f0>  // b.lo, b.ul, b.last
   1b8cc:	mov	w0, #0x1000                	// #4096
   1b8d0:	bl	ec00 <malloc@plt>
   1b8d4:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b8d8:	mov	x8, xzr
   1b8dc:	stp	x21, xzr, [x0]
   1b8e0:	mov	x21, x0
   1b8e4:	str	x0, [x19, #4912]
   1b8e8:	add	x9, x8, #0x40
   1b8ec:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b8f0:	str	x9, [x21, #8]
   1b8f4:	mov	w9, #0x134                 	// #308
   1b8f8:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1b8fc:	add	x8, x21, x8
   1b900:	add	x10, x10, #0xe70
   1b904:	movk	w9, #0x101, lsl #16
   1b908:	add	x11, x11, #0x4eb
   1b90c:	str	x10, [x8, #16]!
   1b910:	adrp	x10, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1b914:	add	x10, x10, #0xfa
   1b918:	str	w9, [x8, #8]
   1b91c:	add	x9, x11, #0x8
   1b920:	stp	x11, x9, [x8, #16]
   1b924:	add	x9, x10, #0x1
   1b928:	str	x20, [x8, #32]
   1b92c:	stp	x10, x9, [x8, #40]
   1b930:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1b934:	add	x8, x9, #0x2
   1b938:	mov	x0, x19
   1b93c:	str	x8, [x19]
   1b940:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1b944:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b948:	ldr	x21, [x19, #4912]
   1b94c:	mov	x20, x0
   1b950:	ldr	x8, [x21, #8]
   1b954:	add	x9, x8, #0x30
   1b958:	cmp	x9, #0xff0
   1b95c:	b.cc	1b97c <__cxa_demangle@@Base+0x9184>  // b.lo, b.ul, b.last
   1b960:	mov	w0, #0x1000                	// #4096
   1b964:	bl	ec00 <malloc@plt>
   1b968:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b96c:	mov	x8, xzr
   1b970:	stp	x21, xzr, [x0]
   1b974:	mov	x21, x0
   1b978:	str	x0, [x19, #4912]
   1b97c:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1b980:	mov	w11, #0x13a                 	// #314
   1b984:	adrp	x12, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1b988:	add	x9, x8, #0x30
   1b98c:	add	x8, x21, x8
   1b990:	add	x10, x10, #0x700
   1b994:	movk	w11, #0x101, lsl #16
   1b998:	add	x12, x12, #0x395
   1b99c:	b	1be9c <__cxa_demangle@@Base+0x96a4>
   1b9a0:	add	x8, x9, #0x2
   1b9a4:	cmp	x10, x8
   1b9a8:	str	x8, [x19]
   1b9ac:	b.eq	1a50c <__cxa_demangle@@Base+0x7d14>  // b.none
   1b9b0:	ldrb	w8, [x8]
   1b9b4:	cmp	w8, #0x66
   1b9b8:	b.eq	1c3f4 <__cxa_demangle@@Base+0x9bfc>  // b.none
   1b9bc:	cmp	w8, #0x54
   1b9c0:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1b9c4:	mov	x0, x19
   1b9c8:	bl	1958c <__cxa_demangle@@Base+0x6d94>
   1b9cc:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1b9d0:	ldr	x21, [x19, #4912]
   1b9d4:	mov	x20, x0
   1b9d8:	ldr	x8, [x21, #8]
   1b9dc:	add	x9, x8, #0x20
   1b9e0:	cmp	x9, #0xff0
   1b9e4:	b.cc	1ba04 <__cxa_demangle@@Base+0x920c>  // b.lo, b.ul, b.last
   1b9e8:	mov	w0, #0x1000                	// #4096
   1b9ec:	bl	ec00 <malloc@plt>
   1b9f0:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1b9f4:	mov	x8, xzr
   1b9f8:	stp	x21, xzr, [x0]
   1b9fc:	mov	x21, x0
   1ba00:	str	x0, [x19, #4912]
   1ba04:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1ba08:	mov	w11, #0x136                 	// #310
   1ba0c:	add	x9, x8, #0x20
   1ba10:	add	x8, x21, x8
   1ba14:	add	x10, x10, #0xf50
   1ba18:	b	1bb0c <__cxa_demangle@@Base+0x9314>
   1ba1c:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1ba20:	add	x1, x1, #0x395
   1ba24:	b	1bec0 <__cxa_demangle@@Base+0x96c8>
   1ba28:	add	x8, x9, #0x2
   1ba2c:	mov	x0, x19
   1ba30:	str	x8, [x19]
   1ba34:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1ba38:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1ba3c:	mov	x20, x0
   1ba40:	mov	x0, x19
   1ba44:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1ba48:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1ba4c:	ldr	x22, [x19, #4912]
   1ba50:	mov	x21, x0
   1ba54:	ldr	x8, [x22, #8]
   1ba58:	add	x9, x8, #0x30
   1ba5c:	cmp	x9, #0xff0
   1ba60:	b.cc	1ba80 <__cxa_demangle@@Base+0x9288>  // b.lo, b.ul, b.last
   1ba64:	mov	w0, #0x1000                	// #4096
   1ba68:	bl	ec00 <malloc@plt>
   1ba6c:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1ba70:	mov	x8, xzr
   1ba74:	stp	x22, xzr, [x0]
   1ba78:	mov	x22, x0
   1ba7c:	str	x0, [x19, #4912]
   1ba80:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1ba84:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ba88:	add	x9, x8, #0x30
   1ba8c:	add	x8, x22, x8
   1ba90:	add	x10, x10, #0x770
   1ba94:	mov	w11, #0x135                 	// #309
   1ba98:	add	x12, x12, #0x4df
   1ba9c:	movk	w11, #0x101, lsl #16
   1baa0:	str	x9, [x22, #8]
   1baa4:	str	x10, [x8, #16]!
   1baa8:	add	x9, x12, #0xb
   1baac:	b	1be24 <__cxa_demangle@@Base+0x962c>
   1bab0:	add	x8, x9, #0x2
   1bab4:	mov	x0, x19
   1bab8:	str	x8, [x19]
   1babc:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1bac0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bac4:	ldr	x21, [x19, #4912]
   1bac8:	mov	x20, x0
   1bacc:	ldr	x8, [x21, #8]
   1bad0:	add	x9, x8, #0x20
   1bad4:	cmp	x9, #0xff0
   1bad8:	b.cc	1baf8 <__cxa_demangle@@Base+0x9300>  // b.lo, b.ul, b.last
   1badc:	mov	w0, #0x1000                	// #4096
   1bae0:	bl	ec00 <malloc@plt>
   1bae4:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1bae8:	mov	x8, xzr
   1baec:	stp	x21, xzr, [x0]
   1baf0:	mov	x21, x0
   1baf4:	str	x0, [x19, #4912]
   1baf8:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1bafc:	mov	w11, #0x122                 	// #290
   1bb00:	add	x9, x8, #0x20
   1bb04:	add	x8, x21, x8
   1bb08:	add	x10, x10, #0x620
   1bb0c:	movk	w11, #0x101, lsl #16
   1bb10:	str	x9, [x21, #8]
   1bb14:	str	x10, [x8, #16]!
   1bb18:	str	w11, [x8, #8]
   1bb1c:	str	x20, [x8, #16]
   1bb20:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1bb24:	mov	x0, x19
   1bb28:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1bb2c:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bb30:	ldr	x21, [x19, #4912]
   1bb34:	mov	x20, x0
   1bb38:	ldr	x8, [x21, #8]
   1bb3c:	add	x9, x8, #0x30
   1bb40:	cmp	x9, #0xff0
   1bb44:	b.cc	1bb64 <__cxa_demangle@@Base+0x936c>  // b.lo, b.ul, b.last
   1bb48:	mov	w0, #0x1000                	// #4096
   1bb4c:	bl	ec00 <malloc@plt>
   1bb50:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1bb54:	mov	x8, xzr
   1bb58:	stp	x21, xzr, [x0]
   1bb5c:	mov	x21, x0
   1bb60:	str	x0, [x19, #4912]
   1bb64:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1bb68:	mov	w11, #0x131                 	// #305
   1bb6c:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1bb70:	add	x9, x8, #0x30
   1bb74:	add	x8, x21, x8
   1bb78:	add	x10, x10, #0xd90
   1bb7c:	movk	w11, #0x101, lsl #16
   1bb80:	add	x12, x12, #0xd5a
   1bb84:	b	1bf4c <__cxa_demangle@@Base+0x9754>
   1bb88:	add	x8, x9, #0x2
   1bb8c:	mov	x0, x19
   1bb90:	str	x8, [x19]
   1bb94:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1bb98:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bb9c:	ldr	x22, [x19, #4912]
   1bba0:	mov	x20, x0
   1bba4:	ldr	x8, [x22, #8]
   1bba8:	add	x9, x8, #0x20
   1bbac:	cmp	x9, #0xff0
   1bbb0:	b.cc	1bbd0 <__cxa_demangle@@Base+0x93d8>  // b.lo, b.ul, b.last
   1bbb4:	mov	w0, #0x1000                	// #4096
   1bbb8:	bl	ec00 <malloc@plt>
   1bbbc:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1bbc0:	mov	x8, xzr
   1bbc4:	stp	x22, xzr, [x0]
   1bbc8:	mov	x22, x0
   1bbcc:	str	x0, [x19, #4912]
   1bbd0:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1bbd4:	add	x9, x8, #0x20
   1bbd8:	add	x8, x22, x8
   1bbdc:	add	x10, x10, #0x8c0
   1bbe0:	mov	w11, #0x139                 	// #313
   1bbe4:	movk	w11, #0x101, lsl #16
   1bbe8:	mov	w12, #0x1                   	// #1
   1bbec:	str	x9, [x22, #8]
   1bbf0:	str	x10, [x8, #16]!
   1bbf4:	str	w11, [x8, #8]
   1bbf8:	str	x20, [x8, #16]
   1bbfc:	strb	w21, [x8, #24]
   1bc00:	strb	w12, [x8, #25]
   1bc04:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1bc08:	add	x8, x9, #0x2
   1bc0c:	mov	x0, x19
   1bc10:	str	x8, [x19]
   1bc14:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1bc18:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bc1c:	ldr	x22, [x19, #4912]
   1bc20:	mov	x20, x0
   1bc24:	ldr	x8, [x22, #8]
   1bc28:	add	x9, x8, #0x20
   1bc2c:	cmp	x9, #0xff0
   1bc30:	b.cc	1bc50 <__cxa_demangle@@Base+0x9458>  // b.lo, b.ul, b.last
   1bc34:	mov	w0, #0x1000                	// #4096
   1bc38:	bl	ec00 <malloc@plt>
   1bc3c:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1bc40:	mov	x8, xzr
   1bc44:	stp	x22, xzr, [x0]
   1bc48:	mov	x22, x0
   1bc4c:	str	x0, [x19, #4912]
   1bc50:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1bc54:	add	x9, x8, #0x20
   1bc58:	add	x8, x22, x8
   1bc5c:	add	x10, x10, #0x8c0
   1bc60:	mov	w11, #0x139                 	// #313
   1bc64:	movk	w11, #0x101, lsl #16
   1bc68:	str	x9, [x22, #8]
   1bc6c:	str	x10, [x8, #16]!
   1bc70:	str	w11, [x8, #8]
   1bc74:	str	x20, [x8, #16]
   1bc78:	strb	w21, [x8, #24]
   1bc7c:	strb	wzr, [x8, #25]
   1bc80:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1bc84:	add	x8, x9, #0x2
   1bc88:	mov	x0, x19
   1bc8c:	str	x8, [x19]
   1bc90:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1bc94:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bc98:	mov	x20, x0
   1bc9c:	mov	x0, x19
   1bca0:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1bca4:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bca8:	ldr	x22, [x19, #4912]
   1bcac:	mov	x21, x0
   1bcb0:	ldr	x8, [x22, #8]
   1bcb4:	add	x9, x8, #0x30
   1bcb8:	cmp	x9, #0xff0
   1bcbc:	b.cc	1bcdc <__cxa_demangle@@Base+0x94e4>  // b.lo, b.ul, b.last
   1bcc0:	mov	w0, #0x1000                	// #4096
   1bcc4:	bl	ec00 <malloc@plt>
   1bcc8:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1bccc:	mov	x8, xzr
   1bcd0:	stp	x22, xzr, [x0]
   1bcd4:	mov	x22, x0
   1bcd8:	str	x0, [x19, #4912]
   1bcdc:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1bce0:	mov	w11, #0x133                 	// #307
   1bce4:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1bce8:	add	x9, x8, #0x30
   1bcec:	add	x8, x22, x8
   1bcf0:	add	x10, x10, #0xb60
   1bcf4:	movk	w11, #0x101, lsl #16
   1bcf8:	add	x12, x12, #0x4c0
   1bcfc:	str	x9, [x22, #8]
   1bd00:	str	x10, [x8, #16]!
   1bd04:	add	x9, x12, #0x2
   1bd08:	b	1bd90 <__cxa_demangle@@Base+0x9598>
   1bd0c:	add	x8, x9, #0x2
   1bd10:	mov	x0, x19
   1bd14:	str	x8, [x19]
   1bd18:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1bd1c:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bd20:	mov	x20, x0
   1bd24:	mov	x0, x19
   1bd28:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1bd2c:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bd30:	ldr	x22, [x19, #4912]
   1bd34:	mov	x21, x0
   1bd38:	ldr	x8, [x22, #8]
   1bd3c:	add	x9, x8, #0x30
   1bd40:	cmp	x9, #0xff0
   1bd44:	b.cc	1bd64 <__cxa_demangle@@Base+0x956c>  // b.lo, b.ul, b.last
   1bd48:	mov	w0, #0x1000                	// #4096
   1bd4c:	bl	ec00 <malloc@plt>
   1bd50:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1bd54:	mov	x8, xzr
   1bd58:	stp	x22, xzr, [x0]
   1bd5c:	mov	x22, x0
   1bd60:	str	x0, [x19, #4912]
   1bd64:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1bd68:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1bd6c:	add	x9, x8, #0x30
   1bd70:	add	x8, x22, x8
   1bd74:	add	x10, x10, #0xb60
   1bd78:	mov	w11, #0x133                 	// #307
   1bd7c:	add	x12, x12, #0x6ed
   1bd80:	movk	w11, #0x101, lsl #16
   1bd84:	str	x9, [x22, #8]
   1bd88:	str	x10, [x8, #16]!
   1bd8c:	add	x9, x12, #0x1
   1bd90:	str	w11, [x8, #8]
   1bd94:	stp	x20, x12, [x8, #16]
   1bd98:	stp	x9, x21, [x8, #32]
   1bd9c:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1bda0:	add	x8, x9, #0x2
   1bda4:	mov	x0, x19
   1bda8:	str	x8, [x19]
   1bdac:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1bdb0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bdb4:	mov	x20, x0
   1bdb8:	mov	x0, x19
   1bdbc:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1bdc0:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bdc4:	ldr	x22, [x19, #4912]
   1bdc8:	mov	x21, x0
   1bdcc:	ldr	x8, [x22, #8]
   1bdd0:	add	x9, x8, #0x30
   1bdd4:	cmp	x9, #0xff0
   1bdd8:	b.cc	1bdf8 <__cxa_demangle@@Base+0x9600>  // b.lo, b.ul, b.last
   1bddc:	mov	w0, #0x1000                	// #4096
   1bde0:	bl	ec00 <malloc@plt>
   1bde4:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1bde8:	mov	x8, xzr
   1bdec:	stp	x22, xzr, [x0]
   1bdf0:	mov	x22, x0
   1bdf4:	str	x0, [x19, #4912]
   1bdf8:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1bdfc:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1be00:	add	x9, x8, #0x30
   1be04:	add	x8, x22, x8
   1be08:	add	x10, x10, #0x770
   1be0c:	mov	w11, #0x135                 	// #309
   1be10:	add	x12, x12, #0x4b3
   1be14:	movk	w11, #0x101, lsl #16
   1be18:	str	x9, [x22, #8]
   1be1c:	str	x10, [x8, #16]!
   1be20:	add	x9, x12, #0xc
   1be24:	str	w11, [x8, #8]
   1be28:	stp	x12, x9, [x8, #16]
   1be2c:	stp	x20, x21, [x8, #32]
   1be30:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1be34:	add	x8, x9, #0x2
   1be38:	mov	x0, x19
   1be3c:	str	x8, [x19]
   1be40:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1be44:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1be48:	ldr	x21, [x19, #4912]
   1be4c:	mov	x20, x0
   1be50:	ldr	x8, [x21, #8]
   1be54:	add	x9, x8, #0x30
   1be58:	cmp	x9, #0xff0
   1be5c:	b.cc	1be7c <__cxa_demangle@@Base+0x9684>  // b.lo, b.ul, b.last
   1be60:	mov	w0, #0x1000                	// #4096
   1be64:	bl	ec00 <malloc@plt>
   1be68:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1be6c:	mov	x8, xzr
   1be70:	stp	x21, xzr, [x0]
   1be74:	mov	x21, x0
   1be78:	str	x0, [x19, #4912]
   1be7c:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1be80:	mov	w11, #0x13a                 	// #314
   1be84:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1be88:	add	x9, x8, #0x30
   1be8c:	add	x8, x21, x8
   1be90:	add	x10, x10, #0x700
   1be94:	movk	w11, #0x101, lsl #16
   1be98:	add	x12, x12, #0x4c1
   1be9c:	str	x9, [x21, #8]
   1bea0:	str	x10, [x8, #16]!
   1bea4:	add	x9, x12, #0x1
   1bea8:	str	w11, [x8, #8]
   1beac:	stp	x12, x9, [x8, #16]
   1beb0:	str	x20, [x8, #32]
   1beb4:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1beb8:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1bebc:	add	x1, x1, #0xcb9
   1bec0:	add	x8, x9, #0x2
   1bec4:	add	x2, x1, #0x1
   1bec8:	str	x8, [x19]
   1becc:	mov	x0, x19
   1bed0:	ldp	x20, x19, [sp, #96]
   1bed4:	ldp	x22, x21, [sp, #80]
   1bed8:	ldp	x24, x23, [sp, #64]
   1bedc:	ldp	x26, x25, [sp, #48]
   1bee0:	ldp	x29, x30, [sp, #32]
   1bee4:	add	sp, sp, #0x70
   1bee8:	b	1d918 <__cxa_demangle@@Base+0xb120>
   1beec:	mov	x0, x19
   1bef0:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1bef4:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1bef8:	ldr	x21, [x19, #4912]
   1befc:	mov	x20, x0
   1bf00:	ldr	x8, [x21, #8]
   1bf04:	add	x9, x8, #0x30
   1bf08:	cmp	x9, #0xff0
   1bf0c:	b.cc	1bf2c <__cxa_demangle@@Base+0x9734>  // b.lo, b.ul, b.last
   1bf10:	mov	w0, #0x1000                	// #4096
   1bf14:	bl	ec00 <malloc@plt>
   1bf18:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1bf1c:	mov	x8, xzr
   1bf20:	stp	x21, xzr, [x0]
   1bf24:	mov	x21, x0
   1bf28:	str	x0, [x19, #4912]
   1bf2c:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1bf30:	mov	w11, #0x131                 	// #305
   1bf34:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1bf38:	add	x9, x8, #0x30
   1bf3c:	add	x8, x21, x8
   1bf40:	add	x10, x10, #0xd90
   1bf44:	movk	w11, #0x101, lsl #16
   1bf48:	add	x12, x12, #0xdd7
   1bf4c:	str	x9, [x21, #8]
   1bf50:	str	x10, [x8, #16]!
   1bf54:	add	x9, x12, #0x2
   1bf58:	str	w11, [x8, #8]
   1bf5c:	stp	x20, x12, [x8, #16]
   1bf60:	str	x9, [x8, #32]
   1bf64:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1bf68:	mov	x20, xzr
   1bf6c:	bl	ed40 <__ctype_b_loc@plt>
   1bf70:	ldr	x8, [x0]
   1bf74:	ldrh	w8, [x8, x20, lsl #1]
   1bf78:	tbnz	w8, #11, 1bf9c <__cxa_demangle@@Base+0x97a4>
   1bf7c:	mov	x0, x19
   1bf80:	ldp	x20, x19, [sp, #96]
   1bf84:	ldp	x22, x21, [sp, #80]
   1bf88:	ldp	x24, x23, [sp, #64]
   1bf8c:	ldp	x26, x25, [sp, #48]
   1bf90:	ldp	x29, x30, [sp, #32]
   1bf94:	add	sp, sp, #0x70
   1bf98:	b	1d32c <__cxa_demangle@@Base+0xab34>
   1bf9c:	mov	x0, x19
   1bfa0:	ldp	x20, x19, [sp, #96]
   1bfa4:	ldp	x22, x21, [sp, #80]
   1bfa8:	ldp	x24, x23, [sp, #64]
   1bfac:	ldp	x26, x25, [sp, #48]
   1bfb0:	ldp	x29, x30, [sp, #32]
   1bfb4:	add	sp, sp, #0x70
   1bfb8:	b	1cfdc <__cxa_demangle@@Base+0xa7e4>
   1bfbc:	mov	x0, x24
   1bfc0:	bl	ecc0 <realloc@plt>
   1bfc4:	mov	x23, x0
   1bfc8:	str	x0, [x19, #16]
   1bfcc:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1bfd0:	asr	x8, x22, #3
   1bfd4:	asr	x9, x22, #2
   1bfd8:	add	x8, x23, x8, lsl #3
   1bfdc:	add	x9, x23, x9, lsl #3
   1bfe0:	stp	x8, x9, [x19, #24]
   1bfe4:	add	x9, x8, #0x8
   1bfe8:	str	x9, [x19, #24]
   1bfec:	str	x21, [x8]
   1bff0:	ldp	x9, x8, [x19]
   1bff4:	cmp	x9, x8
   1bff8:	b.eq	1c008 <__cxa_demangle@@Base+0x9810>  // b.none
   1bffc:	ldrb	w8, [x9]
   1c000:	cmp	w8, #0x45
   1c004:	b.eq	1c5a8 <__cxa_demangle@@Base+0x9db0>  // b.none
   1c008:	mov	x0, x19
   1c00c:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1c010:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1c014:	ldp	x8, x9, [x19, #24]
   1c018:	mov	x21, x0
   1c01c:	cmp	x8, x9
   1c020:	b.ne	1bfe4 <__cxa_demangle@@Base+0x97ec>  // b.any
   1c024:	ldr	x24, [x19, #16]
   1c028:	sub	x22, x8, x24
   1c02c:	cmp	x26, x24
   1c030:	lsl	x1, x22, #1
   1c034:	b.ne	1bfbc <__cxa_demangle@@Base+0x97c4>  // b.any
   1c038:	mov	x0, x1
   1c03c:	bl	ec00 <malloc@plt>
   1c040:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c044:	mov	x23, x0
   1c048:	cbz	x22, 1c05c <__cxa_demangle@@Base+0x9864>
   1c04c:	mov	x0, x23
   1c050:	mov	x1, x24
   1c054:	mov	x2, x22
   1c058:	bl	eae0 <memmove@plt>
   1c05c:	str	x23, [x19, #16]
   1c060:	b	1bfd0 <__cxa_demangle@@Base+0x97d8>
   1c064:	ldp	x9, x2, [x19, #16]
   1c068:	add	x8, x8, #0x1
   1c06c:	str	x8, [x19]
   1c070:	sub	x10, x2, x9
   1c074:	cmp	x24, x10, asr #3
   1c078:	b.hi	1c6f4 <__cxa_demangle@@Base+0x9efc>  // b.pmore
   1c07c:	add	x1, x9, x24, lsl #3
   1c080:	mov	x0, x19
   1c084:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1c088:	ldp	x8, x9, [x19, #16]
   1c08c:	sub	x9, x9, x8
   1c090:	cmp	x24, x9, asr #3
   1c094:	b.hi	1c714 <__cxa_demangle@@Base+0x9f1c>  // b.pmore
   1c098:	ldr	x23, [x19, #4912]
   1c09c:	add	x8, x8, x24, lsl #3
   1c0a0:	str	x8, [x19, #24]
   1c0a4:	mov	x20, x0
   1c0a8:	ldr	x8, [x23, #8]
   1c0ac:	mov	x21, x1
   1c0b0:	add	x9, x8, #0x20
   1c0b4:	cmp	x9, #0xff0
   1c0b8:	b.cc	1c0d8 <__cxa_demangle@@Base+0x98e0>  // b.lo, b.ul, b.last
   1c0bc:	mov	w0, #0x1000                	// #4096
   1c0c0:	bl	ec00 <malloc@plt>
   1c0c4:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c0c8:	mov	x8, xzr
   1c0cc:	stp	x23, xzr, [x0]
   1c0d0:	mov	x23, x0
   1c0d4:	str	x0, [x19, #4912]
   1c0d8:	add	x9, x8, #0x20
   1c0dc:	add	x22, x23, x8
   1c0e0:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c0e4:	add	x8, x8, #0xfc0
   1c0e8:	mov	w10, #0x100                 	// #256
   1c0ec:	movk	w10, #0x101, lsl #16
   1c0f0:	str	x9, [x23, #8]
   1c0f4:	str	x8, [x22, #16]!
   1c0f8:	str	w10, [x22, #8]
   1c0fc:	stp	x20, x21, [x22, #16]
   1c100:	ldr	x20, [x19, #4912]
   1c104:	ldr	x8, [x20, #8]
   1c108:	add	x9, x8, #0x40
   1c10c:	cmp	x9, #0xff0
   1c110:	b.cc	1c130 <__cxa_demangle@@Base+0x9938>  // b.lo, b.ul, b.last
   1c114:	mov	w0, #0x1000                	// #4096
   1c118:	bl	ec00 <malloc@plt>
   1c11c:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c120:	mov	x8, xzr
   1c124:	stp	x20, xzr, [x0]
   1c128:	mov	x20, x0
   1c12c:	str	x0, [x19, #4912]
   1c130:	add	x9, x8, #0x40
   1c134:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c138:	add	x8, x20, x8
   1c13c:	add	x10, x10, #0xe70
   1c140:	str	x9, [x20, #8]
   1c144:	mov	w9, #0x134                 	// #308
   1c148:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1c14c:	movk	w9, #0x101, lsl #16
   1c150:	add	x11, x11, #0x4f4
   1c154:	str	x10, [x8, #16]!
   1c158:	adrp	x10, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1c15c:	add	x10, x10, #0xfa
   1c160:	str	w9, [x8, #8]
   1c164:	add	x9, x11, #0xb
   1c168:	stp	x11, x9, [x8, #16]
   1c16c:	add	x9, x10, #0x1
   1c170:	str	x22, [x8, #32]
   1c174:	b	1b92c <__cxa_demangle@@Base+0x9134>
   1c178:	ldp	x9, x2, [x19, #16]
   1c17c:	add	x8, x8, #0x1
   1c180:	str	x8, [x19]
   1c184:	sub	x10, x2, x9
   1c188:	cmp	x25, x10, asr #3
   1c18c:	b.hi	1c6f4 <__cxa_demangle@@Base+0x9efc>  // b.pmore
   1c190:	add	x1, x9, x25, lsl #3
   1c194:	mov	x0, x19
   1c198:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1c19c:	ldp	x8, x9, [x19, #16]
   1c1a0:	sub	x9, x9, x8
   1c1a4:	cmp	x25, x9, asr #3
   1c1a8:	b.hi	1c714 <__cxa_demangle@@Base+0x9f1c>  // b.pmore
   1c1ac:	ldr	x23, [x19, #4912]
   1c1b0:	add	x8, x8, x25, lsl #3
   1c1b4:	str	x8, [x19, #24]
   1c1b8:	mov	x21, x0
   1c1bc:	ldr	x8, [x23, #8]
   1c1c0:	mov	x22, x1
   1c1c4:	add	x9, x8, #0x30
   1c1c8:	cmp	x9, #0xff0
   1c1cc:	b.cc	1c1ec <__cxa_demangle@@Base+0x99f4>  // b.lo, b.ul, b.last
   1c1d0:	mov	w0, #0x1000                	// #4096
   1c1d4:	bl	ec00 <malloc@plt>
   1c1d8:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c1dc:	mov	x8, xzr
   1c1e0:	stp	x23, xzr, [x0]
   1c1e4:	mov	x23, x0
   1c1e8:	str	x0, [x19, #4912]
   1c1ec:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c1f0:	mov	w11, #0x13d                 	// #317
   1c1f4:	add	x9, x8, #0x30
   1c1f8:	add	x8, x23, x8
   1c1fc:	add	x10, x10, #0xd20
   1c200:	b	1c28c <__cxa_demangle@@Base+0x9a94>
   1c204:	ldp	x9, x2, [x19, #16]
   1c208:	add	x8, x8, #0x1
   1c20c:	str	x8, [x19]
   1c210:	sub	x10, x2, x9
   1c214:	cmp	x25, x10, asr #3
   1c218:	b.hi	1c6f4 <__cxa_demangle@@Base+0x9efc>  // b.pmore
   1c21c:	add	x1, x9, x25, lsl #3
   1c220:	mov	x0, x19
   1c224:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1c228:	ldp	x8, x9, [x19, #16]
   1c22c:	sub	x9, x9, x8
   1c230:	cmp	x25, x9, asr #3
   1c234:	b.hi	1c714 <__cxa_demangle@@Base+0x9f1c>  // b.pmore
   1c238:	ldr	x23, [x19, #4912]
   1c23c:	add	x8, x8, x25, lsl #3
   1c240:	str	x8, [x19, #24]
   1c244:	mov	x21, x0
   1c248:	ldr	x8, [x23, #8]
   1c24c:	mov	x22, x1
   1c250:	add	x9, x8, #0x30
   1c254:	cmp	x9, #0xff0
   1c258:	b.cc	1c278 <__cxa_demangle@@Base+0x9a80>  // b.lo, b.ul, b.last
   1c25c:	mov	w0, #0x1000                	// #4096
   1c260:	bl	ec00 <malloc@plt>
   1c264:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c268:	mov	x8, xzr
   1c26c:	stp	x23, xzr, [x0]
   1c270:	mov	x23, x0
   1c274:	str	x0, [x19, #4912]
   1c278:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c27c:	mov	w11, #0x137                 	// #311
   1c280:	add	x9, x8, #0x30
   1c284:	add	x8, x23, x8
   1c288:	add	x10, x10, #0x7e0
   1c28c:	movk	w11, #0x101, lsl #16
   1c290:	str	x9, [x23, #8]
   1c294:	str	x10, [x8, #16]!
   1c298:	str	w11, [x8, #8]
   1c29c:	stp	x20, x21, [x8, #16]
   1c2a0:	str	x22, [x8, #32]
   1c2a4:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1c2a8:	ldp	x9, x2, [x19, #16]
   1c2ac:	add	x8, x8, #0x1
   1c2b0:	str	x8, [x19]
   1c2b4:	sub	x10, x2, x9
   1c2b8:	cmp	x26, x10, asr #3
   1c2bc:	b.hi	1c6f4 <__cxa_demangle@@Base+0x9efc>  // b.pmore
   1c2c0:	add	x1, x9, x26, lsl #3
   1c2c4:	mov	x0, x19
   1c2c8:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1c2cc:	ldp	x8, x9, [x19, #16]
   1c2d0:	sub	x9, x9, x8
   1c2d4:	cmp	x26, x9, asr #3
   1c2d8:	b.hi	1c714 <__cxa_demangle@@Base+0x9f1c>  // b.pmore
   1c2dc:	mov	x20, x0
   1c2e0:	add	x8, x8, x26, lsl #3
   1c2e4:	mov	x0, x19
   1c2e8:	mov	x21, x1
   1c2ec:	str	x8, [x19, #24]
   1c2f0:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1c2f4:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1c2f8:	ldp	x9, x8, [x19]
   1c2fc:	sub	x10, x8, x9
   1c300:	cmp	x10, #0x2
   1c304:	b.cc	1c470 <__cxa_demangle@@Base+0x9c78>  // b.lo, b.ul, b.last
   1c308:	ldrb	w10, [x9]
   1c30c:	cmp	w10, #0x70
   1c310:	b.ne	1c470 <__cxa_demangle@@Base+0x9c78>  // b.any
   1c314:	ldrb	w10, [x9, #1]
   1c318:	cmp	w10, #0x69
   1c31c:	b.ne	1c470 <__cxa_demangle@@Base+0x9c78>  // b.any
   1c320:	stur	w24, [x29, #-4]
   1c324:	stp	x20, x0, [sp, #8]
   1c328:	ldp	x11, x10, [x19, #16]
   1c32c:	add	x9, x9, #0x2
   1c330:	str	x9, [x19]
   1c334:	sub	x10, x10, x11
   1c338:	asr	x26, x10, #3
   1c33c:	b	1c534 <__cxa_demangle@@Base+0x9d3c>
   1c340:	mov	x0, x19
   1c344:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1c348:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1c34c:	ldr	x23, [x19, #4912]
   1c350:	mov	x21, x0
   1c354:	ldr	x8, [x23, #8]
   1c358:	add	x9, x8, #0x10
   1c35c:	cmp	x9, #0xff0
   1c360:	b.cc	1c380 <__cxa_demangle@@Base+0x9b88>  // b.lo, b.ul, b.last
   1c364:	mov	w0, #0x1000                	// #4096
   1c368:	bl	ec00 <malloc@plt>
   1c36c:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c370:	mov	x8, xzr
   1c374:	stp	x23, xzr, [x0]
   1c378:	mov	x23, x0
   1c37c:	str	x0, [x19, #4912]
   1c380:	add	x9, x8, #0x10
   1c384:	add	x22, x23, x8
   1c388:	str	x9, [x23, #8]
   1c38c:	str	x21, [x22, #16]!
   1c390:	ldr	x21, [x19, #4912]
   1c394:	ldr	x8, [x21, #8]
   1c398:	add	x9, x8, #0x30
   1c39c:	cmp	x9, #0xff0
   1c3a0:	b.cc	1c3c0 <__cxa_demangle@@Base+0x9bc8>  // b.lo, b.ul, b.last
   1c3a4:	mov	w0, #0x1000                	// #4096
   1c3a8:	bl	ec00 <malloc@plt>
   1c3ac:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c3b0:	mov	x8, xzr
   1c3b4:	stp	x21, xzr, [x0]
   1c3b8:	mov	x21, x0
   1c3bc:	str	x0, [x19, #4912]
   1c3c0:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c3c4:	add	x9, x8, #0x30
   1c3c8:	add	x8, x21, x8
   1c3cc:	add	x10, x10, #0x850
   1c3d0:	mov	w11, #0x13c                 	// #316
   1c3d4:	movk	w11, #0x101, lsl #16
   1c3d8:	mov	w12, #0x1                   	// #1
   1c3dc:	str	x9, [x21, #8]
   1c3e0:	str	x10, [x8, #16]!
   1c3e4:	str	w11, [x8, #8]
   1c3e8:	stp	x20, x22, [x8, #16]
   1c3ec:	str	x12, [x8, #32]
   1c3f0:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1c3f4:	mov	x0, x19
   1c3f8:	bl	1cfdc <__cxa_demangle@@Base+0xa7e4>
   1c3fc:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1c400:	ldr	x21, [x19, #4912]
   1c404:	mov	x20, x0
   1c408:	ldr	x8, [x21, #8]
   1c40c:	add	x9, x8, #0x40
   1c410:	cmp	x9, #0xff0
   1c414:	b.cc	1c434 <__cxa_demangle@@Base+0x9c3c>  // b.lo, b.ul, b.last
   1c418:	mov	w0, #0x1000                	// #4096
   1c41c:	bl	ec00 <malloc@plt>
   1c420:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c424:	mov	x8, xzr
   1c428:	stp	x21, xzr, [x0]
   1c42c:	mov	x21, x0
   1c430:	str	x0, [x19, #4912]
   1c434:	add	x9, x8, #0x40
   1c438:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c43c:	add	x8, x21, x8
   1c440:	add	x10, x10, #0xe70
   1c444:	str	x9, [x21, #8]
   1c448:	mov	w9, #0x134                 	// #308
   1c44c:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1c450:	movk	w9, #0x101, lsl #16
   1c454:	add	x11, x11, #0x4f4
   1c458:	str	x10, [x8, #16]!
   1c45c:	adrp	x10, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1c460:	add	x10, x10, #0xfa
   1c464:	str	w9, [x8, #8]
   1c468:	add	x9, x11, #0xb
   1c46c:	b	1b920 <__cxa_demangle@@Base+0x9128>
   1c470:	cmp	x9, x8
   1c474:	b.eq	1a50c <__cxa_demangle@@Base+0x7d14>  // b.none
   1c478:	ldrb	w8, [x9]
   1c47c:	cmp	w8, #0x45
   1c480:	b.ne	1a50c <__cxa_demangle@@Base+0x7d14>  // b.any
   1c484:	ldr	x23, [x19, #4912]
   1c488:	add	x8, x9, #0x1
   1c48c:	str	x8, [x19]
   1c490:	mov	x22, x20
   1c494:	ldr	x8, [x23, #8]
   1c498:	mov	x20, x0
   1c49c:	add	x9, x8, #0x40
   1c4a0:	cmp	x9, #0xff0
   1c4a4:	b.cc	1c4c4 <__cxa_demangle@@Base+0x9ccc>  // b.lo, b.ul, b.last
   1c4a8:	mov	w0, #0x1000                	// #4096
   1c4ac:	bl	ec00 <malloc@plt>
   1c4b0:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c4b4:	mov	x8, xzr
   1c4b8:	stp	x23, xzr, [x0]
   1c4bc:	mov	x23, x0
   1c4c0:	str	x0, [x19, #4912]
   1c4c4:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c4c8:	add	x9, x8, #0x40
   1c4cc:	add	x8, x23, x8
   1c4d0:	add	x10, x10, #0xe00
   1c4d4:	mov	w11, #0x138                 	// #312
   1c4d8:	movk	w11, #0x101, lsl #16
   1c4dc:	str	x9, [x23, #8]
   1c4e0:	str	x10, [x8, #16]!
   1c4e4:	str	w11, [x8, #8]
   1c4e8:	stp	x22, x21, [x8, #16]
   1c4ec:	stp	xzr, xzr, [x8, #40]
   1c4f0:	str	x20, [x8, #32]
   1c4f4:	strb	wzr, [x8, #56]
   1c4f8:	strb	w24, [x8, #57]
   1c4fc:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1c500:	bl	ecc0 <realloc@plt>
   1c504:	mov	x24, x0
   1c508:	str	x0, [x19, #16]
   1c50c:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c510:	asr	x8, x23, #3
   1c514:	asr	x9, x23, #2
   1c518:	add	x8, x24, x8, lsl #3
   1c51c:	add	x9, x24, x9, lsl #3
   1c520:	stp	x8, x9, [x19, #24]
   1c524:	add	x9, x8, #0x8
   1c528:	str	x9, [x19, #24]
   1c52c:	str	x22, [x8]
   1c530:	ldp	x9, x8, [x19]
   1c534:	cmp	x9, x8
   1c538:	b.eq	1c548 <__cxa_demangle@@Base+0x9d50>  // b.none
   1c53c:	ldrb	w8, [x9]
   1c540:	cmp	w8, #0x45
   1c544:	b.eq	1c634 <__cxa_demangle@@Base+0x9e3c>  // b.none
   1c548:	mov	x0, x19
   1c54c:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1c550:	cbz	x0, 1a50c <__cxa_demangle@@Base+0x7d14>
   1c554:	ldp	x8, x9, [x19, #24]
   1c558:	mov	x22, x0
   1c55c:	cmp	x8, x9
   1c560:	b.ne	1c524 <__cxa_demangle@@Base+0x9d2c>  // b.any
   1c564:	ldr	x0, [x19, #16]
   1c568:	sub	x23, x8, x0
   1c56c:	cmp	x25, x0
   1c570:	lsl	x1, x23, #1
   1c574:	b.ne	1c500 <__cxa_demangle@@Base+0x9d08>  // b.any
   1c578:	mov	x20, x0
   1c57c:	mov	x0, x1
   1c580:	bl	ec00 <malloc@plt>
   1c584:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c588:	mov	x24, x0
   1c58c:	cbz	x23, 1c5a0 <__cxa_demangle@@Base+0x9da8>
   1c590:	mov	x0, x24
   1c594:	mov	x1, x20
   1c598:	mov	x2, x23
   1c59c:	bl	eae0 <memmove@plt>
   1c5a0:	str	x24, [x19, #16]
   1c5a4:	b	1c510 <__cxa_demangle@@Base+0x9d18>
   1c5a8:	ldp	x8, x2, [x19, #16]
   1c5ac:	add	x9, x9, #0x1
   1c5b0:	str	x9, [x19]
   1c5b4:	sub	x10, x2, x8
   1c5b8:	cmp	x25, x10, asr #3
   1c5bc:	b.hi	1c6f4 <__cxa_demangle@@Base+0x9efc>  // b.pmore
   1c5c0:	add	x1, x8, x25, lsl #3
   1c5c4:	mov	x0, x19
   1c5c8:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1c5cc:	ldp	x8, x9, [x19, #16]
   1c5d0:	sub	x9, x9, x8
   1c5d4:	cmp	x25, x9, asr #3
   1c5d8:	b.hi	1c714 <__cxa_demangle@@Base+0x9f1c>  // b.pmore
   1c5dc:	ldr	x23, [x19, #4912]
   1c5e0:	add	x8, x8, x25, lsl #3
   1c5e4:	str	x8, [x19, #24]
   1c5e8:	mov	x21, x0
   1c5ec:	ldr	x8, [x23, #8]
   1c5f0:	mov	x22, x1
   1c5f4:	add	x9, x8, #0x30
   1c5f8:	cmp	x9, #0xff0
   1c5fc:	b.cc	1c61c <__cxa_demangle@@Base+0x9e24>  // b.lo, b.ul, b.last
   1c600:	mov	w0, #0x1000                	// #4096
   1c604:	bl	ec00 <malloc@plt>
   1c608:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c60c:	mov	x8, xzr
   1c610:	stp	x23, xzr, [x0]
   1c614:	mov	x23, x0
   1c618:	str	x0, [x19, #4912]
   1c61c:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c620:	mov	w11, #0x13c                 	// #316
   1c624:	add	x9, x8, #0x30
   1c628:	add	x8, x23, x8
   1c62c:	add	x10, x10, #0x850
   1c630:	b	1c28c <__cxa_demangle@@Base+0x9a94>
   1c634:	ldp	x8, x2, [x19, #16]
   1c638:	add	x9, x9, #0x1
   1c63c:	str	x9, [x19]
   1c640:	sub	x10, x2, x8
   1c644:	cmp	x26, x10, asr #3
   1c648:	b.hi	1c6f4 <__cxa_demangle@@Base+0x9efc>  // b.pmore
   1c64c:	add	x1, x8, x26, lsl #3
   1c650:	mov	x0, x19
   1c654:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1c658:	ldp	x8, x9, [x19, #16]
   1c65c:	sub	x9, x9, x8
   1c660:	cmp	x26, x9, asr #3
   1c664:	b.hi	1c714 <__cxa_demangle@@Base+0x9f1c>  // b.pmore
   1c668:	ldr	x20, [x19, #4912]
   1c66c:	add	x8, x8, x26, lsl #3
   1c670:	str	x8, [x19, #24]
   1c674:	mov	x22, x0
   1c678:	ldr	x8, [x20, #8]
   1c67c:	mov	x23, x1
   1c680:	add	x9, x8, #0x40
   1c684:	cmp	x9, #0xff0
   1c688:	b.cc	1c6a8 <__cxa_demangle@@Base+0x9eb0>  // b.lo, b.ul, b.last
   1c68c:	mov	w0, #0x1000                	// #4096
   1c690:	bl	ec00 <malloc@plt>
   1c694:	cbz	x0, 1c6f0 <__cxa_demangle@@Base+0x9ef8>
   1c698:	mov	x8, xzr
   1c69c:	stp	x20, xzr, [x0]
   1c6a0:	mov	x20, x0
   1c6a4:	str	x0, [x19, #4912]
   1c6a8:	add	x9, x8, #0x40
   1c6ac:	str	x9, [x20, #8]
   1c6b0:	ldr	x9, [sp, #8]
   1c6b4:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c6b8:	add	x8, x20, x8
   1c6bc:	add	x10, x10, #0xe00
   1c6c0:	str	x10, [x8, #16]!
   1c6c4:	stp	x9, x21, [x8, #16]
   1c6c8:	ldr	x9, [sp, #16]
   1c6cc:	mov	w11, #0x138                 	// #312
   1c6d0:	movk	w11, #0x101, lsl #16
   1c6d4:	str	w11, [x8, #8]
   1c6d8:	stp	x9, x22, [x8, #32]
   1c6dc:	ldur	w9, [x29, #-4]
   1c6e0:	str	x23, [x8, #48]
   1c6e4:	strb	wzr, [x8, #56]
   1c6e8:	strb	w9, [x8, #57]
   1c6ec:	b	1a510 <__cxa_demangle@@Base+0x7d18>
   1c6f0:	bl	eeb0 <_ZSt9terminatev@plt>
   1c6f4:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1c6f8:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1c6fc:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1c700:	add	x0, x0, #0xdf
   1c704:	add	x1, x1, #0xce9
   1c708:	add	x3, x3, #0xfc
   1c70c:	mov	w2, #0x94b                 	// #2379
   1c710:	bl	ee90 <__assert_fail@plt>
   1c714:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1c718:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1c71c:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1c720:	add	x0, x0, #0xa2e
   1c724:	add	x1, x1, #0xce9
   1c728:	add	x3, x3, #0x2b6
   1c72c:	mov	w2, #0x8d9                 	// #2265
   1c730:	bl	ee90 <__assert_fail@plt>
   1c734:	strb	w21, [x19, #776]
   1c738:	bl	eea0 <_Unwind_Resume@plt>
   1c73c:	stp	x29, x30, [sp, #-64]!
   1c740:	stp	x24, x23, [sp, #16]
   1c744:	stp	x22, x21, [sp, #32]
   1c748:	stp	x20, x19, [sp, #48]
   1c74c:	mov	x29, sp
   1c750:	ldp	x20, x21, [x0]
   1c754:	cmp	x20, x21
   1c758:	b.eq	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.none
   1c75c:	ldrb	w8, [x20]
   1c760:	cmp	w8, #0x4c
   1c764:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1c768:	add	x9, x20, #0x1
   1c76c:	mov	x19, x0
   1c770:	subs	x8, x21, x9
   1c774:	str	x9, [x0]
   1c778:	b.eq	1c820 <__cxa_demangle@@Base+0xa028>  // b.none
   1c77c:	ldrb	w9, [x9]
   1c780:	sub	w9, w9, #0x41
   1c784:	cmp	w9, #0x38
   1c788:	b.hi	1c820 <__cxa_demangle@@Base+0xa028>  // b.pmore
   1c78c:	adrp	x10, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1c790:	add	x10, x10, #0xa10
   1c794:	adr	x11, 1c7a8 <__cxa_demangle@@Base+0x9fb0>
   1c798:	ldrh	w12, [x10, x9, lsl #1]
   1c79c:	add	x11, x11, x12, lsl #2
   1c7a0:	mov	x0, xzr
   1c7a4:	br	x11
   1c7a8:	mov	x0, x19
   1c7ac:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1c7b0:	cbz	x0, 1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1c7b4:	ldp	x8, x9, [x19]
   1c7b8:	cmp	x8, x9
   1c7bc:	b.eq	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.none
   1c7c0:	ldrb	w9, [x8]
   1c7c4:	cmp	w9, #0x45
   1c7c8:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1c7cc:	ldr	x21, [x19, #4912]
   1c7d0:	add	x8, x8, #0x1
   1c7d4:	str	x8, [x19]
   1c7d8:	mov	x20, x0
   1c7dc:	ldr	x8, [x21, #8]
   1c7e0:	add	x9, x8, #0x20
   1c7e4:	cmp	x9, #0xff0
   1c7e8:	b.cc	1c808 <__cxa_demangle@@Base+0xa010>  // b.lo, b.ul, b.last
   1c7ec:	mov	w0, #0x1000                	// #4096
   1c7f0:	bl	ec00 <malloc@plt>
   1c7f4:	cbz	x0, 1cfd8 <__cxa_demangle@@Base+0xa7e0>
   1c7f8:	mov	x8, xzr
   1c7fc:	stp	x21, xzr, [x0]
   1c800:	mov	x21, x0
   1c804:	str	x0, [x19, #4912]
   1c808:	add	x9, x8, #0x20
   1c80c:	add	x0, x21, x8
   1c810:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c814:	mov	w10, #0x142                 	// #322
   1c818:	add	x8, x8, #0xe0
   1c81c:	b	1cc14 <__cxa_demangle@@Base+0xa41c>
   1c820:	mov	x0, x19
   1c824:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1c828:	cbz	x0, 1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1c82c:	ldp	x22, x24, [x19]
   1c830:	mov	x20, x0
   1c834:	cmp	x24, x22
   1c838:	b.eq	1c850 <__cxa_demangle@@Base+0xa058>  // b.none
   1c83c:	ldrb	w21, [x22]
   1c840:	bl	ed40 <__ctype_b_loc@plt>
   1c844:	ldr	x8, [x0]
   1c848:	ldrh	w8, [x8, x21, lsl #1]
   1c84c:	tbnz	w8, #11, 1c8e0 <__cxa_demangle@@Base+0xa0e8>
   1c850:	mov	x21, xzr
   1c854:	mov	x23, xzr
   1c858:	cmp	x21, x23
   1c85c:	mov	x0, xzr
   1c860:	b.eq	1cfc4 <__cxa_demangle@@Base+0xa7cc>  // b.none
   1c864:	cmp	x22, x24
   1c868:	b.eq	1cfc4 <__cxa_demangle@@Base+0xa7cc>  // b.none
   1c86c:	ldrb	w8, [x22]
   1c870:	cmp	w8, #0x45
   1c874:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1c878:	ldr	x24, [x19, #4912]
   1c87c:	add	x8, x22, #0x1
   1c880:	str	x8, [x19]
   1c884:	ldr	x8, [x24, #8]
   1c888:	add	x9, x8, #0x30
   1c88c:	cmp	x9, #0xff0
   1c890:	b.cc	1c8b0 <__cxa_demangle@@Base+0xa0b8>  // b.lo, b.ul, b.last
   1c894:	mov	w0, #0x1000                	// #4096
   1c898:	bl	ec00 <malloc@plt>
   1c89c:	cbz	x0, 1cfd8 <__cxa_demangle@@Base+0xa7e0>
   1c8a0:	mov	x8, xzr
   1c8a4:	stp	x24, xzr, [x0]
   1c8a8:	mov	x24, x0
   1c8ac:	str	x0, [x19, #4912]
   1c8b0:	add	x9, x8, #0x30
   1c8b4:	add	x0, x24, x8
   1c8b8:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1c8bc:	add	x8, x8, #0x4d0
   1c8c0:	mov	w10, #0x144                 	// #324
   1c8c4:	movk	w10, #0x101, lsl #16
   1c8c8:	str	x9, [x24, #8]
   1c8cc:	str	x8, [x0, #16]!
   1c8d0:	str	w10, [x0, #8]
   1c8d4:	stp	x20, x21, [x0, #16]
   1c8d8:	str	x23, [x0, #32]
   1c8dc:	b	1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1c8e0:	add	x9, x22, #0x1
   1c8e4:	mov	x8, x9
   1c8e8:	cmp	x24, x9
   1c8ec:	str	x9, [x19]
   1c8f0:	b.eq	1c918 <__cxa_demangle@@Base+0xa120>  // b.none
   1c8f4:	mov	x9, x8
   1c8f8:	ldrb	w10, [x9], #1
   1c8fc:	ldr	x11, [x0]
   1c900:	ldrh	w10, [x11, x10, lsl #1]
   1c904:	tbnz	w10, #11, 1c8e4 <__cxa_demangle@@Base+0xa0ec>
   1c908:	mov	x21, x22
   1c90c:	sub	x23, x9, #0x1
   1c910:	mov	x22, x8
   1c914:	b	1c858 <__cxa_demangle@@Base+0xa060>
   1c918:	mov	x21, x22
   1c91c:	mov	x22, x8
   1c920:	mov	x23, x24
   1c924:	b	1c858 <__cxa_demangle@@Base+0xa060>
   1c928:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1c92c:	add	x1, x1, #0x52e
   1c930:	add	x8, x20, #0x2
   1c934:	add	x2, x1, #0x5
   1c938:	b	1cf24 <__cxa_demangle@@Base+0xa72c>
   1c93c:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1c940:	add	x1, x1, #0x538
   1c944:	b	1cce0 <__cxa_demangle@@Base+0xa4e8>
   1c948:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1c94c:	add	x8, x20, #0x2
   1c950:	add	x1, x1, #0x4d
   1c954:	b	1ccd0 <__cxa_demangle@@Base+0xa4d8>
   1c958:	add	x22, x20, #0x2
   1c95c:	sub	x8, x21, x22
   1c960:	cmp	x8, #0x9
   1c964:	str	x22, [x19]
   1c968:	b.cc	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.lo, b.ul, b.last
   1c96c:	bl	ed40 <__ctype_b_loc@plt>
   1c970:	ldr	x8, [x0]
   1c974:	ldrb	w9, [x20, #2]
   1c978:	ldrh	w9, [x8, x9, lsl #1]
   1c97c:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1c980:	ldrb	w9, [x20, #3]
   1c984:	ldrh	w9, [x8, x9, lsl #1]
   1c988:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1c98c:	ldrb	w9, [x20, #4]
   1c990:	ldrh	w9, [x8, x9, lsl #1]
   1c994:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1c998:	ldrb	w9, [x20, #5]
   1c99c:	ldrh	w9, [x8, x9, lsl #1]
   1c9a0:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1c9a4:	ldrb	w9, [x20, #6]
   1c9a8:	ldrh	w9, [x8, x9, lsl #1]
   1c9ac:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1c9b0:	ldrb	w9, [x20, #7]
   1c9b4:	ldrh	w9, [x8, x9, lsl #1]
   1c9b8:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1c9bc:	ldrb	w9, [x20, #8]
   1c9c0:	ldrh	w9, [x8, x9, lsl #1]
   1c9c4:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1c9c8:	ldrb	w9, [x20, #9]
   1c9cc:	ldrh	w8, [x8, x9, lsl #1]
   1c9d0:	tbz	w8, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1c9d4:	add	x23, x20, #0xa
   1c9d8:	cmp	x23, x21
   1c9dc:	str	x23, [x19]
   1c9e0:	b.eq	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.none
   1c9e4:	ldrb	w8, [x23]
   1c9e8:	cmp	w8, #0x45
   1c9ec:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1c9f0:	ldr	x21, [x19, #4912]
   1c9f4:	add	x8, x20, #0xb
   1c9f8:	str	x8, [x19]
   1c9fc:	ldr	x8, [x21, #8]
   1ca00:	add	x9, x8, #0x20
   1ca04:	cmp	x9, #0xff0
   1ca08:	b.cc	1ca28 <__cxa_demangle@@Base+0xa230>  // b.lo, b.ul, b.last
   1ca0c:	mov	w0, #0x1000                	// #4096
   1ca10:	bl	ec00 <malloc@plt>
   1ca14:	cbz	x0, 1cfd8 <__cxa_demangle@@Base+0xa7e0>
   1ca18:	mov	x8, xzr
   1ca1c:	stp	x21, xzr, [x0]
   1ca20:	mov	x21, x0
   1ca24:	str	x0, [x19, #4912]
   1ca28:	add	x9, x8, #0x20
   1ca2c:	add	x0, x21, x8
   1ca30:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1ca34:	mov	w10, #0x146                 	// #326
   1ca38:	add	x8, x8, #0xf90
   1ca3c:	b	1cd8c <__cxa_demangle@@Base+0xa594>
   1ca40:	cmp	x8, #0x3
   1ca44:	b.cc	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.lo, b.ul, b.last
   1ca48:	ldrb	w8, [x20, #2]
   1ca4c:	cmp	w8, #0x6e
   1ca50:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1ca54:	ldrb	w8, [x20, #3]
   1ca58:	cmp	w8, #0x45
   1ca5c:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1ca60:	ldr	x21, [x19, #4912]
   1ca64:	add	x8, x20, #0x4
   1ca68:	str	x8, [x19]
   1ca6c:	ldr	x8, [x21, #8]
   1ca70:	add	x9, x8, #0x20
   1ca74:	cmp	x9, #0xfef
   1ca78:	b.ls	1ca98 <__cxa_demangle@@Base+0xa2a0>  // b.plast
   1ca7c:	mov	w0, #0x1000                	// #4096
   1ca80:	bl	ec00 <malloc@plt>
   1ca84:	cbz	x0, 1cfd8 <__cxa_demangle@@Base+0xa7e0>
   1ca88:	mov	x8, xzr
   1ca8c:	stp	x21, xzr, [x0]
   1ca90:	mov	x21, x0
   1ca94:	str	x0, [x19, #4912]
   1ca98:	add	x9, x8, #0x20
   1ca9c:	add	x0, x21, x8
   1caa0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1caa4:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1caa8:	add	x8, x8, #0xd60
   1caac:	mov	w10, #0x107                 	// #263
   1cab0:	add	x11, x11, #0xa6f
   1cab4:	movk	w10, #0x101, lsl #16
   1cab8:	str	x9, [x21, #8]
   1cabc:	str	x8, [x0, #16]!
   1cac0:	add	x8, x11, #0x7
   1cac4:	str	w10, [x0, #8]
   1cac8:	stp	x11, x8, [x0, #16]
   1cacc:	b	1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1cad0:	cmp	x8, #0x2
   1cad4:	b.cc	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.lo, b.ul, b.last
   1cad8:	ldrb	w8, [x20, #2]
   1cadc:	cmp	w8, #0x5a
   1cae0:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1cae4:	add	x8, x20, #0x3
   1cae8:	mov	x0, x19
   1caec:	str	x8, [x19]
   1caf0:	bl	150bc <__cxa_demangle@@Base+0x28c4>
   1caf4:	cbz	x0, 1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1caf8:	ldp	x8, x9, [x19]
   1cafc:	cmp	x8, x9
   1cb00:	b.eq	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.none
   1cb04:	ldrb	w9, [x8]
   1cb08:	cmp	w9, #0x45
   1cb0c:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1cb10:	add	x8, x8, #0x1
   1cb14:	str	x8, [x19]
   1cb18:	b	1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1cb1c:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1cb20:	add	x1, x1, #0x537
   1cb24:	add	x8, x20, #0x2
   1cb28:	add	x2, x1, #0x3
   1cb2c:	b	1cf24 <__cxa_demangle@@Base+0xa72c>
   1cb30:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1cb34:	add	x8, x20, #0x2
   1cb38:	add	x1, x1, #0xe32
   1cb3c:	str	x8, [x19]
   1cb40:	mov	x0, x19
   1cb44:	mov	x2, x1
   1cb48:	b	1cf2c <__cxa_demangle@@Base+0xa734>
   1cb4c:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1cb50:	add	x1, x1, #0x525
   1cb54:	add	x8, x20, #0x2
   1cb58:	add	x2, x1, #0xe
   1cb5c:	b	1cf24 <__cxa_demangle@@Base+0xa72c>
   1cb60:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1cb64:	add	x1, x1, #0x519
   1cb68:	add	x8, x20, #0x2
   1cb6c:	add	x2, x1, #0xb
   1cb70:	b	1cf24 <__cxa_demangle@@Base+0xa72c>
   1cb74:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1cb78:	add	x1, x1, #0x517
   1cb7c:	add	x8, x20, #0x2
   1cb80:	add	x2, x1, #0xd
   1cb84:	b	1cf24 <__cxa_demangle@@Base+0xa72c>
   1cb88:	cmp	x8, #0x2
   1cb8c:	b.cc	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.lo, b.ul, b.last
   1cb90:	ldrb	w8, [x20, #2]
   1cb94:	cmp	w8, #0x6c
   1cb98:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1cb9c:	mov	x0, x19
   1cba0:	mov	x1, xzr
   1cba4:	bl	1e3a8 <__cxa_demangle@@Base+0xbbb0>
   1cba8:	cbz	x0, 1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1cbac:	ldp	x8, x9, [x19]
   1cbb0:	cmp	x8, x9
   1cbb4:	b.eq	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.none
   1cbb8:	ldrb	w9, [x8]
   1cbbc:	cmp	w9, #0x45
   1cbc0:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1cbc4:	ldr	x21, [x19, #4912]
   1cbc8:	add	x8, x8, #0x1
   1cbcc:	str	x8, [x19]
   1cbd0:	mov	x20, x0
   1cbd4:	ldr	x8, [x21, #8]
   1cbd8:	add	x9, x8, #0x20
   1cbdc:	cmp	x9, #0xff0
   1cbe0:	b.cc	1cc00 <__cxa_demangle@@Base+0xa408>  // b.lo, b.ul, b.last
   1cbe4:	mov	w0, #0x1000                	// #4096
   1cbe8:	bl	ec00 <malloc@plt>
   1cbec:	cbz	x0, 1cfd8 <__cxa_demangle@@Base+0xa7e0>
   1cbf0:	mov	x8, xzr
   1cbf4:	stp	x21, xzr, [x0]
   1cbf8:	mov	x21, x0
   1cbfc:	str	x0, [x19, #4912]
   1cc00:	add	x9, x8, #0x20
   1cc04:	add	x0, x21, x8
   1cc08:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1cc0c:	mov	w10, #0x143                 	// #323
   1cc10:	add	x8, x8, #0x460
   1cc14:	movk	w10, #0x101, lsl #16
   1cc18:	str	x9, [x21, #8]
   1cc1c:	str	x8, [x0, #16]!
   1cc20:	str	w10, [x0, #8]
   1cc24:	str	x20, [x0, #16]
   1cc28:	b	1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1cc2c:	cmp	x8, #0x3
   1cc30:	b.cc	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.lo, b.ul, b.last
   1cc34:	ldrb	w8, [x20, #2]
   1cc38:	cmp	w8, #0x30
   1cc3c:	b.ne	1cf40 <__cxa_demangle@@Base+0xa748>  // b.any
   1cc40:	ldrb	w8, [x20, #3]
   1cc44:	cmp	w8, #0x45
   1cc48:	b.ne	1cf40 <__cxa_demangle@@Base+0xa748>  // b.any
   1cc4c:	ldr	x21, [x19, #4912]
   1cc50:	add	x8, x20, #0x4
   1cc54:	str	x8, [x19]
   1cc58:	ldr	x8, [x21, #8]
   1cc5c:	add	x9, x8, #0x10
   1cc60:	cmp	x9, #0xfef
   1cc64:	b.ls	1cc84 <__cxa_demangle@@Base+0xa48c>  // b.plast
   1cc68:	mov	w0, #0x1000                	// #4096
   1cc6c:	bl	ec00 <malloc@plt>
   1cc70:	cbz	x0, 1cfd8 <__cxa_demangle@@Base+0xa7e0>
   1cc74:	mov	x8, xzr
   1cc78:	stp	x21, xzr, [x0]
   1cc7c:	mov	x21, x0
   1cc80:	str	x0, [x19, #4912]
   1cc84:	add	x9, x8, #0x10
   1cc88:	add	x0, x21, x8
   1cc8c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1cc90:	add	x8, x8, #0xf20
   1cc94:	mov	w10, #0x141                 	// #321
   1cc98:	movk	w10, #0x101, lsl #16
   1cc9c:	str	x9, [x21, #8]
   1cca0:	str	x8, [x0, #16]!
   1cca4:	str	w10, [x0, #8]
   1cca8:	strb	wzr, [x0, #12]
   1ccac:	b	1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1ccb0:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ccb4:	add	x1, x1, #0x520
   1ccb8:	add	x8, x20, #0x2
   1ccbc:	add	x2, x1, #0x4
   1ccc0:	b	1cf24 <__cxa_demangle@@Base+0xa72c>
   1ccc4:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ccc8:	add	x8, x20, #0x2
   1cccc:	add	x1, x1, #0x360
   1ccd0:	add	x2, x1, #0x1
   1ccd4:	b	1cf24 <__cxa_demangle@@Base+0xa72c>
   1ccd8:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ccdc:	add	x1, x1, #0x534
   1cce0:	add	x8, x20, #0x2
   1cce4:	add	x2, x1, #0x2
   1cce8:	b	1cf24 <__cxa_demangle@@Base+0xa72c>
   1ccec:	add	x22, x20, #0x2
   1ccf0:	sub	x8, x21, x22
   1ccf4:	cmp	x8, #0x21
   1ccf8:	str	x22, [x19]
   1ccfc:	b.cc	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.lo, b.ul, b.last
   1cd00:	add	x23, x20, #0x22
   1cd04:	bl	ed40 <__ctype_b_loc@plt>
   1cd08:	ldr	x8, [x0]
   1cd0c:	mov	x9, xzr
   1cd10:	ldrb	w10, [x22, x9]
   1cd14:	ldrh	w10, [x8, x10, lsl #1]
   1cd18:	tbz	w10, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1cd1c:	add	x9, x9, #0x1
   1cd20:	cmp	x9, #0x20
   1cd24:	b.ne	1cd10 <__cxa_demangle@@Base+0xa518>  // b.any
   1cd28:	cmp	x23, x21
   1cd2c:	str	x23, [x19]
   1cd30:	b.eq	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.none
   1cd34:	ldrb	w8, [x23]
   1cd38:	cmp	w8, #0x45
   1cd3c:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1cd40:	ldr	x21, [x19, #4912]
   1cd44:	add	x8, x20, #0x23
   1cd48:	str	x8, [x19]
   1cd4c:	ldr	x8, [x21, #8]
   1cd50:	add	x9, x8, #0x20
   1cd54:	cmp	x9, #0xff0
   1cd58:	b.cc	1cd78 <__cxa_demangle@@Base+0xa580>  // b.lo, b.ul, b.last
   1cd5c:	mov	w0, #0x1000                	// #4096
   1cd60:	bl	ec00 <malloc@plt>
   1cd64:	cbz	x0, 1cfd8 <__cxa_demangle@@Base+0xa7e0>
   1cd68:	mov	x8, xzr
   1cd6c:	stp	x21, xzr, [x0]
   1cd70:	mov	x21, x0
   1cd74:	str	x0, [x19, #4912]
   1cd78:	add	x9, x8, #0x20
   1cd7c:	add	x0, x21, x8
   1cd80:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1cd84:	mov	w10, #0x148                 	// #328
   1cd88:	add	x8, x8, #0x70
   1cd8c:	movk	w10, #0x101, lsl #16
   1cd90:	str	x9, [x21, #8]
   1cd94:	str	x8, [x0, #16]!
   1cd98:	str	w10, [x0, #8]
   1cd9c:	stp	x22, x23, [x0, #16]
   1cda0:	b	1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1cda4:	add	x22, x20, #0x2
   1cda8:	sub	x8, x21, x22
   1cdac:	cmp	x8, #0x11
   1cdb0:	str	x22, [x19]
   1cdb4:	b.cc	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.lo, b.ul, b.last
   1cdb8:	bl	ed40 <__ctype_b_loc@plt>
   1cdbc:	ldr	x8, [x0]
   1cdc0:	ldrb	w9, [x20, #2]
   1cdc4:	ldrh	w9, [x8, x9, lsl #1]
   1cdc8:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1cdcc:	ldrb	w9, [x20, #3]
   1cdd0:	ldrh	w9, [x8, x9, lsl #1]
   1cdd4:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1cdd8:	ldrb	w9, [x20, #4]
   1cddc:	ldrh	w9, [x8, x9, lsl #1]
   1cde0:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1cde4:	ldrb	w9, [x20, #5]
   1cde8:	ldrh	w9, [x8, x9, lsl #1]
   1cdec:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1cdf0:	ldrb	w9, [x20, #6]
   1cdf4:	ldrh	w9, [x8, x9, lsl #1]
   1cdf8:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1cdfc:	ldrb	w9, [x20, #7]
   1ce00:	ldrh	w9, [x8, x9, lsl #1]
   1ce04:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce08:	ldrb	w9, [x20, #8]
   1ce0c:	ldrh	w9, [x8, x9, lsl #1]
   1ce10:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce14:	ldrb	w9, [x20, #9]
   1ce18:	ldrh	w9, [x8, x9, lsl #1]
   1ce1c:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce20:	ldrb	w9, [x20, #10]
   1ce24:	ldrh	w9, [x8, x9, lsl #1]
   1ce28:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce2c:	ldrb	w9, [x20, #11]
   1ce30:	ldrh	w9, [x8, x9, lsl #1]
   1ce34:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce38:	ldrb	w9, [x20, #12]
   1ce3c:	ldrh	w9, [x8, x9, lsl #1]
   1ce40:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce44:	ldrb	w9, [x20, #13]
   1ce48:	ldrh	w9, [x8, x9, lsl #1]
   1ce4c:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce50:	ldrb	w9, [x20, #14]
   1ce54:	ldrh	w9, [x8, x9, lsl #1]
   1ce58:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce5c:	ldrb	w9, [x20, #15]
   1ce60:	ldrh	w9, [x8, x9, lsl #1]
   1ce64:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce68:	ldrb	w9, [x20, #16]
   1ce6c:	ldrh	w9, [x8, x9, lsl #1]
   1ce70:	tbz	w9, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce74:	ldrb	w9, [x20, #17]
   1ce78:	ldrh	w8, [x8, x9, lsl #1]
   1ce7c:	tbz	w8, #12, 1cfc0 <__cxa_demangle@@Base+0xa7c8>
   1ce80:	add	x23, x20, #0x12
   1ce84:	cmp	x23, x21
   1ce88:	str	x23, [x19]
   1ce8c:	b.eq	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.none
   1ce90:	ldrb	w8, [x23]
   1ce94:	cmp	w8, #0x45
   1ce98:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1ce9c:	ldr	x21, [x19, #4912]
   1cea0:	add	x8, x20, #0x13
   1cea4:	str	x8, [x19]
   1cea8:	ldr	x8, [x21, #8]
   1ceac:	add	x9, x8, #0x20
   1ceb0:	cmp	x9, #0xff0
   1ceb4:	b.cc	1ced4 <__cxa_demangle@@Base+0xa6dc>  // b.lo, b.ul, b.last
   1ceb8:	mov	w0, #0x1000                	// #4096
   1cebc:	bl	ec00 <malloc@plt>
   1cec0:	cbz	x0, 1cfd8 <__cxa_demangle@@Base+0xa7e0>
   1cec4:	mov	x8, xzr
   1cec8:	stp	x21, xzr, [x0]
   1cecc:	mov	x21, x0
   1ced0:	str	x0, [x19, #4912]
   1ced4:	add	x9, x8, #0x20
   1ced8:	add	x0, x21, x8
   1cedc:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1cee0:	mov	w10, #0x147                 	// #327
   1cee4:	add	x8, x8, #0x0
   1cee8:	b	1cd8c <__cxa_demangle@@Base+0xa594>
   1ceec:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1cef0:	add	x1, x1, #0x53b
   1cef4:	add	x8, x20, #0x2
   1cef8:	add	x2, x1, #0x11
   1cefc:	b	1cf24 <__cxa_demangle@@Base+0xa72c>
   1cf00:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1cf04:	add	x1, x1, #0x544
   1cf08:	add	x8, x20, #0x2
   1cf0c:	add	x2, x1, #0x8
   1cf10:	b	1cf24 <__cxa_demangle@@Base+0xa72c>
   1cf14:	adrp	x1, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1cf18:	add	x1, x1, #0x50f
   1cf1c:	add	x8, x20, #0x2
   1cf20:	add	x2, x1, #0x7
   1cf24:	mov	x0, x19
   1cf28:	str	x8, [x19]
   1cf2c:	ldp	x20, x19, [sp, #48]
   1cf30:	ldp	x22, x21, [sp, #32]
   1cf34:	ldp	x24, x23, [sp, #16]
   1cf38:	ldp	x29, x30, [sp], #64
   1cf3c:	b	1e24c <__cxa_demangle@@Base+0xba54>
   1cf40:	ldrb	w8, [x20, #2]
   1cf44:	cmp	w8, #0x31
   1cf48:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1cf4c:	ldrb	w8, [x20, #3]
   1cf50:	cmp	w8, #0x45
   1cf54:	b.ne	1cfc0 <__cxa_demangle@@Base+0xa7c8>  // b.any
   1cf58:	ldr	x21, [x19, #4912]
   1cf5c:	add	x8, x20, #0x4
   1cf60:	str	x8, [x19]
   1cf64:	ldr	x8, [x21, #8]
   1cf68:	add	x9, x8, #0x10
   1cf6c:	cmp	x9, #0xfef
   1cf70:	b.ls	1cf90 <__cxa_demangle@@Base+0xa798>  // b.plast
   1cf74:	mov	w0, #0x1000                	// #4096
   1cf78:	bl	ec00 <malloc@plt>
   1cf7c:	cbz	x0, 1cfd8 <__cxa_demangle@@Base+0xa7e0>
   1cf80:	mov	x8, xzr
   1cf84:	stp	x21, xzr, [x0]
   1cf88:	mov	x21, x0
   1cf8c:	str	x0, [x19, #4912]
   1cf90:	add	x9, x8, #0x10
   1cf94:	add	x0, x21, x8
   1cf98:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1cf9c:	add	x8, x8, #0xf20
   1cfa0:	mov	w10, #0x141                 	// #321
   1cfa4:	movk	w10, #0x101, lsl #16
   1cfa8:	mov	w11, #0x1                   	// #1
   1cfac:	str	x9, [x21, #8]
   1cfb0:	str	x8, [x0, #16]!
   1cfb4:	str	w10, [x0, #8]
   1cfb8:	strb	w11, [x0, #12]
   1cfbc:	b	1cfc4 <__cxa_demangle@@Base+0xa7cc>
   1cfc0:	mov	x0, xzr
   1cfc4:	ldp	x20, x19, [sp, #48]
   1cfc8:	ldp	x22, x21, [sp, #32]
   1cfcc:	ldp	x24, x23, [sp, #16]
   1cfd0:	ldp	x29, x30, [sp], #64
   1cfd4:	ret
   1cfd8:	bl	eeb0 <_ZSt9terminatev@plt>
   1cfdc:	stp	x29, x30, [sp, #-64]!
   1cfe0:	str	x23, [sp, #16]
   1cfe4:	stp	x22, x21, [sp, #32]
   1cfe8:	stp	x20, x19, [sp, #48]
   1cfec:	mov	x29, sp
   1cff0:	ldp	x23, x20, [x0]
   1cff4:	sub	x8, x20, x23
   1cff8:	cmp	x8, #0x2
   1cffc:	b.cc	1d2c8 <__cxa_demangle@@Base+0xaad0>  // b.lo, b.ul, b.last
   1d000:	ldrb	w8, [x23]
   1d004:	cmp	w8, #0x66
   1d008:	b.ne	1d2c8 <__cxa_demangle@@Base+0xaad0>  // b.any
   1d00c:	ldrb	w8, [x23, #1]
   1d010:	mov	x19, x0
   1d014:	cmp	w8, #0x70
   1d018:	b.ne	1d084 <__cxa_demangle@@Base+0xa88c>  // b.any
   1d01c:	add	x21, x23, #0x2
   1d020:	cmp	x21, x20
   1d024:	str	x21, [x19]
   1d028:	b.eq	1d148 <__cxa_demangle@@Base+0xa950>  // b.none
   1d02c:	ldrb	w8, [x21]
   1d030:	cmp	w8, #0x72
   1d034:	b.ne	1d040 <__cxa_demangle@@Base+0xa848>  // b.any
   1d038:	add	x21, x23, #0x3
   1d03c:	str	x21, [x19]
   1d040:	cmp	x21, x20
   1d044:	b.eq	1d158 <__cxa_demangle@@Base+0xa960>  // b.none
   1d048:	ldrb	w8, [x21]
   1d04c:	cmp	w8, #0x56
   1d050:	b.ne	1d05c <__cxa_demangle@@Base+0xa864>  // b.any
   1d054:	add	x21, x21, #0x1
   1d058:	str	x21, [x19]
   1d05c:	cmp	x21, x20
   1d060:	b.eq	1d148 <__cxa_demangle@@Base+0xa950>  // b.none
   1d064:	ldrb	w8, [x21]
   1d068:	cmp	w8, #0x4b
   1d06c:	b.ne	1d15c <__cxa_demangle@@Base+0xa964>  // b.any
   1d070:	add	x21, x21, #0x1
   1d074:	str	x21, [x19]
   1d078:	cmp	x20, x21
   1d07c:	b.ne	1d164 <__cxa_demangle@@Base+0xa96c>  // b.any
   1d080:	b	1d178 <__cxa_demangle@@Base+0xa980>
   1d084:	ldrb	w8, [x23]
   1d088:	cmp	w8, #0x66
   1d08c:	b.ne	1d2c8 <__cxa_demangle@@Base+0xaad0>  // b.any
   1d090:	ldrb	w8, [x23, #1]
   1d094:	cmp	w8, #0x4c
   1d098:	b.ne	1d2c8 <__cxa_demangle@@Base+0xaad0>  // b.any
   1d09c:	add	x22, x23, #0x2
   1d0a0:	cmp	x20, x22
   1d0a4:	str	x22, [x19]
   1d0a8:	b.eq	1d0c0 <__cxa_demangle@@Base+0xa8c8>  // b.none
   1d0ac:	ldrb	w21, [x22]
   1d0b0:	bl	ed40 <__ctype_b_loc@plt>
   1d0b4:	ldr	x8, [x0]
   1d0b8:	ldrh	w8, [x8, x21, lsl #1]
   1d0bc:	tbnz	w8, #11, 1d250 <__cxa_demangle@@Base+0xaa58>
   1d0c0:	mov	x8, xzr
   1d0c4:	mov	x10, xzr
   1d0c8:	cmp	x8, x10
   1d0cc:	mov	x0, xzr
   1d0d0:	b.eq	1d2cc <__cxa_demangle@@Base+0xaad4>  // b.none
   1d0d4:	cmp	x22, x20
   1d0d8:	b.eq	1d2cc <__cxa_demangle@@Base+0xaad4>  // b.none
   1d0dc:	ldrb	w8, [x22]
   1d0e0:	cmp	w8, #0x70
   1d0e4:	b.ne	1d2c8 <__cxa_demangle@@Base+0xaad0>  // b.any
   1d0e8:	add	x21, x22, #0x1
   1d0ec:	cmp	x21, x20
   1d0f0:	str	x21, [x19]
   1d0f4:	b.eq	1d298 <__cxa_demangle@@Base+0xaaa0>  // b.none
   1d0f8:	ldrb	w8, [x21]
   1d0fc:	cmp	w8, #0x72
   1d100:	b.ne	1d10c <__cxa_demangle@@Base+0xa914>  // b.any
   1d104:	add	x21, x22, #0x2
   1d108:	str	x21, [x19]
   1d10c:	cmp	x21, x20
   1d110:	b.eq	1d29c <__cxa_demangle@@Base+0xaaa4>  // b.none
   1d114:	ldrb	w8, [x21]
   1d118:	cmp	w8, #0x56
   1d11c:	b.ne	1d128 <__cxa_demangle@@Base+0xa930>  // b.any
   1d120:	add	x21, x21, #0x1
   1d124:	str	x21, [x19]
   1d128:	cmp	x21, x20
   1d12c:	b.eq	1d29c <__cxa_demangle@@Base+0xaaa4>  // b.none
   1d130:	ldrb	w8, [x21]
   1d134:	cmp	w8, #0x4b
   1d138:	b.ne	1d29c <__cxa_demangle@@Base+0xaaa4>  // b.any
   1d13c:	add	x21, x21, #0x1
   1d140:	str	x21, [x19]
   1d144:	b	1d29c <__cxa_demangle@@Base+0xaaa4>
   1d148:	mov	x21, x20
   1d14c:	cmp	x20, x21
   1d150:	b.ne	1d164 <__cxa_demangle@@Base+0xa96c>  // b.any
   1d154:	b	1d178 <__cxa_demangle@@Base+0xa980>
   1d158:	mov	x21, x20
   1d15c:	cmp	x20, x21
   1d160:	b.eq	1d178 <__cxa_demangle@@Base+0xa980>  // b.none
   1d164:	ldrb	w22, [x21]
   1d168:	bl	ed40 <__ctype_b_loc@plt>
   1d16c:	ldr	x8, [x0]
   1d170:	ldrh	w8, [x8, x22, lsl #1]
   1d174:	tbnz	w8, #11, 1d1f8 <__cxa_demangle@@Base+0xaa00>
   1d178:	mov	x22, xzr
   1d17c:	mov	x23, xzr
   1d180:	cmp	x21, x20
   1d184:	b.eq	1d2c8 <__cxa_demangle@@Base+0xaad0>  // b.none
   1d188:	ldrb	w8, [x21]
   1d18c:	cmp	w8, #0x5f
   1d190:	b.ne	1d2c8 <__cxa_demangle@@Base+0xaad0>  // b.any
   1d194:	ldr	x20, [x19, #4912]
   1d198:	add	x8, x21, #0x1
   1d19c:	str	x8, [x19]
   1d1a0:	ldr	x8, [x20, #8]
   1d1a4:	add	x9, x8, #0x20
   1d1a8:	cmp	x9, #0xff0
   1d1ac:	b.cc	1d1cc <__cxa_demangle@@Base+0xa9d4>  // b.lo, b.ul, b.last
   1d1b0:	mov	w0, #0x1000                	// #4096
   1d1b4:	bl	ec00 <malloc@plt>
   1d1b8:	cbz	x0, 1d328 <__cxa_demangle@@Base+0xab30>
   1d1bc:	mov	x8, xzr
   1d1c0:	stp	x20, xzr, [x0]
   1d1c4:	mov	x20, x0
   1d1c8:	str	x0, [x19, #4912]
   1d1cc:	add	x9, x8, #0x20
   1d1d0:	add	x0, x20, x8
   1d1d4:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1d1d8:	add	x8, x8, #0x540
   1d1dc:	mov	w10, #0x13b                 	// #315
   1d1e0:	movk	w10, #0x101, lsl #16
   1d1e4:	str	x9, [x20, #8]
   1d1e8:	str	x8, [x0, #16]!
   1d1ec:	str	w10, [x0, #8]
   1d1f0:	stp	x22, x23, [x0, #16]
   1d1f4:	b	1d2cc <__cxa_demangle@@Base+0xaad4>
   1d1f8:	add	x9, x21, #0x1
   1d1fc:	mov	x8, x9
   1d200:	cmp	x20, x9
   1d204:	str	x9, [x19]
   1d208:	b.eq	1d238 <__cxa_demangle@@Base+0xaa40>  // b.none
   1d20c:	mov	x9, x8
   1d210:	ldrb	w10, [x9], #1
   1d214:	ldr	x11, [x0]
   1d218:	ldrh	w10, [x11, x10, lsl #1]
   1d21c:	tbnz	w10, #11, 1d1fc <__cxa_demangle@@Base+0xaa04>
   1d220:	mov	x22, x21
   1d224:	sub	x23, x9, #0x1
   1d228:	mov	x21, x8
   1d22c:	cmp	x21, x20
   1d230:	b.ne	1d188 <__cxa_demangle@@Base+0xa990>  // b.any
   1d234:	b	1d2c8 <__cxa_demangle@@Base+0xaad0>
   1d238:	mov	x22, x21
   1d23c:	mov	x21, x8
   1d240:	mov	x23, x20
   1d244:	cmp	x21, x20
   1d248:	b.ne	1d188 <__cxa_demangle@@Base+0xa990>  // b.any
   1d24c:	b	1d2c8 <__cxa_demangle@@Base+0xaad0>
   1d250:	add	x10, x23, #0x3
   1d254:	mov	x9, x10
   1d258:	cmp	x20, x10
   1d25c:	str	x10, [x19]
   1d260:	b.eq	1d288 <__cxa_demangle@@Base+0xaa90>  // b.none
   1d264:	mov	x10, x9
   1d268:	ldrb	w8, [x10], #1
   1d26c:	ldr	x11, [x0]
   1d270:	ldrh	w8, [x11, x8, lsl #1]
   1d274:	tbnz	w8, #11, 1d254 <__cxa_demangle@@Base+0xaa5c>
   1d278:	mov	x8, x22
   1d27c:	sub	x10, x10, #0x1
   1d280:	mov	x22, x9
   1d284:	b	1d0c8 <__cxa_demangle@@Base+0xa8d0>
   1d288:	mov	x8, x22
   1d28c:	mov	x22, x9
   1d290:	mov	x10, x20
   1d294:	b	1d0c8 <__cxa_demangle@@Base+0xa8d0>
   1d298:	mov	x21, x20
   1d29c:	cmp	x20, x21
   1d2a0:	b.eq	1d2b8 <__cxa_demangle@@Base+0xaac0>  // b.none
   1d2a4:	ldrb	w22, [x21]
   1d2a8:	bl	ed40 <__ctype_b_loc@plt>
   1d2ac:	ldr	x8, [x0]
   1d2b0:	ldrh	w8, [x8, x22, lsl #1]
   1d2b4:	tbnz	w8, #11, 1d2e0 <__cxa_demangle@@Base+0xaae8>
   1d2b8:	mov	x22, xzr
   1d2bc:	mov	x23, xzr
   1d2c0:	cmp	x21, x20
   1d2c4:	b.ne	1d188 <__cxa_demangle@@Base+0xa990>  // b.any
   1d2c8:	mov	x0, xzr
   1d2cc:	ldp	x20, x19, [sp, #48]
   1d2d0:	ldp	x22, x21, [sp, #32]
   1d2d4:	ldr	x23, [sp, #16]
   1d2d8:	ldp	x29, x30, [sp], #64
   1d2dc:	ret
   1d2e0:	add	x9, x21, #0x1
   1d2e4:	mov	x8, x9
   1d2e8:	cmp	x20, x9
   1d2ec:	str	x9, [x19]
   1d2f0:	b.eq	1d318 <__cxa_demangle@@Base+0xab20>  // b.none
   1d2f4:	mov	x9, x8
   1d2f8:	ldrb	w10, [x9], #1
   1d2fc:	ldr	x11, [x0]
   1d300:	ldrh	w10, [x11, x10, lsl #1]
   1d304:	tbnz	w10, #11, 1d2e4 <__cxa_demangle@@Base+0xaaec>
   1d308:	mov	x22, x21
   1d30c:	sub	x23, x9, #0x1
   1d310:	mov	x21, x8
   1d314:	b	1d2c0 <__cxa_demangle@@Base+0xaac8>
   1d318:	mov	x22, x21
   1d31c:	mov	x21, x8
   1d320:	mov	x23, x20
   1d324:	b	1d2c0 <__cxa_demangle@@Base+0xaac8>
   1d328:	bl	eeb0 <_ZSt9terminatev@plt>
   1d32c:	stp	x29, x30, [sp, #-80]!
   1d330:	str	x25, [sp, #16]
   1d334:	stp	x24, x23, [sp, #32]
   1d338:	stp	x22, x21, [sp, #48]
   1d33c:	stp	x20, x19, [sp, #64]
   1d340:	mov	x29, sp
   1d344:	ldp	x8, x10, [x0]
   1d348:	cmp	x8, x10
   1d34c:	b.eq	1d3b8 <__cxa_demangle@@Base+0xabc0>  // b.none
   1d350:	ldrb	w9, [x8]
   1d354:	cmp	w9, #0x66
   1d358:	b.ne	1d3b8 <__cxa_demangle@@Base+0xabc0>  // b.any
   1d35c:	add	x9, x8, #0x1
   1d360:	mov	x19, x0
   1d364:	cmp	x10, x9
   1d368:	str	x9, [x0]
   1d36c:	b.eq	1d3b8 <__cxa_demangle@@Base+0xabc0>  // b.none
   1d370:	ldrb	w22, [x9]
   1d374:	mov	x0, xzr
   1d378:	sub	w9, w22, #0x4c
   1d37c:	cmp	w9, #0x26
   1d380:	b.hi	1d3bc <__cxa_demangle@@Base+0xabc4>  // b.pmore
   1d384:	adrp	x11, 2d000 <__cxa_call_unexpected@@Base+0xac>
   1d388:	add	x11, x11, #0xa82
   1d38c:	adr	x12, 1d3a0 <__cxa_demangle@@Base+0xaba8>
   1d390:	ldrb	w13, [x11, x9]
   1d394:	add	x12, x12, x13, lsl #2
   1d398:	mov	w21, #0x1                   	// #1
   1d39c:	br	x12
   1d3a0:	mov	w21, wzr
   1d3a4:	add	x9, x8, #0x2
   1d3a8:	sub	x10, x10, x9
   1d3ac:	cmp	x10, #0x2
   1d3b0:	str	x9, [x19]
   1d3b4:	b.cs	1d3d4 <__cxa_demangle@@Base+0xabdc>  // b.hs, b.nlast
   1d3b8:	mov	x0, xzr
   1d3bc:	ldp	x20, x19, [sp, #64]
   1d3c0:	ldp	x22, x21, [sp, #48]
   1d3c4:	ldp	x24, x23, [sp, #32]
   1d3c8:	ldr	x25, [sp, #16]
   1d3cc:	ldp	x29, x30, [sp], #80
   1d3d0:	ret
   1d3d4:	ldrb	w10, [x9]
   1d3d8:	cmp	w10, #0x61
   1d3dc:	b.ne	1d470 <__cxa_demangle@@Base+0xac78>  // b.any
   1d3e0:	ldrb	w10, [x8, #3]
   1d3e4:	cmp	w10, #0x61
   1d3e8:	b.ne	1d3f8 <__cxa_demangle@@Base+0xac00>  // b.any
   1d3ec:	adrp	x23, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1d3f0:	add	x23, x23, #0x394
   1d3f4:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d3f8:	ldrb	w10, [x9]
   1d3fc:	cmp	w10, #0x61
   1d400:	b.ne	1d470 <__cxa_demangle@@Base+0xac78>  // b.any
   1d404:	ldrb	w10, [x8, #3]
   1d408:	cmp	w10, #0x6e
   1d40c:	b.ne	1d420 <__cxa_demangle@@Base+0xac28>  // b.any
   1d410:	adrp	x23, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1d414:	add	x23, x23, #0x395
   1d418:	add	x24, x23, #0x1
   1d41c:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d420:	ldrb	w10, [x9]
   1d424:	cmp	w10, #0x61
   1d428:	b.ne	1d470 <__cxa_demangle@@Base+0xac78>  // b.any
   1d42c:	ldrb	w10, [x8, #3]
   1d430:	cmp	w10, #0x4e
   1d434:	b.ne	1d444 <__cxa_demangle@@Base+0xac4c>  // b.any
   1d438:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d43c:	add	x23, x23, #0xc59
   1d440:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d444:	ldrb	w10, [x9]
   1d448:	cmp	w10, #0x61
   1d44c:	b.ne	1d470 <__cxa_demangle@@Base+0xac78>  // b.any
   1d450:	ldrb	w10, [x8, #3]
   1d454:	cmp	w10, #0x53
   1d458:	b.ne	1d46c <__cxa_demangle@@Base+0xac74>  // b.any
   1d45c:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d460:	add	x23, x23, #0xd75
   1d464:	add	x24, x23, #0x1
   1d468:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d46c:	ldrb	w10, [x9]
   1d470:	cmp	w10, #0x63
   1d474:	b.ne	1d494 <__cxa_demangle@@Base+0xac9c>  // b.any
   1d478:	ldrb	w10, [x8, #3]
   1d47c:	cmp	w10, #0x6d
   1d480:	b.ne	1d494 <__cxa_demangle@@Base+0xac9c>  // b.any
   1d484:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d488:	add	x23, x23, #0xc79
   1d48c:	add	x24, x23, #0x1
   1d490:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d494:	ldrb	w10, [x9]
   1d498:	cmp	w10, #0x64
   1d49c:	b.ne	1d504 <__cxa_demangle@@Base+0xad0c>  // b.any
   1d4a0:	ldrb	w10, [x8, #3]
   1d4a4:	cmp	w10, #0x73
   1d4a8:	b.ne	1d4b8 <__cxa_demangle@@Base+0xacc0>  // b.any
   1d4ac:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d4b0:	add	x23, x23, #0x4c0
   1d4b4:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d4b8:	ldrb	w10, [x9]
   1d4bc:	cmp	w10, #0x64
   1d4c0:	b.ne	1d504 <__cxa_demangle@@Base+0xad0c>  // b.any
   1d4c4:	ldrb	w10, [x8, #3]
   1d4c8:	cmp	w10, #0x76
   1d4cc:	b.ne	1d4e0 <__cxa_demangle@@Base+0xace8>  // b.any
   1d4d0:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d4d4:	add	x23, x23, #0xcb9
   1d4d8:	add	x24, x23, #0x1
   1d4dc:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d4e0:	ldrb	w10, [x9]
   1d4e4:	cmp	w10, #0x64
   1d4e8:	b.ne	1d508 <__cxa_demangle@@Base+0xad10>  // b.any
   1d4ec:	ldrb	w10, [x8, #3]
   1d4f0:	cmp	w10, #0x56
   1d4f4:	b.ne	1d504 <__cxa_demangle@@Base+0xad0c>  // b.any
   1d4f8:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d4fc:	add	x23, x23, #0xcc3
   1d500:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d504:	ldrb	w10, [x9]
   1d508:	cmp	w10, #0x65
   1d50c:	b.ne	1d52c <__cxa_demangle@@Base+0xad34>  // b.any
   1d510:	ldrb	w10, [x8, #3]
   1d514:	cmp	w10, #0x6f
   1d518:	b.ne	1d52c <__cxa_demangle@@Base+0xad34>  // b.any
   1d51c:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d520:	add	x23, x23, #0xcce
   1d524:	add	x24, x23, #0x1
   1d528:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d52c:	ldrb	w10, [x9]
   1d530:	cmp	w10, #0x65
   1d534:	b.ne	1d578 <__cxa_demangle@@Base+0xad80>  // b.any
   1d538:	ldrb	w10, [x8, #3]
   1d53c:	cmp	w10, #0x4f
   1d540:	b.ne	1d550 <__cxa_demangle@@Base+0xad58>  // b.any
   1d544:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d548:	add	x23, x23, #0xcd8
   1d54c:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d550:	ldrb	w10, [x9]
   1d554:	cmp	w10, #0x65
   1d558:	b.ne	1d578 <__cxa_demangle@@Base+0xad80>  // b.any
   1d55c:	ldrb	w10, [x8, #3]
   1d560:	cmp	w10, #0x71
   1d564:	b.ne	1d574 <__cxa_demangle@@Base+0xad7c>  // b.any
   1d568:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d56c:	add	x23, x23, #0xce3
   1d570:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d574:	ldrb	w10, [x9]
   1d578:	cmp	w10, #0x67
   1d57c:	b.ne	1d598 <__cxa_demangle@@Base+0xada0>  // b.any
   1d580:	ldrb	w10, [x8, #3]
   1d584:	cmp	w10, #0x65
   1d588:	b.ne	1d598 <__cxa_demangle@@Base+0xada0>  // b.any
   1d58c:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d590:	add	x23, x23, #0xe18
   1d594:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d598:	ldrb	w10, [x9]
   1d59c:	cmp	w10, #0x67
   1d5a0:	b.ne	1d5c4 <__cxa_demangle@@Base+0xadcc>  // b.any
   1d5a4:	ldrb	w10, [x8, #3]
   1d5a8:	cmp	w10, #0x74
   1d5ac:	b.ne	1d5c0 <__cxa_demangle@@Base+0xadc8>  // b.any
   1d5b0:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d5b4:	add	x23, x23, #0xed7
   1d5b8:	add	x24, x23, #0x1
   1d5bc:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d5c0:	ldrb	w10, [x9]
   1d5c4:	cmp	w10, #0x6c
   1d5c8:	b.ne	1d5e4 <__cxa_demangle@@Base+0xadec>  // b.any
   1d5cc:	ldrb	w10, [x8, #3]
   1d5d0:	cmp	w10, #0x65
   1d5d4:	b.ne	1d5e4 <__cxa_demangle@@Base+0xadec>  // b.any
   1d5d8:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d5dc:	add	x23, x23, #0xd25
   1d5e0:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d5e4:	ldrb	w10, [x9]
   1d5e8:	cmp	w10, #0x6c
   1d5ec:	b.ne	1d658 <__cxa_demangle@@Base+0xae60>  // b.any
   1d5f0:	ldrb	w10, [x8, #3]
   1d5f4:	cmp	w10, #0x73
   1d5f8:	b.ne	1d608 <__cxa_demangle@@Base+0xae10>  // b.any
   1d5fc:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d600:	add	x23, x23, #0xd19
   1d604:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d608:	ldrb	w10, [x9]
   1d60c:	cmp	w10, #0x6c
   1d610:	b.ne	1d658 <__cxa_demangle@@Base+0xae60>  // b.any
   1d614:	ldrb	w10, [x8, #3]
   1d618:	cmp	w10, #0x53
   1d61c:	b.ne	1d630 <__cxa_demangle@@Base+0xae38>  // b.any
   1d620:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d624:	add	x23, x23, #0xd24
   1d628:	add	x24, x23, #0x3
   1d62c:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d630:	ldrb	w10, [x9]
   1d634:	cmp	w10, #0x6c
   1d638:	b.ne	1d65c <__cxa_demangle@@Base+0xae64>  // b.any
   1d63c:	ldrb	w10, [x8, #3]
   1d640:	cmp	w10, #0x74
   1d644:	b.ne	1d658 <__cxa_demangle@@Base+0xae60>  // b.any
   1d648:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d64c:	add	x23, x23, #0xd1a
   1d650:	add	x24, x23, #0x1
   1d654:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d658:	ldrb	w10, [x9]
   1d65c:	cmp	w10, #0x6d
   1d660:	b.ne	1d680 <__cxa_demangle@@Base+0xae88>  // b.any
   1d664:	ldrb	w10, [x8, #3]
   1d668:	cmp	w10, #0x69
   1d66c:	b.ne	1d680 <__cxa_demangle@@Base+0xae88>  // b.any
   1d670:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d674:	add	x23, x23, #0xd5b
   1d678:	add	x24, x23, #0x1
   1d67c:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d680:	ldrb	w10, [x9]
   1d684:	cmp	w10, #0x6d
   1d688:	b.ne	1d6f0 <__cxa_demangle@@Base+0xaef8>  // b.any
   1d68c:	ldrb	w10, [x8, #3]
   1d690:	cmp	w10, #0x49
   1d694:	b.ne	1d6a4 <__cxa_demangle@@Base+0xaeac>  // b.any
   1d698:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d69c:	add	x23, x23, #0xd44
   1d6a0:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d6a4:	ldrb	w10, [x9]
   1d6a8:	cmp	w10, #0x6d
   1d6ac:	b.ne	1d6f0 <__cxa_demangle@@Base+0xaef8>  // b.any
   1d6b0:	ldrb	w10, [x8, #3]
   1d6b4:	cmp	w10, #0x6c
   1d6b8:	b.ne	1d6cc <__cxa_demangle@@Base+0xaed4>  // b.any
   1d6bc:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d6c0:	add	x23, x23, #0x4c1
   1d6c4:	add	x24, x23, #0x1
   1d6c8:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d6cc:	ldrb	w10, [x9]
   1d6d0:	cmp	w10, #0x6d
   1d6d4:	b.ne	1d6f4 <__cxa_demangle@@Base+0xaefc>  // b.any
   1d6d8:	ldrb	w10, [x8, #3]
   1d6dc:	cmp	w10, #0x4c
   1d6e0:	b.ne	1d6f0 <__cxa_demangle@@Base+0xaef8>  // b.any
   1d6e4:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d6e8:	add	x23, x23, #0xd4f
   1d6ec:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d6f0:	ldrb	w10, [x9]
   1d6f4:	cmp	w10, #0x6e
   1d6f8:	b.ne	1d714 <__cxa_demangle@@Base+0xaf1c>  // b.any
   1d6fc:	ldrb	w10, [x8, #3]
   1d700:	cmp	w10, #0x65
   1d704:	b.ne	1d714 <__cxa_demangle@@Base+0xaf1c>  // b.any
   1d708:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d70c:	add	x23, x23, #0xd74
   1d710:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d714:	ldrb	w10, [x9]
   1d718:	cmp	w10, #0x6f
   1d71c:	b.ne	1d784 <__cxa_demangle@@Base+0xaf8c>  // b.any
   1d720:	ldrb	w10, [x8, #3]
   1d724:	cmp	w10, #0x6f
   1d728:	b.ne	1d738 <__cxa_demangle@@Base+0xaf40>  // b.any
   1d72c:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d730:	add	x23, x23, #0xd96
   1d734:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d738:	ldrb	w10, [x9]
   1d73c:	cmp	w10, #0x6f
   1d740:	b.ne	1d784 <__cxa_demangle@@Base+0xaf8c>  // b.any
   1d744:	ldrb	w10, [x8, #3]
   1d748:	cmp	w10, #0x72
   1d74c:	b.ne	1d760 <__cxa_demangle@@Base+0xaf68>  // b.any
   1d750:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d754:	add	x23, x23, #0xda1
   1d758:	add	x24, x23, #0x1
   1d75c:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d760:	ldrb	w10, [x9]
   1d764:	cmp	w10, #0x6f
   1d768:	b.ne	1d788 <__cxa_demangle@@Base+0xaf90>  // b.any
   1d76c:	ldrb	w10, [x8, #3]
   1d770:	cmp	w10, #0x52
   1d774:	b.ne	1d784 <__cxa_demangle@@Base+0xaf8c>  // b.any
   1d778:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d77c:	add	x23, x23, #0xdab
   1d780:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d784:	ldrb	w10, [x9]
   1d788:	cmp	w10, #0x70
   1d78c:	b.ne	1d7ac <__cxa_demangle@@Base+0xafb4>  // b.any
   1d790:	ldrb	w10, [x8, #3]
   1d794:	cmp	w10, #0x6c
   1d798:	b.ne	1d7ac <__cxa_demangle@@Base+0xafb4>  // b.any
   1d79c:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d7a0:	add	x23, x23, #0xdd8
   1d7a4:	add	x24, x23, #0x1
   1d7a8:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d7ac:	ldrb	w10, [x9]
   1d7b0:	cmp	w10, #0x70
   1d7b4:	b.ne	1d7d4 <__cxa_demangle@@Base+0xafdc>  // b.any
   1d7b8:	ldrb	w10, [x8, #3]
   1d7bc:	cmp	w10, #0x4c
   1d7c0:	b.ne	1d7d0 <__cxa_demangle@@Base+0xafd8>  // b.any
   1d7c4:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d7c8:	add	x23, x23, #0xdcc
   1d7cc:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d7d0:	ldrb	w10, [x9]
   1d7d4:	cmp	w10, #0x72
   1d7d8:	b.ne	1d7f8 <__cxa_demangle@@Base+0xb000>  // b.any
   1d7dc:	ldrb	w10, [x8, #3]
   1d7e0:	cmp	w10, #0x6d
   1d7e4:	b.ne	1d7f8 <__cxa_demangle@@Base+0xb000>  // b.any
   1d7e8:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d7ec:	add	x23, x23, #0xdf7
   1d7f0:	add	x24, x23, #0x1
   1d7f4:	b	1d81c <__cxa_demangle@@Base+0xb024>
   1d7f8:	ldrb	w10, [x9]
   1d7fc:	cmp	w10, #0x72
   1d800:	b.ne	1d3b8 <__cxa_demangle@@Base+0xabc0>  // b.any
   1d804:	ldrb	w10, [x8, #3]
   1d808:	cmp	w10, #0x4d
   1d80c:	b.ne	1d8cc <__cxa_demangle@@Base+0xb0d4>  // b.any
   1d810:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d814:	add	x23, x23, #0xe01
   1d818:	add	x24, x23, #0x2
   1d81c:	add	x8, x8, #0x4
   1d820:	mov	x0, x19
   1d824:	str	x8, [x19]
   1d828:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1d82c:	cbz	x0, 1d3bc <__cxa_demangle@@Base+0xabc4>
   1d830:	mov	x20, x0
   1d834:	cmp	w22, #0x52
   1d838:	b.eq	1d844 <__cxa_demangle@@Base+0xb04c>  // b.none
   1d83c:	cmp	w22, #0x4c
   1d840:	b.ne	1d864 <__cxa_demangle@@Base+0xb06c>  // b.any
   1d844:	mov	x0, x19
   1d848:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1d84c:	cbz	x0, 1d3bc <__cxa_demangle@@Base+0xabc4>
   1d850:	cmp	w21, #0x0
   1d854:	csel	x8, x0, x20, ne  // ne = any
   1d858:	csel	x22, x20, x0, ne  // ne = any
   1d85c:	mov	x20, x8
   1d860:	b	1d868 <__cxa_demangle@@Base+0xb070>
   1d864:	mov	x22, xzr
   1d868:	ldr	x25, [x19, #4912]
   1d86c:	ldr	x8, [x25, #8]
   1d870:	add	x9, x8, #0x40
   1d874:	cmp	x9, #0xff0
   1d878:	b.cc	1d898 <__cxa_demangle@@Base+0xb0a0>  // b.lo, b.ul, b.last
   1d87c:	mov	w0, #0x1000                	// #4096
   1d880:	bl	ec00 <malloc@plt>
   1d884:	cbz	x0, 1d914 <__cxa_demangle@@Base+0xb11c>
   1d888:	mov	x8, xzr
   1d88c:	stp	x25, xzr, [x0]
   1d890:	mov	x25, x0
   1d894:	str	x0, [x19, #4912]
   1d898:	add	x9, x8, #0x40
   1d89c:	add	x0, x25, x8
   1d8a0:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1d8a4:	add	x8, x8, #0x5b0
   1d8a8:	mov	w10, #0x13e                 	// #318
   1d8ac:	movk	w10, #0x101, lsl #16
   1d8b0:	str	x9, [x25, #8]
   1d8b4:	str	x8, [x0, #16]!
   1d8b8:	str	w10, [x0, #8]
   1d8bc:	stp	x20, x22, [x0, #16]
   1d8c0:	stp	x23, x24, [x0, #32]
   1d8c4:	strb	w21, [x0, #48]
   1d8c8:	b	1d3bc <__cxa_demangle@@Base+0xabc4>
   1d8cc:	ldrb	w10, [x9]
   1d8d0:	cmp	w10, #0x72
   1d8d4:	b.ne	1d3b8 <__cxa_demangle@@Base+0xabc0>  // b.any
   1d8d8:	ldrb	w10, [x8, #3]
   1d8dc:	cmp	w10, #0x73
   1d8e0:	b.ne	1d8f0 <__cxa_demangle@@Base+0xb0f8>  // b.any
   1d8e4:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d8e8:	add	x23, x23, #0xe0c
   1d8ec:	b	1d818 <__cxa_demangle@@Base+0xb020>
   1d8f0:	ldrb	w9, [x9]
   1d8f4:	cmp	w9, #0x72
   1d8f8:	b.ne	1d3b8 <__cxa_demangle@@Base+0xabc0>  // b.any
   1d8fc:	ldrb	w9, [x8, #3]
   1d900:	cmp	w9, #0x53
   1d904:	b.ne	1d3b8 <__cxa_demangle@@Base+0xabc0>  // b.any
   1d908:	adrp	x23, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1d90c:	add	x23, x23, #0xe17
   1d910:	b	1d628 <__cxa_demangle@@Base+0xae30>
   1d914:	bl	eeb0 <_ZSt9terminatev@plt>
   1d918:	stp	x29, x30, [sp, #-64]!
   1d91c:	stp	x24, x23, [sp, #16]
   1d920:	stp	x22, x21, [sp, #32]
   1d924:	stp	x20, x19, [sp, #48]
   1d928:	mov	x29, sp
   1d92c:	mov	x19, x2
   1d930:	mov	x20, x1
   1d934:	mov	x23, x0
   1d938:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1d93c:	cbz	x0, 1d9b0 <__cxa_demangle@@Base+0xb1b8>
   1d940:	mov	x21, x0
   1d944:	mov	x0, x23
   1d948:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1d94c:	cbz	x0, 1d9b0 <__cxa_demangle@@Base+0xb1b8>
   1d950:	ldr	x24, [x23, #4912]
   1d954:	mov	x22, x0
   1d958:	ldr	x8, [x24, #8]
   1d95c:	add	x9, x8, #0x30
   1d960:	cmp	x9, #0xff0
   1d964:	b.cc	1d984 <__cxa_demangle@@Base+0xb18c>  // b.lo, b.ul, b.last
   1d968:	mov	w0, #0x1000                	// #4096
   1d96c:	bl	ec00 <malloc@plt>
   1d970:	cbz	x0, 1d9c4 <__cxa_demangle@@Base+0xb1cc>
   1d974:	mov	x8, xzr
   1d978:	stp	x24, xzr, [x0]
   1d97c:	mov	x24, x0
   1d980:	str	x0, [x23, #4912]
   1d984:	add	x9, x8, #0x30
   1d988:	add	x0, x24, x8
   1d98c:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1d990:	add	x8, x8, #0x690
   1d994:	mov	w10, #0x12f                 	// #303
   1d998:	movk	w10, #0x101, lsl #16
   1d99c:	str	x9, [x24, #8]
   1d9a0:	str	x8, [x0, #16]!
   1d9a4:	str	w10, [x0, #8]
   1d9a8:	stp	x21, x20, [x0, #16]
   1d9ac:	stp	x19, x22, [x0, #32]
   1d9b0:	ldp	x20, x19, [sp, #48]
   1d9b4:	ldp	x22, x21, [sp, #32]
   1d9b8:	ldp	x24, x23, [sp, #16]
   1d9bc:	ldp	x29, x30, [sp], #64
   1d9c0:	ret
   1d9c4:	bl	eeb0 <_ZSt9terminatev@plt>
   1d9c8:	stp	x29, x30, [sp, #-96]!
   1d9cc:	stp	x28, x27, [sp, #16]
   1d9d0:	stp	x26, x25, [sp, #32]
   1d9d4:	stp	x24, x23, [sp, #48]
   1d9d8:	stp	x22, x21, [sp, #64]
   1d9dc:	stp	x20, x19, [sp, #80]
   1d9e0:	mov	x29, sp
   1d9e4:	ldp	x8, x9, [x0]
   1d9e8:	mov	x19, x0
   1d9ec:	sub	x10, x9, x8
   1d9f0:	cmp	x10, #0x3
   1d9f4:	b.cs	1da08 <__cxa_demangle@@Base+0xb210>  // b.hs, b.nlast
   1d9f8:	cmp	x10, #0x2
   1d9fc:	b.eq	1dae8 <__cxa_demangle@@Base+0xb2f0>  // b.none
   1da00:	mov	w23, wzr
   1da04:	b	1db50 <__cxa_demangle@@Base+0xb358>
   1da08:	ldrb	w10, [x8]
   1da0c:	cmp	w10, #0x73
   1da10:	b.ne	1daec <__cxa_demangle@@Base+0xb2f4>  // b.any
   1da14:	ldrb	w10, [x8, #1]
   1da18:	cmp	w10, #0x72
   1da1c:	b.ne	1dae8 <__cxa_demangle@@Base+0xb2f0>  // b.any
   1da20:	ldrb	w10, [x8, #2]
   1da24:	cmp	w10, #0x4e
   1da28:	b.ne	1dae8 <__cxa_demangle@@Base+0xb2f0>  // b.any
   1da2c:	add	x8, x8, #0x3
   1da30:	mov	x0, x19
   1da34:	str	x8, [x19]
   1da38:	bl	220b4 <__cxa_demangle@@Base+0xf8bc>
   1da3c:	cbz	x0, 1dfdc <__cxa_demangle@@Base+0xb7e4>
   1da40:	ldp	x8, x9, [x19]
   1da44:	adrp	x23, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   1da48:	mov	x20, x0
   1da4c:	add	x23, x23, #0x490
   1da50:	cmp	x9, x8
   1da54:	b.eq	1dacc <__cxa_demangle@@Base+0xb2d4>  // b.none
   1da58:	ldrb	w8, [x8]
   1da5c:	cmp	w8, #0x49
   1da60:	b.ne	1dacc <__cxa_demangle@@Base+0xb2d4>  // b.any
   1da64:	mov	x0, x19
   1da68:	mov	w1, wzr
   1da6c:	bl	18f34 <__cxa_demangle@@Base+0x673c>
   1da70:	cbz	x0, 1dfdc <__cxa_demangle@@Base+0xb7e4>
   1da74:	ldr	x22, [x19, #4912]
   1da78:	mov	x21, x0
   1da7c:	ldr	x8, [x22, #8]
   1da80:	add	x9, x8, #0x20
   1da84:	cmp	x9, #0xff0
   1da88:	b.cc	1daa8 <__cxa_demangle@@Base+0xb2b0>  // b.lo, b.ul, b.last
   1da8c:	mov	w0, #0x1000                	// #4096
   1da90:	bl	ec00 <malloc@plt>
   1da94:	cbz	x0, 1dcb0 <__cxa_demangle@@Base+0xb4b8>
   1da98:	mov	x8, xzr
   1da9c:	stp	x22, xzr, [x0]
   1daa0:	mov	x22, x0
   1daa4:	str	x0, [x19, #4912]
   1daa8:	add	x9, x8, #0x20
   1daac:	add	x8, x22, x8
   1dab0:	mov	w10, #0x125                 	// #293
   1dab4:	str	x9, [x22, #8]
   1dab8:	str	x23, [x8, #16]!
   1dabc:	movk	w10, #0x101, lsl #16
   1dac0:	stp	x20, x21, [x8, #16]
   1dac4:	mov	x20, x8
   1dac8:	str	w10, [x8, #8]
   1dacc:	adrp	x24, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1dad0:	mov	w25, #0x116                 	// #278
   1dad4:	mov	w26, #0x125                 	// #293
   1dad8:	add	x24, x24, #0x930
   1dadc:	movk	w25, #0x101, lsl #16
   1dae0:	movk	w26, #0x101, lsl #16
   1dae4:	b	1dbf0 <__cxa_demangle@@Base+0xb3f8>
   1dae8:	ldrb	w10, [x8]
   1daec:	cmp	w10, #0x67
   1daf0:	b.ne	1db1c <__cxa_demangle@@Base+0xb324>  // b.any
   1daf4:	ldrb	w10, [x8, #1]
   1daf8:	cmp	w10, #0x73
   1dafc:	b.ne	1db1c <__cxa_demangle@@Base+0xb324>  // b.any
   1db00:	add	x8, x8, #0x2
   1db04:	sub	x10, x9, x8
   1db08:	cmp	x10, #0x2
   1db0c:	mov	w23, #0x1                   	// #1
   1db10:	str	x8, [x19]
   1db14:	b.cs	1db20 <__cxa_demangle@@Base+0xb328>  // b.hs, b.nlast
   1db18:	b	1db50 <__cxa_demangle@@Base+0xb358>
   1db1c:	mov	w23, wzr
   1db20:	ldrb	w10, [x8]
   1db24:	cmp	w10, #0x73
   1db28:	b.ne	1db50 <__cxa_demangle@@Base+0xb358>  // b.any
   1db2c:	ldrb	w10, [x8, #1]
   1db30:	cmp	w10, #0x72
   1db34:	b.ne	1db50 <__cxa_demangle@@Base+0xb358>  // b.any
   1db38:	add	x8, x8, #0x2
   1db3c:	cmp	x9, x8
   1db40:	str	x8, [x19]
   1db44:	b.ne	1dcb4 <__cxa_demangle@@Base+0xb4bc>  // b.any
   1db48:	mov	x20, xzr
   1db4c:	b	1dcb8 <__cxa_demangle@@Base+0xb4c0>
   1db50:	mov	x0, x19
   1db54:	bl	221c8 <__cxa_demangle@@Base+0xf9d0>
   1db58:	mov	x22, x0
   1db5c:	cbz	x0, 1dfe0 <__cxa_demangle@@Base+0xb7e8>
   1db60:	cbz	w23, 1dfe0 <__cxa_demangle@@Base+0xb7e8>
   1db64:	ldr	x20, [x19, #4912]
   1db68:	ldr	x8, [x20, #8]
   1db6c:	add	x9, x8, #0x20
   1db70:	cmp	x9, #0xff0
   1db74:	b.cc	1db94 <__cxa_demangle@@Base+0xb39c>  // b.lo, b.ul, b.last
   1db78:	mov	w0, #0x1000                	// #4096
   1db7c:	bl	ec00 <malloc@plt>
   1db80:	cbz	x0, 1dcb0 <__cxa_demangle@@Base+0xb4b8>
   1db84:	mov	x8, xzr
   1db88:	stp	x20, xzr, [x0]
   1db8c:	mov	x20, x0
   1db90:	str	x0, [x19, #4912]
   1db94:	adrp	x10, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1db98:	add	x9, x8, #0x20
   1db9c:	add	x8, x20, x8
   1dba0:	add	x10, x10, #0xaf0
   1dba4:	mov	w11, #0x126                 	// #294
   1dba8:	movk	w11, #0x101, lsl #16
   1dbac:	str	x9, [x20, #8]
   1dbb0:	str	x10, [x8, #16]!
   1dbb4:	str	w11, [x8, #8]
   1dbb8:	str	x22, [x8, #16]
   1dbbc:	mov	x22, x8
   1dbc0:	b	1dfe0 <__cxa_demangle@@Base+0xb7e8>
   1dbc4:	mov	x8, xzr
   1dbc8:	stp	x22, xzr, [x0]
   1dbcc:	mov	x22, x0
   1dbd0:	str	x0, [x19, #4912]
   1dbd4:	add	x9, x8, #0x20
   1dbd8:	add	x8, x22, x8
   1dbdc:	str	x9, [x22, #8]
   1dbe0:	str	x24, [x8, #16]!
   1dbe4:	str	w25, [x8, #8]
   1dbe8:	stp	x20, x21, [x8, #16]
   1dbec:	mov	x20, x8
   1dbf0:	ldp	x8, x9, [x19]
   1dbf4:	cmp	x8, x9
   1dbf8:	b.eq	1dc08 <__cxa_demangle@@Base+0xb410>  // b.none
   1dbfc:	ldrb	w9, [x8]
   1dc00:	cmp	w9, #0x45
   1dc04:	b.eq	1df74 <__cxa_demangle@@Base+0xb77c>  // b.none
   1dc08:	mov	x0, x19
   1dc0c:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   1dc10:	cbz	x0, 1dfdc <__cxa_demangle@@Base+0xb7e4>
   1dc14:	ldp	x8, x9, [x19]
   1dc18:	mov	x21, x0
   1dc1c:	cmp	x9, x8
   1dc20:	b.eq	1dc90 <__cxa_demangle@@Base+0xb498>  // b.none
   1dc24:	ldrb	w8, [x8]
   1dc28:	cmp	w8, #0x49
   1dc2c:	b.ne	1dc90 <__cxa_demangle@@Base+0xb498>  // b.any
   1dc30:	mov	x0, x19
   1dc34:	mov	w1, wzr
   1dc38:	bl	18f34 <__cxa_demangle@@Base+0x673c>
   1dc3c:	mov	x22, x0
   1dc40:	cbz	x0, 1dfe0 <__cxa_demangle@@Base+0xb7e8>
   1dc44:	ldr	x27, [x19, #4912]
   1dc48:	ldr	x8, [x27, #8]
   1dc4c:	add	x9, x8, #0x20
   1dc50:	cmp	x9, #0xff0
   1dc54:	b.cc	1dc74 <__cxa_demangle@@Base+0xb47c>  // b.lo, b.ul, b.last
   1dc58:	mov	w0, #0x1000                	// #4096
   1dc5c:	bl	ec00 <malloc@plt>
   1dc60:	cbz	x0, 1dcb0 <__cxa_demangle@@Base+0xb4b8>
   1dc64:	mov	x8, xzr
   1dc68:	stp	x27, xzr, [x0]
   1dc6c:	mov	x27, x0
   1dc70:	str	x0, [x19, #4912]
   1dc74:	add	x9, x8, #0x20
   1dc78:	add	x8, x27, x8
   1dc7c:	str	x9, [x27, #8]
   1dc80:	str	x23, [x8, #16]!
   1dc84:	stp	x21, x22, [x8, #16]
   1dc88:	mov	x21, x8
   1dc8c:	str	w26, [x8, #8]
   1dc90:	ldr	x22, [x19, #4912]
   1dc94:	ldr	x8, [x22, #8]
   1dc98:	add	x9, x8, #0x20
   1dc9c:	cmp	x9, #0xff0
   1dca0:	b.cc	1dbd4 <__cxa_demangle@@Base+0xb3dc>  // b.lo, b.ul, b.last
   1dca4:	mov	w0, #0x1000                	// #4096
   1dca8:	bl	ec00 <malloc@plt>
   1dcac:	cbnz	x0, 1dbc4 <__cxa_demangle@@Base+0xb3cc>
   1dcb0:	bl	eeb0 <_ZSt9terminatev@plt>
   1dcb4:	ldrb	w20, [x8]
   1dcb8:	bl	ed40 <__ctype_b_loc@plt>
   1dcbc:	ldr	x8, [x0]
   1dcc0:	ldrh	w8, [x8, x20, lsl #1]
   1dcc4:	tbnz	w8, #11, 1dd64 <__cxa_demangle@@Base+0xb56c>
   1dcc8:	mov	x0, x19
   1dccc:	bl	220b4 <__cxa_demangle@@Base+0xf8bc>
   1dcd0:	cbz	x0, 1dfdc <__cxa_demangle@@Base+0xb7e4>
   1dcd4:	ldp	x8, x9, [x19]
   1dcd8:	mov	x20, x0
   1dcdc:	cmp	x9, x8
   1dce0:	b.eq	1df04 <__cxa_demangle@@Base+0xb70c>  // b.none
   1dce4:	ldrb	w8, [x8]
   1dce8:	cmp	w8, #0x49
   1dcec:	b.ne	1df04 <__cxa_demangle@@Base+0xb70c>  // b.any
   1dcf0:	mov	x0, x19
   1dcf4:	mov	w1, wzr
   1dcf8:	bl	18f34 <__cxa_demangle@@Base+0x673c>
   1dcfc:	cbz	x0, 1dfdc <__cxa_demangle@@Base+0xb7e4>
   1dd00:	ldr	x22, [x19, #4912]
   1dd04:	mov	x21, x0
   1dd08:	ldr	x8, [x22, #8]
   1dd0c:	add	x9, x8, #0x20
   1dd10:	cmp	x9, #0xff0
   1dd14:	b.cc	1dd34 <__cxa_demangle@@Base+0xb53c>  // b.lo, b.ul, b.last
   1dd18:	mov	w0, #0x1000                	// #4096
   1dd1c:	bl	ec00 <malloc@plt>
   1dd20:	cbz	x0, 1dcb0 <__cxa_demangle@@Base+0xb4b8>
   1dd24:	mov	x8, xzr
   1dd28:	stp	x22, xzr, [x0]
   1dd2c:	mov	x22, x0
   1dd30:	str	x0, [x19, #4912]
   1dd34:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   1dd38:	add	x9, x8, #0x20
   1dd3c:	add	x8, x22, x8
   1dd40:	add	x10, x10, #0x490
   1dd44:	mov	w11, #0x125                 	// #293
   1dd48:	str	x9, [x22, #8]
   1dd4c:	str	x10, [x8, #16]!
   1dd50:	movk	w11, #0x101, lsl #16
   1dd54:	stp	x20, x21, [x8, #16]
   1dd58:	mov	x20, x8
   1dd5c:	str	w11, [x8, #8]
   1dd60:	b	1df08 <__cxa_demangle@@Base+0xb710>
   1dd64:	mov	x0, x19
   1dd68:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   1dd6c:	cbz	x0, 1dfdc <__cxa_demangle@@Base+0xb7e4>
   1dd70:	adrp	x26, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1dd74:	mov	w27, #0x116                 	// #278
   1dd78:	adrp	x28, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   1dd7c:	mov	w24, #0x125                 	// #293
   1dd80:	mov	x21, x0
   1dd84:	mov	x20, xzr
   1dd88:	add	x26, x26, #0x930
   1dd8c:	movk	w27, #0x101, lsl #16
   1dd90:	add	x28, x28, #0x490
   1dd94:	movk	w24, #0x101, lsl #16
   1dd98:	b	1ddb0 <__cxa_demangle@@Base+0xb5b8>
   1dd9c:	mov	x0, x19
   1dda0:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   1dda4:	mov	x21, x0
   1dda8:	mov	x22, xzr
   1ddac:	cbz	x0, 1dfe0 <__cxa_demangle@@Base+0xb7e8>
   1ddb0:	ldp	x8, x9, [x19]
   1ddb4:	cmp	x9, x8
   1ddb8:	b.eq	1de28 <__cxa_demangle@@Base+0xb630>  // b.none
   1ddbc:	ldrb	w8, [x8]
   1ddc0:	cmp	w8, #0x49
   1ddc4:	b.ne	1de28 <__cxa_demangle@@Base+0xb630>  // b.any
   1ddc8:	mov	x0, x19
   1ddcc:	mov	w1, wzr
   1ddd0:	bl	18f34 <__cxa_demangle@@Base+0x673c>
   1ddd4:	mov	x22, x0
   1ddd8:	cbz	x0, 1dfe0 <__cxa_demangle@@Base+0xb7e8>
   1dddc:	ldr	x25, [x19, #4912]
   1dde0:	ldr	x8, [x25, #8]
   1dde4:	add	x9, x8, #0x20
   1dde8:	cmp	x9, #0xff0
   1ddec:	b.cc	1de0c <__cxa_demangle@@Base+0xb614>  // b.lo, b.ul, b.last
   1ddf0:	mov	w0, #0x1000                	// #4096
   1ddf4:	bl	ec00 <malloc@plt>
   1ddf8:	cbz	x0, 1dcb0 <__cxa_demangle@@Base+0xb4b8>
   1ddfc:	mov	x8, xzr
   1de00:	stp	x25, xzr, [x0]
   1de04:	mov	x25, x0
   1de08:	str	x0, [x19, #4912]
   1de0c:	add	x9, x8, #0x20
   1de10:	add	x8, x25, x8
   1de14:	str	x9, [x25, #8]
   1de18:	str	x28, [x8, #16]!
   1de1c:	stp	x21, x22, [x8, #16]
   1de20:	mov	x21, x8
   1de24:	str	w24, [x8, #8]
   1de28:	cbz	x20, 1de7c <__cxa_demangle@@Base+0xb684>
   1de2c:	ldr	x22, [x19, #4912]
   1de30:	ldr	x8, [x22, #8]
   1de34:	add	x9, x8, #0x20
   1de38:	cmp	x9, #0xff0
   1de3c:	b.cc	1de5c <__cxa_demangle@@Base+0xb664>  // b.lo, b.ul, b.last
   1de40:	mov	w0, #0x1000                	// #4096
   1de44:	bl	ec00 <malloc@plt>
   1de48:	cbz	x0, 1dcb0 <__cxa_demangle@@Base+0xb4b8>
   1de4c:	mov	x8, xzr
   1de50:	stp	x22, xzr, [x0]
   1de54:	mov	x22, x0
   1de58:	str	x0, [x19, #4912]
   1de5c:	add	x9, x8, #0x20
   1de60:	add	x8, x22, x8
   1de64:	str	x9, [x22, #8]
   1de68:	str	x26, [x8, #16]!
   1de6c:	str	w27, [x8, #8]
   1de70:	str	x20, [x8, #16]
   1de74:	add	x9, x8, #0x18
   1de78:	b	1dedc <__cxa_demangle@@Base+0xb6e4>
   1de7c:	mov	x20, x21
   1de80:	cbz	w23, 1dee4 <__cxa_demangle@@Base+0xb6ec>
   1de84:	ldr	x20, [x19, #4912]
   1de88:	ldr	x8, [x20, #8]
   1de8c:	add	x9, x8, #0x20
   1de90:	cmp	x9, #0xff0
   1de94:	b.cc	1deb4 <__cxa_demangle@@Base+0xb6bc>  // b.lo, b.ul, b.last
   1de98:	mov	w0, #0x1000                	// #4096
   1de9c:	bl	ec00 <malloc@plt>
   1dea0:	cbz	x0, 1dcb0 <__cxa_demangle@@Base+0xb4b8>
   1dea4:	mov	x8, xzr
   1dea8:	stp	x20, xzr, [x0]
   1deac:	mov	x20, x0
   1deb0:	str	x0, [x19, #4912]
   1deb4:	add	x9, x8, #0x20
   1deb8:	str	x9, [x20, #8]
   1debc:	adrp	x9, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1dec0:	add	x8, x20, x8
   1dec4:	add	x9, x9, #0xaf0
   1dec8:	str	x9, [x8, #16]!
   1decc:	mov	w9, #0x126                 	// #294
   1ded0:	movk	w9, #0x101, lsl #16
   1ded4:	str	w9, [x8, #8]
   1ded8:	add	x9, x8, #0x10
   1dedc:	mov	x20, x8
   1dee0:	str	x21, [x9]
   1dee4:	ldp	x8, x9, [x19]
   1dee8:	cmp	x8, x9
   1deec:	b.eq	1dd9c <__cxa_demangle@@Base+0xb5a4>  // b.none
   1def0:	ldrb	w9, [x8]
   1def4:	cmp	w9, #0x45
   1def8:	b.ne	1dd9c <__cxa_demangle@@Base+0xb5a4>  // b.any
   1defc:	add	x8, x8, #0x1
   1df00:	str	x8, [x19]
   1df04:	cbz	x20, 1e000 <__cxa_demangle@@Base+0xb808>
   1df08:	mov	x0, x19
   1df0c:	bl	221c8 <__cxa_demangle@@Base+0xf9d0>
   1df10:	cbz	x0, 1dfdc <__cxa_demangle@@Base+0xb7e4>
   1df14:	ldr	x23, [x19, #4912]
   1df18:	mov	x21, x0
   1df1c:	ldr	x8, [x23, #8]
   1df20:	add	x9, x8, #0x20
   1df24:	cmp	x9, #0xff0
   1df28:	b.cc	1df48 <__cxa_demangle@@Base+0xb750>  // b.lo, b.ul, b.last
   1df2c:	mov	w0, #0x1000                	// #4096
   1df30:	bl	ec00 <malloc@plt>
   1df34:	cbz	x0, 1dcb0 <__cxa_demangle@@Base+0xb4b8>
   1df38:	mov	x8, xzr
   1df3c:	stp	x23, xzr, [x0]
   1df40:	mov	x23, x0
   1df44:	str	x0, [x19, #4912]
   1df48:	add	x9, x8, #0x20
   1df4c:	add	x22, x23, x8
   1df50:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1df54:	add	x8, x8, #0x930
   1df58:	mov	w10, #0x116                 	// #278
   1df5c:	movk	w10, #0x101, lsl #16
   1df60:	str	x9, [x23, #8]
   1df64:	str	x8, [x22, #16]!
   1df68:	str	w10, [x22, #8]
   1df6c:	stp	x20, x21, [x22, #16]
   1df70:	b	1dfe0 <__cxa_demangle@@Base+0xb7e8>
   1df74:	add	x8, x8, #0x1
   1df78:	mov	x0, x19
   1df7c:	str	x8, [x19]
   1df80:	bl	221c8 <__cxa_demangle@@Base+0xf9d0>
   1df84:	cbz	x0, 1dfdc <__cxa_demangle@@Base+0xb7e4>
   1df88:	ldr	x23, [x19, #4912]
   1df8c:	mov	x21, x0
   1df90:	ldr	x8, [x23, #8]
   1df94:	add	x9, x8, #0x20
   1df98:	cmp	x9, #0xff0
   1df9c:	b.cc	1dfbc <__cxa_demangle@@Base+0xb7c4>  // b.lo, b.ul, b.last
   1dfa0:	mov	w0, #0x1000                	// #4096
   1dfa4:	bl	ec00 <malloc@plt>
   1dfa8:	cbz	x0, 1dcb0 <__cxa_demangle@@Base+0xb4b8>
   1dfac:	mov	x8, xzr
   1dfb0:	stp	x23, xzr, [x0]
   1dfb4:	mov	x23, x0
   1dfb8:	str	x0, [x19, #4912]
   1dfbc:	add	x9, x8, #0x20
   1dfc0:	add	x22, x23, x8
   1dfc4:	mov	w8, #0x116                 	// #278
   1dfc8:	movk	w8, #0x101, lsl #16
   1dfcc:	str	x9, [x23, #8]
   1dfd0:	str	x24, [x22, #16]!
   1dfd4:	str	w8, [x22, #8]
   1dfd8:	b	1df6c <__cxa_demangle@@Base+0xb774>
   1dfdc:	mov	x22, xzr
   1dfe0:	mov	x0, x22
   1dfe4:	ldp	x20, x19, [sp, #80]
   1dfe8:	ldp	x22, x21, [sp, #64]
   1dfec:	ldp	x24, x23, [sp, #48]
   1dff0:	ldp	x26, x25, [sp, #32]
   1dff4:	ldp	x28, x27, [sp, #16]
   1dff8:	ldp	x29, x30, [sp], #96
   1dffc:	ret
   1e000:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1e004:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1e008:	adrp	x3, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1e00c:	add	x0, x0, #0xa66
   1e010:	add	x1, x1, #0xce9
   1e014:	add	x3, x3, #0xa77
   1e018:	mov	w2, #0xd28                 	// #3368
   1e01c:	bl	ee90 <__assert_fail@plt>
   1e020:	stp	x29, x30, [sp, #-64]!
   1e024:	str	x23, [sp, #16]
   1e028:	stp	x22, x21, [sp, #32]
   1e02c:	stp	x20, x19, [sp, #48]
   1e030:	mov	x29, sp
   1e034:	ldp	x8, x9, [x0]
   1e038:	mov	x19, x0
   1e03c:	subs	x9, x9, x8
   1e040:	b.eq	1e0fc <__cxa_demangle@@Base+0xb904>  // b.none
   1e044:	cmp	x9, #0x1
   1e048:	b.eq	1e0fc <__cxa_demangle@@Base+0xb904>  // b.none
   1e04c:	ldrb	w9, [x8]
   1e050:	cmp	w9, #0x64
   1e054:	b.ne	1e0fc <__cxa_demangle@@Base+0xb904>  // b.any
   1e058:	ldrb	w9, [x8, #1]
   1e05c:	cmp	w9, #0x58
   1e060:	b.eq	1e1a0 <__cxa_demangle@@Base+0xb9a8>  // b.none
   1e064:	cmp	w9, #0x78
   1e068:	b.eq	1e114 <__cxa_demangle@@Base+0xb91c>  // b.none
   1e06c:	cmp	w9, #0x69
   1e070:	b.ne	1e0fc <__cxa_demangle@@Base+0xb904>  // b.any
   1e074:	add	x8, x8, #0x2
   1e078:	mov	x0, x19
   1e07c:	str	x8, [x19]
   1e080:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   1e084:	cbz	x0, 1e234 <__cxa_demangle@@Base+0xba3c>
   1e088:	mov	x20, x0
   1e08c:	mov	x0, x19
   1e090:	bl	1e020 <__cxa_demangle@@Base+0xb828>
   1e094:	cbz	x0, 1e234 <__cxa_demangle@@Base+0xba3c>
   1e098:	ldr	x22, [x19, #4912]
   1e09c:	mov	x21, x0
   1e0a0:	ldr	x8, [x22, #8]
   1e0a4:	add	x9, x8, #0x30
   1e0a8:	cmp	x9, #0xff0
   1e0ac:	b.cc	1e0cc <__cxa_demangle@@Base+0xb8d4>  // b.lo, b.ul, b.last
   1e0b0:	mov	w0, #0x1000                	// #4096
   1e0b4:	bl	ec00 <malloc@plt>
   1e0b8:	cbz	x0, 1e248 <__cxa_demangle@@Base+0xba50>
   1e0bc:	mov	x8, xzr
   1e0c0:	stp	x22, xzr, [x0]
   1e0c4:	mov	x22, x0
   1e0c8:	str	x0, [x19, #4912]
   1e0cc:	add	x9, x8, #0x30
   1e0d0:	add	x0, x22, x8
   1e0d4:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1e0d8:	add	x8, x8, #0xc40
   1e0dc:	mov	w10, #0x149                 	// #329
   1e0e0:	movk	w10, #0x101, lsl #16
   1e0e4:	str	x9, [x22, #8]
   1e0e8:	str	x8, [x0, #16]!
   1e0ec:	str	w10, [x0, #8]
   1e0f0:	stp	x20, x21, [x0, #16]
   1e0f4:	strb	wzr, [x0, #32]
   1e0f8:	b	1e234 <__cxa_demangle@@Base+0xba3c>
   1e0fc:	mov	x0, x19
   1e100:	ldp	x20, x19, [sp, #48]
   1e104:	ldp	x22, x21, [sp, #32]
   1e108:	ldr	x23, [sp, #16]
   1e10c:	ldp	x29, x30, [sp], #64
   1e110:	b	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1e114:	add	x8, x8, #0x2
   1e118:	mov	x0, x19
   1e11c:	str	x8, [x19]
   1e120:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1e124:	cbz	x0, 1e234 <__cxa_demangle@@Base+0xba3c>
   1e128:	mov	x20, x0
   1e12c:	mov	x0, x19
   1e130:	bl	1e020 <__cxa_demangle@@Base+0xb828>
   1e134:	cbz	x0, 1e234 <__cxa_demangle@@Base+0xba3c>
   1e138:	ldr	x22, [x19, #4912]
   1e13c:	mov	x21, x0
   1e140:	ldr	x8, [x22, #8]
   1e144:	add	x9, x8, #0x30
   1e148:	cmp	x9, #0xff0
   1e14c:	b.cc	1e16c <__cxa_demangle@@Base+0xb974>  // b.lo, b.ul, b.last
   1e150:	mov	w0, #0x1000                	// #4096
   1e154:	bl	ec00 <malloc@plt>
   1e158:	cbz	x0, 1e248 <__cxa_demangle@@Base+0xba50>
   1e15c:	mov	x8, xzr
   1e160:	stp	x22, xzr, [x0]
   1e164:	mov	x22, x0
   1e168:	str	x0, [x19, #4912]
   1e16c:	add	x9, x8, #0x30
   1e170:	add	x0, x22, x8
   1e174:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1e178:	add	x8, x8, #0xc40
   1e17c:	mov	w10, #0x149                 	// #329
   1e180:	movk	w10, #0x101, lsl #16
   1e184:	mov	w11, #0x1                   	// #1
   1e188:	str	x9, [x22, #8]
   1e18c:	str	x8, [x0, #16]!
   1e190:	str	w10, [x0, #8]
   1e194:	stp	x20, x21, [x0, #16]
   1e198:	strb	w11, [x0, #32]
   1e19c:	b	1e234 <__cxa_demangle@@Base+0xba3c>
   1e1a0:	add	x8, x8, #0x2
   1e1a4:	mov	x0, x19
   1e1a8:	str	x8, [x19]
   1e1ac:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1e1b0:	cbz	x0, 1e234 <__cxa_demangle@@Base+0xba3c>
   1e1b4:	mov	x20, x0
   1e1b8:	mov	x0, x19
   1e1bc:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   1e1c0:	cbz	x0, 1e234 <__cxa_demangle@@Base+0xba3c>
   1e1c4:	mov	x21, x0
   1e1c8:	mov	x0, x19
   1e1cc:	bl	1e020 <__cxa_demangle@@Base+0xb828>
   1e1d0:	cbz	x0, 1e234 <__cxa_demangle@@Base+0xba3c>
   1e1d4:	ldr	x23, [x19, #4912]
   1e1d8:	mov	x22, x0
   1e1dc:	ldr	x8, [x23, #8]
   1e1e0:	add	x9, x8, #0x30
   1e1e4:	cmp	x9, #0xff0
   1e1e8:	b.cc	1e208 <__cxa_demangle@@Base+0xba10>  // b.lo, b.ul, b.last
   1e1ec:	mov	w0, #0x1000                	// #4096
   1e1f0:	bl	ec00 <malloc@plt>
   1e1f4:	cbz	x0, 1e248 <__cxa_demangle@@Base+0xba50>
   1e1f8:	mov	x8, xzr
   1e1fc:	stp	x23, xzr, [x0]
   1e200:	mov	x23, x0
   1e204:	str	x0, [x19, #4912]
   1e208:	add	x9, x8, #0x30
   1e20c:	add	x0, x23, x8
   1e210:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1e214:	add	x8, x8, #0xcb0
   1e218:	mov	w10, #0x14a                 	// #330
   1e21c:	movk	w10, #0x101, lsl #16
   1e220:	str	x9, [x23, #8]
   1e224:	str	x8, [x0, #16]!
   1e228:	str	w10, [x0, #8]
   1e22c:	stp	x20, x21, [x0, #16]
   1e230:	str	x22, [x0, #32]
   1e234:	ldp	x20, x19, [sp, #48]
   1e238:	ldp	x22, x21, [sp, #32]
   1e23c:	ldr	x23, [sp, #16]
   1e240:	ldp	x29, x30, [sp], #64
   1e244:	ret
   1e248:	bl	eeb0 <_ZSt9terminatev@plt>
   1e24c:	stp	x29, x30, [sp, #-80]!
   1e250:	str	x25, [sp, #16]
   1e254:	stp	x24, x23, [sp, #32]
   1e258:	stp	x22, x21, [sp, #48]
   1e25c:	stp	x20, x19, [sp, #64]
   1e260:	mov	x29, sp
   1e264:	ldp	x22, x23, [x0]
   1e268:	mov	x19, x2
   1e26c:	mov	x21, x0
   1e270:	mov	x20, x1
   1e274:	cmp	x22, x23
   1e278:	b.eq	1e2a0 <__cxa_demangle@@Base+0xbaa8>  // b.none
   1e27c:	ldrb	w8, [x22]
   1e280:	mov	x25, x22
   1e284:	cmp	w8, #0x6e
   1e288:	b.ne	1e294 <__cxa_demangle@@Base+0xba9c>  // b.any
   1e28c:	add	x25, x22, #0x1
   1e290:	str	x25, [x21]
   1e294:	cmp	x25, x23
   1e298:	b.ne	1e2ac <__cxa_demangle@@Base+0xbab4>  // b.any
   1e29c:	b	1e2c0 <__cxa_demangle@@Base+0xbac8>
   1e2a0:	mov	x25, x22
   1e2a4:	cmp	x25, x23
   1e2a8:	b.eq	1e2c0 <__cxa_demangle@@Base+0xbac8>  // b.none
   1e2ac:	ldrb	w24, [x25]
   1e2b0:	bl	ed40 <__ctype_b_loc@plt>
   1e2b4:	ldr	x8, [x0]
   1e2b8:	ldrh	w8, [x8, x24, lsl #1]
   1e2bc:	tbnz	w8, #11, 1e350 <__cxa_demangle@@Base+0xbb58>
   1e2c0:	mov	x22, xzr
   1e2c4:	mov	x24, xzr
   1e2c8:	cmp	x22, x24
   1e2cc:	mov	x0, xzr
   1e2d0:	b.eq	1e380 <__cxa_demangle@@Base+0xbb88>  // b.none
   1e2d4:	cmp	x25, x23
   1e2d8:	b.eq	1e380 <__cxa_demangle@@Base+0xbb88>  // b.none
   1e2dc:	ldrb	w8, [x25]
   1e2e0:	cmp	w8, #0x45
   1e2e4:	b.ne	1e37c <__cxa_demangle@@Base+0xbb84>  // b.any
   1e2e8:	ldr	x23, [x21, #4912]
   1e2ec:	add	x8, x25, #0x1
   1e2f0:	str	x8, [x21]
   1e2f4:	ldr	x8, [x23, #8]
   1e2f8:	add	x9, x8, #0x30
   1e2fc:	cmp	x9, #0xff0
   1e300:	b.cc	1e320 <__cxa_demangle@@Base+0xbb28>  // b.lo, b.ul, b.last
   1e304:	mov	w0, #0x1000                	// #4096
   1e308:	bl	ec00 <malloc@plt>
   1e30c:	cbz	x0, 1e3a4 <__cxa_demangle@@Base+0xbbac>
   1e310:	mov	x8, xzr
   1e314:	stp	x23, xzr, [x0]
   1e318:	mov	x23, x0
   1e31c:	str	x0, [x21, #4912]
   1e320:	add	x9, x8, #0x30
   1e324:	add	x0, x23, x8
   1e328:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1e32c:	add	x8, x8, #0xeb0
   1e330:	mov	w10, #0x145                 	// #325
   1e334:	movk	w10, #0x101, lsl #16
   1e338:	str	x9, [x23, #8]
   1e33c:	str	x8, [x0, #16]!
   1e340:	str	w10, [x0, #8]
   1e344:	stp	x20, x19, [x0, #16]
   1e348:	stp	x22, x24, [x0, #32]
   1e34c:	b	1e380 <__cxa_demangle@@Base+0xbb88>
   1e350:	add	x8, x25, #0x1
   1e354:	cmp	x23, x8
   1e358:	str	x8, [x21]
   1e35c:	b.eq	1e398 <__cxa_demangle@@Base+0xbba0>  // b.none
   1e360:	ldrb	w9, [x8], #1
   1e364:	ldr	x10, [x0]
   1e368:	ldrh	w9, [x10, x9, lsl #1]
   1e36c:	tbnz	w9, #11, 1e354 <__cxa_demangle@@Base+0xbb5c>
   1e370:	sub	x25, x8, #0x1
   1e374:	mov	x24, x25
   1e378:	b	1e2c8 <__cxa_demangle@@Base+0xbad0>
   1e37c:	mov	x0, xzr
   1e380:	ldp	x20, x19, [sp, #64]
   1e384:	ldp	x22, x21, [sp, #48]
   1e388:	ldp	x24, x23, [sp, #32]
   1e38c:	ldr	x25, [sp, #16]
   1e390:	ldp	x29, x30, [sp], #80
   1e394:	ret
   1e398:	mov	x25, x23
   1e39c:	mov	x24, x23
   1e3a0:	b	1e2c8 <__cxa_demangle@@Base+0xbad0>
   1e3a4:	bl	eeb0 <_ZSt9terminatev@plt>
   1e3a8:	sub	sp, sp, #0xd0
   1e3ac:	stp	x29, x30, [sp, #112]
   1e3b0:	stp	x28, x27, [sp, #128]
   1e3b4:	stp	x26, x25, [sp, #144]
   1e3b8:	stp	x24, x23, [sp, #160]
   1e3bc:	stp	x22, x21, [sp, #176]
   1e3c0:	stp	x20, x19, [sp, #192]
   1e3c4:	add	x29, sp, #0x70
   1e3c8:	mov	x19, x0
   1e3cc:	cbz	x1, 1e3d8 <__cxa_demangle@@Base+0xbbe0>
   1e3d0:	ldr	x8, [x19, #664]
   1e3d4:	str	x8, [x19, #672]
   1e3d8:	ldp	x21, x20, [x19]
   1e3dc:	sub	x8, x20, x21
   1e3e0:	cmp	x8, #0x2
   1e3e4:	b.cc	1e630 <__cxa_demangle@@Base+0xbe38>  // b.lo, b.ul, b.last
   1e3e8:	ldrb	w8, [x21]
   1e3ec:	cmp	w8, #0x55
   1e3f0:	b.ne	1e630 <__cxa_demangle@@Base+0xbe38>  // b.any
   1e3f4:	ldrb	w8, [x21, #1]
   1e3f8:	cmp	w8, #0x74
   1e3fc:	b.ne	1e4a4 <__cxa_demangle@@Base+0xbcac>  // b.any
   1e400:	add	x22, x21, #0x2
   1e404:	cmp	x20, x22
   1e408:	str	x22, [x19]
   1e40c:	b.eq	1e424 <__cxa_demangle@@Base+0xbc2c>  // b.none
   1e410:	ldrb	w23, [x22]
   1e414:	bl	ed40 <__ctype_b_loc@plt>
   1e418:	ldr	x8, [x0]
   1e41c:	ldrh	w8, [x8, x23, lsl #1]
   1e420:	tbnz	w8, #11, 1e510 <__cxa_demangle@@Base+0xbd18>
   1e424:	mov	x21, xzr
   1e428:	mov	x23, xzr
   1e42c:	cmp	x22, x20
   1e430:	b.eq	1e630 <__cxa_demangle@@Base+0xbe38>  // b.none
   1e434:	ldrb	w8, [x22]
   1e438:	cmp	w8, #0x5f
   1e43c:	b.ne	1e630 <__cxa_demangle@@Base+0xbe38>  // b.any
   1e440:	ldr	x20, [x19, #4912]
   1e444:	add	x8, x22, #0x1
   1e448:	str	x8, [x19]
   1e44c:	ldr	x8, [x20, #8]
   1e450:	add	x9, x8, #0x20
   1e454:	cmp	x9, #0xff0
   1e458:	b.cc	1e478 <__cxa_demangle@@Base+0xbc80>  // b.lo, b.ul, b.last
   1e45c:	mov	w0, #0x1000                	// #4096
   1e460:	bl	ec00 <malloc@plt>
   1e464:	cbz	x0, 1e9ec <__cxa_demangle@@Base+0xc1f4>
   1e468:	mov	x8, xzr
   1e46c:	stp	x20, xzr, [x0]
   1e470:	mov	x20, x0
   1e474:	str	x0, [x19, #4912]
   1e478:	add	x9, x8, #0x20
   1e47c:	add	x24, x20, x8
   1e480:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1e484:	add	x8, x8, #0x150
   1e488:	mov	w10, #0x12c                 	// #300
   1e48c:	movk	w10, #0x101, lsl #16
   1e490:	str	x9, [x20, #8]
   1e494:	str	x8, [x24, #16]!
   1e498:	str	w10, [x24, #8]
   1e49c:	stp	x21, x23, [x24, #16]
   1e4a0:	b	1e634 <__cxa_demangle@@Base+0xbe3c>
   1e4a4:	ldrb	w8, [x21]
   1e4a8:	cmp	w8, #0x55
   1e4ac:	b.ne	1e630 <__cxa_demangle@@Base+0xbe38>  // b.any
   1e4b0:	ldrb	w8, [x21, #1]
   1e4b4:	cmp	w8, #0x6c
   1e4b8:	b.ne	1e548 <__cxa_demangle@@Base+0xbd50>  // b.any
   1e4bc:	ldr	x8, [x19, #672]
   1e4c0:	ldr	x9, [x19, #664]
   1e4c4:	ldr	x26, [x19, #784]
   1e4c8:	add	x10, x21, #0x2
   1e4cc:	add	x0, sp, #0x8
   1e4d0:	sub	x8, x8, x9
   1e4d4:	asr	x8, x8, #3
   1e4d8:	mov	x1, x19
   1e4dc:	str	x10, [x19]
   1e4e0:	str	x8, [x19, #784]
   1e4e4:	bl	1f534 <__cxa_demangle@@Base+0xcd3c>
   1e4e8:	ldp	x9, x2, [x19, #16]
   1e4ec:	ldp	x8, x10, [x19]
   1e4f0:	sub	x11, x2, x9
   1e4f4:	subs	x10, x10, x8
   1e4f8:	asr	x27, x11, #3
   1e4fc:	b.eq	1e750 <__cxa_demangle@@Base+0xbf58>  // b.none
   1e500:	adrp	x20, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1e504:	add	x25, x19, #0x28
   1e508:	add	x20, x20, #0x559
   1e50c:	b	1e698 <__cxa_demangle@@Base+0xbea0>
   1e510:	add	x9, x21, #0x3
   1e514:	mov	x8, x9
   1e518:	cmp	x20, x9
   1e51c:	str	x9, [x19]
   1e520:	b.eq	1e730 <__cxa_demangle@@Base+0xbf38>  // b.none
   1e524:	mov	x9, x8
   1e528:	ldrb	w10, [x9], #1
   1e52c:	ldr	x11, [x0]
   1e530:	ldrh	w10, [x11, x10, lsl #1]
   1e534:	tbnz	w10, #11, 1e514 <__cxa_demangle@@Base+0xbd1c>
   1e538:	mov	x21, x22
   1e53c:	sub	x23, x9, #0x1
   1e540:	mov	x22, x8
   1e544:	b	1e42c <__cxa_demangle@@Base+0xbc34>
   1e548:	ldrb	w8, [x21]
   1e54c:	cmp	w8, #0x55
   1e550:	b.ne	1e630 <__cxa_demangle@@Base+0xbe38>  // b.any
   1e554:	ldrb	w8, [x21, #1]
   1e558:	cmp	w8, #0x62
   1e55c:	b.ne	1e630 <__cxa_demangle@@Base+0xbe38>  // b.any
   1e560:	add	x22, x21, #0x2
   1e564:	cmp	x20, x22
   1e568:	str	x22, [x19]
   1e56c:	b.eq	1e5ac <__cxa_demangle@@Base+0xbdb4>  // b.none
   1e570:	ldrb	w23, [x22]
   1e574:	bl	ed40 <__ctype_b_loc@plt>
   1e578:	ldr	x8, [x0]
   1e57c:	ldrh	w8, [x8, x23, lsl #1]
   1e580:	tbz	w8, #11, 1e5ac <__cxa_demangle@@Base+0xbdb4>
   1e584:	add	x8, x21, #0x3
   1e588:	mov	x22, x8
   1e58c:	cmp	x20, x8
   1e590:	str	x8, [x19]
   1e594:	b.eq	1e5ac <__cxa_demangle@@Base+0xbdb4>  // b.none
   1e598:	mov	x8, x22
   1e59c:	ldrb	w9, [x8], #1
   1e5a0:	ldr	x10, [x0]
   1e5a4:	ldrh	w9, [x10, x9, lsl #1]
   1e5a8:	tbnz	w9, #11, 1e588 <__cxa_demangle@@Base+0xbd90>
   1e5ac:	cmp	x22, x20
   1e5b0:	b.eq	1e630 <__cxa_demangle@@Base+0xbe38>  // b.none
   1e5b4:	ldrb	w8, [x22]
   1e5b8:	cmp	w8, #0x5f
   1e5bc:	b.ne	1e630 <__cxa_demangle@@Base+0xbe38>  // b.any
   1e5c0:	ldr	x20, [x19, #4912]
   1e5c4:	add	x8, x22, #0x1
   1e5c8:	str	x8, [x19]
   1e5cc:	ldr	x8, [x20, #8]
   1e5d0:	add	x9, x8, #0x20
   1e5d4:	cmp	x9, #0xff0
   1e5d8:	b.cc	1e5f8 <__cxa_demangle@@Base+0xbe00>  // b.lo, b.ul, b.last
   1e5dc:	mov	w0, #0x1000                	// #4096
   1e5e0:	bl	ec00 <malloc@plt>
   1e5e4:	cbz	x0, 1e9ec <__cxa_demangle@@Base+0xc1f4>
   1e5e8:	mov	x8, xzr
   1e5ec:	stp	x20, xzr, [x0]
   1e5f0:	mov	x20, x0
   1e5f4:	str	x0, [x19, #4912]
   1e5f8:	add	x9, x8, #0x20
   1e5fc:	add	x24, x20, x8
   1e600:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   1e604:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1e608:	add	x8, x8, #0xd60
   1e60c:	mov	w10, #0x107                 	// #263
   1e610:	add	x11, x11, #0x55e
   1e614:	movk	w10, #0x101, lsl #16
   1e618:	str	x9, [x20, #8]
   1e61c:	str	x8, [x24, #16]!
   1e620:	add	x8, x11, #0xf
   1e624:	str	w10, [x24, #8]
   1e628:	stp	x11, x8, [x24, #16]
   1e62c:	b	1e634 <__cxa_demangle@@Base+0xbe3c>
   1e630:	mov	x24, xzr
   1e634:	mov	x0, x24
   1e638:	ldp	x20, x19, [sp, #192]
   1e63c:	ldp	x22, x21, [sp, #176]
   1e640:	ldp	x24, x23, [sp, #160]
   1e644:	ldp	x26, x25, [sp, #144]
   1e648:	ldp	x28, x27, [sp, #128]
   1e64c:	ldp	x29, x30, [sp, #112]
   1e650:	add	sp, sp, #0xd0
   1e654:	ret
   1e658:	mov	x0, x24
   1e65c:	bl	ecc0 <realloc@plt>
   1e660:	mov	x23, x0
   1e664:	str	x0, [x19, #16]
   1e668:	cbz	x0, 1e9ec <__cxa_demangle@@Base+0xc1f4>
   1e66c:	asr	x8, x22, #3
   1e670:	asr	x9, x22, #2
   1e674:	add	x8, x23, x8, lsl #3
   1e678:	add	x9, x23, x9, lsl #3
   1e67c:	stp	x8, x9, [x19, #24]
   1e680:	add	x9, x8, #0x8
   1e684:	str	x9, [x19, #24]
   1e688:	str	x21, [x8]
   1e68c:	ldp	x8, x9, [x19]
   1e690:	subs	x10, x9, x8
   1e694:	b.eq	1e740 <__cxa_demangle@@Base+0xbf48>  // b.none
   1e698:	ldrb	w9, [x8]
   1e69c:	cmp	w9, #0x54
   1e6a0:	b.ne	1e740 <__cxa_demangle@@Base+0xbf48>  // b.any
   1e6a4:	cmp	x10, #0x2
   1e6a8:	b.cc	1e6b4 <__cxa_demangle@@Base+0xbebc>  // b.lo, b.ul, b.last
   1e6ac:	ldrb	w1, [x8, #1]
   1e6b0:	b	1e6b8 <__cxa_demangle@@Base+0xbec0>
   1e6b4:	mov	w1, wzr
   1e6b8:	mov	w2, #0x4                   	// #4
   1e6bc:	mov	x0, x20
   1e6c0:	bl	ee20 <memchr@plt>
   1e6c4:	cbz	x0, 1e740 <__cxa_demangle@@Base+0xbf48>
   1e6c8:	sub	x8, x0, x20
   1e6cc:	cmn	x8, #0x1
   1e6d0:	b.eq	1e740 <__cxa_demangle@@Base+0xbf48>  // b.none
   1e6d4:	mov	x0, x19
   1e6d8:	bl	1f630 <__cxa_demangle@@Base+0xce38>
   1e6dc:	mov	x21, x0
   1e6e0:	cbz	x0, 1e960 <__cxa_demangle@@Base+0xc168>
   1e6e4:	ldp	x8, x9, [x19, #24]
   1e6e8:	cmp	x8, x9
   1e6ec:	b.ne	1e680 <__cxa_demangle@@Base+0xbe88>  // b.any
   1e6f0:	ldr	x24, [x19, #16]
   1e6f4:	sub	x22, x8, x24
   1e6f8:	cmp	x25, x24
   1e6fc:	lsl	x1, x22, #1
   1e700:	b.ne	1e658 <__cxa_demangle@@Base+0xbe60>  // b.any
   1e704:	mov	x0, x1
   1e708:	bl	ec00 <malloc@plt>
   1e70c:	cbz	x0, 1e9ec <__cxa_demangle@@Base+0xc1f4>
   1e710:	mov	x23, x0
   1e714:	cbz	x22, 1e728 <__cxa_demangle@@Base+0xbf30>
   1e718:	mov	x0, x23
   1e71c:	mov	x1, x24
   1e720:	mov	x2, x22
   1e724:	bl	eae0 <memmove@plt>
   1e728:	str	x23, [x19, #16]
   1e72c:	b	1e66c <__cxa_demangle@@Base+0xbe74>
   1e730:	mov	x21, x22
   1e734:	mov	x22, x8
   1e738:	mov	x23, x20
   1e73c:	b	1e42c <__cxa_demangle@@Base+0xbc34>
   1e740:	ldp	x9, x2, [x19, #16]
   1e744:	sub	x8, x2, x9
   1e748:	cmp	x27, x8, asr #3
   1e74c:	b.hi	1ea10 <__cxa_demangle@@Base+0xc218>  // b.pmore
   1e750:	add	x1, x9, x27, lsl #3
   1e754:	mov	x0, x19
   1e758:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1e75c:	ldp	x8, x9, [x19, #16]
   1e760:	sub	x9, x9, x8
   1e764:	cmp	x27, x9, asr #3
   1e768:	b.hi	1e9f0 <__cxa_demangle@@Base+0xc1f8>  // b.pmore
   1e76c:	mov	x20, x0
   1e770:	mov	x21, x1
   1e774:	add	x2, x8, x27, lsl #3
   1e778:	str	x2, [x19, #24]
   1e77c:	cbnz	x1, 1e798 <__cxa_demangle@@Base+0xbfa0>
   1e780:	ldr	x9, [x19, #672]
   1e784:	ldr	x10, [x19, #664]
   1e788:	cmp	x9, x10
   1e78c:	b.eq	1ea30 <__cxa_demangle@@Base+0xc238>  // b.none
   1e790:	sub	x9, x9, #0x8
   1e794:	str	x9, [x19, #672]
   1e798:	ldp	x9, x10, [x19]
   1e79c:	sub	x10, x10, x9
   1e7a0:	cmp	x10, #0x2
   1e7a4:	b.cc	1e7c8 <__cxa_demangle@@Base+0xbfd0>  // b.lo, b.ul, b.last
   1e7a8:	ldrb	w10, [x9]
   1e7ac:	cmp	w10, #0x76
   1e7b0:	b.ne	1e7c8 <__cxa_demangle@@Base+0xbfd0>  // b.any
   1e7b4:	ldrb	w10, [x9, #1]
   1e7b8:	cmp	w10, #0x45
   1e7bc:	b.ne	1e7c8 <__cxa_demangle@@Base+0xbfd0>  // b.any
   1e7c0:	add	x9, x9, #0x2
   1e7c4:	b	1e87c <__cxa_demangle@@Base+0xc084>
   1e7c8:	add	x28, x19, #0x28
   1e7cc:	mov	x0, x19
   1e7d0:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1e7d4:	mov	x22, x0
   1e7d8:	cbz	x0, 1e960 <__cxa_demangle@@Base+0xc168>
   1e7dc:	ldp	x8, x9, [x19, #24]
   1e7e0:	cmp	x8, x9
   1e7e4:	b.ne	1e850 <__cxa_demangle@@Base+0xc058>  // b.any
   1e7e8:	ldr	x25, [x19, #16]
   1e7ec:	sub	x23, x8, x25
   1e7f0:	cmp	x28, x25
   1e7f4:	lsl	x1, x23, #1
   1e7f8:	b.eq	1e814 <__cxa_demangle@@Base+0xc01c>  // b.none
   1e7fc:	mov	x0, x25
   1e800:	bl	ecc0 <realloc@plt>
   1e804:	mov	x24, x0
   1e808:	str	x0, [x19, #16]
   1e80c:	cbnz	x0, 1e83c <__cxa_demangle@@Base+0xc044>
   1e810:	b	1e9ec <__cxa_demangle@@Base+0xc1f4>
   1e814:	mov	x0, x1
   1e818:	bl	ec00 <malloc@plt>
   1e81c:	cbz	x0, 1e9ec <__cxa_demangle@@Base+0xc1f4>
   1e820:	mov	x24, x0
   1e824:	cbz	x23, 1e838 <__cxa_demangle@@Base+0xc040>
   1e828:	mov	x0, x24
   1e82c:	mov	x1, x25
   1e830:	mov	x2, x23
   1e834:	bl	eae0 <memmove@plt>
   1e838:	str	x24, [x19, #16]
   1e83c:	asr	x8, x23, #3
   1e840:	asr	x9, x23, #2
   1e844:	add	x8, x24, x8, lsl #3
   1e848:	add	x9, x24, x9, lsl #3
   1e84c:	stp	x8, x9, [x19, #24]
   1e850:	add	x9, x8, #0x8
   1e854:	str	x9, [x19, #24]
   1e858:	str	x22, [x8]
   1e85c:	ldp	x9, x8, [x19]
   1e860:	cmp	x9, x8
   1e864:	b.eq	1e7cc <__cxa_demangle@@Base+0xbfd4>  // b.none
   1e868:	ldrb	w8, [x9]
   1e86c:	cmp	w8, #0x45
   1e870:	b.ne	1e7cc <__cxa_demangle@@Base+0xbfd4>  // b.any
   1e874:	ldp	x8, x2, [x19, #16]
   1e878:	add	x9, x9, #0x1
   1e87c:	sub	x10, x2, x8
   1e880:	cmp	x27, x10, asr #3
   1e884:	str	x9, [x19]
   1e888:	b.hi	1ea10 <__cxa_demangle@@Base+0xc218>  // b.pmore
   1e88c:	add	x1, x8, x27, lsl #3
   1e890:	mov	x0, x19
   1e894:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1e898:	ldp	x8, x9, [x19, #16]
   1e89c:	sub	x9, x9, x8
   1e8a0:	cmp	x27, x9, asr #3
   1e8a4:	b.hi	1e9f0 <__cxa_demangle@@Base+0xc1f8>  // b.pmore
   1e8a8:	ldp	x24, x28, [x19]
   1e8ac:	mov	x22, x0
   1e8b0:	mov	x23, x1
   1e8b4:	add	x8, x8, x27, lsl #3
   1e8b8:	cmp	x28, x24
   1e8bc:	str	x8, [x19, #24]
   1e8c0:	b.eq	1e8d8 <__cxa_demangle@@Base+0xc0e0>  // b.none
   1e8c4:	ldrb	w25, [x24]
   1e8c8:	bl	ed40 <__ctype_b_loc@plt>
   1e8cc:	ldr	x8, [x0]
   1e8d0:	ldrh	w8, [x8, x25, lsl #1]
   1e8d4:	tbnz	w8, #11, 1e9a4 <__cxa_demangle@@Base+0xc1ac>
   1e8d8:	mov	x25, xzr
   1e8dc:	mov	x27, xzr
   1e8e0:	cmp	x24, x28
   1e8e4:	b.eq	1e960 <__cxa_demangle@@Base+0xc168>  // b.none
   1e8e8:	ldrb	w8, [x24]
   1e8ec:	cmp	w8, #0x5f
   1e8f0:	b.ne	1e960 <__cxa_demangle@@Base+0xc168>  // b.any
   1e8f4:	ldr	x28, [x19, #4912]
   1e8f8:	add	x8, x24, #0x1
   1e8fc:	str	x8, [x19]
   1e900:	ldr	x8, [x28, #8]
   1e904:	add	x9, x8, #0x40
   1e908:	cmp	x9, #0xff0
   1e90c:	b.cc	1e92c <__cxa_demangle@@Base+0xc134>  // b.lo, b.ul, b.last
   1e910:	mov	w0, #0x1000                	// #4096
   1e914:	bl	ec00 <malloc@plt>
   1e918:	cbz	x0, 1e9ec <__cxa_demangle@@Base+0xc1f4>
   1e91c:	mov	x8, xzr
   1e920:	stp	x28, xzr, [x0]
   1e924:	mov	x28, x0
   1e928:	str	x0, [x19, #4912]
   1e92c:	add	x9, x8, #0x40
   1e930:	add	x24, x28, x8
   1e934:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1e938:	add	x8, x8, #0x3f0
   1e93c:	mov	w10, #0x12d                 	// #301
   1e940:	movk	w10, #0x101, lsl #16
   1e944:	str	x9, [x28, #8]
   1e948:	str	x8, [x24, #16]!
   1e94c:	str	w10, [x24, #8]
   1e950:	stp	x20, x21, [x24, #16]
   1e954:	stp	x22, x23, [x24, #32]
   1e958:	stp	x25, x27, [x24, #48]
   1e95c:	b	1e964 <__cxa_demangle@@Base+0xc16c>
   1e960:	mov	x24, xzr
   1e964:	ldp	x8, x9, [sp, #8]
   1e968:	ldr	x11, [x8, #672]
   1e96c:	ldr	x10, [x8, #664]
   1e970:	sub	x11, x11, x10
   1e974:	cmp	x9, x11, asr #3
   1e978:	b.hi	1ea70 <__cxa_demangle@@Base+0xc278>  // b.pmore
   1e97c:	add	x9, x10, x9, lsl #3
   1e980:	str	x9, [x8, #672]
   1e984:	ldr	x0, [sp, #24]
   1e988:	add	x8, sp, #0x8
   1e98c:	add	x8, x8, #0x28
   1e990:	cmp	x0, x8
   1e994:	b.eq	1e99c <__cxa_demangle@@Base+0xc1a4>  // b.none
   1e998:	bl	ed60 <free@plt>
   1e99c:	str	x26, [x19, #784]
   1e9a0:	b	1e634 <__cxa_demangle@@Base+0xbe3c>
   1e9a4:	add	x9, x24, #0x1
   1e9a8:	mov	x8, x9
   1e9ac:	cmp	x28, x9
   1e9b0:	str	x9, [x19]
   1e9b4:	b.eq	1e9dc <__cxa_demangle@@Base+0xc1e4>  // b.none
   1e9b8:	mov	x9, x8
   1e9bc:	ldrb	w10, [x9], #1
   1e9c0:	ldr	x11, [x0]
   1e9c4:	ldrh	w10, [x11, x10, lsl #1]
   1e9c8:	tbnz	w10, #11, 1e9a8 <__cxa_demangle@@Base+0xc1b0>
   1e9cc:	mov	x25, x24
   1e9d0:	sub	x27, x9, #0x1
   1e9d4:	mov	x24, x8
   1e9d8:	b	1e8e0 <__cxa_demangle@@Base+0xc0e8>
   1e9dc:	mov	x25, x24
   1e9e0:	mov	x24, x8
   1e9e4:	mov	x27, x28
   1e9e8:	b	1e8e0 <__cxa_demangle@@Base+0xc0e8>
   1e9ec:	bl	eeb0 <_ZSt9terminatev@plt>
   1e9f0:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1e9f4:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1e9f8:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1e9fc:	add	x0, x0, #0xa2e
   1ea00:	add	x1, x1, #0xce9
   1ea04:	add	x3, x3, #0x2b6
   1ea08:	mov	w2, #0x8d9                 	// #2265
   1ea0c:	bl	ee90 <__assert_fail@plt>
   1ea10:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1ea14:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1ea18:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1ea1c:	add	x0, x0, #0xdf
   1ea20:	add	x1, x1, #0xce9
   1ea24:	add	x3, x3, #0xfc
   1ea28:	mov	w2, #0x94b                 	// #2379
   1ea2c:	bl	ee90 <__assert_fail@plt>
   1ea30:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ea34:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1ea38:	adrp	x3, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ea3c:	add	x0, x0, #0x6ef
   1ea40:	add	x1, x1, #0xce9
   1ea44:	add	x3, x3, #0x718
   1ea48:	mov	w2, #0x8d4                 	// #2260
   1ea4c:	bl	ee90 <__assert_fail@plt>
   1ea50:	b	1ea54 <__cxa_demangle@@Base+0xc25c>
   1ea54:	ldp	x8, x9, [sp, #8]
   1ea58:	mov	x20, x0
   1ea5c:	ldr	x11, [x8, #672]
   1ea60:	ldr	x10, [x8, #664]
   1ea64:	sub	x11, x11, x10
   1ea68:	cmp	x9, x11, asr #3
   1ea6c:	b.ls	1ea90 <__cxa_demangle@@Base+0xc298>  // b.plast
   1ea70:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ea74:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1ea78:	adrp	x3, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ea7c:	add	x0, x0, #0x856
   1ea80:	add	x1, x1, #0xce9
   1ea84:	add	x3, x3, #0x890
   1ea88:	mov	w2, #0x90e                 	// #2318
   1ea8c:	bl	ee90 <__assert_fail@plt>
   1ea90:	add	x9, x10, x9, lsl #3
   1ea94:	str	x9, [x8, #672]
   1ea98:	ldr	x0, [sp, #24]
   1ea9c:	add	x8, sp, #0x8
   1eaa0:	add	x8, x8, #0x28
   1eaa4:	cmp	x0, x8
   1eaa8:	b.eq	1eab0 <__cxa_demangle@@Base+0xc2b8>  // b.none
   1eaac:	bl	ed60 <free@plt>
   1eab0:	mov	x0, x20
   1eab4:	str	x26, [x19, #784]
   1eab8:	bl	eea0 <_Unwind_Resume@plt>
   1eabc:	stp	x29, x30, [sp, #-48]!
   1eac0:	stp	x22, x21, [sp, #16]
   1eac4:	stp	x20, x19, [sp, #32]
   1eac8:	mov	x29, sp
   1eacc:	ldp	x9, x8, [x0, #16]
   1ead0:	mov	x20, x0
   1ead4:	mov	x19, x1
   1ead8:	sub	x8, x8, x9
   1eadc:	cmp	x8, #0x4
   1eae0:	b.cc	1ebe8 <__cxa_demangle@@Base+0xc3f0>  // b.lo, b.ul, b.last
   1eae4:	ldp	x8, x10, [x19, #8]
   1eae8:	add	x9, x8, #0x1
   1eaec:	cmp	x9, x10
   1eaf0:	b.cs	1eafc <__cxa_demangle@@Base+0xc304>  // b.hs, b.nlast
   1eaf4:	ldr	x0, [x19]
   1eaf8:	b	1eb20 <__cxa_demangle@@Base+0xc328>
   1eafc:	ldr	x0, [x19]
   1eb00:	lsl	x8, x10, #1
   1eb04:	cmp	x8, x9
   1eb08:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1eb0c:	str	x1, [x19, #16]
   1eb10:	bl	ecc0 <realloc@plt>
   1eb14:	str	x0, [x19]
   1eb18:	cbz	x0, 1ed94 <__cxa_demangle@@Base+0xc59c>
   1eb1c:	ldr	x8, [x19, #8]
   1eb20:	mov	w9, #0x28                  	// #40
   1eb24:	strb	w9, [x0, x8]
   1eb28:	ldr	x8, [x19, #8]
   1eb2c:	add	x8, x8, #0x1
   1eb30:	str	x8, [x19, #8]
   1eb34:	ldp	x22, x9, [x20, #16]
   1eb38:	subs	x21, x9, x22
   1eb3c:	b.eq	1eb98 <__cxa_demangle@@Base+0xc3a0>  // b.none
   1eb40:	ldr	x10, [x19, #16]
   1eb44:	add	x9, x8, x21
   1eb48:	cmp	x9, x10
   1eb4c:	b.cs	1eb58 <__cxa_demangle@@Base+0xc360>  // b.hs, b.nlast
   1eb50:	ldr	x0, [x19]
   1eb54:	b	1eb7c <__cxa_demangle@@Base+0xc384>
   1eb58:	ldr	x0, [x19]
   1eb5c:	lsl	x8, x10, #1
   1eb60:	cmp	x8, x9
   1eb64:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1eb68:	str	x1, [x19, #16]
   1eb6c:	bl	ecc0 <realloc@plt>
   1eb70:	str	x0, [x19]
   1eb74:	cbz	x0, 1ed94 <__cxa_demangle@@Base+0xc59c>
   1eb78:	ldr	x8, [x19, #8]
   1eb7c:	add	x0, x0, x8
   1eb80:	mov	x1, x22
   1eb84:	mov	x2, x21
   1eb88:	bl	eae0 <memmove@plt>
   1eb8c:	ldr	x8, [x19, #8]
   1eb90:	add	x8, x8, x21
   1eb94:	str	x8, [x19, #8]
   1eb98:	ldr	x10, [x19, #16]
   1eb9c:	add	x9, x8, #0x1
   1eba0:	cmp	x9, x10
   1eba4:	b.cs	1ebb0 <__cxa_demangle@@Base+0xc3b8>  // b.hs, b.nlast
   1eba8:	ldr	x0, [x19]
   1ebac:	b	1ebd4 <__cxa_demangle@@Base+0xc3dc>
   1ebb0:	ldr	x0, [x19]
   1ebb4:	lsl	x8, x10, #1
   1ebb8:	cmp	x8, x9
   1ebbc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1ebc0:	str	x1, [x19, #16]
   1ebc4:	bl	ecc0 <realloc@plt>
   1ebc8:	str	x0, [x19]
   1ebcc:	cbz	x0, 1ed94 <__cxa_demangle@@Base+0xc59c>
   1ebd0:	ldr	x8, [x19, #8]
   1ebd4:	mov	w9, #0x29                  	// #41
   1ebd8:	strb	w9, [x0, x8]
   1ebdc:	ldr	x8, [x19, #8]
   1ebe0:	add	x8, x8, #0x1
   1ebe4:	str	x8, [x19, #8]
   1ebe8:	ldr	x21, [x20, #32]
   1ebec:	ldrb	w8, [x21]
   1ebf0:	cmp	w8, #0x6e
   1ebf4:	b.ne	1ec10 <__cxa_demangle@@Base+0xc418>  // b.any
   1ebf8:	ldp	x8, x10, [x19, #8]
   1ebfc:	add	x9, x8, #0x1
   1ec00:	cmp	x9, x10
   1ec04:	b.cs	1ec34 <__cxa_demangle@@Base+0xc43c>  // b.hs, b.nlast
   1ec08:	ldr	x0, [x19]
   1ec0c:	b	1ec58 <__cxa_demangle@@Base+0xc460>
   1ec10:	ldr	x8, [x20, #40]
   1ec14:	subs	x22, x8, x21
   1ec18:	b.eq	1ed18 <__cxa_demangle@@Base+0xc520>  // b.none
   1ec1c:	ldp	x8, x10, [x19, #8]
   1ec20:	add	x9, x8, x22
   1ec24:	cmp	x9, x10
   1ec28:	b.cs	1ec98 <__cxa_demangle@@Base+0xc4a0>  // b.hs, b.nlast
   1ec2c:	ldr	x0, [x19]
   1ec30:	b	1ecbc <__cxa_demangle@@Base+0xc4c4>
   1ec34:	ldr	x0, [x19]
   1ec38:	lsl	x8, x10, #1
   1ec3c:	cmp	x8, x9
   1ec40:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1ec44:	str	x1, [x19, #16]
   1ec48:	bl	ecc0 <realloc@plt>
   1ec4c:	str	x0, [x19]
   1ec50:	cbz	x0, 1ed94 <__cxa_demangle@@Base+0xc59c>
   1ec54:	ldr	x8, [x19, #8]
   1ec58:	mov	w9, #0x2d                  	// #45
   1ec5c:	strb	w9, [x0, x8]
   1ec60:	ldr	x8, [x19, #8]
   1ec64:	add	x8, x8, #0x1
   1ec68:	str	x8, [x19, #8]
   1ec6c:	ldp	x10, x9, [x20, #32]
   1ec70:	cmp	x9, x10
   1ec74:	cinc	x22, x10, ne  // ne = any
   1ec78:	subs	x21, x9, x22
   1ec7c:	b.eq	1ed18 <__cxa_demangle@@Base+0xc520>  // b.none
   1ec80:	ldr	x10, [x19, #16]
   1ec84:	add	x9, x8, x21
   1ec88:	cmp	x9, x10
   1ec8c:	b.cs	1ecd8 <__cxa_demangle@@Base+0xc4e0>  // b.hs, b.nlast
   1ec90:	ldr	x0, [x19]
   1ec94:	b	1ecfc <__cxa_demangle@@Base+0xc504>
   1ec98:	ldr	x0, [x19]
   1ec9c:	lsl	x8, x10, #1
   1eca0:	cmp	x8, x9
   1eca4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1eca8:	str	x1, [x19, #16]
   1ecac:	bl	ecc0 <realloc@plt>
   1ecb0:	str	x0, [x19]
   1ecb4:	cbz	x0, 1ed94 <__cxa_demangle@@Base+0xc59c>
   1ecb8:	ldr	x8, [x19, #8]
   1ecbc:	add	x0, x0, x8
   1ecc0:	mov	x1, x21
   1ecc4:	mov	x2, x22
   1ecc8:	bl	eae0 <memmove@plt>
   1eccc:	ldr	x8, [x19, #8]
   1ecd0:	add	x8, x8, x22
   1ecd4:	b	1ed14 <__cxa_demangle@@Base+0xc51c>
   1ecd8:	ldr	x0, [x19]
   1ecdc:	lsl	x8, x10, #1
   1ece0:	cmp	x8, x9
   1ece4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1ece8:	str	x1, [x19, #16]
   1ecec:	bl	ecc0 <realloc@plt>
   1ecf0:	str	x0, [x19]
   1ecf4:	cbz	x0, 1ed94 <__cxa_demangle@@Base+0xc59c>
   1ecf8:	ldr	x8, [x19, #8]
   1ecfc:	add	x0, x0, x8
   1ed00:	mov	x1, x22
   1ed04:	mov	x2, x21
   1ed08:	bl	eae0 <memmove@plt>
   1ed0c:	ldr	x8, [x19, #8]
   1ed10:	add	x8, x8, x21
   1ed14:	str	x8, [x19, #8]
   1ed18:	ldp	x21, x8, [x20, #16]
   1ed1c:	sub	x20, x8, x21
   1ed20:	sub	x8, x20, #0x1
   1ed24:	cmp	x8, #0x2
   1ed28:	b.hi	1ed84 <__cxa_demangle@@Base+0xc58c>  // b.pmore
   1ed2c:	ldp	x8, x10, [x19, #8]
   1ed30:	add	x9, x8, x20
   1ed34:	cmp	x9, x10
   1ed38:	b.cs	1ed44 <__cxa_demangle@@Base+0xc54c>  // b.hs, b.nlast
   1ed3c:	ldr	x0, [x19]
   1ed40:	b	1ed68 <__cxa_demangle@@Base+0xc570>
   1ed44:	ldr	x0, [x19]
   1ed48:	lsl	x8, x10, #1
   1ed4c:	cmp	x8, x9
   1ed50:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1ed54:	str	x1, [x19, #16]
   1ed58:	bl	ecc0 <realloc@plt>
   1ed5c:	str	x0, [x19]
   1ed60:	cbz	x0, 1ed94 <__cxa_demangle@@Base+0xc59c>
   1ed64:	ldr	x8, [x19, #8]
   1ed68:	add	x0, x0, x8
   1ed6c:	mov	x1, x21
   1ed70:	mov	x2, x20
   1ed74:	bl	eae0 <memmove@plt>
   1ed78:	ldr	x8, [x19, #8]
   1ed7c:	add	x8, x8, x20
   1ed80:	str	x8, [x19, #8]
   1ed84:	ldp	x20, x19, [sp, #32]
   1ed88:	ldp	x22, x21, [sp, #16]
   1ed8c:	ldp	x29, x30, [sp], #48
   1ed90:	ret
   1ed94:	bl	eeb0 <_ZSt9terminatev@plt>
   1ed98:	b	eb20 <_ZdlPv@plt>
   1ed9c:	stp	x29, x30, [sp, #-48]!
   1eda0:	str	x21, [sp, #16]
   1eda4:	stp	x20, x19, [sp, #32]
   1eda8:	mov	x29, sp
   1edac:	ldrb	w21, [x0, #12]
   1edb0:	ldp	x8, x10, [x1, #8]
   1edb4:	mov	w9, #0x4                   	// #4
   1edb8:	mov	x19, x1
   1edbc:	cmp	w21, #0x0
   1edc0:	cinc	x20, x9, eq  // eq = none
   1edc4:	add	x9, x8, x20
   1edc8:	cmp	x9, x10
   1edcc:	b.cs	1edd8 <__cxa_demangle@@Base+0xc5e0>  // b.hs, b.nlast
   1edd0:	ldr	x0, [x19]
   1edd4:	b	1edfc <__cxa_demangle@@Base+0xc604>
   1edd8:	ldr	x0, [x19]
   1eddc:	lsl	x8, x10, #1
   1ede0:	cmp	x8, x9
   1ede4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1ede8:	str	x1, [x19, #16]
   1edec:	bl	ecc0 <realloc@plt>
   1edf0:	str	x0, [x19]
   1edf4:	cbz	x0, 1ee3c <__cxa_demangle@@Base+0xc644>
   1edf8:	ldr	x8, [x19, #8]
   1edfc:	add	x0, x0, x8
   1ee00:	adrp	x8, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ee04:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ee08:	add	x8, x8, #0x1e6
   1ee0c:	add	x9, x9, #0x1eb
   1ee10:	cmp	w21, #0x0
   1ee14:	csel	x1, x9, x8, eq  // eq = none
   1ee18:	mov	x2, x20
   1ee1c:	bl	eae0 <memmove@plt>
   1ee20:	ldr	x8, [x19, #8]
   1ee24:	ldr	x21, [sp, #16]
   1ee28:	add	x8, x8, x20
   1ee2c:	str	x8, [x19, #8]
   1ee30:	ldp	x20, x19, [sp, #32]
   1ee34:	ldp	x29, x30, [sp], #48
   1ee38:	ret
   1ee3c:	bl	eeb0 <_ZSt9terminatev@plt>
   1ee40:	b	eb20 <_ZdlPv@plt>
   1ee44:	sub	sp, sp, #0x40
   1ee48:	stp	x29, x30, [sp, #32]
   1ee4c:	stp	x20, x19, [sp, #48]
   1ee50:	add	x29, sp, #0x20
   1ee54:	ldp	x20, x8, [x0, #16]
   1ee58:	sub	x8, x8, x20
   1ee5c:	add	x8, x8, #0x1
   1ee60:	cmp	x8, #0x9
   1ee64:	b.cc	1eff0 <__cxa_demangle@@Base+0xc7f8>  // b.lo, b.ul, b.last
   1ee68:	mov	x19, x1
   1ee6c:	bl	ed40 <__ctype_b_loc@plt>
   1ee70:	ldrb	w8, [x20]
   1ee74:	ldr	x9, [x0]
   1ee78:	ldrb	w10, [x20, #1]
   1ee7c:	mov	w11, #0x9                   	// #9
   1ee80:	mov	w13, #0xffffffd0            	// #-48
   1ee84:	ldrh	w12, [x9, x8, lsl #1]
   1ee88:	ldrh	w14, [x9, x10, lsl #1]
   1ee8c:	mov	w15, #0xffffffa9            	// #-87
   1ee90:	tst	w12, #0x800
   1ee94:	csel	w12, w11, wzr, eq  // eq = none
   1ee98:	tst	w14, #0x800
   1ee9c:	add	w8, w12, w8
   1eea0:	csel	w12, w15, w13, eq  // eq = none
   1eea4:	add	w10, w12, w10
   1eea8:	add	w10, w10, w8, lsl #4
   1eeac:	sturb	w10, [x29, #-8]
   1eeb0:	ldrb	w8, [x20, #2]
   1eeb4:	ldrb	w12, [x20, #3]
   1eeb8:	ldrh	w14, [x9, x8, lsl #1]
   1eebc:	ldrh	w16, [x9, x12, lsl #1]
   1eec0:	tst	w14, #0x800
   1eec4:	csel	w14, w11, wzr, eq  // eq = none
   1eec8:	tst	w16, #0x800
   1eecc:	add	w8, w14, w8
   1eed0:	csel	w14, w15, w13, eq  // eq = none
   1eed4:	add	w12, w14, w12
   1eed8:	add	w8, w12, w8, lsl #4
   1eedc:	sturb	w8, [x29, #-7]
   1eee0:	ldrb	w8, [x20, #4]
   1eee4:	ldrb	w12, [x20, #5]
   1eee8:	ldrh	w14, [x9, x8, lsl #1]
   1eeec:	ldrh	w16, [x9, x12, lsl #1]
   1eef0:	tst	w14, #0x800
   1eef4:	csel	w14, w11, wzr, eq  // eq = none
   1eef8:	tst	w16, #0x800
   1eefc:	add	w8, w14, w8
   1ef00:	csel	w14, w15, w13, eq  // eq = none
   1ef04:	add	w12, w14, w12
   1ef08:	add	w8, w12, w8, lsl #4
   1ef0c:	sturb	w8, [x29, #-6]
   1ef10:	ldrb	w12, [x20, #6]
   1ef14:	ldrb	w14, [x20, #7]
   1ef18:	sub	x8, x29, #0x8
   1ef1c:	orr	x8, x8, #0x2
   1ef20:	ldrh	w16, [x9, x12, lsl #1]
   1ef24:	ldrh	w9, [x9, x14, lsl #1]
   1ef28:	sturb	w10, [x29, #-5]
   1ef2c:	tst	w16, #0x800
   1ef30:	csel	w11, w11, wzr, eq  // eq = none
   1ef34:	tst	w9, #0x800
   1ef38:	add	w9, w11, w12
   1ef3c:	csel	w11, w15, w13, eq  // eq = none
   1ef40:	add	w11, w11, w14
   1ef44:	add	w9, w11, w9, lsl #4
   1ef48:	sturb	w9, [x29, #-8]
   1ef4c:	mov	x9, x8
   1ef50:	ldrb	w10, [x9]
   1ef54:	ldurb	w11, [x8, #-1]
   1ef58:	sturb	w10, [x8, #-1]
   1ef5c:	strb	w11, [x9], #-1
   1ef60:	cmp	x8, x9
   1ef64:	add	x8, x8, #0x1
   1ef68:	b.cc	1ef50 <__cxa_demangle@@Base+0xc758>  // b.lo, b.ul, b.last
   1ef6c:	ldur	s0, [x29, #-8]
   1ef70:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1ef74:	add	x2, x2, #0x54d
   1ef78:	mov	x0, sp
   1ef7c:	fcvt	d0, s0
   1ef80:	mov	w1, #0x18                  	// #24
   1ef84:	stp	xzr, xzr, [sp]
   1ef88:	str	xzr, [sp, #16]
   1ef8c:	bl	ebe0 <snprintf@plt>
   1ef90:	cbz	w0, 1eff0 <__cxa_demangle@@Base+0xc7f8>
   1ef94:	ldp	x8, x10, [x19, #8]
   1ef98:	sxtw	x20, w0
   1ef9c:	add	x9, x8, x20
   1efa0:	cmp	x9, x10
   1efa4:	b.cs	1efb0 <__cxa_demangle@@Base+0xc7b8>  // b.hs, b.nlast
   1efa8:	ldr	x0, [x19]
   1efac:	b	1efd4 <__cxa_demangle@@Base+0xc7dc>
   1efb0:	ldr	x0, [x19]
   1efb4:	lsl	x8, x10, #1
   1efb8:	cmp	x8, x9
   1efbc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1efc0:	str	x1, [x19, #16]
   1efc4:	bl	ecc0 <realloc@plt>
   1efc8:	str	x0, [x19]
   1efcc:	cbz	x0, 1f000 <__cxa_demangle@@Base+0xc808>
   1efd0:	ldr	x8, [x19, #8]
   1efd4:	add	x0, x0, x8
   1efd8:	mov	x1, sp
   1efdc:	mov	x2, x20
   1efe0:	bl	eae0 <memmove@plt>
   1efe4:	ldr	x8, [x19, #8]
   1efe8:	add	x8, x8, x20
   1efec:	str	x8, [x19, #8]
   1eff0:	ldp	x20, x19, [sp, #48]
   1eff4:	ldp	x29, x30, [sp, #32]
   1eff8:	add	sp, sp, #0x40
   1effc:	ret
   1f000:	bl	eeb0 <_ZSt9terminatev@plt>
   1f004:	b	eb20 <_ZdlPv@plt>
   1f008:	sub	sp, sp, #0x50
   1f00c:	stp	x29, x30, [sp, #48]
   1f010:	stp	x20, x19, [sp, #64]
   1f014:	add	x29, sp, #0x30
   1f018:	ldp	x20, x8, [x0, #16]
   1f01c:	sub	x8, x8, x20
   1f020:	add	x8, x8, #0x1
   1f024:	cmp	x8, #0x11
   1f028:	b.cc	1f294 <__cxa_demangle@@Base+0xca9c>  // b.lo, b.ul, b.last
   1f02c:	mov	x19, x1
   1f030:	bl	ed40 <__ctype_b_loc@plt>
   1f034:	ldrb	w11, [x20]
   1f038:	ldr	x10, [x0]
   1f03c:	ldrb	w12, [x20, #1]
   1f040:	mov	w8, #0x9                   	// #9
   1f044:	mov	w9, #0xffffffd0            	// #-48
   1f048:	ldrh	w13, [x10, x11, lsl #1]
   1f04c:	ldrh	w14, [x10, x12, lsl #1]
   1f050:	mov	w10, #0xffffffa9            	// #-87
   1f054:	tst	w13, #0x800
   1f058:	csel	w13, w8, wzr, eq  // eq = none
   1f05c:	tst	w14, #0x800
   1f060:	add	w11, w13, w11
   1f064:	csel	w13, w10, w9, eq  // eq = none
   1f068:	add	w12, w13, w12
   1f06c:	add	w11, w12, w11, lsl #4
   1f070:	sturb	w11, [x29, #-8]
   1f074:	ldrb	w11, [x20, #2]
   1f078:	ldr	x12, [x0]
   1f07c:	ldrb	w13, [x20, #3]
   1f080:	ldurb	w17, [x29, #-8]
   1f084:	ldrh	w14, [x12, x11, lsl #1]
   1f088:	ldrh	w12, [x12, x13, lsl #1]
   1f08c:	tst	w14, #0x800
   1f090:	csel	w14, w8, wzr, eq  // eq = none
   1f094:	tst	w12, #0x800
   1f098:	csel	w12, w10, w9, eq  // eq = none
   1f09c:	add	w11, w14, w11
   1f0a0:	add	w12, w12, w13
   1f0a4:	add	w11, w12, w11, lsl #4
   1f0a8:	sturb	w11, [x29, #-7]
   1f0ac:	ldrb	w11, [x20, #4]
   1f0b0:	ldr	x12, [x0]
   1f0b4:	ldrb	w13, [x20, #5]
   1f0b8:	ldrh	w14, [x12, x11, lsl #1]
   1f0bc:	ldrh	w12, [x12, x13, lsl #1]
   1f0c0:	tst	w14, #0x800
   1f0c4:	csel	w14, w8, wzr, eq  // eq = none
   1f0c8:	tst	w12, #0x800
   1f0cc:	csel	w12, w10, w9, eq  // eq = none
   1f0d0:	add	w11, w14, w11
   1f0d4:	add	w12, w12, w13
   1f0d8:	add	w11, w12, w11, lsl #4
   1f0dc:	sturb	w11, [x29, #-6]
   1f0e0:	ldrb	w11, [x20, #6]
   1f0e4:	ldr	x12, [x0]
   1f0e8:	ldrb	w13, [x20, #7]
   1f0ec:	ldrh	w14, [x12, x11, lsl #1]
   1f0f0:	ldrh	w12, [x12, x13, lsl #1]
   1f0f4:	tst	w14, #0x800
   1f0f8:	csel	w14, w8, wzr, eq  // eq = none
   1f0fc:	tst	w12, #0x800
   1f100:	csel	w12, w10, w9, eq  // eq = none
   1f104:	add	w11, w14, w11
   1f108:	add	w12, w12, w13
   1f10c:	add	w11, w12, w11, lsl #4
   1f110:	sturb	w11, [x29, #-5]
   1f114:	ldrb	w11, [x20, #8]
   1f118:	ldr	x12, [x0]
   1f11c:	ldrb	w13, [x20, #9]
   1f120:	ldrh	w14, [x12, x11, lsl #1]
   1f124:	ldrh	w12, [x12, x13, lsl #1]
   1f128:	tst	w14, #0x800
   1f12c:	csel	w14, w8, wzr, eq  // eq = none
   1f130:	tst	w12, #0x800
   1f134:	csel	w12, w10, w9, eq  // eq = none
   1f138:	add	w11, w14, w11
   1f13c:	add	w12, w12, w13
   1f140:	add	w11, w12, w11, lsl #4
   1f144:	sturb	w11, [x29, #-4]
   1f148:	ldrb	w11, [x20, #10]
   1f14c:	ldr	x12, [x0]
   1f150:	ldrb	w13, [x20, #11]
   1f154:	ldrh	w14, [x12, x11, lsl #1]
   1f158:	ldrh	w12, [x12, x13, lsl #1]
   1f15c:	tst	w14, #0x800
   1f160:	csel	w14, w8, wzr, eq  // eq = none
   1f164:	tst	w12, #0x800
   1f168:	csel	w12, w10, w9, eq  // eq = none
   1f16c:	add	w11, w14, w11
   1f170:	add	w12, w12, w13
   1f174:	add	w11, w12, w11, lsl #4
   1f178:	sturb	w11, [x29, #-3]
   1f17c:	ldrb	w11, [x20, #12]
   1f180:	ldr	x12, [x0]
   1f184:	ldrb	w13, [x20, #13]
   1f188:	ldrh	w14, [x12, x11, lsl #1]
   1f18c:	ldrh	w12, [x12, x13, lsl #1]
   1f190:	tst	w14, #0x800
   1f194:	csel	w14, w8, wzr, eq  // eq = none
   1f198:	tst	w12, #0x800
   1f19c:	csel	w12, w10, w9, eq  // eq = none
   1f1a0:	add	w11, w14, w11
   1f1a4:	add	w12, w12, w13
   1f1a8:	add	w11, w12, w11, lsl #4
   1f1ac:	sturb	w11, [x29, #-2]
   1f1b0:	ldrb	w13, [x20, #14]
   1f1b4:	ldr	x14, [x0]
   1f1b8:	ldrb	w15, [x20, #15]
   1f1bc:	sub	x12, x29, #0x8
   1f1c0:	orr	x11, x12, #0x2
   1f1c4:	ldrh	w16, [x14, x13, lsl #1]
   1f1c8:	ldrh	w14, [x14, x15, lsl #1]
   1f1cc:	orr	x12, x12, #0x6
   1f1d0:	tst	w16, #0x800
   1f1d4:	csel	w8, w8, wzr, eq  // eq = none
   1f1d8:	tst	w14, #0x800
   1f1dc:	csel	w9, w10, w9, eq  // eq = none
   1f1e0:	add	w8, w8, w13
   1f1e4:	add	w9, w9, w15
   1f1e8:	add	w8, w9, w8, lsl #4
   1f1ec:	sturb	w8, [x29, #-1]
   1f1f0:	sturb	w8, [x29, #-8]
   1f1f4:	sturb	w17, [x29, #-1]
   1f1f8:	ldrb	w8, [x12]
   1f1fc:	ldurb	w9, [x11, #-1]
   1f200:	sturb	w8, [x11, #-1]
   1f204:	strb	w9, [x12], #-1
   1f208:	cmp	x11, x12
   1f20c:	add	x11, x11, #0x1
   1f210:	b.cc	1f1f8 <__cxa_demangle@@Base+0xca00>  // b.lo, b.ul, b.last
   1f214:	ldur	d0, [x29, #-8]
   1f218:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1f21c:	movi	v1.2d, #0x0
   1f220:	add	x2, x2, #0x551
   1f224:	mov	x0, sp
   1f228:	mov	w1, #0x20                  	// #32
   1f22c:	stp	q1, q1, [sp]
   1f230:	bl	ebe0 <snprintf@plt>
   1f234:	cbz	w0, 1f294 <__cxa_demangle@@Base+0xca9c>
   1f238:	ldp	x8, x10, [x19, #8]
   1f23c:	sxtw	x20, w0
   1f240:	add	x9, x8, x20
   1f244:	cmp	x9, x10
   1f248:	b.cs	1f254 <__cxa_demangle@@Base+0xca5c>  // b.hs, b.nlast
   1f24c:	ldr	x0, [x19]
   1f250:	b	1f278 <__cxa_demangle@@Base+0xca80>
   1f254:	ldr	x0, [x19]
   1f258:	lsl	x8, x10, #1
   1f25c:	cmp	x8, x9
   1f260:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1f264:	str	x1, [x19, #16]
   1f268:	bl	ecc0 <realloc@plt>
   1f26c:	str	x0, [x19]
   1f270:	cbz	x0, 1f2a4 <__cxa_demangle@@Base+0xcaac>
   1f274:	ldr	x8, [x19, #8]
   1f278:	add	x0, x0, x8
   1f27c:	mov	x1, sp
   1f280:	mov	x2, x20
   1f284:	bl	eae0 <memmove@plt>
   1f288:	ldr	x8, [x19, #8]
   1f28c:	add	x8, x8, x20
   1f290:	str	x8, [x19, #8]
   1f294:	ldp	x20, x19, [sp, #64]
   1f298:	ldp	x29, x30, [sp, #48]
   1f29c:	add	sp, sp, #0x50
   1f2a0:	ret
   1f2a4:	bl	eeb0 <_ZSt9terminatev@plt>
   1f2a8:	b	eb20 <_ZdlPv@plt>
   1f2ac:	sub	sp, sp, #0x60
   1f2b0:	stp	x29, x30, [sp, #64]
   1f2b4:	stp	x20, x19, [sp, #80]
   1f2b8:	add	x29, sp, #0x40
   1f2bc:	ldp	x20, x8, [x0, #16]
   1f2c0:	sub	x8, x8, x20
   1f2c4:	add	x8, x8, #0x1
   1f2c8:	cmp	x8, #0x21
   1f2cc:	b.cc	1f41c <__cxa_demangle@@Base+0xcc24>  // b.lo, b.ul, b.last
   1f2d0:	mov	x19, x1
   1f2d4:	bl	ed40 <__ctype_b_loc@plt>
   1f2d8:	mov	x9, xzr
   1f2dc:	add	x10, x20, #0x1
   1f2e0:	mov	x8, #0xffffffffffffffff    	// #-1
   1f2e4:	sub	x11, x29, #0x10
   1f2e8:	mov	w12, #0x9                   	// #9
   1f2ec:	mov	w13, #0xffffffd0            	// #-48
   1f2f0:	mov	w14, #0xffffffa9            	// #-87
   1f2f4:	add	x15, x10, x9
   1f2f8:	ldr	x16, [x0]
   1f2fc:	ldurb	w17, [x15, #-1]
   1f300:	ldrb	w15, [x15]
   1f304:	add	x9, x9, #0x2
   1f308:	add	x1, x11, x8
   1f30c:	ldrh	w18, [x16, x17, lsl #1]
   1f310:	ldrh	w16, [x16, x15, lsl #1]
   1f314:	add	x8, x8, #0x1
   1f318:	tst	w18, #0x800
   1f31c:	csel	w18, w12, wzr, eq  // eq = none
   1f320:	tst	w16, #0x800
   1f324:	add	w16, w18, w17
   1f328:	csel	w17, w14, w13, eq  // eq = none
   1f32c:	add	w15, w17, w15
   1f330:	cmp	x9, #0x20
   1f334:	add	w15, w15, w16, lsl #4
   1f338:	strb	w15, [x1, #1]
   1f33c:	b.ne	1f2f4 <__cxa_demangle@@Base+0xcafc>  // b.any
   1f340:	cmn	x8, #0x1
   1f344:	b.eq	1f398 <__cxa_demangle@@Base+0xcba0>  // b.none
   1f348:	sub	x9, x29, #0x10
   1f34c:	add	x10, x9, x8
   1f350:	cmp	x10, x9
   1f354:	b.ls	1f398 <__cxa_demangle@@Base+0xcba0>  // b.plast
   1f358:	ldurb	w10, [x29, #-16]
   1f35c:	sub	x9, x29, #0x10
   1f360:	cmp	x8, #0x3
   1f364:	sturb	w15, [x29, #-16]
   1f368:	strb	w10, [x9, x8]
   1f36c:	b.cc	1f398 <__cxa_demangle@@Base+0xcba0>  // b.lo, b.ul, b.last
   1f370:	add	x8, x9, x8
   1f374:	sub	x8, x8, #0x1
   1f378:	orr	x9, x9, #0x2
   1f37c:	ldrb	w10, [x8]
   1f380:	ldurb	w11, [x9, #-1]
   1f384:	sturb	w10, [x9, #-1]
   1f388:	strb	w11, [x8], #-1
   1f38c:	cmp	x9, x8
   1f390:	add	x9, x9, #0x1
   1f394:	b.cc	1f37c <__cxa_demangle@@Base+0xcb84>  // b.lo, b.ul, b.last
   1f398:	ldur	q0, [x29, #-16]
   1f39c:	adrp	x2, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1f3a0:	movi	v1.2d, #0x0
   1f3a4:	add	x2, x2, #0x554
   1f3a8:	mov	x0, sp
   1f3ac:	mov	w1, #0x28                  	// #40
   1f3b0:	str	xzr, [sp, #32]
   1f3b4:	stp	q1, q1, [sp]
   1f3b8:	bl	ebe0 <snprintf@plt>
   1f3bc:	cbz	w0, 1f41c <__cxa_demangle@@Base+0xcc24>
   1f3c0:	ldp	x8, x10, [x19, #8]
   1f3c4:	sxtw	x20, w0
   1f3c8:	add	x9, x8, x20
   1f3cc:	cmp	x9, x10
   1f3d0:	b.cs	1f3dc <__cxa_demangle@@Base+0xcbe4>  // b.hs, b.nlast
   1f3d4:	ldr	x0, [x19]
   1f3d8:	b	1f400 <__cxa_demangle@@Base+0xcc08>
   1f3dc:	ldr	x0, [x19]
   1f3e0:	lsl	x8, x10, #1
   1f3e4:	cmp	x8, x9
   1f3e8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1f3ec:	str	x1, [x19, #16]
   1f3f0:	bl	ecc0 <realloc@plt>
   1f3f4:	str	x0, [x19]
   1f3f8:	cbz	x0, 1f42c <__cxa_demangle@@Base+0xcc34>
   1f3fc:	ldr	x8, [x19, #8]
   1f400:	add	x0, x0, x8
   1f404:	mov	x1, sp
   1f408:	mov	x2, x20
   1f40c:	bl	eae0 <memmove@plt>
   1f410:	ldr	x8, [x19, #8]
   1f414:	add	x8, x8, x20
   1f418:	str	x8, [x19, #8]
   1f41c:	ldp	x20, x19, [sp, #80]
   1f420:	ldp	x29, x30, [sp, #64]
   1f424:	add	sp, sp, #0x60
   1f428:	ret
   1f42c:	bl	eeb0 <_ZSt9terminatev@plt>
   1f430:	b	eb20 <_ZdlPv@plt>
   1f434:	stp	x29, x30, [sp, #-32]!
   1f438:	stp	x20, x19, [sp, #16]
   1f43c:	mov	x29, sp
   1f440:	ldp	x8, x10, [x1, #8]
   1f444:	mov	x19, x1
   1f448:	mov	x20, x0
   1f44c:	add	x9, x8, #0x2
   1f450:	cmp	x9, x10
   1f454:	b.cs	1f460 <__cxa_demangle@@Base+0xcc68>  // b.hs, b.nlast
   1f458:	ldr	x0, [x19]
   1f45c:	b	1f484 <__cxa_demangle@@Base+0xcc8c>
   1f460:	ldr	x0, [x19]
   1f464:	lsl	x8, x10, #1
   1f468:	cmp	x8, x9
   1f46c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1f470:	str	x1, [x19, #16]
   1f474:	bl	ecc0 <realloc@plt>
   1f478:	str	x0, [x19]
   1f47c:	cbz	x0, 1f52c <__cxa_demangle@@Base+0xcd34>
   1f480:	ldr	x8, [x19, #8]
   1f484:	mov	w9, #0x3c22                	// #15394
   1f488:	strh	w9, [x0, x8]
   1f48c:	ldr	x8, [x19, #8]
   1f490:	mov	x1, x19
   1f494:	add	x8, x8, #0x2
   1f498:	str	x8, [x19, #8]
   1f49c:	ldr	x20, [x20, #16]
   1f4a0:	ldr	x8, [x20]
   1f4a4:	mov	x0, x20
   1f4a8:	ldr	x8, [x8, #32]
   1f4ac:	blr	x8
   1f4b0:	ldrb	w8, [x20, #9]
   1f4b4:	cmp	w8, #0x1
   1f4b8:	b.eq	1f4d0 <__cxa_demangle@@Base+0xccd8>  // b.none
   1f4bc:	ldr	x8, [x20]
   1f4c0:	mov	x0, x20
   1f4c4:	mov	x1, x19
   1f4c8:	ldr	x8, [x8, #40]
   1f4cc:	blr	x8
   1f4d0:	ldp	x8, x10, [x19, #8]
   1f4d4:	add	x9, x8, #0x2
   1f4d8:	cmp	x9, x10
   1f4dc:	b.cs	1f4e8 <__cxa_demangle@@Base+0xccf0>  // b.hs, b.nlast
   1f4e0:	ldr	x0, [x19]
   1f4e4:	b	1f50c <__cxa_demangle@@Base+0xcd14>
   1f4e8:	ldr	x0, [x19]
   1f4ec:	lsl	x8, x10, #1
   1f4f0:	cmp	x8, x9
   1f4f4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1f4f8:	str	x1, [x19, #16]
   1f4fc:	bl	ecc0 <realloc@plt>
   1f500:	str	x0, [x19]
   1f504:	cbz	x0, 1f52c <__cxa_demangle@@Base+0xcd34>
   1f508:	ldr	x8, [x19, #8]
   1f50c:	mov	w9, #0x223e                	// #8766
   1f510:	strh	w9, [x0, x8]
   1f514:	ldr	x8, [x19, #8]
   1f518:	add	x8, x8, #0x2
   1f51c:	str	x8, [x19, #8]
   1f520:	ldp	x20, x19, [sp, #16]
   1f524:	ldp	x29, x30, [sp], #32
   1f528:	ret
   1f52c:	bl	eeb0 <_ZSt9terminatev@plt>
   1f530:	b	eb20 <_ZdlPv@plt>
   1f534:	stp	x29, x30, [sp, #-64]!
   1f538:	str	x23, [sp, #16]
   1f53c:	stp	x22, x21, [sp, #32]
   1f540:	stp	x20, x19, [sp, #48]
   1f544:	mov	x29, sp
   1f548:	str	x1, [x0]
   1f54c:	movi	v0.2d, #0x0
   1f550:	mov	x8, x0
   1f554:	ldr	x9, [x1, #672]
   1f558:	ldr	x10, [x1, #664]
   1f55c:	mov	x20, x0
   1f560:	str	q0, [x8, #40]!
   1f564:	str	x8, [x20, #16]!
   1f568:	add	x11, x20, #0x58
   1f56c:	stp	x8, x11, [x20, #8]
   1f570:	sub	x8, x9, x10
   1f574:	asr	x8, x8, #3
   1f578:	stur	q0, [x20, #40]
   1f57c:	stur	q0, [x20, #56]
   1f580:	stur	q0, [x20, #72]
   1f584:	stur	x8, [x20, #-8]
   1f588:	ldr	x8, [x1, #672]
   1f58c:	ldr	x9, [x1, #680]
   1f590:	mov	x19, x1
   1f594:	cmp	x8, x9
   1f598:	b.ne	1f60c <__cxa_demangle@@Base+0xce14>  // b.any
   1f59c:	ldr	x23, [x19, #664]
   1f5a0:	add	x9, x19, #0x2b0
   1f5a4:	cmp	x9, x23
   1f5a8:	sub	x21, x8, x23
   1f5ac:	b.eq	1f5cc <__cxa_demangle@@Base+0xcdd4>  // b.none
   1f5b0:	lsl	x1, x21, #1
   1f5b4:	mov	x0, x23
   1f5b8:	bl	ecc0 <realloc@plt>
   1f5bc:	mov	x22, x0
   1f5c0:	str	x0, [x19, #664]
   1f5c4:	cbnz	x0, 1f5f4 <__cxa_demangle@@Base+0xcdfc>
   1f5c8:	b	1f62c <__cxa_demangle@@Base+0xce34>
   1f5cc:	lsl	x0, x21, #1
   1f5d0:	bl	ec00 <malloc@plt>
   1f5d4:	cbz	x0, 1f62c <__cxa_demangle@@Base+0xce34>
   1f5d8:	mov	x22, x0
   1f5dc:	cbz	x21, 1f5f0 <__cxa_demangle@@Base+0xcdf8>
   1f5e0:	mov	x0, x22
   1f5e4:	mov	x1, x23
   1f5e8:	mov	x2, x21
   1f5ec:	bl	eae0 <memmove@plt>
   1f5f0:	str	x22, [x19, #664]
   1f5f4:	asr	x8, x21, #3
   1f5f8:	asr	x9, x21, #2
   1f5fc:	add	x8, x22, x8, lsl #3
   1f600:	add	x9, x22, x9, lsl #3
   1f604:	str	x8, [x19, #672]
   1f608:	str	x9, [x19, #680]
   1f60c:	add	x9, x8, #0x8
   1f610:	str	x9, [x19, #672]
   1f614:	str	x20, [x8]
   1f618:	ldp	x20, x19, [sp, #48]
   1f61c:	ldp	x22, x21, [sp, #32]
   1f620:	ldr	x23, [sp, #16]
   1f624:	ldp	x29, x30, [sp], #64
   1f628:	ret
   1f62c:	bl	eeb0 <_ZSt9terminatev@plt>
   1f630:	sub	sp, sp, #0xc0
   1f634:	stp	x29, x30, [sp, #112]
   1f638:	stp	x26, x25, [sp, #128]
   1f63c:	stp	x24, x23, [sp, #144]
   1f640:	stp	x22, x21, [sp, #160]
   1f644:	stp	x20, x19, [sp, #176]
   1f648:	add	x29, sp, #0x70
   1f64c:	ldp	x8, x9, [x0]
   1f650:	sub	x9, x9, x8
   1f654:	cmp	x9, #0x2
   1f658:	b.cc	1fac8 <__cxa_demangle@@Base+0xd2d0>  // b.lo, b.ul, b.last
   1f65c:	ldrb	w9, [x8]
   1f660:	cmp	w9, #0x54
   1f664:	b.ne	1fac8 <__cxa_demangle@@Base+0xd2d0>  // b.any
   1f668:	ldrb	w9, [x8, #1]
   1f66c:	mov	x19, x0
   1f670:	cmp	w9, #0x79
   1f674:	b.ne	1f734 <__cxa_demangle@@Base+0xcf3c>  // b.any
   1f678:	ldr	w20, [x19, #792]
   1f67c:	ldr	x21, [x19, #4912]
   1f680:	add	x8, x8, #0x2
   1f684:	str	x8, [x19]
   1f688:	add	w8, w20, #0x1
   1f68c:	str	w8, [x19, #792]
   1f690:	ldr	x8, [x21, #8]
   1f694:	add	x9, x8, #0x20
   1f698:	cmp	x9, #0xfef
   1f69c:	b.ls	1f6bc <__cxa_demangle@@Base+0xcec4>  // b.plast
   1f6a0:	mov	w0, #0x1000                	// #4096
   1f6a4:	bl	ec00 <malloc@plt>
   1f6a8:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1f6ac:	mov	x8, xzr
   1f6b0:	stp	x21, xzr, [x0]
   1f6b4:	mov	x21, x0
   1f6b8:	str	x0, [x19, #4912]
   1f6bc:	add	x9, x8, #0x20
   1f6c0:	add	x23, x21, x8
   1f6c4:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1f6c8:	add	x8, x8, #0x1c0
   1f6cc:	mov	w10, #0x11b                 	// #283
   1f6d0:	movk	w10, #0x101, lsl #16
   1f6d4:	str	x9, [x21, #8]
   1f6d8:	str	x8, [x23, #16]!
   1f6dc:	str	x10, [x23, #8]
   1f6e0:	str	w20, [x23, #16]
   1f6e4:	ldr	x8, [x19, #672]
   1f6e8:	ldr	x9, [x19, #664]
   1f6ec:	cmp	x8, x9
   1f6f0:	b.eq	1fce4 <__cxa_demangle@@Base+0xd4ec>  // b.none
   1f6f4:	ldur	x24, [x8, #-8]
   1f6f8:	ldp	x8, x9, [x24, #8]
   1f6fc:	cmp	x8, x9
   1f700:	b.ne	1f920 <__cxa_demangle@@Base+0xd128>  // b.any
   1f704:	mov	x9, x24
   1f708:	ldr	x22, [x9], #24
   1f70c:	cmp	x9, x22
   1f710:	sub	x20, x8, x22
   1f714:	b.eq	1f8e4 <__cxa_demangle@@Base+0xd0ec>  // b.none
   1f718:	lsl	x1, x20, #1
   1f71c:	mov	x0, x22
   1f720:	bl	ecc0 <realloc@plt>
   1f724:	mov	x21, x0
   1f728:	str	x0, [x24]
   1f72c:	cbnz	x0, 1f90c <__cxa_demangle@@Base+0xd114>
   1f730:	b	1fce0 <__cxa_demangle@@Base+0xd4e8>
   1f734:	ldrb	w9, [x8]
   1f738:	cmp	w9, #0x54
   1f73c:	b.ne	1fac8 <__cxa_demangle@@Base+0xd2d0>  // b.any
   1f740:	ldrb	w9, [x8, #1]
   1f744:	cmp	w9, #0x6e
   1f748:	b.ne	1f80c <__cxa_demangle@@Base+0xd014>  // b.any
   1f74c:	ldr	w20, [x19, #796]
   1f750:	ldr	x21, [x19, #4912]
   1f754:	add	x8, x8, #0x2
   1f758:	str	x8, [x19]
   1f75c:	add	w8, w20, #0x1
   1f760:	str	w8, [x19, #796]
   1f764:	ldr	x8, [x21, #8]
   1f768:	add	x9, x8, #0x20
   1f76c:	cmp	x9, #0xfef
   1f770:	b.ls	1f790 <__cxa_demangle@@Base+0xcf98>  // b.plast
   1f774:	mov	w0, #0x1000                	// #4096
   1f778:	bl	ec00 <malloc@plt>
   1f77c:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1f780:	mov	x8, xzr
   1f784:	stp	x21, xzr, [x0]
   1f788:	mov	x21, x0
   1f78c:	str	x0, [x19, #4912]
   1f790:	add	x9, x8, #0x20
   1f794:	add	x23, x21, x8
   1f798:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1f79c:	mov	x10, #0x11b                 	// #283
   1f7a0:	add	x8, x8, #0x1c0
   1f7a4:	movk	x10, #0x101, lsl #16
   1f7a8:	movk	x10, #0x1, lsl #32
   1f7ac:	str	x9, [x21, #8]
   1f7b0:	str	x8, [x23, #16]!
   1f7b4:	str	x10, [x23, #8]
   1f7b8:	str	w20, [x23, #16]
   1f7bc:	ldr	x8, [x19, #672]
   1f7c0:	ldr	x9, [x19, #664]
   1f7c4:	cmp	x8, x9
   1f7c8:	b.eq	1fce4 <__cxa_demangle@@Base+0xd4ec>  // b.none
   1f7cc:	ldur	x24, [x8, #-8]
   1f7d0:	ldp	x8, x9, [x24, #8]
   1f7d4:	cmp	x8, x9
   1f7d8:	b.ne	1fa50 <__cxa_demangle@@Base+0xd258>  // b.any
   1f7dc:	mov	x9, x24
   1f7e0:	ldr	x22, [x9], #24
   1f7e4:	cmp	x9, x22
   1f7e8:	sub	x20, x8, x22
   1f7ec:	b.eq	1fa14 <__cxa_demangle@@Base+0xd21c>  // b.none
   1f7f0:	lsl	x1, x20, #1
   1f7f4:	mov	x0, x22
   1f7f8:	bl	ecc0 <realloc@plt>
   1f7fc:	mov	x21, x0
   1f800:	str	x0, [x24]
   1f804:	cbnz	x0, 1fa3c <__cxa_demangle@@Base+0xd244>
   1f808:	b	1fce0 <__cxa_demangle@@Base+0xd4e8>
   1f80c:	ldrb	w9, [x8]
   1f810:	cmp	w9, #0x54
   1f814:	b.ne	1fac8 <__cxa_demangle@@Base+0xd2d0>  // b.any
   1f818:	ldrb	w9, [x8, #1]
   1f81c:	cmp	w9, #0x74
   1f820:	b.ne	1f988 <__cxa_demangle@@Base+0xd190>  // b.any
   1f824:	ldr	w20, [x19, #800]
   1f828:	ldr	x21, [x19, #4912]
   1f82c:	add	x8, x8, #0x2
   1f830:	str	x8, [x19]
   1f834:	add	w8, w20, #0x1
   1f838:	str	w8, [x19, #800]
   1f83c:	ldr	x8, [x21, #8]
   1f840:	add	x9, x8, #0x20
   1f844:	cmp	x9, #0xfef
   1f848:	b.ls	1f868 <__cxa_demangle@@Base+0xd070>  // b.plast
   1f84c:	mov	w0, #0x1000                	// #4096
   1f850:	bl	ec00 <malloc@plt>
   1f854:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1f858:	mov	x8, xzr
   1f85c:	stp	x21, xzr, [x0]
   1f860:	mov	x21, x0
   1f864:	str	x0, [x19, #4912]
   1f868:	add	x9, x8, #0x20
   1f86c:	add	x24, x21, x8
   1f870:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1f874:	mov	x10, #0x11b                 	// #283
   1f878:	add	x8, x8, #0x1c0
   1f87c:	movk	x10, #0x101, lsl #16
   1f880:	movk	x10, #0x2, lsl #32
   1f884:	str	x9, [x21, #8]
   1f888:	str	x8, [x24, #16]!
   1f88c:	str	x10, [x24, #8]
   1f890:	str	w20, [x24, #16]
   1f894:	ldr	x8, [x19, #672]
   1f898:	ldr	x9, [x19, #664]
   1f89c:	cmp	x8, x9
   1f8a0:	b.eq	1fce4 <__cxa_demangle@@Base+0xd4ec>  // b.none
   1f8a4:	ldur	x23, [x8, #-8]
   1f8a8:	ldp	x8, x9, [x23, #8]
   1f8ac:	cmp	x8, x9
   1f8b0:	b.ne	1fb28 <__cxa_demangle@@Base+0xd330>  // b.any
   1f8b4:	mov	x9, x23
   1f8b8:	ldr	x22, [x9], #24
   1f8bc:	sub	x20, x8, x22
   1f8c0:	cmp	x9, x22
   1f8c4:	lsl	x1, x20, #1
   1f8c8:	b.eq	1faec <__cxa_demangle@@Base+0xd2f4>  // b.none
   1f8cc:	mov	x0, x22
   1f8d0:	bl	ecc0 <realloc@plt>
   1f8d4:	mov	x21, x0
   1f8d8:	str	x0, [x23]
   1f8dc:	cbnz	x0, 1fb14 <__cxa_demangle@@Base+0xd31c>
   1f8e0:	b	1fce0 <__cxa_demangle@@Base+0xd4e8>
   1f8e4:	lsl	x0, x20, #1
   1f8e8:	bl	ec00 <malloc@plt>
   1f8ec:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1f8f0:	mov	x21, x0
   1f8f4:	cbz	x20, 1f908 <__cxa_demangle@@Base+0xd110>
   1f8f8:	mov	x0, x21
   1f8fc:	mov	x1, x22
   1f900:	mov	x2, x20
   1f904:	bl	eae0 <memmove@plt>
   1f908:	str	x21, [x24]
   1f90c:	asr	x8, x20, #3
   1f910:	asr	x9, x20, #2
   1f914:	add	x8, x21, x8, lsl #3
   1f918:	add	x9, x21, x9, lsl #3
   1f91c:	stp	x8, x9, [x24, #8]
   1f920:	add	x9, x8, #0x8
   1f924:	str	x9, [x24, #8]
   1f928:	str	x23, [x8]
   1f92c:	ldr	x20, [x19, #4912]
   1f930:	ldr	x8, [x20, #8]
   1f934:	add	x9, x8, #0x20
   1f938:	cmp	x9, #0xff0
   1f93c:	b.cc	1f95c <__cxa_demangle@@Base+0xd164>  // b.lo, b.ul, b.last
   1f940:	mov	w0, #0x1000                	// #4096
   1f944:	bl	ec00 <malloc@plt>
   1f948:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1f94c:	mov	x8, xzr
   1f950:	stp	x20, xzr, [x0]
   1f954:	mov	x20, x0
   1f958:	str	x0, [x19, #4912]
   1f95c:	add	x9, x8, #0x20
   1f960:	add	x19, x20, x8
   1f964:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1f968:	add	x8, x8, #0x230
   1f96c:	mov	w10, #0x1c                  	// #28
   1f970:	movk	w10, #0x101, lsl #16
   1f974:	str	x9, [x20, #8]
   1f978:	str	x8, [x19, #16]!
   1f97c:	str	w10, [x19, #8]
   1f980:	str	x23, [x19, #16]
   1f984:	b	1facc <__cxa_demangle@@Base+0xd2d4>
   1f988:	ldrb	w9, [x8]
   1f98c:	cmp	w9, #0x54
   1f990:	b.ne	1fac8 <__cxa_demangle@@Base+0xd2d0>  // b.any
   1f994:	ldrb	w9, [x8, #1]
   1f998:	cmp	w9, #0x70
   1f99c:	b.ne	1fac8 <__cxa_demangle@@Base+0xd2d0>  // b.any
   1f9a0:	add	x8, x8, #0x2
   1f9a4:	mov	x0, x19
   1f9a8:	str	x8, [x19]
   1f9ac:	bl	1f630 <__cxa_demangle@@Base+0xce38>
   1f9b0:	cbz	x0, 1fac8 <__cxa_demangle@@Base+0xd2d0>
   1f9b4:	ldr	x21, [x19, #4912]
   1f9b8:	mov	x20, x0
   1f9bc:	ldr	x8, [x21, #8]
   1f9c0:	add	x9, x8, #0x20
   1f9c4:	cmp	x9, #0xff0
   1f9c8:	b.cc	1f9e8 <__cxa_demangle@@Base+0xd1f0>  // b.lo, b.ul, b.last
   1f9cc:	mov	w0, #0x1000                	// #4096
   1f9d0:	bl	ec00 <malloc@plt>
   1f9d4:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1f9d8:	mov	x8, xzr
   1f9dc:	stp	x21, xzr, [x0]
   1f9e0:	mov	x21, x0
   1f9e4:	str	x0, [x19, #4912]
   1f9e8:	add	x9, x8, #0x20
   1f9ec:	add	x19, x21, x8
   1f9f0:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1f9f4:	add	x8, x8, #0x380
   1f9f8:	mov	w10, #0x1f                  	// #31
   1f9fc:	movk	w10, #0x101, lsl #16
   1fa00:	str	x9, [x21, #8]
   1fa04:	str	x8, [x19, #16]!
   1fa08:	str	w10, [x19, #8]
   1fa0c:	str	x20, [x19, #16]
   1fa10:	b	1facc <__cxa_demangle@@Base+0xd2d4>
   1fa14:	lsl	x0, x20, #1
   1fa18:	bl	ec00 <malloc@plt>
   1fa1c:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1fa20:	mov	x21, x0
   1fa24:	cbz	x20, 1fa38 <__cxa_demangle@@Base+0xd240>
   1fa28:	mov	x0, x21
   1fa2c:	mov	x1, x22
   1fa30:	mov	x2, x20
   1fa34:	bl	eae0 <memmove@plt>
   1fa38:	str	x21, [x24]
   1fa3c:	asr	x8, x20, #3
   1fa40:	asr	x9, x20, #2
   1fa44:	add	x8, x21, x8, lsl #3
   1fa48:	add	x9, x21, x9, lsl #3
   1fa4c:	stp	x8, x9, [x24, #8]
   1fa50:	add	x9, x8, #0x8
   1fa54:	mov	x0, x19
   1fa58:	str	x9, [x24, #8]
   1fa5c:	str	x23, [x8]
   1fa60:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   1fa64:	cbz	x0, 1fac8 <__cxa_demangle@@Base+0xd2d0>
   1fa68:	ldr	x21, [x19, #4912]
   1fa6c:	mov	x20, x0
   1fa70:	ldr	x8, [x21, #8]
   1fa74:	add	x9, x8, #0x20
   1fa78:	cmp	x9, #0xff0
   1fa7c:	b.cc	1fa9c <__cxa_demangle@@Base+0xd2a4>  // b.lo, b.ul, b.last
   1fa80:	mov	w0, #0x1000                	// #4096
   1fa84:	bl	ec00 <malloc@plt>
   1fa88:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1fa8c:	mov	x8, xzr
   1fa90:	stp	x21, xzr, [x0]
   1fa94:	mov	x21, x0
   1fa98:	str	x0, [x19, #4912]
   1fa9c:	add	x9, x8, #0x20
   1faa0:	add	x19, x21, x8
   1faa4:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1faa8:	add	x8, x8, #0x2a0
   1faac:	mov	w10, #0x1d                  	// #29
   1fab0:	movk	w10, #0x101, lsl #16
   1fab4:	str	x9, [x21, #8]
   1fab8:	str	x8, [x19, #16]!
   1fabc:	str	w10, [x19, #8]
   1fac0:	stp	x23, x20, [x19, #16]
   1fac4:	b	1facc <__cxa_demangle@@Base+0xd2d4>
   1fac8:	mov	x19, xzr
   1facc:	mov	x0, x19
   1fad0:	ldp	x20, x19, [sp, #176]
   1fad4:	ldp	x22, x21, [sp, #160]
   1fad8:	ldp	x24, x23, [sp, #144]
   1fadc:	ldp	x26, x25, [sp, #128]
   1fae0:	ldp	x29, x30, [sp, #112]
   1fae4:	add	sp, sp, #0xc0
   1fae8:	ret
   1faec:	mov	x0, x1
   1faf0:	bl	ec00 <malloc@plt>
   1faf4:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1faf8:	mov	x21, x0
   1fafc:	cbz	x20, 1fb10 <__cxa_demangle@@Base+0xd318>
   1fb00:	mov	x0, x21
   1fb04:	mov	x1, x22
   1fb08:	mov	x2, x20
   1fb0c:	bl	eae0 <memmove@plt>
   1fb10:	str	x21, [x23]
   1fb14:	asr	x8, x20, #3
   1fb18:	asr	x9, x20, #2
   1fb1c:	add	x8, x21, x8, lsl #3
   1fb20:	add	x9, x21, x9, lsl #3
   1fb24:	stp	x8, x9, [x23, #8]
   1fb28:	add	x9, x8, #0x8
   1fb2c:	str	x9, [x23, #8]
   1fb30:	str	x24, [x8]
   1fb34:	ldp	x9, x8, [x19, #16]
   1fb38:	add	x0, sp, #0x8
   1fb3c:	mov	x1, x19
   1fb40:	sub	x8, x8, x9
   1fb44:	asr	x25, x8, #3
   1fb48:	bl	1f534 <__cxa_demangle@@Base+0xcd3c>
   1fb4c:	add	x26, x19, #0x28
   1fb50:	b	1fb88 <__cxa_demangle@@Base+0xd390>
   1fb54:	mov	x0, x23
   1fb58:	bl	ecc0 <realloc@plt>
   1fb5c:	mov	x22, x0
   1fb60:	str	x0, [x19, #16]
   1fb64:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1fb68:	asr	x8, x21, #3
   1fb6c:	asr	x9, x21, #2
   1fb70:	add	x8, x22, x8, lsl #3
   1fb74:	add	x9, x22, x9, lsl #3
   1fb78:	stp	x8, x9, [x19, #24]
   1fb7c:	add	x9, x8, #0x8
   1fb80:	str	x9, [x19, #24]
   1fb84:	str	x20, [x8]
   1fb88:	ldp	x8, x9, [x19]
   1fb8c:	cmp	x9, x8
   1fb90:	b.eq	1fba0 <__cxa_demangle@@Base+0xd3a8>  // b.none
   1fb94:	ldrb	w9, [x8]
   1fb98:	cmp	w9, #0x45
   1fb9c:	b.eq	1fc04 <__cxa_demangle@@Base+0xd40c>  // b.none
   1fba0:	mov	x0, x19
   1fba4:	bl	1f630 <__cxa_demangle@@Base+0xce38>
   1fba8:	mov	x20, x0
   1fbac:	cbz	x0, 1fbfc <__cxa_demangle@@Base+0xd404>
   1fbb0:	ldp	x8, x9, [x19, #24]
   1fbb4:	cmp	x8, x9
   1fbb8:	b.ne	1fb7c <__cxa_demangle@@Base+0xd384>  // b.any
   1fbbc:	ldr	x23, [x19, #16]
   1fbc0:	sub	x21, x8, x23
   1fbc4:	cmp	x26, x23
   1fbc8:	lsl	x1, x21, #1
   1fbcc:	b.ne	1fb54 <__cxa_demangle@@Base+0xd35c>  // b.any
   1fbd0:	mov	x0, x1
   1fbd4:	bl	ec00 <malloc@plt>
   1fbd8:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1fbdc:	mov	x22, x0
   1fbe0:	cbz	x21, 1fbf4 <__cxa_demangle@@Base+0xd3fc>
   1fbe4:	mov	x0, x22
   1fbe8:	mov	x1, x23
   1fbec:	mov	x2, x21
   1fbf0:	bl	eae0 <memmove@plt>
   1fbf4:	str	x22, [x19, #16]
   1fbf8:	b	1fb68 <__cxa_demangle@@Base+0xd370>
   1fbfc:	mov	x19, xzr
   1fc00:	b	1fca4 <__cxa_demangle@@Base+0xd4ac>
   1fc04:	ldp	x9, x2, [x19, #16]
   1fc08:	add	x8, x8, #0x1
   1fc0c:	str	x8, [x19]
   1fc10:	sub	x10, x2, x9
   1fc14:	cmp	x25, x10, asr #3
   1fc18:	b.hi	1fd04 <__cxa_demangle@@Base+0xd50c>  // b.pmore
   1fc1c:	add	x1, x9, x25, lsl #3
   1fc20:	mov	x0, x19
   1fc24:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   1fc28:	ldp	x8, x9, [x19, #16]
   1fc2c:	sub	x9, x9, x8
   1fc30:	cmp	x25, x9, asr #3
   1fc34:	b.hi	1fd24 <__cxa_demangle@@Base+0xd52c>  // b.pmore
   1fc38:	ldr	x22, [x19, #4912]
   1fc3c:	add	x8, x8, x25, lsl #3
   1fc40:	str	x8, [x19, #24]
   1fc44:	mov	x20, x0
   1fc48:	ldr	x8, [x22, #8]
   1fc4c:	mov	x21, x1
   1fc50:	add	x9, x8, #0x30
   1fc54:	cmp	x9, #0xff0
   1fc58:	b.cc	1fc78 <__cxa_demangle@@Base+0xd480>  // b.lo, b.ul, b.last
   1fc5c:	mov	w0, #0x1000                	// #4096
   1fc60:	bl	ec00 <malloc@plt>
   1fc64:	cbz	x0, 1fce0 <__cxa_demangle@@Base+0xd4e8>
   1fc68:	mov	x8, xzr
   1fc6c:	stp	x22, xzr, [x0]
   1fc70:	mov	x22, x0
   1fc74:	str	x0, [x19, #4912]
   1fc78:	add	x9, x8, #0x30
   1fc7c:	add	x19, x22, x8
   1fc80:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   1fc84:	add	x8, x8, #0x310
   1fc88:	mov	w10, #0x1e                  	// #30
   1fc8c:	movk	w10, #0x101, lsl #16
   1fc90:	str	x9, [x22, #8]
   1fc94:	str	x8, [x19, #16]!
   1fc98:	str	w10, [x19, #8]
   1fc9c:	stp	x24, x20, [x19, #16]
   1fca0:	str	x21, [x19, #32]
   1fca4:	ldp	x8, x9, [sp, #8]
   1fca8:	ldr	x11, [x8, #672]
   1fcac:	ldr	x10, [x8, #664]
   1fcb0:	sub	x11, x11, x10
   1fcb4:	cmp	x9, x11, asr #3
   1fcb8:	b.hi	1fd5c <__cxa_demangle@@Base+0xd564>  // b.pmore
   1fcbc:	add	x9, x10, x9, lsl #3
   1fcc0:	str	x9, [x8, #672]
   1fcc4:	ldr	x0, [sp, #24]
   1fcc8:	add	x8, sp, #0x8
   1fccc:	add	x8, x8, #0x28
   1fcd0:	cmp	x0, x8
   1fcd4:	b.eq	1facc <__cxa_demangle@@Base+0xd2d4>  // b.none
   1fcd8:	bl	ed60 <free@plt>
   1fcdc:	b	1facc <__cxa_demangle@@Base+0xd2d4>
   1fce0:	bl	eeb0 <_ZSt9terminatev@plt>
   1fce4:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1fce8:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1fcec:	adrp	x3, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1fcf0:	add	x0, x0, #0x572
   1fcf4:	add	x1, x1, #0xce9
   1fcf8:	add	x3, x3, #0x5a5
   1fcfc:	mov	w2, #0x8e3                 	// #2275
   1fd00:	bl	ee90 <__assert_fail@plt>
   1fd04:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1fd08:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1fd0c:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1fd10:	add	x0, x0, #0xdf
   1fd14:	add	x1, x1, #0xce9
   1fd18:	add	x3, x3, #0xfc
   1fd1c:	mov	w2, #0x94b                 	// #2379
   1fd20:	bl	ee90 <__assert_fail@plt>
   1fd24:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1fd28:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1fd2c:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   1fd30:	add	x0, x0, #0xa2e
   1fd34:	add	x1, x1, #0xce9
   1fd38:	add	x3, x3, #0x2b6
   1fd3c:	mov	w2, #0x8d9                 	// #2265
   1fd40:	bl	ee90 <__assert_fail@plt>
   1fd44:	ldp	x8, x9, [sp, #8]
   1fd48:	ldr	x11, [x8, #672]
   1fd4c:	ldr	x10, [x8, #664]
   1fd50:	sub	x11, x11, x10
   1fd54:	cmp	x9, x11, asr #3
   1fd58:	b.ls	1fd7c <__cxa_demangle@@Base+0xd584>  // b.plast
   1fd5c:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1fd60:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   1fd64:	adrp	x3, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   1fd68:	add	x0, x0, #0x856
   1fd6c:	add	x1, x1, #0xce9
   1fd70:	add	x3, x3, #0x890
   1fd74:	mov	w2, #0x90e                 	// #2318
   1fd78:	bl	ee90 <__assert_fail@plt>
   1fd7c:	add	x9, x10, x9, lsl #3
   1fd80:	str	x9, [x8, #672]
   1fd84:	mov	x19, x0
   1fd88:	ldr	x0, [sp, #24]
   1fd8c:	add	x8, sp, #0x8
   1fd90:	add	x8, x8, #0x28
   1fd94:	cmp	x0, x8
   1fd98:	b.eq	1fda0 <__cxa_demangle@@Base+0xd5a8>  // b.none
   1fd9c:	bl	ed60 <free@plt>
   1fda0:	mov	x0, x19
   1fda4:	bl	eea0 <_Unwind_Resume@plt>
   1fda8:	stp	x29, x30, [sp, #-48]!
   1fdac:	str	x21, [sp, #16]
   1fdb0:	stp	x20, x19, [sp, #32]
   1fdb4:	mov	x29, sp
   1fdb8:	ldp	x8, x10, [x1, #8]
   1fdbc:	mov	x19, x1
   1fdc0:	mov	x20, x0
   1fdc4:	add	x9, x8, #0x8
   1fdc8:	cmp	x9, x10
   1fdcc:	b.cs	1fdd8 <__cxa_demangle@@Base+0xd5e0>  // b.hs, b.nlast
   1fdd0:	ldr	x0, [x19]
   1fdd4:	b	1fdfc <__cxa_demangle@@Base+0xd604>
   1fdd8:	ldr	x0, [x19]
   1fddc:	lsl	x8, x10, #1
   1fde0:	cmp	x8, x9
   1fde4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1fde8:	str	x1, [x19, #16]
   1fdec:	bl	ecc0 <realloc@plt>
   1fdf0:	str	x0, [x19]
   1fdf4:	cbz	x0, 1fee0 <__cxa_demangle@@Base+0xd6e8>
   1fdf8:	ldr	x8, [x19, #8]
   1fdfc:	mov	x9, #0x7527                	// #29991
   1fe00:	movk	x9, #0x6e6e, lsl #16
   1fe04:	movk	x9, #0x6d61, lsl #32
   1fe08:	movk	x9, #0x6465, lsl #48
   1fe0c:	str	x9, [x0, x8]
   1fe10:	ldr	x8, [x19, #8]
   1fe14:	add	x8, x8, #0x8
   1fe18:	str	x8, [x19, #8]
   1fe1c:	ldp	x21, x9, [x20, #16]
   1fe20:	subs	x20, x9, x21
   1fe24:	b.eq	1fe80 <__cxa_demangle@@Base+0xd688>  // b.none
   1fe28:	ldr	x10, [x19, #16]
   1fe2c:	add	x9, x8, x20
   1fe30:	cmp	x9, x10
   1fe34:	b.cs	1fe40 <__cxa_demangle@@Base+0xd648>  // b.hs, b.nlast
   1fe38:	ldr	x0, [x19]
   1fe3c:	b	1fe64 <__cxa_demangle@@Base+0xd66c>
   1fe40:	ldr	x0, [x19]
   1fe44:	lsl	x8, x10, #1
   1fe48:	cmp	x8, x9
   1fe4c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1fe50:	str	x1, [x19, #16]
   1fe54:	bl	ecc0 <realloc@plt>
   1fe58:	str	x0, [x19]
   1fe5c:	cbz	x0, 1fee0 <__cxa_demangle@@Base+0xd6e8>
   1fe60:	ldr	x8, [x19, #8]
   1fe64:	add	x0, x0, x8
   1fe68:	mov	x1, x21
   1fe6c:	mov	x2, x20
   1fe70:	bl	eae0 <memmove@plt>
   1fe74:	ldr	x8, [x19, #8]
   1fe78:	add	x8, x8, x20
   1fe7c:	str	x8, [x19, #8]
   1fe80:	ldr	x10, [x19, #16]
   1fe84:	add	x9, x8, #0x1
   1fe88:	cmp	x9, x10
   1fe8c:	b.cs	1fe98 <__cxa_demangle@@Base+0xd6a0>  // b.hs, b.nlast
   1fe90:	ldr	x0, [x19]
   1fe94:	b	1febc <__cxa_demangle@@Base+0xd6c4>
   1fe98:	ldr	x0, [x19]
   1fe9c:	lsl	x8, x10, #1
   1fea0:	cmp	x8, x9
   1fea4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1fea8:	str	x1, [x19, #16]
   1feac:	bl	ecc0 <realloc@plt>
   1feb0:	str	x0, [x19]
   1feb4:	cbz	x0, 1fee0 <__cxa_demangle@@Base+0xd6e8>
   1feb8:	ldr	x8, [x19, #8]
   1febc:	mov	w9, #0x27                  	// #39
   1fec0:	strb	w9, [x0, x8]
   1fec4:	ldr	x8, [x19, #8]
   1fec8:	ldr	x21, [sp, #16]
   1fecc:	add	x8, x8, #0x1
   1fed0:	str	x8, [x19, #8]
   1fed4:	ldp	x20, x19, [sp, #32]
   1fed8:	ldp	x29, x30, [sp], #48
   1fedc:	ret
   1fee0:	bl	eeb0 <_ZSt9terminatev@plt>
   1fee4:	b	eb20 <_ZdlPv@plt>
   1fee8:	sub	sp, sp, #0x50
   1feec:	stp	x29, x30, [sp, #32]
   1fef0:	str	x21, [sp, #48]
   1fef4:	stp	x20, x19, [sp, #64]
   1fef8:	add	x29, sp, #0x20
   1fefc:	ldr	w8, [x0, #12]
   1ff00:	mov	x20, x0
   1ff04:	mov	x19, x1
   1ff08:	cmp	w8, #0x2
   1ff0c:	b.eq	1ff60 <__cxa_demangle@@Base+0xd768>  // b.none
   1ff10:	cmp	w8, #0x1
   1ff14:	b.eq	1ff3c <__cxa_demangle@@Base+0xd744>  // b.none
   1ff18:	cbnz	w8, 20028 <__cxa_demangle@@Base+0xd830>
   1ff1c:	mov	x21, x19
   1ff20:	ldr	x8, [x21, #8]!
   1ff24:	ldr	x10, [x21, #8]
   1ff28:	add	x9, x8, #0x2
   1ff2c:	cmp	x9, x10
   1ff30:	b.cs	1ffec <__cxa_demangle@@Base+0xd7f4>  // b.hs, b.nlast
   1ff34:	ldr	x0, [x19]
   1ff38:	b	20010 <__cxa_demangle@@Base+0xd818>
   1ff3c:	mov	x21, x19
   1ff40:	ldr	x8, [x21, #8]!
   1ff44:	ldr	x10, [x21, #8]
   1ff48:	add	x9, x8, #0x2
   1ff4c:	cmp	x9, x10
   1ff50:	b.cs	1ff80 <__cxa_demangle@@Base+0xd788>  // b.hs, b.nlast
   1ff54:	ldr	x0, [x19]
   1ff58:	mov	w9, #0x4e24                	// #20004
   1ff5c:	b	20014 <__cxa_demangle@@Base+0xd81c>
   1ff60:	mov	x21, x19
   1ff64:	ldr	x8, [x21, #8]!
   1ff68:	ldr	x10, [x21, #8]
   1ff6c:	add	x9, x8, #0x3
   1ff70:	cmp	x9, x10
   1ff74:	b.cs	1ffac <__cxa_demangle@@Base+0xd7b4>  // b.hs, b.nlast
   1ff78:	ldr	x0, [x19]
   1ff7c:	b	1ffd0 <__cxa_demangle@@Base+0xd7d8>
   1ff80:	ldr	x0, [x19]
   1ff84:	lsl	x8, x10, #1
   1ff88:	cmp	x8, x9
   1ff8c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1ff90:	str	x1, [x19, #16]
   1ff94:	bl	ecc0 <realloc@plt>
   1ff98:	str	x0, [x19]
   1ff9c:	cbz	x0, 20138 <__cxa_demangle@@Base+0xd940>
   1ffa0:	ldr	x8, [x21]
   1ffa4:	mov	w9, #0x4e24                	// #20004
   1ffa8:	b	20014 <__cxa_demangle@@Base+0xd81c>
   1ffac:	ldr	x0, [x19]
   1ffb0:	lsl	x8, x10, #1
   1ffb4:	cmp	x8, x9
   1ffb8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1ffbc:	str	x1, [x19, #16]
   1ffc0:	bl	ecc0 <realloc@plt>
   1ffc4:	str	x0, [x19]
   1ffc8:	cbz	x0, 20138 <__cxa_demangle@@Base+0xd940>
   1ffcc:	ldr	x8, [x21]
   1ffd0:	add	x8, x0, x8
   1ffd4:	mov	w9, #0x54                  	// #84
   1ffd8:	mov	w10, #0x5424                	// #21540
   1ffdc:	strb	w9, [x8, #2]
   1ffe0:	strh	w10, [x8]
   1ffe4:	mov	w8, #0x3                   	// #3
   1ffe8:	b	2001c <__cxa_demangle@@Base+0xd824>
   1ffec:	ldr	x0, [x19]
   1fff0:	lsl	x8, x10, #1
   1fff4:	cmp	x8, x9
   1fff8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   1fffc:	str	x1, [x19, #16]
   20000:	bl	ecc0 <realloc@plt>
   20004:	str	x0, [x19]
   20008:	cbz	x0, 20138 <__cxa_demangle@@Base+0xd940>
   2000c:	ldr	x8, [x21]
   20010:	mov	w9, #0x5424                	// #21540
   20014:	strh	w9, [x0, x8]
   20018:	mov	w8, #0x2                   	// #2
   2001c:	ldr	x9, [x21]
   20020:	add	x8, x9, x8
   20024:	str	x8, [x21]
   20028:	ldr	w8, [x20, #16]
   2002c:	cbz	w8, 20124 <__cxa_demangle@@Base+0xd92c>
   20030:	subs	w8, w8, #0x1
   20034:	b.eq	20094 <__cxa_demangle@@Base+0xd89c>  // b.none
   20038:	mov	w9, w8
   2003c:	add	x8, sp, #0x8
   20040:	add	x8, x8, #0x15
   20044:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   20048:	movk	x10, #0xcccd
   2004c:	mov	w11, #0xa                   	// #10
   20050:	mov	x20, x8
   20054:	umulh	x12, x9, x10
   20058:	lsr	x12, x12, #3
   2005c:	msub	w13, w12, w11, w9
   20060:	orr	w13, w13, #0x30
   20064:	cmp	x9, #0x9
   20068:	strb	w13, [x20, #-1]!
   2006c:	mov	x9, x12
   20070:	b.hi	20054 <__cxa_demangle@@Base+0xd85c>  // b.pmore
   20074:	subs	x21, x8, x20
   20078:	b.eq	20124 <__cxa_demangle@@Base+0xd92c>  // b.none
   2007c:	ldp	x8, x10, [x19, #8]
   20080:	add	x9, x8, x21
   20084:	cmp	x9, x10
   20088:	b.cs	200ac <__cxa_demangle@@Base+0xd8b4>  // b.hs, b.nlast
   2008c:	ldr	x0, [x19]
   20090:	b	200d0 <__cxa_demangle@@Base+0xd8d8>
   20094:	ldp	x8, x10, [x19, #8]
   20098:	add	x9, x8, #0x1
   2009c:	cmp	x9, x10
   200a0:	b.cs	200f0 <__cxa_demangle@@Base+0xd8f8>  // b.hs, b.nlast
   200a4:	ldr	x0, [x19]
   200a8:	b	20118 <__cxa_demangle@@Base+0xd920>
   200ac:	ldr	x0, [x19]
   200b0:	lsl	x8, x10, #1
   200b4:	cmp	x8, x9
   200b8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   200bc:	str	x1, [x19, #16]
   200c0:	bl	ecc0 <realloc@plt>
   200c4:	str	x0, [x19]
   200c8:	cbz	x0, 20138 <__cxa_demangle@@Base+0xd940>
   200cc:	ldr	x8, [x19, #8]
   200d0:	add	x0, x0, x8
   200d4:	mov	x1, x20
   200d8:	mov	x2, x21
   200dc:	bl	eae0 <memmove@plt>
   200e0:	ldr	x8, [x19, #8]
   200e4:	add	x8, x8, x21
   200e8:	str	x8, [x19, #8]
   200ec:	b	20124 <__cxa_demangle@@Base+0xd92c>
   200f0:	ldr	x0, [x19]
   200f4:	lsl	x8, x10, #1
   200f8:	cmp	x8, x9
   200fc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20100:	str	x1, [x19, #16]
   20104:	bl	ecc0 <realloc@plt>
   20108:	str	x0, [x19]
   2010c:	cbz	x0, 20138 <__cxa_demangle@@Base+0xd940>
   20110:	ldr	x8, [x19, #8]
   20114:	add	x9, x8, #0x1
   20118:	str	x9, [x19, #8]
   2011c:	mov	w9, #0x30                  	// #48
   20120:	strb	w9, [x0, x8]
   20124:	ldp	x20, x19, [sp, #64]
   20128:	ldr	x21, [sp, #48]
   2012c:	ldp	x29, x30, [sp, #32]
   20130:	add	sp, sp, #0x50
   20134:	ret
   20138:	bl	eeb0 <_ZSt9terminatev@plt>
   2013c:	b	eb20 <_ZdlPv@plt>
   20140:	stp	x29, x30, [sp, #-32]!
   20144:	str	x19, [sp, #16]
   20148:	mov	x29, sp
   2014c:	ldp	x8, x10, [x1, #8]
   20150:	mov	x19, x1
   20154:	add	x9, x8, #0x9
   20158:	cmp	x9, x10
   2015c:	b.cs	20168 <__cxa_demangle@@Base+0xd970>  // b.hs, b.nlast
   20160:	ldr	x0, [x19]
   20164:	b	2018c <__cxa_demangle@@Base+0xd994>
   20168:	ldr	x0, [x19]
   2016c:	lsl	x8, x10, #1
   20170:	cmp	x8, x9
   20174:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20178:	str	x1, [x19, #16]
   2017c:	bl	ecc0 <realloc@plt>
   20180:	str	x0, [x19]
   20184:	cbz	x0, 201c0 <__cxa_demangle@@Base+0xd9c8>
   20188:	ldr	x8, [x19, #8]
   2018c:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   20190:	add	x9, x9, #0x6e1
   20194:	ldr	x9, [x9]
   20198:	add	x8, x0, x8
   2019c:	mov	w10, #0x20                  	// #32
   201a0:	strb	w10, [x8, #8]
   201a4:	str	x9, [x8]
   201a8:	ldr	x8, [x19, #8]
   201ac:	add	x8, x8, #0x9
   201b0:	str	x8, [x19, #8]
   201b4:	ldr	x19, [sp, #16]
   201b8:	ldp	x29, x30, [sp], #32
   201bc:	ret
   201c0:	bl	eeb0 <_ZSt9terminatev@plt>
   201c4:	stp	x29, x30, [sp, #-32]!
   201c8:	stp	x20, x19, [sp, #16]
   201cc:	mov	x29, sp
   201d0:	ldr	x19, [x0, #16]
   201d4:	mov	x20, x1
   201d8:	ldr	x8, [x19]
   201dc:	mov	x0, x19
   201e0:	ldr	x8, [x8, #32]
   201e4:	blr	x8
   201e8:	ldrb	w8, [x19, #9]
   201ec:	cmp	w8, #0x1
   201f0:	b.ne	20200 <__cxa_demangle@@Base+0xda08>  // b.any
   201f4:	ldp	x20, x19, [sp, #16]
   201f8:	ldp	x29, x30, [sp], #32
   201fc:	ret
   20200:	ldr	x8, [x19]
   20204:	mov	x0, x19
   20208:	mov	x1, x20
   2020c:	ldp	x20, x19, [sp, #16]
   20210:	ldr	x2, [x8, #40]
   20214:	ldp	x29, x30, [sp], #32
   20218:	br	x2
   2021c:	b	eb20 <_ZdlPv@plt>
   20220:	stp	x29, x30, [sp, #-32]!
   20224:	stp	x20, x19, [sp, #16]
   20228:	mov	x29, sp
   2022c:	mov	x20, x0
   20230:	ldr	x0, [x0, #24]
   20234:	mov	x19, x1
   20238:	ldr	x8, [x0]
   2023c:	ldr	x8, [x8, #32]
   20240:	blr	x8
   20244:	ldr	x0, [x20, #24]
   20248:	ldrb	w8, [x0, #9]
   2024c:	cbz	w8, 202bc <__cxa_demangle@@Base+0xdac4>
   20250:	cmp	w8, #0x2
   20254:	b.ne	2026c <__cxa_demangle@@Base+0xda74>  // b.any
   20258:	ldr	x8, [x0]
   2025c:	mov	x1, x19
   20260:	ldr	x8, [x8]
   20264:	blr	x8
   20268:	tbnz	w0, #0, 202bc <__cxa_demangle@@Base+0xdac4>
   2026c:	ldp	x8, x10, [x19, #8]
   20270:	add	x9, x8, #0x1
   20274:	cmp	x9, x10
   20278:	b.cs	20284 <__cxa_demangle@@Base+0xda8c>  // b.hs, b.nlast
   2027c:	ldr	x0, [x19]
   20280:	b	202a8 <__cxa_demangle@@Base+0xdab0>
   20284:	ldr	x0, [x19]
   20288:	lsl	x8, x10, #1
   2028c:	cmp	x8, x9
   20290:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20294:	str	x1, [x19, #16]
   20298:	bl	ecc0 <realloc@plt>
   2029c:	str	x0, [x19]
   202a0:	cbz	x0, 202c8 <__cxa_demangle@@Base+0xdad0>
   202a4:	ldr	x8, [x19, #8]
   202a8:	mov	w9, #0x20                  	// #32
   202ac:	strb	w9, [x0, x8]
   202b0:	ldr	x8, [x19, #8]
   202b4:	add	x8, x8, #0x1
   202b8:	str	x8, [x19, #8]
   202bc:	ldp	x20, x19, [sp, #16]
   202c0:	ldp	x29, x30, [sp], #32
   202c4:	ret
   202c8:	bl	eeb0 <_ZSt9terminatev@plt>
   202cc:	stp	x29, x30, [sp, #-48]!
   202d0:	str	x21, [sp, #16]
   202d4:	stp	x20, x19, [sp, #32]
   202d8:	mov	x29, sp
   202dc:	ldr	x21, [x0, #16]
   202e0:	mov	x20, x0
   202e4:	mov	x19, x1
   202e8:	ldr	x8, [x21]
   202ec:	mov	x0, x21
   202f0:	ldr	x8, [x8, #32]
   202f4:	blr	x8
   202f8:	ldrb	w8, [x21, #9]
   202fc:	cmp	w8, #0x1
   20300:	b.eq	20318 <__cxa_demangle@@Base+0xdb20>  // b.none
   20304:	ldr	x8, [x21]
   20308:	mov	x0, x21
   2030c:	mov	x1, x19
   20310:	ldr	x8, [x8, #40]
   20314:	blr	x8
   20318:	ldr	x0, [x20, #24]
   2031c:	mov	x1, x19
   20320:	ldp	x20, x19, [sp, #32]
   20324:	ldr	x21, [sp, #16]
   20328:	ldr	x8, [x0]
   2032c:	ldr	x2, [x8, #40]
   20330:	ldp	x29, x30, [sp], #48
   20334:	br	x2
   20338:	b	eb20 <_ZdlPv@plt>
   2033c:	stp	x29, x30, [sp, #-32]!
   20340:	stp	x20, x19, [sp, #16]
   20344:	mov	x29, sp
   20348:	ldp	x8, x10, [x1, #8]
   2034c:	mov	x19, x1
   20350:	mov	x20, x0
   20354:	add	x9, x8, #0x9
   20358:	cmp	x9, x10
   2035c:	b.cs	20368 <__cxa_demangle@@Base+0xdb70>  // b.hs, b.nlast
   20360:	ldr	x0, [x19]
   20364:	b	2038c <__cxa_demangle@@Base+0xdb94>
   20368:	ldr	x0, [x19]
   2036c:	lsl	x8, x10, #1
   20370:	cmp	x8, x9
   20374:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20378:	str	x1, [x19, #16]
   2037c:	bl	ecc0 <realloc@plt>
   20380:	str	x0, [x19]
   20384:	cbz	x0, 20434 <__cxa_demangle@@Base+0xdc3c>
   20388:	ldr	x8, [x19, #8]
   2038c:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   20390:	add	x9, x9, #0x6d5
   20394:	ldr	x9, [x9]
   20398:	add	x8, x0, x8
   2039c:	mov	w10, #0x3c                  	// #60
   203a0:	strb	w10, [x8, #8]
   203a4:	str	x9, [x8]
   203a8:	ldr	x8, [x19, #8]
   203ac:	add	x0, x20, #0x18
   203b0:	mov	x1, x19
   203b4:	add	x8, x8, #0x9
   203b8:	str	x8, [x19, #8]
   203bc:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   203c0:	ldp	x8, x10, [x19, #8]
   203c4:	add	x9, x8, #0xb
   203c8:	cmp	x9, x10
   203cc:	b.cs	203d8 <__cxa_demangle@@Base+0xdbe0>  // b.hs, b.nlast
   203d0:	ldr	x0, [x19]
   203d4:	b	203fc <__cxa_demangle@@Base+0xdc04>
   203d8:	ldr	x0, [x19]
   203dc:	lsl	x8, x10, #1
   203e0:	cmp	x8, x9
   203e4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   203e8:	str	x1, [x19, #16]
   203ec:	bl	ecc0 <realloc@plt>
   203f0:	str	x0, [x19]
   203f4:	cbz	x0, 20434 <__cxa_demangle@@Base+0xdc3c>
   203f8:	ldr	x8, [x19, #8]
   203fc:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   20400:	add	x9, x9, #0x6df
   20404:	ldr	x9, [x9]
   20408:	mov	w10, #0x6d61                	// #28001
   2040c:	add	x8, x0, x8
   20410:	movk	w10, #0x2065, lsl #16
   20414:	str	x9, [x8]
   20418:	stur	w10, [x8, #7]
   2041c:	ldr	x8, [x19, #8]
   20420:	add	x8, x8, #0xb
   20424:	str	x8, [x19, #8]
   20428:	ldp	x20, x19, [sp, #16]
   2042c:	ldp	x29, x30, [sp], #32
   20430:	ret
   20434:	bl	eeb0 <_ZSt9terminatev@plt>
   20438:	stp	x29, x30, [sp, #-32]!
   2043c:	stp	x20, x19, [sp, #16]
   20440:	mov	x29, sp
   20444:	ldr	x19, [x0, #16]
   20448:	mov	x20, x1
   2044c:	ldr	x8, [x19]
   20450:	mov	x0, x19
   20454:	ldr	x8, [x8, #32]
   20458:	blr	x8
   2045c:	ldrb	w8, [x19, #9]
   20460:	cmp	w8, #0x1
   20464:	b.ne	20474 <__cxa_demangle@@Base+0xdc7c>  // b.any
   20468:	ldp	x20, x19, [sp, #16]
   2046c:	ldp	x29, x30, [sp], #32
   20470:	ret
   20474:	ldr	x8, [x19]
   20478:	mov	x0, x19
   2047c:	mov	x1, x20
   20480:	ldp	x20, x19, [sp, #16]
   20484:	ldr	x2, [x8, #40]
   20488:	ldp	x29, x30, [sp], #32
   2048c:	br	x2
   20490:	b	eb20 <_ZdlPv@plt>
   20494:	stp	x29, x30, [sp, #-80]!
   20498:	stp	x26, x25, [sp, #16]
   2049c:	stp	x24, x23, [sp, #32]
   204a0:	stp	x22, x21, [sp, #48]
   204a4:	stp	x20, x19, [sp, #64]
   204a8:	mov	x29, sp
   204ac:	ldr	x8, [x0, #8]
   204b0:	cbz	x8, 20590 <__cxa_demangle@@Base+0xdd98>
   204b4:	ldr	x24, [x1, #8]
   204b8:	mov	x19, x0
   204bc:	mov	x20, x1
   204c0:	mov	x22, xzr
   204c4:	mov	w23, #0x1                   	// #1
   204c8:	mov	w25, #0x202c                	// #8236
   204cc:	b	204e4 <__cxa_demangle@@Base+0xdcec>
   204d0:	str	x24, [x20, #8]
   204d4:	ldr	x8, [x19, #8]
   204d8:	add	x22, x22, #0x1
   204dc:	cmp	x22, x8
   204e0:	b.eq	20590 <__cxa_demangle@@Base+0xdd98>  // b.none
   204e4:	mov	x26, x24
   204e8:	tbnz	w23, #0, 2053c <__cxa_demangle@@Base+0xdd44>
   204ec:	ldr	x9, [x20, #16]
   204f0:	add	x8, x24, #0x2
   204f4:	cmp	x8, x9
   204f8:	b.cs	20508 <__cxa_demangle@@Base+0xdd10>  // b.hs, b.nlast
   204fc:	ldr	x0, [x20]
   20500:	mov	x8, x24
   20504:	b	2052c <__cxa_demangle@@Base+0xdd34>
   20508:	ldr	x0, [x20]
   2050c:	lsl	x9, x9, #1
   20510:	cmp	x9, x8
   20514:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   20518:	str	x1, [x20, #16]
   2051c:	bl	ecc0 <realloc@plt>
   20520:	str	x0, [x20]
   20524:	cbz	x0, 205a8 <__cxa_demangle@@Base+0xddb0>
   20528:	ldr	x8, [x20, #8]
   2052c:	strh	w25, [x0, x8]
   20530:	ldr	x8, [x20, #8]
   20534:	add	x26, x8, #0x2
   20538:	str	x26, [x20, #8]
   2053c:	ldr	x8, [x19]
   20540:	mov	x1, x20
   20544:	ldr	x21, [x8, x22, lsl #3]
   20548:	ldr	x8, [x21]
   2054c:	mov	x0, x21
   20550:	ldr	x8, [x8, #32]
   20554:	blr	x8
   20558:	ldrb	w8, [x21, #9]
   2055c:	cmp	w8, #0x1
   20560:	b.eq	20578 <__cxa_demangle@@Base+0xdd80>  // b.none
   20564:	ldr	x8, [x21]
   20568:	mov	x0, x21
   2056c:	mov	x1, x20
   20570:	ldr	x8, [x8, #40]
   20574:	blr	x8
   20578:	ldr	x8, [x20, #8]
   2057c:	cmp	x26, x8
   20580:	b.eq	204d0 <__cxa_demangle@@Base+0xdcd8>  // b.none
   20584:	mov	w23, wzr
   20588:	mov	x24, x8
   2058c:	b	204d4 <__cxa_demangle@@Base+0xdcdc>
   20590:	ldp	x20, x19, [sp, #64]
   20594:	ldp	x22, x21, [sp, #48]
   20598:	ldp	x24, x23, [sp, #32]
   2059c:	ldp	x26, x25, [sp, #16]
   205a0:	ldp	x29, x30, [sp], #80
   205a4:	ret
   205a8:	bl	eeb0 <_ZSt9terminatev@plt>
   205ac:	stp	x29, x30, [sp, #-32]!
   205b0:	str	x19, [sp, #16]
   205b4:	mov	x29, sp
   205b8:	ldr	x0, [x0, #16]
   205bc:	mov	x19, x1
   205c0:	ldr	x8, [x0]
   205c4:	ldr	x8, [x8, #32]
   205c8:	blr	x8
   205cc:	ldp	x8, x10, [x19, #8]
   205d0:	add	x9, x8, #0x3
   205d4:	cmp	x9, x10
   205d8:	b.cs	205e4 <__cxa_demangle@@Base+0xddec>  // b.hs, b.nlast
   205dc:	ldr	x0, [x19]
   205e0:	b	20608 <__cxa_demangle@@Base+0xde10>
   205e4:	ldr	x0, [x19]
   205e8:	lsl	x8, x10, #1
   205ec:	cmp	x8, x9
   205f0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   205f4:	str	x1, [x19, #16]
   205f8:	bl	ecc0 <realloc@plt>
   205fc:	str	x0, [x19]
   20600:	cbz	x0, 20634 <__cxa_demangle@@Base+0xde3c>
   20604:	ldr	x8, [x19, #8]
   20608:	add	x8, x0, x8
   2060c:	mov	w9, #0x2e                  	// #46
   20610:	mov	w10, #0x2e2e                	// #11822
   20614:	strb	w9, [x8, #2]
   20618:	strh	w10, [x8]
   2061c:	ldr	x8, [x19, #8]
   20620:	add	x8, x8, #0x3
   20624:	str	x8, [x19, #8]
   20628:	ldr	x19, [sp, #16]
   2062c:	ldp	x29, x30, [sp], #32
   20630:	ret
   20634:	bl	eeb0 <_ZSt9terminatev@plt>
   20638:	ldr	x0, [x0, #16]
   2063c:	ldr	x8, [x0]
   20640:	ldr	x2, [x8, #40]
   20644:	br	x2
   20648:	b	eb20 <_ZdlPv@plt>
   2064c:	stp	x29, x30, [sp, #-48]!
   20650:	stp	x22, x21, [sp, #16]
   20654:	stp	x20, x19, [sp, #32]
   20658:	mov	x29, sp
   2065c:	ldp	x8, x10, [x1, #8]
   20660:	mov	x19, x1
   20664:	mov	x20, x0
   20668:	add	x9, x8, #0x7
   2066c:	cmp	x9, x10
   20670:	b.cs	2067c <__cxa_demangle@@Base+0xde84>  // b.hs, b.nlast
   20674:	ldr	x0, [x19]
   20678:	b	206a0 <__cxa_demangle@@Base+0xdea8>
   2067c:	ldr	x0, [x19]
   20680:	lsl	x8, x10, #1
   20684:	cmp	x8, x9
   20688:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2068c:	str	x1, [x19, #16]
   20690:	bl	ecc0 <realloc@plt>
   20694:	str	x0, [x19]
   20698:	cbz	x0, 20794 <__cxa_demangle@@Base+0xdf9c>
   2069c:	ldr	x8, [x19, #8]
   206a0:	mov	w9, #0x626d                	// #25197
   206a4:	mov	w10, #0x6c27                	// #27687
   206a8:	add	x8, x0, x8
   206ac:	movk	w9, #0x6164, lsl #16
   206b0:	movk	w10, #0x6d61, lsl #16
   206b4:	stur	w9, [x8, #3]
   206b8:	str	w10, [x8]
   206bc:	ldr	x8, [x19, #8]
   206c0:	add	x8, x8, #0x7
   206c4:	str	x8, [x19, #8]
   206c8:	ldp	x22, x9, [x20, #48]
   206cc:	subs	x21, x9, x22
   206d0:	b.eq	2072c <__cxa_demangle@@Base+0xdf34>  // b.none
   206d4:	ldr	x10, [x19, #16]
   206d8:	add	x9, x8, x21
   206dc:	cmp	x9, x10
   206e0:	b.cs	206ec <__cxa_demangle@@Base+0xdef4>  // b.hs, b.nlast
   206e4:	ldr	x0, [x19]
   206e8:	b	20710 <__cxa_demangle@@Base+0xdf18>
   206ec:	ldr	x0, [x19]
   206f0:	lsl	x8, x10, #1
   206f4:	cmp	x8, x9
   206f8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   206fc:	str	x1, [x19, #16]
   20700:	bl	ecc0 <realloc@plt>
   20704:	str	x0, [x19]
   20708:	cbz	x0, 20794 <__cxa_demangle@@Base+0xdf9c>
   2070c:	ldr	x8, [x19, #8]
   20710:	add	x0, x0, x8
   20714:	mov	x1, x22
   20718:	mov	x2, x21
   2071c:	bl	eae0 <memmove@plt>
   20720:	ldr	x8, [x19, #8]
   20724:	add	x8, x8, x21
   20728:	str	x8, [x19, #8]
   2072c:	ldr	x10, [x19, #16]
   20730:	add	x9, x8, #0x1
   20734:	cmp	x9, x10
   20738:	b.cs	20744 <__cxa_demangle@@Base+0xdf4c>  // b.hs, b.nlast
   2073c:	ldr	x0, [x19]
   20740:	b	20768 <__cxa_demangle@@Base+0xdf70>
   20744:	ldr	x0, [x19]
   20748:	lsl	x8, x10, #1
   2074c:	cmp	x8, x9
   20750:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20754:	str	x1, [x19, #16]
   20758:	bl	ecc0 <realloc@plt>
   2075c:	str	x0, [x19]
   20760:	cbz	x0, 20794 <__cxa_demangle@@Base+0xdf9c>
   20764:	ldr	x8, [x19, #8]
   20768:	mov	w9, #0x27                  	// #39
   2076c:	strb	w9, [x0, x8]
   20770:	ldr	x8, [x19, #8]
   20774:	mov	x0, x20
   20778:	mov	x1, x19
   2077c:	add	x8, x8, #0x1
   20780:	str	x8, [x19, #8]
   20784:	ldp	x20, x19, [sp, #32]
   20788:	ldp	x22, x21, [sp, #16]
   2078c:	ldp	x29, x30, [sp], #48
   20790:	b	2079c <__cxa_demangle@@Base+0xdfa4>
   20794:	bl	eeb0 <_ZSt9terminatev@plt>
   20798:	b	eb20 <_ZdlPv@plt>
   2079c:	stp	x29, x30, [sp, #-32]!
   207a0:	stp	x20, x19, [sp, #16]
   207a4:	mov	x29, sp
   207a8:	ldr	x9, [x0, #24]
   207ac:	ldr	x8, [x1, #8]
   207b0:	mov	x19, x1
   207b4:	mov	x20, x0
   207b8:	cbz	x9, 20868 <__cxa_demangle@@Base+0xe070>
   207bc:	ldr	x10, [x19, #16]
   207c0:	add	x9, x8, #0x1
   207c4:	cmp	x9, x10
   207c8:	b.cs	207d4 <__cxa_demangle@@Base+0xdfdc>  // b.hs, b.nlast
   207cc:	ldr	x0, [x19]
   207d0:	b	207f8 <__cxa_demangle@@Base+0xe000>
   207d4:	ldr	x0, [x19]
   207d8:	lsl	x8, x10, #1
   207dc:	cmp	x8, x9
   207e0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   207e4:	str	x1, [x19, #16]
   207e8:	bl	ecc0 <realloc@plt>
   207ec:	str	x0, [x19]
   207f0:	cbz	x0, 20920 <__cxa_demangle@@Base+0xe128>
   207f4:	ldr	x8, [x19, #8]
   207f8:	mov	w9, #0x3c                  	// #60
   207fc:	strb	w9, [x0, x8]
   20800:	ldr	x8, [x19, #8]
   20804:	add	x0, x20, #0x10
   20808:	mov	x1, x19
   2080c:	add	x8, x8, #0x1
   20810:	str	x8, [x19, #8]
   20814:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   20818:	ldp	x8, x10, [x19, #8]
   2081c:	add	x9, x8, #0x1
   20820:	cmp	x9, x10
   20824:	b.cs	20830 <__cxa_demangle@@Base+0xe038>  // b.hs, b.nlast
   20828:	ldr	x0, [x19]
   2082c:	b	20854 <__cxa_demangle@@Base+0xe05c>
   20830:	ldr	x0, [x19]
   20834:	lsl	x8, x10, #1
   20838:	cmp	x8, x9
   2083c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20840:	str	x1, [x19, #16]
   20844:	bl	ecc0 <realloc@plt>
   20848:	str	x0, [x19]
   2084c:	cbz	x0, 20920 <__cxa_demangle@@Base+0xe128>
   20850:	ldr	x8, [x19, #8]
   20854:	mov	w9, #0x3e                  	// #62
   20858:	strb	w9, [x0, x8]
   2085c:	ldr	x8, [x19, #8]
   20860:	add	x8, x8, #0x1
   20864:	str	x8, [x19, #8]
   20868:	ldr	x10, [x19, #16]
   2086c:	add	x9, x8, #0x1
   20870:	cmp	x9, x10
   20874:	b.cs	20880 <__cxa_demangle@@Base+0xe088>  // b.hs, b.nlast
   20878:	ldr	x0, [x19]
   2087c:	b	208a4 <__cxa_demangle@@Base+0xe0ac>
   20880:	ldr	x0, [x19]
   20884:	lsl	x8, x10, #1
   20888:	cmp	x8, x9
   2088c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20890:	str	x1, [x19, #16]
   20894:	bl	ecc0 <realloc@plt>
   20898:	str	x0, [x19]
   2089c:	cbz	x0, 20920 <__cxa_demangle@@Base+0xe128>
   208a0:	ldr	x8, [x19, #8]
   208a4:	mov	w9, #0x28                  	// #40
   208a8:	strb	w9, [x0, x8]
   208ac:	ldr	x8, [x19, #8]
   208b0:	add	x0, x20, #0x20
   208b4:	mov	x1, x19
   208b8:	add	x8, x8, #0x1
   208bc:	str	x8, [x19, #8]
   208c0:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   208c4:	ldp	x8, x10, [x19, #8]
   208c8:	add	x9, x8, #0x1
   208cc:	cmp	x9, x10
   208d0:	b.cs	208dc <__cxa_demangle@@Base+0xe0e4>  // b.hs, b.nlast
   208d4:	ldr	x0, [x19]
   208d8:	b	20900 <__cxa_demangle@@Base+0xe108>
   208dc:	ldr	x0, [x19]
   208e0:	lsl	x8, x10, #1
   208e4:	cmp	x8, x9
   208e8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   208ec:	str	x1, [x19, #16]
   208f0:	bl	ecc0 <realloc@plt>
   208f4:	str	x0, [x19]
   208f8:	cbz	x0, 20920 <__cxa_demangle@@Base+0xe128>
   208fc:	ldr	x8, [x19, #8]
   20900:	mov	w9, #0x29                  	// #41
   20904:	strb	w9, [x0, x8]
   20908:	ldr	x8, [x19, #8]
   2090c:	add	x8, x8, #0x1
   20910:	str	x8, [x19, #8]
   20914:	ldp	x20, x19, [sp, #16]
   20918:	ldp	x29, x30, [sp], #32
   2091c:	ret
   20920:	bl	eeb0 <_ZSt9terminatev@plt>
   20924:	stp	x29, x30, [sp, #-32]!
   20928:	stp	x20, x19, [sp, #16]
   2092c:	mov	x29, sp
   20930:	ldp	x8, x10, [x1, #8]
   20934:	mov	x19, x1
   20938:	mov	x20, x0
   2093c:	add	x9, x8, #0x2
   20940:	cmp	x9, x10
   20944:	b.cs	20950 <__cxa_demangle@@Base+0xe158>  // b.hs, b.nlast
   20948:	ldr	x0, [x19]
   2094c:	b	20974 <__cxa_demangle@@Base+0xe17c>
   20950:	ldr	x0, [x19]
   20954:	lsl	x8, x10, #1
   20958:	cmp	x8, x9
   2095c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20960:	str	x1, [x19, #16]
   20964:	bl	ecc0 <realloc@plt>
   20968:	str	x0, [x19]
   2096c:	cbz	x0, 20a10 <__cxa_demangle@@Base+0xe218>
   20970:	ldr	x8, [x19, #8]
   20974:	mov	w9, #0x5d5b                	// #23899
   20978:	strh	w9, [x0, x8]
   2097c:	ldr	x8, [x19, #8]
   20980:	add	x8, x8, #0x2
   20984:	str	x8, [x19, #8]
   20988:	ldr	x0, [x20, #16]
   2098c:	ldrb	w9, [x0, #8]
   20990:	cmp	w9, #0x2d
   20994:	b.ne	209a4 <__cxa_demangle@@Base+0xe1ac>  // b.any
   20998:	mov	x1, x19
   2099c:	bl	2079c <__cxa_demangle@@Base+0xdfa4>
   209a0:	ldr	x8, [x19, #8]
   209a4:	ldr	x10, [x19, #16]
   209a8:	add	x9, x8, #0x5
   209ac:	cmp	x9, x10
   209b0:	b.cs	209bc <__cxa_demangle@@Base+0xe1c4>  // b.hs, b.nlast
   209b4:	ldr	x0, [x19]
   209b8:	b	209e0 <__cxa_demangle@@Base+0xe1e8>
   209bc:	ldr	x0, [x19]
   209c0:	lsl	x8, x10, #1
   209c4:	cmp	x8, x9
   209c8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   209cc:	str	x1, [x19, #16]
   209d0:	bl	ecc0 <realloc@plt>
   209d4:	str	x0, [x19]
   209d8:	cbz	x0, 20a10 <__cxa_demangle@@Base+0xe218>
   209dc:	ldr	x8, [x19, #8]
   209e0:	mov	w10, #0x2e7b                	// #11899
   209e4:	add	x8, x0, x8
   209e8:	mov	w9, #0x7d                  	// #125
   209ec:	movk	w10, #0x2e2e, lsl #16
   209f0:	strb	w9, [x8, #4]
   209f4:	str	w10, [x8]
   209f8:	ldr	x8, [x19, #8]
   209fc:	add	x8, x8, #0x5
   20a00:	str	x8, [x19, #8]
   20a04:	ldp	x20, x19, [sp, #16]
   20a08:	ldp	x29, x30, [sp], #32
   20a0c:	ret
   20a10:	bl	eeb0 <_ZSt9terminatev@plt>
   20a14:	b	eb20 <_ZdlPv@plt>
   20a18:	stp	x29, x30, [sp, #-48]!
   20a1c:	str	x21, [sp, #16]
   20a20:	stp	x20, x19, [sp, #32]
   20a24:	mov	x29, sp
   20a28:	ldp	x8, x10, [x1, #8]
   20a2c:	mov	x19, x1
   20a30:	mov	x20, x0
   20a34:	add	x9, x8, #0x1
   20a38:	cmp	x9, x10
   20a3c:	b.cs	20a48 <__cxa_demangle@@Base+0xe250>  // b.hs, b.nlast
   20a40:	ldr	x0, [x19]
   20a44:	b	20a6c <__cxa_demangle@@Base+0xe274>
   20a48:	ldr	x0, [x19]
   20a4c:	lsl	x8, x10, #1
   20a50:	cmp	x8, x9
   20a54:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20a58:	str	x1, [x19, #16]
   20a5c:	bl	ecc0 <realloc@plt>
   20a60:	str	x0, [x19]
   20a64:	cbz	x0, 20b7c <__cxa_demangle@@Base+0xe384>
   20a68:	ldr	x8, [x19, #8]
   20a6c:	mov	w9, #0x28                  	// #40
   20a70:	strb	w9, [x0, x8]
   20a74:	ldr	x8, [x19, #8]
   20a78:	mov	x1, x19
   20a7c:	add	x8, x8, #0x1
   20a80:	str	x8, [x19, #8]
   20a84:	ldr	x21, [x20, #16]
   20a88:	ldr	x8, [x21]
   20a8c:	mov	x0, x21
   20a90:	ldr	x8, [x8, #32]
   20a94:	blr	x8
   20a98:	ldrb	w8, [x21, #9]
   20a9c:	cmp	w8, #0x1
   20aa0:	b.eq	20ab8 <__cxa_demangle@@Base+0xe2c0>  // b.none
   20aa4:	ldr	x8, [x21]
   20aa8:	mov	x0, x21
   20aac:	mov	x1, x19
   20ab0:	ldr	x8, [x8, #40]
   20ab4:	blr	x8
   20ab8:	ldp	x8, x10, [x19, #8]
   20abc:	add	x9, x8, #0x1
   20ac0:	cmp	x9, x10
   20ac4:	b.cs	20ad0 <__cxa_demangle@@Base+0xe2d8>  // b.hs, b.nlast
   20ac8:	ldr	x0, [x19]
   20acc:	b	20af4 <__cxa_demangle@@Base+0xe2fc>
   20ad0:	ldr	x0, [x19]
   20ad4:	lsl	x8, x10, #1
   20ad8:	cmp	x8, x9
   20adc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20ae0:	str	x1, [x19, #16]
   20ae4:	bl	ecc0 <realloc@plt>
   20ae8:	str	x0, [x19]
   20aec:	cbz	x0, 20b7c <__cxa_demangle@@Base+0xe384>
   20af0:	ldr	x8, [x19, #8]
   20af4:	mov	w9, #0x29                  	// #41
   20af8:	strb	w9, [x0, x8]
   20afc:	ldr	x8, [x19, #8]
   20b00:	add	x8, x8, #0x1
   20b04:	str	x8, [x19, #8]
   20b08:	ldp	x21, x9, [x20, #24]
   20b0c:	subs	x20, x9, x21
   20b10:	b.eq	20b6c <__cxa_demangle@@Base+0xe374>  // b.none
   20b14:	ldr	x10, [x19, #16]
   20b18:	add	x9, x8, x20
   20b1c:	cmp	x9, x10
   20b20:	b.cs	20b2c <__cxa_demangle@@Base+0xe334>  // b.hs, b.nlast
   20b24:	ldr	x0, [x19]
   20b28:	b	20b50 <__cxa_demangle@@Base+0xe358>
   20b2c:	ldr	x0, [x19]
   20b30:	lsl	x8, x10, #1
   20b34:	cmp	x8, x9
   20b38:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20b3c:	str	x1, [x19, #16]
   20b40:	bl	ecc0 <realloc@plt>
   20b44:	str	x0, [x19]
   20b48:	cbz	x0, 20b7c <__cxa_demangle@@Base+0xe384>
   20b4c:	ldr	x8, [x19, #8]
   20b50:	add	x0, x0, x8
   20b54:	mov	x1, x21
   20b58:	mov	x2, x20
   20b5c:	bl	eae0 <memmove@plt>
   20b60:	ldr	x8, [x19, #8]
   20b64:	add	x8, x8, x20
   20b68:	str	x8, [x19, #8]
   20b6c:	ldp	x20, x19, [sp, #32]
   20b70:	ldr	x21, [sp, #16]
   20b74:	ldp	x29, x30, [sp], #48
   20b78:	ret
   20b7c:	bl	eeb0 <_ZSt9terminatev@plt>
   20b80:	b	eb20 <_ZdlPv@plt>
   20b84:	stp	x29, x30, [sp, #-48]!
   20b88:	str	x21, [sp, #16]
   20b8c:	stp	x20, x19, [sp, #32]
   20b90:	mov	x29, sp
   20b94:	ldp	x8, x10, [x1, #8]
   20b98:	mov	x19, x1
   20b9c:	mov	x20, x0
   20ba0:	add	x9, x8, #0x2
   20ba4:	cmp	x9, x10
   20ba8:	b.cs	20bb4 <__cxa_demangle@@Base+0xe3bc>  // b.hs, b.nlast
   20bac:	ldr	x0, [x19]
   20bb0:	b	20bd8 <__cxa_demangle@@Base+0xe3e0>
   20bb4:	ldr	x0, [x19]
   20bb8:	lsl	x8, x10, #1
   20bbc:	cmp	x8, x9
   20bc0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20bc4:	str	x1, [x19, #16]
   20bc8:	bl	ecc0 <realloc@plt>
   20bcc:	str	x0, [x19]
   20bd0:	cbz	x0, 20c60 <__cxa_demangle@@Base+0xe468>
   20bd4:	ldr	x8, [x19, #8]
   20bd8:	mov	w9, #0x7066                	// #28774
   20bdc:	strh	w9, [x0, x8]
   20be0:	ldr	x8, [x19, #8]
   20be4:	add	x8, x8, #0x2
   20be8:	str	x8, [x19, #8]
   20bec:	ldp	x21, x9, [x20, #16]
   20bf0:	subs	x20, x9, x21
   20bf4:	b.eq	20c50 <__cxa_demangle@@Base+0xe458>  // b.none
   20bf8:	ldr	x10, [x19, #16]
   20bfc:	add	x9, x8, x20
   20c00:	cmp	x9, x10
   20c04:	b.cs	20c10 <__cxa_demangle@@Base+0xe418>  // b.hs, b.nlast
   20c08:	ldr	x0, [x19]
   20c0c:	b	20c34 <__cxa_demangle@@Base+0xe43c>
   20c10:	ldr	x0, [x19]
   20c14:	lsl	x8, x10, #1
   20c18:	cmp	x8, x9
   20c1c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20c20:	str	x1, [x19, #16]
   20c24:	bl	ecc0 <realloc@plt>
   20c28:	str	x0, [x19]
   20c2c:	cbz	x0, 20c60 <__cxa_demangle@@Base+0xe468>
   20c30:	ldr	x8, [x19, #8]
   20c34:	add	x0, x0, x8
   20c38:	mov	x1, x21
   20c3c:	mov	x2, x20
   20c40:	bl	eae0 <memmove@plt>
   20c44:	ldr	x8, [x19, #8]
   20c48:	add	x8, x8, x20
   20c4c:	str	x8, [x19, #8]
   20c50:	ldp	x20, x19, [sp, #32]
   20c54:	ldr	x21, [sp, #16]
   20c58:	ldp	x29, x30, [sp], #48
   20c5c:	ret
   20c60:	bl	eeb0 <_ZSt9terminatev@plt>
   20c64:	ret
   20c68:	b	eb20 <_ZdlPv@plt>
   20c6c:	sub	sp, sp, #0x60
   20c70:	stp	x29, x30, [sp, #32]
   20c74:	str	x23, [sp, #48]
   20c78:	stp	x22, x21, [sp, #64]
   20c7c:	stp	x20, x19, [sp, #80]
   20c80:	add	x29, sp, #0x20
   20c84:	mov	x23, x1
   20c88:	ldr	x8, [x23, #8]!
   20c8c:	mov	x19, x1
   20c90:	mov	x20, x0
   20c94:	ldr	x10, [x23, #8]
   20c98:	add	x9, x8, #0x1
   20c9c:	cmp	x9, x10
   20ca0:	b.cs	20cac <__cxa_demangle@@Base+0xe4b4>  // b.hs, b.nlast
   20ca4:	ldr	x0, [x19]
   20ca8:	b	20cd4 <__cxa_demangle@@Base+0xe4dc>
   20cac:	ldr	x0, [x19]
   20cb0:	lsl	x8, x10, #1
   20cb4:	cmp	x8, x9
   20cb8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20cbc:	str	x1, [x19, #16]
   20cc0:	bl	ecc0 <realloc@plt>
   20cc4:	str	x0, [x19]
   20cc8:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   20ccc:	ldr	x8, [x23]
   20cd0:	add	x9, x8, #0x1
   20cd4:	str	x9, [x23]
   20cd8:	mov	w9, #0x28                  	// #40
   20cdc:	strb	w9, [x0, x8]
   20ce0:	ldrb	w8, [x20, #48]
   20ce4:	cbz	w8, 20d3c <__cxa_demangle@@Base+0xe544>
   20ce8:	ldr	x21, [x20, #24]
   20cec:	cbz	x21, 20f7c <__cxa_demangle@@Base+0xe784>
   20cf0:	ldr	x8, [x21]
   20cf4:	mov	x0, x21
   20cf8:	mov	x1, x19
   20cfc:	ldr	x8, [x8, #32]
   20d00:	blr	x8
   20d04:	ldrb	w8, [x21, #9]
   20d08:	cmp	w8, #0x1
   20d0c:	b.eq	20d24 <__cxa_demangle@@Base+0xe52c>  // b.none
   20d10:	ldr	x8, [x21]
   20d14:	mov	x0, x21
   20d18:	mov	x1, x19
   20d1c:	ldr	x8, [x8, #40]
   20d20:	blr	x8
   20d24:	ldp	x8, x10, [x19, #8]
   20d28:	add	x9, x8, #0x1
   20d2c:	cmp	x9, x10
   20d30:	b.cs	20d54 <__cxa_demangle@@Base+0xe55c>  // b.hs, b.nlast
   20d34:	ldr	x0, [x19]
   20d38:	b	20d7c <__cxa_demangle@@Base+0xe584>
   20d3c:	ldp	x8, x10, [x19, #8]
   20d40:	add	x9, x8, #0x1
   20d44:	cmp	x9, x10
   20d48:	b.cs	20db0 <__cxa_demangle@@Base+0xe5b8>  // b.hs, b.nlast
   20d4c:	ldr	x0, [x19]
   20d50:	b	20dd8 <__cxa_demangle@@Base+0xe5e0>
   20d54:	ldr	x0, [x19]
   20d58:	lsl	x8, x10, #1
   20d5c:	cmp	x8, x9
   20d60:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20d64:	str	x1, [x19, #16]
   20d68:	bl	ecc0 <realloc@plt>
   20d6c:	str	x0, [x19]
   20d70:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   20d74:	ldr	x8, [x23]
   20d78:	add	x9, x8, #0x1
   20d7c:	str	x9, [x23]
   20d80:	mov	w9, #0x20                  	// #32
   20d84:	strb	w9, [x0, x8]
   20d88:	ldp	x22, x9, [x20, #32]
   20d8c:	ldr	x8, [x23]
   20d90:	subs	x21, x9, x22
   20d94:	b.eq	20f30 <__cxa_demangle@@Base+0xe738>  // b.none
   20d98:	ldr	x10, [x19, #16]
   20d9c:	add	x9, x8, x21
   20da0:	cmp	x9, x10
   20da4:	b.cs	20ef0 <__cxa_demangle@@Base+0xe6f8>  // b.hs, b.nlast
   20da8:	ldr	x0, [x19]
   20dac:	b	20f14 <__cxa_demangle@@Base+0xe71c>
   20db0:	ldr	x0, [x19]
   20db4:	lsl	x8, x10, #1
   20db8:	cmp	x8, x9
   20dbc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20dc0:	str	x1, [x19, #16]
   20dc4:	bl	ecc0 <realloc@plt>
   20dc8:	str	x0, [x19]
   20dcc:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   20dd0:	ldr	x8, [x23]
   20dd4:	add	x9, x8, #0x1
   20dd8:	str	x9, [x19, #8]
   20ddc:	mov	w9, #0x28                  	// #40
   20de0:	strb	w9, [x0, x8]
   20de4:	ldr	x8, [x20, #16]
   20de8:	mov	w9, #0x122                 	// #290
   20dec:	movk	w9, #0x101, lsl #16
   20df0:	str	w9, [sp, #16]
   20df4:	adrp	x9, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   20df8:	add	x9, x9, #0x620
   20dfc:	str	x9, [sp, #8]
   20e00:	str	x8, [sp, #24]
   20e04:	add	x0, sp, #0x8
   20e08:	mov	x1, x19
   20e0c:	bl	213b0 <__cxa_demangle@@Base+0xebb8>
   20e10:	ldrb	w8, [sp, #17]
   20e14:	cmp	w8, #0x1
   20e18:	b.eq	20e30 <__cxa_demangle@@Base+0xe638>  // b.none
   20e1c:	ldr	x8, [sp, #8]
   20e20:	ldr	x8, [x8, #40]
   20e24:	add	x0, sp, #0x8
   20e28:	mov	x1, x19
   20e2c:	blr	x8
   20e30:	ldp	x8, x10, [x19, #8]
   20e34:	add	x9, x8, #0x1
   20e38:	cmp	x9, x10
   20e3c:	b.cs	20e48 <__cxa_demangle@@Base+0xe650>  // b.hs, b.nlast
   20e40:	ldr	x0, [x19]
   20e44:	b	20e70 <__cxa_demangle@@Base+0xe678>
   20e48:	ldr	x0, [x19]
   20e4c:	lsl	x8, x10, #1
   20e50:	cmp	x8, x9
   20e54:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20e58:	str	x1, [x19, #16]
   20e5c:	bl	ecc0 <realloc@plt>
   20e60:	str	x0, [x19]
   20e64:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   20e68:	ldr	x8, [x23]
   20e6c:	add	x9, x8, #0x1
   20e70:	str	x9, [x19, #8]
   20e74:	mov	w9, #0x29                  	// #41
   20e78:	strb	w9, [x0, x8]
   20e7c:	ldp	x8, x10, [x19, #8]
   20e80:	add	x9, x8, #0x1
   20e84:	cmp	x9, x10
   20e88:	b.cs	20e94 <__cxa_demangle@@Base+0xe69c>  // b.hs, b.nlast
   20e8c:	ldr	x0, [x19]
   20e90:	b	20ebc <__cxa_demangle@@Base+0xe6c4>
   20e94:	ldr	x0, [x19]
   20e98:	lsl	x8, x10, #1
   20e9c:	cmp	x8, x9
   20ea0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20ea4:	str	x1, [x19, #16]
   20ea8:	bl	ecc0 <realloc@plt>
   20eac:	str	x0, [x19]
   20eb0:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   20eb4:	ldr	x8, [x23]
   20eb8:	add	x9, x8, #0x1
   20ebc:	str	x9, [x23]
   20ec0:	mov	w9, #0x20                  	// #32
   20ec4:	strb	w9, [x0, x8]
   20ec8:	ldp	x22, x9, [x20, #32]
   20ecc:	ldr	x8, [x23]
   20ed0:	subs	x21, x9, x22
   20ed4:	b.eq	21208 <__cxa_demangle@@Base+0xea10>  // b.none
   20ed8:	ldr	x10, [x19, #16]
   20edc:	add	x9, x8, x21
   20ee0:	cmp	x9, x10
   20ee4:	b.cs	211c8 <__cxa_demangle@@Base+0xe9d0>  // b.hs, b.nlast
   20ee8:	ldr	x0, [x19]
   20eec:	b	211ec <__cxa_demangle@@Base+0xe9f4>
   20ef0:	ldr	x0, [x19]
   20ef4:	lsl	x8, x10, #1
   20ef8:	cmp	x8, x9
   20efc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20f00:	str	x1, [x19, #16]
   20f04:	bl	ecc0 <realloc@plt>
   20f08:	str	x0, [x19]
   20f0c:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   20f10:	ldr	x8, [x23]
   20f14:	add	x0, x0, x8
   20f18:	mov	x1, x22
   20f1c:	mov	x2, x21
   20f20:	bl	eae0 <memmove@plt>
   20f24:	ldr	x8, [x23]
   20f28:	add	x8, x8, x21
   20f2c:	str	x8, [x23]
   20f30:	ldr	x10, [x19, #16]
   20f34:	add	x9, x8, #0x1
   20f38:	cmp	x9, x10
   20f3c:	b.cs	20f48 <__cxa_demangle@@Base+0xe750>  // b.hs, b.nlast
   20f40:	ldr	x0, [x19]
   20f44:	b	20f70 <__cxa_demangle@@Base+0xe778>
   20f48:	ldr	x0, [x19]
   20f4c:	lsl	x8, x10, #1
   20f50:	cmp	x8, x9
   20f54:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20f58:	str	x1, [x19, #16]
   20f5c:	bl	ecc0 <realloc@plt>
   20f60:	str	x0, [x19]
   20f64:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   20f68:	ldr	x8, [x23]
   20f6c:	add	x9, x8, #0x1
   20f70:	str	x9, [x23]
   20f74:	mov	w9, #0x20                  	// #32
   20f78:	strb	w9, [x0, x8]
   20f7c:	ldp	x8, x10, [x19, #8]
   20f80:	add	x9, x8, #0x4
   20f84:	cmp	x9, x10
   20f88:	b.cs	20f94 <__cxa_demangle@@Base+0xe79c>  // b.hs, b.nlast
   20f8c:	ldr	x0, [x19]
   20f90:	b	20fb8 <__cxa_demangle@@Base+0xe7c0>
   20f94:	ldr	x0, [x19]
   20f98:	lsl	x8, x10, #1
   20f9c:	cmp	x8, x9
   20fa0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   20fa4:	str	x1, [x19, #16]
   20fa8:	bl	ecc0 <realloc@plt>
   20fac:	str	x0, [x19]
   20fb0:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   20fb4:	ldr	x8, [x23]
   20fb8:	mov	w9, #0x2e2e                	// #11822
   20fbc:	movk	w9, #0x202e, lsl #16
   20fc0:	str	w9, [x0, x8]
   20fc4:	ldr	x8, [x23]
   20fc8:	add	x8, x8, #0x4
   20fcc:	str	x8, [x23]
   20fd0:	ldp	x22, x9, [x20, #32]
   20fd4:	subs	x21, x9, x22
   20fd8:	b.eq	21034 <__cxa_demangle@@Base+0xe83c>  // b.none
   20fdc:	ldr	x10, [x19, #16]
   20fe0:	add	x9, x8, x21
   20fe4:	cmp	x9, x10
   20fe8:	b.cs	20ff4 <__cxa_demangle@@Base+0xe7fc>  // b.hs, b.nlast
   20fec:	ldr	x0, [x19]
   20ff0:	b	21018 <__cxa_demangle@@Base+0xe820>
   20ff4:	ldr	x0, [x19]
   20ff8:	lsl	x8, x10, #1
   20ffc:	cmp	x8, x9
   21000:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21004:	str	x1, [x19, #16]
   21008:	bl	ecc0 <realloc@plt>
   2100c:	str	x0, [x19]
   21010:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   21014:	ldr	x8, [x23]
   21018:	add	x0, x0, x8
   2101c:	mov	x1, x22
   21020:	mov	x2, x21
   21024:	bl	eae0 <memmove@plt>
   21028:	ldr	x8, [x23]
   2102c:	add	x8, x8, x21
   21030:	str	x8, [x23]
   21034:	ldr	x10, [x19, #16]
   21038:	add	x9, x8, #0x1
   2103c:	cmp	x9, x10
   21040:	b.cs	2104c <__cxa_demangle@@Base+0xe854>  // b.hs, b.nlast
   21044:	ldr	x0, [x19]
   21048:	b	21074 <__cxa_demangle@@Base+0xe87c>
   2104c:	ldr	x0, [x19]
   21050:	lsl	x8, x10, #1
   21054:	cmp	x8, x9
   21058:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2105c:	str	x1, [x19, #16]
   21060:	bl	ecc0 <realloc@plt>
   21064:	str	x0, [x19]
   21068:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   2106c:	ldr	x8, [x23]
   21070:	add	x9, x8, #0x1
   21074:	str	x9, [x19, #8]
   21078:	mov	w9, #0x20                  	// #32
   2107c:	strb	w9, [x0, x8]
   21080:	ldp	x8, x10, [x19, #8]
   21084:	add	x9, x8, #0x1
   21088:	cmp	x9, x10
   2108c:	b.cs	21098 <__cxa_demangle@@Base+0xe8a0>  // b.hs, b.nlast
   21090:	ldr	x0, [x19]
   21094:	b	210c0 <__cxa_demangle@@Base+0xe8c8>
   21098:	ldr	x0, [x19]
   2109c:	lsl	x8, x10, #1
   210a0:	cmp	x8, x9
   210a4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   210a8:	str	x1, [x19, #16]
   210ac:	bl	ecc0 <realloc@plt>
   210b0:	str	x0, [x19]
   210b4:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   210b8:	ldr	x8, [x23]
   210bc:	add	x9, x8, #0x1
   210c0:	str	x9, [x19, #8]
   210c4:	mov	w9, #0x28                  	// #40
   210c8:	strb	w9, [x0, x8]
   210cc:	ldr	x8, [x20, #16]
   210d0:	mov	w9, #0x122                 	// #290
   210d4:	movk	w9, #0x101, lsl #16
   210d8:	str	w9, [sp, #16]
   210dc:	adrp	x9, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   210e0:	add	x9, x9, #0x620
   210e4:	str	x9, [sp, #8]
   210e8:	str	x8, [sp, #24]
   210ec:	add	x0, sp, #0x8
   210f0:	mov	x1, x19
   210f4:	bl	213b0 <__cxa_demangle@@Base+0xebb8>
   210f8:	ldrb	w8, [sp, #17]
   210fc:	cmp	w8, #0x1
   21100:	b.eq	21118 <__cxa_demangle@@Base+0xe920>  // b.none
   21104:	ldr	x8, [sp, #8]
   21108:	ldr	x8, [x8, #40]
   2110c:	add	x0, sp, #0x8
   21110:	mov	x1, x19
   21114:	blr	x8
   21118:	ldp	x8, x10, [x19, #8]
   2111c:	add	x9, x8, #0x1
   21120:	cmp	x9, x10
   21124:	b.cs	21130 <__cxa_demangle@@Base+0xe938>  // b.hs, b.nlast
   21128:	ldr	x0, [x19]
   2112c:	b	21158 <__cxa_demangle@@Base+0xe960>
   21130:	ldr	x0, [x19]
   21134:	lsl	x8, x10, #1
   21138:	cmp	x8, x9
   2113c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21140:	str	x1, [x19, #16]
   21144:	bl	ecc0 <realloc@plt>
   21148:	str	x0, [x19]
   2114c:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   21150:	ldr	x8, [x23]
   21154:	add	x9, x8, #0x1
   21158:	str	x9, [x23]
   2115c:	mov	w9, #0x29                  	// #41
   21160:	strb	w9, [x0, x8]
   21164:	ldp	x8, x10, [x19, #8]
   21168:	add	x9, x8, #0x1
   2116c:	cmp	x9, x10
   21170:	b.cs	2117c <__cxa_demangle@@Base+0xe984>  // b.hs, b.nlast
   21174:	ldr	x0, [x19]
   21178:	b	211a4 <__cxa_demangle@@Base+0xe9ac>
   2117c:	ldr	x0, [x19]
   21180:	lsl	x8, x10, #1
   21184:	cmp	x8, x9
   21188:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2118c:	str	x1, [x19, #16]
   21190:	bl	ecc0 <realloc@plt>
   21194:	str	x0, [x19]
   21198:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   2119c:	ldr	x8, [x23]
   211a0:	add	x9, x8, #0x1
   211a4:	str	x9, [x23]
   211a8:	mov	w9, #0x29                  	// #41
   211ac:	strb	w9, [x0, x8]
   211b0:	ldp	x20, x19, [sp, #80]
   211b4:	ldp	x22, x21, [sp, #64]
   211b8:	ldr	x23, [sp, #48]
   211bc:	ldp	x29, x30, [sp, #32]
   211c0:	add	sp, sp, #0x60
   211c4:	ret
   211c8:	ldr	x0, [x19]
   211cc:	lsl	x8, x10, #1
   211d0:	cmp	x8, x9
   211d4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   211d8:	str	x1, [x19, #16]
   211dc:	bl	ecc0 <realloc@plt>
   211e0:	str	x0, [x19]
   211e4:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   211e8:	ldr	x8, [x23]
   211ec:	add	x0, x0, x8
   211f0:	mov	x1, x22
   211f4:	mov	x2, x21
   211f8:	bl	eae0 <memmove@plt>
   211fc:	ldr	x8, [x23]
   21200:	add	x8, x8, x21
   21204:	str	x8, [x23]
   21208:	ldr	x10, [x19, #16]
   2120c:	add	x9, x8, #0x4
   21210:	cmp	x9, x10
   21214:	b.cs	21220 <__cxa_demangle@@Base+0xea28>  // b.hs, b.nlast
   21218:	ldr	x0, [x19]
   2121c:	b	21244 <__cxa_demangle@@Base+0xea4c>
   21220:	ldr	x0, [x19]
   21224:	lsl	x8, x10, #1
   21228:	cmp	x8, x9
   2122c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21230:	str	x1, [x19, #16]
   21234:	bl	ecc0 <realloc@plt>
   21238:	str	x0, [x19]
   2123c:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   21240:	ldr	x8, [x23]
   21244:	mov	w9, #0x2e20                	// #11808
   21248:	movk	w9, #0x2e2e, lsl #16
   2124c:	str	w9, [x0, x8]
   21250:	ldr	x9, [x23]
   21254:	add	x8, x9, #0x4
   21258:	str	x8, [x23]
   2125c:	ldr	x10, [x20, #24]
   21260:	cbz	x10, 21164 <__cxa_demangle@@Base+0xe96c>
   21264:	ldr	x10, [x19, #16]
   21268:	add	x9, x9, #0x5
   2126c:	cmp	x9, x10
   21270:	b.cs	2127c <__cxa_demangle@@Base+0xea84>  // b.hs, b.nlast
   21274:	ldr	x0, [x19]
   21278:	b	212a4 <__cxa_demangle@@Base+0xeaac>
   2127c:	ldr	x0, [x19]
   21280:	lsl	x8, x10, #1
   21284:	cmp	x8, x9
   21288:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2128c:	str	x1, [x19, #16]
   21290:	bl	ecc0 <realloc@plt>
   21294:	str	x0, [x19]
   21298:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   2129c:	ldr	x8, [x23]
   212a0:	add	x9, x8, #0x1
   212a4:	str	x9, [x23]
   212a8:	mov	w9, #0x20                  	// #32
   212ac:	strb	w9, [x0, x8]
   212b0:	ldp	x22, x9, [x20, #32]
   212b4:	ldr	x8, [x23]
   212b8:	subs	x21, x9, x22
   212bc:	b.eq	21318 <__cxa_demangle@@Base+0xeb20>  // b.none
   212c0:	ldr	x10, [x19, #16]
   212c4:	add	x9, x8, x21
   212c8:	cmp	x9, x10
   212cc:	b.cs	212d8 <__cxa_demangle@@Base+0xeae0>  // b.hs, b.nlast
   212d0:	ldr	x0, [x19]
   212d4:	b	212fc <__cxa_demangle@@Base+0xeb04>
   212d8:	ldr	x0, [x19]
   212dc:	lsl	x8, x10, #1
   212e0:	cmp	x8, x9
   212e4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   212e8:	str	x1, [x19, #16]
   212ec:	bl	ecc0 <realloc@plt>
   212f0:	str	x0, [x19]
   212f4:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   212f8:	ldr	x8, [x23]
   212fc:	add	x0, x0, x8
   21300:	mov	x1, x22
   21304:	mov	x2, x21
   21308:	bl	eae0 <memmove@plt>
   2130c:	ldr	x8, [x23]
   21310:	add	x8, x8, x21
   21314:	str	x8, [x23]
   21318:	ldr	x10, [x19, #16]
   2131c:	add	x9, x8, #0x1
   21320:	cmp	x9, x10
   21324:	b.cs	21330 <__cxa_demangle@@Base+0xeb38>  // b.hs, b.nlast
   21328:	ldr	x0, [x19]
   2132c:	b	21358 <__cxa_demangle@@Base+0xeb60>
   21330:	ldr	x0, [x19]
   21334:	lsl	x8, x10, #1
   21338:	cmp	x8, x9
   2133c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21340:	str	x1, [x19, #16]
   21344:	bl	ecc0 <realloc@plt>
   21348:	str	x0, [x19]
   2134c:	cbz	x0, 213a0 <__cxa_demangle@@Base+0xeba8>
   21350:	ldr	x8, [x23]
   21354:	add	x9, x8, #0x1
   21358:	str	x9, [x19, #8]
   2135c:	mov	w9, #0x20                  	// #32
   21360:	strb	w9, [x0, x8]
   21364:	ldr	x20, [x20, #24]
   21368:	mov	x1, x19
   2136c:	ldr	x8, [x20]
   21370:	mov	x0, x20
   21374:	ldr	x8, [x8, #32]
   21378:	blr	x8
   2137c:	ldrb	w8, [x20, #9]
   21380:	cmp	w8, #0x1
   21384:	b.eq	21164 <__cxa_demangle@@Base+0xe96c>  // b.none
   21388:	ldr	x8, [x20]
   2138c:	mov	x0, x20
   21390:	mov	x1, x19
   21394:	ldr	x8, [x8, #40]
   21398:	blr	x8
   2139c:	b	21164 <__cxa_demangle@@Base+0xe96c>
   213a0:	bl	eeb0 <_ZSt9terminatev@plt>
   213a4:	bl	eea0 <_Unwind_Resume@plt>
   213a8:	bl	eea0 <_Unwind_Resume@plt>
   213ac:	b	eb20 <_ZdlPv@plt>
   213b0:	stp	x29, x30, [sp, #-80]!
   213b4:	stp	x26, x25, [sp, #16]
   213b8:	stp	x24, x23, [sp, #32]
   213bc:	stp	x22, x21, [sp, #48]
   213c0:	stp	x20, x19, [sp, #64]
   213c4:	mov	x29, sp
   213c8:	movi	v0.2d, #0xffffffffffffffff
   213cc:	ldp	w22, w23, [x1, #24]
   213d0:	str	d0, [x1, #24]
   213d4:	ldr	x21, [x0, #16]
   213d8:	ldr	x25, [x1, #8]
   213dc:	mov	x19, x1
   213e0:	mov	x20, x0
   213e4:	ldr	x8, [x21]
   213e8:	ldr	x8, [x8, #32]
   213ec:	mov	x0, x21
   213f0:	blr	x8
   213f4:	ldrb	w8, [x21, #9]
   213f8:	cmp	w8, #0x1
   213fc:	b.eq	21414 <__cxa_demangle@@Base+0xec1c>  // b.none
   21400:	ldr	x8, [x21]
   21404:	ldr	x8, [x8, #40]
   21408:	mov	x0, x21
   2140c:	mov	x1, x19
   21410:	blr	x8
   21414:	ldr	w24, [x19, #28]
   21418:	cmn	w24, #0x1
   2141c:	b.eq	2142c <__cxa_demangle@@Base+0xec34>  // b.none
   21420:	cbnz	w24, 21444 <__cxa_demangle@@Base+0xec4c>
   21424:	str	x25, [x19, #8]
   21428:	b	21534 <__cxa_demangle@@Base+0xed3c>
   2142c:	ldp	x8, x10, [x19, #8]
   21430:	add	x9, x8, #0x3
   21434:	cmp	x9, x10
   21438:	b.cs	214f0 <__cxa_demangle@@Base+0xecf8>  // b.hs, b.nlast
   2143c:	ldr	x0, [x19]
   21440:	b	21514 <__cxa_demangle@@Base+0xed1c>
   21444:	cmp	w24, #0x2
   21448:	b.cc	21534 <__cxa_demangle@@Base+0xed3c>  // b.lo, b.ul, b.last
   2144c:	mov	w25, #0x1                   	// #1
   21450:	mov	w26, #0x202c                	// #8236
   21454:	b	21464 <__cxa_demangle@@Base+0xec6c>
   21458:	add	w25, w25, #0x1
   2145c:	cmp	w24, w25
   21460:	b.eq	21534 <__cxa_demangle@@Base+0xed3c>  // b.none
   21464:	ldp	x8, x10, [x19, #8]
   21468:	add	x9, x8, #0x2
   2146c:	cmp	x9, x10
   21470:	b.cs	2147c <__cxa_demangle@@Base+0xec84>  // b.hs, b.nlast
   21474:	ldr	x0, [x19]
   21478:	b	214a0 <__cxa_demangle@@Base+0xeca8>
   2147c:	ldr	x0, [x19]
   21480:	lsl	x8, x10, #1
   21484:	cmp	x8, x9
   21488:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2148c:	str	x1, [x19, #16]
   21490:	bl	ecc0 <realloc@plt>
   21494:	str	x0, [x19]
   21498:	cbz	x0, 21550 <__cxa_demangle@@Base+0xed58>
   2149c:	ldr	x8, [x19, #8]
   214a0:	strh	w26, [x0, x8]
   214a4:	ldr	x8, [x19, #8]
   214a8:	str	w25, [x19, #24]
   214ac:	add	x8, x8, #0x2
   214b0:	str	x8, [x19, #8]
   214b4:	ldr	x21, [x20, #16]
   214b8:	ldr	x8, [x21]
   214bc:	ldr	x8, [x8, #32]
   214c0:	mov	x0, x21
   214c4:	mov	x1, x19
   214c8:	blr	x8
   214cc:	ldrb	w8, [x21, #9]
   214d0:	cmp	w8, #0x1
   214d4:	b.eq	21458 <__cxa_demangle@@Base+0xec60>  // b.none
   214d8:	ldr	x8, [x21]
   214dc:	ldr	x8, [x8, #40]
   214e0:	mov	x0, x21
   214e4:	mov	x1, x19
   214e8:	blr	x8
   214ec:	b	21458 <__cxa_demangle@@Base+0xec60>
   214f0:	ldr	x0, [x19]
   214f4:	lsl	x8, x10, #1
   214f8:	cmp	x8, x9
   214fc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21500:	str	x1, [x19, #16]
   21504:	bl	ecc0 <realloc@plt>
   21508:	str	x0, [x19]
   2150c:	cbz	x0, 21550 <__cxa_demangle@@Base+0xed58>
   21510:	ldr	x8, [x19, #8]
   21514:	add	x8, x0, x8
   21518:	mov	w9, #0x2e                  	// #46
   2151c:	mov	w10, #0x2e2e                	// #11822
   21520:	strb	w9, [x8, #2]
   21524:	strh	w10, [x8]
   21528:	ldr	x8, [x19, #8]
   2152c:	add	x8, x8, #0x3
   21530:	str	x8, [x19, #8]
   21534:	stp	w22, w23, [x19, #24]
   21538:	ldp	x20, x19, [sp, #64]
   2153c:	ldp	x22, x21, [sp, #48]
   21540:	ldp	x24, x23, [sp, #32]
   21544:	ldp	x26, x25, [sp, #16]
   21548:	ldp	x29, x30, [sp], #80
   2154c:	ret
   21550:	bl	eeb0 <_ZSt9terminatev@plt>
   21554:	b	21558 <__cxa_demangle@@Base+0xed60>
   21558:	stp	w22, w23, [x19, #24]
   2155c:	bl	eea0 <_Unwind_Resume@plt>
   21560:	b	eb20 <_ZdlPv@plt>
   21564:	stp	x29, x30, [sp, #-48]!
   21568:	stp	x22, x21, [sp, #16]
   2156c:	stp	x20, x19, [sp, #32]
   21570:	mov	x29, sp
   21574:	ldp	x9, x8, [x0, #24]
   21578:	mov	x20, x0
   2157c:	mov	x19, x1
   21580:	sub	x10, x8, x9
   21584:	cmp	x10, #0x1
   21588:	b.ne	2160c <__cxa_demangle@@Base+0xee14>  // b.any
   2158c:	cmp	x9, x8
   21590:	b.eq	215bc <__cxa_demangle@@Base+0xedc4>  // b.none
   21594:	adrp	x10, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   21598:	add	x10, x10, #0xed7
   2159c:	ldrb	w11, [x9]
   215a0:	ldrb	w12, [x10]
   215a4:	cmp	w11, w12
   215a8:	b.ne	2160c <__cxa_demangle@@Base+0xee14>  // b.any
   215ac:	add	x9, x9, #0x1
   215b0:	cmp	x8, x9
   215b4:	add	x10, x10, #0x1
   215b8:	b.ne	2159c <__cxa_demangle@@Base+0xeda4>  // b.any
   215bc:	ldp	x8, x10, [x19, #8]
   215c0:	add	x9, x8, #0x1
   215c4:	cmp	x9, x10
   215c8:	b.cs	215d4 <__cxa_demangle@@Base+0xeddc>  // b.hs, b.nlast
   215cc:	ldr	x0, [x19]
   215d0:	b	215f8 <__cxa_demangle@@Base+0xee00>
   215d4:	ldr	x0, [x19]
   215d8:	lsl	x8, x10, #1
   215dc:	cmp	x8, x9
   215e0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   215e4:	str	x1, [x19, #16]
   215e8:	bl	ecc0 <realloc@plt>
   215ec:	str	x0, [x19]
   215f0:	cbz	x0, 218c0 <__cxa_demangle@@Base+0xf0c8>
   215f4:	ldr	x8, [x19, #8]
   215f8:	mov	w9, #0x28                  	// #40
   215fc:	strb	w9, [x0, x8]
   21600:	ldr	x8, [x19, #8]
   21604:	add	x8, x8, #0x1
   21608:	str	x8, [x19, #8]
   2160c:	ldp	x8, x10, [x19, #8]
   21610:	add	x9, x8, #0x1
   21614:	cmp	x9, x10
   21618:	b.cs	21624 <__cxa_demangle@@Base+0xee2c>  // b.hs, b.nlast
   2161c:	ldr	x0, [x19]
   21620:	b	21648 <__cxa_demangle@@Base+0xee50>
   21624:	ldr	x0, [x19]
   21628:	lsl	x8, x10, #1
   2162c:	cmp	x8, x9
   21630:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21634:	str	x1, [x19, #16]
   21638:	bl	ecc0 <realloc@plt>
   2163c:	str	x0, [x19]
   21640:	cbz	x0, 218c0 <__cxa_demangle@@Base+0xf0c8>
   21644:	ldr	x8, [x19, #8]
   21648:	mov	w9, #0x28                  	// #40
   2164c:	strb	w9, [x0, x8]
   21650:	ldr	x8, [x19, #8]
   21654:	mov	x1, x19
   21658:	add	x8, x8, #0x1
   2165c:	str	x8, [x19, #8]
   21660:	ldr	x21, [x20, #16]
   21664:	ldr	x8, [x21]
   21668:	mov	x0, x21
   2166c:	ldr	x8, [x8, #32]
   21670:	blr	x8
   21674:	ldrb	w8, [x21, #9]
   21678:	cmp	w8, #0x1
   2167c:	b.eq	21694 <__cxa_demangle@@Base+0xee9c>  // b.none
   21680:	ldr	x8, [x21]
   21684:	mov	x0, x21
   21688:	mov	x1, x19
   2168c:	ldr	x8, [x8, #40]
   21690:	blr	x8
   21694:	ldp	x8, x10, [x19, #8]
   21698:	add	x9, x8, #0x2
   2169c:	cmp	x9, x10
   216a0:	b.cs	216ac <__cxa_demangle@@Base+0xeeb4>  // b.hs, b.nlast
   216a4:	ldr	x0, [x19]
   216a8:	b	216d0 <__cxa_demangle@@Base+0xeed8>
   216ac:	ldr	x0, [x19]
   216b0:	lsl	x8, x10, #1
   216b4:	cmp	x8, x9
   216b8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   216bc:	str	x1, [x19, #16]
   216c0:	bl	ecc0 <realloc@plt>
   216c4:	str	x0, [x19]
   216c8:	cbz	x0, 218c0 <__cxa_demangle@@Base+0xf0c8>
   216cc:	ldr	x8, [x19, #8]
   216d0:	mov	w9, #0x2029                	// #8233
   216d4:	strh	w9, [x0, x8]
   216d8:	ldr	x8, [x19, #8]
   216dc:	add	x8, x8, #0x2
   216e0:	str	x8, [x19, #8]
   216e4:	ldp	x22, x9, [x20, #24]
   216e8:	subs	x21, x9, x22
   216ec:	b.eq	21748 <__cxa_demangle@@Base+0xef50>  // b.none
   216f0:	ldr	x10, [x19, #16]
   216f4:	add	x9, x8, x21
   216f8:	cmp	x9, x10
   216fc:	b.cs	21708 <__cxa_demangle@@Base+0xef10>  // b.hs, b.nlast
   21700:	ldr	x0, [x19]
   21704:	b	2172c <__cxa_demangle@@Base+0xef34>
   21708:	ldr	x0, [x19]
   2170c:	lsl	x8, x10, #1
   21710:	cmp	x8, x9
   21714:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21718:	str	x1, [x19, #16]
   2171c:	bl	ecc0 <realloc@plt>
   21720:	str	x0, [x19]
   21724:	cbz	x0, 218c0 <__cxa_demangle@@Base+0xf0c8>
   21728:	ldr	x8, [x19, #8]
   2172c:	add	x0, x0, x8
   21730:	mov	x1, x22
   21734:	mov	x2, x21
   21738:	bl	eae0 <memmove@plt>
   2173c:	ldr	x8, [x19, #8]
   21740:	add	x8, x8, x21
   21744:	str	x8, [x19, #8]
   21748:	ldr	x10, [x19, #16]
   2174c:	add	x9, x8, #0x2
   21750:	cmp	x9, x10
   21754:	b.cs	21760 <__cxa_demangle@@Base+0xef68>  // b.hs, b.nlast
   21758:	ldr	x0, [x19]
   2175c:	b	21784 <__cxa_demangle@@Base+0xef8c>
   21760:	ldr	x0, [x19]
   21764:	lsl	x8, x10, #1
   21768:	cmp	x8, x9
   2176c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21770:	str	x1, [x19, #16]
   21774:	bl	ecc0 <realloc@plt>
   21778:	str	x0, [x19]
   2177c:	cbz	x0, 218c0 <__cxa_demangle@@Base+0xf0c8>
   21780:	ldr	x8, [x19, #8]
   21784:	mov	w9, #0x2820                	// #10272
   21788:	strh	w9, [x0, x8]
   2178c:	ldr	x8, [x19, #8]
   21790:	mov	x1, x19
   21794:	add	x8, x8, #0x2
   21798:	str	x8, [x19, #8]
   2179c:	ldr	x21, [x20, #40]
   217a0:	ldr	x8, [x21]
   217a4:	mov	x0, x21
   217a8:	ldr	x8, [x8, #32]
   217ac:	blr	x8
   217b0:	ldrb	w8, [x21, #9]
   217b4:	cmp	w8, #0x1
   217b8:	b.eq	217d0 <__cxa_demangle@@Base+0xefd8>  // b.none
   217bc:	ldr	x8, [x21]
   217c0:	mov	x0, x21
   217c4:	mov	x1, x19
   217c8:	ldr	x8, [x8, #40]
   217cc:	blr	x8
   217d0:	ldp	x8, x10, [x19, #8]
   217d4:	add	x9, x8, #0x1
   217d8:	cmp	x9, x10
   217dc:	b.cs	217e8 <__cxa_demangle@@Base+0xeff0>  // b.hs, b.nlast
   217e0:	ldr	x0, [x19]
   217e4:	b	2180c <__cxa_demangle@@Base+0xf014>
   217e8:	ldr	x0, [x19]
   217ec:	lsl	x8, x10, #1
   217f0:	cmp	x8, x9
   217f4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   217f8:	str	x1, [x19, #16]
   217fc:	bl	ecc0 <realloc@plt>
   21800:	str	x0, [x19]
   21804:	cbz	x0, 218c0 <__cxa_demangle@@Base+0xf0c8>
   21808:	ldr	x8, [x19, #8]
   2180c:	mov	w9, #0x29                  	// #41
   21810:	strb	w9, [x0, x8]
   21814:	ldr	x9, [x19, #8]
   21818:	add	x8, x9, #0x1
   2181c:	str	x8, [x19, #8]
   21820:	ldp	x11, x10, [x20, #24]
   21824:	sub	x12, x10, x11
   21828:	cmp	x12, #0x1
   2182c:	b.ne	218b0 <__cxa_demangle@@Base+0xf0b8>  // b.any
   21830:	cmp	x11, x10
   21834:	b.eq	21860 <__cxa_demangle@@Base+0xf068>  // b.none
   21838:	adrp	x12, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2183c:	add	x12, x12, #0xed7
   21840:	ldrb	w13, [x11]
   21844:	ldrb	w14, [x12]
   21848:	cmp	w13, w14
   2184c:	b.ne	218b0 <__cxa_demangle@@Base+0xf0b8>  // b.any
   21850:	add	x11, x11, #0x1
   21854:	cmp	x10, x11
   21858:	add	x12, x12, #0x1
   2185c:	b.ne	21840 <__cxa_demangle@@Base+0xf048>  // b.any
   21860:	ldr	x10, [x19, #16]
   21864:	add	x9, x9, #0x2
   21868:	cmp	x9, x10
   2186c:	b.cs	21878 <__cxa_demangle@@Base+0xf080>  // b.hs, b.nlast
   21870:	ldr	x0, [x19]
   21874:	b	2189c <__cxa_demangle@@Base+0xf0a4>
   21878:	ldr	x0, [x19]
   2187c:	lsl	x8, x10, #1
   21880:	cmp	x8, x9
   21884:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21888:	str	x1, [x19, #16]
   2188c:	bl	ecc0 <realloc@plt>
   21890:	str	x0, [x19]
   21894:	cbz	x0, 218c0 <__cxa_demangle@@Base+0xf0c8>
   21898:	ldr	x8, [x19, #8]
   2189c:	mov	w9, #0x29                  	// #41
   218a0:	strb	w9, [x0, x8]
   218a4:	ldr	x8, [x19, #8]
   218a8:	add	x8, x8, #0x1
   218ac:	str	x8, [x19, #8]
   218b0:	ldp	x20, x19, [sp, #32]
   218b4:	ldp	x22, x21, [sp, #16]
   218b8:	ldp	x29, x30, [sp], #48
   218bc:	ret
   218c0:	bl	eeb0 <_ZSt9terminatev@plt>
   218c4:	b	eb20 <_ZdlPv@plt>
   218c8:	stp	x29, x30, [sp, #-48]!
   218cc:	stp	x22, x21, [sp, #16]
   218d0:	stp	x20, x19, [sp, #32]
   218d4:	mov	x29, sp
   218d8:	ldp	x22, x9, [x0, #16]
   218dc:	ldr	x8, [x1, #8]
   218e0:	mov	x20, x0
   218e4:	mov	x19, x1
   218e8:	subs	x21, x9, x22
   218ec:	b.eq	21948 <__cxa_demangle@@Base+0xf150>  // b.none
   218f0:	ldr	x10, [x19, #16]
   218f4:	add	x9, x8, x21
   218f8:	cmp	x9, x10
   218fc:	b.cs	21908 <__cxa_demangle@@Base+0xf110>  // b.hs, b.nlast
   21900:	ldr	x0, [x19]
   21904:	b	2192c <__cxa_demangle@@Base+0xf134>
   21908:	ldr	x0, [x19]
   2190c:	lsl	x8, x10, #1
   21910:	cmp	x8, x9
   21914:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21918:	str	x1, [x19, #16]
   2191c:	bl	ecc0 <realloc@plt>
   21920:	str	x0, [x19]
   21924:	cbz	x0, 21a30 <__cxa_demangle@@Base+0xf238>
   21928:	ldr	x8, [x19, #8]
   2192c:	add	x0, x0, x8
   21930:	mov	x1, x22
   21934:	mov	x2, x21
   21938:	bl	eae0 <memmove@plt>
   2193c:	ldr	x8, [x19, #8]
   21940:	add	x8, x8, x21
   21944:	str	x8, [x19, #8]
   21948:	ldr	x10, [x19, #16]
   2194c:	add	x9, x8, #0x1
   21950:	cmp	x9, x10
   21954:	b.cs	21960 <__cxa_demangle@@Base+0xf168>  // b.hs, b.nlast
   21958:	ldr	x0, [x19]
   2195c:	b	21984 <__cxa_demangle@@Base+0xf18c>
   21960:	ldr	x0, [x19]
   21964:	lsl	x8, x10, #1
   21968:	cmp	x8, x9
   2196c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21970:	str	x1, [x19, #16]
   21974:	bl	ecc0 <realloc@plt>
   21978:	str	x0, [x19]
   2197c:	cbz	x0, 21a30 <__cxa_demangle@@Base+0xf238>
   21980:	ldr	x8, [x19, #8]
   21984:	mov	w9, #0x28                  	// #40
   21988:	strb	w9, [x0, x8]
   2198c:	ldr	x8, [x19, #8]
   21990:	mov	x1, x19
   21994:	add	x8, x8, #0x1
   21998:	str	x8, [x19, #8]
   2199c:	ldr	x20, [x20, #32]
   219a0:	ldr	x8, [x20]
   219a4:	mov	x0, x20
   219a8:	ldr	x8, [x8, #32]
   219ac:	blr	x8
   219b0:	ldrb	w8, [x20, #9]
   219b4:	cmp	w8, #0x1
   219b8:	b.eq	219d0 <__cxa_demangle@@Base+0xf1d8>  // b.none
   219bc:	ldr	x8, [x20]
   219c0:	mov	x0, x20
   219c4:	mov	x1, x19
   219c8:	ldr	x8, [x8, #40]
   219cc:	blr	x8
   219d0:	ldp	x8, x10, [x19, #8]
   219d4:	add	x9, x8, #0x1
   219d8:	cmp	x9, x10
   219dc:	b.cs	219e8 <__cxa_demangle@@Base+0xf1f0>  // b.hs, b.nlast
   219e0:	ldr	x0, [x19]
   219e4:	b	21a0c <__cxa_demangle@@Base+0xf214>
   219e8:	ldr	x0, [x19]
   219ec:	lsl	x8, x10, #1
   219f0:	cmp	x8, x9
   219f4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   219f8:	str	x1, [x19, #16]
   219fc:	bl	ecc0 <realloc@plt>
   21a00:	str	x0, [x19]
   21a04:	cbz	x0, 21a30 <__cxa_demangle@@Base+0xf238>
   21a08:	ldr	x8, [x19, #8]
   21a0c:	mov	w9, #0x29                  	// #41
   21a10:	strb	w9, [x0, x8]
   21a14:	ldr	x8, [x19, #8]
   21a18:	add	x8, x8, #0x1
   21a1c:	str	x8, [x19, #8]
   21a20:	ldp	x20, x19, [sp, #32]
   21a24:	ldp	x22, x21, [sp, #16]
   21a28:	ldp	x29, x30, [sp], #48
   21a2c:	ret
   21a30:	bl	eeb0 <_ZSt9terminatev@plt>
   21a34:	b	eb20 <_ZdlPv@plt>
   21a38:	stp	x29, x30, [sp, #-48]!
   21a3c:	stp	x22, x21, [sp, #16]
   21a40:	stp	x20, x19, [sp, #32]
   21a44:	mov	x29, sp
   21a48:	ldp	x22, x9, [x0, #16]
   21a4c:	ldr	x8, [x1, #8]
   21a50:	mov	x20, x0
   21a54:	mov	x19, x1
   21a58:	subs	x21, x9, x22
   21a5c:	b.eq	21ab8 <__cxa_demangle@@Base+0xf2c0>  // b.none
   21a60:	ldr	x10, [x19, #16]
   21a64:	add	x9, x8, x21
   21a68:	cmp	x9, x10
   21a6c:	b.cs	21a78 <__cxa_demangle@@Base+0xf280>  // b.hs, b.nlast
   21a70:	ldr	x0, [x19]
   21a74:	b	21a9c <__cxa_demangle@@Base+0xf2a4>
   21a78:	ldr	x0, [x19]
   21a7c:	lsl	x8, x10, #1
   21a80:	cmp	x8, x9
   21a84:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21a88:	str	x1, [x19, #16]
   21a8c:	bl	ecc0 <realloc@plt>
   21a90:	str	x0, [x19]
   21a94:	cbz	x0, 21be0 <__cxa_demangle@@Base+0xf3e8>
   21a98:	ldr	x8, [x19, #8]
   21a9c:	add	x0, x0, x8
   21aa0:	mov	x1, x22
   21aa4:	mov	x2, x21
   21aa8:	bl	eae0 <memmove@plt>
   21aac:	ldr	x8, [x19, #8]
   21ab0:	add	x8, x8, x21
   21ab4:	str	x8, [x19, #8]
   21ab8:	ldr	x10, [x19, #16]
   21abc:	add	x9, x8, #0x1
   21ac0:	cmp	x9, x10
   21ac4:	b.cs	21ad0 <__cxa_demangle@@Base+0xf2d8>  // b.hs, b.nlast
   21ac8:	ldr	x0, [x19]
   21acc:	b	21af4 <__cxa_demangle@@Base+0xf2fc>
   21ad0:	ldr	x0, [x19]
   21ad4:	lsl	x8, x10, #1
   21ad8:	cmp	x8, x9
   21adc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21ae0:	str	x1, [x19, #16]
   21ae4:	bl	ecc0 <realloc@plt>
   21ae8:	str	x0, [x19]
   21aec:	cbz	x0, 21be0 <__cxa_demangle@@Base+0xf3e8>
   21af0:	ldr	x8, [x19, #8]
   21af4:	mov	w9, #0x3c                  	// #60
   21af8:	strb	w9, [x0, x8]
   21afc:	ldr	x8, [x19, #8]
   21b00:	mov	x1, x19
   21b04:	add	x8, x8, #0x1
   21b08:	str	x8, [x19, #8]
   21b0c:	ldr	x0, [x20, #32]
   21b10:	ldr	x8, [x0]
   21b14:	ldr	x8, [x8, #32]
   21b18:	blr	x8
   21b1c:	ldp	x8, x10, [x19, #8]
   21b20:	add	x9, x8, #0x2
   21b24:	cmp	x9, x10
   21b28:	b.cs	21b34 <__cxa_demangle@@Base+0xf33c>  // b.hs, b.nlast
   21b2c:	ldr	x0, [x19]
   21b30:	b	21b58 <__cxa_demangle@@Base+0xf360>
   21b34:	ldr	x0, [x19]
   21b38:	lsl	x8, x10, #1
   21b3c:	cmp	x8, x9
   21b40:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21b44:	str	x1, [x19, #16]
   21b48:	bl	ecc0 <realloc@plt>
   21b4c:	str	x0, [x19]
   21b50:	cbz	x0, 21be0 <__cxa_demangle@@Base+0xf3e8>
   21b54:	ldr	x8, [x19, #8]
   21b58:	mov	w9, #0x283e                	// #10302
   21b5c:	strh	w9, [x0, x8]
   21b60:	ldr	x8, [x19, #8]
   21b64:	mov	x1, x19
   21b68:	add	x8, x8, #0x2
   21b6c:	str	x8, [x19, #8]
   21b70:	ldr	x0, [x20, #40]
   21b74:	ldr	x8, [x0]
   21b78:	ldr	x8, [x8, #32]
   21b7c:	blr	x8
   21b80:	ldp	x8, x10, [x19, #8]
   21b84:	add	x9, x8, #0x1
   21b88:	cmp	x9, x10
   21b8c:	b.cs	21b98 <__cxa_demangle@@Base+0xf3a0>  // b.hs, b.nlast
   21b90:	ldr	x0, [x19]
   21b94:	b	21bbc <__cxa_demangle@@Base+0xf3c4>
   21b98:	ldr	x0, [x19]
   21b9c:	lsl	x8, x10, #1
   21ba0:	cmp	x8, x9
   21ba4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21ba8:	str	x1, [x19, #16]
   21bac:	bl	ecc0 <realloc@plt>
   21bb0:	str	x0, [x19]
   21bb4:	cbz	x0, 21be0 <__cxa_demangle@@Base+0xf3e8>
   21bb8:	ldr	x8, [x19, #8]
   21bbc:	mov	w9, #0x29                  	// #41
   21bc0:	strb	w9, [x0, x8]
   21bc4:	ldr	x8, [x19, #8]
   21bc8:	add	x8, x8, #0x1
   21bcc:	str	x8, [x19, #8]
   21bd0:	ldp	x20, x19, [sp, #32]
   21bd4:	ldp	x22, x21, [sp, #16]
   21bd8:	ldp	x29, x30, [sp], #48
   21bdc:	ret
   21be0:	bl	eeb0 <_ZSt9terminatev@plt>
   21be4:	b	eb20 <_ZdlPv@plt>
   21be8:	stp	x29, x30, [sp, #-48]!
   21bec:	str	x21, [sp, #16]
   21bf0:	stp	x20, x19, [sp, #32]
   21bf4:	mov	x29, sp
   21bf8:	ldr	x21, [x0, #16]
   21bfc:	mov	x20, x0
   21c00:	mov	x19, x1
   21c04:	ldr	x8, [x21]
   21c08:	mov	x0, x21
   21c0c:	ldr	x8, [x8, #32]
   21c10:	blr	x8
   21c14:	ldrb	w8, [x21, #9]
   21c18:	cmp	w8, #0x1
   21c1c:	b.eq	21c34 <__cxa_demangle@@Base+0xf43c>  // b.none
   21c20:	ldr	x8, [x21]
   21c24:	mov	x0, x21
   21c28:	mov	x1, x19
   21c2c:	ldr	x8, [x8, #40]
   21c30:	blr	x8
   21c34:	ldp	x8, x10, [x19, #8]
   21c38:	add	x9, x8, #0x1
   21c3c:	cmp	x9, x10
   21c40:	b.cs	21c4c <__cxa_demangle@@Base+0xf454>  // b.hs, b.nlast
   21c44:	ldr	x0, [x19]
   21c48:	b	21c70 <__cxa_demangle@@Base+0xf478>
   21c4c:	ldr	x0, [x19]
   21c50:	lsl	x8, x10, #1
   21c54:	cmp	x8, x9
   21c58:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21c5c:	str	x1, [x19, #16]
   21c60:	bl	ecc0 <realloc@plt>
   21c64:	str	x0, [x19]
   21c68:	cbz	x0, 21cf0 <__cxa_demangle@@Base+0xf4f8>
   21c6c:	ldr	x8, [x19, #8]
   21c70:	mov	w9, #0x28                  	// #40
   21c74:	strb	w9, [x0, x8]
   21c78:	ldr	x8, [x19, #8]
   21c7c:	add	x0, x20, #0x18
   21c80:	mov	x1, x19
   21c84:	add	x8, x8, #0x1
   21c88:	str	x8, [x19, #8]
   21c8c:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   21c90:	ldp	x8, x10, [x19, #8]
   21c94:	add	x9, x8, #0x1
   21c98:	cmp	x9, x10
   21c9c:	b.cs	21ca8 <__cxa_demangle@@Base+0xf4b0>  // b.hs, b.nlast
   21ca0:	ldr	x0, [x19]
   21ca4:	b	21ccc <__cxa_demangle@@Base+0xf4d4>
   21ca8:	ldr	x0, [x19]
   21cac:	lsl	x8, x10, #1
   21cb0:	cmp	x8, x9
   21cb4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21cb8:	str	x1, [x19, #16]
   21cbc:	bl	ecc0 <realloc@plt>
   21cc0:	str	x0, [x19]
   21cc4:	cbz	x0, 21cf0 <__cxa_demangle@@Base+0xf4f8>
   21cc8:	ldr	x8, [x19, #8]
   21ccc:	mov	w9, #0x29                  	// #41
   21cd0:	strb	w9, [x0, x8]
   21cd4:	ldr	x8, [x19, #8]
   21cd8:	ldr	x21, [sp, #16]
   21cdc:	add	x8, x8, #0x1
   21ce0:	str	x8, [x19, #8]
   21ce4:	ldp	x20, x19, [sp, #32]
   21ce8:	ldp	x29, x30, [sp], #48
   21cec:	ret
   21cf0:	bl	eeb0 <_ZSt9terminatev@plt>
   21cf4:	b	eb20 <_ZdlPv@plt>
   21cf8:	stp	x29, x30, [sp, #-64]!
   21cfc:	str	x23, [sp, #16]
   21d00:	stp	x22, x21, [sp, #32]
   21d04:	stp	x20, x19, [sp, #48]
   21d08:	mov	x29, sp
   21d0c:	ldr	x22, [x0, #4912]
   21d10:	sub	x20, x2, x1
   21d14:	add	w9, w20, #0xf
   21d18:	and	x23, x9, #0xfffffff0
   21d1c:	ldr	x8, [x22, #8]
   21d20:	mov	x19, x1
   21d24:	add	x9, x8, x23
   21d28:	cmp	x9, #0xff0
   21d2c:	b.cc	21d80 <__cxa_demangle@@Base+0xf588>  // b.lo, b.ul, b.last
   21d30:	cmp	x23, #0xff1
   21d34:	b.cc	21d60 <__cxa_demangle@@Base+0xf568>  // b.lo, b.ul, b.last
   21d38:	add	x0, x23, #0x10
   21d3c:	bl	ec00 <malloc@plt>
   21d40:	cbz	x0, 21dc4 <__cxa_demangle@@Base+0xf5cc>
   21d44:	ldr	x8, [x22]
   21d48:	add	x21, x0, #0x10
   21d4c:	stp	x8, xzr, [x0]
   21d50:	str	x0, [x22]
   21d54:	asr	x22, x20, #3
   21d58:	cbnz	x20, 21d98 <__cxa_demangle@@Base+0xf5a0>
   21d5c:	b	21da8 <__cxa_demangle@@Base+0xf5b0>
   21d60:	mov	x21, x0
   21d64:	mov	w0, #0x1000                	// #4096
   21d68:	bl	ec00 <malloc@plt>
   21d6c:	cbz	x0, 21dc4 <__cxa_demangle@@Base+0xf5cc>
   21d70:	mov	x8, xzr
   21d74:	stp	x22, xzr, [x0]
   21d78:	mov	x22, x0
   21d7c:	str	x0, [x21, #4912]
   21d80:	add	x9, x8, x23
   21d84:	add	x8, x22, x8
   21d88:	add	x21, x8, #0x10
   21d8c:	str	x9, [x22, #8]
   21d90:	asr	x22, x20, #3
   21d94:	cbz	x20, 21da8 <__cxa_demangle@@Base+0xf5b0>
   21d98:	mov	x0, x21
   21d9c:	mov	x1, x19
   21da0:	mov	x2, x20
   21da4:	bl	eae0 <memmove@plt>
   21da8:	mov	x0, x21
   21dac:	mov	x1, x22
   21db0:	ldp	x20, x19, [sp, #48]
   21db4:	ldp	x22, x21, [sp, #32]
   21db8:	ldr	x23, [sp, #16]
   21dbc:	ldp	x29, x30, [sp], #64
   21dc0:	ret
   21dc4:	bl	eeb0 <_ZSt9terminatev@plt>
   21dc8:	stp	x29, x30, [sp, #-48]!
   21dcc:	str	x21, [sp, #16]
   21dd0:	stp	x20, x19, [sp, #32]
   21dd4:	mov	x29, sp
   21dd8:	ldp	x8, x10, [x1, #8]
   21ddc:	mov	x19, x1
   21de0:	mov	x20, x0
   21de4:	add	x9, x8, #0x1
   21de8:	cmp	x9, x10
   21dec:	b.cs	21df8 <__cxa_demangle@@Base+0xf600>  // b.hs, b.nlast
   21df0:	ldr	x0, [x19]
   21df4:	b	21e1c <__cxa_demangle@@Base+0xf624>
   21df8:	ldr	x0, [x19]
   21dfc:	lsl	x8, x10, #1
   21e00:	cmp	x8, x9
   21e04:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21e08:	str	x1, [x19, #16]
   21e0c:	bl	ecc0 <realloc@plt>
   21e10:	str	x0, [x19]
   21e14:	cbz	x0, 21f24 <__cxa_demangle@@Base+0xf72c>
   21e18:	ldr	x8, [x19, #8]
   21e1c:	mov	w9, #0x28                  	// #40
   21e20:	strb	w9, [x0, x8]
   21e24:	ldr	x8, [x19, #8]
   21e28:	mov	x1, x19
   21e2c:	add	x8, x8, #0x1
   21e30:	str	x8, [x19, #8]
   21e34:	ldr	x21, [x20, #16]
   21e38:	ldr	x8, [x21]
   21e3c:	mov	x0, x21
   21e40:	ldr	x8, [x8, #32]
   21e44:	blr	x8
   21e48:	ldrb	w8, [x21, #9]
   21e4c:	cmp	w8, #0x1
   21e50:	b.eq	21e68 <__cxa_demangle@@Base+0xf670>  // b.none
   21e54:	ldr	x8, [x21]
   21e58:	mov	x0, x21
   21e5c:	mov	x1, x19
   21e60:	ldr	x8, [x8, #40]
   21e64:	blr	x8
   21e68:	ldp	x8, x10, [x19, #8]
   21e6c:	add	x9, x8, #0x2
   21e70:	cmp	x9, x10
   21e74:	b.cs	21e80 <__cxa_demangle@@Base+0xf688>  // b.hs, b.nlast
   21e78:	ldr	x0, [x19]
   21e7c:	b	21ea4 <__cxa_demangle@@Base+0xf6ac>
   21e80:	ldr	x0, [x19]
   21e84:	lsl	x8, x10, #1
   21e88:	cmp	x8, x9
   21e8c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21e90:	str	x1, [x19, #16]
   21e94:	bl	ecc0 <realloc@plt>
   21e98:	str	x0, [x19]
   21e9c:	cbz	x0, 21f24 <__cxa_demangle@@Base+0xf72c>
   21ea0:	ldr	x8, [x19, #8]
   21ea4:	mov	w9, #0x2829                	// #10281
   21ea8:	strh	w9, [x0, x8]
   21eac:	ldr	x8, [x19, #8]
   21eb0:	add	x0, x20, #0x18
   21eb4:	mov	x1, x19
   21eb8:	add	x8, x8, #0x2
   21ebc:	str	x8, [x19, #8]
   21ec0:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   21ec4:	ldp	x8, x10, [x19, #8]
   21ec8:	add	x9, x8, #0x1
   21ecc:	cmp	x9, x10
   21ed0:	b.cs	21edc <__cxa_demangle@@Base+0xf6e4>  // b.hs, b.nlast
   21ed4:	ldr	x0, [x19]
   21ed8:	b	21f00 <__cxa_demangle@@Base+0xf708>
   21edc:	ldr	x0, [x19]
   21ee0:	lsl	x8, x10, #1
   21ee4:	cmp	x8, x9
   21ee8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21eec:	str	x1, [x19, #16]
   21ef0:	bl	ecc0 <realloc@plt>
   21ef4:	str	x0, [x19]
   21ef8:	cbz	x0, 21f24 <__cxa_demangle@@Base+0xf72c>
   21efc:	ldr	x8, [x19, #8]
   21f00:	mov	w9, #0x29                  	// #41
   21f04:	strb	w9, [x0, x8]
   21f08:	ldr	x8, [x19, #8]
   21f0c:	ldr	x21, [sp, #16]
   21f10:	add	x8, x8, #0x1
   21f14:	str	x8, [x19, #8]
   21f18:	ldp	x20, x19, [sp, #32]
   21f1c:	ldp	x29, x30, [sp], #48
   21f20:	ret
   21f24:	bl	eeb0 <_ZSt9terminatev@plt>
   21f28:	b	eb20 <_ZdlPv@plt>
   21f2c:	stp	x29, x30, [sp, #-32]!
   21f30:	stp	x20, x19, [sp, #16]
   21f34:	mov	x29, sp
   21f38:	ldrb	w9, [x0, #24]
   21f3c:	ldr	x8, [x1, #8]
   21f40:	mov	x19, x1
   21f44:	mov	x20, x0
   21f48:	cbz	w9, 21f9c <__cxa_demangle@@Base+0xf7a4>
   21f4c:	ldr	x10, [x19, #16]
   21f50:	add	x9, x8, #0x2
   21f54:	cmp	x9, x10
   21f58:	b.cs	21f64 <__cxa_demangle@@Base+0xf76c>  // b.hs, b.nlast
   21f5c:	ldr	x0, [x19]
   21f60:	b	21f88 <__cxa_demangle@@Base+0xf790>
   21f64:	ldr	x0, [x19]
   21f68:	lsl	x8, x10, #1
   21f6c:	cmp	x8, x9
   21f70:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21f74:	str	x1, [x19, #16]
   21f78:	bl	ecc0 <realloc@plt>
   21f7c:	str	x0, [x19]
   21f80:	cbz	x0, 220ac <__cxa_demangle@@Base+0xf8b4>
   21f84:	ldr	x8, [x19, #8]
   21f88:	mov	w9, #0x3a3a                	// #14906
   21f8c:	strh	w9, [x0, x8]
   21f90:	ldr	x8, [x19, #8]
   21f94:	add	x8, x8, #0x2
   21f98:	str	x8, [x19, #8]
   21f9c:	ldr	x10, [x19, #16]
   21fa0:	add	x9, x8, #0x6
   21fa4:	cmp	x9, x10
   21fa8:	b.cs	21fb4 <__cxa_demangle@@Base+0xf7bc>  // b.hs, b.nlast
   21fac:	ldr	x0, [x19]
   21fb0:	b	21fd8 <__cxa_demangle@@Base+0xf7e0>
   21fb4:	ldr	x0, [x19]
   21fb8:	lsl	x8, x10, #1
   21fbc:	cmp	x8, x9
   21fc0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   21fc4:	str	x1, [x19, #16]
   21fc8:	bl	ecc0 <realloc@plt>
   21fcc:	str	x0, [x19]
   21fd0:	cbz	x0, 220ac <__cxa_demangle@@Base+0xf8b4>
   21fd4:	ldr	x8, [x19, #8]
   21fd8:	mov	w10, #0x6564                	// #25956
   21fdc:	add	x8, x0, x8
   21fe0:	mov	w9, #0x6574                	// #25972
   21fe4:	movk	w10, #0x656c, lsl #16
   21fe8:	strh	w9, [x8, #4]
   21fec:	str	w10, [x8]
   21ff0:	ldr	x9, [x19, #8]
   21ff4:	add	x8, x9, #0x6
   21ff8:	str	x8, [x19, #8]
   21ffc:	ldrb	w10, [x20, #25]
   22000:	cbz	w10, 22060 <__cxa_demangle@@Base+0xf868>
   22004:	ldr	x10, [x19, #16]
   22008:	add	x9, x9, #0x9
   2200c:	cmp	x9, x10
   22010:	b.cs	2201c <__cxa_demangle@@Base+0xf824>  // b.hs, b.nlast
   22014:	ldr	x0, [x19]
   22018:	b	22040 <__cxa_demangle@@Base+0xf848>
   2201c:	ldr	x0, [x19]
   22020:	lsl	x8, x10, #1
   22024:	cmp	x8, x9
   22028:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2202c:	str	x1, [x19, #16]
   22030:	bl	ecc0 <realloc@plt>
   22034:	str	x0, [x19]
   22038:	cbz	x0, 220ac <__cxa_demangle@@Base+0xf8b4>
   2203c:	ldr	x8, [x19, #8]
   22040:	add	x8, x0, x8
   22044:	mov	w9, #0x20                  	// #32
   22048:	mov	w10, #0x5d5b                	// #23899
   2204c:	strb	w9, [x8, #2]
   22050:	strh	w10, [x8]
   22054:	ldr	x8, [x19, #8]
   22058:	add	x8, x8, #0x3
   2205c:	str	x8, [x19, #8]
   22060:	ldr	x20, [x20, #16]
   22064:	mov	x1, x19
   22068:	ldr	x8, [x20]
   2206c:	mov	x0, x20
   22070:	ldr	x8, [x8, #32]
   22074:	blr	x8
   22078:	ldrb	w8, [x20, #9]
   2207c:	cmp	w8, #0x1
   22080:	b.ne	22090 <__cxa_demangle@@Base+0xf898>  // b.any
   22084:	ldp	x20, x19, [sp, #16]
   22088:	ldp	x29, x30, [sp], #32
   2208c:	ret
   22090:	ldr	x8, [x20]
   22094:	mov	x0, x20
   22098:	mov	x1, x19
   2209c:	ldp	x20, x19, [sp, #16]
   220a0:	ldr	x2, [x8, #40]
   220a4:	ldp	x29, x30, [sp], #32
   220a8:	br	x2
   220ac:	bl	eeb0 <_ZSt9terminatev@plt>
   220b0:	b	eb20 <_ZdlPv@plt>
   220b4:	stp	x29, x30, [sp, #-64]!
   220b8:	str	x23, [sp, #16]
   220bc:	stp	x22, x21, [sp, #32]
   220c0:	stp	x20, x19, [sp, #48]
   220c4:	mov	x29, sp
   220c8:	ldp	x8, x9, [x0]
   220cc:	mov	x19, x0
   220d0:	cmp	x9, x8
   220d4:	b.eq	22100 <__cxa_demangle@@Base+0xf908>  // b.none
   220d8:	ldrb	w8, [x8]
   220dc:	cmp	w8, #0x44
   220e0:	b.eq	22118 <__cxa_demangle@@Base+0xf920>  // b.none
   220e4:	cmp	w8, #0x54
   220e8:	b.ne	22100 <__cxa_demangle@@Base+0xf908>  // b.any
   220ec:	mov	x0, x19
   220f0:	bl	1958c <__cxa_demangle@@Base+0x6d94>
   220f4:	mov	x20, x0
   220f8:	cbnz	x0, 22128 <__cxa_demangle@@Base+0xf930>
   220fc:	b	221ac <__cxa_demangle@@Base+0xf9b4>
   22100:	mov	x0, x19
   22104:	ldp	x20, x19, [sp, #48]
   22108:	ldp	x22, x21, [sp, #32]
   2210c:	ldr	x23, [sp, #16]
   22110:	ldp	x29, x30, [sp], #64
   22114:	b	18b30 <__cxa_demangle@@Base+0x6338>
   22118:	mov	x0, x19
   2211c:	bl	19978 <__cxa_demangle@@Base+0x7180>
   22120:	mov	x20, x0
   22124:	cbz	x0, 221ac <__cxa_demangle@@Base+0xf9b4>
   22128:	ldp	x8, x9, [x19, #304]
   2212c:	cmp	x8, x9
   22130:	b.ne	221a0 <__cxa_demangle@@Base+0xf9a8>  // b.any
   22134:	ldr	x23, [x19, #296]
   22138:	add	x9, x19, #0x140
   2213c:	cmp	x9, x23
   22140:	sub	x21, x8, x23
   22144:	b.eq	22164 <__cxa_demangle@@Base+0xf96c>  // b.none
   22148:	lsl	x1, x21, #1
   2214c:	mov	x0, x23
   22150:	bl	ecc0 <realloc@plt>
   22154:	mov	x22, x0
   22158:	str	x0, [x19, #296]
   2215c:	cbnz	x0, 2218c <__cxa_demangle@@Base+0xf994>
   22160:	b	221c4 <__cxa_demangle@@Base+0xf9cc>
   22164:	lsl	x0, x21, #1
   22168:	bl	ec00 <malloc@plt>
   2216c:	cbz	x0, 221c4 <__cxa_demangle@@Base+0xf9cc>
   22170:	mov	x22, x0
   22174:	cbz	x21, 22188 <__cxa_demangle@@Base+0xf990>
   22178:	mov	x0, x22
   2217c:	mov	x1, x23
   22180:	mov	x2, x21
   22184:	bl	eae0 <memmove@plt>
   22188:	str	x22, [x19, #296]
   2218c:	asr	x8, x21, #3
   22190:	asr	x9, x21, #2
   22194:	add	x8, x22, x8, lsl #3
   22198:	add	x9, x22, x9, lsl #3
   2219c:	stp	x8, x9, [x19, #304]
   221a0:	add	x9, x8, #0x8
   221a4:	str	x9, [x19, #304]
   221a8:	str	x20, [x8]
   221ac:	mov	x0, x20
   221b0:	ldp	x20, x19, [sp, #48]
   221b4:	ldp	x22, x21, [sp, #32]
   221b8:	ldr	x23, [sp, #16]
   221bc:	ldp	x29, x30, [sp], #64
   221c0:	ret
   221c4:	bl	eeb0 <_ZSt9terminatev@plt>
   221c8:	stp	x29, x30, [sp, #-64]!
   221cc:	str	x23, [sp, #16]
   221d0:	stp	x22, x21, [sp, #32]
   221d4:	stp	x20, x19, [sp, #48]
   221d8:	mov	x29, sp
   221dc:	ldp	x20, x21, [x0]
   221e0:	mov	x19, x0
   221e4:	subs	x22, x21, x20
   221e8:	b.eq	221f4 <__cxa_demangle@@Base+0xf9fc>  // b.none
   221ec:	ldrb	w23, [x20]
   221f0:	b	221f8 <__cxa_demangle@@Base+0xfa00>
   221f4:	mov	w23, wzr
   221f8:	bl	ed40 <__ctype_b_loc@plt>
   221fc:	ldr	x8, [x0]
   22200:	ldrh	w8, [x8, w23, uxtw #1]
   22204:	tbnz	w8, #11, 22240 <__cxa_demangle@@Base+0xfa48>
   22208:	cmp	x22, #0x2
   2220c:	b.cc	22274 <__cxa_demangle@@Base+0xfa7c>  // b.lo, b.ul, b.last
   22210:	ldrb	w8, [x20]
   22214:	cmp	w8, #0x64
   22218:	b.ne	22258 <__cxa_demangle@@Base+0xfa60>  // b.any
   2221c:	ldrb	w8, [x20, #1]
   22220:	cmp	w8, #0x6e
   22224:	b.ne	22254 <__cxa_demangle@@Base+0xfa5c>  // b.any
   22228:	add	x8, x20, #0x2
   2222c:	cmp	x21, x8
   22230:	str	x8, [x19]
   22234:	b.ne	22314 <__cxa_demangle@@Base+0xfb1c>  // b.any
   22238:	mov	x8, xzr
   2223c:	b	22318 <__cxa_demangle@@Base+0xfb20>
   22240:	mov	x0, x19
   22244:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   22248:	mov	x20, x0
   2224c:	cbnz	x0, 22288 <__cxa_demangle@@Base+0xfa90>
   22250:	b	22430 <__cxa_demangle@@Base+0xfc38>
   22254:	ldrb	w8, [x20]
   22258:	cmp	w8, #0x6f
   2225c:	b.ne	22274 <__cxa_demangle@@Base+0xfa7c>  // b.any
   22260:	ldrb	w8, [x20, #1]
   22264:	cmp	w8, #0x6e
   22268:	b.ne	22274 <__cxa_demangle@@Base+0xfa7c>  // b.any
   2226c:	add	x8, x20, #0x2
   22270:	str	x8, [x19]
   22274:	mov	x0, x19
   22278:	mov	x1, xzr
   2227c:	bl	2275c <__cxa_demangle@@Base+0xff64>
   22280:	mov	x20, x0
   22284:	cbz	x0, 22430 <__cxa_demangle@@Base+0xfc38>
   22288:	ldp	x8, x9, [x19]
   2228c:	cmp	x9, x8
   22290:	b.eq	22430 <__cxa_demangle@@Base+0xfc38>  // b.none
   22294:	ldrb	w8, [x8]
   22298:	cmp	w8, #0x49
   2229c:	b.ne	22430 <__cxa_demangle@@Base+0xfc38>  // b.any
   222a0:	mov	x0, x19
   222a4:	mov	w1, wzr
   222a8:	bl	18f34 <__cxa_demangle@@Base+0x673c>
   222ac:	cbz	x0, 2242c <__cxa_demangle@@Base+0xfc34>
   222b0:	ldr	x22, [x19, #4912]
   222b4:	mov	x21, x0
   222b8:	ldr	x8, [x22, #8]
   222bc:	add	x9, x8, #0x20
   222c0:	cmp	x9, #0xff0
   222c4:	b.cc	222e4 <__cxa_demangle@@Base+0xfaec>  // b.lo, b.ul, b.last
   222c8:	mov	w0, #0x1000                	// #4096
   222cc:	bl	ec00 <malloc@plt>
   222d0:	cbz	x0, 22448 <__cxa_demangle@@Base+0xfc50>
   222d4:	mov	x8, xzr
   222d8:	stp	x22, xzr, [x0]
   222dc:	mov	x22, x0
   222e0:	str	x0, [x19, #4912]
   222e4:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   222e8:	add	x9, x8, #0x20
   222ec:	add	x8, x22, x8
   222f0:	add	x10, x10, #0x490
   222f4:	mov	w11, #0x125                 	// #293
   222f8:	str	x9, [x22, #8]
   222fc:	str	x10, [x8, #16]!
   22300:	movk	w11, #0x101, lsl #16
   22304:	stp	x20, x21, [x8, #16]
   22308:	mov	x20, x8
   2230c:	str	w11, [x8, #8]
   22310:	b	22430 <__cxa_demangle@@Base+0xfc38>
   22314:	ldrb	w8, [x8]
   22318:	ldr	x9, [x0]
   2231c:	ldrh	w8, [x9, x8, lsl #1]
   22320:	tbnz	w8, #11, 22338 <__cxa_demangle@@Base+0xfb40>
   22324:	mov	x0, x19
   22328:	bl	220b4 <__cxa_demangle@@Base+0xf8bc>
   2232c:	mov	x21, x0
   22330:	cbnz	x0, 223d0 <__cxa_demangle@@Base+0xfbd8>
   22334:	b	2242c <__cxa_demangle@@Base+0xfc34>
   22338:	mov	x0, x19
   2233c:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   22340:	cbz	x0, 2242c <__cxa_demangle@@Base+0xfc34>
   22344:	ldp	x8, x9, [x19]
   22348:	mov	x21, x0
   2234c:	cmp	x9, x8
   22350:	b.eq	223d0 <__cxa_demangle@@Base+0xfbd8>  // b.none
   22354:	ldrb	w8, [x8]
   22358:	cmp	w8, #0x49
   2235c:	b.ne	223d0 <__cxa_demangle@@Base+0xfbd8>  // b.any
   22360:	mov	x0, x19
   22364:	mov	w1, wzr
   22368:	bl	18f34 <__cxa_demangle@@Base+0x673c>
   2236c:	mov	x20, x0
   22370:	cbz	x0, 22430 <__cxa_demangle@@Base+0xfc38>
   22374:	ldr	x22, [x19, #4912]
   22378:	ldr	x8, [x22, #8]
   2237c:	add	x9, x8, #0x20
   22380:	cmp	x9, #0xff0
   22384:	b.cc	223a4 <__cxa_demangle@@Base+0xfbac>  // b.lo, b.ul, b.last
   22388:	mov	w0, #0x1000                	// #4096
   2238c:	bl	ec00 <malloc@plt>
   22390:	cbz	x0, 22448 <__cxa_demangle@@Base+0xfc50>
   22394:	mov	x8, xzr
   22398:	stp	x22, xzr, [x0]
   2239c:	mov	x22, x0
   223a0:	str	x0, [x19, #4912]
   223a4:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   223a8:	add	x9, x8, #0x20
   223ac:	add	x8, x22, x8
   223b0:	add	x10, x10, #0x490
   223b4:	mov	w11, #0x125                 	// #293
   223b8:	str	x9, [x22, #8]
   223bc:	str	x10, [x8, #16]!
   223c0:	movk	w11, #0x101, lsl #16
   223c4:	stp	x21, x20, [x8, #16]
   223c8:	mov	x21, x8
   223cc:	str	w11, [x8, #8]
   223d0:	ldr	x22, [x19, #4912]
   223d4:	ldr	x8, [x22, #8]
   223d8:	add	x9, x8, #0x20
   223dc:	cmp	x9, #0xff0
   223e0:	b.cc	22400 <__cxa_demangle@@Base+0xfc08>  // b.lo, b.ul, b.last
   223e4:	mov	w0, #0x1000                	// #4096
   223e8:	bl	ec00 <malloc@plt>
   223ec:	cbz	x0, 22448 <__cxa_demangle@@Base+0xfc50>
   223f0:	mov	x8, xzr
   223f4:	stp	x22, xzr, [x0]
   223f8:	mov	x22, x0
   223fc:	str	x0, [x19, #4912]
   22400:	add	x9, x8, #0x20
   22404:	add	x20, x22, x8
   22408:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   2240c:	add	x8, x8, #0x9a0
   22410:	mov	w10, #0x12b                 	// #299
   22414:	movk	w10, #0x101, lsl #16
   22418:	str	x9, [x22, #8]
   2241c:	str	x8, [x20, #16]!
   22420:	str	w10, [x20, #8]
   22424:	str	x21, [x20, #16]
   22428:	b	22430 <__cxa_demangle@@Base+0xfc38>
   2242c:	mov	x20, xzr
   22430:	mov	x0, x20
   22434:	ldp	x20, x19, [sp, #48]
   22438:	ldp	x22, x21, [sp, #32]
   2243c:	ldr	x23, [sp, #16]
   22440:	ldp	x29, x30, [sp], #64
   22444:	ret
   22448:	bl	eeb0 <_ZSt9terminatev@plt>
   2244c:	stp	x29, x30, [sp, #-48]!
   22450:	stp	x22, x21, [sp, #16]
   22454:	stp	x20, x19, [sp, #32]
   22458:	mov	x29, sp
   2245c:	ldp	x20, x8, [x0]
   22460:	cmp	x8, x20
   22464:	b.eq	225e0 <__cxa_demangle@@Base+0xfde8>  // b.none
   22468:	ldrb	w9, [x20]
   2246c:	sub	w9, w9, #0x30
   22470:	cmp	w9, #0x9
   22474:	b.hi	225e0 <__cxa_demangle@@Base+0xfde8>  // b.pmore
   22478:	mov	x19, x0
   2247c:	cmp	x20, x8
   22480:	b.eq	224d8 <__cxa_demangle@@Base+0xfce0>  // b.none
   22484:	mov	x9, xzr
   22488:	mov	x10, x20
   2248c:	add	x20, x20, #0x1
   22490:	str	x20, [x19]
   22494:	ldrb	w11, [x10]
   22498:	cmp	x8, x20
   2249c:	add	x9, x9, x11
   224a0:	sub	x9, x9, #0x30
   224a4:	b.eq	224dc <__cxa_demangle@@Base+0xfce4>  // b.none
   224a8:	ldrb	w11, [x20]
   224ac:	sub	w11, w11, #0x30
   224b0:	cmp	w11, #0xa
   224b4:	b.cs	224dc <__cxa_demangle@@Base+0xfce4>  // b.hs, b.nlast
   224b8:	add	x9, x9, x9, lsl #2
   224bc:	cmp	x8, x20
   224c0:	lsl	x9, x9, #1
   224c4:	b.ne	22488 <__cxa_demangle@@Base+0xfc90>  // b.any
   224c8:	mov	x11, x20
   224cc:	add	x20, x10, #0x1
   224d0:	sub	x9, x9, #0x30
   224d4:	b	224e0 <__cxa_demangle@@Base+0xfce8>
   224d8:	mov	x9, #0xffffffffffffffd0    	// #-48
   224dc:	mov	x11, x20
   224e0:	sub	x8, x8, x11
   224e4:	sub	x10, x9, #0x1
   224e8:	cmp	x10, x8
   224ec:	b.cs	225e0 <__cxa_demangle@@Base+0xfde8>  // b.hs, b.nlast
   224f0:	add	x21, x20, x9
   224f4:	cmp	x9, #0xa
   224f8:	str	x21, [x19]
   224fc:	b.cc	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.lo, b.ul, b.last
   22500:	ldrb	w8, [x20]
   22504:	cmp	w8, #0x5f
   22508:	b.ne	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.any
   2250c:	ldrb	w8, [x20, #1]
   22510:	cmp	w8, #0x47
   22514:	b.ne	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.any
   22518:	ldrb	w8, [x20, #2]
   2251c:	cmp	w8, #0x4c
   22520:	b.ne	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.any
   22524:	ldrb	w8, [x20, #3]
   22528:	cmp	w8, #0x4f
   2252c:	b.ne	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.any
   22530:	ldrb	w8, [x20, #4]
   22534:	cmp	w8, #0x42
   22538:	b.ne	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.any
   2253c:	ldrb	w8, [x20, #5]
   22540:	cmp	w8, #0x41
   22544:	b.ne	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.any
   22548:	ldrb	w8, [x20, #6]
   2254c:	cmp	w8, #0x4c
   22550:	b.ne	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.any
   22554:	ldrb	w8, [x20, #7]
   22558:	cmp	w8, #0x5f
   2255c:	b.ne	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.any
   22560:	ldrb	w8, [x20, #8]
   22564:	cmp	w8, #0x5f
   22568:	b.ne	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.any
   2256c:	ldrb	w8, [x20, #9]
   22570:	cmp	w8, #0x4e
   22574:	b.ne	225f4 <__cxa_demangle@@Base+0xfdfc>  // b.any
   22578:	ldr	x20, [x19, #4912]
   2257c:	ldr	x8, [x20, #8]
   22580:	add	x9, x8, #0x20
   22584:	cmp	x9, #0xfef
   22588:	b.ls	225a8 <__cxa_demangle@@Base+0xfdb0>  // b.plast
   2258c:	mov	w0, #0x1000                	// #4096
   22590:	bl	ec00 <malloc@plt>
   22594:	cbz	x0, 22650 <__cxa_demangle@@Base+0xfe58>
   22598:	mov	x8, xzr
   2259c:	stp	x20, xzr, [x0]
   225a0:	mov	x20, x0
   225a4:	str	x0, [x19, #4912]
   225a8:	add	x9, x8, #0x20
   225ac:	add	x0, x20, x8
   225b0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   225b4:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   225b8:	add	x8, x8, #0xd60
   225bc:	mov	w10, #0x107                 	// #263
   225c0:	add	x11, x11, #0xc26
   225c4:	movk	w10, #0x101, lsl #16
   225c8:	str	x9, [x20, #8]
   225cc:	str	x8, [x0, #16]!
   225d0:	add	x8, x11, #0x15
   225d4:	str	w10, [x0, #8]
   225d8:	stp	x11, x8, [x0, #16]
   225dc:	b	225e4 <__cxa_demangle@@Base+0xfdec>
   225e0:	mov	x0, xzr
   225e4:	ldp	x20, x19, [sp, #32]
   225e8:	ldp	x22, x21, [sp, #16]
   225ec:	ldp	x29, x30, [sp], #48
   225f0:	ret
   225f4:	ldr	x22, [x19, #4912]
   225f8:	ldr	x8, [x22, #8]
   225fc:	add	x9, x8, #0x20
   22600:	cmp	x9, #0xff0
   22604:	b.cc	22624 <__cxa_demangle@@Base+0xfe2c>  // b.lo, b.ul, b.last
   22608:	mov	w0, #0x1000                	// #4096
   2260c:	bl	ec00 <malloc@plt>
   22610:	cbz	x0, 22650 <__cxa_demangle@@Base+0xfe58>
   22614:	mov	x8, xzr
   22618:	stp	x22, xzr, [x0]
   2261c:	mov	x22, x0
   22620:	str	x0, [x19, #4912]
   22624:	add	x9, x8, #0x20
   22628:	add	x0, x22, x8
   2262c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22630:	add	x8, x8, #0xd60
   22634:	mov	w10, #0x107                 	// #263
   22638:	movk	w10, #0x101, lsl #16
   2263c:	str	x9, [x22, #8]
   22640:	str	x8, [x0, #16]!
   22644:	str	w10, [x0, #8]
   22648:	stp	x20, x21, [x0, #16]
   2264c:	b	225e4 <__cxa_demangle@@Base+0xfdec>
   22650:	bl	eeb0 <_ZSt9terminatev@plt>
   22654:	stp	x29, x30, [sp, #-48]!
   22658:	str	x21, [sp, #16]
   2265c:	stp	x20, x19, [sp, #32]
   22660:	mov	x29, sp
   22664:	ldr	x21, [x0, #16]
   22668:	mov	x20, x0
   2266c:	mov	x19, x1
   22670:	ldr	x8, [x21]
   22674:	mov	x0, x21
   22678:	ldr	x8, [x8, #32]
   2267c:	blr	x8
   22680:	ldrb	w8, [x21, #9]
   22684:	cmp	w8, #0x1
   22688:	b.eq	226a0 <__cxa_demangle@@Base+0xfea8>  // b.none
   2268c:	ldr	x8, [x21]
   22690:	mov	x0, x21
   22694:	mov	x1, x19
   22698:	ldr	x8, [x8, #40]
   2269c:	blr	x8
   226a0:	ldp	x8, x10, [x19, #8]
   226a4:	add	x9, x8, #0x2
   226a8:	cmp	x9, x10
   226ac:	b.cs	226b8 <__cxa_demangle@@Base+0xfec0>  // b.hs, b.nlast
   226b0:	ldr	x0, [x19]
   226b4:	b	226dc <__cxa_demangle@@Base+0xfee4>
   226b8:	ldr	x0, [x19]
   226bc:	lsl	x8, x10, #1
   226c0:	cmp	x8, x9
   226c4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   226c8:	str	x1, [x19, #16]
   226cc:	bl	ecc0 <realloc@plt>
   226d0:	str	x0, [x19]
   226d4:	cbz	x0, 22744 <__cxa_demangle@@Base+0xff4c>
   226d8:	ldr	x8, [x19, #8]
   226dc:	mov	w9, #0x3a3a                	// #14906
   226e0:	strh	w9, [x0, x8]
   226e4:	ldr	x8, [x19, #8]
   226e8:	mov	x1, x19
   226ec:	add	x8, x8, #0x2
   226f0:	str	x8, [x19, #8]
   226f4:	ldr	x20, [x20, #24]
   226f8:	ldr	x8, [x20]
   226fc:	mov	x0, x20
   22700:	ldr	x8, [x8, #32]
   22704:	blr	x8
   22708:	ldrb	w8, [x20, #9]
   2270c:	cmp	w8, #0x1
   22710:	b.ne	22724 <__cxa_demangle@@Base+0xff2c>  // b.any
   22714:	ldp	x20, x19, [sp, #32]
   22718:	ldr	x21, [sp, #16]
   2271c:	ldp	x29, x30, [sp], #48
   22720:	ret
   22724:	ldr	x8, [x20]
   22728:	mov	x0, x20
   2272c:	mov	x1, x19
   22730:	ldp	x20, x19, [sp, #32]
   22734:	ldr	x2, [x8, #40]
   22738:	ldr	x21, [sp, #16]
   2273c:	ldp	x29, x30, [sp], #48
   22740:	br	x2
   22744:	bl	eeb0 <_ZSt9terminatev@plt>
   22748:	ldr	x0, [x0, #24]
   2274c:	ldr	x8, [x0]
   22750:	ldr	x1, [x8, #48]
   22754:	br	x1
   22758:	b	eb20 <_ZdlPv@plt>
   2275c:	stp	x29, x30, [sp, #-64]!
   22760:	str	x23, [sp, #16]
   22764:	stp	x22, x21, [sp, #32]
   22768:	stp	x20, x19, [sp, #48]
   2276c:	mov	x29, sp
   22770:	ldp	x21, x8, [x0]
   22774:	subs	x8, x8, x21
   22778:	b.eq	22f24 <__cxa_demangle@@Base+0x1072c>  // b.none
   2277c:	ldrb	w9, [x21]
   22780:	mov	x19, x0
   22784:	mov	x0, xzr
   22788:	sub	w9, w9, #0x61
   2278c:	cmp	w9, #0x15
   22790:	b.hi	23bbc <__cxa_demangle@@Base+0x113c4>  // b.pmore
   22794:	adrp	x10, 2d000 <__cxa_call_unexpected@@Base+0xac>
   22798:	add	x10, x10, #0xaaa
   2279c:	adr	x11, 227ac <__cxa_demangle@@Base+0xffb4>
   227a0:	ldrh	w12, [x10, x9, lsl #1]
   227a4:	add	x11, x11, x12, lsl #2
   227a8:	br	x11
   227ac:	cmp	x8, #0x2
   227b0:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   227b4:	ldrb	w8, [x21, #1]
   227b8:	mov	x0, xzr
   227bc:	sub	w8, w8, #0x4e
   227c0:	cmp	w8, #0x20
   227c4:	b.hi	23bbc <__cxa_demangle@@Base+0x113c4>  // b.pmore
   227c8:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   227cc:	add	x9, x9, #0xc8a
   227d0:	adr	x10, 227e0 <__cxa_demangle@@Base+0xffe8>
   227d4:	ldrh	w11, [x9, x8, lsl #1]
   227d8:	add	x10, x10, x11, lsl #2
   227dc:	br	x10
   227e0:	ldr	x20, [x19, #4912]
   227e4:	add	x8, x21, #0x2
   227e8:	str	x8, [x19]
   227ec:	ldr	x8, [x20, #8]
   227f0:	add	x9, x8, #0x20
   227f4:	cmp	x9, #0xff0
   227f8:	b.cc	22818 <__cxa_demangle@@Base+0x10020>  // b.lo, b.ul, b.last
   227fc:	mov	w0, #0x1000                	// #4096
   22800:	bl	ec00 <malloc@plt>
   22804:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22808:	mov	x8, xzr
   2280c:	stp	x20, xzr, [x0]
   22810:	mov	x20, x0
   22814:	str	x0, [x19, #4912]
   22818:	add	x9, x8, #0x20
   2281c:	add	x0, x20, x8
   22820:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22824:	mov	w10, #0x107                 	// #263
   22828:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2282c:	add	x8, x8, #0xd60
   22830:	movk	w10, #0x101, lsl #16
   22834:	add	x11, x11, #0xc47
   22838:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   2283c:	cmp	x8, #0x2
   22840:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22844:	ldrb	w8, [x21, #1]
   22848:	cmp	w8, #0x73
   2284c:	b.ne	22f24 <__cxa_demangle@@Base+0x1072c>  // b.any
   22850:	ldr	x20, [x19, #4912]
   22854:	add	x8, x21, #0x2
   22858:	str	x8, [x19]
   2285c:	ldr	x8, [x20, #8]
   22860:	add	x9, x8, #0x20
   22864:	cmp	x9, #0xff0
   22868:	b.cc	22888 <__cxa_demangle@@Base+0x10090>  // b.lo, b.ul, b.last
   2286c:	mov	w0, #0x1000                	// #4096
   22870:	bl	ec00 <malloc@plt>
   22874:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22878:	mov	x8, xzr
   2287c:	stp	x20, xzr, [x0]
   22880:	mov	x20, x0
   22884:	str	x0, [x19, #4912]
   22888:	add	x9, x8, #0x20
   2288c:	add	x0, x20, x8
   22890:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22894:	mov	w10, #0x107                 	// #263
   22898:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2289c:	add	x8, x8, #0xd60
   228a0:	movk	w10, #0x101, lsl #16
   228a4:	add	x11, x11, #0xe1b
   228a8:	b	23b40 <__cxa_demangle@@Base+0x11348>
   228ac:	cmp	x8, #0x2
   228b0:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   228b4:	ldrb	w8, [x21, #1]
   228b8:	mov	x0, xzr
   228bc:	sub	w8, w8, #0x4c
   228c0:	cmp	w8, #0x28
   228c4:	b.hi	23bbc <__cxa_demangle@@Base+0x113c4>  // b.pmore
   228c8:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   228cc:	add	x9, x9, #0xb24
   228d0:	adr	x10, 228e0 <__cxa_demangle@@Base+0x100e8>
   228d4:	ldrh	w11, [x9, x8, lsl #1]
   228d8:	add	x10, x10, x11, lsl #2
   228dc:	br	x10
   228e0:	ldr	x20, [x19, #4912]
   228e4:	add	x8, x21, #0x2
   228e8:	str	x8, [x19]
   228ec:	ldr	x8, [x20, #8]
   228f0:	add	x9, x8, #0x20
   228f4:	cmp	x9, #0xff0
   228f8:	b.cc	22918 <__cxa_demangle@@Base+0x10120>  // b.lo, b.ul, b.last
   228fc:	mov	w0, #0x1000                	// #4096
   22900:	bl	ec00 <malloc@plt>
   22904:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22908:	mov	x8, xzr
   2290c:	stp	x20, xzr, [x0]
   22910:	mov	x20, x0
   22914:	str	x0, [x19, #4912]
   22918:	add	x9, x8, #0x20
   2291c:	add	x0, x20, x8
   22920:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22924:	mov	w10, #0x107                 	// #263
   22928:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2292c:	add	x8, x8, #0xd60
   22930:	movk	w10, #0x101, lsl #16
   22934:	add	x11, x11, #0xdba
   22938:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   2293c:	cmp	x8, #0x2
   22940:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22944:	ldrb	w8, [x21, #1]
   22948:	mov	x0, xzr
   2294c:	sub	w8, w8, #0x4d
   22950:	cmp	w8, #0x26
   22954:	b.hi	23bbc <__cxa_demangle@@Base+0x113c4>  // b.pmore
   22958:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   2295c:	add	x9, x9, #0xad6
   22960:	adr	x10, 22970 <__cxa_demangle@@Base+0x10178>
   22964:	ldrh	w11, [x9, x8, lsl #1]
   22968:	add	x10, x10, x11, lsl #2
   2296c:	br	x10
   22970:	ldr	x20, [x19, #4912]
   22974:	add	x8, x21, #0x2
   22978:	str	x8, [x19]
   2297c:	ldr	x8, [x20, #8]
   22980:	add	x9, x8, #0x20
   22984:	cmp	x9, #0xff0
   22988:	b.cc	229a8 <__cxa_demangle@@Base+0x101b0>  // b.lo, b.ul, b.last
   2298c:	mov	w0, #0x1000                	// #4096
   22990:	bl	ec00 <malloc@plt>
   22994:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22998:	mov	x8, xzr
   2299c:	stp	x20, xzr, [x0]
   229a0:	mov	x20, x0
   229a4:	str	x0, [x19, #4912]
   229a8:	add	x9, x8, #0x20
   229ac:	add	x0, x20, x8
   229b0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   229b4:	mov	w10, #0x107                 	// #263
   229b8:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   229bc:	add	x8, x8, #0xd60
   229c0:	movk	w10, #0x101, lsl #16
   229c4:	add	x11, x11, #0xdf9
   229c8:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   229cc:	cmp	x8, #0x2
   229d0:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   229d4:	ldrb	w8, [x21, #1]
   229d8:	mov	x0, xzr
   229dc:	sub	w8, w8, #0x56
   229e0:	cmp	w8, #0x20
   229e4:	b.hi	23bbc <__cxa_demangle@@Base+0x113c4>  // b.pmore
   229e8:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   229ec:	add	x9, x9, #0xc32
   229f0:	adr	x10, 22a00 <__cxa_demangle@@Base+0x10208>
   229f4:	ldrh	w11, [x9, x8, lsl #1]
   229f8:	add	x10, x10, x11, lsl #2
   229fc:	br	x10
   22a00:	ldr	x20, [x19, #4912]
   22a04:	add	x8, x21, #0x2
   22a08:	str	x8, [x19]
   22a0c:	ldr	x8, [x20, #8]
   22a10:	add	x9, x8, #0x20
   22a14:	cmp	x9, #0xff0
   22a18:	b.cc	22a38 <__cxa_demangle@@Base+0x10240>  // b.lo, b.ul, b.last
   22a1c:	mov	w0, #0x1000                	// #4096
   22a20:	bl	ec00 <malloc@plt>
   22a24:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22a28:	mov	x8, xzr
   22a2c:	stp	x20, xzr, [x0]
   22a30:	mov	x20, x0
   22a34:	str	x0, [x19, #4912]
   22a38:	add	x9, x8, #0x20
   22a3c:	add	x0, x20, x8
   22a40:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22a44:	mov	w10, #0x107                 	// #263
   22a48:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22a4c:	add	x8, x8, #0xd60
   22a50:	movk	w10, #0x101, lsl #16
   22a54:	add	x11, x11, #0xcbb
   22a58:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   22a5c:	cmp	x8, #0x2
   22a60:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22a64:	ldrb	w8, [x21, #1]
   22a68:	cmp	w8, #0x78
   22a6c:	b.ne	22f24 <__cxa_demangle@@Base+0x1072c>  // b.any
   22a70:	ldr	x20, [x19, #4912]
   22a74:	add	x8, x21, #0x2
   22a78:	str	x8, [x19]
   22a7c:	ldr	x8, [x20, #8]
   22a80:	add	x9, x8, #0x20
   22a84:	cmp	x9, #0xff0
   22a88:	b.cc	22aa8 <__cxa_demangle@@Base+0x102b0>  // b.lo, b.ul, b.last
   22a8c:	mov	w0, #0x1000                	// #4096
   22a90:	bl	ec00 <malloc@plt>
   22a94:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22a98:	mov	x8, xzr
   22a9c:	stp	x20, xzr, [x0]
   22aa0:	mov	x20, x0
   22aa4:	str	x0, [x19, #4912]
   22aa8:	add	x9, x8, #0x20
   22aac:	add	x0, x20, x8
   22ab0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22ab4:	mov	w10, #0x107                 	// #263
   22ab8:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22abc:	add	x8, x8, #0xd60
   22ac0:	movk	w10, #0x101, lsl #16
   22ac4:	add	x11, x11, #0xcfb
   22ac8:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   22acc:	cmp	x8, #0x2
   22ad0:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22ad4:	ldrb	w8, [x21, #1]
   22ad8:	cmp	w8, #0x75
   22adc:	b.ne	22f24 <__cxa_demangle@@Base+0x1072c>  // b.any
   22ae0:	ldr	x20, [x19, #4912]
   22ae4:	add	x8, x21, #0x2
   22ae8:	str	x8, [x19]
   22aec:	ldr	x8, [x20, #8]
   22af0:	add	x9, x8, #0x20
   22af4:	cmp	x9, #0xff0
   22af8:	b.cc	22b18 <__cxa_demangle@@Base+0x10320>  // b.lo, b.ul, b.last
   22afc:	mov	w0, #0x1000                	// #4096
   22b00:	bl	ec00 <malloc@plt>
   22b04:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22b08:	mov	x8, xzr
   22b0c:	stp	x20, xzr, [x0]
   22b10:	mov	x20, x0
   22b14:	str	x0, [x19, #4912]
   22b18:	add	x9, x8, #0x20
   22b1c:	add	x0, x20, x8
   22b20:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22b24:	mov	w10, #0x107                 	// #263
   22b28:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22b2c:	add	x8, x8, #0xd60
   22b30:	movk	w10, #0x101, lsl #16
   22b34:	add	x11, x11, #0xde5
   22b38:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   22b3c:	cmp	x8, #0x2
   22b40:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22b44:	ldrb	w8, [x21, #1]
   22b48:	mov	x0, xzr
   22b4c:	sub	w8, w8, #0x6c
   22b50:	cmp	w8, #0xa
   22b54:	b.hi	23bbc <__cxa_demangle@@Base+0x113c4>  // b.pmore
   22b58:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   22b5c:	add	x9, x9, #0xc74
   22b60:	adr	x10, 22b70 <__cxa_demangle@@Base+0x10378>
   22b64:	ldrh	w11, [x9, x8, lsl #1]
   22b68:	add	x10, x10, x11, lsl #2
   22b6c:	br	x10
   22b70:	ldr	x20, [x19, #4912]
   22b74:	add	x8, x21, #0x2
   22b78:	str	x8, [x19]
   22b7c:	ldr	x8, [x20, #8]
   22b80:	add	x9, x8, #0x20
   22b84:	cmp	x9, #0xff0
   22b88:	b.cc	22ba8 <__cxa_demangle@@Base+0x103b0>  // b.lo, b.ul, b.last
   22b8c:	mov	w0, #0x1000                	// #4096
   22b90:	bl	ec00 <malloc@plt>
   22b94:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22b98:	mov	x8, xzr
   22b9c:	stp	x20, xzr, [x0]
   22ba0:	mov	x20, x0
   22ba4:	str	x0, [x19, #4912]
   22ba8:	add	x9, x8, #0x20
   22bac:	add	x0, x20, x8
   22bb0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22bb4:	mov	w10, #0x107                 	// #263
   22bb8:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22bbc:	add	x8, x8, #0xd60
   22bc0:	movk	w10, #0x101, lsl #16
   22bc4:	add	x11, x11, #0xc66
   22bc8:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   22bcc:	cmp	x8, #0x2
   22bd0:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22bd4:	ldrb	w8, [x21, #1]
   22bd8:	mov	x0, xzr
   22bdc:	sub	w8, w8, #0x53
   22be0:	cmp	w8, #0x21
   22be4:	b.hi	23bbc <__cxa_demangle@@Base+0x113c4>  // b.pmore
   22be8:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   22bec:	add	x9, x9, #0xbee
   22bf0:	adr	x10, 22c00 <__cxa_demangle@@Base+0x10408>
   22bf4:	ldrh	w11, [x9, x8, lsl #1]
   22bf8:	add	x10, x10, x11, lsl #2
   22bfc:	br	x10
   22c00:	ldr	x20, [x19, #4912]
   22c04:	add	x8, x21, #0x2
   22c08:	str	x8, [x19]
   22c0c:	ldr	x8, [x20, #8]
   22c10:	add	x9, x8, #0x20
   22c14:	cmp	x9, #0xff0
   22c18:	b.cc	22c38 <__cxa_demangle@@Base+0x10440>  // b.lo, b.ul, b.last
   22c1c:	mov	w0, #0x1000                	// #4096
   22c20:	bl	ec00 <malloc@plt>
   22c24:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22c28:	mov	x8, xzr
   22c2c:	stp	x20, xzr, [x0]
   22c30:	mov	x20, x0
   22c34:	str	x0, [x19, #4912]
   22c38:	add	x9, x8, #0x20
   22c3c:	add	x0, x20, x8
   22c40:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22c44:	mov	w10, #0x107                 	// #263
   22c48:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22c4c:	add	x8, x8, #0xd60
   22c50:	movk	w10, #0x101, lsl #16
   22c54:	add	x11, x11, #0xd1c
   22c58:	b	23b40 <__cxa_demangle@@Base+0x11348>
   22c5c:	cmp	x8, #0x2
   22c60:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22c64:	ldrb	w8, [x21, #1]
   22c68:	mov	x0, xzr
   22c6c:	sub	w8, w8, #0x49
   22c70:	cmp	w8, #0x24
   22c74:	b.hi	23bbc <__cxa_demangle@@Base+0x113c4>  // b.pmore
   22c78:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   22c7c:	add	x9, x9, #0xba4
   22c80:	adr	x10, 22c90 <__cxa_demangle@@Base+0x10498>
   22c84:	ldrh	w11, [x9, x8, lsl #1]
   22c88:	add	x10, x10, x11, lsl #2
   22c8c:	br	x10
   22c90:	ldr	x20, [x19, #4912]
   22c94:	add	x8, x21, #0x2
   22c98:	str	x8, [x19]
   22c9c:	ldr	x8, [x20, #8]
   22ca0:	add	x9, x8, #0x20
   22ca4:	cmp	x9, #0xff0
   22ca8:	b.cc	22cc8 <__cxa_demangle@@Base+0x104d0>  // b.lo, b.ul, b.last
   22cac:	mov	w0, #0x1000                	// #4096
   22cb0:	bl	ec00 <malloc@plt>
   22cb4:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22cb8:	mov	x8, xzr
   22cbc:	stp	x20, xzr, [x0]
   22cc0:	mov	x20, x0
   22cc4:	str	x0, [x19, #4912]
   22cc8:	add	x9, x8, #0x20
   22ccc:	add	x0, x20, x8
   22cd0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22cd4:	mov	w10, #0x107                 	// #263
   22cd8:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22cdc:	add	x8, x8, #0xd60
   22ce0:	movk	w10, #0x101, lsl #16
   22ce4:	add	x11, x11, #0xd3c
   22ce8:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   22cec:	cmp	x8, #0x2
   22cf0:	b.cc	22f10 <__cxa_demangle@@Base+0x10718>  // b.lo, b.ul, b.last
   22cf4:	ldrb	w20, [x21, #1]
   22cf8:	b	22f14 <__cxa_demangle@@Base+0x1071c>
   22cfc:	cmp	x8, #0x2
   22d00:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22d04:	ldrb	w8, [x21, #1]
   22d08:	cmp	w8, #0x4f
   22d0c:	b.eq	230b4 <__cxa_demangle@@Base+0x108bc>  // b.none
   22d10:	cmp	w8, #0x71
   22d14:	b.eq	23110 <__cxa_demangle@@Base+0x10918>  // b.none
   22d18:	cmp	w8, #0x6f
   22d1c:	b.ne	22f24 <__cxa_demangle@@Base+0x1072c>  // b.any
   22d20:	ldr	x20, [x19, #4912]
   22d24:	add	x8, x21, #0x2
   22d28:	str	x8, [x19]
   22d2c:	ldr	x8, [x20, #8]
   22d30:	add	x9, x8, #0x20
   22d34:	cmp	x9, #0xff0
   22d38:	b.cc	22d58 <__cxa_demangle@@Base+0x10560>  // b.lo, b.ul, b.last
   22d3c:	mov	w0, #0x1000                	// #4096
   22d40:	bl	ec00 <malloc@plt>
   22d44:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22d48:	mov	x8, xzr
   22d4c:	stp	x20, xzr, [x0]
   22d50:	mov	x20, x0
   22d54:	str	x0, [x19, #4912]
   22d58:	add	x9, x8, #0x20
   22d5c:	add	x0, x20, x8
   22d60:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22d64:	mov	w10, #0x107                 	// #263
   22d68:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22d6c:	add	x8, x8, #0xd60
   22d70:	movk	w10, #0x101, lsl #16
   22d74:	add	x11, x11, #0xcc6
   22d78:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   22d7c:	cmp	x8, #0x2
   22d80:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22d84:	ldrb	w8, [x21, #1]
   22d88:	cmp	w8, #0x74
   22d8c:	b.eq	22ffc <__cxa_demangle@@Base+0x10804>  // b.none
   22d90:	cmp	w8, #0x65
   22d94:	b.ne	22f24 <__cxa_demangle@@Base+0x1072c>  // b.any
   22d98:	ldr	x20, [x19, #4912]
   22d9c:	add	x8, x21, #0x2
   22da0:	str	x8, [x19]
   22da4:	ldr	x8, [x20, #8]
   22da8:	add	x9, x8, #0x20
   22dac:	cmp	x9, #0xff0
   22db0:	b.cc	22dd0 <__cxa_demangle@@Base+0x105d8>  // b.lo, b.ul, b.last
   22db4:	mov	w0, #0x1000                	// #4096
   22db8:	bl	ec00 <malloc@plt>
   22dbc:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22dc0:	mov	x8, xzr
   22dc4:	stp	x20, xzr, [x0]
   22dc8:	mov	x20, x0
   22dcc:	str	x0, [x19, #4912]
   22dd0:	add	x9, x8, #0x20
   22dd4:	add	x0, x20, x8
   22dd8:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22ddc:	mov	w10, #0x107                 	// #263
   22de0:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22de4:	add	x8, x8, #0xd60
   22de8:	movk	w10, #0x101, lsl #16
   22dec:	add	x11, x11, #0xce6
   22df0:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   22df4:	cmp	x8, #0x2
   22df8:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22dfc:	ldrb	w8, [x21, #1]
   22e00:	cmp	w8, #0x52
   22e04:	b.eq	2316c <__cxa_demangle@@Base+0x10974>  // b.none
   22e08:	cmp	w8, #0x72
   22e0c:	b.eq	231c8 <__cxa_demangle@@Base+0x109d0>  // b.none
   22e10:	cmp	w8, #0x6f
   22e14:	b.ne	22f24 <__cxa_demangle@@Base+0x1072c>  // b.any
   22e18:	ldr	x20, [x19, #4912]
   22e1c:	add	x8, x21, #0x2
   22e20:	str	x8, [x19]
   22e24:	ldr	x8, [x20, #8]
   22e28:	add	x9, x8, #0x20
   22e2c:	cmp	x9, #0xff0
   22e30:	b.cc	22e50 <__cxa_demangle@@Base+0x10658>  // b.lo, b.ul, b.last
   22e34:	mov	w0, #0x1000                	// #4096
   22e38:	bl	ec00 <malloc@plt>
   22e3c:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22e40:	mov	x8, xzr
   22e44:	stp	x20, xzr, [x0]
   22e48:	mov	x20, x0
   22e4c:	str	x0, [x19, #4912]
   22e50:	add	x9, x8, #0x20
   22e54:	add	x0, x20, x8
   22e58:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22e5c:	mov	w10, #0x107                 	// #263
   22e60:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22e64:	add	x8, x8, #0xd60
   22e68:	movk	w10, #0x101, lsl #16
   22e6c:	add	x11, x11, #0xd8e
   22e70:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   22e74:	cmp	x8, #0x2
   22e78:	b.cc	22f24 <__cxa_demangle@@Base+0x1072c>  // b.lo, b.ul, b.last
   22e7c:	ldrb	w8, [x21, #1]
   22e80:	mov	x0, xzr
   22e84:	sub	w8, w8, #0x61
   22e88:	cmp	w8, #0x16
   22e8c:	b.hi	23bbc <__cxa_demangle@@Base+0x113c4>  // b.pmore
   22e90:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   22e94:	add	x9, x9, #0xb76
   22e98:	adr	x10, 22ea8 <__cxa_demangle@@Base+0x106b0>
   22e9c:	ldrh	w11, [x9, x8, lsl #1]
   22ea0:	add	x10, x10, x11, lsl #2
   22ea4:	br	x10
   22ea8:	ldr	x20, [x19, #4912]
   22eac:	add	x8, x21, #0x2
   22eb0:	str	x8, [x19]
   22eb4:	ldr	x8, [x20, #8]
   22eb8:	add	x9, x8, #0x20
   22ebc:	cmp	x9, #0xff0
   22ec0:	b.cc	22ee0 <__cxa_demangle@@Base+0x106e8>  // b.lo, b.ul, b.last
   22ec4:	mov	w0, #0x1000                	// #4096
   22ec8:	bl	ec00 <malloc@plt>
   22ecc:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22ed0:	mov	x8, xzr
   22ed4:	stp	x20, xzr, [x0]
   22ed8:	mov	x20, x0
   22edc:	str	x0, [x19, #4912]
   22ee0:	add	x9, x8, #0x20
   22ee4:	add	x0, x20, x8
   22ee8:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22eec:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22ef0:	add	x8, x8, #0xd60
   22ef4:	mov	w10, #0x107                 	// #263
   22ef8:	add	x11, x11, #0xd5d
   22efc:	movk	w10, #0x101, lsl #16
   22f00:	str	x9, [x20, #8]
   22f04:	str	x8, [x0, #16]!
   22f08:	add	x8, x11, #0xe
   22f0c:	b	23bb4 <__cxa_demangle@@Base+0x113bc>
   22f10:	mov	x20, xzr
   22f14:	bl	ed40 <__ctype_b_loc@plt>
   22f18:	ldr	x8, [x0]
   22f1c:	ldrh	w8, [x8, x20, lsl #1]
   22f20:	tbnz	w8, #11, 22f2c <__cxa_demangle@@Base+0x10734>
   22f24:	mov	x0, xzr
   22f28:	b	23bbc <__cxa_demangle@@Base+0x113c4>
   22f2c:	add	x8, x21, #0x2
   22f30:	mov	x0, x19
   22f34:	str	x8, [x19]
   22f38:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   22f3c:	cbz	x0, 23bbc <__cxa_demangle@@Base+0x113c4>
   22f40:	ldr	x21, [x19, #4912]
   22f44:	mov	x20, x0
   22f48:	ldr	x8, [x21, #8]
   22f4c:	add	x9, x8, #0x20
   22f50:	cmp	x9, #0xff0
   22f54:	b.cc	22f74 <__cxa_demangle@@Base+0x1077c>  // b.lo, b.ul, b.last
   22f58:	mov	w0, #0x1000                	// #4096
   22f5c:	bl	ec00 <malloc@plt>
   22f60:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22f64:	mov	x8, xzr
   22f68:	stp	x21, xzr, [x0]
   22f6c:	mov	x21, x0
   22f70:	str	x0, [x19, #4912]
   22f74:	add	x9, x8, #0x20
   22f78:	add	x0, x21, x8
   22f7c:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   22f80:	mov	w10, #0x104                 	// #260
   22f84:	add	x8, x8, #0xa10
   22f88:	movk	w10, #0x101, lsl #16
   22f8c:	str	x9, [x21, #8]
   22f90:	str	x8, [x0, #16]!
   22f94:	str	w10, [x0, #8]
   22f98:	str	x20, [x0, #16]
   22f9c:	b	23bbc <__cxa_demangle@@Base+0x113c4>
   22fa0:	ldr	x20, [x19, #4912]
   22fa4:	add	x8, x21, #0x2
   22fa8:	str	x8, [x19]
   22fac:	ldr	x8, [x20, #8]
   22fb0:	add	x9, x8, #0x20
   22fb4:	cmp	x9, #0xff0
   22fb8:	b.cc	22fd8 <__cxa_demangle@@Base+0x107e0>  // b.lo, b.ul, b.last
   22fbc:	mov	w0, #0x1000                	// #4096
   22fc0:	bl	ec00 <malloc@plt>
   22fc4:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   22fc8:	mov	x8, xzr
   22fcc:	stp	x20, xzr, [x0]
   22fd0:	mov	x20, x0
   22fd4:	str	x0, [x19, #4912]
   22fd8:	add	x9, x8, #0x20
   22fdc:	add	x0, x20, x8
   22fe0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   22fe4:	mov	w10, #0x107                 	// #263
   22fe8:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   22fec:	add	x8, x8, #0xd60
   22ff0:	movk	w10, #0x101, lsl #16
   22ff4:	add	x11, x11, #0xc97
   22ff8:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   22ffc:	ldr	x20, [x19, #4912]
   23000:	add	x8, x21, #0x2
   23004:	str	x8, [x19]
   23008:	ldr	x8, [x20, #8]
   2300c:	add	x9, x8, #0x20
   23010:	cmp	x9, #0xff0
   23014:	b.cc	23034 <__cxa_demangle@@Base+0x1083c>  // b.lo, b.ul, b.last
   23018:	mov	w0, #0x1000                	// #4096
   2301c:	bl	ec00 <malloc@plt>
   23020:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23024:	mov	x8, xzr
   23028:	stp	x20, xzr, [x0]
   2302c:	mov	x20, x0
   23030:	str	x0, [x19, #4912]
   23034:	add	x9, x8, #0x20
   23038:	add	x0, x20, x8
   2303c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23040:	mov	w10, #0x107                 	// #263
   23044:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23048:	add	x8, x8, #0xd60
   2304c:	movk	w10, #0x101, lsl #16
   23050:	add	x11, x11, #0xcf1
   23054:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   23058:	ldr	x20, [x19, #4912]
   2305c:	add	x8, x21, #0x2
   23060:	str	x8, [x19]
   23064:	ldr	x8, [x20, #8]
   23068:	add	x9, x8, #0x20
   2306c:	cmp	x9, #0xff0
   23070:	b.cc	23090 <__cxa_demangle@@Base+0x10898>  // b.lo, b.ul, b.last
   23074:	mov	w0, #0x1000                	// #4096
   23078:	bl	ec00 <malloc@plt>
   2307c:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23080:	mov	x8, xzr
   23084:	stp	x20, xzr, [x0]
   23088:	mov	x20, x0
   2308c:	str	x0, [x19, #4912]
   23090:	add	x9, x8, #0x20
   23094:	add	x0, x20, x8
   23098:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   2309c:	mov	w10, #0x107                 	// #263
   230a0:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   230a4:	add	x8, x8, #0xd60
   230a8:	movk	w10, #0x101, lsl #16
   230ac:	add	x11, x11, #0xd32
   230b0:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   230b4:	ldr	x20, [x19, #4912]
   230b8:	add	x8, x21, #0x2
   230bc:	str	x8, [x19]
   230c0:	ldr	x8, [x20, #8]
   230c4:	add	x9, x8, #0x20
   230c8:	cmp	x9, #0xff0
   230cc:	b.cc	230ec <__cxa_demangle@@Base+0x108f4>  // b.lo, b.ul, b.last
   230d0:	mov	w0, #0x1000                	// #4096
   230d4:	bl	ec00 <malloc@plt>
   230d8:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   230dc:	mov	x8, xzr
   230e0:	stp	x20, xzr, [x0]
   230e4:	mov	x20, x0
   230e8:	str	x0, [x19, #4912]
   230ec:	add	x9, x8, #0x20
   230f0:	add	x0, x20, x8
   230f4:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   230f8:	mov	w10, #0x107                 	// #263
   230fc:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23100:	add	x8, x8, #0xd60
   23104:	movk	w10, #0x101, lsl #16
   23108:	add	x11, x11, #0xcd0
   2310c:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   23110:	ldr	x20, [x19, #4912]
   23114:	add	x8, x21, #0x2
   23118:	str	x8, [x19]
   2311c:	ldr	x8, [x20, #8]
   23120:	add	x9, x8, #0x20
   23124:	cmp	x9, #0xff0
   23128:	b.cc	23148 <__cxa_demangle@@Base+0x10950>  // b.lo, b.ul, b.last
   2312c:	mov	w0, #0x1000                	// #4096
   23130:	bl	ec00 <malloc@plt>
   23134:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23138:	mov	x8, xzr
   2313c:	stp	x20, xzr, [x0]
   23140:	mov	x20, x0
   23144:	str	x0, [x19, #4912]
   23148:	add	x9, x8, #0x20
   2314c:	add	x0, x20, x8
   23150:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23154:	mov	w10, #0x107                 	// #263
   23158:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2315c:	add	x8, x8, #0xd60
   23160:	movk	w10, #0x101, lsl #16
   23164:	add	x11, x11, #0xcdb
   23168:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   2316c:	ldr	x20, [x19, #4912]
   23170:	add	x8, x21, #0x2
   23174:	str	x8, [x19]
   23178:	ldr	x8, [x20, #8]
   2317c:	add	x9, x8, #0x20
   23180:	cmp	x9, #0xff0
   23184:	b.cc	231a4 <__cxa_demangle@@Base+0x109ac>  // b.lo, b.ul, b.last
   23188:	mov	w0, #0x1000                	// #4096
   2318c:	bl	ec00 <malloc@plt>
   23190:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23194:	mov	x8, xzr
   23198:	stp	x20, xzr, [x0]
   2319c:	mov	x20, x0
   231a0:	str	x0, [x19, #4912]
   231a4:	add	x9, x8, #0x20
   231a8:	add	x0, x20, x8
   231ac:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   231b0:	mov	w10, #0x107                 	// #263
   231b4:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   231b8:	add	x8, x8, #0xd60
   231bc:	movk	w10, #0x101, lsl #16
   231c0:	add	x11, x11, #0xda3
   231c4:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   231c8:	ldr	x20, [x19, #4912]
   231cc:	add	x8, x21, #0x2
   231d0:	str	x8, [x19]
   231d4:	ldr	x8, [x20, #8]
   231d8:	add	x9, x8, #0x20
   231dc:	cmp	x9, #0xff0
   231e0:	b.cc	23200 <__cxa_demangle@@Base+0x10a08>  // b.lo, b.ul, b.last
   231e4:	mov	w0, #0x1000                	// #4096
   231e8:	bl	ec00 <malloc@plt>
   231ec:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   231f0:	mov	x8, xzr
   231f4:	stp	x20, xzr, [x0]
   231f8:	mov	x20, x0
   231fc:	str	x0, [x19, #4912]
   23200:	add	x9, x8, #0x20
   23204:	add	x0, x20, x8
   23208:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   2320c:	mov	w10, #0x107                 	// #263
   23210:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23214:	add	x8, x8, #0xd60
   23218:	movk	w10, #0x101, lsl #16
   2321c:	add	x11, x11, #0xd99
   23220:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   23224:	ldr	x20, [x19, #4912]
   23228:	add	x8, x21, #0x2
   2322c:	str	x8, [x19]
   23230:	ldr	x8, [x20, #8]
   23234:	add	x9, x8, #0x20
   23238:	cmp	x9, #0xff0
   2323c:	b.cc	2325c <__cxa_demangle@@Base+0x10a64>  // b.lo, b.ul, b.last
   23240:	mov	w0, #0x1000                	// #4096
   23244:	bl	ec00 <malloc@plt>
   23248:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   2324c:	mov	x8, xzr
   23250:	stp	x20, xzr, [x0]
   23254:	mov	x20, x0
   23258:	str	x0, [x19, #4912]
   2325c:	add	x9, x8, #0x20
   23260:	add	x0, x20, x8
   23264:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23268:	mov	w10, #0x107                 	// #263
   2326c:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23270:	add	x8, x8, #0xd60
   23274:	movk	w10, #0x101, lsl #16
   23278:	add	x11, x11, #0xdef
   2327c:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   23280:	ldr	x20, [x19, #4912]
   23284:	add	x8, x21, #0x2
   23288:	str	x8, [x19]
   2328c:	ldr	x8, [x20, #8]
   23290:	add	x9, x8, #0x20
   23294:	cmp	x9, #0xff0
   23298:	b.cc	232b8 <__cxa_demangle@@Base+0x10ac0>  // b.lo, b.ul, b.last
   2329c:	mov	w0, #0x1000                	// #4096
   232a0:	bl	ec00 <malloc@plt>
   232a4:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   232a8:	mov	x8, xzr
   232ac:	stp	x20, xzr, [x0]
   232b0:	mov	x20, x0
   232b4:	str	x0, [x19, #4912]
   232b8:	add	x9, x8, #0x20
   232bc:	add	x0, x20, x8
   232c0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   232c4:	mov	w10, #0x107                 	// #263
   232c8:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   232cc:	add	x8, x8, #0xd60
   232d0:	movk	w10, #0x101, lsl #16
   232d4:	add	x11, x11, #0xe0f
   232d8:	b	23b40 <__cxa_demangle@@Base+0x11348>
   232dc:	ldr	x20, [x19, #4912]
   232e0:	add	x8, x21, #0x2
   232e4:	str	x8, [x19]
   232e8:	ldr	x8, [x20, #8]
   232ec:	add	x9, x8, #0x20
   232f0:	cmp	x9, #0xff0
   232f4:	b.cc	23314 <__cxa_demangle@@Base+0x10b1c>  // b.lo, b.ul, b.last
   232f8:	mov	w0, #0x1000                	// #4096
   232fc:	bl	ec00 <malloc@plt>
   23300:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23304:	mov	x8, xzr
   23308:	stp	x20, xzr, [x0]
   2330c:	mov	x20, x0
   23310:	str	x0, [x19, #4912]
   23314:	add	x9, x8, #0x20
   23318:	add	x0, x20, x8
   2331c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23320:	mov	w10, #0x107                 	// #263
   23324:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23328:	add	x8, x8, #0xd60
   2332c:	movk	w10, #0x101, lsl #16
   23330:	add	x11, x11, #0xe04
   23334:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   23338:	ldr	x20, [x19, #4912]
   2333c:	add	x8, x21, #0x2
   23340:	str	x8, [x19]
   23344:	ldr	x8, [x20, #8]
   23348:	add	x9, x8, #0x20
   2334c:	cmp	x9, #0xff0
   23350:	b.cc	23370 <__cxa_demangle@@Base+0x10b78>  // b.lo, b.ul, b.last
   23354:	mov	w0, #0x1000                	// #4096
   23358:	bl	ec00 <malloc@plt>
   2335c:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23360:	mov	x8, xzr
   23364:	stp	x20, xzr, [x0]
   23368:	mov	x20, x0
   2336c:	str	x0, [x19, #4912]
   23370:	add	x9, x8, #0x20
   23374:	add	x0, x20, x8
   23378:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   2337c:	mov	w10, #0x107                 	// #263
   23380:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23384:	add	x8, x8, #0xd60
   23388:	movk	w10, #0x101, lsl #16
   2338c:	add	x11, x11, #0xc7b
   23390:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   23394:	ldr	x20, [x19, #4912]
   23398:	add	x8, x21, #0x2
   2339c:	str	x8, [x19]
   233a0:	ldr	x8, [x20, #8]
   233a4:	add	x9, x8, #0x20
   233a8:	cmp	x9, #0xff0
   233ac:	b.cc	233cc <__cxa_demangle@@Base+0x10bd4>  // b.lo, b.ul, b.last
   233b0:	mov	w0, #0x1000                	// #4096
   233b4:	bl	ec00 <malloc@plt>
   233b8:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   233bc:	mov	x8, xzr
   233c0:	stp	x20, xzr, [x0]
   233c4:	mov	x20, x0
   233c8:	str	x0, [x19, #4912]
   233cc:	add	x9, x8, #0x20
   233d0:	add	x0, x20, x8
   233d4:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   233d8:	mov	w10, #0x107                 	// #263
   233dc:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   233e0:	add	x8, x8, #0xd60
   233e4:	movk	w10, #0x101, lsl #16
   233e8:	add	x11, x11, #0xc71
   233ec:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   233f0:	ldrb	w23, [x19, #777]
   233f4:	add	x8, x21, #0x2
   233f8:	ldrb	w22, [x19, #776]
   233fc:	str	x8, [x19]
   23400:	cmp	w23, #0x0
   23404:	cset	w8, ne  // ne = any
   23408:	cmp	x1, #0x0
   2340c:	cset	w9, ne  // ne = any
   23410:	mov	x20, x1
   23414:	orr	w8, w9, w8
   23418:	strb	wzr, [x19, #776]
   2341c:	strb	w8, [x19, #777]
   23420:	mov	x0, x19
   23424:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   23428:	mov	x21, x0
   2342c:	cbz	x0, 23bd0 <__cxa_demangle@@Base+0x113d8>
   23430:	cbz	x20, 2343c <__cxa_demangle@@Base+0x10c44>
   23434:	mov	w8, #0x1                   	// #1
   23438:	strb	w8, [x20]
   2343c:	ldr	x20, [x19, #4912]
   23440:	ldr	x8, [x20, #8]
   23444:	add	x9, x8, #0x20
   23448:	cmp	x9, #0xff0
   2344c:	b.cc	2346c <__cxa_demangle@@Base+0x10c74>  // b.lo, b.ul, b.last
   23450:	mov	w0, #0x1000                	// #4096
   23454:	bl	ec00 <malloc@plt>
   23458:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   2345c:	mov	x8, xzr
   23460:	stp	x20, xzr, [x0]
   23464:	mov	x20, x0
   23468:	str	x0, [x19, #4912]
   2346c:	add	x9, x8, #0x20
   23470:	add	x0, x20, x8
   23474:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   23478:	add	x8, x8, #0xa10
   2347c:	mov	w10, #0x104                 	// #260
   23480:	movk	w10, #0x101, lsl #16
   23484:	str	x9, [x20, #8]
   23488:	str	x8, [x0, #16]!
   2348c:	str	w10, [x0, #8]
   23490:	str	x21, [x0, #16]
   23494:	b	23bd4 <__cxa_demangle@@Base+0x113dc>
   23498:	ldr	x20, [x19, #4912]
   2349c:	add	x8, x21, #0x2
   234a0:	str	x8, [x19]
   234a4:	ldr	x8, [x20, #8]
   234a8:	add	x9, x8, #0x20
   234ac:	cmp	x9, #0xff0
   234b0:	b.cc	234d0 <__cxa_demangle@@Base+0x10cd8>  // b.lo, b.ul, b.last
   234b4:	mov	w0, #0x1000                	// #4096
   234b8:	bl	ec00 <malloc@plt>
   234bc:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   234c0:	mov	x8, xzr
   234c4:	stp	x20, xzr, [x0]
   234c8:	mov	x20, x0
   234cc:	str	x0, [x19, #4912]
   234d0:	add	x9, x8, #0x20
   234d4:	add	x0, x20, x8
   234d8:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   234dc:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   234e0:	add	x8, x8, #0xd60
   234e4:	mov	w10, #0x107                 	// #263
   234e8:	add	x11, x11, #0xc85
   234ec:	movk	w10, #0x101, lsl #16
   234f0:	str	x9, [x20, #8]
   234f4:	str	x8, [x0, #16]!
   234f8:	add	x8, x11, #0x11
   234fc:	b	23bb4 <__cxa_demangle@@Base+0x113bc>
   23500:	add	x8, x21, #0x2
   23504:	mov	x0, x19
   23508:	str	x8, [x19]
   2350c:	bl	2244c <__cxa_demangle@@Base+0xfc54>
   23510:	cbz	x0, 23bbc <__cxa_demangle@@Base+0x113c4>
   23514:	ldr	x21, [x19, #4912]
   23518:	mov	x20, x0
   2351c:	ldr	x8, [x21, #8]
   23520:	add	x9, x8, #0x20
   23524:	cmp	x9, #0xff0
   23528:	b.cc	23548 <__cxa_demangle@@Base+0x10d50>  // b.lo, b.ul, b.last
   2352c:	mov	w0, #0x1000                	// #4096
   23530:	bl	ec00 <malloc@plt>
   23534:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23538:	mov	x8, xzr
   2353c:	stp	x21, xzr, [x0]
   23540:	mov	x21, x0
   23544:	str	x0, [x19, #4912]
   23548:	add	x9, x8, #0x20
   2354c:	add	x0, x21, x8
   23550:	adrp	x8, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   23554:	mov	w10, #0x113                 	// #275
   23558:	add	x8, x8, #0xa80
   2355c:	b	22f88 <__cxa_demangle@@Base+0x10790>
   23560:	ldr	x20, [x19, #4912]
   23564:	add	x8, x21, #0x2
   23568:	str	x8, [x19]
   2356c:	ldr	x8, [x20, #8]
   23570:	add	x9, x8, #0x20
   23574:	cmp	x9, #0xff0
   23578:	b.cc	23598 <__cxa_demangle@@Base+0x10da0>  // b.lo, b.ul, b.last
   2357c:	mov	w0, #0x1000                	// #4096
   23580:	bl	ec00 <malloc@plt>
   23584:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23588:	mov	x8, xzr
   2358c:	stp	x20, xzr, [x0]
   23590:	mov	x20, x0
   23594:	str	x0, [x19, #4912]
   23598:	add	x9, x8, #0x20
   2359c:	add	x0, x20, x8
   235a0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   235a4:	mov	w10, #0x107                 	// #263
   235a8:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   235ac:	add	x8, x8, #0xd60
   235b0:	movk	w10, #0x101, lsl #16
   235b4:	add	x11, x11, #0xd47
   235b8:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   235bc:	ldr	x20, [x19, #4912]
   235c0:	add	x8, x21, #0x2
   235c4:	str	x8, [x19]
   235c8:	ldr	x8, [x20, #8]
   235cc:	add	x9, x8, #0x20
   235d0:	cmp	x9, #0xff0
   235d4:	b.cc	235f4 <__cxa_demangle@@Base+0x10dfc>  // b.lo, b.ul, b.last
   235d8:	mov	w0, #0x1000                	// #4096
   235dc:	bl	ec00 <malloc@plt>
   235e0:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   235e4:	mov	x8, xzr
   235e8:	stp	x20, xzr, [x0]
   235ec:	mov	x20, x0
   235f0:	str	x0, [x19, #4912]
   235f4:	add	x9, x8, #0x20
   235f8:	add	x0, x20, x8
   235fc:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23600:	mov	w10, #0x107                 	// #263
   23604:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23608:	add	x8, x8, #0xd60
   2360c:	movk	w10, #0x101, lsl #16
   23610:	add	x11, x11, #0xc3c
   23614:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   23618:	ldr	x20, [x19, #4912]
   2361c:	add	x8, x21, #0x2
   23620:	str	x8, [x19]
   23624:	ldr	x8, [x20, #8]
   23628:	add	x9, x8, #0x20
   2362c:	cmp	x9, #0xff0
   23630:	b.cc	23650 <__cxa_demangle@@Base+0x10e58>  // b.lo, b.ul, b.last
   23634:	mov	w0, #0x1000                	// #4096
   23638:	bl	ec00 <malloc@plt>
   2363c:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23640:	mov	x8, xzr
   23644:	stp	x20, xzr, [x0]
   23648:	mov	x20, x0
   2364c:	str	x0, [x19, #4912]
   23650:	add	x9, x8, #0x20
   23654:	add	x0, x20, x8
   23658:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   2365c:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23660:	add	x8, x8, #0xd60
   23664:	mov	w10, #0x107                 	// #263
   23668:	add	x11, x11, #0xca1
   2366c:	movk	w10, #0x101, lsl #16
   23670:	str	x9, [x20, #8]
   23674:	str	x8, [x0, #16]!
   23678:	add	x8, x11, #0xf
   2367c:	b	23bb4 <__cxa_demangle@@Base+0x113bc>
   23680:	ldr	x20, [x19, #4912]
   23684:	add	x8, x21, #0x2
   23688:	str	x8, [x19]
   2368c:	ldr	x8, [x20, #8]
   23690:	add	x9, x8, #0x20
   23694:	cmp	x9, #0xff0
   23698:	b.cc	236b8 <__cxa_demangle@@Base+0x10ec0>  // b.lo, b.ul, b.last
   2369c:	mov	w0, #0x1000                	// #4096
   236a0:	bl	ec00 <malloc@plt>
   236a4:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   236a8:	mov	x8, xzr
   236ac:	stp	x20, xzr, [x0]
   236b0:	mov	x20, x0
   236b4:	str	x0, [x19, #4912]
   236b8:	add	x9, x8, #0x20
   236bc:	add	x0, x20, x8
   236c0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   236c4:	mov	w10, #0x107                 	// #263
   236c8:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   236cc:	add	x8, x8, #0xd60
   236d0:	movk	w10, #0x101, lsl #16
   236d4:	add	x11, x11, #0xcb1
   236d8:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   236dc:	ldr	x20, [x19, #4912]
   236e0:	add	x8, x21, #0x2
   236e4:	str	x8, [x19]
   236e8:	ldr	x8, [x20, #8]
   236ec:	add	x9, x8, #0x20
   236f0:	cmp	x9, #0xff0
   236f4:	b.cc	23714 <__cxa_demangle@@Base+0x10f1c>  // b.lo, b.ul, b.last
   236f8:	mov	w0, #0x1000                	// #4096
   236fc:	bl	ec00 <malloc@plt>
   23700:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23704:	mov	x8, xzr
   23708:	stp	x20, xzr, [x0]
   2370c:	mov	x20, x0
   23710:	str	x0, [x19, #4912]
   23714:	add	x9, x8, #0x20
   23718:	add	x0, x20, x8
   2371c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23720:	mov	w10, #0x107                 	// #263
   23724:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23728:	add	x8, x8, #0xd60
   2372c:	movk	w10, #0x101, lsl #16
   23730:	add	x11, x11, #0xd06
   23734:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   23738:	ldr	x20, [x19, #4912]
   2373c:	add	x8, x21, #0x2
   23740:	str	x8, [x19]
   23744:	ldr	x8, [x20, #8]
   23748:	add	x9, x8, #0x20
   2374c:	cmp	x9, #0xff0
   23750:	b.cc	23770 <__cxa_demangle@@Base+0x10f78>  // b.lo, b.ul, b.last
   23754:	mov	w0, #0x1000                	// #4096
   23758:	bl	ec00 <malloc@plt>
   2375c:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23760:	mov	x8, xzr
   23764:	stp	x20, xzr, [x0]
   23768:	mov	x20, x0
   2376c:	str	x0, [x19, #4912]
   23770:	add	x9, x8, #0x20
   23774:	add	x0, x20, x8
   23778:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   2377c:	mov	w10, #0x107                 	// #263
   23780:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23784:	add	x8, x8, #0xd60
   23788:	movk	w10, #0x101, lsl #16
   2378c:	add	x11, x11, #0xd11
   23790:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   23794:	ldr	x20, [x19, #4912]
   23798:	add	x8, x21, #0x2
   2379c:	str	x8, [x19]
   237a0:	ldr	x8, [x20, #8]
   237a4:	add	x9, x8, #0x20
   237a8:	cmp	x9, #0xff0
   237ac:	b.cc	237cc <__cxa_demangle@@Base+0x10fd4>  // b.lo, b.ul, b.last
   237b0:	mov	w0, #0x1000                	// #4096
   237b4:	bl	ec00 <malloc@plt>
   237b8:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   237bc:	mov	x8, xzr
   237c0:	stp	x20, xzr, [x0]
   237c4:	mov	x20, x0
   237c8:	str	x0, [x19, #4912]
   237cc:	add	x9, x8, #0x20
   237d0:	add	x0, x20, x8
   237d4:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   237d8:	mov	w10, #0x107                 	// #263
   237dc:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   237e0:	add	x8, x8, #0xd60
   237e4:	movk	w10, #0x101, lsl #16
   237e8:	add	x11, x11, #0xd28
   237ec:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   237f0:	ldr	x20, [x19, #4912]
   237f4:	add	x8, x21, #0x2
   237f8:	str	x8, [x19]
   237fc:	ldr	x8, [x20, #8]
   23800:	add	x9, x8, #0x20
   23804:	cmp	x9, #0xff0
   23808:	b.cc	23828 <__cxa_demangle@@Base+0x11030>  // b.lo, b.ul, b.last
   2380c:	mov	w0, #0x1000                	// #4096
   23810:	bl	ec00 <malloc@plt>
   23814:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23818:	mov	x8, xzr
   2381c:	stp	x20, xzr, [x0]
   23820:	mov	x20, x0
   23824:	str	x0, [x19, #4912]
   23828:	add	x9, x8, #0x20
   2382c:	add	x0, x20, x8
   23830:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23834:	mov	w10, #0x107                 	// #263
   23838:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2383c:	add	x8, x8, #0xd60
   23840:	movk	w10, #0x101, lsl #16
   23844:	add	x11, x11, #0xd52
   23848:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   2384c:	ldr	x20, [x19, #4912]
   23850:	add	x8, x21, #0x2
   23854:	str	x8, [x19]
   23858:	ldr	x8, [x20, #8]
   2385c:	add	x9, x8, #0x20
   23860:	cmp	x9, #0xff0
   23864:	b.cc	23884 <__cxa_demangle@@Base+0x1108c>  // b.lo, b.ul, b.last
   23868:	mov	w0, #0x1000                	// #4096
   2386c:	bl	ec00 <malloc@plt>
   23870:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23874:	mov	x8, xzr
   23878:	stp	x20, xzr, [x0]
   2387c:	mov	x20, x0
   23880:	str	x0, [x19, #4912]
   23884:	add	x9, x8, #0x20
   23888:	add	x0, x20, x8
   2388c:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23890:	mov	w10, #0x107                 	// #263
   23894:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23898:	add	x8, x8, #0xd60
   2389c:	movk	w10, #0x101, lsl #16
   238a0:	add	x11, x11, #0xd6c
   238a4:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   238a8:	ldr	x20, [x19, #4912]
   238ac:	add	x8, x21, #0x2
   238b0:	str	x8, [x19]
   238b4:	ldr	x8, [x20, #8]
   238b8:	add	x9, x8, #0x20
   238bc:	cmp	x9, #0xff0
   238c0:	b.cc	238e0 <__cxa_demangle@@Base+0x110e8>  // b.lo, b.ul, b.last
   238c4:	mov	w0, #0x1000                	// #4096
   238c8:	bl	ec00 <malloc@plt>
   238cc:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   238d0:	mov	x8, xzr
   238d4:	stp	x20, xzr, [x0]
   238d8:	mov	x20, x0
   238dc:	str	x0, [x19, #4912]
   238e0:	add	x9, x8, #0x20
   238e4:	add	x0, x20, x8
   238e8:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   238ec:	mov	w10, #0x107                 	// #263
   238f0:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   238f4:	add	x8, x8, #0xd60
   238f8:	movk	w10, #0x101, lsl #16
   238fc:	add	x11, x11, #0xc51
   23900:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   23904:	ldr	x20, [x19, #4912]
   23908:	add	x8, x21, #0x2
   2390c:	str	x8, [x19]
   23910:	ldr	x8, [x20, #8]
   23914:	add	x9, x8, #0x20
   23918:	cmp	x9, #0xff0
   2391c:	b.cc	2393c <__cxa_demangle@@Base+0x11144>  // b.lo, b.ul, b.last
   23920:	mov	w0, #0x1000                	// #4096
   23924:	bl	ec00 <malloc@plt>
   23928:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   2392c:	mov	x8, xzr
   23930:	stp	x20, xzr, [x0]
   23934:	mov	x20, x0
   23938:	str	x0, [x19, #4912]
   2393c:	add	x9, x8, #0x20
   23940:	add	x0, x20, x8
   23944:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23948:	mov	w10, #0x107                 	// #263
   2394c:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23950:	add	x8, x8, #0xd60
   23954:	movk	w10, #0x101, lsl #16
   23958:	add	x11, x11, #0xc5c
   2395c:	b	239b8 <__cxa_demangle@@Base+0x111c0>
   23960:	ldr	x20, [x19, #4912]
   23964:	add	x8, x21, #0x2
   23968:	str	x8, [x19]
   2396c:	ldr	x8, [x20, #8]
   23970:	add	x9, x8, #0x20
   23974:	cmp	x9, #0xff0
   23978:	b.cc	23998 <__cxa_demangle@@Base+0x111a0>  // b.lo, b.ul, b.last
   2397c:	mov	w0, #0x1000                	// #4096
   23980:	bl	ec00 <malloc@plt>
   23984:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23988:	mov	x8, xzr
   2398c:	stp	x20, xzr, [x0]
   23990:	mov	x20, x0
   23994:	str	x0, [x19, #4912]
   23998:	add	x9, x8, #0x20
   2399c:	add	x0, x20, x8
   239a0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   239a4:	mov	w10, #0x107                 	// #263
   239a8:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   239ac:	add	x8, x8, #0xd60
   239b0:	movk	w10, #0x101, lsl #16
   239b4:	add	x11, x11, #0xd77
   239b8:	str	x9, [x20, #8]
   239bc:	str	x8, [x0, #16]!
   239c0:	add	x8, x11, #0x9
   239c4:	b	23bb4 <__cxa_demangle@@Base+0x113bc>
   239c8:	ldr	x20, [x19, #4912]
   239cc:	add	x8, x21, #0x2
   239d0:	str	x8, [x19]
   239d4:	ldr	x8, [x20, #8]
   239d8:	add	x9, x8, #0x20
   239dc:	cmp	x9, #0xff0
   239e0:	b.cc	23a00 <__cxa_demangle@@Base+0x11208>  // b.lo, b.ul, b.last
   239e4:	mov	w0, #0x1000                	// #4096
   239e8:	bl	ec00 <malloc@plt>
   239ec:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   239f0:	mov	x8, xzr
   239f4:	stp	x20, xzr, [x0]
   239f8:	mov	x20, x0
   239fc:	str	x0, [x19, #4912]
   23a00:	add	x9, x8, #0x20
   23a04:	add	x0, x20, x8
   23a08:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23a0c:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23a10:	add	x8, x8, #0xd60
   23a14:	mov	w10, #0x107                 	// #263
   23a18:	add	x11, x11, #0xd81
   23a1c:	movk	w10, #0x101, lsl #16
   23a20:	str	x9, [x20, #8]
   23a24:	str	x8, [x0, #16]!
   23a28:	add	x8, x11, #0xc
   23a2c:	b	23bb4 <__cxa_demangle@@Base+0x113bc>
   23a30:	ldr	x20, [x19, #4912]
   23a34:	add	x8, x21, #0x2
   23a38:	str	x8, [x19]
   23a3c:	ldr	x8, [x20, #8]
   23a40:	add	x9, x8, #0x20
   23a44:	cmp	x9, #0xff0
   23a48:	b.cc	23a68 <__cxa_demangle@@Base+0x11270>  // b.lo, b.ul, b.last
   23a4c:	mov	w0, #0x1000                	// #4096
   23a50:	bl	ec00 <malloc@plt>
   23a54:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23a58:	mov	x8, xzr
   23a5c:	stp	x20, xzr, [x0]
   23a60:	mov	x20, x0
   23a64:	str	x0, [x19, #4912]
   23a68:	add	x9, x8, #0x20
   23a6c:	add	x0, x20, x8
   23a70:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23a74:	mov	w10, #0x107                 	// #263
   23a78:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23a7c:	add	x8, x8, #0xd60
   23a80:	movk	w10, #0x101, lsl #16
   23a84:	add	x11, x11, #0xdc4
   23a88:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   23a8c:	ldr	x20, [x19, #4912]
   23a90:	add	x8, x21, #0x2
   23a94:	str	x8, [x19]
   23a98:	ldr	x8, [x20, #8]
   23a9c:	add	x9, x8, #0x20
   23aa0:	cmp	x9, #0xff0
   23aa4:	b.cc	23ac4 <__cxa_demangle@@Base+0x112cc>  // b.lo, b.ul, b.last
   23aa8:	mov	w0, #0x1000                	// #4096
   23aac:	bl	ec00 <malloc@plt>
   23ab0:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23ab4:	mov	x8, xzr
   23ab8:	stp	x20, xzr, [x0]
   23abc:	mov	x20, x0
   23ac0:	str	x0, [x19, #4912]
   23ac4:	add	x9, x8, #0x20
   23ac8:	add	x0, x20, x8
   23acc:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23ad0:	mov	w10, #0x107                 	// #263
   23ad4:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23ad8:	add	x8, x8, #0xd60
   23adc:	movk	w10, #0x101, lsl #16
   23ae0:	add	x11, x11, #0xdda
   23ae4:	b	23ba8 <__cxa_demangle@@Base+0x113b0>
   23ae8:	ldr	x20, [x19, #4912]
   23aec:	add	x8, x21, #0x2
   23af0:	str	x8, [x19]
   23af4:	ldr	x8, [x20, #8]
   23af8:	add	x9, x8, #0x20
   23afc:	cmp	x9, #0xff0
   23b00:	b.cc	23b20 <__cxa_demangle@@Base+0x11328>  // b.lo, b.ul, b.last
   23b04:	mov	w0, #0x1000                	// #4096
   23b08:	bl	ec00 <malloc@plt>
   23b0c:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23b10:	mov	x8, xzr
   23b14:	stp	x20, xzr, [x0]
   23b18:	mov	x20, x0
   23b1c:	str	x0, [x19, #4912]
   23b20:	add	x9, x8, #0x20
   23b24:	add	x0, x20, x8
   23b28:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23b2c:	mov	w10, #0x107                 	// #263
   23b30:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23b34:	add	x8, x8, #0xd60
   23b38:	movk	w10, #0x101, lsl #16
   23b3c:	add	x11, x11, #0xdae
   23b40:	str	x9, [x20, #8]
   23b44:	str	x8, [x0, #16]!
   23b48:	add	x8, x11, #0xb
   23b4c:	b	23bb4 <__cxa_demangle@@Base+0x113bc>
   23b50:	ldr	x20, [x19, #4912]
   23b54:	add	x8, x21, #0x2
   23b58:	str	x8, [x19]
   23b5c:	ldr	x8, [x20, #8]
   23b60:	add	x9, x8, #0x20
   23b64:	cmp	x9, #0xff0
   23b68:	b.cc	23b88 <__cxa_demangle@@Base+0x11390>  // b.lo, b.ul, b.last
   23b6c:	mov	w0, #0x1000                	// #4096
   23b70:	bl	ec00 <malloc@plt>
   23b74:	cbz	x0, 23be0 <__cxa_demangle@@Base+0x113e8>
   23b78:	mov	x8, xzr
   23b7c:	stp	x20, xzr, [x0]
   23b80:	mov	x20, x0
   23b84:	str	x0, [x19, #4912]
   23b88:	add	x9, x8, #0x20
   23b8c:	add	x0, x20, x8
   23b90:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   23b94:	mov	w10, #0x107                 	// #263
   23b98:	adrp	x11, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23b9c:	add	x8, x8, #0xd60
   23ba0:	movk	w10, #0x101, lsl #16
   23ba4:	add	x11, x11, #0xdcf
   23ba8:	str	x9, [x20, #8]
   23bac:	str	x8, [x0, #16]!
   23bb0:	add	x8, x11, #0xa
   23bb4:	str	w10, [x0, #8]
   23bb8:	stp	x11, x8, [x0, #16]
   23bbc:	ldp	x20, x19, [sp, #48]
   23bc0:	ldp	x22, x21, [sp, #32]
   23bc4:	ldr	x23, [sp, #16]
   23bc8:	ldp	x29, x30, [sp], #64
   23bcc:	ret
   23bd0:	mov	x0, xzr
   23bd4:	strb	w23, [x19, #777]
   23bd8:	strb	w22, [x19, #776]
   23bdc:	b	23bbc <__cxa_demangle@@Base+0x113c4>
   23be0:	bl	eeb0 <_ZSt9terminatev@plt>
   23be4:	strb	w23, [x19, #777]
   23be8:	strb	w22, [x19, #776]
   23bec:	bl	eea0 <_Unwind_Resume@plt>
   23bf0:	stp	x29, x30, [sp, #-32]!
   23bf4:	stp	x20, x19, [sp, #16]
   23bf8:	mov	x29, sp
   23bfc:	ldp	x8, x10, [x1, #8]
   23c00:	mov	x19, x1
   23c04:	mov	x20, x0
   23c08:	add	x9, x8, #0x1
   23c0c:	cmp	x9, x10
   23c10:	b.cs	23c1c <__cxa_demangle@@Base+0x11424>  // b.hs, b.nlast
   23c14:	ldr	x0, [x19]
   23c18:	b	23c40 <__cxa_demangle@@Base+0x11448>
   23c1c:	ldr	x0, [x19]
   23c20:	lsl	x8, x10, #1
   23c24:	cmp	x8, x9
   23c28:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   23c2c:	str	x1, [x19, #16]
   23c30:	bl	ecc0 <realloc@plt>
   23c34:	str	x0, [x19]
   23c38:	cbz	x0, 23c70 <__cxa_demangle@@Base+0x11478>
   23c3c:	ldr	x8, [x19, #8]
   23c40:	mov	w9, #0x7e                  	// #126
   23c44:	strb	w9, [x0, x8]
   23c48:	ldr	x8, [x19, #8]
   23c4c:	mov	x1, x19
   23c50:	add	x8, x8, #0x1
   23c54:	str	x8, [x19, #8]
   23c58:	ldr	x0, [x20, #16]
   23c5c:	ldp	x20, x19, [sp, #16]
   23c60:	ldr	x8, [x0]
   23c64:	ldr	x2, [x8, #32]
   23c68:	ldp	x29, x30, [sp], #32
   23c6c:	br	x2
   23c70:	bl	eeb0 <_ZSt9terminatev@plt>
   23c74:	b	eb20 <_ZdlPv@plt>
   23c78:	stp	x29, x30, [sp, #-32]!
   23c7c:	stp	x20, x19, [sp, #16]
   23c80:	mov	x29, sp
   23c84:	ldp	x8, x10, [x1, #8]
   23c88:	mov	x19, x1
   23c8c:	mov	x20, x0
   23c90:	add	x9, x8, #0x9
   23c94:	cmp	x9, x10
   23c98:	b.cs	23ca4 <__cxa_demangle@@Base+0x114ac>  // b.hs, b.nlast
   23c9c:	ldr	x0, [x19]
   23ca0:	b	23cc8 <__cxa_demangle@@Base+0x114d0>
   23ca4:	ldr	x0, [x19]
   23ca8:	lsl	x8, x10, #1
   23cac:	cmp	x8, x9
   23cb0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   23cb4:	str	x1, [x19, #16]
   23cb8:	bl	ecc0 <realloc@plt>
   23cbc:	str	x0, [x19]
   23cc0:	cbz	x0, 23d3c <__cxa_demangle@@Base+0x11544>
   23cc4:	ldr	x8, [x19, #8]
   23cc8:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23ccc:	add	x9, x9, #0xe3f
   23cd0:	ldr	x9, [x9]
   23cd4:	add	x8, x0, x8
   23cd8:	mov	w10, #0x20                  	// #32
   23cdc:	strb	w10, [x8, #8]
   23ce0:	str	x9, [x8]
   23ce4:	ldr	x8, [x19, #8]
   23ce8:	mov	x1, x19
   23cec:	add	x8, x8, #0x9
   23cf0:	str	x8, [x19, #8]
   23cf4:	ldr	x20, [x20, #16]
   23cf8:	ldr	x8, [x20]
   23cfc:	mov	x0, x20
   23d00:	ldr	x8, [x8, #32]
   23d04:	blr	x8
   23d08:	ldrb	w8, [x20, #9]
   23d0c:	cmp	w8, #0x1
   23d10:	b.ne	23d20 <__cxa_demangle@@Base+0x11528>  // b.any
   23d14:	ldp	x20, x19, [sp, #16]
   23d18:	ldp	x29, x30, [sp], #32
   23d1c:	ret
   23d20:	ldr	x8, [x20]
   23d24:	mov	x0, x20
   23d28:	mov	x1, x19
   23d2c:	ldp	x20, x19, [sp, #16]
   23d30:	ldr	x2, [x8, #40]
   23d34:	ldp	x29, x30, [sp], #32
   23d38:	br	x2
   23d3c:	bl	eeb0 <_ZSt9terminatev@plt>
   23d40:	b	eb20 <_ZdlPv@plt>
   23d44:	stp	x29, x30, [sp, #-32]!
   23d48:	stp	x20, x19, [sp, #16]
   23d4c:	mov	x29, sp
   23d50:	ldp	x8, x10, [x1, #8]
   23d54:	mov	x19, x1
   23d58:	mov	x20, x0
   23d5c:	add	x9, x8, #0xb
   23d60:	cmp	x9, x10
   23d64:	b.cs	23d70 <__cxa_demangle@@Base+0x11578>  // b.hs, b.nlast
   23d68:	ldr	x0, [x19]
   23d6c:	b	23d94 <__cxa_demangle@@Base+0x1159c>
   23d70:	ldr	x0, [x19]
   23d74:	lsl	x8, x10, #1
   23d78:	cmp	x8, x9
   23d7c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   23d80:	str	x1, [x19, #16]
   23d84:	bl	ecc0 <realloc@plt>
   23d88:	str	x0, [x19]
   23d8c:	cbz	x0, 23e0c <__cxa_demangle@@Base+0x11614>
   23d90:	ldr	x8, [x19, #8]
   23d94:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   23d98:	add	x9, x9, #0xe27
   23d9c:	ldr	x9, [x9]
   23da0:	mov	w10, #0x2272                	// #8818
   23da4:	add	x8, x0, x8
   23da8:	movk	w10, #0x2022, lsl #16
   23dac:	str	x9, [x8]
   23db0:	stur	w10, [x8, #7]
   23db4:	ldr	x8, [x19, #8]
   23db8:	mov	x1, x19
   23dbc:	add	x8, x8, #0xb
   23dc0:	str	x8, [x19, #8]
   23dc4:	ldr	x20, [x20, #16]
   23dc8:	ldr	x8, [x20]
   23dcc:	mov	x0, x20
   23dd0:	ldr	x8, [x8, #32]
   23dd4:	blr	x8
   23dd8:	ldrb	w8, [x20, #9]
   23ddc:	cmp	w8, #0x1
   23de0:	b.ne	23df0 <__cxa_demangle@@Base+0x115f8>  // b.any
   23de4:	ldp	x20, x19, [sp, #16]
   23de8:	ldp	x29, x30, [sp], #32
   23dec:	ret
   23df0:	ldr	x8, [x20]
   23df4:	mov	x0, x20
   23df8:	mov	x1, x19
   23dfc:	ldp	x20, x19, [sp, #16]
   23e00:	ldr	x2, [x8, #40]
   23e04:	ldp	x29, x30, [sp], #32
   23e08:	br	x2
   23e0c:	bl	eeb0 <_ZSt9terminatev@plt>
   23e10:	b	eb20 <_ZdlPv@plt>
   23e14:	stp	x29, x30, [sp, #-32]!
   23e18:	stp	x20, x19, [sp, #16]
   23e1c:	mov	x29, sp
   23e20:	ldp	x8, x10, [x1, #8]
   23e24:	mov	x19, x1
   23e28:	mov	x20, x0
   23e2c:	add	x9, x8, #0x2
   23e30:	cmp	x9, x10
   23e34:	b.cs	23e40 <__cxa_demangle@@Base+0x11648>  // b.hs, b.nlast
   23e38:	ldr	x0, [x19]
   23e3c:	b	23e64 <__cxa_demangle@@Base+0x1166c>
   23e40:	ldr	x0, [x19]
   23e44:	lsl	x8, x10, #1
   23e48:	cmp	x8, x9
   23e4c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   23e50:	str	x1, [x19, #16]
   23e54:	bl	ecc0 <realloc@plt>
   23e58:	str	x0, [x19]
   23e5c:	cbz	x0, 23ec4 <__cxa_demangle@@Base+0x116cc>
   23e60:	ldr	x8, [x19, #8]
   23e64:	mov	w9, #0x3a3a                	// #14906
   23e68:	strh	w9, [x0, x8]
   23e6c:	ldr	x8, [x19, #8]
   23e70:	mov	x1, x19
   23e74:	add	x8, x8, #0x2
   23e78:	str	x8, [x19, #8]
   23e7c:	ldr	x20, [x20, #16]
   23e80:	ldr	x8, [x20]
   23e84:	mov	x0, x20
   23e88:	ldr	x8, [x8, #32]
   23e8c:	blr	x8
   23e90:	ldrb	w8, [x20, #9]
   23e94:	cmp	w8, #0x1
   23e98:	b.ne	23ea8 <__cxa_demangle@@Base+0x116b0>  // b.any
   23e9c:	ldp	x20, x19, [sp, #16]
   23ea0:	ldp	x29, x30, [sp], #32
   23ea4:	ret
   23ea8:	ldr	x8, [x20]
   23eac:	mov	x0, x20
   23eb0:	mov	x1, x19
   23eb4:	ldp	x20, x19, [sp, #16]
   23eb8:	ldr	x2, [x8, #40]
   23ebc:	ldp	x29, x30, [sp], #32
   23ec0:	br	x2
   23ec4:	bl	eeb0 <_ZSt9terminatev@plt>
   23ec8:	ldr	x0, [x0, #16]
   23ecc:	ldr	x8, [x0]
   23ed0:	ldr	x1, [x8, #48]
   23ed4:	br	x1
   23ed8:	b	eb20 <_ZdlPv@plt>
   23edc:	stp	x29, x30, [sp, #-48]!
   23ee0:	stp	x22, x21, [sp, #16]
   23ee4:	stp	x20, x19, [sp, #32]
   23ee8:	mov	x29, sp
   23eec:	ldr	x21, [x0, #16]
   23ef0:	mov	x20, x0
   23ef4:	mov	x19, x1
   23ef8:	ldr	x8, [x21]
   23efc:	mov	x0, x21
   23f00:	ldr	x8, [x8, #32]
   23f04:	blr	x8
   23f08:	ldrb	w8, [x21, #9]
   23f0c:	cmp	w8, #0x1
   23f10:	b.eq	23f28 <__cxa_demangle@@Base+0x11730>  // b.none
   23f14:	ldr	x8, [x21]
   23f18:	mov	x0, x21
   23f1c:	mov	x1, x19
   23f20:	ldr	x8, [x8, #40]
   23f24:	blr	x8
   23f28:	ldp	x22, x8, [x20, #24]
   23f2c:	subs	x21, x8, x22
   23f30:	b.eq	23f8c <__cxa_demangle@@Base+0x11794>  // b.none
   23f34:	ldp	x8, x10, [x19, #8]
   23f38:	add	x9, x8, x21
   23f3c:	cmp	x9, x10
   23f40:	b.cs	23f4c <__cxa_demangle@@Base+0x11754>  // b.hs, b.nlast
   23f44:	ldr	x0, [x19]
   23f48:	b	23f70 <__cxa_demangle@@Base+0x11778>
   23f4c:	ldr	x0, [x19]
   23f50:	lsl	x8, x10, #1
   23f54:	cmp	x8, x9
   23f58:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   23f5c:	str	x1, [x19, #16]
   23f60:	bl	ecc0 <realloc@plt>
   23f64:	str	x0, [x19]
   23f68:	cbz	x0, 23fe0 <__cxa_demangle@@Base+0x117e8>
   23f6c:	ldr	x8, [x19, #8]
   23f70:	add	x0, x0, x8
   23f74:	mov	x1, x22
   23f78:	mov	x2, x21
   23f7c:	bl	eae0 <memmove@plt>
   23f80:	ldr	x8, [x19, #8]
   23f84:	add	x8, x8, x21
   23f88:	str	x8, [x19, #8]
   23f8c:	ldr	x20, [x20, #40]
   23f90:	mov	x1, x19
   23f94:	ldr	x8, [x20]
   23f98:	mov	x0, x20
   23f9c:	ldr	x8, [x8, #32]
   23fa0:	blr	x8
   23fa4:	ldrb	w8, [x20, #9]
   23fa8:	cmp	w8, #0x1
   23fac:	b.ne	23fc0 <__cxa_demangle@@Base+0x117c8>  // b.any
   23fb0:	ldp	x20, x19, [sp, #32]
   23fb4:	ldp	x22, x21, [sp, #16]
   23fb8:	ldp	x29, x30, [sp], #48
   23fbc:	ret
   23fc0:	ldr	x8, [x20]
   23fc4:	mov	x0, x20
   23fc8:	mov	x1, x19
   23fcc:	ldp	x20, x19, [sp, #32]
   23fd0:	ldr	x2, [x8, #40]
   23fd4:	ldp	x22, x21, [sp, #16]
   23fd8:	ldp	x29, x30, [sp], #48
   23fdc:	br	x2
   23fe0:	bl	eeb0 <_ZSt9terminatev@plt>
   23fe4:	b	eb20 <_ZdlPv@plt>
   23fe8:	stp	x29, x30, [sp, #-48]!
   23fec:	str	x21, [sp, #16]
   23ff0:	stp	x20, x19, [sp, #32]
   23ff4:	mov	x29, sp
   23ff8:	ldp	x8, x10, [x1, #8]
   23ffc:	mov	x19, x1
   24000:	mov	x20, x0
   24004:	add	x9, x8, #0x1
   24008:	cmp	x9, x10
   2400c:	b.cs	24018 <__cxa_demangle@@Base+0x11820>  // b.hs, b.nlast
   24010:	ldr	x0, [x19]
   24014:	b	2403c <__cxa_demangle@@Base+0x11844>
   24018:	ldr	x0, [x19]
   2401c:	lsl	x8, x10, #1
   24020:	cmp	x8, x9
   24024:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24028:	str	x1, [x19, #16]
   2402c:	bl	ecc0 <realloc@plt>
   24030:	str	x0, [x19]
   24034:	cbz	x0, 24170 <__cxa_demangle@@Base+0x11978>
   24038:	ldr	x8, [x19, #8]
   2403c:	mov	w9, #0x28                  	// #40
   24040:	strb	w9, [x0, x8]
   24044:	ldr	x8, [x19, #8]
   24048:	mov	x1, x19
   2404c:	add	x8, x8, #0x1
   24050:	str	x8, [x19, #8]
   24054:	ldr	x21, [x20, #16]
   24058:	ldr	x8, [x21]
   2405c:	mov	x0, x21
   24060:	ldr	x8, [x8, #32]
   24064:	blr	x8
   24068:	ldrb	w8, [x21, #9]
   2406c:	cmp	w8, #0x1
   24070:	b.eq	24088 <__cxa_demangle@@Base+0x11890>  // b.none
   24074:	ldr	x8, [x21]
   24078:	mov	x0, x21
   2407c:	mov	x1, x19
   24080:	ldr	x8, [x8, #40]
   24084:	blr	x8
   24088:	ldp	x8, x10, [x19, #8]
   2408c:	add	x9, x8, #0x2
   24090:	cmp	x9, x10
   24094:	b.cs	240a0 <__cxa_demangle@@Base+0x118a8>  // b.hs, b.nlast
   24098:	ldr	x0, [x19]
   2409c:	b	240c4 <__cxa_demangle@@Base+0x118cc>
   240a0:	ldr	x0, [x19]
   240a4:	lsl	x8, x10, #1
   240a8:	cmp	x8, x9
   240ac:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   240b0:	str	x1, [x19, #16]
   240b4:	bl	ecc0 <realloc@plt>
   240b8:	str	x0, [x19]
   240bc:	cbz	x0, 24170 <__cxa_demangle@@Base+0x11978>
   240c0:	ldr	x8, [x19, #8]
   240c4:	mov	w9, #0x5b29                	// #23337
   240c8:	strh	w9, [x0, x8]
   240cc:	ldr	x8, [x19, #8]
   240d0:	mov	x1, x19
   240d4:	add	x8, x8, #0x2
   240d8:	str	x8, [x19, #8]
   240dc:	ldr	x20, [x20, #24]
   240e0:	ldr	x8, [x20]
   240e4:	mov	x0, x20
   240e8:	ldr	x8, [x8, #32]
   240ec:	blr	x8
   240f0:	ldrb	w8, [x20, #9]
   240f4:	cmp	w8, #0x1
   240f8:	b.eq	24110 <__cxa_demangle@@Base+0x11918>  // b.none
   240fc:	ldr	x8, [x20]
   24100:	mov	x0, x20
   24104:	mov	x1, x19
   24108:	ldr	x8, [x8, #40]
   2410c:	blr	x8
   24110:	ldp	x8, x10, [x19, #8]
   24114:	add	x9, x8, #0x1
   24118:	cmp	x9, x10
   2411c:	b.cs	24128 <__cxa_demangle@@Base+0x11930>  // b.hs, b.nlast
   24120:	ldr	x0, [x19]
   24124:	b	2414c <__cxa_demangle@@Base+0x11954>
   24128:	ldr	x0, [x19]
   2412c:	lsl	x8, x10, #1
   24130:	cmp	x8, x9
   24134:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24138:	str	x1, [x19, #16]
   2413c:	bl	ecc0 <realloc@plt>
   24140:	str	x0, [x19]
   24144:	cbz	x0, 24170 <__cxa_demangle@@Base+0x11978>
   24148:	ldr	x8, [x19, #8]
   2414c:	mov	w9, #0x5d                  	// #93
   24150:	strb	w9, [x0, x8]
   24154:	ldr	x8, [x19, #8]
   24158:	ldr	x21, [sp, #16]
   2415c:	add	x8, x8, #0x1
   24160:	str	x8, [x19, #8]
   24164:	ldp	x20, x19, [sp, #32]
   24168:	ldp	x29, x30, [sp], #48
   2416c:	ret
   24170:	bl	eeb0 <_ZSt9terminatev@plt>
   24174:	b	eb20 <_ZdlPv@plt>
   24178:	stp	x29, x30, [sp, #-48]!
   2417c:	str	x21, [sp, #16]
   24180:	stp	x20, x19, [sp, #32]
   24184:	mov	x29, sp
   24188:	ldp	x8, x10, [x1, #8]
   2418c:	ldrb	w11, [x0, #32]
   24190:	mov	x19, x1
   24194:	mov	x20, x0
   24198:	add	x9, x8, #0x1
   2419c:	cmp	x9, x10
   241a0:	cbz	w11, 241b0 <__cxa_demangle@@Base+0x119b8>
   241a4:	b.cs	241bc <__cxa_demangle@@Base+0x119c4>  // b.hs, b.nlast
   241a8:	ldr	x0, [x19]
   241ac:	b	241e4 <__cxa_demangle@@Base+0x119ec>
   241b0:	b.cs	24278 <__cxa_demangle@@Base+0x11a80>  // b.hs, b.nlast
   241b4:	ldr	x0, [x19]
   241b8:	b	242a0 <__cxa_demangle@@Base+0x11aa8>
   241bc:	ldr	x0, [x19]
   241c0:	lsl	x8, x10, #1
   241c4:	cmp	x8, x9
   241c8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   241cc:	str	x1, [x19, #16]
   241d0:	bl	ecc0 <realloc@plt>
   241d4:	str	x0, [x19]
   241d8:	cbz	x0, 243a8 <__cxa_demangle@@Base+0x11bb0>
   241dc:	ldr	x8, [x19, #8]
   241e0:	add	x9, x8, #0x1
   241e4:	str	x9, [x19, #8]
   241e8:	mov	w9, #0x5b                  	// #91
   241ec:	strb	w9, [x0, x8]
   241f0:	ldr	x21, [x20, #16]
   241f4:	mov	x1, x19
   241f8:	ldr	x8, [x21]
   241fc:	mov	x0, x21
   24200:	ldr	x8, [x8, #32]
   24204:	blr	x8
   24208:	ldrb	w8, [x21, #9]
   2420c:	cmp	w8, #0x1
   24210:	b.eq	24228 <__cxa_demangle@@Base+0x11a30>  // b.none
   24214:	ldr	x8, [x21]
   24218:	mov	x0, x21
   2421c:	mov	x1, x19
   24220:	ldr	x8, [x8, #40]
   24224:	blr	x8
   24228:	ldp	x8, x10, [x19, #8]
   2422c:	add	x9, x8, #0x1
   24230:	cmp	x9, x10
   24234:	b.cs	24240 <__cxa_demangle@@Base+0x11a48>  // b.hs, b.nlast
   24238:	ldr	x0, [x19]
   2423c:	b	24268 <__cxa_demangle@@Base+0x11a70>
   24240:	ldr	x0, [x19]
   24244:	lsl	x8, x10, #1
   24248:	cmp	x8, x9
   2424c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24250:	str	x1, [x19, #16]
   24254:	bl	ecc0 <realloc@plt>
   24258:	str	x0, [x19]
   2425c:	cbz	x0, 243a8 <__cxa_demangle@@Base+0x11bb0>
   24260:	ldr	x8, [x19, #8]
   24264:	add	x9, x8, #0x1
   24268:	str	x9, [x19, #8]
   2426c:	mov	w9, #0x5d                  	// #93
   24270:	strb	w9, [x0, x8]
   24274:	b	242e4 <__cxa_demangle@@Base+0x11aec>
   24278:	ldr	x0, [x19]
   2427c:	lsl	x8, x10, #1
   24280:	cmp	x8, x9
   24284:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24288:	str	x1, [x19, #16]
   2428c:	bl	ecc0 <realloc@plt>
   24290:	str	x0, [x19]
   24294:	cbz	x0, 243a8 <__cxa_demangle@@Base+0x11bb0>
   24298:	ldr	x8, [x19, #8]
   2429c:	add	x9, x8, #0x1
   242a0:	str	x9, [x19, #8]
   242a4:	mov	w9, #0x2e                  	// #46
   242a8:	strb	w9, [x0, x8]
   242ac:	ldr	x21, [x20, #16]
   242b0:	mov	x1, x19
   242b4:	ldr	x8, [x21]
   242b8:	mov	x0, x21
   242bc:	ldr	x8, [x8, #32]
   242c0:	blr	x8
   242c4:	ldrb	w8, [x21, #9]
   242c8:	cmp	w8, #0x1
   242cc:	b.eq	242e4 <__cxa_demangle@@Base+0x11aec>  // b.none
   242d0:	ldr	x8, [x21]
   242d4:	mov	x0, x21
   242d8:	mov	x1, x19
   242dc:	ldr	x8, [x8, #40]
   242e0:	blr	x8
   242e4:	ldr	x21, [x20, #24]
   242e8:	ldrb	w8, [x21, #8]
   242ec:	sub	w8, w8, #0x49
   242f0:	cmp	w8, #0x2
   242f4:	b.cc	24358 <__cxa_demangle@@Base+0x11b60>  // b.lo, b.ul, b.last
   242f8:	ldp	x8, x10, [x19, #8]
   242fc:	add	x9, x8, #0x3
   24300:	cmp	x9, x10
   24304:	b.cs	24310 <__cxa_demangle@@Base+0x11b18>  // b.hs, b.nlast
   24308:	ldr	x0, [x19]
   2430c:	b	24334 <__cxa_demangle@@Base+0x11b3c>
   24310:	ldr	x0, [x19]
   24314:	lsl	x8, x10, #1
   24318:	cmp	x8, x9
   2431c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24320:	str	x1, [x19, #16]
   24324:	bl	ecc0 <realloc@plt>
   24328:	str	x0, [x19]
   2432c:	cbz	x0, 243a8 <__cxa_demangle@@Base+0x11bb0>
   24330:	ldr	x8, [x19, #8]
   24334:	add	x8, x0, x8
   24338:	mov	w9, #0x20                  	// #32
   2433c:	mov	w10, #0x3d20                	// #15648
   24340:	strb	w9, [x8, #2]
   24344:	strh	w10, [x8]
   24348:	ldr	x8, [x19, #8]
   2434c:	add	x8, x8, #0x3
   24350:	str	x8, [x19, #8]
   24354:	ldr	x21, [x20, #24]
   24358:	ldr	x8, [x21]
   2435c:	mov	x0, x21
   24360:	mov	x1, x19
   24364:	ldr	x8, [x8, #32]
   24368:	blr	x8
   2436c:	ldrb	w8, [x21, #9]
   24370:	cmp	w8, #0x1
   24374:	b.ne	24388 <__cxa_demangle@@Base+0x11b90>  // b.any
   24378:	ldp	x20, x19, [sp, #32]
   2437c:	ldr	x21, [sp, #16]
   24380:	ldp	x29, x30, [sp], #48
   24384:	ret
   24388:	ldr	x8, [x21]
   2438c:	mov	x0, x21
   24390:	mov	x1, x19
   24394:	ldp	x20, x19, [sp, #32]
   24398:	ldr	x2, [x8, #40]
   2439c:	ldr	x21, [sp, #16]
   243a0:	ldp	x29, x30, [sp], #48
   243a4:	br	x2
   243a8:	bl	eeb0 <_ZSt9terminatev@plt>
   243ac:	b	eb20 <_ZdlPv@plt>
   243b0:	stp	x29, x30, [sp, #-48]!
   243b4:	str	x21, [sp, #16]
   243b8:	stp	x20, x19, [sp, #32]
   243bc:	mov	x29, sp
   243c0:	ldp	x8, x10, [x1, #8]
   243c4:	mov	x19, x1
   243c8:	mov	x20, x0
   243cc:	add	x9, x8, #0x1
   243d0:	cmp	x9, x10
   243d4:	b.cs	243e0 <__cxa_demangle@@Base+0x11be8>  // b.hs, b.nlast
   243d8:	ldr	x0, [x19]
   243dc:	b	24408 <__cxa_demangle@@Base+0x11c10>
   243e0:	ldr	x0, [x19]
   243e4:	lsl	x8, x10, #1
   243e8:	cmp	x8, x9
   243ec:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   243f0:	str	x1, [x19, #16]
   243f4:	bl	ecc0 <realloc@plt>
   243f8:	str	x0, [x19]
   243fc:	cbz	x0, 245f4 <__cxa_demangle@@Base+0x11dfc>
   24400:	ldr	x8, [x19, #8]
   24404:	add	x9, x8, #0x1
   24408:	str	x9, [x19, #8]
   2440c:	mov	w9, #0x5b                  	// #91
   24410:	strb	w9, [x0, x8]
   24414:	ldr	x21, [x20, #16]
   24418:	mov	x1, x19
   2441c:	ldr	x8, [x21]
   24420:	mov	x0, x21
   24424:	ldr	x8, [x8, #32]
   24428:	blr	x8
   2442c:	ldrb	w8, [x21, #9]
   24430:	cmp	w8, #0x1
   24434:	b.eq	2444c <__cxa_demangle@@Base+0x11c54>  // b.none
   24438:	ldr	x8, [x21]
   2443c:	mov	x0, x21
   24440:	mov	x1, x19
   24444:	ldr	x8, [x8, #40]
   24448:	blr	x8
   2444c:	ldp	x8, x10, [x19, #8]
   24450:	add	x9, x8, #0x5
   24454:	cmp	x9, x10
   24458:	b.cs	24464 <__cxa_demangle@@Base+0x11c6c>  // b.hs, b.nlast
   2445c:	ldr	x0, [x19]
   24460:	b	24488 <__cxa_demangle@@Base+0x11c90>
   24464:	ldr	x0, [x19]
   24468:	lsl	x8, x10, #1
   2446c:	cmp	x8, x9
   24470:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24474:	str	x1, [x19, #16]
   24478:	bl	ecc0 <realloc@plt>
   2447c:	str	x0, [x19]
   24480:	cbz	x0, 245f4 <__cxa_demangle@@Base+0x11dfc>
   24484:	ldr	x8, [x19, #8]
   24488:	mov	w10, #0x2e20                	// #11808
   2448c:	add	x8, x0, x8
   24490:	mov	w9, #0x20                  	// #32
   24494:	movk	w10, #0x2e2e, lsl #16
   24498:	strb	w9, [x8, #4]
   2449c:	str	w10, [x8]
   244a0:	ldr	x8, [x19, #8]
   244a4:	mov	x1, x19
   244a8:	add	x8, x8, #0x5
   244ac:	str	x8, [x19, #8]
   244b0:	ldr	x21, [x20, #24]
   244b4:	ldr	x8, [x21]
   244b8:	mov	x0, x21
   244bc:	ldr	x8, [x8, #32]
   244c0:	blr	x8
   244c4:	ldrb	w8, [x21, #9]
   244c8:	cmp	w8, #0x1
   244cc:	b.eq	244e4 <__cxa_demangle@@Base+0x11cec>  // b.none
   244d0:	ldr	x8, [x21]
   244d4:	mov	x0, x21
   244d8:	mov	x1, x19
   244dc:	ldr	x8, [x8, #40]
   244e0:	blr	x8
   244e4:	ldp	x8, x10, [x19, #8]
   244e8:	add	x9, x8, #0x1
   244ec:	cmp	x9, x10
   244f0:	b.cs	244fc <__cxa_demangle@@Base+0x11d04>  // b.hs, b.nlast
   244f4:	ldr	x0, [x19]
   244f8:	b	24524 <__cxa_demangle@@Base+0x11d2c>
   244fc:	ldr	x0, [x19]
   24500:	lsl	x8, x10, #1
   24504:	cmp	x8, x9
   24508:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2450c:	str	x1, [x19, #16]
   24510:	bl	ecc0 <realloc@plt>
   24514:	str	x0, [x19]
   24518:	cbz	x0, 245f4 <__cxa_demangle@@Base+0x11dfc>
   2451c:	ldr	x8, [x19, #8]
   24520:	add	x9, x8, #0x1
   24524:	str	x9, [x19, #8]
   24528:	mov	w9, #0x5d                  	// #93
   2452c:	strb	w9, [x0, x8]
   24530:	ldr	x21, [x20, #32]
   24534:	ldrb	w8, [x21, #8]
   24538:	sub	w8, w8, #0x49
   2453c:	cmp	w8, #0x2
   24540:	b.cc	245a4 <__cxa_demangle@@Base+0x11dac>  // b.lo, b.ul, b.last
   24544:	ldp	x8, x10, [x19, #8]
   24548:	add	x9, x8, #0x3
   2454c:	cmp	x9, x10
   24550:	b.cs	2455c <__cxa_demangle@@Base+0x11d64>  // b.hs, b.nlast
   24554:	ldr	x0, [x19]
   24558:	b	24580 <__cxa_demangle@@Base+0x11d88>
   2455c:	ldr	x0, [x19]
   24560:	lsl	x8, x10, #1
   24564:	cmp	x8, x9
   24568:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2456c:	str	x1, [x19, #16]
   24570:	bl	ecc0 <realloc@plt>
   24574:	str	x0, [x19]
   24578:	cbz	x0, 245f4 <__cxa_demangle@@Base+0x11dfc>
   2457c:	ldr	x8, [x19, #8]
   24580:	add	x8, x0, x8
   24584:	mov	w9, #0x20                  	// #32
   24588:	mov	w10, #0x3d20                	// #15648
   2458c:	strb	w9, [x8, #2]
   24590:	strh	w10, [x8]
   24594:	ldr	x8, [x19, #8]
   24598:	add	x8, x8, #0x3
   2459c:	str	x8, [x19, #8]
   245a0:	ldr	x21, [x20, #32]
   245a4:	ldr	x8, [x21]
   245a8:	mov	x0, x21
   245ac:	mov	x1, x19
   245b0:	ldr	x8, [x8, #32]
   245b4:	blr	x8
   245b8:	ldrb	w8, [x21, #9]
   245bc:	cmp	w8, #0x1
   245c0:	b.ne	245d4 <__cxa_demangle@@Base+0x11ddc>  // b.any
   245c4:	ldp	x20, x19, [sp, #32]
   245c8:	ldr	x21, [sp, #16]
   245cc:	ldp	x29, x30, [sp], #48
   245d0:	ret
   245d4:	ldr	x8, [x21]
   245d8:	mov	x0, x21
   245dc:	mov	x1, x19
   245e0:	ldp	x20, x19, [sp, #32]
   245e4:	ldr	x2, [x8, #40]
   245e8:	ldr	x21, [sp, #16]
   245ec:	ldp	x29, x30, [sp], #48
   245f0:	br	x2
   245f4:	bl	eeb0 <_ZSt9terminatev@plt>
   245f8:	b	eb20 <_ZdlPv@plt>
   245fc:	stp	x29, x30, [sp, #-48]!
   24600:	str	x21, [sp, #16]
   24604:	stp	x20, x19, [sp, #32]
   24608:	mov	x29, sp
   2460c:	ldr	x21, [x0, #16]
   24610:	mov	x20, x0
   24614:	mov	x19, x1
   24618:	cbz	x21, 24650 <__cxa_demangle@@Base+0x11e58>
   2461c:	ldr	x8, [x21]
   24620:	mov	x0, x21
   24624:	mov	x1, x19
   24628:	ldr	x8, [x8, #32]
   2462c:	blr	x8
   24630:	ldrb	w8, [x21, #9]
   24634:	cmp	w8, #0x1
   24638:	b.eq	24650 <__cxa_demangle@@Base+0x11e58>  // b.none
   2463c:	ldr	x8, [x21]
   24640:	mov	x0, x21
   24644:	mov	x1, x19
   24648:	ldr	x8, [x8, #40]
   2464c:	blr	x8
   24650:	ldp	x8, x10, [x19, #8]
   24654:	add	x9, x8, #0x1
   24658:	cmp	x9, x10
   2465c:	b.cs	24668 <__cxa_demangle@@Base+0x11e70>  // b.hs, b.nlast
   24660:	ldr	x0, [x19]
   24664:	b	24690 <__cxa_demangle@@Base+0x11e98>
   24668:	ldr	x0, [x19]
   2466c:	lsl	x8, x10, #1
   24670:	cmp	x8, x9
   24674:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24678:	str	x1, [x19, #16]
   2467c:	bl	ecc0 <realloc@plt>
   24680:	str	x0, [x19]
   24684:	cbz	x0, 24704 <__cxa_demangle@@Base+0x11f0c>
   24688:	ldr	x8, [x19, #8]
   2468c:	add	x9, x8, #0x1
   24690:	str	x9, [x19, #8]
   24694:	mov	w9, #0x7b                  	// #123
   24698:	strb	w9, [x0, x8]
   2469c:	add	x0, x20, #0x18
   246a0:	mov	x1, x19
   246a4:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   246a8:	ldp	x8, x10, [x19, #8]
   246ac:	add	x9, x8, #0x1
   246b0:	cmp	x9, x10
   246b4:	b.cs	246c0 <__cxa_demangle@@Base+0x11ec8>  // b.hs, b.nlast
   246b8:	ldr	x0, [x19]
   246bc:	b	246e8 <__cxa_demangle@@Base+0x11ef0>
   246c0:	ldr	x0, [x19]
   246c4:	lsl	x8, x10, #1
   246c8:	cmp	x8, x9
   246cc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   246d0:	str	x1, [x19, #16]
   246d4:	bl	ecc0 <realloc@plt>
   246d8:	str	x0, [x19]
   246dc:	cbz	x0, 24704 <__cxa_demangle@@Base+0x11f0c>
   246e0:	ldr	x8, [x19, #8]
   246e4:	add	x9, x8, #0x1
   246e8:	str	x9, [x19, #8]
   246ec:	mov	w9, #0x7d                  	// #125
   246f0:	strb	w9, [x0, x8]
   246f4:	ldp	x20, x19, [sp, #32]
   246f8:	ldr	x21, [sp, #16]
   246fc:	ldp	x29, x30, [sp], #48
   24700:	ret
   24704:	bl	eeb0 <_ZSt9terminatev@plt>
   24708:	b	eb20 <_ZdlPv@plt>
   2470c:	stp	x29, x30, [sp, #-48]!
   24710:	str	x21, [sp, #16]
   24714:	stp	x20, x19, [sp, #32]
   24718:	mov	x29, sp
   2471c:	ldp	x8, x10, [x1, #8]
   24720:	mov	x19, x1
   24724:	mov	x20, x0
   24728:	add	x9, x8, #0x1
   2472c:	cmp	x9, x10
   24730:	b.cs	2473c <__cxa_demangle@@Base+0x11f44>  // b.hs, b.nlast
   24734:	ldr	x0, [x19]
   24738:	b	24760 <__cxa_demangle@@Base+0x11f68>
   2473c:	ldr	x0, [x19]
   24740:	lsl	x8, x10, #1
   24744:	cmp	x8, x9
   24748:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2474c:	str	x1, [x19, #16]
   24750:	bl	ecc0 <realloc@plt>
   24754:	str	x0, [x19]
   24758:	cbz	x0, 24870 <__cxa_demangle@@Base+0x12078>
   2475c:	ldr	x8, [x19, #8]
   24760:	mov	w9, #0x28                  	// #40
   24764:	strb	w9, [x0, x8]
   24768:	ldr	x8, [x19, #8]
   2476c:	mov	x1, x19
   24770:	add	x8, x8, #0x1
   24774:	str	x8, [x19, #8]
   24778:	ldr	x21, [x20, #16]
   2477c:	ldr	x8, [x21]
   24780:	mov	x0, x21
   24784:	ldr	x8, [x8, #32]
   24788:	blr	x8
   2478c:	ldrb	w8, [x21, #9]
   24790:	cmp	w8, #0x1
   24794:	b.eq	247ac <__cxa_demangle@@Base+0x11fb4>  // b.none
   24798:	ldr	x8, [x21]
   2479c:	mov	x0, x21
   247a0:	mov	x1, x19
   247a4:	ldr	x8, [x8, #40]
   247a8:	blr	x8
   247ac:	ldp	x8, x10, [x19, #8]
   247b0:	add	x9, x8, #0x1
   247b4:	cmp	x9, x10
   247b8:	b.cs	247c4 <__cxa_demangle@@Base+0x11fcc>  // b.hs, b.nlast
   247bc:	ldr	x0, [x19]
   247c0:	b	247e8 <__cxa_demangle@@Base+0x11ff0>
   247c4:	ldr	x0, [x19]
   247c8:	lsl	x8, x10, #1
   247cc:	cmp	x8, x9
   247d0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   247d4:	str	x1, [x19, #16]
   247d8:	bl	ecc0 <realloc@plt>
   247dc:	str	x0, [x19]
   247e0:	cbz	x0, 24870 <__cxa_demangle@@Base+0x12078>
   247e4:	ldr	x8, [x19, #8]
   247e8:	mov	w9, #0x29                  	// #41
   247ec:	strb	w9, [x0, x8]
   247f0:	ldr	x8, [x19, #8]
   247f4:	add	x8, x8, #0x1
   247f8:	str	x8, [x19, #8]
   247fc:	ldp	x21, x9, [x20, #24]
   24800:	subs	x20, x9, x21
   24804:	b.eq	24860 <__cxa_demangle@@Base+0x12068>  // b.none
   24808:	ldr	x10, [x19, #16]
   2480c:	add	x9, x8, x20
   24810:	cmp	x9, x10
   24814:	b.cs	24820 <__cxa_demangle@@Base+0x12028>  // b.hs, b.nlast
   24818:	ldr	x0, [x19]
   2481c:	b	24844 <__cxa_demangle@@Base+0x1204c>
   24820:	ldr	x0, [x19]
   24824:	lsl	x8, x10, #1
   24828:	cmp	x8, x9
   2482c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24830:	str	x1, [x19, #16]
   24834:	bl	ecc0 <realloc@plt>
   24838:	str	x0, [x19]
   2483c:	cbz	x0, 24870 <__cxa_demangle@@Base+0x12078>
   24840:	ldr	x8, [x19, #8]
   24844:	add	x0, x0, x8
   24848:	mov	x1, x21
   2484c:	mov	x2, x20
   24850:	bl	eae0 <memmove@plt>
   24854:	ldr	x8, [x19, #8]
   24858:	add	x8, x8, x20
   2485c:	str	x8, [x19, #8]
   24860:	ldp	x20, x19, [sp, #32]
   24864:	ldr	x21, [sp, #16]
   24868:	ldp	x29, x30, [sp], #48
   2486c:	ret
   24870:	bl	eeb0 <_ZSt9terminatev@plt>
   24874:	b	eb20 <_ZdlPv@plt>
   24878:	stp	x29, x30, [sp, #-48]!
   2487c:	str	x21, [sp, #16]
   24880:	stp	x20, x19, [sp, #32]
   24884:	mov	x29, sp
   24888:	ldrb	w9, [x0, #56]
   2488c:	ldr	x8, [x1, #8]
   24890:	mov	x19, x1
   24894:	mov	x20, x0
   24898:	cbz	w9, 24904 <__cxa_demangle@@Base+0x1210c>
   2489c:	ldr	x10, [x19, #16]
   248a0:	add	x9, x8, #0xb
   248a4:	cmp	x9, x10
   248a8:	b.cs	248b4 <__cxa_demangle@@Base+0x120bc>  // b.hs, b.nlast
   248ac:	ldr	x0, [x19]
   248b0:	b	248d8 <__cxa_demangle@@Base+0x120e0>
   248b4:	ldr	x0, [x19]
   248b8:	lsl	x8, x10, #1
   248bc:	cmp	x8, x9
   248c0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   248c4:	str	x1, [x19, #16]
   248c8:	bl	ecc0 <realloc@plt>
   248cc:	str	x0, [x19]
   248d0:	cbz	x0, 24bb4 <__cxa_demangle@@Base+0x123bc>
   248d4:	ldr	x8, [x19, #8]
   248d8:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   248dc:	add	x9, x9, #0xe3d
   248e0:	ldr	x9, [x9]
   248e4:	mov	w10, #0x6f74                	// #28532
   248e8:	add	x8, x0, x8
   248ec:	movk	w10, #0x2072, lsl #16
   248f0:	str	x9, [x8]
   248f4:	stur	w10, [x8, #7]
   248f8:	ldr	x8, [x19, #8]
   248fc:	add	x8, x8, #0xb
   24900:	str	x8, [x19, #8]
   24904:	ldr	x10, [x19, #16]
   24908:	add	x9, x8, #0x3
   2490c:	cmp	x9, x10
   24910:	b.cs	2491c <__cxa_demangle@@Base+0x12124>  // b.hs, b.nlast
   24914:	ldr	x0, [x19]
   24918:	b	24940 <__cxa_demangle@@Base+0x12148>
   2491c:	ldr	x0, [x19]
   24920:	lsl	x8, x10, #1
   24924:	cmp	x8, x9
   24928:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2492c:	str	x1, [x19, #16]
   24930:	bl	ecc0 <realloc@plt>
   24934:	str	x0, [x19]
   24938:	cbz	x0, 24bb4 <__cxa_demangle@@Base+0x123bc>
   2493c:	ldr	x8, [x19, #8]
   24940:	add	x8, x0, x8
   24944:	mov	w9, #0x77                  	// #119
   24948:	mov	w10, #0x656e                	// #25966
   2494c:	strb	w9, [x8, #2]
   24950:	strh	w10, [x8]
   24954:	ldr	x9, [x19, #8]
   24958:	add	x8, x9, #0x3
   2495c:	str	x8, [x19, #8]
   24960:	ldrb	w10, [x20, #57]
   24964:	cbz	w10, 249b8 <__cxa_demangle@@Base+0x121c0>
   24968:	ldr	x10, [x19, #16]
   2496c:	add	x9, x9, #0x5
   24970:	cmp	x9, x10
   24974:	b.cs	24980 <__cxa_demangle@@Base+0x12188>  // b.hs, b.nlast
   24978:	ldr	x0, [x19]
   2497c:	b	249a4 <__cxa_demangle@@Base+0x121ac>
   24980:	ldr	x0, [x19]
   24984:	lsl	x8, x10, #1
   24988:	cmp	x8, x9
   2498c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24990:	str	x1, [x19, #16]
   24994:	bl	ecc0 <realloc@plt>
   24998:	str	x0, [x19]
   2499c:	cbz	x0, 24bb4 <__cxa_demangle@@Base+0x123bc>
   249a0:	ldr	x8, [x19, #8]
   249a4:	mov	w9, #0x5d5b                	// #23899
   249a8:	strh	w9, [x0, x8]
   249ac:	ldr	x8, [x19, #8]
   249b0:	add	x8, x8, #0x2
   249b4:	str	x8, [x19, #8]
   249b8:	ldr	x10, [x19, #16]
   249bc:	add	x9, x8, #0x1
   249c0:	cmp	x9, x10
   249c4:	b.cs	249d0 <__cxa_demangle@@Base+0x121d8>  // b.hs, b.nlast
   249c8:	ldr	x0, [x19]
   249cc:	b	249f8 <__cxa_demangle@@Base+0x12200>
   249d0:	ldr	x0, [x19]
   249d4:	lsl	x8, x10, #1
   249d8:	cmp	x8, x9
   249dc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   249e0:	str	x1, [x19, #16]
   249e4:	bl	ecc0 <realloc@plt>
   249e8:	str	x0, [x19]
   249ec:	cbz	x0, 24bb4 <__cxa_demangle@@Base+0x123bc>
   249f0:	ldr	x8, [x19, #8]
   249f4:	add	x9, x8, #0x1
   249f8:	str	x9, [x19, #8]
   249fc:	mov	w9, #0x20                  	// #32
   24a00:	strb	w9, [x0, x8]
   24a04:	ldr	x8, [x20, #24]
   24a08:	cbz	x8, 24ab8 <__cxa_demangle@@Base+0x122c0>
   24a0c:	ldp	x8, x10, [x19, #8]
   24a10:	add	x9, x8, #0x1
   24a14:	cmp	x9, x10
   24a18:	b.cs	24a24 <__cxa_demangle@@Base+0x1222c>  // b.hs, b.nlast
   24a1c:	ldr	x0, [x19]
   24a20:	b	24a48 <__cxa_demangle@@Base+0x12250>
   24a24:	ldr	x0, [x19]
   24a28:	lsl	x8, x10, #1
   24a2c:	cmp	x8, x9
   24a30:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24a34:	str	x1, [x19, #16]
   24a38:	bl	ecc0 <realloc@plt>
   24a3c:	str	x0, [x19]
   24a40:	cbz	x0, 24bb4 <__cxa_demangle@@Base+0x123bc>
   24a44:	ldr	x8, [x19, #8]
   24a48:	mov	w9, #0x28                  	// #40
   24a4c:	strb	w9, [x0, x8]
   24a50:	ldr	x8, [x19, #8]
   24a54:	add	x0, x20, #0x10
   24a58:	mov	x1, x19
   24a5c:	add	x8, x8, #0x1
   24a60:	str	x8, [x19, #8]
   24a64:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   24a68:	ldp	x8, x10, [x19, #8]
   24a6c:	add	x9, x8, #0x1
   24a70:	cmp	x9, x10
   24a74:	b.cs	24a80 <__cxa_demangle@@Base+0x12288>  // b.hs, b.nlast
   24a78:	ldr	x0, [x19]
   24a7c:	b	24aa4 <__cxa_demangle@@Base+0x122ac>
   24a80:	ldr	x0, [x19]
   24a84:	lsl	x8, x10, #1
   24a88:	cmp	x8, x9
   24a8c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24a90:	str	x1, [x19, #16]
   24a94:	bl	ecc0 <realloc@plt>
   24a98:	str	x0, [x19]
   24a9c:	cbz	x0, 24bb4 <__cxa_demangle@@Base+0x123bc>
   24aa0:	ldr	x8, [x19, #8]
   24aa4:	mov	w9, #0x29                  	// #41
   24aa8:	strb	w9, [x0, x8]
   24aac:	ldr	x8, [x19, #8]
   24ab0:	add	x8, x8, #0x1
   24ab4:	str	x8, [x19, #8]
   24ab8:	ldr	x21, [x20, #32]
   24abc:	mov	x1, x19
   24ac0:	ldr	x8, [x21]
   24ac4:	mov	x0, x21
   24ac8:	ldr	x8, [x8, #32]
   24acc:	blr	x8
   24ad0:	ldrb	w8, [x21, #9]
   24ad4:	cmp	w8, #0x1
   24ad8:	b.eq	24af0 <__cxa_demangle@@Base+0x122f8>  // b.none
   24adc:	ldr	x8, [x21]
   24ae0:	mov	x0, x21
   24ae4:	mov	x1, x19
   24ae8:	ldr	x8, [x8, #40]
   24aec:	blr	x8
   24af0:	ldr	x8, [x20, #48]
   24af4:	cbz	x8, 24ba4 <__cxa_demangle@@Base+0x123ac>
   24af8:	ldp	x8, x10, [x19, #8]
   24afc:	add	x9, x8, #0x1
   24b00:	cmp	x9, x10
   24b04:	b.cs	24b10 <__cxa_demangle@@Base+0x12318>  // b.hs, b.nlast
   24b08:	ldr	x0, [x19]
   24b0c:	b	24b34 <__cxa_demangle@@Base+0x1233c>
   24b10:	ldr	x0, [x19]
   24b14:	lsl	x8, x10, #1
   24b18:	cmp	x8, x9
   24b1c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24b20:	str	x1, [x19, #16]
   24b24:	bl	ecc0 <realloc@plt>
   24b28:	str	x0, [x19]
   24b2c:	cbz	x0, 24bb4 <__cxa_demangle@@Base+0x123bc>
   24b30:	ldr	x8, [x19, #8]
   24b34:	mov	w9, #0x28                  	// #40
   24b38:	strb	w9, [x0, x8]
   24b3c:	ldr	x8, [x19, #8]
   24b40:	add	x0, x20, #0x28
   24b44:	mov	x1, x19
   24b48:	add	x8, x8, #0x1
   24b4c:	str	x8, [x19, #8]
   24b50:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   24b54:	ldp	x8, x10, [x19, #8]
   24b58:	add	x9, x8, #0x1
   24b5c:	cmp	x9, x10
   24b60:	b.cs	24b6c <__cxa_demangle@@Base+0x12374>  // b.hs, b.nlast
   24b64:	ldr	x0, [x19]
   24b68:	b	24b90 <__cxa_demangle@@Base+0x12398>
   24b6c:	ldr	x0, [x19]
   24b70:	lsl	x8, x10, #1
   24b74:	cmp	x8, x9
   24b78:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24b7c:	str	x1, [x19, #16]
   24b80:	bl	ecc0 <realloc@plt>
   24b84:	str	x0, [x19]
   24b88:	cbz	x0, 24bb4 <__cxa_demangle@@Base+0x123bc>
   24b8c:	ldr	x8, [x19, #8]
   24b90:	mov	w9, #0x29                  	// #41
   24b94:	strb	w9, [x0, x8]
   24b98:	ldr	x8, [x19, #8]
   24b9c:	add	x8, x8, #0x1
   24ba0:	str	x8, [x19, #8]
   24ba4:	ldp	x20, x19, [sp, #32]
   24ba8:	ldr	x21, [sp, #16]
   24bac:	ldp	x29, x30, [sp], #48
   24bb0:	ret
   24bb4:	bl	eeb0 <_ZSt9terminatev@plt>
   24bb8:	b	eb20 <_ZdlPv@plt>
   24bbc:	stp	x29, x30, [sp, #-48]!
   24bc0:	stp	x22, x21, [sp, #16]
   24bc4:	stp	x20, x19, [sp, #32]
   24bc8:	mov	x29, sp
   24bcc:	ldp	x22, x8, [x0, #16]
   24bd0:	mov	x20, x0
   24bd4:	mov	x19, x1
   24bd8:	subs	x21, x8, x22
   24bdc:	b.eq	24c38 <__cxa_demangle@@Base+0x12440>  // b.none
   24be0:	ldp	x8, x10, [x19, #8]
   24be4:	add	x9, x8, x21
   24be8:	cmp	x9, x10
   24bec:	b.cs	24bf8 <__cxa_demangle@@Base+0x12400>  // b.hs, b.nlast
   24bf0:	ldr	x0, [x19]
   24bf4:	b	24c1c <__cxa_demangle@@Base+0x12424>
   24bf8:	ldr	x0, [x19]
   24bfc:	lsl	x8, x10, #1
   24c00:	cmp	x8, x9
   24c04:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24c08:	str	x1, [x19, #16]
   24c0c:	bl	ecc0 <realloc@plt>
   24c10:	str	x0, [x19]
   24c14:	cbz	x0, 24ce4 <__cxa_demangle@@Base+0x124ec>
   24c18:	ldr	x8, [x19, #8]
   24c1c:	add	x0, x0, x8
   24c20:	mov	x1, x22
   24c24:	mov	x2, x21
   24c28:	bl	eae0 <memmove@plt>
   24c2c:	ldr	x8, [x19, #8]
   24c30:	add	x8, x8, x21
   24c34:	str	x8, [x19, #8]
   24c38:	ldr	x21, [x20, #32]
   24c3c:	mov	x1, x19
   24c40:	ldr	x8, [x21]
   24c44:	mov	x0, x21
   24c48:	ldr	x8, [x8, #32]
   24c4c:	blr	x8
   24c50:	ldrb	w8, [x21, #9]
   24c54:	cmp	w8, #0x1
   24c58:	b.eq	24c70 <__cxa_demangle@@Base+0x12478>  // b.none
   24c5c:	ldr	x8, [x21]
   24c60:	mov	x0, x21
   24c64:	mov	x1, x19
   24c68:	ldr	x8, [x8, #40]
   24c6c:	blr	x8
   24c70:	ldp	x21, x8, [x20, #40]
   24c74:	subs	x20, x8, x21
   24c78:	b.eq	24cd4 <__cxa_demangle@@Base+0x124dc>  // b.none
   24c7c:	ldp	x8, x10, [x19, #8]
   24c80:	add	x9, x8, x20
   24c84:	cmp	x9, x10
   24c88:	b.cs	24c94 <__cxa_demangle@@Base+0x1249c>  // b.hs, b.nlast
   24c8c:	ldr	x0, [x19]
   24c90:	b	24cb8 <__cxa_demangle@@Base+0x124c0>
   24c94:	ldr	x0, [x19]
   24c98:	lsl	x8, x10, #1
   24c9c:	cmp	x8, x9
   24ca0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24ca4:	str	x1, [x19, #16]
   24ca8:	bl	ecc0 <realloc@plt>
   24cac:	str	x0, [x19]
   24cb0:	cbz	x0, 24ce4 <__cxa_demangle@@Base+0x124ec>
   24cb4:	ldr	x8, [x19, #8]
   24cb8:	add	x0, x0, x8
   24cbc:	mov	x1, x21
   24cc0:	mov	x2, x20
   24cc4:	bl	eae0 <memmove@plt>
   24cc8:	ldr	x8, [x19, #8]
   24ccc:	add	x8, x8, x20
   24cd0:	str	x8, [x19, #8]
   24cd4:	ldp	x20, x19, [sp, #32]
   24cd8:	ldp	x22, x21, [sp, #16]
   24cdc:	ldp	x29, x30, [sp], #48
   24ce0:	ret
   24ce4:	bl	eeb0 <_ZSt9terminatev@plt>
   24ce8:	b	eb20 <_ZdlPv@plt>
   24cec:	stp	x29, x30, [sp, #-48]!
   24cf0:	str	x21, [sp, #16]
   24cf4:	stp	x20, x19, [sp, #32]
   24cf8:	mov	x29, sp
   24cfc:	ldp	x8, x10, [x1, #8]
   24d00:	mov	x19, x1
   24d04:	mov	x20, x0
   24d08:	add	x9, x8, #0x1
   24d0c:	cmp	x9, x10
   24d10:	b.cs	24d1c <__cxa_demangle@@Base+0x12524>  // b.hs, b.nlast
   24d14:	ldr	x0, [x19]
   24d18:	b	24d40 <__cxa_demangle@@Base+0x12548>
   24d1c:	ldr	x0, [x19]
   24d20:	lsl	x8, x10, #1
   24d24:	cmp	x8, x9
   24d28:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24d2c:	str	x1, [x19, #16]
   24d30:	bl	ecc0 <realloc@plt>
   24d34:	str	x0, [x19]
   24d38:	cbz	x0, 24f1c <__cxa_demangle@@Base+0x12724>
   24d3c:	ldr	x8, [x19, #8]
   24d40:	mov	w9, #0x28                  	// #40
   24d44:	strb	w9, [x0, x8]
   24d48:	ldr	x8, [x19, #8]
   24d4c:	mov	x1, x19
   24d50:	add	x8, x8, #0x1
   24d54:	str	x8, [x19, #8]
   24d58:	ldr	x21, [x20, #16]
   24d5c:	ldr	x8, [x21]
   24d60:	mov	x0, x21
   24d64:	ldr	x8, [x8, #32]
   24d68:	blr	x8
   24d6c:	ldrb	w8, [x21, #9]
   24d70:	cmp	w8, #0x1
   24d74:	b.eq	24d8c <__cxa_demangle@@Base+0x12594>  // b.none
   24d78:	ldr	x8, [x21]
   24d7c:	mov	x0, x21
   24d80:	mov	x1, x19
   24d84:	ldr	x8, [x8, #40]
   24d88:	blr	x8
   24d8c:	ldp	x8, x10, [x19, #8]
   24d90:	add	x9, x8, #0x5
   24d94:	cmp	x9, x10
   24d98:	b.cs	24da4 <__cxa_demangle@@Base+0x125ac>  // b.hs, b.nlast
   24d9c:	ldr	x0, [x19]
   24da0:	b	24dc8 <__cxa_demangle@@Base+0x125d0>
   24da4:	ldr	x0, [x19]
   24da8:	lsl	x8, x10, #1
   24dac:	cmp	x8, x9
   24db0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24db4:	str	x1, [x19, #16]
   24db8:	bl	ecc0 <realloc@plt>
   24dbc:	str	x0, [x19]
   24dc0:	cbz	x0, 24f1c <__cxa_demangle@@Base+0x12724>
   24dc4:	ldr	x8, [x19, #8]
   24dc8:	mov	w10, #0x2029                	// #8233
   24dcc:	add	x8, x0, x8
   24dd0:	mov	w9, #0x28                  	// #40
   24dd4:	movk	w10, #0x203f, lsl #16
   24dd8:	strb	w9, [x8, #4]
   24ddc:	str	w10, [x8]
   24de0:	ldr	x8, [x19, #8]
   24de4:	mov	x1, x19
   24de8:	add	x8, x8, #0x5
   24dec:	str	x8, [x19, #8]
   24df0:	ldr	x21, [x20, #24]
   24df4:	ldr	x8, [x21]
   24df8:	mov	x0, x21
   24dfc:	ldr	x8, [x8, #32]
   24e00:	blr	x8
   24e04:	ldrb	w8, [x21, #9]
   24e08:	cmp	w8, #0x1
   24e0c:	b.eq	24e24 <__cxa_demangle@@Base+0x1262c>  // b.none
   24e10:	ldr	x8, [x21]
   24e14:	mov	x0, x21
   24e18:	mov	x1, x19
   24e1c:	ldr	x8, [x8, #40]
   24e20:	blr	x8
   24e24:	ldp	x8, x10, [x19, #8]
   24e28:	add	x9, x8, #0x5
   24e2c:	cmp	x9, x10
   24e30:	b.cs	24e3c <__cxa_demangle@@Base+0x12644>  // b.hs, b.nlast
   24e34:	ldr	x0, [x19]
   24e38:	b	24e60 <__cxa_demangle@@Base+0x12668>
   24e3c:	ldr	x0, [x19]
   24e40:	lsl	x8, x10, #1
   24e44:	cmp	x8, x9
   24e48:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24e4c:	str	x1, [x19, #16]
   24e50:	bl	ecc0 <realloc@plt>
   24e54:	str	x0, [x19]
   24e58:	cbz	x0, 24f1c <__cxa_demangle@@Base+0x12724>
   24e5c:	ldr	x8, [x19, #8]
   24e60:	mov	w10, #0x2029                	// #8233
   24e64:	add	x8, x0, x8
   24e68:	mov	w9, #0x28                  	// #40
   24e6c:	movk	w10, #0x203a, lsl #16
   24e70:	strb	w9, [x8, #4]
   24e74:	str	w10, [x8]
   24e78:	ldr	x8, [x19, #8]
   24e7c:	mov	x1, x19
   24e80:	add	x8, x8, #0x5
   24e84:	str	x8, [x19, #8]
   24e88:	ldr	x20, [x20, #32]
   24e8c:	ldr	x8, [x20]
   24e90:	mov	x0, x20
   24e94:	ldr	x8, [x8, #32]
   24e98:	blr	x8
   24e9c:	ldrb	w8, [x20, #9]
   24ea0:	cmp	w8, #0x1
   24ea4:	b.eq	24ebc <__cxa_demangle@@Base+0x126c4>  // b.none
   24ea8:	ldr	x8, [x20]
   24eac:	mov	x0, x20
   24eb0:	mov	x1, x19
   24eb4:	ldr	x8, [x8, #40]
   24eb8:	blr	x8
   24ebc:	ldp	x8, x10, [x19, #8]
   24ec0:	add	x9, x8, #0x1
   24ec4:	cmp	x9, x10
   24ec8:	b.cs	24ed4 <__cxa_demangle@@Base+0x126dc>  // b.hs, b.nlast
   24ecc:	ldr	x0, [x19]
   24ed0:	b	24ef8 <__cxa_demangle@@Base+0x12700>
   24ed4:	ldr	x0, [x19]
   24ed8:	lsl	x8, x10, #1
   24edc:	cmp	x8, x9
   24ee0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24ee4:	str	x1, [x19, #16]
   24ee8:	bl	ecc0 <realloc@plt>
   24eec:	str	x0, [x19]
   24ef0:	cbz	x0, 24f1c <__cxa_demangle@@Base+0x12724>
   24ef4:	ldr	x8, [x19, #8]
   24ef8:	mov	w9, #0x29                  	// #41
   24efc:	strb	w9, [x0, x8]
   24f00:	ldr	x8, [x19, #8]
   24f04:	ldr	x21, [sp, #16]
   24f08:	add	x8, x8, #0x1
   24f0c:	str	x8, [x19, #8]
   24f10:	ldp	x20, x19, [sp, #32]
   24f14:	ldp	x29, x30, [sp], #48
   24f18:	ret
   24f1c:	bl	eeb0 <_ZSt9terminatev@plt>
   24f20:	b	eb20 <_ZdlPv@plt>
   24f24:	sub	sp, sp, #0x40
   24f28:	stp	x29, x30, [sp, #32]
   24f2c:	stp	x20, x19, [sp, #48]
   24f30:	add	x29, sp, #0x20
   24f34:	ldp	x8, x10, [x1, #8]
   24f38:	mov	x19, x1
   24f3c:	mov	x20, x0
   24f40:	add	x9, x8, #0xa
   24f44:	cmp	x9, x10
   24f48:	b.cs	24f54 <__cxa_demangle@@Base+0x1275c>  // b.hs, b.nlast
   24f4c:	ldr	x0, [x19]
   24f50:	b	24f78 <__cxa_demangle@@Base+0x12780>
   24f54:	ldr	x0, [x19]
   24f58:	lsl	x8, x10, #1
   24f5c:	cmp	x8, x9
   24f60:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24f64:	str	x1, [x19, #16]
   24f68:	bl	ecc0 <realloc@plt>
   24f6c:	str	x0, [x19]
   24f70:	cbz	x0, 2502c <__cxa_demangle@@Base+0x12834>
   24f74:	ldr	x8, [x19, #8]
   24f78:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   24f7c:	add	x9, x9, #0xe55
   24f80:	ldr	x9, [x9]
   24f84:	add	x8, x0, x8
   24f88:	mov	w10, #0x282e                	// #10286
   24f8c:	strh	w10, [x8, #8]
   24f90:	str	x9, [x8]
   24f94:	ldr	x8, [x19, #8]
   24f98:	mov	w9, #0x122                 	// #290
   24f9c:	movk	w9, #0x101, lsl #16
   24fa0:	add	x8, x8, #0xa
   24fa4:	str	x8, [x19, #8]
   24fa8:	ldr	x8, [x20, #16]
   24fac:	str	w9, [sp, #16]
   24fb0:	adrp	x9, 46000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x154f0>
   24fb4:	add	x9, x9, #0x620
   24fb8:	str	x9, [sp, #8]
   24fbc:	str	x8, [sp, #24]
   24fc0:	add	x0, sp, #0x8
   24fc4:	mov	x1, x19
   24fc8:	bl	213b0 <__cxa_demangle@@Base+0xebb8>
   24fcc:	ldp	x8, x10, [x19, #8]
   24fd0:	add	x9, x8, #0x1
   24fd4:	cmp	x9, x10
   24fd8:	b.cs	24fe4 <__cxa_demangle@@Base+0x127ec>  // b.hs, b.nlast
   24fdc:	ldr	x0, [x19]
   24fe0:	b	25008 <__cxa_demangle@@Base+0x12810>
   24fe4:	ldr	x0, [x19]
   24fe8:	lsl	x8, x10, #1
   24fec:	cmp	x8, x9
   24ff0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   24ff4:	str	x1, [x19, #16]
   24ff8:	bl	ecc0 <realloc@plt>
   24ffc:	str	x0, [x19]
   25000:	cbz	x0, 2502c <__cxa_demangle@@Base+0x12834>
   25004:	ldr	x8, [x19, #8]
   25008:	mov	w9, #0x29                  	// #41
   2500c:	strb	w9, [x0, x8]
   25010:	ldr	x8, [x19, #8]
   25014:	add	x8, x8, #0x1
   25018:	str	x8, [x19, #8]
   2501c:	ldp	x20, x19, [sp, #48]
   25020:	ldp	x29, x30, [sp, #32]
   25024:	add	sp, sp, #0x40
   25028:	ret
   2502c:	bl	eeb0 <_ZSt9terminatev@plt>
   25030:	bl	eea0 <_Unwind_Resume@plt>
   25034:	b	eb20 <_ZdlPv@plt>
   25038:	add	x0, x0, #0x10
   2503c:	b	20494 <__cxa_demangle@@Base+0xdc9c>
   25040:	b	eb20 <_ZdlPv@plt>
   25044:	stp	x29, x30, [sp, #-32]!
   25048:	stp	x20, x19, [sp, #16]
   2504c:	mov	x29, sp
   25050:	ldp	x8, x10, [x1, #8]
   25054:	mov	x19, x1
   25058:	mov	x20, x0
   2505c:	add	x9, x8, #0x6
   25060:	cmp	x9, x10
   25064:	b.cs	25070 <__cxa_demangle@@Base+0x12878>  // b.hs, b.nlast
   25068:	ldr	x0, [x19]
   2506c:	b	25094 <__cxa_demangle@@Base+0x1289c>
   25070:	ldr	x0, [x19]
   25074:	lsl	x8, x10, #1
   25078:	cmp	x8, x9
   2507c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25080:	str	x1, [x19, #16]
   25084:	bl	ecc0 <realloc@plt>
   25088:	str	x0, [x19]
   2508c:	cbz	x0, 25104 <__cxa_demangle@@Base+0x1290c>
   25090:	ldr	x8, [x19, #8]
   25094:	mov	w10, #0x6874                	// #26740
   25098:	add	x8, x0, x8
   2509c:	mov	w9, #0x2077                	// #8311
   250a0:	movk	w10, #0x6f72, lsl #16
   250a4:	strh	w9, [x8, #4]
   250a8:	str	w10, [x8]
   250ac:	ldr	x8, [x19, #8]
   250b0:	mov	x1, x19
   250b4:	add	x8, x8, #0x6
   250b8:	str	x8, [x19, #8]
   250bc:	ldr	x20, [x20, #16]
   250c0:	ldr	x8, [x20]
   250c4:	mov	x0, x20
   250c8:	ldr	x8, [x8, #32]
   250cc:	blr	x8
   250d0:	ldrb	w8, [x20, #9]
   250d4:	cmp	w8, #0x1
   250d8:	b.ne	250e8 <__cxa_demangle@@Base+0x128f0>  // b.any
   250dc:	ldp	x20, x19, [sp, #16]
   250e0:	ldp	x29, x30, [sp], #32
   250e4:	ret
   250e8:	ldr	x8, [x20]
   250ec:	mov	x0, x20
   250f0:	mov	x1, x19
   250f4:	ldp	x20, x19, [sp, #16]
   250f8:	ldr	x2, [x8, #40]
   250fc:	ldp	x29, x30, [sp], #32
   25100:	br	x2
   25104:	bl	eeb0 <_ZSt9terminatev@plt>
   25108:	b	eb20 <_ZdlPv@plt>
   2510c:	stp	x29, x30, [sp, #-32]!
   25110:	stp	x20, x19, [sp, #16]
   25114:	mov	x29, sp
   25118:	ldp	x8, x10, [x1, #8]
   2511c:	mov	x19, x1
   25120:	mov	x20, x0
   25124:	add	x9, x8, #0x9
   25128:	cmp	x9, x10
   2512c:	b.cs	25138 <__cxa_demangle@@Base+0x12940>  // b.hs, b.nlast
   25130:	ldr	x0, [x19]
   25134:	b	2515c <__cxa_demangle@@Base+0x12964>
   25138:	ldr	x0, [x19]
   2513c:	lsl	x8, x10, #1
   25140:	cmp	x8, x9
   25144:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25148:	str	x1, [x19, #16]
   2514c:	bl	ecc0 <realloc@plt>
   25150:	str	x0, [x19]
   25154:	cbz	x0, 25218 <__cxa_demangle@@Base+0x12a20>
   25158:	ldr	x8, [x19, #8]
   2515c:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25160:	add	x9, x9, #0xe67
   25164:	ldr	x9, [x9]
   25168:	add	x8, x0, x8
   2516c:	mov	w10, #0x28                  	// #40
   25170:	strb	w10, [x8, #8]
   25174:	str	x9, [x8]
   25178:	ldr	x8, [x19, #8]
   2517c:	mov	x1, x19
   25180:	add	x8, x8, #0x9
   25184:	str	x8, [x19, #8]
   25188:	ldr	x20, [x20, #16]
   2518c:	ldr	x8, [x20]
   25190:	mov	x0, x20
   25194:	ldr	x8, [x8, #32]
   25198:	blr	x8
   2519c:	ldrb	w8, [x20, #9]
   251a0:	cmp	w8, #0x1
   251a4:	b.eq	251bc <__cxa_demangle@@Base+0x129c4>  // b.none
   251a8:	ldr	x8, [x20]
   251ac:	mov	x0, x20
   251b0:	mov	x1, x19
   251b4:	ldr	x8, [x8, #40]
   251b8:	blr	x8
   251bc:	ldp	x8, x10, [x19, #8]
   251c0:	add	x9, x8, #0x1
   251c4:	cmp	x9, x10
   251c8:	b.cs	251d4 <__cxa_demangle@@Base+0x129dc>  // b.hs, b.nlast
   251cc:	ldr	x0, [x19]
   251d0:	b	251f8 <__cxa_demangle@@Base+0x12a00>
   251d4:	ldr	x0, [x19]
   251d8:	lsl	x8, x10, #1
   251dc:	cmp	x8, x9
   251e0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   251e4:	str	x1, [x19, #16]
   251e8:	bl	ecc0 <realloc@plt>
   251ec:	str	x0, [x19]
   251f0:	cbz	x0, 25218 <__cxa_demangle@@Base+0x12a20>
   251f4:	ldr	x8, [x19, #8]
   251f8:	mov	w9, #0x29                  	// #41
   251fc:	strb	w9, [x0, x8]
   25200:	ldr	x8, [x19, #8]
   25204:	add	x8, x8, #0x1
   25208:	str	x8, [x19, #8]
   2520c:	ldp	x20, x19, [sp, #16]
   25210:	ldp	x29, x30, [sp], #32
   25214:	ret
   25218:	bl	eeb0 <_ZSt9terminatev@plt>
   2521c:	b	eb20 <_ZdlPv@plt>
   25220:	stp	x29, x30, [sp, #-32]!
   25224:	stp	x20, x19, [sp, #16]
   25228:	mov	x29, sp
   2522c:	ldr	w8, [x0, #12]
   25230:	cmp	w8, #0x5
   25234:	b.hi	254d0 <__cxa_demangle@@Base+0x12cd8>  // b.pmore
   25238:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   2523c:	add	x9, x9, #0xccc
   25240:	adr	x10, 25254 <__cxa_demangle@@Base+0x12a5c>
   25244:	ldrb	w11, [x9, x8]
   25248:	add	x10, x10, x11, lsl #2
   2524c:	mov	x19, x1
   25250:	br	x10
   25254:	mov	x20, x19
   25258:	ldr	x8, [x20, #8]!
   2525c:	ldr	x10, [x20, #8]
   25260:	add	x9, x8, #0xe
   25264:	cmp	x9, x10
   25268:	b.cs	253e8 <__cxa_demangle@@Base+0x12bf0>  // b.hs, b.nlast
   2526c:	ldr	x0, [x19]
   25270:	b	2540c <__cxa_demangle@@Base+0x12c14>
   25274:	mov	x20, x19
   25278:	ldr	x8, [x20, #8]!
   2527c:	ldr	x10, [x20, #8]
   25280:	add	x9, x8, #0x31
   25284:	cmp	x9, x10
   25288:	b.cs	25314 <__cxa_demangle@@Base+0x12b1c>  // b.hs, b.nlast
   2528c:	ldr	x0, [x19]
   25290:	b	25338 <__cxa_demangle@@Base+0x12b40>
   25294:	mov	x20, x19
   25298:	ldr	x8, [x20, #8]!
   2529c:	ldr	x10, [x20, #8]
   252a0:	add	x9, x8, #0x46
   252a4:	cmp	x9, x10
   252a8:	b.cs	25348 <__cxa_demangle@@Base+0x12b50>  // b.hs, b.nlast
   252ac:	ldr	x0, [x19]
   252b0:	b	2536c <__cxa_demangle@@Base+0x12b74>
   252b4:	mov	x20, x19
   252b8:	ldr	x8, [x20, #8]!
   252bc:	ldr	x10, [x20, #8]
   252c0:	add	x9, x8, #0x31
   252c4:	cmp	x9, x10
   252c8:	b.cs	25398 <__cxa_demangle@@Base+0x12ba0>  // b.hs, b.nlast
   252cc:	ldr	x0, [x19]
   252d0:	b	253bc <__cxa_demangle@@Base+0x12bc4>
   252d4:	mov	x20, x19
   252d8:	ldr	x8, [x20, #8]!
   252dc:	ldr	x10, [x20, #8]
   252e0:	add	x9, x8, #0x11
   252e4:	cmp	x9, x10
   252e8:	b.cs	25430 <__cxa_demangle@@Base+0x12c38>  // b.hs, b.nlast
   252ec:	ldr	x0, [x19]
   252f0:	b	25454 <__cxa_demangle@@Base+0x12c5c>
   252f4:	mov	x20, x19
   252f8:	ldr	x8, [x20, #8]!
   252fc:	ldr	x10, [x20, #8]
   25300:	add	x9, x8, #0x32
   25304:	cmp	x9, x10
   25308:	b.cs	25478 <__cxa_demangle@@Base+0x12c80>  // b.hs, b.nlast
   2530c:	ldr	x0, [x19]
   25310:	b	2549c <__cxa_demangle@@Base+0x12ca4>
   25314:	ldr	x0, [x19]
   25318:	lsl	x8, x10, #1
   2531c:	cmp	x8, x9
   25320:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25324:	str	x1, [x19, #16]
   25328:	bl	ecc0 <realloc@plt>
   2532c:	str	x0, [x19]
   25330:	cbz	x0, 254dc <__cxa_demangle@@Base+0x12ce4>
   25334:	ldr	x8, [x20]
   25338:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2533c:	add	x8, x0, x8
   25340:	add	x9, x9, #0xf0b
   25344:	b	253c8 <__cxa_demangle@@Base+0x12bd0>
   25348:	ldr	x0, [x19]
   2534c:	lsl	x8, x10, #1
   25350:	cmp	x8, x9
   25354:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25358:	str	x1, [x19, #16]
   2535c:	bl	ecc0 <realloc@plt>
   25360:	str	x0, [x19]
   25364:	cbz	x0, 254dc <__cxa_demangle@@Base+0x12ce4>
   25368:	ldr	x8, [x20]
   2536c:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25370:	add	x9, x9, #0xe92
   25374:	ldp	q0, q3, [x9]
   25378:	ldur	x10, [x9, #62]
   2537c:	ldp	q1, q2, [x9, #32]
   25380:	add	x8, x0, x8
   25384:	stp	q0, q3, [x8]
   25388:	stur	x10, [x8, #62]
   2538c:	stp	q1, q2, [x8, #32]
   25390:	mov	w8, #0x46                  	// #70
   25394:	b	254c4 <__cxa_demangle@@Base+0x12ccc>
   25398:	ldr	x0, [x19]
   2539c:	lsl	x8, x10, #1
   253a0:	cmp	x8, x9
   253a4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   253a8:	str	x1, [x19, #16]
   253ac:	bl	ecc0 <realloc@plt>
   253b0:	str	x0, [x19]
   253b4:	cbz	x0, 254dc <__cxa_demangle@@Base+0x12ce4>
   253b8:	ldr	x8, [x20]
   253bc:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   253c0:	add	x8, x0, x8
   253c4:	add	x9, x9, #0xed9
   253c8:	ldp	q2, q0, [x9, #16]
   253cc:	ldr	q1, [x9]
   253d0:	mov	w9, #0x3e                  	// #62
   253d4:	strb	w9, [x8, #48]
   253d8:	stp	q2, q0, [x8, #16]
   253dc:	str	q1, [x8]
   253e0:	mov	w8, #0x31                  	// #49
   253e4:	b	254c4 <__cxa_demangle@@Base+0x12ccc>
   253e8:	ldr	x0, [x19]
   253ec:	lsl	x8, x10, #1
   253f0:	cmp	x8, x9
   253f4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   253f8:	str	x1, [x19, #16]
   253fc:	bl	ecc0 <realloc@plt>
   25400:	str	x0, [x19]
   25404:	cbz	x0, 254dc <__cxa_demangle@@Base+0x12ce4>
   25408:	ldr	x8, [x20]
   2540c:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25410:	add	x9, x9, #0xe71
   25414:	ldur	x10, [x9, #6]
   25418:	ldr	x9, [x9]
   2541c:	add	x8, x0, x8
   25420:	stur	x10, [x8, #6]
   25424:	str	x9, [x8]
   25428:	mov	w8, #0xe                   	// #14
   2542c:	b	254c4 <__cxa_demangle@@Base+0x12ccc>
   25430:	ldr	x0, [x19]
   25434:	lsl	x8, x10, #1
   25438:	cmp	x8, x9
   2543c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25440:	str	x1, [x19, #16]
   25444:	bl	ecc0 <realloc@plt>
   25448:	str	x0, [x19]
   2544c:	cbz	x0, 254dc <__cxa_demangle@@Base+0x12ce4>
   25450:	ldr	x8, [x20]
   25454:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25458:	add	x9, x9, #0xe80
   2545c:	ldr	q0, [x9]
   25460:	add	x8, x0, x8
   25464:	mov	w9, #0x67                  	// #103
   25468:	strb	w9, [x8, #16]
   2546c:	str	q0, [x8]
   25470:	mov	w8, #0x11                  	// #17
   25474:	b	254c4 <__cxa_demangle@@Base+0x12ccc>
   25478:	ldr	x0, [x19]
   2547c:	lsl	x8, x10, #1
   25480:	cmp	x8, x9
   25484:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25488:	str	x1, [x19, #16]
   2548c:	bl	ecc0 <realloc@plt>
   25490:	str	x0, [x19]
   25494:	cbz	x0, 254dc <__cxa_demangle@@Base+0x12ce4>
   25498:	ldr	x8, [x20]
   2549c:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   254a0:	add	x9, x9, #0xf3d
   254a4:	ldp	q2, q0, [x9, #16]
   254a8:	ldr	q1, [x9]
   254ac:	add	x8, x0, x8
   254b0:	mov	w9, #0x3e20                	// #15904
   254b4:	strh	w9, [x8, #48]
   254b8:	stp	q2, q0, [x8, #16]
   254bc:	str	q1, [x8]
   254c0:	mov	w8, #0x32                  	// #50
   254c4:	ldr	x9, [x20]
   254c8:	add	x8, x9, x8
   254cc:	str	x8, [x20]
   254d0:	ldp	x20, x19, [sp, #16]
   254d4:	ldp	x29, x30, [sp], #32
   254d8:	ret
   254dc:	bl	eeb0 <_ZSt9terminatev@plt>
   254e0:	ldr	w8, [x0, #12]
   254e4:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   254e8:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   254ec:	add	x9, x9, #0xcd2
   254f0:	add	x0, x0, #0x152
   254f4:	adr	x10, 25508 <__cxa_demangle@@Base+0x12d10>
   254f8:	ldrb	w11, [x9, x8]
   254fc:	add	x10, x10, x11, lsl #2
   25500:	add	x1, x0, #0x9
   25504:	br	x10
   25508:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2550c:	add	x0, x0, #0x16c
   25510:	add	x1, x0, #0xc
   25514:	ret
   25518:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2551c:	add	x0, x0, #0xf70
   25520:	add	x1, x0, #0xd
   25524:	ret
   25528:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2552c:	add	x0, x0, #0xf7e
   25530:	add	x1, x0, #0xd
   25534:	ret
   25538:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   2553c:	add	x0, x0, #0xf8c
   25540:	add	x1, x0, #0xe
   25544:	ret
   25548:	b	eb20 <_ZdlPv@plt>
   2554c:	stp	x29, x30, [sp, #-48]!
   25550:	str	x21, [sp, #16]
   25554:	stp	x20, x19, [sp, #32]
   25558:	mov	x29, sp
   2555c:	ldrb	w8, [x0, #24]
   25560:	mov	x20, x0
   25564:	mov	x19, x1
   25568:	cbz	w8, 255bc <__cxa_demangle@@Base+0x12dc4>
   2556c:	ldp	x8, x10, [x19, #8]
   25570:	add	x9, x8, #0x1
   25574:	cmp	x9, x10
   25578:	b.cs	25584 <__cxa_demangle@@Base+0x12d8c>  // b.hs, b.nlast
   2557c:	ldr	x0, [x19]
   25580:	b	255a8 <__cxa_demangle@@Base+0x12db0>
   25584:	ldr	x0, [x19]
   25588:	lsl	x8, x10, #1
   2558c:	cmp	x8, x9
   25590:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25594:	str	x1, [x19, #16]
   25598:	bl	ecc0 <realloc@plt>
   2559c:	str	x0, [x19]
   255a0:	cbz	x0, 25640 <__cxa_demangle@@Base+0x12e48>
   255a4:	ldr	x8, [x19, #8]
   255a8:	mov	w9, #0x7e                  	// #126
   255ac:	strb	w9, [x0, x8]
   255b0:	ldr	x8, [x19, #8]
   255b4:	add	x8, x8, #0x1
   255b8:	str	x8, [x19, #8]
   255bc:	ldr	x0, [x20, #16]
   255c0:	ldr	x8, [x0]
   255c4:	ldr	x8, [x8, #48]
   255c8:	blr	x8
   255cc:	subs	x20, x1, x0
   255d0:	b.eq	25630 <__cxa_demangle@@Base+0x12e38>  // b.none
   255d4:	ldp	x8, x10, [x19, #8]
   255d8:	mov	x21, x0
   255dc:	add	x9, x8, x20
   255e0:	cmp	x9, x10
   255e4:	b.cs	255f0 <__cxa_demangle@@Base+0x12df8>  // b.hs, b.nlast
   255e8:	ldr	x0, [x19]
   255ec:	b	25614 <__cxa_demangle@@Base+0x12e1c>
   255f0:	ldr	x0, [x19]
   255f4:	lsl	x8, x10, #1
   255f8:	cmp	x8, x9
   255fc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25600:	str	x1, [x19, #16]
   25604:	bl	ecc0 <realloc@plt>
   25608:	str	x0, [x19]
   2560c:	cbz	x0, 25640 <__cxa_demangle@@Base+0x12e48>
   25610:	ldr	x8, [x19, #8]
   25614:	add	x0, x0, x8
   25618:	mov	x1, x21
   2561c:	mov	x2, x20
   25620:	bl	eae0 <memmove@plt>
   25624:	ldr	x8, [x19, #8]
   25628:	add	x8, x8, x20
   2562c:	str	x8, [x19, #8]
   25630:	ldp	x20, x19, [sp, #32]
   25634:	ldr	x21, [sp, #16]
   25638:	ldp	x29, x30, [sp], #48
   2563c:	ret
   25640:	bl	eeb0 <_ZSt9terminatev@plt>
   25644:	b	eb20 <_ZdlPv@plt>
   25648:	stp	x29, x30, [sp, #-48]!
   2564c:	str	x21, [sp, #16]
   25650:	stp	x20, x19, [sp, #32]
   25654:	mov	x29, sp
   25658:	mov	x20, x0
   2565c:	ldr	x0, [x0, #16]
   25660:	mov	x19, x1
   25664:	ldr	x8, [x0]
   25668:	ldr	x8, [x8, #32]
   2566c:	blr	x8
   25670:	ldp	x8, x10, [x19, #8]
   25674:	add	x9, x8, #0x5
   25678:	cmp	x9, x10
   2567c:	b.cs	25688 <__cxa_demangle@@Base+0x12e90>  // b.hs, b.nlast
   25680:	ldr	x0, [x19]
   25684:	b	256ac <__cxa_demangle@@Base+0x12eb4>
   25688:	ldr	x0, [x19]
   2568c:	lsl	x8, x10, #1
   25690:	cmp	x8, x9
   25694:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25698:	str	x1, [x19, #16]
   2569c:	bl	ecc0 <realloc@plt>
   256a0:	str	x0, [x19]
   256a4:	cbz	x0, 25794 <__cxa_demangle@@Base+0x12f9c>
   256a8:	ldr	x8, [x19, #8]
   256ac:	mov	w10, #0x615b                	// #24923
   256b0:	add	x8, x0, x8
   256b4:	mov	w9, #0x3a                  	// #58
   256b8:	movk	w10, #0x6962, lsl #16
   256bc:	strb	w9, [x8, #4]
   256c0:	str	w10, [x8]
   256c4:	ldr	x8, [x19, #8]
   256c8:	add	x8, x8, #0x5
   256cc:	str	x8, [x19, #8]
   256d0:	ldp	x21, x9, [x20, #24]
   256d4:	subs	x20, x9, x21
   256d8:	b.eq	25734 <__cxa_demangle@@Base+0x12f3c>  // b.none
   256dc:	ldr	x10, [x19, #16]
   256e0:	add	x9, x8, x20
   256e4:	cmp	x9, x10
   256e8:	b.cs	256f4 <__cxa_demangle@@Base+0x12efc>  // b.hs, b.nlast
   256ec:	ldr	x0, [x19]
   256f0:	b	25718 <__cxa_demangle@@Base+0x12f20>
   256f4:	ldr	x0, [x19]
   256f8:	lsl	x8, x10, #1
   256fc:	cmp	x8, x9
   25700:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25704:	str	x1, [x19, #16]
   25708:	bl	ecc0 <realloc@plt>
   2570c:	str	x0, [x19]
   25710:	cbz	x0, 25794 <__cxa_demangle@@Base+0x12f9c>
   25714:	ldr	x8, [x19, #8]
   25718:	add	x0, x0, x8
   2571c:	mov	x1, x21
   25720:	mov	x2, x20
   25724:	bl	eae0 <memmove@plt>
   25728:	ldr	x8, [x19, #8]
   2572c:	add	x8, x8, x20
   25730:	str	x8, [x19, #8]
   25734:	ldr	x10, [x19, #16]
   25738:	add	x9, x8, #0x1
   2573c:	cmp	x9, x10
   25740:	b.cs	2574c <__cxa_demangle@@Base+0x12f54>  // b.hs, b.nlast
   25744:	ldr	x0, [x19]
   25748:	b	25770 <__cxa_demangle@@Base+0x12f78>
   2574c:	ldr	x0, [x19]
   25750:	lsl	x8, x10, #1
   25754:	cmp	x8, x9
   25758:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2575c:	str	x1, [x19, #16]
   25760:	bl	ecc0 <realloc@plt>
   25764:	str	x0, [x19]
   25768:	cbz	x0, 25794 <__cxa_demangle@@Base+0x12f9c>
   2576c:	ldr	x8, [x19, #8]
   25770:	mov	w9, #0x5d                  	// #93
   25774:	strb	w9, [x0, x8]
   25778:	ldr	x8, [x19, #8]
   2577c:	ldr	x21, [sp, #16]
   25780:	add	x8, x8, #0x1
   25784:	str	x8, [x19, #8]
   25788:	ldp	x20, x19, [sp, #32]
   2578c:	ldp	x29, x30, [sp], #48
   25790:	ret
   25794:	bl	eeb0 <_ZSt9terminatev@plt>
   25798:	b	eb20 <_ZdlPv@plt>
   2579c:	stp	x29, x30, [sp, #-32]!
   257a0:	stp	x20, x19, [sp, #16]
   257a4:	mov	x29, sp
   257a8:	ldp	x8, x10, [x1, #8]
   257ac:	mov	x19, x1
   257b0:	mov	x20, x0
   257b4:	add	x9, x8, #0x1
   257b8:	cmp	x9, x10
   257bc:	b.cs	257c8 <__cxa_demangle@@Base+0x12fd0>  // b.hs, b.nlast
   257c0:	ldr	x0, [x19]
   257c4:	b	257f0 <__cxa_demangle@@Base+0x12ff8>
   257c8:	ldr	x0, [x19]
   257cc:	lsl	x8, x10, #1
   257d0:	cmp	x8, x9
   257d4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   257d8:	str	x1, [x19, #16]
   257dc:	bl	ecc0 <realloc@plt>
   257e0:	str	x0, [x19]
   257e4:	cbz	x0, 25860 <__cxa_demangle@@Base+0x13068>
   257e8:	ldr	x8, [x19, #8]
   257ec:	add	x9, x8, #0x1
   257f0:	str	x9, [x19, #8]
   257f4:	mov	w9, #0x5b                  	// #91
   257f8:	strb	w9, [x0, x8]
   257fc:	add	x0, x20, #0x10
   25800:	mov	x1, x19
   25804:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   25808:	ldp	x8, x10, [x19, #8]
   2580c:	add	x9, x8, #0x1
   25810:	cmp	x9, x10
   25814:	b.cs	25820 <__cxa_demangle@@Base+0x13028>  // b.hs, b.nlast
   25818:	ldr	x0, [x19]
   2581c:	b	25848 <__cxa_demangle@@Base+0x13050>
   25820:	ldr	x0, [x19]
   25824:	lsl	x8, x10, #1
   25828:	cmp	x8, x9
   2582c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25830:	str	x1, [x19, #16]
   25834:	bl	ecc0 <realloc@plt>
   25838:	str	x0, [x19]
   2583c:	cbz	x0, 25860 <__cxa_demangle@@Base+0x13068>
   25840:	ldr	x8, [x19, #8]
   25844:	add	x9, x8, #0x1
   25848:	str	x9, [x19, #8]
   2584c:	mov	w9, #0x5d                  	// #93
   25850:	strb	w9, [x0, x8]
   25854:	ldp	x20, x19, [sp, #16]
   25858:	ldp	x29, x30, [sp], #32
   2585c:	ret
   25860:	bl	eeb0 <_ZSt9terminatev@plt>
   25864:	b	eb20 <_ZdlPv@plt>
   25868:	stp	x29, x30, [sp, #-48]!
   2586c:	str	x21, [sp, #16]
   25870:	stp	x20, x19, [sp, #32]
   25874:	mov	x29, sp
   25878:	ldr	x21, [x0, #16]
   2587c:	mov	x20, x0
   25880:	mov	x19, x1
   25884:	ldr	x8, [x21]
   25888:	mov	x0, x21
   2588c:	ldr	x8, [x8, #32]
   25890:	blr	x8
   25894:	ldrb	w8, [x21, #9]
   25898:	cmp	w8, #0x1
   2589c:	b.eq	258b4 <__cxa_demangle@@Base+0x130bc>  // b.none
   258a0:	ldr	x8, [x21]
   258a4:	mov	x0, x21
   258a8:	mov	x1, x19
   258ac:	ldr	x8, [x8, #40]
   258b0:	blr	x8
   258b4:	ldp	x8, x10, [x19, #8]
   258b8:	add	x9, x8, #0x2
   258bc:	cmp	x9, x10
   258c0:	b.cs	258cc <__cxa_demangle@@Base+0x130d4>  // b.hs, b.nlast
   258c4:	ldr	x0, [x19]
   258c8:	b	258f0 <__cxa_demangle@@Base+0x130f8>
   258cc:	ldr	x0, [x19]
   258d0:	lsl	x8, x10, #1
   258d4:	cmp	x8, x9
   258d8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   258dc:	str	x1, [x19, #16]
   258e0:	bl	ecc0 <realloc@plt>
   258e4:	str	x0, [x19]
   258e8:	cbz	x0, 25958 <__cxa_demangle@@Base+0x13160>
   258ec:	ldr	x8, [x19, #8]
   258f0:	mov	w9, #0x3a3a                	// #14906
   258f4:	strh	w9, [x0, x8]
   258f8:	ldr	x8, [x19, #8]
   258fc:	mov	x1, x19
   25900:	add	x8, x8, #0x2
   25904:	str	x8, [x19, #8]
   25908:	ldr	x20, [x20, #24]
   2590c:	ldr	x8, [x20]
   25910:	mov	x0, x20
   25914:	ldr	x8, [x8, #32]
   25918:	blr	x8
   2591c:	ldrb	w8, [x20, #9]
   25920:	cmp	w8, #0x1
   25924:	b.ne	25938 <__cxa_demangle@@Base+0x13140>  // b.any
   25928:	ldp	x20, x19, [sp, #32]
   2592c:	ldr	x21, [sp, #16]
   25930:	ldp	x29, x30, [sp], #48
   25934:	ret
   25938:	ldr	x8, [x20]
   2593c:	mov	x0, x20
   25940:	mov	x1, x19
   25944:	ldp	x20, x19, [sp, #32]
   25948:	ldr	x2, [x8, #40]
   2594c:	ldr	x21, [sp, #16]
   25950:	ldp	x29, x30, [sp], #48
   25954:	br	x2
   25958:	bl	eeb0 <_ZSt9terminatev@plt>
   2595c:	b	eb20 <_ZdlPv@plt>
   25960:	stp	x29, x30, [sp, #-32]!
   25964:	stp	x20, x19, [sp, #16]
   25968:	mov	x29, sp
   2596c:	ldr	w8, [x0, #12]
   25970:	cmp	w8, #0x5
   25974:	b.hi	25bfc <__cxa_demangle@@Base+0x13404>  // b.pmore
   25978:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   2597c:	add	x9, x9, #0xcd8
   25980:	adr	x10, 25994 <__cxa_demangle@@Base+0x1319c>
   25984:	ldrb	w11, [x9, x8]
   25988:	add	x10, x10, x11, lsl #2
   2598c:	mov	x19, x1
   25990:	br	x10
   25994:	mov	x20, x19
   25998:	ldr	x8, [x20, #8]!
   2599c:	ldr	x10, [x20, #8]
   259a0:	add	x9, x8, #0xe
   259a4:	cmp	x9, x10
   259a8:	b.cs	25b1c <__cxa_demangle@@Base+0x13324>  // b.hs, b.nlast
   259ac:	ldr	x0, [x19]
   259b0:	b	25b40 <__cxa_demangle@@Base+0x13348>
   259b4:	mov	x20, x19
   259b8:	ldr	x8, [x20, #8]!
   259bc:	ldr	x10, [x20, #8]
   259c0:	add	x9, x8, #0xc
   259c4:	cmp	x9, x10
   259c8:	b.cs	25a54 <__cxa_demangle@@Base+0x1325c>  // b.hs, b.nlast
   259cc:	ldr	x0, [x19]
   259d0:	b	25a78 <__cxa_demangle@@Base+0x13280>
   259d4:	mov	x20, x19
   259d8:	ldr	x8, [x20, #8]!
   259dc:	ldr	x10, [x20, #8]
   259e0:	add	x9, x8, #0xb
   259e4:	cmp	x9, x10
   259e8:	b.cs	25a84 <__cxa_demangle@@Base+0x1328c>  // b.hs, b.nlast
   259ec:	ldr	x0, [x19]
   259f0:	b	25aa8 <__cxa_demangle@@Base+0x132b0>
   259f4:	mov	x20, x19
   259f8:	ldr	x8, [x20, #8]!
   259fc:	ldr	x10, [x20, #8]
   25a00:	add	x9, x8, #0xc
   25a04:	cmp	x9, x10
   25a08:	b.cs	25ad0 <__cxa_demangle@@Base+0x132d8>  // b.hs, b.nlast
   25a0c:	ldr	x0, [x19]
   25a10:	b	25af4 <__cxa_demangle@@Base+0x132fc>
   25a14:	mov	x20, x19
   25a18:	ldr	x8, [x20, #8]!
   25a1c:	ldr	x10, [x20, #8]
   25a20:	add	x9, x8, #0x11
   25a24:	cmp	x9, x10
   25a28:	b.cs	25b64 <__cxa_demangle@@Base+0x1336c>  // b.hs, b.nlast
   25a2c:	ldr	x0, [x19]
   25a30:	b	25b88 <__cxa_demangle@@Base+0x13390>
   25a34:	mov	x20, x19
   25a38:	ldr	x8, [x20, #8]!
   25a3c:	ldr	x10, [x20, #8]
   25a40:	add	x9, x8, #0xd
   25a44:	cmp	x9, x10
   25a48:	b.cs	25bac <__cxa_demangle@@Base+0x133b4>  // b.hs, b.nlast
   25a4c:	ldr	x0, [x19]
   25a50:	b	25bd0 <__cxa_demangle@@Base+0x133d8>
   25a54:	ldr	x0, [x19]
   25a58:	lsl	x8, x10, #1
   25a5c:	cmp	x8, x9
   25a60:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25a64:	str	x1, [x19, #16]
   25a68:	bl	ecc0 <realloc@plt>
   25a6c:	str	x0, [x19]
   25a70:	cbz	x0, 25c08 <__cxa_demangle@@Base+0x13410>
   25a74:	ldr	x8, [x20]
   25a78:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25a7c:	add	x9, x9, #0xfc9
   25a80:	b	25afc <__cxa_demangle@@Base+0x13304>
   25a84:	ldr	x0, [x19]
   25a88:	lsl	x8, x10, #1
   25a8c:	cmp	x8, x9
   25a90:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25a94:	str	x1, [x19, #16]
   25a98:	bl	ecc0 <realloc@plt>
   25a9c:	str	x0, [x19]
   25aa0:	cbz	x0, 25c08 <__cxa_demangle@@Base+0x13410>
   25aa4:	ldr	x8, [x20]
   25aa8:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25aac:	add	x9, x9, #0xfb0
   25ab0:	ldr	x9, [x9]
   25ab4:	mov	w10, #0x6972                	// #26994
   25ab8:	add	x8, x0, x8
   25abc:	movk	w10, #0x676e, lsl #16
   25ac0:	str	x9, [x8]
   25ac4:	stur	w10, [x8, #7]
   25ac8:	mov	w8, #0xb                   	// #11
   25acc:	b	25bf0 <__cxa_demangle@@Base+0x133f8>
   25ad0:	ldr	x0, [x19]
   25ad4:	lsl	x8, x10, #1
   25ad8:	cmp	x8, x9
   25adc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25ae0:	str	x1, [x19, #16]
   25ae4:	bl	ecc0 <realloc@plt>
   25ae8:	str	x0, [x19]
   25aec:	cbz	x0, 25c08 <__cxa_demangle@@Base+0x13410>
   25af0:	ldr	x8, [x20]
   25af4:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25af8:	add	x9, x9, #0xfbc
   25afc:	ldr	x9, [x9]
   25b00:	mov	w10, #0x6572                	// #25970
   25b04:	add	x8, x0, x8
   25b08:	movk	w10, #0x6d61, lsl #16
   25b0c:	str	w10, [x8, #8]
   25b10:	str	x9, [x8]
   25b14:	mov	w8, #0xc                   	// #12
   25b18:	b	25bf0 <__cxa_demangle@@Base+0x133f8>
   25b1c:	ldr	x0, [x19]
   25b20:	lsl	x8, x10, #1
   25b24:	cmp	x8, x9
   25b28:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25b2c:	str	x1, [x19, #16]
   25b30:	bl	ecc0 <realloc@plt>
   25b34:	str	x0, [x19]
   25b38:	cbz	x0, 25c08 <__cxa_demangle@@Base+0x13410>
   25b3c:	ldr	x8, [x20]
   25b40:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25b44:	add	x9, x9, #0xe71
   25b48:	ldur	x10, [x9, #6]
   25b4c:	ldr	x9, [x9]
   25b50:	add	x8, x0, x8
   25b54:	stur	x10, [x8, #6]
   25b58:	str	x9, [x8]
   25b5c:	mov	w8, #0xe                   	// #14
   25b60:	b	25bf0 <__cxa_demangle@@Base+0x133f8>
   25b64:	ldr	x0, [x19]
   25b68:	lsl	x8, x10, #1
   25b6c:	cmp	x8, x9
   25b70:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25b74:	str	x1, [x19, #16]
   25b78:	bl	ecc0 <realloc@plt>
   25b7c:	str	x0, [x19]
   25b80:	cbz	x0, 25c08 <__cxa_demangle@@Base+0x13410>
   25b84:	ldr	x8, [x20]
   25b88:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25b8c:	add	x9, x9, #0xe80
   25b90:	ldr	q0, [x9]
   25b94:	add	x8, x0, x8
   25b98:	mov	w9, #0x67                  	// #103
   25b9c:	strb	w9, [x8, #16]
   25ba0:	str	q0, [x8]
   25ba4:	mov	w8, #0x11                  	// #17
   25ba8:	b	25bf0 <__cxa_demangle@@Base+0x133f8>
   25bac:	ldr	x0, [x19]
   25bb0:	lsl	x8, x10, #1
   25bb4:	cmp	x8, x9
   25bb8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25bbc:	str	x1, [x19, #16]
   25bc0:	bl	ecc0 <realloc@plt>
   25bc4:	str	x0, [x19]
   25bc8:	cbz	x0, 25c08 <__cxa_demangle@@Base+0x13410>
   25bcc:	ldr	x8, [x20]
   25bd0:	adrp	x9, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25bd4:	add	x9, x9, #0xfd6
   25bd8:	ldur	x10, [x9, #5]
   25bdc:	ldr	x9, [x9]
   25be0:	add	x8, x0, x8
   25be4:	stur	x10, [x8, #5]
   25be8:	str	x9, [x8]
   25bec:	mov	w8, #0xd                   	// #13
   25bf0:	ldr	x9, [x20]
   25bf4:	add	x8, x9, x8
   25bf8:	str	x8, [x20]
   25bfc:	ldp	x20, x19, [sp, #16]
   25c00:	ldp	x29, x30, [sp], #32
   25c04:	ret
   25c08:	bl	eeb0 <_ZSt9terminatev@plt>
   25c0c:	ldr	w8, [x0, #12]
   25c10:	adrp	x9, 2d000 <__cxa_call_unexpected@@Base+0xac>
   25c14:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25c18:	add	x9, x9, #0xcde
   25c1c:	add	x0, x0, #0x152
   25c20:	adr	x10, 25c34 <__cxa_demangle@@Base+0x1343c>
   25c24:	ldrb	w11, [x9, x8]
   25c28:	add	x10, x10, x11, lsl #2
   25c2c:	add	x1, x0, #0x9
   25c30:	br	x10
   25c34:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25c38:	add	x0, x0, #0x16c
   25c3c:	add	x1, x0, #0xc
   25c40:	ret
   25c44:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25c48:	add	x0, x0, #0x189
   25c4c:	add	x1, x0, #0x6
   25c50:	ret
   25c54:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25c58:	add	x0, x0, #0x1a0
   25c5c:	add	x1, x0, #0x7
   25c60:	ret
   25c64:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25c68:	add	x0, x0, #0x1b8
   25c6c:	add	x1, x0, #0x7
   25c70:	ret
   25c74:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   25c78:	add	x0, x0, #0x1d0
   25c7c:	add	x1, x0, #0x8
   25c80:	ret
   25c84:	b	eb20 <_ZdlPv@plt>
   25c88:	ldr	w8, [x1, #28]
   25c8c:	cmn	w8, #0x1
   25c90:	b.eq	25cc4 <__cxa_demangle@@Base+0x134cc>  // b.none
   25c94:	ldr	w8, [x1, #24]
   25c98:	ldr	x9, [x0, #24]
   25c9c:	cmp	x9, x8
   25ca0:	b.ls	25cd8 <__cxa_demangle@@Base+0x134e0>  // b.plast
   25ca4:	ldr	x9, [x0, #16]
   25ca8:	ldr	x0, [x9, x8, lsl #3]
   25cac:	ldrb	w8, [x0, #9]
   25cb0:	cmp	w8, #0x2
   25cb4:	b.ne	25ce0 <__cxa_demangle@@Base+0x134e8>  // b.any
   25cb8:	ldr	x8, [x0]
   25cbc:	ldr	x2, [x8]
   25cc0:	br	x2
   25cc4:	ldr	x9, [x0, #24]
   25cc8:	mov	x8, xzr
   25ccc:	stp	wzr, w9, [x1, #24]
   25cd0:	cmp	x9, x8
   25cd4:	b.hi	25ca4 <__cxa_demangle@@Base+0x134ac>  // b.pmore
   25cd8:	mov	w0, wzr
   25cdc:	ret
   25ce0:	cmp	w8, #0x0
   25ce4:	cset	w0, eq  // eq = none
   25ce8:	ret
   25cec:	ldr	w8, [x1, #28]
   25cf0:	cmn	w8, #0x1
   25cf4:	b.eq	25d28 <__cxa_demangle@@Base+0x13530>  // b.none
   25cf8:	ldr	w8, [x1, #24]
   25cfc:	ldr	x9, [x0, #24]
   25d00:	cmp	x9, x8
   25d04:	b.ls	25d3c <__cxa_demangle@@Base+0x13544>  // b.plast
   25d08:	ldr	x9, [x0, #16]
   25d0c:	ldr	x0, [x9, x8, lsl #3]
   25d10:	ldrb	w8, [x0, #10]
   25d14:	cmp	w8, #0x2
   25d18:	b.ne	25d44 <__cxa_demangle@@Base+0x1354c>  // b.any
   25d1c:	ldr	x8, [x0]
   25d20:	ldr	x2, [x8, #8]
   25d24:	br	x2
   25d28:	ldr	x9, [x0, #24]
   25d2c:	mov	x8, xzr
   25d30:	stp	wzr, w9, [x1, #24]
   25d34:	cmp	x9, x8
   25d38:	b.hi	25d08 <__cxa_demangle@@Base+0x13510>  // b.pmore
   25d3c:	mov	w0, wzr
   25d40:	ret
   25d44:	cmp	w8, #0x0
   25d48:	cset	w0, eq  // eq = none
   25d4c:	ret
   25d50:	ldr	w8, [x1, #28]
   25d54:	cmn	w8, #0x1
   25d58:	b.eq	25d8c <__cxa_demangle@@Base+0x13594>  // b.none
   25d5c:	ldr	w8, [x1, #24]
   25d60:	ldr	x9, [x0, #24]
   25d64:	cmp	x9, x8
   25d68:	b.ls	25da0 <__cxa_demangle@@Base+0x135a8>  // b.plast
   25d6c:	ldr	x9, [x0, #16]
   25d70:	ldr	x0, [x9, x8, lsl #3]
   25d74:	ldrb	w8, [x0, #11]
   25d78:	cmp	w8, #0x2
   25d7c:	b.ne	25da8 <__cxa_demangle@@Base+0x135b0>  // b.any
   25d80:	ldr	x8, [x0]
   25d84:	ldr	x2, [x8, #16]
   25d88:	br	x2
   25d8c:	ldr	x9, [x0, #24]
   25d90:	mov	x8, xzr
   25d94:	stp	wzr, w9, [x1, #24]
   25d98:	cmp	x9, x8
   25d9c:	b.hi	25d6c <__cxa_demangle@@Base+0x13574>  // b.pmore
   25da0:	mov	w0, wzr
   25da4:	ret
   25da8:	cmp	w8, #0x0
   25dac:	cset	w0, eq  // eq = none
   25db0:	ret
   25db4:	ldr	w8, [x1, #28]
   25db8:	cmn	w8, #0x1
   25dbc:	b.eq	25de4 <__cxa_demangle@@Base+0x135ec>  // b.none
   25dc0:	ldr	w8, [x1, #24]
   25dc4:	ldr	x9, [x0, #24]
   25dc8:	cmp	x9, x8
   25dcc:	b.ls	25df8 <__cxa_demangle@@Base+0x13600>  // b.plast
   25dd0:	ldr	x9, [x0, #16]
   25dd4:	ldr	x0, [x9, x8, lsl #3]
   25dd8:	ldr	x8, [x0]
   25ddc:	ldr	x2, [x8, #24]
   25de0:	br	x2
   25de4:	ldr	x9, [x0, #24]
   25de8:	mov	x8, xzr
   25dec:	stp	wzr, w9, [x1, #24]
   25df0:	cmp	x9, x8
   25df4:	b.hi	25dd0 <__cxa_demangle@@Base+0x135d8>  // b.pmore
   25df8:	ret
   25dfc:	ldr	w8, [x1, #28]
   25e00:	cmn	w8, #0x1
   25e04:	b.eq	25e2c <__cxa_demangle@@Base+0x13634>  // b.none
   25e08:	ldr	w8, [x1, #24]
   25e0c:	ldr	x9, [x0, #24]
   25e10:	cmp	x9, x8
   25e14:	b.ls	25e40 <__cxa_demangle@@Base+0x13648>  // b.plast
   25e18:	ldr	x9, [x0, #16]
   25e1c:	ldr	x0, [x9, x8, lsl #3]
   25e20:	ldr	x8, [x0]
   25e24:	ldr	x2, [x8, #32]
   25e28:	br	x2
   25e2c:	ldr	x9, [x0, #24]
   25e30:	mov	x8, xzr
   25e34:	stp	wzr, w9, [x1, #24]
   25e38:	cmp	x9, x8
   25e3c:	b.hi	25e18 <__cxa_demangle@@Base+0x13620>  // b.pmore
   25e40:	ret
   25e44:	ldr	w8, [x1, #28]
   25e48:	cmn	w8, #0x1
   25e4c:	b.eq	25e74 <__cxa_demangle@@Base+0x1367c>  // b.none
   25e50:	ldr	w8, [x1, #24]
   25e54:	ldr	x9, [x0, #24]
   25e58:	cmp	x9, x8
   25e5c:	b.ls	25e88 <__cxa_demangle@@Base+0x13690>  // b.plast
   25e60:	ldr	x9, [x0, #16]
   25e64:	ldr	x0, [x9, x8, lsl #3]
   25e68:	ldr	x8, [x0]
   25e6c:	ldr	x2, [x8, #40]
   25e70:	br	x2
   25e74:	ldr	x9, [x0, #24]
   25e78:	mov	x8, xzr
   25e7c:	stp	wzr, w9, [x1, #24]
   25e80:	cmp	x9, x8
   25e84:	b.hi	25e60 <__cxa_demangle@@Base+0x13668>  // b.pmore
   25e88:	ret
   25e8c:	b	eb20 <_ZdlPv@plt>
   25e90:	stp	x29, x30, [sp, #-32]!
   25e94:	stp	x20, x19, [sp, #16]
   25e98:	mov	x29, sp
   25e9c:	ldp	x8, x10, [x1, #8]
   25ea0:	mov	x19, x1
   25ea4:	mov	x20, x0
   25ea8:	add	x9, x8, #0x1
   25eac:	cmp	x9, x10
   25eb0:	b.cs	25ebc <__cxa_demangle@@Base+0x136c4>  // b.hs, b.nlast
   25eb4:	ldr	x0, [x19]
   25eb8:	b	25ee0 <__cxa_demangle@@Base+0x136e8>
   25ebc:	ldr	x0, [x19]
   25ec0:	lsl	x8, x10, #1
   25ec4:	cmp	x8, x9
   25ec8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25ecc:	str	x1, [x19, #16]
   25ed0:	bl	ecc0 <realloc@plt>
   25ed4:	str	x0, [x19]
   25ed8:	cbz	x0, 25fbc <__cxa_demangle@@Base+0x137c4>
   25edc:	ldr	x8, [x19, #8]
   25ee0:	mov	w9, #0x3c                  	// #60
   25ee4:	strb	w9, [x0, x8]
   25ee8:	ldr	x8, [x19, #8]
   25eec:	add	x0, x20, #0x10
   25ef0:	mov	x1, x19
   25ef4:	add	x8, x8, #0x1
   25ef8:	str	x8, [x19, #8]
   25efc:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   25f00:	ldr	x8, [x19, #8]
   25f04:	cbz	x8, 25f60 <__cxa_demangle@@Base+0x13768>
   25f08:	ldr	x0, [x19]
   25f0c:	add	x9, x8, x0
   25f10:	ldurb	w9, [x9, #-1]
   25f14:	cmp	w9, #0x3e
   25f18:	b.ne	25f60 <__cxa_demangle@@Base+0x13768>  // b.any
   25f1c:	ldr	x10, [x19, #16]
   25f20:	add	x9, x8, #0x1
   25f24:	cmp	x9, x10
   25f28:	b.cc	25f4c <__cxa_demangle@@Base+0x13754>  // b.lo, b.ul, b.last
   25f2c:	lsl	x8, x10, #1
   25f30:	cmp	x8, x9
   25f34:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25f38:	str	x1, [x19, #16]
   25f3c:	bl	ecc0 <realloc@plt>
   25f40:	str	x0, [x19]
   25f44:	cbz	x0, 25fbc <__cxa_demangle@@Base+0x137c4>
   25f48:	ldr	x8, [x19, #8]
   25f4c:	mov	w9, #0x20                  	// #32
   25f50:	strb	w9, [x0, x8]
   25f54:	ldr	x8, [x19, #8]
   25f58:	add	x8, x8, #0x1
   25f5c:	str	x8, [x19, #8]
   25f60:	ldr	x10, [x19, #16]
   25f64:	add	x9, x8, #0x1
   25f68:	cmp	x9, x10
   25f6c:	b.cs	25f78 <__cxa_demangle@@Base+0x13780>  // b.hs, b.nlast
   25f70:	ldr	x0, [x19]
   25f74:	b	25f9c <__cxa_demangle@@Base+0x137a4>
   25f78:	ldr	x0, [x19]
   25f7c:	lsl	x8, x10, #1
   25f80:	cmp	x8, x9
   25f84:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   25f88:	str	x1, [x19, #16]
   25f8c:	bl	ecc0 <realloc@plt>
   25f90:	str	x0, [x19]
   25f94:	cbz	x0, 25fbc <__cxa_demangle@@Base+0x137c4>
   25f98:	ldr	x8, [x19, #8]
   25f9c:	mov	w9, #0x3e                  	// #62
   25fa0:	strb	w9, [x0, x8]
   25fa4:	ldr	x8, [x19, #8]
   25fa8:	add	x8, x8, #0x1
   25fac:	str	x8, [x19, #8]
   25fb0:	ldp	x20, x19, [sp, #16]
   25fb4:	ldp	x29, x30, [sp], #32
   25fb8:	ret
   25fbc:	bl	eeb0 <_ZSt9terminatev@plt>
   25fc0:	b	eb20 <_ZdlPv@plt>
   25fc4:	stp	x29, x30, [sp, #-48]!
   25fc8:	str	x21, [sp, #16]
   25fcc:	stp	x20, x19, [sp, #32]
   25fd0:	mov	x29, sp
   25fd4:	ldr	x21, [x0, #16]
   25fd8:	mov	x20, x0
   25fdc:	mov	x19, x1
   25fe0:	ldr	x8, [x21]
   25fe4:	mov	x0, x21
   25fe8:	ldr	x8, [x8, #32]
   25fec:	blr	x8
   25ff0:	ldrb	w8, [x21, #9]
   25ff4:	cmp	w8, #0x1
   25ff8:	b.eq	26010 <__cxa_demangle@@Base+0x13818>  // b.none
   25ffc:	ldr	x8, [x21]
   26000:	mov	x0, x21
   26004:	mov	x1, x19
   26008:	ldr	x8, [x8, #40]
   2600c:	blr	x8
   26010:	ldr	x20, [x20, #24]
   26014:	mov	x1, x19
   26018:	ldr	x8, [x20]
   2601c:	mov	x0, x20
   26020:	ldr	x8, [x8, #32]
   26024:	blr	x8
   26028:	ldrb	w8, [x20, #9]
   2602c:	cmp	w8, #0x1
   26030:	b.ne	26044 <__cxa_demangle@@Base+0x1384c>  // b.any
   26034:	ldp	x20, x19, [sp, #32]
   26038:	ldr	x21, [sp, #16]
   2603c:	ldp	x29, x30, [sp], #48
   26040:	ret
   26044:	ldr	x8, [x20]
   26048:	mov	x0, x20
   2604c:	mov	x1, x19
   26050:	ldp	x20, x19, [sp, #32]
   26054:	ldr	x2, [x8, #40]
   26058:	ldr	x21, [sp, #16]
   2605c:	ldp	x29, x30, [sp], #48
   26060:	br	x2
   26064:	ldr	x0, [x0, #16]
   26068:	ldr	x8, [x0]
   2606c:	ldr	x1, [x8, #48]
   26070:	br	x1
   26074:	b	eb20 <_ZdlPv@plt>
   26078:	stp	x29, x30, [sp, #-32]!
   2607c:	stp	x20, x19, [sp, #16]
   26080:	mov	x29, sp
   26084:	ldp	x8, x10, [x1, #8]
   26088:	mov	x19, x1
   2608c:	mov	x20, x0
   26090:	add	x9, x8, #0x5
   26094:	cmp	x9, x10
   26098:	b.cs	260a4 <__cxa_demangle@@Base+0x138ac>  // b.hs, b.nlast
   2609c:	ldr	x0, [x19]
   260a0:	b	260c8 <__cxa_demangle@@Base+0x138d0>
   260a4:	ldr	x0, [x19]
   260a8:	lsl	x8, x10, #1
   260ac:	cmp	x8, x9
   260b0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   260b4:	str	x1, [x19, #16]
   260b8:	bl	ecc0 <realloc@plt>
   260bc:	str	x0, [x19]
   260c0:	cbz	x0, 26138 <__cxa_demangle@@Base+0x13940>
   260c4:	ldr	x8, [x19, #8]
   260c8:	mov	w10, #0x7473                	// #29811
   260cc:	add	x8, x0, x8
   260d0:	mov	w9, #0x3a                  	// #58
   260d4:	movk	w10, #0x3a64, lsl #16
   260d8:	strb	w9, [x8, #4]
   260dc:	str	w10, [x8]
   260e0:	ldr	x8, [x19, #8]
   260e4:	mov	x1, x19
   260e8:	add	x8, x8, #0x5
   260ec:	str	x8, [x19, #8]
   260f0:	ldr	x20, [x20, #16]
   260f4:	ldr	x8, [x20]
   260f8:	mov	x0, x20
   260fc:	ldr	x8, [x8, #32]
   26100:	blr	x8
   26104:	ldrb	w8, [x20, #9]
   26108:	cmp	w8, #0x1
   2610c:	b.ne	2611c <__cxa_demangle@@Base+0x13924>  // b.any
   26110:	ldp	x20, x19, [sp, #16]
   26114:	ldp	x29, x30, [sp], #32
   26118:	ret
   2611c:	ldr	x8, [x20]
   26120:	mov	x0, x20
   26124:	mov	x1, x19
   26128:	ldp	x20, x19, [sp, #16]
   2612c:	ldr	x2, [x8, #40]
   26130:	ldp	x29, x30, [sp], #32
   26134:	br	x2
   26138:	bl	eeb0 <_ZSt9terminatev@plt>
   2613c:	ldr	x0, [x0, #16]
   26140:	ldr	x8, [x0]
   26144:	ldr	x1, [x8, #48]
   26148:	br	x1
   2614c:	b	eb20 <_ZdlPv@plt>
   26150:	add	x0, x0, #0x10
   26154:	b	20494 <__cxa_demangle@@Base+0xdc9c>
   26158:	b	eb20 <_ZdlPv@plt>
   2615c:	stp	x29, x30, [sp, #-32]!
   26160:	stp	x20, x19, [sp, #16]
   26164:	mov	x29, sp
   26168:	ldp	x8, x10, [x1, #8]
   2616c:	mov	x19, x1
   26170:	mov	x20, x0
   26174:	add	x9, x8, #0xc
   26178:	cmp	x9, x10
   2617c:	b.cs	26188 <__cxa_demangle@@Base+0x13990>  // b.hs, b.nlast
   26180:	ldr	x0, [x19]
   26184:	b	261ac <__cxa_demangle@@Base+0x139b4>
   26188:	ldr	x0, [x19]
   2618c:	lsl	x8, x10, #1
   26190:	cmp	x8, x9
   26194:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   26198:	str	x1, [x19, #16]
   2619c:	bl	ecc0 <realloc@plt>
   261a0:	str	x0, [x19]
   261a4:	cbz	x0, 2623c <__cxa_demangle@@Base+0x13a44>
   261a8:	ldr	x8, [x19, #8]
   261ac:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   261b0:	add	x9, x9, #0xd2
   261b4:	ldr	x9, [x9]
   261b8:	mov	w10, #0x695f                	// #26975
   261bc:	add	x8, x0, x8
   261c0:	movk	w10, #0x3a66, lsl #16
   261c4:	str	w10, [x8, #8]
   261c8:	str	x9, [x8]
   261cc:	ldr	x8, [x19, #8]
   261d0:	add	x0, x20, #0x10
   261d4:	mov	x1, x19
   261d8:	add	x8, x8, #0xc
   261dc:	str	x8, [x19, #8]
   261e0:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   261e4:	ldp	x8, x10, [x19, #8]
   261e8:	add	x9, x8, #0x1
   261ec:	cmp	x9, x10
   261f0:	b.cs	261fc <__cxa_demangle@@Base+0x13a04>  // b.hs, b.nlast
   261f4:	ldr	x0, [x19]
   261f8:	b	26224 <__cxa_demangle@@Base+0x13a2c>
   261fc:	ldr	x0, [x19]
   26200:	lsl	x8, x10, #1
   26204:	cmp	x8, x9
   26208:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2620c:	str	x1, [x19, #16]
   26210:	bl	ecc0 <realloc@plt>
   26214:	str	x0, [x19]
   26218:	cbz	x0, 2623c <__cxa_demangle@@Base+0x13a44>
   2621c:	ldr	x8, [x19, #8]
   26220:	add	x9, x8, #0x1
   26224:	str	x9, [x19, #8]
   26228:	mov	w9, #0x5d                  	// #93
   2622c:	strb	w9, [x0, x8]
   26230:	ldp	x20, x19, [sp, #16]
   26234:	ldp	x29, x30, [sp], #32
   26238:	ret
   2623c:	bl	eeb0 <_ZSt9terminatev@plt>
   26240:	b	eb20 <_ZdlPv@plt>
   26244:	mov	w0, #0x1                   	// #1
   26248:	ret
   2624c:	mov	w0, #0x1                   	// #1
   26250:	ret
   26254:	stp	x29, x30, [sp, #-32]!
   26258:	stp	x20, x19, [sp, #16]
   2625c:	mov	x29, sp
   26260:	mov	x20, x0
   26264:	ldr	x0, [x0, #16]
   26268:	mov	x19, x1
   2626c:	cbz	x0, 262f8 <__cxa_demangle@@Base+0x13b00>
   26270:	ldr	x8, [x0]
   26274:	mov	x1, x19
   26278:	ldr	x8, [x8, #32]
   2627c:	blr	x8
   26280:	ldr	x0, [x20, #16]
   26284:	ldrb	w8, [x0, #9]
   26288:	cbz	w8, 262f8 <__cxa_demangle@@Base+0x13b00>
   2628c:	cmp	w8, #0x2
   26290:	b.ne	262a8 <__cxa_demangle@@Base+0x13ab0>  // b.any
   26294:	ldr	x8, [x0]
   26298:	mov	x1, x19
   2629c:	ldr	x8, [x8]
   262a0:	blr	x8
   262a4:	tbnz	w0, #0, 262f8 <__cxa_demangle@@Base+0x13b00>
   262a8:	ldp	x8, x10, [x19, #8]
   262ac:	add	x9, x8, #0x1
   262b0:	cmp	x9, x10
   262b4:	b.cs	262c0 <__cxa_demangle@@Base+0x13ac8>  // b.hs, b.nlast
   262b8:	ldr	x0, [x19]
   262bc:	b	262e4 <__cxa_demangle@@Base+0x13aec>
   262c0:	ldr	x0, [x19]
   262c4:	lsl	x8, x10, #1
   262c8:	cmp	x8, x9
   262cc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   262d0:	str	x1, [x19, #16]
   262d4:	bl	ecc0 <realloc@plt>
   262d8:	str	x0, [x19]
   262dc:	cbz	x0, 26344 <__cxa_demangle@@Base+0x13b4c>
   262e0:	ldr	x8, [x19, #8]
   262e4:	mov	w9, #0x20                  	// #32
   262e8:	strb	w9, [x0, x8]
   262ec:	ldr	x8, [x19, #8]
   262f0:	add	x8, x8, #0x1
   262f4:	str	x8, [x19, #8]
   262f8:	ldr	x20, [x20, #24]
   262fc:	mov	x1, x19
   26300:	ldr	x8, [x20]
   26304:	mov	x0, x20
   26308:	ldr	x8, [x8, #32]
   2630c:	blr	x8
   26310:	ldrb	w8, [x20, #9]
   26314:	cmp	w8, #0x1
   26318:	b.ne	26328 <__cxa_demangle@@Base+0x13b30>  // b.any
   2631c:	ldp	x20, x19, [sp, #16]
   26320:	ldp	x29, x30, [sp], #32
   26324:	ret
   26328:	ldr	x8, [x20]
   2632c:	mov	x0, x20
   26330:	mov	x1, x19
   26334:	ldp	x20, x19, [sp, #16]
   26338:	ldr	x2, [x8, #40]
   2633c:	ldp	x29, x30, [sp], #32
   26340:	br	x2
   26344:	bl	eeb0 <_ZSt9terminatev@plt>
   26348:	stp	x29, x30, [sp, #-32]!
   2634c:	stp	x20, x19, [sp, #16]
   26350:	mov	x29, sp
   26354:	ldp	x8, x10, [x1, #8]
   26358:	mov	x19, x1
   2635c:	mov	x20, x0
   26360:	add	x9, x8, #0x1
   26364:	cmp	x9, x10
   26368:	b.cs	26374 <__cxa_demangle@@Base+0x13b7c>  // b.hs, b.nlast
   2636c:	ldr	x0, [x19]
   26370:	b	26398 <__cxa_demangle@@Base+0x13ba0>
   26374:	ldr	x0, [x19]
   26378:	lsl	x8, x10, #1
   2637c:	cmp	x8, x9
   26380:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   26384:	str	x1, [x19, #16]
   26388:	bl	ecc0 <realloc@plt>
   2638c:	str	x0, [x19]
   26390:	cbz	x0, 26670 <__cxa_demangle@@Base+0x13e78>
   26394:	ldr	x8, [x19, #8]
   26398:	mov	w9, #0x28                  	// #40
   2639c:	strb	w9, [x0, x8]
   263a0:	ldr	x8, [x19, #8]
   263a4:	add	x0, x20, #0x20
   263a8:	mov	x1, x19
   263ac:	add	x8, x8, #0x1
   263b0:	str	x8, [x19, #8]
   263b4:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   263b8:	ldp	x8, x10, [x19, #8]
   263bc:	add	x9, x8, #0x1
   263c0:	cmp	x9, x10
   263c4:	b.cs	263d0 <__cxa_demangle@@Base+0x13bd8>  // b.hs, b.nlast
   263c8:	ldr	x0, [x19]
   263cc:	b	263f4 <__cxa_demangle@@Base+0x13bfc>
   263d0:	ldr	x0, [x19]
   263d4:	lsl	x8, x10, #1
   263d8:	cmp	x8, x9
   263dc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   263e0:	str	x1, [x19, #16]
   263e4:	bl	ecc0 <realloc@plt>
   263e8:	str	x0, [x19]
   263ec:	cbz	x0, 26670 <__cxa_demangle@@Base+0x13e78>
   263f0:	ldr	x8, [x19, #8]
   263f4:	mov	w9, #0x29                  	// #41
   263f8:	strb	w9, [x0, x8]
   263fc:	ldr	x8, [x19, #8]
   26400:	add	x8, x8, #0x1
   26404:	str	x8, [x19, #8]
   26408:	ldr	x0, [x20, #16]
   2640c:	cbz	x0, 26420 <__cxa_demangle@@Base+0x13c28>
   26410:	ldr	x8, [x0]
   26414:	mov	x1, x19
   26418:	ldr	x8, [x8, #40]
   2641c:	blr	x8
   26420:	ldr	w8, [x20, #56]
   26424:	tbz	w8, #0, 2648c <__cxa_demangle@@Base+0x13c94>
   26428:	ldp	x8, x10, [x19, #8]
   2642c:	add	x9, x8, #0x6
   26430:	cmp	x9, x10
   26434:	b.cs	26440 <__cxa_demangle@@Base+0x13c48>  // b.hs, b.nlast
   26438:	ldr	x0, [x19]
   2643c:	b	26464 <__cxa_demangle@@Base+0x13c6c>
   26440:	ldr	x0, [x19]
   26444:	lsl	x8, x10, #1
   26448:	cmp	x8, x9
   2644c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   26450:	str	x1, [x19, #16]
   26454:	bl	ecc0 <realloc@plt>
   26458:	str	x0, [x19]
   2645c:	cbz	x0, 26670 <__cxa_demangle@@Base+0x13e78>
   26460:	ldr	x8, [x19, #8]
   26464:	mov	w10, #0x6320                	// #25376
   26468:	add	x8, x0, x8
   2646c:	mov	w9, #0x7473                	// #29811
   26470:	movk	w10, #0x6e6f, lsl #16
   26474:	strh	w9, [x8, #4]
   26478:	str	w10, [x8]
   2647c:	ldr	x8, [x19, #8]
   26480:	add	x8, x8, #0x6
   26484:	str	x8, [x19, #8]
   26488:	ldr	w8, [x20, #56]
   2648c:	tbz	w8, #1, 264f8 <__cxa_demangle@@Base+0x13d00>
   26490:	ldp	x8, x10, [x19, #8]
   26494:	add	x9, x8, #0x9
   26498:	cmp	x9, x10
   2649c:	b.cs	264a8 <__cxa_demangle@@Base+0x13cb0>  // b.hs, b.nlast
   264a0:	ldr	x0, [x19]
   264a4:	b	264cc <__cxa_demangle@@Base+0x13cd4>
   264a8:	ldr	x0, [x19]
   264ac:	lsl	x8, x10, #1
   264b0:	cmp	x8, x9
   264b4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   264b8:	str	x1, [x19, #16]
   264bc:	bl	ecc0 <realloc@plt>
   264c0:	str	x0, [x19]
   264c4:	cbz	x0, 26670 <__cxa_demangle@@Base+0x13e78>
   264c8:	ldr	x8, [x19, #8]
   264cc:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   264d0:	add	x9, x9, #0x37f
   264d4:	ldr	x9, [x9]
   264d8:	add	x8, x0, x8
   264dc:	mov	w10, #0x65                  	// #101
   264e0:	strb	w10, [x8, #8]
   264e4:	str	x9, [x8]
   264e8:	ldr	x8, [x19, #8]
   264ec:	add	x8, x8, #0x9
   264f0:	str	x8, [x19, #8]
   264f4:	ldr	w8, [x20, #56]
   264f8:	tbz	w8, #2, 26560 <__cxa_demangle@@Base+0x13d68>
   264fc:	ldp	x8, x10, [x19, #8]
   26500:	add	x9, x8, #0x9
   26504:	cmp	x9, x10
   26508:	b.cs	26514 <__cxa_demangle@@Base+0x13d1c>  // b.hs, b.nlast
   2650c:	ldr	x0, [x19]
   26510:	b	26538 <__cxa_demangle@@Base+0x13d40>
   26514:	ldr	x0, [x19]
   26518:	lsl	x8, x10, #1
   2651c:	cmp	x8, x9
   26520:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   26524:	str	x1, [x19, #16]
   26528:	bl	ecc0 <realloc@plt>
   2652c:	str	x0, [x19]
   26530:	cbz	x0, 26670 <__cxa_demangle@@Base+0x13e78>
   26534:	ldr	x8, [x19, #8]
   26538:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2653c:	add	x9, x9, #0x389
   26540:	ldr	x9, [x9]
   26544:	add	x8, x0, x8
   26548:	mov	w10, #0x74                  	// #116
   2654c:	strb	w10, [x8, #8]
   26550:	str	x9, [x8]
   26554:	ldr	x8, [x19, #8]
   26558:	add	x8, x8, #0x9
   2655c:	str	x8, [x19, #8]
   26560:	ldrb	w8, [x20, #60]
   26564:	cmp	w8, #0x2
   26568:	b.eq	2658c <__cxa_demangle@@Base+0x13d94>  // b.none
   2656c:	cmp	w8, #0x1
   26570:	b.ne	26620 <__cxa_demangle@@Base+0x13e28>  // b.any
   26574:	ldp	x8, x10, [x19, #8]
   26578:	add	x9, x8, #0x2
   2657c:	cmp	x9, x10
   26580:	b.cs	265a4 <__cxa_demangle@@Base+0x13dac>  // b.hs, b.nlast
   26584:	ldr	x0, [x19]
   26588:	b	265c8 <__cxa_demangle@@Base+0x13dd0>
   2658c:	ldp	x8, x10, [x19, #8]
   26590:	add	x9, x8, #0x3
   26594:	cmp	x9, x10
   26598:	b.cs	265d8 <__cxa_demangle@@Base+0x13de0>  // b.hs, b.nlast
   2659c:	ldr	x0, [x19]
   265a0:	b	265fc <__cxa_demangle@@Base+0x13e04>
   265a4:	ldr	x0, [x19]
   265a8:	lsl	x8, x10, #1
   265ac:	cmp	x8, x9
   265b0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   265b4:	str	x1, [x19, #16]
   265b8:	bl	ecc0 <realloc@plt>
   265bc:	str	x0, [x19]
   265c0:	cbz	x0, 26670 <__cxa_demangle@@Base+0x13e78>
   265c4:	ldr	x8, [x19, #8]
   265c8:	mov	w9, #0x2620                	// #9760
   265cc:	strh	w9, [x0, x8]
   265d0:	mov	w8, #0x2                   	// #2
   265d4:	b	26614 <__cxa_demangle@@Base+0x13e1c>
   265d8:	ldr	x0, [x19]
   265dc:	lsl	x8, x10, #1
   265e0:	cmp	x8, x9
   265e4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   265e8:	str	x1, [x19, #16]
   265ec:	bl	ecc0 <realloc@plt>
   265f0:	str	x0, [x19]
   265f4:	cbz	x0, 26670 <__cxa_demangle@@Base+0x13e78>
   265f8:	ldr	x8, [x19, #8]
   265fc:	add	x8, x0, x8
   26600:	mov	w9, #0x26                  	// #38
   26604:	mov	w10, #0x2620                	// #9760
   26608:	strb	w9, [x8, #2]
   2660c:	strh	w10, [x8]
   26610:	mov	w8, #0x3                   	// #3
   26614:	ldr	x9, [x19, #8]
   26618:	add	x8, x9, x8
   2661c:	str	x8, [x19, #8]
   26620:	ldr	x20, [x20, #48]
   26624:	cbz	x20, 26648 <__cxa_demangle@@Base+0x13e50>
   26628:	ldr	x8, [x20]
   2662c:	mov	x0, x20
   26630:	mov	x1, x19
   26634:	ldr	x8, [x8, #32]
   26638:	blr	x8
   2663c:	ldrb	w8, [x20, #9]
   26640:	cmp	w8, #0x1
   26644:	b.ne	26654 <__cxa_demangle@@Base+0x13e5c>  // b.any
   26648:	ldp	x20, x19, [sp, #16]
   2664c:	ldp	x29, x30, [sp], #32
   26650:	ret
   26654:	ldr	x8, [x20]
   26658:	mov	x0, x20
   2665c:	mov	x1, x19
   26660:	ldp	x20, x19, [sp, #16]
   26664:	ldr	x2, [x8, #40]
   26668:	ldp	x29, x30, [sp], #32
   2666c:	br	x2
   26670:	bl	eeb0 <_ZSt9terminatev@plt>
   26674:	b	eb20 <_ZdlPv@plt>
   26678:	stp	x29, x30, [sp, #-48]!
   2667c:	str	x21, [sp, #16]
   26680:	stp	x20, x19, [sp, #32]
   26684:	mov	x29, sp
   26688:	ldr	x21, [x0, #16]
   2668c:	mov	x20, x0
   26690:	mov	x19, x1
   26694:	ldr	x8, [x21]
   26698:	mov	x0, x21
   2669c:	ldr	x8, [x8, #32]
   266a0:	blr	x8
   266a4:	ldrb	w8, [x21, #9]
   266a8:	cmp	w8, #0x1
   266ac:	b.eq	266c4 <__cxa_demangle@@Base+0x13ecc>  // b.none
   266b0:	ldr	x8, [x21]
   266b4:	mov	x0, x21
   266b8:	mov	x1, x19
   266bc:	ldr	x8, [x8, #40]
   266c0:	blr	x8
   266c4:	ldp	x8, x10, [x19, #8]
   266c8:	add	x9, x8, #0x2
   266cc:	cmp	x9, x10
   266d0:	b.cs	266dc <__cxa_demangle@@Base+0x13ee4>  // b.hs, b.nlast
   266d4:	ldr	x0, [x19]
   266d8:	b	26700 <__cxa_demangle@@Base+0x13f08>
   266dc:	ldr	x0, [x19]
   266e0:	lsl	x8, x10, #1
   266e4:	cmp	x8, x9
   266e8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   266ec:	str	x1, [x19, #16]
   266f0:	bl	ecc0 <realloc@plt>
   266f4:	str	x0, [x19]
   266f8:	cbz	x0, 267d8 <__cxa_demangle@@Base+0x13fe0>
   266fc:	ldr	x8, [x19, #8]
   26700:	mov	w9, #0x2820                	// #10272
   26704:	strh	w9, [x0, x8]
   26708:	ldr	x8, [x19, #8]
   2670c:	add	x8, x8, #0x2
   26710:	str	x8, [x19, #8]
   26714:	ldp	x21, x9, [x20, #24]
   26718:	subs	x20, x9, x21
   2671c:	b.eq	26778 <__cxa_demangle@@Base+0x13f80>  // b.none
   26720:	ldr	x10, [x19, #16]
   26724:	add	x9, x8, x20
   26728:	cmp	x9, x10
   2672c:	b.cs	26738 <__cxa_demangle@@Base+0x13f40>  // b.hs, b.nlast
   26730:	ldr	x0, [x19]
   26734:	b	2675c <__cxa_demangle@@Base+0x13f64>
   26738:	ldr	x0, [x19]
   2673c:	lsl	x8, x10, #1
   26740:	cmp	x8, x9
   26744:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   26748:	str	x1, [x19, #16]
   2674c:	bl	ecc0 <realloc@plt>
   26750:	str	x0, [x19]
   26754:	cbz	x0, 267d8 <__cxa_demangle@@Base+0x13fe0>
   26758:	ldr	x8, [x19, #8]
   2675c:	add	x0, x0, x8
   26760:	mov	x1, x21
   26764:	mov	x2, x20
   26768:	bl	eae0 <memmove@plt>
   2676c:	ldr	x8, [x19, #8]
   26770:	add	x8, x8, x20
   26774:	str	x8, [x19, #8]
   26778:	ldr	x10, [x19, #16]
   2677c:	add	x9, x8, #0x1
   26780:	cmp	x9, x10
   26784:	b.cs	26790 <__cxa_demangle@@Base+0x13f98>  // b.hs, b.nlast
   26788:	ldr	x0, [x19]
   2678c:	b	267b4 <__cxa_demangle@@Base+0x13fbc>
   26790:	ldr	x0, [x19]
   26794:	lsl	x8, x10, #1
   26798:	cmp	x8, x9
   2679c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   267a0:	str	x1, [x19, #16]
   267a4:	bl	ecc0 <realloc@plt>
   267a8:	str	x0, [x19]
   267ac:	cbz	x0, 267d8 <__cxa_demangle@@Base+0x13fe0>
   267b0:	ldr	x8, [x19, #8]
   267b4:	mov	w9, #0x29                  	// #41
   267b8:	strb	w9, [x0, x8]
   267bc:	ldr	x8, [x19, #8]
   267c0:	ldr	x21, [sp, #16]
   267c4:	add	x8, x8, #0x1
   267c8:	str	x8, [x19, #8]
   267cc:	ldp	x20, x19, [sp, #32]
   267d0:	ldp	x29, x30, [sp], #48
   267d4:	ret
   267d8:	bl	eeb0 <_ZSt9terminatev@plt>
   267dc:	b	eb20 <_ZdlPv@plt>
   267e0:	stp	x29, x30, [sp, #-96]!
   267e4:	stp	x28, x27, [sp, #16]
   267e8:	stp	x26, x25, [sp, #32]
   267ec:	stp	x24, x23, [sp, #48]
   267f0:	stp	x22, x21, [sp, #64]
   267f4:	stp	x20, x19, [sp, #80]
   267f8:	mov	x29, sp
   267fc:	ldp	x9, x8, [x0]
   26800:	mov	x19, x0
   26804:	cmp	x9, x8
   26808:	b.eq	26830 <__cxa_demangle@@Base+0x14038>  // b.none
   2680c:	ldrb	w10, [x9]
   26810:	cmp	w10, #0x72
   26814:	b.ne	26830 <__cxa_demangle@@Base+0x14038>  // b.any
   26818:	add	x9, x9, #0x1
   2681c:	mov	w25, #0x4                   	// #4
   26820:	str	x9, [x19]
   26824:	cmp	x9, x8
   26828:	b.ne	2683c <__cxa_demangle@@Base+0x14044>  // b.any
   2682c:	b	26878 <__cxa_demangle@@Base+0x14080>
   26830:	mov	w25, wzr
   26834:	cmp	x9, x8
   26838:	b.eq	26878 <__cxa_demangle@@Base+0x14080>  // b.none
   2683c:	ldrb	w10, [x9]
   26840:	cmp	w10, #0x56
   26844:	b.ne	26854 <__cxa_demangle@@Base+0x1405c>  // b.any
   26848:	add	x9, x9, #0x1
   2684c:	orr	w25, w25, #0x2
   26850:	str	x9, [x19]
   26854:	cmp	x9, x8
   26858:	b.eq	26878 <__cxa_demangle@@Base+0x14080>  // b.none
   2685c:	ldrb	w10, [x9]
   26860:	cmp	w10, #0x4b
   26864:	b.ne	2687c <__cxa_demangle@@Base+0x14084>  // b.any
   26868:	add	x9, x9, #0x1
   2686c:	orr	w25, w25, #0x1
   26870:	str	x9, [x19]
   26874:	b	2687c <__cxa_demangle@@Base+0x14084>
   26878:	mov	x9, x8
   2687c:	sub	x10, x8, x9
   26880:	cmp	x10, #0x2
   26884:	b.cc	269f0 <__cxa_demangle@@Base+0x141f8>  // b.lo, b.ul, b.last
   26888:	ldrb	w10, [x9]
   2688c:	cmp	w10, #0x44
   26890:	b.ne	269f0 <__cxa_demangle@@Base+0x141f8>  // b.any
   26894:	ldrb	w10, [x9, #1]
   26898:	cmp	w10, #0x6f
   2689c:	b.ne	26910 <__cxa_demangle@@Base+0x14118>  // b.any
   268a0:	ldr	x20, [x19, #4912]
   268a4:	add	x8, x9, #0x2
   268a8:	str	x8, [x19]
   268ac:	ldr	x8, [x20, #8]
   268b0:	add	x9, x8, #0x20
   268b4:	cmp	x9, #0xfef
   268b8:	b.ls	268d8 <__cxa_demangle@@Base+0x140e0>  // b.plast
   268bc:	mov	w0, #0x1000                	// #4096
   268c0:	bl	ec00 <malloc@plt>
   268c4:	cbz	x0, 26db4 <__cxa_demangle@@Base+0x145bc>
   268c8:	mov	x8, xzr
   268cc:	stp	x20, xzr, [x0]
   268d0:	mov	x20, x0
   268d4:	str	x0, [x19, #4912]
   268d8:	add	x9, x8, #0x20
   268dc:	add	x26, x20, x8
   268e0:	adrp	x8, 45000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x144f0>
   268e4:	adrp	x11, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   268e8:	add	x8, x8, #0xd60
   268ec:	mov	w10, #0x107                 	// #263
   268f0:	add	x11, x11, #0x461
   268f4:	movk	w10, #0x101, lsl #16
   268f8:	str	x9, [x20, #8]
   268fc:	str	x8, [x26, #16]!
   26900:	add	x8, x11, #0x8
   26904:	str	w10, [x26, #8]
   26908:	stp	x11, x8, [x26, #16]
   2690c:	b	269f4 <__cxa_demangle@@Base+0x141fc>
   26910:	ldrb	w10, [x9]
   26914:	cmp	w10, #0x44
   26918:	b.ne	269f0 <__cxa_demangle@@Base+0x141f8>  // b.any
   2691c:	ldrb	w10, [x9, #1]
   26920:	cmp	w10, #0x4f
   26924:	b.ne	269bc <__cxa_demangle@@Base+0x141c4>  // b.any
   26928:	add	x8, x9, #0x2
   2692c:	mov	x0, x19
   26930:	str	x8, [x19]
   26934:	bl	1a4e0 <__cxa_demangle@@Base+0x7ce8>
   26938:	cbz	x0, 26a84 <__cxa_demangle@@Base+0x1428c>
   2693c:	ldp	x8, x9, [x19]
   26940:	mov	x20, x0
   26944:	cmp	x8, x9
   26948:	b.eq	26a80 <__cxa_demangle@@Base+0x14288>  // b.none
   2694c:	ldrb	w9, [x8]
   26950:	cmp	w9, #0x45
   26954:	b.ne	26a80 <__cxa_demangle@@Base+0x14288>  // b.any
   26958:	ldr	x21, [x19, #4912]
   2695c:	add	x8, x8, #0x1
   26960:	str	x8, [x19]
   26964:	ldr	x8, [x21, #8]
   26968:	add	x9, x8, #0x20
   2696c:	cmp	x9, #0xff0
   26970:	b.cc	26990 <__cxa_demangle@@Base+0x14198>  // b.lo, b.ul, b.last
   26974:	mov	w0, #0x1000                	// #4096
   26978:	bl	ec00 <malloc@plt>
   2697c:	cbz	x0, 26db4 <__cxa_demangle@@Base+0x145bc>
   26980:	mov	x8, xzr
   26984:	stp	x21, xzr, [x0]
   26988:	mov	x21, x0
   2698c:	str	x0, [x19, #4912]
   26990:	add	x9, x8, #0x20
   26994:	add	x26, x21, x8
   26998:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   2699c:	add	x8, x8, #0x730
   269a0:	mov	w10, #0x110                 	// #272
   269a4:	movk	w10, #0x101, lsl #16
   269a8:	str	x9, [x21, #8]
   269ac:	str	x8, [x26, #16]!
   269b0:	str	w10, [x26, #8]
   269b4:	str	x20, [x26, #16]
   269b8:	b	269f4 <__cxa_demangle@@Base+0x141fc>
   269bc:	ldrb	w10, [x9]
   269c0:	cmp	w10, #0x44
   269c4:	b.ne	269f0 <__cxa_demangle@@Base+0x141f8>  // b.any
   269c8:	ldrb	w10, [x9, #1]
   269cc:	cmp	w10, #0x77
   269d0:	b.ne	269f0 <__cxa_demangle@@Base+0x141f8>  // b.any
   269d4:	ldp	x11, x10, [x19, #16]
   269d8:	add	x9, x9, #0x2
   269dc:	add	x26, x19, #0x28
   269e0:	str	x9, [x19]
   269e4:	sub	x10, x10, x11
   269e8:	asr	x24, x10, #3
   269ec:	b	26be0 <__cxa_demangle@@Base+0x143e8>
   269f0:	mov	x26, xzr
   269f4:	ldp	x8, x9, [x19]
   269f8:	sub	x10, x9, x8
   269fc:	cmp	x10, #0x2
   26a00:	b.cc	26a24 <__cxa_demangle@@Base+0x1422c>  // b.lo, b.ul, b.last
   26a04:	ldrb	w10, [x8]
   26a08:	cmp	w10, #0x44
   26a0c:	b.ne	26a24 <__cxa_demangle@@Base+0x1422c>  // b.any
   26a10:	ldrb	w10, [x8, #1]
   26a14:	cmp	w10, #0x78
   26a18:	b.ne	26a24 <__cxa_demangle@@Base+0x1422c>  // b.any
   26a1c:	add	x8, x8, #0x2
   26a20:	str	x8, [x19]
   26a24:	cmp	x8, x9
   26a28:	b.eq	26a80 <__cxa_demangle@@Base+0x14288>  // b.none
   26a2c:	ldrb	w10, [x8]
   26a30:	cmp	w10, #0x46
   26a34:	b.ne	26a80 <__cxa_demangle@@Base+0x14288>  // b.any
   26a38:	add	x10, x8, #0x1
   26a3c:	cmp	x10, x9
   26a40:	str	x10, [x19]
   26a44:	b.eq	26a5c <__cxa_demangle@@Base+0x14264>  // b.none
   26a48:	ldrb	w9, [x10]
   26a4c:	cmp	w9, #0x59
   26a50:	b.ne	26a5c <__cxa_demangle@@Base+0x14264>  // b.any
   26a54:	add	x8, x8, #0x2
   26a58:	str	x8, [x19]
   26a5c:	mov	x0, x19
   26a60:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   26a64:	cbz	x0, 26a84 <__cxa_demangle@@Base+0x1428c>
   26a68:	ldp	x9, x8, [x19, #16]
   26a6c:	mov	x20, x0
   26a70:	add	x28, x19, #0x28
   26a74:	sub	x8, x8, x9
   26a78:	asr	x27, x8, #3
   26a7c:	b	26ad4 <__cxa_demangle@@Base+0x142dc>
   26a80:	mov	x0, xzr
   26a84:	ldp	x20, x19, [sp, #80]
   26a88:	ldp	x22, x21, [sp, #64]
   26a8c:	ldp	x24, x23, [sp, #48]
   26a90:	ldp	x26, x25, [sp, #32]
   26a94:	ldp	x28, x27, [sp, #16]
   26a98:	ldp	x29, x30, [sp], #96
   26a9c:	ret
   26aa0:	mov	x0, x24
   26aa4:	bl	ecc0 <realloc@plt>
   26aa8:	mov	x23, x0
   26aac:	str	x0, [x19, #16]
   26ab0:	cbz	x0, 26db4 <__cxa_demangle@@Base+0x145bc>
   26ab4:	asr	x8, x22, #3
   26ab8:	asr	x9, x22, #2
   26abc:	add	x8, x23, x8, lsl #3
   26ac0:	add	x9, x23, x9, lsl #3
   26ac4:	stp	x8, x9, [x19, #24]
   26ac8:	add	x9, x8, #0x8
   26acc:	str	x9, [x19, #24]
   26ad0:	str	x21, [x8]
   26ad4:	ldp	x8, x9, [x19]
   26ad8:	cmp	x8, x9
   26adc:	b.eq	26b04 <__cxa_demangle@@Base+0x1430c>  // b.none
   26ae0:	ldrb	w10, [x8]
   26ae4:	cmp	w10, #0x45
   26ae8:	b.eq	26b9c <__cxa_demangle@@Base+0x143a4>  // b.none
   26aec:	ldrb	w10, [x8]
   26af0:	cmp	w10, #0x76
   26af4:	b.ne	26b04 <__cxa_demangle@@Base+0x1430c>  // b.any
   26af8:	add	x8, x8, #0x1
   26afc:	str	x8, [x19]
   26b00:	b	26ad4 <__cxa_demangle@@Base+0x142dc>
   26b04:	sub	x9, x9, x8
   26b08:	cmp	x9, #0x2
   26b0c:	b.cc	26b40 <__cxa_demangle@@Base+0x14348>  // b.lo, b.ul, b.last
   26b10:	ldrb	w9, [x8]
   26b14:	cmp	w9, #0x52
   26b18:	b.ne	26b2c <__cxa_demangle@@Base+0x14334>  // b.any
   26b1c:	ldrb	w9, [x8, #1]
   26b20:	cmp	w9, #0x45
   26b24:	b.eq	26c50 <__cxa_demangle@@Base+0x14458>  // b.none
   26b28:	ldrb	w9, [x8]
   26b2c:	cmp	w9, #0x4f
   26b30:	b.ne	26b40 <__cxa_demangle@@Base+0x14348>  // b.any
   26b34:	ldrb	w9, [x8, #1]
   26b38:	cmp	w9, #0x45
   26b3c:	b.eq	26c5c <__cxa_demangle@@Base+0x14464>  // b.none
   26b40:	mov	x0, x19
   26b44:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   26b48:	cbz	x0, 26a84 <__cxa_demangle@@Base+0x1428c>
   26b4c:	ldp	x8, x9, [x19, #24]
   26b50:	mov	x21, x0
   26b54:	cmp	x8, x9
   26b58:	b.ne	26ac8 <__cxa_demangle@@Base+0x142d0>  // b.any
   26b5c:	ldr	x24, [x19, #16]
   26b60:	sub	x22, x8, x24
   26b64:	cmp	x28, x24
   26b68:	lsl	x1, x22, #1
   26b6c:	b.ne	26aa0 <__cxa_demangle@@Base+0x142a8>  // b.any
   26b70:	mov	x0, x1
   26b74:	bl	ec00 <malloc@plt>
   26b78:	cbz	x0, 26db4 <__cxa_demangle@@Base+0x145bc>
   26b7c:	mov	x23, x0
   26b80:	cbz	x22, 26b94 <__cxa_demangle@@Base+0x1439c>
   26b84:	mov	x0, x23
   26b88:	mov	x1, x24
   26b8c:	mov	x2, x22
   26b90:	bl	eae0 <memmove@plt>
   26b94:	str	x23, [x19, #16]
   26b98:	b	26ab4 <__cxa_demangle@@Base+0x142bc>
   26b9c:	mov	w23, wzr
   26ba0:	mov	w10, #0x1                   	// #1
   26ba4:	b	26c64 <__cxa_demangle@@Base+0x1446c>
   26ba8:	mov	x0, x23
   26bac:	bl	ecc0 <realloc@plt>
   26bb0:	mov	x22, x0
   26bb4:	str	x0, [x19, #16]
   26bb8:	cbz	x0, 26db4 <__cxa_demangle@@Base+0x145bc>
   26bbc:	asr	x8, x21, #3
   26bc0:	asr	x9, x21, #2
   26bc4:	add	x8, x22, x8, lsl #3
   26bc8:	add	x9, x22, x9, lsl #3
   26bcc:	stp	x8, x9, [x19, #24]
   26bd0:	add	x9, x8, #0x8
   26bd4:	str	x9, [x19, #24]
   26bd8:	str	x20, [x8]
   26bdc:	ldp	x9, x8, [x19]
   26be0:	cmp	x9, x8
   26be4:	b.eq	26bf4 <__cxa_demangle@@Base+0x143fc>  // b.none
   26be8:	ldrb	w8, [x9]
   26bec:	cmp	w8, #0x45
   26bf0:	b.eq	26d14 <__cxa_demangle@@Base+0x1451c>  // b.none
   26bf4:	mov	x0, x19
   26bf8:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   26bfc:	cbz	x0, 26a84 <__cxa_demangle@@Base+0x1428c>
   26c00:	ldp	x8, x9, [x19, #24]
   26c04:	mov	x20, x0
   26c08:	cmp	x8, x9
   26c0c:	b.ne	26bd0 <__cxa_demangle@@Base+0x143d8>  // b.any
   26c10:	ldr	x23, [x19, #16]
   26c14:	sub	x21, x8, x23
   26c18:	cmp	x26, x23
   26c1c:	lsl	x1, x21, #1
   26c20:	b.ne	26ba8 <__cxa_demangle@@Base+0x143b0>  // b.any
   26c24:	mov	x0, x1
   26c28:	bl	ec00 <malloc@plt>
   26c2c:	cbz	x0, 26db4 <__cxa_demangle@@Base+0x145bc>
   26c30:	mov	x22, x0
   26c34:	cbz	x21, 26c48 <__cxa_demangle@@Base+0x14450>
   26c38:	mov	x0, x22
   26c3c:	mov	x1, x23
   26c40:	mov	x2, x21
   26c44:	bl	eae0 <memmove@plt>
   26c48:	str	x22, [x19, #16]
   26c4c:	b	26bbc <__cxa_demangle@@Base+0x143c4>
   26c50:	mov	w23, #0x1                   	// #1
   26c54:	mov	w10, #0x2                   	// #2
   26c58:	b	26c64 <__cxa_demangle@@Base+0x1446c>
   26c5c:	mov	w10, #0x2                   	// #2
   26c60:	mov	w23, #0x2                   	// #2
   26c64:	ldp	x9, x2, [x19, #16]
   26c68:	add	x8, x8, x10
   26c6c:	str	x8, [x19]
   26c70:	sub	x10, x2, x9
   26c74:	cmp	x27, x10, asr #3
   26c78:	b.hi	26db8 <__cxa_demangle@@Base+0x145c0>  // b.pmore
   26c7c:	add	x1, x9, x27, lsl #3
   26c80:	mov	x0, x19
   26c84:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   26c88:	ldp	x8, x9, [x19, #16]
   26c8c:	sub	x9, x9, x8
   26c90:	cmp	x27, x9, asr #3
   26c94:	b.hi	26dd8 <__cxa_demangle@@Base+0x145e0>  // b.pmore
   26c98:	ldr	x24, [x19, #4912]
   26c9c:	add	x8, x8, x27, lsl #3
   26ca0:	str	x8, [x19, #24]
   26ca4:	mov	x21, x0
   26ca8:	ldr	x8, [x24, #8]
   26cac:	mov	x22, x1
   26cb0:	add	x9, x8, #0x40
   26cb4:	cmp	x9, #0xff0
   26cb8:	b.cc	26cd8 <__cxa_demangle@@Base+0x144e0>  // b.lo, b.ul, b.last
   26cbc:	mov	w0, #0x1000                	// #4096
   26cc0:	bl	ec00 <malloc@plt>
   26cc4:	cbz	x0, 26db4 <__cxa_demangle@@Base+0x145bc>
   26cc8:	mov	x8, xzr
   26ccc:	stp	x24, xzr, [x0]
   26cd0:	mov	x24, x0
   26cd4:	str	x0, [x19, #4912]
   26cd8:	add	x9, x8, #0x40
   26cdc:	add	x0, x24, x8
   26ce0:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   26ce4:	add	x8, x8, #0x810
   26ce8:	mov	w10, #0xf                   	// #15
   26cec:	movk	w10, #0x1, lsl #16
   26cf0:	str	x9, [x24, #8]
   26cf4:	str	x8, [x0, #16]!
   26cf8:	str	w10, [x0, #8]
   26cfc:	stp	x20, x21, [x0, #16]
   26d00:	str	x22, [x0, #32]
   26d04:	str	w25, [x0, #40]
   26d08:	strb	w23, [x0, #44]
   26d0c:	str	x26, [x0, #48]
   26d10:	b	26a84 <__cxa_demangle@@Base+0x1428c>
   26d14:	ldp	x8, x2, [x19, #16]
   26d18:	add	x9, x9, #0x1
   26d1c:	str	x9, [x19]
   26d20:	sub	x10, x2, x8
   26d24:	cmp	x24, x10, asr #3
   26d28:	b.hi	26db8 <__cxa_demangle@@Base+0x145c0>  // b.pmore
   26d2c:	add	x1, x8, x24, lsl #3
   26d30:	mov	x0, x19
   26d34:	bl	21cf8 <__cxa_demangle@@Base+0xf500>
   26d38:	ldp	x8, x9, [x19, #16]
   26d3c:	sub	x9, x9, x8
   26d40:	cmp	x24, x9, asr #3
   26d44:	b.hi	26dd8 <__cxa_demangle@@Base+0x145e0>  // b.pmore
   26d48:	ldr	x22, [x19, #4912]
   26d4c:	add	x8, x8, x24, lsl #3
   26d50:	str	x8, [x19, #24]
   26d54:	mov	x20, x0
   26d58:	ldr	x8, [x22, #8]
   26d5c:	mov	x21, x1
   26d60:	add	x9, x8, #0x20
   26d64:	cmp	x9, #0xff0
   26d68:	b.cc	26d88 <__cxa_demangle@@Base+0x14590>  // b.lo, b.ul, b.last
   26d6c:	mov	w0, #0x1000                	// #4096
   26d70:	bl	ec00 <malloc@plt>
   26d74:	cbz	x0, 26db4 <__cxa_demangle@@Base+0x145bc>
   26d78:	mov	x8, xzr
   26d7c:	stp	x22, xzr, [x0]
   26d80:	mov	x22, x0
   26d84:	str	x0, [x19, #4912]
   26d88:	add	x9, x8, #0x20
   26d8c:	add	x26, x22, x8
   26d90:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   26d94:	add	x8, x8, #0x7a0
   26d98:	mov	w10, #0x111                 	// #273
   26d9c:	movk	w10, #0x101, lsl #16
   26da0:	str	x9, [x22, #8]
   26da4:	str	x8, [x26, #16]!
   26da8:	str	w10, [x26, #8]
   26dac:	stp	x20, x21, [x26, #16]
   26db0:	b	269f4 <__cxa_demangle@@Base+0x141fc>
   26db4:	bl	eeb0 <_ZSt9terminatev@plt>
   26db8:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   26dbc:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   26dc0:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   26dc4:	add	x0, x0, #0xdf
   26dc8:	add	x1, x1, #0xce9
   26dcc:	add	x3, x3, #0xfc
   26dd0:	mov	w2, #0x94b                 	// #2379
   26dd4:	bl	ee90 <__assert_fail@plt>
   26dd8:	adrp	x0, 2f000 <__cxa_thread_atexit@@Base+0x1be8>
   26ddc:	adrp	x1, 2e000 <__cxa_thread_atexit@@Base+0xbe8>
   26de0:	adrp	x3, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   26de4:	add	x0, x0, #0xa2e
   26de8:	add	x1, x1, #0xce9
   26dec:	add	x3, x3, #0x2b6
   26df0:	mov	w2, #0x8d9                 	// #2265
   26df4:	bl	ee90 <__assert_fail@plt>
   26df8:	stp	x29, x30, [sp, #-64]!
   26dfc:	stp	x24, x23, [sp, #16]
   26e00:	stp	x22, x21, [sp, #32]
   26e04:	stp	x20, x19, [sp, #48]
   26e08:	mov	x29, sp
   26e0c:	ldp	x10, x8, [x0]
   26e10:	mov	x19, x0
   26e14:	cmp	x10, x8
   26e18:	b.eq	26ebc <__cxa_demangle@@Base+0x146c4>  // b.none
   26e1c:	ldrb	w9, [x10]
   26e20:	cmp	w9, #0x55
   26e24:	b.ne	26e98 <__cxa_demangle@@Base+0x146a0>  // b.any
   26e28:	add	x9, x10, #0x1
   26e2c:	cmp	x8, x9
   26e30:	str	x9, [x19]
   26e34:	b.eq	26f84 <__cxa_demangle@@Base+0x1478c>  // b.none
   26e38:	ldrb	w11, [x9]
   26e3c:	sub	w11, w11, #0x30
   26e40:	cmp	w11, #0x9
   26e44:	b.hi	26fac <__cxa_demangle@@Base+0x147b4>  // b.pmore
   26e48:	add	x11, x10, #0x2
   26e4c:	str	x11, [x19]
   26e50:	ldrb	w9, [x10, #1]
   26e54:	cmp	x8, x11
   26e58:	sub	x10, x9, #0x30
   26e5c:	b.eq	26f9c <__cxa_demangle@@Base+0x147a4>  // b.none
   26e60:	mov	w12, #0xa                   	// #10
   26e64:	ldrb	w9, [x11]
   26e68:	sub	w9, w9, #0x30
   26e6c:	cmp	w9, #0xa
   26e70:	b.cs	26f9c <__cxa_demangle@@Base+0x147a4>  // b.hs, b.nlast
   26e74:	add	x9, x11, #0x1
   26e78:	str	x9, [x19]
   26e7c:	ldrb	w11, [x11]
   26e80:	cmp	x8, x9
   26e84:	madd	x10, x10, x12, x11
   26e88:	sub	x10, x10, #0x30
   26e8c:	mov	x11, x9
   26e90:	b.ne	26e64 <__cxa_demangle@@Base+0x1466c>  // b.any
   26e94:	b	26fa0 <__cxa_demangle@@Base+0x147a8>
   26e98:	ldrb	w9, [x10]
   26e9c:	cmp	w9, #0x72
   26ea0:	b.ne	26ebc <__cxa_demangle@@Base+0x146c4>  // b.any
   26ea4:	add	x10, x10, #0x1
   26ea8:	mov	w21, #0x4                   	// #4
   26eac:	str	x10, [x19]
   26eb0:	cmp	x10, x8
   26eb4:	b.ne	26ec8 <__cxa_demangle@@Base+0x146d0>  // b.any
   26eb8:	b	26f00 <__cxa_demangle@@Base+0x14708>
   26ebc:	mov	w21, wzr
   26ec0:	cmp	x10, x8
   26ec4:	b.eq	26f00 <__cxa_demangle@@Base+0x14708>  // b.none
   26ec8:	ldrb	w9, [x10]
   26ecc:	cmp	w9, #0x56
   26ed0:	b.ne	26ee0 <__cxa_demangle@@Base+0x146e8>  // b.any
   26ed4:	add	x10, x10, #0x1
   26ed8:	orr	w21, w21, #0x2
   26edc:	str	x10, [x19]
   26ee0:	cmp	x10, x8
   26ee4:	b.eq	26f00 <__cxa_demangle@@Base+0x14708>  // b.none
   26ee8:	ldrb	w8, [x10]
   26eec:	cmp	w8, #0x4b
   26ef0:	b.ne	26f00 <__cxa_demangle@@Base+0x14708>  // b.any
   26ef4:	add	x8, x10, #0x1
   26ef8:	orr	w21, w21, #0x1
   26efc:	str	x8, [x19]
   26f00:	mov	x0, x19
   26f04:	bl	15e70 <__cxa_demangle@@Base+0x3678>
   26f08:	mov	x20, x0
   26f0c:	cbz	x0, 271c0 <__cxa_demangle@@Base+0x149c8>
   26f10:	cbz	w21, 271c0 <__cxa_demangle@@Base+0x149c8>
   26f14:	ldr	x22, [x19, #4912]
   26f18:	ldr	x8, [x22, #8]
   26f1c:	add	x9, x8, #0x20
   26f20:	cmp	x9, #0xff0
   26f24:	b.cc	26f44 <__cxa_demangle@@Base+0x1474c>  // b.lo, b.ul, b.last
   26f28:	mov	w0, #0x1000                	// #4096
   26f2c:	bl	ec00 <malloc@plt>
   26f30:	cbz	x0, 271e4 <__cxa_demangle@@Base+0x149ec>
   26f34:	mov	x8, xzr
   26f38:	stp	x22, xzr, [x0]
   26f3c:	mov	x22, x0
   26f40:	str	x0, [x19, #4912]
   26f44:	add	x9, x8, #0x20
   26f48:	str	x9, [x22, #8]
   26f4c:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   26f50:	ldurh	w9, [x20, #9]
   26f54:	ldrb	w12, [x20, #11]
   26f58:	add	x8, x22, x8
   26f5c:	add	x10, x10, #0x960
   26f60:	str	x10, [x8, #16]!
   26f64:	mov	w11, #0x3                   	// #3
   26f68:	str	x20, [x8, #16]
   26f6c:	mov	x20, x8
   26f70:	strb	w11, [x8, #8]
   26f74:	str	w21, [x8, #12]
   26f78:	sturh	w9, [x8, #9]
   26f7c:	strb	w12, [x8, #11]
   26f80:	b	271c0 <__cxa_demangle@@Base+0x149c8>
   26f84:	mov	x22, xzr
   26f88:	mov	x23, xzr
   26f8c:	mov	x9, x8
   26f90:	cmp	x23, x22
   26f94:	b.ne	26fd8 <__cxa_demangle@@Base+0x147e0>  // b.any
   26f98:	b	271bc <__cxa_demangle@@Base+0x149c4>
   26f9c:	mov	x9, x11
   26fa0:	sub	x11, x8, x9
   26fa4:	cmp	x11, x10
   26fa8:	b.cs	26fc0 <__cxa_demangle@@Base+0x147c8>  // b.hs, b.nlast
   26fac:	mov	x22, xzr
   26fb0:	mov	x23, xzr
   26fb4:	cmp	x23, x22
   26fb8:	b.ne	26fd8 <__cxa_demangle@@Base+0x147e0>  // b.any
   26fbc:	b	271bc <__cxa_demangle@@Base+0x149c4>
   26fc0:	add	x22, x9, x10
   26fc4:	mov	x23, x9
   26fc8:	mov	x9, x22
   26fcc:	str	x22, [x19]
   26fd0:	cmp	x23, x22
   26fd4:	b.eq	271bc <__cxa_demangle@@Base+0x149c4>  // b.none
   26fd8:	sub	x10, x22, x23
   26fdc:	cmp	x10, #0x9
   26fe0:	b.cc	270c4 <__cxa_demangle@@Base+0x148cc>  // b.lo, b.ul, b.last
   26fe4:	ldrb	w10, [x23]
   26fe8:	cmp	w10, #0x6f
   26fec:	b.ne	270c4 <__cxa_demangle@@Base+0x148cc>  // b.any
   26ff0:	ldrb	w10, [x23, #1]
   26ff4:	cmp	w10, #0x62
   26ff8:	b.ne	270c4 <__cxa_demangle@@Base+0x148cc>  // b.any
   26ffc:	ldrb	w10, [x23, #2]
   27000:	cmp	w10, #0x6a
   27004:	b.ne	270c4 <__cxa_demangle@@Base+0x148cc>  // b.any
   27008:	ldrb	w10, [x23, #3]
   2700c:	cmp	w10, #0x63
   27010:	b.ne	270c4 <__cxa_demangle@@Base+0x148cc>  // b.any
   27014:	ldrb	w10, [x23, #4]
   27018:	cmp	w10, #0x70
   2701c:	b.ne	270c4 <__cxa_demangle@@Base+0x148cc>  // b.any
   27020:	ldrb	w10, [x23, #5]
   27024:	cmp	w10, #0x72
   27028:	b.ne	270c4 <__cxa_demangle@@Base+0x148cc>  // b.any
   2702c:	ldrb	w10, [x23, #6]
   27030:	cmp	w10, #0x6f
   27034:	b.ne	270c4 <__cxa_demangle@@Base+0x148cc>  // b.any
   27038:	ldrb	w10, [x23, #7]
   2703c:	cmp	w10, #0x74
   27040:	b.ne	270c4 <__cxa_demangle@@Base+0x148cc>  // b.any
   27044:	ldrb	w10, [x23, #8]
   27048:	cmp	w10, #0x6f
   2704c:	b.ne	270c4 <__cxa_demangle@@Base+0x148cc>  // b.any
   27050:	add	x10, x23, #0x9
   27054:	cmp	x22, x10
   27058:	stp	x10, x22, [x19]
   2705c:	b.eq	27150 <__cxa_demangle@@Base+0x14958>  // b.none
   27060:	ldrb	w11, [x10]
   27064:	sub	w11, w11, #0x30
   27068:	cmp	w11, #0x9
   2706c:	b.hi	27150 <__cxa_demangle@@Base+0x14958>  // b.pmore
   27070:	cmp	x10, x22
   27074:	b.eq	2713c <__cxa_demangle@@Base+0x14944>  // b.none
   27078:	mov	x11, xzr
   2707c:	mov	x12, x10
   27080:	add	x10, x10, #0x1
   27084:	str	x10, [x19]
   27088:	ldrb	w12, [x12]
   2708c:	cmp	x22, x10
   27090:	add	x11, x11, x12
   27094:	sub	x11, x11, #0x30
   27098:	b.eq	27134 <__cxa_demangle@@Base+0x1493c>  // b.none
   2709c:	ldrb	w12, [x10]
   270a0:	sub	w12, w12, #0x30
   270a4:	cmp	w12, #0xa
   270a8:	b.cs	27134 <__cxa_demangle@@Base+0x1493c>  // b.hs, b.nlast
   270ac:	add	x11, x11, x11, lsl #2
   270b0:	cmp	x22, x10
   270b4:	lsl	x11, x11, #1
   270b8:	b.ne	2707c <__cxa_demangle@@Base+0x14884>  // b.any
   270bc:	sub	x11, x11, #0x30
   270c0:	b	27140 <__cxa_demangle@@Base+0x14948>
   270c4:	mov	x0, x19
   270c8:	bl	26df8 <__cxa_demangle@@Base+0x14600>
   270cc:	cbz	x0, 271bc <__cxa_demangle@@Base+0x149c4>
   270d0:	ldr	x24, [x19, #4912]
   270d4:	mov	x21, x0
   270d8:	ldr	x8, [x24, #8]
   270dc:	add	x9, x8, #0x30
   270e0:	cmp	x9, #0xff0
   270e4:	b.cc	27104 <__cxa_demangle@@Base+0x1490c>  // b.lo, b.ul, b.last
   270e8:	mov	w0, #0x1000                	// #4096
   270ec:	bl	ec00 <malloc@plt>
   270f0:	cbz	x0, 271e4 <__cxa_demangle@@Base+0x149ec>
   270f4:	mov	x8, xzr
   270f8:	stp	x24, xzr, [x0]
   270fc:	mov	x24, x0
   27100:	str	x0, [x19, #4912]
   27104:	add	x9, x8, #0x30
   27108:	add	x20, x24, x8
   2710c:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   27110:	mov	w10, #0x102                 	// #258
   27114:	add	x8, x8, #0x8f0
   27118:	movk	w10, #0x101, lsl #16
   2711c:	str	x9, [x24, #8]
   27120:	str	x8, [x20, #16]!
   27124:	str	w10, [x20, #8]
   27128:	stp	x21, x23, [x20, #16]
   2712c:	str	x22, [x20, #32]
   27130:	b	271c0 <__cxa_demangle@@Base+0x149c8>
   27134:	mov	x23, x10
   27138:	b	27144 <__cxa_demangle@@Base+0x1494c>
   2713c:	mov	x11, #0xffffffffffffffd0    	// #-48
   27140:	mov	x23, x22
   27144:	sub	x10, x22, x10
   27148:	cmp	x10, x11
   2714c:	b.cs	271d8 <__cxa_demangle@@Base+0x149e0>  // b.hs, b.nlast
   27150:	mov	x22, xzr
   27154:	mov	x23, xzr
   27158:	cmp	x23, x22
   2715c:	stp	x9, x8, [x19]
   27160:	b.eq	271bc <__cxa_demangle@@Base+0x149c4>  // b.none
   27164:	mov	x0, x19
   27168:	bl	26df8 <__cxa_demangle@@Base+0x14600>
   2716c:	cbz	x0, 271bc <__cxa_demangle@@Base+0x149c4>
   27170:	ldr	x24, [x19, #4912]
   27174:	mov	x21, x0
   27178:	ldr	x8, [x24, #8]
   2717c:	add	x9, x8, #0x30
   27180:	cmp	x9, #0xff0
   27184:	b.cc	271a4 <__cxa_demangle@@Base+0x149ac>  // b.lo, b.ul, b.last
   27188:	mov	w0, #0x1000                	// #4096
   2718c:	bl	ec00 <malloc@plt>
   27190:	cbz	x0, 271e4 <__cxa_demangle@@Base+0x149ec>
   27194:	mov	x8, xzr
   27198:	stp	x24, xzr, [x0]
   2719c:	mov	x24, x0
   271a0:	str	x0, [x19, #4912]
   271a4:	add	x9, x8, #0x30
   271a8:	add	x20, x24, x8
   271ac:	adrp	x8, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   271b0:	mov	w10, #0x10a                 	// #266
   271b4:	add	x8, x8, #0x880
   271b8:	b	27118 <__cxa_demangle@@Base+0x14920>
   271bc:	mov	x20, xzr
   271c0:	mov	x0, x20
   271c4:	ldp	x20, x19, [sp, #48]
   271c8:	ldp	x22, x21, [sp, #32]
   271cc:	ldp	x24, x23, [sp, #16]
   271d0:	ldp	x29, x30, [sp], #64
   271d4:	ret
   271d8:	add	x22, x23, x11
   271dc:	str	x22, [x19]
   271e0:	b	27158 <__cxa_demangle@@Base+0x14960>
   271e4:	bl	eeb0 <_ZSt9terminatev@plt>
   271e8:	stp	x29, x30, [sp, #-64]!
   271ec:	str	x23, [sp, #16]
   271f0:	stp	x22, x21, [sp, #32]
   271f4:	stp	x20, x19, [sp, #48]
   271f8:	mov	x29, sp
   271fc:	ldp	x8, x9, [x0]
   27200:	mov	x19, x0
   27204:	sub	x9, x9, x8
   27208:	cmp	x9, #0x2
   2720c:	b.cc	272a0 <__cxa_demangle@@Base+0x14aa8>  // b.lo, b.ul, b.last
   27210:	ldrb	w9, [x8]
   27214:	cmp	w9, #0x54
   27218:	b.ne	272a0 <__cxa_demangle@@Base+0x14aa8>  // b.any
   2721c:	ldrb	w9, [x8, #1]
   27220:	cmp	w9, #0x73
   27224:	b.ne	27240 <__cxa_demangle@@Base+0x14a48>  // b.any
   27228:	adrp	x22, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2722c:	add	x8, x8, #0x2
   27230:	add	x22, x22, #0x48d
   27234:	str	x8, [x19]
   27238:	add	x21, x22, #0x6
   2723c:	b	272a8 <__cxa_demangle@@Base+0x14ab0>
   27240:	ldrb	w9, [x8]
   27244:	cmp	w9, #0x54
   27248:	b.ne	272a0 <__cxa_demangle@@Base+0x14aa8>  // b.any
   2724c:	ldrb	w9, [x8, #1]
   27250:	cmp	w9, #0x75
   27254:	b.ne	27270 <__cxa_demangle@@Base+0x14a78>  // b.any
   27258:	adrp	x22, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2725c:	add	x8, x8, #0x2
   27260:	add	x22, x22, #0x494
   27264:	str	x8, [x19]
   27268:	add	x21, x22, #0x5
   2726c:	b	272a8 <__cxa_demangle@@Base+0x14ab0>
   27270:	ldrb	w9, [x8]
   27274:	cmp	w9, #0x54
   27278:	b.ne	272a0 <__cxa_demangle@@Base+0x14aa8>  // b.any
   2727c:	ldrb	w9, [x8, #1]
   27280:	cmp	w9, #0x65
   27284:	b.ne	272a0 <__cxa_demangle@@Base+0x14aa8>  // b.any
   27288:	adrp	x22, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2728c:	add	x8, x8, #0x2
   27290:	add	x22, x22, #0x49a
   27294:	str	x8, [x19]
   27298:	add	x21, x22, #0x4
   2729c:	b	272a8 <__cxa_demangle@@Base+0x14ab0>
   272a0:	mov	x21, xzr
   272a4:	mov	x22, xzr
   272a8:	mov	x0, x19
   272ac:	mov	x1, xzr
   272b0:	bl	17688 <__cxa_demangle@@Base+0x4e90>
   272b4:	mov	x20, x0
   272b8:	cbz	x0, 27324 <__cxa_demangle@@Base+0x14b2c>
   272bc:	cmp	x22, x21
   272c0:	b.eq	27324 <__cxa_demangle@@Base+0x14b2c>  // b.none
   272c4:	ldr	x23, [x19, #4912]
   272c8:	ldr	x8, [x23, #8]
   272cc:	add	x9, x8, #0x30
   272d0:	cmp	x9, #0xff0
   272d4:	b.cc	272f4 <__cxa_demangle@@Base+0x14afc>  // b.lo, b.ul, b.last
   272d8:	mov	w0, #0x1000                	// #4096
   272dc:	bl	ec00 <malloc@plt>
   272e0:	cbz	x0, 2733c <__cxa_demangle@@Base+0x14b44>
   272e4:	mov	x8, xzr
   272e8:	stp	x23, xzr, [x0]
   272ec:	mov	x23, x0
   272f0:	str	x0, [x19, #4912]
   272f4:	adrp	x10, 47000 <_ZTSN10__cxxabiv121__vmi_class_type_infoE@@Base+0x164f0>
   272f8:	add	x9, x8, #0x30
   272fc:	add	x8, x23, x8
   27300:	add	x10, x10, #0xb90
   27304:	mov	w11, #0x106                 	// #262
   27308:	str	x9, [x23, #8]
   2730c:	str	x10, [x8, #16]!
   27310:	movk	w11, #0x101, lsl #16
   27314:	str	x20, [x8, #32]
   27318:	mov	x20, x8
   2731c:	str	w11, [x8, #8]
   27320:	stp	x22, x21, [x8, #16]
   27324:	mov	x0, x20
   27328:	ldp	x20, x19, [sp, #48]
   2732c:	ldp	x22, x21, [sp, #32]
   27330:	ldr	x23, [sp, #16]
   27334:	ldp	x29, x30, [sp], #64
   27338:	ret
   2733c:	bl	eeb0 <_ZSt9terminatev@plt>
   27340:	stp	x29, x30, [sp, #-32]!
   27344:	stp	x20, x19, [sp, #16]
   27348:	mov	x29, sp
   2734c:	ldp	x8, x10, [x1, #8]
   27350:	mov	x19, x1
   27354:	mov	x20, x0
   27358:	add	x9, x8, #0x9
   2735c:	cmp	x9, x10
   27360:	b.cs	2736c <__cxa_demangle@@Base+0x14b74>  // b.hs, b.nlast
   27364:	ldr	x0, [x19]
   27368:	b	27390 <__cxa_demangle@@Base+0x14b98>
   2736c:	ldr	x0, [x19]
   27370:	lsl	x8, x10, #1
   27374:	cmp	x8, x9
   27378:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2737c:	str	x1, [x19, #16]
   27380:	bl	ecc0 <realloc@plt>
   27384:	str	x0, [x19]
   27388:	cbz	x0, 2744c <__cxa_demangle@@Base+0x14c54>
   2738c:	ldr	x8, [x19, #8]
   27390:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   27394:	add	x9, x9, #0x46a
   27398:	ldr	x9, [x9]
   2739c:	add	x8, x0, x8
   273a0:	mov	w10, #0x28                  	// #40
   273a4:	strb	w10, [x8, #8]
   273a8:	str	x9, [x8]
   273ac:	ldr	x8, [x19, #8]
   273b0:	mov	x1, x19
   273b4:	add	x8, x8, #0x9
   273b8:	str	x8, [x19, #8]
   273bc:	ldr	x20, [x20, #16]
   273c0:	ldr	x8, [x20]
   273c4:	mov	x0, x20
   273c8:	ldr	x8, [x8, #32]
   273cc:	blr	x8
   273d0:	ldrb	w8, [x20, #9]
   273d4:	cmp	w8, #0x1
   273d8:	b.eq	273f0 <__cxa_demangle@@Base+0x14bf8>  // b.none
   273dc:	ldr	x8, [x20]
   273e0:	mov	x0, x20
   273e4:	mov	x1, x19
   273e8:	ldr	x8, [x8, #40]
   273ec:	blr	x8
   273f0:	ldp	x8, x10, [x19, #8]
   273f4:	add	x9, x8, #0x1
   273f8:	cmp	x9, x10
   273fc:	b.cs	27408 <__cxa_demangle@@Base+0x14c10>  // b.hs, b.nlast
   27400:	ldr	x0, [x19]
   27404:	b	2742c <__cxa_demangle@@Base+0x14c34>
   27408:	ldr	x0, [x19]
   2740c:	lsl	x8, x10, #1
   27410:	cmp	x8, x9
   27414:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27418:	str	x1, [x19, #16]
   2741c:	bl	ecc0 <realloc@plt>
   27420:	str	x0, [x19]
   27424:	cbz	x0, 2744c <__cxa_demangle@@Base+0x14c54>
   27428:	ldr	x8, [x19, #8]
   2742c:	mov	w9, #0x29                  	// #41
   27430:	strb	w9, [x0, x8]
   27434:	ldr	x8, [x19, #8]
   27438:	add	x8, x8, #0x1
   2743c:	str	x8, [x19, #8]
   27440:	ldp	x20, x19, [sp, #16]
   27444:	ldp	x29, x30, [sp], #32
   27448:	ret
   2744c:	bl	eeb0 <_ZSt9terminatev@plt>
   27450:	b	eb20 <_ZdlPv@plt>
   27454:	stp	x29, x30, [sp, #-32]!
   27458:	stp	x20, x19, [sp, #16]
   2745c:	mov	x29, sp
   27460:	ldp	x8, x10, [x1, #8]
   27464:	mov	x19, x1
   27468:	mov	x20, x0
   2746c:	add	x9, x8, #0x6
   27470:	cmp	x9, x10
   27474:	b.cs	27480 <__cxa_demangle@@Base+0x14c88>  // b.hs, b.nlast
   27478:	ldr	x0, [x19]
   2747c:	b	274a4 <__cxa_demangle@@Base+0x14cac>
   27480:	ldr	x0, [x19]
   27484:	lsl	x8, x10, #1
   27488:	cmp	x8, x9
   2748c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27490:	str	x1, [x19, #16]
   27494:	bl	ecc0 <realloc@plt>
   27498:	str	x0, [x19]
   2749c:	cbz	x0, 2752c <__cxa_demangle@@Base+0x14d34>
   274a0:	ldr	x8, [x19, #8]
   274a4:	mov	w10, #0x6874                	// #26740
   274a8:	add	x8, x0, x8
   274ac:	mov	w9, #0x2877                	// #10359
   274b0:	movk	w10, #0x6f72, lsl #16
   274b4:	strh	w9, [x8, #4]
   274b8:	str	w10, [x8]
   274bc:	ldr	x8, [x19, #8]
   274c0:	add	x0, x20, #0x10
   274c4:	mov	x1, x19
   274c8:	add	x8, x8, #0x6
   274cc:	str	x8, [x19, #8]
   274d0:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   274d4:	ldp	x8, x10, [x19, #8]
   274d8:	add	x9, x8, #0x1
   274dc:	cmp	x9, x10
   274e0:	b.cs	274ec <__cxa_demangle@@Base+0x14cf4>  // b.hs, b.nlast
   274e4:	ldr	x0, [x19]
   274e8:	b	27514 <__cxa_demangle@@Base+0x14d1c>
   274ec:	ldr	x0, [x19]
   274f0:	lsl	x8, x10, #1
   274f4:	cmp	x8, x9
   274f8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   274fc:	str	x1, [x19, #16]
   27500:	bl	ecc0 <realloc@plt>
   27504:	str	x0, [x19]
   27508:	cbz	x0, 2752c <__cxa_demangle@@Base+0x14d34>
   2750c:	ldr	x8, [x19, #8]
   27510:	add	x9, x8, #0x1
   27514:	str	x9, [x19, #8]
   27518:	mov	w9, #0x29                  	// #41
   2751c:	strb	w9, [x0, x8]
   27520:	ldp	x20, x19, [sp, #16]
   27524:	ldp	x29, x30, [sp], #32
   27528:	ret
   2752c:	bl	eeb0 <_ZSt9terminatev@plt>
   27530:	b	eb20 <_ZdlPv@plt>
   27534:	mov	w0, #0x1                   	// #1
   27538:	ret
   2753c:	mov	w0, #0x1                   	// #1
   27540:	ret
   27544:	stp	x29, x30, [sp, #-32]!
   27548:	str	x19, [sp, #16]
   2754c:	mov	x29, sp
   27550:	ldr	x0, [x0, #16]
   27554:	mov	x19, x1
   27558:	ldr	x8, [x0]
   2755c:	ldr	x8, [x8, #32]
   27560:	blr	x8
   27564:	ldp	x8, x10, [x19, #8]
   27568:	add	x9, x8, #0x1
   2756c:	cmp	x9, x10
   27570:	b.cs	2757c <__cxa_demangle@@Base+0x14d84>  // b.hs, b.nlast
   27574:	ldr	x0, [x19]
   27578:	b	275a0 <__cxa_demangle@@Base+0x14da8>
   2757c:	ldr	x0, [x19]
   27580:	lsl	x8, x10, #1
   27584:	cmp	x8, x9
   27588:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2758c:	str	x1, [x19, #16]
   27590:	bl	ecc0 <realloc@plt>
   27594:	str	x0, [x19]
   27598:	cbz	x0, 275c0 <__cxa_demangle@@Base+0x14dc8>
   2759c:	ldr	x8, [x19, #8]
   275a0:	mov	w9, #0x20                  	// #32
   275a4:	strb	w9, [x0, x8]
   275a8:	ldr	x8, [x19, #8]
   275ac:	add	x8, x8, #0x1
   275b0:	str	x8, [x19, #8]
   275b4:	ldr	x19, [sp, #16]
   275b8:	ldp	x29, x30, [sp], #32
   275bc:	ret
   275c0:	bl	eeb0 <_ZSt9terminatev@plt>
   275c4:	stp	x29, x30, [sp, #-32]!
   275c8:	stp	x20, x19, [sp, #16]
   275cc:	mov	x29, sp
   275d0:	ldp	x8, x10, [x1, #8]
   275d4:	mov	x19, x1
   275d8:	mov	x20, x0
   275dc:	add	x9, x8, #0x1
   275e0:	cmp	x9, x10
   275e4:	b.cs	275f0 <__cxa_demangle@@Base+0x14df8>  // b.hs, b.nlast
   275e8:	ldr	x0, [x19]
   275ec:	b	27614 <__cxa_demangle@@Base+0x14e1c>
   275f0:	ldr	x0, [x19]
   275f4:	lsl	x8, x10, #1
   275f8:	cmp	x8, x9
   275fc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27600:	str	x1, [x19, #16]
   27604:	bl	ecc0 <realloc@plt>
   27608:	str	x0, [x19]
   2760c:	cbz	x0, 27938 <__cxa_demangle@@Base+0x15140>
   27610:	ldr	x8, [x19, #8]
   27614:	mov	w9, #0x28                  	// #40
   27618:	strb	w9, [x0, x8]
   2761c:	ldr	x8, [x19, #8]
   27620:	add	x0, x20, #0x18
   27624:	mov	x1, x19
   27628:	add	x8, x8, #0x1
   2762c:	str	x8, [x19, #8]
   27630:	bl	20494 <__cxa_demangle@@Base+0xdc9c>
   27634:	ldp	x8, x10, [x19, #8]
   27638:	add	x9, x8, #0x1
   2763c:	cmp	x9, x10
   27640:	b.cs	2764c <__cxa_demangle@@Base+0x14e54>  // b.hs, b.nlast
   27644:	ldr	x0, [x19]
   27648:	b	27670 <__cxa_demangle@@Base+0x14e78>
   2764c:	ldr	x0, [x19]
   27650:	lsl	x8, x10, #1
   27654:	cmp	x8, x9
   27658:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2765c:	str	x1, [x19, #16]
   27660:	bl	ecc0 <realloc@plt>
   27664:	str	x0, [x19]
   27668:	cbz	x0, 27938 <__cxa_demangle@@Base+0x15140>
   2766c:	ldr	x8, [x19, #8]
   27670:	mov	w9, #0x29                  	// #41
   27674:	strb	w9, [x0, x8]
   27678:	ldr	x8, [x19, #8]
   2767c:	mov	x1, x19
   27680:	add	x8, x8, #0x1
   27684:	str	x8, [x19, #8]
   27688:	ldr	x0, [x20, #16]
   2768c:	ldr	x8, [x0]
   27690:	ldr	x8, [x8, #40]
   27694:	blr	x8
   27698:	ldr	w8, [x20, #40]
   2769c:	tbz	w8, #0, 27704 <__cxa_demangle@@Base+0x14f0c>
   276a0:	ldp	x8, x10, [x19, #8]
   276a4:	add	x9, x8, #0x6
   276a8:	cmp	x9, x10
   276ac:	b.cs	276b8 <__cxa_demangle@@Base+0x14ec0>  // b.hs, b.nlast
   276b0:	ldr	x0, [x19]
   276b4:	b	276dc <__cxa_demangle@@Base+0x14ee4>
   276b8:	ldr	x0, [x19]
   276bc:	lsl	x8, x10, #1
   276c0:	cmp	x8, x9
   276c4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   276c8:	str	x1, [x19, #16]
   276cc:	bl	ecc0 <realloc@plt>
   276d0:	str	x0, [x19]
   276d4:	cbz	x0, 27938 <__cxa_demangle@@Base+0x15140>
   276d8:	ldr	x8, [x19, #8]
   276dc:	mov	w10, #0x6320                	// #25376
   276e0:	add	x8, x0, x8
   276e4:	mov	w9, #0x7473                	// #29811
   276e8:	movk	w10, #0x6e6f, lsl #16
   276ec:	strh	w9, [x8, #4]
   276f0:	str	w10, [x8]
   276f4:	ldr	x8, [x19, #8]
   276f8:	add	x8, x8, #0x6
   276fc:	str	x8, [x19, #8]
   27700:	ldr	w8, [x20, #40]
   27704:	tbz	w8, #1, 27770 <__cxa_demangle@@Base+0x14f78>
   27708:	ldp	x8, x10, [x19, #8]
   2770c:	add	x9, x8, #0x9
   27710:	cmp	x9, x10
   27714:	b.cs	27720 <__cxa_demangle@@Base+0x14f28>  // b.hs, b.nlast
   27718:	ldr	x0, [x19]
   2771c:	b	27744 <__cxa_demangle@@Base+0x14f4c>
   27720:	ldr	x0, [x19]
   27724:	lsl	x8, x10, #1
   27728:	cmp	x8, x9
   2772c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27730:	str	x1, [x19, #16]
   27734:	bl	ecc0 <realloc@plt>
   27738:	str	x0, [x19]
   2773c:	cbz	x0, 27938 <__cxa_demangle@@Base+0x15140>
   27740:	ldr	x8, [x19, #8]
   27744:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   27748:	add	x9, x9, #0x37f
   2774c:	ldr	x9, [x9]
   27750:	add	x8, x0, x8
   27754:	mov	w10, #0x65                  	// #101
   27758:	strb	w10, [x8, #8]
   2775c:	str	x9, [x8]
   27760:	ldr	x8, [x19, #8]
   27764:	add	x8, x8, #0x9
   27768:	str	x8, [x19, #8]
   2776c:	ldr	w8, [x20, #40]
   27770:	tbz	w8, #2, 277d8 <__cxa_demangle@@Base+0x14fe0>
   27774:	ldp	x8, x10, [x19, #8]
   27778:	add	x9, x8, #0x9
   2777c:	cmp	x9, x10
   27780:	b.cs	2778c <__cxa_demangle@@Base+0x14f94>  // b.hs, b.nlast
   27784:	ldr	x0, [x19]
   27788:	b	277b0 <__cxa_demangle@@Base+0x14fb8>
   2778c:	ldr	x0, [x19]
   27790:	lsl	x8, x10, #1
   27794:	cmp	x8, x9
   27798:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2779c:	str	x1, [x19, #16]
   277a0:	bl	ecc0 <realloc@plt>
   277a4:	str	x0, [x19]
   277a8:	cbz	x0, 27938 <__cxa_demangle@@Base+0x15140>
   277ac:	ldr	x8, [x19, #8]
   277b0:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   277b4:	add	x9, x9, #0x389
   277b8:	ldr	x9, [x9]
   277bc:	add	x8, x0, x8
   277c0:	mov	w10, #0x74                  	// #116
   277c4:	strb	w10, [x8, #8]
   277c8:	str	x9, [x8]
   277cc:	ldr	x8, [x19, #8]
   277d0:	add	x8, x8, #0x9
   277d4:	str	x8, [x19, #8]
   277d8:	ldrb	w8, [x20, #44]
   277dc:	cmp	w8, #0x2
   277e0:	b.eq	27804 <__cxa_demangle@@Base+0x1500c>  // b.none
   277e4:	cmp	w8, #0x1
   277e8:	b.ne	27898 <__cxa_demangle@@Base+0x150a0>  // b.any
   277ec:	ldp	x8, x10, [x19, #8]
   277f0:	add	x9, x8, #0x2
   277f4:	cmp	x9, x10
   277f8:	b.cs	2781c <__cxa_demangle@@Base+0x15024>  // b.hs, b.nlast
   277fc:	ldr	x0, [x19]
   27800:	b	27840 <__cxa_demangle@@Base+0x15048>
   27804:	ldp	x8, x10, [x19, #8]
   27808:	add	x9, x8, #0x3
   2780c:	cmp	x9, x10
   27810:	b.cs	27850 <__cxa_demangle@@Base+0x15058>  // b.hs, b.nlast
   27814:	ldr	x0, [x19]
   27818:	b	27874 <__cxa_demangle@@Base+0x1507c>
   2781c:	ldr	x0, [x19]
   27820:	lsl	x8, x10, #1
   27824:	cmp	x8, x9
   27828:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2782c:	str	x1, [x19, #16]
   27830:	bl	ecc0 <realloc@plt>
   27834:	str	x0, [x19]
   27838:	cbz	x0, 27938 <__cxa_demangle@@Base+0x15140>
   2783c:	ldr	x8, [x19, #8]
   27840:	mov	w9, #0x2620                	// #9760
   27844:	strh	w9, [x0, x8]
   27848:	mov	w8, #0x2                   	// #2
   2784c:	b	2788c <__cxa_demangle@@Base+0x15094>
   27850:	ldr	x0, [x19]
   27854:	lsl	x8, x10, #1
   27858:	cmp	x8, x9
   2785c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27860:	str	x1, [x19, #16]
   27864:	bl	ecc0 <realloc@plt>
   27868:	str	x0, [x19]
   2786c:	cbz	x0, 27938 <__cxa_demangle@@Base+0x15140>
   27870:	ldr	x8, [x19, #8]
   27874:	add	x8, x0, x8
   27878:	mov	w9, #0x26                  	// #38
   2787c:	mov	w10, #0x2620                	// #9760
   27880:	strb	w9, [x8, #2]
   27884:	strh	w10, [x8]
   27888:	mov	w8, #0x3                   	// #3
   2788c:	ldr	x9, [x19, #8]
   27890:	add	x8, x9, x8
   27894:	str	x8, [x19, #8]
   27898:	ldr	x8, [x20, #48]
   2789c:	cbz	x8, 27910 <__cxa_demangle@@Base+0x15118>
   278a0:	ldp	x8, x10, [x19, #8]
   278a4:	add	x9, x8, #0x1
   278a8:	cmp	x9, x10
   278ac:	b.cs	278b8 <__cxa_demangle@@Base+0x150c0>  // b.hs, b.nlast
   278b0:	ldr	x0, [x19]
   278b4:	b	278e0 <__cxa_demangle@@Base+0x150e8>
   278b8:	ldr	x0, [x19]
   278bc:	lsl	x8, x10, #1
   278c0:	cmp	x8, x9
   278c4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   278c8:	str	x1, [x19, #16]
   278cc:	bl	ecc0 <realloc@plt>
   278d0:	str	x0, [x19]
   278d4:	cbz	x0, 27938 <__cxa_demangle@@Base+0x15140>
   278d8:	ldr	x8, [x19, #8]
   278dc:	add	x9, x8, #0x1
   278e0:	str	x9, [x19, #8]
   278e4:	mov	w9, #0x20                  	// #32
   278e8:	strb	w9, [x0, x8]
   278ec:	ldr	x20, [x20, #48]
   278f0:	mov	x1, x19
   278f4:	ldr	x8, [x20]
   278f8:	mov	x0, x20
   278fc:	ldr	x8, [x8, #32]
   27900:	blr	x8
   27904:	ldrb	w8, [x20, #9]
   27908:	cmp	w8, #0x1
   2790c:	b.ne	2791c <__cxa_demangle@@Base+0x15124>  // b.any
   27910:	ldp	x20, x19, [sp, #16]
   27914:	ldp	x29, x30, [sp], #32
   27918:	ret
   2791c:	ldr	x8, [x20]
   27920:	mov	x0, x20
   27924:	mov	x1, x19
   27928:	ldp	x20, x19, [sp, #16]
   2792c:	ldr	x2, [x8, #40]
   27930:	ldp	x29, x30, [sp], #32
   27934:	br	x2
   27938:	bl	eeb0 <_ZSt9terminatev@plt>
   2793c:	b	eb20 <_ZdlPv@plt>
   27940:	stp	x29, x30, [sp, #-48]!
   27944:	str	x21, [sp, #16]
   27948:	stp	x20, x19, [sp, #32]
   2794c:	mov	x29, sp
   27950:	ldr	x21, [x0, #16]
   27954:	mov	x20, x0
   27958:	mov	x19, x1
   2795c:	ldr	x8, [x21]
   27960:	mov	x0, x21
   27964:	ldr	x8, [x8, #32]
   27968:	blr	x8
   2796c:	ldrb	w8, [x21, #9]
   27970:	cmp	w8, #0x1
   27974:	b.eq	2798c <__cxa_demangle@@Base+0x15194>  // b.none
   27978:	ldr	x8, [x21]
   2797c:	mov	x0, x21
   27980:	mov	x1, x19
   27984:	ldr	x8, [x8, #40]
   27988:	blr	x8
   2798c:	ldp	x8, x10, [x19, #8]
   27990:	add	x9, x8, #0x1
   27994:	cmp	x9, x10
   27998:	b.cs	279a4 <__cxa_demangle@@Base+0x151ac>  // b.hs, b.nlast
   2799c:	ldr	x0, [x19]
   279a0:	b	279c8 <__cxa_demangle@@Base+0x151d0>
   279a4:	ldr	x0, [x19]
   279a8:	lsl	x8, x10, #1
   279ac:	cmp	x8, x9
   279b0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   279b4:	str	x1, [x19, #16]
   279b8:	bl	ecc0 <realloc@plt>
   279bc:	str	x0, [x19]
   279c0:	cbz	x0, 27aa0 <__cxa_demangle@@Base+0x152a8>
   279c4:	ldr	x8, [x19, #8]
   279c8:	mov	w9, #0x3c                  	// #60
   279cc:	strb	w9, [x0, x8]
   279d0:	ldr	x8, [x19, #8]
   279d4:	add	x8, x8, #0x1
   279d8:	str	x8, [x19, #8]
   279dc:	ldp	x21, x9, [x20, #24]
   279e0:	subs	x20, x9, x21
   279e4:	b.eq	27a40 <__cxa_demangle@@Base+0x15248>  // b.none
   279e8:	ldr	x10, [x19, #16]
   279ec:	add	x9, x8, x20
   279f0:	cmp	x9, x10
   279f4:	b.cs	27a00 <__cxa_demangle@@Base+0x15208>  // b.hs, b.nlast
   279f8:	ldr	x0, [x19]
   279fc:	b	27a24 <__cxa_demangle@@Base+0x1522c>
   27a00:	ldr	x0, [x19]
   27a04:	lsl	x8, x10, #1
   27a08:	cmp	x8, x9
   27a0c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27a10:	str	x1, [x19, #16]
   27a14:	bl	ecc0 <realloc@plt>
   27a18:	str	x0, [x19]
   27a1c:	cbz	x0, 27aa0 <__cxa_demangle@@Base+0x152a8>
   27a20:	ldr	x8, [x19, #8]
   27a24:	add	x0, x0, x8
   27a28:	mov	x1, x21
   27a2c:	mov	x2, x20
   27a30:	bl	eae0 <memmove@plt>
   27a34:	ldr	x8, [x19, #8]
   27a38:	add	x8, x8, x20
   27a3c:	str	x8, [x19, #8]
   27a40:	ldr	x10, [x19, #16]
   27a44:	add	x9, x8, #0x1
   27a48:	cmp	x9, x10
   27a4c:	b.cs	27a58 <__cxa_demangle@@Base+0x15260>  // b.hs, b.nlast
   27a50:	ldr	x0, [x19]
   27a54:	b	27a7c <__cxa_demangle@@Base+0x15284>
   27a58:	ldr	x0, [x19]
   27a5c:	lsl	x8, x10, #1
   27a60:	cmp	x8, x9
   27a64:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27a68:	str	x1, [x19, #16]
   27a6c:	bl	ecc0 <realloc@plt>
   27a70:	str	x0, [x19]
   27a74:	cbz	x0, 27aa0 <__cxa_demangle@@Base+0x152a8>
   27a78:	ldr	x8, [x19, #8]
   27a7c:	mov	w9, #0x3e                  	// #62
   27a80:	strb	w9, [x0, x8]
   27a84:	ldr	x8, [x19, #8]
   27a88:	ldr	x21, [sp, #16]
   27a8c:	add	x8, x8, #0x1
   27a90:	str	x8, [x19, #8]
   27a94:	ldp	x20, x19, [sp, #32]
   27a98:	ldp	x29, x30, [sp], #48
   27a9c:	ret
   27aa0:	bl	eeb0 <_ZSt9terminatev@plt>
   27aa4:	b	eb20 <_ZdlPv@plt>
   27aa8:	stp	x29, x30, [sp, #-48]!
   27aac:	str	x21, [sp, #16]
   27ab0:	stp	x20, x19, [sp, #32]
   27ab4:	mov	x29, sp
   27ab8:	ldr	x21, [x0, #16]
   27abc:	mov	x20, x0
   27ac0:	mov	x19, x1
   27ac4:	ldr	x8, [x21]
   27ac8:	mov	x0, x21
   27acc:	ldr	x8, [x8, #32]
   27ad0:	blr	x8
   27ad4:	ldrb	w8, [x21, #9]
   27ad8:	cmp	w8, #0x1
   27adc:	b.eq	27af4 <__cxa_demangle@@Base+0x152fc>  // b.none
   27ae0:	ldr	x8, [x21]
   27ae4:	mov	x0, x21
   27ae8:	mov	x1, x19
   27aec:	ldr	x8, [x8, #40]
   27af0:	blr	x8
   27af4:	ldp	x8, x10, [x19, #8]
   27af8:	add	x9, x8, #0x1
   27afc:	cmp	x9, x10
   27b00:	b.cs	27b0c <__cxa_demangle@@Base+0x15314>  // b.hs, b.nlast
   27b04:	ldr	x0, [x19]
   27b08:	b	27b30 <__cxa_demangle@@Base+0x15338>
   27b0c:	ldr	x0, [x19]
   27b10:	lsl	x8, x10, #1
   27b14:	cmp	x8, x9
   27b18:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27b1c:	str	x1, [x19, #16]
   27b20:	bl	ecc0 <realloc@plt>
   27b24:	str	x0, [x19]
   27b28:	cbz	x0, 27bb8 <__cxa_demangle@@Base+0x153c0>
   27b2c:	ldr	x8, [x19, #8]
   27b30:	mov	w9, #0x20                  	// #32
   27b34:	strb	w9, [x0, x8]
   27b38:	ldr	x8, [x19, #8]
   27b3c:	add	x8, x8, #0x1
   27b40:	str	x8, [x19, #8]
   27b44:	ldp	x21, x9, [x20, #24]
   27b48:	subs	x20, x9, x21
   27b4c:	b.eq	27ba8 <__cxa_demangle@@Base+0x153b0>  // b.none
   27b50:	ldr	x10, [x19, #16]
   27b54:	add	x9, x8, x20
   27b58:	cmp	x9, x10
   27b5c:	b.cs	27b68 <__cxa_demangle@@Base+0x15370>  // b.hs, b.nlast
   27b60:	ldr	x0, [x19]
   27b64:	b	27b8c <__cxa_demangle@@Base+0x15394>
   27b68:	ldr	x0, [x19]
   27b6c:	lsl	x8, x10, #1
   27b70:	cmp	x8, x9
   27b74:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27b78:	str	x1, [x19, #16]
   27b7c:	bl	ecc0 <realloc@plt>
   27b80:	str	x0, [x19]
   27b84:	cbz	x0, 27bb8 <__cxa_demangle@@Base+0x153c0>
   27b88:	ldr	x8, [x19, #8]
   27b8c:	add	x0, x0, x8
   27b90:	mov	x1, x21
   27b94:	mov	x2, x20
   27b98:	bl	eae0 <memmove@plt>
   27b9c:	ldr	x8, [x19, #8]
   27ba0:	add	x8, x8, x20
   27ba4:	str	x8, [x19, #8]
   27ba8:	ldp	x20, x19, [sp, #32]
   27bac:	ldr	x21, [sp, #16]
   27bb0:	ldp	x29, x30, [sp], #48
   27bb4:	ret
   27bb8:	bl	eeb0 <_ZSt9terminatev@plt>
   27bbc:	b	eb20 <_ZdlPv@plt>
   27bc0:	ldr	x0, [x0, #16]
   27bc4:	ldrb	w8, [x0, #9]
   27bc8:	cmp	w8, #0x2
   27bcc:	b.ne	27bdc <__cxa_demangle@@Base+0x153e4>  // b.any
   27bd0:	ldr	x8, [x0]
   27bd4:	ldr	x2, [x8]
   27bd8:	br	x2
   27bdc:	cmp	w8, #0x0
   27be0:	cset	w0, eq  // eq = none
   27be4:	ret
   27be8:	ldr	x0, [x0, #16]
   27bec:	ldrb	w8, [x0, #10]
   27bf0:	cmp	w8, #0x2
   27bf4:	b.ne	27c04 <__cxa_demangle@@Base+0x1540c>  // b.any
   27bf8:	ldr	x8, [x0]
   27bfc:	ldr	x2, [x8, #8]
   27c00:	br	x2
   27c04:	cmp	w8, #0x0
   27c08:	cset	w0, eq  // eq = none
   27c0c:	ret
   27c10:	ldr	x0, [x0, #16]
   27c14:	ldrb	w8, [x0, #11]
   27c18:	cmp	w8, #0x2
   27c1c:	b.ne	27c2c <__cxa_demangle@@Base+0x15434>  // b.any
   27c20:	ldr	x8, [x0]
   27c24:	ldr	x2, [x8, #16]
   27c28:	br	x2
   27c2c:	cmp	w8, #0x0
   27c30:	cset	w0, eq  // eq = none
   27c34:	ret
   27c38:	stp	x29, x30, [sp, #-32]!
   27c3c:	stp	x20, x19, [sp, #16]
   27c40:	mov	x29, sp
   27c44:	mov	x20, x0
   27c48:	ldr	x0, [x0, #16]
   27c4c:	mov	x19, x1
   27c50:	ldr	x8, [x0]
   27c54:	ldr	x8, [x8, #32]
   27c58:	blr	x8
   27c5c:	ldr	w8, [x20, #12]
   27c60:	tbz	w8, #0, 27cc8 <__cxa_demangle@@Base+0x154d0>
   27c64:	ldp	x8, x10, [x19, #8]
   27c68:	add	x9, x8, #0x6
   27c6c:	cmp	x9, x10
   27c70:	b.cs	27c7c <__cxa_demangle@@Base+0x15484>  // b.hs, b.nlast
   27c74:	ldr	x0, [x19]
   27c78:	b	27ca0 <__cxa_demangle@@Base+0x154a8>
   27c7c:	ldr	x0, [x19]
   27c80:	lsl	x8, x10, #1
   27c84:	cmp	x8, x9
   27c88:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27c8c:	str	x1, [x19, #16]
   27c90:	bl	ecc0 <realloc@plt>
   27c94:	str	x0, [x19]
   27c98:	cbz	x0, 27da8 <__cxa_demangle@@Base+0x155b0>
   27c9c:	ldr	x8, [x19, #8]
   27ca0:	mov	w10, #0x6320                	// #25376
   27ca4:	add	x8, x0, x8
   27ca8:	mov	w9, #0x7473                	// #29811
   27cac:	movk	w10, #0x6e6f, lsl #16
   27cb0:	strh	w9, [x8, #4]
   27cb4:	str	w10, [x8]
   27cb8:	ldr	x8, [x19, #8]
   27cbc:	add	x8, x8, #0x6
   27cc0:	str	x8, [x19, #8]
   27cc4:	ldr	w8, [x20, #12]
   27cc8:	tbz	w8, #1, 27d34 <__cxa_demangle@@Base+0x1553c>
   27ccc:	ldp	x8, x10, [x19, #8]
   27cd0:	add	x9, x8, #0x9
   27cd4:	cmp	x9, x10
   27cd8:	b.cs	27ce4 <__cxa_demangle@@Base+0x154ec>  // b.hs, b.nlast
   27cdc:	ldr	x0, [x19]
   27ce0:	b	27d08 <__cxa_demangle@@Base+0x15510>
   27ce4:	ldr	x0, [x19]
   27ce8:	lsl	x8, x10, #1
   27cec:	cmp	x8, x9
   27cf0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27cf4:	str	x1, [x19, #16]
   27cf8:	bl	ecc0 <realloc@plt>
   27cfc:	str	x0, [x19]
   27d00:	cbz	x0, 27da8 <__cxa_demangle@@Base+0x155b0>
   27d04:	ldr	x8, [x19, #8]
   27d08:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   27d0c:	add	x9, x9, #0x37f
   27d10:	ldr	x9, [x9]
   27d14:	add	x8, x0, x8
   27d18:	mov	w10, #0x65                  	// #101
   27d1c:	strb	w10, [x8, #8]
   27d20:	str	x9, [x8]
   27d24:	ldr	x8, [x19, #8]
   27d28:	add	x8, x8, #0x9
   27d2c:	str	x8, [x19, #8]
   27d30:	ldr	w8, [x20, #12]
   27d34:	tbz	w8, #2, 27d9c <__cxa_demangle@@Base+0x155a4>
   27d38:	ldp	x8, x10, [x19, #8]
   27d3c:	add	x9, x8, #0x9
   27d40:	cmp	x9, x10
   27d44:	b.cs	27d50 <__cxa_demangle@@Base+0x15558>  // b.hs, b.nlast
   27d48:	ldr	x0, [x19]
   27d4c:	b	27d74 <__cxa_demangle@@Base+0x1557c>
   27d50:	ldr	x0, [x19]
   27d54:	lsl	x8, x10, #1
   27d58:	cmp	x8, x9
   27d5c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27d60:	str	x1, [x19, #16]
   27d64:	bl	ecc0 <realloc@plt>
   27d68:	str	x0, [x19]
   27d6c:	cbz	x0, 27da8 <__cxa_demangle@@Base+0x155b0>
   27d70:	ldr	x8, [x19, #8]
   27d74:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   27d78:	add	x9, x9, #0x389
   27d7c:	ldr	x9, [x9]
   27d80:	add	x8, x0, x8
   27d84:	mov	w10, #0x74                  	// #116
   27d88:	strb	w10, [x8, #8]
   27d8c:	str	x9, [x8]
   27d90:	ldr	x8, [x19, #8]
   27d94:	add	x8, x8, #0x9
   27d98:	str	x8, [x19, #8]
   27d9c:	ldp	x20, x19, [sp, #16]
   27da0:	ldp	x29, x30, [sp], #32
   27da4:	ret
   27da8:	bl	eeb0 <_ZSt9terminatev@plt>
   27dac:	ldr	x0, [x0, #16]
   27db0:	ldr	x8, [x0]
   27db4:	ldr	x2, [x8, #40]
   27db8:	br	x2
   27dbc:	b	eb20 <_ZdlPv@plt>
   27dc0:	stp	x29, x30, [sp, #-32]!
   27dc4:	stp	x20, x19, [sp, #16]
   27dc8:	mov	x29, sp
   27dcc:	ldp	x8, x10, [x1, #8]
   27dd0:	mov	x19, x1
   27dd4:	mov	x20, x0
   27dd8:	add	x9, x8, #0xd
   27ddc:	cmp	x9, x10
   27de0:	b.cs	27dec <__cxa_demangle@@Base+0x155f4>  // b.hs, b.nlast
   27de4:	ldr	x0, [x19]
   27de8:	b	27e10 <__cxa_demangle@@Base+0x15618>
   27dec:	ldr	x0, [x19]
   27df0:	lsl	x8, x10, #1
   27df4:	cmp	x8, x9
   27df8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27dfc:	str	x1, [x19, #16]
   27e00:	bl	ecc0 <realloc@plt>
   27e04:	str	x0, [x19]
   27e08:	cbz	x0, 27ecc <__cxa_demangle@@Base+0x156d4>
   27e0c:	ldr	x8, [x19, #8]
   27e10:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   27e14:	add	x9, x9, #0x47b
   27e18:	ldur	x10, [x9, #5]
   27e1c:	ldr	x9, [x9]
   27e20:	add	x8, x0, x8
   27e24:	mov	x1, x19
   27e28:	stur	x10, [x8, #5]
   27e2c:	str	x9, [x8]
   27e30:	ldr	x8, [x19, #8]
   27e34:	add	x8, x8, #0xd
   27e38:	str	x8, [x19, #8]
   27e3c:	ldr	x20, [x20, #16]
   27e40:	ldr	x8, [x20]
   27e44:	mov	x0, x20
   27e48:	ldr	x8, [x8, #32]
   27e4c:	blr	x8
   27e50:	ldrb	w8, [x20, #9]
   27e54:	cmp	w8, #0x1
   27e58:	b.eq	27e70 <__cxa_demangle@@Base+0x15678>  // b.none
   27e5c:	ldr	x8, [x20]
   27e60:	mov	x0, x20
   27e64:	mov	x1, x19
   27e68:	ldr	x8, [x8, #40]
   27e6c:	blr	x8
   27e70:	ldp	x8, x10, [x19, #8]
   27e74:	add	x9, x8, #0x1
   27e78:	cmp	x9, x10
   27e7c:	b.cs	27e88 <__cxa_demangle@@Base+0x15690>  // b.hs, b.nlast
   27e80:	ldr	x0, [x19]
   27e84:	b	27eac <__cxa_demangle@@Base+0x156b4>
   27e88:	ldr	x0, [x19]
   27e8c:	lsl	x8, x10, #1
   27e90:	cmp	x8, x9
   27e94:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27e98:	str	x1, [x19, #16]
   27e9c:	bl	ecc0 <realloc@plt>
   27ea0:	str	x0, [x19]
   27ea4:	cbz	x0, 27ecc <__cxa_demangle@@Base+0x156d4>
   27ea8:	ldr	x8, [x19, #8]
   27eac:	mov	w9, #0x5d                  	// #93
   27eb0:	strb	w9, [x0, x8]
   27eb4:	ldr	x8, [x19, #8]
   27eb8:	add	x8, x8, #0x1
   27ebc:	str	x8, [x19, #8]
   27ec0:	ldp	x20, x19, [sp, #16]
   27ec4:	ldp	x29, x30, [sp], #32
   27ec8:	ret
   27ecc:	bl	eeb0 <_ZSt9terminatev@plt>
   27ed0:	b	eb20 <_ZdlPv@plt>
   27ed4:	stp	x29, x30, [sp, #-48]!
   27ed8:	str	x21, [sp, #16]
   27edc:	stp	x20, x19, [sp, #32]
   27ee0:	mov	x29, sp
   27ee4:	ldr	x21, [x0, #16]
   27ee8:	mov	x20, x0
   27eec:	mov	x19, x1
   27ef0:	ldr	x8, [x21]
   27ef4:	mov	x0, x21
   27ef8:	ldr	x8, [x8, #32]
   27efc:	blr	x8
   27f00:	ldrb	w8, [x21, #9]
   27f04:	cmp	w8, #0x1
   27f08:	b.eq	27f20 <__cxa_demangle@@Base+0x15728>  // b.none
   27f0c:	ldr	x8, [x21]
   27f10:	mov	x0, x21
   27f14:	mov	x1, x19
   27f18:	ldr	x8, [x8, #40]
   27f1c:	blr	x8
   27f20:	ldp	x8, x10, [x19, #8]
   27f24:	add	x9, x8, #0x8
   27f28:	cmp	x9, x10
   27f2c:	b.cs	27f38 <__cxa_demangle@@Base+0x15740>  // b.hs, b.nlast
   27f30:	ldr	x0, [x19]
   27f34:	b	27f5c <__cxa_demangle@@Base+0x15764>
   27f38:	ldr	x0, [x19]
   27f3c:	lsl	x8, x10, #1
   27f40:	cmp	x8, x9
   27f44:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27f48:	str	x1, [x19, #16]
   27f4c:	bl	ecc0 <realloc@plt>
   27f50:	str	x0, [x19]
   27f54:	cbz	x0, 28018 <__cxa_demangle@@Base+0x15820>
   27f58:	ldr	x8, [x19, #8]
   27f5c:	mov	x9, #0x7620                	// #30240
   27f60:	movk	x9, #0x6365, lsl #16
   27f64:	movk	x9, #0x6f74, lsl #32
   27f68:	movk	x9, #0x5b72, lsl #48
   27f6c:	str	x9, [x0, x8]
   27f70:	ldr	x8, [x19, #8]
   27f74:	add	x8, x8, #0x8
   27f78:	str	x8, [x19, #8]
   27f7c:	ldr	x20, [x20, #24]
   27f80:	cbz	x20, 27fb8 <__cxa_demangle@@Base+0x157c0>
   27f84:	ldr	x8, [x20]
   27f88:	mov	x0, x20
   27f8c:	mov	x1, x19
   27f90:	ldr	x8, [x8, #32]
   27f94:	blr	x8
   27f98:	ldrb	w8, [x20, #9]
   27f9c:	cmp	w8, #0x1
   27fa0:	b.eq	27fb8 <__cxa_demangle@@Base+0x157c0>  // b.none
   27fa4:	ldr	x8, [x20]
   27fa8:	mov	x0, x20
   27fac:	mov	x1, x19
   27fb0:	ldr	x8, [x8, #40]
   27fb4:	blr	x8
   27fb8:	ldp	x8, x10, [x19, #8]
   27fbc:	add	x9, x8, #0x1
   27fc0:	cmp	x9, x10
   27fc4:	b.cs	27fd0 <__cxa_demangle@@Base+0x157d8>  // b.hs, b.nlast
   27fc8:	ldr	x0, [x19]
   27fcc:	b	27ff4 <__cxa_demangle@@Base+0x157fc>
   27fd0:	ldr	x0, [x19]
   27fd4:	lsl	x8, x10, #1
   27fd8:	cmp	x8, x9
   27fdc:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   27fe0:	str	x1, [x19, #16]
   27fe4:	bl	ecc0 <realloc@plt>
   27fe8:	str	x0, [x19]
   27fec:	cbz	x0, 28018 <__cxa_demangle@@Base+0x15820>
   27ff0:	ldr	x8, [x19, #8]
   27ff4:	mov	w9, #0x5d                  	// #93
   27ff8:	strb	w9, [x0, x8]
   27ffc:	ldr	x8, [x19, #8]
   28000:	ldr	x21, [sp, #16]
   28004:	add	x8, x8, #0x1
   28008:	str	x8, [x19, #8]
   2800c:	ldp	x20, x19, [sp, #32]
   28010:	ldp	x29, x30, [sp], #48
   28014:	ret
   28018:	bl	eeb0 <_ZSt9terminatev@plt>
   2801c:	b	eb20 <_ZdlPv@plt>
   28020:	mov	w0, #0x1                   	// #1
   28024:	ret
   28028:	mov	w0, #0x1                   	// #1
   2802c:	ret
   28030:	ldr	x0, [x0, #16]
   28034:	ldr	x8, [x0]
   28038:	ldr	x2, [x8, #32]
   2803c:	br	x2
   28040:	stp	x29, x30, [sp, #-48]!
   28044:	str	x21, [sp, #16]
   28048:	stp	x20, x19, [sp, #32]
   2804c:	mov	x29, sp
   28050:	ldr	x8, [x1, #8]
   28054:	mov	x19, x1
   28058:	mov	x20, x0
   2805c:	cbz	x8, 28074 <__cxa_demangle@@Base+0x1587c>
   28060:	ldr	x9, [x19]
   28064:	add	x9, x8, x9
   28068:	ldurb	w9, [x9, #-1]
   2806c:	cmp	w9, #0x5d
   28070:	b.eq	280c4 <__cxa_demangle@@Base+0x158cc>  // b.none
   28074:	ldr	x10, [x19, #16]
   28078:	add	x9, x8, #0x1
   2807c:	cmp	x9, x10
   28080:	b.cs	2808c <__cxa_demangle@@Base+0x15894>  // b.hs, b.nlast
   28084:	ldr	x0, [x19]
   28088:	b	280b0 <__cxa_demangle@@Base+0x158b8>
   2808c:	ldr	x0, [x19]
   28090:	lsl	x8, x10, #1
   28094:	cmp	x8, x9
   28098:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2809c:	str	x1, [x19, #16]
   280a0:	bl	ecc0 <realloc@plt>
   280a4:	str	x0, [x19]
   280a8:	cbz	x0, 281c0 <__cxa_demangle@@Base+0x159c8>
   280ac:	ldr	x8, [x19, #8]
   280b0:	mov	w9, #0x20                  	// #32
   280b4:	strb	w9, [x0, x8]
   280b8:	ldr	x8, [x19, #8]
   280bc:	add	x8, x8, #0x1
   280c0:	str	x8, [x19, #8]
   280c4:	ldr	x10, [x19, #16]
   280c8:	add	x9, x8, #0x1
   280cc:	cmp	x9, x10
   280d0:	b.cs	280dc <__cxa_demangle@@Base+0x158e4>  // b.hs, b.nlast
   280d4:	ldr	x0, [x19]
   280d8:	b	28100 <__cxa_demangle@@Base+0x15908>
   280dc:	ldr	x0, [x19]
   280e0:	lsl	x8, x10, #1
   280e4:	cmp	x8, x9
   280e8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   280ec:	str	x1, [x19, #16]
   280f0:	bl	ecc0 <realloc@plt>
   280f4:	str	x0, [x19]
   280f8:	cbz	x0, 281c0 <__cxa_demangle@@Base+0x159c8>
   280fc:	ldr	x8, [x19, #8]
   28100:	mov	w9, #0x5b                  	// #91
   28104:	strb	w9, [x0, x8]
   28108:	ldr	x8, [x19, #8]
   2810c:	add	x8, x8, #0x1
   28110:	str	x8, [x19, #8]
   28114:	ldr	x21, [x20, #24]
   28118:	cbz	x21, 28150 <__cxa_demangle@@Base+0x15958>
   2811c:	ldr	x8, [x21]
   28120:	mov	x0, x21
   28124:	mov	x1, x19
   28128:	ldr	x8, [x8, #32]
   2812c:	blr	x8
   28130:	ldrb	w8, [x21, #9]
   28134:	cmp	w8, #0x1
   28138:	b.eq	28150 <__cxa_demangle@@Base+0x15958>  // b.none
   2813c:	ldr	x8, [x21]
   28140:	mov	x0, x21
   28144:	mov	x1, x19
   28148:	ldr	x8, [x8, #40]
   2814c:	blr	x8
   28150:	ldp	x8, x10, [x19, #8]
   28154:	add	x9, x8, #0x1
   28158:	cmp	x9, x10
   2815c:	b.cs	28168 <__cxa_demangle@@Base+0x15970>  // b.hs, b.nlast
   28160:	ldr	x0, [x19]
   28164:	b	2818c <__cxa_demangle@@Base+0x15994>
   28168:	ldr	x0, [x19]
   2816c:	lsl	x8, x10, #1
   28170:	cmp	x8, x9
   28174:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   28178:	str	x1, [x19, #16]
   2817c:	bl	ecc0 <realloc@plt>
   28180:	str	x0, [x19]
   28184:	cbz	x0, 281c0 <__cxa_demangle@@Base+0x159c8>
   28188:	ldr	x8, [x19, #8]
   2818c:	mov	w9, #0x5d                  	// #93
   28190:	strb	w9, [x0, x8]
   28194:	ldr	x8, [x19, #8]
   28198:	mov	x1, x19
   2819c:	ldr	x21, [sp, #16]
   281a0:	add	x8, x8, #0x1
   281a4:	str	x8, [x19, #8]
   281a8:	ldr	x0, [x20, #16]
   281ac:	ldp	x20, x19, [sp, #32]
   281b0:	ldr	x8, [x0]
   281b4:	ldr	x2, [x8, #40]
   281b8:	ldp	x29, x30, [sp], #48
   281bc:	br	x2
   281c0:	bl	eeb0 <_ZSt9terminatev@plt>
   281c4:	b	eb20 <_ZdlPv@plt>
   281c8:	ldr	x0, [x0, #24]
   281cc:	ldrb	w8, [x0, #9]
   281d0:	cmp	w8, #0x2
   281d4:	b.ne	281e4 <__cxa_demangle@@Base+0x159ec>  // b.any
   281d8:	ldr	x8, [x0]
   281dc:	ldr	x2, [x8]
   281e0:	br	x2
   281e4:	cmp	w8, #0x0
   281e8:	cset	w0, eq  // eq = none
   281ec:	ret
   281f0:	stp	x29, x30, [sp, #-32]!
   281f4:	stp	x20, x19, [sp, #16]
   281f8:	mov	x29, sp
   281fc:	mov	x20, x0
   28200:	ldr	x0, [x0, #24]
   28204:	mov	x19, x1
   28208:	ldr	x8, [x0]
   2820c:	ldr	x8, [x8, #32]
   28210:	blr	x8
   28214:	ldr	x0, [x20, #24]
   28218:	ldrb	w8, [x0, #10]
   2821c:	cbz	w8, 28264 <__cxa_demangle@@Base+0x15a6c>
   28220:	cmp	w8, #0x2
   28224:	b.ne	28240 <__cxa_demangle@@Base+0x15a48>  // b.any
   28228:	ldr	x8, [x0]
   2822c:	mov	x1, x19
   28230:	ldr	x8, [x8, #8]
   28234:	blr	x8
   28238:	tbnz	w0, #0, 28264 <__cxa_demangle@@Base+0x15a6c>
   2823c:	ldr	x0, [x20, #24]
   28240:	ldrb	w8, [x0, #11]
   28244:	cbz	w8, 28264 <__cxa_demangle@@Base+0x15a6c>
   28248:	cmp	w8, #0x2
   2824c:	b.ne	282ac <__cxa_demangle@@Base+0x15ab4>  // b.any
   28250:	ldr	x8, [x0]
   28254:	mov	x1, x19
   28258:	ldr	x8, [x8, #16]
   2825c:	blr	x8
   28260:	tbz	w0, #0, 282ac <__cxa_demangle@@Base+0x15ab4>
   28264:	ldp	x8, x10, [x19, #8]
   28268:	add	x9, x8, #0x1
   2826c:	cmp	x9, x10
   28270:	b.cs	2827c <__cxa_demangle@@Base+0x15a84>  // b.hs, b.nlast
   28274:	ldr	x0, [x19]
   28278:	b	282a0 <__cxa_demangle@@Base+0x15aa8>
   2827c:	ldr	x0, [x19]
   28280:	lsl	x8, x10, #1
   28284:	cmp	x8, x9
   28288:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2828c:	str	x1, [x19, #16]
   28290:	bl	ecc0 <realloc@plt>
   28294:	str	x0, [x19]
   28298:	cbz	x0, 283a0 <__cxa_demangle@@Base+0x15ba8>
   2829c:	ldr	x8, [x19, #8]
   282a0:	add	x8, x0, x8
   282a4:	mov	w9, #0x28                  	// #40
   282a8:	b	282f0 <__cxa_demangle@@Base+0x15af8>
   282ac:	ldp	x8, x10, [x19, #8]
   282b0:	add	x9, x8, #0x1
   282b4:	cmp	x9, x10
   282b8:	b.cs	282c4 <__cxa_demangle@@Base+0x15acc>  // b.hs, b.nlast
   282bc:	ldr	x0, [x19]
   282c0:	b	282e8 <__cxa_demangle@@Base+0x15af0>
   282c4:	ldr	x0, [x19]
   282c8:	lsl	x8, x10, #1
   282cc:	cmp	x8, x9
   282d0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   282d4:	str	x1, [x19, #16]
   282d8:	bl	ecc0 <realloc@plt>
   282dc:	str	x0, [x19]
   282e0:	cbz	x0, 283a0 <__cxa_demangle@@Base+0x15ba8>
   282e4:	ldr	x8, [x19, #8]
   282e8:	add	x8, x0, x8
   282ec:	mov	w9, #0x20                  	// #32
   282f0:	strb	w9, [x8]
   282f4:	ldr	x8, [x19, #8]
   282f8:	mov	x1, x19
   282fc:	add	x8, x8, #0x1
   28300:	str	x8, [x19, #8]
   28304:	ldr	x20, [x20, #16]
   28308:	ldr	x8, [x20]
   2830c:	mov	x0, x20
   28310:	ldr	x8, [x8, #32]
   28314:	blr	x8
   28318:	ldrb	w8, [x20, #9]
   2831c:	cmp	w8, #0x1
   28320:	b.eq	28338 <__cxa_demangle@@Base+0x15b40>  // b.none
   28324:	ldr	x8, [x20]
   28328:	mov	x0, x20
   2832c:	mov	x1, x19
   28330:	ldr	x8, [x8, #40]
   28334:	blr	x8
   28338:	ldp	x8, x10, [x19, #8]
   2833c:	add	x9, x8, #0x3
   28340:	cmp	x9, x10
   28344:	b.cs	28350 <__cxa_demangle@@Base+0x15b58>  // b.hs, b.nlast
   28348:	ldr	x0, [x19]
   2834c:	b	28374 <__cxa_demangle@@Base+0x15b7c>
   28350:	ldr	x0, [x19]
   28354:	lsl	x8, x10, #1
   28358:	cmp	x8, x9
   2835c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   28360:	str	x1, [x19, #16]
   28364:	bl	ecc0 <realloc@plt>
   28368:	str	x0, [x19]
   2836c:	cbz	x0, 283a0 <__cxa_demangle@@Base+0x15ba8>
   28370:	ldr	x8, [x19, #8]
   28374:	add	x8, x0, x8
   28378:	mov	w9, #0x2a                  	// #42
   2837c:	mov	w10, #0x3a3a                	// #14906
   28380:	strb	w9, [x8, #2]
   28384:	strh	w10, [x8]
   28388:	ldr	x8, [x19, #8]
   2838c:	add	x8, x8, #0x3
   28390:	str	x8, [x19, #8]
   28394:	ldp	x20, x19, [sp, #16]
   28398:	ldp	x29, x30, [sp], #32
   2839c:	ret
   283a0:	bl	eeb0 <_ZSt9terminatev@plt>
   283a4:	stp	x29, x30, [sp, #-32]!
   283a8:	stp	x20, x19, [sp, #16]
   283ac:	mov	x29, sp
   283b0:	mov	x20, x0
   283b4:	ldr	x0, [x0, #24]
   283b8:	mov	x19, x1
   283bc:	ldrb	w8, [x0, #10]
   283c0:	cbz	w8, 28408 <__cxa_demangle@@Base+0x15c10>
   283c4:	cmp	w8, #0x2
   283c8:	b.ne	283e4 <__cxa_demangle@@Base+0x15bec>  // b.any
   283cc:	ldr	x8, [x0]
   283d0:	mov	x1, x19
   283d4:	ldr	x8, [x8, #8]
   283d8:	blr	x8
   283dc:	tbnz	w0, #0, 28408 <__cxa_demangle@@Base+0x15c10>
   283e0:	ldr	x0, [x20, #24]
   283e4:	ldrb	w8, [x0, #11]
   283e8:	cbz	w8, 28408 <__cxa_demangle@@Base+0x15c10>
   283ec:	cmp	w8, #0x2
   283f0:	b.ne	28458 <__cxa_demangle@@Base+0x15c60>  // b.any
   283f4:	ldr	x8, [x0]
   283f8:	mov	x1, x19
   283fc:	ldr	x8, [x8, #16]
   28400:	blr	x8
   28404:	tbz	w0, #0, 28458 <__cxa_demangle@@Base+0x15c60>
   28408:	ldp	x8, x10, [x19, #8]
   2840c:	add	x9, x8, #0x1
   28410:	cmp	x9, x10
   28414:	b.cs	28420 <__cxa_demangle@@Base+0x15c28>  // b.hs, b.nlast
   28418:	ldr	x0, [x19]
   2841c:	b	28444 <__cxa_demangle@@Base+0x15c4c>
   28420:	ldr	x0, [x19]
   28424:	lsl	x8, x10, #1
   28428:	cmp	x8, x9
   2842c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   28430:	str	x1, [x19, #16]
   28434:	bl	ecc0 <realloc@plt>
   28438:	str	x0, [x19]
   2843c:	cbz	x0, 28474 <__cxa_demangle@@Base+0x15c7c>
   28440:	ldr	x8, [x19, #8]
   28444:	mov	w9, #0x29                  	// #41
   28448:	strb	w9, [x0, x8]
   2844c:	ldr	x8, [x19, #8]
   28450:	add	x8, x8, #0x1
   28454:	str	x8, [x19, #8]
   28458:	ldr	x0, [x20, #24]
   2845c:	mov	x1, x19
   28460:	ldp	x20, x19, [sp, #16]
   28464:	ldr	x8, [x0]
   28468:	ldr	x2, [x8, #40]
   2846c:	ldp	x29, x30, [sp], #32
   28470:	br	x2
   28474:	bl	eeb0 <_ZSt9terminatev@plt>
   28478:	b	eb20 <_ZdlPv@plt>
   2847c:	stp	x29, x30, [sp, #-48]!
   28480:	stp	x22, x21, [sp, #16]
   28484:	stp	x20, x19, [sp, #32]
   28488:	mov	x29, sp
   2848c:	ldp	x22, x9, [x0, #16]
   28490:	ldr	x8, [x1, #8]
   28494:	mov	x20, x0
   28498:	mov	x19, x1
   2849c:	subs	x21, x9, x22
   284a0:	b.eq	284fc <__cxa_demangle@@Base+0x15d04>  // b.none
   284a4:	ldr	x10, [x19, #16]
   284a8:	add	x9, x8, x21
   284ac:	cmp	x9, x10
   284b0:	b.cs	284bc <__cxa_demangle@@Base+0x15cc4>  // b.hs, b.nlast
   284b4:	ldr	x0, [x19]
   284b8:	b	284e0 <__cxa_demangle@@Base+0x15ce8>
   284bc:	ldr	x0, [x19]
   284c0:	lsl	x8, x10, #1
   284c4:	cmp	x8, x9
   284c8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   284cc:	str	x1, [x19, #16]
   284d0:	bl	ecc0 <realloc@plt>
   284d4:	str	x0, [x19]
   284d8:	cbz	x0, 2859c <__cxa_demangle@@Base+0x15da4>
   284dc:	ldr	x8, [x19, #8]
   284e0:	add	x0, x0, x8
   284e4:	mov	x1, x22
   284e8:	mov	x2, x21
   284ec:	bl	eae0 <memmove@plt>
   284f0:	ldr	x8, [x19, #8]
   284f4:	add	x8, x8, x21
   284f8:	str	x8, [x19, #8]
   284fc:	ldr	x10, [x19, #16]
   28500:	add	x9, x8, #0x1
   28504:	cmp	x9, x10
   28508:	b.cs	28514 <__cxa_demangle@@Base+0x15d1c>  // b.hs, b.nlast
   2850c:	ldr	x0, [x19]
   28510:	b	2853c <__cxa_demangle@@Base+0x15d44>
   28514:	ldr	x0, [x19]
   28518:	lsl	x8, x10, #1
   2851c:	cmp	x8, x9
   28520:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   28524:	str	x1, [x19, #16]
   28528:	bl	ecc0 <realloc@plt>
   2852c:	str	x0, [x19]
   28530:	cbz	x0, 2859c <__cxa_demangle@@Base+0x15da4>
   28534:	ldr	x8, [x19, #8]
   28538:	add	x9, x8, #0x1
   2853c:	str	x9, [x19, #8]
   28540:	mov	w9, #0x20                  	// #32
   28544:	strb	w9, [x0, x8]
   28548:	ldr	x20, [x20, #32]
   2854c:	mov	x1, x19
   28550:	ldr	x8, [x20]
   28554:	mov	x0, x20
   28558:	ldr	x8, [x8, #32]
   2855c:	blr	x8
   28560:	ldrb	w8, [x20, #9]
   28564:	cmp	w8, #0x1
   28568:	b.ne	2857c <__cxa_demangle@@Base+0x15d84>  // b.any
   2856c:	ldp	x20, x19, [sp, #32]
   28570:	ldp	x22, x21, [sp, #16]
   28574:	ldp	x29, x30, [sp], #48
   28578:	ret
   2857c:	ldr	x8, [x20]
   28580:	mov	x0, x20
   28584:	mov	x1, x19
   28588:	ldp	x20, x19, [sp, #32]
   2858c:	ldr	x2, [x8, #40]
   28590:	ldp	x22, x21, [sp, #16]
   28594:	ldp	x29, x30, [sp], #48
   28598:	br	x2
   2859c:	bl	eeb0 <_ZSt9terminatev@plt>
   285a0:	b	eb20 <_ZdlPv@plt>
   285a4:	ldr	x0, [x0, #16]
   285a8:	ldrb	w8, [x0, #9]
   285ac:	cmp	w8, #0x2
   285b0:	b.ne	285c0 <__cxa_demangle@@Base+0x15dc8>  // b.any
   285b4:	ldr	x8, [x0]
   285b8:	ldr	x2, [x8]
   285bc:	br	x2
   285c0:	cmp	w8, #0x0
   285c4:	cset	w0, eq  // eq = none
   285c8:	ret
   285cc:	stp	x29, x30, [sp, #-64]!
   285d0:	str	x23, [sp, #16]
   285d4:	stp	x22, x21, [sp, #32]
   285d8:	stp	x20, x19, [sp, #48]
   285dc:	mov	x29, sp
   285e0:	ldr	x21, [x0, #16]
   285e4:	mov	x20, x0
   285e8:	mov	x19, x1
   285ec:	ldrb	w8, [x21, #8]
   285f0:	cmp	w8, #0xa
   285f4:	b.ne	28668 <__cxa_demangle@@Base+0x15e70>  // b.any
   285f8:	ldr	x9, [x21, #16]
   285fc:	ldrb	w8, [x9, #8]
   28600:	cmp	w8, #0x7
   28604:	b.ne	28668 <__cxa_demangle@@Base+0x15e70>  // b.any
   28608:	ldp	x8, x9, [x9, #16]
   2860c:	sub	x10, x9, x8
   28610:	cmp	x10, #0xb
   28614:	b.ne	28668 <__cxa_demangle@@Base+0x15e70>  // b.any
   28618:	cmp	x8, x9
   2861c:	b.eq	28648 <__cxa_demangle@@Base+0x15e50>  // b.none
   28620:	adrp	x10, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   28624:	add	x10, x10, #0x4a3
   28628:	ldrb	w11, [x8]
   2862c:	ldrb	w12, [x10]
   28630:	cmp	w11, w12
   28634:	b.ne	28668 <__cxa_demangle@@Base+0x15e70>  // b.any
   28638:	add	x8, x8, #0x1
   2863c:	cmp	x9, x8
   28640:	add	x10, x10, #0x1
   28644:	b.ne	28628 <__cxa_demangle@@Base+0x15e30>  // b.any
   28648:	mov	x23, x19
   2864c:	ldr	x8, [x23, #8]!
   28650:	ldr	x10, [x23, #8]
   28654:	add	x9, x8, #0x3
   28658:	cmp	x9, x10
   2865c:	b.cs	28804 <__cxa_demangle@@Base+0x1600c>  // b.hs, b.nlast
   28660:	ldr	x0, [x19]
   28664:	b	28828 <__cxa_demangle@@Base+0x16030>
   28668:	ldr	x8, [x21]
   2866c:	mov	x0, x21
   28670:	mov	x1, x19
   28674:	ldr	x8, [x8, #32]
   28678:	blr	x8
   2867c:	ldr	x0, [x20, #16]
   28680:	ldrb	w8, [x0, #10]
   28684:	cbz	w8, 286a4 <__cxa_demangle@@Base+0x15eac>
   28688:	cmp	w8, #0x2
   2868c:	b.ne	286f4 <__cxa_demangle@@Base+0x15efc>  // b.any
   28690:	ldr	x8, [x0]
   28694:	mov	x1, x19
   28698:	ldr	x8, [x8, #8]
   2869c:	blr	x8
   286a0:	tbz	w0, #0, 286f4 <__cxa_demangle@@Base+0x15efc>
   286a4:	ldp	x8, x10, [x19, #8]
   286a8:	add	x9, x8, #0x1
   286ac:	cmp	x9, x10
   286b0:	b.cs	286bc <__cxa_demangle@@Base+0x15ec4>  // b.hs, b.nlast
   286b4:	ldr	x0, [x19]
   286b8:	b	286e0 <__cxa_demangle@@Base+0x15ee8>
   286bc:	ldr	x0, [x19]
   286c0:	lsl	x8, x10, #1
   286c4:	cmp	x8, x9
   286c8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   286cc:	str	x1, [x19, #16]
   286d0:	bl	ecc0 <realloc@plt>
   286d4:	str	x0, [x19]
   286d8:	cbz	x0, 288f4 <__cxa_demangle@@Base+0x160fc>
   286dc:	ldr	x8, [x19, #8]
   286e0:	mov	w9, #0x20                  	// #32
   286e4:	strb	w9, [x0, x8]
   286e8:	ldr	x8, [x19, #8]
   286ec:	add	x8, x8, #0x1
   286f0:	str	x8, [x19, #8]
   286f4:	ldr	x0, [x20, #16]
   286f8:	ldrb	w8, [x0, #10]
   286fc:	cbz	w8, 28744 <__cxa_demangle@@Base+0x15f4c>
   28700:	cmp	w8, #0x2
   28704:	b.ne	28720 <__cxa_demangle@@Base+0x15f28>  // b.any
   28708:	ldr	x8, [x0]
   2870c:	mov	x1, x19
   28710:	ldr	x8, [x8, #8]
   28714:	blr	x8
   28718:	tbnz	w0, #0, 28744 <__cxa_demangle@@Base+0x15f4c>
   2871c:	ldr	x0, [x20, #16]
   28720:	ldrb	w8, [x0, #11]
   28724:	cbz	w8, 28744 <__cxa_demangle@@Base+0x15f4c>
   28728:	cmp	w8, #0x2
   2872c:	b.ne	28794 <__cxa_demangle@@Base+0x15f9c>  // b.any
   28730:	ldr	x8, [x0]
   28734:	mov	x1, x19
   28738:	ldr	x8, [x8, #16]
   2873c:	blr	x8
   28740:	tbz	w0, #0, 28794 <__cxa_demangle@@Base+0x15f9c>
   28744:	ldp	x8, x10, [x19, #8]
   28748:	add	x9, x8, #0x1
   2874c:	cmp	x9, x10
   28750:	b.cs	2875c <__cxa_demangle@@Base+0x15f64>  // b.hs, b.nlast
   28754:	ldr	x0, [x19]
   28758:	b	28780 <__cxa_demangle@@Base+0x15f88>
   2875c:	ldr	x0, [x19]
   28760:	lsl	x8, x10, #1
   28764:	cmp	x8, x9
   28768:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2876c:	str	x1, [x19, #16]
   28770:	bl	ecc0 <realloc@plt>
   28774:	str	x0, [x19]
   28778:	cbz	x0, 288f4 <__cxa_demangle@@Base+0x160fc>
   2877c:	ldr	x8, [x19, #8]
   28780:	mov	w9, #0x28                  	// #40
   28784:	strb	w9, [x0, x8]
   28788:	ldr	x8, [x19, #8]
   2878c:	add	x8, x8, #0x1
   28790:	str	x8, [x19, #8]
   28794:	mov	x23, x19
   28798:	ldr	x8, [x23, #8]!
   2879c:	ldr	x10, [x23, #8]
   287a0:	add	x9, x8, #0x1
   287a4:	cmp	x9, x10
   287a8:	b.cs	287b4 <__cxa_demangle@@Base+0x15fbc>  // b.hs, b.nlast
   287ac:	ldr	x0, [x19]
   287b0:	b	287d8 <__cxa_demangle@@Base+0x15fe0>
   287b4:	ldr	x0, [x19]
   287b8:	lsl	x8, x10, #1
   287bc:	cmp	x8, x9
   287c0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   287c4:	str	x1, [x19, #16]
   287c8:	bl	ecc0 <realloc@plt>
   287cc:	str	x0, [x19]
   287d0:	cbz	x0, 288f4 <__cxa_demangle@@Base+0x160fc>
   287d4:	ldr	x8, [x23]
   287d8:	add	x8, x0, x8
   287dc:	mov	w9, #0x2a                  	// #42
   287e0:	strb	w9, [x8]
   287e4:	ldr	x8, [x23]
   287e8:	add	x8, x8, #0x1
   287ec:	str	x8, [x23]
   287f0:	ldp	x20, x19, [sp, #48]
   287f4:	ldp	x22, x21, [sp, #32]
   287f8:	ldr	x23, [sp, #16]
   287fc:	ldp	x29, x30, [sp], #64
   28800:	ret
   28804:	ldr	x0, [x19]
   28808:	lsl	x8, x10, #1
   2880c:	cmp	x8, x9
   28810:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   28814:	str	x1, [x19, #16]
   28818:	bl	ecc0 <realloc@plt>
   2881c:	str	x0, [x19]
   28820:	cbz	x0, 288f4 <__cxa_demangle@@Base+0x160fc>
   28824:	ldr	x8, [x23]
   28828:	add	x8, x0, x8
   2882c:	mov	w9, #0x3c                  	// #60
   28830:	mov	w10, #0x6469                	// #25705
   28834:	strb	w9, [x8, #2]
   28838:	strh	w10, [x8]
   2883c:	ldr	x8, [x23]
   28840:	add	x8, x8, #0x3
   28844:	str	x8, [x23]
   28848:	ldp	x22, x9, [x21, #24]
   2884c:	subs	x20, x9, x22
   28850:	b.eq	288ac <__cxa_demangle@@Base+0x160b4>  // b.none
   28854:	ldr	x10, [x19, #16]
   28858:	add	x9, x8, x20
   2885c:	cmp	x9, x10
   28860:	b.cs	2886c <__cxa_demangle@@Base+0x16074>  // b.hs, b.nlast
   28864:	ldr	x0, [x19]
   28868:	b	28890 <__cxa_demangle@@Base+0x16098>
   2886c:	ldr	x0, [x19]
   28870:	lsl	x8, x10, #1
   28874:	cmp	x8, x9
   28878:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   2887c:	str	x1, [x19, #16]
   28880:	bl	ecc0 <realloc@plt>
   28884:	str	x0, [x19]
   28888:	cbz	x0, 288f4 <__cxa_demangle@@Base+0x160fc>
   2888c:	ldr	x8, [x23]
   28890:	add	x0, x0, x8
   28894:	mov	x1, x22
   28898:	mov	x2, x20
   2889c:	bl	eae0 <memmove@plt>
   288a0:	ldr	x8, [x23]
   288a4:	add	x8, x8, x20
   288a8:	str	x8, [x23]
   288ac:	ldr	x10, [x19, #16]
   288b0:	add	x9, x8, #0x1
   288b4:	cmp	x9, x10
   288b8:	b.cs	288c4 <__cxa_demangle@@Base+0x160cc>  // b.hs, b.nlast
   288bc:	ldr	x0, [x19]
   288c0:	b	288e8 <__cxa_demangle@@Base+0x160f0>
   288c4:	ldr	x0, [x19]
   288c8:	lsl	x8, x10, #1
   288cc:	cmp	x8, x9
   288d0:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   288d4:	str	x1, [x19, #16]
   288d8:	bl	ecc0 <realloc@plt>
   288dc:	str	x0, [x19]
   288e0:	cbz	x0, 288f4 <__cxa_demangle@@Base+0x160fc>
   288e4:	ldr	x8, [x23]
   288e8:	add	x8, x0, x8
   288ec:	mov	w9, #0x3e                  	// #62
   288f0:	b	287e0 <__cxa_demangle@@Base+0x15fe8>
   288f4:	bl	eeb0 <_ZSt9terminatev@plt>
   288f8:	stp	x29, x30, [sp, #-32]!
   288fc:	stp	x20, x19, [sp, #16]
   28900:	mov	x29, sp
   28904:	mov	x19, x0
   28908:	ldr	x0, [x0, #16]
   2890c:	mov	x20, x1
   28910:	ldrb	w8, [x0, #8]
   28914:	cmp	w8, #0xa
   28918:	b.ne	28978 <__cxa_demangle@@Base+0x16180>  // b.any
   2891c:	ldr	x9, [x0, #16]
   28920:	ldrb	w8, [x9, #8]
   28924:	cmp	w8, #0x7
   28928:	b.ne	28978 <__cxa_demangle@@Base+0x16180>  // b.any
   2892c:	ldp	x8, x9, [x9, #16]
   28930:	sub	x10, x9, x8
   28934:	cmp	x10, #0xb
   28938:	b.ne	28978 <__cxa_demangle@@Base+0x16180>  // b.any
   2893c:	cmp	x8, x9
   28940:	b.eq	2896c <__cxa_demangle@@Base+0x16174>  // b.none
   28944:	adrp	x10, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   28948:	add	x10, x10, #0x4a3
   2894c:	ldrb	w11, [x8]
   28950:	ldrb	w12, [x10]
   28954:	cmp	w11, w12
   28958:	b.ne	28978 <__cxa_demangle@@Base+0x16180>  // b.any
   2895c:	add	x8, x8, #0x1
   28960:	cmp	x9, x8
   28964:	add	x10, x10, #0x1
   28968:	b.ne	2894c <__cxa_demangle@@Base+0x16154>  // b.any
   2896c:	ldp	x20, x19, [sp, #16]
   28970:	ldp	x29, x30, [sp], #32
   28974:	ret
   28978:	ldrb	w8, [x0, #10]
   2897c:	cbz	w8, 289c4 <__cxa_demangle@@Base+0x161cc>
   28980:	cmp	w8, #0x2
   28984:	b.ne	289a0 <__cxa_demangle@@Base+0x161a8>  // b.any
   28988:	ldr	x8, [x0]
   2898c:	mov	x1, x20
   28990:	ldr	x8, [x8, #8]
   28994:	blr	x8
   28998:	tbnz	w0, #0, 289c4 <__cxa_demangle@@Base+0x161cc>
   2899c:	ldr	x0, [x19, #16]
   289a0:	ldrb	w8, [x0, #11]
   289a4:	cbz	w8, 289c4 <__cxa_demangle@@Base+0x161cc>
   289a8:	cmp	w8, #0x2
   289ac:	b.ne	28a14 <__cxa_demangle@@Base+0x1621c>  // b.any
   289b0:	ldr	x8, [x0]
   289b4:	mov	x1, x20
   289b8:	ldr	x8, [x8, #16]
   289bc:	blr	x8
   289c0:	tbz	w0, #0, 28a14 <__cxa_demangle@@Base+0x1621c>
   289c4:	ldp	x8, x10, [x20, #8]
   289c8:	add	x9, x8, #0x1
   289cc:	cmp	x9, x10
   289d0:	b.cs	289dc <__cxa_demangle@@Base+0x161e4>  // b.hs, b.nlast
   289d4:	ldr	x0, [x20]
   289d8:	b	28a00 <__cxa_demangle@@Base+0x16208>
   289dc:	ldr	x0, [x20]
   289e0:	lsl	x8, x10, #1
   289e4:	cmp	x8, x9
   289e8:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   289ec:	str	x1, [x20, #16]
   289f0:	bl	ecc0 <realloc@plt>
   289f4:	str	x0, [x20]
   289f8:	cbz	x0, 28a30 <__cxa_demangle@@Base+0x16238>
   289fc:	ldr	x8, [x20, #8]
   28a00:	mov	w9, #0x29                  	// #41
   28a04:	strb	w9, [x0, x8]
   28a08:	ldr	x8, [x20, #8]
   28a0c:	add	x8, x8, #0x1
   28a10:	str	x8, [x20, #8]
   28a14:	ldr	x0, [x19, #16]
   28a18:	mov	x1, x20
   28a1c:	ldp	x20, x19, [sp, #16]
   28a20:	ldr	x8, [x0]
   28a24:	ldr	x2, [x8, #40]
   28a28:	ldp	x29, x30, [sp], #32
   28a2c:	br	x2
   28a30:	bl	eeb0 <_ZSt9terminatev@plt>
   28a34:	b	eb20 <_ZdlPv@plt>
   28a38:	ldr	x0, [x0, #16]
   28a3c:	ldrb	w8, [x0, #9]
   28a40:	cmp	w8, #0x2
   28a44:	b.ne	28a54 <__cxa_demangle@@Base+0x1625c>  // b.any
   28a48:	ldr	x8, [x0]
   28a4c:	ldr	x2, [x8]
   28a50:	br	x2
   28a54:	cmp	w8, #0x0
   28a58:	cset	w0, eq  // eq = none
   28a5c:	ret
   28a60:	stp	x29, x30, [sp, #-48]!
   28a64:	stp	x22, x21, [sp, #16]
   28a68:	stp	x20, x19, [sp, #32]
   28a6c:	mov	x29, sp
   28a70:	ldrb	w8, [x0, #28]
   28a74:	cbnz	w8, 28c7c <__cxa_demangle@@Base+0x16484>
   28a78:	ldr	x21, [x0, #16]
   28a7c:	mov	w8, #0x1                   	// #1
   28a80:	strb	w8, [x0, #28]
   28a84:	ldr	w22, [x0, #24]
   28a88:	ldr	x8, [x21]
   28a8c:	mov	x19, x0
   28a90:	mov	x20, x1
   28a94:	ldr	x8, [x8, #24]
   28a98:	mov	x0, x21
   28a9c:	blr	x8
   28aa0:	ldrb	w8, [x0, #8]
   28aa4:	cmp	w8, #0xc
   28aa8:	b.ne	28ad4 <__cxa_demangle@@Base+0x162dc>  // b.any
   28aac:	ldr	x21, [x0, #16]
   28ab0:	ldr	w9, [x0, #24]
   28ab4:	ldr	x8, [x21]
   28ab8:	cmp	w9, w22
   28abc:	csel	w22, w9, w22, lt  // lt = tstop
   28ac0:	ldr	x8, [x8, #24]
   28ac4:	mov	x0, x21
   28ac8:	mov	x1, x20
   28acc:	blr	x8
   28ad0:	b	28aa0 <__cxa_demangle@@Base+0x162a8>
   28ad4:	ldr	x8, [x21]
   28ad8:	ldr	x8, [x8, #32]
   28adc:	mov	x0, x21
   28ae0:	mov	x1, x20
   28ae4:	blr	x8
   28ae8:	ldrb	w8, [x21, #10]
   28aec:	cbz	w8, 28b10 <__cxa_demangle@@Base+0x16318>
   28af0:	cmp	w8, #0x2
   28af4:	b.ne	28b88 <__cxa_demangle@@Base+0x16390>  // b.any
   28af8:	ldr	x8, [x21]
   28afc:	ldr	x8, [x8, #8]
   28b00:	mov	x0, x21
   28b04:	mov	x1, x20
   28b08:	blr	x8
   28b0c:	tbz	w0, #0, 28b60 <__cxa_demangle@@Base+0x16368>
   28b10:	ldp	x8, x10, [x20, #8]
   28b14:	add	x9, x8, #0x1
   28b18:	cmp	x9, x10
   28b1c:	b.cs	28b28 <__cxa_demangle@@Base+0x16330>  // b.hs, b.nlast
   28b20:	ldr	x0, [x20]
   28b24:	b	28b4c <__cxa_demangle@@Base+0x16354>
   28b28:	ldr	x0, [x20]
   28b2c:	lsl	x8, x10, #1
   28b30:	cmp	x8, x9
   28b34:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   28b38:	str	x1, [x20, #16]
   28b3c:	bl	ecc0 <realloc@plt>
   28b40:	str	x0, [x20]
   28b44:	cbz	x0, 28c8c <__cxa_demangle@@Base+0x16494>
   28b48:	ldr	x8, [x20, #8]
   28b4c:	mov	w9, #0x20                  	// #32
   28b50:	strb	w9, [x0, x8]
   28b54:	ldr	x8, [x20, #8]
   28b58:	add	x8, x8, #0x1
   28b5c:	str	x8, [x20, #8]
   28b60:	ldrb	w8, [x21, #10]
   28b64:	cbz	w8, 28bb0 <__cxa_demangle@@Base+0x163b8>
   28b68:	cmp	w8, #0x2
   28b6c:	b.ne	28b88 <__cxa_demangle@@Base+0x16390>  // b.any
   28b70:	ldr	x8, [x21]
   28b74:	ldr	x8, [x8, #8]
   28b78:	mov	x0, x21
   28b7c:	mov	x1, x20
   28b80:	blr	x8
   28b84:	tbnz	w0, #0, 28bb0 <__cxa_demangle@@Base+0x163b8>
   28b88:	ldrb	w8, [x21, #11]
   28b8c:	cbz	w8, 28bb0 <__cxa_demangle@@Base+0x163b8>
   28b90:	cmp	w8, #0x2
   28b94:	b.ne	28c00 <__cxa_demangle@@Base+0x16408>  // b.any
   28b98:	ldr	x8, [x21]
   28b9c:	ldr	x8, [x8, #16]
   28ba0:	mov	x0, x21
   28ba4:	mov	x1, x20
   28ba8:	blr	x8
   28bac:	tbz	w0, #0, 28c00 <__cxa_demangle@@Base+0x16408>
   28bb0:	ldp	x8, x10, [x20, #8]
   28bb4:	add	x9, x8, #0x1
   28bb8:	cmp	x9, x10
   28bbc:	b.cs	28bc8 <__cxa_demangle@@Base+0x163d0>  // b.hs, b.nlast
   28bc0:	ldr	x0, [x20]
   28bc4:	b	28bec <__cxa_demangle@@Base+0x163f4>
   28bc8:	ldr	x0, [x20]
   28bcc:	lsl	x8, x10, #1
   28bd0:	cmp	x8, x9
   28bd4:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   28bd8:	str	x1, [x20, #16]
   28bdc:	bl	ecc0 <realloc@plt>
   28be0:	str	x0, [x20]
   28be4:	cbz	x0, 28c8c <__cxa_demangle@@Base+0x16494>
   28be8:	ldr	x8, [x20, #8]
   28bec:	mov	w9, #0x28                  	// #40
   28bf0:	strb	w9, [x0, x8]
   28bf4:	ldr	x8, [x20, #8]
   28bf8:	add	x8, x8, #0x1
   28bfc:	str	x8, [x20, #8]
   28c00:	adrp	x8, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   28c04:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   28c08:	add	x8, x8, #0x394
   28c0c:	add	x9, x9, #0x395
   28c10:	cmp	w22, #0x0
   28c14:	csel	x21, x9, x8, eq  // eq = none
   28c18:	ldp	x8, x10, [x20, #8]
   28c1c:	mov	w9, #0x1                   	// #1
   28c20:	cinc	x22, x9, ne  // ne = any
   28c24:	add	x9, x8, x22
   28c28:	cmp	x9, x10
   28c2c:	b.cs	28c38 <__cxa_demangle@@Base+0x16440>  // b.hs, b.nlast
   28c30:	ldr	x0, [x20]
   28c34:	b	28c5c <__cxa_demangle@@Base+0x16464>
   28c38:	ldr	x0, [x20]
   28c3c:	lsl	x8, x10, #1
   28c40:	cmp	x8, x9
   28c44:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   28c48:	str	x1, [x20, #16]
   28c4c:	bl	ecc0 <realloc@plt>
   28c50:	str	x0, [x20]
   28c54:	cbz	x0, 28c8c <__cxa_demangle@@Base+0x16494>
   28c58:	ldr	x8, [x20, #8]
   28c5c:	add	x0, x0, x8
   28c60:	mov	x1, x21
   28c64:	mov	x2, x22
   28c68:	bl	eae0 <memmove@plt>
   28c6c:	ldr	x8, [x20, #8]
   28c70:	add	x8, x8, x22
   28c74:	str	x8, [x20, #8]
   28c78:	strb	wzr, [x19, #28]
   28c7c:	ldp	x20, x19, [sp, #32]
   28c80:	ldp	x22, x21, [sp, #16]
   28c84:	ldp	x29, x30, [sp], #48
   28c88:	ret
   28c8c:	bl	eeb0 <_ZSt9terminatev@plt>
   28c90:	strb	wzr, [x19, #28]
   28c94:	bl	eea0 <_Unwind_Resume@plt>
   28c98:	strb	wzr, [x19, #28]
   28c9c:	bl	eea0 <_Unwind_Resume@plt>
   28ca0:	stp	x29, x30, [sp, #-48]!
   28ca4:	str	x21, [sp, #16]
   28ca8:	stp	x20, x19, [sp, #32]
   28cac:	mov	x29, sp
   28cb0:	ldrb	w8, [x0, #28]
   28cb4:	cbnz	w8, 28dbc <__cxa_demangle@@Base+0x165c4>
   28cb8:	ldr	x21, [x0, #16]
   28cbc:	mov	w8, #0x1                   	// #1
   28cc0:	strb	w8, [x0, #28]
   28cc4:	mov	x19, x0
   28cc8:	ldr	x8, [x21]
   28ccc:	mov	x20, x1
   28cd0:	ldr	x8, [x8, #24]
   28cd4:	mov	x0, x21
   28cd8:	blr	x8
   28cdc:	ldrb	w8, [x0, #8]
   28ce0:	cmp	w8, #0xc
   28ce4:	b.ne	28d04 <__cxa_demangle@@Base+0x1650c>  // b.any
   28ce8:	ldr	x21, [x0, #16]
   28cec:	ldr	x8, [x21]
   28cf0:	ldr	x8, [x8, #24]
   28cf4:	mov	x0, x21
   28cf8:	mov	x1, x20
   28cfc:	blr	x8
   28d00:	b	28cdc <__cxa_demangle@@Base+0x164e4>
   28d04:	ldrb	w8, [x21, #10]
   28d08:	cbz	w8, 28d54 <__cxa_demangle@@Base+0x1655c>
   28d0c:	cmp	w8, #0x2
   28d10:	b.ne	28d2c <__cxa_demangle@@Base+0x16534>  // b.any
   28d14:	ldr	x8, [x21]
   28d18:	ldr	x8, [x8, #8]
   28d1c:	mov	x0, x21
   28d20:	mov	x1, x20
   28d24:	blr	x8
   28d28:	tbnz	w0, #0, 28d54 <__cxa_demangle@@Base+0x1655c>
   28d2c:	ldrb	w8, [x21, #11]
   28d30:	cbz	w8, 28d54 <__cxa_demangle@@Base+0x1655c>
   28d34:	cmp	w8, #0x2
   28d38:	b.ne	28da4 <__cxa_demangle@@Base+0x165ac>  // b.any
   28d3c:	ldr	x8, [x21]
   28d40:	ldr	x8, [x8, #16]
   28d44:	mov	x0, x21
   28d48:	mov	x1, x20
   28d4c:	blr	x8
   28d50:	tbz	w0, #0, 28da4 <__cxa_demangle@@Base+0x165ac>
   28d54:	ldp	x8, x10, [x20, #8]
   28d58:	add	x9, x8, #0x1
   28d5c:	cmp	x9, x10
   28d60:	b.cs	28d6c <__cxa_demangle@@Base+0x16574>  // b.hs, b.nlast
   28d64:	ldr	x0, [x20]
   28d68:	b	28d90 <__cxa_demangle@@Base+0x16598>
   28d6c:	ldr	x0, [x20]
   28d70:	lsl	x8, x10, #1
   28d74:	cmp	x8, x9
   28d78:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   28d7c:	str	x1, [x20, #16]
   28d80:	bl	ecc0 <realloc@plt>
   28d84:	str	x0, [x20]
   28d88:	cbz	x0, 28dcc <__cxa_demangle@@Base+0x165d4>
   28d8c:	ldr	x8, [x20, #8]
   28d90:	mov	w9, #0x29                  	// #41
   28d94:	strb	w9, [x0, x8]
   28d98:	ldr	x8, [x20, #8]
   28d9c:	add	x8, x8, #0x1
   28da0:	str	x8, [x20, #8]
   28da4:	ldr	x8, [x21]
   28da8:	ldr	x8, [x8, #40]
   28dac:	mov	x0, x21
   28db0:	mov	x1, x20
   28db4:	blr	x8
   28db8:	strb	wzr, [x19, #28]
   28dbc:	ldp	x20, x19, [sp, #32]
   28dc0:	ldr	x21, [sp, #16]
   28dc4:	ldp	x29, x30, [sp], #48
   28dc8:	ret
   28dcc:	bl	eeb0 <_ZSt9terminatev@plt>
   28dd0:	strb	wzr, [x19, #28]
   28dd4:	bl	eea0 <_Unwind_Resume@plt>
   28dd8:	strb	wzr, [x19, #28]
   28ddc:	bl	eea0 <_Unwind_Resume@plt>
   28de0:	b	eb20 <_ZdlPv@plt>
   28de4:	stp	x29, x30, [sp, #-48]!
   28de8:	str	x21, [sp, #16]
   28dec:	stp	x20, x19, [sp, #32]
   28df0:	mov	x29, sp
   28df4:	mov	x20, x0
   28df8:	ldr	x0, [x0, #16]
   28dfc:	mov	x19, x1
   28e00:	ldr	x8, [x0]
   28e04:	ldr	x8, [x8, #32]
   28e08:	blr	x8
   28e0c:	ldp	x21, x8, [x20, #24]
   28e10:	subs	x20, x8, x21
   28e14:	b.eq	28e70 <__cxa_demangle@@Base+0x16678>  // b.none
   28e18:	ldp	x8, x10, [x19, #8]
   28e1c:	add	x9, x8, x20
   28e20:	cmp	x9, x10
   28e24:	b.cs	28e30 <__cxa_demangle@@Base+0x16638>  // b.hs, b.nlast
   28e28:	ldr	x0, [x19]
   28e2c:	b	28e54 <__cxa_demangle@@Base+0x1665c>
   28e30:	ldr	x0, [x19]
   28e34:	lsl	x8, x10, #1
   28e38:	cmp	x8, x9
   28e3c:	csel	x1, x9, x8, cc  // cc = lo, ul, last
   28e40:	str	x1, [x19, #16]
   28e44:	bl	ecc0 <realloc@plt>
   28e48:	str	x0, [x19]
   28e4c:	cbz	x0, 28e80 <__cxa_demangle@@Base+0x16688>
   28e50:	ldr	x8, [x19, #8]
   28e54:	add	x0, x0, x8
   28e58:	mov	x1, x21
   28e5c:	mov	x2, x20
   28e60:	bl	eae0 <memmove@plt>
   28e64:	ldr	x8, [x19, #8]
   28e68:	add	x8, x8, x20
   28e6c:	str	x8, [x19, #8]
   28e70:	ldp	x20, x19, [sp, #32]
   28e74:	ldr	x21, [sp, #16]
   28e78:	ldp	x29, x30, [sp], #48
   28e7c:	ret
   28e80:	bl	eeb0 <_ZSt9terminatev@plt>
   28e84:	b	eb20 <_ZdlPv@plt>

0000000000028e88 <__cxa_get_globals@@Base>:
   28e88:	stp	x29, x30, [sp, #-32]!
   28e8c:	stp	x20, x19, [sp, #16]
   28e90:	mov	x29, sp
   28e94:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   28e98:	adrp	x1, 28000 <__cxa_demangle@@Base+0x15808>
   28e9c:	add	x0, x0, #0x268
   28ea0:	add	x1, x1, #0xf54
   28ea4:	bl	ed80 <pthread_once@plt>
   28ea8:	cbnz	w0, 28ef4 <__cxa_get_globals@@Base+0x6c>
   28eac:	adrp	x20, 49000 <memcpy@GLIBC_2.17>
   28eb0:	ldr	w0, [x20, #612]
   28eb4:	bl	ecb0 <pthread_getspecific@plt>
   28eb8:	mov	x19, x0
   28ebc:	cbnz	x0, 28ee4 <__cxa_get_globals@@Base+0x5c>
   28ec0:	mov	w0, #0x1                   	// #1
   28ec4:	mov	w1, #0x10                  	// #16
   28ec8:	bl	2a280 <_ZNKSt10bad_typeid4whatEv@@Base+0x1b0>
   28ecc:	cbz	x0, 28f00 <__cxa_get_globals@@Base+0x78>
   28ed0:	mov	x19, x0
   28ed4:	ldr	w0, [x20, #612]
   28ed8:	mov	x1, x19
   28edc:	bl	edc0 <pthread_setspecific@plt>
   28ee0:	cbnz	w0, 28f0c <__cxa_get_globals@@Base+0x84>
   28ee4:	mov	x0, x19
   28ee8:	ldp	x20, x19, [sp, #16]
   28eec:	ldp	x29, x30, [sp], #32
   28ef0:	ret
   28ef4:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   28ef8:	add	x0, x0, #0x505
   28efc:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   28f00:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   28f04:	add	x0, x0, #0x4af
   28f08:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   28f0c:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   28f10:	add	x0, x0, #0x4d0
   28f14:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>

0000000000028f18 <__cxa_get_globals_fast@@Base>:
   28f18:	stp	x29, x30, [sp, #-16]!
   28f1c:	mov	x29, sp
   28f20:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   28f24:	adrp	x1, 28000 <__cxa_demangle@@Base+0x15808>
   28f28:	add	x0, x0, #0x268
   28f2c:	add	x1, x1, #0xf54
   28f30:	bl	ed80 <pthread_once@plt>
   28f34:	cbnz	w0, 28f48 <__cxa_get_globals_fast@@Base+0x30>
   28f38:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
   28f3c:	ldr	w0, [x8, #612]
   28f40:	ldp	x29, x30, [sp], #16
   28f44:	b	ecb0 <pthread_getspecific@plt>
   28f48:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   28f4c:	add	x0, x0, #0x505
   28f50:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   28f54:	stp	x29, x30, [sp, #-16]!
   28f58:	mov	x29, sp
   28f5c:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   28f60:	adrp	x1, 28000 <__cxa_demangle@@Base+0x15808>
   28f64:	add	x0, x0, #0x264
   28f68:	add	x1, x1, #0xf88
   28f6c:	bl	eb40 <pthread_key_create@plt>
   28f70:	cbnz	w0, 28f7c <__cxa_get_globals_fast@@Base+0x64>
   28f74:	ldp	x29, x30, [sp], #16
   28f78:	ret
   28f7c:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   28f80:	add	x0, x0, #0x536
   28f84:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   28f88:	stp	x29, x30, [sp, #-16]!
   28f8c:	mov	x29, sp
   28f90:	bl	2a4c8 <_ZNKSt10bad_typeid4whatEv@@Base+0x3f8>
   28f94:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
   28f98:	ldr	w0, [x8, #612]
   28f9c:	mov	x1, xzr
   28fa0:	bl	edc0 <pthread_setspecific@plt>
   28fa4:	cbnz	w0, 28fb0 <__cxa_get_globals_fast@@Base+0x98>
   28fa8:	ldp	x29, x30, [sp], #16
   28fac:	ret
   28fb0:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   28fb4:	add	x0, x0, #0x570
   28fb8:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>

0000000000028fbc <__cxa_guard_acquire@@Base>:
   28fbc:	stp	x29, x30, [sp, #-64]!
   28fc0:	str	x23, [sp, #16]
   28fc4:	stp	x22, x21, [sp, #32]
   28fc8:	stp	x20, x19, [sp, #48]
   28fcc:	mov	x29, sp
   28fd0:	ldarb	w8, [x0]
   28fd4:	tst	w8, #0xff
   28fd8:	b.eq	28fe4 <__cxa_guard_acquire@@Base+0x28>  // b.none
   28fdc:	mov	w19, wzr
   28fe0:	b	29094 <__cxa_guard_acquire@@Base+0xd8>
   28fe4:	mov	x19, x0
   28fe8:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   28fec:	add	x0, x0, #0x270
   28ff0:	bl	eec0 <pthread_mutex_lock@plt>
   28ff4:	cbnz	w0, 290ac <__cxa_guard_acquire@@Base+0xf0>
   28ff8:	ldrb	w8, [x19, #1]
   28ffc:	tbnz	w8, #1, 29008 <__cxa_guard_acquire@@Base+0x4c>
   29000:	mov	w23, wzr
   29004:	b	29024 <__cxa_guard_acquire@@Base+0x68>
   29008:	ldr	w21, [x19, #4]
   2900c:	mov	w0, #0xb2                  	// #178
   29010:	bl	eed0 <syscall@plt>
   29014:	mov	x20, x0
   29018:	cmp	w21, w20
   2901c:	b.eq	290d4 <__cxa_guard_acquire@@Base+0x118>  // b.none
   29020:	mov	w23, #0x1                   	// #1
   29024:	adrp	x21, 49000 <memcpy@GLIBC_2.17>
   29028:	adrp	x22, 49000 <memcpy@GLIBC_2.17>
   2902c:	add	x21, x21, #0x2a0
   29030:	add	x22, x22, #0x270
   29034:	ldrb	w8, [x19, #1]
   29038:	tbz	w8, #1, 29054 <__cxa_guard_acquire@@Base+0x98>
   2903c:	orr	w8, w8, #0x4
   29040:	strb	w8, [x19, #1]
   29044:	mov	x0, x21
   29048:	mov	x1, x22
   2904c:	bl	ed70 <pthread_cond_wait@plt>
   29050:	b	29034 <__cxa_guard_acquire@@Base+0x78>
   29054:	cmp	w8, #0x1
   29058:	b.ne	29064 <__cxa_guard_acquire@@Base+0xa8>  // b.any
   2905c:	mov	w19, wzr
   29060:	b	29084 <__cxa_guard_acquire@@Base+0xc8>
   29064:	cbnz	w23, 29074 <__cxa_guard_acquire@@Base+0xb8>
   29068:	mov	w0, #0xb2                  	// #178
   2906c:	bl	eed0 <syscall@plt>
   29070:	mov	x20, x0
   29074:	mov	w8, #0x2                   	// #2
   29078:	str	w20, [x19, #4]
   2907c:	strb	w8, [x19, #1]
   29080:	mov	w19, #0x1                   	// #1
   29084:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   29088:	add	x0, x0, #0x270
   2908c:	bl	eee0 <pthread_mutex_unlock@plt>
   29090:	cbnz	w0, 290c0 <__cxa_guard_acquire@@Base+0x104>
   29094:	mov	w0, w19
   29098:	ldp	x20, x19, [sp, #48]
   2909c:	ldp	x22, x21, [sp, #32]
   290a0:	ldr	x23, [sp, #16]
   290a4:	ldp	x29, x30, [sp], #64
   290a8:	ret
   290ac:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   290b0:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   290b4:	add	x0, x0, #0x5ef
   290b8:	add	x1, x1, #0x5a5
   290bc:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   290c0:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   290c4:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   290c8:	add	x0, x0, #0x60a
   290cc:	add	x1, x1, #0x5a5
   290d0:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   290d4:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   290d8:	add	x0, x0, #0x5b9
   290dc:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   290e0:	b	290e8 <__cxa_guard_acquire@@Base+0x12c>
   290e4:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   290e8:	mov	x19, x0
   290ec:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   290f0:	add	x0, x0, #0x270
   290f4:	bl	eee0 <pthread_mutex_unlock@plt>
   290f8:	cbnz	w0, 29104 <__cxa_guard_acquire@@Base+0x148>
   290fc:	mov	x0, x19
   29100:	bl	eea0 <_Unwind_Resume@plt>
   29104:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29108:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2910c:	add	x0, x0, #0x60a
   29110:	add	x1, x1, #0x5a5
   29114:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   29118:	bl	29260 <__cxa_guard_abort@@Base+0x9c>

000000000002911c <__cxa_guard_release@@Base>:
   2911c:	stp	x29, x30, [sp, #-48]!
   29120:	str	x21, [sp, #16]
   29124:	stp	x20, x19, [sp, #32]
   29128:	mov	x29, sp
   2912c:	mov	w20, #0x1                   	// #1
   29130:	mov	x19, x0
   29134:	stlrb	w20, [x0]
   29138:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   2913c:	add	x0, x0, #0x270
   29140:	bl	eec0 <pthread_mutex_lock@plt>
   29144:	cbnz	w0, 29184 <__cxa_guard_release@@Base+0x68>
   29148:	ldrb	w21, [x19, #1]
   2914c:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   29150:	add	x0, x0, #0x270
   29154:	strb	w20, [x19, #1]
   29158:	bl	eee0 <pthread_mutex_unlock@plt>
   2915c:	cbnz	w0, 29198 <__cxa_guard_release@@Base+0x7c>
   29160:	tbz	w21, #2, 29174 <__cxa_guard_release@@Base+0x58>
   29164:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   29168:	add	x0, x0, #0x2a0
   2916c:	bl	eca0 <pthread_cond_broadcast@plt>
   29170:	cbnz	w0, 291ac <__cxa_guard_release@@Base+0x90>
   29174:	ldp	x20, x19, [sp, #32]
   29178:	ldr	x21, [sp, #16]
   2917c:	ldp	x29, x30, [sp], #48
   29180:	ret
   29184:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29188:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2918c:	add	x0, x0, #0x5ef
   29190:	add	x1, x1, #0x625
   29194:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   29198:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2919c:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   291a0:	add	x0, x0, #0x60a
   291a4:	add	x1, x1, #0x625
   291a8:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   291ac:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   291b0:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   291b4:	add	x0, x0, #0x639
   291b8:	add	x1, x1, #0x625
   291bc:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   291c0:	bl	29260 <__cxa_guard_abort@@Base+0x9c>

00000000000291c4 <__cxa_guard_abort@@Base>:
   291c4:	stp	x29, x30, [sp, #-32]!
   291c8:	stp	x20, x19, [sp, #16]
   291cc:	mov	x29, sp
   291d0:	mov	x19, x0
   291d4:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   291d8:	add	x0, x0, #0x270
   291dc:	bl	eec0 <pthread_mutex_lock@plt>
   291e0:	cbnz	w0, 29220 <__cxa_guard_abort@@Base+0x5c>
   291e4:	ldrb	w20, [x19, #1]
   291e8:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   291ec:	add	x0, x0, #0x270
   291f0:	str	wzr, [x19, #4]
   291f4:	strb	wzr, [x19, #1]
   291f8:	bl	eee0 <pthread_mutex_unlock@plt>
   291fc:	cbnz	w0, 29234 <__cxa_guard_abort@@Base+0x70>
   29200:	tbz	w20, #2, 29214 <__cxa_guard_abort@@Base+0x50>
   29204:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   29208:	add	x0, x0, #0x2a0
   2920c:	bl	eca0 <pthread_cond_broadcast@plt>
   29210:	cbnz	w0, 29248 <__cxa_guard_abort@@Base+0x84>
   29214:	ldp	x20, x19, [sp, #16]
   29218:	ldp	x29, x30, [sp], #32
   2921c:	ret
   29220:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29224:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29228:	add	x0, x0, #0x5ef
   2922c:	add	x1, x1, #0x650
   29230:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   29234:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29238:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2923c:	add	x0, x0, #0x60a
   29240:	add	x1, x1, #0x650
   29244:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   29248:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2924c:	adrp	x1, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29250:	add	x0, x0, #0x639
   29254:	add	x1, x1, #0x650
   29258:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   2925c:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   29260:	str	x30, [sp, #-16]!
   29264:	bl	ed90 <__cxa_begin_catch@plt>
   29268:	bl	eeb0 <_ZSt9terminatev@plt>

000000000002926c <_ZSt14get_unexpectedv@@Base>:
   2926c:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29270:	ldr	x8, [x8, #3808]
   29274:	ldar	x0, [x8]
   29278:	ret

000000000002927c <_ZSt9terminatev@@Base>:
   2927c:	stp	x30, x19, [sp, #-16]!
   29280:	bl	ec10 <__cxa_get_globals_fast@plt>
   29284:	cbz	x0, 292a4 <_ZSt9terminatev@@Base+0x28>
   29288:	ldr	x19, [x0]
   2928c:	cbz	x19, 292a4 <_ZSt9terminatev@@Base+0x28>
   29290:	add	x0, x19, #0x60
   29294:	bl	2c0d4 <_ZdaPvmSt11align_val_t@@Base+0x18>
   29298:	tbz	w0, #0, 292a4 <_ZSt9terminatev@@Base+0x28>
   2929c:	ldr	x0, [x19, #40]
   292a0:	bl	292fc <_ZSt13get_terminatev@@Base+0x10>
   292a4:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   292a8:	ldr	x8, [x8, #3992]
   292ac:	ldar	x0, [x8]
   292b0:	bl	292fc <_ZSt13get_terminatev@@Base+0x10>
   292b4:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   292b8:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   292bc:	stp	x29, x30, [sp, #-16]!
   292c0:	mov	x29, sp
   292c4:	blr	x0
   292c8:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   292cc:	add	x0, x0, #0x662
   292d0:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>

00000000000292d4 <_ZSt10unexpectedv@@Base>:
   292d4:	stp	x29, x30, [sp, #-16]!
   292d8:	mov	x29, sp
   292dc:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   292e0:	ldr	x8, [x8, #3808]
   292e4:	ldar	x0, [x8]
   292e8:	bl	292bc <_ZSt9terminatev@@Base+0x40>

00000000000292ec <_ZSt13get_terminatev@@Base>:
   292ec:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   292f0:	ldr	x8, [x8, #3992]
   292f4:	ldar	x0, [x8]
   292f8:	ret
   292fc:	stp	x29, x30, [sp, #-32]!
   29300:	str	x19, [sp, #16]
   29304:	mov	x29, sp
   29308:	blr	x0
   2930c:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29310:	add	x0, x0, #0x68b
   29314:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   29318:	bl	ed90 <__cxa_begin_catch@plt>
   2931c:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29320:	add	x0, x0, #0x6b3
   29324:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>
   29328:	mov	x19, x0
   2932c:	bl	eb60 <__cxa_end_catch@plt>
   29330:	mov	x0, x19
   29334:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   29338:	bl	29260 <__cxa_guard_abort@@Base+0x9c>

000000000002933c <_ZSt15set_new_handlerPFvvE@@Base>:
   2933c:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29340:	ldr	x9, [x9, #3840]
   29344:	ldaxr	x8, [x9]
   29348:	stlxr	w10, x0, [x9]
   2934c:	cbnz	w10, 29344 <_ZSt15set_new_handlerPFvvE@@Base+0x8>
   29350:	mov	x0, x8
   29354:	ret

0000000000029358 <_ZSt15get_new_handlerv@@Base>:
   29358:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2935c:	ldr	x8, [x8, #3840]
   29360:	ldar	x0, [x8]
   29364:	ret

0000000000029368 <__cxa_vec_new@@Base>:
   29368:	stp	x29, x30, [sp, #-96]!
   2936c:	str	x27, [sp, #16]
   29370:	stp	x26, x25, [sp, #32]
   29374:	stp	x24, x23, [sp, #48]
   29378:	stp	x22, x21, [sp, #64]
   2937c:	stp	x20, x19, [sp, #80]
   29380:	mov	x29, sp
   29384:	umulh	x8, x0, x1
   29388:	cmp	xzr, x8
   2938c:	b.ne	29414 <__cxa_vec_new@@Base+0xac>  // b.any
   29390:	mul	x8, x0, x1
   29394:	mov	x21, x1
   29398:	mov	x23, x0
   2939c:	mov	x25, x2
   293a0:	adds	x0, x8, x2
   293a4:	b.cs	29414 <__cxa_vec_new@@Base+0xac>  // b.hs, b.nlast
   293a8:	mov	x19, x4
   293ac:	mov	x22, x3
   293b0:	bl	eb30 <_Znam@plt>
   293b4:	mov	x20, x0
   293b8:	mov	x24, x0
   293bc:	cbz	x25, 293c8 <__cxa_vec_new@@Base+0x60>
   293c0:	add	x24, x20, x25
   293c4:	stur	x23, [x24, #-8]
   293c8:	cbz	x23, 293f4 <__cxa_vec_new@@Base+0x8c>
   293cc:	cbz	x22, 293f4 <__cxa_vec_new@@Base+0x8c>
   293d0:	mov	x26, xzr
   293d4:	neg	x27, x21
   293d8:	mov	x25, x24
   293dc:	mov	x0, x25
   293e0:	blr	x22
   293e4:	add	x26, x26, #0x1
   293e8:	cmp	x23, x26
   293ec:	add	x25, x25, x21
   293f0:	b.ne	293dc <__cxa_vec_new@@Base+0x74>  // b.any
   293f4:	mov	x0, x24
   293f8:	ldp	x20, x19, [sp, #80]
   293fc:	ldp	x22, x21, [sp, #64]
   29400:	ldp	x24, x23, [sp, #48]
   29404:	ldp	x26, x25, [sp, #32]
   29408:	ldr	x27, [sp, #16]
   2940c:	ldp	x29, x30, [sp], #96
   29410:	ret
   29414:	bl	29b88 <__cxa_vec_delete3@@Base+0xf0>
   29418:	mov	x22, x0
   2941c:	cbz	x19, 29444 <__cxa_vec_new@@Base+0xdc>
   29420:	add	x0, x25, x27
   29424:	mvn	x23, x26
   29428:	neg	x21, x21
   2942c:	adds	x23, x23, #0x1
   29430:	b.cs	29444 <__cxa_vec_new@@Base+0xdc>  // b.hs, b.nlast
   29434:	add	x24, x0, x21
   29438:	blr	x19
   2943c:	mov	x0, x24
   29440:	b	2942c <__cxa_vec_new@@Base+0xc4>
   29444:	mov	x0, x20
   29448:	bl	ed50 <_ZdaPv@plt>
   2944c:	mov	x0, x22
   29450:	bl	eea0 <_Unwind_Resume@plt>
   29454:	bl	eeb0 <_ZSt9terminatev@plt>

0000000000029458 <__cxa_vec_new2@@Base>:
   29458:	stp	x29, x30, [sp, #-96]!
   2945c:	stp	x28, x27, [sp, #16]
   29460:	stp	x26, x25, [sp, #32]
   29464:	stp	x24, x23, [sp, #48]
   29468:	stp	x22, x21, [sp, #64]
   2946c:	stp	x20, x19, [sp, #80]
   29470:	mov	x29, sp
   29474:	umulh	x8, x0, x1
   29478:	cmp	xzr, x8
   2947c:	b.ne	29514 <__cxa_vec_new2@@Base+0xbc>  // b.any
   29480:	mul	x8, x0, x1
   29484:	mov	x22, x1
   29488:	mov	x24, x0
   2948c:	mov	x26, x2
   29490:	adds	x0, x8, x2
   29494:	b.cs	29514 <__cxa_vec_new2@@Base+0xbc>  // b.hs, b.nlast
   29498:	mov	x19, x6
   2949c:	mov	x20, x4
   294a0:	mov	x23, x3
   294a4:	blr	x5
   294a8:	cbz	x0, 294f0 <__cxa_vec_new2@@Base+0x98>
   294ac:	mov	x21, x0
   294b0:	mov	x25, x0
   294b4:	cbz	x26, 294c0 <__cxa_vec_new2@@Base+0x68>
   294b8:	add	x25, x21, x26
   294bc:	stur	x24, [x25, #-8]
   294c0:	cbz	x24, 294f4 <__cxa_vec_new2@@Base+0x9c>
   294c4:	cbz	x23, 294f4 <__cxa_vec_new2@@Base+0x9c>
   294c8:	mov	x27, xzr
   294cc:	neg	x28, x22
   294d0:	mov	x26, x25
   294d4:	mov	x0, x26
   294d8:	blr	x23
   294dc:	add	x27, x27, #0x1
   294e0:	cmp	x24, x27
   294e4:	add	x26, x26, x22
   294e8:	b.ne	294d4 <__cxa_vec_new2@@Base+0x7c>  // b.any
   294ec:	b	294f4 <__cxa_vec_new2@@Base+0x9c>
   294f0:	mov	x25, xzr
   294f4:	mov	x0, x25
   294f8:	ldp	x20, x19, [sp, #80]
   294fc:	ldp	x22, x21, [sp, #64]
   29500:	ldp	x24, x23, [sp, #48]
   29504:	ldp	x26, x25, [sp, #32]
   29508:	ldp	x28, x27, [sp, #16]
   2950c:	ldp	x29, x30, [sp], #96
   29510:	ret
   29514:	bl	29b88 <__cxa_vec_delete3@@Base+0xf0>
   29518:	mov	x23, x0
   2951c:	cbz	x20, 29544 <__cxa_vec_new2@@Base+0xec>
   29520:	add	x0, x26, x28
   29524:	mvn	x24, x27
   29528:	neg	x22, x22
   2952c:	adds	x24, x24, #0x1
   29530:	b.cs	29544 <__cxa_vec_new2@@Base+0xec>  // b.hs, b.nlast
   29534:	add	x25, x0, x22
   29538:	blr	x20
   2953c:	mov	x0, x25
   29540:	b	2952c <__cxa_vec_new2@@Base+0xd4>
   29544:	mov	x0, x21
   29548:	blr	x19
   2954c:	mov	x0, x23
   29550:	bl	eea0 <_Unwind_Resume@plt>
   29554:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   29558:	bl	eeb0 <_ZSt9terminatev@plt>

000000000002955c <__cxa_vec_ctor@@Base>:
   2955c:	stp	x29, x30, [sp, #-80]!
   29560:	str	x25, [sp, #16]
   29564:	stp	x24, x23, [sp, #32]
   29568:	stp	x22, x21, [sp, #48]
   2956c:	stp	x20, x19, [sp, #64]
   29570:	mov	x29, sp
   29574:	cbz	x3, 295b0 <__cxa_vec_ctor@@Base+0x54>
   29578:	mov	x23, x1
   2957c:	cbz	x1, 295b0 <__cxa_vec_ctor@@Base+0x54>
   29580:	mov	x19, x4
   29584:	mov	x22, x3
   29588:	mov	x20, x2
   2958c:	mov	x21, x0
   29590:	mov	x24, xzr
   29594:	neg	x25, x2
   29598:	mov	x0, x21
   2959c:	blr	x22
   295a0:	add	x24, x24, #0x1
   295a4:	cmp	x23, x24
   295a8:	add	x21, x21, x20
   295ac:	b.ne	29598 <__cxa_vec_ctor@@Base+0x3c>  // b.any
   295b0:	ldp	x20, x19, [sp, #64]
   295b4:	ldp	x22, x21, [sp, #48]
   295b8:	ldp	x24, x23, [sp, #32]
   295bc:	ldr	x25, [sp, #16]
   295c0:	ldp	x29, x30, [sp], #80
   295c4:	ret
   295c8:	mov	x22, x0
   295cc:	cbz	x19, 295f4 <__cxa_vec_ctor@@Base+0x98>
   295d0:	add	x0, x21, x25
   295d4:	mvn	x21, x24
   295d8:	neg	x20, x20
   295dc:	adds	x21, x21, #0x1
   295e0:	b.cs	295f4 <__cxa_vec_ctor@@Base+0x98>  // b.hs, b.nlast
   295e4:	add	x23, x0, x20
   295e8:	blr	x19
   295ec:	mov	x0, x23
   295f0:	b	295dc <__cxa_vec_ctor@@Base+0x80>
   295f4:	mov	x0, x22
   295f8:	bl	eea0 <_Unwind_Resume@plt>
   295fc:	bl	eeb0 <_ZSt9terminatev@plt>

0000000000029600 <__cxa_vec_new3@@Base>:
   29600:	sub	sp, sp, #0x70
   29604:	stp	x29, x30, [sp, #16]
   29608:	stp	x28, x27, [sp, #32]
   2960c:	stp	x26, x25, [sp, #48]
   29610:	stp	x24, x23, [sp, #64]
   29614:	stp	x22, x21, [sp, #80]
   29618:	stp	x20, x19, [sp, #96]
   2961c:	add	x29, sp, #0x10
   29620:	umulh	x8, x0, x1
   29624:	cmp	xzr, x8
   29628:	b.ne	296cc <__cxa_vec_new3@@Base+0xcc>  // b.any
   2962c:	mul	x8, x0, x1
   29630:	mov	x23, x1
   29634:	mov	x25, x0
   29638:	mov	x27, x2
   2963c:	adds	x21, x8, x2
   29640:	b.cs	296cc <__cxa_vec_new3@@Base+0xcc>  // b.hs, b.nlast
   29644:	mov	x0, x21
   29648:	mov	x19, x6
   2964c:	mov	x20, x4
   29650:	mov	x24, x3
   29654:	blr	x5
   29658:	cbz	x0, 296a4 <__cxa_vec_new3@@Base+0xa4>
   2965c:	mov	x22, x0
   29660:	mov	x26, x0
   29664:	cbz	x27, 29670 <__cxa_vec_new3@@Base+0x70>
   29668:	add	x26, x22, x27
   2966c:	stur	x25, [x26, #-8]
   29670:	cbz	x25, 296a8 <__cxa_vec_new3@@Base+0xa8>
   29674:	cbz	x24, 296a8 <__cxa_vec_new3@@Base+0xa8>
   29678:	mov	x28, xzr
   2967c:	neg	x8, x23
   29680:	mov	x27, x26
   29684:	str	x8, [sp, #8]
   29688:	mov	x0, x27
   2968c:	blr	x24
   29690:	add	x28, x28, #0x1
   29694:	cmp	x25, x28
   29698:	add	x27, x27, x23
   2969c:	b.ne	29688 <__cxa_vec_new3@@Base+0x88>  // b.any
   296a0:	b	296a8 <__cxa_vec_new3@@Base+0xa8>
   296a4:	mov	x26, xzr
   296a8:	mov	x0, x26
   296ac:	ldp	x20, x19, [sp, #96]
   296b0:	ldp	x22, x21, [sp, #80]
   296b4:	ldp	x24, x23, [sp, #64]
   296b8:	ldp	x26, x25, [sp, #48]
   296bc:	ldp	x28, x27, [sp, #32]
   296c0:	ldp	x29, x30, [sp, #16]
   296c4:	add	sp, sp, #0x70
   296c8:	ret
   296cc:	bl	29b88 <__cxa_vec_delete3@@Base+0xf0>
   296d0:	mov	x24, x0
   296d4:	cbz	x20, 29700 <__cxa_vec_new3@@Base+0x100>
   296d8:	ldr	x8, [sp, #8]
   296dc:	mvn	x25, x28
   296e0:	neg	x23, x23
   296e4:	add	x0, x27, x8
   296e8:	adds	x25, x25, #0x1
   296ec:	b.cs	29700 <__cxa_vec_new3@@Base+0x100>  // b.hs, b.nlast
   296f0:	add	x26, x0, x23
   296f4:	blr	x20
   296f8:	mov	x0, x26
   296fc:	b	296e8 <__cxa_vec_new3@@Base+0xe8>
   29700:	mov	x0, x22
   29704:	mov	x1, x21
   29708:	blr	x19
   2970c:	mov	x0, x24
   29710:	bl	eea0 <_Unwind_Resume@plt>
   29714:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   29718:	bl	eeb0 <_ZSt9terminatev@plt>

000000000002971c <__cxa_vec_cctor@@Base>:
   2971c:	stp	x29, x30, [sp, #-96]!
   29720:	str	x27, [sp, #16]
   29724:	stp	x26, x25, [sp, #32]
   29728:	stp	x24, x23, [sp, #48]
   2972c:	stp	x22, x21, [sp, #64]
   29730:	stp	x20, x19, [sp, #80]
   29734:	mov	x29, sp
   29738:	cbz	x4, 29780 <__cxa_vec_cctor@@Base+0x64>
   2973c:	mov	x22, x2
   29740:	cbz	x2, 29780 <__cxa_vec_cctor@@Base+0x64>
   29744:	mov	x19, x5
   29748:	mov	x21, x4
   2974c:	mov	x20, x3
   29750:	mov	x23, x1
   29754:	mov	x24, x0
   29758:	mov	x26, xzr
   2975c:	mov	x25, xzr
   29760:	sub	x27, x0, x3
   29764:	add	x1, x23, x26
   29768:	add	x0, x24, x26
   2976c:	blr	x21
   29770:	add	x25, x25, #0x1
   29774:	cmp	x22, x25
   29778:	add	x26, x26, x20
   2977c:	b.ne	29764 <__cxa_vec_cctor@@Base+0x48>  // b.any
   29780:	ldp	x20, x19, [sp, #80]
   29784:	ldp	x22, x21, [sp, #64]
   29788:	ldp	x24, x23, [sp, #48]
   2978c:	ldp	x26, x25, [sp, #32]
   29790:	ldr	x27, [sp, #16]
   29794:	ldp	x29, x30, [sp], #96
   29798:	ret
   2979c:	mov	x21, x0
   297a0:	cbz	x19, 297c8 <__cxa_vec_cctor@@Base+0xac>
   297a4:	add	x0, x27, x26
   297a8:	mvn	x22, x25
   297ac:	neg	x20, x20
   297b0:	adds	x22, x22, #0x1
   297b4:	b.cs	297c8 <__cxa_vec_cctor@@Base+0xac>  // b.hs, b.nlast
   297b8:	add	x23, x0, x20
   297bc:	blr	x19
   297c0:	mov	x0, x23
   297c4:	b	297b0 <__cxa_vec_cctor@@Base+0x94>
   297c8:	mov	x0, x21
   297cc:	bl	eea0 <_Unwind_Resume@plt>
   297d0:	bl	eeb0 <_ZSt9terminatev@plt>

00000000000297d4 <__cxa_vec_dtor@@Base>:
   297d4:	stp	x29, x30, [sp, #-80]!
   297d8:	str	x25, [sp, #16]
   297dc:	stp	x24, x23, [sp, #32]
   297e0:	stp	x22, x21, [sp, #48]
   297e4:	stp	x20, x19, [sp, #64]
   297e8:	mov	x29, sp
   297ec:	cbz	x3, 2982c <__cxa_vec_dtor@@Base+0x58>
   297f0:	mov	x19, x3
   297f4:	mov	x21, x2
   297f8:	mov	x20, x1
   297fc:	mov	x23, x0
   29800:	bl	ee10 <__cxa_uncaught_exception@plt>
   29804:	sub	x8, x20, #0x1
   29808:	mov	w22, w0
   2980c:	neg	x24, x21
   29810:	madd	x0, x21, x8, x23
   29814:	cbz	x20, 2982c <__cxa_vec_dtor@@Base+0x58>
   29818:	sub	x20, x20, #0x1
   2981c:	add	x21, x0, x24
   29820:	blr	x19
   29824:	mov	x0, x21
   29828:	b	29814 <__cxa_vec_dtor@@Base+0x40>
   2982c:	ldp	x20, x19, [sp, #64]
   29830:	ldp	x22, x21, [sp, #48]
   29834:	ldp	x24, x23, [sp, #32]
   29838:	ldr	x25, [sp, #16]
   2983c:	ldp	x29, x30, [sp], #80
   29840:	ret
   29844:	mov	w8, w22
   29848:	tbnz	w22, #0, 2987c <__cxa_vec_dtor@@Base+0xa8>
   2984c:	mov	x22, x0
   29850:	mov	x23, #0xffffffffffffffff    	// #-1
   29854:	add	x23, x23, #0x1
   29858:	cmp	x20, x23
   2985c:	b.eq	29874 <__cxa_vec_dtor@@Base+0xa0>  // b.none
   29860:	add	x25, x21, x24
   29864:	mov	x0, x21
   29868:	blr	x19
   2986c:	mov	x21, x25
   29870:	b	29854 <__cxa_vec_dtor@@Base+0x80>
   29874:	mov	x0, x22
   29878:	bl	eea0 <_Unwind_Resume@plt>
   2987c:	bl	eeb0 <_ZSt9terminatev@plt>
   29880:	bl	eeb0 <_ZSt9terminatev@plt>

0000000000029884 <__cxa_vec_cleanup@@Base>:
   29884:	stp	x29, x30, [sp, #-48]!
   29888:	stp	x22, x21, [sp, #16]
   2988c:	stp	x20, x19, [sp, #32]
   29890:	mov	x29, sp
   29894:	cbz	x3, 298c4 <__cxa_vec_cleanup@@Base+0x40>
   29898:	sub	x8, x1, #0x1
   2989c:	mov	x19, x3
   298a0:	neg	x20, x2
   298a4:	add	x21, x1, #0x1
   298a8:	madd	x0, x2, x8, x0
   298ac:	subs	x21, x21, #0x1
   298b0:	b.eq	298c4 <__cxa_vec_cleanup@@Base+0x40>  // b.none
   298b4:	add	x22, x0, x20
   298b8:	blr	x19
   298bc:	mov	x0, x22
   298c0:	b	298ac <__cxa_vec_cleanup@@Base+0x28>
   298c4:	ldp	x20, x19, [sp, #32]
   298c8:	ldp	x22, x21, [sp, #16]
   298cc:	ldp	x29, x30, [sp], #48
   298d0:	ret
   298d4:	bl	eeb0 <_ZSt9terminatev@plt>

00000000000298d8 <__cxa_vec_delete@@Base>:
   298d8:	stp	x29, x30, [sp, #-80]!
   298dc:	stp	x26, x25, [sp, #16]
   298e0:	stp	x24, x23, [sp, #32]
   298e4:	stp	x22, x21, [sp, #48]
   298e8:	stp	x20, x19, [sp, #64]
   298ec:	mov	x29, sp
   298f0:	cbz	x0, 29958 <__cxa_vec_delete@@Base+0x80>
   298f4:	mov	x23, x0
   298f8:	sub	x20, x0, x2
   298fc:	cbz	x2, 2993c <__cxa_vec_delete@@Base+0x64>
   29900:	mov	x19, x3
   29904:	cbz	x3, 2993c <__cxa_vec_delete@@Base+0x64>
   29908:	ldur	x24, [x23, #-8]
   2990c:	mov	x21, x1
   29910:	bl	ee10 <__cxa_uncaught_exception@plt>
   29914:	sub	x8, x24, #0x1
   29918:	mov	w22, w0
   2991c:	neg	x25, x21
   29920:	madd	x0, x21, x8, x23
   29924:	cbz	x24, 2993c <__cxa_vec_delete@@Base+0x64>
   29928:	sub	x24, x24, #0x1
   2992c:	add	x21, x0, x25
   29930:	blr	x19
   29934:	mov	x0, x21
   29938:	b	29924 <__cxa_vec_delete@@Base+0x4c>
   2993c:	mov	x0, x20
   29940:	ldp	x20, x19, [sp, #64]
   29944:	ldp	x22, x21, [sp, #48]
   29948:	ldp	x24, x23, [sp, #32]
   2994c:	ldp	x26, x25, [sp, #16]
   29950:	ldp	x29, x30, [sp], #80
   29954:	b	ed50 <_ZdaPv@plt>
   29958:	ldp	x20, x19, [sp, #64]
   2995c:	ldp	x22, x21, [sp, #48]
   29960:	ldp	x24, x23, [sp, #32]
   29964:	ldp	x26, x25, [sp, #16]
   29968:	ldp	x29, x30, [sp], #80
   2996c:	ret
   29970:	mov	w8, w22
   29974:	tbnz	w22, #0, 299b0 <__cxa_vec_delete@@Base+0xd8>
   29978:	mov	x22, x0
   2997c:	mov	x23, #0xffffffffffffffff    	// #-1
   29980:	add	x23, x23, #0x1
   29984:	cmp	x24, x23
   29988:	b.eq	299a0 <__cxa_vec_delete@@Base+0xc8>  // b.none
   2998c:	add	x26, x21, x25
   29990:	mov	x0, x21
   29994:	blr	x19
   29998:	mov	x21, x26
   2999c:	b	29980 <__cxa_vec_delete@@Base+0xa8>
   299a0:	mov	x0, x20
   299a4:	bl	ed50 <_ZdaPv@plt>
   299a8:	mov	x0, x22
   299ac:	bl	eea0 <_Unwind_Resume@plt>
   299b0:	bl	eeb0 <_ZSt9terminatev@plt>
   299b4:	bl	eeb0 <_ZSt9terminatev@plt>

00000000000299b8 <__cxa_vec_delete2@@Base>:
   299b8:	stp	x29, x30, [sp, #-96]!
   299bc:	str	x27, [sp, #16]
   299c0:	stp	x26, x25, [sp, #32]
   299c4:	stp	x24, x23, [sp, #48]
   299c8:	stp	x22, x21, [sp, #64]
   299cc:	stp	x20, x19, [sp, #80]
   299d0:	mov	x29, sp
   299d4:	cbz	x0, 29a2c <__cxa_vec_delete2@@Base+0x74>
   299d8:	mov	x19, x4
   299dc:	mov	x24, x0
   299e0:	sub	x21, x0, x2
   299e4:	cbz	x2, 29a24 <__cxa_vec_delete2@@Base+0x6c>
   299e8:	mov	x20, x3
   299ec:	cbz	x3, 29a24 <__cxa_vec_delete2@@Base+0x6c>
   299f0:	ldur	x25, [x24, #-8]
   299f4:	mov	x23, x1
   299f8:	bl	ee10 <__cxa_uncaught_exception@plt>
   299fc:	sub	x8, x25, #0x1
   29a00:	mov	w22, w0
   29a04:	neg	x26, x23
   29a08:	madd	x0, x23, x8, x24
   29a0c:	cbz	x25, 29a24 <__cxa_vec_delete2@@Base+0x6c>
   29a10:	sub	x25, x25, #0x1
   29a14:	add	x23, x0, x26
   29a18:	blr	x20
   29a1c:	mov	x0, x23
   29a20:	b	29a0c <__cxa_vec_delete2@@Base+0x54>
   29a24:	mov	x0, x21
   29a28:	blr	x19
   29a2c:	ldp	x20, x19, [sp, #80]
   29a30:	ldp	x22, x21, [sp, #64]
   29a34:	ldp	x24, x23, [sp, #48]
   29a38:	ldp	x26, x25, [sp, #32]
   29a3c:	ldr	x27, [sp, #16]
   29a40:	ldp	x29, x30, [sp], #96
   29a44:	ret
   29a48:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   29a4c:	mov	w8, w22
   29a50:	tbnz	w22, #0, 29a8c <__cxa_vec_delete2@@Base+0xd4>
   29a54:	mov	x22, x0
   29a58:	mov	x24, #0xffffffffffffffff    	// #-1
   29a5c:	add	x24, x24, #0x1
   29a60:	cmp	x25, x24
   29a64:	b.eq	29a7c <__cxa_vec_delete2@@Base+0xc4>  // b.none
   29a68:	add	x27, x23, x26
   29a6c:	mov	x0, x23
   29a70:	blr	x20
   29a74:	mov	x23, x27
   29a78:	b	29a5c <__cxa_vec_delete2@@Base+0xa4>
   29a7c:	mov	x0, x21
   29a80:	blr	x19
   29a84:	mov	x0, x22
   29a88:	bl	eea0 <_Unwind_Resume@plt>
   29a8c:	bl	eeb0 <_ZSt9terminatev@plt>
   29a90:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   29a94:	bl	eeb0 <_ZSt9terminatev@plt>

0000000000029a98 <__cxa_vec_delete3@@Base>:
   29a98:	stp	x29, x30, [sp, #-96]!
   29a9c:	stp	x28, x27, [sp, #16]
   29aa0:	stp	x26, x25, [sp, #32]
   29aa4:	stp	x24, x23, [sp, #48]
   29aa8:	stp	x22, x21, [sp, #64]
   29aac:	stp	x20, x19, [sp, #80]
   29ab0:	mov	x29, sp
   29ab4:	cbz	x0, 29b18 <__cxa_vec_delete3@@Base+0x80>
   29ab8:	mov	x19, x4
   29abc:	mov	x25, x0
   29ac0:	sub	x20, x0, x2
   29ac4:	cbz	x2, 29b08 <__cxa_vec_delete3@@Base+0x70>
   29ac8:	ldur	x26, [x25, #-8]
   29acc:	mov	x22, x3
   29ad0:	mov	x24, x1
   29ad4:	madd	x21, x26, x1, x2
   29ad8:	cbz	x3, 29b0c <__cxa_vec_delete3@@Base+0x74>
   29adc:	bl	ee10 <__cxa_uncaught_exception@plt>
   29ae0:	sub	x8, x26, #0x1
   29ae4:	mov	w23, w0
   29ae8:	neg	x27, x24
   29aec:	madd	x0, x24, x8, x25
   29af0:	cbz	x26, 29b0c <__cxa_vec_delete3@@Base+0x74>
   29af4:	sub	x26, x26, #0x1
   29af8:	add	x24, x0, x27
   29afc:	blr	x22
   29b00:	mov	x0, x24
   29b04:	b	29af0 <__cxa_vec_delete3@@Base+0x58>
   29b08:	mov	x21, xzr
   29b0c:	mov	x0, x20
   29b10:	mov	x1, x21
   29b14:	blr	x19
   29b18:	ldp	x20, x19, [sp, #80]
   29b1c:	ldp	x22, x21, [sp, #64]
   29b20:	ldp	x24, x23, [sp, #48]
   29b24:	ldp	x26, x25, [sp, #32]
   29b28:	ldp	x28, x27, [sp, #16]
   29b2c:	ldp	x29, x30, [sp], #96
   29b30:	ret
   29b34:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   29b38:	mov	w8, w23
   29b3c:	tbnz	w23, #0, 29b7c <__cxa_vec_delete3@@Base+0xe4>
   29b40:	mov	x23, x0
   29b44:	mov	x25, #0xffffffffffffffff    	// #-1
   29b48:	add	x25, x25, #0x1
   29b4c:	cmp	x26, x25
   29b50:	b.eq	29b68 <__cxa_vec_delete3@@Base+0xd0>  // b.none
   29b54:	add	x28, x24, x27
   29b58:	mov	x0, x24
   29b5c:	blr	x22
   29b60:	mov	x24, x28
   29b64:	b	29b48 <__cxa_vec_delete3@@Base+0xb0>
   29b68:	mov	x0, x20
   29b6c:	mov	x1, x21
   29b70:	blr	x19
   29b74:	mov	x0, x23
   29b78:	bl	eea0 <_Unwind_Resume@plt>
   29b7c:	bl	eeb0 <_ZSt9terminatev@plt>
   29b80:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   29b84:	bl	eeb0 <_ZSt9terminatev@plt>
   29b88:	stp	x29, x30, [sp, #-32]!
   29b8c:	str	x19, [sp, #16]
   29b90:	mov	x29, sp
   29b94:	mov	w0, #0x8                   	// #8
   29b98:	bl	eb80 <__cxa_allocate_exception@plt>
   29b9c:	mov	x19, x0
   29ba0:	bl	ec50 <_ZNSt20bad_array_new_lengthC1Ev@plt>
   29ba4:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29ba8:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29bac:	ldr	x1, [x1, #3920]
   29bb0:	ldr	x2, [x2, #4008]
   29bb4:	mov	x0, x19
   29bb8:	bl	edb0 <__cxa_throw@plt>

0000000000029bbc <__cxa_pure_virtual@@Base>:
   29bbc:	stp	x29, x30, [sp, #-16]!
   29bc0:	mov	x29, sp
   29bc4:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29bc8:	add	x0, x0, #0x6e5
   29bcc:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>

0000000000029bd0 <__cxa_deleted_virtual@@Base>:
   29bd0:	stp	x29, x30, [sp, #-16]!
   29bd4:	mov	x29, sp
   29bd8:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29bdc:	add	x0, x0, #0x703
   29be0:	bl	2a0dc <_ZNKSt10bad_typeid4whatEv@@Base+0xc>

0000000000029be4 <_ZNSt13bad_exceptionD1Ev@@Base>:
   29be4:	ret

0000000000029be8 <_ZNSt9exceptionD0Ev@@Base>:
   29be8:	b	eb20 <_ZdlPv@plt>

0000000000029bec <_ZNKSt9exception4whatEv@@Base>:
   29bec:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29bf0:	add	x0, x0, #0x724
   29bf4:	ret

0000000000029bf8 <_ZNSt13bad_exceptionD0Ev@@Base>:
   29bf8:	b	eb20 <_ZdlPv@plt>

0000000000029bfc <_ZNKSt13bad_exception4whatEv@@Base>:
   29bfc:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29c00:	add	x0, x0, #0x733
   29c04:	ret

0000000000029c08 <_ZNSt9bad_allocC1Ev@@Base>:
   29c08:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29c0c:	ldr	x8, [x8, #4000]
   29c10:	add	x8, x8, #0x10
   29c14:	str	x8, [x0]
   29c18:	ret

0000000000029c1c <_ZNSt9bad_allocD0Ev@@Base>:
   29c1c:	b	eb20 <_ZdlPv@plt>

0000000000029c20 <_ZNKSt9bad_alloc4whatEv@@Base>:
   29c20:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29c24:	add	x0, x0, #0x746
   29c28:	ret

0000000000029c2c <_ZNSt20bad_array_new_lengthC1Ev@@Base>:
   29c2c:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29c30:	ldr	x8, [x8, #3960]
   29c34:	add	x8, x8, #0x10
   29c38:	str	x8, [x0]
   29c3c:	ret

0000000000029c40 <_ZNSt20bad_array_new_lengthD0Ev@@Base>:
   29c40:	b	eb20 <_ZdlPv@plt>

0000000000029c44 <_ZNKSt20bad_array_new_length4whatEv@@Base>:
   29c44:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   29c48:	add	x0, x0, #0x755
   29c4c:	ret

0000000000029c50 <_ZNSt11logic_errorD1Ev@@Base>:
   29c50:	stp	x29, x30, [sp, #-32]!
   29c54:	str	x19, [sp, #16]
   29c58:	mov	x29, sp
   29c5c:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29c60:	ldr	x8, [x0, #8]
   29c64:	ldr	x9, [x9, #3952]
   29c68:	mov	x19, x0
   29c6c:	add	x9, x9, #0x10
   29c70:	str	x9, [x0]
   29c74:	sub	x9, x8, #0x8
   29c78:	ldaxr	w10, [x9]
   29c7c:	subs	w10, w10, #0x1
   29c80:	stlxr	w11, w10, [x9]
   29c84:	cbnz	w11, 29c78 <_ZNSt11logic_errorD1Ev@@Base+0x28>
   29c88:	b.pl	29c94 <_ZNSt11logic_errorD1Ev@@Base+0x44>  // b.nfrst
   29c8c:	sub	x0, x8, #0x18
   29c90:	bl	eb20 <_ZdlPv@plt>
   29c94:	mov	x0, x19
   29c98:	ldr	x19, [sp, #16]
   29c9c:	ldp	x29, x30, [sp], #32
   29ca0:	b	ee00 <_ZNSt9exceptionD2Ev@plt>

0000000000029ca4 <_ZNSt11logic_errorD0Ev@@Base>:
   29ca4:	stp	x29, x30, [sp, #-32]!
   29ca8:	str	x19, [sp, #16]
   29cac:	mov	x29, sp
   29cb0:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29cb4:	ldr	x8, [x0, #8]
   29cb8:	ldr	x9, [x9, #3952]
   29cbc:	mov	x19, x0
   29cc0:	add	x9, x9, #0x10
   29cc4:	str	x9, [x0]
   29cc8:	sub	x9, x8, #0x8
   29ccc:	ldaxr	w10, [x9]
   29cd0:	subs	w10, w10, #0x1
   29cd4:	stlxr	w11, w10, [x9]
   29cd8:	cbnz	w11, 29ccc <_ZNSt11logic_errorD0Ev@@Base+0x28>
   29cdc:	b.pl	29ce8 <_ZNSt11logic_errorD0Ev@@Base+0x44>  // b.nfrst
   29ce0:	sub	x0, x8, #0x18
   29ce4:	bl	eb20 <_ZdlPv@plt>
   29ce8:	mov	x0, x19
   29cec:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   29cf0:	mov	x0, x19
   29cf4:	ldr	x19, [sp, #16]
   29cf8:	ldp	x29, x30, [sp], #32
   29cfc:	b	eb20 <_ZdlPv@plt>

0000000000029d00 <_ZNKSt11logic_error4whatEv@@Base>:
   29d00:	ldr	x0, [x0, #8]
   29d04:	ret

0000000000029d08 <_ZNSt11range_errorD1Ev@@Base>:
   29d08:	stp	x29, x30, [sp, #-32]!
   29d0c:	str	x19, [sp, #16]
   29d10:	mov	x29, sp
   29d14:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29d18:	ldr	x8, [x0, #8]
   29d1c:	ldr	x9, [x9, #4048]
   29d20:	mov	x19, x0
   29d24:	add	x9, x9, #0x10
   29d28:	str	x9, [x0]
   29d2c:	sub	x9, x8, #0x8
   29d30:	ldaxr	w10, [x9]
   29d34:	subs	w10, w10, #0x1
   29d38:	stlxr	w11, w10, [x9]
   29d3c:	cbnz	w11, 29d30 <_ZNSt11range_errorD1Ev@@Base+0x28>
   29d40:	b.pl	29d4c <_ZNSt11range_errorD1Ev@@Base+0x44>  // b.nfrst
   29d44:	sub	x0, x8, #0x18
   29d48:	bl	eb20 <_ZdlPv@plt>
   29d4c:	mov	x0, x19
   29d50:	ldr	x19, [sp, #16]
   29d54:	ldp	x29, x30, [sp], #32
   29d58:	b	ee00 <_ZNSt9exceptionD2Ev@plt>

0000000000029d5c <_ZNSt13runtime_errorD0Ev@@Base>:
   29d5c:	stp	x29, x30, [sp, #-32]!
   29d60:	str	x19, [sp, #16]
   29d64:	mov	x29, sp
   29d68:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29d6c:	ldr	x8, [x0, #8]
   29d70:	ldr	x9, [x9, #4048]
   29d74:	mov	x19, x0
   29d78:	add	x9, x9, #0x10
   29d7c:	str	x9, [x0]
   29d80:	sub	x9, x8, #0x8
   29d84:	ldaxr	w10, [x9]
   29d88:	subs	w10, w10, #0x1
   29d8c:	stlxr	w11, w10, [x9]
   29d90:	cbnz	w11, 29d84 <_ZNSt13runtime_errorD0Ev@@Base+0x28>
   29d94:	b.pl	29da0 <_ZNSt13runtime_errorD0Ev@@Base+0x44>  // b.nfrst
   29d98:	sub	x0, x8, #0x18
   29d9c:	bl	eb20 <_ZdlPv@plt>
   29da0:	mov	x0, x19
   29da4:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   29da8:	mov	x0, x19
   29dac:	ldr	x19, [sp, #16]
   29db0:	ldp	x29, x30, [sp], #32
   29db4:	b	eb20 <_ZdlPv@plt>

0000000000029db8 <_ZNKSt13runtime_error4whatEv@@Base>:
   29db8:	ldr	x0, [x0, #8]
   29dbc:	ret

0000000000029dc0 <_ZNSt12domain_errorD0Ev@@Base>:
   29dc0:	stp	x29, x30, [sp, #-32]!
   29dc4:	str	x19, [sp, #16]
   29dc8:	mov	x29, sp
   29dcc:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29dd0:	ldr	x8, [x0, #8]
   29dd4:	ldr	x9, [x9, #3952]
   29dd8:	mov	x19, x0
   29ddc:	add	x9, x9, #0x10
   29de0:	str	x9, [x0]
   29de4:	sub	x9, x8, #0x8
   29de8:	ldaxr	w10, [x9]
   29dec:	subs	w10, w10, #0x1
   29df0:	stlxr	w11, w10, [x9]
   29df4:	cbnz	w11, 29de8 <_ZNSt12domain_errorD0Ev@@Base+0x28>
   29df8:	b.pl	29e04 <_ZNSt12domain_errorD0Ev@@Base+0x44>  // b.nfrst
   29dfc:	sub	x0, x8, #0x18
   29e00:	bl	eb20 <_ZdlPv@plt>
   29e04:	mov	x0, x19
   29e08:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   29e0c:	mov	x0, x19
   29e10:	ldr	x19, [sp, #16]
   29e14:	ldp	x29, x30, [sp], #32
   29e18:	b	eb20 <_ZdlPv@plt>

0000000000029e1c <_ZNSt16invalid_argumentD0Ev@@Base>:
   29e1c:	stp	x29, x30, [sp, #-32]!
   29e20:	str	x19, [sp, #16]
   29e24:	mov	x29, sp
   29e28:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29e2c:	ldr	x8, [x0, #8]
   29e30:	ldr	x9, [x9, #3952]
   29e34:	mov	x19, x0
   29e38:	add	x9, x9, #0x10
   29e3c:	str	x9, [x0]
   29e40:	sub	x9, x8, #0x8
   29e44:	ldaxr	w10, [x9]
   29e48:	subs	w10, w10, #0x1
   29e4c:	stlxr	w11, w10, [x9]
   29e50:	cbnz	w11, 29e44 <_ZNSt16invalid_argumentD0Ev@@Base+0x28>
   29e54:	b.pl	29e60 <_ZNSt16invalid_argumentD0Ev@@Base+0x44>  // b.nfrst
   29e58:	sub	x0, x8, #0x18
   29e5c:	bl	eb20 <_ZdlPv@plt>
   29e60:	mov	x0, x19
   29e64:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   29e68:	mov	x0, x19
   29e6c:	ldr	x19, [sp, #16]
   29e70:	ldp	x29, x30, [sp], #32
   29e74:	b	eb20 <_ZdlPv@plt>

0000000000029e78 <_ZNSt12length_errorD0Ev@@Base>:
   29e78:	stp	x29, x30, [sp, #-32]!
   29e7c:	str	x19, [sp, #16]
   29e80:	mov	x29, sp
   29e84:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29e88:	ldr	x8, [x0, #8]
   29e8c:	ldr	x9, [x9, #3952]
   29e90:	mov	x19, x0
   29e94:	add	x9, x9, #0x10
   29e98:	str	x9, [x0]
   29e9c:	sub	x9, x8, #0x8
   29ea0:	ldaxr	w10, [x9]
   29ea4:	subs	w10, w10, #0x1
   29ea8:	stlxr	w11, w10, [x9]
   29eac:	cbnz	w11, 29ea0 <_ZNSt12length_errorD0Ev@@Base+0x28>
   29eb0:	b.pl	29ebc <_ZNSt12length_errorD0Ev@@Base+0x44>  // b.nfrst
   29eb4:	sub	x0, x8, #0x18
   29eb8:	bl	eb20 <_ZdlPv@plt>
   29ebc:	mov	x0, x19
   29ec0:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   29ec4:	mov	x0, x19
   29ec8:	ldr	x19, [sp, #16]
   29ecc:	ldp	x29, x30, [sp], #32
   29ed0:	b	eb20 <_ZdlPv@plt>

0000000000029ed4 <_ZNSt12out_of_rangeD0Ev@@Base>:
   29ed4:	stp	x29, x30, [sp, #-32]!
   29ed8:	str	x19, [sp, #16]
   29edc:	mov	x29, sp
   29ee0:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29ee4:	ldr	x8, [x0, #8]
   29ee8:	ldr	x9, [x9, #3952]
   29eec:	mov	x19, x0
   29ef0:	add	x9, x9, #0x10
   29ef4:	str	x9, [x0]
   29ef8:	sub	x9, x8, #0x8
   29efc:	ldaxr	w10, [x9]
   29f00:	subs	w10, w10, #0x1
   29f04:	stlxr	w11, w10, [x9]
   29f08:	cbnz	w11, 29efc <_ZNSt12out_of_rangeD0Ev@@Base+0x28>
   29f0c:	b.pl	29f18 <_ZNSt12out_of_rangeD0Ev@@Base+0x44>  // b.nfrst
   29f10:	sub	x0, x8, #0x18
   29f14:	bl	eb20 <_ZdlPv@plt>
   29f18:	mov	x0, x19
   29f1c:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   29f20:	mov	x0, x19
   29f24:	ldr	x19, [sp, #16]
   29f28:	ldp	x29, x30, [sp], #32
   29f2c:	b	eb20 <_ZdlPv@plt>

0000000000029f30 <_ZNSt11range_errorD0Ev@@Base>:
   29f30:	stp	x29, x30, [sp, #-32]!
   29f34:	str	x19, [sp, #16]
   29f38:	mov	x29, sp
   29f3c:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29f40:	ldr	x8, [x0, #8]
   29f44:	ldr	x9, [x9, #4048]
   29f48:	mov	x19, x0
   29f4c:	add	x9, x9, #0x10
   29f50:	str	x9, [x0]
   29f54:	sub	x9, x8, #0x8
   29f58:	ldaxr	w10, [x9]
   29f5c:	subs	w10, w10, #0x1
   29f60:	stlxr	w11, w10, [x9]
   29f64:	cbnz	w11, 29f58 <_ZNSt11range_errorD0Ev@@Base+0x28>
   29f68:	b.pl	29f74 <_ZNSt11range_errorD0Ev@@Base+0x44>  // b.nfrst
   29f6c:	sub	x0, x8, #0x18
   29f70:	bl	eb20 <_ZdlPv@plt>
   29f74:	mov	x0, x19
   29f78:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   29f7c:	mov	x0, x19
   29f80:	ldr	x19, [sp, #16]
   29f84:	ldp	x29, x30, [sp], #32
   29f88:	b	eb20 <_ZdlPv@plt>

0000000000029f8c <_ZNSt14overflow_errorD0Ev@@Base>:
   29f8c:	stp	x29, x30, [sp, #-32]!
   29f90:	str	x19, [sp, #16]
   29f94:	mov	x29, sp
   29f98:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29f9c:	ldr	x8, [x0, #8]
   29fa0:	ldr	x9, [x9, #4048]
   29fa4:	mov	x19, x0
   29fa8:	add	x9, x9, #0x10
   29fac:	str	x9, [x0]
   29fb0:	sub	x9, x8, #0x8
   29fb4:	ldaxr	w10, [x9]
   29fb8:	subs	w10, w10, #0x1
   29fbc:	stlxr	w11, w10, [x9]
   29fc0:	cbnz	w11, 29fb4 <_ZNSt14overflow_errorD0Ev@@Base+0x28>
   29fc4:	b.pl	29fd0 <_ZNSt14overflow_errorD0Ev@@Base+0x44>  // b.nfrst
   29fc8:	sub	x0, x8, #0x18
   29fcc:	bl	eb20 <_ZdlPv@plt>
   29fd0:	mov	x0, x19
   29fd4:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   29fd8:	mov	x0, x19
   29fdc:	ldr	x19, [sp, #16]
   29fe0:	ldp	x29, x30, [sp], #32
   29fe4:	b	eb20 <_ZdlPv@plt>

0000000000029fe8 <_ZNSt15underflow_errorD0Ev@@Base>:
   29fe8:	stp	x29, x30, [sp, #-32]!
   29fec:	str	x19, [sp, #16]
   29ff0:	mov	x29, sp
   29ff4:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   29ff8:	ldr	x8, [x0, #8]
   29ffc:	ldr	x9, [x9, #4048]
   2a000:	mov	x19, x0
   2a004:	add	x9, x9, #0x10
   2a008:	str	x9, [x0]
   2a00c:	sub	x9, x8, #0x8
   2a010:	ldaxr	w10, [x9]
   2a014:	subs	w10, w10, #0x1
   2a018:	stlxr	w11, w10, [x9]
   2a01c:	cbnz	w11, 2a010 <_ZNSt15underflow_errorD0Ev@@Base+0x28>
   2a020:	b.pl	2a02c <_ZNSt15underflow_errorD0Ev@@Base+0x44>  // b.nfrst
   2a024:	sub	x0, x8, #0x18
   2a028:	bl	eb20 <_ZdlPv@plt>
   2a02c:	mov	x0, x19
   2a030:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   2a034:	mov	x0, x19
   2a038:	ldr	x19, [sp, #16]
   2a03c:	ldp	x29, x30, [sp], #32
   2a040:	b	eb20 <_ZdlPv@plt>

000000000002a044 <_ZNSt9type_infoD1Ev@@Base>:
   2a044:	ret

000000000002a048 <_ZNSt9type_infoD0Ev@@Base>:
   2a048:	b	eb20 <_ZdlPv@plt>

000000000002a04c <_ZNSt8bad_castC1Ev@@Base>:
   2a04c:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2a050:	ldr	x8, [x8, #3800]
   2a054:	add	x8, x8, #0x10
   2a058:	str	x8, [x0]
   2a05c:	ret

000000000002a060 <_ZNSt8bad_castD1Ev@@Base>:
   2a060:	b	ee00 <_ZNSt9exceptionD2Ev@plt>

000000000002a064 <_ZNSt8bad_castD0Ev@@Base>:
   2a064:	stp	x29, x30, [sp, #-32]!
   2a068:	str	x19, [sp, #16]
   2a06c:	mov	x29, sp
   2a070:	mov	x19, x0
   2a074:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   2a078:	mov	x0, x19
   2a07c:	ldr	x19, [sp, #16]
   2a080:	ldp	x29, x30, [sp], #32
   2a084:	b	eb20 <_ZdlPv@plt>

000000000002a088 <_ZNKSt8bad_cast4whatEv@@Base>:
   2a088:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2a08c:	add	x0, x0, #0x850
   2a090:	ret

000000000002a094 <_ZNSt10bad_typeidC1Ev@@Base>:
   2a094:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2a098:	ldr	x8, [x8, #3896]
   2a09c:	add	x8, x8, #0x10
   2a0a0:	str	x8, [x0]
   2a0a4:	ret

000000000002a0a8 <_ZNSt10bad_typeidD1Ev@@Base>:
   2a0a8:	b	ee00 <_ZNSt9exceptionD2Ev@plt>

000000000002a0ac <_ZNSt10bad_typeidD0Ev@@Base>:
   2a0ac:	stp	x29, x30, [sp, #-32]!
   2a0b0:	str	x19, [sp, #16]
   2a0b4:	mov	x29, sp
   2a0b8:	mov	x19, x0
   2a0bc:	bl	ee00 <_ZNSt9exceptionD2Ev@plt>
   2a0c0:	mov	x0, x19
   2a0c4:	ldr	x19, [sp, #16]
   2a0c8:	ldp	x29, x30, [sp], #32
   2a0cc:	b	eb20 <_ZdlPv@plt>

000000000002a0d0 <_ZNKSt10bad_typeid4whatEv@@Base>:
   2a0d0:	adrp	x0, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2a0d4:	add	x0, x0, #0x85e
   2a0d8:	ret
   2a0dc:	sub	sp, sp, #0x120
   2a0e0:	stp	x29, x30, [sp, #256]
   2a0e4:	stp	x28, x19, [sp, #272]
   2a0e8:	add	x29, sp, #0x100
   2a0ec:	stp	x1, x2, [x29, #-120]
   2a0f0:	stp	x3, x4, [x29, #-104]
   2a0f4:	stp	x5, x6, [x29, #-88]
   2a0f8:	stur	x7, [x29, #-72]
   2a0fc:	stp	q0, q1, [sp]
   2a100:	stp	q2, q3, [sp, #32]
   2a104:	stp	q4, q5, [sp, #64]
   2a108:	adrp	x19, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2a10c:	ldr	x19, [x19, #3856]
   2a110:	mov	x9, #0xffffffffffffffc8    	// #-56
   2a114:	mov	x10, sp
   2a118:	sub	x11, x29, #0x78
   2a11c:	movk	x9, #0xff80, lsl #32
   2a120:	add	x12, x29, #0x20
   2a124:	add	x10, x10, #0x80
   2a128:	add	x11, x11, #0x38
   2a12c:	stp	x10, x9, [x29, #-16]
   2a130:	stp	x12, x11, [x29, #-32]
   2a134:	mov	x8, x0
   2a138:	ldr	x0, [x19]
   2a13c:	ldp	q0, q1, [x29, #-32]
   2a140:	sub	x2, x29, #0x40
   2a144:	mov	x1, x8
   2a148:	stp	q6, q7, [sp, #96]
   2a14c:	stp	q0, q1, [x29, #-64]
   2a150:	bl	ee70 <vfprintf@plt>
   2a154:	ldr	x1, [x19]
   2a158:	mov	w0, #0xa                   	// #10
   2a15c:	bl	eb90 <fputc@plt>
   2a160:	bl	ecf0 <abort@plt>
   2a164:	sub	sp, sp, #0x30
   2a168:	stp	x29, x30, [sp, #16]
   2a16c:	stp	x20, x19, [sp, #32]
   2a170:	add	x29, sp, #0x10
   2a174:	cmp	x0, #0x0
   2a178:	csinc	x20, x0, xzr, ne  // ne = any
   2a17c:	add	x0, sp, #0x8
   2a180:	mov	w1, #0x10                  	// #16
   2a184:	mov	x2, x20
   2a188:	bl	ec60 <posix_memalign@plt>
   2a18c:	cbz	w0, 2a220 <_ZNKSt10bad_typeid4whatEv@@Base+0x150>
   2a190:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   2a194:	add	x0, x0, #0x2e0
   2a198:	bl	eec0 <pthread_mutex_lock@plt>
   2a19c:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
   2a1a0:	ldr	x10, [x8, #784]
   2a1a4:	cbnz	x10, 2a1bc <_ZNKSt10bad_typeid4whatEv@@Base+0xec>
   2a1a8:	adrp	x10, 49000 <memcpy@GLIBC_2.17>
   2a1ac:	add	x10, x10, #0x320
   2a1b0:	mov	w9, #0x800080              	// #8388736
   2a1b4:	str	x10, [x8, #784]
   2a1b8:	str	w9, [x10]
   2a1bc:	adrp	x9, 49000 <memcpy@GLIBC_2.17>
   2a1c0:	add	x9, x9, #0x520
   2a1c4:	cmp	x10, x9
   2a1c8:	mov	x19, xzr
   2a1cc:	b.eq	2a260 <_ZNKSt10bad_typeid4whatEv@@Base+0x190>  // b.none
   2a1d0:	cbz	x10, 2a260 <_ZNKSt10bad_typeid4whatEv@@Base+0x190>
   2a1d4:	add	x9, x20, #0x3
   2a1d8:	lsr	x9, x9, #2
   2a1dc:	adrp	x11, 49000 <memcpy@GLIBC_2.17>
   2a1e0:	mov	x12, xzr
   2a1e4:	add	x9, x9, #0x1
   2a1e8:	add	x11, x11, #0x320
   2a1ec:	mov	x19, x10
   2a1f0:	ldrh	w10, [x10, #2]
   2a1f4:	cmp	x9, x10
   2a1f8:	b.cc	2a228 <_ZNKSt10bad_typeid4whatEv@@Base+0x158>  // b.lo, b.ul, b.last
   2a1fc:	b.eq	2a244 <_ZNKSt10bad_typeid4whatEv@@Base+0x174>  // b.none
   2a200:	ldrh	w10, [x19]
   2a204:	mov	x12, x19
   2a208:	lsl	x10, x10, #2
   2a20c:	cmp	x10, #0x200
   2a210:	add	x10, x11, x10
   2a214:	b.ne	2a1ec <_ZNKSt10bad_typeid4whatEv@@Base+0x11c>  // b.any
   2a218:	mov	x19, xzr
   2a21c:	b	2a260 <_ZNKSt10bad_typeid4whatEv@@Base+0x190>
   2a220:	ldr	x19, [sp, #8]
   2a224:	b	2a26c <_ZNKSt10bad_typeid4whatEv@@Base+0x19c>
   2a228:	sub	w8, w10, w9
   2a22c:	strh	w8, [x19, #2]
   2a230:	add	x8, x19, w8, uxth #2
   2a234:	strh	wzr, [x8]
   2a238:	strh	w9, [x8, #2]
   2a23c:	add	x19, x8, #0x4
   2a240:	b	2a260 <_ZNKSt10bad_typeid4whatEv@@Base+0x190>
   2a244:	ldrh	w9, [x19]
   2a248:	cbz	x12, 2a254 <_ZNKSt10bad_typeid4whatEv@@Base+0x184>
   2a24c:	strh	w9, [x12]
   2a250:	b	2a25c <_ZNKSt10bad_typeid4whatEv@@Base+0x18c>
   2a254:	add	x9, x11, x9, lsl #2
   2a258:	str	x9, [x8, #784]
   2a25c:	strh	wzr, [x19], #4
   2a260:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   2a264:	add	x0, x0, #0x2e0
   2a268:	bl	eee0 <pthread_mutex_unlock@plt>
   2a26c:	mov	x0, x19
   2a270:	ldp	x20, x19, [sp, #32]
   2a274:	ldp	x29, x30, [sp, #16]
   2a278:	add	sp, sp, #0x30
   2a27c:	ret
   2a280:	stp	x29, x30, [sp, #-48]!
   2a284:	str	x21, [sp, #16]
   2a288:	stp	x20, x19, [sp, #32]
   2a28c:	mov	x29, sp
   2a290:	mov	x19, x1
   2a294:	mov	x20, x0
   2a298:	bl	ec80 <calloc@plt>
   2a29c:	mov	x21, x0
   2a2a0:	cbnz	x0, 2a394 <_ZNKSt10bad_typeid4whatEv@@Base+0x2c4>
   2a2a4:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   2a2a8:	add	x0, x0, #0x2e0
   2a2ac:	bl	eec0 <pthread_mutex_lock@plt>
   2a2b0:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
   2a2b4:	ldr	x11, [x8, #784]
   2a2b8:	cbnz	x11, 2a2d0 <_ZNKSt10bad_typeid4whatEv@@Base+0x200>
   2a2bc:	adrp	x11, 49000 <memcpy@GLIBC_2.17>
   2a2c0:	add	x11, x11, #0x320
   2a2c4:	mov	w9, #0x800080              	// #8388736
   2a2c8:	str	x11, [x8, #784]
   2a2cc:	str	w9, [x11]
   2a2d0:	adrp	x9, 49000 <memcpy@GLIBC_2.17>
   2a2d4:	add	x9, x9, #0x520
   2a2d8:	cmp	x11, x9
   2a2dc:	b.eq	2a32c <_ZNKSt10bad_typeid4whatEv@@Base+0x25c>  // b.none
   2a2e0:	cbz	x11, 2a32c <_ZNKSt10bad_typeid4whatEv@@Base+0x25c>
   2a2e4:	mul	x19, x19, x20
   2a2e8:	add	x9, x19, #0x3
   2a2ec:	lsr	x9, x9, #2
   2a2f0:	adrp	x13, 49000 <memcpy@GLIBC_2.17>
   2a2f4:	mov	x12, xzr
   2a2f8:	add	x10, x9, #0x1
   2a2fc:	add	x13, x13, #0x320
   2a300:	mov	x9, x11
   2a304:	ldrh	w11, [x11, #2]
   2a308:	cmp	x10, x11
   2a30c:	b.cc	2a340 <_ZNKSt10bad_typeid4whatEv@@Base+0x270>  // b.lo, b.ul, b.last
   2a310:	b.eq	2a358 <_ZNKSt10bad_typeid4whatEv@@Base+0x288>  // b.none
   2a314:	ldrh	w11, [x9]
   2a318:	mov	x12, x9
   2a31c:	lsl	x11, x11, #2
   2a320:	cmp	x11, #0x200
   2a324:	add	x11, x13, x11
   2a328:	b.ne	2a300 <_ZNKSt10bad_typeid4whatEv@@Base+0x230>  // b.any
   2a32c:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   2a330:	add	x0, x0, #0x2e0
   2a334:	bl	eee0 <pthread_mutex_unlock@plt>
   2a338:	mov	x21, xzr
   2a33c:	b	2a394 <_ZNKSt10bad_typeid4whatEv@@Base+0x2c4>
   2a340:	sub	w8, w11, w10
   2a344:	strh	w8, [x9, #2]
   2a348:	add	x9, x9, w8, uxth #2
   2a34c:	strh	wzr, [x9]
   2a350:	strh	w10, [x9, #2]
   2a354:	b	2a374 <_ZNKSt10bad_typeid4whatEv@@Base+0x2a4>
   2a358:	ldrh	w10, [x9]
   2a35c:	cbz	x12, 2a368 <_ZNKSt10bad_typeid4whatEv@@Base+0x298>
   2a360:	strh	w10, [x12]
   2a364:	b	2a370 <_ZNKSt10bad_typeid4whatEv@@Base+0x2a0>
   2a368:	add	x10, x13, x10, lsl #2
   2a36c:	str	x10, [x8, #784]
   2a370:	strh	wzr, [x9]
   2a374:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   2a378:	add	x0, x0, #0x2e0
   2a37c:	add	x21, x9, #0x4
   2a380:	bl	eee0 <pthread_mutex_unlock@plt>
   2a384:	mov	x0, x21
   2a388:	mov	w1, wzr
   2a38c:	mov	x2, x19
   2a390:	bl	ec40 <memset@plt>
   2a394:	mov	x0, x21
   2a398:	ldp	x20, x19, [sp, #32]
   2a39c:	ldr	x21, [sp, #16]
   2a3a0:	ldp	x29, x30, [sp], #48
   2a3a4:	ret
   2a3a8:	stp	x29, x30, [sp, #-48]!
   2a3ac:	stp	x22, x21, [sp, #16]
   2a3b0:	stp	x20, x19, [sp, #32]
   2a3b4:	mov	x29, sp
   2a3b8:	adrp	x22, 49000 <memcpy@GLIBC_2.17>
   2a3bc:	add	x22, x22, #0x520
   2a3c0:	mov	x19, x0
   2a3c4:	cmp	x0, x22
   2a3c8:	b.cs	2a460 <_ZNKSt10bad_typeid4whatEv@@Base+0x390>  // b.hs, b.nlast
   2a3cc:	adrp	x21, 49000 <memcpy@GLIBC_2.17>
   2a3d0:	add	x21, x21, #0x320
   2a3d4:	cmp	x19, x21
   2a3d8:	b.cc	2a460 <_ZNKSt10bad_typeid4whatEv@@Base+0x390>  // b.lo, b.ul, b.last
   2a3dc:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   2a3e0:	add	x0, x0, #0x2e0
   2a3e4:	sub	x20, x19, #0x4
   2a3e8:	bl	eec0 <pthread_mutex_lock@plt>
   2a3ec:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
   2a3f0:	ldr	x9, [x8, #784]
   2a3f4:	cmp	x9, x22
   2a3f8:	b.eq	2a444 <_ZNKSt10bad_typeid4whatEv@@Base+0x374>  // b.none
   2a3fc:	cbz	x9, 2a444 <_ZNKSt10bad_typeid4whatEv@@Base+0x374>
   2a400:	ldurh	w12, [x19, #-2]
   2a404:	mov	x10, xzr
   2a408:	mov	x13, x9
   2a40c:	add	x11, x20, x12, lsl #2
   2a410:	ldrh	w14, [x13, #2]
   2a414:	add	x15, x13, x14, lsl #2
   2a418:	cmp	x15, x20
   2a41c:	b.eq	2a474 <_ZNKSt10bad_typeid4whatEv@@Base+0x3a4>  // b.none
   2a420:	cmp	x11, x13
   2a424:	b.eq	2a480 <_ZNKSt10bad_typeid4whatEv@@Base+0x3b0>  // b.none
   2a428:	ldrh	w10, [x13]
   2a42c:	lsl	x10, x10, #2
   2a430:	add	x14, x21, x10
   2a434:	cmp	x10, #0x200
   2a438:	mov	x10, x13
   2a43c:	mov	x13, x14
   2a440:	b.ne	2a410 <_ZNKSt10bad_typeid4whatEv@@Base+0x340>  // b.any
   2a444:	adrp	x10, 49000 <memcpy@GLIBC_2.17>
   2a448:	add	x10, x10, #0x320
   2a44c:	sub	w9, w9, w10
   2a450:	lsr	w9, w9, #2
   2a454:	strh	w9, [x20]
   2a458:	str	x20, [x8, #784]
   2a45c:	b	2a4b0 <_ZNKSt10bad_typeid4whatEv@@Base+0x3e0>
   2a460:	mov	x0, x19
   2a464:	ldp	x20, x19, [sp, #32]
   2a468:	ldp	x22, x21, [sp, #16]
   2a46c:	ldp	x29, x30, [sp], #48
   2a470:	b	ed60 <free@plt>
   2a474:	add	w8, w14, w12
   2a478:	strh	w8, [x13, #2]
   2a47c:	b	2a4b0 <_ZNKSt10bad_typeid4whatEv@@Base+0x3e0>
   2a480:	add	w9, w14, w12
   2a484:	sturh	w9, [x19, #-2]
   2a488:	cbz	x10, 2a4a4 <_ZNKSt10bad_typeid4whatEv@@Base+0x3d4>
   2a48c:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
   2a490:	add	x8, x8, #0x320
   2a494:	sub	w8, w20, w8
   2a498:	lsr	w8, w8, #2
   2a49c:	strh	w8, [x10]
   2a4a0:	b	2a4b0 <_ZNKSt10bad_typeid4whatEv@@Base+0x3e0>
   2a4a4:	str	x20, [x8, #784]
   2a4a8:	ldrh	w8, [x11]
   2a4ac:	strh	w8, [x20]
   2a4b0:	ldp	x20, x19, [sp, #32]
   2a4b4:	ldp	x22, x21, [sp, #16]
   2a4b8:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   2a4bc:	add	x0, x0, #0x2e0
   2a4c0:	ldp	x29, x30, [sp], #48
   2a4c4:	b	eee0 <pthread_mutex_unlock@plt>
   2a4c8:	stp	x29, x30, [sp, #-48]!
   2a4cc:	stp	x22, x21, [sp, #16]
   2a4d0:	stp	x20, x19, [sp, #32]
   2a4d4:	mov	x29, sp
   2a4d8:	adrp	x22, 49000 <memcpy@GLIBC_2.17>
   2a4dc:	add	x22, x22, #0x520
   2a4e0:	mov	x19, x0
   2a4e4:	cmp	x0, x22
   2a4e8:	b.cs	2a580 <_ZNKSt10bad_typeid4whatEv@@Base+0x4b0>  // b.hs, b.nlast
   2a4ec:	adrp	x21, 49000 <memcpy@GLIBC_2.17>
   2a4f0:	add	x21, x21, #0x320
   2a4f4:	cmp	x19, x21
   2a4f8:	b.cc	2a580 <_ZNKSt10bad_typeid4whatEv@@Base+0x4b0>  // b.lo, b.ul, b.last
   2a4fc:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   2a500:	add	x0, x0, #0x2e0
   2a504:	sub	x20, x19, #0x4
   2a508:	bl	eec0 <pthread_mutex_lock@plt>
   2a50c:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
   2a510:	ldr	x9, [x8, #784]
   2a514:	cmp	x9, x22
   2a518:	b.eq	2a564 <_ZNKSt10bad_typeid4whatEv@@Base+0x494>  // b.none
   2a51c:	cbz	x9, 2a564 <_ZNKSt10bad_typeid4whatEv@@Base+0x494>
   2a520:	ldurh	w12, [x19, #-2]
   2a524:	mov	x10, xzr
   2a528:	mov	x13, x9
   2a52c:	add	x11, x20, x12, lsl #2
   2a530:	ldrh	w14, [x13, #2]
   2a534:	add	x15, x13, x14, lsl #2
   2a538:	cmp	x15, x20
   2a53c:	b.eq	2a594 <_ZNKSt10bad_typeid4whatEv@@Base+0x4c4>  // b.none
   2a540:	cmp	x11, x13
   2a544:	b.eq	2a5a0 <_ZNKSt10bad_typeid4whatEv@@Base+0x4d0>  // b.none
   2a548:	ldrh	w10, [x13]
   2a54c:	lsl	x10, x10, #2
   2a550:	add	x14, x21, x10
   2a554:	cmp	x10, #0x200
   2a558:	mov	x10, x13
   2a55c:	mov	x13, x14
   2a560:	b.ne	2a530 <_ZNKSt10bad_typeid4whatEv@@Base+0x460>  // b.any
   2a564:	adrp	x10, 49000 <memcpy@GLIBC_2.17>
   2a568:	add	x10, x10, #0x320
   2a56c:	sub	w9, w9, w10
   2a570:	lsr	w9, w9, #2
   2a574:	strh	w9, [x20]
   2a578:	str	x20, [x8, #784]
   2a57c:	b	2a5d0 <_ZNKSt10bad_typeid4whatEv@@Base+0x500>
   2a580:	mov	x0, x19
   2a584:	ldp	x20, x19, [sp, #32]
   2a588:	ldp	x22, x21, [sp, #16]
   2a58c:	ldp	x29, x30, [sp], #48
   2a590:	b	ed60 <free@plt>
   2a594:	add	w8, w14, w12
   2a598:	strh	w8, [x13, #2]
   2a59c:	b	2a5d0 <_ZNKSt10bad_typeid4whatEv@@Base+0x500>
   2a5a0:	add	w9, w14, w12
   2a5a4:	sturh	w9, [x19, #-2]
   2a5a8:	cbz	x10, 2a5c4 <_ZNKSt10bad_typeid4whatEv@@Base+0x4f4>
   2a5ac:	adrp	x8, 49000 <memcpy@GLIBC_2.17>
   2a5b0:	add	x8, x8, #0x320
   2a5b4:	sub	w8, w20, w8
   2a5b8:	lsr	w8, w8, #2
   2a5bc:	strh	w8, [x10]
   2a5c0:	b	2a5d0 <_ZNKSt10bad_typeid4whatEv@@Base+0x500>
   2a5c4:	str	x20, [x8, #784]
   2a5c8:	ldrh	w8, [x11]
   2a5cc:	strh	w8, [x20]
   2a5d0:	ldp	x20, x19, [sp, #32]
   2a5d4:	ldp	x22, x21, [sp, #16]
   2a5d8:	adrp	x0, 49000 <memcpy@GLIBC_2.17>
   2a5dc:	add	x0, x0, #0x2e0
   2a5e0:	ldp	x29, x30, [sp], #48
   2a5e4:	b	eee0 <pthread_mutex_unlock@plt>
   2a5e8:	b	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a5ec:	brk	#0x1
   2a5f0:	ret
   2a5f4:	ret
   2a5f8:	stp	x29, x30, [sp, #-32]!
   2a5fc:	str	x19, [sp, #16]
   2a600:	mov	x29, sp
   2a604:	mov	x19, x0
   2a608:	bl	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a60c:	mov	x0, x19
   2a610:	ldr	x19, [sp, #16]
   2a614:	ldp	x29, x30, [sp], #32
   2a618:	b	eb20 <_ZdlPv@plt>
   2a61c:	stp	x29, x30, [sp, #-32]!
   2a620:	str	x19, [sp, #16]
   2a624:	mov	x29, sp
   2a628:	mov	x19, x0
   2a62c:	bl	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a630:	mov	x0, x19
   2a634:	ldr	x19, [sp, #16]
   2a638:	ldp	x29, x30, [sp], #32
   2a63c:	b	eb20 <_ZdlPv@plt>
   2a640:	stp	x29, x30, [sp, #-32]!
   2a644:	str	x19, [sp, #16]
   2a648:	mov	x29, sp
   2a64c:	mov	x19, x0
   2a650:	bl	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a654:	mov	x0, x19
   2a658:	ldr	x19, [sp, #16]
   2a65c:	ldp	x29, x30, [sp], #32
   2a660:	b	eb20 <_ZdlPv@plt>
   2a664:	stp	x29, x30, [sp, #-32]!
   2a668:	str	x19, [sp, #16]
   2a66c:	mov	x29, sp
   2a670:	mov	x19, x0
   2a674:	bl	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a678:	mov	x0, x19
   2a67c:	ldr	x19, [sp, #16]
   2a680:	ldp	x29, x30, [sp], #32
   2a684:	b	eb20 <_ZdlPv@plt>
   2a688:	stp	x29, x30, [sp, #-32]!
   2a68c:	str	x19, [sp, #16]
   2a690:	mov	x29, sp
   2a694:	mov	x19, x0
   2a698:	bl	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a69c:	mov	x0, x19
   2a6a0:	ldr	x19, [sp, #16]
   2a6a4:	ldp	x29, x30, [sp], #32
   2a6a8:	b	eb20 <_ZdlPv@plt>
   2a6ac:	stp	x29, x30, [sp, #-32]!
   2a6b0:	str	x19, [sp, #16]
   2a6b4:	mov	x29, sp
   2a6b8:	mov	x19, x0
   2a6bc:	bl	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a6c0:	mov	x0, x19
   2a6c4:	ldr	x19, [sp, #16]
   2a6c8:	ldp	x29, x30, [sp], #32
   2a6cc:	b	eb20 <_ZdlPv@plt>
   2a6d0:	stp	x29, x30, [sp, #-32]!
   2a6d4:	str	x19, [sp, #16]
   2a6d8:	mov	x29, sp
   2a6dc:	mov	x19, x0
   2a6e0:	bl	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a6e4:	mov	x0, x19
   2a6e8:	ldr	x19, [sp, #16]
   2a6ec:	ldp	x29, x30, [sp], #32
   2a6f0:	b	eb20 <_ZdlPv@plt>
   2a6f4:	stp	x29, x30, [sp, #-32]!
   2a6f8:	str	x19, [sp, #16]
   2a6fc:	mov	x29, sp
   2a700:	mov	x19, x0
   2a704:	bl	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a708:	mov	x0, x19
   2a70c:	ldr	x19, [sp, #16]
   2a710:	ldp	x29, x30, [sp], #32
   2a714:	b	eb20 <_ZdlPv@plt>
   2a718:	stp	x29, x30, [sp, #-32]!
   2a71c:	str	x19, [sp, #16]
   2a720:	mov	x29, sp
   2a724:	mov	x19, x0
   2a728:	bl	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a72c:	mov	x0, x19
   2a730:	ldr	x19, [sp, #16]
   2a734:	ldp	x29, x30, [sp], #32
   2a738:	b	eb20 <_ZdlPv@plt>
   2a73c:	stp	x29, x30, [sp, #-32]!
   2a740:	str	x19, [sp, #16]
   2a744:	mov	x29, sp
   2a748:	mov	x19, x0
   2a74c:	bl	ee50 <_ZNSt9type_infoD2Ev@plt>
   2a750:	mov	x0, x19
   2a754:	ldr	x19, [sp, #16]
   2a758:	ldp	x29, x30, [sp], #32
   2a75c:	b	eb20 <_ZdlPv@plt>
   2a760:	ldr	x8, [x0, #8]
   2a764:	ldr	x9, [x1, #8]
   2a768:	cmp	x8, x9
   2a76c:	cset	w0, eq  // eq = none
   2a770:	ret
   2a774:	mov	w0, wzr
   2a778:	ret
   2a77c:	mov	w0, wzr
   2a780:	ret
   2a784:	ldr	x8, [x0, #8]
   2a788:	ldr	x9, [x1, #8]
   2a78c:	cmp	x8, x9
   2a790:	cset	w0, eq  // eq = none
   2a794:	ret
   2a798:	sub	sp, sp, #0x70
   2a79c:	stp	x29, x30, [sp, #80]
   2a7a0:	stp	x20, x19, [sp, #96]
   2a7a4:	add	x29, sp, #0x50
   2a7a8:	ldr	x8, [x0, #8]
   2a7ac:	ldr	x9, [x1, #8]
   2a7b0:	cmp	x8, x9
   2a7b4:	b.eq	2a830 <_ZNKSt10bad_typeid4whatEv@@Base+0x760>  // b.none
   2a7b8:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2a7bc:	mov	x19, x2
   2a7c0:	ldr	x8, [x8, #3872]
   2a7c4:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2a7c8:	ldr	x2, [x2, #3880]
   2a7cc:	mov	x20, x0
   2a7d0:	mov	x0, x1
   2a7d4:	mov	x1, x8
   2a7d8:	mov	x3, xzr
   2a7dc:	bl	ecd0 <__dynamic_cast@plt>
   2a7e0:	cbz	x0, 2a83c <_ZNKSt10bad_typeid4whatEv@@Base+0x76c>
   2a7e4:	mov	x8, #0xffffffffffffffff    	// #-1
   2a7e8:	movi	v0.2d, #0x0
   2a7ec:	mov	w9, #0x1                   	// #1
   2a7f0:	stp	x0, xzr, [sp]
   2a7f4:	stp	x20, x8, [sp, #16]
   2a7f8:	stur	q0, [sp, #63]
   2a7fc:	stp	q0, q0, [sp, #32]
   2a800:	str	w9, [sp, #72]
   2a804:	ldr	x8, [x0]
   2a808:	ldr	x2, [x19]
   2a80c:	mov	x1, sp
   2a810:	mov	w3, #0x1                   	// #1
   2a814:	ldr	x8, [x8, #56]
   2a818:	blr	x8
   2a81c:	ldr	w8, [sp, #48]
   2a820:	cmp	w8, #0x1
   2a824:	b.ne	2a838 <_ZNKSt10bad_typeid4whatEv@@Base+0x768>  // b.any
   2a828:	ldr	x8, [sp, #32]
   2a82c:	str	x8, [x19]
   2a830:	mov	w0, #0x1                   	// #1
   2a834:	b	2a83c <_ZNKSt10bad_typeid4whatEv@@Base+0x76c>
   2a838:	mov	w0, wzr
   2a83c:	ldp	x20, x19, [sp, #96]
   2a840:	ldp	x29, x30, [sp, #80]
   2a844:	add	sp, sp, #0x70
   2a848:	ret
   2a84c:	ldr	x8, [x1, #32]
   2a850:	cbz	x8, 2a87c <_ZNKSt10bad_typeid4whatEv@@Base+0x7ac>
   2a854:	cmp	x8, x2
   2a858:	b.eq	2a890 <_ZNKSt10bad_typeid4whatEv@@Base+0x7c0>  // b.none
   2a85c:	ldr	w8, [x1, #60]
   2a860:	mov	w9, #0x2                   	// #2
   2a864:	mov	w10, #0x1                   	// #1
   2a868:	str	w9, [x1, #48]
   2a86c:	add	w8, w8, #0x1
   2a870:	str	w8, [x1, #60]
   2a874:	strb	w10, [x1, #78]
   2a878:	ret
   2a87c:	mov	w8, #0x1                   	// #1
   2a880:	str	x2, [x1, #32]
   2a884:	str	w3, [x1, #48]
   2a888:	str	w8, [x1, #60]
   2a88c:	ret
   2a890:	ldr	w8, [x1, #48]
   2a894:	cmp	w8, #0x2
   2a898:	b.ne	2a878 <_ZNKSt10bad_typeid4whatEv@@Base+0x7a8>  // b.any
   2a89c:	str	w3, [x1, #48]
   2a8a0:	ret
   2a8a4:	ldr	x8, [x1, #16]
   2a8a8:	ldr	x9, [x0, #8]
   2a8ac:	ldr	x8, [x8, #8]
   2a8b0:	cmp	x9, x8
   2a8b4:	b.eq	2a8bc <_ZNKSt10bad_typeid4whatEv@@Base+0x7ec>  // b.none
   2a8b8:	ret
   2a8bc:	ldr	x8, [x1, #32]
   2a8c0:	cbz	x8, 2a8ec <_ZNKSt10bad_typeid4whatEv@@Base+0x81c>
   2a8c4:	cmp	x8, x2
   2a8c8:	b.eq	2a900 <_ZNKSt10bad_typeid4whatEv@@Base+0x830>  // b.none
   2a8cc:	ldr	w8, [x1, #60]
   2a8d0:	mov	w9, #0x2                   	// #2
   2a8d4:	mov	w10, #0x1                   	// #1
   2a8d8:	str	w9, [x1, #48]
   2a8dc:	add	w8, w8, #0x1
   2a8e0:	str	w8, [x1, #60]
   2a8e4:	strb	w10, [x1, #78]
   2a8e8:	ret
   2a8ec:	mov	w8, #0x1                   	// #1
   2a8f0:	str	x2, [x1, #32]
   2a8f4:	str	w3, [x1, #48]
   2a8f8:	str	w8, [x1, #60]
   2a8fc:	ret
   2a900:	ldr	w8, [x1, #48]
   2a904:	cmp	w8, #0x2
   2a908:	b.ne	2a8b8 <_ZNKSt10bad_typeid4whatEv@@Base+0x7e8>  // b.any
   2a90c:	str	w3, [x1, #48]
   2a910:	ret
   2a914:	ldr	x8, [x1, #16]
   2a918:	ldr	x9, [x0, #8]
   2a91c:	ldr	x8, [x8, #8]
   2a920:	cmp	x9, x8
   2a924:	b.eq	2a938 <_ZNKSt10bad_typeid4whatEv@@Base+0x868>  // b.none
   2a928:	ldr	x0, [x0, #16]
   2a92c:	ldr	x8, [x0]
   2a930:	ldr	x4, [x8, #56]
   2a934:	br	x4
   2a938:	ldr	x8, [x1, #32]
   2a93c:	cbz	x8, 2a968 <_ZNKSt10bad_typeid4whatEv@@Base+0x898>
   2a940:	cmp	x8, x2
   2a944:	b.eq	2a97c <_ZNKSt10bad_typeid4whatEv@@Base+0x8ac>  // b.none
   2a948:	ldr	w8, [x1, #60]
   2a94c:	mov	w9, #0x2                   	// #2
   2a950:	mov	w10, #0x1                   	// #1
   2a954:	str	w9, [x1, #48]
   2a958:	add	w8, w8, #0x1
   2a95c:	str	w8, [x1, #60]
   2a960:	strb	w10, [x1, #78]
   2a964:	ret
   2a968:	mov	w8, #0x1                   	// #1
   2a96c:	str	x2, [x1, #32]
   2a970:	str	w3, [x1, #48]
   2a974:	str	w8, [x1, #60]
   2a978:	ret
   2a97c:	ldr	w8, [x1, #48]
   2a980:	cmp	w8, #0x2
   2a984:	b.ne	2a964 <_ZNKSt10bad_typeid4whatEv@@Base+0x894>  // b.any
   2a988:	str	w3, [x1, #48]
   2a98c:	ret
   2a990:	ldr	x8, [x0, #8]
   2a994:	cbz	x2, 2a9ac <_ZNKSt10bad_typeid4whatEv@@Base+0x8dc>
   2a998:	asr	x9, x8, #8
   2a99c:	tbz	w8, #0, 2a9b0 <_ZNKSt10bad_typeid4whatEv@@Base+0x8e0>
   2a9a0:	ldr	x10, [x2]
   2a9a4:	ldr	x9, [x10, x9]
   2a9a8:	b	2a9b0 <_ZNKSt10bad_typeid4whatEv@@Base+0x8e0>
   2a9ac:	mov	x9, xzr
   2a9b0:	ldr	x0, [x0]
   2a9b4:	tst	x8, #0x2
   2a9b8:	mov	w8, #0x2                   	// #2
   2a9bc:	add	x2, x2, x9
   2a9c0:	ldr	x10, [x0]
   2a9c4:	csel	w3, w8, w3, eq  // eq = none
   2a9c8:	ldr	x4, [x10, #56]
   2a9cc:	br	x4
   2a9d0:	stp	x29, x30, [sp, #-64]!
   2a9d4:	stp	x24, x23, [sp, #16]
   2a9d8:	stp	x22, x21, [sp, #32]
   2a9dc:	stp	x20, x19, [sp, #48]
   2a9e0:	mov	x29, sp
   2a9e4:	ldr	x8, [x1, #16]
   2a9e8:	ldr	x9, [x0, #8]
   2a9ec:	mov	w20, w3
   2a9f0:	mov	x19, x1
   2a9f4:	ldr	x8, [x8, #8]
   2a9f8:	mov	x21, x2
   2a9fc:	cmp	x9, x8
   2aa00:	b.eq	2aa28 <_ZNKSt10bad_typeid4whatEv@@Base+0x958>  // b.none
   2aa04:	ldr	w24, [x0, #20]
   2aa08:	ldr	x8, [x0, #32]
   2aa0c:	mov	x22, x0
   2aa10:	cbz	x21, 2aa58 <_ZNKSt10bad_typeid4whatEv@@Base+0x988>
   2aa14:	asr	x9, x8, #8
   2aa18:	tbz	w8, #0, 2aa5c <_ZNKSt10bad_typeid4whatEv@@Base+0x98c>
   2aa1c:	ldr	x10, [x21]
   2aa20:	ldr	x9, [x10, x9]
   2aa24:	b	2aa5c <_ZNKSt10bad_typeid4whatEv@@Base+0x98c>
   2aa28:	ldr	x8, [x19, #32]
   2aa2c:	cbz	x8, 2aaec <_ZNKSt10bad_typeid4whatEv@@Base+0xa1c>
   2aa30:	cmp	x8, x21
   2aa34:	b.eq	2ab00 <_ZNKSt10bad_typeid4whatEv@@Base+0xa30>  // b.none
   2aa38:	ldr	w8, [x19, #60]
   2aa3c:	mov	w9, #0x2                   	// #2
   2aa40:	mov	w10, #0x1                   	// #1
   2aa44:	str	w9, [x19, #48]
   2aa48:	add	w8, w8, #0x1
   2aa4c:	str	w8, [x19, #60]
   2aa50:	strb	w10, [x19, #78]
   2aa54:	b	2ab10 <_ZNKSt10bad_typeid4whatEv@@Base+0xa40>
   2aa58:	mov	x9, xzr
   2aa5c:	ldr	x0, [x22, #24]
   2aa60:	add	x2, x21, x9
   2aa64:	tst	x8, #0x2
   2aa68:	mov	w23, #0x2                   	// #2
   2aa6c:	ldr	x10, [x0]
   2aa70:	csel	w3, w23, w20, eq  // eq = none
   2aa74:	mov	x1, x19
   2aa78:	ldr	x9, [x10, #56]
   2aa7c:	blr	x9
   2aa80:	cmp	w24, #0x2
   2aa84:	b.cc	2ab10 <_ZNKSt10bad_typeid4whatEv@@Base+0xa40>  // b.lo, b.ul, b.last
   2aa88:	add	x8, x22, x24, lsl #4
   2aa8c:	add	x24, x8, #0x18
   2aa90:	add	x22, x22, #0x28
   2aa94:	ldr	x8, [x22, #8]
   2aa98:	cbz	x21, 2aab0 <_ZNKSt10bad_typeid4whatEv@@Base+0x9e0>
   2aa9c:	asr	x9, x8, #8
   2aaa0:	tbz	w8, #0, 2aab4 <_ZNKSt10bad_typeid4whatEv@@Base+0x9e4>
   2aaa4:	ldr	x10, [x21]
   2aaa8:	ldr	x9, [x10, x9]
   2aaac:	b	2aab4 <_ZNKSt10bad_typeid4whatEv@@Base+0x9e4>
   2aab0:	mov	x9, xzr
   2aab4:	ldr	x0, [x22]
   2aab8:	tst	x8, #0x2
   2aabc:	add	x2, x21, x9
   2aac0:	csel	w3, w23, w20, eq  // eq = none
   2aac4:	ldr	x10, [x0]
   2aac8:	mov	x1, x19
   2aacc:	ldr	x10, [x10, #56]
   2aad0:	blr	x10
   2aad4:	ldrb	w8, [x19, #78]
   2aad8:	cbnz	w8, 2ab10 <_ZNKSt10bad_typeid4whatEv@@Base+0xa40>
   2aadc:	add	x22, x22, #0x10
   2aae0:	cmp	x22, x24
   2aae4:	b.cc	2aa94 <_ZNKSt10bad_typeid4whatEv@@Base+0x9c4>  // b.lo, b.ul, b.last
   2aae8:	b	2ab10 <_ZNKSt10bad_typeid4whatEv@@Base+0xa40>
   2aaec:	mov	w8, #0x1                   	// #1
   2aaf0:	str	x21, [x19, #32]
   2aaf4:	str	w20, [x19, #48]
   2aaf8:	str	w8, [x19, #60]
   2aafc:	b	2ab10 <_ZNKSt10bad_typeid4whatEv@@Base+0xa40>
   2ab00:	ldr	w8, [x19, #48]
   2ab04:	cmp	w8, #0x2
   2ab08:	b.ne	2ab10 <_ZNKSt10bad_typeid4whatEv@@Base+0xa40>  // b.any
   2ab0c:	str	w20, [x19, #48]
   2ab10:	ldp	x20, x19, [sp, #48]
   2ab14:	ldp	x22, x21, [sp, #32]
   2ab18:	ldp	x24, x23, [sp, #16]
   2ab1c:	ldp	x29, x30, [sp], #64
   2ab20:	ret
   2ab24:	stp	x29, x30, [sp, #-32]!
   2ab28:	stp	x20, x19, [sp, #16]
   2ab2c:	mov	x29, sp
   2ab30:	ldrb	w8, [x0, #16]
   2ab34:	mov	x19, x0
   2ab38:	mov	x20, x1
   2ab3c:	tst	w8, #0x18
   2ab40:	b.eq	2ab64 <_ZNKSt10bad_typeid4whatEv@@Base+0xa94>  // b.none
   2ab44:	cmp	x19, x20
   2ab48:	b.eq	2aba4 <_ZNKSt10bad_typeid4whatEv@@Base+0xad4>  // b.none
   2ab4c:	ldr	x0, [x19, #8]
   2ab50:	ldr	x1, [x20, #8]
   2ab54:	bl	ed30 <strcmp@plt>
   2ab58:	cmp	w0, #0x0
   2ab5c:	cset	w0, eq  // eq = none
   2ab60:	b	2abb0 <_ZNKSt10bad_typeid4whatEv@@Base+0xae0>
   2ab64:	cbz	x20, 2abac <_ZNKSt10bad_typeid4whatEv@@Base+0xadc>
   2ab68:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ab6c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ab70:	ldr	x1, [x1, #3872]
   2ab74:	ldr	x2, [x2, #4024]
   2ab78:	mov	x0, x20
   2ab7c:	mov	x3, xzr
   2ab80:	bl	ecd0 <__dynamic_cast@plt>
   2ab84:	cbz	x0, 2abb0 <_ZNKSt10bad_typeid4whatEv@@Base+0xae0>
   2ab88:	ldrb	w8, [x0, #16]
   2ab8c:	tst	w8, #0x18
   2ab90:	b.ne	2ab44 <_ZNKSt10bad_typeid4whatEv@@Base+0xa74>  // b.any
   2ab94:	ldr	x8, [x19, #8]
   2ab98:	ldr	x9, [x20, #8]
   2ab9c:	cmp	x8, x9
   2aba0:	b	2ab5c <_ZNKSt10bad_typeid4whatEv@@Base+0xa8c>
   2aba4:	mov	w0, #0x1                   	// #1
   2aba8:	b	2abb0 <_ZNKSt10bad_typeid4whatEv@@Base+0xae0>
   2abac:	mov	w0, wzr
   2abb0:	ldp	x20, x19, [sp, #16]
   2abb4:	ldp	x29, x30, [sp], #32
   2abb8:	ret
   2abbc:	sub	sp, sp, #0x80
   2abc0:	stp	x29, x30, [sp, #80]
   2abc4:	stp	x22, x21, [sp, #96]
   2abc8:	stp	x20, x19, [sp, #112]
   2abcc:	add	x29, sp, #0x50
   2abd0:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2abd4:	ldr	x8, [x1, #8]
   2abd8:	ldr	x9, [x9, #4064]
   2abdc:	mov	x19, x2
   2abe0:	cmp	x8, x9
   2abe4:	b.eq	2ac28 <_ZNKSt10bad_typeid4whatEv@@Base+0xb58>  // b.none
   2abe8:	ldrb	w8, [x0, #16]
   2abec:	mov	x21, x1
   2abf0:	mov	x20, x0
   2abf4:	tst	w8, #0x18
   2abf8:	b.eq	2ac44 <_ZNKSt10bad_typeid4whatEv@@Base+0xb74>  // b.none
   2abfc:	cmp	x20, x21
   2ac00:	b.eq	2ac14 <_ZNKSt10bad_typeid4whatEv@@Base+0xb44>  // b.none
   2ac04:	ldr	x0, [x20, #8]
   2ac08:	ldr	x1, [x21, #8]
   2ac0c:	bl	ed30 <strcmp@plt>
   2ac10:	cbnz	w0, 2ac80 <_ZNKSt10bad_typeid4whatEv@@Base+0xbb0>
   2ac14:	ldr	x8, [x19]
   2ac18:	cbz	x8, 2ac2c <_ZNKSt10bad_typeid4whatEv@@Base+0xb5c>
   2ac1c:	ldr	x8, [x8]
   2ac20:	str	x8, [x19]
   2ac24:	b	2ac2c <_ZNKSt10bad_typeid4whatEv@@Base+0xb5c>
   2ac28:	str	xzr, [x19]
   2ac2c:	mov	w0, #0x1                   	// #1
   2ac30:	ldp	x20, x19, [sp, #112]
   2ac34:	ldp	x22, x21, [sp, #96]
   2ac38:	ldp	x29, x30, [sp, #80]
   2ac3c:	add	sp, sp, #0x80
   2ac40:	ret
   2ac44:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ac48:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ac4c:	ldr	x1, [x1, #3872]
   2ac50:	ldr	x2, [x2, #4024]
   2ac54:	mov	x0, x21
   2ac58:	mov	x3, xzr
   2ac5c:	bl	ecd0 <__dynamic_cast@plt>
   2ac60:	cbz	x0, 2ac80 <_ZNKSt10bad_typeid4whatEv@@Base+0xbb0>
   2ac64:	ldrb	w8, [x0, #16]
   2ac68:	tst	w8, #0x18
   2ac6c:	b.ne	2abfc <_ZNKSt10bad_typeid4whatEv@@Base+0xb2c>  // b.any
   2ac70:	ldr	x8, [x20, #8]
   2ac74:	ldr	x9, [x21, #8]
   2ac78:	cmp	x8, x9
   2ac7c:	b.eq	2ac14 <_ZNKSt10bad_typeid4whatEv@@Base+0xb44>  // b.none
   2ac80:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ac84:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ac88:	ldr	x1, [x1, #3872]
   2ac8c:	ldr	x2, [x2, #4040]
   2ac90:	mov	x0, x21
   2ac94:	mov	x3, xzr
   2ac98:	bl	ecd0 <__dynamic_cast@plt>
   2ac9c:	cbz	x0, 2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2aca0:	ldr	x8, [x19]
   2aca4:	mov	x21, x0
   2aca8:	cbz	x8, 2acb4 <_ZNKSt10bad_typeid4whatEv@@Base+0xbe4>
   2acac:	ldr	x8, [x8]
   2acb0:	str	x8, [x19]
   2acb4:	ldr	w8, [x21, #16]
   2acb8:	ldr	w9, [x20, #16]
   2acbc:	bic	w10, w8, w9
   2acc0:	tst	w10, #0x7
   2acc4:	b.ne	2acd4 <_ZNKSt10bad_typeid4whatEv@@Base+0xc04>  // b.any
   2acc8:	bic	w8, w9, w8
   2accc:	tst	w8, #0x60
   2acd0:	b.eq	2acdc <_ZNKSt10bad_typeid4whatEv@@Base+0xc0c>  // b.none
   2acd4:	mov	w0, wzr
   2acd8:	b	2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2acdc:	ldr	x0, [x20, #24]
   2ace0:	ldr	x8, [x21, #24]
   2ace4:	ldr	x9, [x0, #8]
   2ace8:	ldr	x10, [x8, #8]
   2acec:	cmp	x9, x10
   2acf0:	b.eq	2ac2c <_ZNKSt10bad_typeid4whatEv@@Base+0xb5c>  // b.none
   2acf4:	adrp	x10, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2acf8:	ldr	x10, [x10, #3824]
   2acfc:	cmp	x9, x10
   2ad00:	b.eq	2ad44 <_ZNKSt10bad_typeid4whatEv@@Base+0xc74>  // b.none
   2ad04:	cbz	x0, 2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2ad08:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ad0c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ad10:	ldr	x1, [x1, #3872]
   2ad14:	ldr	x2, [x2, #4040]
   2ad18:	mov	x3, xzr
   2ad1c:	bl	ecd0 <__dynamic_cast@plt>
   2ad20:	cbz	x0, 2ad70 <_ZNKSt10bad_typeid4whatEv@@Base+0xca0>
   2ad24:	ldrb	w8, [x20, #16]
   2ad28:	tbz	w8, #0, 2acd4 <_ZNKSt10bad_typeid4whatEv@@Base+0xc04>
   2ad2c:	ldr	x1, [x21, #24]
   2ad30:	ldp	x20, x19, [sp, #112]
   2ad34:	ldp	x22, x21, [sp, #96]
   2ad38:	ldp	x29, x30, [sp, #80]
   2ad3c:	add	sp, sp, #0x80
   2ad40:	b	2aea8 <_ZNKSt10bad_typeid4whatEv@@Base+0xdd8>
   2ad44:	cbz	x8, 2ac2c <_ZNKSt10bad_typeid4whatEv@@Base+0xb5c>
   2ad48:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ad4c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ad50:	ldr	x1, [x1, #3872]
   2ad54:	ldr	x2, [x2, #3904]
   2ad58:	mov	x0, x8
   2ad5c:	mov	x3, xzr
   2ad60:	bl	ecd0 <__dynamic_cast@plt>
   2ad64:	cmp	x0, #0x0
   2ad68:	cset	w0, eq  // eq = none
   2ad6c:	b	2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2ad70:	ldr	x0, [x20, #24]
   2ad74:	cbz	x0, 2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2ad78:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ad7c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ad80:	ldr	x1, [x1, #3872]
   2ad84:	ldr	x2, [x2, #4016]
   2ad88:	mov	x3, xzr
   2ad8c:	bl	ecd0 <__dynamic_cast@plt>
   2ad90:	cbz	x0, 2ae08 <_ZNKSt10bad_typeid4whatEv@@Base+0xd38>
   2ad94:	ldrb	w8, [x20, #16]
   2ad98:	tbz	w8, #0, 2acd4 <_ZNKSt10bad_typeid4whatEv@@Base+0xc04>
   2ad9c:	mov	x22, x0
   2ada0:	ldr	x0, [x21, #24]
   2ada4:	cbz	x0, 2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2ada8:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2adac:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2adb0:	ldr	x1, [x1, #3872]
   2adb4:	ldr	x2, [x2, #4016]
   2adb8:	mov	x3, xzr
   2adbc:	bl	ecd0 <__dynamic_cast@plt>
   2adc0:	cbz	x0, 2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2adc4:	ldr	w8, [x22, #16]
   2adc8:	ldr	w9, [x0, #16]
   2adcc:	bics	wzr, w9, w8
   2add0:	b.ne	2acd4 <_ZNKSt10bad_typeid4whatEv@@Base+0xc04>  // b.any
   2add4:	ldr	x8, [x22, #24]
   2add8:	ldr	x9, [x0, #24]
   2addc:	ldr	x8, [x8, #8]
   2ade0:	ldr	x9, [x9, #8]
   2ade4:	cmp	x8, x9
   2ade8:	b.ne	2acd4 <_ZNKSt10bad_typeid4whatEv@@Base+0xc04>  // b.any
   2adec:	ldr	x8, [x22, #32]
   2adf0:	ldr	x9, [x0, #32]
   2adf4:	ldr	x8, [x8, #8]
   2adf8:	ldr	x9, [x9, #8]
   2adfc:	cmp	x8, x9
   2ae00:	cset	w0, eq  // eq = none
   2ae04:	b	2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2ae08:	ldr	x0, [x20, #24]
   2ae0c:	cbz	x0, 2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2ae10:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ae14:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ae18:	ldr	x1, [x1, #3872]
   2ae1c:	ldr	x2, [x2, #3880]
   2ae20:	mov	x3, xzr
   2ae24:	bl	ecd0 <__dynamic_cast@plt>
   2ae28:	cbz	x0, 2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2ae2c:	mov	x20, x0
   2ae30:	ldr	x0, [x21, #24]
   2ae34:	cbz	x0, 2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2ae38:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ae3c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2ae40:	ldr	x1, [x1, #3872]
   2ae44:	ldr	x2, [x2, #3880]
   2ae48:	mov	x3, xzr
   2ae4c:	bl	ecd0 <__dynamic_cast@plt>
   2ae50:	cbz	x0, 2ac30 <_ZNKSt10bad_typeid4whatEv@@Base+0xb60>
   2ae54:	mov	x8, #0xffffffffffffffff    	// #-1
   2ae58:	movi	v0.2d, #0x0
   2ae5c:	mov	w9, #0x1                   	// #1
   2ae60:	stp	x0, xzr, [sp]
   2ae64:	stp	x20, x8, [sp, #16]
   2ae68:	stur	q0, [sp, #63]
   2ae6c:	stp	q0, q0, [sp, #32]
   2ae70:	str	w9, [sp, #72]
   2ae74:	ldr	x8, [x0]
   2ae78:	ldr	x2, [x19]
   2ae7c:	mov	x1, sp
   2ae80:	mov	w3, #0x1                   	// #1
   2ae84:	ldr	x8, [x8, #56]
   2ae88:	blr	x8
   2ae8c:	ldr	w8, [sp, #48]
   2ae90:	cmp	w8, #0x1
   2ae94:	b.ne	2acd4 <_ZNKSt10bad_typeid4whatEv@@Base+0xc04>  // b.any
   2ae98:	ldr	x8, [x19]
   2ae9c:	cbz	x8, 2ac2c <_ZNKSt10bad_typeid4whatEv@@Base+0xb5c>
   2aea0:	ldr	x8, [sp, #32]
   2aea4:	b	2ac20 <_ZNKSt10bad_typeid4whatEv@@Base+0xb50>
   2aea8:	stp	x29, x30, [sp, #-48]!
   2aeac:	stp	x22, x21, [sp, #16]
   2aeb0:	stp	x20, x19, [sp, #32]
   2aeb4:	mov	x29, sp
   2aeb8:	cbz	x1, 2af44 <_ZNKSt10bad_typeid4whatEv@@Base+0xe74>
   2aebc:	adrp	x19, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2aec0:	adrp	x20, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2aec4:	ldr	x19, [x19, #3872]
   2aec8:	ldr	x20, [x20, #4040]
   2aecc:	mov	x22, x0
   2aed0:	mov	x0, x1
   2aed4:	mov	x1, x19
   2aed8:	mov	x2, x20
   2aedc:	mov	x3, xzr
   2aee0:	bl	ecd0 <__dynamic_cast@plt>
   2aee4:	cbz	x0, 2af48 <_ZNKSt10bad_typeid4whatEv@@Base+0xe78>
   2aee8:	ldr	w8, [x0, #16]
   2aeec:	ldr	w9, [x22, #16]
   2aef0:	mov	x21, x0
   2aef4:	bics	wzr, w8, w9
   2aef8:	b.ne	2af44 <_ZNKSt10bad_typeid4whatEv@@Base+0xe74>  // b.any
   2aefc:	ldr	x8, [x22, #24]
   2af00:	ldr	x10, [x21, #24]
   2af04:	ldr	x11, [x8, #8]
   2af08:	ldr	x10, [x10, #8]
   2af0c:	cmp	x11, x10
   2af10:	b.eq	2af58 <_ZNKSt10bad_typeid4whatEv@@Base+0xe88>  // b.none
   2af14:	mov	w0, wzr
   2af18:	tbz	w9, #0, 2af48 <_ZNKSt10bad_typeid4whatEv@@Base+0xe78>
   2af1c:	cbz	x8, 2af48 <_ZNKSt10bad_typeid4whatEv@@Base+0xe78>
   2af20:	mov	x0, x8
   2af24:	mov	x1, x19
   2af28:	mov	x2, x20
   2af2c:	mov	x3, xzr
   2af30:	bl	ecd0 <__dynamic_cast@plt>
   2af34:	cbz	x0, 2af60 <_ZNKSt10bad_typeid4whatEv@@Base+0xe90>
   2af38:	ldr	x1, [x21, #24]
   2af3c:	mov	x22, x0
   2af40:	cbnz	x1, 2aed0 <_ZNKSt10bad_typeid4whatEv@@Base+0xe00>
   2af44:	mov	w0, wzr
   2af48:	ldp	x20, x19, [sp, #32]
   2af4c:	ldp	x22, x21, [sp, #16]
   2af50:	ldp	x29, x30, [sp], #48
   2af54:	ret
   2af58:	mov	w0, #0x1                   	// #1
   2af5c:	b	2af48 <_ZNKSt10bad_typeid4whatEv@@Base+0xe78>
   2af60:	ldr	x0, [x22, #24]
   2af64:	cbz	x0, 2af48 <_ZNKSt10bad_typeid4whatEv@@Base+0xe78>
   2af68:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2af6c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2af70:	ldr	x1, [x1, #3872]
   2af74:	ldr	x2, [x2, #4016]
   2af78:	mov	x3, xzr
   2af7c:	bl	ecd0 <__dynamic_cast@plt>
   2af80:	cbz	x0, 2af48 <_ZNKSt10bad_typeid4whatEv@@Base+0xe78>
   2af84:	mov	x19, x0
   2af88:	ldr	x0, [x21, #24]
   2af8c:	cbz	x0, 2af48 <_ZNKSt10bad_typeid4whatEv@@Base+0xe78>
   2af90:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2af94:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2af98:	ldr	x1, [x1, #3872]
   2af9c:	ldr	x2, [x2, #4016]
   2afa0:	mov	x3, xzr
   2afa4:	bl	ecd0 <__dynamic_cast@plt>
   2afa8:	cbz	x0, 2af48 <_ZNKSt10bad_typeid4whatEv@@Base+0xe78>
   2afac:	ldr	w8, [x19, #16]
   2afb0:	ldr	w9, [x0, #16]
   2afb4:	bics	wzr, w9, w8
   2afb8:	b.ne	2af44 <_ZNKSt10bad_typeid4whatEv@@Base+0xe74>  // b.any
   2afbc:	ldr	x8, [x19, #24]
   2afc0:	ldr	x9, [x0, #24]
   2afc4:	ldr	x8, [x8, #8]
   2afc8:	ldr	x9, [x9, #8]
   2afcc:	cmp	x8, x9
   2afd0:	b.ne	2af44 <_ZNKSt10bad_typeid4whatEv@@Base+0xe74>  // b.any
   2afd4:	ldr	x8, [x19, #32]
   2afd8:	ldr	x9, [x0, #32]
   2afdc:	ldr	x8, [x8, #8]
   2afe0:	ldr	x9, [x9, #8]
   2afe4:	cmp	x8, x9
   2afe8:	cset	w0, eq  // eq = none
   2afec:	b	2af48 <_ZNKSt10bad_typeid4whatEv@@Base+0xe78>
   2aff0:	stp	x29, x30, [sp, #-32]!
   2aff4:	str	x19, [sp, #16]
   2aff8:	mov	x29, sp
   2affc:	cbz	x1, 2b050 <_ZNKSt10bad_typeid4whatEv@@Base+0xf80>
   2b000:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2b004:	ldr	x8, [x8, #3872]
   2b008:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2b00c:	ldr	x2, [x2, #4016]
   2b010:	mov	x19, x0
   2b014:	mov	x0, x1
   2b018:	mov	x1, x8
   2b01c:	mov	x3, xzr
   2b020:	bl	ecd0 <__dynamic_cast@plt>
   2b024:	cbz	x0, 2b054 <_ZNKSt10bad_typeid4whatEv@@Base+0xf84>
   2b028:	ldr	w8, [x19, #16]
   2b02c:	ldr	w9, [x0, #16]
   2b030:	bics	wzr, w9, w8
   2b034:	b.ne	2b050 <_ZNKSt10bad_typeid4whatEv@@Base+0xf80>  // b.any
   2b038:	ldr	x8, [x19, #24]
   2b03c:	ldr	x9, [x0, #24]
   2b040:	ldr	x8, [x8, #8]
   2b044:	ldr	x9, [x9, #8]
   2b048:	cmp	x8, x9
   2b04c:	b.eq	2b060 <_ZNKSt10bad_typeid4whatEv@@Base+0xf90>  // b.none
   2b050:	mov	w0, wzr
   2b054:	ldr	x19, [sp, #16]
   2b058:	ldp	x29, x30, [sp], #32
   2b05c:	ret
   2b060:	ldr	x8, [x19, #32]
   2b064:	ldr	x9, [x0, #32]
   2b068:	ldr	x8, [x8, #8]
   2b06c:	ldr	x9, [x9, #8]
   2b070:	cmp	x8, x9
   2b074:	cset	w0, eq  // eq = none
   2b078:	b	2b054 <_ZNKSt10bad_typeid4whatEv@@Base+0xf84>
   2b07c:	stp	x29, x30, [sp, #-48]!
   2b080:	str	x21, [sp, #16]
   2b084:	stp	x20, x19, [sp, #32]
   2b088:	mov	x29, sp
   2b08c:	adrp	x9, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2b090:	ldr	x8, [x1, #8]
   2b094:	ldr	x9, [x9, #4064]
   2b098:	mov	x19, x0
   2b09c:	cmp	x8, x9
   2b0a0:	b.eq	2b0d0 <_ZNKSt10bad_typeid4whatEv@@Base+0x1000>  // b.none
   2b0a4:	ldrb	w8, [x19, #16]
   2b0a8:	mov	x20, x1
   2b0ac:	tst	w8, #0x18
   2b0b0:	b.eq	2b118 <_ZNKSt10bad_typeid4whatEv@@Base+0x1048>  // b.none
   2b0b4:	cmp	x19, x20
   2b0b8:	b.eq	2b110 <_ZNKSt10bad_typeid4whatEv@@Base+0x1040>  // b.none
   2b0bc:	ldr	x0, [x19, #8]
   2b0c0:	ldr	x1, [x20, #8]
   2b0c4:	bl	ed30 <strcmp@plt>
   2b0c8:	cbnz	w0, 2b154 <_ZNKSt10bad_typeid4whatEv@@Base+0x1084>
   2b0cc:	b	2b110 <_ZNKSt10bad_typeid4whatEv@@Base+0x1040>
   2b0d0:	ldr	x0, [x19, #24]
   2b0d4:	adrp	x19, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2b0d8:	mov	x21, x2
   2b0dc:	add	x19, x19, #0x988
   2b0e0:	cbz	x0, 2b10c <_ZNKSt10bad_typeid4whatEv@@Base+0x103c>
   2b0e4:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2b0e8:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2b0ec:	ldr	x1, [x1, #3872]
   2b0f0:	ldr	x2, [x2, #3904]
   2b0f4:	mov	x3, xzr
   2b0f8:	bl	ecd0 <__dynamic_cast@plt>
   2b0fc:	adrp	x8, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2b100:	add	x8, x8, #0x978
   2b104:	cmp	x0, #0x0
   2b108:	csel	x19, x19, x8, eq  // eq = none
   2b10c:	str	x19, [x21]
   2b110:	mov	w0, #0x1                   	// #1
   2b114:	b	2b1b0 <_ZNKSt10bad_typeid4whatEv@@Base+0x10e0>
   2b118:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2b11c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2b120:	ldr	x1, [x1, #3872]
   2b124:	ldr	x2, [x2, #4024]
   2b128:	mov	x0, x20
   2b12c:	mov	x3, xzr
   2b130:	bl	ecd0 <__dynamic_cast@plt>
   2b134:	cbz	x0, 2b154 <_ZNKSt10bad_typeid4whatEv@@Base+0x1084>
   2b138:	ldrb	w8, [x0, #16]
   2b13c:	tst	w8, #0x18
   2b140:	b.ne	2b0b4 <_ZNKSt10bad_typeid4whatEv@@Base+0xfe4>  // b.any
   2b144:	ldr	x8, [x19, #8]
   2b148:	ldr	x9, [x20, #8]
   2b14c:	cmp	x8, x9
   2b150:	b.eq	2b110 <_ZNKSt10bad_typeid4whatEv@@Base+0x1040>  // b.none
   2b154:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2b158:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2b15c:	ldr	x1, [x1, #3872]
   2b160:	ldr	x2, [x2, #4016]
   2b164:	mov	x0, x20
   2b168:	mov	x3, xzr
   2b16c:	bl	ecd0 <__dynamic_cast@plt>
   2b170:	cbz	x0, 2b1b0 <_ZNKSt10bad_typeid4whatEv@@Base+0x10e0>
   2b174:	ldr	w8, [x0, #16]
   2b178:	ldr	w9, [x19, #16]
   2b17c:	bic	w10, w8, w9
   2b180:	tst	w10, #0x7
   2b184:	b.ne	2b1ac <_ZNKSt10bad_typeid4whatEv@@Base+0x10dc>  // b.any
   2b188:	bic	w8, w9, w8
   2b18c:	tst	w8, #0x60
   2b190:	b.ne	2b1ac <_ZNKSt10bad_typeid4whatEv@@Base+0x10dc>  // b.any
   2b194:	ldr	x8, [x19, #24]
   2b198:	ldr	x9, [x0, #24]
   2b19c:	ldr	x8, [x8, #8]
   2b1a0:	ldr	x9, [x9, #8]
   2b1a4:	cmp	x8, x9
   2b1a8:	b.eq	2b1c0 <_ZNKSt10bad_typeid4whatEv@@Base+0x10f0>  // b.none
   2b1ac:	mov	w0, wzr
   2b1b0:	ldp	x20, x19, [sp, #32]
   2b1b4:	ldr	x21, [sp, #16]
   2b1b8:	ldp	x29, x30, [sp], #48
   2b1bc:	ret
   2b1c0:	ldr	x8, [x19, #32]
   2b1c4:	ldr	x9, [x0, #32]
   2b1c8:	ldr	x8, [x8, #8]
   2b1cc:	ldr	x9, [x9, #8]
   2b1d0:	cmp	x8, x9
   2b1d4:	cset	w0, eq  // eq = none
   2b1d8:	b	2b1b0 <_ZNKSt10bad_typeid4whatEv@@Base+0x10e0>

000000000002b1dc <__dynamic_cast@@Base>:
   2b1dc:	sub	sp, sp, #0x70
   2b1e0:	stp	x29, x30, [sp, #80]
   2b1e4:	str	x19, [sp, #96]
   2b1e8:	add	x29, sp, #0x50
   2b1ec:	ldr	x9, [x0]
   2b1f0:	mov	x8, x0
   2b1f4:	movi	v0.2d, #0x0
   2b1f8:	ldp	x10, x0, [x9, #-16]
   2b1fc:	stp	x2, x8, [sp]
   2b200:	stp	x1, x3, [sp, #16]
   2b204:	stp	q0, q0, [sp, #32]
   2b208:	stur	q0, [sp, #63]
   2b20c:	ldr	x9, [x0, #8]
   2b210:	ldr	x11, [x2, #8]
   2b214:	add	x19, x8, x10
   2b218:	cmp	x9, x11
   2b21c:	b.eq	2b26c <__dynamic_cast@@Base+0x90>  // b.none
   2b220:	ldr	x8, [x0]
   2b224:	mov	x1, sp
   2b228:	mov	w3, #0x1                   	// #1
   2b22c:	mov	x2, x19
   2b230:	ldr	x8, [x8, #48]
   2b234:	mov	w4, wzr
   2b238:	blr	x8
   2b23c:	ldr	w8, [sp, #60]
   2b240:	cmp	w8, #0x1
   2b244:	b.eq	2b2a4 <__dynamic_cast@@Base+0xc8>  // b.none
   2b248:	cbnz	w8, 2b2dc <__dynamic_cast@@Base+0x100>
   2b24c:	ldp	w9, w8, [sp, #52]
   2b250:	ldr	w10, [sp, #64]
   2b254:	ldr	x11, [sp, #40]
   2b258:	cmp	w8, #0x1
   2b25c:	ccmp	w9, #0x1, #0x0, eq  // eq = none
   2b260:	ccmp	w10, #0x1, #0x0, eq  // eq = none
   2b264:	csel	x0, x11, xzr, eq  // eq = none
   2b268:	b	2b2e0 <__dynamic_cast@@Base+0x104>
   2b26c:	mov	w8, #0x1                   	// #1
   2b270:	str	w8, [sp, #72]
   2b274:	ldr	x8, [x0]
   2b278:	mov	x1, sp
   2b27c:	mov	w4, #0x1                   	// #1
   2b280:	mov	x2, x19
   2b284:	ldr	x8, [x8, #40]
   2b288:	mov	x3, x19
   2b28c:	mov	w5, wzr
   2b290:	blr	x8
   2b294:	ldr	w8, [sp, #48]
   2b298:	cmp	w8, #0x1
   2b29c:	csel	x0, x19, xzr, eq  // eq = none
   2b2a0:	b	2b2e0 <__dynamic_cast@@Base+0x104>
   2b2a4:	ldr	w8, [sp, #48]
   2b2a8:	cmp	w8, #0x1
   2b2ac:	b.eq	2b2d4 <__dynamic_cast@@Base+0xf8>  // b.none
   2b2b0:	ldr	w8, [sp, #64]
   2b2b4:	mov	x0, xzr
   2b2b8:	cbnz	w8, 2b2e0 <__dynamic_cast@@Base+0x104>
   2b2bc:	ldr	w8, [sp, #52]
   2b2c0:	cmp	w8, #0x1
   2b2c4:	b.ne	2b2e0 <__dynamic_cast@@Base+0x104>  // b.any
   2b2c8:	ldr	w8, [sp, #56]
   2b2cc:	cmp	w8, #0x1
   2b2d0:	b.ne	2b2e0 <__dynamic_cast@@Base+0x104>  // b.any
   2b2d4:	ldr	x0, [sp, #32]
   2b2d8:	b	2b2e0 <__dynamic_cast@@Base+0x104>
   2b2dc:	mov	x0, xzr
   2b2e0:	ldr	x19, [sp, #96]
   2b2e4:	ldp	x29, x30, [sp, #80]
   2b2e8:	add	sp, sp, #0x70
   2b2ec:	ret
   2b2f0:	ldr	x9, [x1, #8]
   2b2f4:	mov	w8, #0x1                   	// #1
   2b2f8:	strb	w8, [x1, #77]
   2b2fc:	cmp	x9, x3
   2b300:	b.eq	2b308 <__dynamic_cast@@Base+0x12c>  // b.none
   2b304:	ret
   2b308:	ldr	x9, [x1, #32]
   2b30c:	strb	w8, [x1, #76]
   2b310:	cbz	x9, 2b334 <__dynamic_cast@@Base+0x158>
   2b314:	cmp	x9, x2
   2b318:	b.eq	2b360 <__dynamic_cast@@Base+0x184>  // b.none
   2b31c:	ldr	w8, [x1, #60]
   2b320:	mov	w9, #0x1                   	// #1
   2b324:	strb	w9, [x1, #78]
   2b328:	add	w8, w8, #0x1
   2b32c:	str	w8, [x1, #60]
   2b330:	ret
   2b334:	mov	w8, #0x1                   	// #1
   2b338:	cmp	w4, #0x1
   2b33c:	str	x2, [x1, #32]
   2b340:	str	w4, [x1, #48]
   2b344:	str	w8, [x1, #60]
   2b348:	b.ne	2b304 <__dynamic_cast@@Base+0x128>  // b.any
   2b34c:	ldr	w8, [x1, #72]
   2b350:	cmp	w8, #0x1
   2b354:	b.ne	2b304 <__dynamic_cast@@Base+0x128>  // b.any
   2b358:	strb	w8, [x1, #78]
   2b35c:	ret
   2b360:	ldr	w8, [x1, #48]
   2b364:	cmp	w8, #0x2
   2b368:	b.ne	2b374 <__dynamic_cast@@Base+0x198>  // b.any
   2b36c:	mov	w8, w4
   2b370:	str	w4, [x1, #48]
   2b374:	ldr	w9, [x1, #72]
   2b378:	cmp	w9, #0x1
   2b37c:	b.ne	2b304 <__dynamic_cast@@Base+0x128>  // b.any
   2b380:	cmp	w8, #0x1
   2b384:	b.ne	2b304 <__dynamic_cast@@Base+0x128>  // b.any
   2b388:	strb	w8, [x1, #78]
   2b38c:	ret
   2b390:	ldr	x8, [x1, #8]
   2b394:	cmp	x8, x2
   2b398:	b.eq	2b3a0 <__dynamic_cast@@Base+0x1c4>  // b.none
   2b39c:	ret
   2b3a0:	ldr	w8, [x1, #52]
   2b3a4:	cmp	w8, #0x1
   2b3a8:	b.eq	2b39c <__dynamic_cast@@Base+0x1c0>  // b.none
   2b3ac:	str	w3, [x1, #52]
   2b3b0:	ret
   2b3b4:	stp	x29, x30, [sp, #-96]!
   2b3b8:	str	x27, [sp, #16]
   2b3bc:	stp	x26, x25, [sp, #32]
   2b3c0:	stp	x24, x23, [sp, #48]
   2b3c4:	stp	x22, x21, [sp, #64]
   2b3c8:	stp	x20, x19, [sp, #80]
   2b3cc:	mov	x29, sp
   2b3d0:	ldr	x8, [x1, #16]
   2b3d4:	mov	w21, w4
   2b3d8:	mov	w22, w3
   2b3dc:	mov	x20, x2
   2b3e0:	mov	x19, x1
   2b3e4:	mov	x23, x0
   2b3e8:	tbz	w4, #0, 2b470 <__dynamic_cast@@Base+0x294>
   2b3ec:	cmp	x23, x8
   2b3f0:	b.eq	2b54c <__dynamic_cast@@Base+0x370>  // b.none
   2b3f4:	ldr	x24, [x23, #8]
   2b3f8:	ldr	x1, [x8, #8]
   2b3fc:	mov	x0, x24
   2b400:	bl	ed30 <strcmp@plt>
   2b404:	cbz	w0, 2b54c <__dynamic_cast@@Base+0x370>
   2b408:	ldr	x8, [x19]
   2b40c:	cmp	x23, x8
   2b410:	b.eq	2b424 <__dynamic_cast@@Base+0x248>  // b.none
   2b414:	ldr	x1, [x8, #8]
   2b418:	mov	x0, x24
   2b41c:	bl	ed30 <strcmp@plt>
   2b420:	cbnz	w0, 2b490 <__dynamic_cast@@Base+0x2b4>
   2b424:	ldr	x8, [x19, #32]
   2b428:	cmp	x8, x20
   2b42c:	b.eq	2b600 <__dynamic_cast@@Base+0x424>  // b.none
   2b430:	ldr	x8, [x19, #40]
   2b434:	cmp	x8, x20
   2b438:	b.eq	2b600 <__dynamic_cast@@Base+0x424>  // b.none
   2b43c:	ldr	w8, [x19, #68]
   2b440:	str	w22, [x19, #56]
   2b444:	cmp	w8, #0x4
   2b448:	b.eq	2b710 <__dynamic_cast@@Base+0x534>  // b.none
   2b44c:	ldr	w8, [x23, #20]
   2b450:	cbz	w8, 2b6e8 <__dynamic_cast@@Base+0x50c>
   2b454:	add	x8, x23, x8, lsl #4
   2b458:	mov	w22, wzr
   2b45c:	mov	w24, wzr
   2b460:	add	x25, x23, #0x18
   2b464:	add	x26, x8, #0x18
   2b468:	mov	w27, #0x1                   	// #1
   2b46c:	b	2b578 <__dynamic_cast@@Base+0x39c>
   2b470:	ldr	x9, [x23, #8]
   2b474:	ldr	x8, [x8, #8]
   2b478:	cmp	x9, x8
   2b47c:	b.eq	2b54c <__dynamic_cast@@Base+0x370>  // b.none
   2b480:	ldr	x8, [x19]
   2b484:	ldr	x8, [x8, #8]
   2b488:	cmp	x9, x8
   2b48c:	b.eq	2b424 <__dynamic_cast@@Base+0x248>  // b.none
   2b490:	ldr	x8, [x23, #32]
   2b494:	ldr	w24, [x23, #20]
   2b498:	asr	x9, x8, #8
   2b49c:	tbz	w8, #0, 2b4a8 <__dynamic_cast@@Base+0x2cc>
   2b4a0:	ldr	x10, [x20]
   2b4a4:	ldr	x9, [x10, x9]
   2b4a8:	ldr	x0, [x23, #24]
   2b4ac:	add	x2, x20, x9
   2b4b0:	tst	x8, #0x2
   2b4b4:	mov	w8, #0x2                   	// #2
   2b4b8:	ldr	x10, [x0]
   2b4bc:	csel	w3, w8, w22, eq  // eq = none
   2b4c0:	and	w4, w21, #0x1
   2b4c4:	mov	x1, x19
   2b4c8:	ldr	x9, [x10, #48]
   2b4cc:	blr	x9
   2b4d0:	cmp	w24, #0x2
   2b4d4:	b.cc	2b73c <__dynamic_cast@@Base+0x560>  // b.lo, b.ul, b.last
   2b4d8:	ldr	w8, [x23, #16]
   2b4dc:	add	x9, x23, x24, lsl #4
   2b4e0:	add	x24, x9, #0x18
   2b4e4:	add	x23, x23, #0x28
   2b4e8:	tbnz	w8, #1, 2b4f8 <__dynamic_cast@@Base+0x31c>
   2b4ec:	ldr	w9, [x19, #60]
   2b4f0:	cmp	w9, #0x1
   2b4f4:	b.ne	2b614 <__dynamic_cast@@Base+0x438>  // b.any
   2b4f8:	mov	w25, #0x2                   	// #2
   2b4fc:	b	2b52c <__dynamic_cast@@Base+0x350>
   2b500:	ldr	x0, [x23], #16
   2b504:	tst	x8, #0x2
   2b508:	add	x2, x20, x9
   2b50c:	csel	w3, w25, w22, eq  // eq = none
   2b510:	ldr	x10, [x0]
   2b514:	and	w4, w21, #0x1
   2b518:	mov	x1, x19
   2b51c:	ldr	x10, [x10, #48]
   2b520:	blr	x10
   2b524:	cmp	x23, x24
   2b528:	b.cs	2b73c <__dynamic_cast@@Base+0x560>  // b.hs, b.nlast
   2b52c:	ldrb	w8, [x19, #78]
   2b530:	cbnz	w8, 2b73c <__dynamic_cast@@Base+0x560>
   2b534:	ldr	x8, [x23, #8]
   2b538:	asr	x9, x8, #8
   2b53c:	tbz	w8, #0, 2b500 <__dynamic_cast@@Base+0x324>
   2b540:	ldr	x10, [x20]
   2b544:	ldr	x9, [x10, x9]
   2b548:	b	2b500 <__dynamic_cast@@Base+0x324>
   2b54c:	ldr	x8, [x19, #8]
   2b550:	cmp	x8, x20
   2b554:	b.ne	2b73c <__dynamic_cast@@Base+0x560>  // b.any
   2b558:	ldr	w8, [x19, #52]
   2b55c:	cmp	w8, #0x1
   2b560:	b.eq	2b73c <__dynamic_cast@@Base+0x560>  // b.none
   2b564:	str	w22, [x19, #52]
   2b568:	b	2b73c <__dynamic_cast@@Base+0x560>
   2b56c:	add	x25, x25, #0x10
   2b570:	cmp	x25, x26
   2b574:	b.cs	2b6dc <__dynamic_cast@@Base+0x500>  // b.hs, b.nlast
   2b578:	strh	wzr, [x19, #76]
   2b57c:	ldr	x8, [x25, #8]
   2b580:	asr	x9, x8, #8
   2b584:	tbz	w8, #0, 2b590 <__dynamic_cast@@Base+0x3b4>
   2b588:	ldr	x10, [x20]
   2b58c:	ldr	x9, [x10, x9]
   2b590:	ldr	x0, [x25]
   2b594:	tst	x8, #0x2
   2b598:	add	x3, x20, x9
   2b59c:	cinc	w4, w27, eq  // eq = none
   2b5a0:	ldr	x10, [x0]
   2b5a4:	and	w5, w21, #0x1
   2b5a8:	mov	x1, x19
   2b5ac:	mov	x2, x20
   2b5b0:	ldr	x10, [x10, #40]
   2b5b4:	blr	x10
   2b5b8:	ldrb	w8, [x19, #78]
   2b5bc:	cbnz	w8, 2b6dc <__dynamic_cast@@Base+0x500>
   2b5c0:	ldrb	w8, [x19, #77]
   2b5c4:	cbz	w8, 2b56c <__dynamic_cast@@Base+0x390>
   2b5c8:	ldrb	w8, [x19, #76]
   2b5cc:	cbz	w8, 2b5f0 <__dynamic_cast@@Base+0x414>
   2b5d0:	ldr	w8, [x19, #48]
   2b5d4:	cmp	w8, #0x1
   2b5d8:	b.eq	2b6fc <__dynamic_cast@@Base+0x520>  // b.none
   2b5dc:	ldrb	w8, [x23, #16]
   2b5e0:	mov	w24, #0x1                   	// #1
   2b5e4:	mov	w22, #0x1                   	// #1
   2b5e8:	tbnz	w8, #1, 2b56c <__dynamic_cast@@Base+0x390>
   2b5ec:	b	2b700 <__dynamic_cast@@Base+0x524>
   2b5f0:	ldrb	w8, [x23, #16]
   2b5f4:	tbz	w8, #0, 2b6e0 <__dynamic_cast@@Base+0x504>
   2b5f8:	mov	w24, #0x1                   	// #1
   2b5fc:	b	2b56c <__dynamic_cast@@Base+0x390>
   2b600:	cmp	w22, #0x1
   2b604:	b.ne	2b73c <__dynamic_cast@@Base+0x560>  // b.any
   2b608:	mov	w8, #0x1                   	// #1
   2b60c:	str	w8, [x19, #56]
   2b610:	b	2b73c <__dynamic_cast@@Base+0x560>
   2b614:	mov	w25, #0x2                   	// #2
   2b618:	tbnz	w8, #0, 2b64c <__dynamic_cast@@Base+0x470>
   2b61c:	b	2b6b0 <__dynamic_cast@@Base+0x4d4>
   2b620:	ldr	x0, [x23], #16
   2b624:	tst	x8, #0x2
   2b628:	add	x2, x20, x9
   2b62c:	csel	w3, w25, w22, eq  // eq = none
   2b630:	ldr	x10, [x0]
   2b634:	and	w4, w21, #0x1
   2b638:	mov	x1, x19
   2b63c:	ldr	x10, [x10, #48]
   2b640:	blr	x10
   2b644:	cmp	x23, x24
   2b648:	b.cs	2b73c <__dynamic_cast@@Base+0x560>  // b.hs, b.nlast
   2b64c:	ldrb	w8, [x19, #78]
   2b650:	cbnz	w8, 2b73c <__dynamic_cast@@Base+0x560>
   2b654:	ldr	w8, [x19, #60]
   2b658:	cmp	w8, #0x1
   2b65c:	b.ne	2b66c <__dynamic_cast@@Base+0x490>  // b.any
   2b660:	ldr	w8, [x19, #48]
   2b664:	cmp	w8, #0x1
   2b668:	b.eq	2b73c <__dynamic_cast@@Base+0x560>  // b.none
   2b66c:	ldr	x8, [x23, #8]
   2b670:	asr	x9, x8, #8
   2b674:	tbz	w8, #0, 2b620 <__dynamic_cast@@Base+0x444>
   2b678:	ldr	x10, [x20]
   2b67c:	ldr	x9, [x10, x9]
   2b680:	b	2b620 <__dynamic_cast@@Base+0x444>
   2b684:	ldr	x0, [x23], #16
   2b688:	tst	x8, #0x2
   2b68c:	add	x2, x20, x9
   2b690:	csel	w3, w25, w22, eq  // eq = none
   2b694:	ldr	x10, [x0]
   2b698:	and	w4, w21, #0x1
   2b69c:	mov	x1, x19
   2b6a0:	ldr	x10, [x10, #48]
   2b6a4:	blr	x10
   2b6a8:	cmp	x23, x24
   2b6ac:	b.cs	2b73c <__dynamic_cast@@Base+0x560>  // b.hs, b.nlast
   2b6b0:	ldrb	w8, [x19, #78]
   2b6b4:	cbnz	w8, 2b73c <__dynamic_cast@@Base+0x560>
   2b6b8:	ldr	w8, [x19, #60]
   2b6bc:	cmp	w8, #0x1
   2b6c0:	b.eq	2b73c <__dynamic_cast@@Base+0x560>  // b.none
   2b6c4:	ldr	x8, [x23, #8]
   2b6c8:	asr	x9, x8, #8
   2b6cc:	tbz	w8, #0, 2b684 <__dynamic_cast@@Base+0x4a8>
   2b6d0:	ldr	x10, [x20]
   2b6d4:	ldr	x9, [x10, x9]
   2b6d8:	b	2b684 <__dynamic_cast@@Base+0x4a8>
   2b6dc:	tbz	w24, #0, 2b6f4 <__dynamic_cast@@Base+0x518>
   2b6e0:	mov	w24, w22
   2b6e4:	b	2b700 <__dynamic_cast@@Base+0x524>
   2b6e8:	mov	w8, #0x4                   	// #4
   2b6ec:	str	w8, [x19, #68]
   2b6f0:	b	2b710 <__dynamic_cast@@Base+0x534>
   2b6f4:	mov	w8, #0x4                   	// #4
   2b6f8:	b	2b708 <__dynamic_cast@@Base+0x52c>
   2b6fc:	mov	w24, #0x1                   	// #1
   2b700:	mov	w8, #0x3                   	// #3
   2b704:	mov	w22, w24
   2b708:	str	w8, [x19, #68]
   2b70c:	tbnz	w22, #0, 2b73c <__dynamic_cast@@Base+0x560>
   2b710:	ldp	w9, w8, [x19, #60]
   2b714:	str	x20, [x19, #40]
   2b718:	add	w8, w8, #0x1
   2b71c:	cmp	w9, #0x1
   2b720:	str	w8, [x19, #64]
   2b724:	b.ne	2b73c <__dynamic_cast@@Base+0x560>  // b.any
   2b728:	ldr	w8, [x19, #48]
   2b72c:	cmp	w8, #0x2
   2b730:	b.ne	2b73c <__dynamic_cast@@Base+0x560>  // b.any
   2b734:	mov	w8, #0x1                   	// #1
   2b738:	strb	w8, [x19, #78]
   2b73c:	ldp	x20, x19, [sp, #80]
   2b740:	ldp	x22, x21, [sp, #64]
   2b744:	ldp	x24, x23, [sp, #48]
   2b748:	ldp	x26, x25, [sp, #32]
   2b74c:	ldr	x27, [sp, #16]
   2b750:	ldp	x29, x30, [sp], #96
   2b754:	ret
   2b758:	ldr	x8, [x0, #8]
   2b75c:	asr	x9, x8, #8
   2b760:	tbz	w8, #0, 2b76c <__dynamic_cast@@Base+0x590>
   2b764:	ldr	x10, [x3]
   2b768:	ldr	x9, [x10, x9]
   2b76c:	ldr	x0, [x0]
   2b770:	tst	x8, #0x2
   2b774:	mov	w8, #0x2                   	// #2
   2b778:	add	x3, x3, x9
   2b77c:	ldr	x10, [x0]
   2b780:	csel	w4, w8, w4, eq  // eq = none
   2b784:	and	w5, w5, #0x1
   2b788:	ldr	x6, [x10, #40]
   2b78c:	br	x6
   2b790:	ldr	x8, [x0, #8]
   2b794:	asr	x9, x8, #8
   2b798:	tbz	w8, #0, 2b7a4 <__dynamic_cast@@Base+0x5c8>
   2b79c:	ldr	x10, [x2]
   2b7a0:	ldr	x9, [x10, x9]
   2b7a4:	ldr	x0, [x0]
   2b7a8:	tst	x8, #0x2
   2b7ac:	mov	w8, #0x2                   	// #2
   2b7b0:	add	x2, x2, x9
   2b7b4:	ldr	x10, [x0]
   2b7b8:	csel	w3, w8, w3, eq  // eq = none
   2b7bc:	and	w4, w4, #0x1
   2b7c0:	ldr	x5, [x10, #48]
   2b7c4:	br	x5
   2b7c8:	stp	x29, x30, [sp, #-64]!
   2b7cc:	stp	x24, x23, [sp, #16]
   2b7d0:	stp	x22, x21, [sp, #32]
   2b7d4:	stp	x20, x19, [sp, #48]
   2b7d8:	mov	x29, sp
   2b7dc:	ldr	x8, [x1, #16]
   2b7e0:	mov	w22, w4
   2b7e4:	mov	w21, w3
   2b7e8:	mov	x20, x2
   2b7ec:	mov	x19, x1
   2b7f0:	mov	x23, x0
   2b7f4:	tbz	w4, #0, 2b89c <__dynamic_cast@@Base+0x6c0>
   2b7f8:	cmp	x23, x8
   2b7fc:	b.eq	2b8ec <__dynamic_cast@@Base+0x710>  // b.none
   2b800:	ldr	x24, [x23, #8]
   2b804:	ldr	x1, [x8, #8]
   2b808:	mov	x0, x24
   2b80c:	bl	ed30 <strcmp@plt>
   2b810:	cbz	w0, 2b8ec <__dynamic_cast@@Base+0x710>
   2b814:	ldr	x8, [x19]
   2b818:	cmp	x23, x8
   2b81c:	b.eq	2b830 <__dynamic_cast@@Base+0x654>  // b.none
   2b820:	ldr	x1, [x8, #8]
   2b824:	mov	x0, x24
   2b828:	bl	ed30 <strcmp@plt>
   2b82c:	cbnz	w0, 2b8bc <__dynamic_cast@@Base+0x6e0>
   2b830:	ldr	x8, [x19, #32]
   2b834:	cmp	x8, x20
   2b838:	b.eq	2b90c <__dynamic_cast@@Base+0x730>  // b.none
   2b83c:	ldr	x8, [x19, #40]
   2b840:	cmp	x8, x20
   2b844:	b.eq	2b90c <__dynamic_cast@@Base+0x730>  // b.none
   2b848:	ldr	w8, [x19, #68]
   2b84c:	str	w21, [x19, #56]
   2b850:	cmp	w8, #0x4
   2b854:	b.eq	2b928 <__dynamic_cast@@Base+0x74c>  // b.none
   2b858:	strh	wzr, [x19, #76]
   2b85c:	ldr	x0, [x23, #16]
   2b860:	and	w5, w22, #0x1
   2b864:	mov	w4, #0x1                   	// #1
   2b868:	mov	x1, x19
   2b86c:	ldr	x8, [x0]
   2b870:	mov	x2, x20
   2b874:	mov	x3, x20
   2b878:	ldr	x8, [x8, #40]
   2b87c:	blr	x8
   2b880:	ldrb	w8, [x19, #77]
   2b884:	cbz	w8, 2b920 <__dynamic_cast@@Base+0x744>
   2b888:	ldrb	w8, [x19, #76]
   2b88c:	mov	w9, #0x3                   	// #3
   2b890:	str	w9, [x19, #68]
   2b894:	cbnz	w8, 2b954 <__dynamic_cast@@Base+0x778>
   2b898:	b	2b928 <__dynamic_cast@@Base+0x74c>
   2b89c:	ldr	x9, [x23, #8]
   2b8a0:	ldr	x8, [x8, #8]
   2b8a4:	cmp	x9, x8
   2b8a8:	b.eq	2b8ec <__dynamic_cast@@Base+0x710>  // b.none
   2b8ac:	ldr	x8, [x19]
   2b8b0:	ldr	x8, [x8, #8]
   2b8b4:	cmp	x9, x8
   2b8b8:	b.eq	2b830 <__dynamic_cast@@Base+0x654>  // b.none
   2b8bc:	ldr	x0, [x23, #16]
   2b8c0:	and	w4, w22, #0x1
   2b8c4:	mov	x1, x19
   2b8c8:	mov	x2, x20
   2b8cc:	ldr	x8, [x0]
   2b8d0:	mov	w3, w21
   2b8d4:	ldp	x20, x19, [sp, #48]
   2b8d8:	ldp	x22, x21, [sp, #32]
   2b8dc:	ldr	x5, [x8, #48]
   2b8e0:	ldp	x24, x23, [sp, #16]
   2b8e4:	ldp	x29, x30, [sp], #64
   2b8e8:	br	x5
   2b8ec:	ldr	x8, [x19, #8]
   2b8f0:	cmp	x8, x20
   2b8f4:	b.ne	2b954 <__dynamic_cast@@Base+0x778>  // b.any
   2b8f8:	ldr	w8, [x19, #52]
   2b8fc:	cmp	w8, #0x1
   2b900:	b.eq	2b954 <__dynamic_cast@@Base+0x778>  // b.none
   2b904:	str	w21, [x19, #52]
   2b908:	b	2b954 <__dynamic_cast@@Base+0x778>
   2b90c:	cmp	w21, #0x1
   2b910:	b.ne	2b954 <__dynamic_cast@@Base+0x778>  // b.any
   2b914:	mov	w8, #0x1                   	// #1
   2b918:	str	w8, [x19, #56]
   2b91c:	b	2b954 <__dynamic_cast@@Base+0x778>
   2b920:	mov	w8, #0x4                   	// #4
   2b924:	str	w8, [x19, #68]
   2b928:	ldp	w9, w8, [x19, #60]
   2b92c:	str	x20, [x19, #40]
   2b930:	add	w8, w8, #0x1
   2b934:	cmp	w9, #0x1
   2b938:	str	w8, [x19, #64]
   2b93c:	b.ne	2b954 <__dynamic_cast@@Base+0x778>  // b.any
   2b940:	ldr	w8, [x19, #48]
   2b944:	cmp	w8, #0x2
   2b948:	b.ne	2b954 <__dynamic_cast@@Base+0x778>  // b.any
   2b94c:	mov	w8, #0x1                   	// #1
   2b950:	strb	w8, [x19, #78]
   2b954:	ldp	x20, x19, [sp, #48]
   2b958:	ldp	x22, x21, [sp, #32]
   2b95c:	ldp	x24, x23, [sp, #16]
   2b960:	ldp	x29, x30, [sp], #64
   2b964:	ret
   2b968:	stp	x29, x30, [sp, #-64]!
   2b96c:	str	x23, [sp, #16]
   2b970:	stp	x22, x21, [sp, #32]
   2b974:	stp	x20, x19, [sp, #48]
   2b978:	mov	x29, sp
   2b97c:	ldr	x8, [x1, #16]
   2b980:	mov	w20, w3
   2b984:	mov	x21, x2
   2b988:	mov	x19, x1
   2b98c:	mov	x22, x0
   2b990:	tbz	w4, #0, 2b9d0 <__dynamic_cast@@Base+0x7f4>
   2b994:	cmp	x22, x8
   2b998:	b.eq	2ba44 <__dynamic_cast@@Base+0x868>  // b.none
   2b99c:	ldr	x23, [x22, #8]
   2b9a0:	ldr	x1, [x8, #8]
   2b9a4:	mov	x0, x23
   2b9a8:	bl	ed30 <strcmp@plt>
   2b9ac:	cbz	w0, 2ba44 <__dynamic_cast@@Base+0x868>
   2b9b0:	ldr	x8, [x19]
   2b9b4:	cmp	x22, x8
   2b9b8:	b.eq	2b9f0 <__dynamic_cast@@Base+0x814>  // b.none
   2b9bc:	ldr	x1, [x8, #8]
   2b9c0:	mov	x0, x23
   2b9c4:	bl	ed30 <strcmp@plt>
   2b9c8:	cbnz	w0, 2ba74 <__dynamic_cast@@Base+0x898>
   2b9cc:	b	2b9f0 <__dynamic_cast@@Base+0x814>
   2b9d0:	ldr	x9, [x22, #8]
   2b9d4:	ldr	x8, [x8, #8]
   2b9d8:	cmp	x9, x8
   2b9dc:	b.eq	2ba44 <__dynamic_cast@@Base+0x868>  // b.none
   2b9e0:	ldr	x8, [x19]
   2b9e4:	ldr	x8, [x8, #8]
   2b9e8:	cmp	x9, x8
   2b9ec:	b.ne	2ba74 <__dynamic_cast@@Base+0x898>  // b.any
   2b9f0:	ldr	x8, [x19, #32]
   2b9f4:	cmp	x8, x21
   2b9f8:	b.eq	2ba64 <__dynamic_cast@@Base+0x888>  // b.none
   2b9fc:	ldr	x8, [x19, #40]
   2ba00:	cmp	x8, x21
   2ba04:	b.eq	2ba64 <__dynamic_cast@@Base+0x888>  // b.none
   2ba08:	ldp	w9, w8, [x19, #60]
   2ba0c:	str	w20, [x19, #56]
   2ba10:	str	x21, [x19, #40]
   2ba14:	add	w8, w8, #0x1
   2ba18:	cmp	w9, #0x1
   2ba1c:	str	w8, [x19, #64]
   2ba20:	b.ne	2ba38 <__dynamic_cast@@Base+0x85c>  // b.any
   2ba24:	ldr	w8, [x19, #48]
   2ba28:	cmp	w8, #0x2
   2ba2c:	b.ne	2ba38 <__dynamic_cast@@Base+0x85c>  // b.any
   2ba30:	mov	w8, #0x1                   	// #1
   2ba34:	strb	w8, [x19, #78]
   2ba38:	mov	w8, #0x4                   	// #4
   2ba3c:	str	w8, [x19, #68]
   2ba40:	b	2ba74 <__dynamic_cast@@Base+0x898>
   2ba44:	ldr	x8, [x19, #8]
   2ba48:	cmp	x8, x21
   2ba4c:	b.ne	2ba74 <__dynamic_cast@@Base+0x898>  // b.any
   2ba50:	ldr	w8, [x19, #52]
   2ba54:	cmp	w8, #0x1
   2ba58:	b.eq	2ba74 <__dynamic_cast@@Base+0x898>  // b.none
   2ba5c:	str	w20, [x19, #52]
   2ba60:	b	2ba74 <__dynamic_cast@@Base+0x898>
   2ba64:	cmp	w20, #0x1
   2ba68:	b.ne	2ba74 <__dynamic_cast@@Base+0x898>  // b.any
   2ba6c:	mov	w8, #0x1                   	// #1
   2ba70:	str	w8, [x19, #56]
   2ba74:	ldp	x20, x19, [sp, #48]
   2ba78:	ldp	x22, x21, [sp, #32]
   2ba7c:	ldr	x23, [sp, #16]
   2ba80:	ldp	x29, x30, [sp], #64
   2ba84:	ret
   2ba88:	stp	x29, x30, [sp, #-96]!
   2ba8c:	stp	x28, x27, [sp, #16]
   2ba90:	stp	x26, x25, [sp, #32]
   2ba94:	stp	x24, x23, [sp, #48]
   2ba98:	stp	x22, x21, [sp, #64]
   2ba9c:	stp	x20, x19, [sp, #80]
   2baa0:	mov	x29, sp
   2baa4:	ldr	x8, [x1, #16]
   2baa8:	mov	w23, w5
   2baac:	mov	w20, w4
   2bab0:	mov	x22, x3
   2bab4:	mov	x21, x2
   2bab8:	mov	x19, x1
   2babc:	mov	x24, x0
   2bac0:	tbz	w5, #0, 2bb1c <__dynamic_cast@@Base+0x940>
   2bac4:	cmp	x24, x8
   2bac8:	b.eq	2badc <__dynamic_cast@@Base+0x900>  // b.none
   2bacc:	ldr	x0, [x24, #8]
   2bad0:	ldr	x1, [x8, #8]
   2bad4:	bl	ed30 <strcmp@plt>
   2bad8:	cbnz	w0, 2bb2c <__dynamic_cast@@Base+0x950>
   2badc:	ldr	x9, [x19, #8]
   2bae0:	mov	w8, #0x1                   	// #1
   2bae4:	strb	w8, [x19, #77]
   2bae8:	cmp	x9, x22
   2baec:	b.ne	2bc54 <__dynamic_cast@@Base+0xa78>  // b.any
   2baf0:	ldr	x9, [x19, #32]
   2baf4:	strb	w8, [x19, #76]
   2baf8:	cbz	x9, 2bc70 <__dynamic_cast@@Base+0xa94>
   2bafc:	cmp	x9, x21
   2bb00:	b.eq	2bc8c <__dynamic_cast@@Base+0xab0>  // b.none
   2bb04:	ldr	w8, [x19, #60]
   2bb08:	mov	w9, #0x1                   	// #1
   2bb0c:	strb	w9, [x19, #78]
   2bb10:	add	w8, w8, #0x1
   2bb14:	str	w8, [x19, #60]
   2bb18:	b	2bc54 <__dynamic_cast@@Base+0xa78>
   2bb1c:	ldr	x9, [x24, #8]
   2bb20:	ldr	x8, [x8, #8]
   2bb24:	cmp	x9, x8
   2bb28:	b.eq	2badc <__dynamic_cast@@Base+0x900>  // b.none
   2bb2c:	ldrb	w25, [x19, #76]
   2bb30:	ldrb	w28, [x19, #77]
   2bb34:	ldr	w27, [x24, #20]
   2bb38:	strh	wzr, [x19, #76]
   2bb3c:	ldr	x8, [x24, #32]
   2bb40:	asr	x9, x8, #8
   2bb44:	tbz	w8, #0, 2bb50 <__dynamic_cast@@Base+0x974>
   2bb48:	ldr	x10, [x22]
   2bb4c:	ldr	x9, [x10, x9]
   2bb50:	ldr	x0, [x24, #24]
   2bb54:	add	x3, x22, x9
   2bb58:	tst	x8, #0x2
   2bb5c:	mov	w8, #0x2                   	// #2
   2bb60:	ldr	x10, [x0]
   2bb64:	csel	w4, w8, w20, eq  // eq = none
   2bb68:	and	w5, w23, #0x1
   2bb6c:	mov	x1, x19
   2bb70:	ldr	x9, [x10, #40]
   2bb74:	mov	x2, x21
   2bb78:	blr	x9
   2bb7c:	ldrb	w8, [x19, #76]
   2bb80:	ldrb	w9, [x19, #77]
   2bb84:	cmp	w27, #0x2
   2bb88:	orr	w26, w8, w25
   2bb8c:	orr	w25, w9, w28
   2bb90:	b.cc	2bc3c <__dynamic_cast@@Base+0xa60>  // b.lo, b.ul, b.last
   2bb94:	add	x10, x24, x27, lsl #4
   2bb98:	add	x28, x10, #0x18
   2bb9c:	add	x27, x24, #0x28
   2bba0:	b	2bbe8 <__dynamic_cast@@Base+0xa0c>
   2bba4:	ldr	x0, [x27], #16
   2bba8:	mov	w11, #0x2                   	// #2
   2bbac:	tst	x8, #0x2
   2bbb0:	add	x3, x22, x9
   2bbb4:	ldr	x10, [x0]
   2bbb8:	csel	w4, w11, w20, eq  // eq = none
   2bbbc:	and	w5, w23, #0x1
   2bbc0:	mov	x1, x19
   2bbc4:	ldr	x10, [x10, #40]
   2bbc8:	mov	x2, x21
   2bbcc:	blr	x10
   2bbd0:	ldrb	w8, [x19, #76]
   2bbd4:	ldrb	w9, [x19, #77]
   2bbd8:	cmp	x27, x28
   2bbdc:	orr	w26, w8, w26
   2bbe0:	orr	w25, w9, w25
   2bbe4:	b.cs	2bc3c <__dynamic_cast@@Base+0xa60>  // b.hs, b.nlast
   2bbe8:	ldrb	w10, [x19, #78]
   2bbec:	cbnz	w10, 2bc3c <__dynamic_cast@@Base+0xa60>
   2bbf0:	tst	w8, #0xff
   2bbf4:	b.eq	2bc10 <__dynamic_cast@@Base+0xa34>  // b.none
   2bbf8:	ldr	w8, [x19, #48]
   2bbfc:	cmp	w8, #0x1
   2bc00:	b.eq	2bc3c <__dynamic_cast@@Base+0xa60>  // b.none
   2bc04:	ldrb	w8, [x24, #16]
   2bc08:	tbnz	w8, #1, 2bc20 <__dynamic_cast@@Base+0xa44>
   2bc0c:	b	2bc3c <__dynamic_cast@@Base+0xa60>
   2bc10:	tst	w9, #0xff
   2bc14:	b.eq	2bc20 <__dynamic_cast@@Base+0xa44>  // b.none
   2bc18:	ldrb	w8, [x24, #16]
   2bc1c:	tbz	w8, #0, 2bc3c <__dynamic_cast@@Base+0xa60>
   2bc20:	strh	wzr, [x19, #76]
   2bc24:	ldr	x8, [x27, #8]
   2bc28:	asr	x9, x8, #8
   2bc2c:	tbz	w8, #0, 2bba4 <__dynamic_cast@@Base+0x9c8>
   2bc30:	ldr	x10, [x22]
   2bc34:	ldr	x9, [x10, x9]
   2bc38:	b	2bba4 <__dynamic_cast@@Base+0x9c8>
   2bc3c:	tst	w26, #0xff
   2bc40:	cset	w8, ne  // ne = any
   2bc44:	tst	w25, #0xff
   2bc48:	cset	w9, ne  // ne = any
   2bc4c:	strb	w8, [x19, #76]
   2bc50:	strb	w9, [x19, #77]
   2bc54:	ldp	x20, x19, [sp, #80]
   2bc58:	ldp	x22, x21, [sp, #64]
   2bc5c:	ldp	x24, x23, [sp, #48]
   2bc60:	ldp	x26, x25, [sp, #32]
   2bc64:	ldp	x28, x27, [sp, #16]
   2bc68:	ldp	x29, x30, [sp], #96
   2bc6c:	ret
   2bc70:	mov	w8, #0x1                   	// #1
   2bc74:	cmp	w20, #0x1
   2bc78:	str	x21, [x19, #32]
   2bc7c:	str	w20, [x19, #48]
   2bc80:	str	w8, [x19, #60]
   2bc84:	b.eq	2bca8 <__dynamic_cast@@Base+0xacc>  // b.none
   2bc88:	b	2bc54 <__dynamic_cast@@Base+0xa78>
   2bc8c:	ldr	w8, [x19, #48]
   2bc90:	cmp	w8, #0x2
   2bc94:	b.ne	2bca0 <__dynamic_cast@@Base+0xac4>  // b.any
   2bc98:	mov	w8, w20
   2bc9c:	str	w20, [x19, #48]
   2bca0:	cmp	w8, #0x1
   2bca4:	b.ne	2bc54 <__dynamic_cast@@Base+0xa78>  // b.any
   2bca8:	ldr	w8, [x19, #72]
   2bcac:	cmp	w8, #0x1
   2bcb0:	b.ne	2bc54 <__dynamic_cast@@Base+0xa78>  // b.any
   2bcb4:	strb	w8, [x19, #78]
   2bcb8:	b	2bc54 <__dynamic_cast@@Base+0xa78>
   2bcbc:	stp	x29, x30, [sp, #-64]!
   2bcc0:	stp	x24, x23, [sp, #16]
   2bcc4:	stp	x22, x21, [sp, #32]
   2bcc8:	stp	x20, x19, [sp, #48]
   2bccc:	mov	x29, sp
   2bcd0:	ldr	x8, [x1, #16]
   2bcd4:	mov	w23, w5
   2bcd8:	mov	w20, w4
   2bcdc:	mov	x22, x3
   2bce0:	mov	x21, x2
   2bce4:	mov	x19, x1
   2bce8:	mov	x24, x0
   2bcec:	tbz	w5, #0, 2bd30 <__dynamic_cast@@Base+0xb54>
   2bcf0:	cmp	x24, x8
   2bcf4:	b.eq	2bd08 <__dynamic_cast@@Base+0xb2c>  // b.none
   2bcf8:	ldr	x0, [x24, #8]
   2bcfc:	ldr	x1, [x8, #8]
   2bd00:	bl	ed30 <strcmp@plt>
   2bd04:	cbnz	w0, 2bd40 <__dynamic_cast@@Base+0xb64>
   2bd08:	ldr	x9, [x19, #8]
   2bd0c:	mov	w8, #0x1                   	// #1
   2bd10:	strb	w8, [x19, #77]
   2bd14:	cmp	x9, x22
   2bd18:	b.eq	2bd74 <__dynamic_cast@@Base+0xb98>  // b.none
   2bd1c:	ldp	x20, x19, [sp, #48]
   2bd20:	ldp	x22, x21, [sp, #32]
   2bd24:	ldp	x24, x23, [sp, #16]
   2bd28:	ldp	x29, x30, [sp], #64
   2bd2c:	ret
   2bd30:	ldr	x9, [x24, #8]
   2bd34:	ldr	x8, [x8, #8]
   2bd38:	cmp	x9, x8
   2bd3c:	b.eq	2bd08 <__dynamic_cast@@Base+0xb2c>  // b.none
   2bd40:	ldr	x0, [x24, #16]
   2bd44:	and	w5, w23, #0x1
   2bd48:	mov	x1, x19
   2bd4c:	mov	x2, x21
   2bd50:	ldr	x8, [x0]
   2bd54:	mov	x3, x22
   2bd58:	mov	w4, w20
   2bd5c:	ldp	x20, x19, [sp, #48]
   2bd60:	ldr	x6, [x8, #40]
   2bd64:	ldp	x22, x21, [sp, #32]
   2bd68:	ldp	x24, x23, [sp, #16]
   2bd6c:	ldp	x29, x30, [sp], #64
   2bd70:	br	x6
   2bd74:	ldr	x9, [x19, #32]
   2bd78:	strb	w8, [x19, #76]
   2bd7c:	cbz	x9, 2bda0 <__dynamic_cast@@Base+0xbc4>
   2bd80:	cmp	x9, x21
   2bd84:	b.eq	2bdbc <__dynamic_cast@@Base+0xbe0>  // b.none
   2bd88:	ldr	w8, [x19, #60]
   2bd8c:	mov	w9, #0x1                   	// #1
   2bd90:	strb	w9, [x19, #78]
   2bd94:	add	w8, w8, #0x1
   2bd98:	str	w8, [x19, #60]
   2bd9c:	b	2bd1c <__dynamic_cast@@Base+0xb40>
   2bda0:	mov	w8, #0x1                   	// #1
   2bda4:	cmp	w20, #0x1
   2bda8:	str	x21, [x19, #32]
   2bdac:	str	w20, [x19, #48]
   2bdb0:	str	w8, [x19, #60]
   2bdb4:	b.eq	2bdd8 <__dynamic_cast@@Base+0xbfc>  // b.none
   2bdb8:	b	2bd1c <__dynamic_cast@@Base+0xb40>
   2bdbc:	ldr	w8, [x19, #48]
   2bdc0:	cmp	w8, #0x2
   2bdc4:	b.ne	2bdd0 <__dynamic_cast@@Base+0xbf4>  // b.any
   2bdc8:	mov	w8, w20
   2bdcc:	str	w20, [x19, #48]
   2bdd0:	cmp	w8, #0x1
   2bdd4:	b.ne	2bd1c <__dynamic_cast@@Base+0xb40>  // b.any
   2bdd8:	ldr	w8, [x19, #72]
   2bddc:	cmp	w8, #0x1
   2bde0:	b.ne	2bd1c <__dynamic_cast@@Base+0xb40>  // b.any
   2bde4:	strb	w8, [x19, #78]
   2bde8:	b	2bd1c <__dynamic_cast@@Base+0xb40>
   2bdec:	stp	x29, x30, [sp, #-48]!
   2bdf0:	stp	x22, x21, [sp, #16]
   2bdf4:	stp	x20, x19, [sp, #32]
   2bdf8:	mov	x29, sp
   2bdfc:	ldr	x8, [x1, #16]
   2be00:	mov	w20, w4
   2be04:	mov	x22, x3
   2be08:	mov	x21, x2
   2be0c:	mov	x19, x1
   2be10:	tbz	w5, #0, 2be30 <__dynamic_cast@@Base+0xc54>
   2be14:	cmp	x0, x8
   2be18:	b.eq	2be40 <__dynamic_cast@@Base+0xc64>  // b.none
   2be1c:	ldr	x0, [x0, #8]
   2be20:	ldr	x1, [x8, #8]
   2be24:	bl	ed30 <strcmp@plt>
   2be28:	cbnz	w0, 2be54 <__dynamic_cast@@Base+0xc78>
   2be2c:	b	2be40 <__dynamic_cast@@Base+0xc64>
   2be30:	ldr	x9, [x0, #8]
   2be34:	ldr	x8, [x8, #8]
   2be38:	cmp	x9, x8
   2be3c:	b.ne	2be54 <__dynamic_cast@@Base+0xc78>  // b.any
   2be40:	ldr	x9, [x19, #8]
   2be44:	mov	w8, #0x1                   	// #1
   2be48:	strb	w8, [x19, #77]
   2be4c:	cmp	x9, x22
   2be50:	b.eq	2be64 <__dynamic_cast@@Base+0xc88>  // b.none
   2be54:	ldp	x20, x19, [sp, #32]
   2be58:	ldp	x22, x21, [sp, #16]
   2be5c:	ldp	x29, x30, [sp], #48
   2be60:	ret
   2be64:	ldr	x9, [x19, #32]
   2be68:	strb	w8, [x19, #76]
   2be6c:	cbz	x9, 2be90 <__dynamic_cast@@Base+0xcb4>
   2be70:	cmp	x9, x21
   2be74:	b.eq	2beac <__dynamic_cast@@Base+0xcd0>  // b.none
   2be78:	ldr	w8, [x19, #60]
   2be7c:	mov	w9, #0x1                   	// #1
   2be80:	strb	w9, [x19, #78]
   2be84:	add	w8, w8, #0x1
   2be88:	str	w8, [x19, #60]
   2be8c:	b	2be54 <__dynamic_cast@@Base+0xc78>
   2be90:	mov	w8, #0x1                   	// #1
   2be94:	cmp	w20, #0x1
   2be98:	str	x21, [x19, #32]
   2be9c:	str	w20, [x19, #48]
   2bea0:	str	w8, [x19, #60]
   2bea4:	b.eq	2bec8 <__dynamic_cast@@Base+0xcec>  // b.none
   2bea8:	b	2be54 <__dynamic_cast@@Base+0xc78>
   2beac:	ldr	w8, [x19, #48]
   2beb0:	cmp	w8, #0x2
   2beb4:	b.ne	2bec0 <__dynamic_cast@@Base+0xce4>  // b.any
   2beb8:	mov	w8, w20
   2bebc:	str	w20, [x19, #48]
   2bec0:	cmp	w8, #0x1
   2bec4:	b.ne	2be54 <__dynamic_cast@@Base+0xc78>  // b.any
   2bec8:	ldr	w8, [x19, #72]
   2becc:	cmp	w8, #0x1
   2bed0:	b.ne	2be54 <__dynamic_cast@@Base+0xc78>  // b.any
   2bed4:	strb	w8, [x19, #78]
   2bed8:	b	2be54 <__dynamic_cast@@Base+0xc78>

000000000002bedc <_Znwm@@Base>:
   2bedc:	stp	x29, x30, [sp, #-32]!
   2bee0:	str	x19, [sp, #16]
   2bee4:	mov	x29, sp
   2bee8:	cmp	x0, #0x0
   2beec:	csinc	x19, x0, xzr, ne  // ne = any
   2bef0:	mov	x0, x19
   2bef4:	bl	ec00 <malloc@plt>
   2bef8:	cbnz	x0, 2bf0c <_Znwm@@Base+0x30>
   2befc:	bl	ebb0 <_ZSt15get_new_handlerv@plt>
   2bf00:	cbz	x0, 2bf18 <_Znwm@@Base+0x3c>
   2bf04:	blr	x0
   2bf08:	b	2bef0 <_Znwm@@Base+0x14>
   2bf0c:	ldr	x19, [sp, #16]
   2bf10:	ldp	x29, x30, [sp], #32
   2bf14:	ret
   2bf18:	mov	w0, #0x8                   	// #8
   2bf1c:	bl	eb80 <__cxa_allocate_exception@plt>
   2bf20:	mov	x19, x0
   2bf24:	bl	ec90 <_ZNSt9bad_allocC1Ev@plt>
   2bf28:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2bf2c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2bf30:	ldr	x1, [x1, #3832]
   2bf34:	ldr	x2, [x2, #3864]
   2bf38:	mov	x0, x19
   2bf3c:	bl	edb0 <__cxa_throw@plt>

000000000002bf40 <_ZnwmRKSt9nothrow_t@@Base>:
   2bf40:	stp	x29, x30, [sp, #-16]!
   2bf44:	mov	x29, sp
   2bf48:	bl	ee30 <_Znwm@plt>
   2bf4c:	ldp	x29, x30, [sp], #16
   2bf50:	ret
   2bf54:	bl	ed90 <__cxa_begin_catch@plt>
   2bf58:	bl	eb60 <__cxa_end_catch@plt>
   2bf5c:	mov	x0, xzr
   2bf60:	ldp	x29, x30, [sp], #16
   2bf64:	ret
   2bf68:	bl	29260 <__cxa_guard_abort@@Base+0x9c>

000000000002bf6c <_Znam@@Base>:
   2bf6c:	b	ee30 <_Znwm@plt>

000000000002bf70 <_ZnamRKSt9nothrow_t@@Base>:
   2bf70:	stp	x29, x30, [sp, #-16]!
   2bf74:	mov	x29, sp
   2bf78:	bl	eb30 <_Znam@plt>
   2bf7c:	ldp	x29, x30, [sp], #16
   2bf80:	ret
   2bf84:	bl	ed90 <__cxa_begin_catch@plt>
   2bf88:	bl	eb60 <__cxa_end_catch@plt>
   2bf8c:	mov	x0, xzr
   2bf90:	ldp	x29, x30, [sp], #16
   2bf94:	ret
   2bf98:	bl	29260 <__cxa_guard_abort@@Base+0x9c>

000000000002bf9c <_ZdlPv@@Base>:
   2bf9c:	cbz	x0, 2bfa4 <_ZdlPv@@Base+0x8>
   2bfa0:	b	ed60 <free@plt>
   2bfa4:	ret

000000000002bfa8 <_ZdlPvRKSt9nothrow_t@@Base>:
   2bfa8:	b	eb20 <_ZdlPv@plt>

000000000002bfac <_ZdlPvm@@Base>:
   2bfac:	b	eb20 <_ZdlPv@plt>

000000000002bfb0 <_ZdaPv@@Base>:
   2bfb0:	b	eb20 <_ZdlPv@plt>

000000000002bfb4 <_ZdaPvRKSt9nothrow_t@@Base>:
   2bfb4:	b	ed50 <_ZdaPv@plt>

000000000002bfb8 <_ZdaPvm@@Base>:
   2bfb8:	b	ed50 <_ZdaPv@plt>

000000000002bfbc <_ZnwmSt11align_val_t@@Base>:
   2bfbc:	sub	sp, sp, #0x30
   2bfc0:	stp	x29, x30, [sp, #16]
   2bfc4:	stp	x20, x19, [sp, #32]
   2bfc8:	add	x29, sp, #0x10
   2bfcc:	cmp	x0, #0x0
   2bfd0:	csinc	x19, x0, xzr, ne  // ne = any
   2bfd4:	cmp	x1, #0x8
   2bfd8:	mov	w8, #0x8                   	// #8
   2bfdc:	csel	x20, x1, x8, hi  // hi = pmore
   2bfe0:	add	x0, sp, #0x8
   2bfe4:	mov	x1, x20
   2bfe8:	mov	x2, x19
   2bfec:	bl	ec60 <posix_memalign@plt>
   2bff0:	cbz	w0, 2c004 <_ZnwmSt11align_val_t@@Base+0x48>
   2bff4:	bl	ebb0 <_ZSt15get_new_handlerv@plt>
   2bff8:	cbz	x0, 2c018 <_ZnwmSt11align_val_t@@Base+0x5c>
   2bffc:	blr	x0
   2c000:	b	2bfe0 <_ZnwmSt11align_val_t@@Base+0x24>
   2c004:	ldr	x0, [sp, #8]
   2c008:	ldp	x20, x19, [sp, #32]
   2c00c:	ldp	x29, x30, [sp, #16]
   2c010:	add	sp, sp, #0x30
   2c014:	ret
   2c018:	mov	w0, #0x8                   	// #8
   2c01c:	bl	eb80 <__cxa_allocate_exception@plt>
   2c020:	mov	x19, x0
   2c024:	bl	ec90 <_ZNSt9bad_allocC1Ev@plt>
   2c028:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2c02c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2c030:	ldr	x1, [x1, #3832]
   2c034:	ldr	x2, [x2, #3864]
   2c038:	mov	x0, x19
   2c03c:	bl	edb0 <__cxa_throw@plt>

000000000002c040 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base>:
   2c040:	stp	x29, x30, [sp, #-16]!
   2c044:	mov	x29, sp
   2c048:	bl	edf0 <_ZnwmSt11align_val_t@plt>
   2c04c:	ldp	x29, x30, [sp], #16
   2c050:	ret
   2c054:	bl	ed90 <__cxa_begin_catch@plt>
   2c058:	bl	eb60 <__cxa_end_catch@plt>
   2c05c:	mov	x0, xzr
   2c060:	ldp	x29, x30, [sp], #16
   2c064:	ret
   2c068:	bl	29260 <__cxa_guard_abort@@Base+0x9c>

000000000002c06c <_ZnamSt11align_val_t@@Base>:
   2c06c:	b	edf0 <_ZnwmSt11align_val_t@plt>

000000000002c070 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base>:
   2c070:	stp	x29, x30, [sp, #-16]!
   2c074:	mov	x29, sp
   2c078:	bl	ef10 <_ZnamSt11align_val_t@plt>
   2c07c:	ldp	x29, x30, [sp], #16
   2c080:	ret
   2c084:	bl	ed90 <__cxa_begin_catch@plt>
   2c088:	bl	eb60 <__cxa_end_catch@plt>
   2c08c:	mov	x0, xzr
   2c090:	ldp	x29, x30, [sp], #16
   2c094:	ret
   2c098:	bl	29260 <__cxa_guard_abort@@Base+0x9c>

000000000002c09c <_ZdlPvSt11align_val_t@@Base>:
   2c09c:	cbz	x0, 2c0a4 <_ZdlPvSt11align_val_t@@Base+0x8>
   2c0a0:	b	ed60 <free@plt>
   2c0a4:	ret

000000000002c0a8 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base>:
   2c0a8:	b	ee40 <_ZdlPvSt11align_val_t@plt>

000000000002c0ac <_ZdlPvmSt11align_val_t@@Base>:
   2c0ac:	mov	x1, x2
   2c0b0:	b	ee40 <_ZdlPvSt11align_val_t@plt>

000000000002c0b4 <_ZdaPvSt11align_val_t@@Base>:
   2c0b4:	b	ee40 <_ZdlPvSt11align_val_t@plt>

000000000002c0b8 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base>:
   2c0b8:	b	ebd0 <_ZdaPvSt11align_val_t@plt>

000000000002c0bc <_ZdaPvmSt11align_val_t@@Base>:
   2c0bc:	mov	x1, x2
   2c0c0:	b	ebd0 <_ZdaPvSt11align_val_t@plt>
   2c0c4:	str	x1, [x0]
   2c0c8:	ret
   2c0cc:	ldr	x0, [x0]
   2c0d0:	ret
   2c0d4:	ldr	x8, [x0]
   2c0d8:	mov	x9, #0x2b2b                	// #11051
   2c0dc:	movk	x9, #0x4743, lsl #16
   2c0e0:	movk	x9, #0x4c4e, lsl #32
   2c0e4:	movk	x9, #0x43, lsl #48
   2c0e8:	cmp	x9, x8, lsr #8
   2c0ec:	cset	w0, eq  // eq = none
   2c0f0:	ret

000000000002c0f4 <__cxa_allocate_exception@@Base>:
   2c0f4:	stp	x29, x30, [sp, #-32]!
   2c0f8:	stp	x20, x19, [sp, #16]
   2c0fc:	mov	x29, sp
   2c100:	add	x8, x0, #0x8f
   2c104:	and	x19, x8, #0xfffffffffffffff0
   2c108:	mov	x0, x19
   2c10c:	bl	2a164 <_ZNKSt10bad_typeid4whatEv@@Base+0x94>
   2c110:	mov	x20, x0
   2c114:	cbz	x0, 2c138 <__cxa_allocate_exception@@Base+0x44>
   2c118:	mov	x0, x20
   2c11c:	mov	w1, wzr
   2c120:	mov	x2, x19
   2c124:	bl	ec40 <memset@plt>
   2c128:	add	x0, x20, #0x80
   2c12c:	ldp	x20, x19, [sp, #16]
   2c130:	ldp	x29, x30, [sp], #32
   2c134:	ret
   2c138:	bl	eeb0 <_ZSt9terminatev@plt>
   2c13c:	bl	eef0 <__cxa_call_unexpected@plt>

000000000002c140 <__cxa_free_exception@@Base>:
   2c140:	stp	x29, x30, [sp, #-16]!
   2c144:	mov	x29, sp
   2c148:	sub	x0, x0, #0x80
   2c14c:	bl	2a3a8 <_ZNKSt10bad_typeid4whatEv@@Base+0x2d8>
   2c150:	ldp	x29, x30, [sp], #16
   2c154:	ret
   2c158:	bl	eef0 <__cxa_call_unexpected@plt>

000000000002c15c <__cxa_allocate_dependent_exception@@Base>:
   2c15c:	stp	x29, x30, [sp, #-16]!
   2c160:	mov	x29, sp
   2c164:	mov	w0, #0x80                  	// #128
   2c168:	bl	2a164 <_ZNKSt10bad_typeid4whatEv@@Base+0x94>
   2c16c:	cbz	x0, 2c18c <__cxa_allocate_dependent_exception@@Base+0x30>
   2c170:	movi	v0.2d, #0x0
   2c174:	stp	q0, q0, [x0, #96]
   2c178:	stp	q0, q0, [x0, #64]
   2c17c:	stp	q0, q0, [x0, #32]
   2c180:	stp	q0, q0, [x0]
   2c184:	ldp	x29, x30, [sp], #16
   2c188:	ret
   2c18c:	bl	eeb0 <_ZSt9terminatev@plt>

000000000002c190 <__cxa_free_dependent_exception@@Base>:
   2c190:	b	2a3a8 <_ZNKSt10bad_typeid4whatEv@@Base+0x2d8>

000000000002c194 <__cxa_throw@@Base>:
   2c194:	stp	x29, x30, [sp, #-48]!
   2c198:	stp	x22, x21, [sp, #16]
   2c19c:	stp	x20, x19, [sp, #32]
   2c1a0:	mov	x29, sp
   2c1a4:	mov	x19, x2
   2c1a8:	mov	x20, x1
   2c1ac:	mov	x21, x0
   2c1b0:	bl	ed00 <__cxa_get_globals@plt>
   2c1b4:	mov	x22, x0
   2c1b8:	bl	eaf0 <_ZSt14get_unexpectedv@plt>
   2c1bc:	stur	x0, [x21, #-96]
   2c1c0:	bl	ec30 <_ZSt13get_terminatev@plt>
   2c1c4:	mov	x8, #0x2b00                	// #11008
   2c1c8:	movk	x8, #0x432b, lsl #16
   2c1cc:	movk	x8, #0x4e47, lsl #32
   2c1d0:	movk	x8, #0x434c, lsl #48
   2c1d4:	mov	w9, #0x1                   	// #1
   2c1d8:	str	x8, [x21, #-32]!
   2c1dc:	stur	x0, [x21, #-56]
   2c1e0:	stp	x20, x19, [x21, #-80]
   2c1e4:	stur	x9, [x21, #-88]
   2c1e8:	ldr	w8, [x22, #8]
   2c1ec:	adrp	x9, 2c000 <_ZnwmSt11align_val_t@@Base+0x44>
   2c1f0:	add	x9, x9, #0x214
   2c1f4:	mov	x0, x21
   2c1f8:	add	w8, w8, #0x1
   2c1fc:	sub	x19, x21, #0x60
   2c200:	str	w8, [x22, #8]
   2c204:	str	x9, [x21, #8]
   2c208:	bl	ebc0 <_Unwind_RaiseException@plt>
   2c20c:	mov	x0, x19
   2c210:	bl	2c278 <__cxa_throw@@Base+0xe4>
   2c214:	stp	x29, x30, [sp, #-32]!
   2c218:	str	x19, [sp, #16]
   2c21c:	mov	x29, sp
   2c220:	cmp	w0, #0x1
   2c224:	b.ne	2c268 <__cxa_throw@@Base+0xd4>  // b.any
   2c228:	add	x0, x1, #0x20
   2c22c:	sub	x19, x1, #0x60
   2c230:	sub	x8, x1, #0x58
   2c234:	ldaxr	x9, [x8]
   2c238:	subs	x9, x9, #0x1
   2c23c:	stlxr	w10, x9, [x8]
   2c240:	cbnz	w10, 2c234 <__cxa_throw@@Base+0xa0>
   2c244:	b.ne	2c25c <__cxa_throw@@Base+0xc8>  // b.any
   2c248:	ldur	x8, [x1, #-72]
   2c24c:	cbz	x8, 2c254 <__cxa_throw@@Base+0xc0>
   2c250:	blr	x8
   2c254:	mov	x0, x19
   2c258:	bl	2a3a8 <_ZNKSt10bad_typeid4whatEv@@Base+0x2d8>
   2c25c:	ldr	x19, [sp, #16]
   2c260:	ldp	x29, x30, [sp], #32
   2c264:	ret
   2c268:	ldur	x0, [x1, #-56]
   2c26c:	bl	292fc <_ZSt13get_terminatev@@Base+0x10>
   2c270:	bl	eef0 <__cxa_call_unexpected@plt>
   2c274:	bl	eef0 <__cxa_call_unexpected@plt>
   2c278:	stp	x29, x30, [sp, #-32]!
   2c27c:	str	x19, [sp, #16]
   2c280:	mov	x29, sp
   2c284:	mov	x19, x0
   2c288:	add	x0, x0, #0x60
   2c28c:	bl	ed90 <__cxa_begin_catch@plt>
   2c290:	ldr	x0, [x19, #40]
   2c294:	bl	292fc <_ZSt13get_terminatev@@Base+0x10>

000000000002c298 <__cxa_get_exception_ptr@@Base>:
   2c298:	ldur	x0, [x0, #-8]
   2c29c:	ret

000000000002c2a0 <__cxa_begin_catch@@Base>:
   2c2a0:	stp	x29, x30, [sp, #-32]!
   2c2a4:	stp	x20, x19, [sp, #16]
   2c2a8:	mov	x29, sp
   2c2ac:	ldr	x20, [x0]
   2c2b0:	mov	x19, x0
   2c2b4:	bl	ed00 <__cxa_get_globals@plt>
   2c2b8:	mov	x8, #0x2b2b                	// #11051
   2c2bc:	movk	x8, #0x4743, lsl #16
   2c2c0:	movk	x8, #0x4c4e, lsl #32
   2c2c4:	movk	x8, #0x43, lsl #48
   2c2c8:	cmp	x8, x20, lsr #8
   2c2cc:	sub	x8, x19, #0x60
   2c2d0:	b.ne	2c310 <__cxa_begin_catch@@Base+0x70>  // b.any
   2c2d4:	ldur	w9, [x19, #-40]
   2c2d8:	cmp	w9, #0x0
   2c2dc:	cneg	w9, w9, mi  // mi = first
   2c2e0:	add	w9, w9, #0x1
   2c2e4:	stur	w9, [x19, #-40]
   2c2e8:	ldr	x9, [x0]
   2c2ec:	cmp	x9, x8
   2c2f0:	b.eq	2c2fc <__cxa_begin_catch@@Base+0x5c>  // b.none
   2c2f4:	stur	x9, [x19, #-48]
   2c2f8:	str	x8, [x0]
   2c2fc:	ldr	w8, [x0, #8]
   2c300:	sub	w8, w8, #0x1
   2c304:	str	w8, [x0, #8]
   2c308:	ldur	x0, [x19, #-8]
   2c30c:	b	2c320 <__cxa_begin_catch@@Base+0x80>
   2c310:	ldr	x9, [x0]
   2c314:	cbnz	x9, 2c32c <__cxa_begin_catch@@Base+0x8c>
   2c318:	str	x8, [x0]
   2c31c:	add	x0, x19, #0x20
   2c320:	ldp	x20, x19, [sp, #16]
   2c324:	ldp	x29, x30, [sp], #32
   2c328:	ret
   2c32c:	bl	eeb0 <_ZSt9terminatev@plt>
   2c330:	bl	eef0 <__cxa_call_unexpected@plt>

000000000002c334 <__cxa_end_catch@@Base>:
   2c334:	stp	x29, x30, [sp, #-32]!
   2c338:	stp	x20, x19, [sp, #16]
   2c33c:	mov	x29, sp
   2c340:	bl	ec10 <__cxa_get_globals_fast@plt>
   2c344:	ldr	x19, [x0]
   2c348:	cbz	x19, 2c3e8 <__cxa_end_catch@@Base+0xb4>
   2c34c:	mov	x20, x0
   2c350:	mov	x0, x19
   2c354:	ldr	x8, [x0, #96]!
   2c358:	mov	x9, #0x2b2b                	// #11051
   2c35c:	movk	x9, #0x4743, lsl #16
   2c360:	movk	x9, #0x4c4e, lsl #32
   2c364:	movk	x9, #0x43, lsl #48
   2c368:	cmp	x9, x8, lsr #8
   2c36c:	b.ne	2c3e0 <__cxa_end_catch@@Base+0xac>  // b.any
   2c370:	ldr	w8, [x19, #56]
   2c374:	tbnz	w8, #31, 2c3f4 <__cxa_end_catch@@Base+0xc0>
   2c378:	subs	w8, w8, #0x1
   2c37c:	str	w8, [x19, #56]
   2c380:	b.ne	2c3e8 <__cxa_end_catch@@Base+0xb4>  // b.any
   2c384:	ldr	x8, [x19, #48]
   2c388:	str	x8, [x20]
   2c38c:	ldrb	w8, [x19, #96]
   2c390:	cmp	x8, #0x1
   2c394:	b.ne	2c3ac <__cxa_end_catch@@Base+0x78>  // b.any
   2c398:	ldr	x8, [x19, #8]
   2c39c:	mov	x0, x19
   2c3a0:	sub	x20, x8, #0x80
   2c3a4:	bl	2a3a8 <_ZNKSt10bad_typeid4whatEv@@Base+0x2d8>
   2c3a8:	mov	x19, x20
   2c3ac:	add	x0, x19, #0x80
   2c3b0:	add	x8, x19, #0x8
   2c3b4:	ldaxr	x9, [x8]
   2c3b8:	subs	x9, x9, #0x1
   2c3bc:	stlxr	w10, x9, [x8]
   2c3c0:	cbnz	w10, 2c3b4 <__cxa_end_catch@@Base+0x80>
   2c3c4:	b.ne	2c3e8 <__cxa_end_catch@@Base+0xb4>  // b.any
   2c3c8:	ldr	x8, [x19, #24]
   2c3cc:	cbz	x8, 2c3d4 <__cxa_end_catch@@Base+0xa0>
   2c3d0:	blr	x8
   2c3d4:	mov	x0, x19
   2c3d8:	bl	2a3a8 <_ZNKSt10bad_typeid4whatEv@@Base+0x2d8>
   2c3dc:	b	2c3e8 <__cxa_end_catch@@Base+0xb4>
   2c3e0:	bl	ee60 <_Unwind_DeleteException@plt>
   2c3e4:	str	xzr, [x20]
   2c3e8:	ldp	x20, x19, [sp, #16]
   2c3ec:	ldp	x29, x30, [sp], #32
   2c3f0:	ret
   2c3f4:	adds	w8, w8, #0x1
   2c3f8:	str	w8, [x19, #56]
   2c3fc:	b.cc	2c3e8 <__cxa_end_catch@@Base+0xb4>  // b.lo, b.ul, b.last
   2c400:	ldr	x8, [x19, #48]
   2c404:	str	x8, [x20]
   2c408:	b	2c3e8 <__cxa_end_catch@@Base+0xb4>
   2c40c:	bl	eef0 <__cxa_call_unexpected@plt>
   2c410:	bl	eef0 <__cxa_call_unexpected@plt>

000000000002c414 <__cxa_decrement_exception_refcount@@Base>:
   2c414:	stp	x29, x30, [sp, #-32]!
   2c418:	str	x19, [sp, #16]
   2c41c:	mov	x29, sp
   2c420:	cbz	x0, 2c454 <__cxa_decrement_exception_refcount@@Base+0x40>
   2c424:	sub	x19, x0, #0x80
   2c428:	sub	x8, x0, #0x78
   2c42c:	ldaxr	x9, [x8]
   2c430:	subs	x9, x9, #0x1
   2c434:	stlxr	w10, x9, [x8]
   2c438:	cbnz	w10, 2c42c <__cxa_decrement_exception_refcount@@Base+0x18>
   2c43c:	b.ne	2c454 <__cxa_decrement_exception_refcount@@Base+0x40>  // b.any
   2c440:	ldur	x8, [x0, #-104]
   2c444:	cbz	x8, 2c44c <__cxa_decrement_exception_refcount@@Base+0x38>
   2c448:	blr	x8
   2c44c:	mov	x0, x19
   2c450:	bl	2a3a8 <_ZNKSt10bad_typeid4whatEv@@Base+0x2d8>
   2c454:	ldr	x19, [sp, #16]
   2c458:	ldp	x29, x30, [sp], #32
   2c45c:	ret
   2c460:	bl	eef0 <__cxa_call_unexpected@plt>
   2c464:	bl	eef0 <__cxa_call_unexpected@plt>

000000000002c468 <__cxa_current_exception_type@@Base>:
   2c468:	stp	x29, x30, [sp, #-16]!
   2c46c:	mov	x29, sp
   2c470:	bl	ec10 <__cxa_get_globals_fast@plt>
   2c474:	cbz	x0, 2c4a0 <__cxa_current_exception_type@@Base+0x38>
   2c478:	ldr	x8, [x0]
   2c47c:	cbz	x8, 2c4a8 <__cxa_current_exception_type@@Base+0x40>
   2c480:	ldr	x9, [x8, #96]
   2c484:	mov	x10, #0x2b2b                	// #11051
   2c488:	movk	x10, #0x4743, lsl #16
   2c48c:	movk	x10, #0x4c4e, lsl #32
   2c490:	movk	x10, #0x43, lsl #48
   2c494:	cmp	x10, x9, lsr #8
   2c498:	b.ne	2c4a8 <__cxa_current_exception_type@@Base+0x40>  // b.any
   2c49c:	ldr	x0, [x8, #16]
   2c4a0:	ldp	x29, x30, [sp], #16
   2c4a4:	ret
   2c4a8:	mov	x0, xzr
   2c4ac:	ldp	x29, x30, [sp], #16
   2c4b0:	ret

000000000002c4b4 <__cxa_rethrow@@Base>:
   2c4b4:	stp	x29, x30, [sp, #-64]!
   2c4b8:	str	x23, [sp, #16]
   2c4bc:	stp	x22, x21, [sp, #32]
   2c4c0:	stp	x20, x19, [sp, #48]
   2c4c4:	mov	x29, sp
   2c4c8:	bl	ed00 <__cxa_get_globals@plt>
   2c4cc:	ldr	x20, [x0]
   2c4d0:	cbz	x20, 2c594 <__cxa_rethrow@@Base+0xe0>
   2c4d4:	mov	x19, x20
   2c4d8:	ldr	x8, [x19, #96]!
   2c4dc:	mov	x21, #0x2b00                	// #11008
   2c4e0:	movk	x21, #0x432b, lsl #16
   2c4e4:	movk	x21, #0x4e47, lsl #32
   2c4e8:	movk	x21, #0x434c, lsl #48
   2c4ec:	and	x22, x8, #0xffffffffffffff00
   2c4f0:	cmp	x22, x21
   2c4f4:	b.ne	2c514 <__cxa_rethrow@@Base+0x60>  // b.any
   2c4f8:	ldr	w8, [x20, #56]
   2c4fc:	neg	w8, w8
   2c500:	str	w8, [x20, #56]
   2c504:	ldr	w8, [x0, #8]
   2c508:	add	w8, w8, #0x1
   2c50c:	str	w8, [x0, #8]
   2c510:	b	2c518 <__cxa_rethrow@@Base+0x64>
   2c514:	str	xzr, [x0]
   2c518:	mov	x0, x19
   2c51c:	bl	ebc0 <_Unwind_RaiseException@plt>
   2c520:	ldr	x23, [x19]
   2c524:	bl	ed00 <__cxa_get_globals@plt>
   2c528:	and	x8, x23, #0xffffffffffffff00
   2c52c:	cmp	x8, x21
   2c530:	sub	x8, x19, #0x60
   2c534:	b.ne	2c578 <__cxa_rethrow@@Base+0xc4>  // b.any
   2c538:	ldur	w9, [x19, #-40]
   2c53c:	cmp	w9, #0x0
   2c540:	cneg	w9, w9, mi  // mi = first
   2c544:	add	w9, w9, #0x1
   2c548:	stur	w9, [x19, #-40]
   2c54c:	ldr	x9, [x0]
   2c550:	cmp	x9, x8
   2c554:	b.eq	2c560 <__cxa_rethrow@@Base+0xac>  // b.none
   2c558:	stur	x9, [x19, #-48]
   2c55c:	str	x8, [x0]
   2c560:	ldr	w8, [x0, #8]
   2c564:	sub	w8, w8, #0x1
   2c568:	str	w8, [x0, #8]
   2c56c:	cmp	x22, x21
   2c570:	b.eq	2c58c <__cxa_rethrow@@Base+0xd8>  // b.none
   2c574:	b	2c594 <__cxa_rethrow@@Base+0xe0>
   2c578:	ldr	x9, [x0]
   2c57c:	cbnz	x9, 2c594 <__cxa_rethrow@@Base+0xe0>
   2c580:	str	x8, [x0]
   2c584:	cmp	x22, x21
   2c588:	b.ne	2c594 <__cxa_rethrow@@Base+0xe0>  // b.any
   2c58c:	ldr	x0, [x20, #40]
   2c590:	bl	292fc <_ZSt13get_terminatev@@Base+0x10>
   2c594:	bl	eeb0 <_ZSt9terminatev@plt>
   2c598:	bl	eef0 <__cxa_call_unexpected@plt>

000000000002c59c <__cxa_increment_exception_refcount@@Base>:
   2c59c:	cbz	x0, 2c5b4 <__cxa_increment_exception_refcount@@Base+0x18>
   2c5a0:	sub	x8, x0, #0x78
   2c5a4:	ldaxr	x9, [x8]
   2c5a8:	add	x9, x9, #0x1
   2c5ac:	stlxr	w10, x9, [x8]
   2c5b0:	cbnz	w10, 2c5a4 <__cxa_increment_exception_refcount@@Base+0x8>
   2c5b4:	ret

000000000002c5b8 <__cxa_current_primary_exception@@Base>:
   2c5b8:	stp	x29, x30, [sp, #-16]!
   2c5bc:	mov	x29, sp
   2c5c0:	bl	ec10 <__cxa_get_globals_fast@plt>
   2c5c4:	cbz	x0, 2c618 <__cxa_current_primary_exception@@Base+0x60>
   2c5c8:	ldr	x8, [x0]
   2c5cc:	cbz	x8, 2c620 <__cxa_current_primary_exception@@Base+0x68>
   2c5d0:	ldr	x9, [x8, #96]
   2c5d4:	mov	x10, #0x2b2b                	// #11051
   2c5d8:	movk	x10, #0x4743, lsl #16
   2c5dc:	movk	x10, #0x4c4e, lsl #32
   2c5e0:	movk	x10, #0x43, lsl #48
   2c5e4:	cmp	x10, x9, lsr #8
   2c5e8:	b.ne	2c620 <__cxa_current_primary_exception@@Base+0x68>  // b.any
   2c5ec:	and	x9, x9, #0xff
   2c5f0:	cmp	x9, #0x1
   2c5f4:	b.ne	2c600 <__cxa_current_primary_exception@@Base+0x48>  // b.any
   2c5f8:	ldr	x8, [x8, #8]
   2c5fc:	sub	x8, x8, #0x80
   2c600:	add	x0, x8, #0x80
   2c604:	add	x8, x8, #0x8
   2c608:	ldaxr	x9, [x8]
   2c60c:	add	x9, x9, #0x1
   2c610:	stlxr	w10, x9, [x8]
   2c614:	cbnz	w10, 2c608 <__cxa_current_primary_exception@@Base+0x50>
   2c618:	ldp	x29, x30, [sp], #16
   2c61c:	ret
   2c620:	mov	x0, xzr
   2c624:	ldp	x29, x30, [sp], #16
   2c628:	ret
   2c62c:	bl	eef0 <__cxa_call_unexpected@plt>

000000000002c630 <__cxa_rethrow_primary_exception@@Base>:
   2c630:	stp	x29, x30, [sp, #-48]!
   2c634:	str	x21, [sp, #16]
   2c638:	stp	x20, x19, [sp, #32]
   2c63c:	mov	x29, sp
   2c640:	cbz	x0, 2c734 <__cxa_rethrow_primary_exception@@Base+0x104>
   2c644:	mov	x20, x0
   2c648:	mov	w0, #0x80                  	// #128
   2c64c:	bl	2a164 <_ZNKSt10bad_typeid4whatEv@@Base+0x94>
   2c650:	cbz	x0, 2c744 <__cxa_rethrow_primary_exception@@Base+0x114>
   2c654:	mov	x19, x0
   2c658:	movi	v0.2d, #0x0
   2c65c:	sub	x8, x20, #0x78
   2c660:	stp	q0, q0, [x0, #96]
   2c664:	stp	q0, q0, [x0, #64]
   2c668:	stp	q0, q0, [x0, #32]
   2c66c:	stp	q0, q0, [x0]
   2c670:	str	x20, [x0, #8]
   2c674:	ldaxr	x9, [x8]
   2c678:	add	x9, x9, #0x1
   2c67c:	stlxr	w10, x9, [x8]
   2c680:	cbnz	w10, 2c674 <__cxa_rethrow_primary_exception@@Base+0x44>
   2c684:	ldur	x8, [x20, #-112]
   2c688:	mov	x21, #0x2b00                	// #11008
   2c68c:	movk	x21, #0x432b, lsl #16
   2c690:	movk	x21, #0x4e47, lsl #32
   2c694:	movk	x21, #0x434c, lsl #48
   2c698:	str	x8, [x19, #16]
   2c69c:	bl	eaf0 <_ZSt14get_unexpectedv@plt>
   2c6a0:	str	x0, [x19, #32]
   2c6a4:	bl	ec30 <_ZSt13get_terminatev@plt>
   2c6a8:	orr	x8, x21, #0x1
   2c6ac:	mov	x20, x19
   2c6b0:	str	x8, [x20, #96]!
   2c6b4:	stur	x0, [x20, #-56]
   2c6b8:	bl	ed00 <__cxa_get_globals@plt>
   2c6bc:	ldr	w8, [x0, #8]
   2c6c0:	adrp	x9, 2c000 <_ZnwmSt11align_val_t@@Base+0x44>
   2c6c4:	add	x9, x9, #0x74c
   2c6c8:	add	w8, w8, #0x1
   2c6cc:	str	w8, [x0, #8]
   2c6d0:	mov	x0, x20
   2c6d4:	str	x9, [x20, #8]
   2c6d8:	bl	ebc0 <_Unwind_RaiseException@plt>
   2c6dc:	ldr	x20, [x20]
   2c6e0:	bl	ed00 <__cxa_get_globals@plt>
   2c6e4:	and	x8, x20, #0xffffffffffffff00
   2c6e8:	cmp	x8, x21
   2c6ec:	b.ne	2c728 <__cxa_rethrow_primary_exception@@Base+0xf8>  // b.any
   2c6f0:	ldr	w8, [x19, #56]
   2c6f4:	cmp	w8, #0x0
   2c6f8:	cneg	w8, w8, mi  // mi = first
   2c6fc:	add	w8, w8, #0x1
   2c700:	str	w8, [x19, #56]
   2c704:	ldr	x8, [x0]
   2c708:	cmp	x8, x19
   2c70c:	b.eq	2c718 <__cxa_rethrow_primary_exception@@Base+0xe8>  // b.none
   2c710:	str	x8, [x19, #48]
   2c714:	str	x19, [x0]
   2c718:	ldr	w8, [x0, #8]
   2c71c:	sub	w8, w8, #0x1
   2c720:	str	w8, [x0, #8]
   2c724:	b	2c734 <__cxa_rethrow_primary_exception@@Base+0x104>
   2c728:	ldr	x8, [x0]
   2c72c:	cbnz	x8, 2c744 <__cxa_rethrow_primary_exception@@Base+0x114>
   2c730:	str	x19, [x0]
   2c734:	ldp	x20, x19, [sp, #32]
   2c738:	ldr	x21, [sp, #16]
   2c73c:	ldp	x29, x30, [sp], #48
   2c740:	ret
   2c744:	bl	eeb0 <_ZSt9terminatev@plt>
   2c748:	bl	eef0 <__cxa_call_unexpected@plt>
   2c74c:	stp	x29, x30, [sp, #-32]!
   2c750:	stp	x20, x19, [sp, #16]
   2c754:	mov	x29, sp
   2c758:	cmp	w0, #0x1
   2c75c:	mov	x19, x1
   2c760:	b.ne	2c7ac <__cxa_rethrow_primary_exception@@Base+0x17c>  // b.any
   2c764:	ldur	x0, [x19, #-88]
   2c768:	cbz	x0, 2c79c <__cxa_rethrow_primary_exception@@Base+0x16c>
   2c76c:	sub	x20, x0, #0x80
   2c770:	sub	x8, x0, #0x78
   2c774:	ldaxr	x9, [x8]
   2c778:	subs	x9, x9, #0x1
   2c77c:	stlxr	w10, x9, [x8]
   2c780:	cbnz	w10, 2c774 <__cxa_rethrow_primary_exception@@Base+0x144>
   2c784:	b.ne	2c79c <__cxa_rethrow_primary_exception@@Base+0x16c>  // b.any
   2c788:	ldur	x8, [x0, #-104]
   2c78c:	cbz	x8, 2c794 <__cxa_rethrow_primary_exception@@Base+0x164>
   2c790:	blr	x8
   2c794:	mov	x0, x20
   2c798:	bl	2a3a8 <_ZNKSt10bad_typeid4whatEv@@Base+0x2d8>
   2c79c:	sub	x0, x19, #0x60
   2c7a0:	ldp	x20, x19, [sp, #16]
   2c7a4:	ldp	x29, x30, [sp], #32
   2c7a8:	b	2a3a8 <_ZNKSt10bad_typeid4whatEv@@Base+0x2d8>
   2c7ac:	ldur	x0, [x19, #-56]
   2c7b0:	bl	292fc <_ZSt13get_terminatev@@Base+0x10>
   2c7b4:	bl	eef0 <__cxa_call_unexpected@plt>
   2c7b8:	bl	eef0 <__cxa_call_unexpected@plt>

000000000002c7bc <__cxa_uncaught_exception@@Base>:
   2c7bc:	stp	x29, x30, [sp, #-16]!
   2c7c0:	mov	x29, sp
   2c7c4:	bl	ec10 <__cxa_get_globals_fast@plt>
   2c7c8:	cbz	x0, 2c7d8 <__cxa_uncaught_exception@@Base+0x1c>
   2c7cc:	ldr	w8, [x0, #8]
   2c7d0:	cmp	w8, #0x0
   2c7d4:	cset	w0, ne  // ne = any
   2c7d8:	ldp	x29, x30, [sp], #16
   2c7dc:	ret
   2c7e0:	bl	eef0 <__cxa_call_unexpected@plt>

000000000002c7e4 <__cxa_uncaught_exceptions@@Base>:
   2c7e4:	stp	x29, x30, [sp, #-16]!
   2c7e8:	mov	x29, sp
   2c7ec:	bl	ec10 <__cxa_get_globals_fast@plt>
   2c7f0:	cbz	x0, 2c7f8 <__cxa_uncaught_exceptions@@Base+0x14>
   2c7f4:	ldr	w0, [x0, #8]
   2c7f8:	ldp	x29, x30, [sp], #16
   2c7fc:	ret
   2c800:	bl	eef0 <__cxa_call_unexpected@plt>

000000000002c804 <__gxx_personality_v0@@Base>:
   2c804:	sub	sp, sp, #0x60
   2c808:	stp	x29, x30, [sp, #48]
   2c80c:	stp	x22, x21, [sp, #64]
   2c810:	stp	x20, x19, [sp, #80]
   2c814:	add	x29, sp, #0x30
   2c818:	cmp	w0, #0x1
   2c81c:	mov	w0, #0x3                   	// #3
   2c820:	b.ne	2c980 <__gxx_personality_v0@@Base+0x17c>  // b.any
   2c824:	mov	x20, x3
   2c828:	cbz	x3, 2c980 <__gxx_personality_v0@@Base+0x17c>
   2c82c:	mov	x19, x4
   2c830:	cbz	x4, 2c980 <__gxx_personality_v0@@Base+0x17c>
   2c834:	and	x21, x2, #0xffffffffffffff00
   2c838:	tbnz	w1, #0, 2c848 <__gxx_personality_v0@@Base+0x44>
   2c83c:	tbnz	w1, #1, 2c8a0 <__gxx_personality_v0@@Base+0x9c>
   2c840:	mov	w0, #0x3                   	// #3
   2c844:	b	2c980 <__gxx_personality_v0@@Base+0x17c>
   2c848:	mov	x22, #0x2b00                	// #11008
   2c84c:	movk	x22, #0x432b, lsl #16
   2c850:	movk	x22, #0x4e47, lsl #32
   2c854:	movk	x22, #0x434c, lsl #48
   2c858:	cmp	x21, x22
   2c85c:	cset	w2, eq  // eq = none
   2c860:	mov	x0, sp
   2c864:	mov	x3, x20
   2c868:	mov	x4, x19
   2c86c:	bl	2c9a0 <__gxx_personality_v0@@Base+0x19c>
   2c870:	ldr	w0, [sp, #40]
   2c874:	cmp	w0, #0x6
   2c878:	b.ne	2c980 <__gxx_personality_v0@@Base+0x17c>  // b.any
   2c87c:	cmp	x21, x22
   2c880:	b.ne	2c980 <__gxx_personality_v0@@Base+0x17c>  // b.any
   2c884:	ldr	x8, [sp]
   2c888:	mov	w0, #0x6                   	// #6
   2c88c:	stur	w8, [x20, #-36]
   2c890:	ldur	q0, [sp, #24]
   2c894:	ldur	q1, [sp, #8]
   2c898:	stp	q1, q0, [x20, #-32]
   2c89c:	b	2c980 <__gxx_personality_v0@@Base+0x17c>
   2c8a0:	mov	x8, #0x2b00                	// #11008
   2c8a4:	movk	x8, #0x432b, lsl #16
   2c8a8:	movk	x8, #0x4e47, lsl #32
   2c8ac:	movk	x8, #0x434c, lsl #48
   2c8b0:	cmp	x21, x8
   2c8b4:	tbnz	w1, #2, 2c904 <__gxx_personality_v0@@Base+0x100>
   2c8b8:	cset	w2, eq  // eq = none
   2c8bc:	mov	x0, sp
   2c8c0:	mov	x3, x20
   2c8c4:	mov	x4, x19
   2c8c8:	bl	2c9a0 <__gxx_personality_v0@@Base+0x19c>
   2c8cc:	ldr	w0, [sp, #40]
   2c8d0:	cmp	w0, #0x6
   2c8d4:	b.ne	2c980 <__gxx_personality_v0@@Base+0x17c>  // b.any
   2c8d8:	mov	x0, x19
   2c8dc:	mov	w1, wzr
   2c8e0:	mov	x2, x20
   2c8e4:	bl	ede0 <_Unwind_SetGR@plt>
   2c8e8:	ldr	x2, [sp]
   2c8ec:	mov	w1, #0x1                   	// #1
   2c8f0:	mov	x0, x19
   2c8f4:	bl	ede0 <_Unwind_SetGR@plt>
   2c8f8:	ldr	x1, [sp, #24]
   2c8fc:	mov	x0, x19
   2c900:	b	2c978 <__gxx_personality_v0@@Base+0x174>
   2c904:	b.ne	2c928 <__gxx_personality_v0@@Base+0x124>  // b.any
   2c908:	ldursw	x21, [x20, #-36]
   2c90c:	str	x21, [sp]
   2c910:	ldur	q0, [x20, #-32]
   2c914:	stur	q0, [sp, #8]
   2c918:	ldur	q0, [x20, #-16]
   2c91c:	stur	q0, [sp, #24]
   2c920:	fmov	x22, d0
   2c924:	b	2c950 <__gxx_personality_v0@@Base+0x14c>
   2c928:	mov	x0, sp
   2c92c:	mov	w2, wzr
   2c930:	mov	x3, x20
   2c934:	mov	x4, x19
   2c938:	bl	2c9a0 <__gxx_personality_v0@@Base+0x19c>
   2c93c:	ldr	w8, [sp, #40]
   2c940:	cmp	w8, #0x6
   2c944:	b.ne	2c994 <__gxx_personality_v0@@Base+0x190>  // b.any
   2c948:	ldr	x21, [sp]
   2c94c:	ldr	x22, [sp, #24]
   2c950:	mov	x0, x19
   2c954:	mov	w1, wzr
   2c958:	mov	x2, x20
   2c95c:	bl	ede0 <_Unwind_SetGR@plt>
   2c960:	mov	w1, #0x1                   	// #1
   2c964:	mov	x0, x19
   2c968:	mov	x2, x21
   2c96c:	bl	ede0 <_Unwind_SetGR@plt>
   2c970:	mov	x0, x19
   2c974:	mov	x1, x22
   2c978:	bl	ef20 <_Unwind_SetIP@plt>
   2c97c:	mov	w0, #0x7                   	// #7
   2c980:	ldp	x20, x19, [sp, #80]
   2c984:	ldp	x22, x21, [sp, #64]
   2c988:	ldp	x29, x30, [sp, #48]
   2c98c:	add	sp, sp, #0x60
   2c990:	ret
   2c994:	mov	w0, wzr
   2c998:	mov	x1, x20
   2c99c:	bl	2cf28 <__gxx_personality_v0@@Base+0x724>
   2c9a0:	sub	sp, sp, #0xb0
   2c9a4:	stp	x29, x30, [sp, #80]
   2c9a8:	stp	x28, x27, [sp, #96]
   2c9ac:	stp	x26, x25, [sp, #112]
   2c9b0:	stp	x24, x23, [sp, #128]
   2c9b4:	stp	x22, x21, [sp, #144]
   2c9b8:	stp	x20, x19, [sp, #160]
   2c9bc:	add	x29, sp, #0x50
   2c9c0:	mov	x23, x4
   2c9c4:	mov	w21, w2
   2c9c8:	mov	x19, x0
   2c9cc:	movi	v0.2d, #0x0
   2c9d0:	mov	w8, #0x3                   	// #3
   2c9d4:	str	xzr, [x0, #32]
   2c9d8:	stp	q0, q0, [x0]
   2c9dc:	str	w8, [x0, #40]
   2c9e0:	tbz	w1, #0, 2c9f0 <__gxx_personality_v0@@Base+0x1ec>
   2c9e4:	tst	w1, #0xe
   2c9e8:	b.ne	2c9f4 <__gxx_personality_v0@@Base+0x1f0>  // b.any
   2c9ec:	b	2ca10 <__gxx_personality_v0@@Base+0x20c>
   2c9f0:	tbnz	w1, #1, 2c9fc <__gxx_personality_v0@@Base+0x1f8>
   2c9f4:	mov	w8, #0x3                   	// #3
   2c9f8:	b	2ce4c <__gxx_personality_v0@@Base+0x648>
   2c9fc:	mvn	w8, w1
   2ca00:	tst	w8, #0xc
   2ca04:	b.ne	2ca10 <__gxx_personality_v0@@Base+0x20c>  // b.any
   2ca08:	mov	w8, #0x2                   	// #2
   2ca0c:	b	2ce4c <__gxx_personality_v0@@Base+0x648>
   2ca10:	mov	x0, x23
   2ca14:	stur	w1, [x29, #-36]
   2ca18:	str	x3, [sp, #32]
   2ca1c:	bl	ec70 <_Unwind_GetLanguageSpecificData@plt>
   2ca20:	stur	x0, [x29, #-16]
   2ca24:	cbz	x0, 2ce48 <__gxx_personality_v0@@Base+0x644>
   2ca28:	mov	x24, x0
   2ca2c:	str	x0, [x19, #16]
   2ca30:	mov	x0, x23
   2ca34:	bl	ed10 <_Unwind_GetIP@plt>
   2ca38:	mov	x25, x0
   2ca3c:	mov	x0, x23
   2ca40:	bl	eba0 <_Unwind_GetRegionStart@plt>
   2ca44:	add	x8, x24, #0x1
   2ca48:	stur	x8, [x29, #-16]
   2ca4c:	ldrb	w1, [x24]
   2ca50:	mov	x24, x0
   2ca54:	mvn	x22, x0
   2ca58:	sub	x0, x29, #0x10
   2ca5c:	bl	2d2cc <__cxa_call_unexpected@@Base+0x378>
   2ca60:	ldur	x9, [x29, #-16]
   2ca64:	cmp	x0, #0x0
   2ca68:	csel	x20, x24, x0, eq  // eq = none
   2ca6c:	str	w21, [sp, #40]
   2ca70:	add	x8, x9, #0x1
   2ca74:	stur	x8, [x29, #-16]
   2ca78:	ldrb	w9, [x9]
   2ca7c:	cmp	x9, #0xff
   2ca80:	stur	x9, [x29, #-32]
   2ca84:	b.eq	2cab4 <__gxx_personality_v0@@Base+0x2b0>  // b.none
   2ca88:	mov	x10, xzr
   2ca8c:	mov	x9, xzr
   2ca90:	ldrb	w11, [x8], #1
   2ca94:	and	x12, x11, #0x7f
   2ca98:	lsl	x12, x12, x10
   2ca9c:	orr	x9, x12, x9
   2caa0:	add	x10, x10, #0x7
   2caa4:	tbnz	w11, #7, 2ca90 <__gxx_personality_v0@@Base+0x28c>
   2caa8:	add	x27, x8, x9
   2caac:	stur	x8, [x29, #-16]
   2cab0:	b	2cab8 <__gxx_personality_v0@@Base+0x2b4>
   2cab4:	mov	x27, xzr
   2cab8:	add	x21, x8, #0x1
   2cabc:	stur	x21, [x29, #-16]
   2cac0:	ldrb	w24, [x8]
   2cac4:	mov	x10, xzr
   2cac8:	mov	x9, xzr
   2cacc:	add	x28, x25, x22
   2cad0:	ldrb	w8, [x21], #1
   2cad4:	and	x11, x8, #0x7f
   2cad8:	lsl	x11, x11, x10
   2cadc:	orr	x9, x11, x9
   2cae0:	add	x10, x10, #0x7
   2cae4:	tbnz	w8, #7, 2cad0 <__gxx_personality_v0@@Base+0x2cc>
   2cae8:	and	x23, x9, #0xffffffff
   2caec:	add	x22, x21, x23
   2caf0:	mov	x9, x21
   2caf4:	stp	x21, x21, [x29, #-24]
   2caf8:	b	2cb04 <__gxx_personality_v0@@Base+0x300>
   2cafc:	cmp	x28, x25
   2cb00:	b.cc	2cee8 <__gxx_personality_v0@@Base+0x6e4>  // b.lo, b.ul, b.last
   2cb04:	cmp	x9, x22
   2cb08:	b.cs	2cee8 <__gxx_personality_v0@@Base+0x6e4>  // b.hs, b.nlast
   2cb0c:	sub	x0, x29, #0x18
   2cb10:	mov	w1, w24
   2cb14:	bl	2d2cc <__cxa_call_unexpected@@Base+0x378>
   2cb18:	mov	x25, x0
   2cb1c:	sub	x0, x29, #0x18
   2cb20:	mov	w1, w24
   2cb24:	bl	2d2cc <__cxa_call_unexpected@@Base+0x378>
   2cb28:	mov	x26, x0
   2cb2c:	sub	x0, x29, #0x18
   2cb30:	mov	w1, w24
   2cb34:	bl	2d2cc <__cxa_call_unexpected@@Base+0x378>
   2cb38:	ldur	x9, [x29, #-24]
   2cb3c:	mov	x10, xzr
   2cb40:	mov	x8, xzr
   2cb44:	ldrb	w11, [x9], #1
   2cb48:	and	x12, x11, #0x7f
   2cb4c:	lsl	x12, x12, x10
   2cb50:	orr	x8, x12, x8
   2cb54:	add	x10, x10, #0x7
   2cb58:	tbnz	w11, #7, 2cb44 <__gxx_personality_v0@@Base+0x340>
   2cb5c:	cmp	x25, x28
   2cb60:	stur	x9, [x29, #-24]
   2cb64:	b.hi	2cafc <__gxx_personality_v0@@Base+0x2f8>  // b.pmore
   2cb68:	add	x10, x26, x25
   2cb6c:	cmp	x28, x10
   2cb70:	b.cs	2cafc <__gxx_personality_v0@@Base+0x2f8>  // b.hs, b.nlast
   2cb74:	cbz	x0, 2ce48 <__gxx_personality_v0@@Base+0x644>
   2cb78:	add	x9, x0, x20
   2cb7c:	cbz	x8, 2ce2c <__gxx_personality_v0@@Base+0x628>
   2cb80:	ldr	x11, [sp, #32]
   2cb84:	ldur	w12, [x29, #-36]
   2cb88:	str	x9, [sp]
   2cb8c:	add	x9, x21, x23
   2cb90:	add	x11, x11, #0x20
   2cb94:	str	x11, [sp, #16]
   2cb98:	ldur	x11, [x29, #-32]
   2cb9c:	and	w10, w12, #0x6
   2cba0:	str	w10, [sp, #12]
   2cba4:	mov	w10, #0x5                   	// #5
   2cba8:	and	x28, x11, #0xf
   2cbac:	mov	w11, #0x1c1d                	// #7197
   2cbb0:	add	x8, x9, x8
   2cbb4:	tst	w12, w10
   2cbb8:	lsr	w9, w11, w28
   2cbbc:	mov	x13, #0xffffffffffffffff    	// #-1
   2cbc0:	sub	x21, x8, #0x1
   2cbc4:	cset	w8, eq  // eq = none
   2cbc8:	and	w25, w9, #0x1
   2cbcc:	str	w8, [sp, #28]
   2cbd0:	mov	x9, xzr
   2cbd4:	mov	x8, xzr
   2cbd8:	mov	x20, x21
   2cbdc:	ldrb	w10, [x20], #1
   2cbe0:	and	x11, x10, #0x7f
   2cbe4:	lsl	x11, x11, x9
   2cbe8:	orr	x8, x11, x8
   2cbec:	add	x9, x9, #0x7
   2cbf0:	tbnz	w10, #7, 2cbdc <__gxx_personality_v0@@Base+0x3d8>
   2cbf4:	cmp	x9, #0x40
   2cbf8:	and	w10, w10, #0x40
   2cbfc:	cset	w11, cc  // cc = lo, ul, last
   2cc00:	lsl	x9, x13, x9
   2cc04:	tst	w11, w10, lsr #6
   2cc08:	csel	x9, x9, xzr, ne  // ne = any
   2cc0c:	orr	x26, x8, x9
   2cc10:	cmp	x26, #0x1
   2cc14:	b.lt	2ccc0 <__gxx_personality_v0@@Base+0x4bc>  // b.tstop
   2cc18:	stur	x27, [x29, #-8]
   2cc1c:	cbz	x27, 2cee8 <__gxx_personality_v0@@Base+0x6e4>
   2cc20:	cmp	w28, #0xc
   2cc24:	b.hi	2cee8 <__gxx_personality_v0@@Base+0x6e4>  // b.pmore
   2cc28:	cbz	w25, 2cee8 <__gxx_personality_v0@@Base+0x6e4>
   2cc2c:	adrp	x8, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2cc30:	add	x8, x8, #0xb48
   2cc34:	ldr	x8, [x8, x28, lsl #3]
   2cc38:	sub	x0, x29, #0x8
   2cc3c:	ldur	x1, [x29, #-32]
   2cc40:	lsl	x8, x26, x8
   2cc44:	sub	x8, x27, x8
   2cc48:	stur	x8, [x29, #-8]
   2cc4c:	bl	2d2cc <__cxa_call_unexpected@@Base+0x378>
   2cc50:	cbz	x0, 2ccd4 <__gxx_personality_v0@@Base+0x4d0>
   2cc54:	ldr	w8, [sp, #40]
   2cc58:	tbz	w8, #0, 2cddc <__gxx_personality_v0@@Base+0x5d8>
   2cc5c:	ldr	x22, [sp, #32]
   2cc60:	mov	x24, x0
   2cc64:	mov	x0, x22
   2cc68:	bl	2c0cc <_ZdaPvmSt11align_val_t@@Base+0x10>
   2cc6c:	mov	x8, #0x2b01                	// #11009
   2cc70:	movk	x8, #0x432b, lsl #16
   2cc74:	movk	x8, #0x4e47, lsl #32
   2cc78:	movk	x8, #0x434c, lsl #48
   2cc7c:	cmp	x0, x8
   2cc80:	ldr	x8, [sp, #16]
   2cc84:	b.ne	2cc8c <__gxx_personality_v0@@Base+0x488>  // b.any
   2cc88:	ldur	x8, [x22, #-88]
   2cc8c:	stur	x8, [x29, #-8]
   2cc90:	cbz	x8, 2cf04 <__gxx_personality_v0@@Base+0x700>
   2cc94:	ldur	x1, [x22, #-80]
   2cc98:	cbz	x1, 2cf04 <__gxx_personality_v0@@Base+0x700>
   2cc9c:	ldr	x8, [x24]
   2cca0:	sub	x2, x29, #0x8
   2cca4:	mov	x0, x24
   2cca8:	ldr	x8, [x8, #32]
   2ccac:	blr	x8
   2ccb0:	tbz	w0, #0, 2cddc <__gxx_personality_v0@@Base+0x5d8>
   2ccb4:	ldur	w8, [x29, #-36]
   2ccb8:	tbz	w8, #0, 2cdd8 <__gxx_personality_v0@@Base+0x5d4>
   2ccbc:	b	2ceb8 <__gxx_personality_v0@@Base+0x6b4>
   2ccc0:	tbnz	x26, #63, 2cce8 <__gxx_personality_v0@@Base+0x4e4>
   2ccc4:	ldr	w8, [sp, #12]
   2ccc8:	cmp	w8, #0x2
   2cccc:	b.ne	2cddc <__gxx_personality_v0@@Base+0x5d8>  // b.any
   2ccd0:	b	2ce70 <__gxx_personality_v0@@Base+0x66c>
   2ccd4:	ldr	w8, [sp, #28]
   2ccd8:	tbz	w8, #0, 2ce70 <__gxx_personality_v0@@Base+0x66c>
   2ccdc:	ldur	w8, [x29, #-36]
   2cce0:	tbnz	w8, #3, 2cddc <__gxx_personality_v0@@Base+0x5d8>
   2cce4:	b	2cee8 <__gxx_personality_v0@@Base+0x6e4>
   2cce8:	ldr	w8, [sp, #40]
   2ccec:	tbz	w8, #0, 2cdbc <__gxx_personality_v0@@Base+0x5b8>
   2ccf0:	ldr	x22, [sp, #32]
   2ccf4:	mov	x0, x22
   2ccf8:	bl	2c0cc <_ZdaPvmSt11align_val_t@@Base+0x10>
   2ccfc:	mov	x8, #0x2b01                	// #11009
   2cd00:	movk	x8, #0x432b, lsl #16
   2cd04:	ldr	x23, [sp, #16]
   2cd08:	movk	x8, #0x4e47, lsl #32
   2cd0c:	movk	x8, #0x434c, lsl #48
   2cd10:	cmp	x0, x8
   2cd14:	b.ne	2cd1c <__gxx_personality_v0@@Base+0x518>  // b.any
   2cd18:	ldur	x23, [x22, #-88]
   2cd1c:	cbz	x23, 2cf04 <__gxx_personality_v0@@Base+0x700>
   2cd20:	ldur	x24, [x22, #-80]
   2cd24:	cbz	x24, 2cf04 <__gxx_personality_v0@@Base+0x700>
   2cd28:	cbz	x27, 2cf10 <__gxx_personality_v0@@Base+0x70c>
   2cd2c:	mov	x9, xzr
   2cd30:	mov	x8, xzr
   2cd34:	mvn	x22, x26
   2cd38:	b	2cd44 <__gxx_personality_v0@@Base+0x540>
   2cd3c:	add	x9, x9, #0x7
   2cd40:	add	x22, x22, #0x1
   2cd44:	ldrb	w10, [x27, x22]
   2cd48:	and	x11, x10, #0x7f
   2cd4c:	lsl	x11, x11, x9
   2cd50:	orr	x8, x11, x8
   2cd54:	tbnz	w10, #7, 2cd3c <__gxx_personality_v0@@Base+0x538>
   2cd58:	cbz	x8, 2cdd0 <__gxx_personality_v0@@Base+0x5cc>
   2cd5c:	cmp	w28, #0xc
   2cd60:	stur	x27, [x29, #-8]
   2cd64:	b.hi	2cef8 <__gxx_personality_v0@@Base+0x6f4>  // b.pmore
   2cd68:	cbz	w25, 2cef8 <__gxx_personality_v0@@Base+0x6f4>
   2cd6c:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2cd70:	add	x9, x9, #0xb48
   2cd74:	ldr	x9, [x9, x28, lsl #3]
   2cd78:	sub	x0, x29, #0x8
   2cd7c:	ldur	x1, [x29, #-32]
   2cd80:	lsl	x8, x8, x9
   2cd84:	sub	x8, x27, x8
   2cd88:	stur	x8, [x29, #-8]
   2cd8c:	bl	2d2cc <__cxa_call_unexpected@@Base+0x378>
   2cd90:	stur	x23, [x29, #-8]
   2cd94:	ldr	x8, [x0]
   2cd98:	sub	x2, x29, #0x8
   2cd9c:	mov	x1, x24
   2cda0:	ldr	x8, [x8, #32]
   2cda4:	blr	x8
   2cda8:	tbnz	w0, #0, 2cddc <__gxx_personality_v0@@Base+0x5d8>
   2cdac:	mov	x9, xzr
   2cdb0:	mov	x8, xzr
   2cdb4:	add	x22, x22, #0x1
   2cdb8:	b	2cd44 <__gxx_personality_v0@@Base+0x540>
   2cdbc:	ldr	w8, [sp, #28]
   2cdc0:	tbz	w8, #0, 2ce70 <__gxx_personality_v0@@Base+0x66c>
   2cdc4:	ldur	w8, [x29, #-36]
   2cdc8:	tbnz	w8, #3, 2cddc <__gxx_personality_v0@@Base+0x5d8>
   2cdcc:	b	2cf1c <__gxx_personality_v0@@Base+0x718>
   2cdd0:	ldur	w8, [x29, #-36]
   2cdd4:	tbnz	w8, #0, 2ced8 <__gxx_personality_v0@@Base+0x6d4>
   2cdd8:	tbz	w8, #3, 2cef8 <__gxx_personality_v0@@Base+0x6f4>
   2cddc:	mov	x9, xzr
   2cde0:	mov	x8, xzr
   2cde4:	mov	x10, x20
   2cde8:	ldrb	w11, [x10], #1
   2cdec:	and	x12, x11, #0x7f
   2cdf0:	lsl	x12, x12, x9
   2cdf4:	orr	x8, x12, x8
   2cdf8:	add	x9, x9, #0x7
   2cdfc:	tbnz	w11, #7, 2cde8 <__gxx_personality_v0@@Base+0x5e4>
   2ce00:	cmp	x9, #0x40
   2ce04:	and	w10, w11, #0x40
   2ce08:	cset	w11, cc  // cc = lo, ul, last
   2ce0c:	mov	x13, #0xffffffffffffffff    	// #-1
   2ce10:	lsl	x9, x13, x9
   2ce14:	tst	w11, w10, lsr #6
   2ce18:	csel	x9, x9, xzr, ne  // ne = any
   2ce1c:	orr	x8, x8, x9
   2ce20:	cbz	x8, 2ce48 <__gxx_personality_v0@@Base+0x644>
   2ce24:	add	x21, x20, x8
   2ce28:	b	2cbd0 <__gxx_personality_v0@@Base+0x3cc>
   2ce2c:	ldur	w8, [x29, #-36]
   2ce30:	and	w8, w8, #0x6
   2ce34:	cmp	w8, #0x2
   2ce38:	b.ne	2ce48 <__gxx_personality_v0@@Base+0x644>  // b.any
   2ce3c:	str	xzr, [x19]
   2ce40:	str	x9, [x19, #24]
   2ce44:	b	2ceb0 <__gxx_personality_v0@@Base+0x6ac>
   2ce48:	mov	w8, #0x8                   	// #8
   2ce4c:	str	w8, [x19, #40]
   2ce50:	ldp	x20, x19, [sp, #160]
   2ce54:	ldp	x22, x21, [sp, #144]
   2ce58:	ldp	x24, x23, [sp, #128]
   2ce5c:	ldp	x26, x25, [sp, #112]
   2ce60:	ldp	x28, x27, [sp, #96]
   2ce64:	ldp	x29, x30, [sp, #80]
   2ce68:	add	sp, sp, #0xb0
   2ce6c:	ret
   2ce70:	stp	x26, x21, [x19]
   2ce74:	ldr	x8, [sp]
   2ce78:	str	x8, [x19, #24]
   2ce7c:	ldr	x20, [sp, #32]
   2ce80:	mov	x0, x20
   2ce84:	bl	2c0cc <_ZdaPvmSt11align_val_t@@Base+0x10>
   2ce88:	mov	x8, #0x2b01                	// #11009
   2ce8c:	movk	x8, #0x432b, lsl #16
   2ce90:	movk	x8, #0x4e47, lsl #32
   2ce94:	movk	x8, #0x434c, lsl #48
   2ce98:	cmp	x0, x8
   2ce9c:	b.ne	2cea8 <__gxx_personality_v0@@Base+0x6a4>  // b.any
   2cea0:	ldur	x8, [x20, #-88]
   2cea4:	str	x8, [sp, #16]
   2cea8:	ldr	x8, [sp, #16]
   2ceac:	str	x8, [x19, #32]
   2ceb0:	mov	w8, #0x6                   	// #6
   2ceb4:	b	2ce4c <__gxx_personality_v0@@Base+0x648>
   2ceb8:	stp	x26, x21, [x19]
   2cebc:	ldr	x8, [sp]
   2cec0:	mov	w9, #0x6                   	// #6
   2cec4:	str	x8, [x19, #24]
   2cec8:	ldur	x8, [x29, #-8]
   2cecc:	str	w9, [x19, #40]
   2ced0:	str	x8, [x19, #32]
   2ced4:	b	2ce50 <__gxx_personality_v0@@Base+0x64c>
   2ced8:	stp	x26, x21, [x19]
   2cedc:	ldr	x8, [sp]
   2cee0:	stp	x8, x23, [x19, #24]
   2cee4:	b	2ceb0 <__gxx_personality_v0@@Base+0x6ac>
   2cee8:	ldr	w8, [sp, #40]
   2ceec:	ldr	x1, [sp, #32]
   2cef0:	and	w0, w8, #0x1
   2cef4:	bl	2cf28 <__gxx_personality_v0@@Base+0x724>
   2cef8:	ldr	x1, [sp, #32]
   2cefc:	mov	w0, #0x1                   	// #1
   2cf00:	bl	2cf28 <__gxx_personality_v0@@Base+0x724>
   2cf04:	mov	w0, #0x1                   	// #1
   2cf08:	mov	x1, x22
   2cf0c:	bl	2cf28 <__gxx_personality_v0@@Base+0x724>
   2cf10:	mov	w0, wzr
   2cf14:	mov	x1, x22
   2cf18:	bl	2cf28 <__gxx_personality_v0@@Base+0x724>
   2cf1c:	ldr	x1, [sp, #32]
   2cf20:	mov	w0, wzr
   2cf24:	bl	2cf28 <__gxx_personality_v0@@Base+0x724>
   2cf28:	stp	x29, x30, [sp, #-32]!
   2cf2c:	stp	x20, x19, [sp, #16]
   2cf30:	mov	x29, sp
   2cf34:	mov	w20, w0
   2cf38:	mov	x0, x1
   2cf3c:	mov	x19, x1
   2cf40:	bl	ed90 <__cxa_begin_catch@plt>
   2cf44:	tbz	w20, #0, 2cf50 <__gxx_personality_v0@@Base+0x74c>
   2cf48:	ldur	x0, [x19, #-56]
   2cf4c:	bl	292fc <_ZSt13get_terminatev@@Base+0x10>
   2cf50:	bl	eeb0 <_ZSt9terminatev@plt>

000000000002cf54 <__cxa_call_unexpected@@Base>:
   2cf54:	sub	sp, sp, #0xa0
   2cf58:	stp	x29, x30, [sp, #64]
   2cf5c:	stp	x28, x27, [sp, #80]
   2cf60:	stp	x26, x25, [sp, #96]
   2cf64:	stp	x24, x23, [sp, #112]
   2cf68:	stp	x22, x21, [sp, #128]
   2cf6c:	stp	x20, x19, [sp, #144]
   2cf70:	add	x29, sp, #0x40
   2cf74:	cbnz	x0, 2cf80 <__cxa_call_unexpected@@Base+0x2c>
   2cf78:	mov	x1, xzr
   2cf7c:	bl	2cf28 <__gxx_personality_v0@@Base+0x724>
   2cf80:	mov	x19, x0
   2cf84:	bl	ed90 <__cxa_begin_catch@plt>
   2cf88:	mov	x0, x19
   2cf8c:	bl	2c0d4 <_ZdaPvmSt11align_val_t@@Base+0x18>
   2cf90:	mov	w21, w0
   2cf94:	tbz	w0, #0, 2cfb8 <__cxa_call_unexpected@@Base+0x64>
   2cf98:	ldur	w8, [x19, #-36]
   2cf9c:	ldur	x20, [x19, #-24]
   2cfa0:	ldp	x0, x22, [x19, #-64]
   2cfa4:	sub	x24, x19, #0x60
   2cfa8:	mvn	w8, w8
   2cfac:	stur	x20, [x29, #-16]
   2cfb0:	sxtw	x25, w8
   2cfb4:	b	2cfc8 <__cxa_call_unexpected@@Base+0x74>
   2cfb8:	bl	ec30 <_ZSt13get_terminatev@plt>
   2cfbc:	mov	x22, x0
   2cfc0:	bl	eaf0 <_ZSt14get_unexpectedv@plt>
   2cfc4:	mov	x24, xzr
   2cfc8:	bl	292bc <_ZSt9terminatev@@Base+0x40>
   2cfcc:	str	x22, [sp]
   2cfd0:	bl	ed90 <__cxa_begin_catch@plt>
   2cfd4:	tbz	w21, #0, 2d220 <__cxa_call_unexpected@@Base+0x2cc>
   2cfd8:	add	x8, x20, #0x1
   2cfdc:	stur	x8, [x29, #-16]
   2cfe0:	ldrb	w1, [x20]
   2cfe4:	sub	x0, x29, #0x10
   2cfe8:	bl	2d2cc <__cxa_call_unexpected@@Base+0x378>
   2cfec:	ldur	x8, [x29, #-16]
   2cff0:	add	x9, x8, #0x1
   2cff4:	stur	x9, [x29, #-16]
   2cff8:	ldrb	w21, [x8]
   2cffc:	cmp	x21, #0xff
   2d000:	b.eq	2d290 <__cxa_call_unexpected@@Base+0x33c>  // b.none
   2d004:	mov	x23, x9
   2d008:	mov	x8, xzr
   2d00c:	mov	x27, xzr
   2d010:	ldrb	w9, [x23], #1
   2d014:	and	x10, x9, #0x7f
   2d018:	lsl	x10, x10, x8
   2d01c:	orr	x27, x10, x27
   2d020:	add	x8, x8, #0x7
   2d024:	tbnz	w9, #7, 2d010 <__cxa_call_unexpected@@Base+0xbc>
   2d028:	stur	x23, [x29, #-16]
   2d02c:	bl	ec10 <__cxa_get_globals_fast@plt>
   2d030:	str	x0, [sp, #8]
   2d034:	ldr	x8, [sp, #8]
   2d038:	ldr	x8, [x8]
   2d03c:	cbz	x8, 2d290 <__cxa_call_unexpected@@Base+0x33c>
   2d040:	mov	x26, x8
   2d044:	add	x20, x8, #0x60
   2d048:	mov	x0, x20
   2d04c:	bl	2c0d4 <_ZdaPvmSt11align_val_t@@Base+0x18>
   2d050:	cmp	x26, x24
   2d054:	add	x8, x23, x27
   2d058:	str	x8, [sp, #32]
   2d05c:	b.eq	2d148 <__cxa_call_unexpected@@Base+0x1f4>  // b.none
   2d060:	eor	w8, w0, #0x1
   2d064:	tbnz	w8, #0, 2d148 <__cxa_call_unexpected@@Base+0x1f4>
   2d068:	ldr	x8, [x26, #16]
   2d06c:	str	x8, [sp, #24]
   2d070:	mov	x0, x20
   2d074:	bl	2c0cc <_ZdaPvmSt11align_val_t@@Base+0x10>
   2d078:	mov	x8, #0x2b01                	// #11009
   2d07c:	movk	x8, #0x432b, lsl #16
   2d080:	movk	x8, #0x4e47, lsl #32
   2d084:	movk	x8, #0x434c, lsl #48
   2d088:	cmp	x0, x8
   2d08c:	b.ne	2d098 <__cxa_call_unexpected@@Base+0x144>  // b.any
   2d090:	ldr	x8, [x26, #8]
   2d094:	b	2d09c <__cxa_call_unexpected@@Base+0x148>
   2d098:	add	x8, x26, #0x80
   2d09c:	and	x28, x21, #0xf
   2d0a0:	mov	w10, #0x1c1d                	// #7197
   2d0a4:	lsr	w10, w10, w28
   2d0a8:	str	x8, [sp, #16]
   2d0ac:	mov	x9, xzr
   2d0b0:	mov	x8, xzr
   2d0b4:	add	x24, x25, x27
   2d0b8:	and	w22, w10, #0x1
   2d0bc:	b	2d0c8 <__cxa_call_unexpected@@Base+0x174>
   2d0c0:	add	x9, x9, #0x7
   2d0c4:	add	x24, x24, #0x1
   2d0c8:	ldrb	w10, [x23, x24]
   2d0cc:	and	x11, x10, #0x7f
   2d0d0:	lsl	x11, x11, x9
   2d0d4:	orr	x8, x11, x8
   2d0d8:	tbnz	w10, #7, 2d0c0 <__cxa_call_unexpected@@Base+0x16c>
   2d0dc:	cbz	x8, 2d148 <__cxa_call_unexpected@@Base+0x1f4>
   2d0e0:	ldr	x9, [sp, #32]
   2d0e4:	cmp	w28, #0xc
   2d0e8:	stur	x9, [x29, #-8]
   2d0ec:	b.hi	2d20c <__cxa_call_unexpected@@Base+0x2b8>  // b.pmore
   2d0f0:	cbz	w22, 2d20c <__cxa_call_unexpected@@Base+0x2b8>
   2d0f4:	adrp	x9, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2d0f8:	add	x9, x9, #0xb48
   2d0fc:	ldr	x9, [x9, x28, lsl #3]
   2d100:	sub	x0, x29, #0x8
   2d104:	mov	w1, w21
   2d108:	lsl	x9, x8, x9
   2d10c:	ldr	x8, [sp, #32]
   2d110:	sub	x8, x8, x9
   2d114:	stur	x8, [x29, #-8]
   2d118:	bl	2d2cc <__cxa_call_unexpected@@Base+0x378>
   2d11c:	ldp	x8, x1, [sp, #16]
   2d120:	stur	x8, [x29, #-8]
   2d124:	ldr	x8, [x0]
   2d128:	ldr	x8, [x8, #32]
   2d12c:	sub	x2, x29, #0x8
   2d130:	blr	x8
   2d134:	tbnz	w0, #0, 2d25c <__cxa_call_unexpected@@Base+0x308>
   2d138:	mov	x9, xzr
   2d13c:	mov	x8, xzr
   2d140:	add	x24, x24, #0x1
   2d144:	b	2d0c8 <__cxa_call_unexpected@@Base+0x174>
   2d148:	adrp	x12, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2d14c:	ldr	x12, [x12, #3936]
   2d150:	adrp	x22, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2d154:	add	w10, w21, #0x6
   2d158:	mov	w11, #0x747                 	// #1863
   2d15c:	add	x12, x12, #0x10
   2d160:	stur	x12, [x29, #-24]
   2d164:	ldr	x22, [x22, #4032]
   2d168:	ldr	x20, [sp, #32]
   2d16c:	and	x24, x10, #0xf
   2d170:	add	x25, x25, x27
   2d174:	adrp	x27, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2d178:	lsr	w10, w11, w24
   2d17c:	mov	x9, xzr
   2d180:	mov	x8, xzr
   2d184:	add	x27, x27, #0xbb0
   2d188:	sub	x28, x29, #0x18
   2d18c:	and	w26, w10, #0x1
   2d190:	b	2d19c <__cxa_call_unexpected@@Base+0x248>
   2d194:	add	x9, x9, #0x7
   2d198:	add	x25, x25, #0x1
   2d19c:	ldrb	w10, [x23, x25]
   2d1a0:	and	x11, x10, #0x7f
   2d1a4:	lsl	x11, x11, x9
   2d1a8:	orr	x8, x11, x8
   2d1ac:	tbnz	w10, #7, 2d194 <__cxa_call_unexpected@@Base+0x240>
   2d1b0:	cbz	x8, 2d218 <__cxa_call_unexpected@@Base+0x2c4>
   2d1b4:	cmp	w24, #0xa
   2d1b8:	stur	x20, [x29, #-8]
   2d1bc:	b.hi	2d20c <__cxa_call_unexpected@@Base+0x2b8>  // b.pmore
   2d1c0:	cbz	w26, 2d20c <__cxa_call_unexpected@@Base+0x2b8>
   2d1c4:	ldr	x9, [x27, x24, lsl #3]
   2d1c8:	sub	x0, x29, #0x8
   2d1cc:	mov	w1, w21
   2d1d0:	lsl	x8, x8, x9
   2d1d4:	sub	x8, x20, x8
   2d1d8:	stur	x8, [x29, #-8]
   2d1dc:	bl	2d2cc <__cxa_call_unexpected@@Base+0x378>
   2d1e0:	stur	x28, [x29, #-8]
   2d1e4:	ldr	x8, [x0]
   2d1e8:	ldr	x8, [x8, #32]
   2d1ec:	sub	x2, x29, #0x8
   2d1f0:	mov	x1, x22
   2d1f4:	blr	x8
   2d1f8:	tbnz	w0, #0, 2d22c <__cxa_call_unexpected@@Base+0x2d8>
   2d1fc:	mov	x9, xzr
   2d200:	mov	x8, xzr
   2d204:	add	x25, x25, #0x1
   2d208:	b	2d19c <__cxa_call_unexpected@@Base+0x248>
   2d20c:	mov	w0, #0x1                   	// #1
   2d210:	mov	x1, x19
   2d214:	bl	2cf28 <__gxx_personality_v0@@Base+0x724>
   2d218:	sub	x0, x29, #0x18
   2d21c:	bl	ebf0 <_ZNSt13bad_exceptionD1Ev@plt>
   2d220:	bl	eb60 <__cxa_end_catch@plt>
   2d224:	ldr	x0, [sp]
   2d228:	bl	292fc <_ZSt13get_terminatev@@Base+0x10>
   2d22c:	bl	eb60 <__cxa_end_catch@plt>
   2d230:	mov	w0, #0x8                   	// #8
   2d234:	bl	eb80 <__cxa_allocate_exception@plt>
   2d238:	adrp	x8, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2d23c:	ldr	x8, [x8, #3936]
   2d240:	add	x8, x8, #0x10
   2d244:	str	x8, [x0]
   2d248:	adrp	x1, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2d24c:	adrp	x2, 48000 <_ZTISt14overflow_error@@Base-0x20>
   2d250:	ldr	x1, [x1, #4032]
   2d254:	ldr	x2, [x2, #3888]
   2d258:	bl	edb0 <__cxa_throw@plt>
   2d25c:	ldr	w8, [x26, #56]
   2d260:	ldr	x9, [sp, #8]
   2d264:	neg	w8, w8
   2d268:	str	w8, [x26, #56]
   2d26c:	ldr	w8, [x9, #8]
   2d270:	add	w8, w8, #0x1
   2d274:	str	w8, [x9, #8]
   2d278:	bl	eb60 <__cxa_end_catch@plt>
   2d27c:	bl	eb60 <__cxa_end_catch@plt>
   2d280:	mov	x0, x20
   2d284:	bl	ed90 <__cxa_begin_catch@plt>
   2d288:	bl	eda0 <__cxa_rethrow@plt>
   2d28c:	b	2d25c <__cxa_call_unexpected@@Base+0x308>
   2d290:	ldr	x0, [sp]
   2d294:	bl	292fc <_ZSt13get_terminatev@@Base+0x10>
   2d298:	b	2d2b0 <__cxa_call_unexpected@@Base+0x35c>
   2d29c:	b	2d2a8 <__cxa_call_unexpected@@Base+0x354>
   2d2a0:	b	2d2a8 <__cxa_call_unexpected@@Base+0x354>
   2d2a4:	b	2d2a8 <__cxa_call_unexpected@@Base+0x354>
   2d2a8:	mov	x19, x0
   2d2ac:	b	2d2bc <__cxa_call_unexpected@@Base+0x368>
   2d2b0:	mov	x19, x0
   2d2b4:	sub	x0, x29, #0x18
   2d2b8:	bl	ebf0 <_ZNSt13bad_exceptionD1Ev@plt>
   2d2bc:	bl	eb60 <__cxa_end_catch@plt>
   2d2c0:	mov	x0, x19
   2d2c4:	bl	eea0 <_Unwind_Resume@plt>
   2d2c8:	bl	29260 <__cxa_guard_abort@@Base+0x9c>
   2d2cc:	stp	x29, x30, [sp, #-16]!
   2d2d0:	mov	x29, sp
   2d2d4:	and	w9, w1, #0xff
   2d2d8:	cmp	w9, #0xff
   2d2dc:	b.eq	2d31c <__cxa_call_unexpected@@Base+0x3c8>  // b.none
   2d2e0:	and	w8, w9, #0xf
   2d2e4:	cmp	w8, #0xc
   2d2e8:	b.hi	2d414 <__cxa_call_unexpected@@Base+0x4c0>  // b.pmore
   2d2ec:	ldr	x11, [x0]
   2d2f0:	adrp	x10, 30000 <__cxa_thread_atexit@@Base+0x2be8>
   2d2f4:	add	x10, x10, #0xb38
   2d2f8:	adr	x12, 2d308 <__cxa_call_unexpected@@Base+0x3b4>
   2d2fc:	ldrb	w13, [x10, x8]
   2d300:	add	x12, x12, x13, lsl #2
   2d304:	br	x12
   2d308:	mov	x10, x11
   2d30c:	ldr	x8, [x10], #8
   2d310:	ubfx	w12, w9, #4, #3
   2d314:	cbnz	w12, 2d3d4 <__cxa_call_unexpected@@Base+0x480>
   2d318:	b	2d3e4 <__cxa_call_unexpected@@Base+0x490>
   2d31c:	mov	x8, xzr
   2d320:	b	2d3f4 <__cxa_call_unexpected@@Base+0x4a0>
   2d324:	mov	x12, xzr
   2d328:	mov	x8, xzr
   2d32c:	mov	x10, x11
   2d330:	ldrb	w13, [x10], #1
   2d334:	and	x14, x13, #0x7f
   2d338:	lsl	x14, x14, x12
   2d33c:	orr	x8, x14, x8
   2d340:	add	x12, x12, #0x7
   2d344:	tbnz	w13, #7, 2d330 <__cxa_call_unexpected@@Base+0x3dc>
   2d348:	b	2d3cc <__cxa_call_unexpected@@Base+0x478>
   2d34c:	mov	x10, x11
   2d350:	ldrh	w8, [x10], #2
   2d354:	ubfx	w12, w9, #4, #3
   2d358:	cbnz	w12, 2d3d4 <__cxa_call_unexpected@@Base+0x480>
   2d35c:	b	2d3e4 <__cxa_call_unexpected@@Base+0x490>
   2d360:	mov	x10, x11
   2d364:	ldr	w8, [x10], #4
   2d368:	ubfx	w12, w9, #4, #3
   2d36c:	cbnz	w12, 2d3d4 <__cxa_call_unexpected@@Base+0x480>
   2d370:	b	2d3e4 <__cxa_call_unexpected@@Base+0x490>
   2d374:	mov	x12, xzr
   2d378:	mov	x8, xzr
   2d37c:	mov	x10, x11
   2d380:	ldrb	w13, [x10], #1
   2d384:	and	x14, x13, #0x7f
   2d388:	lsl	x14, x14, x12
   2d38c:	orr	x8, x14, x8
   2d390:	add	x12, x12, #0x7
   2d394:	tbnz	w13, #7, 2d380 <__cxa_call_unexpected@@Base+0x42c>
   2d398:	cmp	x12, #0x40
   2d39c:	and	w13, w13, #0x40
   2d3a0:	mov	x14, #0xffffffffffffffff    	// #-1
   2d3a4:	cset	w15, cc  // cc = lo, ul, last
   2d3a8:	lsl	x12, x14, x12
   2d3ac:	tst	w15, w13, lsr #6
   2d3b0:	csel	x12, x12, xzr, ne  // ne = any
   2d3b4:	orr	x8, x8, x12
   2d3b8:	ubfx	w12, w9, #4, #3
   2d3bc:	cbnz	w12, 2d3d4 <__cxa_call_unexpected@@Base+0x480>
   2d3c0:	b	2d3e4 <__cxa_call_unexpected@@Base+0x490>
   2d3c4:	mov	x10, x11
   2d3c8:	ldrsh	x8, [x10], #2
   2d3cc:	ubfx	w12, w9, #4, #3
   2d3d0:	cbz	w12, 2d3e4 <__cxa_call_unexpected@@Base+0x490>
   2d3d4:	cmp	w12, #0x1
   2d3d8:	b.ne	2d414 <__cxa_call_unexpected@@Base+0x4c0>  // b.any
   2d3dc:	cbz	x8, 2d3f0 <__cxa_call_unexpected@@Base+0x49c>
   2d3e0:	add	x8, x8, x11
   2d3e4:	cbz	x8, 2d3f0 <__cxa_call_unexpected@@Base+0x49c>
   2d3e8:	tbz	w9, #7, 2d3f0 <__cxa_call_unexpected@@Base+0x49c>
   2d3ec:	ldr	x8, [x8]
   2d3f0:	str	x10, [x0]
   2d3f4:	mov	x0, x8
   2d3f8:	ldp	x29, x30, [sp], #16
   2d3fc:	ret
   2d400:	mov	x10, x11
   2d404:	ldrsw	x8, [x10], #4
   2d408:	ubfx	w12, w9, #4, #3
   2d40c:	cbnz	w12, 2d3d4 <__cxa_call_unexpected@@Base+0x480>
   2d410:	b	2d3e4 <__cxa_call_unexpected@@Base+0x490>
   2d414:	bl	ecf0 <abort@plt>

000000000002d418 <__cxa_thread_atexit@@Base>:
   2d418:	stp	x29, x30, [sp, #-16]!
   2d41c:	mov	x29, sp
   2d420:	bl	eb70 <__cxa_thread_atexit_impl@plt>
   2d424:	ldp	x29, x30, [sp], #16
   2d428:	ret
   2d42c:	bl	eef0 <__cxa_call_unexpected@plt>

Disassembly of section .fini:

000000000002d430 <.fini>:
   2d430:	stp	x29, x30, [sp, #-16]!
   2d434:	mov	x29, sp
   2d438:	ldp	x29, x30, [sp], #16
   2d43c:	ret
